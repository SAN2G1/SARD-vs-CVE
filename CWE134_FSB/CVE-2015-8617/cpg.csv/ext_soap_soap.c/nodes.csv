command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1991132	File	data/converged/CVE-2015-8617_php-src/ext_soap_soap.c								
ANR	1991133	DeclStmt									
ANR	1991134	Decl							int	int	le_sdl
ANR	1991135	DeclStmt									
ANR	1991136	Decl							int	int	le_url
ANR	1991137	DeclStmt									
ANR	1991138	Decl							int	int	le_service
ANR	1991139	DeclStmt									
ANR	1991140	Decl							int	int	le_typemap
ANR	1991141	ClassDef	_soapHeader	37:8:1593:1990							
ANR	1991142	DeclStmt									
ANR	1991143	Decl							sdlFunctionPtr	sdlFunctionPtr	function
ANR	1991144	DeclStmt									
ANR	1991145	Decl							zval	zval	function_name
ANR	1991146	DeclStmt									
ANR	1991147	Decl							int	int	mustUnderstand
ANR	1991148	DeclStmt									
ANR	1991149	Decl							int	int	num_params
ANR	1991150	DeclStmt									
ANR	1991151	Decl							zval	zval *	parameters
ANR	1991152	DeclStmt									
ANR	1991153	Decl							zval	zval	retval
ANR	1991154	DeclStmt									
ANR	1991155	Decl							sdlSoapBindingFunctionHeaderPtr	sdlSoapBindingFunctionHeaderPtr	hdr
ANR	1991156	DeclStmt									
ANR	1991157	Decl							struct _soapHeader	struct _soapHeader *	next
ANR	1991158	DeclStmt									
ANR	1991159	Decl							_soapHeader	_soapHeader	soapHeader
ANR	1991160	DeclStmt									
ANR	1991161	Decl							void	"void ( sdlFunctionPtr function , smart_str * buf )"	function_to_string
ANR	1991162	DeclStmt									
ANR	1991163	Decl							void	"void ( sdlTypePtr type , smart_str * buf , int level )"	type_to_string
ANR	1991164	DeclStmt									
ANR	1991165	Decl							void	void ( zval * obj )	clear_soap_fault
ANR	1991166	DeclStmt									
ANR	1991167	Decl							void	"void ( zval * obj , char * fault_code_ns , char * fault_code , char * fault_string , char * fault_actor , zval * fault_detail , char * name )"	set_soap_fault
ANR	1991168	DeclStmt									
ANR	1991169	Decl							void	"void ( zval * fault , zval * obj , char * fault_code , char * fault_string , char * fault_actor , zval * fault_detail )"	add_soap_fault_ex
ANR	1991170	DeclStmt									
ANR	1991171	Decl							void	"void ( char * code , char * string , char * actor , zval * details , char * name )"	soap_server_fault
ANR	1991172	DeclStmt									
ANR	1991173	Decl							void	"void ( sdlFunctionPtr function , zval * fault , soapHeader * hdr )"	soap_server_fault_ex
ANR	1991174	DeclStmt									
ANR	1991175	Decl							sdlParamPtr	"sdlParamPtr ( sdlFunctionPtr function , char * param_name , int index , int )"	get_param
ANR	1991176	DeclStmt									
ANR	1991177	Decl							sdlFunctionPtr	"sdlFunctionPtr ( sdlPtr sdl , const char * function_name )"	get_function
ANR	1991178	DeclStmt									
ANR	1991179	Decl							sdlFunctionPtr	"sdlFunctionPtr ( sdlPtr sdl , xmlNodePtr node )"	get_doc_function
ANR	1991180	DeclStmt									
ANR	1991181	Decl							sdlFunctionPtr	"sdlFunctionPtr ( sdlPtr sdl , xmlDocPtr request , char * actor , zval * function_name , int * num_params , zval * * parameters , int * version , soapHeader * * headers )"	deserialize_function_call
ANR	1991182	DeclStmt									
ANR	1991183	Decl							xmlDocPtr	"xmlDocPtr ( sdlFunctionPtr function , char * function_name , char * uri , zval * ret , soapHeader * headers , int version )"	serialize_response_call
ANR	1991184	DeclStmt									
ANR	1991185	Decl							xmlDocPtr	"xmlDocPtr ( zval * this_ptr , sdlFunctionPtr function , char * function_name , char * uri , zval * arguments , int arg_count , int version , HashTable * soap_headers )"	serialize_function_call
ANR	1991186	DeclStmt									
ANR	1991187	Decl							xmlNodePtr	"xmlNodePtr ( sdlParamPtr param , zval * param_val , int index , char * name , int style , xmlNodePtr parent )"	serialize_parameter
ANR	1991188	DeclStmt									
ANR	1991189	Decl							xmlNodePtr	"xmlNodePtr ( zval * val , sdlParamPtr param , char * paramName , int style , xmlNodePtr parent )"	serialize_zval
ANR	1991190	DeclStmt									
ANR	1991191	Decl							void	void ( void * service )	delete_service
ANR	1991192	DeclStmt									
ANR	1991193	Decl							void	void ( void * handle )	delete_url
ANR	1991194	DeclStmt									
ANR	1991195	Decl							void	void ( void * hashtable )	delete_hashtable
ANR	1991196	DeclStmt									
ANR	1991197	Decl							void	"void ( int error_num , const char * error_filename , const uint error_lineno , const char * format , va_list args )"	soap_error_handler
ANR	1991198	DeclStmt									
ANR	1991199	Decl							zend_bool	zend_bool	_old_handler
ANR	1991200	DeclStmt									
ANR	1991201	Decl							char	char *	_old_error_code
ANR	1991202	DeclStmt									
ANR	1991203	Decl							zend_object	zend_object *	_old_error_object
ANR	1991204	DeclStmt									
ANR	1991205	Decl							int	int	_old_soap_version
ANR	1991206	DeclStmt									
ANR	1991207	Decl							zend_bool	zend_bool	_old_handler
ANR	1991208	DeclStmt									
ANR	1991209	Decl							char	char *	_old_error_code
ANR	1991210	DeclStmt									
ANR	1991211	Decl							zend_object	zend_object *	_old_error_object
ANR	1991212	DeclStmt									
ANR	1991213	Decl							int	int	_old_soap_version
ANR	1991214	DeclStmt									
ANR	1991215	Decl							zend_bool	zend_bool	_old_in_compilation
ANR	1991216	DeclStmt									
ANR	1991217	Decl							zend_execute_data	zend_execute_data *	_old_current_execute_data
ANR	1991218	DeclStmt									
ANR	1991219	Decl							zval	zval *	_old_stack_top
ANR	1991220	DeclStmt									
ANR	1991221	Decl							int	int	_bailout
ANR	1991222	DeclStmt									
ANR	1991223	Decl							zend_vm_stack	zend_vm_stack	tmp
ANR	1991224	DeclStmt									
ANR	1991225	Decl							zval	zval *	__tmp
ANR	1991226	DeclStmt									
ANR	1991227	Decl							zval	zval *	tmp
ANR	1991228	DeclStmt									
ANR	1991229	Decl							zend_class_entry	zend_class_entry *	soap_class_entry
ANR	1991230	DeclStmt									
ANR	1991231	Decl							zend_class_entry	zend_class_entry *	soap_server_class_entry
ANR	1991232	DeclStmt									
ANR	1991233	Decl							zend_class_entry	zend_class_entry *	soap_fault_class_entry
ANR	1991234	DeclStmt									
ANR	1991235	Decl							zend_class_entry	zend_class_entry *	soap_header_class_entry
ANR	1991236	DeclStmt									
ANR	1991237	Decl							zend_class_entry	zend_class_entry *	soap_param_class_entry
ANR	1991238	DeclStmt									
ANR	1991239	Decl							zend_class_entry	zend_class_entry *	soap_var_class_entry
ANR	1991240	DeclStmt									
ANR	1991241	Decl							"void ( * ) ( int , const char * , const uint , const char * , va_list )"	"void ( * ) ( int , const char * , const uint , const char * , va_list )"	old_error_handler
ANR	1991242	DeclStmt									
ANR	1991243	Decl							va_list	va_list	copy
ANR	1991244	DeclStmt									
ANR	1991245	Decl							const zend_function_entry	const zend_function_entry [ ]	soap_functions
ANR	1991246	DeclStmt									
ANR	1991247	Decl							const zend_function_entry	const zend_function_entry [ ]	soap_fault_functions
ANR	1991248	DeclStmt									
ANR	1991249	Decl							const zend_function_entry	const zend_function_entry [ ]	soap_server_functions
ANR	1991250	DeclStmt									
ANR	1991251	Decl							const zend_function_entry	const zend_function_entry [ ]	soap_client_functions
ANR	1991252	DeclStmt									
ANR	1991253	Decl							const zend_function_entry	const zend_function_entry [ ]	soap_var_functions
ANR	1991254	DeclStmt									
ANR	1991255	Decl							const zend_function_entry	const zend_function_entry [ ]	soap_param_functions
ANR	1991256	DeclStmt									
ANR	1991257	Decl							const zend_function_entry	const zend_function_entry [ ]	soap_header_functions
ANR	1991258	DeclStmt									
ANR	1991259	Decl							zend_module_entry	zend_module_entry	soap_module_entry
ANR	1991260	DeclStmt									
ANR	1991261	Decl							char	char *	p
ANR	1991262	DeclStmt									
ANR	1991263	Decl							char	char *	base
ANR	1991264	DeclStmt									
ANR	1991265	Decl							char	char *	base
ANR	1991266	DeclStmt									
ANR	1991267	Decl							char	char *	p
ANR	1991268	DeclStmt									
ANR	1991269	Decl							char	char *	p2
ANR	1991270	DeclStmt									
ANR	1991271	Decl							HashTable	HashTable	defEnc
ANR	1991272	Decl							HashTable	HashTable	defEncIndex
ANR	1991273	Decl							HashTable	HashTable	defEncNs
ANR	1991274	Function	php_soap_prepare_globals	536:0:18571:20219							
ANR	1991275	FunctionDef	php_soap_prepare_globals ()		1991274	0					
ANR	1991276	CompoundStatement		537:0:18610:20219	1991274	0					
ANR	1991277	IdentifierDeclStatement	int i ;	538:1:18613:18618	1991274	0	True				
ANR	1991278	IdentifierDecl	i		1991274	0					
ANR	1991279	IdentifierDeclType	int		1991274	0					
ANR	1991280	Identifier	i		1991274	1					
ANR	1991281	IdentifierDeclStatement	encodePtr enc ;	539:1:18621:18634	1991274	1	True				
ANR	1991282	IdentifierDecl	enc		1991274	0					
ANR	1991283	IdentifierDeclType	encodePtr		1991274	0					
ANR	1991284	Identifier	enc		1991274	1					
ANR	1991285	ExpressionStatement	"zend_hash_init ( & defEnc , 0 , NULL , NULL , 1 )"	541:1:18638:18679	1991274	2	True				
ANR	1991286	CallExpression	"zend_hash_init ( & defEnc , 0 , NULL , NULL , 1 )"		1991274	0					
ANR	1991287	Callee	zend_hash_init		1991274	0					
ANR	1991288	Identifier	zend_hash_init		1991274	0					
ANR	1991289	ArgumentList	& defEnc		1991274	1					
ANR	1991290	Argument	& defEnc		1991274	0					
ANR	1991291	UnaryOperationExpression	& defEnc		1991274	0					
ANR	1991292	UnaryOperator	&		1991274	0					
ANR	1991293	Identifier	defEnc		1991274	1					
ANR	1991294	Argument	0		1991274	1					
ANR	1991295	PrimaryExpression	0		1991274	0					
ANR	1991296	Argument	NULL		1991274	2					
ANR	1991297	Identifier	NULL		1991274	0					
ANR	1991298	Argument	NULL		1991274	3					
ANR	1991299	Identifier	NULL		1991274	0					
ANR	1991300	Argument	1		1991274	4					
ANR	1991301	PrimaryExpression	1		1991274	0					
ANR	1991302	ExpressionStatement	"zend_hash_init ( & defEncIndex , 0 , NULL , NULL , 1 )"	542:1:18682:18728	1991274	3	True				
ANR	1991303	CallExpression	"zend_hash_init ( & defEncIndex , 0 , NULL , NULL , 1 )"		1991274	0					
ANR	1991304	Callee	zend_hash_init		1991274	0					
ANR	1991305	Identifier	zend_hash_init		1991274	0					
ANR	1991306	ArgumentList	& defEncIndex		1991274	1					
ANR	1991307	Argument	& defEncIndex		1991274	0					
ANR	1991308	UnaryOperationExpression	& defEncIndex		1991274	0					
ANR	1991309	UnaryOperator	&		1991274	0					
ANR	1991310	Identifier	defEncIndex		1991274	1					
ANR	1991311	Argument	0		1991274	1					
ANR	1991312	PrimaryExpression	0		1991274	0					
ANR	1991313	Argument	NULL		1991274	2					
ANR	1991314	Identifier	NULL		1991274	0					
ANR	1991315	Argument	NULL		1991274	3					
ANR	1991316	Identifier	NULL		1991274	0					
ANR	1991317	Argument	1		1991274	4					
ANR	1991318	PrimaryExpression	1		1991274	0					
ANR	1991319	ExpressionStatement	"zend_hash_init ( & defEncNs , 0 , NULL , NULL , 1 )"	543:1:18731:18774	1991274	4	True				
ANR	1991320	CallExpression	"zend_hash_init ( & defEncNs , 0 , NULL , NULL , 1 )"		1991274	0					
ANR	1991321	Callee	zend_hash_init		1991274	0					
ANR	1991322	Identifier	zend_hash_init		1991274	0					
ANR	1991323	ArgumentList	& defEncNs		1991274	1					
ANR	1991324	Argument	& defEncNs		1991274	0					
ANR	1991325	UnaryOperationExpression	& defEncNs		1991274	0					
ANR	1991326	UnaryOperator	&		1991274	0					
ANR	1991327	Identifier	defEncNs		1991274	1					
ANR	1991328	Argument	0		1991274	1					
ANR	1991329	PrimaryExpression	0		1991274	0					
ANR	1991330	Argument	NULL		1991274	2					
ANR	1991331	Identifier	NULL		1991274	0					
ANR	1991332	Argument	NULL		1991274	3					
ANR	1991333	Identifier	NULL		1991274	0					
ANR	1991334	Argument	1		1991274	4					
ANR	1991335	PrimaryExpression	1		1991274	0					
ANR	1991336	ExpressionStatement	i = 0	545:1:18778:18783	1991274	5	True				
ANR	1991337	AssignmentExpression	i = 0		1991274	0		=			
ANR	1991338	Identifier	i		1991274	0					
ANR	1991339	PrimaryExpression	0		1991274	1					
ANR	1991340	DoStatement	do		1991274	6					
ANR	1991341	CompoundStatement		10:4:178:178	1991274	0					
ANR	1991342	ExpressionStatement	enc = & defaultEncoding [ i ]	547:2:18793:18818	1991274	0	True				
ANR	1991343	AssignmentExpression	enc = & defaultEncoding [ i ]		1991274	0		=			
ANR	1991344	Identifier	enc		1991274	0					
ANR	1991345	UnaryOperationExpression	& defaultEncoding [ i ]		1991274	1					
ANR	1991346	UnaryOperator	&		1991274	0					
ANR	1991347	ArrayIndexing	defaultEncoding [ i ]		1991274	1					
ANR	1991348	Identifier	defaultEncoding		1991274	0					
ANR	1991349	Identifier	i		1991274	1					
ANR	1991350	IfStatement	if ( defaultEncoding [ i ] . details . type_str )		1991274	1					
ANR	1991351	Condition	defaultEncoding [ i ] . details . type_str	550:6:18876:18910	1991274	0	True				
ANR	1991352	MemberAccess	defaultEncoding [ i ] . details . type_str		1991274	0					
ANR	1991353	MemberAccess	defaultEncoding [ i ] . details		1991274	0					
ANR	1991354	ArrayIndexing	defaultEncoding [ i ]		1991274	0					
ANR	1991355	Identifier	defaultEncoding		1991274	0					
ANR	1991356	Identifier	i		1991274	1					
ANR	1991357	Identifier	details		1991274	1					
ANR	1991358	Identifier	type_str		1991274	1					
ANR	1991359	CompoundStatement		14:43:302:302	1991274	1					
ANR	1991360	IfStatement	if ( defaultEncoding [ i ] . details . ns != NULL )		1991274	0					
ANR	1991361	Condition	defaultEncoding [ i ] . details . ns != NULL	551:7:18922:18958	1991274	0	True				
ANR	1991362	EqualityExpression	defaultEncoding [ i ] . details . ns != NULL		1991274	0		!=			
ANR	1991363	MemberAccess	defaultEncoding [ i ] . details . ns		1991274	0					
ANR	1991364	MemberAccess	defaultEncoding [ i ] . details		1991274	0					
ANR	1991365	ArrayIndexing	defaultEncoding [ i ]		1991274	0					
ANR	1991366	Identifier	defaultEncoding		1991274	0					
ANR	1991367	Identifier	i		1991274	1					
ANR	1991368	Identifier	details		1991274	1					
ANR	1991369	Identifier	ns		1991274	1					
ANR	1991370	Identifier	NULL		1991274	1					
ANR	1991371	CompoundStatement		16:4:356:369	1991274	1					
ANR	1991372	IdentifierDeclStatement	char * ns_type ;	552:4:18967:18980	1991274	0	True				
ANR	1991373	IdentifierDecl	* ns_type		1991274	0					
ANR	1991374	IdentifierDeclType	char *		1991274	0					
ANR	1991375	Identifier	ns_type		1991274	1					
ANR	1991376	ExpressionStatement	"spprintf ( & ns_type , 0 , ""%s:%s"" , defaultEncoding [ i ] . details . ns , defaultEncoding [ i ] . details . type_str )"	553:4:18986:19084	1991274	1	True				
ANR	1991377	CallExpression	"spprintf ( & ns_type , 0 , ""%s:%s"" , defaultEncoding [ i ] . details . ns , defaultEncoding [ i ] . details . type_str )"		1991274	0					
ANR	1991378	Callee	spprintf		1991274	0					
ANR	1991379	Identifier	spprintf		1991274	0					
ANR	1991380	ArgumentList	& ns_type		1991274	1					
ANR	1991381	Argument	& ns_type		1991274	0					
ANR	1991382	UnaryOperationExpression	& ns_type		1991274	0					
ANR	1991383	UnaryOperator	&		1991274	0					
ANR	1991384	Identifier	ns_type		1991274	1					
ANR	1991385	Argument	0		1991274	1					
ANR	1991386	PrimaryExpression	0		1991274	0					
ANR	1991387	Argument	"""%s:%s"""		1991274	2					
ANR	1991388	PrimaryExpression	"""%s:%s"""		1991274	0					
ANR	1991389	Argument	defaultEncoding [ i ] . details . ns		1991274	3					
ANR	1991390	MemberAccess	defaultEncoding [ i ] . details . ns		1991274	0					
ANR	1991391	MemberAccess	defaultEncoding [ i ] . details		1991274	0					
ANR	1991392	ArrayIndexing	defaultEncoding [ i ]		1991274	0					
ANR	1991393	Identifier	defaultEncoding		1991274	0					
ANR	1991394	Identifier	i		1991274	1					
ANR	1991395	Identifier	details		1991274	1					
ANR	1991396	Identifier	ns		1991274	1					
ANR	1991397	Argument	defaultEncoding [ i ] . details . type_str		1991274	4					
ANR	1991398	MemberAccess	defaultEncoding [ i ] . details . type_str		1991274	0					
ANR	1991399	MemberAccess	defaultEncoding [ i ] . details		1991274	0					
ANR	1991400	ArrayIndexing	defaultEncoding [ i ]		1991274	0					
ANR	1991401	Identifier	defaultEncoding		1991274	0					
ANR	1991402	Identifier	i		1991274	1					
ANR	1991403	Identifier	details		1991274	1					
ANR	1991404	Identifier	type_str		1991274	1					
ANR	1991405	ExpressionStatement	"zend_hash_str_add_ptr ( & defEnc , ns_type , strlen ( ns_type ) , enc )"	554:4:19090:19151	1991274	2	True				
ANR	1991406	CallExpression	"zend_hash_str_add_ptr ( & defEnc , ns_type , strlen ( ns_type ) , enc )"		1991274	0					
ANR	1991407	Callee	zend_hash_str_add_ptr		1991274	0					
ANR	1991408	Identifier	zend_hash_str_add_ptr		1991274	0					
ANR	1991409	ArgumentList	& defEnc		1991274	1					
ANR	1991410	Argument	& defEnc		1991274	0					
ANR	1991411	UnaryOperationExpression	& defEnc		1991274	0					
ANR	1991412	UnaryOperator	&		1991274	0					
ANR	1991413	Identifier	defEnc		1991274	1					
ANR	1991414	Argument	ns_type		1991274	1					
ANR	1991415	Identifier	ns_type		1991274	0					
ANR	1991416	Argument	strlen ( ns_type )		1991274	2					
ANR	1991417	CallExpression	strlen ( ns_type )		1991274	0					
ANR	1991418	Callee	strlen		1991274	0					
ANR	1991419	Identifier	strlen		1991274	0					
ANR	1991420	ArgumentList	ns_type		1991274	1					
ANR	1991421	Argument	ns_type		1991274	0					
ANR	1991422	Identifier	ns_type		1991274	0					
ANR	1991423	Argument	enc		1991274	3					
ANR	1991424	Identifier	enc		1991274	0					
ANR	1991425	ExpressionStatement	efree ( ns_type )	555:4:19157:19171	1991274	3	True				
ANR	1991426	CallExpression	efree ( ns_type )		1991274	0					
ANR	1991427	Callee	efree		1991274	0					
ANR	1991428	Identifier	efree		1991274	0					
ANR	1991429	ArgumentList	ns_type		1991274	1					
ANR	1991430	Argument	ns_type		1991274	0					
ANR	1991431	Identifier	ns_type		1991274	0					
ANR	1991432	ElseStatement	else		1991274	0					
ANR	1991433	CompoundStatement		20:10:572:572	1991274	0					
ANR	1991434	ExpressionStatement	"zend_hash_str_add_ptr ( & defEnc , defaultEncoding [ i ] . details . type_str , strlen ( defaultEncoding [ i ] . details . type_str ) , enc )"	557:4:19189:19306	1991274	0	True				
ANR	1991435	CallExpression	"zend_hash_str_add_ptr ( & defEnc , defaultEncoding [ i ] . details . type_str , strlen ( defaultEncoding [ i ] . details . type_str ) , enc )"		1991274	0					
ANR	1991436	Callee	zend_hash_str_add_ptr		1991274	0					
ANR	1991437	Identifier	zend_hash_str_add_ptr		1991274	0					
ANR	1991438	ArgumentList	& defEnc		1991274	1					
ANR	1991439	Argument	& defEnc		1991274	0					
ANR	1991440	UnaryOperationExpression	& defEnc		1991274	0					
ANR	1991441	UnaryOperator	&		1991274	0					
ANR	1991442	Identifier	defEnc		1991274	1					
ANR	1991443	Argument	defaultEncoding [ i ] . details . type_str		1991274	1					
ANR	1991444	MemberAccess	defaultEncoding [ i ] . details . type_str		1991274	0					
ANR	1991445	MemberAccess	defaultEncoding [ i ] . details		1991274	0					
ANR	1991446	ArrayIndexing	defaultEncoding [ i ]		1991274	0					
ANR	1991447	Identifier	defaultEncoding		1991274	0					
ANR	1991448	Identifier	i		1991274	1					
ANR	1991449	Identifier	details		1991274	1					
ANR	1991450	Identifier	type_str		1991274	1					
ANR	1991451	Argument	strlen ( defaultEncoding [ i ] . details . type_str )		1991274	2					
ANR	1991452	CallExpression	strlen ( defaultEncoding [ i ] . details . type_str )		1991274	0					
ANR	1991453	Callee	strlen		1991274	0					
ANR	1991454	Identifier	strlen		1991274	0					
ANR	1991455	ArgumentList	defaultEncoding [ i ] . details . type_str		1991274	1					
ANR	1991456	Argument	defaultEncoding [ i ] . details . type_str		1991274	0					
ANR	1991457	MemberAccess	defaultEncoding [ i ] . details . type_str		1991274	0					
ANR	1991458	MemberAccess	defaultEncoding [ i ] . details		1991274	0					
ANR	1991459	ArrayIndexing	defaultEncoding [ i ]		1991274	0					
ANR	1991460	Identifier	defaultEncoding		1991274	0					
ANR	1991461	Identifier	i		1991274	1					
ANR	1991462	Identifier	details		1991274	1					
ANR	1991463	Identifier	type_str		1991274	1					
ANR	1991464	Argument	enc		1991274	3					
ANR	1991465	Identifier	enc		1991274	0					
ANR	1991466	IfStatement	"if ( ! zend_hash_index_exists ( & defEncIndex , defaultEncoding [ i ] . details . type ) )"		1991274	2					
ANR	1991467	Condition	"! zend_hash_index_exists ( & defEncIndex , defaultEncoding [ i ] . details . type )"	561:6:19358:19427	1991274	0	True				
ANR	1991468	UnaryOperationExpression	"! zend_hash_index_exists ( & defEncIndex , defaultEncoding [ i ] . details . type )"		1991274	0					
ANR	1991469	UnaryOperator	!		1991274	0					
ANR	1991470	CallExpression	"zend_hash_index_exists ( & defEncIndex , defaultEncoding [ i ] . details . type )"		1991274	1					
ANR	1991471	Callee	zend_hash_index_exists		1991274	0					
ANR	1991472	Identifier	zend_hash_index_exists		1991274	0					
ANR	1991473	ArgumentList	& defEncIndex		1991274	1					
ANR	1991474	Argument	& defEncIndex		1991274	0					
ANR	1991475	UnaryOperationExpression	& defEncIndex		1991274	0					
ANR	1991476	UnaryOperator	&		1991274	0					
ANR	1991477	Identifier	defEncIndex		1991274	1					
ANR	1991478	Argument	defaultEncoding [ i ] . details . type		1991274	1					
ANR	1991479	MemberAccess	defaultEncoding [ i ] . details . type		1991274	0					
ANR	1991480	MemberAccess	defaultEncoding [ i ] . details		1991274	0					
ANR	1991481	ArrayIndexing	defaultEncoding [ i ]		1991274	0					
ANR	1991482	Identifier	defaultEncoding		1991274	0					
ANR	1991483	Identifier	i		1991274	1					
ANR	1991484	Identifier	details		1991274	1					
ANR	1991485	Identifier	type		1991274	1					
ANR	1991486	CompoundStatement		25:78:819:819	1991274	1					
ANR	1991487	ExpressionStatement	"zend_hash_index_update_ptr ( & defEncIndex , defaultEncoding [ i ] . details . type , enc )"	562:3:19435:19513	1991274	0	True				
ANR	1991488	CallExpression	"zend_hash_index_update_ptr ( & defEncIndex , defaultEncoding [ i ] . details . type , enc )"		1991274	0					
ANR	1991489	Callee	zend_hash_index_update_ptr		1991274	0					
ANR	1991490	Identifier	zend_hash_index_update_ptr		1991274	0					
ANR	1991491	ArgumentList	& defEncIndex		1991274	1					
ANR	1991492	Argument	& defEncIndex		1991274	0					
ANR	1991493	UnaryOperationExpression	& defEncIndex		1991274	0					
ANR	1991494	UnaryOperator	&		1991274	0					
ANR	1991495	Identifier	defEncIndex		1991274	1					
ANR	1991496	Argument	defaultEncoding [ i ] . details . type		1991274	1					
ANR	1991497	MemberAccess	defaultEncoding [ i ] . details . type		1991274	0					
ANR	1991498	MemberAccess	defaultEncoding [ i ] . details		1991274	0					
ANR	1991499	ArrayIndexing	defaultEncoding [ i ]		1991274	0					
ANR	1991500	Identifier	defaultEncoding		1991274	0					
ANR	1991501	Identifier	i		1991274	1					
ANR	1991502	Identifier	details		1991274	1					
ANR	1991503	Identifier	type		1991274	1					
ANR	1991504	Argument	enc		1991274	2					
ANR	1991505	Identifier	enc		1991274	0					
ANR	1991506	ExpressionStatement	i ++	564:2:19521:19524	1991274	3	True				
ANR	1991507	PostIncDecOperationExpression	i ++		1991274	0					
ANR	1991508	Identifier	i		1991274	0					
ANR	1991509	IncDec	++		1991274	1					
ANR	1991510	Condition	defaultEncoding [ i ] . details . type != END_KNOWN_TYPES	565:10:19536:19585	1991274	1	True				
ANR	1991511	EqualityExpression	defaultEncoding [ i ] . details . type != END_KNOWN_TYPES		1991274	0		!=			
ANR	1991512	MemberAccess	defaultEncoding [ i ] . details . type		1991274	0					
ANR	1991513	MemberAccess	defaultEncoding [ i ] . details		1991274	0					
ANR	1991514	ArrayIndexing	defaultEncoding [ i ]		1991274	0					
ANR	1991515	Identifier	defaultEncoding		1991274	0					
ANR	1991516	Identifier	i		1991274	1					
ANR	1991517	Identifier	details		1991274	1					
ANR	1991518	Identifier	type		1991274	1					
ANR	1991519	Identifier	END_KNOWN_TYPES		1991274	1					
ANR	1991520	ExpressionStatement	"zend_hash_str_add_ptr ( & defEncNs , XSD_1999_NAMESPACE , sizeof ( XSD_1999_NAMESPACE ) - 1 , XSD_NS_PREFIX )"	568:1:19616:19713	1991274	7	True				
ANR	1991521	CallExpression	"zend_hash_str_add_ptr ( & defEncNs , XSD_1999_NAMESPACE , sizeof ( XSD_1999_NAMESPACE ) - 1 , XSD_NS_PREFIX )"		1991274	0					
ANR	1991522	Callee	zend_hash_str_add_ptr		1991274	0					
ANR	1991523	Identifier	zend_hash_str_add_ptr		1991274	0					
ANR	1991524	ArgumentList	& defEncNs		1991274	1					
ANR	1991525	Argument	& defEncNs		1991274	0					
ANR	1991526	UnaryOperationExpression	& defEncNs		1991274	0					
ANR	1991527	UnaryOperator	&		1991274	0					
ANR	1991528	Identifier	defEncNs		1991274	1					
ANR	1991529	Argument	XSD_1999_NAMESPACE		1991274	1					
ANR	1991530	Identifier	XSD_1999_NAMESPACE		1991274	0					
ANR	1991531	Argument	sizeof ( XSD_1999_NAMESPACE ) - 1		1991274	2					
ANR	1991532	AdditiveExpression	sizeof ( XSD_1999_NAMESPACE ) - 1		1991274	0		-			
ANR	1991533	SizeofExpression	sizeof ( XSD_1999_NAMESPACE )		1991274	0					
ANR	1991534	Sizeof	sizeof		1991274	0					
ANR	1991535	SizeofOperand	XSD_1999_NAMESPACE		1991274	1					
ANR	1991536	PrimaryExpression	1		1991274	1					
ANR	1991537	Argument	XSD_NS_PREFIX		1991274	3					
ANR	1991538	Identifier	XSD_NS_PREFIX		1991274	0					
ANR	1991539	ExpressionStatement	"zend_hash_str_add_ptr ( & defEncNs , XSD_NAMESPACE , sizeof ( XSD_NAMESPACE ) - 1 , XSD_NS_PREFIX )"	569:1:19716:19803	1991274	8	True				
ANR	1991540	CallExpression	"zend_hash_str_add_ptr ( & defEncNs , XSD_NAMESPACE , sizeof ( XSD_NAMESPACE ) - 1 , XSD_NS_PREFIX )"		1991274	0					
ANR	1991541	Callee	zend_hash_str_add_ptr		1991274	0					
ANR	1991542	Identifier	zend_hash_str_add_ptr		1991274	0					
ANR	1991543	ArgumentList	& defEncNs		1991274	1					
ANR	1991544	Argument	& defEncNs		1991274	0					
ANR	1991545	UnaryOperationExpression	& defEncNs		1991274	0					
ANR	1991546	UnaryOperator	&		1991274	0					
ANR	1991547	Identifier	defEncNs		1991274	1					
ANR	1991548	Argument	XSD_NAMESPACE		1991274	1					
ANR	1991549	Identifier	XSD_NAMESPACE		1991274	0					
ANR	1991550	Argument	sizeof ( XSD_NAMESPACE ) - 1		1991274	2					
ANR	1991551	AdditiveExpression	sizeof ( XSD_NAMESPACE ) - 1		1991274	0		-			
ANR	1991552	SizeofExpression	sizeof ( XSD_NAMESPACE )		1991274	0					
ANR	1991553	Sizeof	sizeof		1991274	0					
ANR	1991554	SizeofOperand	XSD_NAMESPACE		1991274	1					
ANR	1991555	PrimaryExpression	1		1991274	1					
ANR	1991556	Argument	XSD_NS_PREFIX		1991274	3					
ANR	1991557	Identifier	XSD_NS_PREFIX		1991274	0					
ANR	1991558	ExpressionStatement	"zend_hash_str_add_ptr ( & defEncNs , XSI_NAMESPACE , sizeof ( XSI_NAMESPACE ) - 1 , XSI_NS_PREFIX )"	570:1:19806:19893	1991274	9	True				
ANR	1991559	CallExpression	"zend_hash_str_add_ptr ( & defEncNs , XSI_NAMESPACE , sizeof ( XSI_NAMESPACE ) - 1 , XSI_NS_PREFIX )"		1991274	0					
ANR	1991560	Callee	zend_hash_str_add_ptr		1991274	0					
ANR	1991561	Identifier	zend_hash_str_add_ptr		1991274	0					
ANR	1991562	ArgumentList	& defEncNs		1991274	1					
ANR	1991563	Argument	& defEncNs		1991274	0					
ANR	1991564	UnaryOperationExpression	& defEncNs		1991274	0					
ANR	1991565	UnaryOperator	&		1991274	0					
ANR	1991566	Identifier	defEncNs		1991274	1					
ANR	1991567	Argument	XSI_NAMESPACE		1991274	1					
ANR	1991568	Identifier	XSI_NAMESPACE		1991274	0					
ANR	1991569	Argument	sizeof ( XSI_NAMESPACE ) - 1		1991274	2					
ANR	1991570	AdditiveExpression	sizeof ( XSI_NAMESPACE ) - 1		1991274	0		-			
ANR	1991571	SizeofExpression	sizeof ( XSI_NAMESPACE )		1991274	0					
ANR	1991572	Sizeof	sizeof		1991274	0					
ANR	1991573	SizeofOperand	XSI_NAMESPACE		1991274	1					
ANR	1991574	PrimaryExpression	1		1991274	1					
ANR	1991575	Argument	XSI_NS_PREFIX		1991274	3					
ANR	1991576	Identifier	XSI_NS_PREFIX		1991274	0					
ANR	1991577	ExpressionStatement	"zend_hash_str_add_ptr ( & defEncNs , XML_NAMESPACE , sizeof ( XML_NAMESPACE ) - 1 , XML_NS_PREFIX )"	571:1:19896:19983	1991274	10	True				
ANR	1991578	CallExpression	"zend_hash_str_add_ptr ( & defEncNs , XML_NAMESPACE , sizeof ( XML_NAMESPACE ) - 1 , XML_NS_PREFIX )"		1991274	0					
ANR	1991579	Callee	zend_hash_str_add_ptr		1991274	0					
ANR	1991580	Identifier	zend_hash_str_add_ptr		1991274	0					
ANR	1991581	ArgumentList	& defEncNs		1991274	1					
ANR	1991582	Argument	& defEncNs		1991274	0					
ANR	1991583	UnaryOperationExpression	& defEncNs		1991274	0					
ANR	1991584	UnaryOperator	&		1991274	0					
ANR	1991585	Identifier	defEncNs		1991274	1					
ANR	1991586	Argument	XML_NAMESPACE		1991274	1					
ANR	1991587	Identifier	XML_NAMESPACE		1991274	0					
ANR	1991588	Argument	sizeof ( XML_NAMESPACE ) - 1		1991274	2					
ANR	1991589	AdditiveExpression	sizeof ( XML_NAMESPACE ) - 1		1991274	0		-			
ANR	1991590	SizeofExpression	sizeof ( XML_NAMESPACE )		1991274	0					
ANR	1991591	Sizeof	sizeof		1991274	0					
ANR	1991592	SizeofOperand	XML_NAMESPACE		1991274	1					
ANR	1991593	PrimaryExpression	1		1991274	1					
ANR	1991594	Argument	XML_NS_PREFIX		1991274	3					
ANR	1991595	Identifier	XML_NS_PREFIX		1991274	0					
ANR	1991596	ExpressionStatement	"zend_hash_str_add_ptr ( & defEncNs , SOAP_1_1_ENC_NAMESPACE , sizeof ( SOAP_1_1_ENC_NAMESPACE ) - 1 , SOAP_1_1_ENC_NS_PREFIX )"	572:1:19986:20100	1991274	11	True				
ANR	1991597	CallExpression	"zend_hash_str_add_ptr ( & defEncNs , SOAP_1_1_ENC_NAMESPACE , sizeof ( SOAP_1_1_ENC_NAMESPACE ) - 1 , SOAP_1_1_ENC_NS_PREFIX )"		1991274	0					
ANR	1991598	Callee	zend_hash_str_add_ptr		1991274	0					
ANR	1991599	Identifier	zend_hash_str_add_ptr		1991274	0					
ANR	1991600	ArgumentList	& defEncNs		1991274	1					
ANR	1991601	Argument	& defEncNs		1991274	0					
ANR	1991602	UnaryOperationExpression	& defEncNs		1991274	0					
ANR	1991603	UnaryOperator	&		1991274	0					
ANR	1991604	Identifier	defEncNs		1991274	1					
ANR	1991605	Argument	SOAP_1_1_ENC_NAMESPACE		1991274	1					
ANR	1991606	Identifier	SOAP_1_1_ENC_NAMESPACE		1991274	0					
ANR	1991607	Argument	sizeof ( SOAP_1_1_ENC_NAMESPACE ) - 1		1991274	2					
ANR	1991608	AdditiveExpression	sizeof ( SOAP_1_1_ENC_NAMESPACE ) - 1		1991274	0		-			
ANR	1991609	SizeofExpression	sizeof ( SOAP_1_1_ENC_NAMESPACE )		1991274	0					
ANR	1991610	Sizeof	sizeof		1991274	0					
ANR	1991611	SizeofOperand	SOAP_1_1_ENC_NAMESPACE		1991274	1					
ANR	1991612	PrimaryExpression	1		1991274	1					
ANR	1991613	Argument	SOAP_1_1_ENC_NS_PREFIX		1991274	3					
ANR	1991614	Identifier	SOAP_1_1_ENC_NS_PREFIX		1991274	0					
ANR	1991615	ExpressionStatement	"zend_hash_str_add_ptr ( & defEncNs , SOAP_1_2_ENC_NAMESPACE , sizeof ( SOAP_1_2_ENC_NAMESPACE ) - 1 , SOAP_1_2_ENC_NS_PREFIX )"	573:1:20103:20217	1991274	12	True				
ANR	1991616	CallExpression	"zend_hash_str_add_ptr ( & defEncNs , SOAP_1_2_ENC_NAMESPACE , sizeof ( SOAP_1_2_ENC_NAMESPACE ) - 1 , SOAP_1_2_ENC_NS_PREFIX )"		1991274	0					
ANR	1991617	Callee	zend_hash_str_add_ptr		1991274	0					
ANR	1991618	Identifier	zend_hash_str_add_ptr		1991274	0					
ANR	1991619	ArgumentList	& defEncNs		1991274	1					
ANR	1991620	Argument	& defEncNs		1991274	0					
ANR	1991621	UnaryOperationExpression	& defEncNs		1991274	0					
ANR	1991622	UnaryOperator	&		1991274	0					
ANR	1991623	Identifier	defEncNs		1991274	1					
ANR	1991624	Argument	SOAP_1_2_ENC_NAMESPACE		1991274	1					
ANR	1991625	Identifier	SOAP_1_2_ENC_NAMESPACE		1991274	0					
ANR	1991626	Argument	sizeof ( SOAP_1_2_ENC_NAMESPACE ) - 1		1991274	2					
ANR	1991627	AdditiveExpression	sizeof ( SOAP_1_2_ENC_NAMESPACE ) - 1		1991274	0		-			
ANR	1991628	SizeofExpression	sizeof ( SOAP_1_2_ENC_NAMESPACE )		1991274	0					
ANR	1991629	Sizeof	sizeof		1991274	0					
ANR	1991630	SizeofOperand	SOAP_1_2_ENC_NAMESPACE		1991274	1					
ANR	1991631	PrimaryExpression	1		1991274	1					
ANR	1991632	Argument	SOAP_1_2_ENC_NS_PREFIX		1991274	3					
ANR	1991633	Identifier	SOAP_1_2_ENC_NS_PREFIX		1991274	0					
ANR	1991634	ReturnType	static void		1991274	1					
ANR	1991635	Identifier	php_soap_prepare_globals		1991274	2					
ANR	1991636	ParameterList			1991274	3					
ANR	1991637	CFGEntryNode	ENTRY		1991274		True				
ANR	1991638	CFGExitNode	EXIT		1991274		True				
ANR	1991639	Symbol	& defEncIndex		1991274						
ANR	1991640	Symbol	defaultEncoding [ i ] . details . type_str		1991274						
ANR	1991641	Symbol	zend_hash_index_exists		1991274						
ANR	1991642	Symbol	SOAP_1_1_ENC_NS_PREFIX		1991274						
ANR	1991643	Symbol	* defaultEncoding		1991274						
ANR	1991644	Symbol	& ns_type		1991274						
ANR	1991645	Symbol	strlen		1991274						
ANR	1991646	Symbol	XML_NS_PREFIX		1991274						
ANR	1991647	Symbol	& defEnc		1991274						
ANR	1991648	Symbol	defaultEncoding [ i ] . details . type		1991274						
ANR	1991649	Symbol	enc		1991274						
ANR	1991650	Symbol	XSD_NS_PREFIX		1991274						
ANR	1991651	Symbol	XSD_1999_NAMESPACE		1991274						
ANR	1991652	Symbol	NULL		1991274						
ANR	1991653	Symbol	defaultEncoding		1991274						
ANR	1991654	Symbol	SOAP_1_1_ENC_NAMESPACE		1991274						
ANR	1991655	Symbol	ns_type		1991274						
ANR	1991656	Symbol	i		1991274						
ANR	1991657	Symbol	XML_NAMESPACE		1991274						
ANR	1991658	Symbol	defaultEncoding [ i ] . details		1991274						
ANR	1991659	Symbol	defaultEncoding [ i ] . details . ns		1991274						
ANR	1991660	Symbol	SOAP_1_2_ENC_NS_PREFIX		1991274						
ANR	1991661	Symbol	* i		1991274						
ANR	1991662	Symbol	XSI_NS_PREFIX		1991274						
ANR	1991663	Symbol	& defEncNs		1991274						
ANR	1991664	Symbol	SOAP_1_2_ENC_NAMESPACE		1991274						
ANR	1991665	Symbol	END_KNOWN_TYPES		1991274						
ANR	1991666	Symbol	XSD_NAMESPACE		1991274						
ANR	1991667	Symbol	XSI_NAMESPACE		1991274						
ANR	1991668	Function	php_soap_init_globals	576:0:20222:20686							
ANR	1991669	FunctionDef	php_soap_init_globals (zend_soap_globals * soap_globals)		1991668	0					
ANR	1991670	CompoundStatement		577:0:20289:20686	1991668	0					
ANR	1991671	ExpressionStatement	soap_globals -> defEnc = defEnc	578:1:20292:20321	1991668	0	True				
ANR	1991672	AssignmentExpression	soap_globals -> defEnc = defEnc		1991668	0		=			
ANR	1991673	PtrMemberAccess	soap_globals -> defEnc		1991668	0					
ANR	1991674	Identifier	soap_globals		1991668	0					
ANR	1991675	Identifier	defEnc		1991668	1					
ANR	1991676	Identifier	defEnc		1991668	1					
ANR	1991677	ExpressionStatement	soap_globals -> defEncIndex = defEncIndex	579:1:20324:20363	1991668	1	True				
ANR	1991678	AssignmentExpression	soap_globals -> defEncIndex = defEncIndex		1991668	0		=			
ANR	1991679	PtrMemberAccess	soap_globals -> defEncIndex		1991668	0					
ANR	1991680	Identifier	soap_globals		1991668	0					
ANR	1991681	Identifier	defEncIndex		1991668	1					
ANR	1991682	Identifier	defEncIndex		1991668	1					
ANR	1991683	ExpressionStatement	soap_globals -> defEncNs = defEncNs	580:1:20366:20399	1991668	2	True				
ANR	1991684	AssignmentExpression	soap_globals -> defEncNs = defEncNs		1991668	0		=			
ANR	1991685	PtrMemberAccess	soap_globals -> defEncNs		1991668	0					
ANR	1991686	Identifier	soap_globals		1991668	0					
ANR	1991687	Identifier	defEncNs		1991668	1					
ANR	1991688	Identifier	defEncNs		1991668	1					
ANR	1991689	ExpressionStatement	soap_globals -> typemap = NULL	581:1:20402:20430	1991668	3	True				
ANR	1991690	AssignmentExpression	soap_globals -> typemap = NULL		1991668	0		=			
ANR	1991691	PtrMemberAccess	soap_globals -> typemap		1991668	0					
ANR	1991692	Identifier	soap_globals		1991668	0					
ANR	1991693	Identifier	typemap		1991668	1					
ANR	1991694	Identifier	NULL		1991668	1					
ANR	1991695	ExpressionStatement	soap_globals -> use_soap_error_handler = 0	582:1:20433:20473	1991668	4	True				
ANR	1991696	AssignmentExpression	soap_globals -> use_soap_error_handler = 0		1991668	0		=			
ANR	1991697	PtrMemberAccess	soap_globals -> use_soap_error_handler		1991668	0					
ANR	1991698	Identifier	soap_globals		1991668	0					
ANR	1991699	Identifier	use_soap_error_handler		1991668	1					
ANR	1991700	PrimaryExpression	0		1991668	1					
ANR	1991701	ExpressionStatement	soap_globals -> error_code = NULL	583:1:20476:20507	1991668	5	True				
ANR	1991702	AssignmentExpression	soap_globals -> error_code = NULL		1991668	0		=			
ANR	1991703	PtrMemberAccess	soap_globals -> error_code		1991668	0					
ANR	1991704	Identifier	soap_globals		1991668	0					
ANR	1991705	Identifier	error_code		1991668	1					
ANR	1991706	Identifier	NULL		1991668	1					
ANR	1991707	ExpressionStatement	"ZVAL_OBJ ( & soap_globals -> error_object , NULL )"	584:1:20510:20553	1991668	6	True				
ANR	1991708	CallExpression	"ZVAL_OBJ ( & soap_globals -> error_object , NULL )"		1991668	0					
ANR	1991709	Callee	ZVAL_OBJ		1991668	0					
ANR	1991710	Identifier	ZVAL_OBJ		1991668	0					
ANR	1991711	ArgumentList	& soap_globals -> error_object		1991668	1					
ANR	1991712	Argument	& soap_globals -> error_object		1991668	0					
ANR	1991713	UnaryOperationExpression	& soap_globals -> error_object		1991668	0					
ANR	1991714	UnaryOperator	&		1991668	0					
ANR	1991715	PtrMemberAccess	soap_globals -> error_object		1991668	1					
ANR	1991716	Identifier	soap_globals		1991668	0					
ANR	1991717	Identifier	error_object		1991668	1					
ANR	1991718	Argument	NULL		1991668	1					
ANR	1991719	Identifier	NULL		1991668	0					
ANR	1991720	ExpressionStatement	soap_globals -> sdl = NULL	585:1:20556:20580	1991668	7	True				
ANR	1991721	AssignmentExpression	soap_globals -> sdl = NULL		1991668	0		=			
ANR	1991722	PtrMemberAccess	soap_globals -> sdl		1991668	0					
ANR	1991723	Identifier	soap_globals		1991668	0					
ANR	1991724	Identifier	sdl		1991668	1					
ANR	1991725	Identifier	NULL		1991668	1					
ANR	1991726	ExpressionStatement	soap_globals -> soap_version = SOAP_1_1	586:1:20583:20620	1991668	8	True				
ANR	1991727	AssignmentExpression	soap_globals -> soap_version = SOAP_1_1		1991668	0		=			
ANR	1991728	PtrMemberAccess	soap_globals -> soap_version		1991668	0					
ANR	1991729	Identifier	soap_globals		1991668	0					
ANR	1991730	Identifier	soap_version		1991668	1					
ANR	1991731	Identifier	SOAP_1_1		1991668	1					
ANR	1991732	ExpressionStatement	soap_globals -> mem_cache = NULL	587:1:20623:20653	1991668	9	True				
ANR	1991733	AssignmentExpression	soap_globals -> mem_cache = NULL		1991668	0		=			
ANR	1991734	PtrMemberAccess	soap_globals -> mem_cache		1991668	0					
ANR	1991735	Identifier	soap_globals		1991668	0					
ANR	1991736	Identifier	mem_cache		1991668	1					
ANR	1991737	Identifier	NULL		1991668	1					
ANR	1991738	ExpressionStatement	soap_globals -> ref_map = NULL	588:1:20656:20684	1991668	10	True				
ANR	1991739	AssignmentExpression	soap_globals -> ref_map = NULL		1991668	0		=			
ANR	1991740	PtrMemberAccess	soap_globals -> ref_map		1991668	0					
ANR	1991741	Identifier	soap_globals		1991668	0					
ANR	1991742	Identifier	ref_map		1991668	1					
ANR	1991743	Identifier	NULL		1991668	1					
ANR	1991744	ReturnType	static void		1991668	1					
ANR	1991745	Identifier	php_soap_init_globals		1991668	2					
ANR	1991746	ParameterList	zend_soap_globals * soap_globals		1991668	3					
ANR	1991747	Parameter	zend_soap_globals * soap_globals	576:34:20256:20286	1991668	0	True				
ANR	1991748	ParameterType	zend_soap_globals *		1991668	0					
ANR	1991749	Identifier	soap_globals		1991668	1					
ANR	1991750	CFGEntryNode	ENTRY		1991668		True				
ANR	1991751	CFGExitNode	EXIT		1991668		True				
ANR	1991752	Symbol	soap_globals -> typemap		1991668						
ANR	1991753	Symbol	soap_globals -> soap_version		1991668						
ANR	1991754	Symbol	defEncNs		1991668						
ANR	1991755	Symbol	NULL		1991668						
ANR	1991756	Symbol	SOAP_1_1		1991668						
ANR	1991757	Symbol	defEncIndex		1991668						
ANR	1991758	Symbol	& soap_globals -> error_object		1991668						
ANR	1991759	Symbol	soap_globals -> defEnc		1991668						
ANR	1991760	Symbol	soap_globals -> sdl		1991668						
ANR	1991761	Symbol	* soap_globals		1991668						
ANR	1991762	Symbol	soap_globals -> error_code		1991668						
ANR	1991763	Symbol	defEnc		1991668						
ANR	1991764	Symbol	soap_globals -> mem_cache		1991668						
ANR	1991765	Symbol	soap_globals -> use_soap_error_handler		1991668						
ANR	1991766	Symbol	soap_globals -> defEncNs		1991668						
ANR	1991767	Symbol	soap_globals -> ref_map		1991668						
ANR	1991768	Symbol	soap_globals -> defEncIndex		1991668						
ANR	1991769	Symbol	soap_globals		1991668						
ANR	1991770	Function	delete_sdl_res	623:0:21511:21583							
ANR	1991771	FunctionDef	delete_sdl_res (zend_resource * res)		1991770	0					
ANR	1991772	CompoundStatement		624:0:21558:21583	1991770	0					
ANR	1991773	ExpressionStatement	delete_sdl ( res -> ptr )	625:1:21561:21581	1991770	0	True				
ANR	1991774	CallExpression	delete_sdl ( res -> ptr )		1991770	0					
ANR	1991775	Callee	delete_sdl		1991770	0					
ANR	1991776	Identifier	delete_sdl		1991770	0					
ANR	1991777	ArgumentList	res -> ptr		1991770	1					
ANR	1991778	Argument	res -> ptr		1991770	0					
ANR	1991779	PtrMemberAccess	res -> ptr		1991770	0					
ANR	1991780	Identifier	res		1991770	0					
ANR	1991781	Identifier	ptr		1991770	1					
ANR	1991782	ReturnType	static void		1991770	1					
ANR	1991783	Identifier	delete_sdl_res		1991770	2					
ANR	1991784	ParameterList	zend_resource * res		1991770	3					
ANR	1991785	Parameter	zend_resource * res	623:27:21538:21555	1991770	0	True				
ANR	1991786	ParameterType	zend_resource *		1991770	0					
ANR	1991787	Identifier	res		1991770	1					
ANR	1991788	CFGEntryNode	ENTRY		1991770		True				
ANR	1991789	CFGExitNode	EXIT		1991770		True				
ANR	1991790	Symbol	res		1991770						
ANR	1991791	Symbol	res -> ptr		1991770						
ANR	1991792	Symbol	* res		1991770						
ANR	1991793	Function	delete_url_res	628:0:21586:21658							
ANR	1991794	FunctionDef	delete_url_res (zend_resource * res)		1991793	0					
ANR	1991795	CompoundStatement		629:0:21633:21658	1991793	0					
ANR	1991796	ExpressionStatement	delete_url ( res -> ptr )	630:1:21636:21656	1991793	0	True				
ANR	1991797	CallExpression	delete_url ( res -> ptr )		1991793	0					
ANR	1991798	Callee	delete_url		1991793	0					
ANR	1991799	Identifier	delete_url		1991793	0					
ANR	1991800	ArgumentList	res -> ptr		1991793	1					
ANR	1991801	Argument	res -> ptr		1991793	0					
ANR	1991802	PtrMemberAccess	res -> ptr		1991793	0					
ANR	1991803	Identifier	res		1991793	0					
ANR	1991804	Identifier	ptr		1991793	1					
ANR	1991805	ReturnType	static void		1991793	1					
ANR	1991806	Identifier	delete_url_res		1991793	2					
ANR	1991807	ParameterList	zend_resource * res		1991793	3					
ANR	1991808	Parameter	zend_resource * res	628:27:21613:21630	1991793	0	True				
ANR	1991809	ParameterType	zend_resource *		1991793	0					
ANR	1991810	Identifier	res		1991793	1					
ANR	1991811	CFGEntryNode	ENTRY		1991793		True				
ANR	1991812	CFGExitNode	EXIT		1991793		True				
ANR	1991813	Symbol	res		1991793						
ANR	1991814	Symbol	res -> ptr		1991793						
ANR	1991815	Symbol	* res		1991793						
ANR	1991816	Function	delete_service_res	633:0:21661:21741							
ANR	1991817	FunctionDef	delete_service_res (zend_resource * res)		1991816	0					
ANR	1991818	CompoundStatement		634:0:21712:21741	1991816	0					
ANR	1991819	ExpressionStatement	delete_service ( res -> ptr )	635:1:21715:21739	1991816	0	True				
ANR	1991820	CallExpression	delete_service ( res -> ptr )		1991816	0					
ANR	1991821	Callee	delete_service		1991816	0					
ANR	1991822	Identifier	delete_service		1991816	0					
ANR	1991823	ArgumentList	res -> ptr		1991816	1					
ANR	1991824	Argument	res -> ptr		1991816	0					
ANR	1991825	PtrMemberAccess	res -> ptr		1991816	0					
ANR	1991826	Identifier	res		1991816	0					
ANR	1991827	Identifier	ptr		1991816	1					
ANR	1991828	ReturnType	static void		1991816	1					
ANR	1991829	Identifier	delete_service_res		1991816	2					
ANR	1991830	ParameterList	zend_resource * res		1991816	3					
ANR	1991831	Parameter	zend_resource * res	633:31:21692:21709	1991816	0	True				
ANR	1991832	ParameterType	zend_resource *		1991816	0					
ANR	1991833	Identifier	res		1991816	1					
ANR	1991834	CFGEntryNode	ENTRY		1991816		True				
ANR	1991835	CFGExitNode	EXIT		1991816		True				
ANR	1991836	Symbol	res		1991816						
ANR	1991837	Symbol	res -> ptr		1991816						
ANR	1991838	Symbol	* res		1991816						
ANR	1991839	Function	delete_hashtable_res	638:0:21744:21828							
ANR	1991840	FunctionDef	delete_hashtable_res (zend_resource * res)		1991839	0					
ANR	1991841	CompoundStatement		639:0:21797:21828	1991839	0					
ANR	1991842	ExpressionStatement	delete_hashtable ( res -> ptr )	640:1:21800:21826	1991839	0	True				
ANR	1991843	CallExpression	delete_hashtable ( res -> ptr )		1991839	0					
ANR	1991844	Callee	delete_hashtable		1991839	0					
ANR	1991845	Identifier	delete_hashtable		1991839	0					
ANR	1991846	ArgumentList	res -> ptr		1991839	1					
ANR	1991847	Argument	res -> ptr		1991839	0					
ANR	1991848	PtrMemberAccess	res -> ptr		1991839	0					
ANR	1991849	Identifier	res		1991839	0					
ANR	1991850	Identifier	ptr		1991839	1					
ANR	1991851	ReturnType	static void		1991839	1					
ANR	1991852	Identifier	delete_hashtable_res		1991839	2					
ANR	1991853	ParameterList	zend_resource * res		1991839	3					
ANR	1991854	Parameter	zend_resource * res	638:33:21777:21794	1991839	0	True				
ANR	1991855	ParameterType	zend_resource *		1991839	0					
ANR	1991856	Identifier	res		1991839	1					
ANR	1991857	CFGEntryNode	ENTRY		1991839		True				
ANR	1991858	CFGExitNode	EXIT		1991839		True				
ANR	1991859	Symbol	res		1991839						
ANR	1991860	Symbol	res -> ptr		1991839						
ANR	1991861	Symbol	* res		1991839						
ANR	1991862	DeclStmt									
ANR	1991863	Decl							zend_class_entry	zend_class_entry	ce
ANR	1991864	DeclStmt									
ANR	1991865	Decl							zend_internal_function	zend_internal_function	fe
ANR	1991866	DeclStmt									
ANR	1991867	Decl							zval	zval *	data
ANR	1991868	DeclStmt									
ANR	1991869	Decl							char	char *	name
ANR	1991870	DeclStmt									
ANR	1991871	Decl							size_t	size_t	name_length
ANR	1991872	DeclStmt									
ANR	1991873	Decl							zval	zval *	this_ptr
ANR	1991874	DeclStmt									
ANR	1991875	Decl							zval	zval *	data
ANR	1991876	Decl							zval	zval *	actor
ANR	1991877	DeclStmt									
ANR	1991878	Decl							char	char *	name
ANR	1991879	Decl							char	char *	ns
ANR	1991880	DeclStmt									
ANR	1991881	Decl							size_t	size_t	name_len
ANR	1991882	Decl							size_t	size_t	ns_len
ANR	1991883	DeclStmt									
ANR	1991884	Decl							zend_bool	zend_bool	must_understand
ANR	1991885	DeclStmt									
ANR	1991886	Decl							zval	zval *	this_ptr
ANR	1991887	DeclStmt									
ANR	1991888	Decl							char	char *	fault_string
ANR	1991889	Decl							char	char *	fault_code
ANR	1991890	Decl							char	char *	fault_actor
ANR	1991891	Decl							char	char *	name
ANR	1991892	Decl							char	char *	fault_code_ns
ANR	1991893	DeclStmt									
ANR	1991894	Decl							size_t	size_t	fault_string_len
ANR	1991895	Decl							size_t	size_t	fault_actor_len
ANR	1991896	Decl							size_t	size_t	name_len
ANR	1991897	Decl							size_t	size_t	fault_code_len
ANR	1991898	DeclStmt									
ANR	1991899	Decl							zval	zval *	code
ANR	1991900	Decl							zval	zval *	details
ANR	1991901	Decl							zval	zval *	headerfault
ANR	1991902	Decl							zval	zval *	this_ptr
ANR	1991903	DeclStmt									
ANR	1991904	Decl							zval	zval *	t_ns
ANR	1991905	Decl							zval	zval *	t_code
ANR	1991906	DeclStmt									
ANR	1991907	Decl							zval	zval *	faultcode
ANR	1991908	Decl							zval	zval *	faultstring
ANR	1991909	Decl							zval	zval *	file
ANR	1991910	Decl							zval	zval *	line
ANR	1991911	Decl							zval	zval	trace
ANR	1991912	Decl							zval	zval	rv1
ANR	1991913	Decl							zval	zval	rv2
ANR	1991914	Decl							zval	zval	rv3
ANR	1991915	Decl							zval	zval	rv4
ANR	1991916	DeclStmt									
ANR	1991917	Decl							zend_string	zend_string *	str
ANR	1991918	DeclStmt									
ANR	1991919	Decl							zend_fcall_info	zend_fcall_info	fci
ANR	1991920	DeclStmt									
ANR	1991921	Decl							zval	zval *	this_ptr
ANR	1991922	DeclStmt									
ANR	1991923	Decl							zval	zval *	data
ANR	1991924	Decl							zval	zval *	type
ANR	1991925	Decl							zval	zval *	this_ptr
ANR	1991926	DeclStmt									
ANR	1991927	Decl							char	char *	stype
ANR	1991928	Decl							char	char *	ns
ANR	1991929	Decl							char	char *	name
ANR	1991930	Decl							char	char *	namens
ANR	1991931	DeclStmt									
ANR	1991932	Decl							size_t	size_t	stype_len
ANR	1991933	Decl							size_t	size_t	ns_len
ANR	1991934	Decl							size_t	size_t	name_len
ANR	1991935	Decl							size_t	size_t	namens_len
ANR	1991936	Function	soap_create_typemap	1028:0:38587:41806							
ANR	1991937	FunctionDef	"soap_create_typemap (sdlPtr sdl , HashTable * ht)"		1991936	0					
ANR	1991938	CompoundStatement		1029:0:38652:41806	1991936	0					
ANR	1991939	IdentifierDeclStatement	zval * tmp ;	1030:1:38655:38664	1991936	0	True				
ANR	1991940	IdentifierDecl	* tmp		1991936	0					
ANR	1991941	IdentifierDeclType	zval *		1991936	0					
ANR	1991942	Identifier	tmp		1991936	1					
ANR	1991943	IdentifierDeclStatement	HashTable * ht2 ;	1031:1:38667:38681	1991936	1	True				
ANR	1991944	IdentifierDecl	* ht2		1991936	0					
ANR	1991945	IdentifierDeclType	HashTable *		1991936	0					
ANR	1991946	Identifier	ht2		1991936	1					
ANR	1991947	IdentifierDeclStatement	HashTable * typemap = NULL ;	1032:1:38684:38709	1991936	2	True				
ANR	1991948	IdentifierDecl	* typemap = NULL		1991936	0					
ANR	1991949	IdentifierDeclType	HashTable *		1991936	0					
ANR	1991950	Identifier	typemap		1991936	1					
ANR	1991951	AssignmentExpression	* typemap = NULL		1991936	2		=			
ANR	1991952	Identifier	NULL		1991936	0					
ANR	1991953	Identifier	NULL		1991936	1					
ANR	1991954	Statement	ZEND_HASH_FOREACH_VAL	1034:1:38713:38733	1991936	3	True				
ANR	1991955	Statement	(	1034:22:38734:38734	1991936	4	True				
ANR	1991956	Statement	ht	1034:23:38735:38736	1991936	5	True				
ANR	1991957	Statement	","	1034:25:38737:38737	1991936	6	True				
ANR	1991958	Statement	tmp	1034:27:38739:38741	1991936	7	True				
ANR	1991959	Statement	)	1034:30:38742:38742	1991936	8	True				
ANR	1991960	CompoundStatement		12:2:218:235	1991936	9					
ANR	1991961	IdentifierDeclStatement	char * type_name = NULL ;	1035:2:38748:38770	1991936	0	True				
ANR	1991962	IdentifierDecl	* type_name = NULL		1991936	0					
ANR	1991963	IdentifierDeclType	char *		1991936	0					
ANR	1991964	Identifier	type_name		1991936	1					
ANR	1991965	AssignmentExpression	* type_name = NULL		1991936	2		=			
ANR	1991966	Identifier	NULL		1991936	0					
ANR	1991967	Identifier	NULL		1991936	1					
ANR	1991968	IdentifierDeclStatement	char * type_ns = NULL ;	1036:2:38774:38794	1991936	1	True				
ANR	1991969	IdentifierDecl	* type_ns = NULL		1991936	0					
ANR	1991970	IdentifierDeclType	char *		1991936	0					
ANR	1991971	Identifier	type_ns		1991936	1					
ANR	1991972	AssignmentExpression	* type_ns = NULL		1991936	2		=			
ANR	1991973	Identifier	NULL		1991936	0					
ANR	1991974	Identifier	NULL		1991936	1					
ANR	1991975	IdentifierDeclStatement	zval * to_xml = NULL ;	1037:2:38798:38817	1991936	2	True				
ANR	1991976	IdentifierDecl	* to_xml = NULL		1991936	0					
ANR	1991977	IdentifierDeclType	zval *		1991936	0					
ANR	1991978	Identifier	to_xml		1991936	1					
ANR	1991979	AssignmentExpression	* to_xml = NULL		1991936	2		=			
ANR	1991980	Identifier	NULL		1991936	0					
ANR	1991981	Identifier	NULL		1991936	1					
ANR	1991982	IdentifierDeclStatement	zval * to_zval = NULL ;	1038:2:38821:38841	1991936	3	True				
ANR	1991983	IdentifierDecl	* to_zval = NULL		1991936	0					
ANR	1991984	IdentifierDeclType	zval *		1991936	0					
ANR	1991985	Identifier	to_zval		1991936	1					
ANR	1991986	AssignmentExpression	* to_zval = NULL		1991936	2		=			
ANR	1991987	Identifier	NULL		1991936	0					
ANR	1991988	Identifier	NULL		1991936	1					
ANR	1991989	IdentifierDeclStatement	"encodePtr enc , new_enc ;"	1039:2:38845:38867	1991936	4	True				
ANR	1991990	IdentifierDecl	enc		1991936	0					
ANR	1991991	IdentifierDeclType	encodePtr		1991936	0					
ANR	1991992	Identifier	enc		1991936	1					
ANR	1991993	IdentifierDecl	new_enc		1991936	1					
ANR	1991994	IdentifierDeclType	encodePtr		1991936	0					
ANR	1991995	Identifier	new_enc		1991936	1					
ANR	1991996	IdentifierDeclStatement	zend_string * name ;	1040:2:38871:38888	1991936	5	True				
ANR	1991997	IdentifierDecl	* name		1991936	0					
ANR	1991998	IdentifierDeclType	zend_string *		1991936	0					
ANR	1991999	Identifier	name		1991936	1					
ANR	1992000	IfStatement	if ( Z_TYPE_P ( tmp ) != IS_ARRAY )		1991936	6					
ANR	1992001	Condition	Z_TYPE_P ( tmp ) != IS_ARRAY	1042:6:38897:38921	1991936	0	True				
ANR	1992002	EqualityExpression	Z_TYPE_P ( tmp ) != IS_ARRAY		1991936	0		!=			
ANR	1992003	CallExpression	Z_TYPE_P ( tmp )		1991936	0					
ANR	1992004	Callee	Z_TYPE_P		1991936	0					
ANR	1992005	Identifier	Z_TYPE_P		1991936	0					
ANR	1992006	ArgumentList	tmp		1991936	1					
ANR	1992007	Argument	tmp		1991936	0					
ANR	1992008	Identifier	tmp		1991936	0					
ANR	1992009	Identifier	IS_ARRAY		1991936	1					
ANR	1992010	CompoundStatement		14:33:271:271	1991936	1					
ANR	1992011	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Wrong 'typemap' option"" )"	1043:3:38929:38988	1991936	0	True				
ANR	1992012	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Wrong 'typemap' option"" )"		1991936	0					
ANR	1992013	Callee	php_error_docref		1991936	0					
ANR	1992014	Identifier	php_error_docref		1991936	0					
ANR	1992015	ArgumentList	NULL		1991936	1					
ANR	1992016	Argument	NULL		1991936	0					
ANR	1992017	Identifier	NULL		1991936	0					
ANR	1992018	Argument	E_WARNING		1991936	1					
ANR	1992019	Identifier	E_WARNING		1991936	0					
ANR	1992020	Argument	"""Wrong 'typemap' option"""		1991936	2					
ANR	1992021	PrimaryExpression	"""Wrong 'typemap' option"""		1991936	0					
ANR	1992022	ReturnStatement	return NULL ;	1044:3:38993:39004	1991936	1	True				
ANR	1992023	Identifier	NULL		1991936	0					
ANR	1992024	ExpressionStatement	ht2 = Z_ARRVAL_P ( tmp )	1046:2:39012:39033	1991936	7	True				
ANR	1992025	AssignmentExpression	ht2 = Z_ARRVAL_P ( tmp )		1991936	0		=			
ANR	1992026	Identifier	ht2		1991936	0					
ANR	1992027	CallExpression	Z_ARRVAL_P ( tmp )		1991936	1					
ANR	1992028	Callee	Z_ARRVAL_P		1991936	0					
ANR	1992029	Identifier	Z_ARRVAL_P		1991936	0					
ANR	1992030	ArgumentList	tmp		1991936	1					
ANR	1992031	Argument	tmp		1991936	0					
ANR	1992032	Identifier	tmp		1991936	0					
ANR	1992033	Statement	ZEND_HASH_FOREACH_STR_KEY_VAL	1048:2:39038:39066	1991936	8	True				
ANR	1992034	Statement	(	1048:31:39067:39067	1991936	9	True				
ANR	1992035	Statement	ht2	1048:32:39068:39070	1991936	10	True				
ANR	1992036	Statement	","	1048:35:39071:39071	1991936	11	True				
ANR	1992037	Statement	name	1048:37:39073:39076	1991936	12	True				
ANR	1992038	Statement	","	1048:41:39077:39077	1991936	13	True				
ANR	1992039	Statement	tmp	1048:43:39079:39081	1991936	14	True				
ANR	1992040	Statement	)	1048:46:39082:39082	1991936	15	True				
ANR	1992041	CompoundStatement		20:48:431:431	1991936	16					
ANR	1992042	IfStatement	if ( name )		1991936	0					
ANR	1992043	Condition	name	1049:7:39093:39096	1991936	0	True				
ANR	1992044	Identifier	name		1991936	0					
ANR	1992045	CompoundStatement		21:13:446:446	1991936	1					
ANR	1992046	IfStatement	"if ( ZSTR_LEN ( name ) == sizeof ( ""type_name"" ) - 1 && strncmp ( ZSTR_VAL ( name ) , ""type_name"" , sizeof ( ""type_name"" ) - 1 ) == 0 )"		1991936	0					
ANR	1992047	Condition	"ZSTR_LEN ( name ) == sizeof ( ""type_name"" ) - 1 && strncmp ( ZSTR_VAL ( name ) , ""type_name"" , sizeof ( ""type_name"" ) - 1 ) == 0"	1050:8:39109:39223	1991936	0	True				
ANR	1992048	AndExpression	"ZSTR_LEN ( name ) == sizeof ( ""type_name"" ) - 1 && strncmp ( ZSTR_VAL ( name ) , ""type_name"" , sizeof ( ""type_name"" ) - 1 ) == 0"		1991936	0		&&			
ANR	1992049	EqualityExpression	"ZSTR_LEN ( name ) == sizeof ( ""type_name"" ) - 1"		1991936	0		==			
ANR	1992050	CallExpression	ZSTR_LEN ( name )		1991936	0					
ANR	1992051	Callee	ZSTR_LEN		1991936	0					
ANR	1992052	Identifier	ZSTR_LEN		1991936	0					
ANR	1992053	ArgumentList	name		1991936	1					
ANR	1992054	Argument	name		1991936	0					
ANR	1992055	Identifier	name		1991936	0					
ANR	1992056	AdditiveExpression	"sizeof ( ""type_name"" ) - 1"		1991936	1		-			
ANR	1992057	SizeofExpression	"sizeof ( ""type_name"" )"		1991936	0					
ANR	1992058	Sizeof	sizeof		1991936	0					
ANR	1992059	PrimaryExpression	"""type_name"""		1991936	1					
ANR	1992060	PrimaryExpression	1		1991936	1					
ANR	1992061	EqualityExpression	"strncmp ( ZSTR_VAL ( name ) , ""type_name"" , sizeof ( ""type_name"" ) - 1 ) == 0"		1991936	1		==			
ANR	1992062	CallExpression	"strncmp ( ZSTR_VAL ( name ) , ""type_name"" , sizeof ( ""type_name"" ) - 1 )"		1991936	0					
ANR	1992063	Callee	strncmp		1991936	0					
ANR	1992064	Identifier	strncmp		1991936	0					
ANR	1992065	ArgumentList	ZSTR_VAL ( name )		1991936	1					
ANR	1992066	Argument	ZSTR_VAL ( name )		1991936	0					
ANR	1992067	CallExpression	ZSTR_VAL ( name )		1991936	0					
ANR	1992068	Callee	ZSTR_VAL		1991936	0					
ANR	1992069	Identifier	ZSTR_VAL		1991936	0					
ANR	1992070	ArgumentList	name		1991936	1					
ANR	1992071	Argument	name		1991936	0					
ANR	1992072	Identifier	name		1991936	0					
ANR	1992073	Argument	"""type_name"""		1991936	1					
ANR	1992074	PrimaryExpression	"""type_name"""		1991936	0					
ANR	1992075	Argument	"sizeof ( ""type_name"" ) - 1"		1991936	2					
ANR	1992076	AdditiveExpression	"sizeof ( ""type_name"" ) - 1"		1991936	0		-			
ANR	1992077	SizeofExpression	"sizeof ( ""type_name"" )"		1991936	0					
ANR	1992078	Sizeof	sizeof		1991936	0					
ANR	1992079	PrimaryExpression	"""type_name"""		1991936	1					
ANR	1992080	PrimaryExpression	1		1991936	1					
ANR	1992081	PrimaryExpression	0		1991936	1					
ANR	1992082	CompoundStatement		23:74:573:573	1991936	1					
ANR	1992083	IfStatement	if ( Z_TYPE_P ( tmp ) == IS_STRING )		1991936	0					
ANR	1992084	Condition	Z_TYPE_P ( tmp ) == IS_STRING	1052:9:39237:39262	1991936	0	True				
ANR	1992085	EqualityExpression	Z_TYPE_P ( tmp ) == IS_STRING		1991936	0		==			
ANR	1992086	CallExpression	Z_TYPE_P ( tmp )		1991936	0					
ANR	1992087	Callee	Z_TYPE_P		1991936	0					
ANR	1992088	Identifier	Z_TYPE_P		1991936	0					
ANR	1992089	ArgumentList	tmp		1991936	1					
ANR	1992090	Argument	tmp		1991936	0					
ANR	1992091	Identifier	tmp		1991936	0					
ANR	1992092	Identifier	IS_STRING		1991936	1					
ANR	1992093	CompoundStatement		24:37:612:612	1991936	1					
ANR	1992094	ExpressionStatement	type_name = Z_STRVAL_P ( tmp )	1053:6:39273:39300	1991936	0	True				
ANR	1992095	AssignmentExpression	type_name = Z_STRVAL_P ( tmp )		1991936	0		=			
ANR	1992096	Identifier	type_name		1991936	0					
ANR	1992097	CallExpression	Z_STRVAL_P ( tmp )		1991936	1					
ANR	1992098	Callee	Z_STRVAL_P		1991936	0					
ANR	1992099	Identifier	Z_STRVAL_P		1991936	0					
ANR	1992100	ArgumentList	tmp		1991936	1					
ANR	1992101	Argument	tmp		1991936	0					
ANR	1992102	Identifier	tmp		1991936	0					
ANR	1992103	ElseStatement	else		1991936	0					
ANR	1992104	IfStatement	if ( Z_TYPE_P ( tmp ) != IS_NULL )		1991936	0					
ANR	1992105	Condition	Z_TYPE_P ( tmp ) != IS_NULL	1054:16:39318:39341	1991936	0	True				
ANR	1992106	EqualityExpression	Z_TYPE_P ( tmp ) != IS_NULL		1991936	0		!=			
ANR	1992107	CallExpression	Z_TYPE_P ( tmp )		1991936	0					
ANR	1992108	Callee	Z_TYPE_P		1991936	0					
ANR	1992109	Identifier	Z_TYPE_P		1991936	0					
ANR	1992110	ArgumentList	tmp		1991936	1					
ANR	1992111	Argument	tmp		1991936	0					
ANR	1992112	Identifier	tmp		1991936	0					
ANR	1992113	Identifier	IS_NULL		1991936	1					
ANR	1992114	CompoundStatement		26:42:691:691	1991936	1					
ANR	1992115	ElseStatement	else		1991936	0					
ANR	1992116	IfStatement	"if ( ZSTR_LEN ( name ) == sizeof ( ""type_ns"" ) - 1 && strncmp ( ZSTR_VAL ( name ) , ""type_ns"" , sizeof ( ""type_ns"" ) - 1 ) == 0 )"		1991936	0					
ANR	1992117	Condition	"ZSTR_LEN ( name ) == sizeof ( ""type_ns"" ) - 1 && strncmp ( ZSTR_VAL ( name ) , ""type_ns"" , sizeof ( ""type_ns"" ) - 1 ) == 0"	1056:15:39368:39476	1991936	0	True				
ANR	1992118	AndExpression	"ZSTR_LEN ( name ) == sizeof ( ""type_ns"" ) - 1 && strncmp ( ZSTR_VAL ( name ) , ""type_ns"" , sizeof ( ""type_ns"" ) - 1 ) == 0"		1991936	0		&&			
ANR	1992119	EqualityExpression	"ZSTR_LEN ( name ) == sizeof ( ""type_ns"" ) - 1"		1991936	0		==			
ANR	1992120	CallExpression	ZSTR_LEN ( name )		1991936	0					
ANR	1992121	Callee	ZSTR_LEN		1991936	0					
ANR	1992122	Identifier	ZSTR_LEN		1991936	0					
ANR	1992123	ArgumentList	name		1991936	1					
ANR	1992124	Argument	name		1991936	0					
ANR	1992125	Identifier	name		1991936	0					
ANR	1992126	AdditiveExpression	"sizeof ( ""type_ns"" ) - 1"		1991936	1		-			
ANR	1992127	SizeofExpression	"sizeof ( ""type_ns"" )"		1991936	0					
ANR	1992128	Sizeof	sizeof		1991936	0					
ANR	1992129	PrimaryExpression	"""type_ns"""		1991936	1					
ANR	1992130	PrimaryExpression	1		1991936	1					
ANR	1992131	EqualityExpression	"strncmp ( ZSTR_VAL ( name ) , ""type_ns"" , sizeof ( ""type_ns"" ) - 1 ) == 0"		1991936	1		==			
ANR	1992132	CallExpression	"strncmp ( ZSTR_VAL ( name ) , ""type_ns"" , sizeof ( ""type_ns"" ) - 1 )"		1991936	0					
ANR	1992133	Callee	strncmp		1991936	0					
ANR	1992134	Identifier	strncmp		1991936	0					
ANR	1992135	ArgumentList	ZSTR_VAL ( name )		1991936	1					
ANR	1992136	Argument	ZSTR_VAL ( name )		1991936	0					
ANR	1992137	CallExpression	ZSTR_VAL ( name )		1991936	0					
ANR	1992138	Callee	ZSTR_VAL		1991936	0					
ANR	1992139	Identifier	ZSTR_VAL		1991936	0					
ANR	1992140	ArgumentList	name		1991936	1					
ANR	1992141	Argument	name		1991936	0					
ANR	1992142	Identifier	name		1991936	0					
ANR	1992143	Argument	"""type_ns"""		1991936	1					
ANR	1992144	PrimaryExpression	"""type_ns"""		1991936	0					
ANR	1992145	Argument	"sizeof ( ""type_ns"" ) - 1"		1991936	2					
ANR	1992146	AdditiveExpression	"sizeof ( ""type_ns"" ) - 1"		1991936	0		-			
ANR	1992147	SizeofExpression	"sizeof ( ""type_ns"" )"		1991936	0					
ANR	1992148	Sizeof	sizeof		1991936	0					
ANR	1992149	PrimaryExpression	"""type_ns"""		1991936	1					
ANR	1992150	PrimaryExpression	1		1991936	1					
ANR	1992151	PrimaryExpression	0		1991936	1					
ANR	1992152	CompoundStatement		29:70:826:826	1991936	1					
ANR	1992153	IfStatement	if ( Z_TYPE_P ( tmp ) == IS_STRING )		1991936	0					
ANR	1992154	Condition	Z_TYPE_P ( tmp ) == IS_STRING	1058:9:39490:39515	1991936	0	True				
ANR	1992155	EqualityExpression	Z_TYPE_P ( tmp ) == IS_STRING		1991936	0		==			
ANR	1992156	CallExpression	Z_TYPE_P ( tmp )		1991936	0					
ANR	1992157	Callee	Z_TYPE_P		1991936	0					
ANR	1992158	Identifier	Z_TYPE_P		1991936	0					
ANR	1992159	ArgumentList	tmp		1991936	1					
ANR	1992160	Argument	tmp		1991936	0					
ANR	1992161	Identifier	tmp		1991936	0					
ANR	1992162	Identifier	IS_STRING		1991936	1					
ANR	1992163	CompoundStatement		30:37:865:865	1991936	1					
ANR	1992164	ExpressionStatement	type_ns = Z_STRVAL_P ( tmp )	1059:6:39526:39551	1991936	0	True				
ANR	1992165	AssignmentExpression	type_ns = Z_STRVAL_P ( tmp )		1991936	0		=			
ANR	1992166	Identifier	type_ns		1991936	0					
ANR	1992167	CallExpression	Z_STRVAL_P ( tmp )		1991936	1					
ANR	1992168	Callee	Z_STRVAL_P		1991936	0					
ANR	1992169	Identifier	Z_STRVAL_P		1991936	0					
ANR	1992170	ArgumentList	tmp		1991936	1					
ANR	1992171	Argument	tmp		1991936	0					
ANR	1992172	Identifier	tmp		1991936	0					
ANR	1992173	ElseStatement	else		1991936	0					
ANR	1992174	IfStatement	if ( Z_TYPE_P ( tmp ) != IS_NULL )		1991936	0					
ANR	1992175	Condition	Z_TYPE_P ( tmp ) != IS_NULL	1060:16:39569:39592	1991936	0	True				
ANR	1992176	EqualityExpression	Z_TYPE_P ( tmp ) != IS_NULL		1991936	0		!=			
ANR	1992177	CallExpression	Z_TYPE_P ( tmp )		1991936	0					
ANR	1992178	Callee	Z_TYPE_P		1991936	0					
ANR	1992179	Identifier	Z_TYPE_P		1991936	0					
ANR	1992180	ArgumentList	tmp		1991936	1					
ANR	1992181	Argument	tmp		1991936	0					
ANR	1992182	Identifier	tmp		1991936	0					
ANR	1992183	Identifier	IS_NULL		1991936	1					
ANR	1992184	CompoundStatement		32:42:942:942	1991936	1					
ANR	1992185	ElseStatement	else		1991936	0					
ANR	1992186	IfStatement	"if ( ZSTR_LEN ( name ) == sizeof ( ""to_xml"" ) - 1 && strncmp ( ZSTR_VAL ( name ) , ""to_xml"" , sizeof ( ""to_xml"" ) - 1 ) == 0 )"		1991936	0					
ANR	1992187	Condition	"ZSTR_LEN ( name ) == sizeof ( ""to_xml"" ) - 1 && strncmp ( ZSTR_VAL ( name ) , ""to_xml"" , sizeof ( ""to_xml"" ) - 1 ) == 0"	1062:15:39619:39724	1991936	0	True				
ANR	1992188	AndExpression	"ZSTR_LEN ( name ) == sizeof ( ""to_xml"" ) - 1 && strncmp ( ZSTR_VAL ( name ) , ""to_xml"" , sizeof ( ""to_xml"" ) - 1 ) == 0"		1991936	0		&&			
ANR	1992189	EqualityExpression	"ZSTR_LEN ( name ) == sizeof ( ""to_xml"" ) - 1"		1991936	0		==			
ANR	1992190	CallExpression	ZSTR_LEN ( name )		1991936	0					
ANR	1992191	Callee	ZSTR_LEN		1991936	0					
ANR	1992192	Identifier	ZSTR_LEN		1991936	0					
ANR	1992193	ArgumentList	name		1991936	1					
ANR	1992194	Argument	name		1991936	0					
ANR	1992195	Identifier	name		1991936	0					
ANR	1992196	AdditiveExpression	"sizeof ( ""to_xml"" ) - 1"		1991936	1		-			
ANR	1992197	SizeofExpression	"sizeof ( ""to_xml"" )"		1991936	0					
ANR	1992198	Sizeof	sizeof		1991936	0					
ANR	1992199	PrimaryExpression	"""to_xml"""		1991936	1					
ANR	1992200	PrimaryExpression	1		1991936	1					
ANR	1992201	EqualityExpression	"strncmp ( ZSTR_VAL ( name ) , ""to_xml"" , sizeof ( ""to_xml"" ) - 1 ) == 0"		1991936	1		==			
ANR	1992202	CallExpression	"strncmp ( ZSTR_VAL ( name ) , ""to_xml"" , sizeof ( ""to_xml"" ) - 1 )"		1991936	0					
ANR	1992203	Callee	strncmp		1991936	0					
ANR	1992204	Identifier	strncmp		1991936	0					
ANR	1992205	ArgumentList	ZSTR_VAL ( name )		1991936	1					
ANR	1992206	Argument	ZSTR_VAL ( name )		1991936	0					
ANR	1992207	CallExpression	ZSTR_VAL ( name )		1991936	0					
ANR	1992208	Callee	ZSTR_VAL		1991936	0					
ANR	1992209	Identifier	ZSTR_VAL		1991936	0					
ANR	1992210	ArgumentList	name		1991936	1					
ANR	1992211	Argument	name		1991936	0					
ANR	1992212	Identifier	name		1991936	0					
ANR	1992213	Argument	"""to_xml"""		1991936	1					
ANR	1992214	PrimaryExpression	"""to_xml"""		1991936	0					
ANR	1992215	Argument	"sizeof ( ""to_xml"" ) - 1"		1991936	2					
ANR	1992216	AdditiveExpression	"sizeof ( ""to_xml"" ) - 1"		1991936	0		-			
ANR	1992217	SizeofExpression	"sizeof ( ""to_xml"" )"		1991936	0					
ANR	1992218	Sizeof	sizeof		1991936	0					
ANR	1992219	PrimaryExpression	"""to_xml"""		1991936	1					
ANR	1992220	PrimaryExpression	1		1991936	1					
ANR	1992221	PrimaryExpression	0		1991936	1					
ANR	1992222	CompoundStatement		35:68:1074:1074	1991936	1					
ANR	1992223	ExpressionStatement	to_xml = tmp	1064:5:39734:39746	1991936	0	True				
ANR	1992224	AssignmentExpression	to_xml = tmp		1991936	0		=			
ANR	1992225	Identifier	to_xml		1991936	0					
ANR	1992226	Identifier	tmp		1991936	1					
ANR	1992227	ElseStatement	else		1991936	0					
ANR	1992228	IfStatement	"if ( ZSTR_LEN ( name ) == sizeof ( ""from_xml"" ) - 1 && strncmp ( ZSTR_VAL ( name ) , ""from_xml"" , sizeof ( ""from_xml"" ) - 1 ) == 0 )"		1991936	0					
ANR	1992229	Condition	"ZSTR_LEN ( name ) == sizeof ( ""from_xml"" ) - 1 && strncmp ( ZSTR_VAL ( name ) , ""from_xml"" , sizeof ( ""from_xml"" ) - 1 ) == 0"	1065:15:39763:39874	1991936	0	True				
ANR	1992230	AndExpression	"ZSTR_LEN ( name ) == sizeof ( ""from_xml"" ) - 1 && strncmp ( ZSTR_VAL ( name ) , ""from_xml"" , sizeof ( ""from_xml"" ) - 1 ) == 0"		1991936	0		&&			
ANR	1992231	EqualityExpression	"ZSTR_LEN ( name ) == sizeof ( ""from_xml"" ) - 1"		1991936	0		==			
ANR	1992232	CallExpression	ZSTR_LEN ( name )		1991936	0					
ANR	1992233	Callee	ZSTR_LEN		1991936	0					
ANR	1992234	Identifier	ZSTR_LEN		1991936	0					
ANR	1992235	ArgumentList	name		1991936	1					
ANR	1992236	Argument	name		1991936	0					
ANR	1992237	Identifier	name		1991936	0					
ANR	1992238	AdditiveExpression	"sizeof ( ""from_xml"" ) - 1"		1991936	1		-			
ANR	1992239	SizeofExpression	"sizeof ( ""from_xml"" )"		1991936	0					
ANR	1992240	Sizeof	sizeof		1991936	0					
ANR	1992241	PrimaryExpression	"""from_xml"""		1991936	1					
ANR	1992242	PrimaryExpression	1		1991936	1					
ANR	1992243	EqualityExpression	"strncmp ( ZSTR_VAL ( name ) , ""from_xml"" , sizeof ( ""from_xml"" ) - 1 ) == 0"		1991936	1		==			
ANR	1992244	CallExpression	"strncmp ( ZSTR_VAL ( name ) , ""from_xml"" , sizeof ( ""from_xml"" ) - 1 )"		1991936	0					
ANR	1992245	Callee	strncmp		1991936	0					
ANR	1992246	Identifier	strncmp		1991936	0					
ANR	1992247	ArgumentList	ZSTR_VAL ( name )		1991936	1					
ANR	1992248	Argument	ZSTR_VAL ( name )		1991936	0					
ANR	1992249	CallExpression	ZSTR_VAL ( name )		1991936	0					
ANR	1992250	Callee	ZSTR_VAL		1991936	0					
ANR	1992251	Identifier	ZSTR_VAL		1991936	0					
ANR	1992252	ArgumentList	name		1991936	1					
ANR	1992253	Argument	name		1991936	0					
ANR	1992254	Identifier	name		1991936	0					
ANR	1992255	Argument	"""from_xml"""		1991936	1					
ANR	1992256	PrimaryExpression	"""from_xml"""		1991936	0					
ANR	1992257	Argument	"sizeof ( ""from_xml"" ) - 1"		1991936	2					
ANR	1992258	AdditiveExpression	"sizeof ( ""from_xml"" ) - 1"		1991936	0		-			
ANR	1992259	SizeofExpression	"sizeof ( ""from_xml"" )"		1991936	0					
ANR	1992260	Sizeof	sizeof		1991936	0					
ANR	1992261	PrimaryExpression	"""from_xml"""		1991936	1					
ANR	1992262	PrimaryExpression	1		1991936	1					
ANR	1992263	PrimaryExpression	0		1991936	1					
ANR	1992264	CompoundStatement		38:72:1224:1224	1991936	1					
ANR	1992265	ExpressionStatement	to_zval = tmp	1067:5:39884:39897	1991936	0	True				
ANR	1992266	AssignmentExpression	to_zval = tmp		1991936	0		=			
ANR	1992267	Identifier	to_zval		1991936	0					
ANR	1992268	Identifier	tmp		1991936	1					
ANR	1992269	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1070:4:39914:39937	1991936	17	True				
ANR	1992270	CallExpression	ZEND_HASH_FOREACH_END ( )		1991936	0					
ANR	1992271	Callee	ZEND_HASH_FOREACH_END		1991936	0					
ANR	1992272	Identifier	ZEND_HASH_FOREACH_END		1991936	0					
ANR	1992273	ArgumentList			1991936	1					
ANR	1992274	IfStatement	if ( type_name )		1991936	18					
ANR	1992275	Condition	type_name	1072:6:39946:39954	1991936	0	True				
ANR	1992276	Identifier	type_name		1991936	0					
ANR	1992277	CompoundStatement		45:3:1309:1330	1991936	1					
ANR	1992278	IdentifierDeclStatement	smart_str nscat = { 0 } ;	1073:3:39962:39983	1991936	0	True				
ANR	1992279	IdentifierDecl	nscat = { 0 }		1991936	0					
ANR	1992280	IdentifierDeclType	smart_str		1991936	0					
ANR	1992281	Identifier	nscat		1991936	1					
ANR	1992282	AssignmentExpression	nscat = { 0 }		1991936	2		=			
ANR	1992283	Identifier	nscat		1991936	0					
ANR	1992284	InitializerList	0		1991936	1					
ANR	1992285	PrimaryExpression	0		1991936	0					
ANR	1992286	IfStatement	if ( type_ns )		1991936	1					
ANR	1992287	Condition	type_ns	1075:7:39993:39999	1991936	0	True				
ANR	1992288	Identifier	type_ns		1991936	0					
ANR	1992289	CompoundStatement		47:16:1349:1349	1991936	1					
ANR	1992290	ExpressionStatement	"enc = get_encoder ( sdl , type_ns , type_name )"	1076:4:40008:40050	1991936	0	True				
ANR	1992291	AssignmentExpression	"enc = get_encoder ( sdl , type_ns , type_name )"		1991936	0		=			
ANR	1992292	Identifier	enc		1991936	0					
ANR	1992293	CallExpression	"get_encoder ( sdl , type_ns , type_name )"		1991936	1					
ANR	1992294	Callee	get_encoder		1991936	0					
ANR	1992295	Identifier	get_encoder		1991936	0					
ANR	1992296	ArgumentList	sdl		1991936	1					
ANR	1992297	Argument	sdl		1991936	0					
ANR	1992298	Identifier	sdl		1991936	0					
ANR	1992299	Argument	type_ns		1991936	1					
ANR	1992300	Identifier	type_ns		1991936	0					
ANR	1992301	Argument	type_name		1991936	2					
ANR	1992302	Identifier	type_name		1991936	0					
ANR	1992303	ElseStatement	else		1991936	0					
ANR	1992304	CompoundStatement		49:10:1409:1409	1991936	0					
ANR	1992305	ExpressionStatement	"enc = get_encoder_ex ( sdl , type_name , strlen ( type_name ) )"	1078:4:40068:40123	1991936	0	True				
ANR	1992306	AssignmentExpression	"enc = get_encoder_ex ( sdl , type_name , strlen ( type_name ) )"		1991936	0		=			
ANR	1992307	Identifier	enc		1991936	0					
ANR	1992308	CallExpression	"get_encoder_ex ( sdl , type_name , strlen ( type_name ) )"		1991936	1					
ANR	1992309	Callee	get_encoder_ex		1991936	0					
ANR	1992310	Identifier	get_encoder_ex		1991936	0					
ANR	1992311	ArgumentList	sdl		1991936	1					
ANR	1992312	Argument	sdl		1991936	0					
ANR	1992313	Identifier	sdl		1991936	0					
ANR	1992314	Argument	type_name		1991936	1					
ANR	1992315	Identifier	type_name		1991936	0					
ANR	1992316	Argument	strlen ( type_name )		1991936	2					
ANR	1992317	CallExpression	strlen ( type_name )		1991936	0					
ANR	1992318	Callee	strlen		1991936	0					
ANR	1992319	Identifier	strlen		1991936	0					
ANR	1992320	ArgumentList	type_name		1991936	1					
ANR	1992321	Argument	type_name		1991936	0					
ANR	1992322	Identifier	type_name		1991936	0					
ANR	1992323	ExpressionStatement	new_enc = emalloc ( sizeof ( encode ) )	1081:3:40134:40167	1991936	2	True				
ANR	1992324	AssignmentExpression	new_enc = emalloc ( sizeof ( encode ) )		1991936	0		=			
ANR	1992325	Identifier	new_enc		1991936	0					
ANR	1992326	CallExpression	emalloc ( sizeof ( encode ) )		1991936	1					
ANR	1992327	Callee	emalloc		1991936	0					
ANR	1992328	Identifier	emalloc		1991936	0					
ANR	1992329	ArgumentList	sizeof ( encode )		1991936	1					
ANR	1992330	Argument	sizeof ( encode )		1991936	0					
ANR	1992331	SizeofExpression	sizeof ( encode )		1991936	0					
ANR	1992332	Sizeof	sizeof		1991936	0					
ANR	1992333	SizeofOperand	encode		1991936	1					
ANR	1992334	ExpressionStatement	"memset ( new_enc , 0 , sizeof ( encode ) )"	1082:3:40172:40206	1991936	3	True				
ANR	1992335	CallExpression	"memset ( new_enc , 0 , sizeof ( encode ) )"		1991936	0					
ANR	1992336	Callee	memset		1991936	0					
ANR	1992337	Identifier	memset		1991936	0					
ANR	1992338	ArgumentList	new_enc		1991936	1					
ANR	1992339	Argument	new_enc		1991936	0					
ANR	1992340	Identifier	new_enc		1991936	0					
ANR	1992341	Argument	0		1991936	1					
ANR	1992342	PrimaryExpression	0		1991936	0					
ANR	1992343	Argument	sizeof ( encode )		1991936	2					
ANR	1992344	SizeofExpression	sizeof ( encode )		1991936	0					
ANR	1992345	Sizeof	sizeof		1991936	0					
ANR	1992346	SizeofOperand	encode		1991936	1					
ANR	1992347	IfStatement	if ( enc )		1991936	4					
ANR	1992348	Condition	enc	1084:7:40216:40218	1991936	0	True				
ANR	1992349	Identifier	enc		1991936	0					
ANR	1992350	CompoundStatement		56:12:1568:1568	1991936	1					
ANR	1992351	ExpressionStatement	new_enc -> details . type = enc -> details . type	1085:4:40227:40268	1991936	0	True				
ANR	1992352	AssignmentExpression	new_enc -> details . type = enc -> details . type		1991936	0		=			
ANR	1992353	MemberAccess	new_enc -> details . type		1991936	0					
ANR	1992354	PtrMemberAccess	new_enc -> details		1991936	0					
ANR	1992355	Identifier	new_enc		1991936	0					
ANR	1992356	Identifier	details		1991936	1					
ANR	1992357	Identifier	type		1991936	1					
ANR	1992358	MemberAccess	enc -> details . type		1991936	1					
ANR	1992359	PtrMemberAccess	enc -> details		1991936	0					
ANR	1992360	Identifier	enc		1991936	0					
ANR	1992361	Identifier	details		1991936	1					
ANR	1992362	Identifier	type		1991936	1					
ANR	1992363	ExpressionStatement	new_enc -> details . ns = estrdup ( enc -> details . ns )	1086:4:40274:40320	1991936	1	True				
ANR	1992364	AssignmentExpression	new_enc -> details . ns = estrdup ( enc -> details . ns )		1991936	0		=			
ANR	1992365	MemberAccess	new_enc -> details . ns		1991936	0					
ANR	1992366	PtrMemberAccess	new_enc -> details		1991936	0					
ANR	1992367	Identifier	new_enc		1991936	0					
ANR	1992368	Identifier	details		1991936	1					
ANR	1992369	Identifier	ns		1991936	1					
ANR	1992370	CallExpression	estrdup ( enc -> details . ns )		1991936	1					
ANR	1992371	Callee	estrdup		1991936	0					
ANR	1992372	Identifier	estrdup		1991936	0					
ANR	1992373	ArgumentList	enc -> details . ns		1991936	1					
ANR	1992374	Argument	enc -> details . ns		1991936	0					
ANR	1992375	MemberAccess	enc -> details . ns		1991936	0					
ANR	1992376	PtrMemberAccess	enc -> details		1991936	0					
ANR	1992377	Identifier	enc		1991936	0					
ANR	1992378	Identifier	details		1991936	1					
ANR	1992379	Identifier	ns		1991936	1					
ANR	1992380	ExpressionStatement	new_enc -> details . type_str = estrdup ( enc -> details . type_str )	1087:4:40326:40384	1991936	2	True				
ANR	1992381	AssignmentExpression	new_enc -> details . type_str = estrdup ( enc -> details . type_str )		1991936	0		=			
ANR	1992382	MemberAccess	new_enc -> details . type_str		1991936	0					
ANR	1992383	PtrMemberAccess	new_enc -> details		1991936	0					
ANR	1992384	Identifier	new_enc		1991936	0					
ANR	1992385	Identifier	details		1991936	1					
ANR	1992386	Identifier	type_str		1991936	1					
ANR	1992387	CallExpression	estrdup ( enc -> details . type_str )		1991936	1					
ANR	1992388	Callee	estrdup		1991936	0					
ANR	1992389	Identifier	estrdup		1991936	0					
ANR	1992390	ArgumentList	enc -> details . type_str		1991936	1					
ANR	1992391	Argument	enc -> details . type_str		1991936	0					
ANR	1992392	MemberAccess	enc -> details . type_str		1991936	0					
ANR	1992393	PtrMemberAccess	enc -> details		1991936	0					
ANR	1992394	Identifier	enc		1991936	0					
ANR	1992395	Identifier	details		1991936	1					
ANR	1992396	Identifier	type_str		1991936	1					
ANR	1992397	ExpressionStatement	new_enc -> details . sdl_type = enc -> details . sdl_type	1088:4:40390:40439	1991936	3	True				
ANR	1992398	AssignmentExpression	new_enc -> details . sdl_type = enc -> details . sdl_type		1991936	0		=			
ANR	1992399	MemberAccess	new_enc -> details . sdl_type		1991936	0					
ANR	1992400	PtrMemberAccess	new_enc -> details		1991936	0					
ANR	1992401	Identifier	new_enc		1991936	0					
ANR	1992402	Identifier	details		1991936	1					
ANR	1992403	Identifier	sdl_type		1991936	1					
ANR	1992404	MemberAccess	enc -> details . sdl_type		1991936	1					
ANR	1992405	PtrMemberAccess	enc -> details		1991936	0					
ANR	1992406	Identifier	enc		1991936	0					
ANR	1992407	Identifier	details		1991936	1					
ANR	1992408	Identifier	sdl_type		1991936	1					
ANR	1992409	ElseStatement	else		1991936	0					
ANR	1992410	CompoundStatement		61:10:1798:1798	1991936	0					
ANR	1992411	ExpressionStatement	enc = get_conversion ( UNKNOWN_TYPE )	1090:4:40457:40491	1991936	0	True				
ANR	1992412	AssignmentExpression	enc = get_conversion ( UNKNOWN_TYPE )		1991936	0		=			
ANR	1992413	Identifier	enc		1991936	0					
ANR	1992414	CallExpression	get_conversion ( UNKNOWN_TYPE )		1991936	1					
ANR	1992415	Callee	get_conversion		1991936	0					
ANR	1992416	Identifier	get_conversion		1991936	0					
ANR	1992417	ArgumentList	UNKNOWN_TYPE		1991936	1					
ANR	1992418	Argument	UNKNOWN_TYPE		1991936	0					
ANR	1992419	Identifier	UNKNOWN_TYPE		1991936	0					
ANR	1992420	ExpressionStatement	new_enc -> details . type = enc -> details . type	1091:4:40497:40538	1991936	1	True				
ANR	1992421	AssignmentExpression	new_enc -> details . type = enc -> details . type		1991936	0		=			
ANR	1992422	MemberAccess	new_enc -> details . type		1991936	0					
ANR	1992423	PtrMemberAccess	new_enc -> details		1991936	0					
ANR	1992424	Identifier	new_enc		1991936	0					
ANR	1992425	Identifier	details		1991936	1					
ANR	1992426	Identifier	type		1991936	1					
ANR	1992427	MemberAccess	enc -> details . type		1991936	1					
ANR	1992428	PtrMemberAccess	enc -> details		1991936	0					
ANR	1992429	Identifier	enc		1991936	0					
ANR	1992430	Identifier	details		1991936	1					
ANR	1992431	Identifier	type		1991936	1					
ANR	1992432	IfStatement	if ( type_ns )		1991936	2					
ANR	1992433	Condition	type_ns	1092:8:40548:40554	1991936	0	True				
ANR	1992434	Identifier	type_ns		1991936	0					
ANR	1992435	CompoundStatement		64:17:1904:1904	1991936	1					
ANR	1992436	ExpressionStatement	new_enc -> details . ns = estrdup ( type_ns )	1093:5:40564:40602	1991936	0	True				
ANR	1992437	AssignmentExpression	new_enc -> details . ns = estrdup ( type_ns )		1991936	0		=			
ANR	1992438	MemberAccess	new_enc -> details . ns		1991936	0					
ANR	1992439	PtrMemberAccess	new_enc -> details		1991936	0					
ANR	1992440	Identifier	new_enc		1991936	0					
ANR	1992441	Identifier	details		1991936	1					
ANR	1992442	Identifier	ns		1991936	1					
ANR	1992443	CallExpression	estrdup ( type_ns )		1991936	1					
ANR	1992444	Callee	estrdup		1991936	0					
ANR	1992445	Identifier	estrdup		1991936	0					
ANR	1992446	ArgumentList	type_ns		1991936	1					
ANR	1992447	Argument	type_ns		1991936	0					
ANR	1992448	Identifier	type_ns		1991936	0					
ANR	1992449	ExpressionStatement	new_enc -> details . type_str = estrdup ( type_name )	1095:4:40614:40660	1991936	3	True				
ANR	1992450	AssignmentExpression	new_enc -> details . type_str = estrdup ( type_name )		1991936	0		=			
ANR	1992451	MemberAccess	new_enc -> details . type_str		1991936	0					
ANR	1992452	PtrMemberAccess	new_enc -> details		1991936	0					
ANR	1992453	Identifier	new_enc		1991936	0					
ANR	1992454	Identifier	details		1991936	1					
ANR	1992455	Identifier	type_str		1991936	1					
ANR	1992456	CallExpression	estrdup ( type_name )		1991936	1					
ANR	1992457	Callee	estrdup		1991936	0					
ANR	1992458	Identifier	estrdup		1991936	0					
ANR	1992459	ArgumentList	type_name		1991936	1					
ANR	1992460	Argument	type_name		1991936	0					
ANR	1992461	Identifier	type_name		1991936	0					
ANR	1992462	ExpressionStatement	new_enc -> to_xml = enc -> to_xml	1097:3:40670:40699	1991936	5	True				
ANR	1992463	AssignmentExpression	new_enc -> to_xml = enc -> to_xml		1991936	0		=			
ANR	1992464	PtrMemberAccess	new_enc -> to_xml		1991936	0					
ANR	1992465	Identifier	new_enc		1991936	0					
ANR	1992466	Identifier	to_xml		1991936	1					
ANR	1992467	PtrMemberAccess	enc -> to_xml		1991936	1					
ANR	1992468	Identifier	enc		1991936	0					
ANR	1992469	Identifier	to_xml		1991936	1					
ANR	1992470	ExpressionStatement	new_enc -> to_zval = enc -> to_zval	1098:3:40704:40735	1991936	6	True				
ANR	1992471	AssignmentExpression	new_enc -> to_zval = enc -> to_zval		1991936	0		=			
ANR	1992472	PtrMemberAccess	new_enc -> to_zval		1991936	0					
ANR	1992473	Identifier	new_enc		1991936	0					
ANR	1992474	Identifier	to_zval		1991936	1					
ANR	1992475	PtrMemberAccess	enc -> to_zval		1991936	1					
ANR	1992476	Identifier	enc		1991936	0					
ANR	1992477	Identifier	to_zval		1991936	1					
ANR	1992478	ExpressionStatement	new_enc -> details . map = emalloc ( sizeof ( soapMapping ) )	1099:3:40740:40791	1991936	7	True				
ANR	1992479	AssignmentExpression	new_enc -> details . map = emalloc ( sizeof ( soapMapping ) )		1991936	0		=			
ANR	1992480	MemberAccess	new_enc -> details . map		1991936	0					
ANR	1992481	PtrMemberAccess	new_enc -> details		1991936	0					
ANR	1992482	Identifier	new_enc		1991936	0					
ANR	1992483	Identifier	details		1991936	1					
ANR	1992484	Identifier	map		1991936	1					
ANR	1992485	CallExpression	emalloc ( sizeof ( soapMapping ) )		1991936	1					
ANR	1992486	Callee	emalloc		1991936	0					
ANR	1992487	Identifier	emalloc		1991936	0					
ANR	1992488	ArgumentList	sizeof ( soapMapping )		1991936	1					
ANR	1992489	Argument	sizeof ( soapMapping )		1991936	0					
ANR	1992490	SizeofExpression	sizeof ( soapMapping )		1991936	0					
ANR	1992491	Sizeof	sizeof		1991936	0					
ANR	1992492	SizeofOperand	soapMapping		1991936	1					
ANR	1992493	ExpressionStatement	"memset ( new_enc -> details . map , 0 , sizeof ( soapMapping ) )"	1100:3:40796:40848	1991936	8	True				
ANR	1992494	CallExpression	"memset ( new_enc -> details . map , 0 , sizeof ( soapMapping ) )"		1991936	0					
ANR	1992495	Callee	memset		1991936	0					
ANR	1992496	Identifier	memset		1991936	0					
ANR	1992497	ArgumentList	new_enc -> details . map		1991936	1					
ANR	1992498	Argument	new_enc -> details . map		1991936	0					
ANR	1992499	MemberAccess	new_enc -> details . map		1991936	0					
ANR	1992500	PtrMemberAccess	new_enc -> details		1991936	0					
ANR	1992501	Identifier	new_enc		1991936	0					
ANR	1992502	Identifier	details		1991936	1					
ANR	1992503	Identifier	map		1991936	1					
ANR	1992504	Argument	0		1991936	1					
ANR	1992505	PrimaryExpression	0		1991936	0					
ANR	1992506	Argument	sizeof ( soapMapping )		1991936	2					
ANR	1992507	SizeofExpression	sizeof ( soapMapping )		1991936	0					
ANR	1992508	Sizeof	sizeof		1991936	0					
ANR	1992509	SizeofOperand	soapMapping		1991936	1					
ANR	1992510	IfStatement	if ( to_xml )		1991936	9					
ANR	1992511	Condition	to_xml	1101:7:40857:40862	1991936	0	True				
ANR	1992512	Identifier	to_xml		1991936	0					
ANR	1992513	CompoundStatement		73:15:2212:2212	1991936	1					
ANR	1992514	ExpressionStatement	"ZVAL_COPY ( & new_enc -> details . map -> to_xml , to_xml )"	1102:4:40871:40919	1991936	0	True				
ANR	1992515	CallExpression	"ZVAL_COPY ( & new_enc -> details . map -> to_xml , to_xml )"		1991936	0					
ANR	1992516	Callee	ZVAL_COPY		1991936	0					
ANR	1992517	Identifier	ZVAL_COPY		1991936	0					
ANR	1992518	ArgumentList	& new_enc -> details . map -> to_xml		1991936	1					
ANR	1992519	Argument	& new_enc -> details . map -> to_xml		1991936	0					
ANR	1992520	UnaryOperationExpression	& new_enc -> details . map -> to_xml		1991936	0					
ANR	1992521	UnaryOperator	&		1991936	0					
ANR	1992522	PtrMemberAccess	new_enc -> details . map -> to_xml		1991936	1					
ANR	1992523	MemberAccess	new_enc -> details . map		1991936	0					
ANR	1992524	PtrMemberAccess	new_enc -> details		1991936	0					
ANR	1992525	Identifier	new_enc		1991936	0					
ANR	1992526	Identifier	details		1991936	1					
ANR	1992527	Identifier	map		1991936	1					
ANR	1992528	Identifier	to_xml		1991936	1					
ANR	1992529	Argument	to_xml		1991936	1					
ANR	1992530	Identifier	to_xml		1991936	0					
ANR	1992531	ExpressionStatement	new_enc -> to_xml = to_xml_user	1103:4:40925:40954	1991936	1	True				
ANR	1992532	AssignmentExpression	new_enc -> to_xml = to_xml_user		1991936	0		=			
ANR	1992533	PtrMemberAccess	new_enc -> to_xml		1991936	0					
ANR	1992534	Identifier	new_enc		1991936	0					
ANR	1992535	Identifier	to_xml		1991936	1					
ANR	1992536	Identifier	to_xml_user		1991936	1					
ANR	1992537	ElseStatement	else		1991936	0					
ANR	1992538	IfStatement	if ( enc -> details . map && Z_TYPE ( enc -> details . map -> to_xml ) != IS_UNDEF )		1991936	0					
ANR	1992539	Condition	enc -> details . map && Z_TYPE ( enc -> details . map -> to_xml ) != IS_UNDEF	1104:14:40970:41033	1991936	0	True				
ANR	1992540	AndExpression	enc -> details . map && Z_TYPE ( enc -> details . map -> to_xml ) != IS_UNDEF		1991936	0		&&			
ANR	1992541	MemberAccess	enc -> details . map		1991936	0					
ANR	1992542	PtrMemberAccess	enc -> details		1991936	0					
ANR	1992543	Identifier	enc		1991936	0					
ANR	1992544	Identifier	details		1991936	1					
ANR	1992545	Identifier	map		1991936	1					
ANR	1992546	EqualityExpression	Z_TYPE ( enc -> details . map -> to_xml ) != IS_UNDEF		1991936	1		!=			
ANR	1992547	CallExpression	Z_TYPE ( enc -> details . map -> to_xml )		1991936	0					
ANR	1992548	Callee	Z_TYPE		1991936	0					
ANR	1992549	Identifier	Z_TYPE		1991936	0					
ANR	1992550	ArgumentList	enc -> details . map -> to_xml		1991936	1					
ANR	1992551	Argument	enc -> details . map -> to_xml		1991936	0					
ANR	1992552	PtrMemberAccess	enc -> details . map -> to_xml		1991936	0					
ANR	1992553	MemberAccess	enc -> details . map		1991936	0					
ANR	1992554	PtrMemberAccess	enc -> details		1991936	0					
ANR	1992555	Identifier	enc		1991936	0					
ANR	1992556	Identifier	details		1991936	1					
ANR	1992557	Identifier	map		1991936	1					
ANR	1992558	Identifier	to_xml		1991936	1					
ANR	1992559	Identifier	IS_UNDEF		1991936	1					
ANR	1992560	CompoundStatement		76:80:2383:2383	1991936	1					
ANR	1992561	ExpressionStatement	"ZVAL_COPY ( & new_enc -> details . map -> to_xml , & enc -> details . map -> to_xml )"	1105:4:41042:41109	1991936	0	True				
ANR	1992562	CallExpression	"ZVAL_COPY ( & new_enc -> details . map -> to_xml , & enc -> details . map -> to_xml )"		1991936	0					
ANR	1992563	Callee	ZVAL_COPY		1991936	0					
ANR	1992564	Identifier	ZVAL_COPY		1991936	0					
ANR	1992565	ArgumentList	& new_enc -> details . map -> to_xml		1991936	1					
ANR	1992566	Argument	& new_enc -> details . map -> to_xml		1991936	0					
ANR	1992567	UnaryOperationExpression	& new_enc -> details . map -> to_xml		1991936	0					
ANR	1992568	UnaryOperator	&		1991936	0					
ANR	1992569	PtrMemberAccess	new_enc -> details . map -> to_xml		1991936	1					
ANR	1992570	MemberAccess	new_enc -> details . map		1991936	0					
ANR	1992571	PtrMemberAccess	new_enc -> details		1991936	0					
ANR	1992572	Identifier	new_enc		1991936	0					
ANR	1992573	Identifier	details		1991936	1					
ANR	1992574	Identifier	map		1991936	1					
ANR	1992575	Identifier	to_xml		1991936	1					
ANR	1992576	Argument	& enc -> details . map -> to_xml		1991936	1					
ANR	1992577	UnaryOperationExpression	& enc -> details . map -> to_xml		1991936	0					
ANR	1992578	UnaryOperator	&		1991936	0					
ANR	1992579	PtrMemberAccess	enc -> details . map -> to_xml		1991936	1					
ANR	1992580	MemberAccess	enc -> details . map		1991936	0					
ANR	1992581	PtrMemberAccess	enc -> details		1991936	0					
ANR	1992582	Identifier	enc		1991936	0					
ANR	1992583	Identifier	details		1991936	1					
ANR	1992584	Identifier	map		1991936	1					
ANR	1992585	Identifier	to_xml		1991936	1					
ANR	1992586	IfStatement	if ( to_zval )		1991936	10					
ANR	1992587	Condition	to_zval	1107:7:41123:41129	1991936	0	True				
ANR	1992588	Identifier	to_zval		1991936	0					
ANR	1992589	CompoundStatement		79:16:2479:2479	1991936	1					
ANR	1992590	ExpressionStatement	"ZVAL_COPY ( & new_enc -> details . map -> to_zval , to_zval )"	1108:4:41138:41188	1991936	0	True				
ANR	1992591	CallExpression	"ZVAL_COPY ( & new_enc -> details . map -> to_zval , to_zval )"		1991936	0					
ANR	1992592	Callee	ZVAL_COPY		1991936	0					
ANR	1992593	Identifier	ZVAL_COPY		1991936	0					
ANR	1992594	ArgumentList	& new_enc -> details . map -> to_zval		1991936	1					
ANR	1992595	Argument	& new_enc -> details . map -> to_zval		1991936	0					
ANR	1992596	UnaryOperationExpression	& new_enc -> details . map -> to_zval		1991936	0					
ANR	1992597	UnaryOperator	&		1991936	0					
ANR	1992598	PtrMemberAccess	new_enc -> details . map -> to_zval		1991936	1					
ANR	1992599	MemberAccess	new_enc -> details . map		1991936	0					
ANR	1992600	PtrMemberAccess	new_enc -> details		1991936	0					
ANR	1992601	Identifier	new_enc		1991936	0					
ANR	1992602	Identifier	details		1991936	1					
ANR	1992603	Identifier	map		1991936	1					
ANR	1992604	Identifier	to_zval		1991936	1					
ANR	1992605	Argument	to_zval		1991936	1					
ANR	1992606	Identifier	to_zval		1991936	0					
ANR	1992607	ExpressionStatement	new_enc -> to_zval = to_zval_user	1109:4:41194:41225	1991936	1	True				
ANR	1992608	AssignmentExpression	new_enc -> to_zval = to_zval_user		1991936	0		=			
ANR	1992609	PtrMemberAccess	new_enc -> to_zval		1991936	0					
ANR	1992610	Identifier	new_enc		1991936	0					
ANR	1992611	Identifier	to_zval		1991936	1					
ANR	1992612	Identifier	to_zval_user		1991936	1					
ANR	1992613	ElseStatement	else		1991936	0					
ANR	1992614	IfStatement	if ( enc -> details . map && Z_TYPE ( enc -> details . map -> to_zval ) != IS_UNDEF )		1991936	0					
ANR	1992615	Condition	enc -> details . map && Z_TYPE ( enc -> details . map -> to_zval ) != IS_UNDEF	1110:14:41241:41305	1991936	0	True				
ANR	1992616	AndExpression	enc -> details . map && Z_TYPE ( enc -> details . map -> to_zval ) != IS_UNDEF		1991936	0		&&			
ANR	1992617	MemberAccess	enc -> details . map		1991936	0					
ANR	1992618	PtrMemberAccess	enc -> details		1991936	0					
ANR	1992619	Identifier	enc		1991936	0					
ANR	1992620	Identifier	details		1991936	1					
ANR	1992621	Identifier	map		1991936	1					
ANR	1992622	EqualityExpression	Z_TYPE ( enc -> details . map -> to_zval ) != IS_UNDEF		1991936	1		!=			
ANR	1992623	CallExpression	Z_TYPE ( enc -> details . map -> to_zval )		1991936	0					
ANR	1992624	Callee	Z_TYPE		1991936	0					
ANR	1992625	Identifier	Z_TYPE		1991936	0					
ANR	1992626	ArgumentList	enc -> details . map -> to_zval		1991936	1					
ANR	1992627	Argument	enc -> details . map -> to_zval		1991936	0					
ANR	1992628	PtrMemberAccess	enc -> details . map -> to_zval		1991936	0					
ANR	1992629	MemberAccess	enc -> details . map		1991936	0					
ANR	1992630	PtrMemberAccess	enc -> details		1991936	0					
ANR	1992631	Identifier	enc		1991936	0					
ANR	1992632	Identifier	details		1991936	1					
ANR	1992633	Identifier	map		1991936	1					
ANR	1992634	Identifier	to_zval		1991936	1					
ANR	1992635	Identifier	IS_UNDEF		1991936	1					
ANR	1992636	CompoundStatement		82:81:2655:2655	1991936	1					
ANR	1992637	ExpressionStatement	"ZVAL_COPY ( & new_enc -> details . map -> to_zval , & enc -> details . map -> to_zval )"	1111:4:41314:41383	1991936	0	True				
ANR	1992638	CallExpression	"ZVAL_COPY ( & new_enc -> details . map -> to_zval , & enc -> details . map -> to_zval )"		1991936	0					
ANR	1992639	Callee	ZVAL_COPY		1991936	0					
ANR	1992640	Identifier	ZVAL_COPY		1991936	0					
ANR	1992641	ArgumentList	& new_enc -> details . map -> to_zval		1991936	1					
ANR	1992642	Argument	& new_enc -> details . map -> to_zval		1991936	0					
ANR	1992643	UnaryOperationExpression	& new_enc -> details . map -> to_zval		1991936	0					
ANR	1992644	UnaryOperator	&		1991936	0					
ANR	1992645	PtrMemberAccess	new_enc -> details . map -> to_zval		1991936	1					
ANR	1992646	MemberAccess	new_enc -> details . map		1991936	0					
ANR	1992647	PtrMemberAccess	new_enc -> details		1991936	0					
ANR	1992648	Identifier	new_enc		1991936	0					
ANR	1992649	Identifier	details		1991936	1					
ANR	1992650	Identifier	map		1991936	1					
ANR	1992651	Identifier	to_zval		1991936	1					
ANR	1992652	Argument	& enc -> details . map -> to_zval		1991936	1					
ANR	1992653	UnaryOperationExpression	& enc -> details . map -> to_zval		1991936	0					
ANR	1992654	UnaryOperator	&		1991936	0					
ANR	1992655	PtrMemberAccess	enc -> details . map -> to_zval		1991936	1					
ANR	1992656	MemberAccess	enc -> details . map		1991936	0					
ANR	1992657	PtrMemberAccess	enc -> details		1991936	0					
ANR	1992658	Identifier	enc		1991936	0					
ANR	1992659	Identifier	details		1991936	1					
ANR	1992660	Identifier	map		1991936	1					
ANR	1992661	Identifier	to_zval		1991936	1					
ANR	1992662	IfStatement	if ( ! typemap )		1991936	11					
ANR	1992663	Condition	! typemap	1113:7:41397:41404	1991936	0	True				
ANR	1992664	UnaryOperationExpression	! typemap		1991936	0					
ANR	1992665	UnaryOperator	!		1991936	0					
ANR	1992666	Identifier	typemap		1991936	1					
ANR	1992667	CompoundStatement		85:17:2754:2754	1991936	1					
ANR	1992668	ExpressionStatement	typemap = emalloc ( sizeof ( HashTable ) )	1114:4:41413:41449	1991936	0	True				
ANR	1992669	AssignmentExpression	typemap = emalloc ( sizeof ( HashTable ) )		1991936	0		=			
ANR	1992670	Identifier	typemap		1991936	0					
ANR	1992671	CallExpression	emalloc ( sizeof ( HashTable ) )		1991936	1					
ANR	1992672	Callee	emalloc		1991936	0					
ANR	1992673	Identifier	emalloc		1991936	0					
ANR	1992674	ArgumentList	sizeof ( HashTable )		1991936	1					
ANR	1992675	Argument	sizeof ( HashTable )		1991936	0					
ANR	1992676	SizeofExpression	sizeof ( HashTable )		1991936	0					
ANR	1992677	Sizeof	sizeof		1991936	0					
ANR	1992678	SizeofOperand	HashTable		1991936	1					
ANR	1992679	ExpressionStatement	"zend_hash_init ( typemap , 0 , NULL , delete_encoder , 0 )"	1115:4:41455:41506	1991936	1	True				
ANR	1992680	CallExpression	"zend_hash_init ( typemap , 0 , NULL , delete_encoder , 0 )"		1991936	0					
ANR	1992681	Callee	zend_hash_init		1991936	0					
ANR	1992682	Identifier	zend_hash_init		1991936	0					
ANR	1992683	ArgumentList	typemap		1991936	1					
ANR	1992684	Argument	typemap		1991936	0					
ANR	1992685	Identifier	typemap		1991936	0					
ANR	1992686	Argument	0		1991936	1					
ANR	1992687	PrimaryExpression	0		1991936	0					
ANR	1992688	Argument	NULL		1991936	2					
ANR	1992689	Identifier	NULL		1991936	0					
ANR	1992690	Argument	delete_encoder		1991936	3					
ANR	1992691	Identifier	delete_encoder		1991936	0					
ANR	1992692	Argument	0		1991936	4					
ANR	1992693	PrimaryExpression	0		1991936	0					
ANR	1992694	IfStatement	if ( type_ns )		1991936	12					
ANR	1992695	Condition	type_ns	1118:7:41521:41527	1991936	0	True				
ANR	1992696	Identifier	type_ns		1991936	0					
ANR	1992697	CompoundStatement		90:16:2877:2877	1991936	1					
ANR	1992698	ExpressionStatement	"smart_str_appends ( & nscat , type_ns )"	1119:4:41536:41570	1991936	0	True				
ANR	1992699	CallExpression	"smart_str_appends ( & nscat , type_ns )"		1991936	0					
ANR	1992700	Callee	smart_str_appends		1991936	0					
ANR	1992701	Identifier	smart_str_appends		1991936	0					
ANR	1992702	ArgumentList	& nscat		1991936	1					
ANR	1992703	Argument	& nscat		1991936	0					
ANR	1992704	UnaryOperationExpression	& nscat		1991936	0					
ANR	1992705	UnaryOperator	&		1991936	0					
ANR	1992706	Identifier	nscat		1991936	1					
ANR	1992707	Argument	type_ns		1991936	1					
ANR	1992708	Identifier	type_ns		1991936	0					
ANR	1992709	ExpressionStatement	"smart_str_appendc ( & nscat , ':' )"	1120:4:41576:41606	1991936	1	True				
ANR	1992710	CallExpression	"smart_str_appendc ( & nscat , ':' )"		1991936	0					
ANR	1992711	Callee	smart_str_appendc		1991936	0					
ANR	1992712	Identifier	smart_str_appendc		1991936	0					
ANR	1992713	ArgumentList	& nscat		1991936	1					
ANR	1992714	Argument	& nscat		1991936	0					
ANR	1992715	UnaryOperationExpression	& nscat		1991936	0					
ANR	1992716	UnaryOperator	&		1991936	0					
ANR	1992717	Identifier	nscat		1991936	1					
ANR	1992718	Argument	':'		1991936	1					
ANR	1992719	PrimaryExpression	':'		1991936	0					
ANR	1992720	ExpressionStatement	"smart_str_appends ( & nscat , type_name )"	1122:3:41616:41652	1991936	13	True				
ANR	1992721	CallExpression	"smart_str_appends ( & nscat , type_name )"		1991936	0					
ANR	1992722	Callee	smart_str_appends		1991936	0					
ANR	1992723	Identifier	smart_str_appends		1991936	0					
ANR	1992724	ArgumentList	& nscat		1991936	1					
ANR	1992725	Argument	& nscat		1991936	0					
ANR	1992726	UnaryOperationExpression	& nscat		1991936	0					
ANR	1992727	UnaryOperator	&		1991936	0					
ANR	1992728	Identifier	nscat		1991936	1					
ANR	1992729	Argument	type_name		1991936	1					
ANR	1992730	Identifier	type_name		1991936	0					
ANR	1992731	ExpressionStatement	smart_str_0 ( & nscat )	1123:3:41657:41676	1991936	14	True				
ANR	1992732	CallExpression	smart_str_0 ( & nscat )		1991936	0					
ANR	1992733	Callee	smart_str_0		1991936	0					
ANR	1992734	Identifier	smart_str_0		1991936	0					
ANR	1992735	ArgumentList	& nscat		1991936	1					
ANR	1992736	Argument	& nscat		1991936	0					
ANR	1992737	UnaryOperationExpression	& nscat		1991936	0					
ANR	1992738	UnaryOperator	&		1991936	0					
ANR	1992739	Identifier	nscat		1991936	1					
ANR	1992740	ExpressionStatement	"zend_hash_update_ptr ( typemap , nscat . s , new_enc )"	1124:3:41681:41728	1991936	15	True				
ANR	1992741	CallExpression	"zend_hash_update_ptr ( typemap , nscat . s , new_enc )"		1991936	0					
ANR	1992742	Callee	zend_hash_update_ptr		1991936	0					
ANR	1992743	Identifier	zend_hash_update_ptr		1991936	0					
ANR	1992744	ArgumentList	typemap		1991936	1					
ANR	1992745	Argument	typemap		1991936	0					
ANR	1992746	Identifier	typemap		1991936	0					
ANR	1992747	Argument	nscat . s		1991936	1					
ANR	1992748	MemberAccess	nscat . s		1991936	0					
ANR	1992749	Identifier	nscat		1991936	0					
ANR	1992750	Identifier	s		1991936	1					
ANR	1992751	Argument	new_enc		1991936	2					
ANR	1992752	Identifier	new_enc		1991936	0					
ANR	1992753	ExpressionStatement	smart_str_free ( & nscat )	1125:3:41733:41755	1991936	16	True				
ANR	1992754	CallExpression	smart_str_free ( & nscat )		1991936	0					
ANR	1992755	Callee	smart_str_free		1991936	0					
ANR	1992756	Identifier	smart_str_free		1991936	0					
ANR	1992757	ArgumentList	& nscat		1991936	1					
ANR	1992758	Argument	& nscat		1991936	0					
ANR	1992759	UnaryOperationExpression	& nscat		1991936	0					
ANR	1992760	UnaryOperator	&		1991936	0					
ANR	1992761	Identifier	nscat		1991936	1					
ANR	1992762	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1127:3:41764:41787	1991936	10	True				
ANR	1992763	CallExpression	ZEND_HASH_FOREACH_END ( )		1991936	0					
ANR	1992764	Callee	ZEND_HASH_FOREACH_END		1991936	0					
ANR	1992765	Identifier	ZEND_HASH_FOREACH_END		1991936	0					
ANR	1992766	ArgumentList			1991936	1					
ANR	1992767	ReturnStatement	return typemap ;	1128:1:41790:41804	1991936	11	True				
ANR	1992768	Identifier	typemap		1991936	0					
ANR	1992769	ReturnType	static HashTable *		1991936	1					
ANR	1992770	Identifier	soap_create_typemap		1991936	2					
ANR	1992771	ParameterList	"sdlPtr sdl , HashTable * ht"		1991936	3					
ANR	1992772	Parameter	sdlPtr sdl	1028:38:38625:38634	1991936	0	True				
ANR	1992773	ParameterType	sdlPtr		1991936	0					
ANR	1992774	Identifier	sdl		1991936	1					
ANR	1992775	Parameter	HashTable * ht	1028:50:38637:38649	1991936	1	True				
ANR	1992776	ParameterType	HashTable *		1991936	0					
ANR	1992777	Identifier	ht		1991936	1					
ANR	1992778	CFGEntryNode	ENTRY		1991936		True				
ANR	1992779	CFGExitNode	EXIT		1991936		True				
ANR	1992780	Symbol	delete_encoder		1991936						
ANR	1992781	Symbol	type_name		1991936						
ANR	1992782	Symbol	& new_enc -> details . map -> to_xml		1991936						
ANR	1992783	Symbol	Z_TYPE		1991936						
ANR	1992784	Symbol	get_conversion		1991936						
ANR	1992785	Symbol	ht		1991936						
ANR	1992786	Symbol	enc -> details . map -> to_zval		1991936						
ANR	1992787	Symbol	UNKNOWN_TYPE		1991936						
ANR	1992788	Symbol	strncmp		1991936						
ANR	1992789	Symbol	strlen		1991936						
ANR	1992790	Symbol	enc -> details . type		1991936						
ANR	1992791	Symbol	to_zval_user		1991936						
ANR	1992792	Symbol	tmp		1991936						
ANR	1992793	Symbol	new_enc -> to_zval		1991936						
ANR	1992794	Symbol	to_xml_user		1991936						
ANR	1992795	Symbol	to_zval		1991936						
ANR	1992796	Symbol	IS_STRING		1991936						
ANR	1992797	Symbol	IS_UNDEF		1991936						
ANR	1992798	Symbol	new_enc -> details . ns		1991936						
ANR	1992799	Symbol	NULL		1991936						
ANR	1992800	Symbol	* new_enc		1991936						
ANR	1992801	Symbol	ht2		1991936						
ANR	1992802	Symbol	new_enc -> details		1991936						
ANR	1992803	Symbol	* enc -> details . map		1991936						
ANR	1992804	Symbol	enc -> to_zval		1991936						
ANR	1992805	Symbol	new_enc -> details . sdl_type		1991936						
ANR	1992806	Symbol	* * enc		1991936						
ANR	1992807	Symbol	nscat		1991936						
ANR	1992808	Symbol	name		1991936						
ANR	1992809	Symbol	new_enc -> details . type		1991936						
ANR	1992810	Symbol	sdl		1991936						
ANR	1992811	Symbol	enc -> details . ns		1991936						
ANR	1992812	Symbol	new_enc		1991936						
ANR	1992813	Symbol	* enc		1991936						
ANR	1992814	Symbol	& enc -> details . map -> to_zval		1991936						
ANR	1992815	Symbol	& new_enc -> details . map -> to_zval		1991936						
ANR	1992816	Symbol	get_encoder_ex		1991936						
ANR	1992817	Symbol	enc -> details . map		1991936						
ANR	1992818	Symbol	typemap		1991936						
ANR	1992819	Symbol	enc -> details		1991936						
ANR	1992820	Symbol	type_ns		1991936						
ANR	1992821	Symbol	& enc -> details . map -> to_xml		1991936						
ANR	1992822	Symbol	E_WARNING		1991936						
ANR	1992823	Symbol	enc -> details . type_str		1991936						
ANR	1992824	Symbol	emalloc		1991936						
ANR	1992825	Symbol	new_enc -> details . type_str		1991936						
ANR	1992826	Symbol	IS_NULL		1991936						
ANR	1992827	Symbol	IS_ARRAY		1991936						
ANR	1992828	Symbol	enc		1991936						
ANR	1992829	Symbol	Z_ARRVAL_P		1991936						
ANR	1992830	Symbol	nscat . s		1991936						
ANR	1992831	Symbol	* enc -> details		1991936						
ANR	1992832	Symbol	enc -> details . sdl_type		1991936						
ANR	1992833	Symbol	enc -> to_xml		1991936						
ANR	1992834	Symbol	to_xml		1991936						
ANR	1992835	Symbol	new_enc -> details . map		1991936						
ANR	1992836	Symbol	enc -> details . map -> to_xml		1991936						
ANR	1992837	Symbol	Z_TYPE_P		1991936						
ANR	1992838	Symbol	Z_STRVAL_P		1991936						
ANR	1992839	Symbol	ZSTR_VAL		1991936						
ANR	1992840	Symbol	get_encoder		1991936						
ANR	1992841	Symbol	new_enc -> to_xml		1991936						
ANR	1992842	Symbol	ZSTR_LEN		1991936						
ANR	1992843	Symbol	estrdup		1991936						
ANR	1992844	Symbol	& nscat		1991936						
ANR	1992845	DeclStmt									
ANR	1992846	Decl							soapServicePtr	soapServicePtr	service
ANR	1992847	DeclStmt									
ANR	1992848	Decl							zval	zval *	wsdl
ANR	1992849	Decl							zval	zval *	options
ANR	1992850	DeclStmt									
ANR	1992851	Decl							zend_resource	zend_resource *	res
ANR	1992852	DeclStmt									
ANR	1992853	Decl							int	int	version
ANR	1992854	DeclStmt									
ANR	1992855	Decl							zend_long	zend_long	cache_wsdl
ANR	1992856	DeclStmt									
ANR	1992857	Decl							HashTable	HashTable *	typemap_ht
ANR	1992858	DeclStmt									
ANR	1992859	Decl							HashTable	HashTable *	ht
ANR	1992860	DeclStmt									
ANR	1992861	Decl							zval	zval *	tmp
ANR	1992862	DeclStmt									
ANR	1992863	Decl							xmlCharEncodingHandlerPtr	xmlCharEncodingHandlerPtr	encoding
ANR	1992864	DeclStmt									
ANR	1992865	Decl							soapServicePtr	soapServicePtr	service
ANR	1992866	DeclStmt									
ANR	1992867	Decl							zend_long	zend_long	value
ANR	1992868	DeclStmt									
ANR	1992869	Decl							soapServicePtr	soapServicePtr	service
ANR	1992870	DeclStmt									
ANR	1992871	Decl							zend_string	zend_string *	classname
ANR	1992872	DeclStmt									
ANR	1992873	Decl							zend_class_entry	zend_class_entry *	ce
ANR	1992874	DeclStmt									
ANR	1992875	Decl							int	int	num_args
ANR	1992876	DeclStmt									
ANR	1992877	Decl							zval	zval *	argv
ANR	1992878	DeclStmt									
ANR	1992879	Decl							int	int	i
ANR	1992880	DeclStmt									
ANR	1992881	Decl							soapServicePtr	soapServicePtr	service
ANR	1992882	DeclStmt									
ANR	1992883	Decl							zval	zval *	obj
ANR	1992884	DeclStmt									
ANR	1992885	Decl							soapServicePtr	soapServicePtr	service
ANR	1992886	DeclStmt									
ANR	1992887	Decl							HashTable	HashTable *	ft
ANR	1992888	DeclStmt									
ANR	1992889	Decl							zval	zval *	name
ANR	1992890	DeclStmt									
ANR	1992891	Decl							zend_function	zend_function *	f
ANR	1992892	DeclStmt									
ANR	1992893	Decl							soapServicePtr	soapServicePtr	service
ANR	1992894	DeclStmt									
ANR	1992895	Decl							zval	zval *	function_name
ANR	1992896	Decl							zval	zval	function_copy
ANR	1992897	DeclStmt									
ANR	1992898	Decl							zval	zval *	tmp_function
ANR	1992899	DeclStmt									
ANR	1992900	Decl							zend_string	zend_string *	key
ANR	1992901	DeclStmt									
ANR	1992902	Decl							zend_function	zend_function *	f
ANR	1992903	DeclStmt									
ANR	1992904	Decl							zend_string	zend_string *	key
ANR	1992905	DeclStmt									
ANR	1992906	Decl							zend_function	zend_function *	f
ANR	1992907	Function	_soap_server_exception	1491:0:52229:53086							
ANR	1992908	FunctionDef	"_soap_server_exception (soapServicePtr service , sdlFunctionPtr function , zval * this_ptr)"		1992907	0					
ANR	1992909	CompoundStatement		1492:0:52339:53086	1992907	0					
ANR	1992910	IdentifierDeclStatement	zval exception_object ;	1493:1:52342:52363	1992907	0	True				
ANR	1992911	IdentifierDecl	exception_object		1992907	0					
ANR	1992912	IdentifierDeclType	zval		1992907	0					
ANR	1992913	Identifier	exception_object		1992907	1					
ANR	1992914	ExpressionStatement	"ZVAL_OBJ ( & exception_object , EG ( exception ) )"	1495:1:52367:52409	1992907	1	True				
ANR	1992915	CallExpression	"ZVAL_OBJ ( & exception_object , EG ( exception ) )"		1992907	0					
ANR	1992916	Callee	ZVAL_OBJ		1992907	0					
ANR	1992917	Identifier	ZVAL_OBJ		1992907	0					
ANR	1992918	ArgumentList	& exception_object		1992907	1					
ANR	1992919	Argument	& exception_object		1992907	0					
ANR	1992920	UnaryOperationExpression	& exception_object		1992907	0					
ANR	1992921	UnaryOperator	&		1992907	0					
ANR	1992922	Identifier	exception_object		1992907	1					
ANR	1992923	Argument	EG ( exception )		1992907	1					
ANR	1992924	CallExpression	EG ( exception )		1992907	0					
ANR	1992925	Callee	EG		1992907	0					
ANR	1992926	Identifier	EG		1992907	0					
ANR	1992927	ArgumentList	exception		1992907	1					
ANR	1992928	Argument	exception		1992907	0					
ANR	1992929	Identifier	exception		1992907	0					
ANR	1992930	IfStatement	"if ( instanceof_function ( Z_OBJCE ( exception_object ) , soap_fault_class_entry ) )"		1992907	2					
ANR	1992931	Condition	"instanceof_function ( Z_OBJCE ( exception_object ) , soap_fault_class_entry )"	1496:5:52416:52485	1992907	0	True				
ANR	1992932	CallExpression	"instanceof_function ( Z_OBJCE ( exception_object ) , soap_fault_class_entry )"		1992907	0					
ANR	1992933	Callee	instanceof_function		1992907	0					
ANR	1992934	Identifier	instanceof_function		1992907	0					
ANR	1992935	ArgumentList	Z_OBJCE ( exception_object )		1992907	1					
ANR	1992936	Argument	Z_OBJCE ( exception_object )		1992907	0					
ANR	1992937	CallExpression	Z_OBJCE ( exception_object )		1992907	0					
ANR	1992938	Callee	Z_OBJCE		1992907	0					
ANR	1992939	Identifier	Z_OBJCE		1992907	0					
ANR	1992940	ArgumentList	exception_object		1992907	1					
ANR	1992941	Argument	exception_object		1992907	0					
ANR	1992942	Identifier	exception_object		1992907	0					
ANR	1992943	Argument	soap_fault_class_entry		1992907	1					
ANR	1992944	Identifier	soap_fault_class_entry		1992907	0					
ANR	1992945	CompoundStatement		5:77:148:148	1992907	1					
ANR	1992946	ExpressionStatement	"soap_server_fault_ex ( function , & exception_object , NULL )"	1497:2:52492:52547	1992907	0	True				
ANR	1992947	CallExpression	"soap_server_fault_ex ( function , & exception_object , NULL )"		1992907	0					
ANR	1992948	Callee	soap_server_fault_ex		1992907	0					
ANR	1992949	Identifier	soap_server_fault_ex		1992907	0					
ANR	1992950	ArgumentList	function		1992907	1					
ANR	1992951	Argument	function		1992907	0					
ANR	1992952	Identifier	function		1992907	0					
ANR	1992953	Argument	& exception_object		1992907	1					
ANR	1992954	UnaryOperationExpression	& exception_object		1992907	0					
ANR	1992955	UnaryOperator	&		1992907	0					
ANR	1992956	Identifier	exception_object		1992907	1					
ANR	1992957	Argument	NULL		1992907	2					
ANR	1992958	Identifier	NULL		1992907	0					
ANR	1992959	ElseStatement	else		1992907	0					
ANR	1992960	IfStatement	"if ( instanceof_function ( Z_OBJCE ( exception_object ) , zend_ce_error ) )"		1992907	0					
ANR	1992961	Condition	"instanceof_function ( Z_OBJCE ( exception_object ) , zend_ce_error )"	1498:12:52561:52621	1992907	0	True				
ANR	1992962	CallExpression	"instanceof_function ( Z_OBJCE ( exception_object ) , zend_ce_error )"		1992907	0					
ANR	1992963	Callee	instanceof_function		1992907	0					
ANR	1992964	Identifier	instanceof_function		1992907	0					
ANR	1992965	ArgumentList	Z_OBJCE ( exception_object )		1992907	1					
ANR	1992966	Argument	Z_OBJCE ( exception_object )		1992907	0					
ANR	1992967	CallExpression	Z_OBJCE ( exception_object )		1992907	0					
ANR	1992968	Callee	Z_OBJCE		1992907	0					
ANR	1992969	Identifier	Z_OBJCE		1992907	0					
ANR	1992970	ArgumentList	exception_object		1992907	1					
ANR	1992971	Argument	exception_object		1992907	0					
ANR	1992972	Identifier	exception_object		1992907	0					
ANR	1992973	Argument	zend_ce_error		1992907	1					
ANR	1992974	Identifier	zend_ce_error		1992907	0					
ANR	1992975	CompoundStatement		7:75:284:284	1992907	1					
ANR	1992976	IfStatement	if ( service -> send_errors )		1992907	0					
ANR	1992977	Condition	service -> send_errors	1499:6:52632:52651	1992907	0	True				
ANR	1992978	PtrMemberAccess	service -> send_errors		1992907	0					
ANR	1992979	Identifier	service		1992907	0					
ANR	1992980	Identifier	send_errors		1992907	1					
ANR	1992981	CompoundStatement		10:3:331:459	1992907	1					
ANR	1992982	IdentifierDeclStatement	zval rv ;	1500:3:52659:52666	1992907	0	True				
ANR	1992983	IdentifierDecl	rv		1992907	0					
ANR	1992984	IdentifierDeclType	zval		1992907	0					
ANR	1992985	Identifier	rv		1992907	1					
ANR	1992986	IdentifierDeclStatement	"zend_string * msg = zval_get_string ( zend_read_property ( zend_ce_error , & exception_object , ""message"" , sizeof ( ""message"" ) - 1 , 0 , & rv ) ) ;"	1501:3:52671:52799	1992907	1	True				
ANR	1992987	IdentifierDecl	"* msg = zval_get_string ( zend_read_property ( zend_ce_error , & exception_object , ""message"" , sizeof ( ""message"" ) - 1 , 0 , & rv ) )"		1992907	0					
ANR	1992988	IdentifierDeclType	zend_string *		1992907	0					
ANR	1992989	Identifier	msg		1992907	1					
ANR	1992990	AssignmentExpression	"* msg = zval_get_string ( zend_read_property ( zend_ce_error , & exception_object , ""message"" , sizeof ( ""message"" ) - 1 , 0 , & rv ) )"		1992907	2		=			
ANR	1992991	Identifier	msg		1992907	0					
ANR	1992992	CallExpression	"zval_get_string ( zend_read_property ( zend_ce_error , & exception_object , ""message"" , sizeof ( ""message"" ) - 1 , 0 , & rv ) )"		1992907	1					
ANR	1992993	Callee	zval_get_string		1992907	0					
ANR	1992994	Identifier	zval_get_string		1992907	0					
ANR	1992995	ArgumentList	"zend_read_property ( zend_ce_error , & exception_object , ""message"" , sizeof ( ""message"" ) - 1 , 0 , & rv )"		1992907	1					
ANR	1992996	Argument	"zend_read_property ( zend_ce_error , & exception_object , ""message"" , sizeof ( ""message"" ) - 1 , 0 , & rv )"		1992907	0					
ANR	1992997	CallExpression	"zend_read_property ( zend_ce_error , & exception_object , ""message"" , sizeof ( ""message"" ) - 1 , 0 , & rv )"		1992907	0					
ANR	1992998	Callee	zend_read_property		1992907	0					
ANR	1992999	Identifier	zend_read_property		1992907	0					
ANR	1993000	ArgumentList	zend_ce_error		1992907	1					
ANR	1993001	Argument	zend_ce_error		1992907	0					
ANR	1993002	Identifier	zend_ce_error		1992907	0					
ANR	1993003	Argument	& exception_object		1992907	1					
ANR	1993004	UnaryOperationExpression	& exception_object		1992907	0					
ANR	1993005	UnaryOperator	&		1992907	0					
ANR	1993006	Identifier	exception_object		1992907	1					
ANR	1993007	Argument	"""message"""		1992907	2					
ANR	1993008	PrimaryExpression	"""message"""		1992907	0					
ANR	1993009	Argument	"sizeof ( ""message"" ) - 1"		1992907	3					
ANR	1993010	AdditiveExpression	"sizeof ( ""message"" ) - 1"		1992907	0		-			
ANR	1993011	SizeofExpression	"sizeof ( ""message"" )"		1992907	0					
ANR	1993012	Sizeof	sizeof		1992907	0					
ANR	1993013	PrimaryExpression	"""message"""		1992907	1					
ANR	1993014	PrimaryExpression	1		1992907	1					
ANR	1993015	Argument	0		1992907	4					
ANR	1993016	PrimaryExpression	0		1992907	0					
ANR	1993017	Argument	& rv		1992907	5					
ANR	1993018	UnaryOperationExpression	& rv		1992907	0					
ANR	1993019	UnaryOperator	&		1992907	0					
ANR	1993020	Identifier	rv		1992907	1					
ANR	1993021	ExpressionStatement	"add_soap_fault_ex ( & exception_object , this_ptr , ""Server"" , ZSTR_VAL ( msg ) , NULL , NULL )"	1502:3:52804:52887	1992907	2	True				
ANR	1993022	CallExpression	"add_soap_fault_ex ( & exception_object , this_ptr , ""Server"" , ZSTR_VAL ( msg ) , NULL , NULL )"		1992907	0					
ANR	1993023	Callee	add_soap_fault_ex		1992907	0					
ANR	1993024	Identifier	add_soap_fault_ex		1992907	0					
ANR	1993025	ArgumentList	& exception_object		1992907	1					
ANR	1993026	Argument	& exception_object		1992907	0					
ANR	1993027	UnaryOperationExpression	& exception_object		1992907	0					
ANR	1993028	UnaryOperator	&		1992907	0					
ANR	1993029	Identifier	exception_object		1992907	1					
ANR	1993030	Argument	this_ptr		1992907	1					
ANR	1993031	Identifier	this_ptr		1992907	0					
ANR	1993032	Argument	"""Server"""		1992907	2					
ANR	1993033	PrimaryExpression	"""Server"""		1992907	0					
ANR	1993034	Argument	ZSTR_VAL ( msg )		1992907	3					
ANR	1993035	CallExpression	ZSTR_VAL ( msg )		1992907	0					
ANR	1993036	Callee	ZSTR_VAL		1992907	0					
ANR	1993037	Identifier	ZSTR_VAL		1992907	0					
ANR	1993038	ArgumentList	msg		1992907	1					
ANR	1993039	Argument	msg		1992907	0					
ANR	1993040	Identifier	msg		1992907	0					
ANR	1993041	Argument	NULL		1992907	4					
ANR	1993042	Identifier	NULL		1992907	0					
ANR	1993043	Argument	NULL		1992907	5					
ANR	1993044	Identifier	NULL		1992907	0					
ANR	1993045	ExpressionStatement	zend_string_release ( msg )	1503:3:52892:52916	1992907	3	True				
ANR	1993046	CallExpression	zend_string_release ( msg )		1992907	0					
ANR	1993047	Callee	zend_string_release		1992907	0					
ANR	1993048	Identifier	zend_string_release		1992907	0					
ANR	1993049	ArgumentList	msg		1992907	1					
ANR	1993050	Argument	msg		1992907	0					
ANR	1993051	Identifier	msg		1992907	0					
ANR	1993052	ElseStatement	else		1992907	0					
ANR	1993053	CompoundStatement		13:9:587:587	1992907	0					
ANR	1993054	ExpressionStatement	"add_soap_fault_ex ( & exception_object , this_ptr , ""Server"" , ""Internal Error"" , NULL , NULL )"	1505:3:52932:53018	1992907	0	True				
ANR	1993055	CallExpression	"add_soap_fault_ex ( & exception_object , this_ptr , ""Server"" , ""Internal Error"" , NULL , NULL )"		1992907	0					
ANR	1993056	Callee	add_soap_fault_ex		1992907	0					
ANR	1993057	Identifier	add_soap_fault_ex		1992907	0					
ANR	1993058	ArgumentList	& exception_object		1992907	1					
ANR	1993059	Argument	& exception_object		1992907	0					
ANR	1993060	UnaryOperationExpression	& exception_object		1992907	0					
ANR	1993061	UnaryOperator	&		1992907	0					
ANR	1993062	Identifier	exception_object		1992907	1					
ANR	1993063	Argument	this_ptr		1992907	1					
ANR	1993064	Identifier	this_ptr		1992907	0					
ANR	1993065	Argument	"""Server"""		1992907	2					
ANR	1993066	PrimaryExpression	"""Server"""		1992907	0					
ANR	1993067	Argument	"""Internal Error"""		1992907	3					
ANR	1993068	PrimaryExpression	"""Internal Error"""		1992907	0					
ANR	1993069	Argument	NULL		1992907	4					
ANR	1993070	Identifier	NULL		1992907	0					
ANR	1993071	Argument	NULL		1992907	5					
ANR	1993072	Identifier	NULL		1992907	0					
ANR	1993073	ExpressionStatement	"soap_server_fault_ex ( function , & exception_object , NULL )"	1507:2:53026:53081	1992907	1	True				
ANR	1993074	CallExpression	"soap_server_fault_ex ( function , & exception_object , NULL )"		1992907	0					
ANR	1993075	Callee	soap_server_fault_ex		1992907	0					
ANR	1993076	Identifier	soap_server_fault_ex		1992907	0					
ANR	1993077	ArgumentList	function		1992907	1					
ANR	1993078	Argument	function		1992907	0					
ANR	1993079	Identifier	function		1992907	0					
ANR	1993080	Argument	& exception_object		1992907	1					
ANR	1993081	UnaryOperationExpression	& exception_object		1992907	0					
ANR	1993082	UnaryOperator	&		1992907	0					
ANR	1993083	Identifier	exception_object		1992907	1					
ANR	1993084	Argument	NULL		1992907	2					
ANR	1993085	Identifier	NULL		1992907	0					
ANR	1993086	ReturnType	static void		1992907	1					
ANR	1993087	Identifier	_soap_server_exception		1992907	2					
ANR	1993088	ParameterList	"soapServicePtr service , sdlFunctionPtr function , zval * this_ptr"		1992907	3					
ANR	1993089	Parameter	soapServicePtr service	1491:35:52264:52285	1992907	0	True				
ANR	1993090	ParameterType	soapServicePtr		1992907	0					
ANR	1993091	Identifier	service		1992907	1					
ANR	1993092	Parameter	sdlFunctionPtr function	1491:59:52288:52310	1992907	1	True				
ANR	1993093	ParameterType	sdlFunctionPtr		1992907	0					
ANR	1993094	Identifier	function		1992907	1					
ANR	1993095	Parameter	zval * this_ptr	1491:84:52313:52326	1992907	2	True				
ANR	1993096	ParameterType	zval *		1992907	0					
ANR	1993097	Identifier	this_ptr		1992907	1					
ANR	1993098	CFGEntryNode	ENTRY		1992907		True				
ANR	1993099	CFGExitNode	EXIT		1992907		True				
ANR	1993100	Symbol	exception		1992907						
ANR	1993101	Symbol	instanceof_function		1992907						
ANR	1993102	Symbol	msg		1992907						
ANR	1993103	Symbol	EG		1992907						
ANR	1993104	Symbol	NULL		1992907						
ANR	1993105	Symbol	rv		1992907						
ANR	1993106	Symbol	zend_ce_error		1992907						
ANR	1993107	Symbol	zval_get_string		1992907						
ANR	1993108	Symbol	& rv		1992907						
ANR	1993109	Symbol	ZSTR_VAL		1992907						
ANR	1993110	Symbol	soap_fault_class_entry		1992907						
ANR	1993111	Symbol	Z_OBJCE		1992907						
ANR	1993112	Symbol	this_ptr		1992907						
ANR	1993113	Symbol	service -> send_errors		1992907						
ANR	1993114	Symbol	zend_read_property		1992907						
ANR	1993115	Symbol	service		1992907						
ANR	1993116	Symbol	function		1992907						
ANR	1993117	Symbol	exception_object		1992907						
ANR	1993118	Symbol	* service		1992907						
ANR	1993119	Symbol	& exception_object		1992907						
ANR	1993120	DeclStmt									
ANR	1993121	Decl							int	int	soap_version
ANR	1993122	Decl							int	int	old_soap_version
ANR	1993123	DeclStmt									
ANR	1993124	Decl							sdlPtr	sdlPtr	old_sdl
ANR	1993125	DeclStmt									
ANR	1993126	Decl							soapServicePtr	soapServicePtr	service
ANR	1993127	DeclStmt									
ANR	1993128	Decl							xmlDocPtr	xmlDocPtr	doc_request
ANR	1993129	Decl							xmlDocPtr	xmlDocPtr	doc_return
ANR	1993130	DeclStmt									
ANR	1993131	Decl							zval	zval	function_name
ANR	1993132	Decl							zval	zval *	params
ANR	1993133	Decl							zval	zval *	soap_obj
ANR	1993134	Decl							zval	zval	retval
ANR	1993135	DeclStmt									
ANR	1993136	Decl							char	char *	fn_name
ANR	1993137	Decl							char	char [ 30 ]	cont_len
ANR	1993138	DeclStmt									
ANR	1993139	Decl							int	int	num_params
ANR	1993140	Decl							int	int	size
ANR	1993141	Decl							int	int	i
ANR	1993142	Decl							int	int	call_status
ANR	1993143	DeclStmt									
ANR	1993144	Decl							xmlChar	xmlChar *	buf
ANR	1993145	DeclStmt									
ANR	1993146	Decl							HashTable	HashTable *	function_table
ANR	1993147	DeclStmt									
ANR	1993148	Decl							soapHeader	soapHeader *	soap_headers
ANR	1993149	DeclStmt									
ANR	1993150	Decl							sdlFunctionPtr	sdlFunctionPtr	function
ANR	1993151	DeclStmt									
ANR	1993152	Decl							char	char *	arg
ANR	1993153	DeclStmt									
ANR	1993154	Decl							size_t	size_t	arg_len
ANR	1993155	DeclStmt									
ANR	1993156	Decl							xmlCharEncodingHandlerPtr	xmlCharEncodingHandlerPtr	old_encoding
ANR	1993157	DeclStmt									
ANR	1993158	Decl							HashTable	HashTable *	old_class_map
ANR	1993159	Decl							HashTable	HashTable *	old_typemap
ANR	1993160	DeclStmt									
ANR	1993161	Decl							int	int	old_features
ANR	1993162	DeclStmt									
ANR	1993163	Decl							zval	zval	readfile
ANR	1993164	Decl							zval	zval	readfile_ret
ANR	1993165	Decl							zval	zval	param
ANR	1993166	DeclStmt									
ANR	1993167	Decl							zval	zval *	server_vars
ANR	1993168	Decl							zval	zval *	encoding
ANR	1993169	DeclStmt									
ANR	1993170	Decl							php_stream_filter	php_stream_filter *	zf
ANR	1993171	DeclStmt									
ANR	1993172	Decl							zend_string	zend_string *	server
ANR	1993173	DeclStmt									
ANR	1993174	Decl							zval	zval	filter_params
ANR	1993175	DeclStmt									
ANR	1993176	Decl							xmlNodePtr	xmlNodePtr	env
ANR	1993177	DeclStmt									
ANR	1993178	Decl							zval	zval *	tmp_soap
ANR	1993179	DeclStmt									
ANR	1993180	Decl							zval	zval *	session_vars
ANR	1993181	DeclStmt									
ANR	1993182	Decl							zval	zval	tmp_soap
ANR	1993183	DeclStmt									
ANR	1993184	Decl							zval	zval	c_ret
ANR	1993185	Decl							zval	zval	constructor
ANR	1993186	DeclStmt									
ANR	1993187	Decl							int	int	class_name_len
ANR	1993188	DeclStmt									
ANR	1993189	Decl							char	char *	class_name
ANR	1993190	DeclStmt									
ANR	1993191	Decl							zval	zval	c_ret
ANR	1993192	Decl							zval	zval	constructor
ANR	1993193	DeclStmt									
ANR	1993194	Decl							zval	zval *	tmp_soap_pp
ANR	1993195	DeclStmt									
ANR	1993196	Decl							zval	zval *	session_vars
ANR	1993197	DeclStmt									
ANR	1993198	Decl							soapHeader	soapHeader *	header
ANR	1993199	DeclStmt									
ANR	1993200	Decl							soapHeader	soapHeader *	h
ANR	1993201	DeclStmt									
ANR	1993202	Decl							zval	zval *	tmp
ANR	1993203	DeclStmt									
ANR	1993204	Decl							char	char *	response_name
ANR	1993205	DeclStmt									
ANR	1993206	Decl							soapHeader	soapHeader *	h
ANR	1993207	DeclStmt									
ANR	1993208	Decl							int	int	i
ANR	1993209	DeclStmt									
ANR	1993210	Decl							char	char *	code
ANR	1993211	Decl							char	char *	string
ANR	1993212	Decl							char	char *	actor
ANR	1993213	Decl							char	char *	name
ANR	1993214	DeclStmt									
ANR	1993215	Decl							size_t	size_t	code_len
ANR	1993216	Decl							size_t	size_t	string_len
ANR	1993217	Decl							size_t	size_t	actor_len
ANR	1993218	Decl							size_t	size_t	name_len
ANR	1993219	DeclStmt									
ANR	1993220	Decl							zval	zval *	details
ANR	1993221	DeclStmt									
ANR	1993222	Decl							soapServicePtr	soapServicePtr	service
ANR	1993223	DeclStmt									
ANR	1993224	Decl							xmlCharEncodingHandlerPtr	xmlCharEncodingHandlerPtr	old_encoding
ANR	1993225	DeclStmt									
ANR	1993226	Decl							soapServicePtr	soapServicePtr	service
ANR	1993227	DeclStmt									
ANR	1993228	Decl							zval	zval *	fault
ANR	1993229	DeclStmt									
ANR	1993230	Decl							soapHeader	soapHeader * *	p
ANR	1993231	Function	soap_server_fault_ex	2066:0:70782:72574							
ANR	1993232	FunctionDef	"soap_server_fault_ex (sdlFunctionPtr function , zval * fault , soapHeader * hdr)"		1993231	0					
ANR	1993233	CompoundStatement		2067:0:70870:72574	1993231	0					
ANR	1993234	IdentifierDeclStatement	int soap_version ;	2068:1:70873:70889	1993231	0	True				
ANR	1993235	IdentifierDecl	soap_version		1993231	0					
ANR	1993236	IdentifierDeclType	int		1993231	0					
ANR	1993237	Identifier	soap_version		1993231	1					
ANR	1993238	IdentifierDeclStatement	xmlChar * buf ;	2069:1:70892:70904	1993231	1	True				
ANR	1993239	IdentifierDecl	* buf		1993231	0					
ANR	1993240	IdentifierDeclType	xmlChar *		1993231	0					
ANR	1993241	Identifier	buf		1993231	1					
ANR	1993242	IdentifierDeclStatement	char cont_len [ 30 ] ;	2070:1:70907:70924	1993231	2	True				
ANR	1993243	IdentifierDecl	cont_len [ 30 ]		1993231	0					
ANR	1993244	IdentifierDeclType	char [ 30 ]		1993231	0					
ANR	1993245	Identifier	cont_len		1993231	1					
ANR	1993246	PrimaryExpression	30		1993231	2					
ANR	1993247	IdentifierDeclStatement	int size ;	2071:1:70927:70935	1993231	3	True				
ANR	1993248	IdentifierDecl	size		1993231	0					
ANR	1993249	IdentifierDeclType	int		1993231	0					
ANR	1993250	Identifier	size		1993231	1					
ANR	1993251	IdentifierDeclStatement	xmlDocPtr doc_return ;	2072:1:70938:70958	1993231	4	True				
ANR	1993252	IdentifierDecl	doc_return		1993231	0					
ANR	1993253	IdentifierDeclType	xmlDocPtr		1993231	0					
ANR	1993254	Identifier	doc_return		1993231	1					
ANR	1993255	IdentifierDeclStatement	zval * agent_name ;	2073:1:70961:70977	1993231	5	True				
ANR	1993256	IdentifierDecl	* agent_name		1993231	0					
ANR	1993257	IdentifierDeclType	zval *		1993231	0					
ANR	1993258	Identifier	agent_name		1993231	1					
ANR	1993259	IdentifierDeclStatement	int use_http_error_status = 1 ;	2074:1:70980:71009	1993231	6	True				
ANR	1993260	IdentifierDecl	use_http_error_status = 1		1993231	0					
ANR	1993261	IdentifierDeclType	int		1993231	0					
ANR	1993262	Identifier	use_http_error_status		1993231	1					
ANR	1993263	AssignmentExpression	use_http_error_status = 1		1993231	2		=			
ANR	1993264	Identifier	use_http_error_status		1993231	0					
ANR	1993265	PrimaryExpression	1		1993231	1					
ANR	1993266	ExpressionStatement	soap_version = SOAP_GLOBAL ( soap_version )	2076:1:71013:71053	1993231	7	True				
ANR	1993267	AssignmentExpression	soap_version = SOAP_GLOBAL ( soap_version )		1993231	0		=			
ANR	1993268	Identifier	soap_version		1993231	0					
ANR	1993269	CallExpression	SOAP_GLOBAL ( soap_version )		1993231	1					
ANR	1993270	Callee	SOAP_GLOBAL		1993231	0					
ANR	1993271	Identifier	SOAP_GLOBAL		1993231	0					
ANR	1993272	ArgumentList	soap_version		1993231	1					
ANR	1993273	Argument	soap_version		1993231	0					
ANR	1993274	Identifier	soap_version		1993231	0					
ANR	1993275	ExpressionStatement	"doc_return = serialize_response_call ( function , NULL , NULL , fault , hdr , soap_version )"	2078:1:71057:71141	1993231	8	True				
ANR	1993276	AssignmentExpression	"doc_return = serialize_response_call ( function , NULL , NULL , fault , hdr , soap_version )"		1993231	0		=			
ANR	1993277	Identifier	doc_return		1993231	0					
ANR	1993278	CallExpression	"serialize_response_call ( function , NULL , NULL , fault , hdr , soap_version )"		1993231	1					
ANR	1993279	Callee	serialize_response_call		1993231	0					
ANR	1993280	Identifier	serialize_response_call		1993231	0					
ANR	1993281	ArgumentList	function		1993231	1					
ANR	1993282	Argument	function		1993231	0					
ANR	1993283	Identifier	function		1993231	0					
ANR	1993284	Argument	NULL		1993231	1					
ANR	1993285	Identifier	NULL		1993231	0					
ANR	1993286	Argument	NULL		1993231	2					
ANR	1993287	Identifier	NULL		1993231	0					
ANR	1993288	Argument	fault		1993231	3					
ANR	1993289	Identifier	fault		1993231	0					
ANR	1993290	Argument	hdr		1993231	4					
ANR	1993291	Identifier	hdr		1993231	0					
ANR	1993292	Argument	soap_version		1993231	5					
ANR	1993293	Identifier	soap_version		1993231	0					
ANR	1993294	ExpressionStatement	"xmlDocDumpMemory ( doc_return , & buf , & size )"	2080:1:71145:71186	1993231	9	True				
ANR	1993295	CallExpression	"xmlDocDumpMemory ( doc_return , & buf , & size )"		1993231	0					
ANR	1993296	Callee	xmlDocDumpMemory		1993231	0					
ANR	1993297	Identifier	xmlDocDumpMemory		1993231	0					
ANR	1993298	ArgumentList	doc_return		1993231	1					
ANR	1993299	Argument	doc_return		1993231	0					
ANR	1993300	Identifier	doc_return		1993231	0					
ANR	1993301	Argument	& buf		1993231	1					
ANR	1993302	UnaryOperationExpression	& buf		1993231	0					
ANR	1993303	UnaryOperator	&		1993231	0					
ANR	1993304	Identifier	buf		1993231	1					
ANR	1993305	Argument	& size		1993231	2					
ANR	1993306	UnaryOperationExpression	& size		1993231	0					
ANR	1993307	UnaryOperator	&		1993231	0					
ANR	1993308	Identifier	size		1993231	1					
ANR	1993309	IfStatement	"if ( ( Z_TYPE ( PG ( http_globals ) [ TRACK_VARS_SERVER ] ) == IS_ARRAY || zend_is_auto_global_str ( ZEND_STRL ( ""_SERVER"" ) ) ) && ( agent_name = zend_hash_str_find ( Z_ARRVAL ( PG ( http_globals ) [ TRACK_VARS_SERVER ] ) , ""HTTP_USER_AGENT"" , sizeof ( ""HTTP_USER_AGENT"" ) - 1 ) ) != NULL && Z_TYPE_P ( agent_name ) == IS_STRING )"		1993231	10					
ANR	1993310	Condition	"( Z_TYPE ( PG ( http_globals ) [ TRACK_VARS_SERVER ] ) == IS_ARRAY || zend_is_auto_global_str ( ZEND_STRL ( ""_SERVER"" ) ) ) && ( agent_name = zend_hash_str_find ( Z_ARRVAL ( PG ( http_globals ) [ TRACK_VARS_SERVER ] ) , ""HTTP_USER_AGENT"" , sizeof ( ""HTTP_USER_AGENT"" ) - 1 ) ) != NULL && Z_TYPE_P ( agent_name ) == IS_STRING"	2082:5:71194:71480	1993231	0	True				
ANR	1993311	AndExpression	"( Z_TYPE ( PG ( http_globals ) [ TRACK_VARS_SERVER ] ) == IS_ARRAY || zend_is_auto_global_str ( ZEND_STRL ( ""_SERVER"" ) ) ) && ( agent_name = zend_hash_str_find ( Z_ARRVAL ( PG ( http_globals ) [ TRACK_VARS_SERVER ] ) , ""HTTP_USER_AGENT"" , sizeof ( ""HTTP_USER_AGENT"" ) - 1 ) ) != NULL && Z_TYPE_P ( agent_name ) == IS_STRING"		1993231	0		&&			
ANR	1993312	OrExpression	"Z_TYPE ( PG ( http_globals ) [ TRACK_VARS_SERVER ] ) == IS_ARRAY || zend_is_auto_global_str ( ZEND_STRL ( ""_SERVER"" ) )"		1993231	0		||			
ANR	1993313	EqualityExpression	Z_TYPE ( PG ( http_globals ) [ TRACK_VARS_SERVER ] ) == IS_ARRAY		1993231	0		==			
ANR	1993314	CallExpression	Z_TYPE ( PG ( http_globals ) [ TRACK_VARS_SERVER ] )		1993231	0					
ANR	1993315	Callee	Z_TYPE		1993231	0					
ANR	1993316	Identifier	Z_TYPE		1993231	0					
ANR	1993317	ArgumentList	PG ( http_globals ) [ TRACK_VARS_SERVER ]		1993231	1					
ANR	1993318	Argument	PG ( http_globals ) [ TRACK_VARS_SERVER ]		1993231	0					
ANR	1993319	ArrayIndexing	PG ( http_globals ) [ TRACK_VARS_SERVER ]		1993231	0					
ANR	1993320	CallExpression	PG ( http_globals )		1993231	0					
ANR	1993321	Callee	PG		1993231	0					
ANR	1993322	Identifier	PG		1993231	0					
ANR	1993323	ArgumentList	http_globals		1993231	1					
ANR	1993324	Argument	http_globals		1993231	0					
ANR	1993325	Identifier	http_globals		1993231	0					
ANR	1993326	Identifier	TRACK_VARS_SERVER		1993231	1					
ANR	1993327	Identifier	IS_ARRAY		1993231	1					
ANR	1993328	CallExpression	"zend_is_auto_global_str ( ZEND_STRL ( ""_SERVER"" ) )"		1993231	1					
ANR	1993329	Callee	zend_is_auto_global_str		1993231	0					
ANR	1993330	Identifier	zend_is_auto_global_str		1993231	0					
ANR	1993331	ArgumentList	"ZEND_STRL ( ""_SERVER"" )"		1993231	1					
ANR	1993332	Argument	"ZEND_STRL ( ""_SERVER"" )"		1993231	0					
ANR	1993333	CallExpression	"ZEND_STRL ( ""_SERVER"" )"		1993231	0					
ANR	1993334	Callee	ZEND_STRL		1993231	0					
ANR	1993335	Identifier	ZEND_STRL		1993231	0					
ANR	1993336	ArgumentList	"""_SERVER"""		1993231	1					
ANR	1993337	Argument	"""_SERVER"""		1993231	0					
ANR	1993338	PrimaryExpression	"""_SERVER"""		1993231	0					
ANR	1993339	AndExpression	"( agent_name = zend_hash_str_find ( Z_ARRVAL ( PG ( http_globals ) [ TRACK_VARS_SERVER ] ) , ""HTTP_USER_AGENT"" , sizeof ( ""HTTP_USER_AGENT"" ) - 1 ) ) != NULL && Z_TYPE_P ( agent_name ) == IS_STRING"		1993231	1		&&			
ANR	1993340	EqualityExpression	"( agent_name = zend_hash_str_find ( Z_ARRVAL ( PG ( http_globals ) [ TRACK_VARS_SERVER ] ) , ""HTTP_USER_AGENT"" , sizeof ( ""HTTP_USER_AGENT"" ) - 1 ) ) != NULL"		1993231	0		!=			
ANR	1993341	AssignmentExpression	"agent_name = zend_hash_str_find ( Z_ARRVAL ( PG ( http_globals ) [ TRACK_VARS_SERVER ] ) , ""HTTP_USER_AGENT"" , sizeof ( ""HTTP_USER_AGENT"" ) - 1 )"		1993231	0		=			
ANR	1993342	Identifier	agent_name		1993231	0					
ANR	1993343	CallExpression	"zend_hash_str_find ( Z_ARRVAL ( PG ( http_globals ) [ TRACK_VARS_SERVER ] ) , ""HTTP_USER_AGENT"" , sizeof ( ""HTTP_USER_AGENT"" ) - 1 )"		1993231	1					
ANR	1993344	Callee	zend_hash_str_find		1993231	0					
ANR	1993345	Identifier	zend_hash_str_find		1993231	0					
ANR	1993346	ArgumentList	Z_ARRVAL ( PG ( http_globals ) [ TRACK_VARS_SERVER ] )		1993231	1					
ANR	1993347	Argument	Z_ARRVAL ( PG ( http_globals ) [ TRACK_VARS_SERVER ] )		1993231	0					
ANR	1993348	CallExpression	Z_ARRVAL ( PG ( http_globals ) [ TRACK_VARS_SERVER ] )		1993231	0					
ANR	1993349	Callee	Z_ARRVAL		1993231	0					
ANR	1993350	Identifier	Z_ARRVAL		1993231	0					
ANR	1993351	ArgumentList	PG ( http_globals ) [ TRACK_VARS_SERVER ]		1993231	1					
ANR	1993352	Argument	PG ( http_globals ) [ TRACK_VARS_SERVER ]		1993231	0					
ANR	1993353	ArrayIndexing	PG ( http_globals ) [ TRACK_VARS_SERVER ]		1993231	0					
ANR	1993354	CallExpression	PG ( http_globals )		1993231	0					
ANR	1993355	Callee	PG		1993231	0					
ANR	1993356	Identifier	PG		1993231	0					
ANR	1993357	ArgumentList	http_globals		1993231	1					
ANR	1993358	Argument	http_globals		1993231	0					
ANR	1993359	Identifier	http_globals		1993231	0					
ANR	1993360	Identifier	TRACK_VARS_SERVER		1993231	1					
ANR	1993361	Argument	"""HTTP_USER_AGENT"""		1993231	1					
ANR	1993362	PrimaryExpression	"""HTTP_USER_AGENT"""		1993231	0					
ANR	1993363	Argument	"sizeof ( ""HTTP_USER_AGENT"" ) - 1"		1993231	2					
ANR	1993364	AdditiveExpression	"sizeof ( ""HTTP_USER_AGENT"" ) - 1"		1993231	0		-			
ANR	1993365	SizeofExpression	"sizeof ( ""HTTP_USER_AGENT"" )"		1993231	0					
ANR	1993366	Sizeof	sizeof		1993231	0					
ANR	1993367	PrimaryExpression	"""HTTP_USER_AGENT"""		1993231	1					
ANR	1993368	PrimaryExpression	1		1993231	1					
ANR	1993369	Identifier	NULL		1993231	1					
ANR	1993370	EqualityExpression	Z_TYPE_P ( agent_name ) == IS_STRING		1993231	1		==			
ANR	1993371	CallExpression	Z_TYPE_P ( agent_name )		1993231	0					
ANR	1993372	Callee	Z_TYPE_P		1993231	0					
ANR	1993373	Identifier	Z_TYPE_P		1993231	0					
ANR	1993374	ArgumentList	agent_name		1993231	1					
ANR	1993375	Argument	agent_name		1993231	0					
ANR	1993376	Identifier	agent_name		1993231	0					
ANR	1993377	Identifier	IS_STRING		1993231	1					
ANR	1993378	CompoundStatement		18:37:612:612	1993231	1					
ANR	1993379	IfStatement	"if ( strncmp ( Z_STRVAL_P ( agent_name ) , ""Shockwave Flash"" , sizeof ( ""Shockwave Flash"" ) - 1 ) == 0 )"		1993231	0					
ANR	1993380	Condition	"strncmp ( Z_STRVAL_P ( agent_name ) , ""Shockwave Flash"" , sizeof ( ""Shockwave Flash"" ) - 1 ) == 0"	2085:6:71491:71574	1993231	0	True				
ANR	1993381	EqualityExpression	"strncmp ( Z_STRVAL_P ( agent_name ) , ""Shockwave Flash"" , sizeof ( ""Shockwave Flash"" ) - 1 ) == 0"		1993231	0		==			
ANR	1993382	CallExpression	"strncmp ( Z_STRVAL_P ( agent_name ) , ""Shockwave Flash"" , sizeof ( ""Shockwave Flash"" ) - 1 )"		1993231	0					
ANR	1993383	Callee	strncmp		1993231	0					
ANR	1993384	Identifier	strncmp		1993231	0					
ANR	1993385	ArgumentList	Z_STRVAL_P ( agent_name )		1993231	1					
ANR	1993386	Argument	Z_STRVAL_P ( agent_name )		1993231	0					
ANR	1993387	CallExpression	Z_STRVAL_P ( agent_name )		1993231	0					
ANR	1993388	Callee	Z_STRVAL_P		1993231	0					
ANR	1993389	Identifier	Z_STRVAL_P		1993231	0					
ANR	1993390	ArgumentList	agent_name		1993231	1					
ANR	1993391	Argument	agent_name		1993231	0					
ANR	1993392	Identifier	agent_name		1993231	0					
ANR	1993393	Argument	"""Shockwave Flash"""		1993231	1					
ANR	1993394	PrimaryExpression	"""Shockwave Flash"""		1993231	0					
ANR	1993395	Argument	"sizeof ( ""Shockwave Flash"" ) - 1"		1993231	2					
ANR	1993396	AdditiveExpression	"sizeof ( ""Shockwave Flash"" ) - 1"		1993231	0		-			
ANR	1993397	SizeofExpression	"sizeof ( ""Shockwave Flash"" )"		1993231	0					
ANR	1993398	Sizeof	sizeof		1993231	0					
ANR	1993399	PrimaryExpression	"""Shockwave Flash"""		1993231	1					
ANR	1993400	PrimaryExpression	1		1993231	1					
ANR	1993401	PrimaryExpression	0		1993231	1					
ANR	1993402	CompoundStatement		19:92:706:706	1993231	1					
ANR	1993403	ExpressionStatement	use_http_error_status = 0	2086:3:71582:71607	1993231	0	True				
ANR	1993404	AssignmentExpression	use_http_error_status = 0		1993231	0		=			
ANR	1993405	Identifier	use_http_error_status		1993231	0					
ANR	1993406	PrimaryExpression	0		1993231	1					
ANR	1993407	IfStatement	if ( use_http_error_status )		1993231	11					
ANR	1993408	Condition	use_http_error_status	2093:5:71756:71776	1993231	0	True				
ANR	1993409	Identifier	use_http_error_status		1993231	0					
ANR	1993410	CompoundStatement		27:28:908:908	1993231	1					
ANR	1993411	ExpressionStatement	"sapi_add_header ( ""HTTP/1.1 500 Internal Service Error"" , sizeof ( ""HTTP/1.1 500 Internal Service Error"" ) - 1 , 1 )"	2094:2:71783:71889	1993231	0	True				
ANR	1993412	CallExpression	"sapi_add_header ( ""HTTP/1.1 500 Internal Service Error"" , sizeof ( ""HTTP/1.1 500 Internal Service Error"" ) - 1 , 1 )"		1993231	0					
ANR	1993413	Callee	sapi_add_header		1993231	0					
ANR	1993414	Identifier	sapi_add_header		1993231	0					
ANR	1993415	ArgumentList	"""HTTP/1.1 500 Internal Service Error"""		1993231	1					
ANR	1993416	Argument	"""HTTP/1.1 500 Internal Service Error"""		1993231	0					
ANR	1993417	PrimaryExpression	"""HTTP/1.1 500 Internal Service Error"""		1993231	0					
ANR	1993418	Argument	"sizeof ( ""HTTP/1.1 500 Internal Service Error"" ) - 1"		1993231	1					
ANR	1993419	AdditiveExpression	"sizeof ( ""HTTP/1.1 500 Internal Service Error"" ) - 1"		1993231	0		-			
ANR	1993420	SizeofExpression	"sizeof ( ""HTTP/1.1 500 Internal Service Error"" )"		1993231	0					
ANR	1993421	Sizeof	sizeof		1993231	0					
ANR	1993422	PrimaryExpression	"""HTTP/1.1 500 Internal Service Error"""		1993231	1					
ANR	1993423	PrimaryExpression	1		1993231	1					
ANR	1993424	Argument	1		1993231	2					
ANR	1993425	PrimaryExpression	1		1993231	0					
ANR	1993426	IfStatement	"if ( zend_ini_long ( ""zlib.output_compression"" , sizeof ( ""zlib.output_compression"" ) , 0 ) )"		1993231	12					
ANR	1993427	Condition	"zend_ini_long ( ""zlib.output_compression"" , sizeof ( ""zlib.output_compression"" ) , 0 )"	2096:5:71899:71976	1993231	0	True				
ANR	1993428	CallExpression	"zend_ini_long ( ""zlib.output_compression"" , sizeof ( ""zlib.output_compression"" ) , 0 )"		1993231	0					
ANR	1993429	Callee	zend_ini_long		1993231	0					
ANR	1993430	Identifier	zend_ini_long		1993231	0					
ANR	1993431	ArgumentList	"""zlib.output_compression"""		1993231	1					
ANR	1993432	Argument	"""zlib.output_compression"""		1993231	0					
ANR	1993433	PrimaryExpression	"""zlib.output_compression"""		1993231	0					
ANR	1993434	Argument	"sizeof ( ""zlib.output_compression"" )"		1993231	1					
ANR	1993435	SizeofExpression	"sizeof ( ""zlib.output_compression"" )"		1993231	0					
ANR	1993436	Sizeof	sizeof		1993231	0					
ANR	1993437	PrimaryExpression	"""zlib.output_compression"""		1993231	1					
ANR	1993438	Argument	0		1993231	2					
ANR	1993439	PrimaryExpression	0		1993231	0					
ANR	1993440	CompoundStatement		30:85:1108:1108	1993231	1					
ANR	1993441	ExpressionStatement	"sapi_add_header ( ""Connection: close"" , sizeof ( ""Connection: close"" ) - 1 , 1 )"	2097:2:71983:72053	1993231	0	True				
ANR	1993442	CallExpression	"sapi_add_header ( ""Connection: close"" , sizeof ( ""Connection: close"" ) - 1 , 1 )"		1993231	0					
ANR	1993443	Callee	sapi_add_header		1993231	0					
ANR	1993444	Identifier	sapi_add_header		1993231	0					
ANR	1993445	ArgumentList	"""Connection: close"""		1993231	1					
ANR	1993446	Argument	"""Connection: close"""		1993231	0					
ANR	1993447	PrimaryExpression	"""Connection: close"""		1993231	0					
ANR	1993448	Argument	"sizeof ( ""Connection: close"" ) - 1"		1993231	1					
ANR	1993449	AdditiveExpression	"sizeof ( ""Connection: close"" ) - 1"		1993231	0		-			
ANR	1993450	SizeofExpression	"sizeof ( ""Connection: close"" )"		1993231	0					
ANR	1993451	Sizeof	sizeof		1993231	0					
ANR	1993452	PrimaryExpression	"""Connection: close"""		1993231	1					
ANR	1993453	PrimaryExpression	1		1993231	1					
ANR	1993454	Argument	1		1993231	2					
ANR	1993455	PrimaryExpression	1		1993231	0					
ANR	1993456	ElseStatement	else		1993231	0					
ANR	1993457	CompoundStatement		32:8:1192:1192	1993231	0					
ANR	1993458	ExpressionStatement	"snprintf ( cont_len , sizeof ( cont_len ) , ""Content-Length: %d"" , size )"	2099:2:72067:72131	1993231	0	True				
ANR	1993459	CallExpression	"snprintf ( cont_len , sizeof ( cont_len ) , ""Content-Length: %d"" , size )"		1993231	0					
ANR	1993460	Callee	snprintf		1993231	0					
ANR	1993461	Identifier	snprintf		1993231	0					
ANR	1993462	ArgumentList	cont_len		1993231	1					
ANR	1993463	Argument	cont_len		1993231	0					
ANR	1993464	Identifier	cont_len		1993231	0					
ANR	1993465	Argument	sizeof ( cont_len )		1993231	1					
ANR	1993466	SizeofExpression	sizeof ( cont_len )		1993231	0					
ANR	1993467	Sizeof	sizeof		1993231	0					
ANR	1993468	SizeofOperand	cont_len		1993231	1					
ANR	1993469	Argument	"""Content-Length: %d"""		1993231	2					
ANR	1993470	PrimaryExpression	"""Content-Length: %d"""		1993231	0					
ANR	1993471	Argument	size		1993231	3					
ANR	1993472	Identifier	size		1993231	0					
ANR	1993473	ExpressionStatement	"sapi_add_header ( cont_len , strlen ( cont_len ) , 1 )"	2100:2:72135:72181	1993231	1	True				
ANR	1993474	CallExpression	"sapi_add_header ( cont_len , strlen ( cont_len ) , 1 )"		1993231	0					
ANR	1993475	Callee	sapi_add_header		1993231	0					
ANR	1993476	Identifier	sapi_add_header		1993231	0					
ANR	1993477	ArgumentList	cont_len		1993231	1					
ANR	1993478	Argument	cont_len		1993231	0					
ANR	1993479	Identifier	cont_len		1993231	0					
ANR	1993480	Argument	strlen ( cont_len )		1993231	1					
ANR	1993481	CallExpression	strlen ( cont_len )		1993231	0					
ANR	1993482	Callee	strlen		1993231	0					
ANR	1993483	Identifier	strlen		1993231	0					
ANR	1993484	ArgumentList	cont_len		1993231	1					
ANR	1993485	Argument	cont_len		1993231	0					
ANR	1993486	Identifier	cont_len		1993231	0					
ANR	1993487	Argument	1		1993231	2					
ANR	1993488	PrimaryExpression	1		1993231	0					
ANR	1993489	IfStatement	if ( soap_version == SOAP_1_2 )		1993231	13					
ANR	1993490	Condition	soap_version == SOAP_1_2	2102:5:72191:72214	1993231	0	True				
ANR	1993491	EqualityExpression	soap_version == SOAP_1_2		1993231	0		==			
ANR	1993492	Identifier	soap_version		1993231	0					
ANR	1993493	Identifier	SOAP_1_2		1993231	1					
ANR	1993494	CompoundStatement		36:31:1346:1346	1993231	1					
ANR	1993495	ExpressionStatement	"sapi_add_header ( ""Content-Type: application/soap+xml; charset=utf-8"" , sizeof ( ""Content-Type: application/soap+xml; charset=utf-8"" ) - 1 , 1 )"	2103:2:72221:72355	1993231	0	True				
ANR	1993496	CallExpression	"sapi_add_header ( ""Content-Type: application/soap+xml; charset=utf-8"" , sizeof ( ""Content-Type: application/soap+xml; charset=utf-8"" ) - 1 , 1 )"		1993231	0					
ANR	1993497	Callee	sapi_add_header		1993231	0					
ANR	1993498	Identifier	sapi_add_header		1993231	0					
ANR	1993499	ArgumentList	"""Content-Type: application/soap+xml; charset=utf-8"""		1993231	1					
ANR	1993500	Argument	"""Content-Type: application/soap+xml; charset=utf-8"""		1993231	0					
ANR	1993501	PrimaryExpression	"""Content-Type: application/soap+xml; charset=utf-8"""		1993231	0					
ANR	1993502	Argument	"sizeof ( ""Content-Type: application/soap+xml; charset=utf-8"" ) - 1"		1993231	1					
ANR	1993503	AdditiveExpression	"sizeof ( ""Content-Type: application/soap+xml; charset=utf-8"" ) - 1"		1993231	0		-			
ANR	1993504	SizeofExpression	"sizeof ( ""Content-Type: application/soap+xml; charset=utf-8"" )"		1993231	0					
ANR	1993505	Sizeof	sizeof		1993231	0					
ANR	1993506	PrimaryExpression	"""Content-Type: application/soap+xml; charset=utf-8"""		1993231	1					
ANR	1993507	PrimaryExpression	1		1993231	1					
ANR	1993508	Argument	1		1993231	2					
ANR	1993509	PrimaryExpression	1		1993231	0					
ANR	1993510	ElseStatement	else		1993231	0					
ANR	1993511	CompoundStatement		38:8:1494:1494	1993231	0					
ANR	1993512	ExpressionStatement	"sapi_add_header ( ""Content-Type: text/xml; charset=utf-8"" , sizeof ( ""Content-Type: text/xml; charset=utf-8"" ) - 1 , 1 )"	2105:2:72369:72479	1993231	0	True				
ANR	1993513	CallExpression	"sapi_add_header ( ""Content-Type: text/xml; charset=utf-8"" , sizeof ( ""Content-Type: text/xml; charset=utf-8"" ) - 1 , 1 )"		1993231	0					
ANR	1993514	Callee	sapi_add_header		1993231	0					
ANR	1993515	Identifier	sapi_add_header		1993231	0					
ANR	1993516	ArgumentList	"""Content-Type: text/xml; charset=utf-8"""		1993231	1					
ANR	1993517	Argument	"""Content-Type: text/xml; charset=utf-8"""		1993231	0					
ANR	1993518	PrimaryExpression	"""Content-Type: text/xml; charset=utf-8"""		1993231	0					
ANR	1993519	Argument	"sizeof ( ""Content-Type: text/xml; charset=utf-8"" ) - 1"		1993231	1					
ANR	1993520	AdditiveExpression	"sizeof ( ""Content-Type: text/xml; charset=utf-8"" ) - 1"		1993231	0		-			
ANR	1993521	SizeofExpression	"sizeof ( ""Content-Type: text/xml; charset=utf-8"" )"		1993231	0					
ANR	1993522	Sizeof	sizeof		1993231	0					
ANR	1993523	PrimaryExpression	"""Content-Type: text/xml; charset=utf-8"""		1993231	1					
ANR	1993524	PrimaryExpression	1		1993231	1					
ANR	1993525	Argument	1		1993231	2					
ANR	1993526	PrimaryExpression	1		1993231	0					
ANR	1993527	ExpressionStatement	"php_write ( buf , size )"	2108:1:72486:72506	1993231	14	True				
ANR	1993528	CallExpression	"php_write ( buf , size )"		1993231	0					
ANR	1993529	Callee	php_write		1993231	0					
ANR	1993530	Identifier	php_write		1993231	0					
ANR	1993531	ArgumentList	buf		1993231	1					
ANR	1993532	Argument	buf		1993231	0					
ANR	1993533	Identifier	buf		1993231	0					
ANR	1993534	Argument	size		1993231	1					
ANR	1993535	Identifier	size		1993231	0					
ANR	1993536	ExpressionStatement	xmlFreeDoc ( doc_return )	2110:1:72510:72532	1993231	15	True				
ANR	1993537	CallExpression	xmlFreeDoc ( doc_return )		1993231	0					
ANR	1993538	Callee	xmlFreeDoc		1993231	0					
ANR	1993539	Identifier	xmlFreeDoc		1993231	0					
ANR	1993540	ArgumentList	doc_return		1993231	1					
ANR	1993541	Argument	doc_return		1993231	0					
ANR	1993542	Identifier	doc_return		1993231	0					
ANR	1993543	ExpressionStatement	xmlFree ( buf )	2111:1:72535:72547	1993231	16	True				
ANR	1993544	CallExpression	xmlFree ( buf )		1993231	0					
ANR	1993545	Callee	xmlFree		1993231	0					
ANR	1993546	Identifier	xmlFree		1993231	0					
ANR	1993547	ArgumentList	buf		1993231	1					
ANR	1993548	Argument	buf		1993231	0					
ANR	1993549	Identifier	buf		1993231	0					
ANR	1993550	ExpressionStatement	zend_clear_exception ( )	2112:1:72550:72572	1993231	17	True				
ANR	1993551	CallExpression	zend_clear_exception ( )		1993231	0					
ANR	1993552	Callee	zend_clear_exception		1993231	0					
ANR	1993553	Identifier	zend_clear_exception		1993231	0					
ANR	1993554	ArgumentList			1993231	1					
ANR	1993555	ReturnType	static void		1993231	1					
ANR	1993556	Identifier	soap_server_fault_ex		1993231	2					
ANR	1993557	ParameterList	"sdlFunctionPtr function , zval * fault , soapHeader * hdr"		1993231	3					
ANR	1993558	Parameter	sdlFunctionPtr function	2066:33:70815:70837	1993231	0	True				
ANR	1993559	ParameterType	sdlFunctionPtr		1993231	0					
ANR	1993560	Identifier	function		1993231	1					
ANR	1993561	Parameter	zval * fault	2066:58:70840:70850	1993231	1	True				
ANR	1993562	ParameterType	zval *		1993231	0					
ANR	1993563	Identifier	fault		1993231	1					
ANR	1993564	Parameter	soapHeader * hdr	2066:71:70853:70867	1993231	2	True				
ANR	1993565	ParameterType	soapHeader *		1993231	0					
ANR	1993566	Identifier	hdr		1993231	1					
ANR	1993567	CFGEntryNode	ENTRY		1993231		True				
ANR	1993568	CFGExitNode	EXIT		1993231		True				
ANR	1993569	Symbol	agent_name		1993231						
ANR	1993570	Symbol	Z_TYPE		1993231						
ANR	1993571	Symbol	Z_ARRVAL		1993231						
ANR	1993572	Symbol	* TRACK_VARS_SERVER		1993231						
ANR	1993573	Symbol	TRACK_VARS_SERVER		1993231						
ANR	1993574	Symbol	strncmp		1993231						
ANR	1993575	Symbol	zend_ini_long		1993231						
ANR	1993576	Symbol	strlen		1993231						
ANR	1993577	Symbol	zend_hash_str_find		1993231						
ANR	1993578	Symbol	IS_ARRAY		1993231						
ANR	1993579	Symbol	function		1993231						
ANR	1993580	Symbol	soap_version		1993231						
ANR	1993581	Symbol	IS_STRING		1993231						
ANR	1993582	Symbol	& buf		1993231						
ANR	1993583	Symbol	zend_is_auto_global_str		1993231						
ANR	1993584	Symbol	use_http_error_status		1993231						
ANR	1993585	Symbol	NULL		1993231						
ANR	1993586	Symbol	cont_len		1993231						
ANR	1993587	Symbol	serialize_response_call		1993231						
ANR	1993588	Symbol	ZEND_STRL		1993231						
ANR	1993589	Symbol	fault		1993231						
ANR	1993590	Symbol	& size		1993231						
ANR	1993591	Symbol	Z_TYPE_P		1993231						
ANR	1993592	Symbol	SOAP_GLOBAL		1993231						
ANR	1993593	Symbol	Z_STRVAL_P		1993231						
ANR	1993594	Symbol	buf		1993231						
ANR	1993595	Symbol	http_globals		1993231						
ANR	1993596	Symbol	size		1993231						
ANR	1993597	Symbol	hdr		1993231						
ANR	1993598	Symbol	PG		1993231						
ANR	1993599	Symbol	doc_return		1993231						
ANR	1993600	Symbol	SOAP_1_2		1993231						
ANR	1993601	Symbol	* PG		1993231						
ANR	1993602	Function	soap_server_fault	2115:0:72577:72856							
ANR	1993603	FunctionDef	"soap_server_fault (char * code , char * string , char * actor , zval * details , char * name)"		1993602	0					
ANR	1993604	CompoundStatement		2116:0:72673:72856	1993602	0					
ANR	1993605	IdentifierDeclStatement	zval ret ;	2117:1:72676:72684	1993602	0	True				
ANR	1993606	IdentifierDecl	ret		1993602	0					
ANR	1993607	IdentifierDeclType	zval		1993602	0					
ANR	1993608	Identifier	ret		1993602	1					
ANR	1993609	ExpressionStatement	ZVAL_NULL ( & ret )	2119:1:72688:72703	1993602	1	True				
ANR	1993610	CallExpression	ZVAL_NULL ( & ret )		1993602	0					
ANR	1993611	Callee	ZVAL_NULL		1993602	0					
ANR	1993612	Identifier	ZVAL_NULL		1993602	0					
ANR	1993613	ArgumentList	& ret		1993602	1					
ANR	1993614	Argument	& ret		1993602	0					
ANR	1993615	UnaryOperationExpression	& ret		1993602	0					
ANR	1993616	UnaryOperator	&		1993602	0					
ANR	1993617	Identifier	ret		1993602	1					
ANR	1993618	ExpressionStatement	"set_soap_fault ( & ret , NULL , code , string , actor , details , name )"	2120:1:72706:72768	1993602	2	True				
ANR	1993619	CallExpression	"set_soap_fault ( & ret , NULL , code , string , actor , details , name )"		1993602	0					
ANR	1993620	Callee	set_soap_fault		1993602	0					
ANR	1993621	Identifier	set_soap_fault		1993602	0					
ANR	1993622	ArgumentList	& ret		1993602	1					
ANR	1993623	Argument	& ret		1993602	0					
ANR	1993624	UnaryOperationExpression	& ret		1993602	0					
ANR	1993625	UnaryOperator	&		1993602	0					
ANR	1993626	Identifier	ret		1993602	1					
ANR	1993627	Argument	NULL		1993602	1					
ANR	1993628	Identifier	NULL		1993602	0					
ANR	1993629	Argument	code		1993602	2					
ANR	1993630	Identifier	code		1993602	0					
ANR	1993631	Argument	string		1993602	3					
ANR	1993632	Identifier	string		1993602	0					
ANR	1993633	Argument	actor		1993602	4					
ANR	1993634	Identifier	actor		1993602	0					
ANR	1993635	Argument	details		1993602	5					
ANR	1993636	Identifier	details		1993602	0					
ANR	1993637	Argument	name		1993602	6					
ANR	1993638	Identifier	name		1993602	0					
ANR	1993639	ExpressionStatement	"soap_server_fault_ex ( NULL , & ret , NULL )"	2122:1:72799:72837	1993602	3	True				
ANR	1993640	CallExpression	"soap_server_fault_ex ( NULL , & ret , NULL )"		1993602	0					
ANR	1993641	Callee	soap_server_fault_ex		1993602	0					
ANR	1993642	Identifier	soap_server_fault_ex		1993602	0					
ANR	1993643	ArgumentList	NULL		1993602	1					
ANR	1993644	Argument	NULL		1993602	0					
ANR	1993645	Identifier	NULL		1993602	0					
ANR	1993646	Argument	& ret		1993602	1					
ANR	1993647	UnaryOperationExpression	& ret		1993602	0					
ANR	1993648	UnaryOperator	&		1993602	0					
ANR	1993649	Identifier	ret		1993602	1					
ANR	1993650	Argument	NULL		1993602	2					
ANR	1993651	Identifier	NULL		1993602	0					
ANR	1993652	ExpressionStatement	zend_bailout ( )	2123:1:72840:72854	1993602	4	True				
ANR	1993653	CallExpression	zend_bailout ( )		1993602	0					
ANR	1993654	Callee	zend_bailout		1993602	0					
ANR	1993655	Identifier	zend_bailout		1993602	0					
ANR	1993656	ArgumentList			1993602	1					
ANR	1993657	ReturnType	static void		1993602	1					
ANR	1993658	Identifier	soap_server_fault		1993602	2					
ANR	1993659	ParameterList	"char * code , char * string , char * actor , zval * details , char * name"		1993602	3					
ANR	1993660	Parameter	char * code	2115:30:72607:72616	1993602	0	True				
ANR	1993661	ParameterType	char *		1993602	0					
ANR	1993662	Identifier	code		1993602	1					
ANR	1993663	Parameter	char * string	2115:42:72619:72630	1993602	1	True				
ANR	1993664	ParameterType	char *		1993602	0					
ANR	1993665	Identifier	string		1993602	1					
ANR	1993666	Parameter	char * actor	2115:56:72633:72643	1993602	2	True				
ANR	1993667	ParameterType	char *		1993602	0					
ANR	1993668	Identifier	actor		1993602	1					
ANR	1993669	Parameter	zval * details	2115:69:72646:72658	1993602	3	True				
ANR	1993670	ParameterType	zval *		1993602	0					
ANR	1993671	Identifier	details		1993602	1					
ANR	1993672	Parameter	char * name	2115:84:72661:72670	1993602	4	True				
ANR	1993673	ParameterType	char *		1993602	0					
ANR	1993674	Identifier	name		1993602	1					
ANR	1993675	CFGEntryNode	ENTRY		1993602		True				
ANR	1993676	CFGExitNode	EXIT		1993602		True				
ANR	1993677	Symbol	actor		1993602						
ANR	1993678	Symbol	ret		1993602						
ANR	1993679	Symbol	& ret		1993602						
ANR	1993680	Symbol	code		1993602						
ANR	1993681	Symbol	NULL		1993602						
ANR	1993682	Symbol	string		1993602						
ANR	1993683	Symbol	name		1993602						
ANR	1993684	Symbol	details		1993602						
ANR	1993685	Function	soap_error_handler	2126:0:72859:78103							
ANR	1993686	FunctionDef	"soap_error_handler (int error_num , const char * error_filename , const uint error_lineno , const char * format , va_list args)"		1993685	0					
ANR	1993687	CompoundStatement		2127:0:72992:78103	1993685	0					
ANR	1993688	IdentifierDeclStatement	zend_bool _old_in_compilation ;	2128:1:72995:73024	1993685	0	True				
ANR	1993689	IdentifierDecl	_old_in_compilation		1993685	0					
ANR	1993690	IdentifierDeclType	zend_bool		1993685	0					
ANR	1993691	Identifier	_old_in_compilation		1993685	1					
ANR	1993692	IdentifierDeclStatement	zend_execute_data * _old_current_execute_data ;	2129:1:73027:73071	1993685	1	True				
ANR	1993693	IdentifierDecl	* _old_current_execute_data		1993685	0					
ANR	1993694	IdentifierDeclType	zend_execute_data *		1993685	0					
ANR	1993695	Identifier	_old_current_execute_data		1993685	1					
ANR	1993696	IdentifierDeclStatement	int _old_http_response_code ;	2130:1:73074:73101	1993685	2	True				
ANR	1993697	IdentifierDecl	_old_http_response_code		1993685	0					
ANR	1993698	IdentifierDeclType	int		1993685	0					
ANR	1993699	Identifier	_old_http_response_code		1993685	1					
ANR	1993700	IdentifierDeclStatement	char * _old_http_status_line ;	2131:1:73104:73131	1993685	3	True				
ANR	1993701	IdentifierDecl	* _old_http_status_line		1993685	0					
ANR	1993702	IdentifierDeclType	char *		1993685	0					
ANR	1993703	Identifier	_old_http_status_line		1993685	1					
ANR	1993704	ExpressionStatement	_old_in_compilation = CG ( in_compilation )	2133:1:73135:73175	1993685	4	True				
ANR	1993705	AssignmentExpression	_old_in_compilation = CG ( in_compilation )		1993685	0		=			
ANR	1993706	Identifier	_old_in_compilation		1993685	0					
ANR	1993707	CallExpression	CG ( in_compilation )		1993685	1					
ANR	1993708	Callee	CG		1993685	0					
ANR	1993709	Identifier	CG		1993685	0					
ANR	1993710	ArgumentList	in_compilation		1993685	1					
ANR	1993711	Argument	in_compilation		1993685	0					
ANR	1993712	Identifier	in_compilation		1993685	0					
ANR	1993713	ExpressionStatement	_old_current_execute_data = EG ( current_execute_data )	2134:1:73178:73230	1993685	5	True				
ANR	1993714	AssignmentExpression	_old_current_execute_data = EG ( current_execute_data )		1993685	0		=			
ANR	1993715	Identifier	_old_current_execute_data		1993685	0					
ANR	1993716	CallExpression	EG ( current_execute_data )		1993685	1					
ANR	1993717	Callee	EG		1993685	0					
ANR	1993718	Identifier	EG		1993685	0					
ANR	1993719	ArgumentList	current_execute_data		1993685	1					
ANR	1993720	Argument	current_execute_data		1993685	0					
ANR	1993721	Identifier	current_execute_data		1993685	0					
ANR	1993722	ExpressionStatement	_old_http_response_code = SG ( sapi_headers ) . http_response_code	2135:1:73233:73294	1993685	6	True				
ANR	1993723	AssignmentExpression	_old_http_response_code = SG ( sapi_headers ) . http_response_code		1993685	0		=			
ANR	1993724	Identifier	_old_http_response_code		1993685	0					
ANR	1993725	MemberAccess	SG ( sapi_headers ) . http_response_code		1993685	1					
ANR	1993726	CallExpression	SG ( sapi_headers )		1993685	0					
ANR	1993727	Callee	SG		1993685	0					
ANR	1993728	Identifier	SG		1993685	0					
ANR	1993729	ArgumentList	sapi_headers		1993685	1					
ANR	1993730	Argument	sapi_headers		1993685	0					
ANR	1993731	Identifier	sapi_headers		1993685	0					
ANR	1993732	Identifier	http_response_code		1993685	1					
ANR	1993733	ExpressionStatement	_old_http_status_line = SG ( sapi_headers ) . http_status_line	2136:1:73297:73354	1993685	7	True				
ANR	1993734	AssignmentExpression	_old_http_status_line = SG ( sapi_headers ) . http_status_line		1993685	0		=			
ANR	1993735	Identifier	_old_http_status_line		1993685	0					
ANR	1993736	MemberAccess	SG ( sapi_headers ) . http_status_line		1993685	1					
ANR	1993737	CallExpression	SG ( sapi_headers )		1993685	0					
ANR	1993738	Callee	SG		1993685	0					
ANR	1993739	Identifier	SG		1993685	0					
ANR	1993740	ArgumentList	sapi_headers		1993685	1					
ANR	1993741	Argument	sapi_headers		1993685	0					
ANR	1993742	Identifier	sapi_headers		1993685	0					
ANR	1993743	Identifier	http_status_line		1993685	1					
ANR	1993744	IfStatement	if ( ! SOAP_GLOBAL ( use_soap_error_handler ) || ! EG ( objects_store ) . object_buckets )		1993685	8					
ANR	1993745	Condition	! SOAP_GLOBAL ( use_soap_error_handler ) || ! EG ( objects_store ) . object_buckets	2138:5:73362:73434	1993685	0	True				
ANR	1993746	OrExpression	! SOAP_GLOBAL ( use_soap_error_handler ) || ! EG ( objects_store ) . object_buckets		1993685	0		||			
ANR	1993747	UnaryOperationExpression	! SOAP_GLOBAL ( use_soap_error_handler )		1993685	0					
ANR	1993748	UnaryOperator	!		1993685	0					
ANR	1993749	CallExpression	SOAP_GLOBAL ( use_soap_error_handler )		1993685	1					
ANR	1993750	Callee	SOAP_GLOBAL		1993685	0					
ANR	1993751	Identifier	SOAP_GLOBAL		1993685	0					
ANR	1993752	ArgumentList	use_soap_error_handler		1993685	1					
ANR	1993753	Argument	use_soap_error_handler		1993685	0					
ANR	1993754	Identifier	use_soap_error_handler		1993685	0					
ANR	1993755	UnaryOperationExpression	! EG ( objects_store ) . object_buckets		1993685	1					
ANR	1993756	UnaryOperator	!		1993685	0					
ANR	1993757	MemberAccess	EG ( objects_store ) . object_buckets		1993685	1					
ANR	1993758	CallExpression	EG ( objects_store )		1993685	0					
ANR	1993759	Callee	EG		1993685	0					
ANR	1993760	Identifier	EG		1993685	0					
ANR	1993761	ArgumentList	objects_store		1993685	1					
ANR	1993762	Argument	objects_store		1993685	0					
ANR	1993763	Identifier	objects_store		1993685	0					
ANR	1993764	Identifier	object_buckets		1993685	1					
ANR	1993765	CompoundStatement		12:80:444:444	1993685	1					
ANR	1993766	ExpressionStatement	"call_old_error_handler ( error_num , error_filename , error_lineno , format , args )"	2139:2:73441:73518	1993685	0	True				
ANR	1993767	CallExpression	"call_old_error_handler ( error_num , error_filename , error_lineno , format , args )"		1993685	0					
ANR	1993768	Callee	call_old_error_handler		1993685	0					
ANR	1993769	Identifier	call_old_error_handler		1993685	0					
ANR	1993770	ArgumentList	error_num		1993685	1					
ANR	1993771	Argument	error_num		1993685	0					
ANR	1993772	Identifier	error_num		1993685	0					
ANR	1993773	Argument	error_filename		1993685	1					
ANR	1993774	Identifier	error_filename		1993685	0					
ANR	1993775	Argument	error_lineno		1993685	2					
ANR	1993776	Identifier	error_lineno		1993685	0					
ANR	1993777	Argument	format		1993685	3					
ANR	1993778	Identifier	format		1993685	0					
ANR	1993779	Argument	args		1993685	4					
ANR	1993780	Identifier	args		1993685	0					
ANR	1993781	ReturnStatement	return ;	2140:2:73522:73528	1993685	1	True				
ANR	1993782	IfStatement	"if ( Z_OBJ ( SOAP_GLOBAL ( error_object ) ) && instanceof_function ( Z_OBJCE ( SOAP_GLOBAL ( error_object ) ) , soap_class_entry ) )"		1993685	9					
ANR	1993783	Condition	"Z_OBJ ( SOAP_GLOBAL ( error_object ) ) && instanceof_function ( Z_OBJCE ( SOAP_GLOBAL ( error_object ) ) , soap_class_entry )"	2143:5:73539:73652	1993685	0	True				
ANR	1993784	AndExpression	"Z_OBJ ( SOAP_GLOBAL ( error_object ) ) && instanceof_function ( Z_OBJCE ( SOAP_GLOBAL ( error_object ) ) , soap_class_entry )"		1993685	0		&&			
ANR	1993785	CallExpression	Z_OBJ ( SOAP_GLOBAL ( error_object ) )		1993685	0					
ANR	1993786	Callee	Z_OBJ		1993685	0					
ANR	1993787	Identifier	Z_OBJ		1993685	0					
ANR	1993788	ArgumentList	SOAP_GLOBAL ( error_object )		1993685	1					
ANR	1993789	Argument	SOAP_GLOBAL ( error_object )		1993685	0					
ANR	1993790	CallExpression	SOAP_GLOBAL ( error_object )		1993685	0					
ANR	1993791	Callee	SOAP_GLOBAL		1993685	0					
ANR	1993792	Identifier	SOAP_GLOBAL		1993685	0					
ANR	1993793	ArgumentList	error_object		1993685	1					
ANR	1993794	Argument	error_object		1993685	0					
ANR	1993795	Identifier	error_object		1993685	0					
ANR	1993796	CallExpression	"instanceof_function ( Z_OBJCE ( SOAP_GLOBAL ( error_object ) ) , soap_class_entry )"		1993685	1					
ANR	1993797	Callee	instanceof_function		1993685	0					
ANR	1993798	Identifier	instanceof_function		1993685	0					
ANR	1993799	ArgumentList	Z_OBJCE ( SOAP_GLOBAL ( error_object ) )		1993685	1					
ANR	1993800	Argument	Z_OBJCE ( SOAP_GLOBAL ( error_object ) )		1993685	0					
ANR	1993801	CallExpression	Z_OBJCE ( SOAP_GLOBAL ( error_object ) )		1993685	0					
ANR	1993802	Callee	Z_OBJCE		1993685	0					
ANR	1993803	Identifier	Z_OBJCE		1993685	0					
ANR	1993804	ArgumentList	SOAP_GLOBAL ( error_object )		1993685	1					
ANR	1993805	Argument	SOAP_GLOBAL ( error_object )		1993685	0					
ANR	1993806	CallExpression	SOAP_GLOBAL ( error_object )		1993685	0					
ANR	1993807	Callee	SOAP_GLOBAL		1993685	0					
ANR	1993808	Identifier	SOAP_GLOBAL		1993685	0					
ANR	1993809	ArgumentList	error_object		1993685	1					
ANR	1993810	Argument	error_object		1993685	0					
ANR	1993811	Identifier	error_object		1993685	0					
ANR	1993812	Argument	soap_class_entry		1993685	1					
ANR	1993813	Identifier	soap_class_entry		1993685	0					
ANR	1993814	CompoundStatement		20:2:679:701	1993685	1					
ANR	1993815	IdentifierDeclStatement	zval * tmp ;	2145:2:73659:73668	1993685	0	True				
ANR	1993816	IdentifierDecl	* tmp		1993685	0					
ANR	1993817	IdentifierDeclType	zval *		1993685	0					
ANR	1993818	Identifier	tmp		1993685	1					
ANR	1993819	IdentifierDeclStatement	int use_exceptions = 0 ;	2146:2:73672:73694	1993685	1	True				
ANR	1993820	IdentifierDecl	use_exceptions = 0		1993685	0					
ANR	1993821	IdentifierDeclType	int		1993685	0					
ANR	1993822	Identifier	use_exceptions		1993685	1					
ANR	1993823	AssignmentExpression	use_exceptions = 0		1993685	2		=			
ANR	1993824	Identifier	use_exceptions		1993685	0					
ANR	1993825	PrimaryExpression	0		1993685	1					
ANR	1993826	IfStatement	"if ( ( tmp = zend_hash_str_find ( Z_OBJPROP ( SOAP_GLOBAL ( error_object ) ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) - 1 ) ) == NULL || Z_TYPE_P ( tmp ) != IS_FALSE )"		1993685	2					
ANR	1993827	Condition	"( tmp = zend_hash_str_find ( Z_OBJPROP ( SOAP_GLOBAL ( error_object ) ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) - 1 ) ) == NULL || Z_TYPE_P ( tmp ) != IS_FALSE"	2148:6:73703:73850	1993685	0	True				
ANR	1993828	OrExpression	"( tmp = zend_hash_str_find ( Z_OBJPROP ( SOAP_GLOBAL ( error_object ) ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) - 1 ) ) == NULL || Z_TYPE_P ( tmp ) != IS_FALSE"		1993685	0		||			
ANR	1993829	EqualityExpression	"( tmp = zend_hash_str_find ( Z_OBJPROP ( SOAP_GLOBAL ( error_object ) ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) - 1 ) ) == NULL"		1993685	0		==			
ANR	1993830	AssignmentExpression	"tmp = zend_hash_str_find ( Z_OBJPROP ( SOAP_GLOBAL ( error_object ) ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) - 1 )"		1993685	0		=			
ANR	1993831	Identifier	tmp		1993685	0					
ANR	1993832	CallExpression	"zend_hash_str_find ( Z_OBJPROP ( SOAP_GLOBAL ( error_object ) ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) - 1 )"		1993685	1					
ANR	1993833	Callee	zend_hash_str_find		1993685	0					
ANR	1993834	Identifier	zend_hash_str_find		1993685	0					
ANR	1993835	ArgumentList	Z_OBJPROP ( SOAP_GLOBAL ( error_object ) )		1993685	1					
ANR	1993836	Argument	Z_OBJPROP ( SOAP_GLOBAL ( error_object ) )		1993685	0					
ANR	1993837	CallExpression	Z_OBJPROP ( SOAP_GLOBAL ( error_object ) )		1993685	0					
ANR	1993838	Callee	Z_OBJPROP		1993685	0					
ANR	1993839	Identifier	Z_OBJPROP		1993685	0					
ANR	1993840	ArgumentList	SOAP_GLOBAL ( error_object )		1993685	1					
ANR	1993841	Argument	SOAP_GLOBAL ( error_object )		1993685	0					
ANR	1993842	CallExpression	SOAP_GLOBAL ( error_object )		1993685	0					
ANR	1993843	Callee	SOAP_GLOBAL		1993685	0					
ANR	1993844	Identifier	SOAP_GLOBAL		1993685	0					
ANR	1993845	ArgumentList	error_object		1993685	1					
ANR	1993846	Argument	error_object		1993685	0					
ANR	1993847	Identifier	error_object		1993685	0					
ANR	1993848	Argument	"""_exceptions"""		1993685	1					
ANR	1993849	PrimaryExpression	"""_exceptions"""		1993685	0					
ANR	1993850	Argument	"sizeof ( ""_exceptions"" ) - 1"		1993685	2					
ANR	1993851	AdditiveExpression	"sizeof ( ""_exceptions"" ) - 1"		1993685	0		-			
ANR	1993852	SizeofExpression	"sizeof ( ""_exceptions"" )"		1993685	0					
ANR	1993853	Sizeof	sizeof		1993685	0					
ANR	1993854	PrimaryExpression	"""_exceptions"""		1993685	1					
ANR	1993855	PrimaryExpression	1		1993685	1					
ANR	1993856	Identifier	NULL		1993685	1					
ANR	1993857	EqualityExpression	Z_TYPE_P ( tmp ) != IS_FALSE		1993685	1		!=			
ANR	1993858	CallExpression	Z_TYPE_P ( tmp )		1993685	0					
ANR	1993859	Callee	Z_TYPE_P		1993685	0					
ANR	1993860	Identifier	Z_TYPE_P		1993685	0					
ANR	1993861	ArgumentList	tmp		1993685	1					
ANR	1993862	Argument	tmp		1993685	0					
ANR	1993863	Identifier	tmp		1993685	0					
ANR	1993864	Identifier	IS_FALSE		1993685	1					
ANR	1993865	CompoundStatement		23:34:860:860	1993685	1					
ANR	1993866	ExpressionStatement	use_exceptions = 1	2150:7:73862:73880	1993685	0	True				
ANR	1993867	AssignmentExpression	use_exceptions = 1		1993685	0		=			
ANR	1993868	Identifier	use_exceptions		1993685	0					
ANR	1993869	PrimaryExpression	1		1993685	1					
ANR	1993870	IfStatement	if ( ( error_num == E_USER_ERROR || error_num == E_COMPILE_ERROR || error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE ) && use_exceptions )		1993685	3					
ANR	1993871	Condition	( error_num == E_USER_ERROR || error_num == E_COMPILE_ERROR || error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE ) && use_exceptions	2153:6:73893:74080	1993685	0	True				
ANR	1993872	AndExpression	( error_num == E_USER_ERROR || error_num == E_COMPILE_ERROR || error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE ) && use_exceptions		1993685	0		&&			
ANR	1993873	OrExpression	error_num == E_USER_ERROR || error_num == E_COMPILE_ERROR || error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE		1993685	0		||			
ANR	1993874	EqualityExpression	error_num == E_USER_ERROR		1993685	0		==			
ANR	1993875	Identifier	error_num		1993685	0					
ANR	1993876	Identifier	E_USER_ERROR		1993685	1					
ANR	1993877	OrExpression	error_num == E_COMPILE_ERROR || error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE		1993685	1		||			
ANR	1993878	EqualityExpression	error_num == E_COMPILE_ERROR		1993685	0		==			
ANR	1993879	Identifier	error_num		1993685	0					
ANR	1993880	Identifier	E_COMPILE_ERROR		1993685	1					
ANR	1993881	OrExpression	error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE		1993685	1		||			
ANR	1993882	EqualityExpression	error_num == E_CORE_ERROR		1993685	0		==			
ANR	1993883	Identifier	error_num		1993685	0					
ANR	1993884	Identifier	E_CORE_ERROR		1993685	1					
ANR	1993885	OrExpression	error_num == E_ERROR || error_num == E_PARSE		1993685	1		||			
ANR	1993886	EqualityExpression	error_num == E_ERROR		1993685	0		==			
ANR	1993887	Identifier	error_num		1993685	0					
ANR	1993888	Identifier	E_ERROR		1993685	1					
ANR	1993889	EqualityExpression	error_num == E_PARSE		1993685	1		==			
ANR	1993890	Identifier	error_num		1993685	0					
ANR	1993891	Identifier	E_PARSE		1993685	1					
ANR	1993892	Identifier	use_exceptions		1993685	1					
ANR	1993893	CompoundStatement		41:3:1264:1292	1993685	1					
ANR	1993894	IdentifierDeclStatement	zval fault ;	2159:3:74088:74098	1993685	0	True				
ANR	1993895	IdentifierDecl	fault		1993685	0					
ANR	1993896	IdentifierDeclType	zval		1993685	0					
ANR	1993897	Identifier	fault		1993685	1					
ANR	1993898	IdentifierDeclStatement	char * code = SOAP_GLOBAL ( error_code ) ;	2160:3:74103:74139	1993685	1	True				
ANR	1993899	IdentifierDecl	* code = SOAP_GLOBAL ( error_code )		1993685	0					
ANR	1993900	IdentifierDeclType	char *		1993685	0					
ANR	1993901	Identifier	code		1993685	1					
ANR	1993902	AssignmentExpression	* code = SOAP_GLOBAL ( error_code )		1993685	2		=			
ANR	1993903	Identifier	code		1993685	0					
ANR	1993904	CallExpression	SOAP_GLOBAL ( error_code )		1993685	1					
ANR	1993905	Callee	SOAP_GLOBAL		1993685	0					
ANR	1993906	Identifier	SOAP_GLOBAL		1993685	0					
ANR	1993907	ArgumentList	error_code		1993685	1					
ANR	1993908	Argument	error_code		1993685	0					
ANR	1993909	Identifier	error_code		1993685	0					
ANR	1993910	IdentifierDeclStatement	char buffer [ 1024 ] ;	2161:3:74144:74161	1993685	2	True				
ANR	1993911	IdentifierDecl	buffer [ 1024 ]		1993685	0					
ANR	1993912	IdentifierDeclType	char [ 1024 ]		1993685	0					
ANR	1993913	Identifier	buffer		1993685	1					
ANR	1993914	PrimaryExpression	1024		1993685	2					
ANR	1993915	IdentifierDeclStatement	int buffer_len ;	2162:3:74166:74180	1993685	3	True				
ANR	1993916	IdentifierDecl	buffer_len		1993685	0					
ANR	1993917	IdentifierDeclType	int		1993685	0					
ANR	1993918	Identifier	buffer_len		1993685	1					
ANR	1993919	IdentifierDeclStatement	va_list argcopy ;	2164:3:74200:74215	1993685	4	True				
ANR	1993920	IdentifierDecl	argcopy		1993685	0					
ANR	1993921	IdentifierDeclType	va_list		1993685	0					
ANR	1993922	Identifier	argcopy		1993685	1					
ANR	1993923	IdentifierDeclStatement	zend_object * * old_objects ;	2166:3:74227:74252	1993685	5	True				
ANR	1993924	IdentifierDecl	* * old_objects		1993685	0					
ANR	1993925	IdentifierDeclType	zend_object * *		1993685	0					
ANR	1993926	Identifier	old_objects		1993685	1					
ANR	1993927	IdentifierDeclStatement	int old = PG ( display_errors ) ;	2167:3:74257:74285	1993685	6	True				
ANR	1993928	IdentifierDecl	old = PG ( display_errors )		1993685	0					
ANR	1993929	IdentifierDeclType	int		1993685	0					
ANR	1993930	Identifier	old		1993685	1					
ANR	1993931	AssignmentExpression	old = PG ( display_errors )		1993685	2		=			
ANR	1993932	Identifier	old		1993685	0					
ANR	1993933	CallExpression	PG ( display_errors )		1993685	1					
ANR	1993934	Callee	PG		1993685	0					
ANR	1993935	Identifier	PG		1993685	0					
ANR	1993936	ArgumentList	display_errors		1993685	1					
ANR	1993937	Argument	display_errors		1993685	0					
ANR	1993938	Identifier	display_errors		1993685	0					
ANR	1993939	ExpressionStatement	"va_copy ( argcopy , args )"	2170:3:74306:74328	1993685	7	True				
ANR	1993940	CallExpression	"va_copy ( argcopy , args )"		1993685	0					
ANR	1993941	Callee	va_copy		1993685	0					
ANR	1993942	Identifier	va_copy		1993685	0					
ANR	1993943	ArgumentList	argcopy		1993685	1					
ANR	1993944	Argument	argcopy		1993685	0					
ANR	1993945	Identifier	argcopy		1993685	0					
ANR	1993946	Argument	args		1993685	1					
ANR	1993947	Identifier	args		1993685	0					
ANR	1993948	ExpressionStatement	"buffer_len = vslprintf ( buffer , sizeof ( buffer ) - 1 , format , argcopy )"	2171:3:74333:74398	1993685	8	True				
ANR	1993949	AssignmentExpression	"buffer_len = vslprintf ( buffer , sizeof ( buffer ) - 1 , format , argcopy )"		1993685	0		=			
ANR	1993950	Identifier	buffer_len		1993685	0					
ANR	1993951	CallExpression	"vslprintf ( buffer , sizeof ( buffer ) - 1 , format , argcopy )"		1993685	1					
ANR	1993952	Callee	vslprintf		1993685	0					
ANR	1993953	Identifier	vslprintf		1993685	0					
ANR	1993954	ArgumentList	buffer		1993685	1					
ANR	1993955	Argument	buffer		1993685	0					
ANR	1993956	Identifier	buffer		1993685	0					
ANR	1993957	Argument	sizeof ( buffer ) - 1		1993685	1					
ANR	1993958	AdditiveExpression	sizeof ( buffer ) - 1		1993685	0		-			
ANR	1993959	SizeofExpression	sizeof ( buffer )		1993685	0					
ANR	1993960	Sizeof	sizeof		1993685	0					
ANR	1993961	SizeofOperand	buffer		1993685	1					
ANR	1993962	PrimaryExpression	1		1993685	1					
ANR	1993963	Argument	format		1993685	2					
ANR	1993964	Identifier	format		1993685	0					
ANR	1993965	Argument	argcopy		1993685	3					
ANR	1993966	Identifier	argcopy		1993685	0					
ANR	1993967	ExpressionStatement	va_end ( argcopy )	2172:3:74403:74418	1993685	9	True				
ANR	1993968	CallExpression	va_end ( argcopy )		1993685	0					
ANR	1993969	Callee	va_end		1993685	0					
ANR	1993970	Identifier	va_end		1993685	0					
ANR	1993971	ArgumentList	argcopy		1993685	1					
ANR	1993972	Argument	argcopy		1993685	0					
ANR	1993973	Identifier	argcopy		1993685	0					
ANR	1993974	ExpressionStatement	buffer [ sizeof ( buffer ) - 1 ] = 0	2176:3:74503:74529	1993685	10	True				
ANR	1993975	AssignmentExpression	buffer [ sizeof ( buffer ) - 1 ] = 0		1993685	0		=			
ANR	1993976	ArrayIndexing	buffer [ sizeof ( buffer ) - 1 ]		1993685	0					
ANR	1993977	Identifier	buffer		1993685	0					
ANR	1993978	AdditiveExpression	sizeof ( buffer ) - 1		1993685	1		-			
ANR	1993979	SizeofExpression	sizeof ( buffer )		1993685	0					
ANR	1993980	Sizeof	sizeof		1993685	0					
ANR	1993981	SizeofOperand	buffer		1993685	1					
ANR	1993982	PrimaryExpression	1		1993685	1					
ANR	1993983	PrimaryExpression	0		1993685	1					
ANR	1993984	IfStatement	if ( buffer_len > sizeof ( buffer ) - 1 || buffer_len < 0 )		1993685	11					
ANR	1993985	Condition	buffer_len > sizeof ( buffer ) - 1 || buffer_len < 0	2177:7:74538:74586	1993685	0	True				
ANR	1993986	OrExpression	buffer_len > sizeof ( buffer ) - 1 || buffer_len < 0		1993685	0		||			
ANR	1993987	RelationalExpression	buffer_len > sizeof ( buffer ) - 1		1993685	0		>			
ANR	1993988	Identifier	buffer_len		1993685	0					
ANR	1993989	AdditiveExpression	sizeof ( buffer ) - 1		1993685	1		-			
ANR	1993990	SizeofExpression	sizeof ( buffer )		1993685	0					
ANR	1993991	Sizeof	sizeof		1993685	0					
ANR	1993992	SizeofOperand	buffer		1993685	1					
ANR	1993993	PrimaryExpression	1		1993685	1					
ANR	1993994	RelationalExpression	buffer_len < 0		1993685	1		<			
ANR	1993995	Identifier	buffer_len		1993685	0					
ANR	1993996	PrimaryExpression	0		1993685	1					
ANR	1993997	CompoundStatement		51:58:1596:1596	1993685	1					
ANR	1993998	ExpressionStatement	buffer_len = sizeof ( buffer ) - 1	2178:4:74595:74626	1993685	0	True				
ANR	1993999	AssignmentExpression	buffer_len = sizeof ( buffer ) - 1		1993685	0		=			
ANR	1994000	Identifier	buffer_len		1993685	0					
ANR	1994001	AdditiveExpression	sizeof ( buffer ) - 1		1993685	1		-			
ANR	1994002	SizeofExpression	sizeof ( buffer )		1993685	0					
ANR	1994003	Sizeof	sizeof		1993685	0					
ANR	1994004	SizeofOperand	buffer		1993685	1					
ANR	1994005	PrimaryExpression	1		1993685	1					
ANR	1994006	IfStatement	if ( code == NULL )		1993685	12					
ANR	1994007	Condition	code == NULL	2181:7:74641:74652	1993685	0	True				
ANR	1994008	EqualityExpression	code == NULL		1993685	0		==			
ANR	1994009	Identifier	code		1993685	0					
ANR	1994010	Identifier	NULL		1993685	1					
ANR	1994011	CompoundStatement		55:21:1662:1662	1993685	1					
ANR	1994012	ExpressionStatement	"code = ""Client"""	2182:4:74661:74676	1993685	0	True				
ANR	1994013	AssignmentExpression	"code = ""Client"""		1993685	0		=			
ANR	1994014	Identifier	code		1993685	0					
ANR	1994015	PrimaryExpression	"""Client"""		1993685	1					
ANR	1994016	ExpressionStatement	"add_soap_fault_ex ( & fault , & SOAP_GLOBAL ( error_object ) , code , buffer , NULL , NULL )"	2184:3:74686:74765	1993685	13	True				
ANR	1994017	CallExpression	"add_soap_fault_ex ( & fault , & SOAP_GLOBAL ( error_object ) , code , buffer , NULL , NULL )"		1993685	0					
ANR	1994018	Callee	add_soap_fault_ex		1993685	0					
ANR	1994019	Identifier	add_soap_fault_ex		1993685	0					
ANR	1994020	ArgumentList	& fault		1993685	1					
ANR	1994021	Argument	& fault		1993685	0					
ANR	1994022	UnaryOperationExpression	& fault		1993685	0					
ANR	1994023	UnaryOperator	&		1993685	0					
ANR	1994024	Identifier	fault		1993685	1					
ANR	1994025	Argument	& SOAP_GLOBAL ( error_object )		1993685	1					
ANR	1994026	UnaryOperationExpression	& SOAP_GLOBAL ( error_object )		1993685	0					
ANR	1994027	UnaryOperator	&		1993685	0					
ANR	1994028	CallExpression	SOAP_GLOBAL ( error_object )		1993685	1					
ANR	1994029	Callee	SOAP_GLOBAL		1993685	0					
ANR	1994030	Identifier	SOAP_GLOBAL		1993685	0					
ANR	1994031	ArgumentList	error_object		1993685	1					
ANR	1994032	Argument	error_object		1993685	0					
ANR	1994033	Identifier	error_object		1993685	0					
ANR	1994034	Argument	code		1993685	2					
ANR	1994035	Identifier	code		1993685	0					
ANR	1994036	Argument	buffer		1993685	3					
ANR	1994037	Identifier	buffer		1993685	0					
ANR	1994038	Argument	NULL		1993685	4					
ANR	1994039	Identifier	NULL		1993685	0					
ANR	1994040	Argument	NULL		1993685	5					
ANR	1994041	Identifier	NULL		1993685	0					
ANR	1994042	ExpressionStatement	Z_ADDREF ( fault )	2185:3:74770:74785	1993685	14	True				
ANR	1994043	CallExpression	Z_ADDREF ( fault )		1993685	0					
ANR	1994044	Callee	Z_ADDREF		1993685	0					
ANR	1994045	Identifier	Z_ADDREF		1993685	0					
ANR	1994046	ArgumentList	fault		1993685	1					
ANR	1994047	Argument	fault		1993685	0					
ANR	1994048	Identifier	fault		1993685	0					
ANR	1994049	ExpressionStatement	zend_throw_exception_object ( & fault )	2186:3:74790:74825	1993685	15	True				
ANR	1994050	CallExpression	zend_throw_exception_object ( & fault )		1993685	0					
ANR	1994051	Callee	zend_throw_exception_object		1993685	0					
ANR	1994052	Identifier	zend_throw_exception_object		1993685	0					
ANR	1994053	ArgumentList	& fault		1993685	1					
ANR	1994054	Argument	& fault		1993685	0					
ANR	1994055	UnaryOperationExpression	& fault		1993685	0					
ANR	1994056	UnaryOperator	&		1993685	0					
ANR	1994057	Identifier	fault		1993685	1					
ANR	1994058	ExpressionStatement	old_objects = EG ( objects_store ) . object_buckets	2188:3:74831:74877	1993685	16	True				
ANR	1994059	AssignmentExpression	old_objects = EG ( objects_store ) . object_buckets		1993685	0		=			
ANR	1994060	Identifier	old_objects		1993685	0					
ANR	1994061	MemberAccess	EG ( objects_store ) . object_buckets		1993685	1					
ANR	1994062	CallExpression	EG ( objects_store )		1993685	0					
ANR	1994063	Callee	EG		1993685	0					
ANR	1994064	Identifier	EG		1993685	0					
ANR	1994065	ArgumentList	objects_store		1993685	1					
ANR	1994066	Argument	objects_store		1993685	0					
ANR	1994067	Identifier	objects_store		1993685	0					
ANR	1994068	Identifier	object_buckets		1993685	1					
ANR	1994069	ExpressionStatement	EG ( objects_store ) . object_buckets = NULL	2189:3:74882:74921	1993685	17	True				
ANR	1994070	AssignmentExpression	EG ( objects_store ) . object_buckets = NULL		1993685	0		=			
ANR	1994071	MemberAccess	EG ( objects_store ) . object_buckets		1993685	0					
ANR	1994072	CallExpression	EG ( objects_store )		1993685	0					
ANR	1994073	Callee	EG		1993685	0					
ANR	1994074	Identifier	EG		1993685	0					
ANR	1994075	ArgumentList	objects_store		1993685	1					
ANR	1994076	Argument	objects_store		1993685	0					
ANR	1994077	Identifier	objects_store		1993685	0					
ANR	1994078	Identifier	object_buckets		1993685	1					
ANR	1994079	Identifier	NULL		1993685	1					
ANR	1994080	ExpressionStatement	PG ( display_errors ) = 0	2190:3:74926:74948	1993685	18	True				
ANR	1994081	AssignmentExpression	PG ( display_errors ) = 0		1993685	0		=			
ANR	1994082	CallExpression	PG ( display_errors )		1993685	0					
ANR	1994083	Callee	PG		1993685	0					
ANR	1994084	Identifier	PG		1993685	0					
ANR	1994085	ArgumentList	display_errors		1993685	1					
ANR	1994086	Argument	display_errors		1993685	0					
ANR	1994087	Identifier	display_errors		1993685	0					
ANR	1994088	PrimaryExpression	0		1993685	1					
ANR	1994089	ExpressionStatement	SG ( sapi_headers ) . http_status_line = NULL	2191:3:74953:74993	1993685	19	True				
ANR	1994090	AssignmentExpression	SG ( sapi_headers ) . http_status_line = NULL		1993685	0		=			
ANR	1994091	MemberAccess	SG ( sapi_headers ) . http_status_line		1993685	0					
ANR	1994092	CallExpression	SG ( sapi_headers )		1993685	0					
ANR	1994093	Callee	SG		1993685	0					
ANR	1994094	Identifier	SG		1993685	0					
ANR	1994095	ArgumentList	sapi_headers		1993685	1					
ANR	1994096	Argument	sapi_headers		1993685	0					
ANR	1994097	Identifier	sapi_headers		1993685	0					
ANR	1994098	Identifier	http_status_line		1993685	1					
ANR	1994099	Identifier	NULL		1993685	1					
ANR	1994100	Statement	zend_try	2192:3:74998:75005	1993685	20	True				
ANR	1994101	CompoundStatement		66:12:2014:2014	1993685	21					
ANR	1994102	ExpressionStatement	"call_old_error_handler ( error_num , error_filename , error_lineno , format , args )"	2193:4:75013:75090	1993685	0	True				
ANR	1994103	CallExpression	"call_old_error_handler ( error_num , error_filename , error_lineno , format , args )"		1993685	0					
ANR	1994104	Callee	call_old_error_handler		1993685	0					
ANR	1994105	Identifier	call_old_error_handler		1993685	0					
ANR	1994106	ArgumentList	error_num		1993685	1					
ANR	1994107	Argument	error_num		1993685	0					
ANR	1994108	Identifier	error_num		1993685	0					
ANR	1994109	Argument	error_filename		1993685	1					
ANR	1994110	Identifier	error_filename		1993685	0					
ANR	1994111	Argument	error_lineno		1993685	2					
ANR	1994112	Identifier	error_lineno		1993685	0					
ANR	1994113	Argument	format		1993685	3					
ANR	1994114	Identifier	format		1993685	0					
ANR	1994115	Argument	args		1993685	4					
ANR	1994116	Identifier	args		1993685	0					
ANR	1994117	Statement	zend_catch	2194:5:75097:75106	1993685	22	True				
ANR	1994118	CompoundStatement		68:16:2115:2115	1993685	23					
ANR	1994119	ExpressionStatement	CG ( in_compilation ) = _old_in_compilation	2195:4:75114:75154	1993685	0	True				
ANR	1994120	AssignmentExpression	CG ( in_compilation ) = _old_in_compilation		1993685	0		=			
ANR	1994121	CallExpression	CG ( in_compilation )		1993685	0					
ANR	1994122	Callee	CG		1993685	0					
ANR	1994123	Identifier	CG		1993685	0					
ANR	1994124	ArgumentList	in_compilation		1993685	1					
ANR	1994125	Argument	in_compilation		1993685	0					
ANR	1994126	Identifier	in_compilation		1993685	0					
ANR	1994127	Identifier	_old_in_compilation		1993685	1					
ANR	1994128	ExpressionStatement	EG ( current_execute_data ) = _old_current_execute_data	2196:4:75160:75212	1993685	1	True				
ANR	1994129	AssignmentExpression	EG ( current_execute_data ) = _old_current_execute_data		1993685	0		=			
ANR	1994130	CallExpression	EG ( current_execute_data )		1993685	0					
ANR	1994131	Callee	EG		1993685	0					
ANR	1994132	Identifier	EG		1993685	0					
ANR	1994133	ArgumentList	current_execute_data		1993685	1					
ANR	1994134	Argument	current_execute_data		1993685	0					
ANR	1994135	Identifier	current_execute_data		1993685	0					
ANR	1994136	Identifier	_old_current_execute_data		1993685	1					
ANR	1994137	IfStatement	if ( SG ( sapi_headers ) . http_status_line )		1993685	2					
ANR	1994138	Condition	SG ( sapi_headers ) . http_status_line	2197:8:75222:75254	1993685	0	True				
ANR	1994139	MemberAccess	SG ( sapi_headers ) . http_status_line		1993685	0					
ANR	1994140	CallExpression	SG ( sapi_headers )		1993685	0					
ANR	1994141	Callee	SG		1993685	0					
ANR	1994142	Identifier	SG		1993685	0					
ANR	1994143	ArgumentList	sapi_headers		1993685	1					
ANR	1994144	Argument	sapi_headers		1993685	0					
ANR	1994145	Identifier	sapi_headers		1993685	0					
ANR	1994146	Identifier	http_status_line		1993685	1					
ANR	1994147	CompoundStatement		71:43:2264:2264	1993685	1					
ANR	1994148	ExpressionStatement	efree ( SG ( sapi_headers ) . http_status_line )	2198:5:75264:75304	1993685	0	True				
ANR	1994149	CallExpression	efree ( SG ( sapi_headers ) . http_status_line )		1993685	0					
ANR	1994150	Callee	efree		1993685	0					
ANR	1994151	Identifier	efree		1993685	0					
ANR	1994152	ArgumentList	SG ( sapi_headers ) . http_status_line		1993685	1					
ANR	1994153	Argument	SG ( sapi_headers ) . http_status_line		1993685	0					
ANR	1994154	MemberAccess	SG ( sapi_headers ) . http_status_line		1993685	0					
ANR	1994155	CallExpression	SG ( sapi_headers )		1993685	0					
ANR	1994156	Callee	SG		1993685	0					
ANR	1994157	Identifier	SG		1993685	0					
ANR	1994158	ArgumentList	sapi_headers		1993685	1					
ANR	1994159	Argument	sapi_headers		1993685	0					
ANR	1994160	Identifier	sapi_headers		1993685	0					
ANR	1994161	Identifier	http_status_line		1993685	1					
ANR	1994162	ExpressionStatement	SG ( sapi_headers ) . http_status_line = _old_http_status_line	2200:4:75316:75373	1993685	3	True				
ANR	1994163	AssignmentExpression	SG ( sapi_headers ) . http_status_line = _old_http_status_line		1993685	0		=			
ANR	1994164	MemberAccess	SG ( sapi_headers ) . http_status_line		1993685	0					
ANR	1994165	CallExpression	SG ( sapi_headers )		1993685	0					
ANR	1994166	Callee	SG		1993685	0					
ANR	1994167	Identifier	SG		1993685	0					
ANR	1994168	ArgumentList	sapi_headers		1993685	1					
ANR	1994169	Argument	sapi_headers		1993685	0					
ANR	1994170	Identifier	sapi_headers		1993685	0					
ANR	1994171	Identifier	http_status_line		1993685	1					
ANR	1994172	Identifier	_old_http_status_line		1993685	1					
ANR	1994173	ExpressionStatement	SG ( sapi_headers ) . http_response_code = _old_http_response_code	2201:4:75379:75440	1993685	4	True				
ANR	1994174	AssignmentExpression	SG ( sapi_headers ) . http_response_code = _old_http_response_code		1993685	0		=			
ANR	1994175	MemberAccess	SG ( sapi_headers ) . http_response_code		1993685	0					
ANR	1994176	CallExpression	SG ( sapi_headers )		1993685	0					
ANR	1994177	Callee	SG		1993685	0					
ANR	1994178	Identifier	SG		1993685	0					
ANR	1994179	ArgumentList	sapi_headers		1993685	1					
ANR	1994180	Argument	sapi_headers		1993685	0					
ANR	1994181	Identifier	sapi_headers		1993685	0					
ANR	1994182	Identifier	http_response_code		1993685	1					
ANR	1994183	Identifier	_old_http_response_code		1993685	1					
ANR	1994184	ExpressionStatement	zend_end_try ( )	2202:5:75447:75461	1993685	24	True				
ANR	1994185	CallExpression	zend_end_try ( )		1993685	0					
ANR	1994186	Callee	zend_end_try		1993685	0					
ANR	1994187	Identifier	zend_end_try		1993685	0					
ANR	1994188	ArgumentList			1993685	1					
ANR	1994189	ExpressionStatement	EG ( objects_store ) . object_buckets = old_objects	2203:3:75466:75512	1993685	25	True				
ANR	1994190	AssignmentExpression	EG ( objects_store ) . object_buckets = old_objects		1993685	0		=			
ANR	1994191	MemberAccess	EG ( objects_store ) . object_buckets		1993685	0					
ANR	1994192	CallExpression	EG ( objects_store )		1993685	0					
ANR	1994193	Callee	EG		1993685	0					
ANR	1994194	Identifier	EG		1993685	0					
ANR	1994195	ArgumentList	objects_store		1993685	1					
ANR	1994196	Argument	objects_store		1993685	0					
ANR	1994197	Identifier	objects_store		1993685	0					
ANR	1994198	Identifier	object_buckets		1993685	1					
ANR	1994199	Identifier	old_objects		1993685	1					
ANR	1994200	ExpressionStatement	PG ( display_errors ) = old	2204:3:75517:75541	1993685	26	True				
ANR	1994201	AssignmentExpression	PG ( display_errors ) = old		1993685	0		=			
ANR	1994202	CallExpression	PG ( display_errors )		1993685	0					
ANR	1994203	Callee	PG		1993685	0					
ANR	1994204	Identifier	PG		1993685	0					
ANR	1994205	ArgumentList	display_errors		1993685	1					
ANR	1994206	Argument	display_errors		1993685	0					
ANR	1994207	Identifier	display_errors		1993685	0					
ANR	1994208	Identifier	old		1993685	1					
ANR	1994209	ExpressionStatement	zend_bailout ( )	2205:3:75546:75560	1993685	27	True				
ANR	1994210	CallExpression	zend_bailout ( )		1993685	0					
ANR	1994211	Callee	zend_bailout		1993685	0					
ANR	1994212	Identifier	zend_bailout		1993685	0					
ANR	1994213	ArgumentList			1993685	1					
ANR	1994214	ElseStatement	else		1993685	0					
ANR	1994215	IfStatement	"if ( ! use_exceptions || ! SOAP_GLOBAL ( error_code ) || strcmp ( SOAP_GLOBAL ( error_code ) , ""WSDL"" ) != 0 )"		1993685	0					
ANR	1994216	Condition	"! use_exceptions || ! SOAP_GLOBAL ( error_code ) || strcmp ( SOAP_GLOBAL ( error_code ) , ""WSDL"" ) != 0"	2206:13:75575:75690	1993685	0	True				
ANR	1994217	OrExpression	"! use_exceptions || ! SOAP_GLOBAL ( error_code ) || strcmp ( SOAP_GLOBAL ( error_code ) , ""WSDL"" ) != 0"		1993685	0		||			
ANR	1994218	UnaryOperationExpression	! use_exceptions		1993685	0					
ANR	1994219	UnaryOperator	!		1993685	0					
ANR	1994220	Identifier	use_exceptions		1993685	1					
ANR	1994221	OrExpression	"! SOAP_GLOBAL ( error_code ) || strcmp ( SOAP_GLOBAL ( error_code ) , ""WSDL"" ) != 0"		1993685	1		||			
ANR	1994222	UnaryOperationExpression	! SOAP_GLOBAL ( error_code )		1993685	0					
ANR	1994223	UnaryOperator	!		1993685	0					
ANR	1994224	CallExpression	SOAP_GLOBAL ( error_code )		1993685	1					
ANR	1994225	Callee	SOAP_GLOBAL		1993685	0					
ANR	1994226	Identifier	SOAP_GLOBAL		1993685	0					
ANR	1994227	ArgumentList	error_code		1993685	1					
ANR	1994228	Argument	error_code		1993685	0					
ANR	1994229	Identifier	error_code		1993685	0					
ANR	1994230	EqualityExpression	"strcmp ( SOAP_GLOBAL ( error_code ) , ""WSDL"" ) != 0"		1993685	1		!=			
ANR	1994231	CallExpression	"strcmp ( SOAP_GLOBAL ( error_code ) , ""WSDL"" )"		1993685	0					
ANR	1994232	Callee	strcmp		1993685	0					
ANR	1994233	Identifier	strcmp		1993685	0					
ANR	1994234	ArgumentList	SOAP_GLOBAL ( error_code )		1993685	1					
ANR	1994235	Argument	SOAP_GLOBAL ( error_code )		1993685	0					
ANR	1994236	CallExpression	SOAP_GLOBAL ( error_code )		1993685	0					
ANR	1994237	Callee	SOAP_GLOBAL		1993685	0					
ANR	1994238	Identifier	SOAP_GLOBAL		1993685	0					
ANR	1994239	ArgumentList	error_code		1993685	1					
ANR	1994240	Argument	error_code		1993685	0					
ANR	1994241	Identifier	error_code		1993685	0					
ANR	1994242	Argument	"""WSDL"""		1993685	1					
ANR	1994243	PrimaryExpression	"""WSDL"""		1993685	0					
ANR	1994244	PrimaryExpression	0		1993685	1					
ANR	1994245	CompoundStatement		82:58:2700:2700	1993685	1					
ANR	1994246	ExpressionStatement	"call_old_error_handler ( error_num , error_filename , error_lineno , format , args )"	2210:3:75750:75827	1993685	0	True				
ANR	1994247	CallExpression	"call_old_error_handler ( error_num , error_filename , error_lineno , format , args )"		1993685	0					
ANR	1994248	Callee	call_old_error_handler		1993685	0					
ANR	1994249	Identifier	call_old_error_handler		1993685	0					
ANR	1994250	ArgumentList	error_num		1993685	1					
ANR	1994251	Argument	error_num		1993685	0					
ANR	1994252	Identifier	error_num		1993685	0					
ANR	1994253	Argument	error_filename		1993685	1					
ANR	1994254	Identifier	error_filename		1993685	0					
ANR	1994255	Argument	error_lineno		1993685	2					
ANR	1994256	Identifier	error_lineno		1993685	0					
ANR	1994257	Argument	format		1993685	3					
ANR	1994258	Identifier	format		1993685	0					
ANR	1994259	Argument	args		1993685	4					
ANR	1994260	Identifier	args		1993685	0					
ANR	1994261	ElseStatement	else		1993685	0					
ANR	1994262	CompoundStatement		91:2:2934:2949	1993685	0					
ANR	1994263	IdentifierDeclStatement	int old = PG ( display_errors ) ;	2213:2:75845:75873	1993685	0	True				
ANR	1994264	IdentifierDecl	old = PG ( display_errors )		1993685	0					
ANR	1994265	IdentifierDeclType	int		1993685	0					
ANR	1994266	Identifier	old		1993685	1					
ANR	1994267	AssignmentExpression	old = PG ( display_errors )		1993685	2		=			
ANR	1994268	Identifier	old		1993685	0					
ANR	1994269	CallExpression	PG ( display_errors )		1993685	1					
ANR	1994270	Callee	PG		1993685	0					
ANR	1994271	Identifier	PG		1993685	0					
ANR	1994272	ArgumentList	display_errors		1993685	1					
ANR	1994273	Argument	display_errors		1993685	0					
ANR	1994274	Identifier	display_errors		1993685	0					
ANR	1994275	IdentifierDeclStatement	int fault = 0 ;	2214:2:75877:75890	1993685	1	True				
ANR	1994276	IdentifierDecl	fault = 0		1993685	0					
ANR	1994277	IdentifierDeclType	int		1993685	0					
ANR	1994278	Identifier	fault		1993685	1					
ANR	1994279	AssignmentExpression	fault = 0		1993685	2		=			
ANR	1994280	Identifier	fault		1993685	0					
ANR	1994281	PrimaryExpression	0		1993685	1					
ANR	1994282	IdentifierDeclStatement	zval fault_obj ;	2215:2:75894:75908	1993685	2	True				
ANR	1994283	IdentifierDecl	fault_obj		1993685	0					
ANR	1994284	IdentifierDeclType	zval		1993685	0					
ANR	1994285	Identifier	fault_obj		1993685	1					
ANR	1994286	IdentifierDeclStatement	va_list argcopy ;	2217:2:75927:75942	1993685	3	True				
ANR	1994287	IdentifierDecl	argcopy		1993685	0					
ANR	1994288	IdentifierDeclType	va_list		1993685	0					
ANR	1994289	Identifier	argcopy		1993685	1					
ANR	1994290	IfStatement	if ( error_num == E_USER_ERROR || error_num == E_COMPILE_ERROR || error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE )		1993685	4					
ANR	1994291	Condition	error_num == E_USER_ERROR || error_num == E_COMPILE_ERROR || error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE	2220:6:75958:76115	1993685	0	True				
ANR	1994292	OrExpression	error_num == E_USER_ERROR || error_num == E_COMPILE_ERROR || error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE		1993685	0		||			
ANR	1994293	EqualityExpression	error_num == E_USER_ERROR		1993685	0		==			
ANR	1994294	Identifier	error_num		1993685	0					
ANR	1994295	Identifier	E_USER_ERROR		1993685	1					
ANR	1994296	OrExpression	error_num == E_COMPILE_ERROR || error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE		1993685	1		||			
ANR	1994297	EqualityExpression	error_num == E_COMPILE_ERROR		1993685	0		==			
ANR	1994298	Identifier	error_num		1993685	0					
ANR	1994299	Identifier	E_COMPILE_ERROR		1993685	1					
ANR	1994300	OrExpression	error_num == E_CORE_ERROR || error_num == E_ERROR || error_num == E_PARSE		1993685	1		||			
ANR	1994301	EqualityExpression	error_num == E_CORE_ERROR		1993685	0		==			
ANR	1994302	Identifier	error_num		1993685	0					
ANR	1994303	Identifier	E_CORE_ERROR		1993685	1					
ANR	1994304	OrExpression	error_num == E_ERROR || error_num == E_PARSE		1993685	1		||			
ANR	1994305	EqualityExpression	error_num == E_ERROR		1993685	0		==			
ANR	1994306	Identifier	error_num		1993685	0					
ANR	1994307	Identifier	E_ERROR		1993685	1					
ANR	1994308	EqualityExpression	error_num == E_PARSE		1993685	1		==			
ANR	1994309	Identifier	error_num		1993685	0					
ANR	1994310	Identifier	E_PARSE		1993685	1					
ANR	1994311	CompoundStatement		104:3:3224:3246	1993685	1					
ANR	1994312	IdentifierDeclStatement	char * code = SOAP_GLOBAL ( error_code ) ;	2226:3:76124:76160	1993685	0	True				
ANR	1994313	IdentifierDecl	* code = SOAP_GLOBAL ( error_code )		1993685	0					
ANR	1994314	IdentifierDeclType	char *		1993685	0					
ANR	1994315	Identifier	code		1993685	1					
ANR	1994316	AssignmentExpression	* code = SOAP_GLOBAL ( error_code )		1993685	2		=			
ANR	1994317	Identifier	code		1993685	0					
ANR	1994318	CallExpression	SOAP_GLOBAL ( error_code )		1993685	1					
ANR	1994319	Callee	SOAP_GLOBAL		1993685	0					
ANR	1994320	Identifier	SOAP_GLOBAL		1993685	0					
ANR	1994321	ArgumentList	error_code		1993685	1					
ANR	1994322	Argument	error_code		1993685	0					
ANR	1994323	Identifier	error_code		1993685	0					
ANR	1994324	IdentifierDeclStatement	char buffer [ 1024 ] ;	2227:3:76165:76182	1993685	1	True				
ANR	1994325	IdentifierDecl	buffer [ 1024 ]		1993685	0					
ANR	1994326	IdentifierDeclType	char [ 1024 ]		1993685	0					
ANR	1994327	Identifier	buffer		1993685	1					
ANR	1994328	PrimaryExpression	1024		1993685	2					
ANR	1994329	IdentifierDeclStatement	zval outbuf ;	2228:3:76187:76198	1993685	2	True				
ANR	1994330	IdentifierDecl	outbuf		1993685	0					
ANR	1994331	IdentifierDeclType	zval		1993685	0					
ANR	1994332	Identifier	outbuf		1993685	1					
ANR	1994333	IdentifierDeclStatement	zval * tmp ;	2229:3:76203:76212	1993685	3	True				
ANR	1994334	IdentifierDecl	* tmp		1993685	0					
ANR	1994335	IdentifierDeclType	zval *		1993685	0					
ANR	1994336	Identifier	tmp		1993685	1					
ANR	1994337	IdentifierDeclStatement	soapServicePtr service ;	2230:3:76217:76239	1993685	4	True				
ANR	1994338	IdentifierDecl	service		1993685	0					
ANR	1994339	IdentifierDeclType	soapServicePtr		1993685	0					
ANR	1994340	Identifier	service		1993685	1					
ANR	1994341	ExpressionStatement	ZVAL_UNDEF ( & outbuf )	2232:3:76245:76264	1993685	5	True				
ANR	1994342	CallExpression	ZVAL_UNDEF ( & outbuf )		1993685	0					
ANR	1994343	Callee	ZVAL_UNDEF		1993685	0					
ANR	1994344	Identifier	ZVAL_UNDEF		1993685	0					
ANR	1994345	ArgumentList	& outbuf		1993685	1					
ANR	1994346	Argument	& outbuf		1993685	0					
ANR	1994347	UnaryOperationExpression	& outbuf		1993685	0					
ANR	1994348	UnaryOperator	&		1993685	0					
ANR	1994349	Identifier	outbuf		1993685	1					
ANR	1994350	IfStatement	if ( code == NULL )		1993685	6					
ANR	1994351	Condition	code == NULL	2233:7:76273:76284	1993685	0	True				
ANR	1994352	EqualityExpression	code == NULL		1993685	0		==			
ANR	1994353	Identifier	code		1993685	0					
ANR	1994354	Identifier	NULL		1993685	1					
ANR	1994355	CompoundStatement		107:21:3294:3294	1993685	1					
ANR	1994356	ExpressionStatement	"code = ""Server"""	2234:4:76293:76308	1993685	0	True				
ANR	1994357	AssignmentExpression	"code = ""Server"""		1993685	0		=			
ANR	1994358	Identifier	code		1993685	0					
ANR	1994359	PrimaryExpression	"""Server"""		1993685	1					
ANR	1994360	IfStatement	"if ( Z_OBJ ( SOAP_GLOBAL ( error_object ) ) && instanceof_function ( Z_OBJCE ( SOAP_GLOBAL ( error_object ) ) , soap_server_class_entry ) && ( tmp = zend_hash_str_find ( Z_OBJPROP ( SOAP_GLOBAL ( error_object ) ) , ""service"" , sizeof ( ""service"" ) - 1 ) ) != NULL && ( service = ( soapServicePtr ) zend_fetch_resource_ex ( tmp , ""service"" , le_service ) ) && ! service -> send_errors )"		1993685	7					
ANR	1994361	Condition	"Z_OBJ ( SOAP_GLOBAL ( error_object ) ) && instanceof_function ( Z_OBJCE ( SOAP_GLOBAL ( error_object ) ) , soap_server_class_entry ) && ( tmp = zend_hash_str_find ( Z_OBJPROP ( SOAP_GLOBAL ( error_object ) ) , ""service"" , sizeof ( ""service"" ) - 1 ) ) != NULL && ( service = ( soapServicePtr ) zend_fetch_resource_ex ( tmp , ""service"" , le_service ) ) && ! service -> send_errors"	2236:7:76322:76677	1993685	0	True				
ANR	1994362	AndExpression	"Z_OBJ ( SOAP_GLOBAL ( error_object ) ) && instanceof_function ( Z_OBJCE ( SOAP_GLOBAL ( error_object ) ) , soap_server_class_entry ) && ( tmp = zend_hash_str_find ( Z_OBJPROP ( SOAP_GLOBAL ( error_object ) ) , ""service"" , sizeof ( ""service"" ) - 1 ) ) != NULL && ( service = ( soapServicePtr ) zend_fetch_resource_ex ( tmp , ""service"" , le_service ) ) && ! service -> send_errors"		1993685	0		&&			
ANR	1994363	CallExpression	Z_OBJ ( SOAP_GLOBAL ( error_object ) )		1993685	0					
ANR	1994364	Callee	Z_OBJ		1993685	0					
ANR	1994365	Identifier	Z_OBJ		1993685	0					
ANR	1994366	ArgumentList	SOAP_GLOBAL ( error_object )		1993685	1					
ANR	1994367	Argument	SOAP_GLOBAL ( error_object )		1993685	0					
ANR	1994368	CallExpression	SOAP_GLOBAL ( error_object )		1993685	0					
ANR	1994369	Callee	SOAP_GLOBAL		1993685	0					
ANR	1994370	Identifier	SOAP_GLOBAL		1993685	0					
ANR	1994371	ArgumentList	error_object		1993685	1					
ANR	1994372	Argument	error_object		1993685	0					
ANR	1994373	Identifier	error_object		1993685	0					
ANR	1994374	AndExpression	"instanceof_function ( Z_OBJCE ( SOAP_GLOBAL ( error_object ) ) , soap_server_class_entry ) && ( tmp = zend_hash_str_find ( Z_OBJPROP ( SOAP_GLOBAL ( error_object ) ) , ""service"" , sizeof ( ""service"" ) - 1 ) ) != NULL && ( service = ( soapServicePtr ) zend_fetch_resource_ex ( tmp , ""service"" , le_service ) ) && ! service -> send_errors"		1993685	1		&&			
ANR	1994375	CallExpression	"instanceof_function ( Z_OBJCE ( SOAP_GLOBAL ( error_object ) ) , soap_server_class_entry )"		1993685	0					
ANR	1994376	Callee	instanceof_function		1993685	0					
ANR	1994377	Identifier	instanceof_function		1993685	0					
ANR	1994378	ArgumentList	Z_OBJCE ( SOAP_GLOBAL ( error_object ) )		1993685	1					
ANR	1994379	Argument	Z_OBJCE ( SOAP_GLOBAL ( error_object ) )		1993685	0					
ANR	1994380	CallExpression	Z_OBJCE ( SOAP_GLOBAL ( error_object ) )		1993685	0					
ANR	1994381	Callee	Z_OBJCE		1993685	0					
ANR	1994382	Identifier	Z_OBJCE		1993685	0					
ANR	1994383	ArgumentList	SOAP_GLOBAL ( error_object )		1993685	1					
ANR	1994384	Argument	SOAP_GLOBAL ( error_object )		1993685	0					
ANR	1994385	CallExpression	SOAP_GLOBAL ( error_object )		1993685	0					
ANR	1994386	Callee	SOAP_GLOBAL		1993685	0					
ANR	1994387	Identifier	SOAP_GLOBAL		1993685	0					
ANR	1994388	ArgumentList	error_object		1993685	1					
ANR	1994389	Argument	error_object		1993685	0					
ANR	1994390	Identifier	error_object		1993685	0					
ANR	1994391	Argument	soap_server_class_entry		1993685	1					
ANR	1994392	Identifier	soap_server_class_entry		1993685	0					
ANR	1994393	AndExpression	"( tmp = zend_hash_str_find ( Z_OBJPROP ( SOAP_GLOBAL ( error_object ) ) , ""service"" , sizeof ( ""service"" ) - 1 ) ) != NULL && ( service = ( soapServicePtr ) zend_fetch_resource_ex ( tmp , ""service"" , le_service ) ) && ! service -> send_errors"		1993685	1		&&			
ANR	1994394	EqualityExpression	"( tmp = zend_hash_str_find ( Z_OBJPROP ( SOAP_GLOBAL ( error_object ) ) , ""service"" , sizeof ( ""service"" ) - 1 ) ) != NULL"		1993685	0		!=			
ANR	1994395	AssignmentExpression	"tmp = zend_hash_str_find ( Z_OBJPROP ( SOAP_GLOBAL ( error_object ) ) , ""service"" , sizeof ( ""service"" ) - 1 )"		1993685	0		=			
ANR	1994396	Identifier	tmp		1993685	0					
ANR	1994397	CallExpression	"zend_hash_str_find ( Z_OBJPROP ( SOAP_GLOBAL ( error_object ) ) , ""service"" , sizeof ( ""service"" ) - 1 )"		1993685	1					
ANR	1994398	Callee	zend_hash_str_find		1993685	0					
ANR	1994399	Identifier	zend_hash_str_find		1993685	0					
ANR	1994400	ArgumentList	Z_OBJPROP ( SOAP_GLOBAL ( error_object ) )		1993685	1					
ANR	1994401	Argument	Z_OBJPROP ( SOAP_GLOBAL ( error_object ) )		1993685	0					
ANR	1994402	CallExpression	Z_OBJPROP ( SOAP_GLOBAL ( error_object ) )		1993685	0					
ANR	1994403	Callee	Z_OBJPROP		1993685	0					
ANR	1994404	Identifier	Z_OBJPROP		1993685	0					
ANR	1994405	ArgumentList	SOAP_GLOBAL ( error_object )		1993685	1					
ANR	1994406	Argument	SOAP_GLOBAL ( error_object )		1993685	0					
ANR	1994407	CallExpression	SOAP_GLOBAL ( error_object )		1993685	0					
ANR	1994408	Callee	SOAP_GLOBAL		1993685	0					
ANR	1994409	Identifier	SOAP_GLOBAL		1993685	0					
ANR	1994410	ArgumentList	error_object		1993685	1					
ANR	1994411	Argument	error_object		1993685	0					
ANR	1994412	Identifier	error_object		1993685	0					
ANR	1994413	Argument	"""service"""		1993685	1					
ANR	1994414	PrimaryExpression	"""service"""		1993685	0					
ANR	1994415	Argument	"sizeof ( ""service"" ) - 1"		1993685	2					
ANR	1994416	AdditiveExpression	"sizeof ( ""service"" ) - 1"		1993685	0		-			
ANR	1994417	SizeofExpression	"sizeof ( ""service"" )"		1993685	0					
ANR	1994418	Sizeof	sizeof		1993685	0					
ANR	1994419	PrimaryExpression	"""service"""		1993685	1					
ANR	1994420	PrimaryExpression	1		1993685	1					
ANR	1994421	Identifier	NULL		1993685	1					
ANR	1994422	AndExpression	"( service = ( soapServicePtr ) zend_fetch_resource_ex ( tmp , ""service"" , le_service ) ) && ! service -> send_errors"		1993685	1		&&			
ANR	1994423	AssignmentExpression	"service = ( soapServicePtr ) zend_fetch_resource_ex ( tmp , ""service"" , le_service )"		1993685	0		=			
ANR	1994424	Identifier	service		1993685	0					
ANR	1994425	CastExpression	"( soapServicePtr ) zend_fetch_resource_ex ( tmp , ""service"" , le_service )"		1993685	1					
ANR	1994426	CastTarget	soapServicePtr		1993685	0					
ANR	1994427	CallExpression	"zend_fetch_resource_ex ( tmp , ""service"" , le_service )"		1993685	1					
ANR	1994428	Callee	zend_fetch_resource_ex		1993685	0					
ANR	1994429	Identifier	zend_fetch_resource_ex		1993685	0					
ANR	1994430	ArgumentList	tmp		1993685	1					
ANR	1994431	Argument	tmp		1993685	0					
ANR	1994432	Identifier	tmp		1993685	0					
ANR	1994433	Argument	"""service"""		1993685	1					
ANR	1994434	PrimaryExpression	"""service"""		1993685	0					
ANR	1994435	Argument	le_service		1993685	2					
ANR	1994436	Identifier	le_service		1993685	0					
ANR	1994437	UnaryOperationExpression	! service -> send_errors		1993685	1					
ANR	1994438	UnaryOperator	!		1993685	0					
ANR	1994439	PtrMemberAccess	service -> send_errors		1993685	1					
ANR	1994440	Identifier	service		1993685	0					
ANR	1994441	Identifier	send_errors		1993685	1					
ANR	1994442	CompoundStatement		114:27:3687:3687	1993685	1					
ANR	1994443	ExpressionStatement	"strcpy ( buffer , ""Internal Error"" )"	2241:4:76686:76718	1993685	0	True				
ANR	1994444	CallExpression	"strcpy ( buffer , ""Internal Error"" )"		1993685	0					
ANR	1994445	Callee	strcpy		1993685	0					
ANR	1994446	Identifier	strcpy		1993685	0					
ANR	1994447	ArgumentList	buffer		1993685	1					
ANR	1994448	Argument	buffer		1993685	0					
ANR	1994449	Identifier	buffer		1993685	0					
ANR	1994450	Argument	"""Internal Error"""		1993685	1					
ANR	1994451	PrimaryExpression	"""Internal Error"""		1993685	0					
ANR	1994452	ElseStatement	else		1993685	0					
ANR	1994453	CompoundStatement		118:4:3763:3777	1993685	0					
ANR	1994454	IdentifierDeclStatement	int buffer_len ;	2243:4:76736:76750	1993685	0	True				
ANR	1994455	IdentifierDecl	buffer_len		1993685	0					
ANR	1994456	IdentifierDeclType	int		1993685	0					
ANR	1994457	Identifier	buffer_len		1993685	1					
ANR	1994458	IdentifierDeclStatement	zval outbuflen ;	2244:4:76756:76770	1993685	1	True				
ANR	1994459	IdentifierDecl	outbuflen		1993685	0					
ANR	1994460	IdentifierDeclType	zval		1993685	0					
ANR	1994461	Identifier	outbuflen		1993685	1					
ANR	1994462	ExpressionStatement	"va_copy ( argcopy , args )"	2247:4:76792:76814	1993685	2	True				
ANR	1994463	CallExpression	"va_copy ( argcopy , args )"		1993685	0					
ANR	1994464	Callee	va_copy		1993685	0					
ANR	1994465	Identifier	va_copy		1993685	0					
ANR	1994466	ArgumentList	argcopy		1993685	1					
ANR	1994467	Argument	argcopy		1993685	0					
ANR	1994468	Identifier	argcopy		1993685	0					
ANR	1994469	Argument	args		1993685	1					
ANR	1994470	Identifier	args		1993685	0					
ANR	1994471	ExpressionStatement	"buffer_len = vslprintf ( buffer , sizeof ( buffer ) - 1 , format , argcopy )"	2248:4:76820:76885	1993685	3	True				
ANR	1994472	AssignmentExpression	"buffer_len = vslprintf ( buffer , sizeof ( buffer ) - 1 , format , argcopy )"		1993685	0		=			
ANR	1994473	Identifier	buffer_len		1993685	0					
ANR	1994474	CallExpression	"vslprintf ( buffer , sizeof ( buffer ) - 1 , format , argcopy )"		1993685	1					
ANR	1994475	Callee	vslprintf		1993685	0					
ANR	1994476	Identifier	vslprintf		1993685	0					
ANR	1994477	ArgumentList	buffer		1993685	1					
ANR	1994478	Argument	buffer		1993685	0					
ANR	1994479	Identifier	buffer		1993685	0					
ANR	1994480	Argument	sizeof ( buffer ) - 1		1993685	1					
ANR	1994481	AdditiveExpression	sizeof ( buffer ) - 1		1993685	0		-			
ANR	1994482	SizeofExpression	sizeof ( buffer )		1993685	0					
ANR	1994483	Sizeof	sizeof		1993685	0					
ANR	1994484	SizeofOperand	buffer		1993685	1					
ANR	1994485	PrimaryExpression	1		1993685	1					
ANR	1994486	Argument	format		1993685	2					
ANR	1994487	Identifier	format		1993685	0					
ANR	1994488	Argument	argcopy		1993685	3					
ANR	1994489	Identifier	argcopy		1993685	0					
ANR	1994490	ExpressionStatement	va_end ( argcopy )	2249:4:76891:76906	1993685	4	True				
ANR	1994491	CallExpression	va_end ( argcopy )		1993685	0					
ANR	1994492	Callee	va_end		1993685	0					
ANR	1994493	Identifier	va_end		1993685	0					
ANR	1994494	ArgumentList	argcopy		1993685	1					
ANR	1994495	Argument	argcopy		1993685	0					
ANR	1994496	Identifier	argcopy		1993685	0					
ANR	1994497	ExpressionStatement	buffer [ sizeof ( buffer ) - 1 ] = 0	2253:4:76993:77019	1993685	5	True				
ANR	1994498	AssignmentExpression	buffer [ sizeof ( buffer ) - 1 ] = 0		1993685	0		=			
ANR	1994499	ArrayIndexing	buffer [ sizeof ( buffer ) - 1 ]		1993685	0					
ANR	1994500	Identifier	buffer		1993685	0					
ANR	1994501	AdditiveExpression	sizeof ( buffer ) - 1		1993685	1		-			
ANR	1994502	SizeofExpression	sizeof ( buffer )		1993685	0					
ANR	1994503	Sizeof	sizeof		1993685	0					
ANR	1994504	SizeofOperand	buffer		1993685	1					
ANR	1994505	PrimaryExpression	1		1993685	1					
ANR	1994506	PrimaryExpression	0		1993685	1					
ANR	1994507	IfStatement	if ( buffer_len > sizeof ( buffer ) - 1 || buffer_len < 0 )		1993685	6					
ANR	1994508	Condition	buffer_len > sizeof ( buffer ) - 1 || buffer_len < 0	2254:8:77029:77077	1993685	0	True				
ANR	1994509	OrExpression	buffer_len > sizeof ( buffer ) - 1 || buffer_len < 0		1993685	0		||			
ANR	1994510	RelationalExpression	buffer_len > sizeof ( buffer ) - 1		1993685	0		>			
ANR	1994511	Identifier	buffer_len		1993685	0					
ANR	1994512	AdditiveExpression	sizeof ( buffer ) - 1		1993685	1		-			
ANR	1994513	SizeofExpression	sizeof ( buffer )		1993685	0					
ANR	1994514	Sizeof	sizeof		1993685	0					
ANR	1994515	SizeofOperand	buffer		1993685	1					
ANR	1994516	PrimaryExpression	1		1993685	1					
ANR	1994517	RelationalExpression	buffer_len < 0		1993685	1		<			
ANR	1994518	Identifier	buffer_len		1993685	0					
ANR	1994519	PrimaryExpression	0		1993685	1					
ANR	1994520	CompoundStatement		128:59:4087:4087	1993685	1					
ANR	1994521	ExpressionStatement	buffer_len = sizeof ( buffer ) - 1	2255:5:77087:77118	1993685	0	True				
ANR	1994522	AssignmentExpression	buffer_len = sizeof ( buffer ) - 1		1993685	0		=			
ANR	1994523	Identifier	buffer_len		1993685	0					
ANR	1994524	AdditiveExpression	sizeof ( buffer ) - 1		1993685	1		-			
ANR	1994525	SizeofExpression	sizeof ( buffer )		1993685	0					
ANR	1994526	Sizeof	sizeof		1993685	0					
ANR	1994527	SizeofOperand	buffer		1993685	1					
ANR	1994528	PrimaryExpression	1		1993685	1					
ANR	1994529	IfStatement	if ( php_output_get_length ( & outbuflen ) != FAILURE && Z_LVAL ( outbuflen ) != 0 )		1993685	7					
ANR	1994530	Condition	php_output_get_length ( & outbuflen ) != FAILURE && Z_LVAL ( outbuflen ) != 0	2259:8:77189:77258	1993685	0	True				
ANR	1994531	AndExpression	php_output_get_length ( & outbuflen ) != FAILURE && Z_LVAL ( outbuflen ) != 0		1993685	0		&&			
ANR	1994532	EqualityExpression	php_output_get_length ( & outbuflen ) != FAILURE		1993685	0		!=			
ANR	1994533	CallExpression	php_output_get_length ( & outbuflen )		1993685	0					
ANR	1994534	Callee	php_output_get_length		1993685	0					
ANR	1994535	Identifier	php_output_get_length		1993685	0					
ANR	1994536	ArgumentList	& outbuflen		1993685	1					
ANR	1994537	Argument	& outbuflen		1993685	0					
ANR	1994538	UnaryOperationExpression	& outbuflen		1993685	0					
ANR	1994539	UnaryOperator	&		1993685	0					
ANR	1994540	Identifier	outbuflen		1993685	1					
ANR	1994541	Identifier	FAILURE		1993685	1					
ANR	1994542	EqualityExpression	Z_LVAL ( outbuflen ) != 0		1993685	1		!=			
ANR	1994543	CallExpression	Z_LVAL ( outbuflen )		1993685	0					
ANR	1994544	Callee	Z_LVAL		1993685	0					
ANR	1994545	Identifier	Z_LVAL		1993685	0					
ANR	1994546	ArgumentList	outbuflen		1993685	1					
ANR	1994547	Argument	outbuflen		1993685	0					
ANR	1994548	Identifier	outbuflen		1993685	0					
ANR	1994549	PrimaryExpression	0		1993685	1					
ANR	1994550	CompoundStatement		133:80:4268:4268	1993685	1					
ANR	1994551	ExpressionStatement	php_output_get_contents ( & outbuf )	2260:5:77268:77300	1993685	0	True				
ANR	1994552	CallExpression	php_output_get_contents ( & outbuf )		1993685	0					
ANR	1994553	Callee	php_output_get_contents		1993685	0					
ANR	1994554	Identifier	php_output_get_contents		1993685	0					
ANR	1994555	ArgumentList	& outbuf		1993685	1					
ANR	1994556	Argument	& outbuf		1993685	0					
ANR	1994557	UnaryOperationExpression	& outbuf		1993685	0					
ANR	1994558	UnaryOperator	&		1993685	0					
ANR	1994559	Identifier	outbuf		1993685	1					
ANR	1994560	ExpressionStatement	php_output_discard ( )	2262:4:77312:77332	1993685	8	True				
ANR	1994561	CallExpression	php_output_discard ( )		1993685	0					
ANR	1994562	Callee	php_output_discard		1993685	0					
ANR	1994563	Identifier	php_output_discard		1993685	0					
ANR	1994564	ArgumentList			1993685	1					
ANR	1994565	ExpressionStatement	ZVAL_NULL ( & fault_obj )	2265:3:77343:77364	1993685	8	True				
ANR	1994566	CallExpression	ZVAL_NULL ( & fault_obj )		1993685	0					
ANR	1994567	Callee	ZVAL_NULL		1993685	0					
ANR	1994568	Identifier	ZVAL_NULL		1993685	0					
ANR	1994569	ArgumentList	& fault_obj		1993685	1					
ANR	1994570	Argument	& fault_obj		1993685	0					
ANR	1994571	UnaryOperationExpression	& fault_obj		1993685	0					
ANR	1994572	UnaryOperator	&		1993685	0					
ANR	1994573	Identifier	fault_obj		1993685	1					
ANR	1994574	ExpressionStatement	"set_soap_fault ( & fault_obj , NULL , code , buffer , NULL , & outbuf , NULL )"	2266:3:77369:77436	1993685	9	True				
ANR	1994575	CallExpression	"set_soap_fault ( & fault_obj , NULL , code , buffer , NULL , & outbuf , NULL )"		1993685	0					
ANR	1994576	Callee	set_soap_fault		1993685	0					
ANR	1994577	Identifier	set_soap_fault		1993685	0					
ANR	1994578	ArgumentList	& fault_obj		1993685	1					
ANR	1994579	Argument	& fault_obj		1993685	0					
ANR	1994580	UnaryOperationExpression	& fault_obj		1993685	0					
ANR	1994581	UnaryOperator	&		1993685	0					
ANR	1994582	Identifier	fault_obj		1993685	1					
ANR	1994583	Argument	NULL		1993685	1					
ANR	1994584	Identifier	NULL		1993685	0					
ANR	1994585	Argument	code		1993685	2					
ANR	1994586	Identifier	code		1993685	0					
ANR	1994587	Argument	buffer		1993685	3					
ANR	1994588	Identifier	buffer		1993685	0					
ANR	1994589	Argument	NULL		1993685	4					
ANR	1994590	Identifier	NULL		1993685	0					
ANR	1994591	Argument	& outbuf		1993685	5					
ANR	1994592	UnaryOperationExpression	& outbuf		1993685	0					
ANR	1994593	UnaryOperator	&		1993685	0					
ANR	1994594	Identifier	outbuf		1993685	1					
ANR	1994595	Argument	NULL		1993685	6					
ANR	1994596	Identifier	NULL		1993685	0					
ANR	1994597	ExpressionStatement	fault = 1	2267:3:77441:77450	1993685	10	True				
ANR	1994598	AssignmentExpression	fault = 1		1993685	0		=			
ANR	1994599	Identifier	fault		1993685	0					
ANR	1994600	PrimaryExpression	1		1993685	1					
ANR	1994601	ExpressionStatement	PG ( display_errors ) = 0	2270:2:77459:77481	1993685	5	True				
ANR	1994602	AssignmentExpression	PG ( display_errors ) = 0		1993685	0		=			
ANR	1994603	CallExpression	PG ( display_errors )		1993685	0					
ANR	1994604	Callee	PG		1993685	0					
ANR	1994605	Identifier	PG		1993685	0					
ANR	1994606	ArgumentList	display_errors		1993685	1					
ANR	1994607	Argument	display_errors		1993685	0					
ANR	1994608	Identifier	display_errors		1993685	0					
ANR	1994609	PrimaryExpression	0		1993685	1					
ANR	1994610	ExpressionStatement	SG ( sapi_headers ) . http_status_line = NULL	2271:2:77485:77525	1993685	6	True				
ANR	1994611	AssignmentExpression	SG ( sapi_headers ) . http_status_line = NULL		1993685	0		=			
ANR	1994612	MemberAccess	SG ( sapi_headers ) . http_status_line		1993685	0					
ANR	1994613	CallExpression	SG ( sapi_headers )		1993685	0					
ANR	1994614	Callee	SG		1993685	0					
ANR	1994615	Identifier	SG		1993685	0					
ANR	1994616	ArgumentList	sapi_headers		1993685	1					
ANR	1994617	Argument	sapi_headers		1993685	0					
ANR	1994618	Identifier	sapi_headers		1993685	0					
ANR	1994619	Identifier	http_status_line		1993685	1					
ANR	1994620	Identifier	NULL		1993685	1					
ANR	1994621	Statement	zend_try	2272:2:77529:77536	1993685	7	True				
ANR	1994622	CompoundStatement		146:11:4545:4545	1993685	8					
ANR	1994623	ExpressionStatement	"call_old_error_handler ( error_num , error_filename , error_lineno , format , args )"	2273:3:77543:77620	1993685	0	True				
ANR	1994624	CallExpression	"call_old_error_handler ( error_num , error_filename , error_lineno , format , args )"		1993685	0					
ANR	1994625	Callee	call_old_error_handler		1993685	0					
ANR	1994626	Identifier	call_old_error_handler		1993685	0					
ANR	1994627	ArgumentList	error_num		1993685	1					
ANR	1994628	Argument	error_num		1993685	0					
ANR	1994629	Identifier	error_num		1993685	0					
ANR	1994630	Argument	error_filename		1993685	1					
ANR	1994631	Identifier	error_filename		1993685	0					
ANR	1994632	Argument	error_lineno		1993685	2					
ANR	1994633	Identifier	error_lineno		1993685	0					
ANR	1994634	Argument	format		1993685	3					
ANR	1994635	Identifier	format		1993685	0					
ANR	1994636	Argument	args		1993685	4					
ANR	1994637	Identifier	args		1993685	0					
ANR	1994638	Statement	zend_catch	2274:4:77626:77635	1993685	9	True				
ANR	1994639	CompoundStatement		148:15:4644:4644	1993685	10					
ANR	1994640	ExpressionStatement	CG ( in_compilation ) = _old_in_compilation	2275:3:77642:77682	1993685	0	True				
ANR	1994641	AssignmentExpression	CG ( in_compilation ) = _old_in_compilation		1993685	0		=			
ANR	1994642	CallExpression	CG ( in_compilation )		1993685	0					
ANR	1994643	Callee	CG		1993685	0					
ANR	1994644	Identifier	CG		1993685	0					
ANR	1994645	ArgumentList	in_compilation		1993685	1					
ANR	1994646	Argument	in_compilation		1993685	0					
ANR	1994647	Identifier	in_compilation		1993685	0					
ANR	1994648	Identifier	_old_in_compilation		1993685	1					
ANR	1994649	ExpressionStatement	EG ( current_execute_data ) = _old_current_execute_data	2276:3:77687:77739	1993685	1	True				
ANR	1994650	AssignmentExpression	EG ( current_execute_data ) = _old_current_execute_data		1993685	0		=			
ANR	1994651	CallExpression	EG ( current_execute_data )		1993685	0					
ANR	1994652	Callee	EG		1993685	0					
ANR	1994653	Identifier	EG		1993685	0					
ANR	1994654	ArgumentList	current_execute_data		1993685	1					
ANR	1994655	Argument	current_execute_data		1993685	0					
ANR	1994656	Identifier	current_execute_data		1993685	0					
ANR	1994657	Identifier	_old_current_execute_data		1993685	1					
ANR	1994658	IfStatement	if ( SG ( sapi_headers ) . http_status_line )		1993685	2					
ANR	1994659	Condition	SG ( sapi_headers ) . http_status_line	2277:7:77748:77780	1993685	0	True				
ANR	1994660	MemberAccess	SG ( sapi_headers ) . http_status_line		1993685	0					
ANR	1994661	CallExpression	SG ( sapi_headers )		1993685	0					
ANR	1994662	Callee	SG		1993685	0					
ANR	1994663	Identifier	SG		1993685	0					
ANR	1994664	ArgumentList	sapi_headers		1993685	1					
ANR	1994665	Argument	sapi_headers		1993685	0					
ANR	1994666	Identifier	sapi_headers		1993685	0					
ANR	1994667	Identifier	http_status_line		1993685	1					
ANR	1994668	CompoundStatement		151:42:4790:4790	1993685	1					
ANR	1994669	ExpressionStatement	efree ( SG ( sapi_headers ) . http_status_line )	2278:4:77789:77829	1993685	0	True				
ANR	1994670	CallExpression	efree ( SG ( sapi_headers ) . http_status_line )		1993685	0					
ANR	1994671	Callee	efree		1993685	0					
ANR	1994672	Identifier	efree		1993685	0					
ANR	1994673	ArgumentList	SG ( sapi_headers ) . http_status_line		1993685	1					
ANR	1994674	Argument	SG ( sapi_headers ) . http_status_line		1993685	0					
ANR	1994675	MemberAccess	SG ( sapi_headers ) . http_status_line		1993685	0					
ANR	1994676	CallExpression	SG ( sapi_headers )		1993685	0					
ANR	1994677	Callee	SG		1993685	0					
ANR	1994678	Identifier	SG		1993685	0					
ANR	1994679	ArgumentList	sapi_headers		1993685	1					
ANR	1994680	Argument	sapi_headers		1993685	0					
ANR	1994681	Identifier	sapi_headers		1993685	0					
ANR	1994682	Identifier	http_status_line		1993685	1					
ANR	1994683	ExpressionStatement	SG ( sapi_headers ) . http_status_line = _old_http_status_line	2280:3:77839:77896	1993685	3	True				
ANR	1994684	AssignmentExpression	SG ( sapi_headers ) . http_status_line = _old_http_status_line		1993685	0		=			
ANR	1994685	MemberAccess	SG ( sapi_headers ) . http_status_line		1993685	0					
ANR	1994686	CallExpression	SG ( sapi_headers )		1993685	0					
ANR	1994687	Callee	SG		1993685	0					
ANR	1994688	Identifier	SG		1993685	0					
ANR	1994689	ArgumentList	sapi_headers		1993685	1					
ANR	1994690	Argument	sapi_headers		1993685	0					
ANR	1994691	Identifier	sapi_headers		1993685	0					
ANR	1994692	Identifier	http_status_line		1993685	1					
ANR	1994693	Identifier	_old_http_status_line		1993685	1					
ANR	1994694	ExpressionStatement	SG ( sapi_headers ) . http_response_code = _old_http_response_code	2281:3:77901:77962	1993685	4	True				
ANR	1994695	AssignmentExpression	SG ( sapi_headers ) . http_response_code = _old_http_response_code		1993685	0		=			
ANR	1994696	MemberAccess	SG ( sapi_headers ) . http_response_code		1993685	0					
ANR	1994697	CallExpression	SG ( sapi_headers )		1993685	0					
ANR	1994698	Callee	SG		1993685	0					
ANR	1994699	Identifier	SG		1993685	0					
ANR	1994700	ArgumentList	sapi_headers		1993685	1					
ANR	1994701	Argument	sapi_headers		1993685	0					
ANR	1994702	Identifier	sapi_headers		1993685	0					
ANR	1994703	Identifier	http_response_code		1993685	1					
ANR	1994704	Identifier	_old_http_response_code		1993685	1					
ANR	1994705	ExpressionStatement	zend_end_try ( )	2282:4:77968:77982	1993685	11	True				
ANR	1994706	CallExpression	zend_end_try ( )		1993685	0					
ANR	1994707	Callee	zend_end_try		1993685	0					
ANR	1994708	Identifier	zend_end_try		1993685	0					
ANR	1994709	ArgumentList			1993685	1					
ANR	1994710	ExpressionStatement	PG ( display_errors ) = old	2283:2:77986:78010	1993685	12	True				
ANR	1994711	AssignmentExpression	PG ( display_errors ) = old		1993685	0		=			
ANR	1994712	CallExpression	PG ( display_errors )		1993685	0					
ANR	1994713	Callee	PG		1993685	0					
ANR	1994714	Identifier	PG		1993685	0					
ANR	1994715	ArgumentList	display_errors		1993685	1					
ANR	1994716	Argument	display_errors		1993685	0					
ANR	1994717	Identifier	display_errors		1993685	0					
ANR	1994718	Identifier	old		1993685	1					
ANR	1994719	IfStatement	if ( fault )		1993685	13					
ANR	1994720	Condition	fault	2285:6:78019:78023	1993685	0	True				
ANR	1994721	Identifier	fault		1993685	0					
ANR	1994722	CompoundStatement		159:13:5033:5033	1993685	1					
ANR	1994723	ExpressionStatement	"soap_server_fault_ex ( NULL , & fault_obj , NULL )"	2286:3:78031:78075	1993685	0	True				
ANR	1994724	CallExpression	"soap_server_fault_ex ( NULL , & fault_obj , NULL )"		1993685	0					
ANR	1994725	Callee	soap_server_fault_ex		1993685	0					
ANR	1994726	Identifier	soap_server_fault_ex		1993685	0					
ANR	1994727	ArgumentList	NULL		1993685	1					
ANR	1994728	Argument	NULL		1993685	0					
ANR	1994729	Identifier	NULL		1993685	0					
ANR	1994730	Argument	& fault_obj		1993685	1					
ANR	1994731	UnaryOperationExpression	& fault_obj		1993685	0					
ANR	1994732	UnaryOperator	&		1993685	0					
ANR	1994733	Identifier	fault_obj		1993685	1					
ANR	1994734	Argument	NULL		1993685	2					
ANR	1994735	Identifier	NULL		1993685	0					
ANR	1994736	ExpressionStatement	zend_bailout ( )	2287:3:78080:78094	1993685	1	True				
ANR	1994737	CallExpression	zend_bailout ( )		1993685	0					
ANR	1994738	Callee	zend_bailout		1993685	0					
ANR	1994739	Identifier	zend_bailout		1993685	0					
ANR	1994740	ArgumentList			1993685	1					
ANR	1994741	ReturnType	static void		1993685	1					
ANR	1994742	Identifier	soap_error_handler		1993685	2					
ANR	1994743	ParameterList	"int error_num , const char * error_filename , const uint error_lineno , const char * format , va_list args"		1993685	3					
ANR	1994744	Parameter	int error_num	2126:31:72890:72902	1993685	0	True				
ANR	1994745	ParameterType	int		1993685	0					
ANR	1994746	Identifier	error_num		1993685	1					
ANR	1994747	Parameter	const char * error_filename	2126:46:72905:72930	1993685	1	True				
ANR	1994748	ParameterType	const char *		1993685	0					
ANR	1994749	Identifier	error_filename		1993685	1					
ANR	1994750	Parameter	const uint error_lineno	2126:74:72933:72955	1993685	2	True				
ANR	1994751	ParameterType	const uint		1993685	0					
ANR	1994752	Identifier	error_lineno		1993685	1					
ANR	1994753	Parameter	const char * format	2126:99:72958:72975	1993685	3	True				
ANR	1994754	ParameterType	const char *		1993685	0					
ANR	1994755	Identifier	format		1993685	1					
ANR	1994756	Parameter	va_list args	2126:119:72978:72989	1993685	4	True				
ANR	1994757	ParameterType	va_list		1993685	0					
ANR	1994758	Identifier	args		1993685	1					
ANR	1994759	CFGEntryNode	ENTRY		1993685		True				
ANR	1994760	CFGExitNode	EXIT		1993685		True				
ANR	1994761	Symbol	vslprintf		1993685						
ANR	1994762	Symbol	_old_http_response_code		1993685						
ANR	1994763	Symbol	SG ( sapi_headers ) . http_response_code		1993685						
ANR	1994764	Symbol	error_lineno		1993685						
ANR	1994765	Symbol	current_execute_data		1993685						
ANR	1994766	Symbol	E_COMPILE_ERROR		1993685						
ANR	1994767	Symbol	Z_LVAL		1993685						
ANR	1994768	Symbol	SG ( sapi_headers ) . http_status_line		1993685						
ANR	1994769	Symbol	sapi_headers		1993685						
ANR	1994770	Symbol	_old_in_compilation		1993685						
ANR	1994771	Symbol	EG ( objects_store ) . object_buckets		1993685						
ANR	1994772	Symbol	service -> send_errors		1993685						
ANR	1994773	Symbol	tmp		1993685						
ANR	1994774	Symbol	zend_fetch_resource_ex		1993685						
ANR	1994775	Symbol	php_output_get_length		1993685						
ANR	1994776	Symbol	buffer		1993685						
ANR	1994777	Symbol	* service		1993685						
ANR	1994778	Symbol	strcmp		1993685						
ANR	1994779	Symbol	le_service		1993685						
ANR	1994780	Symbol	EG		1993685						
ANR	1994781	Symbol	NULL		1993685						
ANR	1994782	Symbol	old		1993685						
ANR	1994783	Symbol	format		1993685						
ANR	1994784	Symbol	E_PARSE		1993685						
ANR	1994785	Symbol	& fault_obj		1993685						
ANR	1994786	Symbol	SOAP_GLOBAL		1993685						
ANR	1994787	Symbol	error_filename		1993685						
ANR	1994788	Symbol	buffer_len		1993685						
ANR	1994789	Symbol	error_code		1993685						
ANR	1994790	Symbol	& fault		1993685						
ANR	1994791	Symbol	instanceof_function		1993685						
ANR	1994792	Symbol	_old_http_status_line		1993685						
ANR	1994793	Symbol	code		1993685						
ANR	1994794	Symbol	in_compilation		1993685						
ANR	1994795	Symbol	Z_OBJCE		1993685						
ANR	1994796	Symbol	display_errors		1993685						
ANR	1994797	Symbol	Z_OBJ		1993685						
ANR	1994798	Symbol	error_object		1993685						
ANR	1994799	Symbol	zend_hash_str_find		1993685						
ANR	1994800	Symbol	SG		1993685						
ANR	1994801	Symbol	argcopy		1993685						
ANR	1994802	Symbol	outbuflen		1993685						
ANR	1994803	Symbol	Z_OBJPROP		1993685						
ANR	1994804	Symbol	E_CORE_ERROR		1993685						
ANR	1994805	Symbol	soap_server_class_entry		1993685						
ANR	1994806	Symbol	& outbuf		1993685						
ANR	1994807	Symbol	IS_FALSE		1993685						
ANR	1994808	Symbol	* buffer		1993685						
ANR	1994809	Symbol	CG		1993685						
ANR	1994810	Symbol	error_num		1993685						
ANR	1994811	Symbol	objects_store		1993685						
ANR	1994812	Symbol	fault		1993685						
ANR	1994813	Symbol	use_exceptions		1993685						
ANR	1994814	Symbol	Z_TYPE_P		1993685						
ANR	1994815	Symbol	use_soap_error_handler		1993685						
ANR	1994816	Symbol	FAILURE		1993685						
ANR	1994817	Symbol	args		1993685						
ANR	1994818	Symbol	fault_obj		1993685						
ANR	1994819	Symbol	_old_current_execute_data		1993685						
ANR	1994820	Symbol	& outbuflen		1993685						
ANR	1994821	Symbol	E_ERROR		1993685						
ANR	1994822	Symbol	outbuf		1993685						
ANR	1994823	Symbol	service		1993685						
ANR	1994824	Symbol	soap_class_entry		1993685						
ANR	1994825	Symbol	PG		1993685						
ANR	1994826	Symbol	old_objects		1993685						
ANR	1994827	Symbol	& SOAP_GLOBAL		1993685						
ANR	1994828	Symbol	E_USER_ERROR		1993685						
ANR	1994829	DeclStmt									
ANR	1994830	Decl							zend_bool	zend_bool	handler
ANR	1994831	DeclStmt									
ANR	1994832	Decl							zval	zval *	fault
ANR	1994833	DeclStmt									
ANR	1994834	Decl							zval	zval *	wsdl
ANR	1994835	Decl							zval	zval *	options
ANR	1994836	DeclStmt									
ANR	1994837	Decl							int	int	soap_version
ANR	1994838	DeclStmt									
ANR	1994839	Decl							php_stream_context	php_stream_context *	context
ANR	1994840	DeclStmt									
ANR	1994841	Decl							zend_long	zend_long	cache_wsdl
ANR	1994842	DeclStmt									
ANR	1994843	Decl							sdlPtr	sdlPtr	sdl
ANR	1994844	DeclStmt									
ANR	1994845	Decl							HashTable	HashTable *	typemap_ht
ANR	1994846	DeclStmt									
ANR	1994847	Decl							zval	zval *	this_ptr
ANR	1994848	DeclStmt									
ANR	1994849	Decl							HashTable	HashTable *	ht
ANR	1994850	DeclStmt									
ANR	1994851	Decl							zval	zval *	tmp
ANR	1994852	Decl							zval	zval	tmp2
ANR	1994853	DeclStmt									
ANR	1994854	Decl							xmlCharEncodingHandlerPtr	xmlCharEncodingHandlerPtr	encoding
ANR	1994855	DeclStmt									
ANR	1994856	Decl							int	int	old_soap_version
ANR	1994857	DeclStmt									
ANR	1994858	Decl							zend_resource	zend_resource *	res
ANR	1994859	DeclStmt									
ANR	1994860	Decl							HashTable	HashTable *	typemap
ANR	1994861	DeclStmt									
ANR	1994862	Decl							zend_resource	zend_resource *	res
ANR	1994863	Function	do_request	2546:0:87212:90007							
ANR	1994864	FunctionDef	"do_request (zval * this_ptr , xmlDoc * request , char * location , char * action , int version , int one_way , zval * response)"		1994863	0					
ANR	1994865	CompoundStatement		2547:0:87339:90007	1994863	0					
ANR	1994866	IdentifierDeclStatement	int ret = TRUE ;	2548:1:87342:87359	1994863	0	True				
ANR	1994867	IdentifierDecl	ret = TRUE		1994863	0					
ANR	1994868	IdentifierDeclType	int		1994863	0					
ANR	1994869	Identifier	ret		1994863	1					
ANR	1994870	AssignmentExpression	ret = TRUE		1994863	2		=			
ANR	1994871	Identifier	TRUE		1994863	0					
ANR	1994872	Identifier	TRUE		1994863	1					
ANR	1994873	IdentifierDeclStatement	char * buf ;	2549:1:87362:87372	1994863	1	True				
ANR	1994874	IdentifierDecl	* buf		1994863	0					
ANR	1994875	IdentifierDeclType	char *		1994863	0					
ANR	1994876	Identifier	buf		1994863	1					
ANR	1994877	IdentifierDeclStatement	int buf_size ;	2550:1:87375:87390	1994863	2	True				
ANR	1994878	IdentifierDecl	buf_size		1994863	0					
ANR	1994879	IdentifierDeclType	int		1994863	0					
ANR	1994880	Identifier	buf_size		1994863	1					
ANR	1994881	IdentifierDeclStatement	zval func ;	2551:1:87393:87404	1994863	3	True				
ANR	1994882	IdentifierDecl	func		1994863	0					
ANR	1994883	IdentifierDeclType	zval		1994863	0					
ANR	1994884	Identifier	func		1994863	1					
ANR	1994885	IdentifierDeclStatement	zval params [ 5 ] ;	2552:1:87407:87422	1994863	4	True				
ANR	1994886	IdentifierDecl	params [ 5 ]		1994863	0					
ANR	1994887	IdentifierDeclType	zval [ 5 ]		1994863	0					
ANR	1994888	Identifier	params		1994863	1					
ANR	1994889	PrimaryExpression	5		1994863	2					
ANR	1994890	IdentifierDeclStatement	zval * trace ;	2553:1:87425:87437	1994863	5	True				
ANR	1994891	IdentifierDecl	* trace		1994863	0					
ANR	1994892	IdentifierDeclType	zval *		1994863	0					
ANR	1994893	Identifier	trace		1994863	1					
ANR	1994894	IdentifierDeclStatement	zval * fault ;	2554:1:87440:87452	1994863	6	True				
ANR	1994895	IdentifierDecl	* fault		1994863	0					
ANR	1994896	IdentifierDeclType	zval *		1994863	0					
ANR	1994897	Identifier	fault		1994863	1					
ANR	1994898	IdentifierDeclStatement	int _bailout = 0 ;	2555:1:87455:87474	1994863	7	True				
ANR	1994899	IdentifierDecl	_bailout = 0		1994863	0					
ANR	1994900	IdentifierDeclType	int		1994863	0					
ANR	1994901	Identifier	_bailout		1994863	1					
ANR	1994902	AssignmentExpression	_bailout = 0		1994863	2		=			
ANR	1994903	Identifier	_bailout		1994863	0					
ANR	1994904	PrimaryExpression	0		1994863	1					
ANR	1994905	ExpressionStatement	ZVAL_NULL ( response )	2557:1:87478:87497	1994863	8	True				
ANR	1994906	CallExpression	ZVAL_NULL ( response )		1994863	0					
ANR	1994907	Callee	ZVAL_NULL		1994863	0					
ANR	1994908	Identifier	ZVAL_NULL		1994863	0					
ANR	1994909	ArgumentList	response		1994863	1					
ANR	1994910	Argument	response		1994863	0					
ANR	1994911	Identifier	response		1994863	0					
ANR	1994912	ExpressionStatement	"xmlDocDumpMemory ( request , ( xmlChar * * ) & buf , & buf_size )"	2559:1:87501:87554	1994863	9	True				
ANR	1994913	CallExpression	"xmlDocDumpMemory ( request , ( xmlChar * * ) & buf , & buf_size )"		1994863	0					
ANR	1994914	Callee	xmlDocDumpMemory		1994863	0					
ANR	1994915	Identifier	xmlDocDumpMemory		1994863	0					
ANR	1994916	ArgumentList	request		1994863	1					
ANR	1994917	Argument	request		1994863	0					
ANR	1994918	Identifier	request		1994863	0					
ANR	1994919	Argument	( xmlChar * * ) & buf		1994863	1					
ANR	1994920	CastExpression	( xmlChar * * ) & buf		1994863	0					
ANR	1994921	CastTarget	xmlChar * *		1994863	0					
ANR	1994922	UnaryOperationExpression	& buf		1994863	1					
ANR	1994923	UnaryOperator	&		1994863	0					
ANR	1994924	Identifier	buf		1994863	1					
ANR	1994925	Argument	& buf_size		1994863	2					
ANR	1994926	UnaryOperationExpression	& buf_size		1994863	0					
ANR	1994927	UnaryOperator	&		1994863	0					
ANR	1994928	Identifier	buf_size		1994863	1					
ANR	1994929	IfStatement	if ( ! buf )		1994863	10					
ANR	1994930	Condition	! buf	2560:5:87561:87564	1994863	0	True				
ANR	1994931	UnaryOperationExpression	! buf		1994863	0					
ANR	1994932	UnaryOperator	!		1994863	0					
ANR	1994933	Identifier	buf		1994863	1					
ANR	1994934	CompoundStatement		14:11:227:227	1994863	1					
ANR	1994935	ExpressionStatement	"add_soap_fault ( this_ptr , ""HTTP"" , ""Error build soap request"" , NULL , NULL )"	2561:2:87571:87643	1994863	0	True				
ANR	1994936	CallExpression	"add_soap_fault ( this_ptr , ""HTTP"" , ""Error build soap request"" , NULL , NULL )"		1994863	0					
ANR	1994937	Callee	add_soap_fault		1994863	0					
ANR	1994938	Identifier	add_soap_fault		1994863	0					
ANR	1994939	ArgumentList	this_ptr		1994863	1					
ANR	1994940	Argument	this_ptr		1994863	0					
ANR	1994941	Identifier	this_ptr		1994863	0					
ANR	1994942	Argument	"""HTTP"""		1994863	1					
ANR	1994943	PrimaryExpression	"""HTTP"""		1994863	0					
ANR	1994944	Argument	"""Error build soap request"""		1994863	2					
ANR	1994945	PrimaryExpression	"""Error build soap request"""		1994863	0					
ANR	1994946	Argument	NULL		1994863	3					
ANR	1994947	Identifier	NULL		1994863	0					
ANR	1994948	Argument	NULL		1994863	4					
ANR	1994949	Identifier	NULL		1994863	0					
ANR	1994950	ReturnStatement	return FALSE ;	2562:2:87647:87659	1994863	1	True				
ANR	1994951	Identifier	FALSE		1994863	0					
ANR	1994952	Statement	zend_try	2565:1:87666:87673	1994863	11	True				
ANR	1994953	CompoundStatement		19:10:335:335	1994863	12					
ANR	1994954	IfStatement	"if ( ( trace = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""trace"" , sizeof ( ""trace"" ) - 1 ) ) != NULL && ( Z_TYPE_P ( trace ) == IS_TRUE || ( Z_TYPE_P ( trace ) == IS_LONG && Z_LVAL_P ( trace ) != 0 ) ) )"		1994863	0					
ANR	1994955	Condition	"( trace = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""trace"" , sizeof ( ""trace"" ) - 1 ) ) != NULL && ( Z_TYPE_P ( trace ) == IS_TRUE || ( Z_TYPE_P ( trace ) == IS_LONG && Z_LVAL_P ( trace ) != 0 ) )"	2566:6:87683:87863	1994863	0	True				
ANR	1994956	AndExpression	"( trace = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""trace"" , sizeof ( ""trace"" ) - 1 ) ) != NULL && ( Z_TYPE_P ( trace ) == IS_TRUE || ( Z_TYPE_P ( trace ) == IS_LONG && Z_LVAL_P ( trace ) != 0 ) )"		1994863	0		&&			
ANR	1994957	EqualityExpression	"( trace = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""trace"" , sizeof ( ""trace"" ) - 1 ) ) != NULL"		1994863	0		!=			
ANR	1994958	AssignmentExpression	"trace = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""trace"" , sizeof ( ""trace"" ) - 1 )"		1994863	0		=			
ANR	1994959	Identifier	trace		1994863	0					
ANR	1994960	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""trace"" , sizeof ( ""trace"" ) - 1 )"		1994863	1					
ANR	1994961	Callee	zend_hash_str_find		1994863	0					
ANR	1994962	Identifier	zend_hash_str_find		1994863	0					
ANR	1994963	ArgumentList	Z_OBJPROP_P ( this_ptr )		1994863	1					
ANR	1994964	Argument	Z_OBJPROP_P ( this_ptr )		1994863	0					
ANR	1994965	CallExpression	Z_OBJPROP_P ( this_ptr )		1994863	0					
ANR	1994966	Callee	Z_OBJPROP_P		1994863	0					
ANR	1994967	Identifier	Z_OBJPROP_P		1994863	0					
ANR	1994968	ArgumentList	this_ptr		1994863	1					
ANR	1994969	Argument	this_ptr		1994863	0					
ANR	1994970	Identifier	this_ptr		1994863	0					
ANR	1994971	Argument	"""trace"""		1994863	1					
ANR	1994972	PrimaryExpression	"""trace"""		1994863	0					
ANR	1994973	Argument	"sizeof ( ""trace"" ) - 1"		1994863	2					
ANR	1994974	AdditiveExpression	"sizeof ( ""trace"" ) - 1"		1994863	0		-			
ANR	1994975	SizeofExpression	"sizeof ( ""trace"" )"		1994863	0					
ANR	1994976	Sizeof	sizeof		1994863	0					
ANR	1994977	PrimaryExpression	"""trace"""		1994863	1					
ANR	1994978	PrimaryExpression	1		1994863	1					
ANR	1994979	Identifier	NULL		1994863	1					
ANR	1994980	OrExpression	Z_TYPE_P ( trace ) == IS_TRUE || ( Z_TYPE_P ( trace ) == IS_LONG && Z_LVAL_P ( trace ) != 0 )		1994863	1		||			
ANR	1994981	EqualityExpression	Z_TYPE_P ( trace ) == IS_TRUE		1994863	0		==			
ANR	1994982	CallExpression	Z_TYPE_P ( trace )		1994863	0					
ANR	1994983	Callee	Z_TYPE_P		1994863	0					
ANR	1994984	Identifier	Z_TYPE_P		1994863	0					
ANR	1994985	ArgumentList	trace		1994863	1					
ANR	1994986	Argument	trace		1994863	0					
ANR	1994987	Identifier	trace		1994863	0					
ANR	1994988	Identifier	IS_TRUE		1994863	1					
ANR	1994989	AndExpression	Z_TYPE_P ( trace ) == IS_LONG && Z_LVAL_P ( trace ) != 0		1994863	1		&&			
ANR	1994990	EqualityExpression	Z_TYPE_P ( trace ) == IS_LONG		1994863	0		==			
ANR	1994991	CallExpression	Z_TYPE_P ( trace )		1994863	0					
ANR	1994992	Callee	Z_TYPE_P		1994863	0					
ANR	1994993	Identifier	Z_TYPE_P		1994863	0					
ANR	1994994	ArgumentList	trace		1994863	1					
ANR	1994995	Argument	trace		1994863	0					
ANR	1994996	Identifier	trace		1994863	0					
ANR	1994997	Identifier	IS_LONG		1994863	1					
ANR	1994998	EqualityExpression	Z_LVAL_P ( trace ) != 0		1994863	1		!=			
ANR	1994999	CallExpression	Z_LVAL_P ( trace )		1994863	0					
ANR	1995000	Callee	Z_LVAL_P		1994863	0					
ANR	1995001	Identifier	Z_LVAL_P		1994863	0					
ANR	1995002	ArgumentList	trace		1994863	1					
ANR	1995003	Argument	trace		1994863	0					
ANR	1995004	Identifier	trace		1994863	0					
ANR	1995005	PrimaryExpression	0		1994863	1					
ANR	1995006	CompoundStatement		21:92:526:526	1994863	1					
ANR	1995007	ExpressionStatement	"add_property_stringl ( this_ptr , ""__last_request"" , buf , buf_size )"	2568:3:87871:87934	1994863	0	True				
ANR	1995008	CallExpression	"add_property_stringl ( this_ptr , ""__last_request"" , buf , buf_size )"		1994863	0					
ANR	1995009	Callee	add_property_stringl		1994863	0					
ANR	1995010	Identifier	add_property_stringl		1994863	0					
ANR	1995011	ArgumentList	this_ptr		1994863	1					
ANR	1995012	Argument	this_ptr		1994863	0					
ANR	1995013	Identifier	this_ptr		1994863	0					
ANR	1995014	Argument	"""__last_request"""		1994863	1					
ANR	1995015	PrimaryExpression	"""__last_request"""		1994863	0					
ANR	1995016	Argument	buf		1994863	2					
ANR	1995017	Identifier	buf		1994863	0					
ANR	1995018	Argument	buf_size		1994863	3					
ANR	1995019	Identifier	buf_size		1994863	0					
ANR	1995020	ExpressionStatement	"ZVAL_STRINGL ( & func , ""__doRequest"" , sizeof ( ""__doRequest"" ) - 1 )"	2571:2:87943:88000	1994863	1	True				
ANR	1995021	CallExpression	"ZVAL_STRINGL ( & func , ""__doRequest"" , sizeof ( ""__doRequest"" ) - 1 )"		1994863	0					
ANR	1995022	Callee	ZVAL_STRINGL		1994863	0					
ANR	1995023	Identifier	ZVAL_STRINGL		1994863	0					
ANR	1995024	ArgumentList	& func		1994863	1					
ANR	1995025	Argument	& func		1994863	0					
ANR	1995026	UnaryOperationExpression	& func		1994863	0					
ANR	1995027	UnaryOperator	&		1994863	0					
ANR	1995028	Identifier	func		1994863	1					
ANR	1995029	Argument	"""__doRequest"""		1994863	1					
ANR	1995030	PrimaryExpression	"""__doRequest"""		1994863	0					
ANR	1995031	Argument	"sizeof ( ""__doRequest"" ) - 1"		1994863	2					
ANR	1995032	AdditiveExpression	"sizeof ( ""__doRequest"" ) - 1"		1994863	0		-			
ANR	1995033	SizeofExpression	"sizeof ( ""__doRequest"" )"		1994863	0					
ANR	1995034	Sizeof	sizeof		1994863	0					
ANR	1995035	PrimaryExpression	"""__doRequest"""		1994863	1					
ANR	1995036	PrimaryExpression	1		1994863	1					
ANR	1995037	ExpressionStatement	"ZVAL_STRINGL ( & params [ 0 ] , buf , buf_size )"	2572:2:88004:88043	1994863	2	True				
ANR	1995038	CallExpression	"ZVAL_STRINGL ( & params [ 0 ] , buf , buf_size )"		1994863	0					
ANR	1995039	Callee	ZVAL_STRINGL		1994863	0					
ANR	1995040	Identifier	ZVAL_STRINGL		1994863	0					
ANR	1995041	ArgumentList	& params [ 0 ]		1994863	1					
ANR	1995042	Argument	& params [ 0 ]		1994863	0					
ANR	1995043	UnaryOperationExpression	& params [ 0 ]		1994863	0					
ANR	1995044	UnaryOperator	&		1994863	0					
ANR	1995045	ArrayIndexing	params [ 0 ]		1994863	1					
ANR	1995046	Identifier	params		1994863	0					
ANR	1995047	PrimaryExpression	0		1994863	1					
ANR	1995048	Argument	buf		1994863	1					
ANR	1995049	Identifier	buf		1994863	0					
ANR	1995050	Argument	buf_size		1994863	2					
ANR	1995051	Identifier	buf_size		1994863	0					
ANR	1995052	IfStatement	if ( location == NULL )		1994863	3					
ANR	1995053	Condition	location == NULL	2573:6:88051:88066	1994863	0	True				
ANR	1995054	EqualityExpression	location == NULL		1994863	0		==			
ANR	1995055	Identifier	location		1994863	0					
ANR	1995056	Identifier	NULL		1994863	1					
ANR	1995057	CompoundStatement		27:24:729:729	1994863	1					
ANR	1995058	ExpressionStatement	ZVAL_NULL ( & params [ 1 ] )	2574:3:88074:88095	1994863	0	True				
ANR	1995059	CallExpression	ZVAL_NULL ( & params [ 1 ] )		1994863	0					
ANR	1995060	Callee	ZVAL_NULL		1994863	0					
ANR	1995061	Identifier	ZVAL_NULL		1994863	0					
ANR	1995062	ArgumentList	& params [ 1 ]		1994863	1					
ANR	1995063	Argument	& params [ 1 ]		1994863	0					
ANR	1995064	UnaryOperationExpression	& params [ 1 ]		1994863	0					
ANR	1995065	UnaryOperator	&		1994863	0					
ANR	1995066	ArrayIndexing	params [ 1 ]		1994863	1					
ANR	1995067	Identifier	params		1994863	0					
ANR	1995068	PrimaryExpression	1		1994863	1					
ANR	1995069	ElseStatement	else		1994863	0					
ANR	1995070	CompoundStatement		29:9:766:766	1994863	0					
ANR	1995071	ExpressionStatement	"ZVAL_STRING ( & params [ 1 ] , location )"	2576:3:88111:88144	1994863	0	True				
ANR	1995072	CallExpression	"ZVAL_STRING ( & params [ 1 ] , location )"		1994863	0					
ANR	1995073	Callee	ZVAL_STRING		1994863	0					
ANR	1995074	Identifier	ZVAL_STRING		1994863	0					
ANR	1995075	ArgumentList	& params [ 1 ]		1994863	1					
ANR	1995076	Argument	& params [ 1 ]		1994863	0					
ANR	1995077	UnaryOperationExpression	& params [ 1 ]		1994863	0					
ANR	1995078	UnaryOperator	&		1994863	0					
ANR	1995079	ArrayIndexing	params [ 1 ]		1994863	1					
ANR	1995080	Identifier	params		1994863	0					
ANR	1995081	PrimaryExpression	1		1994863	1					
ANR	1995082	Argument	location		1994863	1					
ANR	1995083	Identifier	location		1994863	0					
ANR	1995084	IfStatement	if ( action == NULL )		1994863	4					
ANR	1995085	Condition	action == NULL	2578:6:88156:88169	1994863	0	True				
ANR	1995086	EqualityExpression	action == NULL		1994863	0		==			
ANR	1995087	Identifier	action		1994863	0					
ANR	1995088	Identifier	NULL		1994863	1					
ANR	1995089	CompoundStatement		32:22:832:832	1994863	1					
ANR	1995090	ExpressionStatement	ZVAL_NULL ( & params [ 2 ] )	2579:3:88177:88198	1994863	0	True				
ANR	1995091	CallExpression	ZVAL_NULL ( & params [ 2 ] )		1994863	0					
ANR	1995092	Callee	ZVAL_NULL		1994863	0					
ANR	1995093	Identifier	ZVAL_NULL		1994863	0					
ANR	1995094	ArgumentList	& params [ 2 ]		1994863	1					
ANR	1995095	Argument	& params [ 2 ]		1994863	0					
ANR	1995096	UnaryOperationExpression	& params [ 2 ]		1994863	0					
ANR	1995097	UnaryOperator	&		1994863	0					
ANR	1995098	ArrayIndexing	params [ 2 ]		1994863	1					
ANR	1995099	Identifier	params		1994863	0					
ANR	1995100	PrimaryExpression	2		1994863	1					
ANR	1995101	ElseStatement	else		1994863	0					
ANR	1995102	CompoundStatement		34:9:869:869	1994863	0					
ANR	1995103	ExpressionStatement	"ZVAL_STRING ( & params [ 2 ] , action )"	2581:3:88214:88245	1994863	0	True				
ANR	1995104	CallExpression	"ZVAL_STRING ( & params [ 2 ] , action )"		1994863	0					
ANR	1995105	Callee	ZVAL_STRING		1994863	0					
ANR	1995106	Identifier	ZVAL_STRING		1994863	0					
ANR	1995107	ArgumentList	& params [ 2 ]		1994863	1					
ANR	1995108	Argument	& params [ 2 ]		1994863	0					
ANR	1995109	UnaryOperationExpression	& params [ 2 ]		1994863	0					
ANR	1995110	UnaryOperator	&		1994863	0					
ANR	1995111	ArrayIndexing	params [ 2 ]		1994863	1					
ANR	1995112	Identifier	params		1994863	0					
ANR	1995113	PrimaryExpression	2		1994863	1					
ANR	1995114	Argument	action		1994863	1					
ANR	1995115	Identifier	action		1994863	0					
ANR	1995116	ExpressionStatement	"ZVAL_LONG ( & params [ 3 ] , version )"	2583:2:88253:88283	1994863	5	True				
ANR	1995117	CallExpression	"ZVAL_LONG ( & params [ 3 ] , version )"		1994863	0					
ANR	1995118	Callee	ZVAL_LONG		1994863	0					
ANR	1995119	Identifier	ZVAL_LONG		1994863	0					
ANR	1995120	ArgumentList	& params [ 3 ]		1994863	1					
ANR	1995121	Argument	& params [ 3 ]		1994863	0					
ANR	1995122	UnaryOperationExpression	& params [ 3 ]		1994863	0					
ANR	1995123	UnaryOperator	&		1994863	0					
ANR	1995124	ArrayIndexing	params [ 3 ]		1994863	1					
ANR	1995125	Identifier	params		1994863	0					
ANR	1995126	PrimaryExpression	3		1994863	1					
ANR	1995127	Argument	version		1994863	1					
ANR	1995128	Identifier	version		1994863	0					
ANR	1995129	ExpressionStatement	"ZVAL_LONG ( & params [ 4 ] , one_way )"	2584:2:88287:88317	1994863	6	True				
ANR	1995130	CallExpression	"ZVAL_LONG ( & params [ 4 ] , one_way )"		1994863	0					
ANR	1995131	Callee	ZVAL_LONG		1994863	0					
ANR	1995132	Identifier	ZVAL_LONG		1994863	0					
ANR	1995133	ArgumentList	& params [ 4 ]		1994863	1					
ANR	1995134	Argument	& params [ 4 ]		1994863	0					
ANR	1995135	UnaryOperationExpression	& params [ 4 ]		1994863	0					
ANR	1995136	UnaryOperator	&		1994863	0					
ANR	1995137	ArrayIndexing	params [ 4 ]		1994863	1					
ANR	1995138	Identifier	params		1994863	0					
ANR	1995139	PrimaryExpression	4		1994863	1					
ANR	1995140	Argument	one_way		1994863	1					
ANR	1995141	Identifier	one_way		1994863	0					
ANR	1995142	IfStatement	"if ( call_user_function ( NULL , this_ptr , & func , response , 5 , params ) != SUCCESS )"		1994863	7					
ANR	1995143	Condition	"call_user_function ( NULL , this_ptr , & func , response , 5 , params ) != SUCCESS"	2586:6:88326:88398	1994863	0	True				
ANR	1995144	EqualityExpression	"call_user_function ( NULL , this_ptr , & func , response , 5 , params ) != SUCCESS"		1994863	0		!=			
ANR	1995145	CallExpression	"call_user_function ( NULL , this_ptr , & func , response , 5 , params )"		1994863	0					
ANR	1995146	Callee	call_user_function		1994863	0					
ANR	1995147	Identifier	call_user_function		1994863	0					
ANR	1995148	ArgumentList	NULL		1994863	1					
ANR	1995149	Argument	NULL		1994863	0					
ANR	1995150	Identifier	NULL		1994863	0					
ANR	1995151	Argument	this_ptr		1994863	1					
ANR	1995152	Identifier	this_ptr		1994863	0					
ANR	1995153	Argument	& func		1994863	2					
ANR	1995154	UnaryOperationExpression	& func		1994863	0					
ANR	1995155	UnaryOperator	&		1994863	0					
ANR	1995156	Identifier	func		1994863	1					
ANR	1995157	Argument	response		1994863	3					
ANR	1995158	Identifier	response		1994863	0					
ANR	1995159	Argument	5		1994863	4					
ANR	1995160	PrimaryExpression	5		1994863	0					
ANR	1995161	Argument	params		1994863	5					
ANR	1995162	Identifier	params		1994863	0					
ANR	1995163	Identifier	SUCCESS		1994863	1					
ANR	1995164	CompoundStatement		40:81:1061:1061	1994863	1					
ANR	1995165	ExpressionStatement	"add_soap_fault ( this_ptr , ""Client"" , ""SoapClient::__doRequest() failed"" , NULL , NULL )"	2587:3:88406:88488	1994863	0	True				
ANR	1995166	CallExpression	"add_soap_fault ( this_ptr , ""Client"" , ""SoapClient::__doRequest() failed"" , NULL , NULL )"		1994863	0					
ANR	1995167	Callee	add_soap_fault		1994863	0					
ANR	1995168	Identifier	add_soap_fault		1994863	0					
ANR	1995169	ArgumentList	this_ptr		1994863	1					
ANR	1995170	Argument	this_ptr		1994863	0					
ANR	1995171	Identifier	this_ptr		1994863	0					
ANR	1995172	Argument	"""Client"""		1994863	1					
ANR	1995173	PrimaryExpression	"""Client"""		1994863	0					
ANR	1995174	Argument	"""SoapClient::__doRequest() failed"""		1994863	2					
ANR	1995175	PrimaryExpression	"""SoapClient::__doRequest() failed"""		1994863	0					
ANR	1995176	Argument	NULL		1994863	3					
ANR	1995177	Identifier	NULL		1994863	0					
ANR	1995178	Argument	NULL		1994863	4					
ANR	1995179	Identifier	NULL		1994863	0					
ANR	1995180	ExpressionStatement	ret = FALSE	2588:3:88493:88504	1994863	1	True				
ANR	1995181	AssignmentExpression	ret = FALSE		1994863	0		=			
ANR	1995182	Identifier	ret		1994863	0					
ANR	1995183	Identifier	FALSE		1994863	1					
ANR	1995184	ElseStatement	else		1994863	0					
ANR	1995185	IfStatement	if ( Z_TYPE_P ( response ) != IS_STRING )		1994863	0					
ANR	1995186	Condition	Z_TYPE_P ( response ) != IS_STRING	2589:13:88519:88549	1994863	0	True				
ANR	1995187	EqualityExpression	Z_TYPE_P ( response ) != IS_STRING		1994863	0		!=			
ANR	1995188	CallExpression	Z_TYPE_P ( response )		1994863	0					
ANR	1995189	Callee	Z_TYPE_P		1994863	0					
ANR	1995190	Identifier	Z_TYPE_P		1994863	0					
ANR	1995191	ArgumentList	response		1994863	1					
ANR	1995192	Argument	response		1994863	0					
ANR	1995193	Identifier	response		1994863	0					
ANR	1995194	Identifier	IS_STRING		1994863	1					
ANR	1995195	CompoundStatement		43:46:1212:1212	1994863	1					
ANR	1995196	IfStatement	"if ( EG ( exception ) && instanceof_function ( EG ( exception ) -> ce , zend_ce_error ) )"		1994863	0					
ANR	1995197	Condition	"EG ( exception ) && instanceof_function ( EG ( exception ) -> ce , zend_ce_error )"	2590:7:88561:88630	1994863	0	True				
ANR	1995198	AndExpression	"EG ( exception ) && instanceof_function ( EG ( exception ) -> ce , zend_ce_error )"		1994863	0		&&			
ANR	1995199	CallExpression	EG ( exception )		1994863	0					
ANR	1995200	Callee	EG		1994863	0					
ANR	1995201	Identifier	EG		1994863	0					
ANR	1995202	ArgumentList	exception		1994863	1					
ANR	1995203	Argument	exception		1994863	0					
ANR	1995204	Identifier	exception		1994863	0					
ANR	1995205	CallExpression	"instanceof_function ( EG ( exception ) -> ce , zend_ce_error )"		1994863	1					
ANR	1995206	Callee	instanceof_function		1994863	0					
ANR	1995207	Identifier	instanceof_function		1994863	0					
ANR	1995208	ArgumentList	EG ( exception ) -> ce		1994863	1					
ANR	1995209	Argument	EG ( exception ) -> ce		1994863	0					
ANR	1995210	PtrMemberAccess	EG ( exception ) -> ce		1994863	0					
ANR	1995211	CallExpression	EG ( exception )		1994863	0					
ANR	1995212	Callee	EG		1994863	0					
ANR	1995213	Identifier	EG		1994863	0					
ANR	1995214	ArgumentList	exception		1994863	1					
ANR	1995215	Argument	exception		1994863	0					
ANR	1995216	Identifier	exception		1994863	0					
ANR	1995217	Identifier	ce		1994863	1					
ANR	1995218	Argument	zend_ce_error		1994863	1					
ANR	1995219	Identifier	zend_ce_error		1994863	0					
ANR	1995220	CompoundStatement		47:4:1334:1355	1994863	1					
ANR	1995221	IdentifierDeclStatement	zval rv ;	2591:4:88639:88646	1994863	0	True				
ANR	1995222	IdentifierDecl	rv		1994863	0					
ANR	1995223	IdentifierDeclType	zval		1994863	0					
ANR	1995224	Identifier	rv		1994863	1					
ANR	1995225	IdentifierDeclStatement	zend_string * msg ;	2592:4:88652:88668	1994863	1	True				
ANR	1995226	IdentifierDecl	* msg		1994863	0					
ANR	1995227	IdentifierDeclType	zend_string *		1994863	0					
ANR	1995228	Identifier	msg		1994863	1					
ANR	1995229	IdentifierDeclStatement	zval exception_object ;	2593:4:88674:88695	1994863	2	True				
ANR	1995230	IdentifierDecl	exception_object		1994863	0					
ANR	1995231	IdentifierDeclType	zval		1994863	0					
ANR	1995232	Identifier	exception_object		1994863	1					
ANR	1995233	ExpressionStatement	"ZVAL_OBJ ( & exception_object , EG ( exception ) )"	2595:4:88702:88744	1994863	3	True				
ANR	1995234	CallExpression	"ZVAL_OBJ ( & exception_object , EG ( exception ) )"		1994863	0					
ANR	1995235	Callee	ZVAL_OBJ		1994863	0					
ANR	1995236	Identifier	ZVAL_OBJ		1994863	0					
ANR	1995237	ArgumentList	& exception_object		1994863	1					
ANR	1995238	Argument	& exception_object		1994863	0					
ANR	1995239	UnaryOperationExpression	& exception_object		1994863	0					
ANR	1995240	UnaryOperator	&		1994863	0					
ANR	1995241	Identifier	exception_object		1994863	1					
ANR	1995242	Argument	EG ( exception )		1994863	1					
ANR	1995243	CallExpression	EG ( exception )		1994863	0					
ANR	1995244	Callee	EG		1994863	0					
ANR	1995245	Identifier	EG		1994863	0					
ANR	1995246	ArgumentList	exception		1994863	1					
ANR	1995247	Argument	exception		1994863	0					
ANR	1995248	Identifier	exception		1994863	0					
ANR	1995249	ExpressionStatement	"msg = zval_get_string ( zend_read_property ( zend_ce_error , & exception_object , ""message"" , sizeof ( ""message"" ) - 1 , 0 , & rv ) )"	2596:4:88750:88865	1994863	4	True				
ANR	1995250	AssignmentExpression	"msg = zval_get_string ( zend_read_property ( zend_ce_error , & exception_object , ""message"" , sizeof ( ""message"" ) - 1 , 0 , & rv ) )"		1994863	0		=			
ANR	1995251	Identifier	msg		1994863	0					
ANR	1995252	CallExpression	"zval_get_string ( zend_read_property ( zend_ce_error , & exception_object , ""message"" , sizeof ( ""message"" ) - 1 , 0 , & rv ) )"		1994863	1					
ANR	1995253	Callee	zval_get_string		1994863	0					
ANR	1995254	Identifier	zval_get_string		1994863	0					
ANR	1995255	ArgumentList	"zend_read_property ( zend_ce_error , & exception_object , ""message"" , sizeof ( ""message"" ) - 1 , 0 , & rv )"		1994863	1					
ANR	1995256	Argument	"zend_read_property ( zend_ce_error , & exception_object , ""message"" , sizeof ( ""message"" ) - 1 , 0 , & rv )"		1994863	0					
ANR	1995257	CallExpression	"zend_read_property ( zend_ce_error , & exception_object , ""message"" , sizeof ( ""message"" ) - 1 , 0 , & rv )"		1994863	0					
ANR	1995258	Callee	zend_read_property		1994863	0					
ANR	1995259	Identifier	zend_read_property		1994863	0					
ANR	1995260	ArgumentList	zend_ce_error		1994863	1					
ANR	1995261	Argument	zend_ce_error		1994863	0					
ANR	1995262	Identifier	zend_ce_error		1994863	0					
ANR	1995263	Argument	& exception_object		1994863	1					
ANR	1995264	UnaryOperationExpression	& exception_object		1994863	0					
ANR	1995265	UnaryOperator	&		1994863	0					
ANR	1995266	Identifier	exception_object		1994863	1					
ANR	1995267	Argument	"""message"""		1994863	2					
ANR	1995268	PrimaryExpression	"""message"""		1994863	0					
ANR	1995269	Argument	"sizeof ( ""message"" ) - 1"		1994863	3					
ANR	1995270	AdditiveExpression	"sizeof ( ""message"" ) - 1"		1994863	0		-			
ANR	1995271	SizeofExpression	"sizeof ( ""message"" )"		1994863	0					
ANR	1995272	Sizeof	sizeof		1994863	0					
ANR	1995273	PrimaryExpression	"""message"""		1994863	1					
ANR	1995274	PrimaryExpression	1		1994863	1					
ANR	1995275	Argument	0		1994863	4					
ANR	1995276	PrimaryExpression	0		1994863	0					
ANR	1995277	Argument	& rv		1994863	5					
ANR	1995278	UnaryOperationExpression	& rv		1994863	0					
ANR	1995279	UnaryOperator	&		1994863	0					
ANR	1995280	Identifier	rv		1994863	1					
ANR	1995281	ExpressionStatement	EG ( exception ) -> ce = soap_fault_class_entry	2598:4:88894:88936	1994863	5	True				
ANR	1995282	AssignmentExpression	EG ( exception ) -> ce = soap_fault_class_entry		1994863	0		=			
ANR	1995283	PtrMemberAccess	EG ( exception ) -> ce		1994863	0					
ANR	1995284	CallExpression	EG ( exception )		1994863	0					
ANR	1995285	Callee	EG		1994863	0					
ANR	1995286	Identifier	EG		1994863	0					
ANR	1995287	ArgumentList	exception		1994863	1					
ANR	1995288	Argument	exception		1994863	0					
ANR	1995289	Identifier	exception		1994863	0					
ANR	1995290	Identifier	ce		1994863	1					
ANR	1995291	Identifier	soap_fault_class_entry		1994863	1					
ANR	1995292	ExpressionStatement	"set_soap_fault ( & exception_object , NULL , ""Client"" , ZSTR_VAL ( msg ) , NULL , NULL , NULL )"	2599:4:88942:89024	1994863	6	True				
ANR	1995293	CallExpression	"set_soap_fault ( & exception_object , NULL , ""Client"" , ZSTR_VAL ( msg ) , NULL , NULL , NULL )"		1994863	0					
ANR	1995294	Callee	set_soap_fault		1994863	0					
ANR	1995295	Identifier	set_soap_fault		1994863	0					
ANR	1995296	ArgumentList	& exception_object		1994863	1					
ANR	1995297	Argument	& exception_object		1994863	0					
ANR	1995298	UnaryOperationExpression	& exception_object		1994863	0					
ANR	1995299	UnaryOperator	&		1994863	0					
ANR	1995300	Identifier	exception_object		1994863	1					
ANR	1995301	Argument	NULL		1994863	1					
ANR	1995302	Identifier	NULL		1994863	0					
ANR	1995303	Argument	"""Client"""		1994863	2					
ANR	1995304	PrimaryExpression	"""Client"""		1994863	0					
ANR	1995305	Argument	ZSTR_VAL ( msg )		1994863	3					
ANR	1995306	CallExpression	ZSTR_VAL ( msg )		1994863	0					
ANR	1995307	Callee	ZSTR_VAL		1994863	0					
ANR	1995308	Identifier	ZSTR_VAL		1994863	0					
ANR	1995309	ArgumentList	msg		1994863	1					
ANR	1995310	Argument	msg		1994863	0					
ANR	1995311	Identifier	msg		1994863	0					
ANR	1995312	Argument	NULL		1994863	4					
ANR	1995313	Identifier	NULL		1994863	0					
ANR	1995314	Argument	NULL		1994863	5					
ANR	1995315	Identifier	NULL		1994863	0					
ANR	1995316	Argument	NULL		1994863	6					
ANR	1995317	Identifier	NULL		1994863	0					
ANR	1995318	ExpressionStatement	zend_string_release ( msg )	2600:4:89030:89054	1994863	7	True				
ANR	1995319	CallExpression	zend_string_release ( msg )		1994863	0					
ANR	1995320	Callee	zend_string_release		1994863	0					
ANR	1995321	Identifier	zend_string_release		1994863	0					
ANR	1995322	ArgumentList	msg		1994863	1					
ANR	1995323	Argument	msg		1994863	0					
ANR	1995324	Identifier	msg		1994863	0					
ANR	1995325	ElseStatement	else		1994863	0					
ANR	1995326	IfStatement	"if ( ( fault = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 ) ) == NULL )"		1994863	0					
ANR	1995327	Condition	"( fault = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 ) ) == NULL"	2601:14:89070:89170	1994863	0	True				
ANR	1995328	EqualityExpression	"( fault = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 ) ) == NULL"		1994863	0		==			
ANR	1995329	AssignmentExpression	"fault = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 )"		1994863	0		=			
ANR	1995330	Identifier	fault		1994863	0					
ANR	1995331	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 )"		1994863	1					
ANR	1995332	Callee	zend_hash_str_find		1994863	0					
ANR	1995333	Identifier	zend_hash_str_find		1994863	0					
ANR	1995334	ArgumentList	Z_OBJPROP_P ( this_ptr )		1994863	1					
ANR	1995335	Argument	Z_OBJPROP_P ( this_ptr )		1994863	0					
ANR	1995336	CallExpression	Z_OBJPROP_P ( this_ptr )		1994863	0					
ANR	1995337	Callee	Z_OBJPROP_P		1994863	0					
ANR	1995338	Identifier	Z_OBJPROP_P		1994863	0					
ANR	1995339	ArgumentList	this_ptr		1994863	1					
ANR	1995340	Argument	this_ptr		1994863	0					
ANR	1995341	Identifier	this_ptr		1994863	0					
ANR	1995342	Argument	"""__soap_fault"""		1994863	1					
ANR	1995343	PrimaryExpression	"""__soap_fault"""		1994863	0					
ANR	1995344	Argument	"sizeof ( ""__soap_fault"" ) - 1"		1994863	2					
ANR	1995345	AdditiveExpression	"sizeof ( ""__soap_fault"" ) - 1"		1994863	0		-			
ANR	1995346	SizeofExpression	"sizeof ( ""__soap_fault"" )"		1994863	0					
ANR	1995347	Sizeof	sizeof		1994863	0					
ANR	1995348	PrimaryExpression	"""__soap_fault"""		1994863	1					
ANR	1995349	PrimaryExpression	1		1994863	1					
ANR	1995350	Identifier	NULL		1994863	1					
ANR	1995351	CompoundStatement		55:117:1833:1833	1994863	1					
ANR	1995352	ExpressionStatement	"add_soap_fault ( this_ptr , ""Client"" , ""SoapClient::__doRequest() returned non string value"" , NULL , NULL )"	2602:4:89179:89280	1994863	0	True				
ANR	1995353	CallExpression	"add_soap_fault ( this_ptr , ""Client"" , ""SoapClient::__doRequest() returned non string value"" , NULL , NULL )"		1994863	0					
ANR	1995354	Callee	add_soap_fault		1994863	0					
ANR	1995355	Identifier	add_soap_fault		1994863	0					
ANR	1995356	ArgumentList	this_ptr		1994863	1					
ANR	1995357	Argument	this_ptr		1994863	0					
ANR	1995358	Identifier	this_ptr		1994863	0					
ANR	1995359	Argument	"""Client"""		1994863	1					
ANR	1995360	PrimaryExpression	"""Client"""		1994863	0					
ANR	1995361	Argument	"""SoapClient::__doRequest() returned non string value"""		1994863	2					
ANR	1995362	PrimaryExpression	"""SoapClient::__doRequest() returned non string value"""		1994863	0					
ANR	1995363	Argument	NULL		1994863	3					
ANR	1995364	Identifier	NULL		1994863	0					
ANR	1995365	Argument	NULL		1994863	4					
ANR	1995366	Identifier	NULL		1994863	0					
ANR	1995367	ExpressionStatement	ret = FALSE	2604:3:89290:89301	1994863	1	True				
ANR	1995368	AssignmentExpression	ret = FALSE		1994863	0		=			
ANR	1995369	Identifier	ret		1994863	0					
ANR	1995370	Identifier	FALSE		1994863	1					
ANR	1995371	ElseStatement	else		1994863	0					
ANR	1995372	IfStatement	"if ( ( trace = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""trace"" , sizeof ( ""trace"" ) - 1 ) ) != NULL && ( Z_TYPE_P ( trace ) == IS_TRUE || ( Z_TYPE_P ( trace ) == IS_LONG && Z_LVAL_P ( trace ) != 0 ) ) )"		1994863	0					
ANR	1995373	Condition	"( trace = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""trace"" , sizeof ( ""trace"" ) - 1 ) ) != NULL && ( Z_TYPE_P ( trace ) == IS_TRUE || ( Z_TYPE_P ( trace ) == IS_LONG && Z_LVAL_P ( trace ) != 0 ) )"	2605:13:89316:89496	1994863	0	True				
ANR	1995374	AndExpression	"( trace = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""trace"" , sizeof ( ""trace"" ) - 1 ) ) != NULL && ( Z_TYPE_P ( trace ) == IS_TRUE || ( Z_TYPE_P ( trace ) == IS_LONG && Z_LVAL_P ( trace ) != 0 ) )"		1994863	0		&&			
ANR	1995375	EqualityExpression	"( trace = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""trace"" , sizeof ( ""trace"" ) - 1 ) ) != NULL"		1994863	0		!=			
ANR	1995376	AssignmentExpression	"trace = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""trace"" , sizeof ( ""trace"" ) - 1 )"		1994863	0		=			
ANR	1995377	Identifier	trace		1994863	0					
ANR	1995378	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""trace"" , sizeof ( ""trace"" ) - 1 )"		1994863	1					
ANR	1995379	Callee	zend_hash_str_find		1994863	0					
ANR	1995380	Identifier	zend_hash_str_find		1994863	0					
ANR	1995381	ArgumentList	Z_OBJPROP_P ( this_ptr )		1994863	1					
ANR	1995382	Argument	Z_OBJPROP_P ( this_ptr )		1994863	0					
ANR	1995383	CallExpression	Z_OBJPROP_P ( this_ptr )		1994863	0					
ANR	1995384	Callee	Z_OBJPROP_P		1994863	0					
ANR	1995385	Identifier	Z_OBJPROP_P		1994863	0					
ANR	1995386	ArgumentList	this_ptr		1994863	1					
ANR	1995387	Argument	this_ptr		1994863	0					
ANR	1995388	Identifier	this_ptr		1994863	0					
ANR	1995389	Argument	"""trace"""		1994863	1					
ANR	1995390	PrimaryExpression	"""trace"""		1994863	0					
ANR	1995391	Argument	"sizeof ( ""trace"" ) - 1"		1994863	2					
ANR	1995392	AdditiveExpression	"sizeof ( ""trace"" ) - 1"		1994863	0		-			
ANR	1995393	SizeofExpression	"sizeof ( ""trace"" )"		1994863	0					
ANR	1995394	Sizeof	sizeof		1994863	0					
ANR	1995395	PrimaryExpression	"""trace"""		1994863	1					
ANR	1995396	PrimaryExpression	1		1994863	1					
ANR	1995397	Identifier	NULL		1994863	1					
ANR	1995398	OrExpression	Z_TYPE_P ( trace ) == IS_TRUE || ( Z_TYPE_P ( trace ) == IS_LONG && Z_LVAL_P ( trace ) != 0 )		1994863	1		||			
ANR	1995399	EqualityExpression	Z_TYPE_P ( trace ) == IS_TRUE		1994863	0		==			
ANR	1995400	CallExpression	Z_TYPE_P ( trace )		1994863	0					
ANR	1995401	Callee	Z_TYPE_P		1994863	0					
ANR	1995402	Identifier	Z_TYPE_P		1994863	0					
ANR	1995403	ArgumentList	trace		1994863	1					
ANR	1995404	Argument	trace		1994863	0					
ANR	1995405	Identifier	trace		1994863	0					
ANR	1995406	Identifier	IS_TRUE		1994863	1					
ANR	1995407	AndExpression	Z_TYPE_P ( trace ) == IS_LONG && Z_LVAL_P ( trace ) != 0		1994863	1		&&			
ANR	1995408	EqualityExpression	Z_TYPE_P ( trace ) == IS_LONG		1994863	0		==			
ANR	1995409	CallExpression	Z_TYPE_P ( trace )		1994863	0					
ANR	1995410	Callee	Z_TYPE_P		1994863	0					
ANR	1995411	Identifier	Z_TYPE_P		1994863	0					
ANR	1995412	ArgumentList	trace		1994863	1					
ANR	1995413	Argument	trace		1994863	0					
ANR	1995414	Identifier	trace		1994863	0					
ANR	1995415	Identifier	IS_LONG		1994863	1					
ANR	1995416	EqualityExpression	Z_LVAL_P ( trace ) != 0		1994863	1		!=			
ANR	1995417	CallExpression	Z_LVAL_P ( trace )		1994863	0					
ANR	1995418	Callee	Z_LVAL_P		1994863	0					
ANR	1995419	Identifier	Z_LVAL_P		1994863	0					
ANR	1995420	ArgumentList	trace		1994863	1					
ANR	1995421	Argument	trace		1994863	0					
ANR	1995422	Identifier	trace		1994863	0					
ANR	1995423	PrimaryExpression	0		1994863	1					
ANR	1995424	CompoundStatement		60:92:2159:2159	1994863	1					
ANR	1995425	ExpressionStatement	"add_property_str ( this_ptr , ""__last_response"" , zend_string_copy ( Z_STR_P ( response ) ) )"	2607:3:89504:89586	1994863	0	True				
ANR	1995426	CallExpression	"add_property_str ( this_ptr , ""__last_response"" , zend_string_copy ( Z_STR_P ( response ) ) )"		1994863	0					
ANR	1995427	Callee	add_property_str		1994863	0					
ANR	1995428	Identifier	add_property_str		1994863	0					
ANR	1995429	ArgumentList	this_ptr		1994863	1					
ANR	1995430	Argument	this_ptr		1994863	0					
ANR	1995431	Identifier	this_ptr		1994863	0					
ANR	1995432	Argument	"""__last_response"""		1994863	1					
ANR	1995433	PrimaryExpression	"""__last_response"""		1994863	0					
ANR	1995434	Argument	zend_string_copy ( Z_STR_P ( response ) )		1994863	2					
ANR	1995435	CallExpression	zend_string_copy ( Z_STR_P ( response ) )		1994863	0					
ANR	1995436	Callee	zend_string_copy		1994863	0					
ANR	1995437	Identifier	zend_string_copy		1994863	0					
ANR	1995438	ArgumentList	Z_STR_P ( response )		1994863	1					
ANR	1995439	Argument	Z_STR_P ( response )		1994863	0					
ANR	1995440	CallExpression	Z_STR_P ( response )		1994863	0					
ANR	1995441	Callee	Z_STR_P		1994863	0					
ANR	1995442	Identifier	Z_STR_P		1994863	0					
ANR	1995443	ArgumentList	response		1994863	1					
ANR	1995444	Argument	response		1994863	0					
ANR	1995445	Identifier	response		1994863	0					
ANR	1995446	Statement	zend_catch	2609:3:89595:89604	1994863	13	True				
ANR	1995447	CompoundStatement		63:14:2266:2266	1994863	14					
ANR	1995448	ExpressionStatement	_bailout = 1	2610:2:89610:89622	1994863	0	True				
ANR	1995449	AssignmentExpression	_bailout = 1		1994863	0		=			
ANR	1995450	Identifier	_bailout		1994863	0					
ANR	1995451	PrimaryExpression	1		1994863	1					
ANR	1995452	ExpressionStatement	zend_end_try ( )	2611:3:89627:89641	1994863	15	True				
ANR	1995453	CallExpression	zend_end_try ( )		1994863	0					
ANR	1995454	Callee	zend_end_try		1994863	0					
ANR	1995455	Identifier	zend_end_try		1994863	0					
ANR	1995456	ArgumentList			1994863	1					
ANR	1995457	ExpressionStatement	zval_ptr_dtor ( & func )	2612:1:89644:89664	1994863	16	True				
ANR	1995458	CallExpression	zval_ptr_dtor ( & func )		1994863	0					
ANR	1995459	Callee	zval_ptr_dtor		1994863	0					
ANR	1995460	Identifier	zval_ptr_dtor		1994863	0					
ANR	1995461	ArgumentList	& func		1994863	1					
ANR	1995462	Argument	& func		1994863	0					
ANR	1995463	UnaryOperationExpression	& func		1994863	0					
ANR	1995464	UnaryOperator	&		1994863	0					
ANR	1995465	Identifier	func		1994863	1					
ANR	1995466	ExpressionStatement	zval_ptr_dtor ( & params [ 4 ] )	2613:1:89667:89692	1994863	17	True				
ANR	1995467	CallExpression	zval_ptr_dtor ( & params [ 4 ] )		1994863	0					
ANR	1995468	Callee	zval_ptr_dtor		1994863	0					
ANR	1995469	Identifier	zval_ptr_dtor		1994863	0					
ANR	1995470	ArgumentList	& params [ 4 ]		1994863	1					
ANR	1995471	Argument	& params [ 4 ]		1994863	0					
ANR	1995472	UnaryOperationExpression	& params [ 4 ]		1994863	0					
ANR	1995473	UnaryOperator	&		1994863	0					
ANR	1995474	ArrayIndexing	params [ 4 ]		1994863	1					
ANR	1995475	Identifier	params		1994863	0					
ANR	1995476	PrimaryExpression	4		1994863	1					
ANR	1995477	ExpressionStatement	zval_ptr_dtor ( & params [ 3 ] )	2614:1:89695:89720	1994863	18	True				
ANR	1995478	CallExpression	zval_ptr_dtor ( & params [ 3 ] )		1994863	0					
ANR	1995479	Callee	zval_ptr_dtor		1994863	0					
ANR	1995480	Identifier	zval_ptr_dtor		1994863	0					
ANR	1995481	ArgumentList	& params [ 3 ]		1994863	1					
ANR	1995482	Argument	& params [ 3 ]		1994863	0					
ANR	1995483	UnaryOperationExpression	& params [ 3 ]		1994863	0					
ANR	1995484	UnaryOperator	&		1994863	0					
ANR	1995485	ArrayIndexing	params [ 3 ]		1994863	1					
ANR	1995486	Identifier	params		1994863	0					
ANR	1995487	PrimaryExpression	3		1994863	1					
ANR	1995488	ExpressionStatement	zval_ptr_dtor ( & params [ 2 ] )	2615:1:89723:89748	1994863	19	True				
ANR	1995489	CallExpression	zval_ptr_dtor ( & params [ 2 ] )		1994863	0					
ANR	1995490	Callee	zval_ptr_dtor		1994863	0					
ANR	1995491	Identifier	zval_ptr_dtor		1994863	0					
ANR	1995492	ArgumentList	& params [ 2 ]		1994863	1					
ANR	1995493	Argument	& params [ 2 ]		1994863	0					
ANR	1995494	UnaryOperationExpression	& params [ 2 ]		1994863	0					
ANR	1995495	UnaryOperator	&		1994863	0					
ANR	1995496	ArrayIndexing	params [ 2 ]		1994863	1					
ANR	1995497	Identifier	params		1994863	0					
ANR	1995498	PrimaryExpression	2		1994863	1					
ANR	1995499	ExpressionStatement	zval_ptr_dtor ( & params [ 1 ] )	2616:1:89751:89776	1994863	20	True				
ANR	1995500	CallExpression	zval_ptr_dtor ( & params [ 1 ] )		1994863	0					
ANR	1995501	Callee	zval_ptr_dtor		1994863	0					
ANR	1995502	Identifier	zval_ptr_dtor		1994863	0					
ANR	1995503	ArgumentList	& params [ 1 ]		1994863	1					
ANR	1995504	Argument	& params [ 1 ]		1994863	0					
ANR	1995505	UnaryOperationExpression	& params [ 1 ]		1994863	0					
ANR	1995506	UnaryOperator	&		1994863	0					
ANR	1995507	ArrayIndexing	params [ 1 ]		1994863	1					
ANR	1995508	Identifier	params		1994863	0					
ANR	1995509	PrimaryExpression	1		1994863	1					
ANR	1995510	ExpressionStatement	zval_ptr_dtor ( & params [ 0 ] )	2617:1:89779:89804	1994863	21	True				
ANR	1995511	CallExpression	zval_ptr_dtor ( & params [ 0 ] )		1994863	0					
ANR	1995512	Callee	zval_ptr_dtor		1994863	0					
ANR	1995513	Identifier	zval_ptr_dtor		1994863	0					
ANR	1995514	ArgumentList	& params [ 0 ]		1994863	1					
ANR	1995515	Argument	& params [ 0 ]		1994863	0					
ANR	1995516	UnaryOperationExpression	& params [ 0 ]		1994863	0					
ANR	1995517	UnaryOperator	&		1994863	0					
ANR	1995518	ArrayIndexing	params [ 0 ]		1994863	1					
ANR	1995519	Identifier	params		1994863	0					
ANR	1995520	PrimaryExpression	0		1994863	1					
ANR	1995521	ExpressionStatement	xmlFree ( buf )	2618:1:89807:89819	1994863	22	True				
ANR	1995522	CallExpression	xmlFree ( buf )		1994863	0					
ANR	1995523	Callee	xmlFree		1994863	0					
ANR	1995524	Identifier	xmlFree		1994863	0					
ANR	1995525	ArgumentList	buf		1994863	1					
ANR	1995526	Argument	buf		1994863	0					
ANR	1995527	Identifier	buf		1994863	0					
ANR	1995528	IfStatement	if ( _bailout )		1994863	23					
ANR	1995529	Condition	_bailout	2619:5:89826:89833	1994863	0	True				
ANR	1995530	Identifier	_bailout		1994863	0					
ANR	1995531	CompoundStatement		73:15:2496:2496	1994863	1					
ANR	1995532	ExpressionStatement	zend_bailout ( )	2620:2:89840:89854	1994863	0	True				
ANR	1995533	CallExpression	zend_bailout ( )		1994863	0					
ANR	1995534	Callee	zend_bailout		1994863	0					
ANR	1995535	Identifier	zend_bailout		1994863	0					
ANR	1995536	ArgumentList			1994863	1					
ANR	1995537	IfStatement	"if ( ret && ( fault = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 ) ) != NULL )"		1994863	24					
ANR	1995538	Condition	"ret && ( fault = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 ) ) != NULL"	2622:5:89864:89971	1994863	0	True				
ANR	1995539	AndExpression	"ret && ( fault = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 ) ) != NULL"		1994863	0		&&			
ANR	1995540	Identifier	ret		1994863	0					
ANR	1995541	EqualityExpression	"( fault = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 ) ) != NULL"		1994863	1		!=			
ANR	1995542	AssignmentExpression	"fault = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 )"		1994863	0		=			
ANR	1995543	Identifier	fault		1994863	0					
ANR	1995544	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 )"		1994863	1					
ANR	1995545	Callee	zend_hash_str_find		1994863	0					
ANR	1995546	Identifier	zend_hash_str_find		1994863	0					
ANR	1995547	ArgumentList	Z_OBJPROP_P ( this_ptr )		1994863	1					
ANR	1995548	Argument	Z_OBJPROP_P ( this_ptr )		1994863	0					
ANR	1995549	CallExpression	Z_OBJPROP_P ( this_ptr )		1994863	0					
ANR	1995550	Callee	Z_OBJPROP_P		1994863	0					
ANR	1995551	Identifier	Z_OBJPROP_P		1994863	0					
ANR	1995552	ArgumentList	this_ptr		1994863	1					
ANR	1995553	Argument	this_ptr		1994863	0					
ANR	1995554	Identifier	this_ptr		1994863	0					
ANR	1995555	Argument	"""__soap_fault"""		1994863	1					
ANR	1995556	PrimaryExpression	"""__soap_fault"""		1994863	0					
ANR	1995557	Argument	"sizeof ( ""__soap_fault"" ) - 1"		1994863	2					
ANR	1995558	AdditiveExpression	"sizeof ( ""__soap_fault"" ) - 1"		1994863	0		-			
ANR	1995559	SizeofExpression	"sizeof ( ""__soap_fault"" )"		1994863	0					
ANR	1995560	Sizeof	sizeof		1994863	0					
ANR	1995561	PrimaryExpression	"""__soap_fault"""		1994863	1					
ANR	1995562	PrimaryExpression	1		1994863	1					
ANR	1995563	Identifier	NULL		1994863	1					
ANR	1995564	CompoundStatement		76:115:2634:2634	1994863	1					
ANR	1995565	ExpressionStatement	ret = FALSE	2623:2:89978:89989	1994863	0	True				
ANR	1995566	AssignmentExpression	ret = FALSE		1994863	0		=			
ANR	1995567	Identifier	ret		1994863	0					
ANR	1995568	Identifier	FALSE		1994863	1					
ANR	1995569	ReturnStatement	return ret ;	2625:1:89995:90005	1994863	25	True				
ANR	1995570	Identifier	ret		1994863	0					
ANR	1995571	ReturnType	static int		1994863	1					
ANR	1995572	Identifier	do_request		1994863	2					
ANR	1995573	ParameterList	"zval * this_ptr , xmlDoc * request , char * location , char * action , int version , int one_way , zval * response"		1994863	3					
ANR	1995574	Parameter	zval * this_ptr	2546:22:87234:87247	1994863	0	True				
ANR	1995575	ParameterType	zval *		1994863	0					
ANR	1995576	Identifier	this_ptr		1994863	1					
ANR	1995577	Parameter	xmlDoc * request	2546:38:87250:87264	1994863	1	True				
ANR	1995578	ParameterType	xmlDoc *		1994863	0					
ANR	1995579	Identifier	request		1994863	1					
ANR	1995580	Parameter	char * location	2546:55:87267:87280	1994863	2	True				
ANR	1995581	ParameterType	char *		1994863	0					
ANR	1995582	Identifier	location		1994863	1					
ANR	1995583	Parameter	char * action	2546:71:87283:87294	1994863	3	True				
ANR	1995584	ParameterType	char *		1994863	0					
ANR	1995585	Identifier	action		1994863	1					
ANR	1995586	Parameter	int version	2546:85:87297:87307	1994863	4	True				
ANR	1995587	ParameterType	int		1994863	0					
ANR	1995588	Identifier	version		1994863	1					
ANR	1995589	Parameter	int one_way	2546:98:87310:87320	1994863	5	True				
ANR	1995590	ParameterType	int		1994863	0					
ANR	1995591	Identifier	one_way		1994863	1					
ANR	1995592	Parameter	zval * response	2546:111:87323:87336	1994863	6	True				
ANR	1995593	ParameterType	zval *		1994863	0					
ANR	1995594	Identifier	response		1994863	1					
ANR	1995595	CFGEntryNode	ENTRY		1994863		True				
ANR	1995596	CFGExitNode	EXIT		1994863		True				
ANR	1995597	Symbol	exception		1994863						
ANR	1995598	Symbol	instanceof_function		1994863						
ANR	1995599	Symbol	msg		1994863						
ANR	1995600	Symbol	request		1994863						
ANR	1995601	Symbol	rv		1994863						
ANR	1995602	Symbol	* EG		1994863						
ANR	1995603	Symbol	soap_fault_class_entry		1994863						
ANR	1995604	Symbol	EG ( exception ) -> ce		1994863						
ANR	1995605	Symbol	trace		1994863						
ANR	1995606	Symbol	one_way		1994863						
ANR	1995607	Symbol	zend_hash_str_find		1994863						
ANR	1995608	Symbol	IS_LONG		1994863						
ANR	1995609	Symbol	& buf_size		1994863						
ANR	1995610	Symbol	action		1994863						
ANR	1995611	Symbol	IS_STRING		1994863						
ANR	1995612	Symbol	exception_object		1994863						
ANR	1995613	Symbol	& buf		1994863						
ANR	1995614	Symbol	_bailout		1994863						
ANR	1995615	Symbol	ret		1994863						
ANR	1995616	Symbol	EG		1994863						
ANR	1995617	Symbol	NULL		1994863						
ANR	1995618	Symbol	SUCCESS		1994863						
ANR	1995619	Symbol	zend_ce_error		1994863						
ANR	1995620	Symbol	buf_size		1994863						
ANR	1995621	Symbol	IS_TRUE		1994863						
ANR	1995622	Symbol	TRUE		1994863						
ANR	1995623	Symbol	fault		1994863						
ANR	1995624	Symbol	call_user_function		1994863						
ANR	1995625	Symbol	zval_get_string		1994863						
ANR	1995626	Symbol	Z_OBJPROP_P		1994863						
ANR	1995627	Symbol	zend_string_copy		1994863						
ANR	1995628	Symbol	params		1994863						
ANR	1995629	Symbol	Z_TYPE_P		1994863						
ANR	1995630	Symbol	version		1994863						
ANR	1995631	Symbol	Z_LVAL_P		1994863						
ANR	1995632	Symbol	& rv		1994863						
ANR	1995633	Symbol	ZSTR_VAL		1994863						
ANR	1995634	Symbol	buf		1994863						
ANR	1995635	Symbol	this_ptr		1994863						
ANR	1995636	Symbol	func		1994863						
ANR	1995637	Symbol	& func		1994863						
ANR	1995638	Symbol	zend_read_property		1994863						
ANR	1995639	Symbol	response		1994863						
ANR	1995640	Symbol	location		1994863						
ANR	1995641	Symbol	FALSE		1994863						
ANR	1995642	Symbol	Z_STR_P		1994863						
ANR	1995643	Symbol	& exception_object		1994863						
ANR	1995644	Function	do_soap_call	2628:0:90010:97122							
ANR	1995645	FunctionDef	"do_soap_call (zend_execute_data * execute_data , zval * this_ptr , char * function , size_t function_len , int arg_count , zval * real_args , zval * return_value , char * location , char * soap_action , char * call_uri , HashTable * soap_headers , zval * output_headers)"		1995644	0					
ANR	1995646	CompoundStatement		2641:0:90571:97122	1995644	0					
ANR	1995647	IdentifierDeclStatement	zval * tmp ;	2642:1:90574:90583	1995644	0	True				
ANR	1995648	IdentifierDecl	* tmp		1995644	0					
ANR	1995649	IdentifierDeclType	zval *		1995644	0					
ANR	1995650	Identifier	tmp		1995644	1					
ANR	1995651	IdentifierDeclStatement	zval * trace ;	2643:1:90586:90597	1995644	1	True				
ANR	1995652	IdentifierDecl	* trace		1995644	0					
ANR	1995653	IdentifierDeclType	zval *		1995644	0					
ANR	1995654	Identifier	trace		1995644	1					
ANR	1995655	IdentifierDeclStatement	sdlPtr sdl = NULL ;	2644:2:90601:90618	1995644	2	True				
ANR	1995656	IdentifierDecl	sdl = NULL		1995644	0					
ANR	1995657	IdentifierDeclType	sdlPtr		1995644	0					
ANR	1995658	Identifier	sdl		1995644	1					
ANR	1995659	AssignmentExpression	sdl = NULL		1995644	2		=			
ANR	1995660	Identifier	NULL		1995644	0					
ANR	1995661	Identifier	NULL		1995644	1					
ANR	1995662	IdentifierDeclStatement	sdlPtr old_sdl = NULL ;	2645:2:90622:90643	1995644	3	True				
ANR	1995663	IdentifierDecl	old_sdl = NULL		1995644	0					
ANR	1995664	IdentifierDeclType	sdlPtr		1995644	0					
ANR	1995665	Identifier	old_sdl		1995644	1					
ANR	1995666	AssignmentExpression	old_sdl = NULL		1995644	2		=			
ANR	1995667	Identifier	NULL		1995644	0					
ANR	1995668	Identifier	NULL		1995644	1					
ANR	1995669	IdentifierDeclStatement	sdlFunctionPtr fn ;	2646:2:90647:90664	1995644	4	True				
ANR	1995670	IdentifierDecl	fn		1995644	0					
ANR	1995671	IdentifierDeclType	sdlFunctionPtr		1995644	0					
ANR	1995672	Identifier	fn		1995644	1					
ANR	1995673	IdentifierDeclStatement	xmlDocPtr request = NULL ;	2647:1:90667:90691	1995644	5	True				
ANR	1995674	IdentifierDecl	request = NULL		1995644	0					
ANR	1995675	IdentifierDeclType	xmlDocPtr		1995644	0					
ANR	1995676	Identifier	request		1995644	1					
ANR	1995677	AssignmentExpression	request = NULL		1995644	2		=			
ANR	1995678	Identifier	NULL		1995644	0					
ANR	1995679	Identifier	NULL		1995644	1					
ANR	1995680	IdentifierDeclStatement	int ret = FALSE ;	2648:1:90694:90709	1995644	6	True				
ANR	1995681	IdentifierDecl	ret = FALSE		1995644	0					
ANR	1995682	IdentifierDeclType	int		1995644	0					
ANR	1995683	Identifier	ret		1995644	1					
ANR	1995684	AssignmentExpression	ret = FALSE		1995644	2		=			
ANR	1995685	Identifier	FALSE		1995644	0					
ANR	1995686	Identifier	FALSE		1995644	1					
ANR	1995687	IdentifierDeclStatement	int soap_version ;	2649:1:90712:90728	1995644	7	True				
ANR	1995688	IdentifierDecl	soap_version		1995644	0					
ANR	1995689	IdentifierDeclType	int		1995644	0					
ANR	1995690	Identifier	soap_version		1995644	1					
ANR	1995691	IdentifierDeclStatement	zval response ;	2650:1:90731:90744	1995644	8	True				
ANR	1995692	IdentifierDecl	response		1995644	0					
ANR	1995693	IdentifierDeclType	zval		1995644	0					
ANR	1995694	Identifier	response		1995644	1					
ANR	1995695	IdentifierDeclStatement	xmlCharEncodingHandlerPtr old_encoding ;	2651:1:90747:90785	1995644	9	True				
ANR	1995696	IdentifierDecl	old_encoding		1995644	0					
ANR	1995697	IdentifierDeclType	xmlCharEncodingHandlerPtr		1995644	0					
ANR	1995698	Identifier	old_encoding		1995644	1					
ANR	1995699	IdentifierDeclStatement	HashTable * old_class_map ;	2652:1:90788:90812	1995644	10	True				
ANR	1995700	IdentifierDecl	* old_class_map		1995644	0					
ANR	1995701	IdentifierDeclType	HashTable *		1995644	0					
ANR	1995702	Identifier	old_class_map		1995644	1					
ANR	1995703	IdentifierDeclStatement	int old_features ;	2653:1:90815:90831	1995644	11	True				
ANR	1995704	IdentifierDecl	old_features		1995644	0					
ANR	1995705	IdentifierDeclType	int		1995644	0					
ANR	1995706	Identifier	old_features		1995644	1					
ANR	1995707	IdentifierDeclStatement	"HashTable * old_typemap , * typemap = NULL ;"	2654:1:90834:90873	1995644	12	True				
ANR	1995708	IdentifierDecl	* old_typemap		1995644	0					
ANR	1995709	IdentifierDeclType	HashTable *		1995644	0					
ANR	1995710	Identifier	old_typemap		1995644	1					
ANR	1995711	IdentifierDecl	* typemap = NULL		1995644	1					
ANR	1995712	IdentifierDeclType	HashTable *		1995644	0					
ANR	1995713	Identifier	typemap		1995644	1					
ANR	1995714	AssignmentExpression	* typemap = NULL		1995644	2		=			
ANR	1995715	Identifier	NULL		1995644	0					
ANR	1995716	Identifier	NULL		1995644	1					
ANR	1995717	IdentifierDeclStatement	smart_str action = { 0 } ;	2655:1:90876:90898	1995644	13	True				
ANR	1995718	IdentifierDecl	action = { 0 }		1995644	0					
ANR	1995719	IdentifierDeclType	smart_str		1995644	0					
ANR	1995720	Identifier	action		1995644	1					
ANR	1995721	AssignmentExpression	action = { 0 }		1995644	2		=			
ANR	1995722	Identifier	action		1995644	0					
ANR	1995723	InitializerList	0		1995644	1					
ANR	1995724	PrimaryExpression	0		1995644	0					
ANR	1995725	ExpressionStatement	SOAP_CLIENT_BEGIN_CODE ( )	2657:1:90902:90926	1995644	14	True				
ANR	1995726	CallExpression	SOAP_CLIENT_BEGIN_CODE ( )		1995644	0					
ANR	1995727	Callee	SOAP_CLIENT_BEGIN_CODE		1995644	0					
ANR	1995728	Identifier	SOAP_CLIENT_BEGIN_CODE		1995644	0					
ANR	1995729	ArgumentList			1995644	1					
ANR	1995730	IfStatement	"if ( ( trace = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""trace"" , sizeof ( ""trace"" ) - 1 ) ) != NULL && ( Z_TYPE_P ( trace ) == IS_TRUE || ( Z_TYPE_P ( trace ) == IS_LONG && Z_LVAL_P ( trace ) != 0 ) ) )"		1995644	15					
ANR	1995731	Condition	"( trace = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""trace"" , sizeof ( ""trace"" ) - 1 ) ) != NULL && ( Z_TYPE_P ( trace ) == IS_TRUE || ( Z_TYPE_P ( trace ) == IS_LONG && Z_LVAL_P ( trace ) != 0 ) )"	2659:5:90934:91110	1995644	0	True				
ANR	1995732	AndExpression	"( trace = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""trace"" , sizeof ( ""trace"" ) - 1 ) ) != NULL && ( Z_TYPE_P ( trace ) == IS_TRUE || ( Z_TYPE_P ( trace ) == IS_LONG && Z_LVAL_P ( trace ) != 0 ) )"		1995644	0		&&			
ANR	1995733	EqualityExpression	"( trace = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""trace"" , sizeof ( ""trace"" ) - 1 ) ) != NULL"		1995644	0		!=			
ANR	1995734	AssignmentExpression	"trace = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""trace"" , sizeof ( ""trace"" ) - 1 )"		1995644	0		=			
ANR	1995735	Identifier	trace		1995644	0					
ANR	1995736	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""trace"" , sizeof ( ""trace"" ) - 1 )"		1995644	1					
ANR	1995737	Callee	zend_hash_str_find		1995644	0					
ANR	1995738	Identifier	zend_hash_str_find		1995644	0					
ANR	1995739	ArgumentList	Z_OBJPROP_P ( this_ptr )		1995644	1					
ANR	1995740	Argument	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1995741	CallExpression	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1995742	Callee	Z_OBJPROP_P		1995644	0					
ANR	1995743	Identifier	Z_OBJPROP_P		1995644	0					
ANR	1995744	ArgumentList	this_ptr		1995644	1					
ANR	1995745	Argument	this_ptr		1995644	0					
ANR	1995746	Identifier	this_ptr		1995644	0					
ANR	1995747	Argument	"""trace"""		1995644	1					
ANR	1995748	PrimaryExpression	"""trace"""		1995644	0					
ANR	1995749	Argument	"sizeof ( ""trace"" ) - 1"		1995644	2					
ANR	1995750	AdditiveExpression	"sizeof ( ""trace"" ) - 1"		1995644	0		-			
ANR	1995751	SizeofExpression	"sizeof ( ""trace"" )"		1995644	0					
ANR	1995752	Sizeof	sizeof		1995644	0					
ANR	1995753	PrimaryExpression	"""trace"""		1995644	1					
ANR	1995754	PrimaryExpression	1		1995644	1					
ANR	1995755	Identifier	NULL		1995644	1					
ANR	1995756	OrExpression	Z_TYPE_P ( trace ) == IS_TRUE || ( Z_TYPE_P ( trace ) == IS_LONG && Z_LVAL_P ( trace ) != 0 )		1995644	1		||			
ANR	1995757	EqualityExpression	Z_TYPE_P ( trace ) == IS_TRUE		1995644	0		==			
ANR	1995758	CallExpression	Z_TYPE_P ( trace )		1995644	0					
ANR	1995759	Callee	Z_TYPE_P		1995644	0					
ANR	1995760	Identifier	Z_TYPE_P		1995644	0					
ANR	1995761	ArgumentList	trace		1995644	1					
ANR	1995762	Argument	trace		1995644	0					
ANR	1995763	Identifier	trace		1995644	0					
ANR	1995764	Identifier	IS_TRUE		1995644	1					
ANR	1995765	AndExpression	Z_TYPE_P ( trace ) == IS_LONG && Z_LVAL_P ( trace ) != 0		1995644	1		&&			
ANR	1995766	EqualityExpression	Z_TYPE_P ( trace ) == IS_LONG		1995644	0		==			
ANR	1995767	CallExpression	Z_TYPE_P ( trace )		1995644	0					
ANR	1995768	Callee	Z_TYPE_P		1995644	0					
ANR	1995769	Identifier	Z_TYPE_P		1995644	0					
ANR	1995770	ArgumentList	trace		1995644	1					
ANR	1995771	Argument	trace		1995644	0					
ANR	1995772	Identifier	trace		1995644	0					
ANR	1995773	Identifier	IS_LONG		1995644	1					
ANR	1995774	EqualityExpression	Z_LVAL_P ( trace ) != 0		1995644	1		!=			
ANR	1995775	CallExpression	Z_LVAL_P ( trace )		1995644	0					
ANR	1995776	Callee	Z_LVAL_P		1995644	0					
ANR	1995777	Identifier	Z_LVAL_P		1995644	0					
ANR	1995778	ArgumentList	trace		1995644	1					
ANR	1995779	Argument	trace		1995644	0					
ANR	1995780	Identifier	trace		1995644	0					
ANR	1995781	PrimaryExpression	0		1995644	1					
ANR	1995782	CompoundStatement		20:88:541:541	1995644	1					
ANR	1995783	ExpressionStatement	"zend_hash_str_del ( Z_OBJPROP_P ( this_ptr ) , ""__last_request"" , sizeof ( ""__last_request"" ) - 1 )"	2661:2:91117:91203	1995644	0	True				
ANR	1995784	CallExpression	"zend_hash_str_del ( Z_OBJPROP_P ( this_ptr ) , ""__last_request"" , sizeof ( ""__last_request"" ) - 1 )"		1995644	0					
ANR	1995785	Callee	zend_hash_str_del		1995644	0					
ANR	1995786	Identifier	zend_hash_str_del		1995644	0					
ANR	1995787	ArgumentList	Z_OBJPROP_P ( this_ptr )		1995644	1					
ANR	1995788	Argument	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1995789	CallExpression	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1995790	Callee	Z_OBJPROP_P		1995644	0					
ANR	1995791	Identifier	Z_OBJPROP_P		1995644	0					
ANR	1995792	ArgumentList	this_ptr		1995644	1					
ANR	1995793	Argument	this_ptr		1995644	0					
ANR	1995794	Identifier	this_ptr		1995644	0					
ANR	1995795	Argument	"""__last_request"""		1995644	1					
ANR	1995796	PrimaryExpression	"""__last_request"""		1995644	0					
ANR	1995797	Argument	"sizeof ( ""__last_request"" ) - 1"		1995644	2					
ANR	1995798	AdditiveExpression	"sizeof ( ""__last_request"" ) - 1"		1995644	0		-			
ANR	1995799	SizeofExpression	"sizeof ( ""__last_request"" )"		1995644	0					
ANR	1995800	Sizeof	sizeof		1995644	0					
ANR	1995801	PrimaryExpression	"""__last_request"""		1995644	1					
ANR	1995802	PrimaryExpression	1		1995644	1					
ANR	1995803	ExpressionStatement	"zend_hash_str_del ( Z_OBJPROP_P ( this_ptr ) , ""__last_response"" , sizeof ( ""__last_response"" ) - 1 )"	2662:2:91207:91295	1995644	1	True				
ANR	1995804	CallExpression	"zend_hash_str_del ( Z_OBJPROP_P ( this_ptr ) , ""__last_response"" , sizeof ( ""__last_response"" ) - 1 )"		1995644	0					
ANR	1995805	Callee	zend_hash_str_del		1995644	0					
ANR	1995806	Identifier	zend_hash_str_del		1995644	0					
ANR	1995807	ArgumentList	Z_OBJPROP_P ( this_ptr )		1995644	1					
ANR	1995808	Argument	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1995809	CallExpression	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1995810	Callee	Z_OBJPROP_P		1995644	0					
ANR	1995811	Identifier	Z_OBJPROP_P		1995644	0					
ANR	1995812	ArgumentList	this_ptr		1995644	1					
ANR	1995813	Argument	this_ptr		1995644	0					
ANR	1995814	Identifier	this_ptr		1995644	0					
ANR	1995815	Argument	"""__last_response"""		1995644	1					
ANR	1995816	PrimaryExpression	"""__last_response"""		1995644	0					
ANR	1995817	Argument	"sizeof ( ""__last_response"" ) - 1"		1995644	2					
ANR	1995818	AdditiveExpression	"sizeof ( ""__last_response"" ) - 1"		1995644	0		-			
ANR	1995819	SizeofExpression	"sizeof ( ""__last_response"" )"		1995644	0					
ANR	1995820	Sizeof	sizeof		1995644	0					
ANR	1995821	PrimaryExpression	"""__last_response"""		1995644	1					
ANR	1995822	PrimaryExpression	1		1995644	1					
ANR	1995823	IfStatement	"if ( ( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_soap_version"" , sizeof ( ""_soap_version"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_LONG && Z_LVAL_P ( tmp ) == SOAP_1_2 )"		1995644	16					
ANR	1995824	Condition	"( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_soap_version"" , sizeof ( ""_soap_version"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_LONG && Z_LVAL_P ( tmp ) == SOAP_1_2"	2664:5:91305:91464	1995644	0	True				
ANR	1995825	AndExpression	"( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_soap_version"" , sizeof ( ""_soap_version"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_LONG && Z_LVAL_P ( tmp ) == SOAP_1_2"		1995644	0		&&			
ANR	1995826	EqualityExpression	"( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_soap_version"" , sizeof ( ""_soap_version"" ) - 1 ) ) != NULL"		1995644	0		!=			
ANR	1995827	AssignmentExpression	"tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_soap_version"" , sizeof ( ""_soap_version"" ) - 1 )"		1995644	0		=			
ANR	1995828	Identifier	tmp		1995644	0					
ANR	1995829	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_soap_version"" , sizeof ( ""_soap_version"" ) - 1 )"		1995644	1					
ANR	1995830	Callee	zend_hash_str_find		1995644	0					
ANR	1995831	Identifier	zend_hash_str_find		1995644	0					
ANR	1995832	ArgumentList	Z_OBJPROP_P ( this_ptr )		1995644	1					
ANR	1995833	Argument	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1995834	CallExpression	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1995835	Callee	Z_OBJPROP_P		1995644	0					
ANR	1995836	Identifier	Z_OBJPROP_P		1995644	0					
ANR	1995837	ArgumentList	this_ptr		1995644	1					
ANR	1995838	Argument	this_ptr		1995644	0					
ANR	1995839	Identifier	this_ptr		1995644	0					
ANR	1995840	Argument	"""_soap_version"""		1995644	1					
ANR	1995841	PrimaryExpression	"""_soap_version"""		1995644	0					
ANR	1995842	Argument	"sizeof ( ""_soap_version"" ) - 1"		1995644	2					
ANR	1995843	AdditiveExpression	"sizeof ( ""_soap_version"" ) - 1"		1995644	0		-			
ANR	1995844	SizeofExpression	"sizeof ( ""_soap_version"" )"		1995644	0					
ANR	1995845	Sizeof	sizeof		1995644	0					
ANR	1995846	PrimaryExpression	"""_soap_version"""		1995644	1					
ANR	1995847	PrimaryExpression	1		1995644	1					
ANR	1995848	Identifier	NULL		1995644	1					
ANR	1995849	AndExpression	Z_TYPE_P ( tmp ) == IS_LONG && Z_LVAL_P ( tmp ) == SOAP_1_2		1995644	1		&&			
ANR	1995850	EqualityExpression	Z_TYPE_P ( tmp ) == IS_LONG		1995644	0		==			
ANR	1995851	CallExpression	Z_TYPE_P ( tmp )		1995644	0					
ANR	1995852	Callee	Z_TYPE_P		1995644	0					
ANR	1995853	Identifier	Z_TYPE_P		1995644	0					
ANR	1995854	ArgumentList	tmp		1995644	1					
ANR	1995855	Argument	tmp		1995644	0					
ANR	1995856	Identifier	tmp		1995644	0					
ANR	1995857	Identifier	IS_LONG		1995644	1					
ANR	1995858	EqualityExpression	Z_LVAL_P ( tmp ) == SOAP_1_2		1995644	1		==			
ANR	1995859	CallExpression	Z_LVAL_P ( tmp )		1995644	0					
ANR	1995860	Callee	Z_LVAL_P		1995644	0					
ANR	1995861	Identifier	Z_LVAL_P		1995644	0					
ANR	1995862	ArgumentList	tmp		1995644	1					
ANR	1995863	Argument	tmp		1995644	0					
ANR	1995864	Identifier	tmp		1995644	0					
ANR	1995865	Identifier	SOAP_1_2		1995644	1					
ANR	1995866	CompoundStatement		25:57:895:895	1995644	1					
ANR	1995867	ExpressionStatement	soap_version = SOAP_1_2	2666:2:91471:91494	1995644	0	True				
ANR	1995868	AssignmentExpression	soap_version = SOAP_1_2		1995644	0		=			
ANR	1995869	Identifier	soap_version		1995644	0					
ANR	1995870	Identifier	SOAP_1_2		1995644	1					
ANR	1995871	ElseStatement	else		1995644	0					
ANR	1995872	CompoundStatement		27:8:932:932	1995644	0					
ANR	1995873	ExpressionStatement	soap_version = SOAP_1_1	2668:2:91508:91531	1995644	0	True				
ANR	1995874	AssignmentExpression	soap_version = SOAP_1_1		1995644	0		=			
ANR	1995875	Identifier	soap_version		1995644	0					
ANR	1995876	Identifier	SOAP_1_1		1995644	1					
ANR	1995877	IfStatement	if ( location == NULL )		1995644	17					
ANR	1995878	Condition	location == NULL	2671:5:91542:91557	1995644	0	True				
ANR	1995879	EqualityExpression	location == NULL		1995644	0		==			
ANR	1995880	Identifier	location		1995644	0					
ANR	1995881	Identifier	NULL		1995644	1					
ANR	1995882	CompoundStatement		31:23:988:988	1995644	1					
ANR	1995883	IfStatement	"if ( ( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""location"" , sizeof ( ""location"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING )"		1995644	0					
ANR	1995884	Condition	"( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""location"" , sizeof ( ""location"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"	2672:6:91568:91694	1995644	0	True				
ANR	1995885	AndExpression	"( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""location"" , sizeof ( ""location"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"		1995644	0		&&			
ANR	1995886	EqualityExpression	"( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""location"" , sizeof ( ""location"" ) - 1 ) ) != NULL"		1995644	0		!=			
ANR	1995887	AssignmentExpression	"tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""location"" , sizeof ( ""location"" ) - 1 )"		1995644	0		=			
ANR	1995888	Identifier	tmp		1995644	0					
ANR	1995889	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""location"" , sizeof ( ""location"" ) - 1 )"		1995644	1					
ANR	1995890	Callee	zend_hash_str_find		1995644	0					
ANR	1995891	Identifier	zend_hash_str_find		1995644	0					
ANR	1995892	ArgumentList	Z_OBJPROP_P ( this_ptr )		1995644	1					
ANR	1995893	Argument	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1995894	CallExpression	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1995895	Callee	Z_OBJPROP_P		1995644	0					
ANR	1995896	Identifier	Z_OBJPROP_P		1995644	0					
ANR	1995897	ArgumentList	this_ptr		1995644	1					
ANR	1995898	Argument	this_ptr		1995644	0					
ANR	1995899	Identifier	this_ptr		1995644	0					
ANR	1995900	Argument	"""location"""		1995644	1					
ANR	1995901	PrimaryExpression	"""location"""		1995644	0					
ANR	1995902	Argument	"sizeof ( ""location"" ) - 1"		1995644	2					
ANR	1995903	AdditiveExpression	"sizeof ( ""location"" ) - 1"		1995644	0		-			
ANR	1995904	SizeofExpression	"sizeof ( ""location"" )"		1995644	0					
ANR	1995905	Sizeof	sizeof		1995644	0					
ANR	1995906	PrimaryExpression	"""location"""		1995644	1					
ANR	1995907	PrimaryExpression	1		1995644	1					
ANR	1995908	Identifier	NULL		1995644	1					
ANR	1995909	EqualityExpression	Z_TYPE_P ( tmp ) == IS_STRING		1995644	1		==			
ANR	1995910	CallExpression	Z_TYPE_P ( tmp )		1995644	0					
ANR	1995911	Callee	Z_TYPE_P		1995644	0					
ANR	1995912	Identifier	Z_TYPE_P		1995644	0					
ANR	1995913	ArgumentList	tmp		1995644	1					
ANR	1995914	Argument	tmp		1995644	0					
ANR	1995915	Identifier	tmp		1995644	0					
ANR	1995916	Identifier	IS_STRING		1995644	1					
ANR	1995917	CompoundStatement		33:34:1125:1125	1995644	1					
ANR	1995918	ExpressionStatement	location = Z_STRVAL_P ( tmp )	2674:4:91703:91729	1995644	0	True				
ANR	1995919	AssignmentExpression	location = Z_STRVAL_P ( tmp )		1995644	0		=			
ANR	1995920	Identifier	location		1995644	0					
ANR	1995921	CallExpression	Z_STRVAL_P ( tmp )		1995644	1					
ANR	1995922	Callee	Z_STRVAL_P		1995644	0					
ANR	1995923	Identifier	Z_STRVAL_P		1995644	0					
ANR	1995924	ArgumentList	tmp		1995644	1					
ANR	1995925	Argument	tmp		1995644	0					
ANR	1995926	Identifier	tmp		1995644	0					
ANR	1995927	IfStatement	"if ( FIND_SDL_PROPERTY ( this_ptr , tmp ) != NULL )"		1995644	18					
ANR	1995928	Condition	"FIND_SDL_PROPERTY ( this_ptr , tmp ) != NULL"	2678:5:91744:91782	1995644	0	True				
ANR	1995929	EqualityExpression	"FIND_SDL_PROPERTY ( this_ptr , tmp ) != NULL"		1995644	0		!=			
ANR	1995930	CallExpression	"FIND_SDL_PROPERTY ( this_ptr , tmp )"		1995644	0					
ANR	1995931	Callee	FIND_SDL_PROPERTY		1995644	0					
ANR	1995932	Identifier	FIND_SDL_PROPERTY		1995644	0					
ANR	1995933	ArgumentList	this_ptr		1995644	1					
ANR	1995934	Argument	this_ptr		1995644	0					
ANR	1995935	Identifier	this_ptr		1995644	0					
ANR	1995936	Argument	tmp		1995644	1					
ANR	1995937	Identifier	tmp		1995644	0					
ANR	1995938	Identifier	NULL		1995644	1					
ANR	1995939	CompoundStatement		38:46:1213:1213	1995644	1					
ANR	1995940	ExpressionStatement	"FETCH_SDL_RES ( sdl , tmp )"	2679:2:91789:91811	1995644	0	True				
ANR	1995941	CallExpression	"FETCH_SDL_RES ( sdl , tmp )"		1995644	0					
ANR	1995942	Callee	FETCH_SDL_RES		1995644	0					
ANR	1995943	Identifier	FETCH_SDL_RES		1995644	0					
ANR	1995944	ArgumentList	sdl		1995644	1					
ANR	1995945	Argument	sdl		1995644	0					
ANR	1995946	Identifier	sdl		1995644	0					
ANR	1995947	Argument	tmp		1995644	1					
ANR	1995948	Identifier	tmp		1995644	0					
ANR	1995949	IfStatement	"if ( FIND_TYPEMAP_PROPERTY ( this_ptr , tmp ) != NULL )"		1995644	19					
ANR	1995950	Condition	"FIND_TYPEMAP_PROPERTY ( this_ptr , tmp ) != NULL"	2681:5:91821:91863	1995644	0	True				
ANR	1995951	EqualityExpression	"FIND_TYPEMAP_PROPERTY ( this_ptr , tmp ) != NULL"		1995644	0		!=			
ANR	1995952	CallExpression	"FIND_TYPEMAP_PROPERTY ( this_ptr , tmp )"		1995644	0					
ANR	1995953	Callee	FIND_TYPEMAP_PROPERTY		1995644	0					
ANR	1995954	Identifier	FIND_TYPEMAP_PROPERTY		1995644	0					
ANR	1995955	ArgumentList	this_ptr		1995644	1					
ANR	1995956	Argument	this_ptr		1995644	0					
ANR	1995957	Identifier	this_ptr		1995644	0					
ANR	1995958	Argument	tmp		1995644	1					
ANR	1995959	Identifier	tmp		1995644	0					
ANR	1995960	Identifier	NULL		1995644	1					
ANR	1995961	CompoundStatement		41:50:1294:1294	1995644	1					
ANR	1995962	ExpressionStatement	"FETCH_TYPEMAP_RES ( typemap , tmp )"	2682:2:91870:91900	1995644	0	True				
ANR	1995963	CallExpression	"FETCH_TYPEMAP_RES ( typemap , tmp )"		1995644	0					
ANR	1995964	Callee	FETCH_TYPEMAP_RES		1995644	0					
ANR	1995965	Identifier	FETCH_TYPEMAP_RES		1995644	0					
ANR	1995966	ArgumentList	typemap		1995644	1					
ANR	1995967	Argument	typemap		1995644	0					
ANR	1995968	Identifier	typemap		1995644	0					
ANR	1995969	Argument	tmp		1995644	1					
ANR	1995970	Identifier	tmp		1995644	0					
ANR	1995971	ExpressionStatement	clear_soap_fault ( this_ptr )	2685:2:91908:91934	1995644	20	True				
ANR	1995972	CallExpression	clear_soap_fault ( this_ptr )		1995644	0					
ANR	1995973	Callee	clear_soap_fault		1995644	0					
ANR	1995974	Identifier	clear_soap_fault		1995644	0					
ANR	1995975	ArgumentList	this_ptr		1995644	1					
ANR	1995976	Argument	this_ptr		1995644	0					
ANR	1995977	Identifier	this_ptr		1995644	0					
ANR	1995978	ExpressionStatement	SOAP_GLOBAL ( soap_version ) = soap_version	2687:1:91938:91978	1995644	21	True				
ANR	1995979	AssignmentExpression	SOAP_GLOBAL ( soap_version ) = soap_version		1995644	0		=			
ANR	1995980	CallExpression	SOAP_GLOBAL ( soap_version )		1995644	0					
ANR	1995981	Callee	SOAP_GLOBAL		1995644	0					
ANR	1995982	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1995983	ArgumentList	soap_version		1995644	1					
ANR	1995984	Argument	soap_version		1995644	0					
ANR	1995985	Identifier	soap_version		1995644	0					
ANR	1995986	Identifier	soap_version		1995644	1					
ANR	1995987	ExpressionStatement	old_sdl = SOAP_GLOBAL ( sdl )	2688:1:91981:92007	1995644	22	True				
ANR	1995988	AssignmentExpression	old_sdl = SOAP_GLOBAL ( sdl )		1995644	0		=			
ANR	1995989	Identifier	old_sdl		1995644	0					
ANR	1995990	CallExpression	SOAP_GLOBAL ( sdl )		1995644	1					
ANR	1995991	Callee	SOAP_GLOBAL		1995644	0					
ANR	1995992	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1995993	ArgumentList	sdl		1995644	1					
ANR	1995994	Argument	sdl		1995644	0					
ANR	1995995	Identifier	sdl		1995644	0					
ANR	1995996	ExpressionStatement	SOAP_GLOBAL ( sdl ) = sdl	2689:1:92010:92032	1995644	23	True				
ANR	1995997	AssignmentExpression	SOAP_GLOBAL ( sdl ) = sdl		1995644	0		=			
ANR	1995998	CallExpression	SOAP_GLOBAL ( sdl )		1995644	0					
ANR	1995999	Callee	SOAP_GLOBAL		1995644	0					
ANR	1996000	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1996001	ArgumentList	sdl		1995644	1					
ANR	1996002	Argument	sdl		1995644	0					
ANR	1996003	Identifier	sdl		1995644	0					
ANR	1996004	Identifier	sdl		1995644	1					
ANR	1996005	ExpressionStatement	old_encoding = SOAP_GLOBAL ( encoding )	2690:1:92035:92071	1995644	24	True				
ANR	1996006	AssignmentExpression	old_encoding = SOAP_GLOBAL ( encoding )		1995644	0		=			
ANR	1996007	Identifier	old_encoding		1995644	0					
ANR	1996008	CallExpression	SOAP_GLOBAL ( encoding )		1995644	1					
ANR	1996009	Callee	SOAP_GLOBAL		1995644	0					
ANR	1996010	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1996011	ArgumentList	encoding		1995644	1					
ANR	1996012	Argument	encoding		1995644	0					
ANR	1996013	Identifier	encoding		1995644	0					
ANR	1996014	IfStatement	"if ( ( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_encoding"" , sizeof ( ""_encoding"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING )"		1995644	25					
ANR	1996015	Condition	"( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_encoding"" , sizeof ( ""_encoding"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"	2691:5:92078:92205	1995644	0	True				
ANR	1996016	AndExpression	"( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_encoding"" , sizeof ( ""_encoding"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"		1995644	0		&&			
ANR	1996017	EqualityExpression	"( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_encoding"" , sizeof ( ""_encoding"" ) - 1 ) ) != NULL"		1995644	0		!=			
ANR	1996018	AssignmentExpression	"tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_encoding"" , sizeof ( ""_encoding"" ) - 1 )"		1995644	0		=			
ANR	1996019	Identifier	tmp		1995644	0					
ANR	1996020	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_encoding"" , sizeof ( ""_encoding"" ) - 1 )"		1995644	1					
ANR	1996021	Callee	zend_hash_str_find		1995644	0					
ANR	1996022	Identifier	zend_hash_str_find		1995644	0					
ANR	1996023	ArgumentList	Z_OBJPROP_P ( this_ptr )		1995644	1					
ANR	1996024	Argument	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1996025	CallExpression	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1996026	Callee	Z_OBJPROP_P		1995644	0					
ANR	1996027	Identifier	Z_OBJPROP_P		1995644	0					
ANR	1996028	ArgumentList	this_ptr		1995644	1					
ANR	1996029	Argument	this_ptr		1995644	0					
ANR	1996030	Identifier	this_ptr		1995644	0					
ANR	1996031	Argument	"""_encoding"""		1995644	1					
ANR	1996032	PrimaryExpression	"""_encoding"""		1995644	0					
ANR	1996033	Argument	"sizeof ( ""_encoding"" ) - 1"		1995644	2					
ANR	1996034	AdditiveExpression	"sizeof ( ""_encoding"" ) - 1"		1995644	0		-			
ANR	1996035	SizeofExpression	"sizeof ( ""_encoding"" )"		1995644	0					
ANR	1996036	Sizeof	sizeof		1995644	0					
ANR	1996037	PrimaryExpression	"""_encoding"""		1995644	1					
ANR	1996038	PrimaryExpression	1		1995644	1					
ANR	1996039	Identifier	NULL		1995644	1					
ANR	1996040	EqualityExpression	Z_TYPE_P ( tmp ) == IS_STRING		1995644	1		==			
ANR	1996041	CallExpression	Z_TYPE_P ( tmp )		1995644	0					
ANR	1996042	Callee	Z_TYPE_P		1995644	0					
ANR	1996043	Identifier	Z_TYPE_P		1995644	0					
ANR	1996044	ArgumentList	tmp		1995644	1					
ANR	1996045	Argument	tmp		1995644	0					
ANR	1996046	Identifier	tmp		1995644	0					
ANR	1996047	Identifier	IS_STRING		1995644	1					
ANR	1996048	CompoundStatement		52:33:1636:1636	1995644	1					
ANR	1996049	ExpressionStatement	SOAP_GLOBAL ( encoding ) = xmlFindCharEncodingHandler ( Z_STRVAL_P ( tmp ) )	2693:2:92212:92279	1995644	0	True				
ANR	1996050	AssignmentExpression	SOAP_GLOBAL ( encoding ) = xmlFindCharEncodingHandler ( Z_STRVAL_P ( tmp ) )		1995644	0		=			
ANR	1996051	CallExpression	SOAP_GLOBAL ( encoding )		1995644	0					
ANR	1996052	Callee	SOAP_GLOBAL		1995644	0					
ANR	1996053	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1996054	ArgumentList	encoding		1995644	1					
ANR	1996055	Argument	encoding		1995644	0					
ANR	1996056	Identifier	encoding		1995644	0					
ANR	1996057	CallExpression	xmlFindCharEncodingHandler ( Z_STRVAL_P ( tmp ) )		1995644	1					
ANR	1996058	Callee	xmlFindCharEncodingHandler		1995644	0					
ANR	1996059	Identifier	xmlFindCharEncodingHandler		1995644	0					
ANR	1996060	ArgumentList	Z_STRVAL_P ( tmp )		1995644	1					
ANR	1996061	Argument	Z_STRVAL_P ( tmp )		1995644	0					
ANR	1996062	CallExpression	Z_STRVAL_P ( tmp )		1995644	0					
ANR	1996063	Callee	Z_STRVAL_P		1995644	0					
ANR	1996064	Identifier	Z_STRVAL_P		1995644	0					
ANR	1996065	ArgumentList	tmp		1995644	1					
ANR	1996066	Argument	tmp		1995644	0					
ANR	1996067	Identifier	tmp		1995644	0					
ANR	1996068	ElseStatement	else		1995644	0					
ANR	1996069	CompoundStatement		54:8:1717:1717	1995644	0					
ANR	1996070	ExpressionStatement	SOAP_GLOBAL ( encoding ) = NULL	2695:2:92293:92321	1995644	0	True				
ANR	1996071	AssignmentExpression	SOAP_GLOBAL ( encoding ) = NULL		1995644	0		=			
ANR	1996072	CallExpression	SOAP_GLOBAL ( encoding )		1995644	0					
ANR	1996073	Callee	SOAP_GLOBAL		1995644	0					
ANR	1996074	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1996075	ArgumentList	encoding		1995644	1					
ANR	1996076	Argument	encoding		1995644	0					
ANR	1996077	Identifier	encoding		1995644	0					
ANR	1996078	Identifier	NULL		1995644	1					
ANR	1996079	ExpressionStatement	old_class_map = SOAP_GLOBAL ( class_map )	2697:1:92327:92365	1995644	26	True				
ANR	1996080	AssignmentExpression	old_class_map = SOAP_GLOBAL ( class_map )		1995644	0		=			
ANR	1996081	Identifier	old_class_map		1995644	0					
ANR	1996082	CallExpression	SOAP_GLOBAL ( class_map )		1995644	1					
ANR	1996083	Callee	SOAP_GLOBAL		1995644	0					
ANR	1996084	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1996085	ArgumentList	class_map		1995644	1					
ANR	1996086	Argument	class_map		1995644	0					
ANR	1996087	Identifier	class_map		1995644	0					
ANR	1996088	IfStatement	"if ( ( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_classmap"" , sizeof ( ""_classmap"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_ARRAY )"		1995644	27					
ANR	1996089	Condition	"( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_classmap"" , sizeof ( ""_classmap"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_ARRAY"	2698:5:92372:92498	1995644	0	True				
ANR	1996090	AndExpression	"( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_classmap"" , sizeof ( ""_classmap"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_ARRAY"		1995644	0		&&			
ANR	1996091	EqualityExpression	"( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_classmap"" , sizeof ( ""_classmap"" ) - 1 ) ) != NULL"		1995644	0		!=			
ANR	1996092	AssignmentExpression	"tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_classmap"" , sizeof ( ""_classmap"" ) - 1 )"		1995644	0		=			
ANR	1996093	Identifier	tmp		1995644	0					
ANR	1996094	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_classmap"" , sizeof ( ""_classmap"" ) - 1 )"		1995644	1					
ANR	1996095	Callee	zend_hash_str_find		1995644	0					
ANR	1996096	Identifier	zend_hash_str_find		1995644	0					
ANR	1996097	ArgumentList	Z_OBJPROP_P ( this_ptr )		1995644	1					
ANR	1996098	Argument	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1996099	CallExpression	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1996100	Callee	Z_OBJPROP_P		1995644	0					
ANR	1996101	Identifier	Z_OBJPROP_P		1995644	0					
ANR	1996102	ArgumentList	this_ptr		1995644	1					
ANR	1996103	Argument	this_ptr		1995644	0					
ANR	1996104	Identifier	this_ptr		1995644	0					
ANR	1996105	Argument	"""_classmap"""		1995644	1					
ANR	1996106	PrimaryExpression	"""_classmap"""		1995644	0					
ANR	1996107	Argument	"sizeof ( ""_classmap"" ) - 1"		1995644	2					
ANR	1996108	AdditiveExpression	"sizeof ( ""_classmap"" ) - 1"		1995644	0		-			
ANR	1996109	SizeofExpression	"sizeof ( ""_classmap"" )"		1995644	0					
ANR	1996110	Sizeof	sizeof		1995644	0					
ANR	1996111	PrimaryExpression	"""_classmap"""		1995644	1					
ANR	1996112	PrimaryExpression	1		1995644	1					
ANR	1996113	Identifier	NULL		1995644	1					
ANR	1996114	EqualityExpression	Z_TYPE_P ( tmp ) == IS_ARRAY		1995644	1		==			
ANR	1996115	CallExpression	Z_TYPE_P ( tmp )		1995644	0					
ANR	1996116	Callee	Z_TYPE_P		1995644	0					
ANR	1996117	Identifier	Z_TYPE_P		1995644	0					
ANR	1996118	ArgumentList	tmp		1995644	1					
ANR	1996119	Argument	tmp		1995644	0					
ANR	1996120	Identifier	tmp		1995644	0					
ANR	1996121	Identifier	IS_ARRAY		1995644	1					
ANR	1996122	CompoundStatement		59:32:1929:1929	1995644	1					
ANR	1996123	ExpressionStatement	SOAP_GLOBAL ( class_map ) = Z_ARRVAL_P ( tmp )	2700:2:92505:92545	1995644	0	True				
ANR	1996124	AssignmentExpression	SOAP_GLOBAL ( class_map ) = Z_ARRVAL_P ( tmp )		1995644	0		=			
ANR	1996125	CallExpression	SOAP_GLOBAL ( class_map )		1995644	0					
ANR	1996126	Callee	SOAP_GLOBAL		1995644	0					
ANR	1996127	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1996128	ArgumentList	class_map		1995644	1					
ANR	1996129	Argument	class_map		1995644	0					
ANR	1996130	Identifier	class_map		1995644	0					
ANR	1996131	CallExpression	Z_ARRVAL_P ( tmp )		1995644	1					
ANR	1996132	Callee	Z_ARRVAL_P		1995644	0					
ANR	1996133	Identifier	Z_ARRVAL_P		1995644	0					
ANR	1996134	ArgumentList	tmp		1995644	1					
ANR	1996135	Argument	tmp		1995644	0					
ANR	1996136	Identifier	tmp		1995644	0					
ANR	1996137	ElseStatement	else		1995644	0					
ANR	1996138	CompoundStatement		61:8:1983:1983	1995644	0					
ANR	1996139	ExpressionStatement	SOAP_GLOBAL ( class_map ) = NULL	2702:2:92559:92588	1995644	0	True				
ANR	1996140	AssignmentExpression	SOAP_GLOBAL ( class_map ) = NULL		1995644	0		=			
ANR	1996141	CallExpression	SOAP_GLOBAL ( class_map )		1995644	0					
ANR	1996142	Callee	SOAP_GLOBAL		1995644	0					
ANR	1996143	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1996144	ArgumentList	class_map		1995644	1					
ANR	1996145	Argument	class_map		1995644	0					
ANR	1996146	Identifier	class_map		1995644	0					
ANR	1996147	Identifier	NULL		1995644	1					
ANR	1996148	ExpressionStatement	old_typemap = SOAP_GLOBAL ( typemap )	2704:1:92594:92628	1995644	28	True				
ANR	1996149	AssignmentExpression	old_typemap = SOAP_GLOBAL ( typemap )		1995644	0		=			
ANR	1996150	Identifier	old_typemap		1995644	0					
ANR	1996151	CallExpression	SOAP_GLOBAL ( typemap )		1995644	1					
ANR	1996152	Callee	SOAP_GLOBAL		1995644	0					
ANR	1996153	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1996154	ArgumentList	typemap		1995644	1					
ANR	1996155	Argument	typemap		1995644	0					
ANR	1996156	Identifier	typemap		1995644	0					
ANR	1996157	ExpressionStatement	SOAP_GLOBAL ( typemap ) = typemap	2705:1:92631:92661	1995644	29	True				
ANR	1996158	AssignmentExpression	SOAP_GLOBAL ( typemap ) = typemap		1995644	0		=			
ANR	1996159	CallExpression	SOAP_GLOBAL ( typemap )		1995644	0					
ANR	1996160	Callee	SOAP_GLOBAL		1995644	0					
ANR	1996161	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1996162	ArgumentList	typemap		1995644	1					
ANR	1996163	Argument	typemap		1995644	0					
ANR	1996164	Identifier	typemap		1995644	0					
ANR	1996165	Identifier	typemap		1995644	1					
ANR	1996166	ExpressionStatement	old_features = SOAP_GLOBAL ( features )	2706:1:92664:92700	1995644	30	True				
ANR	1996167	AssignmentExpression	old_features = SOAP_GLOBAL ( features )		1995644	0		=			
ANR	1996168	Identifier	old_features		1995644	0					
ANR	1996169	CallExpression	SOAP_GLOBAL ( features )		1995644	1					
ANR	1996170	Callee	SOAP_GLOBAL		1995644	0					
ANR	1996171	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1996172	ArgumentList	features		1995644	1					
ANR	1996173	Argument	features		1995644	0					
ANR	1996174	Identifier	features		1995644	0					
ANR	1996175	IfStatement	"if ( ( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_features"" , sizeof ( ""_features"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_LONG )"		1995644	31					
ANR	1996176	Condition	"( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_features"" , sizeof ( ""_features"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_LONG"	2707:5:92707:92832	1995644	0	True				
ANR	1996177	AndExpression	"( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_features"" , sizeof ( ""_features"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_LONG"		1995644	0		&&			
ANR	1996178	EqualityExpression	"( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_features"" , sizeof ( ""_features"" ) - 1 ) ) != NULL"		1995644	0		!=			
ANR	1996179	AssignmentExpression	"tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_features"" , sizeof ( ""_features"" ) - 1 )"		1995644	0		=			
ANR	1996180	Identifier	tmp		1995644	0					
ANR	1996181	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_features"" , sizeof ( ""_features"" ) - 1 )"		1995644	1					
ANR	1996182	Callee	zend_hash_str_find		1995644	0					
ANR	1996183	Identifier	zend_hash_str_find		1995644	0					
ANR	1996184	ArgumentList	Z_OBJPROP_P ( this_ptr )		1995644	1					
ANR	1996185	Argument	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1996186	CallExpression	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1996187	Callee	Z_OBJPROP_P		1995644	0					
ANR	1996188	Identifier	Z_OBJPROP_P		1995644	0					
ANR	1996189	ArgumentList	this_ptr		1995644	1					
ANR	1996190	Argument	this_ptr		1995644	0					
ANR	1996191	Identifier	this_ptr		1995644	0					
ANR	1996192	Argument	"""_features"""		1995644	1					
ANR	1996193	PrimaryExpression	"""_features"""		1995644	0					
ANR	1996194	Argument	"sizeof ( ""_features"" ) - 1"		1995644	2					
ANR	1996195	AdditiveExpression	"sizeof ( ""_features"" ) - 1"		1995644	0		-			
ANR	1996196	SizeofExpression	"sizeof ( ""_features"" )"		1995644	0					
ANR	1996197	Sizeof	sizeof		1995644	0					
ANR	1996198	PrimaryExpression	"""_features"""		1995644	1					
ANR	1996199	PrimaryExpression	1		1995644	1					
ANR	1996200	Identifier	NULL		1995644	1					
ANR	1996201	EqualityExpression	Z_TYPE_P ( tmp ) == IS_LONG		1995644	1		==			
ANR	1996202	CallExpression	Z_TYPE_P ( tmp )		1995644	0					
ANR	1996203	Callee	Z_TYPE_P		1995644	0					
ANR	1996204	Identifier	Z_TYPE_P		1995644	0					
ANR	1996205	ArgumentList	tmp		1995644	1					
ANR	1996206	Argument	tmp		1995644	0					
ANR	1996207	Identifier	tmp		1995644	0					
ANR	1996208	Identifier	IS_LONG		1995644	1					
ANR	1996209	CompoundStatement		68:31:2263:2263	1995644	1					
ANR	1996210	ExpressionStatement	SOAP_GLOBAL ( features ) = Z_LVAL_P ( tmp )	2709:2:92839:92876	1995644	0	True				
ANR	1996211	AssignmentExpression	SOAP_GLOBAL ( features ) = Z_LVAL_P ( tmp )		1995644	0		=			
ANR	1996212	CallExpression	SOAP_GLOBAL ( features )		1995644	0					
ANR	1996213	Callee	SOAP_GLOBAL		1995644	0					
ANR	1996214	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1996215	ArgumentList	features		1995644	1					
ANR	1996216	Argument	features		1995644	0					
ANR	1996217	Identifier	features		1995644	0					
ANR	1996218	CallExpression	Z_LVAL_P ( tmp )		1995644	1					
ANR	1996219	Callee	Z_LVAL_P		1995644	0					
ANR	1996220	Identifier	Z_LVAL_P		1995644	0					
ANR	1996221	ArgumentList	tmp		1995644	1					
ANR	1996222	Argument	tmp		1995644	0					
ANR	1996223	Identifier	tmp		1995644	0					
ANR	1996224	ElseStatement	else		1995644	0					
ANR	1996225	CompoundStatement		70:8:2314:2314	1995644	0					
ANR	1996226	ExpressionStatement	SOAP_GLOBAL ( features ) = 0	2711:2:92890:92915	1995644	0	True				
ANR	1996227	AssignmentExpression	SOAP_GLOBAL ( features ) = 0		1995644	0		=			
ANR	1996228	CallExpression	SOAP_GLOBAL ( features )		1995644	0					
ANR	1996229	Callee	SOAP_GLOBAL		1995644	0					
ANR	1996230	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1996231	ArgumentList	features		1995644	1					
ANR	1996232	Argument	features		1995644	0					
ANR	1996233	Identifier	features		1995644	0					
ANR	1996234	PrimaryExpression	0		1995644	1					
ANR	1996235	Statement	zend_try	2714:1:92922:92929	1995644	32	True				
ANR	1996236	CompoundStatement		74:10:2359:2359	1995644	33					
ANR	1996237	IfStatement	if ( sdl != NULL )		1995644	0					
ANR	1996238	Condition	sdl != NULL	2715:7:92940:92950	1995644	0	True				
ANR	1996239	EqualityExpression	sdl != NULL		1995644	0		!=			
ANR	1996240	Identifier	sdl		1995644	0					
ANR	1996241	Identifier	NULL		1995644	1					
ANR	1996242	CompoundStatement		75:20:2381:2381	1995644	1					
ANR	1996243	ExpressionStatement	"fn = get_function ( sdl , function )"	2716:4:92959:92991	1995644	0	True				
ANR	1996244	AssignmentExpression	"fn = get_function ( sdl , function )"		1995644	0		=			
ANR	1996245	Identifier	fn		1995644	0					
ANR	1996246	CallExpression	"get_function ( sdl , function )"		1995644	1					
ANR	1996247	Callee	get_function		1995644	0					
ANR	1996248	Identifier	get_function		1995644	0					
ANR	1996249	ArgumentList	sdl		1995644	1					
ANR	1996250	Argument	sdl		1995644	0					
ANR	1996251	Identifier	sdl		1995644	0					
ANR	1996252	Argument	function		1995644	1					
ANR	1996253	Identifier	function		1995644	0					
ANR	1996254	IfStatement	if ( fn != NULL )		1995644	1					
ANR	1996255	Condition	fn != NULL	2717:8:93001:93010	1995644	0	True				
ANR	1996256	EqualityExpression	fn != NULL		1995644	0		!=			
ANR	1996257	Identifier	fn		1995644	0					
ANR	1996258	Identifier	NULL		1995644	1					
ANR	1996259	CompoundStatement		79:4:2488:2503	1995644	1					
ANR	1996260	IdentifierDeclStatement	sdlBindingPtr binding = fn -> binding ;	2718:4:93019:93054	1995644	0	True				
ANR	1996261	IdentifierDecl	binding = fn -> binding		1995644	0					
ANR	1996262	IdentifierDeclType	sdlBindingPtr		1995644	0					
ANR	1996263	Identifier	binding		1995644	1					
ANR	1996264	AssignmentExpression	binding = fn -> binding		1995644	2		=			
ANR	1996265	Identifier	binding		1995644	0					
ANR	1996266	PtrMemberAccess	fn -> binding		1995644	1					
ANR	1996267	Identifier	fn		1995644	0					
ANR	1996268	Identifier	binding		1995644	1					
ANR	1996269	IdentifierDeclStatement	int one_way = 0 ;	2719:4:93060:93075	1995644	1	True				
ANR	1996270	IdentifierDecl	one_way = 0		1995644	0					
ANR	1996271	IdentifierDeclType	int		1995644	0					
ANR	1996272	Identifier	one_way		1995644	1					
ANR	1996273	AssignmentExpression	one_way = 0		1995644	2		=			
ANR	1996274	Identifier	one_way		1995644	0					
ANR	1996275	PrimaryExpression	0		1995644	1					
ANR	1996276	IfStatement	if ( fn -> responseName == NULL && fn -> responseParameters == NULL && soap_headers == NULL )		1995644	2					
ANR	1996277	Condition	fn -> responseName == NULL && fn -> responseParameters == NULL && soap_headers == NULL	2721:8:93086:93183	1995644	0	True				
ANR	1996278	AndExpression	fn -> responseName == NULL && fn -> responseParameters == NULL && soap_headers == NULL		1995644	0		&&			
ANR	1996279	EqualityExpression	fn -> responseName == NULL		1995644	0		==			
ANR	1996280	PtrMemberAccess	fn -> responseName		1995644	0					
ANR	1996281	Identifier	fn		1995644	0					
ANR	1996282	Identifier	responseName		1995644	1					
ANR	1996283	Identifier	NULL		1995644	1					
ANR	1996284	AndExpression	fn -> responseParameters == NULL && soap_headers == NULL		1995644	1		&&			
ANR	1996285	EqualityExpression	fn -> responseParameters == NULL		1995644	0		==			
ANR	1996286	PtrMemberAccess	fn -> responseParameters		1995644	0					
ANR	1996287	Identifier	fn		1995644	0					
ANR	1996288	Identifier	responseParameters		1995644	1					
ANR	1996289	Identifier	NULL		1995644	1					
ANR	1996290	EqualityExpression	soap_headers == NULL		1995644	1		==			
ANR	1996291	Identifier	soap_headers		1995644	0					
ANR	1996292	Identifier	NULL		1995644	1					
ANR	1996293	CompoundStatement		83:30:2614:2614	1995644	1					
ANR	1996294	ExpressionStatement	one_way = 1	2724:5:93193:93204	1995644	0	True				
ANR	1996295	AssignmentExpression	one_way = 1		1995644	0		=			
ANR	1996296	Identifier	one_way		1995644	0					
ANR	1996297	PrimaryExpression	1		1995644	1					
ANR	1996298	IfStatement	if ( location == NULL )		1995644	3					
ANR	1996299	Condition	location == NULL	2727:8:93221:93236	1995644	0	True				
ANR	1996300	EqualityExpression	location == NULL		1995644	0		==			
ANR	1996301	Identifier	location		1995644	0					
ANR	1996302	Identifier	NULL		1995644	1					
ANR	1996303	CompoundStatement		87:26:2667:2667	1995644	1					
ANR	1996304	ExpressionStatement	location = binding -> location	2728:5:93246:93274	1995644	0	True				
ANR	1996305	AssignmentExpression	location = binding -> location		1995644	0		=			
ANR	1996306	Identifier	location		1995644	0					
ANR	1996307	PtrMemberAccess	binding -> location		1995644	1					
ANR	1996308	Identifier	binding		1995644	0					
ANR	1996309	Identifier	location		1995644	1					
ANR	1996310	IfStatement	if ( binding -> bindingType == BINDING_SOAP )		1995644	4					
ANR	1996311	Condition	binding -> bindingType == BINDING_SOAP	2730:8:93290:93325	1995644	0	True				
ANR	1996312	EqualityExpression	binding -> bindingType == BINDING_SOAP		1995644	0		==			
ANR	1996313	PtrMemberAccess	binding -> bindingType		1995644	0					
ANR	1996314	Identifier	binding		1995644	0					
ANR	1996315	Identifier	bindingType		1995644	1					
ANR	1996316	Identifier	BINDING_SOAP		1995644	1					
ANR	1996317	CompoundStatement		91:5:2763:2843	1995644	1					
ANR	1996318	IdentifierDeclStatement	sdlSoapBindingFunctionPtr fnb = ( sdlSoapBindingFunctionPtr ) fn -> bindingAttributes ;	2731:5:93335:93415	1995644	0	True				
ANR	1996319	IdentifierDecl	fnb = ( sdlSoapBindingFunctionPtr ) fn -> bindingAttributes		1995644	0					
ANR	1996320	IdentifierDeclType	sdlSoapBindingFunctionPtr		1995644	0					
ANR	1996321	Identifier	fnb		1995644	1					
ANR	1996322	AssignmentExpression	fnb = ( sdlSoapBindingFunctionPtr ) fn -> bindingAttributes		1995644	2		=			
ANR	1996323	Identifier	fnb		1995644	0					
ANR	1996324	CastExpression	( sdlSoapBindingFunctionPtr ) fn -> bindingAttributes		1995644	1					
ANR	1996325	CastTarget	sdlSoapBindingFunctionPtr		1995644	0					
ANR	1996326	PtrMemberAccess	fn -> bindingAttributes		1995644	1					
ANR	1996327	Identifier	fn		1995644	0					
ANR	1996328	Identifier	bindingAttributes		1995644	1					
ANR	1996329	ExpressionStatement	"request = serialize_function_call ( this_ptr , fn , NULL , fnb -> input . ns , real_args , arg_count , soap_version , soap_headers )"	2732:6:93423:93541	1995644	1	True				
ANR	1996330	AssignmentExpression	"request = serialize_function_call ( this_ptr , fn , NULL , fnb -> input . ns , real_args , arg_count , soap_version , soap_headers )"		1995644	0		=			
ANR	1996331	Identifier	request		1995644	0					
ANR	1996332	CallExpression	"serialize_function_call ( this_ptr , fn , NULL , fnb -> input . ns , real_args , arg_count , soap_version , soap_headers )"		1995644	1					
ANR	1996333	Callee	serialize_function_call		1995644	0					
ANR	1996334	Identifier	serialize_function_call		1995644	0					
ANR	1996335	ArgumentList	this_ptr		1995644	1					
ANR	1996336	Argument	this_ptr		1995644	0					
ANR	1996337	Identifier	this_ptr		1995644	0					
ANR	1996338	Argument	fn		1995644	1					
ANR	1996339	Identifier	fn		1995644	0					
ANR	1996340	Argument	NULL		1995644	2					
ANR	1996341	Identifier	NULL		1995644	0					
ANR	1996342	Argument	fnb -> input . ns		1995644	3					
ANR	1996343	MemberAccess	fnb -> input . ns		1995644	0					
ANR	1996344	PtrMemberAccess	fnb -> input		1995644	0					
ANR	1996345	Identifier	fnb		1995644	0					
ANR	1996346	Identifier	input		1995644	1					
ANR	1996347	Identifier	ns		1995644	1					
ANR	1996348	Argument	real_args		1995644	4					
ANR	1996349	Identifier	real_args		1995644	0					
ANR	1996350	Argument	arg_count		1995644	5					
ANR	1996351	Identifier	arg_count		1995644	0					
ANR	1996352	Argument	soap_version		1995644	6					
ANR	1996353	Identifier	soap_version		1995644	0					
ANR	1996354	Argument	soap_headers		1995644	7					
ANR	1996355	Identifier	soap_headers		1995644	0					
ANR	1996356	ExpressionStatement	"ret = do_request ( this_ptr , request , location , fnb -> soapAction , soap_version , one_way , & response )"	2733:6:93549:93645	1995644	2	True				
ANR	1996357	AssignmentExpression	"ret = do_request ( this_ptr , request , location , fnb -> soapAction , soap_version , one_way , & response )"		1995644	0		=			
ANR	1996358	Identifier	ret		1995644	0					
ANR	1996359	CallExpression	"do_request ( this_ptr , request , location , fnb -> soapAction , soap_version , one_way , & response )"		1995644	1					
ANR	1996360	Callee	do_request		1995644	0					
ANR	1996361	Identifier	do_request		1995644	0					
ANR	1996362	ArgumentList	this_ptr		1995644	1					
ANR	1996363	Argument	this_ptr		1995644	0					
ANR	1996364	Identifier	this_ptr		1995644	0					
ANR	1996365	Argument	request		1995644	1					
ANR	1996366	Identifier	request		1995644	0					
ANR	1996367	Argument	location		1995644	2					
ANR	1996368	Identifier	location		1995644	0					
ANR	1996369	Argument	fnb -> soapAction		1995644	3					
ANR	1996370	PtrMemberAccess	fnb -> soapAction		1995644	0					
ANR	1996371	Identifier	fnb		1995644	0					
ANR	1996372	Identifier	soapAction		1995644	1					
ANR	1996373	Argument	soap_version		1995644	4					
ANR	1996374	Identifier	soap_version		1995644	0					
ANR	1996375	Argument	one_way		1995644	5					
ANR	1996376	Identifier	one_way		1995644	0					
ANR	1996377	Argument	& response		1995644	6					
ANR	1996378	UnaryOperationExpression	& response		1995644	0					
ANR	1996379	UnaryOperator	&		1995644	0					
ANR	1996380	Identifier	response		1995644	1					
ANR	1996381	ElseStatement	else		1995644	0					
ANR	1996382	CompoundStatement		94:12:3087:3087	1995644	0					
ANR	1996383	ExpressionStatement	"request = serialize_function_call ( this_ptr , fn , NULL , sdl -> target_ns , real_args , arg_count , soap_version , soap_headers )"	2735:6:93667:93786	1995644	0	True				
ANR	1996384	AssignmentExpression	"request = serialize_function_call ( this_ptr , fn , NULL , sdl -> target_ns , real_args , arg_count , soap_version , soap_headers )"		1995644	0		=			
ANR	1996385	Identifier	request		1995644	0					
ANR	1996386	CallExpression	"serialize_function_call ( this_ptr , fn , NULL , sdl -> target_ns , real_args , arg_count , soap_version , soap_headers )"		1995644	1					
ANR	1996387	Callee	serialize_function_call		1995644	0					
ANR	1996388	Identifier	serialize_function_call		1995644	0					
ANR	1996389	ArgumentList	this_ptr		1995644	1					
ANR	1996390	Argument	this_ptr		1995644	0					
ANR	1996391	Identifier	this_ptr		1995644	0					
ANR	1996392	Argument	fn		1995644	1					
ANR	1996393	Identifier	fn		1995644	0					
ANR	1996394	Argument	NULL		1995644	2					
ANR	1996395	Identifier	NULL		1995644	0					
ANR	1996396	Argument	sdl -> target_ns		1995644	3					
ANR	1996397	PtrMemberAccess	sdl -> target_ns		1995644	0					
ANR	1996398	Identifier	sdl		1995644	0					
ANR	1996399	Identifier	target_ns		1995644	1					
ANR	1996400	Argument	real_args		1995644	4					
ANR	1996401	Identifier	real_args		1995644	0					
ANR	1996402	Argument	arg_count		1995644	5					
ANR	1996403	Identifier	arg_count		1995644	0					
ANR	1996404	Argument	soap_version		1995644	6					
ANR	1996405	Identifier	soap_version		1995644	0					
ANR	1996406	Argument	soap_headers		1995644	7					
ANR	1996407	Identifier	soap_headers		1995644	0					
ANR	1996408	ExpressionStatement	"ret = do_request ( this_ptr , request , location , NULL , soap_version , one_way , & response )"	2736:6:93794:93879	1995644	1	True				
ANR	1996409	AssignmentExpression	"ret = do_request ( this_ptr , request , location , NULL , soap_version , one_way , & response )"		1995644	0		=			
ANR	1996410	Identifier	ret		1995644	0					
ANR	1996411	CallExpression	"do_request ( this_ptr , request , location , NULL , soap_version , one_way , & response )"		1995644	1					
ANR	1996412	Callee	do_request		1995644	0					
ANR	1996413	Identifier	do_request		1995644	0					
ANR	1996414	ArgumentList	this_ptr		1995644	1					
ANR	1996415	Argument	this_ptr		1995644	0					
ANR	1996416	Identifier	this_ptr		1995644	0					
ANR	1996417	Argument	request		1995644	1					
ANR	1996418	Identifier	request		1995644	0					
ANR	1996419	Argument	location		1995644	2					
ANR	1996420	Identifier	location		1995644	0					
ANR	1996421	Argument	NULL		1995644	3					
ANR	1996422	Identifier	NULL		1995644	0					
ANR	1996423	Argument	soap_version		1995644	4					
ANR	1996424	Identifier	soap_version		1995644	0					
ANR	1996425	Argument	one_way		1995644	5					
ANR	1996426	Identifier	one_way		1995644	0					
ANR	1996427	Argument	& response		1995644	6					
ANR	1996428	UnaryOperationExpression	& response		1995644	0					
ANR	1996429	UnaryOperator	&		1995644	0					
ANR	1996430	Identifier	response		1995644	1					
ANR	1996431	ExpressionStatement	xmlFreeDoc ( request )	2739:4:93893:93912	1995644	5	True				
ANR	1996432	CallExpression	xmlFreeDoc ( request )		1995644	0					
ANR	1996433	Callee	xmlFreeDoc		1995644	0					
ANR	1996434	Identifier	xmlFreeDoc		1995644	0					
ANR	1996435	ArgumentList	request		1995644	1					
ANR	1996436	Argument	request		1995644	0					
ANR	1996437	Identifier	request		1995644	0					
ANR	1996438	ExpressionStatement	request = NULL	2740:4:93918:93932	1995644	6	True				
ANR	1996439	AssignmentExpression	request = NULL		1995644	0		=			
ANR	1996440	Identifier	request		1995644	0					
ANR	1996441	Identifier	NULL		1995644	1					
ANR	1996442	IfStatement	if ( ret && Z_TYPE ( response ) == IS_STRING )		1995644	7					
ANR	1996443	Condition	ret && Z_TYPE ( response ) == IS_STRING	2742:8:93943:93978	1995644	0	True				
ANR	1996444	AndExpression	ret && Z_TYPE ( response ) == IS_STRING		1995644	0		&&			
ANR	1996445	Identifier	ret		1995644	0					
ANR	1996446	EqualityExpression	Z_TYPE ( response ) == IS_STRING		1995644	1		==			
ANR	1996447	CallExpression	Z_TYPE ( response )		1995644	0					
ANR	1996448	Callee	Z_TYPE		1995644	0					
ANR	1996449	Identifier	Z_TYPE		1995644	0					
ANR	1996450	ArgumentList	response		1995644	1					
ANR	1996451	Argument	response		1995644	0					
ANR	1996452	Identifier	response		1995644	0					
ANR	1996453	Identifier	IS_STRING		1995644	1					
ANR	1996454	CompoundStatement		102:46:3409:3409	1995644	1					
ANR	1996455	ExpressionStatement	encode_reset_ns ( )	2743:5:93988:94005	1995644	0	True				
ANR	1996456	CallExpression	encode_reset_ns ( )		1995644	0					
ANR	1996457	Callee	encode_reset_ns		1995644	0					
ANR	1996458	Identifier	encode_reset_ns		1995644	0					
ANR	1996459	ArgumentList			1995644	1					
ANR	1996460	ExpressionStatement	"ret = parse_packet_soap ( this_ptr , Z_STRVAL ( response ) , Z_STRLEN ( response ) , fn , NULL , return_value , output_headers )"	2744:5:94012:94125	1995644	1	True				
ANR	1996461	AssignmentExpression	"ret = parse_packet_soap ( this_ptr , Z_STRVAL ( response ) , Z_STRLEN ( response ) , fn , NULL , return_value , output_headers )"		1995644	0		=			
ANR	1996462	Identifier	ret		1995644	0					
ANR	1996463	CallExpression	"parse_packet_soap ( this_ptr , Z_STRVAL ( response ) , Z_STRLEN ( response ) , fn , NULL , return_value , output_headers )"		1995644	1					
ANR	1996464	Callee	parse_packet_soap		1995644	0					
ANR	1996465	Identifier	parse_packet_soap		1995644	0					
ANR	1996466	ArgumentList	this_ptr		1995644	1					
ANR	1996467	Argument	this_ptr		1995644	0					
ANR	1996468	Identifier	this_ptr		1995644	0					
ANR	1996469	Argument	Z_STRVAL ( response )		1995644	1					
ANR	1996470	CallExpression	Z_STRVAL ( response )		1995644	0					
ANR	1996471	Callee	Z_STRVAL		1995644	0					
ANR	1996472	Identifier	Z_STRVAL		1995644	0					
ANR	1996473	ArgumentList	response		1995644	1					
ANR	1996474	Argument	response		1995644	0					
ANR	1996475	Identifier	response		1995644	0					
ANR	1996476	Argument	Z_STRLEN ( response )		1995644	2					
ANR	1996477	CallExpression	Z_STRLEN ( response )		1995644	0					
ANR	1996478	Callee	Z_STRLEN		1995644	0					
ANR	1996479	Identifier	Z_STRLEN		1995644	0					
ANR	1996480	ArgumentList	response		1995644	1					
ANR	1996481	Argument	response		1995644	0					
ANR	1996482	Identifier	response		1995644	0					
ANR	1996483	Argument	fn		1995644	3					
ANR	1996484	Identifier	fn		1995644	0					
ANR	1996485	Argument	NULL		1995644	4					
ANR	1996486	Identifier	NULL		1995644	0					
ANR	1996487	Argument	return_value		1995644	5					
ANR	1996488	Identifier	return_value		1995644	0					
ANR	1996489	Argument	output_headers		1995644	6					
ANR	1996490	Identifier	output_headers		1995644	0					
ANR	1996491	ExpressionStatement	encode_finish ( )	2745:5:94132:94147	1995644	2	True				
ANR	1996492	CallExpression	encode_finish ( )		1995644	0					
ANR	1996493	Callee	encode_finish		1995644	0					
ANR	1996494	Identifier	encode_finish		1995644	0					
ANR	1996495	ArgumentList			1995644	1					
ANR	1996496	ExpressionStatement	zval_dtor ( & response )	2748:4:94160:94180	1995644	8	True				
ANR	1996497	CallExpression	zval_dtor ( & response )		1995644	0					
ANR	1996498	Callee	zval_dtor		1995644	0					
ANR	1996499	Identifier	zval_dtor		1995644	0					
ANR	1996500	ArgumentList	& response		1995644	1					
ANR	1996501	Argument	& response		1995644	0					
ANR	1996502	UnaryOperationExpression	& response		1995644	0					
ANR	1996503	UnaryOperator	&		1995644	0					
ANR	1996504	Identifier	response		1995644	1					
ANR	1996505	ElseStatement	else		1995644	0					
ANR	1996506	CompoundStatement		111:5:3629:3650	1995644	0					
ANR	1996507	IdentifierDeclStatement	smart_str error = { 0 } ;	2751:5:94201:94222	1995644	0	True				
ANR	1996508	IdentifierDecl	error = { 0 }		1995644	0					
ANR	1996509	IdentifierDeclType	smart_str		1995644	0					
ANR	1996510	Identifier	error		1995644	1					
ANR	1996511	AssignmentExpression	error = { 0 }		1995644	2		=			
ANR	1996512	Identifier	error		1995644	0					
ANR	1996513	InitializerList	0		1995644	1					
ANR	1996514	PrimaryExpression	0		1995644	0					
ANR	1996515	ExpressionStatement	"smart_str_appends ( & error , ""Function (\\"""" )"	2752:5:94229:94269	1995644	1	True				
ANR	1996516	CallExpression	"smart_str_appends ( & error , ""Function (\\"""" )"		1995644	0					
ANR	1996517	Callee	smart_str_appends		1995644	0					
ANR	1996518	Identifier	smart_str_appends		1995644	0					
ANR	1996519	ArgumentList	& error		1995644	1					
ANR	1996520	Argument	& error		1995644	0					
ANR	1996521	UnaryOperationExpression	& error		1995644	0					
ANR	1996522	UnaryOperator	&		1995644	0					
ANR	1996523	Identifier	error		1995644	1					
ANR	1996524	Argument	"""Function (\\"""""		1995644	1					
ANR	1996525	PrimaryExpression	"""Function (\\"""""		1995644	0					
ANR	1996526	ExpressionStatement	"smart_str_appends ( & error , function )"	2753:5:94276:94310	1995644	2	True				
ANR	1996527	CallExpression	"smart_str_appends ( & error , function )"		1995644	0					
ANR	1996528	Callee	smart_str_appends		1995644	0					
ANR	1996529	Identifier	smart_str_appends		1995644	0					
ANR	1996530	ArgumentList	& error		1995644	1					
ANR	1996531	Argument	& error		1995644	0					
ANR	1996532	UnaryOperationExpression	& error		1995644	0					
ANR	1996533	UnaryOperator	&		1995644	0					
ANR	1996534	Identifier	error		1995644	1					
ANR	1996535	Argument	function		1995644	1					
ANR	1996536	Identifier	function		1995644	0					
ANR	1996537	ExpressionStatement	"smart_str_appends ( & error , ""\\"") is not a valid method for this service"" )"	2754:5:94317:94387	1995644	3	True				
ANR	1996538	CallExpression	"smart_str_appends ( & error , ""\\"") is not a valid method for this service"" )"		1995644	0					
ANR	1996539	Callee	smart_str_appends		1995644	0					
ANR	1996540	Identifier	smart_str_appends		1995644	0					
ANR	1996541	ArgumentList	& error		1995644	1					
ANR	1996542	Argument	& error		1995644	0					
ANR	1996543	UnaryOperationExpression	& error		1995644	0					
ANR	1996544	UnaryOperator	&		1995644	0					
ANR	1996545	Identifier	error		1995644	1					
ANR	1996546	Argument	"""\\"") is not a valid method for this service"""		1995644	1					
ANR	1996547	PrimaryExpression	"""\\"") is not a valid method for this service"""		1995644	0					
ANR	1996548	ExpressionStatement	smart_str_0 ( & error )	2755:5:94394:94413	1995644	4	True				
ANR	1996549	CallExpression	smart_str_0 ( & error )		1995644	0					
ANR	1996550	Callee	smart_str_0		1995644	0					
ANR	1996551	Identifier	smart_str_0		1995644	0					
ANR	1996552	ArgumentList	& error		1995644	1					
ANR	1996553	Argument	& error		1995644	0					
ANR	1996554	UnaryOperationExpression	& error		1995644	0					
ANR	1996555	UnaryOperator	&		1995644	0					
ANR	1996556	Identifier	error		1995644	1					
ANR	1996557	ExpressionStatement	"add_soap_fault ( this_ptr , ""Client"" , ZSTR_VAL ( error . s ) , NULL , NULL )"	2756:4:94419:94484	1995644	5	True				
ANR	1996558	CallExpression	"add_soap_fault ( this_ptr , ""Client"" , ZSTR_VAL ( error . s ) , NULL , NULL )"		1995644	0					
ANR	1996559	Callee	add_soap_fault		1995644	0					
ANR	1996560	Identifier	add_soap_fault		1995644	0					
ANR	1996561	ArgumentList	this_ptr		1995644	1					
ANR	1996562	Argument	this_ptr		1995644	0					
ANR	1996563	Identifier	this_ptr		1995644	0					
ANR	1996564	Argument	"""Client"""		1995644	1					
ANR	1996565	PrimaryExpression	"""Client"""		1995644	0					
ANR	1996566	Argument	ZSTR_VAL ( error . s )		1995644	2					
ANR	1996567	CallExpression	ZSTR_VAL ( error . s )		1995644	0					
ANR	1996568	Callee	ZSTR_VAL		1995644	0					
ANR	1996569	Identifier	ZSTR_VAL		1995644	0					
ANR	1996570	ArgumentList	error . s		1995644	1					
ANR	1996571	Argument	error . s		1995644	0					
ANR	1996572	MemberAccess	error . s		1995644	0					
ANR	1996573	Identifier	error		1995644	0					
ANR	1996574	Identifier	s		1995644	1					
ANR	1996575	Argument	NULL		1995644	3					
ANR	1996576	Identifier	NULL		1995644	0					
ANR	1996577	Argument	NULL		1995644	4					
ANR	1996578	Identifier	NULL		1995644	0					
ANR	1996579	ExpressionStatement	smart_str_free ( & error )	2757:4:94490:94512	1995644	6	True				
ANR	1996580	CallExpression	smart_str_free ( & error )		1995644	0					
ANR	1996581	Callee	smart_str_free		1995644	0					
ANR	1996582	Identifier	smart_str_free		1995644	0					
ANR	1996583	ArgumentList	& error		1995644	1					
ANR	1996584	Argument	& error		1995644	0					
ANR	1996585	UnaryOperationExpression	& error		1995644	0					
ANR	1996586	UnaryOperator	&		1995644	0					
ANR	1996587	Identifier	error		1995644	1					
ANR	1996588	ElseStatement	else		1995644	0					
ANR	1996589	CompoundStatement		120:3:3961:3970	1995644	0					
ANR	1996590	IdentifierDeclStatement	zval * uri ;	2760:3:94533:94542	1995644	0	True				
ANR	1996591	IdentifierDecl	* uri		1995644	0					
ANR	1996592	IdentifierDeclType	zval *		1995644	0					
ANR	1996593	Identifier	uri		1995644	1					
ANR	1996594	IfStatement	"if ( ( uri = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""uri"" , sizeof ( ""uri"" ) - 1 ) ) == NULL || Z_TYPE_P ( uri ) != IS_STRING )"		1995644	1					
ANR	1996595	Condition	"( uri = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""uri"" , sizeof ( ""uri"" ) - 1 ) ) == NULL || Z_TYPE_P ( uri ) != IS_STRING"	2762:7:94552:94662	1995644	0	True				
ANR	1996596	OrExpression	"( uri = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""uri"" , sizeof ( ""uri"" ) - 1 ) ) == NULL || Z_TYPE_P ( uri ) != IS_STRING"		1995644	0		||			
ANR	1996597	EqualityExpression	"( uri = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""uri"" , sizeof ( ""uri"" ) - 1 ) ) == NULL"		1995644	0		==			
ANR	1996598	AssignmentExpression	"uri = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""uri"" , sizeof ( ""uri"" ) - 1 )"		1995644	0		=			
ANR	1996599	Identifier	uri		1995644	0					
ANR	1996600	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""uri"" , sizeof ( ""uri"" ) - 1 )"		1995644	1					
ANR	1996601	Callee	zend_hash_str_find		1995644	0					
ANR	1996602	Identifier	zend_hash_str_find		1995644	0					
ANR	1996603	ArgumentList	Z_OBJPROP_P ( this_ptr )		1995644	1					
ANR	1996604	Argument	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1996605	CallExpression	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1996606	Callee	Z_OBJPROP_P		1995644	0					
ANR	1996607	Identifier	Z_OBJPROP_P		1995644	0					
ANR	1996608	ArgumentList	this_ptr		1995644	1					
ANR	1996609	Argument	this_ptr		1995644	0					
ANR	1996610	Identifier	this_ptr		1995644	0					
ANR	1996611	Argument	"""uri"""		1995644	1					
ANR	1996612	PrimaryExpression	"""uri"""		1995644	0					
ANR	1996613	Argument	"sizeof ( ""uri"" ) - 1"		1995644	2					
ANR	1996614	AdditiveExpression	"sizeof ( ""uri"" ) - 1"		1995644	0		-			
ANR	1996615	SizeofExpression	"sizeof ( ""uri"" )"		1995644	0					
ANR	1996616	Sizeof	sizeof		1995644	0					
ANR	1996617	PrimaryExpression	"""uri"""		1995644	1					
ANR	1996618	PrimaryExpression	1		1995644	1					
ANR	1996619	Identifier	NULL		1995644	1					
ANR	1996620	EqualityExpression	Z_TYPE_P ( uri ) != IS_STRING		1995644	1		!=			
ANR	1996621	CallExpression	Z_TYPE_P ( uri )		1995644	0					
ANR	1996622	Callee	Z_TYPE_P		1995644	0					
ANR	1996623	Identifier	Z_TYPE_P		1995644	0					
ANR	1996624	ArgumentList	uri		1995644	1					
ANR	1996625	Argument	uri		1995644	0					
ANR	1996626	Identifier	uri		1995644	0					
ANR	1996627	Identifier	IS_STRING		1995644	1					
ANR	1996628	CompoundStatement		122:120:4093:4093	1995644	1					
ANR	1996629	ExpressionStatement	"add_soap_fault ( this_ptr , ""Client"" , ""Error finding \\""uri\\"" property"" , NULL , NULL )"	2763:4:94671:94751	1995644	0	True				
ANR	1996630	CallExpression	"add_soap_fault ( this_ptr , ""Client"" , ""Error finding \\""uri\\"" property"" , NULL , NULL )"		1995644	0					
ANR	1996631	Callee	add_soap_fault		1995644	0					
ANR	1996632	Identifier	add_soap_fault		1995644	0					
ANR	1996633	ArgumentList	this_ptr		1995644	1					
ANR	1996634	Argument	this_ptr		1995644	0					
ANR	1996635	Identifier	this_ptr		1995644	0					
ANR	1996636	Argument	"""Client"""		1995644	1					
ANR	1996637	PrimaryExpression	"""Client"""		1995644	0					
ANR	1996638	Argument	"""Error finding \\""uri\\"" property"""		1995644	2					
ANR	1996639	PrimaryExpression	"""Error finding \\""uri\\"" property"""		1995644	0					
ANR	1996640	Argument	NULL		1995644	3					
ANR	1996641	Identifier	NULL		1995644	0					
ANR	1996642	Argument	NULL		1995644	4					
ANR	1996643	Identifier	NULL		1995644	0					
ANR	1996644	ElseStatement	else		1995644	0					
ANR	1996645	IfStatement	if ( location == NULL )		1995644	0					
ANR	1996646	Condition	location == NULL	2764:14:94767:94782	1995644	0	True				
ANR	1996647	EqualityExpression	location == NULL		1995644	0		==			
ANR	1996648	Identifier	location		1995644	0					
ANR	1996649	Identifier	NULL		1995644	1					
ANR	1996650	CompoundStatement		124:32:4213:4213	1995644	1					
ANR	1996651	ExpressionStatement	"add_soap_fault ( this_ptr , ""Client"" , ""Error could not find \\""location\\"" property"" , NULL , NULL )"	2765:4:94791:94883	1995644	0	True				
ANR	1996652	CallExpression	"add_soap_fault ( this_ptr , ""Client"" , ""Error could not find \\""location\\"" property"" , NULL , NULL )"		1995644	0					
ANR	1996653	Callee	add_soap_fault		1995644	0					
ANR	1996654	Identifier	add_soap_fault		1995644	0					
ANR	1996655	ArgumentList	this_ptr		1995644	1					
ANR	1996656	Argument	this_ptr		1995644	0					
ANR	1996657	Identifier	this_ptr		1995644	0					
ANR	1996658	Argument	"""Client"""		1995644	1					
ANR	1996659	PrimaryExpression	"""Client"""		1995644	0					
ANR	1996660	Argument	"""Error could not find \\""location\\"" property"""		1995644	2					
ANR	1996661	PrimaryExpression	"""Error could not find \\""location\\"" property"""		1995644	0					
ANR	1996662	Argument	NULL		1995644	3					
ANR	1996663	Identifier	NULL		1995644	0					
ANR	1996664	Argument	NULL		1995644	4					
ANR	1996665	Identifier	NULL		1995644	0					
ANR	1996666	ElseStatement	else		1995644	0					
ANR	1996667	CompoundStatement		126:10:4323:4323	1995644	0					
ANR	1996668	IfStatement	if ( call_uri == NULL )		1995644	0					
ANR	1996669	Condition	call_uri == NULL	2767:8:94905:94920	1995644	0	True				
ANR	1996670	EqualityExpression	call_uri == NULL		1995644	0		==			
ANR	1996671	Identifier	call_uri		1995644	0					
ANR	1996672	Identifier	NULL		1995644	1					
ANR	1996673	CompoundStatement		127:26:4351:4351	1995644	1					
ANR	1996674	ExpressionStatement	call_uri = Z_STRVAL_P ( uri )	2768:5:94930:94956	1995644	0	True				
ANR	1996675	AssignmentExpression	call_uri = Z_STRVAL_P ( uri )		1995644	0		=			
ANR	1996676	Identifier	call_uri		1995644	0					
ANR	1996677	CallExpression	Z_STRVAL_P ( uri )		1995644	1					
ANR	1996678	Callee	Z_STRVAL_P		1995644	0					
ANR	1996679	Identifier	Z_STRVAL_P		1995644	0					
ANR	1996680	ArgumentList	uri		1995644	1					
ANR	1996681	Argument	uri		1995644	0					
ANR	1996682	Identifier	uri		1995644	0					
ANR	1996683	ExpressionStatement	"request = serialize_function_call ( this_ptr , NULL , function , call_uri , real_args , arg_count , soap_version , soap_headers )"	2770:5:94969:95088	1995644	1	True				
ANR	1996684	AssignmentExpression	"request = serialize_function_call ( this_ptr , NULL , function , call_uri , real_args , arg_count , soap_version , soap_headers )"		1995644	0		=			
ANR	1996685	Identifier	request		1995644	0					
ANR	1996686	CallExpression	"serialize_function_call ( this_ptr , NULL , function , call_uri , real_args , arg_count , soap_version , soap_headers )"		1995644	1					
ANR	1996687	Callee	serialize_function_call		1995644	0					
ANR	1996688	Identifier	serialize_function_call		1995644	0					
ANR	1996689	ArgumentList	this_ptr		1995644	1					
ANR	1996690	Argument	this_ptr		1995644	0					
ANR	1996691	Identifier	this_ptr		1995644	0					
ANR	1996692	Argument	NULL		1995644	1					
ANR	1996693	Identifier	NULL		1995644	0					
ANR	1996694	Argument	function		1995644	2					
ANR	1996695	Identifier	function		1995644	0					
ANR	1996696	Argument	call_uri		1995644	3					
ANR	1996697	Identifier	call_uri		1995644	0					
ANR	1996698	Argument	real_args		1995644	4					
ANR	1996699	Identifier	real_args		1995644	0					
ANR	1996700	Argument	arg_count		1995644	5					
ANR	1996701	Identifier	arg_count		1995644	0					
ANR	1996702	Argument	soap_version		1995644	6					
ANR	1996703	Identifier	soap_version		1995644	0					
ANR	1996704	Argument	soap_headers		1995644	7					
ANR	1996705	Identifier	soap_headers		1995644	0					
ANR	1996706	IfStatement	if ( soap_action == NULL )		1995644	2					
ANR	1996707	Condition	soap_action == NULL	2772:9:95100:95118	1995644	0	True				
ANR	1996708	EqualityExpression	soap_action == NULL		1995644	0		==			
ANR	1996709	Identifier	soap_action		1995644	0					
ANR	1996710	Identifier	NULL		1995644	1					
ANR	1996711	CompoundStatement		132:30:4549:4549	1995644	1					
ANR	1996712	ExpressionStatement	"smart_str_appends ( & action , call_uri )"	2773:5:95128:95164	1995644	0	True				
ANR	1996713	CallExpression	"smart_str_appends ( & action , call_uri )"		1995644	0					
ANR	1996714	Callee	smart_str_appends		1995644	0					
ANR	1996715	Identifier	smart_str_appends		1995644	0					
ANR	1996716	ArgumentList	& action		1995644	1					
ANR	1996717	Argument	& action		1995644	0					
ANR	1996718	UnaryOperationExpression	& action		1995644	0					
ANR	1996719	UnaryOperator	&		1995644	0					
ANR	1996720	Identifier	action		1995644	1					
ANR	1996721	Argument	call_uri		1995644	1					
ANR	1996722	Identifier	call_uri		1995644	0					
ANR	1996723	ExpressionStatement	"smart_str_appendc ( & action , '#' )"	2774:5:95171:95202	1995644	1	True				
ANR	1996724	CallExpression	"smart_str_appendc ( & action , '#' )"		1995644	0					
ANR	1996725	Callee	smart_str_appendc		1995644	0					
ANR	1996726	Identifier	smart_str_appendc		1995644	0					
ANR	1996727	ArgumentList	& action		1995644	1					
ANR	1996728	Argument	& action		1995644	0					
ANR	1996729	UnaryOperationExpression	& action		1995644	0					
ANR	1996730	UnaryOperator	&		1995644	0					
ANR	1996731	Identifier	action		1995644	1					
ANR	1996732	Argument	'#'		1995644	1					
ANR	1996733	PrimaryExpression	'#'		1995644	0					
ANR	1996734	ExpressionStatement	"smart_str_appends ( & action , function )"	2775:5:95209:95245	1995644	2	True				
ANR	1996735	CallExpression	"smart_str_appends ( & action , function )"		1995644	0					
ANR	1996736	Callee	smart_str_appends		1995644	0					
ANR	1996737	Identifier	smart_str_appends		1995644	0					
ANR	1996738	ArgumentList	& action		1995644	1					
ANR	1996739	Argument	& action		1995644	0					
ANR	1996740	UnaryOperationExpression	& action		1995644	0					
ANR	1996741	UnaryOperator	&		1995644	0					
ANR	1996742	Identifier	action		1995644	1					
ANR	1996743	Argument	function		1995644	1					
ANR	1996744	Identifier	function		1995644	0					
ANR	1996745	ElseStatement	else		1995644	0					
ANR	1996746	CompoundStatement		136:11:4686:4686	1995644	0					
ANR	1996747	ExpressionStatement	"smart_str_appends ( & action , soap_action )"	2777:5:95265:95304	1995644	0	True				
ANR	1996748	CallExpression	"smart_str_appends ( & action , soap_action )"		1995644	0					
ANR	1996749	Callee	smart_str_appends		1995644	0					
ANR	1996750	Identifier	smart_str_appends		1995644	0					
ANR	1996751	ArgumentList	& action		1995644	1					
ANR	1996752	Argument	& action		1995644	0					
ANR	1996753	UnaryOperationExpression	& action		1995644	0					
ANR	1996754	UnaryOperator	&		1995644	0					
ANR	1996755	Identifier	action		1995644	1					
ANR	1996756	Argument	soap_action		1995644	1					
ANR	1996757	Identifier	soap_action		1995644	0					
ANR	1996758	ExpressionStatement	smart_str_0 ( & action )	2779:4:95316:95336	1995644	3	True				
ANR	1996759	CallExpression	smart_str_0 ( & action )		1995644	0					
ANR	1996760	Callee	smart_str_0		1995644	0					
ANR	1996761	Identifier	smart_str_0		1995644	0					
ANR	1996762	ArgumentList	& action		1995644	1					
ANR	1996763	Argument	& action		1995644	0					
ANR	1996764	UnaryOperationExpression	& action		1995644	0					
ANR	1996765	UnaryOperator	&		1995644	0					
ANR	1996766	Identifier	action		1995644	1					
ANR	1996767	ExpressionStatement	"ret = do_request ( this_ptr , request , location , ZSTR_VAL ( action . s ) , soap_version , 0 , & response )"	2781:4:95343:95436	1995644	4	True				
ANR	1996768	AssignmentExpression	"ret = do_request ( this_ptr , request , location , ZSTR_VAL ( action . s ) , soap_version , 0 , & response )"		1995644	0		=			
ANR	1996769	Identifier	ret		1995644	0					
ANR	1996770	CallExpression	"do_request ( this_ptr , request , location , ZSTR_VAL ( action . s ) , soap_version , 0 , & response )"		1995644	1					
ANR	1996771	Callee	do_request		1995644	0					
ANR	1996772	Identifier	do_request		1995644	0					
ANR	1996773	ArgumentList	this_ptr		1995644	1					
ANR	1996774	Argument	this_ptr		1995644	0					
ANR	1996775	Identifier	this_ptr		1995644	0					
ANR	1996776	Argument	request		1995644	1					
ANR	1996777	Identifier	request		1995644	0					
ANR	1996778	Argument	location		1995644	2					
ANR	1996779	Identifier	location		1995644	0					
ANR	1996780	Argument	ZSTR_VAL ( action . s )		1995644	3					
ANR	1996781	CallExpression	ZSTR_VAL ( action . s )		1995644	0					
ANR	1996782	Callee	ZSTR_VAL		1995644	0					
ANR	1996783	Identifier	ZSTR_VAL		1995644	0					
ANR	1996784	ArgumentList	action . s		1995644	1					
ANR	1996785	Argument	action . s		1995644	0					
ANR	1996786	MemberAccess	action . s		1995644	0					
ANR	1996787	Identifier	action		1995644	0					
ANR	1996788	Identifier	s		1995644	1					
ANR	1996789	Argument	soap_version		1995644	4					
ANR	1996790	Identifier	soap_version		1995644	0					
ANR	1996791	Argument	0		1995644	5					
ANR	1996792	PrimaryExpression	0		1995644	0					
ANR	1996793	Argument	& response		1995644	6					
ANR	1996794	UnaryOperationExpression	& response		1995644	0					
ANR	1996795	UnaryOperator	&		1995644	0					
ANR	1996796	Identifier	response		1995644	1					
ANR	1996797	ExpressionStatement	smart_str_free ( & action )	2783:5:95444:95467	1995644	5	True				
ANR	1996798	CallExpression	smart_str_free ( & action )		1995644	0					
ANR	1996799	Callee	smart_str_free		1995644	0					
ANR	1996800	Identifier	smart_str_free		1995644	0					
ANR	1996801	ArgumentList	& action		1995644	1					
ANR	1996802	Argument	& action		1995644	0					
ANR	1996803	UnaryOperationExpression	& action		1995644	0					
ANR	1996804	UnaryOperator	&		1995644	0					
ANR	1996805	Identifier	action		1995644	1					
ANR	1996806	ExpressionStatement	xmlFreeDoc ( request )	2784:4:95473:95492	1995644	6	True				
ANR	1996807	CallExpression	xmlFreeDoc ( request )		1995644	0					
ANR	1996808	Callee	xmlFreeDoc		1995644	0					
ANR	1996809	Identifier	xmlFreeDoc		1995644	0					
ANR	1996810	ArgumentList	request		1995644	1					
ANR	1996811	Argument	request		1995644	0					
ANR	1996812	Identifier	request		1995644	0					
ANR	1996813	ExpressionStatement	request = NULL	2785:4:95498:95512	1995644	7	True				
ANR	1996814	AssignmentExpression	request = NULL		1995644	0		=			
ANR	1996815	Identifier	request		1995644	0					
ANR	1996816	Identifier	NULL		1995644	1					
ANR	1996817	IfStatement	if ( ret && Z_TYPE ( response ) == IS_STRING )		1995644	8					
ANR	1996818	Condition	ret && Z_TYPE ( response ) == IS_STRING	2787:8:95523:95558	1995644	0	True				
ANR	1996819	AndExpression	ret && Z_TYPE ( response ) == IS_STRING		1995644	0		&&			
ANR	1996820	Identifier	ret		1995644	0					
ANR	1996821	EqualityExpression	Z_TYPE ( response ) == IS_STRING		1995644	1		==			
ANR	1996822	CallExpression	Z_TYPE ( response )		1995644	0					
ANR	1996823	Callee	Z_TYPE		1995644	0					
ANR	1996824	Identifier	Z_TYPE		1995644	0					
ANR	1996825	ArgumentList	response		1995644	1					
ANR	1996826	Argument	response		1995644	0					
ANR	1996827	Identifier	response		1995644	0					
ANR	1996828	Identifier	IS_STRING		1995644	1					
ANR	1996829	CompoundStatement		147:46:4989:4989	1995644	1					
ANR	1996830	ExpressionStatement	encode_reset_ns ( )	2788:5:95568:95585	1995644	0	True				
ANR	1996831	CallExpression	encode_reset_ns ( )		1995644	0					
ANR	1996832	Callee	encode_reset_ns		1995644	0					
ANR	1996833	Identifier	encode_reset_ns		1995644	0					
ANR	1996834	ArgumentList			1995644	1					
ANR	1996835	ExpressionStatement	"ret = parse_packet_soap ( this_ptr , Z_STRVAL ( response ) , Z_STRLEN ( response ) , NULL , function , return_value , output_headers )"	2789:5:95592:95711	1995644	1	True				
ANR	1996836	AssignmentExpression	"ret = parse_packet_soap ( this_ptr , Z_STRVAL ( response ) , Z_STRLEN ( response ) , NULL , function , return_value , output_headers )"		1995644	0		=			
ANR	1996837	Identifier	ret		1995644	0					
ANR	1996838	CallExpression	"parse_packet_soap ( this_ptr , Z_STRVAL ( response ) , Z_STRLEN ( response ) , NULL , function , return_value , output_headers )"		1995644	1					
ANR	1996839	Callee	parse_packet_soap		1995644	0					
ANR	1996840	Identifier	parse_packet_soap		1995644	0					
ANR	1996841	ArgumentList	this_ptr		1995644	1					
ANR	1996842	Argument	this_ptr		1995644	0					
ANR	1996843	Identifier	this_ptr		1995644	0					
ANR	1996844	Argument	Z_STRVAL ( response )		1995644	1					
ANR	1996845	CallExpression	Z_STRVAL ( response )		1995644	0					
ANR	1996846	Callee	Z_STRVAL		1995644	0					
ANR	1996847	Identifier	Z_STRVAL		1995644	0					
ANR	1996848	ArgumentList	response		1995644	1					
ANR	1996849	Argument	response		1995644	0					
ANR	1996850	Identifier	response		1995644	0					
ANR	1996851	Argument	Z_STRLEN ( response )		1995644	2					
ANR	1996852	CallExpression	Z_STRLEN ( response )		1995644	0					
ANR	1996853	Callee	Z_STRLEN		1995644	0					
ANR	1996854	Identifier	Z_STRLEN		1995644	0					
ANR	1996855	ArgumentList	response		1995644	1					
ANR	1996856	Argument	response		1995644	0					
ANR	1996857	Identifier	response		1995644	0					
ANR	1996858	Argument	NULL		1995644	3					
ANR	1996859	Identifier	NULL		1995644	0					
ANR	1996860	Argument	function		1995644	4					
ANR	1996861	Identifier	function		1995644	0					
ANR	1996862	Argument	return_value		1995644	5					
ANR	1996863	Identifier	return_value		1995644	0					
ANR	1996864	Argument	output_headers		1995644	6					
ANR	1996865	Identifier	output_headers		1995644	0					
ANR	1996866	ExpressionStatement	encode_finish ( )	2790:5:95718:95733	1995644	2	True				
ANR	1996867	CallExpression	encode_finish ( )		1995644	0					
ANR	1996868	Callee	encode_finish		1995644	0					
ANR	1996869	Identifier	encode_finish		1995644	0					
ANR	1996870	ArgumentList			1995644	1					
ANR	1996871	ExpressionStatement	zval_dtor ( & response )	2793:4:95746:95766	1995644	9	True				
ANR	1996872	CallExpression	zval_dtor ( & response )		1995644	0					
ANR	1996873	Callee	zval_dtor		1995644	0					
ANR	1996874	Identifier	zval_dtor		1995644	0					
ANR	1996875	ArgumentList	& response		1995644	1					
ANR	1996876	Argument	& response		1995644	0					
ANR	1996877	UnaryOperationExpression	& response		1995644	0					
ANR	1996878	UnaryOperator	&		1995644	0					
ANR	1996879	Identifier	response		1995644	1					
ANR	1996880	IfStatement	if ( ! ret )		1995644	1					
ANR	1996881	Condition	! ret	2797:6:95785:95788	1995644	0	True				
ANR	1996882	UnaryOperationExpression	! ret		1995644	0					
ANR	1996883	UnaryOperator	!		1995644	0					
ANR	1996884	Identifier	ret		1995644	1					
ANR	1996885	CompoundStatement		158:3:5224:5235	1995644	1					
ANR	1996886	IdentifierDeclStatement	zval * fault ;	2798:3:95796:95807	1995644	0	True				
ANR	1996887	IdentifierDecl	* fault		1995644	0					
ANR	1996888	IdentifierDeclType	zval *		1995644	0					
ANR	1996889	Identifier	fault		1995644	1					
ANR	1996890	IfStatement	"if ( ( fault = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 ) ) != NULL )"		1995644	1					
ANR	1996891	Condition	"( fault = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 ) ) != NULL"	2799:7:95816:95916	1995644	0	True				
ANR	1996892	EqualityExpression	"( fault = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 ) ) != NULL"		1995644	0		!=			
ANR	1996893	AssignmentExpression	"fault = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 )"		1995644	0		=			
ANR	1996894	Identifier	fault		1995644	0					
ANR	1996895	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 )"		1995644	1					
ANR	1996896	Callee	zend_hash_str_find		1995644	0					
ANR	1996897	Identifier	zend_hash_str_find		1995644	0					
ANR	1996898	ArgumentList	Z_OBJPROP_P ( this_ptr )		1995644	1					
ANR	1996899	Argument	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1996900	CallExpression	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1996901	Callee	Z_OBJPROP_P		1995644	0					
ANR	1996902	Identifier	Z_OBJPROP_P		1995644	0					
ANR	1996903	ArgumentList	this_ptr		1995644	1					
ANR	1996904	Argument	this_ptr		1995644	0					
ANR	1996905	Identifier	this_ptr		1995644	0					
ANR	1996906	Argument	"""__soap_fault"""		1995644	1					
ANR	1996907	PrimaryExpression	"""__soap_fault"""		1995644	0					
ANR	1996908	Argument	"sizeof ( ""__soap_fault"" ) - 1"		1995644	2					
ANR	1996909	AdditiveExpression	"sizeof ( ""__soap_fault"" ) - 1"		1995644	0		-			
ANR	1996910	SizeofExpression	"sizeof ( ""__soap_fault"" )"		1995644	0					
ANR	1996911	Sizeof	sizeof		1995644	0					
ANR	1996912	PrimaryExpression	"""__soap_fault"""		1995644	1					
ANR	1996913	PrimaryExpression	1		1995644	1					
ANR	1996914	Identifier	NULL		1995644	1					
ANR	1996915	CompoundStatement		159:110:5347:5347	1995644	1					
ANR	1996916	ExpressionStatement	"ZVAL_COPY ( return_value , fault )"	2800:4:95925:95955	1995644	0	True				
ANR	1996917	CallExpression	"ZVAL_COPY ( return_value , fault )"		1995644	0					
ANR	1996918	Callee	ZVAL_COPY		1995644	0					
ANR	1996919	Identifier	ZVAL_COPY		1995644	0					
ANR	1996920	ArgumentList	return_value		1995644	1					
ANR	1996921	Argument	return_value		1995644	0					
ANR	1996922	Identifier	return_value		1995644	0					
ANR	1996923	Argument	fault		1995644	1					
ANR	1996924	Identifier	fault		1995644	0					
ANR	1996925	ElseStatement	else		1995644	0					
ANR	1996926	CompoundStatement		161:10:5395:5395	1995644	0					
ANR	1996927	ExpressionStatement	"add_soap_fault_ex ( return_value , this_ptr , ""Client"" , ""Unknown Error"" , NULL , NULL )"	2802:4:95973:96053	1995644	0	True				
ANR	1996928	CallExpression	"add_soap_fault_ex ( return_value , this_ptr , ""Client"" , ""Unknown Error"" , NULL , NULL )"		1995644	0					
ANR	1996929	Callee	add_soap_fault_ex		1995644	0					
ANR	1996930	Identifier	add_soap_fault_ex		1995644	0					
ANR	1996931	ArgumentList	return_value		1995644	1					
ANR	1996932	Argument	return_value		1995644	0					
ANR	1996933	Identifier	return_value		1995644	0					
ANR	1996934	Argument	this_ptr		1995644	1					
ANR	1996935	Identifier	this_ptr		1995644	0					
ANR	1996936	Argument	"""Client"""		1995644	2					
ANR	1996937	PrimaryExpression	"""Client"""		1995644	0					
ANR	1996938	Argument	"""Unknown Error"""		1995644	3					
ANR	1996939	PrimaryExpression	"""Unknown Error"""		1995644	0					
ANR	1996940	Argument	NULL		1995644	4					
ANR	1996941	Identifier	NULL		1995644	0					
ANR	1996942	Argument	NULL		1995644	5					
ANR	1996943	Identifier	NULL		1995644	0					
ANR	1996944	ExpressionStatement	Z_ADDREF_P ( return_value )	2803:4:96059:96083	1995644	1	True				
ANR	1996945	CallExpression	Z_ADDREF_P ( return_value )		1995644	0					
ANR	1996946	Callee	Z_ADDREF_P		1995644	0					
ANR	1996947	Identifier	Z_ADDREF_P		1995644	0					
ANR	1996948	ArgumentList	return_value		1995644	1					
ANR	1996949	Argument	return_value		1995644	0					
ANR	1996950	Identifier	return_value		1995644	0					
ANR	1996951	ElseStatement	else		1995644	0					
ANR	1996952	CompoundStatement		166:3:5532:5543	1995644	0					
ANR	1996953	IdentifierDeclStatement	zval * fault ;	2806:3:96104:96115	1995644	0	True				
ANR	1996954	IdentifierDecl	* fault		1995644	0					
ANR	1996955	IdentifierDeclType	zval *		1995644	0					
ANR	1996956	Identifier	fault		1995644	1					
ANR	1996957	IfStatement	"if ( ( fault = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 ) ) != NULL )"		1995644	1					
ANR	1996958	Condition	"( fault = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 ) ) != NULL"	2807:7:96124:96224	1995644	0	True				
ANR	1996959	EqualityExpression	"( fault = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 ) ) != NULL"		1995644	0		!=			
ANR	1996960	AssignmentExpression	"fault = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 )"		1995644	0		=			
ANR	1996961	Identifier	fault		1995644	0					
ANR	1996962	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 )"		1995644	1					
ANR	1996963	Callee	zend_hash_str_find		1995644	0					
ANR	1996964	Identifier	zend_hash_str_find		1995644	0					
ANR	1996965	ArgumentList	Z_OBJPROP_P ( this_ptr )		1995644	1					
ANR	1996966	Argument	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1996967	CallExpression	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1996968	Callee	Z_OBJPROP_P		1995644	0					
ANR	1996969	Identifier	Z_OBJPROP_P		1995644	0					
ANR	1996970	ArgumentList	this_ptr		1995644	1					
ANR	1996971	Argument	this_ptr		1995644	0					
ANR	1996972	Identifier	this_ptr		1995644	0					
ANR	1996973	Argument	"""__soap_fault"""		1995644	1					
ANR	1996974	PrimaryExpression	"""__soap_fault"""		1995644	0					
ANR	1996975	Argument	"sizeof ( ""__soap_fault"" ) - 1"		1995644	2					
ANR	1996976	AdditiveExpression	"sizeof ( ""__soap_fault"" ) - 1"		1995644	0		-			
ANR	1996977	SizeofExpression	"sizeof ( ""__soap_fault"" )"		1995644	0					
ANR	1996978	Sizeof	sizeof		1995644	0					
ANR	1996979	PrimaryExpression	"""__soap_fault"""		1995644	1					
ANR	1996980	PrimaryExpression	1		1995644	1					
ANR	1996981	Identifier	NULL		1995644	1					
ANR	1996982	CompoundStatement		167:110:5655:5655	1995644	1					
ANR	1996983	ExpressionStatement	"ZVAL_COPY ( return_value , fault )"	2808:4:96233:96263	1995644	0	True				
ANR	1996984	CallExpression	"ZVAL_COPY ( return_value , fault )"		1995644	0					
ANR	1996985	Callee	ZVAL_COPY		1995644	0					
ANR	1996986	Identifier	ZVAL_COPY		1995644	0					
ANR	1996987	ArgumentList	return_value		1995644	1					
ANR	1996988	Argument	return_value		1995644	0					
ANR	1996989	Identifier	return_value		1995644	0					
ANR	1996990	Argument	fault		1995644	1					
ANR	1996991	Identifier	fault		1995644	0					
ANR	1996992	IfStatement	"if ( ! EG ( exception ) && Z_TYPE_P ( return_value ) == IS_OBJECT && instanceof_function ( Z_OBJCE_P ( return_value ) , soap_fault_class_entry ) && ( ( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) - 1 ) ) == NULL || Z_TYPE_P ( tmp ) != IS_FALSE ) )"		1995644	2					
ANR	1996993	Condition	"! EG ( exception ) && Z_TYPE_P ( return_value ) == IS_OBJECT && instanceof_function ( Z_OBJCE_P ( return_value ) , soap_fault_class_entry ) && ( ( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) - 1 ) ) == NULL || Z_TYPE_P ( tmp ) != IS_FALSE )"	2812:6:96281:96561	1995644	0	True				
ANR	1996994	AndExpression	"! EG ( exception ) && Z_TYPE_P ( return_value ) == IS_OBJECT && instanceof_function ( Z_OBJCE_P ( return_value ) , soap_fault_class_entry ) && ( ( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) - 1 ) ) == NULL || Z_TYPE_P ( tmp ) != IS_FALSE )"		1995644	0		&&			
ANR	1996995	UnaryOperationExpression	! EG ( exception )		1995644	0					
ANR	1996996	UnaryOperator	!		1995644	0					
ANR	1996997	CallExpression	EG ( exception )		1995644	1					
ANR	1996998	Callee	EG		1995644	0					
ANR	1996999	Identifier	EG		1995644	0					
ANR	1997000	ArgumentList	exception		1995644	1					
ANR	1997001	Argument	exception		1995644	0					
ANR	1997002	Identifier	exception		1995644	0					
ANR	1997003	AndExpression	"Z_TYPE_P ( return_value ) == IS_OBJECT && instanceof_function ( Z_OBJCE_P ( return_value ) , soap_fault_class_entry ) && ( ( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) - 1 ) ) == NULL || Z_TYPE_P ( tmp ) != IS_FALSE )"		1995644	1		&&			
ANR	1997004	EqualityExpression	Z_TYPE_P ( return_value ) == IS_OBJECT		1995644	0		==			
ANR	1997005	CallExpression	Z_TYPE_P ( return_value )		1995644	0					
ANR	1997006	Callee	Z_TYPE_P		1995644	0					
ANR	1997007	Identifier	Z_TYPE_P		1995644	0					
ANR	1997008	ArgumentList	return_value		1995644	1					
ANR	1997009	Argument	return_value		1995644	0					
ANR	1997010	Identifier	return_value		1995644	0					
ANR	1997011	Identifier	IS_OBJECT		1995644	1					
ANR	1997012	AndExpression	"instanceof_function ( Z_OBJCE_P ( return_value ) , soap_fault_class_entry ) && ( ( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) - 1 ) ) == NULL || Z_TYPE_P ( tmp ) != IS_FALSE )"		1995644	1		&&			
ANR	1997013	CallExpression	"instanceof_function ( Z_OBJCE_P ( return_value ) , soap_fault_class_entry )"		1995644	0					
ANR	1997014	Callee	instanceof_function		1995644	0					
ANR	1997015	Identifier	instanceof_function		1995644	0					
ANR	1997016	ArgumentList	Z_OBJCE_P ( return_value )		1995644	1					
ANR	1997017	Argument	Z_OBJCE_P ( return_value )		1995644	0					
ANR	1997018	CallExpression	Z_OBJCE_P ( return_value )		1995644	0					
ANR	1997019	Callee	Z_OBJCE_P		1995644	0					
ANR	1997020	Identifier	Z_OBJCE_P		1995644	0					
ANR	1997021	ArgumentList	return_value		1995644	1					
ANR	1997022	Argument	return_value		1995644	0					
ANR	1997023	Identifier	return_value		1995644	0					
ANR	1997024	Argument	soap_fault_class_entry		1995644	1					
ANR	1997025	Identifier	soap_fault_class_entry		1995644	0					
ANR	1997026	OrExpression	"( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) - 1 ) ) == NULL || Z_TYPE_P ( tmp ) != IS_FALSE"		1995644	1		||			
ANR	1997027	EqualityExpression	"( tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) - 1 ) ) == NULL"		1995644	0		==			
ANR	1997028	AssignmentExpression	"tmp = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) - 1 )"		1995644	0		=			
ANR	1997029	Identifier	tmp		1995644	0					
ANR	1997030	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""_exceptions"" , sizeof ( ""_exceptions"" ) - 1 )"		1995644	1					
ANR	1997031	Callee	zend_hash_str_find		1995644	0					
ANR	1997032	Identifier	zend_hash_str_find		1995644	0					
ANR	1997033	ArgumentList	Z_OBJPROP_P ( this_ptr )		1995644	1					
ANR	1997034	Argument	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1997035	CallExpression	Z_OBJPROP_P ( this_ptr )		1995644	0					
ANR	1997036	Callee	Z_OBJPROP_P		1995644	0					
ANR	1997037	Identifier	Z_OBJPROP_P		1995644	0					
ANR	1997038	ArgumentList	this_ptr		1995644	1					
ANR	1997039	Argument	this_ptr		1995644	0					
ANR	1997040	Identifier	this_ptr		1995644	0					
ANR	1997041	Argument	"""_exceptions"""		1995644	1					
ANR	1997042	PrimaryExpression	"""_exceptions"""		1995644	0					
ANR	1997043	Argument	"sizeof ( ""_exceptions"" ) - 1"		1995644	2					
ANR	1997044	AdditiveExpression	"sizeof ( ""_exceptions"" ) - 1"		1995644	0		-			
ANR	1997045	SizeofExpression	"sizeof ( ""_exceptions"" )"		1995644	0					
ANR	1997046	Sizeof	sizeof		1995644	0					
ANR	1997047	PrimaryExpression	"""_exceptions"""		1995644	1					
ANR	1997048	PrimaryExpression	1		1995644	1					
ANR	1997049	Identifier	NULL		1995644	1					
ANR	1997050	EqualityExpression	Z_TYPE_P ( tmp ) != IS_FALSE		1995644	1		!=			
ANR	1997051	CallExpression	Z_TYPE_P ( tmp )		1995644	0					
ANR	1997052	Callee	Z_TYPE_P		1995644	0					
ANR	1997053	Identifier	Z_TYPE_P		1995644	0					
ANR	1997054	ArgumentList	tmp		1995644	1					
ANR	1997055	Argument	tmp		1995644	0					
ANR	1997056	Identifier	tmp		1995644	0					
ANR	1997057	Identifier	IS_FALSE		1995644	1					
ANR	1997058	CompoundStatement		176:34:5992:5992	1995644	1					
ANR	1997059	ExpressionStatement	Z_ADDREF_P ( return_value )	2817:3:96569:96593	1995644	0	True				
ANR	1997060	CallExpression	Z_ADDREF_P ( return_value )		1995644	0					
ANR	1997061	Callee	Z_ADDREF_P		1995644	0					
ANR	1997062	Identifier	Z_ADDREF_P		1995644	0					
ANR	1997063	ArgumentList	return_value		1995644	1					
ANR	1997064	Argument	return_value		1995644	0					
ANR	1997065	Identifier	return_value		1995644	0					
ANR	1997066	ExpressionStatement	zend_throw_exception_object ( return_value )	2818:3:96598:96639	1995644	1	True				
ANR	1997067	CallExpression	zend_throw_exception_object ( return_value )		1995644	0					
ANR	1997068	Callee	zend_throw_exception_object		1995644	0					
ANR	1997069	Identifier	zend_throw_exception_object		1995644	0					
ANR	1997070	ArgumentList	return_value		1995644	1					
ANR	1997071	Argument	return_value		1995644	0					
ANR	1997072	Identifier	return_value		1995644	0					
ANR	1997073	Statement	zend_catch	2821:3:96649:96658	1995644	34	True				
ANR	1997074	CompoundStatement		181:14:6088:6088	1995644	35					
ANR	1997075	ExpressionStatement	_bailout = 1	2822:2:96664:96676	1995644	0	True				
ANR	1997076	AssignmentExpression	_bailout = 1		1995644	0		=			
ANR	1997077	Identifier	_bailout		1995644	0					
ANR	1997078	PrimaryExpression	1		1995644	1					
ANR	1997079	ExpressionStatement	zend_end_try ( )	2823:3:96681:96695	1995644	36	True				
ANR	1997080	CallExpression	zend_end_try ( )		1995644	0					
ANR	1997081	Callee	zend_end_try		1995644	0					
ANR	1997082	Identifier	zend_end_try		1995644	0					
ANR	1997083	ArgumentList			1995644	1					
ANR	1997084	IfStatement	if ( SOAP_GLOBAL ( encoding ) != NULL )		1995644	37					
ANR	1997085	Condition	SOAP_GLOBAL ( encoding ) != NULL	2825:5:96703:96731	1995644	0	True				
ANR	1997086	EqualityExpression	SOAP_GLOBAL ( encoding ) != NULL		1995644	0		!=			
ANR	1997087	CallExpression	SOAP_GLOBAL ( encoding )		1995644	0					
ANR	1997088	Callee	SOAP_GLOBAL		1995644	0					
ANR	1997089	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1997090	ArgumentList	encoding		1995644	1					
ANR	1997091	Argument	encoding		1995644	0					
ANR	1997092	Identifier	encoding		1995644	0					
ANR	1997093	Identifier	NULL		1995644	1					
ANR	1997094	CompoundStatement		185:36:6162:6162	1995644	1					
ANR	1997095	ExpressionStatement	xmlCharEncCloseFunc ( SOAP_GLOBAL ( encoding ) )	2826:2:96738:96780	1995644	0	True				
ANR	1997096	CallExpression	xmlCharEncCloseFunc ( SOAP_GLOBAL ( encoding ) )		1995644	0					
ANR	1997097	Callee	xmlCharEncCloseFunc		1995644	0					
ANR	1997098	Identifier	xmlCharEncCloseFunc		1995644	0					
ANR	1997099	ArgumentList	SOAP_GLOBAL ( encoding )		1995644	1					
ANR	1997100	Argument	SOAP_GLOBAL ( encoding )		1995644	0					
ANR	1997101	CallExpression	SOAP_GLOBAL ( encoding )		1995644	0					
ANR	1997102	Callee	SOAP_GLOBAL		1995644	0					
ANR	1997103	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1997104	ArgumentList	encoding		1995644	1					
ANR	1997105	Argument	encoding		1995644	0					
ANR	1997106	Identifier	encoding		1995644	0					
ANR	1997107	ExpressionStatement	SOAP_GLOBAL ( features ) = old_features	2829:1:96787:96823	1995644	38	True				
ANR	1997108	AssignmentExpression	SOAP_GLOBAL ( features ) = old_features		1995644	0		=			
ANR	1997109	CallExpression	SOAP_GLOBAL ( features )		1995644	0					
ANR	1997110	Callee	SOAP_GLOBAL		1995644	0					
ANR	1997111	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1997112	ArgumentList	features		1995644	1					
ANR	1997113	Argument	features		1995644	0					
ANR	1997114	Identifier	features		1995644	0					
ANR	1997115	Identifier	old_features		1995644	1					
ANR	1997116	ExpressionStatement	SOAP_GLOBAL ( typemap ) = old_typemap	2830:1:96826:96860	1995644	39	True				
ANR	1997117	AssignmentExpression	SOAP_GLOBAL ( typemap ) = old_typemap		1995644	0		=			
ANR	1997118	CallExpression	SOAP_GLOBAL ( typemap )		1995644	0					
ANR	1997119	Callee	SOAP_GLOBAL		1995644	0					
ANR	1997120	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1997121	ArgumentList	typemap		1995644	1					
ANR	1997122	Argument	typemap		1995644	0					
ANR	1997123	Identifier	typemap		1995644	0					
ANR	1997124	Identifier	old_typemap		1995644	1					
ANR	1997125	ExpressionStatement	SOAP_GLOBAL ( class_map ) = old_class_map	2831:1:96863:96901	1995644	40	True				
ANR	1997126	AssignmentExpression	SOAP_GLOBAL ( class_map ) = old_class_map		1995644	0		=			
ANR	1997127	CallExpression	SOAP_GLOBAL ( class_map )		1995644	0					
ANR	1997128	Callee	SOAP_GLOBAL		1995644	0					
ANR	1997129	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1997130	ArgumentList	class_map		1995644	1					
ANR	1997131	Argument	class_map		1995644	0					
ANR	1997132	Identifier	class_map		1995644	0					
ANR	1997133	Identifier	old_class_map		1995644	1					
ANR	1997134	ExpressionStatement	SOAP_GLOBAL ( encoding ) = old_encoding	2832:1:96904:96940	1995644	41	True				
ANR	1997135	AssignmentExpression	SOAP_GLOBAL ( encoding ) = old_encoding		1995644	0		=			
ANR	1997136	CallExpression	SOAP_GLOBAL ( encoding )		1995644	0					
ANR	1997137	Callee	SOAP_GLOBAL		1995644	0					
ANR	1997138	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1997139	ArgumentList	encoding		1995644	1					
ANR	1997140	Argument	encoding		1995644	0					
ANR	1997141	Identifier	encoding		1995644	0					
ANR	1997142	Identifier	old_encoding		1995644	1					
ANR	1997143	ExpressionStatement	SOAP_GLOBAL ( sdl ) = old_sdl	2833:1:96943:96969	1995644	42	True				
ANR	1997144	AssignmentExpression	SOAP_GLOBAL ( sdl ) = old_sdl		1995644	0		=			
ANR	1997145	CallExpression	SOAP_GLOBAL ( sdl )		1995644	0					
ANR	1997146	Callee	SOAP_GLOBAL		1995644	0					
ANR	1997147	Identifier	SOAP_GLOBAL		1995644	0					
ANR	1997148	ArgumentList	sdl		1995644	1					
ANR	1997149	Argument	sdl		1995644	0					
ANR	1997150	Identifier	sdl		1995644	0					
ANR	1997151	Identifier	old_sdl		1995644	1					
ANR	1997152	IfStatement	if ( _bailout )		1995644	43					
ANR	1997153	Condition	_bailout	2834:5:96976:96983	1995644	0	True				
ANR	1997154	Identifier	_bailout		1995644	0					
ANR	1997155	CompoundStatement		194:15:6414:6414	1995644	1					
ANR	1997156	ExpressionStatement	smart_str_free ( & action )	2835:2:96990:97013	1995644	0	True				
ANR	1997157	CallExpression	smart_str_free ( & action )		1995644	0					
ANR	1997158	Callee	smart_str_free		1995644	0					
ANR	1997159	Identifier	smart_str_free		1995644	0					
ANR	1997160	ArgumentList	& action		1995644	1					
ANR	1997161	Argument	& action		1995644	0					
ANR	1997162	UnaryOperationExpression	& action		1995644	0					
ANR	1997163	UnaryOperator	&		1995644	0					
ANR	1997164	Identifier	action		1995644	1					
ANR	1997165	IfStatement	if ( request )		1995644	1					
ANR	1997166	Condition	request	2836:6:97021:97027	1995644	0	True				
ANR	1997167	Identifier	request		1995644	0					
ANR	1997168	CompoundStatement		196:15:6458:6458	1995644	1					
ANR	1997169	ExpressionStatement	xmlFreeDoc ( request )	2837:3:97035:97054	1995644	0	True				
ANR	1997170	CallExpression	xmlFreeDoc ( request )		1995644	0					
ANR	1997171	Callee	xmlFreeDoc		1995644	0					
ANR	1997172	Identifier	xmlFreeDoc		1995644	0					
ANR	1997173	ArgumentList	request		1995644	1					
ANR	1997174	Argument	request		1995644	0					
ANR	1997175	Identifier	request		1995644	0					
ANR	1997176	ExpressionStatement	_bailout = 0	2839:2:97062:97074	1995644	2	True				
ANR	1997177	AssignmentExpression	_bailout = 0		1995644	0		=			
ANR	1997178	Identifier	_bailout		1995644	0					
ANR	1997179	PrimaryExpression	0		1995644	1					
ANR	1997180	ExpressionStatement	zend_bailout ( )	2840:2:97078:97092	1995644	3	True				
ANR	1997181	CallExpression	zend_bailout ( )		1995644	0					
ANR	1997182	Callee	zend_bailout		1995644	0					
ANR	1997183	Identifier	zend_bailout		1995644	0					
ANR	1997184	ArgumentList			1995644	1					
ANR	1997185	ExpressionStatement	SOAP_CLIENT_END_CODE ( )	2842:1:97098:97120	1995644	44	True				
ANR	1997186	CallExpression	SOAP_CLIENT_END_CODE ( )		1995644	0					
ANR	1997187	Callee	SOAP_CLIENT_END_CODE		1995644	0					
ANR	1997188	Identifier	SOAP_CLIENT_END_CODE		1995644	0					
ANR	1997189	ArgumentList			1995644	1					
ANR	1997190	ReturnType	static void		1995644	1					
ANR	1997191	Identifier	do_soap_call		1995644	2					
ANR	1997192	ParameterList	"zend_execute_data * execute_data , zval * this_ptr , char * function , size_t function_len , int arg_count , zval * real_args , zval * return_value , char * location , char * soap_action , char * call_uri , HashTable * soap_headers , zval * output_headers"		1995644	3					
ANR	1997193	Parameter	zend_execute_data * execute_data	2628:25:90035:90065	1995644	0	True				
ANR	1997194	ParameterType	zend_execute_data *		1995644	0					
ANR	1997195	Identifier	execute_data		1995644	1					
ANR	1997196	Parameter	zval * this_ptr	2629:25:90093:90106	1995644	1	True				
ANR	1997197	ParameterType	zval *		1995644	0					
ANR	1997198	Identifier	this_ptr		1995644	1					
ANR	1997199	Parameter	char * function	2630:25:90134:90147	1995644	2	True				
ANR	1997200	ParameterType	char *		1995644	0					
ANR	1997201	Identifier	function		1995644	1					
ANR	1997202	Parameter	size_t function_len	2631:25:90175:90193	1995644	3	True				
ANR	1997203	ParameterType	size_t		1995644	0					
ANR	1997204	Identifier	function_len		1995644	1					
ANR	1997205	Parameter	int arg_count	2632:25:90221:90233	1995644	4	True				
ANR	1997206	ParameterType	int		1995644	0					
ANR	1997207	Identifier	arg_count		1995644	1					
ANR	1997208	Parameter	zval * real_args	2633:25:90261:90275	1995644	5	True				
ANR	1997209	ParameterType	zval *		1995644	0					
ANR	1997210	Identifier	real_args		1995644	1					
ANR	1997211	Parameter	zval * return_value	2634:25:90303:90320	1995644	6	True				
ANR	1997212	ParameterType	zval *		1995644	0					
ANR	1997213	Identifier	return_value		1995644	1					
ANR	1997214	Parameter	char * location	2635:25:90348:90361	1995644	7	True				
ANR	1997215	ParameterType	char *		1995644	0					
ANR	1997216	Identifier	location		1995644	1					
ANR	1997217	Parameter	char * soap_action	2636:25:90389:90405	1995644	8	True				
ANR	1997218	ParameterType	char *		1995644	0					
ANR	1997219	Identifier	soap_action		1995644	1					
ANR	1997220	Parameter	char * call_uri	2637:25:90433:90446	1995644	9	True				
ANR	1997221	ParameterType	char *		1995644	0					
ANR	1997222	Identifier	call_uri		1995644	1					
ANR	1997223	Parameter	HashTable * soap_headers	2638:25:90474:90496	1995644	10	True				
ANR	1997224	ParameterType	HashTable *		1995644	0					
ANR	1997225	Identifier	soap_headers		1995644	1					
ANR	1997226	Parameter	zval * output_headers	2639:25:90524:90543	1995644	11	True				
ANR	1997227	ParameterType	zval *		1995644	0					
ANR	1997228	Identifier	output_headers		1995644	1					
ANR	1997229	CFGEntryNode	ENTRY		1995644		True				
ANR	1997230	CFGExitNode	EXIT		1995644		True				
ANR	1997231	Symbol	exception		1995644						
ANR	1997232	Symbol	& error		1995644						
ANR	1997233	Symbol	binding -> bindingType		1995644						
ANR	1997234	Symbol	binding		1995644						
ANR	1997235	Symbol	Z_TYPE		1995644						
ANR	1997236	Symbol	xmlFindCharEncodingHandler		1995644						
ANR	1997237	Symbol	execute_data		1995644						
ANR	1997238	Symbol	get_function		1995644						
ANR	1997239	Symbol	fnb -> input . ns		1995644						
ANR	1997240	Symbol	old_features		1995644						
ANR	1997241	Symbol	features		1995644						
ANR	1997242	Symbol	& action		1995644						
ANR	1997243	Symbol	sdl -> target_ns		1995644						
ANR	1997244	Symbol	tmp		1995644						
ANR	1997245	Symbol	function		1995644						
ANR	1997246	Symbol	action		1995644						
ANR	1997247	Symbol	soap_version		1995644						
ANR	1997248	Symbol	IS_STRING		1995644						
ANR	1997249	Symbol	fnb		1995644						
ANR	1997250	Symbol	real_args		1995644						
ANR	1997251	Symbol	_bailout		1995644						
ANR	1997252	Symbol	ret		1995644						
ANR	1997253	Symbol	fn -> binding		1995644						
ANR	1997254	Symbol	EG		1995644						
ANR	1997255	Symbol	NULL		1995644						
ANR	1997256	Symbol	* sdl		1995644						
ANR	1997257	Symbol	IS_TRUE		1995644						
ANR	1997258	Symbol	encoding		1995644						
ANR	1997259	Symbol	SOAP_GLOBAL		1995644						
ANR	1997260	Symbol	call_uri		1995644						
ANR	1997261	Symbol	binding -> location		1995644						
ANR	1997262	Symbol	fn -> responseParameters		1995644						
ANR	1997263	Symbol	old_class_map		1995644						
ANR	1997264	Symbol	sdl		1995644						
ANR	1997265	Symbol	function_len		1995644						
ANR	1997266	Symbol	instanceof_function		1995644						
ANR	1997267	Symbol	request		1995644						
ANR	1997268	Symbol	return_value		1995644						
ANR	1997269	Symbol	fn -> bindingAttributes		1995644						
ANR	1997270	Symbol	fnb -> input		1995644						
ANR	1997271	Symbol	typemap		1995644						
ANR	1997272	Symbol	FIND_TYPEMAP_PROPERTY		1995644						
ANR	1997273	Symbol	fn		1995644						
ANR	1997274	Symbol	Z_STRLEN		1995644						
ANR	1997275	Symbol	error		1995644						
ANR	1997276	Symbol	soap_action		1995644						
ANR	1997277	Symbol	& response		1995644						
ANR	1997278	Symbol	soap_fault_class_entry		1995644						
ANR	1997279	Symbol	trace		1995644						
ANR	1997280	Symbol	BINDING_SOAP		1995644						
ANR	1997281	Symbol	zend_hash_str_find		1995644						
ANR	1997282	Symbol	FIND_SDL_PROPERTY		1995644						
ANR	1997283	Symbol	one_way		1995644						
ANR	1997284	Symbol	serialize_function_call		1995644						
ANR	1997285	Symbol	IS_ARRAY		1995644						
ANR	1997286	Symbol	IS_LONG		1995644						
ANR	1997287	Symbol	Z_STRVAL		1995644						
ANR	1997288	Symbol	Z_OBJCE_P		1995644						
ANR	1997289	Symbol	Z_ARRVAL_P		1995644						
ANR	1997290	Symbol	old_typemap		1995644						
ANR	1997291	Symbol	IS_FALSE		1995644						
ANR	1997292	Symbol	action . s		1995644						
ANR	1997293	Symbol	soap_headers		1995644						
ANR	1997294	Symbol	do_request		1995644						
ANR	1997295	Symbol	error . s		1995644						
ANR	1997296	Symbol	SOAP_1_1		1995644						
ANR	1997297	Symbol	* binding		1995644						
ANR	1997298	Symbol	class_map		1995644						
ANR	1997299	Symbol	fnb -> soapAction		1995644						
ANR	1997300	Symbol	fault		1995644						
ANR	1997301	Symbol	output_headers		1995644						
ANR	1997302	Symbol	Z_OBJPROP_P		1995644						
ANR	1997303	Symbol	fn -> responseName		1995644						
ANR	1997304	Symbol	Z_TYPE_P		1995644						
ANR	1997305	Symbol	Z_STRVAL_P		1995644						
ANR	1997306	Symbol	* fn		1995644						
ANR	1997307	Symbol	uri		1995644						
ANR	1997308	Symbol	old_sdl		1995644						
ANR	1997309	Symbol	Z_LVAL_P		1995644						
ANR	1997310	Symbol	parse_packet_soap		1995644						
ANR	1997311	Symbol	ZSTR_VAL		1995644						
ANR	1997312	Symbol	this_ptr		1995644						
ANR	1997313	Symbol	response		1995644						
ANR	1997314	Symbol	location		1995644						
ANR	1997315	Symbol	FALSE		1995644						
ANR	1997316	Symbol	* fnb		1995644						
ANR	1997317	Symbol	SOAP_1_2		1995644						
ANR	1997318	Symbol	IS_OBJECT		1995644						
ANR	1997319	Symbol	old_encoding		1995644						
ANR	1997320	Symbol	arg_count		1995644						
ANR	1997321	Function	verify_soap_headers_array	2845:0:97125:97425							
ANR	1997322	FunctionDef	verify_soap_headers_array (HashTable * ht)		1997321	0					
ANR	1997323	CompoundStatement		2846:0:97178:97425	1997321	0					
ANR	1997324	IdentifierDeclStatement	zval * tmp ;	2847:1:97181:97190	1997321	0	True				
ANR	1997325	IdentifierDecl	* tmp		1997321	0					
ANR	1997326	IdentifierDeclType	zval *		1997321	0					
ANR	1997327	Identifier	tmp		1997321	1					
ANR	1997328	Statement	ZEND_HASH_FOREACH_VAL	2849:1:97194:97214	1997321	1	True				
ANR	1997329	Statement	(	2849:22:97215:97215	1997321	2	True				
ANR	1997330	Statement	ht	2849:23:97216:97217	1997321	3	True				
ANR	1997331	Statement	","	2849:25:97218:97218	1997321	4	True				
ANR	1997332	Statement	tmp	2849:27:97220:97222	1997321	5	True				
ANR	1997333	Statement	)	2849:30:97223:97223	1997321	6	True				
ANR	1997334	CompoundStatement		4:32:46:46	1997321	7					
ANR	1997335	IfStatement	"if ( Z_TYPE_P ( tmp ) != IS_OBJECT || ! instanceof_function ( Z_OBJCE_P ( tmp ) , soap_header_class_entry ) )"		1997321	0					
ANR	1997336	Condition	"Z_TYPE_P ( tmp ) != IS_OBJECT || ! instanceof_function ( Z_OBJCE_P ( tmp ) , soap_header_class_entry )"	2850:6:97233:97329	1997321	0	True				
ANR	1997337	OrExpression	"Z_TYPE_P ( tmp ) != IS_OBJECT || ! instanceof_function ( Z_OBJCE_P ( tmp ) , soap_header_class_entry )"		1997321	0		||			
ANR	1997338	EqualityExpression	Z_TYPE_P ( tmp ) != IS_OBJECT		1997321	0		!=			
ANR	1997339	CallExpression	Z_TYPE_P ( tmp )		1997321	0					
ANR	1997340	Callee	Z_TYPE_P		1997321	0					
ANR	1997341	Identifier	Z_TYPE_P		1997321	0					
ANR	1997342	ArgumentList	tmp		1997321	1					
ANR	1997343	Argument	tmp		1997321	0					
ANR	1997344	Identifier	tmp		1997321	0					
ANR	1997345	Identifier	IS_OBJECT		1997321	1					
ANR	1997346	UnaryOperationExpression	"! instanceof_function ( Z_OBJCE_P ( tmp ) , soap_header_class_entry )"		1997321	1					
ANR	1997347	UnaryOperator	!		1997321	0					
ANR	1997348	CallExpression	"instanceof_function ( Z_OBJCE_P ( tmp ) , soap_header_class_entry )"		1997321	1					
ANR	1997349	Callee	instanceof_function		1997321	0					
ANR	1997350	Identifier	instanceof_function		1997321	0					
ANR	1997351	ArgumentList	Z_OBJCE_P ( tmp )		1997321	1					
ANR	1997352	Argument	Z_OBJCE_P ( tmp )		1997321	0					
ANR	1997353	CallExpression	Z_OBJCE_P ( tmp )		1997321	0					
ANR	1997354	Callee	Z_OBJCE_P		1997321	0					
ANR	1997355	Identifier	Z_OBJCE_P		1997321	0					
ANR	1997356	ArgumentList	tmp		1997321	1					
ANR	1997357	Argument	tmp		1997321	0					
ANR	1997358	Identifier	tmp		1997321	0					
ANR	1997359	Argument	soap_header_class_entry		1997321	1					
ANR	1997360	Identifier	soap_header_class_entry		1997321	0					
ANR	1997361	CompoundStatement		6:69:153:153	1997321	1					
ANR	1997362	ExpressionStatement	"php_error_docref ( NULL , E_ERROR , ""Invalid SOAP header"" )"	2852:3:97337:97391	1997321	0	True				
ANR	1997363	CallExpression	"php_error_docref ( NULL , E_ERROR , ""Invalid SOAP header"" )"		1997321	0					
ANR	1997364	Callee	php_error_docref		1997321	0					
ANR	1997365	Identifier	php_error_docref		1997321	0					
ANR	1997366	ArgumentList	NULL		1997321	1					
ANR	1997367	Argument	NULL		1997321	0					
ANR	1997368	Identifier	NULL		1997321	0					
ANR	1997369	Argument	E_ERROR		1997321	1					
ANR	1997370	Identifier	E_ERROR		1997321	0					
ANR	1997371	Argument	"""Invalid SOAP header"""		1997321	2					
ANR	1997372	PrimaryExpression	"""Invalid SOAP header"""		1997321	0					
ANR	1997373	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2854:3:97400:97423	1997321	8	True				
ANR	1997374	CallExpression	ZEND_HASH_FOREACH_END ( )		1997321	0					
ANR	1997375	Callee	ZEND_HASH_FOREACH_END		1997321	0					
ANR	1997376	Identifier	ZEND_HASH_FOREACH_END		1997321	0					
ANR	1997377	ArgumentList			1997321	1					
ANR	1997378	ReturnType	static void		1997321	1					
ANR	1997379	Identifier	verify_soap_headers_array		1997321	2					
ANR	1997380	ParameterList	HashTable * ht		1997321	3					
ANR	1997381	Parameter	HashTable * ht	2845:38:97163:97175	1997321	0	True				
ANR	1997382	ParameterType	HashTable *		1997321	0					
ANR	1997383	Identifier	ht		1997321	1					
ANR	1997384	CFGEntryNode	ENTRY		1997321		True				
ANR	1997385	CFGExitNode	EXIT		1997321		True				
ANR	1997386	Symbol	instanceof_function		1997321						
ANR	1997387	Symbol	NULL		1997321						
ANR	1997388	Symbol	E_ERROR		1997321						
ANR	1997389	Symbol	tmp		1997321						
ANR	1997390	Symbol	Z_OBJCE_P		1997321						
ANR	1997391	Symbol	soap_header_class_entry		1997321						
ANR	1997392	Symbol	ht		1997321						
ANR	1997393	Symbol	IS_OBJECT		1997321						
ANR	1997394	Symbol	Z_TYPE_P		1997321						
ANR	1997395	DeclStmt									
ANR	1997396	Decl							char	char *	function
ANR	1997397	Decl							char	char *	location
ANR	1997398	Decl							char	char *	soap_action
ANR	1997399	Decl							char	char *	uri
ANR	1997400	DeclStmt									
ANR	1997401	Decl							size_t	size_t	function_len
ANR	1997402	DeclStmt									
ANR	1997403	Decl							int	int	i
ANR	1997404	DeclStmt									
ANR	1997405	Decl							HashTable	HashTable *	soap_headers
ANR	1997406	DeclStmt									
ANR	1997407	Decl							zval	zval *	options
ANR	1997408	DeclStmt									
ANR	1997409	Decl							zval	zval *	headers
ANR	1997410	DeclStmt									
ANR	1997411	Decl							zval	zval *	output_headers
ANR	1997412	DeclStmt									
ANR	1997413	Decl							zval	zval *	args
ANR	1997414	DeclStmt									
ANR	1997415	Decl							zval	zval *	real_args
ANR	1997416	DeclStmt									
ANR	1997417	Decl							zval	zval *	param
ANR	1997418	DeclStmt									
ANR	1997419	Decl							int	int	arg_count
ANR	1997420	DeclStmt									
ANR	1997421	Decl							zval	zval *	tmp
ANR	1997422	DeclStmt									
ANR	1997423	Decl							zend_bool	zend_bool	free_soap_headers
ANR	1997424	DeclStmt									
ANR	1997425	Decl							zval	zval *	this_ptr
ANR	1997426	DeclStmt									
ANR	1997427	Decl							HashTable	HashTable *	hto
ANR	1997428	DeclStmt									
ANR	1997429	Decl							HashTable	HashTable *	default_headers
ANR	1997430	DeclStmt									
ANR	1997431	Decl							sdlPtr	sdlPtr	sdl
ANR	1997432	DeclStmt									
ANR	1997433	Decl							smart_str	smart_str	buf
ANR	1997434	DeclStmt									
ANR	1997435	Decl							sdlFunctionPtr	sdlFunctionPtr	function
ANR	1997436	DeclStmt									
ANR	1997437	Decl							sdlPtr	sdlPtr	sdl
ANR	1997438	DeclStmt									
ANR	1997439	Decl							sdlTypePtr	sdlTypePtr	type
ANR	1997440	DeclStmt									
ANR	1997441	Decl							smart_str	smart_str	buf
ANR	1997442	DeclStmt									
ANR	1997443	Decl							zval	zval *	tmp
ANR	1997444	DeclStmt									
ANR	1997445	Decl							zval	zval *	tmp
ANR	1997446	DeclStmt									
ANR	1997447	Decl							zval	zval *	tmp
ANR	1997448	DeclStmt									
ANR	1997449	Decl							zval	zval *	tmp
ANR	1997450	DeclStmt									
ANR	1997451	Decl							zend_string	zend_string *	buf
ANR	1997452	DeclStmt									
ANR	1997453	Decl							char	char *	location
ANR	1997454	Decl							char	char *	action
ANR	1997455	DeclStmt									
ANR	1997456	Decl							size_t	size_t	location_size
ANR	1997457	Decl							size_t	size_t	action_size
ANR	1997458	DeclStmt									
ANR	1997459	Decl							zend_long	zend_long	version
ANR	1997460	DeclStmt									
ANR	1997461	Decl							zend_long	zend_long	one_way
ANR	1997462	DeclStmt									
ANR	1997463	Decl							zval	zval *	this_ptr
ANR	1997464	DeclStmt									
ANR	1997465	Decl							char	char *	name
ANR	1997466	DeclStmt									
ANR	1997467	Decl							char	char *	val
ANR	1997468	DeclStmt									
ANR	1997469	Decl							size_t	size_t	name_len
ANR	1997470	Decl							size_t	size_t	val_len
ANR	1997471	DeclStmt									
ANR	1997472	Decl							zval	zval *	cookies
ANR	1997473	DeclStmt									
ANR	1997474	Decl							zval	zval *	this_ptr
ANR	1997475	DeclStmt									
ANR	1997476	Decl							zval	zval	zcookie
ANR	1997477	DeclStmt									
ANR	1997478	Decl							zval	zval	tmp_cookies
ANR	1997479	DeclStmt									
ANR	1997480	Decl							zval	zval *	cookies
ANR	1997481	DeclStmt									
ANR	1997482	Decl							zval	zval *	headers
ANR	1997483	DeclStmt									
ANR	1997484	Decl							zval	zval *	this_ptr
ANR	1997485	DeclStmt									
ANR	1997486	Decl							zval	zval *	default_headers
ANR	1997487	DeclStmt									
ANR	1997488	Decl							zval	zval	default_headers
ANR	1997489	DeclStmt									
ANR	1997490	Decl							char	char *	location
ANR	1997491	DeclStmt									
ANR	1997492	Decl							size_t	size_t	location_len
ANR	1997493	DeclStmt									
ANR	1997494	Decl							zval	zval *	tmp
ANR	1997495	DeclStmt									
ANR	1997496	Decl							zval	zval *	this_ptr
ANR	1997497	Function	clear_soap_fault	3260:0:108253:108429							
ANR	1997498	FunctionDef	clear_soap_fault (zval * obj)		1997497	0					
ANR	1997499	CompoundStatement		3261:0:108293:108429	1997497	0					
ANR	1997500	IfStatement	if ( obj != NULL && Z_TYPE_P ( obj ) == IS_OBJECT )		1997497	0					
ANR	1997501	Condition	obj != NULL && Z_TYPE_P ( obj ) == IS_OBJECT	3262:5:108300:108340	1997497	0	True				
ANR	1997502	AndExpression	obj != NULL && Z_TYPE_P ( obj ) == IS_OBJECT		1997497	0		&&			
ANR	1997503	EqualityExpression	obj != NULL		1997497	0		!=			
ANR	1997504	Identifier	obj		1997497	0					
ANR	1997505	Identifier	NULL		1997497	1					
ANR	1997506	EqualityExpression	Z_TYPE_P ( obj ) == IS_OBJECT		1997497	1		==			
ANR	1997507	CallExpression	Z_TYPE_P ( obj )		1997497	0					
ANR	1997508	Callee	Z_TYPE_P		1997497	0					
ANR	1997509	Identifier	Z_TYPE_P		1997497	0					
ANR	1997510	ArgumentList	obj		1997497	1					
ANR	1997511	Argument	obj		1997497	0					
ANR	1997512	Identifier	obj		1997497	0					
ANR	1997513	Identifier	IS_OBJECT		1997497	1					
ANR	1997514	CompoundStatement		2:48:49:49	1997497	1					
ANR	1997515	ExpressionStatement	"zend_hash_str_del ( Z_OBJPROP_P ( obj ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 )"	3263:2:108347:108424	1997497	0	True				
ANR	1997516	CallExpression	"zend_hash_str_del ( Z_OBJPROP_P ( obj ) , ""__soap_fault"" , sizeof ( ""__soap_fault"" ) - 1 )"		1997497	0					
ANR	1997517	Callee	zend_hash_str_del		1997497	0					
ANR	1997518	Identifier	zend_hash_str_del		1997497	0					
ANR	1997519	ArgumentList	Z_OBJPROP_P ( obj )		1997497	1					
ANR	1997520	Argument	Z_OBJPROP_P ( obj )		1997497	0					
ANR	1997521	CallExpression	Z_OBJPROP_P ( obj )		1997497	0					
ANR	1997522	Callee	Z_OBJPROP_P		1997497	0					
ANR	1997523	Identifier	Z_OBJPROP_P		1997497	0					
ANR	1997524	ArgumentList	obj		1997497	1					
ANR	1997525	Argument	obj		1997497	0					
ANR	1997526	Identifier	obj		1997497	0					
ANR	1997527	Argument	"""__soap_fault"""		1997497	1					
ANR	1997528	PrimaryExpression	"""__soap_fault"""		1997497	0					
ANR	1997529	Argument	"sizeof ( ""__soap_fault"" ) - 1"		1997497	2					
ANR	1997530	AdditiveExpression	"sizeof ( ""__soap_fault"" ) - 1"		1997497	0		-			
ANR	1997531	SizeofExpression	"sizeof ( ""__soap_fault"" )"		1997497	0					
ANR	1997532	Sizeof	sizeof		1997497	0					
ANR	1997533	PrimaryExpression	"""__soap_fault"""		1997497	1					
ANR	1997534	PrimaryExpression	1		1997497	1					
ANR	1997535	ReturnType	static void		1997497	1					
ANR	1997536	Identifier	clear_soap_fault		1997497	2					
ANR	1997537	ParameterList	zval * obj		1997497	3					
ANR	1997538	Parameter	zval * obj	3260:29:108282:108290	1997497	0	True				
ANR	1997539	ParameterType	zval *		1997497	0					
ANR	1997540	Identifier	obj		1997497	1					
ANR	1997541	CFGEntryNode	ENTRY		1997497		True				
ANR	1997542	CFGExitNode	EXIT		1997497		True				
ANR	1997543	Symbol	NULL		1997497						
ANR	1997544	Symbol	obj		1997497						
ANR	1997545	Symbol	Z_OBJPROP_P		1997497						
ANR	1997546	Symbol	IS_OBJECT		1997497						
ANR	1997547	Symbol	Z_TYPE_P		1997497						
ANR	1997548	Function	add_soap_fault_ex	3267:0:108432:108741							
ANR	1997549	FunctionDef	"add_soap_fault_ex (zval * fault , zval * obj , char * fault_code , char * fault_string , char * fault_actor , zval * fault_detail)"		1997548	0					
ANR	1997550	CompoundStatement		3268:0:108563:108741	1997548	0					
ANR	1997551	ExpressionStatement	ZVAL_NULL ( fault )	3269:1:108566:108582	1997548	0	True				
ANR	1997552	CallExpression	ZVAL_NULL ( fault )		1997548	0					
ANR	1997553	Callee	ZVAL_NULL		1997548	0					
ANR	1997554	Identifier	ZVAL_NULL		1997548	0					
ANR	1997555	ArgumentList	fault		1997548	1					
ANR	1997556	Argument	fault		1997548	0					
ANR	1997557	Identifier	fault		1997548	0					
ANR	1997558	ExpressionStatement	"set_soap_fault ( fault , NULL , fault_code , fault_string , fault_actor , fault_detail , NULL )"	3270:1:108585:108671	1997548	1	True				
ANR	1997559	CallExpression	"set_soap_fault ( fault , NULL , fault_code , fault_string , fault_actor , fault_detail , NULL )"		1997548	0					
ANR	1997560	Callee	set_soap_fault		1997548	0					
ANR	1997561	Identifier	set_soap_fault		1997548	0					
ANR	1997562	ArgumentList	fault		1997548	1					
ANR	1997563	Argument	fault		1997548	0					
ANR	1997564	Identifier	fault		1997548	0					
ANR	1997565	Argument	NULL		1997548	1					
ANR	1997566	Identifier	NULL		1997548	0					
ANR	1997567	Argument	fault_code		1997548	2					
ANR	1997568	Identifier	fault_code		1997548	0					
ANR	1997569	Argument	fault_string		1997548	3					
ANR	1997570	Identifier	fault_string		1997548	0					
ANR	1997571	Argument	fault_actor		1997548	4					
ANR	1997572	Identifier	fault_actor		1997548	0					
ANR	1997573	Argument	fault_detail		1997548	5					
ANR	1997574	Identifier	fault_detail		1997548	0					
ANR	1997575	Argument	NULL		1997548	6					
ANR	1997576	Identifier	NULL		1997548	0					
ANR	1997577	ExpressionStatement	"add_property_zval ( obj , ""__soap_fault"" , fault )"	3271:1:108674:108719	1997548	2	True				
ANR	1997578	CallExpression	"add_property_zval ( obj , ""__soap_fault"" , fault )"		1997548	0					
ANR	1997579	Callee	add_property_zval		1997548	0					
ANR	1997580	Identifier	add_property_zval		1997548	0					
ANR	1997581	ArgumentList	obj		1997548	1					
ANR	1997582	Argument	obj		1997548	0					
ANR	1997583	Identifier	obj		1997548	0					
ANR	1997584	Argument	"""__soap_fault"""		1997548	1					
ANR	1997585	PrimaryExpression	"""__soap_fault"""		1997548	0					
ANR	1997586	Argument	fault		1997548	2					
ANR	1997587	Identifier	fault		1997548	0					
ANR	1997588	ExpressionStatement	Z_DELREF_P ( fault )	3272:1:108722:108739	1997548	3	True				
ANR	1997589	CallExpression	Z_DELREF_P ( fault )		1997548	0					
ANR	1997590	Callee	Z_DELREF_P		1997548	0					
ANR	1997591	Identifier	Z_DELREF_P		1997548	0					
ANR	1997592	ArgumentList	fault		1997548	1					
ANR	1997593	Argument	fault		1997548	0					
ANR	1997594	Identifier	fault		1997548	0					
ANR	1997595	ReturnType	static void		1997548	1					
ANR	1997596	Identifier	add_soap_fault_ex		1997548	2					
ANR	1997597	ParameterList	"zval * fault , zval * obj , char * fault_code , char * fault_string , char * fault_actor , zval * fault_detail"		1997548	3					
ANR	1997598	Parameter	zval * fault	3267:30:108462:108472	1997548	0	True				
ANR	1997599	ParameterType	zval *		1997548	0					
ANR	1997600	Identifier	fault		1997548	1					
ANR	1997601	Parameter	zval * obj	3267:43:108475:108483	1997548	1	True				
ANR	1997602	ParameterType	zval *		1997548	0					
ANR	1997603	Identifier	obj		1997548	1					
ANR	1997604	Parameter	char * fault_code	3267:54:108486:108501	1997548	2	True				
ANR	1997605	ParameterType	char *		1997548	0					
ANR	1997606	Identifier	fault_code		1997548	1					
ANR	1997607	Parameter	char * fault_string	3267:72:108504:108521	1997548	3	True				
ANR	1997608	ParameterType	char *		1997548	0					
ANR	1997609	Identifier	fault_string		1997548	1					
ANR	1997610	Parameter	char * fault_actor	3267:92:108524:108540	1997548	4	True				
ANR	1997611	ParameterType	char *		1997548	0					
ANR	1997612	Identifier	fault_actor		1997548	1					
ANR	1997613	Parameter	zval * fault_detail	3267:111:108543:108560	1997548	5	True				
ANR	1997614	ParameterType	zval *		1997548	0					
ANR	1997615	Identifier	fault_detail		1997548	1					
ANR	1997616	CFGEntryNode	ENTRY		1997548		True				
ANR	1997617	CFGExitNode	EXIT		1997548		True				
ANR	1997618	Symbol	fault_string		1997548						
ANR	1997619	Symbol	NULL		1997548						
ANR	1997620	Symbol	fault_actor		1997548						
ANR	1997621	Symbol	obj		1997548						
ANR	1997622	Symbol	fault		1997548						
ANR	1997623	Symbol	fault_code		1997548						
ANR	1997624	Symbol	fault_detail		1997548						
ANR	1997625	Function	add_soap_fault	3275:0:108744:109045							
ANR	1997626	FunctionDef	"add_soap_fault (zval * obj , char * fault_code , char * fault_string , char * fault_actor , zval * fault_detail)"		1997625	0					
ANR	1997627	CompoundStatement		3276:0:108852:109045	1997625	0					
ANR	1997628	IdentifierDeclStatement	zval fault ;	3277:1:108855:108865	1997625	0	True				
ANR	1997629	IdentifierDecl	fault		1997625	0					
ANR	1997630	IdentifierDeclType	zval		1997625	0					
ANR	1997631	Identifier	fault		1997625	1					
ANR	1997632	ExpressionStatement	ZVAL_NULL ( & fault )	3279:1:108869:108886	1997625	1	True				
ANR	1997633	CallExpression	ZVAL_NULL ( & fault )		1997625	0					
ANR	1997634	Callee	ZVAL_NULL		1997625	0					
ANR	1997635	Identifier	ZVAL_NULL		1997625	0					
ANR	1997636	ArgumentList	& fault		1997625	1					
ANR	1997637	Argument	& fault		1997625	0					
ANR	1997638	UnaryOperationExpression	& fault		1997625	0					
ANR	1997639	UnaryOperator	&		1997625	0					
ANR	1997640	Identifier	fault		1997625	1					
ANR	1997641	ExpressionStatement	"set_soap_fault ( & fault , NULL , fault_code , fault_string , fault_actor , fault_detail , NULL )"	3280:1:108889:108976	1997625	2	True				
ANR	1997642	CallExpression	"set_soap_fault ( & fault , NULL , fault_code , fault_string , fault_actor , fault_detail , NULL )"		1997625	0					
ANR	1997643	Callee	set_soap_fault		1997625	0					
ANR	1997644	Identifier	set_soap_fault		1997625	0					
ANR	1997645	ArgumentList	& fault		1997625	1					
ANR	1997646	Argument	& fault		1997625	0					
ANR	1997647	UnaryOperationExpression	& fault		1997625	0					
ANR	1997648	UnaryOperator	&		1997625	0					
ANR	1997649	Identifier	fault		1997625	1					
ANR	1997650	Argument	NULL		1997625	1					
ANR	1997651	Identifier	NULL		1997625	0					
ANR	1997652	Argument	fault_code		1997625	2					
ANR	1997653	Identifier	fault_code		1997625	0					
ANR	1997654	Argument	fault_string		1997625	3					
ANR	1997655	Identifier	fault_string		1997625	0					
ANR	1997656	Argument	fault_actor		1997625	4					
ANR	1997657	Identifier	fault_actor		1997625	0					
ANR	1997658	Argument	fault_detail		1997625	5					
ANR	1997659	Identifier	fault_detail		1997625	0					
ANR	1997660	Argument	NULL		1997625	6					
ANR	1997661	Identifier	NULL		1997625	0					
ANR	1997662	ExpressionStatement	"add_property_zval ( obj , ""__soap_fault"" , & fault )"	3281:1:108979:109025	1997625	3	True				
ANR	1997663	CallExpression	"add_property_zval ( obj , ""__soap_fault"" , & fault )"		1997625	0					
ANR	1997664	Callee	add_property_zval		1997625	0					
ANR	1997665	Identifier	add_property_zval		1997625	0					
ANR	1997666	ArgumentList	obj		1997625	1					
ANR	1997667	Argument	obj		1997625	0					
ANR	1997668	Identifier	obj		1997625	0					
ANR	1997669	Argument	"""__soap_fault"""		1997625	1					
ANR	1997670	PrimaryExpression	"""__soap_fault"""		1997625	0					
ANR	1997671	Argument	& fault		1997625	2					
ANR	1997672	UnaryOperationExpression	& fault		1997625	0					
ANR	1997673	UnaryOperator	&		1997625	0					
ANR	1997674	Identifier	fault		1997625	1					
ANR	1997675	ExpressionStatement	Z_DELREF ( fault )	3282:1:109028:109043	1997625	4	True				
ANR	1997676	CallExpression	Z_DELREF ( fault )		1997625	0					
ANR	1997677	Callee	Z_DELREF		1997625	0					
ANR	1997678	Identifier	Z_DELREF		1997625	0					
ANR	1997679	ArgumentList	fault		1997625	1					
ANR	1997680	Argument	fault		1997625	0					
ANR	1997681	Identifier	fault		1997625	0					
ANR	1997682	ReturnType	void		1997625	1					
ANR	1997683	Identifier	add_soap_fault		1997625	2					
ANR	1997684	ParameterList	"zval * obj , char * fault_code , char * fault_string , char * fault_actor , zval * fault_detail"		1997625	3					
ANR	1997685	Parameter	zval * obj	3275:20:108764:108772	1997625	0	True				
ANR	1997686	ParameterType	zval *		1997625	0					
ANR	1997687	Identifier	obj		1997625	1					
ANR	1997688	Parameter	char * fault_code	3275:31:108775:108790	1997625	1	True				
ANR	1997689	ParameterType	char *		1997625	0					
ANR	1997690	Identifier	fault_code		1997625	1					
ANR	1997691	Parameter	char * fault_string	3275:49:108793:108810	1997625	2	True				
ANR	1997692	ParameterType	char *		1997625	0					
ANR	1997693	Identifier	fault_string		1997625	1					
ANR	1997694	Parameter	char * fault_actor	3275:69:108813:108829	1997625	3	True				
ANR	1997695	ParameterType	char *		1997625	0					
ANR	1997696	Identifier	fault_actor		1997625	1					
ANR	1997697	Parameter	zval * fault_detail	3275:88:108832:108849	1997625	4	True				
ANR	1997698	ParameterType	zval *		1997625	0					
ANR	1997699	Identifier	fault_detail		1997625	1					
ANR	1997700	CFGEntryNode	ENTRY		1997625		True				
ANR	1997701	CFGExitNode	EXIT		1997625		True				
ANR	1997702	Symbol	fault_string		1997625						
ANR	1997703	Symbol	NULL		1997625						
ANR	1997704	Symbol	fault_actor		1997625						
ANR	1997705	Symbol	obj		1997625						
ANR	1997706	Symbol	fault		1997625						
ANR	1997707	Symbol	& fault		1997625						
ANR	1997708	Symbol	fault_code		1997625						
ANR	1997709	Symbol	fault_detail		1997625						
ANR	1997710	Function	set_soap_fault	3285:0:109048:111121							
ANR	1997711	FunctionDef	"set_soap_fault (zval * obj , char * fault_code_ns , char * fault_code , char * fault_string , char * fault_actor , zval * fault_detail , char * name)"		1997710	0					
ANR	1997712	CompoundStatement		3286:0:109196:111121	1997710	0					
ANR	1997713	IfStatement	if ( Z_TYPE_P ( obj ) != IS_OBJECT )		1997710	0					
ANR	1997714	Condition	Z_TYPE_P ( obj ) != IS_OBJECT	3287:5:109203:109228	1997710	0	True				
ANR	1997715	EqualityExpression	Z_TYPE_P ( obj ) != IS_OBJECT		1997710	0		!=			
ANR	1997716	CallExpression	Z_TYPE_P ( obj )		1997710	0					
ANR	1997717	Callee	Z_TYPE_P		1997710	0					
ANR	1997718	Identifier	Z_TYPE_P		1997710	0					
ANR	1997719	ArgumentList	obj		1997710	1					
ANR	1997720	Argument	obj		1997710	0					
ANR	1997721	Identifier	obj		1997710	0					
ANR	1997722	Identifier	IS_OBJECT		1997710	1					
ANR	1997723	CompoundStatement		2:33:34:34	1997710	1					
ANR	1997724	ExpressionStatement	"object_init_ex ( obj , soap_fault_class_entry )"	3288:2:109235:109278	1997710	0	True				
ANR	1997725	CallExpression	"object_init_ex ( obj , soap_fault_class_entry )"		1997710	0					
ANR	1997726	Callee	object_init_ex		1997710	0					
ANR	1997727	Identifier	object_init_ex		1997710	0					
ANR	1997728	ArgumentList	obj		1997710	1					
ANR	1997729	Argument	obj		1997710	0					
ANR	1997730	Identifier	obj		1997710	0					
ANR	1997731	Argument	soap_fault_class_entry		1997710	1					
ANR	1997732	Identifier	soap_fault_class_entry		1997710	0					
ANR	1997733	ExpressionStatement	"add_property_string ( obj , ""faultstring"" , fault_string ? fault_string : """" )"	3291:1:109285:109358	1997710	1	True				
ANR	1997734	CallExpression	"add_property_string ( obj , ""faultstring"" , fault_string ? fault_string : """" )"		1997710	0					
ANR	1997735	Callee	add_property_string		1997710	0					
ANR	1997736	Identifier	add_property_string		1997710	0					
ANR	1997737	ArgumentList	obj		1997710	1					
ANR	1997738	Argument	obj		1997710	0					
ANR	1997739	Identifier	obj		1997710	0					
ANR	1997740	Argument	"""faultstring"""		1997710	1					
ANR	1997741	PrimaryExpression	"""faultstring"""		1997710	0					
ANR	1997742	Argument	"fault_string ? fault_string : """""		1997710	2					
ANR	1997743	ConditionalExpression	"fault_string ? fault_string : """""		1997710	0					
ANR	1997744	Condition	fault_string		1997710	0					
ANR	1997745	Identifier	fault_string		1997710	0					
ANR	1997746	Identifier	fault_string		1997710	1					
ANR	1997747	PrimaryExpression	""""""		1997710	2					
ANR	1997748	ExpressionStatement	"zend_update_property_string ( zend_ce_exception , obj , ""message"" , sizeof ( ""message"" ) - 1 , ( fault_string ? fault_string : """" ) )"	3292:1:109361:109480	1997710	2	True				
ANR	1997749	CallExpression	"zend_update_property_string ( zend_ce_exception , obj , ""message"" , sizeof ( ""message"" ) - 1 , ( fault_string ? fault_string : """" ) )"		1997710	0					
ANR	1997750	Callee	zend_update_property_string		1997710	0					
ANR	1997751	Identifier	zend_update_property_string		1997710	0					
ANR	1997752	ArgumentList	zend_ce_exception		1997710	1					
ANR	1997753	Argument	zend_ce_exception		1997710	0					
ANR	1997754	Identifier	zend_ce_exception		1997710	0					
ANR	1997755	Argument	obj		1997710	1					
ANR	1997756	Identifier	obj		1997710	0					
ANR	1997757	Argument	"""message"""		1997710	2					
ANR	1997758	PrimaryExpression	"""message"""		1997710	0					
ANR	1997759	Argument	"sizeof ( ""message"" ) - 1"		1997710	3					
ANR	1997760	AdditiveExpression	"sizeof ( ""message"" ) - 1"		1997710	0		-			
ANR	1997761	SizeofExpression	"sizeof ( ""message"" )"		1997710	0					
ANR	1997762	Sizeof	sizeof		1997710	0					
ANR	1997763	PrimaryExpression	"""message"""		1997710	1					
ANR	1997764	PrimaryExpression	1		1997710	1					
ANR	1997765	Argument	"fault_string ? fault_string : """""		1997710	4					
ANR	1997766	ConditionalExpression	"fault_string ? fault_string : """""		1997710	0					
ANR	1997767	Condition	fault_string		1997710	0					
ANR	1997768	Identifier	fault_string		1997710	0					
ANR	1997769	Identifier	fault_string		1997710	1					
ANR	1997770	PrimaryExpression	""""""		1997710	2					
ANR	1997771	IfStatement	if ( fault_code != NULL )		1997710	3					
ANR	1997772	Condition	fault_code != NULL	3294:5:109488:109505	1997710	0	True				
ANR	1997773	EqualityExpression	fault_code != NULL		1997710	0		!=			
ANR	1997774	Identifier	fault_code		1997710	0					
ANR	1997775	Identifier	NULL		1997710	1					
ANR	1997776	CompoundStatement		10:2:315:359	1997710	1					
ANR	1997777	IdentifierDeclStatement	int soap_version = SOAP_GLOBAL ( soap_version ) ;	3295:2:109512:109556	1997710	0	True				
ANR	1997778	IdentifierDecl	soap_version = SOAP_GLOBAL ( soap_version )		1997710	0					
ANR	1997779	IdentifierDeclType	int		1997710	0					
ANR	1997780	Identifier	soap_version		1997710	1					
ANR	1997781	AssignmentExpression	soap_version = SOAP_GLOBAL ( soap_version )		1997710	2		=			
ANR	1997782	Identifier	soap_version		1997710	0					
ANR	1997783	CallExpression	SOAP_GLOBAL ( soap_version )		1997710	1					
ANR	1997784	Callee	SOAP_GLOBAL		1997710	0					
ANR	1997785	Identifier	SOAP_GLOBAL		1997710	0					
ANR	1997786	ArgumentList	soap_version		1997710	1					
ANR	1997787	Argument	soap_version		1997710	0					
ANR	1997788	Identifier	soap_version		1997710	0					
ANR	1997789	IfStatement	if ( fault_code_ns )		1997710	1					
ANR	1997790	Condition	fault_code_ns	3297:6:109565:109577	1997710	0	True				
ANR	1997791	Identifier	fault_code_ns		1997710	0					
ANR	1997792	CompoundStatement		12:21:383:383	1997710	1					
ANR	1997793	ExpressionStatement	"add_property_string ( obj , ""faultcode"" , fault_code )"	3298:3:109585:109634	1997710	0	True				
ANR	1997794	CallExpression	"add_property_string ( obj , ""faultcode"" , fault_code )"		1997710	0					
ANR	1997795	Callee	add_property_string		1997710	0					
ANR	1997796	Identifier	add_property_string		1997710	0					
ANR	1997797	ArgumentList	obj		1997710	1					
ANR	1997798	Argument	obj		1997710	0					
ANR	1997799	Identifier	obj		1997710	0					
ANR	1997800	Argument	"""faultcode"""		1997710	1					
ANR	1997801	PrimaryExpression	"""faultcode"""		1997710	0					
ANR	1997802	Argument	fault_code		1997710	2					
ANR	1997803	Identifier	fault_code		1997710	0					
ANR	1997804	ExpressionStatement	"add_property_string ( obj , ""faultcodens"" , fault_code_ns )"	3299:3:109639:109693	1997710	1	True				
ANR	1997805	CallExpression	"add_property_string ( obj , ""faultcodens"" , fault_code_ns )"		1997710	0					
ANR	1997806	Callee	add_property_string		1997710	0					
ANR	1997807	Identifier	add_property_string		1997710	0					
ANR	1997808	ArgumentList	obj		1997710	1					
ANR	1997809	Argument	obj		1997710	0					
ANR	1997810	Identifier	obj		1997710	0					
ANR	1997811	Argument	"""faultcodens"""		1997710	1					
ANR	1997812	PrimaryExpression	"""faultcodens"""		1997710	0					
ANR	1997813	Argument	fault_code_ns		1997710	2					
ANR	1997814	Identifier	fault_code_ns		1997710	0					
ANR	1997815	ElseStatement	else		1997710	0					
ANR	1997816	CompoundStatement		15:9:507:507	1997710	0					
ANR	1997817	IfStatement	if ( soap_version == SOAP_1_1 )		1997710	0					
ANR	1997818	Condition	soap_version == SOAP_1_1	3301:7:109713:109736	1997710	0	True				
ANR	1997819	EqualityExpression	soap_version == SOAP_1_1		1997710	0		==			
ANR	1997820	Identifier	soap_version		1997710	0					
ANR	1997821	Identifier	SOAP_1_1		1997710	1					
ANR	1997822	CompoundStatement		16:33:542:542	1997710	1					
ANR	1997823	ExpressionStatement	"add_property_string ( obj , ""faultcode"" , fault_code )"	3302:4:109745:109794	1997710	0	True				
ANR	1997824	CallExpression	"add_property_string ( obj , ""faultcode"" , fault_code )"		1997710	0					
ANR	1997825	Callee	add_property_string		1997710	0					
ANR	1997826	Identifier	add_property_string		1997710	0					
ANR	1997827	ArgumentList	obj		1997710	1					
ANR	1997828	Argument	obj		1997710	0					
ANR	1997829	Identifier	obj		1997710	0					
ANR	1997830	Argument	"""faultcode"""		1997710	1					
ANR	1997831	PrimaryExpression	"""faultcode"""		1997710	0					
ANR	1997832	Argument	fault_code		1997710	2					
ANR	1997833	Identifier	fault_code		1997710	0					
ANR	1997834	IfStatement	"if ( strcmp ( fault_code , ""Client"" ) == 0 || strcmp ( fault_code , ""Server"" ) == 0 || strcmp ( fault_code , ""VersionMismatch"" ) == 0 || strcmp ( fault_code , ""MustUnderstand"" ) == 0 )"		1997710	1					
ANR	1997835	Condition	"strcmp ( fault_code , ""Client"" ) == 0 || strcmp ( fault_code , ""Server"" ) == 0 || strcmp ( fault_code , ""VersionMismatch"" ) == 0 || strcmp ( fault_code , ""MustUnderstand"" ) == 0"	3303:8:109804:109984	1997710	0	True				
ANR	1997836	OrExpression	"strcmp ( fault_code , ""Client"" ) == 0 || strcmp ( fault_code , ""Server"" ) == 0 || strcmp ( fault_code , ""VersionMismatch"" ) == 0 || strcmp ( fault_code , ""MustUnderstand"" ) == 0"		1997710	0		||			
ANR	1997837	EqualityExpression	"strcmp ( fault_code , ""Client"" ) == 0"		1997710	0		==			
ANR	1997838	CallExpression	"strcmp ( fault_code , ""Client"" )"		1997710	0					
ANR	1997839	Callee	strcmp		1997710	0					
ANR	1997840	Identifier	strcmp		1997710	0					
ANR	1997841	ArgumentList	fault_code		1997710	1					
ANR	1997842	Argument	fault_code		1997710	0					
ANR	1997843	Identifier	fault_code		1997710	0					
ANR	1997844	Argument	"""Client"""		1997710	1					
ANR	1997845	PrimaryExpression	"""Client"""		1997710	0					
ANR	1997846	PrimaryExpression	0		1997710	1					
ANR	1997847	OrExpression	"strcmp ( fault_code , ""Server"" ) == 0 || strcmp ( fault_code , ""VersionMismatch"" ) == 0 || strcmp ( fault_code , ""MustUnderstand"" ) == 0"		1997710	1		||			
ANR	1997848	EqualityExpression	"strcmp ( fault_code , ""Server"" ) == 0"		1997710	0		==			
ANR	1997849	CallExpression	"strcmp ( fault_code , ""Server"" )"		1997710	0					
ANR	1997850	Callee	strcmp		1997710	0					
ANR	1997851	Identifier	strcmp		1997710	0					
ANR	1997852	ArgumentList	fault_code		1997710	1					
ANR	1997853	Argument	fault_code		1997710	0					
ANR	1997854	Identifier	fault_code		1997710	0					
ANR	1997855	Argument	"""Server"""		1997710	1					
ANR	1997856	PrimaryExpression	"""Server"""		1997710	0					
ANR	1997857	PrimaryExpression	0		1997710	1					
ANR	1997858	OrExpression	"strcmp ( fault_code , ""VersionMismatch"" ) == 0 || strcmp ( fault_code , ""MustUnderstand"" ) == 0"		1997710	1		||			
ANR	1997859	EqualityExpression	"strcmp ( fault_code , ""VersionMismatch"" ) == 0"		1997710	0		==			
ANR	1997860	CallExpression	"strcmp ( fault_code , ""VersionMismatch"" )"		1997710	0					
ANR	1997861	Callee	strcmp		1997710	0					
ANR	1997862	Identifier	strcmp		1997710	0					
ANR	1997863	ArgumentList	fault_code		1997710	1					
ANR	1997864	Argument	fault_code		1997710	0					
ANR	1997865	Identifier	fault_code		1997710	0					
ANR	1997866	Argument	"""VersionMismatch"""		1997710	1					
ANR	1997867	PrimaryExpression	"""VersionMismatch"""		1997710	0					
ANR	1997868	PrimaryExpression	0		1997710	1					
ANR	1997869	EqualityExpression	"strcmp ( fault_code , ""MustUnderstand"" ) == 0"		1997710	1		==			
ANR	1997870	CallExpression	"strcmp ( fault_code , ""MustUnderstand"" )"		1997710	0					
ANR	1997871	Callee	strcmp		1997710	0					
ANR	1997872	Identifier	strcmp		1997710	0					
ANR	1997873	ArgumentList	fault_code		1997710	1					
ANR	1997874	Argument	fault_code		1997710	0					
ANR	1997875	Identifier	fault_code		1997710	0					
ANR	1997876	Argument	"""MustUnderstand"""		1997710	1					
ANR	1997877	PrimaryExpression	"""MustUnderstand"""		1997710	0					
ANR	1997878	PrimaryExpression	0		1997710	1					
ANR	1997879	CompoundStatement		21:50:790:790	1997710	1					
ANR	1997880	ExpressionStatement	"add_property_string ( obj , ""faultcodens"" , SOAP_1_1_ENV_NAMESPACE )"	3307:5:109994:110057	1997710	0	True				
ANR	1997881	CallExpression	"add_property_string ( obj , ""faultcodens"" , SOAP_1_1_ENV_NAMESPACE )"		1997710	0					
ANR	1997882	Callee	add_property_string		1997710	0					
ANR	1997883	Identifier	add_property_string		1997710	0					
ANR	1997884	ArgumentList	obj		1997710	1					
ANR	1997885	Argument	obj		1997710	0					
ANR	1997886	Identifier	obj		1997710	0					
ANR	1997887	Argument	"""faultcodens"""		1997710	1					
ANR	1997888	PrimaryExpression	"""faultcodens"""		1997710	0					
ANR	1997889	Argument	SOAP_1_1_ENV_NAMESPACE		1997710	2					
ANR	1997890	Identifier	SOAP_1_1_ENV_NAMESPACE		1997710	0					
ANR	1997891	ElseStatement	else		1997710	0					
ANR	1997892	IfStatement	if ( soap_version == SOAP_1_2 )		1997710	0					
ANR	1997893	Condition	soap_version == SOAP_1_2	3309:14:110079:110102	1997710	0	True				
ANR	1997894	EqualityExpression	soap_version == SOAP_1_2		1997710	0		==			
ANR	1997895	Identifier	soap_version		1997710	0					
ANR	1997896	Identifier	SOAP_1_2		1997710	1					
ANR	1997897	CompoundStatement		24:40:908:908	1997710	1					
ANR	1997898	IfStatement	"if ( strcmp ( fault_code , ""Client"" ) == 0 )"		1997710	0					
ANR	1997899	Condition	"strcmp ( fault_code , ""Client"" ) == 0"	3310:8:110115:110146	1997710	0	True				
ANR	1997900	EqualityExpression	"strcmp ( fault_code , ""Client"" ) == 0"		1997710	0		==			
ANR	1997901	CallExpression	"strcmp ( fault_code , ""Client"" )"		1997710	0					
ANR	1997902	Callee	strcmp		1997710	0					
ANR	1997903	Identifier	strcmp		1997710	0					
ANR	1997904	ArgumentList	fault_code		1997710	1					
ANR	1997905	Argument	fault_code		1997710	0					
ANR	1997906	Identifier	fault_code		1997710	0					
ANR	1997907	Argument	"""Client"""		1997710	1					
ANR	1997908	PrimaryExpression	"""Client"""		1997710	0					
ANR	1997909	PrimaryExpression	0		1997710	1					
ANR	1997910	CompoundStatement		25:42:952:952	1997710	1					
ANR	1997911	ExpressionStatement	"add_property_string ( obj , ""faultcode"" , ""Sender"" )"	3311:5:110156:110203	1997710	0	True				
ANR	1997912	CallExpression	"add_property_string ( obj , ""faultcode"" , ""Sender"" )"		1997710	0					
ANR	1997913	Callee	add_property_string		1997710	0					
ANR	1997914	Identifier	add_property_string		1997710	0					
ANR	1997915	ArgumentList	obj		1997710	1					
ANR	1997916	Argument	obj		1997710	0					
ANR	1997917	Identifier	obj		1997710	0					
ANR	1997918	Argument	"""faultcode"""		1997710	1					
ANR	1997919	PrimaryExpression	"""faultcode"""		1997710	0					
ANR	1997920	Argument	"""Sender"""		1997710	2					
ANR	1997921	PrimaryExpression	"""Sender"""		1997710	0					
ANR	1997922	ExpressionStatement	"add_property_string ( obj , ""faultcodens"" , SOAP_1_2_ENV_NAMESPACE )"	3312:5:110210:110273	1997710	1	True				
ANR	1997923	CallExpression	"add_property_string ( obj , ""faultcodens"" , SOAP_1_2_ENV_NAMESPACE )"		1997710	0					
ANR	1997924	Callee	add_property_string		1997710	0					
ANR	1997925	Identifier	add_property_string		1997710	0					
ANR	1997926	ArgumentList	obj		1997710	1					
ANR	1997927	Argument	obj		1997710	0					
ANR	1997928	Identifier	obj		1997710	0					
ANR	1997929	Argument	"""faultcodens"""		1997710	1					
ANR	1997930	PrimaryExpression	"""faultcodens"""		1997710	0					
ANR	1997931	Argument	SOAP_1_2_ENV_NAMESPACE		1997710	2					
ANR	1997932	Identifier	SOAP_1_2_ENV_NAMESPACE		1997710	0					
ANR	1997933	ElseStatement	else		1997710	0					
ANR	1997934	IfStatement	"if ( strcmp ( fault_code , ""Server"" ) == 0 )"		1997710	0					
ANR	1997935	Condition	"strcmp ( fault_code , ""Server"" ) == 0"	3313:15:110290:110321	1997710	0	True				
ANR	1997936	EqualityExpression	"strcmp ( fault_code , ""Server"" ) == 0"		1997710	0		==			
ANR	1997937	CallExpression	"strcmp ( fault_code , ""Server"" )"		1997710	0					
ANR	1997938	Callee	strcmp		1997710	0					
ANR	1997939	Identifier	strcmp		1997710	0					
ANR	1997940	ArgumentList	fault_code		1997710	1					
ANR	1997941	Argument	fault_code		1997710	0					
ANR	1997942	Identifier	fault_code		1997710	0					
ANR	1997943	Argument	"""Server"""		1997710	1					
ANR	1997944	PrimaryExpression	"""Server"""		1997710	0					
ANR	1997945	PrimaryExpression	0		1997710	1					
ANR	1997946	CompoundStatement		28:49:1127:1127	1997710	1					
ANR	1997947	ExpressionStatement	"add_property_string ( obj , ""faultcode"" , ""Receiver"" )"	3314:5:110331:110380	1997710	0	True				
ANR	1997948	CallExpression	"add_property_string ( obj , ""faultcode"" , ""Receiver"" )"		1997710	0					
ANR	1997949	Callee	add_property_string		1997710	0					
ANR	1997950	Identifier	add_property_string		1997710	0					
ANR	1997951	ArgumentList	obj		1997710	1					
ANR	1997952	Argument	obj		1997710	0					
ANR	1997953	Identifier	obj		1997710	0					
ANR	1997954	Argument	"""faultcode"""		1997710	1					
ANR	1997955	PrimaryExpression	"""faultcode"""		1997710	0					
ANR	1997956	Argument	"""Receiver"""		1997710	2					
ANR	1997957	PrimaryExpression	"""Receiver"""		1997710	0					
ANR	1997958	ExpressionStatement	"add_property_string ( obj , ""faultcodens"" , SOAP_1_2_ENV_NAMESPACE )"	3315:5:110387:110450	1997710	1	True				
ANR	1997959	CallExpression	"add_property_string ( obj , ""faultcodens"" , SOAP_1_2_ENV_NAMESPACE )"		1997710	0					
ANR	1997960	Callee	add_property_string		1997710	0					
ANR	1997961	Identifier	add_property_string		1997710	0					
ANR	1997962	ArgumentList	obj		1997710	1					
ANR	1997963	Argument	obj		1997710	0					
ANR	1997964	Identifier	obj		1997710	0					
ANR	1997965	Argument	"""faultcodens"""		1997710	1					
ANR	1997966	PrimaryExpression	"""faultcodens"""		1997710	0					
ANR	1997967	Argument	SOAP_1_2_ENV_NAMESPACE		1997710	2					
ANR	1997968	Identifier	SOAP_1_2_ENV_NAMESPACE		1997710	0					
ANR	1997969	ElseStatement	else		1997710	0					
ANR	1997970	IfStatement	"if ( strcmp ( fault_code , ""VersionMismatch"" ) == 0 || strcmp ( fault_code , ""MustUnderstand"" ) == 0 || strcmp ( fault_code , ""DataEncodingUnknown"" ) == 0 )"		1997710	0					
ANR	1997971	Condition	"strcmp ( fault_code , ""VersionMismatch"" ) == 0 || strcmp ( fault_code , ""MustUnderstand"" ) == 0 || strcmp ( fault_code , ""DataEncodingUnknown"" ) == 0"	3316:15:110467:110630	1997710	0	True				
ANR	1997972	OrExpression	"strcmp ( fault_code , ""VersionMismatch"" ) == 0 || strcmp ( fault_code , ""MustUnderstand"" ) == 0 || strcmp ( fault_code , ""DataEncodingUnknown"" ) == 0"		1997710	0		||			
ANR	1997973	EqualityExpression	"strcmp ( fault_code , ""VersionMismatch"" ) == 0"		1997710	0		==			
ANR	1997974	CallExpression	"strcmp ( fault_code , ""VersionMismatch"" )"		1997710	0					
ANR	1997975	Callee	strcmp		1997710	0					
ANR	1997976	Identifier	strcmp		1997710	0					
ANR	1997977	ArgumentList	fault_code		1997710	1					
ANR	1997978	Argument	fault_code		1997710	0					
ANR	1997979	Identifier	fault_code		1997710	0					
ANR	1997980	Argument	"""VersionMismatch"""		1997710	1					
ANR	1997981	PrimaryExpression	"""VersionMismatch"""		1997710	0					
ANR	1997982	PrimaryExpression	0		1997710	1					
ANR	1997983	OrExpression	"strcmp ( fault_code , ""MustUnderstand"" ) == 0 || strcmp ( fault_code , ""DataEncodingUnknown"" ) == 0"		1997710	1		||			
ANR	1997984	EqualityExpression	"strcmp ( fault_code , ""MustUnderstand"" ) == 0"		1997710	0		==			
ANR	1997985	CallExpression	"strcmp ( fault_code , ""MustUnderstand"" )"		1997710	0					
ANR	1997986	Callee	strcmp		1997710	0					
ANR	1997987	Identifier	strcmp		1997710	0					
ANR	1997988	ArgumentList	fault_code		1997710	1					
ANR	1997989	Argument	fault_code		1997710	0					
ANR	1997990	Identifier	fault_code		1997710	0					
ANR	1997991	Argument	"""MustUnderstand"""		1997710	1					
ANR	1997992	PrimaryExpression	"""MustUnderstand"""		1997710	0					
ANR	1997993	PrimaryExpression	0		1997710	1					
ANR	1997994	EqualityExpression	"strcmp ( fault_code , ""DataEncodingUnknown"" ) == 0"		1997710	1		==			
ANR	1997995	CallExpression	"strcmp ( fault_code , ""DataEncodingUnknown"" )"		1997710	0					
ANR	1997996	Callee	strcmp		1997710	0					
ANR	1997997	Identifier	strcmp		1997710	0					
ANR	1997998	ArgumentList	fault_code		1997710	1					
ANR	1997999	Argument	fault_code		1997710	0					
ANR	1998000	Identifier	fault_code		1997710	0					
ANR	1998001	Argument	"""DataEncodingUnknown"""		1997710	1					
ANR	1998002	PrimaryExpression	"""DataEncodingUnknown"""		1997710	0					
ANR	1998003	PrimaryExpression	0		1997710	1					
ANR	1998004	CompoundStatement		33:62:1436:1436	1997710	1					
ANR	1998005	ExpressionStatement	"add_property_string ( obj , ""faultcode"" , fault_code )"	3319:5:110640:110689	1997710	0	True				
ANR	1998006	CallExpression	"add_property_string ( obj , ""faultcode"" , fault_code )"		1997710	0					
ANR	1998007	Callee	add_property_string		1997710	0					
ANR	1998008	Identifier	add_property_string		1997710	0					
ANR	1998009	ArgumentList	obj		1997710	1					
ANR	1998010	Argument	obj		1997710	0					
ANR	1998011	Identifier	obj		1997710	0					
ANR	1998012	Argument	"""faultcode"""		1997710	1					
ANR	1998013	PrimaryExpression	"""faultcode"""		1997710	0					
ANR	1998014	Argument	fault_code		1997710	2					
ANR	1998015	Identifier	fault_code		1997710	0					
ANR	1998016	ExpressionStatement	"add_property_string ( obj , ""faultcodens"" , SOAP_1_2_ENV_NAMESPACE )"	3320:5:110696:110759	1997710	1	True				
ANR	1998017	CallExpression	"add_property_string ( obj , ""faultcodens"" , SOAP_1_2_ENV_NAMESPACE )"		1997710	0					
ANR	1998018	Callee	add_property_string		1997710	0					
ANR	1998019	Identifier	add_property_string		1997710	0					
ANR	1998020	ArgumentList	obj		1997710	1					
ANR	1998021	Argument	obj		1997710	0					
ANR	1998022	Identifier	obj		1997710	0					
ANR	1998023	Argument	"""faultcodens"""		1997710	1					
ANR	1998024	PrimaryExpression	"""faultcodens"""		1997710	0					
ANR	1998025	Argument	SOAP_1_2_ENV_NAMESPACE		1997710	2					
ANR	1998026	Identifier	SOAP_1_2_ENV_NAMESPACE		1997710	0					
ANR	1998027	ElseStatement	else		1997710	0					
ANR	1998028	CompoundStatement		36:11:1575:1575	1997710	0					
ANR	1998029	ExpressionStatement	"add_property_string ( obj , ""faultcode"" , fault_code )"	3322:5:110779:110828	1997710	0	True				
ANR	1998030	CallExpression	"add_property_string ( obj , ""faultcode"" , fault_code )"		1997710	0					
ANR	1998031	Callee	add_property_string		1997710	0					
ANR	1998032	Identifier	add_property_string		1997710	0					
ANR	1998033	ArgumentList	obj		1997710	1					
ANR	1998034	Argument	obj		1997710	0					
ANR	1998035	Identifier	obj		1997710	0					
ANR	1998036	Argument	"""faultcode"""		1997710	1					
ANR	1998037	PrimaryExpression	"""faultcode"""		1997710	0					
ANR	1998038	Argument	fault_code		1997710	2					
ANR	1998039	Identifier	fault_code		1997710	0					
ANR	1998040	IfStatement	if ( fault_actor != NULL )		1997710	4					
ANR	1998041	Condition	fault_actor != NULL	3327:5:110853:110871	1997710	0	True				
ANR	1998042	EqualityExpression	fault_actor != NULL		1997710	0		!=			
ANR	1998043	Identifier	fault_actor		1997710	0					
ANR	1998044	Identifier	NULL		1997710	1					
ANR	1998045	CompoundStatement		42:26:1677:1677	1997710	1					
ANR	1998046	ExpressionStatement	"add_property_string ( obj , ""faultactor"" , fault_actor )"	3328:2:110878:110929	1997710	0	True				
ANR	1998047	CallExpression	"add_property_string ( obj , ""faultactor"" , fault_actor )"		1997710	0					
ANR	1998048	Callee	add_property_string		1997710	0					
ANR	1998049	Identifier	add_property_string		1997710	0					
ANR	1998050	ArgumentList	obj		1997710	1					
ANR	1998051	Argument	obj		1997710	0					
ANR	1998052	Identifier	obj		1997710	0					
ANR	1998053	Argument	"""faultactor"""		1997710	1					
ANR	1998054	PrimaryExpression	"""faultactor"""		1997710	0					
ANR	1998055	Argument	fault_actor		1997710	2					
ANR	1998056	Identifier	fault_actor		1997710	0					
ANR	1998057	IfStatement	if ( fault_detail != NULL && Z_TYPE_P ( fault_detail ) != IS_UNDEF )		1997710	5					
ANR	1998058	Condition	fault_detail != NULL && Z_TYPE_P ( fault_detail ) != IS_UNDEF	3330:5:110939:110996	1997710	0	True				
ANR	1998059	AndExpression	fault_detail != NULL && Z_TYPE_P ( fault_detail ) != IS_UNDEF		1997710	0		&&			
ANR	1998060	EqualityExpression	fault_detail != NULL		1997710	0		!=			
ANR	1998061	Identifier	fault_detail		1997710	0					
ANR	1998062	Identifier	NULL		1997710	1					
ANR	1998063	EqualityExpression	Z_TYPE_P ( fault_detail ) != IS_UNDEF		1997710	1		!=			
ANR	1998064	CallExpression	Z_TYPE_P ( fault_detail )		1997710	0					
ANR	1998065	Callee	Z_TYPE_P		1997710	0					
ANR	1998066	Identifier	Z_TYPE_P		1997710	0					
ANR	1998067	ArgumentList	fault_detail		1997710	1					
ANR	1998068	Argument	fault_detail		1997710	0					
ANR	1998069	Identifier	fault_detail		1997710	0					
ANR	1998070	Identifier	IS_UNDEF		1997710	1					
ANR	1998071	CompoundStatement		45:65:1802:1802	1997710	1					
ANR	1998072	ExpressionStatement	"add_property_zval ( obj , ""detail"" , fault_detail )"	3331:2:111003:111049	1997710	0	True				
ANR	1998073	CallExpression	"add_property_zval ( obj , ""detail"" , fault_detail )"		1997710	0					
ANR	1998074	Callee	add_property_zval		1997710	0					
ANR	1998075	Identifier	add_property_zval		1997710	0					
ANR	1998076	ArgumentList	obj		1997710	1					
ANR	1998077	Argument	obj		1997710	0					
ANR	1998078	Identifier	obj		1997710	0					
ANR	1998079	Argument	"""detail"""		1997710	1					
ANR	1998080	PrimaryExpression	"""detail"""		1997710	0					
ANR	1998081	Argument	fault_detail		1997710	2					
ANR	1998082	Identifier	fault_detail		1997710	0					
ANR	1998083	IfStatement	if ( name != NULL )		1997710	6					
ANR	1998084	Condition	name != NULL	3333:5:111059:111070	1997710	0	True				
ANR	1998085	EqualityExpression	name != NULL		1997710	0		!=			
ANR	1998086	Identifier	name		1997710	0					
ANR	1998087	Identifier	NULL		1997710	1					
ANR	1998088	CompoundStatement		48:19:1876:1876	1997710	1					
ANR	1998089	ExpressionStatement	"add_property_string ( obj , ""_name"" , name )"	3334:2:111077:111116	1997710	0	True				
ANR	1998090	CallExpression	"add_property_string ( obj , ""_name"" , name )"		1997710	0					
ANR	1998091	Callee	add_property_string		1997710	0					
ANR	1998092	Identifier	add_property_string		1997710	0					
ANR	1998093	ArgumentList	obj		1997710	1					
ANR	1998094	Argument	obj		1997710	0					
ANR	1998095	Identifier	obj		1997710	0					
ANR	1998096	Argument	"""_name"""		1997710	1					
ANR	1998097	PrimaryExpression	"""_name"""		1997710	0					
ANR	1998098	Argument	name		1997710	2					
ANR	1998099	Identifier	name		1997710	0					
ANR	1998100	ReturnType	static void		1997710	1					
ANR	1998101	Identifier	set_soap_fault		1997710	2					
ANR	1998102	ParameterList	"zval * obj , char * fault_code_ns , char * fault_code , char * fault_string , char * fault_actor , zval * fault_detail , char * name"		1997710	3					
ANR	1998103	Parameter	zval * obj	3285:27:109075:109083	1997710	0	True				
ANR	1998104	ParameterType	zval *		1997710	0					
ANR	1998105	Identifier	obj		1997710	1					
ANR	1998106	Parameter	char * fault_code_ns	3285:38:109086:109104	1997710	1	True				
ANR	1998107	ParameterType	char *		1997710	0					
ANR	1998108	Identifier	fault_code_ns		1997710	1					
ANR	1998109	Parameter	char * fault_code	3285:59:109107:109122	1997710	2	True				
ANR	1998110	ParameterType	char *		1997710	0					
ANR	1998111	Identifier	fault_code		1997710	1					
ANR	1998112	Parameter	char * fault_string	3285:77:109125:109142	1997710	3	True				
ANR	1998113	ParameterType	char *		1997710	0					
ANR	1998114	Identifier	fault_string		1997710	1					
ANR	1998115	Parameter	char * fault_actor	3285:97:109145:109161	1997710	4	True				
ANR	1998116	ParameterType	char *		1997710	0					
ANR	1998117	Identifier	fault_actor		1997710	1					
ANR	1998118	Parameter	zval * fault_detail	3285:116:109164:109181	1997710	5	True				
ANR	1998119	ParameterType	zval *		1997710	0					
ANR	1998120	Identifier	fault_detail		1997710	1					
ANR	1998121	Parameter	char * name	3285:136:109184:109193	1997710	6	True				
ANR	1998122	ParameterType	char *		1997710	0					
ANR	1998123	Identifier	name		1997710	1					
ANR	1998124	CFGEntryNode	ENTRY		1997710		True				
ANR	1998125	CFGExitNode	EXIT		1997710		True				
ANR	1998126	Symbol	strcmp		1997710						
ANR	1998127	Symbol	fault_code_ns		1997710						
ANR	1998128	Symbol	fault_string		1997710						
ANR	1998129	Symbol	SOAP_1_1_ENV_NAMESPACE		1997710						
ANR	1998130	Symbol	NULL		1997710						
ANR	1998131	Symbol	SOAP_1_1		1997710						
ANR	1998132	Symbol	Z_TYPE_P		1997710						
ANR	1998133	Symbol	SOAP_GLOBAL		1997710						
ANR	1998134	Symbol	SOAP_1_2_ENV_NAMESPACE		1997710						
ANR	1998135	Symbol	fault_detail		1997710						
ANR	1998136	Symbol	soap_fault_class_entry		1997710						
ANR	1998137	Symbol	fault_actor		1997710						
ANR	1998138	Symbol	obj		1997710						
ANR	1998139	Symbol	name		1997710						
ANR	1998140	Symbol	zend_ce_exception		1997710						
ANR	1998141	Symbol	soap_version		1997710						
ANR	1998142	Symbol	IS_OBJECT		1997710						
ANR	1998143	Symbol	SOAP_1_2		1997710						
ANR	1998144	Symbol	fault_code		1997710						
ANR	1998145	Symbol	IS_UNDEF		1997710						
ANR	1998146	Function	deserialize_parameters	3338:0:111124:113688							
ANR	1998147	FunctionDef	"deserialize_parameters (xmlNodePtr params , sdlFunctionPtr function , int * num_params , zval * * parameters)"		1998146	0					
ANR	1998148	CompoundStatement		3339:0:111239:113688	1998146	0					
ANR	1998149	IdentifierDeclStatement	"int cur_param = 0 , num_of_params = 0 ;"	3340:1:111242:111277	1998146	0	True				
ANR	1998150	IdentifierDecl	cur_param = 0		1998146	0					
ANR	1998151	IdentifierDeclType	int		1998146	0					
ANR	1998152	Identifier	cur_param		1998146	1					
ANR	1998153	AssignmentExpression	cur_param = 0		1998146	2		=			
ANR	1998154	Identifier	cur_param		1998146	0					
ANR	1998155	PrimaryExpression	0		1998146	1					
ANR	1998156	IdentifierDecl	num_of_params = 0		1998146	1					
ANR	1998157	IdentifierDeclType	int		1998146	0					
ANR	1998158	Identifier	num_of_params		1998146	1					
ANR	1998159	AssignmentExpression	num_of_params = 0		1998146	2		=			
ANR	1998160	Identifier	num_of_params		1998146	0					
ANR	1998161	PrimaryExpression	0		1998146	1					
ANR	1998162	IdentifierDeclStatement	zval * tmp_parameters = NULL ;	3341:1:111280:111307	1998146	1	True				
ANR	1998163	IdentifierDecl	* tmp_parameters = NULL		1998146	0					
ANR	1998164	IdentifierDeclType	zval *		1998146	0					
ANR	1998165	Identifier	tmp_parameters		1998146	1					
ANR	1998166	AssignmentExpression	* tmp_parameters = NULL		1998146	2		=			
ANR	1998167	Identifier	NULL		1998146	0					
ANR	1998168	Identifier	NULL		1998146	1					
ANR	1998169	IfStatement	if ( function != NULL )		1998146	2					
ANR	1998170	Condition	function != NULL	3343:5:111315:111330	1998146	0	True				
ANR	1998171	EqualityExpression	function != NULL		1998146	0		!=			
ANR	1998172	Identifier	function		1998146	0					
ANR	1998173	Identifier	NULL		1998146	1					
ANR	1998174	CompoundStatement		8:2:136:153	1998146	1					
ANR	1998175	IdentifierDeclStatement	sdlParamPtr param ;	3344:2:111337:111354	1998146	0	True				
ANR	1998176	IdentifierDecl	param		1998146	0					
ANR	1998177	IdentifierDeclType	sdlParamPtr		1998146	0					
ANR	1998178	Identifier	param		1998146	1					
ANR	1998179	IdentifierDeclStatement	xmlNodePtr val ;	3345:2:111358:111372	1998146	1	True				
ANR	1998180	IdentifierDecl	val		1998146	0					
ANR	1998181	IdentifierDeclType	xmlNodePtr		1998146	0					
ANR	1998182	Identifier	val		1998146	1					
ANR	1998183	IdentifierDeclStatement	int use_names = 0 ;	3346:2:111376:111393	1998146	2	True				
ANR	1998184	IdentifierDecl	use_names = 0		1998146	0					
ANR	1998185	IdentifierDeclType	int		1998146	0					
ANR	1998186	Identifier	use_names		1998146	1					
ANR	1998187	AssignmentExpression	use_names = 0		1998146	2		=			
ANR	1998188	Identifier	use_names		1998146	0					
ANR	1998189	PrimaryExpression	0		1998146	1					
ANR	1998190	IfStatement	if ( function -> requestParameters == NULL )		1998146	3					
ANR	1998191	Condition	function -> requestParameters == NULL	3348:6:111402:111436	1998146	0	True				
ANR	1998192	EqualityExpression	function -> requestParameters == NULL		1998146	0		==			
ANR	1998193	PtrMemberAccess	function -> requestParameters		1998146	0					
ANR	1998194	Identifier	function		1998146	0					
ANR	1998195	Identifier	requestParameters		1998146	1					
ANR	1998196	Identifier	NULL		1998146	1					
ANR	1998197	CompoundStatement		10:43:199:199	1998146	1					
ANR	1998198	ReturnStatement	return ;	3349:3:111444:111450	1998146	0	True				
ANR	1998199	ExpressionStatement	num_of_params = zend_hash_num_elements ( function -> requestParameters )	3351:2:111458:111525	1998146	4	True				
ANR	1998200	AssignmentExpression	num_of_params = zend_hash_num_elements ( function -> requestParameters )		1998146	0		=			
ANR	1998201	Identifier	num_of_params		1998146	0					
ANR	1998202	CallExpression	zend_hash_num_elements ( function -> requestParameters )		1998146	1					
ANR	1998203	Callee	zend_hash_num_elements		1998146	0					
ANR	1998204	Identifier	zend_hash_num_elements		1998146	0					
ANR	1998205	ArgumentList	function -> requestParameters		1998146	1					
ANR	1998206	Argument	function -> requestParameters		1998146	0					
ANR	1998207	PtrMemberAccess	function -> requestParameters		1998146	0					
ANR	1998208	Identifier	function		1998146	0					
ANR	1998209	Identifier	requestParameters		1998146	1					
ANR	1998210	Statement	ZEND_HASH_FOREACH_PTR	3352:2:111529:111549	1998146	5	True				
ANR	1998211	Statement	(	3352:23:111550:111550	1998146	6	True				
ANR	1998212	Statement	function	3352:24:111551:111558	1998146	7	True				
ANR	1998213	Statement	->	3352:32:111559:111560	1998146	8	True				
ANR	1998214	Statement	requestParameters	3352:34:111561:111577	1998146	9	True				
ANR	1998215	Statement	","	3352:51:111578:111578	1998146	10	True				
ANR	1998216	Statement	param	3352:53:111580:111584	1998146	11	True				
ANR	1998217	Statement	)	3352:58:111585:111585	1998146	12	True				
ANR	1998218	CompoundStatement		14:60:347:347	1998146	13					
ANR	1998219	IfStatement	"if ( get_node ( params , param -> paramName ) != NULL )"		1998146	0					
ANR	1998220	Condition	"get_node ( params , param -> paramName ) != NULL"	3353:7:111596:111637	1998146	0	True				
ANR	1998221	EqualityExpression	"get_node ( params , param -> paramName ) != NULL"		1998146	0		!=			
ANR	1998222	CallExpression	"get_node ( params , param -> paramName )"		1998146	0					
ANR	1998223	Callee	get_node		1998146	0					
ANR	1998224	Identifier	get_node		1998146	0					
ANR	1998225	ArgumentList	params		1998146	1					
ANR	1998226	Argument	params		1998146	0					
ANR	1998227	Identifier	params		1998146	0					
ANR	1998228	Argument	param -> paramName		1998146	1					
ANR	1998229	PtrMemberAccess	param -> paramName		1998146	0					
ANR	1998230	Identifier	param		1998146	0					
ANR	1998231	Identifier	paramName		1998146	1					
ANR	1998232	Identifier	NULL		1998146	1					
ANR	1998233	CompoundStatement		15:51:400:400	1998146	1					
ANR	1998234	ExpressionStatement	use_names = 1	3354:4:111646:111659	1998146	0	True				
ANR	1998235	AssignmentExpression	use_names = 1		1998146	0		=			
ANR	1998236	Identifier	use_names		1998146	0					
ANR	1998237	PrimaryExpression	1		1998146	1					
ANR	1998238	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	3356:4:111670:111693	1998146	14	True				
ANR	1998239	CallExpression	ZEND_HASH_FOREACH_END ( )		1998146	0					
ANR	1998240	Callee	ZEND_HASH_FOREACH_END		1998146	0					
ANR	1998241	Identifier	ZEND_HASH_FOREACH_END		1998146	0					
ANR	1998242	ArgumentList			1998146	1					
ANR	1998243	IfStatement	if ( use_names )		1998146	15					
ANR	1998244	Condition	use_names	3357:6:111701:111709	1998146	0	True				
ANR	1998245	Identifier	use_names		1998146	0					
ANR	1998246	CompoundStatement		19:17:472:472	1998146	1					
ANR	1998247	ExpressionStatement	"tmp_parameters = safe_emalloc ( num_of_params , sizeof ( zval ) , 0 )"	3358:3:111717:111778	1998146	0	True				
ANR	1998248	AssignmentExpression	"tmp_parameters = safe_emalloc ( num_of_params , sizeof ( zval ) , 0 )"		1998146	0		=			
ANR	1998249	Identifier	tmp_parameters		1998146	0					
ANR	1998250	CallExpression	"safe_emalloc ( num_of_params , sizeof ( zval ) , 0 )"		1998146	1					
ANR	1998251	Callee	safe_emalloc		1998146	0					
ANR	1998252	Identifier	safe_emalloc		1998146	0					
ANR	1998253	ArgumentList	num_of_params		1998146	1					
ANR	1998254	Argument	num_of_params		1998146	0					
ANR	1998255	Identifier	num_of_params		1998146	0					
ANR	1998256	Argument	sizeof ( zval )		1998146	1					
ANR	1998257	SizeofExpression	sizeof ( zval )		1998146	0					
ANR	1998258	Sizeof	sizeof		1998146	0					
ANR	1998259	SizeofOperand	zval		1998146	1					
ANR	1998260	Argument	0		1998146	2					
ANR	1998261	PrimaryExpression	0		1998146	0					
ANR	1998262	Statement	ZEND_HASH_FOREACH_PTR	3359:3:111783:111803	1998146	1	True				
ANR	1998263	Statement	(	3359:24:111804:111804	1998146	2	True				
ANR	1998264	Statement	function	3359:25:111805:111812	1998146	3	True				
ANR	1998265	Statement	->	3359:33:111813:111814	1998146	4	True				
ANR	1998266	Statement	requestParameters	3359:35:111815:111831	1998146	5	True				
ANR	1998267	Statement	","	3359:52:111832:111832	1998146	6	True				
ANR	1998268	Statement	param	3359:54:111834:111838	1998146	7	True				
ANR	1998269	Statement	)	3359:59:111839:111839	1998146	8	True				
ANR	1998270	CompoundStatement		21:61:601:601	1998146	9					
ANR	1998271	ExpressionStatement	"val = get_node ( params , param -> paramName )"	3360:4:111847:111887	1998146	0	True				
ANR	1998272	AssignmentExpression	"val = get_node ( params , param -> paramName )"		1998146	0		=			
ANR	1998273	Identifier	val		1998146	0					
ANR	1998274	CallExpression	"get_node ( params , param -> paramName )"		1998146	1					
ANR	1998275	Callee	get_node		1998146	0					
ANR	1998276	Identifier	get_node		1998146	0					
ANR	1998277	ArgumentList	params		1998146	1					
ANR	1998278	Argument	params		1998146	0					
ANR	1998279	Identifier	params		1998146	0					
ANR	1998280	Argument	param -> paramName		1998146	1					
ANR	1998281	PtrMemberAccess	param -> paramName		1998146	0					
ANR	1998282	Identifier	param		1998146	0					
ANR	1998283	Identifier	paramName		1998146	1					
ANR	1998284	IfStatement	if ( ! val )		1998146	1					
ANR	1998285	Condition	! val	3361:8:111897:111900	1998146	0	True				
ANR	1998286	UnaryOperationExpression	! val		1998146	0					
ANR	1998287	UnaryOperator	!		1998146	0					
ANR	1998288	Identifier	val		1998146	1					
ANR	1998289	CompoundStatement		23:14:663:663	1998146	1					
ANR	1998290	ExpressionStatement	ZVAL_NULL ( & tmp_parameters [ cur_param ] )	3363:5:111951:111988	1998146	0	True				
ANR	1998291	CallExpression	ZVAL_NULL ( & tmp_parameters [ cur_param ] )		1998146	0					
ANR	1998292	Callee	ZVAL_NULL		1998146	0					
ANR	1998293	Identifier	ZVAL_NULL		1998146	0					
ANR	1998294	ArgumentList	& tmp_parameters [ cur_param ]		1998146	1					
ANR	1998295	Argument	& tmp_parameters [ cur_param ]		1998146	0					
ANR	1998296	UnaryOperationExpression	& tmp_parameters [ cur_param ]		1998146	0					
ANR	1998297	UnaryOperator	&		1998146	0					
ANR	1998298	ArrayIndexing	tmp_parameters [ cur_param ]		1998146	1					
ANR	1998299	Identifier	tmp_parameters		1998146	0					
ANR	1998300	Identifier	cur_param		1998146	1					
ANR	1998301	ElseStatement	else		1998146	0					
ANR	1998302	CompoundStatement		26:11:761:761	1998146	0					
ANR	1998303	ExpressionStatement	"master_to_zval ( & tmp_parameters [ cur_param ] , param -> encode , val )"	3365:5:112008:112070	1998146	0	True				
ANR	1998304	CallExpression	"master_to_zval ( & tmp_parameters [ cur_param ] , param -> encode , val )"		1998146	0					
ANR	1998305	Callee	master_to_zval		1998146	0					
ANR	1998306	Identifier	master_to_zval		1998146	0					
ANR	1998307	ArgumentList	& tmp_parameters [ cur_param ]		1998146	1					
ANR	1998308	Argument	& tmp_parameters [ cur_param ]		1998146	0					
ANR	1998309	UnaryOperationExpression	& tmp_parameters [ cur_param ]		1998146	0					
ANR	1998310	UnaryOperator	&		1998146	0					
ANR	1998311	ArrayIndexing	tmp_parameters [ cur_param ]		1998146	1					
ANR	1998312	Identifier	tmp_parameters		1998146	0					
ANR	1998313	Identifier	cur_param		1998146	1					
ANR	1998314	Argument	param -> encode		1998146	1					
ANR	1998315	PtrMemberAccess	param -> encode		1998146	0					
ANR	1998316	Identifier	param		1998146	0					
ANR	1998317	Identifier	encode		1998146	1					
ANR	1998318	Argument	val		1998146	2					
ANR	1998319	Identifier	val		1998146	0					
ANR	1998320	ExpressionStatement	cur_param ++	3367:4:112082:112093	1998146	2	True				
ANR	1998321	PostIncDecOperationExpression	cur_param ++		1998146	0					
ANR	1998322	Identifier	cur_param		1998146	0					
ANR	1998323	IncDec	++		1998146	1					
ANR	1998324	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	3368:5:112100:112123	1998146	10	True				
ANR	1998325	CallExpression	ZEND_HASH_FOREACH_END ( )		1998146	0					
ANR	1998326	Callee	ZEND_HASH_FOREACH_END		1998146	0					
ANR	1998327	Identifier	ZEND_HASH_FOREACH_END		1998146	0					
ANR	1998328	ArgumentList			1998146	1					
ANR	1998329	ExpressionStatement	* parameters = tmp_parameters	3369:3:112128:112156	1998146	11	True				
ANR	1998330	AssignmentExpression	* parameters = tmp_parameters		1998146	0		=			
ANR	1998331	UnaryOperationExpression	* parameters		1998146	0					
ANR	1998332	UnaryOperator	*		1998146	0					
ANR	1998333	Identifier	parameters		1998146	1					
ANR	1998334	Identifier	tmp_parameters		1998146	1					
ANR	1998335	ExpressionStatement	* num_params = num_of_params	3370:3:112161:112188	1998146	12	True				
ANR	1998336	AssignmentExpression	* num_params = num_of_params		1998146	0		=			
ANR	1998337	UnaryOperationExpression	* num_params		1998146	0					
ANR	1998338	UnaryOperator	*		1998146	0					
ANR	1998339	Identifier	num_params		1998146	1					
ANR	1998340	Identifier	num_of_params		1998146	1					
ANR	1998341	ReturnStatement	return ;	3371:3:112193:112199	1998146	13	True				
ANR	1998342	IfStatement	if ( params )		1998146	3					
ANR	1998343	Condition	params	3374:5:112213:112218	1998146	0	True				
ANR	1998344	Identifier	params		1998146	0					
ANR	1998345	CompoundStatement		37:2:985:1000	1998146	1					
ANR	1998346	IdentifierDeclStatement	xmlNodePtr trav ;	3375:2:112225:112240	1998146	0	True				
ANR	1998347	IdentifierDecl	trav		1998146	0					
ANR	1998348	IdentifierDeclType	xmlNodePtr		1998146	0					
ANR	1998349	Identifier	trav		1998146	1					
ANR	1998350	ExpressionStatement	num_of_params = 0	3377:2:112245:112262	1998146	1	True				
ANR	1998351	AssignmentExpression	num_of_params = 0		1998146	0		=			
ANR	1998352	Identifier	num_of_params		1998146	0					
ANR	1998353	PrimaryExpression	0		1998146	1					
ANR	1998354	ExpressionStatement	trav = params	3378:2:112266:112279	1998146	2	True				
ANR	1998355	AssignmentExpression	trav = params		1998146	0		=			
ANR	1998356	Identifier	trav		1998146	0					
ANR	1998357	Identifier	params		1998146	1					
ANR	1998358	WhileStatement	while ( trav != NULL )		1998146	3					
ANR	1998359	Condition	trav != NULL	3379:9:112290:112301	1998146	0	True				
ANR	1998360	EqualityExpression	trav != NULL		1998146	0		!=			
ANR	1998361	Identifier	trav		1998146	0					
ANR	1998362	Identifier	NULL		1998146	1					
ANR	1998363	CompoundStatement		41:23:1064:1064	1998146	1					
ANR	1998364	IfStatement	if ( trav -> type == XML_ELEMENT_NODE )		1998146	0					
ANR	1998365	Condition	trav -> type == XML_ELEMENT_NODE	3380:7:112313:112342	1998146	0	True				
ANR	1998366	EqualityExpression	trav -> type == XML_ELEMENT_NODE		1998146	0		==			
ANR	1998367	PtrMemberAccess	trav -> type		1998146	0					
ANR	1998368	Identifier	trav		1998146	0					
ANR	1998369	Identifier	type		1998146	1					
ANR	1998370	Identifier	XML_ELEMENT_NODE		1998146	1					
ANR	1998371	CompoundStatement		42:39:1105:1105	1998146	1					
ANR	1998372	ExpressionStatement	num_of_params ++	3381:4:112351:112366	1998146	0	True				
ANR	1998373	PostIncDecOperationExpression	num_of_params ++		1998146	0					
ANR	1998374	Identifier	num_of_params		1998146	0					
ANR	1998375	IncDec	++		1998146	1					
ANR	1998376	ExpressionStatement	trav = trav -> next	3383:3:112376:112393	1998146	1	True				
ANR	1998377	AssignmentExpression	trav = trav -> next		1998146	0		=			
ANR	1998378	Identifier	trav		1998146	0					
ANR	1998379	PtrMemberAccess	trav -> next		1998146	1					
ANR	1998380	Identifier	trav		1998146	0					
ANR	1998381	Identifier	next		1998146	1					
ANR	1998382	IfStatement	"if ( num_of_params == 1 && function && function -> binding && function -> binding -> bindingType == BINDING_SOAP && ( ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes ) -> style == SOAP_DOCUMENT && ( function -> requestParameters == NULL || zend_hash_num_elements ( function -> requestParameters ) == 0 ) && strcmp ( ( char * ) params -> name , function -> functionName ) == 0 )"		1998146	4					
ANR	1998383	Condition	"num_of_params == 1 && function && function -> binding && function -> binding -> bindingType == BINDING_SOAP && ( ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes ) -> style == SOAP_DOCUMENT && ( function -> requestParameters == NULL || zend_hash_num_elements ( function -> requestParameters ) == 0 ) && strcmp ( ( char * ) params -> name , function -> functionName ) == 0"	3386:6:112406:112795	1998146	0	True				
ANR	1998384	AndExpression	"num_of_params == 1 && function && function -> binding && function -> binding -> bindingType == BINDING_SOAP && ( ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes ) -> style == SOAP_DOCUMENT && ( function -> requestParameters == NULL || zend_hash_num_elements ( function -> requestParameters ) == 0 ) && strcmp ( ( char * ) params -> name , function -> functionName ) == 0"		1998146	0		&&			
ANR	1998385	EqualityExpression	num_of_params == 1		1998146	0		==			
ANR	1998386	Identifier	num_of_params		1998146	0					
ANR	1998387	PrimaryExpression	1		1998146	1					
ANR	1998388	AndExpression	"function && function -> binding && function -> binding -> bindingType == BINDING_SOAP && ( ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes ) -> style == SOAP_DOCUMENT && ( function -> requestParameters == NULL || zend_hash_num_elements ( function -> requestParameters ) == 0 ) && strcmp ( ( char * ) params -> name , function -> functionName ) == 0"		1998146	1		&&			
ANR	1998389	Identifier	function		1998146	0					
ANR	1998390	AndExpression	"function -> binding && function -> binding -> bindingType == BINDING_SOAP && ( ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes ) -> style == SOAP_DOCUMENT && ( function -> requestParameters == NULL || zend_hash_num_elements ( function -> requestParameters ) == 0 ) && strcmp ( ( char * ) params -> name , function -> functionName ) == 0"		1998146	1		&&			
ANR	1998391	PtrMemberAccess	function -> binding		1998146	0					
ANR	1998392	Identifier	function		1998146	0					
ANR	1998393	Identifier	binding		1998146	1					
ANR	1998394	AndExpression	"function -> binding -> bindingType == BINDING_SOAP && ( ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes ) -> style == SOAP_DOCUMENT && ( function -> requestParameters == NULL || zend_hash_num_elements ( function -> requestParameters ) == 0 ) && strcmp ( ( char * ) params -> name , function -> functionName ) == 0"		1998146	1		&&			
ANR	1998395	EqualityExpression	function -> binding -> bindingType == BINDING_SOAP		1998146	0		==			
ANR	1998396	PtrMemberAccess	function -> binding -> bindingType		1998146	0					
ANR	1998397	PtrMemberAccess	function -> binding		1998146	0					
ANR	1998398	Identifier	function		1998146	0					
ANR	1998399	Identifier	binding		1998146	1					
ANR	1998400	Identifier	bindingType		1998146	1					
ANR	1998401	Identifier	BINDING_SOAP		1998146	1					
ANR	1998402	AndExpression	"( ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes ) -> style == SOAP_DOCUMENT && ( function -> requestParameters == NULL || zend_hash_num_elements ( function -> requestParameters ) == 0 ) && strcmp ( ( char * ) params -> name , function -> functionName ) == 0"		1998146	1		&&			
ANR	1998403	EqualityExpression	( ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes ) -> style == SOAP_DOCUMENT		1998146	0		==			
ANR	1998404	PtrMemberAccess	( ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes ) -> style		1998146	0					
ANR	1998405	CastExpression	( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		1998146	0					
ANR	1998406	CastTarget	sdlSoapBindingFunctionPtr		1998146	0					
ANR	1998407	PtrMemberAccess	function -> bindingAttributes		1998146	1					
ANR	1998408	Identifier	function		1998146	0					
ANR	1998409	Identifier	bindingAttributes		1998146	1					
ANR	1998410	Identifier	style		1998146	1					
ANR	1998411	Identifier	SOAP_DOCUMENT		1998146	1					
ANR	1998412	AndExpression	"( function -> requestParameters == NULL || zend_hash_num_elements ( function -> requestParameters ) == 0 ) && strcmp ( ( char * ) params -> name , function -> functionName ) == 0"		1998146	1		&&			
ANR	1998413	OrExpression	function -> requestParameters == NULL || zend_hash_num_elements ( function -> requestParameters ) == 0		1998146	0		||			
ANR	1998414	EqualityExpression	function -> requestParameters == NULL		1998146	0		==			
ANR	1998415	PtrMemberAccess	function -> requestParameters		1998146	0					
ANR	1998416	Identifier	function		1998146	0					
ANR	1998417	Identifier	requestParameters		1998146	1					
ANR	1998418	Identifier	NULL		1998146	1					
ANR	1998419	EqualityExpression	zend_hash_num_elements ( function -> requestParameters ) == 0		1998146	1		==			
ANR	1998420	CallExpression	zend_hash_num_elements ( function -> requestParameters )		1998146	0					
ANR	1998421	Callee	zend_hash_num_elements		1998146	0					
ANR	1998422	Identifier	zend_hash_num_elements		1998146	0					
ANR	1998423	ArgumentList	function -> requestParameters		1998146	1					
ANR	1998424	Argument	function -> requestParameters		1998146	0					
ANR	1998425	PtrMemberAccess	function -> requestParameters		1998146	0					
ANR	1998426	Identifier	function		1998146	0					
ANR	1998427	Identifier	requestParameters		1998146	1					
ANR	1998428	PrimaryExpression	0		1998146	1					
ANR	1998429	EqualityExpression	"strcmp ( ( char * ) params -> name , function -> functionName ) == 0"		1998146	1		==			
ANR	1998430	CallExpression	"strcmp ( ( char * ) params -> name , function -> functionName )"		1998146	0					
ANR	1998431	Callee	strcmp		1998146	0					
ANR	1998432	Identifier	strcmp		1998146	0					
ANR	1998433	ArgumentList	( char * ) params -> name		1998146	1					
ANR	1998434	Argument	( char * ) params -> name		1998146	0					
ANR	1998435	CastExpression	( char * ) params -> name		1998146	0					
ANR	1998436	CastTarget	char *		1998146	0					
ANR	1998437	PtrMemberAccess	params -> name		1998146	1					
ANR	1998438	Identifier	params		1998146	0					
ANR	1998439	Identifier	name		1998146	1					
ANR	1998440	Argument	function -> functionName		1998146	1					
ANR	1998441	PtrMemberAccess	function -> functionName		1998146	0					
ANR	1998442	Identifier	function		1998146	0					
ANR	1998443	Identifier	functionName		1998146	1					
ANR	1998444	PrimaryExpression	0		1998146	1					
ANR	1998445	CompoundStatement		55:65:1558:1558	1998146	1					
ANR	1998446	ExpressionStatement	num_of_params = 0	3394:3:112803:112820	1998146	0	True				
ANR	1998447	AssignmentExpression	num_of_params = 0		1998146	0		=			
ANR	1998448	Identifier	num_of_params		1998146	0					
ANR	1998449	PrimaryExpression	0		1998146	1					
ANR	1998450	ElseStatement	else		1998146	0					
ANR	1998451	IfStatement	if ( num_of_params > 0 )		1998146	0					
ANR	1998452	Condition	num_of_params > 0	3395:13:112835:112851	1998146	0	True				
ANR	1998453	RelationalExpression	num_of_params > 0		1998146	0		>			
ANR	1998454	Identifier	num_of_params		1998146	0					
ANR	1998455	PrimaryExpression	0		1998146	1					
ANR	1998456	CompoundStatement		57:32:1614:1614	1998146	1					
ANR	1998457	ExpressionStatement	"tmp_parameters = safe_emalloc ( num_of_params , sizeof ( zval ) , 0 )"	3396:3:112859:112920	1998146	0	True				
ANR	1998458	AssignmentExpression	"tmp_parameters = safe_emalloc ( num_of_params , sizeof ( zval ) , 0 )"		1998146	0		=			
ANR	1998459	Identifier	tmp_parameters		1998146	0					
ANR	1998460	CallExpression	"safe_emalloc ( num_of_params , sizeof ( zval ) , 0 )"		1998146	1					
ANR	1998461	Callee	safe_emalloc		1998146	0					
ANR	1998462	Identifier	safe_emalloc		1998146	0					
ANR	1998463	ArgumentList	num_of_params		1998146	1					
ANR	1998464	Argument	num_of_params		1998146	0					
ANR	1998465	Identifier	num_of_params		1998146	0					
ANR	1998466	Argument	sizeof ( zval )		1998146	1					
ANR	1998467	SizeofExpression	sizeof ( zval )		1998146	0					
ANR	1998468	Sizeof	sizeof		1998146	0					
ANR	1998469	SizeofOperand	zval		1998146	1					
ANR	1998470	Argument	0		1998146	2					
ANR	1998471	PrimaryExpression	0		1998146	0					
ANR	1998472	ExpressionStatement	trav = params	3398:3:112926:112939	1998146	1	True				
ANR	1998473	AssignmentExpression	trav = params		1998146	0		=			
ANR	1998474	Identifier	trav		1998146	0					
ANR	1998475	Identifier	params		1998146	1					
ANR	1998476	WhileStatement	while ( trav != 0 && cur_param < num_of_params )		1998146	2					
ANR	1998477	Condition	trav != 0 && cur_param < num_of_params	3399:10:112951:112988	1998146	0	True				
ANR	1998478	AndExpression	trav != 0 && cur_param < num_of_params		1998146	0		&&			
ANR	1998479	EqualityExpression	trav != 0		1998146	0		!=			
ANR	1998480	Identifier	trav		1998146	0					
ANR	1998481	PrimaryExpression	0		1998146	1					
ANR	1998482	RelationalExpression	cur_param < num_of_params		1998146	1		<			
ANR	1998483	Identifier	cur_param		1998146	0					
ANR	1998484	Identifier	num_of_params		1998146	1					
ANR	1998485	CompoundStatement		61:50:1751:1751	1998146	1					
ANR	1998486	IfStatement	if ( trav -> type == XML_ELEMENT_NODE )		1998146	0					
ANR	1998487	Condition	trav -> type == XML_ELEMENT_NODE	3400:8:113001:113030	1998146	0	True				
ANR	1998488	EqualityExpression	trav -> type == XML_ELEMENT_NODE		1998146	0		==			
ANR	1998489	PtrMemberAccess	trav -> type		1998146	0					
ANR	1998490	Identifier	trav		1998146	0					
ANR	1998491	Identifier	type		1998146	1					
ANR	1998492	Identifier	XML_ELEMENT_NODE		1998146	1					
ANR	1998493	CompoundStatement		64:5:1820:1844	1998146	1					
ANR	1998494	IdentifierDeclStatement	encodePtr enc ;	3401:5:113040:113053	1998146	0	True				
ANR	1998495	IdentifierDecl	enc		1998146	0					
ANR	1998496	IdentifierDeclType	encodePtr		1998146	0					
ANR	1998497	Identifier	enc		1998146	1					
ANR	1998498	IdentifierDeclStatement	sdlParamPtr param = NULL ;	3402:5:113060:113084	1998146	1	True				
ANR	1998499	IdentifierDecl	param = NULL		1998146	0					
ANR	1998500	IdentifierDeclType	sdlParamPtr		1998146	0					
ANR	1998501	Identifier	param		1998146	1					
ANR	1998502	AssignmentExpression	param = NULL		1998146	2		=			
ANR	1998503	Identifier	NULL		1998146	0					
ANR	1998504	Identifier	NULL		1998146	1					
ANR	1998505	IfStatement	"if ( function != NULL && ( param = zend_hash_index_find_ptr ( function -> requestParameters , cur_param ) ) == NULL )"		1998146	2					
ANR	1998506	Condition	"function != NULL && ( param = zend_hash_index_find_ptr ( function -> requestParameters , cur_param ) ) == NULL"	3403:9:113095:113205	1998146	0	True				
ANR	1998507	AndExpression	"function != NULL && ( param = zend_hash_index_find_ptr ( function -> requestParameters , cur_param ) ) == NULL"		1998146	0		&&			
ANR	1998508	EqualityExpression	function != NULL		1998146	0		!=			
ANR	1998509	Identifier	function		1998146	0					
ANR	1998510	Identifier	NULL		1998146	1					
ANR	1998511	EqualityExpression	"( param = zend_hash_index_find_ptr ( function -> requestParameters , cur_param ) ) == NULL"		1998146	1		==			
ANR	1998512	AssignmentExpression	"param = zend_hash_index_find_ptr ( function -> requestParameters , cur_param )"		1998146	0		=			
ANR	1998513	Identifier	param		1998146	0					
ANR	1998514	CallExpression	"zend_hash_index_find_ptr ( function -> requestParameters , cur_param )"		1998146	1					
ANR	1998515	Callee	zend_hash_index_find_ptr		1998146	0					
ANR	1998516	Identifier	zend_hash_index_find_ptr		1998146	0					
ANR	1998517	ArgumentList	function -> requestParameters		1998146	1					
ANR	1998518	Argument	function -> requestParameters		1998146	0					
ANR	1998519	PtrMemberAccess	function -> requestParameters		1998146	0					
ANR	1998520	Identifier	function		1998146	0					
ANR	1998521	Identifier	requestParameters		1998146	1					
ANR	1998522	Argument	cur_param		1998146	1					
ANR	1998523	Identifier	cur_param		1998146	0					
ANR	1998524	Identifier	NULL		1998146	1					
ANR	1998525	CompoundStatement		66:93:1968:1968	1998146	1					
ANR	1998526	ExpressionStatement	"soap_server_fault ( ""Client"" , ""Error cannot find parameter"" , NULL , NULL , NULL )"	3405:11:113221:113297	1998146	0	True				
ANR	1998527	CallExpression	"soap_server_fault ( ""Client"" , ""Error cannot find parameter"" , NULL , NULL , NULL )"		1998146	0					
ANR	1998528	Callee	soap_server_fault		1998146	0					
ANR	1998529	Identifier	soap_server_fault		1998146	0					
ANR	1998530	ArgumentList	"""Client"""		1998146	1					
ANR	1998531	Argument	"""Client"""		1998146	0					
ANR	1998532	PrimaryExpression	"""Client"""		1998146	0					
ANR	1998533	Argument	"""Error cannot find parameter"""		1998146	1					
ANR	1998534	PrimaryExpression	"""Error cannot find parameter"""		1998146	0					
ANR	1998535	Argument	NULL		1998146	2					
ANR	1998536	Identifier	NULL		1998146	0					
ANR	1998537	Argument	NULL		1998146	3					
ANR	1998538	Identifier	NULL		1998146	0					
ANR	1998539	Argument	NULL		1998146	4					
ANR	1998540	Identifier	NULL		1998146	0					
ANR	1998541	IfStatement	if ( param == NULL )		1998146	3					
ANR	1998542	Condition	param == NULL	3407:9:113315:113327	1998146	0	True				
ANR	1998543	EqualityExpression	param == NULL		1998146	0		==			
ANR	1998544	Identifier	param		1998146	0					
ANR	1998545	Identifier	NULL		1998146	1					
ANR	1998546	CompoundStatement		69:24:2090:2090	1998146	1					
ANR	1998547	ExpressionStatement	enc = NULL	3408:6:113338:113348	1998146	0	True				
ANR	1998548	AssignmentExpression	enc = NULL		1998146	0		=			
ANR	1998549	Identifier	enc		1998146	0					
ANR	1998550	Identifier	NULL		1998146	1					
ANR	1998551	ElseStatement	else		1998146	0					
ANR	1998552	CompoundStatement		71:12:2122:2122	1998146	0					
ANR	1998553	ExpressionStatement	enc = param -> encode	3410:6:113370:113389	1998146	0	True				
ANR	1998554	AssignmentExpression	enc = param -> encode		1998146	0		=			
ANR	1998555	Identifier	enc		1998146	0					
ANR	1998556	PtrMemberAccess	param -> encode		1998146	1					
ANR	1998557	Identifier	param		1998146	0					
ANR	1998558	Identifier	encode		1998146	1					
ANR	1998559	ExpressionStatement	"master_to_zval ( & tmp_parameters [ cur_param ] , enc , trav )"	3412:5:113403:113456	1998146	4	True				
ANR	1998560	CallExpression	"master_to_zval ( & tmp_parameters [ cur_param ] , enc , trav )"		1998146	0					
ANR	1998561	Callee	master_to_zval		1998146	0					
ANR	1998562	Identifier	master_to_zval		1998146	0					
ANR	1998563	ArgumentList	& tmp_parameters [ cur_param ]		1998146	1					
ANR	1998564	Argument	& tmp_parameters [ cur_param ]		1998146	0					
ANR	1998565	UnaryOperationExpression	& tmp_parameters [ cur_param ]		1998146	0					
ANR	1998566	UnaryOperator	&		1998146	0					
ANR	1998567	ArrayIndexing	tmp_parameters [ cur_param ]		1998146	1					
ANR	1998568	Identifier	tmp_parameters		1998146	0					
ANR	1998569	Identifier	cur_param		1998146	1					
ANR	1998570	Argument	enc		1998146	1					
ANR	1998571	Identifier	enc		1998146	0					
ANR	1998572	Argument	trav		1998146	2					
ANR	1998573	Identifier	trav		1998146	0					
ANR	1998574	ExpressionStatement	cur_param ++	3413:5:113463:113474	1998146	5	True				
ANR	1998575	PostIncDecOperationExpression	cur_param ++		1998146	0					
ANR	1998576	Identifier	cur_param		1998146	0					
ANR	1998577	IncDec	++		1998146	1					
ANR	1998578	ExpressionStatement	trav = trav -> next	3415:4:113486:113503	1998146	1	True				
ANR	1998579	AssignmentExpression	trav = trav -> next		1998146	0		=			
ANR	1998580	Identifier	trav		1998146	0					
ANR	1998581	PtrMemberAccess	trav -> next		1998146	1					
ANR	1998582	Identifier	trav		1998146	0					
ANR	1998583	Identifier	next		1998146	1					
ANR	1998584	IfStatement	if ( num_of_params > cur_param )		1998146	4					
ANR	1998585	Condition	num_of_params > cur_param	3419:5:113522:113546	1998146	0	True				
ANR	1998586	RelationalExpression	num_of_params > cur_param		1998146	0		>			
ANR	1998587	Identifier	num_of_params		1998146	0					
ANR	1998588	Identifier	cur_param		1998146	1					
ANR	1998589	CompoundStatement		81:32:2309:2309	1998146	1					
ANR	1998590	ExpressionStatement	"soap_server_fault ( ""Client"" , ""Missing parameter"" , NULL , NULL , NULL )"	3420:2:113553:113618	1998146	0	True				
ANR	1998591	CallExpression	"soap_server_fault ( ""Client"" , ""Missing parameter"" , NULL , NULL , NULL )"		1998146	0					
ANR	1998592	Callee	soap_server_fault		1998146	0					
ANR	1998593	Identifier	soap_server_fault		1998146	0					
ANR	1998594	ArgumentList	"""Client"""		1998146	1					
ANR	1998595	Argument	"""Client"""		1998146	0					
ANR	1998596	PrimaryExpression	"""Client"""		1998146	0					
ANR	1998597	Argument	"""Missing parameter"""		1998146	1					
ANR	1998598	PrimaryExpression	"""Missing parameter"""		1998146	0					
ANR	1998599	Argument	NULL		1998146	2					
ANR	1998600	Identifier	NULL		1998146	0					
ANR	1998601	Argument	NULL		1998146	3					
ANR	1998602	Identifier	NULL		1998146	0					
ANR	1998603	Argument	NULL		1998146	4					
ANR	1998604	Identifier	NULL		1998146	0					
ANR	1998605	ExpressionStatement	( * parameters ) = tmp_parameters	3422:1:113624:113654	1998146	5	True				
ANR	1998606	AssignmentExpression	( * parameters ) = tmp_parameters		1998146	0		=			
ANR	1998607	UnaryOperationExpression	* parameters		1998146	0					
ANR	1998608	UnaryOperator	*		1998146	0					
ANR	1998609	Identifier	parameters		1998146	1					
ANR	1998610	Identifier	tmp_parameters		1998146	1					
ANR	1998611	ExpressionStatement	( * num_params ) = num_of_params	3423:1:113657:113686	1998146	6	True				
ANR	1998612	AssignmentExpression	( * num_params ) = num_of_params		1998146	0		=			
ANR	1998613	UnaryOperationExpression	* num_params		1998146	0					
ANR	1998614	UnaryOperator	*		1998146	0					
ANR	1998615	Identifier	num_params		1998146	1					
ANR	1998616	Identifier	num_of_params		1998146	1					
ANR	1998617	ReturnType	static void		1998146	1					
ANR	1998618	Identifier	deserialize_parameters		1998146	2					
ANR	1998619	ParameterList	"xmlNodePtr params , sdlFunctionPtr function , int * num_params , zval * * parameters"		1998146	3					
ANR	1998620	Parameter	xmlNodePtr params	3338:35:111159:111175	1998146	0	True				
ANR	1998621	ParameterType	xmlNodePtr		1998146	0					
ANR	1998622	Identifier	params		1998146	1					
ANR	1998623	Parameter	sdlFunctionPtr function	3338:54:111178:111200	1998146	1	True				
ANR	1998624	ParameterType	sdlFunctionPtr		1998146	0					
ANR	1998625	Identifier	function		1998146	1					
ANR	1998626	Parameter	int * num_params	3338:79:111203:111217	1998146	2	True				
ANR	1998627	ParameterType	int *		1998146	0					
ANR	1998628	Identifier	num_params		1998146	1					
ANR	1998629	Parameter	zval * * parameters	3338:96:111220:111236	1998146	3	True				
ANR	1998630	ParameterType	zval * *		1998146	0					
ANR	1998631	Identifier	parameters		1998146	1					
ANR	1998632	CFGEntryNode	ENTRY		1998146		True				
ANR	1998633	CFGExitNode	EXIT		1998146		True				
ANR	1998634	Symbol	XML_ELEMENT_NODE		1998146						
ANR	1998635	Symbol	trav -> next		1998146						
ANR	1998636	Symbol	get_node		1998146						
ANR	1998637	Symbol	trav		1998146						
ANR	1998638	Symbol	trav -> type		1998146						
ANR	1998639	Symbol	use_names		1998146						
ANR	1998640	Symbol	function -> requestParameters		1998146						
ANR	1998641	Symbol	* trav		1998146						
ANR	1998642	Symbol	num_params		1998146						
ANR	1998643	Symbol	BINDING_SOAP		1998146						
ANR	1998644	Symbol	params -> name		1998146						
ANR	1998645	Symbol	cur_param		1998146						
ANR	1998646	Symbol	param		1998146						
ANR	1998647	Symbol	function		1998146						
ANR	1998648	Symbol	enc		1998146						
ANR	1998649	Symbol	function -> binding		1998146						
ANR	1998650	Symbol	* num_params		1998146						
ANR	1998651	Symbol	* params		1998146						
ANR	1998652	Symbol	val		1998146						
ANR	1998653	Symbol	strcmp		1998146						
ANR	1998654	Symbol	* * function		1998146						
ANR	1998655	Symbol	( ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes ) -> style		1998146						
ANR	1998656	Symbol	function -> functionName		1998146						
ANR	1998657	Symbol	NULL		1998146						
ANR	1998658	Symbol	tmp_parameters		1998146						
ANR	1998659	Symbol	zend_hash_num_elements		1998146						
ANR	1998660	Symbol	* function		1998146						
ANR	1998661	Symbol	zend_hash_index_find_ptr		1998146						
ANR	1998662	Symbol	num_of_params		1998146						
ANR	1998663	Symbol	function -> binding -> bindingType		1998146						
ANR	1998664	Symbol	param -> paramName		1998146						
ANR	1998665	Symbol	params		1998146						
ANR	1998666	Symbol	* param		1998146						
ANR	1998667	Symbol	* function -> bindingAttributes		1998146						
ANR	1998668	Symbol	* parameters		1998146						
ANR	1998669	Symbol	SOAP_DOCUMENT		1998146						
ANR	1998670	Symbol	parameters		1998146						
ANR	1998671	Symbol	safe_emalloc		1998146						
ANR	1998672	Symbol	function -> bindingAttributes		1998146						
ANR	1998673	Symbol	* function -> binding		1998146						
ANR	1998674	Symbol	param -> encode		1998146						
ANR	1998675	Function	find_function	3426:0:113691:114507							
ANR	1998676	FunctionDef	"find_function (sdlPtr sdl , xmlNodePtr func , zval * function_name)"		1998675	0					
ANR	1998677	CompoundStatement		3427:0:113777:114507	1998675	0					
ANR	1998678	IdentifierDeclStatement	sdlFunctionPtr function ;	3428:1:113780:113803	1998675	0	True				
ANR	1998679	IdentifierDecl	function		1998675	0					
ANR	1998680	IdentifierDeclType	sdlFunctionPtr		1998675	0					
ANR	1998681	Identifier	function		1998675	1					
ANR	1998682	ExpressionStatement	"function = get_function ( sdl , ( char * ) func -> name )"	3430:1:113807:113854	1998675	1	True				
ANR	1998683	AssignmentExpression	"function = get_function ( sdl , ( char * ) func -> name )"		1998675	0		=			
ANR	1998684	Identifier	function		1998675	0					
ANR	1998685	CallExpression	"get_function ( sdl , ( char * ) func -> name )"		1998675	1					
ANR	1998686	Callee	get_function		1998675	0					
ANR	1998687	Identifier	get_function		1998675	0					
ANR	1998688	ArgumentList	sdl		1998675	1					
ANR	1998689	Argument	sdl		1998675	0					
ANR	1998690	Identifier	sdl		1998675	0					
ANR	1998691	Argument	( char * ) func -> name		1998675	1					
ANR	1998692	CastExpression	( char * ) func -> name		1998675	0					
ANR	1998693	CastTarget	char *		1998675	0					
ANR	1998694	PtrMemberAccess	func -> name		1998675	1					
ANR	1998695	Identifier	func		1998675	0					
ANR	1998696	Identifier	name		1998675	1					
ANR	1998697	IfStatement	if ( function && function -> binding && function -> binding -> bindingType == BINDING_SOAP )		1998675	2					
ANR	1998698	Condition	function && function -> binding && function -> binding -> bindingType == BINDING_SOAP	3431:5:113861:113939	1998675	0	True				
ANR	1998699	AndExpression	function && function -> binding && function -> binding -> bindingType == BINDING_SOAP		1998675	0		&&			
ANR	1998700	Identifier	function		1998675	0					
ANR	1998701	AndExpression	function -> binding && function -> binding -> bindingType == BINDING_SOAP		1998675	1		&&			
ANR	1998702	PtrMemberAccess	function -> binding		1998675	0					
ANR	1998703	Identifier	function		1998675	0					
ANR	1998704	Identifier	binding		1998675	1					
ANR	1998705	EqualityExpression	function -> binding -> bindingType == BINDING_SOAP		1998675	1		==			
ANR	1998706	PtrMemberAccess	function -> binding -> bindingType		1998675	0					
ANR	1998707	PtrMemberAccess	function -> binding		1998675	0					
ANR	1998708	Identifier	function		1998675	0					
ANR	1998709	Identifier	binding		1998675	1					
ANR	1998710	Identifier	bindingType		1998675	1					
ANR	1998711	Identifier	BINDING_SOAP		1998675	1					
ANR	1998712	CompoundStatement		6:2:168:254	1998675	1					
ANR	1998713	IdentifierDeclStatement	sdlSoapBindingFunctionPtr fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes ;	3432:2:113946:114032	1998675	0	True				
ANR	1998714	IdentifierDecl	fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		1998675	0					
ANR	1998715	IdentifierDeclType	sdlSoapBindingFunctionPtr		1998675	0					
ANR	1998716	Identifier	fnb		1998675	1					
ANR	1998717	AssignmentExpression	fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		1998675	2		=			
ANR	1998718	Identifier	fnb		1998675	0					
ANR	1998719	CastExpression	( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		1998675	1					
ANR	1998720	CastTarget	sdlSoapBindingFunctionPtr		1998675	0					
ANR	1998721	PtrMemberAccess	function -> bindingAttributes		1998675	1					
ANR	1998722	Identifier	function		1998675	0					
ANR	1998723	Identifier	bindingAttributes		1998675	1					
ANR	1998724	IfStatement	if ( fnb -> style == SOAP_DOCUMENT )		1998675	1					
ANR	1998725	Condition	fnb -> style == SOAP_DOCUMENT	3433:6:114040:114066	1998675	0	True				
ANR	1998726	EqualityExpression	fnb -> style == SOAP_DOCUMENT		1998675	0		==			
ANR	1998727	PtrMemberAccess	fnb -> style		1998675	0					
ANR	1998728	Identifier	fnb		1998675	0					
ANR	1998729	Identifier	style		1998675	1					
ANR	1998730	Identifier	SOAP_DOCUMENT		1998675	1					
ANR	1998731	CompoundStatement		7:35:291:291	1998675	1					
ANR	1998732	IfStatement	if ( func -> children != NULL || ( function -> requestParameters != NULL && zend_hash_num_elements ( function -> requestParameters ) > 0 ) )		1998675	0					
ANR	1998733	Condition	func -> children != NULL || ( function -> requestParameters != NULL && zend_hash_num_elements ( function -> requestParameters ) > 0 )	3434:7:114078:114214	1998675	0	True				
ANR	1998734	OrExpression	func -> children != NULL || ( function -> requestParameters != NULL && zend_hash_num_elements ( function -> requestParameters ) > 0 )		1998675	0		||			
ANR	1998735	EqualityExpression	func -> children != NULL		1998675	0		!=			
ANR	1998736	PtrMemberAccess	func -> children		1998675	0					
ANR	1998737	Identifier	func		1998675	0					
ANR	1998738	Identifier	children		1998675	1					
ANR	1998739	Identifier	NULL		1998675	1					
ANR	1998740	AndExpression	function -> requestParameters != NULL && zend_hash_num_elements ( function -> requestParameters ) > 0		1998675	1		&&			
ANR	1998741	EqualityExpression	function -> requestParameters != NULL		1998675	0		!=			
ANR	1998742	PtrMemberAccess	function -> requestParameters		1998675	0					
ANR	1998743	Identifier	function		1998675	0					
ANR	1998744	Identifier	requestParameters		1998675	1					
ANR	1998745	Identifier	NULL		1998675	1					
ANR	1998746	RelationalExpression	zend_hash_num_elements ( function -> requestParameters ) > 0		1998675	1		>			
ANR	1998747	CallExpression	zend_hash_num_elements ( function -> requestParameters )		1998675	0					
ANR	1998748	Callee	zend_hash_num_elements		1998675	0					
ANR	1998749	Identifier	zend_hash_num_elements		1998675	0					
ANR	1998750	ArgumentList	function -> requestParameters		1998675	1					
ANR	1998751	Argument	function -> requestParameters		1998675	0					
ANR	1998752	PtrMemberAccess	function -> requestParameters		1998675	0					
ANR	1998753	Identifier	function		1998675	0					
ANR	1998754	Identifier	requestParameters		1998675	1					
ANR	1998755	PrimaryExpression	0		1998675	1					
ANR	1998756	CompoundStatement		10:66:439:439	1998675	1					
ANR	1998757	ExpressionStatement	function = NULL	3437:4:114223:114238	1998675	0	True				
ANR	1998758	AssignmentExpression	function = NULL		1998675	0		=			
ANR	1998759	Identifier	function		1998675	0					
ANR	1998760	Identifier	NULL		1998675	1					
ANR	1998761	IfStatement	if ( sdl != NULL && function == NULL )		1998675	3					
ANR	1998762	Condition	sdl != NULL && function == NULL	3441:5:114257:114287	1998675	0	True				
ANR	1998763	AndExpression	sdl != NULL && function == NULL		1998675	0		&&			
ANR	1998764	EqualityExpression	sdl != NULL		1998675	0		!=			
ANR	1998765	Identifier	sdl		1998675	0					
ANR	1998766	Identifier	NULL		1998675	1					
ANR	1998767	EqualityExpression	function == NULL		1998675	1		==			
ANR	1998768	Identifier	function		1998675	0					
ANR	1998769	Identifier	NULL		1998675	1					
ANR	1998770	CompoundStatement		15:38:512:512	1998675	1					
ANR	1998771	ExpressionStatement	"function = get_doc_function ( sdl , func )"	3442:2:114294:114332	1998675	0	True				
ANR	1998772	AssignmentExpression	"function = get_doc_function ( sdl , func )"		1998675	0		=			
ANR	1998773	Identifier	function		1998675	0					
ANR	1998774	CallExpression	"get_doc_function ( sdl , func )"		1998675	1					
ANR	1998775	Callee	get_doc_function		1998675	0					
ANR	1998776	Identifier	get_doc_function		1998675	0					
ANR	1998777	ArgumentList	sdl		1998675	1					
ANR	1998778	Argument	sdl		1998675	0					
ANR	1998779	Identifier	sdl		1998675	0					
ANR	1998780	Argument	func		1998675	1					
ANR	1998781	Identifier	func		1998675	0					
ANR	1998782	IfStatement	if ( function != NULL )		1998675	4					
ANR	1998783	Condition	function != NULL	3445:5:114343:114358	1998675	0	True				
ANR	1998784	EqualityExpression	function != NULL		1998675	0		!=			
ANR	1998785	Identifier	function		1998675	0					
ANR	1998786	Identifier	NULL		1998675	1					
ANR	1998787	CompoundStatement		19:23:583:583	1998675	1					
ANR	1998788	ExpressionStatement	"ZVAL_STRING ( function_name , ( char * ) function -> functionName )"	3446:2:114365:114423	1998675	0	True				
ANR	1998789	CallExpression	"ZVAL_STRING ( function_name , ( char * ) function -> functionName )"		1998675	0					
ANR	1998790	Callee	ZVAL_STRING		1998675	0					
ANR	1998791	Identifier	ZVAL_STRING		1998675	0					
ANR	1998792	ArgumentList	function_name		1998675	1					
ANR	1998793	Argument	function_name		1998675	0					
ANR	1998794	Identifier	function_name		1998675	0					
ANR	1998795	Argument	( char * ) function -> functionName		1998675	1					
ANR	1998796	CastExpression	( char * ) function -> functionName		1998675	0					
ANR	1998797	CastTarget	char *		1998675	0					
ANR	1998798	PtrMemberAccess	function -> functionName		1998675	1					
ANR	1998799	Identifier	function		1998675	0					
ANR	1998800	Identifier	functionName		1998675	1					
ANR	1998801	ElseStatement	else		1998675	0					
ANR	1998802	CompoundStatement		21:8:655:655	1998675	0					
ANR	1998803	ExpressionStatement	"ZVAL_STRING ( function_name , ( char * ) func -> name )"	3448:2:114437:114483	1998675	0	True				
ANR	1998804	CallExpression	"ZVAL_STRING ( function_name , ( char * ) func -> name )"		1998675	0					
ANR	1998805	Callee	ZVAL_STRING		1998675	0					
ANR	1998806	Identifier	ZVAL_STRING		1998675	0					
ANR	1998807	ArgumentList	function_name		1998675	1					
ANR	1998808	Argument	function_name		1998675	0					
ANR	1998809	Identifier	function_name		1998675	0					
ANR	1998810	Argument	( char * ) func -> name		1998675	1					
ANR	1998811	CastExpression	( char * ) func -> name		1998675	0					
ANR	1998812	CastTarget	char *		1998675	0					
ANR	1998813	PtrMemberAccess	func -> name		1998675	1					
ANR	1998814	Identifier	func		1998675	0					
ANR	1998815	Identifier	name		1998675	1					
ANR	1998816	ReturnStatement	return function ;	3451:1:114490:114505	1998675	5	True				
ANR	1998817	Identifier	function		1998675	0					
ANR	1998818	ReturnType	static sdlFunctionPtr		1998675	1					
ANR	1998819	Identifier	find_function		1998675	2					
ANR	1998820	ParameterList	"sdlPtr sdl , xmlNodePtr func , zval * function_name"		1998675	3					
ANR	1998821	Parameter	sdlPtr sdl	3426:36:113727:113736	1998675	0	True				
ANR	1998822	ParameterType	sdlPtr		1998675	0					
ANR	1998823	Identifier	sdl		1998675	1					
ANR	1998824	Parameter	xmlNodePtr func	3426:48:113739:113753	1998675	1	True				
ANR	1998825	ParameterType	xmlNodePtr		1998675	0					
ANR	1998826	Identifier	func		1998675	1					
ANR	1998827	Parameter	zval * function_name	3426:65:113756:113774	1998675	2	True				
ANR	1998828	ParameterType	zval *		1998675	0					
ANR	1998829	Identifier	function_name		1998675	1					
ANR	1998830	CFGEntryNode	ENTRY		1998675		True				
ANR	1998831	CFGExitNode	EXIT		1998675		True				
ANR	1998832	Symbol	* * function		1998675						
ANR	1998833	Symbol	get_doc_function		1998675						
ANR	1998834	Symbol	function -> functionName		1998675						
ANR	1998835	Symbol	NULL		1998675						
ANR	1998836	Symbol	* func		1998675						
ANR	1998837	Symbol	zend_hash_num_elements		1998675						
ANR	1998838	Symbol	* function		1998675						
ANR	1998839	Symbol	function -> binding -> bindingType		1998675						
ANR	1998840	Symbol	func -> name		1998675						
ANR	1998841	Symbol	function -> requestParameters		1998675						
ANR	1998842	Symbol	get_function		1998675						
ANR	1998843	Symbol	BINDING_SOAP		1998675						
ANR	1998844	Symbol	func		1998675						
ANR	1998845	Symbol	func -> children		1998675						
ANR	1998846	Symbol	SOAP_DOCUMENT		1998675						
ANR	1998847	Symbol	function_name		1998675						
ANR	1998848	Symbol	function		1998675						
ANR	1998849	Symbol	sdl		1998675						
ANR	1998850	Symbol	fnb		1998675						
ANR	1998851	Symbol	* fnb		1998675						
ANR	1998852	Symbol	function -> binding		1998675						
ANR	1998853	Symbol	* function -> binding		1998675						
ANR	1998854	Symbol	function -> bindingAttributes		1998675						
ANR	1998855	Symbol	fnb -> style		1998675						
ANR	1998856	Function	deserialize_function_call	3454:0:114510:123866							
ANR	1998857	FunctionDef	"deserialize_function_call (sdlPtr sdl , xmlDocPtr request , char * actor , zval * function_name , int * num_params , zval * * parameters , int * version , soapHeader * * headers)"		1998856	0					
ANR	1998858	CompoundStatement		3455:0:114695:123866	1998856	0					
ANR	1998859	IdentifierDeclStatement	char * envelope_ns = NULL ;	3456:1:114698:114722	1998856	0	True				
ANR	1998860	IdentifierDecl	* envelope_ns = NULL		1998856	0					
ANR	1998861	IdentifierDeclType	char *		1998856	0					
ANR	1998862	Identifier	envelope_ns		1998856	1					
ANR	1998863	AssignmentExpression	* envelope_ns = NULL		1998856	2		=			
ANR	1998864	Identifier	NULL		1998856	0					
ANR	1998865	Identifier	NULL		1998856	1					
ANR	1998866	IdentifierDeclStatement	"xmlNodePtr trav , env , head , body , func ;"	3457:1:114725:114759	1998856	1	True				
ANR	1998867	IdentifierDecl	trav		1998856	0					
ANR	1998868	IdentifierDeclType	xmlNodePtr		1998856	0					
ANR	1998869	Identifier	trav		1998856	1					
ANR	1998870	IdentifierDecl	env		1998856	1					
ANR	1998871	IdentifierDeclType	xmlNodePtr		1998856	0					
ANR	1998872	Identifier	env		1998856	1					
ANR	1998873	IdentifierDecl	head		1998856	2					
ANR	1998874	IdentifierDeclType	xmlNodePtr		1998856	0					
ANR	1998875	Identifier	head		1998856	1					
ANR	1998876	IdentifierDecl	body		1998856	3					
ANR	1998877	IdentifierDeclType	xmlNodePtr		1998856	0					
ANR	1998878	Identifier	body		1998856	1					
ANR	1998879	IdentifierDecl	func		1998856	4					
ANR	1998880	IdentifierDeclType	xmlNodePtr		1998856	0					
ANR	1998881	Identifier	func		1998856	1					
ANR	1998882	IdentifierDeclStatement	xmlAttrPtr attr ;	3458:1:114762:114777	1998856	2	True				
ANR	1998883	IdentifierDecl	attr		1998856	0					
ANR	1998884	IdentifierDeclType	xmlAttrPtr		1998856	0					
ANR	1998885	Identifier	attr		1998856	1					
ANR	1998886	IdentifierDeclStatement	sdlFunctionPtr function ;	3459:1:114780:114803	1998856	3	True				
ANR	1998887	IdentifierDecl	function		1998856	0					
ANR	1998888	IdentifierDeclType	sdlFunctionPtr		1998856	0					
ANR	1998889	Identifier	function		1998856	1					
ANR	1998890	ExpressionStatement	encode_reset_ns ( )	3461:1:114807:114824	1998856	4	True				
ANR	1998891	CallExpression	encode_reset_ns ( )		1998856	0					
ANR	1998892	Callee	encode_reset_ns		1998856	0					
ANR	1998893	Identifier	encode_reset_ns		1998856	0					
ANR	1998894	ArgumentList			1998856	1					
ANR	1998895	ExpressionStatement	env = NULL	3464:1:114858:114868	1998856	5	True				
ANR	1998896	AssignmentExpression	env = NULL		1998856	0		=			
ANR	1998897	Identifier	env		1998856	0					
ANR	1998898	Identifier	NULL		1998856	1					
ANR	1998899	ExpressionStatement	trav = request -> children	3465:1:114871:114895	1998856	6	True				
ANR	1998900	AssignmentExpression	trav = request -> children		1998856	0		=			
ANR	1998901	Identifier	trav		1998856	0					
ANR	1998902	PtrMemberAccess	request -> children		1998856	1					
ANR	1998903	Identifier	request		1998856	0					
ANR	1998904	Identifier	children		1998856	1					
ANR	1998905	WhileStatement	while ( trav != NULL )		1998856	7					
ANR	1998906	Condition	trav != NULL	3466:8:114905:114916	1998856	0	True				
ANR	1998907	EqualityExpression	trav != NULL		1998856	0		!=			
ANR	1998908	Identifier	trav		1998856	0					
ANR	1998909	Identifier	NULL		1998856	1					
ANR	1998910	CompoundStatement		12:22:223:223	1998856	1					
ANR	1998911	IfStatement	if ( trav -> type == XML_ELEMENT_NODE )		1998856	0					
ANR	1998912	Condition	trav -> type == XML_ELEMENT_NODE	3467:6:114927:114956	1998856	0	True				
ANR	1998913	EqualityExpression	trav -> type == XML_ELEMENT_NODE		1998856	0		==			
ANR	1998914	PtrMemberAccess	trav -> type		1998856	0					
ANR	1998915	Identifier	trav		1998856	0					
ANR	1998916	Identifier	type		1998856	1					
ANR	1998917	Identifier	XML_ELEMENT_NODE		1998856	1					
ANR	1998918	CompoundStatement		13:38:263:263	1998856	1					
ANR	1998919	IfStatement	"if ( env == NULL && node_is_equal_ex ( trav , ""Envelope"" , SOAP_1_1_ENV_NAMESPACE ) )"		1998856	0					
ANR	1998920	Condition	"env == NULL && node_is_equal_ex ( trav , ""Envelope"" , SOAP_1_1_ENV_NAMESPACE )"	3468:7:114968:115038	1998856	0	True				
ANR	1998921	AndExpression	"env == NULL && node_is_equal_ex ( trav , ""Envelope"" , SOAP_1_1_ENV_NAMESPACE )"		1998856	0		&&			
ANR	1998922	EqualityExpression	env == NULL		1998856	0		==			
ANR	1998923	Identifier	env		1998856	0					
ANR	1998924	Identifier	NULL		1998856	1					
ANR	1998925	CallExpression	"node_is_equal_ex ( trav , ""Envelope"" , SOAP_1_1_ENV_NAMESPACE )"		1998856	1					
ANR	1998926	Callee	node_is_equal_ex		1998856	0					
ANR	1998927	Identifier	node_is_equal_ex		1998856	0					
ANR	1998928	ArgumentList	trav		1998856	1					
ANR	1998929	Argument	trav		1998856	0					
ANR	1998930	Identifier	trav		1998856	0					
ANR	1998931	Argument	"""Envelope"""		1998856	1					
ANR	1998932	PrimaryExpression	"""Envelope"""		1998856	0					
ANR	1998933	Argument	SOAP_1_1_ENV_NAMESPACE		1998856	2					
ANR	1998934	Identifier	SOAP_1_1_ENV_NAMESPACE		1998856	0					
ANR	1998935	CompoundStatement		14:80:345:345	1998856	1					
ANR	1998936	ExpressionStatement	env = trav	3469:4:115047:115057	1998856	0	True				
ANR	1998937	AssignmentExpression	env = trav		1998856	0		=			
ANR	1998938	Identifier	env		1998856	0					
ANR	1998939	Identifier	trav		1998856	1					
ANR	1998940	ExpressionStatement	* version = SOAP_1_1	3470:4:115063:115082	1998856	1	True				
ANR	1998941	AssignmentExpression	* version = SOAP_1_1		1998856	0		=			
ANR	1998942	UnaryOperationExpression	* version		1998856	0					
ANR	1998943	UnaryOperator	*		1998856	0					
ANR	1998944	Identifier	version		1998856	1					
ANR	1998945	Identifier	SOAP_1_1		1998856	1					
ANR	1998946	ExpressionStatement	envelope_ns = SOAP_1_1_ENV_NAMESPACE	3471:4:115088:115124	1998856	2	True				
ANR	1998947	AssignmentExpression	envelope_ns = SOAP_1_1_ENV_NAMESPACE		1998856	0		=			
ANR	1998948	Identifier	envelope_ns		1998856	0					
ANR	1998949	Identifier	SOAP_1_1_ENV_NAMESPACE		1998856	1					
ANR	1998950	ExpressionStatement	SOAP_GLOBAL ( soap_version ) = SOAP_1_1	3472:4:115130:115166	1998856	3	True				
ANR	1998951	AssignmentExpression	SOAP_GLOBAL ( soap_version ) = SOAP_1_1		1998856	0		=			
ANR	1998952	CallExpression	SOAP_GLOBAL ( soap_version )		1998856	0					
ANR	1998953	Callee	SOAP_GLOBAL		1998856	0					
ANR	1998954	Identifier	SOAP_GLOBAL		1998856	0					
ANR	1998955	ArgumentList	soap_version		1998856	1					
ANR	1998956	Argument	soap_version		1998856	0					
ANR	1998957	Identifier	soap_version		1998856	0					
ANR	1998958	Identifier	SOAP_1_1		1998856	1					
ANR	1998959	ElseStatement	else		1998856	0					
ANR	1998960	IfStatement	"if ( env == NULL && node_is_equal_ex ( trav , ""Envelope"" , SOAP_1_2_ENV_NAMESPACE ) )"		1998856	0					
ANR	1998961	Condition	"env == NULL && node_is_equal_ex ( trav , ""Envelope"" , SOAP_1_2_ENV_NAMESPACE )"	3473:14:115182:115252	1998856	0	True				
ANR	1998962	AndExpression	"env == NULL && node_is_equal_ex ( trav , ""Envelope"" , SOAP_1_2_ENV_NAMESPACE )"		1998856	0		&&			
ANR	1998963	EqualityExpression	env == NULL		1998856	0		==			
ANR	1998964	Identifier	env		1998856	0					
ANR	1998965	Identifier	NULL		1998856	1					
ANR	1998966	CallExpression	"node_is_equal_ex ( trav , ""Envelope"" , SOAP_1_2_ENV_NAMESPACE )"		1998856	1					
ANR	1998967	Callee	node_is_equal_ex		1998856	0					
ANR	1998968	Identifier	node_is_equal_ex		1998856	0					
ANR	1998969	ArgumentList	trav		1998856	1					
ANR	1998970	Argument	trav		1998856	0					
ANR	1998971	Identifier	trav		1998856	0					
ANR	1998972	Argument	"""Envelope"""		1998856	1					
ANR	1998973	PrimaryExpression	"""Envelope"""		1998856	0					
ANR	1998974	Argument	SOAP_1_2_ENV_NAMESPACE		1998856	2					
ANR	1998975	Identifier	SOAP_1_2_ENV_NAMESPACE		1998856	0					
ANR	1998976	CompoundStatement		19:87:559:559	1998856	1					
ANR	1998977	ExpressionStatement	env = trav	3474:4:115261:115271	1998856	0	True				
ANR	1998978	AssignmentExpression	env = trav		1998856	0		=			
ANR	1998979	Identifier	env		1998856	0					
ANR	1998980	Identifier	trav		1998856	1					
ANR	1998981	ExpressionStatement	* version = SOAP_1_2	3475:4:115277:115296	1998856	1	True				
ANR	1998982	AssignmentExpression	* version = SOAP_1_2		1998856	0		=			
ANR	1998983	UnaryOperationExpression	* version		1998856	0					
ANR	1998984	UnaryOperator	*		1998856	0					
ANR	1998985	Identifier	version		1998856	1					
ANR	1998986	Identifier	SOAP_1_2		1998856	1					
ANR	1998987	ExpressionStatement	envelope_ns = SOAP_1_2_ENV_NAMESPACE	3476:4:115302:115338	1998856	2	True				
ANR	1998988	AssignmentExpression	envelope_ns = SOAP_1_2_ENV_NAMESPACE		1998856	0		=			
ANR	1998989	Identifier	envelope_ns		1998856	0					
ANR	1998990	Identifier	SOAP_1_2_ENV_NAMESPACE		1998856	1					
ANR	1998991	ExpressionStatement	SOAP_GLOBAL ( soap_version ) = SOAP_1_2	3477:4:115344:115380	1998856	3	True				
ANR	1998992	AssignmentExpression	SOAP_GLOBAL ( soap_version ) = SOAP_1_2		1998856	0		=			
ANR	1998993	CallExpression	SOAP_GLOBAL ( soap_version )		1998856	0					
ANR	1998994	Callee	SOAP_GLOBAL		1998856	0					
ANR	1998995	Identifier	SOAP_GLOBAL		1998856	0					
ANR	1998996	ArgumentList	soap_version		1998856	1					
ANR	1998997	Argument	soap_version		1998856	0					
ANR	1998998	Identifier	soap_version		1998856	0					
ANR	1998999	Identifier	SOAP_1_2		1998856	1					
ANR	1999000	ElseStatement	else		1998856	0					
ANR	1999001	CompoundStatement		24:10:696:696	1998856	0					
ANR	1999002	ExpressionStatement	"soap_server_fault ( ""VersionMismatch"" , ""Wrong Version"" , NULL , NULL , NULL )"	3479:4:115398:115469	1998856	0	True				
ANR	1999003	CallExpression	"soap_server_fault ( ""VersionMismatch"" , ""Wrong Version"" , NULL , NULL , NULL )"		1998856	0					
ANR	1999004	Callee	soap_server_fault		1998856	0					
ANR	1999005	Identifier	soap_server_fault		1998856	0					
ANR	1999006	ArgumentList	"""VersionMismatch"""		1998856	1					
ANR	1999007	Argument	"""VersionMismatch"""		1998856	0					
ANR	1999008	PrimaryExpression	"""VersionMismatch"""		1998856	0					
ANR	1999009	Argument	"""Wrong Version"""		1998856	1					
ANR	1999010	PrimaryExpression	"""Wrong Version"""		1998856	0					
ANR	1999011	Argument	NULL		1998856	2					
ANR	1999012	Identifier	NULL		1998856	0					
ANR	1999013	Argument	NULL		1998856	3					
ANR	1999014	Identifier	NULL		1998856	0					
ANR	1999015	Argument	NULL		1998856	4					
ANR	1999016	Identifier	NULL		1998856	0					
ANR	1999017	ExpressionStatement	trav = trav -> next	3482:2:115482:115499	1998856	1	True				
ANR	1999018	AssignmentExpression	trav = trav -> next		1998856	0		=			
ANR	1999019	Identifier	trav		1998856	0					
ANR	1999020	PtrMemberAccess	trav -> next		1998856	1					
ANR	1999021	Identifier	trav		1998856	0					
ANR	1999022	Identifier	next		1998856	1					
ANR	1999023	IfStatement	if ( env == NULL )		1998856	8					
ANR	1999024	Condition	env == NULL	3484:5:115509:115519	1998856	0	True				
ANR	1999025	EqualityExpression	env == NULL		1998856	0		==			
ANR	1999026	Identifier	env		1998856	0					
ANR	1999027	Identifier	NULL		1998856	1					
ANR	1999028	CompoundStatement		30:18:826:826	1998856	1					
ANR	1999029	ExpressionStatement	"soap_server_fault ( ""Client"" , ""looks like we got XML without \\""Envelope\\"" element"" , NULL , NULL , NULL )"	3485:2:115526:115625	1998856	0	True				
ANR	1999030	CallExpression	"soap_server_fault ( ""Client"" , ""looks like we got XML without \\""Envelope\\"" element"" , NULL , NULL , NULL )"		1998856	0					
ANR	1999031	Callee	soap_server_fault		1998856	0					
ANR	1999032	Identifier	soap_server_fault		1998856	0					
ANR	1999033	ArgumentList	"""Client"""		1998856	1					
ANR	1999034	Argument	"""Client"""		1998856	0					
ANR	1999035	PrimaryExpression	"""Client"""		1998856	0					
ANR	1999036	Argument	"""looks like we got XML without \\""Envelope\\"" element"""		1998856	1					
ANR	1999037	PrimaryExpression	"""looks like we got XML without \\""Envelope\\"" element"""		1998856	0					
ANR	1999038	Argument	NULL		1998856	2					
ANR	1999039	Identifier	NULL		1998856	0					
ANR	1999040	Argument	NULL		1998856	3					
ANR	1999041	Identifier	NULL		1998856	0					
ANR	1999042	Argument	NULL		1998856	4					
ANR	1999043	Identifier	NULL		1998856	0					
ANR	1999044	ExpressionStatement	attr = env -> properties	3488:1:115632:115654	1998856	9	True				
ANR	1999045	AssignmentExpression	attr = env -> properties		1998856	0		=			
ANR	1999046	Identifier	attr		1998856	0					
ANR	1999047	PtrMemberAccess	env -> properties		1998856	1					
ANR	1999048	Identifier	env		1998856	0					
ANR	1999049	Identifier	properties		1998856	1					
ANR	1999050	WhileStatement	while ( attr != NULL )		1998856	10					
ANR	1999051	Condition	attr != NULL	3489:8:115664:115675	1998856	0	True				
ANR	1999052	EqualityExpression	attr != NULL		1998856	0		!=			
ANR	1999053	Identifier	attr		1998856	0					
ANR	1999054	Identifier	NULL		1998856	1					
ANR	1999055	CompoundStatement		35:22:982:982	1998856	1					
ANR	1999056	IfStatement	if ( attr -> ns == NULL )		1998856	0					
ANR	1999057	Condition	attr -> ns == NULL	3490:6:115686:115701	1998856	0	True				
ANR	1999058	EqualityExpression	attr -> ns == NULL		1998856	0		==			
ANR	1999059	PtrMemberAccess	attr -> ns		1998856	0					
ANR	1999060	Identifier	attr		1998856	0					
ANR	1999061	Identifier	ns		1998856	1					
ANR	1999062	Identifier	NULL		1998856	1					
ANR	1999063	CompoundStatement		36:24:1008:1008	1998856	1					
ANR	1999064	ExpressionStatement	"soap_server_fault ( ""Client"" , ""A SOAP Envelope element cannot have non Namespace qualified attributes"" , NULL , NULL , NULL )"	3491:3:115709:115828	1998856	0	True				
ANR	1999065	CallExpression	"soap_server_fault ( ""Client"" , ""A SOAP Envelope element cannot have non Namespace qualified attributes"" , NULL , NULL , NULL )"		1998856	0					
ANR	1999066	Callee	soap_server_fault		1998856	0					
ANR	1999067	Identifier	soap_server_fault		1998856	0					
ANR	1999068	ArgumentList	"""Client"""		1998856	1					
ANR	1999069	Argument	"""Client"""		1998856	0					
ANR	1999070	PrimaryExpression	"""Client"""		1998856	0					
ANR	1999071	Argument	"""A SOAP Envelope element cannot have non Namespace qualified attributes"""		1998856	1					
ANR	1999072	PrimaryExpression	"""A SOAP Envelope element cannot have non Namespace qualified attributes"""		1998856	0					
ANR	1999073	Argument	NULL		1998856	2					
ANR	1999074	Identifier	NULL		1998856	0					
ANR	1999075	Argument	NULL		1998856	3					
ANR	1999076	Identifier	NULL		1998856	0					
ANR	1999077	Argument	NULL		1998856	4					
ANR	1999078	Identifier	NULL		1998856	0					
ANR	1999079	ElseStatement	else		1998856	0					
ANR	1999080	IfStatement	"if ( attr_is_equal_ex ( attr , ""encodingStyle"" , SOAP_1_2_ENV_NAMESPACE ) )"		1998856	0					
ANR	1999081	Condition	"attr_is_equal_ex ( attr , ""encodingStyle"" , SOAP_1_2_ENV_NAMESPACE )"	3492:13:115843:115903	1998856	0	True				
ANR	1999082	CallExpression	"attr_is_equal_ex ( attr , ""encodingStyle"" , SOAP_1_2_ENV_NAMESPACE )"		1998856	0					
ANR	1999083	Callee	attr_is_equal_ex		1998856	0					
ANR	1999084	Identifier	attr_is_equal_ex		1998856	0					
ANR	1999085	ArgumentList	attr		1998856	1					
ANR	1999086	Argument	attr		1998856	0					
ANR	1999087	Identifier	attr		1998856	0					
ANR	1999088	Argument	"""encodingStyle"""		1998856	1					
ANR	1999089	PrimaryExpression	"""encodingStyle"""		1998856	0					
ANR	1999090	Argument	SOAP_1_2_ENV_NAMESPACE		1998856	2					
ANR	1999091	Identifier	SOAP_1_2_ENV_NAMESPACE		1998856	0					
ANR	1999092	CompoundStatement		38:76:1210:1210	1998856	1					
ANR	1999093	IfStatement	if ( * version == SOAP_1_2 )		1998856	0					
ANR	1999094	Condition	* version == SOAP_1_2	3493:7:115915:115934	1998856	0	True				
ANR	1999095	EqualityExpression	* version == SOAP_1_2		1998856	0		==			
ANR	1999096	UnaryOperationExpression	* version		1998856	0					
ANR	1999097	UnaryOperator	*		1998856	0					
ANR	1999098	Identifier	version		1998856	1					
ANR	1999099	Identifier	SOAP_1_2		1998856	1					
ANR	1999100	CompoundStatement		39:29:1241:1241	1998856	1					
ANR	1999101	ExpressionStatement	"soap_server_fault ( ""Client"" , ""encodingStyle cannot be specified on the Envelope"" , NULL , NULL , NULL )"	3494:4:115943:116041	1998856	0	True				
ANR	1999102	CallExpression	"soap_server_fault ( ""Client"" , ""encodingStyle cannot be specified on the Envelope"" , NULL , NULL , NULL )"		1998856	0					
ANR	1999103	Callee	soap_server_fault		1998856	0					
ANR	1999104	Identifier	soap_server_fault		1998856	0					
ANR	1999105	ArgumentList	"""Client"""		1998856	1					
ANR	1999106	Argument	"""Client"""		1998856	0					
ANR	1999107	PrimaryExpression	"""Client"""		1998856	0					
ANR	1999108	Argument	"""encodingStyle cannot be specified on the Envelope"""		1998856	1					
ANR	1999109	PrimaryExpression	"""encodingStyle cannot be specified on the Envelope"""		1998856	0					
ANR	1999110	Argument	NULL		1998856	2					
ANR	1999111	Identifier	NULL		1998856	0					
ANR	1999112	Argument	NULL		1998856	3					
ANR	1999113	Identifier	NULL		1998856	0					
ANR	1999114	Argument	NULL		1998856	4					
ANR	1999115	Identifier	NULL		1998856	0					
ANR	1999116	ElseStatement	else		1998856	0					
ANR	1999117	IfStatement	"if ( strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE ) != 0 )"		1998856	0					
ANR	1999118	Condition	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE ) != 0"	3495:14:116057:116122	1998856	0	True				
ANR	1999119	EqualityExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE ) != 0"		1998856	0		!=			
ANR	1999120	CallExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE )"		1998856	0					
ANR	1999121	Callee	strcmp		1998856	0					
ANR	1999122	Identifier	strcmp		1998856	0					
ANR	1999123	ArgumentList	( char * ) attr -> children -> content		1998856	1					
ANR	1999124	Argument	( char * ) attr -> children -> content		1998856	0					
ANR	1999125	CastExpression	( char * ) attr -> children -> content		1998856	0					
ANR	1999126	CastTarget	char *		1998856	0					
ANR	1999127	PtrMemberAccess	attr -> children -> content		1998856	1					
ANR	1999128	PtrMemberAccess	attr -> children		1998856	0					
ANR	1999129	Identifier	attr		1998856	0					
ANR	1999130	Identifier	children		1998856	1					
ANR	1999131	Identifier	content		1998856	1					
ANR	1999132	Argument	SOAP_1_1_ENC_NAMESPACE		1998856	1					
ANR	1999133	Identifier	SOAP_1_1_ENC_NAMESPACE		1998856	0					
ANR	1999134	PrimaryExpression	0		1998856	1					
ANR	1999135	CompoundStatement		41:82:1429:1429	1998856	1					
ANR	1999136	ExpressionStatement	"soap_server_fault ( ""Client"" , ""Unknown data encoding style"" , NULL , NULL , NULL )"	3496:4:116131:116207	1998856	0	True				
ANR	1999137	CallExpression	"soap_server_fault ( ""Client"" , ""Unknown data encoding style"" , NULL , NULL , NULL )"		1998856	0					
ANR	1999138	Callee	soap_server_fault		1998856	0					
ANR	1999139	Identifier	soap_server_fault		1998856	0					
ANR	1999140	ArgumentList	"""Client"""		1998856	1					
ANR	1999141	Argument	"""Client"""		1998856	0					
ANR	1999142	PrimaryExpression	"""Client"""		1998856	0					
ANR	1999143	Argument	"""Unknown data encoding style"""		1998856	1					
ANR	1999144	PrimaryExpression	"""Unknown data encoding style"""		1998856	0					
ANR	1999145	Argument	NULL		1998856	2					
ANR	1999146	Identifier	NULL		1998856	0					
ANR	1999147	Argument	NULL		1998856	3					
ANR	1999148	Identifier	NULL		1998856	0					
ANR	1999149	Argument	NULL		1998856	4					
ANR	1999150	Identifier	NULL		1998856	0					
ANR	1999151	ExpressionStatement	attr = attr -> next	3499:2:116220:116237	1998856	1	True				
ANR	1999152	AssignmentExpression	attr = attr -> next		1998856	0		=			
ANR	1999153	Identifier	attr		1998856	0					
ANR	1999154	PtrMemberAccess	attr -> next		1998856	1					
ANR	1999155	Identifier	attr		1998856	0					
ANR	1999156	Identifier	next		1998856	1					
ANR	1999157	ExpressionStatement	head = NULL	3503:1:116272:116283	1998856	11	True				
ANR	1999158	AssignmentExpression	head = NULL		1998856	0		=			
ANR	1999159	Identifier	head		1998856	0					
ANR	1999160	Identifier	NULL		1998856	1					
ANR	1999161	ExpressionStatement	trav = env -> children	3504:1:116286:116306	1998856	12	True				
ANR	1999162	AssignmentExpression	trav = env -> children		1998856	0		=			
ANR	1999163	Identifier	trav		1998856	0					
ANR	1999164	PtrMemberAccess	env -> children		1998856	1					
ANR	1999165	Identifier	env		1998856	0					
ANR	1999166	Identifier	children		1998856	1					
ANR	1999167	WhileStatement	while ( trav != NULL && trav -> type != XML_ELEMENT_NODE )		1998856	13					
ANR	1999168	Condition	trav != NULL && trav -> type != XML_ELEMENT_NODE	3505:8:116316:116361	1998856	0	True				
ANR	1999169	AndExpression	trav != NULL && trav -> type != XML_ELEMENT_NODE		1998856	0		&&			
ANR	1999170	EqualityExpression	trav != NULL		1998856	0		!=			
ANR	1999171	Identifier	trav		1998856	0					
ANR	1999172	Identifier	NULL		1998856	1					
ANR	1999173	EqualityExpression	trav -> type != XML_ELEMENT_NODE		1998856	1		!=			
ANR	1999174	PtrMemberAccess	trav -> type		1998856	0					
ANR	1999175	Identifier	trav		1998856	0					
ANR	1999176	Identifier	type		1998856	1					
ANR	1999177	Identifier	XML_ELEMENT_NODE		1998856	1					
ANR	1999178	CompoundStatement		51:56:1668:1668	1998856	1					
ANR	1999179	ExpressionStatement	trav = trav -> next	3506:2:116368:116385	1998856	0	True				
ANR	1999180	AssignmentExpression	trav = trav -> next		1998856	0		=			
ANR	1999181	Identifier	trav		1998856	0					
ANR	1999182	PtrMemberAccess	trav -> next		1998856	1					
ANR	1999183	Identifier	trav		1998856	0					
ANR	1999184	Identifier	next		1998856	1					
ANR	1999185	IfStatement	"if ( trav != NULL && node_is_equal_ex ( trav , ""Header"" , envelope_ns ) )"		1998856	14					
ANR	1999186	Condition	"trav != NULL && node_is_equal_ex ( trav , ""Header"" , envelope_ns )"	3508:5:116395:116453	1998856	0	True				
ANR	1999187	AndExpression	"trav != NULL && node_is_equal_ex ( trav , ""Header"" , envelope_ns )"		1998856	0		&&			
ANR	1999188	EqualityExpression	trav != NULL		1998856	0		!=			
ANR	1999189	Identifier	trav		1998856	0					
ANR	1999190	Identifier	NULL		1998856	1					
ANR	1999191	CallExpression	"node_is_equal_ex ( trav , ""Header"" , envelope_ns )"		1998856	1					
ANR	1999192	Callee	node_is_equal_ex		1998856	0					
ANR	1999193	Identifier	node_is_equal_ex		1998856	0					
ANR	1999194	ArgumentList	trav		1998856	1					
ANR	1999195	Argument	trav		1998856	0					
ANR	1999196	Identifier	trav		1998856	0					
ANR	1999197	Argument	"""Header"""		1998856	1					
ANR	1999198	PrimaryExpression	"""Header"""		1998856	0					
ANR	1999199	Argument	envelope_ns		1998856	2					
ANR	1999200	Identifier	envelope_ns		1998856	0					
ANR	1999201	CompoundStatement		54:66:1760:1760	1998856	1					
ANR	1999202	ExpressionStatement	head = trav	3509:2:116460:116471	1998856	0	True				
ANR	1999203	AssignmentExpression	head = trav		1998856	0		=			
ANR	1999204	Identifier	head		1998856	0					
ANR	1999205	Identifier	trav		1998856	1					
ANR	1999206	ExpressionStatement	trav = trav -> next	3510:2:116475:116492	1998856	1	True				
ANR	1999207	AssignmentExpression	trav = trav -> next		1998856	0		=			
ANR	1999208	Identifier	trav		1998856	0					
ANR	1999209	PtrMemberAccess	trav -> next		1998856	1					
ANR	1999210	Identifier	trav		1998856	0					
ANR	1999211	Identifier	next		1998856	1					
ANR	1999212	ExpressionStatement	body = NULL	3514:1:116525:116536	1998856	15	True				
ANR	1999213	AssignmentExpression	body = NULL		1998856	0		=			
ANR	1999214	Identifier	body		1998856	0					
ANR	1999215	Identifier	NULL		1998856	1					
ANR	1999216	WhileStatement	while ( trav != NULL && trav -> type != XML_ELEMENT_NODE )		1998856	16					
ANR	1999217	Condition	trav != NULL && trav -> type != XML_ELEMENT_NODE	3515:8:116546:116591	1998856	0	True				
ANR	1999218	AndExpression	trav != NULL && trav -> type != XML_ELEMENT_NODE		1998856	0		&&			
ANR	1999219	EqualityExpression	trav != NULL		1998856	0		!=			
ANR	1999220	Identifier	trav		1998856	0					
ANR	1999221	Identifier	NULL		1998856	1					
ANR	1999222	EqualityExpression	trav -> type != XML_ELEMENT_NODE		1998856	1		!=			
ANR	1999223	PtrMemberAccess	trav -> type		1998856	0					
ANR	1999224	Identifier	trav		1998856	0					
ANR	1999225	Identifier	type		1998856	1					
ANR	1999226	Identifier	XML_ELEMENT_NODE		1998856	1					
ANR	1999227	CompoundStatement		61:56:1898:1898	1998856	1					
ANR	1999228	ExpressionStatement	trav = trav -> next	3516:2:116598:116615	1998856	0	True				
ANR	1999229	AssignmentExpression	trav = trav -> next		1998856	0		=			
ANR	1999230	Identifier	trav		1998856	0					
ANR	1999231	PtrMemberAccess	trav -> next		1998856	1					
ANR	1999232	Identifier	trav		1998856	0					
ANR	1999233	Identifier	next		1998856	1					
ANR	1999234	IfStatement	"if ( trav != NULL && node_is_equal_ex ( trav , ""Body"" , envelope_ns ) )"		1998856	17					
ANR	1999235	Condition	"trav != NULL && node_is_equal_ex ( trav , ""Body"" , envelope_ns )"	3518:5:116625:116681	1998856	0	True				
ANR	1999236	AndExpression	"trav != NULL && node_is_equal_ex ( trav , ""Body"" , envelope_ns )"		1998856	0		&&			
ANR	1999237	EqualityExpression	trav != NULL		1998856	0		!=			
ANR	1999238	Identifier	trav		1998856	0					
ANR	1999239	Identifier	NULL		1998856	1					
ANR	1999240	CallExpression	"node_is_equal_ex ( trav , ""Body"" , envelope_ns )"		1998856	1					
ANR	1999241	Callee	node_is_equal_ex		1998856	0					
ANR	1999242	Identifier	node_is_equal_ex		1998856	0					
ANR	1999243	ArgumentList	trav		1998856	1					
ANR	1999244	Argument	trav		1998856	0					
ANR	1999245	Identifier	trav		1998856	0					
ANR	1999246	Argument	"""Body"""		1998856	1					
ANR	1999247	PrimaryExpression	"""Body"""		1998856	0					
ANR	1999248	Argument	envelope_ns		1998856	2					
ANR	1999249	Identifier	envelope_ns		1998856	0					
ANR	1999250	CompoundStatement		64:64:1988:1988	1998856	1					
ANR	1999251	ExpressionStatement	body = trav	3519:2:116688:116699	1998856	0	True				
ANR	1999252	AssignmentExpression	body = trav		1998856	0		=			
ANR	1999253	Identifier	body		1998856	0					
ANR	1999254	Identifier	trav		1998856	1					
ANR	1999255	ExpressionStatement	trav = trav -> next	3520:2:116703:116720	1998856	1	True				
ANR	1999256	AssignmentExpression	trav = trav -> next		1998856	0		=			
ANR	1999257	Identifier	trav		1998856	0					
ANR	1999258	PtrMemberAccess	trav -> next		1998856	1					
ANR	1999259	Identifier	trav		1998856	0					
ANR	1999260	Identifier	next		1998856	1					
ANR	1999261	WhileStatement	while ( trav != NULL && trav -> type != XML_ELEMENT_NODE )		1998856	18					
ANR	1999262	Condition	trav != NULL && trav -> type != XML_ELEMENT_NODE	3522:8:116733:116778	1998856	0	True				
ANR	1999263	AndExpression	trav != NULL && trav -> type != XML_ELEMENT_NODE		1998856	0		&&			
ANR	1999264	EqualityExpression	trav != NULL		1998856	0		!=			
ANR	1999265	Identifier	trav		1998856	0					
ANR	1999266	Identifier	NULL		1998856	1					
ANR	1999267	EqualityExpression	trav -> type != XML_ELEMENT_NODE		1998856	1		!=			
ANR	1999268	PtrMemberAccess	trav -> type		1998856	0					
ANR	1999269	Identifier	trav		1998856	0					
ANR	1999270	Identifier	type		1998856	1					
ANR	1999271	Identifier	XML_ELEMENT_NODE		1998856	1					
ANR	1999272	CompoundStatement		68:56:2085:2085	1998856	1					
ANR	1999273	ExpressionStatement	trav = trav -> next	3523:2:116785:116802	1998856	0	True				
ANR	1999274	AssignmentExpression	trav = trav -> next		1998856	0		=			
ANR	1999275	Identifier	trav		1998856	0					
ANR	1999276	PtrMemberAccess	trav -> next		1998856	1					
ANR	1999277	Identifier	trav		1998856	0					
ANR	1999278	Identifier	next		1998856	1					
ANR	1999279	IfStatement	if ( body == NULL )		1998856	19					
ANR	1999280	Condition	body == NULL	3525:5:116812:116823	1998856	0	True				
ANR	1999281	EqualityExpression	body == NULL		1998856	0		==			
ANR	1999282	Identifier	body		1998856	0					
ANR	1999283	Identifier	NULL		1998856	1					
ANR	1999284	CompoundStatement		71:19:2130:2130	1998856	1					
ANR	1999285	ExpressionStatement	"soap_server_fault ( ""Client"" , ""Body must be present in a SOAP envelope"" , NULL , NULL , NULL )"	3526:2:116830:116918	1998856	0	True				
ANR	1999286	CallExpression	"soap_server_fault ( ""Client"" , ""Body must be present in a SOAP envelope"" , NULL , NULL , NULL )"		1998856	0					
ANR	1999287	Callee	soap_server_fault		1998856	0					
ANR	1999288	Identifier	soap_server_fault		1998856	0					
ANR	1999289	ArgumentList	"""Client"""		1998856	1					
ANR	1999290	Argument	"""Client"""		1998856	0					
ANR	1999291	PrimaryExpression	"""Client"""		1998856	0					
ANR	1999292	Argument	"""Body must be present in a SOAP envelope"""		1998856	1					
ANR	1999293	PrimaryExpression	"""Body must be present in a SOAP envelope"""		1998856	0					
ANR	1999294	Argument	NULL		1998856	2					
ANR	1999295	Identifier	NULL		1998856	0					
ANR	1999296	Argument	NULL		1998856	3					
ANR	1999297	Identifier	NULL		1998856	0					
ANR	1999298	Argument	NULL		1998856	4					
ANR	1999299	Identifier	NULL		1998856	0					
ANR	1999300	ExpressionStatement	attr = body -> properties	3528:1:116924:116947	1998856	20	True				
ANR	1999301	AssignmentExpression	attr = body -> properties		1998856	0		=			
ANR	1999302	Identifier	attr		1998856	0					
ANR	1999303	PtrMemberAccess	body -> properties		1998856	1					
ANR	1999304	Identifier	body		1998856	0					
ANR	1999305	Identifier	properties		1998856	1					
ANR	1999306	WhileStatement	while ( attr != NULL )		1998856	21					
ANR	1999307	Condition	attr != NULL	3529:8:116957:116968	1998856	0	True				
ANR	1999308	EqualityExpression	attr != NULL		1998856	0		!=			
ANR	1999309	Identifier	attr		1998856	0					
ANR	1999310	Identifier	NULL		1998856	1					
ANR	1999311	CompoundStatement		75:22:2275:2275	1998856	1					
ANR	1999312	IfStatement	if ( attr -> ns == NULL )		1998856	0					
ANR	1999313	Condition	attr -> ns == NULL	3530:6:116979:116994	1998856	0	True				
ANR	1999314	EqualityExpression	attr -> ns == NULL		1998856	0		==			
ANR	1999315	PtrMemberAccess	attr -> ns		1998856	0					
ANR	1999316	Identifier	attr		1998856	0					
ANR	1999317	Identifier	ns		1998856	1					
ANR	1999318	Identifier	NULL		1998856	1					
ANR	1999319	CompoundStatement		76:24:2301:2301	1998856	1					
ANR	1999320	IfStatement	if ( * version == SOAP_1_2 )		1998856	0					
ANR	1999321	Condition	* version == SOAP_1_2	3531:7:117006:117025	1998856	0	True				
ANR	1999322	EqualityExpression	* version == SOAP_1_2		1998856	0		==			
ANR	1999323	UnaryOperationExpression	* version		1998856	0					
ANR	1999324	UnaryOperator	*		1998856	0					
ANR	1999325	Identifier	version		1998856	1					
ANR	1999326	Identifier	SOAP_1_2		1998856	1					
ANR	1999327	CompoundStatement		77:29:2332:2332	1998856	1					
ANR	1999328	ExpressionStatement	"soap_server_fault ( ""Client"" , ""A SOAP Body element cannot have non Namespace qualified attributes"" , NULL , NULL , NULL )"	3532:4:117034:117149	1998856	0	True				
ANR	1999329	CallExpression	"soap_server_fault ( ""Client"" , ""A SOAP Body element cannot have non Namespace qualified attributes"" , NULL , NULL , NULL )"		1998856	0					
ANR	1999330	Callee	soap_server_fault		1998856	0					
ANR	1999331	Identifier	soap_server_fault		1998856	0					
ANR	1999332	ArgumentList	"""Client"""		1998856	1					
ANR	1999333	Argument	"""Client"""		1998856	0					
ANR	1999334	PrimaryExpression	"""Client"""		1998856	0					
ANR	1999335	Argument	"""A SOAP Body element cannot have non Namespace qualified attributes"""		1998856	1					
ANR	1999336	PrimaryExpression	"""A SOAP Body element cannot have non Namespace qualified attributes"""		1998856	0					
ANR	1999337	Argument	NULL		1998856	2					
ANR	1999338	Identifier	NULL		1998856	0					
ANR	1999339	Argument	NULL		1998856	3					
ANR	1999340	Identifier	NULL		1998856	0					
ANR	1999341	Argument	NULL		1998856	4					
ANR	1999342	Identifier	NULL		1998856	0					
ANR	1999343	ElseStatement	else		1998856	0					
ANR	1999344	IfStatement	"if ( attr_is_equal_ex ( attr , ""encodingStyle"" , SOAP_1_2_ENV_NAMESPACE ) )"		1998856	0					
ANR	1999345	Condition	"attr_is_equal_ex ( attr , ""encodingStyle"" , SOAP_1_2_ENV_NAMESPACE )"	3534:13:117169:117229	1998856	0	True				
ANR	1999346	CallExpression	"attr_is_equal_ex ( attr , ""encodingStyle"" , SOAP_1_2_ENV_NAMESPACE )"		1998856	0					
ANR	1999347	Callee	attr_is_equal_ex		1998856	0					
ANR	1999348	Identifier	attr_is_equal_ex		1998856	0					
ANR	1999349	ArgumentList	attr		1998856	1					
ANR	1999350	Argument	attr		1998856	0					
ANR	1999351	Identifier	attr		1998856	0					
ANR	1999352	Argument	"""encodingStyle"""		1998856	1					
ANR	1999353	PrimaryExpression	"""encodingStyle"""		1998856	0					
ANR	1999354	Argument	SOAP_1_2_ENV_NAMESPACE		1998856	2					
ANR	1999355	Identifier	SOAP_1_2_ENV_NAMESPACE		1998856	0					
ANR	1999356	CompoundStatement		80:76:2536:2536	1998856	1					
ANR	1999357	IfStatement	if ( * version == SOAP_1_2 )		1998856	0					
ANR	1999358	Condition	* version == SOAP_1_2	3535:7:117241:117260	1998856	0	True				
ANR	1999359	EqualityExpression	* version == SOAP_1_2		1998856	0		==			
ANR	1999360	UnaryOperationExpression	* version		1998856	0					
ANR	1999361	UnaryOperator	*		1998856	0					
ANR	1999362	Identifier	version		1998856	1					
ANR	1999363	Identifier	SOAP_1_2		1998856	1					
ANR	1999364	CompoundStatement		81:29:2567:2567	1998856	1					
ANR	1999365	ExpressionStatement	"soap_server_fault ( ""Client"" , ""encodingStyle cannot be specified on the Body"" , NULL , NULL , NULL )"	3536:4:117269:117363	1998856	0	True				
ANR	1999366	CallExpression	"soap_server_fault ( ""Client"" , ""encodingStyle cannot be specified on the Body"" , NULL , NULL , NULL )"		1998856	0					
ANR	1999367	Callee	soap_server_fault		1998856	0					
ANR	1999368	Identifier	soap_server_fault		1998856	0					
ANR	1999369	ArgumentList	"""Client"""		1998856	1					
ANR	1999370	Argument	"""Client"""		1998856	0					
ANR	1999371	PrimaryExpression	"""Client"""		1998856	0					
ANR	1999372	Argument	"""encodingStyle cannot be specified on the Body"""		1998856	1					
ANR	1999373	PrimaryExpression	"""encodingStyle cannot be specified on the Body"""		1998856	0					
ANR	1999374	Argument	NULL		1998856	2					
ANR	1999375	Identifier	NULL		1998856	0					
ANR	1999376	Argument	NULL		1998856	3					
ANR	1999377	Identifier	NULL		1998856	0					
ANR	1999378	Argument	NULL		1998856	4					
ANR	1999379	Identifier	NULL		1998856	0					
ANR	1999380	ElseStatement	else		1998856	0					
ANR	1999381	IfStatement	"if ( strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE ) != 0 )"		1998856	0					
ANR	1999382	Condition	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE ) != 0"	3537:14:117379:117444	1998856	0	True				
ANR	1999383	EqualityExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE ) != 0"		1998856	0		!=			
ANR	1999384	CallExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE )"		1998856	0					
ANR	1999385	Callee	strcmp		1998856	0					
ANR	1999386	Identifier	strcmp		1998856	0					
ANR	1999387	ArgumentList	( char * ) attr -> children -> content		1998856	1					
ANR	1999388	Argument	( char * ) attr -> children -> content		1998856	0					
ANR	1999389	CastExpression	( char * ) attr -> children -> content		1998856	0					
ANR	1999390	CastTarget	char *		1998856	0					
ANR	1999391	PtrMemberAccess	attr -> children -> content		1998856	1					
ANR	1999392	PtrMemberAccess	attr -> children		1998856	0					
ANR	1999393	Identifier	attr		1998856	0					
ANR	1999394	Identifier	children		1998856	1					
ANR	1999395	Identifier	content		1998856	1					
ANR	1999396	Argument	SOAP_1_1_ENC_NAMESPACE		1998856	1					
ANR	1999397	Identifier	SOAP_1_1_ENC_NAMESPACE		1998856	0					
ANR	1999398	PrimaryExpression	0		1998856	1					
ANR	1999399	CompoundStatement		83:82:2751:2751	1998856	1					
ANR	1999400	ExpressionStatement	"soap_server_fault ( ""Client"" , ""Unknown data encoding style"" , NULL , NULL , NULL )"	3538:4:117453:117529	1998856	0	True				
ANR	1999401	CallExpression	"soap_server_fault ( ""Client"" , ""Unknown data encoding style"" , NULL , NULL , NULL )"		1998856	0					
ANR	1999402	Callee	soap_server_fault		1998856	0					
ANR	1999403	Identifier	soap_server_fault		1998856	0					
ANR	1999404	ArgumentList	"""Client"""		1998856	1					
ANR	1999405	Argument	"""Client"""		1998856	0					
ANR	1999406	PrimaryExpression	"""Client"""		1998856	0					
ANR	1999407	Argument	"""Unknown data encoding style"""		1998856	1					
ANR	1999408	PrimaryExpression	"""Unknown data encoding style"""		1998856	0					
ANR	1999409	Argument	NULL		1998856	2					
ANR	1999410	Identifier	NULL		1998856	0					
ANR	1999411	Argument	NULL		1998856	3					
ANR	1999412	Identifier	NULL		1998856	0					
ANR	1999413	Argument	NULL		1998856	4					
ANR	1999414	Identifier	NULL		1998856	0					
ANR	1999415	ExpressionStatement	attr = attr -> next	3541:2:117542:117559	1998856	1	True				
ANR	1999416	AssignmentExpression	attr = attr -> next		1998856	0		=			
ANR	1999417	Identifier	attr		1998856	0					
ANR	1999418	PtrMemberAccess	attr -> next		1998856	1					
ANR	1999419	Identifier	attr		1998856	0					
ANR	1999420	Identifier	next		1998856	1					
ANR	1999421	IfStatement	if ( trav != NULL && * version == SOAP_1_2 )		1998856	22					
ANR	1999422	Condition	trav != NULL && * version == SOAP_1_2	3544:5:117570:117605	1998856	0	True				
ANR	1999423	AndExpression	trav != NULL && * version == SOAP_1_2		1998856	0		&&			
ANR	1999424	EqualityExpression	trav != NULL		1998856	0		!=			
ANR	1999425	Identifier	trav		1998856	0					
ANR	1999426	Identifier	NULL		1998856	1					
ANR	1999427	EqualityExpression	* version == SOAP_1_2		1998856	1		==			
ANR	1999428	UnaryOperationExpression	* version		1998856	0					
ANR	1999429	UnaryOperator	*		1998856	0					
ANR	1999430	Identifier	version		1998856	1					
ANR	1999431	Identifier	SOAP_1_2		1998856	1					
ANR	1999432	CompoundStatement		90:43:2912:2912	1998856	1					
ANR	1999433	ExpressionStatement	"soap_server_fault ( ""Client"" , ""A SOAP 1.2 envelope can contain only Header and Body"" , NULL , NULL , NULL )"	3545:2:117612:117713	1998856	0	True				
ANR	1999434	CallExpression	"soap_server_fault ( ""Client"" , ""A SOAP 1.2 envelope can contain only Header and Body"" , NULL , NULL , NULL )"		1998856	0					
ANR	1999435	Callee	soap_server_fault		1998856	0					
ANR	1999436	Identifier	soap_server_fault		1998856	0					
ANR	1999437	ArgumentList	"""Client"""		1998856	1					
ANR	1999438	Argument	"""Client"""		1998856	0					
ANR	1999439	PrimaryExpression	"""Client"""		1998856	0					
ANR	1999440	Argument	"""A SOAP 1.2 envelope can contain only Header and Body"""		1998856	1					
ANR	1999441	PrimaryExpression	"""A SOAP 1.2 envelope can contain only Header and Body"""		1998856	0					
ANR	1999442	Argument	NULL		1998856	2					
ANR	1999443	Identifier	NULL		1998856	0					
ANR	1999444	Argument	NULL		1998856	3					
ANR	1999445	Identifier	NULL		1998856	0					
ANR	1999446	Argument	NULL		1998856	4					
ANR	1999447	Identifier	NULL		1998856	0					
ANR	1999448	ExpressionStatement	func = NULL	3548:1:117720:117731	1998856	23	True				
ANR	1999449	AssignmentExpression	func = NULL		1998856	0		=			
ANR	1999450	Identifier	func		1998856	0					
ANR	1999451	Identifier	NULL		1998856	1					
ANR	1999452	ExpressionStatement	trav = body -> children	3549:1:117734:117755	1998856	24	True				
ANR	1999453	AssignmentExpression	trav = body -> children		1998856	0		=			
ANR	1999454	Identifier	trav		1998856	0					
ANR	1999455	PtrMemberAccess	body -> children		1998856	1					
ANR	1999456	Identifier	body		1998856	0					
ANR	1999457	Identifier	children		1998856	1					
ANR	1999458	WhileStatement	while ( trav != NULL )		1998856	25					
ANR	1999459	Condition	trav != NULL	3550:8:117765:117776	1998856	0	True				
ANR	1999460	EqualityExpression	trav != NULL		1998856	0		!=			
ANR	1999461	Identifier	trav		1998856	0					
ANR	1999462	Identifier	NULL		1998856	1					
ANR	1999463	CompoundStatement		96:22:3083:3083	1998856	1					
ANR	1999464	IfStatement	if ( trav -> type == XML_ELEMENT_NODE )		1998856	0					
ANR	1999465	Condition	trav -> type == XML_ELEMENT_NODE	3551:6:117787:117816	1998856	0	True				
ANR	1999466	EqualityExpression	trav -> type == XML_ELEMENT_NODE		1998856	0		==			
ANR	1999467	PtrMemberAccess	trav -> type		1998856	0					
ANR	1999468	Identifier	trav		1998856	0					
ANR	1999469	Identifier	type		1998856	1					
ANR	1999470	Identifier	XML_ELEMENT_NODE		1998856	1					
ANR	1999471	CompoundStatement		97:38:3123:3123	1998856	1					
ANR	1999472	ExpressionStatement	func = trav	3557:3:117967:117978	1998856	0	True				
ANR	1999473	AssignmentExpression	func = trav		1998856	0		=			
ANR	1999474	Identifier	func		1998856	0					
ANR	1999475	Identifier	trav		1998856	1					
ANR	1999476	BreakStatement	break ;	3558:3:117983:117988	1998856	1	True				
ANR	1999477	ExpressionStatement	trav = trav -> next	3560:2:118037:118054	1998856	1	True				
ANR	1999478	AssignmentExpression	trav = trav -> next		1998856	0		=			
ANR	1999479	Identifier	trav		1998856	0					
ANR	1999480	PtrMemberAccess	trav -> next		1998856	1					
ANR	1999481	Identifier	trav		1998856	0					
ANR	1999482	Identifier	next		1998856	1					
ANR	1999483	IfStatement	if ( func == NULL )		1998856	26					
ANR	1999484	Condition	func == NULL	3562:5:118064:118075	1998856	0	True				
ANR	1999485	EqualityExpression	func == NULL		1998856	0		==			
ANR	1999486	Identifier	func		1998856	0					
ANR	1999487	Identifier	NULL		1998856	1					
ANR	1999488	CompoundStatement		108:19:3382:3382	1998856	1					
ANR	1999489	ExpressionStatement	"function = get_doc_function ( sdl , NULL )"	3563:2:118082:118120	1998856	0	True				
ANR	1999490	AssignmentExpression	"function = get_doc_function ( sdl , NULL )"		1998856	0		=			
ANR	1999491	Identifier	function		1998856	0					
ANR	1999492	CallExpression	"get_doc_function ( sdl , NULL )"		1998856	1					
ANR	1999493	Callee	get_doc_function		1998856	0					
ANR	1999494	Identifier	get_doc_function		1998856	0					
ANR	1999495	ArgumentList	sdl		1998856	1					
ANR	1999496	Argument	sdl		1998856	0					
ANR	1999497	Identifier	sdl		1998856	0					
ANR	1999498	Argument	NULL		1998856	1					
ANR	1999499	Identifier	NULL		1998856	0					
ANR	1999500	IfStatement	if ( function != NULL )		1998856	1					
ANR	1999501	Condition	function != NULL	3564:6:118128:118143	1998856	0	True				
ANR	1999502	EqualityExpression	function != NULL		1998856	0		!=			
ANR	1999503	Identifier	function		1998856	0					
ANR	1999504	Identifier	NULL		1998856	1					
ANR	1999505	CompoundStatement		110:24:3450:3450	1998856	1					
ANR	1999506	ExpressionStatement	"ZVAL_STRING ( function_name , ( char * ) function -> functionName )"	3565:3:118151:118209	1998856	0	True				
ANR	1999507	CallExpression	"ZVAL_STRING ( function_name , ( char * ) function -> functionName )"		1998856	0					
ANR	1999508	Callee	ZVAL_STRING		1998856	0					
ANR	1999509	Identifier	ZVAL_STRING		1998856	0					
ANR	1999510	ArgumentList	function_name		1998856	1					
ANR	1999511	Argument	function_name		1998856	0					
ANR	1999512	Identifier	function_name		1998856	0					
ANR	1999513	Argument	( char * ) function -> functionName		1998856	1					
ANR	1999514	CastExpression	( char * ) function -> functionName		1998856	0					
ANR	1999515	CastTarget	char *		1998856	0					
ANR	1999516	PtrMemberAccess	function -> functionName		1998856	1					
ANR	1999517	Identifier	function		1998856	0					
ANR	1999518	Identifier	functionName		1998856	1					
ANR	1999519	ElseStatement	else		1998856	0					
ANR	1999520	CompoundStatement		112:9:3524:3524	1998856	0					
ANR	1999521	ExpressionStatement	"soap_server_fault ( ""Client"" , ""looks like we got \\""Body\\"" without function call"" , NULL , NULL , NULL )"	3567:3:118225:118322	1998856	0	True				
ANR	1999522	CallExpression	"soap_server_fault ( ""Client"" , ""looks like we got \\""Body\\"" without function call"" , NULL , NULL , NULL )"		1998856	0					
ANR	1999523	Callee	soap_server_fault		1998856	0					
ANR	1999524	Identifier	soap_server_fault		1998856	0					
ANR	1999525	ArgumentList	"""Client"""		1998856	1					
ANR	1999526	Argument	"""Client"""		1998856	0					
ANR	1999527	PrimaryExpression	"""Client"""		1998856	0					
ANR	1999528	Argument	"""looks like we got \\""Body\\"" without function call"""		1998856	1					
ANR	1999529	PrimaryExpression	"""looks like we got \\""Body\\"" without function call"""		1998856	0					
ANR	1999530	Argument	NULL		1998856	2					
ANR	1999531	Identifier	NULL		1998856	0					
ANR	1999532	Argument	NULL		1998856	3					
ANR	1999533	Identifier	NULL		1998856	0					
ANR	1999534	Argument	NULL		1998856	4					
ANR	1999535	Identifier	NULL		1998856	0					
ANR	1999536	ElseStatement	else		1998856	0					
ANR	1999537	CompoundStatement		115:8:3640:3640	1998856	0					
ANR	1999538	IfStatement	if ( * version == SOAP_1_1 )		1998856	0					
ANR	1999539	Condition	* version == SOAP_1_1	3570:6:118344:118363	1998856	0	True				
ANR	1999540	EqualityExpression	* version == SOAP_1_1		1998856	0		==			
ANR	1999541	UnaryOperationExpression	* version		1998856	0					
ANR	1999542	UnaryOperator	*		1998856	0					
ANR	1999543	Identifier	version		1998856	1					
ANR	1999544	Identifier	SOAP_1_1		1998856	1					
ANR	1999545	CompoundStatement		116:28:3670:3670	1998856	1					
ANR	1999546	ExpressionStatement	"attr = get_attribute_ex ( func -> properties , ""encodingStyle"" , SOAP_1_1_ENV_NAMESPACE )"	3571:3:118371:118451	1998856	0	True				
ANR	1999547	AssignmentExpression	"attr = get_attribute_ex ( func -> properties , ""encodingStyle"" , SOAP_1_1_ENV_NAMESPACE )"		1998856	0		=			
ANR	1999548	Identifier	attr		1998856	0					
ANR	1999549	CallExpression	"get_attribute_ex ( func -> properties , ""encodingStyle"" , SOAP_1_1_ENV_NAMESPACE )"		1998856	1					
ANR	1999550	Callee	get_attribute_ex		1998856	0					
ANR	1999551	Identifier	get_attribute_ex		1998856	0					
ANR	1999552	ArgumentList	func -> properties		1998856	1					
ANR	1999553	Argument	func -> properties		1998856	0					
ANR	1999554	PtrMemberAccess	func -> properties		1998856	0					
ANR	1999555	Identifier	func		1998856	0					
ANR	1999556	Identifier	properties		1998856	1					
ANR	1999557	Argument	"""encodingStyle"""		1998856	1					
ANR	1999558	PrimaryExpression	"""encodingStyle"""		1998856	0					
ANR	1999559	Argument	SOAP_1_1_ENV_NAMESPACE		1998856	2					
ANR	1999560	Identifier	SOAP_1_1_ENV_NAMESPACE		1998856	0					
ANR	1999561	IfStatement	"if ( attr && strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE ) != 0 )"		1998856	1					
ANR	1999562	Condition	"attr && strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE ) != 0"	3572:7:118460:118533	1998856	0	True				
ANR	1999563	AndExpression	"attr && strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE ) != 0"		1998856	0		&&			
ANR	1999564	Identifier	attr		1998856	0					
ANR	1999565	EqualityExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE ) != 0"		1998856	1		!=			
ANR	1999566	CallExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE )"		1998856	0					
ANR	1999567	Callee	strcmp		1998856	0					
ANR	1999568	Identifier	strcmp		1998856	0					
ANR	1999569	ArgumentList	( char * ) attr -> children -> content		1998856	1					
ANR	1999570	Argument	( char * ) attr -> children -> content		1998856	0					
ANR	1999571	CastExpression	( char * ) attr -> children -> content		1998856	0					
ANR	1999572	CastTarget	char *		1998856	0					
ANR	1999573	PtrMemberAccess	attr -> children -> content		1998856	1					
ANR	1999574	PtrMemberAccess	attr -> children		1998856	0					
ANR	1999575	Identifier	attr		1998856	0					
ANR	1999576	Identifier	children		1998856	1					
ANR	1999577	Identifier	content		1998856	1					
ANR	1999578	Argument	SOAP_1_1_ENC_NAMESPACE		1998856	1					
ANR	1999579	Identifier	SOAP_1_1_ENC_NAMESPACE		1998856	0					
ANR	1999580	PrimaryExpression	0		1998856	1					
ANR	1999581	CompoundStatement		118:83:3840:3840	1998856	1					
ANR	1999582	ExpressionStatement	"soap_server_fault ( ""Client"" , ""Unknown Data Encoding Style"" , NULL , NULL , NULL )"	3573:4:118542:118617	1998856	0	True				
ANR	1999583	CallExpression	"soap_server_fault ( ""Client"" , ""Unknown Data Encoding Style"" , NULL , NULL , NULL )"		1998856	0					
ANR	1999584	Callee	soap_server_fault		1998856	0					
ANR	1999585	Identifier	soap_server_fault		1998856	0					
ANR	1999586	ArgumentList	"""Client"""		1998856	1					
ANR	1999587	Argument	"""Client"""		1998856	0					
ANR	1999588	PrimaryExpression	"""Client"""		1998856	0					
ANR	1999589	Argument	"""Unknown Data Encoding Style"""		1998856	1					
ANR	1999590	PrimaryExpression	"""Unknown Data Encoding Style"""		1998856	0					
ANR	1999591	Argument	NULL		1998856	2					
ANR	1999592	Identifier	NULL		1998856	0					
ANR	1999593	Argument	NULL		1998856	3					
ANR	1999594	Identifier	NULL		1998856	0					
ANR	1999595	Argument	NULL		1998856	4					
ANR	1999596	Identifier	NULL		1998856	0					
ANR	1999597	ElseStatement	else		1998856	0					
ANR	1999598	CompoundStatement		121:9:3937:3937	1998856	0					
ANR	1999599	ExpressionStatement	"attr = get_attribute_ex ( func -> properties , ""encodingStyle"" , SOAP_1_2_ENV_NAMESPACE )"	3576:3:118638:118718	1998856	0	True				
ANR	1999600	AssignmentExpression	"attr = get_attribute_ex ( func -> properties , ""encodingStyle"" , SOAP_1_2_ENV_NAMESPACE )"		1998856	0		=			
ANR	1999601	Identifier	attr		1998856	0					
ANR	1999602	CallExpression	"get_attribute_ex ( func -> properties , ""encodingStyle"" , SOAP_1_2_ENV_NAMESPACE )"		1998856	1					
ANR	1999603	Callee	get_attribute_ex		1998856	0					
ANR	1999604	Identifier	get_attribute_ex		1998856	0					
ANR	1999605	ArgumentList	func -> properties		1998856	1					
ANR	1999606	Argument	func -> properties		1998856	0					
ANR	1999607	PtrMemberAccess	func -> properties		1998856	0					
ANR	1999608	Identifier	func		1998856	0					
ANR	1999609	Identifier	properties		1998856	1					
ANR	1999610	Argument	"""encodingStyle"""		1998856	1					
ANR	1999611	PrimaryExpression	"""encodingStyle"""		1998856	0					
ANR	1999612	Argument	SOAP_1_2_ENV_NAMESPACE		1998856	2					
ANR	1999613	Identifier	SOAP_1_2_ENV_NAMESPACE		1998856	0					
ANR	1999614	IfStatement	"if ( attr && strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ENC_NAMESPACE ) != 0 )"		1998856	1					
ANR	1999615	Condition	"attr && strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ENC_NAMESPACE ) != 0"	3577:7:118727:118800	1998856	0	True				
ANR	1999616	AndExpression	"attr && strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ENC_NAMESPACE ) != 0"		1998856	0		&&			
ANR	1999617	Identifier	attr		1998856	0					
ANR	1999618	EqualityExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ENC_NAMESPACE ) != 0"		1998856	1		!=			
ANR	1999619	CallExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ENC_NAMESPACE )"		1998856	0					
ANR	1999620	Callee	strcmp		1998856	0					
ANR	1999621	Identifier	strcmp		1998856	0					
ANR	1999622	ArgumentList	( char * ) attr -> children -> content		1998856	1					
ANR	1999623	Argument	( char * ) attr -> children -> content		1998856	0					
ANR	1999624	CastExpression	( char * ) attr -> children -> content		1998856	0					
ANR	1999625	CastTarget	char *		1998856	0					
ANR	1999626	PtrMemberAccess	attr -> children -> content		1998856	1					
ANR	1999627	PtrMemberAccess	attr -> children		1998856	0					
ANR	1999628	Identifier	attr		1998856	0					
ANR	1999629	Identifier	children		1998856	1					
ANR	1999630	Identifier	content		1998856	1					
ANR	1999631	Argument	SOAP_1_2_ENC_NAMESPACE		1998856	1					
ANR	1999632	Identifier	SOAP_1_2_ENC_NAMESPACE		1998856	0					
ANR	1999633	PrimaryExpression	0		1998856	1					
ANR	1999634	CompoundStatement		123:83:4107:4107	1998856	1					
ANR	1999635	ExpressionStatement	"soap_server_fault ( ""DataEncodingUnknown"" , ""Unknown Data Encoding Style"" , NULL , NULL , NULL )"	3578:4:118809:118897	1998856	0	True				
ANR	1999636	CallExpression	"soap_server_fault ( ""DataEncodingUnknown"" , ""Unknown Data Encoding Style"" , NULL , NULL , NULL )"		1998856	0					
ANR	1999637	Callee	soap_server_fault		1998856	0					
ANR	1999638	Identifier	soap_server_fault		1998856	0					
ANR	1999639	ArgumentList	"""DataEncodingUnknown"""		1998856	1					
ANR	1999640	Argument	"""DataEncodingUnknown"""		1998856	0					
ANR	1999641	PrimaryExpression	"""DataEncodingUnknown"""		1998856	0					
ANR	1999642	Argument	"""Unknown Data Encoding Style"""		1998856	1					
ANR	1999643	PrimaryExpression	"""Unknown Data Encoding Style"""		1998856	0					
ANR	1999644	Argument	NULL		1998856	2					
ANR	1999645	Identifier	NULL		1998856	0					
ANR	1999646	Argument	NULL		1998856	3					
ANR	1999647	Identifier	NULL		1998856	0					
ANR	1999648	Argument	NULL		1998856	4					
ANR	1999649	Identifier	NULL		1998856	0					
ANR	1999650	ExpressionStatement	"function = find_function ( sdl , func , function_name )"	3581:2:118910:118960	1998856	1	True				
ANR	1999651	AssignmentExpression	"function = find_function ( sdl , func , function_name )"		1998856	0		=			
ANR	1999652	Identifier	function		1998856	0					
ANR	1999653	CallExpression	"find_function ( sdl , func , function_name )"		1998856	1					
ANR	1999654	Callee	find_function		1998856	0					
ANR	1999655	Identifier	find_function		1998856	0					
ANR	1999656	ArgumentList	sdl		1998856	1					
ANR	1999657	Argument	sdl		1998856	0					
ANR	1999658	Identifier	sdl		1998856	0					
ANR	1999659	Argument	func		1998856	1					
ANR	1999660	Identifier	func		1998856	0					
ANR	1999661	Argument	function_name		1998856	2					
ANR	1999662	Identifier	function_name		1998856	0					
ANR	1999663	IfStatement	if ( sdl != NULL && function == NULL )		1998856	2					
ANR	1999664	Condition	sdl != NULL && function == NULL	3582:6:118968:118998	1998856	0	True				
ANR	1999665	AndExpression	sdl != NULL && function == NULL		1998856	0		&&			
ANR	1999666	EqualityExpression	sdl != NULL		1998856	0		!=			
ANR	1999667	Identifier	sdl		1998856	0					
ANR	1999668	Identifier	NULL		1998856	1					
ANR	1999669	EqualityExpression	function == NULL		1998856	1		==			
ANR	1999670	Identifier	function		1998856	0					
ANR	1999671	Identifier	NULL		1998856	1					
ANR	1999672	CompoundStatement		128:39:4305:4305	1998856	1					
ANR	1999673	IfStatement	if ( * version == SOAP_1_2 )		1998856	0					
ANR	1999674	Condition	* version == SOAP_1_2	3583:7:119010:119029	1998856	0	True				
ANR	1999675	EqualityExpression	* version == SOAP_1_2		1998856	0		==			
ANR	1999676	UnaryOperationExpression	* version		1998856	0					
ANR	1999677	UnaryOperator	*		1998856	0					
ANR	1999678	Identifier	version		1998856	1					
ANR	1999679	Identifier	SOAP_1_2		1998856	1					
ANR	1999680	CompoundStatement		129:29:4336:4336	1998856	1					
ANR	1999681	ExpressionStatement	"soap_server_fault ( ""rpc:ProcedureNotPresent"" , ""Procedure not present"" , NULL , NULL , NULL )"	3584:4:119038:119124	1998856	0	True				
ANR	1999682	CallExpression	"soap_server_fault ( ""rpc:ProcedureNotPresent"" , ""Procedure not present"" , NULL , NULL , NULL )"		1998856	0					
ANR	1999683	Callee	soap_server_fault		1998856	0					
ANR	1999684	Identifier	soap_server_fault		1998856	0					
ANR	1999685	ArgumentList	"""rpc:ProcedureNotPresent"""		1998856	1					
ANR	1999686	Argument	"""rpc:ProcedureNotPresent"""		1998856	0					
ANR	1999687	PrimaryExpression	"""rpc:ProcedureNotPresent"""		1998856	0					
ANR	1999688	Argument	"""Procedure not present"""		1998856	1					
ANR	1999689	PrimaryExpression	"""Procedure not present"""		1998856	0					
ANR	1999690	Argument	NULL		1998856	2					
ANR	1999691	Identifier	NULL		1998856	0					
ANR	1999692	Argument	NULL		1998856	3					
ANR	1999693	Identifier	NULL		1998856	0					
ANR	1999694	Argument	NULL		1998856	4					
ANR	1999695	Identifier	NULL		1998856	0					
ANR	1999696	ElseStatement	else		1998856	0					
ANR	1999697	CompoundStatement		131:10:4440:4440	1998856	0					
ANR	1999698	ExpressionStatement	"php_error ( E_ERROR , ""Procedure '%s' not present"" , func -> name )"	3586:4:119142:119202	1998856	0	True				
ANR	1999699	CallExpression	"php_error ( E_ERROR , ""Procedure '%s' not present"" , func -> name )"		1998856	0					
ANR	1999700	Callee	php_error		1998856	0					
ANR	1999701	Identifier	php_error		1998856	0					
ANR	1999702	ArgumentList	E_ERROR		1998856	1					
ANR	1999703	Argument	E_ERROR		1998856	0					
ANR	1999704	Identifier	E_ERROR		1998856	0					
ANR	1999705	Argument	"""Procedure '%s' not present"""		1998856	1					
ANR	1999706	PrimaryExpression	"""Procedure '%s' not present"""		1998856	0					
ANR	1999707	Argument	func -> name		1998856	2					
ANR	1999708	PtrMemberAccess	func -> name		1998856	0					
ANR	1999709	Identifier	func		1998856	0					
ANR	1999710	Identifier	name		1998856	1					
ANR	1999711	ExpressionStatement	* headers = NULL	3591:1:119218:119233	1998856	27	True				
ANR	1999712	AssignmentExpression	* headers = NULL		1998856	0		=			
ANR	1999713	UnaryOperationExpression	* headers		1998856	0					
ANR	1999714	UnaryOperator	*		1998856	0					
ANR	1999715	Identifier	headers		1998856	1					
ANR	1999716	Identifier	NULL		1998856	1					
ANR	1999717	IfStatement	if ( head )		1998856	28					
ANR	1999718	Condition	head	3592:5:119240:119243	1998856	0	True				
ANR	1999719	Identifier	head		1998856	0					
ANR	1999720	CompoundStatement		139:2:4554:4581	1998856	1					
ANR	1999721	IdentifierDeclStatement	"soapHeader * h , * last = NULL ;"	3593:2:119250:119277	1998856	0	True				
ANR	1999722	IdentifierDecl	* h		1998856	0					
ANR	1999723	IdentifierDeclType	soapHeader *		1998856	0					
ANR	1999724	Identifier	h		1998856	1					
ANR	1999725	IdentifierDecl	* last = NULL		1998856	1					
ANR	1999726	IdentifierDeclType	soapHeader *		1998856	0					
ANR	1999727	Identifier	last		1998856	1					
ANR	1999728	AssignmentExpression	* last = NULL		1998856	2		=			
ANR	1999729	Identifier	NULL		1998856	0					
ANR	1999730	Identifier	NULL		1998856	1					
ANR	1999731	ExpressionStatement	attr = head -> properties	3595:2:119282:119305	1998856	1	True				
ANR	1999732	AssignmentExpression	attr = head -> properties		1998856	0		=			
ANR	1999733	Identifier	attr		1998856	0					
ANR	1999734	PtrMemberAccess	head -> properties		1998856	1					
ANR	1999735	Identifier	head		1998856	0					
ANR	1999736	Identifier	properties		1998856	1					
ANR	1999737	WhileStatement	while ( attr != NULL )		1998856	2					
ANR	1999738	Condition	attr != NULL	3596:9:119316:119327	1998856	0	True				
ANR	1999739	EqualityExpression	attr != NULL		1998856	0		!=			
ANR	1999740	Identifier	attr		1998856	0					
ANR	1999741	Identifier	NULL		1998856	1					
ANR	1999742	CompoundStatement		142:23:4634:4634	1998856	1					
ANR	1999743	IfStatement	if ( attr -> ns == NULL )		1998856	0					
ANR	1999744	Condition	attr -> ns == NULL	3597:7:119339:119354	1998856	0	True				
ANR	1999745	EqualityExpression	attr -> ns == NULL		1998856	0		==			
ANR	1999746	PtrMemberAccess	attr -> ns		1998856	0					
ANR	1999747	Identifier	attr		1998856	0					
ANR	1999748	Identifier	ns		1998856	1					
ANR	1999749	Identifier	NULL		1998856	1					
ANR	1999750	CompoundStatement		143:25:4661:4661	1998856	1					
ANR	1999751	ExpressionStatement	"soap_server_fault ( ""Client"" , ""A SOAP Header element cannot have non Namespace qualified attributes"" , NULL , NULL , NULL )"	3598:4:119363:119480	1998856	0	True				
ANR	1999752	CallExpression	"soap_server_fault ( ""Client"" , ""A SOAP Header element cannot have non Namespace qualified attributes"" , NULL , NULL , NULL )"		1998856	0					
ANR	1999753	Callee	soap_server_fault		1998856	0					
ANR	1999754	Identifier	soap_server_fault		1998856	0					
ANR	1999755	ArgumentList	"""Client"""		1998856	1					
ANR	1999756	Argument	"""Client"""		1998856	0					
ANR	1999757	PrimaryExpression	"""Client"""		1998856	0					
ANR	1999758	Argument	"""A SOAP Header element cannot have non Namespace qualified attributes"""		1998856	1					
ANR	1999759	PrimaryExpression	"""A SOAP Header element cannot have non Namespace qualified attributes"""		1998856	0					
ANR	1999760	Argument	NULL		1998856	2					
ANR	1999761	Identifier	NULL		1998856	0					
ANR	1999762	Argument	NULL		1998856	3					
ANR	1999763	Identifier	NULL		1998856	0					
ANR	1999764	Argument	NULL		1998856	4					
ANR	1999765	Identifier	NULL		1998856	0					
ANR	1999766	ElseStatement	else		1998856	0					
ANR	1999767	IfStatement	"if ( attr_is_equal_ex ( attr , ""encodingStyle"" , SOAP_1_2_ENV_NAMESPACE ) )"		1998856	0					
ANR	1999768	Condition	"attr_is_equal_ex ( attr , ""encodingStyle"" , SOAP_1_2_ENV_NAMESPACE )"	3599:14:119496:119556	1998856	0	True				
ANR	1999769	CallExpression	"attr_is_equal_ex ( attr , ""encodingStyle"" , SOAP_1_2_ENV_NAMESPACE )"		1998856	0					
ANR	1999770	Callee	attr_is_equal_ex		1998856	0					
ANR	1999771	Identifier	attr_is_equal_ex		1998856	0					
ANR	1999772	ArgumentList	attr		1998856	1					
ANR	1999773	Argument	attr		1998856	0					
ANR	1999774	Identifier	attr		1998856	0					
ANR	1999775	Argument	"""encodingStyle"""		1998856	1					
ANR	1999776	PrimaryExpression	"""encodingStyle"""		1998856	0					
ANR	1999777	Argument	SOAP_1_2_ENV_NAMESPACE		1998856	2					
ANR	1999778	Identifier	SOAP_1_2_ENV_NAMESPACE		1998856	0					
ANR	1999779	CompoundStatement		145:77:4863:4863	1998856	1					
ANR	1999780	IfStatement	if ( * version == SOAP_1_2 )		1998856	0					
ANR	1999781	Condition	* version == SOAP_1_2	3600:8:119569:119588	1998856	0	True				
ANR	1999782	EqualityExpression	* version == SOAP_1_2		1998856	0		==			
ANR	1999783	UnaryOperationExpression	* version		1998856	0					
ANR	1999784	UnaryOperator	*		1998856	0					
ANR	1999785	Identifier	version		1998856	1					
ANR	1999786	Identifier	SOAP_1_2		1998856	1					
ANR	1999787	CompoundStatement		146:30:4895:4895	1998856	1					
ANR	1999788	ExpressionStatement	"soap_server_fault ( ""Client"" , ""encodingStyle cannot be specified on the Header"" , NULL , NULL , NULL )"	3601:5:119598:119694	1998856	0	True				
ANR	1999789	CallExpression	"soap_server_fault ( ""Client"" , ""encodingStyle cannot be specified on the Header"" , NULL , NULL , NULL )"		1998856	0					
ANR	1999790	Callee	soap_server_fault		1998856	0					
ANR	1999791	Identifier	soap_server_fault		1998856	0					
ANR	1999792	ArgumentList	"""Client"""		1998856	1					
ANR	1999793	Argument	"""Client"""		1998856	0					
ANR	1999794	PrimaryExpression	"""Client"""		1998856	0					
ANR	1999795	Argument	"""encodingStyle cannot be specified on the Header"""		1998856	1					
ANR	1999796	PrimaryExpression	"""encodingStyle cannot be specified on the Header"""		1998856	0					
ANR	1999797	Argument	NULL		1998856	2					
ANR	1999798	Identifier	NULL		1998856	0					
ANR	1999799	Argument	NULL		1998856	3					
ANR	1999800	Identifier	NULL		1998856	0					
ANR	1999801	Argument	NULL		1998856	4					
ANR	1999802	Identifier	NULL		1998856	0					
ANR	1999803	ElseStatement	else		1998856	0					
ANR	1999804	IfStatement	"if ( strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE ) != 0 )"		1998856	0					
ANR	1999805	Condition	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE ) != 0"	3602:15:119711:119776	1998856	0	True				
ANR	1999806	EqualityExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE ) != 0"		1998856	0		!=			
ANR	1999807	CallExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE )"		1998856	0					
ANR	1999808	Callee	strcmp		1998856	0					
ANR	1999809	Identifier	strcmp		1998856	0					
ANR	1999810	ArgumentList	( char * ) attr -> children -> content		1998856	1					
ANR	1999811	Argument	( char * ) attr -> children -> content		1998856	0					
ANR	1999812	CastExpression	( char * ) attr -> children -> content		1998856	0					
ANR	1999813	CastTarget	char *		1998856	0					
ANR	1999814	PtrMemberAccess	attr -> children -> content		1998856	1					
ANR	1999815	PtrMemberAccess	attr -> children		1998856	0					
ANR	1999816	Identifier	attr		1998856	0					
ANR	1999817	Identifier	children		1998856	1					
ANR	1999818	Identifier	content		1998856	1					
ANR	1999819	Argument	SOAP_1_1_ENC_NAMESPACE		1998856	1					
ANR	1999820	Identifier	SOAP_1_1_ENC_NAMESPACE		1998856	0					
ANR	1999821	PrimaryExpression	0		1998856	1					
ANR	1999822	CompoundStatement		148:83:5083:5083	1998856	1					
ANR	1999823	ExpressionStatement	"soap_server_fault ( ""Client"" , ""Unknown data encoding style"" , NULL , NULL , NULL )"	3603:5:119786:119862	1998856	0	True				
ANR	1999824	CallExpression	"soap_server_fault ( ""Client"" , ""Unknown data encoding style"" , NULL , NULL , NULL )"		1998856	0					
ANR	1999825	Callee	soap_server_fault		1998856	0					
ANR	1999826	Identifier	soap_server_fault		1998856	0					
ANR	1999827	ArgumentList	"""Client"""		1998856	1					
ANR	1999828	Argument	"""Client"""		1998856	0					
ANR	1999829	PrimaryExpression	"""Client"""		1998856	0					
ANR	1999830	Argument	"""Unknown data encoding style"""		1998856	1					
ANR	1999831	PrimaryExpression	"""Unknown data encoding style"""		1998856	0					
ANR	1999832	Argument	NULL		1998856	2					
ANR	1999833	Identifier	NULL		1998856	0					
ANR	1999834	Argument	NULL		1998856	3					
ANR	1999835	Identifier	NULL		1998856	0					
ANR	1999836	Argument	NULL		1998856	4					
ANR	1999837	Identifier	NULL		1998856	0					
ANR	1999838	ExpressionStatement	attr = attr -> next	3606:3:119878:119895	1998856	1	True				
ANR	1999839	AssignmentExpression	attr = attr -> next		1998856	0		=			
ANR	1999840	Identifier	attr		1998856	0					
ANR	1999841	PtrMemberAccess	attr -> next		1998856	1					
ANR	1999842	Identifier	attr		1998856	0					
ANR	1999843	Identifier	next		1998856	1					
ANR	1999844	ExpressionStatement	trav = head -> children	3608:2:119903:119924	1998856	3	True				
ANR	1999845	AssignmentExpression	trav = head -> children		1998856	0		=			
ANR	1999846	Identifier	trav		1998856	0					
ANR	1999847	PtrMemberAccess	head -> children		1998856	1					
ANR	1999848	Identifier	head		1998856	0					
ANR	1999849	Identifier	children		1998856	1					
ANR	1999850	WhileStatement	while ( trav != NULL )		1998856	4					
ANR	1999851	Condition	trav != NULL	3609:9:119935:119946	1998856	0	True				
ANR	1999852	EqualityExpression	trav != NULL		1998856	0		!=			
ANR	1999853	Identifier	trav		1998856	0					
ANR	1999854	Identifier	NULL		1998856	1					
ANR	1999855	CompoundStatement		155:23:5253:5253	1998856	1					
ANR	1999856	IfStatement	if ( trav -> type == XML_ELEMENT_NODE )		1998856	0					
ANR	1999857	Condition	trav -> type == XML_ELEMENT_NODE	3610:7:119958:119987	1998856	0	True				
ANR	1999858	EqualityExpression	trav -> type == XML_ELEMENT_NODE		1998856	0		==			
ANR	1999859	PtrMemberAccess	trav -> type		1998856	0					
ANR	1999860	Identifier	trav		1998856	0					
ANR	1999861	Identifier	type		1998856	1					
ANR	1999862	Identifier	XML_ELEMENT_NODE		1998856	1					
ANR	1999863	CompoundStatement		158:4:5332:5354	1998856	1					
ANR	1999864	IdentifierDeclStatement	xmlNodePtr hdr_func = trav ;	3611:4:119996:120022	1998856	0	True				
ANR	1999865	IdentifierDecl	hdr_func = trav		1998856	0					
ANR	1999866	IdentifierDeclType	xmlNodePtr		1998856	0					
ANR	1999867	Identifier	hdr_func		1998856	1					
ANR	1999868	AssignmentExpression	hdr_func = trav		1998856	2		=			
ANR	1999869	Identifier	trav		1998856	0					
ANR	1999870	Identifier	trav		1998856	1					
ANR	1999871	IdentifierDeclStatement	int mustUnderstand = 0 ;	3612:4:120028:120050	1998856	1	True				
ANR	1999872	IdentifierDecl	mustUnderstand = 0		1998856	0					
ANR	1999873	IdentifierDeclType	int		1998856	0					
ANR	1999874	Identifier	mustUnderstand		1998856	1					
ANR	1999875	AssignmentExpression	mustUnderstand = 0		1998856	2		=			
ANR	1999876	Identifier	mustUnderstand		1998856	0					
ANR	1999877	PrimaryExpression	0		1998856	1					
ANR	1999878	IfStatement	if ( * version == SOAP_1_1 )		1998856	2					
ANR	1999879	Condition	* version == SOAP_1_1	3614:8:120061:120080	1998856	0	True				
ANR	1999880	EqualityExpression	* version == SOAP_1_1		1998856	0		==			
ANR	1999881	UnaryOperationExpression	* version		1998856	0					
ANR	1999882	UnaryOperator	*		1998856	0					
ANR	1999883	Identifier	version		1998856	1					
ANR	1999884	Identifier	SOAP_1_1		1998856	1					
ANR	1999885	CompoundStatement		160:30:5387:5387	1998856	1					
ANR	1999886	ExpressionStatement	"attr = get_attribute_ex ( hdr_func -> properties , ""encodingStyle"" , SOAP_1_1_ENV_NAMESPACE )"	3615:5:120090:120174	1998856	0	True				
ANR	1999887	AssignmentExpression	"attr = get_attribute_ex ( hdr_func -> properties , ""encodingStyle"" , SOAP_1_1_ENV_NAMESPACE )"		1998856	0		=			
ANR	1999888	Identifier	attr		1998856	0					
ANR	1999889	CallExpression	"get_attribute_ex ( hdr_func -> properties , ""encodingStyle"" , SOAP_1_1_ENV_NAMESPACE )"		1998856	1					
ANR	1999890	Callee	get_attribute_ex		1998856	0					
ANR	1999891	Identifier	get_attribute_ex		1998856	0					
ANR	1999892	ArgumentList	hdr_func -> properties		1998856	1					
ANR	1999893	Argument	hdr_func -> properties		1998856	0					
ANR	1999894	PtrMemberAccess	hdr_func -> properties		1998856	0					
ANR	1999895	Identifier	hdr_func		1998856	0					
ANR	1999896	Identifier	properties		1998856	1					
ANR	1999897	Argument	"""encodingStyle"""		1998856	1					
ANR	1999898	PrimaryExpression	"""encodingStyle"""		1998856	0					
ANR	1999899	Argument	SOAP_1_1_ENV_NAMESPACE		1998856	2					
ANR	1999900	Identifier	SOAP_1_1_ENV_NAMESPACE		1998856	0					
ANR	1999901	IfStatement	"if ( attr && strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE ) != 0 )"		1998856	1					
ANR	1999902	Condition	"attr && strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE ) != 0"	3616:9:120185:120258	1998856	0	True				
ANR	1999903	AndExpression	"attr && strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE ) != 0"		1998856	0		&&			
ANR	1999904	Identifier	attr		1998856	0					
ANR	1999905	EqualityExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE ) != 0"		1998856	1		!=			
ANR	1999906	CallExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ENC_NAMESPACE )"		1998856	0					
ANR	1999907	Callee	strcmp		1998856	0					
ANR	1999908	Identifier	strcmp		1998856	0					
ANR	1999909	ArgumentList	( char * ) attr -> children -> content		1998856	1					
ANR	1999910	Argument	( char * ) attr -> children -> content		1998856	0					
ANR	1999911	CastExpression	( char * ) attr -> children -> content		1998856	0					
ANR	1999912	CastTarget	char *		1998856	0					
ANR	1999913	PtrMemberAccess	attr -> children -> content		1998856	1					
ANR	1999914	PtrMemberAccess	attr -> children		1998856	0					
ANR	1999915	Identifier	attr		1998856	0					
ANR	1999916	Identifier	children		1998856	1					
ANR	1999917	Identifier	content		1998856	1					
ANR	1999918	Argument	SOAP_1_1_ENC_NAMESPACE		1998856	1					
ANR	1999919	Identifier	SOAP_1_1_ENC_NAMESPACE		1998856	0					
ANR	1999920	PrimaryExpression	0		1998856	1					
ANR	1999921	CompoundStatement		162:85:5565:5565	1998856	1					
ANR	1999922	ExpressionStatement	"soap_server_fault ( ""Client"" , ""Unknown Data Encoding Style"" , NULL , NULL , NULL )"	3617:6:120269:120344	1998856	0	True				
ANR	1999923	CallExpression	"soap_server_fault ( ""Client"" , ""Unknown Data Encoding Style"" , NULL , NULL , NULL )"		1998856	0					
ANR	1999924	Callee	soap_server_fault		1998856	0					
ANR	1999925	Identifier	soap_server_fault		1998856	0					
ANR	1999926	ArgumentList	"""Client"""		1998856	1					
ANR	1999927	Argument	"""Client"""		1998856	0					
ANR	1999928	PrimaryExpression	"""Client"""		1998856	0					
ANR	1999929	Argument	"""Unknown Data Encoding Style"""		1998856	1					
ANR	1999930	PrimaryExpression	"""Unknown Data Encoding Style"""		1998856	0					
ANR	1999931	Argument	NULL		1998856	2					
ANR	1999932	Identifier	NULL		1998856	0					
ANR	1999933	Argument	NULL		1998856	3					
ANR	1999934	Identifier	NULL		1998856	0					
ANR	1999935	Argument	NULL		1998856	4					
ANR	1999936	Identifier	NULL		1998856	0					
ANR	1999937	ExpressionStatement	"attr = get_attribute_ex ( hdr_func -> properties , ""actor"" , envelope_ns )"	3619:5:120358:120423	1998856	2	True				
ANR	1999938	AssignmentExpression	"attr = get_attribute_ex ( hdr_func -> properties , ""actor"" , envelope_ns )"		1998856	0		=			
ANR	1999939	Identifier	attr		1998856	0					
ANR	1999940	CallExpression	"get_attribute_ex ( hdr_func -> properties , ""actor"" , envelope_ns )"		1998856	1					
ANR	1999941	Callee	get_attribute_ex		1998856	0					
ANR	1999942	Identifier	get_attribute_ex		1998856	0					
ANR	1999943	ArgumentList	hdr_func -> properties		1998856	1					
ANR	1999944	Argument	hdr_func -> properties		1998856	0					
ANR	1999945	PtrMemberAccess	hdr_func -> properties		1998856	0					
ANR	1999946	Identifier	hdr_func		1998856	0					
ANR	1999947	Identifier	properties		1998856	1					
ANR	1999948	Argument	"""actor"""		1998856	1					
ANR	1999949	PrimaryExpression	"""actor"""		1998856	0					
ANR	1999950	Argument	envelope_ns		1998856	2					
ANR	1999951	Identifier	envelope_ns		1998856	0					
ANR	1999952	IfStatement	if ( attr != NULL )		1998856	3					
ANR	1999953	Condition	attr != NULL	3620:9:120434:120445	1998856	0	True				
ANR	1999954	EqualityExpression	attr != NULL		1998856	0		!=			
ANR	1999955	Identifier	attr		1998856	0					
ANR	1999956	Identifier	NULL		1998856	1					
ANR	1999957	CompoundStatement		166:23:5752:5752	1998856	1					
ANR	1999958	IfStatement	"if ( strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ACTOR_NEXT ) != 0 && ( actor == NULL || strcmp ( ( char * ) attr -> children -> content , actor ) != 0 ) )"		1998856	0					
ANR	1999959	Condition	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ACTOR_NEXT ) != 0 && ( actor == NULL || strcmp ( ( char * ) attr -> children -> content , actor ) != 0 )"	3621:10:120460:120604	1998856	0	True				
ANR	1999960	AndExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ACTOR_NEXT ) != 0 && ( actor == NULL || strcmp ( ( char * ) attr -> children -> content , actor ) != 0 )"		1998856	0		&&			
ANR	1999961	EqualityExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ACTOR_NEXT ) != 0"		1998856	0		!=			
ANR	1999962	CallExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_1_ACTOR_NEXT )"		1998856	0					
ANR	1999963	Callee	strcmp		1998856	0					
ANR	1999964	Identifier	strcmp		1998856	0					
ANR	1999965	ArgumentList	( char * ) attr -> children -> content		1998856	1					
ANR	1999966	Argument	( char * ) attr -> children -> content		1998856	0					
ANR	1999967	CastExpression	( char * ) attr -> children -> content		1998856	0					
ANR	1999968	CastTarget	char *		1998856	0					
ANR	1999969	PtrMemberAccess	attr -> children -> content		1998856	1					
ANR	1999970	PtrMemberAccess	attr -> children		1998856	0					
ANR	1999971	Identifier	attr		1998856	0					
ANR	1999972	Identifier	children		1998856	1					
ANR	1999973	Identifier	content		1998856	1					
ANR	1999974	Argument	SOAP_1_1_ACTOR_NEXT		1998856	1					
ANR	1999975	Identifier	SOAP_1_1_ACTOR_NEXT		1998856	0					
ANR	1999976	PrimaryExpression	0		1998856	1					
ANR	1999977	OrExpression	"actor == NULL || strcmp ( ( char * ) attr -> children -> content , actor ) != 0"		1998856	1		||			
ANR	1999978	EqualityExpression	actor == NULL		1998856	0		==			
ANR	1999979	Identifier	actor		1998856	0					
ANR	1999980	Identifier	NULL		1998856	1					
ANR	1999981	EqualityExpression	"strcmp ( ( char * ) attr -> children -> content , actor ) != 0"		1998856	1		!=			
ANR	1999982	CallExpression	"strcmp ( ( char * ) attr -> children -> content , actor )"		1998856	0					
ANR	1999983	Callee	strcmp		1998856	0					
ANR	1999984	Identifier	strcmp		1998856	0					
ANR	1999985	ArgumentList	( char * ) attr -> children -> content		1998856	1					
ANR	1999986	Argument	( char * ) attr -> children -> content		1998856	0					
ANR	1999987	CastExpression	( char * ) attr -> children -> content		1998856	0					
ANR	1999988	CastTarget	char *		1998856	0					
ANR	1999989	PtrMemberAccess	attr -> children -> content		1998856	1					
ANR	1999990	PtrMemberAccess	attr -> children		1998856	0					
ANR	1999991	Identifier	attr		1998856	0					
ANR	1999992	Identifier	children		1998856	1					
ANR	1999993	Identifier	content		1998856	1					
ANR	1999994	Argument	actor		1998856	1					
ANR	1999995	Identifier	actor		1998856	0					
ANR	1999996	PrimaryExpression	0		1998856	1					
ANR	1999997	CompoundStatement		168:80:5911:5911	1998856	1					
ANR	1999998	GotoStatement	goto ignore_header ;	3623:8:120617:120635	1998856	0	True				
ANR	1999999	Identifier	ignore_header		1998856	0					
ANR	2000000	ElseStatement	else		1998856	0					
ANR	2000001	IfStatement	if ( * version == SOAP_1_2 )		1998856	0					
ANR	2000002	Condition	* version == SOAP_1_2	3626:15:120667:120686	1998856	0	True				
ANR	2000003	EqualityExpression	* version == SOAP_1_2		1998856	0		==			
ANR	2000004	UnaryOperationExpression	* version		1998856	0					
ANR	2000005	UnaryOperator	*		1998856	0					
ANR	2000006	Identifier	version		1998856	1					
ANR	2000007	Identifier	SOAP_1_2		1998856	1					
ANR	2000008	CompoundStatement		172:37:5993:5993	1998856	1					
ANR	2000009	ExpressionStatement	"attr = get_attribute_ex ( hdr_func -> properties , ""encodingStyle"" , SOAP_1_2_ENV_NAMESPACE )"	3627:5:120696:120780	1998856	0	True				
ANR	2000010	AssignmentExpression	"attr = get_attribute_ex ( hdr_func -> properties , ""encodingStyle"" , SOAP_1_2_ENV_NAMESPACE )"		1998856	0		=			
ANR	2000011	Identifier	attr		1998856	0					
ANR	2000012	CallExpression	"get_attribute_ex ( hdr_func -> properties , ""encodingStyle"" , SOAP_1_2_ENV_NAMESPACE )"		1998856	1					
ANR	2000013	Callee	get_attribute_ex		1998856	0					
ANR	2000014	Identifier	get_attribute_ex		1998856	0					
ANR	2000015	ArgumentList	hdr_func -> properties		1998856	1					
ANR	2000016	Argument	hdr_func -> properties		1998856	0					
ANR	2000017	PtrMemberAccess	hdr_func -> properties		1998856	0					
ANR	2000018	Identifier	hdr_func		1998856	0					
ANR	2000019	Identifier	properties		1998856	1					
ANR	2000020	Argument	"""encodingStyle"""		1998856	1					
ANR	2000021	PrimaryExpression	"""encodingStyle"""		1998856	0					
ANR	2000022	Argument	SOAP_1_2_ENV_NAMESPACE		1998856	2					
ANR	2000023	Identifier	SOAP_1_2_ENV_NAMESPACE		1998856	0					
ANR	2000024	IfStatement	"if ( attr && strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ENC_NAMESPACE ) != 0 )"		1998856	1					
ANR	2000025	Condition	"attr && strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ENC_NAMESPACE ) != 0"	3628:9:120791:120864	1998856	0	True				
ANR	2000026	AndExpression	"attr && strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ENC_NAMESPACE ) != 0"		1998856	0		&&			
ANR	2000027	Identifier	attr		1998856	0					
ANR	2000028	EqualityExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ENC_NAMESPACE ) != 0"		1998856	1		!=			
ANR	2000029	CallExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ENC_NAMESPACE )"		1998856	0					
ANR	2000030	Callee	strcmp		1998856	0					
ANR	2000031	Identifier	strcmp		1998856	0					
ANR	2000032	ArgumentList	( char * ) attr -> children -> content		1998856	1					
ANR	2000033	Argument	( char * ) attr -> children -> content		1998856	0					
ANR	2000034	CastExpression	( char * ) attr -> children -> content		1998856	0					
ANR	2000035	CastTarget	char *		1998856	0					
ANR	2000036	PtrMemberAccess	attr -> children -> content		1998856	1					
ANR	2000037	PtrMemberAccess	attr -> children		1998856	0					
ANR	2000038	Identifier	attr		1998856	0					
ANR	2000039	Identifier	children		1998856	1					
ANR	2000040	Identifier	content		1998856	1					
ANR	2000041	Argument	SOAP_1_2_ENC_NAMESPACE		1998856	1					
ANR	2000042	Identifier	SOAP_1_2_ENC_NAMESPACE		1998856	0					
ANR	2000043	PrimaryExpression	0		1998856	1					
ANR	2000044	CompoundStatement		174:85:6171:6171	1998856	1					
ANR	2000045	ExpressionStatement	"soap_server_fault ( ""DataEncodingUnknown"" , ""Unknown Data Encoding Style"" , NULL , NULL , NULL )"	3629:6:120875:120963	1998856	0	True				
ANR	2000046	CallExpression	"soap_server_fault ( ""DataEncodingUnknown"" , ""Unknown Data Encoding Style"" , NULL , NULL , NULL )"		1998856	0					
ANR	2000047	Callee	soap_server_fault		1998856	0					
ANR	2000048	Identifier	soap_server_fault		1998856	0					
ANR	2000049	ArgumentList	"""DataEncodingUnknown"""		1998856	1					
ANR	2000050	Argument	"""DataEncodingUnknown"""		1998856	0					
ANR	2000051	PrimaryExpression	"""DataEncodingUnknown"""		1998856	0					
ANR	2000052	Argument	"""Unknown Data Encoding Style"""		1998856	1					
ANR	2000053	PrimaryExpression	"""Unknown Data Encoding Style"""		1998856	0					
ANR	2000054	Argument	NULL		1998856	2					
ANR	2000055	Identifier	NULL		1998856	0					
ANR	2000056	Argument	NULL		1998856	3					
ANR	2000057	Identifier	NULL		1998856	0					
ANR	2000058	Argument	NULL		1998856	4					
ANR	2000059	Identifier	NULL		1998856	0					
ANR	2000060	ExpressionStatement	"attr = get_attribute_ex ( hdr_func -> properties , ""role"" , envelope_ns )"	3631:5:120977:121041	1998856	2	True				
ANR	2000061	AssignmentExpression	"attr = get_attribute_ex ( hdr_func -> properties , ""role"" , envelope_ns )"		1998856	0		=			
ANR	2000062	Identifier	attr		1998856	0					
ANR	2000063	CallExpression	"get_attribute_ex ( hdr_func -> properties , ""role"" , envelope_ns )"		1998856	1					
ANR	2000064	Callee	get_attribute_ex		1998856	0					
ANR	2000065	Identifier	get_attribute_ex		1998856	0					
ANR	2000066	ArgumentList	hdr_func -> properties		1998856	1					
ANR	2000067	Argument	hdr_func -> properties		1998856	0					
ANR	2000068	PtrMemberAccess	hdr_func -> properties		1998856	0					
ANR	2000069	Identifier	hdr_func		1998856	0					
ANR	2000070	Identifier	properties		1998856	1					
ANR	2000071	Argument	"""role"""		1998856	1					
ANR	2000072	PrimaryExpression	"""role"""		1998856	0					
ANR	2000073	Argument	envelope_ns		1998856	2					
ANR	2000074	Identifier	envelope_ns		1998856	0					
ANR	2000075	IfStatement	if ( attr != NULL )		1998856	3					
ANR	2000076	Condition	attr != NULL	3632:9:121052:121063	1998856	0	True				
ANR	2000077	EqualityExpression	attr != NULL		1998856	0		!=			
ANR	2000078	Identifier	attr		1998856	0					
ANR	2000079	Identifier	NULL		1998856	1					
ANR	2000080	CompoundStatement		178:23:6370:6370	1998856	1					
ANR	2000081	IfStatement	"if ( strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ACTOR_UNLIMATERECEIVER ) != 0 && strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ACTOR_NEXT ) != 0 && ( actor == NULL || strcmp ( ( char * ) attr -> children -> content , actor ) != 0 ) )"		1998856	0					
ANR	2000082	Condition	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ACTOR_UNLIMATERECEIVER ) != 0 && strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ACTOR_NEXT ) != 0 && ( actor == NULL || strcmp ( ( char * ) attr -> children -> content , actor ) != 0 )"	3633:10:121078:121311	1998856	0	True				
ANR	2000083	AndExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ACTOR_UNLIMATERECEIVER ) != 0 && strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ACTOR_NEXT ) != 0 && ( actor == NULL || strcmp ( ( char * ) attr -> children -> content , actor ) != 0 )"		1998856	0		&&			
ANR	2000084	EqualityExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ACTOR_UNLIMATERECEIVER ) != 0"		1998856	0		!=			
ANR	2000085	CallExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ACTOR_UNLIMATERECEIVER )"		1998856	0					
ANR	2000086	Callee	strcmp		1998856	0					
ANR	2000087	Identifier	strcmp		1998856	0					
ANR	2000088	ArgumentList	( char * ) attr -> children -> content		1998856	1					
ANR	2000089	Argument	( char * ) attr -> children -> content		1998856	0					
ANR	2000090	CastExpression	( char * ) attr -> children -> content		1998856	0					
ANR	2000091	CastTarget	char *		1998856	0					
ANR	2000092	PtrMemberAccess	attr -> children -> content		1998856	1					
ANR	2000093	PtrMemberAccess	attr -> children		1998856	0					
ANR	2000094	Identifier	attr		1998856	0					
ANR	2000095	Identifier	children		1998856	1					
ANR	2000096	Identifier	content		1998856	1					
ANR	2000097	Argument	SOAP_1_2_ACTOR_UNLIMATERECEIVER		1998856	1					
ANR	2000098	Identifier	SOAP_1_2_ACTOR_UNLIMATERECEIVER		1998856	0					
ANR	2000099	PrimaryExpression	0		1998856	1					
ANR	2000100	AndExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ACTOR_NEXT ) != 0 && ( actor == NULL || strcmp ( ( char * ) attr -> children -> content , actor ) != 0 )"		1998856	1		&&			
ANR	2000101	EqualityExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ACTOR_NEXT ) != 0"		1998856	0		!=			
ANR	2000102	CallExpression	"strcmp ( ( char * ) attr -> children -> content , SOAP_1_2_ACTOR_NEXT )"		1998856	0					
ANR	2000103	Callee	strcmp		1998856	0					
ANR	2000104	Identifier	strcmp		1998856	0					
ANR	2000105	ArgumentList	( char * ) attr -> children -> content		1998856	1					
ANR	2000106	Argument	( char * ) attr -> children -> content		1998856	0					
ANR	2000107	CastExpression	( char * ) attr -> children -> content		1998856	0					
ANR	2000108	CastTarget	char *		1998856	0					
ANR	2000109	PtrMemberAccess	attr -> children -> content		1998856	1					
ANR	2000110	PtrMemberAccess	attr -> children		1998856	0					
ANR	2000111	Identifier	attr		1998856	0					
ANR	2000112	Identifier	children		1998856	1					
ANR	2000113	Identifier	content		1998856	1					
ANR	2000114	Argument	SOAP_1_2_ACTOR_NEXT		1998856	1					
ANR	2000115	Identifier	SOAP_1_2_ACTOR_NEXT		1998856	0					
ANR	2000116	PrimaryExpression	0		1998856	1					
ANR	2000117	OrExpression	"actor == NULL || strcmp ( ( char * ) attr -> children -> content , actor ) != 0"		1998856	1		||			
ANR	2000118	EqualityExpression	actor == NULL		1998856	0		==			
ANR	2000119	Identifier	actor		1998856	0					
ANR	2000120	Identifier	NULL		1998856	1					
ANR	2000121	EqualityExpression	"strcmp ( ( char * ) attr -> children -> content , actor ) != 0"		1998856	1		!=			
ANR	2000122	CallExpression	"strcmp ( ( char * ) attr -> children -> content , actor )"		1998856	0					
ANR	2000123	Callee	strcmp		1998856	0					
ANR	2000124	Identifier	strcmp		1998856	0					
ANR	2000125	ArgumentList	( char * ) attr -> children -> content		1998856	1					
ANR	2000126	Argument	( char * ) attr -> children -> content		1998856	0					
ANR	2000127	CastExpression	( char * ) attr -> children -> content		1998856	0					
ANR	2000128	CastTarget	char *		1998856	0					
ANR	2000129	PtrMemberAccess	attr -> children -> content		1998856	1					
ANR	2000130	PtrMemberAccess	attr -> children		1998856	0					
ANR	2000131	Identifier	attr		1998856	0					
ANR	2000132	Identifier	children		1998856	1					
ANR	2000133	Identifier	content		1998856	1					
ANR	2000134	Argument	actor		1998856	1					
ANR	2000135	Identifier	actor		1998856	0					
ANR	2000136	PrimaryExpression	0		1998856	1					
ANR	2000137	CompoundStatement		181:80:6618:6618	1998856	1					
ANR	2000138	GotoStatement	goto ignore_header ;	3636:8:121324:121342	1998856	0	True				
ANR	2000139	Identifier	ignore_header		1998856	0					
ANR	2000140	ExpressionStatement	"attr = get_attribute_ex ( hdr_func -> properties , ""mustUnderstand"" , envelope_ns )"	3640:4:121369:121443	1998856	3	True				
ANR	2000141	AssignmentExpression	"attr = get_attribute_ex ( hdr_func -> properties , ""mustUnderstand"" , envelope_ns )"		1998856	0		=			
ANR	2000142	Identifier	attr		1998856	0					
ANR	2000143	CallExpression	"get_attribute_ex ( hdr_func -> properties , ""mustUnderstand"" , envelope_ns )"		1998856	1					
ANR	2000144	Callee	get_attribute_ex		1998856	0					
ANR	2000145	Identifier	get_attribute_ex		1998856	0					
ANR	2000146	ArgumentList	hdr_func -> properties		1998856	1					
ANR	2000147	Argument	hdr_func -> properties		1998856	0					
ANR	2000148	PtrMemberAccess	hdr_func -> properties		1998856	0					
ANR	2000149	Identifier	hdr_func		1998856	0					
ANR	2000150	Identifier	properties		1998856	1					
ANR	2000151	Argument	"""mustUnderstand"""		1998856	1					
ANR	2000152	PrimaryExpression	"""mustUnderstand"""		1998856	0					
ANR	2000153	Argument	envelope_ns		1998856	2					
ANR	2000154	Identifier	envelope_ns		1998856	0					
ANR	2000155	IfStatement	if ( attr )		1998856	4					
ANR	2000156	Condition	attr	3641:8:121453:121456	1998856	0	True				
ANR	2000157	Identifier	attr		1998856	0					
ANR	2000158	CompoundStatement		187:14:6763:6763	1998856	1					
ANR	2000159	IfStatement	"if ( strcmp ( ( char * ) attr -> children -> content , ""1"" ) == 0 || strcmp ( ( char * ) attr -> children -> content , ""true"" ) == 0 )"		1998856	0					
ANR	2000160	Condition	"strcmp ( ( char * ) attr -> children -> content , ""1"" ) == 0 || strcmp ( ( char * ) attr -> children -> content , ""true"" ) == 0"	3642:9:121470:121579	1998856	0	True				
ANR	2000161	OrExpression	"strcmp ( ( char * ) attr -> children -> content , ""1"" ) == 0 || strcmp ( ( char * ) attr -> children -> content , ""true"" ) == 0"		1998856	0		||			
ANR	2000162	EqualityExpression	"strcmp ( ( char * ) attr -> children -> content , ""1"" ) == 0"		1998856	0		==			
ANR	2000163	CallExpression	"strcmp ( ( char * ) attr -> children -> content , ""1"" )"		1998856	0					
ANR	2000164	Callee	strcmp		1998856	0					
ANR	2000165	Identifier	strcmp		1998856	0					
ANR	2000166	ArgumentList	( char * ) attr -> children -> content		1998856	1					
ANR	2000167	Argument	( char * ) attr -> children -> content		1998856	0					
ANR	2000168	CastExpression	( char * ) attr -> children -> content		1998856	0					
ANR	2000169	CastTarget	char *		1998856	0					
ANR	2000170	PtrMemberAccess	attr -> children -> content		1998856	1					
ANR	2000171	PtrMemberAccess	attr -> children		1998856	0					
ANR	2000172	Identifier	attr		1998856	0					
ANR	2000173	Identifier	children		1998856	1					
ANR	2000174	Identifier	content		1998856	1					
ANR	2000175	Argument	"""1"""		1998856	1					
ANR	2000176	PrimaryExpression	"""1"""		1998856	0					
ANR	2000177	PrimaryExpression	0		1998856	1					
ANR	2000178	EqualityExpression	"strcmp ( ( char * ) attr -> children -> content , ""true"" ) == 0"		1998856	1		==			
ANR	2000179	CallExpression	"strcmp ( ( char * ) attr -> children -> content , ""true"" )"		1998856	0					
ANR	2000180	Callee	strcmp		1998856	0					
ANR	2000181	Identifier	strcmp		1998856	0					
ANR	2000182	ArgumentList	( char * ) attr -> children -> content		1998856	1					
ANR	2000183	Argument	( char * ) attr -> children -> content		1998856	0					
ANR	2000184	CastExpression	( char * ) attr -> children -> content		1998856	0					
ANR	2000185	CastTarget	char *		1998856	0					
ANR	2000186	PtrMemberAccess	attr -> children -> content		1998856	1					
ANR	2000187	PtrMemberAccess	attr -> children		1998856	0					
ANR	2000188	Identifier	attr		1998856	0					
ANR	2000189	Identifier	children		1998856	1					
ANR	2000190	Identifier	content		1998856	1					
ANR	2000191	Argument	"""true"""		1998856	1					
ANR	2000192	PrimaryExpression	"""true"""		1998856	0					
ANR	2000193	PrimaryExpression	0		1998856	1					
ANR	2000194	CompoundStatement		189:61:6886:6886	1998856	1					
ANR	2000195	ExpressionStatement	mustUnderstand = 1	3644:6:121590:121608	1998856	0	True				
ANR	2000196	AssignmentExpression	mustUnderstand = 1		1998856	0		=			
ANR	2000197	Identifier	mustUnderstand		1998856	0					
ANR	2000198	PrimaryExpression	1		1998856	1					
ANR	2000199	ElseStatement	else		1998856	0					
ANR	2000200	IfStatement	"if ( strcmp ( ( char * ) attr -> children -> content , ""0"" ) == 0 || strcmp ( ( char * ) attr -> children -> content , ""false"" ) == 0 )"		1998856	0					
ANR	2000201	Condition	"strcmp ( ( char * ) attr -> children -> content , ""0"" ) == 0 || strcmp ( ( char * ) attr -> children -> content , ""false"" ) == 0"	3645:16:121626:121743	1998856	0	True				
ANR	2000202	OrExpression	"strcmp ( ( char * ) attr -> children -> content , ""0"" ) == 0 || strcmp ( ( char * ) attr -> children -> content , ""false"" ) == 0"		1998856	0		||			
ANR	2000203	EqualityExpression	"strcmp ( ( char * ) attr -> children -> content , ""0"" ) == 0"		1998856	0		==			
ANR	2000204	CallExpression	"strcmp ( ( char * ) attr -> children -> content , ""0"" )"		1998856	0					
ANR	2000205	Callee	strcmp		1998856	0					
ANR	2000206	Identifier	strcmp		1998856	0					
ANR	2000207	ArgumentList	( char * ) attr -> children -> content		1998856	1					
ANR	2000208	Argument	( char * ) attr -> children -> content		1998856	0					
ANR	2000209	CastExpression	( char * ) attr -> children -> content		1998856	0					
ANR	2000210	CastTarget	char *		1998856	0					
ANR	2000211	PtrMemberAccess	attr -> children -> content		1998856	1					
ANR	2000212	PtrMemberAccess	attr -> children		1998856	0					
ANR	2000213	Identifier	attr		1998856	0					
ANR	2000214	Identifier	children		1998856	1					
ANR	2000215	Identifier	content		1998856	1					
ANR	2000216	Argument	"""0"""		1998856	1					
ANR	2000217	PrimaryExpression	"""0"""		1998856	0					
ANR	2000218	PrimaryExpression	0		1998856	1					
ANR	2000219	EqualityExpression	"strcmp ( ( char * ) attr -> children -> content , ""false"" ) == 0"		1998856	1		==			
ANR	2000220	CallExpression	"strcmp ( ( char * ) attr -> children -> content , ""false"" )"		1998856	0					
ANR	2000221	Callee	strcmp		1998856	0					
ANR	2000222	Identifier	strcmp		1998856	0					
ANR	2000223	ArgumentList	( char * ) attr -> children -> content		1998856	1					
ANR	2000224	Argument	( char * ) attr -> children -> content		1998856	0					
ANR	2000225	CastExpression	( char * ) attr -> children -> content		1998856	0					
ANR	2000226	CastTarget	char *		1998856	0					
ANR	2000227	PtrMemberAccess	attr -> children -> content		1998856	1					
ANR	2000228	PtrMemberAccess	attr -> children		1998856	0					
ANR	2000229	Identifier	attr		1998856	0					
ANR	2000230	Identifier	children		1998856	1					
ANR	2000231	Identifier	content		1998856	1					
ANR	2000232	Argument	"""false"""		1998856	1					
ANR	2000233	PrimaryExpression	"""false"""		1998856	0					
ANR	2000234	PrimaryExpression	0		1998856	1					
ANR	2000235	CompoundStatement		192:69:7050:7050	1998856	1					
ANR	2000236	ExpressionStatement	mustUnderstand = 0	3647:6:121754:121772	1998856	0	True				
ANR	2000237	AssignmentExpression	mustUnderstand = 0		1998856	0		=			
ANR	2000238	Identifier	mustUnderstand		1998856	0					
ANR	2000239	PrimaryExpression	0		1998856	1					
ANR	2000240	ElseStatement	else		1998856	0					
ANR	2000241	CompoundStatement		194:12:7090:7090	1998856	0					
ANR	2000242	ExpressionStatement	"soap_server_fault ( ""Client"" , ""mustUnderstand value is not boolean"" , NULL , NULL , NULL )"	3649:6:121794:121877	1998856	0	True				
ANR	2000243	CallExpression	"soap_server_fault ( ""Client"" , ""mustUnderstand value is not boolean"" , NULL , NULL , NULL )"		1998856	0					
ANR	2000244	Callee	soap_server_fault		1998856	0					
ANR	2000245	Identifier	soap_server_fault		1998856	0					
ANR	2000246	ArgumentList	"""Client"""		1998856	1					
ANR	2000247	Argument	"""Client"""		1998856	0					
ANR	2000248	PrimaryExpression	"""Client"""		1998856	0					
ANR	2000249	Argument	"""mustUnderstand value is not boolean"""		1998856	1					
ANR	2000250	PrimaryExpression	"""mustUnderstand value is not boolean"""		1998856	0					
ANR	2000251	Argument	NULL		1998856	2					
ANR	2000252	Identifier	NULL		1998856	0					
ANR	2000253	Argument	NULL		1998856	3					
ANR	2000254	Identifier	NULL		1998856	0					
ANR	2000255	Argument	NULL		1998856	4					
ANR	2000256	Identifier	NULL		1998856	0					
ANR	2000257	ExpressionStatement	h = emalloc ( sizeof ( soapHeader ) )	3652:4:121896:121927	1998856	5	True				
ANR	2000258	AssignmentExpression	h = emalloc ( sizeof ( soapHeader ) )		1998856	0		=			
ANR	2000259	Identifier	h		1998856	0					
ANR	2000260	CallExpression	emalloc ( sizeof ( soapHeader ) )		1998856	1					
ANR	2000261	Callee	emalloc		1998856	0					
ANR	2000262	Identifier	emalloc		1998856	0					
ANR	2000263	ArgumentList	sizeof ( soapHeader )		1998856	1					
ANR	2000264	Argument	sizeof ( soapHeader )		1998856	0					
ANR	2000265	SizeofExpression	sizeof ( soapHeader )		1998856	0					
ANR	2000266	Sizeof	sizeof		1998856	0					
ANR	2000267	SizeofOperand	soapHeader		1998856	1					
ANR	2000268	ExpressionStatement	"memset ( h , 0 , sizeof ( soapHeader ) )"	3653:4:121933:121965	1998856	6	True				
ANR	2000269	CallExpression	"memset ( h , 0 , sizeof ( soapHeader ) )"		1998856	0					
ANR	2000270	Callee	memset		1998856	0					
ANR	2000271	Identifier	memset		1998856	0					
ANR	2000272	ArgumentList	h		1998856	1					
ANR	2000273	Argument	h		1998856	0					
ANR	2000274	Identifier	h		1998856	0					
ANR	2000275	Argument	0		1998856	1					
ANR	2000276	PrimaryExpression	0		1998856	0					
ANR	2000277	Argument	sizeof ( soapHeader )		1998856	2					
ANR	2000278	SizeofExpression	sizeof ( soapHeader )		1998856	0					
ANR	2000279	Sizeof	sizeof		1998856	0					
ANR	2000280	SizeofOperand	soapHeader		1998856	1					
ANR	2000281	ExpressionStatement	h -> mustUnderstand = mustUnderstand	3654:4:121971:122005	1998856	7	True				
ANR	2000282	AssignmentExpression	h -> mustUnderstand = mustUnderstand		1998856	0		=			
ANR	2000283	PtrMemberAccess	h -> mustUnderstand		1998856	0					
ANR	2000284	Identifier	h		1998856	0					
ANR	2000285	Identifier	mustUnderstand		1998856	1					
ANR	2000286	Identifier	mustUnderstand		1998856	1					
ANR	2000287	ExpressionStatement	"h -> function = find_function ( sdl , hdr_func , & h -> function_name )"	3655:4:122011:122072	1998856	8	True				
ANR	2000288	AssignmentExpression	"h -> function = find_function ( sdl , hdr_func , & h -> function_name )"		1998856	0		=			
ANR	2000289	PtrMemberAccess	h -> function		1998856	0					
ANR	2000290	Identifier	h		1998856	0					
ANR	2000291	Identifier	function		1998856	1					
ANR	2000292	CallExpression	"find_function ( sdl , hdr_func , & h -> function_name )"		1998856	1					
ANR	2000293	Callee	find_function		1998856	0					
ANR	2000294	Identifier	find_function		1998856	0					
ANR	2000295	ArgumentList	sdl		1998856	1					
ANR	2000296	Argument	sdl		1998856	0					
ANR	2000297	Identifier	sdl		1998856	0					
ANR	2000298	Argument	hdr_func		1998856	1					
ANR	2000299	Identifier	hdr_func		1998856	0					
ANR	2000300	Argument	& h -> function_name		1998856	2					
ANR	2000301	UnaryOperationExpression	& h -> function_name		1998856	0					
ANR	2000302	UnaryOperator	&		1998856	0					
ANR	2000303	PtrMemberAccess	h -> function_name		1998856	1					
ANR	2000304	Identifier	h		1998856	0					
ANR	2000305	Identifier	function_name		1998856	1					
ANR	2000306	IfStatement	if ( ! h -> function && sdl && function && function -> binding && function -> binding -> bindingType == BINDING_SOAP )		1998856	9					
ANR	2000307	Condition	! h -> function && sdl && function && function -> binding && function -> binding -> bindingType == BINDING_SOAP	3656:8:122082:122183	1998856	0	True				
ANR	2000308	AndExpression	! h -> function && sdl && function && function -> binding && function -> binding -> bindingType == BINDING_SOAP		1998856	0		&&			
ANR	2000309	UnaryOperationExpression	! h -> function		1998856	0					
ANR	2000310	UnaryOperator	!		1998856	0					
ANR	2000311	PtrMemberAccess	h -> function		1998856	1					
ANR	2000312	Identifier	h		1998856	0					
ANR	2000313	Identifier	function		1998856	1					
ANR	2000314	AndExpression	sdl && function && function -> binding && function -> binding -> bindingType == BINDING_SOAP		1998856	1		&&			
ANR	2000315	Identifier	sdl		1998856	0					
ANR	2000316	AndExpression	function && function -> binding && function -> binding -> bindingType == BINDING_SOAP		1998856	1		&&			
ANR	2000317	Identifier	function		1998856	0					
ANR	2000318	AndExpression	function -> binding && function -> binding -> bindingType == BINDING_SOAP		1998856	1		&&			
ANR	2000319	PtrMemberAccess	function -> binding		1998856	0					
ANR	2000320	Identifier	function		1998856	0					
ANR	2000321	Identifier	binding		1998856	1					
ANR	2000322	EqualityExpression	function -> binding -> bindingType == BINDING_SOAP		1998856	1		==			
ANR	2000323	PtrMemberAccess	function -> binding -> bindingType		1998856	0					
ANR	2000324	PtrMemberAccess	function -> binding		1998856	0					
ANR	2000325	Identifier	function		1998856	0					
ANR	2000326	Identifier	binding		1998856	1					
ANR	2000327	Identifier	bindingType		1998856	1					
ANR	2000328	Identifier	BINDING_SOAP		1998856	1					
ANR	2000329	CompoundStatement		204:5:7539:7625	1998856	1					
ANR	2000330	IdentifierDeclStatement	sdlSoapBindingFunctionHeaderPtr hdr ;	3657:5:122193:122228	1998856	0	True				
ANR	2000331	IdentifierDecl	hdr		1998856	0					
ANR	2000332	IdentifierDeclType	sdlSoapBindingFunctionHeaderPtr		1998856	0					
ANR	2000333	Identifier	hdr		1998856	1					
ANR	2000334	IdentifierDeclStatement	sdlSoapBindingFunctionPtr fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes ;	3658:5:122235:122321	1998856	1	True				
ANR	2000335	IdentifierDecl	fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		1998856	0					
ANR	2000336	IdentifierDeclType	sdlSoapBindingFunctionPtr		1998856	0					
ANR	2000337	Identifier	fnb		1998856	1					
ANR	2000338	AssignmentExpression	fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		1998856	2		=			
ANR	2000339	Identifier	fnb		1998856	0					
ANR	2000340	CastExpression	( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		1998856	1					
ANR	2000341	CastTarget	sdlSoapBindingFunctionPtr		1998856	0					
ANR	2000342	PtrMemberAccess	function -> bindingAttributes		1998856	1					
ANR	2000343	Identifier	function		1998856	0					
ANR	2000344	Identifier	bindingAttributes		1998856	1					
ANR	2000345	IfStatement	if ( fnb -> input . headers )		1998856	2					
ANR	2000346	Condition	fnb -> input . headers	3659:9:122332:122349	1998856	0	True				
ANR	2000347	MemberAccess	fnb -> input . headers		1998856	0					
ANR	2000348	PtrMemberAccess	fnb -> input		1998856	0					
ANR	2000349	Identifier	fnb		1998856	0					
ANR	2000350	Identifier	input		1998856	1					
ANR	2000351	Identifier	headers		1998856	1					
ANR	2000352	CompoundStatement		206:6:7664:7683	1998856	1					
ANR	2000353	IdentifierDeclStatement	smart_str key = { 0 } ;	3660:6:122360:122379	1998856	0	True				
ANR	2000354	IdentifierDecl	key = { 0 }		1998856	0					
ANR	2000355	IdentifierDeclType	smart_str		1998856	0					
ANR	2000356	Identifier	key		1998856	1					
ANR	2000357	AssignmentExpression	key = { 0 }		1998856	2		=			
ANR	2000358	Identifier	key		1998856	0					
ANR	2000359	InitializerList	0		1998856	1					
ANR	2000360	PrimaryExpression	0		1998856	0					
ANR	2000361	IfStatement	if ( hdr_func -> ns )		1998856	1					
ANR	2000362	Condition	hdr_func -> ns	3662:10:122392:122403	1998856	0	True				
ANR	2000363	PtrMemberAccess	hdr_func -> ns		1998856	0					
ANR	2000364	Identifier	hdr_func		1998856	0					
ANR	2000365	Identifier	ns		1998856	1					
ANR	2000366	CompoundStatement		208:24:7710:7710	1998856	1					
ANR	2000367	ExpressionStatement	"smart_str_appends ( & key , ( char * ) hdr_func -> ns -> href )"	3663:7:122415:122465	1998856	0	True				
ANR	2000368	CallExpression	"smart_str_appends ( & key , ( char * ) hdr_func -> ns -> href )"		1998856	0					
ANR	2000369	Callee	smart_str_appends		1998856	0					
ANR	2000370	Identifier	smart_str_appends		1998856	0					
ANR	2000371	ArgumentList	& key		1998856	1					
ANR	2000372	Argument	& key		1998856	0					
ANR	2000373	UnaryOperationExpression	& key		1998856	0					
ANR	2000374	UnaryOperator	&		1998856	0					
ANR	2000375	Identifier	key		1998856	1					
ANR	2000376	Argument	( char * ) hdr_func -> ns -> href		1998856	1					
ANR	2000377	CastExpression	( char * ) hdr_func -> ns -> href		1998856	0					
ANR	2000378	CastTarget	char *		1998856	0					
ANR	2000379	PtrMemberAccess	hdr_func -> ns -> href		1998856	1					
ANR	2000380	PtrMemberAccess	hdr_func -> ns		1998856	0					
ANR	2000381	Identifier	hdr_func		1998856	0					
ANR	2000382	Identifier	ns		1998856	1					
ANR	2000383	Identifier	href		1998856	1					
ANR	2000384	ExpressionStatement	"smart_str_appendc ( & key , ':' )"	3664:7:122474:122502	1998856	1	True				
ANR	2000385	CallExpression	"smart_str_appendc ( & key , ':' )"		1998856	0					
ANR	2000386	Callee	smart_str_appendc		1998856	0					
ANR	2000387	Identifier	smart_str_appendc		1998856	0					
ANR	2000388	ArgumentList	& key		1998856	1					
ANR	2000389	Argument	& key		1998856	0					
ANR	2000390	UnaryOperationExpression	& key		1998856	0					
ANR	2000391	UnaryOperator	&		1998856	0					
ANR	2000392	Identifier	key		1998856	1					
ANR	2000393	Argument	':'		1998856	1					
ANR	2000394	PrimaryExpression	':'		1998856	0					
ANR	2000395	ExpressionStatement	"smart_str_appendl ( & key , Z_STRVAL ( h -> function_name ) , Z_STRLEN ( h -> function_name ) )"	3666:6:122518:122597	1998856	2	True				
ANR	2000396	CallExpression	"smart_str_appendl ( & key , Z_STRVAL ( h -> function_name ) , Z_STRLEN ( h -> function_name ) )"		1998856	0					
ANR	2000397	Callee	smart_str_appendl		1998856	0					
ANR	2000398	Identifier	smart_str_appendl		1998856	0					
ANR	2000399	ArgumentList	& key		1998856	1					
ANR	2000400	Argument	& key		1998856	0					
ANR	2000401	UnaryOperationExpression	& key		1998856	0					
ANR	2000402	UnaryOperator	&		1998856	0					
ANR	2000403	Identifier	key		1998856	1					
ANR	2000404	Argument	Z_STRVAL ( h -> function_name )		1998856	1					
ANR	2000405	CallExpression	Z_STRVAL ( h -> function_name )		1998856	0					
ANR	2000406	Callee	Z_STRVAL		1998856	0					
ANR	2000407	Identifier	Z_STRVAL		1998856	0					
ANR	2000408	ArgumentList	h -> function_name		1998856	1					
ANR	2000409	Argument	h -> function_name		1998856	0					
ANR	2000410	PtrMemberAccess	h -> function_name		1998856	0					
ANR	2000411	Identifier	h		1998856	0					
ANR	2000412	Identifier	function_name		1998856	1					
ANR	2000413	Argument	Z_STRLEN ( h -> function_name )		1998856	2					
ANR	2000414	CallExpression	Z_STRLEN ( h -> function_name )		1998856	0					
ANR	2000415	Callee	Z_STRLEN		1998856	0					
ANR	2000416	Identifier	Z_STRLEN		1998856	0					
ANR	2000417	ArgumentList	h -> function_name		1998856	1					
ANR	2000418	Argument	h -> function_name		1998856	0					
ANR	2000419	PtrMemberAccess	h -> function_name		1998856	0					
ANR	2000420	Identifier	h		1998856	0					
ANR	2000421	Identifier	function_name		1998856	1					
ANR	2000422	ExpressionStatement	smart_str_0 ( & key )	3667:6:122605:122622	1998856	3	True				
ANR	2000423	CallExpression	smart_str_0 ( & key )		1998856	0					
ANR	2000424	Callee	smart_str_0		1998856	0					
ANR	2000425	Identifier	smart_str_0		1998856	0					
ANR	2000426	ArgumentList	& key		1998856	1					
ANR	2000427	Argument	& key		1998856	0					
ANR	2000428	UnaryOperationExpression	& key		1998856	0					
ANR	2000429	UnaryOperator	&		1998856	0					
ANR	2000430	Identifier	key		1998856	1					
ANR	2000431	IfStatement	"if ( ( hdr = zend_hash_find_ptr ( fnb -> input . headers , key . s ) ) != NULL )"		1998856	4					
ANR	2000432	Condition	"( hdr = zend_hash_find_ptr ( fnb -> input . headers , key . s ) ) != NULL"	3668:10:122634:122694	1998856	0	True				
ANR	2000433	EqualityExpression	"( hdr = zend_hash_find_ptr ( fnb -> input . headers , key . s ) ) != NULL"		1998856	0		!=			
ANR	2000434	AssignmentExpression	"hdr = zend_hash_find_ptr ( fnb -> input . headers , key . s )"		1998856	0		=			
ANR	2000435	Identifier	hdr		1998856	0					
ANR	2000436	CallExpression	"zend_hash_find_ptr ( fnb -> input . headers , key . s )"		1998856	1					
ANR	2000437	Callee	zend_hash_find_ptr		1998856	0					
ANR	2000438	Identifier	zend_hash_find_ptr		1998856	0					
ANR	2000439	ArgumentList	fnb -> input . headers		1998856	1					
ANR	2000440	Argument	fnb -> input . headers		1998856	0					
ANR	2000441	MemberAccess	fnb -> input . headers		1998856	0					
ANR	2000442	PtrMemberAccess	fnb -> input		1998856	0					
ANR	2000443	Identifier	fnb		1998856	0					
ANR	2000444	Identifier	input		1998856	1					
ANR	2000445	Identifier	headers		1998856	1					
ANR	2000446	Argument	key . s		1998856	1					
ANR	2000447	MemberAccess	key . s		1998856	0					
ANR	2000448	Identifier	key		1998856	0					
ANR	2000449	Identifier	s		1998856	1					
ANR	2000450	Identifier	NULL		1998856	1					
ANR	2000451	CompoundStatement		214:73:8001:8001	1998856	1					
ANR	2000452	ExpressionStatement	h -> hdr = hdr	3669:7:122706:122718	1998856	0	True				
ANR	2000453	AssignmentExpression	h -> hdr = hdr		1998856	0		=			
ANR	2000454	PtrMemberAccess	h -> hdr		1998856	0					
ANR	2000455	Identifier	h		1998856	0					
ANR	2000456	Identifier	hdr		1998856	1					
ANR	2000457	Identifier	hdr		1998856	1					
ANR	2000458	ExpressionStatement	smart_str_free ( & key )	3671:6:122734:122754	1998856	5	True				
ANR	2000459	CallExpression	smart_str_free ( & key )		1998856	0					
ANR	2000460	Callee	smart_str_free		1998856	0					
ANR	2000461	Identifier	smart_str_free		1998856	0					
ANR	2000462	ArgumentList	& key		1998856	1					
ANR	2000463	Argument	& key		1998856	0					
ANR	2000464	UnaryOperationExpression	& key		1998856	0					
ANR	2000465	UnaryOperator	&		1998856	0					
ANR	2000466	Identifier	key		1998856	1					
ANR	2000467	IfStatement	if ( h -> hdr )		1998856	10					
ANR	2000468	Condition	h -> hdr	3674:8:122777:122782	1998856	0	True				
ANR	2000469	PtrMemberAccess	h -> hdr		1998856	0					
ANR	2000470	Identifier	h		1998856	0					
ANR	2000471	Identifier	hdr		1998856	1					
ANR	2000472	CompoundStatement		220:16:8089:8089	1998856	1					
ANR	2000473	ExpressionStatement	h -> num_params = 1	3675:5:122792:122809	1998856	0	True				
ANR	2000474	AssignmentExpression	h -> num_params = 1		1998856	0		=			
ANR	2000475	PtrMemberAccess	h -> num_params		1998856	0					
ANR	2000476	Identifier	h		1998856	0					
ANR	2000477	Identifier	num_params		1998856	1					
ANR	2000478	PrimaryExpression	1		1998856	1					
ANR	2000479	ExpressionStatement	h -> parameters = emalloc ( sizeof ( zval ) )	3676:5:122816:122853	1998856	1	True				
ANR	2000480	AssignmentExpression	h -> parameters = emalloc ( sizeof ( zval ) )		1998856	0		=			
ANR	2000481	PtrMemberAccess	h -> parameters		1998856	0					
ANR	2000482	Identifier	h		1998856	0					
ANR	2000483	Identifier	parameters		1998856	1					
ANR	2000484	CallExpression	emalloc ( sizeof ( zval ) )		1998856	1					
ANR	2000485	Callee	emalloc		1998856	0					
ANR	2000486	Identifier	emalloc		1998856	0					
ANR	2000487	ArgumentList	sizeof ( zval )		1998856	1					
ANR	2000488	Argument	sizeof ( zval )		1998856	0					
ANR	2000489	SizeofExpression	sizeof ( zval )		1998856	0					
ANR	2000490	Sizeof	sizeof		1998856	0					
ANR	2000491	SizeofOperand	zval		1998856	1					
ANR	2000492	ExpressionStatement	"master_to_zval ( & h -> parameters [ 0 ] , h -> hdr -> encode , hdr_func )"	3677:5:122860:122919	1998856	2	True				
ANR	2000493	CallExpression	"master_to_zval ( & h -> parameters [ 0 ] , h -> hdr -> encode , hdr_func )"		1998856	0					
ANR	2000494	Callee	master_to_zval		1998856	0					
ANR	2000495	Identifier	master_to_zval		1998856	0					
ANR	2000496	ArgumentList	& h -> parameters [ 0 ]		1998856	1					
ANR	2000497	Argument	& h -> parameters [ 0 ]		1998856	0					
ANR	2000498	UnaryOperationExpression	& h -> parameters [ 0 ]		1998856	0					
ANR	2000499	UnaryOperator	&		1998856	0					
ANR	2000500	ArrayIndexing	h -> parameters [ 0 ]		1998856	1					
ANR	2000501	PtrMemberAccess	h -> parameters		1998856	0					
ANR	2000502	Identifier	h		1998856	0					
ANR	2000503	Identifier	parameters		1998856	1					
ANR	2000504	PrimaryExpression	0		1998856	1					
ANR	2000505	Argument	h -> hdr -> encode		1998856	1					
ANR	2000506	PtrMemberAccess	h -> hdr -> encode		1998856	0					
ANR	2000507	PtrMemberAccess	h -> hdr		1998856	0					
ANR	2000508	Identifier	h		1998856	0					
ANR	2000509	Identifier	hdr		1998856	1					
ANR	2000510	Identifier	encode		1998856	1					
ANR	2000511	Argument	hdr_func		1998856	2					
ANR	2000512	Identifier	hdr_func		1998856	0					
ANR	2000513	ElseStatement	else		1998856	0					
ANR	2000514	CompoundStatement		224:11:8236:8236	1998856	0					
ANR	2000515	IfStatement	if ( h -> function && h -> function -> binding && h -> function -> binding -> bindingType == BINDING_SOAP )		1998856	0					
ANR	2000516	Condition	h -> function && h -> function -> binding && h -> function -> binding -> bindingType == BINDING_SOAP	3679:9:122943:123030	1998856	0	True				
ANR	2000517	AndExpression	h -> function && h -> function -> binding && h -> function -> binding -> bindingType == BINDING_SOAP		1998856	0		&&			
ANR	2000518	PtrMemberAccess	h -> function		1998856	0					
ANR	2000519	Identifier	h		1998856	0					
ANR	2000520	Identifier	function		1998856	1					
ANR	2000521	AndExpression	h -> function -> binding && h -> function -> binding -> bindingType == BINDING_SOAP		1998856	1		&&			
ANR	2000522	PtrMemberAccess	h -> function -> binding		1998856	0					
ANR	2000523	PtrMemberAccess	h -> function		1998856	0					
ANR	2000524	Identifier	h		1998856	0					
ANR	2000525	Identifier	function		1998856	1					
ANR	2000526	Identifier	binding		1998856	1					
ANR	2000527	EqualityExpression	h -> function -> binding -> bindingType == BINDING_SOAP		1998856	1		==			
ANR	2000528	PtrMemberAccess	h -> function -> binding -> bindingType		1998856	0					
ANR	2000529	PtrMemberAccess	h -> function -> binding		1998856	0					
ANR	2000530	PtrMemberAccess	h -> function		1998856	0					
ANR	2000531	Identifier	h		1998856	0					
ANR	2000532	Identifier	function		1998856	1					
ANR	2000533	Identifier	binding		1998856	1					
ANR	2000534	Identifier	bindingType		1998856	1					
ANR	2000535	Identifier	BINDING_SOAP		1998856	1					
ANR	2000536	CompoundStatement		226:6:8345:8434	1998856	1					
ANR	2000537	IdentifierDeclStatement	sdlSoapBindingFunctionPtr fnb = ( sdlSoapBindingFunctionPtr ) h -> function -> bindingAttributes ;	3680:6:123041:123130	1998856	0	True				
ANR	2000538	IdentifierDecl	fnb = ( sdlSoapBindingFunctionPtr ) h -> function -> bindingAttributes		1998856	0					
ANR	2000539	IdentifierDeclType	sdlSoapBindingFunctionPtr		1998856	0					
ANR	2000540	Identifier	fnb		1998856	1					
ANR	2000541	AssignmentExpression	fnb = ( sdlSoapBindingFunctionPtr ) h -> function -> bindingAttributes		1998856	2		=			
ANR	2000542	Identifier	fnb		1998856	0					
ANR	2000543	CastExpression	( sdlSoapBindingFunctionPtr ) h -> function -> bindingAttributes		1998856	1					
ANR	2000544	CastTarget	sdlSoapBindingFunctionPtr		1998856	0					
ANR	2000545	PtrMemberAccess	h -> function -> bindingAttributes		1998856	1					
ANR	2000546	PtrMemberAccess	h -> function		1998856	0					
ANR	2000547	Identifier	h		1998856	0					
ANR	2000548	Identifier	function		1998856	1					
ANR	2000549	Identifier	bindingAttributes		1998856	1					
ANR	2000550	IfStatement	if ( fnb -> style == SOAP_RPC )		1998856	1					
ANR	2000551	Condition	fnb -> style == SOAP_RPC	3681:10:123142:123163	1998856	0	True				
ANR	2000552	EqualityExpression	fnb -> style == SOAP_RPC		1998856	0		==			
ANR	2000553	PtrMemberAccess	fnb -> style		1998856	0					
ANR	2000554	Identifier	fnb		1998856	0					
ANR	2000555	Identifier	style		1998856	1					
ANR	2000556	Identifier	SOAP_RPC		1998856	1					
ANR	2000557	CompoundStatement		227:34:8470:8470	1998856	1					
ANR	2000558	ExpressionStatement	hdr_func = hdr_func -> children	3682:7:123175:123204	1998856	0	True				
ANR	2000559	AssignmentExpression	hdr_func = hdr_func -> children		1998856	0		=			
ANR	2000560	Identifier	hdr_func		1998856	0					
ANR	2000561	PtrMemberAccess	hdr_func -> children		1998856	1					
ANR	2000562	Identifier	hdr_func		1998856	0					
ANR	2000563	Identifier	children		1998856	1					
ANR	2000564	ExpressionStatement	"deserialize_parameters ( hdr_func , h -> function , & h -> num_params , & h -> parameters )"	3685:5:123226:123303	1998856	1	True				
ANR	2000565	CallExpression	"deserialize_parameters ( hdr_func , h -> function , & h -> num_params , & h -> parameters )"		1998856	0					
ANR	2000566	Callee	deserialize_parameters		1998856	0					
ANR	2000567	Identifier	deserialize_parameters		1998856	0					
ANR	2000568	ArgumentList	hdr_func		1998856	1					
ANR	2000569	Argument	hdr_func		1998856	0					
ANR	2000570	Identifier	hdr_func		1998856	0					
ANR	2000571	Argument	h -> function		1998856	1					
ANR	2000572	PtrMemberAccess	h -> function		1998856	0					
ANR	2000573	Identifier	h		1998856	0					
ANR	2000574	Identifier	function		1998856	1					
ANR	2000575	Argument	& h -> num_params		1998856	2					
ANR	2000576	UnaryOperationExpression	& h -> num_params		1998856	0					
ANR	2000577	UnaryOperator	&		1998856	0					
ANR	2000578	PtrMemberAccess	h -> num_params		1998856	1					
ANR	2000579	Identifier	h		1998856	0					
ANR	2000580	Identifier	num_params		1998856	1					
ANR	2000581	Argument	& h -> parameters		1998856	3					
ANR	2000582	UnaryOperationExpression	& h -> parameters		1998856	0					
ANR	2000583	UnaryOperator	&		1998856	0					
ANR	2000584	PtrMemberAccess	h -> parameters		1998856	1					
ANR	2000585	Identifier	h		1998856	0					
ANR	2000586	Identifier	parameters		1998856	1					
ANR	2000587	ExpressionStatement	ZVAL_NULL ( & h -> retval )	3687:4:123315:123336	1998856	11	True				
ANR	2000588	CallExpression	ZVAL_NULL ( & h -> retval )		1998856	0					
ANR	2000589	Callee	ZVAL_NULL		1998856	0					
ANR	2000590	Identifier	ZVAL_NULL		1998856	0					
ANR	2000591	ArgumentList	& h -> retval		1998856	1					
ANR	2000592	Argument	& h -> retval		1998856	0					
ANR	2000593	UnaryOperationExpression	& h -> retval		1998856	0					
ANR	2000594	UnaryOperator	&		1998856	0					
ANR	2000595	PtrMemberAccess	h -> retval		1998856	1					
ANR	2000596	Identifier	h		1998856	0					
ANR	2000597	Identifier	retval		1998856	1					
ANR	2000598	IfStatement	if ( last == NULL )		1998856	12					
ANR	2000599	Condition	last == NULL	3688:8:123346:123357	1998856	0	True				
ANR	2000600	EqualityExpression	last == NULL		1998856	0		==			
ANR	2000601	Identifier	last		1998856	0					
ANR	2000602	Identifier	NULL		1998856	1					
ANR	2000603	CompoundStatement		234:22:8664:8664	1998856	1					
ANR	2000604	ExpressionStatement	* headers = h	3689:5:123367:123379	1998856	0	True				
ANR	2000605	AssignmentExpression	* headers = h		1998856	0		=			
ANR	2000606	UnaryOperationExpression	* headers		1998856	0					
ANR	2000607	UnaryOperator	*		1998856	0					
ANR	2000608	Identifier	headers		1998856	1					
ANR	2000609	Identifier	h		1998856	1					
ANR	2000610	ElseStatement	else		1998856	0					
ANR	2000611	CompoundStatement		236:11:8696:8696	1998856	0					
ANR	2000612	ExpressionStatement	last -> next = h	3691:5:123399:123413	1998856	0	True				
ANR	2000613	AssignmentExpression	last -> next = h		1998856	0		=			
ANR	2000614	PtrMemberAccess	last -> next		1998856	0					
ANR	2000615	Identifier	last		1998856	0					
ANR	2000616	Identifier	next		1998856	1					
ANR	2000617	Identifier	h		1998856	1					
ANR	2000618	ExpressionStatement	last = h	3693:4:123425:123433	1998856	13	True				
ANR	2000619	AssignmentExpression	last = h		1998856	0		=			
ANR	2000620	Identifier	last		1998856	0					
ANR	2000621	Identifier	h		1998856	1					
ANR	2000622	Label	ignore_header :	3695:0:123440:123453	1998856	1	True				
ANR	2000623	Identifier	ignore_header		1998856	0					
ANR	2000624	ExpressionStatement	trav = trav -> next	3696:3:123458:123475	1998856	2	True				
ANR	2000625	AssignmentExpression	trav = trav -> next		1998856	0		=			
ANR	2000626	Identifier	trav		1998856	0					
ANR	2000627	PtrMemberAccess	trav -> next		1998856	1					
ANR	2000628	Identifier	trav		1998856	0					
ANR	2000629	Identifier	next		1998856	1					
ANR	2000630	IfStatement	if ( function && function -> binding && function -> binding -> bindingType == BINDING_SOAP )		1998856	29					
ANR	2000631	Condition	function && function -> binding && function -> binding -> bindingType == BINDING_SOAP	3700:5:123490:123568	1998856	0	True				
ANR	2000632	AndExpression	function && function -> binding && function -> binding -> bindingType == BINDING_SOAP		1998856	0		&&			
ANR	2000633	Identifier	function		1998856	0					
ANR	2000634	AndExpression	function -> binding && function -> binding -> bindingType == BINDING_SOAP		1998856	1		&&			
ANR	2000635	PtrMemberAccess	function -> binding		1998856	0					
ANR	2000636	Identifier	function		1998856	0					
ANR	2000637	Identifier	binding		1998856	1					
ANR	2000638	EqualityExpression	function -> binding -> bindingType == BINDING_SOAP		1998856	1		==			
ANR	2000639	PtrMemberAccess	function -> binding -> bindingType		1998856	0					
ANR	2000640	PtrMemberAccess	function -> binding		1998856	0					
ANR	2000641	Identifier	function		1998856	0					
ANR	2000642	Identifier	binding		1998856	1					
ANR	2000643	Identifier	bindingType		1998856	1					
ANR	2000644	Identifier	BINDING_SOAP		1998856	1					
ANR	2000645	CompoundStatement		247:2:8879:8965	1998856	1					
ANR	2000646	IdentifierDeclStatement	sdlSoapBindingFunctionPtr fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes ;	3701:2:123575:123661	1998856	0	True				
ANR	2000647	IdentifierDecl	fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		1998856	0					
ANR	2000648	IdentifierDeclType	sdlSoapBindingFunctionPtr		1998856	0					
ANR	2000649	Identifier	fnb		1998856	1					
ANR	2000650	AssignmentExpression	fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		1998856	2		=			
ANR	2000651	Identifier	fnb		1998856	0					
ANR	2000652	CastExpression	( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		1998856	1					
ANR	2000653	CastTarget	sdlSoapBindingFunctionPtr		1998856	0					
ANR	2000654	PtrMemberAccess	function -> bindingAttributes		1998856	1					
ANR	2000655	Identifier	function		1998856	0					
ANR	2000656	Identifier	bindingAttributes		1998856	1					
ANR	2000657	IfStatement	if ( fnb -> style == SOAP_RPC )		1998856	1					
ANR	2000658	Condition	fnb -> style == SOAP_RPC	3702:6:123669:123690	1998856	0	True				
ANR	2000659	EqualityExpression	fnb -> style == SOAP_RPC		1998856	0		==			
ANR	2000660	PtrMemberAccess	fnb -> style		1998856	0					
ANR	2000661	Identifier	fnb		1998856	0					
ANR	2000662	Identifier	style		1998856	1					
ANR	2000663	Identifier	SOAP_RPC		1998856	1					
ANR	2000664	CompoundStatement		248:30:8997:8997	1998856	1					
ANR	2000665	ExpressionStatement	func = func -> children	3703:3:123698:123719	1998856	0	True				
ANR	2000666	AssignmentExpression	func = func -> children		1998856	0		=			
ANR	2000667	Identifier	func		1998856	0					
ANR	2000668	PtrMemberAccess	func -> children		1998856	1					
ANR	2000669	Identifier	func		1998856	0					
ANR	2000670	Identifier	children		1998856	1					
ANR	2000671	ElseStatement	else		1998856	0					
ANR	2000672	CompoundStatement		251:8:9037:9037	1998856	0					
ANR	2000673	ExpressionStatement	func = func -> children	3706:2:123737:123758	1998856	0	True				
ANR	2000674	AssignmentExpression	func = func -> children		1998856	0		=			
ANR	2000675	Identifier	func		1998856	0					
ANR	2000676	PtrMemberAccess	func -> children		1998856	1					
ANR	2000677	Identifier	func		1998856	0					
ANR	2000678	Identifier	children		1998856	1					
ANR	2000679	ExpressionStatement	"deserialize_parameters ( func , function , num_params , parameters )"	3708:1:123764:123826	1998856	30	True				
ANR	2000680	CallExpression	"deserialize_parameters ( func , function , num_params , parameters )"		1998856	0					
ANR	2000681	Callee	deserialize_parameters		1998856	0					
ANR	2000682	Identifier	deserialize_parameters		1998856	0					
ANR	2000683	ArgumentList	func		1998856	1					
ANR	2000684	Argument	func		1998856	0					
ANR	2000685	Identifier	func		1998856	0					
ANR	2000686	Argument	function		1998856	1					
ANR	2000687	Identifier	function		1998856	0					
ANR	2000688	Argument	num_params		1998856	2					
ANR	2000689	Identifier	num_params		1998856	0					
ANR	2000690	Argument	parameters		1998856	3					
ANR	2000691	Identifier	parameters		1998856	0					
ANR	2000692	ExpressionStatement	encode_finish ( )	3710:1:123830:123845	1998856	31	True				
ANR	2000693	CallExpression	encode_finish ( )		1998856	0					
ANR	2000694	Callee	encode_finish		1998856	0					
ANR	2000695	Identifier	encode_finish		1998856	0					
ANR	2000696	ArgumentList			1998856	1					
ANR	2000697	ReturnStatement	return function ;	3712:1:123849:123864	1998856	32	True				
ANR	2000698	Identifier	function		1998856	0					
ANR	2000699	ReturnType	static sdlFunctionPtr		1998856	1					
ANR	2000700	Identifier	deserialize_function_call		1998856	2					
ANR	2000701	ParameterList	"sdlPtr sdl , xmlDocPtr request , char * actor , zval * function_name , int * num_params , zval * * parameters , int * version , soapHeader * * headers"		1998856	3					
ANR	2000702	Parameter	sdlPtr sdl	3454:48:114558:114567	1998856	0	True				
ANR	2000703	ParameterType	sdlPtr		1998856	0					
ANR	2000704	Identifier	sdl		1998856	1					
ANR	2000705	Parameter	xmlDocPtr request	3454:60:114570:114586	1998856	1	True				
ANR	2000706	ParameterType	xmlDocPtr		1998856	0					
ANR	2000707	Identifier	request		1998856	1					
ANR	2000708	Parameter	char * actor	3454:79:114589:114599	1998856	2	True				
ANR	2000709	ParameterType	char *		1998856	0					
ANR	2000710	Identifier	actor		1998856	1					
ANR	2000711	Parameter	zval * function_name	3454:92:114602:114620	1998856	3	True				
ANR	2000712	ParameterType	zval *		1998856	0					
ANR	2000713	Identifier	function_name		1998856	1					
ANR	2000714	Parameter	int * num_params	3454:113:114623:114637	1998856	4	True				
ANR	2000715	ParameterType	int *		1998856	0					
ANR	2000716	Identifier	num_params		1998856	1					
ANR	2000717	Parameter	zval * * parameters	3454:130:114640:114656	1998856	5	True				
ANR	2000718	ParameterType	zval * *		1998856	0					
ANR	2000719	Identifier	parameters		1998856	1					
ANR	2000720	Parameter	int * version	3454:149:114659:114670	1998856	6	True				
ANR	2000721	ParameterType	int *		1998856	0					
ANR	2000722	Identifier	version		1998856	1					
ANR	2000723	Parameter	soapHeader * * headers	3454:163:114673:114692	1998856	7	True				
ANR	2000724	ParameterType	soapHeader * *		1998856	0					
ANR	2000725	Identifier	headers		1998856	1					
ANR	2000726	CFGEntryNode	ENTRY		1998856		True				
ANR	2000727	CFGExitNode	EXIT		1998856		True				
ANR	2000728	Symbol	trav -> next		1998856						
ANR	2000729	Symbol	trav		1998856						
ANR	2000730	Symbol	h -> mustUnderstand		1998856						
ANR	2000731	Symbol	hdr_func -> children		1998856						
ANR	2000732	Symbol	env -> properties		1998856						
ANR	2000733	Symbol	& h -> retval		1998856						
ANR	2000734	Symbol	soap_version		1998856						
ANR	2000735	Symbol	function -> binding		1998856						
ANR	2000736	Symbol	SOAP_1_2_ACTOR_NEXT		1998856						
ANR	2000737	Symbol	body -> children		1998856						
ANR	2000738	Symbol	find_function		1998856						
ANR	2000739	Symbol	h -> num_params		1998856						
ANR	2000740	Symbol	h -> function -> bindingAttributes		1998856						
ANR	2000741	Symbol	fnb -> input . headers		1998856						
ANR	2000742	Symbol	version		1998856						
ANR	2000743	Symbol	SOAP_1_2_ENV_NAMESPACE		1998856						
ANR	2000744	Symbol	hdr_func		1998856						
ANR	2000745	Symbol	request -> children		1998856						
ANR	2000746	Symbol	attr -> ns		1998856						
ANR	2000747	Symbol	SOAP_1_2_ACTOR_UNLIMATERECEIVER		1998856						
ANR	2000748	Symbol	func -> children		1998856						
ANR	2000749	Symbol	* request		1998856						
ANR	2000750	Symbol	env -> children		1998856						
ANR	2000751	Symbol	* * * h		1998856						
ANR	2000752	Symbol	sdl		1998856						
ANR	2000753	Symbol	h -> hdr		1998856						
ANR	2000754	Symbol	* h -> function		1998856						
ANR	2000755	Symbol	get_doc_function		1998856						
ANR	2000756	Symbol	& key		1998856						
ANR	2000757	Symbol	* body		1998856						
ANR	2000758	Symbol	trav -> type		1998856						
ANR	2000759	Symbol	* attr -> children		1998856						
ANR	2000760	Symbol	& h -> parameters		1998856						
ANR	2000761	Symbol	SOAP_1_1_ACTOR_NEXT		1998856						
ANR	2000762	Symbol	BINDING_SOAP		1998856						
ANR	2000763	Symbol	* hdr_func		1998856						
ANR	2000764	Symbol	* headers		1998856						
ANR	2000765	Symbol	hdr_func -> properties		1998856						
ANR	2000766	Symbol	key		1998856						
ANR	2000767	Symbol	body -> properties		1998856						
ANR	2000768	Symbol	* * h -> function		1998856						
ANR	2000769	Symbol	* * function		1998856						
ANR	2000770	Symbol	SOAP_1_1		1998856						
ANR	2000771	Symbol	* func		1998856						
ANR	2000772	Symbol	attr -> children -> content		1998856						
ANR	2000773	Symbol	h		1998856						
ANR	2000774	Symbol	* last		1998856						
ANR	2000775	Symbol	actor		1998856						
ANR	2000776	Symbol	E_ERROR		1998856						
ANR	2000777	Symbol	SOAP_1_2		1998856						
ANR	2000778	Symbol	fnb -> style		1998856						
ANR	2000779	Symbol	h -> function_name		1998856						
ANR	2000780	Symbol	mustUnderstand		1998856						
ANR	2000781	Symbol	XML_ELEMENT_NODE		1998856						
ANR	2000782	Symbol	last -> next		1998856						
ANR	2000783	Symbol	attr_is_equal_ex		1998856						
ANR	2000784	Symbol	* * attr		1998856						
ANR	2000785	Symbol	* head		1998856						
ANR	2000786	Symbol	hdr_func -> ns -> href		1998856						
ANR	2000787	Symbol	func -> name		1998856						
ANR	2000788	Symbol	body		1998856						
ANR	2000789	Symbol	key . s		1998856						
ANR	2000790	Symbol	num_params		1998856						
ANR	2000791	Symbol	function		1998856						
ANR	2000792	Symbol	envelope_ns		1998856						
ANR	2000793	Symbol	fnb		1998856						
ANR	2000794	Symbol	zend_hash_find_ptr		1998856						
ANR	2000795	Symbol	SOAP_RPC		1998856						
ANR	2000796	Symbol	strcmp		1998856						
ANR	2000797	Symbol	NULL		1998856						
ANR	2000798	Symbol	* * h		1998856						
ANR	2000799	Symbol	last		1998856						
ANR	2000800	Symbol	* env		1998856						
ANR	2000801	Symbol	head -> properties		1998856						
ANR	2000802	Symbol	SOAP_GLOBAL		1998856						
ANR	2000803	Symbol	h -> function -> binding -> bindingType		1998856						
ANR	2000804	Symbol	* version		1998856						
ANR	2000805	Symbol	get_attribute_ex		1998856						
ANR	2000806	Symbol	& h -> num_params		1998856						
ANR	2000807	Symbol	* attr		1998856						
ANR	2000808	Symbol	parameters		1998856						
ANR	2000809	Symbol	node_is_equal_ex		1998856						
ANR	2000810	Symbol	request		1998856						
ANR	2000811	Symbol	attr -> next		1998856						
ANR	2000812	Symbol	SOAP_1_1_ENV_NAMESPACE		1998856						
ANR	2000813	Symbol	fnb -> input		1998856						
ANR	2000814	Symbol	Z_STRLEN		1998856						
ANR	2000815	Symbol	* h -> function -> binding		1998856						
ANR	2000816	Symbol	* trav		1998856						
ANR	2000817	Symbol	head		1998856						
ANR	2000818	Symbol	emalloc		1998856						
ANR	2000819	Symbol	func -> properties		1998856						
ANR	2000820	Symbol	Z_STRVAL		1998856						
ANR	2000821	Symbol	h -> hdr -> encode		1998856						
ANR	2000822	Symbol	h -> parameters		1998856						
ANR	2000823	Symbol	attr		1998856						
ANR	2000824	Symbol	headers		1998856						
ANR	2000825	Symbol	function -> functionName		1998856						
ANR	2000826	Symbol	& h -> function_name		1998856						
ANR	2000827	Symbol	SOAP_1_1_ENC_NAMESPACE		1998856						
ANR	2000828	Symbol	h -> function		1998856						
ANR	2000829	Symbol	* function		1998856						
ANR	2000830	Symbol	function -> binding -> bindingType		1998856						
ANR	2000831	Symbol	hdr_func -> ns		1998856						
ANR	2000832	Symbol	* h -> hdr		1998856						
ANR	2000833	Symbol	* * hdr_func		1998856						
ANR	2000834	Symbol	env		1998856						
ANR	2000835	Symbol	attr -> children		1998856						
ANR	2000836	Symbol	* h		1998856						
ANR	2000837	Symbol	* hdr_func -> ns		1998856						
ANR	2000838	Symbol	func		1998856						
ANR	2000839	Symbol	function_name		1998856						
ANR	2000840	Symbol	hdr		1998856						
ANR	2000841	Symbol	h -> function -> binding		1998856						
ANR	2000842	Symbol	SOAP_1_2_ENC_NAMESPACE		1998856						
ANR	2000843	Symbol	head -> children		1998856						
ANR	2000844	Symbol	* fnb		1998856						
ANR	2000845	Symbol	* function -> binding		1998856						
ANR	2000846	Symbol	function -> bindingAttributes		1998856						
ANR	2000847	Function	set_soap_header_attributes	3715:0:123869:125332							
ANR	2000848	FunctionDef	"set_soap_header_attributes (xmlNodePtr h , HashTable * ht , int version)"		2000847	0					
ANR	2000849	CompoundStatement		3716:0:123950:125332	2000847	0					
ANR	2000850	IdentifierDeclStatement	zval * tmp ;	3717:1:123953:123962	2000847	0	True				
ANR	2000851	IdentifierDecl	* tmp		2000847	0					
ANR	2000852	IdentifierDeclType	zval *		2000847	0					
ANR	2000853	Identifier	tmp		2000847	1					
ANR	2000854	IfStatement	"if ( ( tmp = zend_hash_str_find ( ht , ""mustUnderstand"" , sizeof ( ""mustUnderstand"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_TRUE )"		2000847	1					
ANR	2000855	Condition	"( tmp = zend_hash_str_find ( ht , ""mustUnderstand"" , sizeof ( ""mustUnderstand"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_TRUE"	3719:5:123970:124086	2000847	0	True				
ANR	2000856	AndExpression	"( tmp = zend_hash_str_find ( ht , ""mustUnderstand"" , sizeof ( ""mustUnderstand"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_TRUE"		2000847	0		&&			
ANR	2000857	EqualityExpression	"( tmp = zend_hash_str_find ( ht , ""mustUnderstand"" , sizeof ( ""mustUnderstand"" ) - 1 ) ) != NULL"		2000847	0		!=			
ANR	2000858	AssignmentExpression	"tmp = zend_hash_str_find ( ht , ""mustUnderstand"" , sizeof ( ""mustUnderstand"" ) - 1 )"		2000847	0		=			
ANR	2000859	Identifier	tmp		2000847	0					
ANR	2000860	CallExpression	"zend_hash_str_find ( ht , ""mustUnderstand"" , sizeof ( ""mustUnderstand"" ) - 1 )"		2000847	1					
ANR	2000861	Callee	zend_hash_str_find		2000847	0					
ANR	2000862	Identifier	zend_hash_str_find		2000847	0					
ANR	2000863	ArgumentList	ht		2000847	1					
ANR	2000864	Argument	ht		2000847	0					
ANR	2000865	Identifier	ht		2000847	0					
ANR	2000866	Argument	"""mustUnderstand"""		2000847	1					
ANR	2000867	PrimaryExpression	"""mustUnderstand"""		2000847	0					
ANR	2000868	Argument	"sizeof ( ""mustUnderstand"" ) - 1"		2000847	2					
ANR	2000869	AdditiveExpression	"sizeof ( ""mustUnderstand"" ) - 1"		2000847	0		-			
ANR	2000870	SizeofExpression	"sizeof ( ""mustUnderstand"" )"		2000847	0					
ANR	2000871	Sizeof	sizeof		2000847	0					
ANR	2000872	PrimaryExpression	"""mustUnderstand"""		2000847	1					
ANR	2000873	PrimaryExpression	1		2000847	1					
ANR	2000874	Identifier	NULL		2000847	1					
ANR	2000875	EqualityExpression	Z_TYPE_P ( tmp ) == IS_TRUE		2000847	1		==			
ANR	2000876	CallExpression	Z_TYPE_P ( tmp )		2000847	0					
ANR	2000877	Callee	Z_TYPE_P		2000847	0					
ANR	2000878	Identifier	Z_TYPE_P		2000847	0					
ANR	2000879	ArgumentList	tmp		2000847	1					
ANR	2000880	Argument	tmp		2000847	0					
ANR	2000881	Identifier	tmp		2000847	0					
ANR	2000882	Identifier	IS_TRUE		2000847	1					
ANR	2000883	CompoundStatement		5:31:138:138	2000847	1					
ANR	2000884	IfStatement	if ( version == SOAP_1_1 )		2000847	0					
ANR	2000885	Condition	version == SOAP_1_1	3721:6:124097:124115	2000847	0	True				
ANR	2000886	EqualityExpression	version == SOAP_1_1		2000847	0		==			
ANR	2000887	Identifier	version		2000847	0					
ANR	2000888	Identifier	SOAP_1_1		2000847	1					
ANR	2000889	CompoundStatement		6:27:167:167	2000847	1					
ANR	2000890	Statement	xmlSetProp	3722:3:124123:124132	2000847	0	True				
ANR	2000891	Statement	(	3722:13:124133:124133	2000847	1	True				
ANR	2000892	Statement	h	3722:14:124134:124134	2000847	2	True				
ANR	2000893	Statement	","	3722:15:124135:124135	2000847	3	True				
ANR	2000894	Statement	BAD_CAST	3722:17:124137:124144	2000847	4	True				
ANR	2000895	Statement	(	3722:25:124145:124145	2000847	5	True				
ANR	2000896	Statement	SOAP_1_1_ENV_NS_PREFIX	3722:26:124146:124167	2000847	6	True				
ANR	2000897	Statement	""":mustUnderstand"""	3722:48:124168:124184	2000847	7	True				
ANR	2000898	Statement	)	3722:65:124185:124185	2000847	8	True				
ANR	2000899	Statement	","	3722:66:124186:124186	2000847	9	True				
ANR	2000900	Statement	BAD_CAST	3722:68:124188:124195	2000847	10	True				
ANR	2000901	Statement	(	3722:76:124196:124196	2000847	11	True				
ANR	2000902	Statement	"""1"""	3722:77:124197:124199	2000847	12	True				
ANR	2000903	Statement	)	3722:80:124200:124200	2000847	13	True				
ANR	2000904	Statement	)	3722:81:124201:124201	2000847	14	True				
ANR	2000905	ExpressionStatement		3722:82:124202:124202	2000847	15	True				
ANR	2000906	ElseStatement	else		2000847	0					
ANR	2000907	CompoundStatement		8:9:262:262	2000847	0					
ANR	2000908	Statement	xmlSetProp	3724:3:124218:124227	2000847	0	True				
ANR	2000909	Statement	(	3724:13:124228:124228	2000847	1	True				
ANR	2000910	Statement	h	3724:14:124229:124229	2000847	2	True				
ANR	2000911	Statement	","	3724:15:124230:124230	2000847	3	True				
ANR	2000912	Statement	BAD_CAST	3724:17:124232:124239	2000847	4	True				
ANR	2000913	Statement	(	3724:25:124240:124240	2000847	5	True				
ANR	2000914	Statement	SOAP_1_2_ENV_NS_PREFIX	3724:26:124241:124262	2000847	6	True				
ANR	2000915	Statement	""":mustUnderstand"""	3724:48:124263:124279	2000847	7	True				
ANR	2000916	Statement	)	3724:65:124280:124280	2000847	8	True				
ANR	2000917	Statement	","	3724:66:124281:124281	2000847	9	True				
ANR	2000918	Statement	BAD_CAST	3724:68:124283:124290	2000847	10	True				
ANR	2000919	Statement	(	3724:76:124291:124291	2000847	11	True				
ANR	2000920	Statement	"""true"""	3724:77:124292:124297	2000847	12	True				
ANR	2000921	Statement	)	3724:83:124298:124298	2000847	13	True				
ANR	2000922	Statement	)	3724:84:124299:124299	2000847	14	True				
ANR	2000923	ExpressionStatement		3724:85:124300:124300	2000847	15	True				
ANR	2000924	IfStatement	"if ( ( tmp = zend_hash_str_find ( ht , ""actor"" , sizeof ( ""actor"" ) - 1 ) ) != NULL )"		2000847	2					
ANR	2000925	Condition	"( tmp = zend_hash_str_find ( ht , ""actor"" , sizeof ( ""actor"" ) - 1 ) ) != NULL"	3727:5:124314:124379	2000847	0	True				
ANR	2000926	EqualityExpression	"( tmp = zend_hash_str_find ( ht , ""actor"" , sizeof ( ""actor"" ) - 1 ) ) != NULL"		2000847	0		!=			
ANR	2000927	AssignmentExpression	"tmp = zend_hash_str_find ( ht , ""actor"" , sizeof ( ""actor"" ) - 1 )"		2000847	0		=			
ANR	2000928	Identifier	tmp		2000847	0					
ANR	2000929	CallExpression	"zend_hash_str_find ( ht , ""actor"" , sizeof ( ""actor"" ) - 1 )"		2000847	1					
ANR	2000930	Callee	zend_hash_str_find		2000847	0					
ANR	2000931	Identifier	zend_hash_str_find		2000847	0					
ANR	2000932	ArgumentList	ht		2000847	1					
ANR	2000933	Argument	ht		2000847	0					
ANR	2000934	Identifier	ht		2000847	0					
ANR	2000935	Argument	"""actor"""		2000847	1					
ANR	2000936	PrimaryExpression	"""actor"""		2000847	0					
ANR	2000937	Argument	"sizeof ( ""actor"" ) - 1"		2000847	2					
ANR	2000938	AdditiveExpression	"sizeof ( ""actor"" ) - 1"		2000847	0		-			
ANR	2000939	SizeofExpression	"sizeof ( ""actor"" )"		2000847	0					
ANR	2000940	Sizeof	sizeof		2000847	0					
ANR	2000941	PrimaryExpression	"""actor"""		2000847	1					
ANR	2000942	PrimaryExpression	1		2000847	1					
ANR	2000943	Identifier	NULL		2000847	1					
ANR	2000944	CompoundStatement		12:73:431:431	2000847	1					
ANR	2000945	IfStatement	if ( Z_TYPE_P ( tmp ) == IS_STRING )		2000847	0					
ANR	2000946	Condition	Z_TYPE_P ( tmp ) == IS_STRING	3728:6:124390:124415	2000847	0	True				
ANR	2000947	EqualityExpression	Z_TYPE_P ( tmp ) == IS_STRING		2000847	0		==			
ANR	2000948	CallExpression	Z_TYPE_P ( tmp )		2000847	0					
ANR	2000949	Callee	Z_TYPE_P		2000847	0					
ANR	2000950	Identifier	Z_TYPE_P		2000847	0					
ANR	2000951	ArgumentList	tmp		2000847	1					
ANR	2000952	Argument	tmp		2000847	0					
ANR	2000953	Identifier	tmp		2000847	0					
ANR	2000954	Identifier	IS_STRING		2000847	1					
ANR	2000955	CompoundStatement		13:34:467:467	2000847	1					
ANR	2000956	IfStatement	if ( version == SOAP_1_1 )		2000847	0					
ANR	2000957	Condition	version == SOAP_1_1	3729:7:124427:124445	2000847	0	True				
ANR	2000958	EqualityExpression	version == SOAP_1_1		2000847	0		==			
ANR	2000959	Identifier	version		2000847	0					
ANR	2000960	Identifier	SOAP_1_1		2000847	1					
ANR	2000961	CompoundStatement		14:28:497:497	2000847	1					
ANR	2000962	Statement	xmlSetProp	3730:4:124454:124463	2000847	0	True				
ANR	2000963	Statement	(	3730:14:124464:124464	2000847	1	True				
ANR	2000964	Statement	h	3730:15:124465:124465	2000847	2	True				
ANR	2000965	Statement	","	3730:16:124466:124466	2000847	3	True				
ANR	2000966	Statement	BAD_CAST	3730:18:124468:124475	2000847	4	True				
ANR	2000967	Statement	(	3730:26:124476:124476	2000847	5	True				
ANR	2000968	Statement	SOAP_1_1_ENV_NS_PREFIX	3730:27:124477:124498	2000847	6	True				
ANR	2000969	Statement	""":actor"""	3730:49:124499:124506	2000847	7	True				
ANR	2000970	Statement	)	3730:57:124507:124507	2000847	8	True				
ANR	2000971	Statement	","	3730:58:124508:124508	2000847	9	True				
ANR	2000972	Statement	BAD_CAST	3730:60:124510:124517	2000847	10	True				
ANR	2000973	Statement	(	3730:68:124518:124518	2000847	11	True				
ANR	2000974	Statement	Z_STRVAL_P	3730:69:124519:124528	2000847	12	True				
ANR	2000975	Statement	(	3730:79:124529:124529	2000847	13	True				
ANR	2000976	Statement	tmp	3730:80:124530:124532	2000847	14	True				
ANR	2000977	Statement	)	3730:83:124533:124533	2000847	15	True				
ANR	2000978	Statement	)	3730:84:124534:124534	2000847	16	True				
ANR	2000979	Statement	)	3730:85:124535:124535	2000847	17	True				
ANR	2000980	ExpressionStatement		3730:86:124536:124536	2000847	18	True				
ANR	2000981	ElseStatement	else		2000847	0					
ANR	2000982	CompoundStatement		16:10:597:597	2000847	0					
ANR	2000983	Statement	xmlSetProp	3732:4:124554:124563	2000847	0	True				
ANR	2000984	Statement	(	3732:14:124564:124564	2000847	1	True				
ANR	2000985	Statement	h	3732:15:124565:124565	2000847	2	True				
ANR	2000986	Statement	","	3732:16:124566:124566	2000847	3	True				
ANR	2000987	Statement	BAD_CAST	3732:18:124568:124575	2000847	4	True				
ANR	2000988	Statement	(	3732:26:124576:124576	2000847	5	True				
ANR	2000989	Statement	SOAP_1_2_ENV_NS_PREFIX	3732:27:124577:124598	2000847	6	True				
ANR	2000990	Statement	""":role"""	3732:49:124599:124605	2000847	7	True				
ANR	2000991	Statement	)	3732:56:124606:124606	2000847	8	True				
ANR	2000992	Statement	","	3732:57:124607:124607	2000847	9	True				
ANR	2000993	Statement	BAD_CAST	3732:59:124609:124616	2000847	10	True				
ANR	2000994	Statement	(	3732:67:124617:124617	2000847	11	True				
ANR	2000995	Statement	Z_STRVAL_P	3732:68:124618:124627	2000847	12	True				
ANR	2000996	Statement	(	3732:78:124628:124628	2000847	13	True				
ANR	2000997	Statement	tmp	3732:79:124629:124631	2000847	14	True				
ANR	2000998	Statement	)	3732:82:124632:124632	2000847	15	True				
ANR	2000999	Statement	)	3732:83:124633:124633	2000847	16	True				
ANR	2001000	Statement	)	3732:84:124634:124634	2000847	17	True				
ANR	2001001	ExpressionStatement		3732:85:124635:124635	2000847	18	True				
ANR	2001002	ElseStatement	else		2000847	0					
ANR	2001003	IfStatement	if ( Z_TYPE_P ( tmp ) == IS_LONG )		2000847	0					
ANR	2001004	Condition	Z_TYPE_P ( tmp ) == IS_LONG	3734:13:124655:124678	2000847	0	True				
ANR	2001005	EqualityExpression	Z_TYPE_P ( tmp ) == IS_LONG		2000847	0		==			
ANR	2001006	CallExpression	Z_TYPE_P ( tmp )		2000847	0					
ANR	2001007	Callee	Z_TYPE_P		2000847	0					
ANR	2001008	Identifier	Z_TYPE_P		2000847	0					
ANR	2001009	ArgumentList	tmp		2000847	1					
ANR	2001010	Argument	tmp		2000847	0					
ANR	2001011	Identifier	tmp		2000847	0					
ANR	2001012	Identifier	IS_LONG		2000847	1					
ANR	2001013	CompoundStatement		19:39:730:730	2000847	1					
ANR	2001014	IfStatement	if ( version == SOAP_1_1 )		2000847	0					
ANR	2001015	Condition	version == SOAP_1_1	3735:7:124690:124708	2000847	0	True				
ANR	2001016	EqualityExpression	version == SOAP_1_1		2000847	0		==			
ANR	2001017	Identifier	version		2000847	0					
ANR	2001018	Identifier	SOAP_1_1		2000847	1					
ANR	2001019	CompoundStatement		20:28:760:760	2000847	1					
ANR	2001020	IfStatement	if ( Z_LVAL_P ( tmp ) == SOAP_ACTOR_NEXT )		2000847	0					
ANR	2001021	Condition	Z_LVAL_P ( tmp ) == SOAP_ACTOR_NEXT	3736:8:124721:124752	2000847	0	True				
ANR	2001022	EqualityExpression	Z_LVAL_P ( tmp ) == SOAP_ACTOR_NEXT		2000847	0		==			
ANR	2001023	CallExpression	Z_LVAL_P ( tmp )		2000847	0					
ANR	2001024	Callee	Z_LVAL_P		2000847	0					
ANR	2001025	Identifier	Z_LVAL_P		2000847	0					
ANR	2001026	ArgumentList	tmp		2000847	1					
ANR	2001027	Argument	tmp		2000847	0					
ANR	2001028	Identifier	tmp		2000847	0					
ANR	2001029	Identifier	SOAP_ACTOR_NEXT		2000847	1					
ANR	2001030	CompoundStatement		21:42:804:804	2000847	1					
ANR	2001031	Statement	xmlSetProp	3737:5:124762:124771	2000847	0	True				
ANR	2001032	Statement	(	3737:15:124772:124772	2000847	1	True				
ANR	2001033	Statement	h	3737:16:124773:124773	2000847	2	True				
ANR	2001034	Statement	","	3737:17:124774:124774	2000847	3	True				
ANR	2001035	Statement	BAD_CAST	3737:19:124776:124783	2000847	4	True				
ANR	2001036	Statement	(	3737:27:124784:124784	2000847	5	True				
ANR	2001037	Statement	SOAP_1_1_ENV_NS_PREFIX	3737:28:124785:124806	2000847	6	True				
ANR	2001038	Statement	""":actor"""	3737:50:124807:124814	2000847	7	True				
ANR	2001039	Statement	)	3737:58:124815:124815	2000847	8	True				
ANR	2001040	Statement	","	3737:59:124816:124816	2000847	9	True				
ANR	2001041	Statement	BAD_CAST	3737:61:124818:124825	2000847	10	True				
ANR	2001042	Statement	(	3737:69:124826:124826	2000847	11	True				
ANR	2001043	Statement	SOAP_1_1_ACTOR_NEXT	3737:70:124827:124845	2000847	12	True				
ANR	2001044	Statement	)	3737:89:124846:124846	2000847	13	True				
ANR	2001045	Statement	)	3737:90:124847:124847	2000847	14	True				
ANR	2001046	ExpressionStatement		3737:91:124848:124848	2000847	15	True				
ANR	2001047	ElseStatement	else		2000847	0					
ANR	2001048	CompoundStatement		24:10:915:915	2000847	0					
ANR	2001049	IfStatement	if ( Z_LVAL_P ( tmp ) == SOAP_ACTOR_NEXT )		2000847	0					
ANR	2001050	Condition	Z_LVAL_P ( tmp ) == SOAP_ACTOR_NEXT	3740:8:124876:124907	2000847	0	True				
ANR	2001051	EqualityExpression	Z_LVAL_P ( tmp ) == SOAP_ACTOR_NEXT		2000847	0		==			
ANR	2001052	CallExpression	Z_LVAL_P ( tmp )		2000847	0					
ANR	2001053	Callee	Z_LVAL_P		2000847	0					
ANR	2001054	Identifier	Z_LVAL_P		2000847	0					
ANR	2001055	ArgumentList	tmp		2000847	1					
ANR	2001056	Argument	tmp		2000847	0					
ANR	2001057	Identifier	tmp		2000847	0					
ANR	2001058	Identifier	SOAP_ACTOR_NEXT		2000847	1					
ANR	2001059	CompoundStatement		25:42:959:959	2000847	1					
ANR	2001060	Statement	xmlSetProp	3741:5:124917:124926	2000847	0	True				
ANR	2001061	Statement	(	3741:15:124927:124927	2000847	1	True				
ANR	2001062	Statement	h	3741:16:124928:124928	2000847	2	True				
ANR	2001063	Statement	","	3741:17:124929:124929	2000847	3	True				
ANR	2001064	Statement	BAD_CAST	3741:19:124931:124938	2000847	4	True				
ANR	2001065	Statement	(	3741:27:124939:124939	2000847	5	True				
ANR	2001066	Statement	SOAP_1_2_ENV_NS_PREFIX	3741:28:124940:124961	2000847	6	True				
ANR	2001067	Statement	""":role"""	3741:50:124962:124968	2000847	7	True				
ANR	2001068	Statement	)	3741:57:124969:124969	2000847	8	True				
ANR	2001069	Statement	","	3741:58:124970:124970	2000847	9	True				
ANR	2001070	Statement	BAD_CAST	3741:60:124972:124979	2000847	10	True				
ANR	2001071	Statement	(	3741:68:124980:124980	2000847	11	True				
ANR	2001072	Statement	SOAP_1_2_ACTOR_NEXT	3741:69:124981:124999	2000847	12	True				
ANR	2001073	Statement	)	3741:88:125000:125000	2000847	13	True				
ANR	2001074	Statement	)	3741:89:125001:125001	2000847	14	True				
ANR	2001075	ExpressionStatement		3741:90:125002:125002	2000847	15	True				
ANR	2001076	ElseStatement	else		2000847	0					
ANR	2001077	IfStatement	if ( Z_LVAL_P ( tmp ) == SOAP_ACTOR_NONE )		2000847	0					
ANR	2001078	Condition	Z_LVAL_P ( tmp ) == SOAP_ACTOR_NONE	3742:15:125019:125050	2000847	0	True				
ANR	2001079	EqualityExpression	Z_LVAL_P ( tmp ) == SOAP_ACTOR_NONE		2000847	0		==			
ANR	2001080	CallExpression	Z_LVAL_P ( tmp )		2000847	0					
ANR	2001081	Callee	Z_LVAL_P		2000847	0					
ANR	2001082	Identifier	Z_LVAL_P		2000847	0					
ANR	2001083	ArgumentList	tmp		2000847	1					
ANR	2001084	Argument	tmp		2000847	0					
ANR	2001085	Identifier	tmp		2000847	0					
ANR	2001086	Identifier	SOAP_ACTOR_NONE		2000847	1					
ANR	2001087	CompoundStatement		27:49:1102:1102	2000847	1					
ANR	2001088	Statement	xmlSetProp	3743:5:125060:125069	2000847	0	True				
ANR	2001089	Statement	(	3743:15:125070:125070	2000847	1	True				
ANR	2001090	Statement	h	3743:16:125071:125071	2000847	2	True				
ANR	2001091	Statement	","	3743:17:125072:125072	2000847	3	True				
ANR	2001092	Statement	BAD_CAST	3743:19:125074:125081	2000847	4	True				
ANR	2001093	Statement	(	3743:27:125082:125082	2000847	5	True				
ANR	2001094	Statement	SOAP_1_2_ENV_NS_PREFIX	3743:28:125083:125104	2000847	6	True				
ANR	2001095	Statement	""":role"""	3743:50:125105:125111	2000847	7	True				
ANR	2001096	Statement	)	3743:57:125112:125112	2000847	8	True				
ANR	2001097	Statement	","	3743:58:125113:125113	2000847	9	True				
ANR	2001098	Statement	BAD_CAST	3743:60:125115:125122	2000847	10	True				
ANR	2001099	Statement	(	3743:68:125123:125123	2000847	11	True				
ANR	2001100	Statement	SOAP_1_2_ACTOR_NONE	3743:69:125124:125142	2000847	12	True				
ANR	2001101	Statement	)	3743:88:125143:125143	2000847	13	True				
ANR	2001102	Statement	)	3743:89:125144:125144	2000847	14	True				
ANR	2001103	ExpressionStatement		3743:90:125145:125145	2000847	15	True				
ANR	2001104	ElseStatement	else		2000847	0					
ANR	2001105	IfStatement	if ( Z_LVAL_P ( tmp ) == SOAP_ACTOR_UNLIMATERECEIVER )		2000847	0					
ANR	2001106	Condition	Z_LVAL_P ( tmp ) == SOAP_ACTOR_UNLIMATERECEIVER	3744:15:125162:125205	2000847	0	True				
ANR	2001107	EqualityExpression	Z_LVAL_P ( tmp ) == SOAP_ACTOR_UNLIMATERECEIVER		2000847	0		==			
ANR	2001108	CallExpression	Z_LVAL_P ( tmp )		2000847	0					
ANR	2001109	Callee	Z_LVAL_P		2000847	0					
ANR	2001110	Identifier	Z_LVAL_P		2000847	0					
ANR	2001111	ArgumentList	tmp		2000847	1					
ANR	2001112	Argument	tmp		2000847	0					
ANR	2001113	Identifier	tmp		2000847	0					
ANR	2001114	Identifier	SOAP_ACTOR_UNLIMATERECEIVER		2000847	1					
ANR	2001115	CompoundStatement		29:61:1257:1257	2000847	1					
ANR	2001116	Statement	xmlSetProp	3745:5:125215:125224	2000847	0	True				
ANR	2001117	Statement	(	3745:15:125225:125225	2000847	1	True				
ANR	2001118	Statement	h	3745:16:125226:125226	2000847	2	True				
ANR	2001119	Statement	","	3745:17:125227:125227	2000847	3	True				
ANR	2001120	Statement	BAD_CAST	3745:19:125229:125236	2000847	4	True				
ANR	2001121	Statement	(	3745:27:125237:125237	2000847	5	True				
ANR	2001122	Statement	SOAP_1_2_ENV_NS_PREFIX	3745:28:125238:125259	2000847	6	True				
ANR	2001123	Statement	""":role"""	3745:50:125260:125266	2000847	7	True				
ANR	2001124	Statement	)	3745:57:125267:125267	2000847	8	True				
ANR	2001125	Statement	","	3745:58:125268:125268	2000847	9	True				
ANR	2001126	Statement	BAD_CAST	3745:60:125270:125277	2000847	10	True				
ANR	2001127	Statement	(	3745:68:125278:125278	2000847	11	True				
ANR	2001128	Statement	SOAP_1_2_ACTOR_UNLIMATERECEIVER	3745:69:125279:125309	2000847	12	True				
ANR	2001129	Statement	)	3745:100:125310:125310	2000847	13	True				
ANR	2001130	Statement	)	3745:101:125311:125311	2000847	14	True				
ANR	2001131	ExpressionStatement		3745:102:125312:125312	2000847	15	True				
ANR	2001132	ReturnType	static void		2000847	1					
ANR	2001133	Identifier	set_soap_header_attributes		2000847	2					
ANR	2001134	ParameterList	"xmlNodePtr h , HashTable * ht , int version"		2000847	3					
ANR	2001135	Parameter	xmlNodePtr h	3715:39:123908:123919	2000847	0	True				
ANR	2001136	ParameterType	xmlNodePtr		2000847	0					
ANR	2001137	Identifier	h		2000847	1					
ANR	2001138	Parameter	HashTable * ht	3715:53:123922:123934	2000847	1	True				
ANR	2001139	ParameterType	HashTable *		2000847	0					
ANR	2001140	Identifier	ht		2000847	1					
ANR	2001141	Parameter	int version	3715:68:123937:123947	2000847	2	True				
ANR	2001142	ParameterType	int		2000847	0					
ANR	2001143	Identifier	version		2000847	1					
ANR	2001144	CFGEntryNode	ENTRY		2000847		True				
ANR	2001145	CFGExitNode	EXIT		2000847		True				
ANR	2001146	Symbol	SOAP_ACTOR_UNLIMATERECEIVER		2000847						
ANR	2001147	Symbol	NULL		2000847						
ANR	2001148	Symbol	SOAP_1_1		2000847						
ANR	2001149	Symbol	h		2000847						
ANR	2001150	Symbol	IS_TRUE		2000847						
ANR	2001151	Symbol	ht		2000847						
ANR	2001152	Symbol	Z_TYPE_P		2000847						
ANR	2001153	Symbol	version		2000847						
ANR	2001154	Symbol	Z_LVAL_P		2000847						
ANR	2001155	Symbol	zend_hash_str_find		2000847						
ANR	2001156	Symbol	SOAP_ACTOR_NONE		2000847						
ANR	2001157	Symbol	SOAP_ACTOR_NEXT		2000847						
ANR	2001158	Symbol	tmp		2000847						
ANR	2001159	Symbol	IS_LONG		2000847						
ANR	2001160	Symbol	IS_STRING		2000847						
ANR	2001161	Function	serialize_response_call2	3752:0:125335:128731							
ANR	2001162	FunctionDef	"serialize_response_call2 (xmlNodePtr body , sdlFunctionPtr function , char * function_name , char * uri , zval * ret , int version , int main , xmlNodePtr * node)"		2001161	0					
ANR	2001163	CompoundStatement		3753:0:125497:128731	2001161	0					
ANR	2001164	IdentifierDeclStatement	"xmlNodePtr method = NULL , param ;"	3754:1:125500:125531	2001161	0	True				
ANR	2001165	IdentifierDecl	method = NULL		2001161	0					
ANR	2001166	IdentifierDeclType	xmlNodePtr		2001161	0					
ANR	2001167	Identifier	method		2001161	1					
ANR	2001168	AssignmentExpression	method = NULL		2001161	2		=			
ANR	2001169	Identifier	NULL		2001161	0					
ANR	2001170	Identifier	NULL		2001161	1					
ANR	2001171	IdentifierDecl	param		2001161	1					
ANR	2001172	IdentifierDeclType	xmlNodePtr		2001161	0					
ANR	2001173	Identifier	param		2001161	1					
ANR	2001174	IdentifierDeclStatement	sdlParamPtr parameter = NULL ;	3755:1:125534:125562	2001161	1	True				
ANR	2001175	IdentifierDecl	parameter = NULL		2001161	0					
ANR	2001176	IdentifierDeclType	sdlParamPtr		2001161	0					
ANR	2001177	Identifier	parameter		2001161	1					
ANR	2001178	AssignmentExpression	parameter = NULL		2001161	2		=			
ANR	2001179	Identifier	NULL		2001161	0					
ANR	2001180	Identifier	NULL		2001161	1					
ANR	2001181	IdentifierDeclStatement	int param_count ;	3756:1:125565:125580	2001161	2	True				
ANR	2001182	IdentifierDecl	param_count		2001161	0					
ANR	2001183	IdentifierDeclType	int		2001161	0					
ANR	2001184	Identifier	param_count		2001161	1					
ANR	2001185	IdentifierDeclStatement	"int style , use ;"	3757:1:125583:125597	2001161	3	True				
ANR	2001186	IdentifierDecl	style		2001161	0					
ANR	2001187	IdentifierDeclType	int		2001161	0					
ANR	2001188	Identifier	style		2001161	1					
ANR	2001189	IdentifierDecl	use		2001161	1					
ANR	2001190	IdentifierDeclType	int		2001161	0					
ANR	2001191	Identifier	use		2001161	1					
ANR	2001192	IdentifierDeclStatement	xmlNsPtr ns = NULL ;	3758:1:125600:125618	2001161	4	True				
ANR	2001193	IdentifierDecl	ns = NULL		2001161	0					
ANR	2001194	IdentifierDeclType	xmlNsPtr		2001161	0					
ANR	2001195	Identifier	ns		2001161	1					
ANR	2001196	AssignmentExpression	ns = NULL		2001161	2		=			
ANR	2001197	Identifier	NULL		2001161	0					
ANR	2001198	Identifier	NULL		2001161	1					
ANR	2001199	IfStatement	if ( function != NULL && function -> binding -> bindingType == BINDING_SOAP )		2001161	5					
ANR	2001200	Condition	function != NULL && function -> binding -> bindingType == BINDING_SOAP	3760:5:125626:125691	2001161	0	True				
ANR	2001201	AndExpression	function != NULL && function -> binding -> bindingType == BINDING_SOAP		2001161	0		&&			
ANR	2001202	EqualityExpression	function != NULL		2001161	0		!=			
ANR	2001203	Identifier	function		2001161	0					
ANR	2001204	Identifier	NULL		2001161	1					
ANR	2001205	EqualityExpression	function -> binding -> bindingType == BINDING_SOAP		2001161	1		==			
ANR	2001206	PtrMemberAccess	function -> binding -> bindingType		2001161	0					
ANR	2001207	PtrMemberAccess	function -> binding		2001161	0					
ANR	2001208	Identifier	function		2001161	0					
ANR	2001209	Identifier	binding		2001161	1					
ANR	2001210	Identifier	bindingType		2001161	1					
ANR	2001211	Identifier	BINDING_SOAP		2001161	1					
ANR	2001212	CompoundStatement		9:2:200:286	2001161	1					
ANR	2001213	IdentifierDeclStatement	sdlSoapBindingFunctionPtr fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes ;	3761:2:125698:125784	2001161	0	True				
ANR	2001214	IdentifierDecl	fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		2001161	0					
ANR	2001215	IdentifierDeclType	sdlSoapBindingFunctionPtr		2001161	0					
ANR	2001216	Identifier	fnb		2001161	1					
ANR	2001217	AssignmentExpression	fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		2001161	2		=			
ANR	2001218	Identifier	fnb		2001161	0					
ANR	2001219	CastExpression	( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		2001161	1					
ANR	2001220	CastTarget	sdlSoapBindingFunctionPtr		2001161	0					
ANR	2001221	PtrMemberAccess	function -> bindingAttributes		2001161	1					
ANR	2001222	Identifier	function		2001161	0					
ANR	2001223	Identifier	bindingAttributes		2001161	1					
ANR	2001224	ExpressionStatement	style = fnb -> style	3763:2:125789:125807	2001161	1	True				
ANR	2001225	AssignmentExpression	style = fnb -> style		2001161	0		=			
ANR	2001226	Identifier	style		2001161	0					
ANR	2001227	PtrMemberAccess	fnb -> style		2001161	1					
ANR	2001228	Identifier	fnb		2001161	0					
ANR	2001229	Identifier	style		2001161	1					
ANR	2001230	ExpressionStatement	use = fnb -> output . use	3764:2:125811:125832	2001161	2	True				
ANR	2001231	AssignmentExpression	use = fnb -> output . use		2001161	0		=			
ANR	2001232	Identifier	use		2001161	0					
ANR	2001233	MemberAccess	fnb -> output . use		2001161	1					
ANR	2001234	PtrMemberAccess	fnb -> output		2001161	0					
ANR	2001235	Identifier	fnb		2001161	0					
ANR	2001236	Identifier	output		2001161	1					
ANR	2001237	Identifier	use		2001161	1					
ANR	2001238	IfStatement	if ( style == SOAP_RPC )		2001161	3					
ANR	2001239	Condition	style == SOAP_RPC	3765:6:125840:125856	2001161	0	True				
ANR	2001240	EqualityExpression	style == SOAP_RPC		2001161	0		==			
ANR	2001241	Identifier	style		2001161	0					
ANR	2001242	Identifier	SOAP_RPC		2001161	1					
ANR	2001243	CompoundStatement		13:25:361:361	2001161	1					
ANR	2001244	ExpressionStatement	"ns = encode_add_ns ( body , fnb -> output . ns )"	3766:3:125864:125904	2001161	0	True				
ANR	2001245	AssignmentExpression	"ns = encode_add_ns ( body , fnb -> output . ns )"		2001161	0		=			
ANR	2001246	Identifier	ns		2001161	0					
ANR	2001247	CallExpression	"encode_add_ns ( body , fnb -> output . ns )"		2001161	1					
ANR	2001248	Callee	encode_add_ns		2001161	0					
ANR	2001249	Identifier	encode_add_ns		2001161	0					
ANR	2001250	ArgumentList	body		2001161	1					
ANR	2001251	Argument	body		2001161	0					
ANR	2001252	Identifier	body		2001161	0					
ANR	2001253	Argument	fnb -> output . ns		2001161	1					
ANR	2001254	MemberAccess	fnb -> output . ns		2001161	0					
ANR	2001255	PtrMemberAccess	fnb -> output		2001161	0					
ANR	2001256	Identifier	fnb		2001161	0					
ANR	2001257	Identifier	output		2001161	1					
ANR	2001258	Identifier	ns		2001161	1					
ANR	2001259	IfStatement	if ( function -> responseName )		2001161	1					
ANR	2001260	Condition	function -> responseName	3767:7:125913:125934	2001161	0	True				
ANR	2001261	PtrMemberAccess	function -> responseName		2001161	0					
ANR	2001262	Identifier	function		2001161	0					
ANR	2001263	Identifier	responseName		2001161	1					
ANR	2001264	CompoundStatement		15:31:439:439	2001161	1					
ANR	2001265	ExpressionStatement	"method = xmlNewChild ( body , ns , BAD_CAST ( function -> responseName ) , NULL )"	3768:4:125943:126013	2001161	0	True				
ANR	2001266	AssignmentExpression	"method = xmlNewChild ( body , ns , BAD_CAST ( function -> responseName ) , NULL )"		2001161	0		=			
ANR	2001267	Identifier	method		2001161	0					
ANR	2001268	CallExpression	"xmlNewChild ( body , ns , BAD_CAST ( function -> responseName ) , NULL )"		2001161	1					
ANR	2001269	Callee	xmlNewChild		2001161	0					
ANR	2001270	Identifier	xmlNewChild		2001161	0					
ANR	2001271	ArgumentList	body		2001161	1					
ANR	2001272	Argument	body		2001161	0					
ANR	2001273	Identifier	body		2001161	0					
ANR	2001274	Argument	ns		2001161	1					
ANR	2001275	Identifier	ns		2001161	0					
ANR	2001276	Argument	BAD_CAST ( function -> responseName )		2001161	2					
ANR	2001277	CallExpression	BAD_CAST ( function -> responseName )		2001161	0					
ANR	2001278	Callee	BAD_CAST		2001161	0					
ANR	2001279	Identifier	BAD_CAST		2001161	0					
ANR	2001280	ArgumentList	function -> responseName		2001161	1					
ANR	2001281	Argument	function -> responseName		2001161	0					
ANR	2001282	PtrMemberAccess	function -> responseName		2001161	0					
ANR	2001283	Identifier	function		2001161	0					
ANR	2001284	Identifier	responseName		2001161	1					
ANR	2001285	Argument	NULL		2001161	3					
ANR	2001286	Identifier	NULL		2001161	0					
ANR	2001287	ElseStatement	else		2001161	0					
ANR	2001288	IfStatement	if ( function -> responseParameters )		2001161	0					
ANR	2001289	Condition	function -> responseParameters	3769:14:126029:126056	2001161	0	True				
ANR	2001290	PtrMemberAccess	function -> responseParameters		2001161	0					
ANR	2001291	Identifier	function		2001161	0					
ANR	2001292	Identifier	responseParameters		2001161	1					
ANR	2001293	CompoundStatement		17:44:561:561	2001161	1					
ANR	2001294	ExpressionStatement	"method = xmlNewChild ( body , ns , BAD_CAST ( function -> functionName ) , NULL )"	3770:4:126065:126135	2001161	0	True				
ANR	2001295	AssignmentExpression	"method = xmlNewChild ( body , ns , BAD_CAST ( function -> functionName ) , NULL )"		2001161	0		=			
ANR	2001296	Identifier	method		2001161	0					
ANR	2001297	CallExpression	"xmlNewChild ( body , ns , BAD_CAST ( function -> functionName ) , NULL )"		2001161	1					
ANR	2001298	Callee	xmlNewChild		2001161	0					
ANR	2001299	Identifier	xmlNewChild		2001161	0					
ANR	2001300	ArgumentList	body		2001161	1					
ANR	2001301	Argument	body		2001161	0					
ANR	2001302	Identifier	body		2001161	0					
ANR	2001303	Argument	ns		2001161	1					
ANR	2001304	Identifier	ns		2001161	0					
ANR	2001305	Argument	BAD_CAST ( function -> functionName )		2001161	2					
ANR	2001306	CallExpression	BAD_CAST ( function -> functionName )		2001161	0					
ANR	2001307	Callee	BAD_CAST		2001161	0					
ANR	2001308	Identifier	BAD_CAST		2001161	0					
ANR	2001309	ArgumentList	function -> functionName		2001161	1					
ANR	2001310	Argument	function -> functionName		2001161	0					
ANR	2001311	PtrMemberAccess	function -> functionName		2001161	0					
ANR	2001312	Identifier	function		2001161	0					
ANR	2001313	Identifier	functionName		2001161	1					
ANR	2001314	Argument	NULL		2001161	3					
ANR	2001315	Identifier	NULL		2001161	0					
ANR	2001316	ElseStatement	else		2001161	0					
ANR	2001317	CompoundStatement		21:8:656:656	2001161	0					
ANR	2001318	ExpressionStatement	style = main ? SOAP_RPC : SOAP_DOCUMENT	3774:2:126158:126193	2001161	0	True				
ANR	2001319	AssignmentExpression	style = main ? SOAP_RPC : SOAP_DOCUMENT		2001161	0		=			
ANR	2001320	Identifier	style		2001161	0					
ANR	2001321	ConditionalExpression	main ? SOAP_RPC : SOAP_DOCUMENT		2001161	1					
ANR	2001322	Condition	main		2001161	0					
ANR	2001323	Identifier	main		2001161	0					
ANR	2001324	Identifier	SOAP_RPC		2001161	1					
ANR	2001325	Identifier	SOAP_DOCUMENT		2001161	2					
ANR	2001326	ExpressionStatement	use = main ? SOAP_ENCODED : SOAP_LITERAL	3775:2:126197:126233	2001161	1	True				
ANR	2001327	AssignmentExpression	use = main ? SOAP_ENCODED : SOAP_LITERAL		2001161	0		=			
ANR	2001328	Identifier	use		2001161	0					
ANR	2001329	ConditionalExpression	main ? SOAP_ENCODED : SOAP_LITERAL		2001161	1					
ANR	2001330	Condition	main		2001161	0					
ANR	2001331	Identifier	main		2001161	0					
ANR	2001332	Identifier	SOAP_ENCODED		2001161	1					
ANR	2001333	Identifier	SOAP_LITERAL		2001161	2					
ANR	2001334	IfStatement	if ( style == SOAP_RPC )		2001161	2					
ANR	2001335	Condition	style == SOAP_RPC	3776:6:126241:126257	2001161	0	True				
ANR	2001336	EqualityExpression	style == SOAP_RPC		2001161	0		==			
ANR	2001337	Identifier	style		2001161	0					
ANR	2001338	Identifier	SOAP_RPC		2001161	1					
ANR	2001339	CompoundStatement		24:25:762:762	2001161	1					
ANR	2001340	ExpressionStatement	"ns = encode_add_ns ( body , uri )"	3777:3:126265:126294	2001161	0	True				
ANR	2001341	AssignmentExpression	"ns = encode_add_ns ( body , uri )"		2001161	0		=			
ANR	2001342	Identifier	ns		2001161	0					
ANR	2001343	CallExpression	"encode_add_ns ( body , uri )"		2001161	1					
ANR	2001344	Callee	encode_add_ns		2001161	0					
ANR	2001345	Identifier	encode_add_ns		2001161	0					
ANR	2001346	ArgumentList	body		2001161	1					
ANR	2001347	Argument	body		2001161	0					
ANR	2001348	Identifier	body		2001161	0					
ANR	2001349	Argument	uri		2001161	1					
ANR	2001350	Identifier	uri		2001161	0					
ANR	2001351	ExpressionStatement	"method = xmlNewChild ( body , ns , BAD_CAST ( function_name ) , NULL )"	3778:3:126299:126360	2001161	1	True				
ANR	2001352	AssignmentExpression	"method = xmlNewChild ( body , ns , BAD_CAST ( function_name ) , NULL )"		2001161	0		=			
ANR	2001353	Identifier	method		2001161	0					
ANR	2001354	CallExpression	"xmlNewChild ( body , ns , BAD_CAST ( function_name ) , NULL )"		2001161	1					
ANR	2001355	Callee	xmlNewChild		2001161	0					
ANR	2001356	Identifier	xmlNewChild		2001161	0					
ANR	2001357	ArgumentList	body		2001161	1					
ANR	2001358	Argument	body		2001161	0					
ANR	2001359	Identifier	body		2001161	0					
ANR	2001360	Argument	ns		2001161	1					
ANR	2001361	Identifier	ns		2001161	0					
ANR	2001362	Argument	BAD_CAST ( function_name )		2001161	2					
ANR	2001363	CallExpression	BAD_CAST ( function_name )		2001161	0					
ANR	2001364	Callee	BAD_CAST		2001161	0					
ANR	2001365	Identifier	BAD_CAST		2001161	0					
ANR	2001366	ArgumentList	function_name		2001161	1					
ANR	2001367	Argument	function_name		2001161	0					
ANR	2001368	Identifier	function_name		2001161	0					
ANR	2001369	Argument	NULL		2001161	3					
ANR	2001370	Identifier	NULL		2001161	0					
ANR	2001371	IfStatement	if ( function != NULL )		2001161	6					
ANR	2001372	Condition	function != NULL	3782:5:126375:126390	2001161	0	True				
ANR	2001373	EqualityExpression	function != NULL		2001161	0		!=			
ANR	2001374	Identifier	function		2001161	0					
ANR	2001375	Identifier	NULL		2001161	1					
ANR	2001376	CompoundStatement		30:23:895:895	2001161	1					
ANR	2001377	IfStatement	if ( function -> responseParameters )		2001161	0					
ANR	2001378	Condition	function -> responseParameters	3783:6:126401:126428	2001161	0	True				
ANR	2001379	PtrMemberAccess	function -> responseParameters		2001161	0					
ANR	2001380	Identifier	function		2001161	0					
ANR	2001381	Identifier	responseParameters		2001161	1					
ANR	2001382	CompoundStatement		31:36:933:933	2001161	1					
ANR	2001383	ExpressionStatement	param_count = zend_hash_num_elements ( function -> responseParameters )	3784:3:126436:126502	2001161	0	True				
ANR	2001384	AssignmentExpression	param_count = zend_hash_num_elements ( function -> responseParameters )		2001161	0		=			
ANR	2001385	Identifier	param_count		2001161	0					
ANR	2001386	CallExpression	zend_hash_num_elements ( function -> responseParameters )		2001161	1					
ANR	2001387	Callee	zend_hash_num_elements		2001161	0					
ANR	2001388	Identifier	zend_hash_num_elements		2001161	0					
ANR	2001389	ArgumentList	function -> responseParameters		2001161	1					
ANR	2001390	Argument	function -> responseParameters		2001161	0					
ANR	2001391	PtrMemberAccess	function -> responseParameters		2001161	0					
ANR	2001392	Identifier	function		2001161	0					
ANR	2001393	Identifier	responseParameters		2001161	1					
ANR	2001394	ElseStatement	else		2001161	0					
ANR	2001395	CompoundStatement		33:9:1015:1015	2001161	0					
ANR	2001396	ExpressionStatement	param_count = 0	3786:4:126519:126534	2001161	0	True				
ANR	2001397	AssignmentExpression	param_count = 0		2001161	0		=			
ANR	2001398	Identifier	param_count		2001161	0					
ANR	2001399	PrimaryExpression	0		2001161	1					
ANR	2001400	ElseStatement	else		2001161	0					
ANR	2001401	CompoundStatement		36:8:1050:1050	2001161	0					
ANR	2001402	ExpressionStatement	param_count = 1	3789:3:126553:126568	2001161	0	True				
ANR	2001403	AssignmentExpression	param_count = 1		2001161	0		=			
ANR	2001404	Identifier	param_count		2001161	0					
ANR	2001405	PrimaryExpression	1		2001161	1					
ANR	2001406	IfStatement	if ( param_count == 1 )		2001161	7					
ANR	2001407	Condition	param_count == 1	3792:5:126579:126594	2001161	0	True				
ANR	2001408	EqualityExpression	param_count == 1		2001161	0		==			
ANR	2001409	Identifier	param_count		2001161	0					
ANR	2001410	PrimaryExpression	1		2001161	1					
ANR	2001411	CompoundStatement		40:23:1099:1099	2001161	1					
ANR	2001412	ExpressionStatement	"parameter = get_param ( function , NULL , 0 , TRUE )"	3793:2:126601:126647	2001161	0	True				
ANR	2001413	AssignmentExpression	"parameter = get_param ( function , NULL , 0 , TRUE )"		2001161	0		=			
ANR	2001414	Identifier	parameter		2001161	0					
ANR	2001415	CallExpression	"get_param ( function , NULL , 0 , TRUE )"		2001161	1					
ANR	2001416	Callee	get_param		2001161	0					
ANR	2001417	Identifier	get_param		2001161	0					
ANR	2001418	ArgumentList	function		2001161	1					
ANR	2001419	Argument	function		2001161	0					
ANR	2001420	Identifier	function		2001161	0					
ANR	2001421	Argument	NULL		2001161	1					
ANR	2001422	Identifier	NULL		2001161	0					
ANR	2001423	Argument	0		2001161	2					
ANR	2001424	PrimaryExpression	0		2001161	0					
ANR	2001425	Argument	TRUE		2001161	3					
ANR	2001426	Identifier	TRUE		2001161	0					
ANR	2001427	IfStatement	if ( style == SOAP_RPC )		2001161	1					
ANR	2001428	Condition	style == SOAP_RPC	3795:6:126656:126672	2001161	0	True				
ANR	2001429	EqualityExpression	style == SOAP_RPC		2001161	0		==			
ANR	2001430	Identifier	style		2001161	0					
ANR	2001431	Identifier	SOAP_RPC		2001161	1					
ANR	2001432	CompoundStatement		44:4:1183:1202	2001161	1					
ANR	2001433	IdentifierDeclStatement	xmlNode * rpc_result ;	3796:4:126681:126700	2001161	0	True				
ANR	2001434	IdentifierDecl	* rpc_result		2001161	0					
ANR	2001435	IdentifierDeclType	xmlNode *		2001161	0					
ANR	2001436	Identifier	rpc_result		2001161	1					
ANR	2001437	IfStatement	if ( main && version == SOAP_1_2 )		2001161	1					
ANR	2001438	Condition	main && version == SOAP_1_2	3797:7:126709:126735	2001161	0	True				
ANR	2001439	AndExpression	main && version == SOAP_1_2		2001161	0		&&			
ANR	2001440	Identifier	main		2001161	0					
ANR	2001441	EqualityExpression	version == SOAP_1_2		2001161	1		==			
ANR	2001442	Identifier	version		2001161	0					
ANR	2001443	Identifier	SOAP_1_2		2001161	1					
ANR	2001444	CompoundStatement		46:4:1246:1340	2001161	1					
ANR	2001445	IdentifierDeclStatement	"xmlNs * rpc_ns = xmlNewNs ( body , BAD_CAST ( RPC_SOAP12_NAMESPACE ) , BAD_CAST ( RPC_SOAP12_NS_PREFIX ) ) ;"	3798:4:126744:126838	2001161	0	True				
ANR	2001446	IdentifierDecl	"* rpc_ns = xmlNewNs ( body , BAD_CAST ( RPC_SOAP12_NAMESPACE ) , BAD_CAST ( RPC_SOAP12_NS_PREFIX ) )"		2001161	0					
ANR	2001447	IdentifierDeclType	xmlNs *		2001161	0					
ANR	2001448	Identifier	rpc_ns		2001161	1					
ANR	2001449	AssignmentExpression	"* rpc_ns = xmlNewNs ( body , BAD_CAST ( RPC_SOAP12_NAMESPACE ) , BAD_CAST ( RPC_SOAP12_NS_PREFIX ) )"		2001161	2		=			
ANR	2001450	Identifier	rpc_ns		2001161	0					
ANR	2001451	CallExpression	"xmlNewNs ( body , BAD_CAST ( RPC_SOAP12_NAMESPACE ) , BAD_CAST ( RPC_SOAP12_NS_PREFIX ) )"		2001161	1					
ANR	2001452	Callee	xmlNewNs		2001161	0					
ANR	2001453	Identifier	xmlNewNs		2001161	0					
ANR	2001454	ArgumentList	body		2001161	1					
ANR	2001455	Argument	body		2001161	0					
ANR	2001456	Identifier	body		2001161	0					
ANR	2001457	Argument	BAD_CAST ( RPC_SOAP12_NAMESPACE )		2001161	1					
ANR	2001458	CallExpression	BAD_CAST ( RPC_SOAP12_NAMESPACE )		2001161	0					
ANR	2001459	Callee	BAD_CAST		2001161	0					
ANR	2001460	Identifier	BAD_CAST		2001161	0					
ANR	2001461	ArgumentList	RPC_SOAP12_NAMESPACE		2001161	1					
ANR	2001462	Argument	RPC_SOAP12_NAMESPACE		2001161	0					
ANR	2001463	Identifier	RPC_SOAP12_NAMESPACE		2001161	0					
ANR	2001464	Argument	BAD_CAST ( RPC_SOAP12_NS_PREFIX )		2001161	2					
ANR	2001465	CallExpression	BAD_CAST ( RPC_SOAP12_NS_PREFIX )		2001161	0					
ANR	2001466	Callee	BAD_CAST		2001161	0					
ANR	2001467	Identifier	BAD_CAST		2001161	0					
ANR	2001468	ArgumentList	RPC_SOAP12_NS_PREFIX		2001161	1					
ANR	2001469	Argument	RPC_SOAP12_NS_PREFIX		2001161	0					
ANR	2001470	Identifier	RPC_SOAP12_NS_PREFIX		2001161	0					
ANR	2001471	ExpressionStatement	"rpc_result = xmlNewChild ( method , rpc_ns , BAD_CAST ( ""result"" ) , NULL )"	3799:4:126844:126910	2001161	1	True				
ANR	2001472	AssignmentExpression	"rpc_result = xmlNewChild ( method , rpc_ns , BAD_CAST ( ""result"" ) , NULL )"		2001161	0		=			
ANR	2001473	Identifier	rpc_result		2001161	0					
ANR	2001474	CallExpression	"xmlNewChild ( method , rpc_ns , BAD_CAST ( ""result"" ) , NULL )"		2001161	1					
ANR	2001475	Callee	xmlNewChild		2001161	0					
ANR	2001476	Identifier	xmlNewChild		2001161	0					
ANR	2001477	ArgumentList	method		2001161	1					
ANR	2001478	Argument	method		2001161	0					
ANR	2001479	Identifier	method		2001161	0					
ANR	2001480	Argument	rpc_ns		2001161	1					
ANR	2001481	Identifier	rpc_ns		2001161	0					
ANR	2001482	Argument	"BAD_CAST ( ""result"" )"		2001161	2					
ANR	2001483	CallExpression	"BAD_CAST ( ""result"" )"		2001161	0					
ANR	2001484	Callee	BAD_CAST		2001161	0					
ANR	2001485	Identifier	BAD_CAST		2001161	0					
ANR	2001486	ArgumentList	"""result"""		2001161	1					
ANR	2001487	Argument	"""result"""		2001161	0					
ANR	2001488	PrimaryExpression	"""result"""		2001161	0					
ANR	2001489	Argument	NULL		2001161	3					
ANR	2001490	Identifier	NULL		2001161	0					
ANR	2001491	ExpressionStatement	"param = serialize_parameter ( parameter , ret , 0 , ""return"" , use , method )"	3800:4:126916:126985	2001161	2	True				
ANR	2001492	AssignmentExpression	"param = serialize_parameter ( parameter , ret , 0 , ""return"" , use , method )"		2001161	0		=			
ANR	2001493	Identifier	param		2001161	0					
ANR	2001494	CallExpression	"serialize_parameter ( parameter , ret , 0 , ""return"" , use , method )"		2001161	1					
ANR	2001495	Callee	serialize_parameter		2001161	0					
ANR	2001496	Identifier	serialize_parameter		2001161	0					
ANR	2001497	ArgumentList	parameter		2001161	1					
ANR	2001498	Argument	parameter		2001161	0					
ANR	2001499	Identifier	parameter		2001161	0					
ANR	2001500	Argument	ret		2001161	1					
ANR	2001501	Identifier	ret		2001161	0					
ANR	2001502	Argument	0		2001161	2					
ANR	2001503	PrimaryExpression	0		2001161	0					
ANR	2001504	Argument	"""return"""		2001161	3					
ANR	2001505	PrimaryExpression	"""return"""		2001161	0					
ANR	2001506	Argument	use		2001161	4					
ANR	2001507	Identifier	use		2001161	0					
ANR	2001508	Argument	method		2001161	5					
ANR	2001509	Identifier	method		2001161	0					
ANR	2001510	ExpressionStatement	"xmlNodeSetContent ( rpc_result , param -> name )"	3801:4:126991:127032	2001161	3	True				
ANR	2001511	CallExpression	"xmlNodeSetContent ( rpc_result , param -> name )"		2001161	0					
ANR	2001512	Callee	xmlNodeSetContent		2001161	0					
ANR	2001513	Identifier	xmlNodeSetContent		2001161	0					
ANR	2001514	ArgumentList	rpc_result		2001161	1					
ANR	2001515	Argument	rpc_result		2001161	0					
ANR	2001516	Identifier	rpc_result		2001161	0					
ANR	2001517	Argument	param -> name		2001161	1					
ANR	2001518	PtrMemberAccess	param -> name		2001161	0					
ANR	2001519	Identifier	param		2001161	0					
ANR	2001520	Identifier	name		2001161	1					
ANR	2001521	ElseStatement	else		2001161	0					
ANR	2001522	CompoundStatement		50:10:1546:1546	2001161	0					
ANR	2001523	ExpressionStatement	"param = serialize_parameter ( parameter , ret , 0 , ""return"" , use , method )"	3803:4:127050:127119	2001161	0	True				
ANR	2001524	AssignmentExpression	"param = serialize_parameter ( parameter , ret , 0 , ""return"" , use , method )"		2001161	0		=			
ANR	2001525	Identifier	param		2001161	0					
ANR	2001526	CallExpression	"serialize_parameter ( parameter , ret , 0 , ""return"" , use , method )"		2001161	1					
ANR	2001527	Callee	serialize_parameter		2001161	0					
ANR	2001528	Identifier	serialize_parameter		2001161	0					
ANR	2001529	ArgumentList	parameter		2001161	1					
ANR	2001530	Argument	parameter		2001161	0					
ANR	2001531	Identifier	parameter		2001161	0					
ANR	2001532	Argument	ret		2001161	1					
ANR	2001533	Identifier	ret		2001161	0					
ANR	2001534	Argument	0		2001161	2					
ANR	2001535	PrimaryExpression	0		2001161	0					
ANR	2001536	Argument	"""return"""		2001161	3					
ANR	2001537	PrimaryExpression	"""return"""		2001161	0					
ANR	2001538	Argument	use		2001161	4					
ANR	2001539	Identifier	use		2001161	0					
ANR	2001540	Argument	method		2001161	5					
ANR	2001541	Identifier	method		2001161	0					
ANR	2001542	ElseStatement	else		2001161	0					
ANR	2001543	CompoundStatement		53:9:1637:1637	2001161	0					
ANR	2001544	ExpressionStatement	"param = serialize_parameter ( parameter , ret , 0 , ""return"" , use , body )"	3806:3:127140:127207	2001161	0	True				
ANR	2001545	AssignmentExpression	"param = serialize_parameter ( parameter , ret , 0 , ""return"" , use , body )"		2001161	0		=			
ANR	2001546	Identifier	param		2001161	0					
ANR	2001547	CallExpression	"serialize_parameter ( parameter , ret , 0 , ""return"" , use , body )"		2001161	1					
ANR	2001548	Callee	serialize_parameter		2001161	0					
ANR	2001549	Identifier	serialize_parameter		2001161	0					
ANR	2001550	ArgumentList	parameter		2001161	1					
ANR	2001551	Argument	parameter		2001161	0					
ANR	2001552	Identifier	parameter		2001161	0					
ANR	2001553	Argument	ret		2001161	1					
ANR	2001554	Identifier	ret		2001161	0					
ANR	2001555	Argument	0		2001161	2					
ANR	2001556	PrimaryExpression	0		2001161	0					
ANR	2001557	Argument	"""return"""		2001161	3					
ANR	2001558	PrimaryExpression	"""return"""		2001161	0					
ANR	2001559	Argument	use		2001161	4					
ANR	2001560	Identifier	use		2001161	0					
ANR	2001561	Argument	body		2001161	5					
ANR	2001562	Identifier	body		2001161	0					
ANR	2001563	IfStatement	if ( function && function -> binding -> bindingType == BINDING_SOAP )		2001161	1					
ANR	2001564	Condition	function && function -> binding -> bindingType == BINDING_SOAP	3807:7:127216:127273	2001161	0	True				
ANR	2001565	AndExpression	function && function -> binding -> bindingType == BINDING_SOAP		2001161	0		&&			
ANR	2001566	Identifier	function		2001161	0					
ANR	2001567	EqualityExpression	function -> binding -> bindingType == BINDING_SOAP		2001161	1		==			
ANR	2001568	PtrMemberAccess	function -> binding -> bindingType		2001161	0					
ANR	2001569	PtrMemberAccess	function -> binding		2001161	0					
ANR	2001570	Identifier	function		2001161	0					
ANR	2001571	Identifier	binding		2001161	1					
ANR	2001572	Identifier	bindingType		2001161	1					
ANR	2001573	Identifier	BINDING_SOAP		2001161	1					
ANR	2001574	CompoundStatement		55:67:1778:1778	2001161	1					
ANR	2001575	IfStatement	if ( parameter && parameter -> element )		2001161	0					
ANR	2001576	Condition	parameter && parameter -> element	3808:8:127286:127316	2001161	0	True				
ANR	2001577	AndExpression	parameter && parameter -> element		2001161	0		&&			
ANR	2001578	Identifier	parameter		2001161	0					
ANR	2001579	PtrMemberAccess	parameter -> element		2001161	1					
ANR	2001580	Identifier	parameter		2001161	0					
ANR	2001581	Identifier	element		2001161	1					
ANR	2001582	CompoundStatement		56:41:1821:1821	2001161	1					
ANR	2001583	ExpressionStatement	"ns = encode_add_ns ( param , parameter -> element -> namens )"	3809:5:127326:127379	2001161	0	True				
ANR	2001584	AssignmentExpression	"ns = encode_add_ns ( param , parameter -> element -> namens )"		2001161	0		=			
ANR	2001585	Identifier	ns		2001161	0					
ANR	2001586	CallExpression	"encode_add_ns ( param , parameter -> element -> namens )"		2001161	1					
ANR	2001587	Callee	encode_add_ns		2001161	0					
ANR	2001588	Identifier	encode_add_ns		2001161	0					
ANR	2001589	ArgumentList	param		2001161	1					
ANR	2001590	Argument	param		2001161	0					
ANR	2001591	Identifier	param		2001161	0					
ANR	2001592	Argument	parameter -> element -> namens		2001161	1					
ANR	2001593	PtrMemberAccess	parameter -> element -> namens		2001161	0					
ANR	2001594	PtrMemberAccess	parameter -> element		2001161	0					
ANR	2001595	Identifier	parameter		2001161	0					
ANR	2001596	Identifier	element		2001161	1					
ANR	2001597	Identifier	namens		2001161	1					
ANR	2001598	ExpressionStatement	"xmlNodeSetName ( param , BAD_CAST ( parameter -> element -> name ) )"	3810:5:127386:127443	2001161	1	True				
ANR	2001599	CallExpression	"xmlNodeSetName ( param , BAD_CAST ( parameter -> element -> name ) )"		2001161	0					
ANR	2001600	Callee	xmlNodeSetName		2001161	0					
ANR	2001601	Identifier	xmlNodeSetName		2001161	0					
ANR	2001602	ArgumentList	param		2001161	1					
ANR	2001603	Argument	param		2001161	0					
ANR	2001604	Identifier	param		2001161	0					
ANR	2001605	Argument	BAD_CAST ( parameter -> element -> name )		2001161	1					
ANR	2001606	CallExpression	BAD_CAST ( parameter -> element -> name )		2001161	0					
ANR	2001607	Callee	BAD_CAST		2001161	0					
ANR	2001608	Identifier	BAD_CAST		2001161	0					
ANR	2001609	ArgumentList	parameter -> element -> name		2001161	1					
ANR	2001610	Argument	parameter -> element -> name		2001161	0					
ANR	2001611	PtrMemberAccess	parameter -> element -> name		2001161	0					
ANR	2001612	PtrMemberAccess	parameter -> element		2001161	0					
ANR	2001613	Identifier	parameter		2001161	0					
ANR	2001614	Identifier	element		2001161	1					
ANR	2001615	Identifier	name		2001161	1					
ANR	2001616	ExpressionStatement	"xmlSetNs ( param , ns )"	3811:5:127450:127469	2001161	2	True				
ANR	2001617	CallExpression	"xmlSetNs ( param , ns )"		2001161	0					
ANR	2001618	Callee	xmlSetNs		2001161	0					
ANR	2001619	Identifier	xmlSetNs		2001161	0					
ANR	2001620	ArgumentList	param		2001161	1					
ANR	2001621	Argument	param		2001161	0					
ANR	2001622	Identifier	param		2001161	0					
ANR	2001623	Argument	ns		2001161	1					
ANR	2001624	Identifier	ns		2001161	0					
ANR	2001625	ElseStatement	else		2001161	0					
ANR	2001626	IfStatement	"if ( strcmp ( ( char * ) param -> name , ""return"" ) == 0 )"		2001161	0					
ANR	2001627	Condition	"strcmp ( ( char * ) param -> name , ""return"" ) == 0"	3813:14:127491:127530	2001161	0	True				
ANR	2001628	EqualityExpression	"strcmp ( ( char * ) param -> name , ""return"" ) == 0"		2001161	0		==			
ANR	2001629	CallExpression	"strcmp ( ( char * ) param -> name , ""return"" )"		2001161	0					
ANR	2001630	Callee	strcmp		2001161	0					
ANR	2001631	Identifier	strcmp		2001161	0					
ANR	2001632	ArgumentList	( char * ) param -> name		2001161	1					
ANR	2001633	Argument	( char * ) param -> name		2001161	0					
ANR	2001634	CastExpression	( char * ) param -> name		2001161	0					
ANR	2001635	CastTarget	char *		2001161	0					
ANR	2001636	PtrMemberAccess	param -> name		2001161	1					
ANR	2001637	Identifier	param		2001161	0					
ANR	2001638	Identifier	name		2001161	1					
ANR	2001639	Argument	"""return"""		2001161	1					
ANR	2001640	PrimaryExpression	"""return"""		2001161	0					
ANR	2001641	PrimaryExpression	0		2001161	1					
ANR	2001642	CompoundStatement		61:56:2035:2035	2001161	1					
ANR	2001643	ExpressionStatement	"ns = encode_add_ns ( param , uri )"	3814:4:127539:127569	2001161	0	True				
ANR	2001644	AssignmentExpression	"ns = encode_add_ns ( param , uri )"		2001161	0		=			
ANR	2001645	Identifier	ns		2001161	0					
ANR	2001646	CallExpression	"encode_add_ns ( param , uri )"		2001161	1					
ANR	2001647	Callee	encode_add_ns		2001161	0					
ANR	2001648	Identifier	encode_add_ns		2001161	0					
ANR	2001649	ArgumentList	param		2001161	1					
ANR	2001650	Argument	param		2001161	0					
ANR	2001651	Identifier	param		2001161	0					
ANR	2001652	Argument	uri		2001161	1					
ANR	2001653	Identifier	uri		2001161	0					
ANR	2001654	ExpressionStatement	"xmlNodeSetName ( param , BAD_CAST ( function_name ) )"	3815:4:127575:127621	2001161	1	True				
ANR	2001655	CallExpression	"xmlNodeSetName ( param , BAD_CAST ( function_name ) )"		2001161	0					
ANR	2001656	Callee	xmlNodeSetName		2001161	0					
ANR	2001657	Identifier	xmlNodeSetName		2001161	0					
ANR	2001658	ArgumentList	param		2001161	1					
ANR	2001659	Argument	param		2001161	0					
ANR	2001660	Identifier	param		2001161	0					
ANR	2001661	Argument	BAD_CAST ( function_name )		2001161	1					
ANR	2001662	CallExpression	BAD_CAST ( function_name )		2001161	0					
ANR	2001663	Callee	BAD_CAST		2001161	0					
ANR	2001664	Identifier	BAD_CAST		2001161	0					
ANR	2001665	ArgumentList	function_name		2001161	1					
ANR	2001666	Argument	function_name		2001161	0					
ANR	2001667	Identifier	function_name		2001161	0					
ANR	2001668	ExpressionStatement	"xmlSetNs ( param , ns )"	3816:4:127627:127646	2001161	2	True				
ANR	2001669	CallExpression	"xmlSetNs ( param , ns )"		2001161	0					
ANR	2001670	Callee	xmlSetNs		2001161	0					
ANR	2001671	Identifier	xmlSetNs		2001161	0					
ANR	2001672	ArgumentList	param		2001161	1					
ANR	2001673	Argument	param		2001161	0					
ANR	2001674	Identifier	param		2001161	0					
ANR	2001675	Argument	ns		2001161	1					
ANR	2001676	Identifier	ns		2001161	0					
ANR	2001677	ElseStatement	else		2001161	0					
ANR	2001678	IfStatement	if ( param_count > 1 && Z_TYPE_P ( ret ) == IS_ARRAY )		2001161	0					
ANR	2001679	Condition	param_count > 1 && Z_TYPE_P ( ret ) == IS_ARRAY	3819:12:127669:127712	2001161	0	True				
ANR	2001680	AndExpression	param_count > 1 && Z_TYPE_P ( ret ) == IS_ARRAY		2001161	0		&&			
ANR	2001681	RelationalExpression	param_count > 1		2001161	0		>			
ANR	2001682	Identifier	param_count		2001161	0					
ANR	2001683	PrimaryExpression	1		2001161	1					
ANR	2001684	EqualityExpression	Z_TYPE_P ( ret ) == IS_ARRAY		2001161	1		==			
ANR	2001685	CallExpression	Z_TYPE_P ( ret )		2001161	0					
ANR	2001686	Callee	Z_TYPE_P		2001161	0					
ANR	2001687	Identifier	Z_TYPE_P		2001161	0					
ANR	2001688	ArgumentList	ret		2001161	1					
ANR	2001689	Argument	ret		2001161	0					
ANR	2001690	Identifier	ret		2001161	0					
ANR	2001691	Identifier	IS_ARRAY		2001161	1					
ANR	2001692	CompoundStatement		71:2:2275:2301	2001161	1					
ANR	2001693	IdentifierDeclStatement	zval * data ;	3820:2:127719:127729	2001161	0	True				
ANR	2001694	IdentifierDecl	* data		2001161	0					
ANR	2001695	IdentifierDeclType	zval *		2001161	0					
ANR	2001696	Identifier	data		2001161	1					
ANR	2001697	IdentifierDeclStatement	int i = 0 ;	3821:2:127733:127742	2001161	1	True				
ANR	2001698	IdentifierDecl	i = 0		2001161	0					
ANR	2001699	IdentifierDeclType	int		2001161	0					
ANR	2001700	Identifier	i		2001161	1					
ANR	2001701	AssignmentExpression	i = 0		2001161	2		=			
ANR	2001702	Identifier	i		2001161	0					
ANR	2001703	PrimaryExpression	0		2001161	1					
ANR	2001704	IdentifierDeclStatement	zend_string * param_name ;	3822:2:127746:127769	2001161	2	True				
ANR	2001705	IdentifierDecl	* param_name		2001161	0					
ANR	2001706	IdentifierDeclType	zend_string *		2001161	0					
ANR	2001707	Identifier	param_name		2001161	1					
ANR	2001708	IdentifierDeclStatement	zend_ulong param_index = i ;	3823:2:127773:127799	2001161	3	True				
ANR	2001709	IdentifierDecl	param_index = i		2001161	0					
ANR	2001710	IdentifierDeclType	zend_ulong		2001161	0					
ANR	2001711	Identifier	param_index		2001161	1					
ANR	2001712	AssignmentExpression	param_index = i		2001161	2		=			
ANR	2001713	Identifier	i		2001161	0					
ANR	2001714	Identifier	i		2001161	1					
ANR	2001715	Statement	ZEND_HASH_FOREACH_KEY_VAL	3825:2:127804:127828	2001161	4	True				
ANR	2001716	Statement	(	3825:27:127829:127829	2001161	5	True				
ANR	2001717	Statement	Z_ARRVAL_P	3825:28:127830:127839	2001161	6	True				
ANR	2001718	Statement	(	3825:38:127840:127840	2001161	7	True				
ANR	2001719	Statement	ret	3825:39:127841:127843	2001161	8	True				
ANR	2001720	Statement	)	3825:42:127844:127844	2001161	9	True				
ANR	2001721	Statement	","	3825:43:127845:127845	2001161	10	True				
ANR	2001722	Statement	param_index	3825:45:127847:127857	2001161	11	True				
ANR	2001723	Statement	","	3825:56:127858:127858	2001161	12	True				
ANR	2001724	Statement	param_name	3825:58:127860:127869	2001161	13	True				
ANR	2001725	Statement	","	3825:68:127870:127870	2001161	14	True				
ANR	2001726	Statement	data	3825:70:127872:127875	2001161	15	True				
ANR	2001727	Statement	)	3825:74:127876:127876	2001161	16	True				
ANR	2001728	CompoundStatement		73:76:2380:2380	2001161	17					
ANR	2001729	ExpressionStatement	"parameter = get_param ( function , ZSTR_VAL ( param_name ) , param_index , TRUE )"	3826:3:127883:127955	2001161	0	True				
ANR	2001730	AssignmentExpression	"parameter = get_param ( function , ZSTR_VAL ( param_name ) , param_index , TRUE )"		2001161	0		=			
ANR	2001731	Identifier	parameter		2001161	0					
ANR	2001732	CallExpression	"get_param ( function , ZSTR_VAL ( param_name ) , param_index , TRUE )"		2001161	1					
ANR	2001733	Callee	get_param		2001161	0					
ANR	2001734	Identifier	get_param		2001161	0					
ANR	2001735	ArgumentList	function		2001161	1					
ANR	2001736	Argument	function		2001161	0					
ANR	2001737	Identifier	function		2001161	0					
ANR	2001738	Argument	ZSTR_VAL ( param_name )		2001161	1					
ANR	2001739	CallExpression	ZSTR_VAL ( param_name )		2001161	0					
ANR	2001740	Callee	ZSTR_VAL		2001161	0					
ANR	2001741	Identifier	ZSTR_VAL		2001161	0					
ANR	2001742	ArgumentList	param_name		2001161	1					
ANR	2001743	Argument	param_name		2001161	0					
ANR	2001744	Identifier	param_name		2001161	0					
ANR	2001745	Argument	param_index		2001161	2					
ANR	2001746	Identifier	param_index		2001161	0					
ANR	2001747	Argument	TRUE		2001161	3					
ANR	2001748	Identifier	TRUE		2001161	0					
ANR	2001749	IfStatement	if ( style == SOAP_RPC )		2001161	1					
ANR	2001750	Condition	style == SOAP_RPC	3827:7:127964:127980	2001161	0	True				
ANR	2001751	EqualityExpression	style == SOAP_RPC		2001161	0		==			
ANR	2001752	Identifier	style		2001161	0					
ANR	2001753	Identifier	SOAP_RPC		2001161	1					
ANR	2001754	CompoundStatement		75:26:2485:2485	2001161	1					
ANR	2001755	ExpressionStatement	"param = serialize_parameter ( parameter , data , i , ZSTR_VAL ( param_name ) , use , method )"	3828:4:127989:128071	2001161	0	True				
ANR	2001756	AssignmentExpression	"param = serialize_parameter ( parameter , data , i , ZSTR_VAL ( param_name ) , use , method )"		2001161	0		=			
ANR	2001757	Identifier	param		2001161	0					
ANR	2001758	CallExpression	"serialize_parameter ( parameter , data , i , ZSTR_VAL ( param_name ) , use , method )"		2001161	1					
ANR	2001759	Callee	serialize_parameter		2001161	0					
ANR	2001760	Identifier	serialize_parameter		2001161	0					
ANR	2001761	ArgumentList	parameter		2001161	1					
ANR	2001762	Argument	parameter		2001161	0					
ANR	2001763	Identifier	parameter		2001161	0					
ANR	2001764	Argument	data		2001161	1					
ANR	2001765	Identifier	data		2001161	0					
ANR	2001766	Argument	i		2001161	2					
ANR	2001767	Identifier	i		2001161	0					
ANR	2001768	Argument	ZSTR_VAL ( param_name )		2001161	3					
ANR	2001769	CallExpression	ZSTR_VAL ( param_name )		2001161	0					
ANR	2001770	Callee	ZSTR_VAL		2001161	0					
ANR	2001771	Identifier	ZSTR_VAL		2001161	0					
ANR	2001772	ArgumentList	param_name		2001161	1					
ANR	2001773	Argument	param_name		2001161	0					
ANR	2001774	Identifier	param_name		2001161	0					
ANR	2001775	Argument	use		2001161	4					
ANR	2001776	Identifier	use		2001161	0					
ANR	2001777	Argument	method		2001161	5					
ANR	2001778	Identifier	method		2001161	0					
ANR	2001779	ElseStatement	else		2001161	0					
ANR	2001780	CompoundStatement		77:10:2585:2585	2001161	0					
ANR	2001781	ExpressionStatement	"param = serialize_parameter ( parameter , data , i , ZSTR_VAL ( param_name ) , use , body )"	3830:4:128089:128169	2001161	0	True				
ANR	2001782	AssignmentExpression	"param = serialize_parameter ( parameter , data , i , ZSTR_VAL ( param_name ) , use , body )"		2001161	0		=			
ANR	2001783	Identifier	param		2001161	0					
ANR	2001784	CallExpression	"serialize_parameter ( parameter , data , i , ZSTR_VAL ( param_name ) , use , body )"		2001161	1					
ANR	2001785	Callee	serialize_parameter		2001161	0					
ANR	2001786	Identifier	serialize_parameter		2001161	0					
ANR	2001787	ArgumentList	parameter		2001161	1					
ANR	2001788	Argument	parameter		2001161	0					
ANR	2001789	Identifier	parameter		2001161	0					
ANR	2001790	Argument	data		2001161	1					
ANR	2001791	Identifier	data		2001161	0					
ANR	2001792	Argument	i		2001161	2					
ANR	2001793	Identifier	i		2001161	0					
ANR	2001794	Argument	ZSTR_VAL ( param_name )		2001161	3					
ANR	2001795	CallExpression	ZSTR_VAL ( param_name )		2001161	0					
ANR	2001796	Callee	ZSTR_VAL		2001161	0					
ANR	2001797	Identifier	ZSTR_VAL		2001161	0					
ANR	2001798	ArgumentList	param_name		2001161	1					
ANR	2001799	Argument	param_name		2001161	0					
ANR	2001800	Identifier	param_name		2001161	0					
ANR	2001801	Argument	use		2001161	4					
ANR	2001802	Identifier	use		2001161	0					
ANR	2001803	Argument	body		2001161	5					
ANR	2001804	Identifier	body		2001161	0					
ANR	2001805	IfStatement	if ( function && function -> binding -> bindingType == BINDING_SOAP )		2001161	1					
ANR	2001806	Condition	function && function -> binding -> bindingType == BINDING_SOAP	3831:8:128179:128236	2001161	0	True				
ANR	2001807	AndExpression	function && function -> binding -> bindingType == BINDING_SOAP		2001161	0		&&			
ANR	2001808	Identifier	function		2001161	0					
ANR	2001809	EqualityExpression	function -> binding -> bindingType == BINDING_SOAP		2001161	1		==			
ANR	2001810	PtrMemberAccess	function -> binding -> bindingType		2001161	0					
ANR	2001811	PtrMemberAccess	function -> binding		2001161	0					
ANR	2001812	Identifier	function		2001161	0					
ANR	2001813	Identifier	binding		2001161	1					
ANR	2001814	Identifier	bindingType		2001161	1					
ANR	2001815	Identifier	BINDING_SOAP		2001161	1					
ANR	2001816	CompoundStatement		79:68:2741:2741	2001161	1					
ANR	2001817	IfStatement	if ( parameter && parameter -> element )		2001161	0					
ANR	2001818	Condition	parameter && parameter -> element	3832:9:128250:128280	2001161	0	True				
ANR	2001819	AndExpression	parameter && parameter -> element		2001161	0		&&			
ANR	2001820	Identifier	parameter		2001161	0					
ANR	2001821	PtrMemberAccess	parameter -> element		2001161	1					
ANR	2001822	Identifier	parameter		2001161	0					
ANR	2001823	Identifier	element		2001161	1					
ANR	2001824	CompoundStatement		80:42:2785:2785	2001161	1					
ANR	2001825	ExpressionStatement	"ns = encode_add_ns ( param , parameter -> element -> namens )"	3833:6:128291:128344	2001161	0	True				
ANR	2001826	AssignmentExpression	"ns = encode_add_ns ( param , parameter -> element -> namens )"		2001161	0		=			
ANR	2001827	Identifier	ns		2001161	0					
ANR	2001828	CallExpression	"encode_add_ns ( param , parameter -> element -> namens )"		2001161	1					
ANR	2001829	Callee	encode_add_ns		2001161	0					
ANR	2001830	Identifier	encode_add_ns		2001161	0					
ANR	2001831	ArgumentList	param		2001161	1					
ANR	2001832	Argument	param		2001161	0					
ANR	2001833	Identifier	param		2001161	0					
ANR	2001834	Argument	parameter -> element -> namens		2001161	1					
ANR	2001835	PtrMemberAccess	parameter -> element -> namens		2001161	0					
ANR	2001836	PtrMemberAccess	parameter -> element		2001161	0					
ANR	2001837	Identifier	parameter		2001161	0					
ANR	2001838	Identifier	element		2001161	1					
ANR	2001839	Identifier	namens		2001161	1					
ANR	2001840	ExpressionStatement	"xmlNodeSetName ( param , BAD_CAST ( parameter -> element -> name ) )"	3834:6:128352:128409	2001161	1	True				
ANR	2001841	CallExpression	"xmlNodeSetName ( param , BAD_CAST ( parameter -> element -> name ) )"		2001161	0					
ANR	2001842	Callee	xmlNodeSetName		2001161	0					
ANR	2001843	Identifier	xmlNodeSetName		2001161	0					
ANR	2001844	ArgumentList	param		2001161	1					
ANR	2001845	Argument	param		2001161	0					
ANR	2001846	Identifier	param		2001161	0					
ANR	2001847	Argument	BAD_CAST ( parameter -> element -> name )		2001161	1					
ANR	2001848	CallExpression	BAD_CAST ( parameter -> element -> name )		2001161	0					
ANR	2001849	Callee	BAD_CAST		2001161	0					
ANR	2001850	Identifier	BAD_CAST		2001161	0					
ANR	2001851	ArgumentList	parameter -> element -> name		2001161	1					
ANR	2001852	Argument	parameter -> element -> name		2001161	0					
ANR	2001853	PtrMemberAccess	parameter -> element -> name		2001161	0					
ANR	2001854	PtrMemberAccess	parameter -> element		2001161	0					
ANR	2001855	Identifier	parameter		2001161	0					
ANR	2001856	Identifier	element		2001161	1					
ANR	2001857	Identifier	name		2001161	1					
ANR	2001858	ExpressionStatement	"xmlSetNs ( param , ns )"	3835:6:128417:128436	2001161	2	True				
ANR	2001859	CallExpression	"xmlSetNs ( param , ns )"		2001161	0					
ANR	2001860	Callee	xmlSetNs		2001161	0					
ANR	2001861	Identifier	xmlSetNs		2001161	0					
ANR	2001862	ArgumentList	param		2001161	1					
ANR	2001863	Argument	param		2001161	0					
ANR	2001864	Identifier	param		2001161	0					
ANR	2001865	Argument	ns		2001161	1					
ANR	2001866	Identifier	ns		2001161	0					
ANR	2001867	ExpressionStatement	i ++	3840:3:128460:128463	2001161	2	True				
ANR	2001868	PostIncDecOperationExpression	i ++		2001161	0					
ANR	2001869	Identifier	i		2001161	0					
ANR	2001870	IncDec	++		2001161	1					
ANR	2001871	ExpressionStatement	param_index = i	3841:3:128468:128483	2001161	3	True				
ANR	2001872	AssignmentExpression	param_index = i		2001161	0		=			
ANR	2001873	Identifier	param_index		2001161	0					
ANR	2001874	Identifier	i		2001161	1					
ANR	2001875	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	3842:4:128489:128512	2001161	18	True				
ANR	2001876	CallExpression	ZEND_HASH_FOREACH_END ( )		2001161	0					
ANR	2001877	Callee	ZEND_HASH_FOREACH_END		2001161	0					
ANR	2001878	Identifier	ZEND_HASH_FOREACH_END		2001161	0					
ANR	2001879	ArgumentList			2001161	1					
ANR	2001880	IfStatement	if ( use == SOAP_ENCODED && version == SOAP_1_2 && method != NULL )		2001161	8					
ANR	2001881	Condition	use == SOAP_ENCODED && version == SOAP_1_2 && method != NULL	3844:5:128522:128581	2001161	0	True				
ANR	2001882	AndExpression	use == SOAP_ENCODED && version == SOAP_1_2 && method != NULL		2001161	0		&&			
ANR	2001883	EqualityExpression	use == SOAP_ENCODED		2001161	0		==			
ANR	2001884	Identifier	use		2001161	0					
ANR	2001885	Identifier	SOAP_ENCODED		2001161	1					
ANR	2001886	AndExpression	version == SOAP_1_2 && method != NULL		2001161	1		&&			
ANR	2001887	EqualityExpression	version == SOAP_1_2		2001161	0		==			
ANR	2001888	Identifier	version		2001161	0					
ANR	2001889	Identifier	SOAP_1_2		2001161	1					
ANR	2001890	EqualityExpression	method != NULL		2001161	1		!=			
ANR	2001891	Identifier	method		2001161	0					
ANR	2001892	Identifier	NULL		2001161	1					
ANR	2001893	CompoundStatement		92:67:3086:3086	2001161	1					
ANR	2001894	ExpressionStatement	"xmlSetNsProp ( method , body -> ns , BAD_CAST ( ""encodingStyle"" ) , BAD_CAST ( SOAP_1_2_ENC_NAMESPACE ) )"	3845:2:128588:128679	2001161	0	True				
ANR	2001895	CallExpression	"xmlSetNsProp ( method , body -> ns , BAD_CAST ( ""encodingStyle"" ) , BAD_CAST ( SOAP_1_2_ENC_NAMESPACE ) )"		2001161	0					
ANR	2001896	Callee	xmlSetNsProp		2001161	0					
ANR	2001897	Identifier	xmlSetNsProp		2001161	0					
ANR	2001898	ArgumentList	method		2001161	1					
ANR	2001899	Argument	method		2001161	0					
ANR	2001900	Identifier	method		2001161	0					
ANR	2001901	Argument	body -> ns		2001161	1					
ANR	2001902	PtrMemberAccess	body -> ns		2001161	0					
ANR	2001903	Identifier	body		2001161	0					
ANR	2001904	Identifier	ns		2001161	1					
ANR	2001905	Argument	"BAD_CAST ( ""encodingStyle"" )"		2001161	2					
ANR	2001906	CallExpression	"BAD_CAST ( ""encodingStyle"" )"		2001161	0					
ANR	2001907	Callee	BAD_CAST		2001161	0					
ANR	2001908	Identifier	BAD_CAST		2001161	0					
ANR	2001909	ArgumentList	"""encodingStyle"""		2001161	1					
ANR	2001910	Argument	"""encodingStyle"""		2001161	0					
ANR	2001911	PrimaryExpression	"""encodingStyle"""		2001161	0					
ANR	2001912	Argument	BAD_CAST ( SOAP_1_2_ENC_NAMESPACE )		2001161	3					
ANR	2001913	CallExpression	BAD_CAST ( SOAP_1_2_ENC_NAMESPACE )		2001161	0					
ANR	2001914	Callee	BAD_CAST		2001161	0					
ANR	2001915	Identifier	BAD_CAST		2001161	0					
ANR	2001916	ArgumentList	SOAP_1_2_ENC_NAMESPACE		2001161	1					
ANR	2001917	Argument	SOAP_1_2_ENC_NAMESPACE		2001161	0					
ANR	2001918	Identifier	SOAP_1_2_ENC_NAMESPACE		2001161	0					
ANR	2001919	IfStatement	if ( node )		2001161	9					
ANR	2001920	Condition	node	3847:5:128689:128692	2001161	0	True				
ANR	2001921	Identifier	node		2001161	0					
ANR	2001922	CompoundStatement		95:11:3197:3197	2001161	1					
ANR	2001923	ExpressionStatement	* node = method	3848:2:128699:128713	2001161	0	True				
ANR	2001924	AssignmentExpression	* node = method		2001161	0		=			
ANR	2001925	UnaryOperationExpression	* node		2001161	0					
ANR	2001926	UnaryOperator	*		2001161	0					
ANR	2001927	Identifier	node		2001161	1					
ANR	2001928	Identifier	method		2001161	1					
ANR	2001929	ReturnStatement	return use ;	3850:1:128719:128729	2001161	10	True				
ANR	2001930	Identifier	use		2001161	0					
ANR	2001931	ReturnType	static int		2001161	1					
ANR	2001932	Identifier	serialize_response_call2		2001161	2					
ANR	2001933	ParameterList	"xmlNodePtr body , sdlFunctionPtr function , char * function_name , char * uri , zval * ret , int version , int main , xmlNodePtr * node"		2001161	3					
ANR	2001934	Parameter	xmlNodePtr body	3752:36:125371:125385	2001161	0	True				
ANR	2001935	ParameterType	xmlNodePtr		2001161	0					
ANR	2001936	Identifier	body		2001161	1					
ANR	2001937	Parameter	sdlFunctionPtr function	3752:53:125388:125410	2001161	1	True				
ANR	2001938	ParameterType	sdlFunctionPtr		2001161	0					
ANR	2001939	Identifier	function		2001161	1					
ANR	2001940	Parameter	char * function_name	3752:78:125413:125431	2001161	2	True				
ANR	2001941	ParameterType	char *		2001161	0					
ANR	2001942	Identifier	function_name		2001161	1					
ANR	2001943	Parameter	char * uri	3752:99:125434:125442	2001161	3	True				
ANR	2001944	ParameterType	char *		2001161	0					
ANR	2001945	Identifier	uri		2001161	1					
ANR	2001946	Parameter	zval * ret	3752:110:125445:125453	2001161	4	True				
ANR	2001947	ParameterType	zval *		2001161	0					
ANR	2001948	Identifier	ret		2001161	1					
ANR	2001949	Parameter	int version	3752:121:125456:125466	2001161	5	True				
ANR	2001950	ParameterType	int		2001161	0					
ANR	2001951	Identifier	version		2001161	1					
ANR	2001952	Parameter	int main	3752:134:125469:125476	2001161	6	True				
ANR	2001953	ParameterType	int		2001161	0					
ANR	2001954	Identifier	main		2001161	1					
ANR	2001955	Parameter	xmlNodePtr * node	3752:144:125479:125494	2001161	7	True				
ANR	2001956	ParameterType	xmlNodePtr *		2001161	0					
ANR	2001957	Identifier	node		2001161	1					
ANR	2001958	CFGEntryNode	ENTRY		2001161		True				
ANR	2001959	CFGExitNode	EXIT		2001161		True				
ANR	2001960	Symbol	* parameter		2001161						
ANR	2001961	Symbol	data		2001161						
ANR	2001962	Symbol	use		2001161						
ANR	2001963	Symbol	main		2001161						
ANR	2001964	Symbol	body		2001161						
ANR	2001965	Symbol	fnb -> output . use		2001161						
ANR	2001966	Symbol	function -> responseParameters		2001161						
ANR	2001967	Symbol	function		2001161						
ANR	2001968	Symbol	* node		2001161						
ANR	2001969	Symbol	fnb		2001161						
ANR	2001970	Symbol	function -> binding		2001161						
ANR	2001971	Symbol	RPC_SOAP12_NS_PREFIX		2001161						
ANR	2001972	Symbol	SOAP_RPC		2001161						
ANR	2001973	Symbol	fnb -> output . ns		2001161						
ANR	2001974	Symbol	ret		2001161						
ANR	2001975	Symbol	parameter -> element		2001161						
ANR	2001976	Symbol	strcmp		2001161						
ANR	2001977	Symbol	NULL		2001161						
ANR	2001978	Symbol	method		2001161						
ANR	2001979	Symbol	param_count		2001161						
ANR	2001980	Symbol	xmlNewChild		2001161						
ANR	2001981	Symbol	TRUE		2001161						
ANR	2001982	Symbol	version		2001161						
ANR	2001983	Symbol	parameter -> element -> name		2001161						
ANR	2001984	Symbol	serialize_parameter		2001161						
ANR	2001985	Symbol	* param		2001161						
ANR	2001986	Symbol	parameter -> element -> namens		2001161						
ANR	2001987	Symbol	node		2001161						
ANR	2001988	Symbol	function -> responseName		2001161						
ANR	2001989	Symbol	SOAP_LITERAL		2001161						
ANR	2001990	Symbol	style		2001161						
ANR	2001991	Symbol	rpc_ns		2001161						
ANR	2001992	Symbol	BAD_CAST		2001161						
ANR	2001993	Symbol	rpc_result		2001161						
ANR	2001994	Symbol	get_param		2001161						
ANR	2001995	Symbol	* body		2001161						
ANR	2001996	Symbol	ns		2001161						
ANR	2001997	Symbol	* parameter -> element		2001161						
ANR	2001998	Symbol	BINDING_SOAP		2001161						
ANR	2001999	Symbol	body -> ns		2001161						
ANR	2002000	Symbol	param		2001161						
ANR	2002001	Symbol	RPC_SOAP12_NAMESPACE		2001161						
ANR	2002002	Symbol	param -> name		2001161						
ANR	2002003	Symbol	IS_ARRAY		2001161						
ANR	2002004	Symbol	parameter		2001161						
ANR	2002005	Symbol	* * parameter		2001161						
ANR	2002006	Symbol	* * function		2001161						
ANR	2002007	Symbol	function -> functionName		2001161						
ANR	2002008	Symbol	encode_add_ns		2001161						
ANR	2002009	Symbol	zend_hash_num_elements		2001161						
ANR	2002010	Symbol	* function		2001161						
ANR	2002011	Symbol	fnb -> output		2001161						
ANR	2002012	Symbol	function -> binding -> bindingType		2001161						
ANR	2002013	Symbol	i		2001161						
ANR	2002014	Symbol	Z_TYPE_P		2001161						
ANR	2002015	Symbol	param_index		2001161						
ANR	2002016	Symbol	uri		2001161						
ANR	2002017	Symbol	ZSTR_VAL		2001161						
ANR	2002018	Symbol	xmlNewNs		2001161						
ANR	2002019	Symbol	SOAP_DOCUMENT		2001161						
ANR	2002020	Symbol	function_name		2001161						
ANR	2002021	Symbol	SOAP_ENCODED		2001161						
ANR	2002022	Symbol	SOAP_1_2_ENC_NAMESPACE		2001161						
ANR	2002023	Symbol	* fnb		2001161						
ANR	2002024	Symbol	SOAP_1_2		2001161						
ANR	2002025	Symbol	* function -> binding		2001161						
ANR	2002026	Symbol	function -> bindingAttributes		2001161						
ANR	2002027	Symbol	fnb -> style		2001161						
ANR	2002028	Symbol	param_name		2001161						
ANR	2002029	Function	serialize_response_call	3853:0:128734:141187							
ANR	2002030	FunctionDef	"serialize_response_call (sdlFunctionPtr function , char * function_name , char * uri , zval * ret , soapHeader * headers , int version)"		2002029	0					
ANR	2002031	CompoundStatement		3854:0:128877:141187	2002029	0					
ANR	2002032	IdentifierDeclStatement	xmlDocPtr doc ;	3855:1:128880:128893	2002029	0	True				
ANR	2002033	IdentifierDecl	doc		2002029	0					
ANR	2002034	IdentifierDeclType	xmlDocPtr		2002029	0					
ANR	2002035	Identifier	doc		2002029	1					
ANR	2002036	IdentifierDeclStatement	"xmlNodePtr envelope = NULL , body , param ;"	3856:1:128896:128935	2002029	1	True				
ANR	2002037	IdentifierDecl	envelope = NULL		2002029	0					
ANR	2002038	IdentifierDeclType	xmlNodePtr		2002029	0					
ANR	2002039	Identifier	envelope		2002029	1					
ANR	2002040	AssignmentExpression	envelope = NULL		2002029	2		=			
ANR	2002041	Identifier	NULL		2002029	0					
ANR	2002042	Identifier	NULL		2002029	1					
ANR	2002043	IdentifierDecl	body		2002029	1					
ANR	2002044	IdentifierDeclType	xmlNodePtr		2002029	0					
ANR	2002045	Identifier	body		2002029	1					
ANR	2002046	IdentifierDecl	param		2002029	2					
ANR	2002047	IdentifierDeclType	xmlNodePtr		2002029	0					
ANR	2002048	Identifier	param		2002029	1					
ANR	2002049	IdentifierDeclStatement	xmlNsPtr ns = NULL ;	3857:1:128938:128956	2002029	2	True				
ANR	2002050	IdentifierDecl	ns = NULL		2002029	0					
ANR	2002051	IdentifierDeclType	xmlNsPtr		2002029	0					
ANR	2002052	Identifier	ns		2002029	1					
ANR	2002053	AssignmentExpression	ns = NULL		2002029	2		=			
ANR	2002054	Identifier	NULL		2002029	0					
ANR	2002055	Identifier	NULL		2002029	1					
ANR	2002056	IdentifierDeclStatement	int use = SOAP_LITERAL ;	3858:1:128959:128981	2002029	3	True				
ANR	2002057	IdentifierDecl	use = SOAP_LITERAL		2002029	0					
ANR	2002058	IdentifierDeclType	int		2002029	0					
ANR	2002059	Identifier	use		2002029	1					
ANR	2002060	AssignmentExpression	use = SOAP_LITERAL		2002029	2		=			
ANR	2002061	Identifier	SOAP_LITERAL		2002029	0					
ANR	2002062	Identifier	SOAP_LITERAL		2002029	1					
ANR	2002063	IdentifierDeclStatement	xmlNodePtr head = NULL ;	3859:1:128984:129006	2002029	4	True				
ANR	2002064	IdentifierDecl	head = NULL		2002029	0					
ANR	2002065	IdentifierDeclType	xmlNodePtr		2002029	0					
ANR	2002066	Identifier	head		2002029	1					
ANR	2002067	AssignmentExpression	head = NULL		2002029	2		=			
ANR	2002068	Identifier	NULL		2002029	0					
ANR	2002069	Identifier	NULL		2002029	1					
ANR	2002070	ExpressionStatement	encode_reset_ns ( )	3861:1:129010:129027	2002029	5	True				
ANR	2002071	CallExpression	encode_reset_ns ( )		2002029	0					
ANR	2002072	Callee	encode_reset_ns		2002029	0					
ANR	2002073	Identifier	encode_reset_ns		2002029	0					
ANR	2002074	ArgumentList			2002029	1					
ANR	2002075	ExpressionStatement	"doc = xmlNewDoc ( BAD_CAST ( ""1.0"" ) )"	3863:1:129031:129063	2002029	6	True				
ANR	2002076	AssignmentExpression	"doc = xmlNewDoc ( BAD_CAST ( ""1.0"" ) )"		2002029	0		=			
ANR	2002077	Identifier	doc		2002029	0					
ANR	2002078	CallExpression	"xmlNewDoc ( BAD_CAST ( ""1.0"" ) )"		2002029	1					
ANR	2002079	Callee	xmlNewDoc		2002029	0					
ANR	2002080	Identifier	xmlNewDoc		2002029	0					
ANR	2002081	ArgumentList	"BAD_CAST ( ""1.0"" )"		2002029	1					
ANR	2002082	Argument	"BAD_CAST ( ""1.0"" )"		2002029	0					
ANR	2002083	CallExpression	"BAD_CAST ( ""1.0"" )"		2002029	0					
ANR	2002084	Callee	BAD_CAST		2002029	0					
ANR	2002085	Identifier	BAD_CAST		2002029	0					
ANR	2002086	ArgumentList	"""1.0"""		2002029	1					
ANR	2002087	Argument	"""1.0"""		2002029	0					
ANR	2002088	PrimaryExpression	"""1.0"""		2002029	0					
ANR	2002089	ExpressionStatement	doc -> charset = XML_CHAR_ENCODING_UTF8	3864:1:129066:129103	2002029	7	True				
ANR	2002090	AssignmentExpression	doc -> charset = XML_CHAR_ENCODING_UTF8		2002029	0		=			
ANR	2002091	PtrMemberAccess	doc -> charset		2002029	0					
ANR	2002092	Identifier	doc		2002029	0					
ANR	2002093	Identifier	charset		2002029	1					
ANR	2002094	Identifier	XML_CHAR_ENCODING_UTF8		2002029	1					
ANR	2002095	ExpressionStatement	"doc -> encoding = xmlCharStrdup ( ""UTF-8"" )"	3865:1:129106:129144	2002029	8	True				
ANR	2002096	AssignmentExpression	"doc -> encoding = xmlCharStrdup ( ""UTF-8"" )"		2002029	0		=			
ANR	2002097	PtrMemberAccess	doc -> encoding		2002029	0					
ANR	2002098	Identifier	doc		2002029	0					
ANR	2002099	Identifier	encoding		2002029	1					
ANR	2002100	CallExpression	"xmlCharStrdup ( ""UTF-8"" )"		2002029	1					
ANR	2002101	Callee	xmlCharStrdup		2002029	0					
ANR	2002102	Identifier	xmlCharStrdup		2002029	0					
ANR	2002103	ArgumentList	"""UTF-8"""		2002029	1					
ANR	2002104	Argument	"""UTF-8"""		2002029	0					
ANR	2002105	PrimaryExpression	"""UTF-8"""		2002029	0					
ANR	2002106	IfStatement	if ( version == SOAP_1_1 )		2002029	9					
ANR	2002107	Condition	version == SOAP_1_1	3867:5:129152:129170	2002029	0	True				
ANR	2002108	EqualityExpression	version == SOAP_1_1		2002029	0		==			
ANR	2002109	Identifier	version		2002029	0					
ANR	2002110	Identifier	SOAP_1_1		2002029	1					
ANR	2002111	CompoundStatement		14:26:295:295	2002029	1					
ANR	2002112	ExpressionStatement	"envelope = xmlNewDocNode ( doc , NULL , BAD_CAST ( ""Envelope"" ) , NULL )"	3868:2:129177:129240	2002029	0	True				
ANR	2002113	AssignmentExpression	"envelope = xmlNewDocNode ( doc , NULL , BAD_CAST ( ""Envelope"" ) , NULL )"		2002029	0		=			
ANR	2002114	Identifier	envelope		2002029	0					
ANR	2002115	CallExpression	"xmlNewDocNode ( doc , NULL , BAD_CAST ( ""Envelope"" ) , NULL )"		2002029	1					
ANR	2002116	Callee	xmlNewDocNode		2002029	0					
ANR	2002117	Identifier	xmlNewDocNode		2002029	0					
ANR	2002118	ArgumentList	doc		2002029	1					
ANR	2002119	Argument	doc		2002029	0					
ANR	2002120	Identifier	doc		2002029	0					
ANR	2002121	Argument	NULL		2002029	1					
ANR	2002122	Identifier	NULL		2002029	0					
ANR	2002123	Argument	"BAD_CAST ( ""Envelope"" )"		2002029	2					
ANR	2002124	CallExpression	"BAD_CAST ( ""Envelope"" )"		2002029	0					
ANR	2002125	Callee	BAD_CAST		2002029	0					
ANR	2002126	Identifier	BAD_CAST		2002029	0					
ANR	2002127	ArgumentList	"""Envelope"""		2002029	1					
ANR	2002128	Argument	"""Envelope"""		2002029	0					
ANR	2002129	PrimaryExpression	"""Envelope"""		2002029	0					
ANR	2002130	Argument	NULL		2002029	3					
ANR	2002131	Identifier	NULL		2002029	0					
ANR	2002132	ExpressionStatement	"ns = xmlNewNs ( envelope , BAD_CAST ( SOAP_1_1_ENV_NAMESPACE ) , BAD_CAST ( SOAP_1_1_ENV_NS_PREFIX ) )"	3869:2:129244:129335	2002029	1	True				
ANR	2002133	AssignmentExpression	"ns = xmlNewNs ( envelope , BAD_CAST ( SOAP_1_1_ENV_NAMESPACE ) , BAD_CAST ( SOAP_1_1_ENV_NS_PREFIX ) )"		2002029	0		=			
ANR	2002134	Identifier	ns		2002029	0					
ANR	2002135	CallExpression	"xmlNewNs ( envelope , BAD_CAST ( SOAP_1_1_ENV_NAMESPACE ) , BAD_CAST ( SOAP_1_1_ENV_NS_PREFIX ) )"		2002029	1					
ANR	2002136	Callee	xmlNewNs		2002029	0					
ANR	2002137	Identifier	xmlNewNs		2002029	0					
ANR	2002138	ArgumentList	envelope		2002029	1					
ANR	2002139	Argument	envelope		2002029	0					
ANR	2002140	Identifier	envelope		2002029	0					
ANR	2002141	Argument	BAD_CAST ( SOAP_1_1_ENV_NAMESPACE )		2002029	1					
ANR	2002142	CallExpression	BAD_CAST ( SOAP_1_1_ENV_NAMESPACE )		2002029	0					
ANR	2002143	Callee	BAD_CAST		2002029	0					
ANR	2002144	Identifier	BAD_CAST		2002029	0					
ANR	2002145	ArgumentList	SOAP_1_1_ENV_NAMESPACE		2002029	1					
ANR	2002146	Argument	SOAP_1_1_ENV_NAMESPACE		2002029	0					
ANR	2002147	Identifier	SOAP_1_1_ENV_NAMESPACE		2002029	0					
ANR	2002148	Argument	BAD_CAST ( SOAP_1_1_ENV_NS_PREFIX )		2002029	2					
ANR	2002149	CallExpression	BAD_CAST ( SOAP_1_1_ENV_NS_PREFIX )		2002029	0					
ANR	2002150	Callee	BAD_CAST		2002029	0					
ANR	2002151	Identifier	BAD_CAST		2002029	0					
ANR	2002152	ArgumentList	SOAP_1_1_ENV_NS_PREFIX		2002029	1					
ANR	2002153	Argument	SOAP_1_1_ENV_NS_PREFIX		2002029	0					
ANR	2002154	Identifier	SOAP_1_1_ENV_NS_PREFIX		2002029	0					
ANR	2002155	ExpressionStatement	"xmlSetNs ( envelope , ns )"	3870:2:129339:129360	2002029	2	True				
ANR	2002156	CallExpression	"xmlSetNs ( envelope , ns )"		2002029	0					
ANR	2002157	Callee	xmlSetNs		2002029	0					
ANR	2002158	Identifier	xmlSetNs		2002029	0					
ANR	2002159	ArgumentList	envelope		2002029	1					
ANR	2002160	Argument	envelope		2002029	0					
ANR	2002161	Identifier	envelope		2002029	0					
ANR	2002162	Argument	ns		2002029	1					
ANR	2002163	Identifier	ns		2002029	0					
ANR	2002164	ElseStatement	else		2002029	0					
ANR	2002165	IfStatement	if ( version == SOAP_1_2 )		2002029	0					
ANR	2002166	Condition	version == SOAP_1_2	3871:12:129374:129392	2002029	0	True				
ANR	2002167	EqualityExpression	version == SOAP_1_2		2002029	0		==			
ANR	2002168	Identifier	version		2002029	0					
ANR	2002169	Identifier	SOAP_1_2		2002029	1					
ANR	2002170	CompoundStatement		18:33:517:517	2002029	1					
ANR	2002171	ExpressionStatement	"envelope = xmlNewDocNode ( doc , NULL , BAD_CAST ( ""Envelope"" ) , NULL )"	3872:2:129399:129462	2002029	0	True				
ANR	2002172	AssignmentExpression	"envelope = xmlNewDocNode ( doc , NULL , BAD_CAST ( ""Envelope"" ) , NULL )"		2002029	0		=			
ANR	2002173	Identifier	envelope		2002029	0					
ANR	2002174	CallExpression	"xmlNewDocNode ( doc , NULL , BAD_CAST ( ""Envelope"" ) , NULL )"		2002029	1					
ANR	2002175	Callee	xmlNewDocNode		2002029	0					
ANR	2002176	Identifier	xmlNewDocNode		2002029	0					
ANR	2002177	ArgumentList	doc		2002029	1					
ANR	2002178	Argument	doc		2002029	0					
ANR	2002179	Identifier	doc		2002029	0					
ANR	2002180	Argument	NULL		2002029	1					
ANR	2002181	Identifier	NULL		2002029	0					
ANR	2002182	Argument	"BAD_CAST ( ""Envelope"" )"		2002029	2					
ANR	2002183	CallExpression	"BAD_CAST ( ""Envelope"" )"		2002029	0					
ANR	2002184	Callee	BAD_CAST		2002029	0					
ANR	2002185	Identifier	BAD_CAST		2002029	0					
ANR	2002186	ArgumentList	"""Envelope"""		2002029	1					
ANR	2002187	Argument	"""Envelope"""		2002029	0					
ANR	2002188	PrimaryExpression	"""Envelope"""		2002029	0					
ANR	2002189	Argument	NULL		2002029	3					
ANR	2002190	Identifier	NULL		2002029	0					
ANR	2002191	ExpressionStatement	"ns = xmlNewNs ( envelope , BAD_CAST ( SOAP_1_2_ENV_NAMESPACE ) , BAD_CAST ( SOAP_1_2_ENV_NS_PREFIX ) )"	3873:2:129466:129557	2002029	1	True				
ANR	2002192	AssignmentExpression	"ns = xmlNewNs ( envelope , BAD_CAST ( SOAP_1_2_ENV_NAMESPACE ) , BAD_CAST ( SOAP_1_2_ENV_NS_PREFIX ) )"		2002029	0		=			
ANR	2002193	Identifier	ns		2002029	0					
ANR	2002194	CallExpression	"xmlNewNs ( envelope , BAD_CAST ( SOAP_1_2_ENV_NAMESPACE ) , BAD_CAST ( SOAP_1_2_ENV_NS_PREFIX ) )"		2002029	1					
ANR	2002195	Callee	xmlNewNs		2002029	0					
ANR	2002196	Identifier	xmlNewNs		2002029	0					
ANR	2002197	ArgumentList	envelope		2002029	1					
ANR	2002198	Argument	envelope		2002029	0					
ANR	2002199	Identifier	envelope		2002029	0					
ANR	2002200	Argument	BAD_CAST ( SOAP_1_2_ENV_NAMESPACE )		2002029	1					
ANR	2002201	CallExpression	BAD_CAST ( SOAP_1_2_ENV_NAMESPACE )		2002029	0					
ANR	2002202	Callee	BAD_CAST		2002029	0					
ANR	2002203	Identifier	BAD_CAST		2002029	0					
ANR	2002204	ArgumentList	SOAP_1_2_ENV_NAMESPACE		2002029	1					
ANR	2002205	Argument	SOAP_1_2_ENV_NAMESPACE		2002029	0					
ANR	2002206	Identifier	SOAP_1_2_ENV_NAMESPACE		2002029	0					
ANR	2002207	Argument	BAD_CAST ( SOAP_1_2_ENV_NS_PREFIX )		2002029	2					
ANR	2002208	CallExpression	BAD_CAST ( SOAP_1_2_ENV_NS_PREFIX )		2002029	0					
ANR	2002209	Callee	BAD_CAST		2002029	0					
ANR	2002210	Identifier	BAD_CAST		2002029	0					
ANR	2002211	ArgumentList	SOAP_1_2_ENV_NS_PREFIX		2002029	1					
ANR	2002212	Argument	SOAP_1_2_ENV_NS_PREFIX		2002029	0					
ANR	2002213	Identifier	SOAP_1_2_ENV_NS_PREFIX		2002029	0					
ANR	2002214	ExpressionStatement	"xmlSetNs ( envelope , ns )"	3874:2:129561:129582	2002029	2	True				
ANR	2002215	CallExpression	"xmlSetNs ( envelope , ns )"		2002029	0					
ANR	2002216	Callee	xmlSetNs		2002029	0					
ANR	2002217	Identifier	xmlSetNs		2002029	0					
ANR	2002218	ArgumentList	envelope		2002029	1					
ANR	2002219	Argument	envelope		2002029	0					
ANR	2002220	Identifier	envelope		2002029	0					
ANR	2002221	Argument	ns		2002029	1					
ANR	2002222	Identifier	ns		2002029	0					
ANR	2002223	ElseStatement	else		2002029	0					
ANR	2002224	CompoundStatement		22:8:714:714	2002029	0					
ANR	2002225	ExpressionStatement	"soap_server_fault ( ""Server"" , ""Unknown SOAP version"" , NULL , NULL , NULL )"	3876:2:129596:129665	2002029	0	True				
ANR	2002226	CallExpression	"soap_server_fault ( ""Server"" , ""Unknown SOAP version"" , NULL , NULL , NULL )"		2002029	0					
ANR	2002227	Callee	soap_server_fault		2002029	0					
ANR	2002228	Identifier	soap_server_fault		2002029	0					
ANR	2002229	ArgumentList	"""Server"""		2002029	1					
ANR	2002230	Argument	"""Server"""		2002029	0					
ANR	2002231	PrimaryExpression	"""Server"""		2002029	0					
ANR	2002232	Argument	"""Unknown SOAP version"""		2002029	1					
ANR	2002233	PrimaryExpression	"""Unknown SOAP version"""		2002029	0					
ANR	2002234	Argument	NULL		2002029	2					
ANR	2002235	Identifier	NULL		2002029	0					
ANR	2002236	Argument	NULL		2002029	3					
ANR	2002237	Identifier	NULL		2002029	0					
ANR	2002238	Argument	NULL		2002029	4					
ANR	2002239	Identifier	NULL		2002029	0					
ANR	2002240	ExpressionStatement	"xmlDocSetRootElement ( doc , envelope )"	3878:1:129671:129706	2002029	10	True				
ANR	2002241	CallExpression	"xmlDocSetRootElement ( doc , envelope )"		2002029	0					
ANR	2002242	Callee	xmlDocSetRootElement		2002029	0					
ANR	2002243	Identifier	xmlDocSetRootElement		2002029	0					
ANR	2002244	ArgumentList	doc		2002029	1					
ANR	2002245	Argument	doc		2002029	0					
ANR	2002246	Identifier	doc		2002029	0					
ANR	2002247	Argument	envelope		2002029	1					
ANR	2002248	Identifier	envelope		2002029	0					
ANR	2002249	IfStatement	"if ( Z_TYPE_P ( ret ) == IS_OBJECT && instanceof_function ( Z_OBJCE_P ( ret ) , soap_fault_class_entry ) )"		2002029	11					
ANR	2002250	Condition	"Z_TYPE_P ( ret ) == IS_OBJECT && instanceof_function ( Z_OBJCE_P ( ret ) , soap_fault_class_entry )"	3880:5:129714:129807	2002029	0	True				
ANR	2002251	AndExpression	"Z_TYPE_P ( ret ) == IS_OBJECT && instanceof_function ( Z_OBJCE_P ( ret ) , soap_fault_class_entry )"		2002029	0		&&			
ANR	2002252	EqualityExpression	Z_TYPE_P ( ret ) == IS_OBJECT		2002029	0		==			
ANR	2002253	CallExpression	Z_TYPE_P ( ret )		2002029	0					
ANR	2002254	Callee	Z_TYPE_P		2002029	0					
ANR	2002255	Identifier	Z_TYPE_P		2002029	0					
ANR	2002256	ArgumentList	ret		2002029	1					
ANR	2002257	Argument	ret		2002029	0					
ANR	2002258	Identifier	ret		2002029	0					
ANR	2002259	Identifier	IS_OBJECT		2002029	1					
ANR	2002260	CallExpression	"instanceof_function ( Z_OBJCE_P ( ret ) , soap_fault_class_entry )"		2002029	1					
ANR	2002261	Callee	instanceof_function		2002029	0					
ANR	2002262	Identifier	instanceof_function		2002029	0					
ANR	2002263	ArgumentList	Z_OBJCE_P ( ret )		2002029	1					
ANR	2002264	Argument	Z_OBJCE_P ( ret )		2002029	0					
ANR	2002265	CallExpression	Z_OBJCE_P ( ret )		2002029	0					
ANR	2002266	Callee	Z_OBJCE_P		2002029	0					
ANR	2002267	Identifier	Z_OBJCE_P		2002029	0					
ANR	2002268	ArgumentList	ret		2002029	1					
ANR	2002269	Argument	ret		2002029	0					
ANR	2002270	Identifier	ret		2002029	0					
ANR	2002271	Argument	soap_fault_class_entry		2002029	1					
ANR	2002272	Identifier	soap_fault_class_entry		2002029	0					
ANR	2002273	CompoundStatement		33:2:1018:1039	2002029	1					
ANR	2002274	IdentifierDeclStatement	char * detail_name ;	3882:3:129815:129832	2002029	0	True				
ANR	2002275	IdentifierDecl	* detail_name		2002029	0					
ANR	2002276	IdentifierDeclType	char *		2002029	0					
ANR	2002277	Identifier	detail_name		2002029	1					
ANR	2002278	IdentifierDeclStatement	HashTable * prop ;	3883:2:129836:129851	2002029	1	True				
ANR	2002279	IdentifierDecl	* prop		2002029	0					
ANR	2002280	IdentifierDeclType	HashTable *		2002029	0					
ANR	2002281	Identifier	prop		2002029	1					
ANR	2002282	IdentifierDeclStatement	zval * tmp ;	3884:2:129855:129864	2002029	2	True				
ANR	2002283	IdentifierDecl	* tmp		2002029	0					
ANR	2002284	IdentifierDeclType	zval *		2002029	0					
ANR	2002285	Identifier	tmp		2002029	1					
ANR	2002286	IdentifierDeclStatement	sdlFaultPtr fault = NULL ;	3885:2:129868:129892	2002029	3	True				
ANR	2002287	IdentifierDecl	fault = NULL		2002029	0					
ANR	2002288	IdentifierDeclType	sdlFaultPtr		2002029	0					
ANR	2002289	Identifier	fault		2002029	1					
ANR	2002290	AssignmentExpression	fault = NULL		2002029	2		=			
ANR	2002291	Identifier	NULL		2002029	0					
ANR	2002292	Identifier	NULL		2002029	1					
ANR	2002293	IdentifierDeclStatement	char * fault_ns = NULL ;	3886:2:129896:129917	2002029	4	True				
ANR	2002294	IdentifierDecl	* fault_ns = NULL		2002029	0					
ANR	2002295	IdentifierDeclType	char *		2002029	0					
ANR	2002296	Identifier	fault_ns		2002029	1					
ANR	2002297	AssignmentExpression	* fault_ns = NULL		2002029	2		=			
ANR	2002298	Identifier	NULL		2002029	0					
ANR	2002299	Identifier	NULL		2002029	1					
ANR	2002300	ExpressionStatement	prop = Z_OBJPROP_P ( ret )	3888:2:129922:129945	2002029	5	True				
ANR	2002301	AssignmentExpression	prop = Z_OBJPROP_P ( ret )		2002029	0		=			
ANR	2002302	Identifier	prop		2002029	0					
ANR	2002303	CallExpression	Z_OBJPROP_P ( ret )		2002029	1					
ANR	2002304	Callee	Z_OBJPROP_P		2002029	0					
ANR	2002305	Identifier	Z_OBJPROP_P		2002029	0					
ANR	2002306	ArgumentList	ret		2002029	1					
ANR	2002307	Argument	ret		2002029	0					
ANR	2002308	Identifier	ret		2002029	0					
ANR	2002309	IfStatement	"if ( headers && ( tmp = zend_hash_str_find ( prop , ""headerfault"" , sizeof ( ""headerfault"" ) - 1 ) ) != NULL )"		2002029	6					
ANR	2002310	Condition	"headers && ( tmp = zend_hash_str_find ( prop , ""headerfault"" , sizeof ( ""headerfault"" ) - 1 ) ) != NULL"	3890:6:129954:130050	2002029	0	True				
ANR	2002311	AndExpression	"headers && ( tmp = zend_hash_str_find ( prop , ""headerfault"" , sizeof ( ""headerfault"" ) - 1 ) ) != NULL"		2002029	0		&&			
ANR	2002312	Identifier	headers		2002029	0					
ANR	2002313	EqualityExpression	"( tmp = zend_hash_str_find ( prop , ""headerfault"" , sizeof ( ""headerfault"" ) - 1 ) ) != NULL"		2002029	1		!=			
ANR	2002314	AssignmentExpression	"tmp = zend_hash_str_find ( prop , ""headerfault"" , sizeof ( ""headerfault"" ) - 1 )"		2002029	0		=			
ANR	2002315	Identifier	tmp		2002029	0					
ANR	2002316	CallExpression	"zend_hash_str_find ( prop , ""headerfault"" , sizeof ( ""headerfault"" ) - 1 )"		2002029	1					
ANR	2002317	Callee	zend_hash_str_find		2002029	0					
ANR	2002318	Identifier	zend_hash_str_find		2002029	0					
ANR	2002319	ArgumentList	prop		2002029	1					
ANR	2002320	Argument	prop		2002029	0					
ANR	2002321	Identifier	prop		2002029	0					
ANR	2002322	Argument	"""headerfault"""		2002029	1					
ANR	2002323	PrimaryExpression	"""headerfault"""		2002029	0					
ANR	2002324	Argument	"sizeof ( ""headerfault"" ) - 1"		2002029	2					
ANR	2002325	AdditiveExpression	"sizeof ( ""headerfault"" ) - 1"		2002029	0		-			
ANR	2002326	SizeofExpression	"sizeof ( ""headerfault"" )"		2002029	0					
ANR	2002327	Sizeof	sizeof		2002029	0					
ANR	2002328	PrimaryExpression	"""headerfault"""		2002029	1					
ANR	2002329	PrimaryExpression	1		2002029	1					
ANR	2002330	Identifier	NULL		2002029	1					
ANR	2002331	CompoundStatement		43:3:1321:1370	2002029	1					
ANR	2002332	IdentifierDeclStatement	encodePtr hdr_enc = NULL ;	3892:3:130058:130082	2002029	0	True				
ANR	2002333	IdentifierDecl	hdr_enc = NULL		2002029	0					
ANR	2002334	IdentifierDeclType	encodePtr		2002029	0					
ANR	2002335	Identifier	hdr_enc		2002029	1					
ANR	2002336	AssignmentExpression	hdr_enc = NULL		2002029	2		=			
ANR	2002337	Identifier	NULL		2002029	0					
ANR	2002338	Identifier	NULL		2002029	1					
ANR	2002339	IdentifierDeclStatement	int hdr_use = SOAP_LITERAL ;	3893:3:130087:130113	2002029	1	True				
ANR	2002340	IdentifierDecl	hdr_use = SOAP_LITERAL		2002029	0					
ANR	2002341	IdentifierDeclType	int		2002029	0					
ANR	2002342	Identifier	hdr_use		2002029	1					
ANR	2002343	AssignmentExpression	hdr_use = SOAP_LITERAL		2002029	2		=			
ANR	2002344	Identifier	SOAP_LITERAL		2002029	0					
ANR	2002345	Identifier	SOAP_LITERAL		2002029	1					
ANR	2002346	IdentifierDeclStatement	zval * hdr_ret = tmp ;	3894:3:130118:130138	2002029	2	True				
ANR	2002347	IdentifierDecl	* hdr_ret = tmp		2002029	0					
ANR	2002348	IdentifierDeclType	zval *		2002029	0					
ANR	2002349	Identifier	hdr_ret		2002029	1					
ANR	2002350	AssignmentExpression	* hdr_ret = tmp		2002029	2		=			
ANR	2002351	Identifier	tmp		2002029	0					
ANR	2002352	Identifier	tmp		2002029	1					
ANR	2002353	IdentifierDeclStatement	char * hdr_ns = headers -> hdr ? headers -> hdr -> ns : NULL ;	3895:3:130143:130194	2002029	3	True				
ANR	2002354	IdentifierDecl	* hdr_ns = headers -> hdr ? headers -> hdr -> ns : NULL		2002029	0					
ANR	2002355	IdentifierDeclType	char *		2002029	0					
ANR	2002356	Identifier	hdr_ns		2002029	1					
ANR	2002357	AssignmentExpression	* hdr_ns = headers -> hdr ? headers -> hdr -> ns : NULL		2002029	2		=			
ANR	2002358	Identifier	hdr_ns		2002029	0					
ANR	2002359	ConditionalExpression	headers -> hdr ? headers -> hdr -> ns : NULL		2002029	1					
ANR	2002360	Condition	headers -> hdr		2002029	0					
ANR	2002361	PtrMemberAccess	headers -> hdr		2002029	0					
ANR	2002362	Identifier	headers		2002029	0					
ANR	2002363	Identifier	hdr		2002029	1					
ANR	2002364	PtrMemberAccess	headers -> hdr -> ns		2002029	1					
ANR	2002365	PtrMemberAccess	headers -> hdr		2002029	0					
ANR	2002366	Identifier	headers		2002029	0					
ANR	2002367	Identifier	hdr		2002029	1					
ANR	2002368	Identifier	ns		2002029	1					
ANR	2002369	Identifier	NULL		2002029	2					
ANR	2002370	IdentifierDeclStatement	char * hdr_name = Z_STRVAL ( headers -> function_name ) ;	3896:3:130199:130248	2002029	4	True				
ANR	2002371	IdentifierDecl	* hdr_name = Z_STRVAL ( headers -> function_name )		2002029	0					
ANR	2002372	IdentifierDeclType	char *		2002029	0					
ANR	2002373	Identifier	hdr_name		2002029	1					
ANR	2002374	AssignmentExpression	* hdr_name = Z_STRVAL ( headers -> function_name )		2002029	2		=			
ANR	2002375	Identifier	hdr_name		2002029	0					
ANR	2002376	CallExpression	Z_STRVAL ( headers -> function_name )		2002029	1					
ANR	2002377	Callee	Z_STRVAL		2002029	0					
ANR	2002378	Identifier	Z_STRVAL		2002029	0					
ANR	2002379	ArgumentList	headers -> function_name		2002029	1					
ANR	2002380	Argument	headers -> function_name		2002029	0					
ANR	2002381	PtrMemberAccess	headers -> function_name		2002029	0					
ANR	2002382	Identifier	headers		2002029	0					
ANR	2002383	Identifier	function_name		2002029	1					
ANR	2002384	ExpressionStatement	"head = xmlNewChild ( envelope , ns , BAD_CAST ( ""Header"" ) , NULL )"	3898:3:130254:130312	2002029	5	True				
ANR	2002385	AssignmentExpression	"head = xmlNewChild ( envelope , ns , BAD_CAST ( ""Header"" ) , NULL )"		2002029	0		=			
ANR	2002386	Identifier	head		2002029	0					
ANR	2002387	CallExpression	"xmlNewChild ( envelope , ns , BAD_CAST ( ""Header"" ) , NULL )"		2002029	1					
ANR	2002388	Callee	xmlNewChild		2002029	0					
ANR	2002389	Identifier	xmlNewChild		2002029	0					
ANR	2002390	ArgumentList	envelope		2002029	1					
ANR	2002391	Argument	envelope		2002029	0					
ANR	2002392	Identifier	envelope		2002029	0					
ANR	2002393	Argument	ns		2002029	1					
ANR	2002394	Identifier	ns		2002029	0					
ANR	2002395	Argument	"BAD_CAST ( ""Header"" )"		2002029	2					
ANR	2002396	CallExpression	"BAD_CAST ( ""Header"" )"		2002029	0					
ANR	2002397	Callee	BAD_CAST		2002029	0					
ANR	2002398	Identifier	BAD_CAST		2002029	0					
ANR	2002399	ArgumentList	"""Header"""		2002029	1					
ANR	2002400	Argument	"""Header"""		2002029	0					
ANR	2002401	PrimaryExpression	"""Header"""		2002029	0					
ANR	2002402	Argument	NULL		2002029	3					
ANR	2002403	Identifier	NULL		2002029	0					
ANR	2002404	IfStatement	"if ( Z_TYPE_P ( hdr_ret ) == IS_OBJECT && instanceof_function ( Z_OBJCE_P ( hdr_ret ) , soap_header_class_entry ) )"		2002029	6					
ANR	2002405	Condition	"Z_TYPE_P ( hdr_ret ) == IS_OBJECT && instanceof_function ( Z_OBJCE_P ( hdr_ret ) , soap_header_class_entry )"	3899:7:130321:130425	2002029	0	True				
ANR	2002406	AndExpression	"Z_TYPE_P ( hdr_ret ) == IS_OBJECT && instanceof_function ( Z_OBJCE_P ( hdr_ret ) , soap_header_class_entry )"		2002029	0		&&			
ANR	2002407	EqualityExpression	Z_TYPE_P ( hdr_ret ) == IS_OBJECT		2002029	0		==			
ANR	2002408	CallExpression	Z_TYPE_P ( hdr_ret )		2002029	0					
ANR	2002409	Callee	Z_TYPE_P		2002029	0					
ANR	2002410	Identifier	Z_TYPE_P		2002029	0					
ANR	2002411	ArgumentList	hdr_ret		2002029	1					
ANR	2002412	Argument	hdr_ret		2002029	0					
ANR	2002413	Identifier	hdr_ret		2002029	0					
ANR	2002414	Identifier	IS_OBJECT		2002029	1					
ANR	2002415	CallExpression	"instanceof_function ( Z_OBJCE_P ( hdr_ret ) , soap_header_class_entry )"		2002029	1					
ANR	2002416	Callee	instanceof_function		2002029	0					
ANR	2002417	Identifier	instanceof_function		2002029	0					
ANR	2002418	ArgumentList	Z_OBJCE_P ( hdr_ret )		2002029	1					
ANR	2002419	Argument	Z_OBJCE_P ( hdr_ret )		2002029	0					
ANR	2002420	CallExpression	Z_OBJCE_P ( hdr_ret )		2002029	0					
ANR	2002421	Callee	Z_OBJCE_P		2002029	0					
ANR	2002422	Identifier	Z_OBJCE_P		2002029	0					
ANR	2002423	ArgumentList	hdr_ret		2002029	1					
ANR	2002424	Argument	hdr_ret		2002029	0					
ANR	2002425	Identifier	hdr_ret		2002029	0					
ANR	2002426	Argument	soap_header_class_entry		2002029	1					
ANR	2002427	Identifier	soap_header_class_entry		2002029	0					
ANR	2002428	CompoundStatement		50:4:1639:1658	2002029	1					
ANR	2002429	IdentifierDeclStatement	HashTable * ht = Z_OBJPROP_P ( hdr_ret ) ;	3901:4:130434:130470	2002029	0	True				
ANR	2002430	IdentifierDecl	* ht = Z_OBJPROP_P ( hdr_ret )		2002029	0					
ANR	2002431	IdentifierDeclType	HashTable *		2002029	0					
ANR	2002432	Identifier	ht		2002029	1					
ANR	2002433	AssignmentExpression	* ht = Z_OBJPROP_P ( hdr_ret )		2002029	2		=			
ANR	2002434	Identifier	ht		2002029	0					
ANR	2002435	CallExpression	Z_OBJPROP_P ( hdr_ret )		2002029	1					
ANR	2002436	Callee	Z_OBJPROP_P		2002029	0					
ANR	2002437	Identifier	Z_OBJPROP_P		2002029	0					
ANR	2002438	ArgumentList	hdr_ret		2002029	1					
ANR	2002439	Argument	hdr_ret		2002029	0					
ANR	2002440	Identifier	hdr_ret		2002029	0					
ANR	2002441	IdentifierDeclStatement	sdlSoapBindingFunctionHeaderPtr hdr ;	3902:4:130476:130511	2002029	1	True				
ANR	2002442	IdentifierDecl	hdr		2002029	0					
ANR	2002443	IdentifierDeclType	sdlSoapBindingFunctionHeaderPtr		2002029	0					
ANR	2002444	Identifier	hdr		2002029	1					
ANR	2002445	IdentifierDeclStatement	smart_str key = { 0 } ;	3903:4:130517:130536	2002029	2	True				
ANR	2002446	IdentifierDecl	key = { 0 }		2002029	0					
ANR	2002447	IdentifierDeclType	smart_str		2002029	0					
ANR	2002448	Identifier	key		2002029	1					
ANR	2002449	AssignmentExpression	key = { 0 }		2002029	2		=			
ANR	2002450	Identifier	key		2002029	0					
ANR	2002451	InitializerList	0		2002029	1					
ANR	2002452	PrimaryExpression	0		2002029	0					
ANR	2002453	IfStatement	"if ( ( tmp = zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING )"		2002029	3					
ANR	2002454	Condition	"( tmp = zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"	3905:8:130547:130659	2002029	0	True				
ANR	2002455	AndExpression	"( tmp = zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"		2002029	0		&&			
ANR	2002456	EqualityExpression	"( tmp = zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 ) ) != NULL"		2002029	0		!=			
ANR	2002457	AssignmentExpression	"tmp = zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 )"		2002029	0		=			
ANR	2002458	Identifier	tmp		2002029	0					
ANR	2002459	CallExpression	"zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 )"		2002029	1					
ANR	2002460	Callee	zend_hash_str_find		2002029	0					
ANR	2002461	Identifier	zend_hash_str_find		2002029	0					
ANR	2002462	ArgumentList	ht		2002029	1					
ANR	2002463	Argument	ht		2002029	0					
ANR	2002464	Identifier	ht		2002029	0					
ANR	2002465	Argument	"""namespace"""		2002029	1					
ANR	2002466	PrimaryExpression	"""namespace"""		2002029	0					
ANR	2002467	Argument	"sizeof ( ""namespace"" ) - 1"		2002029	2					
ANR	2002468	AdditiveExpression	"sizeof ( ""namespace"" ) - 1"		2002029	0		-			
ANR	2002469	SizeofExpression	"sizeof ( ""namespace"" )"		2002029	0					
ANR	2002470	Sizeof	sizeof		2002029	0					
ANR	2002471	PrimaryExpression	"""namespace"""		2002029	1					
ANR	2002472	PrimaryExpression	1		2002029	1					
ANR	2002473	Identifier	NULL		2002029	1					
ANR	2002474	EqualityExpression	Z_TYPE_P ( tmp ) == IS_STRING		2002029	1		==			
ANR	2002475	CallExpression	Z_TYPE_P ( tmp )		2002029	0					
ANR	2002476	Callee	Z_TYPE_P		2002029	0					
ANR	2002477	Identifier	Z_TYPE_P		2002029	0					
ANR	2002478	ArgumentList	tmp		2002029	1					
ANR	2002479	Argument	tmp		2002029	0					
ANR	2002480	Identifier	tmp		2002029	0					
ANR	2002481	Identifier	IS_STRING		2002029	1					
ANR	2002482	CompoundStatement		53:37:1784:1784	2002029	1					
ANR	2002483	ExpressionStatement	"smart_str_appendl ( & key , Z_STRVAL_P ( tmp ) , Z_STRLEN_P ( tmp ) )"	3907:5:130669:130726	2002029	0	True				
ANR	2002484	CallExpression	"smart_str_appendl ( & key , Z_STRVAL_P ( tmp ) , Z_STRLEN_P ( tmp ) )"		2002029	0					
ANR	2002485	Callee	smart_str_appendl		2002029	0					
ANR	2002486	Identifier	smart_str_appendl		2002029	0					
ANR	2002487	ArgumentList	& key		2002029	1					
ANR	2002488	Argument	& key		2002029	0					
ANR	2002489	UnaryOperationExpression	& key		2002029	0					
ANR	2002490	UnaryOperator	&		2002029	0					
ANR	2002491	Identifier	key		2002029	1					
ANR	2002492	Argument	Z_STRVAL_P ( tmp )		2002029	1					
ANR	2002493	CallExpression	Z_STRVAL_P ( tmp )		2002029	0					
ANR	2002494	Callee	Z_STRVAL_P		2002029	0					
ANR	2002495	Identifier	Z_STRVAL_P		2002029	0					
ANR	2002496	ArgumentList	tmp		2002029	1					
ANR	2002497	Argument	tmp		2002029	0					
ANR	2002498	Identifier	tmp		2002029	0					
ANR	2002499	Argument	Z_STRLEN_P ( tmp )		2002029	2					
ANR	2002500	CallExpression	Z_STRLEN_P ( tmp )		2002029	0					
ANR	2002501	Callee	Z_STRLEN_P		2002029	0					
ANR	2002502	Identifier	Z_STRLEN_P		2002029	0					
ANR	2002503	ArgumentList	tmp		2002029	1					
ANR	2002504	Argument	tmp		2002029	0					
ANR	2002505	Identifier	tmp		2002029	0					
ANR	2002506	ExpressionStatement	"smart_str_appendc ( & key , ':' )"	3908:5:130733:130761	2002029	1	True				
ANR	2002507	CallExpression	"smart_str_appendc ( & key , ':' )"		2002029	0					
ANR	2002508	Callee	smart_str_appendc		2002029	0					
ANR	2002509	Identifier	smart_str_appendc		2002029	0					
ANR	2002510	ArgumentList	& key		2002029	1					
ANR	2002511	Argument	& key		2002029	0					
ANR	2002512	UnaryOperationExpression	& key		2002029	0					
ANR	2002513	UnaryOperator	&		2002029	0					
ANR	2002514	Identifier	key		2002029	1					
ANR	2002515	Argument	':'		2002029	1					
ANR	2002516	PrimaryExpression	':'		2002029	0					
ANR	2002517	ExpressionStatement	hdr_ns = Z_STRVAL_P ( tmp )	3909:5:130768:130792	2002029	2	True				
ANR	2002518	AssignmentExpression	hdr_ns = Z_STRVAL_P ( tmp )		2002029	0		=			
ANR	2002519	Identifier	hdr_ns		2002029	0					
ANR	2002520	CallExpression	Z_STRVAL_P ( tmp )		2002029	1					
ANR	2002521	Callee	Z_STRVAL_P		2002029	0					
ANR	2002522	Identifier	Z_STRVAL_P		2002029	0					
ANR	2002523	ArgumentList	tmp		2002029	1					
ANR	2002524	Argument	tmp		2002029	0					
ANR	2002525	Identifier	tmp		2002029	0					
ANR	2002526	IfStatement	"if ( ( tmp = zend_hash_str_find ( ht , ""name"" , sizeof ( ""name"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING )"		2002029	4					
ANR	2002527	Condition	"( tmp = zend_hash_str_find ( ht , ""name"" , sizeof ( ""name"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"	3911:8:130808:130909	2002029	0	True				
ANR	2002528	AndExpression	"( tmp = zend_hash_str_find ( ht , ""name"" , sizeof ( ""name"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"		2002029	0		&&			
ANR	2002529	EqualityExpression	"( tmp = zend_hash_str_find ( ht , ""name"" , sizeof ( ""name"" ) - 1 ) ) != NULL"		2002029	0		!=			
ANR	2002530	AssignmentExpression	"tmp = zend_hash_str_find ( ht , ""name"" , sizeof ( ""name"" ) - 1 )"		2002029	0		=			
ANR	2002531	Identifier	tmp		2002029	0					
ANR	2002532	CallExpression	"zend_hash_str_find ( ht , ""name"" , sizeof ( ""name"" ) - 1 )"		2002029	1					
ANR	2002533	Callee	zend_hash_str_find		2002029	0					
ANR	2002534	Identifier	zend_hash_str_find		2002029	0					
ANR	2002535	ArgumentList	ht		2002029	1					
ANR	2002536	Argument	ht		2002029	0					
ANR	2002537	Identifier	ht		2002029	0					
ANR	2002538	Argument	"""name"""		2002029	1					
ANR	2002539	PrimaryExpression	"""name"""		2002029	0					
ANR	2002540	Argument	"sizeof ( ""name"" ) - 1"		2002029	2					
ANR	2002541	AdditiveExpression	"sizeof ( ""name"" ) - 1"		2002029	0		-			
ANR	2002542	SizeofExpression	"sizeof ( ""name"" )"		2002029	0					
ANR	2002543	Sizeof	sizeof		2002029	0					
ANR	2002544	PrimaryExpression	"""name"""		2002029	1					
ANR	2002545	PrimaryExpression	1		2002029	1					
ANR	2002546	Identifier	NULL		2002029	1					
ANR	2002547	EqualityExpression	Z_TYPE_P ( tmp ) == IS_STRING		2002029	1		==			
ANR	2002548	CallExpression	Z_TYPE_P ( tmp )		2002029	0					
ANR	2002549	Callee	Z_TYPE_P		2002029	0					
ANR	2002550	Identifier	Z_TYPE_P		2002029	0					
ANR	2002551	ArgumentList	tmp		2002029	1					
ANR	2002552	Argument	tmp		2002029	0					
ANR	2002553	Identifier	tmp		2002029	0					
ANR	2002554	Identifier	IS_STRING		2002029	1					
ANR	2002555	CompoundStatement		59:36:2034:2034	2002029	1					
ANR	2002556	ExpressionStatement	"smart_str_appendl ( & key , Z_STRVAL_P ( tmp ) , Z_STRLEN_P ( tmp ) )"	3913:5:130919:130976	2002029	0	True				
ANR	2002557	CallExpression	"smart_str_appendl ( & key , Z_STRVAL_P ( tmp ) , Z_STRLEN_P ( tmp ) )"		2002029	0					
ANR	2002558	Callee	smart_str_appendl		2002029	0					
ANR	2002559	Identifier	smart_str_appendl		2002029	0					
ANR	2002560	ArgumentList	& key		2002029	1					
ANR	2002561	Argument	& key		2002029	0					
ANR	2002562	UnaryOperationExpression	& key		2002029	0					
ANR	2002563	UnaryOperator	&		2002029	0					
ANR	2002564	Identifier	key		2002029	1					
ANR	2002565	Argument	Z_STRVAL_P ( tmp )		2002029	1					
ANR	2002566	CallExpression	Z_STRVAL_P ( tmp )		2002029	0					
ANR	2002567	Callee	Z_STRVAL_P		2002029	0					
ANR	2002568	Identifier	Z_STRVAL_P		2002029	0					
ANR	2002569	ArgumentList	tmp		2002029	1					
ANR	2002570	Argument	tmp		2002029	0					
ANR	2002571	Identifier	tmp		2002029	0					
ANR	2002572	Argument	Z_STRLEN_P ( tmp )		2002029	2					
ANR	2002573	CallExpression	Z_STRLEN_P ( tmp )		2002029	0					
ANR	2002574	Callee	Z_STRLEN_P		2002029	0					
ANR	2002575	Identifier	Z_STRLEN_P		2002029	0					
ANR	2002576	ArgumentList	tmp		2002029	1					
ANR	2002577	Argument	tmp		2002029	0					
ANR	2002578	Identifier	tmp		2002029	0					
ANR	2002579	ExpressionStatement	hdr_name = Z_STRVAL_P ( tmp )	3914:5:130983:131009	2002029	1	True				
ANR	2002580	AssignmentExpression	hdr_name = Z_STRVAL_P ( tmp )		2002029	0		=			
ANR	2002581	Identifier	hdr_name		2002029	0					
ANR	2002582	CallExpression	Z_STRVAL_P ( tmp )		2002029	1					
ANR	2002583	Callee	Z_STRVAL_P		2002029	0					
ANR	2002584	Identifier	Z_STRVAL_P		2002029	0					
ANR	2002585	ArgumentList	tmp		2002029	1					
ANR	2002586	Argument	tmp		2002029	0					
ANR	2002587	Identifier	tmp		2002029	0					
ANR	2002588	ExpressionStatement	smart_str_0 ( & key )	3916:4:131021:131038	2002029	5	True				
ANR	2002589	CallExpression	smart_str_0 ( & key )		2002029	0					
ANR	2002590	Callee	smart_str_0		2002029	0					
ANR	2002591	Identifier	smart_str_0		2002029	0					
ANR	2002592	ArgumentList	& key		2002029	1					
ANR	2002593	Argument	& key		2002029	0					
ANR	2002594	UnaryOperationExpression	& key		2002029	0					
ANR	2002595	UnaryOperator	&		2002029	0					
ANR	2002596	Identifier	key		2002029	1					
ANR	2002597	IfStatement	"if ( headers -> hdr && headers -> hdr -> headerfaults && ( hdr = zend_hash_find_ptr ( headers -> hdr -> headerfaults , key . s ) ) != NULL )"		2002029	6					
ANR	2002598	Condition	"headers -> hdr && headers -> hdr -> headerfaults && ( hdr = zend_hash_find_ptr ( headers -> hdr -> headerfaults , key . s ) ) != NULL"	3917:8:131048:131170	2002029	0	True				
ANR	2002599	AndExpression	"headers -> hdr && headers -> hdr -> headerfaults && ( hdr = zend_hash_find_ptr ( headers -> hdr -> headerfaults , key . s ) ) != NULL"		2002029	0		&&			
ANR	2002600	PtrMemberAccess	headers -> hdr		2002029	0					
ANR	2002601	Identifier	headers		2002029	0					
ANR	2002602	Identifier	hdr		2002029	1					
ANR	2002603	AndExpression	"headers -> hdr -> headerfaults && ( hdr = zend_hash_find_ptr ( headers -> hdr -> headerfaults , key . s ) ) != NULL"		2002029	1		&&			
ANR	2002604	PtrMemberAccess	headers -> hdr -> headerfaults		2002029	0					
ANR	2002605	PtrMemberAccess	headers -> hdr		2002029	0					
ANR	2002606	Identifier	headers		2002029	0					
ANR	2002607	Identifier	hdr		2002029	1					
ANR	2002608	Identifier	headerfaults		2002029	1					
ANR	2002609	EqualityExpression	"( hdr = zend_hash_find_ptr ( headers -> hdr -> headerfaults , key . s ) ) != NULL"		2002029	1		!=			
ANR	2002610	AssignmentExpression	"hdr = zend_hash_find_ptr ( headers -> hdr -> headerfaults , key . s )"		2002029	0		=			
ANR	2002611	Identifier	hdr		2002029	0					
ANR	2002612	CallExpression	"zend_hash_find_ptr ( headers -> hdr -> headerfaults , key . s )"		2002029	1					
ANR	2002613	Callee	zend_hash_find_ptr		2002029	0					
ANR	2002614	Identifier	zend_hash_find_ptr		2002029	0					
ANR	2002615	ArgumentList	headers -> hdr -> headerfaults		2002029	1					
ANR	2002616	Argument	headers -> hdr -> headerfaults		2002029	0					
ANR	2002617	PtrMemberAccess	headers -> hdr -> headerfaults		2002029	0					
ANR	2002618	PtrMemberAccess	headers -> hdr		2002029	0					
ANR	2002619	Identifier	headers		2002029	0					
ANR	2002620	Identifier	hdr		2002029	1					
ANR	2002621	Identifier	headerfaults		2002029	1					
ANR	2002622	Argument	key . s		2002029	1					
ANR	2002623	MemberAccess	key . s		2002029	0					
ANR	2002624	Identifier	key		2002029	0					
ANR	2002625	Identifier	s		2002029	1					
ANR	2002626	Identifier	NULL		2002029	1					
ANR	2002627	CompoundStatement		65:79:2295:2295	2002029	1					
ANR	2002628	ExpressionStatement	hdr_enc = hdr -> encode	3919:5:131180:131201	2002029	0	True				
ANR	2002629	AssignmentExpression	hdr_enc = hdr -> encode		2002029	0		=			
ANR	2002630	Identifier	hdr_enc		2002029	0					
ANR	2002631	PtrMemberAccess	hdr -> encode		2002029	1					
ANR	2002632	Identifier	hdr		2002029	0					
ANR	2002633	Identifier	encode		2002029	1					
ANR	2002634	ExpressionStatement	hdr_use = hdr -> use	3920:5:131208:131226	2002029	1	True				
ANR	2002635	AssignmentExpression	hdr_use = hdr -> use		2002029	0		=			
ANR	2002636	Identifier	hdr_use		2002029	0					
ANR	2002637	PtrMemberAccess	hdr -> use		2002029	1					
ANR	2002638	Identifier	hdr		2002029	0					
ANR	2002639	Identifier	use		2002029	1					
ANR	2002640	ExpressionStatement	smart_str_free ( & key )	3922:4:131238:131258	2002029	7	True				
ANR	2002641	CallExpression	smart_str_free ( & key )		2002029	0					
ANR	2002642	Callee	smart_str_free		2002029	0					
ANR	2002643	Identifier	smart_str_free		2002029	0					
ANR	2002644	ArgumentList	& key		2002029	1					
ANR	2002645	Argument	& key		2002029	0					
ANR	2002646	UnaryOperationExpression	& key		2002029	0					
ANR	2002647	UnaryOperator	&		2002029	0					
ANR	2002648	Identifier	key		2002029	1					
ANR	2002649	IfStatement	"if ( ( tmp = zend_hash_str_find ( ht , ""data"" , sizeof ( ""data"" ) - 1 ) ) != NULL )"		2002029	8					
ANR	2002650	Condition	"( tmp = zend_hash_str_find ( ht , ""data"" , sizeof ( ""data"" ) - 1 ) ) != NULL"	3923:8:131268:131331	2002029	0	True				
ANR	2002651	EqualityExpression	"( tmp = zend_hash_str_find ( ht , ""data"" , sizeof ( ""data"" ) - 1 ) ) != NULL"		2002029	0		!=			
ANR	2002652	AssignmentExpression	"tmp = zend_hash_str_find ( ht , ""data"" , sizeof ( ""data"" ) - 1 )"		2002029	0		=			
ANR	2002653	Identifier	tmp		2002029	0					
ANR	2002654	CallExpression	"zend_hash_str_find ( ht , ""data"" , sizeof ( ""data"" ) - 1 )"		2002029	1					
ANR	2002655	Callee	zend_hash_str_find		2002029	0					
ANR	2002656	Identifier	zend_hash_str_find		2002029	0					
ANR	2002657	ArgumentList	ht		2002029	1					
ANR	2002658	Argument	ht		2002029	0					
ANR	2002659	Identifier	ht		2002029	0					
ANR	2002660	Argument	"""data"""		2002029	1					
ANR	2002661	PrimaryExpression	"""data"""		2002029	0					
ANR	2002662	Argument	"sizeof ( ""data"" ) - 1"		2002029	2					
ANR	2002663	AdditiveExpression	"sizeof ( ""data"" ) - 1"		2002029	0		-			
ANR	2002664	SizeofExpression	"sizeof ( ""data"" )"		2002029	0					
ANR	2002665	Sizeof	sizeof		2002029	0					
ANR	2002666	PrimaryExpression	"""data"""		2002029	1					
ANR	2002667	PrimaryExpression	1		2002029	1					
ANR	2002668	Identifier	NULL		2002029	1					
ANR	2002669	CompoundStatement		70:74:2456:2456	2002029	1					
ANR	2002670	ExpressionStatement	hdr_ret = tmp	3924:5:131341:131354	2002029	0	True				
ANR	2002671	AssignmentExpression	hdr_ret = tmp		2002029	0		=			
ANR	2002672	Identifier	hdr_ret		2002029	0					
ANR	2002673	Identifier	tmp		2002029	1					
ANR	2002674	ElseStatement	else		2002029	0					
ANR	2002675	CompoundStatement		72:11:2489:2489	2002029	0					
ANR	2002676	ExpressionStatement	hdr_ret = NULL	3926:5:131374:131388	2002029	0	True				
ANR	2002677	AssignmentExpression	hdr_ret = NULL		2002029	0		=			
ANR	2002678	Identifier	hdr_ret		2002029	0					
ANR	2002679	Identifier	NULL		2002029	1					
ANR	2002680	IfStatement	if ( headers -> function )		2002029	7					
ANR	2002681	Condition	headers -> function	3930:7:131409:131425	2002029	0	True				
ANR	2002682	PtrMemberAccess	headers -> function		2002029	0					
ANR	2002683	Identifier	headers		2002029	0					
ANR	2002684	Identifier	function		2002029	1					
ANR	2002685	CompoundStatement		77:26:2550:2550	2002029	1					
ANR	2002686	IfStatement	"if ( serialize_response_call2 ( head , headers -> function , Z_STRVAL ( headers -> function_name ) , uri , hdr_ret , version , 0 , NULL ) == SOAP_ENCODED )"		2002029	0					
ANR	2002687	Condition	"serialize_response_call2 ( head , headers -> function , Z_STRVAL ( headers -> function_name ) , uri , hdr_ret , version , 0 , NULL ) == SOAP_ENCODED"	3931:8:131438:131568	2002029	0	True				
ANR	2002688	EqualityExpression	"serialize_response_call2 ( head , headers -> function , Z_STRVAL ( headers -> function_name ) , uri , hdr_ret , version , 0 , NULL ) == SOAP_ENCODED"		2002029	0		==			
ANR	2002689	CallExpression	"serialize_response_call2 ( head , headers -> function , Z_STRVAL ( headers -> function_name ) , uri , hdr_ret , version , 0 , NULL )"		2002029	0					
ANR	2002690	Callee	serialize_response_call2		2002029	0					
ANR	2002691	Identifier	serialize_response_call2		2002029	0					
ANR	2002692	ArgumentList	head		2002029	1					
ANR	2002693	Argument	head		2002029	0					
ANR	2002694	Identifier	head		2002029	0					
ANR	2002695	Argument	headers -> function		2002029	1					
ANR	2002696	PtrMemberAccess	headers -> function		2002029	0					
ANR	2002697	Identifier	headers		2002029	0					
ANR	2002698	Identifier	function		2002029	1					
ANR	2002699	Argument	Z_STRVAL ( headers -> function_name )		2002029	2					
ANR	2002700	CallExpression	Z_STRVAL ( headers -> function_name )		2002029	0					
ANR	2002701	Callee	Z_STRVAL		2002029	0					
ANR	2002702	Identifier	Z_STRVAL		2002029	0					
ANR	2002703	ArgumentList	headers -> function_name		2002029	1					
ANR	2002704	Argument	headers -> function_name		2002029	0					
ANR	2002705	PtrMemberAccess	headers -> function_name		2002029	0					
ANR	2002706	Identifier	headers		2002029	0					
ANR	2002707	Identifier	function_name		2002029	1					
ANR	2002708	Argument	uri		2002029	3					
ANR	2002709	Identifier	uri		2002029	0					
ANR	2002710	Argument	hdr_ret		2002029	4					
ANR	2002711	Identifier	hdr_ret		2002029	0					
ANR	2002712	Argument	version		2002029	5					
ANR	2002713	Identifier	version		2002029	0					
ANR	2002714	Argument	0		2002029	6					
ANR	2002715	PrimaryExpression	0		2002029	0					
ANR	2002716	Argument	NULL		2002029	7					
ANR	2002717	Identifier	NULL		2002029	0					
ANR	2002718	Identifier	SOAP_ENCODED		2002029	1					
ANR	2002719	CompoundStatement		78:141:2693:2693	2002029	1					
ANR	2002720	ExpressionStatement	use = SOAP_ENCODED	3932:5:131578:131596	2002029	0	True				
ANR	2002721	AssignmentExpression	use = SOAP_ENCODED		2002029	0		=			
ANR	2002722	Identifier	use		2002029	0					
ANR	2002723	Identifier	SOAP_ENCODED		2002029	1					
ANR	2002724	ElseStatement	else		2002029	0					
ANR	2002725	CompoundStatement		82:4:2742:2808	2002029	0					
ANR	2002726	IdentifierDeclStatement	"xmlNodePtr xmlHdr = master_to_xml ( hdr_enc , hdr_ret , hdr_use , head ) ;"	3935:4:131620:131686	2002029	0	True				
ANR	2002727	IdentifierDecl	"xmlHdr = master_to_xml ( hdr_enc , hdr_ret , hdr_use , head )"		2002029	0					
ANR	2002728	IdentifierDeclType	xmlNodePtr		2002029	0					
ANR	2002729	Identifier	xmlHdr		2002029	1					
ANR	2002730	AssignmentExpression	"xmlHdr = master_to_xml ( hdr_enc , hdr_ret , hdr_use , head )"		2002029	2		=			
ANR	2002731	Identifier	xmlHdr		2002029	0					
ANR	2002732	CallExpression	"master_to_xml ( hdr_enc , hdr_ret , hdr_use , head )"		2002029	1					
ANR	2002733	Callee	master_to_xml		2002029	0					
ANR	2002734	Identifier	master_to_xml		2002029	0					
ANR	2002735	ArgumentList	hdr_enc		2002029	1					
ANR	2002736	Argument	hdr_enc		2002029	0					
ANR	2002737	Identifier	hdr_enc		2002029	0					
ANR	2002738	Argument	hdr_ret		2002029	1					
ANR	2002739	Identifier	hdr_ret		2002029	0					
ANR	2002740	Argument	hdr_use		2002029	2					
ANR	2002741	Identifier	hdr_use		2002029	0					
ANR	2002742	Argument	head		2002029	3					
ANR	2002743	Identifier	head		2002029	0					
ANR	2002744	IfStatement	if ( hdr_name )		2002029	1					
ANR	2002745	Condition	hdr_name	3936:8:131696:131703	2002029	0	True				
ANR	2002746	Identifier	hdr_name		2002029	0					
ANR	2002747	CompoundStatement		83:18:2828:2828	2002029	1					
ANR	2002748	ExpressionStatement	"xmlNodeSetName ( xmlHdr , BAD_CAST ( hdr_name ) )"	3937:5:131713:131755	2002029	0	True				
ANR	2002749	CallExpression	"xmlNodeSetName ( xmlHdr , BAD_CAST ( hdr_name ) )"		2002029	0					
ANR	2002750	Callee	xmlNodeSetName		2002029	0					
ANR	2002751	Identifier	xmlNodeSetName		2002029	0					
ANR	2002752	ArgumentList	xmlHdr		2002029	1					
ANR	2002753	Argument	xmlHdr		2002029	0					
ANR	2002754	Identifier	xmlHdr		2002029	0					
ANR	2002755	Argument	BAD_CAST ( hdr_name )		2002029	1					
ANR	2002756	CallExpression	BAD_CAST ( hdr_name )		2002029	0					
ANR	2002757	Callee	BAD_CAST		2002029	0					
ANR	2002758	Identifier	BAD_CAST		2002029	0					
ANR	2002759	ArgumentList	hdr_name		2002029	1					
ANR	2002760	Argument	hdr_name		2002029	0					
ANR	2002761	Identifier	hdr_name		2002029	0					
ANR	2002762	IfStatement	if ( hdr_ns )		2002029	2					
ANR	2002763	Condition	hdr_ns	3939:8:131771:131776	2002029	0	True				
ANR	2002764	Identifier	hdr_ns		2002029	0					
ANR	2002765	CompoundStatement		87:5:2908:2954	2002029	1					
ANR	2002766	IdentifierDeclStatement	"xmlNsPtr nsptr = encode_add_ns ( xmlHdr , hdr_ns ) ;"	3940:5:131786:131832	2002029	0	True				
ANR	2002767	IdentifierDecl	"nsptr = encode_add_ns ( xmlHdr , hdr_ns )"		2002029	0					
ANR	2002768	IdentifierDeclType	xmlNsPtr		2002029	0					
ANR	2002769	Identifier	nsptr		2002029	1					
ANR	2002770	AssignmentExpression	"nsptr = encode_add_ns ( xmlHdr , hdr_ns )"		2002029	2		=			
ANR	2002771	Identifier	nsptr		2002029	0					
ANR	2002772	CallExpression	"encode_add_ns ( xmlHdr , hdr_ns )"		2002029	1					
ANR	2002773	Callee	encode_add_ns		2002029	0					
ANR	2002774	Identifier	encode_add_ns		2002029	0					
ANR	2002775	ArgumentList	xmlHdr		2002029	1					
ANR	2002776	Argument	xmlHdr		2002029	0					
ANR	2002777	Identifier	xmlHdr		2002029	0					
ANR	2002778	Argument	hdr_ns		2002029	1					
ANR	2002779	Identifier	hdr_ns		2002029	0					
ANR	2002780	ExpressionStatement	"xmlSetNs ( xmlHdr , nsptr )"	3941:5:131839:131862	2002029	1	True				
ANR	2002781	CallExpression	"xmlSetNs ( xmlHdr , nsptr )"		2002029	0					
ANR	2002782	Callee	xmlSetNs		2002029	0					
ANR	2002783	Identifier	xmlSetNs		2002029	0					
ANR	2002784	ArgumentList	xmlHdr		2002029	1					
ANR	2002785	Argument	xmlHdr		2002029	0					
ANR	2002786	Identifier	xmlHdr		2002029	0					
ANR	2002787	Argument	nsptr		2002029	1					
ANR	2002788	Identifier	nsptr		2002029	0					
ANR	2002789	ExpressionStatement	"body = xmlNewChild ( envelope , ns , BAD_CAST ( ""Body"" ) , NULL )"	3946:2:131882:131938	2002029	7	True				
ANR	2002790	AssignmentExpression	"body = xmlNewChild ( envelope , ns , BAD_CAST ( ""Body"" ) , NULL )"		2002029	0		=			
ANR	2002791	Identifier	body		2002029	0					
ANR	2002792	CallExpression	"xmlNewChild ( envelope , ns , BAD_CAST ( ""Body"" ) , NULL )"		2002029	1					
ANR	2002793	Callee	xmlNewChild		2002029	0					
ANR	2002794	Identifier	xmlNewChild		2002029	0					
ANR	2002795	ArgumentList	envelope		2002029	1					
ANR	2002796	Argument	envelope		2002029	0					
ANR	2002797	Identifier	envelope		2002029	0					
ANR	2002798	Argument	ns		2002029	1					
ANR	2002799	Identifier	ns		2002029	0					
ANR	2002800	Argument	"BAD_CAST ( ""Body"" )"		2002029	2					
ANR	2002801	CallExpression	"BAD_CAST ( ""Body"" )"		2002029	0					
ANR	2002802	Callee	BAD_CAST		2002029	0					
ANR	2002803	Identifier	BAD_CAST		2002029	0					
ANR	2002804	ArgumentList	"""Body"""		2002029	1					
ANR	2002805	Argument	"""Body"""		2002029	0					
ANR	2002806	PrimaryExpression	"""Body"""		2002029	0					
ANR	2002807	Argument	NULL		2002029	3					
ANR	2002808	Identifier	NULL		2002029	0					
ANR	2002809	ExpressionStatement	"param = xmlNewChild ( body , ns , BAD_CAST ( ""Fault"" ) , NULL )"	3947:2:131942:131996	2002029	8	True				
ANR	2002810	AssignmentExpression	"param = xmlNewChild ( body , ns , BAD_CAST ( ""Fault"" ) , NULL )"		2002029	0		=			
ANR	2002811	Identifier	param		2002029	0					
ANR	2002812	CallExpression	"xmlNewChild ( body , ns , BAD_CAST ( ""Fault"" ) , NULL )"		2002029	1					
ANR	2002813	Callee	xmlNewChild		2002029	0					
ANR	2002814	Identifier	xmlNewChild		2002029	0					
ANR	2002815	ArgumentList	body		2002029	1					
ANR	2002816	Argument	body		2002029	0					
ANR	2002817	Identifier	body		2002029	0					
ANR	2002818	Argument	ns		2002029	1					
ANR	2002819	Identifier	ns		2002029	0					
ANR	2002820	Argument	"BAD_CAST ( ""Fault"" )"		2002029	2					
ANR	2002821	CallExpression	"BAD_CAST ( ""Fault"" )"		2002029	0					
ANR	2002822	Callee	BAD_CAST		2002029	0					
ANR	2002823	Identifier	BAD_CAST		2002029	0					
ANR	2002824	ArgumentList	"""Fault"""		2002029	1					
ANR	2002825	Argument	"""Fault"""		2002029	0					
ANR	2002826	PrimaryExpression	"""Fault"""		2002029	0					
ANR	2002827	Argument	NULL		2002029	3					
ANR	2002828	Identifier	NULL		2002029	0					
ANR	2002829	IfStatement	"if ( ( tmp = zend_hash_str_find ( prop , ""faultcodens"" , sizeof ( ""faultcodens"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING )"		2002029	9					
ANR	2002830	Condition	"( tmp = zend_hash_str_find ( prop , ""faultcodens"" , sizeof ( ""faultcodens"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"	3949:6:132005:132114	2002029	0	True				
ANR	2002831	AndExpression	"( tmp = zend_hash_str_find ( prop , ""faultcodens"" , sizeof ( ""faultcodens"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"		2002029	0		&&			
ANR	2002832	EqualityExpression	"( tmp = zend_hash_str_find ( prop , ""faultcodens"" , sizeof ( ""faultcodens"" ) - 1 ) ) != NULL"		2002029	0		!=			
ANR	2002833	AssignmentExpression	"tmp = zend_hash_str_find ( prop , ""faultcodens"" , sizeof ( ""faultcodens"" ) - 1 )"		2002029	0		=			
ANR	2002834	Identifier	tmp		2002029	0					
ANR	2002835	CallExpression	"zend_hash_str_find ( prop , ""faultcodens"" , sizeof ( ""faultcodens"" ) - 1 )"		2002029	1					
ANR	2002836	Callee	zend_hash_str_find		2002029	0					
ANR	2002837	Identifier	zend_hash_str_find		2002029	0					
ANR	2002838	ArgumentList	prop		2002029	1					
ANR	2002839	Argument	prop		2002029	0					
ANR	2002840	Identifier	prop		2002029	0					
ANR	2002841	Argument	"""faultcodens"""		2002029	1					
ANR	2002842	PrimaryExpression	"""faultcodens"""		2002029	0					
ANR	2002843	Argument	"sizeof ( ""faultcodens"" ) - 1"		2002029	2					
ANR	2002844	AdditiveExpression	"sizeof ( ""faultcodens"" ) - 1"		2002029	0		-			
ANR	2002845	SizeofExpression	"sizeof ( ""faultcodens"" )"		2002029	0					
ANR	2002846	Sizeof	sizeof		2002029	0					
ANR	2002847	PrimaryExpression	"""faultcodens"""		2002029	1					
ANR	2002848	PrimaryExpression	1		2002029	1					
ANR	2002849	Identifier	NULL		2002029	1					
ANR	2002850	EqualityExpression	Z_TYPE_P ( tmp ) == IS_STRING		2002029	1		==			
ANR	2002851	CallExpression	Z_TYPE_P ( tmp )		2002029	0					
ANR	2002852	Callee	Z_TYPE_P		2002029	0					
ANR	2002853	Identifier	Z_TYPE_P		2002029	0					
ANR	2002854	ArgumentList	tmp		2002029	1					
ANR	2002855	Argument	tmp		2002029	0					
ANR	2002856	Identifier	tmp		2002029	0					
ANR	2002857	Identifier	IS_STRING		2002029	1					
ANR	2002858	CompoundStatement		96:118:3239:3239	2002029	1					
ANR	2002859	ExpressionStatement	fault_ns = Z_STRVAL_P ( tmp )	3950:3:132122:132148	2002029	0	True				
ANR	2002860	AssignmentExpression	fault_ns = Z_STRVAL_P ( tmp )		2002029	0		=			
ANR	2002861	Identifier	fault_ns		2002029	0					
ANR	2002862	CallExpression	Z_STRVAL_P ( tmp )		2002029	1					
ANR	2002863	Callee	Z_STRVAL_P		2002029	0					
ANR	2002864	Identifier	Z_STRVAL_P		2002029	0					
ANR	2002865	ArgumentList	tmp		2002029	1					
ANR	2002866	Argument	tmp		2002029	0					
ANR	2002867	Identifier	tmp		2002029	0					
ANR	2002868	ExpressionStatement	use = SOAP_LITERAL	3952:2:132156:132174	2002029	10	True				
ANR	2002869	AssignmentExpression	use = SOAP_LITERAL		2002029	0		=			
ANR	2002870	Identifier	use		2002029	0					
ANR	2002871	Identifier	SOAP_LITERAL		2002029	1					
ANR	2002872	IfStatement	"if ( ( tmp = zend_hash_str_find ( prop , ""_name"" , sizeof ( ""_name"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING )"		2002029	11					
ANR	2002873	Condition	"( tmp = zend_hash_str_find ( prop , ""_name"" , sizeof ( ""_name"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"	3953:6:132182:132279	2002029	0	True				
ANR	2002874	AndExpression	"( tmp = zend_hash_str_find ( prop , ""_name"" , sizeof ( ""_name"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"		2002029	0		&&			
ANR	2002875	EqualityExpression	"( tmp = zend_hash_str_find ( prop , ""_name"" , sizeof ( ""_name"" ) - 1 ) ) != NULL"		2002029	0		!=			
ANR	2002876	AssignmentExpression	"tmp = zend_hash_str_find ( prop , ""_name"" , sizeof ( ""_name"" ) - 1 )"		2002029	0		=			
ANR	2002877	Identifier	tmp		2002029	0					
ANR	2002878	CallExpression	"zend_hash_str_find ( prop , ""_name"" , sizeof ( ""_name"" ) - 1 )"		2002029	1					
ANR	2002879	Callee	zend_hash_str_find		2002029	0					
ANR	2002880	Identifier	zend_hash_str_find		2002029	0					
ANR	2002881	ArgumentList	prop		2002029	1					
ANR	2002882	Argument	prop		2002029	0					
ANR	2002883	Identifier	prop		2002029	0					
ANR	2002884	Argument	"""_name"""		2002029	1					
ANR	2002885	PrimaryExpression	"""_name"""		2002029	0					
ANR	2002886	Argument	"sizeof ( ""_name"" ) - 1"		2002029	2					
ANR	2002887	AdditiveExpression	"sizeof ( ""_name"" ) - 1"		2002029	0		-			
ANR	2002888	SizeofExpression	"sizeof ( ""_name"" )"		2002029	0					
ANR	2002889	Sizeof	sizeof		2002029	0					
ANR	2002890	PrimaryExpression	"""_name"""		2002029	1					
ANR	2002891	PrimaryExpression	1		2002029	1					
ANR	2002892	Identifier	NULL		2002029	1					
ANR	2002893	EqualityExpression	Z_TYPE_P ( tmp ) == IS_STRING		2002029	1		==			
ANR	2002894	CallExpression	Z_TYPE_P ( tmp )		2002029	0					
ANR	2002895	Callee	Z_TYPE_P		2002029	0					
ANR	2002896	Identifier	Z_TYPE_P		2002029	0					
ANR	2002897	ArgumentList	tmp		2002029	1					
ANR	2002898	Argument	tmp		2002029	0					
ANR	2002899	Identifier	tmp		2002029	0					
ANR	2002900	Identifier	IS_STRING		2002029	1					
ANR	2002901	CompoundStatement		101:3:3409:3430	2002029	1					
ANR	2002902	IdentifierDeclStatement	sdlFaultPtr tmp_fault ;	3954:3:132287:132308	2002029	0	True				
ANR	2002903	IdentifierDecl	tmp_fault		2002029	0					
ANR	2002904	IdentifierDeclType	sdlFaultPtr		2002029	0					
ANR	2002905	Identifier	tmp_fault		2002029	1					
ANR	2002906	IfStatement	"if ( function && function -> faults && ( tmp_fault = zend_hash_find_ptr ( function -> faults , Z_STR_P ( tmp ) ) ) != NULL )"		2002029	1					
ANR	2002907	Condition	"function && function -> faults && ( tmp_fault = zend_hash_find_ptr ( function -> faults , Z_STR_P ( tmp ) ) ) != NULL"	3955:7:132317:132427	2002029	0	True				
ANR	2002908	AndExpression	"function && function -> faults && ( tmp_fault = zend_hash_find_ptr ( function -> faults , Z_STR_P ( tmp ) ) ) != NULL"		2002029	0		&&			
ANR	2002909	Identifier	function		2002029	0					
ANR	2002910	AndExpression	"function -> faults && ( tmp_fault = zend_hash_find_ptr ( function -> faults , Z_STR_P ( tmp ) ) ) != NULL"		2002029	1		&&			
ANR	2002911	PtrMemberAccess	function -> faults		2002029	0					
ANR	2002912	Identifier	function		2002029	0					
ANR	2002913	Identifier	faults		2002029	1					
ANR	2002914	EqualityExpression	"( tmp_fault = zend_hash_find_ptr ( function -> faults , Z_STR_P ( tmp ) ) ) != NULL"		2002029	1		!=			
ANR	2002915	AssignmentExpression	"tmp_fault = zend_hash_find_ptr ( function -> faults , Z_STR_P ( tmp ) )"		2002029	0		=			
ANR	2002916	Identifier	tmp_fault		2002029	0					
ANR	2002917	CallExpression	"zend_hash_find_ptr ( function -> faults , Z_STR_P ( tmp ) )"		2002029	1					
ANR	2002918	Callee	zend_hash_find_ptr		2002029	0					
ANR	2002919	Identifier	zend_hash_find_ptr		2002029	0					
ANR	2002920	ArgumentList	function -> faults		2002029	1					
ANR	2002921	Argument	function -> faults		2002029	0					
ANR	2002922	PtrMemberAccess	function -> faults		2002029	0					
ANR	2002923	Identifier	function		2002029	0					
ANR	2002924	Identifier	faults		2002029	1					
ANR	2002925	Argument	Z_STR_P ( tmp )		2002029	1					
ANR	2002926	CallExpression	Z_STR_P ( tmp )		2002029	0					
ANR	2002927	Callee	Z_STR_P		2002029	0					
ANR	2002928	Identifier	Z_STR_P		2002029	0					
ANR	2002929	ArgumentList	tmp		2002029	1					
ANR	2002930	Argument	tmp		2002029	0					
ANR	2002931	Identifier	tmp		2002029	0					
ANR	2002932	Identifier	NULL		2002029	1					
ANR	2002933	CompoundStatement		103:81:3552:3552	2002029	1					
ANR	2002934	ExpressionStatement	fault = tmp_fault	3957:4:132436:132453	2002029	0	True				
ANR	2002935	AssignmentExpression	fault = tmp_fault		2002029	0		=			
ANR	2002936	Identifier	fault		2002029	0					
ANR	2002937	Identifier	tmp_fault		2002029	1					
ANR	2002938	IfStatement	if ( function -> binding && function -> binding -> bindingType == BINDING_SOAP && fault -> bindingAttributes )		2002029	1					
ANR	2002939	Condition	function -> binding && function -> binding -> bindingType == BINDING_SOAP && fault -> bindingAttributes	3958:8:132463:132573	2002029	0	True				
ANR	2002940	AndExpression	function -> binding && function -> binding -> bindingType == BINDING_SOAP && fault -> bindingAttributes		2002029	0		&&			
ANR	2002941	PtrMemberAccess	function -> binding		2002029	0					
ANR	2002942	Identifier	function		2002029	0					
ANR	2002943	Identifier	binding		2002029	1					
ANR	2002944	AndExpression	function -> binding -> bindingType == BINDING_SOAP && fault -> bindingAttributes		2002029	1		&&			
ANR	2002945	EqualityExpression	function -> binding -> bindingType == BINDING_SOAP		2002029	0		==			
ANR	2002946	PtrMemberAccess	function -> binding -> bindingType		2002029	0					
ANR	2002947	PtrMemberAccess	function -> binding		2002029	0					
ANR	2002948	Identifier	function		2002029	0					
ANR	2002949	Identifier	binding		2002029	1					
ANR	2002950	Identifier	bindingType		2002029	1					
ANR	2002951	Identifier	BINDING_SOAP		2002029	1					
ANR	2002952	PtrMemberAccess	fault -> bindingAttributes		2002029	1					
ANR	2002953	Identifier	fault		2002029	0					
ANR	2002954	Identifier	bindingAttributes		2002029	1					
ANR	2002955	CompoundStatement		108:5:3705:3797	2002029	1					
ANR	2002956	IdentifierDeclStatement	sdlSoapBindingFunctionFaultPtr fb = ( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes ;	3961:5:132583:132675	2002029	0	True				
ANR	2002957	IdentifierDecl	fb = ( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes		2002029	0					
ANR	2002958	IdentifierDeclType	sdlSoapBindingFunctionFaultPtr		2002029	0					
ANR	2002959	Identifier	fb		2002029	1					
ANR	2002960	AssignmentExpression	fb = ( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes		2002029	2		=			
ANR	2002961	Identifier	fb		2002029	0					
ANR	2002962	CastExpression	( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes		2002029	1					
ANR	2002963	CastTarget	sdlSoapBindingFunctionFaultPtr		2002029	0					
ANR	2002964	PtrMemberAccess	fault -> bindingAttributes		2002029	1					
ANR	2002965	Identifier	fault		2002029	0					
ANR	2002966	Identifier	bindingAttributes		2002029	1					
ANR	2002967	ExpressionStatement	use = fb -> use	3962:5:132682:132695	2002029	1	True				
ANR	2002968	AssignmentExpression	use = fb -> use		2002029	0		=			
ANR	2002969	Identifier	use		2002029	0					
ANR	2002970	PtrMemberAccess	fb -> use		2002029	1					
ANR	2002971	Identifier	fb		2002029	0					
ANR	2002972	Identifier	use		2002029	1					
ANR	2002973	IfStatement	if ( fault_ns == NULL )		2002029	2					
ANR	2002974	Condition	fault_ns == NULL	3963:9:132706:132721	2002029	0	True				
ANR	2002975	EqualityExpression	fault_ns == NULL		2002029	0		==			
ANR	2002976	Identifier	fault_ns		2002029	0					
ANR	2002977	Identifier	NULL		2002029	1					
ANR	2002978	CompoundStatement		110:27:3846:3846	2002029	1					
ANR	2002979	ExpressionStatement	fault_ns = fb -> ns	3964:6:132732:132749	2002029	0	True				
ANR	2002980	AssignmentExpression	fault_ns = fb -> ns		2002029	0		=			
ANR	2002981	Identifier	fault_ns		2002029	0					
ANR	2002982	PtrMemberAccess	fb -> ns		2002029	1					
ANR	2002983	Identifier	fb		2002029	0					
ANR	2002984	Identifier	ns		2002029	1					
ANR	2002985	ElseStatement	else		2002029	0					
ANR	2002986	IfStatement	if ( function && function -> faults && zend_hash_num_elements ( function -> faults ) == 1 )		2002029	0					
ANR	2002987	Condition	function && function -> faults && zend_hash_num_elements ( function -> faults ) == 1	3968:13:132782:132871	2002029	0	True				
ANR	2002988	AndExpression	function && function -> faults && zend_hash_num_elements ( function -> faults ) == 1		2002029	0		&&			
ANR	2002989	Identifier	function		2002029	0					
ANR	2002990	AndExpression	function -> faults && zend_hash_num_elements ( function -> faults ) == 1		2002029	1		&&			
ANR	2002991	PtrMemberAccess	function -> faults		2002029	0					
ANR	2002992	Identifier	function		2002029	0					
ANR	2002993	Identifier	faults		2002029	1					
ANR	2002994	EqualityExpression	zend_hash_num_elements ( function -> faults ) == 1		2002029	1		==			
ANR	2002995	CallExpression	zend_hash_num_elements ( function -> faults )		2002029	0					
ANR	2002996	Callee	zend_hash_num_elements		2002029	0					
ANR	2002997	Identifier	zend_hash_num_elements		2002029	0					
ANR	2002998	ArgumentList	function -> faults		2002029	1					
ANR	2002999	Argument	function -> faults		2002029	0					
ANR	2003000	PtrMemberAccess	function -> faults		2002029	0					
ANR	2003001	Identifier	function		2002029	0					
ANR	2003002	Identifier	faults		2002029	1					
ANR	2003003	PrimaryExpression	1		2002029	1					
ANR	2003004	CompoundStatement		116:60:3996:3996	2002029	1					
ANR	2003005	ExpressionStatement	zend_hash_internal_pointer_reset ( function -> faults )	3971:3:132880:132930	2002029	0	True				
ANR	2003006	CallExpression	zend_hash_internal_pointer_reset ( function -> faults )		2002029	0					
ANR	2003007	Callee	zend_hash_internal_pointer_reset		2002029	0					
ANR	2003008	Identifier	zend_hash_internal_pointer_reset		2002029	0					
ANR	2003009	ArgumentList	function -> faults		2002029	1					
ANR	2003010	Argument	function -> faults		2002029	0					
ANR	2003011	PtrMemberAccess	function -> faults		2002029	0					
ANR	2003012	Identifier	function		2002029	0					
ANR	2003013	Identifier	faults		2002029	1					
ANR	2003014	ExpressionStatement	fault = zend_hash_get_current_data_ptr ( function -> faults )	3972:3:132935:132991	2002029	1	True				
ANR	2003015	AssignmentExpression	fault = zend_hash_get_current_data_ptr ( function -> faults )		2002029	0		=			
ANR	2003016	Identifier	fault		2002029	0					
ANR	2003017	CallExpression	zend_hash_get_current_data_ptr ( function -> faults )		2002029	1					
ANR	2003018	Callee	zend_hash_get_current_data_ptr		2002029	0					
ANR	2003019	Identifier	zend_hash_get_current_data_ptr		2002029	0					
ANR	2003020	ArgumentList	function -> faults		2002029	1					
ANR	2003021	Argument	function -> faults		2002029	0					
ANR	2003022	PtrMemberAccess	function -> faults		2002029	0					
ANR	2003023	Identifier	function		2002029	0					
ANR	2003024	Identifier	faults		2002029	1					
ANR	2003025	IfStatement	if ( function -> binding && function -> binding -> bindingType == BINDING_SOAP && fault -> bindingAttributes )		2002029	2					
ANR	2003026	Condition	function -> binding && function -> binding -> bindingType == BINDING_SOAP && fault -> bindingAttributes	3973:7:133000:133108	2002029	0	True				
ANR	2003027	AndExpression	function -> binding && function -> binding -> bindingType == BINDING_SOAP && fault -> bindingAttributes		2002029	0		&&			
ANR	2003028	PtrMemberAccess	function -> binding		2002029	0					
ANR	2003029	Identifier	function		2002029	0					
ANR	2003030	Identifier	binding		2002029	1					
ANR	2003031	AndExpression	function -> binding -> bindingType == BINDING_SOAP && fault -> bindingAttributes		2002029	1		&&			
ANR	2003032	EqualityExpression	function -> binding -> bindingType == BINDING_SOAP		2002029	0		==			
ANR	2003033	PtrMemberAccess	function -> binding -> bindingType		2002029	0					
ANR	2003034	PtrMemberAccess	function -> binding		2002029	0					
ANR	2003035	Identifier	function		2002029	0					
ANR	2003036	Identifier	binding		2002029	1					
ANR	2003037	Identifier	bindingType		2002029	1					
ANR	2003038	Identifier	BINDING_SOAP		2002029	1					
ANR	2003039	PtrMemberAccess	fault -> bindingAttributes		2002029	1					
ANR	2003040	Identifier	fault		2002029	0					
ANR	2003041	Identifier	bindingAttributes		2002029	1					
ANR	2003042	CompoundStatement		123:4:4239:4331	2002029	1					
ANR	2003043	IdentifierDeclStatement	sdlSoapBindingFunctionFaultPtr fb = ( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes ;	3976:4:133117:133209	2002029	0	True				
ANR	2003044	IdentifierDecl	fb = ( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes		2002029	0					
ANR	2003045	IdentifierDeclType	sdlSoapBindingFunctionFaultPtr		2002029	0					
ANR	2003046	Identifier	fb		2002029	1					
ANR	2003047	AssignmentExpression	fb = ( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes		2002029	2		=			
ANR	2003048	Identifier	fb		2002029	0					
ANR	2003049	CastExpression	( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes		2002029	1					
ANR	2003050	CastTarget	sdlSoapBindingFunctionFaultPtr		2002029	0					
ANR	2003051	PtrMemberAccess	fault -> bindingAttributes		2002029	1					
ANR	2003052	Identifier	fault		2002029	0					
ANR	2003053	Identifier	bindingAttributes		2002029	1					
ANR	2003054	ExpressionStatement	use = fb -> use	3977:4:133215:133228	2002029	1	True				
ANR	2003055	AssignmentExpression	use = fb -> use		2002029	0		=			
ANR	2003056	Identifier	use		2002029	0					
ANR	2003057	PtrMemberAccess	fb -> use		2002029	1					
ANR	2003058	Identifier	fb		2002029	0					
ANR	2003059	Identifier	use		2002029	1					
ANR	2003060	IfStatement	if ( fault_ns == NULL )		2002029	2					
ANR	2003061	Condition	fault_ns == NULL	3978:8:133238:133253	2002029	0	True				
ANR	2003062	EqualityExpression	fault_ns == NULL		2002029	0		==			
ANR	2003063	Identifier	fault_ns		2002029	0					
ANR	2003064	Identifier	NULL		2002029	1					
ANR	2003065	CompoundStatement		125:26:4378:4378	2002029	1					
ANR	2003066	ExpressionStatement	fault_ns = fb -> ns	3979:5:133263:133280	2002029	0	True				
ANR	2003067	AssignmentExpression	fault_ns = fb -> ns		2002029	0		=			
ANR	2003068	Identifier	fault_ns		2002029	0					
ANR	2003069	PtrMemberAccess	fb -> ns		2002029	1					
ANR	2003070	Identifier	fb		2002029	0					
ANR	2003071	Identifier	ns		2002029	1					
ANR	2003072	IfStatement	if ( fault_ns == NULL && fault && fault -> details && zend_hash_num_elements ( fault -> details ) == 1 )		2002029	12					
ANR	2003073	Condition	fault_ns == NULL && fault && fault -> details && zend_hash_num_elements ( fault -> details ) == 1	3984:6:133304:133411	2002029	0	True				
ANR	2003074	AndExpression	fault_ns == NULL && fault && fault -> details && zend_hash_num_elements ( fault -> details ) == 1		2002029	0		&&			
ANR	2003075	EqualityExpression	fault_ns == NULL		2002029	0		==			
ANR	2003076	Identifier	fault_ns		2002029	0					
ANR	2003077	Identifier	NULL		2002029	1					
ANR	2003078	AndExpression	fault && fault -> details && zend_hash_num_elements ( fault -> details ) == 1		2002029	1		&&			
ANR	2003079	Identifier	fault		2002029	0					
ANR	2003080	AndExpression	fault -> details && zend_hash_num_elements ( fault -> details ) == 1		2002029	1		&&			
ANR	2003081	PtrMemberAccess	fault -> details		2002029	0					
ANR	2003082	Identifier	fault		2002029	0					
ANR	2003083	Identifier	details		2002029	1					
ANR	2003084	EqualityExpression	zend_hash_num_elements ( fault -> details ) == 1		2002029	1		==			
ANR	2003085	CallExpression	zend_hash_num_elements ( fault -> details )		2002029	0					
ANR	2003086	Callee	zend_hash_num_elements		2002029	0					
ANR	2003087	Identifier	zend_hash_num_elements		2002029	0					
ANR	2003088	ArgumentList	fault -> details		2002029	1					
ANR	2003089	Argument	fault -> details		2002029	0					
ANR	2003090	PtrMemberAccess	fault -> details		2002029	0					
ANR	2003091	Identifier	fault		2002029	0					
ANR	2003092	Identifier	details		2002029	1					
ANR	2003093	PrimaryExpression	1		2002029	1					
ANR	2003094	CompoundStatement		135:3:4541:4559	2002029	1					
ANR	2003095	IdentifierDeclStatement	sdlParamPtr sparam ;	3988:3:133419:133437	2002029	0	True				
ANR	2003096	IdentifierDecl	sparam		2002029	0					
ANR	2003097	IdentifierDeclType	sdlParamPtr		2002029	0					
ANR	2003098	Identifier	sparam		2002029	1					
ANR	2003099	ExpressionStatement	zend_hash_internal_pointer_reset ( fault -> details )	3990:3:133443:133491	2002029	1	True				
ANR	2003100	CallExpression	zend_hash_internal_pointer_reset ( fault -> details )		2002029	0					
ANR	2003101	Callee	zend_hash_internal_pointer_reset		2002029	0					
ANR	2003102	Identifier	zend_hash_internal_pointer_reset		2002029	0					
ANR	2003103	ArgumentList	fault -> details		2002029	1					
ANR	2003104	Argument	fault -> details		2002029	0					
ANR	2003105	PtrMemberAccess	fault -> details		2002029	0					
ANR	2003106	Identifier	fault		2002029	0					
ANR	2003107	Identifier	details		2002029	1					
ANR	2003108	ExpressionStatement	sparam = zend_hash_get_current_data_ptr ( fault -> details )	3991:3:133496:133551	2002029	2	True				
ANR	2003109	AssignmentExpression	sparam = zend_hash_get_current_data_ptr ( fault -> details )		2002029	0		=			
ANR	2003110	Identifier	sparam		2002029	0					
ANR	2003111	CallExpression	zend_hash_get_current_data_ptr ( fault -> details )		2002029	1					
ANR	2003112	Callee	zend_hash_get_current_data_ptr		2002029	0					
ANR	2003113	Identifier	zend_hash_get_current_data_ptr		2002029	0					
ANR	2003114	ArgumentList	fault -> details		2002029	1					
ANR	2003115	Argument	fault -> details		2002029	0					
ANR	2003116	PtrMemberAccess	fault -> details		2002029	0					
ANR	2003117	Identifier	fault		2002029	0					
ANR	2003118	Identifier	details		2002029	1					
ANR	2003119	IfStatement	if ( sparam -> element )		2002029	3					
ANR	2003120	Condition	sparam -> element	3992:7:133560:133574	2002029	0	True				
ANR	2003121	PtrMemberAccess	sparam -> element		2002029	0					
ANR	2003122	Identifier	sparam		2002029	0					
ANR	2003123	Identifier	element		2002029	1					
ANR	2003124	CompoundStatement		139:24:4699:4699	2002029	1					
ANR	2003125	ExpressionStatement	fault_ns = sparam -> element -> namens	3993:4:133583:133617	2002029	0	True				
ANR	2003126	AssignmentExpression	fault_ns = sparam -> element -> namens		2002029	0		=			
ANR	2003127	Identifier	fault_ns		2002029	0					
ANR	2003128	PtrMemberAccess	sparam -> element -> namens		2002029	1					
ANR	2003129	PtrMemberAccess	sparam -> element		2002029	0					
ANR	2003130	Identifier	sparam		2002029	0					
ANR	2003131	Identifier	element		2002029	1					
ANR	2003132	Identifier	namens		2002029	1					
ANR	2003133	IfStatement	if ( version == SOAP_1_1 )		2002029	13					
ANR	2003134	Condition	version == SOAP_1_1	3997:6:133635:133653	2002029	0	True				
ANR	2003135	EqualityExpression	version == SOAP_1_1		2002029	0		==			
ANR	2003136	Identifier	version		2002029	0					
ANR	2003137	Identifier	SOAP_1_1		2002029	1					
ANR	2003138	CompoundStatement		144:27:4778:4778	2002029	1					
ANR	2003139	IfStatement	"if ( ( tmp = zend_hash_str_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING )"		2002029	0					
ANR	2003140	Condition	"( tmp = zend_hash_str_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"	3998:7:133665:133777	2002029	0	True				
ANR	2003141	AndExpression	"( tmp = zend_hash_str_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"		2002029	0		&&			
ANR	2003142	EqualityExpression	"( tmp = zend_hash_str_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) - 1 ) ) != NULL"		2002029	0		!=			
ANR	2003143	AssignmentExpression	"tmp = zend_hash_str_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) - 1 )"		2002029	0		=			
ANR	2003144	Identifier	tmp		2002029	0					
ANR	2003145	CallExpression	"zend_hash_str_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) - 1 )"		2002029	1					
ANR	2003146	Callee	zend_hash_str_find		2002029	0					
ANR	2003147	Identifier	zend_hash_str_find		2002029	0					
ANR	2003148	ArgumentList	prop		2002029	1					
ANR	2003149	Argument	prop		2002029	0					
ANR	2003150	Identifier	prop		2002029	0					
ANR	2003151	Argument	"""faultcode"""		2002029	1					
ANR	2003152	PrimaryExpression	"""faultcode"""		2002029	0					
ANR	2003153	Argument	"sizeof ( ""faultcode"" ) - 1"		2002029	2					
ANR	2003154	AdditiveExpression	"sizeof ( ""faultcode"" ) - 1"		2002029	0		-			
ANR	2003155	SizeofExpression	"sizeof ( ""faultcode"" )"		2002029	0					
ANR	2003156	Sizeof	sizeof		2002029	0					
ANR	2003157	PrimaryExpression	"""faultcode"""		2002029	1					
ANR	2003158	PrimaryExpression	1		2002029	1					
ANR	2003159	Identifier	NULL		2002029	1					
ANR	2003160	EqualityExpression	Z_TYPE_P ( tmp ) == IS_STRING		2002029	1		==			
ANR	2003161	CallExpression	Z_TYPE_P ( tmp )		2002029	0					
ANR	2003162	Callee	Z_TYPE_P		2002029	0					
ANR	2003163	Identifier	Z_TYPE_P		2002029	0					
ANR	2003164	ArgumentList	tmp		2002029	1					
ANR	2003165	Argument	tmp		2002029	0					
ANR	2003166	Identifier	tmp		2002029	0					
ANR	2003167	Identifier	IS_STRING		2002029	1					
ANR	2003168	CompoundStatement		148:4:4971:5076	2002029	1					
ANR	2003169	IdentifierDeclStatement	"xmlNodePtr node = xmlNewNode ( NULL , BAD_CAST ( ""faultcode"" ) ) ;"	4000:4:133786:133843	2002029	0	True				
ANR	2003170	IdentifierDecl	"node = xmlNewNode ( NULL , BAD_CAST ( ""faultcode"" ) )"		2002029	0					
ANR	2003171	IdentifierDeclType	xmlNodePtr		2002029	0					
ANR	2003172	Identifier	node		2002029	1					
ANR	2003173	AssignmentExpression	"node = xmlNewNode ( NULL , BAD_CAST ( ""faultcode"" ) )"		2002029	2		=			
ANR	2003174	Identifier	node		2002029	0					
ANR	2003175	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( ""faultcode"" ) )"		2002029	1					
ANR	2003176	Callee	xmlNewNode		2002029	0					
ANR	2003177	Identifier	xmlNewNode		2002029	0					
ANR	2003178	ArgumentList	NULL		2002029	1					
ANR	2003179	Argument	NULL		2002029	0					
ANR	2003180	Identifier	NULL		2002029	0					
ANR	2003181	Argument	"BAD_CAST ( ""faultcode"" )"		2002029	1					
ANR	2003182	CallExpression	"BAD_CAST ( ""faultcode"" )"		2002029	0					
ANR	2003183	Callee	BAD_CAST		2002029	0					
ANR	2003184	Identifier	BAD_CAST		2002029	0					
ANR	2003185	ArgumentList	"""faultcode"""		2002029	1					
ANR	2003186	Argument	"""faultcode"""		2002029	0					
ANR	2003187	PrimaryExpression	"""faultcode"""		2002029	0					
ANR	2003188	IdentifierDeclStatement	"zend_string * str = php_escape_html_entities ( ( unsigned char * ) Z_STRVAL_P ( tmp ) , Z_STRLEN_P ( tmp ) , 0 , 0 , NULL ) ;"	4001:4:133849:133954	2002029	1	True				
ANR	2003189	IdentifierDecl	"* str = php_escape_html_entities ( ( unsigned char * ) Z_STRVAL_P ( tmp ) , Z_STRLEN_P ( tmp ) , 0 , 0 , NULL )"		2002029	0					
ANR	2003190	IdentifierDeclType	zend_string *		2002029	0					
ANR	2003191	Identifier	str		2002029	1					
ANR	2003192	AssignmentExpression	"* str = php_escape_html_entities ( ( unsigned char * ) Z_STRVAL_P ( tmp ) , Z_STRLEN_P ( tmp ) , 0 , 0 , NULL )"		2002029	2		=			
ANR	2003193	Identifier	str		2002029	0					
ANR	2003194	CallExpression	"php_escape_html_entities ( ( unsigned char * ) Z_STRVAL_P ( tmp ) , Z_STRLEN_P ( tmp ) , 0 , 0 , NULL )"		2002029	1					
ANR	2003195	Callee	php_escape_html_entities		2002029	0					
ANR	2003196	Identifier	php_escape_html_entities		2002029	0					
ANR	2003197	ArgumentList	( unsigned char * ) Z_STRVAL_P ( tmp )		2002029	1					
ANR	2003198	Argument	( unsigned char * ) Z_STRVAL_P ( tmp )		2002029	0					
ANR	2003199	CastExpression	( unsigned char * ) Z_STRVAL_P ( tmp )		2002029	0					
ANR	2003200	CastTarget	unsigned char *		2002029	0					
ANR	2003201	CallExpression	Z_STRVAL_P ( tmp )		2002029	1					
ANR	2003202	Callee	Z_STRVAL_P		2002029	0					
ANR	2003203	Identifier	Z_STRVAL_P		2002029	0					
ANR	2003204	ArgumentList	tmp		2002029	1					
ANR	2003205	Argument	tmp		2002029	0					
ANR	2003206	Identifier	tmp		2002029	0					
ANR	2003207	Argument	Z_STRLEN_P ( tmp )		2002029	1					
ANR	2003208	CallExpression	Z_STRLEN_P ( tmp )		2002029	0					
ANR	2003209	Callee	Z_STRLEN_P		2002029	0					
ANR	2003210	Identifier	Z_STRLEN_P		2002029	0					
ANR	2003211	ArgumentList	tmp		2002029	1					
ANR	2003212	Argument	tmp		2002029	0					
ANR	2003213	Identifier	tmp		2002029	0					
ANR	2003214	Argument	0		2002029	2					
ANR	2003215	PrimaryExpression	0		2002029	0					
ANR	2003216	Argument	0		2002029	3					
ANR	2003217	PrimaryExpression	0		2002029	0					
ANR	2003218	Argument	NULL		2002029	4					
ANR	2003219	Identifier	NULL		2002029	0					
ANR	2003220	ExpressionStatement	"xmlAddChild ( param , node )"	4002:4:133960:133984	2002029	2	True				
ANR	2003221	CallExpression	"xmlAddChild ( param , node )"		2002029	0					
ANR	2003222	Callee	xmlAddChild		2002029	0					
ANR	2003223	Identifier	xmlAddChild		2002029	0					
ANR	2003224	ArgumentList	param		2002029	1					
ANR	2003225	Argument	param		2002029	0					
ANR	2003226	Identifier	param		2002029	0					
ANR	2003227	Argument	node		2002029	1					
ANR	2003228	Identifier	node		2002029	0					
ANR	2003229	IfStatement	if ( fault_ns )		2002029	3					
ANR	2003230	Condition	fault_ns	4003:8:133994:134001	2002029	0	True				
ANR	2003231	Identifier	fault_ns		2002029	0					
ANR	2003232	CompoundStatement		152:5:5186:5264	2002029	1					
ANR	2003233	IdentifierDeclStatement	"xmlNsPtr nsptr = encode_add_ns ( node , fault_ns ) ;"	4004:5:134011:134057	2002029	0	True				
ANR	2003234	IdentifierDecl	"nsptr = encode_add_ns ( node , fault_ns )"		2002029	0					
ANR	2003235	IdentifierDeclType	xmlNsPtr		2002029	0					
ANR	2003236	Identifier	nsptr		2002029	1					
ANR	2003237	AssignmentExpression	"nsptr = encode_add_ns ( node , fault_ns )"		2002029	2		=			
ANR	2003238	Identifier	nsptr		2002029	0					
ANR	2003239	CallExpression	"encode_add_ns ( node , fault_ns )"		2002029	1					
ANR	2003240	Callee	encode_add_ns		2002029	0					
ANR	2003241	Identifier	encode_add_ns		2002029	0					
ANR	2003242	ArgumentList	node		2002029	1					
ANR	2003243	Argument	node		2002029	0					
ANR	2003244	Identifier	node		2002029	0					
ANR	2003245	Argument	fault_ns		2002029	1					
ANR	2003246	Identifier	fault_ns		2002029	0					
ANR	2003247	IdentifierDeclStatement	"xmlChar * code = xmlBuildQName ( BAD_CAST ( ZSTR_VAL ( str ) ) , nsptr -> prefix , NULL , 0 ) ;"	4005:5:134064:134142	2002029	1	True				
ANR	2003248	IdentifierDecl	"* code = xmlBuildQName ( BAD_CAST ( ZSTR_VAL ( str ) ) , nsptr -> prefix , NULL , 0 )"		2002029	0					
ANR	2003249	IdentifierDeclType	xmlChar *		2002029	0					
ANR	2003250	Identifier	code		2002029	1					
ANR	2003251	AssignmentExpression	"* code = xmlBuildQName ( BAD_CAST ( ZSTR_VAL ( str ) ) , nsptr -> prefix , NULL , 0 )"		2002029	2		=			
ANR	2003252	Identifier	code		2002029	0					
ANR	2003253	CallExpression	"xmlBuildQName ( BAD_CAST ( ZSTR_VAL ( str ) ) , nsptr -> prefix , NULL , 0 )"		2002029	1					
ANR	2003254	Callee	xmlBuildQName		2002029	0					
ANR	2003255	Identifier	xmlBuildQName		2002029	0					
ANR	2003256	ArgumentList	BAD_CAST ( ZSTR_VAL ( str ) )		2002029	1					
ANR	2003257	Argument	BAD_CAST ( ZSTR_VAL ( str ) )		2002029	0					
ANR	2003258	CallExpression	BAD_CAST ( ZSTR_VAL ( str ) )		2002029	0					
ANR	2003259	Callee	BAD_CAST		2002029	0					
ANR	2003260	Identifier	BAD_CAST		2002029	0					
ANR	2003261	ArgumentList	ZSTR_VAL ( str )		2002029	1					
ANR	2003262	Argument	ZSTR_VAL ( str )		2002029	0					
ANR	2003263	CallExpression	ZSTR_VAL ( str )		2002029	0					
ANR	2003264	Callee	ZSTR_VAL		2002029	0					
ANR	2003265	Identifier	ZSTR_VAL		2002029	0					
ANR	2003266	ArgumentList	str		2002029	1					
ANR	2003267	Argument	str		2002029	0					
ANR	2003268	Identifier	str		2002029	0					
ANR	2003269	Argument	nsptr -> prefix		2002029	1					
ANR	2003270	PtrMemberAccess	nsptr -> prefix		2002029	0					
ANR	2003271	Identifier	nsptr		2002029	0					
ANR	2003272	Identifier	prefix		2002029	1					
ANR	2003273	Argument	NULL		2002029	2					
ANR	2003274	Identifier	NULL		2002029	0					
ANR	2003275	Argument	0		2002029	3					
ANR	2003276	PrimaryExpression	0		2002029	0					
ANR	2003277	ExpressionStatement	"xmlNodeSetContent ( node , code )"	4006:5:134149:134178	2002029	2	True				
ANR	2003278	CallExpression	"xmlNodeSetContent ( node , code )"		2002029	0					
ANR	2003279	Callee	xmlNodeSetContent		2002029	0					
ANR	2003280	Identifier	xmlNodeSetContent		2002029	0					
ANR	2003281	ArgumentList	node		2002029	1					
ANR	2003282	Argument	node		2002029	0					
ANR	2003283	Identifier	node		2002029	0					
ANR	2003284	Argument	code		2002029	1					
ANR	2003285	Identifier	code		2002029	0					
ANR	2003286	ExpressionStatement	xmlFree ( code )	4007:5:134185:134198	2002029	3	True				
ANR	2003287	CallExpression	xmlFree ( code )		2002029	0					
ANR	2003288	Callee	xmlFree		2002029	0					
ANR	2003289	Identifier	xmlFree		2002029	0					
ANR	2003290	ArgumentList	code		2002029	1					
ANR	2003291	Argument	code		2002029	0					
ANR	2003292	Identifier	code		2002029	0					
ANR	2003293	ElseStatement	else		2002029	0					
ANR	2003294	CompoundStatement		155:11:5333:5333	2002029	0					
ANR	2003295	ExpressionStatement	"xmlNodeSetContentLen ( node , BAD_CAST ( ZSTR_VAL ( str ) ) , ( int ) ZSTR_LEN ( str ) )"	4009:5:134218:134289	2002029	0	True				
ANR	2003296	CallExpression	"xmlNodeSetContentLen ( node , BAD_CAST ( ZSTR_VAL ( str ) ) , ( int ) ZSTR_LEN ( str ) )"		2002029	0					
ANR	2003297	Callee	xmlNodeSetContentLen		2002029	0					
ANR	2003298	Identifier	xmlNodeSetContentLen		2002029	0					
ANR	2003299	ArgumentList	node		2002029	1					
ANR	2003300	Argument	node		2002029	0					
ANR	2003301	Identifier	node		2002029	0					
ANR	2003302	Argument	BAD_CAST ( ZSTR_VAL ( str ) )		2002029	1					
ANR	2003303	CallExpression	BAD_CAST ( ZSTR_VAL ( str ) )		2002029	0					
ANR	2003304	Callee	BAD_CAST		2002029	0					
ANR	2003305	Identifier	BAD_CAST		2002029	0					
ANR	2003306	ArgumentList	ZSTR_VAL ( str )		2002029	1					
ANR	2003307	Argument	ZSTR_VAL ( str )		2002029	0					
ANR	2003308	CallExpression	ZSTR_VAL ( str )		2002029	0					
ANR	2003309	Callee	ZSTR_VAL		2002029	0					
ANR	2003310	Identifier	ZSTR_VAL		2002029	0					
ANR	2003311	ArgumentList	str		2002029	1					
ANR	2003312	Argument	str		2002029	0					
ANR	2003313	Identifier	str		2002029	0					
ANR	2003314	Argument	( int ) ZSTR_LEN ( str )		2002029	2					
ANR	2003315	CastExpression	( int ) ZSTR_LEN ( str )		2002029	0					
ANR	2003316	CastTarget	int		2002029	0					
ANR	2003317	CallExpression	ZSTR_LEN ( str )		2002029	1					
ANR	2003318	Callee	ZSTR_LEN		2002029	0					
ANR	2003319	Identifier	ZSTR_LEN		2002029	0					
ANR	2003320	ArgumentList	str		2002029	1					
ANR	2003321	Argument	str		2002029	0					
ANR	2003322	Identifier	str		2002029	0					
ANR	2003323	ExpressionStatement	zend_string_release ( str )	4011:4:134301:134325	2002029	4	True				
ANR	2003324	CallExpression	zend_string_release ( str )		2002029	0					
ANR	2003325	Callee	zend_string_release		2002029	0					
ANR	2003326	Identifier	zend_string_release		2002029	0					
ANR	2003327	ArgumentList	str		2002029	1					
ANR	2003328	Argument	str		2002029	0					
ANR	2003329	Identifier	str		2002029	0					
ANR	2003330	IfStatement	"if ( ( tmp = zend_hash_str_find ( prop , ""faultstring"" , sizeof ( ""faultstring"" ) - 1 ) ) != NULL )"		2002029	1					
ANR	2003331	Condition	"( tmp = zend_hash_str_find ( prop , ""faultstring"" , sizeof ( ""faultstring"" ) - 1 ) ) != NULL"	4013:7:134339:134418	2002029	0	True				
ANR	2003332	EqualityExpression	"( tmp = zend_hash_str_find ( prop , ""faultstring"" , sizeof ( ""faultstring"" ) - 1 ) ) != NULL"		2002029	0		!=			
ANR	2003333	AssignmentExpression	"tmp = zend_hash_str_find ( prop , ""faultstring"" , sizeof ( ""faultstring"" ) - 1 )"		2002029	0		=			
ANR	2003334	Identifier	tmp		2002029	0					
ANR	2003335	CallExpression	"zend_hash_str_find ( prop , ""faultstring"" , sizeof ( ""faultstring"" ) - 1 )"		2002029	1					
ANR	2003336	Callee	zend_hash_str_find		2002029	0					
ANR	2003337	Identifier	zend_hash_str_find		2002029	0					
ANR	2003338	ArgumentList	prop		2002029	1					
ANR	2003339	Argument	prop		2002029	0					
ANR	2003340	Identifier	prop		2002029	0					
ANR	2003341	Argument	"""faultstring"""		2002029	1					
ANR	2003342	PrimaryExpression	"""faultstring"""		2002029	0					
ANR	2003343	Argument	"sizeof ( ""faultstring"" ) - 1"		2002029	2					
ANR	2003344	AdditiveExpression	"sizeof ( ""faultstring"" ) - 1"		2002029	0		-			
ANR	2003345	SizeofExpression	"sizeof ( ""faultstring"" )"		2002029	0					
ANR	2003346	Sizeof	sizeof		2002029	0					
ANR	2003347	PrimaryExpression	"""faultstring"""		2002029	1					
ANR	2003348	PrimaryExpression	1		2002029	1					
ANR	2003349	Identifier	NULL		2002029	1					
ANR	2003350	CompoundStatement		161:4:5549:5633	2002029	1					
ANR	2003351	IdentifierDeclStatement	"xmlNodePtr node = master_to_xml ( get_conversion ( IS_STRING ) , tmp , SOAP_LITERAL , param ) ;"	4014:4:134427:134511	2002029	0	True				
ANR	2003352	IdentifierDecl	"node = master_to_xml ( get_conversion ( IS_STRING ) , tmp , SOAP_LITERAL , param )"		2002029	0					
ANR	2003353	IdentifierDeclType	xmlNodePtr		2002029	0					
ANR	2003354	Identifier	node		2002029	1					
ANR	2003355	AssignmentExpression	"node = master_to_xml ( get_conversion ( IS_STRING ) , tmp , SOAP_LITERAL , param )"		2002029	2		=			
ANR	2003356	Identifier	node		2002029	0					
ANR	2003357	CallExpression	"master_to_xml ( get_conversion ( IS_STRING ) , tmp , SOAP_LITERAL , param )"		2002029	1					
ANR	2003358	Callee	master_to_xml		2002029	0					
ANR	2003359	Identifier	master_to_xml		2002029	0					
ANR	2003360	ArgumentList	get_conversion ( IS_STRING )		2002029	1					
ANR	2003361	Argument	get_conversion ( IS_STRING )		2002029	0					
ANR	2003362	CallExpression	get_conversion ( IS_STRING )		2002029	0					
ANR	2003363	Callee	get_conversion		2002029	0					
ANR	2003364	Identifier	get_conversion		2002029	0					
ANR	2003365	ArgumentList	IS_STRING		2002029	1					
ANR	2003366	Argument	IS_STRING		2002029	0					
ANR	2003367	Identifier	IS_STRING		2002029	0					
ANR	2003368	Argument	tmp		2002029	1					
ANR	2003369	Identifier	tmp		2002029	0					
ANR	2003370	Argument	SOAP_LITERAL		2002029	2					
ANR	2003371	Identifier	SOAP_LITERAL		2002029	0					
ANR	2003372	Argument	param		2002029	3					
ANR	2003373	Identifier	param		2002029	0					
ANR	2003374	ExpressionStatement	"xmlNodeSetName ( node , BAD_CAST ( ""faultstring"" ) )"	4015:4:134517:134562	2002029	1	True				
ANR	2003375	CallExpression	"xmlNodeSetName ( node , BAD_CAST ( ""faultstring"" ) )"		2002029	0					
ANR	2003376	Callee	xmlNodeSetName		2002029	0					
ANR	2003377	Identifier	xmlNodeSetName		2002029	0					
ANR	2003378	ArgumentList	node		2002029	1					
ANR	2003379	Argument	node		2002029	0					
ANR	2003380	Identifier	node		2002029	0					
ANR	2003381	Argument	"BAD_CAST ( ""faultstring"" )"		2002029	1					
ANR	2003382	CallExpression	"BAD_CAST ( ""faultstring"" )"		2002029	0					
ANR	2003383	Callee	BAD_CAST		2002029	0					
ANR	2003384	Identifier	BAD_CAST		2002029	0					
ANR	2003385	ArgumentList	"""faultstring"""		2002029	1					
ANR	2003386	Argument	"""faultstring"""		2002029	0					
ANR	2003387	PrimaryExpression	"""faultstring"""		2002029	0					
ANR	2003388	IfStatement	"if ( ( tmp = zend_hash_str_find ( prop , ""faultactor"" , sizeof ( ""faultactor"" ) - 1 ) ) != NULL )"		2002029	2					
ANR	2003389	Condition	"( tmp = zend_hash_str_find ( prop , ""faultactor"" , sizeof ( ""faultactor"" ) - 1 ) ) != NULL"	4017:7:134576:134653	2002029	0	True				
ANR	2003390	EqualityExpression	"( tmp = zend_hash_str_find ( prop , ""faultactor"" , sizeof ( ""faultactor"" ) - 1 ) ) != NULL"		2002029	0		!=			
ANR	2003391	AssignmentExpression	"tmp = zend_hash_str_find ( prop , ""faultactor"" , sizeof ( ""faultactor"" ) - 1 )"		2002029	0		=			
ANR	2003392	Identifier	tmp		2002029	0					
ANR	2003393	CallExpression	"zend_hash_str_find ( prop , ""faultactor"" , sizeof ( ""faultactor"" ) - 1 )"		2002029	1					
ANR	2003394	Callee	zend_hash_str_find		2002029	0					
ANR	2003395	Identifier	zend_hash_str_find		2002029	0					
ANR	2003396	ArgumentList	prop		2002029	1					
ANR	2003397	Argument	prop		2002029	0					
ANR	2003398	Identifier	prop		2002029	0					
ANR	2003399	Argument	"""faultactor"""		2002029	1					
ANR	2003400	PrimaryExpression	"""faultactor"""		2002029	0					
ANR	2003401	Argument	"sizeof ( ""faultactor"" ) - 1"		2002029	2					
ANR	2003402	AdditiveExpression	"sizeof ( ""faultactor"" ) - 1"		2002029	0		-			
ANR	2003403	SizeofExpression	"sizeof ( ""faultactor"" )"		2002029	0					
ANR	2003404	Sizeof	sizeof		2002029	0					
ANR	2003405	PrimaryExpression	"""faultactor"""		2002029	1					
ANR	2003406	PrimaryExpression	1		2002029	1					
ANR	2003407	Identifier	NULL		2002029	1					
ANR	2003408	CompoundStatement		165:4:5784:5868	2002029	1					
ANR	2003409	IdentifierDeclStatement	"xmlNodePtr node = master_to_xml ( get_conversion ( IS_STRING ) , tmp , SOAP_LITERAL , param ) ;"	4018:4:134662:134746	2002029	0	True				
ANR	2003410	IdentifierDecl	"node = master_to_xml ( get_conversion ( IS_STRING ) , tmp , SOAP_LITERAL , param )"		2002029	0					
ANR	2003411	IdentifierDeclType	xmlNodePtr		2002029	0					
ANR	2003412	Identifier	node		2002029	1					
ANR	2003413	AssignmentExpression	"node = master_to_xml ( get_conversion ( IS_STRING ) , tmp , SOAP_LITERAL , param )"		2002029	2		=			
ANR	2003414	Identifier	node		2002029	0					
ANR	2003415	CallExpression	"master_to_xml ( get_conversion ( IS_STRING ) , tmp , SOAP_LITERAL , param )"		2002029	1					
ANR	2003416	Callee	master_to_xml		2002029	0					
ANR	2003417	Identifier	master_to_xml		2002029	0					
ANR	2003418	ArgumentList	get_conversion ( IS_STRING )		2002029	1					
ANR	2003419	Argument	get_conversion ( IS_STRING )		2002029	0					
ANR	2003420	CallExpression	get_conversion ( IS_STRING )		2002029	0					
ANR	2003421	Callee	get_conversion		2002029	0					
ANR	2003422	Identifier	get_conversion		2002029	0					
ANR	2003423	ArgumentList	IS_STRING		2002029	1					
ANR	2003424	Argument	IS_STRING		2002029	0					
ANR	2003425	Identifier	IS_STRING		2002029	0					
ANR	2003426	Argument	tmp		2002029	1					
ANR	2003427	Identifier	tmp		2002029	0					
ANR	2003428	Argument	SOAP_LITERAL		2002029	2					
ANR	2003429	Identifier	SOAP_LITERAL		2002029	0					
ANR	2003430	Argument	param		2002029	3					
ANR	2003431	Identifier	param		2002029	0					
ANR	2003432	ExpressionStatement	"xmlNodeSetName ( node , BAD_CAST ( ""faultactor"" ) )"	4019:4:134752:134796	2002029	1	True				
ANR	2003433	CallExpression	"xmlNodeSetName ( node , BAD_CAST ( ""faultactor"" ) )"		2002029	0					
ANR	2003434	Callee	xmlNodeSetName		2002029	0					
ANR	2003435	Identifier	xmlNodeSetName		2002029	0					
ANR	2003436	ArgumentList	node		2002029	1					
ANR	2003437	Argument	node		2002029	0					
ANR	2003438	Identifier	node		2002029	0					
ANR	2003439	Argument	"BAD_CAST ( ""faultactor"" )"		2002029	1					
ANR	2003440	CallExpression	"BAD_CAST ( ""faultactor"" )"		2002029	0					
ANR	2003441	Callee	BAD_CAST		2002029	0					
ANR	2003442	Identifier	BAD_CAST		2002029	0					
ANR	2003443	ArgumentList	"""faultactor"""		2002029	1					
ANR	2003444	Argument	"""faultactor"""		2002029	0					
ANR	2003445	PrimaryExpression	"""faultactor"""		2002029	0					
ANR	2003446	ExpressionStatement	"detail_name = ""detail"""	4021:3:134806:134828	2002029	3	True				
ANR	2003447	AssignmentExpression	"detail_name = ""detail"""		2002029	0		=			
ANR	2003448	Identifier	detail_name		2002029	0					
ANR	2003449	PrimaryExpression	"""detail"""		2002029	1					
ANR	2003450	ElseStatement	else		2002029	0					
ANR	2003451	CompoundStatement		169:9:5961:5961	2002029	0					
ANR	2003452	IfStatement	"if ( ( tmp = zend_hash_str_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING )"		2002029	0					
ANR	2003453	Condition	"( tmp = zend_hash_str_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"	4023:7:134848:134960	2002029	0	True				
ANR	2003454	AndExpression	"( tmp = zend_hash_str_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"		2002029	0		&&			
ANR	2003455	EqualityExpression	"( tmp = zend_hash_str_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) - 1 ) ) != NULL"		2002029	0		!=			
ANR	2003456	AssignmentExpression	"tmp = zend_hash_str_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) - 1 )"		2002029	0		=			
ANR	2003457	Identifier	tmp		2002029	0					
ANR	2003458	CallExpression	"zend_hash_str_find ( prop , ""faultcode"" , sizeof ( ""faultcode"" ) - 1 )"		2002029	1					
ANR	2003459	Callee	zend_hash_str_find		2002029	0					
ANR	2003460	Identifier	zend_hash_str_find		2002029	0					
ANR	2003461	ArgumentList	prop		2002029	1					
ANR	2003462	Argument	prop		2002029	0					
ANR	2003463	Identifier	prop		2002029	0					
ANR	2003464	Argument	"""faultcode"""		2002029	1					
ANR	2003465	PrimaryExpression	"""faultcode"""		2002029	0					
ANR	2003466	Argument	"sizeof ( ""faultcode"" ) - 1"		2002029	2					
ANR	2003467	AdditiveExpression	"sizeof ( ""faultcode"" ) - 1"		2002029	0		-			
ANR	2003468	SizeofExpression	"sizeof ( ""faultcode"" )"		2002029	0					
ANR	2003469	Sizeof	sizeof		2002029	0					
ANR	2003470	PrimaryExpression	"""faultcode"""		2002029	1					
ANR	2003471	PrimaryExpression	1		2002029	1					
ANR	2003472	Identifier	NULL		2002029	1					
ANR	2003473	EqualityExpression	Z_TYPE_P ( tmp ) == IS_STRING		2002029	1		==			
ANR	2003474	CallExpression	Z_TYPE_P ( tmp )		2002029	0					
ANR	2003475	Callee	Z_TYPE_P		2002029	0					
ANR	2003476	Identifier	Z_TYPE_P		2002029	0					
ANR	2003477	ArgumentList	tmp		2002029	1					
ANR	2003478	Argument	tmp		2002029	0					
ANR	2003479	Identifier	tmp		2002029	0					
ANR	2003480	Identifier	IS_STRING		2002029	1					
ANR	2003481	CompoundStatement		173:4:6161:6266	2002029	1					
ANR	2003482	IdentifierDeclStatement	"xmlNodePtr node = xmlNewChild ( param , ns , BAD_CAST ( ""Code"" ) , NULL ) ;"	4025:4:134969:135033	2002029	0	True				
ANR	2003483	IdentifierDecl	"node = xmlNewChild ( param , ns , BAD_CAST ( ""Code"" ) , NULL )"		2002029	0					
ANR	2003484	IdentifierDeclType	xmlNodePtr		2002029	0					
ANR	2003485	Identifier	node		2002029	1					
ANR	2003486	AssignmentExpression	"node = xmlNewChild ( param , ns , BAD_CAST ( ""Code"" ) , NULL )"		2002029	2		=			
ANR	2003487	Identifier	node		2002029	0					
ANR	2003488	CallExpression	"xmlNewChild ( param , ns , BAD_CAST ( ""Code"" ) , NULL )"		2002029	1					
ANR	2003489	Callee	xmlNewChild		2002029	0					
ANR	2003490	Identifier	xmlNewChild		2002029	0					
ANR	2003491	ArgumentList	param		2002029	1					
ANR	2003492	Argument	param		2002029	0					
ANR	2003493	Identifier	param		2002029	0					
ANR	2003494	Argument	ns		2002029	1					
ANR	2003495	Identifier	ns		2002029	0					
ANR	2003496	Argument	"BAD_CAST ( ""Code"" )"		2002029	2					
ANR	2003497	CallExpression	"BAD_CAST ( ""Code"" )"		2002029	0					
ANR	2003498	Callee	BAD_CAST		2002029	0					
ANR	2003499	Identifier	BAD_CAST		2002029	0					
ANR	2003500	ArgumentList	"""Code"""		2002029	1					
ANR	2003501	Argument	"""Code"""		2002029	0					
ANR	2003502	PrimaryExpression	"""Code"""		2002029	0					
ANR	2003503	Argument	NULL		2002029	3					
ANR	2003504	Identifier	NULL		2002029	0					
ANR	2003505	IdentifierDeclStatement	"zend_string * str = php_escape_html_entities ( ( unsigned char * ) Z_STRVAL_P ( tmp ) , Z_STRLEN_P ( tmp ) , 0 , 0 , NULL ) ;"	4026:4:135039:135144	2002029	1	True				
ANR	2003506	IdentifierDecl	"* str = php_escape_html_entities ( ( unsigned char * ) Z_STRVAL_P ( tmp ) , Z_STRLEN_P ( tmp ) , 0 , 0 , NULL )"		2002029	0					
ANR	2003507	IdentifierDeclType	zend_string *		2002029	0					
ANR	2003508	Identifier	str		2002029	1					
ANR	2003509	AssignmentExpression	"* str = php_escape_html_entities ( ( unsigned char * ) Z_STRVAL_P ( tmp ) , Z_STRLEN_P ( tmp ) , 0 , 0 , NULL )"		2002029	2		=			
ANR	2003510	Identifier	str		2002029	0					
ANR	2003511	CallExpression	"php_escape_html_entities ( ( unsigned char * ) Z_STRVAL_P ( tmp ) , Z_STRLEN_P ( tmp ) , 0 , 0 , NULL )"		2002029	1					
ANR	2003512	Callee	php_escape_html_entities		2002029	0					
ANR	2003513	Identifier	php_escape_html_entities		2002029	0					
ANR	2003514	ArgumentList	( unsigned char * ) Z_STRVAL_P ( tmp )		2002029	1					
ANR	2003515	Argument	( unsigned char * ) Z_STRVAL_P ( tmp )		2002029	0					
ANR	2003516	CastExpression	( unsigned char * ) Z_STRVAL_P ( tmp )		2002029	0					
ANR	2003517	CastTarget	unsigned char *		2002029	0					
ANR	2003518	CallExpression	Z_STRVAL_P ( tmp )		2002029	1					
ANR	2003519	Callee	Z_STRVAL_P		2002029	0					
ANR	2003520	Identifier	Z_STRVAL_P		2002029	0					
ANR	2003521	ArgumentList	tmp		2002029	1					
ANR	2003522	Argument	tmp		2002029	0					
ANR	2003523	Identifier	tmp		2002029	0					
ANR	2003524	Argument	Z_STRLEN_P ( tmp )		2002029	1					
ANR	2003525	CallExpression	Z_STRLEN_P ( tmp )		2002029	0					
ANR	2003526	Callee	Z_STRLEN_P		2002029	0					
ANR	2003527	Identifier	Z_STRLEN_P		2002029	0					
ANR	2003528	ArgumentList	tmp		2002029	1					
ANR	2003529	Argument	tmp		2002029	0					
ANR	2003530	Identifier	tmp		2002029	0					
ANR	2003531	Argument	0		2002029	2					
ANR	2003532	PrimaryExpression	0		2002029	0					
ANR	2003533	Argument	0		2002029	3					
ANR	2003534	PrimaryExpression	0		2002029	0					
ANR	2003535	Argument	NULL		2002029	4					
ANR	2003536	Identifier	NULL		2002029	0					
ANR	2003537	ExpressionStatement	"node = xmlNewChild ( node , ns , BAD_CAST ( ""Value"" ) , NULL )"	4027:4:135150:135203	2002029	2	True				
ANR	2003538	AssignmentExpression	"node = xmlNewChild ( node , ns , BAD_CAST ( ""Value"" ) , NULL )"		2002029	0		=			
ANR	2003539	Identifier	node		2002029	0					
ANR	2003540	CallExpression	"xmlNewChild ( node , ns , BAD_CAST ( ""Value"" ) , NULL )"		2002029	1					
ANR	2003541	Callee	xmlNewChild		2002029	0					
ANR	2003542	Identifier	xmlNewChild		2002029	0					
ANR	2003543	ArgumentList	node		2002029	1					
ANR	2003544	Argument	node		2002029	0					
ANR	2003545	Identifier	node		2002029	0					
ANR	2003546	Argument	ns		2002029	1					
ANR	2003547	Identifier	ns		2002029	0					
ANR	2003548	Argument	"BAD_CAST ( ""Value"" )"		2002029	2					
ANR	2003549	CallExpression	"BAD_CAST ( ""Value"" )"		2002029	0					
ANR	2003550	Callee	BAD_CAST		2002029	0					
ANR	2003551	Identifier	BAD_CAST		2002029	0					
ANR	2003552	ArgumentList	"""Value"""		2002029	1					
ANR	2003553	Argument	"""Value"""		2002029	0					
ANR	2003554	PrimaryExpression	"""Value"""		2002029	0					
ANR	2003555	Argument	NULL		2002029	3					
ANR	2003556	Identifier	NULL		2002029	0					
ANR	2003557	IfStatement	if ( fault_ns )		2002029	3					
ANR	2003558	Condition	fault_ns	4028:8:135213:135220	2002029	0	True				
ANR	2003559	Identifier	fault_ns		2002029	0					
ANR	2003560	CompoundStatement		177:5:6405:6483	2002029	1					
ANR	2003561	IdentifierDeclStatement	"xmlNsPtr nsptr = encode_add_ns ( node , fault_ns ) ;"	4029:5:135230:135276	2002029	0	True				
ANR	2003562	IdentifierDecl	"nsptr = encode_add_ns ( node , fault_ns )"		2002029	0					
ANR	2003563	IdentifierDeclType	xmlNsPtr		2002029	0					
ANR	2003564	Identifier	nsptr		2002029	1					
ANR	2003565	AssignmentExpression	"nsptr = encode_add_ns ( node , fault_ns )"		2002029	2		=			
ANR	2003566	Identifier	nsptr		2002029	0					
ANR	2003567	CallExpression	"encode_add_ns ( node , fault_ns )"		2002029	1					
ANR	2003568	Callee	encode_add_ns		2002029	0					
ANR	2003569	Identifier	encode_add_ns		2002029	0					
ANR	2003570	ArgumentList	node		2002029	1					
ANR	2003571	Argument	node		2002029	0					
ANR	2003572	Identifier	node		2002029	0					
ANR	2003573	Argument	fault_ns		2002029	1					
ANR	2003574	Identifier	fault_ns		2002029	0					
ANR	2003575	IdentifierDeclStatement	"xmlChar * code = xmlBuildQName ( BAD_CAST ( ZSTR_VAL ( str ) ) , nsptr -> prefix , NULL , 0 ) ;"	4030:5:135283:135361	2002029	1	True				
ANR	2003576	IdentifierDecl	"* code = xmlBuildQName ( BAD_CAST ( ZSTR_VAL ( str ) ) , nsptr -> prefix , NULL , 0 )"		2002029	0					
ANR	2003577	IdentifierDeclType	xmlChar *		2002029	0					
ANR	2003578	Identifier	code		2002029	1					
ANR	2003579	AssignmentExpression	"* code = xmlBuildQName ( BAD_CAST ( ZSTR_VAL ( str ) ) , nsptr -> prefix , NULL , 0 )"		2002029	2		=			
ANR	2003580	Identifier	code		2002029	0					
ANR	2003581	CallExpression	"xmlBuildQName ( BAD_CAST ( ZSTR_VAL ( str ) ) , nsptr -> prefix , NULL , 0 )"		2002029	1					
ANR	2003582	Callee	xmlBuildQName		2002029	0					
ANR	2003583	Identifier	xmlBuildQName		2002029	0					
ANR	2003584	ArgumentList	BAD_CAST ( ZSTR_VAL ( str ) )		2002029	1					
ANR	2003585	Argument	BAD_CAST ( ZSTR_VAL ( str ) )		2002029	0					
ANR	2003586	CallExpression	BAD_CAST ( ZSTR_VAL ( str ) )		2002029	0					
ANR	2003587	Callee	BAD_CAST		2002029	0					
ANR	2003588	Identifier	BAD_CAST		2002029	0					
ANR	2003589	ArgumentList	ZSTR_VAL ( str )		2002029	1					
ANR	2003590	Argument	ZSTR_VAL ( str )		2002029	0					
ANR	2003591	CallExpression	ZSTR_VAL ( str )		2002029	0					
ANR	2003592	Callee	ZSTR_VAL		2002029	0					
ANR	2003593	Identifier	ZSTR_VAL		2002029	0					
ANR	2003594	ArgumentList	str		2002029	1					
ANR	2003595	Argument	str		2002029	0					
ANR	2003596	Identifier	str		2002029	0					
ANR	2003597	Argument	nsptr -> prefix		2002029	1					
ANR	2003598	PtrMemberAccess	nsptr -> prefix		2002029	0					
ANR	2003599	Identifier	nsptr		2002029	0					
ANR	2003600	Identifier	prefix		2002029	1					
ANR	2003601	Argument	NULL		2002029	2					
ANR	2003602	Identifier	NULL		2002029	0					
ANR	2003603	Argument	0		2002029	3					
ANR	2003604	PrimaryExpression	0		2002029	0					
ANR	2003605	ExpressionStatement	"xmlNodeSetContent ( node , code )"	4031:5:135368:135397	2002029	2	True				
ANR	2003606	CallExpression	"xmlNodeSetContent ( node , code )"		2002029	0					
ANR	2003607	Callee	xmlNodeSetContent		2002029	0					
ANR	2003608	Identifier	xmlNodeSetContent		2002029	0					
ANR	2003609	ArgumentList	node		2002029	1					
ANR	2003610	Argument	node		2002029	0					
ANR	2003611	Identifier	node		2002029	0					
ANR	2003612	Argument	code		2002029	1					
ANR	2003613	Identifier	code		2002029	0					
ANR	2003614	ExpressionStatement	xmlFree ( code )	4032:5:135404:135417	2002029	3	True				
ANR	2003615	CallExpression	xmlFree ( code )		2002029	0					
ANR	2003616	Callee	xmlFree		2002029	0					
ANR	2003617	Identifier	xmlFree		2002029	0					
ANR	2003618	ArgumentList	code		2002029	1					
ANR	2003619	Argument	code		2002029	0					
ANR	2003620	Identifier	code		2002029	0					
ANR	2003621	ElseStatement	else		2002029	0					
ANR	2003622	CompoundStatement		180:11:6552:6552	2002029	0					
ANR	2003623	ExpressionStatement	"xmlNodeSetContentLen ( node , BAD_CAST ( ZSTR_VAL ( str ) ) , ( int ) ZSTR_LEN ( str ) )"	4034:5:135437:135508	2002029	0	True				
ANR	2003624	CallExpression	"xmlNodeSetContentLen ( node , BAD_CAST ( ZSTR_VAL ( str ) ) , ( int ) ZSTR_LEN ( str ) )"		2002029	0					
ANR	2003625	Callee	xmlNodeSetContentLen		2002029	0					
ANR	2003626	Identifier	xmlNodeSetContentLen		2002029	0					
ANR	2003627	ArgumentList	node		2002029	1					
ANR	2003628	Argument	node		2002029	0					
ANR	2003629	Identifier	node		2002029	0					
ANR	2003630	Argument	BAD_CAST ( ZSTR_VAL ( str ) )		2002029	1					
ANR	2003631	CallExpression	BAD_CAST ( ZSTR_VAL ( str ) )		2002029	0					
ANR	2003632	Callee	BAD_CAST		2002029	0					
ANR	2003633	Identifier	BAD_CAST		2002029	0					
ANR	2003634	ArgumentList	ZSTR_VAL ( str )		2002029	1					
ANR	2003635	Argument	ZSTR_VAL ( str )		2002029	0					
ANR	2003636	CallExpression	ZSTR_VAL ( str )		2002029	0					
ANR	2003637	Callee	ZSTR_VAL		2002029	0					
ANR	2003638	Identifier	ZSTR_VAL		2002029	0					
ANR	2003639	ArgumentList	str		2002029	1					
ANR	2003640	Argument	str		2002029	0					
ANR	2003641	Identifier	str		2002029	0					
ANR	2003642	Argument	( int ) ZSTR_LEN ( str )		2002029	2					
ANR	2003643	CastExpression	( int ) ZSTR_LEN ( str )		2002029	0					
ANR	2003644	CastTarget	int		2002029	0					
ANR	2003645	CallExpression	ZSTR_LEN ( str )		2002029	1					
ANR	2003646	Callee	ZSTR_LEN		2002029	0					
ANR	2003647	Identifier	ZSTR_LEN		2002029	0					
ANR	2003648	ArgumentList	str		2002029	1					
ANR	2003649	Argument	str		2002029	0					
ANR	2003650	Identifier	str		2002029	0					
ANR	2003651	ExpressionStatement	zend_string_release ( str )	4036:4:135520:135544	2002029	4	True				
ANR	2003652	CallExpression	zend_string_release ( str )		2002029	0					
ANR	2003653	Callee	zend_string_release		2002029	0					
ANR	2003654	Identifier	zend_string_release		2002029	0					
ANR	2003655	ArgumentList	str		2002029	1					
ANR	2003656	Argument	str		2002029	0					
ANR	2003657	Identifier	str		2002029	0					
ANR	2003658	IfStatement	"if ( ( tmp = zend_hash_str_find ( prop , ""faultstring"" , sizeof ( ""faultstring"" ) - 1 ) ) != NULL )"		2002029	1					
ANR	2003659	Condition	"( tmp = zend_hash_str_find ( prop , ""faultstring"" , sizeof ( ""faultstring"" ) - 1 ) ) != NULL"	4038:7:135558:135637	2002029	0	True				
ANR	2003660	EqualityExpression	"( tmp = zend_hash_str_find ( prop , ""faultstring"" , sizeof ( ""faultstring"" ) - 1 ) ) != NULL"		2002029	0		!=			
ANR	2003661	AssignmentExpression	"tmp = zend_hash_str_find ( prop , ""faultstring"" , sizeof ( ""faultstring"" ) - 1 )"		2002029	0		=			
ANR	2003662	Identifier	tmp		2002029	0					
ANR	2003663	CallExpression	"zend_hash_str_find ( prop , ""faultstring"" , sizeof ( ""faultstring"" ) - 1 )"		2002029	1					
ANR	2003664	Callee	zend_hash_str_find		2002029	0					
ANR	2003665	Identifier	zend_hash_str_find		2002029	0					
ANR	2003666	ArgumentList	prop		2002029	1					
ANR	2003667	Argument	prop		2002029	0					
ANR	2003668	Identifier	prop		2002029	0					
ANR	2003669	Argument	"""faultstring"""		2002029	1					
ANR	2003670	PrimaryExpression	"""faultstring"""		2002029	0					
ANR	2003671	Argument	"sizeof ( ""faultstring"" ) - 1"		2002029	2					
ANR	2003672	AdditiveExpression	"sizeof ( ""faultstring"" ) - 1"		2002029	0		-			
ANR	2003673	SizeofExpression	"sizeof ( ""faultstring"" )"		2002029	0					
ANR	2003674	Sizeof	sizeof		2002029	0					
ANR	2003675	PrimaryExpression	"""faultstring"""		2002029	1					
ANR	2003676	PrimaryExpression	1		2002029	1					
ANR	2003677	Identifier	NULL		2002029	1					
ANR	2003678	CompoundStatement		186:4:6768:6834	2002029	1					
ANR	2003679	IdentifierDeclStatement	"xmlNodePtr node = xmlNewChild ( param , ns , BAD_CAST ( ""Reason"" ) , NULL ) ;"	4039:4:135646:135712	2002029	0	True				
ANR	2003680	IdentifierDecl	"node = xmlNewChild ( param , ns , BAD_CAST ( ""Reason"" ) , NULL )"		2002029	0					
ANR	2003681	IdentifierDeclType	xmlNodePtr		2002029	0					
ANR	2003682	Identifier	node		2002029	1					
ANR	2003683	AssignmentExpression	"node = xmlNewChild ( param , ns , BAD_CAST ( ""Reason"" ) , NULL )"		2002029	2		=			
ANR	2003684	Identifier	node		2002029	0					
ANR	2003685	CallExpression	"xmlNewChild ( param , ns , BAD_CAST ( ""Reason"" ) , NULL )"		2002029	1					
ANR	2003686	Callee	xmlNewChild		2002029	0					
ANR	2003687	Identifier	xmlNewChild		2002029	0					
ANR	2003688	ArgumentList	param		2002029	1					
ANR	2003689	Argument	param		2002029	0					
ANR	2003690	Identifier	param		2002029	0					
ANR	2003691	Argument	ns		2002029	1					
ANR	2003692	Identifier	ns		2002029	0					
ANR	2003693	Argument	"BAD_CAST ( ""Reason"" )"		2002029	2					
ANR	2003694	CallExpression	"BAD_CAST ( ""Reason"" )"		2002029	0					
ANR	2003695	Callee	BAD_CAST		2002029	0					
ANR	2003696	Identifier	BAD_CAST		2002029	0					
ANR	2003697	ArgumentList	"""Reason"""		2002029	1					
ANR	2003698	Argument	"""Reason"""		2002029	0					
ANR	2003699	PrimaryExpression	"""Reason"""		2002029	0					
ANR	2003700	Argument	NULL		2002029	3					
ANR	2003701	Identifier	NULL		2002029	0					
ANR	2003702	ExpressionStatement	"node = master_to_xml ( get_conversion ( IS_STRING ) , tmp , SOAP_LITERAL , node )"	4040:4:135718:135790	2002029	1	True				
ANR	2003703	AssignmentExpression	"node = master_to_xml ( get_conversion ( IS_STRING ) , tmp , SOAP_LITERAL , node )"		2002029	0		=			
ANR	2003704	Identifier	node		2002029	0					
ANR	2003705	CallExpression	"master_to_xml ( get_conversion ( IS_STRING ) , tmp , SOAP_LITERAL , node )"		2002029	1					
ANR	2003706	Callee	master_to_xml		2002029	0					
ANR	2003707	Identifier	master_to_xml		2002029	0					
ANR	2003708	ArgumentList	get_conversion ( IS_STRING )		2002029	1					
ANR	2003709	Argument	get_conversion ( IS_STRING )		2002029	0					
ANR	2003710	CallExpression	get_conversion ( IS_STRING )		2002029	0					
ANR	2003711	Callee	get_conversion		2002029	0					
ANR	2003712	Identifier	get_conversion		2002029	0					
ANR	2003713	ArgumentList	IS_STRING		2002029	1					
ANR	2003714	Argument	IS_STRING		2002029	0					
ANR	2003715	Identifier	IS_STRING		2002029	0					
ANR	2003716	Argument	tmp		2002029	1					
ANR	2003717	Identifier	tmp		2002029	0					
ANR	2003718	Argument	SOAP_LITERAL		2002029	2					
ANR	2003719	Identifier	SOAP_LITERAL		2002029	0					
ANR	2003720	Argument	node		2002029	3					
ANR	2003721	Identifier	node		2002029	0					
ANR	2003722	ExpressionStatement	"xmlNodeSetName ( node , BAD_CAST ( ""Text"" ) )"	4041:4:135796:135834	2002029	2	True				
ANR	2003723	CallExpression	"xmlNodeSetName ( node , BAD_CAST ( ""Text"" ) )"		2002029	0					
ANR	2003724	Callee	xmlNodeSetName		2002029	0					
ANR	2003725	Identifier	xmlNodeSetName		2002029	0					
ANR	2003726	ArgumentList	node		2002029	1					
ANR	2003727	Argument	node		2002029	0					
ANR	2003728	Identifier	node		2002029	0					
ANR	2003729	Argument	"BAD_CAST ( ""Text"" )"		2002029	1					
ANR	2003730	CallExpression	"BAD_CAST ( ""Text"" )"		2002029	0					
ANR	2003731	Callee	BAD_CAST		2002029	0					
ANR	2003732	Identifier	BAD_CAST		2002029	0					
ANR	2003733	ArgumentList	"""Text"""		2002029	1					
ANR	2003734	Argument	"""Text"""		2002029	0					
ANR	2003735	PrimaryExpression	"""Text"""		2002029	0					
ANR	2003736	ExpressionStatement	"xmlSetNs ( node , ns )"	4042:4:135840:135858	2002029	3	True				
ANR	2003737	CallExpression	"xmlSetNs ( node , ns )"		2002029	0					
ANR	2003738	Callee	xmlSetNs		2002029	0					
ANR	2003739	Identifier	xmlSetNs		2002029	0					
ANR	2003740	ArgumentList	node		2002029	1					
ANR	2003741	Argument	node		2002029	0					
ANR	2003742	Identifier	node		2002029	0					
ANR	2003743	Argument	ns		2002029	1					
ANR	2003744	Identifier	ns		2002029	0					
ANR	2003745	Statement	detail_name	4044:3:135868:135878	2002029	2	True				
ANR	2003746	Statement	=	4044:15:135880:135880	2002029	3	True				
ANR	2003747	Statement	SOAP_1_2_ENV_NS_PREFIX	4044:17:135882:135903	2002029	4	True				
ANR	2003748	ExpressionStatement	""":Detail"""	4044:39:135904:135913	2002029	5	True				
ANR	2003749	PrimaryExpression	""":Detail"""		2002029	0					
ANR	2003750	IfStatement	if ( fault && fault -> details && zend_hash_num_elements ( fault -> details ) == 1 )		2002029	14					
ANR	2003751	Condition	fault && fault -> details && zend_hash_num_elements ( fault -> details ) == 1	4046:6:135925:135994	2002029	0	True				
ANR	2003752	AndExpression	fault && fault -> details && zend_hash_num_elements ( fault -> details ) == 1		2002029	0		&&			
ANR	2003753	Identifier	fault		2002029	0					
ANR	2003754	AndExpression	fault -> details && zend_hash_num_elements ( fault -> details ) == 1		2002029	1		&&			
ANR	2003755	PtrMemberAccess	fault -> details		2002029	0					
ANR	2003756	Identifier	fault		2002029	0					
ANR	2003757	Identifier	details		2002029	1					
ANR	2003758	EqualityExpression	zend_hash_num_elements ( fault -> details ) == 1		2002029	1		==			
ANR	2003759	CallExpression	zend_hash_num_elements ( fault -> details )		2002029	0					
ANR	2003760	Callee	zend_hash_num_elements		2002029	0					
ANR	2003761	Identifier	zend_hash_num_elements		2002029	0					
ANR	2003762	ArgumentList	fault -> details		2002029	1					
ANR	2003763	Argument	fault -> details		2002029	0					
ANR	2003764	PtrMemberAccess	fault -> details		2002029	0					
ANR	2003765	Identifier	fault		2002029	0					
ANR	2003766	Identifier	details		2002029	1					
ANR	2003767	PrimaryExpression	1		2002029	1					
ANR	2003768	CompoundStatement		197:3:7191:7203	2002029	1					
ANR	2003769	IdentifierDeclStatement	xmlNodePtr node ;	4047:3:136002:136017	2002029	0	True				
ANR	2003770	IdentifierDecl	node		2002029	0					
ANR	2003771	IdentifierDeclType	xmlNodePtr		2002029	0					
ANR	2003772	Identifier	node		2002029	1					
ANR	2003773	IdentifierDeclStatement	zval * detail = NULL ;	4048:3:136022:136041	2002029	1	True				
ANR	2003774	IdentifierDecl	* detail = NULL		2002029	0					
ANR	2003775	IdentifierDeclType	zval *		2002029	0					
ANR	2003776	Identifier	detail		2002029	1					
ANR	2003777	AssignmentExpression	* detail = NULL		2002029	2		=			
ANR	2003778	Identifier	NULL		2002029	0					
ANR	2003779	Identifier	NULL		2002029	1					
ANR	2003780	IdentifierDeclStatement	sdlParamPtr sparam ;	4049:3:136046:136064	2002029	2	True				
ANR	2003781	IdentifierDecl	sparam		2002029	0					
ANR	2003782	IdentifierDeclType	sdlParamPtr		2002029	0					
ANR	2003783	Identifier	sparam		2002029	1					
ANR	2003784	IdentifierDeclStatement	xmlNodePtr x ;	4050:3:136069:136081	2002029	3	True				
ANR	2003785	IdentifierDecl	x		2002029	0					
ANR	2003786	IdentifierDeclType	xmlNodePtr		2002029	0					
ANR	2003787	Identifier	x		2002029	1					
ANR	2003788	IfStatement	"if ( ( tmp = zend_hash_str_find ( prop , ""detail"" , sizeof ( ""detail"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) != IS_NULL )"		2002029	4					
ANR	2003789	Condition	"( tmp = zend_hash_str_find ( prop , ""detail"" , sizeof ( ""detail"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) != IS_NULL"	4052:7:136091:136195	2002029	0	True				
ANR	2003790	AndExpression	"( tmp = zend_hash_str_find ( prop , ""detail"" , sizeof ( ""detail"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) != IS_NULL"		2002029	0		&&			
ANR	2003791	EqualityExpression	"( tmp = zend_hash_str_find ( prop , ""detail"" , sizeof ( ""detail"" ) - 1 ) ) != NULL"		2002029	0		!=			
ANR	2003792	AssignmentExpression	"tmp = zend_hash_str_find ( prop , ""detail"" , sizeof ( ""detail"" ) - 1 )"		2002029	0		=			
ANR	2003793	Identifier	tmp		2002029	0					
ANR	2003794	CallExpression	"zend_hash_str_find ( prop , ""detail"" , sizeof ( ""detail"" ) - 1 )"		2002029	1					
ANR	2003795	Callee	zend_hash_str_find		2002029	0					
ANR	2003796	Identifier	zend_hash_str_find		2002029	0					
ANR	2003797	ArgumentList	prop		2002029	1					
ANR	2003798	Argument	prop		2002029	0					
ANR	2003799	Identifier	prop		2002029	0					
ANR	2003800	Argument	"""detail"""		2002029	1					
ANR	2003801	PrimaryExpression	"""detail"""		2002029	0					
ANR	2003802	Argument	"sizeof ( ""detail"" ) - 1"		2002029	2					
ANR	2003803	AdditiveExpression	"sizeof ( ""detail"" ) - 1"		2002029	0		-			
ANR	2003804	SizeofExpression	"sizeof ( ""detail"" )"		2002029	0					
ANR	2003805	Sizeof	sizeof		2002029	0					
ANR	2003806	PrimaryExpression	"""detail"""		2002029	1					
ANR	2003807	PrimaryExpression	1		2002029	1					
ANR	2003808	Identifier	NULL		2002029	1					
ANR	2003809	EqualityExpression	Z_TYPE_P ( tmp ) != IS_NULL		2002029	1		!=			
ANR	2003810	CallExpression	Z_TYPE_P ( tmp )		2002029	0					
ANR	2003811	Callee	Z_TYPE_P		2002029	0					
ANR	2003812	Identifier	Z_TYPE_P		2002029	0					
ANR	2003813	ArgumentList	tmp		2002029	1					
ANR	2003814	Argument	tmp		2002029	0					
ANR	2003815	Identifier	tmp		2002029	0					
ANR	2003816	Identifier	IS_NULL		2002029	1					
ANR	2003817	CompoundStatement		200:33:7320:7320	2002029	1					
ANR	2003818	ExpressionStatement	detail = tmp	4054:4:136204:136216	2002029	0	True				
ANR	2003819	AssignmentExpression	detail = tmp		2002029	0		=			
ANR	2003820	Identifier	detail		2002029	0					
ANR	2003821	Identifier	tmp		2002029	1					
ANR	2003822	ExpressionStatement	"node = xmlNewNode ( NULL , BAD_CAST ( detail_name ) )"	4056:3:136226:136272	2002029	5	True				
ANR	2003823	AssignmentExpression	"node = xmlNewNode ( NULL , BAD_CAST ( detail_name ) )"		2002029	0		=			
ANR	2003824	Identifier	node		2002029	0					
ANR	2003825	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( detail_name ) )"		2002029	1					
ANR	2003826	Callee	xmlNewNode		2002029	0					
ANR	2003827	Identifier	xmlNewNode		2002029	0					
ANR	2003828	ArgumentList	NULL		2002029	1					
ANR	2003829	Argument	NULL		2002029	0					
ANR	2003830	Identifier	NULL		2002029	0					
ANR	2003831	Argument	BAD_CAST ( detail_name )		2002029	1					
ANR	2003832	CallExpression	BAD_CAST ( detail_name )		2002029	0					
ANR	2003833	Callee	BAD_CAST		2002029	0					
ANR	2003834	Identifier	BAD_CAST		2002029	0					
ANR	2003835	ArgumentList	detail_name		2002029	1					
ANR	2003836	Argument	detail_name		2002029	0					
ANR	2003837	Identifier	detail_name		2002029	0					
ANR	2003838	ExpressionStatement	"xmlAddChild ( param , node )"	4057:3:136277:136301	2002029	6	True				
ANR	2003839	CallExpression	"xmlAddChild ( param , node )"		2002029	0					
ANR	2003840	Callee	xmlAddChild		2002029	0					
ANR	2003841	Identifier	xmlAddChild		2002029	0					
ANR	2003842	ArgumentList	param		2002029	1					
ANR	2003843	Argument	param		2002029	0					
ANR	2003844	Identifier	param		2002029	0					
ANR	2003845	Argument	node		2002029	1					
ANR	2003846	Identifier	node		2002029	0					
ANR	2003847	ExpressionStatement	zend_hash_internal_pointer_reset ( fault -> details )	4059:3:136307:136355	2002029	7	True				
ANR	2003848	CallExpression	zend_hash_internal_pointer_reset ( fault -> details )		2002029	0					
ANR	2003849	Callee	zend_hash_internal_pointer_reset		2002029	0					
ANR	2003850	Identifier	zend_hash_internal_pointer_reset		2002029	0					
ANR	2003851	ArgumentList	fault -> details		2002029	1					
ANR	2003852	Argument	fault -> details		2002029	0					
ANR	2003853	PtrMemberAccess	fault -> details		2002029	0					
ANR	2003854	Identifier	fault		2002029	0					
ANR	2003855	Identifier	details		2002029	1					
ANR	2003856	ExpressionStatement	sparam = zend_hash_get_current_data_ptr ( fault -> details )	4060:3:136360:136415	2002029	8	True				
ANR	2003857	AssignmentExpression	sparam = zend_hash_get_current_data_ptr ( fault -> details )		2002029	0		=			
ANR	2003858	Identifier	sparam		2002029	0					
ANR	2003859	CallExpression	zend_hash_get_current_data_ptr ( fault -> details )		2002029	1					
ANR	2003860	Callee	zend_hash_get_current_data_ptr		2002029	0					
ANR	2003861	Identifier	zend_hash_get_current_data_ptr		2002029	0					
ANR	2003862	ArgumentList	fault -> details		2002029	1					
ANR	2003863	Argument	fault -> details		2002029	0					
ANR	2003864	PtrMemberAccess	fault -> details		2002029	0					
ANR	2003865	Identifier	fault		2002029	0					
ANR	2003866	Identifier	details		2002029	1					
ANR	2003867	IfStatement	"if ( detail && Z_TYPE_P ( detail ) == IS_OBJECT && sparam -> element && zend_hash_num_elements ( Z_OBJPROP_P ( detail ) ) == 1 && ( tmp = zend_hash_str_find ( Z_OBJPROP_P ( detail ) , sparam -> element -> name , strlen ( sparam -> element -> name ) ) ) != NULL )"		2002029	9					
ANR	2003868	Condition	"detail && Z_TYPE_P ( detail ) == IS_OBJECT && sparam -> element && zend_hash_num_elements ( Z_OBJPROP_P ( detail ) ) == 1 && ( tmp = zend_hash_str_find ( Z_OBJPROP_P ( detail ) , sparam -> element -> name , strlen ( sparam -> element -> name ) ) ) != NULL"	4062:7:136425:136675	2002029	0	True				
ANR	2003869	AndExpression	"detail && Z_TYPE_P ( detail ) == IS_OBJECT && sparam -> element && zend_hash_num_elements ( Z_OBJPROP_P ( detail ) ) == 1 && ( tmp = zend_hash_str_find ( Z_OBJPROP_P ( detail ) , sparam -> element -> name , strlen ( sparam -> element -> name ) ) ) != NULL"		2002029	0		&&			
ANR	2003870	Identifier	detail		2002029	0					
ANR	2003871	AndExpression	"Z_TYPE_P ( detail ) == IS_OBJECT && sparam -> element && zend_hash_num_elements ( Z_OBJPROP_P ( detail ) ) == 1 && ( tmp = zend_hash_str_find ( Z_OBJPROP_P ( detail ) , sparam -> element -> name , strlen ( sparam -> element -> name ) ) ) != NULL"		2002029	1		&&			
ANR	2003872	EqualityExpression	Z_TYPE_P ( detail ) == IS_OBJECT		2002029	0		==			
ANR	2003873	CallExpression	Z_TYPE_P ( detail )		2002029	0					
ANR	2003874	Callee	Z_TYPE_P		2002029	0					
ANR	2003875	Identifier	Z_TYPE_P		2002029	0					
ANR	2003876	ArgumentList	detail		2002029	1					
ANR	2003877	Argument	detail		2002029	0					
ANR	2003878	Identifier	detail		2002029	0					
ANR	2003879	Identifier	IS_OBJECT		2002029	1					
ANR	2003880	AndExpression	"sparam -> element && zend_hash_num_elements ( Z_OBJPROP_P ( detail ) ) == 1 && ( tmp = zend_hash_str_find ( Z_OBJPROP_P ( detail ) , sparam -> element -> name , strlen ( sparam -> element -> name ) ) ) != NULL"		2002029	1		&&			
ANR	2003881	PtrMemberAccess	sparam -> element		2002029	0					
ANR	2003882	Identifier	sparam		2002029	0					
ANR	2003883	Identifier	element		2002029	1					
ANR	2003884	AndExpression	"zend_hash_num_elements ( Z_OBJPROP_P ( detail ) ) == 1 && ( tmp = zend_hash_str_find ( Z_OBJPROP_P ( detail ) , sparam -> element -> name , strlen ( sparam -> element -> name ) ) ) != NULL"		2002029	1		&&			
ANR	2003885	EqualityExpression	zend_hash_num_elements ( Z_OBJPROP_P ( detail ) ) == 1		2002029	0		==			
ANR	2003886	CallExpression	zend_hash_num_elements ( Z_OBJPROP_P ( detail ) )		2002029	0					
ANR	2003887	Callee	zend_hash_num_elements		2002029	0					
ANR	2003888	Identifier	zend_hash_num_elements		2002029	0					
ANR	2003889	ArgumentList	Z_OBJPROP_P ( detail )		2002029	1					
ANR	2003890	Argument	Z_OBJPROP_P ( detail )		2002029	0					
ANR	2003891	CallExpression	Z_OBJPROP_P ( detail )		2002029	0					
ANR	2003892	Callee	Z_OBJPROP_P		2002029	0					
ANR	2003893	Identifier	Z_OBJPROP_P		2002029	0					
ANR	2003894	ArgumentList	detail		2002029	1					
ANR	2003895	Argument	detail		2002029	0					
ANR	2003896	Identifier	detail		2002029	0					
ANR	2003897	PrimaryExpression	1		2002029	1					
ANR	2003898	EqualityExpression	"( tmp = zend_hash_str_find ( Z_OBJPROP_P ( detail ) , sparam -> element -> name , strlen ( sparam -> element -> name ) ) ) != NULL"		2002029	1		!=			
ANR	2003899	AssignmentExpression	"tmp = zend_hash_str_find ( Z_OBJPROP_P ( detail ) , sparam -> element -> name , strlen ( sparam -> element -> name ) )"		2002029	0		=			
ANR	2003900	Identifier	tmp		2002029	0					
ANR	2003901	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( detail ) , sparam -> element -> name , strlen ( sparam -> element -> name ) )"		2002029	1					
ANR	2003902	Callee	zend_hash_str_find		2002029	0					
ANR	2003903	Identifier	zend_hash_str_find		2002029	0					
ANR	2003904	ArgumentList	Z_OBJPROP_P ( detail )		2002029	1					
ANR	2003905	Argument	Z_OBJPROP_P ( detail )		2002029	0					
ANR	2003906	CallExpression	Z_OBJPROP_P ( detail )		2002029	0					
ANR	2003907	Callee	Z_OBJPROP_P		2002029	0					
ANR	2003908	Identifier	Z_OBJPROP_P		2002029	0					
ANR	2003909	ArgumentList	detail		2002029	1					
ANR	2003910	Argument	detail		2002029	0					
ANR	2003911	Identifier	detail		2002029	0					
ANR	2003912	Argument	sparam -> element -> name		2002029	1					
ANR	2003913	PtrMemberAccess	sparam -> element -> name		2002029	0					
ANR	2003914	PtrMemberAccess	sparam -> element		2002029	0					
ANR	2003915	Identifier	sparam		2002029	0					
ANR	2003916	Identifier	element		2002029	1					
ANR	2003917	Identifier	name		2002029	1					
ANR	2003918	Argument	strlen ( sparam -> element -> name )		2002029	2					
ANR	2003919	CallExpression	strlen ( sparam -> element -> name )		2002029	0					
ANR	2003920	Callee	strlen		2002029	0					
ANR	2003921	Identifier	strlen		2002029	0					
ANR	2003922	ArgumentList	sparam -> element -> name		2002029	1					
ANR	2003923	Argument	sparam -> element -> name		2002029	0					
ANR	2003924	PtrMemberAccess	sparam -> element -> name		2002029	0					
ANR	2003925	PtrMemberAccess	sparam -> element		2002029	0					
ANR	2003926	Identifier	sparam		2002029	0					
ANR	2003927	Identifier	element		2002029	1					
ANR	2003928	Identifier	name		2002029	1					
ANR	2003929	Identifier	NULL		2002029	1					
ANR	2003930	CompoundStatement		213:118:7800:7800	2002029	1					
ANR	2003931	ExpressionStatement	detail = tmp	4067:4:136684:136696	2002029	0	True				
ANR	2003932	AssignmentExpression	detail = tmp		2002029	0		=			
ANR	2003933	Identifier	detail		2002029	0					
ANR	2003934	Identifier	tmp		2002029	1					
ANR	2003935	ExpressionStatement	"x = serialize_parameter ( sparam , detail , 1 , NULL , use , node )"	4070:3:136707:136766	2002029	10	True				
ANR	2003936	AssignmentExpression	"x = serialize_parameter ( sparam , detail , 1 , NULL , use , node )"		2002029	0		=			
ANR	2003937	Identifier	x		2002029	0					
ANR	2003938	CallExpression	"serialize_parameter ( sparam , detail , 1 , NULL , use , node )"		2002029	1					
ANR	2003939	Callee	serialize_parameter		2002029	0					
ANR	2003940	Identifier	serialize_parameter		2002029	0					
ANR	2003941	ArgumentList	sparam		2002029	1					
ANR	2003942	Argument	sparam		2002029	0					
ANR	2003943	Identifier	sparam		2002029	0					
ANR	2003944	Argument	detail		2002029	1					
ANR	2003945	Identifier	detail		2002029	0					
ANR	2003946	Argument	1		2002029	2					
ANR	2003947	PrimaryExpression	1		2002029	0					
ANR	2003948	Argument	NULL		2002029	3					
ANR	2003949	Identifier	NULL		2002029	0					
ANR	2003950	Argument	use		2002029	4					
ANR	2003951	Identifier	use		2002029	0					
ANR	2003952	Argument	node		2002029	5					
ANR	2003953	Identifier	node		2002029	0					
ANR	2003954	IfStatement	if ( function && function -> binding && function -> binding -> bindingType == BINDING_SOAP && function -> bindingAttributes )		2002029	11					
ANR	2003955	Condition	function && function -> binding && function -> binding -> bindingType == BINDING_SOAP && function -> bindingAttributes	4072:7:136776:136906	2002029	0	True				
ANR	2003956	AndExpression	function && function -> binding && function -> binding -> bindingType == BINDING_SOAP && function -> bindingAttributes		2002029	0		&&			
ANR	2003957	Identifier	function		2002029	0					
ANR	2003958	AndExpression	function -> binding && function -> binding -> bindingType == BINDING_SOAP && function -> bindingAttributes		2002029	1		&&			
ANR	2003959	PtrMemberAccess	function -> binding		2002029	0					
ANR	2003960	Identifier	function		2002029	0					
ANR	2003961	Identifier	binding		2002029	1					
ANR	2003962	AndExpression	function -> binding -> bindingType == BINDING_SOAP && function -> bindingAttributes		2002029	1		&&			
ANR	2003963	EqualityExpression	function -> binding -> bindingType == BINDING_SOAP		2002029	0		==			
ANR	2003964	PtrMemberAccess	function -> binding -> bindingType		2002029	0					
ANR	2003965	PtrMemberAccess	function -> binding		2002029	0					
ANR	2003966	Identifier	function		2002029	0					
ANR	2003967	Identifier	binding		2002029	1					
ANR	2003968	Identifier	bindingType		2002029	1					
ANR	2003969	Identifier	BINDING_SOAP		2002029	1					
ANR	2003970	PtrMemberAccess	function -> bindingAttributes		2002029	1					
ANR	2003971	Identifier	function		2002029	0					
ANR	2003972	Identifier	bindingAttributes		2002029	1					
ANR	2003973	CompoundStatement		223:4:8037:8123	2002029	1					
ANR	2003974	IdentifierDeclStatement	sdlSoapBindingFunctionPtr fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes ;	4076:4:136915:137001	2002029	0	True				
ANR	2003975	IdentifierDecl	fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		2002029	0					
ANR	2003976	IdentifierDeclType	sdlSoapBindingFunctionPtr		2002029	0					
ANR	2003977	Identifier	fnb		2002029	1					
ANR	2003978	AssignmentExpression	fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		2002029	2		=			
ANR	2003979	Identifier	fnb		2002029	0					
ANR	2003980	CastExpression	( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		2002029	1					
ANR	2003981	CastTarget	sdlSoapBindingFunctionPtr		2002029	0					
ANR	2003982	PtrMemberAccess	function -> bindingAttributes		2002029	1					
ANR	2003983	Identifier	function		2002029	0					
ANR	2003984	Identifier	bindingAttributes		2002029	1					
ANR	2003985	IfStatement	if ( fnb -> style == SOAP_RPC && ! sparam -> element )		2002029	1					
ANR	2003986	Condition	fnb -> style == SOAP_RPC && ! sparam -> element	4077:8:137011:137052	2002029	0	True				
ANR	2003987	AndExpression	fnb -> style == SOAP_RPC && ! sparam -> element		2002029	0		&&			
ANR	2003988	EqualityExpression	fnb -> style == SOAP_RPC		2002029	0		==			
ANR	2003989	PtrMemberAccess	fnb -> style		2002029	0					
ANR	2003990	Identifier	fnb		2002029	0					
ANR	2003991	Identifier	style		2002029	1					
ANR	2003992	Identifier	SOAP_RPC		2002029	1					
ANR	2003993	UnaryOperationExpression	! sparam -> element		2002029	1					
ANR	2003994	UnaryOperator	!		2002029	0					
ANR	2003995	PtrMemberAccess	sparam -> element		2002029	1					
ANR	2003996	Identifier	sparam		2002029	0					
ANR	2003997	Identifier	element		2002029	1					
ANR	2003998	CompoundStatement		224:52:8177:8177	2002029	1					
ANR	2003999	IfStatement	if ( fault -> bindingAttributes )		2002029	0					
ANR	2004000	Condition	fault -> bindingAttributes	4078:10:137067:137090	2002029	0	True				
ANR	2004001	PtrMemberAccess	fault -> bindingAttributes		2002029	0					
ANR	2004002	Identifier	fault		2002029	0					
ANR	2004003	Identifier	bindingAttributes		2002029	1					
ANR	2004004	CompoundStatement		226:6:8223:8315	2002029	1					
ANR	2004005	IdentifierDeclStatement	sdlSoapBindingFunctionFaultPtr fb = ( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes ;	4079:6:137101:137193	2002029	0	True				
ANR	2004006	IdentifierDecl	fb = ( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes		2002029	0					
ANR	2004007	IdentifierDeclType	sdlSoapBindingFunctionFaultPtr		2002029	0					
ANR	2004008	Identifier	fb		2002029	1					
ANR	2004009	AssignmentExpression	fb = ( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes		2002029	2		=			
ANR	2004010	Identifier	fb		2002029	0					
ANR	2004011	CastExpression	( sdlSoapBindingFunctionFaultPtr ) fault -> bindingAttributes		2002029	1					
ANR	2004012	CastTarget	sdlSoapBindingFunctionFaultPtr		2002029	0					
ANR	2004013	PtrMemberAccess	fault -> bindingAttributes		2002029	1					
ANR	2004014	Identifier	fault		2002029	0					
ANR	2004015	Identifier	bindingAttributes		2002029	1					
ANR	2004016	IfStatement	if ( fb -> ns )		2002029	1					
ANR	2004017	Condition	fb -> ns	4080:10:137205:137210	2002029	0	True				
ANR	2004018	PtrMemberAccess	fb -> ns		2002029	0					
ANR	2004019	Identifier	fb		2002029	0					
ANR	2004020	Identifier	ns		2002029	1					
ANR	2004021	CompoundStatement		228:7:8344:8382	2002029	1					
ANR	2004022	IdentifierDeclStatement	"xmlNsPtr ns = encode_add_ns ( x , fb -> ns ) ;"	4081:7:137222:137260	2002029	0	True				
ANR	2004023	IdentifierDecl	"ns = encode_add_ns ( x , fb -> ns )"		2002029	0					
ANR	2004024	IdentifierDeclType	xmlNsPtr		2002029	0					
ANR	2004025	Identifier	ns		2002029	1					
ANR	2004026	AssignmentExpression	"ns = encode_add_ns ( x , fb -> ns )"		2002029	2		=			
ANR	2004027	Identifier	ns		2002029	0					
ANR	2004028	CallExpression	"encode_add_ns ( x , fb -> ns )"		2002029	1					
ANR	2004029	Callee	encode_add_ns		2002029	0					
ANR	2004030	Identifier	encode_add_ns		2002029	0					
ANR	2004031	ArgumentList	x		2002029	1					
ANR	2004032	Argument	x		2002029	0					
ANR	2004033	Identifier	x		2002029	0					
ANR	2004034	Argument	fb -> ns		2002029	1					
ANR	2004035	PtrMemberAccess	fb -> ns		2002029	0					
ANR	2004036	Identifier	fb		2002029	0					
ANR	2004037	Identifier	ns		2002029	1					
ANR	2004038	ExpressionStatement	"xmlSetNs ( x , ns )"	4082:7:137269:137284	2002029	1	True				
ANR	2004039	CallExpression	"xmlSetNs ( x , ns )"		2002029	0					
ANR	2004040	Callee	xmlSetNs		2002029	0					
ANR	2004041	Identifier	xmlSetNs		2002029	0					
ANR	2004042	ArgumentList	x		2002029	1					
ANR	2004043	Argument	x		2002029	0					
ANR	2004044	Identifier	x		2002029	0					
ANR	2004045	Argument	ns		2002029	1					
ANR	2004046	Identifier	ns		2002029	0					
ANR	2004047	ElseStatement	else		2002029	0					
ANR	2004048	CompoundStatement		232:11:8434:8434	2002029	0					
ANR	2004049	IfStatement	if ( sparam -> element )		2002029	0					
ANR	2004050	Condition	sparam -> element	4086:9:137323:137337	2002029	0	True				
ANR	2004051	PtrMemberAccess	sparam -> element		2002029	0					
ANR	2004052	Identifier	sparam		2002029	0					
ANR	2004053	Identifier	element		2002029	1					
ANR	2004054	CompoundStatement		233:26:8462:8462	2002029	1					
ANR	2004055	ExpressionStatement	"ns = encode_add_ns ( x , sparam -> element -> namens )"	4087:6:137348:137394	2002029	0	True				
ANR	2004056	AssignmentExpression	"ns = encode_add_ns ( x , sparam -> element -> namens )"		2002029	0		=			
ANR	2004057	Identifier	ns		2002029	0					
ANR	2004058	CallExpression	"encode_add_ns ( x , sparam -> element -> namens )"		2002029	1					
ANR	2004059	Callee	encode_add_ns		2002029	0					
ANR	2004060	Identifier	encode_add_ns		2002029	0					
ANR	2004061	ArgumentList	x		2002029	1					
ANR	2004062	Argument	x		2002029	0					
ANR	2004063	Identifier	x		2002029	0					
ANR	2004064	Argument	sparam -> element -> namens		2002029	1					
ANR	2004065	PtrMemberAccess	sparam -> element -> namens		2002029	0					
ANR	2004066	PtrMemberAccess	sparam -> element		2002029	0					
ANR	2004067	Identifier	sparam		2002029	0					
ANR	2004068	Identifier	element		2002029	1					
ANR	2004069	Identifier	namens		2002029	1					
ANR	2004070	ExpressionStatement	"xmlNodeSetName ( x , BAD_CAST ( sparam -> element -> name ) )"	4088:6:137402:137452	2002029	1	True				
ANR	2004071	CallExpression	"xmlNodeSetName ( x , BAD_CAST ( sparam -> element -> name ) )"		2002029	0					
ANR	2004072	Callee	xmlNodeSetName		2002029	0					
ANR	2004073	Identifier	xmlNodeSetName		2002029	0					
ANR	2004074	ArgumentList	x		2002029	1					
ANR	2004075	Argument	x		2002029	0					
ANR	2004076	Identifier	x		2002029	0					
ANR	2004077	Argument	BAD_CAST ( sparam -> element -> name )		2002029	1					
ANR	2004078	CallExpression	BAD_CAST ( sparam -> element -> name )		2002029	0					
ANR	2004079	Callee	BAD_CAST		2002029	0					
ANR	2004080	Identifier	BAD_CAST		2002029	0					
ANR	2004081	ArgumentList	sparam -> element -> name		2002029	1					
ANR	2004082	Argument	sparam -> element -> name		2002029	0					
ANR	2004083	PtrMemberAccess	sparam -> element -> name		2002029	0					
ANR	2004084	PtrMemberAccess	sparam -> element		2002029	0					
ANR	2004085	Identifier	sparam		2002029	0					
ANR	2004086	Identifier	element		2002029	1					
ANR	2004087	Identifier	name		2002029	1					
ANR	2004088	ExpressionStatement	"xmlSetNs ( x , ns )"	4089:6:137460:137475	2002029	2	True				
ANR	2004089	CallExpression	"xmlSetNs ( x , ns )"		2002029	0					
ANR	2004090	Callee	xmlSetNs		2002029	0					
ANR	2004091	Identifier	xmlSetNs		2002029	0					
ANR	2004092	ArgumentList	x		2002029	1					
ANR	2004093	Argument	x		2002029	0					
ANR	2004094	Identifier	x		2002029	0					
ANR	2004095	Argument	ns		2002029	1					
ANR	2004096	Identifier	ns		2002029	0					
ANR	2004097	IfStatement	if ( use == SOAP_ENCODED && version == SOAP_1_2 )		2002029	12					
ANR	2004098	Condition	use == SOAP_ENCODED && version == SOAP_1_2	4093:7:137502:137543	2002029	0	True				
ANR	2004099	AndExpression	use == SOAP_ENCODED && version == SOAP_1_2		2002029	0		&&			
ANR	2004100	EqualityExpression	use == SOAP_ENCODED		2002029	0		==			
ANR	2004101	Identifier	use		2002029	0					
ANR	2004102	Identifier	SOAP_ENCODED		2002029	1					
ANR	2004103	EqualityExpression	version == SOAP_1_2		2002029	1		==			
ANR	2004104	Identifier	version		2002029	0					
ANR	2004105	Identifier	SOAP_1_2		2002029	1					
ANR	2004106	CompoundStatement		240:51:8668:8668	2002029	1					
ANR	2004107	ExpressionStatement	"xmlSetNsProp ( x , envelope -> ns , BAD_CAST ( ""encodingStyle"" ) , BAD_CAST ( SOAP_1_2_ENC_NAMESPACE ) )"	4094:4:137552:137642	2002029	0	True				
ANR	2004108	CallExpression	"xmlSetNsProp ( x , envelope -> ns , BAD_CAST ( ""encodingStyle"" ) , BAD_CAST ( SOAP_1_2_ENC_NAMESPACE ) )"		2002029	0					
ANR	2004109	Callee	xmlSetNsProp		2002029	0					
ANR	2004110	Identifier	xmlSetNsProp		2002029	0					
ANR	2004111	ArgumentList	x		2002029	1					
ANR	2004112	Argument	x		2002029	0					
ANR	2004113	Identifier	x		2002029	0					
ANR	2004114	Argument	envelope -> ns		2002029	1					
ANR	2004115	PtrMemberAccess	envelope -> ns		2002029	0					
ANR	2004116	Identifier	envelope		2002029	0					
ANR	2004117	Identifier	ns		2002029	1					
ANR	2004118	Argument	"BAD_CAST ( ""encodingStyle"" )"		2002029	2					
ANR	2004119	CallExpression	"BAD_CAST ( ""encodingStyle"" )"		2002029	0					
ANR	2004120	Callee	BAD_CAST		2002029	0					
ANR	2004121	Identifier	BAD_CAST		2002029	0					
ANR	2004122	ArgumentList	"""encodingStyle"""		2002029	1					
ANR	2004123	Argument	"""encodingStyle"""		2002029	0					
ANR	2004124	PrimaryExpression	"""encodingStyle"""		2002029	0					
ANR	2004125	Argument	BAD_CAST ( SOAP_1_2_ENC_NAMESPACE )		2002029	3					
ANR	2004126	CallExpression	BAD_CAST ( SOAP_1_2_ENC_NAMESPACE )		2002029	0					
ANR	2004127	Callee	BAD_CAST		2002029	0					
ANR	2004128	Identifier	BAD_CAST		2002029	0					
ANR	2004129	ArgumentList	SOAP_1_2_ENC_NAMESPACE		2002029	1					
ANR	2004130	Argument	SOAP_1_2_ENC_NAMESPACE		2002029	0					
ANR	2004131	Identifier	SOAP_1_2_ENC_NAMESPACE		2002029	0					
ANR	2004132	ElseStatement	else		2002029	0					
ANR	2004133	IfStatement	"if ( ( tmp = zend_hash_str_find ( prop , ""detail"" , sizeof ( ""detail"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) != IS_NULL )"		2002029	0					
ANR	2004134	Condition	"( tmp = zend_hash_str_find ( prop , ""detail"" , sizeof ( ""detail"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) != IS_NULL"	4096:13:137662:137765	2002029	0	True				
ANR	2004135	AndExpression	"( tmp = zend_hash_str_find ( prop , ""detail"" , sizeof ( ""detail"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) != IS_NULL"		2002029	0		&&			
ANR	2004136	EqualityExpression	"( tmp = zend_hash_str_find ( prop , ""detail"" , sizeof ( ""detail"" ) - 1 ) ) != NULL"		2002029	0		!=			
ANR	2004137	AssignmentExpression	"tmp = zend_hash_str_find ( prop , ""detail"" , sizeof ( ""detail"" ) - 1 )"		2002029	0		=			
ANR	2004138	Identifier	tmp		2002029	0					
ANR	2004139	CallExpression	"zend_hash_str_find ( prop , ""detail"" , sizeof ( ""detail"" ) - 1 )"		2002029	1					
ANR	2004140	Callee	zend_hash_str_find		2002029	0					
ANR	2004141	Identifier	zend_hash_str_find		2002029	0					
ANR	2004142	ArgumentList	prop		2002029	1					
ANR	2004143	Argument	prop		2002029	0					
ANR	2004144	Identifier	prop		2002029	0					
ANR	2004145	Argument	"""detail"""		2002029	1					
ANR	2004146	PrimaryExpression	"""detail"""		2002029	0					
ANR	2004147	Argument	"sizeof ( ""detail"" ) - 1"		2002029	2					
ANR	2004148	AdditiveExpression	"sizeof ( ""detail"" ) - 1"		2002029	0		-			
ANR	2004149	SizeofExpression	"sizeof ( ""detail"" )"		2002029	0					
ANR	2004150	Sizeof	sizeof		2002029	0					
ANR	2004151	PrimaryExpression	"""detail"""		2002029	1					
ANR	2004152	PrimaryExpression	1		2002029	1					
ANR	2004153	Identifier	NULL		2002029	1					
ANR	2004154	EqualityExpression	Z_TYPE_P ( tmp ) != IS_NULL		2002029	1		!=			
ANR	2004155	CallExpression	Z_TYPE_P ( tmp )		2002029	0					
ANR	2004156	Callee	Z_TYPE_P		2002029	0					
ANR	2004157	Identifier	Z_TYPE_P		2002029	0					
ANR	2004158	ArgumentList	tmp		2002029	1					
ANR	2004159	Argument	tmp		2002029	0					
ANR	2004160	Identifier	tmp		2002029	0					
ANR	2004161	Identifier	IS_NULL		2002029	1					
ANR	2004162	CompoundStatement		244:32:8890:8890	2002029	1					
ANR	2004163	ExpressionStatement	"serialize_zval ( tmp , NULL , detail_name , use , param )"	4098:3:137773:137823	2002029	0	True				
ANR	2004164	CallExpression	"serialize_zval ( tmp , NULL , detail_name , use , param )"		2002029	0					
ANR	2004165	Callee	serialize_zval		2002029	0					
ANR	2004166	Identifier	serialize_zval		2002029	0					
ANR	2004167	ArgumentList	tmp		2002029	1					
ANR	2004168	Argument	tmp		2002029	0					
ANR	2004169	Identifier	tmp		2002029	0					
ANR	2004170	Argument	NULL		2002029	1					
ANR	2004171	Identifier	NULL		2002029	0					
ANR	2004172	Argument	detail_name		2002029	2					
ANR	2004173	Identifier	detail_name		2002029	0					
ANR	2004174	Argument	use		2002029	3					
ANR	2004175	Identifier	use		2002029	0					
ANR	2004176	Argument	param		2002029	4					
ANR	2004177	Identifier	param		2002029	0					
ANR	2004178	ElseStatement	else		2002029	0					
ANR	2004179	CompoundStatement		247:8:8959:8959	2002029	0					
ANR	2004180	IfStatement	if ( headers )		2002029	0					
ANR	2004181	Condition	headers	4102:6:137846:137852	2002029	0	True				
ANR	2004182	Identifier	headers		2002029	0					
ANR	2004183	CompoundStatement		250:3:8982:8995	2002029	1					
ANR	2004184	IdentifierDeclStatement	soapHeader * h ;	4103:3:137860:137873	2002029	0	True				
ANR	2004185	IdentifierDecl	* h		2002029	0					
ANR	2004186	IdentifierDeclType	soapHeader *		2002029	0					
ANR	2004187	Identifier	h		2002029	1					
ANR	2004188	ExpressionStatement	"head = xmlNewChild ( envelope , ns , BAD_CAST ( ""Header"" ) , NULL )"	4105:3:137879:137937	2002029	1	True				
ANR	2004189	AssignmentExpression	"head = xmlNewChild ( envelope , ns , BAD_CAST ( ""Header"" ) , NULL )"		2002029	0		=			
ANR	2004190	Identifier	head		2002029	0					
ANR	2004191	CallExpression	"xmlNewChild ( envelope , ns , BAD_CAST ( ""Header"" ) , NULL )"		2002029	1					
ANR	2004192	Callee	xmlNewChild		2002029	0					
ANR	2004193	Identifier	xmlNewChild		2002029	0					
ANR	2004194	ArgumentList	envelope		2002029	1					
ANR	2004195	Argument	envelope		2002029	0					
ANR	2004196	Identifier	envelope		2002029	0					
ANR	2004197	Argument	ns		2002029	1					
ANR	2004198	Identifier	ns		2002029	0					
ANR	2004199	Argument	"BAD_CAST ( ""Header"" )"		2002029	2					
ANR	2004200	CallExpression	"BAD_CAST ( ""Header"" )"		2002029	0					
ANR	2004201	Callee	BAD_CAST		2002029	0					
ANR	2004202	Identifier	BAD_CAST		2002029	0					
ANR	2004203	ArgumentList	"""Header"""		2002029	1					
ANR	2004204	Argument	"""Header"""		2002029	0					
ANR	2004205	PrimaryExpression	"""Header"""		2002029	0					
ANR	2004206	Argument	NULL		2002029	3					
ANR	2004207	Identifier	NULL		2002029	0					
ANR	2004208	ExpressionStatement	h = headers	4106:3:137942:137953	2002029	2	True				
ANR	2004209	AssignmentExpression	h = headers		2002029	0		=			
ANR	2004210	Identifier	h		2002029	0					
ANR	2004211	Identifier	headers		2002029	1					
ANR	2004212	WhileStatement	while ( h != NULL )		2002029	3					
ANR	2004213	Condition	h != NULL	4107:10:137965:137973	2002029	0	True				
ANR	2004214	EqualityExpression	h != NULL		2002029	0		!=			
ANR	2004215	Identifier	h		2002029	0					
ANR	2004216	Identifier	NULL		2002029	1					
ANR	2004217	CompoundStatement		254:21:9098:9098	2002029	1					
ANR	2004218	IfStatement	if ( Z_TYPE ( h -> retval ) != IS_NULL )		2002029	0					
ANR	2004219	Condition	Z_TYPE ( h -> retval ) != IS_NULL	4108:8:137986:138013	2002029	0	True				
ANR	2004220	EqualityExpression	Z_TYPE ( h -> retval ) != IS_NULL		2002029	0		!=			
ANR	2004221	CallExpression	Z_TYPE ( h -> retval )		2002029	0					
ANR	2004222	Callee	Z_TYPE		2002029	0					
ANR	2004223	Identifier	Z_TYPE		2002029	0					
ANR	2004224	ArgumentList	h -> retval		2002029	1					
ANR	2004225	Argument	h -> retval		2002029	0					
ANR	2004226	PtrMemberAccess	h -> retval		2002029	0					
ANR	2004227	Identifier	h		2002029	0					
ANR	2004228	Identifier	retval		2002029	1					
ANR	2004229	Identifier	IS_NULL		2002029	1					
ANR	2004230	CompoundStatement		261:5:9338:9358	2002029	1					
ANR	2004231	IdentifierDeclStatement	encodePtr hdr_enc = NULL ;	4109:5:138023:138047	2002029	0	True				
ANR	2004232	IdentifierDecl	hdr_enc = NULL		2002029	0					
ANR	2004233	IdentifierDeclType	encodePtr		2002029	0					
ANR	2004234	Identifier	hdr_enc		2002029	1					
ANR	2004235	AssignmentExpression	hdr_enc = NULL		2002029	2		=			
ANR	2004236	Identifier	NULL		2002029	0					
ANR	2004237	Identifier	NULL		2002029	1					
ANR	2004238	IdentifierDeclStatement	int hdr_use = SOAP_LITERAL ;	4110:5:138054:138080	2002029	1	True				
ANR	2004239	IdentifierDecl	hdr_use = SOAP_LITERAL		2002029	0					
ANR	2004240	IdentifierDeclType	int		2002029	0					
ANR	2004241	Identifier	hdr_use		2002029	1					
ANR	2004242	AssignmentExpression	hdr_use = SOAP_LITERAL		2002029	2		=			
ANR	2004243	Identifier	SOAP_LITERAL		2002029	0					
ANR	2004244	Identifier	SOAP_LITERAL		2002029	1					
ANR	2004245	IdentifierDeclStatement	zval * hdr_ret = & h -> retval ;	4111:5:138087:138113	2002029	2	True				
ANR	2004246	IdentifierDecl	* hdr_ret = & h -> retval		2002029	0					
ANR	2004247	IdentifierDeclType	zval *		2002029	0					
ANR	2004248	Identifier	hdr_ret		2002029	1					
ANR	2004249	AssignmentExpression	* hdr_ret = & h -> retval		2002029	2		=			
ANR	2004250	Identifier	hdr_ret		2002029	0					
ANR	2004251	UnaryOperationExpression	& h -> retval		2002029	1					
ANR	2004252	UnaryOperator	&		2002029	0					
ANR	2004253	PtrMemberAccess	h -> retval		2002029	1					
ANR	2004254	Identifier	h		2002029	0					
ANR	2004255	Identifier	retval		2002029	1					
ANR	2004256	IdentifierDeclStatement	char * hdr_ns = h -> hdr ? h -> hdr -> ns : NULL ;	4112:5:138120:138159	2002029	3	True				
ANR	2004257	IdentifierDecl	* hdr_ns = h -> hdr ? h -> hdr -> ns : NULL		2002029	0					
ANR	2004258	IdentifierDeclType	char *		2002029	0					
ANR	2004259	Identifier	hdr_ns		2002029	1					
ANR	2004260	AssignmentExpression	* hdr_ns = h -> hdr ? h -> hdr -> ns : NULL		2002029	2		=			
ANR	2004261	Identifier	hdr_ns		2002029	0					
ANR	2004262	ConditionalExpression	h -> hdr ? h -> hdr -> ns : NULL		2002029	1					
ANR	2004263	Condition	h -> hdr		2002029	0					
ANR	2004264	PtrMemberAccess	h -> hdr		2002029	0					
ANR	2004265	Identifier	h		2002029	0					
ANR	2004266	Identifier	hdr		2002029	1					
ANR	2004267	PtrMemberAccess	h -> hdr -> ns		2002029	1					
ANR	2004268	PtrMemberAccess	h -> hdr		2002029	0					
ANR	2004269	Identifier	h		2002029	0					
ANR	2004270	Identifier	hdr		2002029	1					
ANR	2004271	Identifier	ns		2002029	1					
ANR	2004272	Identifier	NULL		2002029	2					
ANR	2004273	IdentifierDeclStatement	char * hdr_name = Z_STRVAL ( h -> function_name ) ;	4113:5:138166:138209	2002029	4	True				
ANR	2004274	IdentifierDecl	* hdr_name = Z_STRVAL ( h -> function_name )		2002029	0					
ANR	2004275	IdentifierDeclType	char *		2002029	0					
ANR	2004276	Identifier	hdr_name		2002029	1					
ANR	2004277	AssignmentExpression	* hdr_name = Z_STRVAL ( h -> function_name )		2002029	2		=			
ANR	2004278	Identifier	hdr_name		2002029	0					
ANR	2004279	CallExpression	Z_STRVAL ( h -> function_name )		2002029	1					
ANR	2004280	Callee	Z_STRVAL		2002029	0					
ANR	2004281	Identifier	Z_STRVAL		2002029	0					
ANR	2004282	ArgumentList	h -> function_name		2002029	1					
ANR	2004283	Argument	h -> function_name		2002029	0					
ANR	2004284	PtrMemberAccess	h -> function_name		2002029	0					
ANR	2004285	Identifier	h		2002029	0					
ANR	2004286	Identifier	function_name		2002029	1					
ANR	2004287	IdentifierDeclStatement	HashTable * ht = NULL ;	4114:5:138216:138236	2002029	5	True				
ANR	2004288	IdentifierDecl	* ht = NULL		2002029	0					
ANR	2004289	IdentifierDeclType	HashTable *		2002029	0					
ANR	2004290	Identifier	ht		2002029	1					
ANR	2004291	AssignmentExpression	* ht = NULL		2002029	2		=			
ANR	2004292	Identifier	NULL		2002029	0					
ANR	2004293	Identifier	NULL		2002029	1					
ANR	2004294	IfStatement	"if ( Z_TYPE ( h -> retval ) == IS_OBJECT && instanceof_function ( Z_OBJCE ( h -> retval ) , soap_header_class_entry ) )"		2002029	6					
ANR	2004295	Condition	"Z_TYPE ( h -> retval ) == IS_OBJECT && instanceof_function ( Z_OBJCE ( h -> retval ) , soap_header_class_entry )"	4116:9:138248:138354	2002029	0	True				
ANR	2004296	AndExpression	"Z_TYPE ( h -> retval ) == IS_OBJECT && instanceof_function ( Z_OBJCE ( h -> retval ) , soap_header_class_entry )"		2002029	0		&&			
ANR	2004297	EqualityExpression	Z_TYPE ( h -> retval ) == IS_OBJECT		2002029	0		==			
ANR	2004298	CallExpression	Z_TYPE ( h -> retval )		2002029	0					
ANR	2004299	Callee	Z_TYPE		2002029	0					
ANR	2004300	Identifier	Z_TYPE		2002029	0					
ANR	2004301	ArgumentList	h -> retval		2002029	1					
ANR	2004302	Argument	h -> retval		2002029	0					
ANR	2004303	PtrMemberAccess	h -> retval		2002029	0					
ANR	2004304	Identifier	h		2002029	0					
ANR	2004305	Identifier	retval		2002029	1					
ANR	2004306	Identifier	IS_OBJECT		2002029	1					
ANR	2004307	CallExpression	"instanceof_function ( Z_OBJCE ( h -> retval ) , soap_header_class_entry )"		2002029	1					
ANR	2004308	Callee	instanceof_function		2002029	0					
ANR	2004309	Identifier	instanceof_function		2002029	0					
ANR	2004310	ArgumentList	Z_OBJCE ( h -> retval )		2002029	1					
ANR	2004311	Argument	Z_OBJCE ( h -> retval )		2002029	0					
ANR	2004312	CallExpression	Z_OBJCE ( h -> retval )		2002029	0					
ANR	2004313	Callee	Z_OBJCE		2002029	0					
ANR	2004314	Identifier	Z_OBJCE		2002029	0					
ANR	2004315	ArgumentList	h -> retval		2002029	1					
ANR	2004316	Argument	h -> retval		2002029	0					
ANR	2004317	PtrMemberAccess	h -> retval		2002029	0					
ANR	2004318	Identifier	h		2002029	0					
ANR	2004319	Identifier	retval		2002029	1					
ANR	2004320	Argument	soap_header_class_entry		2002029	1					
ANR	2004321	Identifier	soap_header_class_entry		2002029	0					
ANR	2004322	CompoundStatement		267:6:9547:9566	2002029	1					
ANR	2004323	IdentifierDeclStatement	zval * tmp ;	4118:6:138365:138374	2002029	0	True				
ANR	2004324	IdentifierDecl	* tmp		2002029	0					
ANR	2004325	IdentifierDeclType	zval *		2002029	0					
ANR	2004326	Identifier	tmp		2002029	1					
ANR	2004327	IdentifierDeclStatement	sdlSoapBindingFunctionHeaderPtr hdr ;	4119:6:138382:138417	2002029	1	True				
ANR	2004328	IdentifierDecl	hdr		2002029	0					
ANR	2004329	IdentifierDeclType	sdlSoapBindingFunctionHeaderPtr		2002029	0					
ANR	2004330	Identifier	hdr		2002029	1					
ANR	2004331	IdentifierDeclStatement	smart_str key = { 0 } ;	4120:6:138425:138444	2002029	2	True				
ANR	2004332	IdentifierDecl	key = { 0 }		2002029	0					
ANR	2004333	IdentifierDeclType	smart_str		2002029	0					
ANR	2004334	Identifier	key		2002029	1					
ANR	2004335	AssignmentExpression	key = { 0 }		2002029	2		=			
ANR	2004336	Identifier	key		2002029	0					
ANR	2004337	InitializerList	0		2002029	1					
ANR	2004338	PrimaryExpression	0		2002029	0					
ANR	2004339	ExpressionStatement	ht = Z_OBJPROP ( h -> retval )	4122:6:138453:138478	2002029	3	True				
ANR	2004340	AssignmentExpression	ht = Z_OBJPROP ( h -> retval )		2002029	0		=			
ANR	2004341	Identifier	ht		2002029	0					
ANR	2004342	CallExpression	Z_OBJPROP ( h -> retval )		2002029	1					
ANR	2004343	Callee	Z_OBJPROP		2002029	0					
ANR	2004344	Identifier	Z_OBJPROP		2002029	0					
ANR	2004345	ArgumentList	h -> retval		2002029	1					
ANR	2004346	Argument	h -> retval		2002029	0					
ANR	2004347	PtrMemberAccess	h -> retval		2002029	0					
ANR	2004348	Identifier	h		2002029	0					
ANR	2004349	Identifier	retval		2002029	1					
ANR	2004350	IfStatement	"if ( ( tmp = zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING )"		2002029	4					
ANR	2004351	Condition	"( tmp = zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"	4123:10:138490:138604	2002029	0	True				
ANR	2004352	AndExpression	"( tmp = zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"		2002029	0		&&			
ANR	2004353	EqualityExpression	"( tmp = zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 ) ) != NULL"		2002029	0		!=			
ANR	2004354	AssignmentExpression	"tmp = zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 )"		2002029	0		=			
ANR	2004355	Identifier	tmp		2002029	0					
ANR	2004356	CallExpression	"zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 )"		2002029	1					
ANR	2004357	Callee	zend_hash_str_find		2002029	0					
ANR	2004358	Identifier	zend_hash_str_find		2002029	0					
ANR	2004359	ArgumentList	ht		2002029	1					
ANR	2004360	Argument	ht		2002029	0					
ANR	2004361	Identifier	ht		2002029	0					
ANR	2004362	Argument	"""namespace"""		2002029	1					
ANR	2004363	PrimaryExpression	"""namespace"""		2002029	0					
ANR	2004364	Argument	"sizeof ( ""namespace"" ) - 1"		2002029	2					
ANR	2004365	AdditiveExpression	"sizeof ( ""namespace"" ) - 1"		2002029	0		-			
ANR	2004366	SizeofExpression	"sizeof ( ""namespace"" )"		2002029	0					
ANR	2004367	Sizeof	sizeof		2002029	0					
ANR	2004368	PrimaryExpression	"""namespace"""		2002029	1					
ANR	2004369	PrimaryExpression	1		2002029	1					
ANR	2004370	Identifier	NULL		2002029	1					
ANR	2004371	EqualityExpression	Z_TYPE_P ( tmp ) == IS_STRING		2002029	1		==			
ANR	2004372	CallExpression	Z_TYPE_P ( tmp )		2002029	0					
ANR	2004373	Callee	Z_TYPE_P		2002029	0					
ANR	2004374	Identifier	Z_TYPE_P		2002029	0					
ANR	2004375	ArgumentList	tmp		2002029	1					
ANR	2004376	Argument	tmp		2002029	0					
ANR	2004377	Identifier	tmp		2002029	0					
ANR	2004378	Identifier	IS_STRING		2002029	1					
ANR	2004379	CompoundStatement		271:39:9729:9729	2002029	1					
ANR	2004380	ExpressionStatement	"smart_str_appendl ( & key , Z_STRVAL_P ( tmp ) , Z_STRLEN_P ( tmp ) )"	4125:7:138616:138673	2002029	0	True				
ANR	2004381	CallExpression	"smart_str_appendl ( & key , Z_STRVAL_P ( tmp ) , Z_STRLEN_P ( tmp ) )"		2002029	0					
ANR	2004382	Callee	smart_str_appendl		2002029	0					
ANR	2004383	Identifier	smart_str_appendl		2002029	0					
ANR	2004384	ArgumentList	& key		2002029	1					
ANR	2004385	Argument	& key		2002029	0					
ANR	2004386	UnaryOperationExpression	& key		2002029	0					
ANR	2004387	UnaryOperator	&		2002029	0					
ANR	2004388	Identifier	key		2002029	1					
ANR	2004389	Argument	Z_STRVAL_P ( tmp )		2002029	1					
ANR	2004390	CallExpression	Z_STRVAL_P ( tmp )		2002029	0					
ANR	2004391	Callee	Z_STRVAL_P		2002029	0					
ANR	2004392	Identifier	Z_STRVAL_P		2002029	0					
ANR	2004393	ArgumentList	tmp		2002029	1					
ANR	2004394	Argument	tmp		2002029	0					
ANR	2004395	Identifier	tmp		2002029	0					
ANR	2004396	Argument	Z_STRLEN_P ( tmp )		2002029	2					
ANR	2004397	CallExpression	Z_STRLEN_P ( tmp )		2002029	0					
ANR	2004398	Callee	Z_STRLEN_P		2002029	0					
ANR	2004399	Identifier	Z_STRLEN_P		2002029	0					
ANR	2004400	ArgumentList	tmp		2002029	1					
ANR	2004401	Argument	tmp		2002029	0					
ANR	2004402	Identifier	tmp		2002029	0					
ANR	2004403	ExpressionStatement	"smart_str_appendc ( & key , ':' )"	4126:7:138682:138710	2002029	1	True				
ANR	2004404	CallExpression	"smart_str_appendc ( & key , ':' )"		2002029	0					
ANR	2004405	Callee	smart_str_appendc		2002029	0					
ANR	2004406	Identifier	smart_str_appendc		2002029	0					
ANR	2004407	ArgumentList	& key		2002029	1					
ANR	2004408	Argument	& key		2002029	0					
ANR	2004409	UnaryOperationExpression	& key		2002029	0					
ANR	2004410	UnaryOperator	&		2002029	0					
ANR	2004411	Identifier	key		2002029	1					
ANR	2004412	Argument	':'		2002029	1					
ANR	2004413	PrimaryExpression	':'		2002029	0					
ANR	2004414	ExpressionStatement	hdr_ns = Z_STRVAL_P ( tmp )	4127:7:138719:138743	2002029	2	True				
ANR	2004415	AssignmentExpression	hdr_ns = Z_STRVAL_P ( tmp )		2002029	0		=			
ANR	2004416	Identifier	hdr_ns		2002029	0					
ANR	2004417	CallExpression	Z_STRVAL_P ( tmp )		2002029	1					
ANR	2004418	Callee	Z_STRVAL_P		2002029	0					
ANR	2004419	Identifier	Z_STRVAL_P		2002029	0					
ANR	2004420	ArgumentList	tmp		2002029	1					
ANR	2004421	Argument	tmp		2002029	0					
ANR	2004422	Identifier	tmp		2002029	0					
ANR	2004423	IfStatement	"if ( ( tmp = zend_hash_str_find ( ht , ""name"" , sizeof ( ""name"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING )"		2002029	5					
ANR	2004424	Condition	"( tmp = zend_hash_str_find ( ht , ""name"" , sizeof ( ""name"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"	4129:10:138763:138866	2002029	0	True				
ANR	2004425	AndExpression	"( tmp = zend_hash_str_find ( ht , ""name"" , sizeof ( ""name"" ) - 1 ) ) != NULL && Z_TYPE_P ( tmp ) == IS_STRING"		2002029	0		&&			
ANR	2004426	EqualityExpression	"( tmp = zend_hash_str_find ( ht , ""name"" , sizeof ( ""name"" ) - 1 ) ) != NULL"		2002029	0		!=			
ANR	2004427	AssignmentExpression	"tmp = zend_hash_str_find ( ht , ""name"" , sizeof ( ""name"" ) - 1 )"		2002029	0		=			
ANR	2004428	Identifier	tmp		2002029	0					
ANR	2004429	CallExpression	"zend_hash_str_find ( ht , ""name"" , sizeof ( ""name"" ) - 1 )"		2002029	1					
ANR	2004430	Callee	zend_hash_str_find		2002029	0					
ANR	2004431	Identifier	zend_hash_str_find		2002029	0					
ANR	2004432	ArgumentList	ht		2002029	1					
ANR	2004433	Argument	ht		2002029	0					
ANR	2004434	Identifier	ht		2002029	0					
ANR	2004435	Argument	"""name"""		2002029	1					
ANR	2004436	PrimaryExpression	"""name"""		2002029	0					
ANR	2004437	Argument	"sizeof ( ""name"" ) - 1"		2002029	2					
ANR	2004438	AdditiveExpression	"sizeof ( ""name"" ) - 1"		2002029	0		-			
ANR	2004439	SizeofExpression	"sizeof ( ""name"" )"		2002029	0					
ANR	2004440	Sizeof	sizeof		2002029	0					
ANR	2004441	PrimaryExpression	"""name"""		2002029	1					
ANR	2004442	PrimaryExpression	1		2002029	1					
ANR	2004443	Identifier	NULL		2002029	1					
ANR	2004444	EqualityExpression	Z_TYPE_P ( tmp ) == IS_STRING		2002029	1		==			
ANR	2004445	CallExpression	Z_TYPE_P ( tmp )		2002029	0					
ANR	2004446	Callee	Z_TYPE_P		2002029	0					
ANR	2004447	Identifier	Z_TYPE_P		2002029	0					
ANR	2004448	ArgumentList	tmp		2002029	1					
ANR	2004449	Argument	tmp		2002029	0					
ANR	2004450	Identifier	tmp		2002029	0					
ANR	2004451	Identifier	IS_STRING		2002029	1					
ANR	2004452	CompoundStatement		277:38:9991:9991	2002029	1					
ANR	2004453	ExpressionStatement	"smart_str_appendl ( & key , Z_STRVAL_P ( tmp ) , Z_STRLEN_P ( tmp ) )"	4131:7:138878:138935	2002029	0	True				
ANR	2004454	CallExpression	"smart_str_appendl ( & key , Z_STRVAL_P ( tmp ) , Z_STRLEN_P ( tmp ) )"		2002029	0					
ANR	2004455	Callee	smart_str_appendl		2002029	0					
ANR	2004456	Identifier	smart_str_appendl		2002029	0					
ANR	2004457	ArgumentList	& key		2002029	1					
ANR	2004458	Argument	& key		2002029	0					
ANR	2004459	UnaryOperationExpression	& key		2002029	0					
ANR	2004460	UnaryOperator	&		2002029	0					
ANR	2004461	Identifier	key		2002029	1					
ANR	2004462	Argument	Z_STRVAL_P ( tmp )		2002029	1					
ANR	2004463	CallExpression	Z_STRVAL_P ( tmp )		2002029	0					
ANR	2004464	Callee	Z_STRVAL_P		2002029	0					
ANR	2004465	Identifier	Z_STRVAL_P		2002029	0					
ANR	2004466	ArgumentList	tmp		2002029	1					
ANR	2004467	Argument	tmp		2002029	0					
ANR	2004468	Identifier	tmp		2002029	0					
ANR	2004469	Argument	Z_STRLEN_P ( tmp )		2002029	2					
ANR	2004470	CallExpression	Z_STRLEN_P ( tmp )		2002029	0					
ANR	2004471	Callee	Z_STRLEN_P		2002029	0					
ANR	2004472	Identifier	Z_STRLEN_P		2002029	0					
ANR	2004473	ArgumentList	tmp		2002029	1					
ANR	2004474	Argument	tmp		2002029	0					
ANR	2004475	Identifier	tmp		2002029	0					
ANR	2004476	ExpressionStatement	hdr_name = Z_STRVAL_P ( tmp )	4132:7:138944:138970	2002029	1	True				
ANR	2004477	AssignmentExpression	hdr_name = Z_STRVAL_P ( tmp )		2002029	0		=			
ANR	2004478	Identifier	hdr_name		2002029	0					
ANR	2004479	CallExpression	Z_STRVAL_P ( tmp )		2002029	1					
ANR	2004480	Callee	Z_STRVAL_P		2002029	0					
ANR	2004481	Identifier	Z_STRVAL_P		2002029	0					
ANR	2004482	ArgumentList	tmp		2002029	1					
ANR	2004483	Argument	tmp		2002029	0					
ANR	2004484	Identifier	tmp		2002029	0					
ANR	2004485	ExpressionStatement	smart_str_0 ( & key )	4134:6:138986:139003	2002029	6	True				
ANR	2004486	CallExpression	smart_str_0 ( & key )		2002029	0					
ANR	2004487	Callee	smart_str_0		2002029	0					
ANR	2004488	Identifier	smart_str_0		2002029	0					
ANR	2004489	ArgumentList	& key		2002029	1					
ANR	2004490	Argument	& key		2002029	0					
ANR	2004491	UnaryOperationExpression	& key		2002029	0					
ANR	2004492	UnaryOperator	&		2002029	0					
ANR	2004493	Identifier	key		2002029	1					
ANR	2004494	IfStatement	if ( function && function -> binding && function -> binding -> bindingType == BINDING_SOAP )		2002029	7					
ANR	2004495	Condition	function && function -> binding && function -> binding -> bindingType == BINDING_SOAP	4135:10:139015:139093	2002029	0	True				
ANR	2004496	AndExpression	function && function -> binding && function -> binding -> bindingType == BINDING_SOAP		2002029	0		&&			
ANR	2004497	Identifier	function		2002029	0					
ANR	2004498	AndExpression	function -> binding && function -> binding -> bindingType == BINDING_SOAP		2002029	1		&&			
ANR	2004499	PtrMemberAccess	function -> binding		2002029	0					
ANR	2004500	Identifier	function		2002029	0					
ANR	2004501	Identifier	binding		2002029	1					
ANR	2004502	EqualityExpression	function -> binding -> bindingType == BINDING_SOAP		2002029	1		==			
ANR	2004503	PtrMemberAccess	function -> binding -> bindingType		2002029	0					
ANR	2004504	PtrMemberAccess	function -> binding		2002029	0					
ANR	2004505	Identifier	function		2002029	0					
ANR	2004506	Identifier	binding		2002029	1					
ANR	2004507	Identifier	bindingType		2002029	1					
ANR	2004508	Identifier	BINDING_SOAP		2002029	1					
ANR	2004509	CompoundStatement		283:7:10227:10313	2002029	1					
ANR	2004510	IdentifierDeclStatement	sdlSoapBindingFunctionPtr fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes ;	4136:7:139105:139191	2002029	0	True				
ANR	2004511	IdentifierDecl	fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		2002029	0					
ANR	2004512	IdentifierDeclType	sdlSoapBindingFunctionPtr		2002029	0					
ANR	2004513	Identifier	fnb		2002029	1					
ANR	2004514	AssignmentExpression	fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		2002029	2		=			
ANR	2004515	Identifier	fnb		2002029	0					
ANR	2004516	CastExpression	( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		2002029	1					
ANR	2004517	CastTarget	sdlSoapBindingFunctionPtr		2002029	0					
ANR	2004518	PtrMemberAccess	function -> bindingAttributes		2002029	1					
ANR	2004519	Identifier	function		2002029	0					
ANR	2004520	Identifier	bindingAttributes		2002029	1					
ANR	2004521	IfStatement	"if ( fnb -> output . headers && ( hdr = zend_hash_find_ptr ( fnb -> output . headers , key . s ) ) != NULL )"		2002029	1					
ANR	2004522	Condition	"fnb -> output . headers && ( hdr = zend_hash_find_ptr ( fnb -> output . headers , key . s ) ) != NULL"	4138:11:139205:139300	2002029	0	True				
ANR	2004523	AndExpression	"fnb -> output . headers && ( hdr = zend_hash_find_ptr ( fnb -> output . headers , key . s ) ) != NULL"		2002029	0		&&			
ANR	2004524	MemberAccess	fnb -> output . headers		2002029	0					
ANR	2004525	PtrMemberAccess	fnb -> output		2002029	0					
ANR	2004526	Identifier	fnb		2002029	0					
ANR	2004527	Identifier	output		2002029	1					
ANR	2004528	Identifier	headers		2002029	1					
ANR	2004529	EqualityExpression	"( hdr = zend_hash_find_ptr ( fnb -> output . headers , key . s ) ) != NULL"		2002029	1		!=			
ANR	2004530	AssignmentExpression	"hdr = zend_hash_find_ptr ( fnb -> output . headers , key . s )"		2002029	0		=			
ANR	2004531	Identifier	hdr		2002029	0					
ANR	2004532	CallExpression	"zend_hash_find_ptr ( fnb -> output . headers , key . s )"		2002029	1					
ANR	2004533	Callee	zend_hash_find_ptr		2002029	0					
ANR	2004534	Identifier	zend_hash_find_ptr		2002029	0					
ANR	2004535	ArgumentList	fnb -> output . headers		2002029	1					
ANR	2004536	Argument	fnb -> output . headers		2002029	0					
ANR	2004537	MemberAccess	fnb -> output . headers		2002029	0					
ANR	2004538	PtrMemberAccess	fnb -> output		2002029	0					
ANR	2004539	Identifier	fnb		2002029	0					
ANR	2004540	Identifier	output		2002029	1					
ANR	2004541	Identifier	headers		2002029	1					
ANR	2004542	Argument	key . s		2002029	1					
ANR	2004543	MemberAccess	key . s		2002029	0					
ANR	2004544	Identifier	key		2002029	0					
ANR	2004545	Identifier	s		2002029	1					
ANR	2004546	Identifier	NULL		2002029	1					
ANR	2004547	CompoundStatement		286:75:10425:10425	2002029	1					
ANR	2004548	ExpressionStatement	hdr_enc = hdr -> encode	4140:8:139313:139334	2002029	0	True				
ANR	2004549	AssignmentExpression	hdr_enc = hdr -> encode		2002029	0		=			
ANR	2004550	Identifier	hdr_enc		2002029	0					
ANR	2004551	PtrMemberAccess	hdr -> encode		2002029	1					
ANR	2004552	Identifier	hdr		2002029	0					
ANR	2004553	Identifier	encode		2002029	1					
ANR	2004554	ExpressionStatement	hdr_use = hdr -> use	4141:8:139344:139362	2002029	1	True				
ANR	2004555	AssignmentExpression	hdr_use = hdr -> use		2002029	0		=			
ANR	2004556	Identifier	hdr_use		2002029	0					
ANR	2004557	PtrMemberAccess	hdr -> use		2002029	1					
ANR	2004558	Identifier	hdr		2002029	0					
ANR	2004559	Identifier	use		2002029	1					
ANR	2004560	ExpressionStatement	smart_str_free ( & key )	4144:6:139387:139407	2002029	8	True				
ANR	2004561	CallExpression	smart_str_free ( & key )		2002029	0					
ANR	2004562	Callee	smart_str_free		2002029	0					
ANR	2004563	Identifier	smart_str_free		2002029	0					
ANR	2004564	ArgumentList	& key		2002029	1					
ANR	2004565	Argument	& key		2002029	0					
ANR	2004566	UnaryOperationExpression	& key		2002029	0					
ANR	2004567	UnaryOperator	&		2002029	0					
ANR	2004568	Identifier	key		2002029	1					
ANR	2004569	IfStatement	"if ( ( tmp = zend_hash_str_find ( ht , ""data"" , sizeof ( ""data"" ) - 1 ) ) != NULL )"		2002029	9					
ANR	2004570	Condition	"( tmp = zend_hash_str_find ( ht , ""data"" , sizeof ( ""data"" ) - 1 ) ) != NULL"	4145:10:139419:139482	2002029	0	True				
ANR	2004571	EqualityExpression	"( tmp = zend_hash_str_find ( ht , ""data"" , sizeof ( ""data"" ) - 1 ) ) != NULL"		2002029	0		!=			
ANR	2004572	AssignmentExpression	"tmp = zend_hash_str_find ( ht , ""data"" , sizeof ( ""data"" ) - 1 )"		2002029	0		=			
ANR	2004573	Identifier	tmp		2002029	0					
ANR	2004574	CallExpression	"zend_hash_str_find ( ht , ""data"" , sizeof ( ""data"" ) - 1 )"		2002029	1					
ANR	2004575	Callee	zend_hash_str_find		2002029	0					
ANR	2004576	Identifier	zend_hash_str_find		2002029	0					
ANR	2004577	ArgumentList	ht		2002029	1					
ANR	2004578	Argument	ht		2002029	0					
ANR	2004579	Identifier	ht		2002029	0					
ANR	2004580	Argument	"""data"""		2002029	1					
ANR	2004581	PrimaryExpression	"""data"""		2002029	0					
ANR	2004582	Argument	"sizeof ( ""data"" ) - 1"		2002029	2					
ANR	2004583	AdditiveExpression	"sizeof ( ""data"" ) - 1"		2002029	0		-			
ANR	2004584	SizeofExpression	"sizeof ( ""data"" )"		2002029	0					
ANR	2004585	Sizeof	sizeof		2002029	0					
ANR	2004586	PrimaryExpression	"""data"""		2002029	1					
ANR	2004587	PrimaryExpression	1		2002029	1					
ANR	2004588	Identifier	NULL		2002029	1					
ANR	2004589	CompoundStatement		292:76:10607:10607	2002029	1					
ANR	2004590	ExpressionStatement	hdr_ret = tmp	4146:7:139494:139507	2002029	0	True				
ANR	2004591	AssignmentExpression	hdr_ret = tmp		2002029	0		=			
ANR	2004592	Identifier	hdr_ret		2002029	0					
ANR	2004593	Identifier	tmp		2002029	1					
ANR	2004594	ElseStatement	else		2002029	0					
ANR	2004595	CompoundStatement		294:13:10644:10644	2002029	0					
ANR	2004596	ExpressionStatement	hdr_ret = NULL	4148:7:139531:139545	2002029	0	True				
ANR	2004597	AssignmentExpression	hdr_ret = NULL		2002029	0		=			
ANR	2004598	Identifier	hdr_ret		2002029	0					
ANR	2004599	Identifier	NULL		2002029	1					
ANR	2004600	IfStatement	if ( h -> function )		2002029	7					
ANR	2004601	Condition	h -> function	4152:9:139572:139582	2002029	0	True				
ANR	2004602	PtrMemberAccess	h -> function		2002029	0					
ANR	2004603	Identifier	h		2002029	0					
ANR	2004604	Identifier	function		2002029	1					
ANR	2004605	CompoundStatement		300:6:10715:10739	2002029	1					
ANR	2004606	IdentifierDeclStatement	xmlNodePtr xmlHdr = NULL ;	4153:6:139593:139617	2002029	0	True				
ANR	2004607	IdentifierDecl	xmlHdr = NULL		2002029	0					
ANR	2004608	IdentifierDeclType	xmlNodePtr		2002029	0					
ANR	2004609	Identifier	xmlHdr		2002029	1					
ANR	2004610	AssignmentExpression	xmlHdr = NULL		2002029	2		=			
ANR	2004611	Identifier	NULL		2002029	0					
ANR	2004612	Identifier	NULL		2002029	1					
ANR	2004613	IfStatement	"if ( serialize_response_call2 ( head , h -> function , Z_STRVAL ( h -> function_name ) , uri , hdr_ret , version , 0 , & xmlHdr ) == SOAP_ENCODED )"		2002029	1					
ANR	2004614	Condition	"serialize_response_call2 ( head , h -> function , Z_STRVAL ( h -> function_name ) , uri , hdr_ret , version , 0 , & xmlHdr ) == SOAP_ENCODED"	4155:10:139630:139751	2002029	0	True				
ANR	2004615	EqualityExpression	"serialize_response_call2 ( head , h -> function , Z_STRVAL ( h -> function_name ) , uri , hdr_ret , version , 0 , & xmlHdr ) == SOAP_ENCODED"		2002029	0		==			
ANR	2004616	CallExpression	"serialize_response_call2 ( head , h -> function , Z_STRVAL ( h -> function_name ) , uri , hdr_ret , version , 0 , & xmlHdr )"		2002029	0					
ANR	2004617	Callee	serialize_response_call2		2002029	0					
ANR	2004618	Identifier	serialize_response_call2		2002029	0					
ANR	2004619	ArgumentList	head		2002029	1					
ANR	2004620	Argument	head		2002029	0					
ANR	2004621	Identifier	head		2002029	0					
ANR	2004622	Argument	h -> function		2002029	1					
ANR	2004623	PtrMemberAccess	h -> function		2002029	0					
ANR	2004624	Identifier	h		2002029	0					
ANR	2004625	Identifier	function		2002029	1					
ANR	2004626	Argument	Z_STRVAL ( h -> function_name )		2002029	2					
ANR	2004627	CallExpression	Z_STRVAL ( h -> function_name )		2002029	0					
ANR	2004628	Callee	Z_STRVAL		2002029	0					
ANR	2004629	Identifier	Z_STRVAL		2002029	0					
ANR	2004630	ArgumentList	h -> function_name		2002029	1					
ANR	2004631	Argument	h -> function_name		2002029	0					
ANR	2004632	PtrMemberAccess	h -> function_name		2002029	0					
ANR	2004633	Identifier	h		2002029	0					
ANR	2004634	Identifier	function_name		2002029	1					
ANR	2004635	Argument	uri		2002029	3					
ANR	2004636	Identifier	uri		2002029	0					
ANR	2004637	Argument	hdr_ret		2002029	4					
ANR	2004638	Identifier	hdr_ret		2002029	0					
ANR	2004639	Argument	version		2002029	5					
ANR	2004640	Identifier	version		2002029	0					
ANR	2004641	Argument	0		2002029	6					
ANR	2004642	PrimaryExpression	0		2002029	0					
ANR	2004643	Argument	& xmlHdr		2002029	7					
ANR	2004644	UnaryOperationExpression	& xmlHdr		2002029	0					
ANR	2004645	UnaryOperator	&		2002029	0					
ANR	2004646	Identifier	xmlHdr		2002029	1					
ANR	2004647	Identifier	SOAP_ENCODED		2002029	1					
ANR	2004648	CompoundStatement		302:134:10876:10876	2002029	1					
ANR	2004649	ExpressionStatement	use = SOAP_ENCODED	4156:7:139763:139781	2002029	0	True				
ANR	2004650	AssignmentExpression	use = SOAP_ENCODED		2002029	0		=			
ANR	2004651	Identifier	use		2002029	0					
ANR	2004652	Identifier	SOAP_ENCODED		2002029	1					
ANR	2004653	IfStatement	if ( ht )		2002029	2					
ANR	2004654	Condition	ht	4158:10:139801:139802	2002029	0	True				
ANR	2004655	Identifier	ht		2002029	0					
ANR	2004656	CompoundStatement		305:14:10927:10927	2002029	1					
ANR	2004657	ExpressionStatement	"set_soap_header_attributes ( xmlHdr , ht , version )"	4159:7:139814:139861	2002029	0	True				
ANR	2004658	CallExpression	"set_soap_header_attributes ( xmlHdr , ht , version )"		2002029	0					
ANR	2004659	Callee	set_soap_header_attributes		2002029	0					
ANR	2004660	Identifier	set_soap_header_attributes		2002029	0					
ANR	2004661	ArgumentList	xmlHdr		2002029	1					
ANR	2004662	Argument	xmlHdr		2002029	0					
ANR	2004663	Identifier	xmlHdr		2002029	0					
ANR	2004664	Argument	ht		2002029	1					
ANR	2004665	Identifier	ht		2002029	0					
ANR	2004666	Argument	version		2002029	2					
ANR	2004667	Identifier	version		2002029	0					
ANR	2004668	ElseStatement	else		2002029	0					
ANR	2004669	CompoundStatement		309:6:11013:11079	2002029	0					
ANR	2004670	IdentifierDeclStatement	"xmlNodePtr xmlHdr = master_to_xml ( hdr_enc , hdr_ret , hdr_use , head ) ;"	4162:6:139891:139957	2002029	0	True				
ANR	2004671	IdentifierDecl	"xmlHdr = master_to_xml ( hdr_enc , hdr_ret , hdr_use , head )"		2002029	0					
ANR	2004672	IdentifierDeclType	xmlNodePtr		2002029	0					
ANR	2004673	Identifier	xmlHdr		2002029	1					
ANR	2004674	AssignmentExpression	"xmlHdr = master_to_xml ( hdr_enc , hdr_ret , hdr_use , head )"		2002029	2		=			
ANR	2004675	Identifier	xmlHdr		2002029	0					
ANR	2004676	CallExpression	"master_to_xml ( hdr_enc , hdr_ret , hdr_use , head )"		2002029	1					
ANR	2004677	Callee	master_to_xml		2002029	0					
ANR	2004678	Identifier	master_to_xml		2002029	0					
ANR	2004679	ArgumentList	hdr_enc		2002029	1					
ANR	2004680	Argument	hdr_enc		2002029	0					
ANR	2004681	Identifier	hdr_enc		2002029	0					
ANR	2004682	Argument	hdr_ret		2002029	1					
ANR	2004683	Identifier	hdr_ret		2002029	0					
ANR	2004684	Argument	hdr_use		2002029	2					
ANR	2004685	Identifier	hdr_use		2002029	0					
ANR	2004686	Argument	head		2002029	3					
ANR	2004687	Identifier	head		2002029	0					
ANR	2004688	IfStatement	if ( hdr_name )		2002029	1					
ANR	2004689	Condition	hdr_name	4163:10:139969:139976	2002029	0	True				
ANR	2004690	Identifier	hdr_name		2002029	0					
ANR	2004691	CompoundStatement		310:20:11101:11101	2002029	1					
ANR	2004692	ExpressionStatement	"xmlNodeSetName ( xmlHdr , BAD_CAST ( hdr_name ) )"	4164:7:139988:140030	2002029	0	True				
ANR	2004693	CallExpression	"xmlNodeSetName ( xmlHdr , BAD_CAST ( hdr_name ) )"		2002029	0					
ANR	2004694	Callee	xmlNodeSetName		2002029	0					
ANR	2004695	Identifier	xmlNodeSetName		2002029	0					
ANR	2004696	ArgumentList	xmlHdr		2002029	1					
ANR	2004697	Argument	xmlHdr		2002029	0					
ANR	2004698	Identifier	xmlHdr		2002029	0					
ANR	2004699	Argument	BAD_CAST ( hdr_name )		2002029	1					
ANR	2004700	CallExpression	BAD_CAST ( hdr_name )		2002029	0					
ANR	2004701	Callee	BAD_CAST		2002029	0					
ANR	2004702	Identifier	BAD_CAST		2002029	0					
ANR	2004703	ArgumentList	hdr_name		2002029	1					
ANR	2004704	Argument	hdr_name		2002029	0					
ANR	2004705	Identifier	hdr_name		2002029	0					
ANR	2004706	IfStatement	if ( hdr_ns )		2002029	2					
ANR	2004707	Condition	hdr_ns	4166:10:140050:140055	2002029	0	True				
ANR	2004708	Identifier	hdr_ns		2002029	0					
ANR	2004709	CompoundStatement		314:7:11189:11234	2002029	1					
ANR	2004710	IdentifierDeclStatement	"xmlNsPtr nsptr = encode_add_ns ( xmlHdr , hdr_ns ) ;"	4167:7:140067:140112	2002029	0	True				
ANR	2004711	IdentifierDecl	"nsptr = encode_add_ns ( xmlHdr , hdr_ns )"		2002029	0					
ANR	2004712	IdentifierDeclType	xmlNsPtr		2002029	0					
ANR	2004713	Identifier	nsptr		2002029	1					
ANR	2004714	AssignmentExpression	"nsptr = encode_add_ns ( xmlHdr , hdr_ns )"		2002029	2		=			
ANR	2004715	Identifier	nsptr		2002029	0					
ANR	2004716	CallExpression	"encode_add_ns ( xmlHdr , hdr_ns )"		2002029	1					
ANR	2004717	Callee	encode_add_ns		2002029	0					
ANR	2004718	Identifier	encode_add_ns		2002029	0					
ANR	2004719	ArgumentList	xmlHdr		2002029	1					
ANR	2004720	Argument	xmlHdr		2002029	0					
ANR	2004721	Identifier	xmlHdr		2002029	0					
ANR	2004722	Argument	hdr_ns		2002029	1					
ANR	2004723	Identifier	hdr_ns		2002029	0					
ANR	2004724	ExpressionStatement	"xmlSetNs ( xmlHdr , nsptr )"	4168:7:140121:140144	2002029	1	True				
ANR	2004725	CallExpression	"xmlSetNs ( xmlHdr , nsptr )"		2002029	0					
ANR	2004726	Callee	xmlSetNs		2002029	0					
ANR	2004727	Identifier	xmlSetNs		2002029	0					
ANR	2004728	ArgumentList	xmlHdr		2002029	1					
ANR	2004729	Argument	xmlHdr		2002029	0					
ANR	2004730	Identifier	xmlHdr		2002029	0					
ANR	2004731	Argument	nsptr		2002029	1					
ANR	2004732	Identifier	nsptr		2002029	0					
ANR	2004733	IfStatement	if ( ht )		2002029	3					
ANR	2004734	Condition	ht	4170:10:140164:140165	2002029	0	True				
ANR	2004735	Identifier	ht		2002029	0					
ANR	2004736	CompoundStatement		317:14:11290:11290	2002029	1					
ANR	2004737	ExpressionStatement	"set_soap_header_attributes ( xmlHdr , ht , version )"	4171:7:140177:140224	2002029	0	True				
ANR	2004738	CallExpression	"set_soap_header_attributes ( xmlHdr , ht , version )"		2002029	0					
ANR	2004739	Callee	set_soap_header_attributes		2002029	0					
ANR	2004740	Identifier	set_soap_header_attributes		2002029	0					
ANR	2004741	ArgumentList	xmlHdr		2002029	1					
ANR	2004742	Argument	xmlHdr		2002029	0					
ANR	2004743	Identifier	xmlHdr		2002029	0					
ANR	2004744	Argument	ht		2002029	1					
ANR	2004745	Identifier	ht		2002029	0					
ANR	2004746	Argument	version		2002029	2					
ANR	2004747	Identifier	version		2002029	0					
ANR	2004748	ExpressionStatement	h = h -> next	4175:4:140251:140262	2002029	1	True				
ANR	2004749	AssignmentExpression	h = h -> next		2002029	0		=			
ANR	2004750	Identifier	h		2002029	0					
ANR	2004751	PtrMemberAccess	h -> next		2002029	1					
ANR	2004752	Identifier	h		2002029	0					
ANR	2004753	Identifier	next		2002029	1					
ANR	2004754	IfStatement	if ( head -> children == NULL )		2002029	4					
ANR	2004755	Condition	head -> children == NULL	4178:7:140277:140298	2002029	0	True				
ANR	2004756	EqualityExpression	head -> children == NULL		2002029	0		==			
ANR	2004757	PtrMemberAccess	head -> children		2002029	0					
ANR	2004758	Identifier	head		2002029	0					
ANR	2004759	Identifier	children		2002029	1					
ANR	2004760	Identifier	NULL		2002029	1					
ANR	2004761	CompoundStatement		325:31:11423:11423	2002029	1					
ANR	2004762	ExpressionStatement	xmlUnlinkNode ( head )	4179:4:140307:140326	2002029	0	True				
ANR	2004763	CallExpression	xmlUnlinkNode ( head )		2002029	0					
ANR	2004764	Callee	xmlUnlinkNode		2002029	0					
ANR	2004765	Identifier	xmlUnlinkNode		2002029	0					
ANR	2004766	ArgumentList	head		2002029	1					
ANR	2004767	Argument	head		2002029	0					
ANR	2004768	Identifier	head		2002029	0					
ANR	2004769	ExpressionStatement	xmlFreeNode ( head )	4180:4:140332:140349	2002029	1	True				
ANR	2004770	CallExpression	xmlFreeNode ( head )		2002029	0					
ANR	2004771	Callee	xmlFreeNode		2002029	0					
ANR	2004772	Identifier	xmlFreeNode		2002029	0					
ANR	2004773	ArgumentList	head		2002029	1					
ANR	2004774	Argument	head		2002029	0					
ANR	2004775	Identifier	head		2002029	0					
ANR	2004776	ExpressionStatement	"body = xmlNewChild ( envelope , ns , BAD_CAST ( ""Body"" ) , NULL )"	4184:2:140363:140419	2002029	1	True				
ANR	2004777	AssignmentExpression	"body = xmlNewChild ( envelope , ns , BAD_CAST ( ""Body"" ) , NULL )"		2002029	0		=			
ANR	2004778	Identifier	body		2002029	0					
ANR	2004779	CallExpression	"xmlNewChild ( envelope , ns , BAD_CAST ( ""Body"" ) , NULL )"		2002029	1					
ANR	2004780	Callee	xmlNewChild		2002029	0					
ANR	2004781	Identifier	xmlNewChild		2002029	0					
ANR	2004782	ArgumentList	envelope		2002029	1					
ANR	2004783	Argument	envelope		2002029	0					
ANR	2004784	Identifier	envelope		2002029	0					
ANR	2004785	Argument	ns		2002029	1					
ANR	2004786	Identifier	ns		2002029	0					
ANR	2004787	Argument	"BAD_CAST ( ""Body"" )"		2002029	2					
ANR	2004788	CallExpression	"BAD_CAST ( ""Body"" )"		2002029	0					
ANR	2004789	Callee	BAD_CAST		2002029	0					
ANR	2004790	Identifier	BAD_CAST		2002029	0					
ANR	2004791	ArgumentList	"""Body"""		2002029	1					
ANR	2004792	Argument	"""Body"""		2002029	0					
ANR	2004793	PrimaryExpression	"""Body"""		2002029	0					
ANR	2004794	Argument	NULL		2002029	3					
ANR	2004795	Identifier	NULL		2002029	0					
ANR	2004796	IfStatement	"if ( serialize_response_call2 ( body , function , function_name , uri , ret , version , 1 , NULL ) == SOAP_ENCODED )"		2002029	2					
ANR	2004797	Condition	"serialize_response_call2 ( body , function , function_name , uri , ret , version , 1 , NULL ) == SOAP_ENCODED"	4186:6:140428:140526	2002029	0	True				
ANR	2004798	EqualityExpression	"serialize_response_call2 ( body , function , function_name , uri , ret , version , 1 , NULL ) == SOAP_ENCODED"		2002029	0		==			
ANR	2004799	CallExpression	"serialize_response_call2 ( body , function , function_name , uri , ret , version , 1 , NULL )"		2002029	0					
ANR	2004800	Callee	serialize_response_call2		2002029	0					
ANR	2004801	Identifier	serialize_response_call2		2002029	0					
ANR	2004802	ArgumentList	body		2002029	1					
ANR	2004803	Argument	body		2002029	0					
ANR	2004804	Identifier	body		2002029	0					
ANR	2004805	Argument	function		2002029	1					
ANR	2004806	Identifier	function		2002029	0					
ANR	2004807	Argument	function_name		2002029	2					
ANR	2004808	Identifier	function_name		2002029	0					
ANR	2004809	Argument	uri		2002029	3					
ANR	2004810	Identifier	uri		2002029	0					
ANR	2004811	Argument	ret		2002029	4					
ANR	2004812	Identifier	ret		2002029	0					
ANR	2004813	Argument	version		2002029	5					
ANR	2004814	Identifier	version		2002029	0					
ANR	2004815	Argument	1		2002029	6					
ANR	2004816	PrimaryExpression	1		2002029	0					
ANR	2004817	Argument	NULL		2002029	7					
ANR	2004818	Identifier	NULL		2002029	0					
ANR	2004819	Identifier	SOAP_ENCODED		2002029	1					
ANR	2004820	CompoundStatement		333:107:11651:11651	2002029	1					
ANR	2004821	ExpressionStatement	use = SOAP_ENCODED	4187:3:140534:140552	2002029	0	True				
ANR	2004822	AssignmentExpression	use = SOAP_ENCODED		2002029	0		=			
ANR	2004823	Identifier	use		2002029	0					
ANR	2004824	Identifier	SOAP_ENCODED		2002029	1					
ANR	2004825	IfStatement	if ( use == SOAP_ENCODED )		2002029	12					
ANR	2004826	Condition	use == SOAP_ENCODED	4192:5:140568:140586	2002029	0	True				
ANR	2004827	EqualityExpression	use == SOAP_ENCODED		2002029	0		==			
ANR	2004828	Identifier	use		2002029	0					
ANR	2004829	Identifier	SOAP_ENCODED		2002029	1					
ANR	2004830	CompoundStatement		339:26:11711:11711	2002029	1					
ANR	2004831	ExpressionStatement	"xmlNewNs ( envelope , BAD_CAST ( XSD_NAMESPACE ) , BAD_CAST ( XSD_NS_PREFIX ) )"	4193:2:140593:140661	2002029	0	True				
ANR	2004832	CallExpression	"xmlNewNs ( envelope , BAD_CAST ( XSD_NAMESPACE ) , BAD_CAST ( XSD_NS_PREFIX ) )"		2002029	0					
ANR	2004833	Callee	xmlNewNs		2002029	0					
ANR	2004834	Identifier	xmlNewNs		2002029	0					
ANR	2004835	ArgumentList	envelope		2002029	1					
ANR	2004836	Argument	envelope		2002029	0					
ANR	2004837	Identifier	envelope		2002029	0					
ANR	2004838	Argument	BAD_CAST ( XSD_NAMESPACE )		2002029	1					
ANR	2004839	CallExpression	BAD_CAST ( XSD_NAMESPACE )		2002029	0					
ANR	2004840	Callee	BAD_CAST		2002029	0					
ANR	2004841	Identifier	BAD_CAST		2002029	0					
ANR	2004842	ArgumentList	XSD_NAMESPACE		2002029	1					
ANR	2004843	Argument	XSD_NAMESPACE		2002029	0					
ANR	2004844	Identifier	XSD_NAMESPACE		2002029	0					
ANR	2004845	Argument	BAD_CAST ( XSD_NS_PREFIX )		2002029	2					
ANR	2004846	CallExpression	BAD_CAST ( XSD_NS_PREFIX )		2002029	0					
ANR	2004847	Callee	BAD_CAST		2002029	0					
ANR	2004848	Identifier	BAD_CAST		2002029	0					
ANR	2004849	ArgumentList	XSD_NS_PREFIX		2002029	1					
ANR	2004850	Argument	XSD_NS_PREFIX		2002029	0					
ANR	2004851	Identifier	XSD_NS_PREFIX		2002029	0					
ANR	2004852	IfStatement	if ( version == SOAP_1_1 )		2002029	1					
ANR	2004853	Condition	version == SOAP_1_1	4194:6:140669:140687	2002029	0	True				
ANR	2004854	EqualityExpression	version == SOAP_1_1		2002029	0		==			
ANR	2004855	Identifier	version		2002029	0					
ANR	2004856	Identifier	SOAP_1_1		2002029	1					
ANR	2004857	CompoundStatement		341:27:11812:11812	2002029	1					
ANR	2004858	ExpressionStatement	"xmlNewNs ( envelope , BAD_CAST ( SOAP_1_1_ENC_NAMESPACE ) , BAD_CAST ( SOAP_1_1_ENC_NS_PREFIX ) )"	4195:3:140695:140781	2002029	0	True				
ANR	2004859	CallExpression	"xmlNewNs ( envelope , BAD_CAST ( SOAP_1_1_ENC_NAMESPACE ) , BAD_CAST ( SOAP_1_1_ENC_NS_PREFIX ) )"		2002029	0					
ANR	2004860	Callee	xmlNewNs		2002029	0					
ANR	2004861	Identifier	xmlNewNs		2002029	0					
ANR	2004862	ArgumentList	envelope		2002029	1					
ANR	2004863	Argument	envelope		2002029	0					
ANR	2004864	Identifier	envelope		2002029	0					
ANR	2004865	Argument	BAD_CAST ( SOAP_1_1_ENC_NAMESPACE )		2002029	1					
ANR	2004866	CallExpression	BAD_CAST ( SOAP_1_1_ENC_NAMESPACE )		2002029	0					
ANR	2004867	Callee	BAD_CAST		2002029	0					
ANR	2004868	Identifier	BAD_CAST		2002029	0					
ANR	2004869	ArgumentList	SOAP_1_1_ENC_NAMESPACE		2002029	1					
ANR	2004870	Argument	SOAP_1_1_ENC_NAMESPACE		2002029	0					
ANR	2004871	Identifier	SOAP_1_1_ENC_NAMESPACE		2002029	0					
ANR	2004872	Argument	BAD_CAST ( SOAP_1_1_ENC_NS_PREFIX )		2002029	2					
ANR	2004873	CallExpression	BAD_CAST ( SOAP_1_1_ENC_NS_PREFIX )		2002029	0					
ANR	2004874	Callee	BAD_CAST		2002029	0					
ANR	2004875	Identifier	BAD_CAST		2002029	0					
ANR	2004876	ArgumentList	SOAP_1_1_ENC_NS_PREFIX		2002029	1					
ANR	2004877	Argument	SOAP_1_1_ENC_NS_PREFIX		2002029	0					
ANR	2004878	Identifier	SOAP_1_1_ENC_NS_PREFIX		2002029	0					
ANR	2004879	ExpressionStatement	"xmlSetNsProp ( envelope , envelope -> ns , BAD_CAST ( ""encodingStyle"" ) , BAD_CAST ( SOAP_1_1_ENC_NAMESPACE ) )"	4196:3:140786:140883	2002029	1	True				
ANR	2004880	CallExpression	"xmlSetNsProp ( envelope , envelope -> ns , BAD_CAST ( ""encodingStyle"" ) , BAD_CAST ( SOAP_1_1_ENC_NAMESPACE ) )"		2002029	0					
ANR	2004881	Callee	xmlSetNsProp		2002029	0					
ANR	2004882	Identifier	xmlSetNsProp		2002029	0					
ANR	2004883	ArgumentList	envelope		2002029	1					
ANR	2004884	Argument	envelope		2002029	0					
ANR	2004885	Identifier	envelope		2002029	0					
ANR	2004886	Argument	envelope -> ns		2002029	1					
ANR	2004887	PtrMemberAccess	envelope -> ns		2002029	0					
ANR	2004888	Identifier	envelope		2002029	0					
ANR	2004889	Identifier	ns		2002029	1					
ANR	2004890	Argument	"BAD_CAST ( ""encodingStyle"" )"		2002029	2					
ANR	2004891	CallExpression	"BAD_CAST ( ""encodingStyle"" )"		2002029	0					
ANR	2004892	Callee	BAD_CAST		2002029	0					
ANR	2004893	Identifier	BAD_CAST		2002029	0					
ANR	2004894	ArgumentList	"""encodingStyle"""		2002029	1					
ANR	2004895	Argument	"""encodingStyle"""		2002029	0					
ANR	2004896	PrimaryExpression	"""encodingStyle"""		2002029	0					
ANR	2004897	Argument	BAD_CAST ( SOAP_1_1_ENC_NAMESPACE )		2002029	3					
ANR	2004898	CallExpression	BAD_CAST ( SOAP_1_1_ENC_NAMESPACE )		2002029	0					
ANR	2004899	Callee	BAD_CAST		2002029	0					
ANR	2004900	Identifier	BAD_CAST		2002029	0					
ANR	2004901	ArgumentList	SOAP_1_1_ENC_NAMESPACE		2002029	1					
ANR	2004902	Argument	SOAP_1_1_ENC_NAMESPACE		2002029	0					
ANR	2004903	Identifier	SOAP_1_1_ENC_NAMESPACE		2002029	0					
ANR	2004904	ElseStatement	else		2002029	0					
ANR	2004905	IfStatement	if ( version == SOAP_1_2 )		2002029	0					
ANR	2004906	Condition	version == SOAP_1_2	4197:13:140898:140916	2002029	0	True				
ANR	2004907	EqualityExpression	version == SOAP_1_2		2002029	0		==			
ANR	2004908	Identifier	version		2002029	0					
ANR	2004909	Identifier	SOAP_1_2		2002029	1					
ANR	2004910	CompoundStatement		344:34:12041:12041	2002029	1					
ANR	2004911	ExpressionStatement	"xmlNewNs ( envelope , BAD_CAST ( SOAP_1_2_ENC_NAMESPACE ) , BAD_CAST ( SOAP_1_2_ENC_NS_PREFIX ) )"	4198:3:140924:141010	2002029	0	True				
ANR	2004912	CallExpression	"xmlNewNs ( envelope , BAD_CAST ( SOAP_1_2_ENC_NAMESPACE ) , BAD_CAST ( SOAP_1_2_ENC_NS_PREFIX ) )"		2002029	0					
ANR	2004913	Callee	xmlNewNs		2002029	0					
ANR	2004914	Identifier	xmlNewNs		2002029	0					
ANR	2004915	ArgumentList	envelope		2002029	1					
ANR	2004916	Argument	envelope		2002029	0					
ANR	2004917	Identifier	envelope		2002029	0					
ANR	2004918	Argument	BAD_CAST ( SOAP_1_2_ENC_NAMESPACE )		2002029	1					
ANR	2004919	CallExpression	BAD_CAST ( SOAP_1_2_ENC_NAMESPACE )		2002029	0					
ANR	2004920	Callee	BAD_CAST		2002029	0					
ANR	2004921	Identifier	BAD_CAST		2002029	0					
ANR	2004922	ArgumentList	SOAP_1_2_ENC_NAMESPACE		2002029	1					
ANR	2004923	Argument	SOAP_1_2_ENC_NAMESPACE		2002029	0					
ANR	2004924	Identifier	SOAP_1_2_ENC_NAMESPACE		2002029	0					
ANR	2004925	Argument	BAD_CAST ( SOAP_1_2_ENC_NS_PREFIX )		2002029	2					
ANR	2004926	CallExpression	BAD_CAST ( SOAP_1_2_ENC_NS_PREFIX )		2002029	0					
ANR	2004927	Callee	BAD_CAST		2002029	0					
ANR	2004928	Identifier	BAD_CAST		2002029	0					
ANR	2004929	ArgumentList	SOAP_1_2_ENC_NS_PREFIX		2002029	1					
ANR	2004930	Argument	SOAP_1_2_ENC_NS_PREFIX		2002029	0					
ANR	2004931	Identifier	SOAP_1_2_ENC_NS_PREFIX		2002029	0					
ANR	2004932	ExpressionStatement	encode_finish ( )	4202:1:141021:141036	2002029	13	True				
ANR	2004933	CallExpression	encode_finish ( )		2002029	0					
ANR	2004934	Callee	encode_finish		2002029	0					
ANR	2004935	Identifier	encode_finish		2002029	0					
ANR	2004936	ArgumentList			2002029	1					
ANR	2004937	IfStatement	if ( function && function -> responseName == NULL && body -> children == NULL && head == NULL )		2002029	14					
ANR	2004938	Condition	function && function -> responseName == NULL && body -> children == NULL && head == NULL	4204:5:141044:141132	2002029	0	True				
ANR	2004939	AndExpression	function && function -> responseName == NULL && body -> children == NULL && head == NULL		2002029	0		&&			
ANR	2004940	Identifier	function		2002029	0					
ANR	2004941	AndExpression	function -> responseName == NULL && body -> children == NULL && head == NULL		2002029	1		&&			
ANR	2004942	EqualityExpression	function -> responseName == NULL		2002029	0		==			
ANR	2004943	PtrMemberAccess	function -> responseName		2002029	0					
ANR	2004944	Identifier	function		2002029	0					
ANR	2004945	Identifier	responseName		2002029	1					
ANR	2004946	Identifier	NULL		2002029	1					
ANR	2004947	AndExpression	body -> children == NULL && head == NULL		2002029	1		&&			
ANR	2004948	EqualityExpression	body -> children == NULL		2002029	0		==			
ANR	2004949	PtrMemberAccess	body -> children		2002029	0					
ANR	2004950	Identifier	body		2002029	0					
ANR	2004951	Identifier	children		2002029	1					
ANR	2004952	Identifier	NULL		2002029	1					
ANR	2004953	EqualityExpression	head == NULL		2002029	1		==			
ANR	2004954	Identifier	head		2002029	0					
ANR	2004955	Identifier	NULL		2002029	1					
ANR	2004956	CompoundStatement		352:45:12257:12257	2002029	1					
ANR	2004957	ExpressionStatement	xmlFreeDoc ( doc )	4206:2:141139:141154	2002029	0	True				
ANR	2004958	CallExpression	xmlFreeDoc ( doc )		2002029	0					
ANR	2004959	Callee	xmlFreeDoc		2002029	0					
ANR	2004960	Identifier	xmlFreeDoc		2002029	0					
ANR	2004961	ArgumentList	doc		2002029	1					
ANR	2004962	Argument	doc		2002029	0					
ANR	2004963	Identifier	doc		2002029	0					
ANR	2004964	ReturnStatement	return NULL ;	4207:2:141158:141169	2002029	1	True				
ANR	2004965	Identifier	NULL		2002029	0					
ANR	2004966	ReturnStatement	return doc ;	4209:1:141175:141185	2002029	15	True				
ANR	2004967	Identifier	doc		2002029	0					
ANR	2004968	ReturnType	static xmlDocPtr		2002029	1					
ANR	2004969	Identifier	serialize_response_call		2002029	2					
ANR	2004970	ParameterList	"sdlFunctionPtr function , char * function_name , char * uri , zval * ret , soapHeader * headers , int version"		2002029	3					
ANR	2004971	Parameter	sdlFunctionPtr function	3853:41:128775:128797	2002029	0	True				
ANR	2004972	ParameterType	sdlFunctionPtr		2002029	0					
ANR	2004973	Identifier	function		2002029	1					
ANR	2004974	Parameter	char * function_name	3853:66:128800:128818	2002029	1	True				
ANR	2004975	ParameterType	char *		2002029	0					
ANR	2004976	Identifier	function_name		2002029	1					
ANR	2004977	Parameter	char * uri	3853:87:128821:128829	2002029	2	True				
ANR	2004978	ParameterType	char *		2002029	0					
ANR	2004979	Identifier	uri		2002029	1					
ANR	2004980	Parameter	zval * ret	3853:98:128832:128840	2002029	3	True				
ANR	2004981	ParameterType	zval *		2002029	0					
ANR	2004982	Identifier	ret		2002029	1					
ANR	2004983	Parameter	soapHeader * headers	3853:109:128843:128861	2002029	4	True				
ANR	2004984	ParameterType	soapHeader *		2002029	0					
ANR	2004985	Identifier	headers		2002029	1					
ANR	2004986	Parameter	int version	3853:130:128864:128874	2002029	5	True				
ANR	2004987	ParameterType	int		2002029	0					
ANR	2004988	Identifier	version		2002029	1					
ANR	2004989	CFGEntryNode	ENTRY		2002029		True				
ANR	2004990	CFGExitNode	EXIT		2002029		True				
ANR	2004991	Symbol	Z_TYPE		2002029						
ANR	2004992	Symbol	ht		2002029						
ANR	2004993	Symbol	headers -> hdr -> headerfaults		2002029						
ANR	2004994	Symbol	* * sparam		2002029						
ANR	2004995	Symbol	tmp		2002029						
ANR	2004996	Symbol	sparam -> element		2002029						
ANR	2004997	Symbol	& h -> retval		2002029						
ANR	2004998	Symbol	function -> binding		2002029						
ANR	2004999	Symbol	* doc		2002029						
ANR	2005000	Symbol	hdr_use		2002029						
ANR	2005001	Symbol	XSD_NS_PREFIX		2002029						
ANR	2005002	Symbol	body -> children		2002029						
ANR	2005003	Symbol	nsptr -> prefix		2002029						
ANR	2005004	Symbol	hdr -> encode		2002029						
ANR	2005005	Symbol	xmlNewChild		2002029						
ANR	2005006	Symbol	version		2002029						
ANR	2005007	Symbol	SOAP_1_2_ENV_NAMESPACE		2002029						
ANR	2005008	Symbol	SOAP_1_2_ENC_NS_PREFIX		2002029						
ANR	2005009	Symbol	str		2002029						
ANR	2005010	Symbol	node		2002029						
ANR	2005011	Symbol	envelope		2002029						
ANR	2005012	Symbol	h -> hdr -> ns		2002029						
ANR	2005013	Symbol	function -> responseName		2002029						
ANR	2005014	Symbol	sparam -> element -> namens		2002029						
ANR	2005015	Symbol	* nsptr		2002029						
ANR	2005016	Symbol	doc		2002029						
ANR	2005017	Symbol	xmlCharStrdup		2002029						
ANR	2005018	Symbol	h -> hdr		2002029						
ANR	2005019	Symbol	detail		2002029						
ANR	2005020	Symbol	fb -> ns		2002029						
ANR	2005021	Symbol	xmlBuildQName		2002029						
ANR	2005022	Symbol	& key		2002029						
ANR	2005023	Symbol	* body		2002029						
ANR	2005024	Symbol	fault -> bindingAttributes		2002029						
ANR	2005025	Symbol	nsptr		2002029						
ANR	2005026	Symbol	SOAP_1_1_ENC_NS_PREFIX		2002029						
ANR	2005027	Symbol	BINDING_SOAP		2002029						
ANR	2005028	Symbol	zend_hash_str_find		2002029						
ANR	2005029	Symbol	hdr_name		2002029						
ANR	2005030	Symbol	Z_OBJPROP		2002029						
ANR	2005031	Symbol	prop		2002029						
ANR	2005032	Symbol	* headers		2002029						
ANR	2005033	Symbol	Z_OBJCE_P		2002029						
ANR	2005034	Symbol	envelope -> ns		2002029						
ANR	2005035	Symbol	Z_STRLEN_P		2002029						
ANR	2005036	Symbol	key		2002029						
ANR	2005037	Symbol	* hdr		2002029						
ANR	2005038	Symbol	* * headers		2002029						
ANR	2005039	Symbol	* * function		2002029						
ANR	2005040	Symbol	* fb		2002029						
ANR	2005041	Symbol	SOAP_1_1		2002029						
ANR	2005042	Symbol	h -> next		2002029						
ANR	2005043	Symbol	zend_hash_num_elements		2002029						
ANR	2005044	Symbol	* sparam -> element		2002029						
ANR	2005045	Symbol	sparam -> element -> name		2002029						
ANR	2005046	Symbol	h		2002029						
ANR	2005047	Symbol	xmlNewNode		2002029						
ANR	2005048	Symbol	function -> faults		2002029						
ANR	2005049	Symbol	uri		2002029						
ANR	2005050	Symbol	sparam		2002029						
ANR	2005051	Symbol	detail_name		2002029						
ANR	2005052	Symbol	hdr_ret		2002029						
ANR	2005053	Symbol	x		2002029						
ANR	2005054	Symbol	tmp_fault		2002029						
ANR	2005055	Symbol	soap_header_class_entry		2002029						
ANR	2005056	Symbol	* envelope		2002029						
ANR	2005057	Symbol	XSD_NAMESPACE		2002029						
ANR	2005058	Symbol	SOAP_1_2		2002029						
ANR	2005059	Symbol	IS_OBJECT		2002029						
ANR	2005060	Symbol	fnb -> style		2002029						
ANR	2005061	Symbol	h -> function_name		2002029						
ANR	2005062	Symbol	hdr_ns		2002029						
ANR	2005063	Symbol	* fault		2002029						
ANR	2005064	Symbol	SOAP_1_2_ENV_NS_PREFIX		2002029						
ANR	2005065	Symbol	use		2002029						
ANR	2005066	Symbol	fnb -> output . headers		2002029						
ANR	2005067	Symbol	* head		2002029						
ANR	2005068	Symbol	get_conversion		2002029						
ANR	2005069	Symbol	body		2002029						
ANR	2005070	Symbol	key . s		2002029						
ANR	2005071	Symbol	hdr_enc		2002029						
ANR	2005072	Symbol	headers -> function		2002029						
ANR	2005073	Symbol	strlen		2002029						
ANR	2005074	Symbol	function		2002029						
ANR	2005075	Symbol	xmlNewDoc		2002029						
ANR	2005076	Symbol	IS_STRING		2002029						
ANR	2005077	Symbol	serialize_response_call2		2002029						
ANR	2005078	Symbol	fnb		2002029						
ANR	2005079	Symbol	zend_hash_find_ptr		2002029						
ANR	2005080	Symbol	SOAP_RPC		2002029						
ANR	2005081	Symbol	ret		2002029						
ANR	2005082	Symbol	NULL		2002029						
ANR	2005083	Symbol	* * h		2002029						
ANR	2005084	Symbol	xmlHdr		2002029						
ANR	2005085	Symbol	xmlNewDocNode		2002029						
ANR	2005086	Symbol	doc -> charset		2002029						
ANR	2005087	Symbol	serialize_parameter		2002029						
ANR	2005088	Symbol	& xmlHdr		2002029						
ANR	2005089	Symbol	doc -> encoding		2002029						
ANR	2005090	Symbol	SOAP_LITERAL		2002029						
ANR	2005091	Symbol	headers -> hdr -> ns		2002029						
ANR	2005092	Symbol	Z_STR_P		2002029						
ANR	2005093	Symbol	fb		2002029						
ANR	2005094	Symbol	BAD_CAST		2002029						
ANR	2005095	Symbol	headers -> function_name		2002029						
ANR	2005096	Symbol	instanceof_function		2002029						
ANR	2005097	Symbol	XML_CHAR_ENCODING_UTF8		2002029						
ANR	2005098	Symbol	fault_ns		2002029						
ANR	2005099	Symbol	SOAP_1_1_ENV_NAMESPACE		2002029						
ANR	2005100	Symbol	code		2002029						
ANR	2005101	Symbol	ns		2002029						
ANR	2005102	Symbol	h -> retval		2002029						
ANR	2005103	Symbol	head		2002029						
ANR	2005104	Symbol	soap_fault_class_entry		2002029						
ANR	2005105	Symbol	Z_OBJCE		2002029						
ANR	2005106	Symbol	IS_NULL		2002029						
ANR	2005107	Symbol	param		2002029						
ANR	2005108	Symbol	Z_STRVAL		2002029						
ANR	2005109	Symbol	php_escape_html_entities		2002029						
ANR	2005110	Symbol	master_to_xml		2002029						
ANR	2005111	Symbol	hdr -> use		2002029						
ANR	2005112	Symbol	zend_hash_get_current_data_ptr		2002029						
ANR	2005113	Symbol	headers		2002029						
ANR	2005114	Symbol	encode_add_ns		2002029						
ANR	2005115	Symbol	fault -> details		2002029						
ANR	2005116	Symbol	SOAP_1_1_ENC_NAMESPACE		2002029						
ANR	2005117	Symbol	* headers -> hdr		2002029						
ANR	2005118	Symbol	h -> function		2002029						
ANR	2005119	Symbol	* function		2002029						
ANR	2005120	Symbol	fnb -> output		2002029						
ANR	2005121	Symbol	fault		2002029						
ANR	2005122	Symbol	function -> binding -> bindingType		2002029						
ANR	2005123	Symbol	* h -> hdr		2002029						
ANR	2005124	Symbol	Z_OBJPROP_P		2002029						
ANR	2005125	Symbol	Z_TYPE_P		2002029						
ANR	2005126	Symbol	Z_STRVAL_P		2002029						
ANR	2005127	Symbol	ZSTR_VAL		2002029						
ANR	2005128	Symbol	* h		2002029						
ANR	2005129	Symbol	xmlNewNs		2002029						
ANR	2005130	Symbol	function_name		2002029						
ANR	2005131	Symbol	headers -> hdr		2002029						
ANR	2005132	Symbol	hdr		2002029						
ANR	2005133	Symbol	ZSTR_LEN		2002029						
ANR	2005134	Symbol	SOAP_1_1_ENV_NS_PREFIX		2002029						
ANR	2005135	Symbol	SOAP_ENCODED		2002029						
ANR	2005136	Symbol	SOAP_1_2_ENC_NAMESPACE		2002029						
ANR	2005137	Symbol	head -> children		2002029						
ANR	2005138	Symbol	* fnb		2002029						
ANR	2005139	Symbol	* function -> binding		2002029						
ANR	2005140	Symbol	function -> bindingAttributes		2002029						
ANR	2005141	Symbol	fb -> use		2002029						
ANR	2005142	Symbol	* sparam		2002029						
ANR	2005143	Function	serialize_function_call	4212:0:141190:147449							
ANR	2005144	FunctionDef	"serialize_function_call (zval * this_ptr , sdlFunctionPtr function , char * function_name , char * uri , zval * arguments , int arg_count , int version , HashTable * soap_headers)"		2005143	0					
ANR	2005145	CompoundStatement		4213:0:141374:147449	2005143	0					
ANR	2005146	IdentifierDeclStatement	xmlDoc * doc ;	4214:1:141377:141388	2005143	0	True				
ANR	2005147	IdentifierDecl	* doc		2005143	0					
ANR	2005148	IdentifierDeclType	xmlDoc *		2005143	0					
ANR	2005149	Identifier	doc		2005143	1					
ANR	2005150	IdentifierDeclStatement	"xmlNodePtr envelope = NULL , body , method = NULL , head = NULL ;"	4215:1:141391:141451	2005143	1	True				
ANR	2005151	IdentifierDecl	envelope = NULL		2005143	0					
ANR	2005152	IdentifierDeclType	xmlNodePtr		2005143	0					
ANR	2005153	Identifier	envelope		2005143	1					
ANR	2005154	AssignmentExpression	envelope = NULL		2005143	2		=			
ANR	2005155	Identifier	NULL		2005143	0					
ANR	2005156	Identifier	NULL		2005143	1					
ANR	2005157	IdentifierDecl	body		2005143	1					
ANR	2005158	IdentifierDeclType	xmlNodePtr		2005143	0					
ANR	2005159	Identifier	body		2005143	1					
ANR	2005160	IdentifierDecl	method = NULL		2005143	2					
ANR	2005161	IdentifierDeclType	xmlNodePtr		2005143	0					
ANR	2005162	Identifier	method		2005143	1					
ANR	2005163	AssignmentExpression	method = NULL		2005143	2		=			
ANR	2005164	Identifier	NULL		2005143	0					
ANR	2005165	Identifier	NULL		2005143	1					
ANR	2005166	IdentifierDecl	head = NULL		2005143	3					
ANR	2005167	IdentifierDeclType	xmlNodePtr		2005143	0					
ANR	2005168	Identifier	head		2005143	1					
ANR	2005169	AssignmentExpression	head = NULL		2005143	2		=			
ANR	2005170	Identifier	NULL		2005143	0					
ANR	2005171	Identifier	NULL		2005143	1					
ANR	2005172	IdentifierDeclStatement	xmlNsPtr ns = NULL ;	4216:1:141454:141472	2005143	2	True				
ANR	2005173	IdentifierDecl	ns = NULL		2005143	0					
ANR	2005174	IdentifierDeclType	xmlNsPtr		2005143	0					
ANR	2005175	Identifier	ns		2005143	1					
ANR	2005176	AssignmentExpression	ns = NULL		2005143	2		=			
ANR	2005177	Identifier	NULL		2005143	0					
ANR	2005178	Identifier	NULL		2005143	1					
ANR	2005179	IdentifierDeclStatement	"zval * zstyle , * zuse ;"	4217:1:141475:141494	2005143	3	True				
ANR	2005180	IdentifierDecl	* zstyle		2005143	0					
ANR	2005181	IdentifierDeclType	zval *		2005143	0					
ANR	2005182	Identifier	zstyle		2005143	1					
ANR	2005183	IdentifierDecl	* zuse		2005143	1					
ANR	2005184	IdentifierDeclType	zval *		2005143	0					
ANR	2005185	Identifier	zuse		2005143	1					
ANR	2005186	IdentifierDeclStatement	"int i , style , use ;"	4218:1:141497:141514	2005143	4	True				
ANR	2005187	IdentifierDecl	i		2005143	0					
ANR	2005188	IdentifierDeclType	int		2005143	0					
ANR	2005189	Identifier	i		2005143	1					
ANR	2005190	IdentifierDecl	style		2005143	1					
ANR	2005191	IdentifierDeclType	int		2005143	0					
ANR	2005192	Identifier	style		2005143	1					
ANR	2005193	IdentifierDecl	use		2005143	2					
ANR	2005194	IdentifierDeclType	int		2005143	0					
ANR	2005195	Identifier	use		2005143	1					
ANR	2005196	IdentifierDeclStatement	HashTable * hdrs = NULL ;	4219:1:141517:141539	2005143	5	True				
ANR	2005197	IdentifierDecl	* hdrs = NULL		2005143	0					
ANR	2005198	IdentifierDeclType	HashTable *		2005143	0					
ANR	2005199	Identifier	hdrs		2005143	1					
ANR	2005200	AssignmentExpression	* hdrs = NULL		2005143	2		=			
ANR	2005201	Identifier	NULL		2005143	0					
ANR	2005202	Identifier	NULL		2005143	1					
ANR	2005203	ExpressionStatement	encode_reset_ns ( )	4221:1:141543:141560	2005143	6	True				
ANR	2005204	CallExpression	encode_reset_ns ( )		2005143	0					
ANR	2005205	Callee	encode_reset_ns		2005143	0					
ANR	2005206	Identifier	encode_reset_ns		2005143	0					
ANR	2005207	ArgumentList			2005143	1					
ANR	2005208	ExpressionStatement	"doc = xmlNewDoc ( BAD_CAST ( ""1.0"" ) )"	4223:1:141564:141596	2005143	7	True				
ANR	2005209	AssignmentExpression	"doc = xmlNewDoc ( BAD_CAST ( ""1.0"" ) )"		2005143	0		=			
ANR	2005210	Identifier	doc		2005143	0					
ANR	2005211	CallExpression	"xmlNewDoc ( BAD_CAST ( ""1.0"" ) )"		2005143	1					
ANR	2005212	Callee	xmlNewDoc		2005143	0					
ANR	2005213	Identifier	xmlNewDoc		2005143	0					
ANR	2005214	ArgumentList	"BAD_CAST ( ""1.0"" )"		2005143	1					
ANR	2005215	Argument	"BAD_CAST ( ""1.0"" )"		2005143	0					
ANR	2005216	CallExpression	"BAD_CAST ( ""1.0"" )"		2005143	0					
ANR	2005217	Callee	BAD_CAST		2005143	0					
ANR	2005218	Identifier	BAD_CAST		2005143	0					
ANR	2005219	ArgumentList	"""1.0"""		2005143	1					
ANR	2005220	Argument	"""1.0"""		2005143	0					
ANR	2005221	PrimaryExpression	"""1.0"""		2005143	0					
ANR	2005222	ExpressionStatement	"doc -> encoding = xmlCharStrdup ( ""UTF-8"" )"	4224:1:141599:141637	2005143	8	True				
ANR	2005223	AssignmentExpression	"doc -> encoding = xmlCharStrdup ( ""UTF-8"" )"		2005143	0		=			
ANR	2005224	PtrMemberAccess	doc -> encoding		2005143	0					
ANR	2005225	Identifier	doc		2005143	0					
ANR	2005226	Identifier	encoding		2005143	1					
ANR	2005227	CallExpression	"xmlCharStrdup ( ""UTF-8"" )"		2005143	1					
ANR	2005228	Callee	xmlCharStrdup		2005143	0					
ANR	2005229	Identifier	xmlCharStrdup		2005143	0					
ANR	2005230	ArgumentList	"""UTF-8"""		2005143	1					
ANR	2005231	Argument	"""UTF-8"""		2005143	0					
ANR	2005232	PrimaryExpression	"""UTF-8"""		2005143	0					
ANR	2005233	ExpressionStatement	doc -> charset = XML_CHAR_ENCODING_UTF8	4225:1:141640:141677	2005143	9	True				
ANR	2005234	AssignmentExpression	doc -> charset = XML_CHAR_ENCODING_UTF8		2005143	0		=			
ANR	2005235	PtrMemberAccess	doc -> charset		2005143	0					
ANR	2005236	Identifier	doc		2005143	0					
ANR	2005237	Identifier	charset		2005143	1					
ANR	2005238	Identifier	XML_CHAR_ENCODING_UTF8		2005143	1					
ANR	2005239	IfStatement	if ( version == SOAP_1_1 )		2005143	10					
ANR	2005240	Condition	version == SOAP_1_1	4226:5:141684:141702	2005143	0	True				
ANR	2005241	EqualityExpression	version == SOAP_1_1		2005143	0		==			
ANR	2005242	Identifier	version		2005143	0					
ANR	2005243	Identifier	SOAP_1_1		2005143	1					
ANR	2005244	CompoundStatement		14:26:330:330	2005143	1					
ANR	2005245	ExpressionStatement	"envelope = xmlNewDocNode ( doc , NULL , BAD_CAST ( ""Envelope"" ) , NULL )"	4227:2:141709:141772	2005143	0	True				
ANR	2005246	AssignmentExpression	"envelope = xmlNewDocNode ( doc , NULL , BAD_CAST ( ""Envelope"" ) , NULL )"		2005143	0		=			
ANR	2005247	Identifier	envelope		2005143	0					
ANR	2005248	CallExpression	"xmlNewDocNode ( doc , NULL , BAD_CAST ( ""Envelope"" ) , NULL )"		2005143	1					
ANR	2005249	Callee	xmlNewDocNode		2005143	0					
ANR	2005250	Identifier	xmlNewDocNode		2005143	0					
ANR	2005251	ArgumentList	doc		2005143	1					
ANR	2005252	Argument	doc		2005143	0					
ANR	2005253	Identifier	doc		2005143	0					
ANR	2005254	Argument	NULL		2005143	1					
ANR	2005255	Identifier	NULL		2005143	0					
ANR	2005256	Argument	"BAD_CAST ( ""Envelope"" )"		2005143	2					
ANR	2005257	CallExpression	"BAD_CAST ( ""Envelope"" )"		2005143	0					
ANR	2005258	Callee	BAD_CAST		2005143	0					
ANR	2005259	Identifier	BAD_CAST		2005143	0					
ANR	2005260	ArgumentList	"""Envelope"""		2005143	1					
ANR	2005261	Argument	"""Envelope"""		2005143	0					
ANR	2005262	PrimaryExpression	"""Envelope"""		2005143	0					
ANR	2005263	Argument	NULL		2005143	3					
ANR	2005264	Identifier	NULL		2005143	0					
ANR	2005265	ExpressionStatement	"ns = xmlNewNs ( envelope , BAD_CAST ( SOAP_1_1_ENV_NAMESPACE ) , BAD_CAST ( SOAP_1_1_ENV_NS_PREFIX ) )"	4228:2:141776:141867	2005143	1	True				
ANR	2005266	AssignmentExpression	"ns = xmlNewNs ( envelope , BAD_CAST ( SOAP_1_1_ENV_NAMESPACE ) , BAD_CAST ( SOAP_1_1_ENV_NS_PREFIX ) )"		2005143	0		=			
ANR	2005267	Identifier	ns		2005143	0					
ANR	2005268	CallExpression	"xmlNewNs ( envelope , BAD_CAST ( SOAP_1_1_ENV_NAMESPACE ) , BAD_CAST ( SOAP_1_1_ENV_NS_PREFIX ) )"		2005143	1					
ANR	2005269	Callee	xmlNewNs		2005143	0					
ANR	2005270	Identifier	xmlNewNs		2005143	0					
ANR	2005271	ArgumentList	envelope		2005143	1					
ANR	2005272	Argument	envelope		2005143	0					
ANR	2005273	Identifier	envelope		2005143	0					
ANR	2005274	Argument	BAD_CAST ( SOAP_1_1_ENV_NAMESPACE )		2005143	1					
ANR	2005275	CallExpression	BAD_CAST ( SOAP_1_1_ENV_NAMESPACE )		2005143	0					
ANR	2005276	Callee	BAD_CAST		2005143	0					
ANR	2005277	Identifier	BAD_CAST		2005143	0					
ANR	2005278	ArgumentList	SOAP_1_1_ENV_NAMESPACE		2005143	1					
ANR	2005279	Argument	SOAP_1_1_ENV_NAMESPACE		2005143	0					
ANR	2005280	Identifier	SOAP_1_1_ENV_NAMESPACE		2005143	0					
ANR	2005281	Argument	BAD_CAST ( SOAP_1_1_ENV_NS_PREFIX )		2005143	2					
ANR	2005282	CallExpression	BAD_CAST ( SOAP_1_1_ENV_NS_PREFIX )		2005143	0					
ANR	2005283	Callee	BAD_CAST		2005143	0					
ANR	2005284	Identifier	BAD_CAST		2005143	0					
ANR	2005285	ArgumentList	SOAP_1_1_ENV_NS_PREFIX		2005143	1					
ANR	2005286	Argument	SOAP_1_1_ENV_NS_PREFIX		2005143	0					
ANR	2005287	Identifier	SOAP_1_1_ENV_NS_PREFIX		2005143	0					
ANR	2005288	ExpressionStatement	"xmlSetNs ( envelope , ns )"	4229:2:141871:141893	2005143	2	True				
ANR	2005289	CallExpression	"xmlSetNs ( envelope , ns )"		2005143	0					
ANR	2005290	Callee	xmlSetNs		2005143	0					
ANR	2005291	Identifier	xmlSetNs		2005143	0					
ANR	2005292	ArgumentList	envelope		2005143	1					
ANR	2005293	Argument	envelope		2005143	0					
ANR	2005294	Identifier	envelope		2005143	0					
ANR	2005295	Argument	ns		2005143	1					
ANR	2005296	Identifier	ns		2005143	0					
ANR	2005297	ElseStatement	else		2005143	0					
ANR	2005298	IfStatement	if ( version == SOAP_1_2 )		2005143	0					
ANR	2005299	Condition	version == SOAP_1_2	4230:12:141907:141925	2005143	0	True				
ANR	2005300	EqualityExpression	version == SOAP_1_2		2005143	0		==			
ANR	2005301	Identifier	version		2005143	0					
ANR	2005302	Identifier	SOAP_1_2		2005143	1					
ANR	2005303	CompoundStatement		18:33:553:553	2005143	1					
ANR	2005304	ExpressionStatement	"envelope = xmlNewDocNode ( doc , NULL , BAD_CAST ( ""Envelope"" ) , NULL )"	4231:2:141932:141995	2005143	0	True				
ANR	2005305	AssignmentExpression	"envelope = xmlNewDocNode ( doc , NULL , BAD_CAST ( ""Envelope"" ) , NULL )"		2005143	0		=			
ANR	2005306	Identifier	envelope		2005143	0					
ANR	2005307	CallExpression	"xmlNewDocNode ( doc , NULL , BAD_CAST ( ""Envelope"" ) , NULL )"		2005143	1					
ANR	2005308	Callee	xmlNewDocNode		2005143	0					
ANR	2005309	Identifier	xmlNewDocNode		2005143	0					
ANR	2005310	ArgumentList	doc		2005143	1					
ANR	2005311	Argument	doc		2005143	0					
ANR	2005312	Identifier	doc		2005143	0					
ANR	2005313	Argument	NULL		2005143	1					
ANR	2005314	Identifier	NULL		2005143	0					
ANR	2005315	Argument	"BAD_CAST ( ""Envelope"" )"		2005143	2					
ANR	2005316	CallExpression	"BAD_CAST ( ""Envelope"" )"		2005143	0					
ANR	2005317	Callee	BAD_CAST		2005143	0					
ANR	2005318	Identifier	BAD_CAST		2005143	0					
ANR	2005319	ArgumentList	"""Envelope"""		2005143	1					
ANR	2005320	Argument	"""Envelope"""		2005143	0					
ANR	2005321	PrimaryExpression	"""Envelope"""		2005143	0					
ANR	2005322	Argument	NULL		2005143	3					
ANR	2005323	Identifier	NULL		2005143	0					
ANR	2005324	ExpressionStatement	"ns = xmlNewNs ( envelope , BAD_CAST ( SOAP_1_2_ENV_NAMESPACE ) , BAD_CAST ( SOAP_1_2_ENV_NS_PREFIX ) )"	4232:2:141999:142090	2005143	1	True				
ANR	2005325	AssignmentExpression	"ns = xmlNewNs ( envelope , BAD_CAST ( SOAP_1_2_ENV_NAMESPACE ) , BAD_CAST ( SOAP_1_2_ENV_NS_PREFIX ) )"		2005143	0		=			
ANR	2005326	Identifier	ns		2005143	0					
ANR	2005327	CallExpression	"xmlNewNs ( envelope , BAD_CAST ( SOAP_1_2_ENV_NAMESPACE ) , BAD_CAST ( SOAP_1_2_ENV_NS_PREFIX ) )"		2005143	1					
ANR	2005328	Callee	xmlNewNs		2005143	0					
ANR	2005329	Identifier	xmlNewNs		2005143	0					
ANR	2005330	ArgumentList	envelope		2005143	1					
ANR	2005331	Argument	envelope		2005143	0					
ANR	2005332	Identifier	envelope		2005143	0					
ANR	2005333	Argument	BAD_CAST ( SOAP_1_2_ENV_NAMESPACE )		2005143	1					
ANR	2005334	CallExpression	BAD_CAST ( SOAP_1_2_ENV_NAMESPACE )		2005143	0					
ANR	2005335	Callee	BAD_CAST		2005143	0					
ANR	2005336	Identifier	BAD_CAST		2005143	0					
ANR	2005337	ArgumentList	SOAP_1_2_ENV_NAMESPACE		2005143	1					
ANR	2005338	Argument	SOAP_1_2_ENV_NAMESPACE		2005143	0					
ANR	2005339	Identifier	SOAP_1_2_ENV_NAMESPACE		2005143	0					
ANR	2005340	Argument	BAD_CAST ( SOAP_1_2_ENV_NS_PREFIX )		2005143	2					
ANR	2005341	CallExpression	BAD_CAST ( SOAP_1_2_ENV_NS_PREFIX )		2005143	0					
ANR	2005342	Callee	BAD_CAST		2005143	0					
ANR	2005343	Identifier	BAD_CAST		2005143	0					
ANR	2005344	ArgumentList	SOAP_1_2_ENV_NS_PREFIX		2005143	1					
ANR	2005345	Argument	SOAP_1_2_ENV_NS_PREFIX		2005143	0					
ANR	2005346	Identifier	SOAP_1_2_ENV_NS_PREFIX		2005143	0					
ANR	2005347	ExpressionStatement	"xmlSetNs ( envelope , ns )"	4233:2:142094:142116	2005143	2	True				
ANR	2005348	CallExpression	"xmlSetNs ( envelope , ns )"		2005143	0					
ANR	2005349	Callee	xmlSetNs		2005143	0					
ANR	2005350	Identifier	xmlSetNs		2005143	0					
ANR	2005351	ArgumentList	envelope		2005143	1					
ANR	2005352	Argument	envelope		2005143	0					
ANR	2005353	Identifier	envelope		2005143	0					
ANR	2005354	Argument	ns		2005143	1					
ANR	2005355	Identifier	ns		2005143	0					
ANR	2005356	ElseStatement	else		2005143	0					
ANR	2005357	CompoundStatement		22:8:751:751	2005143	0					
ANR	2005358	ExpressionStatement	"soap_error0 ( E_ERROR , ""Unknown SOAP version"" )"	4235:2:142130:142174	2005143	0	True				
ANR	2005359	CallExpression	"soap_error0 ( E_ERROR , ""Unknown SOAP version"" )"		2005143	0					
ANR	2005360	Callee	soap_error0		2005143	0					
ANR	2005361	Identifier	soap_error0		2005143	0					
ANR	2005362	ArgumentList	E_ERROR		2005143	1					
ANR	2005363	Argument	E_ERROR		2005143	0					
ANR	2005364	Identifier	E_ERROR		2005143	0					
ANR	2005365	Argument	"""Unknown SOAP version"""		2005143	1					
ANR	2005366	PrimaryExpression	"""Unknown SOAP version"""		2005143	0					
ANR	2005367	ExpressionStatement	"xmlDocSetRootElement ( doc , envelope )"	4237:1:142180:142215	2005143	11	True				
ANR	2005368	CallExpression	"xmlDocSetRootElement ( doc , envelope )"		2005143	0					
ANR	2005369	Callee	xmlDocSetRootElement		2005143	0					
ANR	2005370	Identifier	xmlDocSetRootElement		2005143	0					
ANR	2005371	ArgumentList	doc		2005143	1					
ANR	2005372	Argument	doc		2005143	0					
ANR	2005373	Identifier	doc		2005143	0					
ANR	2005374	Argument	envelope		2005143	1					
ANR	2005375	Identifier	envelope		2005143	0					
ANR	2005376	IfStatement	if ( soap_headers )		2005143	12					
ANR	2005377	Condition	soap_headers	4239:5:142223:142234	2005143	0	True				
ANR	2005378	Identifier	soap_headers		2005143	0					
ANR	2005379	CompoundStatement		27:19:862:862	2005143	1					
ANR	2005380	ExpressionStatement	"head = xmlNewChild ( envelope , ns , BAD_CAST ( ""Header"" ) , NULL )"	4240:2:142241:142299	2005143	0	True				
ANR	2005381	AssignmentExpression	"head = xmlNewChild ( envelope , ns , BAD_CAST ( ""Header"" ) , NULL )"		2005143	0		=			
ANR	2005382	Identifier	head		2005143	0					
ANR	2005383	CallExpression	"xmlNewChild ( envelope , ns , BAD_CAST ( ""Header"" ) , NULL )"		2005143	1					
ANR	2005384	Callee	xmlNewChild		2005143	0					
ANR	2005385	Identifier	xmlNewChild		2005143	0					
ANR	2005386	ArgumentList	envelope		2005143	1					
ANR	2005387	Argument	envelope		2005143	0					
ANR	2005388	Identifier	envelope		2005143	0					
ANR	2005389	Argument	ns		2005143	1					
ANR	2005390	Identifier	ns		2005143	0					
ANR	2005391	Argument	"BAD_CAST ( ""Header"" )"		2005143	2					
ANR	2005392	CallExpression	"BAD_CAST ( ""Header"" )"		2005143	0					
ANR	2005393	Callee	BAD_CAST		2005143	0					
ANR	2005394	Identifier	BAD_CAST		2005143	0					
ANR	2005395	ArgumentList	"""Header"""		2005143	1					
ANR	2005396	Argument	"""Header"""		2005143	0					
ANR	2005397	PrimaryExpression	"""Header"""		2005143	0					
ANR	2005398	Argument	NULL		2005143	3					
ANR	2005399	Identifier	NULL		2005143	0					
ANR	2005400	ExpressionStatement	"body = xmlNewChild ( envelope , ns , BAD_CAST ( ""Body"" ) , NULL )"	4243:1:142306:142362	2005143	13	True				
ANR	2005401	AssignmentExpression	"body = xmlNewChild ( envelope , ns , BAD_CAST ( ""Body"" ) , NULL )"		2005143	0		=			
ANR	2005402	Identifier	body		2005143	0					
ANR	2005403	CallExpression	"xmlNewChild ( envelope , ns , BAD_CAST ( ""Body"" ) , NULL )"		2005143	1					
ANR	2005404	Callee	xmlNewChild		2005143	0					
ANR	2005405	Identifier	xmlNewChild		2005143	0					
ANR	2005406	ArgumentList	envelope		2005143	1					
ANR	2005407	Argument	envelope		2005143	0					
ANR	2005408	Identifier	envelope		2005143	0					
ANR	2005409	Argument	ns		2005143	1					
ANR	2005410	Identifier	ns		2005143	0					
ANR	2005411	Argument	"BAD_CAST ( ""Body"" )"		2005143	2					
ANR	2005412	CallExpression	"BAD_CAST ( ""Body"" )"		2005143	0					
ANR	2005413	Callee	BAD_CAST		2005143	0					
ANR	2005414	Identifier	BAD_CAST		2005143	0					
ANR	2005415	ArgumentList	"""Body"""		2005143	1					
ANR	2005416	Argument	"""Body"""		2005143	0					
ANR	2005417	PrimaryExpression	"""Body"""		2005143	0					
ANR	2005418	Argument	NULL		2005143	3					
ANR	2005419	Identifier	NULL		2005143	0					
ANR	2005420	IfStatement	if ( function && function -> binding -> bindingType == BINDING_SOAP )		2005143	14					
ANR	2005421	Condition	function && function -> binding -> bindingType == BINDING_SOAP	4245:5:142370:142427	2005143	0	True				
ANR	2005422	AndExpression	function && function -> binding -> bindingType == BINDING_SOAP		2005143	0		&&			
ANR	2005423	Identifier	function		2005143	0					
ANR	2005424	EqualityExpression	function -> binding -> bindingType == BINDING_SOAP		2005143	1		==			
ANR	2005425	PtrMemberAccess	function -> binding -> bindingType		2005143	0					
ANR	2005426	PtrMemberAccess	function -> binding		2005143	0					
ANR	2005427	Identifier	function		2005143	0					
ANR	2005428	Identifier	binding		2005143	1					
ANR	2005429	Identifier	bindingType		2005143	1					
ANR	2005430	Identifier	BINDING_SOAP		2005143	1					
ANR	2005431	CompoundStatement		34:2:1059:1145	2005143	1					
ANR	2005432	IdentifierDeclStatement	sdlSoapBindingFunctionPtr fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes ;	4246:2:142434:142520	2005143	0	True				
ANR	2005433	IdentifierDecl	fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		2005143	0					
ANR	2005434	IdentifierDeclType	sdlSoapBindingFunctionPtr		2005143	0					
ANR	2005435	Identifier	fnb		2005143	1					
ANR	2005436	AssignmentExpression	fnb = ( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		2005143	2		=			
ANR	2005437	Identifier	fnb		2005143	0					
ANR	2005438	CastExpression	( sdlSoapBindingFunctionPtr ) function -> bindingAttributes		2005143	1					
ANR	2005439	CastTarget	sdlSoapBindingFunctionPtr		2005143	0					
ANR	2005440	PtrMemberAccess	function -> bindingAttributes		2005143	1					
ANR	2005441	Identifier	function		2005143	0					
ANR	2005442	Identifier	bindingAttributes		2005143	1					
ANR	2005443	ExpressionStatement	hdrs = fnb -> input . headers	4248:2:142525:142550	2005143	1	True				
ANR	2005444	AssignmentExpression	hdrs = fnb -> input . headers		2005143	0		=			
ANR	2005445	Identifier	hdrs		2005143	0					
ANR	2005446	MemberAccess	fnb -> input . headers		2005143	1					
ANR	2005447	PtrMemberAccess	fnb -> input		2005143	0					
ANR	2005448	Identifier	fnb		2005143	0					
ANR	2005449	Identifier	input		2005143	1					
ANR	2005450	Identifier	headers		2005143	1					
ANR	2005451	ExpressionStatement	style = fnb -> style	4249:2:142554:142572	2005143	2	True				
ANR	2005452	AssignmentExpression	style = fnb -> style		2005143	0		=			
ANR	2005453	Identifier	style		2005143	0					
ANR	2005454	PtrMemberAccess	fnb -> style		2005143	1					
ANR	2005455	Identifier	fnb		2005143	0					
ANR	2005456	Identifier	style		2005143	1					
ANR	2005457	ExpressionStatement	use = fnb -> input . use	4252:2:142664:142684	2005143	3	True				
ANR	2005458	AssignmentExpression	use = fnb -> input . use		2005143	0		=			
ANR	2005459	Identifier	use		2005143	0					
ANR	2005460	MemberAccess	fnb -> input . use		2005143	1					
ANR	2005461	PtrMemberAccess	fnb -> input		2005143	0					
ANR	2005462	Identifier	fnb		2005143	0					
ANR	2005463	Identifier	input		2005143	1					
ANR	2005464	Identifier	use		2005143	1					
ANR	2005465	IfStatement	if ( style == SOAP_RPC )		2005143	4					
ANR	2005466	Condition	style == SOAP_RPC	4253:6:142692:142708	2005143	0	True				
ANR	2005467	EqualityExpression	style == SOAP_RPC		2005143	0		==			
ANR	2005468	Identifier	style		2005143	0					
ANR	2005469	Identifier	SOAP_RPC		2005143	1					
ANR	2005470	CompoundStatement		41:25:1336:1336	2005143	1					
ANR	2005471	ExpressionStatement	"ns = encode_add_ns ( body , fnb -> input . ns )"	4254:3:142716:142755	2005143	0	True				
ANR	2005472	AssignmentExpression	"ns = encode_add_ns ( body , fnb -> input . ns )"		2005143	0		=			
ANR	2005473	Identifier	ns		2005143	0					
ANR	2005474	CallExpression	"encode_add_ns ( body , fnb -> input . ns )"		2005143	1					
ANR	2005475	Callee	encode_add_ns		2005143	0					
ANR	2005476	Identifier	encode_add_ns		2005143	0					
ANR	2005477	ArgumentList	body		2005143	1					
ANR	2005478	Argument	body		2005143	0					
ANR	2005479	Identifier	body		2005143	0					
ANR	2005480	Argument	fnb -> input . ns		2005143	1					
ANR	2005481	MemberAccess	fnb -> input . ns		2005143	0					
ANR	2005482	PtrMemberAccess	fnb -> input		2005143	0					
ANR	2005483	Identifier	fnb		2005143	0					
ANR	2005484	Identifier	input		2005143	1					
ANR	2005485	Identifier	ns		2005143	1					
ANR	2005486	IfStatement	if ( function -> requestName )		2005143	1					
ANR	2005487	Condition	function -> requestName	4255:7:142764:142784	2005143	0	True				
ANR	2005488	PtrMemberAccess	function -> requestName		2005143	0					
ANR	2005489	Identifier	function		2005143	0					
ANR	2005490	Identifier	requestName		2005143	1					
ANR	2005491	CompoundStatement		43:30:1412:1412	2005143	1					
ANR	2005492	ExpressionStatement	"method = xmlNewChild ( body , ns , BAD_CAST ( function -> requestName ) , NULL )"	4256:4:142793:142862	2005143	0	True				
ANR	2005493	AssignmentExpression	"method = xmlNewChild ( body , ns , BAD_CAST ( function -> requestName ) , NULL )"		2005143	0		=			
ANR	2005494	Identifier	method		2005143	0					
ANR	2005495	CallExpression	"xmlNewChild ( body , ns , BAD_CAST ( function -> requestName ) , NULL )"		2005143	1					
ANR	2005496	Callee	xmlNewChild		2005143	0					
ANR	2005497	Identifier	xmlNewChild		2005143	0					
ANR	2005498	ArgumentList	body		2005143	1					
ANR	2005499	Argument	body		2005143	0					
ANR	2005500	Identifier	body		2005143	0					
ANR	2005501	Argument	ns		2005143	1					
ANR	2005502	Identifier	ns		2005143	0					
ANR	2005503	Argument	BAD_CAST ( function -> requestName )		2005143	2					
ANR	2005504	CallExpression	BAD_CAST ( function -> requestName )		2005143	0					
ANR	2005505	Callee	BAD_CAST		2005143	0					
ANR	2005506	Identifier	BAD_CAST		2005143	0					
ANR	2005507	ArgumentList	function -> requestName		2005143	1					
ANR	2005508	Argument	function -> requestName		2005143	0					
ANR	2005509	PtrMemberAccess	function -> requestName		2005143	0					
ANR	2005510	Identifier	function		2005143	0					
ANR	2005511	Identifier	requestName		2005143	1					
ANR	2005512	Argument	NULL		2005143	3					
ANR	2005513	Identifier	NULL		2005143	0					
ANR	2005514	ElseStatement	else		2005143	0					
ANR	2005515	CompoundStatement		45:10:1499:1499	2005143	0					
ANR	2005516	ExpressionStatement	"method = xmlNewChild ( body , ns , BAD_CAST ( function -> functionName ) , NULL )"	4258:4:142880:142950	2005143	0	True				
ANR	2005517	AssignmentExpression	"method = xmlNewChild ( body , ns , BAD_CAST ( function -> functionName ) , NULL )"		2005143	0		=			
ANR	2005518	Identifier	method		2005143	0					
ANR	2005519	CallExpression	"xmlNewChild ( body , ns , BAD_CAST ( function -> functionName ) , NULL )"		2005143	1					
ANR	2005520	Callee	xmlNewChild		2005143	0					
ANR	2005521	Identifier	xmlNewChild		2005143	0					
ANR	2005522	ArgumentList	body		2005143	1					
ANR	2005523	Argument	body		2005143	0					
ANR	2005524	Identifier	body		2005143	0					
ANR	2005525	Argument	ns		2005143	1					
ANR	2005526	Identifier	ns		2005143	0					
ANR	2005527	Argument	BAD_CAST ( function -> functionName )		2005143	2					
ANR	2005528	CallExpression	BAD_CAST ( function -> functionName )		2005143	0					
ANR	2005529	Callee	BAD_CAST		2005143	0					
ANR	2005530	Identifier	BAD_CAST		2005143	0					
ANR	2005531	ArgumentList	function -> functionName		2005143	1					
ANR	2005532	Argument	function -> functionName		2005143	0					
ANR	2005533	PtrMemberAccess	function -> functionName		2005143	0					
ANR	2005534	Identifier	function		2005143	0					
ANR	2005535	Identifier	functionName		2005143	1					
ANR	2005536	Argument	NULL		2005143	3					
ANR	2005537	Identifier	NULL		2005143	0					
ANR	2005538	ElseStatement	else		2005143	0					
ANR	2005539	CompoundStatement		49:8:1594:1594	2005143	0					
ANR	2005540	IfStatement	"if ( ( zstyle = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""style"" , sizeof ( ""style"" ) - 1 ) ) != NULL && Z_TYPE_P ( zstyle ) == IS_LONG )"		2005143	0					
ANR	2005541	Condition	"( zstyle = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""style"" , sizeof ( ""style"" ) - 1 ) ) != NULL && Z_TYPE_P ( zstyle ) == IS_LONG"	4262:6:142977:143101	2005143	0	True				
ANR	2005542	AndExpression	"( zstyle = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""style"" , sizeof ( ""style"" ) - 1 ) ) != NULL && Z_TYPE_P ( zstyle ) == IS_LONG"		2005143	0		&&			
ANR	2005543	EqualityExpression	"( zstyle = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""style"" , sizeof ( ""style"" ) - 1 ) ) != NULL"		2005143	0		!=			
ANR	2005544	AssignmentExpression	"zstyle = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""style"" , sizeof ( ""style"" ) - 1 )"		2005143	0		=			
ANR	2005545	Identifier	zstyle		2005143	0					
ANR	2005546	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""style"" , sizeof ( ""style"" ) - 1 )"		2005143	1					
ANR	2005547	Callee	zend_hash_str_find		2005143	0					
ANR	2005548	Identifier	zend_hash_str_find		2005143	0					
ANR	2005549	ArgumentList	Z_OBJPROP_P ( this_ptr )		2005143	1					
ANR	2005550	Argument	Z_OBJPROP_P ( this_ptr )		2005143	0					
ANR	2005551	CallExpression	Z_OBJPROP_P ( this_ptr )		2005143	0					
ANR	2005552	Callee	Z_OBJPROP_P		2005143	0					
ANR	2005553	Identifier	Z_OBJPROP_P		2005143	0					
ANR	2005554	ArgumentList	this_ptr		2005143	1					
ANR	2005555	Argument	this_ptr		2005143	0					
ANR	2005556	Identifier	this_ptr		2005143	0					
ANR	2005557	Argument	"""style"""		2005143	1					
ANR	2005558	PrimaryExpression	"""style"""		2005143	0					
ANR	2005559	Argument	"sizeof ( ""style"" ) - 1"		2005143	2					
ANR	2005560	AdditiveExpression	"sizeof ( ""style"" ) - 1"		2005143	0		-			
ANR	2005561	SizeofExpression	"sizeof ( ""style"" )"		2005143	0					
ANR	2005562	Sizeof	sizeof		2005143	0					
ANR	2005563	PrimaryExpression	"""style"""		2005143	1					
ANR	2005564	PrimaryExpression	1		2005143	1					
ANR	2005565	Identifier	NULL		2005143	1					
ANR	2005566	EqualityExpression	Z_TYPE_P ( zstyle ) == IS_LONG		2005143	1		==			
ANR	2005567	CallExpression	Z_TYPE_P ( zstyle )		2005143	0					
ANR	2005568	Callee	Z_TYPE_P		2005143	0					
ANR	2005569	Identifier	Z_TYPE_P		2005143	0					
ANR	2005570	ArgumentList	zstyle		2005143	1					
ANR	2005571	Argument	zstyle		2005143	0					
ANR	2005572	Identifier	zstyle		2005143	0					
ANR	2005573	Identifier	IS_LONG		2005143	1					
ANR	2005574	CompoundStatement		51:35:1729:1729	2005143	1					
ANR	2005575	ExpressionStatement	style = Z_LVAL_P ( zstyle )	4264:3:143109:143133	2005143	0	True				
ANR	2005576	AssignmentExpression	style = Z_LVAL_P ( zstyle )		2005143	0		=			
ANR	2005577	Identifier	style		2005143	0					
ANR	2005578	CallExpression	Z_LVAL_P ( zstyle )		2005143	1					
ANR	2005579	Callee	Z_LVAL_P		2005143	0					
ANR	2005580	Identifier	Z_LVAL_P		2005143	0					
ANR	2005581	ArgumentList	zstyle		2005143	1					
ANR	2005582	Argument	zstyle		2005143	0					
ANR	2005583	Identifier	zstyle		2005143	0					
ANR	2005584	ElseStatement	else		2005143	0					
ANR	2005585	CompoundStatement		53:9:1769:1769	2005143	0					
ANR	2005586	ExpressionStatement	style = SOAP_RPC	4266:3:143149:143165	2005143	0	True				
ANR	2005587	AssignmentExpression	style = SOAP_RPC		2005143	0		=			
ANR	2005588	Identifier	style		2005143	0					
ANR	2005589	Identifier	SOAP_RPC		2005143	1					
ANR	2005590	IfStatement	if ( style == SOAP_RPC )		2005143	1					
ANR	2005591	Condition	style == SOAP_RPC	4270:6:143265:143281	2005143	0	True				
ANR	2005592	EqualityExpression	style == SOAP_RPC		2005143	0		==			
ANR	2005593	Identifier	style		2005143	0					
ANR	2005594	Identifier	SOAP_RPC		2005143	1					
ANR	2005595	CompoundStatement		58:25:1909:1909	2005143	1					
ANR	2005596	ExpressionStatement	"ns = encode_add_ns ( body , uri )"	4271:3:143289:143318	2005143	0	True				
ANR	2005597	AssignmentExpression	"ns = encode_add_ns ( body , uri )"		2005143	0		=			
ANR	2005598	Identifier	ns		2005143	0					
ANR	2005599	CallExpression	"encode_add_ns ( body , uri )"		2005143	1					
ANR	2005600	Callee	encode_add_ns		2005143	0					
ANR	2005601	Identifier	encode_add_ns		2005143	0					
ANR	2005602	ArgumentList	body		2005143	1					
ANR	2005603	Argument	body		2005143	0					
ANR	2005604	Identifier	body		2005143	0					
ANR	2005605	Argument	uri		2005143	1					
ANR	2005606	Identifier	uri		2005143	0					
ANR	2005607	IfStatement	if ( function_name )		2005143	1					
ANR	2005608	Condition	function_name	4272:7:143327:143339	2005143	0	True				
ANR	2005609	Identifier	function_name		2005143	0					
ANR	2005610	CompoundStatement		60:22:1967:1967	2005143	1					
ANR	2005611	ExpressionStatement	"method = xmlNewChild ( body , ns , BAD_CAST ( function_name ) , NULL )"	4273:4:143348:143409	2005143	0	True				
ANR	2005612	AssignmentExpression	"method = xmlNewChild ( body , ns , BAD_CAST ( function_name ) , NULL )"		2005143	0		=			
ANR	2005613	Identifier	method		2005143	0					
ANR	2005614	CallExpression	"xmlNewChild ( body , ns , BAD_CAST ( function_name ) , NULL )"		2005143	1					
ANR	2005615	Callee	xmlNewChild		2005143	0					
ANR	2005616	Identifier	xmlNewChild		2005143	0					
ANR	2005617	ArgumentList	body		2005143	1					
ANR	2005618	Argument	body		2005143	0					
ANR	2005619	Identifier	body		2005143	0					
ANR	2005620	Argument	ns		2005143	1					
ANR	2005621	Identifier	ns		2005143	0					
ANR	2005622	Argument	BAD_CAST ( function_name )		2005143	2					
ANR	2005623	CallExpression	BAD_CAST ( function_name )		2005143	0					
ANR	2005624	Callee	BAD_CAST		2005143	0					
ANR	2005625	Identifier	BAD_CAST		2005143	0					
ANR	2005626	ArgumentList	function_name		2005143	1					
ANR	2005627	Argument	function_name		2005143	0					
ANR	2005628	Identifier	function_name		2005143	0					
ANR	2005629	Argument	NULL		2005143	3					
ANR	2005630	Identifier	NULL		2005143	0					
ANR	2005631	ElseStatement	else		2005143	0					
ANR	2005632	IfStatement	if ( function && function -> requestName )		2005143	0					
ANR	2005633	Condition	function && function -> requestName	4274:14:143425:143457	2005143	0	True				
ANR	2005634	AndExpression	function && function -> requestName		2005143	0		&&			
ANR	2005635	Identifier	function		2005143	0					
ANR	2005636	PtrMemberAccess	function -> requestName		2005143	1					
ANR	2005637	Identifier	function		2005143	0					
ANR	2005638	Identifier	requestName		2005143	1					
ANR	2005639	CompoundStatement		62:49:2085:2085	2005143	1					
ANR	2005640	ExpressionStatement	"method = xmlNewChild ( body , ns , BAD_CAST ( function -> requestName ) , NULL )"	4275:4:143466:143535	2005143	0	True				
ANR	2005641	AssignmentExpression	"method = xmlNewChild ( body , ns , BAD_CAST ( function -> requestName ) , NULL )"		2005143	0		=			
ANR	2005642	Identifier	method		2005143	0					
ANR	2005643	CallExpression	"xmlNewChild ( body , ns , BAD_CAST ( function -> requestName ) , NULL )"		2005143	1					
ANR	2005644	Callee	xmlNewChild		2005143	0					
ANR	2005645	Identifier	xmlNewChild		2005143	0					
ANR	2005646	ArgumentList	body		2005143	1					
ANR	2005647	Argument	body		2005143	0					
ANR	2005648	Identifier	body		2005143	0					
ANR	2005649	Argument	ns		2005143	1					
ANR	2005650	Identifier	ns		2005143	0					
ANR	2005651	Argument	BAD_CAST ( function -> requestName )		2005143	2					
ANR	2005652	CallExpression	BAD_CAST ( function -> requestName )		2005143	0					
ANR	2005653	Callee	BAD_CAST		2005143	0					
ANR	2005654	Identifier	BAD_CAST		2005143	0					
ANR	2005655	ArgumentList	function -> requestName		2005143	1					
ANR	2005656	Argument	function -> requestName		2005143	0					
ANR	2005657	PtrMemberAccess	function -> requestName		2005143	0					
ANR	2005658	Identifier	function		2005143	0					
ANR	2005659	Identifier	requestName		2005143	1					
ANR	2005660	Argument	NULL		2005143	3					
ANR	2005661	Identifier	NULL		2005143	0					
ANR	2005662	ElseStatement	else		2005143	0					
ANR	2005663	IfStatement	if ( function && function -> functionName )		2005143	0					
ANR	2005664	Condition	function && function -> functionName	4276:14:143551:143584	2005143	0	True				
ANR	2005665	AndExpression	function && function -> functionName		2005143	0		&&			
ANR	2005666	Identifier	function		2005143	0					
ANR	2005667	PtrMemberAccess	function -> functionName		2005143	1					
ANR	2005668	Identifier	function		2005143	0					
ANR	2005669	Identifier	functionName		2005143	1					
ANR	2005670	CompoundStatement		64:50:2212:2212	2005143	1					
ANR	2005671	ExpressionStatement	"method = xmlNewChild ( body , ns , BAD_CAST ( function -> functionName ) , NULL )"	4277:4:143593:143663	2005143	0	True				
ANR	2005672	AssignmentExpression	"method = xmlNewChild ( body , ns , BAD_CAST ( function -> functionName ) , NULL )"		2005143	0		=			
ANR	2005673	Identifier	method		2005143	0					
ANR	2005674	CallExpression	"xmlNewChild ( body , ns , BAD_CAST ( function -> functionName ) , NULL )"		2005143	1					
ANR	2005675	Callee	xmlNewChild		2005143	0					
ANR	2005676	Identifier	xmlNewChild		2005143	0					
ANR	2005677	ArgumentList	body		2005143	1					
ANR	2005678	Argument	body		2005143	0					
ANR	2005679	Identifier	body		2005143	0					
ANR	2005680	Argument	ns		2005143	1					
ANR	2005681	Identifier	ns		2005143	0					
ANR	2005682	Argument	BAD_CAST ( function -> functionName )		2005143	2					
ANR	2005683	CallExpression	BAD_CAST ( function -> functionName )		2005143	0					
ANR	2005684	Callee	BAD_CAST		2005143	0					
ANR	2005685	Identifier	BAD_CAST		2005143	0					
ANR	2005686	ArgumentList	function -> functionName		2005143	1					
ANR	2005687	Argument	function -> functionName		2005143	0					
ANR	2005688	PtrMemberAccess	function -> functionName		2005143	0					
ANR	2005689	Identifier	function		2005143	0					
ANR	2005690	Identifier	functionName		2005143	1					
ANR	2005691	Argument	NULL		2005143	3					
ANR	2005692	Identifier	NULL		2005143	0					
ANR	2005693	ElseStatement	else		2005143	0					
ANR	2005694	CompoundStatement		66:10:2300:2300	2005143	0					
ANR	2005695	ExpressionStatement	method = body	4279:4:143681:143694	2005143	0	True				
ANR	2005696	AssignmentExpression	method = body		2005143	0		=			
ANR	2005697	Identifier	method		2005143	0					
ANR	2005698	Identifier	body		2005143	1					
ANR	2005699	ElseStatement	else		2005143	0					
ANR	2005700	CompoundStatement		69:9:2335:2335	2005143	0					
ANR	2005701	ExpressionStatement	method = body	4282:3:143715:143728	2005143	0	True				
ANR	2005702	AssignmentExpression	method = body		2005143	0		=			
ANR	2005703	Identifier	method		2005143	0					
ANR	2005704	Identifier	body		2005143	1					
ANR	2005705	IfStatement	"if ( ( zuse = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""use"" , sizeof ( ""use"" ) - 1 ) ) != NULL && Z_TYPE_P ( zuse ) == IS_LONG && Z_LVAL_P ( zuse ) == SOAP_LITERAL )"		2005143	2					
ANR	2005706	Condition	"( zuse = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""use"" , sizeof ( ""use"" ) - 1 ) ) != NULL && Z_TYPE_P ( zuse ) == IS_LONG && Z_LVAL_P ( zuse ) == SOAP_LITERAL"	4285:6:143741:143892	2005143	0	True				
ANR	2005707	AndExpression	"( zuse = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""use"" , sizeof ( ""use"" ) - 1 ) ) != NULL && Z_TYPE_P ( zuse ) == IS_LONG && Z_LVAL_P ( zuse ) == SOAP_LITERAL"		2005143	0		&&			
ANR	2005708	EqualityExpression	"( zuse = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""use"" , sizeof ( ""use"" ) - 1 ) ) != NULL"		2005143	0		!=			
ANR	2005709	AssignmentExpression	"zuse = zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""use"" , sizeof ( ""use"" ) - 1 )"		2005143	0		=			
ANR	2005710	Identifier	zuse		2005143	0					
ANR	2005711	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( this_ptr ) , ""use"" , sizeof ( ""use"" ) - 1 )"		2005143	1					
ANR	2005712	Callee	zend_hash_str_find		2005143	0					
ANR	2005713	Identifier	zend_hash_str_find		2005143	0					
ANR	2005714	ArgumentList	Z_OBJPROP_P ( this_ptr )		2005143	1					
ANR	2005715	Argument	Z_OBJPROP_P ( this_ptr )		2005143	0					
ANR	2005716	CallExpression	Z_OBJPROP_P ( this_ptr )		2005143	0					
ANR	2005717	Callee	Z_OBJPROP_P		2005143	0					
ANR	2005718	Identifier	Z_OBJPROP_P		2005143	0					
ANR	2005719	ArgumentList	this_ptr		2005143	1					
ANR	2005720	Argument	this_ptr		2005143	0					
ANR	2005721	Identifier	this_ptr		2005143	0					
ANR	2005722	Argument	"""use"""		2005143	1					
ANR	2005723	PrimaryExpression	"""use"""		2005143	0					
ANR	2005724	Argument	"sizeof ( ""use"" ) - 1"		2005143	2					
ANR	2005725	AdditiveExpression	"sizeof ( ""use"" ) - 1"		2005143	0		-			
ANR	2005726	SizeofExpression	"sizeof ( ""use"" )"		2005143	0					
ANR	2005727	Sizeof	sizeof		2005143	0					
ANR	2005728	PrimaryExpression	"""use"""		2005143	1					
ANR	2005729	PrimaryExpression	1		2005143	1					
ANR	2005730	Identifier	NULL		2005143	1					
ANR	2005731	AndExpression	Z_TYPE_P ( zuse ) == IS_LONG && Z_LVAL_P ( zuse ) == SOAP_LITERAL		2005143	1		&&			
ANR	2005732	EqualityExpression	Z_TYPE_P ( zuse ) == IS_LONG		2005143	0		==			
ANR	2005733	CallExpression	Z_TYPE_P ( zuse )		2005143	0					
ANR	2005734	Callee	Z_TYPE_P		2005143	0					
ANR	2005735	Identifier	Z_TYPE_P		2005143	0					
ANR	2005736	ArgumentList	zuse		2005143	1					
ANR	2005737	Argument	zuse		2005143	0					
ANR	2005738	Identifier	zuse		2005143	0					
ANR	2005739	Identifier	IS_LONG		2005143	1					
ANR	2005740	EqualityExpression	Z_LVAL_P ( zuse ) == SOAP_LITERAL		2005143	1		==			
ANR	2005741	CallExpression	Z_LVAL_P ( zuse )		2005143	0					
ANR	2005742	Callee	Z_LVAL_P		2005143	0					
ANR	2005743	Identifier	Z_LVAL_P		2005143	0					
ANR	2005744	ArgumentList	zuse		2005143	1					
ANR	2005745	Argument	zuse		2005143	0					
ANR	2005746	Identifier	zuse		2005143	0					
ANR	2005747	Identifier	SOAP_LITERAL		2005143	1					
ANR	2005748	CompoundStatement		74:68:2520:2520	2005143	1					
ANR	2005749	ExpressionStatement	use = SOAP_LITERAL	4287:3:143900:143918	2005143	0	True				
ANR	2005750	AssignmentExpression	use = SOAP_LITERAL		2005143	0		=			
ANR	2005751	Identifier	use		2005143	0					
ANR	2005752	Identifier	SOAP_LITERAL		2005143	1					
ANR	2005753	ElseStatement	else		2005143	0					
ANR	2005754	CompoundStatement		76:9:2554:2554	2005143	0					
ANR	2005755	ExpressionStatement	use = SOAP_ENCODED	4289:3:143934:143952	2005143	0	True				
ANR	2005756	AssignmentExpression	use = SOAP_ENCODED		2005143	0		=			
ANR	2005757	Identifier	use		2005143	0					
ANR	2005758	Identifier	SOAP_ENCODED		2005143	1					
ANR	2005759	ForStatement	for ( i = 0 ; i < arg_count ; i ++ )		2005143	15					
ANR	2005760	ForInit	i = 0 ;	4293:6:143968:143973	2005143	0	True				
ANR	2005761	AssignmentExpression	i = 0		2005143	0		=			
ANR	2005762	Identifier	i		2005143	0					
ANR	2005763	PrimaryExpression	0		2005143	1					
ANR	2005764	Condition	i < arg_count	4293:12:143974:143986	2005143	1	True				
ANR	2005765	RelationalExpression	i < arg_count		2005143	0		<			
ANR	2005766	Identifier	i		2005143	0					
ANR	2005767	Identifier	arg_count		2005143	1					
ANR	2005768	PostIncDecOperationExpression	i ++	4293:26:143988:143990	2005143	2	True				
ANR	2005769	Identifier	i		2005143	0					
ANR	2005770	IncDec	++		2005143	1					
ANR	2005771	CompoundStatement		83:2:2642:2701	2005143	3					
ANR	2005772	IdentifierDeclStatement	xmlNodePtr param ;	4294:2:143997:144013	2005143	0	True				
ANR	2005773	IdentifierDecl	param		2005143	0					
ANR	2005774	IdentifierDeclType	xmlNodePtr		2005143	0					
ANR	2005775	Identifier	param		2005143	1					
ANR	2005776	IdentifierDeclStatement	"sdlParamPtr parameter = get_param ( function , NULL , i , FALSE ) ;"	4295:2:144017:144076	2005143	1	True				
ANR	2005777	IdentifierDecl	"parameter = get_param ( function , NULL , i , FALSE )"		2005143	0					
ANR	2005778	IdentifierDeclType	sdlParamPtr		2005143	0					
ANR	2005779	Identifier	parameter		2005143	1					
ANR	2005780	AssignmentExpression	"parameter = get_param ( function , NULL , i , FALSE )"		2005143	2		=			
ANR	2005781	Identifier	parameter		2005143	0					
ANR	2005782	CallExpression	"get_param ( function , NULL , i , FALSE )"		2005143	1					
ANR	2005783	Callee	get_param		2005143	0					
ANR	2005784	Identifier	get_param		2005143	0					
ANR	2005785	ArgumentList	function		2005143	1					
ANR	2005786	Argument	function		2005143	0					
ANR	2005787	Identifier	function		2005143	0					
ANR	2005788	Argument	NULL		2005143	1					
ANR	2005789	Identifier	NULL		2005143	0					
ANR	2005790	Argument	i		2005143	2					
ANR	2005791	Identifier	i		2005143	0					
ANR	2005792	Argument	FALSE		2005143	3					
ANR	2005793	Identifier	FALSE		2005143	0					
ANR	2005794	IfStatement	if ( style == SOAP_RPC )		2005143	2					
ANR	2005795	Condition	style == SOAP_RPC	4297:6:144085:144101	2005143	0	True				
ANR	2005796	EqualityExpression	style == SOAP_RPC		2005143	0		==			
ANR	2005797	Identifier	style		2005143	0					
ANR	2005798	Identifier	SOAP_RPC		2005143	1					
ANR	2005799	CompoundStatement		85:25:2729:2729	2005143	1					
ANR	2005800	ExpressionStatement	"param = serialize_parameter ( parameter , & arguments [ i ] , i , NULL , use , method )"	4298:3:144109:144184	2005143	0	True				
ANR	2005801	AssignmentExpression	"param = serialize_parameter ( parameter , & arguments [ i ] , i , NULL , use , method )"		2005143	0		=			
ANR	2005802	Identifier	param		2005143	0					
ANR	2005803	CallExpression	"serialize_parameter ( parameter , & arguments [ i ] , i , NULL , use , method )"		2005143	1					
ANR	2005804	Callee	serialize_parameter		2005143	0					
ANR	2005805	Identifier	serialize_parameter		2005143	0					
ANR	2005806	ArgumentList	parameter		2005143	1					
ANR	2005807	Argument	parameter		2005143	0					
ANR	2005808	Identifier	parameter		2005143	0					
ANR	2005809	Argument	& arguments [ i ]		2005143	1					
ANR	2005810	UnaryOperationExpression	& arguments [ i ]		2005143	0					
ANR	2005811	UnaryOperator	&		2005143	0					
ANR	2005812	ArrayIndexing	arguments [ i ]		2005143	1					
ANR	2005813	Identifier	arguments		2005143	0					
ANR	2005814	Identifier	i		2005143	1					
ANR	2005815	Argument	i		2005143	2					
ANR	2005816	Identifier	i		2005143	0					
ANR	2005817	Argument	NULL		2005143	3					
ANR	2005818	Identifier	NULL		2005143	0					
ANR	2005819	Argument	use		2005143	4					
ANR	2005820	Identifier	use		2005143	0					
ANR	2005821	Argument	method		2005143	5					
ANR	2005822	Identifier	method		2005143	0					
ANR	2005823	ElseStatement	else		2005143	0					
ANR	2005824	IfStatement	if ( style == SOAP_DOCUMENT )		2005143	0					
ANR	2005825	Condition	style == SOAP_DOCUMENT	4299:13:144199:144220	2005143	0	True				
ANR	2005826	EqualityExpression	style == SOAP_DOCUMENT		2005143	0		==			
ANR	2005827	Identifier	style		2005143	0					
ANR	2005828	Identifier	SOAP_DOCUMENT		2005143	1					
ANR	2005829	CompoundStatement		87:37:2848:2848	2005143	1					
ANR	2005830	ExpressionStatement	"param = serialize_parameter ( parameter , & arguments [ i ] , i , NULL , use , body )"	4300:3:144228:144301	2005143	0	True				
ANR	2005831	AssignmentExpression	"param = serialize_parameter ( parameter , & arguments [ i ] , i , NULL , use , body )"		2005143	0		=			
ANR	2005832	Identifier	param		2005143	0					
ANR	2005833	CallExpression	"serialize_parameter ( parameter , & arguments [ i ] , i , NULL , use , body )"		2005143	1					
ANR	2005834	Callee	serialize_parameter		2005143	0					
ANR	2005835	Identifier	serialize_parameter		2005143	0					
ANR	2005836	ArgumentList	parameter		2005143	1					
ANR	2005837	Argument	parameter		2005143	0					
ANR	2005838	Identifier	parameter		2005143	0					
ANR	2005839	Argument	& arguments [ i ]		2005143	1					
ANR	2005840	UnaryOperationExpression	& arguments [ i ]		2005143	0					
ANR	2005841	UnaryOperator	&		2005143	0					
ANR	2005842	ArrayIndexing	arguments [ i ]		2005143	1					
ANR	2005843	Identifier	arguments		2005143	0					
ANR	2005844	Identifier	i		2005143	1					
ANR	2005845	Argument	i		2005143	2					
ANR	2005846	Identifier	i		2005143	0					
ANR	2005847	Argument	NULL		2005143	3					
ANR	2005848	Identifier	NULL		2005143	0					
ANR	2005849	Argument	use		2005143	4					
ANR	2005850	Identifier	use		2005143	0					
ANR	2005851	Argument	body		2005143	5					
ANR	2005852	Identifier	body		2005143	0					
ANR	2005853	IfStatement	if ( function && function -> binding -> bindingType == BINDING_SOAP )		2005143	1					
ANR	2005854	Condition	function && function -> binding -> bindingType == BINDING_SOAP	4301:7:144310:144367	2005143	0	True				
ANR	2005855	AndExpression	function && function -> binding -> bindingType == BINDING_SOAP		2005143	0		&&			
ANR	2005856	Identifier	function		2005143	0					
ANR	2005857	EqualityExpression	function -> binding -> bindingType == BINDING_SOAP		2005143	1		==			
ANR	2005858	PtrMemberAccess	function -> binding -> bindingType		2005143	0					
ANR	2005859	PtrMemberAccess	function -> binding		2005143	0					
ANR	2005860	Identifier	function		2005143	0					
ANR	2005861	Identifier	binding		2005143	1					
ANR	2005862	Identifier	bindingType		2005143	1					
ANR	2005863	Identifier	BINDING_SOAP		2005143	1					
ANR	2005864	CompoundStatement		89:67:2995:2995	2005143	1					
ANR	2005865	IfStatement	if ( parameter && parameter -> element )		2005143	0					
ANR	2005866	Condition	parameter && parameter -> element	4302:8:144380:144410	2005143	0	True				
ANR	2005867	AndExpression	parameter && parameter -> element		2005143	0		&&			
ANR	2005868	Identifier	parameter		2005143	0					
ANR	2005869	PtrMemberAccess	parameter -> element		2005143	1					
ANR	2005870	Identifier	parameter		2005143	0					
ANR	2005871	Identifier	element		2005143	1					
ANR	2005872	CompoundStatement		90:41:3038:3038	2005143	1					
ANR	2005873	ExpressionStatement	"ns = encode_add_ns ( param , parameter -> element -> namens )"	4303:5:144420:144473	2005143	0	True				
ANR	2005874	AssignmentExpression	"ns = encode_add_ns ( param , parameter -> element -> namens )"		2005143	0		=			
ANR	2005875	Identifier	ns		2005143	0					
ANR	2005876	CallExpression	"encode_add_ns ( param , parameter -> element -> namens )"		2005143	1					
ANR	2005877	Callee	encode_add_ns		2005143	0					
ANR	2005878	Identifier	encode_add_ns		2005143	0					
ANR	2005879	ArgumentList	param		2005143	1					
ANR	2005880	Argument	param		2005143	0					
ANR	2005881	Identifier	param		2005143	0					
ANR	2005882	Argument	parameter -> element -> namens		2005143	1					
ANR	2005883	PtrMemberAccess	parameter -> element -> namens		2005143	0					
ANR	2005884	PtrMemberAccess	parameter -> element		2005143	0					
ANR	2005885	Identifier	parameter		2005143	0					
ANR	2005886	Identifier	element		2005143	1					
ANR	2005887	Identifier	namens		2005143	1					
ANR	2005888	ExpressionStatement	"xmlNodeSetName ( param , BAD_CAST ( parameter -> element -> name ) )"	4304:5:144480:144537	2005143	1	True				
ANR	2005889	CallExpression	"xmlNodeSetName ( param , BAD_CAST ( parameter -> element -> name ) )"		2005143	0					
ANR	2005890	Callee	xmlNodeSetName		2005143	0					
ANR	2005891	Identifier	xmlNodeSetName		2005143	0					
ANR	2005892	ArgumentList	param		2005143	1					
ANR	2005893	Argument	param		2005143	0					
ANR	2005894	Identifier	param		2005143	0					
ANR	2005895	Argument	BAD_CAST ( parameter -> element -> name )		2005143	1					
ANR	2005896	CallExpression	BAD_CAST ( parameter -> element -> name )		2005143	0					
ANR	2005897	Callee	BAD_CAST		2005143	0					
ANR	2005898	Identifier	BAD_CAST		2005143	0					
ANR	2005899	ArgumentList	parameter -> element -> name		2005143	1					
ANR	2005900	Argument	parameter -> element -> name		2005143	0					
ANR	2005901	PtrMemberAccess	parameter -> element -> name		2005143	0					
ANR	2005902	PtrMemberAccess	parameter -> element		2005143	0					
ANR	2005903	Identifier	parameter		2005143	0					
ANR	2005904	Identifier	element		2005143	1					
ANR	2005905	Identifier	name		2005143	1					
ANR	2005906	ExpressionStatement	"xmlSetNs ( param , ns )"	4305:5:144544:144563	2005143	2	True				
ANR	2005907	CallExpression	"xmlSetNs ( param , ns )"		2005143	0					
ANR	2005908	Callee	xmlSetNs		2005143	0					
ANR	2005909	Identifier	xmlSetNs		2005143	0					
ANR	2005910	ArgumentList	param		2005143	1					
ANR	2005911	Argument	param		2005143	0					
ANR	2005912	Identifier	param		2005143	0					
ANR	2005913	Argument	ns		2005143	1					
ANR	2005914	Identifier	ns		2005143	0					
ANR	2005915	IfStatement	if ( function && function -> requestParameters )		2005143	16					
ANR	2005916	Condition	function && function -> requestParameters	4311:5:144589:144627	2005143	0	True				
ANR	2005917	AndExpression	function && function -> requestParameters		2005143	0		&&			
ANR	2005918	Identifier	function		2005143	0					
ANR	2005919	PtrMemberAccess	function -> requestParameters		2005143	1					
ANR	2005920	Identifier	function		2005143	0					
ANR	2005921	Identifier	requestParameters		2005143	1					
ANR	2005922	CompoundStatement		100:2:3259:3318	2005143	1					
ANR	2005923	IdentifierDeclStatement	int n = zend_hash_num_elements ( function -> requestParameters ) ;	4312:2:144634:144693	2005143	0	True				
ANR	2005924	IdentifierDecl	n = zend_hash_num_elements ( function -> requestParameters )		2005143	0					
ANR	2005925	IdentifierDeclType	int		2005143	0					
ANR	2005926	Identifier	n		2005143	1					
ANR	2005927	AssignmentExpression	n = zend_hash_num_elements ( function -> requestParameters )		2005143	2		=			
ANR	2005928	Identifier	n		2005143	0					
ANR	2005929	CallExpression	zend_hash_num_elements ( function -> requestParameters )		2005143	1					
ANR	2005930	Callee	zend_hash_num_elements		2005143	0					
ANR	2005931	Identifier	zend_hash_num_elements		2005143	0					
ANR	2005932	ArgumentList	function -> requestParameters		2005143	1					
ANR	2005933	Argument	function -> requestParameters		2005143	0					
ANR	2005934	PtrMemberAccess	function -> requestParameters		2005143	0					
ANR	2005935	Identifier	function		2005143	0					
ANR	2005936	Identifier	requestParameters		2005143	1					
ANR	2005937	IfStatement	if ( n > arg_count )		2005143	1					
ANR	2005938	Condition	n > arg_count	4314:6:144702:144714	2005143	0	True				
ANR	2005939	RelationalExpression	n > arg_count		2005143	0		>			
ANR	2005940	Identifier	n		2005143	0					
ANR	2005941	Identifier	arg_count		2005143	1					
ANR	2005942	CompoundStatement		102:21:3342:3342	2005143	1					
ANR	2005943	ForStatement	for ( i = arg_count ; i < n ; i ++ )		2005143	0					
ANR	2005944	ForInit	i = arg_count ;	4315:8:144727:144740	2005143	0	True				
ANR	2005945	AssignmentExpression	i = arg_count		2005143	0		=			
ANR	2005946	Identifier	i		2005143	0					
ANR	2005947	Identifier	arg_count		2005143	1					
ANR	2005948	Condition	i < n	4315:23:144742:144746	2005143	1	True				
ANR	2005949	RelationalExpression	i < n		2005143	0		<			
ANR	2005950	Identifier	i		2005143	0					
ANR	2005951	Identifier	n		2005143	1					
ANR	2005952	PostIncDecOperationExpression	i ++	4315:30:144749:144751	2005143	2	True				
ANR	2005953	Identifier	i		2005143	0					
ANR	2005954	IncDec	++		2005143	1					
ANR	2005955	CompoundStatement		105:4:3407:3466	2005143	3					
ANR	2005956	IdentifierDeclStatement	xmlNodePtr param ;	4316:4:144760:144776	2005143	0	True				
ANR	2005957	IdentifierDecl	param		2005143	0					
ANR	2005958	IdentifierDeclType	xmlNodePtr		2005143	0					
ANR	2005959	Identifier	param		2005143	1					
ANR	2005960	IdentifierDeclStatement	"sdlParamPtr parameter = get_param ( function , NULL , i , FALSE ) ;"	4317:4:144782:144841	2005143	1	True				
ANR	2005961	IdentifierDecl	"parameter = get_param ( function , NULL , i , FALSE )"		2005143	0					
ANR	2005962	IdentifierDeclType	sdlParamPtr		2005143	0					
ANR	2005963	Identifier	parameter		2005143	1					
ANR	2005964	AssignmentExpression	"parameter = get_param ( function , NULL , i , FALSE )"		2005143	2		=			
ANR	2005965	Identifier	parameter		2005143	0					
ANR	2005966	CallExpression	"get_param ( function , NULL , i , FALSE )"		2005143	1					
ANR	2005967	Callee	get_param		2005143	0					
ANR	2005968	Identifier	get_param		2005143	0					
ANR	2005969	ArgumentList	function		2005143	1					
ANR	2005970	Argument	function		2005143	0					
ANR	2005971	Identifier	function		2005143	0					
ANR	2005972	Argument	NULL		2005143	1					
ANR	2005973	Identifier	NULL		2005143	0					
ANR	2005974	Argument	i		2005143	2					
ANR	2005975	Identifier	i		2005143	0					
ANR	2005976	Argument	FALSE		2005143	3					
ANR	2005977	Identifier	FALSE		2005143	0					
ANR	2005978	IfStatement	if ( style == SOAP_RPC )		2005143	2					
ANR	2005979	Condition	style == SOAP_RPC	4319:8:144852:144868	2005143	0	True				
ANR	2005980	EqualityExpression	style == SOAP_RPC		2005143	0		==			
ANR	2005981	Identifier	style		2005143	0					
ANR	2005982	Identifier	SOAP_RPC		2005143	1					
ANR	2005983	CompoundStatement		107:27:3496:3496	2005143	1					
ANR	2005984	ExpressionStatement	"param = serialize_parameter ( parameter , NULL , i , NULL , use , method )"	4320:5:144878:144944	2005143	0	True				
ANR	2005985	AssignmentExpression	"param = serialize_parameter ( parameter , NULL , i , NULL , use , method )"		2005143	0		=			
ANR	2005986	Identifier	param		2005143	0					
ANR	2005987	CallExpression	"serialize_parameter ( parameter , NULL , i , NULL , use , method )"		2005143	1					
ANR	2005988	Callee	serialize_parameter		2005143	0					
ANR	2005989	Identifier	serialize_parameter		2005143	0					
ANR	2005990	ArgumentList	parameter		2005143	1					
ANR	2005991	Argument	parameter		2005143	0					
ANR	2005992	Identifier	parameter		2005143	0					
ANR	2005993	Argument	NULL		2005143	1					
ANR	2005994	Identifier	NULL		2005143	0					
ANR	2005995	Argument	i		2005143	2					
ANR	2005996	Identifier	i		2005143	0					
ANR	2005997	Argument	NULL		2005143	3					
ANR	2005998	Identifier	NULL		2005143	0					
ANR	2005999	Argument	use		2005143	4					
ANR	2006000	Identifier	use		2005143	0					
ANR	2006001	Argument	method		2005143	5					
ANR	2006002	Identifier	method		2005143	0					
ANR	2006003	ElseStatement	else		2005143	0					
ANR	2006004	IfStatement	if ( style == SOAP_DOCUMENT )		2005143	0					
ANR	2006005	Condition	style == SOAP_DOCUMENT	4321:15:144961:144982	2005143	0	True				
ANR	2006006	EqualityExpression	style == SOAP_DOCUMENT		2005143	0		==			
ANR	2006007	Identifier	style		2005143	0					
ANR	2006008	Identifier	SOAP_DOCUMENT		2005143	1					
ANR	2006009	CompoundStatement		109:39:3610:3610	2005143	1					
ANR	2006010	ExpressionStatement	"param = serialize_parameter ( parameter , NULL , i , NULL , use , body )"	4322:5:144992:145056	2005143	0	True				
ANR	2006011	AssignmentExpression	"param = serialize_parameter ( parameter , NULL , i , NULL , use , body )"		2005143	0		=			
ANR	2006012	Identifier	param		2005143	0					
ANR	2006013	CallExpression	"serialize_parameter ( parameter , NULL , i , NULL , use , body )"		2005143	1					
ANR	2006014	Callee	serialize_parameter		2005143	0					
ANR	2006015	Identifier	serialize_parameter		2005143	0					
ANR	2006016	ArgumentList	parameter		2005143	1					
ANR	2006017	Argument	parameter		2005143	0					
ANR	2006018	Identifier	parameter		2005143	0					
ANR	2006019	Argument	NULL		2005143	1					
ANR	2006020	Identifier	NULL		2005143	0					
ANR	2006021	Argument	i		2005143	2					
ANR	2006022	Identifier	i		2005143	0					
ANR	2006023	Argument	NULL		2005143	3					
ANR	2006024	Identifier	NULL		2005143	0					
ANR	2006025	Argument	use		2005143	4					
ANR	2006026	Identifier	use		2005143	0					
ANR	2006027	Argument	body		2005143	5					
ANR	2006028	Identifier	body		2005143	0					
ANR	2006029	IfStatement	if ( function && function -> binding -> bindingType == BINDING_SOAP )		2005143	1					
ANR	2006030	Condition	function && function -> binding -> bindingType == BINDING_SOAP	4323:9:145067:145124	2005143	0	True				
ANR	2006031	AndExpression	function && function -> binding -> bindingType == BINDING_SOAP		2005143	0		&&			
ANR	2006032	Identifier	function		2005143	0					
ANR	2006033	EqualityExpression	function -> binding -> bindingType == BINDING_SOAP		2005143	1		==			
ANR	2006034	PtrMemberAccess	function -> binding -> bindingType		2005143	0					
ANR	2006035	PtrMemberAccess	function -> binding		2005143	0					
ANR	2006036	Identifier	function		2005143	0					
ANR	2006037	Identifier	binding		2005143	1					
ANR	2006038	Identifier	bindingType		2005143	1					
ANR	2006039	Identifier	BINDING_SOAP		2005143	1					
ANR	2006040	CompoundStatement		111:69:3752:3752	2005143	1					
ANR	2006041	IfStatement	if ( parameter && parameter -> element )		2005143	0					
ANR	2006042	Condition	parameter && parameter -> element	4324:10:145139:145169	2005143	0	True				
ANR	2006043	AndExpression	parameter && parameter -> element		2005143	0		&&			
ANR	2006044	Identifier	parameter		2005143	0					
ANR	2006045	PtrMemberAccess	parameter -> element		2005143	1					
ANR	2006046	Identifier	parameter		2005143	0					
ANR	2006047	Identifier	element		2005143	1					
ANR	2006048	CompoundStatement		112:43:3797:3797	2005143	1					
ANR	2006049	ExpressionStatement	"ns = encode_add_ns ( param , parameter -> element -> namens )"	4325:7:145181:145234	2005143	0	True				
ANR	2006050	AssignmentExpression	"ns = encode_add_ns ( param , parameter -> element -> namens )"		2005143	0		=			
ANR	2006051	Identifier	ns		2005143	0					
ANR	2006052	CallExpression	"encode_add_ns ( param , parameter -> element -> namens )"		2005143	1					
ANR	2006053	Callee	encode_add_ns		2005143	0					
ANR	2006054	Identifier	encode_add_ns		2005143	0					
ANR	2006055	ArgumentList	param		2005143	1					
ANR	2006056	Argument	param		2005143	0					
ANR	2006057	Identifier	param		2005143	0					
ANR	2006058	Argument	parameter -> element -> namens		2005143	1					
ANR	2006059	PtrMemberAccess	parameter -> element -> namens		2005143	0					
ANR	2006060	PtrMemberAccess	parameter -> element		2005143	0					
ANR	2006061	Identifier	parameter		2005143	0					
ANR	2006062	Identifier	element		2005143	1					
ANR	2006063	Identifier	namens		2005143	1					
ANR	2006064	ExpressionStatement	"xmlNodeSetName ( param , BAD_CAST ( parameter -> element -> name ) )"	4326:7:145243:145300	2005143	1	True				
ANR	2006065	CallExpression	"xmlNodeSetName ( param , BAD_CAST ( parameter -> element -> name ) )"		2005143	0					
ANR	2006066	Callee	xmlNodeSetName		2005143	0					
ANR	2006067	Identifier	xmlNodeSetName		2005143	0					
ANR	2006068	ArgumentList	param		2005143	1					
ANR	2006069	Argument	param		2005143	0					
ANR	2006070	Identifier	param		2005143	0					
ANR	2006071	Argument	BAD_CAST ( parameter -> element -> name )		2005143	1					
ANR	2006072	CallExpression	BAD_CAST ( parameter -> element -> name )		2005143	0					
ANR	2006073	Callee	BAD_CAST		2005143	0					
ANR	2006074	Identifier	BAD_CAST		2005143	0					
ANR	2006075	ArgumentList	parameter -> element -> name		2005143	1					
ANR	2006076	Argument	parameter -> element -> name		2005143	0					
ANR	2006077	PtrMemberAccess	parameter -> element -> name		2005143	0					
ANR	2006078	PtrMemberAccess	parameter -> element		2005143	0					
ANR	2006079	Identifier	parameter		2005143	0					
ANR	2006080	Identifier	element		2005143	1					
ANR	2006081	Identifier	name		2005143	1					
ANR	2006082	ExpressionStatement	"xmlSetNs ( param , ns )"	4327:7:145309:145328	2005143	2	True				
ANR	2006083	CallExpression	"xmlSetNs ( param , ns )"		2005143	0					
ANR	2006084	Callee	xmlSetNs		2005143	0					
ANR	2006085	Identifier	xmlSetNs		2005143	0					
ANR	2006086	ArgumentList	param		2005143	1					
ANR	2006087	Argument	param		2005143	0					
ANR	2006088	Identifier	param		2005143	0					
ANR	2006089	Argument	ns		2005143	1					
ANR	2006090	Identifier	ns		2005143	0					
ANR	2006091	IfStatement	if ( head )		2005143	17					
ANR	2006092	Condition	head	4335:5:145369:145372	2005143	0	True				
ANR	2006093	Identifier	head		2005143	0					
ANR	2006094	CompoundStatement		124:2:4004:4016	2005143	1					
ANR	2006095	IdentifierDeclStatement	zval * header ;	4336:2:145379:145391	2005143	0	True				
ANR	2006096	IdentifierDecl	* header		2005143	0					
ANR	2006097	IdentifierDeclType	zval *		2005143	0					
ANR	2006098	Identifier	header		2005143	1					
ANR	2006099	Statement	ZEND_HASH_FOREACH_VAL	4338:2:145396:145416	2005143	1	True				
ANR	2006100	Statement	(	4338:23:145417:145417	2005143	2	True				
ANR	2006101	Statement	soap_headers	4338:24:145418:145429	2005143	3	True				
ANR	2006102	Statement	","	4338:36:145430:145430	2005143	4	True				
ANR	2006103	Statement	header	4338:38:145432:145437	2005143	5	True				
ANR	2006104	Statement	)	4338:44:145438:145438	2005143	6	True				
ANR	2006105	CompoundStatement		128:3:4088:4109	2005143	7					
ANR	2006106	IdentifierDeclStatement	HashTable * ht ;	4339:3:145445:145458	2005143	0	True				
ANR	2006107	IdentifierDecl	* ht		2005143	0					
ANR	2006108	IdentifierDeclType	HashTable *		2005143	0					
ANR	2006109	Identifier	ht		2005143	1					
ANR	2006110	IdentifierDeclStatement	"zval * name , * ns , * tmp ;"	4340:3:145463:145484	2005143	1	True				
ANR	2006111	IdentifierDecl	* name		2005143	0					
ANR	2006112	IdentifierDeclType	zval *		2005143	0					
ANR	2006113	Identifier	name		2005143	1					
ANR	2006114	IdentifierDecl	* ns		2005143	1					
ANR	2006115	IdentifierDeclType	zval *		2005143	0					
ANR	2006116	Identifier	ns		2005143	1					
ANR	2006117	IdentifierDecl	* tmp		2005143	2					
ANR	2006118	IdentifierDeclType	zval *		2005143	0					
ANR	2006119	Identifier	tmp		2005143	1					
ANR	2006120	IfStatement	if ( Z_TYPE_P ( header ) != IS_OBJECT )		2005143	2					
ANR	2006121	Condition	Z_TYPE_P ( header ) != IS_OBJECT	4342:7:145494:145522	2005143	0	True				
ANR	2006122	EqualityExpression	Z_TYPE_P ( header ) != IS_OBJECT		2005143	0		!=			
ANR	2006123	CallExpression	Z_TYPE_P ( header )		2005143	0					
ANR	2006124	Callee	Z_TYPE_P		2005143	0					
ANR	2006125	Identifier	Z_TYPE_P		2005143	0					
ANR	2006126	ArgumentList	header		2005143	1					
ANR	2006127	Argument	header		2005143	0					
ANR	2006128	Identifier	header		2005143	0					
ANR	2006129	Identifier	IS_OBJECT		2005143	1					
ANR	2006130	CompoundStatement		130:38:4150:4150	2005143	1					
ANR	2006131	ContinueStatement	continue ;	4343:4:145531:145539	2005143	0	True				
ANR	2006132	ExpressionStatement	ht = Z_OBJPROP_P ( header )	4346:3:145550:145574	2005143	3	True				
ANR	2006133	AssignmentExpression	ht = Z_OBJPROP_P ( header )		2005143	0		=			
ANR	2006134	Identifier	ht		2005143	0					
ANR	2006135	CallExpression	Z_OBJPROP_P ( header )		2005143	1					
ANR	2006136	Callee	Z_OBJPROP_P		2005143	0					
ANR	2006137	Identifier	Z_OBJPROP_P		2005143	0					
ANR	2006138	ArgumentList	header		2005143	1					
ANR	2006139	Argument	header		2005143	0					
ANR	2006140	Identifier	header		2005143	0					
ANR	2006141	IfStatement	"if ( ( name = zend_hash_str_find ( ht , ""name"" , sizeof ( ""name"" ) - 1 ) ) != NULL && Z_TYPE_P ( name ) == IS_STRING && ( ns = zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 ) ) != NULL && Z_TYPE_P ( ns ) == IS_STRING )"		2005143	4					
ANR	2006142	Condition	"( name = zend_hash_str_find ( ht , ""name"" , sizeof ( ""name"" ) - 1 ) ) != NULL && Z_TYPE_P ( name ) == IS_STRING && ( ns = zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 ) ) != NULL && Z_TYPE_P ( ns ) == IS_STRING"	4347:7:145583:145805	2005143	0	True				
ANR	2006143	AndExpression	"( name = zend_hash_str_find ( ht , ""name"" , sizeof ( ""name"" ) - 1 ) ) != NULL && Z_TYPE_P ( name ) == IS_STRING && ( ns = zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 ) ) != NULL && Z_TYPE_P ( ns ) == IS_STRING"		2005143	0		&&			
ANR	2006144	EqualityExpression	"( name = zend_hash_str_find ( ht , ""name"" , sizeof ( ""name"" ) - 1 ) ) != NULL"		2005143	0		!=			
ANR	2006145	AssignmentExpression	"name = zend_hash_str_find ( ht , ""name"" , sizeof ( ""name"" ) - 1 )"		2005143	0		=			
ANR	2006146	Identifier	name		2005143	0					
ANR	2006147	CallExpression	"zend_hash_str_find ( ht , ""name"" , sizeof ( ""name"" ) - 1 )"		2005143	1					
ANR	2006148	Callee	zend_hash_str_find		2005143	0					
ANR	2006149	Identifier	zend_hash_str_find		2005143	0					
ANR	2006150	ArgumentList	ht		2005143	1					
ANR	2006151	Argument	ht		2005143	0					
ANR	2006152	Identifier	ht		2005143	0					
ANR	2006153	Argument	"""name"""		2005143	1					
ANR	2006154	PrimaryExpression	"""name"""		2005143	0					
ANR	2006155	Argument	"sizeof ( ""name"" ) - 1"		2005143	2					
ANR	2006156	AdditiveExpression	"sizeof ( ""name"" ) - 1"		2005143	0		-			
ANR	2006157	SizeofExpression	"sizeof ( ""name"" )"		2005143	0					
ANR	2006158	Sizeof	sizeof		2005143	0					
ANR	2006159	PrimaryExpression	"""name"""		2005143	1					
ANR	2006160	PrimaryExpression	1		2005143	1					
ANR	2006161	Identifier	NULL		2005143	1					
ANR	2006162	AndExpression	"Z_TYPE_P ( name ) == IS_STRING && ( ns = zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 ) ) != NULL && Z_TYPE_P ( ns ) == IS_STRING"		2005143	1		&&			
ANR	2006163	EqualityExpression	Z_TYPE_P ( name ) == IS_STRING		2005143	0		==			
ANR	2006164	CallExpression	Z_TYPE_P ( name )		2005143	0					
ANR	2006165	Callee	Z_TYPE_P		2005143	0					
ANR	2006166	Identifier	Z_TYPE_P		2005143	0					
ANR	2006167	ArgumentList	name		2005143	1					
ANR	2006168	Argument	name		2005143	0					
ANR	2006169	Identifier	name		2005143	0					
ANR	2006170	Identifier	IS_STRING		2005143	1					
ANR	2006171	AndExpression	"( ns = zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 ) ) != NULL && Z_TYPE_P ( ns ) == IS_STRING"		2005143	1		&&			
ANR	2006172	EqualityExpression	"( ns = zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 ) ) != NULL"		2005143	0		!=			
ANR	2006173	AssignmentExpression	"ns = zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 )"		2005143	0		=			
ANR	2006174	Identifier	ns		2005143	0					
ANR	2006175	CallExpression	"zend_hash_str_find ( ht , ""namespace"" , sizeof ( ""namespace"" ) - 1 )"		2005143	1					
ANR	2006176	Callee	zend_hash_str_find		2005143	0					
ANR	2006177	Identifier	zend_hash_str_find		2005143	0					
ANR	2006178	ArgumentList	ht		2005143	1					
ANR	2006179	Argument	ht		2005143	0					
ANR	2006180	Identifier	ht		2005143	0					
ANR	2006181	Argument	"""namespace"""		2005143	1					
ANR	2006182	PrimaryExpression	"""namespace"""		2005143	0					
ANR	2006183	Argument	"sizeof ( ""namespace"" ) - 1"		2005143	2					
ANR	2006184	AdditiveExpression	"sizeof ( ""namespace"" ) - 1"		2005143	0		-			
ANR	2006185	SizeofExpression	"sizeof ( ""namespace"" )"		2005143	0					
ANR	2006186	Sizeof	sizeof		2005143	0					
ANR	2006187	PrimaryExpression	"""namespace"""		2005143	1					
ANR	2006188	PrimaryExpression	1		2005143	1					
ANR	2006189	Identifier	NULL		2005143	1					
ANR	2006190	EqualityExpression	Z_TYPE_P ( ns ) == IS_STRING		2005143	1		==			
ANR	2006191	CallExpression	Z_TYPE_P ( ns )		2005143	0					
ANR	2006192	Callee	Z_TYPE_P		2005143	0					
ANR	2006193	Identifier	Z_TYPE_P		2005143	0					
ANR	2006194	ArgumentList	ns		2005143	1					
ANR	2006195	Argument	ns		2005143	0					
ANR	2006196	Identifier	ns		2005143	0					
ANR	2006197	Identifier	IS_STRING		2005143	1					
ANR	2006198	CompoundStatement		142:4:4509:4529	2005143	1					
ANR	2006199	IdentifierDeclStatement	xmlNodePtr h ;	4351:4:145814:145826	2005143	0	True				
ANR	2006200	IdentifierDecl	h		2005143	0					
ANR	2006201	IdentifierDeclType	xmlNodePtr		2005143	0					
ANR	2006202	Identifier	h		2005143	1					
ANR	2006203	IdentifierDeclStatement	xmlNsPtr nsptr ;	4352:4:145832:145846	2005143	1	True				
ANR	2006204	IdentifierDecl	nsptr		2005143	0					
ANR	2006205	IdentifierDeclType	xmlNsPtr		2005143	0					
ANR	2006206	Identifier	nsptr		2005143	1					
ANR	2006207	IdentifierDeclStatement	int hdr_use = SOAP_LITERAL ;	4353:4:145852:145878	2005143	2	True				
ANR	2006208	IdentifierDecl	hdr_use = SOAP_LITERAL		2005143	0					
ANR	2006209	IdentifierDeclType	int		2005143	0					
ANR	2006210	Identifier	hdr_use		2005143	1					
ANR	2006211	AssignmentExpression	hdr_use = SOAP_LITERAL		2005143	2		=			
ANR	2006212	Identifier	SOAP_LITERAL		2005143	0					
ANR	2006213	Identifier	SOAP_LITERAL		2005143	1					
ANR	2006214	IdentifierDeclStatement	encodePtr enc = NULL ;	4354:4:145884:145904	2005143	3	True				
ANR	2006215	IdentifierDecl	enc = NULL		2005143	0					
ANR	2006216	IdentifierDeclType	encodePtr		2005143	0					
ANR	2006217	Identifier	enc		2005143	1					
ANR	2006218	AssignmentExpression	enc = NULL		2005143	2		=			
ANR	2006219	Identifier	NULL		2005143	0					
ANR	2006220	Identifier	NULL		2005143	1					
ANR	2006221	IfStatement	if ( hdrs )		2005143	4					
ANR	2006222	Condition	hdrs	4356:8:145915:145918	2005143	0	True				
ANR	2006223	Identifier	hdrs		2005143	0					
ANR	2006224	CompoundStatement		146:5:4579:4614	2005143	1					
ANR	2006225	IdentifierDeclStatement	smart_str key = { 0 } ;	4357:5:145928:145947	2005143	0	True				
ANR	2006226	IdentifierDecl	key = { 0 }		2005143	0					
ANR	2006227	IdentifierDeclType	smart_str		2005143	0					
ANR	2006228	Identifier	key		2005143	1					
ANR	2006229	AssignmentExpression	key = { 0 }		2005143	2		=			
ANR	2006230	Identifier	key		2005143	0					
ANR	2006231	InitializerList	0		2005143	1					
ANR	2006232	PrimaryExpression	0		2005143	0					
ANR	2006233	IdentifierDeclStatement	sdlSoapBindingFunctionHeaderPtr hdr ;	4358:5:145954:145989	2005143	1	True				
ANR	2006234	IdentifierDecl	hdr		2005143	0					
ANR	2006235	IdentifierDeclType	sdlSoapBindingFunctionHeaderPtr		2005143	0					
ANR	2006236	Identifier	hdr		2005143	1					
ANR	2006237	ExpressionStatement	"smart_str_appendl ( & key , Z_STRVAL_P ( ns ) , Z_STRLEN_P ( ns ) )"	4360:5:145997:146052	2005143	2	True				
ANR	2006238	CallExpression	"smart_str_appendl ( & key , Z_STRVAL_P ( ns ) , Z_STRLEN_P ( ns ) )"		2005143	0					
ANR	2006239	Callee	smart_str_appendl		2005143	0					
ANR	2006240	Identifier	smart_str_appendl		2005143	0					
ANR	2006241	ArgumentList	& key		2005143	1					
ANR	2006242	Argument	& key		2005143	0					
ANR	2006243	UnaryOperationExpression	& key		2005143	0					
ANR	2006244	UnaryOperator	&		2005143	0					
ANR	2006245	Identifier	key		2005143	1					
ANR	2006246	Argument	Z_STRVAL_P ( ns )		2005143	1					
ANR	2006247	CallExpression	Z_STRVAL_P ( ns )		2005143	0					
ANR	2006248	Callee	Z_STRVAL_P		2005143	0					
ANR	2006249	Identifier	Z_STRVAL_P		2005143	0					
ANR	2006250	ArgumentList	ns		2005143	1					
ANR	2006251	Argument	ns		2005143	0					
ANR	2006252	Identifier	ns		2005143	0					
ANR	2006253	Argument	Z_STRLEN_P ( ns )		2005143	2					
ANR	2006254	CallExpression	Z_STRLEN_P ( ns )		2005143	0					
ANR	2006255	Callee	Z_STRLEN_P		2005143	0					
ANR	2006256	Identifier	Z_STRLEN_P		2005143	0					
ANR	2006257	ArgumentList	ns		2005143	1					
ANR	2006258	Argument	ns		2005143	0					
ANR	2006259	Identifier	ns		2005143	0					
ANR	2006260	ExpressionStatement	"smart_str_appendc ( & key , ':' )"	4361:5:146059:146087	2005143	3	True				
ANR	2006261	CallExpression	"smart_str_appendc ( & key , ':' )"		2005143	0					
ANR	2006262	Callee	smart_str_appendc		2005143	0					
ANR	2006263	Identifier	smart_str_appendc		2005143	0					
ANR	2006264	ArgumentList	& key		2005143	1					
ANR	2006265	Argument	& key		2005143	0					
ANR	2006266	UnaryOperationExpression	& key		2005143	0					
ANR	2006267	UnaryOperator	&		2005143	0					
ANR	2006268	Identifier	key		2005143	1					
ANR	2006269	Argument	':'		2005143	1					
ANR	2006270	PrimaryExpression	':'		2005143	0					
ANR	2006271	ExpressionStatement	"smart_str_appendl ( & key , Z_STRVAL_P ( name ) , Z_STRLEN_P ( name ) )"	4362:5:146094:146153	2005143	4	True				
ANR	2006272	CallExpression	"smart_str_appendl ( & key , Z_STRVAL_P ( name ) , Z_STRLEN_P ( name ) )"		2005143	0					
ANR	2006273	Callee	smart_str_appendl		2005143	0					
ANR	2006274	Identifier	smart_str_appendl		2005143	0					
ANR	2006275	ArgumentList	& key		2005143	1					
ANR	2006276	Argument	& key		2005143	0					
ANR	2006277	UnaryOperationExpression	& key		2005143	0					
ANR	2006278	UnaryOperator	&		2005143	0					
ANR	2006279	Identifier	key		2005143	1					
ANR	2006280	Argument	Z_STRVAL_P ( name )		2005143	1					
ANR	2006281	CallExpression	Z_STRVAL_P ( name )		2005143	0					
ANR	2006282	Callee	Z_STRVAL_P		2005143	0					
ANR	2006283	Identifier	Z_STRVAL_P		2005143	0					
ANR	2006284	ArgumentList	name		2005143	1					
ANR	2006285	Argument	name		2005143	0					
ANR	2006286	Identifier	name		2005143	0					
ANR	2006287	Argument	Z_STRLEN_P ( name )		2005143	2					
ANR	2006288	CallExpression	Z_STRLEN_P ( name )		2005143	0					
ANR	2006289	Callee	Z_STRLEN_P		2005143	0					
ANR	2006290	Identifier	Z_STRLEN_P		2005143	0					
ANR	2006291	ArgumentList	name		2005143	1					
ANR	2006292	Argument	name		2005143	0					
ANR	2006293	Identifier	name		2005143	0					
ANR	2006294	ExpressionStatement	smart_str_0 ( & key )	4363:5:146160:146177	2005143	5	True				
ANR	2006295	CallExpression	smart_str_0 ( & key )		2005143	0					
ANR	2006296	Callee	smart_str_0		2005143	0					
ANR	2006297	Identifier	smart_str_0		2005143	0					
ANR	2006298	ArgumentList	& key		2005143	1					
ANR	2006299	Argument	& key		2005143	0					
ANR	2006300	UnaryOperationExpression	& key		2005143	0					
ANR	2006301	UnaryOperator	&		2005143	0					
ANR	2006302	Identifier	key		2005143	1					
ANR	2006303	IfStatement	"if ( ( hdr = zend_hash_find_ptr ( hdrs , key . s ) ) != NULL )"		2005143	6					
ANR	2006304	Condition	"( hdr = zend_hash_find_ptr ( hdrs , key . s ) ) != NULL"	4364:9:146188:146234	2005143	0	True				
ANR	2006305	EqualityExpression	"( hdr = zend_hash_find_ptr ( hdrs , key . s ) ) != NULL"		2005143	0		!=			
ANR	2006306	AssignmentExpression	"hdr = zend_hash_find_ptr ( hdrs , key . s )"		2005143	0		=			
ANR	2006307	Identifier	hdr		2005143	0					
ANR	2006308	CallExpression	"zend_hash_find_ptr ( hdrs , key . s )"		2005143	1					
ANR	2006309	Callee	zend_hash_find_ptr		2005143	0					
ANR	2006310	Identifier	zend_hash_find_ptr		2005143	0					
ANR	2006311	ArgumentList	hdrs		2005143	1					
ANR	2006312	Argument	hdrs		2005143	0					
ANR	2006313	Identifier	hdrs		2005143	0					
ANR	2006314	Argument	key . s		2005143	1					
ANR	2006315	MemberAccess	key . s		2005143	0					
ANR	2006316	Identifier	key		2005143	0					
ANR	2006317	Identifier	s		2005143	1					
ANR	2006318	Identifier	NULL		2005143	1					
ANR	2006319	CompoundStatement		152:58:4862:4862	2005143	1					
ANR	2006320	ExpressionStatement	hdr_use = hdr -> use	4365:6:146245:146263	2005143	0	True				
ANR	2006321	AssignmentExpression	hdr_use = hdr -> use		2005143	0		=			
ANR	2006322	Identifier	hdr_use		2005143	0					
ANR	2006323	PtrMemberAccess	hdr -> use		2005143	1					
ANR	2006324	Identifier	hdr		2005143	0					
ANR	2006325	Identifier	use		2005143	1					
ANR	2006326	ExpressionStatement	enc = hdr -> encode	4366:6:146271:146288	2005143	1	True				
ANR	2006327	AssignmentExpression	enc = hdr -> encode		2005143	0		=			
ANR	2006328	Identifier	enc		2005143	0					
ANR	2006329	PtrMemberAccess	hdr -> encode		2005143	1					
ANR	2006330	Identifier	hdr		2005143	0					
ANR	2006331	Identifier	encode		2005143	1					
ANR	2006332	IfStatement	if ( hdr_use == SOAP_ENCODED )		2005143	2					
ANR	2006333	Condition	hdr_use == SOAP_ENCODED	4367:10:146300:146322	2005143	0	True				
ANR	2006334	EqualityExpression	hdr_use == SOAP_ENCODED		2005143	0		==			
ANR	2006335	Identifier	hdr_use		2005143	0					
ANR	2006336	Identifier	SOAP_ENCODED		2005143	1					
ANR	2006337	CompoundStatement		155:35:4950:4950	2005143	1					
ANR	2006338	ExpressionStatement	use = SOAP_ENCODED	4368:7:146334:146352	2005143	0	True				
ANR	2006339	AssignmentExpression	use = SOAP_ENCODED		2005143	0		=			
ANR	2006340	Identifier	use		2005143	0					
ANR	2006341	Identifier	SOAP_ENCODED		2005143	1					
ANR	2006342	ExpressionStatement	smart_str_free ( & key )	4371:5:146374:146394	2005143	7	True				
ANR	2006343	CallExpression	smart_str_free ( & key )		2005143	0					
ANR	2006344	Callee	smart_str_free		2005143	0					
ANR	2006345	Identifier	smart_str_free		2005143	0					
ANR	2006346	ArgumentList	& key		2005143	1					
ANR	2006347	Argument	& key		2005143	0					
ANR	2006348	UnaryOperationExpression	& key		2005143	0					
ANR	2006349	UnaryOperator	&		2005143	0					
ANR	2006350	Identifier	key		2005143	1					
ANR	2006351	IfStatement	"if ( ( tmp = zend_hash_str_find ( ht , ""data"" , sizeof ( ""data"" ) - 1 ) ) != NULL )"		2005143	5					
ANR	2006352	Condition	"( tmp = zend_hash_str_find ( ht , ""data"" , sizeof ( ""data"" ) - 1 ) ) != NULL"	4374:8:146411:146474	2005143	0	True				
ANR	2006353	EqualityExpression	"( tmp = zend_hash_str_find ( ht , ""data"" , sizeof ( ""data"" ) - 1 ) ) != NULL"		2005143	0		!=			
ANR	2006354	AssignmentExpression	"tmp = zend_hash_str_find ( ht , ""data"" , sizeof ( ""data"" ) - 1 )"		2005143	0		=			
ANR	2006355	Identifier	tmp		2005143	0					
ANR	2006356	CallExpression	"zend_hash_str_find ( ht , ""data"" , sizeof ( ""data"" ) - 1 )"		2005143	1					
ANR	2006357	Callee	zend_hash_str_find		2005143	0					
ANR	2006358	Identifier	zend_hash_str_find		2005143	0					
ANR	2006359	ArgumentList	ht		2005143	1					
ANR	2006360	Argument	ht		2005143	0					
ANR	2006361	Identifier	ht		2005143	0					
ANR	2006362	Argument	"""data"""		2005143	1					
ANR	2006363	PrimaryExpression	"""data"""		2005143	0					
ANR	2006364	Argument	"sizeof ( ""data"" ) - 1"		2005143	2					
ANR	2006365	AdditiveExpression	"sizeof ( ""data"" ) - 1"		2005143	0		-			
ANR	2006366	SizeofExpression	"sizeof ( ""data"" )"		2005143	0					
ANR	2006367	Sizeof	sizeof		2005143	0					
ANR	2006368	PrimaryExpression	"""data"""		2005143	1					
ANR	2006369	PrimaryExpression	1		2005143	1					
ANR	2006370	Identifier	NULL		2005143	1					
ANR	2006371	CompoundStatement		162:74:5102:5102	2005143	1					
ANR	2006372	ExpressionStatement	"h = master_to_xml ( enc , tmp , hdr_use , head )"	4375:5:146484:146526	2005143	0	True				
ANR	2006373	AssignmentExpression	"h = master_to_xml ( enc , tmp , hdr_use , head )"		2005143	0		=			
ANR	2006374	Identifier	h		2005143	0					
ANR	2006375	CallExpression	"master_to_xml ( enc , tmp , hdr_use , head )"		2005143	1					
ANR	2006376	Callee	master_to_xml		2005143	0					
ANR	2006377	Identifier	master_to_xml		2005143	0					
ANR	2006378	ArgumentList	enc		2005143	1					
ANR	2006379	Argument	enc		2005143	0					
ANR	2006380	Identifier	enc		2005143	0					
ANR	2006381	Argument	tmp		2005143	1					
ANR	2006382	Identifier	tmp		2005143	0					
ANR	2006383	Argument	hdr_use		2005143	2					
ANR	2006384	Identifier	hdr_use		2005143	0					
ANR	2006385	Argument	head		2005143	3					
ANR	2006386	Identifier	head		2005143	0					
ANR	2006387	ExpressionStatement	"xmlNodeSetName ( h , BAD_CAST ( Z_STRVAL_P ( name ) ) )"	4376:5:146533:146578	2005143	1	True				
ANR	2006388	CallExpression	"xmlNodeSetName ( h , BAD_CAST ( Z_STRVAL_P ( name ) ) )"		2005143	0					
ANR	2006389	Callee	xmlNodeSetName		2005143	0					
ANR	2006390	Identifier	xmlNodeSetName		2005143	0					
ANR	2006391	ArgumentList	h		2005143	1					
ANR	2006392	Argument	h		2005143	0					
ANR	2006393	Identifier	h		2005143	0					
ANR	2006394	Argument	BAD_CAST ( Z_STRVAL_P ( name ) )		2005143	1					
ANR	2006395	CallExpression	BAD_CAST ( Z_STRVAL_P ( name ) )		2005143	0					
ANR	2006396	Callee	BAD_CAST		2005143	0					
ANR	2006397	Identifier	BAD_CAST		2005143	0					
ANR	2006398	ArgumentList	Z_STRVAL_P ( name )		2005143	1					
ANR	2006399	Argument	Z_STRVAL_P ( name )		2005143	0					
ANR	2006400	CallExpression	Z_STRVAL_P ( name )		2005143	0					
ANR	2006401	Callee	Z_STRVAL_P		2005143	0					
ANR	2006402	Identifier	Z_STRVAL_P		2005143	0					
ANR	2006403	ArgumentList	name		2005143	1					
ANR	2006404	Argument	name		2005143	0					
ANR	2006405	Identifier	name		2005143	0					
ANR	2006406	ElseStatement	else		2005143	0					
ANR	2006407	CompoundStatement		165:11:5216:5216	2005143	0					
ANR	2006408	ExpressionStatement	"h = xmlNewNode ( NULL , BAD_CAST ( Z_STRVAL_P ( name ) ) )"	4378:5:146598:146646	2005143	0	True				
ANR	2006409	AssignmentExpression	"h = xmlNewNode ( NULL , BAD_CAST ( Z_STRVAL_P ( name ) ) )"		2005143	0		=			
ANR	2006410	Identifier	h		2005143	0					
ANR	2006411	CallExpression	"xmlNewNode ( NULL , BAD_CAST ( Z_STRVAL_P ( name ) ) )"		2005143	1					
ANR	2006412	Callee	xmlNewNode		2005143	0					
ANR	2006413	Identifier	xmlNewNode		2005143	0					
ANR	2006414	ArgumentList	NULL		2005143	1					
ANR	2006415	Argument	NULL		2005143	0					
ANR	2006416	Identifier	NULL		2005143	0					
ANR	2006417	Argument	BAD_CAST ( Z_STRVAL_P ( name ) )		2005143	1					
ANR	2006418	CallExpression	BAD_CAST ( Z_STRVAL_P ( name ) )		2005143	0					
ANR	2006419	Callee	BAD_CAST		2005143	0					
ANR	2006420	Identifier	BAD_CAST		2005143	0					
ANR	2006421	ArgumentList	Z_STRVAL_P ( name )		2005143	1					
ANR	2006422	Argument	Z_STRVAL_P ( name )		2005143	0					
ANR	2006423	CallExpression	Z_STRVAL_P ( name )		2005143	0					
ANR	2006424	Callee	Z_STRVAL_P		2005143	0					
ANR	2006425	Identifier	Z_STRVAL_P		2005143	0					
ANR	2006426	ArgumentList	name		2005143	1					
ANR	2006427	Argument	name		2005143	0					
ANR	2006428	Identifier	name		2005143	0					
ANR	2006429	ExpressionStatement	"xmlAddChild ( head , h )"	4379:5:146653:146673	2005143	1	True				
ANR	2006430	CallExpression	"xmlAddChild ( head , h )"		2005143	0					
ANR	2006431	Callee	xmlAddChild		2005143	0					
ANR	2006432	Identifier	xmlAddChild		2005143	0					
ANR	2006433	ArgumentList	head		2005143	1					
ANR	2006434	Argument	head		2005143	0					
ANR	2006435	Identifier	head		2005143	0					
ANR	2006436	Argument	h		2005143	1					
ANR	2006437	Identifier	h		2005143	0					
ANR	2006438	ExpressionStatement	"nsptr = encode_add_ns ( h , Z_STRVAL_P ( ns ) )"	4381:4:146685:146725	2005143	6	True				
ANR	2006439	AssignmentExpression	"nsptr = encode_add_ns ( h , Z_STRVAL_P ( ns ) )"		2005143	0		=			
ANR	2006440	Identifier	nsptr		2005143	0					
ANR	2006441	CallExpression	"encode_add_ns ( h , Z_STRVAL_P ( ns ) )"		2005143	1					
ANR	2006442	Callee	encode_add_ns		2005143	0					
ANR	2006443	Identifier	encode_add_ns		2005143	0					
ANR	2006444	ArgumentList	h		2005143	1					
ANR	2006445	Argument	h		2005143	0					
ANR	2006446	Identifier	h		2005143	0					
ANR	2006447	Argument	Z_STRVAL_P ( ns )		2005143	1					
ANR	2006448	CallExpression	Z_STRVAL_P ( ns )		2005143	0					
ANR	2006449	Callee	Z_STRVAL_P		2005143	0					
ANR	2006450	Identifier	Z_STRVAL_P		2005143	0					
ANR	2006451	ArgumentList	ns		2005143	1					
ANR	2006452	Argument	ns		2005143	0					
ANR	2006453	Identifier	ns		2005143	0					
ANR	2006454	ExpressionStatement	"xmlSetNs ( h , nsptr )"	4382:4:146731:146749	2005143	7	True				
ANR	2006455	CallExpression	"xmlSetNs ( h , nsptr )"		2005143	0					
ANR	2006456	Callee	xmlSetNs		2005143	0					
ANR	2006457	Identifier	xmlSetNs		2005143	0					
ANR	2006458	ArgumentList	h		2005143	1					
ANR	2006459	Argument	h		2005143	0					
ANR	2006460	Identifier	h		2005143	0					
ANR	2006461	Argument	nsptr		2005143	1					
ANR	2006462	Identifier	nsptr		2005143	0					
ANR	2006463	ExpressionStatement	"set_soap_header_attributes ( h , ht , version )"	4383:4:146755:146797	2005143	8	True				
ANR	2006464	CallExpression	"set_soap_header_attributes ( h , ht , version )"		2005143	0					
ANR	2006465	Callee	set_soap_header_attributes		2005143	0					
ANR	2006466	Identifier	set_soap_header_attributes		2005143	0					
ANR	2006467	ArgumentList	h		2005143	1					
ANR	2006468	Argument	h		2005143	0					
ANR	2006469	Identifier	h		2005143	0					
ANR	2006470	Argument	ht		2005143	1					
ANR	2006471	Identifier	ht		2005143	0					
ANR	2006472	Argument	version		2005143	2					
ANR	2006473	Identifier	version		2005143	0					
ANR	2006474	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	4385:4:146808:146831	2005143	8	True				
ANR	2006475	CallExpression	ZEND_HASH_FOREACH_END ( )		2005143	0					
ANR	2006476	Callee	ZEND_HASH_FOREACH_END		2005143	0					
ANR	2006477	Identifier	ZEND_HASH_FOREACH_END		2005143	0					
ANR	2006478	ArgumentList			2005143	1					
ANR	2006479	IfStatement	if ( use == SOAP_ENCODED )		2005143	18					
ANR	2006480	Condition	use == SOAP_ENCODED	4388:5:146842:146860	2005143	0	True				
ANR	2006481	EqualityExpression	use == SOAP_ENCODED		2005143	0		==			
ANR	2006482	Identifier	use		2005143	0					
ANR	2006483	Identifier	SOAP_ENCODED		2005143	1					
ANR	2006484	CompoundStatement		176:26:5488:5488	2005143	1					
ANR	2006485	ExpressionStatement	"xmlNewNs ( envelope , BAD_CAST ( XSD_NAMESPACE ) , BAD_CAST ( XSD_NS_PREFIX ) )"	4389:2:146867:146935	2005143	0	True				
ANR	2006486	CallExpression	"xmlNewNs ( envelope , BAD_CAST ( XSD_NAMESPACE ) , BAD_CAST ( XSD_NS_PREFIX ) )"		2005143	0					
ANR	2006487	Callee	xmlNewNs		2005143	0					
ANR	2006488	Identifier	xmlNewNs		2005143	0					
ANR	2006489	ArgumentList	envelope		2005143	1					
ANR	2006490	Argument	envelope		2005143	0					
ANR	2006491	Identifier	envelope		2005143	0					
ANR	2006492	Argument	BAD_CAST ( XSD_NAMESPACE )		2005143	1					
ANR	2006493	CallExpression	BAD_CAST ( XSD_NAMESPACE )		2005143	0					
ANR	2006494	Callee	BAD_CAST		2005143	0					
ANR	2006495	Identifier	BAD_CAST		2005143	0					
ANR	2006496	ArgumentList	XSD_NAMESPACE		2005143	1					
ANR	2006497	Argument	XSD_NAMESPACE		2005143	0					
ANR	2006498	Identifier	XSD_NAMESPACE		2005143	0					
ANR	2006499	Argument	BAD_CAST ( XSD_NS_PREFIX )		2005143	2					
ANR	2006500	CallExpression	BAD_CAST ( XSD_NS_PREFIX )		2005143	0					
ANR	2006501	Callee	BAD_CAST		2005143	0					
ANR	2006502	Identifier	BAD_CAST		2005143	0					
ANR	2006503	ArgumentList	XSD_NS_PREFIX		2005143	1					
ANR	2006504	Argument	XSD_NS_PREFIX		2005143	0					
ANR	2006505	Identifier	XSD_NS_PREFIX		2005143	0					
ANR	2006506	IfStatement	if ( version == SOAP_1_1 )		2005143	1					
ANR	2006507	Condition	version == SOAP_1_1	4390:6:146943:146961	2005143	0	True				
ANR	2006508	EqualityExpression	version == SOAP_1_1		2005143	0		==			
ANR	2006509	Identifier	version		2005143	0					
ANR	2006510	Identifier	SOAP_1_1		2005143	1					
ANR	2006511	CompoundStatement		178:27:5589:5589	2005143	1					
ANR	2006512	ExpressionStatement	"xmlNewNs ( envelope , BAD_CAST ( SOAP_1_1_ENC_NAMESPACE ) , BAD_CAST ( SOAP_1_1_ENC_NS_PREFIX ) )"	4391:3:146969:147055	2005143	0	True				
ANR	2006513	CallExpression	"xmlNewNs ( envelope , BAD_CAST ( SOAP_1_1_ENC_NAMESPACE ) , BAD_CAST ( SOAP_1_1_ENC_NS_PREFIX ) )"		2005143	0					
ANR	2006514	Callee	xmlNewNs		2005143	0					
ANR	2006515	Identifier	xmlNewNs		2005143	0					
ANR	2006516	ArgumentList	envelope		2005143	1					
ANR	2006517	Argument	envelope		2005143	0					
ANR	2006518	Identifier	envelope		2005143	0					
ANR	2006519	Argument	BAD_CAST ( SOAP_1_1_ENC_NAMESPACE )		2005143	1					
ANR	2006520	CallExpression	BAD_CAST ( SOAP_1_1_ENC_NAMESPACE )		2005143	0					
ANR	2006521	Callee	BAD_CAST		2005143	0					
ANR	2006522	Identifier	BAD_CAST		2005143	0					
ANR	2006523	ArgumentList	SOAP_1_1_ENC_NAMESPACE		2005143	1					
ANR	2006524	Argument	SOAP_1_1_ENC_NAMESPACE		2005143	0					
ANR	2006525	Identifier	SOAP_1_1_ENC_NAMESPACE		2005143	0					
ANR	2006526	Argument	BAD_CAST ( SOAP_1_1_ENC_NS_PREFIX )		2005143	2					
ANR	2006527	CallExpression	BAD_CAST ( SOAP_1_1_ENC_NS_PREFIX )		2005143	0					
ANR	2006528	Callee	BAD_CAST		2005143	0					
ANR	2006529	Identifier	BAD_CAST		2005143	0					
ANR	2006530	ArgumentList	SOAP_1_1_ENC_NS_PREFIX		2005143	1					
ANR	2006531	Argument	SOAP_1_1_ENC_NS_PREFIX		2005143	0					
ANR	2006532	Identifier	SOAP_1_1_ENC_NS_PREFIX		2005143	0					
ANR	2006533	ExpressionStatement	"xmlSetNsProp ( envelope , envelope -> ns , BAD_CAST ( ""encodingStyle"" ) , BAD_CAST ( SOAP_1_1_ENC_NAMESPACE ) )"	4392:3:147060:147157	2005143	1	True				
ANR	2006534	CallExpression	"xmlSetNsProp ( envelope , envelope -> ns , BAD_CAST ( ""encodingStyle"" ) , BAD_CAST ( SOAP_1_1_ENC_NAMESPACE ) )"		2005143	0					
ANR	2006535	Callee	xmlSetNsProp		2005143	0					
ANR	2006536	Identifier	xmlSetNsProp		2005143	0					
ANR	2006537	ArgumentList	envelope		2005143	1					
ANR	2006538	Argument	envelope		2005143	0					
ANR	2006539	Identifier	envelope		2005143	0					
ANR	2006540	Argument	envelope -> ns		2005143	1					
ANR	2006541	PtrMemberAccess	envelope -> ns		2005143	0					
ANR	2006542	Identifier	envelope		2005143	0					
ANR	2006543	Identifier	ns		2005143	1					
ANR	2006544	Argument	"BAD_CAST ( ""encodingStyle"" )"		2005143	2					
ANR	2006545	CallExpression	"BAD_CAST ( ""encodingStyle"" )"		2005143	0					
ANR	2006546	Callee	BAD_CAST		2005143	0					
ANR	2006547	Identifier	BAD_CAST		2005143	0					
ANR	2006548	ArgumentList	"""encodingStyle"""		2005143	1					
ANR	2006549	Argument	"""encodingStyle"""		2005143	0					
ANR	2006550	PrimaryExpression	"""encodingStyle"""		2005143	0					
ANR	2006551	Argument	BAD_CAST ( SOAP_1_1_ENC_NAMESPACE )		2005143	3					
ANR	2006552	CallExpression	BAD_CAST ( SOAP_1_1_ENC_NAMESPACE )		2005143	0					
ANR	2006553	Callee	BAD_CAST		2005143	0					
ANR	2006554	Identifier	BAD_CAST		2005143	0					
ANR	2006555	ArgumentList	SOAP_1_1_ENC_NAMESPACE		2005143	1					
ANR	2006556	Argument	SOAP_1_1_ENC_NAMESPACE		2005143	0					
ANR	2006557	Identifier	SOAP_1_1_ENC_NAMESPACE		2005143	0					
ANR	2006558	ElseStatement	else		2005143	0					
ANR	2006559	IfStatement	if ( version == SOAP_1_2 )		2005143	0					
ANR	2006560	Condition	version == SOAP_1_2	4393:13:147172:147190	2005143	0	True				
ANR	2006561	EqualityExpression	version == SOAP_1_2		2005143	0		==			
ANR	2006562	Identifier	version		2005143	0					
ANR	2006563	Identifier	SOAP_1_2		2005143	1					
ANR	2006564	CompoundStatement		181:34:5818:5818	2005143	1					
ANR	2006565	ExpressionStatement	"xmlNewNs ( envelope , BAD_CAST ( SOAP_1_2_ENC_NAMESPACE ) , BAD_CAST ( SOAP_1_2_ENC_NS_PREFIX ) )"	4394:3:147198:147284	2005143	0	True				
ANR	2006566	CallExpression	"xmlNewNs ( envelope , BAD_CAST ( SOAP_1_2_ENC_NAMESPACE ) , BAD_CAST ( SOAP_1_2_ENC_NS_PREFIX ) )"		2005143	0					
ANR	2006567	Callee	xmlNewNs		2005143	0					
ANR	2006568	Identifier	xmlNewNs		2005143	0					
ANR	2006569	ArgumentList	envelope		2005143	1					
ANR	2006570	Argument	envelope		2005143	0					
ANR	2006571	Identifier	envelope		2005143	0					
ANR	2006572	Argument	BAD_CAST ( SOAP_1_2_ENC_NAMESPACE )		2005143	1					
ANR	2006573	CallExpression	BAD_CAST ( SOAP_1_2_ENC_NAMESPACE )		2005143	0					
ANR	2006574	Callee	BAD_CAST		2005143	0					
ANR	2006575	Identifier	BAD_CAST		2005143	0					
ANR	2006576	ArgumentList	SOAP_1_2_ENC_NAMESPACE		2005143	1					
ANR	2006577	Argument	SOAP_1_2_ENC_NAMESPACE		2005143	0					
ANR	2006578	Identifier	SOAP_1_2_ENC_NAMESPACE		2005143	0					
ANR	2006579	Argument	BAD_CAST ( SOAP_1_2_ENC_NS_PREFIX )		2005143	2					
ANR	2006580	CallExpression	BAD_CAST ( SOAP_1_2_ENC_NS_PREFIX )		2005143	0					
ANR	2006581	Callee	BAD_CAST		2005143	0					
ANR	2006582	Identifier	BAD_CAST		2005143	0					
ANR	2006583	ArgumentList	SOAP_1_2_ENC_NS_PREFIX		2005143	1					
ANR	2006584	Argument	SOAP_1_2_ENC_NS_PREFIX		2005143	0					
ANR	2006585	Identifier	SOAP_1_2_ENC_NS_PREFIX		2005143	0					
ANR	2006586	IfStatement	if ( method )		2005143	1					
ANR	2006587	Condition	method	4395:7:147293:147298	2005143	0	True				
ANR	2006588	Identifier	method		2005143	0					
ANR	2006589	CompoundStatement		183:15:5926:5926	2005143	1					
ANR	2006590	ExpressionStatement	"xmlSetNsProp ( method , envelope -> ns , BAD_CAST ( ""encodingStyle"" ) , BAD_CAST ( SOAP_1_2_ENC_NAMESPACE ) )"	4396:4:147307:147402	2005143	0	True				
ANR	2006591	CallExpression	"xmlSetNsProp ( method , envelope -> ns , BAD_CAST ( ""encodingStyle"" ) , BAD_CAST ( SOAP_1_2_ENC_NAMESPACE ) )"		2005143	0					
ANR	2006592	Callee	xmlSetNsProp		2005143	0					
ANR	2006593	Identifier	xmlSetNsProp		2005143	0					
ANR	2006594	ArgumentList	method		2005143	1					
ANR	2006595	Argument	method		2005143	0					
ANR	2006596	Identifier	method		2005143	0					
ANR	2006597	Argument	envelope -> ns		2005143	1					
ANR	2006598	PtrMemberAccess	envelope -> ns		2005143	0					
ANR	2006599	Identifier	envelope		2005143	0					
ANR	2006600	Identifier	ns		2005143	1					
ANR	2006601	Argument	"BAD_CAST ( ""encodingStyle"" )"		2005143	2					
ANR	2006602	CallExpression	"BAD_CAST ( ""encodingStyle"" )"		2005143	0					
ANR	2006603	Callee	BAD_CAST		2005143	0					
ANR	2006604	Identifier	BAD_CAST		2005143	0					
ANR	2006605	ArgumentList	"""encodingStyle"""		2005143	1					
ANR	2006606	Argument	"""encodingStyle"""		2005143	0					
ANR	2006607	PrimaryExpression	"""encodingStyle"""		2005143	0					
ANR	2006608	Argument	BAD_CAST ( SOAP_1_2_ENC_NAMESPACE )		2005143	3					
ANR	2006609	CallExpression	BAD_CAST ( SOAP_1_2_ENC_NAMESPACE )		2005143	0					
ANR	2006610	Callee	BAD_CAST		2005143	0					
ANR	2006611	Identifier	BAD_CAST		2005143	0					
ANR	2006612	ArgumentList	SOAP_1_2_ENC_NAMESPACE		2005143	1					
ANR	2006613	Argument	SOAP_1_2_ENC_NAMESPACE		2005143	0					
ANR	2006614	Identifier	SOAP_1_2_ENC_NAMESPACE		2005143	0					
ANR	2006615	ExpressionStatement	encode_finish ( )	4401:1:147418:147433	2005143	19	True				
ANR	2006616	CallExpression	encode_finish ( )		2005143	0					
ANR	2006617	Callee	encode_finish		2005143	0					
ANR	2006618	Identifier	encode_finish		2005143	0					
ANR	2006619	ArgumentList			2005143	1					
ANR	2006620	ReturnStatement	return doc ;	4403:1:147437:147447	2005143	20	True				
ANR	2006621	Identifier	doc		2005143	0					
ANR	2006622	ReturnType	static xmlDocPtr		2005143	1					
ANR	2006623	Identifier	serialize_function_call		2005143	2					
ANR	2006624	ParameterList	"zval * this_ptr , sdlFunctionPtr function , char * function_name , char * uri , zval * arguments , int arg_count , int version , HashTable * soap_headers"		2005143	3					
ANR	2006625	Parameter	zval * this_ptr	4212:41:141231:141244	2005143	0	True				
ANR	2006626	ParameterType	zval *		2005143	0					
ANR	2006627	Identifier	this_ptr		2005143	1					
ANR	2006628	Parameter	sdlFunctionPtr function	4212:57:141247:141269	2005143	1	True				
ANR	2006629	ParameterType	sdlFunctionPtr		2005143	0					
ANR	2006630	Identifier	function		2005143	1					
ANR	2006631	Parameter	char * function_name	4212:82:141272:141290	2005143	2	True				
ANR	2006632	ParameterType	char *		2005143	0					
ANR	2006633	Identifier	function_name		2005143	1					
ANR	2006634	Parameter	char * uri	4212:103:141293:141301	2005143	3	True				
ANR	2006635	ParameterType	char *		2005143	0					
ANR	2006636	Identifier	uri		2005143	1					
ANR	2006637	Parameter	zval * arguments	4212:114:141304:141318	2005143	4	True				
ANR	2006638	ParameterType	zval *		2005143	0					
ANR	2006639	Identifier	arguments		2005143	1					
ANR	2006640	Parameter	int arg_count	4212:131:141321:141333	2005143	5	True				
ANR	2006641	ParameterType	int		2005143	0					
ANR	2006642	Identifier	arg_count		2005143	1					
ANR	2006643	Parameter	int version	4212:146:141336:141346	2005143	6	True				
ANR	2006644	ParameterType	int		2005143	0					
ANR	2006645	Identifier	version		2005143	1					
ANR	2006646	Parameter	HashTable * soap_headers	4212:159:141349:141371	2005143	7	True				
ANR	2006647	ParameterType	HashTable *		2005143	0					
ANR	2006648	Identifier	soap_headers		2005143	1					
ANR	2006649	CFGEntryNode	ENTRY		2005143		True				
ANR	2006650	CFGExitNode	EXIT		2005143		True				
ANR	2006651	CFGErrorNode	ERROR		2005143		True				
ANR	2006652	Symbol	* parameter		2005143						
ANR	2006653	Symbol	ht		2005143						
ANR	2006654	Symbol	hdrs		2005143						
ANR	2006655	Symbol	function -> requestParameters		2005143						
ANR	2006656	Symbol	tmp		2005143						
ANR	2006657	Symbol	function -> binding		2005143						
ANR	2006658	Symbol	fnb -> input . use		2005143						
ANR	2006659	Symbol	* doc		2005143						
ANR	2006660	Symbol	hdr_use		2005143						
ANR	2006661	Symbol	XSD_NS_PREFIX		2005143						
ANR	2006662	Symbol	method		2005143						
ANR	2006663	Symbol	fnb -> input . headers		2005143						
ANR	2006664	Symbol	hdr -> encode		2005143						
ANR	2006665	Symbol	xmlNewChild		2005143						
ANR	2006666	Symbol	version		2005143						
ANR	2006667	Symbol	SOAP_1_2_ENV_NAMESPACE		2005143						
ANR	2006668	Symbol	SOAP_1_2_ENC_NS_PREFIX		2005143						
ANR	2006669	Symbol	parameter -> element -> namens		2005143						
ANR	2006670	Symbol	envelope		2005143						
ANR	2006671	Symbol	doc		2005143						
ANR	2006672	Symbol	xmlCharStrdup		2005143						
ANR	2006673	Symbol	style		2005143						
ANR	2006674	Symbol	get_param		2005143						
ANR	2006675	Symbol	& key		2005143						
ANR	2006676	Symbol	* parameter -> element		2005143						
ANR	2006677	Symbol	nsptr		2005143						
ANR	2006678	Symbol	SOAP_1_1_ENC_NS_PREFIX		2005143						
ANR	2006679	Symbol	BINDING_SOAP		2005143						
ANR	2006680	Symbol	zend_hash_str_find		2005143						
ANR	2006681	Symbol	envelope -> ns		2005143						
ANR	2006682	Symbol	Z_STRLEN_P		2005143						
ANR	2006683	Symbol	key		2005143						
ANR	2006684	Symbol	* hdr		2005143						
ANR	2006685	Symbol	soap_headers		2005143						
ANR	2006686	Symbol	function -> requestName		2005143						
ANR	2006687	Symbol	* * function		2005143						
ANR	2006688	Symbol	SOAP_1_1		2005143						
ANR	2006689	Symbol	zend_hash_num_elements		2005143						
ANR	2006690	Symbol	h		2005143						
ANR	2006691	Symbol	i		2005143						
ANR	2006692	Symbol	xmlNewNode		2005143						
ANR	2006693	Symbol	uri		2005143						
ANR	2006694	Symbol	n		2005143						
ANR	2006695	Symbol	Z_LVAL_P		2005143						
ANR	2006696	Symbol	E_ERROR		2005143						
ANR	2006697	Symbol	* envelope		2005143						
ANR	2006698	Symbol	XSD_NAMESPACE		2005143						
ANR	2006699	Symbol	SOAP_1_2		2005143						
ANR	2006700	Symbol	IS_OBJECT		2005143						
ANR	2006701	Symbol	fnb -> style		2005143						
ANR	2006702	Symbol	arg_count		2005143						
ANR	2006703	Symbol	SOAP_1_2_ENV_NS_PREFIX		2005143						
ANR	2006704	Symbol	use		2005143						
ANR	2006705	Symbol	body		2005143						
ANR	2006706	Symbol	key . s		2005143						
ANR	2006707	Symbol	fnb -> input . ns		2005143						
ANR	2006708	Symbol	function		2005143						
ANR	2006709	Symbol	xmlNewDoc		2005143						
ANR	2006710	Symbol	fnb		2005143						
ANR	2006711	Symbol	IS_STRING		2005143						
ANR	2006712	Symbol	SOAP_RPC		2005143						
ANR	2006713	Symbol	zend_hash_find_ptr		2005143						
ANR	2006714	Symbol	parameter -> element		2005143						
ANR	2006715	Symbol	NULL		2005143						
ANR	2006716	Symbol	xmlNewDocNode		2005143						
ANR	2006717	Symbol	parameter -> element -> name		2005143						
ANR	2006718	Symbol	doc -> charset		2005143						
ANR	2006719	Symbol	serialize_parameter		2005143						
ANR	2006720	Symbol	doc -> encoding		2005143						
ANR	2006721	Symbol	SOAP_LITERAL		2005143						
ANR	2006722	Symbol	name		2005143						
ANR	2006723	Symbol	header		2005143						
ANR	2006724	Symbol	BAD_CAST		2005143						
ANR	2006725	Symbol	XML_CHAR_ENCODING_UTF8		2005143						
ANR	2006726	Symbol	SOAP_1_1_ENV_NAMESPACE		2005143						
ANR	2006727	Symbol	fnb -> input		2005143						
ANR	2006728	Symbol	ns		2005143						
ANR	2006729	Symbol	zstyle		2005143						
ANR	2006730	Symbol	head		2005143						
ANR	2006731	Symbol	param		2005143						
ANR	2006732	Symbol	IS_LONG		2005143						
ANR	2006733	Symbol	parameter		2005143						
ANR	2006734	Symbol	* * parameter		2005143						
ANR	2006735	Symbol	enc		2005143						
ANR	2006736	Symbol	master_to_xml		2005143						
ANR	2006737	Symbol	hdr -> use		2005143						
ANR	2006738	Symbol	function -> functionName		2005143						
ANR	2006739	Symbol	encode_add_ns		2005143						
ANR	2006740	Symbol	SOAP_1_1_ENC_NAMESPACE		2005143						
ANR	2006741	Symbol	* function		2005143						
ANR	2006742	Symbol	function -> binding -> bindingType		2005143						
ANR	2006743	Symbol	Z_OBJPROP_P		2005143						
ANR	2006744	Symbol	Z_TYPE_P		2005143						
ANR	2006745	Symbol	Z_STRVAL_P		2005143						
ANR	2006746	Symbol	this_ptr		2005143						
ANR	2006747	Symbol	zuse		2005143						
ANR	2006748	Symbol	xmlNewNs		2005143						
ANR	2006749	Symbol	SOAP_DOCUMENT		2005143						
ANR	2006750	Symbol	function_name		2005143						
ANR	2006751	Symbol	hdr		2005143						
ANR	2006752	Symbol	SOAP_1_1_ENV_NS_PREFIX		2005143						
ANR	2006753	Symbol	arguments		2005143						
ANR	2006754	Symbol	SOAP_ENCODED		2005143						
ANR	2006755	Symbol	FALSE		2005143						
ANR	2006756	Symbol	SOAP_1_2_ENC_NAMESPACE		2005143						
ANR	2006757	Symbol	* fnb		2005143						
ANR	2006758	Symbol	* function -> binding		2005143						
ANR	2006759	Symbol	function -> bindingAttributes		2005143						
ANR	2006760	Function	serialize_parameter	4406:0:147452:148476							
ANR	2006761	FunctionDef	"serialize_parameter (sdlParamPtr param , zval * param_val , int index , char * name , int style , xmlNodePtr parent)"		2006760	0					
ANR	2006762	CompoundStatement		4407:0:147579:148476	2006760	0					
ANR	2006763	IdentifierDeclStatement	char * paramName ;	4408:1:147582:147597	2006760	0	True				
ANR	2006764	IdentifierDecl	* paramName		2006760	0					
ANR	2006765	IdentifierDeclType	char *		2006760	0					
ANR	2006766	Identifier	paramName		2006760	1					
ANR	2006767	IdentifierDeclStatement	xmlNodePtr xmlParam ;	4409:1:147600:147619	2006760	1	True				
ANR	2006768	IdentifierDecl	xmlParam		2006760	0					
ANR	2006769	IdentifierDeclType	xmlNodePtr		2006760	0					
ANR	2006770	Identifier	xmlParam		2006760	1					
ANR	2006771	IdentifierDeclStatement	char paramNameBuf [ 10 ] ;	4410:1:147622:147643	2006760	2	True				
ANR	2006772	IdentifierDecl	paramNameBuf [ 10 ]		2006760	0					
ANR	2006773	IdentifierDeclType	char [ 10 ]		2006760	0					
ANR	2006774	Identifier	paramNameBuf		2006760	1					
ANR	2006775	PrimaryExpression	10		2006760	2					
ANR	2006776	IfStatement	if ( param_val && Z_TYPE_P ( param_val ) == IS_OBJECT && Z_OBJCE_P ( param_val ) == soap_param_class_entry )		2006760	3					
ANR	2006777	Condition	param_val && Z_TYPE_P ( param_val ) == IS_OBJECT && Z_OBJCE_P ( param_val ) == soap_param_class_entry	4412:5:147651:147755	2006760	0	True				
ANR	2006778	AndExpression	param_val && Z_TYPE_P ( param_val ) == IS_OBJECT && Z_OBJCE_P ( param_val ) == soap_param_class_entry		2006760	0		&&			
ANR	2006779	Identifier	param_val		2006760	0					
ANR	2006780	AndExpression	Z_TYPE_P ( param_val ) == IS_OBJECT && Z_OBJCE_P ( param_val ) == soap_param_class_entry		2006760	1		&&			
ANR	2006781	EqualityExpression	Z_TYPE_P ( param_val ) == IS_OBJECT		2006760	0		==			
ANR	2006782	CallExpression	Z_TYPE_P ( param_val )		2006760	0					
ANR	2006783	Callee	Z_TYPE_P		2006760	0					
ANR	2006784	Identifier	Z_TYPE_P		2006760	0					
ANR	2006785	ArgumentList	param_val		2006760	1					
ANR	2006786	Argument	param_val		2006760	0					
ANR	2006787	Identifier	param_val		2006760	0					
ANR	2006788	Identifier	IS_OBJECT		2006760	1					
ANR	2006789	EqualityExpression	Z_OBJCE_P ( param_val ) == soap_param_class_entry		2006760	1		==			
ANR	2006790	CallExpression	Z_OBJCE_P ( param_val )		2006760	0					
ANR	2006791	Callee	Z_OBJCE_P		2006760	0					
ANR	2006792	Identifier	Z_OBJCE_P		2006760	0					
ANR	2006793	ArgumentList	param_val		2006760	1					
ANR	2006794	Argument	param_val		2006760	0					
ANR	2006795	Identifier	param_val		2006760	0					
ANR	2006796	Identifier	soap_param_class_entry		2006760	1					
ANR	2006797	CompoundStatement		10:2:202:218	2006760	1					
ANR	2006798	IdentifierDeclStatement	zval * param_name ;	4415:2:147762:147778	2006760	0	True				
ANR	2006799	IdentifierDecl	* param_name		2006760	0					
ANR	2006800	IdentifierDeclType	zval *		2006760	0					
ANR	2006801	Identifier	param_name		2006760	1					
ANR	2006802	IdentifierDeclStatement	zval * param_data ;	4416:2:147782:147798	2006760	1	True				
ANR	2006803	IdentifierDecl	* param_data		2006760	0					
ANR	2006804	IdentifierDeclType	zval *		2006760	0					
ANR	2006805	Identifier	param_data		2006760	1					
ANR	2006806	IfStatement	"if ( ( param_name = zend_hash_str_find ( Z_OBJPROP_P ( param_val ) , ""param_name"" , sizeof ( ""param_name"" ) - 1 ) ) != NULL && Z_TYPE_P ( param_name ) == IS_STRING && ( param_data = zend_hash_str_find ( Z_OBJPROP_P ( param_val ) , ""param_data"" , sizeof ( ""param_data"" ) - 1 ) ) != NULL )"		2006760	2					
ANR	2006807	Condition	"( param_name = zend_hash_str_find ( Z_OBJPROP_P ( param_val ) , ""param_name"" , sizeof ( ""param_name"" ) - 1 ) ) != NULL && Z_TYPE_P ( param_name ) == IS_STRING && ( param_data = zend_hash_str_find ( Z_OBJPROP_P ( param_val ) , ""param_data"" , sizeof ( ""param_data"" ) - 1 ) ) != NULL"	4418:6:147807:148065	2006760	0	True				
ANR	2006808	AndExpression	"( param_name = zend_hash_str_find ( Z_OBJPROP_P ( param_val ) , ""param_name"" , sizeof ( ""param_name"" ) - 1 ) ) != NULL && Z_TYPE_P ( param_name ) == IS_STRING && ( param_data = zend_hash_str_find ( Z_OBJPROP_P ( param_val ) , ""param_data"" , sizeof ( ""param_data"" ) - 1 ) ) != NULL"		2006760	0		&&			
ANR	2006809	EqualityExpression	"( param_name = zend_hash_str_find ( Z_OBJPROP_P ( param_val ) , ""param_name"" , sizeof ( ""param_name"" ) - 1 ) ) != NULL"		2006760	0		!=			
ANR	2006810	AssignmentExpression	"param_name = zend_hash_str_find ( Z_OBJPROP_P ( param_val ) , ""param_name"" , sizeof ( ""param_name"" ) - 1 )"		2006760	0		=			
ANR	2006811	Identifier	param_name		2006760	0					
ANR	2006812	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( param_val ) , ""param_name"" , sizeof ( ""param_name"" ) - 1 )"		2006760	1					
ANR	2006813	Callee	zend_hash_str_find		2006760	0					
ANR	2006814	Identifier	zend_hash_str_find		2006760	0					
ANR	2006815	ArgumentList	Z_OBJPROP_P ( param_val )		2006760	1					
ANR	2006816	Argument	Z_OBJPROP_P ( param_val )		2006760	0					
ANR	2006817	CallExpression	Z_OBJPROP_P ( param_val )		2006760	0					
ANR	2006818	Callee	Z_OBJPROP_P		2006760	0					
ANR	2006819	Identifier	Z_OBJPROP_P		2006760	0					
ANR	2006820	ArgumentList	param_val		2006760	1					
ANR	2006821	Argument	param_val		2006760	0					
ANR	2006822	Identifier	param_val		2006760	0					
ANR	2006823	Argument	"""param_name"""		2006760	1					
ANR	2006824	PrimaryExpression	"""param_name"""		2006760	0					
ANR	2006825	Argument	"sizeof ( ""param_name"" ) - 1"		2006760	2					
ANR	2006826	AdditiveExpression	"sizeof ( ""param_name"" ) - 1"		2006760	0		-			
ANR	2006827	SizeofExpression	"sizeof ( ""param_name"" )"		2006760	0					
ANR	2006828	Sizeof	sizeof		2006760	0					
ANR	2006829	PrimaryExpression	"""param_name"""		2006760	1					
ANR	2006830	PrimaryExpression	1		2006760	1					
ANR	2006831	Identifier	NULL		2006760	1					
ANR	2006832	AndExpression	"Z_TYPE_P ( param_name ) == IS_STRING && ( param_data = zend_hash_str_find ( Z_OBJPROP_P ( param_val ) , ""param_data"" , sizeof ( ""param_data"" ) - 1 ) ) != NULL"		2006760	1		&&			
ANR	2006833	EqualityExpression	Z_TYPE_P ( param_name ) == IS_STRING		2006760	0		==			
ANR	2006834	CallExpression	Z_TYPE_P ( param_name )		2006760	0					
ANR	2006835	Callee	Z_TYPE_P		2006760	0					
ANR	2006836	Identifier	Z_TYPE_P		2006760	0					
ANR	2006837	ArgumentList	param_name		2006760	1					
ANR	2006838	Argument	param_name		2006760	0					
ANR	2006839	Identifier	param_name		2006760	0					
ANR	2006840	Identifier	IS_STRING		2006760	1					
ANR	2006841	EqualityExpression	"( param_data = zend_hash_str_find ( Z_OBJPROP_P ( param_val ) , ""param_data"" , sizeof ( ""param_data"" ) - 1 ) ) != NULL"		2006760	1		!=			
ANR	2006842	AssignmentExpression	"param_data = zend_hash_str_find ( Z_OBJPROP_P ( param_val ) , ""param_data"" , sizeof ( ""param_data"" ) - 1 )"		2006760	0		=			
ANR	2006843	Identifier	param_data		2006760	0					
ANR	2006844	CallExpression	"zend_hash_str_find ( Z_OBJPROP_P ( param_val ) , ""param_data"" , sizeof ( ""param_data"" ) - 1 )"		2006760	1					
ANR	2006845	Callee	zend_hash_str_find		2006760	0					
ANR	2006846	Identifier	zend_hash_str_find		2006760	0					
ANR	2006847	ArgumentList	Z_OBJPROP_P ( param_val )		2006760	1					
ANR	2006848	Argument	Z_OBJPROP_P ( param_val )		2006760	0					
ANR	2006849	CallExpression	Z_OBJPROP_P ( param_val )		2006760	0					
ANR	2006850	Callee	Z_OBJPROP_P		2006760	0					
ANR	2006851	Identifier	Z_OBJPROP_P		2006760	0					
ANR	2006852	ArgumentList	param_val		2006760	1					
ANR	2006853	Argument	param_val		2006760	0					
ANR	2006854	Identifier	param_val		2006760	0					
ANR	2006855	Argument	"""param_data"""		2006760	1					
ANR	2006856	PrimaryExpression	"""param_data"""		2006760	0					
ANR	2006857	Argument	"sizeof ( ""param_data"" ) - 1"		2006760	2					
ANR	2006858	AdditiveExpression	"sizeof ( ""param_data"" ) - 1"		2006760	0		-			
ANR	2006859	SizeofExpression	"sizeof ( ""param_data"" )"		2006760	0					
ANR	2006860	Sizeof	sizeof		2006760	0					
ANR	2006861	PrimaryExpression	"""param_data"""		2006760	1					
ANR	2006862	PrimaryExpression	1		2006760	1					
ANR	2006863	Identifier	NULL		2006760	1					
ANR	2006864	CompoundStatement		14:111:488:488	2006760	1					
ANR	2006865	ExpressionStatement	param_val = param_data	4421:3:148073:148095	2006760	0	True				
ANR	2006866	AssignmentExpression	param_val = param_data		2006760	0		=			
ANR	2006867	Identifier	param_val		2006760	0					
ANR	2006868	Identifier	param_data		2006760	1					
ANR	2006869	ExpressionStatement	name = Z_STRVAL_P ( param_name )	4422:3:148100:148129	2006760	1	True				
ANR	2006870	AssignmentExpression	name = Z_STRVAL_P ( param_name )		2006760	0		=			
ANR	2006871	Identifier	name		2006760	0					
ANR	2006872	CallExpression	Z_STRVAL_P ( param_name )		2006760	1					
ANR	2006873	Callee	Z_STRVAL_P		2006760	0					
ANR	2006874	Identifier	Z_STRVAL_P		2006760	0					
ANR	2006875	ArgumentList	param_name		2006760	1					
ANR	2006876	Argument	param_name		2006760	0					
ANR	2006877	Identifier	param_name		2006760	0					
ANR	2006878	IfStatement	if ( param != NULL && param -> paramName != NULL )		2006760	4					
ANR	2006879	Condition	param != NULL && param -> paramName != NULL	4426:5:148144:148184	2006760	0	True				
ANR	2006880	AndExpression	param != NULL && param -> paramName != NULL		2006760	0		&&			
ANR	2006881	EqualityExpression	param != NULL		2006760	0		!=			
ANR	2006882	Identifier	param		2006760	0					
ANR	2006883	Identifier	NULL		2006760	1					
ANR	2006884	EqualityExpression	param -> paramName != NULL		2006760	1		!=			
ANR	2006885	PtrMemberAccess	param -> paramName		2006760	0					
ANR	2006886	Identifier	param		2006760	0					
ANR	2006887	Identifier	paramName		2006760	1					
ANR	2006888	Identifier	NULL		2006760	1					
ANR	2006889	CompoundStatement		20:48:607:607	2006760	1					
ANR	2006890	ExpressionStatement	paramName = param -> paramName	4427:2:148191:148219	2006760	0	True				
ANR	2006891	AssignmentExpression	paramName = param -> paramName		2006760	0		=			
ANR	2006892	Identifier	paramName		2006760	0					
ANR	2006893	PtrMemberAccess	param -> paramName		2006760	1					
ANR	2006894	Identifier	param		2006760	0					
ANR	2006895	Identifier	paramName		2006760	1					
ANR	2006896	ElseStatement	else		2006760	0					
ANR	2006897	CompoundStatement		22:8:649:649	2006760	0					
ANR	2006898	IfStatement	if ( name == NULL )		2006760	0					
ANR	2006899	Condition	name == NULL	4429:6:148237:148248	2006760	0	True				
ANR	2006900	EqualityExpression	name == NULL		2006760	0		==			
ANR	2006901	Identifier	name		2006760	0					
ANR	2006902	Identifier	NULL		2006760	1					
ANR	2006903	CompoundStatement		23:20:671:671	2006760	1					
ANR	2006904	ExpressionStatement	paramName = paramNameBuf	4430:3:148256:148280	2006760	0	True				
ANR	2006905	AssignmentExpression	paramName = paramNameBuf		2006760	0		=			
ANR	2006906	Identifier	paramName		2006760	0					
ANR	2006907	Identifier	paramNameBuf		2006760	1					
ANR	2006908	ExpressionStatement	"snprintf ( paramName , sizeof ( paramNameBuf ) , ""param%d"" , index )"	4431:3:148285:148343	2006760	1	True				
ANR	2006909	CallExpression	"snprintf ( paramName , sizeof ( paramNameBuf ) , ""param%d"" , index )"		2006760	0					
ANR	2006910	Callee	snprintf		2006760	0					
ANR	2006911	Identifier	snprintf		2006760	0					
ANR	2006912	ArgumentList	paramName		2006760	1					
ANR	2006913	Argument	paramName		2006760	0					
ANR	2006914	Identifier	paramName		2006760	0					
ANR	2006915	Argument	sizeof ( paramNameBuf )		2006760	1					
ANR	2006916	SizeofExpression	sizeof ( paramNameBuf )		2006760	0					
ANR	2006917	Sizeof	sizeof		2006760	0					
ANR	2006918	SizeofOperand	paramNameBuf		2006760	1					
ANR	2006919	Argument	"""param%d"""		2006760	2					
ANR	2006920	PrimaryExpression	"""param%d"""		2006760	0					
ANR	2006921	Argument	index		2006760	3					
ANR	2006922	Identifier	index		2006760	0					
ANR	2006923	ElseStatement	else		2006760	0					
ANR	2006924	CompoundStatement		26:9:774:774	2006760	0					
ANR	2006925	ExpressionStatement	paramName = name	4433:3:148359:148375	2006760	0	True				
ANR	2006926	AssignmentExpression	paramName = name		2006760	0		=			
ANR	2006927	Identifier	paramName		2006760	0					
ANR	2006928	Identifier	name		2006760	1					
ANR	2006929	ExpressionStatement	"xmlParam = serialize_zval ( param_val , param , paramName , style , parent )"	4437:1:148386:148455	2006760	5	True				
ANR	2006930	AssignmentExpression	"xmlParam = serialize_zval ( param_val , param , paramName , style , parent )"		2006760	0		=			
ANR	2006931	Identifier	xmlParam		2006760	0					
ANR	2006932	CallExpression	"serialize_zval ( param_val , param , paramName , style , parent )"		2006760	1					
ANR	2006933	Callee	serialize_zval		2006760	0					
ANR	2006934	Identifier	serialize_zval		2006760	0					
ANR	2006935	ArgumentList	param_val		2006760	1					
ANR	2006936	Argument	param_val		2006760	0					
ANR	2006937	Identifier	param_val		2006760	0					
ANR	2006938	Argument	param		2006760	1					
ANR	2006939	Identifier	param		2006760	0					
ANR	2006940	Argument	paramName		2006760	2					
ANR	2006941	Identifier	paramName		2006760	0					
ANR	2006942	Argument	style		2006760	3					
ANR	2006943	Identifier	style		2006760	0					
ANR	2006944	Argument	parent		2006760	4					
ANR	2006945	Identifier	parent		2006760	0					
ANR	2006946	ReturnStatement	return xmlParam ;	4439:1:148459:148474	2006760	6	True				
ANR	2006947	Identifier	xmlParam		2006760	0					
ANR	2006948	ReturnType	static xmlNodePtr		2006760	1					
ANR	2006949	Identifier	serialize_parameter		2006760	2					
ANR	2006950	ParameterList	"sdlParamPtr param , zval * param_val , int index , char * name , int style , xmlNodePtr parent"		2006760	3					
ANR	2006951	Parameter	sdlParamPtr param	4406:38:147490:147506	2006760	0	True				
ANR	2006952	ParameterType	sdlParamPtr		2006760	0					
ANR	2006953	Identifier	param		2006760	1					
ANR	2006954	Parameter	zval * param_val	4406:57:147509:147523	2006760	1	True				
ANR	2006955	ParameterType	zval *		2006760	0					
ANR	2006956	Identifier	param_val		2006760	1					
ANR	2006957	Parameter	int index	4406:74:147526:147534	2006760	2	True				
ANR	2006958	ParameterType	int		2006760	0					
ANR	2006959	Identifier	index		2006760	1					
ANR	2006960	Parameter	char * name	4406:85:147537:147546	2006760	3	True				
ANR	2006961	ParameterType	char *		2006760	0					
ANR	2006962	Identifier	name		2006760	1					
ANR	2006963	Parameter	int style	4406:97:147549:147557	2006760	4	True				
ANR	2006964	ParameterType	int		2006760	0					
ANR	2006965	Identifier	style		2006760	1					
ANR	2006966	Parameter	xmlNodePtr parent	4406:108:147560:147576	2006760	5	True				
ANR	2006967	ParameterType	xmlNodePtr		2006760	0					
ANR	2006968	Identifier	parent		2006760	1					
ANR	2006969	CFGEntryNode	ENTRY		2006760		True				
ANR	2006970	CFGExitNode	EXIT		2006760		True				
ANR	2006971	Symbol	parent		2006760						
ANR	2006972	Symbol	xmlParam		2006760						
ANR	2006973	Symbol	NULL		2006760						
ANR	2006974	Symbol	paramNameBuf		2006760						
ANR	2006975	Symbol	param_data		2006760						
ANR	2006976	Symbol	index		2006760						
ANR	2006977	Symbol	serialize_zval		2006760						
ANR	2006978	Symbol	paramName		2006760						
ANR	2006979	Symbol	Z_OBJPROP_P		2006760						
ANR	2006980	Symbol	param -> paramName		2006760						
ANR	2006981	Symbol	Z_TYPE_P		2006760						
ANR	2006982	Symbol	Z_STRVAL_P		2006760						
ANR	2006983	Symbol	* param		2006760						
ANR	2006984	Symbol	param_val		2006760						
ANR	2006985	Symbol	zend_hash_str_find		2006760						
ANR	2006986	Symbol	param		2006760						
ANR	2006987	Symbol	name		2006760						
ANR	2006988	Symbol	Z_OBJCE_P		2006760						
ANR	2006989	Symbol	style		2006760						
ANR	2006990	Symbol	soap_param_class_entry		2006760						
ANR	2006991	Symbol	IS_STRING		2006760						
ANR	2006992	Symbol	IS_OBJECT		2006760						
ANR	2006993	Symbol	param_name		2006760						
ANR	2006994	Function	serialize_zval	4442:0:148479:149232							
ANR	2006995	FunctionDef	"serialize_zval (zval * val , sdlParamPtr param , char * paramName , int style , xmlNodePtr parent)"		2006994	0					
ANR	2006996	CompoundStatement		4443:0:148589:149232	2006994	0					
ANR	2006997	IdentifierDeclStatement	xmlNodePtr xmlParam ;	4444:1:148592:148611	2006994	0	True				
ANR	2006998	IdentifierDecl	xmlParam		2006994	0					
ANR	2006999	IdentifierDeclType	xmlNodePtr		2006994	0					
ANR	2007000	Identifier	xmlParam		2006994	1					
ANR	2007001	IdentifierDeclStatement	encodePtr enc ;	4445:1:148614:148627	2006994	1	True				
ANR	2007002	IdentifierDecl	enc		2006994	0					
ANR	2007003	IdentifierDeclType	encodePtr		2006994	0					
ANR	2007004	Identifier	enc		2006994	1					
ANR	2007005	IdentifierDeclStatement	zval defval ;	4446:1:148630:148641	2006994	2	True				
ANR	2007006	IdentifierDecl	defval		2006994	0					
ANR	2007007	IdentifierDeclType	zval		2006994	0					
ANR	2007008	Identifier	defval		2006994	1					
ANR	2007009	ExpressionStatement	ZVAL_UNDEF ( & defval )	4448:1:148645:148664	2006994	3	True				
ANR	2007010	CallExpression	ZVAL_UNDEF ( & defval )		2006994	0					
ANR	2007011	Callee	ZVAL_UNDEF		2006994	0					
ANR	2007012	Identifier	ZVAL_UNDEF		2006994	0					
ANR	2007013	ArgumentList	& defval		2006994	1					
ANR	2007014	Argument	& defval		2006994	0					
ANR	2007015	UnaryOperationExpression	& defval		2006994	0					
ANR	2007016	UnaryOperator	&		2006994	0					
ANR	2007017	Identifier	defval		2006994	1					
ANR	2007018	IfStatement	if ( param != NULL )		2006994	4					
ANR	2007019	Condition	param != NULL	4449:5:148671:148683	2006994	0	True				
ANR	2007020	EqualityExpression	param != NULL		2006994	0		!=			
ANR	2007021	Identifier	param		2006994	0					
ANR	2007022	Identifier	NULL		2006994	1					
ANR	2007023	CompoundStatement		7:20:96:96	2006994	1					
ANR	2007024	ExpressionStatement	enc = param -> encode	4450:2:148690:148709	2006994	0	True				
ANR	2007025	AssignmentExpression	enc = param -> encode		2006994	0		=			
ANR	2007026	Identifier	enc		2006994	0					
ANR	2007027	PtrMemberAccess	param -> encode		2006994	1					
ANR	2007028	Identifier	param		2006994	0					
ANR	2007029	Identifier	encode		2006994	1					
ANR	2007030	IfStatement	if ( val == NULL )		2006994	1					
ANR	2007031	Condition	val == NULL	4451:6:148717:148727	2006994	0	True				
ANR	2007032	EqualityExpression	val == NULL		2006994	0		==			
ANR	2007033	Identifier	val		2006994	0					
ANR	2007034	Identifier	NULL		2006994	1					
ANR	2007035	CompoundStatement		9:19:140:140	2006994	1					
ANR	2007036	IfStatement	if ( param -> element )		2006994	0					
ANR	2007037	Condition	param -> element	4452:7:148739:148752	2006994	0	True				
ANR	2007038	PtrMemberAccess	param -> element		2006994	0					
ANR	2007039	Identifier	param		2006994	0					
ANR	2007040	Identifier	element		2006994	1					
ANR	2007041	CompoundStatement		10:23:165:165	2006994	1					
ANR	2007042	IfStatement	if ( param -> element -> fixed )		2006994	0					
ANR	2007043	Condition	param -> element -> fixed	4453:8:148765:148785	2006994	0	True				
ANR	2007044	PtrMemberAccess	param -> element -> fixed		2006994	0					
ANR	2007045	PtrMemberAccess	param -> element		2006994	0					
ANR	2007046	Identifier	param		2006994	0					
ANR	2007047	Identifier	element		2006994	1					
ANR	2007048	Identifier	fixed		2006994	1					
ANR	2007049	CompoundStatement		11:31:198:198	2006994	1					
ANR	2007050	ExpressionStatement	"ZVAL_STRING ( & defval , param -> element -> fixed )"	4454:5:148795:148838	2006994	0	True				
ANR	2007051	CallExpression	"ZVAL_STRING ( & defval , param -> element -> fixed )"		2006994	0					
ANR	2007052	Callee	ZVAL_STRING		2006994	0					
ANR	2007053	Identifier	ZVAL_STRING		2006994	0					
ANR	2007054	ArgumentList	& defval		2006994	1					
ANR	2007055	Argument	& defval		2006994	0					
ANR	2007056	UnaryOperationExpression	& defval		2006994	0					
ANR	2007057	UnaryOperator	&		2006994	0					
ANR	2007058	Identifier	defval		2006994	1					
ANR	2007059	Argument	param -> element -> fixed		2006994	1					
ANR	2007060	PtrMemberAccess	param -> element -> fixed		2006994	0					
ANR	2007061	PtrMemberAccess	param -> element		2006994	0					
ANR	2007062	Identifier	param		2006994	0					
ANR	2007063	Identifier	element		2006994	1					
ANR	2007064	Identifier	fixed		2006994	1					
ANR	2007065	ExpressionStatement	val = & defval	4455:5:148845:148858	2006994	1	True				
ANR	2007066	AssignmentExpression	val = & defval		2006994	0		=			
ANR	2007067	Identifier	val		2006994	0					
ANR	2007068	UnaryOperationExpression	& defval		2006994	1					
ANR	2007069	UnaryOperator	&		2006994	0					
ANR	2007070	Identifier	defval		2006994	1					
ANR	2007071	ElseStatement	else		2006994	0					
ANR	2007072	IfStatement	if ( param -> element -> def && ! param -> element -> nillable )		2006994	0					
ANR	2007073	Condition	param -> element -> def && ! param -> element -> nillable	4456:15:148875:148922	2006994	0	True				
ANR	2007074	AndExpression	param -> element -> def && ! param -> element -> nillable		2006994	0		&&			
ANR	2007075	PtrMemberAccess	param -> element -> def		2006994	0					
ANR	2007076	PtrMemberAccess	param -> element		2006994	0					
ANR	2007077	Identifier	param		2006994	0					
ANR	2007078	Identifier	element		2006994	1					
ANR	2007079	Identifier	def		2006994	1					
ANR	2007080	UnaryOperationExpression	! param -> element -> nillable		2006994	1					
ANR	2007081	UnaryOperator	!		2006994	0					
ANR	2007082	PtrMemberAccess	param -> element -> nillable		2006994	1					
ANR	2007083	PtrMemberAccess	param -> element		2006994	0					
ANR	2007084	Identifier	param		2006994	0					
ANR	2007085	Identifier	element		2006994	1					
ANR	2007086	Identifier	nillable		2006994	1					
ANR	2007087	CompoundStatement		14:65:335:335	2006994	1					
ANR	2007088	ExpressionStatement	"ZVAL_STRING ( & defval , param -> element -> def )"	4457:5:148932:148973	2006994	0	True				
ANR	2007089	CallExpression	"ZVAL_STRING ( & defval , param -> element -> def )"		2006994	0					
ANR	2007090	Callee	ZVAL_STRING		2006994	0					
ANR	2007091	Identifier	ZVAL_STRING		2006994	0					
ANR	2007092	ArgumentList	& defval		2006994	1					
ANR	2007093	Argument	& defval		2006994	0					
ANR	2007094	UnaryOperationExpression	& defval		2006994	0					
ANR	2007095	UnaryOperator	&		2006994	0					
ANR	2007096	Identifier	defval		2006994	1					
ANR	2007097	Argument	param -> element -> def		2006994	1					
ANR	2007098	PtrMemberAccess	param -> element -> def		2006994	0					
ANR	2007099	PtrMemberAccess	param -> element		2006994	0					
ANR	2007100	Identifier	param		2006994	0					
ANR	2007101	Identifier	element		2006994	1					
ANR	2007102	Identifier	def		2006994	1					
ANR	2007103	ExpressionStatement	val = & defval	4458:5:148980:148993	2006994	1	True				
ANR	2007104	AssignmentExpression	val = & defval		2006994	0		=			
ANR	2007105	Identifier	val		2006994	0					
ANR	2007106	UnaryOperationExpression	& defval		2006994	1					
ANR	2007107	UnaryOperator	&		2006994	0					
ANR	2007108	Identifier	defval		2006994	1					
ANR	2007109	ElseStatement	else		2006994	0					
ANR	2007110	CompoundStatement		20:8:428:428	2006994	0					
ANR	2007111	ExpressionStatement	enc = NULL	4463:2:149022:149032	2006994	0	True				
ANR	2007112	AssignmentExpression	enc = NULL		2006994	0		=			
ANR	2007113	Identifier	enc		2006994	0					
ANR	2007114	Identifier	NULL		2006994	1					
ANR	2007115	ExpressionStatement	"xmlParam = master_to_xml ( enc , val , style , parent )"	4465:1:149038:149087	2006994	5	True				
ANR	2007116	AssignmentExpression	"xmlParam = master_to_xml ( enc , val , style , parent )"		2006994	0		=			
ANR	2007117	Identifier	xmlParam		2006994	0					
ANR	2007118	CallExpression	"master_to_xml ( enc , val , style , parent )"		2006994	1					
ANR	2007119	Callee	master_to_xml		2006994	0					
ANR	2007120	Identifier	master_to_xml		2006994	0					
ANR	2007121	ArgumentList	enc		2006994	1					
ANR	2007122	Argument	enc		2006994	0					
ANR	2007123	Identifier	enc		2006994	0					
ANR	2007124	Argument	val		2006994	1					
ANR	2007125	Identifier	val		2006994	0					
ANR	2007126	Argument	style		2006994	2					
ANR	2007127	Identifier	style		2006994	0					
ANR	2007128	Argument	parent		2006994	3					
ANR	2007129	Identifier	parent		2006994	0					
ANR	2007130	ExpressionStatement	zval_ptr_dtor ( & defval )	4466:1:149090:149112	2006994	6	True				
ANR	2007131	CallExpression	zval_ptr_dtor ( & defval )		2006994	0					
ANR	2007132	Callee	zval_ptr_dtor		2006994	0					
ANR	2007133	Identifier	zval_ptr_dtor		2006994	0					
ANR	2007134	ArgumentList	& defval		2006994	1					
ANR	2007135	Argument	& defval		2006994	0					
ANR	2007136	UnaryOperationExpression	& defval		2006994	0					
ANR	2007137	UnaryOperator	&		2006994	0					
ANR	2007138	Identifier	defval		2006994	1					
ANR	2007139	IfStatement	"if ( ! strcmp ( ( char * ) xmlParam -> name , ""BOGUS"" ) )"		2006994	7					
ANR	2007140	Condition	"! strcmp ( ( char * ) xmlParam -> name , ""BOGUS"" )"	4467:5:149119:149157	2006994	0	True				
ANR	2007141	UnaryOperationExpression	"! strcmp ( ( char * ) xmlParam -> name , ""BOGUS"" )"		2006994	0					
ANR	2007142	UnaryOperator	!		2006994	0					
ANR	2007143	CallExpression	"strcmp ( ( char * ) xmlParam -> name , ""BOGUS"" )"		2006994	1					
ANR	2007144	Callee	strcmp		2006994	0					
ANR	2007145	Identifier	strcmp		2006994	0					
ANR	2007146	ArgumentList	( char * ) xmlParam -> name		2006994	1					
ANR	2007147	Argument	( char * ) xmlParam -> name		2006994	0					
ANR	2007148	CastExpression	( char * ) xmlParam -> name		2006994	0					
ANR	2007149	CastTarget	char *		2006994	0					
ANR	2007150	PtrMemberAccess	xmlParam -> name		2006994	1					
ANR	2007151	Identifier	xmlParam		2006994	0					
ANR	2007152	Identifier	name		2006994	1					
ANR	2007153	Argument	"""BOGUS"""		2006994	1					
ANR	2007154	PrimaryExpression	"""BOGUS"""		2006994	0					
ANR	2007155	CompoundStatement		25:46:570:570	2006994	1					
ANR	2007156	ExpressionStatement	"xmlNodeSetName ( xmlParam , BAD_CAST ( paramName ) )"	4468:2:149164:149209	2006994	0	True				
ANR	2007157	CallExpression	"xmlNodeSetName ( xmlParam , BAD_CAST ( paramName ) )"		2006994	0					
ANR	2007158	Callee	xmlNodeSetName		2006994	0					
ANR	2007159	Identifier	xmlNodeSetName		2006994	0					
ANR	2007160	ArgumentList	xmlParam		2006994	1					
ANR	2007161	Argument	xmlParam		2006994	0					
ANR	2007162	Identifier	xmlParam		2006994	0					
ANR	2007163	Argument	BAD_CAST ( paramName )		2006994	1					
ANR	2007164	CallExpression	BAD_CAST ( paramName )		2006994	0					
ANR	2007165	Callee	BAD_CAST		2006994	0					
ANR	2007166	Identifier	BAD_CAST		2006994	0					
ANR	2007167	ArgumentList	paramName		2006994	1					
ANR	2007168	Argument	paramName		2006994	0					
ANR	2007169	Identifier	paramName		2006994	0					
ANR	2007170	ReturnStatement	return xmlParam ;	4470:1:149215:149230	2006994	8	True				
ANR	2007171	Identifier	xmlParam		2006994	0					
ANR	2007172	ReturnType	static xmlNodePtr		2006994	1					
ANR	2007173	Identifier	serialize_zval		2006994	2					
ANR	2007174	ParameterList	"zval * val , sdlParamPtr param , char * paramName , int style , xmlNodePtr parent"		2006994	3					
ANR	2007175	Parameter	zval * val	4442:33:148512:148520	2006994	0	True				
ANR	2007176	ParameterType	zval *		2006994	0					
ANR	2007177	Identifier	val		2006994	1					
ANR	2007178	Parameter	sdlParamPtr param	4442:44:148523:148539	2006994	1	True				
ANR	2007179	ParameterType	sdlParamPtr		2006994	0					
ANR	2007180	Identifier	param		2006994	1					
ANR	2007181	Parameter	char * paramName	4442:63:148542:148556	2006994	2	True				
ANR	2007182	ParameterType	char *		2006994	0					
ANR	2007183	Identifier	paramName		2006994	1					
ANR	2007184	Parameter	int style	4442:80:148559:148567	2006994	3	True				
ANR	2007185	ParameterType	int		2006994	0					
ANR	2007186	Identifier	style		2006994	1					
ANR	2007187	Parameter	xmlNodePtr parent	4442:91:148570:148586	2006994	4	True				
ANR	2007188	ParameterType	xmlNodePtr		2006994	0					
ANR	2007189	Identifier	parent		2006994	1					
ANR	2007190	CFGEntryNode	ENTRY		2006994		True				
ANR	2007191	CFGExitNode	EXIT		2006994		True				
ANR	2007192	Symbol	val		2006994						
ANR	2007193	Symbol	strcmp		2006994						
ANR	2007194	Symbol	parent		2006994						
ANR	2007195	Symbol	xmlParam		2006994						
ANR	2007196	Symbol	NULL		2006994						
ANR	2007197	Symbol	* xmlParam		2006994						
ANR	2007198	Symbol	paramName		2006994						
ANR	2007199	Symbol	& defval		2006994						
ANR	2007200	Symbol	* param		2006994						
ANR	2007201	Symbol	* param -> element		2006994						
ANR	2007202	Symbol	param -> element -> def		2006994						
ANR	2007203	Symbol	param		2006994						
ANR	2007204	Symbol	param -> element -> fixed		2006994						
ANR	2007205	Symbol	defval		2006994						
ANR	2007206	Symbol	* * param		2006994						
ANR	2007207	Symbol	style		2006994						
ANR	2007208	Symbol	param -> element -> nillable		2006994						
ANR	2007209	Symbol	enc		2006994						
ANR	2007210	Symbol	param -> element		2006994						
ANR	2007211	Symbol	param -> encode		2006994						
ANR	2007212	Symbol	master_to_xml		2006994						
ANR	2007213	Symbol	xmlParam -> name		2006994						
ANR	2007214	Symbol	BAD_CAST		2006994						
ANR	2007215	Function	get_param	4473:0:149235:149973							
ANR	2007216	FunctionDef	"get_param (sdlFunctionPtr function , char * param_name , int index , int response)"		2007215	0					
ANR	2007217	CompoundStatement		4474:0:149332:149973	2007215	0					
ANR	2007218	IdentifierDeclStatement	sdlParamPtr tmp ;	4475:1:149335:149350	2007215	0	True				
ANR	2007219	IdentifierDecl	tmp		2007215	0					
ANR	2007220	IdentifierDeclType	sdlParamPtr		2007215	0					
ANR	2007221	Identifier	tmp		2007215	1					
ANR	2007222	IdentifierDeclStatement	HashTable * ht ;	4476:1:149353:149368	2007215	1	True				
ANR	2007223	IdentifierDecl	* ht		2007215	0					
ANR	2007224	IdentifierDeclType	HashTable *		2007215	0					
ANR	2007225	Identifier	ht		2007215	1					
ANR	2007226	IfStatement	if ( function == NULL )		2007215	2					
ANR	2007227	Condition	function == NULL	4478:5:149376:149391	2007215	0	True				
ANR	2007228	EqualityExpression	function == NULL		2007215	0		==			
ANR	2007229	Identifier	function		2007215	0					
ANR	2007230	Identifier	NULL		2007215	1					
ANR	2007231	CompoundStatement		5:23:61:61	2007215	1					
ANR	2007232	ReturnStatement	return NULL ;	4479:2:149398:149409	2007215	0	True				
ANR	2007233	Identifier	NULL		2007215	0					
ANR	2007234	IfStatement	if ( response == FALSE )		2007215	3					
ANR	2007235	Condition	response == FALSE	4482:5:149420:149436	2007215	0	True				
ANR	2007236	EqualityExpression	response == FALSE		2007215	0		==			
ANR	2007237	Identifier	response		2007215	0					
ANR	2007238	Identifier	FALSE		2007215	1					
ANR	2007239	CompoundStatement		9:24:106:106	2007215	1					
ANR	2007240	ExpressionStatement	ht = function -> requestParameters	4483:2:149443:149475	2007215	0	True				
ANR	2007241	AssignmentExpression	ht = function -> requestParameters		2007215	0		=			
ANR	2007242	Identifier	ht		2007215	0					
ANR	2007243	PtrMemberAccess	function -> requestParameters		2007215	1					
ANR	2007244	Identifier	function		2007215	0					
ANR	2007245	Identifier	requestParameters		2007215	1					
ANR	2007246	ElseStatement	else		2007215	0					
ANR	2007247	CompoundStatement		11:8:152:152	2007215	0					
ANR	2007248	ExpressionStatement	ht = function -> responseParameters	4485:2:149489:149522	2007215	0	True				
ANR	2007249	AssignmentExpression	ht = function -> responseParameters		2007215	0		=			
ANR	2007250	Identifier	ht		2007215	0					
ANR	2007251	PtrMemberAccess	function -> responseParameters		2007215	1					
ANR	2007252	Identifier	function		2007215	0					
ANR	2007253	Identifier	responseParameters		2007215	1					
ANR	2007254	IfStatement	if ( ht == NULL )		2007215	4					
ANR	2007255	Condition	ht == NULL	4488:5:149533:149542	2007215	0	True				
ANR	2007256	EqualityExpression	ht == NULL		2007215	0		==			
ANR	2007257	Identifier	ht		2007215	0					
ANR	2007258	Identifier	NULL		2007215	1					
ANR	2007259	CompoundStatement		15:17:212:212	2007215	1					
ANR	2007260	ReturnStatement	return NULL ;	4489:3:149550:149561	2007215	0	True				
ANR	2007261	Identifier	NULL		2007215	0					
ANR	2007262	IfStatement	if ( param_name != NULL )		2007215	5					
ANR	2007263	Condition	param_name != NULL	4492:5:149572:149589	2007215	0	True				
ANR	2007264	EqualityExpression	param_name != NULL		2007215	0		!=			
ANR	2007265	Identifier	param_name		2007215	0					
ANR	2007266	Identifier	NULL		2007215	1					
ANR	2007267	CompoundStatement		19:25:259:259	2007215	1					
ANR	2007268	IfStatement	"if ( ( tmp = zend_hash_str_find_ptr ( ht , param_name , strlen ( param_name ) ) ) != NULL )"		2007215	0					
ANR	2007269	Condition	"( tmp = zend_hash_str_find_ptr ( ht , param_name , strlen ( param_name ) ) ) != NULL"	4493:6:149600:149673	2007215	0	True				
ANR	2007270	EqualityExpression	"( tmp = zend_hash_str_find_ptr ( ht , param_name , strlen ( param_name ) ) ) != NULL"		2007215	0		!=			
ANR	2007271	AssignmentExpression	"tmp = zend_hash_str_find_ptr ( ht , param_name , strlen ( param_name ) )"		2007215	0		=			
ANR	2007272	Identifier	tmp		2007215	0					
ANR	2007273	CallExpression	"zend_hash_str_find_ptr ( ht , param_name , strlen ( param_name ) )"		2007215	1					
ANR	2007274	Callee	zend_hash_str_find_ptr		2007215	0					
ANR	2007275	Identifier	zend_hash_str_find_ptr		2007215	0					
ANR	2007276	ArgumentList	ht		2007215	1					
ANR	2007277	Argument	ht		2007215	0					
ANR	2007278	Identifier	ht		2007215	0					
ANR	2007279	Argument	param_name		2007215	1					
ANR	2007280	Identifier	param_name		2007215	0					
ANR	2007281	Argument	strlen ( param_name )		2007215	2					
ANR	2007282	CallExpression	strlen ( param_name )		2007215	0					
ANR	2007283	Callee	strlen		2007215	0					
ANR	2007284	Identifier	strlen		2007215	0					
ANR	2007285	ArgumentList	param_name		2007215	1					
ANR	2007286	Argument	param_name		2007215	0					
ANR	2007287	Identifier	param_name		2007215	0					
ANR	2007288	Identifier	NULL		2007215	1					
ANR	2007289	CompoundStatement		20:82:343:343	2007215	1					
ANR	2007290	ReturnStatement	return tmp ;	4494:3:149681:149691	2007215	0	True				
ANR	2007291	Identifier	tmp		2007215	0					
ANR	2007292	ElseStatement	else		2007215	0					
ANR	2007293	CompoundStatement		22:9:369:369	2007215	0					
ANR	2007294	Statement	ZEND_HASH_FOREACH_PTR	4496:3:149707:149727	2007215	0	True				
ANR	2007295	Statement	(	4496:24:149728:149728	2007215	1	True				
ANR	2007296	Statement	ht	4496:25:149729:149730	2007215	2	True				
ANR	2007297	Statement	","	4496:27:149731:149731	2007215	3	True				
ANR	2007298	Statement	tmp	4496:29:149733:149735	2007215	4	True				
ANR	2007299	Statement	)	4496:32:149736:149736	2007215	5	True				
ANR	2007300	CompoundStatement		23:34:405:405	2007215	6					
ANR	2007301	IfStatement	"if ( tmp -> paramName && strcmp ( param_name , tmp -> paramName ) == 0 )"		2007215	0					
ANR	2007302	Condition	"tmp -> paramName && strcmp ( param_name , tmp -> paramName ) == 0"	4497:8:149748:149804	2007215	0	True				
ANR	2007303	AndExpression	"tmp -> paramName && strcmp ( param_name , tmp -> paramName ) == 0"		2007215	0		&&			
ANR	2007304	PtrMemberAccess	tmp -> paramName		2007215	0					
ANR	2007305	Identifier	tmp		2007215	0					
ANR	2007306	Identifier	paramName		2007215	1					
ANR	2007307	EqualityExpression	"strcmp ( param_name , tmp -> paramName ) == 0"		2007215	1		==			
ANR	2007308	CallExpression	"strcmp ( param_name , tmp -> paramName )"		2007215	0					
ANR	2007309	Callee	strcmp		2007215	0					
ANR	2007310	Identifier	strcmp		2007215	0					
ANR	2007311	ArgumentList	param_name		2007215	1					
ANR	2007312	Argument	param_name		2007215	0					
ANR	2007313	Identifier	param_name		2007215	0					
ANR	2007314	Argument	tmp -> paramName		2007215	1					
ANR	2007315	PtrMemberAccess	tmp -> paramName		2007215	0					
ANR	2007316	Identifier	tmp		2007215	0					
ANR	2007317	Identifier	paramName		2007215	1					
ANR	2007318	PrimaryExpression	0		2007215	1					
ANR	2007319	CompoundStatement		24:67:474:474	2007215	1					
ANR	2007320	ReturnStatement	return tmp ;	4498:5:149814:149824	2007215	0	True				
ANR	2007321	Identifier	tmp		2007215	0					
ANR	2007322	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	4500:5:149837:149860	2007215	7	True				
ANR	2007323	CallExpression	ZEND_HASH_FOREACH_END ( )		2007215	0					
ANR	2007324	Callee	ZEND_HASH_FOREACH_END		2007215	0					
ANR	2007325	Identifier	ZEND_HASH_FOREACH_END		2007215	0					
ANR	2007326	ArgumentList			2007215	1					
ANR	2007327	ElseStatement	else		2007215	0					
ANR	2007328	CompoundStatement		29:8:541:541	2007215	0					
ANR	2007329	IfStatement	"if ( ( tmp = zend_hash_index_find_ptr ( ht , index ) ) != NULL )"		2007215	0					
ANR	2007330	Condition	"( tmp = zend_hash_index_find_ptr ( ht , index ) ) != NULL"	4503:6:149882:149932	2007215	0	True				
ANR	2007331	EqualityExpression	"( tmp = zend_hash_index_find_ptr ( ht , index ) ) != NULL"		2007215	0		!=			
ANR	2007332	AssignmentExpression	"tmp = zend_hash_index_find_ptr ( ht , index )"		2007215	0		=			
ANR	2007333	Identifier	tmp		2007215	0					
ANR	2007334	CallExpression	"zend_hash_index_find_ptr ( ht , index )"		2007215	1					
ANR	2007335	Callee	zend_hash_index_find_ptr		2007215	0					
ANR	2007336	Identifier	zend_hash_index_find_ptr		2007215	0					
ANR	2007337	ArgumentList	ht		2007215	1					
ANR	2007338	Argument	ht		2007215	0					
ANR	2007339	Identifier	ht		2007215	0					
ANR	2007340	Argument	index		2007215	1					
ANR	2007341	Identifier	index		2007215	0					
ANR	2007342	Identifier	NULL		2007215	1					
ANR	2007343	CompoundStatement		30:59:602:602	2007215	1					
ANR	2007344	ReturnStatement	return tmp ;	4504:3:149940:149950	2007215	0	True				
ANR	2007345	Identifier	tmp		2007215	0					
ANR	2007346	ReturnStatement	return NULL ;	4507:1:149960:149971	2007215	6	True				
ANR	2007347	Identifier	NULL		2007215	0					
ANR	2007348	ReturnType	static sdlParamPtr		2007215	1					
ANR	2007349	Identifier	get_param		2007215	2					
ANR	2007350	ParameterList	"sdlFunctionPtr function , char * param_name , int index , int response"		2007215	3					
ANR	2007351	Parameter	sdlFunctionPtr function	4473:29:149264:149286	2007215	0	True				
ANR	2007352	ParameterType	sdlFunctionPtr		2007215	0					
ANR	2007353	Identifier	function		2007215	1					
ANR	2007354	Parameter	char * param_name	4473:54:149289:149304	2007215	1	True				
ANR	2007355	ParameterType	char *		2007215	0					
ANR	2007356	Identifier	param_name		2007215	1					
ANR	2007357	Parameter	int index	4473:72:149307:149315	2007215	2	True				
ANR	2007358	ParameterType	int		2007215	0					
ANR	2007359	Identifier	index		2007215	1					
ANR	2007360	Parameter	int response	4473:83:149318:149329	2007215	3	True				
ANR	2007361	ParameterType	int		2007215	0					
ANR	2007362	Identifier	response		2007215	1					
ANR	2007363	CFGEntryNode	ENTRY		2007215		True				
ANR	2007364	CFGExitNode	EXIT		2007215		True				
ANR	2007365	Symbol	strcmp		2007215						
ANR	2007366	Symbol	* tmp		2007215						
ANR	2007367	Symbol	NULL		2007215						
ANR	2007368	Symbol	* function		2007215						
ANR	2007369	Symbol	zend_hash_index_find_ptr		2007215						
ANR	2007370	Symbol	index		2007215						
ANR	2007371	Symbol	ht		2007215						
ANR	2007372	Symbol	function -> requestParameters		2007215						
ANR	2007373	Symbol	function -> responseParameters		2007215						
ANR	2007374	Symbol	strlen		2007215						
ANR	2007375	Symbol	response		2007215						
ANR	2007376	Symbol	tmp		2007215						
ANR	2007377	Symbol	function		2007215						
ANR	2007378	Symbol	zend_hash_str_find_ptr		2007215						
ANR	2007379	Symbol	FALSE		2007215						
ANR	2007380	Symbol	param_name		2007215						
ANR	2007381	Symbol	tmp -> paramName		2007215						
ANR	2007382	Function	get_function	4510:0:149976:150470							
ANR	2007383	FunctionDef	"get_function (sdlPtr sdl , const char * function_name)"		2007382	0					
ANR	2007384	CompoundStatement		4511:0:150050:150470	2007382	0					
ANR	2007385	IdentifierDeclStatement	sdlFunctionPtr tmp ;	4512:1:150053:150071	2007382	0	True				
ANR	2007386	IdentifierDecl	tmp		2007382	0					
ANR	2007387	IdentifierDeclType	sdlFunctionPtr		2007382	0					
ANR	2007388	Identifier	tmp		2007382	1					
ANR	2007389	IdentifierDeclStatement	int len = strlen ( function_name ) ;	4514:1:150075:150106	2007382	1	True				
ANR	2007390	IdentifierDecl	len = strlen ( function_name )		2007382	0					
ANR	2007391	IdentifierDeclType	int		2007382	0					
ANR	2007392	Identifier	len		2007382	1					
ANR	2007393	AssignmentExpression	len = strlen ( function_name )		2007382	2		=			
ANR	2007394	Identifier	len		2007382	0					
ANR	2007395	CallExpression	strlen ( function_name )		2007382	1					
ANR	2007396	Callee	strlen		2007382	0					
ANR	2007397	Identifier	strlen		2007382	0					
ANR	2007398	ArgumentList	function_name		2007382	1					
ANR	2007399	Argument	function_name		2007382	0					
ANR	2007400	Identifier	function_name		2007382	0					
ANR	2007401	IdentifierDeclStatement	"char * str = estrndup ( function_name , len ) ;"	4515:1:150109:150148	2007382	2	True				
ANR	2007402	IdentifierDecl	"* str = estrndup ( function_name , len )"		2007382	0					
ANR	2007403	IdentifierDeclType	char *		2007382	0					
ANR	2007404	Identifier	str		2007382	1					
ANR	2007405	AssignmentExpression	"* str = estrndup ( function_name , len )"		2007382	2		=			
ANR	2007406	Identifier	str		2007382	0					
ANR	2007407	CallExpression	"estrndup ( function_name , len )"		2007382	1					
ANR	2007408	Callee	estrndup		2007382	0					
ANR	2007409	Identifier	estrndup		2007382	0					
ANR	2007410	ArgumentList	function_name		2007382	1					
ANR	2007411	Argument	function_name		2007382	0					
ANR	2007412	Identifier	function_name		2007382	0					
ANR	2007413	Argument	len		2007382	1					
ANR	2007414	Identifier	len		2007382	0					
ANR	2007415	ExpressionStatement	"php_strtolower ( str , len )"	4516:1:150151:150174	2007382	3	True				
ANR	2007416	CallExpression	"php_strtolower ( str , len )"		2007382	0					
ANR	2007417	Callee	php_strtolower		2007382	0					
ANR	2007418	Identifier	php_strtolower		2007382	0					
ANR	2007419	ArgumentList	str		2007382	1					
ANR	2007420	Argument	str		2007382	0					
ANR	2007421	Identifier	str		2007382	0					
ANR	2007422	Argument	len		2007382	1					
ANR	2007423	Identifier	len		2007382	0					
ANR	2007424	IfStatement	if ( sdl != NULL )		2007382	4					
ANR	2007425	Condition	sdl != NULL	4517:5:150181:150191	2007382	0	True				
ANR	2007426	EqualityExpression	sdl != NULL		2007382	0		!=			
ANR	2007427	Identifier	sdl		2007382	0					
ANR	2007428	Identifier	NULL		2007382	1					
ANR	2007429	CompoundStatement		7:18:143:143	2007382	1					
ANR	2007430	IfStatement	"if ( ( tmp = zend_hash_str_find_ptr ( & sdl -> functions , str , len ) ) != NULL )"		2007382	0					
ANR	2007431	Condition	"( tmp = zend_hash_str_find_ptr ( & sdl -> functions , str , len ) ) != NULL"	4518:6:150202:150266	2007382	0	True				
ANR	2007432	EqualityExpression	"( tmp = zend_hash_str_find_ptr ( & sdl -> functions , str , len ) ) != NULL"		2007382	0		!=			
ANR	2007433	AssignmentExpression	"tmp = zend_hash_str_find_ptr ( & sdl -> functions , str , len )"		2007382	0		=			
ANR	2007434	Identifier	tmp		2007382	0					
ANR	2007435	CallExpression	"zend_hash_str_find_ptr ( & sdl -> functions , str , len )"		2007382	1					
ANR	2007436	Callee	zend_hash_str_find_ptr		2007382	0					
ANR	2007437	Identifier	zend_hash_str_find_ptr		2007382	0					
ANR	2007438	ArgumentList	& sdl -> functions		2007382	1					
ANR	2007439	Argument	& sdl -> functions		2007382	0					
ANR	2007440	UnaryOperationExpression	& sdl -> functions		2007382	0					
ANR	2007441	UnaryOperator	&		2007382	0					
ANR	2007442	PtrMemberAccess	sdl -> functions		2007382	1					
ANR	2007443	Identifier	sdl		2007382	0					
ANR	2007444	Identifier	functions		2007382	1					
ANR	2007445	Argument	str		2007382	1					
ANR	2007446	Identifier	str		2007382	0					
ANR	2007447	Argument	len		2007382	2					
ANR	2007448	Identifier	len		2007382	0					
ANR	2007449	Identifier	NULL		2007382	1					
ANR	2007450	CompoundStatement		8:73:218:218	2007382	1					
ANR	2007451	ExpressionStatement	efree ( str )	4519:3:150274:150284	2007382	0	True				
ANR	2007452	CallExpression	efree ( str )		2007382	0					
ANR	2007453	Callee	efree		2007382	0					
ANR	2007454	Identifier	efree		2007382	0					
ANR	2007455	ArgumentList	str		2007382	1					
ANR	2007456	Argument	str		2007382	0					
ANR	2007457	Identifier	str		2007382	0					
ANR	2007458	ReturnStatement	return tmp ;	4520:3:150289:150299	2007382	1	True				
ANR	2007459	Identifier	tmp		2007382	0					
ANR	2007460	ElseStatement	else		2007382	0					
ANR	2007461	IfStatement	"if ( sdl -> requests != NULL && ( tmp = zend_hash_str_find_ptr ( sdl -> requests , str , len ) ) != NULL )"		2007382	0					
ANR	2007462	Condition	"sdl -> requests != NULL && ( tmp = zend_hash_str_find_ptr ( sdl -> requests , str , len ) ) != NULL"	4521:13:150314:150401	2007382	0	True				
ANR	2007463	AndExpression	"sdl -> requests != NULL && ( tmp = zend_hash_str_find_ptr ( sdl -> requests , str , len ) ) != NULL"		2007382	0		&&			
ANR	2007464	EqualityExpression	sdl -> requests != NULL		2007382	0		!=			
ANR	2007465	PtrMemberAccess	sdl -> requests		2007382	0					
ANR	2007466	Identifier	sdl		2007382	0					
ANR	2007467	Identifier	requests		2007382	1					
ANR	2007468	Identifier	NULL		2007382	1					
ANR	2007469	EqualityExpression	"( tmp = zend_hash_str_find_ptr ( sdl -> requests , str , len ) ) != NULL"		2007382	1		!=			
ANR	2007470	AssignmentExpression	"tmp = zend_hash_str_find_ptr ( sdl -> requests , str , len )"		2007382	0		=			
ANR	2007471	Identifier	tmp		2007382	0					
ANR	2007472	CallExpression	"zend_hash_str_find_ptr ( sdl -> requests , str , len )"		2007382	1					
ANR	2007473	Callee	zend_hash_str_find_ptr		2007382	0					
ANR	2007474	Identifier	zend_hash_str_find_ptr		2007382	0					
ANR	2007475	ArgumentList	sdl -> requests		2007382	1					
ANR	2007476	Argument	sdl -> requests		2007382	0					
ANR	2007477	PtrMemberAccess	sdl -> requests		2007382	0					
ANR	2007478	Identifier	sdl		2007382	0					
ANR	2007479	Identifier	requests		2007382	1					
ANR	2007480	Argument	str		2007382	1					
ANR	2007481	Identifier	str		2007382	0					
ANR	2007482	Argument	len		2007382	2					
ANR	2007483	Identifier	len		2007382	0					
ANR	2007484	Identifier	NULL		2007382	1					
ANR	2007485	CompoundStatement		11:103:353:353	2007382	1					
ANR	2007486	ExpressionStatement	efree ( str )	4522:3:150409:150419	2007382	0	True				
ANR	2007487	CallExpression	efree ( str )		2007382	0					
ANR	2007488	Callee	efree		2007382	0					
ANR	2007489	Identifier	efree		2007382	0					
ANR	2007490	ArgumentList	str		2007382	1					
ANR	2007491	Argument	str		2007382	0					
ANR	2007492	Identifier	str		2007382	0					
ANR	2007493	ReturnStatement	return tmp ;	4523:3:150424:150434	2007382	1	True				
ANR	2007494	Identifier	tmp		2007382	0					
ANR	2007495	ExpressionStatement	efree ( str )	4526:1:150444:150454	2007382	5	True				
ANR	2007496	CallExpression	efree ( str )		2007382	0					
ANR	2007497	Callee	efree		2007382	0					
ANR	2007498	Identifier	efree		2007382	0					
ANR	2007499	ArgumentList	str		2007382	1					
ANR	2007500	Argument	str		2007382	0					
ANR	2007501	Identifier	str		2007382	0					
ANR	2007502	ReturnStatement	return NULL ;	4527:1:150457:150468	2007382	6	True				
ANR	2007503	Identifier	NULL		2007382	0					
ANR	2007504	ReturnType	static sdlFunctionPtr		2007382	1					
ANR	2007505	Identifier	get_function		2007382	2					
ANR	2007506	ParameterList	"sdlPtr sdl , const char * function_name"		2007382	3					
ANR	2007507	Parameter	sdlPtr sdl	4510:35:150011:150020	2007382	0	True				
ANR	2007508	ParameterType	sdlPtr		2007382	0					
ANR	2007509	Identifier	sdl		2007382	1					
ANR	2007510	Parameter	const char * function_name	4510:47:150023:150047	2007382	1	True				
ANR	2007511	ParameterType	const char *		2007382	0					
ANR	2007512	Identifier	function_name		2007382	1					
ANR	2007513	CFGEntryNode	ENTRY		2007382		True				
ANR	2007514	CFGExitNode	EXIT		2007382		True				
ANR	2007515	Symbol	str		2007382						
ANR	2007516	Symbol	& sdl -> functions		2007382						
ANR	2007517	Symbol	strlen		2007382						
ANR	2007518	Symbol	estrndup		2007382						
ANR	2007519	Symbol	NULL		2007382						
ANR	2007520	Symbol	len		2007382						
ANR	2007521	Symbol	* sdl		2007382						
ANR	2007522	Symbol	tmp		2007382						
ANR	2007523	Symbol	sdl -> requests		2007382						
ANR	2007524	Symbol	function_name		2007382						
ANR	2007525	Symbol	zend_hash_str_find_ptr		2007382						
ANR	2007526	Symbol	sdl		2007382						
ANR	2007527	Function	get_doc_function	4530:0:150473:151979							
ANR	2007528	FunctionDef	"get_doc_function (sdlPtr sdl , xmlNodePtr params)"		2007527	0					
ANR	2007529	CompoundStatement		4531:0:150543:151979	2007527	0					
ANR	2007530	IfStatement	if ( sdl )		2007527	0					
ANR	2007531	Condition	sdl	4532:5:150550:150552	2007527	0	True				
ANR	2007532	Identifier	sdl		2007527	0					
ANR	2007533	CompoundStatement		4:2:37:57	2007527	1					
ANR	2007534	IdentifierDeclStatement	sdlFunctionPtr tmp ;	4533:2:150559:150577	2007527	0	True				
ANR	2007535	IdentifierDecl	tmp		2007527	0					
ANR	2007536	IdentifierDeclType	sdlFunctionPtr		2007527	0					
ANR	2007537	Identifier	tmp		2007527	1					
ANR	2007538	IdentifierDeclStatement	sdlParamPtr param ;	4534:2:150581:150601	2007527	1	True				
ANR	2007539	IdentifierDecl	param		2007527	0					
ANR	2007540	IdentifierDeclType	sdlParamPtr		2007527	0					
ANR	2007541	Identifier	param		2007527	1					
ANR	2007542	Statement	ZEND_HASH_FOREACH_PTR	4536:2:150606:150626	2007527	2	True				
ANR	2007543	Statement	(	4536:23:150627:150627	2007527	3	True				
ANR	2007544	Statement	&	4536:24:150628:150628	2007527	4	True				
ANR	2007545	Statement	sdl	4536:25:150629:150631	2007527	5	True				
ANR	2007546	Statement	->	4536:28:150632:150633	2007527	6	True				
ANR	2007547	Statement	functions	4536:30:150634:150642	2007527	7	True				
ANR	2007548	Statement	","	4536:39:150643:150643	2007527	8	True				
ANR	2007549	Statement	tmp	4536:41:150645:150647	2007527	9	True				
ANR	2007550	Statement	)	4536:44:150648:150648	2007527	10	True				
ANR	2007551	CompoundStatement		6:46:106:106	2007527	11					
ANR	2007552	IfStatement	if ( tmp -> binding && tmp -> binding -> bindingType == BINDING_SOAP )		2007527	0					
ANR	2007553	Condition	tmp -> binding && tmp -> binding -> bindingType == BINDING_SOAP	4537:7:150659:150715	2007527	0	True				
ANR	2007554	AndExpression	tmp -> binding && tmp -> binding -> bindingType == BINDING_SOAP		2007527	0		&&			
ANR	2007555	PtrMemberAccess	tmp -> binding		2007527	0					
ANR	2007556	Identifier	tmp		2007527	0					
ANR	2007557	Identifier	binding		2007527	1					
ANR	2007558	EqualityExpression	tmp -> binding -> bindingType == BINDING_SOAP		2007527	1		==			
ANR	2007559	PtrMemberAccess	tmp -> binding -> bindingType		2007527	0					
ANR	2007560	PtrMemberAccess	tmp -> binding		2007527	0					
ANR	2007561	Identifier	tmp		2007527	0					
ANR	2007562	Identifier	binding		2007527	1					
ANR	2007563	Identifier	bindingType		2007527	1					
ANR	2007564	Identifier	BINDING_SOAP		2007527	1					
ANR	2007565	CompoundStatement		8:4:180:261	2007527	1					
ANR	2007566	IdentifierDeclStatement	sdlSoapBindingFunctionPtr fnb = ( sdlSoapBindingFunctionPtr ) tmp -> bindingAttributes ;	4538:4:150724:150805	2007527	0	True				
ANR	2007567	IdentifierDecl	fnb = ( sdlSoapBindingFunctionPtr ) tmp -> bindingAttributes		2007527	0					
ANR	2007568	IdentifierDeclType	sdlSoapBindingFunctionPtr		2007527	0					
ANR	2007569	Identifier	fnb		2007527	1					
ANR	2007570	AssignmentExpression	fnb = ( sdlSoapBindingFunctionPtr ) tmp -> bindingAttributes		2007527	2		=			
ANR	2007571	Identifier	fnb		2007527	0					
ANR	2007572	CastExpression	( sdlSoapBindingFunctionPtr ) tmp -> bindingAttributes		2007527	1					
ANR	2007573	CastTarget	sdlSoapBindingFunctionPtr		2007527	0					
ANR	2007574	PtrMemberAccess	tmp -> bindingAttributes		2007527	1					
ANR	2007575	Identifier	tmp		2007527	0					
ANR	2007576	Identifier	bindingAttributes		2007527	1					
ANR	2007577	IfStatement	if ( fnb -> style == SOAP_DOCUMENT )		2007527	1					
ANR	2007578	Condition	fnb -> style == SOAP_DOCUMENT	4539:8:150815:150841	2007527	0	True				
ANR	2007579	EqualityExpression	fnb -> style == SOAP_DOCUMENT		2007527	0		==			
ANR	2007580	PtrMemberAccess	fnb -> style		2007527	0					
ANR	2007581	Identifier	fnb		2007527	0					
ANR	2007582	Identifier	style		2007527	1					
ANR	2007583	Identifier	SOAP_DOCUMENT		2007527	1					
ANR	2007584	CompoundStatement		9:37:300:300	2007527	1					
ANR	2007585	IfStatement	if ( params == NULL )		2007527	0					
ANR	2007586	Condition	params == NULL	4540:9:150855:150868	2007527	0	True				
ANR	2007587	EqualityExpression	params == NULL		2007527	0		==			
ANR	2007588	Identifier	params		2007527	0					
ANR	2007589	Identifier	NULL		2007527	1					
ANR	2007590	CompoundStatement		10:25:327:327	2007527	1					
ANR	2007591	IfStatement	if ( tmp -> requestParameters == NULL || zend_hash_num_elements ( tmp -> requestParameters ) == 0 )		2007527	0					
ANR	2007592	Condition	tmp -> requestParameters == NULL || zend_hash_num_elements ( tmp -> requestParameters ) == 0	4541:10:150883:150977	2007527	0	True				
ANR	2007593	OrExpression	tmp -> requestParameters == NULL || zend_hash_num_elements ( tmp -> requestParameters ) == 0		2007527	0		||			
ANR	2007594	EqualityExpression	tmp -> requestParameters == NULL		2007527	0		==			
ANR	2007595	PtrMemberAccess	tmp -> requestParameters		2007527	0					
ANR	2007596	Identifier	tmp		2007527	0					
ANR	2007597	Identifier	requestParameters		2007527	1					
ANR	2007598	Identifier	NULL		2007527	1					
ANR	2007599	EqualityExpression	zend_hash_num_elements ( tmp -> requestParameters ) == 0		2007527	1		==			
ANR	2007600	CallExpression	zend_hash_num_elements ( tmp -> requestParameters )		2007527	0					
ANR	2007601	Callee	zend_hash_num_elements		2007527	0					
ANR	2007602	Identifier	zend_hash_num_elements		2007527	0					
ANR	2007603	ArgumentList	tmp -> requestParameters		2007527	1					
ANR	2007604	Argument	tmp -> requestParameters		2007527	0					
ANR	2007605	PtrMemberAccess	tmp -> requestParameters		2007527	0					
ANR	2007606	Identifier	tmp		2007527	0					
ANR	2007607	Identifier	requestParameters		2007527	1					
ANR	2007608	PrimaryExpression	0		2007527	1					
ANR	2007609	CompoundStatement		12:63:436:436	2007527	1					
ANR	2007610	ReturnStatement	return tmp ;	4543:8:150990:151000	2007527	0	True				
ANR	2007611	Identifier	tmp		2007527	0					
ANR	2007612	ElseStatement	else		2007527	0					
ANR	2007613	IfStatement	if ( tmp -> requestParameters != NULL && zend_hash_num_elements ( tmp -> requestParameters ) > 0 )		2007527	0					
ANR	2007614	Condition	tmp -> requestParameters != NULL && zend_hash_num_elements ( tmp -> requestParameters ) > 0	4545:16:151026:151125	2007527	0	True				
ANR	2007615	AndExpression	tmp -> requestParameters != NULL && zend_hash_num_elements ( tmp -> requestParameters ) > 0		2007527	0		&&			
ANR	2007616	EqualityExpression	tmp -> requestParameters != NULL		2007527	0		!=			
ANR	2007617	PtrMemberAccess	tmp -> requestParameters		2007527	0					
ANR	2007618	Identifier	tmp		2007527	0					
ANR	2007619	Identifier	requestParameters		2007527	1					
ANR	2007620	Identifier	NULL		2007527	1					
ANR	2007621	RelationalExpression	zend_hash_num_elements ( tmp -> requestParameters ) > 0		2007527	1		>			
ANR	2007622	CallExpression	zend_hash_num_elements ( tmp -> requestParameters )		2007527	0					
ANR	2007623	Callee	zend_hash_num_elements		2007527	0					
ANR	2007624	Identifier	zend_hash_num_elements		2007527	0					
ANR	2007625	ArgumentList	tmp -> requestParameters		2007527	1					
ANR	2007626	Argument	tmp -> requestParameters		2007527	0					
ANR	2007627	PtrMemberAccess	tmp -> requestParameters		2007527	0					
ANR	2007628	Identifier	tmp		2007527	0					
ANR	2007629	Identifier	requestParameters		2007527	1					
ANR	2007630	PrimaryExpression	0		2007527	1					
ANR	2007631	CompoundStatement		18:6:610:634	2007527	1					
ANR	2007632	IdentifierDeclStatement	int ok = 1 ;	4547:6:151136:151146	2007527	0	True				
ANR	2007633	IdentifierDecl	ok = 1		2007527	0					
ANR	2007634	IdentifierDeclType	int		2007527	0					
ANR	2007635	Identifier	ok		2007527	1					
ANR	2007636	AssignmentExpression	ok = 1		2007527	2		=			
ANR	2007637	Identifier	ok		2007527	0					
ANR	2007638	PrimaryExpression	1		2007527	1					
ANR	2007639	IdentifierDeclStatement	xmlNodePtr node = params ;	4548:6:151154:151178	2007527	1	True				
ANR	2007640	IdentifierDecl	node = params		2007527	0					
ANR	2007641	IdentifierDeclType	xmlNodePtr		2007527	0					
ANR	2007642	Identifier	node		2007527	1					
ANR	2007643	AssignmentExpression	node = params		2007527	2		=			
ANR	2007644	Identifier	params		2007527	0					
ANR	2007645	Identifier	params		2007527	1					
ANR	2007646	Statement	ZEND_HASH_FOREACH_PTR	4550:6:151187:151207	2007527	2	True				
ANR	2007647	Statement	(	4550:27:151208:151208	2007527	3	True				
ANR	2007648	Statement	tmp	4550:28:151209:151211	2007527	4	True				
ANR	2007649	Statement	->	4550:31:151212:151213	2007527	5	True				
ANR	2007650	Statement	requestParameters	4550:33:151214:151230	2007527	6	True				
ANR	2007651	Statement	","	4550:50:151231:151231	2007527	7	True				
ANR	2007652	Statement	param	4550:52:151233:151237	2007527	8	True				
ANR	2007653	Statement	)	4550:57:151238:151238	2007527	9	True				
ANR	2007654	CompoundStatement		20:59:696:696	2007527	10					
ANR	2007655	IfStatement	if ( param -> element )		2007527	0					
ANR	2007656	Condition	param -> element	4551:11:151253:151266	2007527	0	True				
ANR	2007657	PtrMemberAccess	param -> element		2007527	0					
ANR	2007658	Identifier	param		2007527	0					
ANR	2007659	Identifier	element		2007527	1					
ANR	2007660	CompoundStatement		21:27:725:725	2007527	1					
ANR	2007661	IfStatement	"if ( strcmp ( param -> element -> name , ( char * ) node -> name ) != 0 )"		2007527	0					
ANR	2007662	Condition	"strcmp ( param -> element -> name , ( char * ) node -> name ) != 0"	4552:12:151283:151334	2007527	0	True				
ANR	2007663	EqualityExpression	"strcmp ( param -> element -> name , ( char * ) node -> name ) != 0"		2007527	0		!=			
ANR	2007664	CallExpression	"strcmp ( param -> element -> name , ( char * ) node -> name )"		2007527	0					
ANR	2007665	Callee	strcmp		2007527	0					
ANR	2007666	Identifier	strcmp		2007527	0					
ANR	2007667	ArgumentList	param -> element -> name		2007527	1					
ANR	2007668	Argument	param -> element -> name		2007527	0					
ANR	2007669	PtrMemberAccess	param -> element -> name		2007527	0					
ANR	2007670	PtrMemberAccess	param -> element		2007527	0					
ANR	2007671	Identifier	param		2007527	0					
ANR	2007672	Identifier	element		2007527	1					
ANR	2007673	Identifier	name		2007527	1					
ANR	2007674	Argument	( char * ) node -> name		2007527	1					
ANR	2007675	CastExpression	( char * ) node -> name		2007527	0					
ANR	2007676	CastTarget	char *		2007527	0					
ANR	2007677	PtrMemberAccess	node -> name		2007527	1					
ANR	2007678	Identifier	node		2007527	0					
ANR	2007679	Identifier	name		2007527	1					
ANR	2007680	PrimaryExpression	0		2007527	1					
ANR	2007681	CompoundStatement		22:66:793:793	2007527	1					
ANR	2007682	ExpressionStatement	ok = 0	4553:9:151348:151354	2007527	0	True				
ANR	2007683	AssignmentExpression	ok = 0		2007527	0		=			
ANR	2007684	Identifier	ok		2007527	0					
ANR	2007685	PrimaryExpression	0		2007527	1					
ANR	2007686	BreakStatement	break ;	4554:9:151365:151370	2007527	1	True				
ANR	2007687	IfStatement	if ( param -> element -> namens != NULL && node -> ns != NULL )		2007527	1					
ANR	2007688	Condition	param -> element -> namens != NULL && node -> ns != NULL	4556:12:151394:151443	2007527	0	True				
ANR	2007689	AndExpression	param -> element -> namens != NULL && node -> ns != NULL		2007527	0		&&			
ANR	2007690	EqualityExpression	param -> element -> namens != NULL		2007527	0		!=			
ANR	2007691	PtrMemberAccess	param -> element -> namens		2007527	0					
ANR	2007692	PtrMemberAccess	param -> element		2007527	0					
ANR	2007693	Identifier	param		2007527	0					
ANR	2007694	Identifier	element		2007527	1					
ANR	2007695	Identifier	namens		2007527	1					
ANR	2007696	Identifier	NULL		2007527	1					
ANR	2007697	EqualityExpression	node -> ns != NULL		2007527	1		!=			
ANR	2007698	PtrMemberAccess	node -> ns		2007527	0					
ANR	2007699	Identifier	node		2007527	0					
ANR	2007700	Identifier	ns		2007527	1					
ANR	2007701	Identifier	NULL		2007527	1					
ANR	2007702	CompoundStatement		26:64:902:902	2007527	1					
ANR	2007703	IfStatement	"if ( strcmp ( param -> element -> namens , ( char * ) node -> ns -> href ) != 0 )"		2007527	0					
ANR	2007704	Condition	"strcmp ( param -> element -> namens , ( char * ) node -> ns -> href ) != 0"	4557:13:151461:151518	2007527	0	True				
ANR	2007705	EqualityExpression	"strcmp ( param -> element -> namens , ( char * ) node -> ns -> href ) != 0"		2007527	0		!=			
ANR	2007706	CallExpression	"strcmp ( param -> element -> namens , ( char * ) node -> ns -> href )"		2007527	0					
ANR	2007707	Callee	strcmp		2007527	0					
ANR	2007708	Identifier	strcmp		2007527	0					
ANR	2007709	ArgumentList	param -> element -> namens		2007527	1					
ANR	2007710	Argument	param -> element -> namens		2007527	0					
ANR	2007711	PtrMemberAccess	param -> element -> namens		2007527	0					
ANR	2007712	PtrMemberAccess	param -> element		2007527	0					
ANR	2007713	Identifier	param		2007527	0					
ANR	2007714	Identifier	element		2007527	1					
ANR	2007715	Identifier	namens		2007527	1					
ANR	2007716	Argument	( char * ) node -> ns -> href		2007527	1					
ANR	2007717	CastExpression	( char * ) node -> ns -> href		2007527	0					
ANR	2007718	CastTarget	char *		2007527	0					
ANR	2007719	PtrMemberAccess	node -> ns -> href		2007527	1					
ANR	2007720	PtrMemberAccess	node -> ns		2007527	0					
ANR	2007721	Identifier	node		2007527	0					
ANR	2007722	Identifier	ns		2007527	1					
ANR	2007723	Identifier	href		2007527	1					
ANR	2007724	PrimaryExpression	0		2007527	1					
ANR	2007725	CompoundStatement		27:73:977:977	2007527	1					
ANR	2007726	ExpressionStatement	ok = 0	4558:10:151533:151539	2007527	0	True				
ANR	2007727	AssignmentExpression	ok = 0		2007527	0		=			
ANR	2007728	Identifier	ok		2007527	0					
ANR	2007729	PrimaryExpression	0		2007527	1					
ANR	2007730	BreakStatement	break ;	4559:10:151551:151556	2007527	1	True				
ANR	2007731	ElseStatement	else		2007527	0					
ANR	2007732	IfStatement	if ( ( void * ) param -> element -> namens != ( void * ) node -> ns )		2007527	0					
ANR	2007733	Condition	( void * ) param -> element -> namens != ( void * ) node -> ns	4561:19:151588:151635	2007527	0	True				
ANR	2007734	EqualityExpression	( void * ) param -> element -> namens != ( void * ) node -> ns		2007527	0		!=			
ANR	2007735	CastExpression	( void * ) param -> element -> namens		2007527	0					
ANR	2007736	CastTarget	void *		2007527	0					
ANR	2007737	PtrMemberAccess	param -> element -> namens		2007527	1					
ANR	2007738	PtrMemberAccess	param -> element		2007527	0					
ANR	2007739	Identifier	param		2007527	0					
ANR	2007740	Identifier	element		2007527	1					
ANR	2007741	Identifier	namens		2007527	1					
ANR	2007742	CastExpression	( void * ) node -> ns		2007527	1					
ANR	2007743	CastTarget	void *		2007527	0					
ANR	2007744	PtrMemberAccess	node -> ns		2007527	1					
ANR	2007745	Identifier	node		2007527	0					
ANR	2007746	Identifier	ns		2007527	1					
ANR	2007747	CompoundStatement		31:69:1094:1094	2007527	1					
ANR	2007748	ExpressionStatement	ok = 0	4562:9:151649:151655	2007527	0	True				
ANR	2007749	AssignmentExpression	ok = 0		2007527	0		=			
ANR	2007750	Identifier	ok		2007527	0					
ANR	2007751	PrimaryExpression	0		2007527	1					
ANR	2007752	BreakStatement	break ;	4563:9:151666:151671	2007527	1	True				
ANR	2007753	ElseStatement	else		2007527	0					
ANR	2007754	IfStatement	"if ( strcmp ( param -> paramName , ( char * ) node -> name ) != 0 )"		2007527	0					
ANR	2007755	Condition	"strcmp ( param -> paramName , ( char * ) node -> name ) != 0"	4565:18:151701:151748	2007527	0	True				
ANR	2007756	EqualityExpression	"strcmp ( param -> paramName , ( char * ) node -> name ) != 0"		2007527	0		!=			
ANR	2007757	CallExpression	"strcmp ( param -> paramName , ( char * ) node -> name )"		2007527	0					
ANR	2007758	Callee	strcmp		2007527	0					
ANR	2007759	Identifier	strcmp		2007527	0					
ANR	2007760	ArgumentList	param -> paramName		2007527	1					
ANR	2007761	Argument	param -> paramName		2007527	0					
ANR	2007762	PtrMemberAccess	param -> paramName		2007527	0					
ANR	2007763	Identifier	param		2007527	0					
ANR	2007764	Identifier	paramName		2007527	1					
ANR	2007765	Argument	( char * ) node -> name		2007527	1					
ANR	2007766	CastExpression	( char * ) node -> name		2007527	0					
ANR	2007767	CastTarget	char *		2007527	0					
ANR	2007768	PtrMemberAccess	node -> name		2007527	1					
ANR	2007769	Identifier	node		2007527	0					
ANR	2007770	Identifier	name		2007527	1					
ANR	2007771	PrimaryExpression	0		2007527	1					
ANR	2007772	CompoundStatement		35:68:1207:1207	2007527	1					
ANR	2007773	ExpressionStatement	ok = 0	4566:8:151761:151767	2007527	0	True				
ANR	2007774	AssignmentExpression	ok = 0		2007527	0		=			
ANR	2007775	Identifier	ok		2007527	0					
ANR	2007776	PrimaryExpression	0		2007527	1					
ANR	2007777	BreakStatement	break ;	4567:8:151777:151782	2007527	1	True				
ANR	2007778	ExpressionStatement	node = node -> next	4569:7:151800:151817	2007527	1	True				
ANR	2007779	AssignmentExpression	node = node -> next		2007527	0		=			
ANR	2007780	Identifier	node		2007527	0					
ANR	2007781	PtrMemberAccess	node -> next		2007527	1					
ANR	2007782	Identifier	node		2007527	0					
ANR	2007783	Identifier	next		2007527	1					
ANR	2007784	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	4570:8:151827:151850	2007527	11	True				
ANR	2007785	CallExpression	ZEND_HASH_FOREACH_END ( )		2007527	0					
ANR	2007786	Callee	ZEND_HASH_FOREACH_END		2007527	0					
ANR	2007787	Identifier	ZEND_HASH_FOREACH_END		2007527	0					
ANR	2007788	ArgumentList			2007527	1					
ANR	2007789	IfStatement	if ( ok )		2007527	12					
ANR	2007790	Condition	ok	4571:10:151862:151863	2007527	0	True				
ANR	2007791	Identifier	ok		2007527	0					
ANR	2007792	CompoundStatement		41:34:1342:1342	2007527	1					
ANR	2007793	ReturnStatement	return tmp ;	4572:7:151895:151905	2007527	0	True				
ANR	2007794	Identifier	tmp		2007527	0					
ANR	2007795	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	4577:4:151937:151960	2007527	12	True				
ANR	2007796	CallExpression	ZEND_HASH_FOREACH_END ( )		2007527	0					
ANR	2007797	Callee	ZEND_HASH_FOREACH_END		2007527	0					
ANR	2007798	Identifier	ZEND_HASH_FOREACH_END		2007527	0					
ANR	2007799	ArgumentList			2007527	1					
ANR	2007800	ReturnStatement	return NULL ;	4579:1:151966:151977	2007527	1	True				
ANR	2007801	Identifier	NULL		2007527	0					
ANR	2007802	ReturnType	static sdlFunctionPtr		2007527	1					
ANR	2007803	Identifier	get_doc_function		2007527	2					
ANR	2007804	ParameterList	"sdlPtr sdl , xmlNodePtr params"		2007527	3					
ANR	2007805	Parameter	sdlPtr sdl	4530:39:150512:150521	2007527	0	True				
ANR	2007806	ParameterType	sdlPtr		2007527	0					
ANR	2007807	Identifier	sdl		2007527	1					
ANR	2007808	Parameter	xmlNodePtr params	4530:51:150524:150540	2007527	1	True				
ANR	2007809	ParameterType	xmlNodePtr		2007527	0					
ANR	2007810	Identifier	params		2007527	1					
ANR	2007811	CFGEntryNode	ENTRY		2007527		True				
ANR	2007812	CFGExitNode	EXIT		2007527		True				
ANR	2007813	CFGErrorNode	ERROR		2007527		True				
ANR	2007814	Symbol	* tmp		2007527						
ANR	2007815	Symbol	node -> ns		2007527						
ANR	2007816	Symbol	tmp -> requestParameters		2007527						
ANR	2007817	Symbol	BINDING_SOAP		2007527						
ANR	2007818	Symbol	* tmp -> binding		2007527						
ANR	2007819	Symbol	param		2007527						
ANR	2007820	Symbol	tmp		2007527						
ANR	2007821	Symbol	* node		2007527						
ANR	2007822	Symbol	fnb		2007527						
ANR	2007823	Symbol	param -> element		2007527						
ANR	2007824	Symbol	ok		2007527						
ANR	2007825	Symbol	* node -> ns		2007527						
ANR	2007826	Symbol	strcmp		2007527						
ANR	2007827	Symbol	NULL		2007527						
ANR	2007828	Symbol	zend_hash_num_elements		2007527						
ANR	2007829	Symbol	param -> element -> namens		2007527						
ANR	2007830	Symbol	* * tmp		2007527						
ANR	2007831	Symbol	param -> paramName		2007527						
ANR	2007832	Symbol	node -> next		2007527						
ANR	2007833	Symbol	params		2007527						
ANR	2007834	Symbol	param -> element -> name		2007527						
ANR	2007835	Symbol	* param		2007527						
ANR	2007836	Symbol	* param -> element		2007527						
ANR	2007837	Symbol	node		2007527						
ANR	2007838	Symbol	node -> name		2007527						
ANR	2007839	Symbol	* * node		2007527						
ANR	2007840	Symbol	SOAP_DOCUMENT		2007527						
ANR	2007841	Symbol	tmp -> bindingAttributes		2007527						
ANR	2007842	Symbol	* * param		2007527						
ANR	2007843	Symbol	sdl		2007527						
ANR	2007844	Symbol	tmp -> binding		2007527						
ANR	2007845	Symbol	node -> ns -> href		2007527						
ANR	2007846	Symbol	tmp -> binding -> bindingType		2007527						
ANR	2007847	Symbol	* fnb		2007527						
ANR	2007848	Symbol	fnb -> style		2007527						
ANR	2007849	Function	function_to_string	4582:0:151982:153995							
ANR	2007850	FunctionDef	"function_to_string (sdlFunctionPtr function , smart_str * buf)"		2007849	0					
ANR	2007851	CompoundStatement		4583:0:152054:153995	2007849	0					
ANR	2007852	IdentifierDeclStatement	int i = 0 ;	4584:1:152057:152066	2007849	0	True				
ANR	2007853	IdentifierDecl	i = 0		2007849	0					
ANR	2007854	IdentifierDeclType	int		2007849	0					
ANR	2007855	Identifier	i		2007849	1					
ANR	2007856	AssignmentExpression	i = 0		2007849	2		=			
ANR	2007857	Identifier	i		2007849	0					
ANR	2007858	PrimaryExpression	0		2007849	1					
ANR	2007859	IdentifierDeclStatement	sdlParamPtr param ;	4585:1:152069:152086	2007849	1	True				
ANR	2007860	IdentifierDecl	param		2007849	0					
ANR	2007861	IdentifierDeclType	sdlParamPtr		2007849	0					
ANR	2007862	Identifier	param		2007849	1					
ANR	2007863	IfStatement	if ( function -> responseParameters && zend_hash_num_elements ( function -> responseParameters ) > 0 )		2007849	2					
ANR	2007864	Condition	function -> responseParameters && zend_hash_num_elements ( function -> responseParameters ) > 0	4587:5:152094:152186	2007849	0	True				
ANR	2007865	AndExpression	function -> responseParameters && zend_hash_num_elements ( function -> responseParameters ) > 0		2007849	0		&&			
ANR	2007866	PtrMemberAccess	function -> responseParameters		2007849	0					
ANR	2007867	Identifier	function		2007849	0					
ANR	2007868	Identifier	responseParameters		2007849	1					
ANR	2007869	RelationalExpression	zend_hash_num_elements ( function -> responseParameters ) > 0		2007849	1		>			
ANR	2007870	CallExpression	zend_hash_num_elements ( function -> responseParameters )		2007849	0					
ANR	2007871	Callee	zend_hash_num_elements		2007849	0					
ANR	2007872	Identifier	zend_hash_num_elements		2007849	0					
ANR	2007873	ArgumentList	function -> responseParameters		2007849	1					
ANR	2007874	Argument	function -> responseParameters		2007849	0					
ANR	2007875	PtrMemberAccess	function -> responseParameters		2007849	0					
ANR	2007876	Identifier	function		2007849	0					
ANR	2007877	Identifier	responseParameters		2007849	1					
ANR	2007878	PrimaryExpression	0		2007849	1					
ANR	2007879	CompoundStatement		6:63:134:134	2007849	1					
ANR	2007880	IfStatement	if ( zend_hash_num_elements ( function -> responseParameters ) == 1 )		2007849	0					
ANR	2007881	Condition	zend_hash_num_elements ( function -> responseParameters ) == 1	4589:6:152197:152253	2007849	0	True				
ANR	2007882	EqualityExpression	zend_hash_num_elements ( function -> responseParameters ) == 1		2007849	0		==			
ANR	2007883	CallExpression	zend_hash_num_elements ( function -> responseParameters )		2007849	0					
ANR	2007884	Callee	zend_hash_num_elements		2007849	0					
ANR	2007885	Identifier	zend_hash_num_elements		2007849	0					
ANR	2007886	ArgumentList	function -> responseParameters		2007849	1					
ANR	2007887	Argument	function -> responseParameters		2007849	0					
ANR	2007888	PtrMemberAccess	function -> responseParameters		2007849	0					
ANR	2007889	Identifier	function		2007849	0					
ANR	2007890	Identifier	responseParameters		2007849	1					
ANR	2007891	PrimaryExpression	1		2007849	1					
ANR	2007892	CompoundStatement		7:65:201:201	2007849	1					
ANR	2007893	ExpressionStatement	zend_hash_internal_pointer_reset ( function -> responseParameters )	4590:3:152261:152323	2007849	0	True				
ANR	2007894	CallExpression	zend_hash_internal_pointer_reset ( function -> responseParameters )		2007849	0					
ANR	2007895	Callee	zend_hash_internal_pointer_reset		2007849	0					
ANR	2007896	Identifier	zend_hash_internal_pointer_reset		2007849	0					
ANR	2007897	ArgumentList	function -> responseParameters		2007849	1					
ANR	2007898	Argument	function -> responseParameters		2007849	0					
ANR	2007899	PtrMemberAccess	function -> responseParameters		2007849	0					
ANR	2007900	Identifier	function		2007849	0					
ANR	2007901	Identifier	responseParameters		2007849	1					
ANR	2007902	ExpressionStatement	param = zend_hash_get_current_data_ptr ( function -> responseParameters )	4591:3:152328:152396	2007849	1	True				
ANR	2007903	AssignmentExpression	param = zend_hash_get_current_data_ptr ( function -> responseParameters )		2007849	0		=			
ANR	2007904	Identifier	param		2007849	0					
ANR	2007905	CallExpression	zend_hash_get_current_data_ptr ( function -> responseParameters )		2007849	1					
ANR	2007906	Callee	zend_hash_get_current_data_ptr		2007849	0					
ANR	2007907	Identifier	zend_hash_get_current_data_ptr		2007849	0					
ANR	2007908	ArgumentList	function -> responseParameters		2007849	1					
ANR	2007909	Argument	function -> responseParameters		2007849	0					
ANR	2007910	PtrMemberAccess	function -> responseParameters		2007849	0					
ANR	2007911	Identifier	function		2007849	0					
ANR	2007912	Identifier	responseParameters		2007849	1					
ANR	2007913	IfStatement	if ( param -> encode && param -> encode -> details . type_str )		2007849	2					
ANR	2007914	Condition	param -> encode && param -> encode -> details . type_str	4592:7:152405:152452	2007849	0	True				
ANR	2007915	AndExpression	param -> encode && param -> encode -> details . type_str		2007849	0		&&			
ANR	2007916	PtrMemberAccess	param -> encode		2007849	0					
ANR	2007917	Identifier	param		2007849	0					
ANR	2007918	Identifier	encode		2007849	1					
ANR	2007919	MemberAccess	param -> encode -> details . type_str		2007849	1					
ANR	2007920	PtrMemberAccess	param -> encode -> details		2007849	0					
ANR	2007921	PtrMemberAccess	param -> encode		2007849	0					
ANR	2007922	Identifier	param		2007849	0					
ANR	2007923	Identifier	encode		2007849	1					
ANR	2007924	Identifier	details		2007849	1					
ANR	2007925	Identifier	type_str		2007849	1					
ANR	2007926	CompoundStatement		10:57:400:400	2007849	1					
ANR	2007927	ExpressionStatement	"smart_str_appendl ( buf , param -> encode -> details . type_str , strlen ( param -> encode -> details . type_str ) )"	4593:4:152461:152557	2007849	0	True				
ANR	2007928	CallExpression	"smart_str_appendl ( buf , param -> encode -> details . type_str , strlen ( param -> encode -> details . type_str ) )"		2007849	0					
ANR	2007929	Callee	smart_str_appendl		2007849	0					
ANR	2007930	Identifier	smart_str_appendl		2007849	0					
ANR	2007931	ArgumentList	buf		2007849	1					
ANR	2007932	Argument	buf		2007849	0					
ANR	2007933	Identifier	buf		2007849	0					
ANR	2007934	Argument	param -> encode -> details . type_str		2007849	1					
ANR	2007935	MemberAccess	param -> encode -> details . type_str		2007849	0					
ANR	2007936	PtrMemberAccess	param -> encode -> details		2007849	0					
ANR	2007937	PtrMemberAccess	param -> encode		2007849	0					
ANR	2007938	Identifier	param		2007849	0					
ANR	2007939	Identifier	encode		2007849	1					
ANR	2007940	Identifier	details		2007849	1					
ANR	2007941	Identifier	type_str		2007849	1					
ANR	2007942	Argument	strlen ( param -> encode -> details . type_str )		2007849	2					
ANR	2007943	CallExpression	strlen ( param -> encode -> details . type_str )		2007849	0					
ANR	2007944	Callee	strlen		2007849	0					
ANR	2007945	Identifier	strlen		2007849	0					
ANR	2007946	ArgumentList	param -> encode -> details . type_str		2007849	1					
ANR	2007947	Argument	param -> encode -> details . type_str		2007849	0					
ANR	2007948	MemberAccess	param -> encode -> details . type_str		2007849	0					
ANR	2007949	PtrMemberAccess	param -> encode -> details		2007849	0					
ANR	2007950	PtrMemberAccess	param -> encode		2007849	0					
ANR	2007951	Identifier	param		2007849	0					
ANR	2007952	Identifier	encode		2007849	1					
ANR	2007953	Identifier	details		2007849	1					
ANR	2007954	Identifier	type_str		2007849	1					
ANR	2007955	ExpressionStatement	"smart_str_appendc ( buf , ' ' )"	4594:4:152563:152590	2007849	1	True				
ANR	2007956	CallExpression	"smart_str_appendc ( buf , ' ' )"		2007849	0					
ANR	2007957	Callee	smart_str_appendc		2007849	0					
ANR	2007958	Identifier	smart_str_appendc		2007849	0					
ANR	2007959	ArgumentList	buf		2007849	1					
ANR	2007960	Argument	buf		2007849	0					
ANR	2007961	Identifier	buf		2007849	0					
ANR	2007962	Argument	' '		2007849	1					
ANR	2007963	PrimaryExpression	' '		2007849	0					
ANR	2007964	ElseStatement	else		2007849	0					
ANR	2007965	CompoundStatement		13:10:547:547	2007849	0					
ANR	2007966	ExpressionStatement	"smart_str_appendl ( buf , ""UNKNOWN "" , 8 )"	4596:4:152608:152645	2007849	0	True				
ANR	2007967	CallExpression	"smart_str_appendl ( buf , ""UNKNOWN "" , 8 )"		2007849	0					
ANR	2007968	Callee	smart_str_appendl		2007849	0					
ANR	2007969	Identifier	smart_str_appendl		2007849	0					
ANR	2007970	ArgumentList	buf		2007849	1					
ANR	2007971	Argument	buf		2007849	0					
ANR	2007972	Identifier	buf		2007849	0					
ANR	2007973	Argument	"""UNKNOWN """		2007849	1					
ANR	2007974	PrimaryExpression	"""UNKNOWN """		2007849	0					
ANR	2007975	Argument	8		2007849	2					
ANR	2007976	PrimaryExpression	8		2007849	0					
ANR	2007977	ElseStatement	else		2007849	0					
ANR	2007978	CompoundStatement		16:9:606:606	2007849	0					
ANR	2007979	ExpressionStatement	i = 0	4599:3:152666:152671	2007849	0	True				
ANR	2007980	AssignmentExpression	i = 0		2007849	0		=			
ANR	2007981	Identifier	i		2007849	0					
ANR	2007982	PrimaryExpression	0		2007849	1					
ANR	2007983	ExpressionStatement	"smart_str_appendl ( buf , ""list("" , 5 )"	4600:3:152676:152710	2007849	1	True				
ANR	2007984	CallExpression	"smart_str_appendl ( buf , ""list("" , 5 )"		2007849	0					
ANR	2007985	Callee	smart_str_appendl		2007849	0					
ANR	2007986	Identifier	smart_str_appendl		2007849	0					
ANR	2007987	ArgumentList	buf		2007849	1					
ANR	2007988	Argument	buf		2007849	0					
ANR	2007989	Identifier	buf		2007849	0					
ANR	2007990	Argument	"""list("""		2007849	1					
ANR	2007991	PrimaryExpression	"""list("""		2007849	0					
ANR	2007992	Argument	5		2007849	2					
ANR	2007993	PrimaryExpression	5		2007849	0					
ANR	2007994	Statement	ZEND_HASH_FOREACH_PTR	4601:3:152715:152735	2007849	2	True				
ANR	2007995	Statement	(	4601:24:152736:152736	2007849	3	True				
ANR	2007996	Statement	function	4601:25:152737:152744	2007849	4	True				
ANR	2007997	Statement	->	4601:33:152745:152746	2007849	5	True				
ANR	2007998	Statement	responseParameters	4601:35:152747:152764	2007849	6	True				
ANR	2007999	Statement	","	4601:53:152765:152765	2007849	7	True				
ANR	2008000	Statement	param	4601:55:152767:152771	2007849	8	True				
ANR	2008001	Statement	)	4601:60:152772:152772	2007849	9	True				
ANR	2008002	CompoundStatement		19:62:719:719	2007849	10					
ANR	2008003	IfStatement	if ( i > 0 )		2007849	0					
ANR	2008004	Condition	i > 0	4602:8:152784:152788	2007849	0	True				
ANR	2008005	RelationalExpression	i > 0		2007849	0		>			
ANR	2008006	Identifier	i		2007849	0					
ANR	2008007	PrimaryExpression	0		2007849	1					
ANR	2008008	CompoundStatement		20:15:736:736	2007849	1					
ANR	2008009	ExpressionStatement	"smart_str_appendl ( buf , "", "" , 2 )"	4603:5:152798:152829	2007849	0	True				
ANR	2008010	CallExpression	"smart_str_appendl ( buf , "", "" , 2 )"		2007849	0					
ANR	2008011	Callee	smart_str_appendl		2007849	0					
ANR	2008012	Identifier	smart_str_appendl		2007849	0					
ANR	2008013	ArgumentList	buf		2007849	1					
ANR	2008014	Argument	buf		2007849	0					
ANR	2008015	Identifier	buf		2007849	0					
ANR	2008016	Argument	""", """		2007849	1					
ANR	2008017	PrimaryExpression	""", """		2007849	0					
ANR	2008018	Argument	2		2007849	2					
ANR	2008019	PrimaryExpression	2		2007849	0					
ANR	2008020	IfStatement	if ( param -> encode && param -> encode -> details . type_str )		2007849	1					
ANR	2008021	Condition	param -> encode && param -> encode -> details . type_str	4605:8:152845:152892	2007849	0	True				
ANR	2008022	AndExpression	param -> encode && param -> encode -> details . type_str		2007849	0		&&			
ANR	2008023	PtrMemberAccess	param -> encode		2007849	0					
ANR	2008024	Identifier	param		2007849	0					
ANR	2008025	Identifier	encode		2007849	1					
ANR	2008026	MemberAccess	param -> encode -> details . type_str		2007849	1					
ANR	2008027	PtrMemberAccess	param -> encode -> details		2007849	0					
ANR	2008028	PtrMemberAccess	param -> encode		2007849	0					
ANR	2008029	Identifier	param		2007849	0					
ANR	2008030	Identifier	encode		2007849	1					
ANR	2008031	Identifier	details		2007849	1					
ANR	2008032	Identifier	type_str		2007849	1					
ANR	2008033	CompoundStatement		23:58:840:840	2007849	1					
ANR	2008034	ExpressionStatement	"smart_str_appendl ( buf , param -> encode -> details . type_str , strlen ( param -> encode -> details . type_str ) )"	4606:5:152902:152998	2007849	0	True				
ANR	2008035	CallExpression	"smart_str_appendl ( buf , param -> encode -> details . type_str , strlen ( param -> encode -> details . type_str ) )"		2007849	0					
ANR	2008036	Callee	smart_str_appendl		2007849	0					
ANR	2008037	Identifier	smart_str_appendl		2007849	0					
ANR	2008038	ArgumentList	buf		2007849	1					
ANR	2008039	Argument	buf		2007849	0					
ANR	2008040	Identifier	buf		2007849	0					
ANR	2008041	Argument	param -> encode -> details . type_str		2007849	1					
ANR	2008042	MemberAccess	param -> encode -> details . type_str		2007849	0					
ANR	2008043	PtrMemberAccess	param -> encode -> details		2007849	0					
ANR	2008044	PtrMemberAccess	param -> encode		2007849	0					
ANR	2008045	Identifier	param		2007849	0					
ANR	2008046	Identifier	encode		2007849	1					
ANR	2008047	Identifier	details		2007849	1					
ANR	2008048	Identifier	type_str		2007849	1					
ANR	2008049	Argument	strlen ( param -> encode -> details . type_str )		2007849	2					
ANR	2008050	CallExpression	strlen ( param -> encode -> details . type_str )		2007849	0					
ANR	2008051	Callee	strlen		2007849	0					
ANR	2008052	Identifier	strlen		2007849	0					
ANR	2008053	ArgumentList	param -> encode -> details . type_str		2007849	1					
ANR	2008054	Argument	param -> encode -> details . type_str		2007849	0					
ANR	2008055	MemberAccess	param -> encode -> details . type_str		2007849	0					
ANR	2008056	PtrMemberAccess	param -> encode -> details		2007849	0					
ANR	2008057	PtrMemberAccess	param -> encode		2007849	0					
ANR	2008058	Identifier	param		2007849	0					
ANR	2008059	Identifier	encode		2007849	1					
ANR	2008060	Identifier	details		2007849	1					
ANR	2008061	Identifier	type_str		2007849	1					
ANR	2008062	ElseStatement	else		2007849	0					
ANR	2008063	CompoundStatement		25:11:956:956	2007849	0					
ANR	2008064	ExpressionStatement	"smart_str_appendl ( buf , ""UNKNOWN"" , 7 )"	4608:5:153018:153054	2007849	0	True				
ANR	2008065	CallExpression	"smart_str_appendl ( buf , ""UNKNOWN"" , 7 )"		2007849	0					
ANR	2008066	Callee	smart_str_appendl		2007849	0					
ANR	2008067	Identifier	smart_str_appendl		2007849	0					
ANR	2008068	ArgumentList	buf		2007849	1					
ANR	2008069	Argument	buf		2007849	0					
ANR	2008070	Identifier	buf		2007849	0					
ANR	2008071	Argument	"""UNKNOWN"""		2007849	1					
ANR	2008072	PrimaryExpression	"""UNKNOWN"""		2007849	0					
ANR	2008073	Argument	7		2007849	2					
ANR	2008074	PrimaryExpression	7		2007849	0					
ANR	2008075	ExpressionStatement	"smart_str_appendl ( buf , "" $"" , 2 )"	4610:4:153066:153097	2007849	2	True				
ANR	2008076	CallExpression	"smart_str_appendl ( buf , "" $"" , 2 )"		2007849	0					
ANR	2008077	Callee	smart_str_appendl		2007849	0					
ANR	2008078	Identifier	smart_str_appendl		2007849	0					
ANR	2008079	ArgumentList	buf		2007849	1					
ANR	2008080	Argument	buf		2007849	0					
ANR	2008081	Identifier	buf		2007849	0					
ANR	2008082	Argument	""" $"""		2007849	1					
ANR	2008083	PrimaryExpression	""" $"""		2007849	0					
ANR	2008084	Argument	2		2007849	2					
ANR	2008085	PrimaryExpression	2		2007849	0					
ANR	2008086	ExpressionStatement	"smart_str_appendl ( buf , param -> paramName , strlen ( param -> paramName ) )"	4611:4:153103:153169	2007849	3	True				
ANR	2008087	CallExpression	"smart_str_appendl ( buf , param -> paramName , strlen ( param -> paramName ) )"		2007849	0					
ANR	2008088	Callee	smart_str_appendl		2007849	0					
ANR	2008089	Identifier	smart_str_appendl		2007849	0					
ANR	2008090	ArgumentList	buf		2007849	1					
ANR	2008091	Argument	buf		2007849	0					
ANR	2008092	Identifier	buf		2007849	0					
ANR	2008093	Argument	param -> paramName		2007849	1					
ANR	2008094	PtrMemberAccess	param -> paramName		2007849	0					
ANR	2008095	Identifier	param		2007849	0					
ANR	2008096	Identifier	paramName		2007849	1					
ANR	2008097	Argument	strlen ( param -> paramName )		2007849	2					
ANR	2008098	CallExpression	strlen ( param -> paramName )		2007849	0					
ANR	2008099	Callee	strlen		2007849	0					
ANR	2008100	Identifier	strlen		2007849	0					
ANR	2008101	ArgumentList	param -> paramName		2007849	1					
ANR	2008102	Argument	param -> paramName		2007849	0					
ANR	2008103	PtrMemberAccess	param -> paramName		2007849	0					
ANR	2008104	Identifier	param		2007849	0					
ANR	2008105	Identifier	paramName		2007849	1					
ANR	2008106	ExpressionStatement	i ++	4612:4:153175:153178	2007849	4	True				
ANR	2008107	PostIncDecOperationExpression	i ++		2007849	0					
ANR	2008108	Identifier	i		2007849	0					
ANR	2008109	IncDec	++		2007849	1					
ANR	2008110	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	4613:5:153185:153208	2007849	11	True				
ANR	2008111	CallExpression	ZEND_HASH_FOREACH_END ( )		2007849	0					
ANR	2008112	Callee	ZEND_HASH_FOREACH_END		2007849	0					
ANR	2008113	Identifier	ZEND_HASH_FOREACH_END		2007849	0					
ANR	2008114	ArgumentList			2007849	1					
ANR	2008115	ExpressionStatement	"smart_str_appendl ( buf , "") "" , 2 )"	4614:3:153213:153244	2007849	12	True				
ANR	2008116	CallExpression	"smart_str_appendl ( buf , "") "" , 2 )"		2007849	0					
ANR	2008117	Callee	smart_str_appendl		2007849	0					
ANR	2008118	Identifier	smart_str_appendl		2007849	0					
ANR	2008119	ArgumentList	buf		2007849	1					
ANR	2008120	Argument	buf		2007849	0					
ANR	2008121	Identifier	buf		2007849	0					
ANR	2008122	Argument	""") """		2007849	1					
ANR	2008123	PrimaryExpression	""") """		2007849	0					
ANR	2008124	Argument	2		2007849	2					
ANR	2008125	PrimaryExpression	2		2007849	0					
ANR	2008126	ElseStatement	else		2007849	0					
ANR	2008127	CompoundStatement		34:8:1203:1203	2007849	0					
ANR	2008128	ExpressionStatement	"smart_str_appendl ( buf , ""void "" , 5 )"	4617:2:153262:153296	2007849	0	True				
ANR	2008129	CallExpression	"smart_str_appendl ( buf , ""void "" , 5 )"		2007849	0					
ANR	2008130	Callee	smart_str_appendl		2007849	0					
ANR	2008131	Identifier	smart_str_appendl		2007849	0					
ANR	2008132	ArgumentList	buf		2007849	1					
ANR	2008133	Argument	buf		2007849	0					
ANR	2008134	Identifier	buf		2007849	0					
ANR	2008135	Argument	"""void """		2007849	1					
ANR	2008136	PrimaryExpression	"""void """		2007849	0					
ANR	2008137	Argument	5		2007849	2					
ANR	2008138	PrimaryExpression	5		2007849	0					
ANR	2008139	ExpressionStatement	"smart_str_appendl ( buf , function -> functionName , strlen ( function -> functionName ) )"	4620:1:153303:153381	2007849	3	True				
ANR	2008140	CallExpression	"smart_str_appendl ( buf , function -> functionName , strlen ( function -> functionName ) )"		2007849	0					
ANR	2008141	Callee	smart_str_appendl		2007849	0					
ANR	2008142	Identifier	smart_str_appendl		2007849	0					
ANR	2008143	ArgumentList	buf		2007849	1					
ANR	2008144	Argument	buf		2007849	0					
ANR	2008145	Identifier	buf		2007849	0					
ANR	2008146	Argument	function -> functionName		2007849	1					
ANR	2008147	PtrMemberAccess	function -> functionName		2007849	0					
ANR	2008148	Identifier	function		2007849	0					
ANR	2008149	Identifier	functionName		2007849	1					
ANR	2008150	Argument	strlen ( function -> functionName )		2007849	2					
ANR	2008151	CallExpression	strlen ( function -> functionName )		2007849	0					
ANR	2008152	Callee	strlen		2007849	0					
ANR	2008153	Identifier	strlen		2007849	0					
ANR	2008154	ArgumentList	function -> functionName		2007849	1					
ANR	2008155	Argument	function -> functionName		2007849	0					
ANR	2008156	PtrMemberAccess	function -> functionName		2007849	0					
ANR	2008157	Identifier	function		2007849	0					
ANR	2008158	Identifier	functionName		2007849	1					
ANR	2008159	ExpressionStatement	"smart_str_appendc ( buf , '(' )"	4622:1:153385:153412	2007849	4	True				
ANR	2008160	CallExpression	"smart_str_appendc ( buf , '(' )"		2007849	0					
ANR	2008161	Callee	smart_str_appendc		2007849	0					
ANR	2008162	Identifier	smart_str_appendc		2007849	0					
ANR	2008163	ArgumentList	buf		2007849	1					
ANR	2008164	Argument	buf		2007849	0					
ANR	2008165	Identifier	buf		2007849	0					
ANR	2008166	Argument	'('		2007849	1					
ANR	2008167	PrimaryExpression	'('		2007849	0					
ANR	2008168	IfStatement	if ( function -> requestParameters )		2007849	5					
ANR	2008169	Condition	function -> requestParameters	4623:5:153419:153445	2007849	0	True				
ANR	2008170	PtrMemberAccess	function -> requestParameters		2007849	0					
ANR	2008171	Identifier	function		2007849	0					
ANR	2008172	Identifier	requestParameters		2007849	1					
ANR	2008173	CompoundStatement		41:34:1393:1393	2007849	1					
ANR	2008174	ExpressionStatement	i = 0	4624:2:153452:153457	2007849	0	True				
ANR	2008175	AssignmentExpression	i = 0		2007849	0		=			
ANR	2008176	Identifier	i		2007849	0					
ANR	2008177	PrimaryExpression	0		2007849	1					
ANR	2008178	Statement	ZEND_HASH_FOREACH_PTR	4625:2:153461:153481	2007849	1	True				
ANR	2008179	Statement	(	4625:23:153482:153482	2007849	2	True				
ANR	2008180	Statement	function	4625:24:153483:153490	2007849	3	True				
ANR	2008181	Statement	->	4625:32:153491:153492	2007849	4	True				
ANR	2008182	Statement	requestParameters	4625:34:153493:153509	2007849	5	True				
ANR	2008183	Statement	","	4625:51:153510:153510	2007849	6	True				
ANR	2008184	Statement	param	4625:53:153512:153516	2007849	7	True				
ANR	2008185	Statement	)	4625:58:153517:153517	2007849	8	True				
ANR	2008186	CompoundStatement		43:60:1464:1464	2007849	9					
ANR	2008187	IfStatement	if ( i > 0 )		2007849	0					
ANR	2008188	Condition	i > 0	4626:7:153528:153532	2007849	0	True				
ANR	2008189	RelationalExpression	i > 0		2007849	0		>			
ANR	2008190	Identifier	i		2007849	0					
ANR	2008191	PrimaryExpression	0		2007849	1					
ANR	2008192	CompoundStatement		44:14:1480:1480	2007849	1					
ANR	2008193	ExpressionStatement	"smart_str_appendl ( buf , "", "" , 2 )"	4627:4:153541:153572	2007849	0	True				
ANR	2008194	CallExpression	"smart_str_appendl ( buf , "", "" , 2 )"		2007849	0					
ANR	2008195	Callee	smart_str_appendl		2007849	0					
ANR	2008196	Identifier	smart_str_appendl		2007849	0					
ANR	2008197	ArgumentList	buf		2007849	1					
ANR	2008198	Argument	buf		2007849	0					
ANR	2008199	Identifier	buf		2007849	0					
ANR	2008200	Argument	""", """		2007849	1					
ANR	2008201	PrimaryExpression	""", """		2007849	0					
ANR	2008202	Argument	2		2007849	2					
ANR	2008203	PrimaryExpression	2		2007849	0					
ANR	2008204	IfStatement	if ( param -> encode && param -> encode -> details . type_str )		2007849	1					
ANR	2008205	Condition	param -> encode && param -> encode -> details . type_str	4629:7:153586:153633	2007849	0	True				
ANR	2008206	AndExpression	param -> encode && param -> encode -> details . type_str		2007849	0		&&			
ANR	2008207	PtrMemberAccess	param -> encode		2007849	0					
ANR	2008208	Identifier	param		2007849	0					
ANR	2008209	Identifier	encode		2007849	1					
ANR	2008210	MemberAccess	param -> encode -> details . type_str		2007849	1					
ANR	2008211	PtrMemberAccess	param -> encode -> details		2007849	0					
ANR	2008212	PtrMemberAccess	param -> encode		2007849	0					
ANR	2008213	Identifier	param		2007849	0					
ANR	2008214	Identifier	encode		2007849	1					
ANR	2008215	Identifier	details		2007849	1					
ANR	2008216	Identifier	type_str		2007849	1					
ANR	2008217	CompoundStatement		47:57:1581:1581	2007849	1					
ANR	2008218	ExpressionStatement	"smart_str_appendl ( buf , param -> encode -> details . type_str , strlen ( param -> encode -> details . type_str ) )"	4630:4:153642:153738	2007849	0	True				
ANR	2008219	CallExpression	"smart_str_appendl ( buf , param -> encode -> details . type_str , strlen ( param -> encode -> details . type_str ) )"		2007849	0					
ANR	2008220	Callee	smart_str_appendl		2007849	0					
ANR	2008221	Identifier	smart_str_appendl		2007849	0					
ANR	2008222	ArgumentList	buf		2007849	1					
ANR	2008223	Argument	buf		2007849	0					
ANR	2008224	Identifier	buf		2007849	0					
ANR	2008225	Argument	param -> encode -> details . type_str		2007849	1					
ANR	2008226	MemberAccess	param -> encode -> details . type_str		2007849	0					
ANR	2008227	PtrMemberAccess	param -> encode -> details		2007849	0					
ANR	2008228	PtrMemberAccess	param -> encode		2007849	0					
ANR	2008229	Identifier	param		2007849	0					
ANR	2008230	Identifier	encode		2007849	1					
ANR	2008231	Identifier	details		2007849	1					
ANR	2008232	Identifier	type_str		2007849	1					
ANR	2008233	Argument	strlen ( param -> encode -> details . type_str )		2007849	2					
ANR	2008234	CallExpression	strlen ( param -> encode -> details . type_str )		2007849	0					
ANR	2008235	Callee	strlen		2007849	0					
ANR	2008236	Identifier	strlen		2007849	0					
ANR	2008237	ArgumentList	param -> encode -> details . type_str		2007849	1					
ANR	2008238	Argument	param -> encode -> details . type_str		2007849	0					
ANR	2008239	MemberAccess	param -> encode -> details . type_str		2007849	0					
ANR	2008240	PtrMemberAccess	param -> encode -> details		2007849	0					
ANR	2008241	PtrMemberAccess	param -> encode		2007849	0					
ANR	2008242	Identifier	param		2007849	0					
ANR	2008243	Identifier	encode		2007849	1					
ANR	2008244	Identifier	details		2007849	1					
ANR	2008245	Identifier	type_str		2007849	1					
ANR	2008246	ElseStatement	else		2007849	0					
ANR	2008247	CompoundStatement		49:10:1695:1695	2007849	0					
ANR	2008248	ExpressionStatement	"smart_str_appendl ( buf , ""UNKNOWN"" , 7 )"	4632:4:153756:153792	2007849	0	True				
ANR	2008249	CallExpression	"smart_str_appendl ( buf , ""UNKNOWN"" , 7 )"		2007849	0					
ANR	2008250	Callee	smart_str_appendl		2007849	0					
ANR	2008251	Identifier	smart_str_appendl		2007849	0					
ANR	2008252	ArgumentList	buf		2007849	1					
ANR	2008253	Argument	buf		2007849	0					
ANR	2008254	Identifier	buf		2007849	0					
ANR	2008255	Argument	"""UNKNOWN"""		2007849	1					
ANR	2008256	PrimaryExpression	"""UNKNOWN"""		2007849	0					
ANR	2008257	Argument	7		2007849	2					
ANR	2008258	PrimaryExpression	7		2007849	0					
ANR	2008259	ExpressionStatement	"smart_str_appendl ( buf , "" $"" , 2 )"	4634:3:153802:153833	2007849	2	True				
ANR	2008260	CallExpression	"smart_str_appendl ( buf , "" $"" , 2 )"		2007849	0					
ANR	2008261	Callee	smart_str_appendl		2007849	0					
ANR	2008262	Identifier	smart_str_appendl		2007849	0					
ANR	2008263	ArgumentList	buf		2007849	1					
ANR	2008264	Argument	buf		2007849	0					
ANR	2008265	Identifier	buf		2007849	0					
ANR	2008266	Argument	""" $"""		2007849	1					
ANR	2008267	PrimaryExpression	""" $"""		2007849	0					
ANR	2008268	Argument	2		2007849	2					
ANR	2008269	PrimaryExpression	2		2007849	0					
ANR	2008270	ExpressionStatement	"smart_str_appendl ( buf , param -> paramName , strlen ( param -> paramName ) )"	4635:3:153838:153904	2007849	3	True				
ANR	2008271	CallExpression	"smart_str_appendl ( buf , param -> paramName , strlen ( param -> paramName ) )"		2007849	0					
ANR	2008272	Callee	smart_str_appendl		2007849	0					
ANR	2008273	Identifier	smart_str_appendl		2007849	0					
ANR	2008274	ArgumentList	buf		2007849	1					
ANR	2008275	Argument	buf		2007849	0					
ANR	2008276	Identifier	buf		2007849	0					
ANR	2008277	Argument	param -> paramName		2007849	1					
ANR	2008278	PtrMemberAccess	param -> paramName		2007849	0					
ANR	2008279	Identifier	param		2007849	0					
ANR	2008280	Identifier	paramName		2007849	1					
ANR	2008281	Argument	strlen ( param -> paramName )		2007849	2					
ANR	2008282	CallExpression	strlen ( param -> paramName )		2007849	0					
ANR	2008283	Callee	strlen		2007849	0					
ANR	2008284	Identifier	strlen		2007849	0					
ANR	2008285	ArgumentList	param -> paramName		2007849	1					
ANR	2008286	Argument	param -> paramName		2007849	0					
ANR	2008287	PtrMemberAccess	param -> paramName		2007849	0					
ANR	2008288	Identifier	param		2007849	0					
ANR	2008289	Identifier	paramName		2007849	1					
ANR	2008290	ExpressionStatement	i ++	4636:3:153909:153912	2007849	4	True				
ANR	2008291	PostIncDecOperationExpression	i ++		2007849	0					
ANR	2008292	Identifier	i		2007849	0					
ANR	2008293	IncDec	++		2007849	1					
ANR	2008294	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	4637:4:153918:153941	2007849	10	True				
ANR	2008295	CallExpression	ZEND_HASH_FOREACH_END ( )		2007849	0					
ANR	2008296	Callee	ZEND_HASH_FOREACH_END		2007849	0					
ANR	2008297	Identifier	ZEND_HASH_FOREACH_END		2007849	0					
ANR	2008298	ArgumentList			2007849	1					
ANR	2008299	ExpressionStatement	"smart_str_appendc ( buf , ')' )"	4639:1:153947:153974	2007849	6	True				
ANR	2008300	CallExpression	"smart_str_appendc ( buf , ')' )"		2007849	0					
ANR	2008301	Callee	smart_str_appendc		2007849	0					
ANR	2008302	Identifier	smart_str_appendc		2007849	0					
ANR	2008303	ArgumentList	buf		2007849	1					
ANR	2008304	Argument	buf		2007849	0					
ANR	2008305	Identifier	buf		2007849	0					
ANR	2008306	Argument	')'		2007849	1					
ANR	2008307	PrimaryExpression	')'		2007849	0					
ANR	2008308	ExpressionStatement	smart_str_0 ( buf )	4640:1:153977:153993	2007849	7	True				
ANR	2008309	CallExpression	smart_str_0 ( buf )		2007849	0					
ANR	2008310	Callee	smart_str_0		2007849	0					
ANR	2008311	Identifier	smart_str_0		2007849	0					
ANR	2008312	ArgumentList	buf		2007849	1					
ANR	2008313	Argument	buf		2007849	0					
ANR	2008314	Identifier	buf		2007849	0					
ANR	2008315	ReturnType	static void		2007849	1					
ANR	2008316	Identifier	function_to_string		2007849	2					
ANR	2008317	ParameterList	"sdlFunctionPtr function , smart_str * buf"		2007849	3					
ANR	2008318	Parameter	sdlFunctionPtr function	4582:31:152013:152035	2007849	0	True				
ANR	2008319	ParameterType	sdlFunctionPtr		2007849	0					
ANR	2008320	Identifier	function		2007849	1					
ANR	2008321	Parameter	smart_str * buf	4582:56:152038:152051	2007849	1	True				
ANR	2008322	ParameterType	smart_str *		2007849	0					
ANR	2008323	Identifier	buf		2007849	1					
ANR	2008324	CFGEntryNode	ENTRY		2007849		True				
ANR	2008325	CFGExitNode	EXIT		2007849		True				
ANR	2008326	Symbol	zend_hash_get_current_data_ptr		2007849						
ANR	2008327	Symbol	function -> functionName		2007849						
ANR	2008328	Symbol	zend_hash_num_elements		2007849						
ANR	2008329	Symbol	* function		2007849						
ANR	2008330	Symbol	i		2007849						
ANR	2008331	Symbol	param -> encode -> details		2007849						
ANR	2008332	Symbol	param -> paramName		2007849						
ANR	2008333	Symbol	function -> requestParameters		2007849						
ANR	2008334	Symbol	* param		2007849						
ANR	2008335	Symbol	function -> responseParameters		2007849						
ANR	2008336	Symbol	strlen		2007849						
ANR	2008337	Symbol	buf		2007849						
ANR	2008338	Symbol	param -> encode -> details . type_str		2007849						
ANR	2008339	Symbol	param		2007849						
ANR	2008340	Symbol	function		2007849						
ANR	2008341	Symbol	* * param		2007849						
ANR	2008342	Symbol	* param -> encode		2007849						
ANR	2008343	Symbol	param -> encode		2007849						
ANR	2008344	Function	model_to_string	4643:0:153998:154764							
ANR	2008345	FunctionDef	"model_to_string (sdlContentModelPtr model , smart_str * buf , int level)"		2008344	0					
ANR	2008346	CompoundStatement		4644:0:154079:154764	2008344	0					
ANR	2008347	IdentifierDeclStatement	int i ;	4645:1:154082:154087	2008344	0	True				
ANR	2008348	IdentifierDecl	i		2008344	0					
ANR	2008349	IdentifierDeclType	int		2008344	0					
ANR	2008350	Identifier	i		2008344	1					
ANR	2008351	SwitchStatement	switch ( model -> kind )		2008344	1					
ANR	2008352	Condition	model -> kind	4647:9:154099:154109	2008344	0	True				
ANR	2008353	PtrMemberAccess	model -> kind		2008344	0					
ANR	2008354	Identifier	model		2008344	0					
ANR	2008355	Identifier	kind		2008344	1					
ANR	2008356	CompoundStatement		4:22:32:32	2008344	1					
ANR	2008357	Label	case XSD_CONTENT_ELEMENT :	4648:2:154116:154140	2008344	0	True				
ANR	2008358	Identifier	XSD_CONTENT_ELEMENT		2008344	0					
ANR	2008359	ExpressionStatement	"type_to_string ( model -> u . element , buf , level )"	4649:3:154145:154189	2008344	1	True				
ANR	2008360	CallExpression	"type_to_string ( model -> u . element , buf , level )"		2008344	0					
ANR	2008361	Callee	type_to_string		2008344	0					
ANR	2008362	Identifier	type_to_string		2008344	0					
ANR	2008363	ArgumentList	model -> u . element		2008344	1					
ANR	2008364	Argument	model -> u . element		2008344	0					
ANR	2008365	MemberAccess	model -> u . element		2008344	0					
ANR	2008366	PtrMemberAccess	model -> u		2008344	0					
ANR	2008367	Identifier	model		2008344	0					
ANR	2008368	Identifier	u		2008344	1					
ANR	2008369	Identifier	element		2008344	1					
ANR	2008370	Argument	buf		2008344	1					
ANR	2008371	Identifier	buf		2008344	0					
ANR	2008372	Argument	level		2008344	2					
ANR	2008373	Identifier	level		2008344	0					
ANR	2008374	ExpressionStatement	"smart_str_appendl ( buf , "";\\n"" , 2 )"	4650:3:154194:154226	2008344	2	True				
ANR	2008375	CallExpression	"smart_str_appendl ( buf , "";\\n"" , 2 )"		2008344	0					
ANR	2008376	Callee	smart_str_appendl		2008344	0					
ANR	2008377	Identifier	smart_str_appendl		2008344	0					
ANR	2008378	ArgumentList	buf		2008344	1					
ANR	2008379	Argument	buf		2008344	0					
ANR	2008380	Identifier	buf		2008344	0					
ANR	2008381	Argument	""";\\n"""		2008344	1					
ANR	2008382	PrimaryExpression	""";\\n"""		2008344	0					
ANR	2008383	Argument	2		2008344	2					
ANR	2008384	PrimaryExpression	2		2008344	0					
ANR	2008385	BreakStatement	break ;	4651:3:154231:154236	2008344	3	True				
ANR	2008386	Label	case XSD_CONTENT_ANY :	4652:2:154240:154260	2008344	4	True				
ANR	2008387	Identifier	XSD_CONTENT_ANY		2008344	0					
ANR	2008388	ForStatement	for ( i = 0 ; i < level ; i ++ )		2008344	5					
ANR	2008389	ForInit	i = 0 ;	4653:8:154270:154275	2008344	0	True				
ANR	2008390	AssignmentExpression	i = 0		2008344	0		=			
ANR	2008391	Identifier	i		2008344	0					
ANR	2008392	PrimaryExpression	0		2008344	1					
ANR	2008393	Condition	i < level	4653:14:154276:154284	2008344	1	True				
ANR	2008394	RelationalExpression	i < level		2008344	0		<			
ANR	2008395	Identifier	i		2008344	0					
ANR	2008396	Identifier	level		2008344	1					
ANR	2008397	PostIncDecOperationExpression	i ++	4653:24:154286:154288	2008344	2	True				
ANR	2008398	Identifier	i		2008344	0					
ANR	2008399	IncDec	++		2008344	1					
ANR	2008400	CompoundStatement		10:29:211:211	2008344	3					
ANR	2008401	ExpressionStatement	"smart_str_appendc ( buf , ' ' )"	4654:4:154297:154324	2008344	0	True				
ANR	2008402	CallExpression	"smart_str_appendc ( buf , ' ' )"		2008344	0					
ANR	2008403	Callee	smart_str_appendc		2008344	0					
ANR	2008404	Identifier	smart_str_appendc		2008344	0					
ANR	2008405	ArgumentList	buf		2008344	1					
ANR	2008406	Argument	buf		2008344	0					
ANR	2008407	Identifier	buf		2008344	0					
ANR	2008408	Argument	' '		2008344	1					
ANR	2008409	PrimaryExpression	' '		2008344	0					
ANR	2008410	ExpressionStatement	"smart_str_appendl ( buf , ""<anyXML> any;\\n"" , sizeof ( ""<anyXML> any;\\n"" ) - 1 )"	4656:3:154334:154404	2008344	6	True				
ANR	2008411	CallExpression	"smart_str_appendl ( buf , ""<anyXML> any;\\n"" , sizeof ( ""<anyXML> any;\\n"" ) - 1 )"		2008344	0					
ANR	2008412	Callee	smart_str_appendl		2008344	0					
ANR	2008413	Identifier	smart_str_appendl		2008344	0					
ANR	2008414	ArgumentList	buf		2008344	1					
ANR	2008415	Argument	buf		2008344	0					
ANR	2008416	Identifier	buf		2008344	0					
ANR	2008417	Argument	"""<anyXML> any;\\n"""		2008344	1					
ANR	2008418	PrimaryExpression	"""<anyXML> any;\\n"""		2008344	0					
ANR	2008419	Argument	"sizeof ( ""<anyXML> any;\\n"" ) - 1"		2008344	2					
ANR	2008420	AdditiveExpression	"sizeof ( ""<anyXML> any;\\n"" ) - 1"		2008344	0		-			
ANR	2008421	SizeofExpression	"sizeof ( ""<anyXML> any;\\n"" )"		2008344	0					
ANR	2008422	Sizeof	sizeof		2008344	0					
ANR	2008423	PrimaryExpression	"""<anyXML> any;\\n"""		2008344	1					
ANR	2008424	PrimaryExpression	1		2008344	1					
ANR	2008425	BreakStatement	break ;	4657:3:154409:154414	2008344	7	True				
ANR	2008426	Label	case XSD_CONTENT_SEQUENCE :	4658:2:154418:154443	2008344	8	True				
ANR	2008427	Identifier	XSD_CONTENT_SEQUENCE		2008344	0					
ANR	2008428	Label	case XSD_CONTENT_ALL :	4659:2:154447:154467	2008344	9	True				
ANR	2008429	Identifier	XSD_CONTENT_ALL		2008344	0					
ANR	2008430	Label	case XSD_CONTENT_CHOICE :	4660:2:154471:154494	2008344	10	True				
ANR	2008431	Identifier	XSD_CONTENT_CHOICE		2008344	0					
ANR	2008432	CompoundStatement		18:3:421:443	2008344	11					
ANR	2008433	IdentifierDeclStatement	sdlContentModelPtr tmp ;	4661:3:154501:154523	2008344	0	True				
ANR	2008434	IdentifierDecl	tmp		2008344	0					
ANR	2008435	IdentifierDeclType	sdlContentModelPtr		2008344	0					
ANR	2008436	Identifier	tmp		2008344	1					
ANR	2008437	Statement	ZEND_HASH_FOREACH_PTR	4663:3:154529:154549	2008344	1	True				
ANR	2008438	Statement	(	4663:24:154550:154550	2008344	2	True				
ANR	2008439	Statement	model	4663:25:154551:154555	2008344	3	True				
ANR	2008440	Statement	->	4663:30:154556:154557	2008344	4	True				
ANR	2008441	Statement	u	4663:32:154558:154558	2008344	5	True				
ANR	2008442	Statement	.	4663:33:154559:154559	2008344	6	True				
ANR	2008443	Statement	content	4663:34:154560:154566	2008344	7	True				
ANR	2008444	Statement	","	4663:41:154567:154567	2008344	8	True				
ANR	2008445	Statement	tmp	4663:43:154569:154571	2008344	9	True				
ANR	2008446	Statement	)	4663:46:154572:154572	2008344	10	True				
ANR	2008447	CompoundStatement		20:48:494:494	2008344	11					
ANR	2008448	ExpressionStatement	"model_to_string ( tmp , buf , level )"	4664:4:154580:154612	2008344	0	True				
ANR	2008449	CallExpression	"model_to_string ( tmp , buf , level )"		2008344	0					
ANR	2008450	Callee	model_to_string		2008344	0					
ANR	2008451	Identifier	model_to_string		2008344	0					
ANR	2008452	ArgumentList	tmp		2008344	1					
ANR	2008453	Argument	tmp		2008344	0					
ANR	2008454	Identifier	tmp		2008344	0					
ANR	2008455	Argument	buf		2008344	1					
ANR	2008456	Identifier	buf		2008344	0					
ANR	2008457	Argument	level		2008344	2					
ANR	2008458	Identifier	level		2008344	0					
ANR	2008459	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	4665:5:154619:154642	2008344	12	True				
ANR	2008460	CallExpression	ZEND_HASH_FOREACH_END ( )		2008344	0					
ANR	2008461	Callee	ZEND_HASH_FOREACH_END		2008344	0					
ANR	2008462	Identifier	ZEND_HASH_FOREACH_END		2008344	0					
ANR	2008463	ArgumentList			2008344	1					
ANR	2008464	BreakStatement	break ;	4666:3:154647:154652	2008344	13	True				
ANR	2008465	Label	case XSD_CONTENT_GROUP :	4668:2:154660:154682	2008344	12	True				
ANR	2008466	Identifier	XSD_CONTENT_GROUP		2008344	0					
ANR	2008467	ExpressionStatement	"model_to_string ( model -> u . group -> model , buf , level )"	4669:3:154687:154737	2008344	13	True				
ANR	2008468	CallExpression	"model_to_string ( model -> u . group -> model , buf , level )"		2008344	0					
ANR	2008469	Callee	model_to_string		2008344	0					
ANR	2008470	Identifier	model_to_string		2008344	0					
ANR	2008471	ArgumentList	model -> u . group -> model		2008344	1					
ANR	2008472	Argument	model -> u . group -> model		2008344	0					
ANR	2008473	PtrMemberAccess	model -> u . group -> model		2008344	0					
ANR	2008474	MemberAccess	model -> u . group		2008344	0					
ANR	2008475	PtrMemberAccess	model -> u		2008344	0					
ANR	2008476	Identifier	model		2008344	0					
ANR	2008477	Identifier	u		2008344	1					
ANR	2008478	Identifier	group		2008344	1					
ANR	2008479	Identifier	model		2008344	1					
ANR	2008480	Argument	buf		2008344	1					
ANR	2008481	Identifier	buf		2008344	0					
ANR	2008482	Argument	level		2008344	2					
ANR	2008483	Identifier	level		2008344	0					
ANR	2008484	Label	default :	4670:2:154741:154748	2008344	14	True				
ANR	2008485	Identifier	default		2008344	0					
ANR	2008486	BreakStatement	break ;	4671:4:154754:154759	2008344	15	True				
ANR	2008487	ReturnType	static void		2008344	1					
ANR	2008488	Identifier	model_to_string		2008344	2					
ANR	2008489	ParameterList	"sdlContentModelPtr model , smart_str * buf , int level"		2008344	3					
ANR	2008490	Parameter	sdlContentModelPtr model	4643:28:154026:154049	2008344	0	True				
ANR	2008491	ParameterType	sdlContentModelPtr		2008344	0					
ANR	2008492	Identifier	model		2008344	1					
ANR	2008493	Parameter	smart_str * buf	4643:54:154052:154065	2008344	1	True				
ANR	2008494	ParameterType	smart_str *		2008344	0					
ANR	2008495	Identifier	buf		2008344	1					
ANR	2008496	Parameter	int level	4643:70:154068:154076	2008344	2	True				
ANR	2008497	ParameterType	int		2008344	0					
ANR	2008498	Identifier	level		2008344	1					
ANR	2008499	CFGEntryNode	ENTRY		2008344		True				
ANR	2008500	CFGExitNode	EXIT		2008344		True				
ANR	2008501	Symbol	model -> u		2008344						
ANR	2008502	Symbol	level		2008344						
ANR	2008503	Symbol	* model		2008344						
ANR	2008504	Symbol	* model -> u		2008344						
ANR	2008505	Symbol	i		2008344						
ANR	2008506	Symbol	* * model		2008344						
ANR	2008507	Symbol	* model -> u . group		2008344						
ANR	2008508	Symbol	buf		2008344						
ANR	2008509	Symbol	model -> kind		2008344						
ANR	2008510	Symbol	model -> u . element		2008344						
ANR	2008511	Symbol	model -> u . group -> model		2008344						
ANR	2008512	Symbol	tmp		2008344						
ANR	2008513	Symbol	model		2008344						
ANR	2008514	Symbol	model -> u . group		2008344						
ANR	2008515	Function	type_to_string	4675:0:154767:160875							
ANR	2008516	FunctionDef	"type_to_string (sdlTypePtr type , smart_str * buf , int level)"		2008515	0					
ANR	2008517	CompoundStatement		4676:0:154838:160875	2008515	0					
ANR	2008518	IdentifierDeclStatement	int i ;	4677:1:154841:154846	2008515	0	True				
ANR	2008519	IdentifierDecl	i		2008515	0					
ANR	2008520	IdentifierDeclType	int		2008515	0					
ANR	2008521	Identifier	i		2008515	1					
ANR	2008522	IdentifierDeclStatement	smart_str spaces = { 0 } ;	4678:1:154849:154871	2008515	1	True				
ANR	2008523	IdentifierDecl	spaces = { 0 }		2008515	0					
ANR	2008524	IdentifierDeclType	smart_str		2008515	0					
ANR	2008525	Identifier	spaces		2008515	1					
ANR	2008526	AssignmentExpression	spaces = { 0 }		2008515	2		=			
ANR	2008527	Identifier	spaces		2008515	0					
ANR	2008528	InitializerList	0		2008515	1					
ANR	2008529	PrimaryExpression	0		2008515	0					
ANR	2008530	ForStatement	for ( i = 0 ; i < level ; i ++ )		2008515	2					
ANR	2008531	ForInit	i = 0 ;	4680:6:154880:154885	2008515	0	True				
ANR	2008532	AssignmentExpression	i = 0		2008515	0		=			
ANR	2008533	Identifier	i		2008515	0					
ANR	2008534	PrimaryExpression	0		2008515	1					
ANR	2008535	Condition	i < level	4680:12:154886:154894	2008515	1	True				
ANR	2008536	RelationalExpression	i < level		2008515	0		<			
ANR	2008537	Identifier	i		2008515	0					
ANR	2008538	Identifier	level		2008515	1					
ANR	2008539	PostIncDecOperationExpression	i ++	4680:22:154896:154898	2008515	2	True				
ANR	2008540	Identifier	i		2008515	0					
ANR	2008541	IncDec	++		2008515	1					
ANR	2008542	CompoundStatement		5:27:62:62	2008515	3					
ANR	2008543	ExpressionStatement	"smart_str_appendc ( & spaces , ' ' )"	4681:2:154905:154936	2008515	0	True				
ANR	2008544	CallExpression	"smart_str_appendc ( & spaces , ' ' )"		2008515	0					
ANR	2008545	Callee	smart_str_appendc		2008515	0					
ANR	2008546	Identifier	smart_str_appendc		2008515	0					
ANR	2008547	ArgumentList	& spaces		2008515	1					
ANR	2008548	Argument	& spaces		2008515	0					
ANR	2008549	UnaryOperationExpression	& spaces		2008515	0					
ANR	2008550	UnaryOperator	&		2008515	0					
ANR	2008551	Identifier	spaces		2008515	1					
ANR	2008552	Argument	' '		2008515	1					
ANR	2008553	PrimaryExpression	' '		2008515	0					
ANR	2008554	IfStatement	if ( spaces . s )		2008515	3					
ANR	2008555	Condition	spaces . s	4683:5:154946:154953	2008515	0	True				
ANR	2008556	MemberAccess	spaces . s		2008515	0					
ANR	2008557	Identifier	spaces		2008515	0					
ANR	2008558	Identifier	s		2008515	1					
ANR	2008559	CompoundStatement		8:15:117:117	2008515	1					
ANR	2008560	ExpressionStatement	"smart_str_appendl ( buf , ZSTR_VAL ( spaces . s ) , ZSTR_LEN ( spaces . s ) )"	4684:2:154960:155022	2008515	0	True				
ANR	2008561	CallExpression	"smart_str_appendl ( buf , ZSTR_VAL ( spaces . s ) , ZSTR_LEN ( spaces . s ) )"		2008515	0					
ANR	2008562	Callee	smart_str_appendl		2008515	0					
ANR	2008563	Identifier	smart_str_appendl		2008515	0					
ANR	2008564	ArgumentList	buf		2008515	1					
ANR	2008565	Argument	buf		2008515	0					
ANR	2008566	Identifier	buf		2008515	0					
ANR	2008567	Argument	ZSTR_VAL ( spaces . s )		2008515	1					
ANR	2008568	CallExpression	ZSTR_VAL ( spaces . s )		2008515	0					
ANR	2008569	Callee	ZSTR_VAL		2008515	0					
ANR	2008570	Identifier	ZSTR_VAL		2008515	0					
ANR	2008571	ArgumentList	spaces . s		2008515	1					
ANR	2008572	Argument	spaces . s		2008515	0					
ANR	2008573	MemberAccess	spaces . s		2008515	0					
ANR	2008574	Identifier	spaces		2008515	0					
ANR	2008575	Identifier	s		2008515	1					
ANR	2008576	Argument	ZSTR_LEN ( spaces . s )		2008515	2					
ANR	2008577	CallExpression	ZSTR_LEN ( spaces . s )		2008515	0					
ANR	2008578	Callee	ZSTR_LEN		2008515	0					
ANR	2008579	Identifier	ZSTR_LEN		2008515	0					
ANR	2008580	ArgumentList	spaces . s		2008515	1					
ANR	2008581	Argument	spaces . s		2008515	0					
ANR	2008582	MemberAccess	spaces . s		2008515	0					
ANR	2008583	Identifier	spaces		2008515	0					
ANR	2008584	Identifier	s		2008515	1					
ANR	2008585	ElseStatement	else		2008515	0					
ANR	2008586	CompoundStatement		115:10:4176:4176	2008515	0					
ANR	2008587	ExpressionStatement	"smart_str_appendl ( buf , ""struct "" , 7 )"	4791:4:159021:159057	2008515	0	True				
ANR	2008588	CallExpression	"smart_str_appendl ( buf , ""struct "" , 7 )"		2008515	0					
ANR	2008589	Callee	smart_str_appendl		2008515	0					
ANR	2008590	Identifier	smart_str_appendl		2008515	0					
ANR	2008591	ArgumentList	buf		2008515	1					
ANR	2008592	Argument	buf		2008515	0					
ANR	2008593	Identifier	buf		2008515	0					
ANR	2008594	Argument	"""struct """		2008515	1					
ANR	2008595	PrimaryExpression	"""struct """		2008515	0					
ANR	2008596	Argument	7		2008515	2					
ANR	2008597	PrimaryExpression	7		2008515	0					
ANR	2008598	ExpressionStatement	"smart_str_appendl ( buf , type -> name , strlen ( type -> name ) )"	4792:4:159063:159117	2008515	1	True				
ANR	2008599	CallExpression	"smart_str_appendl ( buf , type -> name , strlen ( type -> name ) )"		2008515	0					
ANR	2008600	Callee	smart_str_appendl		2008515	0					
ANR	2008601	Identifier	smart_str_appendl		2008515	0					
ANR	2008602	ArgumentList	buf		2008515	1					
ANR	2008603	Argument	buf		2008515	0					
ANR	2008604	Identifier	buf		2008515	0					
ANR	2008605	Argument	type -> name		2008515	1					
ANR	2008606	PtrMemberAccess	type -> name		2008515	0					
ANR	2008607	Identifier	type		2008515	0					
ANR	2008608	Identifier	name		2008515	1					
ANR	2008609	Argument	strlen ( type -> name )		2008515	2					
ANR	2008610	CallExpression	strlen ( type -> name )		2008515	0					
ANR	2008611	Callee	strlen		2008515	0					
ANR	2008612	Identifier	strlen		2008515	0					
ANR	2008613	ArgumentList	type -> name		2008515	1					
ANR	2008614	Argument	type -> name		2008515	0					
ANR	2008615	PtrMemberAccess	type -> name		2008515	0					
ANR	2008616	Identifier	type		2008515	0					
ANR	2008617	Identifier	name		2008515	1					
ANR	2008618	ExpressionStatement	"smart_str_appendc ( buf , ' ' )"	4793:4:159123:159150	2008515	2	True				
ANR	2008619	CallExpression	"smart_str_appendc ( buf , ' ' )"		2008515	0					
ANR	2008620	Callee	smart_str_appendc		2008515	0					
ANR	2008621	Identifier	smart_str_appendc		2008515	0					
ANR	2008622	ArgumentList	buf		2008515	1					
ANR	2008623	Argument	buf		2008515	0					
ANR	2008624	Identifier	buf		2008515	0					
ANR	2008625	Argument	' '		2008515	1					
ANR	2008626	PrimaryExpression	' '		2008515	0					
ANR	2008627	ExpressionStatement	"smart_str_appendl ( buf , ""{\\n"" , 2 )"	4794:4:159156:159188	2008515	3	True				
ANR	2008628	CallExpression	"smart_str_appendl ( buf , ""{\\n"" , 2 )"		2008515	0					
ANR	2008629	Callee	smart_str_appendl		2008515	0					
ANR	2008630	Identifier	smart_str_appendl		2008515	0					
ANR	2008631	ArgumentList	buf		2008515	1					
ANR	2008632	Argument	buf		2008515	0					
ANR	2008633	Identifier	buf		2008515	0					
ANR	2008634	Argument	"""{\\n"""		2008515	1					
ANR	2008635	PrimaryExpression	"""{\\n"""		2008515	0					
ANR	2008636	Argument	2		2008515	2					
ANR	2008637	PrimaryExpression	2		2008515	0					
ANR	2008638	IfStatement	if ( ( type -> kind == XSD_TYPEKIND_RESTRICTION || type -> kind == XSD_TYPEKIND_EXTENSION ) && type -> encode )		2008515	4					
ANR	2008639	Condition	( type -> kind == XSD_TYPEKIND_RESTRICTION || type -> kind == XSD_TYPEKIND_EXTENSION ) && type -> encode	4795:8:159198:159302	2008515	0	True				
ANR	2008640	AndExpression	( type -> kind == XSD_TYPEKIND_RESTRICTION || type -> kind == XSD_TYPEKIND_EXTENSION ) && type -> encode		2008515	0		&&			
ANR	2008641	OrExpression	type -> kind == XSD_TYPEKIND_RESTRICTION || type -> kind == XSD_TYPEKIND_EXTENSION		2008515	0		||			
ANR	2008642	EqualityExpression	type -> kind == XSD_TYPEKIND_RESTRICTION		2008515	0		==			
ANR	2008643	PtrMemberAccess	type -> kind		2008515	0					
ANR	2008644	Identifier	type		2008515	0					
ANR	2008645	Identifier	kind		2008515	1					
ANR	2008646	Identifier	XSD_TYPEKIND_RESTRICTION		2008515	1					
ANR	2008647	EqualityExpression	type -> kind == XSD_TYPEKIND_EXTENSION		2008515	1		==			
ANR	2008648	PtrMemberAccess	type -> kind		2008515	0					
ANR	2008649	Identifier	type		2008515	0					
ANR	2008650	Identifier	kind		2008515	1					
ANR	2008651	Identifier	XSD_TYPEKIND_EXTENSION		2008515	1					
ANR	2008652	PtrMemberAccess	type -> encode		2008515	1					
ANR	2008653	Identifier	type		2008515	0					
ANR	2008654	Identifier	encode		2008515	1					
ANR	2008655	CompoundStatement		122:5:4473:4501	2008515	1					
ANR	2008656	IdentifierDeclStatement	encodePtr enc = type -> encode ;	4797:5:159312:159340	2008515	0	True				
ANR	2008657	IdentifierDecl	enc = type -> encode		2008515	0					
ANR	2008658	IdentifierDeclType	encodePtr		2008515	0					
ANR	2008659	Identifier	enc		2008515	1					
ANR	2008660	AssignmentExpression	enc = type -> encode		2008515	2		=			
ANR	2008661	Identifier	enc		2008515	0					
ANR	2008662	PtrMemberAccess	type -> encode		2008515	1					
ANR	2008663	Identifier	type		2008515	0					
ANR	2008664	Identifier	encode		2008515	1					
ANR	2008665	WhileStatement	while ( enc && enc -> details . sdl_type && enc != enc -> details . sdl_type -> encode && enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION )		2008515	1					
ANR	2008666	Condition	enc && enc -> details . sdl_type && enc != enc -> details . sdl_type -> encode && enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION	4798:12:159354:159628	2008515	0	True				
ANR	2008667	AndExpression	enc && enc -> details . sdl_type && enc != enc -> details . sdl_type -> encode && enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		2008515	0		&&			
ANR	2008668	Identifier	enc		2008515	0					
ANR	2008669	AndExpression	enc -> details . sdl_type && enc != enc -> details . sdl_type -> encode && enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		2008515	1		&&			
ANR	2008670	MemberAccess	enc -> details . sdl_type		2008515	0					
ANR	2008671	PtrMemberAccess	enc -> details		2008515	0					
ANR	2008672	Identifier	enc		2008515	0					
ANR	2008673	Identifier	details		2008515	1					
ANR	2008674	Identifier	sdl_type		2008515	1					
ANR	2008675	AndExpression	enc != enc -> details . sdl_type -> encode && enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		2008515	1		&&			
ANR	2008676	EqualityExpression	enc != enc -> details . sdl_type -> encode		2008515	0		!=			
ANR	2008677	Identifier	enc		2008515	0					
ANR	2008678	PtrMemberAccess	enc -> details . sdl_type -> encode		2008515	1					
ANR	2008679	MemberAccess	enc -> details . sdl_type		2008515	0					
ANR	2008680	PtrMemberAccess	enc -> details		2008515	0					
ANR	2008681	Identifier	enc		2008515	0					
ANR	2008682	Identifier	details		2008515	1					
ANR	2008683	Identifier	sdl_type		2008515	1					
ANR	2008684	Identifier	encode		2008515	1					
ANR	2008685	AndExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE && enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		2008515	1		&&			
ANR	2008686	EqualityExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_SIMPLE		2008515	0		!=			
ANR	2008687	PtrMemberAccess	enc -> details . sdl_type -> kind		2008515	0					
ANR	2008688	MemberAccess	enc -> details . sdl_type		2008515	0					
ANR	2008689	PtrMemberAccess	enc -> details		2008515	0					
ANR	2008690	Identifier	enc		2008515	0					
ANR	2008691	Identifier	details		2008515	1					
ANR	2008692	Identifier	sdl_type		2008515	1					
ANR	2008693	Identifier	kind		2008515	1					
ANR	2008694	Identifier	XSD_TYPEKIND_SIMPLE		2008515	1					
ANR	2008695	AndExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST && enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		2008515	1		&&			
ANR	2008696	EqualityExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_LIST		2008515	0		!=			
ANR	2008697	PtrMemberAccess	enc -> details . sdl_type -> kind		2008515	0					
ANR	2008698	MemberAccess	enc -> details . sdl_type		2008515	0					
ANR	2008699	PtrMemberAccess	enc -> details		2008515	0					
ANR	2008700	Identifier	enc		2008515	0					
ANR	2008701	Identifier	details		2008515	1					
ANR	2008702	Identifier	sdl_type		2008515	1					
ANR	2008703	Identifier	kind		2008515	1					
ANR	2008704	Identifier	XSD_TYPEKIND_LIST		2008515	1					
ANR	2008705	EqualityExpression	enc -> details . sdl_type -> kind != XSD_TYPEKIND_UNION		2008515	1		!=			
ANR	2008706	PtrMemberAccess	enc -> details . sdl_type -> kind		2008515	0					
ANR	2008707	MemberAccess	enc -> details . sdl_type		2008515	0					
ANR	2008708	PtrMemberAccess	enc -> details		2008515	0					
ANR	2008709	Identifier	enc		2008515	0					
ANR	2008710	Identifier	details		2008515	1					
ANR	2008711	Identifier	sdl_type		2008515	1					
ANR	2008712	Identifier	kind		2008515	1					
ANR	2008713	Identifier	XSD_TYPEKIND_UNION		2008515	1					
ANR	2008714	CompoundStatement		127:63:4792:4792	2008515	1					
ANR	2008715	ExpressionStatement	enc = enc -> details . sdl_type -> encode	4803:6:159639:159674	2008515	0	True				
ANR	2008716	AssignmentExpression	enc = enc -> details . sdl_type -> encode		2008515	0		=			
ANR	2008717	Identifier	enc		2008515	0					
ANR	2008718	PtrMemberAccess	enc -> details . sdl_type -> encode		2008515	1					
ANR	2008719	MemberAccess	enc -> details . sdl_type		2008515	0					
ANR	2008720	PtrMemberAccess	enc -> details		2008515	0					
ANR	2008721	Identifier	enc		2008515	0					
ANR	2008722	Identifier	details		2008515	1					
ANR	2008723	Identifier	sdl_type		2008515	1					
ANR	2008724	Identifier	encode		2008515	1					
ANR	2008725	IfStatement	if ( enc )		2008515	2					
ANR	2008726	Condition	enc	4805:9:159692:159694	2008515	0	True				
ANR	2008727	Identifier	enc		2008515	0					
ANR	2008728	CompoundStatement		130:14:4858:4858	2008515	1					
ANR	2008729	IfStatement	if ( spaces . s )		2008515	0					
ANR	2008730	Condition	spaces . s	4806:10:159709:159716	2008515	0	True				
ANR	2008731	MemberAccess	spaces . s		2008515	0					
ANR	2008732	Identifier	spaces		2008515	0					
ANR	2008733	Identifier	s		2008515	1					
ANR	2008734	CompoundStatement		131:20:4880:4880	2008515	1					
ANR	2008735	ExpressionStatement	"smart_str_appendl ( buf , ZSTR_VAL ( spaces . s ) , ZSTR_LEN ( spaces . s ) )"	4807:7:159728:159790	2008515	0	True				
ANR	2008736	CallExpression	"smart_str_appendl ( buf , ZSTR_VAL ( spaces . s ) , ZSTR_LEN ( spaces . s ) )"		2008515	0					
ANR	2008737	Callee	smart_str_appendl		2008515	0					
ANR	2008738	Identifier	smart_str_appendl		2008515	0					
ANR	2008739	ArgumentList	buf		2008515	1					
ANR	2008740	Argument	buf		2008515	0					
ANR	2008741	Identifier	buf		2008515	0					
ANR	2008742	Argument	ZSTR_VAL ( spaces . s )		2008515	1					
ANR	2008743	CallExpression	ZSTR_VAL ( spaces . s )		2008515	0					
ANR	2008744	Callee	ZSTR_VAL		2008515	0					
ANR	2008745	Identifier	ZSTR_VAL		2008515	0					
ANR	2008746	ArgumentList	spaces . s		2008515	1					
ANR	2008747	Argument	spaces . s		2008515	0					
ANR	2008748	MemberAccess	spaces . s		2008515	0					
ANR	2008749	Identifier	spaces		2008515	0					
ANR	2008750	Identifier	s		2008515	1					
ANR	2008751	Argument	ZSTR_LEN ( spaces . s )		2008515	2					
ANR	2008752	CallExpression	ZSTR_LEN ( spaces . s )		2008515	0					
ANR	2008753	Callee	ZSTR_LEN		2008515	0					
ANR	2008754	Identifier	ZSTR_LEN		2008515	0					
ANR	2008755	ArgumentList	spaces . s		2008515	1					
ANR	2008756	Argument	spaces . s		2008515	0					
ANR	2008757	MemberAccess	spaces . s		2008515	0					
ANR	2008758	Identifier	spaces		2008515	0					
ANR	2008759	Identifier	s		2008515	1					
ANR	2008760	ExpressionStatement	"smart_str_appendc ( buf , ' ' )"	4809:6:159806:159833	2008515	1	True				
ANR	2008761	CallExpression	"smart_str_appendc ( buf , ' ' )"		2008515	0					
ANR	2008762	Callee	smart_str_appendc		2008515	0					
ANR	2008763	Identifier	smart_str_appendc		2008515	0					
ANR	2008764	ArgumentList	buf		2008515	1					
ANR	2008765	Argument	buf		2008515	0					
ANR	2008766	Identifier	buf		2008515	0					
ANR	2008767	Argument	' '		2008515	1					
ANR	2008768	PrimaryExpression	' '		2008515	0					
ANR	2008769	ExpressionStatement	"smart_str_appendl ( buf , type -> encode -> details . type_str , strlen ( type -> encode -> details . type_str ) )"	4810:6:159841:159935	2008515	2	True				
ANR	2008770	CallExpression	"smart_str_appendl ( buf , type -> encode -> details . type_str , strlen ( type -> encode -> details . type_str ) )"		2008515	0					
ANR	2008771	Callee	smart_str_appendl		2008515	0					
ANR	2008772	Identifier	smart_str_appendl		2008515	0					
ANR	2008773	ArgumentList	buf		2008515	1					
ANR	2008774	Argument	buf		2008515	0					
ANR	2008775	Identifier	buf		2008515	0					
ANR	2008776	Argument	type -> encode -> details . type_str		2008515	1					
ANR	2008777	MemberAccess	type -> encode -> details . type_str		2008515	0					
ANR	2008778	PtrMemberAccess	type -> encode -> details		2008515	0					
ANR	2008779	PtrMemberAccess	type -> encode		2008515	0					
ANR	2008780	Identifier	type		2008515	0					
ANR	2008781	Identifier	encode		2008515	1					
ANR	2008782	Identifier	details		2008515	1					
ANR	2008783	Identifier	type_str		2008515	1					
ANR	2008784	Argument	strlen ( type -> encode -> details . type_str )		2008515	2					
ANR	2008785	CallExpression	strlen ( type -> encode -> details . type_str )		2008515	0					
ANR	2008786	Callee	strlen		2008515	0					
ANR	2008787	Identifier	strlen		2008515	0					
ANR	2008788	ArgumentList	type -> encode -> details . type_str		2008515	1					
ANR	2008789	Argument	type -> encode -> details . type_str		2008515	0					
ANR	2008790	MemberAccess	type -> encode -> details . type_str		2008515	0					
ANR	2008791	PtrMemberAccess	type -> encode -> details		2008515	0					
ANR	2008792	PtrMemberAccess	type -> encode		2008515	0					
ANR	2008793	Identifier	type		2008515	0					
ANR	2008794	Identifier	encode		2008515	1					
ANR	2008795	Identifier	details		2008515	1					
ANR	2008796	Identifier	type_str		2008515	1					
ANR	2008797	ExpressionStatement	"smart_str_appendl ( buf , "" _;\\n"" , 4 )"	4811:6:159943:159977	2008515	3	True				
ANR	2008798	CallExpression	"smart_str_appendl ( buf , "" _;\\n"" , 4 )"		2008515	0					
ANR	2008799	Callee	smart_str_appendl		2008515	0					
ANR	2008800	Identifier	smart_str_appendl		2008515	0					
ANR	2008801	ArgumentList	buf		2008515	1					
ANR	2008802	Argument	buf		2008515	0					
ANR	2008803	Identifier	buf		2008515	0					
ANR	2008804	Argument	""" _;\\n"""		2008515	1					
ANR	2008805	PrimaryExpression	""" _;\\n"""		2008515	0					
ANR	2008806	Argument	4		2008515	2					
ANR	2008807	PrimaryExpression	4		2008515	0					
ANR	2008808	IfStatement	if ( type -> model )		2008515	5					
ANR	2008809	Condition	type -> model	4814:8:160000:160010	2008515	0	True				
ANR	2008810	PtrMemberAccess	type -> model		2008515	0					
ANR	2008811	Identifier	type		2008515	0					
ANR	2008812	Identifier	model		2008515	1					
ANR	2008813	CompoundStatement		139:21:5174:5174	2008515	1					
ANR	2008814	ExpressionStatement	"model_to_string ( type -> model , buf , level + 1 )"	4815:5:160020:160062	2008515	0	True				
ANR	2008815	CallExpression	"model_to_string ( type -> model , buf , level + 1 )"		2008515	0					
ANR	2008816	Callee	model_to_string		2008515	0					
ANR	2008817	Identifier	model_to_string		2008515	0					
ANR	2008818	ArgumentList	type -> model		2008515	1					
ANR	2008819	Argument	type -> model		2008515	0					
ANR	2008820	PtrMemberAccess	type -> model		2008515	0					
ANR	2008821	Identifier	type		2008515	0					
ANR	2008822	Identifier	model		2008515	1					
ANR	2008823	Argument	buf		2008515	1					
ANR	2008824	Identifier	buf		2008515	0					
ANR	2008825	Argument	level + 1		2008515	2					
ANR	2008826	AdditiveExpression	level + 1		2008515	0		+			
ANR	2008827	Identifier	level		2008515	0					
ANR	2008828	PrimaryExpression	1		2008515	1					
ANR	2008829	IfStatement	if ( type -> attributes )		2008515	6					
ANR	2008830	Condition	type -> attributes	4817:8:160078:160093	2008515	0	True				
ANR	2008831	PtrMemberAccess	type -> attributes		2008515	0					
ANR	2008832	Identifier	type		2008515	0					
ANR	2008833	Identifier	attributes		2008515	1					
ANR	2008834	CompoundStatement		143:5:5264:5284	2008515	1					
ANR	2008835	IdentifierDeclStatement	sdlAttributePtr attr ;	4818:5:160103:160123	2008515	0	True				
ANR	2008836	IdentifierDecl	attr		2008515	0					
ANR	2008837	IdentifierDeclType	sdlAttributePtr		2008515	0					
ANR	2008838	Identifier	attr		2008515	1					
ANR	2008839	Statement	ZEND_HASH_FOREACH_PTR	4820:5:160131:160151	2008515	1	True				
ANR	2008840	Statement	(	4820:26:160152:160152	2008515	2	True				
ANR	2008841	Statement	type	4820:27:160153:160156	2008515	3	True				
ANR	2008842	Statement	->	4820:31:160157:160158	2008515	4	True				
ANR	2008843	Statement	attributes	4820:33:160159:160168	2008515	5	True				
ANR	2008844	Statement	","	4820:43:160169:160169	2008515	6	True				
ANR	2008845	Statement	attr	4820:45:160171:160174	2008515	7	True				
ANR	2008846	Statement	)	4820:49:160175:160175	2008515	8	True				
ANR	2008847	CompoundStatement		145:51:5338:5338	2008515	9					
ANR	2008848	IfStatement	if ( spaces . s )		2008515	0					
ANR	2008849	Condition	spaces . s	4821:10:160189:160196	2008515	0	True				
ANR	2008850	MemberAccess	spaces . s		2008515	0					
ANR	2008851	Identifier	spaces		2008515	0					
ANR	2008852	Identifier	s		2008515	1					
ANR	2008853	CompoundStatement		146:20:5360:5360	2008515	1					
ANR	2008854	ExpressionStatement	"smart_str_appendl ( buf , ZSTR_VAL ( spaces . s ) , ZSTR_LEN ( spaces . s ) )"	4822:7:160208:160270	2008515	0	True				
ANR	2008855	CallExpression	"smart_str_appendl ( buf , ZSTR_VAL ( spaces . s ) , ZSTR_LEN ( spaces . s ) )"		2008515	0					
ANR	2008856	Callee	smart_str_appendl		2008515	0					
ANR	2008857	Identifier	smart_str_appendl		2008515	0					
ANR	2008858	ArgumentList	buf		2008515	1					
ANR	2008859	Argument	buf		2008515	0					
ANR	2008860	Identifier	buf		2008515	0					
ANR	2008861	Argument	ZSTR_VAL ( spaces . s )		2008515	1					
ANR	2008862	CallExpression	ZSTR_VAL ( spaces . s )		2008515	0					
ANR	2008863	Callee	ZSTR_VAL		2008515	0					
ANR	2008864	Identifier	ZSTR_VAL		2008515	0					
ANR	2008865	ArgumentList	spaces . s		2008515	1					
ANR	2008866	Argument	spaces . s		2008515	0					
ANR	2008867	MemberAccess	spaces . s		2008515	0					
ANR	2008868	Identifier	spaces		2008515	0					
ANR	2008869	Identifier	s		2008515	1					
ANR	2008870	Argument	ZSTR_LEN ( spaces . s )		2008515	2					
ANR	2008871	CallExpression	ZSTR_LEN ( spaces . s )		2008515	0					
ANR	2008872	Callee	ZSTR_LEN		2008515	0					
ANR	2008873	Identifier	ZSTR_LEN		2008515	0					
ANR	2008874	ArgumentList	spaces . s		2008515	1					
ANR	2008875	Argument	spaces . s		2008515	0					
ANR	2008876	MemberAccess	spaces . s		2008515	0					
ANR	2008877	Identifier	spaces		2008515	0					
ANR	2008878	Identifier	s		2008515	1					
ANR	2008879	ExpressionStatement	"smart_str_appendc ( buf , ' ' )"	4824:6:160286:160313	2008515	1	True				
ANR	2008880	CallExpression	"smart_str_appendc ( buf , ' ' )"		2008515	0					
ANR	2008881	Callee	smart_str_appendc		2008515	0					
ANR	2008882	Identifier	smart_str_appendc		2008515	0					
ANR	2008883	ArgumentList	buf		2008515	1					
ANR	2008884	Argument	buf		2008515	0					
ANR	2008885	Identifier	buf		2008515	0					
ANR	2008886	Argument	' '		2008515	1					
ANR	2008887	PrimaryExpression	' '		2008515	0					
ANR	2008888	IfStatement	if ( attr -> encode && attr -> encode -> details . type_str )		2008515	2					
ANR	2008889	Condition	attr -> encode && attr -> encode -> details . type_str	4825:10:160325:160370	2008515	0	True				
ANR	2008890	AndExpression	attr -> encode && attr -> encode -> details . type_str		2008515	0		&&			
ANR	2008891	PtrMemberAccess	attr -> encode		2008515	0					
ANR	2008892	Identifier	attr		2008515	0					
ANR	2008893	Identifier	encode		2008515	1					
ANR	2008894	MemberAccess	attr -> encode -> details . type_str		2008515	1					
ANR	2008895	PtrMemberAccess	attr -> encode -> details		2008515	0					
ANR	2008896	PtrMemberAccess	attr -> encode		2008515	0					
ANR	2008897	Identifier	attr		2008515	0					
ANR	2008898	Identifier	encode		2008515	1					
ANR	2008899	Identifier	details		2008515	1					
ANR	2008900	Identifier	type_str		2008515	1					
ANR	2008901	CompoundStatement		150:58:5534:5534	2008515	1					
ANR	2008902	ExpressionStatement	"smart_str_appends ( buf , attr -> encode -> details . type_str )"	4826:7:160382:160436	2008515	0	True				
ANR	2008903	CallExpression	"smart_str_appends ( buf , attr -> encode -> details . type_str )"		2008515	0					
ANR	2008904	Callee	smart_str_appends		2008515	0					
ANR	2008905	Identifier	smart_str_appends		2008515	0					
ANR	2008906	ArgumentList	buf		2008515	1					
ANR	2008907	Argument	buf		2008515	0					
ANR	2008908	Identifier	buf		2008515	0					
ANR	2008909	Argument	attr -> encode -> details . type_str		2008515	1					
ANR	2008910	MemberAccess	attr -> encode -> details . type_str		2008515	0					
ANR	2008911	PtrMemberAccess	attr -> encode -> details		2008515	0					
ANR	2008912	PtrMemberAccess	attr -> encode		2008515	0					
ANR	2008913	Identifier	attr		2008515	0					
ANR	2008914	Identifier	encode		2008515	1					
ANR	2008915	Identifier	details		2008515	1					
ANR	2008916	Identifier	type_str		2008515	1					
ANR	2008917	ExpressionStatement	"smart_str_appendc ( buf , ' ' )"	4827:7:160445:160472	2008515	1	True				
ANR	2008918	CallExpression	"smart_str_appendc ( buf , ' ' )"		2008515	0					
ANR	2008919	Callee	smart_str_appendc		2008515	0					
ANR	2008920	Identifier	smart_str_appendc		2008515	0					
ANR	2008921	ArgumentList	buf		2008515	1					
ANR	2008922	Argument	buf		2008515	0					
ANR	2008923	Identifier	buf		2008515	0					
ANR	2008924	Argument	' '		2008515	1					
ANR	2008925	PrimaryExpression	' '		2008515	0					
ANR	2008926	ElseStatement	else		2008515	0					
ANR	2008927	CompoundStatement		153:13:5648:5648	2008515	0					
ANR	2008928	ExpressionStatement	"smart_str_appendl ( buf , ""UNKNOWN "" , 8 )"	4829:7:160496:160533	2008515	0	True				
ANR	2008929	CallExpression	"smart_str_appendl ( buf , ""UNKNOWN "" , 8 )"		2008515	0					
ANR	2008930	Callee	smart_str_appendl		2008515	0					
ANR	2008931	Identifier	smart_str_appendl		2008515	0					
ANR	2008932	ArgumentList	buf		2008515	1					
ANR	2008933	Argument	buf		2008515	0					
ANR	2008934	Identifier	buf		2008515	0					
ANR	2008935	Argument	"""UNKNOWN """		2008515	1					
ANR	2008936	PrimaryExpression	"""UNKNOWN """		2008515	0					
ANR	2008937	Argument	8		2008515	2					
ANR	2008938	PrimaryExpression	8		2008515	0					
ANR	2008939	ExpressionStatement	"smart_str_appends ( buf , attr -> name )"	4831:6:160549:160583	2008515	3	True				
ANR	2008940	CallExpression	"smart_str_appends ( buf , attr -> name )"		2008515	0					
ANR	2008941	Callee	smart_str_appends		2008515	0					
ANR	2008942	Identifier	smart_str_appends		2008515	0					
ANR	2008943	ArgumentList	buf		2008515	1					
ANR	2008944	Argument	buf		2008515	0					
ANR	2008945	Identifier	buf		2008515	0					
ANR	2008946	Argument	attr -> name		2008515	1					
ANR	2008947	PtrMemberAccess	attr -> name		2008515	0					
ANR	2008948	Identifier	attr		2008515	0					
ANR	2008949	Identifier	name		2008515	1					
ANR	2008950	ExpressionStatement	"smart_str_appendl ( buf , "";\\n"" , 2 )"	4832:6:160591:160623	2008515	4	True				
ANR	2008951	CallExpression	"smart_str_appendl ( buf , "";\\n"" , 2 )"		2008515	0					
ANR	2008952	Callee	smart_str_appendl		2008515	0					
ANR	2008953	Identifier	smart_str_appendl		2008515	0					
ANR	2008954	ArgumentList	buf		2008515	1					
ANR	2008955	Argument	buf		2008515	0					
ANR	2008956	Identifier	buf		2008515	0					
ANR	2008957	Argument	""";\\n"""		2008515	1					
ANR	2008958	PrimaryExpression	""";\\n"""		2008515	0					
ANR	2008959	Argument	2		2008515	2					
ANR	2008960	PrimaryExpression	2		2008515	0					
ANR	2008961	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	4833:7:160632:160655	2008515	10	True				
ANR	2008962	CallExpression	ZEND_HASH_FOREACH_END ( )		2008515	0					
ANR	2008963	Callee	ZEND_HASH_FOREACH_END		2008515	0					
ANR	2008964	Identifier	ZEND_HASH_FOREACH_END		2008515	0					
ANR	2008965	ArgumentList			2008515	1					
ANR	2008966	IfStatement	if ( spaces . s )		2008515	7					
ANR	2008967	Condition	spaces . s	4835:8:160671:160678	2008515	0	True				
ANR	2008968	MemberAccess	spaces . s		2008515	0					
ANR	2008969	Identifier	spaces		2008515	0					
ANR	2008970	Identifier	s		2008515	1					
ANR	2008971	CompoundStatement		160:18:5842:5842	2008515	1					
ANR	2008972	ExpressionStatement	"smart_str_appendl ( buf , ZSTR_VAL ( spaces . s ) , ZSTR_LEN ( spaces . s ) )"	4836:5:160688:160750	2008515	0	True				
ANR	2008973	CallExpression	"smart_str_appendl ( buf , ZSTR_VAL ( spaces . s ) , ZSTR_LEN ( spaces . s ) )"		2008515	0					
ANR	2008974	Callee	smart_str_appendl		2008515	0					
ANR	2008975	Identifier	smart_str_appendl		2008515	0					
ANR	2008976	ArgumentList	buf		2008515	1					
ANR	2008977	Argument	buf		2008515	0					
ANR	2008978	Identifier	buf		2008515	0					
ANR	2008979	Argument	ZSTR_VAL ( spaces . s )		2008515	1					
ANR	2008980	CallExpression	ZSTR_VAL ( spaces . s )		2008515	0					
ANR	2008981	Callee	ZSTR_VAL		2008515	0					
ANR	2008982	Identifier	ZSTR_VAL		2008515	0					
ANR	2008983	ArgumentList	spaces . s		2008515	1					
ANR	2008984	Argument	spaces . s		2008515	0					
ANR	2008985	MemberAccess	spaces . s		2008515	0					
ANR	2008986	Identifier	spaces		2008515	0					
ANR	2008987	Identifier	s		2008515	1					
ANR	2008988	Argument	ZSTR_LEN ( spaces . s )		2008515	2					
ANR	2008989	CallExpression	ZSTR_LEN ( spaces . s )		2008515	0					
ANR	2008990	Callee	ZSTR_LEN		2008515	0					
ANR	2008991	Identifier	ZSTR_LEN		2008515	0					
ANR	2008992	ArgumentList	spaces . s		2008515	1					
ANR	2008993	Argument	spaces . s		2008515	0					
ANR	2008994	MemberAccess	spaces . s		2008515	0					
ANR	2008995	Identifier	spaces		2008515	0					
ANR	2008996	Identifier	s		2008515	1					
ANR	2008997	ExpressionStatement	"smart_str_appendc ( buf , '}' )"	4838:4:160762:160789	2008515	8	True				
ANR	2008998	CallExpression	"smart_str_appendc ( buf , '}' )"		2008515	0					
ANR	2008999	Callee	smart_str_appendc		2008515	0					
ANR	2009000	Identifier	smart_str_appendc		2008515	0					
ANR	2009001	ArgumentList	buf		2008515	1					
ANR	2009002	Argument	buf		2008515	0					
ANR	2009003	Identifier	buf		2008515	0					
ANR	2009004	Argument	'}'		2008515	1					
ANR	2009005	PrimaryExpression	'}'		2008515	0					
ANR	2009006	SwitchStatement	switch ( type -> kind )		2008515	4					
ANR	2009007	Condition	type -> kind	4686:9:155036:155045	2008515	0	True				
ANR	2009008	PtrMemberAccess	type -> kind		2008515	0					
ANR	2009009	Identifier	type		2008515	0					
ANR	2009010	Identifier	kind		2008515	1					
ANR	2009011	CompoundStatement		11:21:209:209	2008515	1					
ANR	2009012	Label	case XSD_TYPEKIND_SIMPLE :	4687:2:155052:155076	2008515	0	True				
ANR	2009013	Identifier	XSD_TYPEKIND_SIMPLE		2008515	0					
ANR	2009014	IfStatement	if ( type -> encode )		2008515	1					
ANR	2009015	Condition	type -> encode	4688:7:155085:155096	2008515	0	True				
ANR	2009016	PtrMemberAccess	type -> encode		2008515	0					
ANR	2009017	Identifier	type		2008515	0					
ANR	2009018	Identifier	encode		2008515	1					
ANR	2009019	CompoundStatement		13:21:260:260	2008515	1					
ANR	2009020	ExpressionStatement	"smart_str_appendl ( buf , type -> encode -> details . type_str , strlen ( type -> encode -> details . type_str ) )"	4689:4:155105:155199	2008515	0	True				
ANR	2009021	CallExpression	"smart_str_appendl ( buf , type -> encode -> details . type_str , strlen ( type -> encode -> details . type_str ) )"		2008515	0					
ANR	2009022	Callee	smart_str_appendl		2008515	0					
ANR	2009023	Identifier	smart_str_appendl		2008515	0					
ANR	2009024	ArgumentList	buf		2008515	1					
ANR	2009025	Argument	buf		2008515	0					
ANR	2009026	Identifier	buf		2008515	0					
ANR	2009027	Argument	type -> encode -> details . type_str		2008515	1					
ANR	2009028	MemberAccess	type -> encode -> details . type_str		2008515	0					
ANR	2009029	PtrMemberAccess	type -> encode -> details		2008515	0					
ANR	2009030	PtrMemberAccess	type -> encode		2008515	0					
ANR	2009031	Identifier	type		2008515	0					
ANR	2009032	Identifier	encode		2008515	1					
ANR	2009033	Identifier	details		2008515	1					
ANR	2009034	Identifier	type_str		2008515	1					
ANR	2009035	Argument	strlen ( type -> encode -> details . type_str )		2008515	2					
ANR	2009036	CallExpression	strlen ( type -> encode -> details . type_str )		2008515	0					
ANR	2009037	Callee	strlen		2008515	0					
ANR	2009038	Identifier	strlen		2008515	0					
ANR	2009039	ArgumentList	type -> encode -> details . type_str		2008515	1					
ANR	2009040	Argument	type -> encode -> details . type_str		2008515	0					
ANR	2009041	MemberAccess	type -> encode -> details . type_str		2008515	0					
ANR	2009042	PtrMemberAccess	type -> encode -> details		2008515	0					
ANR	2009043	PtrMemberAccess	type -> encode		2008515	0					
ANR	2009044	Identifier	type		2008515	0					
ANR	2009045	Identifier	encode		2008515	1					
ANR	2009046	Identifier	details		2008515	1					
ANR	2009047	Identifier	type_str		2008515	1					
ANR	2009048	ExpressionStatement	"smart_str_appendc ( buf , ' ' )"	4690:4:155205:155232	2008515	1	True				
ANR	2009049	CallExpression	"smart_str_appendc ( buf , ' ' )"		2008515	0					
ANR	2009050	Callee	smart_str_appendc		2008515	0					
ANR	2009051	Identifier	smart_str_appendc		2008515	0					
ANR	2009052	ArgumentList	buf		2008515	1					
ANR	2009053	Argument	buf		2008515	0					
ANR	2009054	Identifier	buf		2008515	0					
ANR	2009055	Argument	' '		2008515	1					
ANR	2009056	PrimaryExpression	' '		2008515	0					
ANR	2009057	ElseStatement	else		2008515	0					
ANR	2009058	CompoundStatement		16:10:405:405	2008515	0					
ANR	2009059	ExpressionStatement	"smart_str_appendl ( buf , ""anyType "" , sizeof ( ""anyType "" ) - 1 )"	4692:4:155250:155306	2008515	0	True				
ANR	2009060	CallExpression	"smart_str_appendl ( buf , ""anyType "" , sizeof ( ""anyType "" ) - 1 )"		2008515	0					
ANR	2009061	Callee	smart_str_appendl		2008515	0					
ANR	2009062	Identifier	smart_str_appendl		2008515	0					
ANR	2009063	ArgumentList	buf		2008515	1					
ANR	2009064	Argument	buf		2008515	0					
ANR	2009065	Identifier	buf		2008515	0					
ANR	2009066	Argument	"""anyType """		2008515	1					
ANR	2009067	PrimaryExpression	"""anyType """		2008515	0					
ANR	2009068	Argument	"sizeof ( ""anyType "" ) - 1"		2008515	2					
ANR	2009069	AdditiveExpression	"sizeof ( ""anyType "" ) - 1"		2008515	0		-			
ANR	2009070	SizeofExpression	"sizeof ( ""anyType "" )"		2008515	0					
ANR	2009071	Sizeof	sizeof		2008515	0					
ANR	2009072	PrimaryExpression	"""anyType """		2008515	1					
ANR	2009073	PrimaryExpression	1		2008515	1					
ANR	2009074	ExpressionStatement	"smart_str_appendl ( buf , type -> name , strlen ( type -> name ) )"	4694:3:155316:155370	2008515	2	True				
ANR	2009075	CallExpression	"smart_str_appendl ( buf , type -> name , strlen ( type -> name ) )"		2008515	0					
ANR	2009076	Callee	smart_str_appendl		2008515	0					
ANR	2009077	Identifier	smart_str_appendl		2008515	0					
ANR	2009078	ArgumentList	buf		2008515	1					
ANR	2009079	Argument	buf		2008515	0					
ANR	2009080	Identifier	buf		2008515	0					
ANR	2009081	Argument	type -> name		2008515	1					
ANR	2009082	PtrMemberAccess	type -> name		2008515	0					
ANR	2009083	Identifier	type		2008515	0					
ANR	2009084	Identifier	name		2008515	1					
ANR	2009085	Argument	strlen ( type -> name )		2008515	2					
ANR	2009086	CallExpression	strlen ( type -> name )		2008515	0					
ANR	2009087	Callee	strlen		2008515	0					
ANR	2009088	Identifier	strlen		2008515	0					
ANR	2009089	ArgumentList	type -> name		2008515	1					
ANR	2009090	Argument	type -> name		2008515	0					
ANR	2009091	PtrMemberAccess	type -> name		2008515	0					
ANR	2009092	Identifier	type		2008515	0					
ANR	2009093	Identifier	name		2008515	1					
ANR	2009094	BreakStatement	break ;	4695:3:155375:155380	2008515	3	True				
ANR	2009095	Label	case XSD_TYPEKIND_LIST :	4696:2:155384:155406	2008515	4	True				
ANR	2009096	Identifier	XSD_TYPEKIND_LIST		2008515	0					
ANR	2009097	ExpressionStatement	"smart_str_appendl ( buf , ""list "" , 5 )"	4697:3:155411:155445	2008515	5	True				
ANR	2009098	CallExpression	"smart_str_appendl ( buf , ""list "" , 5 )"		2008515	0					
ANR	2009099	Callee	smart_str_appendl		2008515	0					
ANR	2009100	Identifier	smart_str_appendl		2008515	0					
ANR	2009101	ArgumentList	buf		2008515	1					
ANR	2009102	Argument	buf		2008515	0					
ANR	2009103	Identifier	buf		2008515	0					
ANR	2009104	Argument	"""list """		2008515	1					
ANR	2009105	PrimaryExpression	"""list """		2008515	0					
ANR	2009106	Argument	5		2008515	2					
ANR	2009107	PrimaryExpression	5		2008515	0					
ANR	2009108	ExpressionStatement	"smart_str_appendl ( buf , type -> name , strlen ( type -> name ) )"	4698:3:155450:155504	2008515	6	True				
ANR	2009109	CallExpression	"smart_str_appendl ( buf , type -> name , strlen ( type -> name ) )"		2008515	0					
ANR	2009110	Callee	smart_str_appendl		2008515	0					
ANR	2009111	Identifier	smart_str_appendl		2008515	0					
ANR	2009112	ArgumentList	buf		2008515	1					
ANR	2009113	Argument	buf		2008515	0					
ANR	2009114	Identifier	buf		2008515	0					
ANR	2009115	Argument	type -> name		2008515	1					
ANR	2009116	PtrMemberAccess	type -> name		2008515	0					
ANR	2009117	Identifier	type		2008515	0					
ANR	2009118	Identifier	name		2008515	1					
ANR	2009119	Argument	strlen ( type -> name )		2008515	2					
ANR	2009120	CallExpression	strlen ( type -> name )		2008515	0					
ANR	2009121	Callee	strlen		2008515	0					
ANR	2009122	Identifier	strlen		2008515	0					
ANR	2009123	ArgumentList	type -> name		2008515	1					
ANR	2009124	Argument	type -> name		2008515	0					
ANR	2009125	PtrMemberAccess	type -> name		2008515	0					
ANR	2009126	Identifier	type		2008515	0					
ANR	2009127	Identifier	name		2008515	1					
ANR	2009128	IfStatement	if ( type -> elements )		2008515	7					
ANR	2009129	Condition	type -> elements	4699:7:155513:155526	2008515	0	True				
ANR	2009130	PtrMemberAccess	type -> elements		2008515	0					
ANR	2009131	Identifier	type		2008515	0					
ANR	2009132	Identifier	elements		2008515	1					
ANR	2009133	CompoundStatement		25:4:696:716	2008515	1					
ANR	2009134	IdentifierDeclStatement	sdlTypePtr item_type ;	4700:4:155535:155555	2008515	0	True				
ANR	2009135	IdentifierDecl	item_type		2008515	0					
ANR	2009136	IdentifierDeclType	sdlTypePtr		2008515	0					
ANR	2009137	Identifier	item_type		2008515	1					
ANR	2009138	ExpressionStatement	"smart_str_appendl ( buf , "" {"" , 2 )"	4702:4:155562:155593	2008515	1	True				
ANR	2009139	CallExpression	"smart_str_appendl ( buf , "" {"" , 2 )"		2008515	0					
ANR	2009140	Callee	smart_str_appendl		2008515	0					
ANR	2009141	Identifier	smart_str_appendl		2008515	0					
ANR	2009142	ArgumentList	buf		2008515	1					
ANR	2009143	Argument	buf		2008515	0					
ANR	2009144	Identifier	buf		2008515	0					
ANR	2009145	Argument	""" {"""		2008515	1					
ANR	2009146	PrimaryExpression	""" {"""		2008515	0					
ANR	2009147	Argument	2		2008515	2					
ANR	2009148	PrimaryExpression	2		2008515	0					
ANR	2009149	Statement	ZEND_HASH_FOREACH_PTR	4703:4:155599:155619	2008515	2	True				
ANR	2009150	Statement	(	4703:25:155620:155620	2008515	3	True				
ANR	2009151	Statement	type	4703:26:155621:155624	2008515	4	True				
ANR	2009152	Statement	->	4703:30:155625:155626	2008515	5	True				
ANR	2009153	Statement	elements	4703:32:155627:155634	2008515	6	True				
ANR	2009154	Statement	","	4703:40:155635:155635	2008515	7	True				
ANR	2009155	Statement	item_type	4703:42:155637:155645	2008515	8	True				
ANR	2009156	Statement	)	4703:51:155646:155646	2008515	9	True				
ANR	2009157	CompoundStatement		28:53:809:809	2008515	10					
ANR	2009158	ExpressionStatement	"smart_str_appendl ( buf , item_type -> name , strlen ( item_type -> name ) )"	4704:5:155655:155719	2008515	0	True				
ANR	2009159	CallExpression	"smart_str_appendl ( buf , item_type -> name , strlen ( item_type -> name ) )"		2008515	0					
ANR	2009160	Callee	smart_str_appendl		2008515	0					
ANR	2009161	Identifier	smart_str_appendl		2008515	0					
ANR	2009162	ArgumentList	buf		2008515	1					
ANR	2009163	Argument	buf		2008515	0					
ANR	2009164	Identifier	buf		2008515	0					
ANR	2009165	Argument	item_type -> name		2008515	1					
ANR	2009166	PtrMemberAccess	item_type -> name		2008515	0					
ANR	2009167	Identifier	item_type		2008515	0					
ANR	2009168	Identifier	name		2008515	1					
ANR	2009169	Argument	strlen ( item_type -> name )		2008515	2					
ANR	2009170	CallExpression	strlen ( item_type -> name )		2008515	0					
ANR	2009171	Callee	strlen		2008515	0					
ANR	2009172	Identifier	strlen		2008515	0					
ANR	2009173	ArgumentList	item_type -> name		2008515	1					
ANR	2009174	Argument	item_type -> name		2008515	0					
ANR	2009175	PtrMemberAccess	item_type -> name		2008515	0					
ANR	2009176	Identifier	item_type		2008515	0					
ANR	2009177	Identifier	name		2008515	1					
ANR	2009178	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	4705:6:155727:155750	2008515	11	True				
ANR	2009179	CallExpression	ZEND_HASH_FOREACH_END ( )		2008515	0					
ANR	2009180	Callee	ZEND_HASH_FOREACH_END		2008515	0					
ANR	2009181	Identifier	ZEND_HASH_FOREACH_END		2008515	0					
ANR	2009182	ArgumentList			2008515	1					
ANR	2009183	ExpressionStatement	"smart_str_appendc ( buf , '}' )"	4706:4:155756:155783	2008515	12	True				
ANR	2009184	CallExpression	"smart_str_appendc ( buf , '}' )"		2008515	0					
ANR	2009185	Callee	smart_str_appendc		2008515	0					
ANR	2009186	Identifier	smart_str_appendc		2008515	0					
ANR	2009187	ArgumentList	buf		2008515	1					
ANR	2009188	Argument	buf		2008515	0					
ANR	2009189	Identifier	buf		2008515	0					
ANR	2009190	Argument	'}'		2008515	1					
ANR	2009191	PrimaryExpression	'}'		2008515	0					
ANR	2009192	ElseStatement	else		2008515	0					
ANR	2009193	CompoundStatement		84:5:2603:2625	2008515	0					
ANR	2009194	IdentifierDeclStatement	sdlTypePtr elementType ;	4759:5:157442:157464	2008515	0	True				
ANR	2009195	IdentifierDecl	elementType		2008515	0					
ANR	2009196	IdentifierDeclType	sdlTypePtr		2008515	0					
ANR	2009197	Identifier	elementType		2008515	1					
ANR	2009198	Statement	if	4760:5:157471:157472	2008515	1	True				
ANR	2009199	Statement	(	4760:8:157474:157474	2008515	2	True				
ANR	2009200	Statement	type	4760:9:157475:157478	2008515	3	True				
ANR	2009201	Statement	->	4760:13:157479:157480	2008515	4	True				
ANR	2009202	Statement	attributes	4760:15:157481:157490	2008515	5	True				
ANR	2009203	Statement	&&	4760:26:157492:157493	2008515	6	True				
ANR	2009204	Statement	(	4761:9:157504:157504	2008515	7	True				
ANR	2009205	Statement	attr	4761:10:157505:157508	2008515	8	True				
ANR	2009206	Statement	=	4761:15:157510:157510	2008515	9	True				
ANR	2009207	Statement	zend_hash_str_find_ptr	4761:17:157512:157533	2008515	10	True				
ANR	2009208	Statement	(	4761:39:157534:157534	2008515	11	True				
ANR	2009209	Statement	type	4761:40:157535:157538	2008515	12	True				
ANR	2009210	Statement	->	4761:44:157539:157540	2008515	13	True				
ANR	2009211	Statement	attributes	4761:46:157541:157550	2008515	14	True				
ANR	2009212	Statement	","	4761:56:157551:157551	2008515	15	True				
ANR	2009213	Statement	SOAP_1_2_ENC_NAMESPACE	4761:58:157553:157574	2008515	16	True				
ANR	2009214	Statement	""":itemType"""	4761:80:157575:157585	2008515	17	True				
ANR	2009215	Statement	","	4761:91:157586:157586	2008515	18	True				
ANR	2009216	Statement	sizeof	4762:11:157599:157604	2008515	19	True				
ANR	2009217	Statement	(	4762:17:157605:157605	2008515	20	True				
ANR	2009218	Statement	SOAP_1_2_ENC_NAMESPACE	4762:18:157606:157627	2008515	21	True				
ANR	2009219	Statement	""":itemType"""	4762:40:157628:157638	2008515	22	True				
ANR	2009220	Statement	)	4762:51:157639:157639	2008515	23	True				
ANR	2009221	Statement	-	4762:52:157640:157640	2008515	24	True				
ANR	2009222	Statement	1	4762:53:157641:157641	2008515	25	True				
ANR	2009223	Statement	)	4762:54:157642:157642	2008515	26	True				
ANR	2009224	Statement	)	4762:55:157643:157643	2008515	27	True				
ANR	2009225	Statement	!=	4762:57:157645:157646	2008515	28	True				
ANR	2009226	Statement	NULL	4762:60:157648:157651	2008515	29	True				
ANR	2009227	Statement	&&	4762:65:157653:157654	2008515	30	True				
ANR	2009228	Statement	attr	4763:6:157662:157665	2008515	31	True				
ANR	2009229	Statement	->	4763:10:157666:157667	2008515	32	True				
ANR	2009230	Statement	extraAttributes	4763:12:157668:157682	2008515	33	True				
ANR	2009231	Statement	&&	4763:28:157684:157685	2008515	34	True				
ANR	2009232	Statement	(	4764:8:157695:157695	2008515	35	True				
ANR	2009233	Statement	ext	4764:9:157696:157698	2008515	36	True				
ANR	2009234	Statement	=	4764:13:157700:157700	2008515	37	True				
ANR	2009235	Statement	zend_hash_str_find_ptr	4764:15:157702:157723	2008515	38	True				
ANR	2009236	Statement	(	4764:37:157724:157724	2008515	39	True				
ANR	2009237	Statement	attr	4764:38:157725:157728	2008515	40	True				
ANR	2009238	Statement	->	4764:42:157729:157730	2008515	41	True				
ANR	2009239	Statement	extraAttributes	4764:44:157731:157745	2008515	42	True				
ANR	2009240	Statement	","	4764:59:157746:157746	2008515	43	True				
ANR	2009241	Statement	WSDL_NAMESPACE	4764:61:157748:157761	2008515	44	True				
ANR	2009242	Statement	""":itemType"""	4764:75:157762:157772	2008515	45	True				
ANR	2009243	Statement	","	4764:86:157773:157773	2008515	46	True				
ANR	2009244	Statement	sizeof	4764:88:157775:157780	2008515	47	True				
ANR	2009245	Statement	(	4764:94:157781:157781	2008515	48	True				
ANR	2009246	Statement	WSDL_NAMESPACE	4764:95:157782:157795	2008515	49	True				
ANR	2009247	Statement	""":arrayType"""	4764:109:157796:157807	2008515	50	True				
ANR	2009248	Statement	)	4764:121:157808:157808	2008515	51	True				
ANR	2009249	Statement	-	4764:122:157809:157809	2008515	52	True				
ANR	2009250	Statement	1	4764:123:157810:157810	2008515	53	True				
ANR	2009251	Statement	)	4764:124:157811:157811	2008515	54	True				
ANR	2009252	Statement	)	4764:125:157812:157812	2008515	55	True				
ANR	2009253	Statement	!=	4764:127:157814:157815	2008515	56	True				
ANR	2009254	Statement	NULL	4764:130:157817:157820	2008515	57	True				
ANR	2009255	Statement	)	4764:134:157821:157821	2008515	58	True				
ANR	2009256	CompoundStatement		89:136:2984:2984	2008515	59					
ANR	2009257	ExpressionStatement	"smart_str_appends ( buf , ext -> val )"	4765:6:157831:157863	2008515	0	True				
ANR	2009258	CallExpression	"smart_str_appends ( buf , ext -> val )"		2008515	0					
ANR	2009259	Callee	smart_str_appends		2008515	0					
ANR	2009260	Identifier	smart_str_appends		2008515	0					
ANR	2009261	ArgumentList	buf		2008515	1					
ANR	2009262	Argument	buf		2008515	0					
ANR	2009263	Identifier	buf		2008515	0					
ANR	2009264	Argument	ext -> val		2008515	1					
ANR	2009265	PtrMemberAccess	ext -> val		2008515	0					
ANR	2009266	Identifier	ext		2008515	0					
ANR	2009267	Identifier	val		2008515	1					
ANR	2009268	ExpressionStatement	"smart_str_appendc ( buf , ' ' )"	4766:6:157871:157898	2008515	1	True				
ANR	2009269	CallExpression	"smart_str_appendc ( buf , ' ' )"		2008515	0					
ANR	2009270	Callee	smart_str_appendc		2008515	0					
ANR	2009271	Identifier	smart_str_appendc		2008515	0					
ANR	2009272	ArgumentList	buf		2008515	1					
ANR	2009273	Argument	buf		2008515	0					
ANR	2009274	Identifier	buf		2008515	0					
ANR	2009275	Argument	' '		2008515	1					
ANR	2009276	PrimaryExpression	' '		2008515	0					
ANR	2009277	ExpressionStatement	"smart_str_appendl ( buf , type -> name , strlen ( type -> name ) )"	4777:5:158411:158465	2008515	60	True				
ANR	2009278	CallExpression	"smart_str_appendl ( buf , type -> name , strlen ( type -> name ) )"		2008515	0					
ANR	2009279	Callee	smart_str_appendl		2008515	0					
ANR	2009280	Identifier	smart_str_appendl		2008515	0					
ANR	2009281	ArgumentList	buf		2008515	1					
ANR	2009282	Argument	buf		2008515	0					
ANR	2009283	Identifier	buf		2008515	0					
ANR	2009284	Argument	type -> name		2008515	1					
ANR	2009285	PtrMemberAccess	type -> name		2008515	0					
ANR	2009286	Identifier	type		2008515	0					
ANR	2009287	Identifier	name		2008515	1					
ANR	2009288	Argument	strlen ( type -> name )		2008515	2					
ANR	2009289	CallExpression	strlen ( type -> name )		2008515	0					
ANR	2009290	Callee	strlen		2008515	0					
ANR	2009291	Identifier	strlen		2008515	0					
ANR	2009292	ArgumentList	type -> name		2008515	1					
ANR	2009293	Argument	type -> name		2008515	0					
ANR	2009294	PtrMemberAccess	type -> name		2008515	0					
ANR	2009295	Identifier	type		2008515	0					
ANR	2009296	Identifier	name		2008515	1					
ANR	2009297	Statement	if	4778:5:158472:158473	2008515	61	True				
ANR	2009298	Statement	(	4778:8:158475:158475	2008515	62	True				
ANR	2009299	Statement	type	4778:9:158476:158479	2008515	63	True				
ANR	2009300	Statement	->	4778:13:158480:158481	2008515	64	True				
ANR	2009301	Statement	attributes	4778:15:158482:158491	2008515	65	True				
ANR	2009302	Statement	&&	4778:26:158493:158494	2008515	66	True				
ANR	2009303	Statement	(	4779:9:158505:158505	2008515	67	True				
ANR	2009304	Statement	attr	4779:10:158506:158509	2008515	68	True				
ANR	2009305	Statement	=	4779:15:158511:158511	2008515	69	True				
ANR	2009306	Statement	zend_hash_str_find_ptr	4779:17:158513:158534	2008515	70	True				
ANR	2009307	Statement	(	4779:39:158535:158535	2008515	71	True				
ANR	2009308	Statement	type	4779:40:158536:158539	2008515	72	True				
ANR	2009309	Statement	->	4779:44:158540:158541	2008515	73	True				
ANR	2009310	Statement	attributes	4779:46:158542:158551	2008515	74	True				
ANR	2009311	Statement	","	4779:56:158552:158552	2008515	75	True				
ANR	2009312	Statement	SOAP_1_2_ENC_NAMESPACE	4779:58:158554:158575	2008515	76	True				
ANR	2009313	Statement	""":arraySize"""	4779:80:158576:158587	2008515	77	True				
ANR	2009314	Statement	","	4779:92:158588:158588	2008515	78	True				
ANR	2009315	Statement	sizeof	4780:11:158601:158606	2008515	79	True				
ANR	2009316	Statement	(	4780:17:158607:158607	2008515	80	True				
ANR	2009317	Statement	SOAP_1_2_ENC_NAMESPACE	4780:18:158608:158629	2008515	81	True				
ANR	2009318	Statement	""":arraySize"""	4780:40:158630:158641	2008515	82	True				
ANR	2009319	Statement	)	4780:52:158642:158642	2008515	83	True				
ANR	2009320	Statement	-	4780:53:158643:158643	2008515	84	True				
ANR	2009321	Statement	1	4780:54:158644:158644	2008515	85	True				
ANR	2009322	Statement	)	4780:55:158645:158645	2008515	86	True				
ANR	2009323	Statement	)	4780:56:158646:158646	2008515	87	True				
ANR	2009324	Statement	!=	4780:58:158648:158649	2008515	88	True				
ANR	2009325	Statement	NULL	4780:61:158651:158654	2008515	89	True				
ANR	2009326	Statement	&&	4780:66:158656:158657	2008515	90	True				
ANR	2009327	Statement	attr	4781:6:158665:158668	2008515	91	True				
ANR	2009328	Statement	->	4781:10:158669:158670	2008515	92	True				
ANR	2009329	Statement	extraAttributes	4781:12:158671:158685	2008515	93	True				
ANR	2009330	Statement	&&	4781:28:158687:158688	2008515	94	True				
ANR	2009331	Statement	(	4782:9:158699:158699	2008515	95	True				
ANR	2009332	Statement	ext	4782:10:158700:158702	2008515	96	True				
ANR	2009333	Statement	=	4782:14:158704:158704	2008515	97	True				
ANR	2009334	Statement	zend_hash_str_find_ptr	4782:16:158706:158727	2008515	98	True				
ANR	2009335	Statement	(	4782:38:158728:158728	2008515	99	True				
ANR	2009336	Statement	attr	4782:39:158729:158732	2008515	100	True				
ANR	2009337	Statement	->	4782:43:158733:158734	2008515	101	True				
ANR	2009338	Statement	extraAttributes	4782:45:158735:158749	2008515	102	True				
ANR	2009339	Statement	","	4782:60:158750:158750	2008515	103	True				
ANR	2009340	Statement	WSDL_NAMESPACE	4782:62:158752:158765	2008515	104	True				
ANR	2009341	Statement	""":itemType"""	4782:76:158766:158776	2008515	105	True				
ANR	2009342	Statement	","	4782:87:158777:158777	2008515	106	True				
ANR	2009343	Statement	sizeof	4782:89:158779:158784	2008515	107	True				
ANR	2009344	Statement	(	4782:95:158785:158785	2008515	108	True				
ANR	2009345	Statement	WSDL_NAMESPACE	4782:96:158786:158799	2008515	109	True				
ANR	2009346	Statement	""":arraySize"""	4782:110:158800:158811	2008515	110	True				
ANR	2009347	Statement	)	4782:122:158812:158812	2008515	111	True				
ANR	2009348	Statement	-	4782:123:158813:158813	2008515	112	True				
ANR	2009349	Statement	1	4782:124:158814:158814	2008515	113	True				
ANR	2009350	Statement	)	4782:125:158815:158815	2008515	114	True				
ANR	2009351	Statement	)	4782:126:158816:158816	2008515	115	True				
ANR	2009352	Statement	!=	4782:128:158818:158819	2008515	116	True				
ANR	2009353	Statement	NULL	4782:131:158821:158824	2008515	117	True				
ANR	2009354	Statement	)	4782:135:158825:158825	2008515	118	True				
ANR	2009355	CompoundStatement		107:137:3988:3988	2008515	119					
ANR	2009356	ExpressionStatement	"smart_str_appendc ( buf , '[' )"	4783:6:158835:158862	2008515	0	True				
ANR	2009357	CallExpression	"smart_str_appendc ( buf , '[' )"		2008515	0					
ANR	2009358	Callee	smart_str_appendc		2008515	0					
ANR	2009359	Identifier	smart_str_appendc		2008515	0					
ANR	2009360	ArgumentList	buf		2008515	1					
ANR	2009361	Argument	buf		2008515	0					
ANR	2009362	Identifier	buf		2008515	0					
ANR	2009363	Argument	'['		2008515	1					
ANR	2009364	PrimaryExpression	'['		2008515	0					
ANR	2009365	ExpressionStatement	"smart_str_appends ( buf , ext -> val )"	4784:6:158870:158902	2008515	1	True				
ANR	2009366	CallExpression	"smart_str_appends ( buf , ext -> val )"		2008515	0					
ANR	2009367	Callee	smart_str_appends		2008515	0					
ANR	2009368	Identifier	smart_str_appends		2008515	0					
ANR	2009369	ArgumentList	buf		2008515	1					
ANR	2009370	Argument	buf		2008515	0					
ANR	2009371	Identifier	buf		2008515	0					
ANR	2009372	Argument	ext -> val		2008515	1					
ANR	2009373	PtrMemberAccess	ext -> val		2008515	0					
ANR	2009374	Identifier	ext		2008515	0					
ANR	2009375	Identifier	val		2008515	1					
ANR	2009376	ExpressionStatement	"smart_str_appendc ( buf , ']' )"	4785:6:158910:158937	2008515	2	True				
ANR	2009377	CallExpression	"smart_str_appendc ( buf , ']' )"		2008515	0					
ANR	2009378	Callee	smart_str_appendc		2008515	0					
ANR	2009379	Identifier	smart_str_appendc		2008515	0					
ANR	2009380	ArgumentList	buf		2008515	1					
ANR	2009381	Argument	buf		2008515	0					
ANR	2009382	Identifier	buf		2008515	0					
ANR	2009383	Argument	']'		2008515	1					
ANR	2009384	PrimaryExpression	']'		2008515	0					
ANR	2009385	BreakStatement	break ;	4708:3:155793:155798	2008515	8	True				
ANR	2009386	Label	case XSD_TYPEKIND_UNION :	4709:2:155802:155825	2008515	9	True				
ANR	2009387	Identifier	XSD_TYPEKIND_UNION		2008515	0					
ANR	2009388	ExpressionStatement	"smart_str_appendl ( buf , ""union "" , 6 )"	4710:3:155830:155865	2008515	10	True				
ANR	2009389	CallExpression	"smart_str_appendl ( buf , ""union "" , 6 )"		2008515	0					
ANR	2009390	Callee	smart_str_appendl		2008515	0					
ANR	2009391	Identifier	smart_str_appendl		2008515	0					
ANR	2009392	ArgumentList	buf		2008515	1					
ANR	2009393	Argument	buf		2008515	0					
ANR	2009394	Identifier	buf		2008515	0					
ANR	2009395	Argument	"""union """		2008515	1					
ANR	2009396	PrimaryExpression	"""union """		2008515	0					
ANR	2009397	Argument	6		2008515	2					
ANR	2009398	PrimaryExpression	6		2008515	0					
ANR	2009399	ExpressionStatement	"smart_str_appendl ( buf , type -> name , strlen ( type -> name ) )"	4711:3:155870:155924	2008515	11	True				
ANR	2009400	CallExpression	"smart_str_appendl ( buf , type -> name , strlen ( type -> name ) )"		2008515	0					
ANR	2009401	Callee	smart_str_appendl		2008515	0					
ANR	2009402	Identifier	smart_str_appendl		2008515	0					
ANR	2009403	ArgumentList	buf		2008515	1					
ANR	2009404	Argument	buf		2008515	0					
ANR	2009405	Identifier	buf		2008515	0					
ANR	2009406	Argument	type -> name		2008515	1					
ANR	2009407	PtrMemberAccess	type -> name		2008515	0					
ANR	2009408	Identifier	type		2008515	0					
ANR	2009409	Identifier	name		2008515	1					
ANR	2009410	Argument	strlen ( type -> name )		2008515	2					
ANR	2009411	CallExpression	strlen ( type -> name )		2008515	0					
ANR	2009412	Callee	strlen		2008515	0					
ANR	2009413	Identifier	strlen		2008515	0					
ANR	2009414	ArgumentList	type -> name		2008515	1					
ANR	2009415	Argument	type -> name		2008515	0					
ANR	2009416	PtrMemberAccess	type -> name		2008515	0					
ANR	2009417	Identifier	type		2008515	0					
ANR	2009418	Identifier	name		2008515	1					
ANR	2009419	IfStatement	if ( type -> elements )		2008515	12					
ANR	2009420	Condition	type -> elements	4712:7:155933:155946	2008515	0	True				
ANR	2009421	PtrMemberAccess	type -> elements		2008515	0					
ANR	2009422	Identifier	type		2008515	0					
ANR	2009423	Identifier	elements		2008515	1					
ANR	2009424	CompoundStatement		39:4:1142:1155	2008515	1					
ANR	2009425	IdentifierDeclStatement	sdlTypePtr item_type ;	4713:4:155955:155975	2008515	0	True				
ANR	2009426	IdentifierDecl	item_type		2008515	0					
ANR	2009427	IdentifierDeclType	sdlTypePtr		2008515	0					
ANR	2009428	Identifier	item_type		2008515	1					
ANR	2009429	IdentifierDeclStatement	int first = 0 ;	4714:4:155981:155994	2008515	1	True				
ANR	2009430	IdentifierDecl	first = 0		2008515	0					
ANR	2009431	IdentifierDeclType	int		2008515	0					
ANR	2009432	Identifier	first		2008515	1					
ANR	2009433	AssignmentExpression	first = 0		2008515	2		=			
ANR	2009434	Identifier	first		2008515	0					
ANR	2009435	PrimaryExpression	0		2008515	1					
ANR	2009436	ExpressionStatement	"smart_str_appendl ( buf , "" {"" , 2 )"	4716:4:156001:156032	2008515	2	True				
ANR	2009437	CallExpression	"smart_str_appendl ( buf , "" {"" , 2 )"		2008515	0					
ANR	2009438	Callee	smart_str_appendl		2008515	0					
ANR	2009439	Identifier	smart_str_appendl		2008515	0					
ANR	2009440	ArgumentList	buf		2008515	1					
ANR	2009441	Argument	buf		2008515	0					
ANR	2009442	Identifier	buf		2008515	0					
ANR	2009443	Argument	""" {"""		2008515	1					
ANR	2009444	PrimaryExpression	""" {"""		2008515	0					
ANR	2009445	Argument	2		2008515	2					
ANR	2009446	PrimaryExpression	2		2008515	0					
ANR	2009447	Statement	ZEND_HASH_FOREACH_PTR	4717:4:156038:156058	2008515	3	True				
ANR	2009448	Statement	(	4717:25:156059:156059	2008515	4	True				
ANR	2009449	Statement	type	4717:26:156060:156063	2008515	5	True				
ANR	2009450	Statement	->	4717:30:156064:156065	2008515	6	True				
ANR	2009451	Statement	elements	4717:32:156066:156073	2008515	7	True				
ANR	2009452	Statement	","	4717:40:156074:156074	2008515	8	True				
ANR	2009453	Statement	item_type	4717:42:156076:156084	2008515	9	True				
ANR	2009454	Statement	)	4717:51:156085:156085	2008515	10	True				
ANR	2009455	CompoundStatement		42:53:1248:1248	2008515	11					
ANR	2009456	IfStatement	if ( ! first )		2008515	0					
ANR	2009457	Condition	! first	4718:9:156098:156103	2008515	0	True				
ANR	2009458	UnaryOperationExpression	! first		2008515	0					
ANR	2009459	UnaryOperator	!		2008515	0					
ANR	2009460	Identifier	first		2008515	1					
ANR	2009461	CompoundStatement		43:17:1267:1267	2008515	1					
ANR	2009462	ExpressionStatement	"smart_str_appendc ( buf , ',' )"	4719:6:156114:156141	2008515	0	True				
ANR	2009463	CallExpression	"smart_str_appendc ( buf , ',' )"		2008515	0					
ANR	2009464	Callee	smart_str_appendc		2008515	0					
ANR	2009465	Identifier	smart_str_appendc		2008515	0					
ANR	2009466	ArgumentList	buf		2008515	1					
ANR	2009467	Argument	buf		2008515	0					
ANR	2009468	Identifier	buf		2008515	0					
ANR	2009469	Argument	"','"		2008515	1					
ANR	2009470	PrimaryExpression	"','"		2008515	0					
ANR	2009471	ExpressionStatement	first = 0	4720:6:156149:156158	2008515	1	True				
ANR	2009472	AssignmentExpression	first = 0		2008515	0		=			
ANR	2009473	Identifier	first		2008515	0					
ANR	2009474	PrimaryExpression	0		2008515	1					
ANR	2009475	ExpressionStatement	"smart_str_appendl ( buf , item_type -> name , strlen ( item_type -> name ) )"	4722:5:156172:156236	2008515	1	True				
ANR	2009476	CallExpression	"smart_str_appendl ( buf , item_type -> name , strlen ( item_type -> name ) )"		2008515	0					
ANR	2009477	Callee	smart_str_appendl		2008515	0					
ANR	2009478	Identifier	smart_str_appendl		2008515	0					
ANR	2009479	ArgumentList	buf		2008515	1					
ANR	2009480	Argument	buf		2008515	0					
ANR	2009481	Identifier	buf		2008515	0					
ANR	2009482	Argument	item_type -> name		2008515	1					
ANR	2009483	PtrMemberAccess	item_type -> name		2008515	0					
ANR	2009484	Identifier	item_type		2008515	0					
ANR	2009485	Identifier	name		2008515	1					
ANR	2009486	Argument	strlen ( item_type -> name )		2008515	2					
ANR	2009487	CallExpression	strlen ( item_type -> name )		2008515	0					
ANR	2009488	Callee	strlen		2008515	0					
ANR	2009489	Identifier	strlen		2008515	0					
ANR	2009490	ArgumentList	item_type -> name		2008515	1					
ANR	2009491	Argument	item_type -> name		2008515	0					
ANR	2009492	PtrMemberAccess	item_type -> name		2008515	0					
ANR	2009493	Identifier	item_type		2008515	0					
ANR	2009494	Identifier	name		2008515	1					
ANR	2009495	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	4723:6:156244:156267	2008515	12	True				
ANR	2009496	CallExpression	ZEND_HASH_FOREACH_END ( )		2008515	0					
ANR	2009497	Callee	ZEND_HASH_FOREACH_END		2008515	0					
ANR	2009498	Identifier	ZEND_HASH_FOREACH_END		2008515	0					
ANR	2009499	ArgumentList			2008515	1					
ANR	2009500	ExpressionStatement	"smart_str_appendc ( buf , '}' )"	4724:4:156273:156300	2008515	13	True				
ANR	2009501	CallExpression	"smart_str_appendc ( buf , '}' )"		2008515	0					
ANR	2009502	Callee	smart_str_appendc		2008515	0					
ANR	2009503	Identifier	smart_str_appendc		2008515	0					
ANR	2009504	ArgumentList	buf		2008515	1					
ANR	2009505	Argument	buf		2008515	0					
ANR	2009506	Identifier	buf		2008515	0					
ANR	2009507	Argument	'}'		2008515	1					
ANR	2009508	PrimaryExpression	'}'		2008515	0					
ANR	2009509	ElseStatement	else		2008515	0					
ANR	2009510	CompoundStatement		111:12:4112:4112	2008515	0					
ANR	2009511	ExpressionStatement	"smart_str_appendl ( buf , ""[]"" , 2 )"	4787:6:158959:158990	2008515	0	True				
ANR	2009512	CallExpression	"smart_str_appendl ( buf , ""[]"" , 2 )"		2008515	0					
ANR	2009513	Callee	smart_str_appendl		2008515	0					
ANR	2009514	Identifier	smart_str_appendl		2008515	0					
ANR	2009515	ArgumentList	buf		2008515	1					
ANR	2009516	Argument	buf		2008515	0					
ANR	2009517	Identifier	buf		2008515	0					
ANR	2009518	Argument	"""[]"""		2008515	1					
ANR	2009519	PrimaryExpression	"""[]"""		2008515	0					
ANR	2009520	Argument	2		2008515	2					
ANR	2009521	PrimaryExpression	2		2008515	0					
ANR	2009522	BreakStatement	break ;	4726:3:156310:156315	2008515	13	True				
ANR	2009523	Label	case XSD_TYPEKIND_COMPLEX :	4727:2:156319:156344	2008515	14	True				
ANR	2009524	Identifier	XSD_TYPEKIND_COMPLEX		2008515	0					
ANR	2009525	Label	case XSD_TYPEKIND_RESTRICTION :	4728:2:156348:156377	2008515	15	True				
ANR	2009526	Identifier	XSD_TYPEKIND_RESTRICTION		2008515	0					
ANR	2009527	Label	case XSD_TYPEKIND_EXTENSION :	4729:2:156381:156408	2008515	16	True				
ANR	2009528	Identifier	XSD_TYPEKIND_EXTENSION		2008515	0					
ANR	2009529	IfStatement	if ( type -> encode && ( type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY ) )		2008515	17					
ANR	2009530	Condition	type -> encode && ( type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY )	4730:7:156417:156535	2008515	0	True				
ANR	2009531	AndExpression	type -> encode && ( type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY )		2008515	0		&&			
ANR	2009532	PtrMemberAccess	type -> encode		2008515	0					
ANR	2009533	Identifier	type		2008515	0					
ANR	2009534	Identifier	encode		2008515	1					
ANR	2009535	OrExpression	type -> encode -> details . type == IS_ARRAY || type -> encode -> details . type == SOAP_ENC_ARRAY		2008515	1		||			
ANR	2009536	EqualityExpression	type -> encode -> details . type == IS_ARRAY		2008515	0		==			
ANR	2009537	MemberAccess	type -> encode -> details . type		2008515	0					
ANR	2009538	PtrMemberAccess	type -> encode -> details		2008515	0					
ANR	2009539	PtrMemberAccess	type -> encode		2008515	0					
ANR	2009540	Identifier	type		2008515	0					
ANR	2009541	Identifier	encode		2008515	1					
ANR	2009542	Identifier	details		2008515	1					
ANR	2009543	Identifier	type		2008515	1					
ANR	2009544	Identifier	IS_ARRAY		2008515	1					
ANR	2009545	EqualityExpression	type -> encode -> details . type == SOAP_ENC_ARRAY		2008515	1		==			
ANR	2009546	MemberAccess	type -> encode -> details . type		2008515	0					
ANR	2009547	PtrMemberAccess	type -> encode -> details		2008515	0					
ANR	2009548	PtrMemberAccess	type -> encode		2008515	0					
ANR	2009549	Identifier	type		2008515	0					
ANR	2009550	Identifier	encode		2008515	1					
ANR	2009551	Identifier	details		2008515	1					
ANR	2009552	Identifier	type		2008515	1					
ANR	2009553	Identifier	SOAP_ENC_ARRAY		2008515	1					
ANR	2009554	CompoundStatement		59:5:1733:1757	2008515	1					
ANR	2009555	IdentifierDeclStatement	sdlAttributePtr attr ;	4733:5:156545:156565	2008515	0	True				
ANR	2009556	IdentifierDecl	attr		2008515	0					
ANR	2009557	IdentifierDeclType	sdlAttributePtr		2008515	0					
ANR	2009558	Identifier	attr		2008515	1					
ANR	2009559	IdentifierDeclStatement	sdlExtraAttributePtr ext ;	4734:5:156572:156596	2008515	1	True				
ANR	2009560	IdentifierDecl	ext		2008515	0					
ANR	2009561	IdentifierDeclType	sdlExtraAttributePtr		2008515	0					
ANR	2009562	Identifier	ext		2008515	1					
ANR	2009563	Statement	if	4736:4:156603:156604	2008515	2	True				
ANR	2009564	Statement	(	4736:7:156606:156606	2008515	3	True				
ANR	2009565	Statement	type	4736:8:156607:156610	2008515	4	True				
ANR	2009566	Statement	->	4736:12:156611:156612	2008515	5	True				
ANR	2009567	Statement	attributes	4736:14:156613:156622	2008515	6	True				
ANR	2009568	Statement	&&	4736:25:156624:156625	2008515	7	True				
ANR	2009569	Statement	(	4737:8:156635:156635	2008515	8	True				
ANR	2009570	Statement	attr	4737:9:156636:156639	2008515	9	True				
ANR	2009571	Statement	=	4737:14:156641:156641	2008515	10	True				
ANR	2009572	Statement	zend_hash_str_find_ptr	4737:16:156643:156664	2008515	11	True				
ANR	2009573	Statement	(	4737:38:156665:156665	2008515	12	True				
ANR	2009574	Statement	type	4737:39:156666:156669	2008515	13	True				
ANR	2009575	Statement	->	4737:43:156670:156671	2008515	14	True				
ANR	2009576	Statement	attributes	4737:45:156672:156681	2008515	15	True				
ANR	2009577	Statement	","	4737:55:156682:156682	2008515	16	True				
ANR	2009578	Statement	SOAP_1_1_ENC_NAMESPACE	4737:57:156684:156705	2008515	17	True				
ANR	2009579	Statement	""":arrayType"""	4737:79:156706:156717	2008515	18	True				
ANR	2009580	Statement	","	4737:91:156718:156718	2008515	19	True				
ANR	2009581	Statement	sizeof	4738:10:156730:156735	2008515	20	True				
ANR	2009582	Statement	(	4738:16:156736:156736	2008515	21	True				
ANR	2009583	Statement	SOAP_1_1_ENC_NAMESPACE	4738:17:156737:156758	2008515	22	True				
ANR	2009584	Statement	""":arrayType"""	4738:39:156759:156770	2008515	23	True				
ANR	2009585	Statement	)	4738:51:156771:156771	2008515	24	True				
ANR	2009586	Statement	-	4738:52:156772:156772	2008515	25	True				
ANR	2009587	Statement	1	4738:53:156773:156773	2008515	26	True				
ANR	2009588	Statement	)	4738:54:156774:156774	2008515	27	True				
ANR	2009589	Statement	)	4738:55:156775:156775	2008515	28	True				
ANR	2009590	Statement	!=	4738:57:156777:156778	2008515	29	True				
ANR	2009591	Statement	NULL	4738:60:156780:156783	2008515	30	True				
ANR	2009592	Statement	&&	4738:65:156785:156786	2008515	31	True				
ANR	2009593	Statement	attr	4739:5:156793:156796	2008515	32	True				
ANR	2009594	Statement	->	4739:9:156797:156798	2008515	33	True				
ANR	2009595	Statement	extraAttributes	4739:11:156799:156813	2008515	34	True				
ANR	2009596	Statement	&&	4739:27:156815:156816	2008515	35	True				
ANR	2009597	Statement	(	4740:8:156826:156826	2008515	36	True				
ANR	2009598	Statement	ext	4740:9:156827:156829	2008515	37	True				
ANR	2009599	Statement	=	4740:13:156831:156831	2008515	38	True				
ANR	2009600	Statement	zend_hash_str_find_ptr	4740:15:156833:156854	2008515	39	True				
ANR	2009601	Statement	(	4740:37:156855:156855	2008515	40	True				
ANR	2009602	Statement	attr	4740:38:156856:156859	2008515	41	True				
ANR	2009603	Statement	->	4740:42:156860:156861	2008515	42	True				
ANR	2009604	Statement	extraAttributes	4740:44:156862:156876	2008515	43	True				
ANR	2009605	Statement	","	4740:59:156877:156877	2008515	44	True				
ANR	2009606	Statement	WSDL_NAMESPACE	4740:61:156879:156892	2008515	45	True				
ANR	2009607	Statement	""":arrayType"""	4740:75:156893:156904	2008515	46	True				
ANR	2009608	Statement	","	4740:87:156905:156905	2008515	47	True				
ANR	2009609	Statement	sizeof	4740:89:156907:156912	2008515	48	True				
ANR	2009610	Statement	(	4740:95:156913:156913	2008515	49	True				
ANR	2009611	Statement	WSDL_NAMESPACE	4740:96:156914:156927	2008515	50	True				
ANR	2009612	Statement	""":arrayType"""	4740:110:156928:156939	2008515	51	True				
ANR	2009613	Statement	)	4740:122:156940:156940	2008515	52	True				
ANR	2009614	Statement	-	4740:123:156941:156941	2008515	53	True				
ANR	2009615	Statement	1	4740:124:156942:156942	2008515	54	True				
ANR	2009616	Statement	)	4740:125:156943:156943	2008515	55	True				
ANR	2009617	Statement	)	4740:126:156944:156944	2008515	56	True				
ANR	2009618	Statement	!=	4740:128:156946:156947	2008515	57	True				
ANR	2009619	Statement	NULL	4740:131:156949:156952	2008515	58	True				
ANR	2009620	Statement	)	4740:135:156953:156953	2008515	59	True				
ANR	2009621	CompoundStatement		67:5:2163:2170	2008515	60					
ANR	2009622	IdentifierDeclStatement	"char * end = strchr ( ext -> val , '[' ) ;"	4741:5:156962:156995	2008515	0	True				
ANR	2009623	IdentifierDecl	"* end = strchr ( ext -> val , '[' )"		2008515	0					
ANR	2009624	IdentifierDeclType	char *		2008515	0					
ANR	2009625	Identifier	end		2008515	1					
ANR	2009626	AssignmentExpression	"* end = strchr ( ext -> val , '[' )"		2008515	2		=			
ANR	2009627	Identifier	end		2008515	0					
ANR	2009628	CallExpression	"strchr ( ext -> val , '[' )"		2008515	1					
ANR	2009629	Callee	strchr		2008515	0					
ANR	2009630	Identifier	strchr		2008515	0					
ANR	2009631	ArgumentList	ext -> val		2008515	1					
ANR	2009632	Argument	ext -> val		2008515	0					
ANR	2009633	PtrMemberAccess	ext -> val		2008515	0					
ANR	2009634	Identifier	ext		2008515	0					
ANR	2009635	Identifier	val		2008515	1					
ANR	2009636	Argument	'['		2008515	1					
ANR	2009637	PrimaryExpression	'['		2008515	0					
ANR	2009638	IdentifierDeclStatement	int len ;	4742:5:157002:157009	2008515	1	True				
ANR	2009639	IdentifierDecl	len		2008515	0					
ANR	2009640	IdentifierDeclType	int		2008515	0					
ANR	2009641	Identifier	len		2008515	1					
ANR	2009642	IfStatement	if ( end == NULL )		2008515	2					
ANR	2009643	Condition	end == NULL	4743:9:157020:157030	2008515	0	True				
ANR	2009644	EqualityExpression	end == NULL		2008515	0		==			
ANR	2009645	Identifier	end		2008515	0					
ANR	2009646	Identifier	NULL		2008515	1					
ANR	2009647	CompoundStatement		68:22:2194:2194	2008515	1					
ANR	2009648	ExpressionStatement	len = strlen ( ext -> val )	4744:6:157041:157063	2008515	0	True				
ANR	2009649	AssignmentExpression	len = strlen ( ext -> val )		2008515	0		=			
ANR	2009650	Identifier	len		2008515	0					
ANR	2009651	CallExpression	strlen ( ext -> val )		2008515	1					
ANR	2009652	Callee	strlen		2008515	0					
ANR	2009653	Identifier	strlen		2008515	0					
ANR	2009654	ArgumentList	ext -> val		2008515	1					
ANR	2009655	Argument	ext -> val		2008515	0					
ANR	2009656	PtrMemberAccess	ext -> val		2008515	0					
ANR	2009657	Identifier	ext		2008515	0					
ANR	2009658	Identifier	val		2008515	1					
ANR	2009659	ElseStatement	else		2008515	0					
ANR	2009660	CompoundStatement		70:12:2238:2238	2008515	0					
ANR	2009661	ExpressionStatement	len = end - ext -> val	4746:6:157085:157105	2008515	0	True				
ANR	2009662	AssignmentExpression	len = end - ext -> val		2008515	0		=			
ANR	2009663	Identifier	len		2008515	0					
ANR	2009664	AdditiveExpression	end - ext -> val		2008515	1		-			
ANR	2009665	Identifier	end		2008515	0					
ANR	2009666	PtrMemberAccess	ext -> val		2008515	1					
ANR	2009667	Identifier	ext		2008515	0					
ANR	2009668	Identifier	val		2008515	1					
ANR	2009669	IfStatement	if ( len == 0 )		2008515	3					
ANR	2009670	Condition	len == 0	4748:9:157123:157130	2008515	0	True				
ANR	2009671	EqualityExpression	len == 0		2008515	0		==			
ANR	2009672	Identifier	len		2008515	0					
ANR	2009673	PrimaryExpression	0		2008515	1					
ANR	2009674	CompoundStatement		73:19:2294:2294	2008515	1					
ANR	2009675	ExpressionStatement	"smart_str_appendl ( buf , ""anyType"" , sizeof ( ""anyType"" ) - 1 )"	4749:6:157141:157195	2008515	0	True				
ANR	2009676	CallExpression	"smart_str_appendl ( buf , ""anyType"" , sizeof ( ""anyType"" ) - 1 )"		2008515	0					
ANR	2009677	Callee	smart_str_appendl		2008515	0					
ANR	2009678	Identifier	smart_str_appendl		2008515	0					
ANR	2009679	ArgumentList	buf		2008515	1					
ANR	2009680	Argument	buf		2008515	0					
ANR	2009681	Identifier	buf		2008515	0					
ANR	2009682	Argument	"""anyType"""		2008515	1					
ANR	2009683	PrimaryExpression	"""anyType"""		2008515	0					
ANR	2009684	Argument	"sizeof ( ""anyType"" ) - 1"		2008515	2					
ANR	2009685	AdditiveExpression	"sizeof ( ""anyType"" ) - 1"		2008515	0		-			
ANR	2009686	SizeofExpression	"sizeof ( ""anyType"" )"		2008515	0					
ANR	2009687	Sizeof	sizeof		2008515	0					
ANR	2009688	PrimaryExpression	"""anyType"""		2008515	1					
ANR	2009689	PrimaryExpression	1		2008515	1					
ANR	2009690	ElseStatement	else		2008515	0					
ANR	2009691	CompoundStatement		75:12:2370:2370	2008515	0					
ANR	2009692	ExpressionStatement	"smart_str_appendl ( buf , ext -> val , len )"	4751:6:157217:157254	2008515	0	True				
ANR	2009693	CallExpression	"smart_str_appendl ( buf , ext -> val , len )"		2008515	0					
ANR	2009694	Callee	smart_str_appendl		2008515	0					
ANR	2009695	Identifier	smart_str_appendl		2008515	0					
ANR	2009696	ArgumentList	buf		2008515	1					
ANR	2009697	Argument	buf		2008515	0					
ANR	2009698	Identifier	buf		2008515	0					
ANR	2009699	Argument	ext -> val		2008515	1					
ANR	2009700	PtrMemberAccess	ext -> val		2008515	0					
ANR	2009701	Identifier	ext		2008515	0					
ANR	2009702	Identifier	val		2008515	1					
ANR	2009703	Argument	len		2008515	2					
ANR	2009704	Identifier	len		2008515	0					
ANR	2009705	ExpressionStatement	"smart_str_appendc ( buf , ' ' )"	4753:5:157268:157295	2008515	4	True				
ANR	2009706	CallExpression	"smart_str_appendc ( buf , ' ' )"		2008515	0					
ANR	2009707	Callee	smart_str_appendc		2008515	0					
ANR	2009708	Identifier	smart_str_appendc		2008515	0					
ANR	2009709	ArgumentList	buf		2008515	1					
ANR	2009710	Argument	buf		2008515	0					
ANR	2009711	Identifier	buf		2008515	0					
ANR	2009712	Argument	' '		2008515	1					
ANR	2009713	PrimaryExpression	' '		2008515	0					
ANR	2009714	ExpressionStatement	"smart_str_appendl ( buf , type -> name , strlen ( type -> name ) )"	4754:5:157302:157356	2008515	5	True				
ANR	2009715	CallExpression	"smart_str_appendl ( buf , type -> name , strlen ( type -> name ) )"		2008515	0					
ANR	2009716	Callee	smart_str_appendl		2008515	0					
ANR	2009717	Identifier	smart_str_appendl		2008515	0					
ANR	2009718	ArgumentList	buf		2008515	1					
ANR	2009719	Argument	buf		2008515	0					
ANR	2009720	Identifier	buf		2008515	0					
ANR	2009721	Argument	type -> name		2008515	1					
ANR	2009722	PtrMemberAccess	type -> name		2008515	0					
ANR	2009723	Identifier	type		2008515	0					
ANR	2009724	Identifier	name		2008515	1					
ANR	2009725	Argument	strlen ( type -> name )		2008515	2					
ANR	2009726	CallExpression	strlen ( type -> name )		2008515	0					
ANR	2009727	Callee	strlen		2008515	0					
ANR	2009728	Identifier	strlen		2008515	0					
ANR	2009729	ArgumentList	type -> name		2008515	1					
ANR	2009730	Argument	type -> name		2008515	0					
ANR	2009731	PtrMemberAccess	type -> name		2008515	0					
ANR	2009732	Identifier	type		2008515	0					
ANR	2009733	Identifier	name		2008515	1					
ANR	2009734	IfStatement	if ( end != NULL )		2008515	6					
ANR	2009735	Condition	end != NULL	4755:9:157367:157377	2008515	0	True				
ANR	2009736	EqualityExpression	end != NULL		2008515	0		!=			
ANR	2009737	Identifier	end		2008515	0					
ANR	2009738	Identifier	NULL		2008515	1					
ANR	2009739	CompoundStatement		80:22:2541:2541	2008515	1					
ANR	2009740	ExpressionStatement	"smart_str_appends ( buf , end )"	4756:6:157388:157415	2008515	0	True				
ANR	2009741	CallExpression	"smart_str_appends ( buf , end )"		2008515	0					
ANR	2009742	Callee	smart_str_appends		2008515	0					
ANR	2009743	Identifier	smart_str_appends		2008515	0					
ANR	2009744	ArgumentList	buf		2008515	1					
ANR	2009745	Argument	buf		2008515	0					
ANR	2009746	Identifier	buf		2008515	0					
ANR	2009747	Argument	end		2008515	1					
ANR	2009748	Identifier	end		2008515	0					
ANR	2009749	ElseStatement	else		2008515	0					
ANR	2009750	IfStatement	"if ( type -> elements && zend_hash_num_elements ( type -> elements ) == 1 && ( zend_hash_internal_pointer_reset ( type -> elements ) , ( elementType = zend_hash_get_current_data_ptr ( type -> elements ) ) != NULL ) && elementType -> encode && elementType -> encode -> details . type_str )"		2008515	0					
ANR	2009751	Condition	"type -> elements && zend_hash_num_elements ( type -> elements ) == 1 && ( zend_hash_internal_pointer_reset ( type -> elements ) , ( elementType = zend_hash_get_current_data_ptr ( type -> elements ) ) != NULL ) && elementType -> encode && elementType -> encode -> details . type_str"	4767:16:157916:158231	2008515	0	True				
ANR	2009752	AndExpression	"type -> elements && zend_hash_num_elements ( type -> elements ) == 1 && ( zend_hash_internal_pointer_reset ( type -> elements ) , ( elementType = zend_hash_get_current_data_ptr ( type -> elements ) ) != NULL ) && elementType -> encode && elementType -> encode -> details . type_str"		2008515	0		&&			
ANR	2009753	PtrMemberAccess	type -> elements		2008515	0					
ANR	2009754	Identifier	type		2008515	0					
ANR	2009755	Identifier	elements		2008515	1					
ANR	2009756	AndExpression	"zend_hash_num_elements ( type -> elements ) == 1 && ( zend_hash_internal_pointer_reset ( type -> elements ) , ( elementType = zend_hash_get_current_data_ptr ( type -> elements ) ) != NULL ) && elementType -> encode && elementType -> encode -> details . type_str"		2008515	1		&&			
ANR	2009757	EqualityExpression	zend_hash_num_elements ( type -> elements ) == 1		2008515	0		==			
ANR	2009758	CallExpression	zend_hash_num_elements ( type -> elements )		2008515	0					
ANR	2009759	Callee	zend_hash_num_elements		2008515	0					
ANR	2009760	Identifier	zend_hash_num_elements		2008515	0					
ANR	2009761	ArgumentList	type -> elements		2008515	1					
ANR	2009762	Argument	type -> elements		2008515	0					
ANR	2009763	PtrMemberAccess	type -> elements		2008515	0					
ANR	2009764	Identifier	type		2008515	0					
ANR	2009765	Identifier	elements		2008515	1					
ANR	2009766	PrimaryExpression	1		2008515	1					
ANR	2009767	AndExpression	"( zend_hash_internal_pointer_reset ( type -> elements ) , ( elementType = zend_hash_get_current_data_ptr ( type -> elements ) ) != NULL ) && elementType -> encode && elementType -> encode -> details . type_str"		2008515	1		&&			
ANR	2009768	Expression	"zend_hash_internal_pointer_reset ( type -> elements ) , ( elementType = zend_hash_get_current_data_ptr ( type -> elements ) ) != NULL"		2008515	0					
ANR	2009769	CallExpression	zend_hash_internal_pointer_reset ( type -> elements )		2008515	0					
ANR	2009770	Callee	zend_hash_internal_pointer_reset		2008515	0					
ANR	2009771	Identifier	zend_hash_internal_pointer_reset		2008515	0					
ANR	2009772	ArgumentList	type -> elements		2008515	1					
ANR	2009773	Argument	type -> elements		2008515	0					
ANR	2009774	PtrMemberAccess	type -> elements		2008515	0					
ANR	2009775	Identifier	type		2008515	0					
ANR	2009776	Identifier	elements		2008515	1					
ANR	2009777	EqualityExpression	( elementType = zend_hash_get_current_data_ptr ( type -> elements ) ) != NULL		2008515	1		!=			
ANR	2009778	AssignmentExpression	elementType = zend_hash_get_current_data_ptr ( type -> elements )		2008515	0		=			
ANR	2009779	Identifier	elementType		2008515	0					
ANR	2009780	CallExpression	zend_hash_get_current_data_ptr ( type -> elements )		2008515	1					
ANR	2009781	Callee	zend_hash_get_current_data_ptr		2008515	0					
ANR	2009782	Identifier	zend_hash_get_current_data_ptr		2008515	0					
ANR	2009783	ArgumentList	type -> elements		2008515	1					
ANR	2009784	Argument	type -> elements		2008515	0					
ANR	2009785	PtrMemberAccess	type -> elements		2008515	0					
ANR	2009786	Identifier	type		2008515	0					
ANR	2009787	Identifier	elements		2008515	1					
ANR	2009788	Identifier	NULL		2008515	1					
ANR	2009789	AndExpression	elementType -> encode && elementType -> encode -> details . type_str		2008515	1		&&			
ANR	2009790	PtrMemberAccess	elementType -> encode		2008515	0					
ANR	2009791	Identifier	elementType		2008515	0					
ANR	2009792	Identifier	encode		2008515	1					
ANR	2009793	MemberAccess	elementType -> encode -> details . type_str		2008515	1					
ANR	2009794	PtrMemberAccess	elementType -> encode -> details		2008515	0					
ANR	2009795	PtrMemberAccess	elementType -> encode		2008515	0					
ANR	2009796	Identifier	elementType		2008515	0					
ANR	2009797	Identifier	encode		2008515	1					
ANR	2009798	Identifier	details		2008515	1					
ANR	2009799	Identifier	type_str		2008515	1					
ANR	2009800	CompoundStatement		96:78:3395:3395	2008515	1					
ANR	2009801	ExpressionStatement	"smart_str_appends ( buf , elementType -> encode -> details . type_str )"	4772:6:158242:158303	2008515	0	True				
ANR	2009802	CallExpression	"smart_str_appends ( buf , elementType -> encode -> details . type_str )"		2008515	0					
ANR	2009803	Callee	smart_str_appends		2008515	0					
ANR	2009804	Identifier	smart_str_appends		2008515	0					
ANR	2009805	ArgumentList	buf		2008515	1					
ANR	2009806	Argument	buf		2008515	0					
ANR	2009807	Identifier	buf		2008515	0					
ANR	2009808	Argument	elementType -> encode -> details . type_str		2008515	1					
ANR	2009809	MemberAccess	elementType -> encode -> details . type_str		2008515	0					
ANR	2009810	PtrMemberAccess	elementType -> encode -> details		2008515	0					
ANR	2009811	PtrMemberAccess	elementType -> encode		2008515	0					
ANR	2009812	Identifier	elementType		2008515	0					
ANR	2009813	Identifier	encode		2008515	1					
ANR	2009814	Identifier	details		2008515	1					
ANR	2009815	Identifier	type_str		2008515	1					
ANR	2009816	ExpressionStatement	"smart_str_appendc ( buf , ' ' )"	4773:6:158311:158338	2008515	1	True				
ANR	2009817	CallExpression	"smart_str_appendc ( buf , ' ' )"		2008515	0					
ANR	2009818	Callee	smart_str_appendc		2008515	0					
ANR	2009819	Identifier	smart_str_appendc		2008515	0					
ANR	2009820	ArgumentList	buf		2008515	1					
ANR	2009821	Argument	buf		2008515	0					
ANR	2009822	Identifier	buf		2008515	0					
ANR	2009823	Argument	' '		2008515	1					
ANR	2009824	PrimaryExpression	' '		2008515	0					
ANR	2009825	ElseStatement	else		2008515	0					
ANR	2009826	CompoundStatement		99:12:3513:3513	2008515	0					
ANR	2009827	ExpressionStatement	"smart_str_appendl ( buf , ""anyType "" , 8 )"	4775:6:158360:158397	2008515	0	True				
ANR	2009828	CallExpression	"smart_str_appendl ( buf , ""anyType "" , 8 )"		2008515	0					
ANR	2009829	Callee	smart_str_appendl		2008515	0					
ANR	2009830	Identifier	smart_str_appendl		2008515	0					
ANR	2009831	ArgumentList	buf		2008515	1					
ANR	2009832	Argument	buf		2008515	0					
ANR	2009833	Identifier	buf		2008515	0					
ANR	2009834	Argument	"""anyType """		2008515	1					
ANR	2009835	PrimaryExpression	"""anyType """		2008515	0					
ANR	2009836	Argument	8		2008515	2					
ANR	2009837	PrimaryExpression	8		2008515	0					
ANR	2009838	BreakStatement	break ;	4840:3:160799:160804	2008515	18	True				
ANR	2009839	Label	default :	4841:2:160808:160815	2008515	19	True				
ANR	2009840	Identifier	default		2008515	0					
ANR	2009841	BreakStatement	break ;	4842:3:160820:160825	2008515	20	True				
ANR	2009842	ExpressionStatement	smart_str_free ( & spaces )	4844:1:160831:160854	2008515	5	True				
ANR	2009843	CallExpression	smart_str_free ( & spaces )		2008515	0					
ANR	2009844	Callee	smart_str_free		2008515	0					
ANR	2009845	Identifier	smart_str_free		2008515	0					
ANR	2009846	ArgumentList	& spaces		2008515	1					
ANR	2009847	Argument	& spaces		2008515	0					
ANR	2009848	UnaryOperationExpression	& spaces		2008515	0					
ANR	2009849	UnaryOperator	&		2008515	0					
ANR	2009850	Identifier	spaces		2008515	1					
ANR	2009851	ExpressionStatement	smart_str_0 ( buf )	4845:1:160857:160873	2008515	6	True				
ANR	2009852	CallExpression	smart_str_0 ( buf )		2008515	0					
ANR	2009853	Callee	smart_str_0		2008515	0					
ANR	2009854	Identifier	smart_str_0		2008515	0					
ANR	2009855	ArgumentList	buf		2008515	1					
ANR	2009856	Argument	buf		2008515	0					
ANR	2009857	Identifier	buf		2008515	0					
ANR	2009858	ReturnType	static void		2008515	1					
ANR	2009859	Identifier	type_to_string		2008515	2					
ANR	2009860	ParameterList	"sdlTypePtr type , smart_str * buf , int level"		2008515	3					
ANR	2009861	Parameter	sdlTypePtr type	4675:27:154794:154808	2008515	0	True				
ANR	2009862	ParameterType	sdlTypePtr		2008515	0					
ANR	2009863	Identifier	type		2008515	1					
ANR	2009864	Parameter	smart_str * buf	4675:44:154811:154824	2008515	1	True				
ANR	2009865	ParameterType	smart_str *		2008515	0					
ANR	2009866	Identifier	buf		2008515	1					
ANR	2009867	Parameter	int level	4675:60:154827:154835	2008515	2	True				
ANR	2009868	ParameterType	int		2008515	0					
ANR	2009869	Identifier	level		2008515	1					
ANR	2009870	CFGEntryNode	ENTRY		2008515		True				
ANR	2009871	CFGExitNode	EXIT		2008515		True				
ANR	2009872	Symbol	type -> encode		2008515						
ANR	2009873	Symbol	item_type		2008515						
ANR	2009874	Symbol	spaces . s		2008515						
ANR	2009875	Symbol	* * attr		2008515						
ANR	2009876	Symbol	strchr		2008515						
ANR	2009877	Symbol	type		2008515						
ANR	2009878	Symbol	strlen		2008515						
ANR	2009879	Symbol	enc -> details . sdl_type -> kind		2008515						
ANR	2009880	Symbol	type -> attributes		2008515						
ANR	2009881	Symbol	SOAP_ENC_ARRAY		2008515						
ANR	2009882	Symbol	len		2008515						
ANR	2009883	Symbol	* elementType -> encode		2008515						
ANR	2009884	Symbol	attr -> encode -> details		2008515						
ANR	2009885	Symbol	* attr -> encode		2008515						
ANR	2009886	Symbol	item_type -> name		2008515						
ANR	2009887	Symbol	ext		2008515						
ANR	2009888	Symbol	NULL		2008515						
ANR	2009889	Symbol	level		2008515						
ANR	2009890	Symbol	type -> kind		2008515						
ANR	2009891	Symbol	enc -> details . sdl_type -> encode		2008515						
ANR	2009892	Symbol	type -> encode -> details		2008515						
ANR	2009893	Symbol	elementType -> encode -> details		2008515						
ANR	2009894	Symbol	type -> encode -> details . type_str		2008515						
ANR	2009895	Symbol	type -> name		2008515						
ANR	2009896	Symbol	attr -> encode		2008515						
ANR	2009897	Symbol	& spaces		2008515						
ANR	2009898	Symbol	* * enc		2008515						
ANR	2009899	Symbol	ext -> val		2008515						
ANR	2009900	Symbol	type -> model		2008515						
ANR	2009901	Symbol	spaces		2008515						
ANR	2009902	Symbol	* enc		2008515						
ANR	2009903	Symbol	* attr		2008515						
ANR	2009904	Symbol	XSD_TYPEKIND_EXTENSION		2008515						
ANR	2009905	Symbol	* elementType		2008515						
ANR	2009906	Symbol	elementType -> encode -> details . type_str		2008515						
ANR	2009907	Symbol	XSD_TYPEKIND_LIST		2008515						
ANR	2009908	Symbol	* enc -> details . sdl_type		2008515						
ANR	2009909	Symbol	enc -> details		2008515						
ANR	2009910	Symbol	XSD_TYPEKIND_UNION		2008515						
ANR	2009911	Symbol	elementType -> encode		2008515						
ANR	2009912	Symbol	XSD_TYPEKIND_SIMPLE		2008515						
ANR	2009913	Symbol	zend_hash_internal_pointer_reset		2008515						
ANR	2009914	Symbol	* type		2008515						
ANR	2009915	Symbol	IS_ARRAY		2008515						
ANR	2009916	Symbol	type -> encode -> details . type		2008515						
ANR	2009917	Symbol	end		2008515						
ANR	2009918	Symbol	enc		2008515						
ANR	2009919	Symbol	attr		2008515						
ANR	2009920	Symbol	zend_hash_get_current_data_ptr		2008515						
ANR	2009921	Symbol	* enc -> details		2008515						
ANR	2009922	Symbol	* item_type		2008515						
ANR	2009923	Symbol	enc -> details . sdl_type		2008515						
ANR	2009924	Symbol	zend_hash_num_elements		2008515						
ANR	2009925	Symbol	attr -> encode -> details . type_str		2008515						
ANR	2009926	Symbol	type -> elements		2008515						
ANR	2009927	Symbol	i		2008515						
ANR	2009928	Symbol	* type -> encode		2008515						
ANR	2009929	Symbol	ZSTR_VAL		2008515						
ANR	2009930	Symbol	XSD_TYPEKIND_RESTRICTION		2008515						
ANR	2009931	Symbol	buf		2008515						
ANR	2009932	Symbol	* ext		2008515						
ANR	2009933	Symbol	ZSTR_LEN		2008515						
ANR	2009934	Symbol	attr -> name		2008515						
ANR	2009935	Symbol	* * type		2008515						
ANR	2009936	Symbol	elementType		2008515						
ANR	2009937	Symbol	* * elementType		2008515						
ANR	2009938	Symbol	first		2008515						
ANR	2009939	Function	delete_url	4848:0:160878:160950							
ANR	2009940	FunctionDef	delete_url (void * handle)		2009939	0					
ANR	2009941	CompoundStatement		4849:0:160915:160950	2009939	0					
ANR	2009942	ExpressionStatement	php_url_free ( ( php_url * ) handle )	4850:1:160918:160948	2009939	0	True				
ANR	2009943	CallExpression	php_url_free ( ( php_url * ) handle )		2009939	0					
ANR	2009944	Callee	php_url_free		2009939	0					
ANR	2009945	Identifier	php_url_free		2009939	0					
ANR	2009946	ArgumentList	( php_url * ) handle		2009939	1					
ANR	2009947	Argument	( php_url * ) handle		2009939	0					
ANR	2009948	CastExpression	( php_url * ) handle		2009939	0					
ANR	2009949	CastTarget	php_url *		2009939	0					
ANR	2009950	Identifier	handle		2009939	1					
ANR	2009951	ReturnType	static void		2009939	1					
ANR	2009952	Identifier	delete_url		2009939	2					
ANR	2009953	ParameterList	void * handle		2009939	3					
ANR	2009954	Parameter	void * handle	4848:23:160901:160912	2009939	0	True				
ANR	2009955	ParameterType	void *		2009939	0					
ANR	2009956	Identifier	handle		2009939	1					
ANR	2009957	CFGEntryNode	ENTRY		2009939		True				
ANR	2009958	CFGExitNode	EXIT		2009939		True				
ANR	2009959	Symbol	handle		2009939						
ANR	2009960	Function	delete_service	4853:0:160953:161832							
ANR	2009961	FunctionDef	delete_service (void * data)		2009960	0					
ANR	2009962	CompoundStatement		4854:0:160992:161832	2009960	0					
ANR	2009963	IdentifierDeclStatement	soapServicePtr service = ( soapServicePtr ) data ;	4855:1:160995:161040	2009960	0	True				
ANR	2009964	IdentifierDecl	service = ( soapServicePtr ) data		2009960	0					
ANR	2009965	IdentifierDeclType	soapServicePtr		2009960	0					
ANR	2009966	Identifier	service		2009960	1					
ANR	2009967	AssignmentExpression	service = ( soapServicePtr ) data		2009960	2		=			
ANR	2009968	Identifier	service		2009960	0					
ANR	2009969	CastExpression	( soapServicePtr ) data		2009960	1					
ANR	2009970	CastTarget	soapServicePtr		2009960	0					
ANR	2009971	Identifier	data		2009960	1					
ANR	2009972	IfStatement	if ( service -> soap_functions . ft )		2009960	1					
ANR	2009973	Condition	service -> soap_functions . ft	4857:5:161048:161073	2009960	0	True				
ANR	2009974	MemberAccess	service -> soap_functions . ft		2009960	0					
ANR	2009975	PtrMemberAccess	service -> soap_functions		2009960	0					
ANR	2009976	Identifier	service		2009960	0					
ANR	2009977	Identifier	soap_functions		2009960	1					
ANR	2009978	Identifier	ft		2009960	1					
ANR	2009979	CompoundStatement		4:33:83:83	2009960	1					
ANR	2009980	ExpressionStatement	zend_hash_destroy ( service -> soap_functions . ft )	4858:2:161080:161125	2009960	0	True				
ANR	2009981	CallExpression	zend_hash_destroy ( service -> soap_functions . ft )		2009960	0					
ANR	2009982	Callee	zend_hash_destroy		2009960	0					
ANR	2009983	Identifier	zend_hash_destroy		2009960	0					
ANR	2009984	ArgumentList	service -> soap_functions . ft		2009960	1					
ANR	2009985	Argument	service -> soap_functions . ft		2009960	0					
ANR	2009986	MemberAccess	service -> soap_functions . ft		2009960	0					
ANR	2009987	PtrMemberAccess	service -> soap_functions		2009960	0					
ANR	2009988	Identifier	service		2009960	0					
ANR	2009989	Identifier	soap_functions		2009960	1					
ANR	2009990	Identifier	ft		2009960	1					
ANR	2009991	ExpressionStatement	efree ( service -> soap_functions . ft )	4859:2:161129:161162	2009960	1	True				
ANR	2009992	CallExpression	efree ( service -> soap_functions . ft )		2009960	0					
ANR	2009993	Callee	efree		2009960	0					
ANR	2009994	Identifier	efree		2009960	0					
ANR	2009995	ArgumentList	service -> soap_functions . ft		2009960	1					
ANR	2009996	Argument	service -> soap_functions . ft		2009960	0					
ANR	2009997	MemberAccess	service -> soap_functions . ft		2009960	0					
ANR	2009998	PtrMemberAccess	service -> soap_functions		2009960	0					
ANR	2009999	Identifier	service		2009960	0					
ANR	2010000	Identifier	soap_functions		2009960	1					
ANR	2010001	Identifier	ft		2009960	1					
ANR	2010002	IfStatement	if ( service -> typemap )		2009960	2					
ANR	2010003	Condition	service -> typemap	4862:5:161173:161188	2009960	0	True				
ANR	2010004	PtrMemberAccess	service -> typemap		2009960	0					
ANR	2010005	Identifier	service		2009960	0					
ANR	2010006	Identifier	typemap		2009960	1					
ANR	2010007	CompoundStatement		9:23:198:198	2009960	1					
ANR	2010008	ExpressionStatement	zend_hash_destroy ( service -> typemap )	4863:2:161195:161230	2009960	0	True				
ANR	2010009	CallExpression	zend_hash_destroy ( service -> typemap )		2009960	0					
ANR	2010010	Callee	zend_hash_destroy		2009960	0					
ANR	2010011	Identifier	zend_hash_destroy		2009960	0					
ANR	2010012	ArgumentList	service -> typemap		2009960	1					
ANR	2010013	Argument	service -> typemap		2009960	0					
ANR	2010014	PtrMemberAccess	service -> typemap		2009960	0					
ANR	2010015	Identifier	service		2009960	0					
ANR	2010016	Identifier	typemap		2009960	1					
ANR	2010017	ExpressionStatement	efree ( service -> typemap )	4864:2:161234:161257	2009960	1	True				
ANR	2010018	CallExpression	efree ( service -> typemap )		2009960	0					
ANR	2010019	Callee	efree		2009960	0					
ANR	2010020	Identifier	efree		2009960	0					
ANR	2010021	ArgumentList	service -> typemap		2009960	1					
ANR	2010022	Argument	service -> typemap		2009960	0					
ANR	2010023	PtrMemberAccess	service -> typemap		2009960	0					
ANR	2010024	Identifier	service		2009960	0					
ANR	2010025	Identifier	typemap		2009960	1					
ANR	2010026	IfStatement	if ( service -> soap_class . argc )		2009960	3					
ANR	2010027	Condition	service -> soap_class . argc	4867:5:161268:161291	2009960	0	True				
ANR	2010028	MemberAccess	service -> soap_class . argc		2009960	0					
ANR	2010029	PtrMemberAccess	service -> soap_class		2009960	0					
ANR	2010030	Identifier	service		2009960	0					
ANR	2010031	Identifier	soap_class		2009960	1					
ANR	2010032	Identifier	argc		2009960	1					
ANR	2010033	CompoundStatement		15:2:305:310	2009960	1					
ANR	2010034	IdentifierDeclStatement	int i ;	4868:2:161298:161303	2009960	0	True				
ANR	2010035	IdentifierDecl	i		2009960	0					
ANR	2010036	IdentifierDeclType	int		2009960	0					
ANR	2010037	Identifier	i		2009960	1					
ANR	2010038	ForStatement	for ( i = 0 ; i < service -> soap_class . argc ; i ++ )		2009960	1					
ANR	2010039	ForInit	i = 0 ;	4869:7:161312:161317	2009960	0	True				
ANR	2010040	AssignmentExpression	i = 0		2009960	0		=			
ANR	2010041	Identifier	i		2009960	0					
ANR	2010042	PrimaryExpression	0		2009960	1					
ANR	2010043	Condition	i < service -> soap_class . argc	4869:14:161319:161346	2009960	1	True				
ANR	2010044	RelationalExpression	i < service -> soap_class . argc		2009960	0		<			
ANR	2010045	Identifier	i		2009960	0					
ANR	2010046	MemberAccess	service -> soap_class . argc		2009960	1					
ANR	2010047	PtrMemberAccess	service -> soap_class		2009960	0					
ANR	2010048	Identifier	service		2009960	0					
ANR	2010049	Identifier	soap_class		2009960	1					
ANR	2010050	Identifier	argc		2009960	1					
ANR	2010051	PostIncDecOperationExpression	i ++	4869:43:161348:161350	2009960	2	True				
ANR	2010052	Identifier	i		2009960	0					
ANR	2010053	IncDec	++		2009960	1					
ANR	2010054	CompoundStatement		16:48:360:360	2009960	3					
ANR	2010055	ExpressionStatement	zval_ptr_dtor ( & service -> soap_class . argv [ i ] )	4870:3:161358:161401	2009960	0	True				
ANR	2010056	CallExpression	zval_ptr_dtor ( & service -> soap_class . argv [ i ] )		2009960	0					
ANR	2010057	Callee	zval_ptr_dtor		2009960	0					
ANR	2010058	Identifier	zval_ptr_dtor		2009960	0					
ANR	2010059	ArgumentList	& service -> soap_class . argv [ i ]		2009960	1					
ANR	2010060	Argument	& service -> soap_class . argv [ i ]		2009960	0					
ANR	2010061	UnaryOperationExpression	& service -> soap_class . argv [ i ]		2009960	0					
ANR	2010062	UnaryOperator	&		2009960	0					
ANR	2010063	ArrayIndexing	service -> soap_class . argv [ i ]		2009960	1					
ANR	2010064	MemberAccess	service -> soap_class . argv		2009960	0					
ANR	2010065	PtrMemberAccess	service -> soap_class		2009960	0					
ANR	2010066	Identifier	service		2009960	0					
ANR	2010067	Identifier	soap_class		2009960	1					
ANR	2010068	Identifier	argv		2009960	1					
ANR	2010069	Identifier	i		2009960	1					
ANR	2010070	ExpressionStatement	efree ( service -> soap_class . argv )	4872:2:161409:161440	2009960	2	True				
ANR	2010071	CallExpression	efree ( service -> soap_class . argv )		2009960	0					
ANR	2010072	Callee	efree		2009960	0					
ANR	2010073	Identifier	efree		2009960	0					
ANR	2010074	ArgumentList	service -> soap_class . argv		2009960	1					
ANR	2010075	Argument	service -> soap_class . argv		2009960	0					
ANR	2010076	MemberAccess	service -> soap_class . argv		2009960	0					
ANR	2010077	PtrMemberAccess	service -> soap_class		2009960	0					
ANR	2010078	Identifier	service		2009960	0					
ANR	2010079	Identifier	soap_class		2009960	1					
ANR	2010080	Identifier	argv		2009960	1					
ANR	2010081	IfStatement	if ( service -> actor )		2009960	4					
ANR	2010082	Condition	service -> actor	4875:5:161451:161464	2009960	0	True				
ANR	2010083	PtrMemberAccess	service -> actor		2009960	0					
ANR	2010084	Identifier	service		2009960	0					
ANR	2010085	Identifier	actor		2009960	1					
ANR	2010086	CompoundStatement		22:21:474:474	2009960	1					
ANR	2010087	ExpressionStatement	efree ( service -> actor )	4876:2:161471:161492	2009960	0	True				
ANR	2010088	CallExpression	efree ( service -> actor )		2009960	0					
ANR	2010089	Callee	efree		2009960	0					
ANR	2010090	Identifier	efree		2009960	0					
ANR	2010091	ArgumentList	service -> actor		2009960	1					
ANR	2010092	Argument	service -> actor		2009960	0					
ANR	2010093	PtrMemberAccess	service -> actor		2009960	0					
ANR	2010094	Identifier	service		2009960	0					
ANR	2010095	Identifier	actor		2009960	1					
ANR	2010096	IfStatement	if ( service -> uri )		2009960	5					
ANR	2010097	Condition	service -> uri	4878:5:161502:161513	2009960	0	True				
ANR	2010098	PtrMemberAccess	service -> uri		2009960	0					
ANR	2010099	Identifier	service		2009960	0					
ANR	2010100	Identifier	uri		2009960	1					
ANR	2010101	CompoundStatement		25:19:523:523	2009960	1					
ANR	2010102	ExpressionStatement	efree ( service -> uri )	4879:2:161520:161539	2009960	0	True				
ANR	2010103	CallExpression	efree ( service -> uri )		2009960	0					
ANR	2010104	Callee	efree		2009960	0					
ANR	2010105	Identifier	efree		2009960	0					
ANR	2010106	ArgumentList	service -> uri		2009960	1					
ANR	2010107	Argument	service -> uri		2009960	0					
ANR	2010108	PtrMemberAccess	service -> uri		2009960	0					
ANR	2010109	Identifier	service		2009960	0					
ANR	2010110	Identifier	uri		2009960	1					
ANR	2010111	IfStatement	if ( service -> sdl )		2009960	6					
ANR	2010112	Condition	service -> sdl	4881:5:161549:161560	2009960	0	True				
ANR	2010113	PtrMemberAccess	service -> sdl		2009960	0					
ANR	2010114	Identifier	service		2009960	0					
ANR	2010115	Identifier	sdl		2009960	1					
ANR	2010116	CompoundStatement		28:19:570:570	2009960	1					
ANR	2010117	ExpressionStatement	delete_sdl ( service -> sdl )	4882:2:161567:161591	2009960	0	True				
ANR	2010118	CallExpression	delete_sdl ( service -> sdl )		2009960	0					
ANR	2010119	Callee	delete_sdl		2009960	0					
ANR	2010120	Identifier	delete_sdl		2009960	0					
ANR	2010121	ArgumentList	service -> sdl		2009960	1					
ANR	2010122	Argument	service -> sdl		2009960	0					
ANR	2010123	PtrMemberAccess	service -> sdl		2009960	0					
ANR	2010124	Identifier	service		2009960	0					
ANR	2010125	Identifier	sdl		2009960	1					
ANR	2010126	IfStatement	if ( service -> encoding )		2009960	7					
ANR	2010127	Condition	service -> encoding	4884:5:161601:161617	2009960	0	True				
ANR	2010128	PtrMemberAccess	service -> encoding		2009960	0					
ANR	2010129	Identifier	service		2009960	0					
ANR	2010130	Identifier	encoding		2009960	1					
ANR	2010131	CompoundStatement		31:24:627:627	2009960	1					
ANR	2010132	ExpressionStatement	xmlCharEncCloseFunc ( service -> encoding )	4885:2:161624:161662	2009960	0	True				
ANR	2010133	CallExpression	xmlCharEncCloseFunc ( service -> encoding )		2009960	0					
ANR	2010134	Callee	xmlCharEncCloseFunc		2009960	0					
ANR	2010135	Identifier	xmlCharEncCloseFunc		2009960	0					
ANR	2010136	ArgumentList	service -> encoding		2009960	1					
ANR	2010137	Argument	service -> encoding		2009960	0					
ANR	2010138	PtrMemberAccess	service -> encoding		2009960	0					
ANR	2010139	Identifier	service		2009960	0					
ANR	2010140	Identifier	encoding		2009960	1					
ANR	2010141	IfStatement	if ( service -> class_map )		2009960	8					
ANR	2010142	Condition	service -> class_map	4887:5:161672:161689	2009960	0	True				
ANR	2010143	PtrMemberAccess	service -> class_map		2009960	0					
ANR	2010144	Identifier	service		2009960	0					
ANR	2010145	Identifier	class_map		2009960	1					
ANR	2010146	CompoundStatement		34:25:699:699	2009960	1					
ANR	2010147	ExpressionStatement	zend_hash_destroy ( service -> class_map )	4888:2:161696:161733	2009960	0	True				
ANR	2010148	CallExpression	zend_hash_destroy ( service -> class_map )		2009960	0					
ANR	2010149	Callee	zend_hash_destroy		2009960	0					
ANR	2010150	Identifier	zend_hash_destroy		2009960	0					
ANR	2010151	ArgumentList	service -> class_map		2009960	1					
ANR	2010152	Argument	service -> class_map		2009960	0					
ANR	2010153	PtrMemberAccess	service -> class_map		2009960	0					
ANR	2010154	Identifier	service		2009960	0					
ANR	2010155	Identifier	class_map		2009960	1					
ANR	2010156	ExpressionStatement	FREE_HASHTABLE ( service -> class_map )	4889:2:161737:161771	2009960	1	True				
ANR	2010157	CallExpression	FREE_HASHTABLE ( service -> class_map )		2009960	0					
ANR	2010158	Callee	FREE_HASHTABLE		2009960	0					
ANR	2010159	Identifier	FREE_HASHTABLE		2009960	0					
ANR	2010160	ArgumentList	service -> class_map		2009960	1					
ANR	2010161	Argument	service -> class_map		2009960	0					
ANR	2010162	PtrMemberAccess	service -> class_map		2009960	0					
ANR	2010163	Identifier	service		2009960	0					
ANR	2010164	Identifier	class_map		2009960	1					
ANR	2010165	ExpressionStatement	zval_ptr_dtor ( & service -> soap_object )	4891:1:161777:161813	2009960	9	True				
ANR	2010166	CallExpression	zval_ptr_dtor ( & service -> soap_object )		2009960	0					
ANR	2010167	Callee	zval_ptr_dtor		2009960	0					
ANR	2010168	Identifier	zval_ptr_dtor		2009960	0					
ANR	2010169	ArgumentList	& service -> soap_object		2009960	1					
ANR	2010170	Argument	& service -> soap_object		2009960	0					
ANR	2010171	UnaryOperationExpression	& service -> soap_object		2009960	0					
ANR	2010172	UnaryOperator	&		2009960	0					
ANR	2010173	PtrMemberAccess	service -> soap_object		2009960	1					
ANR	2010174	Identifier	service		2009960	0					
ANR	2010175	Identifier	soap_object		2009960	1					
ANR	2010176	ExpressionStatement	efree ( service )	4892:1:161816:161830	2009960	10	True				
ANR	2010177	CallExpression	efree ( service )		2009960	0					
ANR	2010178	Callee	efree		2009960	0					
ANR	2010179	Identifier	efree		2009960	0					
ANR	2010180	ArgumentList	service		2009960	1					
ANR	2010181	Argument	service		2009960	0					
ANR	2010182	Identifier	service		2009960	0					
ANR	2010183	ReturnType	static void		2009960	1					
ANR	2010184	Identifier	delete_service		2009960	2					
ANR	2010185	ParameterList	void * data		2009960	3					
ANR	2010186	Parameter	void * data	4853:27:160980:160989	2009960	0	True				
ANR	2010187	ParameterType	void *		2009960	0					
ANR	2010188	Identifier	data		2009960	1					
ANR	2010189	CFGEntryNode	ENTRY		2009960		True				
ANR	2010190	CFGExitNode	EXIT		2009960		True				
ANR	2010191	Symbol	service -> soap_class		2009960						
ANR	2010192	Symbol	service -> typemap		2009960						
ANR	2010193	Symbol	service -> soap_class . argv		2009960						
ANR	2010194	Symbol	data		2009960						
ANR	2010195	Symbol	service -> sdl		2009960						
ANR	2010196	Symbol	service -> soap_functions . ft		2009960						
ANR	2010197	Symbol	i		2009960						
ANR	2010198	Symbol	service -> class_map		2009960						
ANR	2010199	Symbol	& service -> soap_object		2009960						
ANR	2010200	Symbol	service		2009960						
ANR	2010201	Symbol	service -> soap_functions		2009960						
ANR	2010202	Symbol	service -> uri		2009960						
ANR	2010203	Symbol	service -> encoding		2009960						
ANR	2010204	Symbol	* service		2009960						
ANR	2010205	Symbol	service -> actor		2009960						
ANR	2010206	Symbol	service -> soap_class . argc		2009960						
ANR	2010207	Function	delete_hashtable	4895:0:161835:161949							
ANR	2010208	FunctionDef	delete_hashtable (void * data)		2010207	0					
ANR	2010209	CompoundStatement		4896:0:161876:161949	2010207	0					
ANR	2010210	IdentifierDeclStatement	HashTable * ht = ( HashTable * ) data ;	4897:1:161879:161911	2010207	0	True				
ANR	2010211	IdentifierDecl	* ht = ( HashTable * ) data		2010207	0					
ANR	2010212	IdentifierDeclType	HashTable *		2010207	0					
ANR	2010213	Identifier	ht		2010207	1					
ANR	2010214	AssignmentExpression	* ht = ( HashTable * ) data		2010207	2		=			
ANR	2010215	Identifier	ht		2010207	0					
ANR	2010216	CastExpression	( HashTable * ) data		2010207	1					
ANR	2010217	CastTarget	HashTable *		2010207	0					
ANR	2010218	Identifier	data		2010207	1					
ANR	2010219	ExpressionStatement	zend_hash_destroy ( ht )	4898:1:161914:161935	2010207	1	True				
ANR	2010220	CallExpression	zend_hash_destroy ( ht )		2010207	0					
ANR	2010221	Callee	zend_hash_destroy		2010207	0					
ANR	2010222	Identifier	zend_hash_destroy		2010207	0					
ANR	2010223	ArgumentList	ht		2010207	1					
ANR	2010224	Argument	ht		2010207	0					
ANR	2010225	Identifier	ht		2010207	0					
ANR	2010226	ExpressionStatement	efree ( ht )	4899:1:161938:161947	2010207	2	True				
ANR	2010227	CallExpression	efree ( ht )		2010207	0					
ANR	2010228	Callee	efree		2010207	0					
ANR	2010229	Identifier	efree		2010207	0					
ANR	2010230	ArgumentList	ht		2010207	1					
ANR	2010231	Argument	ht		2010207	0					
ANR	2010232	Identifier	ht		2010207	0					
ANR	2010233	ReturnType	static void		2010207	1					
ANR	2010234	Identifier	delete_hashtable		2010207	2					
ANR	2010235	ParameterList	void * data		2010207	3					
ANR	2010236	Parameter	void * data	4895:29:161864:161873	2010207	0	True				
ANR	2010237	ParameterType	void *		2010207	0					
ANR	2010238	Identifier	data		2010207	1					
ANR	2010239	CFGEntryNode	ENTRY		2010207		True				
ANR	2010240	CFGExitNode	EXIT		2010207		True				
ANR	2010241	Symbol	data		2010207						
ANR	2010242	Symbol	ht		2010207						
