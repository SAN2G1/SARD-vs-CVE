command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3472098	File	data/converged/CVE-2015-8617_php-src/regexec.c								
ANR	3472099	DeclStmt									
ANR	3472100	Decl							void	void ( OnigCaptureTreeNode * node )	history_tree_free
ANR	3472101	Function	history_tree_clear	43:0:1937:2403							
ANR	3472102	FunctionDef	history_tree_clear (OnigCaptureTreeNode * node)		3472101	0					
ANR	3472103	CompoundStatement		45:0:1995:2403	3472101	0					
ANR	3472104	IdentifierDeclStatement	int i ;	46:2:1999:2004	3472101	0	True				
ANR	3472105	IdentifierDecl	i		3472101	0					
ANR	3472106	IdentifierDeclType	int		3472101	0					
ANR	3472107	Identifier	i		3472101	1					
ANR	3472108	IfStatement	if ( IS_NOT_NULL ( node ) )		3472101	1					
ANR	3472109	Condition	IS_NOT_NULL ( node )	48:6:2013:2029	3472101	0	True				
ANR	3472110	CallExpression	IS_NOT_NULL ( node )		3472101	0					
ANR	3472111	Callee	IS_NOT_NULL		3472101	0					
ANR	3472112	Identifier	IS_NOT_NULL		3472101	0					
ANR	3472113	ArgumentList	node		3472101	1					
ANR	3472114	Argument	node		3472101	0					
ANR	3472115	Identifier	node		3472101	0					
ANR	3472116	CompoundStatement		4:25:36:36	3472101	1					
ANR	3472117	ForStatement	for ( i = 0 ; i < node -> num_childs ; i ++ )		3472101	0					
ANR	3472118	ForInit	i = 0 ;	49:9:2043:2048	3472101	0	True				
ANR	3472119	AssignmentExpression	i = 0		3472101	0		=			
ANR	3472120	Identifier	i		3472101	0					
ANR	3472121	PrimaryExpression	0		3472101	1					
ANR	3472122	Condition	i < node -> num_childs	49:16:2050:2069	3472101	1	True				
ANR	3472123	RelationalExpression	i < node -> num_childs		3472101	0		<			
ANR	3472124	Identifier	i		3472101	0					
ANR	3472125	PtrMemberAccess	node -> num_childs		3472101	1					
ANR	3472126	Identifier	node		3472101	0					
ANR	3472127	Identifier	num_childs		3472101	1					
ANR	3472128	PostIncDecOperationExpression	i ++	49:38:2072:2074	3472101	2	True				
ANR	3472129	Identifier	i		3472101	0					
ANR	3472130	IncDec	++		3472101	1					
ANR	3472131	CompoundStatement		5:43:81:81	3472101	3					
ANR	3472132	IfStatement	if ( IS_NOT_NULL ( node -> childs [ i ] ) )		3472101	0					
ANR	3472133	Condition	IS_NOT_NULL ( node -> childs [ i ] )	50:10:2089:2116	3472101	0	True				
ANR	3472134	CallExpression	IS_NOT_NULL ( node -> childs [ i ] )		3472101	0					
ANR	3472135	Callee	IS_NOT_NULL		3472101	0					
ANR	3472136	Identifier	IS_NOT_NULL		3472101	0					
ANR	3472137	ArgumentList	node -> childs [ i ]		3472101	1					
ANR	3472138	Argument	node -> childs [ i ]		3472101	0					
ANR	3472139	ArrayIndexing	node -> childs [ i ]		3472101	0					
ANR	3472140	PtrMemberAccess	node -> childs		3472101	0					
ANR	3472141	Identifier	node		3472101	0					
ANR	3472142	Identifier	childs		3472101	1					
ANR	3472143	Identifier	i		3472101	1					
ANR	3472144	CompoundStatement		6:40:123:123	3472101	1					
ANR	3472145	ExpressionStatement	history_tree_free ( node -> childs [ i ] )	51:8:2129:2163	3472101	0	True				
ANR	3472146	CallExpression	history_tree_free ( node -> childs [ i ] )		3472101	0					
ANR	3472147	Callee	history_tree_free		3472101	0					
ANR	3472148	Identifier	history_tree_free		3472101	0					
ANR	3472149	ArgumentList	node -> childs [ i ]		3472101	1					
ANR	3472150	Argument	node -> childs [ i ]		3472101	0					
ANR	3472151	ArrayIndexing	node -> childs [ i ]		3472101	0					
ANR	3472152	PtrMemberAccess	node -> childs		3472101	0					
ANR	3472153	Identifier	node		3472101	0					
ANR	3472154	Identifier	childs		3472101	1					
ANR	3472155	Identifier	i		3472101	1					
ANR	3472156	ForStatement	for ( i = 0 ; i < node -> allocated ; i ++ )		3472101	1					
ANR	3472157	ForInit	i = 0 ;	54:9:2188:2193	3472101	0	True				
ANR	3472158	AssignmentExpression	i = 0		3472101	0		=			
ANR	3472159	Identifier	i		3472101	0					
ANR	3472160	PrimaryExpression	0		3472101	1					
ANR	3472161	Condition	i < node -> allocated	54:16:2195:2213	3472101	1	True				
ANR	3472162	RelationalExpression	i < node -> allocated		3472101	0		<			
ANR	3472163	Identifier	i		3472101	0					
ANR	3472164	PtrMemberAccess	node -> allocated		3472101	1					
ANR	3472165	Identifier	node		3472101	0					
ANR	3472166	Identifier	allocated		3472101	1					
ANR	3472167	PostIncDecOperationExpression	i ++	54:37:2216:2218	3472101	2	True				
ANR	3472168	Identifier	i		3472101	0					
ANR	3472169	IncDec	++		3472101	1					
ANR	3472170	CompoundStatement		10:42:225:225	3472101	3					
ANR	3472171	ExpressionStatement	node -> childs [ i ] = ( OnigCaptureTreeNode * ) 0	55:6:2229:2271	3472101	0	True				
ANR	3472172	AssignmentExpression	node -> childs [ i ] = ( OnigCaptureTreeNode * ) 0		3472101	0		=			
ANR	3472173	ArrayIndexing	node -> childs [ i ]		3472101	0					
ANR	3472174	PtrMemberAccess	node -> childs		3472101	0					
ANR	3472175	Identifier	node		3472101	0					
ANR	3472176	Identifier	childs		3472101	1					
ANR	3472177	Identifier	i		3472101	1					
ANR	3472178	CastExpression	( OnigCaptureTreeNode * ) 0		3472101	1					
ANR	3472179	CastTarget	OnigCaptureTreeNode *		3472101	0					
ANR	3472180	PrimaryExpression	0		3472101	1					
ANR	3472181	ExpressionStatement	node -> num_childs = 0	57:4:2283:2303	3472101	2	True				
ANR	3472182	AssignmentExpression	node -> num_childs = 0		3472101	0		=			
ANR	3472183	PtrMemberAccess	node -> num_childs		3472101	0					
ANR	3472184	Identifier	node		3472101	0					
ANR	3472185	Identifier	num_childs		3472101	1					
ANR	3472186	PrimaryExpression	0		3472101	1					
ANR	3472187	ExpressionStatement	node -> beg = ONIG_REGION_NOTPOS	58:4:2309:2339	3472101	3	True				
ANR	3472188	AssignmentExpression	node -> beg = ONIG_REGION_NOTPOS		3472101	0		=			
ANR	3472189	PtrMemberAccess	node -> beg		3472101	0					
ANR	3472190	Identifier	node		3472101	0					
ANR	3472191	Identifier	beg		3472101	1					
ANR	3472192	Identifier	ONIG_REGION_NOTPOS		3472101	1					
ANR	3472193	ExpressionStatement	node -> end = ONIG_REGION_NOTPOS	59:4:2345:2375	3472101	4	True				
ANR	3472194	AssignmentExpression	node -> end = ONIG_REGION_NOTPOS		3472101	0		=			
ANR	3472195	PtrMemberAccess	node -> end		3472101	0					
ANR	3472196	Identifier	node		3472101	0					
ANR	3472197	Identifier	end		3472101	1					
ANR	3472198	Identifier	ONIG_REGION_NOTPOS		3472101	1					
ANR	3472199	ExpressionStatement	node -> group = - 1	60:4:2381:2397	3472101	5	True				
ANR	3472200	AssignmentExpression	node -> group = - 1		3472101	0		=			
ANR	3472201	PtrMemberAccess	node -> group		3472101	0					
ANR	3472202	Identifier	node		3472101	0					
ANR	3472203	Identifier	group		3472101	1					
ANR	3472204	UnaryOperationExpression	- 1		3472101	1					
ANR	3472205	UnaryOperator	-		3472101	0					
ANR	3472206	PrimaryExpression	1		3472101	1					
ANR	3472207	ReturnType	static void		3472101	1					
ANR	3472208	Identifier	history_tree_clear		3472101	2					
ANR	3472209	ParameterList	OnigCaptureTreeNode * node		3472101	3					
ANR	3472210	Parameter	OnigCaptureTreeNode * node	44:19:1968:1992	3472101	0	True				
ANR	3472211	ParameterType	OnigCaptureTreeNode *		3472101	0					
ANR	3472212	Identifier	node		3472101	1					
ANR	3472213	CFGEntryNode	ENTRY		3472101		True				
ANR	3472214	CFGExitNode	EXIT		3472101		True				
ANR	3472215	Symbol	node -> allocated		3472101						
ANR	3472216	Symbol	IS_NOT_NULL		3472101						
ANR	3472217	Symbol	i		3472101						
ANR	3472218	Symbol	* node -> childs		3472101						
ANR	3472219	Symbol	node -> beg		3472101						
ANR	3472220	Symbol	node -> group		3472101						
ANR	3472221	Symbol	ONIG_REGION_NOTPOS		3472101						
ANR	3472222	Symbol	node -> end		3472101						
ANR	3472223	Symbol	node		3472101						
ANR	3472224	Symbol	* i		3472101						
ANR	3472225	Symbol	* * node		3472101						
ANR	3472226	Symbol	node -> childs		3472101						
ANR	3472227	Symbol	* node		3472101						
ANR	3472228	Symbol	node -> num_childs		3472101						
ANR	3472229	Function	history_tree_free	64:0:2406:2508							
ANR	3472230	FunctionDef	history_tree_free (OnigCaptureTreeNode * node)		3472229	0					
ANR	3472231	CompoundStatement		66:0:2463:2508	3472229	0					
ANR	3472232	ExpressionStatement	history_tree_clear ( node )	67:2:2467:2491	3472229	0	True				
ANR	3472233	CallExpression	history_tree_clear ( node )		3472229	0					
ANR	3472234	Callee	history_tree_clear		3472229	0					
ANR	3472235	Identifier	history_tree_clear		3472229	0					
ANR	3472236	ArgumentList	node		3472229	1					
ANR	3472237	Argument	node		3472229	0					
ANR	3472238	Identifier	node		3472229	0					
ANR	3472239	ExpressionStatement	xfree ( node )	68:2:2495:2506	3472229	1	True				
ANR	3472240	CallExpression	xfree ( node )		3472229	0					
ANR	3472241	Callee	xfree		3472229	0					
ANR	3472242	Identifier	xfree		3472229	0					
ANR	3472243	ArgumentList	node		3472229	1					
ANR	3472244	Argument	node		3472229	0					
ANR	3472245	Identifier	node		3472229	0					
ANR	3472246	ReturnType	static void		3472229	1					
ANR	3472247	Identifier	history_tree_free		3472229	2					
ANR	3472248	ParameterList	OnigCaptureTreeNode * node		3472229	3					
ANR	3472249	Parameter	OnigCaptureTreeNode * node	65:18:2436:2460	3472229	0	True				
ANR	3472250	ParameterType	OnigCaptureTreeNode *		3472229	0					
ANR	3472251	Identifier	node		3472229	1					
ANR	3472252	CFGEntryNode	ENTRY		3472229		True				
ANR	3472253	CFGExitNode	EXIT		3472229		True				
ANR	3472254	Symbol	node		3472229						
ANR	3472255	Function	history_root_free	71:0:2511:2688							
ANR	3472256	FunctionDef	history_root_free (OnigRegion * r)		3472255	0					
ANR	3472257	CompoundStatement		73:0:2556:2688	3472255	0					
ANR	3472258	IfStatement	if ( IS_NOT_NULL ( r -> history_root ) )		3472255	0					
ANR	3472259	Condition	IS_NOT_NULL ( r -> history_root )	74:6:2564:2591	3472255	0	True				
ANR	3472260	CallExpression	IS_NOT_NULL ( r -> history_root )		3472255	0					
ANR	3472261	Callee	IS_NOT_NULL		3472255	0					
ANR	3472262	Identifier	IS_NOT_NULL		3472255	0					
ANR	3472263	ArgumentList	r -> history_root		3472255	1					
ANR	3472264	Argument	r -> history_root		3472255	0					
ANR	3472265	PtrMemberAccess	r -> history_root		3472255	0					
ANR	3472266	Identifier	r		3472255	0					
ANR	3472267	Identifier	history_root		3472255	1					
ANR	3472268	CompoundStatement		2:36:37:37	3472255	1					
ANR	3472269	ExpressionStatement	history_tree_free ( r -> history_root )	75:4:2600:2634	3472255	0	True				
ANR	3472270	CallExpression	history_tree_free ( r -> history_root )		3472255	0					
ANR	3472271	Callee	history_tree_free		3472255	0					
ANR	3472272	Identifier	history_tree_free		3472255	0					
ANR	3472273	ArgumentList	r -> history_root		3472255	1					
ANR	3472274	Argument	r -> history_root		3472255	0					
ANR	3472275	PtrMemberAccess	r -> history_root		3472255	0					
ANR	3472276	Identifier	r		3472255	0					
ANR	3472277	Identifier	history_root		3472255	1					
ANR	3472278	ExpressionStatement	r -> history_root = ( OnigCaptureTreeNode * ) 0	76:4:2640:2682	3472255	1	True				
ANR	3472279	AssignmentExpression	r -> history_root = ( OnigCaptureTreeNode * ) 0		3472255	0		=			
ANR	3472280	PtrMemberAccess	r -> history_root		3472255	0					
ANR	3472281	Identifier	r		3472255	0					
ANR	3472282	Identifier	history_root		3472255	1					
ANR	3472283	CastExpression	( OnigCaptureTreeNode * ) 0		3472255	1					
ANR	3472284	CastTarget	OnigCaptureTreeNode *		3472255	0					
ANR	3472285	PrimaryExpression	0		3472255	1					
ANR	3472286	ReturnType	static void		3472255	1					
ANR	3472287	Identifier	history_root_free		3472255	2					
ANR	3472288	ParameterList	OnigRegion * r		3472255	3					
ANR	3472289	Parameter	OnigRegion * r	72:18:2541:2553	3472255	0	True				
ANR	3472290	ParameterType	OnigRegion *		3472255	0					
ANR	3472291	Identifier	r		3472255	1					
ANR	3472292	CFGEntryNode	ENTRY		3472255		True				
ANR	3472293	CFGExitNode	EXIT		3472255		True				
ANR	3472294	Symbol	r		3472255						
ANR	3472295	Symbol	IS_NOT_NULL		3472255						
ANR	3472296	Symbol	r -> history_root		3472255						
ANR	3472297	Symbol	* r		3472255						
ANR	3472298	Function	history_node_new	80:0:2691:3090							
ANR	3472299	FunctionDef	history_node_new ()		3472298	0					
ANR	3472300	CompoundStatement		82:0:2742:3090	3472298	0					
ANR	3472301	IdentifierDeclStatement	OnigCaptureTreeNode * node ;	83:2:2746:2771	3472298	0	True				
ANR	3472302	IdentifierDecl	* node		3472298	0					
ANR	3472303	IdentifierDeclType	OnigCaptureTreeNode *		3472298	0					
ANR	3472304	Identifier	node		3472298	1					
ANR	3472305	ExpressionStatement	node = ( OnigCaptureTreeNode * ) xmalloc ( sizeof ( OnigCaptureTreeNode ) )	85:2:2776:2842	3472298	1	True				
ANR	3472306	AssignmentExpression	node = ( OnigCaptureTreeNode * ) xmalloc ( sizeof ( OnigCaptureTreeNode ) )		3472298	0		=			
ANR	3472307	Identifier	node		3472298	0					
ANR	3472308	CastExpression	( OnigCaptureTreeNode * ) xmalloc ( sizeof ( OnigCaptureTreeNode ) )		3472298	1					
ANR	3472309	CastTarget	OnigCaptureTreeNode *		3472298	0					
ANR	3472310	CallExpression	xmalloc ( sizeof ( OnigCaptureTreeNode ) )		3472298	1					
ANR	3472311	Callee	xmalloc		3472298	0					
ANR	3472312	Identifier	xmalloc		3472298	0					
ANR	3472313	ArgumentList	sizeof ( OnigCaptureTreeNode )		3472298	1					
ANR	3472314	Argument	sizeof ( OnigCaptureTreeNode )		3472298	0					
ANR	3472315	SizeofExpression	sizeof ( OnigCaptureTreeNode )		3472298	0					
ANR	3472316	Sizeof	sizeof		3472298	0					
ANR	3472317	SizeofOperand	OnigCaptureTreeNode		3472298	1					
ANR	3472318	ExpressionStatement	CHECK_NULL_RETURN ( node )	86:2:2846:2869	3472298	2	True				
ANR	3472319	CallExpression	CHECK_NULL_RETURN ( node )		3472298	0					
ANR	3472320	Callee	CHECK_NULL_RETURN		3472298	0					
ANR	3472321	Identifier	CHECK_NULL_RETURN		3472298	0					
ANR	3472322	ArgumentList	node		3472298	1					
ANR	3472323	Argument	node		3472298	0					
ANR	3472324	Identifier	node		3472298	0					
ANR	3472325	ExpressionStatement	node -> childs = ( OnigCaptureTreeNode * * ) 0	87:2:2873:2917	3472298	3	True				
ANR	3472326	AssignmentExpression	node -> childs = ( OnigCaptureTreeNode * * ) 0		3472298	0		=			
ANR	3472327	PtrMemberAccess	node -> childs		3472298	0					
ANR	3472328	Identifier	node		3472298	0					
ANR	3472329	Identifier	childs		3472298	1					
ANR	3472330	CastExpression	( OnigCaptureTreeNode * * ) 0		3472298	1					
ANR	3472331	CastTarget	OnigCaptureTreeNode * *		3472298	0					
ANR	3472332	PrimaryExpression	0		3472298	1					
ANR	3472333	ExpressionStatement	node -> allocated = 0	88:2:2921:2941	3472298	4	True				
ANR	3472334	AssignmentExpression	node -> allocated = 0		3472298	0		=			
ANR	3472335	PtrMemberAccess	node -> allocated		3472298	0					
ANR	3472336	Identifier	node		3472298	0					
ANR	3472337	Identifier	allocated		3472298	1					
ANR	3472338	PrimaryExpression	0		3472298	1					
ANR	3472339	ExpressionStatement	node -> num_childs = 0	89:2:2945:2965	3472298	5	True				
ANR	3472340	AssignmentExpression	node -> num_childs = 0		3472298	0		=			
ANR	3472341	PtrMemberAccess	node -> num_childs		3472298	0					
ANR	3472342	Identifier	node		3472298	0					
ANR	3472343	Identifier	num_childs		3472298	1					
ANR	3472344	PrimaryExpression	0		3472298	1					
ANR	3472345	ExpressionStatement	node -> group = - 1	90:2:2969:2990	3472298	6	True				
ANR	3472346	AssignmentExpression	node -> group = - 1		3472298	0		=			
ANR	3472347	PtrMemberAccess	node -> group		3472298	0					
ANR	3472348	Identifier	node		3472298	0					
ANR	3472349	Identifier	group		3472298	1					
ANR	3472350	UnaryOperationExpression	- 1		3472298	1					
ANR	3472351	UnaryOperator	-		3472298	0					
ANR	3472352	PrimaryExpression	1		3472298	1					
ANR	3472353	ExpressionStatement	node -> beg = ONIG_REGION_NOTPOS	91:2:2994:3031	3472298	7	True				
ANR	3472354	AssignmentExpression	node -> beg = ONIG_REGION_NOTPOS		3472298	0		=			
ANR	3472355	PtrMemberAccess	node -> beg		3472298	0					
ANR	3472356	Identifier	node		3472298	0					
ANR	3472357	Identifier	beg		3472298	1					
ANR	3472358	Identifier	ONIG_REGION_NOTPOS		3472298	1					
ANR	3472359	ExpressionStatement	node -> end = ONIG_REGION_NOTPOS	92:2:3035:3072	3472298	8	True				
ANR	3472360	AssignmentExpression	node -> end = ONIG_REGION_NOTPOS		3472298	0		=			
ANR	3472361	PtrMemberAccess	node -> end		3472298	0					
ANR	3472362	Identifier	node		3472298	0					
ANR	3472363	Identifier	end		3472298	1					
ANR	3472364	Identifier	ONIG_REGION_NOTPOS		3472298	1					
ANR	3472365	ReturnStatement	return node ;	94:2:3077:3088	3472298	9	True				
ANR	3472366	Identifier	node		3472298	0					
ANR	3472367	ReturnType	static OnigCaptureTreeNode *		3472298	1					
ANR	3472368	Identifier	history_node_new		3472298	2					
ANR	3472369	ParameterList			3472298	3					
ANR	3472370	CFGEntryNode	ENTRY		3472298		True				
ANR	3472371	CFGExitNode	EXIT		3472298		True				
ANR	3472372	Symbol	node -> end		3472298						
ANR	3472373	Symbol	node		3472298						
ANR	3472374	Symbol	node -> allocated		3472298						
ANR	3472375	Symbol	node -> childs		3472298						
ANR	3472376	Symbol	xmalloc		3472298						
ANR	3472377	Symbol	node -> beg		3472298						
ANR	3472378	Symbol	* node		3472298						
ANR	3472379	Symbol	node -> group		3472298						
ANR	3472380	Symbol	node -> num_childs		3472298						
ANR	3472381	Symbol	ONIG_REGION_NOTPOS		3472298						
ANR	3472382	Function	history_tree_add_child	97:0:3093:3940							
ANR	3472383	FunctionDef	"history_tree_add_child (OnigCaptureTreeNode * parent , OnigCaptureTreeNode * child)"		3472382	0					
ANR	3472384	CompoundStatement		99:0:3184:3940	3472382	0					
ANR	3472385	Statement	define	100:1:3187:3192	3472382	0	True				
ANR	3472386	Statement	HISTORY_TREE_INIT_ALLOC_SIZE	100:8:3194:3221	3472382	1	True				
ANR	3472387	Statement	8	100:38:3224:3224	3472382	2	True				
ANR	3472388	IfStatement	if ( parent -> num_childs >= parent -> allocated )		3472382	3					
ANR	3472389	Condition	parent -> num_childs >= parent -> allocated	102:6:3233:3271	3472382	0	True				
ANR	3472390	RelationalExpression	parent -> num_childs >= parent -> allocated		3472382	0		>=			
ANR	3472391	PtrMemberAccess	parent -> num_childs		3472382	0					
ANR	3472392	Identifier	parent		3472382	0					
ANR	3472393	Identifier	num_childs		3472382	1					
ANR	3472394	PtrMemberAccess	parent -> allocated		3472382	1					
ANR	3472395	Identifier	parent		3472382	0					
ANR	3472396	Identifier	allocated		3472382	1					
ANR	3472397	CompoundStatement		5:4:95:103	3472382	1					
ANR	3472398	IdentifierDeclStatement	"int n , i ;"	103:4:3280:3288	3472382	0	True				
ANR	3472399	IdentifierDecl	n		3472382	0					
ANR	3472400	IdentifierDeclType	int		3472382	0					
ANR	3472401	Identifier	n		3472382	1					
ANR	3472402	IdentifierDecl	i		3472382	1					
ANR	3472403	IdentifierDeclType	int		3472382	0					
ANR	3472404	Identifier	i		3472382	1					
ANR	3472405	IfStatement	if ( IS_NULL ( parent -> childs ) )		3472382	1					
ANR	3472406	Condition	IS_NULL ( parent -> childs )	105:8:3299:3321	3472382	0	True				
ANR	3472407	CallExpression	IS_NULL ( parent -> childs )		3472382	0					
ANR	3472408	Callee	IS_NULL		3472382	0					
ANR	3472409	Identifier	IS_NULL		3472382	0					
ANR	3472410	ArgumentList	parent -> childs		3472382	1					
ANR	3472411	Argument	parent -> childs		3472382	0					
ANR	3472412	PtrMemberAccess	parent -> childs		3472382	0					
ANR	3472413	Identifier	parent		3472382	0					
ANR	3472414	Identifier	childs		3472382	1					
ANR	3472415	CompoundStatement		7:33:139:139	3472382	1					
ANR	3472416	ExpressionStatement	n = HISTORY_TREE_INIT_ALLOC_SIZE	106:6:3332:3364	3472382	0	True				
ANR	3472417	AssignmentExpression	n = HISTORY_TREE_INIT_ALLOC_SIZE		3472382	0		=			
ANR	3472418	Identifier	n		3472382	0					
ANR	3472419	Identifier	HISTORY_TREE_INIT_ALLOC_SIZE		3472382	1					
ANR	3472420	ExpressionStatement	parent -> childs = ( OnigCaptureTreeNode * * ) xmalloc ( sizeof ( OnigCaptureTreeNode * ) * n )	107:6:3372:3462	3472382	1	True				
ANR	3472421	AssignmentExpression	parent -> childs = ( OnigCaptureTreeNode * * ) xmalloc ( sizeof ( OnigCaptureTreeNode * ) * n )		3472382	0		=			
ANR	3472422	PtrMemberAccess	parent -> childs		3472382	0					
ANR	3472423	Identifier	parent		3472382	0					
ANR	3472424	Identifier	childs		3472382	1					
ANR	3472425	CastExpression	( OnigCaptureTreeNode * * ) xmalloc ( sizeof ( OnigCaptureTreeNode * ) * n )		3472382	1					
ANR	3472426	CastTarget	OnigCaptureTreeNode * *		3472382	0					
ANR	3472427	CallExpression	xmalloc ( sizeof ( OnigCaptureTreeNode * ) * n )		3472382	1					
ANR	3472428	Callee	xmalloc		3472382	0					
ANR	3472429	Identifier	xmalloc		3472382	0					
ANR	3472430	ArgumentList	sizeof ( OnigCaptureTreeNode * ) * n		3472382	1					
ANR	3472431	Argument	sizeof ( OnigCaptureTreeNode * ) * n		3472382	0					
ANR	3472432	MultiplicativeExpression	sizeof ( OnigCaptureTreeNode * ) * n		3472382	0		*			
ANR	3472433	SizeofExpression	sizeof ( OnigCaptureTreeNode * )		3472382	0					
ANR	3472434	Sizeof	sizeof		3472382	0					
ANR	3472435	SizeofOperand	OnigCaptureTreeNode *		3472382	1					
ANR	3472436	Identifier	n		3472382	1					
ANR	3472437	ElseStatement	else		3472382	0					
ANR	3472438	CompoundStatement		12:9:294:294	3472382	0					
ANR	3472439	ExpressionStatement	n = parent -> allocated * 2	111:6:3487:3512	3472382	0	True				
ANR	3472440	AssignmentExpression	n = parent -> allocated * 2		3472382	0		=			
ANR	3472441	Identifier	n		3472382	0					
ANR	3472442	MultiplicativeExpression	parent -> allocated * 2		3472382	1		*			
ANR	3472443	PtrMemberAccess	parent -> allocated		3472382	0					
ANR	3472444	Identifier	parent		3472382	0					
ANR	3472445	Identifier	allocated		3472382	1					
ANR	3472446	PrimaryExpression	2		3472382	1					
ANR	3472447	ExpressionStatement	"parent -> childs = ( OnigCaptureTreeNode * * ) xrealloc ( parent -> childs , sizeof ( OnigCaptureTreeNode * ) * n )"	112:6:3520:3668	3472382	1	True				
ANR	3472448	AssignmentExpression	"parent -> childs = ( OnigCaptureTreeNode * * ) xrealloc ( parent -> childs , sizeof ( OnigCaptureTreeNode * ) * n )"		3472382	0		=			
ANR	3472449	PtrMemberAccess	parent -> childs		3472382	0					
ANR	3472450	Identifier	parent		3472382	0					
ANR	3472451	Identifier	childs		3472382	1					
ANR	3472452	CastExpression	"( OnigCaptureTreeNode * * ) xrealloc ( parent -> childs , sizeof ( OnigCaptureTreeNode * ) * n )"		3472382	1					
ANR	3472453	CastTarget	OnigCaptureTreeNode * *		3472382	0					
ANR	3472454	CallExpression	"xrealloc ( parent -> childs , sizeof ( OnigCaptureTreeNode * ) * n )"		3472382	1					
ANR	3472455	Callee	xrealloc		3472382	0					
ANR	3472456	Identifier	xrealloc		3472382	0					
ANR	3472457	ArgumentList	parent -> childs		3472382	1					
ANR	3472458	Argument	parent -> childs		3472382	0					
ANR	3472459	PtrMemberAccess	parent -> childs		3472382	0					
ANR	3472460	Identifier	parent		3472382	0					
ANR	3472461	Identifier	childs		3472382	1					
ANR	3472462	Argument	sizeof ( OnigCaptureTreeNode * ) * n		3472382	1					
ANR	3472463	MultiplicativeExpression	sizeof ( OnigCaptureTreeNode * ) * n		3472382	0		*			
ANR	3472464	SizeofExpression	sizeof ( OnigCaptureTreeNode * )		3472382	0					
ANR	3472465	Sizeof	sizeof		3472382	0					
ANR	3472466	SizeofOperand	OnigCaptureTreeNode *		3472382	1					
ANR	3472467	Identifier	n		3472382	1					
ANR	3472468	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( parent -> childs )	116:4:3680:3720	3472382	2	True				
ANR	3472469	CallExpression	CHECK_NULL_RETURN_MEMERR ( parent -> childs )		3472382	0					
ANR	3472470	Callee	CHECK_NULL_RETURN_MEMERR		3472382	0					
ANR	3472471	Identifier	CHECK_NULL_RETURN_MEMERR		3472382	0					
ANR	3472472	ArgumentList	parent -> childs		3472382	1					
ANR	3472473	Argument	parent -> childs		3472382	0					
ANR	3472474	PtrMemberAccess	parent -> childs		3472382	0					
ANR	3472475	Identifier	parent		3472382	0					
ANR	3472476	Identifier	childs		3472382	1					
ANR	3472477	ForStatement	for ( i = parent -> allocated ; i < n ; i ++ )		3472382	3					
ANR	3472478	ForInit	i = parent -> allocated ;	117:9:3731:3752	3472382	0	True				
ANR	3472479	AssignmentExpression	i = parent -> allocated		3472382	0		=			
ANR	3472480	Identifier	i		3472382	0					
ANR	3472481	PtrMemberAccess	parent -> allocated		3472382	1					
ANR	3472482	Identifier	parent		3472382	0					
ANR	3472483	Identifier	allocated		3472382	1					
ANR	3472484	Condition	i < n	117:32:3754:3758	3472382	1	True				
ANR	3472485	RelationalExpression	i < n		3472382	0		<			
ANR	3472486	Identifier	i		3472382	0					
ANR	3472487	Identifier	n		3472382	1					
ANR	3472488	PostIncDecOperationExpression	i ++	117:39:3761:3763	3472382	2	True				
ANR	3472489	Identifier	i		3472382	0					
ANR	3472490	IncDec	++		3472382	1					
ANR	3472491	CompoundStatement		19:44:581:581	3472382	3					
ANR	3472492	ExpressionStatement	parent -> childs [ i ] = ( OnigCaptureTreeNode * ) 0	118:6:3774:3818	3472382	0	True				
ANR	3472493	AssignmentExpression	parent -> childs [ i ] = ( OnigCaptureTreeNode * ) 0		3472382	0		=			
ANR	3472494	ArrayIndexing	parent -> childs [ i ]		3472382	0					
ANR	3472495	PtrMemberAccess	parent -> childs		3472382	0					
ANR	3472496	Identifier	parent		3472382	0					
ANR	3472497	Identifier	childs		3472382	1					
ANR	3472498	Identifier	i		3472382	1					
ANR	3472499	CastExpression	( OnigCaptureTreeNode * ) 0		3472382	1					
ANR	3472500	CastTarget	OnigCaptureTreeNode *		3472382	0					
ANR	3472501	PrimaryExpression	0		3472382	1					
ANR	3472502	ExpressionStatement	parent -> allocated = n	120:4:3830:3851	3472382	4	True				
ANR	3472503	AssignmentExpression	parent -> allocated = n		3472382	0		=			
ANR	3472504	PtrMemberAccess	parent -> allocated		3472382	0					
ANR	3472505	Identifier	parent		3472382	0					
ANR	3472506	Identifier	allocated		3472382	1					
ANR	3472507	Identifier	n		3472382	1					
ANR	3472508	ExpressionStatement	parent -> childs [ parent -> num_childs ] = child	123:2:3860:3902	3472382	4	True				
ANR	3472509	AssignmentExpression	parent -> childs [ parent -> num_childs ] = child		3472382	0		=			
ANR	3472510	ArrayIndexing	parent -> childs [ parent -> num_childs ]		3472382	0					
ANR	3472511	PtrMemberAccess	parent -> childs		3472382	0					
ANR	3472512	Identifier	parent		3472382	0					
ANR	3472513	Identifier	childs		3472382	1					
ANR	3472514	PtrMemberAccess	parent -> num_childs		3472382	1					
ANR	3472515	Identifier	parent		3472382	0					
ANR	3472516	Identifier	num_childs		3472382	1					
ANR	3472517	Identifier	child		3472382	1					
ANR	3472518	ExpressionStatement	parent -> num_childs ++	124:2:3906:3926	3472382	5	True				
ANR	3472519	PostIncDecOperationExpression	parent -> num_childs ++		3472382	0					
ANR	3472520	PtrMemberAccess	parent -> num_childs		3472382	0					
ANR	3472521	Identifier	parent		3472382	0					
ANR	3472522	Identifier	num_childs		3472382	1					
ANR	3472523	IncDec	++		3472382	1					
ANR	3472524	ReturnStatement	return 0 ;	125:2:3930:3938	3472382	6	True				
ANR	3472525	PrimaryExpression	0		3472382	0					
ANR	3472526	ReturnType	static int		3472382	1					
ANR	3472527	Identifier	history_tree_add_child		3472382	2					
ANR	3472528	ParameterList	"OnigCaptureTreeNode * parent , OnigCaptureTreeNode * child"		3472382	3					
ANR	3472529	Parameter	OnigCaptureTreeNode * parent	98:23:3127:3153	3472382	0	True				
ANR	3472530	ParameterType	OnigCaptureTreeNode *		3472382	0					
ANR	3472531	Identifier	parent		3472382	1					
ANR	3472532	Parameter	OnigCaptureTreeNode * child	98:52:3156:3181	3472382	1	True				
ANR	3472533	ParameterType	OnigCaptureTreeNode *		3472382	0					
ANR	3472534	Identifier	child		3472382	1					
ANR	3472535	CFGEntryNode	ENTRY		3472382		True				
ANR	3472536	CFGExitNode	EXIT		3472382		True				
ANR	3472537	Symbol	parent		3472382						
ANR	3472538	Symbol	parent -> allocated		3472382						
ANR	3472539	Symbol	* parent -> num_childs		3472382						
ANR	3472540	Symbol	* parent		3472382						
ANR	3472541	Symbol	parent -> num_childs		3472382						
ANR	3472542	Symbol	* * parent		3472382						
ANR	3472543	Symbol	i		3472382						
ANR	3472544	Symbol	* parent -> childs		3472382						
ANR	3472545	Symbol	n		3472382						
ANR	3472546	Symbol	parent -> childs		3472382						
ANR	3472547	Symbol	* i		3472382						
ANR	3472548	Symbol	IS_NULL		3472382						
ANR	3472549	Symbol	xmalloc		3472382						
ANR	3472550	Symbol	HISTORY_TREE_INIT_ALLOC_SIZE		3472382						
ANR	3472551	Symbol	xrealloc		3472382						
ANR	3472552	Symbol	child		3472382						
ANR	3472553	Function	history_tree_clone	128:0:3943:4436							
ANR	3472554	FunctionDef	history_tree_clone (OnigCaptureTreeNode * node)		3472553	0					
ANR	3472555	CompoundStatement		130:0:4017:4436	3472553	0					
ANR	3472556	IdentifierDeclStatement	int i ;	131:2:4021:4026	3472553	0	True				
ANR	3472557	IdentifierDecl	i		3472553	0					
ANR	3472558	IdentifierDeclType	int		3472553	0					
ANR	3472559	Identifier	i		3472553	1					
ANR	3472560	IdentifierDeclStatement	"OnigCaptureTreeNode * clone , * child ;"	132:2:4030:4064	3472553	1	True				
ANR	3472561	IdentifierDecl	* clone		3472553	0					
ANR	3472562	IdentifierDeclType	OnigCaptureTreeNode *		3472553	0					
ANR	3472563	Identifier	clone		3472553	1					
ANR	3472564	IdentifierDecl	* child		3472553	1					
ANR	3472565	IdentifierDeclType	OnigCaptureTreeNode *		3472553	0					
ANR	3472566	Identifier	child		3472553	1					
ANR	3472567	ExpressionStatement	clone = history_node_new ( )	134:2:4069:4095	3472553	2	True				
ANR	3472568	AssignmentExpression	clone = history_node_new ( )		3472553	0		=			
ANR	3472569	Identifier	clone		3472553	0					
ANR	3472570	CallExpression	history_node_new ( )		3472553	1					
ANR	3472571	Callee	history_node_new		3472553	0					
ANR	3472572	Identifier	history_node_new		3472553	0					
ANR	3472573	ArgumentList			3472553	1					
ANR	3472574	ExpressionStatement	CHECK_NULL_RETURN ( clone )	135:2:4099:4123	3472553	3	True				
ANR	3472575	CallExpression	CHECK_NULL_RETURN ( clone )		3472553	0					
ANR	3472576	Callee	CHECK_NULL_RETURN		3472553	0					
ANR	3472577	Identifier	CHECK_NULL_RETURN		3472553	0					
ANR	3472578	ArgumentList	clone		3472553	1					
ANR	3472579	Argument	clone		3472553	0					
ANR	3472580	Identifier	clone		3472553	0					
ANR	3472581	ExpressionStatement	clone -> beg = node -> beg	137:2:4128:4150	3472553	4	True				
ANR	3472582	AssignmentExpression	clone -> beg = node -> beg		3472553	0		=			
ANR	3472583	PtrMemberAccess	clone -> beg		3472553	0					
ANR	3472584	Identifier	clone		3472553	0					
ANR	3472585	Identifier	beg		3472553	1					
ANR	3472586	PtrMemberAccess	node -> beg		3472553	1					
ANR	3472587	Identifier	node		3472553	0					
ANR	3472588	Identifier	beg		3472553	1					
ANR	3472589	ExpressionStatement	clone -> end = node -> end	138:2:4154:4176	3472553	5	True				
ANR	3472590	AssignmentExpression	clone -> end = node -> end		3472553	0		=			
ANR	3472591	PtrMemberAccess	clone -> end		3472553	0					
ANR	3472592	Identifier	clone		3472553	0					
ANR	3472593	Identifier	end		3472553	1					
ANR	3472594	PtrMemberAccess	node -> end		3472553	1					
ANR	3472595	Identifier	node		3472553	0					
ANR	3472596	Identifier	end		3472553	1					
ANR	3472597	ForStatement	for ( i = 0 ; i < node -> num_childs ; i ++ )		3472553	6					
ANR	3472598	ForInit	i = 0 ;	139:7:4185:4190	3472553	0	True				
ANR	3472599	AssignmentExpression	i = 0		3472553	0		=			
ANR	3472600	Identifier	i		3472553	0					
ANR	3472601	PrimaryExpression	0		3472553	1					
ANR	3472602	Condition	i < node -> num_childs	139:14:4192:4211	3472553	1	True				
ANR	3472603	RelationalExpression	i < node -> num_childs		3472553	0		<			
ANR	3472604	Identifier	i		3472553	0					
ANR	3472605	PtrMemberAccess	node -> num_childs		3472553	1					
ANR	3472606	Identifier	node		3472553	0					
ANR	3472607	Identifier	num_childs		3472553	1					
ANR	3472608	PostIncDecOperationExpression	i ++	139:36:4214:4216	3472553	2	True				
ANR	3472609	Identifier	i		3472553	0					
ANR	3472610	IncDec	++		3472553	1					
ANR	3472611	CompoundStatement		10:41:201:201	3472553	3					
ANR	3472612	ExpressionStatement	child = history_tree_clone ( node -> childs [ i ] )	140:4:4225:4268	3472553	0	True				
ANR	3472613	AssignmentExpression	child = history_tree_clone ( node -> childs [ i ] )		3472553	0		=			
ANR	3472614	Identifier	child		3472553	0					
ANR	3472615	CallExpression	history_tree_clone ( node -> childs [ i ] )		3472553	1					
ANR	3472616	Callee	history_tree_clone		3472553	0					
ANR	3472617	Identifier	history_tree_clone		3472553	0					
ANR	3472618	ArgumentList	node -> childs [ i ]		3472553	1					
ANR	3472619	Argument	node -> childs [ i ]		3472553	0					
ANR	3472620	ArrayIndexing	node -> childs [ i ]		3472553	0					
ANR	3472621	PtrMemberAccess	node -> childs		3472553	0					
ANR	3472622	Identifier	node		3472553	0					
ANR	3472623	Identifier	childs		3472553	1					
ANR	3472624	Identifier	i		3472553	1					
ANR	3472625	IfStatement	if ( IS_NULL ( child ) )		3472553	1					
ANR	3472626	Condition	IS_NULL ( child )	141:8:4278:4291	3472553	0	True				
ANR	3472627	CallExpression	IS_NULL ( child )		3472553	0					
ANR	3472628	Callee	IS_NULL		3472553	0					
ANR	3472629	Identifier	IS_NULL		3472553	0					
ANR	3472630	ArgumentList	child		3472553	1					
ANR	3472631	Argument	child		3472553	0					
ANR	3472632	Identifier	child		3472553	0					
ANR	3472633	CompoundStatement		12:24:276:276	3472553	1					
ANR	3472634	ExpressionStatement	history_tree_free ( clone )	142:6:4302:4326	3472553	0	True				
ANR	3472635	CallExpression	history_tree_free ( clone )		3472553	0					
ANR	3472636	Callee	history_tree_free		3472553	0					
ANR	3472637	Identifier	history_tree_free		3472553	0					
ANR	3472638	ArgumentList	clone		3472553	1					
ANR	3472639	Argument	clone		3472553	0					
ANR	3472640	Identifier	clone		3472553	0					
ANR	3472641	ReturnStatement	return ( OnigCaptureTreeNode * ) 0 ;	143:6:4334:4365	3472553	1	True				
ANR	3472642	CastExpression	( OnigCaptureTreeNode * ) 0		3472553	0					
ANR	3472643	CastTarget	OnigCaptureTreeNode *		3472553	0					
ANR	3472644	PrimaryExpression	0		3472553	1					
ANR	3472645	ExpressionStatement	"history_tree_add_child ( clone , child )"	145:4:4377:4413	3472553	2	True				
ANR	3472646	CallExpression	"history_tree_add_child ( clone , child )"		3472553	0					
ANR	3472647	Callee	history_tree_add_child		3472553	0					
ANR	3472648	Identifier	history_tree_add_child		3472553	0					
ANR	3472649	ArgumentList	clone		3472553	1					
ANR	3472650	Argument	clone		3472553	0					
ANR	3472651	Identifier	clone		3472553	0					
ANR	3472652	Argument	child		3472553	1					
ANR	3472653	Identifier	child		3472553	0					
ANR	3472654	ReturnStatement	return clone ;	148:2:4422:4434	3472553	7	True				
ANR	3472655	Identifier	clone		3472553	0					
ANR	3472656	ReturnType	static OnigCaptureTreeNode *		3472553	1					
ANR	3472657	Identifier	history_tree_clone		3472553	2					
ANR	3472658	ParameterList	OnigCaptureTreeNode * node		3472553	3					
ANR	3472659	Parameter	OnigCaptureTreeNode * node	129:19:3990:4014	3472553	0	True				
ANR	3472660	ParameterType	OnigCaptureTreeNode *		3472553	0					
ANR	3472661	Identifier	node		3472553	1					
ANR	3472662	CFGEntryNode	ENTRY		3472553		True				
ANR	3472663	CFGExitNode	EXIT		3472553		True				
ANR	3472664	Symbol	* clone		3472553						
ANR	3472665	Symbol	clone -> beg		3472553						
ANR	3472666	Symbol	i		3472553						
ANR	3472667	Symbol	node -> beg		3472553						
ANR	3472668	Symbol	* node -> childs		3472553						
ANR	3472669	Symbol	history_tree_clone		3472553						
ANR	3472670	Symbol	node -> end		3472553						
ANR	3472671	Symbol	node		3472553						
ANR	3472672	Symbol	* i		3472553						
ANR	3472673	Symbol	* * node		3472553						
ANR	3472674	Symbol	node -> childs		3472553						
ANR	3472675	Symbol	IS_NULL		3472553						
ANR	3472676	Symbol	clone		3472553						
ANR	3472677	Symbol	* node		3472553						
ANR	3472678	Symbol	history_node_new		3472553						
ANR	3472679	Symbol	node -> num_childs		3472553						
ANR	3472680	Symbol	child		3472553						
ANR	3472681	Symbol	clone -> end		3472553						
ANR	3472682	Function	onig_get_capture_tree	151:0:4439:4543							
ANR	3472683	FunctionDef	onig_get_capture_tree (OnigRegion * region)		3472682	0					
ANR	3472684	CompoundStatement		153:0:4510:4543	3472682	0					
ANR	3472685	ReturnStatement	return region -> history_root ;	154:2:4514:4541	3472682	0	True				
ANR	3472686	PtrMemberAccess	region -> history_root		3472682	0					
ANR	3472687	Identifier	region		3472682	0					
ANR	3472688	Identifier	history_root		3472682	1					
ANR	3472689	ReturnType	extern OnigCaptureTreeNode *		3472682	1					
ANR	3472690	Identifier	onig_get_capture_tree		3472682	2					
ANR	3472691	ParameterList	OnigRegion * region		3472682	3					
ANR	3472692	Parameter	OnigRegion * region	152:22:4490:4507	3472682	0	True				
ANR	3472693	ParameterType	OnigRegion *		3472682	0					
ANR	3472694	Identifier	region		3472682	1					
ANR	3472695	CFGEntryNode	ENTRY		3472682		True				
ANR	3472696	CFGExitNode	EXIT		3472682		True				
ANR	3472697	Symbol	region -> history_root		3472682						
ANR	3472698	Symbol	* region		3472682						
ANR	3472699	Symbol	region		3472682						
ANR	3472700	Function	onig_region_clear	158:0:4579:4809							
ANR	3472701	FunctionDef	onig_region_clear (OnigRegion * region)		3472700	0					
ANR	3472702	CompoundStatement		160:0:4629:4809	3472700	0					
ANR	3472703	IdentifierDeclStatement	int i ;	161:2:4633:4638	3472700	0	True				
ANR	3472704	IdentifierDecl	i		3472700	0					
ANR	3472705	IdentifierDeclType	int		3472700	0					
ANR	3472706	Identifier	i		3472700	1					
ANR	3472707	ForStatement	for ( i = 0 ; i < region -> num_regs ; i ++ )		3472700	1					
ANR	3472708	ForInit	i = 0 ;	163:7:4648:4653	3472700	0	True				
ANR	3472709	AssignmentExpression	i = 0		3472700	0		=			
ANR	3472710	Identifier	i		3472700	0					
ANR	3472711	PrimaryExpression	0		3472700	1					
ANR	3472712	Condition	i < region -> num_regs	163:14:4655:4674	3472700	1	True				
ANR	3472713	RelationalExpression	i < region -> num_regs		3472700	0		<			
ANR	3472714	Identifier	i		3472700	0					
ANR	3472715	PtrMemberAccess	region -> num_regs		3472700	1					
ANR	3472716	Identifier	region		3472700	0					
ANR	3472717	Identifier	num_regs		3472700	1					
ANR	3472718	PostIncDecOperationExpression	i ++	163:36:4677:4679	3472700	2	True				
ANR	3472719	Identifier	i		3472700	0					
ANR	3472720	IncDec	++		3472700	1					
ANR	3472721	CompoundStatement		4:41:52:52	3472700	3					
ANR	3472722	ExpressionStatement	region -> beg [ i ] = region -> end [ i ] = ONIG_REGION_NOTPOS	164:4:4688:4740	3472700	0	True				
ANR	3472723	AssignmentExpression	region -> beg [ i ] = region -> end [ i ] = ONIG_REGION_NOTPOS		3472700	0		=			
ANR	3472724	ArrayIndexing	region -> beg [ i ]		3472700	0					
ANR	3472725	PtrMemberAccess	region -> beg		3472700	0					
ANR	3472726	Identifier	region		3472700	0					
ANR	3472727	Identifier	beg		3472700	1					
ANR	3472728	Identifier	i		3472700	1					
ANR	3472729	AssignmentExpression	region -> end [ i ] = ONIG_REGION_NOTPOS		3472700	1		=			
ANR	3472730	ArrayIndexing	region -> end [ i ]		3472700	0					
ANR	3472731	PtrMemberAccess	region -> end		3472700	0					
ANR	3472732	Identifier	region		3472700	0					
ANR	3472733	Identifier	end		3472700	1					
ANR	3472734	Identifier	i		3472700	1					
ANR	3472735	Identifier	ONIG_REGION_NOTPOS		3472700	1					
ANR	3472736	ExpressionStatement	history_root_free ( region )	167:2:4775:4800	3472700	2	True				
ANR	3472737	CallExpression	history_root_free ( region )		3472700	0					
ANR	3472738	Callee	history_root_free		3472700	0					
ANR	3472739	Identifier	history_root_free		3472700	0					
ANR	3472740	ArgumentList	region		3472700	1					
ANR	3472741	Argument	region		3472700	0					
ANR	3472742	Identifier	region		3472700	0					
ANR	3472743	ReturnType	extern void		3472700	1					
ANR	3472744	Identifier	onig_region_clear		3472700	2					
ANR	3472745	ParameterList	OnigRegion * region		3472700	3					
ANR	3472746	Parameter	OnigRegion * region	159:18:4609:4626	3472700	0	True				
ANR	3472747	ParameterType	OnigRegion *		3472700	0					
ANR	3472748	Identifier	region		3472700	1					
ANR	3472749	CFGEntryNode	ENTRY		3472700		True				
ANR	3472750	CFGExitNode	EXIT		3472700		True				
ANR	3472751	Symbol	region -> num_regs		3472700						
ANR	3472752	Symbol	* region -> end		3472700						
ANR	3472753	Symbol	region -> end		3472700						
ANR	3472754	Symbol	* i		3472700						
ANR	3472755	Symbol	* region -> beg		3472700						
ANR	3472756	Symbol	i		3472700						
ANR	3472757	Symbol	* region		3472700						
ANR	3472758	Symbol	region -> beg		3472700						
ANR	3472759	Symbol	* * region		3472700						
ANR	3472760	Symbol	region		3472700						
ANR	3472761	Symbol	ONIG_REGION_NOTPOS		3472700						
ANR	3472762	Function	onig_region_resize	171:0:4812:5472							
ANR	3472763	FunctionDef	"onig_region_resize (OnigRegion * region , int n)"		3472762	0					
ANR	3472764	CompoundStatement		173:0:4869:5472	3472762	0					
ANR	3472765	ExpressionStatement	region -> num_regs = n	174:2:4873:4893	3472762	0	True				
ANR	3472766	AssignmentExpression	region -> num_regs = n		3472762	0		=			
ANR	3472767	PtrMemberAccess	region -> num_regs		3472762	0					
ANR	3472768	Identifier	region		3472762	0					
ANR	3472769	Identifier	num_regs		3472762	1					
ANR	3472770	Identifier	n		3472762	1					
ANR	3472771	IfStatement	if ( n < ONIG_NREGION )		3472762	1					
ANR	3472772	Condition	n < ONIG_NREGION	176:6:4902:4917	3472762	0	True				
ANR	3472773	RelationalExpression	n < ONIG_NREGION		3472762	0		<			
ANR	3472774	Identifier	n		3472762	0					
ANR	3472775	Identifier	ONIG_NREGION		3472762	1					
ANR	3472776	ExpressionStatement	n = ONIG_NREGION	177:4:4924:4940	3472762	1	True				
ANR	3472777	AssignmentExpression	n = ONIG_NREGION		3472762	0		=			
ANR	3472778	Identifier	n		3472762	0					
ANR	3472779	Identifier	ONIG_NREGION		3472762	1					
ANR	3472780	IfStatement	if ( region -> allocated == 0 )		3472762	2					
ANR	3472781	Condition	region -> allocated == 0	179:6:4949:4970	3472762	0	True				
ANR	3472782	EqualityExpression	region -> allocated == 0		3472762	0		==			
ANR	3472783	PtrMemberAccess	region -> allocated		3472762	0					
ANR	3472784	Identifier	region		3472762	0					
ANR	3472785	Identifier	allocated		3472762	1					
ANR	3472786	PrimaryExpression	0		3472762	1					
ANR	3472787	CompoundStatement		7:30:103:103	3472762	1					
ANR	3472788	ExpressionStatement	region -> beg = ( int * ) xmalloc ( n * sizeof ( int ) )	180:4:4979:5024	3472762	0	True				
ANR	3472789	AssignmentExpression	region -> beg = ( int * ) xmalloc ( n * sizeof ( int ) )		3472762	0		=			
ANR	3472790	PtrMemberAccess	region -> beg		3472762	0					
ANR	3472791	Identifier	region		3472762	0					
ANR	3472792	Identifier	beg		3472762	1					
ANR	3472793	CastExpression	( int * ) xmalloc ( n * sizeof ( int ) )		3472762	1					
ANR	3472794	CastTarget	int *		3472762	0					
ANR	3472795	CallExpression	xmalloc ( n * sizeof ( int ) )		3472762	1					
ANR	3472796	Callee	xmalloc		3472762	0					
ANR	3472797	Identifier	xmalloc		3472762	0					
ANR	3472798	ArgumentList	n * sizeof ( int )		3472762	1					
ANR	3472799	Argument	n * sizeof ( int )		3472762	0					
ANR	3472800	MultiplicativeExpression	n * sizeof ( int )		3472762	0		*			
ANR	3472801	Identifier	n		3472762	0					
ANR	3472802	SizeofExpression	sizeof ( int )		3472762	1					
ANR	3472803	Sizeof	sizeof		3472762	0					
ANR	3472804	SizeofOperand	int		3472762	1					
ANR	3472805	ExpressionStatement	region -> end = ( int * ) xmalloc ( n * sizeof ( int ) )	181:4:5030:5075	3472762	1	True				
ANR	3472806	AssignmentExpression	region -> end = ( int * ) xmalloc ( n * sizeof ( int ) )		3472762	0		=			
ANR	3472807	PtrMemberAccess	region -> end		3472762	0					
ANR	3472808	Identifier	region		3472762	0					
ANR	3472809	Identifier	end		3472762	1					
ANR	3472810	CastExpression	( int * ) xmalloc ( n * sizeof ( int ) )		3472762	1					
ANR	3472811	CastTarget	int *		3472762	0					
ANR	3472812	CallExpression	xmalloc ( n * sizeof ( int ) )		3472762	1					
ANR	3472813	Callee	xmalloc		3472762	0					
ANR	3472814	Identifier	xmalloc		3472762	0					
ANR	3472815	ArgumentList	n * sizeof ( int )		3472762	1					
ANR	3472816	Argument	n * sizeof ( int )		3472762	0					
ANR	3472817	MultiplicativeExpression	n * sizeof ( int )		3472762	0		*			
ANR	3472818	Identifier	n		3472762	0					
ANR	3472819	SizeofExpression	sizeof ( int )		3472762	1					
ANR	3472820	Sizeof	sizeof		3472762	0					
ANR	3472821	SizeofOperand	int		3472762	1					
ANR	3472822	IfStatement	if ( region -> beg == 0 || region -> end == 0 )		3472762	2					
ANR	3472823	Condition	region -> beg == 0 || region -> end == 0	183:8:5086:5121	3472762	0	True				
ANR	3472824	OrExpression	region -> beg == 0 || region -> end == 0		3472762	0		||			
ANR	3472825	EqualityExpression	region -> beg == 0		3472762	0		==			
ANR	3472826	PtrMemberAccess	region -> beg		3472762	0					
ANR	3472827	Identifier	region		3472762	0					
ANR	3472828	Identifier	beg		3472762	1					
ANR	3472829	PrimaryExpression	0		3472762	1					
ANR	3472830	EqualityExpression	region -> end == 0		3472762	1		==			
ANR	3472831	PtrMemberAccess	region -> end		3472762	0					
ANR	3472832	Identifier	region		3472762	0					
ANR	3472833	Identifier	end		3472762	1					
ANR	3472834	PrimaryExpression	0		3472762	1					
ANR	3472835	ReturnStatement	return ONIGERR_MEMORY ;	184:6:5130:5151	3472762	1	True				
ANR	3472836	Identifier	ONIGERR_MEMORY		3472762	0					
ANR	3472837	ExpressionStatement	region -> allocated = n	186:4:5158:5179	3472762	3	True				
ANR	3472838	AssignmentExpression	region -> allocated = n		3472762	0		=			
ANR	3472839	PtrMemberAccess	region -> allocated		3472762	0					
ANR	3472840	Identifier	region		3472762	0					
ANR	3472841	Identifier	allocated		3472762	1					
ANR	3472842	Identifier	n		3472762	1					
ANR	3472843	ElseStatement	else		3472762	0					
ANR	3472844	IfStatement	if ( region -> allocated < n )		3472762	0					
ANR	3472845	Condition	region -> allocated < n	188:11:5196:5216	3472762	0	True				
ANR	3472846	RelationalExpression	region -> allocated < n		3472762	0		<			
ANR	3472847	PtrMemberAccess	region -> allocated		3472762	0					
ANR	3472848	Identifier	region		3472762	0					
ANR	3472849	Identifier	allocated		3472762	1					
ANR	3472850	Identifier	n		3472762	1					
ANR	3472851	CompoundStatement		16:34:349:349	3472762	1					
ANR	3472852	ExpressionStatement	"region -> beg = ( int * ) xrealloc ( region -> beg , n * sizeof ( int ) )"	189:4:5225:5284	3472762	0	True				
ANR	3472853	AssignmentExpression	"region -> beg = ( int * ) xrealloc ( region -> beg , n * sizeof ( int ) )"		3472762	0		=			
ANR	3472854	PtrMemberAccess	region -> beg		3472762	0					
ANR	3472855	Identifier	region		3472762	0					
ANR	3472856	Identifier	beg		3472762	1					
ANR	3472857	CastExpression	"( int * ) xrealloc ( region -> beg , n * sizeof ( int ) )"		3472762	1					
ANR	3472858	CastTarget	int *		3472762	0					
ANR	3472859	CallExpression	"xrealloc ( region -> beg , n * sizeof ( int ) )"		3472762	1					
ANR	3472860	Callee	xrealloc		3472762	0					
ANR	3472861	Identifier	xrealloc		3472762	0					
ANR	3472862	ArgumentList	region -> beg		3472762	1					
ANR	3472863	Argument	region -> beg		3472762	0					
ANR	3472864	PtrMemberAccess	region -> beg		3472762	0					
ANR	3472865	Identifier	region		3472762	0					
ANR	3472866	Identifier	beg		3472762	1					
ANR	3472867	Argument	n * sizeof ( int )		3472762	1					
ANR	3472868	MultiplicativeExpression	n * sizeof ( int )		3472762	0		*			
ANR	3472869	Identifier	n		3472762	0					
ANR	3472870	SizeofExpression	sizeof ( int )		3472762	1					
ANR	3472871	Sizeof	sizeof		3472762	0					
ANR	3472872	SizeofOperand	int		3472762	1					
ANR	3472873	ExpressionStatement	"region -> end = ( int * ) xrealloc ( region -> end , n * sizeof ( int ) )"	190:4:5290:5349	3472762	1	True				
ANR	3472874	AssignmentExpression	"region -> end = ( int * ) xrealloc ( region -> end , n * sizeof ( int ) )"		3472762	0		=			
ANR	3472875	PtrMemberAccess	region -> end		3472762	0					
ANR	3472876	Identifier	region		3472762	0					
ANR	3472877	Identifier	end		3472762	1					
ANR	3472878	CastExpression	"( int * ) xrealloc ( region -> end , n * sizeof ( int ) )"		3472762	1					
ANR	3472879	CastTarget	int *		3472762	0					
ANR	3472880	CallExpression	"xrealloc ( region -> end , n * sizeof ( int ) )"		3472762	1					
ANR	3472881	Callee	xrealloc		3472762	0					
ANR	3472882	Identifier	xrealloc		3472762	0					
ANR	3472883	ArgumentList	region -> end		3472762	1					
ANR	3472884	Argument	region -> end		3472762	0					
ANR	3472885	PtrMemberAccess	region -> end		3472762	0					
ANR	3472886	Identifier	region		3472762	0					
ANR	3472887	Identifier	end		3472762	1					
ANR	3472888	Argument	n * sizeof ( int )		3472762	1					
ANR	3472889	MultiplicativeExpression	n * sizeof ( int )		3472762	0		*			
ANR	3472890	Identifier	n		3472762	0					
ANR	3472891	SizeofExpression	sizeof ( int )		3472762	1					
ANR	3472892	Sizeof	sizeof		3472762	0					
ANR	3472893	SizeofOperand	int		3472762	1					
ANR	3472894	IfStatement	if ( region -> beg == 0 || region -> end == 0 )		3472762	2					
ANR	3472895	Condition	region -> beg == 0 || region -> end == 0	192:8:5360:5395	3472762	0	True				
ANR	3472896	OrExpression	region -> beg == 0 || region -> end == 0		3472762	0		||			
ANR	3472897	EqualityExpression	region -> beg == 0		3472762	0		==			
ANR	3472898	PtrMemberAccess	region -> beg		3472762	0					
ANR	3472899	Identifier	region		3472762	0					
ANR	3472900	Identifier	beg		3472762	1					
ANR	3472901	PrimaryExpression	0		3472762	1					
ANR	3472902	EqualityExpression	region -> end == 0		3472762	1		==			
ANR	3472903	PtrMemberAccess	region -> end		3472762	0					
ANR	3472904	Identifier	region		3472762	0					
ANR	3472905	Identifier	end		3472762	1					
ANR	3472906	PrimaryExpression	0		3472762	1					
ANR	3472907	ReturnStatement	return ONIGERR_MEMORY ;	193:6:5404:5425	3472762	1	True				
ANR	3472908	Identifier	ONIGERR_MEMORY		3472762	0					
ANR	3472909	ExpressionStatement	region -> allocated = n	195:4:5432:5453	3472762	3	True				
ANR	3472910	AssignmentExpression	region -> allocated = n		3472762	0		=			
ANR	3472911	PtrMemberAccess	region -> allocated		3472762	0					
ANR	3472912	Identifier	region		3472762	0					
ANR	3472913	Identifier	allocated		3472762	1					
ANR	3472914	Identifier	n		3472762	1					
ANR	3472915	ReturnStatement	return 0 ;	198:2:5462:5470	3472762	3	True				
ANR	3472916	PrimaryExpression	0		3472762	0					
ANR	3472917	ReturnType	extern int		3472762	1					
ANR	3472918	Identifier	onig_region_resize		3472762	2					
ANR	3472919	ParameterList	"OnigRegion * region , int n"		3472762	3					
ANR	3472920	Parameter	OnigRegion * region	172:19:4842:4859	3472762	0	True				
ANR	3472921	ParameterType	OnigRegion *		3472762	0					
ANR	3472922	Identifier	region		3472762	1					
ANR	3472923	Parameter	int n	172:39:4862:4866	3472762	1	True				
ANR	3472924	ParameterType	int		3472762	0					
ANR	3472925	Identifier	n		3472762	1					
ANR	3472926	CFGEntryNode	ENTRY		3472762		True				
ANR	3472927	CFGExitNode	EXIT		3472762		True				
ANR	3472928	Symbol	region -> num_regs		3472762						
ANR	3472929	Symbol	region -> end		3472762						
ANR	3472930	Symbol	xmalloc		3472762						
ANR	3472931	Symbol	ONIGERR_MEMORY		3472762						
ANR	3472932	Symbol	* region		3472762						
ANR	3472933	Symbol	region -> allocated		3472762						
ANR	3472934	Symbol	region -> beg		3472762						
ANR	3472935	Symbol	region		3472762						
ANR	3472936	Symbol	xrealloc		3472762						
ANR	3472937	Symbol	ONIG_NREGION		3472762						
ANR	3472938	Symbol	n		3472762						
ANR	3472939	Function	onig_region_resize_clear	201:0:5475:5654							
ANR	3472940	FunctionDef	"onig_region_resize_clear (OnigRegion * region , int n)"		3472939	0					
ANR	3472941	CompoundStatement		203:0:5538:5654	3472939	0					
ANR	3472942	IdentifierDeclStatement	int r ;	204:2:5542:5547	3472939	0	True				
ANR	3472943	IdentifierDecl	r		3472939	0					
ANR	3472944	IdentifierDeclType	int		3472939	0					
ANR	3472945	Identifier	r		3472939	1					
ANR	3472946	ExpressionStatement	"r = onig_region_resize ( region , n )"	206:2:5554:5587	3472939	1	True				
ANR	3472947	AssignmentExpression	"r = onig_region_resize ( region , n )"		3472939	0		=			
ANR	3472948	Identifier	r		3472939	0					
ANR	3472949	CallExpression	"onig_region_resize ( region , n )"		3472939	1					
ANR	3472950	Callee	onig_region_resize		3472939	0					
ANR	3472951	Identifier	onig_region_resize		3472939	0					
ANR	3472952	ArgumentList	region		3472939	1					
ANR	3472953	Argument	region		3472939	0					
ANR	3472954	Identifier	region		3472939	0					
ANR	3472955	Argument	n		3472939	1					
ANR	3472956	Identifier	n		3472939	0					
ANR	3472957	IfStatement	if ( r != 0 )		3472939	2					
ANR	3472958	Condition	r != 0	207:6:5595:5600	3472939	0	True				
ANR	3472959	EqualityExpression	r != 0		3472939	0		!=			
ANR	3472960	Identifier	r		3472939	0					
ANR	3472961	PrimaryExpression	0		3472939	1					
ANR	3472962	ReturnStatement	return r ;	207:14:5603:5611	3472939	1	True				
ANR	3472963	Identifier	r		3472939	0					
ANR	3472964	ExpressionStatement	onig_region_clear ( region )	208:2:5615:5640	3472939	3	True				
ANR	3472965	CallExpression	onig_region_clear ( region )		3472939	0					
ANR	3472966	Callee	onig_region_clear		3472939	0					
ANR	3472967	Identifier	onig_region_clear		3472939	0					
ANR	3472968	ArgumentList	region		3472939	1					
ANR	3472969	Argument	region		3472939	0					
ANR	3472970	Identifier	region		3472939	0					
ANR	3472971	ReturnStatement	return 0 ;	209:2:5644:5652	3472939	4	True				
ANR	3472972	PrimaryExpression	0		3472939	0					
ANR	3472973	ReturnType	static int		3472939	1					
ANR	3472974	Identifier	onig_region_resize_clear		3472939	2					
ANR	3472975	ParameterList	"OnigRegion * region , int n"		3472939	3					
ANR	3472976	Parameter	OnigRegion * region	202:25:5511:5528	3472939	0	True				
ANR	3472977	ParameterType	OnigRegion *		3472939	0					
ANR	3472978	Identifier	region		3472939	1					
ANR	3472979	Parameter	int n	202:45:5531:5535	3472939	1	True				
ANR	3472980	ParameterType	int		3472939	0					
ANR	3472981	Identifier	n		3472939	1					
ANR	3472982	CFGEntryNode	ENTRY		3472939		True				
ANR	3472983	CFGExitNode	EXIT		3472939		True				
ANR	3472984	Symbol	r		3472939						
ANR	3472985	Symbol	onig_region_resize		3472939						
ANR	3472986	Symbol	region		3472939						
ANR	3472987	Symbol	n		3472939						
ANR	3472988	Function	onig_region_set	212:0:5661:5959							
ANR	3472989	FunctionDef	"onig_region_set (OnigRegion * region , int at , int beg , int end)"		3472988	0					
ANR	3472990	CompoundStatement		214:0:5734:5959	3472988	0					
ANR	3472991	IfStatement	if ( at < 0 )		3472988	0					
ANR	3472992	Condition	at < 0	215:6:5742:5747	3472988	0	True				
ANR	3472993	RelationalExpression	at < 0		3472988	0		<			
ANR	3472994	Identifier	at		3472988	0					
ANR	3472995	PrimaryExpression	0		3472988	1					
ANR	3472996	ReturnStatement	return ONIGERR_INVALID_ARGUMENT ;	215:14:5750:5781	3472988	1	True				
ANR	3472997	Identifier	ONIGERR_INVALID_ARGUMENT		3472988	0					
ANR	3472998	IfStatement	if ( at >= region -> allocated )		3472988	1					
ANR	3472999	Condition	at >= region -> allocated	217:6:5790:5812	3472988	0	True				
ANR	3473000	RelationalExpression	at >= region -> allocated		3472988	0		>=			
ANR	3473001	Identifier	at		3472988	0					
ANR	3473002	PtrMemberAccess	region -> allocated		3472988	1					
ANR	3473003	Identifier	region		3472988	0					
ANR	3473004	Identifier	allocated		3472988	1					
ANR	3473005	CompoundStatement		5:4:86:128	3472988	1					
ANR	3473006	IdentifierDeclStatement	"int r = onig_region_resize ( region , at + 1 ) ;"	218:4:5821:5863	3472988	0	True				
ANR	3473007	IdentifierDecl	"r = onig_region_resize ( region , at + 1 )"		3472988	0					
ANR	3473008	IdentifierDeclType	int		3472988	0					
ANR	3473009	Identifier	r		3472988	1					
ANR	3473010	AssignmentExpression	"r = onig_region_resize ( region , at + 1 )"		3472988	2		=			
ANR	3473011	Identifier	r		3472988	0					
ANR	3473012	CallExpression	"onig_region_resize ( region , at + 1 )"		3472988	1					
ANR	3473013	Callee	onig_region_resize		3472988	0					
ANR	3473014	Identifier	onig_region_resize		3472988	0					
ANR	3473015	ArgumentList	region		3472988	1					
ANR	3473016	Argument	region		3472988	0					
ANR	3473017	Identifier	region		3472988	0					
ANR	3473018	Argument	at + 1		3472988	1					
ANR	3473019	AdditiveExpression	at + 1		3472988	0		+			
ANR	3473020	Identifier	at		3472988	0					
ANR	3473021	PrimaryExpression	1		3472988	1					
ANR	3473022	IfStatement	if ( r < 0 )		3472988	1					
ANR	3473023	Condition	r < 0	219:8:5873:5877	3472988	0	True				
ANR	3473024	RelationalExpression	r < 0		3472988	0		<			
ANR	3473025	Identifier	r		3472988	0					
ANR	3473026	PrimaryExpression	0		3472988	1					
ANR	3473027	ReturnStatement	return r ;	219:15:5880:5888	3472988	1	True				
ANR	3473028	Identifier	r		3472988	0					
ANR	3473029	ExpressionStatement	region -> beg [ at ] = beg	222:2:5899:5920	3472988	2	True				
ANR	3473030	AssignmentExpression	region -> beg [ at ] = beg		3472988	0		=			
ANR	3473031	ArrayIndexing	region -> beg [ at ]		3472988	0					
ANR	3473032	PtrMemberAccess	region -> beg		3472988	0					
ANR	3473033	Identifier	region		3472988	0					
ANR	3473034	Identifier	beg		3472988	1					
ANR	3473035	Identifier	at		3472988	1					
ANR	3473036	Identifier	beg		3472988	1					
ANR	3473037	ExpressionStatement	region -> end [ at ] = end	223:2:5924:5945	3472988	3	True				
ANR	3473038	AssignmentExpression	region -> end [ at ] = end		3472988	0		=			
ANR	3473039	ArrayIndexing	region -> end [ at ]		3472988	0					
ANR	3473040	PtrMemberAccess	region -> end		3472988	0					
ANR	3473041	Identifier	region		3472988	0					
ANR	3473042	Identifier	end		3472988	1					
ANR	3473043	Identifier	at		3472988	1					
ANR	3473044	Identifier	end		3472988	1					
ANR	3473045	ReturnStatement	return 0 ;	224:2:5949:5957	3472988	4	True				
ANR	3473046	PrimaryExpression	0		3472988	0					
ANR	3473047	ReturnType	extern int		3472988	1					
ANR	3473048	Identifier	onig_region_set		3472988	2					
ANR	3473049	ParameterList	"OnigRegion * region , int at , int beg , int end"		3472988	3					
ANR	3473050	Parameter	OnigRegion * region	213:16:5688:5705	3472988	0	True				
ANR	3473051	ParameterType	OnigRegion *		3472988	0					
ANR	3473052	Identifier	region		3472988	1					
ANR	3473053	Parameter	int at	213:36:5708:5713	3472988	1	True				
ANR	3473054	ParameterType	int		3472988	0					
ANR	3473055	Identifier	at		3472988	1					
ANR	3473056	Parameter	int beg	213:44:5716:5722	3472988	2	True				
ANR	3473057	ParameterType	int		3472988	0					
ANR	3473058	Identifier	beg		3472988	1					
ANR	3473059	Parameter	int end	213:53:5725:5731	3472988	3	True				
ANR	3473060	ParameterType	int		3472988	0					
ANR	3473061	Identifier	end		3472988	1					
ANR	3473062	CFGEntryNode	ENTRY		3472988		True				
ANR	3473063	CFGExitNode	EXIT		3472988		True				
ANR	3473064	Symbol	* region -> end		3472988						
ANR	3473065	Symbol	beg		3472988						
ANR	3473066	Symbol	* region -> beg		3472988						
ANR	3473067	Symbol	ONIGERR_INVALID_ARGUMENT		3472988						
ANR	3473068	Symbol	region -> allocated		3472988						
ANR	3473069	Symbol	* region		3472988						
ANR	3473070	Symbol	region -> beg		3472988						
ANR	3473071	Symbol	r		3472988						
ANR	3473072	Symbol	at		3472988						
ANR	3473073	Symbol	region -> end		3472988						
ANR	3473074	Symbol	onig_region_resize		3472988						
ANR	3473075	Symbol	end		3472988						
ANR	3473076	Symbol	* at		3472988						
ANR	3473077	Symbol	* * region		3472988						
ANR	3473078	Symbol	region		3472988						
ANR	3473079	Function	onig_region_init	227:0:5962:6190							
ANR	3473080	FunctionDef	onig_region_init (OnigRegion * region)		3473079	0					
ANR	3473081	CompoundStatement		229:0:6011:6190	3473079	0					
ANR	3473082	ExpressionStatement	region -> num_regs = 0	230:2:6015:6039	3473079	0	True				
ANR	3473083	AssignmentExpression	region -> num_regs = 0		3473079	0		=			
ANR	3473084	PtrMemberAccess	region -> num_regs		3473079	0					
ANR	3473085	Identifier	region		3473079	0					
ANR	3473086	Identifier	num_regs		3473079	1					
ANR	3473087	PrimaryExpression	0		3473079	1					
ANR	3473088	ExpressionStatement	region -> allocated = 0	231:2:6043:6067	3473079	1	True				
ANR	3473089	AssignmentExpression	region -> allocated = 0		3473079	0		=			
ANR	3473090	PtrMemberAccess	region -> allocated		3473079	0					
ANR	3473091	Identifier	region		3473079	0					
ANR	3473092	Identifier	allocated		3473079	1					
ANR	3473093	PrimaryExpression	0		3473079	1					
ANR	3473094	ExpressionStatement	region -> beg = ( int * ) 0	232:2:6071:6102	3473079	2	True				
ANR	3473095	AssignmentExpression	region -> beg = ( int * ) 0		3473079	0		=			
ANR	3473096	PtrMemberAccess	region -> beg		3473079	0					
ANR	3473097	Identifier	region		3473079	0					
ANR	3473098	Identifier	beg		3473079	1					
ANR	3473099	CastExpression	( int * ) 0		3473079	1					
ANR	3473100	CastTarget	int *		3473079	0					
ANR	3473101	PrimaryExpression	0		3473079	1					
ANR	3473102	ExpressionStatement	region -> end = ( int * ) 0	233:2:6106:6137	3473079	3	True				
ANR	3473103	AssignmentExpression	region -> end = ( int * ) 0		3473079	0		=			
ANR	3473104	PtrMemberAccess	region -> end		3473079	0					
ANR	3473105	Identifier	region		3473079	0					
ANR	3473106	Identifier	end		3473079	1					
ANR	3473107	CastExpression	( int * ) 0		3473079	1					
ANR	3473108	CastTarget	int *		3473079	0					
ANR	3473109	PrimaryExpression	0		3473079	1					
ANR	3473110	ExpressionStatement	region -> history_root = ( OnigCaptureTreeNode * ) 0	234:2:6141:6188	3473079	4	True				
ANR	3473111	AssignmentExpression	region -> history_root = ( OnigCaptureTreeNode * ) 0		3473079	0		=			
ANR	3473112	PtrMemberAccess	region -> history_root		3473079	0					
ANR	3473113	Identifier	region		3473079	0					
ANR	3473114	Identifier	history_root		3473079	1					
ANR	3473115	CastExpression	( OnigCaptureTreeNode * ) 0		3473079	1					
ANR	3473116	CastTarget	OnigCaptureTreeNode *		3473079	0					
ANR	3473117	PrimaryExpression	0		3473079	1					
ANR	3473118	ReturnType	extern void		3473079	1					
ANR	3473119	Identifier	onig_region_init		3473079	2					
ANR	3473120	ParameterList	OnigRegion * region		3473079	3					
ANR	3473121	Parameter	OnigRegion * region	228:17:5991:6008	3473079	0	True				
ANR	3473122	ParameterType	OnigRegion *		3473079	0					
ANR	3473123	Identifier	region		3473079	1					
ANR	3473124	CFGEntryNode	ENTRY		3473079		True				
ANR	3473125	CFGExitNode	EXIT		3473079		True				
ANR	3473126	Symbol	region -> num_regs		3473079						
ANR	3473127	Symbol	region -> end		3473079						
ANR	3473128	Symbol	region -> history_root		3473079						
ANR	3473129	Symbol	* region		3473079						
ANR	3473130	Symbol	region -> allocated		3473079						
ANR	3473131	Symbol	region -> beg		3473079						
ANR	3473132	Symbol	region		3473079						
ANR	3473133	Function	onig_region_new	237:0:6193:6338							
ANR	3473134	FunctionDef	onig_region_new ()		3473133	0					
ANR	3473135	CompoundStatement		239:0:6234:6338	3473133	0					
ANR	3473136	IdentifierDeclStatement	OnigRegion * r ;	240:2:6238:6251	3473133	0	True				
ANR	3473137	IdentifierDecl	* r		3473133	0					
ANR	3473138	IdentifierDeclType	OnigRegion *		3473133	0					
ANR	3473139	Identifier	r		3473133	1					
ANR	3473140	ExpressionStatement	r = ( OnigRegion * ) xmalloc ( sizeof ( OnigRegion ) )	242:2:6256:6301	3473133	1	True				
ANR	3473141	AssignmentExpression	r = ( OnigRegion * ) xmalloc ( sizeof ( OnigRegion ) )		3473133	0		=			
ANR	3473142	Identifier	r		3473133	0					
ANR	3473143	CastExpression	( OnigRegion * ) xmalloc ( sizeof ( OnigRegion ) )		3473133	1					
ANR	3473144	CastTarget	OnigRegion *		3473133	0					
ANR	3473145	CallExpression	xmalloc ( sizeof ( OnigRegion ) )		3473133	1					
ANR	3473146	Callee	xmalloc		3473133	0					
ANR	3473147	Identifier	xmalloc		3473133	0					
ANR	3473148	ArgumentList	sizeof ( OnigRegion )		3473133	1					
ANR	3473149	Argument	sizeof ( OnigRegion )		3473133	0					
ANR	3473150	SizeofExpression	sizeof ( OnigRegion )		3473133	0					
ANR	3473151	Sizeof	sizeof		3473133	0					
ANR	3473152	SizeofOperand	OnigRegion		3473133	1					
ANR	3473153	ExpressionStatement	onig_region_init ( r )	243:2:6305:6324	3473133	2	True				
ANR	3473154	CallExpression	onig_region_init ( r )		3473133	0					
ANR	3473155	Callee	onig_region_init		3473133	0					
ANR	3473156	Identifier	onig_region_init		3473133	0					
ANR	3473157	ArgumentList	r		3473133	1					
ANR	3473158	Argument	r		3473133	0					
ANR	3473159	Identifier	r		3473133	0					
ANR	3473160	ReturnStatement	return r ;	244:2:6328:6336	3473133	3	True				
ANR	3473161	Identifier	r		3473133	0					
ANR	3473162	ReturnType	extern OnigRegion *		3473133	1					
ANR	3473163	Identifier	onig_region_new		3473133	2					
ANR	3473164	ParameterList			3473133	3					
ANR	3473165	CFGEntryNode	ENTRY		3473133		True				
ANR	3473166	CFGExitNode	EXIT		3473133		True				
ANR	3473167	Symbol	r		3473133						
ANR	3473168	Symbol	xmalloc		3473133						
ANR	3473169	Function	onig_region_free	247:0:6341:6630							
ANR	3473170	FunctionDef	"onig_region_free (OnigRegion * r , int free_self)"		3473169	0					
ANR	3473171	CompoundStatement		249:0:6400:6630	3473169	0					
ANR	3473172	IfStatement	if ( r )		3473169	0					
ANR	3473173	Condition	r	250:6:6408:6408	3473169	0	True				
ANR	3473174	Identifier	r		3473169	0					
ANR	3473175	CompoundStatement		2:9:10:10	3473169	1					
ANR	3473176	IfStatement	if ( r -> allocated > 0 )		3473169	0					
ANR	3473177	Condition	r -> allocated > 0	251:8:6421:6436	3473169	0	True				
ANR	3473178	RelationalExpression	r -> allocated > 0		3473169	0		>			
ANR	3473179	PtrMemberAccess	r -> allocated		3473169	0					
ANR	3473180	Identifier	r		3473169	0					
ANR	3473181	Identifier	allocated		3473169	1					
ANR	3473182	PrimaryExpression	0		3473169	1					
ANR	3473183	CompoundStatement		3:26:38:38	3473169	1					
ANR	3473184	IfStatement	if ( r -> beg )		3473169	0					
ANR	3473185	Condition	r -> beg	252:10:6451:6456	3473169	0	True				
ANR	3473186	PtrMemberAccess	r -> beg		3473169	0					
ANR	3473187	Identifier	r		3473169	0					
ANR	3473188	Identifier	beg		3473169	1					
ANR	3473189	ExpressionStatement	xfree ( r -> beg )	252:18:6459:6472	3473169	1	True				
ANR	3473190	CallExpression	xfree ( r -> beg )		3473169	0					
ANR	3473191	Callee	xfree		3473169	0					
ANR	3473192	Identifier	xfree		3473169	0					
ANR	3473193	ArgumentList	r -> beg		3473169	1					
ANR	3473194	Argument	r -> beg		3473169	0					
ANR	3473195	PtrMemberAccess	r -> beg		3473169	0					
ANR	3473196	Identifier	r		3473169	0					
ANR	3473197	Identifier	beg		3473169	1					
ANR	3473198	IfStatement	if ( r -> end )		3473169	1					
ANR	3473199	Condition	r -> end	253:10:6484:6489	3473169	0	True				
ANR	3473200	PtrMemberAccess	r -> end		3473169	0					
ANR	3473201	Identifier	r		3473169	0					
ANR	3473202	Identifier	end		3473169	1					
ANR	3473203	ExpressionStatement	xfree ( r -> end )	253:18:6492:6505	3473169	1	True				
ANR	3473204	CallExpression	xfree ( r -> end )		3473169	0					
ANR	3473205	Callee	xfree		3473169	0					
ANR	3473206	Identifier	xfree		3473169	0					
ANR	3473207	ArgumentList	r -> end		3473169	1					
ANR	3473208	Argument	r -> end		3473169	0					
ANR	3473209	PtrMemberAccess	r -> end		3473169	0					
ANR	3473210	Identifier	r		3473169	0					
ANR	3473211	Identifier	end		3473169	1					
ANR	3473212	ExpressionStatement	r -> allocated = 0	254:6:6513:6529	3473169	2	True				
ANR	3473213	AssignmentExpression	r -> allocated = 0		3473169	0		=			
ANR	3473214	PtrMemberAccess	r -> allocated		3473169	0					
ANR	3473215	Identifier	r		3473169	0					
ANR	3473216	Identifier	allocated		3473169	1					
ANR	3473217	PrimaryExpression	0		3473169	1					
ANR	3473218	ExpressionStatement	history_root_free ( r )	257:4:6568:6588	3473169	1	True				
ANR	3473219	CallExpression	history_root_free ( r )		3473169	0					
ANR	3473220	Callee	history_root_free		3473169	0					
ANR	3473221	Identifier	history_root_free		3473169	0					
ANR	3473222	ArgumentList	r		3473169	1					
ANR	3473223	Argument	r		3473169	0					
ANR	3473224	Identifier	r		3473169	0					
ANR	3473225	IfStatement	if ( free_self )		3473169	2					
ANR	3473226	Condition	free_self	259:8:6605:6613	3473169	0	True				
ANR	3473227	Identifier	free_self		3473169	0					
ANR	3473228	ExpressionStatement	xfree ( r )	259:19:6616:6624	3473169	1	True				
ANR	3473229	CallExpression	xfree ( r )		3473169	0					
ANR	3473230	Callee	xfree		3473169	0					
ANR	3473231	Identifier	xfree		3473169	0					
ANR	3473232	ArgumentList	r		3473169	1					
ANR	3473233	Argument	r		3473169	0					
ANR	3473234	Identifier	r		3473169	0					
ANR	3473235	ReturnType	extern void		3473169	1					
ANR	3473236	Identifier	onig_region_free		3473169	2					
ANR	3473237	ParameterList	"OnigRegion * r , int free_self"		3473169	3					
ANR	3473238	Parameter	OnigRegion * r	248:17:6370:6382	3473169	0	True				
ANR	3473239	ParameterType	OnigRegion *		3473169	0					
ANR	3473240	Identifier	r		3473169	1					
ANR	3473241	Parameter	int free_self	248:32:6385:6397	3473169	1	True				
ANR	3473242	ParameterType	int		3473169	0					
ANR	3473243	Identifier	free_self		3473169	1					
ANR	3473244	CFGEntryNode	ENTRY		3473169		True				
ANR	3473245	CFGExitNode	EXIT		3473169		True				
ANR	3473246	Symbol	r		3473169						
ANR	3473247	Symbol	r -> beg		3473169						
ANR	3473248	Symbol	free_self		3473169						
ANR	3473249	Symbol	r -> end		3473169						
ANR	3473250	Symbol	* r		3473169						
ANR	3473251	Symbol	r -> allocated		3473169						
ANR	3473252	Function	onig_region_copy	263:0:6633:7480							
ANR	3473253	FunctionDef	"onig_region_copy (OnigRegion * to , OnigRegion * from)"		3473252	0					
ANR	3473254	CompoundStatement		265:0:6696:7480	3473252	0					
ANR	3473255	Statement	define	266:1:6699:6704	3473252	0	True				
ANR	3473256	Statement	RREGC_SIZE	266:8:6706:6715	3473252	1	True				
ANR	3473257	Statement	(	266:21:6719:6719	3473252	2	True				
ANR	3473258	Statement	sizeof	266:22:6720:6725	3473252	3	True				
ANR	3473259	Statement	(	266:28:6726:6726	3473252	4	True				
ANR	3473260	Statement	int	266:29:6727:6729	3473252	5	True				
ANR	3473261	Statement	)	266:32:6730:6730	3473252	6	True				
ANR	3473262	Statement	*	266:34:6732:6732	3473252	7	True				
ANR	3473263	Statement	from	266:36:6734:6737	3473252	8	True				
ANR	3473264	Statement	->	266:40:6738:6739	3473252	9	True				
ANR	3473265	Statement	num_regs	266:42:6740:6747	3473252	10	True				
ANR	3473266	Statement	)	266:50:6748:6748	3473252	11	True				
ANR	3473267	IdentifierDeclStatement	int i ;	267:2:6752:6757	3473252	12	True				
ANR	3473268	IdentifierDecl	i		3473252	0					
ANR	3473269	IdentifierDeclType	int		3473252	0					
ANR	3473270	Identifier	i		3473252	1					
ANR	3473271	IfStatement	if ( to == from )		3473252	13					
ANR	3473272	Condition	to == from	269:6:6766:6775	3473252	0	True				
ANR	3473273	EqualityExpression	to == from		3473252	0		==			
ANR	3473274	Identifier	to		3473252	0					
ANR	3473275	Identifier	from		3473252	1					
ANR	3473276	ReturnStatement	return ;	269:18:6778:6784	3473252	1	True				
ANR	3473277	IfStatement	if ( to -> allocated == 0 )		3473252	14					
ANR	3473278	Condition	to -> allocated == 0	271:6:6793:6810	3473252	0	True				
ANR	3473279	EqualityExpression	to -> allocated == 0		3473252	0		==			
ANR	3473280	PtrMemberAccess	to -> allocated		3473252	0					
ANR	3473281	Identifier	to		3473252	0					
ANR	3473282	Identifier	allocated		3473252	1					
ANR	3473283	PrimaryExpression	0		3473252	1					
ANR	3473284	CompoundStatement		7:26:116:116	3473252	1					
ANR	3473285	IfStatement	if ( from -> num_regs > 0 )		3473252	0					
ANR	3473286	Condition	from -> num_regs > 0	272:8:6823:6840	3473252	0	True				
ANR	3473287	RelationalExpression	from -> num_regs > 0		3473252	0		>			
ANR	3473288	PtrMemberAccess	from -> num_regs		3473252	0					
ANR	3473289	Identifier	from		3473252	0					
ANR	3473290	Identifier	num_regs		3473252	1					
ANR	3473291	PrimaryExpression	0		3473252	1					
ANR	3473292	CompoundStatement		8:28:146:146	3473252	1					
ANR	3473293	ExpressionStatement	to -> beg = ( int * ) xmalloc ( RREGC_SIZE )	273:6:6851:6887	3473252	0	True				
ANR	3473294	AssignmentExpression	to -> beg = ( int * ) xmalloc ( RREGC_SIZE )		3473252	0		=			
ANR	3473295	PtrMemberAccess	to -> beg		3473252	0					
ANR	3473296	Identifier	to		3473252	0					
ANR	3473297	Identifier	beg		3473252	1					
ANR	3473298	CastExpression	( int * ) xmalloc ( RREGC_SIZE )		3473252	1					
ANR	3473299	CastTarget	int *		3473252	0					
ANR	3473300	CallExpression	xmalloc ( RREGC_SIZE )		3473252	1					
ANR	3473301	Callee	xmalloc		3473252	0					
ANR	3473302	Identifier	xmalloc		3473252	0					
ANR	3473303	ArgumentList	RREGC_SIZE		3473252	1					
ANR	3473304	Argument	RREGC_SIZE		3473252	0					
ANR	3473305	Identifier	RREGC_SIZE		3473252	0					
ANR	3473306	ExpressionStatement	to -> end = ( int * ) xmalloc ( RREGC_SIZE )	274:6:6895:6931	3473252	1	True				
ANR	3473307	AssignmentExpression	to -> end = ( int * ) xmalloc ( RREGC_SIZE )		3473252	0		=			
ANR	3473308	PtrMemberAccess	to -> end		3473252	0					
ANR	3473309	Identifier	to		3473252	0					
ANR	3473310	Identifier	end		3473252	1					
ANR	3473311	CastExpression	( int * ) xmalloc ( RREGC_SIZE )		3473252	1					
ANR	3473312	CastTarget	int *		3473252	0					
ANR	3473313	CallExpression	xmalloc ( RREGC_SIZE )		3473252	1					
ANR	3473314	Callee	xmalloc		3473252	0					
ANR	3473315	Identifier	xmalloc		3473252	0					
ANR	3473316	ArgumentList	RREGC_SIZE		3473252	1					
ANR	3473317	Argument	RREGC_SIZE		3473252	0					
ANR	3473318	Identifier	RREGC_SIZE		3473252	0					
ANR	3473319	ExpressionStatement	to -> allocated = from -> num_regs	275:6:6939:6969	3473252	2	True				
ANR	3473320	AssignmentExpression	to -> allocated = from -> num_regs		3473252	0		=			
ANR	3473321	PtrMemberAccess	to -> allocated		3473252	0					
ANR	3473322	Identifier	to		3473252	0					
ANR	3473323	Identifier	allocated		3473252	1					
ANR	3473324	PtrMemberAccess	from -> num_regs		3473252	1					
ANR	3473325	Identifier	from		3473252	0					
ANR	3473326	Identifier	num_regs		3473252	1					
ANR	3473327	ElseStatement	else		3473252	0					
ANR	3473328	IfStatement	if ( to -> allocated < from -> num_regs )		3473252	0					
ANR	3473329	Condition	to -> allocated < from -> num_regs	278:11:6992:7021	3473252	0	True				
ANR	3473330	RelationalExpression	to -> allocated < from -> num_regs		3473252	0		<			
ANR	3473331	PtrMemberAccess	to -> allocated		3473252	0					
ANR	3473332	Identifier	to		3473252	0					
ANR	3473333	Identifier	allocated		3473252	1					
ANR	3473334	PtrMemberAccess	from -> num_regs		3473252	1					
ANR	3473335	Identifier	from		3473252	0					
ANR	3473336	Identifier	num_regs		3473252	1					
ANR	3473337	CompoundStatement		14:43:327:327	3473252	1					
ANR	3473338	ExpressionStatement	"to -> beg = ( int * ) xrealloc ( to -> beg , RREGC_SIZE )"	279:4:7030:7076	3473252	0	True				
ANR	3473339	AssignmentExpression	"to -> beg = ( int * ) xrealloc ( to -> beg , RREGC_SIZE )"		3473252	0		=			
ANR	3473340	PtrMemberAccess	to -> beg		3473252	0					
ANR	3473341	Identifier	to		3473252	0					
ANR	3473342	Identifier	beg		3473252	1					
ANR	3473343	CastExpression	"( int * ) xrealloc ( to -> beg , RREGC_SIZE )"		3473252	1					
ANR	3473344	CastTarget	int *		3473252	0					
ANR	3473345	CallExpression	"xrealloc ( to -> beg , RREGC_SIZE )"		3473252	1					
ANR	3473346	Callee	xrealloc		3473252	0					
ANR	3473347	Identifier	xrealloc		3473252	0					
ANR	3473348	ArgumentList	to -> beg		3473252	1					
ANR	3473349	Argument	to -> beg		3473252	0					
ANR	3473350	PtrMemberAccess	to -> beg		3473252	0					
ANR	3473351	Identifier	to		3473252	0					
ANR	3473352	Identifier	beg		3473252	1					
ANR	3473353	Argument	RREGC_SIZE		3473252	1					
ANR	3473354	Identifier	RREGC_SIZE		3473252	0					
ANR	3473355	ExpressionStatement	"to -> end = ( int * ) xrealloc ( to -> end , RREGC_SIZE )"	280:4:7082:7128	3473252	1	True				
ANR	3473356	AssignmentExpression	"to -> end = ( int * ) xrealloc ( to -> end , RREGC_SIZE )"		3473252	0		=			
ANR	3473357	PtrMemberAccess	to -> end		3473252	0					
ANR	3473358	Identifier	to		3473252	0					
ANR	3473359	Identifier	end		3473252	1					
ANR	3473360	CastExpression	"( int * ) xrealloc ( to -> end , RREGC_SIZE )"		3473252	1					
ANR	3473361	CastTarget	int *		3473252	0					
ANR	3473362	CallExpression	"xrealloc ( to -> end , RREGC_SIZE )"		3473252	1					
ANR	3473363	Callee	xrealloc		3473252	0					
ANR	3473364	Identifier	xrealloc		3473252	0					
ANR	3473365	ArgumentList	to -> end		3473252	1					
ANR	3473366	Argument	to -> end		3473252	0					
ANR	3473367	PtrMemberAccess	to -> end		3473252	0					
ANR	3473368	Identifier	to		3473252	0					
ANR	3473369	Identifier	end		3473252	1					
ANR	3473370	Argument	RREGC_SIZE		3473252	1					
ANR	3473371	Identifier	RREGC_SIZE		3473252	0					
ANR	3473372	ExpressionStatement	to -> allocated = from -> num_regs	281:4:7134:7164	3473252	2	True				
ANR	3473373	AssignmentExpression	to -> allocated = from -> num_regs		3473252	0		=			
ANR	3473374	PtrMemberAccess	to -> allocated		3473252	0					
ANR	3473375	Identifier	to		3473252	0					
ANR	3473376	Identifier	allocated		3473252	1					
ANR	3473377	PtrMemberAccess	from -> num_regs		3473252	1					
ANR	3473378	Identifier	from		3473252	0					
ANR	3473379	Identifier	num_regs		3473252	1					
ANR	3473380	ForStatement	for ( i = 0 ; i < from -> num_regs ; i ++ )		3473252	15					
ANR	3473381	ForInit	i = 0 ;	284:7:7178:7183	3473252	0	True				
ANR	3473382	AssignmentExpression	i = 0		3473252	0		=			
ANR	3473383	Identifier	i		3473252	0					
ANR	3473384	PrimaryExpression	0		3473252	1					
ANR	3473385	Condition	i < from -> num_regs	284:14:7185:7202	3473252	1	True				
ANR	3473386	RelationalExpression	i < from -> num_regs		3473252	0		<			
ANR	3473387	Identifier	i		3473252	0					
ANR	3473388	PtrMemberAccess	from -> num_regs		3473252	1					
ANR	3473389	Identifier	from		3473252	0					
ANR	3473390	Identifier	num_regs		3473252	1					
ANR	3473391	PostIncDecOperationExpression	i ++	284:34:7205:7207	3473252	2	True				
ANR	3473392	Identifier	i		3473252	0					
ANR	3473393	IncDec	++		3473252	1					
ANR	3473394	CompoundStatement		20:39:513:513	3473252	3					
ANR	3473395	ExpressionStatement	to -> beg [ i ] = from -> beg [ i ]	285:4:7216:7241	3473252	0	True				
ANR	3473396	AssignmentExpression	to -> beg [ i ] = from -> beg [ i ]		3473252	0		=			
ANR	3473397	ArrayIndexing	to -> beg [ i ]		3473252	0					
ANR	3473398	PtrMemberAccess	to -> beg		3473252	0					
ANR	3473399	Identifier	to		3473252	0					
ANR	3473400	Identifier	beg		3473252	1					
ANR	3473401	Identifier	i		3473252	1					
ANR	3473402	ArrayIndexing	from -> beg [ i ]		3473252	1					
ANR	3473403	PtrMemberAccess	from -> beg		3473252	0					
ANR	3473404	Identifier	from		3473252	0					
ANR	3473405	Identifier	beg		3473252	1					
ANR	3473406	Identifier	i		3473252	1					
ANR	3473407	ExpressionStatement	to -> end [ i ] = from -> end [ i ]	286:4:7247:7272	3473252	1	True				
ANR	3473408	AssignmentExpression	to -> end [ i ] = from -> end [ i ]		3473252	0		=			
ANR	3473409	ArrayIndexing	to -> end [ i ]		3473252	0					
ANR	3473410	PtrMemberAccess	to -> end		3473252	0					
ANR	3473411	Identifier	to		3473252	0					
ANR	3473412	Identifier	end		3473252	1					
ANR	3473413	Identifier	i		3473252	1					
ANR	3473414	ArrayIndexing	from -> end [ i ]		3473252	1					
ANR	3473415	PtrMemberAccess	from -> end		3473252	0					
ANR	3473416	Identifier	from		3473252	0					
ANR	3473417	Identifier	end		3473252	1					
ANR	3473418	Identifier	i		3473252	1					
ANR	3473419	ExpressionStatement	to -> num_regs = from -> num_regs	288:2:7280:7309	3473252	16	True				
ANR	3473420	AssignmentExpression	to -> num_regs = from -> num_regs		3473252	0		=			
ANR	3473421	PtrMemberAccess	to -> num_regs		3473252	0					
ANR	3473422	Identifier	to		3473252	0					
ANR	3473423	Identifier	num_regs		3473252	1					
ANR	3473424	PtrMemberAccess	from -> num_regs		3473252	1					
ANR	3473425	Identifier	from		3473252	0					
ANR	3473426	Identifier	num_regs		3473252	1					
ANR	3473427	ExpressionStatement	history_root_free ( to )	291:2:7341:7362	3473252	17	True				
ANR	3473428	CallExpression	history_root_free ( to )		3473252	0					
ANR	3473429	Callee	history_root_free		3473252	0					
ANR	3473430	Identifier	history_root_free		3473252	0					
ANR	3473431	ArgumentList	to		3473252	1					
ANR	3473432	Argument	to		3473252	0					
ANR	3473433	Identifier	to		3473252	0					
ANR	3473434	IfStatement	if ( IS_NOT_NULL ( from -> history_root ) )		3473252	18					
ANR	3473435	Condition	IS_NOT_NULL ( from -> history_root )	293:6:7371:7401	3473252	0	True				
ANR	3473436	CallExpression	IS_NOT_NULL ( from -> history_root )		3473252	0					
ANR	3473437	Callee	IS_NOT_NULL		3473252	0					
ANR	3473438	Identifier	IS_NOT_NULL		3473252	0					
ANR	3473439	ArgumentList	from -> history_root		3473252	1					
ANR	3473440	Argument	from -> history_root		3473252	0					
ANR	3473441	PtrMemberAccess	from -> history_root		3473252	0					
ANR	3473442	Identifier	from		3473252	0					
ANR	3473443	Identifier	history_root		3473252	1					
ANR	3473444	CompoundStatement		29:39:707:707	3473252	1					
ANR	3473445	ExpressionStatement	to -> history_root = history_tree_clone ( from -> history_root )	294:4:7410:7467	3473252	0	True				
ANR	3473446	AssignmentExpression	to -> history_root = history_tree_clone ( from -> history_root )		3473252	0		=			
ANR	3473447	PtrMemberAccess	to -> history_root		3473252	0					
ANR	3473448	Identifier	to		3473252	0					
ANR	3473449	Identifier	history_root		3473252	1					
ANR	3473450	CallExpression	history_tree_clone ( from -> history_root )		3473252	1					
ANR	3473451	Callee	history_tree_clone		3473252	0					
ANR	3473452	Identifier	history_tree_clone		3473252	0					
ANR	3473453	ArgumentList	from -> history_root		3473252	1					
ANR	3473454	Argument	from -> history_root		3473252	0					
ANR	3473455	PtrMemberAccess	from -> history_root		3473252	0					
ANR	3473456	Identifier	from		3473252	0					
ANR	3473457	Identifier	history_root		3473252	1					
ANR	3473458	ReturnType	extern void		3473252	1					
ANR	3473459	Identifier	onig_region_copy		3473252	2					
ANR	3473460	ParameterList	"OnigRegion * to , OnigRegion * from"		3473252	3					
ANR	3473461	Parameter	OnigRegion * to	264:17:6662:6675	3473252	0	True				
ANR	3473462	ParameterType	OnigRegion *		3473252	0					
ANR	3473463	Identifier	to		3473252	1					
ANR	3473464	Parameter	OnigRegion * from	264:33:6678:6693	3473252	1	True				
ANR	3473465	ParameterType	OnigRegion *		3473252	0					
ANR	3473466	Identifier	from		3473252	1					
ANR	3473467	CFGEntryNode	ENTRY		3473252		True				
ANR	3473468	CFGExitNode	EXIT		3473252		True				
ANR	3473469	Symbol	to -> end		3473252						
ANR	3473470	Symbol	* * from		3473252						
ANR	3473471	Symbol	IS_NOT_NULL		3473252						
ANR	3473472	Symbol	to -> allocated		3473252						
ANR	3473473	Symbol	* to -> beg		3473252						
ANR	3473474	Symbol	from -> end		3473252						
ANR	3473475	Symbol	* from -> beg		3473252						
ANR	3473476	Symbol	xmalloc		3473252						
ANR	3473477	Symbol	* to -> end		3473252						
ANR	3473478	Symbol	from		3473252						
ANR	3473479	Symbol	to -> num_regs		3473252						
ANR	3473480	Symbol	xrealloc		3473252						
ANR	3473481	Symbol	from -> num_regs		3473252						
ANR	3473482	Symbol	from -> beg		3473252						
ANR	3473483	Symbol	* to		3473252						
ANR	3473484	Symbol	* * to		3473252						
ANR	3473485	Symbol	to -> history_root		3473252						
ANR	3473486	Symbol	from -> history_root		3473252						
ANR	3473487	Symbol	i		3473252						
ANR	3473488	Symbol	RREGC_SIZE		3473252						
ANR	3473489	Symbol	history_tree_clone		3473252						
ANR	3473490	Symbol	* from -> end		3473252						
ANR	3473491	Symbol	* i		3473252						
ANR	3473492	Symbol	to -> beg		3473252						
ANR	3473493	Symbol	to		3473252						
ANR	3473494	Symbol	* from		3473252						
ANR	3473495	DeclStmt									
ANR	3473496	Decl							unsigned int	unsigned int	size
ANR	3473497	DeclStmt									
ANR	3473498	Decl							unsigned int	unsigned int	MatchStackLimitSize
ANR	3473499	Function	onig_get_match_stack_limit_size	414:7:11329:11412							
ANR	3473500	FunctionDef	onig_get_match_stack_limit_size ()		3473499	0					
ANR	3473501	CompoundStatement		416:0:11380:11412	3473499	0					
ANR	3473502	ReturnStatement	return MatchStackLimitSize ;	417:2:11384:11410	3473499	0	True				
ANR	3473503	Identifier	MatchStackLimitSize		3473499	0					
ANR	3473504	ReturnType	unsigned int		3473499	1					
ANR	3473505	Identifier	onig_get_match_stack_limit_size		3473499	2					
ANR	3473506	ParameterList			3473499	3					
ANR	3473507	CFGEntryNode	ENTRY		3473499		True				
ANR	3473508	CFGExitNode	EXIT		3473499		True				
ANR	3473509	Symbol	MatchStackLimitSize		3473499						
ANR	3473510	Function	onig_set_match_stack_limit_size	420:0:11415:11521							
ANR	3473511	FunctionDef	onig_set_match_stack_limit_size (unsigned int size)		3473510	0					
ANR	3473512	CompoundStatement		422:0:11477:11521	3473510	0					
ANR	3473513	ExpressionStatement	MatchStackLimitSize = size	423:2:11481:11507	3473510	0	True				
ANR	3473514	AssignmentExpression	MatchStackLimitSize = size		3473510	0		=			
ANR	3473515	Identifier	MatchStackLimitSize		3473510	0					
ANR	3473516	Identifier	size		3473510	1					
ANR	3473517	ReturnStatement	return 0 ;	424:2:11511:11519	3473510	1	True				
ANR	3473518	PrimaryExpression	0		3473510	0					
ANR	3473519	ReturnType	extern int		3473510	1					
ANR	3473520	Identifier	onig_set_match_stack_limit_size		3473510	2					
ANR	3473521	ParameterList	unsigned int size		3473510	3					
ANR	3473522	Parameter	unsigned int size	421:32:11458:11474	3473510	0	True				
ANR	3473523	ParameterType	unsigned int		3473510	0					
ANR	3473524	Identifier	size		3473510	1					
ANR	3473525	CFGEntryNode	ENTRY		3473510		True				
ANR	3473526	CFGExitNode	EXIT		3473510		True				
ANR	3473527	Symbol	size		3473510						
ANR	3473528	Symbol	MatchStackLimitSize		3473510						
ANR	3473529	Function	stack_double	427:0:11524:12621							
ANR	3473530	FunctionDef	"stack_double (OnigStackType * * arg_stk_base , OnigStackType * * arg_stk_end , OnigStackType * * arg_stk , OnigStackType * stk_alloc , OnigMatchArg * msa)"		3473529	0					
ANR	3473531	CompoundStatement		430:0:11683:12621	3473529	0					
ANR	3473532	IdentifierDeclStatement	unsigned int n ;	431:2:11687:11701	3473529	0	True				
ANR	3473533	IdentifierDecl	n		3473529	0					
ANR	3473534	IdentifierDeclType	unsigned int		3473529	0					
ANR	3473535	Identifier	n		3473529	1					
ANR	3473536	IdentifierDeclStatement	"OnigStackType * x , * stk_base , * stk_end , * stk ;"	432:2:11705:11748	3473529	1	True				
ANR	3473537	IdentifierDecl	* x		3473529	0					
ANR	3473538	IdentifierDeclType	OnigStackType *		3473529	0					
ANR	3473539	Identifier	x		3473529	1					
ANR	3473540	IdentifierDecl	* stk_base		3473529	1					
ANR	3473541	IdentifierDeclType	OnigStackType *		3473529	0					
ANR	3473542	Identifier	stk_base		3473529	1					
ANR	3473543	IdentifierDecl	* stk_end		3473529	2					
ANR	3473544	IdentifierDeclType	OnigStackType *		3473529	0					
ANR	3473545	Identifier	stk_end		3473529	1					
ANR	3473546	IdentifierDecl	* stk		3473529	3					
ANR	3473547	IdentifierDeclType	OnigStackType *		3473529	0					
ANR	3473548	Identifier	stk		3473529	1					
ANR	3473549	ExpressionStatement	stk_base = * arg_stk_base	434:2:11753:11777	3473529	2	True				
ANR	3473550	AssignmentExpression	stk_base = * arg_stk_base		3473529	0		=			
ANR	3473551	Identifier	stk_base		3473529	0					
ANR	3473552	UnaryOperationExpression	* arg_stk_base		3473529	1					
ANR	3473553	UnaryOperator	*		3473529	0					
ANR	3473554	Identifier	arg_stk_base		3473529	1					
ANR	3473555	ExpressionStatement	stk_end = * arg_stk_end	435:2:11781:11804	3473529	3	True				
ANR	3473556	AssignmentExpression	stk_end = * arg_stk_end		3473529	0		=			
ANR	3473557	Identifier	stk_end		3473529	0					
ANR	3473558	UnaryOperationExpression	* arg_stk_end		3473529	1					
ANR	3473559	UnaryOperator	*		3473529	0					
ANR	3473560	Identifier	arg_stk_end		3473529	1					
ANR	3473561	ExpressionStatement	stk = * arg_stk	436:2:11808:11827	3473529	4	True				
ANR	3473562	AssignmentExpression	stk = * arg_stk		3473529	0		=			
ANR	3473563	Identifier	stk		3473529	0					
ANR	3473564	UnaryOperationExpression	* arg_stk		3473529	1					
ANR	3473565	UnaryOperator	*		3473529	0					
ANR	3473566	Identifier	arg_stk		3473529	1					
ANR	3473567	ExpressionStatement	n = stk_end - stk_base	438:2:11832:11854	3473529	5	True				
ANR	3473568	AssignmentExpression	n = stk_end - stk_base		3473529	0		=			
ANR	3473569	Identifier	n		3473529	0					
ANR	3473570	AdditiveExpression	stk_end - stk_base		3473529	1		-			
ANR	3473571	Identifier	stk_end		3473529	0					
ANR	3473572	Identifier	stk_base		3473529	1					
ANR	3473573	IfStatement	if ( stk_base == stk_alloc && IS_NULL ( msa -> stack_p ) )		3473529	6					
ANR	3473574	Condition	stk_base == stk_alloc && IS_NULL ( msa -> stack_p )	439:6:11862:11907	3473529	0	True				
ANR	3473575	AndExpression	stk_base == stk_alloc && IS_NULL ( msa -> stack_p )		3473529	0		&&			
ANR	3473576	EqualityExpression	stk_base == stk_alloc		3473529	0		==			
ANR	3473577	Identifier	stk_base		3473529	0					
ANR	3473578	Identifier	stk_alloc		3473529	1					
ANR	3473579	CallExpression	IS_NULL ( msa -> stack_p )		3473529	1					
ANR	3473580	Callee	IS_NULL		3473529	0					
ANR	3473581	Identifier	IS_NULL		3473529	0					
ANR	3473582	ArgumentList	msa -> stack_p		3473529	1					
ANR	3473583	Argument	msa -> stack_p		3473529	0					
ANR	3473584	PtrMemberAccess	msa -> stack_p		3473529	0					
ANR	3473585	Identifier	msa		3473529	0					
ANR	3473586	Identifier	stack_p		3473529	1					
ANR	3473587	CompoundStatement		10:54:226:226	3473529	1					
ANR	3473588	ExpressionStatement	x = ( OnigStackType * ) xmalloc ( sizeof ( OnigStackType ) * n * 2 )	440:4:11916:11975	3473529	0	True				
ANR	3473589	AssignmentExpression	x = ( OnigStackType * ) xmalloc ( sizeof ( OnigStackType ) * n * 2 )		3473529	0		=			
ANR	3473590	Identifier	x		3473529	0					
ANR	3473591	CastExpression	( OnigStackType * ) xmalloc ( sizeof ( OnigStackType ) * n * 2 )		3473529	1					
ANR	3473592	CastTarget	OnigStackType *		3473529	0					
ANR	3473593	CallExpression	xmalloc ( sizeof ( OnigStackType ) * n * 2 )		3473529	1					
ANR	3473594	Callee	xmalloc		3473529	0					
ANR	3473595	Identifier	xmalloc		3473529	0					
ANR	3473596	ArgumentList	sizeof ( OnigStackType ) * n * 2		3473529	1					
ANR	3473597	Argument	sizeof ( OnigStackType ) * n * 2		3473529	0					
ANR	3473598	MultiplicativeExpression	sizeof ( OnigStackType ) * n * 2		3473529	0		*			
ANR	3473599	SizeofExpression	sizeof ( OnigStackType )		3473529	0					
ANR	3473600	Sizeof	sizeof		3473529	0					
ANR	3473601	SizeofOperand	OnigStackType		3473529	1					
ANR	3473602	MultiplicativeExpression	n * 2		3473529	1		*			
ANR	3473603	Identifier	n		3473529	0					
ANR	3473604	PrimaryExpression	2		3473529	1					
ANR	3473605	IfStatement	if ( IS_NULL ( x ) )		3473529	1					
ANR	3473606	Condition	IS_NULL ( x )	441:8:11985:11994	3473529	0	True				
ANR	3473607	CallExpression	IS_NULL ( x )		3473529	0					
ANR	3473608	Callee	IS_NULL		3473529	0					
ANR	3473609	Identifier	IS_NULL		3473529	0					
ANR	3473610	ArgumentList	x		3473529	1					
ANR	3473611	Argument	x		3473529	0					
ANR	3473612	Identifier	x		3473529	0					
ANR	3473613	CompoundStatement		12:20:313:313	3473529	1					
ANR	3473614	ExpressionStatement	STACK_SAVE	442:6:12005:12015	3473529	0	True				
ANR	3473615	Identifier	STACK_SAVE		3473529	0					
ANR	3473616	ReturnStatement	return ONIGERR_MEMORY ;	443:6:12023:12044	3473529	1	True				
ANR	3473617	Identifier	ONIGERR_MEMORY		3473529	0					
ANR	3473618	ExpressionStatement	"xmemcpy ( x , stk_base , n * sizeof ( OnigStackType ) )"	445:4:12056:12103	3473529	2	True				
ANR	3473619	CallExpression	"xmemcpy ( x , stk_base , n * sizeof ( OnigStackType ) )"		3473529	0					
ANR	3473620	Callee	xmemcpy		3473529	0					
ANR	3473621	Identifier	xmemcpy		3473529	0					
ANR	3473622	ArgumentList	x		3473529	1					
ANR	3473623	Argument	x		3473529	0					
ANR	3473624	Identifier	x		3473529	0					
ANR	3473625	Argument	stk_base		3473529	1					
ANR	3473626	Identifier	stk_base		3473529	0					
ANR	3473627	Argument	n * sizeof ( OnigStackType )		3473529	2					
ANR	3473628	MultiplicativeExpression	n * sizeof ( OnigStackType )		3473529	0		*			
ANR	3473629	Identifier	n		3473529	0					
ANR	3473630	SizeofExpression	sizeof ( OnigStackType )		3473529	1					
ANR	3473631	Sizeof	sizeof		3473529	0					
ANR	3473632	SizeofOperand	OnigStackType		3473529	1					
ANR	3473633	ExpressionStatement	n *= 2	446:4:12109:12115	3473529	3	True				
ANR	3473634	AssignmentExpression	n *= 2		3473529	0		*=			
ANR	3473635	Identifier	n		3473529	0					
ANR	3473636	PrimaryExpression	2		3473529	1					
ANR	3473637	ElseStatement	else		3473529	0					
ANR	3473638	CompoundStatement		19:7:444:444	3473529	0					
ANR	3473639	ExpressionStatement	n *= 2	449:4:12134:12140	3473529	0	True				
ANR	3473640	AssignmentExpression	n *= 2		3473529	0		*=			
ANR	3473641	Identifier	n		3473529	0					
ANR	3473642	PrimaryExpression	2		3473529	1					
ANR	3473643	IfStatement	if ( MatchStackLimitSize != 0 && n > MatchStackLimitSize )		3473529	1					
ANR	3473644	Condition	MatchStackLimitSize != 0 && n > MatchStackLimitSize	450:8:12150:12200	3473529	0	True				
ANR	3473645	AndExpression	MatchStackLimitSize != 0 && n > MatchStackLimitSize		3473529	0		&&			
ANR	3473646	EqualityExpression	MatchStackLimitSize != 0		3473529	0		!=			
ANR	3473647	Identifier	MatchStackLimitSize		3473529	0					
ANR	3473648	PrimaryExpression	0		3473529	1					
ANR	3473649	RelationalExpression	n > MatchStackLimitSize		3473529	1		>			
ANR	3473650	Identifier	n		3473529	0					
ANR	3473651	Identifier	MatchStackLimitSize		3473529	1					
ANR	3473652	CompoundStatement		21:61:519:519	3473529	1					
ANR	3473653	IfStatement	if ( ( unsigned int ) ( stk_end - stk_base ) == MatchStackLimitSize )		3473529	0					
ANR	3473654	Condition	( unsigned int ) ( stk_end - stk_base ) == MatchStackLimitSize	451:10:12215:12272	3473529	0	True				
ANR	3473655	EqualityExpression	( unsigned int ) ( stk_end - stk_base ) == MatchStackLimitSize		3473529	0		==			
ANR	3473656	CastExpression	( unsigned int ) ( stk_end - stk_base )		3473529	0					
ANR	3473657	CastTarget	unsigned int		3473529	0					
ANR	3473658	AdditiveExpression	stk_end - stk_base		3473529	1		-			
ANR	3473659	Identifier	stk_end		3473529	0					
ANR	3473660	Identifier	stk_base		3473529	1					
ANR	3473661	Identifier	MatchStackLimitSize		3473529	1					
ANR	3473662	ReturnStatement	return ONIGERR_MATCH_STACK_LIMIT_OVER ;	452:8:12283:12320	3473529	1	True				
ANR	3473663	Identifier	ONIGERR_MATCH_STACK_LIMIT_OVER		3473529	0					
ANR	3473664	ElseStatement	else		3473529	0					
ANR	3473665	ExpressionStatement	n = MatchStackLimitSize	454:8:12341:12364	3473529	0	True				
ANR	3473666	AssignmentExpression	n = MatchStackLimitSize		3473529	0		=			
ANR	3473667	Identifier	n		3473529	0					
ANR	3473668	Identifier	MatchStackLimitSize		3473529	1					
ANR	3473669	ExpressionStatement	"x = ( OnigStackType * ) xrealloc ( stk_base , sizeof ( OnigStackType ) * n )"	456:4:12376:12442	3473529	2	True				
ANR	3473670	AssignmentExpression	"x = ( OnigStackType * ) xrealloc ( stk_base , sizeof ( OnigStackType ) * n )"		3473529	0		=			
ANR	3473671	Identifier	x		3473529	0					
ANR	3473672	CastExpression	"( OnigStackType * ) xrealloc ( stk_base , sizeof ( OnigStackType ) * n )"		3473529	1					
ANR	3473673	CastTarget	OnigStackType *		3473529	0					
ANR	3473674	CallExpression	"xrealloc ( stk_base , sizeof ( OnigStackType ) * n )"		3473529	1					
ANR	3473675	Callee	xrealloc		3473529	0					
ANR	3473676	Identifier	xrealloc		3473529	0					
ANR	3473677	ArgumentList	stk_base		3473529	1					
ANR	3473678	Argument	stk_base		3473529	0					
ANR	3473679	Identifier	stk_base		3473529	0					
ANR	3473680	Argument	sizeof ( OnigStackType ) * n		3473529	1					
ANR	3473681	MultiplicativeExpression	sizeof ( OnigStackType ) * n		3473529	0		*			
ANR	3473682	SizeofExpression	sizeof ( OnigStackType )		3473529	0					
ANR	3473683	Sizeof	sizeof		3473529	0					
ANR	3473684	SizeofOperand	OnigStackType		3473529	1					
ANR	3473685	Identifier	n		3473529	1					
ANR	3473686	IfStatement	if ( IS_NULL ( x ) )		3473529	3					
ANR	3473687	Condition	IS_NULL ( x )	457:8:12452:12461	3473529	0	True				
ANR	3473688	CallExpression	IS_NULL ( x )		3473529	0					
ANR	3473689	Callee	IS_NULL		3473529	0					
ANR	3473690	Identifier	IS_NULL		3473529	0					
ANR	3473691	ArgumentList	x		3473529	1					
ANR	3473692	Argument	x		3473529	0					
ANR	3473693	Identifier	x		3473529	0					
ANR	3473694	CompoundStatement		28:20:780:780	3473529	1					
ANR	3473695	ExpressionStatement	STACK_SAVE	458:6:12472:12482	3473529	0	True				
ANR	3473696	Identifier	STACK_SAVE		3473529	0					
ANR	3473697	ReturnStatement	return ONIGERR_MEMORY ;	459:6:12490:12511	3473529	1	True				
ANR	3473698	Identifier	ONIGERR_MEMORY		3473529	0					
ANR	3473699	ExpressionStatement	* arg_stk = x + ( stk - stk_base )	462:2:12525:12561	3473529	7	True				
ANR	3473700	AssignmentExpression	* arg_stk = x + ( stk - stk_base )		3473529	0		=			
ANR	3473701	UnaryOperationExpression	* arg_stk		3473529	0					
ANR	3473702	UnaryOperator	*		3473529	0					
ANR	3473703	Identifier	arg_stk		3473529	1					
ANR	3473704	AdditiveExpression	x + ( stk - stk_base )		3473529	1		+			
ANR	3473705	Identifier	x		3473529	0					
ANR	3473706	AdditiveExpression	stk - stk_base		3473529	1		-			
ANR	3473707	Identifier	stk		3473529	0					
ANR	3473708	Identifier	stk_base		3473529	1					
ANR	3473709	ExpressionStatement	* arg_stk_base = x	463:2:12565:12582	3473529	8	True				
ANR	3473710	AssignmentExpression	* arg_stk_base = x		3473529	0		=			
ANR	3473711	UnaryOperationExpression	* arg_stk_base		3473529	0					
ANR	3473712	UnaryOperator	*		3473529	0					
ANR	3473713	Identifier	arg_stk_base		3473529	1					
ANR	3473714	Identifier	x		3473529	1					
ANR	3473715	ExpressionStatement	* arg_stk_end = x + n	464:2:12586:12607	3473529	9	True				
ANR	3473716	AssignmentExpression	* arg_stk_end = x + n		3473529	0		=			
ANR	3473717	UnaryOperationExpression	* arg_stk_end		3473529	0					
ANR	3473718	UnaryOperator	*		3473529	0					
ANR	3473719	Identifier	arg_stk_end		3473529	1					
ANR	3473720	AdditiveExpression	x + n		3473529	1		+			
ANR	3473721	Identifier	x		3473529	0					
ANR	3473722	Identifier	n		3473529	1					
ANR	3473723	ReturnStatement	return 0 ;	465:2:12611:12619	3473529	10	True				
ANR	3473724	PrimaryExpression	0		3473529	0					
ANR	3473725	ReturnType	static int		3473529	1					
ANR	3473726	Identifier	stack_double		3473529	2					
ANR	3473727	ParameterList	"OnigStackType * * arg_stk_base , OnigStackType * * arg_stk_end , OnigStackType * * arg_stk , OnigStackType * stk_alloc , OnigMatchArg * msa"		3473529	3					
ANR	3473728	Parameter	OnigStackType * * arg_stk_base	428:13:11548:11575	3473529	0	True				
ANR	3473729	ParameterType	OnigStackType * *		3473529	0					
ANR	3473730	Identifier	arg_stk_base		3473529	1					
ANR	3473731	Parameter	OnigStackType * * arg_stk_end	428:43:11578:11604	3473529	1	True				
ANR	3473732	ParameterType	OnigStackType * *		3473529	0					
ANR	3473733	Identifier	arg_stk_end		3473529	1					
ANR	3473734	Parameter	OnigStackType * * arg_stk	429:6:11613:11635	3473529	2	True				
ANR	3473735	ParameterType	OnigStackType * *		3473529	0					
ANR	3473736	Identifier	arg_stk		3473529	1					
ANR	3473737	Parameter	OnigStackType * stk_alloc	429:31:11638:11661	3473529	3	True				
ANR	3473738	ParameterType	OnigStackType *		3473529	0					
ANR	3473739	Identifier	stk_alloc		3473529	1					
ANR	3473740	Parameter	OnigMatchArg * msa	429:57:11664:11680	3473529	4	True				
ANR	3473741	ParameterType	OnigMatchArg *		3473529	0					
ANR	3473742	Identifier	msa		3473529	1					
ANR	3473743	CFGEntryNode	ENTRY		3473529		True				
ANR	3473744	CFGExitNode	EXIT		3473529		True				
ANR	3473745	Symbol	* msa		3473529						
ANR	3473746	Symbol	stk_alloc		3473529						
ANR	3473747	Symbol	ONIGERR_MEMORY		3473529						
ANR	3473748	Symbol	stk_end		3473529						
ANR	3473749	Symbol	stk		3473529						
ANR	3473750	Symbol	n		3473529						
ANR	3473751	Symbol	* arg_stk_end		3473529						
ANR	3473752	Symbol	* arg_stk_base		3473529						
ANR	3473753	Symbol	IS_NULL		3473529						
ANR	3473754	Symbol	xmalloc		3473529						
ANR	3473755	Symbol	ONIGERR_MATCH_STACK_LIMIT_OVER		3473529						
ANR	3473756	Symbol	* arg_stk		3473529						
ANR	3473757	Symbol	MatchStackLimitSize		3473529						
ANR	3473758	Symbol	x		3473529						
ANR	3473759	Symbol	msa -> stack_p		3473529						
ANR	3473760	Symbol	msa		3473529						
ANR	3473761	Symbol	arg_stk		3473529						
ANR	3473762	Symbol	xrealloc		3473529						
ANR	3473763	Symbol	arg_stk_base		3473529						
ANR	3473764	Symbol	arg_stk_end		3473529						
ANR	3473765	Symbol	stk_base		3473529						
ANR	3473766	DeclStmt									
ANR	3473767	Decl							int	int	r
ANR	3473768	DeclStmt									
ANR	3473769	Decl							int	int	x
ANR	3473770	DeclStmt									
ANR	3473771	Decl							int	int	x
ANR	3473772	DeclStmt									
ANR	3473773	Decl							int	int	level
ANR	3473774	DeclStmt									
ANR	3473775	Decl							int	int	level
ANR	3473776	DeclStmt									
ANR	3473777	Decl							OnigStackType	OnigStackType *	k
ANR	3473778	DeclStmt									
ANR	3473779	Decl							OnigStackType	OnigStackType *	k
ANR	3473780	DeclStmt									
ANR	3473781	Decl							int	int	level
ANR	3473782	DeclStmt									
ANR	3473783	Decl							OnigStackType	OnigStackType *	k
ANR	3473784	DeclStmt									
ANR	3473785	Decl							OnigStackType	OnigStackType *	k
ANR	3473786	DeclStmt									
ANR	3473787	Decl							UChar	UChar *	endp
ANR	3473788	DeclStmt									
ANR	3473789	Decl							int	int	level
ANR	3473790	DeclStmt									
ANR	3473791	Decl							OnigStackType	OnigStackType *	k
ANR	3473792	DeclStmt									
ANR	3473793	Decl							UChar	UChar *	endp
ANR	3473794	DeclStmt									
ANR	3473795	Decl							int	int	level
ANR	3473796	DeclStmt									
ANR	3473797	Decl							int	int	level
ANR	3473798	DeclStmt									
ANR	3473799	Decl							OnigStackType	OnigStackType *	k
ANR	3473800	Function	string_cmp_ic	976:0:26046:26696							
ANR	3473801	FunctionDef	"string_cmp_ic (OnigEncoding enc , int case_fold_flag , UChar * s1 , UChar * * ps2 , int mblen)"		3473800	0					
ANR	3473802	CompoundStatement		978:0:26148:26696	3473800	0					
ANR	3473803	IdentifierDeclStatement	UChar buf1 [ ONIGENC_MBC_CASE_FOLD_MAXLEN ] ;	979:2:26152:26192	3473800	0	True				
ANR	3473804	IdentifierDecl	buf1 [ ONIGENC_MBC_CASE_FOLD_MAXLEN ]		3473800	0					
ANR	3473805	IdentifierDeclType	UChar [ ONIGENC_MBC_CASE_FOLD_MAXLEN ]		3473800	0					
ANR	3473806	Identifier	buf1		3473800	1					
ANR	3473807	Identifier	ONIGENC_MBC_CASE_FOLD_MAXLEN		3473800	2					
ANR	3473808	IdentifierDeclStatement	UChar buf2 [ ONIGENC_MBC_CASE_FOLD_MAXLEN ] ;	980:2:26196:26236	3473800	1	True				
ANR	3473809	IdentifierDecl	buf2 [ ONIGENC_MBC_CASE_FOLD_MAXLEN ]		3473800	0					
ANR	3473810	IdentifierDeclType	UChar [ ONIGENC_MBC_CASE_FOLD_MAXLEN ]		3473800	0					
ANR	3473811	Identifier	buf2		3473800	1					
ANR	3473812	Identifier	ONIGENC_MBC_CASE_FOLD_MAXLEN		3473800	2					
ANR	3473813	IdentifierDeclStatement	"UChar * p1 , * p2 , * end1 , * s2 , * end2 ;"	981:2:26240:26273	3473800	2	True				
ANR	3473814	IdentifierDecl	* p1		3473800	0					
ANR	3473815	IdentifierDeclType	UChar *		3473800	0					
ANR	3473816	Identifier	p1		3473800	1					
ANR	3473817	IdentifierDecl	* p2		3473800	1					
ANR	3473818	IdentifierDeclType	UChar *		3473800	0					
ANR	3473819	Identifier	p2		3473800	1					
ANR	3473820	IdentifierDecl	* end1		3473800	2					
ANR	3473821	IdentifierDeclType	UChar *		3473800	0					
ANR	3473822	Identifier	end1		3473800	1					
ANR	3473823	IdentifierDecl	* s2		3473800	3					
ANR	3473824	IdentifierDeclType	UChar *		3473800	0					
ANR	3473825	Identifier	s2		3473800	1					
ANR	3473826	IdentifierDecl	* end2		3473800	4					
ANR	3473827	IdentifierDeclType	UChar *		3473800	0					
ANR	3473828	Identifier	end2		3473800	1					
ANR	3473829	IdentifierDeclStatement	"int len1 , len2 ;"	982:2:26277:26291	3473800	3	True				
ANR	3473830	IdentifierDecl	len1		3473800	0					
ANR	3473831	IdentifierDeclType	int		3473800	0					
ANR	3473832	Identifier	len1		3473800	1					
ANR	3473833	IdentifierDecl	len2		3473800	1					
ANR	3473834	IdentifierDeclType	int		3473800	0					
ANR	3473835	Identifier	len2		3473800	1					
ANR	3473836	ExpressionStatement	s2 = * ps2	984:2:26296:26307	3473800	4	True				
ANR	3473837	AssignmentExpression	s2 = * ps2		3473800	0		=			
ANR	3473838	Identifier	s2		3473800	0					
ANR	3473839	UnaryOperationExpression	* ps2		3473800	1					
ANR	3473840	UnaryOperator	*		3473800	0					
ANR	3473841	Identifier	ps2		3473800	1					
ANR	3473842	ExpressionStatement	end1 = s1 + mblen	985:2:26311:26328	3473800	5	True				
ANR	3473843	AssignmentExpression	end1 = s1 + mblen		3473800	0		=			
ANR	3473844	Identifier	end1		3473800	0					
ANR	3473845	AdditiveExpression	s1 + mblen		3473800	1		+			
ANR	3473846	Identifier	s1		3473800	0					
ANR	3473847	Identifier	mblen		3473800	1					
ANR	3473848	ExpressionStatement	end2 = s2 + mblen	986:2:26332:26349	3473800	6	True				
ANR	3473849	AssignmentExpression	end2 = s2 + mblen		3473800	0		=			
ANR	3473850	Identifier	end2		3473800	0					
ANR	3473851	AdditiveExpression	s2 + mblen		3473800	1		+			
ANR	3473852	Identifier	s2		3473800	0					
ANR	3473853	Identifier	mblen		3473800	1					
ANR	3473854	WhileStatement	while ( s1 < end1 )		3473800	7					
ANR	3473855	Condition	s1 < end1	987:9:26360:26368	3473800	0	True				
ANR	3473856	RelationalExpression	s1 < end1		3473800	0		<			
ANR	3473857	Identifier	s1		3473800	0					
ANR	3473858	Identifier	end1		3473800	1					
ANR	3473859	CompoundStatement		10:20:222:222	3473800	1					
ANR	3473860	ExpressionStatement	"len1 = ONIGENC_MBC_CASE_FOLD ( enc , case_fold_flag , & s1 , end1 , buf1 )"	988:4:26377:26443	3473800	0	True				
ANR	3473861	AssignmentExpression	"len1 = ONIGENC_MBC_CASE_FOLD ( enc , case_fold_flag , & s1 , end1 , buf1 )"		3473800	0		=			
ANR	3473862	Identifier	len1		3473800	0					
ANR	3473863	CallExpression	"ONIGENC_MBC_CASE_FOLD ( enc , case_fold_flag , & s1 , end1 , buf1 )"		3473800	1					
ANR	3473864	Callee	ONIGENC_MBC_CASE_FOLD		3473800	0					
ANR	3473865	Identifier	ONIGENC_MBC_CASE_FOLD		3473800	0					
ANR	3473866	ArgumentList	enc		3473800	1					
ANR	3473867	Argument	enc		3473800	0					
ANR	3473868	Identifier	enc		3473800	0					
ANR	3473869	Argument	case_fold_flag		3473800	1					
ANR	3473870	Identifier	case_fold_flag		3473800	0					
ANR	3473871	Argument	& s1		3473800	2					
ANR	3473872	UnaryOperationExpression	& s1		3473800	0					
ANR	3473873	UnaryOperator	&		3473800	0					
ANR	3473874	Identifier	s1		3473800	1					
ANR	3473875	Argument	end1		3473800	3					
ANR	3473876	Identifier	end1		3473800	0					
ANR	3473877	Argument	buf1		3473800	4					
ANR	3473878	Identifier	buf1		3473800	0					
ANR	3473879	ExpressionStatement	"len2 = ONIGENC_MBC_CASE_FOLD ( enc , case_fold_flag , & s2 , end2 , buf2 )"	989:4:26449:26515	3473800	1	True				
ANR	3473880	AssignmentExpression	"len2 = ONIGENC_MBC_CASE_FOLD ( enc , case_fold_flag , & s2 , end2 , buf2 )"		3473800	0		=			
ANR	3473881	Identifier	len2		3473800	0					
ANR	3473882	CallExpression	"ONIGENC_MBC_CASE_FOLD ( enc , case_fold_flag , & s2 , end2 , buf2 )"		3473800	1					
ANR	3473883	Callee	ONIGENC_MBC_CASE_FOLD		3473800	0					
ANR	3473884	Identifier	ONIGENC_MBC_CASE_FOLD		3473800	0					
ANR	3473885	ArgumentList	enc		3473800	1					
ANR	3473886	Argument	enc		3473800	0					
ANR	3473887	Identifier	enc		3473800	0					
ANR	3473888	Argument	case_fold_flag		3473800	1					
ANR	3473889	Identifier	case_fold_flag		3473800	0					
ANR	3473890	Argument	& s2		3473800	2					
ANR	3473891	UnaryOperationExpression	& s2		3473800	0					
ANR	3473892	UnaryOperator	&		3473800	0					
ANR	3473893	Identifier	s2		3473800	1					
ANR	3473894	Argument	end2		3473800	3					
ANR	3473895	Identifier	end2		3473800	0					
ANR	3473896	Argument	buf2		3473800	4					
ANR	3473897	Identifier	buf2		3473800	0					
ANR	3473898	IfStatement	if ( len1 != len2 )		3473800	2					
ANR	3473899	Condition	len1 != len2	990:8:26525:26536	3473800	0	True				
ANR	3473900	EqualityExpression	len1 != len2		3473800	0		!=			
ANR	3473901	Identifier	len1		3473800	0					
ANR	3473902	Identifier	len2		3473800	1					
ANR	3473903	ReturnStatement	return 0 ;	990:22:26539:26547	3473800	1	True				
ANR	3473904	PrimaryExpression	0		3473800	0					
ANR	3473905	ExpressionStatement	p1 = buf1	991:4:26553:26562	3473800	3	True				
ANR	3473906	AssignmentExpression	p1 = buf1		3473800	0		=			
ANR	3473907	Identifier	p1		3473800	0					
ANR	3473908	Identifier	buf1		3473800	1					
ANR	3473909	ExpressionStatement	p2 = buf2	992:4:26568:26577	3473800	4	True				
ANR	3473910	AssignmentExpression	p2 = buf2		3473800	0		=			
ANR	3473911	Identifier	p2		3473800	0					
ANR	3473912	Identifier	buf2		3473800	1					
ANR	3473913	WhileStatement	while ( len1 -- > 0 )		3473800	5					
ANR	3473914	Condition	len1 -- > 0	993:11:26590:26599	3473800	0	True				
ANR	3473915	RelationalExpression	len1 -- > 0		3473800	0		>			
ANR	3473916	PostIncDecOperationExpression	len1 --		3473800	0					
ANR	3473917	Identifier	len1		3473800	0					
ANR	3473918	IncDec	--		3473800	1					
ANR	3473919	PrimaryExpression	0		3473800	1					
ANR	3473920	CompoundStatement		16:23:453:453	3473800	1					
ANR	3473921	IfStatement	if ( * p1 != * p2 )		3473800	0					
ANR	3473922	Condition	* p1 != * p2	994:10:26614:26623	3473800	0	True				
ANR	3473923	EqualityExpression	* p1 != * p2		3473800	0		!=			
ANR	3473924	UnaryOperationExpression	* p1		3473800	0					
ANR	3473925	UnaryOperator	*		3473800	0					
ANR	3473926	Identifier	p1		3473800	1					
ANR	3473927	UnaryOperationExpression	* p2		3473800	1					
ANR	3473928	UnaryOperator	*		3473800	0					
ANR	3473929	Identifier	p2		3473800	1					
ANR	3473930	ReturnStatement	return 0 ;	994:22:26626:26634	3473800	1	True				
ANR	3473931	PrimaryExpression	0		3473800	0					
ANR	3473932	ExpressionStatement	p1 ++	995:6:26642:26646	3473800	1	True				
ANR	3473933	PostIncDecOperationExpression	p1 ++		3473800	0					
ANR	3473934	Identifier	p1		3473800	0					
ANR	3473935	IncDec	++		3473800	1					
ANR	3473936	ExpressionStatement	p2 ++	996:6:26654:26658	3473800	2	True				
ANR	3473937	PostIncDecOperationExpression	p2 ++		3473800	0					
ANR	3473938	Identifier	p2		3473800	0					
ANR	3473939	IncDec	++		3473800	1					
ANR	3473940	ExpressionStatement	* ps2 = s2	1000:2:26673:26682	3473800	8	True				
ANR	3473941	AssignmentExpression	* ps2 = s2		3473800	0		=			
ANR	3473942	UnaryOperationExpression	* ps2		3473800	0					
ANR	3473943	UnaryOperator	*		3473800	0					
ANR	3473944	Identifier	ps2		3473800	1					
ANR	3473945	Identifier	s2		3473800	1					
ANR	3473946	ReturnStatement	return 1 ;	1001:2:26686:26694	3473800	9	True				
ANR	3473947	PrimaryExpression	1		3473800	0					
ANR	3473948	ReturnType	static int		3473800	1					
ANR	3473949	Identifier	string_cmp_ic		3473800	2					
ANR	3473950	ParameterList	"OnigEncoding enc , int case_fold_flag , UChar * s1 , UChar * * ps2 , int mblen"		3473800	3					
ANR	3473951	Parameter	OnigEncoding enc	976:25:26071:26086	3473800	0	True				
ANR	3473952	ParameterType	OnigEncoding		3473800	0					
ANR	3473953	Identifier	enc		3473800	1					
ANR	3473954	Parameter	int case_fold_flag	976:43:26089:26106	3473800	1	True				
ANR	3473955	ParameterType	int		3473800	0					
ANR	3473956	Identifier	case_fold_flag		3473800	1					
ANR	3473957	Parameter	UChar * s1	977:4:26113:26121	3473800	2	True				
ANR	3473958	ParameterType	UChar *		3473800	0					
ANR	3473959	Identifier	s1		3473800	1					
ANR	3473960	Parameter	UChar * * ps2	977:15:26124:26134	3473800	3	True				
ANR	3473961	ParameterType	UChar * *		3473800	0					
ANR	3473962	Identifier	ps2		3473800	1					
ANR	3473963	Parameter	int mblen	977:28:26137:26145	3473800	4	True				
ANR	3473964	ParameterType	int		3473800	0					
ANR	3473965	Identifier	mblen		3473800	1					
ANR	3473966	CFGEntryNode	ENTRY		3473800		True				
ANR	3473967	CFGExitNode	EXIT		3473800		True				
ANR	3473968	Symbol	p1		3473800						
ANR	3473969	Symbol	p2		3473800						
ANR	3473970	Symbol	* p1		3473800						
ANR	3473971	Symbol	& s2		3473800						
ANR	3473972	Symbol	& s1		3473800						
ANR	3473973	Symbol	* p2		3473800						
ANR	3473974	Symbol	ps2		3473800						
ANR	3473975	Symbol	mblen		3473800						
ANR	3473976	Symbol	len1		3473800						
ANR	3473977	Symbol	len2		3473800						
ANR	3473978	Symbol	buf1		3473800						
ANR	3473979	Symbol	case_fold_flag		3473800						
ANR	3473980	Symbol	buf2		3473800						
ANR	3473981	Symbol	ONIGENC_MBC_CASE_FOLD		3473800						
ANR	3473982	Symbol	end2		3473800						
ANR	3473983	Symbol	end1		3473800						
ANR	3473984	Symbol	* ps2		3473800						
ANR	3473985	Symbol	enc		3473800						
ANR	3473986	Symbol	s1		3473800						
ANR	3473987	Symbol	s2		3473800						
ANR	3473988	Function	make_capture_history_tree	1036:0:27668:28756							
ANR	3473989	FunctionDef	"make_capture_history_tree (OnigCaptureTreeNode * node , OnigStackType * * kp , OnigStackType * stk_top , UChar * str , regex_t * reg)"		3473988	0					
ANR	3473990	CompoundStatement		1039:0:27828:28756	3473988	0					
ANR	3473991	IdentifierDeclStatement	"int n , r ;"	1040:2:27832:27840	3473988	0	True				
ANR	3473992	IdentifierDecl	n		3473988	0					
ANR	3473993	IdentifierDeclType	int		3473988	0					
ANR	3473994	Identifier	n		3473988	1					
ANR	3473995	IdentifierDecl	r		3473988	1					
ANR	3473996	IdentifierDeclType	int		3473988	0					
ANR	3473997	Identifier	r		3473988	1					
ANR	3473998	IdentifierDeclStatement	OnigCaptureTreeNode * child ;	1041:2:27844:27870	3473988	1	True				
ANR	3473999	IdentifierDecl	* child		3473988	0					
ANR	3474000	IdentifierDeclType	OnigCaptureTreeNode *		3473988	0					
ANR	3474001	Identifier	child		3473988	1					
ANR	3474002	IdentifierDeclStatement	OnigStackType * k = * kp ;	1042:2:27874:27896	3473988	2	True				
ANR	3474003	IdentifierDecl	* k = * kp		3473988	0					
ANR	3474004	IdentifierDeclType	OnigStackType *		3473988	0					
ANR	3474005	Identifier	k		3473988	1					
ANR	3474006	AssignmentExpression	* k = * kp		3473988	2		=			
ANR	3474007	Identifier	k		3473988	0					
ANR	3474008	UnaryOperationExpression	* kp		3473988	1					
ANR	3474009	UnaryOperator	*		3473988	0					
ANR	3474010	Identifier	kp		3473988	1					
ANR	3474011	WhileStatement	while ( k < stk_top )		3473988	3					
ANR	3474012	Condition	k < stk_top	1044:9:27908:27918	3473988	0	True				
ANR	3474013	RelationalExpression	k < stk_top		3473988	0		<			
ANR	3474014	Identifier	k		3473988	0					
ANR	3474015	Identifier	stk_top		3473988	1					
ANR	3474016	CompoundStatement		6:22:92:92	3473988	1					
ANR	3474017	IfStatement	if ( k -> type == STK_MEM_START )		3473988	0					
ANR	3474018	Condition	k -> type == STK_MEM_START	1045:8:27931:27954	3473988	0	True				
ANR	3474019	EqualityExpression	k -> type == STK_MEM_START		3473988	0		==			
ANR	3474020	PtrMemberAccess	k -> type		3473988	0					
ANR	3474021	Identifier	k		3473988	0					
ANR	3474022	Identifier	type		3473988	1					
ANR	3474023	Identifier	STK_MEM_START		3473988	1					
ANR	3474024	CompoundStatement		7:34:128:128	3473988	1					
ANR	3474025	ExpressionStatement	n = k -> u . mem . num	1046:6:27965:27981	3473988	0	True				
ANR	3474026	AssignmentExpression	n = k -> u . mem . num		3473988	0		=			
ANR	3474027	Identifier	n		3473988	0					
ANR	3474028	MemberAccess	k -> u . mem . num		3473988	1					
ANR	3474029	MemberAccess	k -> u . mem		3473988	0					
ANR	3474030	PtrMemberAccess	k -> u		3473988	0					
ANR	3474031	Identifier	k		3473988	0					
ANR	3474032	Identifier	u		3473988	1					
ANR	3474033	Identifier	mem		3473988	1					
ANR	3474034	Identifier	num		3473988	1					
ANR	3474035	IfStatement	"if ( n <= ONIG_MAX_CAPTURE_HISTORY_GROUP && BIT_STATUS_AT ( reg -> capture_history , n ) != 0 )"		3473988	1					
ANR	3474036	Condition	"n <= ONIG_MAX_CAPTURE_HISTORY_GROUP && BIT_STATUS_AT ( reg -> capture_history , n ) != 0"	1047:10:27993:28084	3473988	0	True				
ANR	3474037	AndExpression	"n <= ONIG_MAX_CAPTURE_HISTORY_GROUP && BIT_STATUS_AT ( reg -> capture_history , n ) != 0"		3473988	0		&&			
ANR	3474038	RelationalExpression	n <= ONIG_MAX_CAPTURE_HISTORY_GROUP		3473988	0		<=			
ANR	3474039	Identifier	n		3473988	0					
ANR	3474040	Identifier	ONIG_MAX_CAPTURE_HISTORY_GROUP		3473988	1					
ANR	3474041	EqualityExpression	"BIT_STATUS_AT ( reg -> capture_history , n ) != 0"		3473988	1		!=			
ANR	3474042	CallExpression	"BIT_STATUS_AT ( reg -> capture_history , n )"		3473988	0					
ANR	3474043	Callee	BIT_STATUS_AT		3473988	0					
ANR	3474044	Identifier	BIT_STATUS_AT		3473988	0					
ANR	3474045	ArgumentList	reg -> capture_history		3473988	1					
ANR	3474046	Argument	reg -> capture_history		3473988	0					
ANR	3474047	PtrMemberAccess	reg -> capture_history		3473988	0					
ANR	3474048	Identifier	reg		3473988	0					
ANR	3474049	Identifier	capture_history		3473988	1					
ANR	3474050	Argument	n		3473988	1					
ANR	3474051	Identifier	n		3473988	0					
ANR	3474052	PrimaryExpression	0		3473988	1					
ANR	3474053	CompoundStatement		10:55:258:258	3473988	1					
ANR	3474054	ExpressionStatement	child = history_node_new ( )	1049:8:28097:28123	3473988	0	True				
ANR	3474055	AssignmentExpression	child = history_node_new ( )		3473988	0		=			
ANR	3474056	Identifier	child		3473988	0					
ANR	3474057	CallExpression	history_node_new ( )		3473988	1					
ANR	3474058	Callee	history_node_new		3473988	0					
ANR	3474059	Identifier	history_node_new		3473988	0					
ANR	3474060	ArgumentList			3473988	1					
ANR	3474061	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( child )	1050:8:28133:28164	3473988	1	True				
ANR	3474062	CallExpression	CHECK_NULL_RETURN_MEMERR ( child )		3473988	0					
ANR	3474063	Callee	CHECK_NULL_RETURN_MEMERR		3473988	0					
ANR	3474064	Identifier	CHECK_NULL_RETURN_MEMERR		3473988	0					
ANR	3474065	ArgumentList	child		3473988	1					
ANR	3474066	Argument	child		3473988	0					
ANR	3474067	Identifier	child		3473988	0					
ANR	3474068	ExpressionStatement	child -> group = n	1051:8:28174:28190	3473988	2	True				
ANR	3474069	AssignmentExpression	child -> group = n		3473988	0		=			
ANR	3474070	PtrMemberAccess	child -> group		3473988	0					
ANR	3474071	Identifier	child		3473988	0					
ANR	3474072	Identifier	group		3473988	1					
ANR	3474073	Identifier	n		3473988	1					
ANR	3474074	ExpressionStatement	child -> beg = ( int ) ( k -> u . mem . pstr - str )	1052:8:28200:28240	3473988	3	True				
ANR	3474075	AssignmentExpression	child -> beg = ( int ) ( k -> u . mem . pstr - str )		3473988	0		=			
ANR	3474076	PtrMemberAccess	child -> beg		3473988	0					
ANR	3474077	Identifier	child		3473988	0					
ANR	3474078	Identifier	beg		3473988	1					
ANR	3474079	CastExpression	( int ) ( k -> u . mem . pstr - str )		3473988	1					
ANR	3474080	CastTarget	int		3473988	0					
ANR	3474081	AdditiveExpression	k -> u . mem . pstr - str		3473988	1		-			
ANR	3474082	MemberAccess	k -> u . mem . pstr		3473988	0					
ANR	3474083	MemberAccess	k -> u . mem		3473988	0					
ANR	3474084	PtrMemberAccess	k -> u		3473988	0					
ANR	3474085	Identifier	k		3473988	0					
ANR	3474086	Identifier	u		3473988	1					
ANR	3474087	Identifier	mem		3473988	1					
ANR	3474088	Identifier	pstr		3473988	1					
ANR	3474089	Identifier	str		3473988	1					
ANR	3474090	ExpressionStatement	"r = history_tree_add_child ( node , child )"	1053:8:28250:28289	3473988	4	True				
ANR	3474091	AssignmentExpression	"r = history_tree_add_child ( node , child )"		3473988	0		=			
ANR	3474092	Identifier	r		3473988	0					
ANR	3474093	CallExpression	"history_tree_add_child ( node , child )"		3473988	1					
ANR	3474094	Callee	history_tree_add_child		3473988	0					
ANR	3474095	Identifier	history_tree_add_child		3473988	0					
ANR	3474096	ArgumentList	node		3473988	1					
ANR	3474097	Argument	node		3473988	0					
ANR	3474098	Identifier	node		3473988	0					
ANR	3474099	Argument	child		3473988	1					
ANR	3474100	Identifier	child		3473988	0					
ANR	3474101	IfStatement	if ( r != 0 )		3473988	5					
ANR	3474102	Condition	r != 0	1054:12:28303:28308	3473988	0	True				
ANR	3474103	EqualityExpression	r != 0		3473988	0		!=			
ANR	3474104	Identifier	r		3473988	0					
ANR	3474105	PrimaryExpression	0		3473988	1					
ANR	3474106	ReturnStatement	return r ;	1054:20:28311:28319	3473988	1	True				
ANR	3474107	Identifier	r		3473988	0					
ANR	3474108	ExpressionStatement	* kp = ( k + 1 )	1055:8:28329:28342	3473988	6	True				
ANR	3474109	AssignmentExpression	* kp = ( k + 1 )		3473988	0		=			
ANR	3474110	UnaryOperationExpression	* kp		3473988	0					
ANR	3474111	UnaryOperator	*		3473988	0					
ANR	3474112	Identifier	kp		3473988	1					
ANR	3474113	AdditiveExpression	k + 1		3473988	1		+			
ANR	3474114	Identifier	k		3473988	0					
ANR	3474115	PrimaryExpression	1		3473988	1					
ANR	3474116	ExpressionStatement	"r = make_capture_history_tree ( child , kp , stk_top , str , reg )"	1056:8:28352:28411	3473988	7	True				
ANR	3474117	AssignmentExpression	"r = make_capture_history_tree ( child , kp , stk_top , str , reg )"		3473988	0		=			
ANR	3474118	Identifier	r		3473988	0					
ANR	3474119	CallExpression	"make_capture_history_tree ( child , kp , stk_top , str , reg )"		3473988	1					
ANR	3474120	Callee	make_capture_history_tree		3473988	0					
ANR	3474121	Identifier	make_capture_history_tree		3473988	0					
ANR	3474122	ArgumentList	child		3473988	1					
ANR	3474123	Argument	child		3473988	0					
ANR	3474124	Identifier	child		3473988	0					
ANR	3474125	Argument	kp		3473988	1					
ANR	3474126	Identifier	kp		3473988	0					
ANR	3474127	Argument	stk_top		3473988	2					
ANR	3474128	Identifier	stk_top		3473988	0					
ANR	3474129	Argument	str		3473988	3					
ANR	3474130	Identifier	str		3473988	0					
ANR	3474131	Argument	reg		3473988	4					
ANR	3474132	Identifier	reg		3473988	0					
ANR	3474133	IfStatement	if ( r != 0 )		3473988	8					
ANR	3474134	Condition	r != 0	1057:12:28425:28430	3473988	0	True				
ANR	3474135	EqualityExpression	r != 0		3473988	0		!=			
ANR	3474136	Identifier	r		3473988	0					
ANR	3474137	PrimaryExpression	0		3473988	1					
ANR	3474138	ReturnStatement	return r ;	1057:20:28433:28441	3473988	1	True				
ANR	3474139	Identifier	r		3473988	0					
ANR	3474140	ExpressionStatement	k = * kp	1059:8:28452:28459	3473988	9	True				
ANR	3474141	AssignmentExpression	k = * kp		3473988	0		=			
ANR	3474142	Identifier	k		3473988	0					
ANR	3474143	UnaryOperationExpression	* kp		3473988	1					
ANR	3474144	UnaryOperator	*		3473988	0					
ANR	3474145	Identifier	kp		3473988	1					
ANR	3474146	ExpressionStatement	child -> end = ( int ) ( k -> u . mem . pstr - str )	1060:8:28469:28509	3473988	10	True				
ANR	3474147	AssignmentExpression	child -> end = ( int ) ( k -> u . mem . pstr - str )		3473988	0		=			
ANR	3474148	PtrMemberAccess	child -> end		3473988	0					
ANR	3474149	Identifier	child		3473988	0					
ANR	3474150	Identifier	end		3473988	1					
ANR	3474151	CastExpression	( int ) ( k -> u . mem . pstr - str )		3473988	1					
ANR	3474152	CastTarget	int		3473988	0					
ANR	3474153	AdditiveExpression	k -> u . mem . pstr - str		3473988	1		-			
ANR	3474154	MemberAccess	k -> u . mem . pstr		3473988	0					
ANR	3474155	MemberAccess	k -> u . mem		3473988	0					
ANR	3474156	PtrMemberAccess	k -> u		3473988	0					
ANR	3474157	Identifier	k		3473988	0					
ANR	3474158	Identifier	u		3473988	1					
ANR	3474159	Identifier	mem		3473988	1					
ANR	3474160	Identifier	pstr		3473988	1					
ANR	3474161	Identifier	str		3473988	1					
ANR	3474162	ElseStatement	else		3473988	0					
ANR	3474163	IfStatement	if ( k -> type == STK_MEM_END )		3473988	0					
ANR	3474164	Condition	k -> type == STK_MEM_END	1063:13:28538:28559	3473988	0	True				
ANR	3474165	EqualityExpression	k -> type == STK_MEM_END		3473988	0		==			
ANR	3474166	PtrMemberAccess	k -> type		3473988	0					
ANR	3474167	Identifier	k		3473988	0					
ANR	3474168	Identifier	type		3473988	1					
ANR	3474169	Identifier	STK_MEM_END		3473988	1					
ANR	3474170	CompoundStatement		25:37:733:733	3473988	1					
ANR	3474171	IfStatement	if ( k -> u . mem . num == node -> group )		3473988	0					
ANR	3474172	Condition	k -> u . mem . num == node -> group	1064:10:28574:28600	3473988	0	True				
ANR	3474173	EqualityExpression	k -> u . mem . num == node -> group		3473988	0		==			
ANR	3474174	MemberAccess	k -> u . mem . num		3473988	0					
ANR	3474175	MemberAccess	k -> u . mem		3473988	0					
ANR	3474176	PtrMemberAccess	k -> u		3473988	0					
ANR	3474177	Identifier	k		3473988	0					
ANR	3474178	Identifier	u		3473988	1					
ANR	3474179	Identifier	mem		3473988	1					
ANR	3474180	Identifier	num		3473988	1					
ANR	3474181	PtrMemberAccess	node -> group		3473988	1					
ANR	3474182	Identifier	node		3473988	0					
ANR	3474183	Identifier	group		3473988	1					
ANR	3474184	CompoundStatement		26:39:774:774	3473988	1					
ANR	3474185	ExpressionStatement	node -> end = ( int ) ( k -> u . mem . pstr - str )	1065:8:28613:28652	3473988	0	True				
ANR	3474186	AssignmentExpression	node -> end = ( int ) ( k -> u . mem . pstr - str )		3473988	0		=			
ANR	3474187	PtrMemberAccess	node -> end		3473988	0					
ANR	3474188	Identifier	node		3473988	0					
ANR	3474189	Identifier	end		3473988	1					
ANR	3474190	CastExpression	( int ) ( k -> u . mem . pstr - str )		3473988	1					
ANR	3474191	CastTarget	int		3473988	0					
ANR	3474192	AdditiveExpression	k -> u . mem . pstr - str		3473988	1		-			
ANR	3474193	MemberAccess	k -> u . mem . pstr		3473988	0					
ANR	3474194	MemberAccess	k -> u . mem		3473988	0					
ANR	3474195	PtrMemberAccess	k -> u		3473988	0					
ANR	3474196	Identifier	k		3473988	0					
ANR	3474197	Identifier	u		3473988	1					
ANR	3474198	Identifier	mem		3473988	1					
ANR	3474199	Identifier	pstr		3473988	1					
ANR	3474200	Identifier	str		3473988	1					
ANR	3474201	ExpressionStatement	* kp = k	1066:8:28662:28669	3473988	1	True				
ANR	3474202	AssignmentExpression	* kp = k		3473988	0		=			
ANR	3474203	UnaryOperationExpression	* kp		3473988	0					
ANR	3474204	UnaryOperator	*		3473988	0					
ANR	3474205	Identifier	kp		3473988	1					
ANR	3474206	Identifier	k		3473988	1					
ANR	3474207	ReturnStatement	return 0 ;	1067:8:28679:28687	3473988	2	True				
ANR	3474208	PrimaryExpression	0		3473988	0					
ANR	3474209	ExpressionStatement	k ++	1070:4:28707:28710	3473988	1	True				
ANR	3474210	PostIncDecOperationExpression	k ++		3473988	0					
ANR	3474211	Identifier	k		3473988	0					
ANR	3474212	IncDec	++		3473988	1					
ANR	3474213	ReturnStatement	return 1 ;	1073:2:28719:28727	3473988	4	True				
ANR	3474214	PrimaryExpression	1		3473988	0					
ANR	3474215	ReturnType	static int		3473988	1					
ANR	3474216	Identifier	make_capture_history_tree		3473988	2					
ANR	3474217	ParameterList	"OnigCaptureTreeNode * node , OnigStackType * * kp , OnigStackType * stk_top , UChar * str , regex_t * reg"		3473988	3					
ANR	3474218	Parameter	OnigCaptureTreeNode * node	1037:26:27705:27729	3473988	0	True				
ANR	3474219	ParameterType	OnigCaptureTreeNode *		3473988	0					
ANR	3474220	Identifier	node		3473988	1					
ANR	3474221	Parameter	OnigStackType * * kp	1037:53:27732:27749	3473988	1	True				
ANR	3474222	ParameterType	OnigStackType * *		3473988	0					
ANR	3474223	Identifier	kp		3473988	1					
ANR	3474224	Parameter	OnigStackType * stk_top	1038:26:27778:27799	3473988	2	True				
ANR	3474225	ParameterType	OnigStackType *		3473988	0					
ANR	3474226	Identifier	stk_top		3473988	1					
ANR	3474227	Parameter	UChar * str	1038:50:27802:27811	3473988	3	True				
ANR	3474228	ParameterType	UChar *		3473988	0					
ANR	3474229	Identifier	str		3473988	1					
ANR	3474230	Parameter	regex_t * reg	1038:62:27814:27825	3473988	4	True				
ANR	3474231	ParameterType	regex_t *		3473988	0					
ANR	3474232	Identifier	reg		3473988	1					
ANR	3474233	CFGEntryNode	ENTRY		3473988		True				
ANR	3474234	CFGExitNode	EXIT		3473988		True				
ANR	3474235	Symbol	child -> beg		3473988						
ANR	3474236	Symbol	k -> u . mem . pstr		3473988						
ANR	3474237	Symbol	ONIG_MAX_CAPTURE_HISTORY_GROUP		3473988						
ANR	3474238	Symbol	* kp		3473988						
ANR	3474239	Symbol	history_tree_add_child		3473988						
ANR	3474240	Symbol	reg		3473988						
ANR	3474241	Symbol	k -> u . mem . num		3473988						
ANR	3474242	Symbol	make_capture_history_tree		3473988						
ANR	3474243	Symbol	* node		3473988						
ANR	3474244	Symbol	history_node_new		3473988						
ANR	3474245	Symbol	STK_MEM_START		3473988						
ANR	3474246	Symbol	BIT_STATUS_AT		3473988						
ANR	3474247	Symbol	* child		3473988						
ANR	3474248	Symbol	kp		3473988						
ANR	3474249	Symbol	k -> type		3473988						
ANR	3474250	Symbol	reg -> capture_history		3473988						
ANR	3474251	Symbol	child -> end		3473988						
ANR	3474252	Symbol	node -> group		3473988						
ANR	3474253	Symbol	k		3473988						
ANR	3474254	Symbol	n		3473988						
ANR	3474255	Symbol	stk_top		3473988						
ANR	3474256	Symbol	str		3473988						
ANR	3474257	Symbol	node -> end		3473988						
ANR	3474258	Symbol	node		3473988						
ANR	3474259	Symbol	r		3473988						
ANR	3474260	Symbol	* k		3473988						
ANR	3474261	Symbol	k -> u		3473988						
ANR	3474262	Symbol	k -> u . mem		3473988						
ANR	3474263	Symbol	child -> group		3473988						
ANR	3474264	Symbol	* reg		3473988						
ANR	3474265	Symbol	STK_MEM_END		3473988						
ANR	3474266	Symbol	child		3473988						
ANR	3474267	Function	mem_is_in_memp	1078:0:28796:28990							
ANR	3474268	FunctionDef	"mem_is_in_memp (int mem , int num , UChar * memp)"		3474267	0					
ANR	3474269	CompoundStatement		1079:0:28853:28990	3474267	0					
ANR	3474270	IdentifierDeclStatement	int i ;	1080:2:28857:28862	3474267	0	True				
ANR	3474271	IdentifierDecl	i		3474267	0					
ANR	3474272	IdentifierDeclType	int		3474267	0					
ANR	3474273	Identifier	i		3474267	1					
ANR	3474274	IdentifierDeclStatement	MemNumType m ;	1081:2:28866:28878	3474267	1	True				
ANR	3474275	IdentifierDecl	m		3474267	0					
ANR	3474276	IdentifierDeclType	MemNumType		3474267	0					
ANR	3474277	Identifier	m		3474267	1					
ANR	3474278	ForStatement	for ( i = 0 ; i < num ; i ++ )		3474267	2					
ANR	3474279	ForInit	i = 0 ;	1083:7:28888:28893	3474267	0	True				
ANR	3474280	AssignmentExpression	i = 0		3474267	0		=			
ANR	3474281	Identifier	i		3474267	0					
ANR	3474282	PrimaryExpression	0		3474267	1					
ANR	3474283	Condition	i < num	1083:14:28895:28901	3474267	1	True				
ANR	3474284	RelationalExpression	i < num		3474267	0		<			
ANR	3474285	Identifier	i		3474267	0					
ANR	3474286	Identifier	num		3474267	1					
ANR	3474287	PostIncDecOperationExpression	i ++	1083:23:28904:28906	3474267	2	True				
ANR	3474288	Identifier	i		3474267	0					
ANR	3474289	IncDec	++		3474267	1					
ANR	3474290	CompoundStatement		5:28:55:55	3474267	3					
ANR	3474291	ExpressionStatement	"GET_MEMNUM_INC ( m , memp )"	1084:4:28915:28938	3474267	0	True				
ANR	3474292	CallExpression	"GET_MEMNUM_INC ( m , memp )"		3474267	0					
ANR	3474293	Callee	GET_MEMNUM_INC		3474267	0					
ANR	3474294	Identifier	GET_MEMNUM_INC		3474267	0					
ANR	3474295	ArgumentList	m		3474267	1					
ANR	3474296	Argument	m		3474267	0					
ANR	3474297	Identifier	m		3474267	0					
ANR	3474298	Argument	memp		3474267	1					
ANR	3474299	Identifier	memp		3474267	0					
ANR	3474300	IfStatement	if ( mem == ( int ) m )		3474267	1					
ANR	3474301	Condition	mem == ( int ) m	1085:8:28948:28961	3474267	0	True				
ANR	3474302	EqualityExpression	mem == ( int ) m		3474267	0		==			
ANR	3474303	Identifier	mem		3474267	0					
ANR	3474304	CastExpression	( int ) m		3474267	1					
ANR	3474305	CastTarget	int		3474267	0					
ANR	3474306	Identifier	m		3474267	1					
ANR	3474307	ReturnStatement	return 1 ;	1085:24:28964:28972	3474267	1	True				
ANR	3474308	PrimaryExpression	1		3474267	0					
ANR	3474309	ReturnStatement	return 0 ;	1087:2:28980:28988	3474267	3	True				
ANR	3474310	PrimaryExpression	0		3474267	0					
ANR	3474311	ReturnType	static int		3474267	1					
ANR	3474312	Identifier	mem_is_in_memp		3474267	2					
ANR	3474313	ParameterList	"int mem , int num , UChar * memp"		3474267	3					
ANR	3474314	Parameter	int mem	1078:26:28822:28828	3474267	0	True				
ANR	3474315	ParameterType	int		3474267	0					
ANR	3474316	Identifier	mem		3474267	1					
ANR	3474317	Parameter	int num	1078:35:28831:28837	3474267	1	True				
ANR	3474318	ParameterType	int		3474267	0					
ANR	3474319	Identifier	num		3474267	1					
ANR	3474320	Parameter	UChar * memp	1078:44:28840:28850	3474267	2	True				
ANR	3474321	ParameterType	UChar *		3474267	0					
ANR	3474322	Identifier	memp		3474267	1					
ANR	3474323	CFGEntryNode	ENTRY		3474267		True				
ANR	3474324	CFGExitNode	EXIT		3474267		True				
ANR	3474325	Symbol	mem		3474267						
ANR	3474326	Symbol	num		3474267						
ANR	3474327	Symbol	memp		3474267						
ANR	3474328	Symbol	i		3474267						
ANR	3474329	Symbol	m		3474267						
ANR	3474330	Function	backref_match_at_nested_level	1090:0:28993:30227							
ANR	3474331	FunctionDef	"backref_match_at_nested_level (regex_t * reg , OnigStackType * top , OnigStackType * stk_base , int ignore_case , int case_fold_flag , int nest , int mem_num , UChar * memp , UChar * * s , const UChar * send)"		3474330	0					
ANR	3474332	CompoundStatement		1094:0:29205:30227	3474330	0					
ANR	3474333	IdentifierDeclStatement	"UChar * ss , * p , * pstart , * pend = NULL_UCHARP ;"	1095:2:29209:29252	3474330	0	True				
ANR	3474334	IdentifierDecl	* ss		3474330	0					
ANR	3474335	IdentifierDeclType	UChar *		3474330	0					
ANR	3474336	Identifier	ss		3474330	1					
ANR	3474337	IdentifierDecl	* p		3474330	1					
ANR	3474338	IdentifierDeclType	UChar *		3474330	0					
ANR	3474339	Identifier	p		3474330	1					
ANR	3474340	IdentifierDecl	* pstart		3474330	2					
ANR	3474341	IdentifierDeclType	UChar *		3474330	0					
ANR	3474342	Identifier	pstart		3474330	1					
ANR	3474343	IdentifierDecl	* pend = NULL_UCHARP		3474330	3					
ANR	3474344	IdentifierDeclType	UChar *		3474330	0					
ANR	3474345	Identifier	pend		3474330	1					
ANR	3474346	AssignmentExpression	* pend = NULL_UCHARP		3474330	2		=			
ANR	3474347	Identifier	NULL_UCHARP		3474330	0					
ANR	3474348	Identifier	NULL_UCHARP		3474330	1					
ANR	3474349	IdentifierDeclStatement	int level ;	1096:2:29256:29265	3474330	1	True				
ANR	3474350	IdentifierDecl	level		3474330	0					
ANR	3474351	IdentifierDeclType	int		3474330	0					
ANR	3474352	Identifier	level		3474330	1					
ANR	3474353	IdentifierDeclStatement	OnigStackType * k ;	1097:2:29269:29285	3474330	2	True				
ANR	3474354	IdentifierDecl	* k		3474330	0					
ANR	3474355	IdentifierDeclType	OnigStackType *		3474330	0					
ANR	3474356	Identifier	k		3474330	1					
ANR	3474357	ExpressionStatement	level = 0	1099:2:29290:29299	3474330	3	True				
ANR	3474358	AssignmentExpression	level = 0		3474330	0		=			
ANR	3474359	Identifier	level		3474330	0					
ANR	3474360	PrimaryExpression	0		3474330	1					
ANR	3474361	ExpressionStatement	k = top	1100:2:29303:29310	3474330	4	True				
ANR	3474362	AssignmentExpression	k = top		3474330	0		=			
ANR	3474363	Identifier	k		3474330	0					
ANR	3474364	Identifier	top		3474330	1					
ANR	3474365	ExpressionStatement	k --	1101:2:29314:29317	3474330	5	True				
ANR	3474366	PostIncDecOperationExpression	k --		3474330	0					
ANR	3474367	Identifier	k		3474330	0					
ANR	3474368	IncDec	--		3474330	1					
ANR	3474369	WhileStatement	while ( k >= stk_base )		3474330	6					
ANR	3474370	Condition	k >= stk_base	1102:9:29328:29340	3474330	0	True				
ANR	3474371	RelationalExpression	k >= stk_base		3474330	0		>=			
ANR	3474372	Identifier	k		3474330	0					
ANR	3474373	Identifier	stk_base		3474330	1					
ANR	3474374	CompoundStatement		9:24:137:137	3474330	1					
ANR	3474375	IfStatement	if ( k -> type == STK_CALL_FRAME )		3474330	0					
ANR	3474376	Condition	k -> type == STK_CALL_FRAME	1103:8:29353:29377	3474330	0	True				
ANR	3474377	EqualityExpression	k -> type == STK_CALL_FRAME		3474330	0		==			
ANR	3474378	PtrMemberAccess	k -> type		3474330	0					
ANR	3474379	Identifier	k		3474330	0					
ANR	3474380	Identifier	type		3474330	1					
ANR	3474381	Identifier	STK_CALL_FRAME		3474330	1					
ANR	3474382	CompoundStatement		10:35:174:174	3474330	1					
ANR	3474383	ExpressionStatement	level --	1104:6:29388:29395	3474330	0	True				
ANR	3474384	PostIncDecOperationExpression	level --		3474330	0					
ANR	3474385	Identifier	level		3474330	0					
ANR	3474386	IncDec	--		3474330	1					
ANR	3474387	ElseStatement	else		3474330	0					
ANR	3474388	IfStatement	if ( k -> type == STK_RETURN )		3474330	0					
ANR	3474389	Condition	k -> type == STK_RETURN	1106:13:29416:29436	3474330	0	True				
ANR	3474390	EqualityExpression	k -> type == STK_RETURN		3474330	0		==			
ANR	3474391	PtrMemberAccess	k -> type		3474330	0					
ANR	3474392	Identifier	k		3474330	0					
ANR	3474393	Identifier	type		3474330	1					
ANR	3474394	Identifier	STK_RETURN		3474330	1					
ANR	3474395	CompoundStatement		13:36:233:233	3474330	1					
ANR	3474396	ExpressionStatement	level ++	1107:6:29447:29454	3474330	0	True				
ANR	3474397	PostIncDecOperationExpression	level ++		3474330	0					
ANR	3474398	Identifier	level		3474330	0					
ANR	3474399	IncDec	++		3474330	1					
ANR	3474400	ElseStatement	else		3474330	0					
ANR	3474401	IfStatement	if ( level == nest )		3474330	0					
ANR	3474402	Condition	level == nest	1109:13:29475:29487	3474330	0	True				
ANR	3474403	EqualityExpression	level == nest		3474330	0		==			
ANR	3474404	Identifier	level		3474330	0					
ANR	3474405	Identifier	nest		3474330	1					
ANR	3474406	CompoundStatement		16:28:284:284	3474330	1					
ANR	3474407	IfStatement	if ( k -> type == STK_MEM_START )		3474330	0					
ANR	3474408	Condition	k -> type == STK_MEM_START	1110:10:29502:29525	3474330	0	True				
ANR	3474409	EqualityExpression	k -> type == STK_MEM_START		3474330	0		==			
ANR	3474410	PtrMemberAccess	k -> type		3474330	0					
ANR	3474411	Identifier	k		3474330	0					
ANR	3474412	Identifier	type		3474330	1					
ANR	3474413	Identifier	STK_MEM_START		3474330	1					
ANR	3474414	CompoundStatement		17:36:322:322	3474330	1					
ANR	3474415	IfStatement	"if ( mem_is_in_memp ( k -> u . mem . num , mem_num , memp ) )"		3474330	0					
ANR	3474416	Condition	"mem_is_in_memp ( k -> u . mem . num , mem_num , memp )"	1111:5:29535:29577	3474330	0	True				
ANR	3474417	CallExpression	"mem_is_in_memp ( k -> u . mem . num , mem_num , memp )"		3474330	0					
ANR	3474418	Callee	mem_is_in_memp		3474330	0					
ANR	3474419	Identifier	mem_is_in_memp		3474330	0					
ANR	3474420	ArgumentList	k -> u . mem . num		3474330	1					
ANR	3474421	Argument	k -> u . mem . num		3474330	0					
ANR	3474422	MemberAccess	k -> u . mem . num		3474330	0					
ANR	3474423	MemberAccess	k -> u . mem		3474330	0					
ANR	3474424	PtrMemberAccess	k -> u		3474330	0					
ANR	3474425	Identifier	k		3474330	0					
ANR	3474426	Identifier	u		3474330	1					
ANR	3474427	Identifier	mem		3474330	1					
ANR	3474428	Identifier	num		3474330	1					
ANR	3474429	Argument	mem_num		3474330	1					
ANR	3474430	Identifier	mem_num		3474330	0					
ANR	3474431	Argument	memp		3474330	2					
ANR	3474432	Identifier	memp		3474330	0					
ANR	3474433	CompoundStatement		18:50:374:374	3474330	1					
ANR	3474434	ExpressionStatement	pstart = k -> u . mem . pstr	1112:3:29585:29607	3474330	0	True				
ANR	3474435	AssignmentExpression	pstart = k -> u . mem . pstr		3474330	0		=			
ANR	3474436	Identifier	pstart		3474330	0					
ANR	3474437	MemberAccess	k -> u . mem . pstr		3474330	1					
ANR	3474438	MemberAccess	k -> u . mem		3474330	0					
ANR	3474439	PtrMemberAccess	k -> u		3474330	0					
ANR	3474440	Identifier	k		3474330	0					
ANR	3474441	Identifier	u		3474330	1					
ANR	3474442	Identifier	mem		3474330	1					
ANR	3474443	Identifier	pstr		3474330	1					
ANR	3474444	IfStatement	if ( pend != NULL_UCHARP )		3474330	1					
ANR	3474445	Condition	pend != NULL_UCHARP	1113:7:29616:29634	3474330	0	True				
ANR	3474446	EqualityExpression	pend != NULL_UCHARP		3474330	0		!=			
ANR	3474447	Identifier	pend		3474330	0					
ANR	3474448	Identifier	NULL_UCHARP		3474330	1					
ANR	3474449	CompoundStatement		20:28:431:431	3474330	1					
ANR	3474450	IfStatement	if ( pend - pstart > send - * s )		3474330	0					
ANR	3474451	Condition	pend - pstart > send - * s	1114:9:29648:29672	3474330	0	True				
ANR	3474452	RelationalExpression	pend - pstart > send - * s		3474330	0		>			
ANR	3474453	AdditiveExpression	pend - pstart		3474330	0		-			
ANR	3474454	Identifier	pend		3474330	0					
ANR	3474455	Identifier	pstart		3474330	1					
ANR	3474456	AdditiveExpression	send - * s		3474330	1		-			
ANR	3474457	Identifier	send		3474330	0					
ANR	3474458	UnaryOperationExpression	* s		3474330	1					
ANR	3474459	UnaryOperator	*		3474330	0					
ANR	3474460	Identifier	s		3474330	1					
ANR	3474461	ReturnStatement	return 0 ;	1114:36:29675:29683	3474330	1	True				
ANR	3474462	PrimaryExpression	0		3474330	0					
ANR	3474463	ExpressionStatement	p = pstart	1115:5:29714:29725	3474330	1	True				
ANR	3474464	AssignmentExpression	p = pstart		3474330	0		=			
ANR	3474465	Identifier	p		3474330	0					
ANR	3474466	Identifier	pstart		3474330	1					
ANR	3474467	ExpressionStatement	ss = * s	1116:5:29732:29739	3474330	2	True				
ANR	3474468	AssignmentExpression	ss = * s		3474330	0		=			
ANR	3474469	Identifier	ss		3474330	0					
ANR	3474470	UnaryOperationExpression	* s		3474330	1					
ANR	3474471	UnaryOperator	*		3474330	0					
ANR	3474472	Identifier	s		3474330	1					
ANR	3474473	IfStatement	if ( ignore_case != 0 )		3474330	3					
ANR	3474474	Condition	ignore_case != 0	1118:9:29751:29766	3474330	0	True				
ANR	3474475	EqualityExpression	ignore_case != 0		3474330	0		!=			
ANR	3474476	Identifier	ignore_case		3474330	0					
ANR	3474477	PrimaryExpression	0		3474330	1					
ANR	3474478	CompoundStatement		25:27:563:563	3474330	1					
ANR	3474479	IfStatement	"if ( string_cmp_ic ( reg -> enc , case_fold_flag , pstart , & ss , ( int ) ( pend - pstart ) ) == 0 )"		3474330	0					
ANR	3474480	Condition	"string_cmp_ic ( reg -> enc , case_fold_flag , pstart , & ss , ( int ) ( pend - pstart ) ) == 0"	1119:11:29782:29865	3474330	0	True				
ANR	3474481	EqualityExpression	"string_cmp_ic ( reg -> enc , case_fold_flag , pstart , & ss , ( int ) ( pend - pstart ) ) == 0"		3474330	0		==			
ANR	3474482	CallExpression	"string_cmp_ic ( reg -> enc , case_fold_flag , pstart , & ss , ( int ) ( pend - pstart ) )"		3474330	0					
ANR	3474483	Callee	string_cmp_ic		3474330	0					
ANR	3474484	Identifier	string_cmp_ic		3474330	0					
ANR	3474485	ArgumentList	reg -> enc		3474330	1					
ANR	3474486	Argument	reg -> enc		3474330	0					
ANR	3474487	PtrMemberAccess	reg -> enc		3474330	0					
ANR	3474488	Identifier	reg		3474330	0					
ANR	3474489	Identifier	enc		3474330	1					
ANR	3474490	Argument	case_fold_flag		3474330	1					
ANR	3474491	Identifier	case_fold_flag		3474330	0					
ANR	3474492	Argument	pstart		3474330	2					
ANR	3474493	Identifier	pstart		3474330	0					
ANR	3474494	Argument	& ss		3474330	3					
ANR	3474495	UnaryOperationExpression	& ss		3474330	0					
ANR	3474496	UnaryOperator	&		3474330	0					
ANR	3474497	Identifier	ss		3474330	1					
ANR	3474498	Argument	( int ) ( pend - pstart )		3474330	4					
ANR	3474499	CastExpression	( int ) ( pend - pstart )		3474330	0					
ANR	3474500	CastTarget	int		3474330	0					
ANR	3474501	AdditiveExpression	pend - pstart		3474330	1		-			
ANR	3474502	Identifier	pend		3474330	0					
ANR	3474503	Identifier	pstart		3474330	1					
ANR	3474504	PrimaryExpression	0		3474330	1					
ANR	3474505	ReturnStatement	return 0 ;	1121:2:29870:29878	3474330	1	True				
ANR	3474506	PrimaryExpression	0		3474330	0					
ANR	3474507	ElseStatement	else		3474330	0					
ANR	3474508	CompoundStatement		30:10:715:715	3474330	0					
ANR	3474509	WhileStatement	while ( p < pend )		3474330	0					
ANR	3474510	Condition	p < pend	1124:14:29937:29944	3474330	0	True				
ANR	3474511	RelationalExpression	p < pend		3474330	0		<			
ANR	3474512	Identifier	p		3474330	0					
ANR	3474513	Identifier	pend		3474330	1					
ANR	3474514	CompoundStatement		31:24:741:741	3474330	1					
ANR	3474515	IfStatement	if ( * p ++ != * ss ++ )		3474330	0					
ANR	3474516	Condition	* p ++ != * ss ++	1125:6:29955:29967	3474330	0	True				
ANR	3474517	EqualityExpression	* p ++ != * ss ++		3474330	0		!=			
ANR	3474518	UnaryOperationExpression	* p ++		3474330	0					
ANR	3474519	UnaryOperator	*		3474330	0					
ANR	3474520	PostIncDecOperationExpression	p ++		3474330	1					
ANR	3474521	Identifier	p		3474330	0					
ANR	3474522	IncDec	++		3474330	1					
ANR	3474523	UnaryOperationExpression	* ss ++		3474330	1					
ANR	3474524	UnaryOperator	*		3474330	0					
ANR	3474525	PostIncDecOperationExpression	ss ++		3474330	1					
ANR	3474526	Identifier	ss		3474330	0					
ANR	3474527	IncDec	++		3474330	1					
ANR	3474528	ReturnStatement	return 0 ;	1125:21:29970:29978	3474330	1	True				
ANR	3474529	PrimaryExpression	0		3474330	0					
ANR	3474530	ExpressionStatement	* s = ss	1129:5:30026:30033	3474330	4	True				
ANR	3474531	AssignmentExpression	* s = ss		3474330	0		=			
ANR	3474532	UnaryOperationExpression	* s		3474330	0					
ANR	3474533	UnaryOperator	*		3474330	0					
ANR	3474534	Identifier	s		3474330	1					
ANR	3474535	Identifier	ss		3474330	1					
ANR	3474536	ReturnStatement	return 1 ;	1130:5:30040:30048	3474330	5	True				
ANR	3474537	PrimaryExpression	1		3474330	0					
ANR	3474538	ElseStatement	else		3474330	0					
ANR	3474539	IfStatement	if ( k -> type == STK_MEM_END )		3474330	0					
ANR	3474540	Condition	k -> type == STK_MEM_END	1134:15:30081:30102	3474330	0	True				
ANR	3474541	EqualityExpression	k -> type == STK_MEM_END		3474330	0		==			
ANR	3474542	PtrMemberAccess	k -> type		3474330	0					
ANR	3474543	Identifier	k		3474330	0					
ANR	3474544	Identifier	type		3474330	1					
ANR	3474545	Identifier	STK_MEM_END		3474330	1					
ANR	3474546	CompoundStatement		41:39:899:899	3474330	1					
ANR	3474547	IfStatement	"if ( mem_is_in_memp ( k -> u . mem . num , mem_num , memp ) )"		3474330	0					
ANR	3474548	Condition	"mem_is_in_memp ( k -> u . mem . num , mem_num , memp )"	1135:5:30112:30154	3474330	0	True				
ANR	3474549	CallExpression	"mem_is_in_memp ( k -> u . mem . num , mem_num , memp )"		3474330	0					
ANR	3474550	Callee	mem_is_in_memp		3474330	0					
ANR	3474551	Identifier	mem_is_in_memp		3474330	0					
ANR	3474552	ArgumentList	k -> u . mem . num		3474330	1					
ANR	3474553	Argument	k -> u . mem . num		3474330	0					
ANR	3474554	MemberAccess	k -> u . mem . num		3474330	0					
ANR	3474555	MemberAccess	k -> u . mem		3474330	0					
ANR	3474556	PtrMemberAccess	k -> u		3474330	0					
ANR	3474557	Identifier	k		3474330	0					
ANR	3474558	Identifier	u		3474330	1					
ANR	3474559	Identifier	mem		3474330	1					
ANR	3474560	Identifier	num		3474330	1					
ANR	3474561	Argument	mem_num		3474330	1					
ANR	3474562	Identifier	mem_num		3474330	0					
ANR	3474563	Argument	memp		3474330	2					
ANR	3474564	Identifier	memp		3474330	0					
ANR	3474565	CompoundStatement		42:50:951:951	3474330	1					
ANR	3474566	ExpressionStatement	pend = k -> u . mem . pstr	1136:3:30162:30182	3474330	0	True				
ANR	3474567	AssignmentExpression	pend = k -> u . mem . pstr		3474330	0		=			
ANR	3474568	Identifier	pend		3474330	0					
ANR	3474569	MemberAccess	k -> u . mem . pstr		3474330	1					
ANR	3474570	MemberAccess	k -> u . mem		3474330	0					
ANR	3474571	PtrMemberAccess	k -> u		3474330	0					
ANR	3474572	Identifier	k		3474330	0					
ANR	3474573	Identifier	u		3474330	1					
ANR	3474574	Identifier	mem		3474330	1					
ANR	3474575	Identifier	pstr		3474330	1					
ANR	3474576	ExpressionStatement	k --	1140:4:30205:30208	3474330	1	True				
ANR	3474577	PostIncDecOperationExpression	k --		3474330	0					
ANR	3474578	Identifier	k		3474330	0					
ANR	3474579	IncDec	--		3474330	1					
ANR	3474580	ReturnStatement	return 0 ;	1143:2:30217:30225	3474330	7	True				
ANR	3474581	PrimaryExpression	0		3474330	0					
ANR	3474582	ReturnType	static int		3474330	1					
ANR	3474583	Identifier	backref_match_at_nested_level		3474330	2					
ANR	3474584	ParameterList	"regex_t * reg , OnigStackType * top , OnigStackType * stk_base , int ignore_case , int case_fold_flag , int nest , int mem_num , UChar * memp , UChar * * s , const UChar * send"		3474330	3					
ANR	3474585	Parameter	regex_t * reg	1090:41:29034:29045	3474330	0	True				
ANR	3474586	ParameterType	regex_t *		3474330	0					
ANR	3474587	Identifier	reg		3474330	1					
ANR	3474588	Parameter	OnigStackType * top	1091:4:29051:29068	3474330	1	True				
ANR	3474589	ParameterType	OnigStackType *		3474330	0					
ANR	3474590	Identifier	top		3474330	1					
ANR	3474591	Parameter	OnigStackType * stk_base	1091:24:29071:29093	3474330	2	True				
ANR	3474592	ParameterType	OnigStackType *		3474330	0					
ANR	3474593	Identifier	stk_base		3474330	1					
ANR	3474594	Parameter	int ignore_case	1092:4:29099:29113	3474330	3	True				
ANR	3474595	ParameterType	int		3474330	0					
ANR	3474596	Identifier	ignore_case		3474330	1					
ANR	3474597	Parameter	int case_fold_flag	1092:21:29116:29133	3474330	4	True				
ANR	3474598	ParameterType	int		3474330	0					
ANR	3474599	Identifier	case_fold_flag		3474330	1					
ANR	3474600	Parameter	int nest	1093:4:29139:29146	3474330	5	True				
ANR	3474601	ParameterType	int		3474330	0					
ANR	3474602	Identifier	nest		3474330	1					
ANR	3474603	Parameter	int mem_num	1093:14:29149:29159	3474330	6	True				
ANR	3474604	ParameterType	int		3474330	0					
ANR	3474605	Identifier	mem_num		3474330	1					
ANR	3474606	Parameter	UChar * memp	1093:27:29162:29172	3474330	7	True				
ANR	3474607	ParameterType	UChar *		3474330	0					
ANR	3474608	Identifier	memp		3474330	1					
ANR	3474609	Parameter	UChar * * s	1093:40:29175:29183	3474330	8	True				
ANR	3474610	ParameterType	UChar * *		3474330	0					
ANR	3474611	Identifier	s		3474330	1					
ANR	3474612	Parameter	const UChar * send	1093:51:29186:29202	3474330	9	True				
ANR	3474613	ParameterType	const UChar *		3474330	0					
ANR	3474614	Identifier	send		3474330	1					
ANR	3474615	CFGEntryNode	ENTRY		3474330		True				
ANR	3474616	CFGExitNode	EXIT		3474330		True				
ANR	3474617	Symbol	* ss ++		3474330						
ANR	3474618	Symbol	k -> u . mem . pstr		3474330						
ANR	3474619	Symbol	string_cmp_ic		3474330						
ANR	3474620	Symbol	memp		3474330						
ANR	3474621	Symbol	STK_RETURN		3474330						
ANR	3474622	Symbol	mem_is_in_memp		3474330						
ANR	3474623	Symbol	& ss		3474330						
ANR	3474624	Symbol	ignore_case		3474330						
ANR	3474625	Symbol	case_fold_flag		3474330						
ANR	3474626	Symbol	mem_num		3474330						
ANR	3474627	Symbol	top		3474330						
ANR	3474628	Symbol	reg		3474330						
ANR	3474629	Symbol	k -> u . mem . num		3474330						
ANR	3474630	Symbol	pstart		3474330						
ANR	3474631	Symbol	pend		3474330						
ANR	3474632	Symbol	ss		3474330						
ANR	3474633	Symbol	STK_MEM_START		3474330						
ANR	3474634	Symbol	level		3474330						
ANR	3474635	Symbol	* p ++		3474330						
ANR	3474636	Symbol	k -> type		3474330						
ANR	3474637	Symbol	nest		3474330						
ANR	3474638	Symbol	k		3474330						
ANR	3474639	Symbol	reg -> enc		3474330						
ANR	3474640	Symbol	p		3474330						
ANR	3474641	Symbol	s		3474330						
ANR	3474642	Symbol	NULL_UCHARP		3474330						
ANR	3474643	Symbol	* k		3474330						
ANR	3474644	Symbol	k -> u		3474330						
ANR	3474645	Symbol	STK_CALL_FRAME		3474330						
ANR	3474646	Symbol	k -> u . mem		3474330						
ANR	3474647	Symbol	send		3474330						
ANR	3474648	Symbol	* s		3474330						
ANR	3474649	Symbol	* reg		3474330						
ANR	3474650	Symbol	STK_MEM_END		3474330						
ANR	3474651	Symbol	stk_base		3474330						
ANR	3474652	DeclStmt									
ANR	3474653	Decl							struct timeval	struct timeval	ts
ANR	3474654	Decl							struct timeval	struct timeval	te
ANR	3474655	DeclStmt									
ANR	3474656	Decl							struct tms	struct tms	ts
ANR	3474657	Decl							struct tms	struct tms	te
ANR	3474658	DeclStmt									
ANR	3474659	Decl							int	int [ 256 ]	OpCounter
ANR	3474660	DeclStmt									
ANR	3474661	Decl							int	int [ 256 ]	OpPrevCounter
ANR	3474662	DeclStmt									
ANR	3474663	Decl							unsigned long	unsigned long [ 256 ]	OpTime
ANR	3474664	DeclStmt									
ANR	3474665	Decl							int	int	OpCurr
ANR	3474666	DeclStmt									
ANR	3474667	Decl							int	int	OpPrevTarget
ANR	3474668	DeclStmt									
ANR	3474669	Decl							int	int	MaxStackDepth
ANR	3474670	Function	onig_statistics_init	1191:0:31293:31454							
ANR	3474671	FunctionDef	onig_statistics_init ()		3474670	0					
ANR	3474672	CompoundStatement		1193:0:31332:31454	3474670	0					
ANR	3474673	IdentifierDeclStatement	int i ;	1194:2:31336:31341	3474670	0	True				
ANR	3474674	IdentifierDecl	i		3474670	0					
ANR	3474675	IdentifierDeclType	int		3474670	0					
ANR	3474676	Identifier	i		3474670	1					
ANR	3474677	ForStatement	for ( i = 0 ; i < 256 ; i ++ )		3474670	1					
ANR	3474678	ForInit	i = 0 ;	1195:7:31350:31355	3474670	0	True				
ANR	3474679	AssignmentExpression	i = 0		3474670	0		=			
ANR	3474680	Identifier	i		3474670	0					
ANR	3474681	PrimaryExpression	0		3474670	1					
ANR	3474682	Condition	i < 256	1195:14:31357:31363	3474670	1	True				
ANR	3474683	RelationalExpression	i < 256		3474670	0		<			
ANR	3474684	Identifier	i		3474670	0					
ANR	3474685	PrimaryExpression	256		3474670	1					
ANR	3474686	PostIncDecOperationExpression	i ++	1195:23:31366:31368	3474670	2	True				
ANR	3474687	Identifier	i		3474670	0					
ANR	3474688	IncDec	++		3474670	1					
ANR	3474689	CompoundStatement		3:28:38:38	3474670	3					
ANR	3474690	ExpressionStatement	OpCounter [ i ] = OpPrevCounter [ i ] = 0	1196:4:31377:31412	3474670	0	True				
ANR	3474691	AssignmentExpression	OpCounter [ i ] = OpPrevCounter [ i ] = 0		3474670	0		=			
ANR	3474692	ArrayIndexing	OpCounter [ i ]		3474670	0					
ANR	3474693	Identifier	OpCounter		3474670	0					
ANR	3474694	Identifier	i		3474670	1					
ANR	3474695	AssignmentExpression	OpPrevCounter [ i ] = 0		3474670	1		=			
ANR	3474696	ArrayIndexing	OpPrevCounter [ i ]		3474670	0					
ANR	3474697	Identifier	OpPrevCounter		3474670	0					
ANR	3474698	Identifier	i		3474670	1					
ANR	3474699	PrimaryExpression	0		3474670	1					
ANR	3474700	ExpressionStatement	OpTime [ i ] = 0	1196:41:31414:31427	3474670	1	True				
ANR	3474701	AssignmentExpression	OpTime [ i ] = 0		3474670	0		=			
ANR	3474702	ArrayIndexing	OpTime [ i ]		3474670	0					
ANR	3474703	Identifier	OpTime		3474670	0					
ANR	3474704	Identifier	i		3474670	1					
ANR	3474705	PrimaryExpression	0		3474670	1					
ANR	3474706	ExpressionStatement	MaxStackDepth = 0	1198:2:31435:31452	3474670	2	True				
ANR	3474707	AssignmentExpression	MaxStackDepth = 0		3474670	0		=			
ANR	3474708	Identifier	MaxStackDepth		3474670	0					
ANR	3474709	PrimaryExpression	0		3474670	1					
ANR	3474710	ReturnType	extern void		3474670	1					
ANR	3474711	Identifier	onig_statistics_init		3474670	2					
ANR	3474712	ParameterList			3474670	3					
ANR	3474713	CFGEntryNode	ENTRY		3474670		True				
ANR	3474714	CFGExitNode	EXIT		3474670		True				
ANR	3474715	Symbol	* OpCounter		3474670						
ANR	3474716	Symbol	MaxStackDepth		3474670						
ANR	3474717	Symbol	* i		3474670						
ANR	3474718	Symbol	* OpPrevCounter		3474670						
ANR	3474719	Symbol	OpPrevCounter		3474670						
ANR	3474720	Symbol	i		3474670						
ANR	3474721	Symbol	OpCounter		3474670						
ANR	3474722	Symbol	* OpTime		3474670						
ANR	3474723	Symbol	OpTime		3474670						
ANR	3474724	Function	onig_print_statistics	1201:0:31457:31778							
ANR	3474725	FunctionDef	onig_print_statistics (FILE * f)		3474724	0					
ANR	3474726	CompoundStatement		1203:0:31500:31778	3474724	0					
ANR	3474727	IdentifierDeclStatement	int i ;	1204:2:31504:31509	3474724	0	True				
ANR	3474728	IdentifierDecl	i		3474724	0					
ANR	3474729	IdentifierDeclType	int		3474724	0					
ANR	3474730	Identifier	i		3474724	1					
ANR	3474731	ExpressionStatement	"fprintf ( f , ""   count      prev        time\\n"" )"	1205:2:31513:31559	3474724	1	True				
ANR	3474732	CallExpression	"fprintf ( f , ""   count      prev        time\\n"" )"		3474724	0					
ANR	3474733	Callee	fprintf		3474724	0					
ANR	3474734	Identifier	fprintf		3474724	0					
ANR	3474735	ArgumentList	f		3474724	1					
ANR	3474736	Argument	f		3474724	0					
ANR	3474737	Identifier	f		3474724	0					
ANR	3474738	Argument	"""   count      prev        time\\n"""		3474724	1					
ANR	3474739	PrimaryExpression	"""   count      prev        time\\n"""		3474724	0					
ANR	3474740	ForStatement	for ( i = 0 ; OnigOpInfo [ i ] . opcode >= 0 ; i ++ )		3474724	2					
ANR	3474741	ForInit	i = 0 ;	1206:7:31568:31573	3474724	0	True				
ANR	3474742	AssignmentExpression	i = 0		3474724	0		=			
ANR	3474743	Identifier	i		3474724	0					
ANR	3474744	PrimaryExpression	0		3474724	1					
ANR	3474745	Condition	OnigOpInfo [ i ] . opcode >= 0	1206:14:31575:31599	3474724	1	True				
ANR	3474746	RelationalExpression	OnigOpInfo [ i ] . opcode >= 0		3474724	0		>=			
ANR	3474747	MemberAccess	OnigOpInfo [ i ] . opcode		3474724	0					
ANR	3474748	ArrayIndexing	OnigOpInfo [ i ]		3474724	0					
ANR	3474749	Identifier	OnigOpInfo		3474724	0					
ANR	3474750	Identifier	i		3474724	1					
ANR	3474751	Identifier	opcode		3474724	1					
ANR	3474752	PrimaryExpression	0		3474724	1					
ANR	3474753	PostIncDecOperationExpression	i ++	1206:41:31602:31604	3474724	2	True				
ANR	3474754	Identifier	i		3474724	0					
ANR	3474755	IncDec	++		3474724	1					
ANR	3474756	CompoundStatement		4:46:106:106	3474724	3					
ANR	3474757	ExpressionStatement	"fprintf ( f , ""%8d: %8d: %10ld: %s\\n"" , OpCounter [ i ] , OpPrevCounter [ i ] , OpTime [ i ] , OnigOpInfo [ i ] . name )"	1207:4:31613:31716	3474724	0	True				
ANR	3474758	CallExpression	"fprintf ( f , ""%8d: %8d: %10ld: %s\\n"" , OpCounter [ i ] , OpPrevCounter [ i ] , OpTime [ i ] , OnigOpInfo [ i ] . name )"		3474724	0					
ANR	3474759	Callee	fprintf		3474724	0					
ANR	3474760	Identifier	fprintf		3474724	0					
ANR	3474761	ArgumentList	f		3474724	1					
ANR	3474762	Argument	f		3474724	0					
ANR	3474763	Identifier	f		3474724	0					
ANR	3474764	Argument	"""%8d: %8d: %10ld: %s\\n"""		3474724	1					
ANR	3474765	PrimaryExpression	"""%8d: %8d: %10ld: %s\\n"""		3474724	0					
ANR	3474766	Argument	OpCounter [ i ]		3474724	2					
ANR	3474767	ArrayIndexing	OpCounter [ i ]		3474724	0					
ANR	3474768	Identifier	OpCounter		3474724	0					
ANR	3474769	Identifier	i		3474724	1					
ANR	3474770	Argument	OpPrevCounter [ i ]		3474724	3					
ANR	3474771	ArrayIndexing	OpPrevCounter [ i ]		3474724	0					
ANR	3474772	Identifier	OpPrevCounter		3474724	0					
ANR	3474773	Identifier	i		3474724	1					
ANR	3474774	Argument	OpTime [ i ]		3474724	4					
ANR	3474775	ArrayIndexing	OpTime [ i ]		3474724	0					
ANR	3474776	Identifier	OpTime		3474724	0					
ANR	3474777	Identifier	i		3474724	1					
ANR	3474778	Argument	OnigOpInfo [ i ] . name		3474724	5					
ANR	3474779	MemberAccess	OnigOpInfo [ i ] . name		3474724	0					
ANR	3474780	ArrayIndexing	OnigOpInfo [ i ]		3474724	0					
ANR	3474781	Identifier	OnigOpInfo		3474724	0					
ANR	3474782	Identifier	i		3474724	1					
ANR	3474783	Identifier	name		3474724	1					
ANR	3474784	ExpressionStatement	"fprintf ( f , ""\\nmax stack depth: %d\\n"" , MaxStackDepth )"	1210:2:31724:31776	3474724	3	True				
ANR	3474785	CallExpression	"fprintf ( f , ""\\nmax stack depth: %d\\n"" , MaxStackDepth )"		3474724	0					
ANR	3474786	Callee	fprintf		3474724	0					
ANR	3474787	Identifier	fprintf		3474724	0					
ANR	3474788	ArgumentList	f		3474724	1					
ANR	3474789	Argument	f		3474724	0					
ANR	3474790	Identifier	f		3474724	0					
ANR	3474791	Argument	"""\\nmax stack depth: %d\\n"""		3474724	1					
ANR	3474792	PrimaryExpression	"""\\nmax stack depth: %d\\n"""		3474724	0					
ANR	3474793	Argument	MaxStackDepth		3474724	2					
ANR	3474794	Identifier	MaxStackDepth		3474724	0					
ANR	3474795	ReturnType	extern void		3474724	1					
ANR	3474796	Identifier	onig_print_statistics		3474724	2					
ANR	3474797	ParameterList	FILE * f		3474724	3					
ANR	3474798	Parameter	FILE * f	1202:22:31491:31497	3474724	0	True				
ANR	3474799	ParameterType	FILE *		3474724	0					
ANR	3474800	Identifier	f		3474724	1					
ANR	3474801	CFGEntryNode	ENTRY		3474724		True				
ANR	3474802	CFGExitNode	EXIT		3474724		True				
ANR	3474803	Symbol	* OpCounter		3474724						
ANR	3474804	Symbol	MaxStackDepth		3474724						
ANR	3474805	Symbol	* OnigOpInfo		3474724						
ANR	3474806	Symbol	OpPrevCounter		3474724						
ANR	3474807	Symbol	f		3474724						
ANR	3474808	Symbol	OnigOpInfo		3474724						
ANR	3474809	Symbol	i		3474724						
ANR	3474810	Symbol	OpCounter		3474724						
ANR	3474811	Symbol	OpTime		3474724						
ANR	3474812	Symbol	OnigOpInfo [ i ] . opcode		3474724						
ANR	3474813	Symbol	* i		3474724						
ANR	3474814	Symbol	* OpPrevCounter		3474724						
ANR	3474815	Symbol	* OpTime		3474724						
ANR	3474816	Symbol	OnigOpInfo [ i ] . name		3474724						
ANR	3474817	DeclStmt									
ANR	3474818	Decl							int	int	regoff_t
ANR	3474819	ClassDef	<unnamed>	1230:8:32053:32118							
ANR	3474820	DeclStmt									
ANR	3474821	Decl							regoff_t	regoff_t	rm_so
ANR	3474822	DeclStmt									
ANR	3474823	Decl							regoff_t	regoff_t	rm_eo
ANR	3474824	DeclStmt									
ANR	3474825	Decl									posix_regmatch_t
ANR	3474826	DeclStmt									
ANR	3474827	Decl							UChar	UChar [ ]	FinishCode
ANR	3474828	DeclStmt									
ANR	3474829	Decl							int	int	i
ANR	3474830	Decl							int	int	n
ANR	3474831	Decl							int	int	num_mem
ANR	3474832	Decl							int	int	best_len
ANR	3474833	Decl							int	int	pop_level
ANR	3474834	DeclStmt									
ANR	3474835	Decl							LengthType	LengthType	tlen
ANR	3474836	Decl							LengthType	LengthType	tlen2
ANR	3474837	DeclStmt									
ANR	3474838	Decl							MemNumType	MemNumType	mem
ANR	3474839	DeclStmt									
ANR	3474840	Decl							RelAddrType	RelAddrType	addr
ANR	3474841	DeclStmt									
ANR	3474842	Decl							OnigOptionType	OnigOptionType	option
ANR	3474843	DeclStmt									
ANR	3474844	Decl							OnigEncoding	OnigEncoding	encode
ANR	3474845	DeclStmt									
ANR	3474846	Decl							OnigCaseFoldType	OnigCaseFoldType	case_fold_flag
ANR	3474847	DeclStmt									
ANR	3474848	Decl							UChar	UChar *	s
ANR	3474849	Decl							UChar	UChar *	q
ANR	3474850	Decl							UChar	UChar *	sbegin
ANR	3474851	DeclStmt									
ANR	3474852	Decl							UChar	UChar *	p
ANR	3474853	DeclStmt									
ANR	3474854	Decl							char	char *	alloca_base
ANR	3474855	DeclStmt									
ANR	3474856	Decl							OnigStackType	OnigStackType *	stk_alloc
ANR	3474857	Decl							OnigStackType	OnigStackType *	stk_base
ANR	3474858	Decl							OnigStackType	OnigStackType *	stk
ANR	3474859	Decl							OnigStackType	OnigStackType *	stk_end
ANR	3474860	DeclStmt									
ANR	3474861	Decl							OnigStackType	OnigStackType *	stkp
ANR	3474862	DeclStmt									
ANR	3474863	Decl							OnigStackIndex	OnigStackIndex	si
ANR	3474864	DeclStmt									
ANR	3474865	Decl							OnigStackIndex	OnigStackIndex *	repeat_stk
ANR	3474866	DeclStmt									
ANR	3474867	Decl							OnigStackIndex	OnigStackIndex *	mem_start_stk
ANR	3474868	Decl							OnigStackIndex	OnigStackIndex *	mem_end_stk
ANR	3474869	DeclStmt									
ANR	3474870	Decl							int	int	scv
ANR	3474871	DeclStmt									
ANR	3474872	Decl							unsigned char	unsigned char *	state_check_buff
ANR	3474873	DeclStmt									
ANR	3474874	Decl							int	int	num_comb_exp_check
ANR	3474875	DeclStmt									
ANR	3474876	Decl							UChar	UChar *	q
ANR	3474877	Decl							UChar	UChar *	bp
ANR	3474878	Decl							UChar	UChar [ 50 ]	buf
ANR	3474879	DeclStmt									
ANR	3474880	Decl							int	int	len
ANR	3474881	DeclStmt									
ANR	3474882	Decl							OnigRegion	OnigRegion *	region
ANR	3474883	DeclStmt									
ANR	3474884	Decl							posix_regmatch_t	posix_regmatch_t *	rmt
ANR	3474885	DeclStmt									
ANR	3474886	Decl							int	int	r
ANR	3474887	DeclStmt									
ANR	3474888	Decl							OnigCaptureTreeNode	OnigCaptureTreeNode *	node
ANR	3474889	DeclStmt									
ANR	3474890	Decl							int	int	len
ANR	3474891	DeclStmt									
ANR	3474892	Decl							UChar	UChar *	q
ANR	3474893	Decl							UChar	UChar [ ONIGENC_MBC_CASE_FOLD_MAXLEN ]	lowbuf
ANR	3474894	DeclStmt									
ANR	3474895	Decl							int	int	len
ANR	3474896	DeclStmt									
ANR	3474897	Decl							UChar	UChar *	q
ANR	3474898	Decl							UChar	UChar *	endp
ANR	3474899	Decl							UChar	UChar [ ONIGENC_MBC_CASE_FOLD_MAXLEN ]	lowbuf
ANR	3474900	DeclStmt									
ANR	3474901	Decl							OnigCodePoint	OnigCodePoint	code
ANR	3474902	DeclStmt									
ANR	3474903	Decl							UChar	UChar *	ss
ANR	3474904	DeclStmt									
ANR	3474905	Decl							int	int	mb_len
ANR	3474906	DeclStmt									
ANR	3474907	Decl							OnigCodePoint	OnigCodePoint	code
ANR	3474908	DeclStmt									
ANR	3474909	Decl							UChar	UChar *	ss
ANR	3474910	DeclStmt									
ANR	3474911	Decl							int	int	mb_len
ANR	3474912	DeclStmt									
ANR	3474913	Decl							OnigCodePoint	OnigCodePoint	code
ANR	3474914	DeclStmt									
ANR	3474915	Decl							void	void *	node
ANR	3474916	DeclStmt									
ANR	3474917	Decl							int	int	mb_len
ANR	3474918	DeclStmt									
ANR	3474919	Decl							UChar	UChar *	ss
ANR	3474920	DeclStmt									
ANR	3474921	Decl							UChar	UChar *	ss
ANR	3474922	DeclStmt									
ANR	3474923	Decl							int	int	len
ANR	3474924	DeclStmt									
ANR	3474925	Decl							UChar	UChar *	pstart
ANR	3474926	Decl							UChar	UChar *	pend
ANR	3474927	DeclStmt									
ANR	3474928	Decl							int	int	len
ANR	3474929	DeclStmt									
ANR	3474930	Decl							UChar	UChar *	pstart
ANR	3474931	Decl							UChar	UChar *	pend
ANR	3474932	DeclStmt									
ANR	3474933	Decl							int	int	len
ANR	3474934	Decl							int	int	is_fail
ANR	3474935	DeclStmt									
ANR	3474936	Decl							UChar	UChar *	pstart
ANR	3474937	Decl							UChar	UChar *	pend
ANR	3474938	Decl							UChar	UChar *	swork
ANR	3474939	DeclStmt									
ANR	3474940	Decl							int	int	len
ANR	3474941	Decl							int	int	is_fail
ANR	3474942	DeclStmt									
ANR	3474943	Decl							UChar	UChar *	pstart
ANR	3474944	Decl							UChar	UChar *	pend
ANR	3474945	Decl							UChar	UChar *	swork
ANR	3474946	DeclStmt									
ANR	3474947	Decl							int	int	len
ANR	3474948	DeclStmt									
ANR	3474949	Decl							OnigOptionType	OnigOptionType	ic
ANR	3474950	DeclStmt									
ANR	3474951	Decl							LengthType	LengthType	level
ANR	3474952	DeclStmt									
ANR	3474953	Decl							int	int	isnull
ANR	3474954	DeclStmt									
ANR	3474955	Decl							int	int	isnull
ANR	3474956	DeclStmt									
ANR	3474957	Decl							int	int	isnull
ANR	3474958	DeclStmt									
ANR	3474959	Decl							UChar	UChar *	pcode
ANR	3474960	Function	slow_search	2740:0:67476:68033							
ANR	3474961	FunctionDef	"slow_search (OnigEncoding enc , UChar * target , UChar * target_end , const UChar * text , const UChar * text_end , UChar * text_range)"		3474960	0					
ANR	3474962	CompoundStatement		2743:0:67620:68033	3474960	0					
ANR	3474963	IdentifierDeclStatement	"UChar * t , * p , * s , * end ;"	2744:2:67624:67646	3474960	0	True				
ANR	3474964	IdentifierDecl	* t		3474960	0					
ANR	3474965	IdentifierDeclType	UChar *		3474960	0					
ANR	3474966	Identifier	t		3474960	1					
ANR	3474967	IdentifierDecl	* p		3474960	1					
ANR	3474968	IdentifierDeclType	UChar *		3474960	0					
ANR	3474969	Identifier	p		3474960	1					
ANR	3474970	IdentifierDecl	* s		3474960	2					
ANR	3474971	IdentifierDeclType	UChar *		3474960	0					
ANR	3474972	Identifier	s		3474960	1					
ANR	3474973	IdentifierDecl	* end		3474960	3					
ANR	3474974	IdentifierDeclType	UChar *		3474960	0					
ANR	3474975	Identifier	end		3474960	1					
ANR	3474976	ExpressionStatement	end = ( UChar * ) text_end	2746:2:67651:67674	3474960	1	True				
ANR	3474977	AssignmentExpression	end = ( UChar * ) text_end		3474960	0		=			
ANR	3474978	Identifier	end		3474960	0					
ANR	3474979	CastExpression	( UChar * ) text_end		3474960	1					
ANR	3474980	CastTarget	UChar *		3474960	0					
ANR	3474981	Identifier	text_end		3474960	1					
ANR	3474982	ExpressionStatement	end -= target_end - target - 1	2747:2:67678:67708	3474960	2	True				
ANR	3474983	AssignmentExpression	end -= target_end - target - 1		3474960	0		-=			
ANR	3474984	Identifier	end		3474960	0					
ANR	3474985	AdditiveExpression	target_end - target - 1		3474960	1		-			
ANR	3474986	Identifier	target_end		3474960	0					
ANR	3474987	AdditiveExpression	target - 1		3474960	1		-			
ANR	3474988	Identifier	target		3474960	0					
ANR	3474989	PrimaryExpression	1		3474960	1					
ANR	3474990	IfStatement	if ( end > text_range )		3474960	3					
ANR	3474991	Condition	end > text_range	2748:6:67716:67731	3474960	0	True				
ANR	3474992	RelationalExpression	end > text_range		3474960	0		>			
ANR	3474993	Identifier	end		3474960	0					
ANR	3474994	Identifier	text_range		3474960	1					
ANR	3474995	ExpressionStatement	end = text_range	2749:4:67738:67754	3474960	1	True				
ANR	3474996	AssignmentExpression	end = text_range		3474960	0		=			
ANR	3474997	Identifier	end		3474960	0					
ANR	3474998	Identifier	text_range		3474960	1					
ANR	3474999	ExpressionStatement	s = ( UChar * ) text	2751:2:67759:67776	3474960	4	True				
ANR	3475000	AssignmentExpression	s = ( UChar * ) text		3474960	0		=			
ANR	3475001	Identifier	s		3474960	0					
ANR	3475002	CastExpression	( UChar * ) text		3474960	1					
ANR	3475003	CastTarget	UChar *		3474960	0					
ANR	3475004	Identifier	text		3474960	1					
ANR	3475005	WhileStatement	while ( s < end )		3474960	5					
ANR	3475006	Condition	s < end	2753:9:67788:67794	3474960	0	True				
ANR	3475007	RelationalExpression	s < end		3474960	0		<			
ANR	3475008	Identifier	s		3474960	0					
ANR	3475009	Identifier	end		3474960	1					
ANR	3475010	CompoundStatement		11:18:176:176	3474960	1					
ANR	3475011	IfStatement	if ( * s == * target )		3474960	0					
ANR	3475012	Condition	* s == * target	2754:8:67807:67819	3474960	0	True				
ANR	3475013	EqualityExpression	* s == * target		3474960	0		==			
ANR	3475014	UnaryOperationExpression	* s		3474960	0					
ANR	3475015	UnaryOperator	*		3474960	0					
ANR	3475016	Identifier	s		3474960	1					
ANR	3475017	UnaryOperationExpression	* target		3474960	1					
ANR	3475018	UnaryOperator	*		3474960	0					
ANR	3475019	Identifier	target		3474960	1					
ANR	3475020	CompoundStatement		12:23:201:201	3474960	1					
ANR	3475021	ExpressionStatement	p = s + 1	2755:6:67830:67839	3474960	0	True				
ANR	3475022	AssignmentExpression	p = s + 1		3474960	0		=			
ANR	3475023	Identifier	p		3474960	0					
ANR	3475024	AdditiveExpression	s + 1		3474960	1		+			
ANR	3475025	Identifier	s		3474960	0					
ANR	3475026	PrimaryExpression	1		3474960	1					
ANR	3475027	ExpressionStatement	t = target + 1	2756:6:67847:67861	3474960	1	True				
ANR	3475028	AssignmentExpression	t = target + 1		3474960	0		=			
ANR	3475029	Identifier	t		3474960	0					
ANR	3475030	AdditiveExpression	target + 1		3474960	1		+			
ANR	3475031	Identifier	target		3474960	0					
ANR	3475032	PrimaryExpression	1		3474960	1					
ANR	3475033	WhileStatement	while ( t < target_end )		3474960	2					
ANR	3475034	Condition	t < target_end	2757:13:67876:67889	3474960	0	True				
ANR	3475035	RelationalExpression	t < target_end		3474960	0		<			
ANR	3475036	Identifier	t		3474960	0					
ANR	3475037	Identifier	target_end		3474960	1					
ANR	3475038	CompoundStatement		15:29:271:271	3474960	1					
ANR	3475039	IfStatement	if ( * t != * p ++ )		3474960	0					
ANR	3475040	Condition	* t != * p ++	2758:5:67899:67908	3474960	0	True				
ANR	3475041	EqualityExpression	* t != * p ++		3474960	0		!=			
ANR	3475042	UnaryOperationExpression	* t		3474960	0					
ANR	3475043	UnaryOperator	*		3474960	0					
ANR	3475044	Identifier	t		3474960	1					
ANR	3475045	UnaryOperationExpression	* p ++		3474960	1					
ANR	3475046	UnaryOperator	*		3474960	0					
ANR	3475047	PostIncDecOperationExpression	p ++		3474960	1					
ANR	3475048	Identifier	p		3474960	0					
ANR	3475049	IncDec	++		3474960	1					
ANR	3475050	BreakStatement	break ;	2759:3:67914:67919	3474960	1	True				
ANR	3475051	ExpressionStatement	t ++	2760:1:67922:67925	3474960	1	True				
ANR	3475052	PostIncDecOperationExpression	t ++		3474960	0					
ANR	3475053	Identifier	t		3474960	0					
ANR	3475054	IncDec	++		3474960	1					
ANR	3475055	IfStatement	if ( t == target_end )		3474960	3					
ANR	3475056	Condition	t == target_end	2762:10:67945:67959	3474960	0	True				
ANR	3475057	EqualityExpression	t == target_end		3474960	0		==			
ANR	3475058	Identifier	t		3474960	0					
ANR	3475059	Identifier	target_end		3474960	1					
ANR	3475060	ReturnStatement	return s ;	2763:1:67963:67971	3474960	1	True				
ANR	3475061	Identifier	s		3474960	0					
ANR	3475062	ExpressionStatement	"s += enclen ( enc , s )"	2765:4:67983:68002	3474960	1	True				
ANR	3475063	AssignmentExpression	"s += enclen ( enc , s )"		3474960	0		+=			
ANR	3475064	Identifier	s		3474960	0					
ANR	3475065	CallExpression	"enclen ( enc , s )"		3474960	1					
ANR	3475066	Callee	enclen		3474960	0					
ANR	3475067	Identifier	enclen		3474960	0					
ANR	3475068	ArgumentList	enc		3474960	1					
ANR	3475069	Argument	enc		3474960	0					
ANR	3475070	Identifier	enc		3474960	0					
ANR	3475071	Argument	s		3474960	1					
ANR	3475072	Identifier	s		3474960	0					
ANR	3475073	ReturnStatement	return ( UChar * ) NULL ;	2768:2:68011:68031	3474960	6	True				
ANR	3475074	CastExpression	( UChar * ) NULL		3474960	0					
ANR	3475075	CastTarget	UChar *		3474960	0					
ANR	3475076	Identifier	NULL		3474960	1					
ANR	3475077	ReturnType	static UChar *		3474960	1					
ANR	3475078	Identifier	slow_search		3474960	2					
ANR	3475079	ParameterList	"OnigEncoding enc , UChar * target , UChar * target_end , const UChar * text , const UChar * text_end , UChar * text_range"		3474960	3					
ANR	3475080	Parameter	OnigEncoding enc	2741:12:67502:67517	3474960	0	True				
ANR	3475081	ParameterType	OnigEncoding		3474960	0					
ANR	3475082	Identifier	enc		3474960	1					
ANR	3475083	Parameter	UChar * target	2741:30:67520:67532	3474960	1	True				
ANR	3475084	ParameterType	UChar *		3474960	0					
ANR	3475085	Identifier	target		3474960	1					
ANR	3475086	Parameter	UChar * target_end	2741:45:67535:67551	3474960	2	True				
ANR	3475087	ParameterType	UChar *		3474960	0					
ANR	3475088	Identifier	target_end		3474960	1					
ANR	3475089	Parameter	const UChar * text	2742:5:67559:67575	3474960	3	True				
ANR	3475090	ParameterType	const UChar *		3474960	0					
ANR	3475091	Identifier	text		3474960	1					
ANR	3475092	Parameter	const UChar * text_end	2742:24:67578:67598	3474960	4	True				
ANR	3475093	ParameterType	const UChar *		3474960	0					
ANR	3475094	Identifier	text_end		3474960	1					
ANR	3475095	Parameter	UChar * text_range	2742:47:67601:67617	3474960	5	True				
ANR	3475096	ParameterType	UChar *		3474960	0					
ANR	3475097	Identifier	text_range		3474960	1					
ANR	3475098	CFGEntryNode	ENTRY		3474960		True				
ANR	3475099	CFGExitNode	EXIT		3474960		True				
ANR	3475100	Symbol	NULL		3474960						
ANR	3475101	Symbol	* p ++		3474960						
ANR	3475102	Symbol	target_end		3474960						
ANR	3475103	Symbol	enclen		3474960						
ANR	3475104	Symbol	target		3474960						
ANR	3475105	Symbol	p		3474960						
ANR	3475106	Symbol	* target		3474960						
ANR	3475107	Symbol	s		3474960						
ANR	3475108	Symbol	t		3474960						
ANR	3475109	Symbol	end		3474960						
ANR	3475110	Symbol	enc		3474960						
ANR	3475111	Symbol	text		3474960						
ANR	3475112	Symbol	text_end		3474960						
ANR	3475113	Symbol	text_range		3474960						
ANR	3475114	Symbol	* s		3474960						
ANR	3475115	Symbol	* t		3474960						
ANR	3475116	Function	str_lower_case_match	2771:0:68036:68479							
ANR	3475117	FunctionDef	"str_lower_case_match (OnigEncoding enc , int case_fold_flag , const UChar * t , const UChar * tend , const UChar * p , const UChar * end)"		3475116	0					
ANR	3475118	CompoundStatement		2775:0:68203:68479	3475116	0					
ANR	3475119	IdentifierDeclStatement	int lowlen ;	2776:2:68207:68217	3475116	0	True				
ANR	3475120	IdentifierDecl	lowlen		3475116	0					
ANR	3475121	IdentifierDeclType	int		3475116	0					
ANR	3475122	Identifier	lowlen		3475116	1					
ANR	3475123	IdentifierDeclStatement	"UChar * q , lowbuf [ ONIGENC_MBC_CASE_FOLD_MAXLEN ] ;"	2777:2:68221:68267	3475116	1	True				
ANR	3475124	IdentifierDecl	* q		3475116	0					
ANR	3475125	IdentifierDeclType	UChar *		3475116	0					
ANR	3475126	Identifier	q		3475116	1					
ANR	3475127	IdentifierDecl	lowbuf [ ONIGENC_MBC_CASE_FOLD_MAXLEN ]		3475116	1					
ANR	3475128	IdentifierDeclType	UChar [ ONIGENC_MBC_CASE_FOLD_MAXLEN ]		3475116	0					
ANR	3475129	Identifier	lowbuf		3475116	1					
ANR	3475130	Identifier	ONIGENC_MBC_CASE_FOLD_MAXLEN		3475116	2					
ANR	3475131	WhileStatement	while ( t < tend )		3475116	2					
ANR	3475132	Condition	t < tend	2779:9:68279:68286	3475116	0	True				
ANR	3475133	RelationalExpression	t < tend		3475116	0		<			
ANR	3475134	Identifier	t		3475116	0					
ANR	3475135	Identifier	tend		3475116	1					
ANR	3475136	CompoundStatement		5:19:85:85	3475116	1					
ANR	3475137	ExpressionStatement	"lowlen = ONIGENC_MBC_CASE_FOLD ( enc , case_fold_flag , & p , end , lowbuf )"	2780:4:68295:68363	3475116	0	True				
ANR	3475138	AssignmentExpression	"lowlen = ONIGENC_MBC_CASE_FOLD ( enc , case_fold_flag , & p , end , lowbuf )"		3475116	0		=			
ANR	3475139	Identifier	lowlen		3475116	0					
ANR	3475140	CallExpression	"ONIGENC_MBC_CASE_FOLD ( enc , case_fold_flag , & p , end , lowbuf )"		3475116	1					
ANR	3475141	Callee	ONIGENC_MBC_CASE_FOLD		3475116	0					
ANR	3475142	Identifier	ONIGENC_MBC_CASE_FOLD		3475116	0					
ANR	3475143	ArgumentList	enc		3475116	1					
ANR	3475144	Argument	enc		3475116	0					
ANR	3475145	Identifier	enc		3475116	0					
ANR	3475146	Argument	case_fold_flag		3475116	1					
ANR	3475147	Identifier	case_fold_flag		3475116	0					
ANR	3475148	Argument	& p		3475116	2					
ANR	3475149	UnaryOperationExpression	& p		3475116	0					
ANR	3475150	UnaryOperator	&		3475116	0					
ANR	3475151	Identifier	p		3475116	1					
ANR	3475152	Argument	end		3475116	3					
ANR	3475153	Identifier	end		3475116	0					
ANR	3475154	Argument	lowbuf		3475116	4					
ANR	3475155	Identifier	lowbuf		3475116	0					
ANR	3475156	ExpressionStatement	q = lowbuf	2781:4:68369:68379	3475116	1	True				
ANR	3475157	AssignmentExpression	q = lowbuf		3475116	0		=			
ANR	3475158	Identifier	q		3475116	0					
ANR	3475159	Identifier	lowbuf		3475116	1					
ANR	3475160	WhileStatement	while ( lowlen > 0 )		3475116	2					
ANR	3475161	Condition	lowlen > 0	2782:11:68392:68401	3475116	0	True				
ANR	3475162	RelationalExpression	lowlen > 0		3475116	0		>			
ANR	3475163	Identifier	lowlen		3475116	0					
ANR	3475164	PrimaryExpression	0		3475116	1					
ANR	3475165	CompoundStatement		8:23:200:200	3475116	1					
ANR	3475166	IfStatement	if ( * t ++ != * q ++ )		3475116	0					
ANR	3475167	Condition	* t ++ != * q ++	2783:10:68416:68427	3475116	0	True				
ANR	3475168	EqualityExpression	* t ++ != * q ++		3475116	0		!=			
ANR	3475169	UnaryOperationExpression	* t ++		3475116	0					
ANR	3475170	UnaryOperator	*		3475116	0					
ANR	3475171	PostIncDecOperationExpression	t ++		3475116	1					
ANR	3475172	Identifier	t		3475116	0					
ANR	3475173	IncDec	++		3475116	1					
ANR	3475174	UnaryOperationExpression	* q ++		3475116	1					
ANR	3475175	UnaryOperator	*		3475116	0					
ANR	3475176	PostIncDecOperationExpression	q ++		3475116	1					
ANR	3475177	Identifier	q		3475116	0					
ANR	3475178	IncDec	++		3475116	1					
ANR	3475179	ReturnStatement	return 0 ;	2783:24:68430:68438	3475116	1	True				
ANR	3475180	PrimaryExpression	0		3475116	0					
ANR	3475181	ExpressionStatement	lowlen --	2784:6:68446:68454	3475116	1	True				
ANR	3475182	PostIncDecOperationExpression	lowlen --		3475116	0					
ANR	3475183	Identifier	lowlen		3475116	0					
ANR	3475184	IncDec	--		3475116	1					
ANR	3475185	ReturnStatement	return 1 ;	2788:2:68469:68477	3475116	3	True				
ANR	3475186	PrimaryExpression	1		3475116	0					
ANR	3475187	ReturnType	static int		3475116	1					
ANR	3475188	Identifier	str_lower_case_match		3475116	2					
ANR	3475189	ParameterList	"OnigEncoding enc , int case_fold_flag , const UChar * t , const UChar * tend , const UChar * p , const UChar * end"		3475116	3					
ANR	3475190	Parameter	OnigEncoding enc	2772:21:68068:68083	3475116	0	True				
ANR	3475191	ParameterType	OnigEncoding		3475116	0					
ANR	3475192	Identifier	enc		3475116	1					
ANR	3475193	Parameter	int case_fold_flag	2772:39:68086:68103	3475116	1	True				
ANR	3475194	ParameterType	int		3475116	0					
ANR	3475195	Identifier	case_fold_flag		3475116	1					
ANR	3475196	Parameter	const UChar * t	2773:21:68127:68140	3475116	2	True				
ANR	3475197	ParameterType	const UChar *		3475116	0					
ANR	3475198	Identifier	t		3475116	1					
ANR	3475199	Parameter	const UChar * tend	2773:37:68143:68159	3475116	3	True				
ANR	3475200	ParameterType	const UChar *		3475116	0					
ANR	3475201	Identifier	tend		3475116	1					
ANR	3475202	Parameter	const UChar * p	2774:7:68169:68182	3475116	4	True				
ANR	3475203	ParameterType	const UChar *		3475116	0					
ANR	3475204	Identifier	p		3475116	1					
ANR	3475205	Parameter	const UChar * end	2774:23:68185:68200	3475116	5	True				
ANR	3475206	ParameterType	const UChar *		3475116	0					
ANR	3475207	Identifier	end		3475116	1					
ANR	3475208	CFGEntryNode	ENTRY		3475116		True				
ANR	3475209	CFGExitNode	EXIT		3475116		True				
ANR	3475210	Symbol	lowbuf		3475116						
ANR	3475211	Symbol	* t ++		3475116						
ANR	3475212	Symbol	* q ++		3475116						
ANR	3475213	Symbol	p		3475116						
ANR	3475214	Symbol	case_fold_flag		3475116						
ANR	3475215	Symbol	tend		3475116						
ANR	3475216	Symbol	q		3475116						
ANR	3475217	Symbol	t		3475116						
ANR	3475218	Symbol	ONIGENC_MBC_CASE_FOLD		3475116						
ANR	3475219	Symbol	& p		3475116						
ANR	3475220	Symbol	end		3475116						
ANR	3475221	Symbol	enc		3475116						
ANR	3475222	Symbol	lowlen		3475116						
ANR	3475223	Function	slow_search_ic	2791:0:68482:68994							
ANR	3475224	FunctionDef	"slow_search_ic (OnigEncoding enc , int case_fold_flag , UChar * target , UChar * target_end , const UChar * text , const UChar * text_end , UChar * text_range)"		3475223	0					
ANR	3475225	CompoundStatement		2795:0:68660:68994	3475223	0					
ANR	3475226	IdentifierDeclStatement	"UChar * s , * end ;"	2796:2:68664:68678	3475223	0	True				
ANR	3475227	IdentifierDecl	* s		3475223	0					
ANR	3475228	IdentifierDeclType	UChar *		3475223	0					
ANR	3475229	Identifier	s		3475223	1					
ANR	3475230	IdentifierDecl	* end		3475223	1					
ANR	3475231	IdentifierDeclType	UChar *		3475223	0					
ANR	3475232	Identifier	end		3475223	1					
ANR	3475233	ExpressionStatement	end = ( UChar * ) text_end	2798:2:68683:68706	3475223	1	True				
ANR	3475234	AssignmentExpression	end = ( UChar * ) text_end		3475223	0		=			
ANR	3475235	Identifier	end		3475223	0					
ANR	3475236	CastExpression	( UChar * ) text_end		3475223	1					
ANR	3475237	CastTarget	UChar *		3475223	0					
ANR	3475238	Identifier	text_end		3475223	1					
ANR	3475239	ExpressionStatement	end -= target_end - target - 1	2799:2:68710:68740	3475223	2	True				
ANR	3475240	AssignmentExpression	end -= target_end - target - 1		3475223	0		-=			
ANR	3475241	Identifier	end		3475223	0					
ANR	3475242	AdditiveExpression	target_end - target - 1		3475223	1		-			
ANR	3475243	Identifier	target_end		3475223	0					
ANR	3475244	AdditiveExpression	target - 1		3475223	1		-			
ANR	3475245	Identifier	target		3475223	0					
ANR	3475246	PrimaryExpression	1		3475223	1					
ANR	3475247	IfStatement	if ( end > text_range )		3475223	3					
ANR	3475248	Condition	end > text_range	2800:6:68748:68763	3475223	0	True				
ANR	3475249	RelationalExpression	end > text_range		3475223	0		>			
ANR	3475250	Identifier	end		3475223	0					
ANR	3475251	Identifier	text_range		3475223	1					
ANR	3475252	ExpressionStatement	end = text_range	2801:4:68770:68786	3475223	1	True				
ANR	3475253	AssignmentExpression	end = text_range		3475223	0		=			
ANR	3475254	Identifier	end		3475223	0					
ANR	3475255	Identifier	text_range		3475223	1					
ANR	3475256	ExpressionStatement	s = ( UChar * ) text	2803:2:68791:68808	3475223	4	True				
ANR	3475257	AssignmentExpression	s = ( UChar * ) text		3475223	0		=			
ANR	3475258	Identifier	s		3475223	0					
ANR	3475259	CastExpression	( UChar * ) text		3475223	1					
ANR	3475260	CastTarget	UChar *		3475223	0					
ANR	3475261	Identifier	text		3475223	1					
ANR	3475262	WhileStatement	while ( s < end )		3475223	5					
ANR	3475263	Condition	s < end	2805:9:68820:68826	3475223	0	True				
ANR	3475264	RelationalExpression	s < end		3475223	0		<			
ANR	3475265	Identifier	s		3475223	0					
ANR	3475266	Identifier	end		3475223	1					
ANR	3475267	CompoundStatement		11:18:168:168	3475223	1					
ANR	3475268	IfStatement	"if ( str_lower_case_match ( enc , case_fold_flag , target , target_end , s , text_end ) )"		3475223	0					
ANR	3475269	Condition	"str_lower_case_match ( enc , case_fold_flag , target , target_end , s , text_end )"	2806:8:68839:68920	3475223	0	True				
ANR	3475270	CallExpression	"str_lower_case_match ( enc , case_fold_flag , target , target_end , s , text_end )"		3475223	0					
ANR	3475271	Callee	str_lower_case_match		3475223	0					
ANR	3475272	Identifier	str_lower_case_match		3475223	0					
ANR	3475273	ArgumentList	enc		3475223	1					
ANR	3475274	Argument	enc		3475223	0					
ANR	3475275	Identifier	enc		3475223	0					
ANR	3475276	Argument	case_fold_flag		3475223	1					
ANR	3475277	Identifier	case_fold_flag		3475223	0					
ANR	3475278	Argument	target		3475223	2					
ANR	3475279	Identifier	target		3475223	0					
ANR	3475280	Argument	target_end		3475223	3					
ANR	3475281	Identifier	target_end		3475223	0					
ANR	3475282	Argument	s		3475223	4					
ANR	3475283	Identifier	s		3475223	0					
ANR	3475284	Argument	text_end		3475223	5					
ANR	3475285	Identifier	text_end		3475223	0					
ANR	3475286	ReturnStatement	return s ;	2808:6:68929:68937	3475223	1	True				
ANR	3475287	Identifier	s		3475223	0					
ANR	3475288	ExpressionStatement	"s += enclen ( enc , s )"	2810:4:68944:68963	3475223	1	True				
ANR	3475289	AssignmentExpression	"s += enclen ( enc , s )"		3475223	0		+=			
ANR	3475290	Identifier	s		3475223	0					
ANR	3475291	CallExpression	"enclen ( enc , s )"		3475223	1					
ANR	3475292	Callee	enclen		3475223	0					
ANR	3475293	Identifier	enclen		3475223	0					
ANR	3475294	ArgumentList	enc		3475223	1					
ANR	3475295	Argument	enc		3475223	0					
ANR	3475296	Identifier	enc		3475223	0					
ANR	3475297	Argument	s		3475223	1					
ANR	3475298	Identifier	s		3475223	0					
ANR	3475299	ReturnStatement	return ( UChar * ) NULL ;	2813:2:68972:68992	3475223	6	True				
ANR	3475300	CastExpression	( UChar * ) NULL		3475223	0					
ANR	3475301	CastTarget	UChar *		3475223	0					
ANR	3475302	Identifier	NULL		3475223	1					
ANR	3475303	ReturnType	static UChar *		3475223	1					
ANR	3475304	Identifier	slow_search_ic		3475223	2					
ANR	3475305	ParameterList	"OnigEncoding enc , int case_fold_flag , UChar * target , UChar * target_end , const UChar * text , const UChar * text_end , UChar * text_range"		3475223	3					
ANR	3475306	Parameter	OnigEncoding enc	2792:15:68511:68526	3475223	0	True				
ANR	3475307	ParameterType	OnigEncoding		3475223	0					
ANR	3475308	Identifier	enc		3475223	1					
ANR	3475309	Parameter	int case_fold_flag	2792:33:68529:68546	3475223	1	True				
ANR	3475310	ParameterType	int		3475223	0					
ANR	3475311	Identifier	case_fold_flag		3475223	1					
ANR	3475312	Parameter	UChar * target	2793:8:68557:68569	3475223	2	True				
ANR	3475313	ParameterType	UChar *		3475223	0					
ANR	3475314	Identifier	target		3475223	1					
ANR	3475315	Parameter	UChar * target_end	2793:23:68572:68588	3475223	3	True				
ANR	3475316	ParameterType	UChar *		3475223	0					
ANR	3475317	Identifier	target_end		3475223	1					
ANR	3475318	Parameter	const UChar * text	2794:8:68599:68615	3475223	4	True				
ANR	3475319	ParameterType	const UChar *		3475223	0					
ANR	3475320	Identifier	text		3475223	1					
ANR	3475321	Parameter	const UChar * text_end	2794:27:68618:68638	3475223	5	True				
ANR	3475322	ParameterType	const UChar *		3475223	0					
ANR	3475323	Identifier	text_end		3475223	1					
ANR	3475324	Parameter	UChar * text_range	2794:50:68641:68657	3475223	6	True				
ANR	3475325	ParameterType	UChar *		3475223	0					
ANR	3475326	Identifier	text_range		3475223	1					
ANR	3475327	CFGEntryNode	ENTRY		3475223		True				
ANR	3475328	CFGExitNode	EXIT		3475223		True				
ANR	3475329	Symbol	case_fold_flag		3475223						
ANR	3475330	Symbol	s		3475223						
ANR	3475331	Symbol	NULL		3475223						
ANR	3475332	Symbol	str_lower_case_match		3475223						
ANR	3475333	Symbol	target_end		3475223						
ANR	3475334	Symbol	end		3475223						
ANR	3475335	Symbol	enc		3475223						
ANR	3475336	Symbol	text		3475223						
ANR	3475337	Symbol	text_end		3475223						
ANR	3475338	Symbol	text_range		3475223						
ANR	3475339	Symbol	enclen		3475223						
ANR	3475340	Symbol	target		3475223						
ANR	3475341	Function	slow_search_backward	2816:0:68997:69685							
ANR	3475342	FunctionDef	"slow_search_backward (OnigEncoding enc , UChar * target , UChar * target_end , const UChar * text , const UChar * adjust_text , const UChar * text_end , const UChar * text_start)"		3475341	0					
ANR	3475343	CompoundStatement		2820:0:69191:69685	3475341	0					
ANR	3475344	IdentifierDeclStatement	"UChar * t , * p , * s ;"	2821:2:69195:69211	3475341	0	True				
ANR	3475345	IdentifierDecl	* t		3475341	0					
ANR	3475346	IdentifierDeclType	UChar *		3475341	0					
ANR	3475347	Identifier	t		3475341	1					
ANR	3475348	IdentifierDecl	* p		3475341	1					
ANR	3475349	IdentifierDeclType	UChar *		3475341	0					
ANR	3475350	Identifier	p		3475341	1					
ANR	3475351	IdentifierDecl	* s		3475341	2					
ANR	3475352	IdentifierDeclType	UChar *		3475341	0					
ANR	3475353	Identifier	s		3475341	1					
ANR	3475354	ExpressionStatement	s = ( UChar * ) text_end	2823:2:69216:69237	3475341	1	True				
ANR	3475355	AssignmentExpression	s = ( UChar * ) text_end		3475341	0		=			
ANR	3475356	Identifier	s		3475341	0					
ANR	3475357	CastExpression	( UChar * ) text_end		3475341	1					
ANR	3475358	CastTarget	UChar *		3475341	0					
ANR	3475359	Identifier	text_end		3475341	1					
ANR	3475360	ExpressionStatement	s -= ( target_end - target )	2824:2:69241:69267	3475341	2	True				
ANR	3475361	AssignmentExpression	s -= ( target_end - target )		3475341	0		-=			
ANR	3475362	Identifier	s		3475341	0					
ANR	3475363	AdditiveExpression	target_end - target		3475341	1		-			
ANR	3475364	Identifier	target_end		3475341	0					
ANR	3475365	Identifier	target		3475341	1					
ANR	3475366	IfStatement	if ( s > text_start )		3475341	3					
ANR	3475367	Condition	s > text_start	2825:6:69275:69288	3475341	0	True				
ANR	3475368	RelationalExpression	s > text_start		3475341	0		>			
ANR	3475369	Identifier	s		3475341	0					
ANR	3475370	Identifier	text_start		3475341	1					
ANR	3475371	ExpressionStatement	s = ( UChar * ) text_start	2826:4:69295:69318	3475341	1	True				
ANR	3475372	AssignmentExpression	s = ( UChar * ) text_start		3475341	0		=			
ANR	3475373	Identifier	s		3475341	0					
ANR	3475374	CastExpression	( UChar * ) text_start		3475341	1					
ANR	3475375	CastTarget	UChar *		3475341	0					
ANR	3475376	Identifier	text_start		3475341	1					
ANR	3475377	ElseStatement	else		3475341	0					
ANR	3475378	ExpressionStatement	"s = ONIGENC_LEFT_ADJUST_CHAR_HEAD ( enc , adjust_text , s )"	2828:4:69331:69385	3475341	0	True				
ANR	3475379	AssignmentExpression	"s = ONIGENC_LEFT_ADJUST_CHAR_HEAD ( enc , adjust_text , s )"		3475341	0		=			
ANR	3475380	Identifier	s		3475341	0					
ANR	3475381	CallExpression	"ONIGENC_LEFT_ADJUST_CHAR_HEAD ( enc , adjust_text , s )"		3475341	1					
ANR	3475382	Callee	ONIGENC_LEFT_ADJUST_CHAR_HEAD		3475341	0					
ANR	3475383	Identifier	ONIGENC_LEFT_ADJUST_CHAR_HEAD		3475341	0					
ANR	3475384	ArgumentList	enc		3475341	1					
ANR	3475385	Argument	enc		3475341	0					
ANR	3475386	Identifier	enc		3475341	0					
ANR	3475387	Argument	adjust_text		3475341	1					
ANR	3475388	Identifier	adjust_text		3475341	0					
ANR	3475389	Argument	s		3475341	2					
ANR	3475390	Identifier	s		3475341	0					
ANR	3475391	WhileStatement	while ( s >= text )		3475341	4					
ANR	3475392	Condition	s >= text	2830:9:69397:69405	3475341	0	True				
ANR	3475393	RelationalExpression	s >= text		3475341	0		>=			
ANR	3475394	Identifier	s		3475341	0					
ANR	3475395	Identifier	text		3475341	1					
ANR	3475396	CompoundStatement		11:20:216:216	3475341	1					
ANR	3475397	IfStatement	if ( * s == * target )		3475341	0					
ANR	3475398	Condition	* s == * target	2831:8:69418:69430	3475341	0	True				
ANR	3475399	EqualityExpression	* s == * target		3475341	0		==			
ANR	3475400	UnaryOperationExpression	* s		3475341	0					
ANR	3475401	UnaryOperator	*		3475341	0					
ANR	3475402	Identifier	s		3475341	1					
ANR	3475403	UnaryOperationExpression	* target		3475341	1					
ANR	3475404	UnaryOperator	*		3475341	0					
ANR	3475405	Identifier	target		3475341	1					
ANR	3475406	CompoundStatement		12:23:241:241	3475341	1					
ANR	3475407	ExpressionStatement	p = s + 1	2832:6:69441:69450	3475341	0	True				
ANR	3475408	AssignmentExpression	p = s + 1		3475341	0		=			
ANR	3475409	Identifier	p		3475341	0					
ANR	3475410	AdditiveExpression	s + 1		3475341	1		+			
ANR	3475411	Identifier	s		3475341	0					
ANR	3475412	PrimaryExpression	1		3475341	1					
ANR	3475413	ExpressionStatement	t = target + 1	2833:6:69458:69472	3475341	1	True				
ANR	3475414	AssignmentExpression	t = target + 1		3475341	0		=			
ANR	3475415	Identifier	t		3475341	0					
ANR	3475416	AdditiveExpression	target + 1		3475341	1		+			
ANR	3475417	Identifier	target		3475341	0					
ANR	3475418	PrimaryExpression	1		3475341	1					
ANR	3475419	WhileStatement	while ( t < target_end )		3475341	2					
ANR	3475420	Condition	t < target_end	2834:13:69487:69500	3475341	0	True				
ANR	3475421	RelationalExpression	t < target_end		3475341	0		<			
ANR	3475422	Identifier	t		3475341	0					
ANR	3475423	Identifier	target_end		3475341	1					
ANR	3475424	CompoundStatement		15:29:311:311	3475341	1					
ANR	3475425	IfStatement	if ( * t != * p ++ )		3475341	0					
ANR	3475426	Condition	* t != * p ++	2835:5:69510:69519	3475341	0	True				
ANR	3475427	EqualityExpression	* t != * p ++		3475341	0		!=			
ANR	3475428	UnaryOperationExpression	* t		3475341	0					
ANR	3475429	UnaryOperator	*		3475341	0					
ANR	3475430	Identifier	t		3475341	1					
ANR	3475431	UnaryOperationExpression	* p ++		3475341	1					
ANR	3475432	UnaryOperator	*		3475341	0					
ANR	3475433	PostIncDecOperationExpression	p ++		3475341	1					
ANR	3475434	Identifier	p		3475341	0					
ANR	3475435	IncDec	++		3475341	1					
ANR	3475436	BreakStatement	break ;	2836:3:69525:69530	3475341	1	True				
ANR	3475437	ExpressionStatement	t ++	2837:1:69533:69536	3475341	1	True				
ANR	3475438	PostIncDecOperationExpression	t ++		3475341	0					
ANR	3475439	Identifier	t		3475341	0					
ANR	3475440	IncDec	++		3475341	1					
ANR	3475441	IfStatement	if ( t == target_end )		3475341	3					
ANR	3475442	Condition	t == target_end	2839:10:69556:69570	3475341	0	True				
ANR	3475443	EqualityExpression	t == target_end		3475341	0		==			
ANR	3475444	Identifier	t		3475341	0					
ANR	3475445	Identifier	target_end		3475341	1					
ANR	3475446	ReturnStatement	return s ;	2840:1:69574:69582	3475341	1	True				
ANR	3475447	Identifier	s		3475341	0					
ANR	3475448	ExpressionStatement	"s = ( UChar * ) onigenc_get_prev_char_head ( enc , adjust_text , s )"	2842:4:69594:69654	3475341	1	True				
ANR	3475449	AssignmentExpression	"s = ( UChar * ) onigenc_get_prev_char_head ( enc , adjust_text , s )"		3475341	0		=			
ANR	3475450	Identifier	s		3475341	0					
ANR	3475451	CastExpression	"( UChar * ) onigenc_get_prev_char_head ( enc , adjust_text , s )"		3475341	1					
ANR	3475452	CastTarget	UChar *		3475341	0					
ANR	3475453	CallExpression	"onigenc_get_prev_char_head ( enc , adjust_text , s )"		3475341	1					
ANR	3475454	Callee	onigenc_get_prev_char_head		3475341	0					
ANR	3475455	Identifier	onigenc_get_prev_char_head		3475341	0					
ANR	3475456	ArgumentList	enc		3475341	1					
ANR	3475457	Argument	enc		3475341	0					
ANR	3475458	Identifier	enc		3475341	0					
ANR	3475459	Argument	adjust_text		3475341	1					
ANR	3475460	Identifier	adjust_text		3475341	0					
ANR	3475461	Argument	s		3475341	2					
ANR	3475462	Identifier	s		3475341	0					
ANR	3475463	ReturnStatement	return ( UChar * ) NULL ;	2845:2:69663:69683	3475341	5	True				
ANR	3475464	CastExpression	( UChar * ) NULL		3475341	0					
ANR	3475465	CastTarget	UChar *		3475341	0					
ANR	3475466	Identifier	NULL		3475341	1					
ANR	3475467	ReturnType	static UChar *		3475341	1					
ANR	3475468	Identifier	slow_search_backward		3475341	2					
ANR	3475469	ParameterList	"OnigEncoding enc , UChar * target , UChar * target_end , const UChar * text , const UChar * adjust_text , const UChar * text_end , const UChar * text_start"		3475341	3					
ANR	3475470	Parameter	OnigEncoding enc	2817:21:69032:69047	3475341	0	True				
ANR	3475471	ParameterType	OnigEncoding		3475341	0					
ANR	3475472	Identifier	enc		3475341	1					
ANR	3475473	Parameter	UChar * target	2817:39:69050:69062	3475341	1	True				
ANR	3475474	ParameterType	UChar *		3475341	0					
ANR	3475475	Identifier	target		3475341	1					
ANR	3475476	Parameter	UChar * target_end	2817:54:69065:69081	3475341	2	True				
ANR	3475477	ParameterType	UChar *		3475341	0					
ANR	3475478	Identifier	target_end		3475341	1					
ANR	3475479	Parameter	const UChar * text	2818:7:69091:69107	3475341	3	True				
ANR	3475480	ParameterType	const UChar *		3475341	0					
ANR	3475481	Identifier	text		3475341	1					
ANR	3475482	Parameter	const UChar * adjust_text	2818:26:69110:69133	3475341	4	True				
ANR	3475483	ParameterType	const UChar *		3475341	0					
ANR	3475484	Identifier	adjust_text		3475341	1					
ANR	3475485	Parameter	const UChar * text_end	2819:7:69143:69163	3475341	5	True				
ANR	3475486	ParameterType	const UChar *		3475341	0					
ANR	3475487	Identifier	text_end		3475341	1					
ANR	3475488	Parameter	const UChar * text_start	2819:30:69166:69188	3475341	6	True				
ANR	3475489	ParameterType	const UChar *		3475341	0					
ANR	3475490	Identifier	text_start		3475341	1					
ANR	3475491	CFGEntryNode	ENTRY		3475341		True				
ANR	3475492	CFGExitNode	EXIT		3475341		True				
ANR	3475493	Symbol	NULL		3475341						
ANR	3475494	Symbol	ONIGENC_LEFT_ADJUST_CHAR_HEAD		3475341						
ANR	3475495	Symbol	* p ++		3475341						
ANR	3475496	Symbol	target_end		3475341						
ANR	3475497	Symbol	onigenc_get_prev_char_head		3475341						
ANR	3475498	Symbol	target		3475341						
ANR	3475499	Symbol	p		3475341						
ANR	3475500	Symbol	* target		3475341						
ANR	3475501	Symbol	s		3475341						
ANR	3475502	Symbol	t		3475341						
ANR	3475503	Symbol	adjust_text		3475341						
ANR	3475504	Symbol	enc		3475341						
ANR	3475505	Symbol	text		3475341						
ANR	3475506	Symbol	text_end		3475341						
ANR	3475507	Symbol	* s		3475341						
ANR	3475508	Symbol	text_start		3475341						
ANR	3475509	Symbol	* t		3475341						
ANR	3475510	Function	slow_search_backward_ic	2848:0:69688:70336							
ANR	3475511	FunctionDef	"slow_search_backward_ic (OnigEncoding enc , int case_fold_flag , UChar * target , UChar * target_end , const UChar * text , const UChar * adjust_text , const UChar * text_end , const UChar * text_start)"		3475510	0					
ANR	3475512	CompoundStatement		2853:0:69900:70336	3475510	0					
ANR	3475513	IdentifierDeclStatement	UChar * s ;	2854:2:69904:69912	3475510	0	True				
ANR	3475514	IdentifierDecl	* s		3475510	0					
ANR	3475515	IdentifierDeclType	UChar *		3475510	0					
ANR	3475516	Identifier	s		3475510	1					
ANR	3475517	ExpressionStatement	s = ( UChar * ) text_end	2856:2:69917:69938	3475510	1	True				
ANR	3475518	AssignmentExpression	s = ( UChar * ) text_end		3475510	0		=			
ANR	3475519	Identifier	s		3475510	0					
ANR	3475520	CastExpression	( UChar * ) text_end		3475510	1					
ANR	3475521	CastTarget	UChar *		3475510	0					
ANR	3475522	Identifier	text_end		3475510	1					
ANR	3475523	ExpressionStatement	s -= ( target_end - target )	2857:2:69942:69968	3475510	2	True				
ANR	3475524	AssignmentExpression	s -= ( target_end - target )		3475510	0		-=			
ANR	3475525	Identifier	s		3475510	0					
ANR	3475526	AdditiveExpression	target_end - target		3475510	1		-			
ANR	3475527	Identifier	target_end		3475510	0					
ANR	3475528	Identifier	target		3475510	1					
ANR	3475529	IfStatement	if ( s > text_start )		3475510	3					
ANR	3475530	Condition	s > text_start	2858:6:69976:69989	3475510	0	True				
ANR	3475531	RelationalExpression	s > text_start		3475510	0		>			
ANR	3475532	Identifier	s		3475510	0					
ANR	3475533	Identifier	text_start		3475510	1					
ANR	3475534	ExpressionStatement	s = ( UChar * ) text_start	2859:4:69996:70019	3475510	1	True				
ANR	3475535	AssignmentExpression	s = ( UChar * ) text_start		3475510	0		=			
ANR	3475536	Identifier	s		3475510	0					
ANR	3475537	CastExpression	( UChar * ) text_start		3475510	1					
ANR	3475538	CastTarget	UChar *		3475510	0					
ANR	3475539	Identifier	text_start		3475510	1					
ANR	3475540	ElseStatement	else		3475510	0					
ANR	3475541	ExpressionStatement	"s = ONIGENC_LEFT_ADJUST_CHAR_HEAD ( enc , adjust_text , s )"	2861:4:70032:70086	3475510	0	True				
ANR	3475542	AssignmentExpression	"s = ONIGENC_LEFT_ADJUST_CHAR_HEAD ( enc , adjust_text , s )"		3475510	0		=			
ANR	3475543	Identifier	s		3475510	0					
ANR	3475544	CallExpression	"ONIGENC_LEFT_ADJUST_CHAR_HEAD ( enc , adjust_text , s )"		3475510	1					
ANR	3475545	Callee	ONIGENC_LEFT_ADJUST_CHAR_HEAD		3475510	0					
ANR	3475546	Identifier	ONIGENC_LEFT_ADJUST_CHAR_HEAD		3475510	0					
ANR	3475547	ArgumentList	enc		3475510	1					
ANR	3475548	Argument	enc		3475510	0					
ANR	3475549	Identifier	enc		3475510	0					
ANR	3475550	Argument	adjust_text		3475510	1					
ANR	3475551	Identifier	adjust_text		3475510	0					
ANR	3475552	Argument	s		3475510	2					
ANR	3475553	Identifier	s		3475510	0					
ANR	3475554	WhileStatement	while ( s >= text )		3475510	4					
ANR	3475555	Condition	s >= text	2863:9:70098:70106	3475510	0	True				
ANR	3475556	RelationalExpression	s >= text		3475510	0		>=			
ANR	3475557	Identifier	s		3475510	0					
ANR	3475558	Identifier	text		3475510	1					
ANR	3475559	CompoundStatement		11:20:208:208	3475510	1					
ANR	3475560	IfStatement	"if ( str_lower_case_match ( enc , case_fold_flag , target , target_end , s , text_end ) )"		3475510	0					
ANR	3475561	Condition	"str_lower_case_match ( enc , case_fold_flag , target , target_end , s , text_end )"	2864:8:70119:70221	3475510	0	True				
ANR	3475562	CallExpression	"str_lower_case_match ( enc , case_fold_flag , target , target_end , s , text_end )"		3475510	0					
ANR	3475563	Callee	str_lower_case_match		3475510	0					
ANR	3475564	Identifier	str_lower_case_match		3475510	0					
ANR	3475565	ArgumentList	enc		3475510	1					
ANR	3475566	Argument	enc		3475510	0					
ANR	3475567	Identifier	enc		3475510	0					
ANR	3475568	Argument	case_fold_flag		3475510	1					
ANR	3475569	Identifier	case_fold_flag		3475510	0					
ANR	3475570	Argument	target		3475510	2					
ANR	3475571	Identifier	target		3475510	0					
ANR	3475572	Argument	target_end		3475510	3					
ANR	3475573	Identifier	target_end		3475510	0					
ANR	3475574	Argument	s		3475510	4					
ANR	3475575	Identifier	s		3475510	0					
ANR	3475576	Argument	text_end		3475510	5					
ANR	3475577	Identifier	text_end		3475510	0					
ANR	3475578	ReturnStatement	return s ;	2866:6:70230:70238	3475510	1	True				
ANR	3475579	Identifier	s		3475510	0					
ANR	3475580	ExpressionStatement	"s = ( UChar * ) onigenc_get_prev_char_head ( enc , adjust_text , s )"	2868:4:70245:70305	3475510	1	True				
ANR	3475581	AssignmentExpression	"s = ( UChar * ) onigenc_get_prev_char_head ( enc , adjust_text , s )"		3475510	0		=			
ANR	3475582	Identifier	s		3475510	0					
ANR	3475583	CastExpression	"( UChar * ) onigenc_get_prev_char_head ( enc , adjust_text , s )"		3475510	1					
ANR	3475584	CastTarget	UChar *		3475510	0					
ANR	3475585	CallExpression	"onigenc_get_prev_char_head ( enc , adjust_text , s )"		3475510	1					
ANR	3475586	Callee	onigenc_get_prev_char_head		3475510	0					
ANR	3475587	Identifier	onigenc_get_prev_char_head		3475510	0					
ANR	3475588	ArgumentList	enc		3475510	1					
ANR	3475589	Argument	enc		3475510	0					
ANR	3475590	Identifier	enc		3475510	0					
ANR	3475591	Argument	adjust_text		3475510	1					
ANR	3475592	Identifier	adjust_text		3475510	0					
ANR	3475593	Argument	s		3475510	2					
ANR	3475594	Identifier	s		3475510	0					
ANR	3475595	ReturnStatement	return ( UChar * ) NULL ;	2871:2:70314:70334	3475510	5	True				
ANR	3475596	CastExpression	( UChar * ) NULL		3475510	0					
ANR	3475597	CastTarget	UChar *		3475510	0					
ANR	3475598	Identifier	NULL		3475510	1					
ANR	3475599	ReturnType	static UChar *		3475510	1					
ANR	3475600	Identifier	slow_search_backward_ic		3475510	2					
ANR	3475601	ParameterList	"OnigEncoding enc , int case_fold_flag , UChar * target , UChar * target_end , const UChar * text , const UChar * adjust_text , const UChar * text_end , const UChar * text_start"		3475510	3					
ANR	3475602	Parameter	OnigEncoding enc	2849:24:69726:69741	3475510	0	True				
ANR	3475603	ParameterType	OnigEncoding		3475510	0					
ANR	3475604	Identifier	enc		3475510	1					
ANR	3475605	Parameter	int case_fold_flag	2849:42:69744:69761	3475510	1	True				
ANR	3475606	ParameterType	int		3475510	0					
ANR	3475607	Identifier	case_fold_flag		3475510	1					
ANR	3475608	Parameter	UChar * target	2850:3:69767:69779	3475510	2	True				
ANR	3475609	ParameterType	UChar *		3475510	0					
ANR	3475610	Identifier	target		3475510	1					
ANR	3475611	Parameter	UChar * target_end	2850:18:69782:69798	3475510	3	True				
ANR	3475612	ParameterType	UChar *		3475510	0					
ANR	3475613	Identifier	target_end		3475510	1					
ANR	3475614	Parameter	const UChar * text	2851:3:69804:69820	3475510	4	True				
ANR	3475615	ParameterType	const UChar *		3475510	0					
ANR	3475616	Identifier	text		3475510	1					
ANR	3475617	Parameter	const UChar * adjust_text	2851:22:69823:69846	3475510	5	True				
ANR	3475618	ParameterType	const UChar *		3475510	0					
ANR	3475619	Identifier	adjust_text		3475510	1					
ANR	3475620	Parameter	const UChar * text_end	2852:3:69852:69872	3475510	6	True				
ANR	3475621	ParameterType	const UChar *		3475510	0					
ANR	3475622	Identifier	text_end		3475510	1					
ANR	3475623	Parameter	const UChar * text_start	2852:26:69875:69897	3475510	7	True				
ANR	3475624	ParameterType	const UChar *		3475510	0					
ANR	3475625	Identifier	text_start		3475510	1					
ANR	3475626	CFGEntryNode	ENTRY		3475510		True				
ANR	3475627	CFGExitNode	EXIT		3475510		True				
ANR	3475628	Symbol	NULL		3475510						
ANR	3475629	Symbol	ONIGENC_LEFT_ADJUST_CHAR_HEAD		3475510						
ANR	3475630	Symbol	target_end		3475510						
ANR	3475631	Symbol	onigenc_get_prev_char_head		3475510						
ANR	3475632	Symbol	target		3475510						
ANR	3475633	Symbol	case_fold_flag		3475510						
ANR	3475634	Symbol	s		3475510						
ANR	3475635	Symbol	str_lower_case_match		3475510						
ANR	3475636	Symbol	adjust_text		3475510						
ANR	3475637	Symbol	enc		3475510						
ANR	3475638	Symbol	text		3475510						
ANR	3475639	Symbol	text_end		3475510						
ANR	3475640	Symbol	text_start		3475510						
ANR	3475641	Function	bm_search_notrev	2874:0:70339:71525							
ANR	3475642	FunctionDef	"bm_search_notrev (regex_t * reg , const UChar * target , const UChar * target_end , const UChar * text , const UChar * text_end , const UChar * text_range)"		3475641	0					
ANR	3475643	CompoundStatement		2878:0:70503:71525	3475641	0					
ANR	3475644	IdentifierDeclStatement	"const UChar * s , * se , * t , * p , * end ;"	2879:2:70507:70540	3475641	0	True				
ANR	3475645	IdentifierDecl	* s		3475641	0					
ANR	3475646	IdentifierDeclType	const UChar *		3475641	0					
ANR	3475647	Identifier	s		3475641	1					
ANR	3475648	IdentifierDecl	* se		3475641	1					
ANR	3475649	IdentifierDeclType	const UChar *		3475641	0					
ANR	3475650	Identifier	se		3475641	1					
ANR	3475651	IdentifierDecl	* t		3475641	2					
ANR	3475652	IdentifierDeclType	const UChar *		3475641	0					
ANR	3475653	Identifier	t		3475641	1					
ANR	3475654	IdentifierDecl	* p		3475641	3					
ANR	3475655	IdentifierDeclType	const UChar *		3475641	0					
ANR	3475656	Identifier	p		3475641	1					
ANR	3475657	IdentifierDecl	* end		3475641	4					
ANR	3475658	IdentifierDeclType	const UChar *		3475641	0					
ANR	3475659	Identifier	end		3475641	1					
ANR	3475660	IdentifierDeclStatement	const UChar * tail ;	2880:2:70544:70561	3475641	1	True				
ANR	3475661	IdentifierDecl	* tail		3475641	0					
ANR	3475662	IdentifierDeclType	const UChar *		3475641	0					
ANR	3475663	Identifier	tail		3475641	1					
ANR	3475664	IdentifierDeclStatement	"int skip , tlen1 ;"	2881:2:70565:70580	3475641	2	True				
ANR	3475665	IdentifierDecl	skip		3475641	0					
ANR	3475666	IdentifierDeclType	int		3475641	0					
ANR	3475667	Identifier	skip		3475641	1					
ANR	3475668	IdentifierDecl	tlen1		3475641	1					
ANR	3475669	IdentifierDeclType	int		3475641	0					
ANR	3475670	Identifier	tlen1		3475641	1					
ANR	3475671	ExpressionStatement	"fprintf ( stderr , ""bm_search_notrev: text: %d, text_end: %d, text_range: %d\\n"" , ( int ) text , ( int ) text_end , ( int ) text_range )"	2884:2:70610:70736	3475641	3	True				
ANR	3475672	CallExpression	"fprintf ( stderr , ""bm_search_notrev: text: %d, text_end: %d, text_range: %d\\n"" , ( int ) text , ( int ) text_end , ( int ) text_range )"		3475641	0					
ANR	3475673	Callee	fprintf		3475641	0					
ANR	3475674	Identifier	fprintf		3475641	0					
ANR	3475675	ArgumentList	stderr		3475641	1					
ANR	3475676	Argument	stderr		3475641	0					
ANR	3475677	Identifier	stderr		3475641	0					
ANR	3475678	Argument	"""bm_search_notrev: text: %d, text_end: %d, text_range: %d\\n"""		3475641	1					
ANR	3475679	PrimaryExpression	"""bm_search_notrev: text: %d, text_end: %d, text_range: %d\\n"""		3475641	0					
ANR	3475680	Argument	( int ) text		3475641	2					
ANR	3475681	CastExpression	( int ) text		3475641	0					
ANR	3475682	CastTarget	int		3475641	0					
ANR	3475683	Identifier	text		3475641	1					
ANR	3475684	Argument	( int ) text_end		3475641	3					
ANR	3475685	CastExpression	( int ) text_end		3475641	0					
ANR	3475686	CastTarget	int		3475641	0					
ANR	3475687	Identifier	text_end		3475641	1					
ANR	3475688	Argument	( int ) text_range		3475641	4					
ANR	3475689	CastExpression	( int ) text_range		3475641	0					
ANR	3475690	CastTarget	int		3475641	0					
ANR	3475691	Identifier	text_range		3475641	1					
ANR	3475692	ExpressionStatement	tail = target_end - 1	2888:2:70748:70769	3475641	4	True				
ANR	3475693	AssignmentExpression	tail = target_end - 1		3475641	0		=			
ANR	3475694	Identifier	tail		3475641	0					
ANR	3475695	AdditiveExpression	target_end - 1		3475641	1		-			
ANR	3475696	Identifier	target_end		3475641	0					
ANR	3475697	PrimaryExpression	1		3475641	1					
ANR	3475698	ExpressionStatement	tlen1 = tail - target	2889:2:70773:70794	3475641	5	True				
ANR	3475699	AssignmentExpression	tlen1 = tail - target		3475641	0		=			
ANR	3475700	Identifier	tlen1		3475641	0					
ANR	3475701	AdditiveExpression	tail - target		3475641	1		-			
ANR	3475702	Identifier	tail		3475641	0					
ANR	3475703	Identifier	target		3475641	1					
ANR	3475704	ExpressionStatement	end = text_range	2890:2:70798:70814	3475641	6	True				
ANR	3475705	AssignmentExpression	end = text_range		3475641	0		=			
ANR	3475706	Identifier	end		3475641	0					
ANR	3475707	Identifier	text_range		3475641	1					
ANR	3475708	IfStatement	if ( end + tlen1 > text_end )		3475641	7					
ANR	3475709	Condition	end + tlen1 > text_end	2891:6:70822:70843	3475641	0	True				
ANR	3475710	RelationalExpression	end + tlen1 > text_end		3475641	0		>			
ANR	3475711	AdditiveExpression	end + tlen1		3475641	0		+			
ANR	3475712	Identifier	end		3475641	0					
ANR	3475713	Identifier	tlen1		3475641	1					
ANR	3475714	Identifier	text_end		3475641	1					
ANR	3475715	ExpressionStatement	end = text_end - tlen1	2892:4:70850:70872	3475641	1	True				
ANR	3475716	AssignmentExpression	end = text_end - tlen1		3475641	0		=			
ANR	3475717	Identifier	end		3475641	0					
ANR	3475718	AdditiveExpression	text_end - tlen1		3475641	1		-			
ANR	3475719	Identifier	text_end		3475641	0					
ANR	3475720	Identifier	tlen1		3475641	1					
ANR	3475721	ExpressionStatement	s = text	2894:2:70877:70885	3475641	8	True				
ANR	3475722	AssignmentExpression	s = text		3475641	0		=			
ANR	3475723	Identifier	s		3475641	0					
ANR	3475724	Identifier	text		3475641	1					
ANR	3475725	IfStatement	if ( IS_NULL ( reg -> int_map ) )		3475641	9					
ANR	3475726	Condition	IS_NULL ( reg -> int_map )	2896:6:70894:70914	3475641	0	True				
ANR	3475727	CallExpression	IS_NULL ( reg -> int_map )		3475641	0					
ANR	3475728	Callee	IS_NULL		3475641	0					
ANR	3475729	Identifier	IS_NULL		3475641	0					
ANR	3475730	ArgumentList	reg -> int_map		3475641	1					
ANR	3475731	Argument	reg -> int_map		3475641	0					
ANR	3475732	PtrMemberAccess	reg -> int_map		3475641	0					
ANR	3475733	Identifier	reg		3475641	0					
ANR	3475734	Identifier	int_map		3475641	1					
ANR	3475735	CompoundStatement		19:29:413:413	3475641	1					
ANR	3475736	WhileStatement	while ( s < end )		3475641	0					
ANR	3475737	Condition	s < end	2897:11:70930:70936	3475641	0	True				
ANR	3475738	RelationalExpression	s < end		3475641	0		<			
ANR	3475739	Identifier	s		3475641	0					
ANR	3475740	Identifier	end		3475641	1					
ANR	3475741	CompoundStatement		20:20:435:435	3475641	1					
ANR	3475742	ExpressionStatement	p = se = s + tlen1	2898:6:70947:70965	3475641	0	True				
ANR	3475743	AssignmentExpression	p = se = s + tlen1		3475641	0		=			
ANR	3475744	Identifier	p		3475641	0					
ANR	3475745	AssignmentExpression	se = s + tlen1		3475641	1		=			
ANR	3475746	Identifier	se		3475641	0					
ANR	3475747	AdditiveExpression	s + tlen1		3475641	1		+			
ANR	3475748	Identifier	s		3475641	0					
ANR	3475749	Identifier	tlen1		3475641	1					
ANR	3475750	ExpressionStatement	t = tail	2899:6:70973:70981	3475641	1	True				
ANR	3475751	AssignmentExpression	t = tail		3475641	0		=			
ANR	3475752	Identifier	t		3475641	0					
ANR	3475753	Identifier	tail		3475641	1					
ANR	3475754	WhileStatement	while ( * p == * t )		3475641	2					
ANR	3475755	Condition	* p == * t	2900:13:70996:71003	3475641	0	True				
ANR	3475756	EqualityExpression	* p == * t		3475641	0		==			
ANR	3475757	UnaryOperationExpression	* p		3475641	0					
ANR	3475758	UnaryOperator	*		3475641	0					
ANR	3475759	Identifier	p		3475641	1					
ANR	3475760	UnaryOperationExpression	* t		3475641	1					
ANR	3475761	UnaryOperator	*		3475641	0					
ANR	3475762	Identifier	t		3475641	1					
ANR	3475763	CompoundStatement		23:23:502:502	3475641	1					
ANR	3475764	IfStatement	if ( t == target )		3475641	0					
ANR	3475765	Condition	t == target	2901:5:71013:71023	3475641	0	True				
ANR	3475766	EqualityExpression	t == target		3475641	0		==			
ANR	3475767	Identifier	t		3475641	0					
ANR	3475768	Identifier	target		3475641	1					
ANR	3475769	ReturnStatement	return ( UChar * ) s ;	2901:18:71026:71043	3475641	1	True				
ANR	3475770	CastExpression	( UChar * ) s		3475641	0					
ANR	3475771	CastTarget	UChar *		3475641	0					
ANR	3475772	Identifier	s		3475641	1					
ANR	3475773	ExpressionStatement	p --	2902:1:71046:71049	3475641	1	True				
ANR	3475774	PostIncDecOperationExpression	p --		3475641	0					
ANR	3475775	Identifier	p		3475641	0					
ANR	3475776	IncDec	--		3475641	1					
ANR	3475777	ExpressionStatement	t --	2902:6:71051:71054	3475641	2	True				
ANR	3475778	PostIncDecOperationExpression	t --		3475641	0					
ANR	3475779	Identifier	t		3475641	0					
ANR	3475780	IncDec	--		3475641	1					
ANR	3475781	ExpressionStatement	skip = reg -> map [ * se ]	2904:6:71070:71090	3475641	3	True				
ANR	3475782	AssignmentExpression	skip = reg -> map [ * se ]		3475641	0		=			
ANR	3475783	Identifier	skip		3475641	0					
ANR	3475784	ArrayIndexing	reg -> map [ * se ]		3475641	1					
ANR	3475785	PtrMemberAccess	reg -> map		3475641	0					
ANR	3475786	Identifier	reg		3475641	0					
ANR	3475787	Identifier	map		3475641	1					
ANR	3475788	UnaryOperationExpression	* se		3475641	1					
ANR	3475789	UnaryOperator	*		3475641	0					
ANR	3475790	Identifier	se		3475641	1					
ANR	3475791	ExpressionStatement	t = s	2905:6:71098:71103	3475641	4	True				
ANR	3475792	AssignmentExpression	t = s		3475641	0		=			
ANR	3475793	Identifier	t		3475641	0					
ANR	3475794	Identifier	s		3475641	1					
ANR	3475795	DoStatement	do		3475641	5					
ANR	3475796	CompoundStatement		29:9:610:610	3475641	0					
ANR	3475797	ExpressionStatement	"s += enclen ( reg -> enc , s )"	2907:8:71124:71148	3475641	0	True				
ANR	3475798	AssignmentExpression	"s += enclen ( reg -> enc , s )"		3475641	0		+=			
ANR	3475799	Identifier	s		3475641	0					
ANR	3475800	CallExpression	"enclen ( reg -> enc , s )"		3475641	1					
ANR	3475801	Callee	enclen		3475641	0					
ANR	3475802	Identifier	enclen		3475641	0					
ANR	3475803	ArgumentList	reg -> enc		3475641	1					
ANR	3475804	Argument	reg -> enc		3475641	0					
ANR	3475805	PtrMemberAccess	reg -> enc		3475641	0					
ANR	3475806	Identifier	reg		3475641	0					
ANR	3475807	Identifier	enc		3475641	1					
ANR	3475808	Argument	s		3475641	1					
ANR	3475809	Identifier	s		3475641	0					
ANR	3475810	Condition	( s - t ) < skip && s < end	2908:15:71165:71189	3475641	1	True				
ANR	3475811	AndExpression	( s - t ) < skip && s < end		3475641	0		&&			
ANR	3475812	RelationalExpression	( s - t ) < skip		3475641	0		<			
ANR	3475813	AdditiveExpression	s - t		3475641	0		-			
ANR	3475814	Identifier	s		3475641	0					
ANR	3475815	Identifier	t		3475641	1					
ANR	3475816	Identifier	skip		3475641	1					
ANR	3475817	RelationalExpression	s < end		3475641	1		<			
ANR	3475818	Identifier	s		3475641	0					
ANR	3475819	Identifier	end		3475641	1					
ANR	3475820	ElseStatement	else		3475641	0					
ANR	3475821	CompoundStatement		34:7:706:706	3475641	0					
ANR	3475822	WhileStatement	while ( s < end )		3475641	0					
ANR	3475823	Condition	s < end	2912:11:71223:71229	3475641	0	True				
ANR	3475824	RelationalExpression	s < end		3475641	0		<			
ANR	3475825	Identifier	s		3475641	0					
ANR	3475826	Identifier	end		3475641	1					
ANR	3475827	CompoundStatement		35:20:728:728	3475641	1					
ANR	3475828	ExpressionStatement	p = se = s + tlen1	2913:6:71240:71258	3475641	0	True				
ANR	3475829	AssignmentExpression	p = se = s + tlen1		3475641	0		=			
ANR	3475830	Identifier	p		3475641	0					
ANR	3475831	AssignmentExpression	se = s + tlen1		3475641	1		=			
ANR	3475832	Identifier	se		3475641	0					
ANR	3475833	AdditiveExpression	s + tlen1		3475641	1		+			
ANR	3475834	Identifier	s		3475641	0					
ANR	3475835	Identifier	tlen1		3475641	1					
ANR	3475836	ExpressionStatement	t = tail	2914:6:71266:71274	3475641	1	True				
ANR	3475837	AssignmentExpression	t = tail		3475641	0		=			
ANR	3475838	Identifier	t		3475641	0					
ANR	3475839	Identifier	tail		3475641	1					
ANR	3475840	WhileStatement	while ( * p == * t )		3475641	2					
ANR	3475841	Condition	* p == * t	2915:13:71289:71296	3475641	0	True				
ANR	3475842	EqualityExpression	* p == * t		3475641	0		==			
ANR	3475843	UnaryOperationExpression	* p		3475641	0					
ANR	3475844	UnaryOperator	*		3475641	0					
ANR	3475845	Identifier	p		3475641	1					
ANR	3475846	UnaryOperationExpression	* t		3475641	1					
ANR	3475847	UnaryOperator	*		3475641	0					
ANR	3475848	Identifier	t		3475641	1					
ANR	3475849	CompoundStatement		38:23:795:795	3475641	1					
ANR	3475850	IfStatement	if ( t == target )		3475641	0					
ANR	3475851	Condition	t == target	2916:5:71306:71316	3475641	0	True				
ANR	3475852	EqualityExpression	t == target		3475641	0		==			
ANR	3475853	Identifier	t		3475641	0					
ANR	3475854	Identifier	target		3475641	1					
ANR	3475855	ReturnStatement	return ( UChar * ) s ;	2916:18:71319:71336	3475641	1	True				
ANR	3475856	CastExpression	( UChar * ) s		3475641	0					
ANR	3475857	CastTarget	UChar *		3475641	0					
ANR	3475858	Identifier	s		3475641	1					
ANR	3475859	ExpressionStatement	p --	2917:1:71339:71342	3475641	1	True				
ANR	3475860	PostIncDecOperationExpression	p --		3475641	0					
ANR	3475861	Identifier	p		3475641	0					
ANR	3475862	IncDec	--		3475641	1					
ANR	3475863	ExpressionStatement	t --	2917:6:71344:71347	3475641	2	True				
ANR	3475864	PostIncDecOperationExpression	t --		3475641	0					
ANR	3475865	Identifier	t		3475641	0					
ANR	3475866	IncDec	--		3475641	1					
ANR	3475867	ExpressionStatement	skip = reg -> int_map [ * se ]	2919:6:71363:71387	3475641	3	True				
ANR	3475868	AssignmentExpression	skip = reg -> int_map [ * se ]		3475641	0		=			
ANR	3475869	Identifier	skip		3475641	0					
ANR	3475870	ArrayIndexing	reg -> int_map [ * se ]		3475641	1					
ANR	3475871	PtrMemberAccess	reg -> int_map		3475641	0					
ANR	3475872	Identifier	reg		3475641	0					
ANR	3475873	Identifier	int_map		3475641	1					
ANR	3475874	UnaryOperationExpression	* se		3475641	1					
ANR	3475875	UnaryOperator	*		3475641	0					
ANR	3475876	Identifier	se		3475641	1					
ANR	3475877	ExpressionStatement	t = s	2920:6:71395:71400	3475641	4	True				
ANR	3475878	AssignmentExpression	t = s		3475641	0		=			
ANR	3475879	Identifier	t		3475641	0					
ANR	3475880	Identifier	s		3475641	1					
ANR	3475881	DoStatement	do		3475641	5					
ANR	3475882	CompoundStatement		44:9:907:907	3475641	0					
ANR	3475883	ExpressionStatement	"s += enclen ( reg -> enc , s )"	2922:8:71421:71445	3475641	0	True				
ANR	3475884	AssignmentExpression	"s += enclen ( reg -> enc , s )"		3475641	0		+=			
ANR	3475885	Identifier	s		3475641	0					
ANR	3475886	CallExpression	"enclen ( reg -> enc , s )"		3475641	1					
ANR	3475887	Callee	enclen		3475641	0					
ANR	3475888	Identifier	enclen		3475641	0					
ANR	3475889	ArgumentList	reg -> enc		3475641	1					
ANR	3475890	Argument	reg -> enc		3475641	0					
ANR	3475891	PtrMemberAccess	reg -> enc		3475641	0					
ANR	3475892	Identifier	reg		3475641	0					
ANR	3475893	Identifier	enc		3475641	1					
ANR	3475894	Argument	s		3475641	1					
ANR	3475895	Identifier	s		3475641	0					
ANR	3475896	Condition	( s - t ) < skip && s < end	2923:15:71462:71486	3475641	1	True				
ANR	3475897	AndExpression	( s - t ) < skip && s < end		3475641	0		&&			
ANR	3475898	RelationalExpression	( s - t ) < skip		3475641	0		<			
ANR	3475899	AdditiveExpression	s - t		3475641	0		-			
ANR	3475900	Identifier	s		3475641	0					
ANR	3475901	Identifier	t		3475641	1					
ANR	3475902	Identifier	skip		3475641	1					
ANR	3475903	RelationalExpression	s < end		3475641	1		<			
ANR	3475904	Identifier	s		3475641	0					
ANR	3475905	Identifier	end		3475641	1					
ANR	3475906	ReturnStatement	return ( UChar * ) NULL ;	2927:2:71503:71523	3475641	10	True				
ANR	3475907	CastExpression	( UChar * ) NULL		3475641	0					
ANR	3475908	CastTarget	UChar *		3475641	0					
ANR	3475909	Identifier	NULL		3475641	1					
ANR	3475910	ReturnType	static UChar *		3475641	1					
ANR	3475911	Identifier	bm_search_notrev		3475641	2					
ANR	3475912	ParameterList	"regex_t * reg , const UChar * target , const UChar * target_end , const UChar * text , const UChar * text_end , const UChar * text_range"		3475641	3					
ANR	3475913	Parameter	regex_t * reg	2875:17:70370:70381	3475641	0	True				
ANR	3475914	ParameterType	regex_t *		3475641	0					
ANR	3475915	Identifier	reg		3475641	1					
ANR	3475916	Parameter	const UChar * target	2875:31:70384:70402	3475641	1	True				
ANR	3475917	ParameterType	const UChar *		3475641	0					
ANR	3475918	Identifier	target		3475641	1					
ANR	3475919	Parameter	const UChar * target_end	2875:52:70405:70427	3475641	2	True				
ANR	3475920	ParameterType	const UChar *		3475641	0					
ANR	3475921	Identifier	target_end		3475641	1					
ANR	3475922	Parameter	const UChar * text	2876:3:70433:70449	3475641	3	True				
ANR	3475923	ParameterType	const UChar *		3475641	0					
ANR	3475924	Identifier	text		3475641	1					
ANR	3475925	Parameter	const UChar * text_end	2876:22:70452:70472	3475641	4	True				
ANR	3475926	ParameterType	const UChar *		3475641	0					
ANR	3475927	Identifier	text_end		3475641	1					
ANR	3475928	Parameter	const UChar * text_range	2877:3:70478:70500	3475641	5	True				
ANR	3475929	ParameterType	const UChar *		3475641	0					
ANR	3475930	Identifier	text_range		3475641	1					
ANR	3475931	CFGEntryNode	ENTRY		3475641		True				
ANR	3475932	CFGExitNode	EXIT		3475641		True				
ANR	3475933	Symbol	skip		3475641						
ANR	3475934	Symbol	se		3475641						
ANR	3475935	Symbol	IS_NULL		3475641						
ANR	3475936	Symbol	reg		3475641						
ANR	3475937	Symbol	end		3475641						
ANR	3475938	Symbol	text		3475641						
ANR	3475939	Symbol	* se		3475641						
ANR	3475940	Symbol	text_range		3475641						
ANR	3475941	Symbol	reg -> map		3475641						
ANR	3475942	Symbol	NULL		3475641						
ANR	3475943	Symbol	tlen1		3475641						
ANR	3475944	Symbol	tail		3475641						
ANR	3475945	Symbol	target_end		3475641						
ANR	3475946	Symbol	* * reg		3475641						
ANR	3475947	Symbol	* reg -> int_map		3475641						
ANR	3475948	Symbol	stderr		3475641						
ANR	3475949	Symbol	enclen		3475641						
ANR	3475950	Symbol	target		3475641						
ANR	3475951	Symbol	reg -> enc		3475641						
ANR	3475952	Symbol	p		3475641						
ANR	3475953	Symbol	reg -> int_map		3475641						
ANR	3475954	Symbol	s		3475641						
ANR	3475955	Symbol	t		3475641						
ANR	3475956	Symbol	* p		3475641						
ANR	3475957	Symbol	text_end		3475641						
ANR	3475958	Symbol	* reg -> map		3475641						
ANR	3475959	Symbol	* * se		3475641						
ANR	3475960	Symbol	* reg		3475641						
ANR	3475961	Symbol	* t		3475641						
ANR	3475962	Function	bm_search	2930:0:71528:72316							
ANR	3475963	FunctionDef	"bm_search (regex_t * reg , const UChar * target , const UChar * target_end , const UChar * text , const UChar * text_end , const UChar * text_range)"		3475962	0					
ANR	3475964	CompoundStatement		2933:0:71682:72316	3475962	0					
ANR	3475965	IdentifierDeclStatement	"const UChar * s , * t , * p , * end ;"	2934:2:71686:71714	3475962	0	True				
ANR	3475966	IdentifierDecl	* s		3475962	0					
ANR	3475967	IdentifierDeclType	const UChar *		3475962	0					
ANR	3475968	Identifier	s		3475962	1					
ANR	3475969	IdentifierDecl	* t		3475962	1					
ANR	3475970	IdentifierDeclType	const UChar *		3475962	0					
ANR	3475971	Identifier	t		3475962	1					
ANR	3475972	IdentifierDecl	* p		3475962	2					
ANR	3475973	IdentifierDeclType	const UChar *		3475962	0					
ANR	3475974	Identifier	p		3475962	1					
ANR	3475975	IdentifierDecl	* end		3475962	3					
ANR	3475976	IdentifierDeclType	const UChar *		3475962	0					
ANR	3475977	Identifier	end		3475962	1					
ANR	3475978	IdentifierDeclStatement	const UChar * tail ;	2935:2:71718:71735	3475962	1	True				
ANR	3475979	IdentifierDecl	* tail		3475962	0					
ANR	3475980	IdentifierDeclType	const UChar *		3475962	0					
ANR	3475981	Identifier	tail		3475962	1					
ANR	3475982	ExpressionStatement	end = text_range + ( target_end - target ) - 1	2937:2:71740:71784	3475962	2	True				
ANR	3475983	AssignmentExpression	end = text_range + ( target_end - target ) - 1		3475962	0		=			
ANR	3475984	Identifier	end		3475962	0					
ANR	3475985	AdditiveExpression	text_range + ( target_end - target ) - 1		3475962	1		+			
ANR	3475986	Identifier	text_range		3475962	0					
ANR	3475987	AdditiveExpression	( target_end - target ) - 1		3475962	1		-			
ANR	3475988	AdditiveExpression	target_end - target		3475962	0		-			
ANR	3475989	Identifier	target_end		3475962	0					
ANR	3475990	Identifier	target		3475962	1					
ANR	3475991	PrimaryExpression	1		3475962	1					
ANR	3475992	IfStatement	if ( end > text_end )		3475962	3					
ANR	3475993	Condition	end > text_end	2938:6:71792:71805	3475962	0	True				
ANR	3475994	RelationalExpression	end > text_end		3475962	0		>			
ANR	3475995	Identifier	end		3475962	0					
ANR	3475996	Identifier	text_end		3475962	1					
ANR	3475997	ExpressionStatement	end = text_end	2939:4:71812:71826	3475962	1	True				
ANR	3475998	AssignmentExpression	end = text_end		3475962	0		=			
ANR	3475999	Identifier	end		3475962	0					
ANR	3476000	Identifier	text_end		3475962	1					
ANR	3476001	ExpressionStatement	tail = target_end - 1	2941:2:71831:71852	3475962	4	True				
ANR	3476002	AssignmentExpression	tail = target_end - 1		3475962	0		=			
ANR	3476003	Identifier	tail		3475962	0					
ANR	3476004	AdditiveExpression	target_end - 1		3475962	1		-			
ANR	3476005	Identifier	target_end		3475962	0					
ANR	3476006	PrimaryExpression	1		3475962	1					
ANR	3476007	ExpressionStatement	s = text + ( target_end - target ) - 1	2942:2:71856:71892	3475962	5	True				
ANR	3476008	AssignmentExpression	s = text + ( target_end - target ) - 1		3475962	0		=			
ANR	3476009	Identifier	s		3475962	0					
ANR	3476010	AdditiveExpression	text + ( target_end - target ) - 1		3475962	1		+			
ANR	3476011	Identifier	text		3475962	0					
ANR	3476012	AdditiveExpression	( target_end - target ) - 1		3475962	1		-			
ANR	3476013	AdditiveExpression	target_end - target		3475962	0		-			
ANR	3476014	Identifier	target_end		3475962	0					
ANR	3476015	Identifier	target		3475962	1					
ANR	3476016	PrimaryExpression	1		3475962	1					
ANR	3476017	IfStatement	if ( IS_NULL ( reg -> int_map ) )		3475962	6					
ANR	3476018	Condition	IS_NULL ( reg -> int_map )	2943:6:71900:71920	3475962	0	True				
ANR	3476019	CallExpression	IS_NULL ( reg -> int_map )		3475962	0					
ANR	3476020	Callee	IS_NULL		3475962	0					
ANR	3476021	Identifier	IS_NULL		3475962	0					
ANR	3476022	ArgumentList	reg -> int_map		3475962	1					
ANR	3476023	Argument	reg -> int_map		3475962	0					
ANR	3476024	PtrMemberAccess	reg -> int_map		3475962	0					
ANR	3476025	Identifier	reg		3475962	0					
ANR	3476026	Identifier	int_map		3475962	1					
ANR	3476027	CompoundStatement		11:29:240:240	3475962	1					
ANR	3476028	WhileStatement	while ( s < end )		3475962	0					
ANR	3476029	Condition	s < end	2944:11:71936:71942	3475962	0	True				
ANR	3476030	RelationalExpression	s < end		3475962	0		<			
ANR	3476031	Identifier	s		3475962	0					
ANR	3476032	Identifier	end		3475962	1					
ANR	3476033	CompoundStatement		12:20:262:262	3475962	1					
ANR	3476034	ExpressionStatement	p = s	2945:6:71953:71958	3475962	0	True				
ANR	3476035	AssignmentExpression	p = s		3475962	0		=			
ANR	3476036	Identifier	p		3475962	0					
ANR	3476037	Identifier	s		3475962	1					
ANR	3476038	ExpressionStatement	t = tail	2946:6:71966:71974	3475962	1	True				
ANR	3476039	AssignmentExpression	t = tail		3475962	0		=			
ANR	3476040	Identifier	t		3475962	0					
ANR	3476041	Identifier	tail		3475962	1					
ANR	3476042	WhileStatement	while ( * p == * t )		3475962	2					
ANR	3476043	Condition	* p == * t	2947:13:71989:71996	3475962	0	True				
ANR	3476044	EqualityExpression	* p == * t		3475962	0		==			
ANR	3476045	UnaryOperationExpression	* p		3475962	0					
ANR	3476046	UnaryOperator	*		3475962	0					
ANR	3476047	Identifier	p		3475962	1					
ANR	3476048	UnaryOperationExpression	* t		3475962	1					
ANR	3476049	UnaryOperator	*		3475962	0					
ANR	3476050	Identifier	t		3475962	1					
ANR	3476051	CompoundStatement		15:23:316:316	3475962	1					
ANR	3476052	IfStatement	if ( t == target )		3475962	0					
ANR	3476053	Condition	t == target	2948:5:72006:72016	3475962	0	True				
ANR	3476054	EqualityExpression	t == target		3475962	0		==			
ANR	3476055	Identifier	t		3475962	0					
ANR	3476056	Identifier	target		3475962	1					
ANR	3476057	ReturnStatement	return ( UChar * ) p ;	2948:18:72019:72036	3475962	1	True				
ANR	3476058	CastExpression	( UChar * ) p		3475962	0					
ANR	3476059	CastTarget	UChar *		3475962	0					
ANR	3476060	Identifier	p		3475962	1					
ANR	3476061	ExpressionStatement	p --	2949:1:72039:72042	3475962	1	True				
ANR	3476062	PostIncDecOperationExpression	p --		3475962	0					
ANR	3476063	Identifier	p		3475962	0					
ANR	3476064	IncDec	--		3475962	1					
ANR	3476065	ExpressionStatement	t --	2949:6:72044:72047	3475962	2	True				
ANR	3476066	PostIncDecOperationExpression	t --		3475962	0					
ANR	3476067	Identifier	t		3475962	0					
ANR	3476068	IncDec	--		3475962	1					
ANR	3476069	ExpressionStatement	s += reg -> map [ * s ]	2951:6:72063:72080	3475962	3	True				
ANR	3476070	AssignmentExpression	s += reg -> map [ * s ]		3475962	0		+=			
ANR	3476071	Identifier	s		3475962	0					
ANR	3476072	ArrayIndexing	reg -> map [ * s ]		3475962	1					
ANR	3476073	PtrMemberAccess	reg -> map		3475962	0					
ANR	3476074	Identifier	reg		3475962	0					
ANR	3476075	Identifier	map		3475962	1					
ANR	3476076	UnaryOperationExpression	* s		3475962	1					
ANR	3476077	UnaryOperator	*		3475962	0					
ANR	3476078	Identifier	s		3475962	1					
ANR	3476079	ElseStatement	else		3475962	0					
ANR	3476080	CompoundStatement		22:7:416:416	3475962	0					
ANR	3476081	WhileStatement	while ( s < end )		3475962	0					
ANR	3476082	Condition	s < end	2955:11:72132:72138	3475962	0	True				
ANR	3476083	RelationalExpression	s < end		3475962	0		<			
ANR	3476084	Identifier	s		3475962	0					
ANR	3476085	Identifier	end		3475962	1					
ANR	3476086	CompoundStatement		23:20:458:458	3475962	1					
ANR	3476087	ExpressionStatement	p = s	2956:6:72149:72154	3475962	0	True				
ANR	3476088	AssignmentExpression	p = s		3475962	0		=			
ANR	3476089	Identifier	p		3475962	0					
ANR	3476090	Identifier	s		3475962	1					
ANR	3476091	ExpressionStatement	t = tail	2957:6:72162:72170	3475962	1	True				
ANR	3476092	AssignmentExpression	t = tail		3475962	0		=			
ANR	3476093	Identifier	t		3475962	0					
ANR	3476094	Identifier	tail		3475962	1					
ANR	3476095	WhileStatement	while ( * p == * t )		3475962	2					
ANR	3476096	Condition	* p == * t	2958:13:72185:72192	3475962	0	True				
ANR	3476097	EqualityExpression	* p == * t		3475962	0		==			
ANR	3476098	UnaryOperationExpression	* p		3475962	0					
ANR	3476099	UnaryOperator	*		3475962	0					
ANR	3476100	Identifier	p		3475962	1					
ANR	3476101	UnaryOperationExpression	* t		3475962	1					
ANR	3476102	UnaryOperator	*		3475962	0					
ANR	3476103	Identifier	t		3475962	1					
ANR	3476104	CompoundStatement		26:23:512:512	3475962	1					
ANR	3476105	IfStatement	if ( t == target )		3475962	0					
ANR	3476106	Condition	t == target	2959:5:72202:72212	3475962	0	True				
ANR	3476107	EqualityExpression	t == target		3475962	0		==			
ANR	3476108	Identifier	t		3475962	0					
ANR	3476109	Identifier	target		3475962	1					
ANR	3476110	ReturnStatement	return ( UChar * ) p ;	2959:18:72215:72232	3475962	1	True				
ANR	3476111	CastExpression	( UChar * ) p		3475962	0					
ANR	3476112	CastTarget	UChar *		3475962	0					
ANR	3476113	Identifier	p		3475962	1					
ANR	3476114	ExpressionStatement	p --	2960:1:72235:72238	3475962	1	True				
ANR	3476115	PostIncDecOperationExpression	p --		3475962	0					
ANR	3476116	Identifier	p		3475962	0					
ANR	3476117	IncDec	--		3475962	1					
ANR	3476118	ExpressionStatement	t --	2960:6:72240:72243	3475962	2	True				
ANR	3476119	PostIncDecOperationExpression	t --		3475962	0					
ANR	3476120	Identifier	t		3475962	0					
ANR	3476121	IncDec	--		3475962	1					
ANR	3476122	ExpressionStatement	s += reg -> int_map [ * s ]	2962:6:72259:72280	3475962	3	True				
ANR	3476123	AssignmentExpression	s += reg -> int_map [ * s ]		3475962	0		+=			
ANR	3476124	Identifier	s		3475962	0					
ANR	3476125	ArrayIndexing	reg -> int_map [ * s ]		3475962	1					
ANR	3476126	PtrMemberAccess	reg -> int_map		3475962	0					
ANR	3476127	Identifier	reg		3475962	0					
ANR	3476128	Identifier	int_map		3475962	1					
ANR	3476129	UnaryOperationExpression	* s		3475962	1					
ANR	3476130	UnaryOperator	*		3475962	0					
ANR	3476131	Identifier	s		3475962	1					
ANR	3476132	ReturnStatement	return ( UChar * ) NULL ;	2965:2:72294:72314	3475962	7	True				
ANR	3476133	CastExpression	( UChar * ) NULL		3475962	0					
ANR	3476134	CastTarget	UChar *		3475962	0					
ANR	3476135	Identifier	NULL		3475962	1					
ANR	3476136	ReturnType	static UChar *		3475962	1					
ANR	3476137	Identifier	bm_search		3475962	2					
ANR	3476138	ParameterList	"regex_t * reg , const UChar * target , const UChar * target_end , const UChar * text , const UChar * text_end , const UChar * text_range"		3475962	3					
ANR	3476139	Parameter	regex_t * reg	2931:10:71552:71563	3475962	0	True				
ANR	3476140	ParameterType	regex_t *		3475962	0					
ANR	3476141	Identifier	reg		3475962	1					
ANR	3476142	Parameter	const UChar * target	2931:24:71566:71584	3475962	1	True				
ANR	3476143	ParameterType	const UChar *		3475962	0					
ANR	3476144	Identifier	target		3475962	1					
ANR	3476145	Parameter	const UChar * target_end	2931:45:71587:71609	3475962	2	True				
ANR	3476146	ParameterType	const UChar *		3475962	0					
ANR	3476147	Identifier	target_end		3475962	1					
ANR	3476148	Parameter	const UChar * text	2932:3:71615:71631	3475962	3	True				
ANR	3476149	ParameterType	const UChar *		3475962	0					
ANR	3476150	Identifier	text		3475962	1					
ANR	3476151	Parameter	const UChar * text_end	2932:22:71634:71654	3475962	4	True				
ANR	3476152	ParameterType	const UChar *		3475962	0					
ANR	3476153	Identifier	text_end		3475962	1					
ANR	3476154	Parameter	const UChar * text_range	2932:45:71657:71679	3475962	5	True				
ANR	3476155	ParameterType	const UChar *		3475962	0					
ANR	3476156	Identifier	text_range		3475962	1					
ANR	3476157	CFGEntryNode	ENTRY		3475962		True				
ANR	3476158	CFGExitNode	EXIT		3475962		True				
ANR	3476159	Symbol	reg -> map		3475962						
ANR	3476160	Symbol	NULL		3475962						
ANR	3476161	Symbol	tail		3475962						
ANR	3476162	Symbol	target_end		3475962						
ANR	3476163	Symbol	* * reg		3475962						
ANR	3476164	Symbol	* reg -> int_map		3475962						
ANR	3476165	Symbol	target		3475962						
ANR	3476166	Symbol	p		3475962						
ANR	3476167	Symbol	reg -> int_map		3475962						
ANR	3476168	Symbol	s		3475962						
ANR	3476169	Symbol	t		3475962						
ANR	3476170	Symbol	IS_NULL		3475962						
ANR	3476171	Symbol	reg		3475962						
ANR	3476172	Symbol	* * s		3475962						
ANR	3476173	Symbol	end		3475962						
ANR	3476174	Symbol	* p		3475962						
ANR	3476175	Symbol	text		3475962						
ANR	3476176	Symbol	text_end		3475962						
ANR	3476177	Symbol	* reg -> map		3475962						
ANR	3476178	Symbol	text_range		3475962						
ANR	3476179	Symbol	* s		3475962						
ANR	3476180	Symbol	* reg		3475962						
ANR	3476181	Symbol	* t		3475962						
ANR	3476182	Function	set_bm_backward_skip	2968:0:72319:72739							
ANR	3476183	FunctionDef	"set_bm_backward_skip (UChar * s , UChar * end , OnigEncoding enc ARG_UNUSED , int * * skip)"		3476182	0					
ANR	3476184	CompoundStatement		2972:0:72429:72739	3476182	0					
ANR	3476185	IdentifierDeclStatement	"int i , len ;"	2973:2:72433:72443	3476182	0	True				
ANR	3476186	IdentifierDecl	i		3476182	0					
ANR	3476187	IdentifierDeclType	int		3476182	0					
ANR	3476188	Identifier	i		3476182	1					
ANR	3476189	IdentifierDecl	len		3476182	1					
ANR	3476190	IdentifierDeclType	int		3476182	0					
ANR	3476191	Identifier	len		3476182	1					
ANR	3476192	IfStatement	if ( IS_NULL ( * skip ) )		3476182	1					
ANR	3476193	Condition	IS_NULL ( * skip )	2975:6:72452:72465	3476182	0	True				
ANR	3476194	CallExpression	IS_NULL ( * skip )		3476182	0					
ANR	3476195	Callee	IS_NULL		3476182	0					
ANR	3476196	Identifier	IS_NULL		3476182	0					
ANR	3476197	ArgumentList	* skip		3476182	1					
ANR	3476198	Argument	* skip		3476182	0					
ANR	3476199	UnaryOperationExpression	* skip		3476182	0					
ANR	3476200	UnaryOperator	*		3476182	0					
ANR	3476201	Identifier	skip		3476182	1					
ANR	3476202	CompoundStatement		4:22:38:38	3476182	1					
ANR	3476203	ExpressionStatement	* skip = ( int * ) xmalloc ( sizeof ( int ) * ONIG_CHAR_TABLE_SIZE )	2976:4:72474:72532	3476182	0	True				
ANR	3476204	AssignmentExpression	* skip = ( int * ) xmalloc ( sizeof ( int ) * ONIG_CHAR_TABLE_SIZE )		3476182	0		=			
ANR	3476205	UnaryOperationExpression	* skip		3476182	0					
ANR	3476206	UnaryOperator	*		3476182	0					
ANR	3476207	Identifier	skip		3476182	1					
ANR	3476208	CastExpression	( int * ) xmalloc ( sizeof ( int ) * ONIG_CHAR_TABLE_SIZE )		3476182	1					
ANR	3476209	CastTarget	int *		3476182	0					
ANR	3476210	CallExpression	xmalloc ( sizeof ( int ) * ONIG_CHAR_TABLE_SIZE )		3476182	1					
ANR	3476211	Callee	xmalloc		3476182	0					
ANR	3476212	Identifier	xmalloc		3476182	0					
ANR	3476213	ArgumentList	sizeof ( int ) * ONIG_CHAR_TABLE_SIZE		3476182	1					
ANR	3476214	Argument	sizeof ( int ) * ONIG_CHAR_TABLE_SIZE		3476182	0					
ANR	3476215	MultiplicativeExpression	sizeof ( int ) * ONIG_CHAR_TABLE_SIZE		3476182	0		*			
ANR	3476216	SizeofExpression	sizeof ( int )		3476182	0					
ANR	3476217	Sizeof	sizeof		3476182	0					
ANR	3476218	SizeofOperand	int		3476182	1					
ANR	3476219	Identifier	ONIG_CHAR_TABLE_SIZE		3476182	1					
ANR	3476220	IfStatement	if ( IS_NULL ( * skip ) )		3476182	1					
ANR	3476221	Condition	IS_NULL ( * skip )	2977:8:72542:72555	3476182	0	True				
ANR	3476222	CallExpression	IS_NULL ( * skip )		3476182	0					
ANR	3476223	Callee	IS_NULL		3476182	0					
ANR	3476224	Identifier	IS_NULL		3476182	0					
ANR	3476225	ArgumentList	* skip		3476182	1					
ANR	3476226	Argument	* skip		3476182	0					
ANR	3476227	UnaryOperationExpression	* skip		3476182	0					
ANR	3476228	UnaryOperator	*		3476182	0					
ANR	3476229	Identifier	skip		3476182	1					
ANR	3476230	ReturnStatement	return ONIGERR_MEMORY ;	2977:24:72558:72579	3476182	1	True				
ANR	3476231	Identifier	ONIGERR_MEMORY		3476182	0					
ANR	3476232	ExpressionStatement	len = end - s	2980:2:72588:72601	3476182	2	True				
ANR	3476233	AssignmentExpression	len = end - s		3476182	0		=			
ANR	3476234	Identifier	len		3476182	0					
ANR	3476235	AdditiveExpression	end - s		3476182	1		-			
ANR	3476236	Identifier	end		3476182	0					
ANR	3476237	Identifier	s		3476182	1					
ANR	3476238	ForStatement	for ( i = 0 ; i < ONIG_CHAR_TABLE_SIZE ; i ++ )		3476182	3					
ANR	3476239	ForInit	i = 0 ;	2981:7:72610:72615	3476182	0	True				
ANR	3476240	AssignmentExpression	i = 0		3476182	0		=			
ANR	3476241	Identifier	i		3476182	0					
ANR	3476242	PrimaryExpression	0		3476182	1					
ANR	3476243	Condition	i < ONIG_CHAR_TABLE_SIZE	2981:14:72617:72640	3476182	1	True				
ANR	3476244	RelationalExpression	i < ONIG_CHAR_TABLE_SIZE		3476182	0		<			
ANR	3476245	Identifier	i		3476182	0					
ANR	3476246	Identifier	ONIG_CHAR_TABLE_SIZE		3476182	1					
ANR	3476247	PostIncDecOperationExpression	i ++	2981:40:72643:72645	3476182	2	True				
ANR	3476248	Identifier	i		3476182	0					
ANR	3476249	IncDec	++		3476182	1					
ANR	3476250	ExpressionStatement	( * skip ) [ i ] = len	2982:4:72652:72668	3476182	3	True				
ANR	3476251	AssignmentExpression	( * skip ) [ i ] = len		3476182	0		=			
ANR	3476252	ArrayIndexing	( * skip ) [ i ]		3476182	0					
ANR	3476253	UnaryOperationExpression	* skip		3476182	0					
ANR	3476254	UnaryOperator	*		3476182	0					
ANR	3476255	Identifier	skip		3476182	1					
ANR	3476256	Identifier	i		3476182	1					
ANR	3476257	Identifier	len		3476182	1					
ANR	3476258	ForStatement	for ( i = len - 1 ; i > 0 ; i -- )		3476182	4					
ANR	3476259	ForInit	i = len - 1 ;	2984:7:72678:72689	3476182	0	True				
ANR	3476260	AssignmentExpression	i = len - 1		3476182	0		=			
ANR	3476261	Identifier	i		3476182	0					
ANR	3476262	AdditiveExpression	len - 1		3476182	1		-			
ANR	3476263	Identifier	len		3476182	0					
ANR	3476264	PrimaryExpression	1		3476182	1					
ANR	3476265	Condition	i > 0	2984:20:72691:72695	3476182	1	True				
ANR	3476266	RelationalExpression	i > 0		3476182	0		>			
ANR	3476267	Identifier	i		3476182	0					
ANR	3476268	PrimaryExpression	0		3476182	1					
ANR	3476269	PostIncDecOperationExpression	i --	2984:27:72698:72700	3476182	2	True				
ANR	3476270	Identifier	i		3476182	0					
ANR	3476271	IncDec	--		3476182	1					
ANR	3476272	ExpressionStatement	( * skip ) [ s [ i ] ] = i	2985:4:72707:72724	3476182	3	True				
ANR	3476273	AssignmentExpression	( * skip ) [ s [ i ] ] = i		3476182	0		=			
ANR	3476274	ArrayIndexing	( * skip ) [ s [ i ] ]		3476182	0					
ANR	3476275	UnaryOperationExpression	* skip		3476182	0					
ANR	3476276	UnaryOperator	*		3476182	0					
ANR	3476277	Identifier	skip		3476182	1					
ANR	3476278	ArrayIndexing	s [ i ]		3476182	1					
ANR	3476279	Identifier	s		3476182	0					
ANR	3476280	Identifier	i		3476182	1					
ANR	3476281	Identifier	i		3476182	1					
ANR	3476282	ReturnStatement	return 0 ;	2987:2:72729:72737	3476182	5	True				
ANR	3476283	PrimaryExpression	0		3476182	0					
ANR	3476284	ReturnType	static int		3476182	1					
ANR	3476285	Identifier	set_bm_backward_skip		3476182	2					
ANR	3476286	ParameterList	"UChar * s , UChar * end , OnigEncoding enc ARG_UNUSED , int * * skip"		3476182	3					
ANR	3476287	Parameter	UChar * s	2969:21:72351:72358	3476182	0	True				
ANR	3476288	ParameterType	UChar *		3476182	0					
ANR	3476289	Identifier	s		3476182	1					
ANR	3476290	Parameter	UChar * end	2969:31:72361:72370	3476182	1	True				
ANR	3476291	ParameterType	UChar *		3476182	0					
ANR	3476292	Identifier	end		3476182	1					
ANR	3476293	Parameter	OnigEncoding enc ARG_UNUSED	2969:43:72373:72399	3476182	2	True				
ANR	3476294	ParameterType	OnigEncoding enc		3476182	0					
ANR	3476295	Identifier	ARG_UNUSED		3476182	1					
ANR	3476296	Parameter	int * * skip	2970:7:72409:72418	3476182	3	True				
ANR	3476297	ParameterType	int * *		3476182	0					
ANR	3476298	Identifier	skip		3476182	1					
ANR	3476299	CFGEntryNode	ENTRY		3476182		True				
ANR	3476300	CFGExitNode	EXIT		3476182		True				
ANR	3476301	Symbol	* * i		3476182						
ANR	3476302	Symbol	ONIGERR_MEMORY		3476182						
ANR	3476303	Symbol	i		3476182						
ANR	3476304	Symbol	skip		3476182						
ANR	3476305	Symbol	ARG_UNUSED		3476182						
ANR	3476306	Symbol	* skip		3476182						
ANR	3476307	Symbol	s		3476182						
ANR	3476308	Symbol	ONIG_CHAR_TABLE_SIZE		3476182						
ANR	3476309	Symbol	* i		3476182						
ANR	3476310	Symbol	len		3476182						
ANR	3476311	Symbol	IS_NULL		3476182						
ANR	3476312	Symbol	xmalloc		3476182						
ANR	3476313	Symbol	* * skip		3476182						
ANR	3476314	Symbol	* * s		3476182						
ANR	3476315	Symbol	end		3476182						
ANR	3476316	Symbol	* s		3476182						
ANR	3476317	Function	bm_search_backward	2990:0:72742:73415							
ANR	3476318	FunctionDef	"bm_search_backward (regex_t * reg , const UChar * target , const UChar * target_end , const UChar * text , const UChar * adjust_text , const UChar * text_end , const UChar * text_start)"		3476317	0					
ANR	3476319	CompoundStatement		2994:0:72938:73415	3476317	0					
ANR	3476320	IdentifierDeclStatement	"const UChar * s , * t , * p ;"	2995:2:72942:72964	3476317	0	True				
ANR	3476321	IdentifierDecl	* s		3476317	0					
ANR	3476322	IdentifierDeclType	const UChar *		3476317	0					
ANR	3476323	Identifier	s		3476317	1					
ANR	3476324	IdentifierDecl	* t		3476317	1					
ANR	3476325	IdentifierDeclType	const UChar *		3476317	0					
ANR	3476326	Identifier	t		3476317	1					
ANR	3476327	IdentifierDecl	* p		3476317	2					
ANR	3476328	IdentifierDeclType	const UChar *		3476317	0					
ANR	3476329	Identifier	p		3476317	1					
ANR	3476330	ExpressionStatement	s = text_end - ( target_end - target )	2997:2:72969:73005	3476317	1	True				
ANR	3476331	AssignmentExpression	s = text_end - ( target_end - target )		3476317	0		=			
ANR	3476332	Identifier	s		3476317	0					
ANR	3476333	AdditiveExpression	text_end - ( target_end - target )		3476317	1		-			
ANR	3476334	Identifier	text_end		3476317	0					
ANR	3476335	AdditiveExpression	target_end - target		3476317	1		-			
ANR	3476336	Identifier	target_end		3476317	0					
ANR	3476337	Identifier	target		3476317	1					
ANR	3476338	IfStatement	if ( text_start < s )		3476317	2					
ANR	3476339	Condition	text_start < s	2998:6:73013:73026	3476317	0	True				
ANR	3476340	RelationalExpression	text_start < s		3476317	0		<			
ANR	3476341	Identifier	text_start		3476317	0					
ANR	3476342	Identifier	s		3476317	1					
ANR	3476343	ExpressionStatement	s = text_start	2999:4:73033:73047	3476317	1	True				
ANR	3476344	AssignmentExpression	s = text_start		3476317	0		=			
ANR	3476345	Identifier	s		3476317	0					
ANR	3476346	Identifier	text_start		3476317	1					
ANR	3476347	ElseStatement	else		3476317	0					
ANR	3476348	ExpressionStatement	"s = ONIGENC_LEFT_ADJUST_CHAR_HEAD ( reg -> enc , adjust_text , s )"	3001:4:73060:73119	3476317	0	True				
ANR	3476349	AssignmentExpression	"s = ONIGENC_LEFT_ADJUST_CHAR_HEAD ( reg -> enc , adjust_text , s )"		3476317	0		=			
ANR	3476350	Identifier	s		3476317	0					
ANR	3476351	CallExpression	"ONIGENC_LEFT_ADJUST_CHAR_HEAD ( reg -> enc , adjust_text , s )"		3476317	1					
ANR	3476352	Callee	ONIGENC_LEFT_ADJUST_CHAR_HEAD		3476317	0					
ANR	3476353	Identifier	ONIGENC_LEFT_ADJUST_CHAR_HEAD		3476317	0					
ANR	3476354	ArgumentList	reg -> enc		3476317	1					
ANR	3476355	Argument	reg -> enc		3476317	0					
ANR	3476356	PtrMemberAccess	reg -> enc		3476317	0					
ANR	3476357	Identifier	reg		3476317	0					
ANR	3476358	Identifier	enc		3476317	1					
ANR	3476359	Argument	adjust_text		3476317	1					
ANR	3476360	Identifier	adjust_text		3476317	0					
ANR	3476361	Argument	s		3476317	2					
ANR	3476362	Identifier	s		3476317	0					
ANR	3476363	WhileStatement	while ( s >= text )		3476317	3					
ANR	3476364	Condition	s >= text	3003:9:73131:73139	3476317	0	True				
ANR	3476365	RelationalExpression	s >= text		3476317	0		>=			
ANR	3476366	Identifier	s		3476317	0					
ANR	3476367	Identifier	text		3476317	1					
ANR	3476368	CompoundStatement		10:20:203:203	3476317	1					
ANR	3476369	ExpressionStatement	p = s	3004:4:73148:73153	3476317	0	True				
ANR	3476370	AssignmentExpression	p = s		3476317	0		=			
ANR	3476371	Identifier	p		3476317	0					
ANR	3476372	Identifier	s		3476317	1					
ANR	3476373	ExpressionStatement	t = target	3005:4:73159:73169	3476317	1	True				
ANR	3476374	AssignmentExpression	t = target		3476317	0		=			
ANR	3476375	Identifier	t		3476317	0					
ANR	3476376	Identifier	target		3476317	1					
ANR	3476377	WhileStatement	while ( t < target_end && * p == * t )		3476317	2					
ANR	3476378	Condition	t < target_end && * p == * t	3006:11:73182:73207	3476317	0	True				
ANR	3476379	AndExpression	t < target_end && * p == * t		3476317	0		&&			
ANR	3476380	RelationalExpression	t < target_end		3476317	0		<			
ANR	3476381	Identifier	t		3476317	0					
ANR	3476382	Identifier	target_end		3476317	1					
ANR	3476383	EqualityExpression	* p == * t		3476317	1		==			
ANR	3476384	UnaryOperationExpression	* p		3476317	0					
ANR	3476385	UnaryOperator	*		3476317	0					
ANR	3476386	Identifier	p		3476317	1					
ANR	3476387	UnaryOperationExpression	* t		3476317	1					
ANR	3476388	UnaryOperator	*		3476317	0					
ANR	3476389	Identifier	t		3476317	1					
ANR	3476390	CompoundStatement		13:39:271:271	3476317	1					
ANR	3476391	ExpressionStatement	p ++	3007:6:73218:73221	3476317	0	True				
ANR	3476392	PostIncDecOperationExpression	p ++		3476317	0					
ANR	3476393	Identifier	p		3476317	0					
ANR	3476394	IncDec	++		3476317	1					
ANR	3476395	ExpressionStatement	t ++	3007:11:73223:73226	3476317	1	True				
ANR	3476396	PostIncDecOperationExpression	t ++		3476317	0					
ANR	3476397	Identifier	t		3476317	0					
ANR	3476398	IncDec	++		3476317	1					
ANR	3476399	IfStatement	if ( t == target_end )		3476317	3					
ANR	3476400	Condition	t == target_end	3009:8:73242:73256	3476317	0	True				
ANR	3476401	EqualityExpression	t == target_end		3476317	0		==			
ANR	3476402	Identifier	t		3476317	0					
ANR	3476403	Identifier	target_end		3476317	1					
ANR	3476404	ReturnStatement	return ( UChar * ) s ;	3010:6:73265:73282	3476317	1	True				
ANR	3476405	CastExpression	( UChar * ) s		3476317	0					
ANR	3476406	CastTarget	UChar *		3476317	0					
ANR	3476407	Identifier	s		3476317	1					
ANR	3476408	ExpressionStatement	s -= reg -> int_map_backward [ * s ]	3012:4:73289:73319	3476317	4	True				
ANR	3476409	AssignmentExpression	s -= reg -> int_map_backward [ * s ]		3476317	0		-=			
ANR	3476410	Identifier	s		3476317	0					
ANR	3476411	ArrayIndexing	reg -> int_map_backward [ * s ]		3476317	1					
ANR	3476412	PtrMemberAccess	reg -> int_map_backward		3476317	0					
ANR	3476413	Identifier	reg		3476317	0					
ANR	3476414	Identifier	int_map_backward		3476317	1					
ANR	3476415	UnaryOperationExpression	* s		3476317	1					
ANR	3476416	UnaryOperator	*		3476317	0					
ANR	3476417	Identifier	s		3476317	1					
ANR	3476418	ExpressionStatement	"s = ONIGENC_LEFT_ADJUST_CHAR_HEAD ( reg -> enc , adjust_text , s )"	3013:4:73325:73384	3476317	5	True				
ANR	3476419	AssignmentExpression	"s = ONIGENC_LEFT_ADJUST_CHAR_HEAD ( reg -> enc , adjust_text , s )"		3476317	0		=			
ANR	3476420	Identifier	s		3476317	0					
ANR	3476421	CallExpression	"ONIGENC_LEFT_ADJUST_CHAR_HEAD ( reg -> enc , adjust_text , s )"		3476317	1					
ANR	3476422	Callee	ONIGENC_LEFT_ADJUST_CHAR_HEAD		3476317	0					
ANR	3476423	Identifier	ONIGENC_LEFT_ADJUST_CHAR_HEAD		3476317	0					
ANR	3476424	ArgumentList	reg -> enc		3476317	1					
ANR	3476425	Argument	reg -> enc		3476317	0					
ANR	3476426	PtrMemberAccess	reg -> enc		3476317	0					
ANR	3476427	Identifier	reg		3476317	0					
ANR	3476428	Identifier	enc		3476317	1					
ANR	3476429	Argument	adjust_text		3476317	1					
ANR	3476430	Identifier	adjust_text		3476317	0					
ANR	3476431	Argument	s		3476317	2					
ANR	3476432	Identifier	s		3476317	0					
ANR	3476433	ReturnStatement	return ( UChar * ) NULL ;	3016:2:73393:73413	3476317	4	True				
ANR	3476434	CastExpression	( UChar * ) NULL		3476317	0					
ANR	3476435	CastTarget	UChar *		3476317	0					
ANR	3476436	Identifier	NULL		3476317	1					
ANR	3476437	ReturnType	static UChar *		3476317	1					
ANR	3476438	Identifier	bm_search_backward		3476317	2					
ANR	3476439	ParameterList	"regex_t * reg , const UChar * target , const UChar * target_end , const UChar * text , const UChar * adjust_text , const UChar * text_end , const UChar * text_start"		3476317	3					
ANR	3476440	Parameter	regex_t * reg	2991:19:72775:72786	3476317	0	True				
ANR	3476441	ParameterType	regex_t *		3476317	0					
ANR	3476442	Identifier	reg		3476317	1					
ANR	3476443	Parameter	const UChar * target	2991:33:72789:72807	3476317	1	True				
ANR	3476444	ParameterType	const UChar *		3476317	0					
ANR	3476445	Identifier	target		3476317	1					
ANR	3476446	Parameter	const UChar * target_end	2991:54:72810:72832	3476317	2	True				
ANR	3476447	ParameterType	const UChar *		3476317	0					
ANR	3476448	Identifier	target_end		3476317	1					
ANR	3476449	Parameter	const UChar * text	2992:5:72840:72856	3476317	3	True				
ANR	3476450	ParameterType	const UChar *		3476317	0					
ANR	3476451	Identifier	text		3476317	1					
ANR	3476452	Parameter	const UChar * adjust_text	2992:24:72859:72882	3476317	4	True				
ANR	3476453	ParameterType	const UChar *		3476317	0					
ANR	3476454	Identifier	adjust_text		3476317	1					
ANR	3476455	Parameter	const UChar * text_end	2993:5:72890:72910	3476317	5	True				
ANR	3476456	ParameterType	const UChar *		3476317	0					
ANR	3476457	Identifier	text_end		3476317	1					
ANR	3476458	Parameter	const UChar * text_start	2993:28:72913:72935	3476317	6	True				
ANR	3476459	ParameterType	const UChar *		3476317	0					
ANR	3476460	Identifier	text_start		3476317	1					
ANR	3476461	CFGEntryNode	ENTRY		3476317		True				
ANR	3476462	CFGExitNode	EXIT		3476317		True				
ANR	3476463	Symbol	NULL		3476317						
ANR	3476464	Symbol	ONIGENC_LEFT_ADJUST_CHAR_HEAD		3476317						
ANR	3476465	Symbol	* reg -> int_map_backward		3476317						
ANR	3476466	Symbol	target_end		3476317						
ANR	3476467	Symbol	* * reg		3476317						
ANR	3476468	Symbol	target		3476317						
ANR	3476469	Symbol	reg -> enc		3476317						
ANR	3476470	Symbol	p		3476317						
ANR	3476471	Symbol	reg -> int_map_backward		3476317						
ANR	3476472	Symbol	s		3476317						
ANR	3476473	Symbol	t		3476317						
ANR	3476474	Symbol	reg		3476317						
ANR	3476475	Symbol	* * s		3476317						
ANR	3476476	Symbol	adjust_text		3476317						
ANR	3476477	Symbol	* p		3476317						
ANR	3476478	Symbol	text		3476317						
ANR	3476479	Symbol	text_end		3476317						
ANR	3476480	Symbol	* s		3476317						
ANR	3476481	Symbol	text_start		3476317						
ANR	3476482	Symbol	* reg		3476317						
ANR	3476483	Symbol	* t		3476317						
ANR	3476484	Function	map_search	3019:0:73418:73667							
ANR	3476485	FunctionDef	"map_search (OnigEncoding enc , UChar map [ ] , const UChar * text , const UChar * text_range)"		3476484	0					
ANR	3476486	CompoundStatement		3022:0:73522:73667	3476484	0					
ANR	3476487	IdentifierDeclStatement	const UChar * s = text ;	3023:2:73526:73547	3476484	0	True				
ANR	3476488	IdentifierDecl	* s = text		3476484	0					
ANR	3476489	IdentifierDeclType	const UChar *		3476484	0					
ANR	3476490	Identifier	s		3476484	1					
ANR	3476491	AssignmentExpression	* s = text		3476484	2		=			
ANR	3476492	Identifier	text		3476484	0					
ANR	3476493	Identifier	text		3476484	1					
ANR	3476494	WhileStatement	while ( s < text_range )		3476484	1					
ANR	3476495	Condition	s < text_range	3025:9:73559:73572	3476484	0	True				
ANR	3476496	RelationalExpression	s < text_range		3476484	0		<			
ANR	3476497	Identifier	s		3476484	0					
ANR	3476498	Identifier	text_range		3476484	1					
ANR	3476499	CompoundStatement		4:25:52:52	3476484	1					
ANR	3476500	IfStatement	if ( map [ * s ] )		3476484	0					
ANR	3476501	Condition	map [ * s ]	3026:8:73585:73591	3476484	0	True				
ANR	3476502	ArrayIndexing	map [ * s ]		3476484	0					
ANR	3476503	Identifier	map		3476484	0					
ANR	3476504	UnaryOperationExpression	* s		3476484	1					
ANR	3476505	UnaryOperator	*		3476484	0					
ANR	3476506	Identifier	s		3476484	1					
ANR	3476507	ReturnStatement	return ( UChar * ) s ;	3026:17:73594:73611	3476484	1	True				
ANR	3476508	CastExpression	( UChar * ) s		3476484	0					
ANR	3476509	CastTarget	UChar *		3476484	0					
ANR	3476510	Identifier	s		3476484	1					
ANR	3476511	ExpressionStatement	"s += enclen ( enc , s )"	3028:4:73618:73637	3476484	1	True				
ANR	3476512	AssignmentExpression	"s += enclen ( enc , s )"		3476484	0		+=			
ANR	3476513	Identifier	s		3476484	0					
ANR	3476514	CallExpression	"enclen ( enc , s )"		3476484	1					
ANR	3476515	Callee	enclen		3476484	0					
ANR	3476516	Identifier	enclen		3476484	0					
ANR	3476517	ArgumentList	enc		3476484	1					
ANR	3476518	Argument	enc		3476484	0					
ANR	3476519	Identifier	enc		3476484	0					
ANR	3476520	Argument	s		3476484	1					
ANR	3476521	Identifier	s		3476484	0					
ANR	3476522	ReturnStatement	return ( UChar * ) NULL ;	3030:2:73645:73665	3476484	2	True				
ANR	3476523	CastExpression	( UChar * ) NULL		3476484	0					
ANR	3476524	CastTarget	UChar *		3476484	0					
ANR	3476525	Identifier	NULL		3476484	1					
ANR	3476526	ReturnType	static UChar *		3476484	1					
ANR	3476527	Identifier	map_search		3476484	2					
ANR	3476528	ParameterList	"OnigEncoding enc , UChar map [ ] , const UChar * text , const UChar * text_range"		3476484	3					
ANR	3476529	Parameter	OnigEncoding enc	3020:11:73443:73458	3476484	0	True				
ANR	3476530	ParameterType	OnigEncoding		3476484	0					
ANR	3476531	Identifier	enc		3476484	1					
ANR	3476532	Parameter	UChar map [ ]	3020:29:73461:73471	3476484	1	True				
ANR	3476533	ParameterType	UChar [ ]		3476484	0					
ANR	3476534	Identifier	map		3476484	1					
ANR	3476535	Parameter	const UChar * text	3021:4:73478:73494	3476484	2	True				
ANR	3476536	ParameterType	const UChar *		3476484	0					
ANR	3476537	Identifier	text		3476484	1					
ANR	3476538	Parameter	const UChar * text_range	3021:23:73497:73519	3476484	3	True				
ANR	3476539	ParameterType	const UChar *		3476484	0					
ANR	3476540	Identifier	text_range		3476484	1					
ANR	3476541	CFGEntryNode	ENTRY		3476484		True				
ANR	3476542	CFGExitNode	EXIT		3476484		True				
ANR	3476543	Symbol	s		3476484						
ANR	3476544	Symbol	NULL		3476484						
ANR	3476545	Symbol	* map		3476484						
ANR	3476546	Symbol	* * s		3476484						
ANR	3476547	Symbol	enc		3476484						
ANR	3476548	Symbol	text		3476484						
ANR	3476549	Symbol	text_range		3476484						
ANR	3476550	Symbol	map		3476484						
ANR	3476551	Symbol	* s		3476484						
ANR	3476552	Symbol	enclen		3476484						
ANR	3476553	Function	map_search_backward	3033:0:73670:73995							
ANR	3476554	FunctionDef	"map_search_backward (OnigEncoding enc , UChar map [ ] , const UChar * text , const UChar * adjust_text , const UChar * text_start)"		3476553	0					
ANR	3476555	CompoundStatement		3037:0:73817:73995	3476553	0					
ANR	3476556	IdentifierDeclStatement	const UChar * s = text_start ;	3038:2:73821:73848	3476553	0	True				
ANR	3476557	IdentifierDecl	* s = text_start		3476553	0					
ANR	3476558	IdentifierDeclType	const UChar *		3476553	0					
ANR	3476559	Identifier	s		3476553	1					
ANR	3476560	AssignmentExpression	* s = text_start		3476553	2		=			
ANR	3476561	Identifier	text_start		3476553	0					
ANR	3476562	Identifier	text_start		3476553	1					
ANR	3476563	WhileStatement	while ( s >= text )		3476553	1					
ANR	3476564	Condition	s >= text	3040:9:73860:73868	3476553	0	True				
ANR	3476565	RelationalExpression	s >= text		3476553	0		>=			
ANR	3476566	Identifier	s		3476553	0					
ANR	3476567	Identifier	text		3476553	1					
ANR	3476568	CompoundStatement		4:20:53:53	3476553	1					
ANR	3476569	IfStatement	if ( map [ * s ] )		3476553	0					
ANR	3476570	Condition	map [ * s ]	3041:8:73881:73887	3476553	0	True				
ANR	3476571	ArrayIndexing	map [ * s ]		3476553	0					
ANR	3476572	Identifier	map		3476553	0					
ANR	3476573	UnaryOperationExpression	* s		3476553	1					
ANR	3476574	UnaryOperator	*		3476553	0					
ANR	3476575	Identifier	s		3476553	1					
ANR	3476576	ReturnStatement	return ( UChar * ) s ;	3041:17:73890:73907	3476553	1	True				
ANR	3476577	CastExpression	( UChar * ) s		3476553	0					
ANR	3476578	CastTarget	UChar *		3476553	0					
ANR	3476579	Identifier	s		3476553	1					
ANR	3476580	ExpressionStatement	"s = onigenc_get_prev_char_head ( enc , adjust_text , s )"	3043:4:73914:73965	3476553	1	True				
ANR	3476581	AssignmentExpression	"s = onigenc_get_prev_char_head ( enc , adjust_text , s )"		3476553	0		=			
ANR	3476582	Identifier	s		3476553	0					
ANR	3476583	CallExpression	"onigenc_get_prev_char_head ( enc , adjust_text , s )"		3476553	1					
ANR	3476584	Callee	onigenc_get_prev_char_head		3476553	0					
ANR	3476585	Identifier	onigenc_get_prev_char_head		3476553	0					
ANR	3476586	ArgumentList	enc		3476553	1					
ANR	3476587	Argument	enc		3476553	0					
ANR	3476588	Identifier	enc		3476553	0					
ANR	3476589	Argument	adjust_text		3476553	1					
ANR	3476590	Identifier	adjust_text		3476553	0					
ANR	3476591	Argument	s		3476553	2					
ANR	3476592	Identifier	s		3476553	0					
ANR	3476593	ReturnStatement	return ( UChar * ) NULL ;	3045:2:73973:73993	3476553	2	True				
ANR	3476594	CastExpression	( UChar * ) NULL		3476553	0					
ANR	3476595	CastTarget	UChar *		3476553	0					
ANR	3476596	Identifier	NULL		3476553	1					
ANR	3476597	ReturnType	static UChar *		3476553	1					
ANR	3476598	Identifier	map_search_backward		3476553	2					
ANR	3476599	ParameterList	"OnigEncoding enc , UChar map [ ] , const UChar * text , const UChar * adjust_text , const UChar * text_start"		3476553	3					
ANR	3476600	Parameter	OnigEncoding enc	3034:20:73704:73719	3476553	0	True				
ANR	3476601	ParameterType	OnigEncoding		3476553	0					
ANR	3476602	Identifier	enc		3476553	1					
ANR	3476603	Parameter	UChar map [ ]	3034:38:73722:73732	3476553	1	True				
ANR	3476604	ParameterType	UChar [ ]		3476553	0					
ANR	3476605	Identifier	map		3476553	1					
ANR	3476606	Parameter	const UChar * text	3035:6:73741:73757	3476553	2	True				
ANR	3476607	ParameterType	const UChar *		3476553	0					
ANR	3476608	Identifier	text		3476553	1					
ANR	3476609	Parameter	const UChar * adjust_text	3035:25:73760:73783	3476553	3	True				
ANR	3476610	ParameterType	const UChar *		3476553	0					
ANR	3476611	Identifier	adjust_text		3476553	1					
ANR	3476612	Parameter	const UChar * text_start	3036:6:73792:73814	3476553	4	True				
ANR	3476613	ParameterType	const UChar *		3476553	0					
ANR	3476614	Identifier	text_start		3476553	1					
ANR	3476615	CFGEntryNode	ENTRY		3476553		True				
ANR	3476616	CFGExitNode	EXIT		3476553		True				
ANR	3476617	Symbol	s		3476553						
ANR	3476618	Symbol	NULL		3476553						
ANR	3476619	Symbol	* map		3476553						
ANR	3476620	Symbol	* * s		3476553						
ANR	3476621	Symbol	onigenc_get_prev_char_head		3476553						
ANR	3476622	Symbol	adjust_text		3476553						
ANR	3476623	Symbol	enc		3476553						
ANR	3476624	Symbol	text		3476553						
ANR	3476625	Symbol	map		3476553						
ANR	3476626	Symbol	* s		3476553						
ANR	3476627	Symbol	text_start		3476553						
ANR	3476628	Function	onig_match	3048:0:73998:75470							
ANR	3476629	FunctionDef	"onig_match (regex_t * reg , const UChar * str , const UChar * end , const UChar * at , OnigRegion * region , OnigOptionType option)"		3476628	0					
ANR	3476630	CompoundStatement		3051:0:74135:75470	3476628	0					
ANR	3476631	IdentifierDeclStatement	int r ;	3052:2:74139:74144	3476628	0	True				
ANR	3476632	IdentifierDecl	r		3476628	0					
ANR	3476633	IdentifierDeclType	int		3476628	0					
ANR	3476634	Identifier	r		3476628	1					
ANR	3476635	IdentifierDeclStatement	UChar * prev ;	3053:2:74148:74159	3476628	1	True				
ANR	3476636	IdentifierDecl	* prev		3476628	0					
ANR	3476637	IdentifierDeclType	UChar *		3476628	0					
ANR	3476638	Identifier	prev		3476628	1					
ANR	3476639	IdentifierDeclStatement	OnigMatchArg msa ;	3054:2:74163:74179	3476628	2	True				
ANR	3476640	IdentifierDecl	msa		3476628	0					
ANR	3476641	IdentifierDeclType	OnigMatchArg		3476628	0					
ANR	3476642	Identifier	msa		3476628	1					
ANR	3476643	Label	start :	3057:1:74250:74255	3476628	3	True				
ANR	3476644	Identifier	start		3476628	0					
ANR	3476645	ExpressionStatement	THREAD_ATOMIC_START	3058:2:74259:74278	3476628	4	True				
ANR	3476646	Identifier	THREAD_ATOMIC_START		3476628	0					
ANR	3476647	IfStatement	if ( ONIG_STATE ( reg ) >= ONIG_STATE_NORMAL )		3476628	5					
ANR	3476648	Condition	ONIG_STATE ( reg ) >= ONIG_STATE_NORMAL	3059:6:74286:74321	3476628	0	True				
ANR	3476649	RelationalExpression	ONIG_STATE ( reg ) >= ONIG_STATE_NORMAL		3476628	0		>=			
ANR	3476650	CallExpression	ONIG_STATE ( reg )		3476628	0					
ANR	3476651	Callee	ONIG_STATE		3476628	0					
ANR	3476652	Identifier	ONIG_STATE		3476628	0					
ANR	3476653	ArgumentList	reg		3476628	1					
ANR	3476654	Argument	reg		3476628	0					
ANR	3476655	Identifier	reg		3476628	0					
ANR	3476656	Identifier	ONIG_STATE_NORMAL		3476628	1					
ANR	3476657	CompoundStatement		9:44:188:188	3476628	1					
ANR	3476658	ExpressionStatement	ONIG_STATE_INC ( reg )	3060:4:74330:74349	3476628	0	True				
ANR	3476659	CallExpression	ONIG_STATE_INC ( reg )		3476628	0					
ANR	3476660	Callee	ONIG_STATE_INC		3476628	0					
ANR	3476661	Identifier	ONIG_STATE_INC		3476628	0					
ANR	3476662	ArgumentList	reg		3476628	1					
ANR	3476663	Argument	reg		3476628	0					
ANR	3476664	Identifier	reg		3476628	0					
ANR	3476665	IfStatement	if ( IS_NOT_NULL ( reg -> chain ) && ONIG_STATE ( reg ) == ONIG_STATE_NORMAL )		3476628	1					
ANR	3476666	Condition	IS_NOT_NULL ( reg -> chain ) && ONIG_STATE ( reg ) == ONIG_STATE_NORMAL	3061:8:74359:74421	3476628	0	True				
ANR	3476667	AndExpression	IS_NOT_NULL ( reg -> chain ) && ONIG_STATE ( reg ) == ONIG_STATE_NORMAL		3476628	0		&&			
ANR	3476668	CallExpression	IS_NOT_NULL ( reg -> chain )		3476628	0					
ANR	3476669	Callee	IS_NOT_NULL		3476628	0					
ANR	3476670	Identifier	IS_NOT_NULL		3476628	0					
ANR	3476671	ArgumentList	reg -> chain		3476628	1					
ANR	3476672	Argument	reg -> chain		3476628	0					
ANR	3476673	PtrMemberAccess	reg -> chain		3476628	0					
ANR	3476674	Identifier	reg		3476628	0					
ANR	3476675	Identifier	chain		3476628	1					
ANR	3476676	EqualityExpression	ONIG_STATE ( reg ) == ONIG_STATE_NORMAL		3476628	1		==			
ANR	3476677	CallExpression	ONIG_STATE ( reg )		3476628	0					
ANR	3476678	Callee	ONIG_STATE		3476628	0					
ANR	3476679	Identifier	ONIG_STATE		3476628	0					
ANR	3476680	ArgumentList	reg		3476628	1					
ANR	3476681	Argument	reg		3476628	0					
ANR	3476682	Identifier	reg		3476628	0					
ANR	3476683	Identifier	ONIG_STATE_NORMAL		3476628	1					
ANR	3476684	CompoundStatement		11:73:288:288	3476628	1					
ANR	3476685	ExpressionStatement	onig_chain_reduce ( reg )	3062:6:74432:74454	3476628	0	True				
ANR	3476686	CallExpression	onig_chain_reduce ( reg )		3476628	0					
ANR	3476687	Callee	onig_chain_reduce		3476628	0					
ANR	3476688	Identifier	onig_chain_reduce		3476628	0					
ANR	3476689	ArgumentList	reg		3476628	1					
ANR	3476690	Argument	reg		3476628	0					
ANR	3476691	Identifier	reg		3476628	0					
ANR	3476692	ExpressionStatement	ONIG_STATE_INC ( reg )	3063:6:74462:74481	3476628	1	True				
ANR	3476693	CallExpression	ONIG_STATE_INC ( reg )		3476628	0					
ANR	3476694	Callee	ONIG_STATE_INC		3476628	0					
ANR	3476695	Identifier	ONIG_STATE_INC		3476628	0					
ANR	3476696	ArgumentList	reg		3476628	1					
ANR	3476697	Argument	reg		3476628	0					
ANR	3476698	Identifier	reg		3476628	0					
ANR	3476699	ElseStatement	else		3476628	0					
ANR	3476700	CompoundStatement		17:4:370:375	3476628	0					
ANR	3476701	IdentifierDeclStatement	int n ;	3067:4:74506:74511	3476628	0	True				
ANR	3476702	IdentifierDecl	n		3476628	0					
ANR	3476703	IdentifierDeclType	int		3476628	0					
ANR	3476704	Identifier	n		3476628	1					
ANR	3476705	ExpressionStatement	THREAD_ATOMIC_END	3069:4:74518:74535	3476628	1	True				
ANR	3476706	Identifier	THREAD_ATOMIC_END		3476628	0					
ANR	3476707	ExpressionStatement	n = 0	3070:4:74541:74546	3476628	2	True				
ANR	3476708	AssignmentExpression	n = 0		3476628	0		=			
ANR	3476709	Identifier	n		3476628	0					
ANR	3476710	PrimaryExpression	0		3476628	1					
ANR	3476711	WhileStatement	while ( ONIG_STATE ( reg ) < ONIG_STATE_NORMAL )		3476628	3					
ANR	3476712	Condition	ONIG_STATE ( reg ) < ONIG_STATE_NORMAL	3071:11:74559:74593	3476628	0	True				
ANR	3476713	RelationalExpression	ONIG_STATE ( reg ) < ONIG_STATE_NORMAL		3476628	0		<			
ANR	3476714	CallExpression	ONIG_STATE ( reg )		3476628	0					
ANR	3476715	Callee	ONIG_STATE		3476628	0					
ANR	3476716	Identifier	ONIG_STATE		3476628	0					
ANR	3476717	ArgumentList	reg		3476628	1					
ANR	3476718	Argument	reg		3476628	0					
ANR	3476719	Identifier	reg		3476628	0					
ANR	3476720	Identifier	ONIG_STATE_NORMAL		3476628	1					
ANR	3476721	CompoundStatement		21:48:460:460	3476628	1					
ANR	3476722	IfStatement	if ( ++ n > THREAD_PASS_LIMIT_COUNT )		3476628	0					
ANR	3476723	Condition	++ n > THREAD_PASS_LIMIT_COUNT	3072:10:74608:74636	3476628	0	True				
ANR	3476724	RelationalExpression	++ n > THREAD_PASS_LIMIT_COUNT		3476628	0		>			
ANR	3476725	UnaryExpression	++ n		3476628	0					
ANR	3476726	IncDec	++		3476628	0					
ANR	3476727	Identifier	n		3476628	1					
ANR	3476728	Identifier	THREAD_PASS_LIMIT_COUNT		3476628	1					
ANR	3476729	ReturnStatement	return ONIGERR_OVER_THREAD_PASS_LIMIT_COUNT ;	3073:1:74640:74683	3476628	1	True				
ANR	3476730	Identifier	ONIGERR_OVER_THREAD_PASS_LIMIT_COUNT		3476628	0					
ANR	3476731	ExpressionStatement	THREAD_PASS	3074:6:74691:74702	3476628	1	True				
ANR	3476732	Identifier	THREAD_PASS		3476628	0					
ANR	3476733	GotoStatement	goto start ;	3076:4:74714:74724	3476628	4	True				
ANR	3476734	Identifier	start		3476628	0					
ANR	3476735	ExpressionStatement	THREAD_ATOMIC_END	3078:2:74732:74749	3476628	6	True				
ANR	3476736	Identifier	THREAD_ATOMIC_END		3476628	0					
ANR	3476737	ExpressionStatement	"MATCH_ARG_INIT ( msa , option , region , at )"	3081:2:74812:74851	3476628	7	True				
ANR	3476738	CallExpression	"MATCH_ARG_INIT ( msa , option , region , at )"		3476628	0					
ANR	3476739	Callee	MATCH_ARG_INIT		3476628	0					
ANR	3476740	Identifier	MATCH_ARG_INIT		3476628	0					
ANR	3476741	ArgumentList	msa		3476628	1					
ANR	3476742	Argument	msa		3476628	0					
ANR	3476743	Identifier	msa		3476628	0					
ANR	3476744	Argument	option		3476628	1					
ANR	3476745	Identifier	option		3476628	0					
ANR	3476746	Argument	region		3476628	2					
ANR	3476747	Identifier	region		3476628	0					
ANR	3476748	Argument	at		3476628	3					
ANR	3476749	Identifier	at		3476628	0					
ANR	3476750	CompoundStatement		34:4:764:785	3476628	8					
ANR	3476751	IdentifierDeclStatement	int offset = at - str ;	3084:4:74900:74921	3476628	0	True				
ANR	3476752	IdentifierDecl	offset = at - str		3476628	0					
ANR	3476753	IdentifierDeclType	int		3476628	0					
ANR	3476754	Identifier	offset		3476628	1					
ANR	3476755	AssignmentExpression	offset = at - str		3476628	2		=			
ANR	3476756	Identifier	offset		3476628	0					
ANR	3476757	AdditiveExpression	at - str		3476628	1		-			
ANR	3476758	Identifier	at		3476628	0					
ANR	3476759	Identifier	str		3476628	1					
ANR	3476760	ExpressionStatement	"STATE_CHECK_BUFF_INIT ( msa , end - str , offset , reg -> num_comb_exp_check )"	3085:4:74927:74997	3476628	1	True				
ANR	3476761	CallExpression	"STATE_CHECK_BUFF_INIT ( msa , end - str , offset , reg -> num_comb_exp_check )"		3476628	0					
ANR	3476762	Callee	STATE_CHECK_BUFF_INIT		3476628	0					
ANR	3476763	Identifier	STATE_CHECK_BUFF_INIT		3476628	0					
ANR	3476764	ArgumentList	msa		3476628	1					
ANR	3476765	Argument	msa		3476628	0					
ANR	3476766	Identifier	msa		3476628	0					
ANR	3476767	Argument	end - str		3476628	1					
ANR	3476768	AdditiveExpression	end - str		3476628	0		-			
ANR	3476769	Identifier	end		3476628	0					
ANR	3476770	Identifier	str		3476628	1					
ANR	3476771	Argument	offset		3476628	2					
ANR	3476772	Identifier	offset		3476628	0					
ANR	3476773	Argument	reg -> num_comb_exp_check		3476628	3					
ANR	3476774	PtrMemberAccess	reg -> num_comb_exp_check		3476628	0					
ANR	3476775	Identifier	reg		3476628	0					
ANR	3476776	Identifier	num_comb_exp_check		3476628	1					
ANR	3476777	Statement	if	3089:2:75013:75014	3476628	9	True				
ANR	3476778	Statement	(	3089:5:75016:75016	3476628	10	True				
ANR	3476779	Statement	region	3089:6:75017:75022	3476628	11	True				
ANR	3476780	Statement	&&	3091:6:75065:75066	3476628	12	True				
ANR	3476781	Statement	!	3091:9:75068:75068	3476628	13	True				
ANR	3476782	Statement	IS_POSIX_REGION	3091:10:75069:75083	3476628	14	True				
ANR	3476783	Statement	(	3091:25:75084:75084	3476628	15	True				
ANR	3476784	Statement	option	3091:26:75085:75090	3476628	16	True				
ANR	3476785	Statement	)	3091:32:75091:75091	3476628	17	True				
ANR	3476786	Statement	)	3093:6:75106:75106	3476628	18	True				
ANR	3476787	CompoundStatement		43:8:972:972	3476628	19					
ANR	3476788	ExpressionStatement	"r = onig_region_resize_clear ( region , reg -> num_mem + 1 )"	3094:4:75114:75168	3476628	0	True				
ANR	3476789	AssignmentExpression	"r = onig_region_resize_clear ( region , reg -> num_mem + 1 )"		3476628	0		=			
ANR	3476790	Identifier	r		3476628	0					
ANR	3476791	CallExpression	"onig_region_resize_clear ( region , reg -> num_mem + 1 )"		3476628	1					
ANR	3476792	Callee	onig_region_resize_clear		3476628	0					
ANR	3476793	Identifier	onig_region_resize_clear		3476628	0					
ANR	3476794	ArgumentList	region		3476628	1					
ANR	3476795	Argument	region		3476628	0					
ANR	3476796	Identifier	region		3476628	0					
ANR	3476797	Argument	reg -> num_mem + 1		3476628	1					
ANR	3476798	AdditiveExpression	reg -> num_mem + 1		3476628	0		+			
ANR	3476799	PtrMemberAccess	reg -> num_mem		3476628	0					
ANR	3476800	Identifier	reg		3476628	0					
ANR	3476801	Identifier	num_mem		3476628	1					
ANR	3476802	PrimaryExpression	1		3476628	1					
ANR	3476803	ReturnType	extern int		3476628	1					
ANR	3476804	Identifier	onig_match		3476628	2					
ANR	3476805	ParameterList	"regex_t * reg , const UChar * str , const UChar * end , const UChar * at , OnigRegion * region , OnigOptionType option"		3476628	3					
ANR	3476806	Parameter	regex_t * reg	3049:11:74020:74031	3476628	0	True				
ANR	3476807	ParameterType	regex_t *		3476628	0					
ANR	3476808	Identifier	reg		3476628	1					
ANR	3476809	Parameter	const UChar * str	3049:25:74034:74049	3476628	1	True				
ANR	3476810	ParameterType	const UChar *		3476628	0					
ANR	3476811	Identifier	str		3476628	1					
ANR	3476812	Parameter	const UChar * end	3049:43:74052:74067	3476628	2	True				
ANR	3476813	ParameterType	const UChar *		3476628	0					
ANR	3476814	Identifier	end		3476628	1					
ANR	3476815	Parameter	const UChar * at	3049:61:74070:74084	3476628	3	True				
ANR	3476816	ParameterType	const UChar *		3476628	0					
ANR	3476817	Identifier	at		3476628	1					
ANR	3476818	Parameter	OnigRegion * region	3049:78:74087:74104	3476628	4	True				
ANR	3476819	ParameterType	OnigRegion *		3476628	0					
ANR	3476820	Identifier	region		3476628	1					
ANR	3476821	Parameter	OnigOptionType option	3050:5:74112:74132	3476628	5	True				
ANR	3476822	ParameterType	OnigOptionType		3476628	0					
ANR	3476823	Identifier	option		3476628	1					
ANR	3476824	CFGEntryNode	ENTRY		3476628		True				
ANR	3476825	CFGExitNode	EXIT		3476628		True				
ANR	3476826	Symbol	IS_NOT_NULL		3476628						
ANR	3476827	Symbol	ONIGERR_OVER_THREAD_PASS_LIMIT_COUNT		3476628						
ANR	3476828	Symbol	offset		3476628						
ANR	3476829	Symbol	ONIG_STATE		3476628						
ANR	3476830	Symbol	prev		3476628						
ANR	3476831	Symbol	n		3476628						
ANR	3476832	Symbol	onig_region_resize_clear		3476628						
ANR	3476833	Symbol	str		3476628						
ANR	3476834	Symbol	r		3476628						
ANR	3476835	Symbol	at		3476628						
ANR	3476836	Symbol	THREAD_PASS_LIMIT_COUNT		3476628						
ANR	3476837	Symbol	reg		3476628						
ANR	3476838	Symbol	reg -> num_comb_exp_check		3476628						
ANR	3476839	Symbol	reg -> chain		3476628						
ANR	3476840	Symbol	end		3476628						
ANR	3476841	Symbol	msa		3476628						
ANR	3476842	Symbol	region		3476628						
ANR	3476843	Symbol	* reg		3476628						
ANR	3476844	Symbol	reg -> num_mem		3476628						
ANR	3476845	Symbol	option		3476628						
ANR	3476846	Symbol	ONIG_STATE_NORMAL		3476628						
ANR	3476847	Function	forward_search_range	3113:0:75473:78701							
ANR	3476848	FunctionDef	"forward_search_range (regex_t * reg , const UChar * str , const UChar * end , UChar * s , UChar * range , UChar * * low , UChar * * high , UChar * * low_prev)"		3476847	0					
ANR	3476849	CompoundStatement		3116:0:75631:78701	3476847	0					
ANR	3476850	IdentifierDeclStatement	"UChar * p , * pprev = ( UChar * ) NULL ;"	3117:2:75635:75667	3476847	0	True				
ANR	3476851	IdentifierDecl	* p		3476847	0					
ANR	3476852	IdentifierDeclType	UChar *		3476847	0					
ANR	3476853	Identifier	p		3476847	1					
ANR	3476854	IdentifierDecl	* pprev = ( UChar * ) NULL		3476847	1					
ANR	3476855	IdentifierDeclType	UChar *		3476847	0					
ANR	3476856	Identifier	pprev		3476847	1					
ANR	3476857	AssignmentExpression	* pprev = ( UChar * ) NULL		3476847	2		=			
ANR	3476858	Identifier	pprev		3476847	0					
ANR	3476859	CastExpression	( UChar * ) NULL		3476847	1					
ANR	3476860	CastTarget	UChar *		3476847	0					
ANR	3476861	Identifier	NULL		3476847	1					
ANR	3476862	ExpressionStatement	"fprintf ( stderr , ""forward_search_range: str: %d, end: %d, s: %d, range: %d\\n"" , ( int ) str , ( int ) end , ( int ) s , ( int ) range )"	3120:2:75697:75821	3476847	1	True				
ANR	3476863	CallExpression	"fprintf ( stderr , ""forward_search_range: str: %d, end: %d, s: %d, range: %d\\n"" , ( int ) str , ( int ) end , ( int ) s , ( int ) range )"		3476847	0					
ANR	3476864	Callee	fprintf		3476847	0					
ANR	3476865	Identifier	fprintf		3476847	0					
ANR	3476866	ArgumentList	stderr		3476847	1					
ANR	3476867	Argument	stderr		3476847	0					
ANR	3476868	Identifier	stderr		3476847	0					
ANR	3476869	Argument	"""forward_search_range: str: %d, end: %d, s: %d, range: %d\\n"""		3476847	1					
ANR	3476870	PrimaryExpression	"""forward_search_range: str: %d, end: %d, s: %d, range: %d\\n"""		3476847	0					
ANR	3476871	Argument	( int ) str		3476847	2					
ANR	3476872	CastExpression	( int ) str		3476847	0					
ANR	3476873	CastTarget	int		3476847	0					
ANR	3476874	Identifier	str		3476847	1					
ANR	3476875	Argument	( int ) end		3476847	3					
ANR	3476876	CastExpression	( int ) end		3476847	0					
ANR	3476877	CastTarget	int		3476847	0					
ANR	3476878	Identifier	end		3476847	1					
ANR	3476879	Argument	( int ) s		3476847	4					
ANR	3476880	CastExpression	( int ) s		3476847	0					
ANR	3476881	CastTarget	int		3476847	0					
ANR	3476882	Identifier	s		3476847	1					
ANR	3476883	Argument	( int ) range		3476847	5					
ANR	3476884	CastExpression	( int ) range		3476847	0					
ANR	3476885	CastTarget	int		3476847	0					
ANR	3476886	Identifier	range		3476847	1					
ANR	3476887	ExpressionStatement	p = s	3124:2:75833:75838	3476847	2	True				
ANR	3476888	AssignmentExpression	p = s		3476847	0		=			
ANR	3476889	Identifier	p		3476847	0					
ANR	3476890	Identifier	s		3476847	1					
ANR	3476891	IfStatement	if ( reg -> dmin > 0 )		3476847	3					
ANR	3476892	Condition	reg -> dmin > 0	3125:6:75846:75858	3476847	0	True				
ANR	3476893	RelationalExpression	reg -> dmin > 0		3476847	0		>			
ANR	3476894	PtrMemberAccess	reg -> dmin		3476847	0					
ANR	3476895	Identifier	reg		3476847	0					
ANR	3476896	Identifier	dmin		3476847	1					
ANR	3476897	PrimaryExpression	0		3476847	1					
ANR	3476898	CompoundStatement		10:21:229:229	3476847	1					
ANR	3476899	IfStatement	if ( ONIGENC_IS_SINGLEBYTE ( reg -> enc ) )		3476847	0					
ANR	3476900	Condition	ONIGENC_IS_SINGLEBYTE ( reg -> enc )	3126:8:75871:75901	3476847	0	True				
ANR	3476901	CallExpression	ONIGENC_IS_SINGLEBYTE ( reg -> enc )		3476847	0					
ANR	3476902	Callee	ONIGENC_IS_SINGLEBYTE		3476847	0					
ANR	3476903	Identifier	ONIGENC_IS_SINGLEBYTE		3476847	0					
ANR	3476904	ArgumentList	reg -> enc		3476847	1					
ANR	3476905	Argument	reg -> enc		3476847	0					
ANR	3476906	PtrMemberAccess	reg -> enc		3476847	0					
ANR	3476907	Identifier	reg		3476847	0					
ANR	3476908	Identifier	enc		3476847	1					
ANR	3476909	CompoundStatement		11:41:272:272	3476847	1					
ANR	3476910	ExpressionStatement	p += reg -> dmin	3127:6:75912:75926	3476847	0	True				
ANR	3476911	AssignmentExpression	p += reg -> dmin		3476847	0		+=			
ANR	3476912	Identifier	p		3476847	0					
ANR	3476913	PtrMemberAccess	reg -> dmin		3476847	1					
ANR	3476914	Identifier	reg		3476847	0					
ANR	3476915	Identifier	dmin		3476847	1					
ANR	3476916	ElseStatement	else		3476847	0					
ANR	3476917	CompoundStatement		15:6:319:343	3476847	0					
ANR	3476918	IdentifierDeclStatement	UChar * q = p + reg -> dmin ;	3130:6:75951:75975	3476847	0	True				
ANR	3476919	IdentifierDecl	* q = p + reg -> dmin		3476847	0					
ANR	3476920	IdentifierDeclType	UChar *		3476847	0					
ANR	3476921	Identifier	q		3476847	1					
ANR	3476922	AssignmentExpression	* q = p + reg -> dmin		3476847	2		=			
ANR	3476923	Identifier	q		3476847	0					
ANR	3476924	AdditiveExpression	p + reg -> dmin		3476847	1		+			
ANR	3476925	Identifier	p		3476847	0					
ANR	3476926	PtrMemberAccess	reg -> dmin		3476847	1					
ANR	3476927	Identifier	reg		3476847	0					
ANR	3476928	Identifier	dmin		3476847	1					
ANR	3476929	WhileStatement	while ( p < q )		3476847	1					
ANR	3476930	Condition	p < q	3131:13:75990:75994	3476847	0	True				
ANR	3476931	RelationalExpression	p < q		3476847	0		<			
ANR	3476932	Identifier	p		3476847	0					
ANR	3476933	Identifier	q		3476847	1					
ANR	3476934	ExpressionStatement	"p += enclen ( reg -> enc , p )"	3131:20:75997:76021	3476847	1	True				
ANR	3476935	AssignmentExpression	"p += enclen ( reg -> enc , p )"		3476847	0		+=			
ANR	3476936	Identifier	p		3476847	0					
ANR	3476937	CallExpression	"enclen ( reg -> enc , p )"		3476847	1					
ANR	3476938	Callee	enclen		3476847	0					
ANR	3476939	Identifier	enclen		3476847	0					
ANR	3476940	ArgumentList	reg -> enc		3476847	1					
ANR	3476941	Argument	reg -> enc		3476847	0					
ANR	3476942	PtrMemberAccess	reg -> enc		3476847	0					
ANR	3476943	Identifier	reg		3476847	0					
ANR	3476944	Identifier	enc		3476847	1					
ANR	3476945	Argument	p		3476847	1					
ANR	3476946	Identifier	p		3476847	0					
ANR	3476947	Label	retry :	3135:1:76035:76040	3476847	4	True				
ANR	3476948	Identifier	retry		3476847	0					
ANR	3476949	SwitchStatement	switch ( reg -> optimize )		3476847	5					
ANR	3476950	Condition	reg -> optimize	3136:10:76052:76064	3476847	0	True				
ANR	3476951	PtrMemberAccess	reg -> optimize		3476847	0					
ANR	3476952	Identifier	reg		3476847	0					
ANR	3476953	Identifier	optimize		3476847	1					
ANR	3476954	CompoundStatement		21:25:435:435	3476847	1					
ANR	3476955	Label	case ONIG_OPTIMIZE_EXACT :	3137:2:76071:76095	3476847	0	True				
ANR	3476956	Identifier	ONIG_OPTIMIZE_EXACT		3476847	0					
ANR	3476957	ExpressionStatement	"p = slow_search ( reg -> enc , reg -> exact , reg -> exact_end , p , end , range )"	3138:4:76101:76169	3476847	1	True				
ANR	3476958	AssignmentExpression	"p = slow_search ( reg -> enc , reg -> exact , reg -> exact_end , p , end , range )"		3476847	0		=			
ANR	3476959	Identifier	p		3476847	0					
ANR	3476960	CallExpression	"slow_search ( reg -> enc , reg -> exact , reg -> exact_end , p , end , range )"		3476847	1					
ANR	3476961	Callee	slow_search		3476847	0					
ANR	3476962	Identifier	slow_search		3476847	0					
ANR	3476963	ArgumentList	reg -> enc		3476847	1					
ANR	3476964	Argument	reg -> enc		3476847	0					
ANR	3476965	PtrMemberAccess	reg -> enc		3476847	0					
ANR	3476966	Identifier	reg		3476847	0					
ANR	3476967	Identifier	enc		3476847	1					
ANR	3476968	Argument	reg -> exact		3476847	1					
ANR	3476969	PtrMemberAccess	reg -> exact		3476847	0					
ANR	3476970	Identifier	reg		3476847	0					
ANR	3476971	Identifier	exact		3476847	1					
ANR	3476972	Argument	reg -> exact_end		3476847	2					
ANR	3476973	PtrMemberAccess	reg -> exact_end		3476847	0					
ANR	3476974	Identifier	reg		3476847	0					
ANR	3476975	Identifier	exact_end		3476847	1					
ANR	3476976	Argument	p		3476847	3					
ANR	3476977	Identifier	p		3476847	0					
ANR	3476978	Argument	end		3476847	4					
ANR	3476979	Identifier	end		3476847	0					
ANR	3476980	Argument	range		3476847	5					
ANR	3476981	Identifier	range		3476847	0					
ANR	3476982	BreakStatement	break ;	3139:4:76175:76180	3476847	2	True				
ANR	3476983	Label	case ONIG_OPTIMIZE_EXACT_IC :	3140:2:76184:76211	3476847	3	True				
ANR	3476984	Identifier	ONIG_OPTIMIZE_EXACT_IC		3476847	0					
ANR	3476985	ExpressionStatement	"p = slow_search_ic ( reg -> enc , reg -> case_fold_flag , reg -> exact , reg -> exact_end , p , end , range )"	3141:4:76217:76332	3476847	4	True				
ANR	3476986	AssignmentExpression	"p = slow_search_ic ( reg -> enc , reg -> case_fold_flag , reg -> exact , reg -> exact_end , p , end , range )"		3476847	0		=			
ANR	3476987	Identifier	p		3476847	0					
ANR	3476988	CallExpression	"slow_search_ic ( reg -> enc , reg -> case_fold_flag , reg -> exact , reg -> exact_end , p , end , range )"		3476847	1					
ANR	3476989	Callee	slow_search_ic		3476847	0					
ANR	3476990	Identifier	slow_search_ic		3476847	0					
ANR	3476991	ArgumentList	reg -> enc		3476847	1					
ANR	3476992	Argument	reg -> enc		3476847	0					
ANR	3476993	PtrMemberAccess	reg -> enc		3476847	0					
ANR	3476994	Identifier	reg		3476847	0					
ANR	3476995	Identifier	enc		3476847	1					
ANR	3476996	Argument	reg -> case_fold_flag		3476847	1					
ANR	3476997	PtrMemberAccess	reg -> case_fold_flag		3476847	0					
ANR	3476998	Identifier	reg		3476847	0					
ANR	3476999	Identifier	case_fold_flag		3476847	1					
ANR	3477000	Argument	reg -> exact		3476847	2					
ANR	3477001	PtrMemberAccess	reg -> exact		3476847	0					
ANR	3477002	Identifier	reg		3476847	0					
ANR	3477003	Identifier	exact		3476847	1					
ANR	3477004	Argument	reg -> exact_end		3476847	3					
ANR	3477005	PtrMemberAccess	reg -> exact_end		3476847	0					
ANR	3477006	Identifier	reg		3476847	0					
ANR	3477007	Identifier	exact_end		3476847	1					
ANR	3477008	Argument	p		3476847	4					
ANR	3477009	Identifier	p		3476847	0					
ANR	3477010	Argument	end		3476847	5					
ANR	3477011	Identifier	end		3476847	0					
ANR	3477012	Argument	range		3476847	6					
ANR	3477013	Identifier	range		3476847	0					
ANR	3477014	BreakStatement	break ;	3143:4:76338:76343	3476847	5	True				
ANR	3477015	Label	case ONIG_OPTIMIZE_EXACT_BM :	3145:2:76348:76375	3476847	6	True				
ANR	3477016	Identifier	ONIG_OPTIMIZE_EXACT_BM		3476847	0					
ANR	3477017	ExpressionStatement	"p = bm_search ( reg , reg -> exact , reg -> exact_end , p , end , range )"	3146:4:76381:76442	3476847	7	True				
ANR	3477018	AssignmentExpression	"p = bm_search ( reg , reg -> exact , reg -> exact_end , p , end , range )"		3476847	0		=			
ANR	3477019	Identifier	p		3476847	0					
ANR	3477020	CallExpression	"bm_search ( reg , reg -> exact , reg -> exact_end , p , end , range )"		3476847	1					
ANR	3477021	Callee	bm_search		3476847	0					
ANR	3477022	Identifier	bm_search		3476847	0					
ANR	3477023	ArgumentList	reg		3476847	1					
ANR	3477024	Argument	reg		3476847	0					
ANR	3477025	Identifier	reg		3476847	0					
ANR	3477026	Argument	reg -> exact		3476847	1					
ANR	3477027	PtrMemberAccess	reg -> exact		3476847	0					
ANR	3477028	Identifier	reg		3476847	0					
ANR	3477029	Identifier	exact		3476847	1					
ANR	3477030	Argument	reg -> exact_end		3476847	2					
ANR	3477031	PtrMemberAccess	reg -> exact_end		3476847	0					
ANR	3477032	Identifier	reg		3476847	0					
ANR	3477033	Identifier	exact_end		3476847	1					
ANR	3477034	Argument	p		3476847	3					
ANR	3477035	Identifier	p		3476847	0					
ANR	3477036	Argument	end		3476847	4					
ANR	3477037	Identifier	end		3476847	0					
ANR	3477038	Argument	range		3476847	5					
ANR	3477039	Identifier	range		3476847	0					
ANR	3477040	BreakStatement	break ;	3147:4:76448:76453	3476847	8	True				
ANR	3477041	Label	case ONIG_OPTIMIZE_EXACT_BM_NOT_REV :	3149:2:76458:76493	3476847	9	True				
ANR	3477042	Identifier	ONIG_OPTIMIZE_EXACT_BM_NOT_REV		3476847	0					
ANR	3477043	ExpressionStatement	"p = bm_search_notrev ( reg , reg -> exact , reg -> exact_end , p , end , range )"	3150:4:76499:76567	3476847	10	True				
ANR	3477044	AssignmentExpression	"p = bm_search_notrev ( reg , reg -> exact , reg -> exact_end , p , end , range )"		3476847	0		=			
ANR	3477045	Identifier	p		3476847	0					
ANR	3477046	CallExpression	"bm_search_notrev ( reg , reg -> exact , reg -> exact_end , p , end , range )"		3476847	1					
ANR	3477047	Callee	bm_search_notrev		3476847	0					
ANR	3477048	Identifier	bm_search_notrev		3476847	0					
ANR	3477049	ArgumentList	reg		3476847	1					
ANR	3477050	Argument	reg		3476847	0					
ANR	3477051	Identifier	reg		3476847	0					
ANR	3477052	Argument	reg -> exact		3476847	1					
ANR	3477053	PtrMemberAccess	reg -> exact		3476847	0					
ANR	3477054	Identifier	reg		3476847	0					
ANR	3477055	Identifier	exact		3476847	1					
ANR	3477056	Argument	reg -> exact_end		3476847	2					
ANR	3477057	PtrMemberAccess	reg -> exact_end		3476847	0					
ANR	3477058	Identifier	reg		3476847	0					
ANR	3477059	Identifier	exact_end		3476847	1					
ANR	3477060	Argument	p		3476847	3					
ANR	3477061	Identifier	p		3476847	0					
ANR	3477062	Argument	end		3476847	4					
ANR	3477063	Identifier	end		3476847	0					
ANR	3477064	Argument	range		3476847	5					
ANR	3477065	Identifier	range		3476847	0					
ANR	3477066	BreakStatement	break ;	3151:4:76573:76578	3476847	11	True				
ANR	3477067	Label	case ONIG_OPTIMIZE_MAP :	3153:2:76583:76605	3476847	12	True				
ANR	3477068	Identifier	ONIG_OPTIMIZE_MAP		3476847	0					
ANR	3477069	ExpressionStatement	"p = map_search ( reg -> enc , reg -> map , p , range )"	3154:4:76611:76655	3476847	13	True				
ANR	3477070	AssignmentExpression	"p = map_search ( reg -> enc , reg -> map , p , range )"		3476847	0		=			
ANR	3477071	Identifier	p		3476847	0					
ANR	3477072	CallExpression	"map_search ( reg -> enc , reg -> map , p , range )"		3476847	1					
ANR	3477073	Callee	map_search		3476847	0					
ANR	3477074	Identifier	map_search		3476847	0					
ANR	3477075	ArgumentList	reg -> enc		3476847	1					
ANR	3477076	Argument	reg -> enc		3476847	0					
ANR	3477077	PtrMemberAccess	reg -> enc		3476847	0					
ANR	3477078	Identifier	reg		3476847	0					
ANR	3477079	Identifier	enc		3476847	1					
ANR	3477080	Argument	reg -> map		3476847	1					
ANR	3477081	PtrMemberAccess	reg -> map		3476847	0					
ANR	3477082	Identifier	reg		3476847	0					
ANR	3477083	Identifier	map		3476847	1					
ANR	3477084	Argument	p		3476847	2					
ANR	3477085	Identifier	p		3476847	0					
ANR	3477086	Argument	range		3476847	3					
ANR	3477087	Identifier	range		3476847	0					
ANR	3477088	BreakStatement	break ;	3155:4:76661:76666	3476847	14	True				
ANR	3477089	IfStatement	if ( p && p < range )		3476847	6					
ANR	3477090	Condition	p && p < range	3158:6:76679:76692	3476847	0	True				
ANR	3477091	AndExpression	p && p < range		3476847	0		&&			
ANR	3477092	Identifier	p		3476847	0					
ANR	3477093	RelationalExpression	p < range		3476847	1		<			
ANR	3477094	Identifier	p		3476847	0					
ANR	3477095	Identifier	range		3476847	1					
ANR	3477096	CompoundStatement		43:22:1063:1063	3476847	1					
ANR	3477097	IfStatement	if ( p - reg -> dmin < s )		3476847	0					
ANR	3477098	Condition	p - reg -> dmin < s	3159:8:76705:76721	3476847	0	True				
ANR	3477099	RelationalExpression	p - reg -> dmin < s		3476847	0		<			
ANR	3477100	AdditiveExpression	p - reg -> dmin		3476847	0		-			
ANR	3477101	Identifier	p		3476847	0					
ANR	3477102	PtrMemberAccess	reg -> dmin		3476847	1					
ANR	3477103	Identifier	reg		3476847	0					
ANR	3477104	Identifier	dmin		3476847	1					
ANR	3477105	Identifier	s		3476847	1					
ANR	3477106	CompoundStatement		44:27:1092:1092	3476847	1					
ANR	3477107	Label	retry_gate :	3160:4:76730:76740	3476847	0	True				
ANR	3477108	Identifier	retry_gate		3476847	0					
ANR	3477109	ExpressionStatement	pprev = p	3161:6:76748:76757	3476847	1	True				
ANR	3477110	AssignmentExpression	pprev = p		3476847	0		=			
ANR	3477111	Identifier	pprev		3476847	0					
ANR	3477112	Identifier	p		3476847	1					
ANR	3477113	ExpressionStatement	"p += enclen ( reg -> enc , p )"	3162:6:76765:76789	3476847	2	True				
ANR	3477114	AssignmentExpression	"p += enclen ( reg -> enc , p )"		3476847	0		+=			
ANR	3477115	Identifier	p		3476847	0					
ANR	3477116	CallExpression	"enclen ( reg -> enc , p )"		3476847	1					
ANR	3477117	Callee	enclen		3476847	0					
ANR	3477118	Identifier	enclen		3476847	0					
ANR	3477119	ArgumentList	reg -> enc		3476847	1					
ANR	3477120	Argument	reg -> enc		3476847	0					
ANR	3477121	PtrMemberAccess	reg -> enc		3476847	0					
ANR	3477122	Identifier	reg		3476847	0					
ANR	3477123	Identifier	enc		3476847	1					
ANR	3477124	Argument	p		3476847	1					
ANR	3477125	Identifier	p		3476847	0					
ANR	3477126	GotoStatement	goto retry ;	3163:6:76797:76807	3476847	3	True				
ANR	3477127	Identifier	retry		3476847	0					
ANR	3477128	IfStatement	if ( reg -> sub_anchor )		3476847	1					
ANR	3477129	Condition	reg -> sub_anchor	3166:8:76824:76838	3476847	0	True				
ANR	3477130	PtrMemberAccess	reg -> sub_anchor		3476847	0					
ANR	3477131	Identifier	reg		3476847	0					
ANR	3477132	Identifier	sub_anchor		3476847	1					
ANR	3477133	CompoundStatement		52:6:1217:1228	3476847	1					
ANR	3477134	IdentifierDeclStatement	UChar * prev ;	3167:6:76849:76860	3476847	0	True				
ANR	3477135	IdentifierDecl	* prev		3476847	0					
ANR	3477136	IdentifierDeclType	UChar *		3476847	0					
ANR	3477137	Identifier	prev		3476847	1					
ANR	3477138	SwitchStatement	switch ( reg -> sub_anchor )		3476847	1					
ANR	3477139	Condition	reg -> sub_anchor	3169:14:76877:76891	3476847	0	True				
ANR	3477140	PtrMemberAccess	reg -> sub_anchor		3476847	0					
ANR	3477141	Identifier	reg		3476847	0					
ANR	3477142	Identifier	sub_anchor		3476847	1					
ANR	3477143	CompoundStatement		54:31:1262:1262	3476847	1					
ANR	3477144	Label	case ANCHOR_BEGIN_LINE :	3170:6:76902:76924	3476847	0	True				
ANR	3477145	Identifier	ANCHOR_BEGIN_LINE		3476847	0					
ANR	3477146	IfStatement	if ( ! ON_STR_BEGIN ( p ) )		3476847	1					
ANR	3477147	Condition	! ON_STR_BEGIN ( p )	3171:5:76931:76946	3476847	0	True				
ANR	3477148	UnaryOperationExpression	! ON_STR_BEGIN ( p )		3476847	0					
ANR	3477149	UnaryOperator	!		3476847	0					
ANR	3477150	CallExpression	ON_STR_BEGIN ( p )		3476847	1					
ANR	3477151	Callee	ON_STR_BEGIN		3476847	0					
ANR	3477152	Identifier	ON_STR_BEGIN		3476847	0					
ANR	3477153	ArgumentList	p		3476847	1					
ANR	3477154	Argument	p		3476847	0					
ANR	3477155	Identifier	p		3476847	0					
ANR	3477156	CompoundStatement		56:23:1317:1317	3476847	1					
ANR	3477157	ExpressionStatement	"prev = onigenc_get_prev_char_head ( reg -> enc , ( pprev ? pprev : str ) , p )"	3172:3:76954:77032	3476847	0	True				
ANR	3477158	AssignmentExpression	"prev = onigenc_get_prev_char_head ( reg -> enc , ( pprev ? pprev : str ) , p )"		3476847	0		=			
ANR	3477159	Identifier	prev		3476847	0					
ANR	3477160	CallExpression	"onigenc_get_prev_char_head ( reg -> enc , ( pprev ? pprev : str ) , p )"		3476847	1					
ANR	3477161	Callee	onigenc_get_prev_char_head		3476847	0					
ANR	3477162	Identifier	onigenc_get_prev_char_head		3476847	0					
ANR	3477163	ArgumentList	reg -> enc		3476847	1					
ANR	3477164	Argument	reg -> enc		3476847	0					
ANR	3477165	PtrMemberAccess	reg -> enc		3476847	0					
ANR	3477166	Identifier	reg		3476847	0					
ANR	3477167	Identifier	enc		3476847	1					
ANR	3477168	Argument	pprev ? pprev : str		3476847	1					
ANR	3477169	ConditionalExpression	pprev ? pprev : str		3476847	0					
ANR	3477170	Condition	pprev		3476847	0					
ANR	3477171	Identifier	pprev		3476847	0					
ANR	3477172	Identifier	pprev		3476847	1					
ANR	3477173	Identifier	str		3476847	2					
ANR	3477174	Argument	p		3476847	2					
ANR	3477175	Identifier	p		3476847	0					
ANR	3477176	IfStatement	"if ( ! ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end ) )"		3476847	1					
ANR	3477177	Condition	"! ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end )"	3174:7:77041:77084	3476847	0	True				
ANR	3477178	UnaryOperationExpression	"! ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end )"		3476847	0					
ANR	3477179	UnaryOperator	!		3476847	0					
ANR	3477180	CallExpression	"ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end )"		3476847	1					
ANR	3477181	Callee	ONIGENC_IS_MBC_NEWLINE		3476847	0					
ANR	3477182	Identifier	ONIGENC_IS_MBC_NEWLINE		3476847	0					
ANR	3477183	ArgumentList	reg -> enc		3476847	1					
ANR	3477184	Argument	reg -> enc		3476847	0					
ANR	3477185	PtrMemberAccess	reg -> enc		3476847	0					
ANR	3477186	Identifier	reg		3476847	0					
ANR	3477187	Identifier	enc		3476847	1					
ANR	3477188	Argument	prev		3476847	1					
ANR	3477189	Identifier	prev		3476847	0					
ANR	3477190	Argument	end		3476847	2					
ANR	3477191	Identifier	end		3476847	0					
ANR	3477192	GotoStatement	goto retry_gate ;	3175:5:77092:77107	3476847	1	True				
ANR	3477193	Identifier	retry_gate		3476847	0					
ANR	3477194	BreakStatement	break ;	3177:1:77113:77118	3476847	2	True				
ANR	3477195	Label	case ANCHOR_END_LINE :	3179:6:77127:77147	3476847	3	True				
ANR	3477196	Identifier	ANCHOR_END_LINE		3476847	0					
ANR	3477197	IfStatement	if ( ON_STR_END ( p ) )		3476847	4					
ANR	3477198	Condition	ON_STR_END ( p )	3180:5:77154:77166	3476847	0	True				
ANR	3477199	CallExpression	ON_STR_END ( p )		3476847	0					
ANR	3477200	Callee	ON_STR_END		3476847	0					
ANR	3477201	Identifier	ON_STR_END		3476847	0					
ANR	3477202	ArgumentList	p		3476847	1					
ANR	3477203	Argument	p		3476847	0					
ANR	3477204	Identifier	p		3476847	0					
ANR	3477205	CompoundStatement		65:20:1537:1537	3476847	1					
ANR	3477206	ExpressionStatement	"prev = ( UChar * ) onigenc_get_prev_char_head ( reg -> enc , ( pprev ? pprev : str ) , p )"	3182:3:77226:77313	3476847	0	True				
ANR	3477207	AssignmentExpression	"prev = ( UChar * ) onigenc_get_prev_char_head ( reg -> enc , ( pprev ? pprev : str ) , p )"		3476847	0		=			
ANR	3477208	Identifier	prev		3476847	0					
ANR	3477209	CastExpression	"( UChar * ) onigenc_get_prev_char_head ( reg -> enc , ( pprev ? pprev : str ) , p )"		3476847	1					
ANR	3477210	CastTarget	UChar *		3476847	0					
ANR	3477211	CallExpression	"onigenc_get_prev_char_head ( reg -> enc , ( pprev ? pprev : str ) , p )"		3476847	1					
ANR	3477212	Callee	onigenc_get_prev_char_head		3476847	0					
ANR	3477213	Identifier	onigenc_get_prev_char_head		3476847	0					
ANR	3477214	ArgumentList	reg -> enc		3476847	1					
ANR	3477215	Argument	reg -> enc		3476847	0					
ANR	3477216	PtrMemberAccess	reg -> enc		3476847	0					
ANR	3477217	Identifier	reg		3476847	0					
ANR	3477218	Identifier	enc		3476847	1					
ANR	3477219	Argument	pprev ? pprev : str		3476847	1					
ANR	3477220	ConditionalExpression	pprev ? pprev : str		3476847	0					
ANR	3477221	Condition	pprev		3476847	0					
ANR	3477222	Identifier	pprev		3476847	0					
ANR	3477223	Identifier	pprev		3476847	1					
ANR	3477224	Identifier	str		3476847	2					
ANR	3477225	Argument	p		3476847	2					
ANR	3477226	Identifier	p		3476847	0					
ANR	3477227	IfStatement	"if ( prev && ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end ) )"		3476847	1					
ANR	3477228	Condition	"prev && ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end )"	3184:7:77322:77372	3476847	0	True				
ANR	3477229	AndExpression	"prev && ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end )"		3476847	0		&&			
ANR	3477230	Identifier	prev		3476847	0					
ANR	3477231	CallExpression	"ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end )"		3476847	1					
ANR	3477232	Callee	ONIGENC_IS_MBC_NEWLINE		3476847	0					
ANR	3477233	Identifier	ONIGENC_IS_MBC_NEWLINE		3476847	0					
ANR	3477234	ArgumentList	reg -> enc		3476847	1					
ANR	3477235	Argument	reg -> enc		3476847	0					
ANR	3477236	PtrMemberAccess	reg -> enc		3476847	0					
ANR	3477237	Identifier	reg		3476847	0					
ANR	3477238	Identifier	enc		3476847	1					
ANR	3477239	Argument	prev		3476847	1					
ANR	3477240	Identifier	prev		3476847	0					
ANR	3477241	Argument	end		3476847	2					
ANR	3477242	Identifier	end		3476847	0					
ANR	3477243	GotoStatement	goto retry_gate ;	3185:5:77380:77395	3476847	1	True				
ANR	3477244	Identifier	retry_gate		3476847	0					
ANR	3477245	ElseStatement	else		3476847	0					
ANR	3477246	Statement	if	3188:6:77413:77414	3476847	0	True				
ANR	3477247	Statement	(	3188:9:77416:77416	3476847	5	True				
ANR	3477248	Statement	!	3188:10:77417:77417	3476847	6	True				
ANR	3477249	Statement	ONIGENC_IS_MBC_NEWLINE	3188:12:77419:77440	3476847	7	True				
ANR	3477250	Statement	(	3188:34:77441:77441	3476847	8	True				
ANR	3477251	Statement	reg	3188:35:77442:77444	3476847	9	True				
ANR	3477252	Statement	->	3188:38:77445:77446	3476847	10	True				
ANR	3477253	Statement	enc	3188:40:77447:77449	3476847	11	True				
ANR	3477254	Statement	","	3188:43:77450:77450	3476847	12	True				
ANR	3477255	Statement	p	3188:45:77452:77452	3476847	13	True				
ANR	3477256	Statement	","	3188:46:77453:77453	3476847	14	True				
ANR	3477257	Statement	end	3188:48:77455:77457	3476847	15	True				
ANR	3477258	Statement	)	3188:51:77458:77458	3476847	16	True				
ANR	3477259	Statement	&&	3190:14:77509:77510	3476847	17	True				
ANR	3477260	Statement	!	3190:17:77512:77512	3476847	18	True				
ANR	3477261	Statement	ONIGENC_IS_MBC_CRNL	3190:19:77514:77532	3476847	19	True				
ANR	3477262	Statement	(	3190:38:77533:77533	3476847	20	True				
ANR	3477263	Statement	reg	3190:39:77534:77536	3476847	21	True				
ANR	3477264	Statement	->	3190:42:77537:77538	3476847	22	True				
ANR	3477265	Statement	enc	3190:44:77539:77541	3476847	23	True				
ANR	3477266	Statement	","	3190:47:77542:77542	3476847	24	True				
ANR	3477267	Statement	p	3190:49:77544:77544	3476847	25	True				
ANR	3477268	Statement	","	3190:50:77545:77545	3476847	26	True				
ANR	3477269	Statement	end	3190:52:77547:77549	3476847	27	True				
ANR	3477270	Statement	)	3190:55:77550:77550	3476847	28	True				
ANR	3477271	Statement	)	3192:16:77575:77575	3476847	29	True				
ANR	3477272	GotoStatement	goto retry_gate ;	3193:3:77580:77595	3476847	30	True				
ANR	3477273	Identifier	retry_gate		3476847	0					
ANR	3477274	BreakStatement	break ;	3194:1:77598:77603	3476847	31	True				
ANR	3477275	IfStatement	if ( reg -> dmax == 0 )		3476847	2					
ANR	3477276	Condition	reg -> dmax == 0	3198:8:77628:77641	3476847	0	True				
ANR	3477277	EqualityExpression	reg -> dmax == 0		3476847	0		==			
ANR	3477278	PtrMemberAccess	reg -> dmax		3476847	0					
ANR	3477279	Identifier	reg		3476847	0					
ANR	3477280	Identifier	dmax		3476847	1					
ANR	3477281	PrimaryExpression	0		3476847	1					
ANR	3477282	CompoundStatement		83:24:2012:2012	3476847	1					
ANR	3477283	ExpressionStatement	* low = p	3199:6:77652:77660	3476847	0	True				
ANR	3477284	AssignmentExpression	* low = p		3476847	0		=			
ANR	3477285	UnaryOperationExpression	* low		3476847	0					
ANR	3477286	UnaryOperator	*		3476847	0					
ANR	3477287	Identifier	low		3476847	1					
ANR	3477288	Identifier	p		3476847	1					
ANR	3477289	IfStatement	if ( low_prev )		3476847	1					
ANR	3477290	Condition	low_prev	3200:10:77672:77679	3476847	0	True				
ANR	3477291	Identifier	low_prev		3476847	0					
ANR	3477292	CompoundStatement		85:20:2050:2050	3476847	1					
ANR	3477293	IfStatement	if ( * low > s )		3476847	0					
ANR	3477294	Condition	* low > s	3201:5:77689:77696	3476847	0	True				
ANR	3477295	RelationalExpression	* low > s		3476847	0		>			
ANR	3477296	UnaryOperationExpression	* low		3476847	0					
ANR	3477297	UnaryOperator	*		3476847	0					
ANR	3477298	Identifier	low		3476847	1					
ANR	3477299	Identifier	s		3476847	1					
ANR	3477300	ExpressionStatement	"* low_prev = onigenc_get_prev_char_head ( reg -> enc , s , p )"	3202:3:77702:77756	3476847	1	True				
ANR	3477301	AssignmentExpression	"* low_prev = onigenc_get_prev_char_head ( reg -> enc , s , p )"		3476847	0		=			
ANR	3477302	UnaryOperationExpression	* low_prev		3476847	0					
ANR	3477303	UnaryOperator	*		3476847	0					
ANR	3477304	Identifier	low_prev		3476847	1					
ANR	3477305	CallExpression	"onigenc_get_prev_char_head ( reg -> enc , s , p )"		3476847	1					
ANR	3477306	Callee	onigenc_get_prev_char_head		3476847	0					
ANR	3477307	Identifier	onigenc_get_prev_char_head		3476847	0					
ANR	3477308	ArgumentList	reg -> enc		3476847	1					
ANR	3477309	Argument	reg -> enc		3476847	0					
ANR	3477310	PtrMemberAccess	reg -> enc		3476847	0					
ANR	3477311	Identifier	reg		3476847	0					
ANR	3477312	Identifier	enc		3476847	1					
ANR	3477313	Argument	s		3476847	1					
ANR	3477314	Identifier	s		3476847	0					
ANR	3477315	Argument	p		3476847	2					
ANR	3477316	Identifier	p		3476847	0					
ANR	3477317	ElseStatement	else		3476847	0					
ANR	3477318	ExpressionStatement	"* low_prev = onigenc_get_prev_char_head ( reg -> enc , ( pprev ? pprev : str ) , p )"	3204:3:77767:77848	3476847	0	True				
ANR	3477319	AssignmentExpression	"* low_prev = onigenc_get_prev_char_head ( reg -> enc , ( pprev ? pprev : str ) , p )"		3476847	0		=			
ANR	3477320	UnaryOperationExpression	* low_prev		3476847	0					
ANR	3477321	UnaryOperator	*		3476847	0					
ANR	3477322	Identifier	low_prev		3476847	1					
ANR	3477323	CallExpression	"onigenc_get_prev_char_head ( reg -> enc , ( pprev ? pprev : str ) , p )"		3476847	1					
ANR	3477324	Callee	onigenc_get_prev_char_head		3476847	0					
ANR	3477325	Identifier	onigenc_get_prev_char_head		3476847	0					
ANR	3477326	ArgumentList	reg -> enc		3476847	1					
ANR	3477327	Argument	reg -> enc		3476847	0					
ANR	3477328	PtrMemberAccess	reg -> enc		3476847	0					
ANR	3477329	Identifier	reg		3476847	0					
ANR	3477330	Identifier	enc		3476847	1					
ANR	3477331	Argument	pprev ? pprev : str		3476847	1					
ANR	3477332	ConditionalExpression	pprev ? pprev : str		3476847	0					
ANR	3477333	Condition	pprev		3476847	0					
ANR	3477334	Identifier	pprev		3476847	0					
ANR	3477335	Identifier	pprev		3476847	1					
ANR	3477336	Identifier	str		3476847	2					
ANR	3477337	Argument	p		3476847	2					
ANR	3477338	Identifier	p		3476847	0					
ANR	3477339	ElseStatement	else		3476847	0					
ANR	3477340	CompoundStatement		93:9:2241:2241	3476847	0					
ANR	3477341	IfStatement	if ( reg -> dmax != ONIG_INFINITE_DISTANCE )		3476847	0					
ANR	3477342	Condition	reg -> dmax != ONIG_INFINITE_DISTANCE	3209:10:77885:77919	3476847	0	True				
ANR	3477343	EqualityExpression	reg -> dmax != ONIG_INFINITE_DISTANCE		3476847	0		!=			
ANR	3477344	PtrMemberAccess	reg -> dmax		3476847	0					
ANR	3477345	Identifier	reg		3476847	0					
ANR	3477346	Identifier	dmax		3476847	1					
ANR	3477347	Identifier	ONIG_INFINITE_DISTANCE		3476847	1					
ANR	3477348	CompoundStatement		94:47:2290:2290	3476847	1					
ANR	3477349	ExpressionStatement	* low = p - reg -> dmax	3210:1:77925:77945	3476847	0	True				
ANR	3477350	AssignmentExpression	* low = p - reg -> dmax		3476847	0		=			
ANR	3477351	UnaryOperationExpression	* low		3476847	0					
ANR	3477352	UnaryOperator	*		3476847	0					
ANR	3477353	Identifier	low		3476847	1					
ANR	3477354	AdditiveExpression	p - reg -> dmax		3476847	1		-			
ANR	3477355	Identifier	p		3476847	0					
ANR	3477356	PtrMemberAccess	reg -> dmax		3476847	1					
ANR	3477357	Identifier	reg		3476847	0					
ANR	3477358	Identifier	dmax		3476847	1					
ANR	3477359	IfStatement	if ( * low > s )		3476847	1					
ANR	3477360	Condition	* low > s	3211:5:77952:77959	3476847	0	True				
ANR	3477361	RelationalExpression	* low > s		3476847	0		>			
ANR	3477362	UnaryOperationExpression	* low		3476847	0					
ANR	3477363	UnaryOperator	*		3476847	0					
ANR	3477364	Identifier	low		3476847	1					
ANR	3477365	Identifier	s		3476847	1					
ANR	3477366	CompoundStatement		96:15:2330:2330	3476847	1					
ANR	3477367	ExpressionStatement	"* low = onigenc_get_right_adjust_char_head_with_prev ( reg -> enc , s , * low , ( const UChar * * ) low_prev )"	3212:3:77967:78076	3476847	0	True				
ANR	3477368	AssignmentExpression	"* low = onigenc_get_right_adjust_char_head_with_prev ( reg -> enc , s , * low , ( const UChar * * ) low_prev )"		3476847	0		=			
ANR	3477369	UnaryOperationExpression	* low		3476847	0					
ANR	3477370	UnaryOperator	*		3476847	0					
ANR	3477371	Identifier	low		3476847	1					
ANR	3477372	CallExpression	"onigenc_get_right_adjust_char_head_with_prev ( reg -> enc , s , * low , ( const UChar * * ) low_prev )"		3476847	1					
ANR	3477373	Callee	onigenc_get_right_adjust_char_head_with_prev		3476847	0					
ANR	3477374	Identifier	onigenc_get_right_adjust_char_head_with_prev		3476847	0					
ANR	3477375	ArgumentList	reg -> enc		3476847	1					
ANR	3477376	Argument	reg -> enc		3476847	0					
ANR	3477377	PtrMemberAccess	reg -> enc		3476847	0					
ANR	3477378	Identifier	reg		3476847	0					
ANR	3477379	Identifier	enc		3476847	1					
ANR	3477380	Argument	s		3476847	1					
ANR	3477381	Identifier	s		3476847	0					
ANR	3477382	Argument	* low		3476847	2					
ANR	3477383	UnaryOperationExpression	* low		3476847	0					
ANR	3477384	UnaryOperator	*		3476847	0					
ANR	3477385	Identifier	low		3476847	1					
ANR	3477386	Argument	( const UChar * * ) low_prev		3476847	3					
ANR	3477387	CastExpression	( const UChar * * ) low_prev		3476847	0					
ANR	3477388	CastTarget	const UChar * *		3476847	0					
ANR	3477389	Identifier	low_prev		3476847	1					
ANR	3477390	IfStatement	if ( low_prev && IS_NULL ( * low_prev ) )		3476847	1					
ANR	3477391	Condition	low_prev && IS_NULL ( * low_prev )	3214:7:78085:78114	3476847	0	True				
ANR	3477392	AndExpression	low_prev && IS_NULL ( * low_prev )		3476847	0		&&			
ANR	3477393	Identifier	low_prev		3476847	0					
ANR	3477394	CallExpression	IS_NULL ( * low_prev )		3476847	1					
ANR	3477395	Callee	IS_NULL		3476847	0					
ANR	3477396	Identifier	IS_NULL		3476847	0					
ANR	3477397	ArgumentList	* low_prev		3476847	1					
ANR	3477398	Argument	* low_prev		3476847	0					
ANR	3477399	UnaryOperationExpression	* low_prev		3476847	0					
ANR	3477400	UnaryOperator	*		3476847	0					
ANR	3477401	Identifier	low_prev		3476847	1					
ANR	3477402	ExpressionStatement	"* low_prev = onigenc_get_prev_char_head ( reg -> enc , ( pprev ? pprev : s ) , * low )"	3215:5:78122:78206	3476847	1	True				
ANR	3477403	AssignmentExpression	"* low_prev = onigenc_get_prev_char_head ( reg -> enc , ( pprev ? pprev : s ) , * low )"		3476847	0		=			
ANR	3477404	UnaryOperationExpression	* low_prev		3476847	0					
ANR	3477405	UnaryOperator	*		3476847	0					
ANR	3477406	Identifier	low_prev		3476847	1					
ANR	3477407	CallExpression	"onigenc_get_prev_char_head ( reg -> enc , ( pprev ? pprev : s ) , * low )"		3476847	1					
ANR	3477408	Callee	onigenc_get_prev_char_head		3476847	0					
ANR	3477409	Identifier	onigenc_get_prev_char_head		3476847	0					
ANR	3477410	ArgumentList	reg -> enc		3476847	1					
ANR	3477411	Argument	reg -> enc		3476847	0					
ANR	3477412	PtrMemberAccess	reg -> enc		3476847	0					
ANR	3477413	Identifier	reg		3476847	0					
ANR	3477414	Identifier	enc		3476847	1					
ANR	3477415	Argument	pprev ? pprev : s		3476847	1					
ANR	3477416	ConditionalExpression	pprev ? pprev : s		3476847	0					
ANR	3477417	Condition	pprev		3476847	0					
ANR	3477418	Identifier	pprev		3476847	0					
ANR	3477419	Identifier	pprev		3476847	1					
ANR	3477420	Identifier	s		3476847	2					
ANR	3477421	Argument	* low		3476847	2					
ANR	3477422	UnaryOperationExpression	* low		3476847	0					
ANR	3477423	UnaryOperator	*		3476847	0					
ANR	3477424	Identifier	low		3476847	1					
ANR	3477425	ElseStatement	else		3476847	0					
ANR	3477426	CompoundStatement		103:6:2585:2585	3476847	0					
ANR	3477427	IfStatement	if ( low_prev )		3476847	0					
ANR	3477428	Condition	low_prev	3219:7:78226:78233	3476847	0	True				
ANR	3477429	Identifier	low_prev		3476847	0					
ANR	3477430	ExpressionStatement	"* low_prev = onigenc_get_prev_char_head ( reg -> enc , ( pprev ? pprev : str ) , * low )"	3220:5:78241:78330	3476847	1	True				
ANR	3477431	AssignmentExpression	"* low_prev = onigenc_get_prev_char_head ( reg -> enc , ( pprev ? pprev : str ) , * low )"		3476847	0		=			
ANR	3477432	UnaryOperationExpression	* low_prev		3476847	0					
ANR	3477433	UnaryOperator	*		3476847	0					
ANR	3477434	Identifier	low_prev		3476847	1					
ANR	3477435	CallExpression	"onigenc_get_prev_char_head ( reg -> enc , ( pprev ? pprev : str ) , * low )"		3476847	1					
ANR	3477436	Callee	onigenc_get_prev_char_head		3476847	0					
ANR	3477437	Identifier	onigenc_get_prev_char_head		3476847	0					
ANR	3477438	ArgumentList	reg -> enc		3476847	1					
ANR	3477439	Argument	reg -> enc		3476847	0					
ANR	3477440	PtrMemberAccess	reg -> enc		3476847	0					
ANR	3477441	Identifier	reg		3476847	0					
ANR	3477442	Identifier	enc		3476847	1					
ANR	3477443	Argument	pprev ? pprev : str		3476847	1					
ANR	3477444	ConditionalExpression	pprev ? pprev : str		3476847	0					
ANR	3477445	Condition	pprev		3476847	0					
ANR	3477446	Identifier	pprev		3476847	0					
ANR	3477447	Identifier	pprev		3476847	1					
ANR	3477448	Identifier	str		3476847	2					
ANR	3477449	Argument	* low		3476847	2					
ANR	3477450	UnaryOperationExpression	* low		3476847	0					
ANR	3477451	UnaryOperator	*		3476847	0					
ANR	3477452	Identifier	low		3476847	1					
ANR	3477453	ExpressionStatement	* high = p - reg -> dmin	3226:4:78423:78444	3476847	3	True				
ANR	3477454	AssignmentExpression	* high = p - reg -> dmin		3476847	0		=			
ANR	3477455	UnaryOperationExpression	* high		3476847	0					
ANR	3477456	UnaryOperator	*		3476847	0					
ANR	3477457	Identifier	high		3476847	1					
ANR	3477458	AdditiveExpression	p - reg -> dmin		3476847	1		-			
ANR	3477459	Identifier	p		3476847	0					
ANR	3477460	PtrMemberAccess	reg -> dmin		3476847	1					
ANR	3477461	Identifier	reg		3476847	0					
ANR	3477462	Identifier	dmin		3476847	1					
ANR	3477463	ExpressionStatement	"fprintf ( stderr , ""forward_search_range success: low: %d, high: %d, dmin: %d, dmax: %d\\n"" , ( int ) ( * low - str ) , ( int ) ( * high - str ) , reg -> dmin , reg -> dmax )"	3229:4:78476:78636	3476847	4	True				
ANR	3477464	CallExpression	"fprintf ( stderr , ""forward_search_range success: low: %d, high: %d, dmin: %d, dmax: %d\\n"" , ( int ) ( * low - str ) , ( int ) ( * high - str ) , reg -> dmin , reg -> dmax )"		3476847	0					
ANR	3477465	Callee	fprintf		3476847	0					
ANR	3477466	Identifier	fprintf		3476847	0					
ANR	3477467	ArgumentList	stderr		3476847	1					
ANR	3477468	Argument	stderr		3476847	0					
ANR	3477469	Identifier	stderr		3476847	0					
ANR	3477470	Argument	"""forward_search_range success: low: %d, high: %d, dmin: %d, dmax: %d\\n"""		3476847	1					
ANR	3477471	PrimaryExpression	"""forward_search_range success: low: %d, high: %d, dmin: %d, dmax: %d\\n"""		3476847	0					
ANR	3477472	Argument	( int ) ( * low - str )		3476847	2					
ANR	3477473	CastExpression	( int ) ( * low - str )		3476847	0					
ANR	3477474	CastTarget	int		3476847	0					
ANR	3477475	AdditiveExpression	* low - str		3476847	1		-			
ANR	3477476	UnaryOperationExpression	* low		3476847	0					
ANR	3477477	UnaryOperator	*		3476847	0					
ANR	3477478	Identifier	low		3476847	1					
ANR	3477479	Identifier	str		3476847	1					
ANR	3477480	Argument	( int ) ( * high - str )		3476847	3					
ANR	3477481	CastExpression	( int ) ( * high - str )		3476847	0					
ANR	3477482	CastTarget	int		3476847	0					
ANR	3477483	AdditiveExpression	* high - str		3476847	1		-			
ANR	3477484	UnaryOperationExpression	* high		3476847	0					
ANR	3477485	UnaryOperator	*		3476847	0					
ANR	3477486	Identifier	high		3476847	1					
ANR	3477487	Identifier	str		3476847	1					
ANR	3477488	Argument	reg -> dmin		3476847	4					
ANR	3477489	PtrMemberAccess	reg -> dmin		3476847	0					
ANR	3477490	Identifier	reg		3476847	0					
ANR	3477491	Identifier	dmin		3476847	1					
ANR	3477492	Argument	reg -> dmax		3476847	5					
ANR	3477493	PtrMemberAccess	reg -> dmax		3476847	0					
ANR	3477494	Identifier	reg		3476847	0					
ANR	3477495	Identifier	dmax		3476847	1					
ANR	3477496	ReturnStatement	return 1 ;	3233:4:78649:78657	3476847	5	True				
ANR	3477497	PrimaryExpression	1		3476847	0					
ANR	3477498	ReturnStatement	return 0 ;	3236:2:78680:78688	3476847	7	True				
ANR	3477499	PrimaryExpression	0		3476847	0					
ANR	3477500	ReturnType	static int		3476847	1					
ANR	3477501	Identifier	forward_search_range		3476847	2					
ANR	3477502	ParameterList	"regex_t * reg , const UChar * str , const UChar * end , UChar * s , UChar * range , UChar * * low , UChar * * high , UChar * * low_prev"		3476847	3					
ANR	3477503	Parameter	regex_t * reg	3114:21:75505:75516	3476847	0	True				
ANR	3477504	ParameterType	regex_t *		3476847	0					
ANR	3477505	Identifier	reg		3476847	1					
ANR	3477506	Parameter	const UChar * str	3114:35:75519:75534	3476847	1	True				
ANR	3477507	ParameterType	const UChar *		3476847	0					
ANR	3477508	Identifier	str		3476847	1					
ANR	3477509	Parameter	const UChar * end	3114:53:75537:75552	3476847	2	True				
ANR	3477510	ParameterType	const UChar *		3476847	0					
ANR	3477511	Identifier	end		3476847	1					
ANR	3477512	Parameter	UChar * s	3114:71:75555:75562	3476847	3	True				
ANR	3477513	ParameterType	UChar *		3476847	0					
ANR	3477514	Identifier	s		3476847	1					
ANR	3477515	Parameter	UChar * range	3115:7:75572:75583	3476847	4	True				
ANR	3477516	ParameterType	UChar *		3476847	0					
ANR	3477517	Identifier	range		3476847	1					
ANR	3477518	Parameter	UChar * * low	3115:21:75586:75596	3476847	5	True				
ANR	3477519	ParameterType	UChar * *		3476847	0					
ANR	3477520	Identifier	low		3476847	1					
ANR	3477521	Parameter	UChar * * high	3115:34:75599:75610	3476847	6	True				
ANR	3477522	ParameterType	UChar * *		3476847	0					
ANR	3477523	Identifier	high		3476847	1					
ANR	3477524	Parameter	UChar * * low_prev	3115:48:75613:75628	3476847	7	True				
ANR	3477525	ParameterType	UChar * *		3476847	0					
ANR	3477526	Identifier	low_prev		3476847	1					
ANR	3477527	CFGEntryNode	ENTRY		3476847		True				
ANR	3477528	CFGExitNode	EXIT		3476847		True				
ANR	3477529	Symbol	onigenc_get_right_adjust_char_head_with_prev		3476847						
ANR	3477530	Symbol	reg -> dmin		3476847						
ANR	3477531	Symbol	prev		3476847						
ANR	3477532	Symbol	* high		3476847						
ANR	3477533	Symbol	onigenc_get_prev_char_head		3476847						
ANR	3477534	Symbol	range		3476847						
ANR	3477535	Symbol	ON_STR_BEGIN		3476847						
ANR	3477536	Symbol	map_search		3476847						
ANR	3477537	Symbol	ONIGENC_IS_MBC_NEWLINE		3476847						
ANR	3477538	Symbol	reg -> exact_end		3476847						
ANR	3477539	Symbol	ONIG_INFINITE_DISTANCE		3476847						
ANR	3477540	Symbol	high		3476847						
ANR	3477541	Symbol	ON_STR_END		3476847						
ANR	3477542	Symbol	IS_NULL		3476847						
ANR	3477543	Symbol	reg		3476847						
ANR	3477544	Symbol	low		3476847						
ANR	3477545	Symbol	reg -> optimize		3476847						
ANR	3477546	Symbol	reg -> sub_anchor		3476847						
ANR	3477547	Symbol	* low_prev		3476847						
ANR	3477548	Symbol	end		3476847						
ANR	3477549	Symbol	slow_search		3476847						
ANR	3477550	Symbol	ONIGENC_IS_SINGLEBYTE		3476847						
ANR	3477551	Symbol	bm_search		3476847						
ANR	3477552	Symbol	reg -> map		3476847						
ANR	3477553	Symbol	NULL		3476847						
ANR	3477554	Symbol	low_prev		3476847						
ANR	3477555	Symbol	stderr		3476847						
ANR	3477556	Symbol	enclen		3476847						
ANR	3477557	Symbol	reg -> enc		3476847						
ANR	3477558	Symbol	slow_search_ic		3476847						
ANR	3477559	Symbol	str		3476847						
ANR	3477560	Symbol	p		3476847						
ANR	3477561	Symbol	q		3476847						
ANR	3477562	Symbol	s		3476847						
ANR	3477563	Symbol	reg -> dmax		3476847						
ANR	3477564	Symbol	reg -> exact		3476847						
ANR	3477565	Symbol	reg -> case_fold_flag		3476847						
ANR	3477566	Symbol	bm_search_notrev		3476847						
ANR	3477567	Symbol	pprev		3476847						
ANR	3477568	Symbol	* reg		3476847						
ANR	3477569	Symbol	* low		3476847						
ANR	3477570	Function	backward_search_range	3244:0:78854:81497							
ANR	3477571	FunctionDef	"backward_search_range (regex_t * reg , const UChar * str , const UChar * end , UChar * s , const UChar * range , UChar * adjrange , UChar * * low , UChar * * high)"		3477570	0					
ANR	3477572	CompoundStatement		3248:0:79027:81497	3477570	0					
ANR	3477573	IdentifierDeclStatement	int r ;	3249:2:79031:79036	3477570	0	True				
ANR	3477574	IdentifierDecl	r		3477570	0					
ANR	3477575	IdentifierDeclType	int		3477570	0					
ANR	3477576	Identifier	r		3477570	1					
ANR	3477577	IdentifierDeclStatement	UChar * p ;	3250:2:79040:79048	3477570	1	True				
ANR	3477578	IdentifierDecl	* p		3477570	0					
ANR	3477579	IdentifierDeclType	UChar *		3477570	0					
ANR	3477580	Identifier	p		3477570	1					
ANR	3477581	ExpressionStatement	range += reg -> dmin	3252:2:79053:79071	3477570	2	True				
ANR	3477582	AssignmentExpression	range += reg -> dmin		3477570	0		+=			
ANR	3477583	Identifier	range		3477570	0					
ANR	3477584	PtrMemberAccess	reg -> dmin		3477570	1					
ANR	3477585	Identifier	reg		3477570	0					
ANR	3477586	Identifier	dmin		3477570	1					
ANR	3477587	ExpressionStatement	p = s	3253:2:79075:79080	3477570	3	True				
ANR	3477588	AssignmentExpression	p = s		3477570	0		=			
ANR	3477589	Identifier	p		3477570	0					
ANR	3477590	Identifier	s		3477570	1					
ANR	3477591	Label	retry :	3255:1:79084:79089	3477570	4	True				
ANR	3477592	Identifier	retry		3477570	0					
ANR	3477593	SwitchStatement	switch ( reg -> optimize )		3477570	5					
ANR	3477594	Condition	reg -> optimize	3256:10:79101:79113	3477570	0	True				
ANR	3477595	PtrMemberAccess	reg -> optimize		3477570	0					
ANR	3477596	Identifier	reg		3477570	0					
ANR	3477597	Identifier	optimize		3477570	1					
ANR	3477598	CompoundStatement		9:25:88:88	3477570	1					
ANR	3477599	Label	case ONIG_OPTIMIZE_EXACT :	3257:2:79120:79144	3477570	0	True				
ANR	3477600	Identifier	ONIG_OPTIMIZE_EXACT		3477570	0					
ANR	3477601	Label	exact_method :	3258:2:79148:79160	3477570	1	True				
ANR	3477602	Identifier	exact_method		3477570	0					
ANR	3477603	ExpressionStatement	"p = slow_search_backward ( reg -> enc , reg -> exact , reg -> exact_end , range , adjrange , end , p )"	3259:4:79166:79261	3477570	2	True				
ANR	3477604	AssignmentExpression	"p = slow_search_backward ( reg -> enc , reg -> exact , reg -> exact_end , range , adjrange , end , p )"		3477570	0		=			
ANR	3477605	Identifier	p		3477570	0					
ANR	3477606	CallExpression	"slow_search_backward ( reg -> enc , reg -> exact , reg -> exact_end , range , adjrange , end , p )"		3477570	1					
ANR	3477607	Callee	slow_search_backward		3477570	0					
ANR	3477608	Identifier	slow_search_backward		3477570	0					
ANR	3477609	ArgumentList	reg -> enc		3477570	1					
ANR	3477610	Argument	reg -> enc		3477570	0					
ANR	3477611	PtrMemberAccess	reg -> enc		3477570	0					
ANR	3477612	Identifier	reg		3477570	0					
ANR	3477613	Identifier	enc		3477570	1					
ANR	3477614	Argument	reg -> exact		3477570	1					
ANR	3477615	PtrMemberAccess	reg -> exact		3477570	0					
ANR	3477616	Identifier	reg		3477570	0					
ANR	3477617	Identifier	exact		3477570	1					
ANR	3477618	Argument	reg -> exact_end		3477570	2					
ANR	3477619	PtrMemberAccess	reg -> exact_end		3477570	0					
ANR	3477620	Identifier	reg		3477570	0					
ANR	3477621	Identifier	exact_end		3477570	1					
ANR	3477622	Argument	range		3477570	3					
ANR	3477623	Identifier	range		3477570	0					
ANR	3477624	Argument	adjrange		3477570	4					
ANR	3477625	Identifier	adjrange		3477570	0					
ANR	3477626	Argument	end		3477570	5					
ANR	3477627	Identifier	end		3477570	0					
ANR	3477628	Argument	p		3477570	6					
ANR	3477629	Identifier	p		3477570	0					
ANR	3477630	BreakStatement	break ;	3261:4:79267:79272	3477570	3	True				
ANR	3477631	Label	case ONIG_OPTIMIZE_EXACT_IC :	3263:2:79277:79304	3477570	4	True				
ANR	3477632	Identifier	ONIG_OPTIMIZE_EXACT_IC		3477570	0					
ANR	3477633	ExpressionStatement	"p = slow_search_backward_ic ( reg -> enc , reg -> case_fold_flag , reg -> exact , reg -> exact_end , range , adjrange , end , p )"	3264:4:79310:79485	3477570	5	True				
ANR	3477634	AssignmentExpression	"p = slow_search_backward_ic ( reg -> enc , reg -> case_fold_flag , reg -> exact , reg -> exact_end , range , adjrange , end , p )"		3477570	0		=			
ANR	3477635	Identifier	p		3477570	0					
ANR	3477636	CallExpression	"slow_search_backward_ic ( reg -> enc , reg -> case_fold_flag , reg -> exact , reg -> exact_end , range , adjrange , end , p )"		3477570	1					
ANR	3477637	Callee	slow_search_backward_ic		3477570	0					
ANR	3477638	Identifier	slow_search_backward_ic		3477570	0					
ANR	3477639	ArgumentList	reg -> enc		3477570	1					
ANR	3477640	Argument	reg -> enc		3477570	0					
ANR	3477641	PtrMemberAccess	reg -> enc		3477570	0					
ANR	3477642	Identifier	reg		3477570	0					
ANR	3477643	Identifier	enc		3477570	1					
ANR	3477644	Argument	reg -> case_fold_flag		3477570	1					
ANR	3477645	PtrMemberAccess	reg -> case_fold_flag		3477570	0					
ANR	3477646	Identifier	reg		3477570	0					
ANR	3477647	Identifier	case_fold_flag		3477570	1					
ANR	3477648	Argument	reg -> exact		3477570	2					
ANR	3477649	PtrMemberAccess	reg -> exact		3477570	0					
ANR	3477650	Identifier	reg		3477570	0					
ANR	3477651	Identifier	exact		3477570	1					
ANR	3477652	Argument	reg -> exact_end		3477570	3					
ANR	3477653	PtrMemberAccess	reg -> exact_end		3477570	0					
ANR	3477654	Identifier	reg		3477570	0					
ANR	3477655	Identifier	exact_end		3477570	1					
ANR	3477656	Argument	range		3477570	4					
ANR	3477657	Identifier	range		3477570	0					
ANR	3477658	Argument	adjrange		3477570	5					
ANR	3477659	Identifier	adjrange		3477570	0					
ANR	3477660	Argument	end		3477570	6					
ANR	3477661	Identifier	end		3477570	0					
ANR	3477662	Argument	p		3477570	7					
ANR	3477663	Identifier	p		3477570	0					
ANR	3477664	BreakStatement	break ;	3267:4:79491:79496	3477570	6	True				
ANR	3477665	Label	case ONIG_OPTIMIZE_EXACT_BM :	3269:2:79501:79528	3477570	7	True				
ANR	3477666	Identifier	ONIG_OPTIMIZE_EXACT_BM		3477570	0					
ANR	3477667	Label	case ONIG_OPTIMIZE_EXACT_BM_NOT_REV :	3270:2:79532:79567	3477570	8	True				
ANR	3477668	Identifier	ONIG_OPTIMIZE_EXACT_BM_NOT_REV		3477570	0					
ANR	3477669	IfStatement	if ( IS_NULL ( reg -> int_map_backward ) )		3477570	9					
ANR	3477670	Condition	IS_NULL ( reg -> int_map_backward )	3271:8:79577:79606	3477570	0	True				
ANR	3477671	CallExpression	IS_NULL ( reg -> int_map_backward )		3477570	0					
ANR	3477672	Callee	IS_NULL		3477570	0					
ANR	3477673	Identifier	IS_NULL		3477570	0					
ANR	3477674	ArgumentList	reg -> int_map_backward		3477570	1					
ANR	3477675	Argument	reg -> int_map_backward		3477570	0					
ANR	3477676	PtrMemberAccess	reg -> int_map_backward		3477570	0					
ANR	3477677	Identifier	reg		3477570	0					
ANR	3477678	Identifier	int_map_backward		3477570	1					
ANR	3477679	CompoundStatement		24:40:581:581	3477570	1					
ANR	3477680	IfStatement	if ( s - range < BM_BACKWARD_SEARCH_LENGTH_THRESHOLD )		3477570	0					
ANR	3477681	Condition	s - range < BM_BACKWARD_SEARCH_LENGTH_THRESHOLD	3272:10:79621:79667	3477570	0	True				
ANR	3477682	RelationalExpression	s - range < BM_BACKWARD_SEARCH_LENGTH_THRESHOLD		3477570	0		<			
ANR	3477683	AdditiveExpression	s - range		3477570	0		-			
ANR	3477684	Identifier	s		3477570	0					
ANR	3477685	Identifier	range		3477570	1					
ANR	3477686	Identifier	BM_BACKWARD_SEARCH_LENGTH_THRESHOLD		3477570	1					
ANR	3477687	GotoStatement	goto exact_method ;	3273:1:79671:79688	3477570	1	True				
ANR	3477688	Identifier	exact_method		3477570	0					
ANR	3477689	ExpressionStatement	"r = set_bm_backward_skip ( reg -> exact , reg -> exact_end , reg -> enc , & ( reg -> int_map_backward ) )"	3275:6:79697:79795	3477570	1	True				
ANR	3477690	AssignmentExpression	"r = set_bm_backward_skip ( reg -> exact , reg -> exact_end , reg -> enc , & ( reg -> int_map_backward ) )"		3477570	0		=			
ANR	3477691	Identifier	r		3477570	0					
ANR	3477692	CallExpression	"set_bm_backward_skip ( reg -> exact , reg -> exact_end , reg -> enc , & ( reg -> int_map_backward ) )"		3477570	1					
ANR	3477693	Callee	set_bm_backward_skip		3477570	0					
ANR	3477694	Identifier	set_bm_backward_skip		3477570	0					
ANR	3477695	ArgumentList	reg -> exact		3477570	1					
ANR	3477696	Argument	reg -> exact		3477570	0					
ANR	3477697	PtrMemberAccess	reg -> exact		3477570	0					
ANR	3477698	Identifier	reg		3477570	0					
ANR	3477699	Identifier	exact		3477570	1					
ANR	3477700	Argument	reg -> exact_end		3477570	1					
ANR	3477701	PtrMemberAccess	reg -> exact_end		3477570	0					
ANR	3477702	Identifier	reg		3477570	0					
ANR	3477703	Identifier	exact_end		3477570	1					
ANR	3477704	Argument	reg -> enc		3477570	2					
ANR	3477705	PtrMemberAccess	reg -> enc		3477570	0					
ANR	3477706	Identifier	reg		3477570	0					
ANR	3477707	Identifier	enc		3477570	1					
ANR	3477708	Argument	& ( reg -> int_map_backward )		3477570	3					
ANR	3477709	UnaryOperationExpression	& ( reg -> int_map_backward )		3477570	0					
ANR	3477710	UnaryOperator	&		3477570	0					
ANR	3477711	PtrMemberAccess	reg -> int_map_backward		3477570	1					
ANR	3477712	Identifier	reg		3477570	0					
ANR	3477713	Identifier	int_map_backward		3477570	1					
ANR	3477714	IfStatement	if ( r )		3477570	2					
ANR	3477715	Condition	r	3277:10:79807:79807	3477570	0	True				
ANR	3477716	Identifier	r		3477570	0					
ANR	3477717	ReturnStatement	return r ;	3277:13:79810:79818	3477570	1	True				
ANR	3477718	Identifier	r		3477570	0					
ANR	3477719	ExpressionStatement	"p = bm_search_backward ( reg , reg -> exact , reg -> exact_end , range , adjrange , end , p )"	3279:4:79830:79916	3477570	10	True				
ANR	3477720	AssignmentExpression	"p = bm_search_backward ( reg , reg -> exact , reg -> exact_end , range , adjrange , end , p )"		3477570	0		=			
ANR	3477721	Identifier	p		3477570	0					
ANR	3477722	CallExpression	"bm_search_backward ( reg , reg -> exact , reg -> exact_end , range , adjrange , end , p )"		3477570	1					
ANR	3477723	Callee	bm_search_backward		3477570	0					
ANR	3477724	Identifier	bm_search_backward		3477570	0					
ANR	3477725	ArgumentList	reg		3477570	1					
ANR	3477726	Argument	reg		3477570	0					
ANR	3477727	Identifier	reg		3477570	0					
ANR	3477728	Argument	reg -> exact		3477570	1					
ANR	3477729	PtrMemberAccess	reg -> exact		3477570	0					
ANR	3477730	Identifier	reg		3477570	0					
ANR	3477731	Identifier	exact		3477570	1					
ANR	3477732	Argument	reg -> exact_end		3477570	2					
ANR	3477733	PtrMemberAccess	reg -> exact_end		3477570	0					
ANR	3477734	Identifier	reg		3477570	0					
ANR	3477735	Identifier	exact_end		3477570	1					
ANR	3477736	Argument	range		3477570	3					
ANR	3477737	Identifier	range		3477570	0					
ANR	3477738	Argument	adjrange		3477570	4					
ANR	3477739	Identifier	adjrange		3477570	0					
ANR	3477740	Argument	end		3477570	5					
ANR	3477741	Identifier	end		3477570	0					
ANR	3477742	Argument	p		3477570	6					
ANR	3477743	Identifier	p		3477570	0					
ANR	3477744	BreakStatement	break ;	3281:4:79922:79927	3477570	11	True				
ANR	3477745	Label	case ONIG_OPTIMIZE_MAP :	3283:2:79932:79954	3477570	12	True				
ANR	3477746	Identifier	ONIG_OPTIMIZE_MAP		3477570	0					
ANR	3477747	ExpressionStatement	"p = map_search_backward ( reg -> enc , reg -> map , range , adjrange , p )"	3284:4:79960:80023	3477570	13	True				
ANR	3477748	AssignmentExpression	"p = map_search_backward ( reg -> enc , reg -> map , range , adjrange , p )"		3477570	0		=			
ANR	3477749	Identifier	p		3477570	0					
ANR	3477750	CallExpression	"map_search_backward ( reg -> enc , reg -> map , range , adjrange , p )"		3477570	1					
ANR	3477751	Callee	map_search_backward		3477570	0					
ANR	3477752	Identifier	map_search_backward		3477570	0					
ANR	3477753	ArgumentList	reg -> enc		3477570	1					
ANR	3477754	Argument	reg -> enc		3477570	0					
ANR	3477755	PtrMemberAccess	reg -> enc		3477570	0					
ANR	3477756	Identifier	reg		3477570	0					
ANR	3477757	Identifier	enc		3477570	1					
ANR	3477758	Argument	reg -> map		3477570	1					
ANR	3477759	PtrMemberAccess	reg -> map		3477570	0					
ANR	3477760	Identifier	reg		3477570	0					
ANR	3477761	Identifier	map		3477570	1					
ANR	3477762	Argument	range		3477570	2					
ANR	3477763	Identifier	range		3477570	0					
ANR	3477764	Argument	adjrange		3477570	3					
ANR	3477765	Identifier	adjrange		3477570	0					
ANR	3477766	Argument	p		3477570	4					
ANR	3477767	Identifier	p		3477570	0					
ANR	3477768	BreakStatement	break ;	3285:4:80029:80034	3477570	14	True				
ANR	3477769	IfStatement	if ( p )		3477570	6					
ANR	3477770	Condition	p	3288:6:80047:80047	3477570	0	True				
ANR	3477771	Identifier	p		3477570	0					
ANR	3477772	CompoundStatement		41:9:1022:1022	3477570	1					
ANR	3477773	IfStatement	if ( reg -> sub_anchor )		3477570	0					
ANR	3477774	Condition	reg -> sub_anchor	3289:8:80060:80074	3477570	0	True				
ANR	3477775	PtrMemberAccess	reg -> sub_anchor		3477570	0					
ANR	3477776	Identifier	reg		3477570	0					
ANR	3477777	Identifier	sub_anchor		3477570	1					
ANR	3477778	CompoundStatement		43:6:1057:1068	3477570	1					
ANR	3477779	IdentifierDeclStatement	UChar * prev ;	3290:6:80085:80096	3477570	0	True				
ANR	3477780	IdentifierDecl	* prev		3477570	0					
ANR	3477781	IdentifierDeclType	UChar *		3477570	0					
ANR	3477782	Identifier	prev		3477570	1					
ANR	3477783	SwitchStatement	switch ( reg -> sub_anchor )		3477570	1					
ANR	3477784	Condition	reg -> sub_anchor	3292:14:80113:80127	3477570	0	True				
ANR	3477785	PtrMemberAccess	reg -> sub_anchor		3477570	0					
ANR	3477786	Identifier	reg		3477570	0					
ANR	3477787	Identifier	sub_anchor		3477570	1					
ANR	3477788	CompoundStatement		45:31:1102:1102	3477570	1					
ANR	3477789	Label	case ANCHOR_BEGIN_LINE :	3293:6:80138:80160	3477570	0	True				
ANR	3477790	Identifier	ANCHOR_BEGIN_LINE		3477570	0					
ANR	3477791	IfStatement	if ( ! ON_STR_BEGIN ( p ) )		3477570	1					
ANR	3477792	Condition	! ON_STR_BEGIN ( p )	3294:5:80167:80182	3477570	0	True				
ANR	3477793	UnaryOperationExpression	! ON_STR_BEGIN ( p )		3477570	0					
ANR	3477794	UnaryOperator	!		3477570	0					
ANR	3477795	CallExpression	ON_STR_BEGIN ( p )		3477570	1					
ANR	3477796	Callee	ON_STR_BEGIN		3477570	0					
ANR	3477797	Identifier	ON_STR_BEGIN		3477570	0					
ANR	3477798	ArgumentList	p		3477570	1					
ANR	3477799	Argument	p		3477570	0					
ANR	3477800	Identifier	p		3477570	0					
ANR	3477801	CompoundStatement		47:23:1157:1157	3477570	1					
ANR	3477802	ExpressionStatement	"prev = onigenc_get_prev_char_head ( reg -> enc , str , p )"	3295:3:80190:80241	3477570	0	True				
ANR	3477803	AssignmentExpression	"prev = onigenc_get_prev_char_head ( reg -> enc , str , p )"		3477570	0		=			
ANR	3477804	Identifier	prev		3477570	0					
ANR	3477805	CallExpression	"onigenc_get_prev_char_head ( reg -> enc , str , p )"		3477570	1					
ANR	3477806	Callee	onigenc_get_prev_char_head		3477570	0					
ANR	3477807	Identifier	onigenc_get_prev_char_head		3477570	0					
ANR	3477808	ArgumentList	reg -> enc		3477570	1					
ANR	3477809	Argument	reg -> enc		3477570	0					
ANR	3477810	PtrMemberAccess	reg -> enc		3477570	0					
ANR	3477811	Identifier	reg		3477570	0					
ANR	3477812	Identifier	enc		3477570	1					
ANR	3477813	Argument	str		3477570	1					
ANR	3477814	Identifier	str		3477570	0					
ANR	3477815	Argument	p		3477570	2					
ANR	3477816	Identifier	p		3477570	0					
ANR	3477817	IfStatement	"if ( ! ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end ) )"		3477570	1					
ANR	3477818	Condition	"! ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end )"	3296:7:80250:80293	3477570	0	True				
ANR	3477819	UnaryOperationExpression	"! ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end )"		3477570	0					
ANR	3477820	UnaryOperator	!		3477570	0					
ANR	3477821	CallExpression	"ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end )"		3477570	1					
ANR	3477822	Callee	ONIGENC_IS_MBC_NEWLINE		3477570	0					
ANR	3477823	Identifier	ONIGENC_IS_MBC_NEWLINE		3477570	0					
ANR	3477824	ArgumentList	reg -> enc		3477570	1					
ANR	3477825	Argument	reg -> enc		3477570	0					
ANR	3477826	PtrMemberAccess	reg -> enc		3477570	0					
ANR	3477827	Identifier	reg		3477570	0					
ANR	3477828	Identifier	enc		3477570	1					
ANR	3477829	Argument	prev		3477570	1					
ANR	3477830	Identifier	prev		3477570	0					
ANR	3477831	Argument	end		3477570	2					
ANR	3477832	Identifier	end		3477570	0					
ANR	3477833	CompoundStatement		49:53:1268:1268	3477570	1					
ANR	3477834	ExpressionStatement	p = prev	3297:5:80303:80311	3477570	0	True				
ANR	3477835	AssignmentExpression	p = prev		3477570	0		=			
ANR	3477836	Identifier	p		3477570	0					
ANR	3477837	Identifier	prev		3477570	1					
ANR	3477838	GotoStatement	goto retry ;	3298:5:80318:80328	3477570	1	True				
ANR	3477839	Identifier	retry		3477570	0					
ANR	3477840	BreakStatement	break ;	3301:1:80339:80344	3477570	2	True				
ANR	3477841	Label	case ANCHOR_END_LINE :	3303:6:80353:80373	3477570	3	True				
ANR	3477842	Identifier	ANCHOR_END_LINE		3477570	0					
ANR	3477843	IfStatement	if ( ON_STR_END ( p ) )		3477570	4					
ANR	3477844	Condition	ON_STR_END ( p )	3304:5:80380:80392	3477570	0	True				
ANR	3477845	CallExpression	ON_STR_END ( p )		3477570	0					
ANR	3477846	Callee	ON_STR_END		3477570	0					
ANR	3477847	Identifier	ON_STR_END		3477570	0					
ANR	3477848	ArgumentList	p		3477570	1					
ANR	3477849	Argument	p		3477570	0					
ANR	3477850	Identifier	p		3477570	0					
ANR	3477851	CompoundStatement		57:20:1367:1367	3477570	1					
ANR	3477852	ExpressionStatement	"prev = onigenc_get_prev_char_head ( reg -> enc , adjrange , p )"	3306:3:80452:80508	3477570	0	True				
ANR	3477853	AssignmentExpression	"prev = onigenc_get_prev_char_head ( reg -> enc , adjrange , p )"		3477570	0		=			
ANR	3477854	Identifier	prev		3477570	0					
ANR	3477855	CallExpression	"onigenc_get_prev_char_head ( reg -> enc , adjrange , p )"		3477570	1					
ANR	3477856	Callee	onigenc_get_prev_char_head		3477570	0					
ANR	3477857	Identifier	onigenc_get_prev_char_head		3477570	0					
ANR	3477858	ArgumentList	reg -> enc		3477570	1					
ANR	3477859	Argument	reg -> enc		3477570	0					
ANR	3477860	PtrMemberAccess	reg -> enc		3477570	0					
ANR	3477861	Identifier	reg		3477570	0					
ANR	3477862	Identifier	enc		3477570	1					
ANR	3477863	Argument	adjrange		3477570	1					
ANR	3477864	Identifier	adjrange		3477570	0					
ANR	3477865	Argument	p		3477570	2					
ANR	3477866	Identifier	p		3477570	0					
ANR	3477867	IfStatement	if ( IS_NULL ( prev ) )		3477570	1					
ANR	3477868	Condition	IS_NULL ( prev )	3307:7:80517:80529	3477570	0	True				
ANR	3477869	CallExpression	IS_NULL ( prev )		3477570	0					
ANR	3477870	Callee	IS_NULL		3477570	0					
ANR	3477871	Identifier	IS_NULL		3477570	0					
ANR	3477872	ArgumentList	prev		3477570	1					
ANR	3477873	Argument	prev		3477570	0					
ANR	3477874	Identifier	prev		3477570	0					
ANR	3477875	GotoStatement	goto fail ;	3307:22:80532:80541	3477570	1	True				
ANR	3477876	Identifier	fail		3477570	0					
ANR	3477877	IfStatement	"if ( ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end ) )"		3477570	2					
ANR	3477878	Condition	"ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end )"	3308:7:80550:80592	3477570	0	True				
ANR	3477879	CallExpression	"ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end )"		3477570	0					
ANR	3477880	Callee	ONIGENC_IS_MBC_NEWLINE		3477570	0					
ANR	3477881	Identifier	ONIGENC_IS_MBC_NEWLINE		3477570	0					
ANR	3477882	ArgumentList	reg -> enc		3477570	1					
ANR	3477883	Argument	reg -> enc		3477570	0					
ANR	3477884	PtrMemberAccess	reg -> enc		3477570	0					
ANR	3477885	Identifier	reg		3477570	0					
ANR	3477886	Identifier	enc		3477570	1					
ANR	3477887	Argument	prev		3477570	1					
ANR	3477888	Identifier	prev		3477570	0					
ANR	3477889	Argument	end		3477570	2					
ANR	3477890	Identifier	end		3477570	0					
ANR	3477891	CompoundStatement		61:52:1567:1567	3477570	1					
ANR	3477892	ExpressionStatement	p = prev	3309:5:80602:80610	3477570	0	True				
ANR	3477893	AssignmentExpression	p = prev		3477570	0		=			
ANR	3477894	Identifier	p		3477570	0					
ANR	3477895	Identifier	prev		3477570	1					
ANR	3477896	GotoStatement	goto retry ;	3310:5:80617:80627	3477570	1	True				
ANR	3477897	Identifier	retry		3477570	0					
ANR	3477898	ElseStatement	else		3477570	0					
ANR	3477899	Statement	if	3314:6:80650:80651	3477570	0	True				
ANR	3477900	Statement	(	3314:9:80653:80653	3477570	5	True				
ANR	3477901	Statement	!	3314:10:80654:80654	3477570	6	True				
ANR	3477902	Statement	ONIGENC_IS_MBC_NEWLINE	3314:12:80656:80677	3477570	7	True				
ANR	3477903	Statement	(	3314:34:80678:80678	3477570	8	True				
ANR	3477904	Statement	reg	3314:35:80679:80681	3477570	9	True				
ANR	3477905	Statement	->	3314:38:80682:80683	3477570	10	True				
ANR	3477906	Statement	enc	3314:40:80684:80686	3477570	11	True				
ANR	3477907	Statement	","	3314:43:80687:80687	3477570	12	True				
ANR	3477908	Statement	p	3314:45:80689:80689	3477570	13	True				
ANR	3477909	Statement	","	3314:46:80690:80690	3477570	14	True				
ANR	3477910	Statement	end	3314:48:80692:80694	3477570	15	True				
ANR	3477911	Statement	)	3314:51:80695:80695	3477570	16	True				
ANR	3477912	Statement	&&	3316:14:80746:80747	3477570	17	True				
ANR	3477913	Statement	!	3316:17:80749:80749	3477570	18	True				
ANR	3477914	Statement	ONIGENC_IS_MBC_CRNL	3316:19:80751:80769	3477570	19	True				
ANR	3477915	Statement	(	3316:38:80770:80770	3477570	20	True				
ANR	3477916	Statement	reg	3316:39:80771:80773	3477570	21	True				
ANR	3477917	Statement	->	3316:42:80774:80775	3477570	22	True				
ANR	3477918	Statement	enc	3316:44:80776:80778	3477570	23	True				
ANR	3477919	Statement	","	3316:47:80779:80779	3477570	24	True				
ANR	3477920	Statement	p	3316:49:80781:80781	3477570	25	True				
ANR	3477921	Statement	","	3316:50:80782:80782	3477570	26	True				
ANR	3477922	Statement	end	3316:52:80784:80786	3477570	27	True				
ANR	3477923	Statement	)	3316:55:80787:80787	3477570	28	True				
ANR	3477924	Statement	)	3318:16:80812:80812	3477570	29	True				
ANR	3477925	CompoundStatement		71:18:1786:1786	3477570	30					
ANR	3477926	ExpressionStatement	"p = onigenc_get_prev_char_head ( reg -> enc , adjrange , p )"	3319:3:80819:80872	3477570	0	True				
ANR	3477927	AssignmentExpression	"p = onigenc_get_prev_char_head ( reg -> enc , adjrange , p )"		3477570	0		=			
ANR	3477928	Identifier	p		3477570	0					
ANR	3477929	CallExpression	"onigenc_get_prev_char_head ( reg -> enc , adjrange , p )"		3477570	1					
ANR	3477930	Callee	onigenc_get_prev_char_head		3477570	0					
ANR	3477931	Identifier	onigenc_get_prev_char_head		3477570	0					
ANR	3477932	ArgumentList	reg -> enc		3477570	1					
ANR	3477933	Argument	reg -> enc		3477570	0					
ANR	3477934	PtrMemberAccess	reg -> enc		3477570	0					
ANR	3477935	Identifier	reg		3477570	0					
ANR	3477936	Identifier	enc		3477570	1					
ANR	3477937	Argument	adjrange		3477570	1					
ANR	3477938	Identifier	adjrange		3477570	0					
ANR	3477939	Argument	p		3477570	2					
ANR	3477940	Identifier	p		3477570	0					
ANR	3477941	IfStatement	if ( IS_NULL ( p ) )		3477570	1					
ANR	3477942	Condition	IS_NULL ( p )	3320:7:80881:80890	3477570	0	True				
ANR	3477943	CallExpression	IS_NULL ( p )		3477570	0					
ANR	3477944	Callee	IS_NULL		3477570	0					
ANR	3477945	Identifier	IS_NULL		3477570	0					
ANR	3477946	ArgumentList	p		3477570	1					
ANR	3477947	Argument	p		3477570	0					
ANR	3477948	Identifier	p		3477570	0					
ANR	3477949	GotoStatement	goto fail ;	3320:19:80893:80902	3477570	1	True				
ANR	3477950	Identifier	fail		3477570	0					
ANR	3477951	GotoStatement	goto retry ;	3321:3:80907:80917	3477570	2	True				
ANR	3477952	Identifier	retry		3477570	0					
ANR	3477953	BreakStatement	break ;	3323:1:80923:80928	3477570	31	True				
ANR	3477954	IfStatement	if ( reg -> dmax != ONIG_INFINITE_DISTANCE )		3477570	1					
ANR	3477955	Condition	reg -> dmax != ONIG_INFINITE_DISTANCE	3328:8:81023:81057	3477570	0	True				
ANR	3477956	EqualityExpression	reg -> dmax != ONIG_INFINITE_DISTANCE		3477570	0		!=			
ANR	3477957	PtrMemberAccess	reg -> dmax		3477570	0					
ANR	3477958	Identifier	reg		3477570	0					
ANR	3477959	Identifier	dmax		3477570	1					
ANR	3477960	Identifier	ONIG_INFINITE_DISTANCE		3477570	1					
ANR	3477961	CompoundStatement		81:45:2032:2032	3477570	1					
ANR	3477962	ExpressionStatement	* low = p - reg -> dmax	3329:6:81068:81089	3477570	0	True				
ANR	3477963	AssignmentExpression	* low = p - reg -> dmax		3477570	0		=			
ANR	3477964	UnaryOperationExpression	* low		3477570	0					
ANR	3477965	UnaryOperator	*		3477570	0					
ANR	3477966	Identifier	low		3477570	1					
ANR	3477967	AdditiveExpression	p - reg -> dmax		3477570	1		-			
ANR	3477968	Identifier	p		3477570	0					
ANR	3477969	PtrMemberAccess	reg -> dmax		3477570	1					
ANR	3477970	Identifier	reg		3477570	0					
ANR	3477971	Identifier	dmax		3477570	1					
ANR	3477972	ExpressionStatement	* high = p - reg -> dmin	3330:6:81097:81118	3477570	1	True				
ANR	3477973	AssignmentExpression	* high = p - reg -> dmin		3477570	0		=			
ANR	3477974	UnaryOperationExpression	* high		3477570	0					
ANR	3477975	UnaryOperator	*		3477570	0					
ANR	3477976	Identifier	high		3477570	1					
ANR	3477977	AdditiveExpression	p - reg -> dmin		3477570	1		-			
ANR	3477978	Identifier	p		3477570	0					
ANR	3477979	PtrMemberAccess	reg -> dmin		3477570	1					
ANR	3477980	Identifier	reg		3477570	0					
ANR	3477981	Identifier	dmin		3477570	1					
ANR	3477982	ExpressionStatement	"* high = onigenc_get_right_adjust_char_head ( reg -> enc , adjrange , * high )"	3331:6:81126:81195	3477570	2	True				
ANR	3477983	AssignmentExpression	"* high = onigenc_get_right_adjust_char_head ( reg -> enc , adjrange , * high )"		3477570	0		=			
ANR	3477984	UnaryOperationExpression	* high		3477570	0					
ANR	3477985	UnaryOperator	*		3477570	0					
ANR	3477986	Identifier	high		3477570	1					
ANR	3477987	CallExpression	"onigenc_get_right_adjust_char_head ( reg -> enc , adjrange , * high )"		3477570	1					
ANR	3477988	Callee	onigenc_get_right_adjust_char_head		3477570	0					
ANR	3477989	Identifier	onigenc_get_right_adjust_char_head		3477570	0					
ANR	3477990	ArgumentList	reg -> enc		3477570	1					
ANR	3477991	Argument	reg -> enc		3477570	0					
ANR	3477992	PtrMemberAccess	reg -> enc		3477570	0					
ANR	3477993	Identifier	reg		3477570	0					
ANR	3477994	Identifier	enc		3477570	1					
ANR	3477995	Argument	adjrange		3477570	1					
ANR	3477996	Identifier	adjrange		3477570	0					
ANR	3477997	Argument	* high		3477570	2					
ANR	3477998	UnaryOperationExpression	* high		3477570	0					
ANR	3477999	UnaryOperator	*		3477570	0					
ANR	3478000	Identifier	high		3477570	1					
ANR	3478001	ExpressionStatement	"fprintf ( stderr , ""backward_search_range: low: %d, high: %d\\n"" , ( int ) ( * low - str ) , ( int ) ( * high - str ) )"	3335:4:81233:81340	3477570	2	True				
ANR	3478002	CallExpression	"fprintf ( stderr , ""backward_search_range: low: %d, high: %d\\n"" , ( int ) ( * low - str ) , ( int ) ( * high - str ) )"		3477570	0					
ANR	3478003	Callee	fprintf		3477570	0					
ANR	3478004	Identifier	fprintf		3477570	0					
ANR	3478005	ArgumentList	stderr		3477570	1					
ANR	3478006	Argument	stderr		3477570	0					
ANR	3478007	Identifier	stderr		3477570	0					
ANR	3478008	Argument	"""backward_search_range: low: %d, high: %d\\n"""		3477570	1					
ANR	3478009	PrimaryExpression	"""backward_search_range: low: %d, high: %d\\n"""		3477570	0					
ANR	3478010	Argument	( int ) ( * low - str )		3477570	2					
ANR	3478011	CastExpression	( int ) ( * low - str )		3477570	0					
ANR	3478012	CastTarget	int		3477570	0					
ANR	3478013	AdditiveExpression	* low - str		3477570	1		-			
ANR	3478014	UnaryOperationExpression	* low		3477570	0					
ANR	3478015	UnaryOperator	*		3477570	0					
ANR	3478016	Identifier	low		3477570	1					
ANR	3478017	Identifier	str		3477570	1					
ANR	3478018	Argument	( int ) ( * high - str )		3477570	3					
ANR	3478019	CastExpression	( int ) ( * high - str )		3477570	0					
ANR	3478020	CastTarget	int		3477570	0					
ANR	3478021	AdditiveExpression	* high - str		3477570	1		-			
ANR	3478022	UnaryOperationExpression	* high		3477570	0					
ANR	3478023	UnaryOperator	*		3477570	0					
ANR	3478024	Identifier	high		3477570	1					
ANR	3478025	Identifier	str		3477570	1					
ANR	3478026	ReturnStatement	return 1 ;	3338:4:81353:81361	3477570	3	True				
ANR	3478027	PrimaryExpression	1		3477570	0					
ANR	3478028	Label	fail :	3341:1:81383:81387	3477570	7	True				
ANR	3478029	Identifier	fail		3477570	0					
ANR	3478030	ExpressionStatement	"fprintf ( stderr , ""backward_search_range: fail.\\n"" )"	3343:2:81416:81465	3477570	8	True				
ANR	3478031	CallExpression	"fprintf ( stderr , ""backward_search_range: fail.\\n"" )"		3477570	0					
ANR	3478032	Callee	fprintf		3477570	0					
ANR	3478033	Identifier	fprintf		3477570	0					
ANR	3478034	ArgumentList	stderr		3477570	1					
ANR	3478035	Argument	stderr		3477570	0					
ANR	3478036	Identifier	stderr		3477570	0					
ANR	3478037	Argument	"""backward_search_range: fail.\\n"""		3477570	1					
ANR	3478038	PrimaryExpression	"""backward_search_range: fail.\\n"""		3477570	0					
ANR	3478039	ReturnStatement	return 0 ;	3345:2:81476:81484	3477570	9	True				
ANR	3478040	PrimaryExpression	0		3477570	0					
ANR	3478041	ReturnType	static int		3477570	1					
ANR	3478042	Identifier	backward_search_range		3477570	2					
ANR	3478043	ParameterList	"regex_t * reg , const UChar * str , const UChar * end , UChar * s , const UChar * range , UChar * adjrange , UChar * * low , UChar * * high"		3477570	3					
ANR	3478044	Parameter	regex_t * reg	3245:22:78887:78898	3477570	0	True				
ANR	3478045	ParameterType	regex_t *		3477570	0					
ANR	3478046	Identifier	reg		3477570	1					
ANR	3478047	Parameter	const UChar * str	3245:36:78901:78916	3477570	1	True				
ANR	3478048	ParameterType	const UChar *		3477570	0					
ANR	3478049	Identifier	str		3477570	1					
ANR	3478050	Parameter	const UChar * end	3245:54:78919:78934	3477570	2	True				
ANR	3478051	ParameterType	const UChar *		3477570	0					
ANR	3478052	Identifier	end		3477570	1					
ANR	3478053	Parameter	UChar * s	3246:8:78945:78952	3477570	3	True				
ANR	3478054	ParameterType	UChar *		3477570	0					
ANR	3478055	Identifier	s		3477570	1					
ANR	3478056	Parameter	const UChar * range	3246:18:78955:78972	3477570	4	True				
ANR	3478057	ParameterType	const UChar *		3477570	0					
ANR	3478058	Identifier	range		3477570	1					
ANR	3478059	Parameter	UChar * adjrange	3246:38:78975:78989	3477570	5	True				
ANR	3478060	ParameterType	UChar *		3477570	0					
ANR	3478061	Identifier	adjrange		3477570	1					
ANR	3478062	Parameter	UChar * * low	3247:8:79000:79010	3477570	6	True				
ANR	3478063	ParameterType	UChar * *		3477570	0					
ANR	3478064	Identifier	low		3477570	1					
ANR	3478065	Parameter	UChar * * high	3247:21:79013:79024	3477570	7	True				
ANR	3478066	ParameterType	UChar * *		3477570	0					
ANR	3478067	Identifier	high		3477570	1					
ANR	3478068	CFGEntryNode	ENTRY		3477570		True				
ANR	3478069	CFGExitNode	EXIT		3477570		True				
ANR	3478070	Symbol	reg -> dmin		3477570						
ANR	3478071	Symbol	prev		3477570						
ANR	3478072	Symbol	* high		3477570						
ANR	3478073	Symbol	onigenc_get_prev_char_head		3477570						
ANR	3478074	Symbol	range		3477570						
ANR	3478075	Symbol	map_search_backward		3477570						
ANR	3478076	Symbol	ON_STR_BEGIN		3477570						
ANR	3478077	Symbol	ONIGENC_IS_MBC_NEWLINE		3477570						
ANR	3478078	Symbol	reg -> exact_end		3477570						
ANR	3478079	Symbol	reg -> int_map_backward		3477570						
ANR	3478080	Symbol	ONIG_INFINITE_DISTANCE		3477570						
ANR	3478081	Symbol	high		3477570						
ANR	3478082	Symbol	ON_STR_END		3477570						
ANR	3478083	Symbol	IS_NULL		3477570						
ANR	3478084	Symbol	reg		3477570						
ANR	3478085	Symbol	low		3477570						
ANR	3478086	Symbol	reg -> optimize		3477570						
ANR	3478087	Symbol	reg -> sub_anchor		3477570						
ANR	3478088	Symbol	end		3477570						
ANR	3478089	Symbol	set_bm_backward_skip		3477570						
ANR	3478090	Symbol	bm_search_backward		3477570						
ANR	3478091	Symbol	adjrange		3477570						
ANR	3478092	Symbol	reg -> map		3477570						
ANR	3478093	Symbol	onigenc_get_right_adjust_char_head		3477570						
ANR	3478094	Symbol	stderr		3477570						
ANR	3478095	Symbol	reg -> enc		3477570						
ANR	3478096	Symbol	BM_BACKWARD_SEARCH_LENGTH_THRESHOLD		3477570						
ANR	3478097	Symbol	str		3477570						
ANR	3478098	Symbol	p		3477570						
ANR	3478099	Symbol	r		3477570						
ANR	3478100	Symbol	s		3477570						
ANR	3478101	Symbol	reg -> dmax		3477570						
ANR	3478102	Symbol	reg -> exact		3477570						
ANR	3478103	Symbol	reg -> case_fold_flag		3477570						
ANR	3478104	Symbol	& reg -> int_map_backward		3477570						
ANR	3478105	Symbol	slow_search_backward		3477570						
ANR	3478106	Symbol	* reg		3477570						
ANR	3478107	Symbol	slow_search_backward_ic		3477570						
ANR	3478108	Symbol	* low		3477570						
ANR	3478109	Function	onig_search	3349:0:81501:91929							
ANR	3478110	FunctionDef	"onig_search (regex_t * reg , const UChar * str , const UChar * end , const UChar * start , const UChar * range , OnigRegion * region , OnigOptionType option)"		3478109	0					
ANR	3478111	CompoundStatement		3352:0:81662:91929	3478109	0					
ANR	3478112	IdentifierDeclStatement	int r ;	3353:2:81666:81671	3478109	0	True				
ANR	3478113	IdentifierDecl	r		3478109	0					
ANR	3478114	IdentifierDeclType	int		3478109	0					
ANR	3478115	Identifier	r		3478109	1					
ANR	3478116	IdentifierDeclStatement	"UChar * s , * prev ;"	3354:2:81675:81690	3478109	1	True				
ANR	3478117	IdentifierDecl	* s		3478109	0					
ANR	3478118	IdentifierDeclType	UChar *		3478109	0					
ANR	3478119	Identifier	s		3478109	1					
ANR	3478120	IdentifierDecl	* prev		3478109	1					
ANR	3478121	IdentifierDeclType	UChar *		3478109	0					
ANR	3478122	Identifier	prev		3478109	1					
ANR	3478123	IdentifierDeclStatement	OnigMatchArg msa ;	3355:2:81694:81710	3478109	2	True				
ANR	3478124	IdentifierDecl	msa		3478109	0					
ANR	3478125	IdentifierDeclType	OnigMatchArg		3478109	0					
ANR	3478126	Identifier	msa		3478109	1					
ANR	3478127	IdentifierDeclStatement	const UChar * orig_start = start ;	3356:2:81714:81745	3478109	3	True				
ANR	3478128	IdentifierDecl	* orig_start = start		3478109	0					
ANR	3478129	IdentifierDeclType	const UChar *		3478109	0					
ANR	3478130	Identifier	orig_start		3478109	1					
ANR	3478131	AssignmentExpression	* orig_start = start		3478109	2		=			
ANR	3478132	Identifier	start		3478109	0					
ANR	3478133	Identifier	start		3478109	1					
ANR	3478134	IdentifierDeclStatement	const UChar * orig_range = range ;	3358:2:81806:81837	3478109	4	True				
ANR	3478135	IdentifierDecl	* orig_range = range		3478109	0					
ANR	3478136	IdentifierDeclType	const UChar *		3478109	0					
ANR	3478137	Identifier	orig_range		3478109	1					
ANR	3478138	AssignmentExpression	* orig_range = range		3478109	2		=			
ANR	3478139	Identifier	range		3478109	0					
ANR	3478140	Identifier	range		3478109	1					
ANR	3478141	Label	start :	3362:1:81915:81920	3478109	5	True				
ANR	3478142	Identifier	start		3478109	0					
ANR	3478143	ExpressionStatement	THREAD_ATOMIC_START	3363:2:81924:81943	3478109	6	True				
ANR	3478144	Identifier	THREAD_ATOMIC_START		3478109	0					
ANR	3478145	IfStatement	if ( ONIG_STATE ( reg ) >= ONIG_STATE_NORMAL )		3478109	7					
ANR	3478146	Condition	ONIG_STATE ( reg ) >= ONIG_STATE_NORMAL	3364:6:81951:81986	3478109	0	True				
ANR	3478147	RelationalExpression	ONIG_STATE ( reg ) >= ONIG_STATE_NORMAL		3478109	0		>=			
ANR	3478148	CallExpression	ONIG_STATE ( reg )		3478109	0					
ANR	3478149	Callee	ONIG_STATE		3478109	0					
ANR	3478150	Identifier	ONIG_STATE		3478109	0					
ANR	3478151	ArgumentList	reg		3478109	1					
ANR	3478152	Argument	reg		3478109	0					
ANR	3478153	Identifier	reg		3478109	0					
ANR	3478154	Identifier	ONIG_STATE_NORMAL		3478109	1					
ANR	3478155	CompoundStatement		13:44:326:326	3478109	1					
ANR	3478156	ExpressionStatement	ONIG_STATE_INC ( reg )	3365:4:81995:82014	3478109	0	True				
ANR	3478157	CallExpression	ONIG_STATE_INC ( reg )		3478109	0					
ANR	3478158	Callee	ONIG_STATE_INC		3478109	0					
ANR	3478159	Identifier	ONIG_STATE_INC		3478109	0					
ANR	3478160	ArgumentList	reg		3478109	1					
ANR	3478161	Argument	reg		3478109	0					
ANR	3478162	Identifier	reg		3478109	0					
ANR	3478163	IfStatement	if ( IS_NOT_NULL ( reg -> chain ) && ONIG_STATE ( reg ) == ONIG_STATE_NORMAL )		3478109	1					
ANR	3478164	Condition	IS_NOT_NULL ( reg -> chain ) && ONIG_STATE ( reg ) == ONIG_STATE_NORMAL	3366:8:82024:82086	3478109	0	True				
ANR	3478165	AndExpression	IS_NOT_NULL ( reg -> chain ) && ONIG_STATE ( reg ) == ONIG_STATE_NORMAL		3478109	0		&&			
ANR	3478166	CallExpression	IS_NOT_NULL ( reg -> chain )		3478109	0					
ANR	3478167	Callee	IS_NOT_NULL		3478109	0					
ANR	3478168	Identifier	IS_NOT_NULL		3478109	0					
ANR	3478169	ArgumentList	reg -> chain		3478109	1					
ANR	3478170	Argument	reg -> chain		3478109	0					
ANR	3478171	PtrMemberAccess	reg -> chain		3478109	0					
ANR	3478172	Identifier	reg		3478109	0					
ANR	3478173	Identifier	chain		3478109	1					
ANR	3478174	EqualityExpression	ONIG_STATE ( reg ) == ONIG_STATE_NORMAL		3478109	1		==			
ANR	3478175	CallExpression	ONIG_STATE ( reg )		3478109	0					
ANR	3478176	Callee	ONIG_STATE		3478109	0					
ANR	3478177	Identifier	ONIG_STATE		3478109	0					
ANR	3478178	ArgumentList	reg		3478109	1					
ANR	3478179	Argument	reg		3478109	0					
ANR	3478180	Identifier	reg		3478109	0					
ANR	3478181	Identifier	ONIG_STATE_NORMAL		3478109	1					
ANR	3478182	CompoundStatement		15:73:426:426	3478109	1					
ANR	3478183	ExpressionStatement	onig_chain_reduce ( reg )	3367:6:82097:82119	3478109	0	True				
ANR	3478184	CallExpression	onig_chain_reduce ( reg )		3478109	0					
ANR	3478185	Callee	onig_chain_reduce		3478109	0					
ANR	3478186	Identifier	onig_chain_reduce		3478109	0					
ANR	3478187	ArgumentList	reg		3478109	1					
ANR	3478188	Argument	reg		3478109	0					
ANR	3478189	Identifier	reg		3478109	0					
ANR	3478190	ExpressionStatement	ONIG_STATE_INC ( reg )	3368:6:82127:82146	3478109	1	True				
ANR	3478191	CallExpression	ONIG_STATE_INC ( reg )		3478109	0					
ANR	3478192	Callee	ONIG_STATE_INC		3478109	0					
ANR	3478193	Identifier	ONIG_STATE_INC		3478109	0					
ANR	3478194	ArgumentList	reg		3478109	1					
ANR	3478195	Argument	reg		3478109	0					
ANR	3478196	Identifier	reg		3478109	0					
ANR	3478197	ElseStatement	else		3478109	0					
ANR	3478198	CompoundStatement		21:4:508:513	3478109	0					
ANR	3478199	IdentifierDeclStatement	int n ;	3372:4:82171:82176	3478109	0	True				
ANR	3478200	IdentifierDecl	n		3478109	0					
ANR	3478201	IdentifierDeclType	int		3478109	0					
ANR	3478202	Identifier	n		3478109	1					
ANR	3478203	ExpressionStatement	THREAD_ATOMIC_END	3374:4:82183:82200	3478109	1	True				
ANR	3478204	Identifier	THREAD_ATOMIC_END		3478109	0					
ANR	3478205	ExpressionStatement	n = 0	3375:4:82206:82211	3478109	2	True				
ANR	3478206	AssignmentExpression	n = 0		3478109	0		=			
ANR	3478207	Identifier	n		3478109	0					
ANR	3478208	PrimaryExpression	0		3478109	1					
ANR	3478209	WhileStatement	while ( ONIG_STATE ( reg ) < ONIG_STATE_NORMAL )		3478109	3					
ANR	3478210	Condition	ONIG_STATE ( reg ) < ONIG_STATE_NORMAL	3376:11:82224:82258	3478109	0	True				
ANR	3478211	RelationalExpression	ONIG_STATE ( reg ) < ONIG_STATE_NORMAL		3478109	0		<			
ANR	3478212	CallExpression	ONIG_STATE ( reg )		3478109	0					
ANR	3478213	Callee	ONIG_STATE		3478109	0					
ANR	3478214	Identifier	ONIG_STATE		3478109	0					
ANR	3478215	ArgumentList	reg		3478109	1					
ANR	3478216	Argument	reg		3478109	0					
ANR	3478217	Identifier	reg		3478109	0					
ANR	3478218	Identifier	ONIG_STATE_NORMAL		3478109	1					
ANR	3478219	CompoundStatement		25:48:598:598	3478109	1					
ANR	3478220	IfStatement	if ( ++ n > THREAD_PASS_LIMIT_COUNT )		3478109	0					
ANR	3478221	Condition	++ n > THREAD_PASS_LIMIT_COUNT	3377:10:82273:82301	3478109	0	True				
ANR	3478222	RelationalExpression	++ n > THREAD_PASS_LIMIT_COUNT		3478109	0		>			
ANR	3478223	UnaryExpression	++ n		3478109	0					
ANR	3478224	IncDec	++		3478109	0					
ANR	3478225	Identifier	n		3478109	1					
ANR	3478226	Identifier	THREAD_PASS_LIMIT_COUNT		3478109	1					
ANR	3478227	ReturnStatement	return ONIGERR_OVER_THREAD_PASS_LIMIT_COUNT ;	3378:1:82305:82348	3478109	1	True				
ANR	3478228	Identifier	ONIGERR_OVER_THREAD_PASS_LIMIT_COUNT		3478109	0					
ANR	3478229	ExpressionStatement	THREAD_PASS	3379:6:82356:82367	3478109	1	True				
ANR	3478230	Identifier	THREAD_PASS		3478109	0					
ANR	3478231	GotoStatement	goto start ;	3381:4:82379:82389	3478109	4	True				
ANR	3478232	Identifier	start		3478109	0					
ANR	3478233	ExpressionStatement	THREAD_ATOMIC_END	3383:2:82397:82414	3478109	8	True				
ANR	3478234	Identifier	THREAD_ATOMIC_END		3478109	0					
ANR	3478235	ExpressionStatement	"fprintf ( stderr , ""onig_search (entry point): str: %d, end: %d, start: %d, range: %d\\n"" , ( int ) str , ( int ) ( end - str ) , ( int ) ( start - str ) , ( int ) ( range - str ) )"	3387:2:82502:82670	3478109	9	True				
ANR	3478236	CallExpression	"fprintf ( stderr , ""onig_search (entry point): str: %d, end: %d, start: %d, range: %d\\n"" , ( int ) str , ( int ) ( end - str ) , ( int ) ( start - str ) , ( int ) ( range - str ) )"		3478109	0					
ANR	3478237	Callee	fprintf		3478109	0					
ANR	3478238	Identifier	fprintf		3478109	0					
ANR	3478239	ArgumentList	stderr		3478109	1					
ANR	3478240	Argument	stderr		3478109	0					
ANR	3478241	Identifier	stderr		3478109	0					
ANR	3478242	Argument	"""onig_search (entry point): str: %d, end: %d, start: %d, range: %d\\n"""		3478109	1					
ANR	3478243	PrimaryExpression	"""onig_search (entry point): str: %d, end: %d, start: %d, range: %d\\n"""		3478109	0					
ANR	3478244	Argument	( int ) str		3478109	2					
ANR	3478245	CastExpression	( int ) str		3478109	0					
ANR	3478246	CastTarget	int		3478109	0					
ANR	3478247	Identifier	str		3478109	1					
ANR	3478248	Argument	( int ) ( end - str )		3478109	3					
ANR	3478249	CastExpression	( int ) ( end - str )		3478109	0					
ANR	3478250	CastTarget	int		3478109	0					
ANR	3478251	AdditiveExpression	end - str		3478109	1		-			
ANR	3478252	Identifier	end		3478109	0					
ANR	3478253	Identifier	str		3478109	1					
ANR	3478254	Argument	( int ) ( start - str )		3478109	4					
ANR	3478255	CastExpression	( int ) ( start - str )		3478109	0					
ANR	3478256	CastTarget	int		3478109	0					
ANR	3478257	AdditiveExpression	start - str		3478109	1		-			
ANR	3478258	Identifier	start		3478109	0					
ANR	3478259	Identifier	str		3478109	1					
ANR	3478260	Argument	( int ) ( range - str )		3478109	5					
ANR	3478261	CastExpression	( int ) ( range - str )		3478109	0					
ANR	3478262	CastTarget	int		3478109	0					
ANR	3478263	AdditiveExpression	range - str		3478109	1		-			
ANR	3478264	Identifier	range		3478109	0					
ANR	3478265	Identifier	str		3478109	1					
ANR	3478266	Statement	if	3392:2:82682:82683	3478109	10	True				
ANR	3478267	Statement	(	3392:5:82685:82685	3478109	11	True				
ANR	3478268	Statement	region	3392:6:82686:82691	3478109	12	True				
ANR	3478269	Statement	&&	3394:6:82734:82735	3478109	13	True				
ANR	3478270	Statement	!	3394:9:82737:82737	3478109	14	True				
ANR	3478271	Statement	IS_POSIX_REGION	3394:10:82738:82752	3478109	15	True				
ANR	3478272	Statement	(	3394:25:82753:82753	3478109	16	True				
ANR	3478273	Statement	option	3394:26:82754:82759	3478109	17	True				
ANR	3478274	Statement	)	3394:32:82760:82760	3478109	18	True				
ANR	3478275	Statement	)	3396:6:82775:82775	3478109	19	True				
ANR	3478276	CompoundStatement		45:8:1114:1114	3478109	20					
ANR	3478277	ExpressionStatement	"r = onig_region_resize_clear ( region , reg -> num_mem + 1 )"	3397:4:82783:82837	3478109	0	True				
ANR	3478278	AssignmentExpression	"r = onig_region_resize_clear ( region , reg -> num_mem + 1 )"		3478109	0		=			
ANR	3478279	Identifier	r		3478109	0					
ANR	3478280	CallExpression	"onig_region_resize_clear ( region , reg -> num_mem + 1 )"		3478109	1					
ANR	3478281	Callee	onig_region_resize_clear		3478109	0					
ANR	3478282	Identifier	onig_region_resize_clear		3478109	0					
ANR	3478283	ArgumentList	region		3478109	1					
ANR	3478284	Argument	region		3478109	0					
ANR	3478285	Identifier	region		3478109	0					
ANR	3478286	Argument	reg -> num_mem + 1		3478109	1					
ANR	3478287	AdditiveExpression	reg -> num_mem + 1		3478109	0		+			
ANR	3478288	PtrMemberAccess	reg -> num_mem		3478109	0					
ANR	3478289	Identifier	reg		3478109	0					
ANR	3478290	Identifier	num_mem		3478109	1					
ANR	3478291	PrimaryExpression	1		3478109	1					
ANR	3478292	IfStatement	if ( r )		3478109	1					
ANR	3478293	Condition	r	3398:8:82847:82847	3478109	0	True				
ANR	3478294	Identifier	r		3478109	0					
ANR	3478295	GotoStatement	goto finish_no_msa ;	3398:11:82850:82868	3478109	1	True				
ANR	3478296	Identifier	finish_no_msa		3478109	0					
ANR	3478297	IfStatement	if ( start > end || start < str )		3478109	21					
ANR	3478298	Condition	start > end || start < str	3401:6:82881:82906	3478109	0	True				
ANR	3478299	OrExpression	start > end || start < str		3478109	0		||			
ANR	3478300	RelationalExpression	start > end		3478109	0		>			
ANR	3478301	Identifier	start		3478109	0					
ANR	3478302	Identifier	end		3478109	1					
ANR	3478303	RelationalExpression	start < str		3478109	1		<			
ANR	3478304	Identifier	start		3478109	0					
ANR	3478305	Identifier	str		3478109	1					
ANR	3478306	GotoStatement	goto mismatch_no_msa ;	3401:34:82909:82929	3478109	1	True				
ANR	3478307	Identifier	mismatch_no_msa		3478109	0					
ANR	3478308	Statement	define	3406:1:83035:83040	3478109	22	True				
ANR	3478309	Statement	MATCH_AND_RETURN_CHECK	3406:8:83042:83063	3478109	23	True				
ANR	3478310	ExpressionStatement	"( upper_range ) r = match_at ( reg , str , end , ( upper_range ) , s , prev , & msa )"	3406:30:83064:83139	3478109	24	True				
ANR	3478311	AssignmentExpression	"( upper_range ) r = match_at ( reg , str , end , ( upper_range ) , s , prev , & msa )"		3478109	0		=			
ANR	3478312	CastExpression	( upper_range ) r		3478109	0					
ANR	3478313	CastTarget	upper_range		3478109	0					
ANR	3478314	Identifier	r		3478109	1					
ANR	3478315	CallExpression	"match_at ( reg , str , end , ( upper_range ) , s , prev , & msa )"		3478109	1					
ANR	3478316	Callee	match_at		3478109	0					
ANR	3478317	Identifier	match_at		3478109	0					
ANR	3478318	ArgumentList	reg		3478109	1					
ANR	3478319	Argument	reg		3478109	0					
ANR	3478320	Identifier	reg		3478109	0					
ANR	3478321	Argument	str		3478109	1					
ANR	3478322	Identifier	str		3478109	0					
ANR	3478323	Argument	end		3478109	2					
ANR	3478324	Identifier	end		3478109	0					
ANR	3478325	Argument	upper_range		3478109	3					
ANR	3478326	Identifier	upper_range		3478109	0					
ANR	3478327	Argument	s		3478109	4					
ANR	3478328	Identifier	s		3478109	0					
ANR	3478329	Argument	prev		3478109	5					
ANR	3478330	Identifier	prev		3478109	0					
ANR	3478331	Argument	& msa		3478109	6					
ANR	3478332	UnaryOperationExpression	& msa		3478109	0					
ANR	3478333	UnaryOperator	&		3478109	0					
ANR	3478334	Identifier	msa		3478109	1					
ANR	3478335	IfStatement	if ( r != ONIG_MISMATCH )		3478109	25					
ANR	3478336	Condition	r != ONIG_MISMATCH	3408:6:83149:83166	3478109	0	True				
ANR	3478337	EqualityExpression	r != ONIG_MISMATCH		3478109	0		!=			
ANR	3478338	Identifier	r		3478109	0					
ANR	3478339	Identifier	ONIG_MISMATCH		3478109	1					
ANR	3478340	CompoundStatement		57:26:1506:1506	3478109	1					
ANR	3478341	IfStatement	if ( r >= 0 )		3478109	0					
ANR	3478342	Condition	r >= 0	3409:8:83180:83185	3478109	0	True				
ANR	3478343	RelationalExpression	r >= 0		3478109	0		>=			
ANR	3478344	Identifier	r		3478109	0					
ANR	3478345	PrimaryExpression	0		3478109	1					
ANR	3478346	CompoundStatement		58:16:1525:1525	3478109	1					
ANR	3478347	IfStatement	if ( ! IS_FIND_LONGEST ( reg -> options ) )		3478109	0					
ANR	3478348	Condition	! IS_FIND_LONGEST ( reg -> options )	3410:10:83201:83231	3478109	0	True				
ANR	3478349	UnaryOperationExpression	! IS_FIND_LONGEST ( reg -> options )		3478109	0					
ANR	3478350	UnaryOperator	!		3478109	0					
ANR	3478351	CallExpression	IS_FIND_LONGEST ( reg -> options )		3478109	1					
ANR	3478352	Callee	IS_FIND_LONGEST		3478109	0					
ANR	3478353	Identifier	IS_FIND_LONGEST		3478109	0					
ANR	3478354	ArgumentList	reg -> options		3478109	1					
ANR	3478355	Argument	reg -> options		3478109	0					
ANR	3478356	PtrMemberAccess	reg -> options		3478109	0					
ANR	3478357	Identifier	reg		3478109	0					
ANR	3478358	Identifier	options		3478109	1					
ANR	3478359	CompoundStatement		59:43:1571:1571	3478109	1					
ANR	3478360	GotoStatement	goto match ;	3411:8:83245:83255	3478109	0	True				
ANR	3478361	Identifier	match		3478109	0					
ANR	3478362	ElseStatement	else		3478109	0					
ANR	3478363	GotoStatement	goto finish ;	3414:9:83283:83294	3478109	0	True				
ANR	3478364	Identifier	finish		3478109	0					
ANR	3478365	IfStatement	if ( reg -> anchor != 0 && str < end )		3478109	26					
ANR	3478366	Condition	reg -> anchor != 0 && str < end	3452:6:84272:84300	3478109	0	True				
ANR	3478367	AndExpression	reg -> anchor != 0 && str < end		3478109	0		&&			
ANR	3478368	EqualityExpression	reg -> anchor != 0		3478109	0		!=			
ANR	3478369	PtrMemberAccess	reg -> anchor		3478109	0					
ANR	3478370	Identifier	reg		3478109	0					
ANR	3478371	Identifier	anchor		3478109	1					
ANR	3478372	PrimaryExpression	0		3478109	1					
ANR	3478373	RelationalExpression	str < end		3478109	1		<			
ANR	3478374	Identifier	str		3478109	0					
ANR	3478375	Identifier	end		3478109	1					
ANR	3478376	CompoundStatement		102:4:2646:2680	3478109	1					
ANR	3478377	IdentifierDeclStatement	"UChar * min_semi_end , * max_semi_end ;"	3453:4:84309:84343	3478109	0	True				
ANR	3478378	IdentifierDecl	* min_semi_end		3478109	0					
ANR	3478379	IdentifierDeclType	UChar *		3478109	0					
ANR	3478380	Identifier	min_semi_end		3478109	1					
ANR	3478381	IdentifierDecl	* max_semi_end		3478109	1					
ANR	3478382	IdentifierDeclType	UChar *		3478109	0					
ANR	3478383	Identifier	max_semi_end		3478109	1					
ANR	3478384	IfStatement	if ( reg -> anchor & ANCHOR_BEGIN_POSITION )		3478109	1					
ANR	3478385	Condition	reg -> anchor & ANCHOR_BEGIN_POSITION	3455:8:84354:84388	3478109	0	True				
ANR	3478386	BitAndExpression	reg -> anchor & ANCHOR_BEGIN_POSITION		3478109	0		&			
ANR	3478387	PtrMemberAccess	reg -> anchor		3478109	0					
ANR	3478388	Identifier	reg		3478109	0					
ANR	3478389	Identifier	anchor		3478109	1					
ANR	3478390	Identifier	ANCHOR_BEGIN_POSITION		3478109	1					
ANR	3478391	CompoundStatement		104:45:2728:2728	3478109	1					
ANR	3478392	Label	begin_position :	3457:4:84436:84450	3478109	0	True				
ANR	3478393	Identifier	begin_position		3478109	0					
ANR	3478394	IfStatement	if ( range > start )		3478109	1					
ANR	3478395	Condition	range > start	3458:10:84462:84474	3478109	0	True				
ANR	3478396	RelationalExpression	range > start		3478109	0		>			
ANR	3478397	Identifier	range		3478109	0					
ANR	3478398	Identifier	start		3478109	1					
ANR	3478399	ExpressionStatement	range = start + 1	3459:1:84478:84495	3478109	1	True				
ANR	3478400	AssignmentExpression	range = start + 1		3478109	0		=			
ANR	3478401	Identifier	range		3478109	0					
ANR	3478402	AdditiveExpression	start + 1		3478109	1		+			
ANR	3478403	Identifier	start		3478109	0					
ANR	3478404	PrimaryExpression	1		3478109	1					
ANR	3478405	ElseStatement	else		3478109	0					
ANR	3478406	ExpressionStatement	range = start	3461:1:84509:84522	3478109	0	True				
ANR	3478407	AssignmentExpression	range = start		3478109	0		=			
ANR	3478408	Identifier	range		3478109	0					
ANR	3478409	Identifier	start		3478109	1					
ANR	3478410	ElseStatement	else		3478109	0					
ANR	3478411	IfStatement	if ( reg -> anchor & ANCHOR_BEGIN_BUF )		3478109	0					
ANR	3478412	Condition	reg -> anchor & ANCHOR_BEGIN_BUF	3463:13:84543:84572	3478109	0	True				
ANR	3478413	BitAndExpression	reg -> anchor & ANCHOR_BEGIN_BUF		3478109	0		&			
ANR	3478414	PtrMemberAccess	reg -> anchor		3478109	0					
ANR	3478415	Identifier	reg		3478109	0					
ANR	3478416	Identifier	anchor		3478109	1					
ANR	3478417	Identifier	ANCHOR_BEGIN_BUF		3478109	1					
ANR	3478418	CompoundStatement		112:45:2912:2912	3478109	1					
ANR	3478419	IfStatement	if ( range > start )		3478109	0					
ANR	3478420	Condition	range > start	3465:10:84624:84636	3478109	0	True				
ANR	3478421	RelationalExpression	range > start		3478109	0		>			
ANR	3478422	Identifier	range		3478109	0					
ANR	3478423	Identifier	start		3478109	1					
ANR	3478424	CompoundStatement		114:25:2976:2976	3478109	1					
ANR	3478425	IfStatement	if ( start != str )		3478109	0					
ANR	3478426	Condition	start != str	3466:5:84646:84657	3478109	0	True				
ANR	3478427	EqualityExpression	start != str		3478109	0		!=			
ANR	3478428	Identifier	start		3478109	0					
ANR	3478429	Identifier	str		3478109	1					
ANR	3478430	GotoStatement	goto mismatch_no_msa ;	3466:19:84660:84680	3478109	1	True				
ANR	3478431	Identifier	mismatch_no_msa		3478109	0					
ANR	3478432	ExpressionStatement	range = str + 1	3467:1:84683:84698	3478109	1	True				
ANR	3478433	AssignmentExpression	range = str + 1		3478109	0		=			
ANR	3478434	Identifier	range		3478109	0					
ANR	3478435	AdditiveExpression	str + 1		3478109	1		+			
ANR	3478436	Identifier	str		3478109	0					
ANR	3478437	PrimaryExpression	1		3478109	1					
ANR	3478438	ElseStatement	else		3478109	0					
ANR	3478439	CompoundStatement		118:11:3056:3056	3478109	0					
ANR	3478440	IfStatement	if ( range <= str )		3478109	0					
ANR	3478441	Condition	range <= str	3470:5:84726:84737	3478109	0	True				
ANR	3478442	RelationalExpression	range <= str		3478109	0		<=			
ANR	3478443	Identifier	range		3478109	0					
ANR	3478444	Identifier	str		3478109	1					
ANR	3478445	CompoundStatement		119:19:3077:3077	3478109	1					
ANR	3478446	ExpressionStatement	start = str	3471:3:84745:84756	3478109	0	True				
ANR	3478447	AssignmentExpression	start = str		3478109	0		=			
ANR	3478448	Identifier	start		3478109	0					
ANR	3478449	Identifier	str		3478109	1					
ANR	3478450	ExpressionStatement	range = str	3472:3:84761:84772	3478109	1	True				
ANR	3478451	AssignmentExpression	range = str		3478109	0		=			
ANR	3478452	Identifier	range		3478109	0					
ANR	3478453	Identifier	str		3478109	1					
ANR	3478454	ElseStatement	else		3478109	0					
ANR	3478455	GotoStatement	goto mismatch_no_msa ;	3475:3:84786:84806	3478109	0	True				
ANR	3478456	Identifier	mismatch_no_msa		3478109	0					
ANR	3478457	ElseStatement	else		3478109	0					
ANR	3478458	IfStatement	if ( reg -> anchor & ANCHOR_END_BUF )		3478109	0					
ANR	3478459	Condition	reg -> anchor & ANCHOR_END_BUF	3478:13:84835:84862	3478109	0	True				
ANR	3478460	BitAndExpression	reg -> anchor & ANCHOR_END_BUF		3478109	0		&			
ANR	3478461	PtrMemberAccess	reg -> anchor		3478109	0					
ANR	3478462	Identifier	reg		3478109	0					
ANR	3478463	Identifier	anchor		3478109	1					
ANR	3478464	Identifier	ANCHOR_END_BUF		3478109	1					
ANR	3478465	CompoundStatement		127:43:3202:3202	3478109	1					
ANR	3478466	ExpressionStatement	min_semi_end = max_semi_end = ( UChar * ) end	3479:6:84873:84915	3478109	0	True				
ANR	3478467	AssignmentExpression	min_semi_end = max_semi_end = ( UChar * ) end		3478109	0		=			
ANR	3478468	Identifier	min_semi_end		3478109	0					
ANR	3478469	AssignmentExpression	max_semi_end = ( UChar * ) end		3478109	1		=			
ANR	3478470	Identifier	max_semi_end		3478109	0					
ANR	3478471	CastExpression	( UChar * ) end		3478109	1					
ANR	3478472	CastTarget	UChar *		3478109	0					
ANR	3478473	Identifier	end		3478109	1					
ANR	3478474	Label	end_buf :	3481:4:84922:84929	3478109	1	True				
ANR	3478475	Identifier	end_buf		3478109	0					
ANR	3478476	IfStatement	if ( ( OnigDistance ) ( max_semi_end - str ) < reg -> anchor_dmin )		3478109	2					
ANR	3478477	Condition	( OnigDistance ) ( max_semi_end - str ) < reg -> anchor_dmin	3482:10:84941:84994	3478109	0	True				
ANR	3478478	RelationalExpression	( OnigDistance ) ( max_semi_end - str ) < reg -> anchor_dmin		3478109	0		<			
ANR	3478479	CastExpression	( OnigDistance ) ( max_semi_end - str )		3478109	0					
ANR	3478480	CastTarget	OnigDistance		3478109	0					
ANR	3478481	AdditiveExpression	max_semi_end - str		3478109	1		-			
ANR	3478482	Identifier	max_semi_end		3478109	0					
ANR	3478483	Identifier	str		3478109	1					
ANR	3478484	PtrMemberAccess	reg -> anchor_dmin		3478109	1					
ANR	3478485	Identifier	reg		3478109	0					
ANR	3478486	Identifier	anchor_dmin		3478109	1					
ANR	3478487	GotoStatement	goto mismatch_no_msa ;	3483:1:84998:85018	3478109	1	True				
ANR	3478488	Identifier	mismatch_no_msa		3478109	0					
ANR	3478489	IfStatement	if ( range > start )		3478109	3					
ANR	3478490	Condition	range > start	3485:10:85031:85043	3478109	0	True				
ANR	3478491	RelationalExpression	range > start		3478109	0		>			
ANR	3478492	Identifier	range		3478109	0					
ANR	3478493	Identifier	start		3478109	1					
ANR	3478494	CompoundStatement		134:25:3383:3383	3478109	1					
ANR	3478495	IfStatement	if ( ( OnigDistance ) ( min_semi_end - start ) > reg -> anchor_dmax )		3478109	0					
ANR	3478496	Condition	( OnigDistance ) ( min_semi_end - start ) > reg -> anchor_dmax	3486:5:85053:85108	3478109	0	True				
ANR	3478497	RelationalExpression	( OnigDistance ) ( min_semi_end - start ) > reg -> anchor_dmax		3478109	0		>			
ANR	3478498	CastExpression	( OnigDistance ) ( min_semi_end - start )		3478109	0					
ANR	3478499	CastTarget	OnigDistance		3478109	0					
ANR	3478500	AdditiveExpression	min_semi_end - start		3478109	1		-			
ANR	3478501	Identifier	min_semi_end		3478109	0					
ANR	3478502	Identifier	start		3478109	1					
ANR	3478503	PtrMemberAccess	reg -> anchor_dmax		3478109	1					
ANR	3478504	Identifier	reg		3478109	0					
ANR	3478505	Identifier	anchor_dmax		3478109	1					
ANR	3478506	CompoundStatement		135:63:3448:3448	3478109	1					
ANR	3478507	ExpressionStatement	start = min_semi_end - reg -> anchor_dmax	3487:3:85116:85155	3478109	0	True				
ANR	3478508	AssignmentExpression	start = min_semi_end - reg -> anchor_dmax		3478109	0		=			
ANR	3478509	Identifier	start		3478109	0					
ANR	3478510	AdditiveExpression	min_semi_end - reg -> anchor_dmax		3478109	1		-			
ANR	3478511	Identifier	min_semi_end		3478109	0					
ANR	3478512	PtrMemberAccess	reg -> anchor_dmax		3478109	1					
ANR	3478513	Identifier	reg		3478109	0					
ANR	3478514	Identifier	anchor_dmax		3478109	1					
ANR	3478515	IfStatement	if ( start < end )		3478109	1					
ANR	3478516	Condition	start < end	3488:7:85164:85174	3478109	0	True				
ANR	3478517	RelationalExpression	start < end		3478109	0		<			
ANR	3478518	Identifier	start		3478109	0					
ANR	3478519	Identifier	end		3478109	1					
ANR	3478520	ExpressionStatement	"start = onigenc_get_right_adjust_char_head ( reg -> enc , str , start )"	3489:5:85182:85246	3478109	1	True				
ANR	3478521	AssignmentExpression	"start = onigenc_get_right_adjust_char_head ( reg -> enc , str , start )"		3478109	0		=			
ANR	3478522	Identifier	start		3478109	0					
ANR	3478523	CallExpression	"onigenc_get_right_adjust_char_head ( reg -> enc , str , start )"		3478109	1					
ANR	3478524	Callee	onigenc_get_right_adjust_char_head		3478109	0					
ANR	3478525	Identifier	onigenc_get_right_adjust_char_head		3478109	0					
ANR	3478526	ArgumentList	reg -> enc		3478109	1					
ANR	3478527	Argument	reg -> enc		3478109	0					
ANR	3478528	PtrMemberAccess	reg -> enc		3478109	0					
ANR	3478529	Identifier	reg		3478109	0					
ANR	3478530	Identifier	enc		3478109	1					
ANR	3478531	Argument	str		3478109	1					
ANR	3478532	Identifier	str		3478109	0					
ANR	3478533	Argument	start		3478109	2					
ANR	3478534	Identifier	start		3478109	0					
ANR	3478535	ElseStatement	else		3478109	0					
ANR	3478536	CompoundStatement		139:8:3593:3593	3478109	0					
ANR	3478537	ExpressionStatement	"start = onigenc_get_prev_char_head ( reg -> enc , str , end )"	3491:5:85293:85347	3478109	0	True				
ANR	3478538	AssignmentExpression	"start = onigenc_get_prev_char_head ( reg -> enc , str , end )"		3478109	0		=			
ANR	3478539	Identifier	start		3478109	0					
ANR	3478540	CallExpression	"onigenc_get_prev_char_head ( reg -> enc , str , end )"		3478109	1					
ANR	3478541	Callee	onigenc_get_prev_char_head		3478109	0					
ANR	3478542	Identifier	onigenc_get_prev_char_head		3478109	0					
ANR	3478543	ArgumentList	reg -> enc		3478109	1					
ANR	3478544	Argument	reg -> enc		3478109	0					
ANR	3478545	PtrMemberAccess	reg -> enc		3478109	0					
ANR	3478546	Identifier	reg		3478109	0					
ANR	3478547	Identifier	enc		3478109	1					
ANR	3478548	Argument	str		3478109	1					
ANR	3478549	Identifier	str		3478109	0					
ANR	3478550	Argument	end		3478109	2					
ANR	3478551	Identifier	end		3478109	0					
ANR	3478552	IfStatement	if ( ( OnigDistance ) ( max_semi_end - ( range - 1 ) ) < reg -> anchor_dmin )		3478109	1					
ANR	3478553	Condition	( OnigDistance ) ( max_semi_end - ( range - 1 ) ) < reg -> anchor_dmin	3494:5:85362:85423	3478109	0	True				
ANR	3478554	RelationalExpression	( OnigDistance ) ( max_semi_end - ( range - 1 ) ) < reg -> anchor_dmin		3478109	0		<			
ANR	3478555	CastExpression	( OnigDistance ) ( max_semi_end - ( range - 1 ) )		3478109	0					
ANR	3478556	CastTarget	OnigDistance		3478109	0					
ANR	3478557	AdditiveExpression	max_semi_end - ( range - 1 )		3478109	1		-			
ANR	3478558	Identifier	max_semi_end		3478109	0					
ANR	3478559	AdditiveExpression	range - 1		3478109	1		-			
ANR	3478560	Identifier	range		3478109	0					
ANR	3478561	PrimaryExpression	1		3478109	1					
ANR	3478562	PtrMemberAccess	reg -> anchor_dmin		3478109	1					
ANR	3478563	Identifier	reg		3478109	0					
ANR	3478564	Identifier	anchor_dmin		3478109	1					
ANR	3478565	CompoundStatement		143:69:3763:3763	3478109	1					
ANR	3478566	ExpressionStatement	range = max_semi_end - reg -> anchor_dmin + 1	3495:3:85431:85474	3478109	0	True				
ANR	3478567	AssignmentExpression	range = max_semi_end - reg -> anchor_dmin + 1		3478109	0		=			
ANR	3478568	Identifier	range		3478109	0					
ANR	3478569	AdditiveExpression	max_semi_end - reg -> anchor_dmin + 1		3478109	1		-			
ANR	3478570	Identifier	max_semi_end		3478109	0					
ANR	3478571	AdditiveExpression	reg -> anchor_dmin + 1		3478109	1		+			
ANR	3478572	PtrMemberAccess	reg -> anchor_dmin		3478109	0					
ANR	3478573	Identifier	reg		3478109	0					
ANR	3478574	Identifier	anchor_dmin		3478109	1					
ANR	3478575	PrimaryExpression	1		3478109	1					
ANR	3478576	IfStatement	if ( start >= range )		3478109	2					
ANR	3478577	Condition	start >= range	3498:5:85485:85498	3478109	0	True				
ANR	3478578	RelationalExpression	start >= range		3478109	0		>=			
ANR	3478579	Identifier	start		3478109	0					
ANR	3478580	Identifier	range		3478109	1					
ANR	3478581	GotoStatement	goto mismatch_no_msa ;	3498:21:85501:85521	3478109	1	True				
ANR	3478582	Identifier	mismatch_no_msa		3478109	0					
ANR	3478583	ElseStatement	else		3478109	0					
ANR	3478584	CompoundStatement		149:11:3879:3879	3478109	0					
ANR	3478585	IfStatement	if ( ( OnigDistance ) ( min_semi_end - range ) > reg -> anchor_dmax )		3478109	0					
ANR	3478586	Condition	( OnigDistance ) ( min_semi_end - range ) > reg -> anchor_dmax	3501:5:85549:85604	3478109	0	True				
ANR	3478587	RelationalExpression	( OnigDistance ) ( min_semi_end - range ) > reg -> anchor_dmax		3478109	0		>			
ANR	3478588	CastExpression	( OnigDistance ) ( min_semi_end - range )		3478109	0					
ANR	3478589	CastTarget	OnigDistance		3478109	0					
ANR	3478590	AdditiveExpression	min_semi_end - range		3478109	1		-			
ANR	3478591	Identifier	min_semi_end		3478109	0					
ANR	3478592	Identifier	range		3478109	1					
ANR	3478593	PtrMemberAccess	reg -> anchor_dmax		3478109	1					
ANR	3478594	Identifier	reg		3478109	0					
ANR	3478595	Identifier	anchor_dmax		3478109	1					
ANR	3478596	CompoundStatement		150:63:3944:3944	3478109	1					
ANR	3478597	ExpressionStatement	range = min_semi_end - reg -> anchor_dmax	3502:3:85612:85651	3478109	0	True				
ANR	3478598	AssignmentExpression	range = min_semi_end - reg -> anchor_dmax		3478109	0		=			
ANR	3478599	Identifier	range		3478109	0					
ANR	3478600	AdditiveExpression	min_semi_end - reg -> anchor_dmax		3478109	1		-			
ANR	3478601	Identifier	min_semi_end		3478109	0					
ANR	3478602	PtrMemberAccess	reg -> anchor_dmax		3478109	1					
ANR	3478603	Identifier	reg		3478109	0					
ANR	3478604	Identifier	anchor_dmax		3478109	1					
ANR	3478605	IfStatement	if ( ( OnigDistance ) ( max_semi_end - start ) < reg -> anchor_dmin )		3478109	1					
ANR	3478606	Condition	( OnigDistance ) ( max_semi_end - start ) < reg -> anchor_dmin	3504:5:85661:85716	3478109	0	True				
ANR	3478607	RelationalExpression	( OnigDistance ) ( max_semi_end - start ) < reg -> anchor_dmin		3478109	0		<			
ANR	3478608	CastExpression	( OnigDistance ) ( max_semi_end - start )		3478109	0					
ANR	3478609	CastTarget	OnigDistance		3478109	0					
ANR	3478610	AdditiveExpression	max_semi_end - start		3478109	1		-			
ANR	3478611	Identifier	max_semi_end		3478109	0					
ANR	3478612	Identifier	start		3478109	1					
ANR	3478613	PtrMemberAccess	reg -> anchor_dmin		3478109	1					
ANR	3478614	Identifier	reg		3478109	0					
ANR	3478615	Identifier	anchor_dmin		3478109	1					
ANR	3478616	CompoundStatement		153:63:4056:4056	3478109	1					
ANR	3478617	ExpressionStatement	start = max_semi_end - reg -> anchor_dmin	3505:3:85724:85763	3478109	0	True				
ANR	3478618	AssignmentExpression	start = max_semi_end - reg -> anchor_dmin		3478109	0		=			
ANR	3478619	Identifier	start		3478109	0					
ANR	3478620	AdditiveExpression	max_semi_end - reg -> anchor_dmin		3478109	1		-			
ANR	3478621	Identifier	max_semi_end		3478109	0					
ANR	3478622	PtrMemberAccess	reg -> anchor_dmin		3478109	1					
ANR	3478623	Identifier	reg		3478109	0					
ANR	3478624	Identifier	anchor_dmin		3478109	1					
ANR	3478625	ExpressionStatement	"start = ONIGENC_LEFT_ADJUST_CHAR_HEAD ( reg -> enc , str , start )"	3506:3:85768:85827	3478109	1	True				
ANR	3478626	AssignmentExpression	"start = ONIGENC_LEFT_ADJUST_CHAR_HEAD ( reg -> enc , str , start )"		3478109	0		=			
ANR	3478627	Identifier	start		3478109	0					
ANR	3478628	CallExpression	"ONIGENC_LEFT_ADJUST_CHAR_HEAD ( reg -> enc , str , start )"		3478109	1					
ANR	3478629	Callee	ONIGENC_LEFT_ADJUST_CHAR_HEAD		3478109	0					
ANR	3478630	Identifier	ONIGENC_LEFT_ADJUST_CHAR_HEAD		3478109	0					
ANR	3478631	ArgumentList	reg -> enc		3478109	1					
ANR	3478632	Argument	reg -> enc		3478109	0					
ANR	3478633	PtrMemberAccess	reg -> enc		3478109	0					
ANR	3478634	Identifier	reg		3478109	0					
ANR	3478635	Identifier	enc		3478109	1					
ANR	3478636	Argument	str		3478109	1					
ANR	3478637	Identifier	str		3478109	0					
ANR	3478638	Argument	start		3478109	2					
ANR	3478639	Identifier	start		3478109	0					
ANR	3478640	IfStatement	if ( range > start )		3478109	2					
ANR	3478641	Condition	range > start	3508:5:85837:85849	3478109	0	True				
ANR	3478642	RelationalExpression	range > start		3478109	0		>			
ANR	3478643	Identifier	range		3478109	0					
ANR	3478644	Identifier	start		3478109	1					
ANR	3478645	GotoStatement	goto mismatch_no_msa ;	3508:20:85852:85872	3478109	1	True				
ANR	3478646	Identifier	mismatch_no_msa		3478109	0					
ANR	3478647	ElseStatement	else		3478109	0					
ANR	3478648	IfStatement	if ( reg -> anchor & ANCHOR_SEMI_END_BUF )		3478109	0					
ANR	3478649	Condition	reg -> anchor & ANCHOR_SEMI_END_BUF	3511:13:85901:85933	3478109	0	True				
ANR	3478650	BitAndExpression	reg -> anchor & ANCHOR_SEMI_END_BUF		3478109	0		&			
ANR	3478651	PtrMemberAccess	reg -> anchor		3478109	0					
ANR	3478652	Identifier	reg		3478109	0					
ANR	3478653	Identifier	anchor		3478109	1					
ANR	3478654	Identifier	ANCHOR_SEMI_END_BUF		3478109	1					
ANR	3478655	CompoundStatement		161:6:4281:4338	3478109	1					
ANR	3478656	IdentifierDeclStatement	"UChar * pre_end = ONIGENC_STEP_BACK ( reg -> enc , str , end , 1 ) ;"	3512:6:85944:86001	3478109	0	True				
ANR	3478657	IdentifierDecl	"* pre_end = ONIGENC_STEP_BACK ( reg -> enc , str , end , 1 )"		3478109	0					
ANR	3478658	IdentifierDeclType	UChar *		3478109	0					
ANR	3478659	Identifier	pre_end		3478109	1					
ANR	3478660	AssignmentExpression	"* pre_end = ONIGENC_STEP_BACK ( reg -> enc , str , end , 1 )"		3478109	2		=			
ANR	3478661	Identifier	pre_end		3478109	0					
ANR	3478662	CallExpression	"ONIGENC_STEP_BACK ( reg -> enc , str , end , 1 )"		3478109	1					
ANR	3478663	Callee	ONIGENC_STEP_BACK		3478109	0					
ANR	3478664	Identifier	ONIGENC_STEP_BACK		3478109	0					
ANR	3478665	ArgumentList	reg -> enc		3478109	1					
ANR	3478666	Argument	reg -> enc		3478109	0					
ANR	3478667	PtrMemberAccess	reg -> enc		3478109	0					
ANR	3478668	Identifier	reg		3478109	0					
ANR	3478669	Identifier	enc		3478109	1					
ANR	3478670	Argument	str		3478109	1					
ANR	3478671	Identifier	str		3478109	0					
ANR	3478672	Argument	end		3478109	2					
ANR	3478673	Identifier	end		3478109	0					
ANR	3478674	Argument	1		3478109	3					
ANR	3478675	PrimaryExpression	1		3478109	0					
ANR	3478676	ExpressionStatement	max_semi_end = ( UChar * ) end	3514:6:86010:86037	3478109	1	True				
ANR	3478677	AssignmentExpression	max_semi_end = ( UChar * ) end		3478109	0		=			
ANR	3478678	Identifier	max_semi_end		3478109	0					
ANR	3478679	CastExpression	( UChar * ) end		3478109	1					
ANR	3478680	CastTarget	UChar *		3478109	0					
ANR	3478681	Identifier	end		3478109	1					
ANR	3478682	IfStatement	"if ( ONIGENC_IS_MBC_NEWLINE ( reg -> enc , pre_end , end ) )"		3478109	2					
ANR	3478683	Condition	"ONIGENC_IS_MBC_NEWLINE ( reg -> enc , pre_end , end )"	3515:10:86049:86094	3478109	0	True				
ANR	3478684	CallExpression	"ONIGENC_IS_MBC_NEWLINE ( reg -> enc , pre_end , end )"		3478109	0					
ANR	3478685	Callee	ONIGENC_IS_MBC_NEWLINE		3478109	0					
ANR	3478686	Identifier	ONIGENC_IS_MBC_NEWLINE		3478109	0					
ANR	3478687	ArgumentList	reg -> enc		3478109	1					
ANR	3478688	Argument	reg -> enc		3478109	0					
ANR	3478689	PtrMemberAccess	reg -> enc		3478109	0					
ANR	3478690	Identifier	reg		3478109	0					
ANR	3478691	Identifier	enc		3478109	1					
ANR	3478692	Argument	pre_end		3478109	1					
ANR	3478693	Identifier	pre_end		3478109	0					
ANR	3478694	Argument	end		3478109	2					
ANR	3478695	Identifier	end		3478109	0					
ANR	3478696	CompoundStatement		164:58:4434:4434	3478109	1					
ANR	3478697	ExpressionStatement	min_semi_end = pre_end	3516:1:86100:86122	3478109	0	True				
ANR	3478698	AssignmentExpression	min_semi_end = pre_end		3478109	0		=			
ANR	3478699	Identifier	min_semi_end		3478109	0					
ANR	3478700	Identifier	pre_end		3478109	1					
ANR	3478701	ExpressionStatement	"pre_end = ONIGENC_STEP_BACK ( reg -> enc , str , pre_end , 1 )"	3519:1:86161:86215	3478109	1	True				
ANR	3478702	AssignmentExpression	"pre_end = ONIGENC_STEP_BACK ( reg -> enc , str , pre_end , 1 )"		3478109	0		=			
ANR	3478703	Identifier	pre_end		3478109	0					
ANR	3478704	CallExpression	"ONIGENC_STEP_BACK ( reg -> enc , str , pre_end , 1 )"		3478109	1					
ANR	3478705	Callee	ONIGENC_STEP_BACK		3478109	0					
ANR	3478706	Identifier	ONIGENC_STEP_BACK		3478109	0					
ANR	3478707	ArgumentList	reg -> enc		3478109	1					
ANR	3478708	Argument	reg -> enc		3478109	0					
ANR	3478709	PtrMemberAccess	reg -> enc		3478109	0					
ANR	3478710	Identifier	reg		3478109	0					
ANR	3478711	Identifier	enc		3478109	1					
ANR	3478712	Argument	str		3478109	1					
ANR	3478713	Identifier	str		3478109	0					
ANR	3478714	Argument	pre_end		3478109	2					
ANR	3478715	Identifier	pre_end		3478109	0					
ANR	3478716	Argument	1		3478109	3					
ANR	3478717	PrimaryExpression	1		3478109	0					
ANR	3478718	IfStatement	"if ( IS_NOT_NULL ( pre_end ) && ONIGENC_IS_MBC_CRNL ( reg -> enc , pre_end , end ) )"		3478109	2					
ANR	3478719	Condition	"IS_NOT_NULL ( pre_end ) && ONIGENC_IS_MBC_CRNL ( reg -> enc , pre_end , end )"	3520:5:86222:86293	3478109	0	True				
ANR	3478720	AndExpression	"IS_NOT_NULL ( pre_end ) && ONIGENC_IS_MBC_CRNL ( reg -> enc , pre_end , end )"		3478109	0		&&			
ANR	3478721	CallExpression	IS_NOT_NULL ( pre_end )		3478109	0					
ANR	3478722	Callee	IS_NOT_NULL		3478109	0					
ANR	3478723	Identifier	IS_NOT_NULL		3478109	0					
ANR	3478724	ArgumentList	pre_end		3478109	1					
ANR	3478725	Argument	pre_end		3478109	0					
ANR	3478726	Identifier	pre_end		3478109	0					
ANR	3478727	CallExpression	"ONIGENC_IS_MBC_CRNL ( reg -> enc , pre_end , end )"		3478109	1					
ANR	3478728	Callee	ONIGENC_IS_MBC_CRNL		3478109	0					
ANR	3478729	Identifier	ONIGENC_IS_MBC_CRNL		3478109	0					
ANR	3478730	ArgumentList	reg -> enc		3478109	1					
ANR	3478731	Argument	reg -> enc		3478109	0					
ANR	3478732	PtrMemberAccess	reg -> enc		3478109	0					
ANR	3478733	Identifier	reg		3478109	0					
ANR	3478734	Identifier	enc		3478109	1					
ANR	3478735	Argument	pre_end		3478109	1					
ANR	3478736	Identifier	pre_end		3478109	0					
ANR	3478737	Argument	end		3478109	2					
ANR	3478738	Identifier	end		3478109	0					
ANR	3478739	CompoundStatement		170:50:4633:4633	3478109	1					
ANR	3478740	ExpressionStatement	min_semi_end = pre_end	3522:3:86301:86323	3478109	0	True				
ANR	3478741	AssignmentExpression	min_semi_end = pre_end		3478109	0		=			
ANR	3478742	Identifier	min_semi_end		3478109	0					
ANR	3478743	Identifier	pre_end		3478109	1					
ANR	3478744	IfStatement	if ( min_semi_end > str && start <= min_semi_end )		3478109	3					
ANR	3478745	Condition	min_semi_end > str && start <= min_semi_end	3525:5:86340:86382	3478109	0	True				
ANR	3478746	AndExpression	min_semi_end > str && start <= min_semi_end		3478109	0		&&			
ANR	3478747	RelationalExpression	min_semi_end > str		3478109	0		>			
ANR	3478748	Identifier	min_semi_end		3478109	0					
ANR	3478749	Identifier	str		3478109	1					
ANR	3478750	RelationalExpression	start <= min_semi_end		3478109	1		<=			
ANR	3478751	Identifier	start		3478109	0					
ANR	3478752	Identifier	min_semi_end		3478109	1					
ANR	3478753	CompoundStatement		174:50:4722:4722	3478109	1					
ANR	3478754	GotoStatement	goto end_buf ;	3526:3:86390:86402	3478109	0	True				
ANR	3478755	Identifier	end_buf		3478109	0					
ANR	3478756	ElseStatement	else		3478109	0					
ANR	3478757	CompoundStatement		178:11:4763:4763	3478109	0					
ANR	3478758	ExpressionStatement	min_semi_end = ( UChar * ) end	3530:1:86429:86456	3478109	0	True				
ANR	3478759	AssignmentExpression	min_semi_end = ( UChar * ) end		3478109	0		=			
ANR	3478760	Identifier	min_semi_end		3478109	0					
ANR	3478761	CastExpression	( UChar * ) end		3478109	1					
ANR	3478762	CastTarget	UChar *		3478109	0					
ANR	3478763	Identifier	end		3478109	1					
ANR	3478764	GotoStatement	goto end_buf ;	3531:1:86459:86471	3478109	1	True				
ANR	3478765	Identifier	end_buf		3478109	0					
ANR	3478766	ElseStatement	else		3478109	0					
ANR	3478767	IfStatement	if ( ( reg -> anchor & ANCHOR_ANYCHAR_STAR_ML ) )		3478109	0					
ANR	3478768	Condition	reg -> anchor & ANCHOR_ANYCHAR_STAR_ML	3534:13:86500:86537	3478109	0	True				
ANR	3478769	BitAndExpression	reg -> anchor & ANCHOR_ANYCHAR_STAR_ML		3478109	0		&			
ANR	3478770	PtrMemberAccess	reg -> anchor		3478109	0					
ANR	3478771	Identifier	reg		3478109	0					
ANR	3478772	Identifier	anchor		3478109	1					
ANR	3478773	Identifier	ANCHOR_ANYCHAR_STAR_ML		3478109	1					
ANR	3478774	CompoundStatement		183:53:4877:4877	3478109	1					
ANR	3478775	GotoStatement	goto begin_position ;	3535:6:86548:86567	3478109	0	True				
ANR	3478776	Identifier	begin_position		3478109	0					
ANR	3478777	ElseStatement	else		3478109	0					
ANR	3478778	IfStatement	if ( str == end )		3478109	0					
ANR	3478779	Condition	str == end	3538:11:86590:86599	3478109	0	True				
ANR	3478780	EqualityExpression	str == end		3478109	0		==			
ANR	3478781	Identifier	str		3478109	0					
ANR	3478782	Identifier	end		3478109	1					
ANR	3478783	CompoundStatement		188:11:4971:5022	3478109	1					
ANR	3478784	Statement	static	3539:4:86627:86632	3478109	0	True				
ANR	3478785	IdentifierDeclStatement	"const UChar * address_for_empty_string = ( UChar * ) """" ;"	3539:11:86634:86685	3478109	1	True				
ANR	3478786	IdentifierDecl	"* address_for_empty_string = ( UChar * ) """""		3478109	0					
ANR	3478787	IdentifierDeclType	const UChar *		3478109	0					
ANR	3478788	Identifier	address_for_empty_string		3478109	1					
ANR	3478789	AssignmentExpression	"* address_for_empty_string = ( UChar * ) """""		3478109	2		=			
ANR	3478790	Identifier	address_for_empty_string		3478109	0					
ANR	3478791	CastExpression	"( UChar * ) """""		3478109	1					
ANR	3478792	CastTarget	UChar *		3478109	0					
ANR	3478793	PrimaryExpression	""""""		3478109	1					
ANR	3478794	ExpressionStatement	"fprintf ( stderr , ""onig_search: empty string.\\n"" )"	3542:4:86717:86764	3478109	2	True				
ANR	3478795	CallExpression	"fprintf ( stderr , ""onig_search: empty string.\\n"" )"		3478109	0					
ANR	3478796	Callee	fprintf		3478109	0					
ANR	3478797	Identifier	fprintf		3478109	0					
ANR	3478798	ArgumentList	stderr		3478109	1					
ANR	3478799	Argument	stderr		3478109	0					
ANR	3478800	Identifier	stderr		3478109	0					
ANR	3478801	Argument	"""onig_search: empty string.\\n"""		3478109	1					
ANR	3478802	PrimaryExpression	"""onig_search: empty string.\\n"""		3478109	0					
ANR	3478803	IfStatement	if ( reg -> threshold_len == 0 )		3478109	3					
ANR	3478804	Condition	reg -> threshold_len == 0	3545:8:86782:86804	3478109	0	True				
ANR	3478805	EqualityExpression	reg -> threshold_len == 0		3478109	0		==			
ANR	3478806	PtrMemberAccess	reg -> threshold_len		3478109	0					
ANR	3478807	Identifier	reg		3478109	0					
ANR	3478808	Identifier	threshold_len		3478109	1					
ANR	3478809	PrimaryExpression	0		3478109	1					
ANR	3478810	CompoundStatement		194:33:5144:5144	3478109	1					
ANR	3478811	ExpressionStatement	start = end = str = address_for_empty_string	3546:6:86815:86859	3478109	0	True				
ANR	3478812	AssignmentExpression	start = end = str = address_for_empty_string		3478109	0		=			
ANR	3478813	Identifier	start		3478109	0					
ANR	3478814	AssignmentExpression	end = str = address_for_empty_string		3478109	1		=			
ANR	3478815	Identifier	end		3478109	0					
ANR	3478816	AssignmentExpression	str = address_for_empty_string		3478109	1		=			
ANR	3478817	Identifier	str		3478109	0					
ANR	3478818	Identifier	address_for_empty_string		3478109	1					
ANR	3478819	ExpressionStatement	s = ( UChar * ) start	3547:6:86867:86885	3478109	1	True				
ANR	3478820	AssignmentExpression	s = ( UChar * ) start		3478109	0		=			
ANR	3478821	Identifier	s		3478109	0					
ANR	3478822	CastExpression	( UChar * ) start		3478109	1					
ANR	3478823	CastTarget	UChar *		3478109	0					
ANR	3478824	Identifier	start		3478109	1					
ANR	3478825	ExpressionStatement	prev = ( UChar * ) NULL	3548:6:86893:86913	3478109	2	True				
ANR	3478826	AssignmentExpression	prev = ( UChar * ) NULL		3478109	0		=			
ANR	3478827	Identifier	prev		3478109	0					
ANR	3478828	CastExpression	( UChar * ) NULL		3478109	1					
ANR	3478829	CastTarget	UChar *		3478109	0					
ANR	3478830	Identifier	NULL		3478109	1					
ANR	3478831	ExpressionStatement	"MATCH_ARG_INIT ( msa , option , region , start )"	3550:6:86922:86964	3478109	3	True				
ANR	3478832	CallExpression	"MATCH_ARG_INIT ( msa , option , region , start )"		3478109	0					
ANR	3478833	Callee	MATCH_ARG_INIT		3478109	0					
ANR	3478834	Identifier	MATCH_ARG_INIT		3478109	0					
ANR	3478835	ArgumentList	msa		3478109	1					
ANR	3478836	Argument	msa		3478109	0					
ANR	3478837	Identifier	msa		3478109	0					
ANR	3478838	Argument	option		3478109	1					
ANR	3478839	Identifier	option		3478109	0					
ANR	3478840	Argument	region		3478109	2					
ANR	3478841	Identifier	region		3478109	0					
ANR	3478842	Argument	start		3478109	3					
ANR	3478843	Identifier	start		3478109	0					
ANR	3478844	ExpressionStatement	msa . state_check_buff = ( void * ) 0	3552:6:87011:87043	3478109	4	True				
ANR	3478845	AssignmentExpression	msa . state_check_buff = ( void * ) 0		3478109	0		=			
ANR	3478846	MemberAccess	msa . state_check_buff		3478109	0					
ANR	3478847	Identifier	msa		3478109	0					
ANR	3478848	Identifier	state_check_buff		3478109	1					
ANR	3478849	CastExpression	( void * ) 0		3478109	1					
ANR	3478850	CastTarget	void *		3478109	0					
ANR	3478851	PrimaryExpression	0		3478109	1					
ANR	3478852	ExpressionStatement	msa . state_check_buff_size = 0	3553:6:87051:87080	3478109	5	True				
ANR	3478853	AssignmentExpression	msa . state_check_buff_size = 0		3478109	0		=			
ANR	3478854	MemberAccess	msa . state_check_buff_size		3478109	0					
ANR	3478855	Identifier	msa		3478109	0					
ANR	3478856	Identifier	state_check_buff_size		3478109	1					
ANR	3478857	PrimaryExpression	0		3478109	1					
ANR	3478858	ExpressionStatement	MATCH_AND_RETURN_CHECK ( end )	3555:6:87125:87152	3478109	6	True				
ANR	3478859	CallExpression	MATCH_AND_RETURN_CHECK ( end )		3478109	0					
ANR	3478860	Callee	MATCH_AND_RETURN_CHECK		3478109	0					
ANR	3478861	Identifier	MATCH_AND_RETURN_CHECK		3478109	0					
ANR	3478862	ArgumentList	end		3478109	1					
ANR	3478863	Argument	end		3478109	0					
ANR	3478864	Identifier	end		3478109	0					
ANR	3478865	GotoStatement	goto mismatch ;	3556:6:87160:87173	3478109	7	True				
ANR	3478866	Identifier	mismatch		3478109	0					
ANR	3478867	GotoStatement	goto mismatch_no_msa ;	3558:4:87185:87205	3478109	4	True				
ANR	3478868	Identifier	mismatch_no_msa		3478109	0					
ANR	3478869	ExpressionStatement	"fprintf ( stderr , ""onig_search(apply anchor): end: %d, start: %d, range: %d\\n"" , ( int ) ( end - str ) , ( int ) ( start - str ) , ( int ) ( range - str ) )"	3562:2:87239:87380	3478109	27	True				
ANR	3478870	CallExpression	"fprintf ( stderr , ""onig_search(apply anchor): end: %d, start: %d, range: %d\\n"" , ( int ) ( end - str ) , ( int ) ( start - str ) , ( int ) ( range - str ) )"		3478109	0					
ANR	3478871	Callee	fprintf		3478109	0					
ANR	3478872	Identifier	fprintf		3478109	0					
ANR	3478873	ArgumentList	stderr		3478109	1					
ANR	3478874	Argument	stderr		3478109	0					
ANR	3478875	Identifier	stderr		3478109	0					
ANR	3478876	Argument	"""onig_search(apply anchor): end: %d, start: %d, range: %d\\n"""		3478109	1					
ANR	3478877	PrimaryExpression	"""onig_search(apply anchor): end: %d, start: %d, range: %d\\n"""		3478109	0					
ANR	3478878	Argument	( int ) ( end - str )		3478109	2					
ANR	3478879	CastExpression	( int ) ( end - str )		3478109	0					
ANR	3478880	CastTarget	int		3478109	0					
ANR	3478881	AdditiveExpression	end - str		3478109	1		-			
ANR	3478882	Identifier	end		3478109	0					
ANR	3478883	Identifier	str		3478109	1					
ANR	3478884	Argument	( int ) ( start - str )		3478109	3					
ANR	3478885	CastExpression	( int ) ( start - str )		3478109	0					
ANR	3478886	CastTarget	int		3478109	0					
ANR	3478887	AdditiveExpression	start - str		3478109	1		-			
ANR	3478888	Identifier	start		3478109	0					
ANR	3478889	Identifier	str		3478109	1					
ANR	3478890	Argument	( int ) ( range - str )		3478109	4					
ANR	3478891	CastExpression	( int ) ( range - str )		3478109	0					
ANR	3478892	CastTarget	int		3478109	0					
ANR	3478893	AdditiveExpression	range - str		3478109	1		-			
ANR	3478894	Identifier	range		3478109	0					
ANR	3478895	Identifier	str		3478109	1					
ANR	3478896	ExpressionStatement	"MATCH_ARG_INIT ( msa , option , region , orig_start )"	3566:2:87392:87439	3478109	28	True				
ANR	3478897	CallExpression	"MATCH_ARG_INIT ( msa , option , region , orig_start )"		3478109	0					
ANR	3478898	Callee	MATCH_ARG_INIT		3478109	0					
ANR	3478899	Identifier	MATCH_ARG_INIT		3478109	0					
ANR	3478900	ArgumentList	msa		3478109	1					
ANR	3478901	Argument	msa		3478109	0					
ANR	3478902	Identifier	msa		3478109	0					
ANR	3478903	Argument	option		3478109	1					
ANR	3478904	Identifier	option		3478109	0					
ANR	3478905	Argument	region		3478109	2					
ANR	3478906	Identifier	region		3478109	0					
ANR	3478907	Argument	orig_start		3478109	3					
ANR	3478908	Identifier	orig_start		3478109	0					
ANR	3478909	CompoundStatement		218:4:5825:5863	3478109	29					
ANR	3478910	IdentifierDeclStatement	"int offset = ( MIN ( start , range ) - str ) ;"	3569:4:87488:87526	3478109	0	True				
ANR	3478911	IdentifierDecl	"offset = ( MIN ( start , range ) - str )"		3478109	0					
ANR	3478912	IdentifierDeclType	int		3478109	0					
ANR	3478913	Identifier	offset		3478109	1					
ANR	3478914	AssignmentExpression	"offset = ( MIN ( start , range ) - str )"		3478109	2		=			
ANR	3478915	Identifier	offset		3478109	0					
ANR	3478916	AdditiveExpression	"MIN ( start , range ) - str"		3478109	1		-			
ANR	3478917	CallExpression	"MIN ( start , range )"		3478109	0					
ANR	3478918	Callee	MIN		3478109	0					
ANR	3478919	Identifier	MIN		3478109	0					
ANR	3478920	ArgumentList	start		3478109	1					
ANR	3478921	Argument	start		3478109	0					
ANR	3478922	Identifier	start		3478109	0					
ANR	3478923	Argument	range		3478109	1					
ANR	3478924	Identifier	range		3478109	0					
ANR	3478925	Identifier	str		3478109	1					
ANR	3478926	ExpressionStatement	"STATE_CHECK_BUFF_INIT ( msa , end - str , offset , reg -> num_comb_exp_check )"	3570:4:87532:87602	3478109	1	True				
ANR	3478927	CallExpression	"STATE_CHECK_BUFF_INIT ( msa , end - str , offset , reg -> num_comb_exp_check )"		3478109	0					
ANR	3478928	Callee	STATE_CHECK_BUFF_INIT		3478109	0					
ANR	3478929	Identifier	STATE_CHECK_BUFF_INIT		3478109	0					
ANR	3478930	ArgumentList	msa		3478109	1					
ANR	3478931	Argument	msa		3478109	0					
ANR	3478932	Identifier	msa		3478109	0					
ANR	3478933	Argument	end - str		3478109	1					
ANR	3478934	AdditiveExpression	end - str		3478109	0		-			
ANR	3478935	Identifier	end		3478109	0					
ANR	3478936	Identifier	str		3478109	1					
ANR	3478937	Argument	offset		3478109	2					
ANR	3478938	Identifier	offset		3478109	0					
ANR	3478939	Argument	reg -> num_comb_exp_check		3478109	3					
ANR	3478940	PtrMemberAccess	reg -> num_comb_exp_check		3478109	0					
ANR	3478941	Identifier	reg		3478109	0					
ANR	3478942	Identifier	num_comb_exp_check		3478109	1					
ANR	3478943	ExpressionStatement	s = ( UChar * ) start	3574:2:87618:87636	3478109	30	True				
ANR	3478944	AssignmentExpression	s = ( UChar * ) start		3478109	0		=			
ANR	3478945	Identifier	s		3478109	0					
ANR	3478946	CastExpression	( UChar * ) start		3478109	1					
ANR	3478947	CastTarget	UChar *		3478109	0					
ANR	3478948	Identifier	start		3478109	1					
ANR	3478949	IfStatement	if ( range > start )		3478109	31					
ANR	3478950	Condition	range > start	3575:6:87644:87656	3478109	0	True				
ANR	3478951	RelationalExpression	range > start		3478109	0		>			
ANR	3478952	Identifier	range		3478109	0					
ANR	3478953	Identifier	start		3478109	1					
ANR	3478954	CompoundStatement		224:21:5996:5996	3478109	1					
ANR	3478955	IfStatement	if ( s > str )		3478109	0					
ANR	3478956	Condition	s > str	3576:8:87692:87698	3478109	0	True				
ANR	3478957	RelationalExpression	s > str		3478109	0		>			
ANR	3478958	Identifier	s		3478109	0					
ANR	3478959	Identifier	str		3478109	1					
ANR	3478960	ExpressionStatement	"prev = onigenc_get_prev_char_head ( reg -> enc , str , s )"	3577:6:87707:87758	3478109	1	True				
ANR	3478961	AssignmentExpression	"prev = onigenc_get_prev_char_head ( reg -> enc , str , s )"		3478109	0		=			
ANR	3478962	Identifier	prev		3478109	0					
ANR	3478963	CallExpression	"onigenc_get_prev_char_head ( reg -> enc , str , s )"		3478109	1					
ANR	3478964	Callee	onigenc_get_prev_char_head		3478109	0					
ANR	3478965	Identifier	onigenc_get_prev_char_head		3478109	0					
ANR	3478966	ArgumentList	reg -> enc		3478109	1					
ANR	3478967	Argument	reg -> enc		3478109	0					
ANR	3478968	PtrMemberAccess	reg -> enc		3478109	0					
ANR	3478969	Identifier	reg		3478109	0					
ANR	3478970	Identifier	enc		3478109	1					
ANR	3478971	Argument	str		3478109	1					
ANR	3478972	Identifier	str		3478109	0					
ANR	3478973	Argument	s		3478109	2					
ANR	3478974	Identifier	s		3478109	0					
ANR	3478975	ElseStatement	else		3478109	0					
ANR	3478976	ExpressionStatement	prev = ( UChar * ) NULL	3579:6:87775:87795	3478109	0	True				
ANR	3478977	AssignmentExpression	prev = ( UChar * ) NULL		3478109	0		=			
ANR	3478978	Identifier	prev		3478109	0					
ANR	3478979	CastExpression	( UChar * ) NULL		3478109	1					
ANR	3478980	CastTarget	UChar *		3478109	0					
ANR	3478981	Identifier	NULL		3478109	1					
ANR	3478982	IfStatement	if ( reg -> optimize != ONIG_OPTIMIZE_NONE )		3478109	1					
ANR	3478983	Condition	reg -> optimize != ONIG_OPTIMIZE_NONE	3581:8:87806:87840	3478109	0	True				
ANR	3478984	EqualityExpression	reg -> optimize != ONIG_OPTIMIZE_NONE		3478109	0		!=			
ANR	3478985	PtrMemberAccess	reg -> optimize		3478109	0					
ANR	3478986	Identifier	reg		3478109	0					
ANR	3478987	Identifier	optimize		3478109	1					
ANR	3478988	Identifier	ONIG_OPTIMIZE_NONE		3478109	1					
ANR	3478989	CompoundStatement		231:6:6188:6228	3478109	1					
ANR	3478990	IdentifierDeclStatement	"UChar * sch_range , * low , * high , * low_prev ;"	3582:6:87851:87891	3478109	0	True				
ANR	3478991	IdentifierDecl	* sch_range		3478109	0					
ANR	3478992	IdentifierDeclType	UChar *		3478109	0					
ANR	3478993	Identifier	sch_range		3478109	1					
ANR	3478994	IdentifierDecl	* low		3478109	1					
ANR	3478995	IdentifierDeclType	UChar *		3478109	0					
ANR	3478996	Identifier	low		3478109	1					
ANR	3478997	IdentifierDecl	* high		3478109	2					
ANR	3478998	IdentifierDeclType	UChar *		3478109	0					
ANR	3478999	Identifier	high		3478109	1					
ANR	3479000	IdentifierDecl	* low_prev		3478109	3					
ANR	3479001	IdentifierDeclType	UChar *		3478109	0					
ANR	3479002	Identifier	low_prev		3478109	1					
ANR	3479003	ExpressionStatement	sch_range = ( UChar * ) range	3584:6:87900:87926	3478109	1	True				
ANR	3479004	AssignmentExpression	sch_range = ( UChar * ) range		3478109	0		=			
ANR	3479005	Identifier	sch_range		3478109	0					
ANR	3479006	CastExpression	( UChar * ) range		3478109	1					
ANR	3479007	CastTarget	UChar *		3478109	0					
ANR	3479008	Identifier	range		3478109	1					
ANR	3479009	IfStatement	if ( reg -> dmax != 0 )		3478109	2					
ANR	3479010	Condition	reg -> dmax != 0	3585:10:87938:87951	3478109	0	True				
ANR	3479011	EqualityExpression	reg -> dmax != 0		3478109	0		!=			
ANR	3479012	PtrMemberAccess	reg -> dmax		3478109	0					
ANR	3479013	Identifier	reg		3478109	0					
ANR	3479014	Identifier	dmax		3478109	1					
ANR	3479015	PrimaryExpression	0		3478109	1					
ANR	3479016	CompoundStatement		234:26:6291:6291	3478109	1					
ANR	3479017	IfStatement	if ( reg -> dmax == ONIG_INFINITE_DISTANCE )		3478109	0					
ANR	3479018	Condition	reg -> dmax == ONIG_INFINITE_DISTANCE	3586:5:87961:87995	3478109	0	True				
ANR	3479019	EqualityExpression	reg -> dmax == ONIG_INFINITE_DISTANCE		3478109	0		==			
ANR	3479020	PtrMemberAccess	reg -> dmax		3478109	0					
ANR	3479021	Identifier	reg		3478109	0					
ANR	3479022	Identifier	dmax		3478109	1					
ANR	3479023	Identifier	ONIG_INFINITE_DISTANCE		3478109	1					
ANR	3479024	ExpressionStatement	sch_range = ( UChar * ) end	3587:3:88001:88025	3478109	1	True				
ANR	3479025	AssignmentExpression	sch_range = ( UChar * ) end		3478109	0		=			
ANR	3479026	Identifier	sch_range		3478109	0					
ANR	3479027	CastExpression	( UChar * ) end		3478109	1					
ANR	3479028	CastTarget	UChar *		3478109	0					
ANR	3479029	Identifier	end		3478109	1					
ANR	3479030	ElseStatement	else		3478109	0					
ANR	3479031	CompoundStatement		237:6:6370:6370	3478109	0					
ANR	3479032	ExpressionStatement	sch_range += reg -> dmax	3589:3:88038:88060	3478109	0	True				
ANR	3479033	AssignmentExpression	sch_range += reg -> dmax		3478109	0		+=			
ANR	3479034	Identifier	sch_range		3478109	0					
ANR	3479035	PtrMemberAccess	reg -> dmax		3478109	1					
ANR	3479036	Identifier	reg		3478109	0					
ANR	3479037	Identifier	dmax		3478109	1					
ANR	3479038	IfStatement	if ( sch_range > end )		3478109	1					
ANR	3479039	Condition	sch_range > end	3590:7:88069:88083	3478109	0	True				
ANR	3479040	RelationalExpression	sch_range > end		3478109	0		>			
ANR	3479041	Identifier	sch_range		3478109	0					
ANR	3479042	Identifier	end		3478109	1					
ANR	3479043	ExpressionStatement	sch_range = ( UChar * ) end	3590:24:88086:88110	3478109	1	True				
ANR	3479044	AssignmentExpression	sch_range = ( UChar * ) end		3478109	0		=			
ANR	3479045	Identifier	sch_range		3478109	0					
ANR	3479046	CastExpression	( UChar * ) end		3478109	1					
ANR	3479047	CastTarget	UChar *		3478109	0					
ANR	3479048	Identifier	end		3478109	1					
ANR	3479049	IfStatement	if ( ( end - start ) < reg -> threshold_len )		3478109	3					
ANR	3479050	Condition	( end - start ) < reg -> threshold_len	3594:10:88134:88167	3478109	0	True				
ANR	3479051	RelationalExpression	( end - start ) < reg -> threshold_len		3478109	0		<			
ANR	3479052	AdditiveExpression	end - start		3478109	0		-			
ANR	3479053	Identifier	end		3478109	0					
ANR	3479054	Identifier	start		3478109	1					
ANR	3479055	PtrMemberAccess	reg -> threshold_len		3478109	1					
ANR	3479056	Identifier	reg		3478109	0					
ANR	3479057	Identifier	threshold_len		3478109	1					
ANR	3479058	GotoStatement	goto mismatch ;	3595:8:88178:88191	3478109	1	True				
ANR	3479059	Identifier	mismatch		3478109	0					
ANR	3479060	IfStatement	if ( reg -> dmax != ONIG_INFINITE_DISTANCE )		3478109	4					
ANR	3479061	Condition	reg -> dmax != ONIG_INFINITE_DISTANCE	3597:10:88204:88238	3478109	0	True				
ANR	3479062	EqualityExpression	reg -> dmax != ONIG_INFINITE_DISTANCE		3478109	0		!=			
ANR	3479063	PtrMemberAccess	reg -> dmax		3478109	0					
ANR	3479064	Identifier	reg		3478109	0					
ANR	3479065	Identifier	dmax		3478109	1					
ANR	3479066	Identifier	ONIG_INFINITE_DISTANCE		3478109	1					
ANR	3479067	CompoundStatement		246:47:6578:6578	3478109	1					
ANR	3479068	DoStatement	do		3478109	0					
ANR	3479069	CompoundStatement		247:4:6584:6584	3478109	0					
ANR	3479070	IfStatement	"if ( ! forward_search_range ( reg , str , end , s , sch_range , & low , & high , & low_prev ) )"		3478109	0					
ANR	3479071	Condition	"! forward_search_range ( reg , str , end , s , sch_range , & low , & high , & low_prev )"	3599:7:88256:88339	3478109	0	True				
ANR	3479072	UnaryOperationExpression	"! forward_search_range ( reg , str , end , s , sch_range , & low , & high , & low_prev )"		3478109	0					
ANR	3479073	UnaryOperator	!		3478109	0					
ANR	3479074	CallExpression	"forward_search_range ( reg , str , end , s , sch_range , & low , & high , & low_prev )"		3478109	1					
ANR	3479075	Callee	forward_search_range		3478109	0					
ANR	3479076	Identifier	forward_search_range		3478109	0					
ANR	3479077	ArgumentList	reg		3478109	1					
ANR	3479078	Argument	reg		3478109	0					
ANR	3479079	Identifier	reg		3478109	0					
ANR	3479080	Argument	str		3478109	1					
ANR	3479081	Identifier	str		3478109	0					
ANR	3479082	Argument	end		3478109	2					
ANR	3479083	Identifier	end		3478109	0					
ANR	3479084	Argument	s		3478109	3					
ANR	3479085	Identifier	s		3478109	0					
ANR	3479086	Argument	sch_range		3478109	4					
ANR	3479087	Identifier	sch_range		3478109	0					
ANR	3479088	Argument	& low		3478109	5					
ANR	3479089	UnaryOperationExpression	& low		3478109	0					
ANR	3479090	UnaryOperator	&		3478109	0					
ANR	3479091	Identifier	low		3478109	1					
ANR	3479092	Argument	& high		3478109	6					
ANR	3479093	UnaryOperationExpression	& high		3478109	0					
ANR	3479094	UnaryOperator	&		3478109	0					
ANR	3479095	Identifier	high		3478109	1					
ANR	3479096	Argument	& low_prev		3478109	7					
ANR	3479097	UnaryOperationExpression	& low_prev		3478109	0					
ANR	3479098	UnaryOperator	&		3478109	0					
ANR	3479099	Identifier	low_prev		3478109	1					
ANR	3479100	GotoStatement	goto mismatch ;	3600:34:88342:88355	3478109	1	True				
ANR	3479101	Identifier	mismatch		3478109	0					
ANR	3479102	IfStatement	if ( s < low )		3478109	1					
ANR	3479103	Condition	s < low	3601:7:88364:88370	3478109	0	True				
ANR	3479104	RelationalExpression	s < low		3478109	0		<			
ANR	3479105	Identifier	s		3478109	0					
ANR	3479106	Identifier	low		3478109	1					
ANR	3479107	CompoundStatement		250:16:6710:6710	3478109	1					
ANR	3479108	ExpressionStatement	s = low	3602:5:88380:88390	3478109	0	True				
ANR	3479109	AssignmentExpression	s = low		3478109	0		=			
ANR	3479110	Identifier	s		3478109	0					
ANR	3479111	Identifier	low		3478109	1					
ANR	3479112	ExpressionStatement	prev = low_prev	3603:5:88397:88412	3478109	1	True				
ANR	3479113	AssignmentExpression	prev = low_prev		3478109	0		=			
ANR	3479114	Identifier	prev		3478109	0					
ANR	3479115	Identifier	low_prev		3478109	1					
ANR	3479116	WhileStatement	while ( s <= high )		3478109	2					
ANR	3479117	Condition	s <= high	3605:10:88429:88437	3478109	0	True				
ANR	3479118	RelationalExpression	s <= high		3478109	0		<=			
ANR	3479119	Identifier	s		3478109	0					
ANR	3479120	Identifier	high		3478109	1					
ANR	3479121	CompoundStatement		254:21:6777:6777	3478109	1					
ANR	3479122	ExpressionStatement	MATCH_AND_RETURN_CHECK ( orig_range )	3606:5:88447:88481	3478109	0	True				
ANR	3479123	CallExpression	MATCH_AND_RETURN_CHECK ( orig_range )		3478109	0					
ANR	3479124	Callee	MATCH_AND_RETURN_CHECK		3478109	0					
ANR	3479125	Identifier	MATCH_AND_RETURN_CHECK		3478109	0					
ANR	3479126	ArgumentList	orig_range		3478109	1					
ANR	3479127	Argument	orig_range		3478109	0					
ANR	3479128	Identifier	orig_range		3478109	0					
ANR	3479129	ExpressionStatement	prev = s	3607:5:88488:88496	3478109	1	True				
ANR	3479130	AssignmentExpression	prev = s		3478109	0		=			
ANR	3479131	Identifier	prev		3478109	0					
ANR	3479132	Identifier	s		3478109	1					
ANR	3479133	ExpressionStatement	"s += enclen ( reg -> enc , s )"	3608:5:88503:88527	3478109	2	True				
ANR	3479134	AssignmentExpression	"s += enclen ( reg -> enc , s )"		3478109	0		+=			
ANR	3479135	Identifier	s		3478109	0					
ANR	3479136	CallExpression	"enclen ( reg -> enc , s )"		3478109	1					
ANR	3479137	Callee	enclen		3478109	0					
ANR	3479138	Identifier	enclen		3478109	0					
ANR	3479139	ArgumentList	reg -> enc		3478109	1					
ANR	3479140	Argument	reg -> enc		3478109	0					
ANR	3479141	PtrMemberAccess	reg -> enc		3478109	0					
ANR	3479142	Identifier	reg		3478109	0					
ANR	3479143	Identifier	enc		3478109	1					
ANR	3479144	Argument	s		3478109	1					
ANR	3479145	Identifier	s		3478109	0					
ANR	3479146	Condition	s < range	3610:10:88544:88552	3478109	1	True				
ANR	3479147	RelationalExpression	s < range		3478109	0		<			
ANR	3479148	Identifier	s		3478109	0					
ANR	3479149	Identifier	range		3478109	1					
ANR	3479150	GotoStatement	goto mismatch ;	3611:1:88557:88570	3478109	1	True				
ANR	3479151	Identifier	mismatch		3478109	0					
ANR	3479152	ElseStatement	else		3478109	0					
ANR	3479153	CompoundStatement		262:11:6928:6928	3478109	0					
ANR	3479154	IfStatement	"if ( ! forward_search_range ( reg , str , end , s , sch_range , & low , & high , ( UChar * * ) NULL ) )"		3478109	0					
ANR	3479155	Condition	"! forward_search_range ( reg , str , end , s , sch_range , & low , & high , ( UChar * * ) NULL )"	3614:5:88616:88702	3478109	0	True				
ANR	3479156	UnaryOperationExpression	"! forward_search_range ( reg , str , end , s , sch_range , & low , & high , ( UChar * * ) NULL )"		3478109	0					
ANR	3479157	UnaryOperator	!		3478109	0					
ANR	3479158	CallExpression	"forward_search_range ( reg , str , end , s , sch_range , & low , & high , ( UChar * * ) NULL )"		3478109	1					
ANR	3479159	Callee	forward_search_range		3478109	0					
ANR	3479160	Identifier	forward_search_range		3478109	0					
ANR	3479161	ArgumentList	reg		3478109	1					
ANR	3479162	Argument	reg		3478109	0					
ANR	3479163	Identifier	reg		3478109	0					
ANR	3479164	Argument	str		3478109	1					
ANR	3479165	Identifier	str		3478109	0					
ANR	3479166	Argument	end		3478109	2					
ANR	3479167	Identifier	end		3478109	0					
ANR	3479168	Argument	s		3478109	3					
ANR	3479169	Identifier	s		3478109	0					
ANR	3479170	Argument	sch_range		3478109	4					
ANR	3479171	Identifier	sch_range		3478109	0					
ANR	3479172	Argument	& low		3478109	5					
ANR	3479173	UnaryOperationExpression	& low		3478109	0					
ANR	3479174	UnaryOperator	&		3478109	0					
ANR	3479175	Identifier	low		3478109	1					
ANR	3479176	Argument	& high		3478109	6					
ANR	3479177	UnaryOperationExpression	& high		3478109	0					
ANR	3479178	UnaryOperator	&		3478109	0					
ANR	3479179	Identifier	high		3478109	1					
ANR	3479180	Argument	( UChar * * ) NULL		3478109	7					
ANR	3479181	CastExpression	( UChar * * ) NULL		3478109	0					
ANR	3479182	CastTarget	UChar * *		3478109	0					
ANR	3479183	Identifier	NULL		3478109	1					
ANR	3479184	GotoStatement	goto mismatch ;	3615:37:88705:88718	3478109	1	True				
ANR	3479185	Identifier	mismatch		3478109	0					
ANR	3479186	IfStatement	if ( ( reg -> anchor & ANCHOR_ANYCHAR_STAR ) != 0 )		3478109	1					
ANR	3479187	Condition	( reg -> anchor & ANCHOR_ANYCHAR_STAR ) != 0	3617:12:88733:88772	3478109	0	True				
ANR	3479188	EqualityExpression	( reg -> anchor & ANCHOR_ANYCHAR_STAR ) != 0		3478109	0		!=			
ANR	3479189	BitAndExpression	reg -> anchor & ANCHOR_ANYCHAR_STAR		3478109	0		&			
ANR	3479190	PtrMemberAccess	reg -> anchor		3478109	0					
ANR	3479191	Identifier	reg		3478109	0					
ANR	3479192	Identifier	anchor		3478109	1					
ANR	3479193	Identifier	ANCHOR_ANYCHAR_STAR		3478109	1					
ANR	3479194	PrimaryExpression	0		3478109	1					
ANR	3479195	CompoundStatement		266:54:7112:7112	3478109	1					
ANR	3479196	DoStatement	do		3478109	0					
ANR	3479197	CompoundStatement		267:13:7127:7127	3478109	0					
ANR	3479198	ExpressionStatement	MATCH_AND_RETURN_CHECK ( orig_range )	3619:12:88804:88838	3478109	0	True				
ANR	3479199	CallExpression	MATCH_AND_RETURN_CHECK ( orig_range )		3478109	0					
ANR	3479200	Callee	MATCH_AND_RETURN_CHECK		3478109	0					
ANR	3479201	Identifier	MATCH_AND_RETURN_CHECK		3478109	0					
ANR	3479202	ArgumentList	orig_range		3478109	1					
ANR	3479203	Argument	orig_range		3478109	0					
ANR	3479204	Identifier	orig_range		3478109	0					
ANR	3479205	ExpressionStatement	prev = s	3620:12:88852:88860	3478109	1	True				
ANR	3479206	AssignmentExpression	prev = s		3478109	0		=			
ANR	3479207	Identifier	prev		3478109	0					
ANR	3479208	Identifier	s		3478109	1					
ANR	3479209	ExpressionStatement	"s += enclen ( reg -> enc , s )"	3621:12:88874:88898	3478109	2	True				
ANR	3479210	AssignmentExpression	"s += enclen ( reg -> enc , s )"		3478109	0		+=			
ANR	3479211	Identifier	s		3478109	0					
ANR	3479212	CallExpression	"enclen ( reg -> enc , s )"		3478109	1					
ANR	3479213	Callee	enclen		3478109	0					
ANR	3479214	Identifier	enclen		3478109	0					
ANR	3479215	ArgumentList	reg -> enc		3478109	1					
ANR	3479216	Argument	reg -> enc		3478109	0					
ANR	3479217	PtrMemberAccess	reg -> enc		3478109	0					
ANR	3479218	Identifier	reg		3478109	0					
ANR	3479219	Identifier	enc		3478109	1					
ANR	3479220	Argument	s		3478109	1					
ANR	3479221	Identifier	s		3478109	0					
ANR	3479222	WhileStatement	"while ( ! ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end ) && s < range )"		3478109	3					
ANR	3479223	Condition	"! ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end ) && s < range"	3623:19:88920:88976	3478109	0	True				
ANR	3479224	AndExpression	"! ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end ) && s < range"		3478109	0		&&			
ANR	3479225	UnaryOperationExpression	"! ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end )"		3478109	0					
ANR	3479226	UnaryOperator	!		3478109	0					
ANR	3479227	CallExpression	"ONIGENC_IS_MBC_NEWLINE ( reg -> enc , prev , end )"		3478109	1					
ANR	3479228	Callee	ONIGENC_IS_MBC_NEWLINE		3478109	0					
ANR	3479229	Identifier	ONIGENC_IS_MBC_NEWLINE		3478109	0					
ANR	3479230	ArgumentList	reg -> enc		3478109	1					
ANR	3479231	Argument	reg -> enc		3478109	0					
ANR	3479232	PtrMemberAccess	reg -> enc		3478109	0					
ANR	3479233	Identifier	reg		3478109	0					
ANR	3479234	Identifier	enc		3478109	1					
ANR	3479235	Argument	prev		3478109	1					
ANR	3479236	Identifier	prev		3478109	0					
ANR	3479237	Argument	end		3478109	2					
ANR	3479238	Identifier	end		3478109	0					
ANR	3479239	RelationalExpression	s < range		3478109	1		<			
ANR	3479240	Identifier	s		3478109	0					
ANR	3479241	Identifier	range		3478109	1					
ANR	3479242	CompoundStatement		272:78:7316:7316	3478109	1					
ANR	3479243	ExpressionStatement	prev = s	3624:14:88995:89003	3478109	0	True				
ANR	3479244	AssignmentExpression	prev = s		3478109	0		=			
ANR	3479245	Identifier	prev		3478109	0					
ANR	3479246	Identifier	s		3478109	1					
ANR	3479247	ExpressionStatement	"s += enclen ( reg -> enc , s )"	3625:14:89019:89043	3478109	1	True				
ANR	3479248	AssignmentExpression	"s += enclen ( reg -> enc , s )"		3478109	0		+=			
ANR	3479249	Identifier	s		3478109	0					
ANR	3479250	CallExpression	"enclen ( reg -> enc , s )"		3478109	1					
ANR	3479251	Callee	enclen		3478109	0					
ANR	3479252	Identifier	enclen		3478109	0					
ANR	3479253	ArgumentList	reg -> enc		3478109	1					
ANR	3479254	Argument	reg -> enc		3478109	0					
ANR	3479255	PtrMemberAccess	reg -> enc		3478109	0					
ANR	3479256	Identifier	reg		3478109	0					
ANR	3479257	Identifier	enc		3478109	1					
ANR	3479258	Argument	s		3478109	1					
ANR	3479259	Identifier	s		3478109	0					
ANR	3479260	Condition	s < range	3627:19:89078:89086	3478109	1	True				
ANR	3479261	RelationalExpression	s < range		3478109	0		<			
ANR	3479262	Identifier	s		3478109	0					
ANR	3479263	Identifier	range		3478109	1					
ANR	3479264	GotoStatement	goto mismatch ;	3628:10:89100:89113	3478109	1	True				
ANR	3479265	Identifier	mismatch		3478109	0					
ANR	3479266	DoStatement	do		3478109	2					
ANR	3479267	CompoundStatement		282:7:7484:7484	3478109	0					
ANR	3479268	ExpressionStatement	MATCH_AND_RETURN_CHECK ( orig_range )	3634:6:89155:89189	3478109	0	True				
ANR	3479269	CallExpression	MATCH_AND_RETURN_CHECK ( orig_range )		3478109	0					
ANR	3479270	Callee	MATCH_AND_RETURN_CHECK		3478109	0					
ANR	3479271	Identifier	MATCH_AND_RETURN_CHECK		3478109	0					
ANR	3479272	ArgumentList	orig_range		3478109	1					
ANR	3479273	Argument	orig_range		3478109	0					
ANR	3479274	Identifier	orig_range		3478109	0					
ANR	3479275	ExpressionStatement	prev = s	3635:6:89197:89205	3478109	1	True				
ANR	3479276	AssignmentExpression	prev = s		3478109	0		=			
ANR	3479277	Identifier	prev		3478109	0					
ANR	3479278	Identifier	s		3478109	1					
ANR	3479279	ExpressionStatement	"s += enclen ( reg -> enc , s )"	3636:6:89213:89237	3478109	2	True				
ANR	3479280	AssignmentExpression	"s += enclen ( reg -> enc , s )"		3478109	0		+=			
ANR	3479281	Identifier	s		3478109	0					
ANR	3479282	CallExpression	"enclen ( reg -> enc , s )"		3478109	1					
ANR	3479283	Callee	enclen		3478109	0					
ANR	3479284	Identifier	enclen		3478109	0					
ANR	3479285	ArgumentList	reg -> enc		3478109	1					
ANR	3479286	Argument	reg -> enc		3478109	0					
ANR	3479287	PtrMemberAccess	reg -> enc		3478109	0					
ANR	3479288	Identifier	reg		3478109	0					
ANR	3479289	Identifier	enc		3478109	1					
ANR	3479290	Argument	s		3478109	1					
ANR	3479291	Identifier	s		3478109	0					
ANR	3479292	Condition	s < range	3637:13:89252:89260	3478109	1	True				
ANR	3479293	RelationalExpression	s < range		3478109	0		<			
ANR	3479294	Identifier	s		3478109	0					
ANR	3479295	Identifier	range		3478109	1					
ANR	3479296	IfStatement	if ( s == range )		3478109	3					
ANR	3479297	Condition	s == range	3639:8:89273:89282	3478109	0	True				
ANR	3479298	EqualityExpression	s == range		3478109	0		==			
ANR	3479299	Identifier	s		3478109	0					
ANR	3479300	Identifier	range		3478109	1					
ANR	3479301	CompoundStatement		288:20:7622:7622	3478109	1					
ANR	3479302	ExpressionStatement	MATCH_AND_RETURN_CHECK ( orig_range )	3640:6:89329:89363	3478109	0	True				
ANR	3479303	CallExpression	MATCH_AND_RETURN_CHECK ( orig_range )		3478109	0					
ANR	3479304	Callee	MATCH_AND_RETURN_CHECK		3478109	0					
ANR	3479305	Identifier	MATCH_AND_RETURN_CHECK		3478109	0					
ANR	3479306	ArgumentList	orig_range		3478109	1					
ANR	3479307	Argument	orig_range		3478109	0					
ANR	3479308	Identifier	orig_range		3478109	0					
ANR	3479309	ElseStatement	else		3478109	0					
ANR	3479310	CompoundStatement		292:7:7719:7719	3478109	0					
ANR	3479311	IfStatement	if ( orig_start < end )		3478109	0					
ANR	3479312	Condition	orig_start < end	3645:8:89472:89487	3478109	0	True				
ANR	3479313	RelationalExpression	orig_start < end		3478109	0		<			
ANR	3479314	Identifier	orig_start		3478109	0					
ANR	3479315	Identifier	end		3478109	1					
ANR	3479316	ExpressionStatement	"orig_start += enclen ( reg -> enc , orig_start )"	3646:6:89496:89538	3478109	1	True				
ANR	3479317	AssignmentExpression	"orig_start += enclen ( reg -> enc , orig_start )"		3478109	0		+=			
ANR	3479318	Identifier	orig_start		3478109	0					
ANR	3479319	CallExpression	"enclen ( reg -> enc , orig_start )"		3478109	1					
ANR	3479320	Callee	enclen		3478109	0					
ANR	3479321	Identifier	enclen		3478109	0					
ANR	3479322	ArgumentList	reg -> enc		3478109	1					
ANR	3479323	Argument	reg -> enc		3478109	0					
ANR	3479324	PtrMemberAccess	reg -> enc		3478109	0					
ANR	3479325	Identifier	reg		3478109	0					
ANR	3479326	Identifier	enc		3478109	1					
ANR	3479327	Argument	orig_start		3478109	1					
ANR	3479328	Identifier	orig_start		3478109	0					
ANR	3479329	IfStatement	if ( reg -> optimize != ONIG_OPTIMIZE_NONE )		3478109	1					
ANR	3479330	Condition	reg -> optimize != ONIG_OPTIMIZE_NONE	3649:8:89577:89611	3478109	0	True				
ANR	3479331	EqualityExpression	reg -> optimize != ONIG_OPTIMIZE_NONE		3478109	0		!=			
ANR	3479332	PtrMemberAccess	reg -> optimize		3478109	0					
ANR	3479333	Identifier	reg		3478109	0					
ANR	3479334	Identifier	optimize		3478109	1					
ANR	3479335	Identifier	ONIG_OPTIMIZE_NONE		3478109	1					
ANR	3479336	CompoundStatement		299:6:7959:7999	3478109	1					
ANR	3479337	IdentifierDeclStatement	"UChar * low , * high , * adjrange , * sch_start ;"	3650:6:89622:89662	3478109	0	True				
ANR	3479338	IdentifierDecl	* low		3478109	0					
ANR	3479339	IdentifierDeclType	UChar *		3478109	0					
ANR	3479340	Identifier	low		3478109	1					
ANR	3479341	IdentifierDecl	* high		3478109	1					
ANR	3479342	IdentifierDeclType	UChar *		3478109	0					
ANR	3479343	Identifier	high		3478109	1					
ANR	3479344	IdentifierDecl	* adjrange		3478109	2					
ANR	3479345	IdentifierDeclType	UChar *		3478109	0					
ANR	3479346	Identifier	adjrange		3478109	1					
ANR	3479347	IdentifierDecl	* sch_start		3478109	3					
ANR	3479348	IdentifierDeclType	UChar *		3478109	0					
ANR	3479349	Identifier	sch_start		3478109	1					
ANR	3479350	IfStatement	if ( range < end )		3478109	1					
ANR	3479351	Condition	range < end	3652:10:89675:89685	3478109	0	True				
ANR	3479352	RelationalExpression	range < end		3478109	0		<			
ANR	3479353	Identifier	range		3478109	0					
ANR	3479354	Identifier	end		3478109	1					
ANR	3479355	ExpressionStatement	"adjrange = ONIGENC_LEFT_ADJUST_CHAR_HEAD ( reg -> enc , str , range )"	3653:1:89689:89751	3478109	1	True				
ANR	3479356	AssignmentExpression	"adjrange = ONIGENC_LEFT_ADJUST_CHAR_HEAD ( reg -> enc , str , range )"		3478109	0		=			
ANR	3479357	Identifier	adjrange		3478109	0					
ANR	3479358	CallExpression	"ONIGENC_LEFT_ADJUST_CHAR_HEAD ( reg -> enc , str , range )"		3478109	1					
ANR	3479359	Callee	ONIGENC_LEFT_ADJUST_CHAR_HEAD		3478109	0					
ANR	3479360	Identifier	ONIGENC_LEFT_ADJUST_CHAR_HEAD		3478109	0					
ANR	3479361	ArgumentList	reg -> enc		3478109	1					
ANR	3479362	Argument	reg -> enc		3478109	0					
ANR	3479363	PtrMemberAccess	reg -> enc		3478109	0					
ANR	3479364	Identifier	reg		3478109	0					
ANR	3479365	Identifier	enc		3478109	1					
ANR	3479366	Argument	str		3478109	1					
ANR	3479367	Identifier	str		3478109	0					
ANR	3479368	Argument	range		3478109	2					
ANR	3479369	Identifier	range		3478109	0					
ANR	3479370	ElseStatement	else		3478109	0					
ANR	3479371	ExpressionStatement	adjrange = ( UChar * ) end	3655:1:89765:89788	3478109	0	True				
ANR	3479372	AssignmentExpression	adjrange = ( UChar * ) end		3478109	0		=			
ANR	3479373	Identifier	adjrange		3478109	0					
ANR	3479374	CastExpression	( UChar * ) end		3478109	1					
ANR	3479375	CastTarget	UChar *		3478109	0					
ANR	3479376	Identifier	end		3478109	1					
ANR	3479377	IfStatement	if ( reg -> dmax != ONIG_INFINITE_DISTANCE && ( end - range ) >= reg -> threshold_len )		3478109	2					
ANR	3479378	Condition	reg -> dmax != ONIG_INFINITE_DISTANCE && ( end - range ) >= reg -> threshold_len	3657:10:89801:89877	3478109	0	True				
ANR	3479379	AndExpression	reg -> dmax != ONIG_INFINITE_DISTANCE && ( end - range ) >= reg -> threshold_len		3478109	0		&&			
ANR	3479380	EqualityExpression	reg -> dmax != ONIG_INFINITE_DISTANCE		3478109	0		!=			
ANR	3479381	PtrMemberAccess	reg -> dmax		3478109	0					
ANR	3479382	Identifier	reg		3478109	0					
ANR	3479383	Identifier	dmax		3478109	1					
ANR	3479384	Identifier	ONIG_INFINITE_DISTANCE		3478109	1					
ANR	3479385	RelationalExpression	( end - range ) >= reg -> threshold_len		3478109	1		>=			
ANR	3479386	AdditiveExpression	end - range		3478109	0		-			
ANR	3479387	Identifier	end		3478109	0					
ANR	3479388	Identifier	range		3478109	1					
ANR	3479389	PtrMemberAccess	reg -> threshold_len		3478109	1					
ANR	3479390	Identifier	reg		3478109	0					
ANR	3479391	Identifier	threshold_len		3478109	1					
ANR	3479392	CompoundStatement		307:40:8217:8217	3478109	1					
ANR	3479393	DoStatement	do		3478109	0					
ANR	3479394	CompoundStatement		308:4:8223:8223	3478109	0					
ANR	3479395	ExpressionStatement	sch_start = s + reg -> dmax	3660:3:89891:89916	3478109	0	True				
ANR	3479396	AssignmentExpression	sch_start = s + reg -> dmax		3478109	0		=			
ANR	3479397	Identifier	sch_start		3478109	0					
ANR	3479398	AdditiveExpression	s + reg -> dmax		3478109	1		+			
ANR	3479399	Identifier	s		3478109	0					
ANR	3479400	PtrMemberAccess	reg -> dmax		3478109	1					
ANR	3479401	Identifier	reg		3478109	0					
ANR	3479402	Identifier	dmax		3478109	1					
ANR	3479403	IfStatement	if ( sch_start > end )		3478109	1					
ANR	3479404	Condition	sch_start > end	3661:7:89925:89939	3478109	0	True				
ANR	3479405	RelationalExpression	sch_start > end		3478109	0		>			
ANR	3479406	Identifier	sch_start		3478109	0					
ANR	3479407	Identifier	end		3478109	1					
ANR	3479408	ExpressionStatement	sch_start = ( UChar * ) end	3661:24:89942:89966	3478109	1	True				
ANR	3479409	AssignmentExpression	sch_start = ( UChar * ) end		3478109	0		=			
ANR	3479410	Identifier	sch_start		3478109	0					
ANR	3479411	CastExpression	( UChar * ) end		3478109	1					
ANR	3479412	CastTarget	UChar *		3478109	0					
ANR	3479413	Identifier	end		3478109	1					
ANR	3479414	IfStatement	"if ( backward_search_range ( reg , str , end , sch_start , range , adjrange , & low , & high ) <= 0 )"		3478109	2					
ANR	3479415	Condition	"backward_search_range ( reg , str , end , sch_start , range , adjrange , & low , & high ) <= 0"	3662:7:89975:90064	3478109	0	True				
ANR	3479416	RelationalExpression	"backward_search_range ( reg , str , end , sch_start , range , adjrange , & low , & high ) <= 0"		3478109	0		<=			
ANR	3479417	CallExpression	"backward_search_range ( reg , str , end , sch_start , range , adjrange , & low , & high )"		3478109	0					
ANR	3479418	Callee	backward_search_range		3478109	0					
ANR	3479419	Identifier	backward_search_range		3478109	0					
ANR	3479420	ArgumentList	reg		3478109	1					
ANR	3479421	Argument	reg		3478109	0					
ANR	3479422	Identifier	reg		3478109	0					
ANR	3479423	Argument	str		3478109	1					
ANR	3479424	Identifier	str		3478109	0					
ANR	3479425	Argument	end		3478109	2					
ANR	3479426	Identifier	end		3478109	0					
ANR	3479427	Argument	sch_start		3478109	3					
ANR	3479428	Identifier	sch_start		3478109	0					
ANR	3479429	Argument	range		3478109	4					
ANR	3479430	Identifier	range		3478109	0					
ANR	3479431	Argument	adjrange		3478109	5					
ANR	3479432	Identifier	adjrange		3478109	0					
ANR	3479433	Argument	& low		3478109	6					
ANR	3479434	UnaryOperationExpression	& low		3478109	0					
ANR	3479435	UnaryOperator	&		3478109	0					
ANR	3479436	Identifier	low		3478109	1					
ANR	3479437	Argument	& high		3478109	7					
ANR	3479438	UnaryOperationExpression	& high		3478109	0					
ANR	3479439	UnaryOperator	&		3478109	0					
ANR	3479440	Identifier	high		3478109	1					
ANR	3479441	PrimaryExpression	0		3478109	1					
ANR	3479442	GotoStatement	goto mismatch ;	3664:5:90072:90085	3478109	1	True				
ANR	3479443	Identifier	mismatch		3478109	0					
ANR	3479444	IfStatement	if ( s > high )		3478109	3					
ANR	3479445	Condition	s > high	3666:7:90095:90102	3478109	0	True				
ANR	3479446	RelationalExpression	s > high		3478109	0		>			
ANR	3479447	Identifier	s		3478109	0					
ANR	3479448	Identifier	high		3478109	1					
ANR	3479449	ExpressionStatement	s = high	3667:5:90110:90118	3478109	1	True				
ANR	3479450	AssignmentExpression	s = high		3478109	0		=			
ANR	3479451	Identifier	s		3478109	0					
ANR	3479452	Identifier	high		3478109	1					
ANR	3479453	WhileStatement	while ( s >= low )		3478109	4					
ANR	3479454	Condition	s >= low	3669:10:90131:90138	3478109	0	True				
ANR	3479455	RelationalExpression	s >= low		3478109	0		>=			
ANR	3479456	Identifier	s		3478109	0					
ANR	3479457	Identifier	low		3478109	1					
ANR	3479458	CompoundStatement		318:20:8478:8478	3478109	1					
ANR	3479459	ExpressionStatement	"prev = onigenc_get_prev_char_head ( reg -> enc , str , s )"	3670:5:90148:90199	3478109	0	True				
ANR	3479460	AssignmentExpression	"prev = onigenc_get_prev_char_head ( reg -> enc , str , s )"		3478109	0		=			
ANR	3479461	Identifier	prev		3478109	0					
ANR	3479462	CallExpression	"onigenc_get_prev_char_head ( reg -> enc , str , s )"		3478109	1					
ANR	3479463	Callee	onigenc_get_prev_char_head		3478109	0					
ANR	3479464	Identifier	onigenc_get_prev_char_head		3478109	0					
ANR	3479465	ArgumentList	reg -> enc		3478109	1					
ANR	3479466	Argument	reg -> enc		3478109	0					
ANR	3479467	PtrMemberAccess	reg -> enc		3478109	0					
ANR	3479468	Identifier	reg		3478109	0					
ANR	3479469	Identifier	enc		3478109	1					
ANR	3479470	Argument	str		3478109	1					
ANR	3479471	Identifier	str		3478109	0					
ANR	3479472	Argument	s		3478109	2					
ANR	3479473	Identifier	s		3478109	0					
ANR	3479474	ExpressionStatement	MATCH_AND_RETURN_CHECK ( orig_start )	3671:5:90206:90240	3478109	1	True				
ANR	3479475	CallExpression	MATCH_AND_RETURN_CHECK ( orig_start )		3478109	0					
ANR	3479476	Callee	MATCH_AND_RETURN_CHECK		3478109	0					
ANR	3479477	Identifier	MATCH_AND_RETURN_CHECK		3478109	0					
ANR	3479478	ArgumentList	orig_start		3478109	1					
ANR	3479479	Argument	orig_start		3478109	0					
ANR	3479480	Identifier	orig_start		3478109	0					
ANR	3479481	ExpressionStatement	s = prev	3672:5:90247:90255	3478109	2	True				
ANR	3479482	AssignmentExpression	s = prev		3478109	0		=			
ANR	3479483	Identifier	s		3478109	0					
ANR	3479484	Identifier	prev		3478109	1					
ANR	3479485	Condition	s >= range	3674:10:90272:90281	3478109	1	True				
ANR	3479486	RelationalExpression	s >= range		3478109	0		>=			
ANR	3479487	Identifier	s		3478109	0					
ANR	3479488	Identifier	range		3478109	1					
ANR	3479489	GotoStatement	goto mismatch ;	3675:1:90286:90299	3478109	1	True				
ANR	3479490	Identifier	mismatch		3478109	0					
ANR	3479491	ElseStatement	else		3478109	0					
ANR	3479492	CompoundStatement		326:11:8657:8657	3478109	0					
ANR	3479493	IfStatement	if ( ( end - range ) < reg -> threshold_len )		3478109	0					
ANR	3479494	Condition	( end - range ) < reg -> threshold_len	3678:5:90345:90378	3478109	0	True				
ANR	3479495	RelationalExpression	( end - range ) < reg -> threshold_len		3478109	0		<			
ANR	3479496	AdditiveExpression	end - range		3478109	0		-			
ANR	3479497	Identifier	end		3478109	0					
ANR	3479498	Identifier	range		3478109	1					
ANR	3479499	PtrMemberAccess	reg -> threshold_len		3478109	1					
ANR	3479500	Identifier	reg		3478109	0					
ANR	3479501	Identifier	threshold_len		3478109	1					
ANR	3479502	GotoStatement	goto mismatch ;	3678:41:90381:90394	3478109	1	True				
ANR	3479503	Identifier	mismatch		3478109	0					
ANR	3479504	ExpressionStatement	sch_start = s	3680:1:90398:90411	3478109	1	True				
ANR	3479505	AssignmentExpression	sch_start = s		3478109	0		=			
ANR	3479506	Identifier	sch_start		3478109	0					
ANR	3479507	Identifier	s		3478109	1					
ANR	3479508	IfStatement	if ( reg -> dmax != 0 )		3478109	2					
ANR	3479509	Condition	reg -> dmax != 0	3681:5:90418:90431	3478109	0	True				
ANR	3479510	EqualityExpression	reg -> dmax != 0		3478109	0		!=			
ANR	3479511	PtrMemberAccess	reg -> dmax		3478109	0					
ANR	3479512	Identifier	reg		3478109	0					
ANR	3479513	Identifier	dmax		3478109	1					
ANR	3479514	PrimaryExpression	0		3478109	1					
ANR	3479515	CompoundStatement		330:21:8771:8771	3478109	1					
ANR	3479516	IfStatement	if ( reg -> dmax == ONIG_INFINITE_DISTANCE )		3478109	0					
ANR	3479517	Condition	reg -> dmax == ONIG_INFINITE_DISTANCE	3682:7:90443:90477	3478109	0	True				
ANR	3479518	EqualityExpression	reg -> dmax == ONIG_INFINITE_DISTANCE		3478109	0		==			
ANR	3479519	PtrMemberAccess	reg -> dmax		3478109	0					
ANR	3479520	Identifier	reg		3478109	0					
ANR	3479521	Identifier	dmax		3478109	1					
ANR	3479522	Identifier	ONIG_INFINITE_DISTANCE		3478109	1					
ANR	3479523	ExpressionStatement	sch_start = ( UChar * ) end	3683:5:90485:90509	3478109	1	True				
ANR	3479524	AssignmentExpression	sch_start = ( UChar * ) end		3478109	0		=			
ANR	3479525	Identifier	sch_start		3478109	0					
ANR	3479526	CastExpression	( UChar * ) end		3478109	1					
ANR	3479527	CastTarget	UChar *		3478109	0					
ANR	3479528	Identifier	end		3478109	1					
ANR	3479529	ElseStatement	else		3478109	0					
ANR	3479530	CompoundStatement		333:8:8856:8856	3478109	0					
ANR	3479531	ExpressionStatement	sch_start += reg -> dmax	3685:5:90526:90548	3478109	0	True				
ANR	3479532	AssignmentExpression	sch_start += reg -> dmax		3478109	0		+=			
ANR	3479533	Identifier	sch_start		3478109	0					
ANR	3479534	PtrMemberAccess	reg -> dmax		3478109	1					
ANR	3479535	Identifier	reg		3478109	0					
ANR	3479536	Identifier	dmax		3478109	1					
ANR	3479537	IfStatement	if ( sch_start > end )		3478109	1					
ANR	3479538	Condition	sch_start > end	3686:9:90559:90573	3478109	0	True				
ANR	3479539	RelationalExpression	sch_start > end		3478109	0		>			
ANR	3479540	Identifier	sch_start		3478109	0					
ANR	3479541	Identifier	end		3478109	1					
ANR	3479542	ExpressionStatement	sch_start = ( UChar * ) end	3686:26:90576:90600	3478109	1	True				
ANR	3479543	AssignmentExpression	sch_start = ( UChar * ) end		3478109	0		=			
ANR	3479544	Identifier	sch_start		3478109	0					
ANR	3479545	CastExpression	( UChar * ) end		3478109	1					
ANR	3479546	CastTarget	UChar *		3478109	0					
ANR	3479547	Identifier	end		3478109	1					
ANR	3479548	ElseStatement	else		3478109	0					
ANR	3479549	ExpressionStatement	"sch_start = ONIGENC_LEFT_ADJUST_CHAR_HEAD ( reg -> enc , start , sch_start )"	3688:7:90619:90698	3478109	0	True				
ANR	3479550	AssignmentExpression	"sch_start = ONIGENC_LEFT_ADJUST_CHAR_HEAD ( reg -> enc , start , sch_start )"		3478109	0		=			
ANR	3479551	Identifier	sch_start		3478109	0					
ANR	3479552	CallExpression	"ONIGENC_LEFT_ADJUST_CHAR_HEAD ( reg -> enc , start , sch_start )"		3478109	1					
ANR	3479553	Callee	ONIGENC_LEFT_ADJUST_CHAR_HEAD		3478109	0					
ANR	3479554	Identifier	ONIGENC_LEFT_ADJUST_CHAR_HEAD		3478109	0					
ANR	3479555	ArgumentList	reg -> enc		3478109	1					
ANR	3479556	Argument	reg -> enc		3478109	0					
ANR	3479557	PtrMemberAccess	reg -> enc		3478109	0					
ANR	3479558	Identifier	reg		3478109	0					
ANR	3479559	Identifier	enc		3478109	1					
ANR	3479560	Argument	start		3478109	1					
ANR	3479561	Identifier	start		3478109	0					
ANR	3479562	Argument	sch_start		3478109	2					
ANR	3479563	Identifier	sch_start		3478109	0					
ANR	3479564	IfStatement	"if ( backward_search_range ( reg , str , end , sch_start , range , adjrange , & low , & high ) <= 0 )"		3478109	3					
ANR	3479565	Condition	"backward_search_range ( reg , str , end , sch_start , range , adjrange , & low , & high ) <= 0"	3692:5:90713:90800	3478109	0	True				
ANR	3479566	RelationalExpression	"backward_search_range ( reg , str , end , sch_start , range , adjrange , & low , & high ) <= 0"		3478109	0		<=			
ANR	3479567	CallExpression	"backward_search_range ( reg , str , end , sch_start , range , adjrange , & low , & high )"		3478109	0					
ANR	3479568	Callee	backward_search_range		3478109	0					
ANR	3479569	Identifier	backward_search_range		3478109	0					
ANR	3479570	ArgumentList	reg		3478109	1					
ANR	3479571	Argument	reg		3478109	0					
ANR	3479572	Identifier	reg		3478109	0					
ANR	3479573	Argument	str		3478109	1					
ANR	3479574	Identifier	str		3478109	0					
ANR	3479575	Argument	end		3478109	2					
ANR	3479576	Identifier	end		3478109	0					
ANR	3479577	Argument	sch_start		3478109	3					
ANR	3479578	Identifier	sch_start		3478109	0					
ANR	3479579	Argument	range		3478109	4					
ANR	3479580	Identifier	range		3478109	0					
ANR	3479581	Argument	adjrange		3478109	5					
ANR	3479582	Identifier	adjrange		3478109	0					
ANR	3479583	Argument	& low		3478109	6					
ANR	3479584	UnaryOperationExpression	& low		3478109	0					
ANR	3479585	UnaryOperator	&		3478109	0					
ANR	3479586	Identifier	low		3478109	1					
ANR	3479587	Argument	& high		3478109	7					
ANR	3479588	UnaryOperationExpression	& high		3478109	0					
ANR	3479589	UnaryOperator	&		3478109	0					
ANR	3479590	Identifier	high		3478109	1					
ANR	3479591	PrimaryExpression	0		3478109	1					
ANR	3479592	GotoStatement	goto mismatch ;	3693:25:90803:90816	3478109	1	True				
ANR	3479593	Identifier	mismatch		3478109	0					
ANR	3479594	DoStatement	do		3478109	2					
ANR	3479595	CompoundStatement		346:7:9177:9177	3478109	0					
ANR	3479596	ExpressionStatement	"prev = onigenc_get_prev_char_head ( reg -> enc , str , s )"	3698:6:90848:90899	3478109	0	True				
ANR	3479597	AssignmentExpression	"prev = onigenc_get_prev_char_head ( reg -> enc , str , s )"		3478109	0		=			
ANR	3479598	Identifier	prev		3478109	0					
ANR	3479599	CallExpression	"onigenc_get_prev_char_head ( reg -> enc , str , s )"		3478109	1					
ANR	3479600	Callee	onigenc_get_prev_char_head		3478109	0					
ANR	3479601	Identifier	onigenc_get_prev_char_head		3478109	0					
ANR	3479602	ArgumentList	reg -> enc		3478109	1					
ANR	3479603	Argument	reg -> enc		3478109	0					
ANR	3479604	PtrMemberAccess	reg -> enc		3478109	0					
ANR	3479605	Identifier	reg		3478109	0					
ANR	3479606	Identifier	enc		3478109	1					
ANR	3479607	Argument	str		3478109	1					
ANR	3479608	Identifier	str		3478109	0					
ANR	3479609	Argument	s		3478109	2					
ANR	3479610	Identifier	s		3478109	0					
ANR	3479611	ExpressionStatement	MATCH_AND_RETURN_CHECK ( orig_start )	3699:6:90907:90941	3478109	1	True				
ANR	3479612	CallExpression	MATCH_AND_RETURN_CHECK ( orig_start )		3478109	0					
ANR	3479613	Callee	MATCH_AND_RETURN_CHECK		3478109	0					
ANR	3479614	Identifier	MATCH_AND_RETURN_CHECK		3478109	0					
ANR	3479615	ArgumentList	orig_start		3478109	1					
ANR	3479616	Argument	orig_start		3478109	0					
ANR	3479617	Identifier	orig_start		3478109	0					
ANR	3479618	ExpressionStatement	s = prev	3700:6:90949:90957	3478109	2	True				
ANR	3479619	AssignmentExpression	s = prev		3478109	0		=			
ANR	3479620	Identifier	s		3478109	0					
ANR	3479621	Identifier	prev		3478109	1					
ANR	3479622	Condition	s >= range	3701:13:90972:90981	3478109	1	True				
ANR	3479623	RelationalExpression	s >= range		3478109	0		>=			
ANR	3479624	Identifier	s		3478109	0					
ANR	3479625	Identifier	range		3478109	1					
ANR	3479626	Label	mismatch :	3704:1:90991:90999	3478109	32	True				
ANR	3479627	Identifier	mismatch		3478109	0					
ANR	3479628	IfStatement	if ( IS_FIND_LONGEST ( reg -> options ) )		3478109	33					
ANR	3479629	Condition	IS_FIND_LONGEST ( reg -> options )	3706:6:91051:91079	3478109	0	True				
ANR	3479630	CallExpression	IS_FIND_LONGEST ( reg -> options )		3478109	0					
ANR	3479631	Callee	IS_FIND_LONGEST		3478109	0					
ANR	3479632	Identifier	IS_FIND_LONGEST		3478109	0					
ANR	3479633	ArgumentList	reg -> options		3478109	1					
ANR	3479634	Argument	reg -> options		3478109	0					
ANR	3479635	PtrMemberAccess	reg -> options		3478109	0					
ANR	3479636	Identifier	reg		3478109	0					
ANR	3479637	Identifier	options		3478109	1					
ANR	3479638	CompoundStatement		355:37:9419:9419	3478109	1					
ANR	3479639	IfStatement	if ( msa . best_len >= 0 )		3478109	0					
ANR	3479640	Condition	msa . best_len >= 0	3707:8:91092:91108	3478109	0	True				
ANR	3479641	RelationalExpression	msa . best_len >= 0		3478109	0		>=			
ANR	3479642	MemberAccess	msa . best_len		3478109	0					
ANR	3479643	Identifier	msa		3478109	0					
ANR	3479644	Identifier	best_len		3478109	1					
ANR	3479645	PrimaryExpression	0		3478109	1					
ANR	3479646	CompoundStatement		356:27:9448:9448	3478109	1					
ANR	3479647	ExpressionStatement	s = msa . best_s	3708:6:91119:91133	3478109	0	True				
ANR	3479648	AssignmentExpression	s = msa . best_s		3478109	0		=			
ANR	3479649	Identifier	s		3478109	0					
ANR	3479650	MemberAccess	msa . best_s		3478109	1					
ANR	3479651	Identifier	msa		3478109	0					
ANR	3479652	Identifier	best_s		3478109	1					
ANR	3479653	GotoStatement	goto match ;	3709:6:91141:91151	3478109	1	True				
ANR	3479654	Identifier	match		3478109	0					
ANR	3479655	ExpressionStatement	r = ONIG_MISMATCH	3713:2:91172:91189	3478109	34	True				
ANR	3479656	AssignmentExpression	r = ONIG_MISMATCH		3478109	0		=			
ANR	3479657	Identifier	r		3478109	0					
ANR	3479658	Identifier	ONIG_MISMATCH		3478109	1					
ANR	3479659	Label	finish :	3715:1:91193:91199	3478109	35	True				
ANR	3479660	Identifier	finish		3478109	0					
ANR	3479661	ExpressionStatement	MATCH_ARG_FREE ( msa )	3716:2:91203:91222	3478109	36	True				
ANR	3479662	CallExpression	MATCH_ARG_FREE ( msa )		3478109	0					
ANR	3479663	Callee	MATCH_ARG_FREE		3478109	0					
ANR	3479664	Identifier	MATCH_ARG_FREE		3478109	0					
ANR	3479665	ArgumentList	msa		3478109	1					
ANR	3479666	Argument	msa		3478109	0					
ANR	3479667	Identifier	msa		3478109	0					
ANR	3479668	ExpressionStatement	ONIG_STATE_DEC_THREAD ( reg )	3717:2:91226:91252	3478109	37	True				
ANR	3479669	CallExpression	ONIG_STATE_DEC_THREAD ( reg )		3478109	0					
ANR	3479670	Callee	ONIG_STATE_DEC_THREAD		3478109	0					
ANR	3479671	Identifier	ONIG_STATE_DEC_THREAD		3478109	0					
ANR	3479672	ArgumentList	reg		3478109	1					
ANR	3479673	Argument	reg		3478109	0					
ANR	3479674	Identifier	reg		3478109	0					
ANR	3479675	Statement	if	3721:2:91367:91368	3478109	38	True				
ANR	3479676	Statement	(	3721:5:91370:91370	3478109	39	True				
ANR	3479677	Statement	IS_FIND_NOT_EMPTY	3721:6:91371:91387	3478109	40	True				
ANR	3479678	Statement	(	3721:23:91388:91388	3478109	41	True				
ANR	3479679	Statement	reg	3721:24:91389:91391	3478109	42	True				
ANR	3479680	Statement	->	3721:27:91392:91393	3478109	43	True				
ANR	3479681	Statement	options	3721:29:91394:91400	3478109	44	True				
ANR	3479682	Statement	)	3721:36:91401:91401	3478109	45	True				
ANR	3479683	Statement	&&	3721:38:91403:91404	3478109	46	True				
ANR	3479684	Statement	region	3721:41:91406:91411	3478109	47	True				
ANR	3479685	Statement	&&	3723:6:91454:91455	3478109	48	True				
ANR	3479686	Statement	!	3723:9:91457:91457	3478109	49	True				
ANR	3479687	Statement	IS_POSIX_REGION	3723:10:91458:91472	3478109	50	True				
ANR	3479688	Statement	(	3723:25:91473:91473	3478109	51	True				
ANR	3479689	Statement	option	3723:26:91474:91479	3478109	52	True				
ANR	3479690	Statement	)	3723:32:91480:91480	3478109	53	True				
ANR	3479691	Statement	)	3725:6:91495:91495	3478109	54	True				
ANR	3479692	CompoundStatement		374:8:9834:9834	3478109	55					
ANR	3479693	ExpressionStatement	onig_region_clear ( region )	3726:4:91503:91528	3478109	0	True				
ANR	3479694	CallExpression	onig_region_clear ( region )		3478109	0					
ANR	3479695	Callee	onig_region_clear		3478109	0					
ANR	3479696	Identifier	onig_region_clear		3478109	0					
ANR	3479697	ArgumentList	region		3478109	1					
ANR	3479698	Argument	region		3478109	0					
ANR	3479699	Identifier	region		3478109	0					
ANR	3479700	IfStatement	if ( r != ONIG_MISMATCH )		3478109	56					
ANR	3479701	Condition	r != ONIG_MISMATCH	3730:6:91559:91576	3478109	0	True				
ANR	3479702	EqualityExpression	r != ONIG_MISMATCH		3478109	0		!=			
ANR	3479703	Identifier	r		3478109	0					
ANR	3479704	Identifier	ONIG_MISMATCH		3478109	1					
ANR	3479705	ExpressionStatement	"fprintf ( stderr , ""onig_search: error %d\\n"" , r )"	3731:4:91583:91628	3478109	1	True				
ANR	3479706	CallExpression	"fprintf ( stderr , ""onig_search: error %d\\n"" , r )"		3478109	0					
ANR	3479707	Callee	fprintf		3478109	0					
ANR	3479708	Identifier	fprintf		3478109	0					
ANR	3479709	ArgumentList	stderr		3478109	1					
ANR	3479710	Argument	stderr		3478109	0					
ANR	3479711	Identifier	stderr		3478109	0					
ANR	3479712	Argument	"""onig_search: error %d\\n"""		3478109	1					
ANR	3479713	PrimaryExpression	"""onig_search: error %d\\n"""		3478109	0					
ANR	3479714	Argument	r		3478109	2					
ANR	3479715	Identifier	r		3478109	0					
ANR	3479716	ReturnStatement	return r ;	3733:2:91639:91647	3478109	57	True				
ANR	3479717	Identifier	r		3478109	0					
ANR	3479718	Label	mismatch_no_msa :	3735:1:91651:91666	3478109	58	True				
ANR	3479719	Identifier	mismatch_no_msa		3478109	0					
ANR	3479720	ExpressionStatement	r = ONIG_MISMATCH	3736:2:91670:91687	3478109	59	True				
ANR	3479721	AssignmentExpression	r = ONIG_MISMATCH		3478109	0		=			
ANR	3479722	Identifier	r		3478109	0					
ANR	3479723	Identifier	ONIG_MISMATCH		3478109	1					
ANR	3479724	Label	finish_no_msa :	3737:1:91690:91703	3478109	60	True				
ANR	3479725	Identifier	finish_no_msa		3478109	0					
ANR	3479726	ExpressionStatement	ONIG_STATE_DEC_THREAD ( reg )	3738:2:91707:91733	3478109	61	True				
ANR	3479727	CallExpression	ONIG_STATE_DEC_THREAD ( reg )		3478109	0					
ANR	3479728	Callee	ONIG_STATE_DEC_THREAD		3478109	0					
ANR	3479729	Identifier	ONIG_STATE_DEC_THREAD		3478109	0					
ANR	3479730	ArgumentList	reg		3478109	1					
ANR	3479731	Argument	reg		3478109	0					
ANR	3479732	Identifier	reg		3478109	0					
ANR	3479733	IfStatement	if ( r != ONIG_MISMATCH )		3478109	62					
ANR	3479734	Condition	r != ONIG_MISMATCH	3740:6:91759:91776	3478109	0	True				
ANR	3479735	EqualityExpression	r != ONIG_MISMATCH		3478109	0		!=			
ANR	3479736	Identifier	r		3478109	0					
ANR	3479737	Identifier	ONIG_MISMATCH		3478109	1					
ANR	3479738	ExpressionStatement	"fprintf ( stderr , ""onig_search: error %d\\n"" , r )"	3741:4:91783:91828	3478109	1	True				
ANR	3479739	CallExpression	"fprintf ( stderr , ""onig_search: error %d\\n"" , r )"		3478109	0					
ANR	3479740	Callee	fprintf		3478109	0					
ANR	3479741	Identifier	fprintf		3478109	0					
ANR	3479742	ArgumentList	stderr		3478109	1					
ANR	3479743	Argument	stderr		3478109	0					
ANR	3479744	Identifier	stderr		3478109	0					
ANR	3479745	Argument	"""onig_search: error %d\\n"""		3478109	1					
ANR	3479746	PrimaryExpression	"""onig_search: error %d\\n"""		3478109	0					
ANR	3479747	Argument	r		3478109	2					
ANR	3479748	Identifier	r		3478109	0					
ANR	3479749	ReturnStatement	return r ;	3743:2:91839:91847	3478109	63	True				
ANR	3479750	Identifier	r		3478109	0					
ANR	3479751	Label	match :	3745:1:91851:91856	3478109	64	True				
ANR	3479752	Identifier	match		3478109	0					
ANR	3479753	ExpressionStatement	ONIG_STATE_DEC_THREAD ( reg )	3746:2:91860:91886	3478109	65	True				
ANR	3479754	CallExpression	ONIG_STATE_DEC_THREAD ( reg )		3478109	0					
ANR	3479755	Callee	ONIG_STATE_DEC_THREAD		3478109	0					
ANR	3479756	Identifier	ONIG_STATE_DEC_THREAD		3478109	0					
ANR	3479757	ArgumentList	reg		3478109	1					
ANR	3479758	Argument	reg		3478109	0					
ANR	3479759	Identifier	reg		3478109	0					
ANR	3479760	ExpressionStatement	MATCH_ARG_FREE ( msa )	3747:2:91890:91909	3478109	66	True				
ANR	3479761	CallExpression	MATCH_ARG_FREE ( msa )		3478109	0					
ANR	3479762	Callee	MATCH_ARG_FREE		3478109	0					
ANR	3479763	Identifier	MATCH_ARG_FREE		3478109	0					
ANR	3479764	ArgumentList	msa		3478109	1					
ANR	3479765	Argument	msa		3478109	0					
ANR	3479766	Identifier	msa		3478109	0					
ANR	3479767	ReturnStatement	return s - str ;	3748:2:91913:91927	3478109	67	True				
ANR	3479768	AdditiveExpression	s - str		3478109	0		-			
ANR	3479769	Identifier	s		3478109	0					
ANR	3479770	Identifier	str		3478109	1					
ANR	3479771	ReturnType	extern int		3478109	1					
ANR	3479772	Identifier	onig_search		3478109	2					
ANR	3479773	ParameterList	"regex_t * reg , const UChar * str , const UChar * end , const UChar * start , const UChar * range , OnigRegion * region , OnigOptionType option"		3478109	3					
ANR	3479774	Parameter	regex_t * reg	3350:12:81524:81535	3478109	0	True				
ANR	3479775	ParameterType	regex_t *		3478109	0					
ANR	3479776	Identifier	reg		3478109	1					
ANR	3479777	Parameter	const UChar * str	3350:26:81538:81553	3478109	1	True				
ANR	3479778	ParameterType	const UChar *		3478109	0					
ANR	3479779	Identifier	str		3478109	1					
ANR	3479780	Parameter	const UChar * end	3350:44:81556:81571	3478109	2	True				
ANR	3479781	ParameterType	const UChar *		3478109	0					
ANR	3479782	Identifier	end		3478109	1					
ANR	3479783	Parameter	const UChar * start	3351:5:81579:81596	3478109	3	True				
ANR	3479784	ParameterType	const UChar *		3478109	0					
ANR	3479785	Identifier	start		3478109	1					
ANR	3479786	Parameter	const UChar * range	3351:25:81599:81616	3478109	4	True				
ANR	3479787	ParameterType	const UChar *		3478109	0					
ANR	3479788	Identifier	range		3478109	1					
ANR	3479789	Parameter	OnigRegion * region	3351:45:81619:81636	3478109	5	True				
ANR	3479790	ParameterType	OnigRegion *		3478109	0					
ANR	3479791	Identifier	region		3478109	1					
ANR	3479792	Parameter	OnigOptionType option	3351:65:81639:81659	3478109	6	True				
ANR	3479793	ParameterType	OnigOptionType		3478109	0					
ANR	3479794	Identifier	option		3478109	1					
ANR	3479795	CFGEntryNode	ENTRY		3478109		True				
ANR	3479796	CFGExitNode	EXIT		3478109		True				
ANR	3479797	Symbol	ANCHOR_END_BUF		3478109						
ANR	3479798	Symbol	min_semi_end		3478109						
ANR	3479799	Symbol	ONIG_STATE		3478109						
ANR	3479800	Symbol	prev		3478109						
ANR	3479801	Symbol	reg -> threshold_len		3478109						
ANR	3479802	Symbol	max_semi_end		3478109						
ANR	3479803	Symbol	ONIGENC_IS_MBC_NEWLINE		3478109						
ANR	3479804	Symbol	onig_region_resize_clear		3478109						
ANR	3479805	Symbol	orig_start		3478109						
ANR	3479806	Symbol	ONIG_INFINITE_DISTANCE		3478109						
ANR	3479807	Symbol	high		3478109						
ANR	3479808	Symbol	msa . state_check_buff_size		3478109						
ANR	3479809	Symbol	reg		3478109						
ANR	3479810	Symbol	reg -> anchor_dmax		3478109						
ANR	3479811	Symbol	msa . state_check_buff		3478109						
ANR	3479812	Symbol	reg -> options		3478109						
ANR	3479813	Symbol	reg -> optimize		3478109						
ANR	3479814	Symbol	ONIG_OPTIMIZE_NONE		3478109						
ANR	3479815	Symbol	& high		3478109						
ANR	3479816	Symbol	reg -> chain		3478109						
ANR	3479817	Symbol	NULL		3478109						
ANR	3479818	Symbol	ONIGERR_OVER_THREAD_PASS_LIMIT_COUNT		3478109						
ANR	3479819	Symbol	offset		3478109						
ANR	3479820	Symbol	& msa		3478109						
ANR	3479821	Symbol	ANCHOR_BEGIN_POSITION		3478109						
ANR	3479822	Symbol	reg -> anchor_dmin		3478109						
ANR	3479823	Symbol	forward_search_range		3478109						
ANR	3479824	Symbol	stderr		3478109						
ANR	3479825	Symbol	reg -> enc		3478109						
ANR	3479826	Symbol	str		3478109						
ANR	3479827	Symbol	backward_search_range		3478109						
ANR	3479828	Symbol	MIN		3478109						
ANR	3479829	Symbol	reg -> dmax		3478109						
ANR	3479830	Symbol	region		3478109						
ANR	3479831	Symbol	sch_range		3478109						
ANR	3479832	Symbol	option		3478109						
ANR	3479833	Symbol	ONIG_STATE_NORMAL		3478109						
ANR	3479834	Symbol	& low_prev		3478109						
ANR	3479835	Symbol	pre_end		3478109						
ANR	3479836	Symbol	IS_NOT_NULL		3478109						
ANR	3479837	Symbol	ANCHOR_SEMI_END_BUF		3478109						
ANR	3479838	Symbol	reg -> anchor		3478109						
ANR	3479839	Symbol	ANCHOR_BEGIN_BUF		3478109						
ANR	3479840	Symbol	onigenc_get_prev_char_head		3478109						
ANR	3479841	Symbol	range		3478109						
ANR	3479842	Symbol	IS_FIND_LONGEST		3478109						
ANR	3479843	Symbol	low		3478109						
ANR	3479844	Symbol	reg -> num_comb_exp_check		3478109						
ANR	3479845	Symbol	end		3478109						
ANR	3479846	Symbol	ONIGENC_IS_MBC_CRNL		3478109						
ANR	3479847	Symbol	address_for_empty_string		3478109						
ANR	3479848	Symbol	reg -> num_mem		3478109						
ANR	3479849	Symbol	match_at		3478109						
ANR	3479850	Symbol	orig_range		3478109						
ANR	3479851	Symbol	ANCHOR_ANYCHAR_STAR_ML		3478109						
ANR	3479852	Symbol	adjrange		3478109						
ANR	3479853	Symbol	ONIGENC_LEFT_ADJUST_CHAR_HEAD		3478109						
ANR	3479854	Symbol	ONIGENC_STEP_BACK		3478109						
ANR	3479855	Symbol	upper_range		3478109						
ANR	3479856	Symbol	start		3478109						
ANR	3479857	Symbol	onigenc_get_right_adjust_char_head		3478109						
ANR	3479858	Symbol	low_prev		3478109						
ANR	3479859	Symbol	enclen		3478109						
ANR	3479860	Symbol	n		3478109						
ANR	3479861	Symbol	msa . best_s		3478109						
ANR	3479862	Symbol	r		3478109						
ANR	3479863	Symbol	s		3478109						
ANR	3479864	Symbol	THREAD_PASS_LIMIT_COUNT		3478109						
ANR	3479865	Symbol	msa . best_len		3478109						
ANR	3479866	Symbol	ONIG_MISMATCH		3478109						
ANR	3479867	Symbol	msa		3478109						
ANR	3479868	Symbol	sch_start		3478109						
ANR	3479869	Symbol	& low		3478109						
ANR	3479870	Symbol	ANCHOR_ANYCHAR_STAR		3478109						
ANR	3479871	Symbol	* reg		3478109						
ANR	3479872	Function	onig_get_encoding	3751:0:91932:92005							
ANR	3479873	FunctionDef	onig_get_encoding (regex_t * reg)		3479872	0					
ANR	3479874	CompoundStatement		3753:0:91984:92005	3479872	0					
ANR	3479875	ReturnStatement	return reg -> enc ;	3754:2:91988:92003	3479872	0	True				
ANR	3479876	PtrMemberAccess	reg -> enc		3479872	0					
ANR	3479877	Identifier	reg		3479872	0					
ANR	3479878	Identifier	enc		3479872	1					
ANR	3479879	ReturnType	extern OnigEncoding		3479872	1					
ANR	3479880	Identifier	onig_get_encoding		3479872	2					
ANR	3479881	ParameterList	regex_t * reg		3479872	3					
ANR	3479882	Parameter	regex_t * reg	3752:18:91970:91981	3479872	0	True				
ANR	3479883	ParameterType	regex_t *		3479872	0					
ANR	3479884	Identifier	reg		3479872	1					
ANR	3479885	CFGEntryNode	ENTRY		3479872		True				
ANR	3479886	CFGExitNode	EXIT		3479872		True				
ANR	3479887	Symbol	reg		3479872						
ANR	3479888	Symbol	* reg		3479872						
ANR	3479889	Symbol	reg -> enc		3479872						
ANR	3479890	Function	onig_get_options	3757:0:92008:92086							
ANR	3479891	FunctionDef	onig_get_options (regex_t * reg)		3479890	0					
ANR	3479892	CompoundStatement		3759:0:92061:92086	3479890	0					
ANR	3479893	ReturnStatement	return reg -> options ;	3760:2:92065:92084	3479890	0	True				
ANR	3479894	PtrMemberAccess	reg -> options		3479890	0					
ANR	3479895	Identifier	reg		3479890	0					
ANR	3479896	Identifier	options		3479890	1					
ANR	3479897	ReturnType	extern OnigOptionType		3479890	1					
ANR	3479898	Identifier	onig_get_options		3479890	2					
ANR	3479899	ParameterList	regex_t * reg		3479890	3					
ANR	3479900	Parameter	regex_t * reg	3758:17:92047:92058	3479890	0	True				
ANR	3479901	ParameterType	regex_t *		3479890	0					
ANR	3479902	Identifier	reg		3479890	1					
ANR	3479903	CFGEntryNode	ENTRY		3479890		True				
ANR	3479904	CFGExitNode	EXIT		3479890		True				
ANR	3479905	Symbol	reg		3479890						
ANR	3479906	Symbol	reg -> options		3479890						
ANR	3479907	Symbol	* reg		3479890						
ANR	3479908	Function	onig_get_case_fold_flag	3763:0:92089:92184							
ANR	3479909	FunctionDef	onig_get_case_fold_flag (regex_t * reg)		3479908	0					
ANR	3479910	CompoundStatement		3765:0:92152:92184	3479908	0					
ANR	3479911	ReturnStatement	return reg -> case_fold_flag ;	3766:2:92156:92182	3479908	0	True				
ANR	3479912	PtrMemberAccess	reg -> case_fold_flag		3479908	0					
ANR	3479913	Identifier	reg		3479908	0					
ANR	3479914	Identifier	case_fold_flag		3479908	1					
ANR	3479915	ReturnType	extern OnigCaseFoldType		3479908	1					
ANR	3479916	Identifier	onig_get_case_fold_flag		3479908	2					
ANR	3479917	ParameterList	regex_t * reg		3479908	3					
ANR	3479918	Parameter	regex_t * reg	3764:24:92138:92149	3479908	0	True				
ANR	3479919	ParameterType	regex_t *		3479908	0					
ANR	3479920	Identifier	reg		3479908	1					
ANR	3479921	CFGEntryNode	ENTRY		3479908		True				
ANR	3479922	CFGExitNode	EXIT		3479908		True				
ANR	3479923	Symbol	reg		3479908						
ANR	3479924	Symbol	reg -> case_fold_flag		3479908						
ANR	3479925	Symbol	* reg		3479908						
ANR	3479926	Function	onig_get_syntax	3769:0:92187:92264							
ANR	3479927	FunctionDef	onig_get_syntax (regex_t * reg)		3479926	0					
ANR	3479928	CompoundStatement		3771:0:92240:92264	3479926	0					
ANR	3479929	ReturnStatement	return reg -> syntax ;	3772:2:92244:92262	3479926	0	True				
ANR	3479930	PtrMemberAccess	reg -> syntax		3479926	0					
ANR	3479931	Identifier	reg		3479926	0					
ANR	3479932	Identifier	syntax		3479926	1					
ANR	3479933	ReturnType	extern OnigSyntaxType *		3479926	1					
ANR	3479934	Identifier	onig_get_syntax		3479926	2					
ANR	3479935	ParameterList	regex_t * reg		3479926	3					
ANR	3479936	Parameter	regex_t * reg	3770:16:92226:92237	3479926	0	True				
ANR	3479937	ParameterType	regex_t *		3479926	0					
ANR	3479938	Identifier	reg		3479926	1					
ANR	3479939	CFGEntryNode	ENTRY		3479926		True				
ANR	3479940	CFGExitNode	EXIT		3479926		True				
ANR	3479941	Symbol	reg		3479926						
ANR	3479942	Symbol	reg -> syntax		3479926						
ANR	3479943	Symbol	* reg		3479926						
ANR	3479944	Function	onig_number_of_captures	3775:0:92267:92341							
ANR	3479945	FunctionDef	onig_number_of_captures (regex_t * reg)		3479944	0					
ANR	3479946	CompoundStatement		3777:0:92316:92341	3479944	0					
ANR	3479947	ReturnStatement	return reg -> num_mem ;	3778:2:92320:92339	3479944	0	True				
ANR	3479948	PtrMemberAccess	reg -> num_mem		3479944	0					
ANR	3479949	Identifier	reg		3479944	0					
ANR	3479950	Identifier	num_mem		3479944	1					
ANR	3479951	ReturnType	extern int		3479944	1					
ANR	3479952	Identifier	onig_number_of_captures		3479944	2					
ANR	3479953	ParameterList	regex_t * reg		3479944	3					
ANR	3479954	Parameter	regex_t * reg	3776:24:92302:92313	3479944	0	True				
ANR	3479955	ParameterType	regex_t *		3479944	0					
ANR	3479956	Identifier	reg		3479944	1					
ANR	3479957	CFGEntryNode	ENTRY		3479944		True				
ANR	3479958	CFGExitNode	EXIT		3479944		True				
ANR	3479959	Symbol	reg		3479944						
ANR	3479960	Symbol	reg -> num_mem		3479944						
ANR	3479961	Symbol	* reg		3479944						
ANR	3479962	Function	onig_number_of_capture_histories	3781:0:92344:92616							
ANR	3479963	FunctionDef	onig_number_of_capture_histories (regex_t * reg)		3479962	0					
ANR	3479964	CompoundStatement		3783:0:92402:92616	3479962	0					
ANR	3479965	IdentifierDeclStatement	"int i , n ;"	3785:2:92433:92441	3479962	0	True				
ANR	3479966	IdentifierDecl	i		3479962	0					
ANR	3479967	IdentifierDeclType	int		3479962	0					
ANR	3479968	Identifier	i		3479962	1					
ANR	3479969	IdentifierDecl	n		3479962	1					
ANR	3479970	IdentifierDeclType	int		3479962	0					
ANR	3479971	Identifier	n		3479962	1					
ANR	3479972	ExpressionStatement	n = 0	3787:2:92446:92451	3479962	1	True				
ANR	3479973	AssignmentExpression	n = 0		3479962	0		=			
ANR	3479974	Identifier	n		3479962	0					
ANR	3479975	PrimaryExpression	0		3479962	1					
ANR	3479976	ForStatement	for ( i = 0 ; i <= ONIG_MAX_CAPTURE_HISTORY_GROUP ; i ++ )		3479962	2					
ANR	3479977	ForInit	i = 0 ;	3788:7:92460:92465	3479962	0	True				
ANR	3479978	AssignmentExpression	i = 0		3479962	0		=			
ANR	3479979	Identifier	i		3479962	0					
ANR	3479980	PrimaryExpression	0		3479962	1					
ANR	3479981	Condition	i <= ONIG_MAX_CAPTURE_HISTORY_GROUP	3788:14:92467:92501	3479962	1	True				
ANR	3479982	RelationalExpression	i <= ONIG_MAX_CAPTURE_HISTORY_GROUP		3479962	0		<=			
ANR	3479983	Identifier	i		3479962	0					
ANR	3479984	Identifier	ONIG_MAX_CAPTURE_HISTORY_GROUP		3479962	1					
ANR	3479985	PostIncDecOperationExpression	i ++	3788:51:92504:92506	3479962	2	True				
ANR	3479986	Identifier	i		3479962	0					
ANR	3479987	IncDec	++		3479962	1					
ANR	3479988	CompoundStatement		6:56:106:106	3479962	3					
ANR	3479989	IfStatement	"if ( BIT_STATUS_AT ( reg -> capture_history , i ) != 0 )"		3479962	0					
ANR	3479990	Condition	"BIT_STATUS_AT ( reg -> capture_history , i ) != 0"	3789:8:92519:92561	3479962	0	True				
ANR	3479991	EqualityExpression	"BIT_STATUS_AT ( reg -> capture_history , i ) != 0"		3479962	0		!=			
ANR	3479992	CallExpression	"BIT_STATUS_AT ( reg -> capture_history , i )"		3479962	0					
ANR	3479993	Callee	BIT_STATUS_AT		3479962	0					
ANR	3479994	Identifier	BIT_STATUS_AT		3479962	0					
ANR	3479995	ArgumentList	reg -> capture_history		3479962	1					
ANR	3479996	Argument	reg -> capture_history		3479962	0					
ANR	3479997	PtrMemberAccess	reg -> capture_history		3479962	0					
ANR	3479998	Identifier	reg		3479962	0					
ANR	3479999	Identifier	capture_history		3479962	1					
ANR	3480000	Argument	i		3479962	1					
ANR	3480001	Identifier	i		3479962	0					
ANR	3480002	PrimaryExpression	0		3479962	1					
ANR	3480003	ExpressionStatement	n ++	3790:6:92570:92573	3479962	1	True				
ANR	3480004	PostIncDecOperationExpression	n ++		3479962	0					
ANR	3480005	Identifier	n		3479962	0					
ANR	3480006	IncDec	++		3479962	1					
ANR	3480007	ReturnStatement	return n ;	3792:2:92581:92589	3479962	3	True				
ANR	3480008	Identifier	n		3479962	0					
ANR	3480009	ReturnType	extern int		3479962	1					
ANR	3480010	Identifier	onig_number_of_capture_histories		3479962	2					
ANR	3480011	ParameterList	regex_t * reg		3479962	3					
ANR	3480012	Parameter	regex_t * reg	3782:33:92388:92399	3479962	0	True				
ANR	3480013	ParameterType	regex_t *		3479962	0					
ANR	3480014	Identifier	reg		3479962	1					
ANR	3480015	CFGEntryNode	ENTRY		3479962		True				
ANR	3480016	CFGExitNode	EXIT		3479962		True				
ANR	3480017	Symbol	BIT_STATUS_AT		3479962						
ANR	3480018	Symbol	reg		3479962						
ANR	3480019	Symbol	ONIG_MAX_CAPTURE_HISTORY_GROUP		3479962						
ANR	3480020	Symbol	i		3479962						
ANR	3480021	Symbol	reg -> capture_history		3479962						
ANR	3480022	Symbol	n		3479962						
ANR	3480023	Symbol	* reg		3479962						
ANR	3480024	Function	onig_copy_encoding	3798:0:92619:92703							
ANR	3480025	FunctionDef	"onig_copy_encoding (OnigEncoding to , OnigEncoding from)"		3480024	0					
ANR	3480026	CompoundStatement		3800:0:92686:92703	3480024	0					
ANR	3480027	ExpressionStatement	* to = * from	3801:2:92690:92701	3480024	0	True				
ANR	3480028	AssignmentExpression	* to = * from		3480024	0		=			
ANR	3480029	UnaryOperationExpression	* to		3480024	0					
ANR	3480030	UnaryOperator	*		3480024	0					
ANR	3480031	Identifier	to		3480024	1					
ANR	3480032	UnaryOperationExpression	* from		3480024	1					
ANR	3480033	UnaryOperator	*		3480024	0					
ANR	3480034	Identifier	from		3480024	1					
ANR	3480035	ReturnType	extern void		3480024	1					
ANR	3480036	Identifier	onig_copy_encoding		3480024	2					
ANR	3480037	ParameterList	"OnigEncoding to , OnigEncoding from"		3480024	3					
ANR	3480038	Parameter	OnigEncoding to	3799:19:92650:92664	3480024	0	True				
ANR	3480039	ParameterType	OnigEncoding		3480024	0					
ANR	3480040	Identifier	to		3480024	1					
ANR	3480041	Parameter	OnigEncoding from	3799:36:92667:92683	3480024	1	True				
ANR	3480042	ParameterType	OnigEncoding		3480024	0					
ANR	3480043	Identifier	from		3480024	1					
ANR	3480044	CFGEntryNode	ENTRY		3480024		True				
ANR	3480045	CFGExitNode	EXIT		3480024		True				
ANR	3480046	Symbol	* to		3480024						
ANR	3480047	Symbol	from		3480024						
ANR	3480048	Symbol	to		3480024						
ANR	3480049	Symbol	* from		3480024						
