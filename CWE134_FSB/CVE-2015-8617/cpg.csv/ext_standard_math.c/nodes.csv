command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2770259	File	data/converged/CVE-2015-8617_php-src/ext_standard_math.c								
ANR	2770260	Function	php_intlog10abs	37:0:1658:2518							
ANR	2770261	FunctionDef	php_intlog10abs (double value)		2770260	0					
ANR	2770262	CompoundStatement		37:48:1706:2518	2770260	0					
ANR	2770263	IdentifierDeclStatement	int result ;	38:1:1709:1719	2770260	0	True				
ANR	2770264	IdentifierDecl	result		2770260	0					
ANR	2770265	IdentifierDeclType	int		2770260	0					
ANR	2770266	Identifier	result		2770260	1					
ANR	2770267	ExpressionStatement	value = fabs ( value )	39:1:1722:1741	2770260	1	True				
ANR	2770268	AssignmentExpression	value = fabs ( value )		2770260	0		=			
ANR	2770269	Identifier	value		2770260	0					
ANR	2770270	CallExpression	fabs ( value )		2770260	1					
ANR	2770271	Callee	fabs		2770260	0					
ANR	2770272	Identifier	fabs		2770260	0					
ANR	2770273	ArgumentList	value		2770260	1					
ANR	2770274	Argument	value		2770260	0					
ANR	2770275	Identifier	value		2770260	0					
ANR	2770276	IfStatement	if ( value < 1e-8 || value > 1e22 )		2770260	2					
ANR	2770277	Condition	value < 1e-8 || value > 1e22	41:5:1749:1776	2770260	0	True				
ANR	2770278	OrExpression	value < 1e-8 || value > 1e22		2770260	0		||			
ANR	2770279	RelationalExpression	value < 1e-8		2770260	0		<			
ANR	2770280	Identifier	value		2770260	0					
ANR	2770281	PrimaryExpression	1e-8		2770260	1					
ANR	2770282	RelationalExpression	value > 1e22		2770260	1		>			
ANR	2770283	Identifier	value		2770260	0					
ANR	2770284	PrimaryExpression	1e22		2770260	1					
ANR	2770285	CompoundStatement		5:35:72:72	2770260	1					
ANR	2770286	ExpressionStatement	result = ( int ) floor ( log10 ( value ) )	42:2:1783:1816	2770260	0	True				
ANR	2770287	AssignmentExpression	result = ( int ) floor ( log10 ( value ) )		2770260	0		=			
ANR	2770288	Identifier	result		2770260	0					
ANR	2770289	CastExpression	( int ) floor ( log10 ( value ) )		2770260	1					
ANR	2770290	CastTarget	int		2770260	0					
ANR	2770291	CallExpression	floor ( log10 ( value ) )		2770260	1					
ANR	2770292	Callee	floor		2770260	0					
ANR	2770293	Identifier	floor		2770260	0					
ANR	2770294	ArgumentList	log10 ( value )		2770260	1					
ANR	2770295	Argument	log10 ( value )		2770260	0					
ANR	2770296	CallExpression	log10 ( value )		2770260	0					
ANR	2770297	Callee	log10		2770260	0					
ANR	2770298	Identifier	log10		2770260	0					
ANR	2770299	ArgumentList	value		2770260	1					
ANR	2770300	Argument	value		2770260	0					
ANR	2770301	Identifier	value		2770260	0					
ANR	2770302	ElseStatement	else		2770260	0					
ANR	2770303	CompoundStatement		8:9:130:352	2770260	0					
ANR	2770304	Statement	static	44:2:1830:1835	2770260	0	True				
ANR	2770305	IdentifierDeclStatement	"const double values [ ] = { 1e-8 , 1e-7 , 1e-6 , 1e-5 , 1e-4 , 1e-3 , 1e-2 , 1e-1 , 1e0 , 1e1 , 1e2 , 1e3 , 1e4 , 1e5 , 1e6 , 1e7 , 1e8 , 1e9 , 1e10 , 1e11 , 1e12 , 1e13 , 1e14 , 1e15 , 1e16 , 1e17 , 1e18 , 1e19 , 1e20 , 1e21 , 1e22 } ;"	44:9:1837:2059	2770260	1	True				
ANR	2770306	IdentifierDecl	"values [ ] = { 1e-8 , 1e-7 , 1e-6 , 1e-5 , 1e-4 , 1e-3 , 1e-2 , 1e-1 , 1e0 , 1e1 , 1e2 , 1e3 , 1e4 , 1e5 , 1e6 , 1e7 , 1e8 , 1e9 , 1e10 , 1e11 , 1e12 , 1e13 , 1e14 , 1e15 , 1e16 , 1e17 , 1e18 , 1e19 , 1e20 , 1e21 , 1e22 }"		2770260	0					
ANR	2770307	IdentifierDeclType	const double [ ]		2770260	0					
ANR	2770308	Identifier	values		2770260	1					
ANR	2770309	AssignmentExpression	"values [ ] = { 1e-8 , 1e-7 , 1e-6 , 1e-5 , 1e-4 , 1e-3 , 1e-2 , 1e-1 , 1e0 , 1e1 , 1e2 , 1e3 , 1e4 , 1e5 , 1e6 , 1e7 , 1e8 , 1e9 , 1e10 , 1e11 , 1e12 , 1e13 , 1e14 , 1e15 , 1e16 , 1e17 , 1e18 , 1e19 , 1e20 , 1e21 , 1e22 }"		2770260	2		=			
ANR	2770310	Identifier	values		2770260	0					
ANR	2770311	InitializerList	1e-8		2770260	1					
ANR	2770312	PrimaryExpression	1e-8		2770260	0					
ANR	2770313	PrimaryExpression	1e-7		2770260	1					
ANR	2770314	PrimaryExpression	1e-6		2770260	2					
ANR	2770315	PrimaryExpression	1e-5		2770260	3					
ANR	2770316	PrimaryExpression	1e-4		2770260	4					
ANR	2770317	PrimaryExpression	1e-3		2770260	5					
ANR	2770318	PrimaryExpression	1e-2		2770260	6					
ANR	2770319	PrimaryExpression	1e-1		2770260	7					
ANR	2770320	PrimaryExpression	1e0		2770260	8					
ANR	2770321	PrimaryExpression	1e1		2770260	9					
ANR	2770322	PrimaryExpression	1e2		2770260	10					
ANR	2770323	PrimaryExpression	1e3		2770260	11					
ANR	2770324	PrimaryExpression	1e4		2770260	12					
ANR	2770325	PrimaryExpression	1e5		2770260	13					
ANR	2770326	PrimaryExpression	1e6		2770260	14					
ANR	2770327	PrimaryExpression	1e7		2770260	15					
ANR	2770328	PrimaryExpression	1e8		2770260	16					
ANR	2770329	PrimaryExpression	1e9		2770260	17					
ANR	2770330	PrimaryExpression	1e10		2770260	18					
ANR	2770331	PrimaryExpression	1e11		2770260	19					
ANR	2770332	PrimaryExpression	1e12		2770260	20					
ANR	2770333	PrimaryExpression	1e13		2770260	21					
ANR	2770334	PrimaryExpression	1e14		2770260	22					
ANR	2770335	PrimaryExpression	1e15		2770260	23					
ANR	2770336	PrimaryExpression	1e16		2770260	24					
ANR	2770337	PrimaryExpression	1e17		2770260	25					
ANR	2770338	PrimaryExpression	1e18		2770260	26					
ANR	2770339	PrimaryExpression	1e19		2770260	27					
ANR	2770340	PrimaryExpression	1e20		2770260	28					
ANR	2770341	PrimaryExpression	1e21		2770260	29					
ANR	2770342	PrimaryExpression	1e22		2770260	30					
ANR	2770343	ExpressionStatement	result = 15	50:2:2103:2114	2770260	2	True				
ANR	2770344	AssignmentExpression	result = 15		2770260	0		=			
ANR	2770345	Identifier	result		2770260	0					
ANR	2770346	PrimaryExpression	15		2770260	1					
ANR	2770347	IfStatement	if ( value < values [ result ] )		2770260	3					
ANR	2770348	Condition	value < values [ result ]	51:6:2122:2143	2770260	0	True				
ANR	2770349	RelationalExpression	value < values [ result ]		2770260	0		<			
ANR	2770350	Identifier	value		2770260	0					
ANR	2770351	ArrayIndexing	values [ result ]		2770260	1					
ANR	2770352	Identifier	values		2770260	0					
ANR	2770353	Identifier	result		2770260	1					
ANR	2770354	CompoundStatement		15:30:439:439	2770260	1					
ANR	2770355	ExpressionStatement	result -= 8	52:3:2151:2162	2770260	0	True				
ANR	2770356	AssignmentExpression	result -= 8		2770260	0		-=			
ANR	2770357	Identifier	result		2770260	0					
ANR	2770358	PrimaryExpression	8		2770260	1					
ANR	2770359	ElseStatement	else		2770260	0					
ANR	2770360	CompoundStatement		17:9:466:466	2770260	0					
ANR	2770361	ExpressionStatement	result += 8	54:3:2178:2189	2770260	0	True				
ANR	2770362	AssignmentExpression	result += 8		2770260	0		+=			
ANR	2770363	Identifier	result		2770260	0					
ANR	2770364	PrimaryExpression	8		2770260	1					
ANR	2770365	IfStatement	if ( value < values [ result ] )		2770260	4					
ANR	2770366	Condition	value < values [ result ]	56:6:2201:2222	2770260	0	True				
ANR	2770367	RelationalExpression	value < values [ result ]		2770260	0		<			
ANR	2770368	Identifier	value		2770260	0					
ANR	2770369	ArrayIndexing	values [ result ]		2770260	1					
ANR	2770370	Identifier	values		2770260	0					
ANR	2770371	Identifier	result		2770260	1					
ANR	2770372	CompoundStatement		20:30:518:518	2770260	1					
ANR	2770373	ExpressionStatement	result -= 4	57:3:2230:2241	2770260	0	True				
ANR	2770374	AssignmentExpression	result -= 4		2770260	0		-=			
ANR	2770375	Identifier	result		2770260	0					
ANR	2770376	PrimaryExpression	4		2770260	1					
ANR	2770377	ElseStatement	else		2770260	0					
ANR	2770378	CompoundStatement		22:9:545:545	2770260	0					
ANR	2770379	ExpressionStatement	result += 4	59:3:2257:2268	2770260	0	True				
ANR	2770380	AssignmentExpression	result += 4		2770260	0		+=			
ANR	2770381	Identifier	result		2770260	0					
ANR	2770382	PrimaryExpression	4		2770260	1					
ANR	2770383	IfStatement	if ( value < values [ result ] )		2770260	5					
ANR	2770384	Condition	value < values [ result ]	61:6:2280:2301	2770260	0	True				
ANR	2770385	RelationalExpression	value < values [ result ]		2770260	0		<			
ANR	2770386	Identifier	value		2770260	0					
ANR	2770387	ArrayIndexing	values [ result ]		2770260	1					
ANR	2770388	Identifier	values		2770260	0					
ANR	2770389	Identifier	result		2770260	1					
ANR	2770390	CompoundStatement		25:30:597:597	2770260	1					
ANR	2770391	ExpressionStatement	result -= 2	62:3:2309:2320	2770260	0	True				
ANR	2770392	AssignmentExpression	result -= 2		2770260	0		-=			
ANR	2770393	Identifier	result		2770260	0					
ANR	2770394	PrimaryExpression	2		2770260	1					
ANR	2770395	ElseStatement	else		2770260	0					
ANR	2770396	CompoundStatement		27:9:624:624	2770260	0					
ANR	2770397	ExpressionStatement	result += 2	64:3:2336:2347	2770260	0	True				
ANR	2770398	AssignmentExpression	result += 2		2770260	0		+=			
ANR	2770399	Identifier	result		2770260	0					
ANR	2770400	PrimaryExpression	2		2770260	1					
ANR	2770401	IfStatement	if ( value < values [ result ] )		2770260	6					
ANR	2770402	Condition	value < values [ result ]	66:6:2359:2380	2770260	0	True				
ANR	2770403	RelationalExpression	value < values [ result ]		2770260	0		<			
ANR	2770404	Identifier	value		2770260	0					
ANR	2770405	ArrayIndexing	values [ result ]		2770260	1					
ANR	2770406	Identifier	values		2770260	0					
ANR	2770407	Identifier	result		2770260	1					
ANR	2770408	CompoundStatement		30:30:676:676	2770260	1					
ANR	2770409	ExpressionStatement	result -= 1	67:3:2388:2399	2770260	0	True				
ANR	2770410	AssignmentExpression	result -= 1		2770260	0		-=			
ANR	2770411	Identifier	result		2770260	0					
ANR	2770412	PrimaryExpression	1		2770260	1					
ANR	2770413	ElseStatement	else		2770260	0					
ANR	2770414	CompoundStatement		32:9:703:703	2770260	0					
ANR	2770415	ExpressionStatement	result += 1	69:3:2415:2426	2770260	0	True				
ANR	2770416	AssignmentExpression	result += 1		2770260	0		+=			
ANR	2770417	Identifier	result		2770260	0					
ANR	2770418	PrimaryExpression	1		2770260	1					
ANR	2770419	IfStatement	if ( value < values [ result ] )		2770260	7					
ANR	2770420	Condition	value < values [ result ]	71:6:2438:2459	2770260	0	True				
ANR	2770421	RelationalExpression	value < values [ result ]		2770260	0		<			
ANR	2770422	Identifier	value		2770260	0					
ANR	2770423	ArrayIndexing	values [ result ]		2770260	1					
ANR	2770424	Identifier	values		2770260	0					
ANR	2770425	Identifier	result		2770260	1					
ANR	2770426	CompoundStatement		35:30:755:755	2770260	1					
ANR	2770427	ExpressionStatement	result -= 1	72:3:2467:2478	2770260	0	True				
ANR	2770428	AssignmentExpression	result -= 1		2770260	0		-=			
ANR	2770429	Identifier	result		2770260	0					
ANR	2770430	PrimaryExpression	1		2770260	1					
ANR	2770431	ExpressionStatement	result -= 8	74:2:2486:2497	2770260	8	True				
ANR	2770432	AssignmentExpression	result -= 8		2770260	0		-=			
ANR	2770433	Identifier	result		2770260	0					
ANR	2770434	PrimaryExpression	8		2770260	1					
ANR	2770435	ReturnStatement	return result ;	76:1:2503:2516	2770260	3	True				
ANR	2770436	Identifier	result		2770260	0					
ANR	2770437	ReturnType	static inline int		2770260	1					
ANR	2770438	Identifier	php_intlog10abs		2770260	2					
ANR	2770439	ParameterList	double value		2770260	3					
ANR	2770440	Parameter	double value	37:34:1692:1703	2770260	0	True				
ANR	2770441	ParameterType	double		2770260	0					
ANR	2770442	Identifier	value		2770260	1					
ANR	2770443	CFGEntryNode	ENTRY		2770260		True				
ANR	2770444	CFGExitNode	EXIT		2770260		True				
ANR	2770445	Symbol	result		2770260						
ANR	2770446	Symbol	fabs		2770260						
ANR	2770447	Symbol	* result		2770260						
ANR	2770448	Symbol	log10		2770260						
ANR	2770449	Symbol	* values		2770260						
ANR	2770450	Symbol	values		2770260						
ANR	2770451	Symbol	floor		2770260						
ANR	2770452	Symbol	value		2770260						
ANR	2770453	Function	php_intpow10	82:0:2635:2981							
ANR	2770454	FunctionDef	php_intpow10 (int power)		2770453	0					
ANR	2770455	CompoundStatement		82:45:2680:2981	2770453	0					
ANR	2770456	Statement	static	83:1:2683:2688	2770453	0	True				
ANR	2770457	IdentifierDeclStatement	"const double powers [ ] = { 1e0 , 1e1 , 1e2 , 1e3 , 1e4 , 1e5 , 1e6 , 1e7 , 1e8 , 1e9 , 1e10 , 1e11 , 1e12 , 1e13 , 1e14 , 1e15 , 1e16 , 1e17 , 1e18 , 1e19 , 1e20 , 1e21 , 1e22 } ;"	83:8:2690:2858	2770453	1	True				
ANR	2770458	IdentifierDecl	"powers [ ] = { 1e0 , 1e1 , 1e2 , 1e3 , 1e4 , 1e5 , 1e6 , 1e7 , 1e8 , 1e9 , 1e10 , 1e11 , 1e12 , 1e13 , 1e14 , 1e15 , 1e16 , 1e17 , 1e18 , 1e19 , 1e20 , 1e21 , 1e22 }"		2770453	0					
ANR	2770459	IdentifierDeclType	const double [ ]		2770453	0					
ANR	2770460	Identifier	powers		2770453	1					
ANR	2770461	AssignmentExpression	"powers [ ] = { 1e0 , 1e1 , 1e2 , 1e3 , 1e4 , 1e5 , 1e6 , 1e7 , 1e8 , 1e9 , 1e10 , 1e11 , 1e12 , 1e13 , 1e14 , 1e15 , 1e16 , 1e17 , 1e18 , 1e19 , 1e20 , 1e21 , 1e22 }"		2770453	2		=			
ANR	2770462	Identifier	powers		2770453	0					
ANR	2770463	InitializerList	1e0		2770453	1					
ANR	2770464	PrimaryExpression	1e0		2770453	0					
ANR	2770465	PrimaryExpression	1e1		2770453	1					
ANR	2770466	PrimaryExpression	1e2		2770453	2					
ANR	2770467	PrimaryExpression	1e3		2770453	3					
ANR	2770468	PrimaryExpression	1e4		2770453	4					
ANR	2770469	PrimaryExpression	1e5		2770453	5					
ANR	2770470	PrimaryExpression	1e6		2770453	6					
ANR	2770471	PrimaryExpression	1e7		2770453	7					
ANR	2770472	PrimaryExpression	1e8		2770453	8					
ANR	2770473	PrimaryExpression	1e9		2770453	9					
ANR	2770474	PrimaryExpression	1e10		2770453	10					
ANR	2770475	PrimaryExpression	1e11		2770453	11					
ANR	2770476	PrimaryExpression	1e12		2770453	12					
ANR	2770477	PrimaryExpression	1e13		2770453	13					
ANR	2770478	PrimaryExpression	1e14		2770453	14					
ANR	2770479	PrimaryExpression	1e15		2770453	15					
ANR	2770480	PrimaryExpression	1e16		2770453	16					
ANR	2770481	PrimaryExpression	1e17		2770453	17					
ANR	2770482	PrimaryExpression	1e18		2770453	18					
ANR	2770483	PrimaryExpression	1e19		2770453	19					
ANR	2770484	PrimaryExpression	1e20		2770453	20					
ANR	2770485	PrimaryExpression	1e21		2770453	21					
ANR	2770486	PrimaryExpression	1e22		2770453	22					
ANR	2770487	IfStatement	if ( power < 0 || power > 22 )		2770453	2					
ANR	2770488	Condition	power < 0 || power > 22	89:5:2893:2915	2770453	0	True				
ANR	2770489	OrExpression	power < 0 || power > 22		2770453	0		||			
ANR	2770490	RelationalExpression	power < 0		2770453	0		<			
ANR	2770491	Identifier	power		2770453	0					
ANR	2770492	PrimaryExpression	0		2770453	1					
ANR	2770493	RelationalExpression	power > 22		2770453	1		>			
ANR	2770494	Identifier	power		2770453	0					
ANR	2770495	PrimaryExpression	22		2770453	1					
ANR	2770496	CompoundStatement		8:30:237:237	2770453	1					
ANR	2770497	ReturnStatement	"return pow ( 10.0 , ( double ) power ) ;"	90:2:2922:2953	2770453	0	True				
ANR	2770498	CallExpression	"pow ( 10.0 , ( double ) power )"		2770453	0					
ANR	2770499	Callee	pow		2770453	0					
ANR	2770500	Identifier	pow		2770453	0					
ANR	2770501	ArgumentList	10.0		2770453	1					
ANR	2770502	Argument	10.0		2770453	0					
ANR	2770503	PrimaryExpression	10.0		2770453	0					
ANR	2770504	Argument	( double ) power		2770453	1					
ANR	2770505	CastExpression	( double ) power		2770453	0					
ANR	2770506	CastTarget	double		2770453	0					
ANR	2770507	Identifier	power		2770453	1					
ANR	2770508	ReturnStatement	return powers [ power ] ;	92:1:2959:2979	2770453	3	True				
ANR	2770509	ArrayIndexing	powers [ power ]		2770453	0					
ANR	2770510	Identifier	powers		2770453	0					
ANR	2770511	Identifier	power		2770453	1					
ANR	2770512	ReturnType	static inline double		2770453	1					
ANR	2770513	Identifier	php_intpow10		2770453	2					
ANR	2770514	ParameterList	int power		2770453	3					
ANR	2770515	Parameter	int power	82:34:2669:2677	2770453	0	True				
ANR	2770516	ParameterType	int		2770453	0					
ANR	2770517	Identifier	power		2770453	1					
ANR	2770518	CFGEntryNode	ENTRY		2770453		True				
ANR	2770519	CFGExitNode	EXIT		2770453		True				
ANR	2770520	Symbol	* power		2770453						
ANR	2770521	Symbol	pow		2770453						
ANR	2770522	Symbol	power		2770453						
ANR	2770523	Symbol	powers		2770453						
ANR	2770524	Symbol	* powers		2770453						
ANR	2770525	Function	php_math_is_finite	97:0:3023:3249							
ANR	2770526	FunctionDef	php_math_is_finite (double value)		2770525	0					
ANR	2770527	CompoundStatement		97:51:3074:3249	2770525	0					
ANR	2770528	ReturnStatement	return _finite ( value ) ;	99:1:3100:3121	2770525	0	True				
ANR	2770529	CallExpression	_finite ( value )		2770525	0					
ANR	2770530	Callee	_finite		2770525	0					
ANR	2770531	Identifier	_finite		2770525	0					
ANR	2770532	ArgumentList	value		2770525	1					
ANR	2770533	Argument	value		2770525	0					
ANR	2770534	Identifier	value		2770525	0					
ANR	2770535	ReturnType	static inline int		2770525	1					
ANR	2770536	Identifier	php_math_is_finite		2770525	2					
ANR	2770537	ParameterList	double value		2770525	3					
ANR	2770538	Parameter	double value	97:37:3060:3071	2770525	0	True				
ANR	2770539	ParameterType	double		2770525	0					
ANR	2770540	Identifier	value		2770525	1					
ANR	2770541	CFGEntryNode	ENTRY		2770525		True				
ANR	2770542	CFGExitNode	EXIT		2770525		True				
ANR	2770543	Symbol	_finite		2770525						
ANR	2770544	Symbol	value		2770525						
ANR	2770545	Function	php_round_helper	110:0:3367:4123							
ANR	2770546	FunctionDef	"php_round_helper (double value , int mode)"		2770545	0					
ANR	2770547	CompoundStatement		110:62:3429:4123	2770545	0					
ANR	2770548	IdentifierDeclStatement	double tmp_value ;	111:1:3432:3448	2770545	0	True				
ANR	2770549	IdentifierDecl	tmp_value		2770545	0					
ANR	2770550	IdentifierDeclType	double		2770545	0					
ANR	2770551	Identifier	tmp_value		2770545	1					
ANR	2770552	IfStatement	if ( value >= 0.0 )		2770545	1					
ANR	2770553	Condition	value >= 0.0	113:5:3456:3467	2770545	0	True				
ANR	2770554	RelationalExpression	value >= 0.0		2770545	0		>=			
ANR	2770555	Identifier	value		2770545	0					
ANR	2770556	PrimaryExpression	0.0		2770545	1					
ANR	2770557	CompoundStatement		4:19:40:40	2770545	1					
ANR	2770558	ExpressionStatement	tmp_value = floor ( value + 0.5 )	114:2:3474:3504	2770545	0	True				
ANR	2770559	AssignmentExpression	tmp_value = floor ( value + 0.5 )		2770545	0		=			
ANR	2770560	Identifier	tmp_value		2770545	0					
ANR	2770561	CallExpression	floor ( value + 0.5 )		2770545	1					
ANR	2770562	Callee	floor		2770545	0					
ANR	2770563	Identifier	floor		2770545	0					
ANR	2770564	ArgumentList	value + 0.5		2770545	1					
ANR	2770565	Argument	value + 0.5		2770545	0					
ANR	2770566	AdditiveExpression	value + 0.5		2770545	0		+			
ANR	2770567	Identifier	value		2770545	0					
ANR	2770568	PrimaryExpression	0.5		2770545	1					
ANR	2770569	IfStatement	if ( ( mode == PHP_ROUND_HALF_DOWN && value == ( - 0.5 + tmp_value ) ) || ( mode == PHP_ROUND_HALF_EVEN && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) ) ) || ( mode == PHP_ROUND_HALF_ODD && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) - 1.0 ) ) )		2770545	1					
ANR	2770570	Condition	( mode == PHP_ROUND_HALF_DOWN && value == ( - 0.5 + tmp_value ) ) || ( mode == PHP_ROUND_HALF_EVEN && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) ) ) || ( mode == PHP_ROUND_HALF_ODD && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) - 1.0 ) )	115:6:3512:3739	2770545	0	True				
ANR	2770571	OrExpression	( mode == PHP_ROUND_HALF_DOWN && value == ( - 0.5 + tmp_value ) ) || ( mode == PHP_ROUND_HALF_EVEN && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) ) ) || ( mode == PHP_ROUND_HALF_ODD && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) - 1.0 ) )		2770545	0		||			
ANR	2770572	AndExpression	mode == PHP_ROUND_HALF_DOWN && value == ( - 0.5 + tmp_value )		2770545	0		&&			
ANR	2770573	EqualityExpression	mode == PHP_ROUND_HALF_DOWN		2770545	0		==			
ANR	2770574	Identifier	mode		2770545	0					
ANR	2770575	Identifier	PHP_ROUND_HALF_DOWN		2770545	1					
ANR	2770576	EqualityExpression	value == ( - 0.5 + tmp_value )		2770545	1		==			
ANR	2770577	Identifier	value		2770545	0					
ANR	2770578	AdditiveExpression	- 0.5 + tmp_value		2770545	1		+			
ANR	2770579	UnaryOperationExpression	- 0.5		2770545	0					
ANR	2770580	UnaryOperator	-		2770545	0					
ANR	2770581	PrimaryExpression	0.5		2770545	1					
ANR	2770582	Identifier	tmp_value		2770545	1					
ANR	2770583	OrExpression	( mode == PHP_ROUND_HALF_EVEN && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) ) ) || ( mode == PHP_ROUND_HALF_ODD && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) - 1.0 ) )		2770545	1		||			
ANR	2770584	AndExpression	mode == PHP_ROUND_HALF_EVEN && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) )		2770545	0		&&			
ANR	2770585	EqualityExpression	mode == PHP_ROUND_HALF_EVEN		2770545	0		==			
ANR	2770586	Identifier	mode		2770545	0					
ANR	2770587	Identifier	PHP_ROUND_HALF_EVEN		2770545	1					
ANR	2770588	EqualityExpression	value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) )		2770545	1		==			
ANR	2770589	Identifier	value		2770545	0					
ANR	2770590	AdditiveExpression	0.5 + 2 * floor ( tmp_value / 2.0 )		2770545	1		+			
ANR	2770591	PrimaryExpression	0.5		2770545	0					
ANR	2770592	MultiplicativeExpression	2 * floor ( tmp_value / 2.0 )		2770545	1		*			
ANR	2770593	PrimaryExpression	2		2770545	0					
ANR	2770594	CallExpression	floor ( tmp_value / 2.0 )		2770545	1					
ANR	2770595	Callee	floor		2770545	0					
ANR	2770596	Identifier	floor		2770545	0					
ANR	2770597	ArgumentList	tmp_value / 2.0		2770545	1					
ANR	2770598	Argument	tmp_value / 2.0		2770545	0					
ANR	2770599	MultiplicativeExpression	tmp_value / 2.0		2770545	0		/			
ANR	2770600	Identifier	tmp_value		2770545	0					
ANR	2770601	PrimaryExpression	2.0		2770545	1					
ANR	2770602	AndExpression	mode == PHP_ROUND_HALF_ODD && value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) - 1.0 )		2770545	1		&&			
ANR	2770603	EqualityExpression	mode == PHP_ROUND_HALF_ODD		2770545	0		==			
ANR	2770604	Identifier	mode		2770545	0					
ANR	2770605	Identifier	PHP_ROUND_HALF_ODD		2770545	1					
ANR	2770606	EqualityExpression	value == ( 0.5 + 2 * floor ( tmp_value / 2.0 ) - 1.0 )		2770545	1		==			
ANR	2770607	Identifier	value		2770545	0					
ANR	2770608	AdditiveExpression	0.5 + 2 * floor ( tmp_value / 2.0 ) - 1.0		2770545	1		+			
ANR	2770609	PrimaryExpression	0.5		2770545	0					
ANR	2770610	AdditiveExpression	2 * floor ( tmp_value / 2.0 ) - 1.0		2770545	1		-			
ANR	2770611	MultiplicativeExpression	2 * floor ( tmp_value / 2.0 )		2770545	0		*			
ANR	2770612	PrimaryExpression	2		2770545	0					
ANR	2770613	CallExpression	floor ( tmp_value / 2.0 )		2770545	1					
ANR	2770614	Callee	floor		2770545	0					
ANR	2770615	Identifier	floor		2770545	0					
ANR	2770616	ArgumentList	tmp_value / 2.0		2770545	1					
ANR	2770617	Argument	tmp_value / 2.0		2770545	0					
ANR	2770618	MultiplicativeExpression	tmp_value / 2.0		2770545	0		/			
ANR	2770619	Identifier	tmp_value		2770545	0					
ANR	2770620	PrimaryExpression	2.0		2770545	1					
ANR	2770621	PrimaryExpression	1.0		2770545	1					
ANR	2770622	CompoundStatement		9:2:314:314	2770545	1					
ANR	2770623	ExpressionStatement	tmp_value = tmp_value - 1.0	119:3:3749:3776	2770545	0	True				
ANR	2770624	AssignmentExpression	tmp_value = tmp_value - 1.0		2770545	0		=			
ANR	2770625	Identifier	tmp_value		2770545	0					
ANR	2770626	AdditiveExpression	tmp_value - 1.0		2770545	1		-			
ANR	2770627	Identifier	tmp_value		2770545	0					
ANR	2770628	PrimaryExpression	1.0		2770545	1					
ANR	2770629	ElseStatement	else		2770545	0					
ANR	2770630	CompoundStatement		12:8:360:360	2770545	0					
ANR	2770631	ExpressionStatement	tmp_value = ceil ( value - 0.5 )	122:2:3794:3823	2770545	0	True				
ANR	2770632	AssignmentExpression	tmp_value = ceil ( value - 0.5 )		2770545	0		=			
ANR	2770633	Identifier	tmp_value		2770545	0					
ANR	2770634	CallExpression	ceil ( value - 0.5 )		2770545	1					
ANR	2770635	Callee	ceil		2770545	0					
ANR	2770636	Identifier	ceil		2770545	0					
ANR	2770637	ArgumentList	value - 0.5		2770545	1					
ANR	2770638	Argument	value - 0.5		2770545	0					
ANR	2770639	AdditiveExpression	value - 0.5		2770545	0		-			
ANR	2770640	Identifier	value		2770545	0					
ANR	2770641	PrimaryExpression	0.5		2770545	1					
ANR	2770642	IfStatement	if ( ( mode == PHP_ROUND_HALF_DOWN && value == ( 0.5 + tmp_value ) ) || ( mode == PHP_ROUND_HALF_EVEN && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) ) ) || ( mode == PHP_ROUND_HALF_ODD && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) + 1.0 ) ) )		2770545	1					
ANR	2770643	Condition	( mode == PHP_ROUND_HALF_DOWN && value == ( 0.5 + tmp_value ) ) || ( mode == PHP_ROUND_HALF_EVEN && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) ) ) || ( mode == PHP_ROUND_HALF_ODD && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) + 1.0 ) )	123:6:3831:4057	2770545	0	True				
ANR	2770644	OrExpression	( mode == PHP_ROUND_HALF_DOWN && value == ( 0.5 + tmp_value ) ) || ( mode == PHP_ROUND_HALF_EVEN && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) ) ) || ( mode == PHP_ROUND_HALF_ODD && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) + 1.0 ) )		2770545	0		||			
ANR	2770645	AndExpression	mode == PHP_ROUND_HALF_DOWN && value == ( 0.5 + tmp_value )		2770545	0		&&			
ANR	2770646	EqualityExpression	mode == PHP_ROUND_HALF_DOWN		2770545	0		==			
ANR	2770647	Identifier	mode		2770545	0					
ANR	2770648	Identifier	PHP_ROUND_HALF_DOWN		2770545	1					
ANR	2770649	EqualityExpression	value == ( 0.5 + tmp_value )		2770545	1		==			
ANR	2770650	Identifier	value		2770545	0					
ANR	2770651	AdditiveExpression	0.5 + tmp_value		2770545	1		+			
ANR	2770652	PrimaryExpression	0.5		2770545	0					
ANR	2770653	Identifier	tmp_value		2770545	1					
ANR	2770654	OrExpression	( mode == PHP_ROUND_HALF_EVEN && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) ) ) || ( mode == PHP_ROUND_HALF_ODD && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) + 1.0 ) )		2770545	1		||			
ANR	2770655	AndExpression	mode == PHP_ROUND_HALF_EVEN && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) )		2770545	0		&&			
ANR	2770656	EqualityExpression	mode == PHP_ROUND_HALF_EVEN		2770545	0		==			
ANR	2770657	Identifier	mode		2770545	0					
ANR	2770658	Identifier	PHP_ROUND_HALF_EVEN		2770545	1					
ANR	2770659	EqualityExpression	value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) )		2770545	1		==			
ANR	2770660	Identifier	value		2770545	0					
ANR	2770661	AdditiveExpression	- 0.5 + 2 * ceil ( tmp_value / 2.0 )		2770545	1		+			
ANR	2770662	UnaryOperationExpression	- 0.5		2770545	0					
ANR	2770663	UnaryOperator	-		2770545	0					
ANR	2770664	PrimaryExpression	0.5		2770545	1					
ANR	2770665	MultiplicativeExpression	2 * ceil ( tmp_value / 2.0 )		2770545	1		*			
ANR	2770666	PrimaryExpression	2		2770545	0					
ANR	2770667	CallExpression	ceil ( tmp_value / 2.0 )		2770545	1					
ANR	2770668	Callee	ceil		2770545	0					
ANR	2770669	Identifier	ceil		2770545	0					
ANR	2770670	ArgumentList	tmp_value / 2.0		2770545	1					
ANR	2770671	Argument	tmp_value / 2.0		2770545	0					
ANR	2770672	MultiplicativeExpression	tmp_value / 2.0		2770545	0		/			
ANR	2770673	Identifier	tmp_value		2770545	0					
ANR	2770674	PrimaryExpression	2.0		2770545	1					
ANR	2770675	AndExpression	mode == PHP_ROUND_HALF_ODD && value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) + 1.0 )		2770545	1		&&			
ANR	2770676	EqualityExpression	mode == PHP_ROUND_HALF_ODD		2770545	0		==			
ANR	2770677	Identifier	mode		2770545	0					
ANR	2770678	Identifier	PHP_ROUND_HALF_ODD		2770545	1					
ANR	2770679	EqualityExpression	value == ( - 0.5 + 2 * ceil ( tmp_value / 2.0 ) + 1.0 )		2770545	1		==			
ANR	2770680	Identifier	value		2770545	0					
ANR	2770681	AdditiveExpression	- 0.5 + 2 * ceil ( tmp_value / 2.0 ) + 1.0		2770545	1		+			
ANR	2770682	UnaryOperationExpression	- 0.5		2770545	0					
ANR	2770683	UnaryOperator	-		2770545	0					
ANR	2770684	PrimaryExpression	0.5		2770545	1					
ANR	2770685	AdditiveExpression	2 * ceil ( tmp_value / 2.0 ) + 1.0		2770545	1		+			
ANR	2770686	MultiplicativeExpression	2 * ceil ( tmp_value / 2.0 )		2770545	0		*			
ANR	2770687	PrimaryExpression	2		2770545	0					
ANR	2770688	CallExpression	ceil ( tmp_value / 2.0 )		2770545	1					
ANR	2770689	Callee	ceil		2770545	0					
ANR	2770690	Identifier	ceil		2770545	0					
ANR	2770691	ArgumentList	tmp_value / 2.0		2770545	1					
ANR	2770692	Argument	tmp_value / 2.0		2770545	0					
ANR	2770693	MultiplicativeExpression	tmp_value / 2.0		2770545	0		/			
ANR	2770694	Identifier	tmp_value		2770545	0					
ANR	2770695	PrimaryExpression	2.0		2770545	1					
ANR	2770696	PrimaryExpression	1.0		2770545	1					
ANR	2770697	CompoundStatement		17:2:632:632	2770545	1					
ANR	2770698	ExpressionStatement	tmp_value = tmp_value + 1.0	127:3:4067:4094	2770545	0	True				
ANR	2770699	AssignmentExpression	tmp_value = tmp_value + 1.0		2770545	0		=			
ANR	2770700	Identifier	tmp_value		2770545	0					
ANR	2770701	AdditiveExpression	tmp_value + 1.0		2770545	1		+			
ANR	2770702	Identifier	tmp_value		2770545	0					
ANR	2770703	PrimaryExpression	1.0		2770545	1					
ANR	2770704	ReturnStatement	return tmp_value ;	131:1:4105:4121	2770545	2	True				
ANR	2770705	Identifier	tmp_value		2770545	0					
ANR	2770706	ReturnType	static inline double		2770545	1					
ANR	2770707	Identifier	php_round_helper		2770545	2					
ANR	2770708	ParameterList	"double value , int mode"		2770545	3					
ANR	2770709	Parameter	double value	110:38:3405:3416	2770545	0	True				
ANR	2770710	ParameterType	double		2770545	0					
ANR	2770711	Identifier	value		2770545	1					
ANR	2770712	Parameter	int mode	110:52:3419:3426	2770545	1	True				
ANR	2770713	ParameterType	int		2770545	0					
ANR	2770714	Identifier	mode		2770545	1					
ANR	2770715	CFGEntryNode	ENTRY		2770545		True				
ANR	2770716	CFGExitNode	EXIT		2770545		True				
ANR	2770717	Symbol	mode		2770545						
ANR	2770718	Symbol	PHP_ROUND_HALF_ODD		2770545						
ANR	2770719	Symbol	PHP_ROUND_HALF_EVEN		2770545						
ANR	2770720	Symbol	ceil		2770545						
ANR	2770721	Symbol	tmp_value		2770545						
ANR	2770722	Symbol	floor		2770545						
ANR	2770723	Symbol	value		2770545						
ANR	2770724	Symbol	PHP_ROUND_HALF_DOWN		2770545						
ANR	2770725	Function	_php_math_round	140:0:4330:6587							
ANR	2770726	FunctionDef	"_php_math_round (double value , int places , int mode)"		2770725	0					
ANR	2770727	CompoundStatement		140:66:4396:6587	2770725	0					
ANR	2770728	IdentifierDeclStatement	"double f1 , f2 ;"	141:1:4399:4412	2770725	0	True				
ANR	2770729	IdentifierDecl	f1		2770725	0					
ANR	2770730	IdentifierDeclType	double		2770725	0					
ANR	2770731	Identifier	f1		2770725	1					
ANR	2770732	IdentifierDecl	f2		2770725	1					
ANR	2770733	IdentifierDeclType	double		2770725	0					
ANR	2770734	Identifier	f2		2770725	1					
ANR	2770735	IdentifierDeclStatement	double tmp_value ;	142:1:4415:4431	2770725	1	True				
ANR	2770736	IdentifierDecl	tmp_value		2770725	0					
ANR	2770737	IdentifierDeclType	double		2770725	0					
ANR	2770738	Identifier	tmp_value		2770725	1					
ANR	2770739	IdentifierDeclStatement	int precision_places ;	143:1:4434:4454	2770725	2	True				
ANR	2770740	IdentifierDecl	precision_places		2770725	0					
ANR	2770741	IdentifierDeclType	int		2770725	0					
ANR	2770742	Identifier	precision_places		2770725	1					
ANR	2770743	IfStatement	if ( ! php_math_is_finite ( value ) )		2770725	3					
ANR	2770744	Condition	! php_math_is_finite ( value )	145:5:4462:4487	2770725	0	True				
ANR	2770745	UnaryOperationExpression	! php_math_is_finite ( value )		2770725	0					
ANR	2770746	UnaryOperator	!		2770725	0					
ANR	2770747	CallExpression	php_math_is_finite ( value )		2770725	1					
ANR	2770748	Callee	php_math_is_finite		2770725	0					
ANR	2770749	Identifier	php_math_is_finite		2770725	0					
ANR	2770750	ArgumentList	value		2770725	1					
ANR	2770751	Argument	value		2770725	0					
ANR	2770752	Identifier	value		2770725	0					
ANR	2770753	CompoundStatement		6:33:93:93	2770725	1					
ANR	2770754	ReturnStatement	return value ;	146:2:4494:4506	2770725	0	True				
ANR	2770755	Identifier	value		2770725	0					
ANR	2770756	ExpressionStatement	precision_places = 14 - php_intlog10abs ( value )	149:1:4513:4559	2770725	4	True				
ANR	2770757	AssignmentExpression	precision_places = 14 - php_intlog10abs ( value )		2770725	0		=			
ANR	2770758	Identifier	precision_places		2770725	0					
ANR	2770759	AdditiveExpression	14 - php_intlog10abs ( value )		2770725	1		-			
ANR	2770760	PrimaryExpression	14		2770725	0					
ANR	2770761	CallExpression	php_intlog10abs ( value )		2770725	1					
ANR	2770762	Callee	php_intlog10abs		2770725	0					
ANR	2770763	Identifier	php_intlog10abs		2770725	0					
ANR	2770764	ArgumentList	value		2770725	1					
ANR	2770765	Argument	value		2770725	0					
ANR	2770766	Identifier	value		2770725	0					
ANR	2770767	ExpressionStatement	f1 = php_intpow10 ( abs ( places ) )	151:1:4563:4593	2770725	5	True				
ANR	2770768	AssignmentExpression	f1 = php_intpow10 ( abs ( places ) )		2770725	0		=			
ANR	2770769	Identifier	f1		2770725	0					
ANR	2770770	CallExpression	php_intpow10 ( abs ( places ) )		2770725	1					
ANR	2770771	Callee	php_intpow10		2770725	0					
ANR	2770772	Identifier	php_intpow10		2770725	0					
ANR	2770773	ArgumentList	abs ( places )		2770725	1					
ANR	2770774	Argument	abs ( places )		2770725	0					
ANR	2770775	CallExpression	abs ( places )		2770725	0					
ANR	2770776	Callee	abs		2770725	0					
ANR	2770777	Identifier	abs		2770725	0					
ANR	2770778	ArgumentList	places		2770725	1					
ANR	2770779	Argument	places		2770725	0					
ANR	2770780	Identifier	places		2770725	0					
ANR	2770781	IfStatement	if ( precision_places > places && precision_places - places < 15 )		2770725	6					
ANR	2770782	Condition	precision_places > places && precision_places - places < 15	156:5:4806:4864	2770725	0	True				
ANR	2770783	AndExpression	precision_places > places && precision_places - places < 15		2770725	0		&&			
ANR	2770784	RelationalExpression	precision_places > places		2770725	0		>			
ANR	2770785	Identifier	precision_places		2770725	0					
ANR	2770786	Identifier	places		2770725	1					
ANR	2770787	RelationalExpression	precision_places - places < 15		2770725	1		<			
ANR	2770788	AdditiveExpression	precision_places - places		2770725	0		-			
ANR	2770789	Identifier	precision_places		2770725	0					
ANR	2770790	Identifier	places		2770725	1					
ANR	2770791	PrimaryExpression	15		2770725	1					
ANR	2770792	CompoundStatement		17:66:470:470	2770725	1					
ANR	2770793	ExpressionStatement	f2 = php_intpow10 ( abs ( precision_places ) )	157:2:4871:4911	2770725	0	True				
ANR	2770794	AssignmentExpression	f2 = php_intpow10 ( abs ( precision_places ) )		2770725	0		=			
ANR	2770795	Identifier	f2		2770725	0					
ANR	2770796	CallExpression	php_intpow10 ( abs ( precision_places ) )		2770725	1					
ANR	2770797	Callee	php_intpow10		2770725	0					
ANR	2770798	Identifier	php_intpow10		2770725	0					
ANR	2770799	ArgumentList	abs ( precision_places )		2770725	1					
ANR	2770800	Argument	abs ( precision_places )		2770725	0					
ANR	2770801	CallExpression	abs ( precision_places )		2770725	0					
ANR	2770802	Callee	abs		2770725	0					
ANR	2770803	Identifier	abs		2770725	0					
ANR	2770804	ArgumentList	precision_places		2770725	1					
ANR	2770805	Argument	precision_places		2770725	0					
ANR	2770806	Identifier	precision_places		2770725	0					
ANR	2770807	IfStatement	if ( precision_places >= 0 )		2770725	1					
ANR	2770808	Condition	precision_places >= 0	158:6:4919:4939	2770725	0	True				
ANR	2770809	RelationalExpression	precision_places >= 0		2770725	0		>=			
ANR	2770810	Identifier	precision_places		2770725	0					
ANR	2770811	PrimaryExpression	0		2770725	1					
ANR	2770812	CompoundStatement		19:29:545:545	2770725	1					
ANR	2770813	ExpressionStatement	tmp_value = value * f2	159:3:4947:4969	2770725	0	True				
ANR	2770814	AssignmentExpression	tmp_value = value * f2		2770725	0		=			
ANR	2770815	Identifier	tmp_value		2770725	0					
ANR	2770816	MultiplicativeExpression	value * f2		2770725	1		*			
ANR	2770817	Identifier	value		2770725	0					
ANR	2770818	Identifier	f2		2770725	1					
ANR	2770819	ElseStatement	else		2770725	0					
ANR	2770820	CompoundStatement		21:9:583:583	2770725	0					
ANR	2770821	ExpressionStatement	tmp_value = value / f2	161:3:4985:5007	2770725	0	True				
ANR	2770822	AssignmentExpression	tmp_value = value / f2		2770725	0		=			
ANR	2770823	Identifier	tmp_value		2770725	0					
ANR	2770824	MultiplicativeExpression	value / f2		2770725	1		/			
ANR	2770825	Identifier	value		2770725	0					
ANR	2770826	Identifier	f2		2770725	1					
ANR	2770827	ExpressionStatement	"tmp_value = php_round_helper ( tmp_value , mode )"	165:2:5126:5171	2770725	2	True				
ANR	2770828	AssignmentExpression	"tmp_value = php_round_helper ( tmp_value , mode )"		2770725	0		=			
ANR	2770829	Identifier	tmp_value		2770725	0					
ANR	2770830	CallExpression	"php_round_helper ( tmp_value , mode )"		2770725	1					
ANR	2770831	Callee	php_round_helper		2770725	0					
ANR	2770832	Identifier	php_round_helper		2770725	0					
ANR	2770833	ArgumentList	tmp_value		2770725	1					
ANR	2770834	Argument	tmp_value		2770725	0					
ANR	2770835	Identifier	tmp_value		2770725	0					
ANR	2770836	Argument	mode		2770725	1					
ANR	2770837	Identifier	mode		2770725	0					
ANR	2770838	ExpressionStatement	f2 = php_intpow10 ( abs ( places - precision_places ) )	167:2:5220:5269	2770725	3	True				
ANR	2770839	AssignmentExpression	f2 = php_intpow10 ( abs ( places - precision_places ) )		2770725	0		=			
ANR	2770840	Identifier	f2		2770725	0					
ANR	2770841	CallExpression	php_intpow10 ( abs ( places - precision_places ) )		2770725	1					
ANR	2770842	Callee	php_intpow10		2770725	0					
ANR	2770843	Identifier	php_intpow10		2770725	0					
ANR	2770844	ArgumentList	abs ( places - precision_places )		2770725	1					
ANR	2770845	Argument	abs ( places - precision_places )		2770725	0					
ANR	2770846	CallExpression	abs ( places - precision_places )		2770725	0					
ANR	2770847	Callee	abs		2770725	0					
ANR	2770848	Identifier	abs		2770725	0					
ANR	2770849	ArgumentList	places - precision_places		2770725	1					
ANR	2770850	Argument	places - precision_places		2770725	0					
ANR	2770851	AdditiveExpression	places - precision_places		2770725	0		-			
ANR	2770852	Identifier	places		2770725	0					
ANR	2770853	Identifier	precision_places		2770725	1					
ANR	2770854	ExpressionStatement	tmp_value = tmp_value / f2	169:2:5315:5341	2770725	4	True				
ANR	2770855	AssignmentExpression	tmp_value = tmp_value / f2		2770725	0		=			
ANR	2770856	Identifier	tmp_value		2770725	0					
ANR	2770857	MultiplicativeExpression	tmp_value / f2		2770725	1		/			
ANR	2770858	Identifier	tmp_value		2770725	0					
ANR	2770859	Identifier	f2		2770725	1					
ANR	2770860	ElseStatement	else		2770725	0					
ANR	2770861	CompoundStatement		31:8:954:954	2770725	0					
ANR	2770862	IfStatement	if ( places >= 0 )		2770725	0					
ANR	2770863	Condition	places >= 0	172:6:5384:5394	2770725	0	True				
ANR	2770864	RelationalExpression	places >= 0		2770725	0		>=			
ANR	2770865	Identifier	places		2770725	0					
ANR	2770866	PrimaryExpression	0		2770725	1					
ANR	2770867	CompoundStatement		33:19:1000:1000	2770725	1					
ANR	2770868	ExpressionStatement	tmp_value = value * f1	173:3:5402:5424	2770725	0	True				
ANR	2770869	AssignmentExpression	tmp_value = value * f1		2770725	0		=			
ANR	2770870	Identifier	tmp_value		2770725	0					
ANR	2770871	MultiplicativeExpression	value * f1		2770725	1		*			
ANR	2770872	Identifier	value		2770725	0					
ANR	2770873	Identifier	f1		2770725	1					
ANR	2770874	ElseStatement	else		2770725	0					
ANR	2770875	CompoundStatement		35:9:1038:1038	2770725	0					
ANR	2770876	ExpressionStatement	tmp_value = value / f1	175:3:5440:5462	2770725	0	True				
ANR	2770877	AssignmentExpression	tmp_value = value / f1		2770725	0		=			
ANR	2770878	Identifier	tmp_value		2770725	0					
ANR	2770879	MultiplicativeExpression	value / f1		2770725	1		/			
ANR	2770880	Identifier	value		2770725	0					
ANR	2770881	Identifier	f1		2770725	1					
ANR	2770882	IfStatement	if ( fabs ( tmp_value ) >= 1e15 )		2770725	1					
ANR	2770883	Condition	fabs ( tmp_value ) >= 1e15	178:6:5546:5568	2770725	0	True				
ANR	2770884	RelationalExpression	fabs ( tmp_value ) >= 1e15		2770725	0		>=			
ANR	2770885	CallExpression	fabs ( tmp_value )		2770725	0					
ANR	2770886	Callee	fabs		2770725	0					
ANR	2770887	Identifier	fabs		2770725	0					
ANR	2770888	ArgumentList	tmp_value		2770725	1					
ANR	2770889	Argument	tmp_value		2770725	0					
ANR	2770890	Identifier	tmp_value		2770725	0					
ANR	2770891	PrimaryExpression	1e15		2770725	1					
ANR	2770892	CompoundStatement		39:31:1174:1174	2770725	1					
ANR	2770893	ReturnStatement	return value ;	179:3:5576:5588	2770725	0	True				
ANR	2770894	Identifier	value		2770725	0					
ANR	2770895	ExpressionStatement	"tmp_value = php_round_helper ( tmp_value , mode )"	184:1:5627:5672	2770725	7	True				
ANR	2770896	AssignmentExpression	"tmp_value = php_round_helper ( tmp_value , mode )"		2770725	0		=			
ANR	2770897	Identifier	tmp_value		2770725	0					
ANR	2770898	CallExpression	"php_round_helper ( tmp_value , mode )"		2770725	1					
ANR	2770899	Callee	php_round_helper		2770725	0					
ANR	2770900	Identifier	php_round_helper		2770725	0					
ANR	2770901	ArgumentList	tmp_value		2770725	1					
ANR	2770902	Argument	tmp_value		2770725	0					
ANR	2770903	Identifier	tmp_value		2770725	0					
ANR	2770904	Argument	mode		2770725	1					
ANR	2770905	Identifier	mode		2770725	0					
ANR	2770906	IfStatement	if ( abs ( places ) < 23 )		2770725	8					
ANR	2770907	Condition	abs ( places ) < 23	187:5:5751:5766	2770725	0	True				
ANR	2770908	RelationalExpression	abs ( places ) < 23		2770725	0		<			
ANR	2770909	CallExpression	abs ( places )		2770725	0					
ANR	2770910	Callee	abs		2770725	0					
ANR	2770911	Identifier	abs		2770725	0					
ANR	2770912	ArgumentList	places		2770725	1					
ANR	2770913	Argument	places		2770725	0					
ANR	2770914	Identifier	places		2770725	0					
ANR	2770915	PrimaryExpression	23		2770725	1					
ANR	2770916	CompoundStatement		48:23:1372:1372	2770725	1					
ANR	2770917	IfStatement	if ( places > 0 )		2770725	0					
ANR	2770918	Condition	places > 0	188:6:5777:5786	2770725	0	True				
ANR	2770919	RelationalExpression	places > 0		2770725	0		>			
ANR	2770920	Identifier	places		2770725	0					
ANR	2770921	PrimaryExpression	0		2770725	1					
ANR	2770922	CompoundStatement		49:18:1392:1392	2770725	1					
ANR	2770923	ExpressionStatement	tmp_value = tmp_value / f1	189:3:5794:5820	2770725	0	True				
ANR	2770924	AssignmentExpression	tmp_value = tmp_value / f1		2770725	0		=			
ANR	2770925	Identifier	tmp_value		2770725	0					
ANR	2770926	MultiplicativeExpression	tmp_value / f1		2770725	1		/			
ANR	2770927	Identifier	tmp_value		2770725	0					
ANR	2770928	Identifier	f1		2770725	1					
ANR	2770929	ElseStatement	else		2770725	0					
ANR	2770930	CompoundStatement		51:9:1434:1434	2770725	0					
ANR	2770931	ExpressionStatement	tmp_value = tmp_value * f1	191:3:5836:5862	2770725	0	True				
ANR	2770932	AssignmentExpression	tmp_value = tmp_value * f1		2770725	0		=			
ANR	2770933	Identifier	tmp_value		2770725	0					
ANR	2770934	MultiplicativeExpression	tmp_value * f1		2770725	1		*			
ANR	2770935	Identifier	tmp_value		2770725	0					
ANR	2770936	Identifier	f1		2770725	1					
ANR	2770937	ElseStatement	else		2770725	0					
ANR	2770938	CompoundStatement		63:2:1917:1929	2770725	0					
ANR	2770939	IdentifierDeclStatement	char buf [ 40 ] ;	202:2:6314:6326	2770725	0	True				
ANR	2770940	IdentifierDecl	buf [ 40 ]		2770725	0					
ANR	2770941	IdentifierDeclType	char [ 40 ]		2770725	0					
ANR	2770942	Identifier	buf		2770725	1					
ANR	2770943	PrimaryExpression	40		2770725	2					
ANR	2770944	ExpressionStatement	"snprintf ( buf , 39 , ""%15fe%d"" , tmp_value , - places )"	203:2:6330:6378	2770725	1	True				
ANR	2770945	CallExpression	"snprintf ( buf , 39 , ""%15fe%d"" , tmp_value , - places )"		2770725	0					
ANR	2770946	Callee	snprintf		2770725	0					
ANR	2770947	Identifier	snprintf		2770725	0					
ANR	2770948	ArgumentList	buf		2770725	1					
ANR	2770949	Argument	buf		2770725	0					
ANR	2770950	Identifier	buf		2770725	0					
ANR	2770951	Argument	39		2770725	1					
ANR	2770952	PrimaryExpression	39		2770725	0					
ANR	2770953	Argument	"""%15fe%d"""		2770725	2					
ANR	2770954	PrimaryExpression	"""%15fe%d"""		2770725	0					
ANR	2770955	Argument	tmp_value		2770725	3					
ANR	2770956	Identifier	tmp_value		2770725	0					
ANR	2770957	Argument	- places		2770725	4					
ANR	2770958	UnaryOperationExpression	- places		2770725	0					
ANR	2770959	UnaryOperator	-		2770725	0					
ANR	2770960	Identifier	places		2770725	1					
ANR	2770961	ExpressionStatement	buf [ 39 ] = '\\0'	204:2:6382:6396	2770725	2	True				
ANR	2770962	AssignmentExpression	buf [ 39 ] = '\\0'		2770725	0		=			
ANR	2770963	ArrayIndexing	buf [ 39 ]		2770725	0					
ANR	2770964	Identifier	buf		2770725	0					
ANR	2770965	PrimaryExpression	39		2770725	1					
ANR	2770966	PrimaryExpression	'\\0'		2770725	1					
ANR	2770967	ExpressionStatement	"tmp_value = zend_strtod ( buf , NULL )"	205:2:6400:6434	2770725	3	True				
ANR	2770968	AssignmentExpression	"tmp_value = zend_strtod ( buf , NULL )"		2770725	0		=			
ANR	2770969	Identifier	tmp_value		2770725	0					
ANR	2770970	CallExpression	"zend_strtod ( buf , NULL )"		2770725	1					
ANR	2770971	Callee	zend_strtod		2770725	0					
ANR	2770972	Identifier	zend_strtod		2770725	0					
ANR	2770973	ArgumentList	buf		2770725	1					
ANR	2770974	Argument	buf		2770725	0					
ANR	2770975	Identifier	buf		2770725	0					
ANR	2770976	Argument	NULL		2770725	1					
ANR	2770977	Identifier	NULL		2770725	0					
ANR	2770978	IfStatement	if ( ! zend_finite ( tmp_value ) || zend_isnan ( tmp_value ) )		2770725	4					
ANR	2770979	Condition	! zend_finite ( tmp_value ) || zend_isnan ( tmp_value )	207:6:6486:6533	2770725	0	True				
ANR	2770980	OrExpression	! zend_finite ( tmp_value ) || zend_isnan ( tmp_value )		2770725	0		||			
ANR	2770981	UnaryOperationExpression	! zend_finite ( tmp_value )		2770725	0					
ANR	2770982	UnaryOperator	!		2770725	0					
ANR	2770983	CallExpression	zend_finite ( tmp_value )		2770725	1					
ANR	2770984	Callee	zend_finite		2770725	0					
ANR	2770985	Identifier	zend_finite		2770725	0					
ANR	2770986	ArgumentList	tmp_value		2770725	1					
ANR	2770987	Argument	tmp_value		2770725	0					
ANR	2770988	Identifier	tmp_value		2770725	0					
ANR	2770989	CallExpression	zend_isnan ( tmp_value )		2770725	1					
ANR	2770990	Callee	zend_isnan		2770725	0					
ANR	2770991	Identifier	zend_isnan		2770725	0					
ANR	2770992	ArgumentList	tmp_value		2770725	1					
ANR	2770993	Argument	tmp_value		2770725	0					
ANR	2770994	Identifier	tmp_value		2770725	0					
ANR	2770995	CompoundStatement		68:56:2139:2139	2770725	1					
ANR	2770996	ExpressionStatement	tmp_value = value	208:3:6541:6558	2770725	0	True				
ANR	2770997	AssignmentExpression	tmp_value = value		2770725	0		=			
ANR	2770998	Identifier	tmp_value		2770725	0					
ANR	2770999	Identifier	value		2770725	1					
ANR	2771000	ReturnStatement	return tmp_value ;	212:1:6569:6585	2770725	9	True				
ANR	2771001	Identifier	tmp_value		2770725	0					
ANR	2771002	ReturnType	PHPAPI double		2770725	1					
ANR	2771003	Identifier	_php_math_round		2770725	2					
ANR	2771004	ParameterList	"double value , int places , int mode"		2770725	3					
ANR	2771005	Parameter	double value	140:30:4360:4371	2770725	0	True				
ANR	2771006	ParameterType	double		2770725	0					
ANR	2771007	Identifier	value		2770725	1					
ANR	2771008	Parameter	int places	140:44:4374:4383	2770725	1	True				
ANR	2771009	ParameterType	int		2770725	0					
ANR	2771010	Identifier	places		2770725	1					
ANR	2771011	Parameter	int mode	140:56:4386:4393	2770725	2	True				
ANR	2771012	ParameterType	int		2770725	0					
ANR	2771013	Identifier	mode		2770725	1					
ANR	2771014	CFGEntryNode	ENTRY		2770725		True				
ANR	2771015	CFGExitNode	EXIT		2770725		True				
ANR	2771016	Symbol	zend_finite		2770725						
ANR	2771017	Symbol	php_intlog10abs		2770725						
ANR	2771018	Symbol	* buf		2770725						
ANR	2771019	Symbol	fabs		2770725						
ANR	2771020	Symbol	NULL		2770725						
ANR	2771021	Symbol	f1		2770725						
ANR	2771022	Symbol	precision_places		2770725						
ANR	2771023	Symbol	f2		2770725						
ANR	2771024	Symbol	tmp_value		2770725						
ANR	2771025	Symbol	php_intpow10		2770725						
ANR	2771026	Symbol	zend_strtod		2770725						
ANR	2771027	Symbol	mode		2770725						
ANR	2771028	Symbol	places		2770725						
ANR	2771029	Symbol	buf		2770725						
ANR	2771030	Symbol	abs		2770725						
ANR	2771031	Symbol	php_math_is_finite		2770725						
ANR	2771032	Symbol	zend_isnan		2770725						
ANR	2771033	Symbol	value		2770725						
ANR	2771034	Symbol	php_round_helper		2770725						
ANR	2771035	Function	php_asinh	218:0:6620:6887							
ANR	2771036	FunctionDef	php_asinh (double z)		2771035	0					
ANR	2771037	CompoundStatement		219:0:6654:6887	2771035	0					
ANR	2771038	ReturnStatement	return ( asinh ( z ) ) ;	221:1:6675:6691	2771035	0	True				
ANR	2771039	CallExpression	asinh ( z )		2771035	0					
ANR	2771040	Callee	asinh		2771035	0					
ANR	2771041	Identifier	asinh		2771035	0					
ANR	2771042	ArgumentList	z		2771035	1					
ANR	2771043	Argument	z		2771035	0					
ANR	2771044	Identifier	z		2771035	0					
ANR	2771045	ReturnType	static double		2771035	1					
ANR	2771046	Identifier	php_asinh		2771035	2					
ANR	2771047	ParameterList	double z		2771035	3					
ANR	2771048	Parameter	double z	218:24:6644:6651	2771035	0	True				
ANR	2771049	ParameterType	double		2771035	0					
ANR	2771050	Identifier	z		2771035	1					
ANR	2771051	CFGEntryNode	ENTRY		2771035		True				
ANR	2771052	CFGExitNode	EXIT		2771035		True				
ANR	2771053	Symbol	z		2771035						
ANR	2771054	Symbol	asinh		2771035						
ANR	2771055	Function	php_acosh	239:0:6920:7180							
ANR	2771056	FunctionDef	php_acosh (double x)		2771055	0					
ANR	2771057	CompoundStatement		240:0:6954:7180	2771055	0					
ANR	2771058	ReturnStatement	return ( acosh ( x ) ) ;	242:1:6975:6991	2771055	0	True				
ANR	2771059	CallExpression	acosh ( x )		2771055	0					
ANR	2771060	Callee	acosh		2771055	0					
ANR	2771061	Identifier	acosh		2771055	0					
ANR	2771062	ArgumentList	x		2771055	1					
ANR	2771063	Argument	x		2771055	0					
ANR	2771064	Identifier	x		2771055	0					
ANR	2771065	ReturnType	static double		2771055	1					
ANR	2771066	Identifier	php_acosh		2771055	2					
ANR	2771067	ParameterList	double x		2771055	3					
ANR	2771068	Parameter	double x	239:24:6944:6951	2771055	0	True				
ANR	2771069	ParameterType	double		2771055	0					
ANR	2771070	Identifier	x		2771055	1					
ANR	2771071	CFGEntryNode	ENTRY		2771055		True				
ANR	2771072	CFGExitNode	EXIT		2771055		True				
ANR	2771073	Symbol	acosh		2771055						
ANR	2771074	Symbol	x		2771055						
ANR	2771075	Function	php_atanh	259:0:7213:7338							
ANR	2771076	FunctionDef	php_atanh (double z)		2771075	0					
ANR	2771077	CompoundStatement		260:0:7247:7338	2771075	0					
ANR	2771078	ReturnStatement	return ( atanh ( z ) ) ;	262:1:7268:7284	2771075	0	True				
ANR	2771079	CallExpression	atanh ( z )		2771075	0					
ANR	2771080	Callee	atanh		2771075	0					
ANR	2771081	Identifier	atanh		2771075	0					
ANR	2771082	ArgumentList	z		2771075	1					
ANR	2771083	Argument	z		2771075	0					
ANR	2771084	Identifier	z		2771075	0					
ANR	2771085	ReturnType	static double		2771075	1					
ANR	2771086	Identifier	php_atanh		2771075	2					
ANR	2771087	ParameterList	double z		2771075	3					
ANR	2771088	Parameter	double z	259:24:7237:7244	2771075	0	True				
ANR	2771089	ParameterType	double		2771075	0					
ANR	2771090	Identifier	z		2771075	1					
ANR	2771091	CFGEntryNode	ENTRY		2771075		True				
ANR	2771092	CFGExitNode	EXIT		2771075		True				
ANR	2771093	Symbol	atanh		2771075						
ANR	2771094	Symbol	z		2771075						
ANR	2771095	Function	php_log1p	271:0:7371:7478							
ANR	2771096	FunctionDef	php_log1p (double x)		2771095	0					
ANR	2771097	CompoundStatement		272:0:7405:7478	2771095	0					
ANR	2771098	ReturnStatement	return ( log1p ( x ) ) ;	274:1:7426:7442	2771095	0	True				
ANR	2771099	CallExpression	log1p ( x )		2771095	0					
ANR	2771100	Callee	log1p		2771095	0					
ANR	2771101	Identifier	log1p		2771095	0					
ANR	2771102	ArgumentList	x		2771095	1					
ANR	2771103	Argument	x		2771095	0					
ANR	2771104	Identifier	x		2771095	0					
ANR	2771105	ReturnType	static double		2771095	1					
ANR	2771106	Identifier	php_log1p		2771095	2					
ANR	2771107	ParameterList	double x		2771095	3					
ANR	2771108	Parameter	double x	271:24:7395:7402	2771095	0	True				
ANR	2771109	ParameterType	double		2771095	0					
ANR	2771110	Identifier	x		2771095	1					
ANR	2771111	CFGEntryNode	ENTRY		2771095		True				
ANR	2771112	CFGExitNode	EXIT		2771095		True				
ANR	2771113	Symbol	log1p		2771095						
ANR	2771114	Symbol	x		2771095						
ANR	2771115	Function	php_expm1	283:0:7511:7645							
ANR	2771116	FunctionDef	php_expm1 (double x)		2771115	0					
ANR	2771117	CompoundStatement		284:0:7545:7645	2771115	0					
ANR	2771118	ReturnStatement	return ( expm1 ( x ) ) ;	286:1:7593:7609	2771115	0	True				
ANR	2771119	CallExpression	expm1 ( x )		2771115	0					
ANR	2771120	Callee	expm1		2771115	0					
ANR	2771121	Identifier	expm1		2771115	0					
ANR	2771122	ArgumentList	x		2771115	1					
ANR	2771123	Argument	x		2771115	0					
ANR	2771124	Identifier	x		2771115	0					
ANR	2771125	ReturnType	static double		2771115	1					
ANR	2771126	Identifier	php_expm1		2771115	2					
ANR	2771127	ParameterList	double x		2771115	3					
ANR	2771128	Parameter	double x	283:24:7535:7542	2771115	0	True				
ANR	2771129	ParameterType	double		2771115	0					
ANR	2771130	Identifier	x		2771115	1					
ANR	2771131	CFGEntryNode	ENTRY		2771115		True				
ANR	2771132	CFGExitNode	EXIT		2771115		True				
ANR	2771133	Symbol	expm1		2771115						
ANR	2771134	Symbol	x		2771115						
ANR	2771135	DeclStmt									
ANR	2771136	Decl							zval	zval *	value
ANR	2771137	DeclStmt									
ANR	2771138	Decl							zval	zval *	value
ANR	2771139	DeclStmt									
ANR	2771140	Decl							zval	zval *	value
ANR	2771141	DeclStmt									
ANR	2771142	Decl							zval	zval *	value
ANR	2771143	DeclStmt									
ANR	2771144	Decl							int	int	places
ANR	2771145	DeclStmt									
ANR	2771146	Decl							zend_long	zend_long	precision
ANR	2771147	DeclStmt									
ANR	2771148	Decl							zend_long	zend_long	mode
ANR	2771149	DeclStmt									
ANR	2771150	Decl							double	double	return_val
ANR	2771151	DeclStmt									
ANR	2771152	Decl							double	double	num
ANR	2771153	DeclStmt									
ANR	2771154	Decl							double	double	num
ANR	2771155	DeclStmt									
ANR	2771156	Decl							double	double	num
ANR	2771157	DeclStmt									
ANR	2771158	Decl							double	double	num
ANR	2771159	DeclStmt									
ANR	2771160	Decl							double	double	num
ANR	2771161	DeclStmt									
ANR	2771162	Decl							double	double	num
ANR	2771163	DeclStmt									
ANR	2771164	Decl							double	double	num1
ANR	2771165	Decl							double	double	num2
ANR	2771166	DeclStmt									
ANR	2771167	Decl							double	double	num
ANR	2771168	DeclStmt									
ANR	2771169	Decl							double	double	num
ANR	2771170	DeclStmt									
ANR	2771171	Decl							double	double	num
ANR	2771172	DeclStmt									
ANR	2771173	Decl							double	double	num
ANR	2771174	DeclStmt									
ANR	2771175	Decl							double	double	num
ANR	2771176	DeclStmt									
ANR	2771177	Decl							double	double	num
ANR	2771178	DeclStmt									
ANR	2771179	Decl							double	double	dval
ANR	2771180	DeclStmt									
ANR	2771181	Decl							double	double	dval
ANR	2771182	DeclStmt									
ANR	2771183	Decl							double	double	dval
ANR	2771184	DeclStmt									
ANR	2771185	Decl							zval	zval *	zbase
ANR	2771186	Decl							zval	zval *	zexp
ANR	2771187	DeclStmt									
ANR	2771188	Decl							double	double	num
ANR	2771189	DeclStmt									
ANR	2771190	Decl							double	double	num
ANR	2771191	DeclStmt									
ANR	2771192	Decl							double	double	num
ANR	2771193	DeclStmt									
ANR	2771194	Decl							double	double	num
ANR	2771195	Decl							double	double	base
ANR	2771196	DeclStmt									
ANR	2771197	Decl							double	double	num
ANR	2771198	DeclStmt									
ANR	2771199	Decl							double	double	num
ANR	2771200	DeclStmt									
ANR	2771201	Decl							double	double	num1
ANR	2771202	Decl							double	double	num2
ANR	2771203	DeclStmt									
ANR	2771204	Decl							double	double	deg
ANR	2771205	DeclStmt									
ANR	2771206	Decl							double	double	rad
ANR	2771207	Function	_php_math_basetolong	968:0:21577:22241							
ANR	2771208	FunctionDef	"_php_math_basetolong (zval * arg , int base)"		2771207	0					
ANR	2771209	CompoundStatement		969:0:21636:22241	2771207	0					
ANR	2771210	IdentifierDeclStatement	"zend_long num = 0 , digit , onum ;"	970:1:21639:21669	2771207	0	True				
ANR	2771211	IdentifierDecl	num = 0		2771207	0					
ANR	2771212	IdentifierDeclType	zend_long		2771207	0					
ANR	2771213	Identifier	num		2771207	1					
ANR	2771214	AssignmentExpression	num = 0		2771207	2		=			
ANR	2771215	Identifier	num		2771207	0					
ANR	2771216	PrimaryExpression	0		2771207	1					
ANR	2771217	IdentifierDecl	digit		2771207	1					
ANR	2771218	IdentifierDeclType	zend_long		2771207	0					
ANR	2771219	Identifier	digit		2771207	1					
ANR	2771220	IdentifierDecl	onum		2771207	2					
ANR	2771221	IdentifierDeclType	zend_long		2771207	0					
ANR	2771222	Identifier	onum		2771207	1					
ANR	2771223	IdentifierDeclStatement	zend_long i ;	971:1:21672:21683	2771207	1	True				
ANR	2771224	IdentifierDecl	i		2771207	0					
ANR	2771225	IdentifierDeclType	zend_long		2771207	0					
ANR	2771226	Identifier	i		2771207	1					
ANR	2771227	IdentifierDeclStatement	"char c , * s ;"	972:1:21686:21696	2771207	2	True				
ANR	2771228	IdentifierDecl	c		2771207	0					
ANR	2771229	IdentifierDeclType	char		2771207	0					
ANR	2771230	Identifier	c		2771207	1					
ANR	2771231	IdentifierDecl	* s		2771207	1					
ANR	2771232	IdentifierDeclType	char *		2771207	0					
ANR	2771233	Identifier	s		2771207	1					
ANR	2771234	IfStatement	if ( Z_TYPE_P ( arg ) != IS_STRING || base < 2 || base > 36 )		2771207	3					
ANR	2771235	Condition	Z_TYPE_P ( arg ) != IS_STRING || base < 2 || base > 36	974:5:21704:21754	2771207	0	True				
ANR	2771236	OrExpression	Z_TYPE_P ( arg ) != IS_STRING || base < 2 || base > 36		2771207	0		||			
ANR	2771237	EqualityExpression	Z_TYPE_P ( arg ) != IS_STRING		2771207	0		!=			
ANR	2771238	CallExpression	Z_TYPE_P ( arg )		2771207	0					
ANR	2771239	Callee	Z_TYPE_P		2771207	0					
ANR	2771240	Identifier	Z_TYPE_P		2771207	0					
ANR	2771241	ArgumentList	arg		2771207	1					
ANR	2771242	Argument	arg		2771207	0					
ANR	2771243	Identifier	arg		2771207	0					
ANR	2771244	Identifier	IS_STRING		2771207	1					
ANR	2771245	OrExpression	base < 2 || base > 36		2771207	1		||			
ANR	2771246	RelationalExpression	base < 2		2771207	0		<			
ANR	2771247	Identifier	base		2771207	0					
ANR	2771248	PrimaryExpression	2		2771207	1					
ANR	2771249	RelationalExpression	base > 36		2771207	1		>			
ANR	2771250	Identifier	base		2771207	0					
ANR	2771251	PrimaryExpression	36		2771207	1					
ANR	2771252	CompoundStatement		6:58:120:120	2771207	1					
ANR	2771253	ReturnStatement	return 0 ;	975:2:21761:21769	2771207	0	True				
ANR	2771254	PrimaryExpression	0		2771207	0					
ANR	2771255	ExpressionStatement	s = Z_STRVAL_P ( arg )	978:1:21776:21795	2771207	4	True				
ANR	2771256	AssignmentExpression	s = Z_STRVAL_P ( arg )		2771207	0		=			
ANR	2771257	Identifier	s		2771207	0					
ANR	2771258	CallExpression	Z_STRVAL_P ( arg )		2771207	1					
ANR	2771259	Callee	Z_STRVAL_P		2771207	0					
ANR	2771260	Identifier	Z_STRVAL_P		2771207	0					
ANR	2771261	ArgumentList	arg		2771207	1					
ANR	2771262	Argument	arg		2771207	0					
ANR	2771263	Identifier	arg		2771207	0					
ANR	2771264	ForStatement	for ( i = Z_STRLEN_P ( arg ) ; i > 0 ; i -- )		2771207	5					
ANR	2771265	ForInit	i = Z_STRLEN_P ( arg ) ;	980:6:21804:21823	2771207	0	True				
ANR	2771266	AssignmentExpression	i = Z_STRLEN_P ( arg )		2771207	0		=			
ANR	2771267	Identifier	i		2771207	0					
ANR	2771268	CallExpression	Z_STRLEN_P ( arg )		2771207	1					
ANR	2771269	Callee	Z_STRLEN_P		2771207	0					
ANR	2771270	Identifier	Z_STRLEN_P		2771207	0					
ANR	2771271	ArgumentList	arg		2771207	1					
ANR	2771272	Argument	arg		2771207	0					
ANR	2771273	Identifier	arg		2771207	0					
ANR	2771274	Condition	i > 0	980:27:21825:21829	2771207	1	True				
ANR	2771275	RelationalExpression	i > 0		2771207	0		>			
ANR	2771276	Identifier	i		2771207	0					
ANR	2771277	PrimaryExpression	0		2771207	1					
ANR	2771278	PostIncDecOperationExpression	i --	980:34:21832:21834	2771207	2	True				
ANR	2771279	Identifier	i		2771207	0					
ANR	2771280	IncDec	--		2771207	1					
ANR	2771281	CompoundStatement		12:39:200:200	2771207	3					
ANR	2771282	ExpressionStatement	c = * s ++	981:2:21841:21849	2771207	0	True				
ANR	2771283	AssignmentExpression	c = * s ++		2771207	0		=			
ANR	2771284	Identifier	c		2771207	0					
ANR	2771285	UnaryOperationExpression	* s ++		2771207	1					
ANR	2771286	UnaryOperator	*		2771207	0					
ANR	2771287	PostIncDecOperationExpression	s ++		2771207	1					
ANR	2771288	Identifier	s		2771207	0					
ANR	2771289	IncDec	++		2771207	1					
ANR	2771290	ExpressionStatement	digit = ( c >= '0' && c <= '9' ) ? c - '0' : ( c >= 'A' && c <= 'Z' ) ? c - 'A' + 10 : ( c >= 'a' && c <= 'z' ) ? c - 'a' + 10 : base	983:2:21854:21990	2771207	1	True				
ANR	2771291	AssignmentExpression	digit = ( c >= '0' && c <= '9' ) ? c - '0' : ( c >= 'A' && c <= 'Z' ) ? c - 'A' + 10 : ( c >= 'a' && c <= 'z' ) ? c - 'a' + 10 : base		2771207	0		=			
ANR	2771292	Identifier	digit		2771207	0					
ANR	2771293	ConditionalExpression	( c >= '0' && c <= '9' ) ? c - '0' : ( c >= 'A' && c <= 'Z' ) ? c - 'A' + 10 : ( c >= 'a' && c <= 'z' ) ? c - 'a' + 10 : base		2771207	1					
ANR	2771294	Condition	c >= '0' && c <= '9'		2771207	0					
ANR	2771295	AndExpression	c >= '0' && c <= '9'		2771207	0		&&			
ANR	2771296	RelationalExpression	c >= '0'		2771207	0		>=			
ANR	2771297	Identifier	c		2771207	0					
ANR	2771298	PrimaryExpression	'0'		2771207	1					
ANR	2771299	RelationalExpression	c <= '9'		2771207	1		<=			
ANR	2771300	Identifier	c		2771207	0					
ANR	2771301	PrimaryExpression	'9'		2771207	1					
ANR	2771302	AdditiveExpression	c - '0'		2771207	1		-			
ANR	2771303	Identifier	c		2771207	0					
ANR	2771304	PrimaryExpression	'0'		2771207	1					
ANR	2771305	ConditionalExpression	( c >= 'A' && c <= 'Z' ) ? c - 'A' + 10 : ( c >= 'a' && c <= 'z' ) ? c - 'a' + 10 : base		2771207	2					
ANR	2771306	Condition	c >= 'A' && c <= 'Z'		2771207	0					
ANR	2771307	AndExpression	c >= 'A' && c <= 'Z'		2771207	0		&&			
ANR	2771308	RelationalExpression	c >= 'A'		2771207	0		>=			
ANR	2771309	Identifier	c		2771207	0					
ANR	2771310	PrimaryExpression	'A'		2771207	1					
ANR	2771311	RelationalExpression	c <= 'Z'		2771207	1		<=			
ANR	2771312	Identifier	c		2771207	0					
ANR	2771313	PrimaryExpression	'Z'		2771207	1					
ANR	2771314	AdditiveExpression	c - 'A' + 10		2771207	1		-			
ANR	2771315	Identifier	c		2771207	0					
ANR	2771316	AdditiveExpression	'A' + 10		2771207	1		+			
ANR	2771317	PrimaryExpression	'A'		2771207	0					
ANR	2771318	PrimaryExpression	10		2771207	1					
ANR	2771319	ConditionalExpression	( c >= 'a' && c <= 'z' ) ? c - 'a' + 10 : base		2771207	2					
ANR	2771320	Condition	c >= 'a' && c <= 'z'		2771207	0					
ANR	2771321	AndExpression	c >= 'a' && c <= 'z'		2771207	0		&&			
ANR	2771322	RelationalExpression	c >= 'a'		2771207	0		>=			
ANR	2771323	Identifier	c		2771207	0					
ANR	2771324	PrimaryExpression	'a'		2771207	1					
ANR	2771325	RelationalExpression	c <= 'z'		2771207	1		<=			
ANR	2771326	Identifier	c		2771207	0					
ANR	2771327	PrimaryExpression	'z'		2771207	1					
ANR	2771328	AdditiveExpression	c - 'a' + 10		2771207	1		-			
ANR	2771329	Identifier	c		2771207	0					
ANR	2771330	AdditiveExpression	'a' + 10		2771207	1		+			
ANR	2771331	PrimaryExpression	'a'		2771207	0					
ANR	2771332	PrimaryExpression	10		2771207	1					
ANR	2771333	Identifier	base		2771207	2					
ANR	2771334	IfStatement	if ( digit >= base )		2771207	2					
ANR	2771335	Condition	digit >= base	988:6:21999:22011	2771207	0	True				
ANR	2771336	RelationalExpression	digit >= base		2771207	0		>=			
ANR	2771337	Identifier	digit		2771207	0					
ANR	2771338	Identifier	base		2771207	1					
ANR	2771339	CompoundStatement		20:21:377:377	2771207	1					
ANR	2771340	ContinueStatement	continue ;	989:3:22019:22027	2771207	0	True				
ANR	2771341	ExpressionStatement	onum = num	992:2:22036:22046	2771207	3	True				
ANR	2771342	AssignmentExpression	onum = num		2771207	0		=			
ANR	2771343	Identifier	onum		2771207	0					
ANR	2771344	Identifier	num		2771207	1					
ANR	2771345	ExpressionStatement	num = num * base + digit	993:2:22050:22074	2771207	4	True				
ANR	2771346	AssignmentExpression	num = num * base + digit		2771207	0		=			
ANR	2771347	Identifier	num		2771207	0					
ANR	2771348	AdditiveExpression	num * base + digit		2771207	1		+			
ANR	2771349	MultiplicativeExpression	num * base		2771207	0		*			
ANR	2771350	Identifier	num		2771207	0					
ANR	2771351	Identifier	base		2771207	1					
ANR	2771352	Identifier	digit		2771207	1					
ANR	2771353	IfStatement	if ( num > onum )		2771207	5					
ANR	2771354	Condition	num > onum	994:6:22082:22091	2771207	0	True				
ANR	2771355	RelationalExpression	num > onum		2771207	0		>			
ANR	2771356	Identifier	num		2771207	0					
ANR	2771357	Identifier	onum		2771207	1					
ANR	2771358	ContinueStatement	continue ;	995:3:22097:22105	2771207	1	True				
ANR	2771359	CompoundStatement		29:2:473:473	2771207	6					
ANR	2771360	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Number '%s' is too big to fit in long"" , s )"	999:3:22116:22193	2771207	0	True				
ANR	2771361	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Number '%s' is too big to fit in long"" , s )"		2771207	0					
ANR	2771362	Callee	php_error_docref		2771207	0					
ANR	2771363	Identifier	php_error_docref		2771207	0					
ANR	2771364	ArgumentList	NULL		2771207	1					
ANR	2771365	Argument	NULL		2771207	0					
ANR	2771366	Identifier	NULL		2771207	0					
ANR	2771367	Argument	E_WARNING		2771207	1					
ANR	2771368	Identifier	E_WARNING		2771207	0					
ANR	2771369	Argument	"""Number '%s' is too big to fit in long"""		2771207	2					
ANR	2771370	PrimaryExpression	"""Number '%s' is too big to fit in long"""		2771207	0					
ANR	2771371	Argument	s		2771207	3					
ANR	2771372	Identifier	s		2771207	0					
ANR	2771373	ReturnStatement	return ZEND_LONG_MAX ;	1000:3:22198:22218	2771207	1	True				
ANR	2771374	Identifier	ZEND_LONG_MAX		2771207	0					
ANR	2771375	ReturnStatement	return num ;	1004:1:22229:22239	2771207	6	True				
ANR	2771376	Identifier	num		2771207	0					
ANR	2771377	ReturnType	PHPAPI zend_long		2771207	1					
ANR	2771378	Identifier	_php_math_basetolong		2771207	2					
ANR	2771379	ParameterList	"zval * arg , int base"		2771207	3					
ANR	2771380	Parameter	zval * arg	968:38:21615:21623	2771207	0	True				
ANR	2771381	ParameterType	zval *		2771207	0					
ANR	2771382	Identifier	arg		2771207	1					
ANR	2771383	Parameter	int base	968:49:21626:21633	2771207	1	True				
ANR	2771384	ParameterType	int		2771207	0					
ANR	2771385	Identifier	base		2771207	1					
ANR	2771386	CFGEntryNode	ENTRY		2771207		True				
ANR	2771387	CFGExitNode	EXIT		2771207		True				
ANR	2771388	Symbol	* s ++		2771207						
ANR	2771389	Symbol	onum		2771207						
ANR	2771390	Symbol	c		2771207						
ANR	2771391	Symbol	NULL		2771207						
ANR	2771392	Symbol	ZEND_LONG_MAX		2771207						
ANR	2771393	Symbol	num		2771207						
ANR	2771394	Symbol	i		2771207						
ANR	2771395	Symbol	Z_TYPE_P		2771207						
ANR	2771396	Symbol	Z_STRVAL_P		2771207						
ANR	2771397	Symbol	E_WARNING		2771207						
ANR	2771398	Symbol	s		2771207						
ANR	2771399	Symbol	arg		2771207						
ANR	2771400	Symbol	Z_STRLEN_P		2771207						
ANR	2771401	Symbol	IS_STRING		2771207						
ANR	2771402	Symbol	base		2771207						
ANR	2771403	Symbol	digit		2771207						
ANR	2771404	Function	_php_math_basetozval	1012:0:22361:23360							
ANR	2771405	FunctionDef	"_php_math_basetozval (zval * arg , int base , zval * ret)"		2771404	0					
ANR	2771406	CompoundStatement		1013:0:22425:23360	2771404	0					
ANR	2771407	IdentifierDeclStatement	zend_long num = 0 ;	1014:1:22428:22445	2771404	0	True				
ANR	2771408	IdentifierDecl	num = 0		2771404	0					
ANR	2771409	IdentifierDeclType	zend_long		2771404	0					
ANR	2771410	Identifier	num		2771404	1					
ANR	2771411	AssignmentExpression	num = 0		2771404	2		=			
ANR	2771412	Identifier	num		2771404	0					
ANR	2771413	PrimaryExpression	0		2771404	1					
ANR	2771414	IdentifierDeclStatement	double fnum = 0 ;	1015:1:22448:22463	2771404	1	True				
ANR	2771415	IdentifierDecl	fnum = 0		2771404	0					
ANR	2771416	IdentifierDeclType	double		2771404	0					
ANR	2771417	Identifier	fnum		2771404	1					
ANR	2771418	AssignmentExpression	fnum = 0		2771404	2		=			
ANR	2771419	Identifier	fnum		2771404	0					
ANR	2771420	PrimaryExpression	0		2771404	1					
ANR	2771421	IdentifierDeclStatement	zend_long i ;	1016:1:22466:22477	2771404	2	True				
ANR	2771422	IdentifierDecl	i		2771404	0					
ANR	2771423	IdentifierDeclType	zend_long		2771404	0					
ANR	2771424	Identifier	i		2771404	1					
ANR	2771425	IdentifierDeclStatement	int mode = 0 ;	1017:1:22480:22492	2771404	3	True				
ANR	2771426	IdentifierDecl	mode = 0		2771404	0					
ANR	2771427	IdentifierDeclType	int		2771404	0					
ANR	2771428	Identifier	mode		2771404	1					
ANR	2771429	AssignmentExpression	mode = 0		2771404	2		=			
ANR	2771430	Identifier	mode		2771404	0					
ANR	2771431	PrimaryExpression	0		2771404	1					
ANR	2771432	IdentifierDeclStatement	"char c , * s ;"	1018:1:22495:22505	2771404	4	True				
ANR	2771433	IdentifierDecl	c		2771404	0					
ANR	2771434	IdentifierDeclType	char		2771404	0					
ANR	2771435	Identifier	c		2771404	1					
ANR	2771436	IdentifierDecl	* s		2771404	1					
ANR	2771437	IdentifierDeclType	char *		2771404	0					
ANR	2771438	Identifier	s		2771404	1					
ANR	2771439	IdentifierDeclStatement	zend_long cutoff ;	1019:1:22508:22524	2771404	5	True				
ANR	2771440	IdentifierDecl	cutoff		2771404	0					
ANR	2771441	IdentifierDeclType	zend_long		2771404	0					
ANR	2771442	Identifier	cutoff		2771404	1					
ANR	2771443	IdentifierDeclStatement	int cutlim ;	1020:1:22527:22537	2771404	6	True				
ANR	2771444	IdentifierDecl	cutlim		2771404	0					
ANR	2771445	IdentifierDeclType	int		2771404	0					
ANR	2771446	Identifier	cutlim		2771404	1					
ANR	2771447	IfStatement	if ( Z_TYPE_P ( arg ) != IS_STRING || base < 2 || base > 36 )		2771404	7					
ANR	2771448	Condition	Z_TYPE_P ( arg ) != IS_STRING || base < 2 || base > 36	1022:5:22545:22595	2771404	0	True				
ANR	2771449	OrExpression	Z_TYPE_P ( arg ) != IS_STRING || base < 2 || base > 36		2771404	0		||			
ANR	2771450	EqualityExpression	Z_TYPE_P ( arg ) != IS_STRING		2771404	0		!=			
ANR	2771451	CallExpression	Z_TYPE_P ( arg )		2771404	0					
ANR	2771452	Callee	Z_TYPE_P		2771404	0					
ANR	2771453	Identifier	Z_TYPE_P		2771404	0					
ANR	2771454	ArgumentList	arg		2771404	1					
ANR	2771455	Argument	arg		2771404	0					
ANR	2771456	Identifier	arg		2771404	0					
ANR	2771457	Identifier	IS_STRING		2771404	1					
ANR	2771458	OrExpression	base < 2 || base > 36		2771404	1		||			
ANR	2771459	RelationalExpression	base < 2		2771404	0		<			
ANR	2771460	Identifier	base		2771404	0					
ANR	2771461	PrimaryExpression	2		2771404	1					
ANR	2771462	RelationalExpression	base > 36		2771404	1		>			
ANR	2771463	Identifier	base		2771404	0					
ANR	2771464	PrimaryExpression	36		2771404	1					
ANR	2771465	CompoundStatement		10:58:172:172	2771404	1					
ANR	2771466	ReturnStatement	return FAILURE ;	1023:2:22602:22616	2771404	0	True				
ANR	2771467	Identifier	FAILURE		2771404	0					
ANR	2771468	ExpressionStatement	s = Z_STRVAL_P ( arg )	1026:1:22623:22642	2771404	8	True				
ANR	2771469	AssignmentExpression	s = Z_STRVAL_P ( arg )		2771404	0		=			
ANR	2771470	Identifier	s		2771404	0					
ANR	2771471	CallExpression	Z_STRVAL_P ( arg )		2771404	1					
ANR	2771472	Callee	Z_STRVAL_P		2771404	0					
ANR	2771473	Identifier	Z_STRVAL_P		2771404	0					
ANR	2771474	ArgumentList	arg		2771404	1					
ANR	2771475	Argument	arg		2771404	0					
ANR	2771476	Identifier	arg		2771404	0					
ANR	2771477	ExpressionStatement	cutoff = ZEND_LONG_MAX / base	1028:1:22646:22675	2771404	9	True				
ANR	2771478	AssignmentExpression	cutoff = ZEND_LONG_MAX / base		2771404	0		=			
ANR	2771479	Identifier	cutoff		2771404	0					
ANR	2771480	MultiplicativeExpression	ZEND_LONG_MAX / base		2771404	1		/			
ANR	2771481	Identifier	ZEND_LONG_MAX		2771404	0					
ANR	2771482	Identifier	base		2771404	1					
ANR	2771483	ExpressionStatement	cutlim = ZEND_LONG_MAX % base	1029:1:22678:22707	2771404	10	True				
ANR	2771484	AssignmentExpression	cutlim = ZEND_LONG_MAX % base		2771404	0		=			
ANR	2771485	Identifier	cutlim		2771404	0					
ANR	2771486	MultiplicativeExpression	ZEND_LONG_MAX % base		2771404	1		%			
ANR	2771487	Identifier	ZEND_LONG_MAX		2771404	0					
ANR	2771488	Identifier	base		2771404	1					
ANR	2771489	ForStatement	for ( i = Z_STRLEN_P ( arg ) ; i > 0 ; i -- )		2771404	11					
ANR	2771490	ForInit	i = Z_STRLEN_P ( arg ) ;	1031:6:22716:22735	2771404	0	True				
ANR	2771491	AssignmentExpression	i = Z_STRLEN_P ( arg )		2771404	0		=			
ANR	2771492	Identifier	i		2771404	0					
ANR	2771493	CallExpression	Z_STRLEN_P ( arg )		2771404	1					
ANR	2771494	Callee	Z_STRLEN_P		2771404	0					
ANR	2771495	Identifier	Z_STRLEN_P		2771404	0					
ANR	2771496	ArgumentList	arg		2771404	1					
ANR	2771497	Argument	arg		2771404	0					
ANR	2771498	Identifier	arg		2771404	0					
ANR	2771499	Condition	i > 0	1031:27:22737:22741	2771404	1	True				
ANR	2771500	RelationalExpression	i > 0		2771404	0		>			
ANR	2771501	Identifier	i		2771404	0					
ANR	2771502	PrimaryExpression	0		2771404	1					
ANR	2771503	PostIncDecOperationExpression	i --	1031:34:22744:22746	2771404	2	True				
ANR	2771504	Identifier	i		2771404	0					
ANR	2771505	IncDec	--		2771404	1					
ANR	2771506	CompoundStatement		19:39:323:323	2771404	3					
ANR	2771507	ExpressionStatement	c = * s ++	1032:2:22753:22761	2771404	0	True				
ANR	2771508	AssignmentExpression	c = * s ++		2771404	0		=			
ANR	2771509	Identifier	c		2771404	0					
ANR	2771510	UnaryOperationExpression	* s ++		2771404	1					
ANR	2771511	UnaryOperator	*		2771404	0					
ANR	2771512	PostIncDecOperationExpression	s ++		2771404	1					
ANR	2771513	Identifier	s		2771404	0					
ANR	2771514	IncDec	++		2771404	1					
ANR	2771515	IfStatement	if ( c >= '0' && c <= '9' )		2771404	1					
ANR	2771516	Condition	c >= '0' && c <= '9'	1035:6:22804:22823	2771404	0	True				
ANR	2771517	AndExpression	c >= '0' && c <= '9'		2771404	0		&&			
ANR	2771518	RelationalExpression	c >= '0'		2771404	0		>=			
ANR	2771519	Identifier	c		2771404	0					
ANR	2771520	PrimaryExpression	'0'		2771404	1					
ANR	2771521	RelationalExpression	c <= '9'		2771404	1		<=			
ANR	2771522	Identifier	c		2771404	0					
ANR	2771523	PrimaryExpression	'9'		2771404	1					
ANR	2771524	ExpressionStatement	c -= '0'	1036:3:22829:22837	2771404	1	True				
ANR	2771525	AssignmentExpression	c -= '0'		2771404	0		-=			
ANR	2771526	Identifier	c		2771404	0					
ANR	2771527	PrimaryExpression	'0'		2771404	1					
ANR	2771528	ElseStatement	else		2771404	0					
ANR	2771529	IfStatement	if ( c >= 'A' && c <= 'Z' )		2771404	0					
ANR	2771530	Condition	c >= 'A' && c <= 'Z'	1037:11:22850:22869	2771404	0	True				
ANR	2771531	AndExpression	c >= 'A' && c <= 'Z'		2771404	0		&&			
ANR	2771532	RelationalExpression	c >= 'A'		2771404	0		>=			
ANR	2771533	Identifier	c		2771404	0					
ANR	2771534	PrimaryExpression	'A'		2771404	1					
ANR	2771535	RelationalExpression	c <= 'Z'		2771404	1		<=			
ANR	2771536	Identifier	c		2771404	0					
ANR	2771537	PrimaryExpression	'Z'		2771404	1					
ANR	2771538	ExpressionStatement	c -= 'A' - 10	1038:3:22875:22888	2771404	1	True				
ANR	2771539	AssignmentExpression	c -= 'A' - 10		2771404	0		-=			
ANR	2771540	Identifier	c		2771404	0					
ANR	2771541	AdditiveExpression	'A' - 10		2771404	1		-			
ANR	2771542	PrimaryExpression	'A'		2771404	0					
ANR	2771543	PrimaryExpression	10		2771404	1					
ANR	2771544	ElseStatement	else		2771404	0					
ANR	2771545	IfStatement	if ( c >= 'a' && c <= 'z' )		2771404	0					
ANR	2771546	Condition	c >= 'a' && c <= 'z'	1039:11:22901:22920	2771404	0	True				
ANR	2771547	AndExpression	c >= 'a' && c <= 'z'		2771404	0		&&			
ANR	2771548	RelationalExpression	c >= 'a'		2771404	0		>=			
ANR	2771549	Identifier	c		2771404	0					
ANR	2771550	PrimaryExpression	'a'		2771404	1					
ANR	2771551	RelationalExpression	c <= 'z'		2771404	1		<=			
ANR	2771552	Identifier	c		2771404	0					
ANR	2771553	PrimaryExpression	'z'		2771404	1					
ANR	2771554	ExpressionStatement	c -= 'a' - 10	1040:3:22926:22939	2771404	1	True				
ANR	2771555	AssignmentExpression	c -= 'a' - 10		2771404	0		-=			
ANR	2771556	Identifier	c		2771404	0					
ANR	2771557	AdditiveExpression	'a' - 10		2771404	1		-			
ANR	2771558	PrimaryExpression	'a'		2771404	0					
ANR	2771559	PrimaryExpression	10		2771404	1					
ANR	2771560	ElseStatement	else		2771404	0					
ANR	2771561	ContinueStatement	continue ;	1042:3:22951:22959	2771404	0	True				
ANR	2771562	IfStatement	if ( c >= base )		2771404	2					
ANR	2771563	Condition	c >= base	1044:6:22968:22976	2771404	0	True				
ANR	2771564	RelationalExpression	c >= base		2771404	0		>=			
ANR	2771565	Identifier	c		2771404	0					
ANR	2771566	Identifier	base		2771404	1					
ANR	2771567	ContinueStatement	continue ;	1045:3:22982:22990	2771404	1	True				
ANR	2771568	SwitchStatement	switch ( mode )		2771404	3					
ANR	2771569	Condition	mode	1047:10:23003:23006	2771404	0	True				
ANR	2771570	Identifier	mode		2771404	0					
ANR	2771571	CompoundStatement		35:16:583:583	2771404	1					
ANR	2771572	Label	case 0 :	1048:2:23013:23019	2771404	0	True				
ANR	2771573	IfStatement	if ( num < cutoff || ( num == cutoff && c <= cutlim ) )		2771404	1					
ANR	2771574	Condition	num < cutoff || ( num == cutoff && c <= cutlim )	1049:7:23042:23087	2771404	0	True				
ANR	2771575	OrExpression	num < cutoff || ( num == cutoff && c <= cutlim )		2771404	0		||			
ANR	2771576	RelationalExpression	num < cutoff		2771404	0		<			
ANR	2771577	Identifier	num		2771404	0					
ANR	2771578	Identifier	cutoff		2771404	1					
ANR	2771579	AndExpression	num == cutoff && c <= cutlim		2771404	1		&&			
ANR	2771580	EqualityExpression	num == cutoff		2771404	0		==			
ANR	2771581	Identifier	num		2771404	0					
ANR	2771582	Identifier	cutoff		2771404	1					
ANR	2771583	RelationalExpression	c <= cutlim		2771404	1		<=			
ANR	2771584	Identifier	c		2771404	0					
ANR	2771585	Identifier	cutlim		2771404	1					
ANR	2771586	CompoundStatement		37:55:664:664	2771404	1					
ANR	2771587	ExpressionStatement	num = num * base + c	1050:4:23096:23116	2771404	0	True				
ANR	2771588	AssignmentExpression	num = num * base + c		2771404	0		=			
ANR	2771589	Identifier	num		2771404	0					
ANR	2771590	AdditiveExpression	num * base + c		2771404	1		+			
ANR	2771591	MultiplicativeExpression	num * base		2771404	0		*			
ANR	2771592	Identifier	num		2771404	0					
ANR	2771593	Identifier	base		2771404	1					
ANR	2771594	Identifier	c		2771404	1					
ANR	2771595	BreakStatement	break ;	1051:4:23122:23127	2771404	1	True				
ANR	2771596	ElseStatement	else		2771404	0					
ANR	2771597	CompoundStatement		40:10:713:713	2771404	0					
ANR	2771598	ExpressionStatement	fnum = ( double ) num	1053:4:23145:23163	2771404	0	True				
ANR	2771599	AssignmentExpression	fnum = ( double ) num		2771404	0		=			
ANR	2771600	Identifier	fnum		2771404	0					
ANR	2771601	CastExpression	( double ) num		2771404	1					
ANR	2771602	CastTarget	double		2771404	0					
ANR	2771603	Identifier	num		2771404	1					
ANR	2771604	ExpressionStatement	mode = 1	1054:4:23169:23177	2771404	1	True				
ANR	2771605	AssignmentExpression	mode = 1		2771404	0		=			
ANR	2771606	Identifier	mode		2771404	0					
ANR	2771607	PrimaryExpression	1		2771404	1					
ANR	2771608	Label	case 1 :	1057:2:23208:23214	2771404	2	True				
ANR	2771609	ExpressionStatement	fnum = fnum * base + c	1058:3:23231:23253	2771404	3	True				
ANR	2771610	AssignmentExpression	fnum = fnum * base + c		2771404	0		=			
ANR	2771611	Identifier	fnum		2771404	0					
ANR	2771612	AdditiveExpression	fnum * base + c		2771404	1		+			
ANR	2771613	MultiplicativeExpression	fnum * base		2771404	0		*			
ANR	2771614	Identifier	fnum		2771404	0					
ANR	2771615	Identifier	base		2771404	1					
ANR	2771616	Identifier	c		2771404	1					
ANR	2771617	IfStatement	if ( mode == 1 )		2771404	12					
ANR	2771618	Condition	mode == 1	1062:5:23268:23276	2771404	0	True				
ANR	2771619	EqualityExpression	mode == 1		2771404	0		==			
ANR	2771620	Identifier	mode		2771404	0					
ANR	2771621	PrimaryExpression	1		2771404	1					
ANR	2771622	CompoundStatement		50:16:853:853	2771404	1					
ANR	2771623	ExpressionStatement	"ZVAL_DOUBLE ( ret , fnum )"	1063:2:23283:23305	2771404	0	True				
ANR	2771624	CallExpression	"ZVAL_DOUBLE ( ret , fnum )"		2771404	0					
ANR	2771625	Callee	ZVAL_DOUBLE		2771404	0					
ANR	2771626	Identifier	ZVAL_DOUBLE		2771404	0					
ANR	2771627	ArgumentList	ret		2771404	1					
ANR	2771628	Argument	ret		2771404	0					
ANR	2771629	Identifier	ret		2771404	0					
ANR	2771630	Argument	fnum		2771404	1					
ANR	2771631	Identifier	fnum		2771404	0					
ANR	2771632	ElseStatement	else		2771404	0					
ANR	2771633	CompoundStatement		52:8:889:889	2771404	0					
ANR	2771634	ExpressionStatement	"ZVAL_LONG ( ret , num )"	1065:2:23319:23338	2771404	0	True				
ANR	2771635	CallExpression	"ZVAL_LONG ( ret , num )"		2771404	0					
ANR	2771636	Callee	ZVAL_LONG		2771404	0					
ANR	2771637	Identifier	ZVAL_LONG		2771404	0					
ANR	2771638	ArgumentList	ret		2771404	1					
ANR	2771639	Argument	ret		2771404	0					
ANR	2771640	Identifier	ret		2771404	0					
ANR	2771641	Argument	num		2771404	1					
ANR	2771642	Identifier	num		2771404	0					
ANR	2771643	ReturnStatement	return SUCCESS ;	1067:1:23344:23358	2771404	13	True				
ANR	2771644	Identifier	SUCCESS		2771404	0					
ANR	2771645	ReturnType	PHPAPI int		2771404	1					
ANR	2771646	Identifier	_php_math_basetozval		2771404	2					
ANR	2771647	ParameterList	"zval * arg , int base , zval * ret"		2771404	3					
ANR	2771648	Parameter	zval * arg	1012:32:22393:22401	2771404	0	True				
ANR	2771649	ParameterType	zval *		2771404	0					
ANR	2771650	Identifier	arg		2771404	1					
ANR	2771651	Parameter	int base	1012:43:22404:22411	2771404	1	True				
ANR	2771652	ParameterType	int		2771404	0					
ANR	2771653	Identifier	base		2771404	1					
ANR	2771654	Parameter	zval * ret	1012:53:22414:22422	2771404	2	True				
ANR	2771655	ParameterType	zval *		2771404	0					
ANR	2771656	Identifier	ret		2771404	1					
ANR	2771657	CFGEntryNode	ENTRY		2771404		True				
ANR	2771658	CFGExitNode	EXIT		2771404		True				
ANR	2771659	Symbol	ret		2771404						
ANR	2771660	Symbol	* s ++		2771404						
ANR	2771661	Symbol	c		2771404						
ANR	2771662	Symbol	ZEND_LONG_MAX		2771404						
ANR	2771663	Symbol	SUCCESS		2771404						
ANR	2771664	Symbol	num		2771404						
ANR	2771665	Symbol	i		2771404						
ANR	2771666	Symbol	Z_TYPE_P		2771404						
ANR	2771667	Symbol	FAILURE		2771404						
ANR	2771668	Symbol	Z_STRVAL_P		2771404						
ANR	2771669	Symbol	fnum		2771404						
ANR	2771670	Symbol	mode		2771404						
ANR	2771671	Symbol	s		2771404						
ANR	2771672	Symbol	arg		2771404						
ANR	2771673	Symbol	cutlim		2771404						
ANR	2771674	Symbol	Z_STRLEN_P		2771404						
ANR	2771675	Symbol	cutoff		2771404						
ANR	2771676	Symbol	IS_STRING		2771404						
ANR	2771677	Symbol	base		2771404						
ANR	2771678	Function	_php_math_longtobase	1076:0:23498:24007							
ANR	2771679	FunctionDef	"_php_math_longtobase (zval * arg , int base)"		2771678	0					
ANR	2771680	CompoundStatement		1077:0:23561:24007	2771678	0					
ANR	2771681	Statement	static	1078:1:23564:23569	2771678	0	True				
ANR	2771682	IdentifierDeclStatement	"char digits [ ] = ""0123456789abcdefghijklmnopqrstuvwxyz"" ;"	1078:8:23571:23625	2771678	1	True				
ANR	2771683	IdentifierDecl	"digits [ ] = ""0123456789abcdefghijklmnopqrstuvwxyz"""		2771678	0					
ANR	2771684	IdentifierDeclType	char [ ]		2771678	0					
ANR	2771685	Identifier	digits		2771678	1					
ANR	2771686	AssignmentExpression	"digits [ ] = ""0123456789abcdefghijklmnopqrstuvwxyz"""		2771678	2		=			
ANR	2771687	Identifier	digits		2771678	0					
ANR	2771688	PrimaryExpression	"""0123456789abcdefghijklmnopqrstuvwxyz"""		2771678	1					
ANR	2771689	IdentifierDeclStatement	char buf [ ( sizeof ( zend_ulong ) << 3 ) + 1 ] ;	1079:1:23628:23667	2771678	2	True				
ANR	2771690	IdentifierDecl	buf [ ( sizeof ( zend_ulong ) << 3 ) + 1 ]		2771678	0					
ANR	2771691	IdentifierDeclType	char [ ( sizeof ( zend_ulong ) << 3 ) + 1 ]		2771678	0					
ANR	2771692	Identifier	buf		2771678	1					
ANR	2771693	AdditiveExpression	( sizeof ( zend_ulong ) << 3 ) + 1		2771678	2		+			
ANR	2771694	ShiftExpression	sizeof ( zend_ulong ) << 3		2771678	0		<<			
ANR	2771695	SizeofExpression	sizeof ( zend_ulong )		2771678	0					
ANR	2771696	Sizeof	sizeof		2771678	0					
ANR	2771697	SizeofOperand	zend_ulong		2771678	1					
ANR	2771698	PrimaryExpression	3		2771678	1					
ANR	2771699	PrimaryExpression	1		2771678	1					
ANR	2771700	IdentifierDeclStatement	"char * ptr , * end ;"	1080:1:23670:23685	2771678	3	True				
ANR	2771701	IdentifierDecl	* ptr		2771678	0					
ANR	2771702	IdentifierDeclType	char *		2771678	0					
ANR	2771703	Identifier	ptr		2771678	1					
ANR	2771704	IdentifierDecl	* end		2771678	1					
ANR	2771705	IdentifierDeclType	char *		2771678	0					
ANR	2771706	Identifier	end		2771678	1					
ANR	2771707	IdentifierDeclStatement	zend_ulong value ;	1081:1:23688:23704	2771678	4	True				
ANR	2771708	IdentifierDecl	value		2771678	0					
ANR	2771709	IdentifierDeclType	zend_ulong		2771678	0					
ANR	2771710	Identifier	value		2771678	1					
ANR	2771711	IfStatement	if ( Z_TYPE_P ( arg ) != IS_LONG || base < 2 || base > 36 )		2771678	5					
ANR	2771712	Condition	Z_TYPE_P ( arg ) != IS_LONG || base < 2 || base > 36	1083:5:23712:23760	2771678	0	True				
ANR	2771713	OrExpression	Z_TYPE_P ( arg ) != IS_LONG || base < 2 || base > 36		2771678	0		||			
ANR	2771714	EqualityExpression	Z_TYPE_P ( arg ) != IS_LONG		2771678	0		!=			
ANR	2771715	CallExpression	Z_TYPE_P ( arg )		2771678	0					
ANR	2771716	Callee	Z_TYPE_P		2771678	0					
ANR	2771717	Identifier	Z_TYPE_P		2771678	0					
ANR	2771718	ArgumentList	arg		2771678	1					
ANR	2771719	Argument	arg		2771678	0					
ANR	2771720	Identifier	arg		2771678	0					
ANR	2771721	Identifier	IS_LONG		2771678	1					
ANR	2771722	OrExpression	base < 2 || base > 36		2771678	1		||			
ANR	2771723	RelationalExpression	base < 2		2771678	0		<			
ANR	2771724	Identifier	base		2771678	0					
ANR	2771725	PrimaryExpression	2		2771678	1					
ANR	2771726	RelationalExpression	base > 36		2771678	1		>			
ANR	2771727	Identifier	base		2771678	0					
ANR	2771728	PrimaryExpression	36		2771678	1					
ANR	2771729	CompoundStatement		7:56:201:201	2771678	1					
ANR	2771730	ReturnStatement	return ZSTR_EMPTY_ALLOC ( ) ;	1084:2:23767:23792	2771678	0	True				
ANR	2771731	CallExpression	ZSTR_EMPTY_ALLOC ( )		2771678	0					
ANR	2771732	Callee	ZSTR_EMPTY_ALLOC		2771678	0					
ANR	2771733	Identifier	ZSTR_EMPTY_ALLOC		2771678	0					
ANR	2771734	ArgumentList			2771678	1					
ANR	2771735	ExpressionStatement	value = Z_LVAL_P ( arg )	1087:1:23799:23820	2771678	6	True				
ANR	2771736	AssignmentExpression	value = Z_LVAL_P ( arg )		2771678	0		=			
ANR	2771737	Identifier	value		2771678	0					
ANR	2771738	CallExpression	Z_LVAL_P ( arg )		2771678	1					
ANR	2771739	Callee	Z_LVAL_P		2771678	0					
ANR	2771740	Identifier	Z_LVAL_P		2771678	0					
ANR	2771741	ArgumentList	arg		2771678	1					
ANR	2771742	Argument	arg		2771678	0					
ANR	2771743	Identifier	arg		2771678	0					
ANR	2771744	ExpressionStatement	end = ptr = buf + sizeof ( buf ) - 1	1089:1:23824:23857	2771678	7	True				
ANR	2771745	AssignmentExpression	end = ptr = buf + sizeof ( buf ) - 1		2771678	0		=			
ANR	2771746	Identifier	end		2771678	0					
ANR	2771747	AssignmentExpression	ptr = buf + sizeof ( buf ) - 1		2771678	1		=			
ANR	2771748	Identifier	ptr		2771678	0					
ANR	2771749	AdditiveExpression	buf + sizeof ( buf ) - 1		2771678	1		+			
ANR	2771750	Identifier	buf		2771678	0					
ANR	2771751	AdditiveExpression	sizeof ( buf ) - 1		2771678	1		-			
ANR	2771752	SizeofExpression	sizeof ( buf )		2771678	0					
ANR	2771753	Sizeof	sizeof		2771678	0					
ANR	2771754	SizeofOperand	buf		2771678	1					
ANR	2771755	PrimaryExpression	1		2771678	1					
ANR	2771756	ExpressionStatement	* ptr = '\\0'	1090:1:23860:23871	2771678	8	True				
ANR	2771757	AssignmentExpression	* ptr = '\\0'		2771678	0		=			
ANR	2771758	UnaryOperationExpression	* ptr		2771678	0					
ANR	2771759	UnaryOperator	*		2771678	0					
ANR	2771760	Identifier	ptr		2771678	1					
ANR	2771761	PrimaryExpression	'\\0'		2771678	1					
ANR	2771762	DoStatement	do		2771678	9					
ANR	2771763	CompoundStatement		16:4:316:316	2771678	0					
ANR	2771764	ExpressionStatement	* -- ptr = digits [ value % base ]	1093:2:23882:23911	2771678	0	True				
ANR	2771765	AssignmentExpression	* -- ptr = digits [ value % base ]		2771678	0		=			
ANR	2771766	UnaryOperationExpression	* -- ptr		2771678	0					
ANR	2771767	UnaryOperator	*		2771678	0					
ANR	2771768	UnaryExpression	-- ptr		2771678	1					
ANR	2771769	IncDec	--		2771678	0					
ANR	2771770	Identifier	ptr		2771678	1					
ANR	2771771	ArrayIndexing	digits [ value % base ]		2771678	1					
ANR	2771772	Identifier	digits		2771678	0					
ANR	2771773	MultiplicativeExpression	value % base		2771678	1		%			
ANR	2771774	Identifier	value		2771678	0					
ANR	2771775	Identifier	base		2771678	1					
ANR	2771776	ExpressionStatement	value /= base	1094:2:23915:23928	2771678	1	True				
ANR	2771777	AssignmentExpression	value /= base		2771678	0		/=			
ANR	2771778	Identifier	value		2771678	0					
ANR	2771779	Identifier	base		2771678	1					
ANR	2771780	Condition	ptr > buf && value	1095:10:23940:23957	2771678	1	True				
ANR	2771781	AndExpression	ptr > buf && value		2771678	0		&&			
ANR	2771782	RelationalExpression	ptr > buf		2771678	0		>			
ANR	2771783	Identifier	ptr		2771678	0					
ANR	2771784	Identifier	buf		2771678	1					
ANR	2771785	Identifier	value		2771678	1					
ANR	2771786	ReturnStatement	"return zend_string_init ( ptr , end - ptr , 0 ) ;"	1097:1:23963:24005	2771678	10	True				
ANR	2771787	CallExpression	"zend_string_init ( ptr , end - ptr , 0 )"		2771678	0					
ANR	2771788	Callee	zend_string_init		2771678	0					
ANR	2771789	Identifier	zend_string_init		2771678	0					
ANR	2771790	ArgumentList	ptr		2771678	1					
ANR	2771791	Argument	ptr		2771678	0					
ANR	2771792	Identifier	ptr		2771678	0					
ANR	2771793	Argument	end - ptr		2771678	1					
ANR	2771794	AdditiveExpression	end - ptr		2771678	0		-			
ANR	2771795	Identifier	end		2771678	0					
ANR	2771796	Identifier	ptr		2771678	1					
ANR	2771797	Argument	0		2771678	2					
ANR	2771798	PrimaryExpression	0		2771678	0					
ANR	2771799	ReturnType	PHPAPI zend_string *		2771678	1					
ANR	2771800	Identifier	_php_math_longtobase		2771678	2					
ANR	2771801	ParameterList	"zval * arg , int base"		2771678	3					
ANR	2771802	Parameter	zval * arg	1076:42:23540:23548	2771678	0	True				
ANR	2771803	ParameterType	zval *		2771678	0					
ANR	2771804	Identifier	arg		2771678	1					
ANR	2771805	Parameter	int base	1076:53:23551:23558	2771678	1	True				
ANR	2771806	ParameterType	int		2771678	0					
ANR	2771807	Identifier	base		2771678	1					
ANR	2771808	CFGEntryNode	ENTRY		2771678		True				
ANR	2771809	CFGExitNode	EXIT		2771678		True				
ANR	2771810	Symbol	* digits		2771678						
ANR	2771811	Symbol	* -- ptr		2771678						
ANR	2771812	Symbol	Z_TYPE_P		2771678						
ANR	2771813	Symbol	ZSTR_EMPTY_ALLOC		2771678						
ANR	2771814	Symbol	ptr		2771678						
ANR	2771815	Symbol	Z_LVAL_P		2771678						
ANR	2771816	Symbol	zend_string_init		2771678						
ANR	2771817	Symbol	buf		2771678						
ANR	2771818	Symbol	IS_LONG		2771678						
ANR	2771819	Symbol	* value		2771678						
ANR	2771820	Symbol	arg		2771678						
ANR	2771821	Symbol	* ptr		2771678						
ANR	2771822	Symbol	digits		2771678						
ANR	2771823	Symbol	end		2771678						
ANR	2771824	Symbol	* base		2771678						
ANR	2771825	Symbol	value		2771678						
ANR	2771826	Symbol	base		2771678						
ANR	2771827	Function	_php_math_zvaltobase	1106:0:24145:25007							
ANR	2771828	FunctionDef	"_php_math_zvaltobase (zval * arg , int base)"		2771827	0					
ANR	2771829	CompoundStatement		1107:0:24208:25007	2771827	0					
ANR	2771830	Statement	static	1108:1:24211:24216	2771827	0	True				
ANR	2771831	IdentifierDeclStatement	"char digits [ ] = ""0123456789abcdefghijklmnopqrstuvwxyz"" ;"	1108:8:24218:24272	2771827	1	True				
ANR	2771832	IdentifierDecl	"digits [ ] = ""0123456789abcdefghijklmnopqrstuvwxyz"""		2771827	0					
ANR	2771833	IdentifierDeclType	char [ ]		2771827	0					
ANR	2771834	Identifier	digits		2771827	1					
ANR	2771835	AssignmentExpression	"digits [ ] = ""0123456789abcdefghijklmnopqrstuvwxyz"""		2771827	2		=			
ANR	2771836	Identifier	digits		2771827	0					
ANR	2771837	PrimaryExpression	"""0123456789abcdefghijklmnopqrstuvwxyz"""		2771827	1					
ANR	2771838	IfStatement	if ( ( Z_TYPE_P ( arg ) != IS_LONG && Z_TYPE_P ( arg ) != IS_DOUBLE ) || base < 2 || base > 36 )		2771827	2					
ANR	2771839	Condition	( Z_TYPE_P ( arg ) != IS_LONG && Z_TYPE_P ( arg ) != IS_DOUBLE ) || base < 2 || base > 36	1110:5:24280:24360	2771827	0	True				
ANR	2771840	OrExpression	( Z_TYPE_P ( arg ) != IS_LONG && Z_TYPE_P ( arg ) != IS_DOUBLE ) || base < 2 || base > 36		2771827	0		||			
ANR	2771841	AndExpression	Z_TYPE_P ( arg ) != IS_LONG && Z_TYPE_P ( arg ) != IS_DOUBLE		2771827	0		&&			
ANR	2771842	EqualityExpression	Z_TYPE_P ( arg ) != IS_LONG		2771827	0		!=			
ANR	2771843	CallExpression	Z_TYPE_P ( arg )		2771827	0					
ANR	2771844	Callee	Z_TYPE_P		2771827	0					
ANR	2771845	Identifier	Z_TYPE_P		2771827	0					
ANR	2771846	ArgumentList	arg		2771827	1					
ANR	2771847	Argument	arg		2771827	0					
ANR	2771848	Identifier	arg		2771827	0					
ANR	2771849	Identifier	IS_LONG		2771827	1					
ANR	2771850	EqualityExpression	Z_TYPE_P ( arg ) != IS_DOUBLE		2771827	1		!=			
ANR	2771851	CallExpression	Z_TYPE_P ( arg )		2771827	0					
ANR	2771852	Callee	Z_TYPE_P		2771827	0					
ANR	2771853	Identifier	Z_TYPE_P		2771827	0					
ANR	2771854	ArgumentList	arg		2771827	1					
ANR	2771855	Argument	arg		2771827	0					
ANR	2771856	Identifier	arg		2771827	0					
ANR	2771857	Identifier	IS_DOUBLE		2771827	1					
ANR	2771858	OrExpression	base < 2 || base > 36		2771827	1		||			
ANR	2771859	RelationalExpression	base < 2		2771827	0		<			
ANR	2771860	Identifier	base		2771827	0					
ANR	2771861	PrimaryExpression	2		2771827	1					
ANR	2771862	RelationalExpression	base > 36		2771827	1		>			
ANR	2771863	Identifier	base		2771827	0					
ANR	2771864	PrimaryExpression	36		2771827	1					
ANR	2771865	CompoundStatement		4:88:154:154	2771827	1					
ANR	2771866	ReturnStatement	return ZSTR_EMPTY_ALLOC ( ) ;	1111:2:24367:24392	2771827	0	True				
ANR	2771867	CallExpression	ZSTR_EMPTY_ALLOC ( )		2771827	0					
ANR	2771868	Callee	ZSTR_EMPTY_ALLOC		2771827	0					
ANR	2771869	Identifier	ZSTR_EMPTY_ALLOC		2771827	0					
ANR	2771870	ArgumentList			2771827	1					
ANR	2771871	IfStatement	if ( Z_TYPE_P ( arg ) == IS_DOUBLE )		2771827	3					
ANR	2771872	Condition	Z_TYPE_P ( arg ) == IS_DOUBLE	1114:5:24403:24428	2771827	0	True				
ANR	2771873	EqualityExpression	Z_TYPE_P ( arg ) == IS_DOUBLE		2771827	0		==			
ANR	2771874	CallExpression	Z_TYPE_P ( arg )		2771827	0					
ANR	2771875	Callee	Z_TYPE_P		2771827	0					
ANR	2771876	Identifier	Z_TYPE_P		2771827	0					
ANR	2771877	ArgumentList	arg		2771827	1					
ANR	2771878	Argument	arg		2771827	0					
ANR	2771879	Identifier	arg		2771827	0					
ANR	2771880	Identifier	IS_DOUBLE		2771827	1					
ANR	2771881	CompoundStatement		11:2:313:348	2771827	1					
ANR	2771882	IdentifierDeclStatement	double fvalue = floor ( Z_DVAL_P ( arg ) ) ;	1115:2:24435:24471	2771827	0	True				
ANR	2771883	IdentifierDecl	fvalue = floor ( Z_DVAL_P ( arg ) )		2771827	0					
ANR	2771884	IdentifierDeclType	double		2771827	0					
ANR	2771885	Identifier	fvalue		2771827	1					
ANR	2771886	AssignmentExpression	fvalue = floor ( Z_DVAL_P ( arg ) )		2771827	2		=			
ANR	2771887	Identifier	fvalue		2771827	0					
ANR	2771888	CallExpression	floor ( Z_DVAL_P ( arg ) )		2771827	1					
ANR	2771889	Callee	floor		2771827	0					
ANR	2771890	Identifier	floor		2771827	0					
ANR	2771891	ArgumentList	Z_DVAL_P ( arg )		2771827	1					
ANR	2771892	Argument	Z_DVAL_P ( arg )		2771827	0					
ANR	2771893	CallExpression	Z_DVAL_P ( arg )		2771827	0					
ANR	2771894	Callee	Z_DVAL_P		2771827	0					
ANR	2771895	Identifier	Z_DVAL_P		2771827	0					
ANR	2771896	ArgumentList	arg		2771827	1					
ANR	2771897	Argument	arg		2771827	0					
ANR	2771898	Identifier	arg		2771827	0					
ANR	2771899	IdentifierDeclStatement	"char * ptr , * end ;"	1116:2:24503:24518	2771827	1	True				
ANR	2771900	IdentifierDecl	* ptr		2771827	0					
ANR	2771901	IdentifierDeclType	char *		2771827	0					
ANR	2771902	Identifier	ptr		2771827	1					
ANR	2771903	IdentifierDecl	* end		2771827	1					
ANR	2771904	IdentifierDeclType	char *		2771827	0					
ANR	2771905	Identifier	end		2771827	1					
ANR	2771906	IdentifierDeclStatement	char buf [ ( sizeof ( double ) << 3 ) + 1 ] ;	1117:2:24522:24557	2771827	2	True				
ANR	2771907	IdentifierDecl	buf [ ( sizeof ( double ) << 3 ) + 1 ]		2771827	0					
ANR	2771908	IdentifierDeclType	char [ ( sizeof ( double ) << 3 ) + 1 ]		2771827	0					
ANR	2771909	Identifier	buf		2771827	1					
ANR	2771910	AdditiveExpression	( sizeof ( double ) << 3 ) + 1		2771827	2		+			
ANR	2771911	ShiftExpression	sizeof ( double ) << 3		2771827	0		<<			
ANR	2771912	SizeofExpression	sizeof ( double )		2771827	0					
ANR	2771913	Sizeof	sizeof		2771827	0					
ANR	2771914	SizeofOperand	double		2771827	1					
ANR	2771915	PrimaryExpression	3		2771827	1					
ANR	2771916	PrimaryExpression	1		2771827	1					
ANR	2771917	IfStatement	if ( fvalue == HUGE_VAL || fvalue == - HUGE_VAL )		2771827	3					
ANR	2771918	Condition	fvalue == HUGE_VAL || fvalue == - HUGE_VAL	1120:6:24608:24648	2771827	0	True				
ANR	2771919	OrExpression	fvalue == HUGE_VAL || fvalue == - HUGE_VAL		2771827	0		||			
ANR	2771920	EqualityExpression	fvalue == HUGE_VAL		2771827	0		==			
ANR	2771921	Identifier	fvalue		2771827	0					
ANR	2771922	Identifier	HUGE_VAL		2771827	1					
ANR	2771923	EqualityExpression	fvalue == - HUGE_VAL		2771827	1		==			
ANR	2771924	Identifier	fvalue		2771827	0					
ANR	2771925	UnaryOperationExpression	- HUGE_VAL		2771827	1					
ANR	2771926	UnaryOperator	-		2771827	0					
ANR	2771927	Identifier	HUGE_VAL		2771827	1					
ANR	2771928	CompoundStatement		14:49:442:442	2771827	1					
ANR	2771929	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Number too large"" )"	1121:3:24656:24709	2771827	0	True				
ANR	2771930	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Number too large"" )"		2771827	0					
ANR	2771931	Callee	php_error_docref		2771827	0					
ANR	2771932	Identifier	php_error_docref		2771827	0					
ANR	2771933	ArgumentList	NULL		2771827	1					
ANR	2771934	Argument	NULL		2771827	0					
ANR	2771935	Identifier	NULL		2771827	0					
ANR	2771936	Argument	E_WARNING		2771827	1					
ANR	2771937	Identifier	E_WARNING		2771827	0					
ANR	2771938	Argument	"""Number too large"""		2771827	2					
ANR	2771939	PrimaryExpression	"""Number too large"""		2771827	0					
ANR	2771940	ReturnStatement	return ZSTR_EMPTY_ALLOC ( ) ;	1122:3:24714:24739	2771827	1	True				
ANR	2771941	CallExpression	ZSTR_EMPTY_ALLOC ( )		2771827	0					
ANR	2771942	Callee	ZSTR_EMPTY_ALLOC		2771827	0					
ANR	2771943	Identifier	ZSTR_EMPTY_ALLOC		2771827	0					
ANR	2771944	ArgumentList			2771827	1					
ANR	2771945	ExpressionStatement	end = ptr = buf + sizeof ( buf ) - 1	1125:2:24748:24781	2771827	4	True				
ANR	2771946	AssignmentExpression	end = ptr = buf + sizeof ( buf ) - 1		2771827	0		=			
ANR	2771947	Identifier	end		2771827	0					
ANR	2771948	AssignmentExpression	ptr = buf + sizeof ( buf ) - 1		2771827	1		=			
ANR	2771949	Identifier	ptr		2771827	0					
ANR	2771950	AdditiveExpression	buf + sizeof ( buf ) - 1		2771827	1		+			
ANR	2771951	Identifier	buf		2771827	0					
ANR	2771952	AdditiveExpression	sizeof ( buf ) - 1		2771827	1		-			
ANR	2771953	SizeofExpression	sizeof ( buf )		2771827	0					
ANR	2771954	Sizeof	sizeof		2771827	0					
ANR	2771955	SizeofOperand	buf		2771827	1					
ANR	2771956	PrimaryExpression	1		2771827	1					
ANR	2771957	ExpressionStatement	* ptr = '\\0'	1126:2:24785:24796	2771827	5	True				
ANR	2771958	AssignmentExpression	* ptr = '\\0'		2771827	0		=			
ANR	2771959	UnaryOperationExpression	* ptr		2771827	0					
ANR	2771960	UnaryOperator	*		2771827	0					
ANR	2771961	Identifier	ptr		2771827	1					
ANR	2771962	PrimaryExpression	'\\0'		2771827	1					
ANR	2771963	DoStatement	do		2771827	6					
ANR	2771964	CompoundStatement		22:5:595:595	2771827	0					
ANR	2771965	ExpressionStatement	"* -- ptr = digits [ ( int ) fmod ( fvalue , base ) ]"	1129:3:24809:24850	2771827	0	True				
ANR	2771966	AssignmentExpression	"* -- ptr = digits [ ( int ) fmod ( fvalue , base ) ]"		2771827	0		=			
ANR	2771967	UnaryOperationExpression	* -- ptr		2771827	0					
ANR	2771968	UnaryOperator	*		2771827	0					
ANR	2771969	UnaryExpression	-- ptr		2771827	1					
ANR	2771970	IncDec	--		2771827	0					
ANR	2771971	Identifier	ptr		2771827	1					
ANR	2771972	ArrayIndexing	"digits [ ( int ) fmod ( fvalue , base ) ]"		2771827	1					
ANR	2771973	Identifier	digits		2771827	0					
ANR	2771974	CastExpression	"( int ) fmod ( fvalue , base )"		2771827	1					
ANR	2771975	CastTarget	int		2771827	0					
ANR	2771976	CallExpression	"fmod ( fvalue , base )"		2771827	1					
ANR	2771977	Callee	fmod		2771827	0					
ANR	2771978	Identifier	fmod		2771827	0					
ANR	2771979	ArgumentList	fvalue		2771827	1					
ANR	2771980	Argument	fvalue		2771827	0					
ANR	2771981	Identifier	fvalue		2771827	0					
ANR	2771982	Argument	base		2771827	1					
ANR	2771983	Identifier	base		2771827	0					
ANR	2771984	ExpressionStatement	fvalue /= base	1130:3:24855:24869	2771827	1	True				
ANR	2771985	AssignmentExpression	fvalue /= base		2771827	0		/=			
ANR	2771986	Identifier	fvalue		2771827	0					
ANR	2771987	Identifier	base		2771827	1					
ANR	2771988	Condition	ptr > buf && fabs ( fvalue ) >= 1	1131:11:24882:24911	2771827	1	True				
ANR	2771989	AndExpression	ptr > buf && fabs ( fvalue ) >= 1		2771827	0		&&			
ANR	2771990	RelationalExpression	ptr > buf		2771827	0		>			
ANR	2771991	Identifier	ptr		2771827	0					
ANR	2771992	Identifier	buf		2771827	1					
ANR	2771993	RelationalExpression	fabs ( fvalue ) >= 1		2771827	1		>=			
ANR	2771994	CallExpression	fabs ( fvalue )		2771827	0					
ANR	2771995	Callee	fabs		2771827	0					
ANR	2771996	Identifier	fabs		2771827	0					
ANR	2771997	ArgumentList	fvalue		2771827	1					
ANR	2771998	Argument	fvalue		2771827	0					
ANR	2771999	Identifier	fvalue		2771827	0					
ANR	2772000	PrimaryExpression	1		2771827	1					
ANR	2772001	ReturnStatement	"return zend_string_init ( ptr , end - ptr , 0 ) ;"	1133:2:24918:24960	2771827	7	True				
ANR	2772002	CallExpression	"zend_string_init ( ptr , end - ptr , 0 )"		2771827	0					
ANR	2772003	Callee	zend_string_init		2771827	0					
ANR	2772004	Identifier	zend_string_init		2771827	0					
ANR	2772005	ArgumentList	ptr		2771827	1					
ANR	2772006	Argument	ptr		2771827	0					
ANR	2772007	Identifier	ptr		2771827	0					
ANR	2772008	Argument	end - ptr		2771827	1					
ANR	2772009	AdditiveExpression	end - ptr		2771827	0		-			
ANR	2772010	Identifier	end		2771827	0					
ANR	2772011	Identifier	ptr		2771827	1					
ANR	2772012	Argument	0		2771827	2					
ANR	2772013	PrimaryExpression	0		2771827	0					
ANR	2772014	ReturnStatement	"return _php_math_longtobase ( arg , base ) ;"	1136:1:24967:25005	2771827	4	True				
ANR	2772015	CallExpression	"_php_math_longtobase ( arg , base )"		2771827	0					
ANR	2772016	Callee	_php_math_longtobase		2771827	0					
ANR	2772017	Identifier	_php_math_longtobase		2771827	0					
ANR	2772018	ArgumentList	arg		2771827	1					
ANR	2772019	Argument	arg		2771827	0					
ANR	2772020	Identifier	arg		2771827	0					
ANR	2772021	Argument	base		2771827	1					
ANR	2772022	Identifier	base		2771827	0					
ANR	2772023	ReturnType	PHPAPI zend_string *		2771827	1					
ANR	2772024	Identifier	_php_math_zvaltobase		2771827	2					
ANR	2772025	ParameterList	"zval * arg , int base"		2771827	3					
ANR	2772026	Parameter	zval * arg	1106:42:24187:24195	2771827	0	True				
ANR	2772027	ParameterType	zval *		2771827	0					
ANR	2772028	Identifier	arg		2771827	1					
ANR	2772029	Parameter	int base	1106:53:24198:24205	2771827	1	True				
ANR	2772030	ParameterType	int		2771827	0					
ANR	2772031	Identifier	base		2771827	1					
ANR	2772032	CFGEntryNode	ENTRY		2771827		True				
ANR	2772033	CFGExitNode	EXIT		2771827		True				
ANR	2772034	Symbol	NULL		2771827						
ANR	2772035	Symbol	fabs		2771827						
ANR	2772036	Symbol	* digits		2771827						
ANR	2772037	Symbol	* -- ptr		2771827						
ANR	2772038	Symbol	HUGE_VAL		2771827						
ANR	2772039	Symbol	Z_TYPE_P		2771827						
ANR	2772040	Symbol	* fmod		2771827						
ANR	2772041	Symbol	fmod		2771827						
ANR	2772042	Symbol	_php_math_longtobase		2771827						
ANR	2772043	Symbol	ZSTR_EMPTY_ALLOC		2771827						
ANR	2772044	Symbol	Z_DVAL_P		2771827						
ANR	2772045	Symbol	ptr		2771827						
ANR	2772046	Symbol	E_WARNING		2771827						
ANR	2772047	Symbol	fvalue		2771827						
ANR	2772048	Symbol	zend_string_init		2771827						
ANR	2772049	Symbol	buf		2771827						
ANR	2772050	Symbol	IS_LONG		2771827						
ANR	2772051	Symbol	arg		2771827						
ANR	2772052	Symbol	* ptr		2771827						
ANR	2772053	Symbol	IS_DOUBLE		2771827						
ANR	2772054	Symbol	digits		2771827						
ANR	2772055	Symbol	end		2771827						
ANR	2772056	Symbol	floor		2771827						
ANR	2772057	Symbol	base		2771827						
ANR	2772058	DeclStmt									
ANR	2772059	Decl							zval	zval *	arg
ANR	2772060	DeclStmt									
ANR	2772061	Decl							zval	zval *	arg
ANR	2772062	DeclStmt									
ANR	2772063	Decl							zval	zval *	arg
ANR	2772064	DeclStmt									
ANR	2772065	Decl							zval	zval *	arg
ANR	2772066	DeclStmt									
ANR	2772067	Decl							zend_string	zend_string *	result
ANR	2772068	DeclStmt									
ANR	2772069	Decl							zval	zval *	arg
ANR	2772070	DeclStmt									
ANR	2772071	Decl							zend_string	zend_string *	result
ANR	2772072	DeclStmt									
ANR	2772073	Decl							zval	zval *	arg
ANR	2772074	DeclStmt									
ANR	2772075	Decl							zend_string	zend_string *	result
ANR	2772076	DeclStmt									
ANR	2772077	Decl							zval	zval *	number
ANR	2772078	Decl							zval	zval	temp
ANR	2772079	DeclStmt									
ANR	2772080	Decl							zend_long	zend_long	frombase
ANR	2772081	Decl							zend_long	zend_long	tobase
ANR	2772082	DeclStmt									
ANR	2772083	Decl							zend_string	zend_string *	result
ANR	2772084	Function	_php_math_number_format	1268:0:28011:28188							
ANR	2772085	FunctionDef	"_php_math_number_format (double d , int dec , char dec_point , char thousand_sep)"		2772084	0					
ANR	2772086	CompoundStatement		1269:0:28109:28188	2772084	0					
ANR	2772087	ReturnStatement	"return _php_math_number_format_ex ( d , dec , & dec_point , 1 , & thousand_sep , 1 ) ;"	1270:1:28112:28186	2772084	0	True				
ANR	2772088	CallExpression	"_php_math_number_format_ex ( d , dec , & dec_point , 1 , & thousand_sep , 1 )"		2772084	0					
ANR	2772089	Callee	_php_math_number_format_ex		2772084	0					
ANR	2772090	Identifier	_php_math_number_format_ex		2772084	0					
ANR	2772091	ArgumentList	d		2772084	1					
ANR	2772092	Argument	d		2772084	0					
ANR	2772093	Identifier	d		2772084	0					
ANR	2772094	Argument	dec		2772084	1					
ANR	2772095	Identifier	dec		2772084	0					
ANR	2772096	Argument	& dec_point		2772084	2					
ANR	2772097	UnaryOperationExpression	& dec_point		2772084	0					
ANR	2772098	UnaryOperator	&		2772084	0					
ANR	2772099	Identifier	dec_point		2772084	1					
ANR	2772100	Argument	1		2772084	3					
ANR	2772101	PrimaryExpression	1		2772084	0					
ANR	2772102	Argument	& thousand_sep		2772084	4					
ANR	2772103	UnaryOperationExpression	& thousand_sep		2772084	0					
ANR	2772104	UnaryOperator	&		2772084	0					
ANR	2772105	Identifier	thousand_sep		2772084	1					
ANR	2772106	Argument	1		2772084	5					
ANR	2772107	PrimaryExpression	1		2772084	0					
ANR	2772108	ReturnType	PHPAPI zend_string *		2772084	1					
ANR	2772109	Identifier	_php_math_number_format		2772084	2					
ANR	2772110	ParameterList	"double d , int dec , char dec_point , char thousand_sep"		2772084	3					
ANR	2772111	Parameter	double d	1268:44:28055:28062	2772084	0	True				
ANR	2772112	ParameterType	double		2772084	0					
ANR	2772113	Identifier	d		2772084	1					
ANR	2772114	Parameter	int dec	1268:54:28065:28071	2772084	1	True				
ANR	2772115	ParameterType	int		2772084	0					
ANR	2772116	Identifier	dec		2772084	1					
ANR	2772117	Parameter	char dec_point	1268:63:28074:28087	2772084	2	True				
ANR	2772118	ParameterType	char		2772084	0					
ANR	2772119	Identifier	dec_point		2772084	1					
ANR	2772120	Parameter	char thousand_sep	1268:79:28090:28106	2772084	3	True				
ANR	2772121	ParameterType	char		2772084	0					
ANR	2772122	Identifier	thousand_sep		2772084	1					
ANR	2772123	CFGEntryNode	ENTRY		2772084		True				
ANR	2772124	CFGExitNode	EXIT		2772084		True				
ANR	2772125	Symbol	thousand_sep		2772084						
ANR	2772126	Symbol	_php_math_number_format_ex		2772084						
ANR	2772127	Symbol	dec		2772084						
ANR	2772128	Symbol	d		2772084						
ANR	2772129	Symbol	dec_point		2772084						
ANR	2772130	Symbol	& thousand_sep		2772084						
ANR	2772131	Symbol	& dec_point		2772084						
ANR	2772132	Function	_php_math_number_format_ex	1273:0:28191:30537							
ANR	2772133	FunctionDef	"_php_math_number_format_ex (double d , int dec , char * dec_point , size_t dec_point_len , char * thousand_sep , size_t thousand_sep_len)"		2772132	0					
ANR	2772134	CompoundStatement		1275:0:28343:30537	2772132	0					
ANR	2772135	IdentifierDeclStatement	zend_string * res ;	1276:1:28346:28362	2772132	0	True				
ANR	2772136	IdentifierDecl	* res		2772132	0					
ANR	2772137	IdentifierDeclType	zend_string *		2772132	0					
ANR	2772138	Identifier	res		2772132	1					
ANR	2772139	IdentifierDeclStatement	zend_string * tmpbuf ;	1277:1:28365:28384	2772132	1	True				
ANR	2772140	IdentifierDecl	* tmpbuf		2772132	0					
ANR	2772141	IdentifierDeclType	zend_string *		2772132	0					
ANR	2772142	Identifier	tmpbuf		2772132	1					
ANR	2772143	IdentifierDeclStatement	"char * s , * t ;"	1278:1:28387:28398	2772132	2	True				
ANR	2772144	IdentifierDecl	* s		2772132	0					
ANR	2772145	IdentifierDeclType	char *		2772132	0					
ANR	2772146	Identifier	s		2772132	1					
ANR	2772147	IdentifierDecl	* t		2772132	1					
ANR	2772148	IdentifierDeclType	char *		2772132	0					
ANR	2772149	Identifier	t		2772132	1					
ANR	2772150	IdentifierDeclStatement	char * dp ;	1279:1:28423:28431	2772132	3	True				
ANR	2772151	IdentifierDecl	* dp		2772132	0					
ANR	2772152	IdentifierDeclType	char *		2772132	0					
ANR	2772153	Identifier	dp		2772132	1					
ANR	2772154	IdentifierDeclStatement	int integral ;	1280:1:28434:28446	2772132	4	True				
ANR	2772155	IdentifierDecl	integral		2772132	0					
ANR	2772156	IdentifierDeclType	int		2772132	0					
ANR	2772157	Identifier	integral		2772132	1					
ANR	2772158	IdentifierDeclStatement	int reslen = 0 ;	1281:1:28449:28463	2772132	5	True				
ANR	2772159	IdentifierDecl	reslen = 0		2772132	0					
ANR	2772160	IdentifierDeclType	int		2772132	0					
ANR	2772161	Identifier	reslen		2772132	1					
ANR	2772162	AssignmentExpression	reslen = 0		2772132	2		=			
ANR	2772163	Identifier	reslen		2772132	0					
ANR	2772164	PrimaryExpression	0		2772132	1					
ANR	2772165	IdentifierDeclStatement	int count = 0 ;	1282:1:28466:28479	2772132	6	True				
ANR	2772166	IdentifierDecl	count = 0		2772132	0					
ANR	2772167	IdentifierDeclType	int		2772132	0					
ANR	2772168	Identifier	count		2772132	1					
ANR	2772169	AssignmentExpression	count = 0		2772132	2		=			
ANR	2772170	Identifier	count		2772132	0					
ANR	2772171	PrimaryExpression	0		2772132	1					
ANR	2772172	IdentifierDeclStatement	int is_negative = 0 ;	1283:1:28482:28499	2772132	7	True				
ANR	2772173	IdentifierDecl	is_negative = 0		2772132	0					
ANR	2772174	IdentifierDeclType	int		2772132	0					
ANR	2772175	Identifier	is_negative		2772132	1					
ANR	2772176	AssignmentExpression	is_negative = 0		2772132	2		=			
ANR	2772177	Identifier	is_negative		2772132	0					
ANR	2772178	PrimaryExpression	0		2772132	1					
ANR	2772179	IfStatement	if ( d < 0 )		2772132	8					
ANR	2772180	Condition	d < 0	1285:5:28507:28511	2772132	0	True				
ANR	2772181	RelationalExpression	d < 0		2772132	0		<			
ANR	2772182	Identifier	d		2772132	0					
ANR	2772183	PrimaryExpression	0		2772132	1					
ANR	2772184	CompoundStatement		11:12:170:170	2772132	1					
ANR	2772185	ExpressionStatement	is_negative = 1	1286:2:28518:28533	2772132	0	True				
ANR	2772186	AssignmentExpression	is_negative = 1		2772132	0		=			
ANR	2772187	Identifier	is_negative		2772132	0					
ANR	2772188	PrimaryExpression	1		2772132	1					
ANR	2772189	ExpressionStatement	d = - d	1287:2:28537:28543	2772132	1	True				
ANR	2772190	AssignmentExpression	d = - d		2772132	0		=			
ANR	2772191	Identifier	d		2772132	0					
ANR	2772192	UnaryOperationExpression	- d		2772132	1					
ANR	2772193	UnaryOperator	-		2772132	0					
ANR	2772194	Identifier	d		2772132	1					
ANR	2772195	ExpressionStatement	"dec = MAX ( 0 , dec )"	1290:1:28550:28567	2772132	9	True				
ANR	2772196	AssignmentExpression	"dec = MAX ( 0 , dec )"		2772132	0		=			
ANR	2772197	Identifier	dec		2772132	0					
ANR	2772198	CallExpression	"MAX ( 0 , dec )"		2772132	1					
ANR	2772199	Callee	MAX		2772132	0					
ANR	2772200	Identifier	MAX		2772132	0					
ANR	2772201	ArgumentList	0		2772132	1					
ANR	2772202	Argument	0		2772132	0					
ANR	2772203	PrimaryExpression	0		2772132	0					
ANR	2772204	Argument	dec		2772132	1					
ANR	2772205	Identifier	dec		2772132	0					
ANR	2772206	ExpressionStatement	"d = _php_math_round ( d , dec , PHP_ROUND_HALF_UP )"	1291:1:28570:28616	2772132	10	True				
ANR	2772207	AssignmentExpression	"d = _php_math_round ( d , dec , PHP_ROUND_HALF_UP )"		2772132	0		=			
ANR	2772208	Identifier	d		2772132	0					
ANR	2772209	CallExpression	"_php_math_round ( d , dec , PHP_ROUND_HALF_UP )"		2772132	1					
ANR	2772210	Callee	_php_math_round		2772132	0					
ANR	2772211	Identifier	_php_math_round		2772132	0					
ANR	2772212	ArgumentList	d		2772132	1					
ANR	2772213	Argument	d		2772132	0					
ANR	2772214	Identifier	d		2772132	0					
ANR	2772215	Argument	dec		2772132	1					
ANR	2772216	Identifier	dec		2772132	0					
ANR	2772217	Argument	PHP_ROUND_HALF_UP		2772132	2					
ANR	2772218	Identifier	PHP_ROUND_HALF_UP		2772132	0					
ANR	2772219	ExpressionStatement	"tmpbuf = strpprintf ( 0 , ""%.*F"" , dec , d )"	1292:1:28619:28657	2772132	11	True				
ANR	2772220	AssignmentExpression	"tmpbuf = strpprintf ( 0 , ""%.*F"" , dec , d )"		2772132	0		=			
ANR	2772221	Identifier	tmpbuf		2772132	0					
ANR	2772222	CallExpression	"strpprintf ( 0 , ""%.*F"" , dec , d )"		2772132	1					
ANR	2772223	Callee	strpprintf		2772132	0					
ANR	2772224	Identifier	strpprintf		2772132	0					
ANR	2772225	ArgumentList	0		2772132	1					
ANR	2772226	Argument	0		2772132	0					
ANR	2772227	PrimaryExpression	0		2772132	0					
ANR	2772228	Argument	"""%.*F"""		2772132	1					
ANR	2772229	PrimaryExpression	"""%.*F"""		2772132	0					
ANR	2772230	Argument	dec		2772132	2					
ANR	2772231	Identifier	dec		2772132	0					
ANR	2772232	Argument	d		2772132	3					
ANR	2772233	Identifier	d		2772132	0					
ANR	2772234	IfStatement	if ( tmpbuf == NULL )		2772132	12					
ANR	2772235	Condition	tmpbuf == NULL	1293:5:28664:28677	2772132	0	True				
ANR	2772236	EqualityExpression	tmpbuf == NULL		2772132	0		==			
ANR	2772237	Identifier	tmpbuf		2772132	0					
ANR	2772238	Identifier	NULL		2772132	1					
ANR	2772239	CompoundStatement		19:21:336:336	2772132	1					
ANR	2772240	ReturnStatement	return NULL ;	1294:2:28684:28695	2772132	0	True				
ANR	2772241	Identifier	NULL		2772132	0					
ANR	2772242	ElseStatement	else		2772132	0					
ANR	2772243	IfStatement	if ( ! isdigit ( ( int ) ZSTR_VAL ( tmpbuf ) [ 0 ] ) )		2772132	0					
ANR	2772244	Condition	! isdigit ( ( int ) ZSTR_VAL ( tmpbuf ) [ 0 ] )	1295:12:28709:28742	2772132	0	True				
ANR	2772245	UnaryOperationExpression	! isdigit ( ( int ) ZSTR_VAL ( tmpbuf ) [ 0 ] )		2772132	0					
ANR	2772246	UnaryOperator	!		2772132	0					
ANR	2772247	CallExpression	isdigit ( ( int ) ZSTR_VAL ( tmpbuf ) [ 0 ] )		2772132	1					
ANR	2772248	Callee	isdigit		2772132	0					
ANR	2772249	Identifier	isdigit		2772132	0					
ANR	2772250	ArgumentList	( int ) ZSTR_VAL ( tmpbuf ) [ 0 ]		2772132	1					
ANR	2772251	Argument	( int ) ZSTR_VAL ( tmpbuf ) [ 0 ]		2772132	0					
ANR	2772252	CastExpression	( int ) ZSTR_VAL ( tmpbuf ) [ 0 ]		2772132	0					
ANR	2772253	CastTarget	int		2772132	0					
ANR	2772254	ArrayIndexing	ZSTR_VAL ( tmpbuf ) [ 0 ]		2772132	1					
ANR	2772255	CallExpression	ZSTR_VAL ( tmpbuf )		2772132	0					
ANR	2772256	Callee	ZSTR_VAL		2772132	0					
ANR	2772257	Identifier	ZSTR_VAL		2772132	0					
ANR	2772258	ArgumentList	tmpbuf		2772132	1					
ANR	2772259	Argument	tmpbuf		2772132	0					
ANR	2772260	Identifier	tmpbuf		2772132	0					
ANR	2772261	PrimaryExpression	0		2772132	1					
ANR	2772262	CompoundStatement		21:48:401:401	2772132	1					
ANR	2772263	ReturnStatement	return tmpbuf ;	1296:2:28749:28762	2772132	0	True				
ANR	2772264	Identifier	tmpbuf		2772132	0					
ANR	2772265	IfStatement	if ( dec )		2772132	13					
ANR	2772266	Condition	dec	1300:5:28812:28814	2772132	0	True				
ANR	2772267	Identifier	dec		2772132	0					
ANR	2772268	CompoundStatement		26:10:473:473	2772132	1					
ANR	2772269	ExpressionStatement	"dp = strpbrk ( ZSTR_VAL ( tmpbuf ) , "".,"" )"	1301:2:28821:28857	2772132	0	True				
ANR	2772270	AssignmentExpression	"dp = strpbrk ( ZSTR_VAL ( tmpbuf ) , "".,"" )"		2772132	0		=			
ANR	2772271	Identifier	dp		2772132	0					
ANR	2772272	CallExpression	"strpbrk ( ZSTR_VAL ( tmpbuf ) , "".,"" )"		2772132	1					
ANR	2772273	Callee	strpbrk		2772132	0					
ANR	2772274	Identifier	strpbrk		2772132	0					
ANR	2772275	ArgumentList	ZSTR_VAL ( tmpbuf )		2772132	1					
ANR	2772276	Argument	ZSTR_VAL ( tmpbuf )		2772132	0					
ANR	2772277	CallExpression	ZSTR_VAL ( tmpbuf )		2772132	0					
ANR	2772278	Callee	ZSTR_VAL		2772132	0					
ANR	2772279	Identifier	ZSTR_VAL		2772132	0					
ANR	2772280	ArgumentList	tmpbuf		2772132	1					
ANR	2772281	Argument	tmpbuf		2772132	0					
ANR	2772282	Identifier	tmpbuf		2772132	0					
ANR	2772283	Argument	""".,"""		2772132	1					
ANR	2772284	PrimaryExpression	""".,"""		2772132	0					
ANR	2772285	ElseStatement	else		2772132	0					
ANR	2772286	CompoundStatement		28:8:523:523	2772132	0					
ANR	2772287	ExpressionStatement	dp = NULL	1303:2:28871:28880	2772132	0	True				
ANR	2772288	AssignmentExpression	dp = NULL		2772132	0		=			
ANR	2772289	Identifier	dp		2772132	0					
ANR	2772290	Identifier	NULL		2772132	1					
ANR	2772291	IfStatement	if ( dp )		2772132	14					
ANR	2772292	Condition	dp	1307:5:28940:28941	2772132	0	True				
ANR	2772293	Identifier	dp		2772132	0					
ANR	2772294	CompoundStatement		33:9:600:600	2772132	1					
ANR	2772295	ExpressionStatement	integral = ( int ) ( dp - ZSTR_VAL ( tmpbuf ) )	1308:2:28948:28987	2772132	0	True				
ANR	2772296	AssignmentExpression	integral = ( int ) ( dp - ZSTR_VAL ( tmpbuf ) )		2772132	0		=			
ANR	2772297	Identifier	integral		2772132	0					
ANR	2772298	CastExpression	( int ) ( dp - ZSTR_VAL ( tmpbuf ) )		2772132	1					
ANR	2772299	CastTarget	int		2772132	0					
ANR	2772300	AdditiveExpression	dp - ZSTR_VAL ( tmpbuf )		2772132	1		-			
ANR	2772301	Identifier	dp		2772132	0					
ANR	2772302	CallExpression	ZSTR_VAL ( tmpbuf )		2772132	1					
ANR	2772303	Callee	ZSTR_VAL		2772132	0					
ANR	2772304	Identifier	ZSTR_VAL		2772132	0					
ANR	2772305	ArgumentList	tmpbuf		2772132	1					
ANR	2772306	Argument	tmpbuf		2772132	0					
ANR	2772307	Identifier	tmpbuf		2772132	0					
ANR	2772308	ElseStatement	else		2772132	0					
ANR	2772309	CompoundStatement		35:8:653:653	2772132	0					
ANR	2772310	ExpressionStatement	integral = ( int ) ZSTR_LEN ( tmpbuf )	1311:2:29036:29068	2772132	0	True				
ANR	2772311	AssignmentExpression	integral = ( int ) ZSTR_LEN ( tmpbuf )		2772132	0		=			
ANR	2772312	Identifier	integral		2772132	0					
ANR	2772313	CastExpression	( int ) ZSTR_LEN ( tmpbuf )		2772132	1					
ANR	2772314	CastTarget	int		2772132	0					
ANR	2772315	CallExpression	ZSTR_LEN ( tmpbuf )		2772132	1					
ANR	2772316	Callee	ZSTR_LEN		2772132	0					
ANR	2772317	Identifier	ZSTR_LEN		2772132	0					
ANR	2772318	ArgumentList	tmpbuf		2772132	1					
ANR	2772319	Argument	tmpbuf		2772132	0					
ANR	2772320	Identifier	tmpbuf		2772132	0					
ANR	2772321	IfStatement	if ( thousand_sep )		2772132	15					
ANR	2772322	Condition	thousand_sep	1315:5:29116:29127	2772132	0	True				
ANR	2772323	Identifier	thousand_sep		2772132	0					
ANR	2772324	CompoundStatement		41:19:786:786	2772132	1					
ANR	2772325	ExpressionStatement	integral += ( int ) ( thousand_sep_len * ( ( integral - 1 ) / 3 ) )	1316:2:29134:29190	2772132	0	True				
ANR	2772326	AssignmentExpression	integral += ( int ) ( thousand_sep_len * ( ( integral - 1 ) / 3 ) )		2772132	0		+=			
ANR	2772327	Identifier	integral		2772132	0					
ANR	2772328	CastExpression	( int ) ( thousand_sep_len * ( ( integral - 1 ) / 3 ) )		2772132	1					
ANR	2772329	CastTarget	int		2772132	0					
ANR	2772330	MultiplicativeExpression	thousand_sep_len * ( ( integral - 1 ) / 3 )		2772132	1		*			
ANR	2772331	Identifier	thousand_sep_len		2772132	0					
ANR	2772332	MultiplicativeExpression	( integral - 1 ) / 3		2772132	1		/			
ANR	2772333	AdditiveExpression	integral - 1		2772132	0		-			
ANR	2772334	Identifier	integral		2772132	0					
ANR	2772335	PrimaryExpression	1		2772132	1					
ANR	2772336	PrimaryExpression	3		2772132	1					
ANR	2772337	ExpressionStatement	reslen = integral	1319:1:29197:29214	2772132	16	True				
ANR	2772338	AssignmentExpression	reslen = integral		2772132	0		=			
ANR	2772339	Identifier	reslen		2772132	0					
ANR	2772340	Identifier	integral		2772132	1					
ANR	2772341	IfStatement	if ( dec )		2772132	17					
ANR	2772342	Condition	dec	1321:5:29222:29224	2772132	0	True				
ANR	2772343	Identifier	dec		2772132	0					
ANR	2772344	CompoundStatement		47:10:883:883	2772132	1					
ANR	2772345	ExpressionStatement	reslen += dec	1322:2:29231:29244	2772132	0	True				
ANR	2772346	AssignmentExpression	reslen += dec		2772132	0		+=			
ANR	2772347	Identifier	reslen		2772132	0					
ANR	2772348	Identifier	dec		2772132	1					
ANR	2772349	IfStatement	if ( dec_point )		2772132	1					
ANR	2772350	Condition	dec_point	1324:6:29253:29261	2772132	0	True				
ANR	2772351	Identifier	dec_point		2772132	0					
ANR	2772352	CompoundStatement		50:17:920:920	2772132	1					
ANR	2772353	ExpressionStatement	reslen += ( int ) dec_point_len	1325:3:29269:29297	2772132	0	True				
ANR	2772354	AssignmentExpression	reslen += ( int ) dec_point_len		2772132	0		+=			
ANR	2772355	Identifier	reslen		2772132	0					
ANR	2772356	CastExpression	( int ) dec_point_len		2772132	1					
ANR	2772357	CastTarget	int		2772132	0					
ANR	2772358	Identifier	dec_point_len		2772132	1					
ANR	2772359	IfStatement	if ( is_negative )		2772132	18					
ANR	2772360	Condition	is_negative	1330:5:29345:29355	2772132	0	True				
ANR	2772361	Identifier	is_negative		2772132	0					
ANR	2772362	CompoundStatement		56:18:1014:1014	2772132	1					
ANR	2772363	ExpressionStatement	reslen ++	1331:2:29362:29370	2772132	0	True				
ANR	2772364	PostIncDecOperationExpression	reslen ++		2772132	0					
ANR	2772365	Identifier	reslen		2772132	0					
ANR	2772366	IncDec	++		2772132	1					
ANR	2772367	ExpressionStatement	"res = zend_string_alloc ( reslen , 0 )"	1333:1:29376:29410	2772132	19	True				
ANR	2772368	AssignmentExpression	"res = zend_string_alloc ( reslen , 0 )"		2772132	0		=			
ANR	2772369	Identifier	res		2772132	0					
ANR	2772370	CallExpression	"zend_string_alloc ( reslen , 0 )"		2772132	1					
ANR	2772371	Callee	zend_string_alloc		2772132	0					
ANR	2772372	Identifier	zend_string_alloc		2772132	0					
ANR	2772373	ArgumentList	reslen		2772132	1					
ANR	2772374	Argument	reslen		2772132	0					
ANR	2772375	Identifier	reslen		2772132	0					
ANR	2772376	Argument	0		2772132	1					
ANR	2772377	PrimaryExpression	0		2772132	0					
ANR	2772378	ExpressionStatement	s = ZSTR_VAL ( tmpbuf ) + ZSTR_LEN ( tmpbuf ) - 1	1335:1:29414:29457	2772132	20	True				
ANR	2772379	AssignmentExpression	s = ZSTR_VAL ( tmpbuf ) + ZSTR_LEN ( tmpbuf ) - 1		2772132	0		=			
ANR	2772380	Identifier	s		2772132	0					
ANR	2772381	AdditiveExpression	ZSTR_VAL ( tmpbuf ) + ZSTR_LEN ( tmpbuf ) - 1		2772132	1		+			
ANR	2772382	CallExpression	ZSTR_VAL ( tmpbuf )		2772132	0					
ANR	2772383	Callee	ZSTR_VAL		2772132	0					
ANR	2772384	Identifier	ZSTR_VAL		2772132	0					
ANR	2772385	ArgumentList	tmpbuf		2772132	1					
ANR	2772386	Argument	tmpbuf		2772132	0					
ANR	2772387	Identifier	tmpbuf		2772132	0					
ANR	2772388	AdditiveExpression	ZSTR_LEN ( tmpbuf ) - 1		2772132	1		-			
ANR	2772389	CallExpression	ZSTR_LEN ( tmpbuf )		2772132	0					
ANR	2772390	Callee	ZSTR_LEN		2772132	0					
ANR	2772391	Identifier	ZSTR_LEN		2772132	0					
ANR	2772392	ArgumentList	tmpbuf		2772132	1					
ANR	2772393	Argument	tmpbuf		2772132	0					
ANR	2772394	Identifier	tmpbuf		2772132	0					
ANR	2772395	PrimaryExpression	1		2772132	1					
ANR	2772396	ExpressionStatement	t = ZSTR_VAL ( res ) + reslen	1336:1:29460:29486	2772132	21	True				
ANR	2772397	AssignmentExpression	t = ZSTR_VAL ( res ) + reslen		2772132	0		=			
ANR	2772398	Identifier	t		2772132	0					
ANR	2772399	AdditiveExpression	ZSTR_VAL ( res ) + reslen		2772132	1		+			
ANR	2772400	CallExpression	ZSTR_VAL ( res )		2772132	0					
ANR	2772401	Callee	ZSTR_VAL		2772132	0					
ANR	2772402	Identifier	ZSTR_VAL		2772132	0					
ANR	2772403	ArgumentList	res		2772132	1					
ANR	2772404	Argument	res		2772132	0					
ANR	2772405	Identifier	res		2772132	0					
ANR	2772406	Identifier	reslen		2772132	1					
ANR	2772407	ExpressionStatement	* t -- = '\\0'	1337:1:29489:29500	2772132	22	True				
ANR	2772408	AssignmentExpression	* t -- = '\\0'		2772132	0		=			
ANR	2772409	UnaryOperationExpression	* t --		2772132	0					
ANR	2772410	UnaryOperator	*		2772132	0					
ANR	2772411	PostIncDecOperationExpression	t --		2772132	1					
ANR	2772412	Identifier	t		2772132	0					
ANR	2772413	IncDec	--		2772132	1					
ANR	2772414	PrimaryExpression	'\\0'		2772132	1					
ANR	2772415	IfStatement	if ( dec )		2772132	23					
ANR	2772416	Condition	dec	1342:5:29665:29667	2772132	0	True				
ANR	2772417	Identifier	dec		2772132	0					
ANR	2772418	CompoundStatement		70:2:1369:1412	2772132	1					
ANR	2772419	IdentifierDeclStatement	int declen = ( int ) ( dp ? s - dp : 0 ) ;	1343:2:29674:29709	2772132	0	True				
ANR	2772420	IdentifierDecl	declen = ( int ) ( dp ? s - dp : 0 )		2772132	0					
ANR	2772421	IdentifierDeclType	int		2772132	0					
ANR	2772422	Identifier	declen		2772132	1					
ANR	2772423	AssignmentExpression	declen = ( int ) ( dp ? s - dp : 0 )		2772132	2		=			
ANR	2772424	Identifier	declen		2772132	0					
ANR	2772425	CastExpression	( int ) ( dp ? s - dp : 0 )		2772132	1					
ANR	2772426	CastTarget	int		2772132	0					
ANR	2772427	ConditionalExpression	dp ? s - dp : 0		2772132	1					
ANR	2772428	Condition	dp		2772132	0					
ANR	2772429	Identifier	dp		2772132	0					
ANR	2772430	AdditiveExpression	s - dp		2772132	1		-			
ANR	2772431	Identifier	s		2772132	0					
ANR	2772432	Identifier	dp		2772132	1					
ANR	2772433	PrimaryExpression	0		2772132	2					
ANR	2772434	IdentifierDeclStatement	int topad = dec > declen ? dec - declen : 0 ;	1344:2:29713:29756	2772132	1	True				
ANR	2772435	IdentifierDecl	topad = dec > declen ? dec - declen : 0		2772132	0					
ANR	2772436	IdentifierDeclType	int		2772132	0					
ANR	2772437	Identifier	topad		2772132	1					
ANR	2772438	AssignmentExpression	topad = dec > declen ? dec - declen : 0		2772132	2		=			
ANR	2772439	Identifier	topad		2772132	0					
ANR	2772440	ConditionalExpression	dec > declen ? dec - declen : 0		2772132	1					
ANR	2772441	Condition	dec > declen		2772132	0					
ANR	2772442	RelationalExpression	dec > declen		2772132	0		>			
ANR	2772443	Identifier	dec		2772132	0					
ANR	2772444	Identifier	declen		2772132	1					
ANR	2772445	AdditiveExpression	dec - declen		2772132	1		-			
ANR	2772446	Identifier	dec		2772132	0					
ANR	2772447	Identifier	declen		2772132	1					
ANR	2772448	PrimaryExpression	0		2772132	2					
ANR	2772449	WhileStatement	while ( topad -- )		2772132	2					
ANR	2772450	Condition	topad --	1347:9:29790:29796	2772132	0	True				
ANR	2772451	PostIncDecOperationExpression	topad --		2772132	0					
ANR	2772452	Identifier	topad		2772132	0					
ANR	2772453	IncDec	--		2772132	1					
ANR	2772454	CompoundStatement		73:18:1455:1455	2772132	1					
ANR	2772455	ExpressionStatement	* t -- = '0'	1348:3:29804:29814	2772132	0	True				
ANR	2772456	AssignmentExpression	* t -- = '0'		2772132	0		=			
ANR	2772457	UnaryOperationExpression	* t --		2772132	0					
ANR	2772458	UnaryOperator	*		2772132	0					
ANR	2772459	PostIncDecOperationExpression	t --		2772132	1					
ANR	2772460	Identifier	t		2772132	0					
ANR	2772461	IncDec	--		2772132	1					
ANR	2772462	PrimaryExpression	'0'		2772132	1					
ANR	2772463	IfStatement	if ( dp )		2772132	3					
ANR	2772464	Condition	dp	1351:6:29827:29828	2772132	0	True				
ANR	2772465	Identifier	dp		2772132	0					
ANR	2772466	CompoundStatement		77:10:1487:1487	2772132	1					
ANR	2772467	ExpressionStatement	s -= declen + 1	1352:3:29836:29851	2772132	0	True				
ANR	2772468	AssignmentExpression	s -= declen + 1		2772132	0		-=			
ANR	2772469	Identifier	s		2772132	0					
ANR	2772470	AdditiveExpression	declen + 1		2772132	1		+			
ANR	2772471	Identifier	declen		2772132	0					
ANR	2772472	PrimaryExpression	1		2772132	1					
ANR	2772473	ExpressionStatement	t -= declen	1353:3:29883:29894	2772132	1	True				
ANR	2772474	AssignmentExpression	t -= declen		2772132	0		-=			
ANR	2772475	Identifier	t		2772132	0					
ANR	2772476	Identifier	declen		2772132	1					
ANR	2772477	ExpressionStatement	"memcpy ( t + 1 , dp + 1 , declen )"	1356:3:29944:29973	2772132	2	True				
ANR	2772478	CallExpression	"memcpy ( t + 1 , dp + 1 , declen )"		2772132	0					
ANR	2772479	Callee	memcpy		2772132	0					
ANR	2772480	Identifier	memcpy		2772132	0					
ANR	2772481	ArgumentList	t + 1		2772132	1					
ANR	2772482	Argument	t + 1		2772132	0					
ANR	2772483	AdditiveExpression	t + 1		2772132	0		+			
ANR	2772484	Identifier	t		2772132	0					
ANR	2772485	PrimaryExpression	1		2772132	1					
ANR	2772486	Argument	dp + 1		2772132	1					
ANR	2772487	AdditiveExpression	dp + 1		2772132	0		+			
ANR	2772488	Identifier	dp		2772132	0					
ANR	2772489	PrimaryExpression	1		2772132	1					
ANR	2772490	Argument	declen		2772132	2					
ANR	2772491	Identifier	declen		2772132	0					
ANR	2772492	IfStatement	if ( dec_point )		2772132	4					
ANR	2772493	Condition	dec_point	1360:6:30012:30020	2772132	0	True				
ANR	2772494	Identifier	dec_point		2772132	0					
ANR	2772495	CompoundStatement		86:17:1679:1679	2772132	1					
ANR	2772496	ExpressionStatement	t -= dec_point_len	1361:3:30028:30046	2772132	0	True				
ANR	2772497	AssignmentExpression	t -= dec_point_len		2772132	0		-=			
ANR	2772498	Identifier	t		2772132	0					
ANR	2772499	Identifier	dec_point_len		2772132	1					
ANR	2772500	ExpressionStatement	"memcpy ( t + 1 , dec_point , dec_point_len )"	1362:3:30051:30090	2772132	1	True				
ANR	2772501	CallExpression	"memcpy ( t + 1 , dec_point , dec_point_len )"		2772132	0					
ANR	2772502	Callee	memcpy		2772132	0					
ANR	2772503	Identifier	memcpy		2772132	0					
ANR	2772504	ArgumentList	t + 1		2772132	1					
ANR	2772505	Argument	t + 1		2772132	0					
ANR	2772506	AdditiveExpression	t + 1		2772132	0		+			
ANR	2772507	Identifier	t		2772132	0					
ANR	2772508	PrimaryExpression	1		2772132	1					
ANR	2772509	Argument	dec_point		2772132	1					
ANR	2772510	Identifier	dec_point		2772132	0					
ANR	2772511	Argument	dec_point_len		2772132	2					
ANR	2772512	Identifier	dec_point_len		2772132	0					
ANR	2772513	WhileStatement	while ( s >= ZSTR_VAL ( tmpbuf ) )		2772132	24					
ANR	2772514	Condition	s >= ZSTR_VAL ( tmpbuf )	1368:8:30207:30227	2772132	0	True				
ANR	2772515	RelationalExpression	s >= ZSTR_VAL ( tmpbuf )		2772132	0		>=			
ANR	2772516	Identifier	s		2772132	0					
ANR	2772517	CallExpression	ZSTR_VAL ( tmpbuf )		2772132	1					
ANR	2772518	Callee	ZSTR_VAL		2772132	0					
ANR	2772519	Identifier	ZSTR_VAL		2772132	0					
ANR	2772520	ArgumentList	tmpbuf		2772132	1					
ANR	2772521	Argument	tmpbuf		2772132	0					
ANR	2772522	Identifier	tmpbuf		2772132	0					
ANR	2772523	CompoundStatement		94:31:1886:1886	2772132	1					
ANR	2772524	ExpressionStatement	* t -- = * s --	1369:2:30234:30245	2772132	0	True				
ANR	2772525	AssignmentExpression	* t -- = * s --		2772132	0		=			
ANR	2772526	UnaryOperationExpression	* t --		2772132	0					
ANR	2772527	UnaryOperator	*		2772132	0					
ANR	2772528	PostIncDecOperationExpression	t --		2772132	1					
ANR	2772529	Identifier	t		2772132	0					
ANR	2772530	IncDec	--		2772132	1					
ANR	2772531	UnaryOperationExpression	* s --		2772132	1					
ANR	2772532	UnaryOperator	*		2772132	0					
ANR	2772533	PostIncDecOperationExpression	s --		2772132	1					
ANR	2772534	Identifier	s		2772132	0					
ANR	2772535	IncDec	--		2772132	1					
ANR	2772536	IfStatement	if ( thousand_sep && ( ++ count % 3 ) == 0 && s >= ZSTR_VAL ( tmpbuf ) )		2772132	1					
ANR	2772537	Condition	thousand_sep && ( ++ count % 3 ) == 0 && s >= ZSTR_VAL ( tmpbuf )	1370:6:30253:30307	2772132	0	True				
ANR	2772538	AndExpression	thousand_sep && ( ++ count % 3 ) == 0 && s >= ZSTR_VAL ( tmpbuf )		2772132	0		&&			
ANR	2772539	Identifier	thousand_sep		2772132	0					
ANR	2772540	AndExpression	( ++ count % 3 ) == 0 && s >= ZSTR_VAL ( tmpbuf )		2772132	1		&&			
ANR	2772541	EqualityExpression	( ++ count % 3 ) == 0		2772132	0		==			
ANR	2772542	MultiplicativeExpression	++ count % 3		2772132	0		%			
ANR	2772543	UnaryExpression	++ count		2772132	0					
ANR	2772544	IncDec	++		2772132	0					
ANR	2772545	Identifier	count		2772132	1					
ANR	2772546	PrimaryExpression	3		2772132	1					
ANR	2772547	PrimaryExpression	0		2772132	1					
ANR	2772548	RelationalExpression	s >= ZSTR_VAL ( tmpbuf )		2772132	1		>=			
ANR	2772549	Identifier	s		2772132	0					
ANR	2772550	CallExpression	ZSTR_VAL ( tmpbuf )		2772132	1					
ANR	2772551	Callee	ZSTR_VAL		2772132	0					
ANR	2772552	Identifier	ZSTR_VAL		2772132	0					
ANR	2772553	ArgumentList	tmpbuf		2772132	1					
ANR	2772554	Argument	tmpbuf		2772132	0					
ANR	2772555	Identifier	tmpbuf		2772132	0					
ANR	2772556	CompoundStatement		96:63:1966:1966	2772132	1					
ANR	2772557	ExpressionStatement	t -= thousand_sep_len	1371:3:30315:30336	2772132	0	True				
ANR	2772558	AssignmentExpression	t -= thousand_sep_len		2772132	0		-=			
ANR	2772559	Identifier	t		2772132	0					
ANR	2772560	Identifier	thousand_sep_len		2772132	1					
ANR	2772561	ExpressionStatement	"memcpy ( t + 1 , thousand_sep , thousand_sep_len )"	1372:3:30341:30386	2772132	1	True				
ANR	2772562	CallExpression	"memcpy ( t + 1 , thousand_sep , thousand_sep_len )"		2772132	0					
ANR	2772563	Callee	memcpy		2772132	0					
ANR	2772564	Identifier	memcpy		2772132	0					
ANR	2772565	ArgumentList	t + 1		2772132	1					
ANR	2772566	Argument	t + 1		2772132	0					
ANR	2772567	AdditiveExpression	t + 1		2772132	0		+			
ANR	2772568	Identifier	t		2772132	0					
ANR	2772569	PrimaryExpression	1		2772132	1					
ANR	2772570	Argument	thousand_sep		2772132	1					
ANR	2772571	Identifier	thousand_sep		2772132	0					
ANR	2772572	Argument	thousand_sep_len		2772132	2					
ANR	2772573	Identifier	thousand_sep_len		2772132	0					
ANR	2772574	IfStatement	if ( is_negative )		2772132	25					
ANR	2772575	Condition	is_negative	1377:5:30436:30446	2772132	0	True				
ANR	2772576	Identifier	is_negative		2772132	0					
ANR	2772577	CompoundStatement		103:18:2105:2105	2772132	1					
ANR	2772578	ExpressionStatement	* t -- = '-'	1378:2:30453:30463	2772132	0	True				
ANR	2772579	AssignmentExpression	* t -- = '-'		2772132	0		=			
ANR	2772580	UnaryOperationExpression	* t --		2772132	0					
ANR	2772581	UnaryOperator	*		2772132	0					
ANR	2772582	PostIncDecOperationExpression	t --		2772132	1					
ANR	2772583	Identifier	t		2772132	0					
ANR	2772584	IncDec	--		2772132	1					
ANR	2772585	PrimaryExpression	'-'		2772132	1					
ANR	2772586	ExpressionStatement	ZSTR_LEN ( res ) = reslen	1381:1:30470:30492	2772132	26	True				
ANR	2772587	AssignmentExpression	ZSTR_LEN ( res ) = reslen		2772132	0		=			
ANR	2772588	CallExpression	ZSTR_LEN ( res )		2772132	0					
ANR	2772589	Callee	ZSTR_LEN		2772132	0					
ANR	2772590	Identifier	ZSTR_LEN		2772132	0					
ANR	2772591	ArgumentList	res		2772132	1					
ANR	2772592	Argument	res		2772132	0					
ANR	2772593	Identifier	res		2772132	0					
ANR	2772594	Identifier	reslen		2772132	1					
ANR	2772595	ExpressionStatement	zend_string_release ( tmpbuf )	1382:1:30495:30522	2772132	27	True				
ANR	2772596	CallExpression	zend_string_release ( tmpbuf )		2772132	0					
ANR	2772597	Callee	zend_string_release		2772132	0					
ANR	2772598	Identifier	zend_string_release		2772132	0					
ANR	2772599	ArgumentList	tmpbuf		2772132	1					
ANR	2772600	Argument	tmpbuf		2772132	0					
ANR	2772601	Identifier	tmpbuf		2772132	0					
ANR	2772602	ReturnStatement	return res ;	1383:1:30525:30535	2772132	28	True				
ANR	2772603	Identifier	res		2772132	0					
ANR	2772604	ReturnType	PHPAPI zend_string *		2772132	1					
ANR	2772605	Identifier	_php_math_number_format_ex		2772132	2					
ANR	2772606	ParameterList	"double d , int dec , char * dec_point , size_t dec_point_len , char * thousand_sep , size_t thousand_sep_len"		2772132	3					
ANR	2772607	Parameter	double d	1273:47:28238:28245	2772132	0	True				
ANR	2772608	ParameterType	double		2772132	0					
ANR	2772609	Identifier	d		2772132	1					
ANR	2772610	Parameter	int dec	1273:57:28248:28254	2772132	1	True				
ANR	2772611	ParameterType	int		2772132	0					
ANR	2772612	Identifier	dec		2772132	1					
ANR	2772613	Parameter	char * dec_point	1273:66:28257:28271	2772132	2	True				
ANR	2772614	ParameterType	char *		2772132	0					
ANR	2772615	Identifier	dec_point		2772132	1					
ANR	2772616	Parameter	size_t dec_point_len	1274:2:28276:28295	2772132	3	True				
ANR	2772617	ParameterType	size_t		2772132	0					
ANR	2772618	Identifier	dec_point_len		2772132	1					
ANR	2772619	Parameter	char * thousand_sep	1274:24:28298:28315	2772132	4	True				
ANR	2772620	ParameterType	char *		2772132	0					
ANR	2772621	Identifier	thousand_sep		2772132	1					
ANR	2772622	Parameter	size_t thousand_sep_len	1274:44:28318:28340	2772132	5	True				
ANR	2772623	ParameterType	size_t		2772132	0					
ANR	2772624	Identifier	thousand_sep_len		2772132	1					
ANR	2772625	CFGEntryNode	ENTRY		2772132		True				
ANR	2772626	CFGExitNode	EXIT		2772132		True				
ANR	2772627	Symbol	* s --		2772132						
ANR	2772628	Symbol	dec		2772132						
ANR	2772629	Symbol	MAX		2772132						
ANR	2772630	Symbol	strpbrk		2772132						
ANR	2772631	Symbol	dec_point		2772132						
ANR	2772632	Symbol	dp		2772132						
ANR	2772633	Symbol	dec_point_len		2772132						
ANR	2772634	Symbol	integral		2772132						
ANR	2772635	Symbol	tmpbuf		2772132						
ANR	2772636	Symbol	isdigit		2772132						
ANR	2772637	Symbol	* ZSTR_VAL		2772132						
ANR	2772638	Symbol	thousand_sep_len		2772132						
ANR	2772639	Symbol	res		2772132						
ANR	2772640	Symbol	* t --		2772132						
ANR	2772641	Symbol	PHP_ROUND_HALF_UP		2772132						
ANR	2772642	Symbol	zend_string_alloc		2772132						
ANR	2772643	Symbol	NULL		2772132						
ANR	2772644	Symbol	d		2772132						
ANR	2772645	Symbol	count		2772132						
ANR	2772646	Symbol	strpprintf		2772132						
ANR	2772647	Symbol	topad		2772132						
ANR	2772648	Symbol	ZSTR_VAL		2772132						
ANR	2772649	Symbol	thousand_sep		2772132						
ANR	2772650	Symbol	declen		2772132						
ANR	2772651	Symbol	s		2772132						
ANR	2772652	Symbol	t		2772132						
ANR	2772653	Symbol	reslen		2772132						
ANR	2772654	Symbol	ZSTR_LEN		2772132						
ANR	2772655	Symbol	is_negative		2772132						
ANR	2772656	Symbol	_php_math_round		2772132						
ANR	2772657	DeclStmt									
ANR	2772658	Decl							double	double	num
ANR	2772659	DeclStmt									
ANR	2772660	Decl							zend_long	zend_long	dec
ANR	2772661	DeclStmt									
ANR	2772662	Decl							char	char *	thousand_sep
ANR	2772663	Decl							char	char *	dec_point
ANR	2772664	DeclStmt									
ANR	2772665	Decl							char	char	thousand_sep_chr
ANR	2772666	Decl							char	char	dec_point_chr
ANR	2772667	DeclStmt									
ANR	2772668	Decl							size_t	size_t	thousand_sep_len
ANR	2772669	Decl							size_t	size_t	dec_point_len
ANR	2772670	DeclStmt									
ANR	2772671	Decl							double	double	num1
ANR	2772672	Decl							double	double	num2
ANR	2772673	DeclStmt									
ANR	2772674	Decl							zend_long	zend_long	dividend
ANR	2772675	Decl							zend_long	zend_long	divisor
