command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1141656	File	data/converged/CVE-2015-8617_php-src/ext_mbstring_oniguruma_enc_iso8859_13.c								
ANR	1141657	DeclStmt									
ANR	1141658	Decl							const UChar	const UChar [ 256 ]	EncISO_8859_13_ToLowerCaseTable
ANR	1141659	DeclStmt									
ANR	1141660	Decl							const unsigned short	const unsigned short [ 256 ]	EncISO_8859_13_CtypeTable
ANR	1141661	DeclStmt									
ANR	1141662	Decl							const UChar	const UChar *	p
ANR	1141663	Function	is_mbc_ambiguous	125:0:6522:7049							
ANR	1141664	FunctionDef	"is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		1141663	0					
ANR	1141665	CompoundStatement		127:0:6609:7049	1141663	0					
ANR	1141666	IdentifierDeclStatement	int v ;	128:2:6613:6618	1141663	0	True				
ANR	1141667	IdentifierDecl	v		1141663	0					
ANR	1141668	IdentifierDeclType	int		1141663	0					
ANR	1141669	Identifier	v		1141663	1					
ANR	1141670	IdentifierDeclStatement	const UChar * p = * pp ;	129:2:6622:6642	1141663	1	True				
ANR	1141671	IdentifierDecl	* p = * pp		1141663	0					
ANR	1141672	IdentifierDeclType	const UChar *		1141663	0					
ANR	1141673	Identifier	p		1141663	1					
ANR	1141674	AssignmentExpression	* p = * pp		1141663	2		=			
ANR	1141675	Identifier	p		1141663	0					
ANR	1141676	UnaryOperationExpression	* pp		1141663	1					
ANR	1141677	UnaryOperator	*		1141663	0					
ANR	1141678	Identifier	pp		1141663	1					
ANR	1141679	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		1141663	2					
ANR	1141680	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	131:6:6651:6715	1141663	0	True				
ANR	1141681	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		1141663	0		&&			
ANR	1141682	EqualityExpression	* p == 0xdf		1141663	0		==			
ANR	1141683	UnaryOperationExpression	* p		1141663	0					
ANR	1141684	UnaryOperator	*		1141663	0					
ANR	1141685	Identifier	p		1141663	1					
ANR	1141686	PrimaryExpression	0xdf		1141663	1					
ANR	1141687	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		1141663	1		!=			
ANR	1141688	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1141663	0		&			
ANR	1141689	Identifier	flag		1141663	0					
ANR	1141690	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1141663	1					
ANR	1141691	PrimaryExpression	0		1141663	1					
ANR	1141692	CompoundStatement		5:73:108:108	1141663	1					
ANR	1141693	ExpressionStatement	( * pp ) ++	132:4:6724:6731	1141663	0	True				
ANR	1141694	PostIncDecOperationExpression	( * pp ) ++		1141663	0					
ANR	1141695	UnaryOperationExpression	* pp		1141663	0					
ANR	1141696	UnaryOperator	*		1141663	0					
ANR	1141697	Identifier	pp		1141663	1					
ANR	1141698	IncDec	++		1141663	1					
ANR	1141699	ReturnStatement	return TRUE ;	133:4:6737:6748	1141663	1	True				
ANR	1141700	Identifier	TRUE		1141663	0					
ANR	1141701	ExpressionStatement	( * pp ) ++	136:2:6757:6764	1141663	3	True				
ANR	1141702	PostIncDecOperationExpression	( * pp ) ++		1141663	0					
ANR	1141703	UnaryOperationExpression	* pp		1141663	0					
ANR	1141704	UnaryOperator	*		1141663	0					
ANR	1141705	Identifier	pp		1141663	1					
ANR	1141706	IncDec	++		1141663	1					
ANR	1141707	ExpressionStatement	v = ( EncISO_8859_13_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )	137:2:6768:6841	1141663	4	True				
ANR	1141708	AssignmentExpression	v = ( EncISO_8859_13_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )		1141663	0		=			
ANR	1141709	Identifier	v		1141663	0					
ANR	1141710	BitAndExpression	EncISO_8859_13_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER )		1141663	1		&			
ANR	1141711	ArrayIndexing	EncISO_8859_13_CtypeTable [ * p ]		1141663	0					
ANR	1141712	Identifier	EncISO_8859_13_CtypeTable		1141663	0					
ANR	1141713	UnaryOperationExpression	* p		1141663	1					
ANR	1141714	UnaryOperator	*		1141663	0					
ANR	1141715	Identifier	p		1141663	1					
ANR	1141716	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		1141663	1		|			
ANR	1141717	Identifier	BIT_CTYPE_UPPER		1141663	0					
ANR	1141718	Identifier	BIT_CTYPE_LOWER		1141663	1					
ANR	1141719	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		1141663	5					
ANR	1141720	Condition	( v | BIT_CTYPE_LOWER ) != 0	138:6:6849:6874	1141663	0	True				
ANR	1141721	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		1141663	0		!=			
ANR	1141722	InclusiveOrExpression	v | BIT_CTYPE_LOWER		1141663	0		|			
ANR	1141723	Identifier	v		1141663	0					
ANR	1141724	Identifier	BIT_CTYPE_LOWER		1141663	1					
ANR	1141725	PrimaryExpression	0		1141663	1					
ANR	1141726	CompoundStatement		12:34:267:267	1141663	1					
ANR	1141727	IfStatement	if ( * p == 0xb5 )		1141663	0					
ANR	1141728	Condition	* p == 0xb5	140:8:6950:6959	1141663	0	True				
ANR	1141729	EqualityExpression	* p == 0xb5		1141663	0		==			
ANR	1141730	UnaryOperationExpression	* p		1141663	0					
ANR	1141731	UnaryOperator	*		1141663	0					
ANR	1141732	Identifier	p		1141663	1					
ANR	1141733	PrimaryExpression	0xb5		1141663	1					
ANR	1141734	ReturnStatement	return FALSE ;	141:6:6968:6980	1141663	1	True				
ANR	1141735	Identifier	FALSE		1141663	0					
ANR	1141736	ElseStatement	else		1141663	0					
ANR	1141737	ReturnStatement	return TRUE ;	143:6:6997:7008	1141663	0	True				
ANR	1141738	Identifier	TRUE		1141663	0					
ANR	1141739	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	146:2:7017:7047	1141663	6	True				
ANR	1141740	ConditionalExpression	v != 0 ? TRUE : FALSE		1141663	0					
ANR	1141741	Condition	v != 0		1141663	0					
ANR	1141742	EqualityExpression	v != 0		1141663	0		!=			
ANR	1141743	Identifier	v		1141663	0					
ANR	1141744	PrimaryExpression	0		1141663	1					
ANR	1141745	Identifier	TRUE		1141663	1					
ANR	1141746	Identifier	FALSE		1141663	2					
ANR	1141747	ReturnType	static int		1141663	1					
ANR	1141748	Identifier	is_mbc_ambiguous		1141663	2					
ANR	1141749	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		1141663	3					
ANR	1141750	Parameter	OnigCaseFoldType flag	126:17:6550:6570	1141663	0	True				
ANR	1141751	ParameterType	OnigCaseFoldType		1141663	0					
ANR	1141752	Identifier	flag		1141663	1					
ANR	1141753	Parameter	const UChar * * pp	126:40:6573:6588	1141663	1	True				
ANR	1141754	ParameterType	const UChar * *		1141663	0					
ANR	1141755	Identifier	pp		1141663	1					
ANR	1141756	Parameter	const UChar * end	126:58:6591:6606	1141663	2	True				
ANR	1141757	ParameterType	const UChar *		1141663	0					
ANR	1141758	Identifier	end		1141663	1					
ANR	1141759	CFGEntryNode	ENTRY		1141663		True				
ANR	1141760	CFGExitNode	EXIT		1141663		True				
ANR	1141761	Symbol	pp		1141663						
ANR	1141762	Symbol	flag		1141663						
ANR	1141763	Symbol	* pp		1141663						
ANR	1141764	Symbol	TRUE		1141663						
ANR	1141765	Symbol	p		1141663						
ANR	1141766	Symbol	v		1141663						
ANR	1141767	Symbol	EncISO_8859_13_CtypeTable		1141663						
ANR	1141768	Symbol	BIT_CTYPE_LOWER		1141663						
ANR	1141769	Symbol	* EncISO_8859_13_CtypeTable		1141663						
ANR	1141770	Symbol	end		1141663						
ANR	1141771	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1141663						
ANR	1141772	Symbol	* p		1141663						
ANR	1141773	Symbol	BIT_CTYPE_UPPER		1141663						
ANR	1141774	Symbol	FALSE		1141663						
ANR	1141775	Symbol	* * p		1141663						
ANR	1141776	Function	is_code_ctype	150:0:7059:7219							
ANR	1141777	FunctionDef	"is_code_ctype (OnigCodePoint code , unsigned int ctype)"		1141776	0					
ANR	1141778	CompoundStatement		152:0:7124:7219	1141776	0					
ANR	1141779	IfStatement	if ( code < 256 )		1141776	0					
ANR	1141780	Condition	code < 256	153:6:7132:7141	1141776	0	True				
ANR	1141781	RelationalExpression	code < 256		1141776	0		<			
ANR	1141782	Identifier	code		1141776	0					
ANR	1141783	PrimaryExpression	256		1141776	1					
ANR	1141784	ReturnStatement	"return ENC_IS_ISO_8859_13_CTYPE ( code , ctype ) ;"	154:4:7148:7192	1141776	1	True				
ANR	1141785	CallExpression	"ENC_IS_ISO_8859_13_CTYPE ( code , ctype )"		1141776	0					
ANR	1141786	Callee	ENC_IS_ISO_8859_13_CTYPE		1141776	0					
ANR	1141787	Identifier	ENC_IS_ISO_8859_13_CTYPE		1141776	0					
ANR	1141788	ArgumentList	code		1141776	1					
ANR	1141789	Argument	code		1141776	0					
ANR	1141790	Identifier	code		1141776	0					
ANR	1141791	Argument	ctype		1141776	1					
ANR	1141792	Identifier	ctype		1141776	0					
ANR	1141793	ElseStatement	else		1141776	0					
ANR	1141794	ReturnStatement	return FALSE ;	156:4:7205:7217	1141776	0	True				
ANR	1141795	Identifier	FALSE		1141776	0					
ANR	1141796	ReturnType	static int		1141776	1					
ANR	1141797	Identifier	is_code_ctype		1141776	2					
ANR	1141798	ParameterList	"OnigCodePoint code , unsigned int ctype"		1141776	3					
ANR	1141799	Parameter	OnigCodePoint code	151:14:7084:7101	1141776	0	True				
ANR	1141800	ParameterType	OnigCodePoint		1141776	0					
ANR	1141801	Identifier	code		1141776	1					
ANR	1141802	Parameter	unsigned int ctype	151:34:7104:7121	1141776	1	True				
ANR	1141803	ParameterType	unsigned int		1141776	0					
ANR	1141804	Identifier	ctype		1141776	1					
ANR	1141805	CFGEntryNode	ENTRY		1141776		True				
ANR	1141806	CFGExitNode	EXIT		1141776		True				
ANR	1141807	Symbol	code		1141776						
ANR	1141808	Symbol	ctype		1141776						
ANR	1141809	Symbol	FALSE		1141776						
ANR	1141810	Symbol	ENC_IS_ISO_8859_13_CTYPE		1141776						
ANR	1141811	DeclStmt									
ANR	1141812	Decl							const OnigPairCaseFoldCodes	const OnigPairCaseFoldCodes [ ]	CaseFoldMap
ANR	1141813	Function	apply_all_case_fold	193:0:7789:8045							
ANR	1141814	FunctionDef	"apply_all_case_fold (OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg)"		1141813	0					
ANR	1141815	CompoundStatement		196:0:7888:8045	1141813	0					
ANR	1141816	ReturnStatement	"return onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg ) ;"	197:2:7892:8043	1141813	0	True				
ANR	1141817	CallExpression	"onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg )"		1141813	0					
ANR	1141818	Callee	onigenc_apply_all_case_fold_with_map		1141813	0					
ANR	1141819	Identifier	onigenc_apply_all_case_fold_with_map		1141813	0					
ANR	1141820	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1141813	1					
ANR	1141821	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1141813	0					
ANR	1141822	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1141813	0		/			
ANR	1141823	SizeofExpression	sizeof ( CaseFoldMap )		1141813	0					
ANR	1141824	Sizeof	sizeof		1141813	0					
ANR	1141825	SizeofOperand	CaseFoldMap		1141813	1					
ANR	1141826	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		1141813	1					
ANR	1141827	Sizeof	sizeof		1141813	0					
ANR	1141828	SizeofOperand	OnigPairCaseFoldCodes		1141813	1					
ANR	1141829	Argument	CaseFoldMap		1141813	1					
ANR	1141830	Identifier	CaseFoldMap		1141813	0					
ANR	1141831	Argument	1		1141813	2					
ANR	1141832	PrimaryExpression	1		1141813	0					
ANR	1141833	Argument	flag		1141813	3					
ANR	1141834	Identifier	flag		1141813	0					
ANR	1141835	Argument	f		1141813	4					
ANR	1141836	Identifier	f		1141813	0					
ANR	1141837	Argument	arg		1141813	5					
ANR	1141838	Identifier	arg		1141813	0					
ANR	1141839	ReturnType	static int		1141813	1					
ANR	1141840	Identifier	apply_all_case_fold		1141813	2					
ANR	1141841	ParameterList	"OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg"		1141813	3					
ANR	1141842	Parameter	OnigCaseFoldType flag	194:20:7820:7840	1141813	0	True				
ANR	1141843	ParameterType	OnigCaseFoldType		1141813	0					
ANR	1141844	Identifier	flag		1141813	1					
ANR	1141845	Parameter	OnigApplyAllCaseFoldFunc f	195:6:7849:7874	1141813	1	True				
ANR	1141846	ParameterType	OnigApplyAllCaseFoldFunc		1141813	0					
ANR	1141847	Identifier	f		1141813	1					
ANR	1141848	Parameter	void * arg	195:34:7877:7885	1141813	2	True				
ANR	1141849	ParameterType	void *		1141813	0					
ANR	1141850	Identifier	arg		1141813	1					
ANR	1141851	CFGEntryNode	ENTRY		1141813		True				
ANR	1141852	CFGExitNode	EXIT		1141813		True				
ANR	1141853	Symbol	flag		1141813						
ANR	1141854	Symbol	f		1141813						
ANR	1141855	Symbol	arg		1141813						
ANR	1141856	Symbol	CaseFoldMap		1141813						
ANR	1141857	Symbol	onigenc_apply_all_case_fold_with_map		1141813						
ANR	1141858	Function	get_case_fold_codes_by_str	202:0:8048:8341							
ANR	1141859	FunctionDef	"get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		1141858	0					
ANR	1141860	CompoundStatement		205:0:8184:8341	1141858	0					
ANR	1141861	ReturnStatement	"return onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items ) ;"	206:2:8188:8339	1141858	0	True				
ANR	1141862	CallExpression	"onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items )"		1141858	0					
ANR	1141863	Callee	onigenc_get_case_fold_codes_by_str_with_map		1141858	0					
ANR	1141864	Identifier	onigenc_get_case_fold_codes_by_str_with_map		1141858	0					
ANR	1141865	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1141858	1					
ANR	1141866	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1141858	0					
ANR	1141867	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1141858	0		/			
ANR	1141868	SizeofExpression	sizeof ( CaseFoldMap )		1141858	0					
ANR	1141869	Sizeof	sizeof		1141858	0					
ANR	1141870	SizeofOperand	CaseFoldMap		1141858	1					
ANR	1141871	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		1141858	1					
ANR	1141872	Sizeof	sizeof		1141858	0					
ANR	1141873	SizeofOperand	OnigPairCaseFoldCodes		1141858	1					
ANR	1141874	Argument	CaseFoldMap		1141858	1					
ANR	1141875	Identifier	CaseFoldMap		1141858	0					
ANR	1141876	Argument	1		1141858	2					
ANR	1141877	PrimaryExpression	1		1141858	0					
ANR	1141878	Argument	flag		1141858	3					
ANR	1141879	Identifier	flag		1141858	0					
ANR	1141880	Argument	p		1141858	4					
ANR	1141881	Identifier	p		1141858	0					
ANR	1141882	Argument	end		1141858	5					
ANR	1141883	Identifier	end		1141858	0					
ANR	1141884	Argument	items		1141858	6					
ANR	1141885	Identifier	items		1141858	0					
ANR	1141886	ReturnType	static int		1141858	1					
ANR	1141887	Identifier	get_case_fold_codes_by_str		1141858	2					
ANR	1141888	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		1141858	3					
ANR	1141889	Parameter	OnigCaseFoldType flag	203:27:8086:8106	1141858	0	True				
ANR	1141890	ParameterType	OnigCaseFoldType		1141858	0					
ANR	1141891	Identifier	flag		1141858	1					
ANR	1141892	Parameter	const OnigUChar * p	204:3:8112:8129	1141858	1	True				
ANR	1141893	ParameterType	const OnigUChar *		1141858	0					
ANR	1141894	Identifier	p		1141858	1					
ANR	1141895	Parameter	const OnigUChar * end	204:23:8132:8151	1141858	2	True				
ANR	1141896	ParameterType	const OnigUChar *		1141858	0					
ANR	1141897	Identifier	end		1141858	1					
ANR	1141898	Parameter	OnigCaseFoldCodeItem items [ ]	204:45:8154:8181	1141858	3	True				
ANR	1141899	ParameterType	OnigCaseFoldCodeItem [ ]		1141858	0					
ANR	1141900	Identifier	items		1141858	1					
ANR	1141901	CFGEntryNode	ENTRY		1141858		True				
ANR	1141902	CFGExitNode	EXIT		1141858		True				
ANR	1141903	Symbol	p		1141858						
ANR	1141904	Symbol	flag		1141858						
ANR	1141905	Symbol	end		1141858						
ANR	1141906	Symbol	CaseFoldMap		1141858						
ANR	1141907	Symbol	onigenc_get_case_fold_codes_by_str_with_map		1141858						
ANR	1141908	Symbol	items		1141858						
ANR	1141909	DeclStmt									
ANR	1141910	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingISO_8859_13
