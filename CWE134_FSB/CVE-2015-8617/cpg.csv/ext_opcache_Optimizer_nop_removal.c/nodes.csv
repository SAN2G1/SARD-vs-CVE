command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1372385	File	data/converged/CVE-2015-8617_php-src/ext_opcache_Optimizer_nop_removal.c								
ANR	1372386	Function	zend_optimizer_nop_removal	34:0:1609:4876							
ANR	1372387	FunctionDef	zend_optimizer_nop_removal (zend_op_array * op_array)		1372386	0					
ANR	1372388	CompoundStatement		35:0:1666:4876	1372386	0					
ANR	1372389	IdentifierDeclStatement	"zend_op * end , * opline ;"	36:1:1669:1690	1372386	0	True				
ANR	1372390	IdentifierDecl	* end		1372386	0					
ANR	1372391	IdentifierDeclType	zend_op *		1372386	0					
ANR	1372392	Identifier	end		1372386	1					
ANR	1372393	IdentifierDecl	* opline		1372386	1					
ANR	1372394	IdentifierDeclType	zend_op *		1372386	0					
ANR	1372395	Identifier	opline		1372386	1					
ANR	1372396	IdentifierDeclStatement	"uint32_t new_count , i , shift ;"	37:1:1693:1721	1372386	1	True				
ANR	1372397	IdentifierDecl	new_count		1372386	0					
ANR	1372398	IdentifierDeclType	uint32_t		1372386	0					
ANR	1372399	Identifier	new_count		1372386	1					
ANR	1372400	IdentifierDecl	i		1372386	1					
ANR	1372401	IdentifierDeclType	uint32_t		1372386	0					
ANR	1372402	Identifier	i		1372386	1					
ANR	1372403	IdentifierDecl	shift		1372386	2					
ANR	1372404	IdentifierDeclType	uint32_t		1372386	0					
ANR	1372405	Identifier	shift		1372386	1					
ANR	1372406	IdentifierDeclStatement	int j ;	38:1:1724:1729	1372386	2	True				
ANR	1372407	IdentifierDecl	j		1372386	0					
ANR	1372408	IdentifierDeclType	int		1372386	0					
ANR	1372409	Identifier	j		1372386	1					
ANR	1372410	IdentifierDeclStatement	uint32_t * shiftlist ;	39:1:1732:1751	1372386	3	True				
ANR	1372411	IdentifierDecl	* shiftlist		1372386	0					
ANR	1372412	IdentifierDeclType	uint32_t *		1372386	0					
ANR	1372413	Identifier	shiftlist		1372386	1					
ANR	1372414	ExpressionStatement	ALLOCA_FLAG ( use_heap )	40:1:1754:1775	1372386	4	True				
ANR	1372415	CallExpression	ALLOCA_FLAG ( use_heap )		1372386	0					
ANR	1372416	Callee	ALLOCA_FLAG		1372386	0					
ANR	1372417	Identifier	ALLOCA_FLAG		1372386	0					
ANR	1372418	ArgumentList	use_heap		1372386	1					
ANR	1372419	Argument	use_heap		1372386	0					
ANR	1372420	Identifier	use_heap		1372386	0					
ANR	1372421	ExpressionStatement	shiftlist = ( uint32_t * ) DO_ALLOCA ( sizeof ( uint32_t ) * op_array -> last )	42:1:1779:1847	1372386	5	True				
ANR	1372422	AssignmentExpression	shiftlist = ( uint32_t * ) DO_ALLOCA ( sizeof ( uint32_t ) * op_array -> last )		1372386	0		=			
ANR	1372423	Identifier	shiftlist		1372386	0					
ANR	1372424	CastExpression	( uint32_t * ) DO_ALLOCA ( sizeof ( uint32_t ) * op_array -> last )		1372386	1					
ANR	1372425	CastTarget	uint32_t *		1372386	0					
ANR	1372426	CallExpression	DO_ALLOCA ( sizeof ( uint32_t ) * op_array -> last )		1372386	1					
ANR	1372427	Callee	DO_ALLOCA		1372386	0					
ANR	1372428	Identifier	DO_ALLOCA		1372386	0					
ANR	1372429	ArgumentList	sizeof ( uint32_t ) * op_array -> last		1372386	1					
ANR	1372430	Argument	sizeof ( uint32_t ) * op_array -> last		1372386	0					
ANR	1372431	MultiplicativeExpression	sizeof ( uint32_t ) * op_array -> last		1372386	0		*			
ANR	1372432	SizeofExpression	sizeof ( uint32_t )		1372386	0					
ANR	1372433	Sizeof	sizeof		1372386	0					
ANR	1372434	SizeofOperand	uint32_t		1372386	1					
ANR	1372435	PtrMemberAccess	op_array -> last		1372386	1					
ANR	1372436	Identifier	op_array		1372386	0					
ANR	1372437	Identifier	last		1372386	1					
ANR	1372438	ExpressionStatement	i = new_count = shift = 0	43:1:1850:1875	1372386	6	True				
ANR	1372439	AssignmentExpression	i = new_count = shift = 0		1372386	0		=			
ANR	1372440	Identifier	i		1372386	0					
ANR	1372441	AssignmentExpression	new_count = shift = 0		1372386	1		=			
ANR	1372442	Identifier	new_count		1372386	0					
ANR	1372443	AssignmentExpression	shift = 0		1372386	1		=			
ANR	1372444	Identifier	shift		1372386	0					
ANR	1372445	PrimaryExpression	0		1372386	1					
ANR	1372446	ExpressionStatement	end = op_array -> opcodes + op_array -> last	44:1:1878:1918	1372386	7	True				
ANR	1372447	AssignmentExpression	end = op_array -> opcodes + op_array -> last		1372386	0		=			
ANR	1372448	Identifier	end		1372386	0					
ANR	1372449	AdditiveExpression	op_array -> opcodes + op_array -> last		1372386	1		+			
ANR	1372450	PtrMemberAccess	op_array -> opcodes		1372386	0					
ANR	1372451	Identifier	op_array		1372386	0					
ANR	1372452	Identifier	opcodes		1372386	1					
ANR	1372453	PtrMemberAccess	op_array -> last		1372386	1					
ANR	1372454	Identifier	op_array		1372386	0					
ANR	1372455	Identifier	last		1372386	1					
ANR	1372456	ForStatement	for ( opline = op_array -> opcodes ; opline < end ; opline ++ )		1372386	8					
ANR	1372457	ForInit	opline = op_array -> opcodes ;	45:6:1926:1952	1372386	0	True				
ANR	1372458	AssignmentExpression	opline = op_array -> opcodes		1372386	0		=			
ANR	1372459	Identifier	opline		1372386	0					
ANR	1372460	PtrMemberAccess	op_array -> opcodes		1372386	1					
ANR	1372461	Identifier	op_array		1372386	0					
ANR	1372462	Identifier	opcodes		1372386	1					
ANR	1372463	Condition	opline < end	45:34:1954:1965	1372386	1	True				
ANR	1372464	RelationalExpression	opline < end		1372386	0		<			
ANR	1372465	Identifier	opline		1372386	0					
ANR	1372466	Identifier	end		1372386	1					
ANR	1372467	PostIncDecOperationExpression	opline ++	45:48:1968:1975	1372386	2	True				
ANR	1372468	Identifier	opline		1372386	0					
ANR	1372469	IncDec	++		1372386	1					
ANR	1372470	CompoundStatement		11:58:311:311	1372386	3					
ANR	1372471	IfStatement	if ( opline -> opcode == ZEND_JMP && ZEND_OP1 ( opline ) . opline_num > i )		1372386	0					
ANR	1372472	Condition	opline -> opcode == ZEND_JMP && ZEND_OP1 ( opline ) . opline_num > i	48:6:2015:2075	1372386	0	True				
ANR	1372473	AndExpression	opline -> opcode == ZEND_JMP && ZEND_OP1 ( opline ) . opline_num > i		1372386	0		&&			
ANR	1372474	EqualityExpression	opline -> opcode == ZEND_JMP		1372386	0		==			
ANR	1372475	PtrMemberAccess	opline -> opcode		1372386	0					
ANR	1372476	Identifier	opline		1372386	0					
ANR	1372477	Identifier	opcode		1372386	1					
ANR	1372478	Identifier	ZEND_JMP		1372386	1					
ANR	1372479	RelationalExpression	ZEND_OP1 ( opline ) . opline_num > i		1372386	1		>			
ANR	1372480	MemberAccess	ZEND_OP1 ( opline ) . opline_num		1372386	0					
ANR	1372481	CallExpression	ZEND_OP1 ( opline )		1372386	0					
ANR	1372482	Callee	ZEND_OP1		1372386	0					
ANR	1372483	Identifier	ZEND_OP1		1372386	0					
ANR	1372484	ArgumentList	opline		1372386	1					
ANR	1372485	Argument	opline		1372386	0					
ANR	1372486	Identifier	opline		1372386	0					
ANR	1372487	Identifier	opline_num		1372386	1					
ANR	1372488	Identifier	i		1372386	1					
ANR	1372489	CompoundStatement		16:3:471:540	1372386	1					
ANR	1372490	IdentifierDeclStatement	zend_op * target = op_array -> opcodes + ZEND_OP1 ( opline ) . opline_num - 1 ;	50:3:2138:2207	1372386	0	True				
ANR	1372491	IdentifierDecl	* target = op_array -> opcodes + ZEND_OP1 ( opline ) . opline_num - 1		1372386	0					
ANR	1372492	IdentifierDeclType	zend_op *		1372386	0					
ANR	1372493	Identifier	target		1372386	1					
ANR	1372494	AssignmentExpression	* target = op_array -> opcodes + ZEND_OP1 ( opline ) . opline_num - 1		1372386	2		=			
ANR	1372495	Identifier	target		1372386	0					
ANR	1372496	AdditiveExpression	op_array -> opcodes + ZEND_OP1 ( opline ) . opline_num - 1		1372386	1		+			
ANR	1372497	PtrMemberAccess	op_array -> opcodes		1372386	0					
ANR	1372498	Identifier	op_array		1372386	0					
ANR	1372499	Identifier	opcodes		1372386	1					
ANR	1372500	AdditiveExpression	ZEND_OP1 ( opline ) . opline_num - 1		1372386	1		-			
ANR	1372501	MemberAccess	ZEND_OP1 ( opline ) . opline_num		1372386	0					
ANR	1372502	CallExpression	ZEND_OP1 ( opline )		1372386	0					
ANR	1372503	Callee	ZEND_OP1		1372386	0					
ANR	1372504	Identifier	ZEND_OP1		1372386	0					
ANR	1372505	ArgumentList	opline		1372386	1					
ANR	1372506	Argument	opline		1372386	0					
ANR	1372507	Identifier	opline		1372386	0					
ANR	1372508	Identifier	opline_num		1372386	1					
ANR	1372509	PrimaryExpression	1		1372386	1					
ANR	1372510	WhileStatement	while ( target -> opcode == ZEND_NOP )		1372386	1					
ANR	1372511	Condition	target -> opcode == ZEND_NOP	52:10:2220:2245	1372386	0	True				
ANR	1372512	EqualityExpression	target -> opcode == ZEND_NOP		1372386	0		==			
ANR	1372513	PtrMemberAccess	target -> opcode		1372386	0					
ANR	1372514	Identifier	target		1372386	0					
ANR	1372515	Identifier	opcode		1372386	1					
ANR	1372516	Identifier	ZEND_NOP		1372386	1					
ANR	1372517	CompoundStatement		18:38:581:581	1372386	1					
ANR	1372518	ExpressionStatement	target --	53:4:2254:2262	1372386	0	True				
ANR	1372519	PostIncDecOperationExpression	target --		1372386	0					
ANR	1372520	Identifier	target		1372386	0					
ANR	1372521	IncDec	--		1372386	1					
ANR	1372522	IfStatement	if ( target == opline )		1372386	2					
ANR	1372523	Condition	target == opline	55:7:2276:2291	1372386	0	True				
ANR	1372524	EqualityExpression	target == opline		1372386	0		==			
ANR	1372525	Identifier	target		1372386	0					
ANR	1372526	Identifier	opline		1372386	1					
ANR	1372527	CompoundStatement		21:25:627:627	1372386	1					
ANR	1372528	ExpressionStatement	opline -> opcode = ZEND_NOP	57:4:2320:2345	1372386	0	True				
ANR	1372529	AssignmentExpression	opline -> opcode = ZEND_NOP		1372386	0		=			
ANR	1372530	PtrMemberAccess	opline -> opcode		1372386	0					
ANR	1372531	Identifier	opline		1372386	0					
ANR	1372532	Identifier	opcode		1372386	1					
ANR	1372533	Identifier	ZEND_NOP		1372386	1					
ANR	1372534	ExpressionStatement	shiftlist [ i ++ ] = shift	61:2:2359:2381	1372386	1	True				
ANR	1372535	AssignmentExpression	shiftlist [ i ++ ] = shift		1372386	0		=			
ANR	1372536	ArrayIndexing	shiftlist [ i ++ ]		1372386	0					
ANR	1372537	Identifier	shiftlist		1372386	0					
ANR	1372538	PostIncDecOperationExpression	i ++		1372386	1					
ANR	1372539	Identifier	i		1372386	0					
ANR	1372540	IncDec	++		1372386	1					
ANR	1372541	Identifier	shift		1372386	1					
ANR	1372542	IfStatement	if ( opline -> opcode == ZEND_NOP )		1372386	2					
ANR	1372543	Condition	opline -> opcode == ZEND_NOP	62:6:2389:2414	1372386	0	True				
ANR	1372544	EqualityExpression	opline -> opcode == ZEND_NOP		1372386	0		==			
ANR	1372545	PtrMemberAccess	opline -> opcode		1372386	0					
ANR	1372546	Identifier	opline		1372386	0					
ANR	1372547	Identifier	opcode		1372386	1					
ANR	1372548	Identifier	ZEND_NOP		1372386	1					
ANR	1372549	CompoundStatement		28:34:750:750	1372386	1					
ANR	1372550	ExpressionStatement	shift ++	63:3:2422:2429	1372386	0	True				
ANR	1372551	PostIncDecOperationExpression	shift ++		1372386	0					
ANR	1372552	Identifier	shift		1372386	0					
ANR	1372553	IncDec	++		1372386	1					
ANR	1372554	ElseStatement	else		1372386	0					
ANR	1372555	CompoundStatement		30:9:773:773	1372386	0					
ANR	1372556	IfStatement	if ( shift )		1372386	0					
ANR	1372557	Condition	shift	65:7:2449:2453	1372386	0	True				
ANR	1372558	Identifier	shift		1372386	0					
ANR	1372559	CompoundStatement		31:14:789:789	1372386	1					
ANR	1372560	ExpressionStatement	op_array -> opcodes [ new_count ] = * opline	66:4:2462:2500	1372386	0	True				
ANR	1372561	AssignmentExpression	op_array -> opcodes [ new_count ] = * opline		1372386	0		=			
ANR	1372562	ArrayIndexing	op_array -> opcodes [ new_count ]		1372386	0					
ANR	1372563	PtrMemberAccess	op_array -> opcodes		1372386	0					
ANR	1372564	Identifier	op_array		1372386	0					
ANR	1372565	Identifier	opcodes		1372386	1					
ANR	1372566	Identifier	new_count		1372386	1					
ANR	1372567	UnaryOperationExpression	* opline		1372386	1					
ANR	1372568	UnaryOperator	*		1372386	0					
ANR	1372569	Identifier	opline		1372386	1					
ANR	1372570	ExpressionStatement	new_count ++	68:3:2510:2521	1372386	1	True				
ANR	1372571	PostIncDecOperationExpression	new_count ++		1372386	0					
ANR	1372572	Identifier	new_count		1372386	0					
ANR	1372573	IncDec	++		1372386	1					
ANR	1372574	IfStatement	if ( shift )		1372386	9					
ANR	1372575	Condition	shift	72:5:2536:2540	1372386	0	True				
ANR	1372576	Identifier	shift		1372386	0					
ANR	1372577	CompoundStatement		38:12:876:876	1372386	1					
ANR	1372578	ExpressionStatement	op_array -> last = new_count	73:2:2547:2573	1372386	0	True				
ANR	1372579	AssignmentExpression	op_array -> last = new_count		1372386	0		=			
ANR	1372580	PtrMemberAccess	op_array -> last		1372386	0					
ANR	1372581	Identifier	op_array		1372386	0					
ANR	1372582	Identifier	last		1372386	1					
ANR	1372583	Identifier	new_count		1372386	1					
ANR	1372584	ExpressionStatement	end = op_array -> opcodes + op_array -> last	74:2:2577:2617	1372386	1	True				
ANR	1372585	AssignmentExpression	end = op_array -> opcodes + op_array -> last		1372386	0		=			
ANR	1372586	Identifier	end		1372386	0					
ANR	1372587	AdditiveExpression	op_array -> opcodes + op_array -> last		1372386	1		+			
ANR	1372588	PtrMemberAccess	op_array -> opcodes		1372386	0					
ANR	1372589	Identifier	op_array		1372386	0					
ANR	1372590	Identifier	opcodes		1372386	1					
ANR	1372591	PtrMemberAccess	op_array -> last		1372386	1					
ANR	1372592	Identifier	op_array		1372386	0					
ANR	1372593	Identifier	last		1372386	1					
ANR	1372594	ForStatement	for ( opline = op_array -> opcodes ; opline < end ; opline ++ )		1372386	2					
ANR	1372595	ForInit	opline = op_array -> opcodes ;	77:7:2647:2673	1372386	0	True				
ANR	1372596	AssignmentExpression	opline = op_array -> opcodes		1372386	0		=			
ANR	1372597	Identifier	opline		1372386	0					
ANR	1372598	PtrMemberAccess	op_array -> opcodes		1372386	1					
ANR	1372599	Identifier	op_array		1372386	0					
ANR	1372600	Identifier	opcodes		1372386	1					
ANR	1372601	Condition	opline < end	77:35:2675:2684	1372386	1	True				
ANR	1372602	RelationalExpression	opline < end		1372386	0		<			
ANR	1372603	Identifier	opline		1372386	0					
ANR	1372604	Identifier	end		1372386	1					
ANR	1372605	PostIncDecOperationExpression	opline ++	77:47:2687:2694	1372386	2	True				
ANR	1372606	Identifier	opline		1372386	0					
ANR	1372607	IncDec	++		1372386	1					
ANR	1372608	CompoundStatement		43:57:1030:1030	1372386	3					
ANR	1372609	SwitchStatement	switch ( opline -> opcode )		1372386	0					
ANR	1372610	Condition	opline -> opcode	78:11:2710:2723	1372386	0	True				
ANR	1372611	PtrMemberAccess	opline -> opcode		1372386	0					
ANR	1372612	Identifier	opline		1372386	0					
ANR	1372613	Identifier	opcode		1372386	1					
ANR	1372614	CompoundStatement		44:27:1059:1059	1372386	1					
ANR	1372615	Label	case ZEND_JMP :	79:4:2732:2745	1372386	0	True				
ANR	1372616	Identifier	ZEND_JMP		1372386	0					
ANR	1372617	Label	case ZEND_FAST_CALL :	80:4:2751:2770	1372386	1	True				
ANR	1372618	Identifier	ZEND_FAST_CALL		1372386	0					
ANR	1372619	Label	case ZEND_DECLARE_ANON_CLASS :	81:4:2776:2804	1372386	2	True				
ANR	1372620	Identifier	ZEND_DECLARE_ANON_CLASS		1372386	0					
ANR	1372621	Label	case ZEND_DECLARE_ANON_INHERITED_CLASS :	82:4:2810:2848	1372386	3	True				
ANR	1372622	Identifier	ZEND_DECLARE_ANON_INHERITED_CLASS		1372386	0					
ANR	1372623	ExpressionStatement	ZEND_OP1 ( opline ) . opline_num -= shiftlist [ ZEND_OP1 ( opline ) . opline_num ]	83:5:2855:2924	1372386	4	True				
ANR	1372624	AssignmentExpression	ZEND_OP1 ( opline ) . opline_num -= shiftlist [ ZEND_OP1 ( opline ) . opline_num ]		1372386	0		-=			
ANR	1372625	MemberAccess	ZEND_OP1 ( opline ) . opline_num		1372386	0					
ANR	1372626	CallExpression	ZEND_OP1 ( opline )		1372386	0					
ANR	1372627	Callee	ZEND_OP1		1372386	0					
ANR	1372628	Identifier	ZEND_OP1		1372386	0					
ANR	1372629	ArgumentList	opline		1372386	1					
ANR	1372630	Argument	opline		1372386	0					
ANR	1372631	Identifier	opline		1372386	0					
ANR	1372632	Identifier	opline_num		1372386	1					
ANR	1372633	ArrayIndexing	shiftlist [ ZEND_OP1 ( opline ) . opline_num ]		1372386	1					
ANR	1372634	Identifier	shiftlist		1372386	0					
ANR	1372635	MemberAccess	ZEND_OP1 ( opline ) . opline_num		1372386	1					
ANR	1372636	CallExpression	ZEND_OP1 ( opline )		1372386	0					
ANR	1372637	Callee	ZEND_OP1		1372386	0					
ANR	1372638	Identifier	ZEND_OP1		1372386	0					
ANR	1372639	ArgumentList	opline		1372386	1					
ANR	1372640	Argument	opline		1372386	0					
ANR	1372641	Identifier	opline		1372386	0					
ANR	1372642	Identifier	opline_num		1372386	1					
ANR	1372643	BreakStatement	break ;	84:5:2931:2936	1372386	5	True				
ANR	1372644	Label	case ZEND_JMPZ :	85:4:2942:2956	1372386	6	True				
ANR	1372645	Identifier	ZEND_JMPZ		1372386	0					
ANR	1372646	Label	case ZEND_JMPNZ :	86:4:2962:2977	1372386	7	True				
ANR	1372647	Identifier	ZEND_JMPNZ		1372386	0					
ANR	1372648	Label	case ZEND_JMPZ_EX :	87:4:2983:3000	1372386	8	True				
ANR	1372649	Identifier	ZEND_JMPZ_EX		1372386	0					
ANR	1372650	Label	case ZEND_JMPNZ_EX :	88:4:3006:3024	1372386	9	True				
ANR	1372651	Identifier	ZEND_JMPNZ_EX		1372386	0					
ANR	1372652	Label	case ZEND_FE_RESET_R :	89:4:3030:3050	1372386	10	True				
ANR	1372653	Identifier	ZEND_FE_RESET_R		1372386	0					
ANR	1372654	Label	case ZEND_FE_RESET_RW :	90:4:3056:3077	1372386	11	True				
ANR	1372655	Identifier	ZEND_FE_RESET_RW		1372386	0					
ANR	1372656	Label	case ZEND_NEW :	91:4:3083:3096	1372386	12	True				
ANR	1372657	Identifier	ZEND_NEW		1372386	0					
ANR	1372658	Label	case ZEND_JMP_SET :	92:4:3102:3119	1372386	13	True				
ANR	1372659	Identifier	ZEND_JMP_SET		1372386	0					
ANR	1372660	Label	case ZEND_COALESCE :	93:4:3125:3143	1372386	14	True				
ANR	1372661	Identifier	ZEND_COALESCE		1372386	0					
ANR	1372662	Label	case ZEND_ASSERT_CHECK :	94:4:3149:3171	1372386	15	True				
ANR	1372663	Identifier	ZEND_ASSERT_CHECK		1372386	0					
ANR	1372664	ExpressionStatement	ZEND_OP2 ( opline ) . opline_num -= shiftlist [ ZEND_OP2 ( opline ) . opline_num ]	95:5:3178:3247	1372386	16	True				
ANR	1372665	AssignmentExpression	ZEND_OP2 ( opline ) . opline_num -= shiftlist [ ZEND_OP2 ( opline ) . opline_num ]		1372386	0		-=			
ANR	1372666	MemberAccess	ZEND_OP2 ( opline ) . opline_num		1372386	0					
ANR	1372667	CallExpression	ZEND_OP2 ( opline )		1372386	0					
ANR	1372668	Callee	ZEND_OP2		1372386	0					
ANR	1372669	Identifier	ZEND_OP2		1372386	0					
ANR	1372670	ArgumentList	opline		1372386	1					
ANR	1372671	Argument	opline		1372386	0					
ANR	1372672	Identifier	opline		1372386	0					
ANR	1372673	Identifier	opline_num		1372386	1					
ANR	1372674	ArrayIndexing	shiftlist [ ZEND_OP2 ( opline ) . opline_num ]		1372386	1					
ANR	1372675	Identifier	shiftlist		1372386	0					
ANR	1372676	MemberAccess	ZEND_OP2 ( opline ) . opline_num		1372386	1					
ANR	1372677	CallExpression	ZEND_OP2 ( opline )		1372386	0					
ANR	1372678	Callee	ZEND_OP2		1372386	0					
ANR	1372679	Identifier	ZEND_OP2		1372386	0					
ANR	1372680	ArgumentList	opline		1372386	1					
ANR	1372681	Argument	opline		1372386	0					
ANR	1372682	Identifier	opline		1372386	0					
ANR	1372683	Identifier	opline_num		1372386	1					
ANR	1372684	BreakStatement	break ;	96:5:3254:3259	1372386	17	True				
ANR	1372685	Label	case ZEND_FE_FETCH_R :	97:4:3265:3285	1372386	18	True				
ANR	1372686	Identifier	ZEND_FE_FETCH_R		1372386	0					
ANR	1372687	Label	case ZEND_FE_FETCH_RW :	98:4:3291:3312	1372386	19	True				
ANR	1372688	Identifier	ZEND_FE_FETCH_RW		1372386	0					
ANR	1372689	ExpressionStatement	opline -> extended_value -= shiftlist [ opline -> extended_value ]	99:5:3319:3378	1372386	20	True				
ANR	1372690	AssignmentExpression	opline -> extended_value -= shiftlist [ opline -> extended_value ]		1372386	0		-=			
ANR	1372691	PtrMemberAccess	opline -> extended_value		1372386	0					
ANR	1372692	Identifier	opline		1372386	0					
ANR	1372693	Identifier	extended_value		1372386	1					
ANR	1372694	ArrayIndexing	shiftlist [ opline -> extended_value ]		1372386	1					
ANR	1372695	Identifier	shiftlist		1372386	0					
ANR	1372696	PtrMemberAccess	opline -> extended_value		1372386	1					
ANR	1372697	Identifier	opline		1372386	0					
ANR	1372698	Identifier	extended_value		1372386	1					
ANR	1372699	BreakStatement	break ;	100:5:3385:3390	1372386	21	True				
ANR	1372700	Label	case ZEND_JMPZNZ :	101:4:3396:3412	1372386	22	True				
ANR	1372701	Identifier	ZEND_JMPZNZ		1372386	0					
ANR	1372702	ExpressionStatement	ZEND_OP2 ( opline ) . opline_num -= shiftlist [ ZEND_OP2 ( opline ) . opline_num ]	102:5:3419:3488	1372386	23	True				
ANR	1372703	AssignmentExpression	ZEND_OP2 ( opline ) . opline_num -= shiftlist [ ZEND_OP2 ( opline ) . opline_num ]		1372386	0		-=			
ANR	1372704	MemberAccess	ZEND_OP2 ( opline ) . opline_num		1372386	0					
ANR	1372705	CallExpression	ZEND_OP2 ( opline )		1372386	0					
ANR	1372706	Callee	ZEND_OP2		1372386	0					
ANR	1372707	Identifier	ZEND_OP2		1372386	0					
ANR	1372708	ArgumentList	opline		1372386	1					
ANR	1372709	Argument	opline		1372386	0					
ANR	1372710	Identifier	opline		1372386	0					
ANR	1372711	Identifier	opline_num		1372386	1					
ANR	1372712	ArrayIndexing	shiftlist [ ZEND_OP2 ( opline ) . opline_num ]		1372386	1					
ANR	1372713	Identifier	shiftlist		1372386	0					
ANR	1372714	MemberAccess	ZEND_OP2 ( opline ) . opline_num		1372386	1					
ANR	1372715	CallExpression	ZEND_OP2 ( opline )		1372386	0					
ANR	1372716	Callee	ZEND_OP2		1372386	0					
ANR	1372717	Identifier	ZEND_OP2		1372386	0					
ANR	1372718	ArgumentList	opline		1372386	1					
ANR	1372719	Argument	opline		1372386	0					
ANR	1372720	Identifier	opline		1372386	0					
ANR	1372721	Identifier	opline_num		1372386	1					
ANR	1372722	ExpressionStatement	opline -> extended_value -= shiftlist [ opline -> extended_value ]	103:5:3495:3554	1372386	24	True				
ANR	1372723	AssignmentExpression	opline -> extended_value -= shiftlist [ opline -> extended_value ]		1372386	0		-=			
ANR	1372724	PtrMemberAccess	opline -> extended_value		1372386	0					
ANR	1372725	Identifier	opline		1372386	0					
ANR	1372726	Identifier	extended_value		1372386	1					
ANR	1372727	ArrayIndexing	shiftlist [ opline -> extended_value ]		1372386	1					
ANR	1372728	Identifier	shiftlist		1372386	0					
ANR	1372729	PtrMemberAccess	opline -> extended_value		1372386	1					
ANR	1372730	Identifier	opline		1372386	0					
ANR	1372731	Identifier	extended_value		1372386	1					
ANR	1372732	BreakStatement	break ;	104:5:3561:3566	1372386	25	True				
ANR	1372733	Label	case ZEND_CATCH :	105:4:3572:3587	1372386	26	True				
ANR	1372734	Identifier	ZEND_CATCH		1372386	0					
ANR	1372735	ExpressionStatement	opline -> extended_value -= shiftlist [ opline -> extended_value ]	106:5:3594:3653	1372386	27	True				
ANR	1372736	AssignmentExpression	opline -> extended_value -= shiftlist [ opline -> extended_value ]		1372386	0		-=			
ANR	1372737	PtrMemberAccess	opline -> extended_value		1372386	0					
ANR	1372738	Identifier	opline		1372386	0					
ANR	1372739	Identifier	extended_value		1372386	1					
ANR	1372740	ArrayIndexing	shiftlist [ opline -> extended_value ]		1372386	1					
ANR	1372741	Identifier	shiftlist		1372386	0					
ANR	1372742	PtrMemberAccess	opline -> extended_value		1372386	1					
ANR	1372743	Identifier	opline		1372386	0					
ANR	1372744	Identifier	extended_value		1372386	1					
ANR	1372745	BreakStatement	break ;	107:5:3660:3665	1372386	28	True				
ANR	1372746	ForStatement	for ( j = 0 ; j < op_array -> last_brk_cont ; j ++ )		1372386	3					
ANR	1372747	ForInit	j = 0 ;	112:7:3714:3719	1372386	0	True				
ANR	1372748	AssignmentExpression	j = 0		1372386	0		=			
ANR	1372749	Identifier	j		1372386	0					
ANR	1372750	PrimaryExpression	0		1372386	1					
ANR	1372751	Condition	j < op_array -> last_brk_cont	112:14:3721:3747	1372386	1	True				
ANR	1372752	RelationalExpression	j < op_array -> last_brk_cont		1372386	0		<			
ANR	1372753	Identifier	j		1372386	0					
ANR	1372754	PtrMemberAccess	op_array -> last_brk_cont		1372386	1					
ANR	1372755	Identifier	op_array		1372386	0					
ANR	1372756	Identifier	last_brk_cont		1372386	1					
ANR	1372757	PostIncDecOperationExpression	j ++	112:43:3750:3752	1372386	2	True				
ANR	1372758	Identifier	j		1372386	0					
ANR	1372759	IncDec	++		1372386	1					
ANR	1372760	CompoundStatement		78:48:2088:2088	1372386	3					
ANR	1372761	ExpressionStatement	op_array -> brk_cont_array [ j ] . brk -= shiftlist [ op_array -> brk_cont_array [ j ] . brk ]	113:3:3760:3837	1372386	0	True				
ANR	1372762	AssignmentExpression	op_array -> brk_cont_array [ j ] . brk -= shiftlist [ op_array -> brk_cont_array [ j ] . brk ]		1372386	0		-=			
ANR	1372763	MemberAccess	op_array -> brk_cont_array [ j ] . brk		1372386	0					
ANR	1372764	ArrayIndexing	op_array -> brk_cont_array [ j ]		1372386	0					
ANR	1372765	PtrMemberAccess	op_array -> brk_cont_array		1372386	0					
ANR	1372766	Identifier	op_array		1372386	0					
ANR	1372767	Identifier	brk_cont_array		1372386	1					
ANR	1372768	Identifier	j		1372386	1					
ANR	1372769	Identifier	brk		1372386	1					
ANR	1372770	ArrayIndexing	shiftlist [ op_array -> brk_cont_array [ j ] . brk ]		1372386	1					
ANR	1372771	Identifier	shiftlist		1372386	0					
ANR	1372772	MemberAccess	op_array -> brk_cont_array [ j ] . brk		1372386	1					
ANR	1372773	ArrayIndexing	op_array -> brk_cont_array [ j ]		1372386	0					
ANR	1372774	PtrMemberAccess	op_array -> brk_cont_array		1372386	0					
ANR	1372775	Identifier	op_array		1372386	0					
ANR	1372776	Identifier	brk_cont_array		1372386	1					
ANR	1372777	Identifier	j		1372386	1					
ANR	1372778	Identifier	brk		1372386	1					
ANR	1372779	ExpressionStatement	op_array -> brk_cont_array [ j ] . cont -= shiftlist [ op_array -> brk_cont_array [ j ] . cont ]	114:3:3842:3921	1372386	1	True				
ANR	1372780	AssignmentExpression	op_array -> brk_cont_array [ j ] . cont -= shiftlist [ op_array -> brk_cont_array [ j ] . cont ]		1372386	0		-=			
ANR	1372781	MemberAccess	op_array -> brk_cont_array [ j ] . cont		1372386	0					
ANR	1372782	ArrayIndexing	op_array -> brk_cont_array [ j ]		1372386	0					
ANR	1372783	PtrMemberAccess	op_array -> brk_cont_array		1372386	0					
ANR	1372784	Identifier	op_array		1372386	0					
ANR	1372785	Identifier	brk_cont_array		1372386	1					
ANR	1372786	Identifier	j		1372386	1					
ANR	1372787	Identifier	cont		1372386	1					
ANR	1372788	ArrayIndexing	shiftlist [ op_array -> brk_cont_array [ j ] . cont ]		1372386	1					
ANR	1372789	Identifier	shiftlist		1372386	0					
ANR	1372790	MemberAccess	op_array -> brk_cont_array [ j ] . cont		1372386	1					
ANR	1372791	ArrayIndexing	op_array -> brk_cont_array [ j ]		1372386	0					
ANR	1372792	PtrMemberAccess	op_array -> brk_cont_array		1372386	0					
ANR	1372793	Identifier	op_array		1372386	0					
ANR	1372794	Identifier	brk_cont_array		1372386	1					
ANR	1372795	Identifier	j		1372386	1					
ANR	1372796	Identifier	cont		1372386	1					
ANR	1372797	ExpressionStatement	op_array -> brk_cont_array [ j ] . start -= shiftlist [ op_array -> brk_cont_array [ j ] . start ]	115:3:3926:4007	1372386	2	True				
ANR	1372798	AssignmentExpression	op_array -> brk_cont_array [ j ] . start -= shiftlist [ op_array -> brk_cont_array [ j ] . start ]		1372386	0		-=			
ANR	1372799	MemberAccess	op_array -> brk_cont_array [ j ] . start		1372386	0					
ANR	1372800	ArrayIndexing	op_array -> brk_cont_array [ j ]		1372386	0					
ANR	1372801	PtrMemberAccess	op_array -> brk_cont_array		1372386	0					
ANR	1372802	Identifier	op_array		1372386	0					
ANR	1372803	Identifier	brk_cont_array		1372386	1					
ANR	1372804	Identifier	j		1372386	1					
ANR	1372805	Identifier	start		1372386	1					
ANR	1372806	ArrayIndexing	shiftlist [ op_array -> brk_cont_array [ j ] . start ]		1372386	1					
ANR	1372807	Identifier	shiftlist		1372386	0					
ANR	1372808	MemberAccess	op_array -> brk_cont_array [ j ] . start		1372386	1					
ANR	1372809	ArrayIndexing	op_array -> brk_cont_array [ j ]		1372386	0					
ANR	1372810	PtrMemberAccess	op_array -> brk_cont_array		1372386	0					
ANR	1372811	Identifier	op_array		1372386	0					
ANR	1372812	Identifier	brk_cont_array		1372386	1					
ANR	1372813	Identifier	j		1372386	1					
ANR	1372814	Identifier	start		1372386	1					
ANR	1372815	ForStatement	for ( j = 0 ; j < op_array -> last_try_catch ; j ++ )		1372386	4					
ANR	1372816	ForInit	j = 0 ;	119:7:4052:4057	1372386	0	True				
ANR	1372817	AssignmentExpression	j = 0		1372386	0		=			
ANR	1372818	Identifier	j		1372386	0					
ANR	1372819	PrimaryExpression	0		1372386	1					
ANR	1372820	Condition	j < op_array -> last_try_catch	119:14:4059:4086	1372386	1	True				
ANR	1372821	RelationalExpression	j < op_array -> last_try_catch		1372386	0		<			
ANR	1372822	Identifier	j		1372386	0					
ANR	1372823	PtrMemberAccess	op_array -> last_try_catch		1372386	1					
ANR	1372824	Identifier	op_array		1372386	0					
ANR	1372825	Identifier	last_try_catch		1372386	1					
ANR	1372826	PostIncDecOperationExpression	j ++	119:44:4089:4091	1372386	2	True				
ANR	1372827	Identifier	j		1372386	0					
ANR	1372828	IncDec	++		1372386	1					
ANR	1372829	CompoundStatement		85:49:2427:2427	1372386	3					
ANR	1372830	ExpressionStatement	op_array -> try_catch_array [ j ] . try_op -= shiftlist [ op_array -> try_catch_array [ j ] . try_op ]	120:3:4099:4184	1372386	0	True				
ANR	1372831	AssignmentExpression	op_array -> try_catch_array [ j ] . try_op -= shiftlist [ op_array -> try_catch_array [ j ] . try_op ]		1372386	0		-=			
ANR	1372832	MemberAccess	op_array -> try_catch_array [ j ] . try_op		1372386	0					
ANR	1372833	ArrayIndexing	op_array -> try_catch_array [ j ]		1372386	0					
ANR	1372834	PtrMemberAccess	op_array -> try_catch_array		1372386	0					
ANR	1372835	Identifier	op_array		1372386	0					
ANR	1372836	Identifier	try_catch_array		1372386	1					
ANR	1372837	Identifier	j		1372386	1					
ANR	1372838	Identifier	try_op		1372386	1					
ANR	1372839	ArrayIndexing	shiftlist [ op_array -> try_catch_array [ j ] . try_op ]		1372386	1					
ANR	1372840	Identifier	shiftlist		1372386	0					
ANR	1372841	MemberAccess	op_array -> try_catch_array [ j ] . try_op		1372386	1					
ANR	1372842	ArrayIndexing	op_array -> try_catch_array [ j ]		1372386	0					
ANR	1372843	PtrMemberAccess	op_array -> try_catch_array		1372386	0					
ANR	1372844	Identifier	op_array		1372386	0					
ANR	1372845	Identifier	try_catch_array		1372386	1					
ANR	1372846	Identifier	j		1372386	1					
ANR	1372847	Identifier	try_op		1372386	1					
ANR	1372848	ExpressionStatement	op_array -> try_catch_array [ j ] . catch_op -= shiftlist [ op_array -> try_catch_array [ j ] . catch_op ]	121:3:4189:4278	1372386	1	True				
ANR	1372849	AssignmentExpression	op_array -> try_catch_array [ j ] . catch_op -= shiftlist [ op_array -> try_catch_array [ j ] . catch_op ]		1372386	0		-=			
ANR	1372850	MemberAccess	op_array -> try_catch_array [ j ] . catch_op		1372386	0					
ANR	1372851	ArrayIndexing	op_array -> try_catch_array [ j ]		1372386	0					
ANR	1372852	PtrMemberAccess	op_array -> try_catch_array		1372386	0					
ANR	1372853	Identifier	op_array		1372386	0					
ANR	1372854	Identifier	try_catch_array		1372386	1					
ANR	1372855	Identifier	j		1372386	1					
ANR	1372856	Identifier	catch_op		1372386	1					
ANR	1372857	ArrayIndexing	shiftlist [ op_array -> try_catch_array [ j ] . catch_op ]		1372386	1					
ANR	1372858	Identifier	shiftlist		1372386	0					
ANR	1372859	MemberAccess	op_array -> try_catch_array [ j ] . catch_op		1372386	1					
ANR	1372860	ArrayIndexing	op_array -> try_catch_array [ j ]		1372386	0					
ANR	1372861	PtrMemberAccess	op_array -> try_catch_array		1372386	0					
ANR	1372862	Identifier	op_array		1372386	0					
ANR	1372863	Identifier	try_catch_array		1372386	1					
ANR	1372864	Identifier	j		1372386	1					
ANR	1372865	Identifier	catch_op		1372386	1					
ANR	1372866	IfStatement	if ( op_array -> try_catch_array [ j ] . finally_op )		1372386	2					
ANR	1372867	Condition	op_array -> try_catch_array [ j ] . finally_op	122:7:4287:4325	1372386	0	True				
ANR	1372868	MemberAccess	op_array -> try_catch_array [ j ] . finally_op		1372386	0					
ANR	1372869	ArrayIndexing	op_array -> try_catch_array [ j ]		1372386	0					
ANR	1372870	PtrMemberAccess	op_array -> try_catch_array		1372386	0					
ANR	1372871	Identifier	op_array		1372386	0					
ANR	1372872	Identifier	try_catch_array		1372386	1					
ANR	1372873	Identifier	j		1372386	1					
ANR	1372874	Identifier	finally_op		1372386	1					
ANR	1372875	CompoundStatement		88:48:2661:2661	1372386	1					
ANR	1372876	ExpressionStatement	op_array -> try_catch_array [ j ] . finally_op -= shiftlist [ op_array -> try_catch_array [ j ] . finally_op ]	123:4:4334:4427	1372386	0	True				
ANR	1372877	AssignmentExpression	op_array -> try_catch_array [ j ] . finally_op -= shiftlist [ op_array -> try_catch_array [ j ] . finally_op ]		1372386	0		-=			
ANR	1372878	MemberAccess	op_array -> try_catch_array [ j ] . finally_op		1372386	0					
ANR	1372879	ArrayIndexing	op_array -> try_catch_array [ j ]		1372386	0					
ANR	1372880	PtrMemberAccess	op_array -> try_catch_array		1372386	0					
ANR	1372881	Identifier	op_array		1372386	0					
ANR	1372882	Identifier	try_catch_array		1372386	1					
ANR	1372883	Identifier	j		1372386	1					
ANR	1372884	Identifier	finally_op		1372386	1					
ANR	1372885	ArrayIndexing	shiftlist [ op_array -> try_catch_array [ j ] . finally_op ]		1372386	1					
ANR	1372886	Identifier	shiftlist		1372386	0					
ANR	1372887	MemberAccess	op_array -> try_catch_array [ j ] . finally_op		1372386	1					
ANR	1372888	ArrayIndexing	op_array -> try_catch_array [ j ]		1372386	0					
ANR	1372889	PtrMemberAccess	op_array -> try_catch_array		1372386	0					
ANR	1372890	Identifier	op_array		1372386	0					
ANR	1372891	Identifier	try_catch_array		1372386	1					
ANR	1372892	Identifier	j		1372386	1					
ANR	1372893	Identifier	finally_op		1372386	1					
ANR	1372894	ExpressionStatement	op_array -> try_catch_array [ j ] . finally_end -= shiftlist [ op_array -> try_catch_array [ j ] . finally_end ]	124:4:4433:4528	1372386	1	True				
ANR	1372895	AssignmentExpression	op_array -> try_catch_array [ j ] . finally_end -= shiftlist [ op_array -> try_catch_array [ j ] . finally_end ]		1372386	0		-=			
ANR	1372896	MemberAccess	op_array -> try_catch_array [ j ] . finally_end		1372386	0					
ANR	1372897	ArrayIndexing	op_array -> try_catch_array [ j ]		1372386	0					
ANR	1372898	PtrMemberAccess	op_array -> try_catch_array		1372386	0					
ANR	1372899	Identifier	op_array		1372386	0					
ANR	1372900	Identifier	try_catch_array		1372386	1					
ANR	1372901	Identifier	j		1372386	1					
ANR	1372902	Identifier	finally_end		1372386	1					
ANR	1372903	ArrayIndexing	shiftlist [ op_array -> try_catch_array [ j ] . finally_end ]		1372386	1					
ANR	1372904	Identifier	shiftlist		1372386	0					
ANR	1372905	MemberAccess	op_array -> try_catch_array [ j ] . finally_end		1372386	1					
ANR	1372906	ArrayIndexing	op_array -> try_catch_array [ j ]		1372386	0					
ANR	1372907	PtrMemberAccess	op_array -> try_catch_array		1372386	0					
ANR	1372908	Identifier	op_array		1372386	0					
ANR	1372909	Identifier	try_catch_array		1372386	1					
ANR	1372910	Identifier	j		1372386	1					
ANR	1372911	Identifier	finally_end		1372386	1					
ANR	1372912	IfStatement	if ( op_array -> early_binding != ( uint32_t ) - 1 )		1372386	5					
ANR	1372913	Condition	op_array -> early_binding != ( uint32_t ) - 1	129:6:4580:4618	1372386	0	True				
ANR	1372914	EqualityExpression	op_array -> early_binding != ( uint32_t ) - 1		1372386	0		!=			
ANR	1372915	PtrMemberAccess	op_array -> early_binding		1372386	0					
ANR	1372916	Identifier	op_array		1372386	0					
ANR	1372917	Identifier	early_binding		1372386	1					
ANR	1372918	CastExpression	( uint32_t ) - 1		1372386	1					
ANR	1372919	CastTarget	uint32_t		1372386	0					
ANR	1372920	UnaryOperationExpression	- 1		1372386	1					
ANR	1372921	UnaryOperator	-		1372386	0					
ANR	1372922	PrimaryExpression	1		1372386	1					
ANR	1372923	CompoundStatement		96:3:2959:3006	1372386	1					
ANR	1372924	IdentifierDeclStatement	uint32_t * opline_num = & op_array -> early_binding ;	130:3:4626:4673	1372386	0	True				
ANR	1372925	IdentifierDecl	* opline_num = & op_array -> early_binding		1372386	0					
ANR	1372926	IdentifierDeclType	uint32_t *		1372386	0					
ANR	1372927	Identifier	opline_num		1372386	1					
ANR	1372928	AssignmentExpression	* opline_num = & op_array -> early_binding		1372386	2		=			
ANR	1372929	Identifier	opline_num		1372386	0					
ANR	1372930	UnaryOperationExpression	& op_array -> early_binding		1372386	1					
ANR	1372931	UnaryOperator	&		1372386	0					
ANR	1372932	PtrMemberAccess	op_array -> early_binding		1372386	1					
ANR	1372933	Identifier	op_array		1372386	0					
ANR	1372934	Identifier	early_binding		1372386	1					
ANR	1372935	DoStatement	do		1372386	1					
ANR	1372936	CompoundStatement		98:6:3015:3015	1372386	0					
ANR	1372937	ExpressionStatement	* opline_num -= shiftlist [ * opline_num ]	133:4:4688:4725	1372386	0	True				
ANR	1372938	AssignmentExpression	* opline_num -= shiftlist [ * opline_num ]		1372386	0		-=			
ANR	1372939	UnaryOperationExpression	* opline_num		1372386	0					
ANR	1372940	UnaryOperator	*		1372386	0					
ANR	1372941	Identifier	opline_num		1372386	1					
ANR	1372942	ArrayIndexing	shiftlist [ * opline_num ]		1372386	1					
ANR	1372943	Identifier	shiftlist		1372386	0					
ANR	1372944	UnaryOperationExpression	* opline_num		1372386	1					
ANR	1372945	UnaryOperator	*		1372386	0					
ANR	1372946	Identifier	opline_num		1372386	1					
ANR	1372947	ExpressionStatement	opline_num = & ZEND_RESULT ( & op_array -> opcodes [ * opline_num ] ) . opline_num	134:4:4731:4800	1372386	1	True				
ANR	1372948	AssignmentExpression	opline_num = & ZEND_RESULT ( & op_array -> opcodes [ * opline_num ] ) . opline_num		1372386	0		=			
ANR	1372949	Identifier	opline_num		1372386	0					
ANR	1372950	UnaryOperationExpression	& ZEND_RESULT ( & op_array -> opcodes [ * opline_num ] ) . opline_num		1372386	1					
ANR	1372951	UnaryOperator	&		1372386	0					
ANR	1372952	MemberAccess	ZEND_RESULT ( & op_array -> opcodes [ * opline_num ] ) . opline_num		1372386	1					
ANR	1372953	CallExpression	ZEND_RESULT ( & op_array -> opcodes [ * opline_num ] )		1372386	0					
ANR	1372954	Callee	ZEND_RESULT		1372386	0					
ANR	1372955	Identifier	ZEND_RESULT		1372386	0					
ANR	1372956	ArgumentList	& op_array -> opcodes [ * opline_num ]		1372386	1					
ANR	1372957	Argument	& op_array -> opcodes [ * opline_num ]		1372386	0					
ANR	1372958	UnaryOperationExpression	& op_array -> opcodes [ * opline_num ]		1372386	0					
ANR	1372959	UnaryOperator	&		1372386	0					
ANR	1372960	ArrayIndexing	op_array -> opcodes [ * opline_num ]		1372386	1					
ANR	1372961	PtrMemberAccess	op_array -> opcodes		1372386	0					
ANR	1372962	Identifier	op_array		1372386	0					
ANR	1372963	Identifier	opcodes		1372386	1					
ANR	1372964	UnaryOperationExpression	* opline_num		1372386	1					
ANR	1372965	UnaryOperator	*		1372386	0					
ANR	1372966	Identifier	opline_num		1372386	1					
ANR	1372967	Identifier	opline_num		1372386	1					
ANR	1372968	Condition	* opline_num != ( uint32_t ) - 1	135:12:4814:4840	1372386	1	True				
ANR	1372969	EqualityExpression	* opline_num != ( uint32_t ) - 1		1372386	0		!=			
ANR	1372970	UnaryOperationExpression	* opline_num		1372386	0					
ANR	1372971	UnaryOperator	*		1372386	0					
ANR	1372972	Identifier	opline_num		1372386	1					
ANR	1372973	CastExpression	( uint32_t ) - 1		1372386	1					
ANR	1372974	CastTarget	uint32_t		1372386	0					
ANR	1372975	UnaryOperationExpression	- 1		1372386	1					
ANR	1372976	UnaryOperator	-		1372386	0					
ANR	1372977	PrimaryExpression	1		1372386	1					
ANR	1372978	ExpressionStatement	FREE_ALLOCA ( shiftlist )	138:1:4852:4874	1372386	10	True				
ANR	1372979	CallExpression	FREE_ALLOCA ( shiftlist )		1372386	0					
ANR	1372980	Callee	FREE_ALLOCA		1372386	0					
ANR	1372981	Identifier	FREE_ALLOCA		1372386	0					
ANR	1372982	ArgumentList	shiftlist		1372386	1					
ANR	1372983	Argument	shiftlist		1372386	0					
ANR	1372984	Identifier	shiftlist		1372386	0					
ANR	1372985	ReturnType	void		1372386	1					
ANR	1372986	Identifier	zend_optimizer_nop_removal		1372386	2					
ANR	1372987	ParameterList	zend_op_array * op_array		1372386	3					
ANR	1372988	Parameter	zend_op_array * op_array	34:32:1641:1663	1372386	0	True				
ANR	1372989	ParameterType	zend_op_array *		1372386	0					
ANR	1372990	Identifier	op_array		1372386	1					
ANR	1372991	CFGEntryNode	ENTRY		1372386		True				
ANR	1372992	CFGExitNode	EXIT		1372386		True				
ANR	1372993	Symbol	* * op_array -> brk_cont_array		1372386						
ANR	1372994	Symbol	* op_array -> try_catch_array [ j ] . finally_end		1372386						
ANR	1372995	Symbol	* new_count		1372386						
ANR	1372996	Symbol	* * * op_array		1372386						
ANR	1372997	Symbol	ZEND_OP1 ( opline ) . opline_num		1372386						
ANR	1372998	Symbol	* * op_array -> try_catch_array		1372386						
ANR	1372999	Symbol	shift		1372386						
ANR	1373000	Symbol	& ZEND_RESULT ( & op_array -> opcodes [ * opline_num ] ) . opline_num		1372386						
ANR	1373001	Symbol	opline -> extended_value		1372386						
ANR	1373002	Symbol	op_array -> brk_cont_array [ j ] . brk		1372386						
ANR	1373003	Symbol	opline		1372386						
ANR	1373004	Symbol	op_array -> early_binding		1372386						
ANR	1373005	Symbol	op_array -> try_catch_array [ j ] . try_op		1372386						
ANR	1373006	Symbol	op_array -> try_catch_array		1372386						
ANR	1373007	Symbol	& op_array -> early_binding		1372386						
ANR	1373008	Symbol	* * j		1372386						
ANR	1373009	Symbol	* op_array -> try_catch_array [ j ] . finally_op		1372386						
ANR	1373010	Symbol	* op_array -> try_catch_array [ j ] . catch_op		1372386						
ANR	1373011	Symbol	ZEND_NOP		1372386						
ANR	1373012	Symbol	* ZEND_OP2 ( opline ) . opline_num		1372386						
ANR	1373013	Symbol	* op_array		1372386						
ANR	1373014	Symbol	* * opline_num		1372386						
ANR	1373015	Symbol	op_array -> last		1372386						
ANR	1373016	Symbol	* opline_num		1372386						
ANR	1373017	Symbol	ZEND_OP2 ( opline ) . opline_num		1372386						
ANR	1373018	Symbol	new_count		1372386						
ANR	1373019	Symbol	* opline -> extended_value		1372386						
ANR	1373020	Symbol	opline_num		1372386						
ANR	1373021	Symbol	* * op_array		1372386						
ANR	1373022	Symbol	op_array -> try_catch_array [ j ] . catch_op		1372386						
ANR	1373023	Symbol	use_heap		1372386						
ANR	1373024	Symbol	* op_array -> try_catch_array		1372386						
ANR	1373025	Symbol	op_array -> brk_cont_array [ j ] . cont		1372386						
ANR	1373026	Symbol	op_array -> brk_cont_array		1372386						
ANR	1373027	Symbol	op_array -> opcodes		1372386						
ANR	1373028	Symbol	* op_array -> try_catch_array [ j ] . try_op		1372386						
ANR	1373029	Symbol	& ZEND_RESULT		1372386						
ANR	1373030	Symbol	* shiftlist		1372386						
ANR	1373031	Symbol	ZEND_RESULT		1372386						
ANR	1373032	Symbol	DO_ALLOCA		1372386						
ANR	1373033	Symbol	end		1372386						
ANR	1373034	Symbol	* * opline		1372386						
ANR	1373035	Symbol	op_array -> try_catch_array [ j ] . finally_op		1372386						
ANR	1373036	Symbol	* ZEND_OP1		1372386						
ANR	1373037	Symbol	* op_array -> brk_cont_array [ j ] . cont		1372386						
ANR	1373038	Symbol	op_array -> brk_cont_array [ j ] . start		1372386						
ANR	1373039	Symbol	* ZEND_OP2		1372386						
ANR	1373040	Symbol	* op_array -> brk_cont_array		1372386						
ANR	1373041	Symbol	i		1372386						
ANR	1373042	Symbol	* op_array -> brk_cont_array [ j ] . brk		1372386						
ANR	1373043	Symbol	j		1372386						
ANR	1373044	Symbol	shiftlist		1372386						
ANR	1373045	Symbol	ZEND_OP1		1372386						
ANR	1373046	Symbol	target		1372386						
ANR	1373047	Symbol	ZEND_OP2		1372386						
ANR	1373048	Symbol	op_array -> last_brk_cont		1372386						
ANR	1373049	Symbol	op_array -> last_try_catch		1372386						
ANR	1373050	Symbol	op_array -> try_catch_array [ j ] . finally_end		1372386						
ANR	1373051	Symbol	* target		1372386						
ANR	1373052	Symbol	* op_array -> brk_cont_array [ j ] . start		1372386						
ANR	1373053	Symbol	ZEND_JMP		1372386						
ANR	1373054	Symbol	* opline		1372386						
ANR	1373055	Symbol	* j		1372386						
ANR	1373056	Symbol	opline -> opcode		1372386						
ANR	1373057	Symbol	target -> opcode		1372386						
ANR	1373058	Symbol	* ZEND_OP1 ( opline ) . opline_num		1372386						
ANR	1373059	Symbol	op_array		1372386						
ANR	1373060	Symbol	* op_array -> opcodes		1372386						
