command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2783083	File	data/converged/CVE-2015-8617_php-src/ext_standard_scanf.c								
ANR	2783084	ClassDef	CharSet	104:8:4731:4904							
ANR	2783085	DeclStmt									
ANR	2783086	Decl							int	int	exclude
ANR	2783087	DeclStmt									
ANR	2783088	Decl							int	int	nchars
ANR	2783089	DeclStmt									
ANR	2783090	Decl							char	char *	chars
ANR	2783091	DeclStmt									
ANR	2783092	Decl							int	int	nranges
ANR	2783093	ClassDef	Range	109:1:4842:4893							
ANR	2783094	DeclStmt									
ANR	2783095	Decl							char	char	start
ANR	2783096	DeclStmt									
ANR	2783097	Decl							char	char	end
ANR	2783098	DeclStmt									
ANR	2783099	Decl							Range	Range *	ranges
ANR	2783100	DeclStmt									
ANR	2783101	Decl							CharSet	CharSet	CharSet
ANR	2783102	DeclStmt									
ANR	2783103	Decl							char	"char * ( CharSet * cset , char * format )"	BuildCharSet
ANR	2783104	DeclStmt									
ANR	2783105	Decl							int	"int ( CharSet * cset , int ch )"	CharInSet
ANR	2783106	DeclStmt									
ANR	2783107	Decl							void	void ( CharSet * cset )	ReleaseCharSet
ANR	2783108	DeclStmt									
ANR	2783109	Decl							void	"void ( int numVars , zval * return_value )"	scan_set_error_return
ANR	2783110	Function	BuildCharSet	141:0:5646:7419							
ANR	2783111	FunctionDef	"BuildCharSet (CharSet * cset , char * format)"		2783110	0					
ANR	2783112	CompoundStatement		142:0:5702:7419	2783110	0					
ANR	2783113	IdentifierDeclStatement	"char * ch , start ;"	143:1:5705:5720	2783110	0	True				
ANR	2783114	IdentifierDecl	* ch		2783110	0					
ANR	2783115	IdentifierDeclType	char *		2783110	0					
ANR	2783116	Identifier	ch		2783110	1					
ANR	2783117	IdentifierDecl	start		2783110	1					
ANR	2783118	IdentifierDeclType	char		2783110	0					
ANR	2783119	Identifier	start		2783110	1					
ANR	2783120	IdentifierDeclStatement	int nranges ;	144:1:5723:5735	2783110	1	True				
ANR	2783121	IdentifierDecl	nranges		2783110	0					
ANR	2783122	IdentifierDeclType	int		2783110	0					
ANR	2783123	Identifier	nranges		2783110	1					
ANR	2783124	IdentifierDeclStatement	char * end ;	145:1:5738:5747	2783110	2	True				
ANR	2783125	IdentifierDecl	* end		2783110	0					
ANR	2783126	IdentifierDeclType	char *		2783110	0					
ANR	2783127	Identifier	end		2783110	1					
ANR	2783128	ExpressionStatement	"memset ( cset , 0 , sizeof ( CharSet ) )"	147:1:5751:5783	2783110	3	True				
ANR	2783129	CallExpression	"memset ( cset , 0 , sizeof ( CharSet ) )"		2783110	0					
ANR	2783130	Callee	memset		2783110	0					
ANR	2783131	Identifier	memset		2783110	0					
ANR	2783132	ArgumentList	cset		2783110	1					
ANR	2783133	Argument	cset		2783110	0					
ANR	2783134	Identifier	cset		2783110	0					
ANR	2783135	Argument	0		2783110	1					
ANR	2783136	PrimaryExpression	0		2783110	0					
ANR	2783137	Argument	sizeof ( CharSet )		2783110	2					
ANR	2783138	SizeofExpression	sizeof ( CharSet )		2783110	0					
ANR	2783139	Sizeof	sizeof		2783110	0					
ANR	2783140	SizeofOperand	CharSet		2783110	1					
ANR	2783141	ExpressionStatement	ch = format	149:1:5787:5798	2783110	4	True				
ANR	2783142	AssignmentExpression	ch = format		2783110	0		=			
ANR	2783143	Identifier	ch		2783110	0					
ANR	2783144	Identifier	format		2783110	1					
ANR	2783145	IfStatement	if ( * ch == '^' )		2783110	5					
ANR	2783146	Condition	* ch == '^'	150:5:5805:5814	2783110	0	True				
ANR	2783147	EqualityExpression	* ch == '^'		2783110	0		==			
ANR	2783148	UnaryOperationExpression	* ch		2783110	0					
ANR	2783149	UnaryOperator	*		2783110	0					
ANR	2783150	Identifier	ch		2783110	1					
ANR	2783151	PrimaryExpression	'^'		2783110	1					
ANR	2783152	CompoundStatement		9:17:114:114	2783110	1					
ANR	2783153	ExpressionStatement	cset -> exclude = 1	151:2:5821:5838	2783110	0	True				
ANR	2783154	AssignmentExpression	cset -> exclude = 1		2783110	0		=			
ANR	2783155	PtrMemberAccess	cset -> exclude		2783110	0					
ANR	2783156	Identifier	cset		2783110	0					
ANR	2783157	Identifier	exclude		2783110	1					
ANR	2783158	PrimaryExpression	1		2783110	1					
ANR	2783159	ExpressionStatement	ch = ++ format	152:2:5842:5855	2783110	1	True				
ANR	2783160	AssignmentExpression	ch = ++ format		2783110	0		=			
ANR	2783161	Identifier	ch		2783110	0					
ANR	2783162	UnaryExpression	++ format		2783110	1					
ANR	2783163	IncDec	++		2783110	0					
ANR	2783164	Identifier	format		2783110	1					
ANR	2783165	ExpressionStatement	end = format + 1	154:1:5861:5877	2783110	6	True				
ANR	2783166	AssignmentExpression	end = format + 1		2783110	0		=			
ANR	2783167	Identifier	end		2783110	0					
ANR	2783168	AdditiveExpression	format + 1		2783110	1		+			
ANR	2783169	Identifier	format		2783110	0					
ANR	2783170	PrimaryExpression	1		2783110	1					
ANR	2783171	IfStatement	if ( * ch == ']' )		2783110	7					
ANR	2783172	Condition	* ch == ']'	159:5:5976:5985	2783110	0	True				
ANR	2783173	EqualityExpression	* ch == ']'		2783110	0		==			
ANR	2783174	UnaryOperationExpression	* ch		2783110	0					
ANR	2783175	UnaryOperator	*		2783110	0					
ANR	2783176	Identifier	ch		2783110	1					
ANR	2783177	PrimaryExpression	']'		2783110	1					
ANR	2783178	CompoundStatement		18:17:285:285	2783110	1					
ANR	2783179	ExpressionStatement	ch = end ++	160:2:5992:6002	2783110	0	True				
ANR	2783180	AssignmentExpression	ch = end ++		2783110	0		=			
ANR	2783181	Identifier	ch		2783110	0					
ANR	2783182	PostIncDecOperationExpression	end ++		2783110	1					
ANR	2783183	Identifier	end		2783110	0					
ANR	2783184	IncDec	++		2783110	1					
ANR	2783185	ExpressionStatement	nranges = 0	162:1:6008:6019	2783110	8	True				
ANR	2783186	AssignmentExpression	nranges = 0		2783110	0		=			
ANR	2783187	Identifier	nranges		2783110	0					
ANR	2783188	PrimaryExpression	0		2783110	1					
ANR	2783189	WhileStatement	while ( * ch != ']' )		2783110	9					
ANR	2783190	Condition	* ch != ']'	163:8:6029:6038	2783110	0	True				
ANR	2783191	EqualityExpression	* ch != ']'		2783110	0		!=			
ANR	2783192	UnaryOperationExpression	* ch		2783110	0					
ANR	2783193	UnaryOperator	*		2783110	0					
ANR	2783194	Identifier	ch		2783110	1					
ANR	2783195	PrimaryExpression	']'		2783110	1					
ANR	2783196	CompoundStatement		22:20:338:338	2783110	1					
ANR	2783197	IfStatement	if ( * ch == '-' )		2783110	0					
ANR	2783198	Condition	* ch == '-'	164:6:6049:6058	2783110	0	True				
ANR	2783199	EqualityExpression	* ch == '-'		2783110	0		==			
ANR	2783200	UnaryOperationExpression	* ch		2783110	0					
ANR	2783201	UnaryOperator	*		2783110	0					
ANR	2783202	Identifier	ch		2783110	1					
ANR	2783203	PrimaryExpression	'-'		2783110	1					
ANR	2783204	CompoundStatement		23:18:358:358	2783110	1					
ANR	2783205	ExpressionStatement	nranges ++	165:3:6066:6075	2783110	0	True				
ANR	2783206	PostIncDecOperationExpression	nranges ++		2783110	0					
ANR	2783207	Identifier	nranges		2783110	0					
ANR	2783208	IncDec	++		2783110	1					
ANR	2783209	ExpressionStatement	ch = end ++	167:2:6083:6093	2783110	1	True				
ANR	2783210	AssignmentExpression	ch = end ++		2783110	0		=			
ANR	2783211	Identifier	ch		2783110	0					
ANR	2783212	PostIncDecOperationExpression	end ++		2783110	1					
ANR	2783213	Identifier	end		2783110	0					
ANR	2783214	IncDec	++		2783110	1					
ANR	2783215	ExpressionStatement	"cset -> chars = ( char * ) safe_emalloc ( sizeof ( char ) , ( end - format - 1 ) , 0 )"	170:1:6100:6172	2783110	10	True				
ANR	2783216	AssignmentExpression	"cset -> chars = ( char * ) safe_emalloc ( sizeof ( char ) , ( end - format - 1 ) , 0 )"		2783110	0		=			
ANR	2783217	PtrMemberAccess	cset -> chars		2783110	0					
ANR	2783218	Identifier	cset		2783110	0					
ANR	2783219	Identifier	chars		2783110	1					
ANR	2783220	CastExpression	"( char * ) safe_emalloc ( sizeof ( char ) , ( end - format - 1 ) , 0 )"		2783110	1					
ANR	2783221	CastTarget	char *		2783110	0					
ANR	2783222	CallExpression	"safe_emalloc ( sizeof ( char ) , ( end - format - 1 ) , 0 )"		2783110	1					
ANR	2783223	Callee	safe_emalloc		2783110	0					
ANR	2783224	Identifier	safe_emalloc		2783110	0					
ANR	2783225	ArgumentList	sizeof ( char )		2783110	1					
ANR	2783226	Argument	sizeof ( char )		2783110	0					
ANR	2783227	SizeofExpression	sizeof ( char )		2783110	0					
ANR	2783228	Sizeof	sizeof		2783110	0					
ANR	2783229	SizeofOperand	char		2783110	1					
ANR	2783230	Argument	end - format - 1		2783110	1					
ANR	2783231	AdditiveExpression	end - format - 1		2783110	0		-			
ANR	2783232	Identifier	end		2783110	0					
ANR	2783233	AdditiveExpression	format - 1		2783110	1		-			
ANR	2783234	Identifier	format		2783110	0					
ANR	2783235	PrimaryExpression	1		2783110	1					
ANR	2783236	Argument	0		2783110	2					
ANR	2783237	PrimaryExpression	0		2783110	0					
ANR	2783238	IfStatement	if ( nranges > 0 )		2783110	11					
ANR	2783239	Condition	nranges > 0	171:5:6179:6189	2783110	0	True				
ANR	2783240	RelationalExpression	nranges > 0		2783110	0		>			
ANR	2783241	Identifier	nranges		2783110	0					
ANR	2783242	PrimaryExpression	0		2783110	1					
ANR	2783243	CompoundStatement		30:18:489:489	2783110	1					
ANR	2783244	ExpressionStatement	"cset -> ranges = ( struct Range * ) safe_emalloc ( sizeof ( struct Range ) , nranges , 0 )"	172:2:6196:6274	2783110	0	True				
ANR	2783245	AssignmentExpression	"cset -> ranges = ( struct Range * ) safe_emalloc ( sizeof ( struct Range ) , nranges , 0 )"		2783110	0		=			
ANR	2783246	PtrMemberAccess	cset -> ranges		2783110	0					
ANR	2783247	Identifier	cset		2783110	0					
ANR	2783248	Identifier	ranges		2783110	1					
ANR	2783249	CastExpression	"( struct Range * ) safe_emalloc ( sizeof ( struct Range ) , nranges , 0 )"		2783110	1					
ANR	2783250	CastTarget	struct Range *		2783110	0					
ANR	2783251	CallExpression	"safe_emalloc ( sizeof ( struct Range ) , nranges , 0 )"		2783110	1					
ANR	2783252	Callee	safe_emalloc		2783110	0					
ANR	2783253	Identifier	safe_emalloc		2783110	0					
ANR	2783254	ArgumentList	sizeof ( struct Range )		2783110	1					
ANR	2783255	Argument	sizeof ( struct Range )		2783110	0					
ANR	2783256	SizeofExpression	sizeof ( struct Range )		2783110	0					
ANR	2783257	Sizeof	sizeof		2783110	0					
ANR	2783258	SizeofOperand	struct Range		2783110	1					
ANR	2783259	Argument	nranges		2783110	1					
ANR	2783260	Identifier	nranges		2783110	0					
ANR	2783261	Argument	0		2783110	2					
ANR	2783262	PrimaryExpression	0		2783110	0					
ANR	2783263	ElseStatement	else		2783110	0					
ANR	2783264	CompoundStatement		32:8:581:581	2783110	0					
ANR	2783265	ExpressionStatement	cset -> ranges = NULL	174:2:6288:6307	2783110	0	True				
ANR	2783266	AssignmentExpression	cset -> ranges = NULL		2783110	0		=			
ANR	2783267	PtrMemberAccess	cset -> ranges		2783110	0					
ANR	2783268	Identifier	cset		2783110	0					
ANR	2783269	Identifier	ranges		2783110	1					
ANR	2783270	Identifier	NULL		2783110	1					
ANR	2783271	ExpressionStatement	cset -> nchars = cset -> nranges = 0	180:1:6356:6388	2783110	12	True				
ANR	2783272	AssignmentExpression	cset -> nchars = cset -> nranges = 0		2783110	0		=			
ANR	2783273	PtrMemberAccess	cset -> nchars		2783110	0					
ANR	2783274	Identifier	cset		2783110	0					
ANR	2783275	Identifier	nchars		2783110	1					
ANR	2783276	AssignmentExpression	cset -> nranges = 0		2783110	1		=			
ANR	2783277	PtrMemberAccess	cset -> nranges		2783110	0					
ANR	2783278	Identifier	cset		2783110	0					
ANR	2783279	Identifier	nranges		2783110	1					
ANR	2783280	PrimaryExpression	0		2783110	1					
ANR	2783281	ExpressionStatement	ch = format ++	181:1:6391:6407	2783110	13	True				
ANR	2783282	AssignmentExpression	ch = format ++		2783110	0		=			
ANR	2783283	Identifier	ch		2783110	0					
ANR	2783284	PostIncDecOperationExpression	format ++		2783110	1					
ANR	2783285	Identifier	format		2783110	0					
ANR	2783286	IncDec	++		2783110	1					
ANR	2783287	ExpressionStatement	start = * ch	182:1:6410:6421	2783110	14	True				
ANR	2783288	AssignmentExpression	start = * ch		2783110	0		=			
ANR	2783289	Identifier	start		2783110	0					
ANR	2783290	UnaryOperationExpression	* ch		2783110	1					
ANR	2783291	UnaryOperator	*		2783110	0					
ANR	2783292	Identifier	ch		2783110	1					
ANR	2783293	IfStatement	if ( * ch == ']' || * ch == '-' )		2783110	15					
ANR	2783294	Condition	* ch == ']' || * ch == '-'	183:5:6428:6451	2783110	0	True				
ANR	2783295	OrExpression	* ch == ']' || * ch == '-'		2783110	0		||			
ANR	2783296	EqualityExpression	* ch == ']'		2783110	0		==			
ANR	2783297	UnaryOperationExpression	* ch		2783110	0					
ANR	2783298	UnaryOperator	*		2783110	0					
ANR	2783299	Identifier	ch		2783110	1					
ANR	2783300	PrimaryExpression	']'		2783110	1					
ANR	2783301	EqualityExpression	* ch == '-'		2783110	1		==			
ANR	2783302	UnaryOperationExpression	* ch		2783110	0					
ANR	2783303	UnaryOperator	*		2783110	0					
ANR	2783304	Identifier	ch		2783110	1					
ANR	2783305	PrimaryExpression	'-'		2783110	1					
ANR	2783306	CompoundStatement		42:31:751:751	2783110	1					
ANR	2783307	ExpressionStatement	cset -> chars [ cset -> nchars ++ ] = * ch	184:2:6458:6491	2783110	0	True				
ANR	2783308	AssignmentExpression	cset -> chars [ cset -> nchars ++ ] = * ch		2783110	0		=			
ANR	2783309	ArrayIndexing	cset -> chars [ cset -> nchars ++ ]		2783110	0					
ANR	2783310	PtrMemberAccess	cset -> chars		2783110	0					
ANR	2783311	Identifier	cset		2783110	0					
ANR	2783312	Identifier	chars		2783110	1					
ANR	2783313	PostIncDecOperationExpression	cset -> nchars ++		2783110	1					
ANR	2783314	PtrMemberAccess	cset -> nchars		2783110	0					
ANR	2783315	Identifier	cset		2783110	0					
ANR	2783316	Identifier	nchars		2783110	1					
ANR	2783317	IncDec	++		2783110	1					
ANR	2783318	UnaryOperationExpression	* ch		2783110	1					
ANR	2783319	UnaryOperator	*		2783110	0					
ANR	2783320	Identifier	ch		2783110	1					
ANR	2783321	ExpressionStatement	ch = format ++	185:2:6495:6508	2783110	1	True				
ANR	2783322	AssignmentExpression	ch = format ++		2783110	0		=			
ANR	2783323	Identifier	ch		2783110	0					
ANR	2783324	PostIncDecOperationExpression	format ++		2783110	1					
ANR	2783325	Identifier	format		2783110	0					
ANR	2783326	IncDec	++		2783110	1					
ANR	2783327	WhileStatement	while ( * ch != ']' )		2783110	16					
ANR	2783328	Condition	* ch != ']'	187:8:6521:6530	2783110	0	True				
ANR	2783329	EqualityExpression	* ch != ']'		2783110	0		!=			
ANR	2783330	UnaryOperationExpression	* ch		2783110	0					
ANR	2783331	UnaryOperator	*		2783110	0					
ANR	2783332	Identifier	ch		2783110	1					
ANR	2783333	PrimaryExpression	']'		2783110	1					
ANR	2783334	CompoundStatement		46:20:830:830	2783110	1					
ANR	2783335	IfStatement	if ( * format == '-' )		2783110	0					
ANR	2783336	Condition	* format == '-'	188:6:6541:6554	2783110	0	True				
ANR	2783337	EqualityExpression	* format == '-'		2783110	0		==			
ANR	2783338	UnaryOperationExpression	* format		2783110	0					
ANR	2783339	UnaryOperator	*		2783110	0					
ANR	2783340	Identifier	format		2783110	1					
ANR	2783341	PrimaryExpression	'-'		2783110	1					
ANR	2783342	CompoundStatement		47:22:854:854	2783110	1					
ANR	2783343	ExpressionStatement	start = * ch	193:3:6652:6663	2783110	0	True				
ANR	2783344	AssignmentExpression	start = * ch		2783110	0		=			
ANR	2783345	Identifier	start		2783110	0					
ANR	2783346	UnaryOperationExpression	* ch		2783110	1					
ANR	2783347	UnaryOperator	*		2783110	0					
ANR	2783348	Identifier	ch		2783110	1					
ANR	2783349	ElseStatement	else		2783110	0					
ANR	2783350	IfStatement	if ( * ch == '-' )		2783110	0					
ANR	2783351	Condition	* ch == '-'	194:13:6678:6687	2783110	0	True				
ANR	2783352	EqualityExpression	* ch == '-'		2783110	0		==			
ANR	2783353	UnaryOperationExpression	* ch		2783110	0					
ANR	2783354	UnaryOperator	*		2783110	0					
ANR	2783355	Identifier	ch		2783110	1					
ANR	2783356	PrimaryExpression	'-'		2783110	1					
ANR	2783357	CompoundStatement		53:25:987:987	2783110	1					
ANR	2783358	IfStatement	if ( * format == ']' )		2783110	0					
ANR	2783359	Condition	* format == ']'	200:7:6879:6892	2783110	0	True				
ANR	2783360	EqualityExpression	* format == ']'		2783110	0		==			
ANR	2783361	UnaryOperationExpression	* format		2783110	0					
ANR	2783362	UnaryOperator	*		2783110	0					
ANR	2783363	Identifier	format		2783110	1					
ANR	2783364	PrimaryExpression	']'		2783110	1					
ANR	2783365	CompoundStatement		59:23:1192:1192	2783110	1					
ANR	2783366	ExpressionStatement	cset -> chars [ cset -> nchars ++ ] = start	201:4:6901:6936	2783110	0	True				
ANR	2783367	AssignmentExpression	cset -> chars [ cset -> nchars ++ ] = start		2783110	0		=			
ANR	2783368	ArrayIndexing	cset -> chars [ cset -> nchars ++ ]		2783110	0					
ANR	2783369	PtrMemberAccess	cset -> chars		2783110	0					
ANR	2783370	Identifier	cset		2783110	0					
ANR	2783371	Identifier	chars		2783110	1					
ANR	2783372	PostIncDecOperationExpression	cset -> nchars ++		2783110	1					
ANR	2783373	PtrMemberAccess	cset -> nchars		2783110	0					
ANR	2783374	Identifier	cset		2783110	0					
ANR	2783375	Identifier	nchars		2783110	1					
ANR	2783376	IncDec	++		2783110	1					
ANR	2783377	Identifier	start		2783110	1					
ANR	2783378	ExpressionStatement	cset -> chars [ cset -> nchars ++ ] = * ch	202:4:6942:6975	2783110	1	True				
ANR	2783379	AssignmentExpression	cset -> chars [ cset -> nchars ++ ] = * ch		2783110	0		=			
ANR	2783380	ArrayIndexing	cset -> chars [ cset -> nchars ++ ]		2783110	0					
ANR	2783381	PtrMemberAccess	cset -> chars		2783110	0					
ANR	2783382	Identifier	cset		2783110	0					
ANR	2783383	Identifier	chars		2783110	1					
ANR	2783384	PostIncDecOperationExpression	cset -> nchars ++		2783110	1					
ANR	2783385	PtrMemberAccess	cset -> nchars		2783110	0					
ANR	2783386	Identifier	cset		2783110	0					
ANR	2783387	Identifier	nchars		2783110	1					
ANR	2783388	IncDec	++		2783110	1					
ANR	2783389	UnaryOperationExpression	* ch		2783110	1					
ANR	2783390	UnaryOperator	*		2783110	0					
ANR	2783391	Identifier	ch		2783110	1					
ANR	2783392	ElseStatement	else		2783110	0					
ANR	2783393	CompoundStatement		62:10:1284:1284	2783110	0					
ANR	2783394	ExpressionStatement	ch = format ++	204:4:6993:7006	2783110	0	True				
ANR	2783395	AssignmentExpression	ch = format ++		2783110	0		=			
ANR	2783396	Identifier	ch		2783110	0					
ANR	2783397	PostIncDecOperationExpression	format ++		2783110	1					
ANR	2783398	Identifier	format		2783110	0					
ANR	2783399	IncDec	++		2783110	1					
ANR	2783400	IfStatement	if ( start < * ch )		2783110	1					
ANR	2783401	Condition	start < * ch	209:8:7086:7096	2783110	0	True				
ANR	2783402	RelationalExpression	start < * ch		2783110	0		<			
ANR	2783403	Identifier	start		2783110	0					
ANR	2783404	UnaryOperationExpression	* ch		2783110	1					
ANR	2783405	UnaryOperator	*		2783110	0					
ANR	2783406	Identifier	ch		2783110	1					
ANR	2783407	CompoundStatement		68:21:1396:1396	2783110	1					
ANR	2783408	ExpressionStatement	cset -> ranges [ cset -> nranges ] . start = start	210:5:7106:7147	2783110	0	True				
ANR	2783409	AssignmentExpression	cset -> ranges [ cset -> nranges ] . start = start		2783110	0		=			
ANR	2783410	MemberAccess	cset -> ranges [ cset -> nranges ] . start		2783110	0					
ANR	2783411	ArrayIndexing	cset -> ranges [ cset -> nranges ]		2783110	0					
ANR	2783412	PtrMemberAccess	cset -> ranges		2783110	0					
ANR	2783413	Identifier	cset		2783110	0					
ANR	2783414	Identifier	ranges		2783110	1					
ANR	2783415	PtrMemberAccess	cset -> nranges		2783110	1					
ANR	2783416	Identifier	cset		2783110	0					
ANR	2783417	Identifier	nranges		2783110	1					
ANR	2783418	Identifier	start		2783110	1					
ANR	2783419	Identifier	start		2783110	1					
ANR	2783420	ExpressionStatement	cset -> ranges [ cset -> nranges ] . end = * ch	211:5:7154:7191	2783110	1	True				
ANR	2783421	AssignmentExpression	cset -> ranges [ cset -> nranges ] . end = * ch		2783110	0		=			
ANR	2783422	MemberAccess	cset -> ranges [ cset -> nranges ] . end		2783110	0					
ANR	2783423	ArrayIndexing	cset -> ranges [ cset -> nranges ]		2783110	0					
ANR	2783424	PtrMemberAccess	cset -> ranges		2783110	0					
ANR	2783425	Identifier	cset		2783110	0					
ANR	2783426	Identifier	ranges		2783110	1					
ANR	2783427	PtrMemberAccess	cset -> nranges		2783110	1					
ANR	2783428	Identifier	cset		2783110	0					
ANR	2783429	Identifier	nranges		2783110	1					
ANR	2783430	Identifier	end		2783110	1					
ANR	2783431	UnaryOperationExpression	* ch		2783110	1					
ANR	2783432	UnaryOperator	*		2783110	0					
ANR	2783433	Identifier	ch		2783110	1					
ANR	2783434	ElseStatement	else		2783110	0					
ANR	2783435	CompoundStatement		71:11:1501:1501	2783110	0					
ANR	2783436	ExpressionStatement	cset -> ranges [ cset -> nranges ] . start = * ch	213:5:7211:7250	2783110	0	True				
ANR	2783437	AssignmentExpression	cset -> ranges [ cset -> nranges ] . start = * ch		2783110	0		=			
ANR	2783438	MemberAccess	cset -> ranges [ cset -> nranges ] . start		2783110	0					
ANR	2783439	ArrayIndexing	cset -> ranges [ cset -> nranges ]		2783110	0					
ANR	2783440	PtrMemberAccess	cset -> ranges		2783110	0					
ANR	2783441	Identifier	cset		2783110	0					
ANR	2783442	Identifier	ranges		2783110	1					
ANR	2783443	PtrMemberAccess	cset -> nranges		2783110	1					
ANR	2783444	Identifier	cset		2783110	0					
ANR	2783445	Identifier	nranges		2783110	1					
ANR	2783446	Identifier	start		2783110	1					
ANR	2783447	UnaryOperationExpression	* ch		2783110	1					
ANR	2783448	UnaryOperator	*		2783110	0					
ANR	2783449	Identifier	ch		2783110	1					
ANR	2783450	ExpressionStatement	cset -> ranges [ cset -> nranges ] . end = start	214:5:7257:7296	2783110	1	True				
ANR	2783451	AssignmentExpression	cset -> ranges [ cset -> nranges ] . end = start		2783110	0		=			
ANR	2783452	MemberAccess	cset -> ranges [ cset -> nranges ] . end		2783110	0					
ANR	2783453	ArrayIndexing	cset -> ranges [ cset -> nranges ]		2783110	0					
ANR	2783454	PtrMemberAccess	cset -> ranges		2783110	0					
ANR	2783455	Identifier	cset		2783110	0					
ANR	2783456	Identifier	ranges		2783110	1					
ANR	2783457	PtrMemberAccess	cset -> nranges		2783110	1					
ANR	2783458	Identifier	cset		2783110	0					
ANR	2783459	Identifier	nranges		2783110	1					
ANR	2783460	Identifier	end		2783110	1					
ANR	2783461	Identifier	start		2783110	1					
ANR	2783462	ExpressionStatement	cset -> nranges ++	216:4:7308:7323	2783110	2	True				
ANR	2783463	PostIncDecOperationExpression	cset -> nranges ++		2783110	0					
ANR	2783464	PtrMemberAccess	cset -> nranges		2783110	0					
ANR	2783465	Identifier	cset		2783110	0					
ANR	2783466	Identifier	nranges		2783110	1					
ANR	2783467	IncDec	++		2783110	1					
ANR	2783468	ElseStatement	else		2783110	0					
ANR	2783469	CompoundStatement		77:9:1636:1636	2783110	0					
ANR	2783470	ExpressionStatement	cset -> chars [ cset -> nchars ++ ] = * ch	219:3:7344:7377	2783110	0	True				
ANR	2783471	AssignmentExpression	cset -> chars [ cset -> nchars ++ ] = * ch		2783110	0		=			
ANR	2783472	ArrayIndexing	cset -> chars [ cset -> nchars ++ ]		2783110	0					
ANR	2783473	PtrMemberAccess	cset -> chars		2783110	0					
ANR	2783474	Identifier	cset		2783110	0					
ANR	2783475	Identifier	chars		2783110	1					
ANR	2783476	PostIncDecOperationExpression	cset -> nchars ++		2783110	1					
ANR	2783477	PtrMemberAccess	cset -> nchars		2783110	0					
ANR	2783478	Identifier	cset		2783110	0					
ANR	2783479	Identifier	nchars		2783110	1					
ANR	2783480	IncDec	++		2783110	1					
ANR	2783481	UnaryOperationExpression	* ch		2783110	1					
ANR	2783482	UnaryOperator	*		2783110	0					
ANR	2783483	Identifier	ch		2783110	1					
ANR	2783484	ExpressionStatement	ch = format ++	221:2:7385:7398	2783110	1	True				
ANR	2783485	AssignmentExpression	ch = format ++		2783110	0		=			
ANR	2783486	Identifier	ch		2783110	0					
ANR	2783487	PostIncDecOperationExpression	format ++		2783110	1					
ANR	2783488	Identifier	format		2783110	0					
ANR	2783489	IncDec	++		2783110	1					
ANR	2783490	ReturnStatement	return format ;	223:1:7404:7417	2783110	17	True				
ANR	2783491	Identifier	format		2783110	0					
ANR	2783492	ReturnType	static char *		2783110	1					
ANR	2783493	Identifier	BuildCharSet		2783110	2					
ANR	2783494	ParameterList	"CharSet * cset , char * format"		2783110	3					
ANR	2783495	Parameter	CharSet * cset	141:27:5673:5685	2783110	0	True				
ANR	2783496	ParameterType	CharSet *		2783110	0					
ANR	2783497	Identifier	cset		2783110	1					
ANR	2783498	Parameter	char * format	141:42:5688:5699	2783110	1	True				
ANR	2783499	ParameterType	char *		2783110	0					
ANR	2783500	Identifier	format		2783110	1					
ANR	2783501	CFGEntryNode	ENTRY		2783110		True				
ANR	2783502	CFGExitNode	EXIT		2783110		True				
ANR	2783503	Symbol	NULL		2783110						
ANR	2783504	Symbol	nranges		2783110						
ANR	2783505	Symbol	cset -> ranges [ cset -> nranges ] . end		2783110						
ANR	2783506	Symbol	ch		2783110						
ANR	2783507	Symbol	format		2783110						
ANR	2783508	Symbol	start		2783110						
ANR	2783509	Symbol	* ch		2783110						
ANR	2783510	Symbol	* cset		2783110						
ANR	2783511	Symbol	cset -> exclude		2783110						
ANR	2783512	Symbol	cset -> nchars		2783110						
ANR	2783513	Symbol	* cset -> chars		2783110						
ANR	2783514	Symbol	cset		2783110						
ANR	2783515	Symbol	cset -> chars		2783110						
ANR	2783516	Symbol	cset -> nranges		2783110						
ANR	2783517	Symbol	cset -> ranges		2783110						
ANR	2783518	Symbol	cset -> ranges [ cset -> nranges ] . start		2783110						
ANR	2783519	Symbol	* format		2783110						
ANR	2783520	Symbol	* cset -> ranges		2783110						
ANR	2783521	Symbol	end		2783110						
ANR	2783522	Symbol	safe_emalloc		2783110						
ANR	2783523	Symbol	* * cset		2783110						
ANR	2783524	Symbol	* cset -> nranges		2783110						
ANR	2783525	Function	CharInSet	242:0:7782:8177							
ANR	2783526	FunctionDef	"CharInSet (CharSet * cset , int c)"		2783525	0					
ANR	2783527	CompoundStatement		243:0:7825:8177	2783525	0					
ANR	2783528	IdentifierDeclStatement	char ch = ( char ) c ;	244:1:7828:7846	2783525	0	True				
ANR	2783529	IdentifierDecl	ch = ( char ) c		2783525	0					
ANR	2783530	IdentifierDeclType	char		2783525	0					
ANR	2783531	Identifier	ch		2783525	1					
ANR	2783532	AssignmentExpression	ch = ( char ) c		2783525	2		=			
ANR	2783533	Identifier	ch		2783525	0					
ANR	2783534	CastExpression	( char ) c		2783525	1					
ANR	2783535	CastTarget	char		2783525	0					
ANR	2783536	Identifier	c		2783525	1					
ANR	2783537	IdentifierDeclStatement	"int i , match = 0 ;"	245:1:7849:7865	2783525	1	True				
ANR	2783538	IdentifierDecl	i		2783525	0					
ANR	2783539	IdentifierDeclType	int		2783525	0					
ANR	2783540	Identifier	i		2783525	1					
ANR	2783541	IdentifierDecl	match = 0		2783525	1					
ANR	2783542	IdentifierDeclType	int		2783525	0					
ANR	2783543	Identifier	match		2783525	1					
ANR	2783544	AssignmentExpression	match = 0		2783525	2		=			
ANR	2783545	Identifier	match		2783525	0					
ANR	2783546	PrimaryExpression	0		2783525	1					
ANR	2783547	ForStatement	for ( i = 0 ; i < cset -> nchars ; i ++ )		2783525	2					
ANR	2783548	ForInit	i = 0 ;	247:6:7874:7879	2783525	0	True				
ANR	2783549	AssignmentExpression	i = 0		2783525	0		=			
ANR	2783550	Identifier	i		2783525	0					
ANR	2783551	PrimaryExpression	0		2783525	1					
ANR	2783552	Condition	i < cset -> nchars	247:13:7881:7896	2783525	1	True				
ANR	2783553	RelationalExpression	i < cset -> nchars		2783525	0		<			
ANR	2783554	Identifier	i		2783525	0					
ANR	2783555	PtrMemberAccess	cset -> nchars		2783525	1					
ANR	2783556	Identifier	cset		2783525	0					
ANR	2783557	Identifier	nchars		2783525	1					
ANR	2783558	PostIncDecOperationExpression	i ++	247:31:7899:7901	2783525	2	True				
ANR	2783559	Identifier	i		2783525	0					
ANR	2783560	IncDec	++		2783525	1					
ANR	2783561	CompoundStatement		5:36:78:78	2783525	3					
ANR	2783562	IfStatement	if ( cset -> chars [ i ] == ch )		2783525	0					
ANR	2783563	Condition	cset -> chars [ i ] == ch	248:6:7912:7931	2783525	0	True				
ANR	2783564	EqualityExpression	cset -> chars [ i ] == ch		2783525	0		==			
ANR	2783565	ArrayIndexing	cset -> chars [ i ]		2783525	0					
ANR	2783566	PtrMemberAccess	cset -> chars		2783525	0					
ANR	2783567	Identifier	cset		2783525	0					
ANR	2783568	Identifier	chars		2783525	1					
ANR	2783569	Identifier	i		2783525	1					
ANR	2783570	Identifier	ch		2783525	1					
ANR	2783571	CompoundStatement		6:28:108:108	2783525	1					
ANR	2783572	ExpressionStatement	match = 1	249:3:7939:7948	2783525	0	True				
ANR	2783573	AssignmentExpression	match = 1		2783525	0		=			
ANR	2783574	Identifier	match		2783525	0					
ANR	2783575	PrimaryExpression	1		2783525	1					
ANR	2783576	BreakStatement	break ;	250:3:7953:7958	2783525	1	True				
ANR	2783577	IfStatement	if ( ! match )		2783525	3					
ANR	2783578	Condition	! match	253:5:7972:7977	2783525	0	True				
ANR	2783579	UnaryOperationExpression	! match		2783525	0					
ANR	2783580	UnaryOperator	!		2783525	0					
ANR	2783581	Identifier	match		2783525	1					
ANR	2783582	CompoundStatement		11:13:154:154	2783525	1					
ANR	2783583	ForStatement	for ( i = 0 ; i < cset -> nranges ; i ++ )		2783525	0					
ANR	2783584	ForInit	i = 0 ;	254:7:7989:7994	2783525	0	True				
ANR	2783585	AssignmentExpression	i = 0		2783525	0		=			
ANR	2783586	Identifier	i		2783525	0					
ANR	2783587	PrimaryExpression	0		2783525	1					
ANR	2783588	Condition	i < cset -> nranges	254:14:7996:8012	2783525	1	True				
ANR	2783589	RelationalExpression	i < cset -> nranges		2783525	0		<			
ANR	2783590	Identifier	i		2783525	0					
ANR	2783591	PtrMemberAccess	cset -> nranges		2783525	1					
ANR	2783592	Identifier	cset		2783525	0					
ANR	2783593	Identifier	nranges		2783525	1					
ANR	2783594	PostIncDecOperationExpression	i ++	254:33:8015:8017	2783525	2	True				
ANR	2783595	Identifier	i		2783525	0					
ANR	2783596	IncDec	++		2783525	1					
ANR	2783597	CompoundStatement		12:38:194:194	2783525	3					
ANR	2783598	IfStatement	if ( ( cset -> ranges [ i ] . start <= ch ) && ( ch <= cset -> ranges [ i ] . end ) )		2783525	0					
ANR	2783599	Condition	( cset -> ranges [ i ] . start <= ch ) && ( ch <= cset -> ranges [ i ] . end )	255:7:8029:8092	2783525	0	True				
ANR	2783600	AndExpression	( cset -> ranges [ i ] . start <= ch ) && ( ch <= cset -> ranges [ i ] . end )		2783525	0		&&			
ANR	2783601	RelationalExpression	cset -> ranges [ i ] . start <= ch		2783525	0		<=			
ANR	2783602	MemberAccess	cset -> ranges [ i ] . start		2783525	0					
ANR	2783603	ArrayIndexing	cset -> ranges [ i ]		2783525	0					
ANR	2783604	PtrMemberAccess	cset -> ranges		2783525	0					
ANR	2783605	Identifier	cset		2783525	0					
ANR	2783606	Identifier	ranges		2783525	1					
ANR	2783607	Identifier	i		2783525	1					
ANR	2783608	Identifier	start		2783525	1					
ANR	2783609	Identifier	ch		2783525	1					
ANR	2783610	RelationalExpression	ch <= cset -> ranges [ i ] . end		2783525	1		<=			
ANR	2783611	Identifier	ch		2783525	0					
ANR	2783612	MemberAccess	cset -> ranges [ i ] . end		2783525	1					
ANR	2783613	ArrayIndexing	cset -> ranges [ i ]		2783525	0					
ANR	2783614	PtrMemberAccess	cset -> ranges		2783525	0					
ANR	2783615	Identifier	cset		2783525	0					
ANR	2783616	Identifier	ranges		2783525	1					
ANR	2783617	Identifier	i		2783525	1					
ANR	2783618	Identifier	end		2783525	1					
ANR	2783619	CompoundStatement		14:36:269:269	2783525	1					
ANR	2783620	ExpressionStatement	match = 1	257:4:8101:8110	2783525	0	True				
ANR	2783621	AssignmentExpression	match = 1		2783525	0		=			
ANR	2783622	Identifier	match		2783525	0					
ANR	2783623	PrimaryExpression	1		2783525	1					
ANR	2783624	BreakStatement	break ;	258:4:8116:8121	2783525	1	True				
ANR	2783625	ReturnStatement	return ( cset -> exclude ? ! match : match ) ;	262:1:8136:8175	2783525	4	True				
ANR	2783626	ConditionalExpression	cset -> exclude ? ! match : match		2783525	0					
ANR	2783627	Condition	cset -> exclude		2783525	0					
ANR	2783628	PtrMemberAccess	cset -> exclude		2783525	0					
ANR	2783629	Identifier	cset		2783525	0					
ANR	2783630	Identifier	exclude		2783525	1					
ANR	2783631	UnaryOperationExpression	! match		2783525	1					
ANR	2783632	UnaryOperator	!		2783525	0					
ANR	2783633	Identifier	match		2783525	1					
ANR	2783634	Identifier	match		2783525	2					
ANR	2783635	ReturnType	static int		2783525	1					
ANR	2783636	Identifier	CharInSet		2783525	2					
ANR	2783637	ParameterList	"CharSet * cset , int c"		2783525	3					
ANR	2783638	Parameter	CharSet * cset	242:21:7803:7815	2783525	0	True				
ANR	2783639	ParameterType	CharSet *		2783525	0					
ANR	2783640	Identifier	cset		2783525	1					
ANR	2783641	Parameter	int c	242:36:7818:7822	2783525	1	True				
ANR	2783642	ParameterType	int		2783525	0					
ANR	2783643	Identifier	c		2783525	1					
ANR	2783644	CFGEntryNode	ENTRY		2783525		True				
ANR	2783645	CFGExitNode	EXIT		2783525		True				
ANR	2783646	Symbol	cset -> ranges [ i ] . end		2783525						
ANR	2783647	Symbol	cset -> ranges [ i ] . start		2783525						
ANR	2783648	Symbol	c		2783525						
ANR	2783649	Symbol	ch		2783525						
ANR	2783650	Symbol	match		2783525						
ANR	2783651	Symbol	* cset		2783525						
ANR	2783652	Symbol	cset -> exclude		2783525						
ANR	2783653	Symbol	i		2783525						
ANR	2783654	Symbol	cset -> nchars		2783525						
ANR	2783655	Symbol	* cset -> chars		2783525						
ANR	2783656	Symbol	cset		2783525						
ANR	2783657	Symbol	cset -> chars		2783525						
ANR	2783658	Symbol	cset -> nranges		2783525						
ANR	2783659	Symbol	* i		2783525						
ANR	2783660	Symbol	cset -> ranges		2783525						
ANR	2783661	Symbol	* cset -> ranges		2783525						
ANR	2783662	Symbol	* * cset		2783525						
ANR	2783663	Function	ReleaseCharSet	281:0:8498:8626							
ANR	2783664	FunctionDef	ReleaseCharSet (CharSet * cset)		2783663	0					
ANR	2783665	CompoundStatement		282:0:8540:8626	2783663	0					
ANR	2783666	ExpressionStatement	efree ( ( char * ) cset -> chars )	283:1:8543:8569	2783663	0	True				
ANR	2783667	CallExpression	efree ( ( char * ) cset -> chars )		2783663	0					
ANR	2783668	Callee	efree		2783663	0					
ANR	2783669	Identifier	efree		2783663	0					
ANR	2783670	ArgumentList	( char * ) cset -> chars		2783663	1					
ANR	2783671	Argument	( char * ) cset -> chars		2783663	0					
ANR	2783672	CastExpression	( char * ) cset -> chars		2783663	0					
ANR	2783673	CastTarget	char *		2783663	0					
ANR	2783674	PtrMemberAccess	cset -> chars		2783663	1					
ANR	2783675	Identifier	cset		2783663	0					
ANR	2783676	Identifier	chars		2783663	1					
ANR	2783677	IfStatement	if ( cset -> ranges )		2783663	1					
ANR	2783678	Condition	cset -> ranges	284:5:8576:8587	2783663	0	True				
ANR	2783679	PtrMemberAccess	cset -> ranges		2783663	0					
ANR	2783680	Identifier	cset		2783663	0					
ANR	2783681	Identifier	ranges		2783663	1					
ANR	2783682	CompoundStatement		3:19:49:49	2783663	1					
ANR	2783683	ExpressionStatement	efree ( ( char * ) cset -> ranges )	285:2:8594:8621	2783663	0	True				
ANR	2783684	CallExpression	efree ( ( char * ) cset -> ranges )		2783663	0					
ANR	2783685	Callee	efree		2783663	0					
ANR	2783686	Identifier	efree		2783663	0					
ANR	2783687	ArgumentList	( char * ) cset -> ranges		2783663	1					
ANR	2783688	Argument	( char * ) cset -> ranges		2783663	0					
ANR	2783689	CastExpression	( char * ) cset -> ranges		2783663	0					
ANR	2783690	CastTarget	char *		2783663	0					
ANR	2783691	PtrMemberAccess	cset -> ranges		2783663	1					
ANR	2783692	Identifier	cset		2783663	0					
ANR	2783693	Identifier	ranges		2783663	1					
ANR	2783694	ReturnType	static void		2783663	1					
ANR	2783695	Identifier	ReleaseCharSet		2783663	2					
ANR	2783696	ParameterList	CharSet * cset		2783663	3					
ANR	2783697	Parameter	CharSet * cset	281:27:8525:8537	2783663	0	True				
ANR	2783698	ParameterType	CharSet *		2783663	0					
ANR	2783699	Identifier	cset		2783663	1					
ANR	2783700	CFGEntryNode	ENTRY		2783663		True				
ANR	2783701	CFGExitNode	EXIT		2783663		True				
ANR	2783702	Symbol	cset		2783663						
ANR	2783703	Symbol	cset -> chars		2783663						
ANR	2783704	Symbol	cset -> ranges		2783663						
ANR	2783705	Symbol	* cset		2783663						
ANR	2783706	Function	ValidateFormat	311:0:9280:15118							
ANR	2783707	FunctionDef	"ValidateFormat (char * format , int numVars , int * totalSubs)"		2783706	0					
ANR	2783708	CompoundStatement		312:0:9349:15118	2783706	0					
ANR	2783709	Statement	define	313:1:9352:9357	2783706	0	True				
ANR	2783710	Statement	STATIC_LIST_SIZE	313:8:9359:9374	2783706	1	True				
ANR	2783711	Statement	16	313:25:9376:9377	2783706	2	True				
ANR	2783712	IdentifierDeclStatement	"int gotXpg , gotSequential , value , i , flags ;"	314:1:9380:9422	2783706	3	True				
ANR	2783713	IdentifierDecl	gotXpg		2783706	0					
ANR	2783714	IdentifierDeclType	int		2783706	0					
ANR	2783715	Identifier	gotXpg		2783706	1					
ANR	2783716	IdentifierDecl	gotSequential		2783706	1					
ANR	2783717	IdentifierDeclType	int		2783706	0					
ANR	2783718	Identifier	gotSequential		2783706	1					
ANR	2783719	IdentifierDecl	value		2783706	2					
ANR	2783720	IdentifierDeclType	int		2783706	0					
ANR	2783721	Identifier	value		2783706	1					
ANR	2783722	IdentifierDecl	i		2783706	3					
ANR	2783723	IdentifierDeclType	int		2783706	0					
ANR	2783724	Identifier	i		2783706	1					
ANR	2783725	IdentifierDecl	flags		2783706	4					
ANR	2783726	IdentifierDeclType	int		2783706	0					
ANR	2783727	Identifier	flags		2783706	1					
ANR	2783728	IdentifierDeclStatement	"char * end , * ch = NULL ;"	315:1:9425:9446	2783706	4	True				
ANR	2783729	IdentifierDecl	* end		2783706	0					
ANR	2783730	IdentifierDeclType	char *		2783706	0					
ANR	2783731	Identifier	end		2783706	1					
ANR	2783732	IdentifierDecl	* ch = NULL		2783706	1					
ANR	2783733	IdentifierDeclType	char *		2783706	0					
ANR	2783734	Identifier	ch		2783706	1					
ANR	2783735	AssignmentExpression	* ch = NULL		2783706	2		=			
ANR	2783736	Identifier	NULL		2783706	0					
ANR	2783737	Identifier	NULL		2783706	1					
ANR	2783738	IdentifierDeclStatement	int staticAssign [ STATIC_LIST_SIZE ] ;	316:1:9449:9483	2783706	5	True				
ANR	2783739	IdentifierDecl	staticAssign [ STATIC_LIST_SIZE ]		2783706	0					
ANR	2783740	IdentifierDeclType	int [ STATIC_LIST_SIZE ]		2783706	0					
ANR	2783741	Identifier	staticAssign		2783706	1					
ANR	2783742	Identifier	STATIC_LIST_SIZE		2783706	2					
ANR	2783743	IdentifierDeclStatement	int * nassign = staticAssign ;	317:1:9486:9513	2783706	6	True				
ANR	2783744	IdentifierDecl	* nassign = staticAssign		2783706	0					
ANR	2783745	IdentifierDeclType	int *		2783706	0					
ANR	2783746	Identifier	nassign		2783706	1					
ANR	2783747	AssignmentExpression	* nassign = staticAssign		2783706	2		=			
ANR	2783748	Identifier	staticAssign		2783706	0					
ANR	2783749	Identifier	staticAssign		2783706	1					
ANR	2783750	IdentifierDeclStatement	"int objIndex , xpgSize , nspace = STATIC_LIST_SIZE ;"	318:1:9516:9564	2783706	7	True				
ANR	2783751	IdentifierDecl	objIndex		2783706	0					
ANR	2783752	IdentifierDeclType	int		2783706	0					
ANR	2783753	Identifier	objIndex		2783706	1					
ANR	2783754	IdentifierDecl	xpgSize		2783706	1					
ANR	2783755	IdentifierDeclType	int		2783706	0					
ANR	2783756	Identifier	xpgSize		2783706	1					
ANR	2783757	IdentifierDecl	nspace = STATIC_LIST_SIZE		2783706	2					
ANR	2783758	IdentifierDeclType	int		2783706	0					
ANR	2783759	Identifier	nspace		2783706	1					
ANR	2783760	AssignmentExpression	nspace = STATIC_LIST_SIZE		2783706	2		=			
ANR	2783761	Identifier	STATIC_LIST_SIZE		2783706	0					
ANR	2783762	Identifier	STATIC_LIST_SIZE		2783706	1					
ANR	2783763	IfStatement	if ( numVars > nspace )		2783706	8					
ANR	2783764	Condition	numVars > nspace	325:5:9772:9787	2783706	0	True				
ANR	2783765	RelationalExpression	numVars > nspace		2783706	0		>			
ANR	2783766	Identifier	numVars		2783706	0					
ANR	2783767	Identifier	nspace		2783706	1					
ANR	2783768	CompoundStatement		14:23:440:440	2783706	1					
ANR	2783769	ExpressionStatement	"nassign = ( int * ) safe_emalloc ( sizeof ( int ) , numVars , 0 )"	326:2:9794:9847	2783706	0	True				
ANR	2783770	AssignmentExpression	"nassign = ( int * ) safe_emalloc ( sizeof ( int ) , numVars , 0 )"		2783706	0		=			
ANR	2783771	Identifier	nassign		2783706	0					
ANR	2783772	CastExpression	"( int * ) safe_emalloc ( sizeof ( int ) , numVars , 0 )"		2783706	1					
ANR	2783773	CastTarget	int *		2783706	0					
ANR	2783774	CallExpression	"safe_emalloc ( sizeof ( int ) , numVars , 0 )"		2783706	1					
ANR	2783775	Callee	safe_emalloc		2783706	0					
ANR	2783776	Identifier	safe_emalloc		2783706	0					
ANR	2783777	ArgumentList	sizeof ( int )		2783706	1					
ANR	2783778	Argument	sizeof ( int )		2783706	0					
ANR	2783779	SizeofExpression	sizeof ( int )		2783706	0					
ANR	2783780	Sizeof	sizeof		2783706	0					
ANR	2783781	SizeofOperand	int		2783706	1					
ANR	2783782	Argument	numVars		2783706	1					
ANR	2783783	Identifier	numVars		2783706	0					
ANR	2783784	Argument	0		2783706	2					
ANR	2783785	PrimaryExpression	0		2783706	0					
ANR	2783786	ExpressionStatement	nspace = numVars	327:2:9851:9867	2783706	1	True				
ANR	2783787	AssignmentExpression	nspace = numVars		2783706	0		=			
ANR	2783788	Identifier	nspace		2783706	0					
ANR	2783789	Identifier	numVars		2783706	1					
ANR	2783790	ForStatement	for ( i = 0 ; i < nspace ; i ++ )		2783706	9					
ANR	2783791	ForInit	i = 0 ;	329:6:9878:9883	2783706	0	True				
ANR	2783792	AssignmentExpression	i = 0		2783706	0		=			
ANR	2783793	Identifier	i		2783706	0					
ANR	2783794	PrimaryExpression	0		2783706	1					
ANR	2783795	Condition	i < nspace	329:13:9885:9894	2783706	1	True				
ANR	2783796	RelationalExpression	i < nspace		2783706	0		<			
ANR	2783797	Identifier	i		2783706	0					
ANR	2783798	Identifier	nspace		2783706	1					
ANR	2783799	PostIncDecOperationExpression	i ++	329:25:9897:9899	2783706	2	True				
ANR	2783800	Identifier	i		2783706	0					
ANR	2783801	IncDec	++		2783706	1					
ANR	2783802	CompoundStatement		18:30:552:552	2783706	3					
ANR	2783803	ExpressionStatement	nassign [ i ] = 0	330:2:9906:9920	2783706	0	True				
ANR	2783804	AssignmentExpression	nassign [ i ] = 0		2783706	0		=			
ANR	2783805	ArrayIndexing	nassign [ i ]		2783706	0					
ANR	2783806	Identifier	nassign		2783706	0					
ANR	2783807	Identifier	i		2783706	1					
ANR	2783808	PrimaryExpression	0		2783706	1					
ANR	2783809	ExpressionStatement	xpgSize = objIndex = gotXpg = gotSequential = 0	333:1:9927:9974	2783706	10	True				
ANR	2783810	AssignmentExpression	xpgSize = objIndex = gotXpg = gotSequential = 0		2783706	0		=			
ANR	2783811	Identifier	xpgSize		2783706	0					
ANR	2783812	AssignmentExpression	objIndex = gotXpg = gotSequential = 0		2783706	1		=			
ANR	2783813	Identifier	objIndex		2783706	0					
ANR	2783814	AssignmentExpression	gotXpg = gotSequential = 0		2783706	1		=			
ANR	2783815	Identifier	gotXpg		2783706	0					
ANR	2783816	AssignmentExpression	gotSequential = 0		2783706	1		=			
ANR	2783817	Identifier	gotSequential		2783706	0					
ANR	2783818	PrimaryExpression	0		2783706	1					
ANR	2783819	WhileStatement	while ( * format != '\\0' )		2783706	11					
ANR	2783820	Condition	* format != '\\0'	335:8:9985:9999	2783706	0	True				
ANR	2783821	EqualityExpression	* format != '\\0'		2783706	0		!=			
ANR	2783822	UnaryOperationExpression	* format		2783706	0					
ANR	2783823	UnaryOperator	*		2783706	0					
ANR	2783824	Identifier	format		2783706	1					
ANR	2783825	PrimaryExpression	'\\0'		2783706	1					
ANR	2783826	CompoundStatement		24:25:652:652	2783706	1					
ANR	2783827	ExpressionStatement	ch = format ++	336:2:10006:10019	2783706	0	True				
ANR	2783828	AssignmentExpression	ch = format ++		2783706	0		=			
ANR	2783829	Identifier	ch		2783706	0					
ANR	2783830	PostIncDecOperationExpression	format ++		2783706	1					
ANR	2783831	Identifier	format		2783706	0					
ANR	2783832	IncDec	++		2783706	1					
ANR	2783833	ExpressionStatement	flags = 0	337:2:10023:10032	2783706	1	True				
ANR	2783834	AssignmentExpression	flags = 0		2783706	0		=			
ANR	2783835	Identifier	flags		2783706	0					
ANR	2783836	PrimaryExpression	0		2783706	1					
ANR	2783837	IfStatement	if ( * ch != '%' )		2783706	2					
ANR	2783838	Condition	* ch != '%'	339:6:10041:10050	2783706	0	True				
ANR	2783839	EqualityExpression	* ch != '%'		2783706	0		!=			
ANR	2783840	UnaryOperationExpression	* ch		2783706	0					
ANR	2783841	UnaryOperator	*		2783706	0					
ANR	2783842	Identifier	ch		2783706	1					
ANR	2783843	PrimaryExpression	'%'		2783706	1					
ANR	2783844	CompoundStatement		28:18:703:703	2783706	1					
ANR	2783845	ContinueStatement	continue ;	340:3:10058:10066	2783706	0	True				
ANR	2783846	ExpressionStatement	ch = format ++	342:2:10074:10087	2783706	3	True				
ANR	2783847	AssignmentExpression	ch = format ++		2783706	0		=			
ANR	2783848	Identifier	ch		2783706	0					
ANR	2783849	PostIncDecOperationExpression	format ++		2783706	1					
ANR	2783850	Identifier	format		2783706	0					
ANR	2783851	IncDec	++		2783706	1					
ANR	2783852	IfStatement	if ( * ch == '%' )		2783706	4					
ANR	2783853	Condition	* ch == '%'	343:6:10095:10104	2783706	0	True				
ANR	2783854	EqualityExpression	* ch == '%'		2783706	0		==			
ANR	2783855	UnaryOperationExpression	* ch		2783706	0					
ANR	2783856	UnaryOperator	*		2783706	0					
ANR	2783857	Identifier	ch		2783706	1					
ANR	2783858	PrimaryExpression	'%'		2783706	1					
ANR	2783859	CompoundStatement		32:18:757:757	2783706	1					
ANR	2783860	ContinueStatement	continue ;	344:3:10112:10120	2783706	0	True				
ANR	2783861	IfStatement	if ( * ch == '*' )		2783706	5					
ANR	2783862	Condition	* ch == '*'	346:6:10132:10141	2783706	0	True				
ANR	2783863	EqualityExpression	* ch == '*'		2783706	0		==			
ANR	2783864	UnaryOperationExpression	* ch		2783706	0					
ANR	2783865	UnaryOperator	*		2783706	0					
ANR	2783866	Identifier	ch		2783706	1					
ANR	2783867	PrimaryExpression	'*'		2783706	1					
ANR	2783868	CompoundStatement		35:18:794:794	2783706	1					
ANR	2783869	ExpressionStatement	flags |= SCAN_SUPPRESS	347:3:10149:10171	2783706	0	True				
ANR	2783870	AssignmentExpression	flags |= SCAN_SUPPRESS		2783706	0		|=			
ANR	2783871	Identifier	flags		2783706	0					
ANR	2783872	Identifier	SCAN_SUPPRESS		2783706	1					
ANR	2783873	ExpressionStatement	ch = format ++	348:3:10176:10189	2783706	1	True				
ANR	2783874	AssignmentExpression	ch = format ++		2783706	0		=			
ANR	2783875	Identifier	ch		2783706	0					
ANR	2783876	PostIncDecOperationExpression	format ++		2783706	1					
ANR	2783877	Identifier	format		2783706	0					
ANR	2783878	IncDec	++		2783706	1					
ANR	2783879	GotoStatement	goto xpgCheckDone ;	349:3:10194:10211	2783706	2	True				
ANR	2783880	Identifier	xpgCheckDone		2783706	0					
ANR	2783881	IfStatement	if ( isdigit ( ( int ) * ch ) )		2783706	6					
ANR	2783882	Condition	isdigit ( ( int ) * ch )	352:7:10225:10243	2783706	0	True				
ANR	2783883	CallExpression	isdigit ( ( int ) * ch )		2783706	0					
ANR	2783884	Callee	isdigit		2783706	0					
ANR	2783885	Identifier	isdigit		2783706	0					
ANR	2783886	ArgumentList	( int ) * ch		2783706	1					
ANR	2783887	Argument	( int ) * ch		2783706	0					
ANR	2783888	CastExpression	( int ) * ch		2783706	0					
ANR	2783889	CastTarget	int		2783706	0					
ANR	2783890	UnaryOperationExpression	* ch		2783706	1					
ANR	2783891	UnaryOperator	*		2783706	0					
ANR	2783892	Identifier	ch		2783706	1					
ANR	2783893	CompoundStatement		41:29:897:897	2783706	1					
ANR	2783894	ExpressionStatement	"value = ZEND_STRTOUL ( format - 1 , & end , 10 )"	358:3:10421:10461	2783706	0	True				
ANR	2783895	AssignmentExpression	"value = ZEND_STRTOUL ( format - 1 , & end , 10 )"		2783706	0		=			
ANR	2783896	Identifier	value		2783706	0					
ANR	2783897	CallExpression	"ZEND_STRTOUL ( format - 1 , & end , 10 )"		2783706	1					
ANR	2783898	Callee	ZEND_STRTOUL		2783706	0					
ANR	2783899	Identifier	ZEND_STRTOUL		2783706	0					
ANR	2783900	ArgumentList	format - 1		2783706	1					
ANR	2783901	Argument	format - 1		2783706	0					
ANR	2783902	AdditiveExpression	format - 1		2783706	0		-			
ANR	2783903	Identifier	format		2783706	0					
ANR	2783904	PrimaryExpression	1		2783706	1					
ANR	2783905	Argument	& end		2783706	1					
ANR	2783906	UnaryOperationExpression	& end		2783706	0					
ANR	2783907	UnaryOperator	&		2783706	0					
ANR	2783908	Identifier	end		2783706	1					
ANR	2783909	Argument	10		2783706	2					
ANR	2783910	PrimaryExpression	10		2783706	0					
ANR	2783911	IfStatement	if ( * end != '$' )		2783706	1					
ANR	2783912	Condition	* end != '$'	359:7:10470:10480	2783706	0	True				
ANR	2783913	EqualityExpression	* end != '$'		2783706	0		!=			
ANR	2783914	UnaryOperationExpression	* end		2783706	0					
ANR	2783915	UnaryOperator	*		2783706	0					
ANR	2783916	Identifier	end		2783706	1					
ANR	2783917	PrimaryExpression	'$'		2783706	1					
ANR	2783918	CompoundStatement		48:20:1133:1133	2783706	1					
ANR	2783919	GotoStatement	goto notXpg ;	360:4:10489:10500	2783706	0	True				
ANR	2783920	Identifier	notXpg		2783706	0					
ANR	2783921	ExpressionStatement	format = end + 1	362:3:10510:10524	2783706	2	True				
ANR	2783922	AssignmentExpression	format = end + 1		2783706	0		=			
ANR	2783923	Identifier	format		2783706	0					
ANR	2783924	AdditiveExpression	end + 1		2783706	1		+			
ANR	2783925	Identifier	end		2783706	0					
ANR	2783926	PrimaryExpression	1		2783706	1					
ANR	2783927	ExpressionStatement	ch = format ++	363:3:10529:10546	2783706	3	True				
ANR	2783928	AssignmentExpression	ch = format ++		2783706	0		=			
ANR	2783929	Identifier	ch		2783706	0					
ANR	2783930	PostIncDecOperationExpression	format ++		2783706	1					
ANR	2783931	Identifier	format		2783706	0					
ANR	2783932	IncDec	++		2783706	1					
ANR	2783933	ExpressionStatement	gotXpg = 1	364:3:10551:10561	2783706	4	True				
ANR	2783934	AssignmentExpression	gotXpg = 1		2783706	0		=			
ANR	2783935	Identifier	gotXpg		2783706	0					
ANR	2783936	PrimaryExpression	1		2783706	1					
ANR	2783937	IfStatement	if ( gotSequential )		2783706	5					
ANR	2783938	Condition	gotSequential	365:7:10570:10582	2783706	0	True				
ANR	2783939	Identifier	gotSequential		2783706	0					
ANR	2783940	CompoundStatement		54:22:1235:1235	2783706	1					
ANR	2783941	GotoStatement	goto mixedXPG ;	366:4:10591:10604	2783706	0	True				
ANR	2783942	Identifier	mixedXPG		2783706	0					
ANR	2783943	ExpressionStatement	objIndex = value - 1	368:3:10614:10634	2783706	6	True				
ANR	2783944	AssignmentExpression	objIndex = value - 1		2783706	0		=			
ANR	2783945	Identifier	objIndex		2783706	0					
ANR	2783946	AdditiveExpression	value - 1		2783706	1		-			
ANR	2783947	Identifier	value		2783706	0					
ANR	2783948	PrimaryExpression	1		2783706	1					
ANR	2783949	IfStatement	if ( ( objIndex < 0 ) || ( numVars && ( objIndex >= numVars ) ) )		2783706	7					
ANR	2783950	Condition	( objIndex < 0 ) || ( numVars && ( objIndex >= numVars ) )	369:7:10643:10694	2783706	0	True				
ANR	2783951	OrExpression	( objIndex < 0 ) || ( numVars && ( objIndex >= numVars ) )		2783706	0		||			
ANR	2783952	RelationalExpression	objIndex < 0		2783706	0		<			
ANR	2783953	Identifier	objIndex		2783706	0					
ANR	2783954	PrimaryExpression	0		2783706	1					
ANR	2783955	AndExpression	numVars && ( objIndex >= numVars )		2783706	1		&&			
ANR	2783956	Identifier	numVars		2783706	0					
ANR	2783957	RelationalExpression	objIndex >= numVars		2783706	1		>=			
ANR	2783958	Identifier	objIndex		2783706	0					
ANR	2783959	Identifier	numVars		2783706	1					
ANR	2783960	CompoundStatement		58:61:1347:1347	2783706	1					
ANR	2783961	GotoStatement	goto badIndex ;	370:4:10703:10716	2783706	0	True				
ANR	2783962	Identifier	badIndex		2783706	0					
ANR	2783963	ElseStatement	else		2783706	0					
ANR	2783964	IfStatement	if ( numVars == 0 )		2783706	0					
ANR	2783965	Condition	numVars == 0	371:14:10732:10743	2783706	0	True				
ANR	2783966	EqualityExpression	numVars == 0		2783706	0		==			
ANR	2783967	Identifier	numVars		2783706	0					
ANR	2783968	PrimaryExpression	0		2783706	1					
ANR	2783969	CompoundStatement		60:28:1396:1396	2783706	1					
ANR	2783970	IfStatement	if ( value > SCAN_MAX_ARGS )		2783706	0					
ANR	2783971	Condition	value > SCAN_MAX_ARGS	383:8:11146:11166	2783706	0	True				
ANR	2783972	RelationalExpression	value > SCAN_MAX_ARGS		2783706	0		>			
ANR	2783973	Identifier	value		2783706	0					
ANR	2783974	Identifier	SCAN_MAX_ARGS		2783706	1					
ANR	2783975	CompoundStatement		72:31:1819:1819	2783706	1					
ANR	2783976	GotoStatement	goto badIndex ;	384:5:11176:11189	2783706	0	True				
ANR	2783977	Identifier	badIndex		2783706	0					
ANR	2783978	ExpressionStatement	xpgSize = ( xpgSize > value ) ? xpgSize : value	387:4:11202:11247	2783706	1	True				
ANR	2783979	AssignmentExpression	xpgSize = ( xpgSize > value ) ? xpgSize : value		2783706	0		=			
ANR	2783980	Identifier	xpgSize		2783706	0					
ANR	2783981	ConditionalExpression	( xpgSize > value ) ? xpgSize : value		2783706	1					
ANR	2783982	Condition	xpgSize > value		2783706	0					
ANR	2783983	RelationalExpression	xpgSize > value		2783706	0		>			
ANR	2783984	Identifier	xpgSize		2783706	0					
ANR	2783985	Identifier	value		2783706	1					
ANR	2783986	Identifier	xpgSize		2783706	1					
ANR	2783987	Identifier	value		2783706	2					
ANR	2783988	GotoStatement	goto xpgCheckDone ;	389:3:11257:11274	2783706	8	True				
ANR	2783989	Identifier	xpgCheckDone		2783706	0					
ANR	2783990	Label	notXpg :	392:0:11281:11287	2783706	7	True				
ANR	2783991	Identifier	notXpg		2783706	0					
ANR	2783992	ExpressionStatement	gotSequential = 1	393:2:11291:11308	2783706	8	True				
ANR	2783993	AssignmentExpression	gotSequential = 1		2783706	0		=			
ANR	2783994	Identifier	gotSequential		2783706	0					
ANR	2783995	PrimaryExpression	1		2783706	1					
ANR	2783996	IfStatement	if ( gotXpg )		2783706	9					
ANR	2783997	Condition	gotXpg	394:6:11316:11321	2783706	0	True				
ANR	2783998	Identifier	gotXpg		2783706	0					
ANR	2783999	CompoundStatement		83:14:1974:1974	2783706	1					
ANR	2784000	Label	mixedXPG :	395:0:11326:11334	2783706	0	True				
ANR	2784001	Identifier	mixedXPG		2783706	0					
ANR	2784002	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""%s"" , ""cannot mix \\""%\\"" and \\""%n$\\"" conversion specifiers"" )"	396:3:11339:11432	2783706	1	True				
ANR	2784003	CallExpression	"php_error_docref ( NULL , E_WARNING , ""%s"" , ""cannot mix \\""%\\"" and \\""%n$\\"" conversion specifiers"" )"		2783706	0					
ANR	2784004	Callee	php_error_docref		2783706	0					
ANR	2784005	Identifier	php_error_docref		2783706	0					
ANR	2784006	ArgumentList	NULL		2783706	1					
ANR	2784007	Argument	NULL		2783706	0					
ANR	2784008	Identifier	NULL		2783706	0					
ANR	2784009	Argument	E_WARNING		2783706	1					
ANR	2784010	Identifier	E_WARNING		2783706	0					
ANR	2784011	Argument	"""%s"""		2783706	2					
ANR	2784012	PrimaryExpression	"""%s"""		2783706	0					
ANR	2784013	Argument	"""cannot mix \\""%\\"" and \\""%n$\\"" conversion specifiers"""		2783706	3					
ANR	2784014	PrimaryExpression	"""cannot mix \\""%\\"" and \\""%n$\\"" conversion specifiers"""		2783706	0					
ANR	2784015	GotoStatement	goto error ;	397:3:11437:11447	2783706	2	True				
ANR	2784016	Identifier	error		2783706	0					
ANR	2784017	Label	xpgCheckDone :	400:0:11454:11466	2783706	10	True				
ANR	2784018	Identifier	xpgCheckDone		2783706	0					
ANR	2784019	IfStatement	if ( isdigit ( UCHAR ( * ch ) ) )		2783706	11					
ANR	2784020	Condition	isdigit ( UCHAR ( * ch ) )	404:6:11517:11535	2783706	0	True				
ANR	2784021	CallExpression	isdigit ( UCHAR ( * ch ) )		2783706	0					
ANR	2784022	Callee	isdigit		2783706	0					
ANR	2784023	Identifier	isdigit		2783706	0					
ANR	2784024	ArgumentList	UCHAR ( * ch )		2783706	1					
ANR	2784025	Argument	UCHAR ( * ch )		2783706	0					
ANR	2784026	CallExpression	UCHAR ( * ch )		2783706	0					
ANR	2784027	Callee	UCHAR		2783706	0					
ANR	2784028	Identifier	UCHAR		2783706	0					
ANR	2784029	ArgumentList	* ch		2783706	1					
ANR	2784030	Argument	* ch		2783706	0					
ANR	2784031	UnaryOperationExpression	* ch		2783706	0					
ANR	2784032	UnaryOperator	*		2783706	0					
ANR	2784033	Identifier	ch		2783706	1					
ANR	2784034	CompoundStatement		93:27:2188:2188	2783706	1					
ANR	2784035	ExpressionStatement	"value = ZEND_STRTOUL ( format - 1 , & format , 10 )"	405:3:11543:11586	2783706	0	True				
ANR	2784036	AssignmentExpression	"value = ZEND_STRTOUL ( format - 1 , & format , 10 )"		2783706	0		=			
ANR	2784037	Identifier	value		2783706	0					
ANR	2784038	CallExpression	"ZEND_STRTOUL ( format - 1 , & format , 10 )"		2783706	1					
ANR	2784039	Callee	ZEND_STRTOUL		2783706	0					
ANR	2784040	Identifier	ZEND_STRTOUL		2783706	0					
ANR	2784041	ArgumentList	format - 1		2783706	1					
ANR	2784042	Argument	format - 1		2783706	0					
ANR	2784043	AdditiveExpression	format - 1		2783706	0		-			
ANR	2784044	Identifier	format		2783706	0					
ANR	2784045	PrimaryExpression	1		2783706	1					
ANR	2784046	Argument	& format		2783706	1					
ANR	2784047	UnaryOperationExpression	& format		2783706	0					
ANR	2784048	UnaryOperator	&		2783706	0					
ANR	2784049	Identifier	format		2783706	1					
ANR	2784050	Argument	10		2783706	2					
ANR	2784051	PrimaryExpression	10		2783706	0					
ANR	2784052	ExpressionStatement	flags |= SCAN_WIDTH	406:3:11591:11610	2783706	1	True				
ANR	2784053	AssignmentExpression	flags |= SCAN_WIDTH		2783706	0		|=			
ANR	2784054	Identifier	flags		2783706	0					
ANR	2784055	Identifier	SCAN_WIDTH		2783706	1					
ANR	2784056	ExpressionStatement	ch = format ++	407:3:11615:11628	2783706	2	True				
ANR	2784057	AssignmentExpression	ch = format ++		2783706	0		=			
ANR	2784058	Identifier	ch		2783706	0					
ANR	2784059	PostIncDecOperationExpression	format ++		2783706	1					
ANR	2784060	Identifier	format		2783706	0					
ANR	2784061	IncDec	++		2783706	1					
ANR	2784062	IfStatement	if ( ( * ch == 'l' ) || ( * ch == 'L' ) || ( * ch == 'h' ) )		2783706	12					
ANR	2784063	Condition	( * ch == 'l' ) || ( * ch == 'L' ) || ( * ch == 'h' )	413:6:11680:11723	2783706	0	True				
ANR	2784064	OrExpression	( * ch == 'l' ) || ( * ch == 'L' ) || ( * ch == 'h' )		2783706	0		||			
ANR	2784065	EqualityExpression	* ch == 'l'		2783706	0		==			
ANR	2784066	UnaryOperationExpression	* ch		2783706	0					
ANR	2784067	UnaryOperator	*		2783706	0					
ANR	2784068	Identifier	ch		2783706	1					
ANR	2784069	PrimaryExpression	'l'		2783706	1					
ANR	2784070	OrExpression	( * ch == 'L' ) || ( * ch == 'h' )		2783706	1		||			
ANR	2784071	EqualityExpression	* ch == 'L'		2783706	0		==			
ANR	2784072	UnaryOperationExpression	* ch		2783706	0					
ANR	2784073	UnaryOperator	*		2783706	0					
ANR	2784074	Identifier	ch		2783706	1					
ANR	2784075	PrimaryExpression	'L'		2783706	1					
ANR	2784076	EqualityExpression	* ch == 'h'		2783706	1		==			
ANR	2784077	UnaryOperationExpression	* ch		2783706	0					
ANR	2784078	UnaryOperator	*		2783706	0					
ANR	2784079	Identifier	ch		2783706	1					
ANR	2784080	PrimaryExpression	'h'		2783706	1					
ANR	2784081	CompoundStatement		102:52:2376:2376	2783706	1					
ANR	2784082	ExpressionStatement	ch = format ++	414:3:11731:11744	2783706	0	True				
ANR	2784083	AssignmentExpression	ch = format ++		2783706	0		=			
ANR	2784084	Identifier	ch		2783706	0					
ANR	2784085	PostIncDecOperationExpression	format ++		2783706	1					
ANR	2784086	Identifier	format		2783706	0					
ANR	2784087	IncDec	++		2783706	1					
ANR	2784088	IfStatement	if ( ! ( flags & SCAN_SUPPRESS ) && numVars && ( objIndex >= numVars ) )		2783706	13					
ANR	2784089	Condition	! ( flags & SCAN_SUPPRESS ) && numVars && ( objIndex >= numVars )	417:6:11757:11816	2783706	0	True				
ANR	2784090	AndExpression	! ( flags & SCAN_SUPPRESS ) && numVars && ( objIndex >= numVars )		2783706	0		&&			
ANR	2784091	UnaryOperationExpression	! ( flags & SCAN_SUPPRESS )		2783706	0					
ANR	2784092	UnaryOperator	!		2783706	0					
ANR	2784093	BitAndExpression	flags & SCAN_SUPPRESS		2783706	1		&			
ANR	2784094	Identifier	flags		2783706	0					
ANR	2784095	Identifier	SCAN_SUPPRESS		2783706	1					
ANR	2784096	AndExpression	numVars && ( objIndex >= numVars )		2783706	1		&&			
ANR	2784097	Identifier	numVars		2783706	0					
ANR	2784098	RelationalExpression	objIndex >= numVars		2783706	1		>=			
ANR	2784099	Identifier	objIndex		2783706	0					
ANR	2784100	Identifier	numVars		2783706	1					
ANR	2784101	CompoundStatement		106:68:2469:2469	2783706	1					
ANR	2784102	GotoStatement	goto badIndex ;	418:3:11824:11837	2783706	0	True				
ANR	2784103	Identifier	badIndex		2783706	0					
ANR	2784104	SwitchStatement	switch ( * ch )		2783706	14					
ANR	2784105	Condition	* ch	424:10:11902:11904	2783706	0	True				
ANR	2784106	UnaryOperationExpression	* ch		2783706	0					
ANR	2784107	UnaryOperator	*		2783706	0					
ANR	2784108	Identifier	ch		2783706	1					
ANR	2784109	CompoundStatement		113:15:2557:2557	2783706	1					
ANR	2784110	Label	case 'n' :	425:3:11912:11920	2783706	0	True				
ANR	2784111	Label	case 'd' :	426:3:11925:11933	2783706	1	True				
ANR	2784112	Label	case 'D' :	427:3:11938:11946	2783706	2	True				
ANR	2784113	Label	case 'i' :	428:3:11951:11959	2783706	3	True				
ANR	2784114	Label	case 'o' :	429:3:11964:11972	2783706	4	True				
ANR	2784115	Label	case 'x' :	430:3:11977:11985	2783706	5	True				
ANR	2784116	Label	case 'X' :	431:3:11990:11998	2783706	6	True				
ANR	2784117	Label	case 'u' :	432:3:12003:12011	2783706	7	True				
ANR	2784118	Label	case 'f' :	433:3:12016:12024	2783706	8	True				
ANR	2784119	Label	case 'e' :	434:3:12029:12037	2783706	9	True				
ANR	2784120	Label	case 'E' :	435:3:12042:12050	2783706	10	True				
ANR	2784121	Label	case 'g' :	436:3:12055:12063	2783706	11	True				
ANR	2784122	Label	case 's' :	437:3:12068:12076	2783706	12	True				
ANR	2784123	BreakStatement	break ;	438:4:12082:12087	2783706	13	True				
ANR	2784124	Label	case 'c' :	440:3:12093:12101	2783706	14	True				
ANR	2784125	BreakStatement	break ;	451:4:12544:12549	2783706	15	True				
ANR	2784126	Label	case '[' :	453:3:12555:12563	2783706	16	True				
ANR	2784127	IfStatement	if ( * format == '\\0' )		2783706	17					
ANR	2784128	Condition	* format == '\\0'	454:8:12573:12587	2783706	0	True				
ANR	2784129	EqualityExpression	* format == '\\0'		2783706	0		==			
ANR	2784130	UnaryOperationExpression	* format		2783706	0					
ANR	2784131	UnaryOperator	*		2783706	0					
ANR	2784132	Identifier	format		2783706	1					
ANR	2784133	PrimaryExpression	'\\0'		2783706	1					
ANR	2784134	CompoundStatement		143:25:3240:3240	2783706	1					
ANR	2784135	GotoStatement	goto badSet ;	455:5:12597:12608	2783706	0	True				
ANR	2784136	Identifier	badSet		2783706	0					
ANR	2784137	ExpressionStatement	ch = format ++	457:4:12620:12633	2783706	18	True				
ANR	2784138	AssignmentExpression	ch = format ++		2783706	0		=			
ANR	2784139	Identifier	ch		2783706	0					
ANR	2784140	PostIncDecOperationExpression	format ++		2783706	1					
ANR	2784141	Identifier	format		2783706	0					
ANR	2784142	IncDec	++		2783706	1					
ANR	2784143	IfStatement	if ( * ch == '^' )		2783706	19					
ANR	2784144	Condition	* ch == '^'	458:8:12643:12652	2783706	0	True				
ANR	2784145	EqualityExpression	* ch == '^'		2783706	0		==			
ANR	2784146	UnaryOperationExpression	* ch		2783706	0					
ANR	2784147	UnaryOperator	*		2783706	0					
ANR	2784148	Identifier	ch		2783706	1					
ANR	2784149	PrimaryExpression	'^'		2783706	1					
ANR	2784150	CompoundStatement		147:20:3305:3305	2783706	1					
ANR	2784151	IfStatement	if ( * format == '\\0' )		2783706	0					
ANR	2784152	Condition	* format == '\\0'	459:9:12666:12680	2783706	0	True				
ANR	2784153	EqualityExpression	* format == '\\0'		2783706	0		==			
ANR	2784154	UnaryOperationExpression	* format		2783706	0					
ANR	2784155	UnaryOperator	*		2783706	0					
ANR	2784156	Identifier	format		2783706	1					
ANR	2784157	PrimaryExpression	'\\0'		2783706	1					
ANR	2784158	CompoundStatement		148:26:3333:3333	2783706	1					
ANR	2784159	GotoStatement	goto badSet ;	460:6:12691:12702	2783706	0	True				
ANR	2784160	Identifier	badSet		2783706	0					
ANR	2784161	ExpressionStatement	ch = format ++	462:5:12716:12729	2783706	1	True				
ANR	2784162	AssignmentExpression	ch = format ++		2783706	0		=			
ANR	2784163	Identifier	ch		2783706	0					
ANR	2784164	PostIncDecOperationExpression	format ++		2783706	1					
ANR	2784165	Identifier	format		2783706	0					
ANR	2784166	IncDec	++		2783706	1					
ANR	2784167	IfStatement	if ( * ch == ']' )		2783706	20					
ANR	2784168	Condition	* ch == ']'	464:8:12745:12754	2783706	0	True				
ANR	2784169	EqualityExpression	* ch == ']'		2783706	0		==			
ANR	2784170	UnaryOperationExpression	* ch		2783706	0					
ANR	2784171	UnaryOperator	*		2783706	0					
ANR	2784172	Identifier	ch		2783706	1					
ANR	2784173	PrimaryExpression	']'		2783706	1					
ANR	2784174	CompoundStatement		153:20:3407:3407	2783706	1					
ANR	2784175	IfStatement	if ( * format == '\\0' )		2783706	0					
ANR	2784176	Condition	* format == '\\0'	465:9:12768:12782	2783706	0	True				
ANR	2784177	EqualityExpression	* format == '\\0'		2783706	0		==			
ANR	2784178	UnaryOperationExpression	* format		2783706	0					
ANR	2784179	UnaryOperator	*		2783706	0					
ANR	2784180	Identifier	format		2783706	1					
ANR	2784181	PrimaryExpression	'\\0'		2783706	1					
ANR	2784182	CompoundStatement		154:26:3435:3435	2783706	1					
ANR	2784183	GotoStatement	goto badSet ;	466:6:12793:12804	2783706	0	True				
ANR	2784184	Identifier	badSet		2783706	0					
ANR	2784185	ExpressionStatement	ch = format ++	468:5:12818:12831	2783706	1	True				
ANR	2784186	AssignmentExpression	ch = format ++		2783706	0		=			
ANR	2784187	Identifier	ch		2783706	0					
ANR	2784188	PostIncDecOperationExpression	format ++		2783706	1					
ANR	2784189	Identifier	format		2783706	0					
ANR	2784190	IncDec	++		2783706	1					
ANR	2784191	WhileStatement	while ( * ch != ']' )		2783706	21					
ANR	2784192	Condition	* ch != ']'	470:11:12850:12859	2783706	0	True				
ANR	2784193	EqualityExpression	* ch != ']'		2783706	0		!=			
ANR	2784194	UnaryOperationExpression	* ch		2783706	0					
ANR	2784195	UnaryOperator	*		2783706	0					
ANR	2784196	Identifier	ch		2783706	1					
ANR	2784197	PrimaryExpression	']'		2783706	1					
ANR	2784198	CompoundStatement		159:23:3512:3512	2783706	1					
ANR	2784199	IfStatement	if ( * format == '\\0' )		2783706	0					
ANR	2784200	Condition	* format == '\\0'	471:9:12873:12887	2783706	0	True				
ANR	2784201	EqualityExpression	* format == '\\0'		2783706	0		==			
ANR	2784202	UnaryOperationExpression	* format		2783706	0					
ANR	2784203	UnaryOperator	*		2783706	0					
ANR	2784204	Identifier	format		2783706	1					
ANR	2784205	PrimaryExpression	'\\0'		2783706	1					
ANR	2784206	CompoundStatement		160:26:3540:3540	2783706	1					
ANR	2784207	GotoStatement	goto badSet ;	472:6:12898:12909	2783706	0	True				
ANR	2784208	Identifier	badSet		2783706	0					
ANR	2784209	ExpressionStatement	ch = format ++	474:5:12923:12936	2783706	1	True				
ANR	2784210	AssignmentExpression	ch = format ++		2783706	0		=			
ANR	2784211	Identifier	ch		2783706	0					
ANR	2784212	PostIncDecOperationExpression	format ++		2783706	1					
ANR	2784213	Identifier	format		2783706	0					
ANR	2784214	IncDec	++		2783706	1					
ANR	2784215	BreakStatement	break ;	476:4:12948:12953	2783706	22	True				
ANR	2784216	Label	badSet :	477:0:12955:12961	2783706	23	True				
ANR	2784217	Identifier	badSet		2783706	0					
ANR	2784218	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Unmatched [ in format string"" )"	478:4:12967:13032	2783706	24	True				
ANR	2784219	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Unmatched [ in format string"" )"		2783706	0					
ANR	2784220	Callee	php_error_docref		2783706	0					
ANR	2784221	Identifier	php_error_docref		2783706	0					
ANR	2784222	ArgumentList	NULL		2783706	1					
ANR	2784223	Argument	NULL		2783706	0					
ANR	2784224	Identifier	NULL		2783706	0					
ANR	2784225	Argument	E_WARNING		2783706	1					
ANR	2784226	Identifier	E_WARNING		2783706	0					
ANR	2784227	Argument	"""Unmatched [ in format string"""		2783706	2					
ANR	2784228	PrimaryExpression	"""Unmatched [ in format string"""		2783706	0					
ANR	2784229	GotoStatement	goto error ;	479:4:13038:13048	2783706	25	True				
ANR	2784230	Identifier	error		2783706	0					
ANR	2784231	Label	default :	481:3:13054:13061	2783706	26	True				
ANR	2784232	Identifier	default		2783706	0					
ANR	2784233	CompoundStatement		170:12:3713:3713	2783706	27					
ANR	2784234	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Bad scan conversion character \\""%c\\"""" , * ch )"	482:4:13069:13147	2783706	0	True				
ANR	2784235	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Bad scan conversion character \\""%c\\"""" , * ch )"		2783706	0					
ANR	2784236	Callee	php_error_docref		2783706	0					
ANR	2784237	Identifier	php_error_docref		2783706	0					
ANR	2784238	ArgumentList	NULL		2783706	1					
ANR	2784239	Argument	NULL		2783706	0					
ANR	2784240	Identifier	NULL		2783706	0					
ANR	2784241	Argument	E_WARNING		2783706	1					
ANR	2784242	Identifier	E_WARNING		2783706	0					
ANR	2784243	Argument	"""Bad scan conversion character \\""%c\\"""""		2783706	2					
ANR	2784244	PrimaryExpression	"""Bad scan conversion character \\""%c\\"""""		2783706	0					
ANR	2784245	Argument	* ch		2783706	3					
ANR	2784246	UnaryOperationExpression	* ch		2783706	0					
ANR	2784247	UnaryOperator	*		2783706	0					
ANR	2784248	Identifier	ch		2783706	1					
ANR	2784249	GotoStatement	goto error ;	483:4:13153:13163	2783706	1	True				
ANR	2784250	Identifier	error		2783706	0					
ANR	2784251	IfStatement	if ( ! ( flags & SCAN_SUPPRESS ) )		2783706	15					
ANR	2784252	Condition	! ( flags & SCAN_SUPPRESS )	487:6:13181:13204	2783706	0	True				
ANR	2784253	UnaryOperationExpression	! ( flags & SCAN_SUPPRESS )		2783706	0					
ANR	2784254	UnaryOperator	!		2783706	0					
ANR	2784255	BitAndExpression	flags & SCAN_SUPPRESS		2783706	1		&			
ANR	2784256	Identifier	flags		2783706	0					
ANR	2784257	Identifier	SCAN_SUPPRESS		2783706	1					
ANR	2784258	CompoundStatement		176:32:3857:3857	2783706	1					
ANR	2784259	IfStatement	if ( objIndex >= nspace )		2783706	0					
ANR	2784260	Condition	objIndex >= nspace	488:7:13216:13233	2783706	0	True				
ANR	2784261	RelationalExpression	objIndex >= nspace		2783706	0		>=			
ANR	2784262	Identifier	objIndex		2783706	0					
ANR	2784263	Identifier	nspace		2783706	1					
ANR	2784264	CompoundStatement		177:27:3886:3886	2783706	1					
ANR	2784265	ExpressionStatement	value = nspace	494:4:13449:13463	2783706	0	True				
ANR	2784266	AssignmentExpression	value = nspace		2783706	0		=			
ANR	2784267	Identifier	value		2783706	0					
ANR	2784268	Identifier	nspace		2783706	1					
ANR	2784269	IfStatement	if ( xpgSize )		2783706	1					
ANR	2784270	Condition	xpgSize	495:8:13473:13479	2783706	0	True				
ANR	2784271	Identifier	xpgSize		2783706	0					
ANR	2784272	CompoundStatement		184:17:4132:4132	2783706	1					
ANR	2784273	ExpressionStatement	nspace = xpgSize	496:5:13489:13505	2783706	0	True				
ANR	2784274	AssignmentExpression	nspace = xpgSize		2783706	0		=			
ANR	2784275	Identifier	nspace		2783706	0					
ANR	2784276	Identifier	xpgSize		2783706	1					
ANR	2784277	ElseStatement	else		2783706	0					
ANR	2784278	CompoundStatement		186:11:4168:4168	2783706	0					
ANR	2784279	ExpressionStatement	nspace += STATIC_LIST_SIZE	498:5:13525:13551	2783706	0	True				
ANR	2784280	AssignmentExpression	nspace += STATIC_LIST_SIZE		2783706	0		+=			
ANR	2784281	Identifier	nspace		2783706	0					
ANR	2784282	Identifier	STATIC_LIST_SIZE		2783706	1					
ANR	2784283	IfStatement	if ( nassign == staticAssign )		2783706	2					
ANR	2784284	Condition	nassign == staticAssign	500:8:13567:13589	2783706	0	True				
ANR	2784285	EqualityExpression	nassign == staticAssign		2783706	0		==			
ANR	2784286	Identifier	nassign		2783706	0					
ANR	2784287	Identifier	staticAssign		2783706	1					
ANR	2784288	CompoundStatement		189:33:4242:4242	2783706	1					
ANR	2784289	ExpressionStatement	"nassign = ( void * ) safe_emalloc ( nspace , sizeof ( int ) , 0 )"	501:5:13599:13653	2783706	0	True				
ANR	2784290	AssignmentExpression	"nassign = ( void * ) safe_emalloc ( nspace , sizeof ( int ) , 0 )"		2783706	0		=			
ANR	2784291	Identifier	nassign		2783706	0					
ANR	2784292	CastExpression	"( void * ) safe_emalloc ( nspace , sizeof ( int ) , 0 )"		2783706	1					
ANR	2784293	CastTarget	void *		2783706	0					
ANR	2784294	CallExpression	"safe_emalloc ( nspace , sizeof ( int ) , 0 )"		2783706	1					
ANR	2784295	Callee	safe_emalloc		2783706	0					
ANR	2784296	Identifier	safe_emalloc		2783706	0					
ANR	2784297	ArgumentList	nspace		2783706	1					
ANR	2784298	Argument	nspace		2783706	0					
ANR	2784299	Identifier	nspace		2783706	0					
ANR	2784300	Argument	sizeof ( int )		2783706	1					
ANR	2784301	SizeofExpression	sizeof ( int )		2783706	0					
ANR	2784302	Sizeof	sizeof		2783706	0					
ANR	2784303	SizeofOperand	int		2783706	1					
ANR	2784304	Argument	0		2783706	2					
ANR	2784305	PrimaryExpression	0		2783706	0					
ANR	2784306	ForStatement	for ( i = 0 ; i < STATIC_LIST_SIZE ; ++ i )		2783706	1					
ANR	2784307	ForInit	i = 0 ;	502:10:13665:13670	2783706	0	True				
ANR	2784308	AssignmentExpression	i = 0		2783706	0		=			
ANR	2784309	Identifier	i		2783706	0					
ANR	2784310	PrimaryExpression	0		2783706	1					
ANR	2784311	Condition	i < STATIC_LIST_SIZE	502:17:13672:13691	2783706	1	True				
ANR	2784312	RelationalExpression	i < STATIC_LIST_SIZE		2783706	0		<			
ANR	2784313	Identifier	i		2783706	0					
ANR	2784314	Identifier	STATIC_LIST_SIZE		2783706	1					
ANR	2784315	UnaryExpression	++ i	502:39:13694:13696	2783706	2	True				
ANR	2784316	IncDec	++		2783706	0					
ANR	2784317	Identifier	i		2783706	1					
ANR	2784318	CompoundStatement		191:44:4349:4349	2783706	3					
ANR	2784319	ExpressionStatement	nassign [ i ] = staticAssign [ i ]	503:6:13707:13735	2783706	0	True				
ANR	2784320	AssignmentExpression	nassign [ i ] = staticAssign [ i ]		2783706	0		=			
ANR	2784321	ArrayIndexing	nassign [ i ]		2783706	0					
ANR	2784322	Identifier	nassign		2783706	0					
ANR	2784323	Identifier	i		2783706	1					
ANR	2784324	ArrayIndexing	staticAssign [ i ]		2783706	1					
ANR	2784325	Identifier	staticAssign		2783706	0					
ANR	2784326	Identifier	i		2783706	1					
ANR	2784327	ElseStatement	else		2783706	0					
ANR	2784328	CompoundStatement		194:11:4405:4405	2783706	0					
ANR	2784329	ExpressionStatement	"nassign = ( void * ) erealloc ( ( void * ) nassign , nspace * sizeof ( int ) )"	506:5:13762:13827	2783706	0	True				
ANR	2784330	AssignmentExpression	"nassign = ( void * ) erealloc ( ( void * ) nassign , nspace * sizeof ( int ) )"		2783706	0		=			
ANR	2784331	Identifier	nassign		2783706	0					
ANR	2784332	CastExpression	"( void * ) erealloc ( ( void * ) nassign , nspace * sizeof ( int ) )"		2783706	1					
ANR	2784333	CastTarget	void *		2783706	0					
ANR	2784334	CallExpression	"erealloc ( ( void * ) nassign , nspace * sizeof ( int ) )"		2783706	1					
ANR	2784335	Callee	erealloc		2783706	0					
ANR	2784336	Identifier	erealloc		2783706	0					
ANR	2784337	ArgumentList	( void * ) nassign		2783706	1					
ANR	2784338	Argument	( void * ) nassign		2783706	0					
ANR	2784339	CastExpression	( void * ) nassign		2783706	0					
ANR	2784340	CastTarget	void *		2783706	0					
ANR	2784341	Identifier	nassign		2783706	1					
ANR	2784342	Argument	nspace * sizeof ( int )		2783706	1					
ANR	2784343	MultiplicativeExpression	nspace * sizeof ( int )		2783706	0		*			
ANR	2784344	Identifier	nspace		2783706	0					
ANR	2784345	SizeofExpression	sizeof ( int )		2783706	1					
ANR	2784346	Sizeof	sizeof		2783706	0					
ANR	2784347	SizeofOperand	int		2783706	1					
ANR	2784348	ForStatement	for ( i = value ; i < nspace ; i ++ )		2783706	3					
ANR	2784349	ForInit	i = value ;	508:9:13844:13853	2783706	0	True				
ANR	2784350	AssignmentExpression	i = value		2783706	0		=			
ANR	2784351	Identifier	i		2783706	0					
ANR	2784352	Identifier	value		2783706	1					
ANR	2784353	Condition	i < nspace	508:20:13855:13864	2783706	1	True				
ANR	2784354	RelationalExpression	i < nspace		2783706	0		<			
ANR	2784355	Identifier	i		2783706	0					
ANR	2784356	Identifier	nspace		2783706	1					
ANR	2784357	PostIncDecOperationExpression	i ++	508:32:13867:13869	2783706	2	True				
ANR	2784358	Identifier	i		2783706	0					
ANR	2784359	IncDec	++		2783706	1					
ANR	2784360	CompoundStatement		197:37:4522:4522	2783706	3					
ANR	2784361	ExpressionStatement	nassign [ i ] = 0	509:5:13879:13893	2783706	0	True				
ANR	2784362	AssignmentExpression	nassign [ i ] = 0		2783706	0		=			
ANR	2784363	ArrayIndexing	nassign [ i ]		2783706	0					
ANR	2784364	Identifier	nassign		2783706	0					
ANR	2784365	Identifier	i		2783706	1					
ANR	2784366	PrimaryExpression	0		2783706	1					
ANR	2784367	ExpressionStatement	nassign [ objIndex ] ++	512:3:13909:13928	2783706	1	True				
ANR	2784368	PostIncDecOperationExpression	nassign [ objIndex ] ++		2783706	0					
ANR	2784369	ArrayIndexing	nassign [ objIndex ]		2783706	0					
ANR	2784370	Identifier	nassign		2783706	0					
ANR	2784371	Identifier	objIndex		2783706	1					
ANR	2784372	IncDec	++		2783706	1					
ANR	2784373	ExpressionStatement	objIndex ++	513:3:13933:13943	2783706	2	True				
ANR	2784374	PostIncDecOperationExpression	objIndex ++		2783706	0					
ANR	2784375	Identifier	objIndex		2783706	0					
ANR	2784376	IncDec	++		2783706	1					
ANR	2784377	IfStatement	if ( numVars == 0 )		2783706	12					
ANR	2784378	Condition	numVars == 0	520:5:14061:14072	2783706	0	True				
ANR	2784379	EqualityExpression	numVars == 0		2783706	0		==			
ANR	2784380	Identifier	numVars		2783706	0					
ANR	2784381	PrimaryExpression	0		2783706	1					
ANR	2784382	CompoundStatement		209:19:4725:4725	2783706	1					
ANR	2784383	IfStatement	if ( xpgSize )		2783706	0					
ANR	2784384	Condition	xpgSize	521:6:14083:14089	2783706	0	True				
ANR	2784385	Identifier	xpgSize		2783706	0					
ANR	2784386	CompoundStatement		210:15:4742:4742	2783706	1					
ANR	2784387	ExpressionStatement	numVars = xpgSize	522:3:14097:14114	2783706	0	True				
ANR	2784388	AssignmentExpression	numVars = xpgSize		2783706	0		=			
ANR	2784389	Identifier	numVars		2783706	0					
ANR	2784390	Identifier	xpgSize		2783706	1					
ANR	2784391	ElseStatement	else		2783706	0					
ANR	2784392	CompoundStatement		212:9:4775:4775	2783706	0					
ANR	2784393	ExpressionStatement	numVars = objIndex	524:3:14130:14148	2783706	0	True				
ANR	2784394	AssignmentExpression	numVars = objIndex		2783706	0		=			
ANR	2784395	Identifier	numVars		2783706	0					
ANR	2784396	Identifier	objIndex		2783706	1					
ANR	2784397	IfStatement	if ( totalSubs )		2783706	13					
ANR	2784398	Condition	totalSubs	527:5:14162:14170	2783706	0	True				
ANR	2784399	Identifier	totalSubs		2783706	0					
ANR	2784400	CompoundStatement		216:16:4823:4823	2783706	1					
ANR	2784401	ExpressionStatement	* totalSubs = numVars	528:2:14177:14197	2783706	0	True				
ANR	2784402	AssignmentExpression	* totalSubs = numVars		2783706	0		=			
ANR	2784403	UnaryOperationExpression	* totalSubs		2783706	0					
ANR	2784404	UnaryOperator	*		2783706	0					
ANR	2784405	Identifier	totalSubs		2783706	1					
ANR	2784406	Identifier	numVars		2783706	1					
ANR	2784407	ForStatement	for ( i = 0 ; i < numVars ; i ++ )		2783706	14					
ANR	2784408	ForInit	i = 0 ;	530:6:14208:14213	2783706	0	True				
ANR	2784409	AssignmentExpression	i = 0		2783706	0		=			
ANR	2784410	Identifier	i		2783706	0					
ANR	2784411	PrimaryExpression	0		2783706	1					
ANR	2784412	Condition	i < numVars	530:13:14215:14225	2783706	1	True				
ANR	2784413	RelationalExpression	i < numVars		2783706	0		<			
ANR	2784414	Identifier	i		2783706	0					
ANR	2784415	Identifier	numVars		2783706	1					
ANR	2784416	PostIncDecOperationExpression	i ++	530:26:14228:14230	2783706	2	True				
ANR	2784417	Identifier	i		2783706	0					
ANR	2784418	IncDec	++		2783706	1					
ANR	2784419	CompoundStatement		219:31:4883:4883	2783706	3					
ANR	2784420	IfStatement	if ( nassign [ i ] > 1 )		2783706	0					
ANR	2784421	Condition	nassign [ i ] > 1	531:6:14241:14254	2783706	0	True				
ANR	2784422	RelationalExpression	nassign [ i ] > 1		2783706	0		>			
ANR	2784423	ArrayIndexing	nassign [ i ]		2783706	0					
ANR	2784424	Identifier	nassign		2783706	0					
ANR	2784425	Identifier	i		2783706	1					
ANR	2784426	PrimaryExpression	1		2783706	1					
ANR	2784427	CompoundStatement		220:22:4907:4907	2783706	1					
ANR	2784428	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""%s"" , ""Variable is assigned by multiple \\""%n$\\"" conversion specifiers"" )"	532:3:14262:14367	2783706	0	True				
ANR	2784429	CallExpression	"php_error_docref ( NULL , E_WARNING , ""%s"" , ""Variable is assigned by multiple \\""%n$\\"" conversion specifiers"" )"		2783706	0					
ANR	2784430	Callee	php_error_docref		2783706	0					
ANR	2784431	Identifier	php_error_docref		2783706	0					
ANR	2784432	ArgumentList	NULL		2783706	1					
ANR	2784433	Argument	NULL		2783706	0					
ANR	2784434	Identifier	NULL		2783706	0					
ANR	2784435	Argument	E_WARNING		2783706	1					
ANR	2784436	Identifier	E_WARNING		2783706	0					
ANR	2784437	Argument	"""%s"""		2783706	2					
ANR	2784438	PrimaryExpression	"""%s"""		2783706	0					
ANR	2784439	Argument	"""Variable is assigned by multiple \\""%n$\\"" conversion specifiers"""		2783706	3					
ANR	2784440	PrimaryExpression	"""Variable is assigned by multiple \\""%n$\\"" conversion specifiers"""		2783706	0					
ANR	2784441	GotoStatement	goto error ;	533:3:14372:14382	2783706	1	True				
ANR	2784442	Identifier	error		2783706	0					
ANR	2784443	ElseStatement	else		2783706	0					
ANR	2784444	IfStatement	if ( ! xpgSize && ( nassign [ i ] == 0 ) )		2783706	0					
ANR	2784445	Condition	! xpgSize && ( nassign [ i ] == 0 )	534:13:14397:14425	2783706	0	True				
ANR	2784446	AndExpression	! xpgSize && ( nassign [ i ] == 0 )		2783706	0		&&			
ANR	2784447	UnaryOperationExpression	! xpgSize		2783706	0					
ANR	2784448	UnaryOperator	!		2783706	0					
ANR	2784449	Identifier	xpgSize		2783706	1					
ANR	2784450	EqualityExpression	nassign [ i ] == 0		2783706	1		==			
ANR	2784451	ArrayIndexing	nassign [ i ]		2783706	0					
ANR	2784452	Identifier	nassign		2783706	0					
ANR	2784453	Identifier	i		2783706	1					
ANR	2784454	PrimaryExpression	0		2783706	1					
ANR	2784455	CompoundStatement		223:44:5078:5078	2783706	1					
ANR	2784456	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Variable is not assigned by any conversion specifiers"" )"	539:3:14574:14664	2783706	0	True				
ANR	2784457	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Variable is not assigned by any conversion specifiers"" )"		2783706	0					
ANR	2784458	Callee	php_error_docref		2783706	0					
ANR	2784459	Identifier	php_error_docref		2783706	0					
ANR	2784460	ArgumentList	NULL		2783706	1					
ANR	2784461	Argument	NULL		2783706	0					
ANR	2784462	Identifier	NULL		2783706	0					
ANR	2784463	Argument	E_WARNING		2783706	1					
ANR	2784464	Identifier	E_WARNING		2783706	0					
ANR	2784465	Argument	"""Variable is not assigned by any conversion specifiers"""		2783706	2					
ANR	2784466	PrimaryExpression	"""Variable is not assigned by any conversion specifiers"""		2783706	0					
ANR	2784467	GotoStatement	goto error ;	540:3:14669:14679	2783706	1	True				
ANR	2784468	Identifier	error		2783706	0					
ANR	2784469	IfStatement	if ( nassign != staticAssign )		2783706	15					
ANR	2784470	Condition	nassign != staticAssign	544:5:14694:14716	2783706	0	True				
ANR	2784471	EqualityExpression	nassign != staticAssign		2783706	0		!=			
ANR	2784472	Identifier	nassign		2783706	0					
ANR	2784473	Identifier	staticAssign		2783706	1					
ANR	2784474	CompoundStatement		233:30:5369:5369	2783706	1					
ANR	2784475	ExpressionStatement	efree ( ( char * ) nassign )	545:2:14723:14745	2783706	0	True				
ANR	2784476	CallExpression	efree ( ( char * ) nassign )		2783706	0					
ANR	2784477	Callee	efree		2783706	0					
ANR	2784478	Identifier	efree		2783706	0					
ANR	2784479	ArgumentList	( char * ) nassign		2783706	1					
ANR	2784480	Argument	( char * ) nassign		2783706	0					
ANR	2784481	CastExpression	( char * ) nassign		2783706	0					
ANR	2784482	CastTarget	char *		2783706	0					
ANR	2784483	Identifier	nassign		2783706	1					
ANR	2784484	ReturnStatement	return SCAN_SUCCESS ;	547:1:14751:14770	2783706	16	True				
ANR	2784485	Identifier	SCAN_SUCCESS		2783706	0					
ANR	2784486	Label	badIndex :	549:0:14773:14781	2783706	17	True				
ANR	2784487	Identifier	badIndex		2783706	0					
ANR	2784488	IfStatement	if ( gotXpg )		2783706	18					
ANR	2784489	Condition	gotXpg	550:5:14788:14793	2783706	0	True				
ANR	2784490	Identifier	gotXpg		2783706	0					
ANR	2784491	CompoundStatement		239:13:5446:5446	2783706	1					
ANR	2784492	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""%s"" , ""\\""%n$\\"" argument index out of range"" )"	551:2:14800:14878	2783706	0	True				
ANR	2784493	CallExpression	"php_error_docref ( NULL , E_WARNING , ""%s"" , ""\\""%n$\\"" argument index out of range"" )"		2783706	0					
ANR	2784494	Callee	php_error_docref		2783706	0					
ANR	2784495	Identifier	php_error_docref		2783706	0					
ANR	2784496	ArgumentList	NULL		2783706	1					
ANR	2784497	Argument	NULL		2783706	0					
ANR	2784498	Identifier	NULL		2783706	0					
ANR	2784499	Argument	E_WARNING		2783706	1					
ANR	2784500	Identifier	E_WARNING		2783706	0					
ANR	2784501	Argument	"""%s"""		2783706	2					
ANR	2784502	PrimaryExpression	"""%s"""		2783706	0					
ANR	2784503	Argument	"""\\""%n$\\"" argument index out of range"""		2783706	3					
ANR	2784504	PrimaryExpression	"""\\""%n$\\"" argument index out of range"""		2783706	0					
ANR	2784505	ElseStatement	else		2783706	0					
ANR	2784506	CompoundStatement		241:8:5538:5538	2783706	0					
ANR	2784507	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Different numbers of variable names and field specifiers"" )"	553:2:14892:14985	2783706	0	True				
ANR	2784508	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Different numbers of variable names and field specifiers"" )"		2783706	0					
ANR	2784509	Callee	php_error_docref		2783706	0					
ANR	2784510	Identifier	php_error_docref		2783706	0					
ANR	2784511	ArgumentList	NULL		2783706	1					
ANR	2784512	Argument	NULL		2783706	0					
ANR	2784513	Identifier	NULL		2783706	0					
ANR	2784514	Argument	E_WARNING		2783706	1					
ANR	2784515	Identifier	E_WARNING		2783706	0					
ANR	2784516	Argument	"""Different numbers of variable names and field specifiers"""		2783706	2					
ANR	2784517	PrimaryExpression	"""Different numbers of variable names and field specifiers"""		2783706	0					
ANR	2784518	Label	error :	556:0:14991:14996	2783706	19	True				
ANR	2784519	Identifier	error		2783706	0					
ANR	2784520	IfStatement	if ( nassign != staticAssign )		2783706	20					
ANR	2784521	Condition	nassign != staticAssign	557:5:15003:15025	2783706	0	True				
ANR	2784522	EqualityExpression	nassign != staticAssign		2783706	0		!=			
ANR	2784523	Identifier	nassign		2783706	0					
ANR	2784524	Identifier	staticAssign		2783706	1					
ANR	2784525	CompoundStatement		246:30:5678:5678	2783706	1					
ANR	2784526	ExpressionStatement	efree ( ( char * ) nassign )	558:2:15032:15054	2783706	0	True				
ANR	2784527	CallExpression	efree ( ( char * ) nassign )		2783706	0					
ANR	2784528	Callee	efree		2783706	0					
ANR	2784529	Identifier	efree		2783706	0					
ANR	2784530	ArgumentList	( char * ) nassign		2783706	1					
ANR	2784531	Argument	( char * ) nassign		2783706	0					
ANR	2784532	CastExpression	( char * ) nassign		2783706	0					
ANR	2784533	CastTarget	char *		2783706	0					
ANR	2784534	Identifier	nassign		2783706	1					
ANR	2784535	ReturnStatement	return SCAN_ERROR_INVALID_FORMAT ;	560:1:15060:15092	2783706	21	True				
ANR	2784536	Identifier	SCAN_ERROR_INVALID_FORMAT		2783706	0					
ANR	2784537	Statement	undef	561:1:15095:15099	2783706	22	True				
ANR	2784538	Statement	STATIC_LIST_SIZE	561:7:15101:15116	2783706	23	True				
ANR	2784539	ReturnType	PHPAPI int		2783706	1					
ANR	2784540	Identifier	ValidateFormat		2783706	2					
ANR	2784541	ParameterList	"char * format , int numVars , int * totalSubs"		2783706	3					
ANR	2784542	Parameter	char * format	311:26:9306:9317	2783706	0	True				
ANR	2784543	ParameterType	char *		2783706	0					
ANR	2784544	Identifier	format		2783706	1					
ANR	2784545	Parameter	int numVars	311:40:9320:9330	2783706	1	True				
ANR	2784546	ParameterType	int		2783706	0					
ANR	2784547	Identifier	numVars		2783706	1					
ANR	2784548	Parameter	int * totalSubs	311:53:9333:9346	2783706	2	True				
ANR	2784549	ParameterType	int *		2783706	0					
ANR	2784550	Identifier	totalSubs		2783706	1					
ANR	2784551	CFGEntryNode	ENTRY		2783706		True				
ANR	2784552	CFGExitNode	EXIT		2783706		True				
ANR	2784553	Symbol	totalSubs		2783706						
ANR	2784554	Symbol	gotSequential		2783706						
ANR	2784555	Symbol	objIndex		2783706						
ANR	2784556	Symbol	& end		2783706						
ANR	2784557	Symbol	flags		2783706						
ANR	2784558	Symbol	* ch		2783706						
ANR	2784559	Symbol	xpgSize		2783706						
ANR	2784560	Symbol	SCAN_ERROR_INVALID_FORMAT		2783706						
ANR	2784561	Symbol	E_WARNING		2783706						
ANR	2784562	Symbol	* staticAssign		2783706						
ANR	2784563	Symbol	gotXpg		2783706						
ANR	2784564	Symbol	ZEND_STRTOUL		2783706						
ANR	2784565	Symbol	end		2783706						
ANR	2784566	Symbol	value		2783706						
ANR	2784567	Symbol	isdigit		2783706						
ANR	2784568	Symbol	erealloc		2783706						
ANR	2784569	Symbol	nassign		2783706						
ANR	2784570	Symbol	SCAN_SUPPRESS		2783706						
ANR	2784571	Symbol	SCAN_SUCCESS		2783706						
ANR	2784572	Symbol	NULL		2783706						
ANR	2784573	Symbol	staticAssign		2783706						
ANR	2784574	Symbol	ch		2783706						
ANR	2784575	Symbol	& format		2783706						
ANR	2784576	Symbol	nspace		2783706						
ANR	2784577	Symbol	UCHAR		2783706						
ANR	2784578	Symbol	format		2783706						
ANR	2784579	Symbol	* objIndex		2783706						
ANR	2784580	Symbol	i		2783706						
ANR	2784581	Symbol	* totalSubs		2783706						
ANR	2784582	Symbol	numVars		2783706						
ANR	2784583	Symbol	STATIC_LIST_SIZE		2783706						
ANR	2784584	Symbol	* i		2783706						
ANR	2784585	Symbol	* format		2783706						
ANR	2784586	Symbol	SCAN_WIDTH		2783706						
ANR	2784587	Symbol	SCAN_MAX_ARGS		2783706						
ANR	2784588	Symbol	* nassign		2783706						
ANR	2784589	Symbol	* end		2783706						
ANR	2784590	Symbol	safe_emalloc		2783706						
ANR	2784591	Function	php_sscanf_internal	578:0:15588:29353							
ANR	2784592	FunctionDef	"php_sscanf_internal (char * string , char * format , int argCount , zval * args , int varStart , zval * return_value)"		2784591	0					
ANR	2784593	CompoundStatement		581:0:15716:29353	2784591	0					
ANR	2784594	IdentifierDeclStatement	"int numVars , nconversions , totalVars = - 1 ;"	582:1:15719:15761	2784591	0	True				
ANR	2784595	IdentifierDecl	numVars		2784591	0					
ANR	2784596	IdentifierDeclType	int		2784591	0					
ANR	2784597	Identifier	numVars		2784591	1					
ANR	2784598	IdentifierDecl	nconversions		2784591	1					
ANR	2784599	IdentifierDeclType	int		2784591	0					
ANR	2784600	Identifier	nconversions		2784591	1					
ANR	2784601	IdentifierDecl	totalVars = - 1		2784591	2					
ANR	2784602	IdentifierDeclType	int		2784591	0					
ANR	2784603	Identifier	totalVars		2784591	1					
ANR	2784604	AssignmentExpression	totalVars = - 1		2784591	2		=			
ANR	2784605	Identifier	totalVars		2784591	0					
ANR	2784606	UnaryOperationExpression	- 1		2784591	1					
ANR	2784607	UnaryOperator	-		2784591	0					
ANR	2784608	PrimaryExpression	1		2784591	1					
ANR	2784609	IdentifierDeclStatement	"int i , result ;"	583:1:15764:15778	2784591	1	True				
ANR	2784610	IdentifierDecl	i		2784591	0					
ANR	2784611	IdentifierDeclType	int		2784591	0					
ANR	2784612	Identifier	i		2784591	1					
ANR	2784613	IdentifierDecl	result		2784591	1					
ANR	2784614	IdentifierDeclType	int		2784591	0					
ANR	2784615	Identifier	result		2784591	1					
ANR	2784616	IdentifierDeclStatement	zend_long value ;	584:1:15781:15796	2784591	2	True				
ANR	2784617	IdentifierDecl	value		2784591	0					
ANR	2784618	IdentifierDeclType	zend_long		2784591	0					
ANR	2784619	Identifier	value		2784591	1					
ANR	2784620	IdentifierDeclStatement	int objIndex ;	585:1:15799:15812	2784591	3	True				
ANR	2784621	IdentifierDecl	objIndex		2784591	0					
ANR	2784622	IdentifierDeclType	int		2784591	0					
ANR	2784623	Identifier	objIndex		2784591	1					
ANR	2784624	IdentifierDeclStatement	"char * end , * baseString ;"	586:1:15815:15837	2784591	4	True				
ANR	2784625	IdentifierDecl	* end		2784591	0					
ANR	2784626	IdentifierDeclType	char *		2784591	0					
ANR	2784627	Identifier	end		2784591	1					
ANR	2784628	IdentifierDecl	* baseString		2784591	1					
ANR	2784629	IdentifierDeclType	char *		2784591	0					
ANR	2784630	Identifier	baseString		2784591	1					
ANR	2784631	IdentifierDeclStatement	zval * current ;	587:1:15840:15853	2784591	5	True				
ANR	2784632	IdentifierDecl	* current		2784591	0					
ANR	2784633	IdentifierDeclType	zval *		2784591	0					
ANR	2784634	Identifier	current		2784591	1					
ANR	2784635	IdentifierDeclStatement	char op = 0 ;	588:1:15856:15869	2784591	6	True				
ANR	2784636	IdentifierDecl	op = 0		2784591	0					
ANR	2784637	IdentifierDeclType	char		2784591	0					
ANR	2784638	Identifier	op		2784591	1					
ANR	2784639	AssignmentExpression	op = 0		2784591	2		=			
ANR	2784640	Identifier	op		2784591	0					
ANR	2784641	PrimaryExpression	0		2784591	1					
ANR	2784642	IdentifierDeclStatement	int base = 0 ;	589:1:15872:15885	2784591	7	True				
ANR	2784643	IdentifierDecl	base = 0		2784591	0					
ANR	2784644	IdentifierDeclType	int		2784591	0					
ANR	2784645	Identifier	base		2784591	1					
ANR	2784646	AssignmentExpression	base = 0		2784591	2		=			
ANR	2784647	Identifier	base		2784591	0					
ANR	2784648	PrimaryExpression	0		2784591	1					
ANR	2784649	IdentifierDeclStatement	int underflow = 0 ;	590:1:15888:15906	2784591	8	True				
ANR	2784650	IdentifierDecl	underflow = 0		2784591	0					
ANR	2784651	IdentifierDeclType	int		2784591	0					
ANR	2784652	Identifier	underflow		2784591	1					
ANR	2784653	AssignmentExpression	underflow = 0		2784591	2		=			
ANR	2784654	Identifier	underflow		2784591	0					
ANR	2784655	PrimaryExpression	0		2784591	1					
ANR	2784656	IdentifierDeclStatement	size_t width ;	591:1:15909:15921	2784591	9	True				
ANR	2784657	IdentifierDecl	width		2784591	0					
ANR	2784658	IdentifierDeclType	size_t		2784591	0					
ANR	2784659	Identifier	width		2784591	1					
ANR	2784660	IdentifierDeclStatement	zend_long ( * fn ) ( ) = NULL ;	592:1:15924:15948	2784591	10	True				
ANR	2784661	IdentifierDecl	( * fn ) ( ) = NULL		2784591	0					
ANR	2784662	IdentifierDeclType	zend_long ( * ) ( )		2784591	0					
ANR	2784663	Identifier	fn		2784591	1					
ANR	2784664	AssignmentExpression	( * fn ) ( ) = NULL		2784591	2		=			
ANR	2784665	Identifier	NULL		2784591	0					
ANR	2784666	Identifier	NULL		2784591	1					
ANR	2784667	IdentifierDeclStatement	"char * ch , sch ;"	593:1:15951:15964	2784591	11	True				
ANR	2784668	IdentifierDecl	* ch		2784591	0					
ANR	2784669	IdentifierDeclType	char *		2784591	0					
ANR	2784670	Identifier	ch		2784591	1					
ANR	2784671	IdentifierDecl	sch		2784591	1					
ANR	2784672	IdentifierDeclType	char		2784591	0					
ANR	2784673	Identifier	sch		2784591	1					
ANR	2784674	IdentifierDeclStatement	int flags ;	594:1:15967:15977	2784591	12	True				
ANR	2784675	IdentifierDecl	flags		2784591	0					
ANR	2784676	IdentifierDeclType	int		2784591	0					
ANR	2784677	Identifier	flags		2784591	1					
ANR	2784678	IdentifierDeclStatement	char buf [ 64 ] ;	595:1:15980:15992	2784591	13	True				
ANR	2784679	IdentifierDecl	buf [ 64 ]		2784591	0					
ANR	2784680	IdentifierDeclType	char [ 64 ]		2784591	0					
ANR	2784681	Identifier	buf		2784591	1					
ANR	2784682	PrimaryExpression	64		2784591	2					
ANR	2784683	IfStatement	if ( ( varStart > argCount ) || ( varStart < 0 ) )		2784591	14					
ANR	2784684	Condition	( varStart > argCount ) || ( varStart < 0 )	599:5:16129:16167	2784591	0	True				
ANR	2784685	OrExpression	( varStart > argCount ) || ( varStart < 0 )		2784591	0		||			
ANR	2784686	RelationalExpression	varStart > argCount		2784591	0		>			
ANR	2784687	Identifier	varStart		2784591	0					
ANR	2784688	Identifier	argCount		2784591	1					
ANR	2784689	RelationalExpression	varStart < 0		2784591	1		<			
ANR	2784690	Identifier	varStart		2784591	0					
ANR	2784691	PrimaryExpression	0		2784591	1					
ANR	2784692	CompoundStatement		19:45:452:452	2784591	1					
ANR	2784693	ExpressionStatement	varStart = SCAN_MAX_ARGS + 1	600:2:16173:16201	2784591	0	True				
ANR	2784694	AssignmentExpression	varStart = SCAN_MAX_ARGS + 1		2784591	0		=			
ANR	2784695	Identifier	varStart		2784591	0					
ANR	2784696	AdditiveExpression	SCAN_MAX_ARGS + 1		2784591	1		+			
ANR	2784697	Identifier	SCAN_MAX_ARGS		2784591	0					
ANR	2784698	PrimaryExpression	1		2784591	1					
ANR	2784699	ExpressionStatement	numVars = argCount - varStart	602:1:16207:16236	2784591	15	True				
ANR	2784700	AssignmentExpression	numVars = argCount - varStart		2784591	0		=			
ANR	2784701	Identifier	numVars		2784591	0					
ANR	2784702	AdditiveExpression	argCount - varStart		2784591	1		-			
ANR	2784703	Identifier	argCount		2784591	0					
ANR	2784704	Identifier	varStart		2784591	1					
ANR	2784705	IfStatement	if ( numVars < 0 )		2784591	16					
ANR	2784706	Condition	numVars < 0	603:5:16243:16253	2784591	0	True				
ANR	2784707	RelationalExpression	numVars < 0		2784591	0		<			
ANR	2784708	Identifier	numVars		2784591	0					
ANR	2784709	PrimaryExpression	0		2784591	1					
ANR	2784710	CompoundStatement		23:18:539:539	2784591	1					
ANR	2784711	ExpressionStatement	numVars = 0	604:2:16260:16271	2784591	0	True				
ANR	2784712	AssignmentExpression	numVars = 0		2784591	0		=			
ANR	2784713	Identifier	numVars		2784591	0					
ANR	2784714	PrimaryExpression	0		2784591	1					
ANR	2784715	ExpressionStatement	"zend_printf ( ""<br>in sscanf_internal : <br> string is \\""%s\\"", format = \\""%s\\""<br> NumVars = %d. VarStart = %d<br>-------------------------<br>"" , string , format , numVars , varStart )"	608:1:16284:16467	2784591	17	True				
ANR	2784716	CallExpression	"zend_printf ( ""<br>in sscanf_internal : <br> string is \\""%s\\"", format = \\""%s\\""<br> NumVars = %d. VarStart = %d<br>-------------------------<br>"" , string , format , numVars , varStart )"		2784591	0					
ANR	2784717	Callee	zend_printf		2784591	0					
ANR	2784718	Identifier	zend_printf		2784591	0					
ANR	2784719	ArgumentList	"""<br>in sscanf_internal : <br> string is \\""%s\\"", format = \\""%s\\""<br> NumVars = %d. VarStart = %d<br>-------------------------<br>"""		2784591	1					
ANR	2784720	Argument	"""<br>in sscanf_internal : <br> string is \\""%s\\"", format = \\""%s\\""<br> NumVars = %d. VarStart = %d<br>-------------------------<br>"""		2784591	0					
ANR	2784721	PrimaryExpression	"""<br>in sscanf_internal : <br> string is \\""%s\\"", format = \\""%s\\""<br> NumVars = %d. VarStart = %d<br>-------------------------<br>"""		2784591	0					
ANR	2784722	Argument	string		2784591	1					
ANR	2784723	Identifier	string		2784591	0					
ANR	2784724	Argument	format		2784591	2					
ANR	2784725	Identifier	format		2784591	0					
ANR	2784726	Argument	numVars		2784591	3					
ANR	2784727	Identifier	numVars		2784591	0					
ANR	2784728	Argument	varStart		2784591	4					
ANR	2784729	Identifier	varStart		2784591	0					
ANR	2784730	IfStatement	"if ( ValidateFormat ( format , numVars , & totalVars ) != SCAN_SUCCESS )"		2784591	18					
ANR	2784731	Condition	"ValidateFormat ( format , numVars , & totalVars ) != SCAN_SUCCESS"	614:5:16533:16591	2784591	0	True				
ANR	2784732	EqualityExpression	"ValidateFormat ( format , numVars , & totalVars ) != SCAN_SUCCESS"		2784591	0		!=			
ANR	2784733	CallExpression	"ValidateFormat ( format , numVars , & totalVars )"		2784591	0					
ANR	2784734	Callee	ValidateFormat		2784591	0					
ANR	2784735	Identifier	ValidateFormat		2784591	0					
ANR	2784736	ArgumentList	format		2784591	1					
ANR	2784737	Argument	format		2784591	0					
ANR	2784738	Identifier	format		2784591	0					
ANR	2784739	Argument	numVars		2784591	1					
ANR	2784740	Identifier	numVars		2784591	0					
ANR	2784741	Argument	& totalVars		2784591	2					
ANR	2784742	UnaryOperationExpression	& totalVars		2784591	0					
ANR	2784743	UnaryOperator	&		2784591	0					
ANR	2784744	Identifier	totalVars		2784591	1					
ANR	2784745	Identifier	SCAN_SUCCESS		2784591	1					
ANR	2784746	CompoundStatement		34:66:877:877	2784591	1					
ANR	2784747	ExpressionStatement	"scan_set_error_return ( numVars , return_value )"	615:2:16598:16644	2784591	0	True				
ANR	2784748	CallExpression	"scan_set_error_return ( numVars , return_value )"		2784591	0					
ANR	2784749	Callee	scan_set_error_return		2784591	0					
ANR	2784750	Identifier	scan_set_error_return		2784591	0					
ANR	2784751	ArgumentList	numVars		2784591	1					
ANR	2784752	Argument	numVars		2784591	0					
ANR	2784753	Identifier	numVars		2784591	0					
ANR	2784754	Argument	return_value		2784591	1					
ANR	2784755	Identifier	return_value		2784591	0					
ANR	2784756	ReturnStatement	return SCAN_ERROR_INVALID_FORMAT ;	616:2:16648:16680	2784591	1	True				
ANR	2784757	Identifier	SCAN_ERROR_INVALID_FORMAT		2784591	0					
ANR	2784758	ExpressionStatement	objIndex = numVars ? varStart : 0	619:1:16687:16720	2784591	19	True				
ANR	2784759	AssignmentExpression	objIndex = numVars ? varStart : 0		2784591	0		=			
ANR	2784760	Identifier	objIndex		2784591	0					
ANR	2784761	ConditionalExpression	numVars ? varStart : 0		2784591	1					
ANR	2784762	Condition	numVars		2784591	0					
ANR	2784763	Identifier	numVars		2784591	0					
ANR	2784764	Identifier	varStart		2784591	1					
ANR	2784765	PrimaryExpression	0		2784591	2					
ANR	2784766	IfStatement	if ( numVars )		2784591	20					
ANR	2784767	Condition	numVars	624:5:16813:16819	2784591	0	True				
ANR	2784768	Identifier	numVars		2784591	0					
ANR	2784769	CompoundStatement		44:14:1105:1105	2784591	1					
ANR	2784770	ForStatement	for ( i = varStart ; i < argCount ; i ++ )		2784591	0					
ANR	2784771	ForInit	i = varStart ;	625:7:16831:16843	2784591	0	True				
ANR	2784772	AssignmentExpression	i = varStart		2784591	0		=			
ANR	2784773	Identifier	i		2784591	0					
ANR	2784774	Identifier	varStart		2784591	1					
ANR	2784775	Condition	i < argCount	625:20:16844:16855	2784591	1	True				
ANR	2784776	RelationalExpression	i < argCount		2784591	0		<			
ANR	2784777	Identifier	i		2784591	0					
ANR	2784778	Identifier	argCount		2784591	1					
ANR	2784779	PostIncDecOperationExpression	i ++	625:33:16857:16859	2784591	2	True				
ANR	2784780	Identifier	i		2784591	0					
ANR	2784781	IncDec	++		2784591	1					
ANR	2784782	CompoundStatement		45:37:1144:1144	2784591	3					
ANR	2784783	IfStatement	if ( ! Z_ISREF ( args [ i ] ) )		2784591	0					
ANR	2784784	Condition	! Z_ISREF ( args [ i ] )	626:8:16871:16891	2784591	0	True				
ANR	2784785	UnaryOperationExpression	! Z_ISREF ( args [ i ] )		2784591	0					
ANR	2784786	UnaryOperator	!		2784591	0					
ANR	2784787	CallExpression	Z_ISREF ( args [ i ] )		2784591	1					
ANR	2784788	Callee	Z_ISREF		2784591	0					
ANR	2784789	Identifier	Z_ISREF		2784591	0					
ANR	2784790	ArgumentList	args [ i ]		2784591	1					
ANR	2784791	Argument	args [ i ]		2784591	0					
ANR	2784792	ArrayIndexing	args [ i ]		2784591	0					
ANR	2784793	Identifier	args		2784591	0					
ANR	2784794	Identifier	i		2784591	1					
ANR	2784795	CompoundStatement		46:32:1178:1178	2784591	1					
ANR	2784796	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Parameter %d must be passed by reference"" , i )"	627:4:16901:16981	2784591	0	True				
ANR	2784797	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Parameter %d must be passed by reference"" , i )"		2784591	0					
ANR	2784798	Callee	php_error_docref		2784591	0					
ANR	2784799	Identifier	php_error_docref		2784591	0					
ANR	2784800	ArgumentList	NULL		2784591	1					
ANR	2784801	Argument	NULL		2784591	0					
ANR	2784802	Identifier	NULL		2784591	0					
ANR	2784803	Argument	E_WARNING		2784591	1					
ANR	2784804	Identifier	E_WARNING		2784591	0					
ANR	2784805	Argument	"""Parameter %d must be passed by reference"""		2784591	2					
ANR	2784806	PrimaryExpression	"""Parameter %d must be passed by reference"""		2784591	0					
ANR	2784807	Argument	i		2784591	3					
ANR	2784808	Identifier	i		2784591	0					
ANR	2784809	ExpressionStatement	"scan_set_error_return ( numVars , return_value )"	628:4:16987:17031	2784591	1	True				
ANR	2784810	CallExpression	"scan_set_error_return ( numVars , return_value )"		2784591	0					
ANR	2784811	Callee	scan_set_error_return		2784591	0					
ANR	2784812	Identifier	scan_set_error_return		2784591	0					
ANR	2784813	ArgumentList	numVars		2784591	1					
ANR	2784814	Argument	numVars		2784591	0					
ANR	2784815	Identifier	numVars		2784591	0					
ANR	2784816	Argument	return_value		2784591	1					
ANR	2784817	Identifier	return_value		2784591	0					
ANR	2784818	ReturnStatement	return SCAN_ERROR_VAR_PASSED_BYVAL ;	629:4:17037:17071	2784591	2	True				
ANR	2784819	Identifier	SCAN_ERROR_VAR_PASSED_BYVAL		2784591	0					
ANR	2784820	IfStatement	if ( ! numVars )		2784591	21					
ANR	2784821	Condition	! numVars	638:5:17192:17199	2784591	0	True				
ANR	2784822	UnaryOperationExpression	! numVars		2784591	0					
ANR	2784823	UnaryOperator	!		2784591	0					
ANR	2784824	Identifier	numVars		2784591	1					
ANR	2784825	CompoundStatement		59:2:1489:1497	2784591	1					
ANR	2784826	IdentifierDeclStatement	zval tmp ;	639:2:17206:17214	2784591	0	True				
ANR	2784827	IdentifierDecl	tmp		2784591	0					
ANR	2784828	IdentifierDeclType	zval		2784591	0					
ANR	2784829	Identifier	tmp		2784591	1					
ANR	2784830	ExpressionStatement	array_init ( return_value )	642:2:17256:17280	2784591	1	True				
ANR	2784831	CallExpression	array_init ( return_value )		2784591	0					
ANR	2784832	Callee	array_init		2784591	0					
ANR	2784833	Identifier	array_init		2784591	0					
ANR	2784834	ArgumentList	return_value		2784591	1					
ANR	2784835	Argument	return_value		2784591	0					
ANR	2784836	Identifier	return_value		2784591	0					
ANR	2784837	ForStatement	for ( i = 0 ; i < totalVars ; i ++ )		2784591	2					
ANR	2784838	ForInit	i = 0 ;	644:7:17290:17295	2784591	0	True				
ANR	2784839	AssignmentExpression	i = 0		2784591	0		=			
ANR	2784840	Identifier	i		2784591	0					
ANR	2784841	PrimaryExpression	0		2784591	1					
ANR	2784842	Condition	i < totalVars	644:14:17297:17309	2784591	1	True				
ANR	2784843	RelationalExpression	i < totalVars		2784591	0		<			
ANR	2784844	Identifier	i		2784591	0					
ANR	2784845	Identifier	totalVars		2784591	1					
ANR	2784846	PostIncDecOperationExpression	i ++	644:29:17312:17314	2784591	2	True				
ANR	2784847	Identifier	i		2784591	0					
ANR	2784848	IncDec	++		2784591	1					
ANR	2784849	CompoundStatement		64:34:1600:1600	2784591	3					
ANR	2784850	ExpressionStatement	ZVAL_NULL ( & tmp )	645:3:17322:17337	2784591	0	True				
ANR	2784851	CallExpression	ZVAL_NULL ( & tmp )		2784591	0					
ANR	2784852	Callee	ZVAL_NULL		2784591	0					
ANR	2784853	Identifier	ZVAL_NULL		2784591	0					
ANR	2784854	ArgumentList	& tmp		2784591	1					
ANR	2784855	Argument	& tmp		2784591	0					
ANR	2784856	UnaryOperationExpression	& tmp		2784591	0					
ANR	2784857	UnaryOperator	&		2784591	0					
ANR	2784858	Identifier	tmp		2784591	1					
ANR	2784859	IfStatement	"if ( add_next_index_zval ( return_value , & tmp ) == FAILURE )"		2784591	1					
ANR	2784860	Condition	"add_next_index_zval ( return_value , & tmp ) == FAILURE"	646:7:17346:17395	2784591	0	True				
ANR	2784861	EqualityExpression	"add_next_index_zval ( return_value , & tmp ) == FAILURE"		2784591	0		==			
ANR	2784862	CallExpression	"add_next_index_zval ( return_value , & tmp )"		2784591	0					
ANR	2784863	Callee	add_next_index_zval		2784591	0					
ANR	2784864	Identifier	add_next_index_zval		2784591	0					
ANR	2784865	ArgumentList	return_value		2784591	1					
ANR	2784866	Argument	return_value		2784591	0					
ANR	2784867	Identifier	return_value		2784591	0					
ANR	2784868	Argument	& tmp		2784591	1					
ANR	2784869	UnaryOperationExpression	& tmp		2784591	0					
ANR	2784870	UnaryOperator	&		2784591	0					
ANR	2784871	Identifier	tmp		2784591	1					
ANR	2784872	Identifier	FAILURE		2784591	1					
ANR	2784873	CompoundStatement		66:59:1681:1681	2784591	1					
ANR	2784874	ExpressionStatement	"scan_set_error_return ( 0 , return_value )"	647:4:17404:17442	2784591	0	True				
ANR	2784875	CallExpression	"scan_set_error_return ( 0 , return_value )"		2784591	0					
ANR	2784876	Callee	scan_set_error_return		2784591	0					
ANR	2784877	Identifier	scan_set_error_return		2784591	0					
ANR	2784878	ArgumentList	0		2784591	1					
ANR	2784879	Argument	0		2784591	0					
ANR	2784880	PrimaryExpression	0		2784591	0					
ANR	2784881	Argument	return_value		2784591	1					
ANR	2784882	Identifier	return_value		2784591	0					
ANR	2784883	ReturnStatement	return FAILURE ;	648:4:17448:17462	2784591	1	True				
ANR	2784884	Identifier	FAILURE		2784591	0					
ANR	2784885	ExpressionStatement	varStart = 0	651:2:17475:17487	2784591	3	True				
ANR	2784886	AssignmentExpression	varStart = 0		2784591	0		=			
ANR	2784887	Identifier	varStart		2784591	0					
ANR	2784888	PrimaryExpression	0		2784591	1					
ANR	2784889	ExpressionStatement	baseString = string	654:1:17526:17545	2784591	22	True				
ANR	2784890	AssignmentExpression	baseString = string		2784591	0		=			
ANR	2784891	Identifier	baseString		2784591	0					
ANR	2784892	Identifier	string		2784591	1					
ANR	2784893	ExpressionStatement	nconversions = 0	661:1:17718:17734	2784591	23	True				
ANR	2784894	AssignmentExpression	nconversions = 0		2784591	0		=			
ANR	2784895	Identifier	nconversions		2784591	0					
ANR	2784896	PrimaryExpression	0		2784591	1					
ANR	2784897	WhileStatement	while ( * format != '\\0' )		2784591	24					
ANR	2784898	Condition	* format != '\\0'	664:8:17821:17835	2784591	0	True				
ANR	2784899	EqualityExpression	* format != '\\0'		2784591	0		!=			
ANR	2784900	UnaryOperationExpression	* format		2784591	0					
ANR	2784901	UnaryOperator	*		2784591	0					
ANR	2784902	Identifier	format		2784591	1					
ANR	2784903	PrimaryExpression	'\\0'		2784591	1					
ANR	2784904	CompoundStatement		84:25:2121:2121	2784591	1					
ANR	2784905	ExpressionStatement	ch = format ++	665:2:17842:17858	2784591	0	True				
ANR	2784906	AssignmentExpression	ch = format ++		2784591	0		=			
ANR	2784907	Identifier	ch		2784591	0					
ANR	2784908	PostIncDecOperationExpression	format ++		2784591	1					
ANR	2784909	Identifier	format		2784591	0					
ANR	2784910	IncDec	++		2784591	1					
ANR	2784911	ExpressionStatement	flags = 0	666:2:17862:17871	2784591	1	True				
ANR	2784912	AssignmentExpression	flags = 0		2784591	0		=			
ANR	2784913	Identifier	flags		2784591	0					
ANR	2784914	PrimaryExpression	0		2784591	1					
ANR	2784915	IfStatement	if ( isspace ( ( int ) * ch ) )		2784591	2					
ANR	2784916	Condition	isspace ( ( int ) * ch )	671:7:17964:17982	2784591	0	True				
ANR	2784917	CallExpression	isspace ( ( int ) * ch )		2784591	0					
ANR	2784918	Callee	isspace		2784591	0					
ANR	2784919	Identifier	isspace		2784591	0					
ANR	2784920	ArgumentList	( int ) * ch		2784591	1					
ANR	2784921	Argument	( int ) * ch		2784591	0					
ANR	2784922	CastExpression	( int ) * ch		2784591	0					
ANR	2784923	CastTarget	int		2784591	0					
ANR	2784924	UnaryOperationExpression	* ch		2784591	1					
ANR	2784925	UnaryOperator	*		2784591	0					
ANR	2784926	Identifier	ch		2784591	1					
ANR	2784927	CompoundStatement		91:29:2269:2269	2784591	1					
ANR	2784928	ExpressionStatement	sch = * string	672:3:17991:18004	2784591	0	True				
ANR	2784929	AssignmentExpression	sch = * string		2784591	0		=			
ANR	2784930	Identifier	sch		2784591	0					
ANR	2784931	UnaryOperationExpression	* string		2784591	1					
ANR	2784932	UnaryOperator	*		2784591	0					
ANR	2784933	Identifier	string		2784591	1					
ANR	2784934	WhileStatement	while ( isspace ( ( int ) sch ) )		2784591	1					
ANR	2784935	Condition	isspace ( ( int ) sch )	673:11:18017:18035	2784591	0	True				
ANR	2784936	CallExpression	isspace ( ( int ) sch )		2784591	0					
ANR	2784937	Callee	isspace		2784591	0					
ANR	2784938	Identifier	isspace		2784591	0					
ANR	2784939	ArgumentList	( int ) sch		2784591	1					
ANR	2784940	Argument	( int ) sch		2784591	0					
ANR	2784941	CastExpression	( int ) sch		2784591	0					
ANR	2784942	CastTarget	int		2784591	0					
ANR	2784943	Identifier	sch		2784591	1					
ANR	2784944	CompoundStatement		93:33:2322:2322	2784591	1					
ANR	2784945	IfStatement	if ( * string == '\\0' )		2784591	0					
ANR	2784946	Condition	* string == '\\0'	674:8:18049:18063	2784591	0	True				
ANR	2784947	EqualityExpression	* string == '\\0'		2784591	0		==			
ANR	2784948	UnaryOperationExpression	* string		2784591	0					
ANR	2784949	UnaryOperator	*		2784591	0					
ANR	2784950	Identifier	string		2784591	1					
ANR	2784951	PrimaryExpression	'\\0'		2784591	1					
ANR	2784952	CompoundStatement		94:25:2349:2349	2784591	1					
ANR	2784953	GotoStatement	goto done ;	675:5:18073:18082	2784591	0	True				
ANR	2784954	Identifier	done		2784591	0					
ANR	2784955	ExpressionStatement	string ++	677:4:18094:18102	2784591	1	True				
ANR	2784956	PostIncDecOperationExpression	string ++		2784591	0					
ANR	2784957	Identifier	string		2784591	0					
ANR	2784958	IncDec	++		2784591	1					
ANR	2784959	ExpressionStatement	sch = * string	678:4:18108:18121	2784591	2	True				
ANR	2784960	AssignmentExpression	sch = * string		2784591	0		=			
ANR	2784961	Identifier	sch		2784591	0					
ANR	2784962	UnaryOperationExpression	* string		2784591	1					
ANR	2784963	UnaryOperator	*		2784591	0					
ANR	2784964	Identifier	string		2784591	1					
ANR	2784965	ContinueStatement	continue ;	680:3:18131:18139	2784591	2	True				
ANR	2784966	IfStatement	if ( * ch != '%' )		2784591	3					
ANR	2784967	Condition	* ch != '%'	683:6:18152:18161	2784591	0	True				
ANR	2784968	EqualityExpression	* ch != '%'		2784591	0		!=			
ANR	2784969	UnaryOperationExpression	* ch		2784591	0					
ANR	2784970	UnaryOperator	*		2784591	0					
ANR	2784971	Identifier	ch		2784591	1					
ANR	2784972	PrimaryExpression	'%'		2784591	1					
ANR	2784973	CompoundStatement		103:18:2447:2447	2784591	1					
ANR	2784974	Label	literal :	684:0:18166:18173	2784591	0	True				
ANR	2784975	Identifier	literal		2784591	0					
ANR	2784976	IfStatement	if ( * string == '\\0' )		2784591	1					
ANR	2784977	Condition	* string == '\\0'	685:7:18182:18196	2784591	0	True				
ANR	2784978	EqualityExpression	* string == '\\0'		2784591	0		==			
ANR	2784979	UnaryOperationExpression	* string		2784591	0					
ANR	2784980	UnaryOperator	*		2784591	0					
ANR	2784981	Identifier	string		2784591	1					
ANR	2784982	PrimaryExpression	'\\0'		2784591	1					
ANR	2784983	CompoundStatement		105:24:2482:2482	2784591	1					
ANR	2784984	ExpressionStatement	underflow = 1	686:4:18205:18218	2784591	0	True				
ANR	2784985	AssignmentExpression	underflow = 1		2784591	0		=			
ANR	2784986	Identifier	underflow		2784591	0					
ANR	2784987	PrimaryExpression	1		2784591	1					
ANR	2784988	GotoStatement	goto done ;	687:4:18224:18233	2784591	1	True				
ANR	2784989	Identifier	done		2784591	0					
ANR	2784990	ExpressionStatement	sch = * string	689:3:18243:18256	2784591	2	True				
ANR	2784991	AssignmentExpression	sch = * string		2784591	0		=			
ANR	2784992	Identifier	sch		2784591	0					
ANR	2784993	UnaryOperationExpression	* string		2784591	1					
ANR	2784994	UnaryOperator	*		2784591	0					
ANR	2784995	Identifier	string		2784591	1					
ANR	2784996	ExpressionStatement	string ++	690:3:18261:18269	2784591	3	True				
ANR	2784997	PostIncDecOperationExpression	string ++		2784591	0					
ANR	2784998	Identifier	string		2784591	0					
ANR	2784999	IncDec	++		2784591	1					
ANR	2785000	IfStatement	if ( * ch != sch )		2784591	4					
ANR	2785001	Condition	* ch != sch	691:7:18278:18287	2784591	0	True				
ANR	2785002	EqualityExpression	* ch != sch		2784591	0		!=			
ANR	2785003	UnaryOperationExpression	* ch		2784591	0					
ANR	2785004	UnaryOperator	*		2784591	0					
ANR	2785005	Identifier	ch		2784591	1					
ANR	2785006	Identifier	sch		2784591	1					
ANR	2785007	CompoundStatement		111:19:2573:2573	2784591	1					
ANR	2785008	GotoStatement	goto done ;	692:4:18296:18305	2784591	0	True				
ANR	2785009	Identifier	done		2784591	0					
ANR	2785010	ContinueStatement	continue ;	694:3:18315:18323	2784591	5	True				
ANR	2785011	ExpressionStatement	ch = format ++	697:2:18332:18345	2784591	4	True				
ANR	2785012	AssignmentExpression	ch = format ++		2784591	0		=			
ANR	2785013	Identifier	ch		2784591	0					
ANR	2785014	PostIncDecOperationExpression	format ++		2784591	1					
ANR	2785015	Identifier	format		2784591	0					
ANR	2785016	IncDec	++		2784591	1					
ANR	2785017	IfStatement	if ( * ch == '%' )		2784591	5					
ANR	2785018	Condition	* ch == '%'	698:6:18353:18362	2784591	0	True				
ANR	2785019	EqualityExpression	* ch == '%'		2784591	0		==			
ANR	2785020	UnaryOperationExpression	* ch		2784591	0					
ANR	2785021	UnaryOperator	*		2784591	0					
ANR	2785022	Identifier	ch		2784591	1					
ANR	2785023	PrimaryExpression	'%'		2784591	1					
ANR	2785024	CompoundStatement		118:18:2648:2648	2784591	1					
ANR	2785025	GotoStatement	goto literal ;	699:3:18370:18382	2784591	0	True				
ANR	2785026	Identifier	literal		2784591	0					
ANR	2785027	IfStatement	if ( * ch == '*' )		2784591	6					
ANR	2785028	Condition	* ch == '*'	706:6:18492:18501	2784591	0	True				
ANR	2785029	EqualityExpression	* ch == '*'		2784591	0		==			
ANR	2785030	UnaryOperationExpression	* ch		2784591	0					
ANR	2785031	UnaryOperator	*		2784591	0					
ANR	2785032	Identifier	ch		2784591	1					
ANR	2785033	PrimaryExpression	'*'		2784591	1					
ANR	2785034	CompoundStatement		126:18:2787:2787	2784591	1					
ANR	2785035	ExpressionStatement	flags |= SCAN_SUPPRESS	707:3:18509:18531	2784591	0	True				
ANR	2785036	AssignmentExpression	flags |= SCAN_SUPPRESS		2784591	0		|=			
ANR	2785037	Identifier	flags		2784591	0					
ANR	2785038	Identifier	SCAN_SUPPRESS		2784591	1					
ANR	2785039	ExpressionStatement	ch = format ++	708:3:18536:18549	2784591	1	True				
ANR	2785040	AssignmentExpression	ch = format ++		2784591	0		=			
ANR	2785041	Identifier	ch		2784591	0					
ANR	2785042	PostIncDecOperationExpression	format ++		2784591	1					
ANR	2785043	Identifier	format		2784591	0					
ANR	2785044	IncDec	++		2784591	1					
ANR	2785045	ElseStatement	else		2784591	0					
ANR	2785046	IfStatement	if ( isdigit ( UCHAR ( * ch ) ) )		2784591	0					
ANR	2785047	Condition	isdigit ( UCHAR ( * ch ) )	709:14:18565:18583	2784591	0	True				
ANR	2785048	CallExpression	isdigit ( UCHAR ( * ch ) )		2784591	0					
ANR	2785049	Callee	isdigit		2784591	0					
ANR	2785050	Identifier	isdigit		2784591	0					
ANR	2785051	ArgumentList	UCHAR ( * ch )		2784591	1					
ANR	2785052	Argument	UCHAR ( * ch )		2784591	0					
ANR	2785053	CallExpression	UCHAR ( * ch )		2784591	0					
ANR	2785054	Callee	UCHAR		2784591	0					
ANR	2785055	Identifier	UCHAR		2784591	0					
ANR	2785056	ArgumentList	* ch		2784591	1					
ANR	2785057	Argument	* ch		2784591	0					
ANR	2785058	UnaryOperationExpression	* ch		2784591	0					
ANR	2785059	UnaryOperator	*		2784591	0					
ANR	2785060	Identifier	ch		2784591	1					
ANR	2785061	CompoundStatement		129:35:2869:2869	2784591	1					
ANR	2785062	ExpressionStatement	"value = ZEND_STRTOUL ( format - 1 , & end , 10 )"	710:3:18591:18631	2784591	0	True				
ANR	2785063	AssignmentExpression	"value = ZEND_STRTOUL ( format - 1 , & end , 10 )"		2784591	0		=			
ANR	2785064	Identifier	value		2784591	0					
ANR	2785065	CallExpression	"ZEND_STRTOUL ( format - 1 , & end , 10 )"		2784591	1					
ANR	2785066	Callee	ZEND_STRTOUL		2784591	0					
ANR	2785067	Identifier	ZEND_STRTOUL		2784591	0					
ANR	2785068	ArgumentList	format - 1		2784591	1					
ANR	2785069	Argument	format - 1		2784591	0					
ANR	2785070	AdditiveExpression	format - 1		2784591	0		-			
ANR	2785071	Identifier	format		2784591	0					
ANR	2785072	PrimaryExpression	1		2784591	1					
ANR	2785073	Argument	& end		2784591	1					
ANR	2785074	UnaryOperationExpression	& end		2784591	0					
ANR	2785075	UnaryOperator	&		2784591	0					
ANR	2785076	Identifier	end		2784591	1					
ANR	2785077	Argument	10		2784591	2					
ANR	2785078	PrimaryExpression	10		2784591	0					
ANR	2785079	IfStatement	if ( * end == '$' )		2784591	1					
ANR	2785080	Condition	* end == '$'	711:7:18640:18650	2784591	0	True				
ANR	2785081	EqualityExpression	* end == '$'		2784591	0		==			
ANR	2785082	UnaryOperationExpression	* end		2784591	0					
ANR	2785083	UnaryOperator	*		2784591	0					
ANR	2785084	Identifier	end		2784591	1					
ANR	2785085	PrimaryExpression	'$'		2784591	1					
ANR	2785086	CompoundStatement		131:20:2936:2936	2784591	1					
ANR	2785087	ExpressionStatement	format = end + 1	712:4:18659:18673	2784591	0	True				
ANR	2785088	AssignmentExpression	format = end + 1		2784591	0		=			
ANR	2785089	Identifier	format		2784591	0					
ANR	2785090	AdditiveExpression	end + 1		2784591	1		+			
ANR	2785091	Identifier	end		2784591	0					
ANR	2785092	PrimaryExpression	1		2784591	1					
ANR	2785093	ExpressionStatement	ch = format ++	713:4:18679:18692	2784591	1	True				
ANR	2785094	AssignmentExpression	ch = format ++		2784591	0		=			
ANR	2785095	Identifier	ch		2784591	0					
ANR	2785096	PostIncDecOperationExpression	format ++		2784591	1					
ANR	2785097	Identifier	format		2784591	0					
ANR	2785098	IncDec	++		2784591	1					
ANR	2785099	ExpressionStatement	objIndex = varStart + value - 1	714:4:18698:18729	2784591	2	True				
ANR	2785100	AssignmentExpression	objIndex = varStart + value - 1		2784591	0		=			
ANR	2785101	Identifier	objIndex		2784591	0					
ANR	2785102	AdditiveExpression	varStart + value - 1		2784591	1		+			
ANR	2785103	Identifier	varStart		2784591	0					
ANR	2785104	AdditiveExpression	value - 1		2784591	1		-			
ANR	2785105	Identifier	value		2784591	0					
ANR	2785106	PrimaryExpression	1		2784591	1					
ANR	2785107	IfStatement	if ( isdigit ( UCHAR ( * ch ) ) )		2784591	7					
ANR	2785108	Condition	isdigit ( UCHAR ( * ch ) )	721:7:18791:18809	2784591	0	True				
ANR	2785109	CallExpression	isdigit ( UCHAR ( * ch ) )		2784591	0					
ANR	2785110	Callee	isdigit		2784591	0					
ANR	2785111	Identifier	isdigit		2784591	0					
ANR	2785112	ArgumentList	UCHAR ( * ch )		2784591	1					
ANR	2785113	Argument	UCHAR ( * ch )		2784591	0					
ANR	2785114	CallExpression	UCHAR ( * ch )		2784591	0					
ANR	2785115	Callee	UCHAR		2784591	0					
ANR	2785116	Identifier	UCHAR		2784591	0					
ANR	2785117	ArgumentList	* ch		2784591	1					
ANR	2785118	Argument	* ch		2784591	0					
ANR	2785119	UnaryOperationExpression	* ch		2784591	0					
ANR	2785120	UnaryOperator	*		2784591	0					
ANR	2785121	Identifier	ch		2784591	1					
ANR	2785122	CompoundStatement		141:28:3095:3095	2784591	1					
ANR	2785123	ExpressionStatement	"width = ZEND_STRTOUL ( format - 1 , & format , 10 )"	722:3:18817:18860	2784591	0	True				
ANR	2785124	AssignmentExpression	"width = ZEND_STRTOUL ( format - 1 , & format , 10 )"		2784591	0		=			
ANR	2785125	Identifier	width		2784591	0					
ANR	2785126	CallExpression	"ZEND_STRTOUL ( format - 1 , & format , 10 )"		2784591	1					
ANR	2785127	Callee	ZEND_STRTOUL		2784591	0					
ANR	2785128	Identifier	ZEND_STRTOUL		2784591	0					
ANR	2785129	ArgumentList	format - 1		2784591	1					
ANR	2785130	Argument	format - 1		2784591	0					
ANR	2785131	AdditiveExpression	format - 1		2784591	0		-			
ANR	2785132	Identifier	format		2784591	0					
ANR	2785133	PrimaryExpression	1		2784591	1					
ANR	2785134	Argument	& format		2784591	1					
ANR	2785135	UnaryOperationExpression	& format		2784591	0					
ANR	2785136	UnaryOperator	&		2784591	0					
ANR	2785137	Identifier	format		2784591	1					
ANR	2785138	Argument	10		2784591	2					
ANR	2785139	PrimaryExpression	10		2784591	0					
ANR	2785140	ExpressionStatement	ch = format ++	723:3:18865:18878	2784591	1	True				
ANR	2785141	AssignmentExpression	ch = format ++		2784591	0		=			
ANR	2785142	Identifier	ch		2784591	0					
ANR	2785143	PostIncDecOperationExpression	format ++		2784591	1					
ANR	2785144	Identifier	format		2784591	0					
ANR	2785145	IncDec	++		2784591	1					
ANR	2785146	ElseStatement	else		2784591	0					
ANR	2785147	CompoundStatement		144:9:3172:3172	2784591	0					
ANR	2785148	ExpressionStatement	width = 0	725:3:18894:18903	2784591	0	True				
ANR	2785149	AssignmentExpression	width = 0		2784591	0		=			
ANR	2785150	Identifier	width		2784591	0					
ANR	2785151	PrimaryExpression	0		2784591	1					
ANR	2785152	IfStatement	if ( ( * ch == 'l' ) || ( * ch == 'L' ) || ( * ch == 'h' ) )		2784591	8					
ANR	2785153	Condition	( * ch == 'l' ) || ( * ch == 'L' ) || ( * ch == 'h' )	731:6:18955:18998	2784591	0	True				
ANR	2785154	OrExpression	( * ch == 'l' ) || ( * ch == 'L' ) || ( * ch == 'h' )		2784591	0		||			
ANR	2785155	EqualityExpression	* ch == 'l'		2784591	0		==			
ANR	2785156	UnaryOperationExpression	* ch		2784591	0					
ANR	2785157	UnaryOperator	*		2784591	0					
ANR	2785158	Identifier	ch		2784591	1					
ANR	2785159	PrimaryExpression	'l'		2784591	1					
ANR	2785160	OrExpression	( * ch == 'L' ) || ( * ch == 'h' )		2784591	1		||			
ANR	2785161	EqualityExpression	* ch == 'L'		2784591	0		==			
ANR	2785162	UnaryOperationExpression	* ch		2784591	0					
ANR	2785163	UnaryOperator	*		2784591	0					
ANR	2785164	Identifier	ch		2784591	1					
ANR	2785165	PrimaryExpression	'L'		2784591	1					
ANR	2785166	EqualityExpression	* ch == 'h'		2784591	1		==			
ANR	2785167	UnaryOperationExpression	* ch		2784591	0					
ANR	2785168	UnaryOperator	*		2784591	0					
ANR	2785169	Identifier	ch		2784591	1					
ANR	2785170	PrimaryExpression	'h'		2784591	1					
ANR	2785171	CompoundStatement		151:52:3284:3284	2784591	1					
ANR	2785172	ExpressionStatement	ch = format ++	732:3:19006:19019	2784591	0	True				
ANR	2785173	AssignmentExpression	ch = format ++		2784591	0		=			
ANR	2785174	Identifier	ch		2784591	0					
ANR	2785175	PostIncDecOperationExpression	format ++		2784591	1					
ANR	2785176	Identifier	format		2784591	0					
ANR	2785177	IncDec	++		2784591	1					
ANR	2785178	SwitchStatement	switch ( * ch )		2784591	9					
ANR	2785179	Condition	* ch	738:10:19084:19086	2784591	0	True				
ANR	2785180	UnaryOperationExpression	* ch		2784591	0					
ANR	2785181	UnaryOperator	*		2784591	0					
ANR	2785182	Identifier	ch		2784591	1					
ANR	2785183	CompoundStatement		158:15:3372:3372	2784591	1					
ANR	2785184	Label	case 'n' :	739:3:19094:19102	2784591	0	True				
ANR	2785185	IfStatement	if ( ! ( flags & SCAN_SUPPRESS ) )		2784591	1					
ANR	2785186	Condition	! ( flags & SCAN_SUPPRESS )	740:8:19112:19135	2784591	0	True				
ANR	2785187	UnaryOperationExpression	! ( flags & SCAN_SUPPRESS )		2784591	0					
ANR	2785188	UnaryOperator	!		2784591	0					
ANR	2785189	BitAndExpression	flags & SCAN_SUPPRESS		2784591	1		&			
ANR	2785190	Identifier	flags		2784591	0					
ANR	2785191	Identifier	SCAN_SUPPRESS		2784591	1					
ANR	2785192	CompoundStatement		160:34:3421:3421	2784591	1					
ANR	2785193	IfStatement	if ( numVars && objIndex >= argCount )		2784591	0					
ANR	2785194	Condition	numVars && objIndex >= argCount	741:9:19149:19179	2784591	0	True				
ANR	2785195	AndExpression	numVars && objIndex >= argCount		2784591	0		&&			
ANR	2785196	Identifier	numVars		2784591	0					
ANR	2785197	RelationalExpression	objIndex >= argCount		2784591	1		>=			
ANR	2785198	Identifier	objIndex		2784591	0					
ANR	2785199	Identifier	argCount		2784591	1					
ANR	2785200	CompoundStatement		161:42:3465:3465	2784591	1					
ANR	2785201	BreakStatement	break ;	742:6:19190:19195	2784591	0	True				
ANR	2785202	ElseStatement	else		2784591	0					
ANR	2785203	IfStatement	if ( numVars )		2784591	0					
ANR	2785204	Condition	numVars	743:16:19213:19219	2784591	0	True				
ANR	2785205	Identifier	numVars		2784591	0					
ANR	2785206	CompoundStatement		163:25:3505:3505	2784591	1					
ANR	2785207	ExpressionStatement	current = Z_REFVAL ( args [ objIndex ++ ] )	744:6:19230:19266	2784591	0	True				
ANR	2785208	AssignmentExpression	current = Z_REFVAL ( args [ objIndex ++ ] )		2784591	0		=			
ANR	2785209	Identifier	current		2784591	0					
ANR	2785210	CallExpression	Z_REFVAL ( args [ objIndex ++ ] )		2784591	1					
ANR	2785211	Callee	Z_REFVAL		2784591	0					
ANR	2785212	Identifier	Z_REFVAL		2784591	0					
ANR	2785213	ArgumentList	args [ objIndex ++ ]		2784591	1					
ANR	2785214	Argument	args [ objIndex ++ ]		2784591	0					
ANR	2785215	ArrayIndexing	args [ objIndex ++ ]		2784591	0					
ANR	2785216	Identifier	args		2784591	0					
ANR	2785217	PostIncDecOperationExpression	objIndex ++		2784591	1					
ANR	2785218	Identifier	objIndex		2784591	0					
ANR	2785219	IncDec	++		2784591	1					
ANR	2785220	ExpressionStatement	zval_ptr_dtor ( current )	745:6:19274:19296	2784591	1	True				
ANR	2785221	CallExpression	zval_ptr_dtor ( current )		2784591	0					
ANR	2785222	Callee	zval_ptr_dtor		2784591	0					
ANR	2785223	Identifier	zval_ptr_dtor		2784591	0					
ANR	2785224	ArgumentList	current		2784591	1					
ANR	2785225	Argument	current		2784591	0					
ANR	2785226	Identifier	current		2784591	0					
ANR	2785227	ExpressionStatement	"ZVAL_LONG ( current , ( zend_long ) ( string - baseString ) )"	746:6:19304:19357	2784591	2	True				
ANR	2785228	CallExpression	"ZVAL_LONG ( current , ( zend_long ) ( string - baseString ) )"		2784591	0					
ANR	2785229	Callee	ZVAL_LONG		2784591	0					
ANR	2785230	Identifier	ZVAL_LONG		2784591	0					
ANR	2785231	ArgumentList	current		2784591	1					
ANR	2785232	Argument	current		2784591	0					
ANR	2785233	Identifier	current		2784591	0					
ANR	2785234	Argument	( zend_long ) ( string - baseString )		2784591	1					
ANR	2785235	CastExpression	( zend_long ) ( string - baseString )		2784591	0					
ANR	2785236	CastTarget	zend_long		2784591	0					
ANR	2785237	AdditiveExpression	string - baseString		2784591	1		-			
ANR	2785238	Identifier	string		2784591	0					
ANR	2785239	Identifier	baseString		2784591	1					
ANR	2785240	ElseStatement	else		2784591	0					
ANR	2785241	CompoundStatement		167:12:3654:3654	2784591	0					
ANR	2785242	ExpressionStatement	"add_index_long ( return_value , objIndex ++ , string - baseString )"	748:6:19379:19440	2784591	0	True				
ANR	2785243	CallExpression	"add_index_long ( return_value , objIndex ++ , string - baseString )"		2784591	0					
ANR	2785244	Callee	add_index_long		2784591	0					
ANR	2785245	Identifier	add_index_long		2784591	0					
ANR	2785246	ArgumentList	return_value		2784591	1					
ANR	2785247	Argument	return_value		2784591	0					
ANR	2785248	Identifier	return_value		2784591	0					
ANR	2785249	Argument	objIndex ++		2784591	1					
ANR	2785250	PostIncDecOperationExpression	objIndex ++		2784591	0					
ANR	2785251	Identifier	objIndex		2784591	0					
ANR	2785252	IncDec	++		2784591	1					
ANR	2785253	Argument	string - baseString		2784591	2					
ANR	2785254	AdditiveExpression	string - baseString		2784591	0		-			
ANR	2785255	Identifier	string		2784591	0					
ANR	2785256	Identifier	baseString		2784591	1					
ANR	2785257	ExpressionStatement	nconversions ++	751:4:19459:19473	2784591	2	True				
ANR	2785258	PostIncDecOperationExpression	nconversions ++		2784591	0					
ANR	2785259	Identifier	nconversions		2784591	0					
ANR	2785260	IncDec	++		2784591	1					
ANR	2785261	ContinueStatement	continue ;	752:4:19479:19487	2784591	3	True				
ANR	2785262	Label	case 'd' :	754:3:19493:19501	2784591	4	True				
ANR	2785263	Label	case 'D' :	755:3:19506:19514	2784591	5	True				
ANR	2785264	ExpressionStatement	op = 'i'	756:4:19520:19528	2784591	6	True				
ANR	2785265	AssignmentExpression	op = 'i'		2784591	0		=			
ANR	2785266	Identifier	op		2784591	0					
ANR	2785267	PrimaryExpression	'i'		2784591	1					
ANR	2785268	ExpressionStatement	base = 10	757:4:19534:19543	2784591	7	True				
ANR	2785269	AssignmentExpression	base = 10		2784591	0		=			
ANR	2785270	Identifier	base		2784591	0					
ANR	2785271	PrimaryExpression	10		2784591	1					
ANR	2785272	Statement	fn	758:4:19549:19550	2784591	8	True				
ANR	2785273	Statement	=	758:7:19552:19552	2784591	9	True				
ANR	2785274	Statement	(	758:9:19554:19554	2784591	10	True				
ANR	2785275	Statement	zend_long	758:10:19555:19563	2784591	11	True				
ANR	2785276	Statement	(	758:20:19565:19565	2784591	12	True				
ANR	2785277	Statement	*	758:21:19566:19566	2784591	13	True				
ANR	2785278	Statement	)	758:22:19567:19567	2784591	14	True				
ANR	2785279	Statement	(	758:23:19568:19568	2784591	15	True				
ANR	2785280	Statement	)	758:24:19569:19569	2784591	16	True				
ANR	2785281	Statement	)	758:25:19570:19570	2784591	17	True				
ANR	2785282	ExpressionStatement	ZEND_STRTOL_PTR	758:26:19571:19586	2784591	18	True				
ANR	2785283	Identifier	ZEND_STRTOL_PTR		2784591	0					
ANR	2785284	BreakStatement	break ;	759:4:19592:19597	2784591	19	True				
ANR	2785285	Label	case 'i' :	760:3:19602:19610	2784591	20	True				
ANR	2785286	ExpressionStatement	op = 'i'	761:4:19616:19624	2784591	21	True				
ANR	2785287	AssignmentExpression	op = 'i'		2784591	0		=			
ANR	2785288	Identifier	op		2784591	0					
ANR	2785289	PrimaryExpression	'i'		2784591	1					
ANR	2785290	ExpressionStatement	base = 0	762:4:19630:19638	2784591	22	True				
ANR	2785291	AssignmentExpression	base = 0		2784591	0		=			
ANR	2785292	Identifier	base		2784591	0					
ANR	2785293	PrimaryExpression	0		2784591	1					
ANR	2785294	Statement	fn	763:4:19644:19645	2784591	23	True				
ANR	2785295	Statement	=	763:7:19647:19647	2784591	24	True				
ANR	2785296	Statement	(	763:9:19649:19649	2784591	25	True				
ANR	2785297	Statement	zend_long	763:10:19650:19658	2784591	26	True				
ANR	2785298	Statement	(	763:20:19660:19660	2784591	27	True				
ANR	2785299	Statement	*	763:21:19661:19661	2784591	28	True				
ANR	2785300	Statement	)	763:22:19662:19662	2784591	29	True				
ANR	2785301	Statement	(	763:23:19663:19663	2784591	30	True				
ANR	2785302	Statement	)	763:24:19664:19664	2784591	31	True				
ANR	2785303	Statement	)	763:25:19665:19665	2784591	32	True				
ANR	2785304	ExpressionStatement	ZEND_STRTOL_PTR	763:26:19666:19681	2784591	33	True				
ANR	2785305	Identifier	ZEND_STRTOL_PTR		2784591	0					
ANR	2785306	BreakStatement	break ;	764:4:19687:19692	2784591	34	True				
ANR	2785307	Label	case 'o' :	765:3:19697:19705	2784591	35	True				
ANR	2785308	ExpressionStatement	op = 'i'	766:4:19711:19719	2784591	36	True				
ANR	2785309	AssignmentExpression	op = 'i'		2784591	0		=			
ANR	2785310	Identifier	op		2784591	0					
ANR	2785311	PrimaryExpression	'i'		2784591	1					
ANR	2785312	ExpressionStatement	base = 8	767:4:19725:19733	2784591	37	True				
ANR	2785313	AssignmentExpression	base = 8		2784591	0		=			
ANR	2785314	Identifier	base		2784591	0					
ANR	2785315	PrimaryExpression	8		2784591	1					
ANR	2785316	Statement	fn	768:4:19739:19740	2784591	38	True				
ANR	2785317	Statement	=	768:7:19742:19742	2784591	39	True				
ANR	2785318	Statement	(	768:9:19744:19744	2784591	40	True				
ANR	2785319	Statement	zend_long	768:10:19745:19753	2784591	41	True				
ANR	2785320	Statement	(	768:20:19755:19755	2784591	42	True				
ANR	2785321	Statement	*	768:21:19756:19756	2784591	43	True				
ANR	2785322	Statement	)	768:22:19757:19757	2784591	44	True				
ANR	2785323	Statement	(	768:23:19758:19758	2784591	45	True				
ANR	2785324	Statement	)	768:24:19759:19759	2784591	46	True				
ANR	2785325	Statement	)	768:25:19760:19760	2784591	47	True				
ANR	2785326	ExpressionStatement	ZEND_STRTOL_PTR	768:26:19761:19776	2784591	48	True				
ANR	2785327	Identifier	ZEND_STRTOL_PTR		2784591	0					
ANR	2785328	BreakStatement	break ;	769:4:19782:19787	2784591	49	True				
ANR	2785329	Label	case 'x' :	770:3:19792:19800	2784591	50	True				
ANR	2785330	Label	case 'X' :	771:3:19805:19813	2784591	51	True				
ANR	2785331	ExpressionStatement	op = 'i'	772:4:19819:19827	2784591	52	True				
ANR	2785332	AssignmentExpression	op = 'i'		2784591	0		=			
ANR	2785333	Identifier	op		2784591	0					
ANR	2785334	PrimaryExpression	'i'		2784591	1					
ANR	2785335	ExpressionStatement	base = 16	773:4:19833:19842	2784591	53	True				
ANR	2785336	AssignmentExpression	base = 16		2784591	0		=			
ANR	2785337	Identifier	base		2784591	0					
ANR	2785338	PrimaryExpression	16		2784591	1					
ANR	2785339	Statement	fn	774:4:19848:19849	2784591	54	True				
ANR	2785340	Statement	=	774:7:19851:19851	2784591	55	True				
ANR	2785341	Statement	(	774:9:19853:19853	2784591	56	True				
ANR	2785342	Statement	zend_long	774:10:19854:19862	2784591	57	True				
ANR	2785343	Statement	(	774:20:19864:19864	2784591	58	True				
ANR	2785344	Statement	*	774:21:19865:19865	2784591	59	True				
ANR	2785345	Statement	)	774:22:19866:19866	2784591	60	True				
ANR	2785346	Statement	(	774:23:19867:19867	2784591	61	True				
ANR	2785347	Statement	)	774:24:19868:19868	2784591	62	True				
ANR	2785348	Statement	)	774:25:19869:19869	2784591	63	True				
ANR	2785349	ExpressionStatement	ZEND_STRTOL_PTR	774:26:19870:19885	2784591	64	True				
ANR	2785350	Identifier	ZEND_STRTOL_PTR		2784591	0					
ANR	2785351	BreakStatement	break ;	775:4:19891:19896	2784591	65	True				
ANR	2785352	Label	case 'u' :	776:3:19901:19909	2784591	66	True				
ANR	2785353	ExpressionStatement	op = 'i'	777:4:19915:19923	2784591	67	True				
ANR	2785354	AssignmentExpression	op = 'i'		2784591	0		=			
ANR	2785355	Identifier	op		2784591	0					
ANR	2785356	PrimaryExpression	'i'		2784591	1					
ANR	2785357	ExpressionStatement	base = 10	778:4:19929:19938	2784591	68	True				
ANR	2785358	AssignmentExpression	base = 10		2784591	0		=			
ANR	2785359	Identifier	base		2784591	0					
ANR	2785360	PrimaryExpression	10		2784591	1					
ANR	2785361	ExpressionStatement	flags |= SCAN_UNSIGNED	779:4:19944:19966	2784591	69	True				
ANR	2785362	AssignmentExpression	flags |= SCAN_UNSIGNED		2784591	0		|=			
ANR	2785363	Identifier	flags		2784591	0					
ANR	2785364	Identifier	SCAN_UNSIGNED		2784591	1					
ANR	2785365	Statement	fn	780:4:19972:19973	2784591	70	True				
ANR	2785366	Statement	=	780:7:19975:19975	2784591	71	True				
ANR	2785367	Statement	(	780:9:19977:19977	2784591	72	True				
ANR	2785368	Statement	zend_long	780:10:19978:19986	2784591	73	True				
ANR	2785369	Statement	(	780:20:19988:19988	2784591	74	True				
ANR	2785370	Statement	*	780:21:19989:19989	2784591	75	True				
ANR	2785371	Statement	)	780:22:19990:19990	2784591	76	True				
ANR	2785372	Statement	(	780:23:19991:19991	2784591	77	True				
ANR	2785373	Statement	)	780:24:19992:19992	2784591	78	True				
ANR	2785374	Statement	)	780:25:19993:19993	2784591	79	True				
ANR	2785375	ExpressionStatement	ZEND_STRTOUL_PTR	780:26:19994:20010	2784591	80	True				
ANR	2785376	Identifier	ZEND_STRTOUL_PTR		2784591	0					
ANR	2785377	BreakStatement	break ;	781:4:20016:20021	2784591	81	True				
ANR	2785378	Label	case 'f' :	783:3:20027:20035	2784591	82	True				
ANR	2785379	Label	case 'e' :	784:3:20040:20048	2784591	83	True				
ANR	2785380	Label	case 'E' :	785:3:20053:20061	2784591	84	True				
ANR	2785381	Label	case 'g' :	786:3:20066:20074	2784591	85	True				
ANR	2785382	ExpressionStatement	op = 'f'	787:4:20080:20088	2784591	86	True				
ANR	2785383	AssignmentExpression	op = 'f'		2784591	0		=			
ANR	2785384	Identifier	op		2784591	0					
ANR	2785385	PrimaryExpression	'f'		2784591	1					
ANR	2785386	BreakStatement	break ;	788:4:20094:20099	2784591	87	True				
ANR	2785387	Label	case 's' :	790:3:20105:20113	2784591	88	True				
ANR	2785388	ExpressionStatement	op = 's'	791:4:20119:20127	2784591	89	True				
ANR	2785389	AssignmentExpression	op = 's'		2784591	0		=			
ANR	2785390	Identifier	op		2784591	0					
ANR	2785391	PrimaryExpression	's'		2784591	1					
ANR	2785392	BreakStatement	break ;	792:4:20133:20138	2784591	90	True				
ANR	2785393	Label	case 'c' :	794:3:20144:20152	2784591	91	True				
ANR	2785394	ExpressionStatement	op = 's'	795:4:20158:20166	2784591	92	True				
ANR	2785395	AssignmentExpression	op = 's'		2784591	0		=			
ANR	2785396	Identifier	op		2784591	0					
ANR	2785397	PrimaryExpression	's'		2784591	1					
ANR	2785398	ExpressionStatement	flags |= SCAN_NOSKIP	796:4:20172:20192	2784591	93	True				
ANR	2785399	AssignmentExpression	flags |= SCAN_NOSKIP		2784591	0		|=			
ANR	2785400	Identifier	flags		2784591	0					
ANR	2785401	Identifier	SCAN_NOSKIP		2784591	1					
ANR	2785402	IfStatement	if ( 0 == width )		2784591	94					
ANR	2785403	Condition	0 == width	798:8:20215:20224	2784591	0	True				
ANR	2785404	EqualityExpression	0 == width		2784591	0		==			
ANR	2785405	PrimaryExpression	0		2784591	0					
ANR	2785406	Identifier	width		2784591	1					
ANR	2785407	CompoundStatement		218:20:4510:4510	2784591	1					
ANR	2785408	ExpressionStatement	width = 1	799:5:20234:20243	2784591	0	True				
ANR	2785409	AssignmentExpression	width = 1		2784591	0		=			
ANR	2785410	Identifier	width		2784591	0					
ANR	2785411	PrimaryExpression	1		2784591	1					
ANR	2785412	BreakStatement	break ;	802:4:20268:20273	2784591	95	True				
ANR	2785413	Label	case '[' :	803:3:20278:20286	2784591	96	True				
ANR	2785414	ExpressionStatement	op = '['	804:4:20292:20300	2784591	97	True				
ANR	2785415	AssignmentExpression	op = '['		2784591	0		=			
ANR	2785416	Identifier	op		2784591	0					
ANR	2785417	PrimaryExpression	'['		2784591	1					
ANR	2785418	ExpressionStatement	flags |= SCAN_NOSKIP	805:4:20306:20326	2784591	98	True				
ANR	2785419	AssignmentExpression	flags |= SCAN_NOSKIP		2784591	0		|=			
ANR	2785420	Identifier	flags		2784591	0					
ANR	2785421	Identifier	SCAN_NOSKIP		2784591	1					
ANR	2785422	BreakStatement	break ;	806:4:20332:20337	2784591	99	True				
ANR	2785423	IfStatement	if ( * string == '\\0' )		2784591	10					
ANR	2785424	Condition	* string == '\\0'	813:6:20464:20478	2784591	0	True				
ANR	2785425	EqualityExpression	* string == '\\0'		2784591	0		==			
ANR	2785426	UnaryOperationExpression	* string		2784591	0					
ANR	2785427	UnaryOperator	*		2784591	0					
ANR	2785428	Identifier	string		2784591	1					
ANR	2785429	PrimaryExpression	'\\0'		2784591	1					
ANR	2785430	CompoundStatement		233:23:4764:4764	2784591	1					
ANR	2785431	ExpressionStatement	underflow = 1	814:3:20486:20499	2784591	0	True				
ANR	2785432	AssignmentExpression	underflow = 1		2784591	0		=			
ANR	2785433	Identifier	underflow		2784591	0					
ANR	2785434	PrimaryExpression	1		2784591	1					
ANR	2785435	GotoStatement	goto done ;	815:3:20504:20513	2784591	1	True				
ANR	2785436	Identifier	done		2784591	0					
ANR	2785437	IfStatement	if ( ! ( flags & SCAN_NOSKIP ) )		2784591	11					
ANR	2785438	Condition	! ( flags & SCAN_NOSKIP )	822:6:20647:20668	2784591	0	True				
ANR	2785439	UnaryOperationExpression	! ( flags & SCAN_NOSKIP )		2784591	0					
ANR	2785440	UnaryOperator	!		2784591	0					
ANR	2785441	BitAndExpression	flags & SCAN_NOSKIP		2784591	1		&			
ANR	2785442	Identifier	flags		2784591	0					
ANR	2785443	Identifier	SCAN_NOSKIP		2784591	1					
ANR	2785444	CompoundStatement		242:30:4954:4954	2784591	1					
ANR	2785445	WhileStatement	while ( * string != '\\0' )		2784591	0					
ANR	2785446	Condition	* string != '\\0'	823:10:20683:20697	2784591	0	True				
ANR	2785447	EqualityExpression	* string != '\\0'		2784591	0		!=			
ANR	2785448	UnaryOperationExpression	* string		2784591	0					
ANR	2785449	UnaryOperator	*		2784591	0					
ANR	2785450	Identifier	string		2784591	1					
ANR	2785451	PrimaryExpression	'\\0'		2784591	1					
ANR	2785452	CompoundStatement		243:27:4983:4983	2784591	1					
ANR	2785453	ExpressionStatement	sch = * string	824:4:20706:20719	2784591	0	True				
ANR	2785454	AssignmentExpression	sch = * string		2784591	0		=			
ANR	2785455	Identifier	sch		2784591	0					
ANR	2785456	UnaryOperationExpression	* string		2784591	1					
ANR	2785457	UnaryOperator	*		2784591	0					
ANR	2785458	Identifier	string		2784591	1					
ANR	2785459	IfStatement	if ( ! isspace ( ( int ) sch ) )		2784591	1					
ANR	2785460	Condition	! isspace ( ( int ) sch )	825:8:20729:20747	2784591	0	True				
ANR	2785461	UnaryOperationExpression	! isspace ( ( int ) sch )		2784591	0					
ANR	2785462	UnaryOperator	!		2784591	0					
ANR	2785463	CallExpression	isspace ( ( int ) sch )		2784591	1					
ANR	2785464	Callee	isspace		2784591	0					
ANR	2785465	Identifier	isspace		2784591	0					
ANR	2785466	ArgumentList	( int ) sch		2784591	1					
ANR	2785467	Argument	( int ) sch		2784591	0					
ANR	2785468	CastExpression	( int ) sch		2784591	0					
ANR	2785469	CastTarget	int		2784591	0					
ANR	2785470	Identifier	sch		2784591	1					
ANR	2785471	CompoundStatement		245:30:5034:5034	2784591	1					
ANR	2785472	BreakStatement	break ;	826:5:20758:20763	2784591	0	True				
ANR	2785473	ExpressionStatement	string ++	828:4:20775:20783	2784591	2	True				
ANR	2785474	PostIncDecOperationExpression	string ++		2784591	0					
ANR	2785475	Identifier	string		2784591	0					
ANR	2785476	IncDec	++		2784591	1					
ANR	2785477	IfStatement	if ( * string == '\\0' )		2784591	1					
ANR	2785478	Condition	* string == '\\0'	830:7:20797:20811	2784591	0	True				
ANR	2785479	EqualityExpression	* string == '\\0'		2784591	0		==			
ANR	2785480	UnaryOperationExpression	* string		2784591	0					
ANR	2785481	UnaryOperator	*		2784591	0					
ANR	2785482	Identifier	string		2784591	1					
ANR	2785483	PrimaryExpression	'\\0'		2784591	1					
ANR	2785484	CompoundStatement		250:24:5097:5097	2784591	1					
ANR	2785485	ExpressionStatement	underflow = 1	831:4:20820:20833	2784591	0	True				
ANR	2785486	AssignmentExpression	underflow = 1		2784591	0		=			
ANR	2785487	Identifier	underflow		2784591	0					
ANR	2785488	PrimaryExpression	1		2784591	1					
ANR	2785489	GotoStatement	goto done ;	832:4:20839:20848	2784591	1	True				
ANR	2785490	Identifier	done		2784591	0					
ANR	2785491	SwitchStatement	switch ( op )		2784591	12					
ANR	2785492	Condition	op	839:10:20928:20929	2784591	0	True				
ANR	2785493	Identifier	op		2784591	0					
ANR	2785494	CompoundStatement		259:14:5215:5215	2784591	1					
ANR	2785495	Label	case 'c' :	840:3:20937:20945	2784591	0	True				
ANR	2785496	Label	case 's' :	841:3:20950:20958	2784591	1	True				
ANR	2785497	IfStatement	if ( width == 0 )		2784591	2					
ANR	2785498	Condition	width == 0	845:8:21042:21051	2784591	0	True				
ANR	2785499	EqualityExpression	width == 0		2784591	0		==			
ANR	2785500	Identifier	width		2784591	0					
ANR	2785501	PrimaryExpression	0		2784591	1					
ANR	2785502	CompoundStatement		265:20:5337:5337	2784591	1					
ANR	2785503	ExpressionStatement	width = ( size_t ) ~0	846:5:21061:21080	2784591	0	True				
ANR	2785504	AssignmentExpression	width = ( size_t ) ~0		2784591	0		=			
ANR	2785505	Identifier	width		2784591	0					
ANR	2785506	CastExpression	( size_t ) ~0		2784591	1					
ANR	2785507	CastTarget	size_t		2784591	0					
ANR	2785508	Identifier	~0		2784591	1					
ANR	2785509	ExpressionStatement	end = string	848:4:21092:21104	2784591	3	True				
ANR	2785510	AssignmentExpression	end = string		2784591	0		=			
ANR	2785511	Identifier	end		2784591	0					
ANR	2785512	Identifier	string		2784591	1					
ANR	2785513	WhileStatement	while ( * end != '\\0' )		2784591	4					
ANR	2785514	Condition	* end != '\\0'	849:11:21117:21128	2784591	0	True				
ANR	2785515	EqualityExpression	* end != '\\0'		2784591	0		!=			
ANR	2785516	UnaryOperationExpression	* end		2784591	0					
ANR	2785517	UnaryOperator	*		2784591	0					
ANR	2785518	Identifier	end		2784591	1					
ANR	2785519	PrimaryExpression	'\\0'		2784591	1					
ANR	2785520	CompoundStatement		269:25:5414:5414	2784591	1					
ANR	2785521	ExpressionStatement	sch = * end	850:5:21138:21148	2784591	0	True				
ANR	2785522	AssignmentExpression	sch = * end		2784591	0		=			
ANR	2785523	Identifier	sch		2784591	0					
ANR	2785524	UnaryOperationExpression	* end		2784591	1					
ANR	2785525	UnaryOperator	*		2784591	0					
ANR	2785526	Identifier	end		2784591	1					
ANR	2785527	IfStatement	if ( isspace ( ( int ) sch ) )		2784591	1					
ANR	2785528	Condition	isspace ( ( int ) sch )	851:10:21160:21178	2784591	0	True				
ANR	2785529	CallExpression	isspace ( ( int ) sch )		2784591	0					
ANR	2785530	Callee	isspace		2784591	0					
ANR	2785531	Identifier	isspace		2784591	0					
ANR	2785532	ArgumentList	( int ) sch		2784591	1					
ANR	2785533	Argument	( int ) sch		2784591	0					
ANR	2785534	CastExpression	( int ) sch		2784591	0					
ANR	2785535	CastTarget	int		2784591	0					
ANR	2785536	Identifier	sch		2784591	1					
ANR	2785537	CompoundStatement		271:32:5465:5465	2784591	1					
ANR	2785538	BreakStatement	break ;	852:6:21190:21195	2784591	0	True				
ANR	2785539	ExpressionStatement	end ++	854:5:21209:21214	2784591	2	True				
ANR	2785540	PostIncDecOperationExpression	end ++		2784591	0					
ANR	2785541	Identifier	end		2784591	0					
ANR	2785542	IncDec	++		2784591	1					
ANR	2785543	IfStatement	if ( -- width == 0 )		2784591	3					
ANR	2785544	Condition	-- width == 0	855:9:21225:21236	2784591	0	True				
ANR	2785545	EqualityExpression	-- width == 0		2784591	0		==			
ANR	2785546	UnaryExpression	-- width		2784591	0					
ANR	2785547	IncDec	--		2784591	0					
ANR	2785548	Identifier	width		2784591	1					
ANR	2785549	PrimaryExpression	0		2784591	1					
ANR	2785550	CompoundStatement		275:23:5522:5522	2784591	1					
ANR	2785551	BreakStatement	break ;	856:8:21249:21254	2784591	0	True				
ANR	2785552	IfStatement	if ( ! ( flags & SCAN_SUPPRESS ) )		2784591	5					
ANR	2785553	Condition	! ( flags & SCAN_SUPPRESS )	859:8:21277:21300	2784591	0	True				
ANR	2785554	UnaryOperationExpression	! ( flags & SCAN_SUPPRESS )		2784591	0					
ANR	2785555	UnaryOperator	!		2784591	0					
ANR	2785556	BitAndExpression	flags & SCAN_SUPPRESS		2784591	1		&			
ANR	2785557	Identifier	flags		2784591	0					
ANR	2785558	Identifier	SCAN_SUPPRESS		2784591	1					
ANR	2785559	CompoundStatement		279:34:5586:5586	2784591	1					
ANR	2785560	IfStatement	if ( numVars && objIndex >= argCount )		2784591	0					
ANR	2785561	Condition	numVars && objIndex >= argCount	860:9:21314:21344	2784591	0	True				
ANR	2785562	AndExpression	numVars && objIndex >= argCount		2784591	0		&&			
ANR	2785563	Identifier	numVars		2784591	0					
ANR	2785564	RelationalExpression	objIndex >= argCount		2784591	1		>=			
ANR	2785565	Identifier	objIndex		2784591	0					
ANR	2785566	Identifier	argCount		2784591	1					
ANR	2785567	CompoundStatement		280:42:5630:5630	2784591	1					
ANR	2785568	BreakStatement	break ;	861:6:21355:21360	2784591	0	True				
ANR	2785569	ElseStatement	else		2784591	0					
ANR	2785570	IfStatement	if ( numVars )		2784591	0					
ANR	2785571	Condition	numVars	862:16:21378:21384	2784591	0	True				
ANR	2785572	Identifier	numVars		2784591	0					
ANR	2785573	CompoundStatement		282:25:5670:5670	2784591	1					
ANR	2785574	ExpressionStatement	current = Z_REFVAL ( args [ objIndex ++ ] )	863:6:21395:21431	2784591	0	True				
ANR	2785575	AssignmentExpression	current = Z_REFVAL ( args [ objIndex ++ ] )		2784591	0		=			
ANR	2785576	Identifier	current		2784591	0					
ANR	2785577	CallExpression	Z_REFVAL ( args [ objIndex ++ ] )		2784591	1					
ANR	2785578	Callee	Z_REFVAL		2784591	0					
ANR	2785579	Identifier	Z_REFVAL		2784591	0					
ANR	2785580	ArgumentList	args [ objIndex ++ ]		2784591	1					
ANR	2785581	Argument	args [ objIndex ++ ]		2784591	0					
ANR	2785582	ArrayIndexing	args [ objIndex ++ ]		2784591	0					
ANR	2785583	Identifier	args		2784591	0					
ANR	2785584	PostIncDecOperationExpression	objIndex ++		2784591	1					
ANR	2785585	Identifier	objIndex		2784591	0					
ANR	2785586	IncDec	++		2784591	1					
ANR	2785587	ExpressionStatement	zval_ptr_dtor ( current )	864:6:21439:21461	2784591	1	True				
ANR	2785588	CallExpression	zval_ptr_dtor ( current )		2784591	0					
ANR	2785589	Callee	zval_ptr_dtor		2784591	0					
ANR	2785590	Identifier	zval_ptr_dtor		2784591	0					
ANR	2785591	ArgumentList	current		2784591	1					
ANR	2785592	Argument	current		2784591	0					
ANR	2785593	Identifier	current		2784591	0					
ANR	2785594	ExpressionStatement	"ZVAL_STRINGL ( current , string , end - string )"	865:6:21469:21510	2784591	2	True				
ANR	2785595	CallExpression	"ZVAL_STRINGL ( current , string , end - string )"		2784591	0					
ANR	2785596	Callee	ZVAL_STRINGL		2784591	0					
ANR	2785597	Identifier	ZVAL_STRINGL		2784591	0					
ANR	2785598	ArgumentList	current		2784591	1					
ANR	2785599	Argument	current		2784591	0					
ANR	2785600	Identifier	current		2784591	0					
ANR	2785601	Argument	string		2784591	1					
ANR	2785602	Identifier	string		2784591	0					
ANR	2785603	Argument	end - string		2784591	2					
ANR	2785604	AdditiveExpression	end - string		2784591	0		-			
ANR	2785605	Identifier	end		2784591	0					
ANR	2785606	Identifier	string		2784591	1					
ANR	2785607	ElseStatement	else		2784591	0					
ANR	2785608	CompoundStatement		286:12:5807:5807	2784591	0					
ANR	2785609	ExpressionStatement	"add_index_stringl ( return_value , objIndex ++ , string , end - string )"	867:6:21532:21595	2784591	0	True				
ANR	2785610	CallExpression	"add_index_stringl ( return_value , objIndex ++ , string , end - string )"		2784591	0					
ANR	2785611	Callee	add_index_stringl		2784591	0					
ANR	2785612	Identifier	add_index_stringl		2784591	0					
ANR	2785613	ArgumentList	return_value		2784591	1					
ANR	2785614	Argument	return_value		2784591	0					
ANR	2785615	Identifier	return_value		2784591	0					
ANR	2785616	Argument	objIndex ++		2784591	1					
ANR	2785617	PostIncDecOperationExpression	objIndex ++		2784591	0					
ANR	2785618	Identifier	objIndex		2784591	0					
ANR	2785619	IncDec	++		2784591	1					
ANR	2785620	Argument	string		2784591	2					
ANR	2785621	Identifier	string		2784591	0					
ANR	2785622	Argument	end - string		2784591	3					
ANR	2785623	AdditiveExpression	end - string		2784591	0		-			
ANR	2785624	Identifier	end		2784591	0					
ANR	2785625	Identifier	string		2784591	1					
ANR	2785626	ExpressionStatement	string = end	870:4:21614:21626	2784591	6	True				
ANR	2785627	AssignmentExpression	string = end		2784591	0		=			
ANR	2785628	Identifier	string		2784591	0					
ANR	2785629	Identifier	end		2784591	1					
ANR	2785630	BreakStatement	break ;	871:4:21632:21637	2784591	7	True				
ANR	2785631	Label	case '[' :	873:3:21643:21651	2784591	8	True				
ANR	2785632	CompoundStatement		294:4:5942:5954	2784591	9					
ANR	2785633	IdentifierDeclStatement	CharSet cset ;	874:4:21659:21671	2784591	0	True				
ANR	2785634	IdentifierDecl	cset		2784591	0					
ANR	2785635	IdentifierDeclType	CharSet		2784591	0					
ANR	2785636	Identifier	cset		2784591	1					
ANR	2785637	IfStatement	if ( width == 0 )		2784591	1					
ANR	2785638	Condition	width == 0	876:8:21682:21691	2784591	0	True				
ANR	2785639	EqualityExpression	width == 0		2784591	0		==			
ANR	2785640	Identifier	width		2784591	0					
ANR	2785641	PrimaryExpression	0		2784591	1					
ANR	2785642	CompoundStatement		296:20:5977:5977	2784591	1					
ANR	2785643	ExpressionStatement	width = ( size_t ) ~0	877:5:21701:21720	2784591	0	True				
ANR	2785644	AssignmentExpression	width = ( size_t ) ~0		2784591	0		=			
ANR	2785645	Identifier	width		2784591	0					
ANR	2785646	CastExpression	( size_t ) ~0		2784591	1					
ANR	2785647	CastTarget	size_t		2784591	0					
ANR	2785648	Identifier	~0		2784591	1					
ANR	2785649	ExpressionStatement	end = string	879:4:21732:21744	2784591	2	True				
ANR	2785650	AssignmentExpression	end = string		2784591	0		=			
ANR	2785651	Identifier	end		2784591	0					
ANR	2785652	Identifier	string		2784591	1					
ANR	2785653	ExpressionStatement	"format = BuildCharSet ( & cset , format )"	881:4:21751:21787	2784591	3	True				
ANR	2785654	AssignmentExpression	"format = BuildCharSet ( & cset , format )"		2784591	0		=			
ANR	2785655	Identifier	format		2784591	0					
ANR	2785656	CallExpression	"BuildCharSet ( & cset , format )"		2784591	1					
ANR	2785657	Callee	BuildCharSet		2784591	0					
ANR	2785658	Identifier	BuildCharSet		2784591	0					
ANR	2785659	ArgumentList	& cset		2784591	1					
ANR	2785660	Argument	& cset		2784591	0					
ANR	2785661	UnaryOperationExpression	& cset		2784591	0					
ANR	2785662	UnaryOperator	&		2784591	0					
ANR	2785663	Identifier	cset		2784591	1					
ANR	2785664	Argument	format		2784591	1					
ANR	2785665	Identifier	format		2784591	0					
ANR	2785666	WhileStatement	while ( * end != '\\0' )		2784591	4					
ANR	2785667	Condition	* end != '\\0'	882:11:21800:21811	2784591	0	True				
ANR	2785668	EqualityExpression	* end != '\\0'		2784591	0		!=			
ANR	2785669	UnaryOperationExpression	* end		2784591	0					
ANR	2785670	UnaryOperator	*		2784591	0					
ANR	2785671	Identifier	end		2784591	1					
ANR	2785672	PrimaryExpression	'\\0'		2784591	1					
ANR	2785673	CompoundStatement		302:25:6097:6097	2784591	1					
ANR	2785674	ExpressionStatement	sch = * end	883:5:21821:21831	2784591	0	True				
ANR	2785675	AssignmentExpression	sch = * end		2784591	0		=			
ANR	2785676	Identifier	sch		2784591	0					
ANR	2785677	UnaryOperationExpression	* end		2784591	1					
ANR	2785678	UnaryOperator	*		2784591	0					
ANR	2785679	Identifier	end		2784591	1					
ANR	2785680	IfStatement	"if ( ! CharInSet ( & cset , ( int ) sch ) )"		2784591	1					
ANR	2785681	Condition	"! CharInSet ( & cset , ( int ) sch )"	884:9:21842:21868	2784591	0	True				
ANR	2785682	UnaryOperationExpression	"! CharInSet ( & cset , ( int ) sch )"		2784591	0					
ANR	2785683	UnaryOperator	!		2784591	0					
ANR	2785684	CallExpression	"CharInSet ( & cset , ( int ) sch )"		2784591	1					
ANR	2785685	Callee	CharInSet		2784591	0					
ANR	2785686	Identifier	CharInSet		2784591	0					
ANR	2785687	ArgumentList	& cset		2784591	1					
ANR	2785688	Argument	& cset		2784591	0					
ANR	2785689	UnaryOperationExpression	& cset		2784591	0					
ANR	2785690	UnaryOperator	&		2784591	0					
ANR	2785691	Identifier	cset		2784591	1					
ANR	2785692	Argument	( int ) sch		2784591	1					
ANR	2785693	CastExpression	( int ) sch		2784591	0					
ANR	2785694	CastTarget	int		2784591	0					
ANR	2785695	Identifier	sch		2784591	1					
ANR	2785696	CompoundStatement		304:38:6154:6154	2784591	1					
ANR	2785697	BreakStatement	break ;	885:6:21879:21884	2784591	0	True				
ANR	2785698	ExpressionStatement	end ++	887:5:21898:21903	2784591	2	True				
ANR	2785699	PostIncDecOperationExpression	end ++		2784591	0					
ANR	2785700	Identifier	end		2784591	0					
ANR	2785701	IncDec	++		2784591	1					
ANR	2785702	IfStatement	if ( -- width == 0 )		2784591	3					
ANR	2785703	Condition	-- width == 0	888:9:21914:21925	2784591	0	True				
ANR	2785704	EqualityExpression	-- width == 0		2784591	0		==			
ANR	2785705	UnaryExpression	-- width		2784591	0					
ANR	2785706	IncDec	--		2784591	0					
ANR	2785707	Identifier	width		2784591	1					
ANR	2785708	PrimaryExpression	0		2784591	1					
ANR	2785709	CompoundStatement		308:23:6211:6211	2784591	1					
ANR	2785710	BreakStatement	break ;	889:6:21936:21941	2784591	0	True				
ANR	2785711	ExpressionStatement	ReleaseCharSet ( & cset )	892:4:21960:21981	2784591	5	True				
ANR	2785712	CallExpression	ReleaseCharSet ( & cset )		2784591	0					
ANR	2785713	Callee	ReleaseCharSet		2784591	0					
ANR	2785714	Identifier	ReleaseCharSet		2784591	0					
ANR	2785715	ArgumentList	& cset		2784591	1					
ANR	2785716	Argument	& cset		2784591	0					
ANR	2785717	UnaryOperationExpression	& cset		2784591	0					
ANR	2785718	UnaryOperator	&		2784591	0					
ANR	2785719	Identifier	cset		2784591	1					
ANR	2785720	IfStatement	if ( string == end )		2784591	6					
ANR	2785721	Condition	string == end	894:8:21992:22004	2784591	0	True				
ANR	2785722	EqualityExpression	string == end		2784591	0		==			
ANR	2785723	Identifier	string		2784591	0					
ANR	2785724	Identifier	end		2784591	1					
ANR	2785725	CompoundStatement		314:23:6290:6290	2784591	1					
ANR	2785726	GotoStatement	goto done ;	898:5:22082:22091	2784591	0	True				
ANR	2785727	Identifier	done		2784591	0					
ANR	2785728	IfStatement	if ( ! ( flags & SCAN_SUPPRESS ) )		2784591	7					
ANR	2785729	Condition	! ( flags & SCAN_SUPPRESS )	900:8:22107:22130	2784591	0	True				
ANR	2785730	UnaryOperationExpression	! ( flags & SCAN_SUPPRESS )		2784591	0					
ANR	2785731	UnaryOperator	!		2784591	0					
ANR	2785732	BitAndExpression	flags & SCAN_SUPPRESS		2784591	1		&			
ANR	2785733	Identifier	flags		2784591	0					
ANR	2785734	Identifier	SCAN_SUPPRESS		2784591	1					
ANR	2785735	CompoundStatement		320:34:6416:6416	2784591	1					
ANR	2785736	IfStatement	if ( numVars && objIndex >= argCount )		2784591	0					
ANR	2785737	Condition	numVars && objIndex >= argCount	901:9:22144:22174	2784591	0	True				
ANR	2785738	AndExpression	numVars && objIndex >= argCount		2784591	0		&&			
ANR	2785739	Identifier	numVars		2784591	0					
ANR	2785740	RelationalExpression	objIndex >= argCount		2784591	1		>=			
ANR	2785741	Identifier	objIndex		2784591	0					
ANR	2785742	Identifier	argCount		2784591	1					
ANR	2785743	CompoundStatement		321:42:6460:6460	2784591	1					
ANR	2785744	BreakStatement	break ;	902:6:22185:22190	2784591	0	True				
ANR	2785745	ElseStatement	else		2784591	0					
ANR	2785746	IfStatement	if ( numVars )		2784591	0					
ANR	2785747	Condition	numVars	903:16:22208:22214	2784591	0	True				
ANR	2785748	Identifier	numVars		2784591	0					
ANR	2785749	CompoundStatement		323:25:6500:6500	2784591	1					
ANR	2785750	ExpressionStatement	current = Z_REFVAL ( args [ objIndex ++ ] )	904:6:22225:22261	2784591	0	True				
ANR	2785751	AssignmentExpression	current = Z_REFVAL ( args [ objIndex ++ ] )		2784591	0		=			
ANR	2785752	Identifier	current		2784591	0					
ANR	2785753	CallExpression	Z_REFVAL ( args [ objIndex ++ ] )		2784591	1					
ANR	2785754	Callee	Z_REFVAL		2784591	0					
ANR	2785755	Identifier	Z_REFVAL		2784591	0					
ANR	2785756	ArgumentList	args [ objIndex ++ ]		2784591	1					
ANR	2785757	Argument	args [ objIndex ++ ]		2784591	0					
ANR	2785758	ArrayIndexing	args [ objIndex ++ ]		2784591	0					
ANR	2785759	Identifier	args		2784591	0					
ANR	2785760	PostIncDecOperationExpression	objIndex ++		2784591	1					
ANR	2785761	Identifier	objIndex		2784591	0					
ANR	2785762	IncDec	++		2784591	1					
ANR	2785763	ExpressionStatement	zval_ptr_dtor ( current )	905:6:22269:22291	2784591	1	True				
ANR	2785764	CallExpression	zval_ptr_dtor ( current )		2784591	0					
ANR	2785765	Callee	zval_ptr_dtor		2784591	0					
ANR	2785766	Identifier	zval_ptr_dtor		2784591	0					
ANR	2785767	ArgumentList	current		2784591	1					
ANR	2785768	Argument	current		2784591	0					
ANR	2785769	Identifier	current		2784591	0					
ANR	2785770	ExpressionStatement	"ZVAL_STRINGL ( current , string , end - string )"	906:6:22299:22340	2784591	2	True				
ANR	2785771	CallExpression	"ZVAL_STRINGL ( current , string , end - string )"		2784591	0					
ANR	2785772	Callee	ZVAL_STRINGL		2784591	0					
ANR	2785773	Identifier	ZVAL_STRINGL		2784591	0					
ANR	2785774	ArgumentList	current		2784591	1					
ANR	2785775	Argument	current		2784591	0					
ANR	2785776	Identifier	current		2784591	0					
ANR	2785777	Argument	string		2784591	1					
ANR	2785778	Identifier	string		2784591	0					
ANR	2785779	Argument	end - string		2784591	2					
ANR	2785780	AdditiveExpression	end - string		2784591	0		-			
ANR	2785781	Identifier	end		2784591	0					
ANR	2785782	Identifier	string		2784591	1					
ANR	2785783	ElseStatement	else		2784591	0					
ANR	2785784	CompoundStatement		327:12:6637:6637	2784591	0					
ANR	2785785	ExpressionStatement	"add_index_stringl ( return_value , objIndex ++ , string , end - string )"	908:6:22362:22425	2784591	0	True				
ANR	2785786	CallExpression	"add_index_stringl ( return_value , objIndex ++ , string , end - string )"		2784591	0					
ANR	2785787	Callee	add_index_stringl		2784591	0					
ANR	2785788	Identifier	add_index_stringl		2784591	0					
ANR	2785789	ArgumentList	return_value		2784591	1					
ANR	2785790	Argument	return_value		2784591	0					
ANR	2785791	Identifier	return_value		2784591	0					
ANR	2785792	Argument	objIndex ++		2784591	1					
ANR	2785793	PostIncDecOperationExpression	objIndex ++		2784591	0					
ANR	2785794	Identifier	objIndex		2784591	0					
ANR	2785795	IncDec	++		2784591	1					
ANR	2785796	Argument	string		2784591	2					
ANR	2785797	Identifier	string		2784591	0					
ANR	2785798	Argument	end - string		2784591	3					
ANR	2785799	AdditiveExpression	end - string		2784591	0		-			
ANR	2785800	Identifier	end		2784591	0					
ANR	2785801	Identifier	string		2784591	1					
ANR	2785802	ExpressionStatement	string = end	911:4:22444:22456	2784591	8	True				
ANR	2785803	AssignmentExpression	string = end		2784591	0		=			
ANR	2785804	Identifier	string		2784591	0					
ANR	2785805	Identifier	end		2784591	1					
ANR	2785806	BreakStatement	break ;	912:4:22462:22467	2784591	9	True				
ANR	2785807	Label	case 'i' :	934:3:22887:22895	2784591	10	True				
ANR	2785808	ExpressionStatement	buf [ 0 ] = '\\0'	939:4:22972:22985	2784591	11	True				
ANR	2785809	AssignmentExpression	buf [ 0 ] = '\\0'		2784591	0		=			
ANR	2785810	ArrayIndexing	buf [ 0 ]		2784591	0					
ANR	2785811	Identifier	buf		2784591	0					
ANR	2785812	PrimaryExpression	0		2784591	1					
ANR	2785813	PrimaryExpression	'\\0'		2784591	1					
ANR	2785814	IfStatement	if ( ( width == 0 ) || ( width > sizeof ( buf ) - 1 ) )		2784591	12					
ANR	2785815	Condition	( width == 0 ) || ( width > sizeof ( buf ) - 1 )	941:8:23008:23048	2784591	0	True				
ANR	2785816	OrExpression	( width == 0 ) || ( width > sizeof ( buf ) - 1 )		2784591	0		||			
ANR	2785817	EqualityExpression	width == 0		2784591	0		==			
ANR	2785818	Identifier	width		2784591	0					
ANR	2785819	PrimaryExpression	0		2784591	1					
ANR	2785820	RelationalExpression	width > sizeof ( buf ) - 1		2784591	1		>			
ANR	2785821	Identifier	width		2784591	0					
ANR	2785822	AdditiveExpression	sizeof ( buf ) - 1		2784591	1		-			
ANR	2785823	SizeofExpression	sizeof ( buf )		2784591	0					
ANR	2785824	Sizeof	sizeof		2784591	0					
ANR	2785825	SizeofOperand	buf		2784591	1					
ANR	2785826	PrimaryExpression	1		2784591	1					
ANR	2785827	CompoundStatement		361:51:7334:7334	2784591	1					
ANR	2785828	ExpressionStatement	width = sizeof ( buf ) - 1	942:5:23058:23081	2784591	0	True				
ANR	2785829	AssignmentExpression	width = sizeof ( buf ) - 1		2784591	0		=			
ANR	2785830	Identifier	width		2784591	0					
ANR	2785831	AdditiveExpression	sizeof ( buf ) - 1		2784591	1		-			
ANR	2785832	SizeofExpression	sizeof ( buf )		2784591	0					
ANR	2785833	Sizeof	sizeof		2784591	0					
ANR	2785834	SizeofOperand	buf		2784591	1					
ANR	2785835	PrimaryExpression	1		2784591	1					
ANR	2785836	ExpressionStatement	flags |= SCAN_SIGNOK | SCAN_NODIGITS | SCAN_NOZERO	945:4:23094:23144	2784591	13	True				
ANR	2785837	AssignmentExpression	flags |= SCAN_SIGNOK | SCAN_NODIGITS | SCAN_NOZERO		2784591	0		|=			
ANR	2785838	Identifier	flags		2784591	0					
ANR	2785839	InclusiveOrExpression	SCAN_SIGNOK | SCAN_NODIGITS | SCAN_NOZERO		2784591	1		|			
ANR	2785840	Identifier	SCAN_SIGNOK		2784591	0					
ANR	2785841	InclusiveOrExpression	SCAN_NODIGITS | SCAN_NOZERO		2784591	1		|			
ANR	2785842	Identifier	SCAN_NODIGITS		2784591	0					
ANR	2785843	Identifier	SCAN_NOZERO		2784591	1					
ANR	2785844	ForStatement	for ( end = buf ; width > 0 ; width -- )		2784591	14					
ANR	2785845	ForInit	end = buf ;	946:9:23155:23164	2784591	0	True				
ANR	2785846	AssignmentExpression	end = buf		2784591	0		=			
ANR	2785847	Identifier	end		2784591	0					
ANR	2785848	Identifier	buf		2784591	1					
ANR	2785849	Condition	width > 0	946:20:23166:23174	2784591	1	True				
ANR	2785850	RelationalExpression	width > 0		2784591	0		>			
ANR	2785851	Identifier	width		2784591	0					
ANR	2785852	PrimaryExpression	0		2784591	1					
ANR	2785853	PostIncDecOperationExpression	width --	946:31:23177:23183	2784591	2	True				
ANR	2785854	Identifier	width		2784591	0					
ANR	2785855	IncDec	--		2784591	1					
ANR	2785856	CompoundStatement		366:40:7469:7469	2784591	3					
ANR	2785857	SwitchStatement	switch ( * string )		2784591	0					
ANR	2785858	Condition	* string	947:13:23201:23207	2784591	0	True				
ANR	2785859	UnaryOperationExpression	* string		2784591	0					
ANR	2785860	UnaryOperator	*		2784591	0					
ANR	2785861	Identifier	string		2784591	1					
ANR	2785862	CompoundStatement		367:22:7493:7493	2784591	1					
ANR	2785863	Label	case '0' :	954:6:23443:23451	2784591	0	True				
ANR	2785864	IfStatement	if ( base == 16 )		2784591	1					
ANR	2785865	Condition	base == 16	956:11:23480:23489	2784591	0	True				
ANR	2785866	EqualityExpression	base == 16		2784591	0		==			
ANR	2785867	Identifier	base		2784591	0					
ANR	2785868	PrimaryExpression	16		2784591	1					
ANR	2785869	CompoundStatement		376:23:7775:7775	2784591	1					
ANR	2785870	ExpressionStatement	flags |= SCAN_XOK	957:8:23502:23519	2784591	0	True				
ANR	2785871	AssignmentExpression	flags |= SCAN_XOK		2784591	0		|=			
ANR	2785872	Identifier	flags		2784591	0					
ANR	2785873	Identifier	SCAN_XOK		2784591	1					
ANR	2785874	IfStatement	if ( base == 0 )		2784591	2					
ANR	2785875	Condition	base == 0	960:11:23557:23565	2784591	0	True				
ANR	2785876	EqualityExpression	base == 0		2784591	0		==			
ANR	2785877	Identifier	base		2784591	0					
ANR	2785878	PrimaryExpression	0		2784591	1					
ANR	2785879	CompoundStatement		380:22:7851:7851	2784591	1					
ANR	2785880	ExpressionStatement	base = 8	961:8:23578:23586	2784591	0	True				
ANR	2785881	AssignmentExpression	base = 8		2784591	0		=			
ANR	2785882	Identifier	base		2784591	0					
ANR	2785883	PrimaryExpression	8		2784591	1					
ANR	2785884	ExpressionStatement	flags |= SCAN_XOK	962:8:23596:23613	2784591	1	True				
ANR	2785885	AssignmentExpression	flags |= SCAN_XOK		2784591	0		|=			
ANR	2785886	Identifier	flags		2784591	0					
ANR	2785887	Identifier	SCAN_XOK		2784591	1					
ANR	2785888	IfStatement	if ( flags & SCAN_NOZERO )		2784591	3					
ANR	2785889	Condition	flags & SCAN_NOZERO	964:11:23635:23653	2784591	0	True				
ANR	2785890	BitAndExpression	flags & SCAN_NOZERO		2784591	0		&			
ANR	2785891	Identifier	flags		2784591	0					
ANR	2785892	Identifier	SCAN_NOZERO		2784591	1					
ANR	2785893	CompoundStatement		384:32:7939:7939	2784591	1					
ANR	2785894	ExpressionStatement	flags &= ~ ( SCAN_SIGNOK | SCAN_NODIGITS | SCAN_NOZERO )	965:8:23666:23719	2784591	0	True				
ANR	2785895	AssignmentExpression	flags &= ~ ( SCAN_SIGNOK | SCAN_NODIGITS | SCAN_NOZERO )		2784591	0		&=			
ANR	2785896	Identifier	flags		2784591	0					
ANR	2785897	UnaryOperationExpression	~ ( SCAN_SIGNOK | SCAN_NODIGITS | SCAN_NOZERO )		2784591	1					
ANR	2785898	UnaryOperator	~		2784591	0					
ANR	2785899	InclusiveOrExpression	SCAN_SIGNOK | SCAN_NODIGITS | SCAN_NOZERO		2784591	1		|			
ANR	2785900	Identifier	SCAN_SIGNOK		2784591	0					
ANR	2785901	InclusiveOrExpression	SCAN_NODIGITS | SCAN_NOZERO		2784591	1		|			
ANR	2785902	Identifier	SCAN_NODIGITS		2784591	0					
ANR	2785903	Identifier	SCAN_NOZERO		2784591	1					
ANR	2785904	ElseStatement	else		2784591	0					
ANR	2785905	CompoundStatement		386:14:8018:8018	2784591	0					
ANR	2785906	ExpressionStatement	flags &= ~ ( SCAN_SIGNOK | SCAN_XOK | SCAN_NODIGITS )	967:8:23745:23795	2784591	0	True				
ANR	2785907	AssignmentExpression	flags &= ~ ( SCAN_SIGNOK | SCAN_XOK | SCAN_NODIGITS )		2784591	0		&=			
ANR	2785908	Identifier	flags		2784591	0					
ANR	2785909	UnaryOperationExpression	~ ( SCAN_SIGNOK | SCAN_XOK | SCAN_NODIGITS )		2784591	1					
ANR	2785910	UnaryOperator	~		2784591	0					
ANR	2785911	InclusiveOrExpression	SCAN_SIGNOK | SCAN_XOK | SCAN_NODIGITS		2784591	1		|			
ANR	2785912	Identifier	SCAN_SIGNOK		2784591	0					
ANR	2785913	InclusiveOrExpression	SCAN_XOK | SCAN_NODIGITS		2784591	1		|			
ANR	2785914	Identifier	SCAN_XOK		2784591	0					
ANR	2785915	Identifier	SCAN_NODIGITS		2784591	1					
ANR	2785916	GotoStatement	goto addToInt ;	969:7:23813:23826	2784591	4	True				
ANR	2785917	Identifier	addToInt		2784591	0					
ANR	2785918	Label	case '1' :	971:6:23835:23843	2784591	5	True				
ANR	2785919	Label	case '2' :	971:16:23845:23853	2784591	6	True				
ANR	2785920	Label	case '3' :	971:26:23855:23863	2784591	7	True				
ANR	2785921	Label	case '4' :	971:36:23865:23873	2784591	8	True				
ANR	2785922	Label	case '5' :	972:6:23881:23889	2784591	9	True				
ANR	2785923	Label	case '6' :	972:16:23891:23899	2784591	10	True				
ANR	2785924	Label	case '7' :	972:26:23901:23909	2784591	11	True				
ANR	2785925	IfStatement	if ( base == 0 )		2784591	12					
ANR	2785926	Condition	base == 0	973:11:23922:23930	2784591	0	True				
ANR	2785927	EqualityExpression	base == 0		2784591	0		==			
ANR	2785928	Identifier	base		2784591	0					
ANR	2785929	PrimaryExpression	0		2784591	1					
ANR	2785930	CompoundStatement		393:22:8216:8216	2784591	1					
ANR	2785931	ExpressionStatement	base = 10	974:8:23943:23952	2784591	0	True				
ANR	2785932	AssignmentExpression	base = 10		2784591	0		=			
ANR	2785933	Identifier	base		2784591	0					
ANR	2785934	PrimaryExpression	10		2784591	1					
ANR	2785935	ExpressionStatement	flags &= ~ ( SCAN_SIGNOK | SCAN_XOK | SCAN_NODIGITS )	976:7:23970:24020	2784591	13	True				
ANR	2785936	AssignmentExpression	flags &= ~ ( SCAN_SIGNOK | SCAN_XOK | SCAN_NODIGITS )		2784591	0		&=			
ANR	2785937	Identifier	flags		2784591	0					
ANR	2785938	UnaryOperationExpression	~ ( SCAN_SIGNOK | SCAN_XOK | SCAN_NODIGITS )		2784591	1					
ANR	2785939	UnaryOperator	~		2784591	0					
ANR	2785940	InclusiveOrExpression	SCAN_SIGNOK | SCAN_XOK | SCAN_NODIGITS		2784591	1		|			
ANR	2785941	Identifier	SCAN_SIGNOK		2784591	0					
ANR	2785942	InclusiveOrExpression	SCAN_XOK | SCAN_NODIGITS		2784591	1		|			
ANR	2785943	Identifier	SCAN_XOK		2784591	0					
ANR	2785944	Identifier	SCAN_NODIGITS		2784591	1					
ANR	2785945	GotoStatement	goto addToInt ;	977:7:24029:24042	2784591	14	True				
ANR	2785946	Identifier	addToInt		2784591	0					
ANR	2785947	Label	case '8' :	979:6:24051:24059	2784591	15	True				
ANR	2785948	Label	case '9' :	979:16:24061:24069	2784591	16	True				
ANR	2785949	IfStatement	if ( base == 0 )		2784591	17					
ANR	2785950	Condition	base == 0	980:11:24082:24090	2784591	0	True				
ANR	2785951	EqualityExpression	base == 0		2784591	0		==			
ANR	2785952	Identifier	base		2784591	0					
ANR	2785953	PrimaryExpression	0		2784591	1					
ANR	2785954	CompoundStatement		400:22:8376:8376	2784591	1					
ANR	2785955	ExpressionStatement	base = 10	981:8:24103:24112	2784591	0	True				
ANR	2785956	AssignmentExpression	base = 10		2784591	0		=			
ANR	2785957	Identifier	base		2784591	0					
ANR	2785958	PrimaryExpression	10		2784591	1					
ANR	2785959	IfStatement	if ( base <= 8 )		2784591	18					
ANR	2785960	Condition	base <= 8	983:11:24134:24142	2784591	0	True				
ANR	2785961	RelationalExpression	base <= 8		2784591	0		<=			
ANR	2785962	Identifier	base		2784591	0					
ANR	2785963	PrimaryExpression	8		2784591	1					
ANR	2785964	CompoundStatement		403:22:8428:8428	2784591	1					
ANR	2785965	BreakStatement	break ;	984:10:24157:24162	2784591	0	True				
ANR	2785966	ExpressionStatement	flags &= ~ ( SCAN_SIGNOK | SCAN_XOK | SCAN_NODIGITS )	986:7:24180:24230	2784591	19	True				
ANR	2785967	AssignmentExpression	flags &= ~ ( SCAN_SIGNOK | SCAN_XOK | SCAN_NODIGITS )		2784591	0		&=			
ANR	2785968	Identifier	flags		2784591	0					
ANR	2785969	UnaryOperationExpression	~ ( SCAN_SIGNOK | SCAN_XOK | SCAN_NODIGITS )		2784591	1					
ANR	2785970	UnaryOperator	~		2784591	0					
ANR	2785971	InclusiveOrExpression	SCAN_SIGNOK | SCAN_XOK | SCAN_NODIGITS		2784591	1		|			
ANR	2785972	Identifier	SCAN_SIGNOK		2784591	0					
ANR	2785973	InclusiveOrExpression	SCAN_XOK | SCAN_NODIGITS		2784591	1		|			
ANR	2785974	Identifier	SCAN_XOK		2784591	0					
ANR	2785975	Identifier	SCAN_NODIGITS		2784591	1					
ANR	2785976	GotoStatement	goto addToInt ;	987:7:24239:24252	2784591	20	True				
ANR	2785977	Identifier	addToInt		2784591	0					
ANR	2785978	Label	case 'A' :	989:6:24261:24269	2784591	21	True				
ANR	2785979	Label	case 'B' :	989:16:24271:24279	2784591	22	True				
ANR	2785980	Label	case 'C' :	989:26:24281:24289	2784591	23	True				
ANR	2785981	Label	case 'D' :	990:6:24297:24305	2784591	24	True				
ANR	2785982	Label	case 'E' :	990:16:24307:24315	2784591	25	True				
ANR	2785983	Label	case 'F' :	990:26:24317:24325	2784591	26	True				
ANR	2785984	Label	case 'a' :	991:6:24333:24341	2784591	27	True				
ANR	2785985	Label	case 'b' :	991:16:24343:24351	2784591	28	True				
ANR	2785986	Label	case 'c' :	991:26:24353:24361	2784591	29	True				
ANR	2785987	Label	case 'd' :	992:6:24369:24377	2784591	30	True				
ANR	2785988	Label	case 'e' :	992:16:24379:24387	2784591	31	True				
ANR	2785989	Label	case 'f' :	992:26:24389:24397	2784591	32	True				
ANR	2785990	IfStatement	if ( base <= 10 )		2784591	33					
ANR	2785991	Condition	base <= 10	993:11:24410:24419	2784591	0	True				
ANR	2785992	RelationalExpression	base <= 10		2784591	0		<=			
ANR	2785993	Identifier	base		2784591	0					
ANR	2785994	PrimaryExpression	10		2784591	1					
ANR	2785995	CompoundStatement		413:23:8705:8705	2784591	1					
ANR	2785996	BreakStatement	break ;	994:8:24432:24437	2784591	0	True				
ANR	2785997	ExpressionStatement	flags &= ~ ( SCAN_SIGNOK | SCAN_XOK | SCAN_NODIGITS )	996:7:24455:24505	2784591	34	True				
ANR	2785998	AssignmentExpression	flags &= ~ ( SCAN_SIGNOK | SCAN_XOK | SCAN_NODIGITS )		2784591	0		&=			
ANR	2785999	Identifier	flags		2784591	0					
ANR	2786000	UnaryOperationExpression	~ ( SCAN_SIGNOK | SCAN_XOK | SCAN_NODIGITS )		2784591	1					
ANR	2786001	UnaryOperator	~		2784591	0					
ANR	2786002	InclusiveOrExpression	SCAN_SIGNOK | SCAN_XOK | SCAN_NODIGITS		2784591	1		|			
ANR	2786003	Identifier	SCAN_SIGNOK		2784591	0					
ANR	2786004	InclusiveOrExpression	SCAN_XOK | SCAN_NODIGITS		2784591	1		|			
ANR	2786005	Identifier	SCAN_XOK		2784591	0					
ANR	2786006	Identifier	SCAN_NODIGITS		2784591	1					
ANR	2786007	GotoStatement	goto addToInt ;	997:7:24514:24527	2784591	35	True				
ANR	2786008	Identifier	addToInt		2784591	0					
ANR	2786009	Label	case '+' :	999:6:24536:24544	2784591	36	True				
ANR	2786010	Label	case '-' :	999:16:24546:24554	2784591	37	True				
ANR	2786011	IfStatement	if ( flags & SCAN_SIGNOK )		2784591	38					
ANR	2786012	Condition	flags & SCAN_SIGNOK	1000:11:24567:24585	2784591	0	True				
ANR	2786013	BitAndExpression	flags & SCAN_SIGNOK		2784591	0		&			
ANR	2786014	Identifier	flags		2784591	0					
ANR	2786015	Identifier	SCAN_SIGNOK		2784591	1					
ANR	2786016	CompoundStatement		420:32:8871:8871	2784591	1					
ANR	2786017	ExpressionStatement	flags &= ~SCAN_SIGNOK	1001:8:24598:24619	2784591	0	True				
ANR	2786018	AssignmentExpression	flags &= ~SCAN_SIGNOK		2784591	0		&=			
ANR	2786019	Identifier	flags		2784591	0					
ANR	2786020	Identifier	~SCAN_SIGNOK		2784591	1					
ANR	2786021	GotoStatement	goto addToInt ;	1002:8:24629:24642	2784591	1	True				
ANR	2786022	Identifier	addToInt		2784591	0					
ANR	2786023	BreakStatement	break ;	1004:7:24660:24665	2784591	39	True				
ANR	2786024	Label	case 'x' :	1006:6:24674:24682	2784591	40	True				
ANR	2786025	Label	case 'X' :	1006:16:24684:24692	2784591	41	True				
ANR	2786026	IfStatement	if ( ( flags & SCAN_XOK ) && ( end == buf + 1 ) )		2784591	42					
ANR	2786027	Condition	( flags & SCAN_XOK ) && ( end == buf + 1 )	1007:11:24705:24740	2784591	0	True				
ANR	2786028	AndExpression	( flags & SCAN_XOK ) && ( end == buf + 1 )		2784591	0		&&			
ANR	2786029	BitAndExpression	flags & SCAN_XOK		2784591	0		&			
ANR	2786030	Identifier	flags		2784591	0					
ANR	2786031	Identifier	SCAN_XOK		2784591	1					
ANR	2786032	EqualityExpression	end == buf + 1		2784591	1		==			
ANR	2786033	Identifier	end		2784591	0					
ANR	2786034	AdditiveExpression	buf + 1		2784591	1		+			
ANR	2786035	Identifier	buf		2784591	0					
ANR	2786036	PrimaryExpression	1		2784591	1					
ANR	2786037	CompoundStatement		427:49:9026:9026	2784591	1					
ANR	2786038	ExpressionStatement	base = 16	1008:8:24753:24762	2784591	0	True				
ANR	2786039	AssignmentExpression	base = 16		2784591	0		=			
ANR	2786040	Identifier	base		2784591	0					
ANR	2786041	PrimaryExpression	16		2784591	1					
ANR	2786042	ExpressionStatement	flags &= ~SCAN_XOK	1009:8:24772:24790	2784591	1	True				
ANR	2786043	AssignmentExpression	flags &= ~SCAN_XOK		2784591	0		&=			
ANR	2786044	Identifier	flags		2784591	0					
ANR	2786045	Identifier	~SCAN_XOK		2784591	1					
ANR	2786046	GotoStatement	goto addToInt ;	1010:8:24800:24813	2784591	2	True				
ANR	2786047	Identifier	addToInt		2784591	0					
ANR	2786048	BreakStatement	break ;	1012:7:24831:24836	2784591	43	True				
ANR	2786049	BreakStatement	break ;	1018:5:24933:24938	2784591	1	True				
ANR	2786050	Label	addToInt :	1020:0:24941:24949	2784591	2	True				
ANR	2786051	Identifier	addToInt		2784591	0					
ANR	2786052	ExpressionStatement	* end ++ = * string ++	1024:5:25024:25042	2784591	3	True				
ANR	2786053	AssignmentExpression	* end ++ = * string ++		2784591	0		=			
ANR	2786054	UnaryOperationExpression	* end ++		2784591	0					
ANR	2786055	UnaryOperator	*		2784591	0					
ANR	2786056	PostIncDecOperationExpression	end ++		2784591	1					
ANR	2786057	Identifier	end		2784591	0					
ANR	2786058	IncDec	++		2784591	1					
ANR	2786059	UnaryOperationExpression	* string ++		2784591	1					
ANR	2786060	UnaryOperator	*		2784591	0					
ANR	2786061	PostIncDecOperationExpression	string ++		2784591	1					
ANR	2786062	Identifier	string		2784591	0					
ANR	2786063	IncDec	++		2784591	1					
ANR	2786064	IfStatement	if ( * string == '\\0' )		2784591	4					
ANR	2786065	Condition	* string == '\\0'	1025:9:25053:25067	2784591	0	True				
ANR	2786066	EqualityExpression	* string == '\\0'		2784591	0		==			
ANR	2786067	UnaryOperationExpression	* string		2784591	0					
ANR	2786068	UnaryOperator	*		2784591	0					
ANR	2786069	Identifier	string		2784591	1					
ANR	2786070	PrimaryExpression	'\\0'		2784591	1					
ANR	2786071	CompoundStatement		445:26:9353:9353	2784591	1					
ANR	2786072	BreakStatement	break ;	1026:6:25078:25083	2784591	0	True				
ANR	2786073	IfStatement	if ( flags & SCAN_NODIGITS )		2784591	15					
ANR	2786074	Condition	flags & SCAN_NODIGITS	1034:8:25225:25245	2784591	0	True				
ANR	2786075	BitAndExpression	flags & SCAN_NODIGITS		2784591	0		&			
ANR	2786076	Identifier	flags		2784591	0					
ANR	2786077	Identifier	SCAN_NODIGITS		2784591	1					
ANR	2786078	CompoundStatement		454:31:9531:9531	2784591	1					
ANR	2786079	IfStatement	if ( * string == '\\0' )		2784591	0					
ANR	2786080	Condition	* string == '\\0'	1035:9:25259:25273	2784591	0	True				
ANR	2786081	EqualityExpression	* string == '\\0'		2784591	0		==			
ANR	2786082	UnaryOperationExpression	* string		2784591	0					
ANR	2786083	UnaryOperator	*		2784591	0					
ANR	2786084	Identifier	string		2784591	1					
ANR	2786085	PrimaryExpression	'\\0'		2784591	1					
ANR	2786086	CompoundStatement		455:26:9559:9559	2784591	1					
ANR	2786087	ExpressionStatement	underflow = 1	1036:6:25284:25297	2784591	0	True				
ANR	2786088	AssignmentExpression	underflow = 1		2784591	0		=			
ANR	2786089	Identifier	underflow		2784591	0					
ANR	2786090	PrimaryExpression	1		2784591	1					
ANR	2786091	GotoStatement	goto done ;	1038:5:25311:25320	2784591	1	True				
ANR	2786092	Identifier	done		2784591	0					
ANR	2786093	ElseStatement	else		2784591	0					
ANR	2786094	IfStatement	if ( end [ - 1 ] == 'x' || end [ - 1 ] == 'X' )		2784591	0					
ANR	2786095	Condition	end [ - 1 ] == 'x' || end [ - 1 ] == 'X'	1039:15:25337:25368	2784591	0	True				
ANR	2786096	OrExpression	end [ - 1 ] == 'x' || end [ - 1 ] == 'X'		2784591	0		||			
ANR	2786097	EqualityExpression	end [ - 1 ] == 'x'		2784591	0		==			
ANR	2786098	ArrayIndexing	end [ - 1 ]		2784591	0					
ANR	2786099	Identifier	end		2784591	0					
ANR	2786100	UnaryOperationExpression	- 1		2784591	1					
ANR	2786101	UnaryOperator	-		2784591	0					
ANR	2786102	PrimaryExpression	1		2784591	1					
ANR	2786103	PrimaryExpression	'x'		2784591	1					
ANR	2786104	EqualityExpression	end [ - 1 ] == 'X'		2784591	1		==			
ANR	2786105	ArrayIndexing	end [ - 1 ]		2784591	0					
ANR	2786106	Identifier	end		2784591	0					
ANR	2786107	UnaryOperationExpression	- 1		2784591	1					
ANR	2786108	UnaryOperator	-		2784591	0					
ANR	2786109	PrimaryExpression	1		2784591	1					
ANR	2786110	PrimaryExpression	'X'		2784591	1					
ANR	2786111	CompoundStatement		459:49:9654:9654	2784591	1					
ANR	2786112	ExpressionStatement	end --	1040:5:25378:25383	2784591	0	True				
ANR	2786113	PostIncDecOperationExpression	end --		2784591	0					
ANR	2786114	Identifier	end		2784591	0					
ANR	2786115	IncDec	--		2784591	1					
ANR	2786116	ExpressionStatement	string --	1041:5:25390:25398	2784591	1	True				
ANR	2786117	PostIncDecOperationExpression	string --		2784591	0					
ANR	2786118	Identifier	string		2784591	0					
ANR	2786119	IncDec	--		2784591	1					
ANR	2786120	IfStatement	if ( ! ( flags & SCAN_SUPPRESS ) )		2784591	16					
ANR	2786121	Condition	! ( flags & SCAN_SUPPRESS )	1049:8:25616:25639	2784591	0	True				
ANR	2786122	UnaryOperationExpression	! ( flags & SCAN_SUPPRESS )		2784591	0					
ANR	2786123	UnaryOperator	!		2784591	0					
ANR	2786124	BitAndExpression	flags & SCAN_SUPPRESS		2784591	1		&			
ANR	2786125	Identifier	flags		2784591	0					
ANR	2786126	Identifier	SCAN_SUPPRESS		2784591	1					
ANR	2786127	CompoundStatement		469:34:9925:9925	2784591	1					
ANR	2786128	ExpressionStatement	* end = '\\0'	1050:5:25649:25660	2784591	0	True				
ANR	2786129	AssignmentExpression	* end = '\\0'		2784591	0		=			
ANR	2786130	UnaryOperationExpression	* end		2784591	0					
ANR	2786131	UnaryOperator	*		2784591	0					
ANR	2786132	Identifier	end		2784591	1					
ANR	2786133	PrimaryExpression	'\\0'		2784591	1					
ANR	2786134	ExpressionStatement	"value = ( zend_long ) ( * fn ) ( buf , NULL , base )"	1051:5:25667:25709	2784591	1	True				
ANR	2786135	AssignmentExpression	"value = ( zend_long ) ( * fn ) ( buf , NULL , base )"		2784591	0		=			
ANR	2786136	Identifier	value		2784591	0					
ANR	2786137	CastExpression	"( zend_long ) ( * fn ) ( buf , NULL , base )"		2784591	1					
ANR	2786138	CastTarget	zend_long		2784591	0					
ANR	2786139	CallExpression	"( * fn ) ( buf , NULL , base )"		2784591	1					
ANR	2786140	Callee	* fn		2784591	0					
ANR	2786141	UnaryOperationExpression	* fn		2784591	0					
ANR	2786142	UnaryOperator	*		2784591	0					
ANR	2786143	Identifier	fn		2784591	1					
ANR	2786144	ArgumentList	buf		2784591	1					
ANR	2786145	Argument	buf		2784591	0					
ANR	2786146	Identifier	buf		2784591	0					
ANR	2786147	Argument	NULL		2784591	1					
ANR	2786148	Identifier	NULL		2784591	0					
ANR	2786149	Argument	base		2784591	2					
ANR	2786150	Identifier	base		2784591	0					
ANR	2786151	IfStatement	if ( ( flags & SCAN_UNSIGNED ) && ( value < 0 ) )		2784591	2					
ANR	2786152	Condition	( flags & SCAN_UNSIGNED ) && ( value < 0 )	1052:9:25720:25757	2784591	0	True				
ANR	2786153	AndExpression	( flags & SCAN_UNSIGNED ) && ( value < 0 )		2784591	0		&&			
ANR	2786154	BitAndExpression	flags & SCAN_UNSIGNED		2784591	0		&			
ANR	2786155	Identifier	flags		2784591	0					
ANR	2786156	Identifier	SCAN_UNSIGNED		2784591	1					
ANR	2786157	RelationalExpression	value < 0		2784591	1		<			
ANR	2786158	Identifier	value		2784591	0					
ANR	2786159	PrimaryExpression	0		2784591	1					
ANR	2786160	CompoundStatement		472:49:10043:10043	2784591	1					
ANR	2786161	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ZEND_ULONG_FMT , value )"	1053:6:25768:25817	2784591	0	True				
ANR	2786162	CallExpression	"snprintf ( buf , sizeof ( buf ) , ZEND_ULONG_FMT , value )"		2784591	0					
ANR	2786163	Callee	snprintf		2784591	0					
ANR	2786164	Identifier	snprintf		2784591	0					
ANR	2786165	ArgumentList	buf		2784591	1					
ANR	2786166	Argument	buf		2784591	0					
ANR	2786167	Identifier	buf		2784591	0					
ANR	2786168	Argument	sizeof ( buf )		2784591	1					
ANR	2786169	SizeofExpression	sizeof ( buf )		2784591	0					
ANR	2786170	Sizeof	sizeof		2784591	0					
ANR	2786171	SizeofOperand	buf		2784591	1					
ANR	2786172	Argument	ZEND_ULONG_FMT		2784591	2					
ANR	2786173	Identifier	ZEND_ULONG_FMT		2784591	0					
ANR	2786174	Argument	value		2784591	3					
ANR	2786175	Identifier	value		2784591	0					
ANR	2786176	IfStatement	if ( numVars && objIndex >= argCount )		2784591	1					
ANR	2786177	Condition	numVars && objIndex >= argCount	1054:10:25851:25881	2784591	0	True				
ANR	2786178	AndExpression	numVars && objIndex >= argCount		2784591	0		&&			
ANR	2786179	Identifier	numVars		2784591	0					
ANR	2786180	RelationalExpression	objIndex >= argCount		2784591	1		>=			
ANR	2786181	Identifier	objIndex		2784591	0					
ANR	2786182	Identifier	argCount		2784591	1					
ANR	2786183	CompoundStatement		474:43:10167:10167	2784591	1					
ANR	2786184	BreakStatement	break ;	1055:7:25893:25898	2784591	0	True				
ANR	2786185	ElseStatement	else		2784591	0					
ANR	2786186	IfStatement	if ( numVars )		2784591	0					
ANR	2786187	Condition	numVars	1056:17:25917:25923	2784591	0	True				
ANR	2786188	Identifier	numVars		2784591	0					
ANR	2786189	CompoundStatement		476:26:10209:10209	2784591	1					
ANR	2786190	ExpressionStatement	current = Z_REFVAL ( args [ objIndex ++ ] )	1058:7:25984:26020	2784591	0	True				
ANR	2786191	AssignmentExpression	current = Z_REFVAL ( args [ objIndex ++ ] )		2784591	0		=			
ANR	2786192	Identifier	current		2784591	0					
ANR	2786193	CallExpression	Z_REFVAL ( args [ objIndex ++ ] )		2784591	1					
ANR	2786194	Callee	Z_REFVAL		2784591	0					
ANR	2786195	Identifier	Z_REFVAL		2784591	0					
ANR	2786196	ArgumentList	args [ objIndex ++ ]		2784591	1					
ANR	2786197	Argument	args [ objIndex ++ ]		2784591	0					
ANR	2786198	ArrayIndexing	args [ objIndex ++ ]		2784591	0					
ANR	2786199	Identifier	args		2784591	0					
ANR	2786200	PostIncDecOperationExpression	objIndex ++		2784591	1					
ANR	2786201	Identifier	objIndex		2784591	0					
ANR	2786202	IncDec	++		2784591	1					
ANR	2786203	ExpressionStatement	zval_ptr_dtor ( current )	1059:7:26029:26051	2784591	1	True				
ANR	2786204	CallExpression	zval_ptr_dtor ( current )		2784591	0					
ANR	2786205	Callee	zval_ptr_dtor		2784591	0					
ANR	2786206	Identifier	zval_ptr_dtor		2784591	0					
ANR	2786207	ArgumentList	current		2784591	1					
ANR	2786208	Argument	current		2784591	0					
ANR	2786209	Identifier	current		2784591	0					
ANR	2786210	ExpressionStatement	"ZVAL_STRING ( current , buf )"	1060:7:26060:26085	2784591	2	True				
ANR	2786211	CallExpression	"ZVAL_STRING ( current , buf )"		2784591	0					
ANR	2786212	Callee	ZVAL_STRING		2784591	0					
ANR	2786213	Identifier	ZVAL_STRING		2784591	0					
ANR	2786214	ArgumentList	current		2784591	1					
ANR	2786215	Argument	current		2784591	0					
ANR	2786216	Identifier	current		2784591	0					
ANR	2786217	Argument	buf		2784591	1					
ANR	2786218	Identifier	buf		2784591	0					
ANR	2786219	ElseStatement	else		2784591	0					
ANR	2786220	CompoundStatement		481:13:10383:10383	2784591	0					
ANR	2786221	ExpressionStatement	"add_index_string ( return_value , objIndex ++ , buf )"	1062:7:26109:26156	2784591	0	True				
ANR	2786222	CallExpression	"add_index_string ( return_value , objIndex ++ , buf )"		2784591	0					
ANR	2786223	Callee	add_index_string		2784591	0					
ANR	2786224	Identifier	add_index_string		2784591	0					
ANR	2786225	ArgumentList	return_value		2784591	1					
ANR	2786226	Argument	return_value		2784591	0					
ANR	2786227	Identifier	return_value		2784591	0					
ANR	2786228	Argument	objIndex ++		2784591	1					
ANR	2786229	PostIncDecOperationExpression	objIndex ++		2784591	0					
ANR	2786230	Identifier	objIndex		2784591	0					
ANR	2786231	IncDec	++		2784591	1					
ANR	2786232	Argument	buf		2784591	2					
ANR	2786233	Identifier	buf		2784591	0					
ANR	2786234	ElseStatement	else		2784591	0					
ANR	2786235	CompoundStatement		484:12:10461:10461	2784591	0					
ANR	2786236	IfStatement	if ( numVars && objIndex >= argCount )		2784591	0					
ANR	2786237	Condition	numVars && objIndex >= argCount	1065:10:26190:26220	2784591	0	True				
ANR	2786238	AndExpression	numVars && objIndex >= argCount		2784591	0		&&			
ANR	2786239	Identifier	numVars		2784591	0					
ANR	2786240	RelationalExpression	objIndex >= argCount		2784591	1		>=			
ANR	2786241	Identifier	objIndex		2784591	0					
ANR	2786242	Identifier	argCount		2784591	1					
ANR	2786243	CompoundStatement		485:43:10506:10506	2784591	1					
ANR	2786244	BreakStatement	break ;	1066:7:26232:26237	2784591	0	True				
ANR	2786245	ElseStatement	else		2784591	0					
ANR	2786246	IfStatement	if ( numVars )		2784591	0					
ANR	2786247	Condition	numVars	1067:17:26256:26262	2784591	0	True				
ANR	2786248	Identifier	numVars		2784591	0					
ANR	2786249	CompoundStatement		487:26:10548:10548	2784591	1					
ANR	2786250	ExpressionStatement	current = Z_REFVAL ( args [ objIndex ++ ] )	1068:7:26274:26310	2784591	0	True				
ANR	2786251	AssignmentExpression	current = Z_REFVAL ( args [ objIndex ++ ] )		2784591	0		=			
ANR	2786252	Identifier	current		2784591	0					
ANR	2786253	CallExpression	Z_REFVAL ( args [ objIndex ++ ] )		2784591	1					
ANR	2786254	Callee	Z_REFVAL		2784591	0					
ANR	2786255	Identifier	Z_REFVAL		2784591	0					
ANR	2786256	ArgumentList	args [ objIndex ++ ]		2784591	1					
ANR	2786257	Argument	args [ objIndex ++ ]		2784591	0					
ANR	2786258	ArrayIndexing	args [ objIndex ++ ]		2784591	0					
ANR	2786259	Identifier	args		2784591	0					
ANR	2786260	PostIncDecOperationExpression	objIndex ++		2784591	1					
ANR	2786261	Identifier	objIndex		2784591	0					
ANR	2786262	IncDec	++		2784591	1					
ANR	2786263	ExpressionStatement	zval_ptr_dtor ( current )	1069:7:26319:26341	2784591	1	True				
ANR	2786264	CallExpression	zval_ptr_dtor ( current )		2784591	0					
ANR	2786265	Callee	zval_ptr_dtor		2784591	0					
ANR	2786266	Identifier	zval_ptr_dtor		2784591	0					
ANR	2786267	ArgumentList	current		2784591	1					
ANR	2786268	Argument	current		2784591	0					
ANR	2786269	Identifier	current		2784591	0					
ANR	2786270	ExpressionStatement	"ZVAL_LONG ( current , value )"	1070:7:26350:26375	2784591	2	True				
ANR	2786271	CallExpression	"ZVAL_LONG ( current , value )"		2784591	0					
ANR	2786272	Callee	ZVAL_LONG		2784591	0					
ANR	2786273	Identifier	ZVAL_LONG		2784591	0					
ANR	2786274	ArgumentList	current		2784591	1					
ANR	2786275	Argument	current		2784591	0					
ANR	2786276	Identifier	current		2784591	0					
ANR	2786277	Argument	value		2784591	1					
ANR	2786278	Identifier	value		2784591	0					
ANR	2786279	ElseStatement	else		2784591	0					
ANR	2786280	CompoundStatement		491:13:10673:10673	2784591	0					
ANR	2786281	ExpressionStatement	"add_index_long ( return_value , objIndex ++ , value )"	1072:7:26399:26446	2784591	0	True				
ANR	2786282	CallExpression	"add_index_long ( return_value , objIndex ++ , value )"		2784591	0					
ANR	2786283	Callee	add_index_long		2784591	0					
ANR	2786284	Identifier	add_index_long		2784591	0					
ANR	2786285	ArgumentList	return_value		2784591	1					
ANR	2786286	Argument	return_value		2784591	0					
ANR	2786287	Identifier	return_value		2784591	0					
ANR	2786288	Argument	objIndex ++		2784591	1					
ANR	2786289	PostIncDecOperationExpression	objIndex ++		2784591	0					
ANR	2786290	Identifier	objIndex		2784591	0					
ANR	2786291	IncDec	++		2784591	1					
ANR	2786292	Argument	value		2784591	2					
ANR	2786293	Identifier	value		2784591	0					
ANR	2786294	BreakStatement	break ;	1076:4:26473:26478	2784591	17	True				
ANR	2786295	Label	case 'f' :	1078:3:26484:26492	2784591	18	True				
ANR	2786296	ExpressionStatement	buf [ 0 ] = '\\0'	1082:4:26549:26562	2784591	19	True				
ANR	2786297	AssignmentExpression	buf [ 0 ] = '\\0'		2784591	0		=			
ANR	2786298	ArrayIndexing	buf [ 0 ]		2784591	0					
ANR	2786299	Identifier	buf		2784591	0					
ANR	2786300	PrimaryExpression	0		2784591	1					
ANR	2786301	PrimaryExpression	'\\0'		2784591	1					
ANR	2786302	IfStatement	if ( ( width == 0 ) || ( width > sizeof ( buf ) - 1 ) )		2784591	20					
ANR	2786303	Condition	( width == 0 ) || ( width > sizeof ( buf ) - 1 )	1083:8:26599:26639	2784591	0	True				
ANR	2786304	OrExpression	( width == 0 ) || ( width > sizeof ( buf ) - 1 )		2784591	0		||			
ANR	2786305	EqualityExpression	width == 0		2784591	0		==			
ANR	2786306	Identifier	width		2784591	0					
ANR	2786307	PrimaryExpression	0		2784591	1					
ANR	2786308	RelationalExpression	width > sizeof ( buf ) - 1		2784591	1		>			
ANR	2786309	Identifier	width		2784591	0					
ANR	2786310	AdditiveExpression	sizeof ( buf ) - 1		2784591	1		-			
ANR	2786311	SizeofExpression	sizeof ( buf )		2784591	0					
ANR	2786312	Sizeof	sizeof		2784591	0					
ANR	2786313	SizeofOperand	buf		2784591	1					
ANR	2786314	PrimaryExpression	1		2784591	1					
ANR	2786315	CompoundStatement		503:51:10925:10925	2784591	1					
ANR	2786316	ExpressionStatement	width = sizeof ( buf ) - 1	1084:5:26649:26672	2784591	0	True				
ANR	2786317	AssignmentExpression	width = sizeof ( buf ) - 1		2784591	0		=			
ANR	2786318	Identifier	width		2784591	0					
ANR	2786319	AdditiveExpression	sizeof ( buf ) - 1		2784591	1		-			
ANR	2786320	SizeofExpression	sizeof ( buf )		2784591	0					
ANR	2786321	Sizeof	sizeof		2784591	0					
ANR	2786322	SizeofOperand	buf		2784591	1					
ANR	2786323	PrimaryExpression	1		2784591	1					
ANR	2786324	ExpressionStatement	flags |= SCAN_SIGNOK | SCAN_NODIGITS | SCAN_PTOK | SCAN_EXPOK	1086:4:26684:26745	2784591	21	True				
ANR	2786325	AssignmentExpression	flags |= SCAN_SIGNOK | SCAN_NODIGITS | SCAN_PTOK | SCAN_EXPOK		2784591	0		|=			
ANR	2786326	Identifier	flags		2784591	0					
ANR	2786327	InclusiveOrExpression	SCAN_SIGNOK | SCAN_NODIGITS | SCAN_PTOK | SCAN_EXPOK		2784591	1		|			
ANR	2786328	Identifier	SCAN_SIGNOK		2784591	0					
ANR	2786329	InclusiveOrExpression	SCAN_NODIGITS | SCAN_PTOK | SCAN_EXPOK		2784591	1		|			
ANR	2786330	Identifier	SCAN_NODIGITS		2784591	0					
ANR	2786331	InclusiveOrExpression	SCAN_PTOK | SCAN_EXPOK		2784591	1		|			
ANR	2786332	Identifier	SCAN_PTOK		2784591	0					
ANR	2786333	Identifier	SCAN_EXPOK		2784591	1					
ANR	2786334	ForStatement	for ( end = buf ; width > 0 ; width -- )		2784591	22					
ANR	2786335	ForInit	end = buf ;	1087:9:26756:26765	2784591	0	True				
ANR	2786336	AssignmentExpression	end = buf		2784591	0		=			
ANR	2786337	Identifier	end		2784591	0					
ANR	2786338	Identifier	buf		2784591	1					
ANR	2786339	Condition	width > 0	1087:20:26767:26775	2784591	1	True				
ANR	2786340	RelationalExpression	width > 0		2784591	0		>			
ANR	2786341	Identifier	width		2784591	0					
ANR	2786342	PrimaryExpression	0		2784591	1					
ANR	2786343	PostIncDecOperationExpression	width --	1087:31:26778:26784	2784591	2	True				
ANR	2786344	Identifier	width		2784591	0					
ANR	2786345	IncDec	--		2784591	1					
ANR	2786346	CompoundStatement		507:40:11070:11070	2784591	3					
ANR	2786347	SwitchStatement	switch ( * string )		2784591	0					
ANR	2786348	Condition	* string	1088:13:26802:26808	2784591	0	True				
ANR	2786349	UnaryOperationExpression	* string		2784591	0					
ANR	2786350	UnaryOperator	*		2784591	0					
ANR	2786351	Identifier	string		2784591	1					
ANR	2786352	CompoundStatement		508:22:11094:11094	2784591	1					
ANR	2786353	Label	case '0' :	1089:6:26819:26827	2784591	0	True				
ANR	2786354	Label	case '1' :	1089:16:26829:26837	2784591	1	True				
ANR	2786355	Label	case '2' :	1089:26:26839:26847	2784591	2	True				
ANR	2786356	Label	case '3' :	1089:36:26849:26857	2784591	3	True				
ANR	2786357	Label	case '4' :	1090:6:26865:26873	2784591	4	True				
ANR	2786358	Label	case '5' :	1090:16:26875:26883	2784591	5	True				
ANR	2786359	Label	case '6' :	1090:26:26885:26893	2784591	6	True				
ANR	2786360	Label	case '7' :	1090:36:26895:26903	2784591	7	True				
ANR	2786361	Label	case '8' :	1091:6:26911:26919	2784591	8	True				
ANR	2786362	Label	case '9' :	1091:16:26921:26929	2784591	9	True				
ANR	2786363	ExpressionStatement	flags &= ~ ( SCAN_SIGNOK | SCAN_NODIGITS )	1092:7:26938:26977	2784591	10	True				
ANR	2786364	AssignmentExpression	flags &= ~ ( SCAN_SIGNOK | SCAN_NODIGITS )		2784591	0		&=			
ANR	2786365	Identifier	flags		2784591	0					
ANR	2786366	UnaryOperationExpression	~ ( SCAN_SIGNOK | SCAN_NODIGITS )		2784591	1					
ANR	2786367	UnaryOperator	~		2784591	0					
ANR	2786368	InclusiveOrExpression	SCAN_SIGNOK | SCAN_NODIGITS		2784591	1		|			
ANR	2786369	Identifier	SCAN_SIGNOK		2784591	0					
ANR	2786370	Identifier	SCAN_NODIGITS		2784591	1					
ANR	2786371	GotoStatement	goto addToFloat ;	1093:7:26986:27001	2784591	11	True				
ANR	2786372	Identifier	addToFloat		2784591	0					
ANR	2786373	Label	case '+' :	1094:6:27009:27017	2784591	12	True				
ANR	2786374	Label	case '-' :	1095:6:27025:27033	2784591	13	True				
ANR	2786375	IfStatement	if ( flags & SCAN_SIGNOK )		2784591	14					
ANR	2786376	Condition	flags & SCAN_SIGNOK	1096:11:27046:27064	2784591	0	True				
ANR	2786377	BitAndExpression	flags & SCAN_SIGNOK		2784591	0		&			
ANR	2786378	Identifier	flags		2784591	0					
ANR	2786379	Identifier	SCAN_SIGNOK		2784591	1					
ANR	2786380	CompoundStatement		516:32:11350:11350	2784591	1					
ANR	2786381	ExpressionStatement	flags &= ~SCAN_SIGNOK	1097:8:27077:27098	2784591	0	True				
ANR	2786382	AssignmentExpression	flags &= ~SCAN_SIGNOK		2784591	0		&=			
ANR	2786383	Identifier	flags		2784591	0					
ANR	2786384	Identifier	~SCAN_SIGNOK		2784591	1					
ANR	2786385	GotoStatement	goto addToFloat ;	1098:8:27108:27123	2784591	1	True				
ANR	2786386	Identifier	addToFloat		2784591	0					
ANR	2786387	BreakStatement	break ;	1100:7:27141:27146	2784591	15	True				
ANR	2786388	Label	case '.' :	1101:6:27154:27162	2784591	16	True				
ANR	2786389	IfStatement	if ( flags & SCAN_PTOK )		2784591	17					
ANR	2786390	Condition	flags & SCAN_PTOK	1102:11:27175:27191	2784591	0	True				
ANR	2786391	BitAndExpression	flags & SCAN_PTOK		2784591	0		&			
ANR	2786392	Identifier	flags		2784591	0					
ANR	2786393	Identifier	SCAN_PTOK		2784591	1					
ANR	2786394	CompoundStatement		522:30:11477:11477	2784591	1					
ANR	2786395	ExpressionStatement	flags &= ~ ( SCAN_SIGNOK | SCAN_PTOK )	1103:8:27204:27239	2784591	0	True				
ANR	2786396	AssignmentExpression	flags &= ~ ( SCAN_SIGNOK | SCAN_PTOK )		2784591	0		&=			
ANR	2786397	Identifier	flags		2784591	0					
ANR	2786398	UnaryOperationExpression	~ ( SCAN_SIGNOK | SCAN_PTOK )		2784591	1					
ANR	2786399	UnaryOperator	~		2784591	0					
ANR	2786400	InclusiveOrExpression	SCAN_SIGNOK | SCAN_PTOK		2784591	1		|			
ANR	2786401	Identifier	SCAN_SIGNOK		2784591	0					
ANR	2786402	Identifier	SCAN_PTOK		2784591	1					
ANR	2786403	GotoStatement	goto addToFloat ;	1104:8:27249:27264	2784591	1	True				
ANR	2786404	Identifier	addToFloat		2784591	0					
ANR	2786405	BreakStatement	break ;	1106:7:27282:27287	2784591	18	True				
ANR	2786406	Label	case 'e' :	1107:6:27295:27303	2784591	19	True				
ANR	2786407	Label	case 'E' :	1108:6:27311:27319	2784591	20	True				
ANR	2786408	IfStatement	if ( ( flags & ( SCAN_NODIGITS | SCAN_EXPOK ) ) == SCAN_EXPOK )		2784591	21					
ANR	2786409	Condition	( flags & ( SCAN_NODIGITS | SCAN_EXPOK ) ) == SCAN_EXPOK	1113:11:27441:27492	2784591	0	True				
ANR	2786410	EqualityExpression	( flags & ( SCAN_NODIGITS | SCAN_EXPOK ) ) == SCAN_EXPOK		2784591	0		==			
ANR	2786411	BitAndExpression	flags & ( SCAN_NODIGITS | SCAN_EXPOK )		2784591	0		&			
ANR	2786412	Identifier	flags		2784591	0					
ANR	2786413	InclusiveOrExpression	SCAN_NODIGITS | SCAN_EXPOK		2784591	1		|			
ANR	2786414	Identifier	SCAN_NODIGITS		2784591	0					
ANR	2786415	Identifier	SCAN_EXPOK		2784591	1					
ANR	2786416	Identifier	SCAN_EXPOK		2784591	1					
ANR	2786417	CompoundStatement		533:65:11778:11778	2784591	1					
ANR	2786418	ExpressionStatement	flags = ( flags & ~ ( SCAN_EXPOK | SCAN_PTOK ) ) | SCAN_SIGNOK | SCAN_NODIGITS	1114:8:27505:27585	2784591	0	True				
ANR	2786419	AssignmentExpression	flags = ( flags & ~ ( SCAN_EXPOK | SCAN_PTOK ) ) | SCAN_SIGNOK | SCAN_NODIGITS		2784591	0		=			
ANR	2786420	Identifier	flags		2784591	0					
ANR	2786421	InclusiveOrExpression	( flags & ~ ( SCAN_EXPOK | SCAN_PTOK ) ) | SCAN_SIGNOK | SCAN_NODIGITS		2784591	1		|			
ANR	2786422	BitAndExpression	flags & ~ ( SCAN_EXPOK | SCAN_PTOK )		2784591	0		&			
ANR	2786423	Identifier	flags		2784591	0					
ANR	2786424	UnaryOperationExpression	~ ( SCAN_EXPOK | SCAN_PTOK )		2784591	1					
ANR	2786425	UnaryOperator	~		2784591	0					
ANR	2786426	InclusiveOrExpression	SCAN_EXPOK | SCAN_PTOK		2784591	1		|			
ANR	2786427	Identifier	SCAN_EXPOK		2784591	0					
ANR	2786428	Identifier	SCAN_PTOK		2784591	1					
ANR	2786429	InclusiveOrExpression	SCAN_SIGNOK | SCAN_NODIGITS		2784591	1		|			
ANR	2786430	Identifier	SCAN_SIGNOK		2784591	0					
ANR	2786431	Identifier	SCAN_NODIGITS		2784591	1					
ANR	2786432	GotoStatement	goto addToFloat ;	1116:8:27595:27610	2784591	1	True				
ANR	2786433	Identifier	addToFloat		2784591	0					
ANR	2786434	BreakStatement	break ;	1118:7:27628:27633	2784591	22	True				
ANR	2786435	BreakStatement	break ;	1124:5:27730:27735	2784591	1	True				
ANR	2786436	Label	addToFloat :	1126:0:27738:27748	2784591	2	True				
ANR	2786437	Identifier	addToFloat		2784591	0					
ANR	2786438	ExpressionStatement	* end ++ = * string ++	1130:5:27823:27841	2784591	3	True				
ANR	2786439	AssignmentExpression	* end ++ = * string ++		2784591	0		=			
ANR	2786440	UnaryOperationExpression	* end ++		2784591	0					
ANR	2786441	UnaryOperator	*		2784591	0					
ANR	2786442	PostIncDecOperationExpression	end ++		2784591	1					
ANR	2786443	Identifier	end		2784591	0					
ANR	2786444	IncDec	++		2784591	1					
ANR	2786445	UnaryOperationExpression	* string ++		2784591	1					
ANR	2786446	UnaryOperator	*		2784591	0					
ANR	2786447	PostIncDecOperationExpression	string ++		2784591	1					
ANR	2786448	Identifier	string		2784591	0					
ANR	2786449	IncDec	++		2784591	1					
ANR	2786450	IfStatement	if ( * string == '\\0' )		2784591	4					
ANR	2786451	Condition	* string == '\\0'	1131:9:27852:27866	2784591	0	True				
ANR	2786452	EqualityExpression	* string == '\\0'		2784591	0		==			
ANR	2786453	UnaryOperationExpression	* string		2784591	0					
ANR	2786454	UnaryOperator	*		2784591	0					
ANR	2786455	Identifier	string		2784591	1					
ANR	2786456	PrimaryExpression	'\\0'		2784591	1					
ANR	2786457	CompoundStatement		551:26:12152:12152	2784591	1					
ANR	2786458	BreakStatement	break ;	1132:6:27877:27882	2784591	0	True				
ANR	2786459	IfStatement	if ( flags & SCAN_NODIGITS )		2784591	23					
ANR	2786460	Condition	flags & SCAN_NODIGITS	1140:8:28009:28029	2784591	0	True				
ANR	2786461	BitAndExpression	flags & SCAN_NODIGITS		2784591	0		&			
ANR	2786462	Identifier	flags		2784591	0					
ANR	2786463	Identifier	SCAN_NODIGITS		2784591	1					
ANR	2786464	CompoundStatement		560:31:12315:12315	2784591	1					
ANR	2786465	IfStatement	if ( flags & SCAN_EXPOK )		2784591	0					
ANR	2786466	Condition	flags & SCAN_EXPOK	1141:9:28043:28060	2784591	0	True				
ANR	2786467	BitAndExpression	flags & SCAN_EXPOK		2784591	0		&			
ANR	2786468	Identifier	flags		2784591	0					
ANR	2786469	Identifier	SCAN_EXPOK		2784591	1					
ANR	2786470	CompoundStatement		561:29:12346:12346	2784591	1					
ANR	2786471	IfStatement	if ( * string == '\\0' )		2784591	0					
ANR	2786472	Condition	* string == '\\0'	1146:10:28180:28194	2784591	0	True				
ANR	2786473	EqualityExpression	* string == '\\0'		2784591	0		==			
ANR	2786474	UnaryOperationExpression	* string		2784591	0					
ANR	2786475	UnaryOperator	*		2784591	0					
ANR	2786476	Identifier	string		2784591	1					
ANR	2786477	PrimaryExpression	'\\0'		2784591	1					
ANR	2786478	CompoundStatement		566:27:12480:12480	2784591	1					
ANR	2786479	ExpressionStatement	underflow = 1	1147:7:28206:28219	2784591	0	True				
ANR	2786480	AssignmentExpression	underflow = 1		2784591	0		=			
ANR	2786481	Identifier	underflow		2784591	0					
ANR	2786482	PrimaryExpression	1		2784591	1					
ANR	2786483	GotoStatement	goto done ;	1149:6:28235:28244	2784591	1	True				
ANR	2786484	Identifier	done		2784591	0					
ANR	2786485	ExpressionStatement	end --	1155:5:28330:28335	2784591	1	True				
ANR	2786486	PostIncDecOperationExpression	end --		2784591	0					
ANR	2786487	Identifier	end		2784591	0					
ANR	2786488	IncDec	--		2784591	1					
ANR	2786489	ExpressionStatement	string --	1156:5:28342:28350	2784591	2	True				
ANR	2786490	PostIncDecOperationExpression	string --		2784591	0					
ANR	2786491	Identifier	string		2784591	0					
ANR	2786492	IncDec	--		2784591	1					
ANR	2786493	IfStatement	if ( * end != 'e' && * end != 'E' )		2784591	3					
ANR	2786494	Condition	* end != 'e' && * end != 'E'	1157:9:28361:28386	2784591	0	True				
ANR	2786495	AndExpression	* end != 'e' && * end != 'E'		2784591	0		&&			
ANR	2786496	EqualityExpression	* end != 'e'		2784591	0		!=			
ANR	2786497	UnaryOperationExpression	* end		2784591	0					
ANR	2786498	UnaryOperator	*		2784591	0					
ANR	2786499	Identifier	end		2784591	1					
ANR	2786500	PrimaryExpression	'e'		2784591	1					
ANR	2786501	EqualityExpression	* end != 'E'		2784591	1		!=			
ANR	2786502	UnaryOperationExpression	* end		2784591	0					
ANR	2786503	UnaryOperator	*		2784591	0					
ANR	2786504	Identifier	end		2784591	1					
ANR	2786505	PrimaryExpression	'E'		2784591	1					
ANR	2786506	CompoundStatement		577:37:12672:12672	2784591	1					
ANR	2786507	ExpressionStatement	end --	1158:6:28397:28402	2784591	0	True				
ANR	2786508	PostIncDecOperationExpression	end --		2784591	0					
ANR	2786509	Identifier	end		2784591	0					
ANR	2786510	IncDec	--		2784591	1					
ANR	2786511	ExpressionStatement	string --	1159:6:28410:28418	2784591	1	True				
ANR	2786512	PostIncDecOperationExpression	string --		2784591	0					
ANR	2786513	Identifier	string		2784591	0					
ANR	2786514	IncDec	--		2784591	1					
ANR	2786515	IfStatement	if ( ! ( flags & SCAN_SUPPRESS ) )		2784591	24					
ANR	2786516	Condition	! ( flags & SCAN_SUPPRESS )	1166:8:28506:28529	2784591	0	True				
ANR	2786517	UnaryOperationExpression	! ( flags & SCAN_SUPPRESS )		2784591	0					
ANR	2786518	UnaryOperator	!		2784591	0					
ANR	2786519	BitAndExpression	flags & SCAN_SUPPRESS		2784591	1		&			
ANR	2786520	Identifier	flags		2784591	0					
ANR	2786521	Identifier	SCAN_SUPPRESS		2784591	1					
ANR	2786522	CompoundStatement		587:5:12822:12835	2784591	1					
ANR	2786523	IdentifierDeclStatement	double dvalue ;	1167:5:28539:28552	2784591	0	True				
ANR	2786524	IdentifierDecl	dvalue		2784591	0					
ANR	2786525	IdentifierDeclType	double		2784591	0					
ANR	2786526	Identifier	dvalue		2784591	1					
ANR	2786527	ExpressionStatement	* end = '\\0'	1168:5:28559:28570	2784591	1	True				
ANR	2786528	AssignmentExpression	* end = '\\0'		2784591	0		=			
ANR	2786529	UnaryOperationExpression	* end		2784591	0					
ANR	2786530	UnaryOperator	*		2784591	0					
ANR	2786531	Identifier	end		2784591	1					
ANR	2786532	PrimaryExpression	'\\0'		2784591	1					
ANR	2786533	ExpressionStatement	"dvalue = zend_strtod ( buf , NULL )"	1169:5:28577:28608	2784591	2	True				
ANR	2786534	AssignmentExpression	"dvalue = zend_strtod ( buf , NULL )"		2784591	0		=			
ANR	2786535	Identifier	dvalue		2784591	0					
ANR	2786536	CallExpression	"zend_strtod ( buf , NULL )"		2784591	1					
ANR	2786537	Callee	zend_strtod		2784591	0					
ANR	2786538	Identifier	zend_strtod		2784591	0					
ANR	2786539	ArgumentList	buf		2784591	1					
ANR	2786540	Argument	buf		2784591	0					
ANR	2786541	Identifier	buf		2784591	0					
ANR	2786542	Argument	NULL		2784591	1					
ANR	2786543	Identifier	NULL		2784591	0					
ANR	2786544	IfStatement	if ( numVars && objIndex >= argCount )		2784591	3					
ANR	2786545	Condition	numVars && objIndex >= argCount	1170:9:28619:28649	2784591	0	True				
ANR	2786546	AndExpression	numVars && objIndex >= argCount		2784591	0		&&			
ANR	2786547	Identifier	numVars		2784591	0					
ANR	2786548	RelationalExpression	objIndex >= argCount		2784591	1		>=			
ANR	2786549	Identifier	objIndex		2784591	0					
ANR	2786550	Identifier	argCount		2784591	1					
ANR	2786551	CompoundStatement		590:42:12935:12935	2784591	1					
ANR	2786552	BreakStatement	break ;	1171:6:28660:28665	2784591	0	True				
ANR	2786553	ElseStatement	else		2784591	0					
ANR	2786554	IfStatement	if ( numVars )		2784591	0					
ANR	2786555	Condition	numVars	1172:16:28683:28689	2784591	0	True				
ANR	2786556	Identifier	numVars		2784591	0					
ANR	2786557	CompoundStatement		592:25:12975:12975	2784591	1					
ANR	2786558	ExpressionStatement	current = Z_REFVAL ( args [ objIndex ++ ] )	1173:6:28700:28736	2784591	0	True				
ANR	2786559	AssignmentExpression	current = Z_REFVAL ( args [ objIndex ++ ] )		2784591	0		=			
ANR	2786560	Identifier	current		2784591	0					
ANR	2786561	CallExpression	Z_REFVAL ( args [ objIndex ++ ] )		2784591	1					
ANR	2786562	Callee	Z_REFVAL		2784591	0					
ANR	2786563	Identifier	Z_REFVAL		2784591	0					
ANR	2786564	ArgumentList	args [ objIndex ++ ]		2784591	1					
ANR	2786565	Argument	args [ objIndex ++ ]		2784591	0					
ANR	2786566	ArrayIndexing	args [ objIndex ++ ]		2784591	0					
ANR	2786567	Identifier	args		2784591	0					
ANR	2786568	PostIncDecOperationExpression	objIndex ++		2784591	1					
ANR	2786569	Identifier	objIndex		2784591	0					
ANR	2786570	IncDec	++		2784591	1					
ANR	2786571	ExpressionStatement	zval_ptr_dtor ( current )	1174:6:28744:28766	2784591	1	True				
ANR	2786572	CallExpression	zval_ptr_dtor ( current )		2784591	0					
ANR	2786573	Callee	zval_ptr_dtor		2784591	0					
ANR	2786574	Identifier	zval_ptr_dtor		2784591	0					
ANR	2786575	ArgumentList	current		2784591	1					
ANR	2786576	Argument	current		2784591	0					
ANR	2786577	Identifier	current		2784591	0					
ANR	2786578	ExpressionStatement	"ZVAL_DOUBLE ( current , dvalue )"	1175:6:28774:28802	2784591	2	True				
ANR	2786579	CallExpression	"ZVAL_DOUBLE ( current , dvalue )"		2784591	0					
ANR	2786580	Callee	ZVAL_DOUBLE		2784591	0					
ANR	2786581	Identifier	ZVAL_DOUBLE		2784591	0					
ANR	2786582	ArgumentList	current		2784591	1					
ANR	2786583	Argument	current		2784591	0					
ANR	2786584	Identifier	current		2784591	0					
ANR	2786585	Argument	dvalue		2784591	1					
ANR	2786586	Identifier	dvalue		2784591	0					
ANR	2786587	ElseStatement	else		2784591	0					
ANR	2786588	CompoundStatement		596:12:13099:13099	2784591	0					
ANR	2786589	ExpressionStatement	"add_index_double ( return_value , objIndex ++ , dvalue )"	1177:6:28824:28875	2784591	0	True				
ANR	2786590	CallExpression	"add_index_double ( return_value , objIndex ++ , dvalue )"		2784591	0					
ANR	2786591	Callee	add_index_double		2784591	0					
ANR	2786592	Identifier	add_index_double		2784591	0					
ANR	2786593	ArgumentList	return_value		2784591	1					
ANR	2786594	Argument	return_value		2784591	0					
ANR	2786595	Identifier	return_value		2784591	0					
ANR	2786596	Argument	objIndex ++		2784591	1					
ANR	2786597	PostIncDecOperationExpression	objIndex ++		2784591	0					
ANR	2786598	Identifier	objIndex		2784591	0					
ANR	2786599	IncDec	++		2784591	1					
ANR	2786600	Argument	dvalue		2784591	2					
ANR	2786601	Identifier	dvalue		2784591	0					
ANR	2786602	BreakStatement	break ;	1180:4:28894:28899	2784591	25	True				
ANR	2786603	ExpressionStatement	nconversions ++	1182:2:28925:28939	2784591	13	True				
ANR	2786604	PostIncDecOperationExpression	nconversions ++		2784591	0					
ANR	2786605	Identifier	nconversions		2784591	0					
ANR	2786606	IncDec	++		2784591	1					
ANR	2786607	Label	done :	1185:0:28976:28980	2784591	25	True				
ANR	2786608	Identifier	done		2784591	0					
ANR	2786609	ExpressionStatement	result = SCAN_SUCCESS	1186:1:28983:29004	2784591	26	True				
ANR	2786610	AssignmentExpression	result = SCAN_SUCCESS		2784591	0		=			
ANR	2786611	Identifier	result		2784591	0					
ANR	2786612	Identifier	SCAN_SUCCESS		2784591	1					
ANR	2786613	IfStatement	if ( underflow && ( 0 == nconversions ) )		2784591	27					
ANR	2786614	Condition	underflow && ( 0 == nconversions )	1188:5:29012:29041	2784591	0	True				
ANR	2786615	AndExpression	underflow && ( 0 == nconversions )		2784591	0		&&			
ANR	2786616	Identifier	underflow		2784591	0					
ANR	2786617	EqualityExpression	0 == nconversions		2784591	1		==			
ANR	2786618	PrimaryExpression	0		2784591	0					
ANR	2786619	Identifier	nconversions		2784591	1					
ANR	2786620	CompoundStatement		608:37:13327:13327	2784591	1					
ANR	2786621	ExpressionStatement	"scan_set_error_return ( numVars , return_value )"	1189:2:29048:29094	2784591	0	True				
ANR	2786622	CallExpression	"scan_set_error_return ( numVars , return_value )"		2784591	0					
ANR	2786623	Callee	scan_set_error_return		2784591	0					
ANR	2786624	Identifier	scan_set_error_return		2784591	0					
ANR	2786625	ArgumentList	numVars		2784591	1					
ANR	2786626	Argument	numVars		2784591	0					
ANR	2786627	Identifier	numVars		2784591	0					
ANR	2786628	Argument	return_value		2784591	1					
ANR	2786629	Identifier	return_value		2784591	0					
ANR	2786630	ExpressionStatement	result = SCAN_ERROR_EOF	1190:2:29098:29121	2784591	1	True				
ANR	2786631	AssignmentExpression	result = SCAN_ERROR_EOF		2784591	0		=			
ANR	2786632	Identifier	result		2784591	0					
ANR	2786633	Identifier	SCAN_ERROR_EOF		2784591	1					
ANR	2786634	ElseStatement	else		2784591	0					
ANR	2786635	IfStatement	if ( numVars )		2784591	0					
ANR	2786636	Condition	numVars	1191:12:29135:29141	2784591	0	True				
ANR	2786637	Identifier	numVars		2784591	0					
ANR	2786638	CompoundStatement		611:21:13427:13427	2784591	1					
ANR	2786639	ExpressionStatement	convert_to_long ( return_value )	1192:2:29148:29178	2784591	0	True				
ANR	2786640	CallExpression	convert_to_long ( return_value )		2784591	0					
ANR	2786641	Callee	convert_to_long		2784591	0					
ANR	2786642	Identifier	convert_to_long		2784591	0					
ANR	2786643	ArgumentList	return_value		2784591	1					
ANR	2786644	Argument	return_value		2784591	0					
ANR	2786645	Identifier	return_value		2784591	0					
ANR	2786646	ExpressionStatement	Z_LVAL_P ( return_value ) = nconversions	1193:2:29182:29219	2784591	1	True				
ANR	2786647	AssignmentExpression	Z_LVAL_P ( return_value ) = nconversions		2784591	0		=			
ANR	2786648	CallExpression	Z_LVAL_P ( return_value )		2784591	0					
ANR	2786649	Callee	Z_LVAL_P		2784591	0					
ANR	2786650	Identifier	Z_LVAL_P		2784591	0					
ANR	2786651	ArgumentList	return_value		2784591	1					
ANR	2786652	Argument	return_value		2784591	0					
ANR	2786653	Identifier	return_value		2784591	0					
ANR	2786654	Identifier	nconversions		2784591	1					
ANR	2786655	ElseStatement	else		2784591	0					
ANR	2786656	IfStatement	if ( nconversions < totalVars )		2784591	0					
ANR	2786657	Condition	nconversions < totalVars	1194:12:29233:29256	2784591	0	True				
ANR	2786658	RelationalExpression	nconversions < totalVars		2784591	0		<			
ANR	2786659	Identifier	nconversions		2784591	0					
ANR	2786660	Identifier	totalVars		2784591	1					
ANR	2786661	CompoundStatement		614:38:13542:13542	2784591	1					
ANR	2786662	ReturnStatement	return result ;	1197:1:29338:29351	2784591	28	True				
ANR	2786663	Identifier	result		2784591	0					
ANR	2786664	ReturnType	PHPAPI int		2784591	1					
ANR	2786665	Identifier	php_sscanf_internal		2784591	2					
ANR	2786666	ParameterList	"char * string , char * format , int argCount , zval * args , int varStart , zval * return_value"		2784591	3					
ANR	2786667	Parameter	char * string	578:32:15620:15631	2784591	0	True				
ANR	2786668	ParameterType	char *		2784591	0					
ANR	2786669	Identifier	string		2784591	1					
ANR	2786670	Parameter	char * format	578:46:15634:15645	2784591	1	True				
ANR	2786671	ParameterType	char *		2784591	0					
ANR	2786672	Identifier	format		2784591	1					
ANR	2786673	Parameter	int argCount	579:4:15652:15663	2784591	2	True				
ANR	2786674	ParameterType	int		2784591	0					
ANR	2786675	Identifier	argCount		2784591	1					
ANR	2786676	Parameter	zval * args	579:18:15666:15675	2784591	3	True				
ANR	2786677	ParameterType	zval *		2784591	0					
ANR	2786678	Identifier	args		2784591	1					
ANR	2786679	Parameter	int varStart	580:4:15682:15693	2784591	4	True				
ANR	2786680	ParameterType	int		2784591	0					
ANR	2786681	Identifier	varStart		2784591	1					
ANR	2786682	Parameter	zval * return_value	580:18:15696:15713	2784591	5	True				
ANR	2786683	ParameterType	zval *		2784591	0					
ANR	2786684	Identifier	return_value		2784591	1					
ANR	2786685	CFGEntryNode	ENTRY		2784591		True				
ANR	2786686	CFGExitNode	EXIT		2784591		True				
ANR	2786687	Symbol	baseString		2784591						
ANR	2786688	Symbol	totalVars		2784591						
ANR	2786689	Symbol	* ch		2784591						
ANR	2786690	Symbol	SCAN_NOZERO		2784591						
ANR	2786691	Symbol	SCAN_ERROR_INVALID_FORMAT		2784591						
ANR	2786692	Symbol	* args		2784591						
ANR	2786693	Symbol	& cset		2784591						
ANR	2786694	Symbol	tmp		2784591						
ANR	2786695	Symbol	ZEND_STRTOUL		2784591						
ANR	2786696	Symbol	sch		2784591						
ANR	2786697	Symbol	isdigit		2784591						
ANR	2786698	Symbol	~SCAN_SIGNOK		2784591						
ANR	2786699	Symbol	SCAN_SUCCESS		2784591						
ANR	2786700	Symbol	* buf		2784591						
ANR	2786701	Symbol	NULL		2784591						
ANR	2786702	Symbol	~SCAN_XOK		2784591						
ANR	2786703	Symbol	& format		2784591						
ANR	2786704	Symbol	argCount		2784591						
ANR	2786705	Symbol	SCAN_NOSKIP		2784591						
ANR	2786706	Symbol	format		2784591						
ANR	2786707	Symbol	isspace		2784591						
ANR	2786708	Symbol	varStart		2784591						
ANR	2786709	Symbol	& totalVars		2784591						
ANR	2786710	Symbol	cset		2784591						
ANR	2786711	Symbol	* string ++		2784591						
ANR	2786712	Symbol	* format		2784591						
ANR	2786713	Symbol	* end ++		2784591						
ANR	2786714	Symbol	& tmp		2784591						
ANR	2786715	Symbol	* end		2784591						
ANR	2786716	Symbol	underflow		2784591						
ANR	2786717	Symbol	add_next_index_zval		2784591						
ANR	2786718	Symbol	SCAN_NODIGITS		2784591						
ANR	2786719	Symbol	return_value		2784591						
ANR	2786720	Symbol	string		2784591						
ANR	2786721	Symbol	objIndex		2784591						
ANR	2786722	Symbol	& end		2784591						
ANR	2786723	Symbol	Z_REFVAL		2784591						
ANR	2786724	Symbol	CharInSet		2784591						
ANR	2786725	Symbol	fn		2784591						
ANR	2786726	Symbol	flags		2784591						
ANR	2786727	Symbol	* string		2784591						
ANR	2786728	Symbol	SCAN_SIGNOK		2784591						
ANR	2786729	Symbol	SCAN_EXPOK		2784591						
ANR	2786730	Symbol	SCAN_ERROR_EOF		2784591						
ANR	2786731	Symbol	zend_strtod		2784591						
ANR	2786732	Symbol	result		2784591						
ANR	2786733	Symbol	E_WARNING		2784591						
ANR	2786734	Symbol	SCAN_ERROR_VAR_PASSED_BYVAL		2784591						
ANR	2786735	Symbol	current		2784591						
ANR	2786736	Symbol	ZEND_ULONG_FMT		2784591						
ANR	2786737	Symbol	SCAN_XOK		2784591						
ANR	2786738	Symbol	end		2784591						
ANR	2786739	Symbol	nconversions		2784591						
ANR	2786740	Symbol	Z_ISREF		2784591						
ANR	2786741	Symbol	dvalue		2784591						
ANR	2786742	Symbol	value		2784591						
ANR	2786743	Symbol	op		2784591						
ANR	2786744	Symbol	SCAN_SUPPRESS		2784591						
ANR	2786745	Symbol	ch		2784591						
ANR	2786746	Symbol	UCHAR		2784591						
ANR	2786747	Symbol	i		2784591						
ANR	2786748	Symbol	ValidateFormat		2784591						
ANR	2786749	Symbol	SCAN_PTOK		2784591						
ANR	2786750	Symbol	FAILURE		2784591						
ANR	2786751	Symbol	* fn		2784591						
ANR	2786752	Symbol	numVars		2784591						
ANR	2786753	Symbol	Z_LVAL_P		2784591						
ANR	2786754	Symbol	args		2784591						
ANR	2786755	Symbol	buf		2784591						
ANR	2786756	Symbol	~0		2784591						
ANR	2786757	Symbol	* i		2784591						
ANR	2786758	Symbol	SCAN_UNSIGNED		2784591						
ANR	2786759	Symbol	BuildCharSet		2784591						
ANR	2786760	Symbol	width		2784591						
ANR	2786761	Symbol	SCAN_MAX_ARGS		2784591						
ANR	2786762	Symbol	base		2784591						
ANR	2786763	Function	scan_set_error_return	1202:0:29429:29679							
ANR	2786764	FunctionDef	"scan_set_error_return (int numVars , zval * return_value)"		2786763	0					
ANR	2786765	CompoundStatement		1203:0:29513:29679	2786763	0					
ANR	2786766	IfStatement	if ( numVars )		2786763	0					
ANR	2786767	Condition	numVars	1204:5:29520:29526	2786763	0	True				
ANR	2786768	Identifier	numVars		2786763	0					
ANR	2786769	CompoundStatement		2:14:15:15	2786763	1					
ANR	2786770	ExpressionStatement	"ZVAL_LONG ( return_value , SCAN_ERROR_EOF )"	1205:2:29533:29572	2786763	0	True				
ANR	2786771	CallExpression	"ZVAL_LONG ( return_value , SCAN_ERROR_EOF )"		2786763	0					
ANR	2786772	Callee	ZVAL_LONG		2786763	0					
ANR	2786773	Identifier	ZVAL_LONG		2786763	0					
ANR	2786774	ArgumentList	return_value		2786763	1					
ANR	2786775	Argument	return_value		2786763	0					
ANR	2786776	Identifier	return_value		2786763	0					
ANR	2786777	Argument	SCAN_ERROR_EOF		2786763	1					
ANR	2786778	Identifier	SCAN_ERROR_EOF		2786763	0					
ANR	2786779	ElseStatement	else		2786763	0					
ANR	2786780	CompoundStatement		4:8:86:86	2786763	0					
ANR	2786781	ExpressionStatement	convert_to_null ( return_value )	1208:2:29645:29674	2786763	0	True				
ANR	2786782	CallExpression	convert_to_null ( return_value )		2786763	0					
ANR	2786783	Callee	convert_to_null		2786763	0					
ANR	2786784	Identifier	convert_to_null		2786763	0					
ANR	2786785	ArgumentList	return_value		2786763	1					
ANR	2786786	Argument	return_value		2786763	0					
ANR	2786787	Identifier	return_value		2786763	0					
ANR	2786788	ReturnType	static inline void		2786763	1					
ANR	2786789	Identifier	scan_set_error_return		2786763	2					
ANR	2786790	ParameterList	"int numVars , zval * return_value"		2786763	3					
ANR	2786791	Parameter	int numVars	1202:41:29470:29480	2786763	0	True				
ANR	2786792	ParameterType	int		2786763	0					
ANR	2786793	Identifier	numVars		2786763	1					
ANR	2786794	Parameter	zval * return_value	1202:54:29483:29500	2786763	1	True				
ANR	2786795	ParameterType	zval *		2786763	0					
ANR	2786796	Identifier	return_value		2786763	1					
ANR	2786797	CFGEntryNode	ENTRY		2786763		True				
ANR	2786798	CFGExitNode	EXIT		2786763		True				
ANR	2786799	Symbol	return_value		2786763						
ANR	2786800	Symbol	SCAN_ERROR_EOF		2786763						
ANR	2786801	Symbol	numVars		2786763						
