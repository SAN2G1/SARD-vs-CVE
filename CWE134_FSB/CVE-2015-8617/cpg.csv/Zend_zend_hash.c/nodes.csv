command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	190055	File	data/converged/CVE-2015-8617_php-src/Zend_zend_hash.c								
ANR	190056	Function	_zend_is_inconsistent	43:0:1656:2333							
ANR	190057	FunctionDef	"_zend_is_inconsistent (const HashTable * ht , const char * file , int line)"		190056	0					
ANR	190058	CompoundStatement		44:0:1739:2333	190056	0					
ANR	190059	IfStatement	if ( ( ht -> u . flags & HASH_MASK_CONSISTENCY ) == HT_OK )		190056	0					
ANR	190060	Condition	( ht -> u . flags & HASH_MASK_CONSISTENCY ) == HT_OK	45:5:1746:1791	190056	0	True				
ANR	190061	EqualityExpression	( ht -> u . flags & HASH_MASK_CONSISTENCY ) == HT_OK		190056	0		==			
ANR	190062	BitAndExpression	ht -> u . flags & HASH_MASK_CONSISTENCY		190056	0		&			
ANR	190063	MemberAccess	ht -> u . flags		190056	0					
ANR	190064	PtrMemberAccess	ht -> u		190056	0					
ANR	190065	Identifier	ht		190056	0					
ANR	190066	Identifier	u		190056	1					
ANR	190067	Identifier	flags		190056	1					
ANR	190068	Identifier	HASH_MASK_CONSISTENCY		190056	1					
ANR	190069	Identifier	HT_OK		190056	1					
ANR	190070	CompoundStatement		2:53:54:54	190056	1					
ANR	190071	ReturnStatement	return ;	46:2:1798:1804	190056	0	True				
ANR	190072	SwitchStatement	switch ( ( ht -> u . flags & HASH_MASK_CONSISTENCY ) )		190056	1					
ANR	190073	Condition	ht -> u . flags & HASH_MASK_CONSISTENCY	48:9:1818:1854	190056	0	True				
ANR	190074	BitAndExpression	ht -> u . flags & HASH_MASK_CONSISTENCY		190056	0		&			
ANR	190075	MemberAccess	ht -> u . flags		190056	0					
ANR	190076	PtrMemberAccess	ht -> u		190056	0					
ANR	190077	Identifier	ht		190056	0					
ANR	190078	Identifier	u		190056	1					
ANR	190079	Identifier	flags		190056	1					
ANR	190080	Identifier	HASH_MASK_CONSISTENCY		190056	1					
ANR	190081	CompoundStatement		5:48:117:117	190056	1					
ANR	190082	Label	case HT_IS_DESTROYING :	49:2:1861:1882	190056	0	True				
ANR	190083	Identifier	HT_IS_DESTROYING		190056	0					
ANR	190084	ExpressionStatement	"zend_output_debug_string ( 1 , ""%s(%d) : ht=%p is being destroyed"" , file , line , ht )"	50:3:1887:1967	190056	1	True				
ANR	190085	CallExpression	"zend_output_debug_string ( 1 , ""%s(%d) : ht=%p is being destroyed"" , file , line , ht )"		190056	0					
ANR	190086	Callee	zend_output_debug_string		190056	0					
ANR	190087	Identifier	zend_output_debug_string		190056	0					
ANR	190088	ArgumentList	1		190056	1					
ANR	190089	Argument	1		190056	0					
ANR	190090	PrimaryExpression	1		190056	0					
ANR	190091	Argument	"""%s(%d) : ht=%p is being destroyed"""		190056	1					
ANR	190092	PrimaryExpression	"""%s(%d) : ht=%p is being destroyed"""		190056	0					
ANR	190093	Argument	file		190056	2					
ANR	190094	Identifier	file		190056	0					
ANR	190095	Argument	line		190056	3					
ANR	190096	Identifier	line		190056	0					
ANR	190097	Argument	ht		190056	4					
ANR	190098	Identifier	ht		190056	0					
ANR	190099	BreakStatement	break ;	51:3:1972:1977	190056	2	True				
ANR	190100	Label	case HT_DESTROYED :	52:2:1981:1998	190056	3	True				
ANR	190101	Identifier	HT_DESTROYED		190056	0					
ANR	190102	ExpressionStatement	"zend_output_debug_string ( 1 , ""%s(%d) : ht=%p is already destroyed"" , file , line , ht )"	53:3:2003:2085	190056	4	True				
ANR	190103	CallExpression	"zend_output_debug_string ( 1 , ""%s(%d) : ht=%p is already destroyed"" , file , line , ht )"		190056	0					
ANR	190104	Callee	zend_output_debug_string		190056	0					
ANR	190105	Identifier	zend_output_debug_string		190056	0					
ANR	190106	ArgumentList	1		190056	1					
ANR	190107	Argument	1		190056	0					
ANR	190108	PrimaryExpression	1		190056	0					
ANR	190109	Argument	"""%s(%d) : ht=%p is already destroyed"""		190056	1					
ANR	190110	PrimaryExpression	"""%s(%d) : ht=%p is already destroyed"""		190056	0					
ANR	190111	Argument	file		190056	2					
ANR	190112	Identifier	file		190056	0					
ANR	190113	Argument	line		190056	3					
ANR	190114	Identifier	line		190056	0					
ANR	190115	Argument	ht		190056	4					
ANR	190116	Identifier	ht		190056	0					
ANR	190117	BreakStatement	break ;	54:3:2090:2095	190056	5	True				
ANR	190118	Label	case HT_CLEANING :	55:2:2099:2115	190056	6	True				
ANR	190119	Identifier	HT_CLEANING		190056	0					
ANR	190120	ExpressionStatement	"zend_output_debug_string ( 1 , ""%s(%d) : ht=%p is being cleaned"" , file , line , ht )"	56:3:2120:2198	190056	7	True				
ANR	190121	CallExpression	"zend_output_debug_string ( 1 , ""%s(%d) : ht=%p is being cleaned"" , file , line , ht )"		190056	0					
ANR	190122	Callee	zend_output_debug_string		190056	0					
ANR	190123	Identifier	zend_output_debug_string		190056	0					
ANR	190124	ArgumentList	1		190056	1					
ANR	190125	Argument	1		190056	0					
ANR	190126	PrimaryExpression	1		190056	0					
ANR	190127	Argument	"""%s(%d) : ht=%p is being cleaned"""		190056	1					
ANR	190128	PrimaryExpression	"""%s(%d) : ht=%p is being cleaned"""		190056	0					
ANR	190129	Argument	file		190056	2					
ANR	190130	Identifier	file		190056	0					
ANR	190131	Argument	line		190056	3					
ANR	190132	Identifier	line		190056	0					
ANR	190133	Argument	ht		190056	4					
ANR	190134	Identifier	ht		190056	0					
ANR	190135	BreakStatement	break ;	57:3:2203:2208	190056	8	True				
ANR	190136	Label	default :	58:2:2212:2219	190056	9	True				
ANR	190137	Identifier	default		190056	0					
ANR	190138	ExpressionStatement	"zend_output_debug_string ( 1 , ""%s(%d) : ht=%p is inconsistent"" , file , line , ht )"	59:3:2224:2301	190056	10	True				
ANR	190139	CallExpression	"zend_output_debug_string ( 1 , ""%s(%d) : ht=%p is inconsistent"" , file , line , ht )"		190056	0					
ANR	190140	Callee	zend_output_debug_string		190056	0					
ANR	190141	Identifier	zend_output_debug_string		190056	0					
ANR	190142	ArgumentList	1		190056	1					
ANR	190143	Argument	1		190056	0					
ANR	190144	PrimaryExpression	1		190056	0					
ANR	190145	Argument	"""%s(%d) : ht=%p is inconsistent"""		190056	1					
ANR	190146	PrimaryExpression	"""%s(%d) : ht=%p is inconsistent"""		190056	0					
ANR	190147	Argument	file		190056	2					
ANR	190148	Identifier	file		190056	0					
ANR	190149	Argument	line		190056	3					
ANR	190150	Identifier	line		190056	0					
ANR	190151	Argument	ht		190056	4					
ANR	190152	Identifier	ht		190056	0					
ANR	190153	BreakStatement	break ;	60:3:2306:2311	190056	11	True				
ANR	190154	ExpressionStatement	zend_bailout ( )	62:1:2317:2331	190056	2	True				
ANR	190155	CallExpression	zend_bailout ( )		190056	0					
ANR	190156	Callee	zend_bailout		190056	0					
ANR	190157	Identifier	zend_bailout		190056	0					
ANR	190158	ArgumentList			190056	1					
ANR	190159	ReturnType	static void		190056	1					
ANR	190160	Identifier	_zend_is_inconsistent		190056	2					
ANR	190161	ParameterList	"const HashTable * ht , const char * file , int line"		190056	3					
ANR	190162	Parameter	const HashTable * ht	43:34:1690:1708	190056	0	True				
ANR	190163	ParameterType	const HashTable *		190056	0					
ANR	190164	Identifier	ht		190056	1					
ANR	190165	Parameter	const char * file	43:55:1711:1726	190056	1	True				
ANR	190166	ParameterType	const char *		190056	0					
ANR	190167	Identifier	file		190056	1					
ANR	190168	Parameter	int line	43:73:1729:1736	190056	2	True				
ANR	190169	ParameterType	int		190056	0					
ANR	190170	Identifier	line		190056	1					
ANR	190171	CFGEntryNode	ENTRY		190056		True				
ANR	190172	CFGExitNode	EXIT		190056		True				
ANR	190173	Symbol	* ht		190056						
ANR	190174	Symbol	HT_OK		190056						
ANR	190175	Symbol	file		190056						
ANR	190176	Symbol	line		190056						
ANR	190177	Symbol	HASH_MASK_CONSISTENCY		190056						
ANR	190178	Symbol	ht -> u		190056						
ANR	190179	Symbol	ht -> u . flags		190056						
ANR	190180	Symbol	ht		190056						
ANR	190181	DeclStmt									
ANR	190182	Decl							void ZEND_FASTCALL	void ZEND_FASTCALL ( HashTable * ht )	zend_hash_do_resize
ANR	190183	Function	zend_hash_check_size	93:0:3249:4272							
ANR	190184	FunctionDef	zend_hash_check_size (uint32_t nSize)		190183	0					
ANR	190185	CompoundStatement		94:0:3321:4272	190183	0					
ANR	190186	IdentifierDeclStatement	unsigned long index ;	96:1:3348:3367	190183	0	True				
ANR	190187	IdentifierDecl	index		190183	0					
ANR	190188	IdentifierDeclType	unsigned long		190183	0					
ANR	190189	Identifier	index		190183	1					
ANR	190190	IfStatement	if ( nSize < HT_MIN_SIZE )		190183	1					
ANR	190191	Condition	nSize < HT_MIN_SIZE	101:5:3473:3491	190183	0	True				
ANR	190192	RelationalExpression	nSize < HT_MIN_SIZE		190183	0		<			
ANR	190193	Identifier	nSize		190183	0					
ANR	190194	Identifier	HT_MIN_SIZE		190183	1					
ANR	190195	CompoundStatement		8:26:172:172	190183	1					
ANR	190196	ExpressionStatement	nSize = HT_MIN_SIZE	102:2:3498:3517	190183	0	True				
ANR	190197	AssignmentExpression	nSize = HT_MIN_SIZE		190183	0		=			
ANR	190198	Identifier	nSize		190183	0					
ANR	190199	Identifier	HT_MIN_SIZE		190183	1					
ANR	190200	ElseStatement	else		190183	0					
ANR	190201	IfStatement	if ( UNEXPECTED ( nSize >= HT_MAX_SIZE ) )		190183	0					
ANR	190202	Condition	UNEXPECTED ( nSize >= HT_MAX_SIZE )	103:12:3531:3562	190183	0	True				
ANR	190203	CallExpression	UNEXPECTED ( nSize >= HT_MAX_SIZE )		190183	0					
ANR	190204	Callee	UNEXPECTED		190183	0					
ANR	190205	Identifier	UNEXPECTED		190183	0					
ANR	190206	ArgumentList	nSize >= HT_MAX_SIZE		190183	1					
ANR	190207	Argument	nSize >= HT_MAX_SIZE		190183	0					
ANR	190208	RelationalExpression	nSize >= HT_MAX_SIZE		190183	0		>=			
ANR	190209	Identifier	nSize		190183	0					
ANR	190210	Identifier	HT_MAX_SIZE		190183	1					
ANR	190211	CompoundStatement		10:46:243:243	190183	1					
ANR	190212	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Possible integer overflow in memory allocation (%zu * %zu + %zu)"" , nSize , sizeof ( Bucket ) , sizeof ( Bucket ) )"	104:2:3569:3704	190183	0	True				
ANR	190213	CallExpression	"zend_error_noreturn ( E_ERROR , ""Possible integer overflow in memory allocation (%zu * %zu + %zu)"" , nSize , sizeof ( Bucket ) , sizeof ( Bucket ) )"		190183	0					
ANR	190214	Callee	zend_error_noreturn		190183	0					
ANR	190215	Identifier	zend_error_noreturn		190183	0					
ANR	190216	ArgumentList	E_ERROR		190183	1					
ANR	190217	Argument	E_ERROR		190183	0					
ANR	190218	Identifier	E_ERROR		190183	0					
ANR	190219	Argument	"""Possible integer overflow in memory allocation (%zu * %zu + %zu)"""		190183	1					
ANR	190220	PrimaryExpression	"""Possible integer overflow in memory allocation (%zu * %zu + %zu)"""		190183	0					
ANR	190221	Argument	nSize		190183	2					
ANR	190222	Identifier	nSize		190183	0					
ANR	190223	Argument	sizeof ( Bucket )		190183	3					
ANR	190224	SizeofExpression	sizeof ( Bucket )		190183	0					
ANR	190225	Sizeof	sizeof		190183	0					
ANR	190226	SizeofOperand	Bucket		190183	1					
ANR	190227	Argument	sizeof ( Bucket )		190183	4					
ANR	190228	SizeofExpression	sizeof ( Bucket )		190183	0					
ANR	190229	Sizeof	sizeof		190183	0					
ANR	190230	SizeofOperand	Bucket		190183	1					
ANR	190231	IfStatement	"if ( BitScanReverse ( & index , nSize - 1 ) )"		190183	2					
ANR	190232	Condition	"BitScanReverse ( & index , nSize - 1 )"	108:5:3739:3771	190183	0	True				
ANR	190233	CallExpression	"BitScanReverse ( & index , nSize - 1 )"		190183	0					
ANR	190234	Callee	BitScanReverse		190183	0					
ANR	190235	Identifier	BitScanReverse		190183	0					
ANR	190236	ArgumentList	& index		190183	1					
ANR	190237	Argument	& index		190183	0					
ANR	190238	UnaryOperationExpression	& index		190183	0					
ANR	190239	UnaryOperator	&		190183	0					
ANR	190240	Identifier	index		190183	1					
ANR	190241	Argument	nSize - 1		190183	1					
ANR	190242	AdditiveExpression	nSize - 1		190183	0		-			
ANR	190243	Identifier	nSize		190183	0					
ANR	190244	PrimaryExpression	1		190183	1					
ANR	190245	CompoundStatement		15:40:452:452	190183	1					
ANR	190246	ReturnStatement	return 0x2 << ( ( 31 - index ) ^ 0x1f ) ;	109:2:3778:3813	190183	0	True				
ANR	190247	ShiftExpression	0x2 << ( ( 31 - index ) ^ 0x1f )		190183	0		<<			
ANR	190248	PrimaryExpression	0x2		190183	0					
ANR	190249	ExclusiveOrExpression	( 31 - index ) ^ 0x1f		190183	1		^			
ANR	190250	AdditiveExpression	31 - index		190183	0		-			
ANR	190251	PrimaryExpression	31		190183	0					
ANR	190252	Identifier	index		190183	1					
ANR	190253	PrimaryExpression	0x1f		190183	1					
ANR	190254	ElseStatement	else		190183	0					
ANR	190255	CompoundStatement		17:8:501:501	190183	0					
ANR	190256	ReturnStatement	return nSize ;	113:2:3947:3959	190183	0	True				
ANR	190257	Identifier	nSize		190183	0					
ANR	190258	ReturnType	static uint32_t zend_always_inline		190183	1					
ANR	190259	Identifier	zend_hash_check_size		190183	2					
ANR	190260	ParameterList	uint32_t nSize		190183	3					
ANR	190261	Parameter	uint32_t nSize	93:56:3305:3318	190183	0	True				
ANR	190262	ParameterType	uint32_t		190183	0					
ANR	190263	Identifier	nSize		190183	1					
ANR	190264	CFGEntryNode	ENTRY		190183		True				
ANR	190265	CFGExitNode	EXIT		190183		True				
ANR	190266	Symbol	UNEXPECTED		190183						
ANR	190267	Symbol	HT_MAX_SIZE		190183						
ANR	190268	Symbol	E_ERROR		190183						
ANR	190269	Symbol	BitScanReverse		190183						
ANR	190270	Symbol	index		190183						
ANR	190271	Symbol	nSize		190183						
ANR	190272	Symbol	& index		190183						
ANR	190273	Symbol	HT_MIN_SIZE		190183						
ANR	190274	Function	zend_hash_real_init_ex	128:0:4275:5183							
ANR	190275	FunctionDef	"zend_hash_real_init_ex (HashTable * ht , int packed)"		190274	0					
ANR	190276	CompoundStatement		129:0:4356:5183	190274	0					
ANR	190277	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	130:1:4359:4390	190274	0	True				
ANR	190278	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		190274	0					
ANR	190279	Callee	HT_ASSERT		190274	0					
ANR	190280	Identifier	HT_ASSERT		190274	0					
ANR	190281	ArgumentList	GC_REFCOUNT ( ht ) == 1		190274	1					
ANR	190282	Argument	GC_REFCOUNT ( ht ) == 1		190274	0					
ANR	190283	EqualityExpression	GC_REFCOUNT ( ht ) == 1		190274	0		==			
ANR	190284	CallExpression	GC_REFCOUNT ( ht )		190274	0					
ANR	190285	Callee	GC_REFCOUNT		190274	0					
ANR	190286	Identifier	GC_REFCOUNT		190274	0					
ANR	190287	ArgumentList	ht		190274	1					
ANR	190288	Argument	ht		190274	0					
ANR	190289	Identifier	ht		190274	0					
ANR	190290	PrimaryExpression	1		190274	1					
ANR	190291	ExpressionStatement	ZEND_ASSERT ( ! ( ( ht ) -> u . flags & HASH_FLAG_INITIALIZED ) )	131:1:4393:4446	190274	1	True				
ANR	190292	CallExpression	ZEND_ASSERT ( ! ( ( ht ) -> u . flags & HASH_FLAG_INITIALIZED ) )		190274	0					
ANR	190293	Callee	ZEND_ASSERT		190274	0					
ANR	190294	Identifier	ZEND_ASSERT		190274	0					
ANR	190295	ArgumentList	! ( ( ht ) -> u . flags & HASH_FLAG_INITIALIZED )		190274	1					
ANR	190296	Argument	! ( ( ht ) -> u . flags & HASH_FLAG_INITIALIZED )		190274	0					
ANR	190297	UnaryOperationExpression	! ( ( ht ) -> u . flags & HASH_FLAG_INITIALIZED )		190274	0					
ANR	190298	UnaryOperator	!		190274	0					
ANR	190299	BitAndExpression	( ht ) -> u . flags & HASH_FLAG_INITIALIZED		190274	1		&			
ANR	190300	MemberAccess	( ht ) -> u . flags		190274	0					
ANR	190301	PtrMemberAccess	( ht ) -> u		190274	0					
ANR	190302	Identifier	ht		190274	0					
ANR	190303	Identifier	u		190274	1					
ANR	190304	Identifier	flags		190274	1					
ANR	190305	Identifier	HASH_FLAG_INITIALIZED		190274	1					
ANR	190306	IfStatement	if ( packed )		190274	2					
ANR	190307	Condition	packed	132:5:4453:4458	190274	0	True				
ANR	190308	Identifier	packed		190274	0					
ANR	190309	CompoundStatement		4:13:104:104	190274	1					
ANR	190310	ExpressionStatement	"HT_SET_DATA_ADDR ( ht , pemalloc ( HT_SIZE ( ht ) , ( ht ) -> u . flags & HASH_FLAG_PERSISTENT ) )"	133:2:4465:4546	190274	0	True				
ANR	190311	CallExpression	"HT_SET_DATA_ADDR ( ht , pemalloc ( HT_SIZE ( ht ) , ( ht ) -> u . flags & HASH_FLAG_PERSISTENT ) )"		190274	0					
ANR	190312	Callee	HT_SET_DATA_ADDR		190274	0					
ANR	190313	Identifier	HT_SET_DATA_ADDR		190274	0					
ANR	190314	ArgumentList	ht		190274	1					
ANR	190315	Argument	ht		190274	0					
ANR	190316	Identifier	ht		190274	0					
ANR	190317	Argument	"pemalloc ( HT_SIZE ( ht ) , ( ht ) -> u . flags & HASH_FLAG_PERSISTENT )"		190274	1					
ANR	190318	CallExpression	"pemalloc ( HT_SIZE ( ht ) , ( ht ) -> u . flags & HASH_FLAG_PERSISTENT )"		190274	0					
ANR	190319	Callee	pemalloc		190274	0					
ANR	190320	Identifier	pemalloc		190274	0					
ANR	190321	ArgumentList	HT_SIZE ( ht )		190274	1					
ANR	190322	Argument	HT_SIZE ( ht )		190274	0					
ANR	190323	CallExpression	HT_SIZE ( ht )		190274	0					
ANR	190324	Callee	HT_SIZE		190274	0					
ANR	190325	Identifier	HT_SIZE		190274	0					
ANR	190326	ArgumentList	ht		190274	1					
ANR	190327	Argument	ht		190274	0					
ANR	190328	Identifier	ht		190274	0					
ANR	190329	Argument	( ht ) -> u . flags & HASH_FLAG_PERSISTENT		190274	1					
ANR	190330	BitAndExpression	( ht ) -> u . flags & HASH_FLAG_PERSISTENT		190274	0		&			
ANR	190331	MemberAccess	( ht ) -> u . flags		190274	0					
ANR	190332	PtrMemberAccess	( ht ) -> u		190274	0					
ANR	190333	Identifier	ht		190274	0					
ANR	190334	Identifier	u		190274	1					
ANR	190335	Identifier	flags		190274	1					
ANR	190336	Identifier	HASH_FLAG_PERSISTENT		190274	1					
ANR	190337	ExpressionStatement	( ht ) -> u . flags |= HASH_FLAG_INITIALIZED | HASH_FLAG_PACKED	134:2:4550:4607	190274	1	True				
ANR	190338	AssignmentExpression	( ht ) -> u . flags |= HASH_FLAG_INITIALIZED | HASH_FLAG_PACKED		190274	0		|=			
ANR	190339	MemberAccess	( ht ) -> u . flags		190274	0					
ANR	190340	PtrMemberAccess	( ht ) -> u		190274	0					
ANR	190341	Identifier	ht		190274	0					
ANR	190342	Identifier	u		190274	1					
ANR	190343	Identifier	flags		190274	1					
ANR	190344	InclusiveOrExpression	HASH_FLAG_INITIALIZED | HASH_FLAG_PACKED		190274	1		|			
ANR	190345	Identifier	HASH_FLAG_INITIALIZED		190274	0					
ANR	190346	Identifier	HASH_FLAG_PACKED		190274	1					
ANR	190347	ExpressionStatement	HT_HASH_RESET_PACKED ( ht )	135:2:4611:4635	190274	2	True				
ANR	190348	CallExpression	HT_HASH_RESET_PACKED ( ht )		190274	0					
ANR	190349	Callee	HT_HASH_RESET_PACKED		190274	0					
ANR	190350	Identifier	HT_HASH_RESET_PACKED		190274	0					
ANR	190351	ArgumentList	ht		190274	1					
ANR	190352	Argument	ht		190274	0					
ANR	190353	Identifier	ht		190274	0					
ANR	190354	ElseStatement	else		190274	0					
ANR	190355	CompoundStatement		8:8:288:288	190274	0					
ANR	190356	ExpressionStatement	( ht ) -> nTableMask = - ( ht ) -> nTableSize	137:2:4649:4685	190274	0	True				
ANR	190357	AssignmentExpression	( ht ) -> nTableMask = - ( ht ) -> nTableSize		190274	0		=			
ANR	190358	PtrMemberAccess	( ht ) -> nTableMask		190274	0					
ANR	190359	Identifier	ht		190274	0					
ANR	190360	Identifier	nTableMask		190274	1					
ANR	190361	UnaryOperationExpression	- ( ht ) -> nTableSize		190274	1					
ANR	190362	UnaryOperator	-		190274	0					
ANR	190363	PtrMemberAccess	( ht ) -> nTableSize		190274	1					
ANR	190364	Identifier	ht		190274	0					
ANR	190365	Identifier	nTableSize		190274	1					
ANR	190366	ExpressionStatement	"HT_SET_DATA_ADDR ( ht , pemalloc ( HT_SIZE ( ht ) , ( ht ) -> u . flags & HASH_FLAG_PERSISTENT ) )"	138:2:4689:4770	190274	1	True				
ANR	190367	CallExpression	"HT_SET_DATA_ADDR ( ht , pemalloc ( HT_SIZE ( ht ) , ( ht ) -> u . flags & HASH_FLAG_PERSISTENT ) )"		190274	0					
ANR	190368	Callee	HT_SET_DATA_ADDR		190274	0					
ANR	190369	Identifier	HT_SET_DATA_ADDR		190274	0					
ANR	190370	ArgumentList	ht		190274	1					
ANR	190371	Argument	ht		190274	0					
ANR	190372	Identifier	ht		190274	0					
ANR	190373	Argument	"pemalloc ( HT_SIZE ( ht ) , ( ht ) -> u . flags & HASH_FLAG_PERSISTENT )"		190274	1					
ANR	190374	CallExpression	"pemalloc ( HT_SIZE ( ht ) , ( ht ) -> u . flags & HASH_FLAG_PERSISTENT )"		190274	0					
ANR	190375	Callee	pemalloc		190274	0					
ANR	190376	Identifier	pemalloc		190274	0					
ANR	190377	ArgumentList	HT_SIZE ( ht )		190274	1					
ANR	190378	Argument	HT_SIZE ( ht )		190274	0					
ANR	190379	CallExpression	HT_SIZE ( ht )		190274	0					
ANR	190380	Callee	HT_SIZE		190274	0					
ANR	190381	Identifier	HT_SIZE		190274	0					
ANR	190382	ArgumentList	ht		190274	1					
ANR	190383	Argument	ht		190274	0					
ANR	190384	Identifier	ht		190274	0					
ANR	190385	Argument	( ht ) -> u . flags & HASH_FLAG_PERSISTENT		190274	1					
ANR	190386	BitAndExpression	( ht ) -> u . flags & HASH_FLAG_PERSISTENT		190274	0		&			
ANR	190387	MemberAccess	( ht ) -> u . flags		190274	0					
ANR	190388	PtrMemberAccess	( ht ) -> u		190274	0					
ANR	190389	Identifier	ht		190274	0					
ANR	190390	Identifier	u		190274	1					
ANR	190391	Identifier	flags		190274	1					
ANR	190392	Identifier	HASH_FLAG_PERSISTENT		190274	1					
ANR	190393	ExpressionStatement	( ht ) -> u . flags |= HASH_FLAG_INITIALIZED	139:2:4774:4812	190274	2	True				
ANR	190394	AssignmentExpression	( ht ) -> u . flags |= HASH_FLAG_INITIALIZED		190274	0		|=			
ANR	190395	MemberAccess	( ht ) -> u . flags		190274	0					
ANR	190396	PtrMemberAccess	( ht ) -> u		190274	0					
ANR	190397	Identifier	ht		190274	0					
ANR	190398	Identifier	u		190274	1					
ANR	190399	Identifier	flags		190274	1					
ANR	190400	Identifier	HASH_FLAG_INITIALIZED		190274	1					
ANR	190401	IfStatement	if ( EXPECTED ( ht -> nTableMask == - 8 ) )		190274	3					
ANR	190402	Condition	EXPECTED ( ht -> nTableMask == - 8 )	140:6:4820:4849	190274	0	True				
ANR	190403	CallExpression	EXPECTED ( ht -> nTableMask == - 8 )		190274	0					
ANR	190404	Callee	EXPECTED		190274	0					
ANR	190405	Identifier	EXPECTED		190274	0					
ANR	190406	ArgumentList	ht -> nTableMask == - 8		190274	1					
ANR	190407	Argument	ht -> nTableMask == - 8		190274	0					
ANR	190408	EqualityExpression	ht -> nTableMask == - 8		190274	0		==			
ANR	190409	PtrMemberAccess	ht -> nTableMask		190274	0					
ANR	190410	Identifier	ht		190274	0					
ANR	190411	Identifier	nTableMask		190274	1					
ANR	190412	UnaryOperationExpression	- 8		190274	1					
ANR	190413	UnaryOperator	-		190274	0					
ANR	190414	PrimaryExpression	8		190274	1					
ANR	190415	CompoundStatement		13:3:500:527	190274	1					
ANR	190416	IdentifierDeclStatement	Bucket * arData = ht -> arData ;	141:3:4857:4884	190274	0	True				
ANR	190417	IdentifierDecl	* arData = ht -> arData		190274	0					
ANR	190418	IdentifierDeclType	Bucket *		190274	0					
ANR	190419	Identifier	arData		190274	1					
ANR	190420	AssignmentExpression	* arData = ht -> arData		190274	2		=			
ANR	190421	Identifier	arData		190274	0					
ANR	190422	PtrMemberAccess	ht -> arData		190274	1					
ANR	190423	Identifier	ht		190274	0					
ANR	190424	Identifier	arData		190274	1					
ANR	190425	ExpressionStatement	"HT_HASH_EX ( arData , - 8 ) = - 1"	143:3:4890:4917	190274	1	True				
ANR	190426	AssignmentExpression	"HT_HASH_EX ( arData , - 8 ) = - 1"		190274	0		=			
ANR	190427	CallExpression	"HT_HASH_EX ( arData , - 8 )"		190274	0					
ANR	190428	Callee	HT_HASH_EX		190274	0					
ANR	190429	Identifier	HT_HASH_EX		190274	0					
ANR	190430	ArgumentList	arData		190274	1					
ANR	190431	Argument	arData		190274	0					
ANR	190432	Identifier	arData		190274	0					
ANR	190433	Argument	- 8		190274	1					
ANR	190434	UnaryOperationExpression	- 8		190274	0					
ANR	190435	UnaryOperator	-		190274	0					
ANR	190436	PrimaryExpression	8		190274	1					
ANR	190437	UnaryOperationExpression	- 1		190274	1					
ANR	190438	UnaryOperator	-		190274	0					
ANR	190439	PrimaryExpression	1		190274	1					
ANR	190440	ExpressionStatement	"HT_HASH_EX ( arData , - 7 ) = - 1"	144:3:4922:4949	190274	2	True				
ANR	190441	AssignmentExpression	"HT_HASH_EX ( arData , - 7 ) = - 1"		190274	0		=			
ANR	190442	CallExpression	"HT_HASH_EX ( arData , - 7 )"		190274	0					
ANR	190443	Callee	HT_HASH_EX		190274	0					
ANR	190444	Identifier	HT_HASH_EX		190274	0					
ANR	190445	ArgumentList	arData		190274	1					
ANR	190446	Argument	arData		190274	0					
ANR	190447	Identifier	arData		190274	0					
ANR	190448	Argument	- 7		190274	1					
ANR	190449	UnaryOperationExpression	- 7		190274	0					
ANR	190450	UnaryOperator	-		190274	0					
ANR	190451	PrimaryExpression	7		190274	1					
ANR	190452	UnaryOperationExpression	- 1		190274	1					
ANR	190453	UnaryOperator	-		190274	0					
ANR	190454	PrimaryExpression	1		190274	1					
ANR	190455	ExpressionStatement	"HT_HASH_EX ( arData , - 6 ) = - 1"	145:3:4954:4981	190274	3	True				
ANR	190456	AssignmentExpression	"HT_HASH_EX ( arData , - 6 ) = - 1"		190274	0		=			
ANR	190457	CallExpression	"HT_HASH_EX ( arData , - 6 )"		190274	0					
ANR	190458	Callee	HT_HASH_EX		190274	0					
ANR	190459	Identifier	HT_HASH_EX		190274	0					
ANR	190460	ArgumentList	arData		190274	1					
ANR	190461	Argument	arData		190274	0					
ANR	190462	Identifier	arData		190274	0					
ANR	190463	Argument	- 6		190274	1					
ANR	190464	UnaryOperationExpression	- 6		190274	0					
ANR	190465	UnaryOperator	-		190274	0					
ANR	190466	PrimaryExpression	6		190274	1					
ANR	190467	UnaryOperationExpression	- 1		190274	1					
ANR	190468	UnaryOperator	-		190274	0					
ANR	190469	PrimaryExpression	1		190274	1					
ANR	190470	ExpressionStatement	"HT_HASH_EX ( arData , - 5 ) = - 1"	146:3:4986:5013	190274	4	True				
ANR	190471	AssignmentExpression	"HT_HASH_EX ( arData , - 5 ) = - 1"		190274	0		=			
ANR	190472	CallExpression	"HT_HASH_EX ( arData , - 5 )"		190274	0					
ANR	190473	Callee	HT_HASH_EX		190274	0					
ANR	190474	Identifier	HT_HASH_EX		190274	0					
ANR	190475	ArgumentList	arData		190274	1					
ANR	190476	Argument	arData		190274	0					
ANR	190477	Identifier	arData		190274	0					
ANR	190478	Argument	- 5		190274	1					
ANR	190479	UnaryOperationExpression	- 5		190274	0					
ANR	190480	UnaryOperator	-		190274	0					
ANR	190481	PrimaryExpression	5		190274	1					
ANR	190482	UnaryOperationExpression	- 1		190274	1					
ANR	190483	UnaryOperator	-		190274	0					
ANR	190484	PrimaryExpression	1		190274	1					
ANR	190485	ExpressionStatement	"HT_HASH_EX ( arData , - 4 ) = - 1"	147:3:5018:5045	190274	5	True				
ANR	190486	AssignmentExpression	"HT_HASH_EX ( arData , - 4 ) = - 1"		190274	0		=			
ANR	190487	CallExpression	"HT_HASH_EX ( arData , - 4 )"		190274	0					
ANR	190488	Callee	HT_HASH_EX		190274	0					
ANR	190489	Identifier	HT_HASH_EX		190274	0					
ANR	190490	ArgumentList	arData		190274	1					
ANR	190491	Argument	arData		190274	0					
ANR	190492	Identifier	arData		190274	0					
ANR	190493	Argument	- 4		190274	1					
ANR	190494	UnaryOperationExpression	- 4		190274	0					
ANR	190495	UnaryOperator	-		190274	0					
ANR	190496	PrimaryExpression	4		190274	1					
ANR	190497	UnaryOperationExpression	- 1		190274	1					
ANR	190498	UnaryOperator	-		190274	0					
ANR	190499	PrimaryExpression	1		190274	1					
ANR	190500	ExpressionStatement	"HT_HASH_EX ( arData , - 3 ) = - 1"	148:3:5050:5077	190274	6	True				
ANR	190501	AssignmentExpression	"HT_HASH_EX ( arData , - 3 ) = - 1"		190274	0		=			
ANR	190502	CallExpression	"HT_HASH_EX ( arData , - 3 )"		190274	0					
ANR	190503	Callee	HT_HASH_EX		190274	0					
ANR	190504	Identifier	HT_HASH_EX		190274	0					
ANR	190505	ArgumentList	arData		190274	1					
ANR	190506	Argument	arData		190274	0					
ANR	190507	Identifier	arData		190274	0					
ANR	190508	Argument	- 3		190274	1					
ANR	190509	UnaryOperationExpression	- 3		190274	0					
ANR	190510	UnaryOperator	-		190274	0					
ANR	190511	PrimaryExpression	3		190274	1					
ANR	190512	UnaryOperationExpression	- 1		190274	1					
ANR	190513	UnaryOperator	-		190274	0					
ANR	190514	PrimaryExpression	1		190274	1					
ANR	190515	ExpressionStatement	"HT_HASH_EX ( arData , - 2 ) = - 1"	149:3:5082:5109	190274	7	True				
ANR	190516	AssignmentExpression	"HT_HASH_EX ( arData , - 2 ) = - 1"		190274	0		=			
ANR	190517	CallExpression	"HT_HASH_EX ( arData , - 2 )"		190274	0					
ANR	190518	Callee	HT_HASH_EX		190274	0					
ANR	190519	Identifier	HT_HASH_EX		190274	0					
ANR	190520	ArgumentList	arData		190274	1					
ANR	190521	Argument	arData		190274	0					
ANR	190522	Identifier	arData		190274	0					
ANR	190523	Argument	- 2		190274	1					
ANR	190524	UnaryOperationExpression	- 2		190274	0					
ANR	190525	UnaryOperator	-		190274	0					
ANR	190526	PrimaryExpression	2		190274	1					
ANR	190527	UnaryOperationExpression	- 1		190274	1					
ANR	190528	UnaryOperator	-		190274	0					
ANR	190529	PrimaryExpression	1		190274	1					
ANR	190530	ExpressionStatement	"HT_HASH_EX ( arData , - 1 ) = - 1"	150:3:5114:5141	190274	8	True				
ANR	190531	AssignmentExpression	"HT_HASH_EX ( arData , - 1 ) = - 1"		190274	0		=			
ANR	190532	CallExpression	"HT_HASH_EX ( arData , - 1 )"		190274	0					
ANR	190533	Callee	HT_HASH_EX		190274	0					
ANR	190534	Identifier	HT_HASH_EX		190274	0					
ANR	190535	ArgumentList	arData		190274	1					
ANR	190536	Argument	arData		190274	0					
ANR	190537	Identifier	arData		190274	0					
ANR	190538	Argument	- 1		190274	1					
ANR	190539	UnaryOperationExpression	- 1		190274	0					
ANR	190540	UnaryOperator	-		190274	0					
ANR	190541	PrimaryExpression	1		190274	1					
ANR	190542	UnaryOperationExpression	- 1		190274	1					
ANR	190543	UnaryOperator	-		190274	0					
ANR	190544	PrimaryExpression	1		190274	1					
ANR	190545	ElseStatement	else		190274	0					
ANR	190546	CompoundStatement		23:9:795:795	190274	0					
ANR	190547	ExpressionStatement	HT_HASH_RESET ( ht )	152:3:5157:5174	190274	0	True				
ANR	190548	CallExpression	HT_HASH_RESET ( ht )		190274	0					
ANR	190549	Callee	HT_HASH_RESET		190274	0					
ANR	190550	Identifier	HT_HASH_RESET		190274	0					
ANR	190551	ArgumentList	ht		190274	1					
ANR	190552	Argument	ht		190274	0					
ANR	190553	Identifier	ht		190274	0					
ANR	190554	ReturnType	static void zend_always_inline		190274	1					
ANR	190555	Identifier	zend_hash_real_init_ex		190274	2					
ANR	190556	ParameterList	"HashTable * ht , int packed"		190274	3					
ANR	190557	Parameter	HashTable * ht	128:54:4329:4341	190274	0	True				
ANR	190558	ParameterType	HashTable *		190274	0					
ANR	190559	Identifier	ht		190274	1					
ANR	190560	Parameter	int packed	128:69:4344:4353	190274	1	True				
ANR	190561	ParameterType	int		190274	0					
ANR	190562	Identifier	packed		190274	1					
ANR	190563	CFGEntryNode	ENTRY		190274		True				
ANR	190564	CFGExitNode	EXIT		190274		True				
ANR	190565	Symbol	( ht ) -> u . flags		190274						
ANR	190566	Symbol	ht -> nTableMask		190274						
ANR	190567	Symbol	HASH_FLAG_PACKED		190274						
ANR	190568	Symbol	ht -> arData		190274						
ANR	190569	Symbol	ht		190274						
ANR	190570	Symbol	( ht ) -> u		190274						
ANR	190571	Symbol	HT_SIZE		190274						
ANR	190572	Symbol	( ht ) -> nTableMask		190274						
ANR	190573	Symbol	* ht		190274						
ANR	190574	Symbol	( ht ) -> nTableSize		190274						
ANR	190575	Symbol	HASH_FLAG_PERSISTENT		190274						
ANR	190576	Symbol	HASH_FLAG_INITIALIZED		190274						
ANR	190577	Symbol	arData		190274						
ANR	190578	Symbol	HT_HASH_EX		190274						
ANR	190579	Symbol	packed		190274						
ANR	190580	Symbol	GC_REFCOUNT		190274						
ANR	190581	Symbol	EXPECTED		190274						
ANR	190582	Symbol	pemalloc		190274						
ANR	190583	Function	zend_hash_check_init	157:0:5186:5403							
ANR	190584	FunctionDef	"zend_hash_check_init (HashTable * ht , int packed)"		190583	0					
ANR	190585	CompoundStatement		158:0:5265:5403	190583	0					
ANR	190586	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	159:1:5268:5299	190583	0	True				
ANR	190587	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		190583	0					
ANR	190588	Callee	HT_ASSERT		190583	0					
ANR	190589	Identifier	HT_ASSERT		190583	0					
ANR	190590	ArgumentList	GC_REFCOUNT ( ht ) == 1		190583	1					
ANR	190591	Argument	GC_REFCOUNT ( ht ) == 1		190583	0					
ANR	190592	EqualityExpression	GC_REFCOUNT ( ht ) == 1		190583	0		==			
ANR	190593	CallExpression	GC_REFCOUNT ( ht )		190583	0					
ANR	190594	Callee	GC_REFCOUNT		190583	0					
ANR	190595	Identifier	GC_REFCOUNT		190583	0					
ANR	190596	ArgumentList	ht		190583	1					
ANR	190597	Argument	ht		190583	0					
ANR	190598	Identifier	ht		190583	0					
ANR	190599	PrimaryExpression	1		190583	1					
ANR	190600	IfStatement	if ( UNEXPECTED ( ! ( ( ht ) -> u . flags & HASH_FLAG_INITIALIZED ) ) )		190583	1					
ANR	190601	Condition	UNEXPECTED ( ! ( ( ht ) -> u . flags & HASH_FLAG_INITIALIZED ) )	160:5:5306:5357	190583	0	True				
ANR	190602	CallExpression	UNEXPECTED ( ! ( ( ht ) -> u . flags & HASH_FLAG_INITIALIZED ) )		190583	0					
ANR	190603	Callee	UNEXPECTED		190583	0					
ANR	190604	Identifier	UNEXPECTED		190583	0					
ANR	190605	ArgumentList	! ( ( ht ) -> u . flags & HASH_FLAG_INITIALIZED )		190583	1					
ANR	190606	Argument	! ( ( ht ) -> u . flags & HASH_FLAG_INITIALIZED )		190583	0					
ANR	190607	UnaryOperationExpression	! ( ( ht ) -> u . flags & HASH_FLAG_INITIALIZED )		190583	0					
ANR	190608	UnaryOperator	!		190583	0					
ANR	190609	BitAndExpression	( ht ) -> u . flags & HASH_FLAG_INITIALIZED		190583	1		&			
ANR	190610	MemberAccess	( ht ) -> u . flags		190583	0					
ANR	190611	PtrMemberAccess	( ht ) -> u		190583	0					
ANR	190612	Identifier	ht		190583	0					
ANR	190613	Identifier	u		190583	1					
ANR	190614	Identifier	flags		190583	1					
ANR	190615	Identifier	HASH_FLAG_INITIALIZED		190583	1					
ANR	190616	CompoundStatement		3:59:94:94	190583	1					
ANR	190617	ExpressionStatement	"zend_hash_real_init_ex ( ht , packed )"	161:2:5364:5398	190583	0	True				
ANR	190618	CallExpression	"zend_hash_real_init_ex ( ht , packed )"		190583	0					
ANR	190619	Callee	zend_hash_real_init_ex		190583	0					
ANR	190620	Identifier	zend_hash_real_init_ex		190583	0					
ANR	190621	ArgumentList	ht		190583	1					
ANR	190622	Argument	ht		190583	0					
ANR	190623	Identifier	ht		190583	0					
ANR	190624	Argument	packed		190583	1					
ANR	190625	Identifier	packed		190583	0					
ANR	190626	ReturnType	static void zend_always_inline		190583	1					
ANR	190627	Identifier	zend_hash_check_init		190583	2					
ANR	190628	ParameterList	"HashTable * ht , int packed"		190583	3					
ANR	190629	Parameter	HashTable * ht	157:52:5238:5250	190583	0	True				
ANR	190630	ParameterType	HashTable *		190583	0					
ANR	190631	Identifier	ht		190583	1					
ANR	190632	Parameter	int packed	157:67:5253:5262	190583	1	True				
ANR	190633	ParameterType	int		190583	0					
ANR	190634	Identifier	packed		190583	1					
ANR	190635	CFGEntryNode	ENTRY		190583		True				
ANR	190636	CFGExitNode	EXIT		190583		True				
ANR	190637	Symbol	UNEXPECTED		190583						
ANR	190638	Symbol	* ht		190583						
ANR	190639	Symbol	( ht ) -> u . flags		190583						
ANR	190640	Symbol	HASH_FLAG_INITIALIZED		190583						
ANR	190641	Symbol	ht		190583						
ANR	190642	Symbol	packed		190583						
ANR	190643	Symbol	( ht ) -> u		190583						
ANR	190644	Symbol	GC_REFCOUNT		190583						
ANR	190645	DeclStmt									
ANR	190646	Decl							const uint32_t	const uint32_t [ - HT_MIN_MASK ]	uninitialized_bucket
ANR	190647	Function	_zend_hash_init	171:0:5569:6139							
ANR	190648	FunctionDef	"_zend_hash_init (HashTable * ht , uint32_t nSize , dtor_func_t pDestructor , zend_bool persistent ZEND_FILE_LINE_DC)"		190647	0					
ANR	190649	CompoundStatement		172:0:5709:6139	190647	0					
ANR	190650	ExpressionStatement	GC_REFCOUNT ( ht ) = 1	173:1:5712:5731	190647	0	True				
ANR	190651	AssignmentExpression	GC_REFCOUNT ( ht ) = 1		190647	0		=			
ANR	190652	CallExpression	GC_REFCOUNT ( ht )		190647	0					
ANR	190653	Callee	GC_REFCOUNT		190647	0					
ANR	190654	Identifier	GC_REFCOUNT		190647	0					
ANR	190655	ArgumentList	ht		190647	1					
ANR	190656	Argument	ht		190647	0					
ANR	190657	Identifier	ht		190647	0					
ANR	190658	PrimaryExpression	1		190647	1					
ANR	190659	ExpressionStatement	GC_TYPE_INFO ( ht ) = IS_ARRAY	174:1:5734:5761	190647	1	True				
ANR	190660	AssignmentExpression	GC_TYPE_INFO ( ht ) = IS_ARRAY		190647	0		=			
ANR	190661	CallExpression	GC_TYPE_INFO ( ht )		190647	0					
ANR	190662	Callee	GC_TYPE_INFO		190647	0					
ANR	190663	Identifier	GC_TYPE_INFO		190647	0					
ANR	190664	ArgumentList	ht		190647	1					
ANR	190665	Argument	ht		190647	0					
ANR	190666	Identifier	ht		190647	0					
ANR	190667	Identifier	IS_ARRAY		190647	1					
ANR	190668	ExpressionStatement	ht -> u . flags = ( persistent ? HASH_FLAG_PERSISTENT : 0 ) | HASH_FLAG_APPLY_PROTECTION | HASH_FLAG_STATIC_KEYS	175:1:5764:5870	190647	2	True				
ANR	190669	AssignmentExpression	ht -> u . flags = ( persistent ? HASH_FLAG_PERSISTENT : 0 ) | HASH_FLAG_APPLY_PROTECTION | HASH_FLAG_STATIC_KEYS		190647	0		=			
ANR	190670	MemberAccess	ht -> u . flags		190647	0					
ANR	190671	PtrMemberAccess	ht -> u		190647	0					
ANR	190672	Identifier	ht		190647	0					
ANR	190673	Identifier	u		190647	1					
ANR	190674	Identifier	flags		190647	1					
ANR	190675	InclusiveOrExpression	( persistent ? HASH_FLAG_PERSISTENT : 0 ) | HASH_FLAG_APPLY_PROTECTION | HASH_FLAG_STATIC_KEYS		190647	1		|			
ANR	190676	ConditionalExpression	persistent ? HASH_FLAG_PERSISTENT : 0		190647	0					
ANR	190677	Condition	persistent		190647	0					
ANR	190678	Identifier	persistent		190647	0					
ANR	190679	Identifier	HASH_FLAG_PERSISTENT		190647	1					
ANR	190680	PrimaryExpression	0		190647	2					
ANR	190681	InclusiveOrExpression	HASH_FLAG_APPLY_PROTECTION | HASH_FLAG_STATIC_KEYS		190647	1		|			
ANR	190682	Identifier	HASH_FLAG_APPLY_PROTECTION		190647	0					
ANR	190683	Identifier	HASH_FLAG_STATIC_KEYS		190647	1					
ANR	190684	ExpressionStatement	ht -> nTableSize = zend_hash_check_size ( nSize )	176:1:5873:5917	190647	3	True				
ANR	190685	AssignmentExpression	ht -> nTableSize = zend_hash_check_size ( nSize )		190647	0		=			
ANR	190686	PtrMemberAccess	ht -> nTableSize		190647	0					
ANR	190687	Identifier	ht		190647	0					
ANR	190688	Identifier	nTableSize		190647	1					
ANR	190689	CallExpression	zend_hash_check_size ( nSize )		190647	1					
ANR	190690	Callee	zend_hash_check_size		190647	0					
ANR	190691	Identifier	zend_hash_check_size		190647	0					
ANR	190692	ArgumentList	nSize		190647	1					
ANR	190693	Argument	nSize		190647	0					
ANR	190694	Identifier	nSize		190647	0					
ANR	190695	ExpressionStatement	ht -> nTableMask = HT_MIN_MASK	177:1:5920:5948	190647	4	True				
ANR	190696	AssignmentExpression	ht -> nTableMask = HT_MIN_MASK		190647	0		=			
ANR	190697	PtrMemberAccess	ht -> nTableMask		190647	0					
ANR	190698	Identifier	ht		190647	0					
ANR	190699	Identifier	nTableMask		190647	1					
ANR	190700	Identifier	HT_MIN_MASK		190647	1					
ANR	190701	ExpressionStatement	"HT_SET_DATA_ADDR ( ht , & uninitialized_bucket )"	178:1:5951:5994	190647	5	True				
ANR	190702	CallExpression	"HT_SET_DATA_ADDR ( ht , & uninitialized_bucket )"		190647	0					
ANR	190703	Callee	HT_SET_DATA_ADDR		190647	0					
ANR	190704	Identifier	HT_SET_DATA_ADDR		190647	0					
ANR	190705	ArgumentList	ht		190647	1					
ANR	190706	Argument	ht		190647	0					
ANR	190707	Identifier	ht		190647	0					
ANR	190708	Argument	& uninitialized_bucket		190647	1					
ANR	190709	UnaryOperationExpression	& uninitialized_bucket		190647	0					
ANR	190710	UnaryOperator	&		190647	0					
ANR	190711	Identifier	uninitialized_bucket		190647	1					
ANR	190712	ExpressionStatement	ht -> nNumUsed = 0	179:1:5997:6013	190647	6	True				
ANR	190713	AssignmentExpression	ht -> nNumUsed = 0		190647	0		=			
ANR	190714	PtrMemberAccess	ht -> nNumUsed		190647	0					
ANR	190715	Identifier	ht		190647	0					
ANR	190716	Identifier	nNumUsed		190647	1					
ANR	190717	PrimaryExpression	0		190647	1					
ANR	190718	ExpressionStatement	ht -> nNumOfElements = 0	180:1:6016:6038	190647	7	True				
ANR	190719	AssignmentExpression	ht -> nNumOfElements = 0		190647	0		=			
ANR	190720	PtrMemberAccess	ht -> nNumOfElements		190647	0					
ANR	190721	Identifier	ht		190647	0					
ANR	190722	Identifier	nNumOfElements		190647	1					
ANR	190723	PrimaryExpression	0		190647	1					
ANR	190724	ExpressionStatement	ht -> nInternalPointer = HT_INVALID_IDX	181:1:6041:6078	190647	8	True				
ANR	190725	AssignmentExpression	ht -> nInternalPointer = HT_INVALID_IDX		190647	0		=			
ANR	190726	PtrMemberAccess	ht -> nInternalPointer		190647	0					
ANR	190727	Identifier	ht		190647	0					
ANR	190728	Identifier	nInternalPointer		190647	1					
ANR	190729	Identifier	HT_INVALID_IDX		190647	1					
ANR	190730	ExpressionStatement	ht -> nNextFreeElement = 0	182:1:6081:6105	190647	9	True				
ANR	190731	AssignmentExpression	ht -> nNextFreeElement = 0		190647	0		=			
ANR	190732	PtrMemberAccess	ht -> nNextFreeElement		190647	0					
ANR	190733	Identifier	ht		190647	0					
ANR	190734	Identifier	nNextFreeElement		190647	1					
ANR	190735	PrimaryExpression	0		190647	1					
ANR	190736	ExpressionStatement	ht -> pDestructor = pDestructor	183:1:6108:6137	190647	10	True				
ANR	190737	AssignmentExpression	ht -> pDestructor = pDestructor		190647	0		=			
ANR	190738	PtrMemberAccess	ht -> pDestructor		190647	0					
ANR	190739	Identifier	ht		190647	0					
ANR	190740	Identifier	pDestructor		190647	1					
ANR	190741	Identifier	pDestructor		190647	1					
ANR	190742	ReturnType	ZEND_API void ZEND_FASTCALL		190647	1					
ANR	190743	Identifier	_zend_hash_init		190647	2					
ANR	190744	ParameterList	"HashTable * ht , uint32_t nSize , dtor_func_t pDestructor , zend_bool persistent ZEND_FILE_LINE_DC"		190647	3					
ANR	190745	Parameter	HashTable * ht	171:44:5613:5625	190647	0	True				
ANR	190746	ParameterType	HashTable *		190647	0					
ANR	190747	Identifier	ht		190647	1					
ANR	190748	Parameter	uint32_t nSize	171:59:5628:5641	190647	1	True				
ANR	190749	ParameterType	uint32_t		190647	0					
ANR	190750	Identifier	nSize		190647	1					
ANR	190751	Parameter	dtor_func_t pDestructor	171:75:5644:5666	190647	2	True				
ANR	190752	ParameterType	dtor_func_t		190647	0					
ANR	190753	Identifier	pDestructor		190647	1					
ANR	190754	Parameter	zend_bool persistent ZEND_FILE_LINE_DC	171:100:5669:5706	190647	3	True				
ANR	190755	ParameterType	zend_bool persistent		190647	0					
ANR	190756	Identifier	ZEND_FILE_LINE_DC		190647	1					
ANR	190757	CFGEntryNode	ENTRY		190647		True				
ANR	190758	CFGExitNode	EXIT		190647		True				
ANR	190759	Symbol	HASH_FLAG_STATIC_KEYS		190647						
ANR	190760	Symbol	ht -> nTableMask		190647						
ANR	190761	Symbol	HT_MIN_MASK		190647						
ANR	190762	Symbol	ht -> u		190647						
ANR	190763	Symbol	ht -> pDestructor		190647						
ANR	190764	Symbol	ht -> u . flags		190647						
ANR	190765	Symbol	ht		190647						
ANR	190766	Symbol	* ht		190647						
ANR	190767	Symbol	IS_ARRAY		190647						
ANR	190768	Symbol	ZEND_FILE_LINE_DC		190647						
ANR	190769	Symbol	ht -> nTableSize		190647						
ANR	190770	Symbol	GC_TYPE_INFO		190647						
ANR	190771	Symbol	persistent		190647						
ANR	190772	Symbol	& uninitialized_bucket		190647						
ANR	190773	Symbol	GC_REFCOUNT		190647						
ANR	190774	Symbol	ht -> nNumOfElements		190647						
ANR	190775	Symbol	ht -> nInternalPointer		190647						
ANR	190776	Symbol	HT_INVALID_IDX		190647						
ANR	190777	Symbol	HASH_FLAG_APPLY_PROTECTION		190647						
ANR	190778	Symbol	ht -> nNextFreeElement		190647						
ANR	190779	Symbol	HASH_FLAG_PERSISTENT		190647						
ANR	190780	Symbol	nSize		190647						
ANR	190781	Symbol	pDestructor		190647						
ANR	190782	Symbol	zend_hash_check_size		190647						
ANR	190783	Symbol	ht -> nNumUsed		190647						
ANR	190784	Function	zend_hash_packed_grow	186:0:6142:6657							
ANR	190785	FunctionDef	zend_hash_packed_grow (HashTable * ht)		190784	0					
ANR	190786	CompoundStatement		187:0:6205:6657	190784	0					
ANR	190787	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	188:1:6208:6239	190784	0	True				
ANR	190788	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		190784	0					
ANR	190789	Callee	HT_ASSERT		190784	0					
ANR	190790	Identifier	HT_ASSERT		190784	0					
ANR	190791	ArgumentList	GC_REFCOUNT ( ht ) == 1		190784	1					
ANR	190792	Argument	GC_REFCOUNT ( ht ) == 1		190784	0					
ANR	190793	EqualityExpression	GC_REFCOUNT ( ht ) == 1		190784	0		==			
ANR	190794	CallExpression	GC_REFCOUNT ( ht )		190784	0					
ANR	190795	Callee	GC_REFCOUNT		190784	0					
ANR	190796	Identifier	GC_REFCOUNT		190784	0					
ANR	190797	ArgumentList	ht		190784	1					
ANR	190798	Argument	ht		190784	0					
ANR	190799	Identifier	ht		190784	0					
ANR	190800	PrimaryExpression	1		190784	1					
ANR	190801	IfStatement	if ( ht -> nTableSize >= HT_MAX_SIZE )		190784	1					
ANR	190802	Condition	ht -> nTableSize >= HT_MAX_SIZE	189:5:6246:6274	190784	0	True				
ANR	190803	RelationalExpression	ht -> nTableSize >= HT_MAX_SIZE		190784	0		>=			
ANR	190804	PtrMemberAccess	ht -> nTableSize		190784	0					
ANR	190805	Identifier	ht		190784	0					
ANR	190806	Identifier	nTableSize		190784	1					
ANR	190807	Identifier	HT_MAX_SIZE		190784	1					
ANR	190808	CompoundStatement		3:36:71:71	190784	1					
ANR	190809	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Possible integer overflow in memory allocation (%zu * %zu + %zu)"" , ht -> nTableSize * 2 , sizeof ( Bucket ) , sizeof ( Bucket ) )"	190:2:6281:6429	190784	0	True				
ANR	190810	CallExpression	"zend_error_noreturn ( E_ERROR , ""Possible integer overflow in memory allocation (%zu * %zu + %zu)"" , ht -> nTableSize * 2 , sizeof ( Bucket ) , sizeof ( Bucket ) )"		190784	0					
ANR	190811	Callee	zend_error_noreturn		190784	0					
ANR	190812	Identifier	zend_error_noreturn		190784	0					
ANR	190813	ArgumentList	E_ERROR		190784	1					
ANR	190814	Argument	E_ERROR		190784	0					
ANR	190815	Identifier	E_ERROR		190784	0					
ANR	190816	Argument	"""Possible integer overflow in memory allocation (%zu * %zu + %zu)"""		190784	1					
ANR	190817	PrimaryExpression	"""Possible integer overflow in memory allocation (%zu * %zu + %zu)"""		190784	0					
ANR	190818	Argument	ht -> nTableSize * 2		190784	2					
ANR	190819	MultiplicativeExpression	ht -> nTableSize * 2		190784	0		*			
ANR	190820	PtrMemberAccess	ht -> nTableSize		190784	0					
ANR	190821	Identifier	ht		190784	0					
ANR	190822	Identifier	nTableSize		190784	1					
ANR	190823	PrimaryExpression	2		190784	1					
ANR	190824	Argument	sizeof ( Bucket )		190784	3					
ANR	190825	SizeofExpression	sizeof ( Bucket )		190784	0					
ANR	190826	Sizeof	sizeof		190784	0					
ANR	190827	SizeofOperand	Bucket		190784	1					
ANR	190828	Argument	sizeof ( Bucket )		190784	4					
ANR	190829	SizeofExpression	sizeof ( Bucket )		190784	0					
ANR	190830	Sizeof	sizeof		190784	0					
ANR	190831	SizeofOperand	Bucket		190784	1					
ANR	190832	ExpressionStatement	HANDLE_BLOCK_INTERRUPTIONS ( )	192:1:6435:6463	190784	2	True				
ANR	190833	CallExpression	HANDLE_BLOCK_INTERRUPTIONS ( )		190784	0					
ANR	190834	Callee	HANDLE_BLOCK_INTERRUPTIONS		190784	0					
ANR	190835	Identifier	HANDLE_BLOCK_INTERRUPTIONS		190784	0					
ANR	190836	ArgumentList			190784	1					
ANR	190837	ExpressionStatement	ht -> nTableSize += ht -> nTableSize	193:1:6466:6498	190784	3	True				
ANR	190838	AssignmentExpression	ht -> nTableSize += ht -> nTableSize		190784	0		+=			
ANR	190839	PtrMemberAccess	ht -> nTableSize		190784	0					
ANR	190840	Identifier	ht		190784	0					
ANR	190841	Identifier	nTableSize		190784	1					
ANR	190842	PtrMemberAccess	ht -> nTableSize		190784	1					
ANR	190843	Identifier	ht		190784	0					
ANR	190844	Identifier	nTableSize		190784	1					
ANR	190845	ExpressionStatement	"HT_SET_DATA_ADDR ( ht , perealloc2 ( HT_GET_DATA_ADDR ( ht ) , HT_SIZE ( ht ) , HT_USED_SIZE ( ht ) , ht -> u . flags & HASH_FLAG_PERSISTENT ) )"	194:1:6501:6622	190784	4	True				
ANR	190846	CallExpression	"HT_SET_DATA_ADDR ( ht , perealloc2 ( HT_GET_DATA_ADDR ( ht ) , HT_SIZE ( ht ) , HT_USED_SIZE ( ht ) , ht -> u . flags & HASH_FLAG_PERSISTENT ) )"		190784	0					
ANR	190847	Callee	HT_SET_DATA_ADDR		190784	0					
ANR	190848	Identifier	HT_SET_DATA_ADDR		190784	0					
ANR	190849	ArgumentList	ht		190784	1					
ANR	190850	Argument	ht		190784	0					
ANR	190851	Identifier	ht		190784	0					
ANR	190852	Argument	"perealloc2 ( HT_GET_DATA_ADDR ( ht ) , HT_SIZE ( ht ) , HT_USED_SIZE ( ht ) , ht -> u . flags & HASH_FLAG_PERSISTENT )"		190784	1					
ANR	190853	CallExpression	"perealloc2 ( HT_GET_DATA_ADDR ( ht ) , HT_SIZE ( ht ) , HT_USED_SIZE ( ht ) , ht -> u . flags & HASH_FLAG_PERSISTENT )"		190784	0					
ANR	190854	Callee	perealloc2		190784	0					
ANR	190855	Identifier	perealloc2		190784	0					
ANR	190856	ArgumentList	HT_GET_DATA_ADDR ( ht )		190784	1					
ANR	190857	Argument	HT_GET_DATA_ADDR ( ht )		190784	0					
ANR	190858	CallExpression	HT_GET_DATA_ADDR ( ht )		190784	0					
ANR	190859	Callee	HT_GET_DATA_ADDR		190784	0					
ANR	190860	Identifier	HT_GET_DATA_ADDR		190784	0					
ANR	190861	ArgumentList	ht		190784	1					
ANR	190862	Argument	ht		190784	0					
ANR	190863	Identifier	ht		190784	0					
ANR	190864	Argument	HT_SIZE ( ht )		190784	1					
ANR	190865	CallExpression	HT_SIZE ( ht )		190784	0					
ANR	190866	Callee	HT_SIZE		190784	0					
ANR	190867	Identifier	HT_SIZE		190784	0					
ANR	190868	ArgumentList	ht		190784	1					
ANR	190869	Argument	ht		190784	0					
ANR	190870	Identifier	ht		190784	0					
ANR	190871	Argument	HT_USED_SIZE ( ht )		190784	2					
ANR	190872	CallExpression	HT_USED_SIZE ( ht )		190784	0					
ANR	190873	Callee	HT_USED_SIZE		190784	0					
ANR	190874	Identifier	HT_USED_SIZE		190784	0					
ANR	190875	ArgumentList	ht		190784	1					
ANR	190876	Argument	ht		190784	0					
ANR	190877	Identifier	ht		190784	0					
ANR	190878	Argument	ht -> u . flags & HASH_FLAG_PERSISTENT		190784	3					
ANR	190879	BitAndExpression	ht -> u . flags & HASH_FLAG_PERSISTENT		190784	0		&			
ANR	190880	MemberAccess	ht -> u . flags		190784	0					
ANR	190881	PtrMemberAccess	ht -> u		190784	0					
ANR	190882	Identifier	ht		190784	0					
ANR	190883	Identifier	u		190784	1					
ANR	190884	Identifier	flags		190784	1					
ANR	190885	Identifier	HASH_FLAG_PERSISTENT		190784	1					
ANR	190886	ExpressionStatement	HANDLE_UNBLOCK_INTERRUPTIONS ( )	195:1:6625:6655	190784	5	True				
ANR	190887	CallExpression	HANDLE_UNBLOCK_INTERRUPTIONS ( )		190784	0					
ANR	190888	Callee	HANDLE_UNBLOCK_INTERRUPTIONS		190784	0					
ANR	190889	Identifier	HANDLE_UNBLOCK_INTERRUPTIONS		190784	0					
ANR	190890	ArgumentList			190784	1					
ANR	190891	ReturnType	static void ZEND_FASTCALL		190784	1					
ANR	190892	Identifier	zend_hash_packed_grow		190784	2					
ANR	190893	ParameterList	HashTable * ht		190784	3					
ANR	190894	Parameter	HashTable * ht	186:48:6190:6202	190784	0	True				
ANR	190895	ParameterType	HashTable *		190784	0					
ANR	190896	Identifier	ht		190784	1					
ANR	190897	CFGEntryNode	ENTRY		190784		True				
ANR	190898	CFGExitNode	EXIT		190784		True				
ANR	190899	Symbol	perealloc2		190784						
ANR	190900	Symbol	HT_MAX_SIZE		190784						
ANR	190901	Symbol	HT_USED_SIZE		190784						
ANR	190902	Symbol	ht -> u		190784						
ANR	190903	Symbol	HT_GET_DATA_ADDR		190784						
ANR	190904	Symbol	ht -> u . flags		190784						
ANR	190905	Symbol	ht		190784						
ANR	190906	Symbol	HT_SIZE		190784						
ANR	190907	Symbol	* ht		190784						
ANR	190908	Symbol	E_ERROR		190784						
ANR	190909	Symbol	HASH_FLAG_PERSISTENT		190784						
ANR	190910	Symbol	ht -> nTableSize		190784						
ANR	190911	Symbol	GC_REFCOUNT		190784						
ANR	190912	Function	zend_hash_real_init	198:0:6660:6835							
ANR	190913	FunctionDef	"zend_hash_real_init (HashTable * ht , zend_bool packed)"		190912	0					
ANR	190914	CompoundStatement		199:0:6741:6835	190912	0					
ANR	190915	ExpressionStatement	IS_CONSISTENT ( ht )	200:1:6744:6761	190912	0	True				
ANR	190916	CallExpression	IS_CONSISTENT ( ht )		190912	0					
ANR	190917	Callee	IS_CONSISTENT		190912	0					
ANR	190918	Identifier	IS_CONSISTENT		190912	0					
ANR	190919	ArgumentList	ht		190912	1					
ANR	190920	Argument	ht		190912	0					
ANR	190921	Identifier	ht		190912	0					
ANR	190922	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	202:1:6765:6796	190912	1	True				
ANR	190923	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		190912	0					
ANR	190924	Callee	HT_ASSERT		190912	0					
ANR	190925	Identifier	HT_ASSERT		190912	0					
ANR	190926	ArgumentList	GC_REFCOUNT ( ht ) == 1		190912	1					
ANR	190927	Argument	GC_REFCOUNT ( ht ) == 1		190912	0					
ANR	190928	EqualityExpression	GC_REFCOUNT ( ht ) == 1		190912	0		==			
ANR	190929	CallExpression	GC_REFCOUNT ( ht )		190912	0					
ANR	190930	Callee	GC_REFCOUNT		190912	0					
ANR	190931	Identifier	GC_REFCOUNT		190912	0					
ANR	190932	ArgumentList	ht		190912	1					
ANR	190933	Argument	ht		190912	0					
ANR	190934	Identifier	ht		190912	0					
ANR	190935	PrimaryExpression	1		190912	1					
ANR	190936	ExpressionStatement	"zend_hash_real_init_ex ( ht , packed )"	203:1:6799:6833	190912	2	True				
ANR	190937	CallExpression	"zend_hash_real_init_ex ( ht , packed )"		190912	0					
ANR	190938	Callee	zend_hash_real_init_ex		190912	0					
ANR	190939	Identifier	zend_hash_real_init_ex		190912	0					
ANR	190940	ArgumentList	ht		190912	1					
ANR	190941	Argument	ht		190912	0					
ANR	190942	Identifier	ht		190912	0					
ANR	190943	Argument	packed		190912	1					
ANR	190944	Identifier	packed		190912	0					
ANR	190945	ReturnType	ZEND_API void ZEND_FASTCALL		190912	1					
ANR	190946	Identifier	zend_hash_real_init		190912	2					
ANR	190947	ParameterList	"HashTable * ht , zend_bool packed"		190912	3					
ANR	190948	Parameter	HashTable * ht	198:48:6708:6720	190912	0	True				
ANR	190949	ParameterType	HashTable *		190912	0					
ANR	190950	Identifier	ht		190912	1					
ANR	190951	Parameter	zend_bool packed	198:63:6723:6738	190912	1	True				
ANR	190952	ParameterType	zend_bool		190912	0					
ANR	190953	Identifier	packed		190912	1					
ANR	190954	CFGEntryNode	ENTRY		190912		True				
ANR	190955	CFGExitNode	EXIT		190912		True				
ANR	190956	Symbol	ht		190912						
ANR	190957	Symbol	packed		190912						
ANR	190958	Symbol	GC_REFCOUNT		190912						
ANR	190959	Function	zend_hash_packed_to_hash	206:0:6838:7446							
ANR	190960	FunctionDef	zend_hash_packed_to_hash (HashTable * ht)		190959	0					
ANR	190961	CompoundStatement		207:0:6906:7446	190959	0					
ANR	190962	IdentifierDeclStatement	"void * new_data , * old_data = HT_GET_DATA_ADDR ( ht ) ;"	208:1:6909:6957	190959	0	True				
ANR	190963	IdentifierDecl	* new_data		190959	0					
ANR	190964	IdentifierDeclType	void *		190959	0					
ANR	190965	Identifier	new_data		190959	1					
ANR	190966	IdentifierDecl	* old_data = HT_GET_DATA_ADDR ( ht )		190959	1					
ANR	190967	IdentifierDeclType	void *		190959	0					
ANR	190968	Identifier	old_data		190959	1					
ANR	190969	AssignmentExpression	* old_data = HT_GET_DATA_ADDR ( ht )		190959	2		=			
ANR	190970	Identifier	old_data		190959	0					
ANR	190971	CallExpression	HT_GET_DATA_ADDR ( ht )		190959	1					
ANR	190972	Callee	HT_GET_DATA_ADDR		190959	0					
ANR	190973	Identifier	HT_GET_DATA_ADDR		190959	0					
ANR	190974	ArgumentList	ht		190959	1					
ANR	190975	Argument	ht		190959	0					
ANR	190976	Identifier	ht		190959	0					
ANR	190977	IdentifierDeclStatement	Bucket * old_buckets = ht -> arData ;	209:1:6960:6992	190959	1	True				
ANR	190978	IdentifierDecl	* old_buckets = ht -> arData		190959	0					
ANR	190979	IdentifierDeclType	Bucket *		190959	0					
ANR	190980	Identifier	old_buckets		190959	1					
ANR	190981	AssignmentExpression	* old_buckets = ht -> arData		190959	2		=			
ANR	190982	Identifier	old_buckets		190959	0					
ANR	190983	PtrMemberAccess	ht -> arData		190959	1					
ANR	190984	Identifier	ht		190959	0					
ANR	190985	Identifier	arData		190959	1					
ANR	190986	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	211:1:6996:7027	190959	2	True				
ANR	190987	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		190959	0					
ANR	190988	Callee	HT_ASSERT		190959	0					
ANR	190989	Identifier	HT_ASSERT		190959	0					
ANR	190990	ArgumentList	GC_REFCOUNT ( ht ) == 1		190959	1					
ANR	190991	Argument	GC_REFCOUNT ( ht ) == 1		190959	0					
ANR	190992	EqualityExpression	GC_REFCOUNT ( ht ) == 1		190959	0		==			
ANR	190993	CallExpression	GC_REFCOUNT ( ht )		190959	0					
ANR	190994	Callee	GC_REFCOUNT		190959	0					
ANR	190995	Identifier	GC_REFCOUNT		190959	0					
ANR	190996	ArgumentList	ht		190959	1					
ANR	190997	Argument	ht		190959	0					
ANR	190998	Identifier	ht		190959	0					
ANR	190999	PrimaryExpression	1		190959	1					
ANR	191000	ExpressionStatement	HANDLE_BLOCK_INTERRUPTIONS ( )	212:1:7030:7058	190959	3	True				
ANR	191001	CallExpression	HANDLE_BLOCK_INTERRUPTIONS ( )		190959	0					
ANR	191002	Callee	HANDLE_BLOCK_INTERRUPTIONS		190959	0					
ANR	191003	Identifier	HANDLE_BLOCK_INTERRUPTIONS		190959	0					
ANR	191004	ArgumentList			190959	1					
ANR	191005	ExpressionStatement	ht -> u . flags &= ~HASH_FLAG_PACKED	213:1:7061:7093	190959	4	True				
ANR	191006	AssignmentExpression	ht -> u . flags &= ~HASH_FLAG_PACKED		190959	0		&=			
ANR	191007	MemberAccess	ht -> u . flags		190959	0					
ANR	191008	PtrMemberAccess	ht -> u		190959	0					
ANR	191009	Identifier	ht		190959	0					
ANR	191010	Identifier	u		190959	1					
ANR	191011	Identifier	flags		190959	1					
ANR	191012	Identifier	~HASH_FLAG_PACKED		190959	1					
ANR	191013	ExpressionStatement	"new_data = pemalloc ( HT_SIZE_EX ( ht -> nTableSize , - ht -> nTableSize ) , ( ht ) -> u . flags & HASH_FLAG_PERSISTENT )"	214:1:7096:7198	190959	5	True				
ANR	191014	AssignmentExpression	"new_data = pemalloc ( HT_SIZE_EX ( ht -> nTableSize , - ht -> nTableSize ) , ( ht ) -> u . flags & HASH_FLAG_PERSISTENT )"		190959	0		=			
ANR	191015	Identifier	new_data		190959	0					
ANR	191016	CallExpression	"pemalloc ( HT_SIZE_EX ( ht -> nTableSize , - ht -> nTableSize ) , ( ht ) -> u . flags & HASH_FLAG_PERSISTENT )"		190959	1					
ANR	191017	Callee	pemalloc		190959	0					
ANR	191018	Identifier	pemalloc		190959	0					
ANR	191019	ArgumentList	"HT_SIZE_EX ( ht -> nTableSize , - ht -> nTableSize )"		190959	1					
ANR	191020	Argument	"HT_SIZE_EX ( ht -> nTableSize , - ht -> nTableSize )"		190959	0					
ANR	191021	CallExpression	"HT_SIZE_EX ( ht -> nTableSize , - ht -> nTableSize )"		190959	0					
ANR	191022	Callee	HT_SIZE_EX		190959	0					
ANR	191023	Identifier	HT_SIZE_EX		190959	0					
ANR	191024	ArgumentList	ht -> nTableSize		190959	1					
ANR	191025	Argument	ht -> nTableSize		190959	0					
ANR	191026	PtrMemberAccess	ht -> nTableSize		190959	0					
ANR	191027	Identifier	ht		190959	0					
ANR	191028	Identifier	nTableSize		190959	1					
ANR	191029	Argument	- ht -> nTableSize		190959	1					
ANR	191030	UnaryOperationExpression	- ht -> nTableSize		190959	0					
ANR	191031	UnaryOperator	-		190959	0					
ANR	191032	PtrMemberAccess	ht -> nTableSize		190959	1					
ANR	191033	Identifier	ht		190959	0					
ANR	191034	Identifier	nTableSize		190959	1					
ANR	191035	Argument	( ht ) -> u . flags & HASH_FLAG_PERSISTENT		190959	1					
ANR	191036	BitAndExpression	( ht ) -> u . flags & HASH_FLAG_PERSISTENT		190959	0		&			
ANR	191037	MemberAccess	( ht ) -> u . flags		190959	0					
ANR	191038	PtrMemberAccess	( ht ) -> u		190959	0					
ANR	191039	Identifier	ht		190959	0					
ANR	191040	Identifier	u		190959	1					
ANR	191041	Identifier	flags		190959	1					
ANR	191042	Identifier	HASH_FLAG_PERSISTENT		190959	1					
ANR	191043	ExpressionStatement	ht -> nTableMask = - ht -> nTableSize	215:1:7201:7233	190959	6	True				
ANR	191044	AssignmentExpression	ht -> nTableMask = - ht -> nTableSize		190959	0		=			
ANR	191045	PtrMemberAccess	ht -> nTableMask		190959	0					
ANR	191046	Identifier	ht		190959	0					
ANR	191047	Identifier	nTableMask		190959	1					
ANR	191048	UnaryOperationExpression	- ht -> nTableSize		190959	1					
ANR	191049	UnaryOperator	-		190959	0					
ANR	191050	PtrMemberAccess	ht -> nTableSize		190959	1					
ANR	191051	Identifier	ht		190959	0					
ANR	191052	Identifier	nTableSize		190959	1					
ANR	191053	ExpressionStatement	"HT_SET_DATA_ADDR ( ht , new_data )"	216:1:7236:7266	190959	7	True				
ANR	191054	CallExpression	"HT_SET_DATA_ADDR ( ht , new_data )"		190959	0					
ANR	191055	Callee	HT_SET_DATA_ADDR		190959	0					
ANR	191056	Identifier	HT_SET_DATA_ADDR		190959	0					
ANR	191057	ArgumentList	ht		190959	1					
ANR	191058	Argument	ht		190959	0					
ANR	191059	Identifier	ht		190959	0					
ANR	191060	Argument	new_data		190959	1					
ANR	191061	Identifier	new_data		190959	0					
ANR	191062	ExpressionStatement	"memcpy ( ht -> arData , old_buckets , sizeof ( Bucket ) * ht -> nNumUsed )"	217:1:7269:7331	190959	8	True				
ANR	191063	CallExpression	"memcpy ( ht -> arData , old_buckets , sizeof ( Bucket ) * ht -> nNumUsed )"		190959	0					
ANR	191064	Callee	memcpy		190959	0					
ANR	191065	Identifier	memcpy		190959	0					
ANR	191066	ArgumentList	ht -> arData		190959	1					
ANR	191067	Argument	ht -> arData		190959	0					
ANR	191068	PtrMemberAccess	ht -> arData		190959	0					
ANR	191069	Identifier	ht		190959	0					
ANR	191070	Identifier	arData		190959	1					
ANR	191071	Argument	old_buckets		190959	1					
ANR	191072	Identifier	old_buckets		190959	0					
ANR	191073	Argument	sizeof ( Bucket ) * ht -> nNumUsed		190959	2					
ANR	191074	MultiplicativeExpression	sizeof ( Bucket ) * ht -> nNumUsed		190959	0		*			
ANR	191075	SizeofExpression	sizeof ( Bucket )		190959	0					
ANR	191076	Sizeof	sizeof		190959	0					
ANR	191077	SizeofOperand	Bucket		190959	1					
ANR	191078	PtrMemberAccess	ht -> nNumUsed		190959	1					
ANR	191079	Identifier	ht		190959	0					
ANR	191080	Identifier	nNumUsed		190959	1					
ANR	191081	ExpressionStatement	"pefree ( old_data , ( ht ) -> u . flags & HASH_FLAG_PERSISTENT )"	218:1:7334:7388	190959	9	True				
ANR	191082	CallExpression	"pefree ( old_data , ( ht ) -> u . flags & HASH_FLAG_PERSISTENT )"		190959	0					
ANR	191083	Callee	pefree		190959	0					
ANR	191084	Identifier	pefree		190959	0					
ANR	191085	ArgumentList	old_data		190959	1					
ANR	191086	Argument	old_data		190959	0					
ANR	191087	Identifier	old_data		190959	0					
ANR	191088	Argument	( ht ) -> u . flags & HASH_FLAG_PERSISTENT		190959	1					
ANR	191089	BitAndExpression	( ht ) -> u . flags & HASH_FLAG_PERSISTENT		190959	0		&			
ANR	191090	MemberAccess	( ht ) -> u . flags		190959	0					
ANR	191091	PtrMemberAccess	( ht ) -> u		190959	0					
ANR	191092	Identifier	ht		190959	0					
ANR	191093	Identifier	u		190959	1					
ANR	191094	Identifier	flags		190959	1					
ANR	191095	Identifier	HASH_FLAG_PERSISTENT		190959	1					
ANR	191096	ExpressionStatement	zend_hash_rehash ( ht )	219:1:7391:7411	190959	10	True				
ANR	191097	CallExpression	zend_hash_rehash ( ht )		190959	0					
ANR	191098	Callee	zend_hash_rehash		190959	0					
ANR	191099	Identifier	zend_hash_rehash		190959	0					
ANR	191100	ArgumentList	ht		190959	1					
ANR	191101	Argument	ht		190959	0					
ANR	191102	Identifier	ht		190959	0					
ANR	191103	ExpressionStatement	HANDLE_UNBLOCK_INTERRUPTIONS ( )	220:1:7414:7444	190959	11	True				
ANR	191104	CallExpression	HANDLE_UNBLOCK_INTERRUPTIONS ( )		190959	0					
ANR	191105	Callee	HANDLE_UNBLOCK_INTERRUPTIONS		190959	0					
ANR	191106	Identifier	HANDLE_UNBLOCK_INTERRUPTIONS		190959	0					
ANR	191107	ArgumentList			190959	1					
ANR	191108	ReturnType	ZEND_API void ZEND_FASTCALL		190959	1					
ANR	191109	Identifier	zend_hash_packed_to_hash		190959	2					
ANR	191110	ParameterList	HashTable * ht		190959	3					
ANR	191111	Parameter	HashTable * ht	206:53:6891:6903	190959	0	True				
ANR	191112	ParameterType	HashTable *		190959	0					
ANR	191113	Identifier	ht		190959	1					
ANR	191114	CFGEntryNode	ENTRY		190959		True				
ANR	191115	CFGExitNode	EXIT		190959		True				
ANR	191116	Symbol	( ht ) -> u . flags		190959						
ANR	191117	Symbol	ht -> nTableMask		190959						
ANR	191118	Symbol	ht -> u		190959						
ANR	191119	Symbol	ht -> arData		190959						
ANR	191120	Symbol	HT_SIZE_EX		190959						
ANR	191121	Symbol	HT_GET_DATA_ADDR		190959						
ANR	191122	Symbol	ht -> u . flags		190959						
ANR	191123	Symbol	ht		190959						
ANR	191124	Symbol	( ht ) -> u		190959						
ANR	191125	Symbol	old_buckets		190959						
ANR	191126	Symbol	~HASH_FLAG_PACKED		190959						
ANR	191127	Symbol	* ht		190959						
ANR	191128	Symbol	old_data		190959						
ANR	191129	Symbol	HASH_FLAG_PERSISTENT		190959						
ANR	191130	Symbol	new_data		190959						
ANR	191131	Symbol	ht -> nTableSize		190959						
ANR	191132	Symbol	GC_REFCOUNT		190959						
ANR	191133	Symbol	ht -> nNumUsed		190959						
ANR	191134	Symbol	pemalloc		190959						
ANR	191135	Function	zend_hash_to_packed	223:0:7449:8071							
ANR	191136	FunctionDef	zend_hash_to_packed (HashTable * ht)		191135	0					
ANR	191137	CompoundStatement		224:0:7512:8071	191135	0					
ANR	191138	IdentifierDeclStatement	"void * new_data , * old_data = HT_GET_DATA_ADDR ( ht ) ;"	225:1:7515:7563	191135	0	True				
ANR	191139	IdentifierDecl	* new_data		191135	0					
ANR	191140	IdentifierDeclType	void *		191135	0					
ANR	191141	Identifier	new_data		191135	1					
ANR	191142	IdentifierDecl	* old_data = HT_GET_DATA_ADDR ( ht )		191135	1					
ANR	191143	IdentifierDeclType	void *		191135	0					
ANR	191144	Identifier	old_data		191135	1					
ANR	191145	AssignmentExpression	* old_data = HT_GET_DATA_ADDR ( ht )		191135	2		=			
ANR	191146	Identifier	old_data		191135	0					
ANR	191147	CallExpression	HT_GET_DATA_ADDR ( ht )		191135	1					
ANR	191148	Callee	HT_GET_DATA_ADDR		191135	0					
ANR	191149	Identifier	HT_GET_DATA_ADDR		191135	0					
ANR	191150	ArgumentList	ht		191135	1					
ANR	191151	Argument	ht		191135	0					
ANR	191152	Identifier	ht		191135	0					
ANR	191153	IdentifierDeclStatement	Bucket * old_buckets = ht -> arData ;	226:1:7566:7598	191135	1	True				
ANR	191154	IdentifierDecl	* old_buckets = ht -> arData		191135	0					
ANR	191155	IdentifierDeclType	Bucket *		191135	0					
ANR	191156	Identifier	old_buckets		191135	1					
ANR	191157	AssignmentExpression	* old_buckets = ht -> arData		191135	2		=			
ANR	191158	Identifier	old_buckets		191135	0					
ANR	191159	PtrMemberAccess	ht -> arData		191135	1					
ANR	191160	Identifier	ht		191135	0					
ANR	191161	Identifier	arData		191135	1					
ANR	191162	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	228:1:7602:7633	191135	2	True				
ANR	191163	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		191135	0					
ANR	191164	Callee	HT_ASSERT		191135	0					
ANR	191165	Identifier	HT_ASSERT		191135	0					
ANR	191166	ArgumentList	GC_REFCOUNT ( ht ) == 1		191135	1					
ANR	191167	Argument	GC_REFCOUNT ( ht ) == 1		191135	0					
ANR	191168	EqualityExpression	GC_REFCOUNT ( ht ) == 1		191135	0		==			
ANR	191169	CallExpression	GC_REFCOUNT ( ht )		191135	0					
ANR	191170	Callee	GC_REFCOUNT		191135	0					
ANR	191171	Identifier	GC_REFCOUNT		191135	0					
ANR	191172	ArgumentList	ht		191135	1					
ANR	191173	Argument	ht		191135	0					
ANR	191174	Identifier	ht		191135	0					
ANR	191175	PrimaryExpression	1		191135	1					
ANR	191176	ExpressionStatement	HANDLE_BLOCK_INTERRUPTIONS ( )	229:1:7636:7664	191135	3	True				
ANR	191177	CallExpression	HANDLE_BLOCK_INTERRUPTIONS ( )		191135	0					
ANR	191178	Callee	HANDLE_BLOCK_INTERRUPTIONS		191135	0					
ANR	191179	Identifier	HANDLE_BLOCK_INTERRUPTIONS		191135	0					
ANR	191180	ArgumentList			191135	1					
ANR	191181	ExpressionStatement	"new_data = pemalloc ( HT_SIZE_EX ( ht -> nTableSize , HT_MIN_MASK ) , ( ht ) -> u . flags & HASH_FLAG_PERSISTENT )"	230:1:7667:7765	191135	4	True				
ANR	191182	AssignmentExpression	"new_data = pemalloc ( HT_SIZE_EX ( ht -> nTableSize , HT_MIN_MASK ) , ( ht ) -> u . flags & HASH_FLAG_PERSISTENT )"		191135	0		=			
ANR	191183	Identifier	new_data		191135	0					
ANR	191184	CallExpression	"pemalloc ( HT_SIZE_EX ( ht -> nTableSize , HT_MIN_MASK ) , ( ht ) -> u . flags & HASH_FLAG_PERSISTENT )"		191135	1					
ANR	191185	Callee	pemalloc		191135	0					
ANR	191186	Identifier	pemalloc		191135	0					
ANR	191187	ArgumentList	"HT_SIZE_EX ( ht -> nTableSize , HT_MIN_MASK )"		191135	1					
ANR	191188	Argument	"HT_SIZE_EX ( ht -> nTableSize , HT_MIN_MASK )"		191135	0					
ANR	191189	CallExpression	"HT_SIZE_EX ( ht -> nTableSize , HT_MIN_MASK )"		191135	0					
ANR	191190	Callee	HT_SIZE_EX		191135	0					
ANR	191191	Identifier	HT_SIZE_EX		191135	0					
ANR	191192	ArgumentList	ht -> nTableSize		191135	1					
ANR	191193	Argument	ht -> nTableSize		191135	0					
ANR	191194	PtrMemberAccess	ht -> nTableSize		191135	0					
ANR	191195	Identifier	ht		191135	0					
ANR	191196	Identifier	nTableSize		191135	1					
ANR	191197	Argument	HT_MIN_MASK		191135	1					
ANR	191198	Identifier	HT_MIN_MASK		191135	0					
ANR	191199	Argument	( ht ) -> u . flags & HASH_FLAG_PERSISTENT		191135	1					
ANR	191200	BitAndExpression	( ht ) -> u . flags & HASH_FLAG_PERSISTENT		191135	0		&			
ANR	191201	MemberAccess	( ht ) -> u . flags		191135	0					
ANR	191202	PtrMemberAccess	( ht ) -> u		191135	0					
ANR	191203	Identifier	ht		191135	0					
ANR	191204	Identifier	u		191135	1					
ANR	191205	Identifier	flags		191135	1					
ANR	191206	Identifier	HASH_FLAG_PERSISTENT		191135	1					
ANR	191207	ExpressionStatement	ht -> u . flags |= HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS	231:1:7768:7823	191135	5	True				
ANR	191208	AssignmentExpression	ht -> u . flags |= HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS		191135	0		|=			
ANR	191209	MemberAccess	ht -> u . flags		191135	0					
ANR	191210	PtrMemberAccess	ht -> u		191135	0					
ANR	191211	Identifier	ht		191135	0					
ANR	191212	Identifier	u		191135	1					
ANR	191213	Identifier	flags		191135	1					
ANR	191214	InclusiveOrExpression	HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS		191135	1		|			
ANR	191215	Identifier	HASH_FLAG_PACKED		191135	0					
ANR	191216	Identifier	HASH_FLAG_STATIC_KEYS		191135	1					
ANR	191217	ExpressionStatement	ht -> nTableMask = HT_MIN_MASK	232:1:7826:7854	191135	6	True				
ANR	191218	AssignmentExpression	ht -> nTableMask = HT_MIN_MASK		191135	0		=			
ANR	191219	PtrMemberAccess	ht -> nTableMask		191135	0					
ANR	191220	Identifier	ht		191135	0					
ANR	191221	Identifier	nTableMask		191135	1					
ANR	191222	Identifier	HT_MIN_MASK		191135	1					
ANR	191223	ExpressionStatement	"HT_SET_DATA_ADDR ( ht , new_data )"	233:1:7857:7887	191135	7	True				
ANR	191224	CallExpression	"HT_SET_DATA_ADDR ( ht , new_data )"		191135	0					
ANR	191225	Callee	HT_SET_DATA_ADDR		191135	0					
ANR	191226	Identifier	HT_SET_DATA_ADDR		191135	0					
ANR	191227	ArgumentList	ht		191135	1					
ANR	191228	Argument	ht		191135	0					
ANR	191229	Identifier	ht		191135	0					
ANR	191230	Argument	new_data		191135	1					
ANR	191231	Identifier	new_data		191135	0					
ANR	191232	ExpressionStatement	HT_HASH_RESET_PACKED ( ht )	234:1:7890:7914	191135	8	True				
ANR	191233	CallExpression	HT_HASH_RESET_PACKED ( ht )		191135	0					
ANR	191234	Callee	HT_HASH_RESET_PACKED		191135	0					
ANR	191235	Identifier	HT_HASH_RESET_PACKED		191135	0					
ANR	191236	ArgumentList	ht		191135	1					
ANR	191237	Argument	ht		191135	0					
ANR	191238	Identifier	ht		191135	0					
ANR	191239	ExpressionStatement	"memcpy ( ht -> arData , old_buckets , sizeof ( Bucket ) * ht -> nNumUsed )"	235:1:7917:7979	191135	9	True				
ANR	191240	CallExpression	"memcpy ( ht -> arData , old_buckets , sizeof ( Bucket ) * ht -> nNumUsed )"		191135	0					
ANR	191241	Callee	memcpy		191135	0					
ANR	191242	Identifier	memcpy		191135	0					
ANR	191243	ArgumentList	ht -> arData		191135	1					
ANR	191244	Argument	ht -> arData		191135	0					
ANR	191245	PtrMemberAccess	ht -> arData		191135	0					
ANR	191246	Identifier	ht		191135	0					
ANR	191247	Identifier	arData		191135	1					
ANR	191248	Argument	old_buckets		191135	1					
ANR	191249	Identifier	old_buckets		191135	0					
ANR	191250	Argument	sizeof ( Bucket ) * ht -> nNumUsed		191135	2					
ANR	191251	MultiplicativeExpression	sizeof ( Bucket ) * ht -> nNumUsed		191135	0		*			
ANR	191252	SizeofExpression	sizeof ( Bucket )		191135	0					
ANR	191253	Sizeof	sizeof		191135	0					
ANR	191254	SizeofOperand	Bucket		191135	1					
ANR	191255	PtrMemberAccess	ht -> nNumUsed		191135	1					
ANR	191256	Identifier	ht		191135	0					
ANR	191257	Identifier	nNumUsed		191135	1					
ANR	191258	ExpressionStatement	"pefree ( old_data , ( ht ) -> u . flags & HASH_FLAG_PERSISTENT )"	236:1:7982:8036	191135	10	True				
ANR	191259	CallExpression	"pefree ( old_data , ( ht ) -> u . flags & HASH_FLAG_PERSISTENT )"		191135	0					
ANR	191260	Callee	pefree		191135	0					
ANR	191261	Identifier	pefree		191135	0					
ANR	191262	ArgumentList	old_data		191135	1					
ANR	191263	Argument	old_data		191135	0					
ANR	191264	Identifier	old_data		191135	0					
ANR	191265	Argument	( ht ) -> u . flags & HASH_FLAG_PERSISTENT		191135	1					
ANR	191266	BitAndExpression	( ht ) -> u . flags & HASH_FLAG_PERSISTENT		191135	0		&			
ANR	191267	MemberAccess	( ht ) -> u . flags		191135	0					
ANR	191268	PtrMemberAccess	( ht ) -> u		191135	0					
ANR	191269	Identifier	ht		191135	0					
ANR	191270	Identifier	u		191135	1					
ANR	191271	Identifier	flags		191135	1					
ANR	191272	Identifier	HASH_FLAG_PERSISTENT		191135	1					
ANR	191273	ExpressionStatement	HANDLE_UNBLOCK_INTERRUPTIONS ( )	237:1:8039:8069	191135	11	True				
ANR	191274	CallExpression	HANDLE_UNBLOCK_INTERRUPTIONS ( )		191135	0					
ANR	191275	Callee	HANDLE_UNBLOCK_INTERRUPTIONS		191135	0					
ANR	191276	Identifier	HANDLE_UNBLOCK_INTERRUPTIONS		191135	0					
ANR	191277	ArgumentList			191135	1					
ANR	191278	ReturnType	ZEND_API void ZEND_FASTCALL		191135	1					
ANR	191279	Identifier	zend_hash_to_packed		191135	2					
ANR	191280	ParameterList	HashTable * ht		191135	3					
ANR	191281	Parameter	HashTable * ht	223:48:7497:7509	191135	0	True				
ANR	191282	ParameterType	HashTable *		191135	0					
ANR	191283	Identifier	ht		191135	1					
ANR	191284	CFGEntryNode	ENTRY		191135		True				
ANR	191285	CFGExitNode	EXIT		191135		True				
ANR	191286	Symbol	HASH_FLAG_STATIC_KEYS		191135						
ANR	191287	Symbol	( ht ) -> u . flags		191135						
ANR	191288	Symbol	ht -> nTableMask		191135						
ANR	191289	Symbol	HT_MIN_MASK		191135						
ANR	191290	Symbol	HASH_FLAG_PACKED		191135						
ANR	191291	Symbol	ht -> u		191135						
ANR	191292	Symbol	ht -> arData		191135						
ANR	191293	Symbol	HT_SIZE_EX		191135						
ANR	191294	Symbol	HT_GET_DATA_ADDR		191135						
ANR	191295	Symbol	ht -> u . flags		191135						
ANR	191296	Symbol	ht		191135						
ANR	191297	Symbol	( ht ) -> u		191135						
ANR	191298	Symbol	old_buckets		191135						
ANR	191299	Symbol	* ht		191135						
ANR	191300	Symbol	old_data		191135						
ANR	191301	Symbol	HASH_FLAG_PERSISTENT		191135						
ANR	191302	Symbol	new_data		191135						
ANR	191303	Symbol	ht -> nTableSize		191135						
ANR	191304	Symbol	GC_REFCOUNT		191135						
ANR	191305	Symbol	ht -> nNumUsed		191135						
ANR	191306	Symbol	pemalloc		191135						
ANR	191307	Function	_zend_hash_init_ex	240:0:8074:8400							
ANR	191308	FunctionDef	"_zend_hash_init_ex (HashTable * ht , uint32_t nSize , dtor_func_t pDestructor , zend_bool persistent , zend_bool bApplyProtection ZEND_FILE_LINE_DC)"		191307	0					
ANR	191309	CompoundStatement		241:0:8245:8400	191307	0					
ANR	191310	Statement	_zend_hash_init	242:1:8248:8262	191307	0	True				
ANR	191311	Statement	(	242:16:8263:8263	191307	1	True				
ANR	191312	Statement	ht	242:17:8264:8265	191307	2	True				
ANR	191313	Statement	","	242:19:8266:8266	191307	3	True				
ANR	191314	Statement	nSize	242:21:8268:8272	191307	4	True				
ANR	191315	Statement	","	242:26:8273:8273	191307	5	True				
ANR	191316	Statement	pDestructor	242:28:8275:8285	191307	6	True				
ANR	191317	Statement	","	242:39:8286:8286	191307	7	True				
ANR	191318	Statement	persistent	242:41:8288:8297	191307	8	True				
ANR	191319	Statement	ZEND_FILE_LINE_RELAY_CC	242:52:8299:8321	191307	9	True				
ANR	191320	Statement	)	242:75:8322:8322	191307	10	True				
ANR	191321	ExpressionStatement		242:76:8323:8323	191307	11	True				
ANR	191322	IfStatement	if ( ! bApplyProtection )		191307	12					
ANR	191323	Condition	! bApplyProtection	243:5:8330:8346	191307	0	True				
ANR	191324	UnaryOperationExpression	! bApplyProtection		191307	0					
ANR	191325	UnaryOperator	!		191307	0					
ANR	191326	Identifier	bApplyProtection		191307	1					
ANR	191327	CompoundStatement		3:24:103:103	191307	1					
ANR	191328	ExpressionStatement	ht -> u . flags &= ~HASH_FLAG_APPLY_PROTECTION	244:2:8353:8395	191307	0	True				
ANR	191329	AssignmentExpression	ht -> u . flags &= ~HASH_FLAG_APPLY_PROTECTION		191307	0		&=			
ANR	191330	MemberAccess	ht -> u . flags		191307	0					
ANR	191331	PtrMemberAccess	ht -> u		191307	0					
ANR	191332	Identifier	ht		191307	0					
ANR	191333	Identifier	u		191307	1					
ANR	191334	Identifier	flags		191307	1					
ANR	191335	Identifier	~HASH_FLAG_APPLY_PROTECTION		191307	1					
ANR	191336	ReturnType	ZEND_API void ZEND_FASTCALL		191307	1					
ANR	191337	Identifier	_zend_hash_init_ex		191307	2					
ANR	191338	ParameterList	"HashTable * ht , uint32_t nSize , dtor_func_t pDestructor , zend_bool persistent , zend_bool bApplyProtection ZEND_FILE_LINE_DC"		191307	3					
ANR	191339	Parameter	HashTable * ht	240:47:8121:8133	191307	0	True				
ANR	191340	ParameterType	HashTable *		191307	0					
ANR	191341	Identifier	ht		191307	1					
ANR	191342	Parameter	uint32_t nSize	240:62:8136:8149	191307	1	True				
ANR	191343	ParameterType	uint32_t		191307	0					
ANR	191344	Identifier	nSize		191307	1					
ANR	191345	Parameter	dtor_func_t pDestructor	240:78:8152:8174	191307	2	True				
ANR	191346	ParameterType	dtor_func_t		191307	0					
ANR	191347	Identifier	pDestructor		191307	1					
ANR	191348	Parameter	zend_bool persistent	240:103:8177:8196	191307	3	True				
ANR	191349	ParameterType	zend_bool		191307	0					
ANR	191350	Identifier	persistent		191307	1					
ANR	191351	Parameter	zend_bool bApplyProtection ZEND_FILE_LINE_DC	240:125:8199:8242	191307	4	True				
ANR	191352	ParameterType	zend_bool bApplyProtection		191307	0					
ANR	191353	Identifier	ZEND_FILE_LINE_DC		191307	1					
ANR	191354	CFGEntryNode	ENTRY		191307		True				
ANR	191355	CFGExitNode	EXIT		191307		True				
ANR	191356	Symbol	* ht		191307						
ANR	191357	Symbol	~HASH_FLAG_APPLY_PROTECTION		191307						
ANR	191358	Symbol	bApplyProtection		191307						
ANR	191359	Symbol	ht -> u		191307						
ANR	191360	Symbol	ZEND_FILE_LINE_DC		191307						
ANR	191361	Symbol	nSize		191307						
ANR	191362	Symbol	pDestructor		191307						
ANR	191363	Symbol	ht -> u . flags		191307						
ANR	191364	Symbol	ht		191307						
ANR	191365	Symbol	persistent		191307						
ANR	191366	Function	zend_hash_extend	248:0:8403:9751							
ANR	191367	FunctionDef	"zend_hash_extend (HashTable * ht , uint32_t nSize , zend_bool packed)"		191366	0					
ANR	191368	CompoundStatement		249:0:8497:9751	191366	0					
ANR	191369	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	250:1:8500:8531	191366	0	True				
ANR	191370	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		191366	0					
ANR	191371	Callee	HT_ASSERT		191366	0					
ANR	191372	Identifier	HT_ASSERT		191366	0					
ANR	191373	ArgumentList	GC_REFCOUNT ( ht ) == 1		191366	1					
ANR	191374	Argument	GC_REFCOUNT ( ht ) == 1		191366	0					
ANR	191375	EqualityExpression	GC_REFCOUNT ( ht ) == 1		191366	0		==			
ANR	191376	CallExpression	GC_REFCOUNT ( ht )		191366	0					
ANR	191377	Callee	GC_REFCOUNT		191366	0					
ANR	191378	Identifier	GC_REFCOUNT		191366	0					
ANR	191379	ArgumentList	ht		191366	1					
ANR	191380	Argument	ht		191366	0					
ANR	191381	Identifier	ht		191366	0					
ANR	191382	PrimaryExpression	1		191366	1					
ANR	191383	IfStatement	if ( nSize == 0 )		191366	1					
ANR	191384	Condition	nSize == 0	251:5:8538:8547	191366	0	True				
ANR	191385	EqualityExpression	nSize == 0		191366	0		==			
ANR	191386	Identifier	nSize		191366	0					
ANR	191387	PrimaryExpression	0		191366	1					
ANR	191388	ReturnStatement	return ;	251:17:8550:8556	191366	1	True				
ANR	191389	IfStatement	if ( UNEXPECTED ( ! ( ( ht ) -> u . flags & HASH_FLAG_INITIALIZED ) ) )		191366	2					
ANR	191390	Condition	UNEXPECTED ( ! ( ( ht ) -> u . flags & HASH_FLAG_INITIALIZED ) )	252:5:8563:8614	191366	0	True				
ANR	191391	CallExpression	UNEXPECTED ( ! ( ( ht ) -> u . flags & HASH_FLAG_INITIALIZED ) )		191366	0					
ANR	191392	Callee	UNEXPECTED		191366	0					
ANR	191393	Identifier	UNEXPECTED		191366	0					
ANR	191394	ArgumentList	! ( ( ht ) -> u . flags & HASH_FLAG_INITIALIZED )		191366	1					
ANR	191395	Argument	! ( ( ht ) -> u . flags & HASH_FLAG_INITIALIZED )		191366	0					
ANR	191396	UnaryOperationExpression	! ( ( ht ) -> u . flags & HASH_FLAG_INITIALIZED )		191366	0					
ANR	191397	UnaryOperator	!		191366	0					
ANR	191398	BitAndExpression	( ht ) -> u . flags & HASH_FLAG_INITIALIZED		191366	1		&			
ANR	191399	MemberAccess	( ht ) -> u . flags		191366	0					
ANR	191400	PtrMemberAccess	( ht ) -> u		191366	0					
ANR	191401	Identifier	ht		191366	0					
ANR	191402	Identifier	u		191366	1					
ANR	191403	Identifier	flags		191366	1					
ANR	191404	Identifier	HASH_FLAG_INITIALIZED		191366	1					
ANR	191405	CompoundStatement		4:59:119:119	191366	1					
ANR	191406	IfStatement	if ( nSize > ht -> nTableSize )		191366	0					
ANR	191407	Condition	nSize > ht -> nTableSize	253:6:8625:8646	191366	0	True				
ANR	191408	RelationalExpression	nSize > ht -> nTableSize		191366	0		>			
ANR	191409	Identifier	nSize		191366	0					
ANR	191410	PtrMemberAccess	ht -> nTableSize		191366	1					
ANR	191411	Identifier	ht		191366	0					
ANR	191412	Identifier	nTableSize		191366	1					
ANR	191413	CompoundStatement		5:30:151:151	191366	1					
ANR	191414	ExpressionStatement	ht -> nTableSize = zend_hash_check_size ( nSize )	254:3:8654:8698	191366	0	True				
ANR	191415	AssignmentExpression	ht -> nTableSize = zend_hash_check_size ( nSize )		191366	0		=			
ANR	191416	PtrMemberAccess	ht -> nTableSize		191366	0					
ANR	191417	Identifier	ht		191366	0					
ANR	191418	Identifier	nTableSize		191366	1					
ANR	191419	CallExpression	zend_hash_check_size ( nSize )		191366	1					
ANR	191420	Callee	zend_hash_check_size		191366	0					
ANR	191421	Identifier	zend_hash_check_size		191366	0					
ANR	191422	ArgumentList	nSize		191366	1					
ANR	191423	Argument	nSize		191366	0					
ANR	191424	Identifier	nSize		191366	0					
ANR	191425	ExpressionStatement	"zend_hash_check_init ( ht , packed )"	256:2:8706:8738	191366	1	True				
ANR	191426	CallExpression	"zend_hash_check_init ( ht , packed )"		191366	0					
ANR	191427	Callee	zend_hash_check_init		191366	0					
ANR	191428	Identifier	zend_hash_check_init		191366	0					
ANR	191429	ArgumentList	ht		191366	1					
ANR	191430	Argument	ht		191366	0					
ANR	191431	Identifier	ht		191366	0					
ANR	191432	Argument	packed		191366	1					
ANR	191433	Identifier	packed		191366	0					
ANR	191434	ElseStatement	else		191366	0					
ANR	191435	CompoundStatement		9:8:250:250	191366	0					
ANR	191436	IfStatement	if ( packed )		191366	0					
ANR	191437	Condition	packed	258:6:8756:8761	191366	0	True				
ANR	191438	Identifier	packed		191366	0					
ANR	191439	CompoundStatement		10:14:266:266	191366	1					
ANR	191440	ExpressionStatement	ZEND_ASSERT ( ht -> u . flags & HASH_FLAG_PACKED )	259:3:8769:8812	191366	0	True				
ANR	191441	CallExpression	ZEND_ASSERT ( ht -> u . flags & HASH_FLAG_PACKED )		191366	0					
ANR	191442	Callee	ZEND_ASSERT		191366	0					
ANR	191443	Identifier	ZEND_ASSERT		191366	0					
ANR	191444	ArgumentList	ht -> u . flags & HASH_FLAG_PACKED		191366	1					
ANR	191445	Argument	ht -> u . flags & HASH_FLAG_PACKED		191366	0					
ANR	191446	BitAndExpression	ht -> u . flags & HASH_FLAG_PACKED		191366	0		&			
ANR	191447	MemberAccess	ht -> u . flags		191366	0					
ANR	191448	PtrMemberAccess	ht -> u		191366	0					
ANR	191449	Identifier	ht		191366	0					
ANR	191450	Identifier	u		191366	1					
ANR	191451	Identifier	flags		191366	1					
ANR	191452	Identifier	HASH_FLAG_PACKED		191366	1					
ANR	191453	IfStatement	if ( nSize > ht -> nTableSize )		191366	1					
ANR	191454	Condition	nSize > ht -> nTableSize	260:7:8821:8842	191366	0	True				
ANR	191455	RelationalExpression	nSize > ht -> nTableSize		191366	0		>			
ANR	191456	Identifier	nSize		191366	0					
ANR	191457	PtrMemberAccess	ht -> nTableSize		191366	1					
ANR	191458	Identifier	ht		191366	0					
ANR	191459	Identifier	nTableSize		191366	1					
ANR	191460	CompoundStatement		12:31:347:347	191366	1					
ANR	191461	ExpressionStatement	HANDLE_BLOCK_INTERRUPTIONS ( )	261:4:8851:8879	191366	0	True				
ANR	191462	CallExpression	HANDLE_BLOCK_INTERRUPTIONS ( )		191366	0					
ANR	191463	Callee	HANDLE_BLOCK_INTERRUPTIONS		191366	0					
ANR	191464	Identifier	HANDLE_BLOCK_INTERRUPTIONS		191366	0					
ANR	191465	ArgumentList			191366	1					
ANR	191466	ExpressionStatement	ht -> nTableSize = zend_hash_check_size ( nSize )	262:4:8885:8929	191366	1	True				
ANR	191467	AssignmentExpression	ht -> nTableSize = zend_hash_check_size ( nSize )		191366	0		=			
ANR	191468	PtrMemberAccess	ht -> nTableSize		191366	0					
ANR	191469	Identifier	ht		191366	0					
ANR	191470	Identifier	nTableSize		191366	1					
ANR	191471	CallExpression	zend_hash_check_size ( nSize )		191366	1					
ANR	191472	Callee	zend_hash_check_size		191366	0					
ANR	191473	Identifier	zend_hash_check_size		191366	0					
ANR	191474	ArgumentList	nSize		191366	1					
ANR	191475	Argument	nSize		191366	0					
ANR	191476	Identifier	nSize		191366	0					
ANR	191477	ExpressionStatement	"HT_SET_DATA_ADDR ( ht , perealloc2 ( HT_GET_DATA_ADDR ( ht ) , HT_SIZE ( ht ) , HT_USED_SIZE ( ht ) , ht -> u . flags & HASH_FLAG_PERSISTENT ) )"	263:4:8935:9056	191366	2	True				
ANR	191478	CallExpression	"HT_SET_DATA_ADDR ( ht , perealloc2 ( HT_GET_DATA_ADDR ( ht ) , HT_SIZE ( ht ) , HT_USED_SIZE ( ht ) , ht -> u . flags & HASH_FLAG_PERSISTENT ) )"		191366	0					
ANR	191479	Callee	HT_SET_DATA_ADDR		191366	0					
ANR	191480	Identifier	HT_SET_DATA_ADDR		191366	0					
ANR	191481	ArgumentList	ht		191366	1					
ANR	191482	Argument	ht		191366	0					
ANR	191483	Identifier	ht		191366	0					
ANR	191484	Argument	"perealloc2 ( HT_GET_DATA_ADDR ( ht ) , HT_SIZE ( ht ) , HT_USED_SIZE ( ht ) , ht -> u . flags & HASH_FLAG_PERSISTENT )"		191366	1					
ANR	191485	CallExpression	"perealloc2 ( HT_GET_DATA_ADDR ( ht ) , HT_SIZE ( ht ) , HT_USED_SIZE ( ht ) , ht -> u . flags & HASH_FLAG_PERSISTENT )"		191366	0					
ANR	191486	Callee	perealloc2		191366	0					
ANR	191487	Identifier	perealloc2		191366	0					
ANR	191488	ArgumentList	HT_GET_DATA_ADDR ( ht )		191366	1					
ANR	191489	Argument	HT_GET_DATA_ADDR ( ht )		191366	0					
ANR	191490	CallExpression	HT_GET_DATA_ADDR ( ht )		191366	0					
ANR	191491	Callee	HT_GET_DATA_ADDR		191366	0					
ANR	191492	Identifier	HT_GET_DATA_ADDR		191366	0					
ANR	191493	ArgumentList	ht		191366	1					
ANR	191494	Argument	ht		191366	0					
ANR	191495	Identifier	ht		191366	0					
ANR	191496	Argument	HT_SIZE ( ht )		191366	1					
ANR	191497	CallExpression	HT_SIZE ( ht )		191366	0					
ANR	191498	Callee	HT_SIZE		191366	0					
ANR	191499	Identifier	HT_SIZE		191366	0					
ANR	191500	ArgumentList	ht		191366	1					
ANR	191501	Argument	ht		191366	0					
ANR	191502	Identifier	ht		191366	0					
ANR	191503	Argument	HT_USED_SIZE ( ht )		191366	2					
ANR	191504	CallExpression	HT_USED_SIZE ( ht )		191366	0					
ANR	191505	Callee	HT_USED_SIZE		191366	0					
ANR	191506	Identifier	HT_USED_SIZE		191366	0					
ANR	191507	ArgumentList	ht		191366	1					
ANR	191508	Argument	ht		191366	0					
ANR	191509	Identifier	ht		191366	0					
ANR	191510	Argument	ht -> u . flags & HASH_FLAG_PERSISTENT		191366	3					
ANR	191511	BitAndExpression	ht -> u . flags & HASH_FLAG_PERSISTENT		191366	0		&			
ANR	191512	MemberAccess	ht -> u . flags		191366	0					
ANR	191513	PtrMemberAccess	ht -> u		191366	0					
ANR	191514	Identifier	ht		191366	0					
ANR	191515	Identifier	u		191366	1					
ANR	191516	Identifier	flags		191366	1					
ANR	191517	Identifier	HASH_FLAG_PERSISTENT		191366	1					
ANR	191518	ExpressionStatement	HANDLE_UNBLOCK_INTERRUPTIONS ( )	264:4:9062:9092	191366	3	True				
ANR	191519	CallExpression	HANDLE_UNBLOCK_INTERRUPTIONS ( )		191366	0					
ANR	191520	Callee	HANDLE_UNBLOCK_INTERRUPTIONS		191366	0					
ANR	191521	Identifier	HANDLE_UNBLOCK_INTERRUPTIONS		191366	0					
ANR	191522	ArgumentList			191366	1					
ANR	191523	ElseStatement	else		191366	0					
ANR	191524	CompoundStatement		18:9:610:610	191366	0					
ANR	191525	ExpressionStatement	ZEND_ASSERT ( ! ( ht -> u . flags & HASH_FLAG_PACKED ) )	267:3:9113:9159	191366	0	True				
ANR	191526	CallExpression	ZEND_ASSERT ( ! ( ht -> u . flags & HASH_FLAG_PACKED ) )		191366	0					
ANR	191527	Callee	ZEND_ASSERT		191366	0					
ANR	191528	Identifier	ZEND_ASSERT		191366	0					
ANR	191529	ArgumentList	! ( ht -> u . flags & HASH_FLAG_PACKED )		191366	1					
ANR	191530	Argument	! ( ht -> u . flags & HASH_FLAG_PACKED )		191366	0					
ANR	191531	UnaryOperationExpression	! ( ht -> u . flags & HASH_FLAG_PACKED )		191366	0					
ANR	191532	UnaryOperator	!		191366	0					
ANR	191533	BitAndExpression	ht -> u . flags & HASH_FLAG_PACKED		191366	1		&			
ANR	191534	MemberAccess	ht -> u . flags		191366	0					
ANR	191535	PtrMemberAccess	ht -> u		191366	0					
ANR	191536	Identifier	ht		191366	0					
ANR	191537	Identifier	u		191366	1					
ANR	191538	Identifier	flags		191366	1					
ANR	191539	Identifier	HASH_FLAG_PACKED		191366	1					
ANR	191540	IfStatement	if ( nSize > ht -> nTableSize )		191366	1					
ANR	191541	Condition	nSize > ht -> nTableSize	268:7:9168:9189	191366	0	True				
ANR	191542	RelationalExpression	nSize > ht -> nTableSize		191366	0		>			
ANR	191543	Identifier	nSize		191366	0					
ANR	191544	PtrMemberAccess	ht -> nTableSize		191366	1					
ANR	191545	Identifier	ht		191366	0					
ANR	191546	Identifier	nTableSize		191366	1					
ANR	191547	CompoundStatement		22:4:754:786	191366	1					
ANR	191548	IdentifierDeclStatement	"void * new_data , * old_data = HT_GET_DATA_ADDR ( ht ) ;"	269:4:9198:9246	191366	0	True				
ANR	191549	IdentifierDecl	* new_data		191366	0					
ANR	191550	IdentifierDeclType	void *		191366	0					
ANR	191551	Identifier	new_data		191366	1					
ANR	191552	IdentifierDecl	* old_data = HT_GET_DATA_ADDR ( ht )		191366	1					
ANR	191553	IdentifierDeclType	void *		191366	0					
ANR	191554	Identifier	old_data		191366	1					
ANR	191555	AssignmentExpression	* old_data = HT_GET_DATA_ADDR ( ht )		191366	2		=			
ANR	191556	Identifier	old_data		191366	0					
ANR	191557	CallExpression	HT_GET_DATA_ADDR ( ht )		191366	1					
ANR	191558	Callee	HT_GET_DATA_ADDR		191366	0					
ANR	191559	Identifier	HT_GET_DATA_ADDR		191366	0					
ANR	191560	ArgumentList	ht		191366	1					
ANR	191561	Argument	ht		191366	0					
ANR	191562	Identifier	ht		191366	0					
ANR	191563	IdentifierDeclStatement	Bucket * old_buckets = ht -> arData ;	270:4:9252:9284	191366	1	True				
ANR	191564	IdentifierDecl	* old_buckets = ht -> arData		191366	0					
ANR	191565	IdentifierDeclType	Bucket *		191366	0					
ANR	191566	Identifier	old_buckets		191366	1					
ANR	191567	AssignmentExpression	* old_buckets = ht -> arData		191366	2		=			
ANR	191568	Identifier	old_buckets		191366	0					
ANR	191569	PtrMemberAccess	ht -> arData		191366	1					
ANR	191570	Identifier	ht		191366	0					
ANR	191571	Identifier	arData		191366	1					
ANR	191572	ExpressionStatement	nSize = zend_hash_check_size ( nSize )	271:4:9290:9325	191366	2	True				
ANR	191573	AssignmentExpression	nSize = zend_hash_check_size ( nSize )		191366	0		=			
ANR	191574	Identifier	nSize		191366	0					
ANR	191575	CallExpression	zend_hash_check_size ( nSize )		191366	1					
ANR	191576	Callee	zend_hash_check_size		191366	0					
ANR	191577	Identifier	zend_hash_check_size		191366	0					
ANR	191578	ArgumentList	nSize		191366	1					
ANR	191579	Argument	nSize		191366	0					
ANR	191580	Identifier	nSize		191366	0					
ANR	191581	ExpressionStatement	HANDLE_BLOCK_INTERRUPTIONS ( )	272:4:9331:9359	191366	3	True				
ANR	191582	CallExpression	HANDLE_BLOCK_INTERRUPTIONS ( )		191366	0					
ANR	191583	Callee	HANDLE_BLOCK_INTERRUPTIONS		191366	0					
ANR	191584	Identifier	HANDLE_BLOCK_INTERRUPTIONS		191366	0					
ANR	191585	ArgumentList			191366	1					
ANR	191586	ExpressionStatement	"new_data = pemalloc ( HT_SIZE_EX ( nSize , - nSize ) , ht -> u . flags & HASH_FLAG_PERSISTENT )"	273:4:9365:9447	191366	4	True				
ANR	191587	AssignmentExpression	"new_data = pemalloc ( HT_SIZE_EX ( nSize , - nSize ) , ht -> u . flags & HASH_FLAG_PERSISTENT )"		191366	0		=			
ANR	191588	Identifier	new_data		191366	0					
ANR	191589	CallExpression	"pemalloc ( HT_SIZE_EX ( nSize , - nSize ) , ht -> u . flags & HASH_FLAG_PERSISTENT )"		191366	1					
ANR	191590	Callee	pemalloc		191366	0					
ANR	191591	Identifier	pemalloc		191366	0					
ANR	191592	ArgumentList	"HT_SIZE_EX ( nSize , - nSize )"		191366	1					
ANR	191593	Argument	"HT_SIZE_EX ( nSize , - nSize )"		191366	0					
ANR	191594	CallExpression	"HT_SIZE_EX ( nSize , - nSize )"		191366	0					
ANR	191595	Callee	HT_SIZE_EX		191366	0					
ANR	191596	Identifier	HT_SIZE_EX		191366	0					
ANR	191597	ArgumentList	nSize		191366	1					
ANR	191598	Argument	nSize		191366	0					
ANR	191599	Identifier	nSize		191366	0					
ANR	191600	Argument	- nSize		191366	1					
ANR	191601	UnaryOperationExpression	- nSize		191366	0					
ANR	191602	UnaryOperator	-		191366	0					
ANR	191603	Identifier	nSize		191366	1					
ANR	191604	Argument	ht -> u . flags & HASH_FLAG_PERSISTENT		191366	1					
ANR	191605	BitAndExpression	ht -> u . flags & HASH_FLAG_PERSISTENT		191366	0		&			
ANR	191606	MemberAccess	ht -> u . flags		191366	0					
ANR	191607	PtrMemberAccess	ht -> u		191366	0					
ANR	191608	Identifier	ht		191366	0					
ANR	191609	Identifier	u		191366	1					
ANR	191610	Identifier	flags		191366	1					
ANR	191611	Identifier	HASH_FLAG_PERSISTENT		191366	1					
ANR	191612	ExpressionStatement	ht -> nTableSize = nSize	274:4:9453:9475	191366	5	True				
ANR	191613	AssignmentExpression	ht -> nTableSize = nSize		191366	0		=			
ANR	191614	PtrMemberAccess	ht -> nTableSize		191366	0					
ANR	191615	Identifier	ht		191366	0					
ANR	191616	Identifier	nTableSize		191366	1					
ANR	191617	Identifier	nSize		191366	1					
ANR	191618	ExpressionStatement	ht -> nTableMask = - ht -> nTableSize	275:4:9481:9513	191366	6	True				
ANR	191619	AssignmentExpression	ht -> nTableMask = - ht -> nTableSize		191366	0		=			
ANR	191620	PtrMemberAccess	ht -> nTableMask		191366	0					
ANR	191621	Identifier	ht		191366	0					
ANR	191622	Identifier	nTableMask		191366	1					
ANR	191623	UnaryOperationExpression	- ht -> nTableSize		191366	1					
ANR	191624	UnaryOperator	-		191366	0					
ANR	191625	PtrMemberAccess	ht -> nTableSize		191366	1					
ANR	191626	Identifier	ht		191366	0					
ANR	191627	Identifier	nTableSize		191366	1					
ANR	191628	ExpressionStatement	"HT_SET_DATA_ADDR ( ht , new_data )"	276:4:9519:9549	191366	7	True				
ANR	191629	CallExpression	"HT_SET_DATA_ADDR ( ht , new_data )"		191366	0					
ANR	191630	Callee	HT_SET_DATA_ADDR		191366	0					
ANR	191631	Identifier	HT_SET_DATA_ADDR		191366	0					
ANR	191632	ArgumentList	ht		191366	1					
ANR	191633	Argument	ht		191366	0					
ANR	191634	Identifier	ht		191366	0					
ANR	191635	Argument	new_data		191366	1					
ANR	191636	Identifier	new_data		191366	0					
ANR	191637	ExpressionStatement	"memcpy ( ht -> arData , old_buckets , sizeof ( Bucket ) * ht -> nNumUsed )"	277:4:9555:9617	191366	8	True				
ANR	191638	CallExpression	"memcpy ( ht -> arData , old_buckets , sizeof ( Bucket ) * ht -> nNumUsed )"		191366	0					
ANR	191639	Callee	memcpy		191366	0					
ANR	191640	Identifier	memcpy		191366	0					
ANR	191641	ArgumentList	ht -> arData		191366	1					
ANR	191642	Argument	ht -> arData		191366	0					
ANR	191643	PtrMemberAccess	ht -> arData		191366	0					
ANR	191644	Identifier	ht		191366	0					
ANR	191645	Identifier	arData		191366	1					
ANR	191646	Argument	old_buckets		191366	1					
ANR	191647	Identifier	old_buckets		191366	0					
ANR	191648	Argument	sizeof ( Bucket ) * ht -> nNumUsed		191366	2					
ANR	191649	MultiplicativeExpression	sizeof ( Bucket ) * ht -> nNumUsed		191366	0		*			
ANR	191650	SizeofExpression	sizeof ( Bucket )		191366	0					
ANR	191651	Sizeof	sizeof		191366	0					
ANR	191652	SizeofOperand	Bucket		191366	1					
ANR	191653	PtrMemberAccess	ht -> nNumUsed		191366	1					
ANR	191654	Identifier	ht		191366	0					
ANR	191655	Identifier	nNumUsed		191366	1					
ANR	191656	ExpressionStatement	"pefree ( old_data , ht -> u . flags & HASH_FLAG_PERSISTENT )"	278:4:9623:9675	191366	9	True				
ANR	191657	CallExpression	"pefree ( old_data , ht -> u . flags & HASH_FLAG_PERSISTENT )"		191366	0					
ANR	191658	Callee	pefree		191366	0					
ANR	191659	Identifier	pefree		191366	0					
ANR	191660	ArgumentList	old_data		191366	1					
ANR	191661	Argument	old_data		191366	0					
ANR	191662	Identifier	old_data		191366	0					
ANR	191663	Argument	ht -> u . flags & HASH_FLAG_PERSISTENT		191366	1					
ANR	191664	BitAndExpression	ht -> u . flags & HASH_FLAG_PERSISTENT		191366	0		&			
ANR	191665	MemberAccess	ht -> u . flags		191366	0					
ANR	191666	PtrMemberAccess	ht -> u		191366	0					
ANR	191667	Identifier	ht		191366	0					
ANR	191668	Identifier	u		191366	1					
ANR	191669	Identifier	flags		191366	1					
ANR	191670	Identifier	HASH_FLAG_PERSISTENT		191366	1					
ANR	191671	ExpressionStatement	zend_hash_rehash ( ht )	279:4:9681:9701	191366	10	True				
ANR	191672	CallExpression	zend_hash_rehash ( ht )		191366	0					
ANR	191673	Callee	zend_hash_rehash		191366	0					
ANR	191674	Identifier	zend_hash_rehash		191366	0					
ANR	191675	ArgumentList	ht		191366	1					
ANR	191676	Argument	ht		191366	0					
ANR	191677	Identifier	ht		191366	0					
ANR	191678	ExpressionStatement	HANDLE_UNBLOCK_INTERRUPTIONS ( )	280:4:9707:9737	191366	11	True				
ANR	191679	CallExpression	HANDLE_UNBLOCK_INTERRUPTIONS ( )		191366	0					
ANR	191680	Callee	HANDLE_UNBLOCK_INTERRUPTIONS		191366	0					
ANR	191681	Identifier	HANDLE_UNBLOCK_INTERRUPTIONS		191366	0					
ANR	191682	ArgumentList			191366	1					
ANR	191683	ReturnType	ZEND_API void ZEND_FASTCALL		191366	1					
ANR	191684	Identifier	zend_hash_extend		191366	2					
ANR	191685	ParameterList	"HashTable * ht , uint32_t nSize , zend_bool packed"		191366	3					
ANR	191686	Parameter	HashTable * ht	248:45:8448:8460	191366	0	True				
ANR	191687	ParameterType	HashTable *		191366	0					
ANR	191688	Identifier	ht		191366	1					
ANR	191689	Parameter	uint32_t nSize	248:60:8463:8476	191366	1	True				
ANR	191690	ParameterType	uint32_t		191366	0					
ANR	191691	Identifier	nSize		191366	1					
ANR	191692	Parameter	zend_bool packed	248:76:8479:8494	191366	2	True				
ANR	191693	ParameterType	zend_bool		191366	0					
ANR	191694	Identifier	packed		191366	1					
ANR	191695	CFGEntryNode	ENTRY		191366		True				
ANR	191696	CFGExitNode	EXIT		191366		True				
ANR	191697	Symbol	ht -> nTableMask		191366						
ANR	191698	Symbol	HASH_FLAG_PACKED		191366						
ANR	191699	Symbol	ht -> u		191366						
ANR	191700	Symbol	ht -> arData		191366						
ANR	191701	Symbol	HT_SIZE_EX		191366						
ANR	191702	Symbol	ht -> u . flags		191366						
ANR	191703	Symbol	ht		191366						
ANR	191704	Symbol	UNEXPECTED		191366						
ANR	191705	Symbol	* ht		191366						
ANR	191706	Symbol	old_data		191366						
ANR	191707	Symbol	HASH_FLAG_INITIALIZED		191366						
ANR	191708	Symbol	ht -> nTableSize		191366						
ANR	191709	Symbol	packed		191366						
ANR	191710	Symbol	GC_REFCOUNT		191366						
ANR	191711	Symbol	perealloc2		191366						
ANR	191712	Symbol	( ht ) -> u . flags		191366						
ANR	191713	Symbol	HT_USED_SIZE		191366						
ANR	191714	Symbol	HT_GET_DATA_ADDR		191366						
ANR	191715	Symbol	( ht ) -> u		191366						
ANR	191716	Symbol	HT_SIZE		191366						
ANR	191717	Symbol	old_buckets		191366						
ANR	191718	Symbol	HASH_FLAG_PERSISTENT		191366						
ANR	191719	Symbol	new_data		191366						
ANR	191720	Symbol	nSize		191366						
ANR	191721	Symbol	zend_hash_check_size		191366						
ANR	191722	Symbol	ht -> nNumUsed		191366						
ANR	191723	Symbol	pemalloc		191366						
ANR	191724	Function	zend_array_recalc_elements	286:0:9754:10146							
ANR	191725	FunctionDef	zend_array_recalc_elements (HashTable * ht)		191724	0					
ANR	191726	CompoundStatement		287:0:9812:10146	191724	0					
ANR	191727	IdentifierDeclStatement	zval * val ;	288:7:9821:9830	191724	0	True				
ANR	191728	IdentifierDecl	* val		191724	0					
ANR	191729	IdentifierDeclType	zval *		191724	0					
ANR	191730	Identifier	val		191724	1					
ANR	191731	IdentifierDeclStatement	uint32_t num = ht -> nNumOfElements ;	289:7:9839:9872	191724	1	True				
ANR	191732	IdentifierDecl	num = ht -> nNumOfElements		191724	0					
ANR	191733	IdentifierDeclType	uint32_t		191724	0					
ANR	191734	Identifier	num		191724	1					
ANR	191735	AssignmentExpression	num = ht -> nNumOfElements		191724	2		=			
ANR	191736	Identifier	num		191724	0					
ANR	191737	PtrMemberAccess	ht -> nNumOfElements		191724	1					
ANR	191738	Identifier	ht		191724	0					
ANR	191739	Identifier	nNumOfElements		191724	1					
ANR	191740	Statement	ZEND_HASH_FOREACH_VAL	291:4:9879:9899	191724	2	True				
ANR	191741	Statement	(	291:25:9900:9900	191724	3	True				
ANR	191742	Statement	ht	291:26:9901:9902	191724	4	True				
ANR	191743	Statement	","	291:28:9903:9903	191724	5	True				
ANR	191744	Statement	val	291:30:9905:9907	191724	6	True				
ANR	191745	Statement	)	291:33:9908:9908	191724	7	True				
ANR	191746	CompoundStatement		5:35:97:97	191724	8					
ANR	191747	IfStatement	if ( Z_TYPE_P ( val ) == IS_UNDEF )		191724	0					
ANR	191748	Condition	Z_TYPE_P ( val ) == IS_UNDEF	292:9:9921:9945	191724	0	True				
ANR	191749	EqualityExpression	Z_TYPE_P ( val ) == IS_UNDEF		191724	0		==			
ANR	191750	CallExpression	Z_TYPE_P ( val )		191724	0					
ANR	191751	Callee	Z_TYPE_P		191724	0					
ANR	191752	Identifier	Z_TYPE_P		191724	0					
ANR	191753	ArgumentList	val		191724	1					
ANR	191754	Argument	val		191724	0					
ANR	191755	Identifier	val		191724	0					
ANR	191756	Identifier	IS_UNDEF		191724	1					
ANR	191757	ContinueStatement	continue ;	292:36:9948:9956	191724	1	True				
ANR	191758	IfStatement	if ( Z_TYPE_P ( val ) == IS_INDIRECT )		191724	1					
ANR	191759	Condition	Z_TYPE_P ( val ) == IS_INDIRECT	293:9:9967:9994	191724	0	True				
ANR	191760	EqualityExpression	Z_TYPE_P ( val ) == IS_INDIRECT		191724	0		==			
ANR	191761	CallExpression	Z_TYPE_P ( val )		191724	0					
ANR	191762	Callee	Z_TYPE_P		191724	0					
ANR	191763	Identifier	Z_TYPE_P		191724	0					
ANR	191764	ArgumentList	val		191724	1					
ANR	191765	Argument	val		191724	0					
ANR	191766	Identifier	val		191724	0					
ANR	191767	Identifier	IS_INDIRECT		191724	1					
ANR	191768	CompoundStatement		7:39:184:184	191724	1					
ANR	191769	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( Z_INDIRECT_P ( val ) ) == IS_UNDEF ) )		191724	0					
ANR	191770	Condition	UNEXPECTED ( Z_TYPE_P ( Z_INDIRECT_P ( val ) ) == IS_UNDEF )	294:10:10009:10059	191724	0	True				
ANR	191771	CallExpression	UNEXPECTED ( Z_TYPE_P ( Z_INDIRECT_P ( val ) ) == IS_UNDEF )		191724	0					
ANR	191772	Callee	UNEXPECTED		191724	0					
ANR	191773	Identifier	UNEXPECTED		191724	0					
ANR	191774	ArgumentList	Z_TYPE_P ( Z_INDIRECT_P ( val ) ) == IS_UNDEF		191724	1					
ANR	191775	Argument	Z_TYPE_P ( Z_INDIRECT_P ( val ) ) == IS_UNDEF		191724	0					
ANR	191776	EqualityExpression	Z_TYPE_P ( Z_INDIRECT_P ( val ) ) == IS_UNDEF		191724	0		==			
ANR	191777	CallExpression	Z_TYPE_P ( Z_INDIRECT_P ( val ) )		191724	0					
ANR	191778	Callee	Z_TYPE_P		191724	0					
ANR	191779	Identifier	Z_TYPE_P		191724	0					
ANR	191780	ArgumentList	Z_INDIRECT_P ( val )		191724	1					
ANR	191781	Argument	Z_INDIRECT_P ( val )		191724	0					
ANR	191782	CallExpression	Z_INDIRECT_P ( val )		191724	0					
ANR	191783	Callee	Z_INDIRECT_P		191724	0					
ANR	191784	Identifier	Z_INDIRECT_P		191724	0					
ANR	191785	ArgumentList	val		191724	1					
ANR	191786	Argument	val		191724	0					
ANR	191787	Identifier	val		191724	0					
ANR	191788	Identifier	IS_UNDEF		191724	1					
ANR	191789	CompoundStatement		8:63:249:249	191724	1					
ANR	191790	ExpressionStatement	num --	295:7:10071:10076	191724	0	True				
ANR	191791	PostIncDecOperationExpression	num --		191724	0					
ANR	191792	Identifier	num		191724	0					
ANR	191793	IncDec	--		191724	1					
ANR	191794	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	298:9:10102:10125	191724	9	True				
ANR	191795	CallExpression	ZEND_HASH_FOREACH_END ( )		191724	0					
ANR	191796	Callee	ZEND_HASH_FOREACH_END		191724	0					
ANR	191797	Identifier	ZEND_HASH_FOREACH_END		191724	0					
ANR	191798	ArgumentList			191724	1					
ANR	191799	ReturnStatement	return num ;	299:7:10134:10144	191724	10	True				
ANR	191800	Identifier	num		191724	0					
ANR	191801	ReturnType	static uint32_t		191724	1					
ANR	191802	Identifier	zend_array_recalc_elements		191724	2					
ANR	191803	ParameterList	HashTable * ht		191724	3					
ANR	191804	Parameter	HashTable * ht	286:43:9797:9809	191724	0	True				
ANR	191805	ParameterType	HashTable *		191724	0					
ANR	191806	Identifier	ht		191724	1					
ANR	191807	CFGEntryNode	ENTRY		191724		True				
ANR	191808	CFGExitNode	EXIT		191724		True				
ANR	191809	CFGErrorNode	ERROR		191724		True				
ANR	191810	Symbol	val		191724						
ANR	191811	Symbol	UNEXPECTED		191724						
ANR	191812	Symbol	* ht		191724						
ANR	191813	Symbol	num		191724						
ANR	191814	Symbol	Z_INDIRECT_P		191724						
ANR	191815	Symbol	ht		191724						
ANR	191816	Symbol	Z_TYPE_P		191724						
ANR	191817	Symbol	ht -> nNumOfElements		191724						
ANR	191818	Symbol	IS_UNDEF		191724						
ANR	191819	Symbol	IS_INDIRECT		191724						
ANR	191820	Function	zend_array_count	303:0:10159:10576							
ANR	191821	FunctionDef	zend_array_count (HashTable * ht)		191820	0					
ANR	191822	CompoundStatement		304:0:10209:10576	191820	0					
ANR	191823	IdentifierDeclStatement	uint32_t num ;	305:1:10212:10224	191820	0	True				
ANR	191824	IdentifierDecl	num		191820	0					
ANR	191825	IdentifierDeclType	uint32_t		191820	0					
ANR	191826	Identifier	num		191820	1					
ANR	191827	IfStatement	if ( UNEXPECTED ( ht -> u . v . flags & HASH_FLAG_HAS_EMPTY_IND ) )		191820	1					
ANR	191828	Condition	UNEXPECTED ( ht -> u . v . flags & HASH_FLAG_HAS_EMPTY_IND )	306:5:10231:10281	191820	0	True				
ANR	191829	CallExpression	UNEXPECTED ( ht -> u . v . flags & HASH_FLAG_HAS_EMPTY_IND )		191820	0					
ANR	191830	Callee	UNEXPECTED		191820	0					
ANR	191831	Identifier	UNEXPECTED		191820	0					
ANR	191832	ArgumentList	ht -> u . v . flags & HASH_FLAG_HAS_EMPTY_IND		191820	1					
ANR	191833	Argument	ht -> u . v . flags & HASH_FLAG_HAS_EMPTY_IND		191820	0					
ANR	191834	BitAndExpression	ht -> u . v . flags & HASH_FLAG_HAS_EMPTY_IND		191820	0		&			
ANR	191835	MemberAccess	ht -> u . v . flags		191820	0					
ANR	191836	MemberAccess	ht -> u . v		191820	0					
ANR	191837	PtrMemberAccess	ht -> u		191820	0					
ANR	191838	Identifier	ht		191820	0					
ANR	191839	Identifier	u		191820	1					
ANR	191840	Identifier	v		191820	1					
ANR	191841	Identifier	flags		191820	1					
ANR	191842	Identifier	HASH_FLAG_HAS_EMPTY_IND		191820	1					
ANR	191843	CompoundStatement		3:58:74:74	191820	1					
ANR	191844	ExpressionStatement	num = zend_array_recalc_elements ( ht )	307:2:10288:10324	191820	0	True				
ANR	191845	AssignmentExpression	num = zend_array_recalc_elements ( ht )		191820	0		=			
ANR	191846	Identifier	num		191820	0					
ANR	191847	CallExpression	zend_array_recalc_elements ( ht )		191820	1					
ANR	191848	Callee	zend_array_recalc_elements		191820	0					
ANR	191849	Identifier	zend_array_recalc_elements		191820	0					
ANR	191850	ArgumentList	ht		191820	1					
ANR	191851	Argument	ht		191820	0					
ANR	191852	Identifier	ht		191820	0					
ANR	191853	IfStatement	if ( UNEXPECTED ( ht -> nNumOfElements == num ) )		191820	1					
ANR	191854	Condition	UNEXPECTED ( ht -> nNumOfElements == num )	308:6:10332:10368	191820	0	True				
ANR	191855	CallExpression	UNEXPECTED ( ht -> nNumOfElements == num )		191820	0					
ANR	191856	Callee	UNEXPECTED		191820	0					
ANR	191857	Identifier	UNEXPECTED		191820	0					
ANR	191858	ArgumentList	ht -> nNumOfElements == num		191820	1					
ANR	191859	Argument	ht -> nNumOfElements == num		191820	0					
ANR	191860	EqualityExpression	ht -> nNumOfElements == num		191820	0		==			
ANR	191861	PtrMemberAccess	ht -> nNumOfElements		191820	0					
ANR	191862	Identifier	ht		191820	0					
ANR	191863	Identifier	nNumOfElements		191820	1					
ANR	191864	Identifier	num		191820	1					
ANR	191865	CompoundStatement		5:45:161:161	191820	1					
ANR	191866	ExpressionStatement	ht -> u . v . flags &= ~HASH_FLAG_HAS_EMPTY_IND	309:3:10376:10417	191820	0	True				
ANR	191867	AssignmentExpression	ht -> u . v . flags &= ~HASH_FLAG_HAS_EMPTY_IND		191820	0		&=			
ANR	191868	MemberAccess	ht -> u . v . flags		191820	0					
ANR	191869	MemberAccess	ht -> u . v		191820	0					
ANR	191870	PtrMemberAccess	ht -> u		191820	0					
ANR	191871	Identifier	ht		191820	0					
ANR	191872	Identifier	u		191820	1					
ANR	191873	Identifier	v		191820	1					
ANR	191874	Identifier	flags		191820	1					
ANR	191875	Identifier	~HASH_FLAG_HAS_EMPTY_IND		191820	1					
ANR	191876	ElseStatement	else		191820	0					
ANR	191877	IfStatement	if ( UNEXPECTED ( ht == & EG ( symbol_table ) ) )		191820	0					
ANR	191878	Condition	UNEXPECTED ( ht == & EG ( symbol_table ) )	311:12:10435:10469	191820	0	True				
ANR	191879	CallExpression	UNEXPECTED ( ht == & EG ( symbol_table ) )		191820	0					
ANR	191880	Callee	UNEXPECTED		191820	0					
ANR	191881	Identifier	UNEXPECTED		191820	0					
ANR	191882	ArgumentList	ht == & EG ( symbol_table )		191820	1					
ANR	191883	Argument	ht == & EG ( symbol_table )		191820	0					
ANR	191884	EqualityExpression	ht == & EG ( symbol_table )		191820	0		==			
ANR	191885	Identifier	ht		191820	0					
ANR	191886	UnaryOperationExpression	& EG ( symbol_table )		191820	1					
ANR	191887	UnaryOperator	&		191820	0					
ANR	191888	CallExpression	EG ( symbol_table )		191820	1					
ANR	191889	Callee	EG		191820	0					
ANR	191890	Identifier	EG		191820	0					
ANR	191891	ArgumentList	symbol_table		191820	1					
ANR	191892	Argument	symbol_table		191820	0					
ANR	191893	Identifier	symbol_table		191820	0					
ANR	191894	CompoundStatement		8:49:262:262	191820	1					
ANR	191895	ExpressionStatement	num = zend_array_recalc_elements ( ht )	312:2:10476:10512	191820	0	True				
ANR	191896	AssignmentExpression	num = zend_array_recalc_elements ( ht )		191820	0		=			
ANR	191897	Identifier	num		191820	0					
ANR	191898	CallExpression	zend_array_recalc_elements ( ht )		191820	1					
ANR	191899	Callee	zend_array_recalc_elements		191820	0					
ANR	191900	Identifier	zend_array_recalc_elements		191820	0					
ANR	191901	ArgumentList	ht		191820	1					
ANR	191902	Argument	ht		191820	0					
ANR	191903	Identifier	ht		191820	0					
ANR	191904	ElseStatement	else		191820	0					
ANR	191905	CompoundStatement		10:8:312:312	191820	0					
ANR	191906	ExpressionStatement	num = zend_hash_num_elements ( ht )	314:2:10526:10558	191820	0	True				
ANR	191907	AssignmentExpression	num = zend_hash_num_elements ( ht )		191820	0		=			
ANR	191908	Identifier	num		191820	0					
ANR	191909	CallExpression	zend_hash_num_elements ( ht )		191820	1					
ANR	191910	Callee	zend_hash_num_elements		191820	0					
ANR	191911	Identifier	zend_hash_num_elements		191820	0					
ANR	191912	ArgumentList	ht		191820	1					
ANR	191913	Argument	ht		191820	0					
ANR	191914	Identifier	ht		191820	0					
ANR	191915	ReturnStatement	return num ;	316:1:10564:10574	191820	2	True				
ANR	191916	Identifier	num		191820	0					
ANR	191917	ReturnType	ZEND_API uint32_t		191820	1					
ANR	191918	Identifier	zend_array_count		191820	2					
ANR	191919	ParameterList	HashTable * ht		191820	3					
ANR	191920	Parameter	HashTable * ht	303:35:10194:10206	191820	0	True				
ANR	191921	ParameterType	HashTable *		191820	0					
ANR	191922	Identifier	ht		191820	1					
ANR	191923	CFGEntryNode	ENTRY		191820		True				
ANR	191924	CFGExitNode	EXIT		191820		True				
ANR	191925	Symbol	~HASH_FLAG_HAS_EMPTY_IND		191820						
ANR	191926	Symbol	HASH_FLAG_HAS_EMPTY_IND		191820						
ANR	191927	Symbol	zend_hash_num_elements		191820						
ANR	191928	Symbol	num		191820						
ANR	191929	Symbol	ht -> u		191820						
ANR	191930	Symbol	symbol_table		191820						
ANR	191931	Symbol	ht		191820						
ANR	191932	Symbol	& EG		191820						
ANR	191933	Symbol	ht -> u . v		191820						
ANR	191934	Symbol	UNEXPECTED		191820						
ANR	191935	Symbol	* ht		191820						
ANR	191936	Symbol	ht -> u . v . flags		191820						
ANR	191937	Symbol	zend_array_recalc_elements		191820						
ANR	191938	Symbol	ht -> nNumOfElements		191820						
ANR	191939	Function	zend_hash_set_apply_protection	320:0:10589:10822							
ANR	191940	FunctionDef	"zend_hash_set_apply_protection (HashTable * ht , zend_bool bApplyProtection)"		191939	0					
ANR	191941	CompoundStatement		321:0:10691:10822	191939	0					
ANR	191942	IfStatement	if ( bApplyProtection )		191939	0					
ANR	191943	Condition	bApplyProtection	322:5:10698:10713	191939	0	True				
ANR	191944	Identifier	bApplyProtection		191939	0					
ANR	191945	CompoundStatement		2:23:24:24	191939	1					
ANR	191946	ExpressionStatement	ht -> u . flags |= HASH_FLAG_APPLY_PROTECTION	323:2:10720:10761	191939	0	True				
ANR	191947	AssignmentExpression	ht -> u . flags |= HASH_FLAG_APPLY_PROTECTION		191939	0		|=			
ANR	191948	MemberAccess	ht -> u . flags		191939	0					
ANR	191949	PtrMemberAccess	ht -> u		191939	0					
ANR	191950	Identifier	ht		191939	0					
ANR	191951	Identifier	u		191939	1					
ANR	191952	Identifier	flags		191939	1					
ANR	191953	Identifier	HASH_FLAG_APPLY_PROTECTION		191939	1					
ANR	191954	ElseStatement	else		191939	0					
ANR	191955	CompoundStatement		4:8:79:79	191939	0					
ANR	191956	ExpressionStatement	ht -> u . flags &= ~HASH_FLAG_APPLY_PROTECTION	325:2:10775:10817	191939	0	True				
ANR	191957	AssignmentExpression	ht -> u . flags &= ~HASH_FLAG_APPLY_PROTECTION		191939	0		&=			
ANR	191958	MemberAccess	ht -> u . flags		191939	0					
ANR	191959	PtrMemberAccess	ht -> u		191939	0					
ANR	191960	Identifier	ht		191939	0					
ANR	191961	Identifier	u		191939	1					
ANR	191962	Identifier	flags		191939	1					
ANR	191963	Identifier	~HASH_FLAG_APPLY_PROTECTION		191939	1					
ANR	191964	ReturnType	ZEND_API void ZEND_FASTCALL		191939	1					
ANR	191965	Identifier	zend_hash_set_apply_protection		191939	2					
ANR	191966	ParameterList	"HashTable * ht , zend_bool bApplyProtection"		191939	3					
ANR	191967	Parameter	HashTable * ht	320:59:10648:10660	191939	0	True				
ANR	191968	ParameterType	HashTable *		191939	0					
ANR	191969	Identifier	ht		191939	1					
ANR	191970	Parameter	zend_bool bApplyProtection	320:74:10663:10688	191939	1	True				
ANR	191971	ParameterType	zend_bool		191939	0					
ANR	191972	Identifier	bApplyProtection		191939	1					
ANR	191973	CFGEntryNode	ENTRY		191939		True				
ANR	191974	CFGExitNode	EXIT		191939		True				
ANR	191975	Symbol	* ht		191939						
ANR	191976	Symbol	~HASH_FLAG_APPLY_PROTECTION		191939						
ANR	191977	Symbol	bApplyProtection		191939						
ANR	191978	Symbol	ht -> u		191939						
ANR	191979	Symbol	HASH_FLAG_APPLY_PROTECTION		191939						
ANR	191980	Symbol	ht -> u . flags		191939						
ANR	191981	Symbol	ht		191939						
ANR	191982	Function	zend_hash_iterator_add	329:0:10825:11962							
ANR	191983	FunctionDef	"zend_hash_iterator_add (HashTable * ht , HashPosition pos)"		191982	0					
ANR	191984	CompoundStatement		330:0:10913:11962	191982	0					
ANR	191985	IdentifierDeclStatement	HashTableIterator * iter = EG ( ht_iterators ) ;	331:1:10916:10958	191982	0	True				
ANR	191986	IdentifierDecl	* iter = EG ( ht_iterators )		191982	0					
ANR	191987	IdentifierDeclType	HashTableIterator *		191982	0					
ANR	191988	Identifier	iter		191982	1					
ANR	191989	AssignmentExpression	* iter = EG ( ht_iterators )		191982	2		=			
ANR	191990	Identifier	iter		191982	0					
ANR	191991	CallExpression	EG ( ht_iterators )		191982	1					
ANR	191992	Callee	EG		191982	0					
ANR	191993	Identifier	EG		191982	0					
ANR	191994	ArgumentList	ht_iterators		191982	1					
ANR	191995	Argument	ht_iterators		191982	0					
ANR	191996	Identifier	ht_iterators		191982	0					
ANR	191997	IdentifierDeclStatement	HashTableIterator * end = iter + EG ( ht_iterators_count ) ;	332:1:10961:11016	191982	1	True				
ANR	191998	IdentifierDecl	* end = iter + EG ( ht_iterators_count )		191982	0					
ANR	191999	IdentifierDeclType	HashTableIterator *		191982	0					
ANR	192000	Identifier	end		191982	1					
ANR	192001	AssignmentExpression	* end = iter + EG ( ht_iterators_count )		191982	2		=			
ANR	192002	Identifier	end		191982	0					
ANR	192003	AdditiveExpression	iter + EG ( ht_iterators_count )		191982	1		+			
ANR	192004	Identifier	iter		191982	0					
ANR	192005	CallExpression	EG ( ht_iterators_count )		191982	1					
ANR	192006	Callee	EG		191982	0					
ANR	192007	Identifier	EG		191982	0					
ANR	192008	ArgumentList	ht_iterators_count		191982	1					
ANR	192009	Argument	ht_iterators_count		191982	0					
ANR	192010	Identifier	ht_iterators_count		191982	0					
ANR	192011	IdentifierDeclStatement	uint32_t idx ;	333:1:11019:11031	191982	2	True				
ANR	192012	IdentifierDecl	idx		191982	0					
ANR	192013	IdentifierDeclType	uint32_t		191982	0					
ANR	192014	Identifier	idx		191982	1					
ANR	192015	IfStatement	if ( EXPECTED ( ht -> u . v . nIteratorsCount != 255 ) )		191982	3					
ANR	192016	Condition	EXPECTED ( ht -> u . v . nIteratorsCount != 255 )	335:5:11039:11078	191982	0	True				
ANR	192017	CallExpression	EXPECTED ( ht -> u . v . nIteratorsCount != 255 )		191982	0					
ANR	192018	Callee	EXPECTED		191982	0					
ANR	192019	Identifier	EXPECTED		191982	0					
ANR	192020	ArgumentList	ht -> u . v . nIteratorsCount != 255		191982	1					
ANR	192021	Argument	ht -> u . v . nIteratorsCount != 255		191982	0					
ANR	192022	EqualityExpression	ht -> u . v . nIteratorsCount != 255		191982	0		!=			
ANR	192023	MemberAccess	ht -> u . v . nIteratorsCount		191982	0					
ANR	192024	MemberAccess	ht -> u . v		191982	0					
ANR	192025	PtrMemberAccess	ht -> u		191982	0					
ANR	192026	Identifier	ht		191982	0					
ANR	192027	Identifier	u		191982	1					
ANR	192028	Identifier	v		191982	1					
ANR	192029	Identifier	nIteratorsCount		191982	1					
ANR	192030	PrimaryExpression	255		191982	1					
ANR	192031	CompoundStatement		6:47:167:167	191982	1					
ANR	192032	ExpressionStatement	ht -> u . v . nIteratorsCount ++	336:2:11085:11110	191982	0	True				
ANR	192033	PostIncDecOperationExpression	ht -> u . v . nIteratorsCount ++		191982	0					
ANR	192034	MemberAccess	ht -> u . v . nIteratorsCount		191982	0					
ANR	192035	MemberAccess	ht -> u . v		191982	0					
ANR	192036	PtrMemberAccess	ht -> u		191982	0					
ANR	192037	Identifier	ht		191982	0					
ANR	192038	Identifier	u		191982	1					
ANR	192039	Identifier	v		191982	1					
ANR	192040	Identifier	nIteratorsCount		191982	1					
ANR	192041	IncDec	++		191982	1					
ANR	192042	WhileStatement	while ( iter != end )		191982	4					
ANR	192043	Condition	iter != end	338:8:11123:11133	191982	0	True				
ANR	192044	EqualityExpression	iter != end		191982	0		!=			
ANR	192045	Identifier	iter		191982	0					
ANR	192046	Identifier	end		191982	1					
ANR	192047	CompoundStatement		9:21:222:222	191982	1					
ANR	192048	IfStatement	if ( iter -> ht == NULL )		191982	0					
ANR	192049	Condition	iter -> ht == NULL	339:6:11144:11159	191982	0	True				
ANR	192050	EqualityExpression	iter -> ht == NULL		191982	0		==			
ANR	192051	PtrMemberAccess	iter -> ht		191982	0					
ANR	192052	Identifier	iter		191982	0					
ANR	192053	Identifier	ht		191982	1					
ANR	192054	Identifier	NULL		191982	1					
ANR	192055	CompoundStatement		10:24:248:248	191982	1					
ANR	192056	ExpressionStatement	iter -> ht = ht	340:3:11167:11180	191982	0	True				
ANR	192057	AssignmentExpression	iter -> ht = ht		191982	0		=			
ANR	192058	PtrMemberAccess	iter -> ht		191982	0					
ANR	192059	Identifier	iter		191982	0					
ANR	192060	Identifier	ht		191982	1					
ANR	192061	Identifier	ht		191982	1					
ANR	192062	ExpressionStatement	iter -> pos = pos	341:3:11185:11200	191982	1	True				
ANR	192063	AssignmentExpression	iter -> pos = pos		191982	0		=			
ANR	192064	PtrMemberAccess	iter -> pos		191982	0					
ANR	192065	Identifier	iter		191982	0					
ANR	192066	Identifier	pos		191982	1					
ANR	192067	Identifier	pos		191982	1					
ANR	192068	ExpressionStatement	idx = iter - EG ( ht_iterators )	342:3:11205:11234	191982	2	True				
ANR	192069	AssignmentExpression	idx = iter - EG ( ht_iterators )		191982	0		=			
ANR	192070	Identifier	idx		191982	0					
ANR	192071	AdditiveExpression	iter - EG ( ht_iterators )		191982	1		-			
ANR	192072	Identifier	iter		191982	0					
ANR	192073	CallExpression	EG ( ht_iterators )		191982	1					
ANR	192074	Callee	EG		191982	0					
ANR	192075	Identifier	EG		191982	0					
ANR	192076	ArgumentList	ht_iterators		191982	1					
ANR	192077	Argument	ht_iterators		191982	0					
ANR	192078	Identifier	ht_iterators		191982	0					
ANR	192079	IfStatement	if ( idx + 1 > EG ( ht_iterators_used ) )		191982	3					
ANR	192080	Condition	idx + 1 > EG ( ht_iterators_used )	343:7:11243:11273	191982	0	True				
ANR	192081	RelationalExpression	idx + 1 > EG ( ht_iterators_used )		191982	0		>			
ANR	192082	AdditiveExpression	idx + 1		191982	0		+			
ANR	192083	Identifier	idx		191982	0					
ANR	192084	PrimaryExpression	1		191982	1					
ANR	192085	CallExpression	EG ( ht_iterators_used )		191982	1					
ANR	192086	Callee	EG		191982	0					
ANR	192087	Identifier	EG		191982	0					
ANR	192088	ArgumentList	ht_iterators_used		191982	1					
ANR	192089	Argument	ht_iterators_used		191982	0					
ANR	192090	Identifier	ht_iterators_used		191982	0					
ANR	192091	CompoundStatement		14:40:362:362	191982	1					
ANR	192092	ExpressionStatement	EG ( ht_iterators_used ) = idx + 1	344:4:11282:11313	191982	0	True				
ANR	192093	AssignmentExpression	EG ( ht_iterators_used ) = idx + 1		191982	0		=			
ANR	192094	CallExpression	EG ( ht_iterators_used )		191982	0					
ANR	192095	Callee	EG		191982	0					
ANR	192096	Identifier	EG		191982	0					
ANR	192097	ArgumentList	ht_iterators_used		191982	1					
ANR	192098	Argument	ht_iterators_used		191982	0					
ANR	192099	Identifier	ht_iterators_used		191982	0					
ANR	192100	AdditiveExpression	idx + 1		191982	1		+			
ANR	192101	Identifier	idx		191982	0					
ANR	192102	PrimaryExpression	1		191982	1					
ANR	192103	ReturnStatement	return idx ;	346:3:11323:11333	191982	4	True				
ANR	192104	Identifier	idx		191982	0					
ANR	192105	ExpressionStatement	iter ++	348:2:11341:11347	191982	1	True				
ANR	192106	PostIncDecOperationExpression	iter ++		191982	0					
ANR	192107	Identifier	iter		191982	0					
ANR	192108	IncDec	++		191982	1					
ANR	192109	IfStatement	if ( EG ( ht_iterators ) == EG ( ht_iterators_slots ) )		191982	5					
ANR	192110	Condition	EG ( ht_iterators ) == EG ( ht_iterators_slots )	350:5:11357:11398	191982	0	True				
ANR	192111	EqualityExpression	EG ( ht_iterators ) == EG ( ht_iterators_slots )		191982	0		==			
ANR	192112	CallExpression	EG ( ht_iterators )		191982	0					
ANR	192113	Callee	EG		191982	0					
ANR	192114	Identifier	EG		191982	0					
ANR	192115	ArgumentList	ht_iterators		191982	1					
ANR	192116	Argument	ht_iterators		191982	0					
ANR	192117	Identifier	ht_iterators		191982	0					
ANR	192118	CallExpression	EG ( ht_iterators_slots )		191982	1					
ANR	192119	Callee	EG		191982	0					
ANR	192120	Identifier	EG		191982	0					
ANR	192121	ArgumentList	ht_iterators_slots		191982	1					
ANR	192122	Argument	ht_iterators_slots		191982	0					
ANR	192123	Identifier	ht_iterators_slots		191982	0					
ANR	192124	CompoundStatement		21:49:487:487	191982	1					
ANR	192125	ExpressionStatement	EG ( ht_iterators ) = emalloc ( sizeof ( HashTableIterator ) * ( EG ( ht_iterators_count ) + 8 ) )	351:2:11405:11489	191982	0	True				
ANR	192126	AssignmentExpression	EG ( ht_iterators ) = emalloc ( sizeof ( HashTableIterator ) * ( EG ( ht_iterators_count ) + 8 ) )		191982	0		=			
ANR	192127	CallExpression	EG ( ht_iterators )		191982	0					
ANR	192128	Callee	EG		191982	0					
ANR	192129	Identifier	EG		191982	0					
ANR	192130	ArgumentList	ht_iterators		191982	1					
ANR	192131	Argument	ht_iterators		191982	0					
ANR	192132	Identifier	ht_iterators		191982	0					
ANR	192133	CallExpression	emalloc ( sizeof ( HashTableIterator ) * ( EG ( ht_iterators_count ) + 8 ) )		191982	1					
ANR	192134	Callee	emalloc		191982	0					
ANR	192135	Identifier	emalloc		191982	0					
ANR	192136	ArgumentList	sizeof ( HashTableIterator ) * ( EG ( ht_iterators_count ) + 8 )		191982	1					
ANR	192137	Argument	sizeof ( HashTableIterator ) * ( EG ( ht_iterators_count ) + 8 )		191982	0					
ANR	192138	MultiplicativeExpression	sizeof ( HashTableIterator ) * ( EG ( ht_iterators_count ) + 8 )		191982	0		*			
ANR	192139	SizeofExpression	sizeof ( HashTableIterator )		191982	0					
ANR	192140	Sizeof	sizeof		191982	0					
ANR	192141	SizeofOperand	HashTableIterator		191982	1					
ANR	192142	AdditiveExpression	EG ( ht_iterators_count ) + 8		191982	1		+			
ANR	192143	CallExpression	EG ( ht_iterators_count )		191982	0					
ANR	192144	Callee	EG		191982	0					
ANR	192145	Identifier	EG		191982	0					
ANR	192146	ArgumentList	ht_iterators_count		191982	1					
ANR	192147	Argument	ht_iterators_count		191982	0					
ANR	192148	Identifier	ht_iterators_count		191982	0					
ANR	192149	PrimaryExpression	8		191982	1					
ANR	192150	ExpressionStatement	"memcpy ( EG ( ht_iterators ) , EG ( ht_iterators_slots ) , sizeof ( HashTableIterator ) * EG ( ht_iterators_count ) )"	352:2:11493:11593	191982	1	True				
ANR	192151	CallExpression	"memcpy ( EG ( ht_iterators ) , EG ( ht_iterators_slots ) , sizeof ( HashTableIterator ) * EG ( ht_iterators_count ) )"		191982	0					
ANR	192152	Callee	memcpy		191982	0					
ANR	192153	Identifier	memcpy		191982	0					
ANR	192154	ArgumentList	EG ( ht_iterators )		191982	1					
ANR	192155	Argument	EG ( ht_iterators )		191982	0					
ANR	192156	CallExpression	EG ( ht_iterators )		191982	0					
ANR	192157	Callee	EG		191982	0					
ANR	192158	Identifier	EG		191982	0					
ANR	192159	ArgumentList	ht_iterators		191982	1					
ANR	192160	Argument	ht_iterators		191982	0					
ANR	192161	Identifier	ht_iterators		191982	0					
ANR	192162	Argument	EG ( ht_iterators_slots )		191982	1					
ANR	192163	CallExpression	EG ( ht_iterators_slots )		191982	0					
ANR	192164	Callee	EG		191982	0					
ANR	192165	Identifier	EG		191982	0					
ANR	192166	ArgumentList	ht_iterators_slots		191982	1					
ANR	192167	Argument	ht_iterators_slots		191982	0					
ANR	192168	Identifier	ht_iterators_slots		191982	0					
ANR	192169	Argument	sizeof ( HashTableIterator ) * EG ( ht_iterators_count )		191982	2					
ANR	192170	MultiplicativeExpression	sizeof ( HashTableIterator ) * EG ( ht_iterators_count )		191982	0		*			
ANR	192171	SizeofExpression	sizeof ( HashTableIterator )		191982	0					
ANR	192172	Sizeof	sizeof		191982	0					
ANR	192173	SizeofOperand	HashTableIterator		191982	1					
ANR	192174	CallExpression	EG ( ht_iterators_count )		191982	1					
ANR	192175	Callee	EG		191982	0					
ANR	192176	Identifier	EG		191982	0					
ANR	192177	ArgumentList	ht_iterators_count		191982	1					
ANR	192178	Argument	ht_iterators_count		191982	0					
ANR	192179	Identifier	ht_iterators_count		191982	0					
ANR	192180	ElseStatement	else		191982	0					
ANR	192181	CompoundStatement		24:8:689:689	191982	0					
ANR	192182	ExpressionStatement	"EG ( ht_iterators ) = erealloc ( EG ( ht_iterators ) , sizeof ( HashTableIterator ) * ( EG ( ht_iterators_count ) + 8 ) )"	354:2:11607:11710	191982	0	True				
ANR	192183	AssignmentExpression	"EG ( ht_iterators ) = erealloc ( EG ( ht_iterators ) , sizeof ( HashTableIterator ) * ( EG ( ht_iterators_count ) + 8 ) )"		191982	0		=			
ANR	192184	CallExpression	EG ( ht_iterators )		191982	0					
ANR	192185	Callee	EG		191982	0					
ANR	192186	Identifier	EG		191982	0					
ANR	192187	ArgumentList	ht_iterators		191982	1					
ANR	192188	Argument	ht_iterators		191982	0					
ANR	192189	Identifier	ht_iterators		191982	0					
ANR	192190	CallExpression	"erealloc ( EG ( ht_iterators ) , sizeof ( HashTableIterator ) * ( EG ( ht_iterators_count ) + 8 ) )"		191982	1					
ANR	192191	Callee	erealloc		191982	0					
ANR	192192	Identifier	erealloc		191982	0					
ANR	192193	ArgumentList	EG ( ht_iterators )		191982	1					
ANR	192194	Argument	EG ( ht_iterators )		191982	0					
ANR	192195	CallExpression	EG ( ht_iterators )		191982	0					
ANR	192196	Callee	EG		191982	0					
ANR	192197	Identifier	EG		191982	0					
ANR	192198	ArgumentList	ht_iterators		191982	1					
ANR	192199	Argument	ht_iterators		191982	0					
ANR	192200	Identifier	ht_iterators		191982	0					
ANR	192201	Argument	sizeof ( HashTableIterator ) * ( EG ( ht_iterators_count ) + 8 )		191982	1					
ANR	192202	MultiplicativeExpression	sizeof ( HashTableIterator ) * ( EG ( ht_iterators_count ) + 8 )		191982	0		*			
ANR	192203	SizeofExpression	sizeof ( HashTableIterator )		191982	0					
ANR	192204	Sizeof	sizeof		191982	0					
ANR	192205	SizeofOperand	HashTableIterator		191982	1					
ANR	192206	AdditiveExpression	EG ( ht_iterators_count ) + 8		191982	1		+			
ANR	192207	CallExpression	EG ( ht_iterators_count )		191982	0					
ANR	192208	Callee	EG		191982	0					
ANR	192209	Identifier	EG		191982	0					
ANR	192210	ArgumentList	ht_iterators_count		191982	1					
ANR	192211	Argument	ht_iterators_count		191982	0					
ANR	192212	Identifier	ht_iterators_count		191982	0					
ANR	192213	PrimaryExpression	8		191982	1					
ANR	192214	ExpressionStatement	iter = EG ( ht_iterators ) + EG ( ht_iterators_count )	356:1:11716:11764	191982	6	True				
ANR	192215	AssignmentExpression	iter = EG ( ht_iterators ) + EG ( ht_iterators_count )		191982	0		=			
ANR	192216	Identifier	iter		191982	0					
ANR	192217	AdditiveExpression	EG ( ht_iterators ) + EG ( ht_iterators_count )		191982	1		+			
ANR	192218	CallExpression	EG ( ht_iterators )		191982	0					
ANR	192219	Callee	EG		191982	0					
ANR	192220	Identifier	EG		191982	0					
ANR	192221	ArgumentList	ht_iterators		191982	1					
ANR	192222	Argument	ht_iterators		191982	0					
ANR	192223	Identifier	ht_iterators		191982	0					
ANR	192224	CallExpression	EG ( ht_iterators_count )		191982	1					
ANR	192225	Callee	EG		191982	0					
ANR	192226	Identifier	EG		191982	0					
ANR	192227	ArgumentList	ht_iterators_count		191982	1					
ANR	192228	Argument	ht_iterators_count		191982	0					
ANR	192229	Identifier	ht_iterators_count		191982	0					
ANR	192230	ExpressionStatement	EG ( ht_iterators_count ) += 8	357:1:11767:11794	191982	7	True				
ANR	192231	AssignmentExpression	EG ( ht_iterators_count ) += 8		191982	0		+=			
ANR	192232	CallExpression	EG ( ht_iterators_count )		191982	0					
ANR	192233	Callee	EG		191982	0					
ANR	192234	Identifier	EG		191982	0					
ANR	192235	ArgumentList	ht_iterators_count		191982	1					
ANR	192236	Argument	ht_iterators_count		191982	0					
ANR	192237	Identifier	ht_iterators_count		191982	0					
ANR	192238	PrimaryExpression	8		191982	1					
ANR	192239	ExpressionStatement	iter -> ht = ht	358:1:11797:11810	191982	8	True				
ANR	192240	AssignmentExpression	iter -> ht = ht		191982	0		=			
ANR	192241	PtrMemberAccess	iter -> ht		191982	0					
ANR	192242	Identifier	iter		191982	0					
ANR	192243	Identifier	ht		191982	1					
ANR	192244	Identifier	ht		191982	1					
ANR	192245	ExpressionStatement	iter -> pos = pos	359:1:11813:11828	191982	9	True				
ANR	192246	AssignmentExpression	iter -> pos = pos		191982	0		=			
ANR	192247	PtrMemberAccess	iter -> pos		191982	0					
ANR	192248	Identifier	iter		191982	0					
ANR	192249	Identifier	pos		191982	1					
ANR	192250	Identifier	pos		191982	1					
ANR	192251	ExpressionStatement	"memset ( iter + 1 , 0 , sizeof ( HashTableIterator ) * 7 )"	360:1:11831:11881	191982	10	True				
ANR	192252	CallExpression	"memset ( iter + 1 , 0 , sizeof ( HashTableIterator ) * 7 )"		191982	0					
ANR	192253	Callee	memset		191982	0					
ANR	192254	Identifier	memset		191982	0					
ANR	192255	ArgumentList	iter + 1		191982	1					
ANR	192256	Argument	iter + 1		191982	0					
ANR	192257	AdditiveExpression	iter + 1		191982	0		+			
ANR	192258	Identifier	iter		191982	0					
ANR	192259	PrimaryExpression	1		191982	1					
ANR	192260	Argument	0		191982	1					
ANR	192261	PrimaryExpression	0		191982	0					
ANR	192262	Argument	sizeof ( HashTableIterator ) * 7		191982	2					
ANR	192263	MultiplicativeExpression	sizeof ( HashTableIterator ) * 7		191982	0		*			
ANR	192264	SizeofExpression	sizeof ( HashTableIterator )		191982	0					
ANR	192265	Sizeof	sizeof		191982	0					
ANR	192266	SizeofOperand	HashTableIterator		191982	1					
ANR	192267	PrimaryExpression	7		191982	1					
ANR	192268	ExpressionStatement	idx = iter - EG ( ht_iterators )	361:1:11884:11913	191982	11	True				
ANR	192269	AssignmentExpression	idx = iter - EG ( ht_iterators )		191982	0		=			
ANR	192270	Identifier	idx		191982	0					
ANR	192271	AdditiveExpression	iter - EG ( ht_iterators )		191982	1		-			
ANR	192272	Identifier	iter		191982	0					
ANR	192273	CallExpression	EG ( ht_iterators )		191982	1					
ANR	192274	Callee	EG		191982	0					
ANR	192275	Identifier	EG		191982	0					
ANR	192276	ArgumentList	ht_iterators		191982	1					
ANR	192277	Argument	ht_iterators		191982	0					
ANR	192278	Identifier	ht_iterators		191982	0					
ANR	192279	ExpressionStatement	EG ( ht_iterators_used ) = idx + 1	362:1:11916:11947	191982	12	True				
ANR	192280	AssignmentExpression	EG ( ht_iterators_used ) = idx + 1		191982	0		=			
ANR	192281	CallExpression	EG ( ht_iterators_used )		191982	0					
ANR	192282	Callee	EG		191982	0					
ANR	192283	Identifier	EG		191982	0					
ANR	192284	ArgumentList	ht_iterators_used		191982	1					
ANR	192285	Argument	ht_iterators_used		191982	0					
ANR	192286	Identifier	ht_iterators_used		191982	0					
ANR	192287	AdditiveExpression	idx + 1		191982	1		+			
ANR	192288	Identifier	idx		191982	0					
ANR	192289	PrimaryExpression	1		191982	1					
ANR	192290	ReturnStatement	return idx ;	363:1:11950:11960	191982	13	True				
ANR	192291	Identifier	idx		191982	0					
ANR	192292	ReturnType	ZEND_API uint32_t ZEND_FASTCALL		191982	1					
ANR	192293	Identifier	zend_hash_iterator_add		191982	2					
ANR	192294	ParameterList	"HashTable * ht , HashPosition pos"		191982	3					
ANR	192295	Parameter	HashTable * ht	329:55:10880:10892	191982	0	True				
ANR	192296	ParameterType	HashTable *		191982	0					
ANR	192297	Identifier	ht		191982	1					
ANR	192298	Parameter	HashPosition pos	329:70:10895:10910	191982	1	True				
ANR	192299	ParameterType	HashPosition		191982	0					
ANR	192300	Identifier	pos		191982	1					
ANR	192301	CFGEntryNode	ENTRY		191982		True				
ANR	192302	CFGExitNode	EXIT		191982		True				
ANR	192303	Symbol	ht_iterators		191982						
ANR	192304	Symbol	EG		191982						
ANR	192305	Symbol	iter -> ht		191982						
ANR	192306	Symbol	NULL		191982						
ANR	192307	Symbol	ht -> u		191982						
ANR	192308	Symbol	iter -> pos		191982						
ANR	192309	Symbol	iter		191982						
ANR	192310	Symbol	ht		191982						
ANR	192311	Symbol	ht -> u . v		191982						
ANR	192312	Symbol	* ht		191982						
ANR	192313	Symbol	* iter		191982						
ANR	192314	Symbol	ht_iterators_slots		191982						
ANR	192315	Symbol	emalloc		191982						
ANR	192316	Symbol	ht_iterators_used		191982						
ANR	192317	Symbol	pos		191982						
ANR	192318	Symbol	ht_iterators_count		191982						
ANR	192319	Symbol	end		191982						
ANR	192320	Symbol	idx		191982						
ANR	192321	Symbol	EXPECTED		191982						
ANR	192322	Symbol	erealloc		191982						
ANR	192323	Symbol	ht -> u . v . nIteratorsCount		191982						
ANR	192324	Function	zend_hash_iterator_pos	366:0:11965:12522							
ANR	192325	FunctionDef	"zend_hash_iterator_pos (uint32_t idx , HashTable * ht)"		192324	0					
ANR	192326	CompoundStatement		367:0:12053:12522	192324	0					
ANR	192327	IdentifierDeclStatement	HashTableIterator * iter = EG ( ht_iterators ) + idx ;	368:1:12056:12104	192324	0	True				
ANR	192328	IdentifierDecl	* iter = EG ( ht_iterators ) + idx		192324	0					
ANR	192329	IdentifierDeclType	HashTableIterator *		192324	0					
ANR	192330	Identifier	iter		192324	1					
ANR	192331	AssignmentExpression	* iter = EG ( ht_iterators ) + idx		192324	2		=			
ANR	192332	Identifier	iter		192324	0					
ANR	192333	AdditiveExpression	EG ( ht_iterators ) + idx		192324	1		+			
ANR	192334	CallExpression	EG ( ht_iterators )		192324	0					
ANR	192335	Callee	EG		192324	0					
ANR	192336	Identifier	EG		192324	0					
ANR	192337	ArgumentList	ht_iterators		192324	1					
ANR	192338	Argument	ht_iterators		192324	0					
ANR	192339	Identifier	ht_iterators		192324	0					
ANR	192340	Identifier	idx		192324	1					
ANR	192341	ExpressionStatement	ZEND_ASSERT ( idx != ( uint32_t ) - 1 )	370:1:12108:12140	192324	1	True				
ANR	192342	CallExpression	ZEND_ASSERT ( idx != ( uint32_t ) - 1 )		192324	0					
ANR	192343	Callee	ZEND_ASSERT		192324	0					
ANR	192344	Identifier	ZEND_ASSERT		192324	0					
ANR	192345	ArgumentList	idx != ( uint32_t ) - 1		192324	1					
ANR	192346	Argument	idx != ( uint32_t ) - 1		192324	0					
ANR	192347	EqualityExpression	idx != ( uint32_t ) - 1		192324	0		!=			
ANR	192348	Identifier	idx		192324	0					
ANR	192349	CastExpression	( uint32_t ) - 1		192324	1					
ANR	192350	CastTarget	uint32_t		192324	0					
ANR	192351	UnaryOperationExpression	- 1		192324	1					
ANR	192352	UnaryOperator	-		192324	0					
ANR	192353	PrimaryExpression	1		192324	1					
ANR	192354	IfStatement	if ( iter -> pos == HT_INVALID_IDX )		192324	2					
ANR	192355	Condition	iter -> pos == HT_INVALID_IDX	371:5:12147:12173	192324	0	True				
ANR	192356	EqualityExpression	iter -> pos == HT_INVALID_IDX		192324	0		==			
ANR	192357	PtrMemberAccess	iter -> pos		192324	0					
ANR	192358	Identifier	iter		192324	0					
ANR	192359	Identifier	pos		192324	1					
ANR	192360	Identifier	HT_INVALID_IDX		192324	1					
ANR	192361	CompoundStatement		5:34:122:122	192324	1					
ANR	192362	ReturnStatement	return HT_INVALID_IDX ;	372:2:12180:12201	192324	0	True				
ANR	192363	Identifier	HT_INVALID_IDX		192324	0					
ANR	192364	ElseStatement	else		192324	0					
ANR	192365	IfStatement	if ( UNEXPECTED ( iter -> ht != ht ) )		192324	0					
ANR	192366	Condition	UNEXPECTED ( iter -> ht != ht )	373:12:12215:12240	192324	0	True				
ANR	192367	CallExpression	UNEXPECTED ( iter -> ht != ht )		192324	0					
ANR	192368	Callee	UNEXPECTED		192324	0					
ANR	192369	Identifier	UNEXPECTED		192324	0					
ANR	192370	ArgumentList	iter -> ht != ht		192324	1					
ANR	192371	Argument	iter -> ht != ht		192324	0					
ANR	192372	EqualityExpression	iter -> ht != ht		192324	0		!=			
ANR	192373	PtrMemberAccess	iter -> ht		192324	0					
ANR	192374	Identifier	iter		192324	0					
ANR	192375	Identifier	ht		192324	1					
ANR	192376	Identifier	ht		192324	1					
ANR	192377	CompoundStatement		7:40:189:189	192324	1					
ANR	192378	IfStatement	if ( EXPECTED ( iter -> ht ) && EXPECTED ( iter -> ht -> u . v . nIteratorsCount != 255 ) )		192324	0					
ANR	192379	Condition	EXPECTED ( iter -> ht ) && EXPECTED ( iter -> ht -> u . v . nIteratorsCount != 255 )	374:6:12251:12318	192324	0	True				
ANR	192380	AndExpression	EXPECTED ( iter -> ht ) && EXPECTED ( iter -> ht -> u . v . nIteratorsCount != 255 )		192324	0		&&			
ANR	192381	CallExpression	EXPECTED ( iter -> ht )		192324	0					
ANR	192382	Callee	EXPECTED		192324	0					
ANR	192383	Identifier	EXPECTED		192324	0					
ANR	192384	ArgumentList	iter -> ht		192324	1					
ANR	192385	Argument	iter -> ht		192324	0					
ANR	192386	PtrMemberAccess	iter -> ht		192324	0					
ANR	192387	Identifier	iter		192324	0					
ANR	192388	Identifier	ht		192324	1					
ANR	192389	CallExpression	EXPECTED ( iter -> ht -> u . v . nIteratorsCount != 255 )		192324	1					
ANR	192390	Callee	EXPECTED		192324	0					
ANR	192391	Identifier	EXPECTED		192324	0					
ANR	192392	ArgumentList	iter -> ht -> u . v . nIteratorsCount != 255		192324	1					
ANR	192393	Argument	iter -> ht -> u . v . nIteratorsCount != 255		192324	0					
ANR	192394	EqualityExpression	iter -> ht -> u . v . nIteratorsCount != 255		192324	0		!=			
ANR	192395	MemberAccess	iter -> ht -> u . v . nIteratorsCount		192324	0					
ANR	192396	MemberAccess	iter -> ht -> u . v		192324	0					
ANR	192397	PtrMemberAccess	iter -> ht -> u		192324	0					
ANR	192398	PtrMemberAccess	iter -> ht		192324	0					
ANR	192399	Identifier	iter		192324	0					
ANR	192400	Identifier	ht		192324	1					
ANR	192401	Identifier	u		192324	1					
ANR	192402	Identifier	v		192324	1					
ANR	192403	Identifier	nIteratorsCount		192324	1					
ANR	192404	PrimaryExpression	255		192324	1					
ANR	192405	CompoundStatement		8:76:267:267	192324	1					
ANR	192406	ExpressionStatement	iter -> ht -> u . v . nIteratorsCount --	375:3:12326:12357	192324	0	True				
ANR	192407	PostIncDecOperationExpression	iter -> ht -> u . v . nIteratorsCount --		192324	0					
ANR	192408	MemberAccess	iter -> ht -> u . v . nIteratorsCount		192324	0					
ANR	192409	MemberAccess	iter -> ht -> u . v		192324	0					
ANR	192410	PtrMemberAccess	iter -> ht -> u		192324	0					
ANR	192411	PtrMemberAccess	iter -> ht		192324	0					
ANR	192412	Identifier	iter		192324	0					
ANR	192413	Identifier	ht		192324	1					
ANR	192414	Identifier	u		192324	1					
ANR	192415	Identifier	v		192324	1					
ANR	192416	Identifier	nIteratorsCount		192324	1					
ANR	192417	IncDec	--		192324	1					
ANR	192418	IfStatement	if ( EXPECTED ( ht -> u . v . nIteratorsCount != 255 ) )		192324	1					
ANR	192419	Condition	EXPECTED ( ht -> u . v . nIteratorsCount != 255 )	377:6:12369:12408	192324	0	True				
ANR	192420	CallExpression	EXPECTED ( ht -> u . v . nIteratorsCount != 255 )		192324	0					
ANR	192421	Callee	EXPECTED		192324	0					
ANR	192422	Identifier	EXPECTED		192324	0					
ANR	192423	ArgumentList	ht -> u . v . nIteratorsCount != 255		192324	1					
ANR	192424	Argument	ht -> u . v . nIteratorsCount != 255		192324	0					
ANR	192425	EqualityExpression	ht -> u . v . nIteratorsCount != 255		192324	0		!=			
ANR	192426	MemberAccess	ht -> u . v . nIteratorsCount		192324	0					
ANR	192427	MemberAccess	ht -> u . v		192324	0					
ANR	192428	PtrMemberAccess	ht -> u		192324	0					
ANR	192429	Identifier	ht		192324	0					
ANR	192430	Identifier	u		192324	1					
ANR	192431	Identifier	v		192324	1					
ANR	192432	Identifier	nIteratorsCount		192324	1					
ANR	192433	PrimaryExpression	255		192324	1					
ANR	192434	CompoundStatement		11:48:357:357	192324	1					
ANR	192435	ExpressionStatement	ht -> u . v . nIteratorsCount ++	378:3:12416:12441	192324	0	True				
ANR	192436	PostIncDecOperationExpression	ht -> u . v . nIteratorsCount ++		192324	0					
ANR	192437	MemberAccess	ht -> u . v . nIteratorsCount		192324	0					
ANR	192438	MemberAccess	ht -> u . v		192324	0					
ANR	192439	PtrMemberAccess	ht -> u		192324	0					
ANR	192440	Identifier	ht		192324	0					
ANR	192441	Identifier	u		192324	1					
ANR	192442	Identifier	v		192324	1					
ANR	192443	Identifier	nIteratorsCount		192324	1					
ANR	192444	IncDec	++		192324	1					
ANR	192445	ExpressionStatement	iter -> ht = ht	380:2:12449:12462	192324	2	True				
ANR	192446	AssignmentExpression	iter -> ht = ht		192324	0		=			
ANR	192447	PtrMemberAccess	iter -> ht		192324	0					
ANR	192448	Identifier	iter		192324	0					
ANR	192449	Identifier	ht		192324	1					
ANR	192450	Identifier	ht		192324	1					
ANR	192451	ExpressionStatement	iter -> pos = ht -> nInternalPointer	381:2:12466:12498	192324	3	True				
ANR	192452	AssignmentExpression	iter -> pos = ht -> nInternalPointer		192324	0		=			
ANR	192453	PtrMemberAccess	iter -> pos		192324	0					
ANR	192454	Identifier	iter		192324	0					
ANR	192455	Identifier	pos		192324	1					
ANR	192456	PtrMemberAccess	ht -> nInternalPointer		192324	1					
ANR	192457	Identifier	ht		192324	0					
ANR	192458	Identifier	nInternalPointer		192324	1					
ANR	192459	ReturnStatement	return iter -> pos ;	383:1:12504:12520	192324	3	True				
ANR	192460	PtrMemberAccess	iter -> pos		192324	0					
ANR	192461	Identifier	iter		192324	0					
ANR	192462	Identifier	pos		192324	1					
ANR	192463	ReturnType	ZEND_API HashPosition ZEND_FASTCALL		192324	1					
ANR	192464	Identifier	zend_hash_iterator_pos		192324	2					
ANR	192465	ParameterList	"uint32_t idx , HashTable * ht"		192324	3					
ANR	192466	Parameter	uint32_t idx	366:59:12024:12035	192324	0	True				
ANR	192467	ParameterType	uint32_t		192324	0					
ANR	192468	Identifier	idx		192324	1					
ANR	192469	Parameter	HashTable * ht	366:73:12038:12050	192324	1	True				
ANR	192470	ParameterType	HashTable *		192324	0					
ANR	192471	Identifier	ht		192324	1					
ANR	192472	CFGEntryNode	ENTRY		192324		True				
ANR	192473	CFGExitNode	EXIT		192324		True				
ANR	192474	Symbol	ht_iterators		192324						
ANR	192475	Symbol	HT_INVALID_IDX		192324						
ANR	192476	Symbol	ht -> nInternalPointer		192324						
ANR	192477	Symbol	EG		192324						
ANR	192478	Symbol	iter -> ht		192324						
ANR	192479	Symbol	* iter -> ht		192324						
ANR	192480	Symbol	iter -> ht -> u		192324						
ANR	192481	Symbol	iter -> pos		192324						
ANR	192482	Symbol	iter -> ht -> u . v		192324						
ANR	192483	Symbol	ht -> u		192324						
ANR	192484	Symbol	iter		192324						
ANR	192485	Symbol	ht		192324						
ANR	192486	Symbol	ht -> u . v		192324						
ANR	192487	Symbol	UNEXPECTED		192324						
ANR	192488	Symbol	* iter		192324						
ANR	192489	Symbol	* ht		192324						
ANR	192490	Symbol	iter -> ht -> u . v . nIteratorsCount		192324						
ANR	192491	Symbol	idx		192324						
ANR	192492	Symbol	* * iter		192324						
ANR	192493	Symbol	EXPECTED		192324						
ANR	192494	Symbol	ht -> u . v . nIteratorsCount		192324						
ANR	192495	Function	zend_hash_iterator_del	386:0:12525:12963							
ANR	192496	FunctionDef	zend_hash_iterator_del (uint32_t idx)		192495	0					
ANR	192497	CompoundStatement		387:0:12590:12963	192495	0					
ANR	192498	IdentifierDeclStatement	HashTableIterator * iter = EG ( ht_iterators ) + idx ;	388:1:12593:12641	192495	0	True				
ANR	192499	IdentifierDecl	* iter = EG ( ht_iterators ) + idx		192495	0					
ANR	192500	IdentifierDeclType	HashTableIterator *		192495	0					
ANR	192501	Identifier	iter		192495	1					
ANR	192502	AssignmentExpression	* iter = EG ( ht_iterators ) + idx		192495	2		=			
ANR	192503	Identifier	iter		192495	0					
ANR	192504	AdditiveExpression	EG ( ht_iterators ) + idx		192495	1		+			
ANR	192505	CallExpression	EG ( ht_iterators )		192495	0					
ANR	192506	Callee	EG		192495	0					
ANR	192507	Identifier	EG		192495	0					
ANR	192508	ArgumentList	ht_iterators		192495	1					
ANR	192509	Argument	ht_iterators		192495	0					
ANR	192510	Identifier	ht_iterators		192495	0					
ANR	192511	Identifier	idx		192495	1					
ANR	192512	ExpressionStatement	ZEND_ASSERT ( idx != ( uint32_t ) - 1 )	390:1:12645:12677	192495	1	True				
ANR	192513	CallExpression	ZEND_ASSERT ( idx != ( uint32_t ) - 1 )		192495	0					
ANR	192514	Callee	ZEND_ASSERT		192495	0					
ANR	192515	Identifier	ZEND_ASSERT		192495	0					
ANR	192516	ArgumentList	idx != ( uint32_t ) - 1		192495	1					
ANR	192517	Argument	idx != ( uint32_t ) - 1		192495	0					
ANR	192518	EqualityExpression	idx != ( uint32_t ) - 1		192495	0		!=			
ANR	192519	Identifier	idx		192495	0					
ANR	192520	CastExpression	( uint32_t ) - 1		192495	1					
ANR	192521	CastTarget	uint32_t		192495	0					
ANR	192522	UnaryOperationExpression	- 1		192495	1					
ANR	192523	UnaryOperator	-		192495	0					
ANR	192524	PrimaryExpression	1		192495	1					
ANR	192525	IfStatement	if ( EXPECTED ( iter -> ht ) && EXPECTED ( iter -> ht -> u . v . nIteratorsCount != 255 ) )		192495	2					
ANR	192526	Condition	EXPECTED ( iter -> ht ) && EXPECTED ( iter -> ht -> u . v . nIteratorsCount != 255 )	392:5:12685:12752	192495	0	True				
ANR	192527	AndExpression	EXPECTED ( iter -> ht ) && EXPECTED ( iter -> ht -> u . v . nIteratorsCount != 255 )		192495	0		&&			
ANR	192528	CallExpression	EXPECTED ( iter -> ht )		192495	0					
ANR	192529	Callee	EXPECTED		192495	0					
ANR	192530	Identifier	EXPECTED		192495	0					
ANR	192531	ArgumentList	iter -> ht		192495	1					
ANR	192532	Argument	iter -> ht		192495	0					
ANR	192533	PtrMemberAccess	iter -> ht		192495	0					
ANR	192534	Identifier	iter		192495	0					
ANR	192535	Identifier	ht		192495	1					
ANR	192536	CallExpression	EXPECTED ( iter -> ht -> u . v . nIteratorsCount != 255 )		192495	1					
ANR	192537	Callee	EXPECTED		192495	0					
ANR	192538	Identifier	EXPECTED		192495	0					
ANR	192539	ArgumentList	iter -> ht -> u . v . nIteratorsCount != 255		192495	1					
ANR	192540	Argument	iter -> ht -> u . v . nIteratorsCount != 255		192495	0					
ANR	192541	EqualityExpression	iter -> ht -> u . v . nIteratorsCount != 255		192495	0		!=			
ANR	192542	MemberAccess	iter -> ht -> u . v . nIteratorsCount		192495	0					
ANR	192543	MemberAccess	iter -> ht -> u . v		192495	0					
ANR	192544	PtrMemberAccess	iter -> ht -> u		192495	0					
ANR	192545	PtrMemberAccess	iter -> ht		192495	0					
ANR	192546	Identifier	iter		192495	0					
ANR	192547	Identifier	ht		192495	1					
ANR	192548	Identifier	u		192495	1					
ANR	192549	Identifier	v		192495	1					
ANR	192550	Identifier	nIteratorsCount		192495	1					
ANR	192551	PrimaryExpression	255		192495	1					
ANR	192552	CompoundStatement		6:75:164:164	192495	1					
ANR	192553	ExpressionStatement	iter -> ht -> u . v . nIteratorsCount --	393:2:12759:12790	192495	0	True				
ANR	192554	PostIncDecOperationExpression	iter -> ht -> u . v . nIteratorsCount --		192495	0					
ANR	192555	MemberAccess	iter -> ht -> u . v . nIteratorsCount		192495	0					
ANR	192556	MemberAccess	iter -> ht -> u . v		192495	0					
ANR	192557	PtrMemberAccess	iter -> ht -> u		192495	0					
ANR	192558	PtrMemberAccess	iter -> ht		192495	0					
ANR	192559	Identifier	iter		192495	0					
ANR	192560	Identifier	ht		192495	1					
ANR	192561	Identifier	u		192495	1					
ANR	192562	Identifier	v		192495	1					
ANR	192563	Identifier	nIteratorsCount		192495	1					
ANR	192564	IncDec	--		192495	1					
ANR	192565	ExpressionStatement	iter -> ht = NULL	395:1:12796:12811	192495	3	True				
ANR	192566	AssignmentExpression	iter -> ht = NULL		192495	0		=			
ANR	192567	PtrMemberAccess	iter -> ht		192495	0					
ANR	192568	Identifier	iter		192495	0					
ANR	192569	Identifier	ht		192495	1					
ANR	192570	Identifier	NULL		192495	1					
ANR	192571	IfStatement	if ( idx == EG ( ht_iterators_used ) - 1 )		192495	4					
ANR	192572	Condition	idx == EG ( ht_iterators_used ) - 1	397:5:12819:12850	192495	0	True				
ANR	192573	EqualityExpression	idx == EG ( ht_iterators_used ) - 1		192495	0		==			
ANR	192574	Identifier	idx		192495	0					
ANR	192575	AdditiveExpression	EG ( ht_iterators_used ) - 1		192495	1		-			
ANR	192576	CallExpression	EG ( ht_iterators_used )		192495	0					
ANR	192577	Callee	EG		192495	0					
ANR	192578	Identifier	EG		192495	0					
ANR	192579	ArgumentList	ht_iterators_used		192495	1					
ANR	192580	Argument	ht_iterators_used		192495	0					
ANR	192581	Identifier	ht_iterators_used		192495	0					
ANR	192582	PrimaryExpression	1		192495	1					
ANR	192583	CompoundStatement		11:39:262:262	192495	1					
ANR	192584	WhileStatement	while ( idx > 0 && EG ( ht_iterators ) [ idx - 1 ] . ht == NULL )		192495	0					
ANR	192585	Condition	idx > 0 && EG ( ht_iterators ) [ idx - 1 ] . ht == NULL	398:9:12864:12910	192495	0	True				
ANR	192586	AndExpression	idx > 0 && EG ( ht_iterators ) [ idx - 1 ] . ht == NULL		192495	0		&&			
ANR	192587	RelationalExpression	idx > 0		192495	0		>			
ANR	192588	Identifier	idx		192495	0					
ANR	192589	PrimaryExpression	0		192495	1					
ANR	192590	EqualityExpression	EG ( ht_iterators ) [ idx - 1 ] . ht == NULL		192495	1		==			
ANR	192591	MemberAccess	EG ( ht_iterators ) [ idx - 1 ] . ht		192495	0					
ANR	192592	ArrayIndexing	EG ( ht_iterators ) [ idx - 1 ]		192495	0					
ANR	192593	CallExpression	EG ( ht_iterators )		192495	0					
ANR	192594	Callee	EG		192495	0					
ANR	192595	Identifier	EG		192495	0					
ANR	192596	ArgumentList	ht_iterators		192495	1					
ANR	192597	Argument	ht_iterators		192495	0					
ANR	192598	Identifier	ht_iterators		192495	0					
ANR	192599	AdditiveExpression	idx - 1		192495	1		-			
ANR	192600	Identifier	idx		192495	0					
ANR	192601	PrimaryExpression	1		192495	1					
ANR	192602	Identifier	ht		192495	1					
ANR	192603	Identifier	NULL		192495	1					
ANR	192604	CompoundStatement		12:58:322:322	192495	1					
ANR	192605	ExpressionStatement	idx --	399:3:12918:12923	192495	0	True				
ANR	192606	PostIncDecOperationExpression	idx --		192495	0					
ANR	192607	Identifier	idx		192495	0					
ANR	192608	IncDec	--		192495	1					
ANR	192609	ExpressionStatement	EG ( ht_iterators_used ) = idx	401:2:12931:12958	192495	1	True				
ANR	192610	AssignmentExpression	EG ( ht_iterators_used ) = idx		192495	0		=			
ANR	192611	CallExpression	EG ( ht_iterators_used )		192495	0					
ANR	192612	Callee	EG		192495	0					
ANR	192613	Identifier	EG		192495	0					
ANR	192614	ArgumentList	ht_iterators_used		192495	1					
ANR	192615	Argument	ht_iterators_used		192495	0					
ANR	192616	Identifier	ht_iterators_used		192495	0					
ANR	192617	Identifier	idx		192495	1					
ANR	192618	ReturnType	ZEND_API void ZEND_FASTCALL		192495	1					
ANR	192619	Identifier	zend_hash_iterator_del		192495	2					
ANR	192620	ParameterList	uint32_t idx		192495	3					
ANR	192621	Parameter	uint32_t idx	386:51:12576:12587	192495	0	True				
ANR	192622	ParameterType	uint32_t		192495	0					
ANR	192623	Identifier	idx		192495	1					
ANR	192624	CFGEntryNode	ENTRY		192495		True				
ANR	192625	CFGExitNode	EXIT		192495		True				
ANR	192626	Symbol	ht_iterators		192495						
ANR	192627	Symbol	EG		192495						
ANR	192628	Symbol	EG ( ht_iterators ) [ idx - 1 ] . ht		192495						
ANR	192629	Symbol	iter -> ht		192495						
ANR	192630	Symbol	NULL		192495						
ANR	192631	Symbol	* iter -> ht		192495						
ANR	192632	Symbol	iter -> ht -> u		192495						
ANR	192633	Symbol	iter -> ht -> u . v		192495						
ANR	192634	Symbol	iter		192495						
ANR	192635	Symbol	* EG		192495						
ANR	192636	Symbol	* iter		192495						
ANR	192637	Symbol	ht_iterators_used		192495						
ANR	192638	Symbol	* idx		192495						
ANR	192639	Symbol	iter -> ht -> u . v . nIteratorsCount		192495						
ANR	192640	Symbol	idx		192495						
ANR	192641	Symbol	* * iter		192495						
ANR	192642	Symbol	EXPECTED		192495						
ANR	192643	Function	_zend_hash_iterators_remove	405:0:12966:13389							
ANR	192644	FunctionDef	_zend_hash_iterators_remove (HashTable * ht)		192643	0					
ANR	192645	CompoundStatement		406:0:13053:13389	192643	0					
ANR	192646	IdentifierDeclStatement	HashTableIterator * iter = EG ( ht_iterators ) ;	407:1:13056:13098	192643	0	True				
ANR	192647	IdentifierDecl	* iter = EG ( ht_iterators )		192643	0					
ANR	192648	IdentifierDeclType	HashTableIterator *		192643	0					
ANR	192649	Identifier	iter		192643	1					
ANR	192650	AssignmentExpression	* iter = EG ( ht_iterators )		192643	2		=			
ANR	192651	Identifier	iter		192643	0					
ANR	192652	CallExpression	EG ( ht_iterators )		192643	1					
ANR	192653	Callee	EG		192643	0					
ANR	192654	Identifier	EG		192643	0					
ANR	192655	ArgumentList	ht_iterators		192643	1					
ANR	192656	Argument	ht_iterators		192643	0					
ANR	192657	Identifier	ht_iterators		192643	0					
ANR	192658	IdentifierDeclStatement	HashTableIterator * end = iter + EG ( ht_iterators_used ) ;	408:1:13101:13155	192643	1	True				
ANR	192659	IdentifierDecl	* end = iter + EG ( ht_iterators_used )		192643	0					
ANR	192660	IdentifierDeclType	HashTableIterator *		192643	0					
ANR	192661	Identifier	end		192643	1					
ANR	192662	AssignmentExpression	* end = iter + EG ( ht_iterators_used )		192643	2		=			
ANR	192663	Identifier	end		192643	0					
ANR	192664	AdditiveExpression	iter + EG ( ht_iterators_used )		192643	1		+			
ANR	192665	Identifier	iter		192643	0					
ANR	192666	CallExpression	EG ( ht_iterators_used )		192643	1					
ANR	192667	Callee	EG		192643	0					
ANR	192668	Identifier	EG		192643	0					
ANR	192669	ArgumentList	ht_iterators_used		192643	1					
ANR	192670	Argument	ht_iterators_used		192643	0					
ANR	192671	Identifier	ht_iterators_used		192643	0					
ANR	192672	IdentifierDeclStatement	uint32_t idx ;	409:1:13158:13170	192643	2	True				
ANR	192673	IdentifierDecl	idx		192643	0					
ANR	192674	IdentifierDeclType	uint32_t		192643	0					
ANR	192675	Identifier	idx		192643	1					
ANR	192676	WhileStatement	while ( iter != end )		192643	3					
ANR	192677	Condition	iter != end	411:8:13181:13191	192643	0	True				
ANR	192678	EqualityExpression	iter != end		192643	0		!=			
ANR	192679	Identifier	iter		192643	0					
ANR	192680	Identifier	end		192643	1					
ANR	192681	CompoundStatement		6:21:140:140	192643	1					
ANR	192682	IfStatement	if ( iter -> ht == ht )		192643	0					
ANR	192683	Condition	iter -> ht == ht	412:6:13202:13215	192643	0	True				
ANR	192684	EqualityExpression	iter -> ht == ht		192643	0		==			
ANR	192685	PtrMemberAccess	iter -> ht		192643	0					
ANR	192686	Identifier	iter		192643	0					
ANR	192687	Identifier	ht		192643	1					
ANR	192688	Identifier	ht		192643	1					
ANR	192689	CompoundStatement		7:22:164:164	192643	1					
ANR	192690	ExpressionStatement	iter -> ht = NULL	413:3:13223:13238	192643	0	True				
ANR	192691	AssignmentExpression	iter -> ht = NULL		192643	0		=			
ANR	192692	PtrMemberAccess	iter -> ht		192643	0					
ANR	192693	Identifier	iter		192643	0					
ANR	192694	Identifier	ht		192643	1					
ANR	192695	Identifier	NULL		192643	1					
ANR	192696	ExpressionStatement	iter ++	415:2:13246:13252	192643	1	True				
ANR	192697	PostIncDecOperationExpression	iter ++		192643	0					
ANR	192698	Identifier	iter		192643	0					
ANR	192699	IncDec	++		192643	1					
ANR	192700	ExpressionStatement	idx = EG ( ht_iterators_used )	418:1:13259:13286	192643	4	True				
ANR	192701	AssignmentExpression	idx = EG ( ht_iterators_used )		192643	0		=			
ANR	192702	Identifier	idx		192643	0					
ANR	192703	CallExpression	EG ( ht_iterators_used )		192643	1					
ANR	192704	Callee	EG		192643	0					
ANR	192705	Identifier	EG		192643	0					
ANR	192706	ArgumentList	ht_iterators_used		192643	1					
ANR	192707	Argument	ht_iterators_used		192643	0					
ANR	192708	Identifier	ht_iterators_used		192643	0					
ANR	192709	WhileStatement	while ( idx > 0 && EG ( ht_iterators ) [ idx - 1 ] . ht == NULL )		192643	5					
ANR	192710	Condition	idx > 0 && EG ( ht_iterators ) [ idx - 1 ] . ht == NULL	419:8:13296:13342	192643	0	True				
ANR	192711	AndExpression	idx > 0 && EG ( ht_iterators ) [ idx - 1 ] . ht == NULL		192643	0		&&			
ANR	192712	RelationalExpression	idx > 0		192643	0		>			
ANR	192713	Identifier	idx		192643	0					
ANR	192714	PrimaryExpression	0		192643	1					
ANR	192715	EqualityExpression	EG ( ht_iterators ) [ idx - 1 ] . ht == NULL		192643	1		==			
ANR	192716	MemberAccess	EG ( ht_iterators ) [ idx - 1 ] . ht		192643	0					
ANR	192717	ArrayIndexing	EG ( ht_iterators ) [ idx - 1 ]		192643	0					
ANR	192718	CallExpression	EG ( ht_iterators )		192643	0					
ANR	192719	Callee	EG		192643	0					
ANR	192720	Identifier	EG		192643	0					
ANR	192721	ArgumentList	ht_iterators		192643	1					
ANR	192722	Argument	ht_iterators		192643	0					
ANR	192723	Identifier	ht_iterators		192643	0					
ANR	192724	AdditiveExpression	idx - 1		192643	1		-			
ANR	192725	Identifier	idx		192643	0					
ANR	192726	PrimaryExpression	1		192643	1					
ANR	192727	Identifier	ht		192643	1					
ANR	192728	Identifier	NULL		192643	1					
ANR	192729	CompoundStatement		14:57:291:291	192643	1					
ANR	192730	ExpressionStatement	idx --	420:2:13349:13354	192643	0	True				
ANR	192731	PostIncDecOperationExpression	idx --		192643	0					
ANR	192732	Identifier	idx		192643	0					
ANR	192733	IncDec	--		192643	1					
ANR	192734	ExpressionStatement	EG ( ht_iterators_used ) = idx	422:1:13360:13387	192643	6	True				
ANR	192735	AssignmentExpression	EG ( ht_iterators_used ) = idx		192643	0		=			
ANR	192736	CallExpression	EG ( ht_iterators_used )		192643	0					
ANR	192737	Callee	EG		192643	0					
ANR	192738	Identifier	EG		192643	0					
ANR	192739	ArgumentList	ht_iterators_used		192643	1					
ANR	192740	Argument	ht_iterators_used		192643	0					
ANR	192741	Identifier	ht_iterators_used		192643	0					
ANR	192742	Identifier	idx		192643	1					
ANR	192743	ReturnType	static zend_never_inline void ZEND_FASTCALL		192643	1					
ANR	192744	Identifier	_zend_hash_iterators_remove		192643	2					
ANR	192745	ParameterList	HashTable * ht		192643	3					
ANR	192746	Parameter	HashTable * ht	405:72:13038:13050	192643	0	True				
ANR	192747	ParameterType	HashTable *		192643	0					
ANR	192748	Identifier	ht		192643	1					
ANR	192749	CFGEntryNode	ENTRY		192643		True				
ANR	192750	CFGExitNode	EXIT		192643		True				
ANR	192751	Symbol	ht_iterators		192643						
ANR	192752	Symbol	EG		192643						
ANR	192753	Symbol	EG ( ht_iterators ) [ idx - 1 ] . ht		192643						
ANR	192754	Symbol	iter -> ht		192643						
ANR	192755	Symbol	NULL		192643						
ANR	192756	Symbol	iter		192643						
ANR	192757	Symbol	* EG		192643						
ANR	192758	Symbol	ht		192643						
ANR	192759	Symbol	* iter		192643						
ANR	192760	Symbol	ht_iterators_used		192643						
ANR	192761	Symbol	* idx		192643						
ANR	192762	Symbol	end		192643						
ANR	192763	Symbol	idx		192643						
ANR	192764	Function	zend_hash_iterators_remove	425:0:13392:13549							
ANR	192765	FunctionDef	zend_hash_iterators_remove (HashTable * ht)		192764	0					
ANR	192766	CompoundStatement		426:0:13465:13549	192764	0					
ANR	192767	IfStatement	if ( UNEXPECTED ( ht -> u . v . nIteratorsCount ) )		192764	0					
ANR	192768	Condition	UNEXPECTED ( ht -> u . v . nIteratorsCount )	427:5:13472:13506	192764	0	True				
ANR	192769	CallExpression	UNEXPECTED ( ht -> u . v . nIteratorsCount )		192764	0					
ANR	192770	Callee	UNEXPECTED		192764	0					
ANR	192771	Identifier	UNEXPECTED		192764	0					
ANR	192772	ArgumentList	ht -> u . v . nIteratorsCount		192764	1					
ANR	192773	Argument	ht -> u . v . nIteratorsCount		192764	0					
ANR	192774	MemberAccess	ht -> u . v . nIteratorsCount		192764	0					
ANR	192775	MemberAccess	ht -> u . v		192764	0					
ANR	192776	PtrMemberAccess	ht -> u		192764	0					
ANR	192777	Identifier	ht		192764	0					
ANR	192778	Identifier	u		192764	1					
ANR	192779	Identifier	v		192764	1					
ANR	192780	Identifier	nIteratorsCount		192764	1					
ANR	192781	CompoundStatement		2:42:43:43	192764	1					
ANR	192782	ExpressionStatement	_zend_hash_iterators_remove ( ht )	428:2:13513:13544	192764	0	True				
ANR	192783	CallExpression	_zend_hash_iterators_remove ( ht )		192764	0					
ANR	192784	Callee	_zend_hash_iterators_remove		192764	0					
ANR	192785	Identifier	_zend_hash_iterators_remove		192764	0					
ANR	192786	ArgumentList	ht		192764	1					
ANR	192787	Argument	ht		192764	0					
ANR	192788	Identifier	ht		192764	0					
ANR	192789	ReturnType	static zend_always_inline void		192764	1					
ANR	192790	Identifier	zend_hash_iterators_remove		192764	2					
ANR	192791	ParameterList	HashTable * ht		192764	3					
ANR	192792	Parameter	HashTable * ht	425:58:13450:13462	192764	0	True				
ANR	192793	ParameterType	HashTable *		192764	0					
ANR	192794	Identifier	ht		192764	1					
ANR	192795	CFGEntryNode	ENTRY		192764		True				
ANR	192796	CFGExitNode	EXIT		192764		True				
ANR	192797	Symbol	UNEXPECTED		192764						
ANR	192798	Symbol	* ht		192764						
ANR	192799	Symbol	ht -> u		192764						
ANR	192800	Symbol	ht		192764						
ANR	192801	Symbol	ht -> u . v		192764						
ANR	192802	Symbol	ht -> u . v . nIteratorsCount		192764						
ANR	192803	Function	zend_hash_iterators_lower_pos	432:0:13552:13945							
ANR	192804	FunctionDef	"zend_hash_iterators_lower_pos (HashTable * ht , HashPosition start)"		192803	0					
ANR	192805	CompoundStatement		433:0:13653:13945	192803	0					
ANR	192806	IdentifierDeclStatement	HashTableIterator * iter = EG ( ht_iterators ) ;	434:1:13656:13698	192803	0	True				
ANR	192807	IdentifierDecl	* iter = EG ( ht_iterators )		192803	0					
ANR	192808	IdentifierDeclType	HashTableIterator *		192803	0					
ANR	192809	Identifier	iter		192803	1					
ANR	192810	AssignmentExpression	* iter = EG ( ht_iterators )		192803	2		=			
ANR	192811	Identifier	iter		192803	0					
ANR	192812	CallExpression	EG ( ht_iterators )		192803	1					
ANR	192813	Callee	EG		192803	0					
ANR	192814	Identifier	EG		192803	0					
ANR	192815	ArgumentList	ht_iterators		192803	1					
ANR	192816	Argument	ht_iterators		192803	0					
ANR	192817	Identifier	ht_iterators		192803	0					
ANR	192818	IdentifierDeclStatement	HashTableIterator * end = iter + EG ( ht_iterators_used ) ;	435:1:13701:13755	192803	1	True				
ANR	192819	IdentifierDecl	* end = iter + EG ( ht_iterators_used )		192803	0					
ANR	192820	IdentifierDeclType	HashTableIterator *		192803	0					
ANR	192821	Identifier	end		192803	1					
ANR	192822	AssignmentExpression	* end = iter + EG ( ht_iterators_used )		192803	2		=			
ANR	192823	Identifier	end		192803	0					
ANR	192824	AdditiveExpression	iter + EG ( ht_iterators_used )		192803	1		+			
ANR	192825	Identifier	iter		192803	0					
ANR	192826	CallExpression	EG ( ht_iterators_used )		192803	1					
ANR	192827	Callee	EG		192803	0					
ANR	192828	Identifier	EG		192803	0					
ANR	192829	ArgumentList	ht_iterators_used		192803	1					
ANR	192830	Argument	ht_iterators_used		192803	0					
ANR	192831	Identifier	ht_iterators_used		192803	0					
ANR	192832	IdentifierDeclStatement	HashPosition res = HT_INVALID_IDX ;	436:1:13758:13791	192803	2	True				
ANR	192833	IdentifierDecl	res = HT_INVALID_IDX		192803	0					
ANR	192834	IdentifierDeclType	HashPosition		192803	0					
ANR	192835	Identifier	res		192803	1					
ANR	192836	AssignmentExpression	res = HT_INVALID_IDX		192803	2		=			
ANR	192837	Identifier	HT_INVALID_IDX		192803	0					
ANR	192838	Identifier	HT_INVALID_IDX		192803	1					
ANR	192839	WhileStatement	while ( iter != end )		192803	3					
ANR	192840	Condition	iter != end	438:8:13802:13812	192803	0	True				
ANR	192841	EqualityExpression	iter != end		192803	0		!=			
ANR	192842	Identifier	iter		192803	0					
ANR	192843	Identifier	end		192803	1					
ANR	192844	CompoundStatement		6:21:161:161	192803	1					
ANR	192845	IfStatement	if ( iter -> ht == ht )		192803	0					
ANR	192846	Condition	iter -> ht == ht	439:6:13823:13836	192803	0	True				
ANR	192847	EqualityExpression	iter -> ht == ht		192803	0		==			
ANR	192848	PtrMemberAccess	iter -> ht		192803	0					
ANR	192849	Identifier	iter		192803	0					
ANR	192850	Identifier	ht		192803	1					
ANR	192851	Identifier	ht		192803	1					
ANR	192852	CompoundStatement		7:22:185:185	192803	1					
ANR	192853	IfStatement	if ( iter -> pos >= start && iter -> pos < res )		192803	0					
ANR	192854	Condition	iter -> pos >= start && iter -> pos < res	440:7:13848:13884	192803	0	True				
ANR	192855	AndExpression	iter -> pos >= start && iter -> pos < res		192803	0		&&			
ANR	192856	RelationalExpression	iter -> pos >= start		192803	0		>=			
ANR	192857	PtrMemberAccess	iter -> pos		192803	0					
ANR	192858	Identifier	iter		192803	0					
ANR	192859	Identifier	pos		192803	1					
ANR	192860	Identifier	start		192803	1					
ANR	192861	RelationalExpression	iter -> pos < res		192803	1		<			
ANR	192862	PtrMemberAccess	iter -> pos		192803	0					
ANR	192863	Identifier	iter		192803	0					
ANR	192864	Identifier	pos		192803	1					
ANR	192865	Identifier	res		192803	1					
ANR	192866	CompoundStatement		8:46:233:233	192803	1					
ANR	192867	ExpressionStatement	res = iter -> pos	441:4:13893:13908	192803	0	True				
ANR	192868	AssignmentExpression	res = iter -> pos		192803	0		=			
ANR	192869	Identifier	res		192803	0					
ANR	192870	PtrMemberAccess	iter -> pos		192803	1					
ANR	192871	Identifier	iter		192803	0					
ANR	192872	Identifier	pos		192803	1					
ANR	192873	ExpressionStatement	iter ++	444:2:13921:13927	192803	1	True				
ANR	192874	PostIncDecOperationExpression	iter ++		192803	0					
ANR	192875	Identifier	iter		192803	0					
ANR	192876	IncDec	++		192803	1					
ANR	192877	ReturnStatement	return res ;	446:1:13933:13943	192803	4	True				
ANR	192878	Identifier	res		192803	0					
ANR	192879	ReturnType	ZEND_API HashPosition ZEND_FASTCALL		192803	1					
ANR	192880	Identifier	zend_hash_iterators_lower_pos		192803	2					
ANR	192881	ParameterList	"HashTable * ht , HashPosition start"		192803	3					
ANR	192882	Parameter	HashTable * ht	432:66:13618:13630	192803	0	True				
ANR	192883	ParameterType	HashTable *		192803	0					
ANR	192884	Identifier	ht		192803	1					
ANR	192885	Parameter	HashPosition start	432:81:13633:13650	192803	1	True				
ANR	192886	ParameterType	HashPosition		192803	0					
ANR	192887	Identifier	start		192803	1					
ANR	192888	CFGEntryNode	ENTRY		192803		True				
ANR	192889	CFGExitNode	EXIT		192803		True				
ANR	192890	Symbol	ht_iterators		192803						
ANR	192891	Symbol	HT_INVALID_IDX		192803						
ANR	192892	Symbol	res		192803						
ANR	192893	Symbol	* iter		192803						
ANR	192894	Symbol	EG		192803						
ANR	192895	Symbol	ht_iterators_used		192803						
ANR	192896	Symbol	iter -> ht		192803						
ANR	192897	Symbol	start		192803						
ANR	192898	Symbol	iter -> pos		192803						
ANR	192899	Symbol	iter		192803						
ANR	192900	Symbol	end		192803						
ANR	192901	Symbol	ht		192803						
ANR	192902	Function	_zend_hash_iterators_update	449:0:13948:14264							
ANR	192903	FunctionDef	"_zend_hash_iterators_update (HashTable * ht , HashPosition from , HashPosition to)"		192902	0					
ANR	192904	CompoundStatement		450:0:14055:14264	192902	0					
ANR	192905	IdentifierDeclStatement	HashTableIterator * iter = EG ( ht_iterators ) ;	451:1:14058:14100	192902	0	True				
ANR	192906	IdentifierDecl	* iter = EG ( ht_iterators )		192902	0					
ANR	192907	IdentifierDeclType	HashTableIterator *		192902	0					
ANR	192908	Identifier	iter		192902	1					
ANR	192909	AssignmentExpression	* iter = EG ( ht_iterators )		192902	2		=			
ANR	192910	Identifier	iter		192902	0					
ANR	192911	CallExpression	EG ( ht_iterators )		192902	1					
ANR	192912	Callee	EG		192902	0					
ANR	192913	Identifier	EG		192902	0					
ANR	192914	ArgumentList	ht_iterators		192902	1					
ANR	192915	Argument	ht_iterators		192902	0					
ANR	192916	Identifier	ht_iterators		192902	0					
ANR	192917	IdentifierDeclStatement	HashTableIterator * end = iter + EG ( ht_iterators_used ) ;	452:1:14103:14157	192902	1	True				
ANR	192918	IdentifierDecl	* end = iter + EG ( ht_iterators_used )		192902	0					
ANR	192919	IdentifierDeclType	HashTableIterator *		192902	0					
ANR	192920	Identifier	end		192902	1					
ANR	192921	AssignmentExpression	* end = iter + EG ( ht_iterators_used )		192902	2		=			
ANR	192922	Identifier	end		192902	0					
ANR	192923	AdditiveExpression	iter + EG ( ht_iterators_used )		192902	1		+			
ANR	192924	Identifier	iter		192902	0					
ANR	192925	CallExpression	EG ( ht_iterators_used )		192902	1					
ANR	192926	Callee	EG		192902	0					
ANR	192927	Identifier	EG		192902	0					
ANR	192928	ArgumentList	ht_iterators_used		192902	1					
ANR	192929	Argument	ht_iterators_used		192902	0					
ANR	192930	Identifier	ht_iterators_used		192902	0					
ANR	192931	WhileStatement	while ( iter != end )		192902	2					
ANR	192932	Condition	iter != end	454:8:14168:14178	192902	0	True				
ANR	192933	EqualityExpression	iter != end		192902	0		!=			
ANR	192934	Identifier	iter		192902	0					
ANR	192935	Identifier	end		192902	1					
ANR	192936	CompoundStatement		5:21:125:125	192902	1					
ANR	192937	IfStatement	if ( iter -> ht == ht && iter -> pos == from )		192902	0					
ANR	192938	Condition	iter -> ht == ht && iter -> pos == from	455:6:14189:14223	192902	0	True				
ANR	192939	AndExpression	iter -> ht == ht && iter -> pos == from		192902	0		&&			
ANR	192940	EqualityExpression	iter -> ht == ht		192902	0		==			
ANR	192941	PtrMemberAccess	iter -> ht		192902	0					
ANR	192942	Identifier	iter		192902	0					
ANR	192943	Identifier	ht		192902	1					
ANR	192944	Identifier	ht		192902	1					
ANR	192945	EqualityExpression	iter -> pos == from		192902	1		==			
ANR	192946	PtrMemberAccess	iter -> pos		192902	0					
ANR	192947	Identifier	iter		192902	0					
ANR	192948	Identifier	pos		192902	1					
ANR	192949	Identifier	from		192902	1					
ANR	192950	CompoundStatement		6:43:170:170	192902	1					
ANR	192951	ExpressionStatement	iter -> pos = to	456:3:14231:14245	192902	0	True				
ANR	192952	AssignmentExpression	iter -> pos = to		192902	0		=			
ANR	192953	PtrMemberAccess	iter -> pos		192902	0					
ANR	192954	Identifier	iter		192902	0					
ANR	192955	Identifier	pos		192902	1					
ANR	192956	Identifier	to		192902	1					
ANR	192957	ExpressionStatement	iter ++	458:2:14253:14259	192902	1	True				
ANR	192958	PostIncDecOperationExpression	iter ++		192902	0					
ANR	192959	Identifier	iter		192902	0					
ANR	192960	IncDec	++		192902	1					
ANR	192961	ReturnType	ZEND_API void ZEND_FASTCALL		192902	1					
ANR	192962	Identifier	_zend_hash_iterators_update		192902	2					
ANR	192963	ParameterList	"HashTable * ht , HashPosition from , HashPosition to"		192902	3					
ANR	192964	Parameter	HashTable * ht	449:56:14004:14016	192902	0	True				
ANR	192965	ParameterType	HashTable *		192902	0					
ANR	192966	Identifier	ht		192902	1					
ANR	192967	Parameter	HashPosition from	449:71:14019:14035	192902	1	True				
ANR	192968	ParameterType	HashPosition		192902	0					
ANR	192969	Identifier	from		192902	1					
ANR	192970	Parameter	HashPosition to	449:90:14038:14052	192902	2	True				
ANR	192971	ParameterType	HashPosition		192902	0					
ANR	192972	Identifier	to		192902	1					
ANR	192973	CFGEntryNode	ENTRY		192902		True				
ANR	192974	CFGExitNode	EXIT		192902		True				
ANR	192975	Symbol	ht_iterators		192902						
ANR	192976	Symbol	* iter		192902						
ANR	192977	Symbol	EG		192902						
ANR	192978	Symbol	ht_iterators_used		192902						
ANR	192979	Symbol	iter -> ht		192902						
ANR	192980	Symbol	iter -> pos		192902						
ANR	192981	Symbol	iter		192902						
ANR	192982	Symbol	from		192902						
ANR	192983	Symbol	end		192902						
ANR	192984	Symbol	to		192902						
ANR	192985	Symbol	ht		192902						
ANR	192986	Function	zend_hash_find_bucket	462:0:14267:14979							
ANR	192987	FunctionDef	"zend_hash_find_bucket (const HashTable * ht , zend_string * key)"		192986	0					
ANR	192988	CompoundStatement		463:0:14362:14979	192986	0					
ANR	192989	IdentifierDeclStatement	zend_ulong h ;	464:1:14365:14377	192986	0	True				
ANR	192990	IdentifierDecl	h		192986	0					
ANR	192991	IdentifierDeclType	zend_ulong		192986	0					
ANR	192992	Identifier	h		192986	1					
ANR	192993	IdentifierDeclStatement	uint32_t nIndex ;	465:1:14380:14395	192986	1	True				
ANR	192994	IdentifierDecl	nIndex		192986	0					
ANR	192995	IdentifierDeclType	uint32_t		192986	0					
ANR	192996	Identifier	nIndex		192986	1					
ANR	192997	IdentifierDeclStatement	uint32_t idx ;	466:1:14398:14410	192986	2	True				
ANR	192998	IdentifierDecl	idx		192986	0					
ANR	192999	IdentifierDeclType	uint32_t		192986	0					
ANR	193000	Identifier	idx		192986	1					
ANR	193001	IdentifierDeclStatement	"Bucket * p , * arData ;"	467:1:14413:14431	192986	3	True				
ANR	193002	IdentifierDecl	* p		192986	0					
ANR	193003	IdentifierDeclType	Bucket *		192986	0					
ANR	193004	Identifier	p		192986	1					
ANR	193005	IdentifierDecl	* arData		192986	1					
ANR	193006	IdentifierDeclType	Bucket *		192986	0					
ANR	193007	Identifier	arData		192986	1					
ANR	193008	ExpressionStatement	h = zend_string_hash_val ( key )	469:1:14435:14464	192986	4	True				
ANR	193009	AssignmentExpression	h = zend_string_hash_val ( key )		192986	0		=			
ANR	193010	Identifier	h		192986	0					
ANR	193011	CallExpression	zend_string_hash_val ( key )		192986	1					
ANR	193012	Callee	zend_string_hash_val		192986	0					
ANR	193013	Identifier	zend_string_hash_val		192986	0					
ANR	193014	ArgumentList	key		192986	1					
ANR	193015	Argument	key		192986	0					
ANR	193016	Identifier	key		192986	0					
ANR	193017	ExpressionStatement	arData = ht -> arData	470:1:14467:14486	192986	5	True				
ANR	193018	AssignmentExpression	arData = ht -> arData		192986	0		=			
ANR	193019	Identifier	arData		192986	0					
ANR	193020	PtrMemberAccess	ht -> arData		192986	1					
ANR	193021	Identifier	ht		192986	0					
ANR	193022	Identifier	arData		192986	1					
ANR	193023	ExpressionStatement	nIndex = h | ht -> nTableMask	471:1:14489:14516	192986	6	True				
ANR	193024	AssignmentExpression	nIndex = h | ht -> nTableMask		192986	0		=			
ANR	193025	Identifier	nIndex		192986	0					
ANR	193026	InclusiveOrExpression	h | ht -> nTableMask		192986	1		|			
ANR	193027	Identifier	h		192986	0					
ANR	193028	PtrMemberAccess	ht -> nTableMask		192986	1					
ANR	193029	Identifier	ht		192986	0					
ANR	193030	Identifier	nTableMask		192986	1					
ANR	193031	ExpressionStatement	"idx = HT_HASH_EX ( arData , nIndex )"	472:1:14519:14551	192986	7	True				
ANR	193032	AssignmentExpression	"idx = HT_HASH_EX ( arData , nIndex )"		192986	0		=			
ANR	193033	Identifier	idx		192986	0					
ANR	193034	CallExpression	"HT_HASH_EX ( arData , nIndex )"		192986	1					
ANR	193035	Callee	HT_HASH_EX		192986	0					
ANR	193036	Identifier	HT_HASH_EX		192986	0					
ANR	193037	ArgumentList	arData		192986	1					
ANR	193038	Argument	arData		192986	0					
ANR	193039	Identifier	arData		192986	0					
ANR	193040	Argument	nIndex		192986	1					
ANR	193041	Identifier	nIndex		192986	0					
ANR	193042	WhileStatement	while ( EXPECTED ( idx != HT_INVALID_IDX ) )		192986	8					
ANR	193043	Condition	EXPECTED ( idx != HT_INVALID_IDX )	473:8:14561:14591	192986	0	True				
ANR	193044	CallExpression	EXPECTED ( idx != HT_INVALID_IDX )		192986	0					
ANR	193045	Callee	EXPECTED		192986	0					
ANR	193046	Identifier	EXPECTED		192986	0					
ANR	193047	ArgumentList	idx != HT_INVALID_IDX		192986	1					
ANR	193048	Argument	idx != HT_INVALID_IDX		192986	0					
ANR	193049	EqualityExpression	idx != HT_INVALID_IDX		192986	0		!=			
ANR	193050	Identifier	idx		192986	0					
ANR	193051	Identifier	HT_INVALID_IDX		192986	1					
ANR	193052	CompoundStatement		11:41:231:231	192986	1					
ANR	193053	ExpressionStatement	"p = HT_HASH_TO_BUCKET_EX ( arData , idx )"	474:2:14598:14635	192986	0	True				
ANR	193054	AssignmentExpression	"p = HT_HASH_TO_BUCKET_EX ( arData , idx )"		192986	0		=			
ANR	193055	Identifier	p		192986	0					
ANR	193056	CallExpression	"HT_HASH_TO_BUCKET_EX ( arData , idx )"		192986	1					
ANR	193057	Callee	HT_HASH_TO_BUCKET_EX		192986	0					
ANR	193058	Identifier	HT_HASH_TO_BUCKET_EX		192986	0					
ANR	193059	ArgumentList	arData		192986	1					
ANR	193060	Argument	arData		192986	0					
ANR	193061	Identifier	arData		192986	0					
ANR	193062	Argument	idx		192986	1					
ANR	193063	Identifier	idx		192986	0					
ANR	193064	IfStatement	if ( EXPECTED ( p -> key == key ) )		192986	1					
ANR	193065	Condition	EXPECTED ( p -> key == key )	475:6:14643:14665	192986	0	True				
ANR	193066	CallExpression	EXPECTED ( p -> key == key )		192986	0					
ANR	193067	Callee	EXPECTED		192986	0					
ANR	193068	Identifier	EXPECTED		192986	0					
ANR	193069	ArgumentList	p -> key == key		192986	1					
ANR	193070	Argument	p -> key == key		192986	0					
ANR	193071	EqualityExpression	p -> key == key		192986	0		==			
ANR	193072	PtrMemberAccess	p -> key		192986	0					
ANR	193073	Identifier	p		192986	0					
ANR	193074	Identifier	key		192986	1					
ANR	193075	Identifier	key		192986	1					
ANR	193076	CompoundStatement		13:31:305:305	192986	1					
ANR	193077	ReturnStatement	return p ;	476:3:14714:14722	192986	0	True				
ANR	193078	Identifier	p		192986	0					
ANR	193079	ElseStatement	else		192986	0					
ANR	193080	IfStatement	"if ( EXPECTED ( p -> h == h ) && EXPECTED ( p -> key ) && EXPECTED ( ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key ) ) && EXPECTED ( memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0 ) )"		192986	0					
ANR	193081	Condition	"EXPECTED ( p -> h == h ) && EXPECTED ( p -> key ) && EXPECTED ( ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key ) ) && EXPECTED ( memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0 )"	477:13:14737:14916	192986	0	True				
ANR	193082	AndExpression	"EXPECTED ( p -> h == h ) && EXPECTED ( p -> key ) && EXPECTED ( ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key ) ) && EXPECTED ( memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0 )"		192986	0		&&			
ANR	193083	CallExpression	EXPECTED ( p -> h == h )		192986	0					
ANR	193084	Callee	EXPECTED		192986	0					
ANR	193085	Identifier	EXPECTED		192986	0					
ANR	193086	ArgumentList	p -> h == h		192986	1					
ANR	193087	Argument	p -> h == h		192986	0					
ANR	193088	EqualityExpression	p -> h == h		192986	0		==			
ANR	193089	PtrMemberAccess	p -> h		192986	0					
ANR	193090	Identifier	p		192986	0					
ANR	193091	Identifier	h		192986	1					
ANR	193092	Identifier	h		192986	1					
ANR	193093	AndExpression	"EXPECTED ( p -> key ) && EXPECTED ( ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key ) ) && EXPECTED ( memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0 )"		192986	1		&&			
ANR	193094	CallExpression	EXPECTED ( p -> key )		192986	0					
ANR	193095	Callee	EXPECTED		192986	0					
ANR	193096	Identifier	EXPECTED		192986	0					
ANR	193097	ArgumentList	p -> key		192986	1					
ANR	193098	Argument	p -> key		192986	0					
ANR	193099	PtrMemberAccess	p -> key		192986	0					
ANR	193100	Identifier	p		192986	0					
ANR	193101	Identifier	key		192986	1					
ANR	193102	AndExpression	"EXPECTED ( ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key ) ) && EXPECTED ( memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0 )"		192986	1		&&			
ANR	193103	CallExpression	EXPECTED ( ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key ) )		192986	0					
ANR	193104	Callee	EXPECTED		192986	0					
ANR	193105	Identifier	EXPECTED		192986	0					
ANR	193106	ArgumentList	ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key )		192986	1					
ANR	193107	Argument	ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key )		192986	0					
ANR	193108	EqualityExpression	ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key )		192986	0		==			
ANR	193109	CallExpression	ZSTR_LEN ( p -> key )		192986	0					
ANR	193110	Callee	ZSTR_LEN		192986	0					
ANR	193111	Identifier	ZSTR_LEN		192986	0					
ANR	193112	ArgumentList	p -> key		192986	1					
ANR	193113	Argument	p -> key		192986	0					
ANR	193114	PtrMemberAccess	p -> key		192986	0					
ANR	193115	Identifier	p		192986	0					
ANR	193116	Identifier	key		192986	1					
ANR	193117	CallExpression	ZSTR_LEN ( key )		192986	1					
ANR	193118	Callee	ZSTR_LEN		192986	0					
ANR	193119	Identifier	ZSTR_LEN		192986	0					
ANR	193120	ArgumentList	key		192986	1					
ANR	193121	Argument	key		192986	0					
ANR	193122	Identifier	key		192986	0					
ANR	193123	CallExpression	"EXPECTED ( memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0 )"		192986	1					
ANR	193124	Callee	EXPECTED		192986	0					
ANR	193125	Identifier	EXPECTED		192986	0					
ANR	193126	ArgumentList	"memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0"		192986	1					
ANR	193127	Argument	"memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0"		192986	0					
ANR	193128	EqualityExpression	"memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0"		192986	0		==			
ANR	193129	CallExpression	"memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) )"		192986	0					
ANR	193130	Callee	memcmp		192986	0					
ANR	193131	Identifier	memcmp		192986	0					
ANR	193132	ArgumentList	ZSTR_VAL ( p -> key )		192986	1					
ANR	193133	Argument	ZSTR_VAL ( p -> key )		192986	0					
ANR	193134	CallExpression	ZSTR_VAL ( p -> key )		192986	0					
ANR	193135	Callee	ZSTR_VAL		192986	0					
ANR	193136	Identifier	ZSTR_VAL		192986	0					
ANR	193137	ArgumentList	p -> key		192986	1					
ANR	193138	Argument	p -> key		192986	0					
ANR	193139	PtrMemberAccess	p -> key		192986	0					
ANR	193140	Identifier	p		192986	0					
ANR	193141	Identifier	key		192986	1					
ANR	193142	Argument	ZSTR_VAL ( key )		192986	1					
ANR	193143	CallExpression	ZSTR_VAL ( key )		192986	0					
ANR	193144	Callee	ZSTR_VAL		192986	0					
ANR	193145	Identifier	ZSTR_VAL		192986	0					
ANR	193146	ArgumentList	key		192986	1					
ANR	193147	Argument	key		192986	0					
ANR	193148	Identifier	key		192986	0					
ANR	193149	Argument	ZSTR_LEN ( key )		192986	2					
ANR	193150	CallExpression	ZSTR_LEN ( key )		192986	0					
ANR	193151	Callee	ZSTR_LEN		192986	0					
ANR	193152	Identifier	ZSTR_LEN		192986	0					
ANR	193153	ArgumentList	key		192986	1					
ANR	193154	Argument	key		192986	0					
ANR	193155	Identifier	key		192986	0					
ANR	193156	PrimaryExpression	0		192986	1					
ANR	193157	CompoundStatement		18:78:556:556	192986	1					
ANR	193158	ReturnStatement	return p ;	481:3:14924:14932	192986	0	True				
ANR	193159	Identifier	p		192986	0					
ANR	193160	ExpressionStatement	idx = Z_NEXT ( p -> val )	483:2:14940:14960	192986	2	True				
ANR	193161	AssignmentExpression	idx = Z_NEXT ( p -> val )		192986	0		=			
ANR	193162	Identifier	idx		192986	0					
ANR	193163	CallExpression	Z_NEXT ( p -> val )		192986	1					
ANR	193164	Callee	Z_NEXT		192986	0					
ANR	193165	Identifier	Z_NEXT		192986	0					
ANR	193166	ArgumentList	p -> val		192986	1					
ANR	193167	Argument	p -> val		192986	0					
ANR	193168	PtrMemberAccess	p -> val		192986	0					
ANR	193169	Identifier	p		192986	0					
ANR	193170	Identifier	val		192986	1					
ANR	193171	ReturnStatement	return NULL ;	485:1:14966:14977	192986	9	True				
ANR	193172	Identifier	NULL		192986	0					
ANR	193173	ReturnType	static zend_always_inline Bucket *		192986	1					
ANR	193174	Identifier	zend_hash_find_bucket		192986	2					
ANR	193175	ParameterList	"const HashTable * ht , zend_string * key"		192986	3					
ANR	193176	Parameter	const HashTable * ht	462:56:14323:14341	192986	0	True				
ANR	193177	ParameterType	const HashTable *		192986	0					
ANR	193178	Identifier	ht		192986	1					
ANR	193179	Parameter	zend_string * key	462:77:14344:14359	192986	1	True				
ANR	193180	ParameterType	zend_string *		192986	0					
ANR	193181	Identifier	key		192986	1					
ANR	193182	CFGEntryNode	ENTRY		192986		True				
ANR	193183	CFGExitNode	EXIT		192986		True				
ANR	193184	Symbol	HT_INVALID_IDX		192986						
ANR	193185	Symbol	NULL		192986						
ANR	193186	Symbol	ht -> nTableMask		192986						
ANR	193187	Symbol	h		192986						
ANR	193188	Symbol	nIndex		192986						
ANR	193189	Symbol	ht -> arData		192986						
ANR	193190	Symbol	Z_NEXT		192986						
ANR	193191	Symbol	ht		192986						
ANR	193192	Symbol	p -> val		192986						
ANR	193193	Symbol	p -> key		192986						
ANR	193194	Symbol	ZSTR_VAL		192986						
ANR	193195	Symbol	p		192986						
ANR	193196	Symbol	* ht		192986						
ANR	193197	Symbol	memcmp		192986						
ANR	193198	Symbol	arData		192986						
ANR	193199	Symbol	HT_HASH_TO_BUCKET_EX		192986						
ANR	193200	Symbol	ZSTR_LEN		192986						
ANR	193201	Symbol	zend_string_hash_val		192986						
ANR	193202	Symbol	HT_HASH_EX		192986						
ANR	193203	Symbol	* p		192986						
ANR	193204	Symbol	idx		192986						
ANR	193205	Symbol	EXPECTED		192986						
ANR	193206	Symbol	key		192986						
ANR	193207	Symbol	p -> h		192986						
ANR	193208	Function	zend_hash_str_find_bucket	488:0:14982:15546							
ANR	193209	FunctionDef	"zend_hash_str_find_bucket (const HashTable * ht , const char * str , size_t len , zend_ulong h)"		193208	0					
ANR	193210	CompoundStatement		489:0:15106:15546	193208	0					
ANR	193211	IdentifierDeclStatement	uint32_t nIndex ;	490:1:15109:15124	193208	0	True				
ANR	193212	IdentifierDecl	nIndex		193208	0					
ANR	193213	IdentifierDeclType	uint32_t		193208	0					
ANR	193214	Identifier	nIndex		193208	1					
ANR	193215	IdentifierDeclStatement	uint32_t idx ;	491:1:15127:15139	193208	1	True				
ANR	193216	IdentifierDecl	idx		193208	0					
ANR	193217	IdentifierDeclType	uint32_t		193208	0					
ANR	193218	Identifier	idx		193208	1					
ANR	193219	IdentifierDeclStatement	"Bucket * p , * arData ;"	492:1:15142:15160	193208	2	True				
ANR	193220	IdentifierDecl	* p		193208	0					
ANR	193221	IdentifierDeclType	Bucket *		193208	0					
ANR	193222	Identifier	p		193208	1					
ANR	193223	IdentifierDecl	* arData		193208	1					
ANR	193224	IdentifierDeclType	Bucket *		193208	0					
ANR	193225	Identifier	arData		193208	1					
ANR	193226	ExpressionStatement	arData = ht -> arData	494:1:15164:15183	193208	3	True				
ANR	193227	AssignmentExpression	arData = ht -> arData		193208	0		=			
ANR	193228	Identifier	arData		193208	0					
ANR	193229	PtrMemberAccess	ht -> arData		193208	1					
ANR	193230	Identifier	ht		193208	0					
ANR	193231	Identifier	arData		193208	1					
ANR	193232	ExpressionStatement	nIndex = h | ht -> nTableMask	495:1:15186:15213	193208	4	True				
ANR	193233	AssignmentExpression	nIndex = h | ht -> nTableMask		193208	0		=			
ANR	193234	Identifier	nIndex		193208	0					
ANR	193235	InclusiveOrExpression	h | ht -> nTableMask		193208	1		|			
ANR	193236	Identifier	h		193208	0					
ANR	193237	PtrMemberAccess	ht -> nTableMask		193208	1					
ANR	193238	Identifier	ht		193208	0					
ANR	193239	Identifier	nTableMask		193208	1					
ANR	193240	ExpressionStatement	"idx = HT_HASH_EX ( arData , nIndex )"	496:1:15216:15248	193208	5	True				
ANR	193241	AssignmentExpression	"idx = HT_HASH_EX ( arData , nIndex )"		193208	0		=			
ANR	193242	Identifier	idx		193208	0					
ANR	193243	CallExpression	"HT_HASH_EX ( arData , nIndex )"		193208	1					
ANR	193244	Callee	HT_HASH_EX		193208	0					
ANR	193245	Identifier	HT_HASH_EX		193208	0					
ANR	193246	ArgumentList	arData		193208	1					
ANR	193247	Argument	arData		193208	0					
ANR	193248	Identifier	arData		193208	0					
ANR	193249	Argument	nIndex		193208	1					
ANR	193250	Identifier	nIndex		193208	0					
ANR	193251	WhileStatement	while ( idx != HT_INVALID_IDX )		193208	6					
ANR	193252	Condition	idx != HT_INVALID_IDX	497:8:15258:15278	193208	0	True				
ANR	193253	EqualityExpression	idx != HT_INVALID_IDX		193208	0		!=			
ANR	193254	Identifier	idx		193208	0					
ANR	193255	Identifier	HT_INVALID_IDX		193208	1					
ANR	193256	CompoundStatement		9:31:174:174	193208	1					
ANR	193257	ExpressionStatement	ZEND_ASSERT ( idx < HT_IDX_TO_HASH ( ht -> nTableSize ) )	498:2:15285:15334	193208	0	True				
ANR	193258	CallExpression	ZEND_ASSERT ( idx < HT_IDX_TO_HASH ( ht -> nTableSize ) )		193208	0					
ANR	193259	Callee	ZEND_ASSERT		193208	0					
ANR	193260	Identifier	ZEND_ASSERT		193208	0					
ANR	193261	ArgumentList	idx < HT_IDX_TO_HASH ( ht -> nTableSize )		193208	1					
ANR	193262	Argument	idx < HT_IDX_TO_HASH ( ht -> nTableSize )		193208	0					
ANR	193263	RelationalExpression	idx < HT_IDX_TO_HASH ( ht -> nTableSize )		193208	0		<			
ANR	193264	Identifier	idx		193208	0					
ANR	193265	CallExpression	HT_IDX_TO_HASH ( ht -> nTableSize )		193208	1					
ANR	193266	Callee	HT_IDX_TO_HASH		193208	0					
ANR	193267	Identifier	HT_IDX_TO_HASH		193208	0					
ANR	193268	ArgumentList	ht -> nTableSize		193208	1					
ANR	193269	Argument	ht -> nTableSize		193208	0					
ANR	193270	PtrMemberAccess	ht -> nTableSize		193208	0					
ANR	193271	Identifier	ht		193208	0					
ANR	193272	Identifier	nTableSize		193208	1					
ANR	193273	ExpressionStatement	"p = HT_HASH_TO_BUCKET_EX ( arData , idx )"	499:2:15338:15375	193208	1	True				
ANR	193274	AssignmentExpression	"p = HT_HASH_TO_BUCKET_EX ( arData , idx )"		193208	0		=			
ANR	193275	Identifier	p		193208	0					
ANR	193276	CallExpression	"HT_HASH_TO_BUCKET_EX ( arData , idx )"		193208	1					
ANR	193277	Callee	HT_HASH_TO_BUCKET_EX		193208	0					
ANR	193278	Identifier	HT_HASH_TO_BUCKET_EX		193208	0					
ANR	193279	ArgumentList	arData		193208	1					
ANR	193280	Argument	arData		193208	0					
ANR	193281	Identifier	arData		193208	0					
ANR	193282	Argument	idx		193208	1					
ANR	193283	Identifier	idx		193208	0					
ANR	193284	IfStatement	"if ( ( p -> h == h ) && p -> key && ( ZSTR_LEN ( p -> key ) == len ) && ! memcmp ( ZSTR_VAL ( p -> key ) , str , len ) )"		193208	2					
ANR	193285	Condition	"( p -> h == h ) && p -> key && ( ZSTR_LEN ( p -> key ) == len ) && ! memcmp ( ZSTR_VAL ( p -> key ) , str , len )"	500:6:15383:15483	193208	0	True				
ANR	193286	AndExpression	"( p -> h == h ) && p -> key && ( ZSTR_LEN ( p -> key ) == len ) && ! memcmp ( ZSTR_VAL ( p -> key ) , str , len )"		193208	0		&&			
ANR	193287	EqualityExpression	p -> h == h		193208	0		==			
ANR	193288	PtrMemberAccess	p -> h		193208	0					
ANR	193289	Identifier	p		193208	0					
ANR	193290	Identifier	h		193208	1					
ANR	193291	Identifier	h		193208	1					
ANR	193292	AndExpression	"p -> key && ( ZSTR_LEN ( p -> key ) == len ) && ! memcmp ( ZSTR_VAL ( p -> key ) , str , len )"		193208	1		&&			
ANR	193293	PtrMemberAccess	p -> key		193208	0					
ANR	193294	Identifier	p		193208	0					
ANR	193295	Identifier	key		193208	1					
ANR	193296	AndExpression	"( ZSTR_LEN ( p -> key ) == len ) && ! memcmp ( ZSTR_VAL ( p -> key ) , str , len )"		193208	1		&&			
ANR	193297	EqualityExpression	ZSTR_LEN ( p -> key ) == len		193208	0		==			
ANR	193298	CallExpression	ZSTR_LEN ( p -> key )		193208	0					
ANR	193299	Callee	ZSTR_LEN		193208	0					
ANR	193300	Identifier	ZSTR_LEN		193208	0					
ANR	193301	ArgumentList	p -> key		193208	1					
ANR	193302	Argument	p -> key		193208	0					
ANR	193303	PtrMemberAccess	p -> key		193208	0					
ANR	193304	Identifier	p		193208	0					
ANR	193305	Identifier	key		193208	1					
ANR	193306	Identifier	len		193208	1					
ANR	193307	UnaryOperationExpression	"! memcmp ( ZSTR_VAL ( p -> key ) , str , len )"		193208	1					
ANR	193308	UnaryOperator	!		193208	0					
ANR	193309	CallExpression	"memcmp ( ZSTR_VAL ( p -> key ) , str , len )"		193208	1					
ANR	193310	Callee	memcmp		193208	0					
ANR	193311	Identifier	memcmp		193208	0					
ANR	193312	ArgumentList	ZSTR_VAL ( p -> key )		193208	1					
ANR	193313	Argument	ZSTR_VAL ( p -> key )		193208	0					
ANR	193314	CallExpression	ZSTR_VAL ( p -> key )		193208	0					
ANR	193315	Callee	ZSTR_VAL		193208	0					
ANR	193316	Identifier	ZSTR_VAL		193208	0					
ANR	193317	ArgumentList	p -> key		193208	1					
ANR	193318	Argument	p -> key		193208	0					
ANR	193319	PtrMemberAccess	p -> key		193208	0					
ANR	193320	Identifier	p		193208	0					
ANR	193321	Identifier	key		193208	1					
ANR	193322	Argument	str		193208	1					
ANR	193323	Identifier	str		193208	0					
ANR	193324	Argument	len		193208	2					
ANR	193325	Identifier	len		193208	0					
ANR	193326	CompoundStatement		15:44:379:379	193208	1					
ANR	193327	ReturnStatement	return p ;	504:3:15491:15499	193208	0	True				
ANR	193328	Identifier	p		193208	0					
ANR	193329	ExpressionStatement	idx = Z_NEXT ( p -> val )	506:2:15507:15527	193208	3	True				
ANR	193330	AssignmentExpression	idx = Z_NEXT ( p -> val )		193208	0		=			
ANR	193331	Identifier	idx		193208	0					
ANR	193332	CallExpression	Z_NEXT ( p -> val )		193208	1					
ANR	193333	Callee	Z_NEXT		193208	0					
ANR	193334	Identifier	Z_NEXT		193208	0					
ANR	193335	ArgumentList	p -> val		193208	1					
ANR	193336	Argument	p -> val		193208	0					
ANR	193337	PtrMemberAccess	p -> val		193208	0					
ANR	193338	Identifier	p		193208	0					
ANR	193339	Identifier	val		193208	1					
ANR	193340	ReturnStatement	return NULL ;	508:1:15533:15544	193208	7	True				
ANR	193341	Identifier	NULL		193208	0					
ANR	193342	ReturnType	static zend_always_inline Bucket *		193208	1					
ANR	193343	Identifier	zend_hash_str_find_bucket		193208	2					
ANR	193344	ParameterList	"const HashTable * ht , const char * str , size_t len , zend_ulong h"		193208	3					
ANR	193345	Parameter	const HashTable * ht	488:60:15042:15060	193208	0	True				
ANR	193346	ParameterType	const HashTable *		193208	0					
ANR	193347	Identifier	ht		193208	1					
ANR	193348	Parameter	const char * str	488:81:15063:15077	193208	1	True				
ANR	193349	ParameterType	const char *		193208	0					
ANR	193350	Identifier	str		193208	1					
ANR	193351	Parameter	size_t len	488:98:15080:15089	193208	2	True				
ANR	193352	ParameterType	size_t		193208	0					
ANR	193353	Identifier	len		193208	1					
ANR	193354	Parameter	zend_ulong h	488:110:15092:15103	193208	3	True				
ANR	193355	ParameterType	zend_ulong		193208	0					
ANR	193356	Identifier	h		193208	1					
ANR	193357	CFGEntryNode	ENTRY		193208		True				
ANR	193358	CFGExitNode	EXIT		193208		True				
ANR	193359	Symbol	ht -> nTableMask		193208						
ANR	193360	Symbol	ht -> arData		193208						
ANR	193361	Symbol	Z_NEXT		193208						
ANR	193362	Symbol	ht		193208						
ANR	193363	Symbol	* ht		193208						
ANR	193364	Symbol	memcmp		193208						
ANR	193365	Symbol	len		193208						
ANR	193366	Symbol	arData		193208						
ANR	193367	Symbol	ht -> nTableSize		193208						
ANR	193368	Symbol	HT_HASH_EX		193208						
ANR	193369	Symbol	p -> h		193208						
ANR	193370	Symbol	HT_INVALID_IDX		193208						
ANR	193371	Symbol	NULL		193208						
ANR	193372	Symbol	h		193208						
ANR	193373	Symbol	nIndex		193208						
ANR	193374	Symbol	HT_IDX_TO_HASH		193208						
ANR	193375	Symbol	p -> val		193208						
ANR	193376	Symbol	p -> key		193208						
ANR	193377	Symbol	ZSTR_VAL		193208						
ANR	193378	Symbol	str		193208						
ANR	193379	Symbol	p		193208						
ANR	193380	Symbol	HT_HASH_TO_BUCKET_EX		193208						
ANR	193381	Symbol	ZSTR_LEN		193208						
ANR	193382	Symbol	* p		193208						
ANR	193383	Symbol	idx		193208						
ANR	193384	Function	zend_hash_index_find_bucket	511:0:15549:16005							
ANR	193385	FunctionDef	"zend_hash_index_find_bucket (const HashTable * ht , zend_ulong h)"		193384	0					
ANR	193386	CompoundStatement		512:0:15646:16005	193384	0					
ANR	193387	IdentifierDeclStatement	uint32_t nIndex ;	513:1:15649:15664	193384	0	True				
ANR	193388	IdentifierDecl	nIndex		193384	0					
ANR	193389	IdentifierDeclType	uint32_t		193384	0					
ANR	193390	Identifier	nIndex		193384	1					
ANR	193391	IdentifierDeclStatement	uint32_t idx ;	514:1:15667:15679	193384	1	True				
ANR	193392	IdentifierDecl	idx		193384	0					
ANR	193393	IdentifierDeclType	uint32_t		193384	0					
ANR	193394	Identifier	idx		193384	1					
ANR	193395	IdentifierDeclStatement	"Bucket * p , * arData ;"	515:1:15682:15700	193384	2	True				
ANR	193396	IdentifierDecl	* p		193384	0					
ANR	193397	IdentifierDeclType	Bucket *		193384	0					
ANR	193398	Identifier	p		193384	1					
ANR	193399	IdentifierDecl	* arData		193384	1					
ANR	193400	IdentifierDeclType	Bucket *		193384	0					
ANR	193401	Identifier	arData		193384	1					
ANR	193402	ExpressionStatement	arData = ht -> arData	517:1:15704:15723	193384	3	True				
ANR	193403	AssignmentExpression	arData = ht -> arData		193384	0		=			
ANR	193404	Identifier	arData		193384	0					
ANR	193405	PtrMemberAccess	ht -> arData		193384	1					
ANR	193406	Identifier	ht		193384	0					
ANR	193407	Identifier	arData		193384	1					
ANR	193408	ExpressionStatement	nIndex = h | ht -> nTableMask	518:1:15726:15753	193384	4	True				
ANR	193409	AssignmentExpression	nIndex = h | ht -> nTableMask		193384	0		=			
ANR	193410	Identifier	nIndex		193384	0					
ANR	193411	InclusiveOrExpression	h | ht -> nTableMask		193384	1		|			
ANR	193412	Identifier	h		193384	0					
ANR	193413	PtrMemberAccess	ht -> nTableMask		193384	1					
ANR	193414	Identifier	ht		193384	0					
ANR	193415	Identifier	nTableMask		193384	1					
ANR	193416	ExpressionStatement	"idx = HT_HASH_EX ( arData , nIndex )"	519:1:15756:15788	193384	5	True				
ANR	193417	AssignmentExpression	"idx = HT_HASH_EX ( arData , nIndex )"		193384	0		=			
ANR	193418	Identifier	idx		193384	0					
ANR	193419	CallExpression	"HT_HASH_EX ( arData , nIndex )"		193384	1					
ANR	193420	Callee	HT_HASH_EX		193384	0					
ANR	193421	Identifier	HT_HASH_EX		193384	0					
ANR	193422	ArgumentList	arData		193384	1					
ANR	193423	Argument	arData		193384	0					
ANR	193424	Identifier	arData		193384	0					
ANR	193425	Argument	nIndex		193384	1					
ANR	193426	Identifier	nIndex		193384	0					
ANR	193427	WhileStatement	while ( idx != HT_INVALID_IDX )		193384	6					
ANR	193428	Condition	idx != HT_INVALID_IDX	520:8:15798:15818	193384	0	True				
ANR	193429	EqualityExpression	idx != HT_INVALID_IDX		193384	0		!=			
ANR	193430	Identifier	idx		193384	0					
ANR	193431	Identifier	HT_INVALID_IDX		193384	1					
ANR	193432	CompoundStatement		9:31:174:174	193384	1					
ANR	193433	ExpressionStatement	ZEND_ASSERT ( idx < HT_IDX_TO_HASH ( ht -> nTableSize ) )	521:2:15825:15874	193384	0	True				
ANR	193434	CallExpression	ZEND_ASSERT ( idx < HT_IDX_TO_HASH ( ht -> nTableSize ) )		193384	0					
ANR	193435	Callee	ZEND_ASSERT		193384	0					
ANR	193436	Identifier	ZEND_ASSERT		193384	0					
ANR	193437	ArgumentList	idx < HT_IDX_TO_HASH ( ht -> nTableSize )		193384	1					
ANR	193438	Argument	idx < HT_IDX_TO_HASH ( ht -> nTableSize )		193384	0					
ANR	193439	RelationalExpression	idx < HT_IDX_TO_HASH ( ht -> nTableSize )		193384	0		<			
ANR	193440	Identifier	idx		193384	0					
ANR	193441	CallExpression	HT_IDX_TO_HASH ( ht -> nTableSize )		193384	1					
ANR	193442	Callee	HT_IDX_TO_HASH		193384	0					
ANR	193443	Identifier	HT_IDX_TO_HASH		193384	0					
ANR	193444	ArgumentList	ht -> nTableSize		193384	1					
ANR	193445	Argument	ht -> nTableSize		193384	0					
ANR	193446	PtrMemberAccess	ht -> nTableSize		193384	0					
ANR	193447	Identifier	ht		193384	0					
ANR	193448	Identifier	nTableSize		193384	1					
ANR	193449	ExpressionStatement	"p = HT_HASH_TO_BUCKET_EX ( arData , idx )"	522:2:15878:15915	193384	1	True				
ANR	193450	AssignmentExpression	"p = HT_HASH_TO_BUCKET_EX ( arData , idx )"		193384	0		=			
ANR	193451	Identifier	p		193384	0					
ANR	193452	CallExpression	"HT_HASH_TO_BUCKET_EX ( arData , idx )"		193384	1					
ANR	193453	Callee	HT_HASH_TO_BUCKET_EX		193384	0					
ANR	193454	Identifier	HT_HASH_TO_BUCKET_EX		193384	0					
ANR	193455	ArgumentList	arData		193384	1					
ANR	193456	Argument	arData		193384	0					
ANR	193457	Identifier	arData		193384	0					
ANR	193458	Argument	idx		193384	1					
ANR	193459	Identifier	idx		193384	0					
ANR	193460	IfStatement	if ( p -> h == h && ! p -> key )		193384	2					
ANR	193461	Condition	p -> h == h && ! p -> key	523:6:15923:15942	193384	0	True				
ANR	193462	AndExpression	p -> h == h && ! p -> key		193384	0		&&			
ANR	193463	EqualityExpression	p -> h == h		193384	0		==			
ANR	193464	PtrMemberAccess	p -> h		193384	0					
ANR	193465	Identifier	p		193384	0					
ANR	193466	Identifier	h		193384	1					
ANR	193467	Identifier	h		193384	1					
ANR	193468	UnaryOperationExpression	! p -> key		193384	1					
ANR	193469	UnaryOperator	!		193384	0					
ANR	193470	PtrMemberAccess	p -> key		193384	1					
ANR	193471	Identifier	p		193384	0					
ANR	193472	Identifier	key		193384	1					
ANR	193473	CompoundStatement		12:28:298:298	193384	1					
ANR	193474	ReturnStatement	return p ;	524:3:15950:15958	193384	0	True				
ANR	193475	Identifier	p		193384	0					
ANR	193476	ExpressionStatement	idx = Z_NEXT ( p -> val )	526:2:15966:15986	193384	3	True				
ANR	193477	AssignmentExpression	idx = Z_NEXT ( p -> val )		193384	0		=			
ANR	193478	Identifier	idx		193384	0					
ANR	193479	CallExpression	Z_NEXT ( p -> val )		193384	1					
ANR	193480	Callee	Z_NEXT		193384	0					
ANR	193481	Identifier	Z_NEXT		193384	0					
ANR	193482	ArgumentList	p -> val		193384	1					
ANR	193483	Argument	p -> val		193384	0					
ANR	193484	PtrMemberAccess	p -> val		193384	0					
ANR	193485	Identifier	p		193384	0					
ANR	193486	Identifier	val		193384	1					
ANR	193487	ReturnStatement	return NULL ;	528:1:15992:16003	193384	7	True				
ANR	193488	Identifier	NULL		193384	0					
ANR	193489	ReturnType	static zend_always_inline Bucket *		193384	1					
ANR	193490	Identifier	zend_hash_index_find_bucket		193384	2					
ANR	193491	ParameterList	"const HashTable * ht , zend_ulong h"		193384	3					
ANR	193492	Parameter	const HashTable * ht	511:62:15611:15629	193384	0	True				
ANR	193493	ParameterType	const HashTable *		193384	0					
ANR	193494	Identifier	ht		193384	1					
ANR	193495	Parameter	zend_ulong h	511:83:15632:15643	193384	1	True				
ANR	193496	ParameterType	zend_ulong		193384	0					
ANR	193497	Identifier	h		193384	1					
ANR	193498	CFGEntryNode	ENTRY		193384		True				
ANR	193499	CFGExitNode	EXIT		193384		True				
ANR	193500	Symbol	HT_INVALID_IDX		193384						
ANR	193501	Symbol	NULL		193384						
ANR	193502	Symbol	ht -> nTableMask		193384						
ANR	193503	Symbol	h		193384						
ANR	193504	Symbol	nIndex		193384						
ANR	193505	Symbol	ht -> arData		193384						
ANR	193506	Symbol	Z_NEXT		193384						
ANR	193507	Symbol	ht		193384						
ANR	193508	Symbol	HT_IDX_TO_HASH		193384						
ANR	193509	Symbol	p -> val		193384						
ANR	193510	Symbol	p -> key		193384						
ANR	193511	Symbol	p		193384						
ANR	193512	Symbol	* ht		193384						
ANR	193513	Symbol	arData		193384						
ANR	193514	Symbol	HT_HASH_TO_BUCKET_EX		193384						
ANR	193515	Symbol	ht -> nTableSize		193384						
ANR	193516	Symbol	HT_HASH_EX		193384						
ANR	193517	Symbol	* p		193384						
ANR	193518	Symbol	idx		193384						
ANR	193519	Symbol	p -> h		193384						
ANR	193520	Function	_zend_hash_add_or_update_i	531:0:16008:17638							
ANR	193521	FunctionDef	"_zend_hash_add_or_update_i (HashTable * ht , zend_string * key , zval * pData , uint32_t flag ZEND_FILE_LINE_DC)"		193520	0					
ANR	193522	CompoundStatement		532:0:16146:17638	193520	0					
ANR	193523	IdentifierDeclStatement	zend_ulong h ;	533:1:16149:16161	193520	0	True				
ANR	193524	IdentifierDecl	h		193520	0					
ANR	193525	IdentifierDeclType	zend_ulong		193520	0					
ANR	193526	Identifier	h		193520	1					
ANR	193527	IdentifierDeclStatement	uint32_t nIndex ;	534:1:16164:16179	193520	1	True				
ANR	193528	IdentifierDecl	nIndex		193520	0					
ANR	193529	IdentifierDeclType	uint32_t		193520	0					
ANR	193530	Identifier	nIndex		193520	1					
ANR	193531	IdentifierDeclStatement	uint32_t idx ;	535:1:16182:16194	193520	2	True				
ANR	193532	IdentifierDecl	idx		193520	0					
ANR	193533	IdentifierDeclType	uint32_t		193520	0					
ANR	193534	Identifier	idx		193520	1					
ANR	193535	IdentifierDeclStatement	Bucket * p ;	536:1:16197:16206	193520	3	True				
ANR	193536	IdentifierDecl	* p		193520	0					
ANR	193537	IdentifierDeclType	Bucket *		193520	0					
ANR	193538	Identifier	p		193520	1					
ANR	193539	ExpressionStatement	IS_CONSISTENT ( ht )	538:1:16210:16227	193520	4	True				
ANR	193540	CallExpression	IS_CONSISTENT ( ht )		193520	0					
ANR	193541	Callee	IS_CONSISTENT		193520	0					
ANR	193542	Identifier	IS_CONSISTENT		193520	0					
ANR	193543	ArgumentList	ht		193520	1					
ANR	193544	Argument	ht		193520	0					
ANR	193545	Identifier	ht		193520	0					
ANR	193546	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	539:1:16230:16261	193520	5	True				
ANR	193547	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		193520	0					
ANR	193548	Callee	HT_ASSERT		193520	0					
ANR	193549	Identifier	HT_ASSERT		193520	0					
ANR	193550	ArgumentList	GC_REFCOUNT ( ht ) == 1		193520	1					
ANR	193551	Argument	GC_REFCOUNT ( ht ) == 1		193520	0					
ANR	193552	EqualityExpression	GC_REFCOUNT ( ht ) == 1		193520	0		==			
ANR	193553	CallExpression	GC_REFCOUNT ( ht )		193520	0					
ANR	193554	Callee	GC_REFCOUNT		193520	0					
ANR	193555	Identifier	GC_REFCOUNT		193520	0					
ANR	193556	ArgumentList	ht		193520	1					
ANR	193557	Argument	ht		193520	0					
ANR	193558	Identifier	ht		193520	0					
ANR	193559	PrimaryExpression	1		193520	1					
ANR	193560	IfStatement	if ( UNEXPECTED ( ! ( ht -> u . flags & HASH_FLAG_INITIALIZED ) ) )		193520	6					
ANR	193561	Condition	UNEXPECTED ( ! ( ht -> u . flags & HASH_FLAG_INITIALIZED ) )	541:5:16269:16318	193520	0	True				
ANR	193562	CallExpression	UNEXPECTED ( ! ( ht -> u . flags & HASH_FLAG_INITIALIZED ) )		193520	0					
ANR	193563	Callee	UNEXPECTED		193520	0					
ANR	193564	Identifier	UNEXPECTED		193520	0					
ANR	193565	ArgumentList	! ( ht -> u . flags & HASH_FLAG_INITIALIZED )		193520	1					
ANR	193566	Argument	! ( ht -> u . flags & HASH_FLAG_INITIALIZED )		193520	0					
ANR	193567	UnaryOperationExpression	! ( ht -> u . flags & HASH_FLAG_INITIALIZED )		193520	0					
ANR	193568	UnaryOperator	!		193520	0					
ANR	193569	BitAndExpression	ht -> u . flags & HASH_FLAG_INITIALIZED		193520	1		&			
ANR	193570	MemberAccess	ht -> u . flags		193520	0					
ANR	193571	PtrMemberAccess	ht -> u		193520	0					
ANR	193572	Identifier	ht		193520	0					
ANR	193573	Identifier	u		193520	1					
ANR	193574	Identifier	flags		193520	1					
ANR	193575	Identifier	HASH_FLAG_INITIALIZED		193520	1					
ANR	193576	CompoundStatement		10:57:174:174	193520	1					
ANR	193577	ExpressionStatement	"CHECK_INIT ( ht , 0 )"	542:2:16325:16342	193520	0	True				
ANR	193578	CallExpression	"CHECK_INIT ( ht , 0 )"		193520	0					
ANR	193579	Callee	CHECK_INIT		193520	0					
ANR	193580	Identifier	CHECK_INIT		193520	0					
ANR	193581	ArgumentList	ht		193520	1					
ANR	193582	Argument	ht		193520	0					
ANR	193583	Identifier	ht		193520	0					
ANR	193584	Argument	0		193520	1					
ANR	193585	PrimaryExpression	0		193520	0					
ANR	193586	GotoStatement	goto add_to_hash ;	543:2:16346:16362	193520	1	True				
ANR	193587	Identifier	add_to_hash		193520	0					
ANR	193588	ElseStatement	else		193520	0					
ANR	193589	IfStatement	if ( ht -> u . flags & HASH_FLAG_PACKED )		193520	0					
ANR	193590	Condition	ht -> u . flags & HASH_FLAG_PACKED	544:12:16376:16405	193520	0	True				
ANR	193591	BitAndExpression	ht -> u . flags & HASH_FLAG_PACKED		193520	0		&			
ANR	193592	MemberAccess	ht -> u . flags		193520	0					
ANR	193593	PtrMemberAccess	ht -> u		193520	0					
ANR	193594	Identifier	ht		193520	0					
ANR	193595	Identifier	u		193520	1					
ANR	193596	Identifier	flags		193520	1					
ANR	193597	Identifier	HASH_FLAG_PACKED		193520	1					
ANR	193598	CompoundStatement		13:44:261:261	193520	1					
ANR	193599	ExpressionStatement	zend_hash_packed_to_hash ( ht )	545:2:16412:16440	193520	0	True				
ANR	193600	CallExpression	zend_hash_packed_to_hash ( ht )		193520	0					
ANR	193601	Callee	zend_hash_packed_to_hash		193520	0					
ANR	193602	Identifier	zend_hash_packed_to_hash		193520	0					
ANR	193603	ArgumentList	ht		193520	1					
ANR	193604	Argument	ht		193520	0					
ANR	193605	Identifier	ht		193520	0					
ANR	193606	ElseStatement	else		193520	0					
ANR	193607	IfStatement	if ( ( flag & HASH_ADD_NEW ) == 0 )		193520	0					
ANR	193608	Condition	( flag & HASH_ADD_NEW ) == 0	546:12:16454:16479	193520	0	True				
ANR	193609	EqualityExpression	( flag & HASH_ADD_NEW ) == 0		193520	0		==			
ANR	193610	BitAndExpression	flag & HASH_ADD_NEW		193520	0		&			
ANR	193611	Identifier	flag		193520	0					
ANR	193612	Identifier	HASH_ADD_NEW		193520	1					
ANR	193613	PrimaryExpression	0		193520	1					
ANR	193614	CompoundStatement		15:40:335:335	193520	1					
ANR	193615	ExpressionStatement	"p = zend_hash_find_bucket ( ht , key )"	547:2:16486:16520	193520	0	True				
ANR	193616	AssignmentExpression	"p = zend_hash_find_bucket ( ht , key )"		193520	0		=			
ANR	193617	Identifier	p		193520	0					
ANR	193618	CallExpression	"zend_hash_find_bucket ( ht , key )"		193520	1					
ANR	193619	Callee	zend_hash_find_bucket		193520	0					
ANR	193620	Identifier	zend_hash_find_bucket		193520	0					
ANR	193621	ArgumentList	ht		193520	1					
ANR	193622	Argument	ht		193520	0					
ANR	193623	Identifier	ht		193520	0					
ANR	193624	Argument	key		193520	1					
ANR	193625	Identifier	key		193520	0					
ANR	193626	IfStatement	if ( p )		193520	1					
ANR	193627	Condition	p	549:6:16529:16529	193520	0	True				
ANR	193628	Identifier	p		193520	0					
ANR	193629	CompoundStatement		19:3:390:400	193520	1					
ANR	193630	IdentifierDeclStatement	zval * data ;	550:3:16537:16547	193520	0	True				
ANR	193631	IdentifierDecl	* data		193520	0					
ANR	193632	IdentifierDeclType	zval *		193520	0					
ANR	193633	Identifier	data		193520	1					
ANR	193634	IfStatement	if ( flag & HASH_ADD )		193520	1					
ANR	193635	Condition	flag & HASH_ADD	552:7:16557:16571	193520	0	True				
ANR	193636	BitAndExpression	flag & HASH_ADD		193520	0		&			
ANR	193637	Identifier	flag		193520	0					
ANR	193638	Identifier	HASH_ADD		193520	1					
ANR	193639	CompoundStatement		21:24:427:427	193520	1					
ANR	193640	ReturnStatement	return NULL ;	553:4:16580:16591	193520	0	True				
ANR	193641	Identifier	NULL		193520	0					
ANR	193642	ExpressionStatement	ZEND_ASSERT ( & p -> val != pData )	555:3:16601:16630	193520	2	True				
ANR	193643	CallExpression	ZEND_ASSERT ( & p -> val != pData )		193520	0					
ANR	193644	Callee	ZEND_ASSERT		193520	0					
ANR	193645	Identifier	ZEND_ASSERT		193520	0					
ANR	193646	ArgumentList	& p -> val != pData		193520	1					
ANR	193647	Argument	& p -> val != pData		193520	0					
ANR	193648	EqualityExpression	& p -> val != pData		193520	0		!=			
ANR	193649	UnaryOperationExpression	& p -> val		193520	0					
ANR	193650	UnaryOperator	&		193520	0					
ANR	193651	PtrMemberAccess	p -> val		193520	1					
ANR	193652	Identifier	p		193520	0					
ANR	193653	Identifier	val		193520	1					
ANR	193654	Identifier	pData		193520	1					
ANR	193655	ExpressionStatement	data = & p -> val	556:3:16635:16649	193520	3	True				
ANR	193656	AssignmentExpression	data = & p -> val		193520	0		=			
ANR	193657	Identifier	data		193520	0					
ANR	193658	UnaryOperationExpression	& p -> val		193520	1					
ANR	193659	UnaryOperator	&		193520	0					
ANR	193660	PtrMemberAccess	p -> val		193520	1					
ANR	193661	Identifier	p		193520	0					
ANR	193662	Identifier	val		193520	1					
ANR	193663	IfStatement	if ( ( flag & HASH_UPDATE_INDIRECT ) && Z_TYPE_P ( data ) == IS_INDIRECT )		193520	4					
ANR	193664	Condition	( flag & HASH_UPDATE_INDIRECT ) && Z_TYPE_P ( data ) == IS_INDIRECT	557:7:16658:16719	193520	0	True				
ANR	193665	AndExpression	( flag & HASH_UPDATE_INDIRECT ) && Z_TYPE_P ( data ) == IS_INDIRECT		193520	0		&&			
ANR	193666	BitAndExpression	flag & HASH_UPDATE_INDIRECT		193520	0		&			
ANR	193667	Identifier	flag		193520	0					
ANR	193668	Identifier	HASH_UPDATE_INDIRECT		193520	1					
ANR	193669	EqualityExpression	Z_TYPE_P ( data ) == IS_INDIRECT		193520	1		==			
ANR	193670	CallExpression	Z_TYPE_P ( data )		193520	0					
ANR	193671	Callee	Z_TYPE_P		193520	0					
ANR	193672	Identifier	Z_TYPE_P		193520	0					
ANR	193673	ArgumentList	data		193520	1					
ANR	193674	Argument	data		193520	0					
ANR	193675	Identifier	data		193520	0					
ANR	193676	Identifier	IS_INDIRECT		193520	1					
ANR	193677	CompoundStatement		26:71:575:575	193520	1					
ANR	193678	ExpressionStatement	data = Z_INDIRECT_P ( data )	558:4:16728:16753	193520	0	True				
ANR	193679	AssignmentExpression	data = Z_INDIRECT_P ( data )		193520	0		=			
ANR	193680	Identifier	data		193520	0					
ANR	193681	CallExpression	Z_INDIRECT_P ( data )		193520	1					
ANR	193682	Callee	Z_INDIRECT_P		193520	0					
ANR	193683	Identifier	Z_INDIRECT_P		193520	0					
ANR	193684	ArgumentList	data		193520	1					
ANR	193685	Argument	data		193520	0					
ANR	193686	Identifier	data		193520	0					
ANR	193687	ExpressionStatement	HANDLE_BLOCK_INTERRUPTIONS ( )	560:3:16763:16791	193520	5	True				
ANR	193688	CallExpression	HANDLE_BLOCK_INTERRUPTIONS ( )		193520	0					
ANR	193689	Callee	HANDLE_BLOCK_INTERRUPTIONS		193520	0					
ANR	193690	Identifier	HANDLE_BLOCK_INTERRUPTIONS		193520	0					
ANR	193691	ArgumentList			193520	1					
ANR	193692	IfStatement	if ( ht -> pDestructor )		193520	6					
ANR	193693	Condition	ht -> pDestructor	561:7:16800:16814	193520	0	True				
ANR	193694	PtrMemberAccess	ht -> pDestructor		193520	0					
ANR	193695	Identifier	ht		193520	0					
ANR	193696	Identifier	pDestructor		193520	1					
ANR	193697	CompoundStatement		30:24:670:670	193520	1					
ANR	193698	ExpressionStatement	ht -> pDestructor ( data )	562:4:16823:16844	193520	0	True				
ANR	193699	CallExpression	ht -> pDestructor ( data )		193520	0					
ANR	193700	Callee	ht -> pDestructor		193520	0					
ANR	193701	PtrMemberAccess	ht -> pDestructor		193520	0					
ANR	193702	Identifier	ht		193520	0					
ANR	193703	Identifier	pDestructor		193520	1					
ANR	193704	ArgumentList	data		193520	1					
ANR	193705	Argument	data		193520	0					
ANR	193706	Identifier	data		193520	0					
ANR	193707	ExpressionStatement	"ZVAL_COPY_VALUE ( data , pData )"	564:3:16854:16882	193520	7	True				
ANR	193708	CallExpression	"ZVAL_COPY_VALUE ( data , pData )"		193520	0					
ANR	193709	Callee	ZVAL_COPY_VALUE		193520	0					
ANR	193710	Identifier	ZVAL_COPY_VALUE		193520	0					
ANR	193711	ArgumentList	data		193520	1					
ANR	193712	Argument	data		193520	0					
ANR	193713	Identifier	data		193520	0					
ANR	193714	Argument	pData		193520	1					
ANR	193715	Identifier	pData		193520	0					
ANR	193716	ExpressionStatement	HANDLE_UNBLOCK_INTERRUPTIONS ( )	565:3:16887:16917	193520	8	True				
ANR	193717	CallExpression	HANDLE_UNBLOCK_INTERRUPTIONS ( )		193520	0					
ANR	193718	Callee	HANDLE_UNBLOCK_INTERRUPTIONS		193520	0					
ANR	193719	Identifier	HANDLE_UNBLOCK_INTERRUPTIONS		193520	0					
ANR	193720	ArgumentList			193520	1					
ANR	193721	ReturnStatement	return data ;	566:3:16922:16933	193520	9	True				
ANR	193722	Identifier	data		193520	0					
ANR	193723	ExpressionStatement	ZEND_HASH_IF_FULL_DO_RESIZE ( ht )	570:1:16944:16975	193520	7	True				
ANR	193724	CallExpression	ZEND_HASH_IF_FULL_DO_RESIZE ( ht )		193520	0					
ANR	193725	Callee	ZEND_HASH_IF_FULL_DO_RESIZE		193520	0					
ANR	193726	Identifier	ZEND_HASH_IF_FULL_DO_RESIZE		193520	0					
ANR	193727	ArgumentList	ht		193520	1					
ANR	193728	Argument	ht		193520	0					
ANR	193729	Identifier	ht		193520	0					
ANR	193730	Label	add_to_hash :	572:0:17022:17033	193520	8	True				
ANR	193731	Identifier	add_to_hash		193520	0					
ANR	193732	ExpressionStatement	HANDLE_BLOCK_INTERRUPTIONS ( )	573:1:17036:17064	193520	9	True				
ANR	193733	CallExpression	HANDLE_BLOCK_INTERRUPTIONS ( )		193520	0					
ANR	193734	Callee	HANDLE_BLOCK_INTERRUPTIONS		193520	0					
ANR	193735	Identifier	HANDLE_BLOCK_INTERRUPTIONS		193520	0					
ANR	193736	ArgumentList			193520	1					
ANR	193737	ExpressionStatement	idx = ht -> nNumUsed ++	574:1:17067:17087	193520	10	True				
ANR	193738	AssignmentExpression	idx = ht -> nNumUsed ++		193520	0		=			
ANR	193739	Identifier	idx		193520	0					
ANR	193740	PostIncDecOperationExpression	ht -> nNumUsed ++		193520	1					
ANR	193741	PtrMemberAccess	ht -> nNumUsed		193520	0					
ANR	193742	Identifier	ht		193520	0					
ANR	193743	Identifier	nNumUsed		193520	1					
ANR	193744	IncDec	++		193520	1					
ANR	193745	ExpressionStatement	ht -> nNumOfElements ++	575:1:17090:17110	193520	11	True				
ANR	193746	PostIncDecOperationExpression	ht -> nNumOfElements ++		193520	0					
ANR	193747	PtrMemberAccess	ht -> nNumOfElements		193520	0					
ANR	193748	Identifier	ht		193520	0					
ANR	193749	Identifier	nNumOfElements		193520	1					
ANR	193750	IncDec	++		193520	1					
ANR	193751	IfStatement	if ( ht -> nInternalPointer == HT_INVALID_IDX )		193520	12					
ANR	193752	Condition	ht -> nInternalPointer == HT_INVALID_IDX	576:5:17117:17154	193520	0	True				
ANR	193753	EqualityExpression	ht -> nInternalPointer == HT_INVALID_IDX		193520	0		==			
ANR	193754	PtrMemberAccess	ht -> nInternalPointer		193520	0					
ANR	193755	Identifier	ht		193520	0					
ANR	193756	Identifier	nInternalPointer		193520	1					
ANR	193757	Identifier	HT_INVALID_IDX		193520	1					
ANR	193758	CompoundStatement		45:45:1010:1010	193520	1					
ANR	193759	ExpressionStatement	ht -> nInternalPointer = idx	577:2:17161:17187	193520	0	True				
ANR	193760	AssignmentExpression	ht -> nInternalPointer = idx		193520	0		=			
ANR	193761	PtrMemberAccess	ht -> nInternalPointer		193520	0					
ANR	193762	Identifier	ht		193520	0					
ANR	193763	Identifier	nInternalPointer		193520	1					
ANR	193764	Identifier	idx		193520	1					
ANR	193765	ExpressionStatement	"zend_hash_iterators_update ( ht , HT_INVALID_IDX , idx )"	579:1:17193:17244	193520	13	True				
ANR	193766	CallExpression	"zend_hash_iterators_update ( ht , HT_INVALID_IDX , idx )"		193520	0					
ANR	193767	Callee	zend_hash_iterators_update		193520	0					
ANR	193768	Identifier	zend_hash_iterators_update		193520	0					
ANR	193769	ArgumentList	ht		193520	1					
ANR	193770	Argument	ht		193520	0					
ANR	193771	Identifier	ht		193520	0					
ANR	193772	Argument	HT_INVALID_IDX		193520	1					
ANR	193773	Identifier	HT_INVALID_IDX		193520	0					
ANR	193774	Argument	idx		193520	2					
ANR	193775	Identifier	idx		193520	0					
ANR	193776	ExpressionStatement	p = ht -> arData + idx	580:1:17247:17267	193520	14	True				
ANR	193777	AssignmentExpression	p = ht -> arData + idx		193520	0		=			
ANR	193778	Identifier	p		193520	0					
ANR	193779	AdditiveExpression	ht -> arData + idx		193520	1		+			
ANR	193780	PtrMemberAccess	ht -> arData		193520	0					
ANR	193781	Identifier	ht		193520	0					
ANR	193782	Identifier	arData		193520	1					
ANR	193783	Identifier	idx		193520	1					
ANR	193784	ExpressionStatement	p -> key = key	581:1:17270:17282	193520	15	True				
ANR	193785	AssignmentExpression	p -> key = key		193520	0		=			
ANR	193786	PtrMemberAccess	p -> key		193520	0					
ANR	193787	Identifier	p		193520	0					
ANR	193788	Identifier	key		193520	1					
ANR	193789	Identifier	key		193520	1					
ANR	193790	IfStatement	if ( ! ZSTR_IS_INTERNED ( key ) )		193520	16					
ANR	193791	Condition	! ZSTR_IS_INTERNED ( key )	582:5:17289:17310	193520	0	True				
ANR	193792	UnaryOperationExpression	! ZSTR_IS_INTERNED ( key )		193520	0					
ANR	193793	UnaryOperator	!		193520	0					
ANR	193794	CallExpression	ZSTR_IS_INTERNED ( key )		193520	1					
ANR	193795	Callee	ZSTR_IS_INTERNED		193520	0					
ANR	193796	Identifier	ZSTR_IS_INTERNED		193520	0					
ANR	193797	ArgumentList	key		193520	1					
ANR	193798	Argument	key		193520	0					
ANR	193799	Identifier	key		193520	0					
ANR	193800	CompoundStatement		51:29:1166:1166	193520	1					
ANR	193801	ExpressionStatement	zend_string_addref ( key )	583:2:17317:17340	193520	0	True				
ANR	193802	CallExpression	zend_string_addref ( key )		193520	0					
ANR	193803	Callee	zend_string_addref		193520	0					
ANR	193804	Identifier	zend_string_addref		193520	0					
ANR	193805	ArgumentList	key		193520	1					
ANR	193806	Argument	key		193520	0					
ANR	193807	Identifier	key		193520	0					
ANR	193808	ExpressionStatement	ht -> u . flags &= ~HASH_FLAG_STATIC_KEYS	584:2:17344:17381	193520	1	True				
ANR	193809	AssignmentExpression	ht -> u . flags &= ~HASH_FLAG_STATIC_KEYS		193520	0		&=			
ANR	193810	MemberAccess	ht -> u . flags		193520	0					
ANR	193811	PtrMemberAccess	ht -> u		193520	0					
ANR	193812	Identifier	ht		193520	0					
ANR	193813	Identifier	u		193520	1					
ANR	193814	Identifier	flags		193520	1					
ANR	193815	Identifier	~HASH_FLAG_STATIC_KEYS		193520	1					
ANR	193816	ExpressionStatement	zend_string_hash_val ( key )	585:2:17385:17410	193520	2	True				
ANR	193817	CallExpression	zend_string_hash_val ( key )		193520	0					
ANR	193818	Callee	zend_string_hash_val		193520	0					
ANR	193819	Identifier	zend_string_hash_val		193520	0					
ANR	193820	ArgumentList	key		193520	1					
ANR	193821	Argument	key		193520	0					
ANR	193822	Identifier	key		193520	0					
ANR	193823	ExpressionStatement	p -> h = h = ZSTR_H ( key )	587:1:17416:17438	193520	17	True				
ANR	193824	AssignmentExpression	p -> h = h = ZSTR_H ( key )		193520	0		=			
ANR	193825	PtrMemberAccess	p -> h		193520	0					
ANR	193826	Identifier	p		193520	0					
ANR	193827	Identifier	h		193520	1					
ANR	193828	AssignmentExpression	h = ZSTR_H ( key )		193520	1		=			
ANR	193829	Identifier	h		193520	0					
ANR	193830	CallExpression	ZSTR_H ( key )		193520	1					
ANR	193831	Callee	ZSTR_H		193520	0					
ANR	193832	Identifier	ZSTR_H		193520	0					
ANR	193833	ArgumentList	key		193520	1					
ANR	193834	Argument	key		193520	0					
ANR	193835	Identifier	key		193520	0					
ANR	193836	ExpressionStatement	"ZVAL_COPY_VALUE ( & p -> val , pData )"	588:1:17441:17472	193520	18	True				
ANR	193837	CallExpression	"ZVAL_COPY_VALUE ( & p -> val , pData )"		193520	0					
ANR	193838	Callee	ZVAL_COPY_VALUE		193520	0					
ANR	193839	Identifier	ZVAL_COPY_VALUE		193520	0					
ANR	193840	ArgumentList	& p -> val		193520	1					
ANR	193841	Argument	& p -> val		193520	0					
ANR	193842	UnaryOperationExpression	& p -> val		193520	0					
ANR	193843	UnaryOperator	&		193520	0					
ANR	193844	PtrMemberAccess	p -> val		193520	1					
ANR	193845	Identifier	p		193520	0					
ANR	193846	Identifier	val		193520	1					
ANR	193847	Argument	pData		193520	1					
ANR	193848	Identifier	pData		193520	0					
ANR	193849	ExpressionStatement	nIndex = h | ht -> nTableMask	589:1:17475:17502	193520	19	True				
ANR	193850	AssignmentExpression	nIndex = h | ht -> nTableMask		193520	0		=			
ANR	193851	Identifier	nIndex		193520	0					
ANR	193852	InclusiveOrExpression	h | ht -> nTableMask		193520	1		|			
ANR	193853	Identifier	h		193520	0					
ANR	193854	PtrMemberAccess	ht -> nTableMask		193520	1					
ANR	193855	Identifier	ht		193520	0					
ANR	193856	Identifier	nTableMask		193520	1					
ANR	193857	ExpressionStatement	"Z_NEXT ( p -> val ) = HT_HASH ( ht , nIndex )"	590:1:17505:17541	193520	20	True				
ANR	193858	AssignmentExpression	"Z_NEXT ( p -> val ) = HT_HASH ( ht , nIndex )"		193520	0		=			
ANR	193859	CallExpression	Z_NEXT ( p -> val )		193520	0					
ANR	193860	Callee	Z_NEXT		193520	0					
ANR	193861	Identifier	Z_NEXT		193520	0					
ANR	193862	ArgumentList	p -> val		193520	1					
ANR	193863	Argument	p -> val		193520	0					
ANR	193864	PtrMemberAccess	p -> val		193520	0					
ANR	193865	Identifier	p		193520	0					
ANR	193866	Identifier	val		193520	1					
ANR	193867	CallExpression	"HT_HASH ( ht , nIndex )"		193520	1					
ANR	193868	Callee	HT_HASH		193520	0					
ANR	193869	Identifier	HT_HASH		193520	0					
ANR	193870	ArgumentList	ht		193520	1					
ANR	193871	Argument	ht		193520	0					
ANR	193872	Identifier	ht		193520	0					
ANR	193873	Argument	nIndex		193520	1					
ANR	193874	Identifier	nIndex		193520	0					
ANR	193875	ExpressionStatement	"HT_HASH ( ht , nIndex ) = HT_IDX_TO_HASH ( idx )"	591:1:17544:17585	193520	21	True				
ANR	193876	AssignmentExpression	"HT_HASH ( ht , nIndex ) = HT_IDX_TO_HASH ( idx )"		193520	0		=			
ANR	193877	CallExpression	"HT_HASH ( ht , nIndex )"		193520	0					
ANR	193878	Callee	HT_HASH		193520	0					
ANR	193879	Identifier	HT_HASH		193520	0					
ANR	193880	ArgumentList	ht		193520	1					
ANR	193881	Argument	ht		193520	0					
ANR	193882	Identifier	ht		193520	0					
ANR	193883	Argument	nIndex		193520	1					
ANR	193884	Identifier	nIndex		193520	0					
ANR	193885	CallExpression	HT_IDX_TO_HASH ( idx )		193520	1					
ANR	193886	Callee	HT_IDX_TO_HASH		193520	0					
ANR	193887	Identifier	HT_IDX_TO_HASH		193520	0					
ANR	193888	ArgumentList	idx		193520	1					
ANR	193889	Argument	idx		193520	0					
ANR	193890	Identifier	idx		193520	0					
ANR	193891	ExpressionStatement	HANDLE_UNBLOCK_INTERRUPTIONS ( )	592:1:17588:17618	193520	22	True				
ANR	193892	CallExpression	HANDLE_UNBLOCK_INTERRUPTIONS ( )		193520	0					
ANR	193893	Callee	HANDLE_UNBLOCK_INTERRUPTIONS		193520	0					
ANR	193894	Identifier	HANDLE_UNBLOCK_INTERRUPTIONS		193520	0					
ANR	193895	ArgumentList			193520	1					
ANR	193896	ReturnStatement	return & p -> val ;	594:1:17622:17636	193520	23	True				
ANR	193897	UnaryOperationExpression	& p -> val		193520	0					
ANR	193898	UnaryOperator	&		193520	0					
ANR	193899	PtrMemberAccess	p -> val		193520	1					
ANR	193900	Identifier	p		193520	0					
ANR	193901	Identifier	val		193520	1					
ANR	193902	ReturnType	static zend_always_inline zval *		193520	1					
ANR	193903	Identifier	_zend_hash_add_or_update_i		193520	2					
ANR	193904	ParameterList	"HashTable * ht , zend_string * key , zval * pData , uint32_t flag ZEND_FILE_LINE_DC"		193520	3					
ANR	193905	Parameter	HashTable * ht	531:59:16067:16079	193520	0	True				
ANR	193906	ParameterType	HashTable *		193520	0					
ANR	193907	Identifier	ht		193520	1					
ANR	193908	Parameter	zend_string * key	531:74:16082:16097	193520	1	True				
ANR	193909	ParameterType	zend_string *		193520	0					
ANR	193910	Identifier	key		193520	1					
ANR	193911	Parameter	zval * pData	531:92:16100:16110	193520	2	True				
ANR	193912	ParameterType	zval *		193520	0					
ANR	193913	Identifier	pData		193520	1					
ANR	193914	Parameter	uint32_t flag ZEND_FILE_LINE_DC	531:105:16113:16143	193520	3	True				
ANR	193915	ParameterType	uint32_t flag		193520	0					
ANR	193916	Identifier	ZEND_FILE_LINE_DC		193520	1					
ANR	193917	CFGEntryNode	ENTRY		193520		True				
ANR	193918	CFGExitNode	EXIT		193520		True				
ANR	193919	Symbol	flag		193520						
ANR	193920	Symbol	data		193520						
ANR	193921	Symbol	ht -> nTableMask		193520						
ANR	193922	Symbol	HASH_FLAG_PACKED		193520						
ANR	193923	Symbol	ht -> u		193520						
ANR	193924	Symbol	ht -> pDestructor		193520						
ANR	193925	Symbol	Z_INDIRECT_P		193520						
ANR	193926	Symbol	ht -> arData		193520						
ANR	193927	Symbol	ht -> u . flags		193520						
ANR	193928	Symbol	HASH_UPDATE_INDIRECT		193520						
ANR	193929	Symbol	Z_NEXT		193520						
ANR	193930	Symbol	ht		193520						
ANR	193931	Symbol	ZSTR_H		193520						
ANR	193932	Symbol	UNEXPECTED		193520						
ANR	193933	Symbol	* ht		193520						
ANR	193934	Symbol	zend_hash_find_bucket		193520						
ANR	193935	Symbol	HT_HASH		193520						
ANR	193936	Symbol	HASH_FLAG_INITIALIZED		193520						
ANR	193937	Symbol	~HASH_FLAG_STATIC_KEYS		193520						
ANR	193938	Symbol	ZEND_FILE_LINE_DC		193520						
ANR	193939	Symbol	GC_REFCOUNT		193520						
ANR	193940	Symbol	key		193520						
ANR	193941	Symbol	HASH_ADD_NEW		193520						
ANR	193942	Symbol	HASH_ADD		193520						
ANR	193943	Symbol	ht -> nNumOfElements		193520						
ANR	193944	Symbol	p -> h		193520						
ANR	193945	Symbol	& p -> val		193520						
ANR	193946	Symbol	ht -> nInternalPointer		193520						
ANR	193947	Symbol	HT_INVALID_IDX		193520						
ANR	193948	Symbol	NULL		193520						
ANR	193949	Symbol	h		193520						
ANR	193950	Symbol	nIndex		193520						
ANR	193951	Symbol	Z_TYPE_P		193520						
ANR	193952	Symbol	p -> val		193520						
ANR	193953	Symbol	HT_IDX_TO_HASH		193520						
ANR	193954	Symbol	p -> key		193520						
ANR	193955	Symbol	pData		193520						
ANR	193956	Symbol	p		193520						
ANR	193957	Symbol	ZSTR_IS_INTERNED		193520						
ANR	193958	Symbol	* p		193520						
ANR	193959	Symbol	idx		193520						
ANR	193960	Symbol	ht -> nNumUsed		193520						
ANR	193961	Symbol	IS_INDIRECT		193520						
ANR	193962	Function	_zend_hash_add_or_update	597:15:17656:17858							
ANR	193963	FunctionDef	"_zend_hash_add_or_update (HashTable * ht , zend_string * key , zval * pData , uint32_t flag ZEND_FILE_LINE_DC)"		193962	0					
ANR	193964	CompoundStatement		598:0:17774:17858	193962	0					
ANR	193965	Statement	return	599:1:17777:17782	193962	0	True				
ANR	193966	Statement	_zend_hash_add_or_update_i	599:8:17784:17809	193962	1	True				
ANR	193967	Statement	(	599:34:17810:17810	193962	2	True				
ANR	193968	Statement	ht	599:35:17811:17812	193962	3	True				
ANR	193969	Statement	","	599:37:17813:17813	193962	4	True				
ANR	193970	Statement	key	599:39:17815:17817	193962	5	True				
ANR	193971	Statement	","	599:42:17818:17818	193962	6	True				
ANR	193972	Statement	pData	599:44:17820:17824	193962	7	True				
ANR	193973	Statement	","	599:49:17825:17825	193962	8	True				
ANR	193974	Statement	flag	599:51:17827:17830	193962	9	True				
ANR	193975	Statement	ZEND_FILE_LINE_RELAY_CC	599:56:17832:17854	193962	10	True				
ANR	193976	Statement	)	599:79:17855:17855	193962	11	True				
ANR	193977	ExpressionStatement		599:80:17856:17856	193962	12	True				
ANR	193978	ReturnType	ZEND_FASTCALL		193962	1					
ANR	193979	Identifier	_zend_hash_add_or_update		193962	2					
ANR	193980	ParameterList	"HashTable * ht , zend_string * key , zval * pData , uint32_t flag ZEND_FILE_LINE_DC"		193962	3					
ANR	193981	Parameter	HashTable * ht	597:54:17695:17707	193962	0	True				
ANR	193982	ParameterType	HashTable *		193962	0					
ANR	193983	Identifier	ht		193962	1					
ANR	193984	Parameter	zend_string * key	597:69:17710:17725	193962	1	True				
ANR	193985	ParameterType	zend_string *		193962	0					
ANR	193986	Identifier	key		193962	1					
ANR	193987	Parameter	zval * pData	597:87:17728:17738	193962	2	True				
ANR	193988	ParameterType	zval *		193962	0					
ANR	193989	Identifier	pData		193962	1					
ANR	193990	Parameter	uint32_t flag ZEND_FILE_LINE_DC	597:100:17741:17771	193962	3	True				
ANR	193991	ParameterType	uint32_t flag		193962	0					
ANR	193992	Identifier	ZEND_FILE_LINE_DC		193962	1					
ANR	193993	CFGEntryNode	ENTRY		193962		True				
ANR	193994	CFGExitNode	EXIT		193962		True				
ANR	193995	Symbol	pData		193962						
ANR	193996	Symbol	ZEND_FILE_LINE_DC		193962						
ANR	193997	Symbol	ht		193962						
ANR	193998	Symbol	key		193962						
ANR	193999	Function	_zend_hash_str_add_or_update	622:15:18719:19065							
ANR	194000	FunctionDef	"_zend_hash_str_add_or_update (HashTable * ht , const char * str , size_t len , zval * pData , uint32_t flag ZEND_FILE_LINE_DC)"		193999	0					
ANR	194001	CompoundStatement		623:0:18852:19065	193999	0					
ANR	194002	IdentifierDeclStatement	"zend_string * key = zend_string_init ( str , len , ht -> u . flags & HASH_FLAG_PERSISTENT ) ;"	624:1:18855:18936	193999	0	True				
ANR	194003	IdentifierDecl	"* key = zend_string_init ( str , len , ht -> u . flags & HASH_FLAG_PERSISTENT )"		193999	0					
ANR	194004	IdentifierDeclType	zend_string *		193999	0					
ANR	194005	Identifier	key		193999	1					
ANR	194006	AssignmentExpression	"* key = zend_string_init ( str , len , ht -> u . flags & HASH_FLAG_PERSISTENT )"		193999	2		=			
ANR	194007	Identifier	key		193999	0					
ANR	194008	CallExpression	"zend_string_init ( str , len , ht -> u . flags & HASH_FLAG_PERSISTENT )"		193999	1					
ANR	194009	Callee	zend_string_init		193999	0					
ANR	194010	Identifier	zend_string_init		193999	0					
ANR	194011	ArgumentList	str		193999	1					
ANR	194012	Argument	str		193999	0					
ANR	194013	Identifier	str		193999	0					
ANR	194014	Argument	len		193999	1					
ANR	194015	Identifier	len		193999	0					
ANR	194016	Argument	ht -> u . flags & HASH_FLAG_PERSISTENT		193999	2					
ANR	194017	BitAndExpression	ht -> u . flags & HASH_FLAG_PERSISTENT		193999	0		&			
ANR	194018	MemberAccess	ht -> u . flags		193999	0					
ANR	194019	PtrMemberAccess	ht -> u		193999	0					
ANR	194020	Identifier	ht		193999	0					
ANR	194021	Identifier	u		193999	1					
ANR	194022	Identifier	flags		193999	1					
ANR	194023	Identifier	HASH_FLAG_PERSISTENT		193999	1					
ANR	194024	Statement	zval	625:1:18939:18942	193999	1	True				
ANR	194025	Statement	*	625:6:18944:18944	193999	2	True				
ANR	194026	Statement	ret	625:7:18945:18947	193999	3	True				
ANR	194027	Statement	=	625:11:18949:18949	193999	4	True				
ANR	194028	Statement	_zend_hash_add_or_update_i	625:13:18951:18976	193999	5	True				
ANR	194029	Statement	(	625:39:18977:18977	193999	6	True				
ANR	194030	Statement	ht	625:40:18978:18979	193999	7	True				
ANR	194031	Statement	","	625:42:18980:18980	193999	8	True				
ANR	194032	Statement	key	625:44:18982:18984	193999	9	True				
ANR	194033	Statement	","	625:47:18985:18985	193999	10	True				
ANR	194034	Statement	pData	625:49:18987:18991	193999	11	True				
ANR	194035	Statement	","	625:54:18992:18992	193999	12	True				
ANR	194036	Statement	flag	625:56:18994:18997	193999	13	True				
ANR	194037	Statement	ZEND_FILE_LINE_RELAY_CC	625:61:18999:19021	193999	14	True				
ANR	194038	Statement	)	625:84:19022:19022	193999	15	True				
ANR	194039	ExpressionStatement		625:85:19023:19023	193999	16	True				
ANR	194040	ExpressionStatement	zend_string_release ( key )	626:1:19026:19050	193999	17	True				
ANR	194041	CallExpression	zend_string_release ( key )		193999	0					
ANR	194042	Callee	zend_string_release		193999	0					
ANR	194043	Identifier	zend_string_release		193999	0					
ANR	194044	ArgumentList	key		193999	1					
ANR	194045	Argument	key		193999	0					
ANR	194046	Identifier	key		193999	0					
ANR	194047	ReturnStatement	return ret ;	627:1:19053:19063	193999	18	True				
ANR	194048	Identifier	ret		193999	0					
ANR	194049	ReturnType	ZEND_FASTCALL		193999	1					
ANR	194050	Identifier	_zend_hash_str_add_or_update		193999	2					
ANR	194051	ParameterList	"HashTable * ht , const char * str , size_t len , zval * pData , uint32_t flag ZEND_FILE_LINE_DC"		193999	3					
ANR	194052	Parameter	HashTable * ht	622:58:18762:18774	193999	0	True				
ANR	194053	ParameterType	HashTable *		193999	0					
ANR	194054	Identifier	ht		193999	1					
ANR	194055	Parameter	const char * str	622:73:18777:18791	193999	1	True				
ANR	194056	ParameterType	const char *		193999	0					
ANR	194057	Identifier	str		193999	1					
ANR	194058	Parameter	size_t len	622:90:18794:18803	193999	2	True				
ANR	194059	ParameterType	size_t		193999	0					
ANR	194060	Identifier	len		193999	1					
ANR	194061	Parameter	zval * pData	622:102:18806:18816	193999	3	True				
ANR	194062	ParameterType	zval *		193999	0					
ANR	194063	Identifier	pData		193999	1					
ANR	194064	Parameter	uint32_t flag ZEND_FILE_LINE_DC	622:115:18819:18849	193999	4	True				
ANR	194065	ParameterType	uint32_t flag		193999	0					
ANR	194066	Identifier	ZEND_FILE_LINE_DC		193999	1					
ANR	194067	CFGEntryNode	ENTRY		193999		True				
ANR	194068	CFGExitNode	EXIT		193999		True				
ANR	194069	Symbol	str		193999						
ANR	194070	Symbol	pData		193999						
ANR	194071	Symbol	ret		193999						
ANR	194072	Symbol	* ht		193999						
ANR	194073	Symbol	zend_string_init		193999						
ANR	194074	Symbol	len		193999						
ANR	194075	Symbol	HASH_FLAG_PERSISTENT		193999						
ANR	194076	Symbol	ht -> u		193999						
ANR	194077	Symbol	ZEND_FILE_LINE_DC		193999						
ANR	194078	Symbol	ht -> u . flags		193999						
ANR	194079	Symbol	ht		193999						
ANR	194080	Symbol	key		193999						
ANR	194081	DeclStmt									
ANR	194082	Decl							zend_string	zend_string *	key
ANR	194083	DeclStmt									
ANR	194084	Decl							zval	zval *	ret
ANR	194085	DeclStmt									
ANR	194086	Decl							zend_string	zend_string *	key
ANR	194087	DeclStmt									
ANR	194088	Decl							zval	zval *	ret
ANR	194089	DeclStmt									
ANR	194090	Decl							zend_string	zend_string *	key
ANR	194091	DeclStmt									
ANR	194092	Decl							zval	zval *	ret
ANR	194093	DeclStmt									
ANR	194094	Decl							zend_string	zend_string *	key
ANR	194095	DeclStmt									
ANR	194096	Decl							zval	zval *	ret
ANR	194097	Function	zend_hash_index_add_empty_element	662:15:20501:20658							
ANR	194098	FunctionDef	"zend_hash_index_add_empty_element (HashTable * ht , zend_ulong h)"		194097	0					
ANR	194099	CompoundStatement		663:0:20578:20658	194097	0					
ANR	194100	IdentifierDeclStatement	zval dummy ;	664:1:20581:20591	194097	0	True				
ANR	194101	IdentifierDecl	dummy		194097	0					
ANR	194102	IdentifierDeclType	zval		194097	0					
ANR	194103	Identifier	dummy		194097	1					
ANR	194104	ExpressionStatement	ZVAL_NULL ( & dummy )	666:1:20595:20612	194097	1	True				
ANR	194105	CallExpression	ZVAL_NULL ( & dummy )		194097	0					
ANR	194106	Callee	ZVAL_NULL		194097	0					
ANR	194107	Identifier	ZVAL_NULL		194097	0					
ANR	194108	ArgumentList	& dummy		194097	1					
ANR	194109	Argument	& dummy		194097	0					
ANR	194110	UnaryOperationExpression	& dummy		194097	0					
ANR	194111	UnaryOperator	&		194097	0					
ANR	194112	Identifier	dummy		194097	1					
ANR	194113	ReturnStatement	"return zend_hash_index_add ( ht , h , & dummy ) ;"	667:1:20615:20656	194097	2	True				
ANR	194114	CallExpression	"zend_hash_index_add ( ht , h , & dummy )"		194097	0					
ANR	194115	Callee	zend_hash_index_add		194097	0					
ANR	194116	Identifier	zend_hash_index_add		194097	0					
ANR	194117	ArgumentList	ht		194097	1					
ANR	194118	Argument	ht		194097	0					
ANR	194119	Identifier	ht		194097	0					
ANR	194120	Argument	h		194097	1					
ANR	194121	Identifier	h		194097	0					
ANR	194122	Argument	& dummy		194097	2					
ANR	194123	UnaryOperationExpression	& dummy		194097	0					
ANR	194124	UnaryOperator	&		194097	0					
ANR	194125	Identifier	dummy		194097	1					
ANR	194126	ReturnType	ZEND_FASTCALL		194097	1					
ANR	194127	Identifier	zend_hash_index_add_empty_element		194097	2					
ANR	194128	ParameterList	"HashTable * ht , zend_ulong h"		194097	3					
ANR	194129	Parameter	HashTable * ht	662:63:20549:20561	194097	0	True				
ANR	194130	ParameterType	HashTable *		194097	0					
ANR	194131	Identifier	ht		194097	1					
ANR	194132	Parameter	zend_ulong h	662:78:20564:20575	194097	1	True				
ANR	194133	ParameterType	zend_ulong		194097	0					
ANR	194134	Identifier	h		194097	1					
ANR	194135	CFGEntryNode	ENTRY		194097		True				
ANR	194136	CFGExitNode	EXIT		194097		True				
ANR	194137	Symbol	dummy		194097						
ANR	194138	Symbol	& dummy		194097						
ANR	194139	Symbol	h		194097						
ANR	194140	Symbol	ht		194097						
ANR	194141	Symbol	zend_hash_index_add		194097						
ANR	194142	Function	zend_hash_add_empty_element	670:15:20676:20827							
ANR	194143	FunctionDef	"zend_hash_add_empty_element (HashTable * ht , zend_string * key)"		194142	0					
ANR	194144	CompoundStatement		671:0:20751:20827	194142	0					
ANR	194145	IdentifierDeclStatement	zval dummy ;	672:1:20754:20764	194142	0	True				
ANR	194146	IdentifierDecl	dummy		194142	0					
ANR	194147	IdentifierDeclType	zval		194142	0					
ANR	194148	Identifier	dummy		194142	1					
ANR	194149	ExpressionStatement	ZVAL_NULL ( & dummy )	674:1:20768:20785	194142	1	True				
ANR	194150	CallExpression	ZVAL_NULL ( & dummy )		194142	0					
ANR	194151	Callee	ZVAL_NULL		194142	0					
ANR	194152	Identifier	ZVAL_NULL		194142	0					
ANR	194153	ArgumentList	& dummy		194142	1					
ANR	194154	Argument	& dummy		194142	0					
ANR	194155	UnaryOperationExpression	& dummy		194142	0					
ANR	194156	UnaryOperator	&		194142	0					
ANR	194157	Identifier	dummy		194142	1					
ANR	194158	ReturnStatement	"return zend_hash_add ( ht , key , & dummy ) ;"	675:1:20788:20825	194142	2	True				
ANR	194159	CallExpression	"zend_hash_add ( ht , key , & dummy )"		194142	0					
ANR	194160	Callee	zend_hash_add		194142	0					
ANR	194161	Identifier	zend_hash_add		194142	0					
ANR	194162	ArgumentList	ht		194142	1					
ANR	194163	Argument	ht		194142	0					
ANR	194164	Identifier	ht		194142	0					
ANR	194165	Argument	key		194142	1					
ANR	194166	Identifier	key		194142	0					
ANR	194167	Argument	& dummy		194142	2					
ANR	194168	UnaryOperationExpression	& dummy		194142	0					
ANR	194169	UnaryOperator	&		194142	0					
ANR	194170	Identifier	dummy		194142	1					
ANR	194171	ReturnType	ZEND_FASTCALL		194142	1					
ANR	194172	Identifier	zend_hash_add_empty_element		194142	2					
ANR	194173	ParameterList	"HashTable * ht , zend_string * key"		194142	3					
ANR	194174	Parameter	HashTable * ht	670:57:20718:20730	194142	0	True				
ANR	194175	ParameterType	HashTable *		194142	0					
ANR	194176	Identifier	ht		194142	1					
ANR	194177	Parameter	zend_string * key	670:72:20733:20748	194142	1	True				
ANR	194178	ParameterType	zend_string *		194142	0					
ANR	194179	Identifier	key		194142	1					
ANR	194180	CFGEntryNode	ENTRY		194142		True				
ANR	194181	CFGExitNode	EXIT		194142		True				
ANR	194182	Symbol	dummy		194142						
ANR	194183	Symbol	& dummy		194142						
ANR	194184	Symbol	zend_hash_add		194142						
ANR	194185	Symbol	ht		194142						
ANR	194186	Symbol	key		194142						
ANR	194187	Function	zend_hash_str_add_empty_element	678:15:20845:21020							
ANR	194188	FunctionDef	"zend_hash_str_add_empty_element (HashTable * ht , const char * str , size_t len)"		194187	0					
ANR	194189	CompoundStatement		679:0:20935:21020	194187	0					
ANR	194190	IdentifierDeclStatement	zval dummy ;	680:1:20938:20948	194187	0	True				
ANR	194191	IdentifierDecl	dummy		194187	0					
ANR	194192	IdentifierDeclType	zval		194187	0					
ANR	194193	Identifier	dummy		194187	1					
ANR	194194	ExpressionStatement	ZVAL_NULL ( & dummy )	682:1:20952:20969	194187	1	True				
ANR	194195	CallExpression	ZVAL_NULL ( & dummy )		194187	0					
ANR	194196	Callee	ZVAL_NULL		194187	0					
ANR	194197	Identifier	ZVAL_NULL		194187	0					
ANR	194198	ArgumentList	& dummy		194187	1					
ANR	194199	Argument	& dummy		194187	0					
ANR	194200	UnaryOperationExpression	& dummy		194187	0					
ANR	194201	UnaryOperator	&		194187	0					
ANR	194202	Identifier	dummy		194187	1					
ANR	194203	ReturnStatement	"return zend_hash_str_add ( ht , str , len , & dummy ) ;"	683:1:20972:21018	194187	2	True				
ANR	194204	CallExpression	"zend_hash_str_add ( ht , str , len , & dummy )"		194187	0					
ANR	194205	Callee	zend_hash_str_add		194187	0					
ANR	194206	Identifier	zend_hash_str_add		194187	0					
ANR	194207	ArgumentList	ht		194187	1					
ANR	194208	Argument	ht		194187	0					
ANR	194209	Identifier	ht		194187	0					
ANR	194210	Argument	str		194187	1					
ANR	194211	Identifier	str		194187	0					
ANR	194212	Argument	len		194187	2					
ANR	194213	Identifier	len		194187	0					
ANR	194214	Argument	& dummy		194187	3					
ANR	194215	UnaryOperationExpression	& dummy		194187	0					
ANR	194216	UnaryOperator	&		194187	0					
ANR	194217	Identifier	dummy		194187	1					
ANR	194218	ReturnType	ZEND_FASTCALL		194187	1					
ANR	194219	Identifier	zend_hash_str_add_empty_element		194187	2					
ANR	194220	ParameterList	"HashTable * ht , const char * str , size_t len"		194187	3					
ANR	194221	Parameter	HashTable * ht	678:61:20891:20903	194187	0	True				
ANR	194222	ParameterType	HashTable *		194187	0					
ANR	194223	Identifier	ht		194187	1					
ANR	194224	Parameter	const char * str	678:76:20906:20920	194187	1	True				
ANR	194225	ParameterType	const char *		194187	0					
ANR	194226	Identifier	str		194187	1					
ANR	194227	Parameter	size_t len	678:93:20923:20932	194187	2	True				
ANR	194228	ParameterType	size_t		194187	0					
ANR	194229	Identifier	len		194187	1					
ANR	194230	CFGEntryNode	ENTRY		194187		True				
ANR	194231	CFGExitNode	EXIT		194187		True				
ANR	194232	Symbol	str		194187						
ANR	194233	Symbol	dummy		194187						
ANR	194234	Symbol	& dummy		194187						
ANR	194235	Symbol	len		194187						
ANR	194236	Symbol	zend_hash_str_add		194187						
ANR	194237	Symbol	ht		194187						
ANR	194238	Function	_zend_hash_index_add_or_update_i	686:0:21023:24282							
ANR	194239	FunctionDef	"_zend_hash_index_add_or_update_i (HashTable * ht , zend_ulong h , zval * pData , uint32_t flag ZEND_FILE_LINE_DC)"		194238	0					
ANR	194240	CompoundStatement		687:0:21163:24282	194238	0					
ANR	194241	IdentifierDeclStatement	uint32_t nIndex ;	688:1:21166:21181	194238	0	True				
ANR	194242	IdentifierDecl	nIndex		194238	0					
ANR	194243	IdentifierDeclType	uint32_t		194238	0					
ANR	194244	Identifier	nIndex		194238	1					
ANR	194245	IdentifierDeclStatement	uint32_t idx ;	689:1:21184:21196	194238	1	True				
ANR	194246	IdentifierDecl	idx		194238	0					
ANR	194247	IdentifierDeclType	uint32_t		194238	0					
ANR	194248	Identifier	idx		194238	1					
ANR	194249	IdentifierDeclStatement	Bucket * p ;	690:1:21199:21208	194238	2	True				
ANR	194250	IdentifierDecl	* p		194238	0					
ANR	194251	IdentifierDeclType	Bucket *		194238	0					
ANR	194252	Identifier	p		194238	1					
ANR	194253	ExpressionStatement	IS_CONSISTENT ( ht )	692:1:21212:21229	194238	3	True				
ANR	194254	CallExpression	IS_CONSISTENT ( ht )		194238	0					
ANR	194255	Callee	IS_CONSISTENT		194238	0					
ANR	194256	Identifier	IS_CONSISTENT		194238	0					
ANR	194257	ArgumentList	ht		194238	1					
ANR	194258	Argument	ht		194238	0					
ANR	194259	Identifier	ht		194238	0					
ANR	194260	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	693:1:21232:21263	194238	4	True				
ANR	194261	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		194238	0					
ANR	194262	Callee	HT_ASSERT		194238	0					
ANR	194263	Identifier	HT_ASSERT		194238	0					
ANR	194264	ArgumentList	GC_REFCOUNT ( ht ) == 1		194238	1					
ANR	194265	Argument	GC_REFCOUNT ( ht ) == 1		194238	0					
ANR	194266	EqualityExpression	GC_REFCOUNT ( ht ) == 1		194238	0		==			
ANR	194267	CallExpression	GC_REFCOUNT ( ht )		194238	0					
ANR	194268	Callee	GC_REFCOUNT		194238	0					
ANR	194269	Identifier	GC_REFCOUNT		194238	0					
ANR	194270	ArgumentList	ht		194238	1					
ANR	194271	Argument	ht		194238	0					
ANR	194272	Identifier	ht		194238	0					
ANR	194273	PrimaryExpression	1		194238	1					
ANR	194274	IfStatement	if ( UNEXPECTED ( ! ( ht -> u . flags & HASH_FLAG_INITIALIZED ) ) )		194238	5					
ANR	194275	Condition	UNEXPECTED ( ! ( ht -> u . flags & HASH_FLAG_INITIALIZED ) )	695:5:21271:21320	194238	0	True				
ANR	194276	CallExpression	UNEXPECTED ( ! ( ht -> u . flags & HASH_FLAG_INITIALIZED ) )		194238	0					
ANR	194277	Callee	UNEXPECTED		194238	0					
ANR	194278	Identifier	UNEXPECTED		194238	0					
ANR	194279	ArgumentList	! ( ht -> u . flags & HASH_FLAG_INITIALIZED )		194238	1					
ANR	194280	Argument	! ( ht -> u . flags & HASH_FLAG_INITIALIZED )		194238	0					
ANR	194281	UnaryOperationExpression	! ( ht -> u . flags & HASH_FLAG_INITIALIZED )		194238	0					
ANR	194282	UnaryOperator	!		194238	0					
ANR	194283	BitAndExpression	ht -> u . flags & HASH_FLAG_INITIALIZED		194238	1		&			
ANR	194284	MemberAccess	ht -> u . flags		194238	0					
ANR	194285	PtrMemberAccess	ht -> u		194238	0					
ANR	194286	Identifier	ht		194238	0					
ANR	194287	Identifier	u		194238	1					
ANR	194288	Identifier	flags		194238	1					
ANR	194289	Identifier	HASH_FLAG_INITIALIZED		194238	1					
ANR	194290	CompoundStatement		9:57:159:159	194238	1					
ANR	194291	ExpressionStatement	"CHECK_INIT ( ht , h < ht -> nTableSize )"	696:2:21327:21361	194238	0	True				
ANR	194292	CallExpression	"CHECK_INIT ( ht , h < ht -> nTableSize )"		194238	0					
ANR	194293	Callee	CHECK_INIT		194238	0					
ANR	194294	Identifier	CHECK_INIT		194238	0					
ANR	194295	ArgumentList	ht		194238	1					
ANR	194296	Argument	ht		194238	0					
ANR	194297	Identifier	ht		194238	0					
ANR	194298	Argument	h < ht -> nTableSize		194238	1					
ANR	194299	RelationalExpression	h < ht -> nTableSize		194238	0		<			
ANR	194300	Identifier	h		194238	0					
ANR	194301	PtrMemberAccess	ht -> nTableSize		194238	1					
ANR	194302	Identifier	ht		194238	0					
ANR	194303	Identifier	nTableSize		194238	1					
ANR	194304	IfStatement	if ( h < ht -> nTableSize )		194238	1					
ANR	194305	Condition	h < ht -> nTableSize	697:6:21369:21386	194238	0	True				
ANR	194306	RelationalExpression	h < ht -> nTableSize		194238	0		<			
ANR	194307	Identifier	h		194238	0					
ANR	194308	PtrMemberAccess	ht -> nTableSize		194238	1					
ANR	194309	Identifier	ht		194238	0					
ANR	194310	Identifier	nTableSize		194238	1					
ANR	194311	CompoundStatement		11:26:225:225	194238	1					
ANR	194312	ExpressionStatement	p = ht -> arData + h	698:3:21394:21412	194238	0	True				
ANR	194313	AssignmentExpression	p = ht -> arData + h		194238	0		=			
ANR	194314	Identifier	p		194238	0					
ANR	194315	AdditiveExpression	ht -> arData + h		194238	1		+			
ANR	194316	PtrMemberAccess	ht -> arData		194238	0					
ANR	194317	Identifier	ht		194238	0					
ANR	194318	Identifier	arData		194238	1					
ANR	194319	Identifier	h		194238	1					
ANR	194320	GotoStatement	goto add_to_packed ;	699:3:21417:21435	194238	1	True				
ANR	194321	Identifier	add_to_packed		194238	0					
ANR	194322	GotoStatement	goto add_to_hash ;	701:2:21443:21459	194238	2	True				
ANR	194323	Identifier	add_to_hash		194238	0					
ANR	194324	ElseStatement	else		194238	0					
ANR	194325	IfStatement	if ( ht -> u . flags & HASH_FLAG_PACKED )		194238	0					
ANR	194326	Condition	ht -> u . flags & HASH_FLAG_PACKED	702:12:21473:21502	194238	0	True				
ANR	194327	BitAndExpression	ht -> u . flags & HASH_FLAG_PACKED		194238	0		&			
ANR	194328	MemberAccess	ht -> u . flags		194238	0					
ANR	194329	PtrMemberAccess	ht -> u		194238	0					
ANR	194330	Identifier	ht		194238	0					
ANR	194331	Identifier	u		194238	1					
ANR	194332	Identifier	flags		194238	1					
ANR	194333	Identifier	HASH_FLAG_PACKED		194238	1					
ANR	194334	CompoundStatement		16:44:341:341	194238	1					
ANR	194335	IfStatement	if ( h < ht -> nNumUsed )		194238	0					
ANR	194336	Condition	h < ht -> nNumUsed	703:6:21513:21528	194238	0	True				
ANR	194337	RelationalExpression	h < ht -> nNumUsed		194238	0		<			
ANR	194338	Identifier	h		194238	0					
ANR	194339	PtrMemberAccess	ht -> nNumUsed		194238	1					
ANR	194340	Identifier	ht		194238	0					
ANR	194341	Identifier	nNumUsed		194238	1					
ANR	194342	CompoundStatement		17:24:367:367	194238	1					
ANR	194343	ExpressionStatement	p = ht -> arData + h	704:3:21536:21554	194238	0	True				
ANR	194344	AssignmentExpression	p = ht -> arData + h		194238	0		=			
ANR	194345	Identifier	p		194238	0					
ANR	194346	AdditiveExpression	ht -> arData + h		194238	1		+			
ANR	194347	PtrMemberAccess	ht -> arData		194238	0					
ANR	194348	Identifier	ht		194238	0					
ANR	194349	Identifier	arData		194238	1					
ANR	194350	Identifier	h		194238	1					
ANR	194351	IfStatement	if ( Z_TYPE ( p -> val ) != IS_UNDEF )		194238	1					
ANR	194352	Condition	Z_TYPE ( p -> val ) != IS_UNDEF	705:7:21563:21588	194238	0	True				
ANR	194353	EqualityExpression	Z_TYPE ( p -> val ) != IS_UNDEF		194238	0		!=			
ANR	194354	CallExpression	Z_TYPE ( p -> val )		194238	0					
ANR	194355	Callee	Z_TYPE		194238	0					
ANR	194356	Identifier	Z_TYPE		194238	0					
ANR	194357	ArgumentList	p -> val		194238	1					
ANR	194358	Argument	p -> val		194238	0					
ANR	194359	PtrMemberAccess	p -> val		194238	0					
ANR	194360	Identifier	p		194238	0					
ANR	194361	Identifier	val		194238	1					
ANR	194362	Identifier	IS_UNDEF		194238	1					
ANR	194363	CompoundStatement		19:35:427:427	194238	1					
ANR	194364	IfStatement	if ( flag & HASH_ADD )		194238	0					
ANR	194365	Condition	flag & HASH_ADD	706:8:21601:21615	194238	0	True				
ANR	194366	BitAndExpression	flag & HASH_ADD		194238	0		&			
ANR	194367	Identifier	flag		194238	0					
ANR	194368	Identifier	HASH_ADD		194238	1					
ANR	194369	CompoundStatement		20:25:454:454	194238	1					
ANR	194370	ReturnStatement	return NULL ;	707:5:21625:21636	194238	0	True				
ANR	194371	Identifier	NULL		194238	0					
ANR	194372	IfStatement	if ( ht -> pDestructor )		194238	1					
ANR	194373	Condition	ht -> pDestructor	709:8:21652:21666	194238	0	True				
ANR	194374	PtrMemberAccess	ht -> pDestructor		194238	0					
ANR	194375	Identifier	ht		194238	0					
ANR	194376	Identifier	pDestructor		194238	1					
ANR	194377	CompoundStatement		23:25:505:505	194238	1					
ANR	194378	ExpressionStatement	ht -> pDestructor ( & p -> val )	710:5:21676:21700	194238	0	True				
ANR	194379	CallExpression	ht -> pDestructor ( & p -> val )		194238	0					
ANR	194380	Callee	ht -> pDestructor		194238	0					
ANR	194381	PtrMemberAccess	ht -> pDestructor		194238	0					
ANR	194382	Identifier	ht		194238	0					
ANR	194383	Identifier	pDestructor		194238	1					
ANR	194384	ArgumentList	& p -> val		194238	1					
ANR	194385	Argument	& p -> val		194238	0					
ANR	194386	UnaryOperationExpression	& p -> val		194238	0					
ANR	194387	UnaryOperator	&		194238	0					
ANR	194388	PtrMemberAccess	p -> val		194238	1					
ANR	194389	Identifier	p		194238	0					
ANR	194390	Identifier	val		194238	1					
ANR	194391	ExpressionStatement	"ZVAL_COPY_VALUE ( & p -> val , pData )"	712:4:21712:21743	194238	2	True				
ANR	194392	CallExpression	"ZVAL_COPY_VALUE ( & p -> val , pData )"		194238	0					
ANR	194393	Callee	ZVAL_COPY_VALUE		194238	0					
ANR	194394	Identifier	ZVAL_COPY_VALUE		194238	0					
ANR	194395	ArgumentList	& p -> val		194238	1					
ANR	194396	Argument	& p -> val		194238	0					
ANR	194397	UnaryOperationExpression	& p -> val		194238	0					
ANR	194398	UnaryOperator	&		194238	0					
ANR	194399	PtrMemberAccess	p -> val		194238	1					
ANR	194400	Identifier	p		194238	0					
ANR	194401	Identifier	val		194238	1					
ANR	194402	Argument	pData		194238	1					
ANR	194403	Identifier	pData		194238	0					
ANR	194404	IfStatement	if ( ( zend_long ) h >= ( zend_long ) ht -> nNextFreeElement )		194238	3					
ANR	194405	Condition	( zend_long ) h >= ( zend_long ) ht -> nNextFreeElement	713:8:21753:21799	194238	0	True				
ANR	194406	RelationalExpression	( zend_long ) h >= ( zend_long ) ht -> nNextFreeElement		194238	0		>=			
ANR	194407	CastExpression	( zend_long ) h		194238	0					
ANR	194408	CastTarget	zend_long		194238	0					
ANR	194409	Identifier	h		194238	1					
ANR	194410	CastExpression	( zend_long ) ht -> nNextFreeElement		194238	1					
ANR	194411	CastTarget	zend_long		194238	0					
ANR	194412	PtrMemberAccess	ht -> nNextFreeElement		194238	1					
ANR	194413	Identifier	ht		194238	0					
ANR	194414	Identifier	nNextFreeElement		194238	1					
ANR	194415	CompoundStatement		27:57:638:638	194238	1					
ANR	194416	ExpressionStatement	ht -> nNextFreeElement = h < ZEND_LONG_MAX ? h + 1 : ZEND_LONG_MAX	714:5:21809:21873	194238	0	True				
ANR	194417	AssignmentExpression	ht -> nNextFreeElement = h < ZEND_LONG_MAX ? h + 1 : ZEND_LONG_MAX		194238	0		=			
ANR	194418	PtrMemberAccess	ht -> nNextFreeElement		194238	0					
ANR	194419	Identifier	ht		194238	0					
ANR	194420	Identifier	nNextFreeElement		194238	1					
ANR	194421	ConditionalExpression	h < ZEND_LONG_MAX ? h + 1 : ZEND_LONG_MAX		194238	1					
ANR	194422	Condition	h < ZEND_LONG_MAX		194238	0					
ANR	194423	RelationalExpression	h < ZEND_LONG_MAX		194238	0		<			
ANR	194424	Identifier	h		194238	0					
ANR	194425	Identifier	ZEND_LONG_MAX		194238	1					
ANR	194426	AdditiveExpression	h + 1		194238	1		+			
ANR	194427	Identifier	h		194238	0					
ANR	194428	PrimaryExpression	1		194238	1					
ANR	194429	Identifier	ZEND_LONG_MAX		194238	2					
ANR	194430	ReturnStatement	return & p -> val ;	716:4:21885:21899	194238	4	True				
ANR	194431	UnaryOperationExpression	& p -> val		194238	0					
ANR	194432	UnaryOperator	&		194238	0					
ANR	194433	PtrMemberAccess	p -> val		194238	1					
ANR	194434	Identifier	p		194238	0					
ANR	194435	Identifier	val		194238	1					
ANR	194436	ElseStatement	else		194238	0					
ANR	194437	CompoundStatement		31:10:747:747	194238	0					
ANR	194438	GotoStatement	goto convert_to_hash ;	718:4:21952:21972	194238	0	True				
ANR	194439	Identifier	convert_to_hash		194238	0					
ANR	194440	ElseStatement	else		194238	0					
ANR	194441	IfStatement	if ( EXPECTED ( h < ht -> nTableSize ) )		194238	0					
ANR	194442	Condition	EXPECTED ( h < ht -> nTableSize )	720:13:21992:22019	194238	0	True				
ANR	194443	CallExpression	EXPECTED ( h < ht -> nTableSize )		194238	0					
ANR	194444	Callee	EXPECTED		194238	0					
ANR	194445	Identifier	EXPECTED		194238	0					
ANR	194446	ArgumentList	h < ht -> nTableSize		194238	1					
ANR	194447	Argument	h < ht -> nTableSize		194238	0					
ANR	194448	RelationalExpression	h < ht -> nTableSize		194238	0		<			
ANR	194449	Identifier	h		194238	0					
ANR	194450	PtrMemberAccess	ht -> nTableSize		194238	1					
ANR	194451	Identifier	ht		194238	0					
ANR	194452	Identifier	nTableSize		194238	1					
ANR	194453	CompoundStatement		34:43:858:858	194238	1					
ANR	194454	ExpressionStatement	p = ht -> arData + h	721:3:22027:22045	194238	0	True				
ANR	194455	AssignmentExpression	p = ht -> arData + h		194238	0		=			
ANR	194456	Identifier	p		194238	0					
ANR	194457	AdditiveExpression	ht -> arData + h		194238	1		+			
ANR	194458	PtrMemberAccess	ht -> arData		194238	0					
ANR	194459	Identifier	ht		194238	0					
ANR	194460	Identifier	arData		194238	1					
ANR	194461	Identifier	h		194238	1					
ANR	194462	ElseStatement	else		194238	0					
ANR	194463	IfStatement	if ( ( h >> 1 ) < ht -> nTableSize && ( ht -> nTableSize >> 1 ) < ht -> nNumOfElements )		194238	0					
ANR	194464	Condition	( h >> 1 ) < ht -> nTableSize && ( ht -> nTableSize >> 1 ) < ht -> nNumOfElements	722:13:22060:22143	194238	0	True				
ANR	194465	AndExpression	( h >> 1 ) < ht -> nTableSize && ( ht -> nTableSize >> 1 ) < ht -> nNumOfElements		194238	0		&&			
ANR	194466	RelationalExpression	( h >> 1 ) < ht -> nTableSize		194238	0		<			
ANR	194467	ShiftExpression	h >> 1		194238	0		>>			
ANR	194468	Identifier	h		194238	0					
ANR	194469	PrimaryExpression	1		194238	1					
ANR	194470	PtrMemberAccess	ht -> nTableSize		194238	1					
ANR	194471	Identifier	ht		194238	0					
ANR	194472	Identifier	nTableSize		194238	1					
ANR	194473	RelationalExpression	( ht -> nTableSize >> 1 ) < ht -> nNumOfElements		194238	1		<			
ANR	194474	ShiftExpression	ht -> nTableSize >> 1		194238	0		>>			
ANR	194475	PtrMemberAccess	ht -> nTableSize		194238	0					
ANR	194476	Identifier	ht		194238	0					
ANR	194477	Identifier	nTableSize		194238	1					
ANR	194478	PrimaryExpression	1		194238	1					
ANR	194479	PtrMemberAccess	ht -> nNumOfElements		194238	1					
ANR	194480	Identifier	ht		194238	0					
ANR	194481	Identifier	nNumOfElements		194238	1					
ANR	194482	CompoundStatement		37:57:982:982	194238	1					
ANR	194483	ExpressionStatement	zend_hash_packed_grow ( ht )	724:3:22151:22176	194238	0	True				
ANR	194484	CallExpression	zend_hash_packed_grow ( ht )		194238	0					
ANR	194485	Callee	zend_hash_packed_grow		194238	0					
ANR	194486	Identifier	zend_hash_packed_grow		194238	0					
ANR	194487	ArgumentList	ht		194238	1					
ANR	194488	Argument	ht		194238	0					
ANR	194489	Identifier	ht		194238	0					
ANR	194490	ExpressionStatement	p = ht -> arData + h	725:3:22181:22199	194238	1	True				
ANR	194491	AssignmentExpression	p = ht -> arData + h		194238	0		=			
ANR	194492	Identifier	p		194238	0					
ANR	194493	AdditiveExpression	ht -> arData + h		194238	1		+			
ANR	194494	PtrMemberAccess	ht -> arData		194238	0					
ANR	194495	Identifier	ht		194238	0					
ANR	194496	Identifier	arData		194238	1					
ANR	194497	Identifier	h		194238	1					
ANR	194498	ElseStatement	else		194238	0					
ANR	194499	CompoundStatement		40:9:1046:1046	194238	0					
ANR	194500	GotoStatement	goto convert_to_hash ;	727:3:22215:22235	194238	0	True				
ANR	194501	Identifier	convert_to_hash		194238	0					
ANR	194502	Label	add_to_packed :	730:0:22242:22255	194238	1	True				
ANR	194503	Identifier	add_to_packed		194238	0					
ANR	194504	ExpressionStatement	HANDLE_BLOCK_INTERRUPTIONS ( )	731:2:22259:22287	194238	2	True				
ANR	194505	CallExpression	HANDLE_BLOCK_INTERRUPTIONS ( )		194238	0					
ANR	194506	Callee	HANDLE_BLOCK_INTERRUPTIONS		194238	0					
ANR	194507	Identifier	HANDLE_BLOCK_INTERRUPTIONS		194238	0					
ANR	194508	ArgumentList			194238	1					
ANR	194509	IfStatement	if ( ( flag & ( HASH_ADD_NEW | HASH_ADD_NEXT ) ) == ( HASH_ADD_NEW | HASH_ADD_NEXT ) )		194238	3					
ANR	194510	Condition	( flag & ( HASH_ADD_NEW | HASH_ADD_NEXT ) ) == ( HASH_ADD_NEW | HASH_ADD_NEXT )	733:6:22347:22415	194238	0	True				
ANR	194511	EqualityExpression	( flag & ( HASH_ADD_NEW | HASH_ADD_NEXT ) ) == ( HASH_ADD_NEW | HASH_ADD_NEXT )		194238	0		==			
ANR	194512	BitAndExpression	flag & ( HASH_ADD_NEW | HASH_ADD_NEXT )		194238	0		&			
ANR	194513	Identifier	flag		194238	0					
ANR	194514	InclusiveOrExpression	HASH_ADD_NEW | HASH_ADD_NEXT		194238	1		|			
ANR	194515	Identifier	HASH_ADD_NEW		194238	0					
ANR	194516	Identifier	HASH_ADD_NEXT		194238	1					
ANR	194517	InclusiveOrExpression	HASH_ADD_NEW | HASH_ADD_NEXT		194238	1		|			
ANR	194518	Identifier	HASH_ADD_NEW		194238	0					
ANR	194519	Identifier	HASH_ADD_NEXT		194238	1					
ANR	194520	CompoundStatement		47:77:1254:1254	194238	1					
ANR	194521	ExpressionStatement	ht -> nNumUsed = h + 1	734:3:22423:22443	194238	0	True				
ANR	194522	AssignmentExpression	ht -> nNumUsed = h + 1		194238	0		=			
ANR	194523	PtrMemberAccess	ht -> nNumUsed		194238	0					
ANR	194524	Identifier	ht		194238	0					
ANR	194525	Identifier	nNumUsed		194238	1					
ANR	194526	AdditiveExpression	h + 1		194238	1		+			
ANR	194527	Identifier	h		194238	0					
ANR	194528	PrimaryExpression	1		194238	1					
ANR	194529	ElseStatement	else		194238	0					
ANR	194530	IfStatement	if ( h >= ht -> nNumUsed )		194238	0					
ANR	194531	Condition	h >= ht -> nNumUsed	735:13:22458:22474	194238	0	True				
ANR	194532	RelationalExpression	h >= ht -> nNumUsed		194238	0		>=			
ANR	194533	Identifier	h		194238	0					
ANR	194534	PtrMemberAccess	ht -> nNumUsed		194238	1					
ANR	194535	Identifier	ht		194238	0					
ANR	194536	Identifier	nNumUsed		194238	1					
ANR	194537	CompoundStatement		49:32:1313:1313	194238	1					
ANR	194538	IfStatement	if ( h > ht -> nNumUsed )		194238	0					
ANR	194539	Condition	h > ht -> nNumUsed	736:7:22486:22501	194238	0	True				
ANR	194540	RelationalExpression	h > ht -> nNumUsed		194238	0		>			
ANR	194541	Identifier	h		194238	0					
ANR	194542	PtrMemberAccess	ht -> nNumUsed		194238	1					
ANR	194543	Identifier	ht		194238	0					
ANR	194544	Identifier	nNumUsed		194238	1					
ANR	194545	CompoundStatement		51:4:1346:1383	194238	1					
ANR	194546	IdentifierDeclStatement	Bucket * q = ht -> arData + ht -> nNumUsed ;	737:4:22510:22547	194238	0	True				
ANR	194547	IdentifierDecl	* q = ht -> arData + ht -> nNumUsed		194238	0					
ANR	194548	IdentifierDeclType	Bucket *		194238	0					
ANR	194549	Identifier	q		194238	1					
ANR	194550	AssignmentExpression	* q = ht -> arData + ht -> nNumUsed		194238	2		=			
ANR	194551	Identifier	q		194238	0					
ANR	194552	AdditiveExpression	ht -> arData + ht -> nNumUsed		194238	1		+			
ANR	194553	PtrMemberAccess	ht -> arData		194238	0					
ANR	194554	Identifier	ht		194238	0					
ANR	194555	Identifier	arData		194238	1					
ANR	194556	PtrMemberAccess	ht -> nNumUsed		194238	1					
ANR	194557	Identifier	ht		194238	0					
ANR	194558	Identifier	nNumUsed		194238	1					
ANR	194559	WhileStatement	while ( q != p )		194238	1					
ANR	194560	Condition	q != p	738:11:22560:22565	194238	0	True				
ANR	194561	EqualityExpression	q != p		194238	0		!=			
ANR	194562	Identifier	q		194238	0					
ANR	194563	Identifier	p		194238	1					
ANR	194564	CompoundStatement		52:19:1404:1404	194238	1					
ANR	194565	ExpressionStatement	ZVAL_UNDEF ( & q -> val )	739:5:22575:22594	194238	0	True				
ANR	194566	CallExpression	ZVAL_UNDEF ( & q -> val )		194238	0					
ANR	194567	Callee	ZVAL_UNDEF		194238	0					
ANR	194568	Identifier	ZVAL_UNDEF		194238	0					
ANR	194569	ArgumentList	& q -> val		194238	1					
ANR	194570	Argument	& q -> val		194238	0					
ANR	194571	UnaryOperationExpression	& q -> val		194238	0					
ANR	194572	UnaryOperator	&		194238	0					
ANR	194573	PtrMemberAccess	q -> val		194238	1					
ANR	194574	Identifier	q		194238	0					
ANR	194575	Identifier	val		194238	1					
ANR	194576	ExpressionStatement	q ++	740:5:22601:22604	194238	1	True				
ANR	194577	PostIncDecOperationExpression	q ++		194238	0					
ANR	194578	Identifier	q		194238	0					
ANR	194579	IncDec	++		194238	1					
ANR	194580	ExpressionStatement	ht -> nNumUsed = h + 1	743:3:22620:22640	194238	1	True				
ANR	194581	AssignmentExpression	ht -> nNumUsed = h + 1		194238	0		=			
ANR	194582	PtrMemberAccess	ht -> nNumUsed		194238	0					
ANR	194583	Identifier	ht		194238	0					
ANR	194584	Identifier	nNumUsed		194238	1					
ANR	194585	AdditiveExpression	h + 1		194238	1		+			
ANR	194586	Identifier	h		194238	0					
ANR	194587	PrimaryExpression	1		194238	1					
ANR	194588	ExpressionStatement	ht -> nNumOfElements ++	745:2:22648:22668	194238	4	True				
ANR	194589	PostIncDecOperationExpression	ht -> nNumOfElements ++		194238	0					
ANR	194590	PtrMemberAccess	ht -> nNumOfElements		194238	0					
ANR	194591	Identifier	ht		194238	0					
ANR	194592	Identifier	nNumOfElements		194238	1					
ANR	194593	IncDec	++		194238	1					
ANR	194594	IfStatement	if ( ht -> nInternalPointer == HT_INVALID_IDX )		194238	5					
ANR	194595	Condition	ht -> nInternalPointer == HT_INVALID_IDX	746:6:22676:22713	194238	0	True				
ANR	194596	EqualityExpression	ht -> nInternalPointer == HT_INVALID_IDX		194238	0		==			
ANR	194597	PtrMemberAccess	ht -> nInternalPointer		194238	0					
ANR	194598	Identifier	ht		194238	0					
ANR	194599	Identifier	nInternalPointer		194238	1					
ANR	194600	Identifier	HT_INVALID_IDX		194238	1					
ANR	194601	CompoundStatement		60:46:1552:1552	194238	1					
ANR	194602	ExpressionStatement	ht -> nInternalPointer = h	747:3:22721:22745	194238	0	True				
ANR	194603	AssignmentExpression	ht -> nInternalPointer = h		194238	0		=			
ANR	194604	PtrMemberAccess	ht -> nInternalPointer		194238	0					
ANR	194605	Identifier	ht		194238	0					
ANR	194606	Identifier	nInternalPointer		194238	1					
ANR	194607	Identifier	h		194238	1					
ANR	194608	ExpressionStatement	"zend_hash_iterators_update ( ht , HT_INVALID_IDX , h )"	749:2:22753:22802	194238	6	True				
ANR	194609	CallExpression	"zend_hash_iterators_update ( ht , HT_INVALID_IDX , h )"		194238	0					
ANR	194610	Callee	zend_hash_iterators_update		194238	0					
ANR	194611	Identifier	zend_hash_iterators_update		194238	0					
ANR	194612	ArgumentList	ht		194238	1					
ANR	194613	Argument	ht		194238	0					
ANR	194614	Identifier	ht		194238	0					
ANR	194615	Argument	HT_INVALID_IDX		194238	1					
ANR	194616	Identifier	HT_INVALID_IDX		194238	0					
ANR	194617	Argument	h		194238	2					
ANR	194618	Identifier	h		194238	0					
ANR	194619	IfStatement	if ( ( zend_long ) h >= ( zend_long ) ht -> nNextFreeElement )		194238	7					
ANR	194620	Condition	( zend_long ) h >= ( zend_long ) ht -> nNextFreeElement	750:6:22810:22856	194238	0	True				
ANR	194621	RelationalExpression	( zend_long ) h >= ( zend_long ) ht -> nNextFreeElement		194238	0		>=			
ANR	194622	CastExpression	( zend_long ) h		194238	0					
ANR	194623	CastTarget	zend_long		194238	0					
ANR	194624	Identifier	h		194238	1					
ANR	194625	CastExpression	( zend_long ) ht -> nNextFreeElement		194238	1					
ANR	194626	CastTarget	zend_long		194238	0					
ANR	194627	PtrMemberAccess	ht -> nNextFreeElement		194238	1					
ANR	194628	Identifier	ht		194238	0					
ANR	194629	Identifier	nNextFreeElement		194238	1					
ANR	194630	CompoundStatement		64:55:1695:1695	194238	1					
ANR	194631	ExpressionStatement	ht -> nNextFreeElement = h < ZEND_LONG_MAX ? h + 1 : ZEND_LONG_MAX	751:3:22864:22928	194238	0	True				
ANR	194632	AssignmentExpression	ht -> nNextFreeElement = h < ZEND_LONG_MAX ? h + 1 : ZEND_LONG_MAX		194238	0		=			
ANR	194633	PtrMemberAccess	ht -> nNextFreeElement		194238	0					
ANR	194634	Identifier	ht		194238	0					
ANR	194635	Identifier	nNextFreeElement		194238	1					
ANR	194636	ConditionalExpression	h < ZEND_LONG_MAX ? h + 1 : ZEND_LONG_MAX		194238	1					
ANR	194637	Condition	h < ZEND_LONG_MAX		194238	0					
ANR	194638	RelationalExpression	h < ZEND_LONG_MAX		194238	0		<			
ANR	194639	Identifier	h		194238	0					
ANR	194640	Identifier	ZEND_LONG_MAX		194238	1					
ANR	194641	AdditiveExpression	h + 1		194238	1		+			
ANR	194642	Identifier	h		194238	0					
ANR	194643	PrimaryExpression	1		194238	1					
ANR	194644	Identifier	ZEND_LONG_MAX		194238	2					
ANR	194645	ExpressionStatement	p -> h = h	753:2:22936:22944	194238	8	True				
ANR	194646	AssignmentExpression	p -> h = h		194238	0		=			
ANR	194647	PtrMemberAccess	p -> h		194238	0					
ANR	194648	Identifier	p		194238	0					
ANR	194649	Identifier	h		194238	1					
ANR	194650	Identifier	h		194238	1					
ANR	194651	ExpressionStatement	p -> key = NULL	754:2:22948:22961	194238	9	True				
ANR	194652	AssignmentExpression	p -> key = NULL		194238	0		=			
ANR	194653	PtrMemberAccess	p -> key		194238	0					
ANR	194654	Identifier	p		194238	0					
ANR	194655	Identifier	key		194238	1					
ANR	194656	Identifier	NULL		194238	1					
ANR	194657	ExpressionStatement	"ZVAL_COPY_VALUE ( & p -> val , pData )"	755:2:22965:22996	194238	10	True				
ANR	194658	CallExpression	"ZVAL_COPY_VALUE ( & p -> val , pData )"		194238	0					
ANR	194659	Callee	ZVAL_COPY_VALUE		194238	0					
ANR	194660	Identifier	ZVAL_COPY_VALUE		194238	0					
ANR	194661	ArgumentList	& p -> val		194238	1					
ANR	194662	Argument	& p -> val		194238	0					
ANR	194663	UnaryOperationExpression	& p -> val		194238	0					
ANR	194664	UnaryOperator	&		194238	0					
ANR	194665	PtrMemberAccess	p -> val		194238	1					
ANR	194666	Identifier	p		194238	0					
ANR	194667	Identifier	val		194238	1					
ANR	194668	Argument	pData		194238	1					
ANR	194669	Identifier	pData		194238	0					
ANR	194670	ExpressionStatement	HANDLE_UNBLOCK_INTERRUPTIONS ( )	757:2:23001:23031	194238	11	True				
ANR	194671	CallExpression	HANDLE_UNBLOCK_INTERRUPTIONS ( )		194238	0					
ANR	194672	Callee	HANDLE_UNBLOCK_INTERRUPTIONS		194238	0					
ANR	194673	Identifier	HANDLE_UNBLOCK_INTERRUPTIONS		194238	0					
ANR	194674	ArgumentList			194238	1					
ANR	194675	ReturnStatement	return & p -> val ;	759:2:23036:23050	194238	12	True				
ANR	194676	UnaryOperationExpression	& p -> val		194238	0					
ANR	194677	UnaryOperator	&		194238	0					
ANR	194678	PtrMemberAccess	p -> val		194238	1					
ANR	194679	Identifier	p		194238	0					
ANR	194680	Identifier	val		194238	1					
ANR	194681	Label	convert_to_hash :	761:0:23053:23068	194238	13	True				
ANR	194682	Identifier	convert_to_hash		194238	0					
ANR	194683	ExpressionStatement	zend_hash_packed_to_hash ( ht )	762:2:23072:23100	194238	14	True				
ANR	194684	CallExpression	zend_hash_packed_to_hash ( ht )		194238	0					
ANR	194685	Callee	zend_hash_packed_to_hash		194238	0					
ANR	194686	Identifier	zend_hash_packed_to_hash		194238	0					
ANR	194687	ArgumentList	ht		194238	1					
ANR	194688	Argument	ht		194238	0					
ANR	194689	Identifier	ht		194238	0					
ANR	194690	ElseStatement	else		194238	0					
ANR	194691	IfStatement	if ( ( flag & HASH_ADD_NEW ) == 0 )		194238	0					
ANR	194692	Condition	( flag & HASH_ADD_NEW ) == 0	763:12:23114:23139	194238	0	True				
ANR	194693	EqualityExpression	( flag & HASH_ADD_NEW ) == 0		194238	0		==			
ANR	194694	BitAndExpression	flag & HASH_ADD_NEW		194238	0		&			
ANR	194695	Identifier	flag		194238	0					
ANR	194696	Identifier	HASH_ADD_NEW		194238	1					
ANR	194697	PrimaryExpression	0		194238	1					
ANR	194698	CompoundStatement		77:40:1978:1978	194238	1					
ANR	194699	ExpressionStatement	"p = zend_hash_index_find_bucket ( ht , h )"	764:2:23146:23184	194238	0	True				
ANR	194700	AssignmentExpression	"p = zend_hash_index_find_bucket ( ht , h )"		194238	0		=			
ANR	194701	Identifier	p		194238	0					
ANR	194702	CallExpression	"zend_hash_index_find_bucket ( ht , h )"		194238	1					
ANR	194703	Callee	zend_hash_index_find_bucket		194238	0					
ANR	194704	Identifier	zend_hash_index_find_bucket		194238	0					
ANR	194705	ArgumentList	ht		194238	1					
ANR	194706	Argument	ht		194238	0					
ANR	194707	Identifier	ht		194238	0					
ANR	194708	Argument	h		194238	1					
ANR	194709	Identifier	h		194238	0					
ANR	194710	IfStatement	if ( p )		194238	1					
ANR	194711	Condition	p	765:6:23192:23192	194238	0	True				
ANR	194712	Identifier	p		194238	0					
ANR	194713	CompoundStatement		79:9:2031:2031	194238	1					
ANR	194714	IfStatement	if ( flag & HASH_ADD )		194238	0					
ANR	194715	Condition	flag & HASH_ADD	766:7:23204:23218	194238	0	True				
ANR	194716	BitAndExpression	flag & HASH_ADD		194238	0		&			
ANR	194717	Identifier	flag		194238	0					
ANR	194718	Identifier	HASH_ADD		194238	1					
ANR	194719	CompoundStatement		80:24:2057:2057	194238	1					
ANR	194720	ReturnStatement	return NULL ;	767:4:23227:23238	194238	0	True				
ANR	194721	Identifier	NULL		194238	0					
ANR	194722	ExpressionStatement	ZEND_ASSERT ( & p -> val != pData )	769:3:23248:23277	194238	1	True				
ANR	194723	CallExpression	ZEND_ASSERT ( & p -> val != pData )		194238	0					
ANR	194724	Callee	ZEND_ASSERT		194238	0					
ANR	194725	Identifier	ZEND_ASSERT		194238	0					
ANR	194726	ArgumentList	& p -> val != pData		194238	1					
ANR	194727	Argument	& p -> val != pData		194238	0					
ANR	194728	EqualityExpression	& p -> val != pData		194238	0		!=			
ANR	194729	UnaryOperationExpression	& p -> val		194238	0					
ANR	194730	UnaryOperator	&		194238	0					
ANR	194731	PtrMemberAccess	p -> val		194238	1					
ANR	194732	Identifier	p		194238	0					
ANR	194733	Identifier	val		194238	1					
ANR	194734	Identifier	pData		194238	1					
ANR	194735	ExpressionStatement	HANDLE_BLOCK_INTERRUPTIONS ( )	770:3:23282:23310	194238	2	True				
ANR	194736	CallExpression	HANDLE_BLOCK_INTERRUPTIONS ( )		194238	0					
ANR	194737	Callee	HANDLE_BLOCK_INTERRUPTIONS		194238	0					
ANR	194738	Identifier	HANDLE_BLOCK_INTERRUPTIONS		194238	0					
ANR	194739	ArgumentList			194238	1					
ANR	194740	IfStatement	if ( ht -> pDestructor )		194238	3					
ANR	194741	Condition	ht -> pDestructor	771:7:23319:23333	194238	0	True				
ANR	194742	PtrMemberAccess	ht -> pDestructor		194238	0					
ANR	194743	Identifier	ht		194238	0					
ANR	194744	Identifier	pDestructor		194238	1					
ANR	194745	CompoundStatement		85:24:2172:2172	194238	1					
ANR	194746	ExpressionStatement	ht -> pDestructor ( & p -> val )	772:4:23342:23366	194238	0	True				
ANR	194747	CallExpression	ht -> pDestructor ( & p -> val )		194238	0					
ANR	194748	Callee	ht -> pDestructor		194238	0					
ANR	194749	PtrMemberAccess	ht -> pDestructor		194238	0					
ANR	194750	Identifier	ht		194238	0					
ANR	194751	Identifier	pDestructor		194238	1					
ANR	194752	ArgumentList	& p -> val		194238	1					
ANR	194753	Argument	& p -> val		194238	0					
ANR	194754	UnaryOperationExpression	& p -> val		194238	0					
ANR	194755	UnaryOperator	&		194238	0					
ANR	194756	PtrMemberAccess	p -> val		194238	1					
ANR	194757	Identifier	p		194238	0					
ANR	194758	Identifier	val		194238	1					
ANR	194759	ExpressionStatement	"ZVAL_COPY_VALUE ( & p -> val , pData )"	774:3:23376:23407	194238	4	True				
ANR	194760	CallExpression	"ZVAL_COPY_VALUE ( & p -> val , pData )"		194238	0					
ANR	194761	Callee	ZVAL_COPY_VALUE		194238	0					
ANR	194762	Identifier	ZVAL_COPY_VALUE		194238	0					
ANR	194763	ArgumentList	& p -> val		194238	1					
ANR	194764	Argument	& p -> val		194238	0					
ANR	194765	UnaryOperationExpression	& p -> val		194238	0					
ANR	194766	UnaryOperator	&		194238	0					
ANR	194767	PtrMemberAccess	p -> val		194238	1					
ANR	194768	Identifier	p		194238	0					
ANR	194769	Identifier	val		194238	1					
ANR	194770	Argument	pData		194238	1					
ANR	194771	Identifier	pData		194238	0					
ANR	194772	ExpressionStatement	HANDLE_UNBLOCK_INTERRUPTIONS ( )	775:3:23412:23442	194238	5	True				
ANR	194773	CallExpression	HANDLE_UNBLOCK_INTERRUPTIONS ( )		194238	0					
ANR	194774	Callee	HANDLE_UNBLOCK_INTERRUPTIONS		194238	0					
ANR	194775	Identifier	HANDLE_UNBLOCK_INTERRUPTIONS		194238	0					
ANR	194776	ArgumentList			194238	1					
ANR	194777	IfStatement	if ( ( zend_long ) h >= ( zend_long ) ht -> nNextFreeElement )		194238	6					
ANR	194778	Condition	( zend_long ) h >= ( zend_long ) ht -> nNextFreeElement	776:7:23451:23497	194238	0	True				
ANR	194779	RelationalExpression	( zend_long ) h >= ( zend_long ) ht -> nNextFreeElement		194238	0		>=			
ANR	194780	CastExpression	( zend_long ) h		194238	0					
ANR	194781	CastTarget	zend_long		194238	0					
ANR	194782	Identifier	h		194238	1					
ANR	194783	CastExpression	( zend_long ) ht -> nNextFreeElement		194238	1					
ANR	194784	CastTarget	zend_long		194238	0					
ANR	194785	PtrMemberAccess	ht -> nNextFreeElement		194238	1					
ANR	194786	Identifier	ht		194238	0					
ANR	194787	Identifier	nNextFreeElement		194238	1					
ANR	194788	CompoundStatement		90:56:2336:2336	194238	1					
ANR	194789	ExpressionStatement	ht -> nNextFreeElement = h < ZEND_LONG_MAX ? h + 1 : ZEND_LONG_MAX	777:4:23506:23570	194238	0	True				
ANR	194790	AssignmentExpression	ht -> nNextFreeElement = h < ZEND_LONG_MAX ? h + 1 : ZEND_LONG_MAX		194238	0		=			
ANR	194791	PtrMemberAccess	ht -> nNextFreeElement		194238	0					
ANR	194792	Identifier	ht		194238	0					
ANR	194793	Identifier	nNextFreeElement		194238	1					
ANR	194794	ConditionalExpression	h < ZEND_LONG_MAX ? h + 1 : ZEND_LONG_MAX		194238	1					
ANR	194795	Condition	h < ZEND_LONG_MAX		194238	0					
ANR	194796	RelationalExpression	h < ZEND_LONG_MAX		194238	0		<			
ANR	194797	Identifier	h		194238	0					
ANR	194798	Identifier	ZEND_LONG_MAX		194238	1					
ANR	194799	AdditiveExpression	h + 1		194238	1		+			
ANR	194800	Identifier	h		194238	0					
ANR	194801	PrimaryExpression	1		194238	1					
ANR	194802	Identifier	ZEND_LONG_MAX		194238	2					
ANR	194803	ReturnStatement	return & p -> val ;	779:3:23580:23594	194238	7	True				
ANR	194804	UnaryOperationExpression	& p -> val		194238	0					
ANR	194805	UnaryOperator	&		194238	0					
ANR	194806	PtrMemberAccess	p -> val		194238	1					
ANR	194807	Identifier	p		194238	0					
ANR	194808	Identifier	val		194238	1					
ANR	194809	ExpressionStatement	ZEND_HASH_IF_FULL_DO_RESIZE ( ht )	783:1:23605:23636	194238	6	True				
ANR	194810	CallExpression	ZEND_HASH_IF_FULL_DO_RESIZE ( ht )		194238	0					
ANR	194811	Callee	ZEND_HASH_IF_FULL_DO_RESIZE		194238	0					
ANR	194812	Identifier	ZEND_HASH_IF_FULL_DO_RESIZE		194238	0					
ANR	194813	ArgumentList	ht		194238	1					
ANR	194814	Argument	ht		194238	0					
ANR	194815	Identifier	ht		194238	0					
ANR	194816	Label	add_to_hash :	785:0:23683:23694	194238	7	True				
ANR	194817	Identifier	add_to_hash		194238	0					
ANR	194818	ExpressionStatement	HANDLE_BLOCK_INTERRUPTIONS ( )	786:1:23697:23725	194238	8	True				
ANR	194819	CallExpression	HANDLE_BLOCK_INTERRUPTIONS ( )		194238	0					
ANR	194820	Callee	HANDLE_BLOCK_INTERRUPTIONS		194238	0					
ANR	194821	Identifier	HANDLE_BLOCK_INTERRUPTIONS		194238	0					
ANR	194822	ArgumentList			194238	1					
ANR	194823	ExpressionStatement	idx = ht -> nNumUsed ++	787:1:23728:23748	194238	9	True				
ANR	194824	AssignmentExpression	idx = ht -> nNumUsed ++		194238	0		=			
ANR	194825	Identifier	idx		194238	0					
ANR	194826	PostIncDecOperationExpression	ht -> nNumUsed ++		194238	1					
ANR	194827	PtrMemberAccess	ht -> nNumUsed		194238	0					
ANR	194828	Identifier	ht		194238	0					
ANR	194829	Identifier	nNumUsed		194238	1					
ANR	194830	IncDec	++		194238	1					
ANR	194831	ExpressionStatement	ht -> nNumOfElements ++	788:1:23751:23771	194238	10	True				
ANR	194832	PostIncDecOperationExpression	ht -> nNumOfElements ++		194238	0					
ANR	194833	PtrMemberAccess	ht -> nNumOfElements		194238	0					
ANR	194834	Identifier	ht		194238	0					
ANR	194835	Identifier	nNumOfElements		194238	1					
ANR	194836	IncDec	++		194238	1					
ANR	194837	IfStatement	if ( ht -> nInternalPointer == HT_INVALID_IDX )		194238	11					
ANR	194838	Condition	ht -> nInternalPointer == HT_INVALID_IDX	789:5:23778:23815	194238	0	True				
ANR	194839	EqualityExpression	ht -> nInternalPointer == HT_INVALID_IDX		194238	0		==			
ANR	194840	PtrMemberAccess	ht -> nInternalPointer		194238	0					
ANR	194841	Identifier	ht		194238	0					
ANR	194842	Identifier	nInternalPointer		194238	1					
ANR	194843	Identifier	HT_INVALID_IDX		194238	1					
ANR	194844	CompoundStatement		103:45:2654:2654	194238	1					
ANR	194845	ExpressionStatement	ht -> nInternalPointer = idx	790:2:23822:23848	194238	0	True				
ANR	194846	AssignmentExpression	ht -> nInternalPointer = idx		194238	0		=			
ANR	194847	PtrMemberAccess	ht -> nInternalPointer		194238	0					
ANR	194848	Identifier	ht		194238	0					
ANR	194849	Identifier	nInternalPointer		194238	1					
ANR	194850	Identifier	idx		194238	1					
ANR	194851	ExpressionStatement	"zend_hash_iterators_update ( ht , HT_INVALID_IDX , idx )"	792:1:23854:23905	194238	12	True				
ANR	194852	CallExpression	"zend_hash_iterators_update ( ht , HT_INVALID_IDX , idx )"		194238	0					
ANR	194853	Callee	zend_hash_iterators_update		194238	0					
ANR	194854	Identifier	zend_hash_iterators_update		194238	0					
ANR	194855	ArgumentList	ht		194238	1					
ANR	194856	Argument	ht		194238	0					
ANR	194857	Identifier	ht		194238	0					
ANR	194858	Argument	HT_INVALID_IDX		194238	1					
ANR	194859	Identifier	HT_INVALID_IDX		194238	0					
ANR	194860	Argument	idx		194238	2					
ANR	194861	Identifier	idx		194238	0					
ANR	194862	IfStatement	if ( ( zend_long ) h >= ( zend_long ) ht -> nNextFreeElement )		194238	13					
ANR	194863	Condition	( zend_long ) h >= ( zend_long ) ht -> nNextFreeElement	793:5:23912:23958	194238	0	True				
ANR	194864	RelationalExpression	( zend_long ) h >= ( zend_long ) ht -> nNextFreeElement		194238	0		>=			
ANR	194865	CastExpression	( zend_long ) h		194238	0					
ANR	194866	CastTarget	zend_long		194238	0					
ANR	194867	Identifier	h		194238	1					
ANR	194868	CastExpression	( zend_long ) ht -> nNextFreeElement		194238	1					
ANR	194869	CastTarget	zend_long		194238	0					
ANR	194870	PtrMemberAccess	ht -> nNextFreeElement		194238	1					
ANR	194871	Identifier	ht		194238	0					
ANR	194872	Identifier	nNextFreeElement		194238	1					
ANR	194873	CompoundStatement		107:54:2797:2797	194238	1					
ANR	194874	ExpressionStatement	ht -> nNextFreeElement = h < ZEND_LONG_MAX ? h + 1 : ZEND_LONG_MAX	794:2:23965:24029	194238	0	True				
ANR	194875	AssignmentExpression	ht -> nNextFreeElement = h < ZEND_LONG_MAX ? h + 1 : ZEND_LONG_MAX		194238	0		=			
ANR	194876	PtrMemberAccess	ht -> nNextFreeElement		194238	0					
ANR	194877	Identifier	ht		194238	0					
ANR	194878	Identifier	nNextFreeElement		194238	1					
ANR	194879	ConditionalExpression	h < ZEND_LONG_MAX ? h + 1 : ZEND_LONG_MAX		194238	1					
ANR	194880	Condition	h < ZEND_LONG_MAX		194238	0					
ANR	194881	RelationalExpression	h < ZEND_LONG_MAX		194238	0		<			
ANR	194882	Identifier	h		194238	0					
ANR	194883	Identifier	ZEND_LONG_MAX		194238	1					
ANR	194884	AdditiveExpression	h + 1		194238	1		+			
ANR	194885	Identifier	h		194238	0					
ANR	194886	PrimaryExpression	1		194238	1					
ANR	194887	Identifier	ZEND_LONG_MAX		194238	2					
ANR	194888	ExpressionStatement	p = ht -> arData + idx	796:1:24035:24055	194238	14	True				
ANR	194889	AssignmentExpression	p = ht -> arData + idx		194238	0		=			
ANR	194890	Identifier	p		194238	0					
ANR	194891	AdditiveExpression	ht -> arData + idx		194238	1		+			
ANR	194892	PtrMemberAccess	ht -> arData		194238	0					
ANR	194893	Identifier	ht		194238	0					
ANR	194894	Identifier	arData		194238	1					
ANR	194895	Identifier	idx		194238	1					
ANR	194896	ExpressionStatement	p -> h = h	797:1:24058:24066	194238	15	True				
ANR	194897	AssignmentExpression	p -> h = h		194238	0		=			
ANR	194898	PtrMemberAccess	p -> h		194238	0					
ANR	194899	Identifier	p		194238	0					
ANR	194900	Identifier	h		194238	1					
ANR	194901	Identifier	h		194238	1					
ANR	194902	ExpressionStatement	p -> key = NULL	798:1:24069:24082	194238	16	True				
ANR	194903	AssignmentExpression	p -> key = NULL		194238	0		=			
ANR	194904	PtrMemberAccess	p -> key		194238	0					
ANR	194905	Identifier	p		194238	0					
ANR	194906	Identifier	key		194238	1					
ANR	194907	Identifier	NULL		194238	1					
ANR	194908	ExpressionStatement	nIndex = h | ht -> nTableMask	799:1:24085:24112	194238	17	True				
ANR	194909	AssignmentExpression	nIndex = h | ht -> nTableMask		194238	0		=			
ANR	194910	Identifier	nIndex		194238	0					
ANR	194911	InclusiveOrExpression	h | ht -> nTableMask		194238	1		|			
ANR	194912	Identifier	h		194238	0					
ANR	194913	PtrMemberAccess	ht -> nTableMask		194238	1					
ANR	194914	Identifier	ht		194238	0					
ANR	194915	Identifier	nTableMask		194238	1					
ANR	194916	ExpressionStatement	"ZVAL_COPY_VALUE ( & p -> val , pData )"	800:1:24115:24146	194238	18	True				
ANR	194917	CallExpression	"ZVAL_COPY_VALUE ( & p -> val , pData )"		194238	0					
ANR	194918	Callee	ZVAL_COPY_VALUE		194238	0					
ANR	194919	Identifier	ZVAL_COPY_VALUE		194238	0					
ANR	194920	ArgumentList	& p -> val		194238	1					
ANR	194921	Argument	& p -> val		194238	0					
ANR	194922	UnaryOperationExpression	& p -> val		194238	0					
ANR	194923	UnaryOperator	&		194238	0					
ANR	194924	PtrMemberAccess	p -> val		194238	1					
ANR	194925	Identifier	p		194238	0					
ANR	194926	Identifier	val		194238	1					
ANR	194927	Argument	pData		194238	1					
ANR	194928	Identifier	pData		194238	0					
ANR	194929	ExpressionStatement	"Z_NEXT ( p -> val ) = HT_HASH ( ht , nIndex )"	801:1:24149:24185	194238	19	True				
ANR	194930	AssignmentExpression	"Z_NEXT ( p -> val ) = HT_HASH ( ht , nIndex )"		194238	0		=			
ANR	194931	CallExpression	Z_NEXT ( p -> val )		194238	0					
ANR	194932	Callee	Z_NEXT		194238	0					
ANR	194933	Identifier	Z_NEXT		194238	0					
ANR	194934	ArgumentList	p -> val		194238	1					
ANR	194935	Argument	p -> val		194238	0					
ANR	194936	PtrMemberAccess	p -> val		194238	0					
ANR	194937	Identifier	p		194238	0					
ANR	194938	Identifier	val		194238	1					
ANR	194939	CallExpression	"HT_HASH ( ht , nIndex )"		194238	1					
ANR	194940	Callee	HT_HASH		194238	0					
ANR	194941	Identifier	HT_HASH		194238	0					
ANR	194942	ArgumentList	ht		194238	1					
ANR	194943	Argument	ht		194238	0					
ANR	194944	Identifier	ht		194238	0					
ANR	194945	Argument	nIndex		194238	1					
ANR	194946	Identifier	nIndex		194238	0					
ANR	194947	ExpressionStatement	"HT_HASH ( ht , nIndex ) = HT_IDX_TO_HASH ( idx )"	802:1:24188:24229	194238	20	True				
ANR	194948	AssignmentExpression	"HT_HASH ( ht , nIndex ) = HT_IDX_TO_HASH ( idx )"		194238	0		=			
ANR	194949	CallExpression	"HT_HASH ( ht , nIndex )"		194238	0					
ANR	194950	Callee	HT_HASH		194238	0					
ANR	194951	Identifier	HT_HASH		194238	0					
ANR	194952	ArgumentList	ht		194238	1					
ANR	194953	Argument	ht		194238	0					
ANR	194954	Identifier	ht		194238	0					
ANR	194955	Argument	nIndex		194238	1					
ANR	194956	Identifier	nIndex		194238	0					
ANR	194957	CallExpression	HT_IDX_TO_HASH ( idx )		194238	1					
ANR	194958	Callee	HT_IDX_TO_HASH		194238	0					
ANR	194959	Identifier	HT_IDX_TO_HASH		194238	0					
ANR	194960	ArgumentList	idx		194238	1					
ANR	194961	Argument	idx		194238	0					
ANR	194962	Identifier	idx		194238	0					
ANR	194963	ExpressionStatement	HANDLE_UNBLOCK_INTERRUPTIONS ( )	803:1:24232:24262	194238	21	True				
ANR	194964	CallExpression	HANDLE_UNBLOCK_INTERRUPTIONS ( )		194238	0					
ANR	194965	Callee	HANDLE_UNBLOCK_INTERRUPTIONS		194238	0					
ANR	194966	Identifier	HANDLE_UNBLOCK_INTERRUPTIONS		194238	0					
ANR	194967	ArgumentList			194238	1					
ANR	194968	ReturnStatement	return & p -> val ;	805:1:24266:24280	194238	22	True				
ANR	194969	UnaryOperationExpression	& p -> val		194238	0					
ANR	194970	UnaryOperator	&		194238	0					
ANR	194971	PtrMemberAccess	p -> val		194238	1					
ANR	194972	Identifier	p		194238	0					
ANR	194973	Identifier	val		194238	1					
ANR	194974	ReturnType	static zend_always_inline zval *		194238	1					
ANR	194975	Identifier	_zend_hash_index_add_or_update_i		194238	2					
ANR	194976	ParameterList	"HashTable * ht , zend_ulong h , zval * pData , uint32_t flag ZEND_FILE_LINE_DC"		194238	3					
ANR	194977	Parameter	HashTable * ht	686:65:21088:21100	194238	0	True				
ANR	194978	ParameterType	HashTable *		194238	0					
ANR	194979	Identifier	ht		194238	1					
ANR	194980	Parameter	zend_ulong h	686:80:21103:21114	194238	1	True				
ANR	194981	ParameterType	zend_ulong		194238	0					
ANR	194982	Identifier	h		194238	1					
ANR	194983	Parameter	zval * pData	686:94:21117:21127	194238	2	True				
ANR	194984	ParameterType	zval *		194238	0					
ANR	194985	Identifier	pData		194238	1					
ANR	194986	Parameter	uint32_t flag ZEND_FILE_LINE_DC	686:107:21130:21160	194238	3	True				
ANR	194987	ParameterType	uint32_t flag		194238	0					
ANR	194988	Identifier	ZEND_FILE_LINE_DC		194238	1					
ANR	194989	CFGEntryNode	ENTRY		194238		True				
ANR	194990	CFGExitNode	EXIT		194238		True				
ANR	194991	Symbol	flag		194238						
ANR	194992	Symbol	ZEND_LONG_MAX		194238						
ANR	194993	Symbol	ht -> nTableMask		194238						
ANR	194994	Symbol	HASH_FLAG_PACKED		194238						
ANR	194995	Symbol	ht -> u		194238						
ANR	194996	Symbol	ht -> pDestructor		194238						
ANR	194997	Symbol	ht -> arData		194238						
ANR	194998	Symbol	Z_TYPE		194238						
ANR	194999	Symbol	ht -> u . flags		194238						
ANR	195000	Symbol	Z_NEXT		194238						
ANR	195001	Symbol	ht		194238						
ANR	195002	Symbol	UNEXPECTED		194238						
ANR	195003	Symbol	* ht		194238						
ANR	195004	Symbol	HT_HASH		194238						
ANR	195005	Symbol	HASH_FLAG_INITIALIZED		194238						
ANR	195006	Symbol	ZEND_FILE_LINE_DC		194238						
ANR	195007	Symbol	ht -> nTableSize		194238						
ANR	195008	Symbol	GC_REFCOUNT		194238						
ANR	195009	Symbol	IS_UNDEF		194238						
ANR	195010	Symbol	HASH_ADD		194238						
ANR	195011	Symbol	ht -> nNumOfElements		194238						
ANR	195012	Symbol	HASH_ADD_NEW		194238						
ANR	195013	Symbol	p -> h		194238						
ANR	195014	Symbol	& p -> val		194238						
ANR	195015	Symbol	& q -> val		194238						
ANR	195016	Symbol	HT_INVALID_IDX		194238						
ANR	195017	Symbol	ht -> nInternalPointer		194238						
ANR	195018	Symbol	NULL		194238						
ANR	195019	Symbol	HASH_ADD_NEXT		194238						
ANR	195020	Symbol	h		194238						
ANR	195021	Symbol	nIndex		194238						
ANR	195022	Symbol	ht -> nNextFreeElement		194238						
ANR	195023	Symbol	p -> val		194238						
ANR	195024	Symbol	HT_IDX_TO_HASH		194238						
ANR	195025	Symbol	p -> key		194238						
ANR	195026	Symbol	pData		194238						
ANR	195027	Symbol	p		194238						
ANR	195028	Symbol	q		194238						
ANR	195029	Symbol	zend_hash_index_find_bucket		194238						
ANR	195030	Symbol	* p		194238						
ANR	195031	Symbol	idx		194238						
ANR	195032	Symbol	EXPECTED		194238						
ANR	195033	Symbol	ht -> nNumUsed		194238						
ANR	195034	Function	_zend_hash_index_add_or_update	808:15:24300:24508							
ANR	195035	FunctionDef	"_zend_hash_index_add_or_update (HashTable * ht , zend_ulong h , zval * pData , uint32_t flag ZEND_FILE_LINE_DC)"		195034	0					
ANR	195036	CompoundStatement		809:0:24420:24508	195034	0					
ANR	195037	Statement	return	810:1:24423:24428	195034	0	True				
ANR	195038	Statement	_zend_hash_index_add_or_update_i	810:8:24430:24461	195034	1	True				
ANR	195039	Statement	(	810:40:24462:24462	195034	2	True				
ANR	195040	Statement	ht	810:41:24463:24464	195034	3	True				
ANR	195041	Statement	","	810:43:24465:24465	195034	4	True				
ANR	195042	Statement	h	810:45:24467:24467	195034	5	True				
ANR	195043	Statement	","	810:46:24468:24468	195034	6	True				
ANR	195044	Statement	pData	810:48:24470:24474	195034	7	True				
ANR	195045	Statement	","	810:53:24475:24475	195034	8	True				
ANR	195046	Statement	flag	810:55:24477:24480	195034	9	True				
ANR	195047	Statement	ZEND_FILE_LINE_RELAY_CC	810:60:24482:24504	195034	10	True				
ANR	195048	Statement	)	810:83:24505:24505	195034	11	True				
ANR	195049	ExpressionStatement		810:84:24506:24506	195034	12	True				
ANR	195050	ReturnType	ZEND_FASTCALL		195034	1					
ANR	195051	Identifier	_zend_hash_index_add_or_update		195034	2					
ANR	195052	ParameterList	"HashTable * ht , zend_ulong h , zval * pData , uint32_t flag ZEND_FILE_LINE_DC"		195034	3					
ANR	195053	Parameter	HashTable * ht	808:60:24345:24357	195034	0	True				
ANR	195054	ParameterType	HashTable *		195034	0					
ANR	195055	Identifier	ht		195034	1					
ANR	195056	Parameter	zend_ulong h	808:75:24360:24371	195034	1	True				
ANR	195057	ParameterType	zend_ulong		195034	0					
ANR	195058	Identifier	h		195034	1					
ANR	195059	Parameter	zval * pData	808:89:24374:24384	195034	2	True				
ANR	195060	ParameterType	zval *		195034	0					
ANR	195061	Identifier	pData		195034	1					
ANR	195062	Parameter	uint32_t flag ZEND_FILE_LINE_DC	808:102:24387:24417	195034	3	True				
ANR	195063	ParameterType	uint32_t flag		195034	0					
ANR	195064	Identifier	ZEND_FILE_LINE_DC		195034	1					
ANR	195065	CFGEntryNode	ENTRY		195034		True				
ANR	195066	CFGExitNode	EXIT		195034		True				
ANR	195067	Symbol	pData		195034						
ANR	195068	Symbol	h		195034						
ANR	195069	Symbol	ZEND_FILE_LINE_DC		195034						
ANR	195070	Symbol	ht		195034						
ANR	195071	Function	zend_hash_do_resize	838:0:25638:26780							
ANR	195072	FunctionDef	zend_hash_do_resize (HashTable * ht)		195071	0					
ANR	195073	CompoundStatement		839:0:25699:26780	195071	0					
ANR	195074	ExpressionStatement	IS_CONSISTENT ( ht )	841:1:25703:25720	195071	0	True				
ANR	195075	CallExpression	IS_CONSISTENT ( ht )		195071	0					
ANR	195076	Callee	IS_CONSISTENT		195071	0					
ANR	195077	Identifier	IS_CONSISTENT		195071	0					
ANR	195078	ArgumentList	ht		195071	1					
ANR	195079	Argument	ht		195071	0					
ANR	195080	Identifier	ht		195071	0					
ANR	195081	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	842:1:25723:25754	195071	1	True				
ANR	195082	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		195071	0					
ANR	195083	Callee	HT_ASSERT		195071	0					
ANR	195084	Identifier	HT_ASSERT		195071	0					
ANR	195085	ArgumentList	GC_REFCOUNT ( ht ) == 1		195071	1					
ANR	195086	Argument	GC_REFCOUNT ( ht ) == 1		195071	0					
ANR	195087	EqualityExpression	GC_REFCOUNT ( ht ) == 1		195071	0		==			
ANR	195088	CallExpression	GC_REFCOUNT ( ht )		195071	0					
ANR	195089	Callee	GC_REFCOUNT		195071	0					
ANR	195090	Identifier	GC_REFCOUNT		195071	0					
ANR	195091	ArgumentList	ht		195071	1					
ANR	195092	Argument	ht		195071	0					
ANR	195093	Identifier	ht		195071	0					
ANR	195094	PrimaryExpression	1		195071	1					
ANR	195095	IfStatement	if ( ht -> nNumUsed > ht -> nNumOfElements + ( ht -> nNumOfElements >> 5 ) )		195071	2					
ANR	195096	Condition	ht -> nNumUsed > ht -> nNumOfElements + ( ht -> nNumOfElements >> 5 )	844:5:25762:25822	195071	0	True				
ANR	195097	RelationalExpression	ht -> nNumUsed > ht -> nNumOfElements + ( ht -> nNumOfElements >> 5 )		195071	0		>			
ANR	195098	PtrMemberAccess	ht -> nNumUsed		195071	0					
ANR	195099	Identifier	ht		195071	0					
ANR	195100	Identifier	nNumUsed		195071	1					
ANR	195101	AdditiveExpression	ht -> nNumOfElements + ( ht -> nNumOfElements >> 5 )		195071	1		+			
ANR	195102	PtrMemberAccess	ht -> nNumOfElements		195071	0					
ANR	195103	Identifier	ht		195071	0					
ANR	195104	Identifier	nNumOfElements		195071	1					
ANR	195105	ShiftExpression	ht -> nNumOfElements >> 5		195071	1		>>			
ANR	195106	PtrMemberAccess	ht -> nNumOfElements		195071	0					
ANR	195107	Identifier	ht		195071	0					
ANR	195108	Identifier	nNumOfElements		195071	1					
ANR	195109	PrimaryExpression	5		195071	1					
ANR	195110	CompoundStatement		6:68:125:125	195071	1					
ANR	195111	ExpressionStatement	HANDLE_BLOCK_INTERRUPTIONS ( )	845:2:25895:25923	195071	0	True				
ANR	195112	CallExpression	HANDLE_BLOCK_INTERRUPTIONS ( )		195071	0					
ANR	195113	Callee	HANDLE_BLOCK_INTERRUPTIONS		195071	0					
ANR	195114	Identifier	HANDLE_BLOCK_INTERRUPTIONS		195071	0					
ANR	195115	ArgumentList			195071	1					
ANR	195116	ExpressionStatement	zend_hash_rehash ( ht )	846:2:25927:25947	195071	1	True				
ANR	195117	CallExpression	zend_hash_rehash ( ht )		195071	0					
ANR	195118	Callee	zend_hash_rehash		195071	0					
ANR	195119	Identifier	zend_hash_rehash		195071	0					
ANR	195120	ArgumentList	ht		195071	1					
ANR	195121	Argument	ht		195071	0					
ANR	195122	Identifier	ht		195071	0					
ANR	195123	ExpressionStatement	HANDLE_UNBLOCK_INTERRUPTIONS ( )	847:2:25951:25981	195071	2	True				
ANR	195124	CallExpression	HANDLE_UNBLOCK_INTERRUPTIONS ( )		195071	0					
ANR	195125	Callee	HANDLE_UNBLOCK_INTERRUPTIONS		195071	0					
ANR	195126	Identifier	HANDLE_UNBLOCK_INTERRUPTIONS		195071	0					
ANR	195127	ArgumentList			195071	1					
ANR	195128	ElseStatement	else		195071	0					
ANR	195129	IfStatement	if ( ht -> nTableSize < HT_MAX_SIZE )		195071	0					
ANR	195130	Condition	ht -> nTableSize < HT_MAX_SIZE	848:12:25995:26022	195071	0	True				
ANR	195131	RelationalExpression	ht -> nTableSize < HT_MAX_SIZE		195071	0		<			
ANR	195132	PtrMemberAccess	ht -> nTableSize		195071	0					
ANR	195133	Identifier	ht		195071	0					
ANR	195134	Identifier	nTableSize		195071	1					
ANR	195135	Identifier	HT_MAX_SIZE		195071	1					
ANR	195136	CompoundStatement		13:2:467:499	195071	1					
ANR	195137	IdentifierDeclStatement	"void * new_data , * old_data = HT_GET_DATA_ADDR ( ht ) ;"	849:2:26063:26111	195071	0	True				
ANR	195138	IdentifierDecl	* new_data		195071	0					
ANR	195139	IdentifierDeclType	void *		195071	0					
ANR	195140	Identifier	new_data		195071	1					
ANR	195141	IdentifierDecl	* old_data = HT_GET_DATA_ADDR ( ht )		195071	1					
ANR	195142	IdentifierDeclType	void *		195071	0					
ANR	195143	Identifier	old_data		195071	1					
ANR	195144	AssignmentExpression	* old_data = HT_GET_DATA_ADDR ( ht )		195071	2		=			
ANR	195145	Identifier	old_data		195071	0					
ANR	195146	CallExpression	HT_GET_DATA_ADDR ( ht )		195071	1					
ANR	195147	Callee	HT_GET_DATA_ADDR		195071	0					
ANR	195148	Identifier	HT_GET_DATA_ADDR		195071	0					
ANR	195149	ArgumentList	ht		195071	1					
ANR	195150	Argument	ht		195071	0					
ANR	195151	Identifier	ht		195071	0					
ANR	195152	IdentifierDeclStatement	uint32_t nSize = ht -> nTableSize + ht -> nTableSize ;	850:2:26115:26163	195071	1	True				
ANR	195153	IdentifierDecl	nSize = ht -> nTableSize + ht -> nTableSize		195071	0					
ANR	195154	IdentifierDeclType	uint32_t		195071	0					
ANR	195155	Identifier	nSize		195071	1					
ANR	195156	AssignmentExpression	nSize = ht -> nTableSize + ht -> nTableSize		195071	2		=			
ANR	195157	Identifier	nSize		195071	0					
ANR	195158	AdditiveExpression	ht -> nTableSize + ht -> nTableSize		195071	1		+			
ANR	195159	PtrMemberAccess	ht -> nTableSize		195071	0					
ANR	195160	Identifier	ht		195071	0					
ANR	195161	Identifier	nTableSize		195071	1					
ANR	195162	PtrMemberAccess	ht -> nTableSize		195071	1					
ANR	195163	Identifier	ht		195071	0					
ANR	195164	Identifier	nTableSize		195071	1					
ANR	195165	IdentifierDeclStatement	Bucket * old_buckets = ht -> arData ;	851:2:26167:26199	195071	2	True				
ANR	195166	IdentifierDecl	* old_buckets = ht -> arData		195071	0					
ANR	195167	IdentifierDeclType	Bucket *		195071	0					
ANR	195168	Identifier	old_buckets		195071	1					
ANR	195169	AssignmentExpression	* old_buckets = ht -> arData		195071	2		=			
ANR	195170	Identifier	old_buckets		195071	0					
ANR	195171	PtrMemberAccess	ht -> arData		195071	1					
ANR	195172	Identifier	ht		195071	0					
ANR	195173	Identifier	arData		195071	1					
ANR	195174	ExpressionStatement	HANDLE_BLOCK_INTERRUPTIONS ( )	853:2:26204:26232	195071	3	True				
ANR	195175	CallExpression	HANDLE_BLOCK_INTERRUPTIONS ( )		195071	0					
ANR	195176	Callee	HANDLE_BLOCK_INTERRUPTIONS		195071	0					
ANR	195177	Identifier	HANDLE_BLOCK_INTERRUPTIONS		195071	0					
ANR	195178	ArgumentList			195071	1					
ANR	195179	ExpressionStatement	"new_data = pemalloc ( HT_SIZE_EX ( nSize , - nSize ) , ht -> u . flags & HASH_FLAG_PERSISTENT )"	854:2:26236:26318	195071	4	True				
ANR	195180	AssignmentExpression	"new_data = pemalloc ( HT_SIZE_EX ( nSize , - nSize ) , ht -> u . flags & HASH_FLAG_PERSISTENT )"		195071	0		=			
ANR	195181	Identifier	new_data		195071	0					
ANR	195182	CallExpression	"pemalloc ( HT_SIZE_EX ( nSize , - nSize ) , ht -> u . flags & HASH_FLAG_PERSISTENT )"		195071	1					
ANR	195183	Callee	pemalloc		195071	0					
ANR	195184	Identifier	pemalloc		195071	0					
ANR	195185	ArgumentList	"HT_SIZE_EX ( nSize , - nSize )"		195071	1					
ANR	195186	Argument	"HT_SIZE_EX ( nSize , - nSize )"		195071	0					
ANR	195187	CallExpression	"HT_SIZE_EX ( nSize , - nSize )"		195071	0					
ANR	195188	Callee	HT_SIZE_EX		195071	0					
ANR	195189	Identifier	HT_SIZE_EX		195071	0					
ANR	195190	ArgumentList	nSize		195071	1					
ANR	195191	Argument	nSize		195071	0					
ANR	195192	Identifier	nSize		195071	0					
ANR	195193	Argument	- nSize		195071	1					
ANR	195194	UnaryOperationExpression	- nSize		195071	0					
ANR	195195	UnaryOperator	-		195071	0					
ANR	195196	Identifier	nSize		195071	1					
ANR	195197	Argument	ht -> u . flags & HASH_FLAG_PERSISTENT		195071	1					
ANR	195198	BitAndExpression	ht -> u . flags & HASH_FLAG_PERSISTENT		195071	0		&			
ANR	195199	MemberAccess	ht -> u . flags		195071	0					
ANR	195200	PtrMemberAccess	ht -> u		195071	0					
ANR	195201	Identifier	ht		195071	0					
ANR	195202	Identifier	u		195071	1					
ANR	195203	Identifier	flags		195071	1					
ANR	195204	Identifier	HASH_FLAG_PERSISTENT		195071	1					
ANR	195205	ExpressionStatement	ht -> nTableSize = nSize	855:2:26322:26344	195071	5	True				
ANR	195206	AssignmentExpression	ht -> nTableSize = nSize		195071	0		=			
ANR	195207	PtrMemberAccess	ht -> nTableSize		195071	0					
ANR	195208	Identifier	ht		195071	0					
ANR	195209	Identifier	nTableSize		195071	1					
ANR	195210	Identifier	nSize		195071	1					
ANR	195211	ExpressionStatement	ht -> nTableMask = - ht -> nTableSize	856:2:26348:26380	195071	6	True				
ANR	195212	AssignmentExpression	ht -> nTableMask = - ht -> nTableSize		195071	0		=			
ANR	195213	PtrMemberAccess	ht -> nTableMask		195071	0					
ANR	195214	Identifier	ht		195071	0					
ANR	195215	Identifier	nTableMask		195071	1					
ANR	195216	UnaryOperationExpression	- ht -> nTableSize		195071	1					
ANR	195217	UnaryOperator	-		195071	0					
ANR	195218	PtrMemberAccess	ht -> nTableSize		195071	1					
ANR	195219	Identifier	ht		195071	0					
ANR	195220	Identifier	nTableSize		195071	1					
ANR	195221	ExpressionStatement	"HT_SET_DATA_ADDR ( ht , new_data )"	857:2:26384:26414	195071	7	True				
ANR	195222	CallExpression	"HT_SET_DATA_ADDR ( ht , new_data )"		195071	0					
ANR	195223	Callee	HT_SET_DATA_ADDR		195071	0					
ANR	195224	Identifier	HT_SET_DATA_ADDR		195071	0					
ANR	195225	ArgumentList	ht		195071	1					
ANR	195226	Argument	ht		195071	0					
ANR	195227	Identifier	ht		195071	0					
ANR	195228	Argument	new_data		195071	1					
ANR	195229	Identifier	new_data		195071	0					
ANR	195230	ExpressionStatement	"memcpy ( ht -> arData , old_buckets , sizeof ( Bucket ) * ht -> nNumUsed )"	858:2:26418:26480	195071	8	True				
ANR	195231	CallExpression	"memcpy ( ht -> arData , old_buckets , sizeof ( Bucket ) * ht -> nNumUsed )"		195071	0					
ANR	195232	Callee	memcpy		195071	0					
ANR	195233	Identifier	memcpy		195071	0					
ANR	195234	ArgumentList	ht -> arData		195071	1					
ANR	195235	Argument	ht -> arData		195071	0					
ANR	195236	PtrMemberAccess	ht -> arData		195071	0					
ANR	195237	Identifier	ht		195071	0					
ANR	195238	Identifier	arData		195071	1					
ANR	195239	Argument	old_buckets		195071	1					
ANR	195240	Identifier	old_buckets		195071	0					
ANR	195241	Argument	sizeof ( Bucket ) * ht -> nNumUsed		195071	2					
ANR	195242	MultiplicativeExpression	sizeof ( Bucket ) * ht -> nNumUsed		195071	0		*			
ANR	195243	SizeofExpression	sizeof ( Bucket )		195071	0					
ANR	195244	Sizeof	sizeof		195071	0					
ANR	195245	SizeofOperand	Bucket		195071	1					
ANR	195246	PtrMemberAccess	ht -> nNumUsed		195071	1					
ANR	195247	Identifier	ht		195071	0					
ANR	195248	Identifier	nNumUsed		195071	1					
ANR	195249	ExpressionStatement	"pefree ( old_data , ht -> u . flags & HASH_FLAG_PERSISTENT )"	859:2:26484:26536	195071	9	True				
ANR	195250	CallExpression	"pefree ( old_data , ht -> u . flags & HASH_FLAG_PERSISTENT )"		195071	0					
ANR	195251	Callee	pefree		195071	0					
ANR	195252	Identifier	pefree		195071	0					
ANR	195253	ArgumentList	old_data		195071	1					
ANR	195254	Argument	old_data		195071	0					
ANR	195255	Identifier	old_data		195071	0					
ANR	195256	Argument	ht -> u . flags & HASH_FLAG_PERSISTENT		195071	1					
ANR	195257	BitAndExpression	ht -> u . flags & HASH_FLAG_PERSISTENT		195071	0		&			
ANR	195258	MemberAccess	ht -> u . flags		195071	0					
ANR	195259	PtrMemberAccess	ht -> u		195071	0					
ANR	195260	Identifier	ht		195071	0					
ANR	195261	Identifier	u		195071	1					
ANR	195262	Identifier	flags		195071	1					
ANR	195263	Identifier	HASH_FLAG_PERSISTENT		195071	1					
ANR	195264	ExpressionStatement	zend_hash_rehash ( ht )	860:2:26540:26560	195071	10	True				
ANR	195265	CallExpression	zend_hash_rehash ( ht )		195071	0					
ANR	195266	Callee	zend_hash_rehash		195071	0					
ANR	195267	Identifier	zend_hash_rehash		195071	0					
ANR	195268	ArgumentList	ht		195071	1					
ANR	195269	Argument	ht		195071	0					
ANR	195270	Identifier	ht		195071	0					
ANR	195271	ExpressionStatement	HANDLE_UNBLOCK_INTERRUPTIONS ( )	861:2:26564:26594	195071	11	True				
ANR	195272	CallExpression	HANDLE_UNBLOCK_INTERRUPTIONS ( )		195071	0					
ANR	195273	Callee	HANDLE_UNBLOCK_INTERRUPTIONS		195071	0					
ANR	195274	Identifier	HANDLE_UNBLOCK_INTERRUPTIONS		195071	0					
ANR	195275	ArgumentList			195071	1					
ANR	195276	ElseStatement	else		195071	0					
ANR	195277	CompoundStatement		24:8:904:904	195071	0					
ANR	195278	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Possible integer overflow in memory allocation (%zu * %zu + %zu)"" , ht -> nTableSize * 2 , sizeof ( Bucket ) + sizeof ( uint32_t ) , sizeof ( Bucket ) )"	863:2:26608:26775	195071	0	True				
ANR	195279	CallExpression	"zend_error_noreturn ( E_ERROR , ""Possible integer overflow in memory allocation (%zu * %zu + %zu)"" , ht -> nTableSize * 2 , sizeof ( Bucket ) + sizeof ( uint32_t ) , sizeof ( Bucket ) )"		195071	0					
ANR	195280	Callee	zend_error_noreturn		195071	0					
ANR	195281	Identifier	zend_error_noreturn		195071	0					
ANR	195282	ArgumentList	E_ERROR		195071	1					
ANR	195283	Argument	E_ERROR		195071	0					
ANR	195284	Identifier	E_ERROR		195071	0					
ANR	195285	Argument	"""Possible integer overflow in memory allocation (%zu * %zu + %zu)"""		195071	1					
ANR	195286	PrimaryExpression	"""Possible integer overflow in memory allocation (%zu * %zu + %zu)"""		195071	0					
ANR	195287	Argument	ht -> nTableSize * 2		195071	2					
ANR	195288	MultiplicativeExpression	ht -> nTableSize * 2		195071	0		*			
ANR	195289	PtrMemberAccess	ht -> nTableSize		195071	0					
ANR	195290	Identifier	ht		195071	0					
ANR	195291	Identifier	nTableSize		195071	1					
ANR	195292	PrimaryExpression	2		195071	1					
ANR	195293	Argument	sizeof ( Bucket ) + sizeof ( uint32_t )		195071	3					
ANR	195294	AdditiveExpression	sizeof ( Bucket ) + sizeof ( uint32_t )		195071	0		+			
ANR	195295	SizeofExpression	sizeof ( Bucket )		195071	0					
ANR	195296	Sizeof	sizeof		195071	0					
ANR	195297	SizeofOperand	Bucket		195071	1					
ANR	195298	SizeofExpression	sizeof ( uint32_t )		195071	1					
ANR	195299	Sizeof	sizeof		195071	0					
ANR	195300	SizeofOperand	uint32_t		195071	1					
ANR	195301	Argument	sizeof ( Bucket )		195071	4					
ANR	195302	SizeofExpression	sizeof ( Bucket )		195071	0					
ANR	195303	Sizeof	sizeof		195071	0					
ANR	195304	SizeofOperand	Bucket		195071	1					
ANR	195305	ReturnType	static void ZEND_FASTCALL		195071	1					
ANR	195306	Identifier	zend_hash_do_resize		195071	2					
ANR	195307	ParameterList	HashTable * ht		195071	3					
ANR	195308	Parameter	HashTable * ht	838:46:25684:25696	195071	0	True				
ANR	195309	ParameterType	HashTable *		195071	0					
ANR	195310	Identifier	ht		195071	1					
ANR	195311	CFGEntryNode	ENTRY		195071		True				
ANR	195312	CFGExitNode	EXIT		195071		True				
ANR	195313	Symbol	HT_MAX_SIZE		195071						
ANR	195314	Symbol	ht -> nTableMask		195071						
ANR	195315	Symbol	ht -> u		195071						
ANR	195316	Symbol	ht -> arData		195071						
ANR	195317	Symbol	HT_SIZE_EX		195071						
ANR	195318	Symbol	HT_GET_DATA_ADDR		195071						
ANR	195319	Symbol	ht -> u . flags		195071						
ANR	195320	Symbol	ht		195071						
ANR	195321	Symbol	old_buckets		195071						
ANR	195322	Symbol	* ht		195071						
ANR	195323	Symbol	old_data		195071						
ANR	195324	Symbol	E_ERROR		195071						
ANR	195325	Symbol	HASH_FLAG_PERSISTENT		195071						
ANR	195326	Symbol	new_data		195071						
ANR	195327	Symbol	ht -> nTableSize		195071						
ANR	195328	Symbol	nSize		195071						
ANR	195329	Symbol	GC_REFCOUNT		195071						
ANR	195330	Symbol	ht -> nNumUsed		195071						
ANR	195331	Symbol	ht -> nNumOfElements		195071						
ANR	195332	Symbol	pemalloc		195071						
ANR	195333	Function	zend_hash_rehash	867:0:26783:28836							
ANR	195334	FunctionDef	zend_hash_rehash (HashTable * ht)		195333	0					
ANR	195335	CompoundStatement		868:0:26842:28836	195333	0					
ANR	195336	IdentifierDeclStatement	Bucket * p ;	869:1:26845:26854	195333	0	True				
ANR	195337	IdentifierDecl	* p		195333	0					
ANR	195338	IdentifierDeclType	Bucket *		195333	0					
ANR	195339	Identifier	p		195333	1					
ANR	195340	IdentifierDeclStatement	"uint32_t nIndex , i ;"	870:1:26857:26875	195333	1	True				
ANR	195341	IdentifierDecl	nIndex		195333	0					
ANR	195342	IdentifierDeclType	uint32_t		195333	0					
ANR	195343	Identifier	nIndex		195333	1					
ANR	195344	IdentifierDecl	i		195333	1					
ANR	195345	IdentifierDeclType	uint32_t		195333	0					
ANR	195346	Identifier	i		195333	1					
ANR	195347	ExpressionStatement	IS_CONSISTENT ( ht )	872:1:26879:26896	195333	2	True				
ANR	195348	CallExpression	IS_CONSISTENT ( ht )		195333	0					
ANR	195349	Callee	IS_CONSISTENT		195333	0					
ANR	195350	Identifier	IS_CONSISTENT		195333	0					
ANR	195351	ArgumentList	ht		195333	1					
ANR	195352	Argument	ht		195333	0					
ANR	195353	Identifier	ht		195333	0					
ANR	195354	IfStatement	if ( UNEXPECTED ( ht -> nNumOfElements == 0 ) )		195333	3					
ANR	195355	Condition	UNEXPECTED ( ht -> nNumOfElements == 0 )	874:5:26904:26938	195333	0	True				
ANR	195356	CallExpression	UNEXPECTED ( ht -> nNumOfElements == 0 )		195333	0					
ANR	195357	Callee	UNEXPECTED		195333	0					
ANR	195358	Identifier	UNEXPECTED		195333	0					
ANR	195359	ArgumentList	ht -> nNumOfElements == 0		195333	1					
ANR	195360	Argument	ht -> nNumOfElements == 0		195333	0					
ANR	195361	EqualityExpression	ht -> nNumOfElements == 0		195333	0		==			
ANR	195362	PtrMemberAccess	ht -> nNumOfElements		195333	0					
ANR	195363	Identifier	ht		195333	0					
ANR	195364	Identifier	nNumOfElements		195333	1					
ANR	195365	PrimaryExpression	0		195333	1					
ANR	195366	CompoundStatement		7:42:98:98	195333	1					
ANR	195367	IfStatement	if ( ht -> u . flags & HASH_FLAG_INITIALIZED )		195333	0					
ANR	195368	Condition	ht -> u . flags & HASH_FLAG_INITIALIZED	875:6:26949:26983	195333	0	True				
ANR	195369	BitAndExpression	ht -> u . flags & HASH_FLAG_INITIALIZED		195333	0		&			
ANR	195370	MemberAccess	ht -> u . flags		195333	0					
ANR	195371	PtrMemberAccess	ht -> u		195333	0					
ANR	195372	Identifier	ht		195333	0					
ANR	195373	Identifier	u		195333	1					
ANR	195374	Identifier	flags		195333	1					
ANR	195375	Identifier	HASH_FLAG_INITIALIZED		195333	1					
ANR	195376	CompoundStatement		8:43:143:143	195333	1					
ANR	195377	ExpressionStatement	ht -> nNumUsed = 0	876:3:26991:27007	195333	0	True				
ANR	195378	AssignmentExpression	ht -> nNumUsed = 0		195333	0		=			
ANR	195379	PtrMemberAccess	ht -> nNumUsed		195333	0					
ANR	195380	Identifier	ht		195333	0					
ANR	195381	Identifier	nNumUsed		195333	1					
ANR	195382	PrimaryExpression	0		195333	1					
ANR	195383	ExpressionStatement	HT_HASH_RESET ( ht )	877:3:27012:27029	195333	1	True				
ANR	195384	CallExpression	HT_HASH_RESET ( ht )		195333	0					
ANR	195385	Callee	HT_HASH_RESET		195333	0					
ANR	195386	Identifier	HT_HASH_RESET		195333	0					
ANR	195387	ArgumentList	ht		195333	1					
ANR	195388	Argument	ht		195333	0					
ANR	195389	Identifier	ht		195333	0					
ANR	195390	ReturnStatement	return SUCCESS ;	879:2:27037:27051	195333	1	True				
ANR	195391	Identifier	SUCCESS		195333	0					
ANR	195392	ExpressionStatement	HT_HASH_RESET ( ht )	882:1:27058:27075	195333	4	True				
ANR	195393	CallExpression	HT_HASH_RESET ( ht )		195333	0					
ANR	195394	Callee	HT_HASH_RESET		195333	0					
ANR	195395	Identifier	HT_HASH_RESET		195333	0					
ANR	195396	ArgumentList	ht		195333	1					
ANR	195397	Argument	ht		195333	0					
ANR	195398	Identifier	ht		195333	0					
ANR	195399	ExpressionStatement	i = 0	883:1:27078:27083	195333	5	True				
ANR	195400	AssignmentExpression	i = 0		195333	0		=			
ANR	195401	Identifier	i		195333	0					
ANR	195402	PrimaryExpression	0		195333	1					
ANR	195403	ExpressionStatement	p = ht -> arData	884:1:27086:27100	195333	6	True				
ANR	195404	AssignmentExpression	p = ht -> arData		195333	0		=			
ANR	195405	Identifier	p		195333	0					
ANR	195406	PtrMemberAccess	ht -> arData		195333	1					
ANR	195407	Identifier	ht		195333	0					
ANR	195408	Identifier	arData		195333	1					
ANR	195409	IfStatement	if ( ht -> nNumUsed == ht -> nNumOfElements )		195333	7					
ANR	195410	Condition	ht -> nNumUsed == ht -> nNumOfElements	885:5:27107:27140	195333	0	True				
ANR	195411	EqualityExpression	ht -> nNumUsed == ht -> nNumOfElements		195333	0		==			
ANR	195412	PtrMemberAccess	ht -> nNumUsed		195333	0					
ANR	195413	Identifier	ht		195333	0					
ANR	195414	Identifier	nNumUsed		195333	1					
ANR	195415	PtrMemberAccess	ht -> nNumOfElements		195333	1					
ANR	195416	Identifier	ht		195333	0					
ANR	195417	Identifier	nNumOfElements		195333	1					
ANR	195418	CompoundStatement		18:41:300:300	195333	1					
ANR	195419	DoStatement	do		195333	0					
ANR	195420	CompoundStatement		19:5:307:307	195333	0					
ANR	195421	ExpressionStatement	nIndex = p -> h | ht -> nTableMask	887:3:27155:27185	195333	0	True				
ANR	195422	AssignmentExpression	nIndex = p -> h | ht -> nTableMask		195333	0		=			
ANR	195423	Identifier	nIndex		195333	0					
ANR	195424	InclusiveOrExpression	p -> h | ht -> nTableMask		195333	1		|			
ANR	195425	PtrMemberAccess	p -> h		195333	0					
ANR	195426	Identifier	p		195333	0					
ANR	195427	Identifier	h		195333	1					
ANR	195428	PtrMemberAccess	ht -> nTableMask		195333	1					
ANR	195429	Identifier	ht		195333	0					
ANR	195430	Identifier	nTableMask		195333	1					
ANR	195431	ExpressionStatement	"Z_NEXT ( p -> val ) = HT_HASH ( ht , nIndex )"	888:3:27190:27226	195333	1	True				
ANR	195432	AssignmentExpression	"Z_NEXT ( p -> val ) = HT_HASH ( ht , nIndex )"		195333	0		=			
ANR	195433	CallExpression	Z_NEXT ( p -> val )		195333	0					
ANR	195434	Callee	Z_NEXT		195333	0					
ANR	195435	Identifier	Z_NEXT		195333	0					
ANR	195436	ArgumentList	p -> val		195333	1					
ANR	195437	Argument	p -> val		195333	0					
ANR	195438	PtrMemberAccess	p -> val		195333	0					
ANR	195439	Identifier	p		195333	0					
ANR	195440	Identifier	val		195333	1					
ANR	195441	CallExpression	"HT_HASH ( ht , nIndex )"		195333	1					
ANR	195442	Callee	HT_HASH		195333	0					
ANR	195443	Identifier	HT_HASH		195333	0					
ANR	195444	ArgumentList	ht		195333	1					
ANR	195445	Argument	ht		195333	0					
ANR	195446	Identifier	ht		195333	0					
ANR	195447	Argument	nIndex		195333	1					
ANR	195448	Identifier	nIndex		195333	0					
ANR	195449	ExpressionStatement	"HT_HASH ( ht , nIndex ) = HT_IDX_TO_HASH ( i )"	889:3:27231:27270	195333	2	True				
ANR	195450	AssignmentExpression	"HT_HASH ( ht , nIndex ) = HT_IDX_TO_HASH ( i )"		195333	0		=			
ANR	195451	CallExpression	"HT_HASH ( ht , nIndex )"		195333	0					
ANR	195452	Callee	HT_HASH		195333	0					
ANR	195453	Identifier	HT_HASH		195333	0					
ANR	195454	ArgumentList	ht		195333	1					
ANR	195455	Argument	ht		195333	0					
ANR	195456	Identifier	ht		195333	0					
ANR	195457	Argument	nIndex		195333	1					
ANR	195458	Identifier	nIndex		195333	0					
ANR	195459	CallExpression	HT_IDX_TO_HASH ( i )		195333	1					
ANR	195460	Callee	HT_IDX_TO_HASH		195333	0					
ANR	195461	Identifier	HT_IDX_TO_HASH		195333	0					
ANR	195462	ArgumentList	i		195333	1					
ANR	195463	Argument	i		195333	0					
ANR	195464	Identifier	i		195333	0					
ANR	195465	ExpressionStatement	p ++	890:3:27275:27278	195333	3	True				
ANR	195466	PostIncDecOperationExpression	p ++		195333	0					
ANR	195467	Identifier	p		195333	0					
ANR	195468	IncDec	++		195333	1					
ANR	195469	Condition	++ i < ht -> nNumUsed	891:11:27291:27308	195333	1	True				
ANR	195470	RelationalExpression	++ i < ht -> nNumUsed		195333	0		<			
ANR	195471	UnaryExpression	++ i		195333	0					
ANR	195472	IncDec	++		195333	0					
ANR	195473	Identifier	i		195333	1					
ANR	195474	PtrMemberAccess	ht -> nNumUsed		195333	1					
ANR	195475	Identifier	ht		195333	0					
ANR	195476	Identifier	nNumUsed		195333	1					
ANR	195477	ElseStatement	else		195333	0					
ANR	195478	CompoundStatement		25:8:477:477	195333	0					
ANR	195479	DoStatement	do		195333	0					
ANR	195480	CompoundStatement		26:5:484:484	195333	0					
ANR	195481	IfStatement	if ( UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF ) )		195333	0					
ANR	195482	Condition	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )	894:7:27336:27373	195333	0	True				
ANR	195483	CallExpression	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )		195333	0					
ANR	195484	Callee	UNEXPECTED		195333	0					
ANR	195485	Identifier	UNEXPECTED		195333	0					
ANR	195486	ArgumentList	Z_TYPE ( p -> val ) == IS_UNDEF		195333	1					
ANR	195487	Argument	Z_TYPE ( p -> val ) == IS_UNDEF		195333	0					
ANR	195488	EqualityExpression	Z_TYPE ( p -> val ) == IS_UNDEF		195333	0		==			
ANR	195489	CallExpression	Z_TYPE ( p -> val )		195333	0					
ANR	195490	Callee	Z_TYPE		195333	0					
ANR	195491	Identifier	Z_TYPE		195333	0					
ANR	195492	ArgumentList	p -> val		195333	1					
ANR	195493	Argument	p -> val		195333	0					
ANR	195494	PtrMemberAccess	p -> val		195333	0					
ANR	195495	Identifier	p		195333	0					
ANR	195496	Identifier	val		195333	1					
ANR	195497	Identifier	IS_UNDEF		195333	1					
ANR	195498	CompoundStatement		29:4:559:572	195333	1					
ANR	195499	IdentifierDeclStatement	uint32_t j = i ;	895:4:27382:27396	195333	0	True				
ANR	195500	IdentifierDecl	j = i		195333	0					
ANR	195501	IdentifierDeclType	uint32_t		195333	0					
ANR	195502	Identifier	j		195333	1					
ANR	195503	AssignmentExpression	j = i		195333	2		=			
ANR	195504	Identifier	i		195333	0					
ANR	195505	Identifier	i		195333	1					
ANR	195506	IdentifierDeclStatement	Bucket * q = p ;	896:4:27402:27415	195333	1	True				
ANR	195507	IdentifierDecl	* q = p		195333	0					
ANR	195508	IdentifierDeclType	Bucket *		195333	0					
ANR	195509	Identifier	q		195333	1					
ANR	195510	AssignmentExpression	* q = p		195333	2		=			
ANR	195511	Identifier	p		195333	0					
ANR	195512	Identifier	p		195333	1					
ANR	195513	IfStatement	if ( EXPECTED ( ht -> u . v . nIteratorsCount == 0 ) )		195333	2					
ANR	195514	Condition	EXPECTED ( ht -> u . v . nIteratorsCount == 0 )	898:8:27426:27463	195333	0	True				
ANR	195515	CallExpression	EXPECTED ( ht -> u . v . nIteratorsCount == 0 )		195333	0					
ANR	195516	Callee	EXPECTED		195333	0					
ANR	195517	Identifier	EXPECTED		195333	0					
ANR	195518	ArgumentList	ht -> u . v . nIteratorsCount == 0		195333	1					
ANR	195519	Argument	ht -> u . v . nIteratorsCount == 0		195333	0					
ANR	195520	EqualityExpression	ht -> u . v . nIteratorsCount == 0		195333	0		==			
ANR	195521	MemberAccess	ht -> u . v . nIteratorsCount		195333	0					
ANR	195522	MemberAccess	ht -> u . v		195333	0					
ANR	195523	PtrMemberAccess	ht -> u		195333	0					
ANR	195524	Identifier	ht		195333	0					
ANR	195525	Identifier	u		195333	1					
ANR	195526	Identifier	v		195333	1					
ANR	195527	Identifier	nIteratorsCount		195333	1					
ANR	195528	PrimaryExpression	0		195333	1					
ANR	195529	CompoundStatement		31:48:623:623	195333	1					
ANR	195530	WhileStatement	while ( ++ i < ht -> nNumUsed )		195333	0					
ANR	195531	Condition	++ i < ht -> nNumUsed	899:12:27480:27497	195333	0	True				
ANR	195532	RelationalExpression	++ i < ht -> nNumUsed		195333	0		<			
ANR	195533	UnaryExpression	++ i		195333	0					
ANR	195534	IncDec	++		195333	0					
ANR	195535	Identifier	i		195333	1					
ANR	195536	PtrMemberAccess	ht -> nNumUsed		195333	1					
ANR	195537	Identifier	ht		195333	0					
ANR	195538	Identifier	nNumUsed		195333	1					
ANR	195539	CompoundStatement		32:32:657:657	195333	1					
ANR	195540	ExpressionStatement	p ++	900:6:27508:27511	195333	0	True				
ANR	195541	PostIncDecOperationExpression	p ++		195333	0					
ANR	195542	Identifier	p		195333	0					
ANR	195543	IncDec	++		195333	1					
ANR	195544	IfStatement	if ( EXPECTED ( Z_TYPE_INFO ( p -> val ) != IS_UNDEF ) )		195333	1					
ANR	195545	Condition	EXPECTED ( Z_TYPE_INFO ( p -> val ) != IS_UNDEF )	901:10:27523:27563	195333	0	True				
ANR	195546	CallExpression	EXPECTED ( Z_TYPE_INFO ( p -> val ) != IS_UNDEF )		195333	0					
ANR	195547	Callee	EXPECTED		195333	0					
ANR	195548	Identifier	EXPECTED		195333	0					
ANR	195549	ArgumentList	Z_TYPE_INFO ( p -> val ) != IS_UNDEF		195333	1					
ANR	195550	Argument	Z_TYPE_INFO ( p -> val ) != IS_UNDEF		195333	0					
ANR	195551	EqualityExpression	Z_TYPE_INFO ( p -> val ) != IS_UNDEF		195333	0		!=			
ANR	195552	CallExpression	Z_TYPE_INFO ( p -> val )		195333	0					
ANR	195553	Callee	Z_TYPE_INFO		195333	0					
ANR	195554	Identifier	Z_TYPE_INFO		195333	0					
ANR	195555	ArgumentList	p -> val		195333	1					
ANR	195556	Argument	p -> val		195333	0					
ANR	195557	PtrMemberAccess	p -> val		195333	0					
ANR	195558	Identifier	p		195333	0					
ANR	195559	Identifier	val		195333	1					
ANR	195560	Identifier	IS_UNDEF		195333	1					
ANR	195561	CompoundStatement		34:53:723:723	195333	1					
ANR	195562	ExpressionStatement	"ZVAL_COPY_VALUE ( & q -> val , & p -> val )"	902:7:27575:27608	195333	0	True				
ANR	195563	CallExpression	"ZVAL_COPY_VALUE ( & q -> val , & p -> val )"		195333	0					
ANR	195564	Callee	ZVAL_COPY_VALUE		195333	0					
ANR	195565	Identifier	ZVAL_COPY_VALUE		195333	0					
ANR	195566	ArgumentList	& q -> val		195333	1					
ANR	195567	Argument	& q -> val		195333	0					
ANR	195568	UnaryOperationExpression	& q -> val		195333	0					
ANR	195569	UnaryOperator	&		195333	0					
ANR	195570	PtrMemberAccess	q -> val		195333	1					
ANR	195571	Identifier	q		195333	0					
ANR	195572	Identifier	val		195333	1					
ANR	195573	Argument	& p -> val		195333	1					
ANR	195574	UnaryOperationExpression	& p -> val		195333	0					
ANR	195575	UnaryOperator	&		195333	0					
ANR	195576	PtrMemberAccess	p -> val		195333	1					
ANR	195577	Identifier	p		195333	0					
ANR	195578	Identifier	val		195333	1					
ANR	195579	ExpressionStatement	q -> h = p -> h	903:7:27617:27628	195333	1	True				
ANR	195580	AssignmentExpression	q -> h = p -> h		195333	0		=			
ANR	195581	PtrMemberAccess	q -> h		195333	0					
ANR	195582	Identifier	q		195333	0					
ANR	195583	Identifier	h		195333	1					
ANR	195584	PtrMemberAccess	p -> h		195333	1					
ANR	195585	Identifier	p		195333	0					
ANR	195586	Identifier	h		195333	1					
ANR	195587	ExpressionStatement	nIndex = q -> h | ht -> nTableMask	904:7:27637:27667	195333	2	True				
ANR	195588	AssignmentExpression	nIndex = q -> h | ht -> nTableMask		195333	0		=			
ANR	195589	Identifier	nIndex		195333	0					
ANR	195590	InclusiveOrExpression	q -> h | ht -> nTableMask		195333	1		|			
ANR	195591	PtrMemberAccess	q -> h		195333	0					
ANR	195592	Identifier	q		195333	0					
ANR	195593	Identifier	h		195333	1					
ANR	195594	PtrMemberAccess	ht -> nTableMask		195333	1					
ANR	195595	Identifier	ht		195333	0					
ANR	195596	Identifier	nTableMask		195333	1					
ANR	195597	ExpressionStatement	q -> key = p -> key	905:7:27676:27691	195333	3	True				
ANR	195598	AssignmentExpression	q -> key = p -> key		195333	0		=			
ANR	195599	PtrMemberAccess	q -> key		195333	0					
ANR	195600	Identifier	q		195333	0					
ANR	195601	Identifier	key		195333	1					
ANR	195602	PtrMemberAccess	p -> key		195333	1					
ANR	195603	Identifier	p		195333	0					
ANR	195604	Identifier	key		195333	1					
ANR	195605	ExpressionStatement	"Z_NEXT ( q -> val ) = HT_HASH ( ht , nIndex )"	906:7:27700:27736	195333	4	True				
ANR	195606	AssignmentExpression	"Z_NEXT ( q -> val ) = HT_HASH ( ht , nIndex )"		195333	0		=			
ANR	195607	CallExpression	Z_NEXT ( q -> val )		195333	0					
ANR	195608	Callee	Z_NEXT		195333	0					
ANR	195609	Identifier	Z_NEXT		195333	0					
ANR	195610	ArgumentList	q -> val		195333	1					
ANR	195611	Argument	q -> val		195333	0					
ANR	195612	PtrMemberAccess	q -> val		195333	0					
ANR	195613	Identifier	q		195333	0					
ANR	195614	Identifier	val		195333	1					
ANR	195615	CallExpression	"HT_HASH ( ht , nIndex )"		195333	1					
ANR	195616	Callee	HT_HASH		195333	0					
ANR	195617	Identifier	HT_HASH		195333	0					
ANR	195618	ArgumentList	ht		195333	1					
ANR	195619	Argument	ht		195333	0					
ANR	195620	Identifier	ht		195333	0					
ANR	195621	Argument	nIndex		195333	1					
ANR	195622	Identifier	nIndex		195333	0					
ANR	195623	ExpressionStatement	"HT_HASH ( ht , nIndex ) = HT_IDX_TO_HASH ( j )"	907:7:27745:27784	195333	5	True				
ANR	195624	AssignmentExpression	"HT_HASH ( ht , nIndex ) = HT_IDX_TO_HASH ( j )"		195333	0		=			
ANR	195625	CallExpression	"HT_HASH ( ht , nIndex )"		195333	0					
ANR	195626	Callee	HT_HASH		195333	0					
ANR	195627	Identifier	HT_HASH		195333	0					
ANR	195628	ArgumentList	ht		195333	1					
ANR	195629	Argument	ht		195333	0					
ANR	195630	Identifier	ht		195333	0					
ANR	195631	Argument	nIndex		195333	1					
ANR	195632	Identifier	nIndex		195333	0					
ANR	195633	CallExpression	HT_IDX_TO_HASH ( j )		195333	1					
ANR	195634	Callee	HT_IDX_TO_HASH		195333	0					
ANR	195635	Identifier	HT_IDX_TO_HASH		195333	0					
ANR	195636	ArgumentList	j		195333	1					
ANR	195637	Argument	j		195333	0					
ANR	195638	Identifier	j		195333	0					
ANR	195639	IfStatement	if ( UNEXPECTED ( ht -> nInternalPointer == i ) )		195333	6					
ANR	195640	Condition	UNEXPECTED ( ht -> nInternalPointer == i )	908:11:27797:27833	195333	0	True				
ANR	195641	CallExpression	UNEXPECTED ( ht -> nInternalPointer == i )		195333	0					
ANR	195642	Callee	UNEXPECTED		195333	0					
ANR	195643	Identifier	UNEXPECTED		195333	0					
ANR	195644	ArgumentList	ht -> nInternalPointer == i		195333	1					
ANR	195645	Argument	ht -> nInternalPointer == i		195333	0					
ANR	195646	EqualityExpression	ht -> nInternalPointer == i		195333	0		==			
ANR	195647	PtrMemberAccess	ht -> nInternalPointer		195333	0					
ANR	195648	Identifier	ht		195333	0					
ANR	195649	Identifier	nInternalPointer		195333	1					
ANR	195650	Identifier	i		195333	1					
ANR	195651	CompoundStatement		41:50:993:993	195333	1					
ANR	195652	ExpressionStatement	ht -> nInternalPointer = j	909:8:27846:27870	195333	0	True				
ANR	195653	AssignmentExpression	ht -> nInternalPointer = j		195333	0		=			
ANR	195654	PtrMemberAccess	ht -> nInternalPointer		195333	0					
ANR	195655	Identifier	ht		195333	0					
ANR	195656	Identifier	nInternalPointer		195333	1					
ANR	195657	Identifier	j		195333	1					
ANR	195658	ExpressionStatement	q ++	911:7:27888:27891	195333	7	True				
ANR	195659	PostIncDecOperationExpression	q ++		195333	0					
ANR	195660	Identifier	q		195333	0					
ANR	195661	IncDec	++		195333	1					
ANR	195662	ExpressionStatement	j ++	912:7:27900:27903	195333	8	True				
ANR	195663	PostIncDecOperationExpression	j ++		195333	0					
ANR	195664	Identifier	j		195333	0					
ANR	195665	IncDec	++		195333	1					
ANR	195666	ElseStatement	else		195333	0					
ANR	195667	CompoundStatement		49:5:1095:1151	195333	0					
ANR	195668	IdentifierDeclStatement	"uint32_t iter_pos = zend_hash_iterators_lower_pos ( ht , 0 ) ;"	916:5:27938:27994	195333	0	True				
ANR	195669	IdentifierDecl	"iter_pos = zend_hash_iterators_lower_pos ( ht , 0 )"		195333	0					
ANR	195670	IdentifierDeclType	uint32_t		195333	0					
ANR	195671	Identifier	iter_pos		195333	1					
ANR	195672	AssignmentExpression	"iter_pos = zend_hash_iterators_lower_pos ( ht , 0 )"		195333	2		=			
ANR	195673	Identifier	iter_pos		195333	0					
ANR	195674	CallExpression	"zend_hash_iterators_lower_pos ( ht , 0 )"		195333	1					
ANR	195675	Callee	zend_hash_iterators_lower_pos		195333	0					
ANR	195676	Identifier	zend_hash_iterators_lower_pos		195333	0					
ANR	195677	ArgumentList	ht		195333	1					
ANR	195678	Argument	ht		195333	0					
ANR	195679	Identifier	ht		195333	0					
ANR	195680	Argument	0		195333	1					
ANR	195681	PrimaryExpression	0		195333	0					
ANR	195682	WhileStatement	while ( ++ i < ht -> nNumUsed )		195333	1					
ANR	195683	Condition	++ i < ht -> nNumUsed	918:12:28009:28026	195333	0	True				
ANR	195684	RelationalExpression	++ i < ht -> nNumUsed		195333	0		<			
ANR	195685	UnaryExpression	++ i		195333	0					
ANR	195686	IncDec	++		195333	0					
ANR	195687	Identifier	i		195333	1					
ANR	195688	PtrMemberAccess	ht -> nNumUsed		195333	1					
ANR	195689	Identifier	ht		195333	0					
ANR	195690	Identifier	nNumUsed		195333	1					
ANR	195691	CompoundStatement		51:32:1186:1186	195333	1					
ANR	195692	ExpressionStatement	p ++	919:6:28037:28040	195333	0	True				
ANR	195693	PostIncDecOperationExpression	p ++		195333	0					
ANR	195694	Identifier	p		195333	0					
ANR	195695	IncDec	++		195333	1					
ANR	195696	IfStatement	if ( EXPECTED ( Z_TYPE_INFO ( p -> val ) != IS_UNDEF ) )		195333	1					
ANR	195697	Condition	EXPECTED ( Z_TYPE_INFO ( p -> val ) != IS_UNDEF )	920:10:28052:28092	195333	0	True				
ANR	195698	CallExpression	EXPECTED ( Z_TYPE_INFO ( p -> val ) != IS_UNDEF )		195333	0					
ANR	195699	Callee	EXPECTED		195333	0					
ANR	195700	Identifier	EXPECTED		195333	0					
ANR	195701	ArgumentList	Z_TYPE_INFO ( p -> val ) != IS_UNDEF		195333	1					
ANR	195702	Argument	Z_TYPE_INFO ( p -> val ) != IS_UNDEF		195333	0					
ANR	195703	EqualityExpression	Z_TYPE_INFO ( p -> val ) != IS_UNDEF		195333	0		!=			
ANR	195704	CallExpression	Z_TYPE_INFO ( p -> val )		195333	0					
ANR	195705	Callee	Z_TYPE_INFO		195333	0					
ANR	195706	Identifier	Z_TYPE_INFO		195333	0					
ANR	195707	ArgumentList	p -> val		195333	1					
ANR	195708	Argument	p -> val		195333	0					
ANR	195709	PtrMemberAccess	p -> val		195333	0					
ANR	195710	Identifier	p		195333	0					
ANR	195711	Identifier	val		195333	1					
ANR	195712	Identifier	IS_UNDEF		195333	1					
ANR	195713	CompoundStatement		53:53:1252:1252	195333	1					
ANR	195714	ExpressionStatement	"ZVAL_COPY_VALUE ( & q -> val , & p -> val )"	921:7:28104:28137	195333	0	True				
ANR	195715	CallExpression	"ZVAL_COPY_VALUE ( & q -> val , & p -> val )"		195333	0					
ANR	195716	Callee	ZVAL_COPY_VALUE		195333	0					
ANR	195717	Identifier	ZVAL_COPY_VALUE		195333	0					
ANR	195718	ArgumentList	& q -> val		195333	1					
ANR	195719	Argument	& q -> val		195333	0					
ANR	195720	UnaryOperationExpression	& q -> val		195333	0					
ANR	195721	UnaryOperator	&		195333	0					
ANR	195722	PtrMemberAccess	q -> val		195333	1					
ANR	195723	Identifier	q		195333	0					
ANR	195724	Identifier	val		195333	1					
ANR	195725	Argument	& p -> val		195333	1					
ANR	195726	UnaryOperationExpression	& p -> val		195333	0					
ANR	195727	UnaryOperator	&		195333	0					
ANR	195728	PtrMemberAccess	p -> val		195333	1					
ANR	195729	Identifier	p		195333	0					
ANR	195730	Identifier	val		195333	1					
ANR	195731	ExpressionStatement	q -> h = p -> h	922:7:28146:28157	195333	1	True				
ANR	195732	AssignmentExpression	q -> h = p -> h		195333	0		=			
ANR	195733	PtrMemberAccess	q -> h		195333	0					
ANR	195734	Identifier	q		195333	0					
ANR	195735	Identifier	h		195333	1					
ANR	195736	PtrMemberAccess	p -> h		195333	1					
ANR	195737	Identifier	p		195333	0					
ANR	195738	Identifier	h		195333	1					
ANR	195739	ExpressionStatement	nIndex = q -> h | ht -> nTableMask	923:7:28166:28196	195333	2	True				
ANR	195740	AssignmentExpression	nIndex = q -> h | ht -> nTableMask		195333	0		=			
ANR	195741	Identifier	nIndex		195333	0					
ANR	195742	InclusiveOrExpression	q -> h | ht -> nTableMask		195333	1		|			
ANR	195743	PtrMemberAccess	q -> h		195333	0					
ANR	195744	Identifier	q		195333	0					
ANR	195745	Identifier	h		195333	1					
ANR	195746	PtrMemberAccess	ht -> nTableMask		195333	1					
ANR	195747	Identifier	ht		195333	0					
ANR	195748	Identifier	nTableMask		195333	1					
ANR	195749	ExpressionStatement	q -> key = p -> key	924:7:28205:28220	195333	3	True				
ANR	195750	AssignmentExpression	q -> key = p -> key		195333	0		=			
ANR	195751	PtrMemberAccess	q -> key		195333	0					
ANR	195752	Identifier	q		195333	0					
ANR	195753	Identifier	key		195333	1					
ANR	195754	PtrMemberAccess	p -> key		195333	1					
ANR	195755	Identifier	p		195333	0					
ANR	195756	Identifier	key		195333	1					
ANR	195757	ExpressionStatement	"Z_NEXT ( q -> val ) = HT_HASH ( ht , nIndex )"	925:7:28229:28265	195333	4	True				
ANR	195758	AssignmentExpression	"Z_NEXT ( q -> val ) = HT_HASH ( ht , nIndex )"		195333	0		=			
ANR	195759	CallExpression	Z_NEXT ( q -> val )		195333	0					
ANR	195760	Callee	Z_NEXT		195333	0					
ANR	195761	Identifier	Z_NEXT		195333	0					
ANR	195762	ArgumentList	q -> val		195333	1					
ANR	195763	Argument	q -> val		195333	0					
ANR	195764	PtrMemberAccess	q -> val		195333	0					
ANR	195765	Identifier	q		195333	0					
ANR	195766	Identifier	val		195333	1					
ANR	195767	CallExpression	"HT_HASH ( ht , nIndex )"		195333	1					
ANR	195768	Callee	HT_HASH		195333	0					
ANR	195769	Identifier	HT_HASH		195333	0					
ANR	195770	ArgumentList	ht		195333	1					
ANR	195771	Argument	ht		195333	0					
ANR	195772	Identifier	ht		195333	0					
ANR	195773	Argument	nIndex		195333	1					
ANR	195774	Identifier	nIndex		195333	0					
ANR	195775	ExpressionStatement	"HT_HASH ( ht , nIndex ) = HT_IDX_TO_HASH ( j )"	926:7:28274:28313	195333	5	True				
ANR	195776	AssignmentExpression	"HT_HASH ( ht , nIndex ) = HT_IDX_TO_HASH ( j )"		195333	0		=			
ANR	195777	CallExpression	"HT_HASH ( ht , nIndex )"		195333	0					
ANR	195778	Callee	HT_HASH		195333	0					
ANR	195779	Identifier	HT_HASH		195333	0					
ANR	195780	ArgumentList	ht		195333	1					
ANR	195781	Argument	ht		195333	0					
ANR	195782	Identifier	ht		195333	0					
ANR	195783	Argument	nIndex		195333	1					
ANR	195784	Identifier	nIndex		195333	0					
ANR	195785	CallExpression	HT_IDX_TO_HASH ( j )		195333	1					
ANR	195786	Callee	HT_IDX_TO_HASH		195333	0					
ANR	195787	Identifier	HT_IDX_TO_HASH		195333	0					
ANR	195788	ArgumentList	j		195333	1					
ANR	195789	Argument	j		195333	0					
ANR	195790	Identifier	j		195333	0					
ANR	195791	IfStatement	if ( UNEXPECTED ( ht -> nInternalPointer == i ) )		195333	6					
ANR	195792	Condition	UNEXPECTED ( ht -> nInternalPointer == i )	927:11:28326:28362	195333	0	True				
ANR	195793	CallExpression	UNEXPECTED ( ht -> nInternalPointer == i )		195333	0					
ANR	195794	Callee	UNEXPECTED		195333	0					
ANR	195795	Identifier	UNEXPECTED		195333	0					
ANR	195796	ArgumentList	ht -> nInternalPointer == i		195333	1					
ANR	195797	Argument	ht -> nInternalPointer == i		195333	0					
ANR	195798	EqualityExpression	ht -> nInternalPointer == i		195333	0		==			
ANR	195799	PtrMemberAccess	ht -> nInternalPointer		195333	0					
ANR	195800	Identifier	ht		195333	0					
ANR	195801	Identifier	nInternalPointer		195333	1					
ANR	195802	Identifier	i		195333	1					
ANR	195803	CompoundStatement		60:50:1522:1522	195333	1					
ANR	195804	ExpressionStatement	ht -> nInternalPointer = j	928:8:28375:28399	195333	0	True				
ANR	195805	AssignmentExpression	ht -> nInternalPointer = j		195333	0		=			
ANR	195806	PtrMemberAccess	ht -> nInternalPointer		195333	0					
ANR	195807	Identifier	ht		195333	0					
ANR	195808	Identifier	nInternalPointer		195333	1					
ANR	195809	Identifier	j		195333	1					
ANR	195810	IfStatement	if ( UNEXPECTED ( i == iter_pos ) )		195333	7					
ANR	195811	Condition	UNEXPECTED ( i == iter_pos )	930:11:28421:28445	195333	0	True				
ANR	195812	CallExpression	UNEXPECTED ( i == iter_pos )		195333	0					
ANR	195813	Callee	UNEXPECTED		195333	0					
ANR	195814	Identifier	UNEXPECTED		195333	0					
ANR	195815	ArgumentList	i == iter_pos		195333	1					
ANR	195816	Argument	i == iter_pos		195333	0					
ANR	195817	EqualityExpression	i == iter_pos		195333	0		==			
ANR	195818	Identifier	i		195333	0					
ANR	195819	Identifier	iter_pos		195333	1					
ANR	195820	CompoundStatement		63:38:1605:1605	195333	1					
ANR	195821	ExpressionStatement	"zend_hash_iterators_update ( ht , i , j )"	931:8:28458:28494	195333	0	True				
ANR	195822	CallExpression	"zend_hash_iterators_update ( ht , i , j )"		195333	0					
ANR	195823	Callee	zend_hash_iterators_update		195333	0					
ANR	195824	Identifier	zend_hash_iterators_update		195333	0					
ANR	195825	ArgumentList	ht		195333	1					
ANR	195826	Argument	ht		195333	0					
ANR	195827	Identifier	ht		195333	0					
ANR	195828	Argument	i		195333	1					
ANR	195829	Identifier	i		195333	0					
ANR	195830	Argument	j		195333	2					
ANR	195831	Identifier	j		195333	0					
ANR	195832	ExpressionStatement	"iter_pos = zend_hash_iterators_lower_pos ( ht , iter_pos + 1 )"	932:8:28504:28562	195333	1	True				
ANR	195833	AssignmentExpression	"iter_pos = zend_hash_iterators_lower_pos ( ht , iter_pos + 1 )"		195333	0		=			
ANR	195834	Identifier	iter_pos		195333	0					
ANR	195835	CallExpression	"zend_hash_iterators_lower_pos ( ht , iter_pos + 1 )"		195333	1					
ANR	195836	Callee	zend_hash_iterators_lower_pos		195333	0					
ANR	195837	Identifier	zend_hash_iterators_lower_pos		195333	0					
ANR	195838	ArgumentList	ht		195333	1					
ANR	195839	Argument	ht		195333	0					
ANR	195840	Identifier	ht		195333	0					
ANR	195841	Argument	iter_pos + 1		195333	1					
ANR	195842	AdditiveExpression	iter_pos + 1		195333	0		+			
ANR	195843	Identifier	iter_pos		195333	0					
ANR	195844	PrimaryExpression	1		195333	1					
ANR	195845	ExpressionStatement	q ++	934:7:28580:28583	195333	8	True				
ANR	195846	PostIncDecOperationExpression	q ++		195333	0					
ANR	195847	Identifier	q		195333	0					
ANR	195848	IncDec	++		195333	1					
ANR	195849	ExpressionStatement	j ++	935:7:28592:28595	195333	9	True				
ANR	195850	PostIncDecOperationExpression	j ++		195333	0					
ANR	195851	Identifier	j		195333	0					
ANR	195852	IncDec	++		195333	1					
ANR	195853	ExpressionStatement	ht -> nNumUsed = j	939:4:28622:28638	195333	3	True				
ANR	195854	AssignmentExpression	ht -> nNumUsed = j		195333	0		=			
ANR	195855	PtrMemberAccess	ht -> nNumUsed		195333	0					
ANR	195856	Identifier	ht		195333	0					
ANR	195857	Identifier	nNumUsed		195333	1					
ANR	195858	Identifier	j		195333	1					
ANR	195859	BreakStatement	break ;	940:4:28644:28649	195333	4	True				
ANR	195860	ExpressionStatement	nIndex = p -> h | ht -> nTableMask	942:3:28659:28689	195333	1	True				
ANR	195861	AssignmentExpression	nIndex = p -> h | ht -> nTableMask		195333	0		=			
ANR	195862	Identifier	nIndex		195333	0					
ANR	195863	InclusiveOrExpression	p -> h | ht -> nTableMask		195333	1		|			
ANR	195864	PtrMemberAccess	p -> h		195333	0					
ANR	195865	Identifier	p		195333	0					
ANR	195866	Identifier	h		195333	1					
ANR	195867	PtrMemberAccess	ht -> nTableMask		195333	1					
ANR	195868	Identifier	ht		195333	0					
ANR	195869	Identifier	nTableMask		195333	1					
ANR	195870	ExpressionStatement	"Z_NEXT ( p -> val ) = HT_HASH ( ht , nIndex )"	943:3:28694:28730	195333	2	True				
ANR	195871	AssignmentExpression	"Z_NEXT ( p -> val ) = HT_HASH ( ht , nIndex )"		195333	0		=			
ANR	195872	CallExpression	Z_NEXT ( p -> val )		195333	0					
ANR	195873	Callee	Z_NEXT		195333	0					
ANR	195874	Identifier	Z_NEXT		195333	0					
ANR	195875	ArgumentList	p -> val		195333	1					
ANR	195876	Argument	p -> val		195333	0					
ANR	195877	PtrMemberAccess	p -> val		195333	0					
ANR	195878	Identifier	p		195333	0					
ANR	195879	Identifier	val		195333	1					
ANR	195880	CallExpression	"HT_HASH ( ht , nIndex )"		195333	1					
ANR	195881	Callee	HT_HASH		195333	0					
ANR	195882	Identifier	HT_HASH		195333	0					
ANR	195883	ArgumentList	ht		195333	1					
ANR	195884	Argument	ht		195333	0					
ANR	195885	Identifier	ht		195333	0					
ANR	195886	Argument	nIndex		195333	1					
ANR	195887	Identifier	nIndex		195333	0					
ANR	195888	ExpressionStatement	"HT_HASH ( ht , nIndex ) = HT_IDX_TO_HASH ( i )"	944:3:28735:28774	195333	3	True				
ANR	195889	AssignmentExpression	"HT_HASH ( ht , nIndex ) = HT_IDX_TO_HASH ( i )"		195333	0		=			
ANR	195890	CallExpression	"HT_HASH ( ht , nIndex )"		195333	0					
ANR	195891	Callee	HT_HASH		195333	0					
ANR	195892	Identifier	HT_HASH		195333	0					
ANR	195893	ArgumentList	ht		195333	1					
ANR	195894	Argument	ht		195333	0					
ANR	195895	Identifier	ht		195333	0					
ANR	195896	Argument	nIndex		195333	1					
ANR	195897	Identifier	nIndex		195333	0					
ANR	195898	CallExpression	HT_IDX_TO_HASH ( i )		195333	1					
ANR	195899	Callee	HT_IDX_TO_HASH		195333	0					
ANR	195900	Identifier	HT_IDX_TO_HASH		195333	0					
ANR	195901	ArgumentList	i		195333	1					
ANR	195902	Argument	i		195333	0					
ANR	195903	Identifier	i		195333	0					
ANR	195904	ExpressionStatement	p ++	945:3:28779:28782	195333	4	True				
ANR	195905	PostIncDecOperationExpression	p ++		195333	0					
ANR	195906	Identifier	p		195333	0					
ANR	195907	IncDec	++		195333	1					
ANR	195908	Condition	++ i < ht -> nNumUsed	946:11:28795:28812	195333	1	True				
ANR	195909	RelationalExpression	++ i < ht -> nNumUsed		195333	0		<			
ANR	195910	UnaryExpression	++ i		195333	0					
ANR	195911	IncDec	++		195333	0					
ANR	195912	Identifier	i		195333	1					
ANR	195913	PtrMemberAccess	ht -> nNumUsed		195333	1					
ANR	195914	Identifier	ht		195333	0					
ANR	195915	Identifier	nNumUsed		195333	1					
ANR	195916	ReturnStatement	return SUCCESS ;	948:1:28820:28834	195333	8	True				
ANR	195917	Identifier	SUCCESS		195333	0					
ANR	195918	ReturnType	ZEND_API int ZEND_FASTCALL		195333	1					
ANR	195919	Identifier	zend_hash_rehash		195333	2					
ANR	195920	ParameterList	HashTable * ht		195333	3					
ANR	195921	Parameter	HashTable * ht	867:44:26827:26839	195333	0	True				
ANR	195922	ParameterType	HashTable *		195333	0					
ANR	195923	Identifier	ht		195333	1					
ANR	195924	CFGEntryNode	ENTRY		195333		True				
ANR	195925	CFGExitNode	EXIT		195333		True				
ANR	195926	Symbol	ht -> nTableMask		195333						
ANR	195927	Symbol	ht -> u		195333						
ANR	195928	Symbol	ht -> arData		195333						
ANR	195929	Symbol	Z_TYPE		195333						
ANR	195930	Symbol	ht -> u . flags		195333						
ANR	195931	Symbol	Z_NEXT		195333						
ANR	195932	Symbol	ht		195333						
ANR	195933	Symbol	ht -> u . v		195333						
ANR	195934	Symbol	q -> key		195333						
ANR	195935	Symbol	UNEXPECTED		195333						
ANR	195936	Symbol	* ht		195333						
ANR	195937	Symbol	HT_HASH		195333						
ANR	195938	Symbol	iter_pos		195333						
ANR	195939	Symbol	HASH_FLAG_INITIALIZED		195333						
ANR	195940	Symbol	Z_TYPE_INFO		195333						
ANR	195941	Symbol	ht -> nNumOfElements		195333						
ANR	195942	Symbol	p -> h		195333						
ANR	195943	Symbol	IS_UNDEF		195333						
ANR	195944	Symbol	& q -> val		195333						
ANR	195945	Symbol	& p -> val		195333						
ANR	195946	Symbol	ht -> nInternalPointer		195333						
ANR	195947	Symbol	SUCCESS		195333						
ANR	195948	Symbol	q -> h		195333						
ANR	195949	Symbol	nIndex		195333						
ANR	195950	Symbol	i		195333						
ANR	195951	Symbol	j		195333						
ANR	195952	Symbol	p -> val		195333						
ANR	195953	Symbol	HT_IDX_TO_HASH		195333						
ANR	195954	Symbol	p -> key		195333						
ANR	195955	Symbol	p		195333						
ANR	195956	Symbol	q		195333						
ANR	195957	Symbol	q -> val		195333						
ANR	195958	Symbol	zend_hash_iterators_lower_pos		195333						
ANR	195959	Symbol	* p		195333						
ANR	195960	Symbol	* q		195333						
ANR	195961	Symbol	EXPECTED		195333						
ANR	195962	Symbol	ht -> nNumUsed		195333						
ANR	195963	Symbol	ht -> u . v . nIteratorsCount		195333						
ANR	195964	Function	_zend_hash_del_el_ex	951:0:28839:30043							
ANR	195965	FunctionDef	"_zend_hash_del_el_ex (HashTable * ht , uint32_t idx , Bucket * p , Bucket * prev)"		195964	0					
ANR	195966	CompoundStatement		952:0:28945:30043	195964	0					
ANR	195967	ExpressionStatement	HANDLE_BLOCK_INTERRUPTIONS ( )	953:1:28948:28976	195964	0	True				
ANR	195968	CallExpression	HANDLE_BLOCK_INTERRUPTIONS ( )		195964	0					
ANR	195969	Callee	HANDLE_BLOCK_INTERRUPTIONS		195964	0					
ANR	195970	Identifier	HANDLE_BLOCK_INTERRUPTIONS		195964	0					
ANR	195971	ArgumentList			195964	1					
ANR	195972	IfStatement	if ( ! ( ht -> u . flags & HASH_FLAG_PACKED ) )		195964	1					
ANR	195973	Condition	! ( ht -> u . flags & HASH_FLAG_PACKED )	954:5:28983:29015	195964	0	True				
ANR	195974	UnaryOperationExpression	! ( ht -> u . flags & HASH_FLAG_PACKED )		195964	0					
ANR	195975	UnaryOperator	!		195964	0					
ANR	195976	BitAndExpression	ht -> u . flags & HASH_FLAG_PACKED		195964	1		&			
ANR	195977	MemberAccess	ht -> u . flags		195964	0					
ANR	195978	PtrMemberAccess	ht -> u		195964	0					
ANR	195979	Identifier	ht		195964	0					
ANR	195980	Identifier	u		195964	1					
ANR	195981	Identifier	flags		195964	1					
ANR	195982	Identifier	HASH_FLAG_PACKED		195964	1					
ANR	195983	CompoundStatement		3:40:72:72	195964	1					
ANR	195984	IfStatement	if ( prev )		195964	0					
ANR	195985	Condition	prev	955:6:29026:29029	195964	0	True				
ANR	195986	Identifier	prev		195964	0					
ANR	195987	CompoundStatement		4:12:86:86	195964	1					
ANR	195988	ExpressionStatement	Z_NEXT ( prev -> val ) = Z_NEXT ( p -> val )	956:3:29037:29071	195964	0	True				
ANR	195989	AssignmentExpression	Z_NEXT ( prev -> val ) = Z_NEXT ( p -> val )		195964	0		=			
ANR	195990	CallExpression	Z_NEXT ( prev -> val )		195964	0					
ANR	195991	Callee	Z_NEXT		195964	0					
ANR	195992	Identifier	Z_NEXT		195964	0					
ANR	195993	ArgumentList	prev -> val		195964	1					
ANR	195994	Argument	prev -> val		195964	0					
ANR	195995	PtrMemberAccess	prev -> val		195964	0					
ANR	195996	Identifier	prev		195964	0					
ANR	195997	Identifier	val		195964	1					
ANR	195998	CallExpression	Z_NEXT ( p -> val )		195964	1					
ANR	195999	Callee	Z_NEXT		195964	0					
ANR	196000	Identifier	Z_NEXT		195964	0					
ANR	196001	ArgumentList	p -> val		195964	1					
ANR	196002	Argument	p -> val		195964	0					
ANR	196003	PtrMemberAccess	p -> val		195964	0					
ANR	196004	Identifier	p		195964	0					
ANR	196005	Identifier	val		195964	1					
ANR	196006	ElseStatement	else		195964	0					
ANR	196007	CompoundStatement		6:9:136:136	195964	0					
ANR	196008	ExpressionStatement	"HT_HASH ( ht , p -> h | ht -> nTableMask ) = Z_NEXT ( p -> val )"	958:3:29087:29138	195964	0	True				
ANR	196009	AssignmentExpression	"HT_HASH ( ht , p -> h | ht -> nTableMask ) = Z_NEXT ( p -> val )"		195964	0		=			
ANR	196010	CallExpression	"HT_HASH ( ht , p -> h | ht -> nTableMask )"		195964	0					
ANR	196011	Callee	HT_HASH		195964	0					
ANR	196012	Identifier	HT_HASH		195964	0					
ANR	196013	ArgumentList	ht		195964	1					
ANR	196014	Argument	ht		195964	0					
ANR	196015	Identifier	ht		195964	0					
ANR	196016	Argument	p -> h | ht -> nTableMask		195964	1					
ANR	196017	InclusiveOrExpression	p -> h | ht -> nTableMask		195964	0		|			
ANR	196018	PtrMemberAccess	p -> h		195964	0					
ANR	196019	Identifier	p		195964	0					
ANR	196020	Identifier	h		195964	1					
ANR	196021	PtrMemberAccess	ht -> nTableMask		195964	1					
ANR	196022	Identifier	ht		195964	0					
ANR	196023	Identifier	nTableMask		195964	1					
ANR	196024	CallExpression	Z_NEXT ( p -> val )		195964	1					
ANR	196025	Callee	Z_NEXT		195964	0					
ANR	196026	Identifier	Z_NEXT		195964	0					
ANR	196027	ArgumentList	p -> val		195964	1					
ANR	196028	Argument	p -> val		195964	0					
ANR	196029	PtrMemberAccess	p -> val		195964	0					
ANR	196030	Identifier	p		195964	0					
ANR	196031	Identifier	val		195964	1					
ANR	196032	IfStatement	if ( HT_IDX_TO_HASH ( ht -> nNumUsed - 1 ) == idx )		195964	2					
ANR	196033	Condition	HT_IDX_TO_HASH ( ht -> nNumUsed - 1 ) == idx	961:5:29152:29190	195964	0	True				
ANR	196034	EqualityExpression	HT_IDX_TO_HASH ( ht -> nNumUsed - 1 ) == idx		195964	0		==			
ANR	196035	CallExpression	HT_IDX_TO_HASH ( ht -> nNumUsed - 1 )		195964	0					
ANR	196036	Callee	HT_IDX_TO_HASH		195964	0					
ANR	196037	Identifier	HT_IDX_TO_HASH		195964	0					
ANR	196038	ArgumentList	ht -> nNumUsed - 1		195964	1					
ANR	196039	Argument	ht -> nNumUsed - 1		195964	0					
ANR	196040	AdditiveExpression	ht -> nNumUsed - 1		195964	0		-			
ANR	196041	PtrMemberAccess	ht -> nNumUsed		195964	0					
ANR	196042	Identifier	ht		195964	0					
ANR	196043	Identifier	nNumUsed		195964	1					
ANR	196044	PrimaryExpression	1		195964	1					
ANR	196045	Identifier	idx		195964	1					
ANR	196046	CompoundStatement		10:46:247:247	195964	1					
ANR	196047	DoStatement	do		195964	0					
ANR	196048	CompoundStatement		11:5:254:254	195964	0					
ANR	196049	ExpressionStatement	ht -> nNumUsed --	963:3:29205:29219	195964	0	True				
ANR	196050	PostIncDecOperationExpression	ht -> nNumUsed --		195964	0					
ANR	196051	PtrMemberAccess	ht -> nNumUsed		195964	0					
ANR	196052	Identifier	ht		195964	0					
ANR	196053	Identifier	nNumUsed		195964	1					
ANR	196054	IncDec	--		195964	1					
ANR	196055	Condition	ht -> nNumUsed > 0 && ( UNEXPECTED ( Z_TYPE ( ht -> arData [ ht -> nNumUsed - 1 ] . val ) == IS_UNDEF ) )	964:11:29232:29315	195964	1	True				
ANR	196056	AndExpression	ht -> nNumUsed > 0 && ( UNEXPECTED ( Z_TYPE ( ht -> arData [ ht -> nNumUsed - 1 ] . val ) == IS_UNDEF ) )		195964	0		&&			
ANR	196057	RelationalExpression	ht -> nNumUsed > 0		195964	0		>			
ANR	196058	PtrMemberAccess	ht -> nNumUsed		195964	0					
ANR	196059	Identifier	ht		195964	0					
ANR	196060	Identifier	nNumUsed		195964	1					
ANR	196061	PrimaryExpression	0		195964	1					
ANR	196062	CallExpression	UNEXPECTED ( Z_TYPE ( ht -> arData [ ht -> nNumUsed - 1 ] . val ) == IS_UNDEF )		195964	1					
ANR	196063	Callee	UNEXPECTED		195964	0					
ANR	196064	Identifier	UNEXPECTED		195964	0					
ANR	196065	ArgumentList	Z_TYPE ( ht -> arData [ ht -> nNumUsed - 1 ] . val ) == IS_UNDEF		195964	1					
ANR	196066	Argument	Z_TYPE ( ht -> arData [ ht -> nNumUsed - 1 ] . val ) == IS_UNDEF		195964	0					
ANR	196067	EqualityExpression	Z_TYPE ( ht -> arData [ ht -> nNumUsed - 1 ] . val ) == IS_UNDEF		195964	0		==			
ANR	196068	CallExpression	Z_TYPE ( ht -> arData [ ht -> nNumUsed - 1 ] . val )		195964	0					
ANR	196069	Callee	Z_TYPE		195964	0					
ANR	196070	Identifier	Z_TYPE		195964	0					
ANR	196071	ArgumentList	ht -> arData [ ht -> nNumUsed - 1 ] . val		195964	1					
ANR	196072	Argument	ht -> arData [ ht -> nNumUsed - 1 ] . val		195964	0					
ANR	196073	MemberAccess	ht -> arData [ ht -> nNumUsed - 1 ] . val		195964	0					
ANR	196074	ArrayIndexing	ht -> arData [ ht -> nNumUsed - 1 ]		195964	0					
ANR	196075	PtrMemberAccess	ht -> arData		195964	0					
ANR	196076	Identifier	ht		195964	0					
ANR	196077	Identifier	arData		195964	1					
ANR	196078	AdditiveExpression	ht -> nNumUsed - 1		195964	1		-			
ANR	196079	PtrMemberAccess	ht -> nNumUsed		195964	0					
ANR	196080	Identifier	ht		195964	0					
ANR	196081	Identifier	nNumUsed		195964	1					
ANR	196082	PrimaryExpression	1		195964	1					
ANR	196083	Identifier	val		195964	1					
ANR	196084	Identifier	IS_UNDEF		195964	1					
ANR	196085	ExpressionStatement	ht -> nNumOfElements --	966:1:29323:29343	195964	3	True				
ANR	196086	PostIncDecOperationExpression	ht -> nNumOfElements --		195964	0					
ANR	196087	PtrMemberAccess	ht -> nNumOfElements		195964	0					
ANR	196088	Identifier	ht		195964	0					
ANR	196089	Identifier	nNumOfElements		195964	1					
ANR	196090	IncDec	--		195964	1					
ANR	196091	IfStatement	if ( HT_IDX_TO_HASH ( ht -> nInternalPointer ) == idx || UNEXPECTED ( ht -> u . v . nIteratorsCount ) )		195964	4					
ANR	196092	Condition	HT_IDX_TO_HASH ( ht -> nInternalPointer ) == idx || UNEXPECTED ( ht -> u . v . nIteratorsCount )	967:5:29350:29431	195964	0	True				
ANR	196093	OrExpression	HT_IDX_TO_HASH ( ht -> nInternalPointer ) == idx || UNEXPECTED ( ht -> u . v . nIteratorsCount )		195964	0		||			
ANR	196094	EqualityExpression	HT_IDX_TO_HASH ( ht -> nInternalPointer ) == idx		195964	0		==			
ANR	196095	CallExpression	HT_IDX_TO_HASH ( ht -> nInternalPointer )		195964	0					
ANR	196096	Callee	HT_IDX_TO_HASH		195964	0					
ANR	196097	Identifier	HT_IDX_TO_HASH		195964	0					
ANR	196098	ArgumentList	ht -> nInternalPointer		195964	1					
ANR	196099	Argument	ht -> nInternalPointer		195964	0					
ANR	196100	PtrMemberAccess	ht -> nInternalPointer		195964	0					
ANR	196101	Identifier	ht		195964	0					
ANR	196102	Identifier	nInternalPointer		195964	1					
ANR	196103	Identifier	idx		195964	1					
ANR	196104	CallExpression	UNEXPECTED ( ht -> u . v . nIteratorsCount )		195964	1					
ANR	196105	Callee	UNEXPECTED		195964	0					
ANR	196106	Identifier	UNEXPECTED		195964	0					
ANR	196107	ArgumentList	ht -> u . v . nIteratorsCount		195964	1					
ANR	196108	Argument	ht -> u . v . nIteratorsCount		195964	0					
ANR	196109	MemberAccess	ht -> u . v . nIteratorsCount		195964	0					
ANR	196110	MemberAccess	ht -> u . v		195964	0					
ANR	196111	PtrMemberAccess	ht -> u		195964	0					
ANR	196112	Identifier	ht		195964	0					
ANR	196113	Identifier	u		195964	1					
ANR	196114	Identifier	v		195964	1					
ANR	196115	Identifier	nIteratorsCount		195964	1					
ANR	196116	CompoundStatement		17:2:492:508	195964	1					
ANR	196117	IdentifierDeclStatement	uint32_t new_idx ;	968:2:29438:29454	195964	0	True				
ANR	196118	IdentifierDecl	new_idx		195964	0					
ANR	196119	IdentifierDeclType	uint32_t		195964	0					
ANR	196120	Identifier	new_idx		195964	1					
ANR	196121	ExpressionStatement	new_idx = idx = HT_HASH_TO_IDX ( idx )	970:2:29459:29494	195964	1	True				
ANR	196122	AssignmentExpression	new_idx = idx = HT_HASH_TO_IDX ( idx )		195964	0		=			
ANR	196123	Identifier	new_idx		195964	0					
ANR	196124	AssignmentExpression	idx = HT_HASH_TO_IDX ( idx )		195964	1		=			
ANR	196125	Identifier	idx		195964	0					
ANR	196126	CallExpression	HT_HASH_TO_IDX ( idx )		195964	1					
ANR	196127	Callee	HT_HASH_TO_IDX		195964	0					
ANR	196128	Identifier	HT_HASH_TO_IDX		195964	0					
ANR	196129	ArgumentList	idx		195964	1					
ANR	196130	Argument	idx		195964	0					
ANR	196131	Identifier	idx		195964	0					
ANR	196132	WhileStatement	while ( 1 )		195964	2					
ANR	196133	Condition	1	971:9:29505:29505	195964	0	True				
ANR	196134	PrimaryExpression	1		195964	0					
ANR	196135	CompoundStatement		20:12:562:562	195964	1					
ANR	196136	ExpressionStatement	new_idx ++	972:3:29513:29522	195964	0	True				
ANR	196137	PostIncDecOperationExpression	new_idx ++		195964	0					
ANR	196138	Identifier	new_idx		195964	0					
ANR	196139	IncDec	++		195964	1					
ANR	196140	IfStatement	if ( new_idx >= ht -> nNumUsed )		195964	1					
ANR	196141	Condition	new_idx >= ht -> nNumUsed	973:7:29531:29553	195964	0	True				
ANR	196142	RelationalExpression	new_idx >= ht -> nNumUsed		195964	0		>=			
ANR	196143	Identifier	new_idx		195964	0					
ANR	196144	PtrMemberAccess	ht -> nNumUsed		195964	1					
ANR	196145	Identifier	ht		195964	0					
ANR	196146	Identifier	nNumUsed		195964	1					
ANR	196147	CompoundStatement		22:32:610:610	195964	1					
ANR	196148	ExpressionStatement	new_idx = HT_INVALID_IDX	974:4:29562:29586	195964	0	True				
ANR	196149	AssignmentExpression	new_idx = HT_INVALID_IDX		195964	0		=			
ANR	196150	Identifier	new_idx		195964	0					
ANR	196151	Identifier	HT_INVALID_IDX		195964	1					
ANR	196152	BreakStatement	break ;	975:4:29592:29597	195964	1	True				
ANR	196153	ElseStatement	else		195964	0					
ANR	196154	IfStatement	if ( Z_TYPE ( ht -> arData [ new_idx ] . val ) != IS_UNDEF )		195964	0					
ANR	196155	Condition	Z_TYPE ( ht -> arData [ new_idx ] . val ) != IS_UNDEF	976:14:29613:29655	195964	0	True				
ANR	196156	EqualityExpression	Z_TYPE ( ht -> arData [ new_idx ] . val ) != IS_UNDEF		195964	0		!=			
ANR	196157	CallExpression	Z_TYPE ( ht -> arData [ new_idx ] . val )		195964	0					
ANR	196158	Callee	Z_TYPE		195964	0					
ANR	196159	Identifier	Z_TYPE		195964	0					
ANR	196160	ArgumentList	ht -> arData [ new_idx ] . val		195964	1					
ANR	196161	Argument	ht -> arData [ new_idx ] . val		195964	0					
ANR	196162	MemberAccess	ht -> arData [ new_idx ] . val		195964	0					
ANR	196163	ArrayIndexing	ht -> arData [ new_idx ]		195964	0					
ANR	196164	PtrMemberAccess	ht -> arData		195964	0					
ANR	196165	Identifier	ht		195964	0					
ANR	196166	Identifier	arData		195964	1					
ANR	196167	Identifier	new_idx		195964	1					
ANR	196168	Identifier	val		195964	1					
ANR	196169	Identifier	IS_UNDEF		195964	1					
ANR	196170	CompoundStatement		25:59:712:712	195964	1					
ANR	196171	BreakStatement	break ;	977:4:29664:29669	195964	0	True				
ANR	196172	IfStatement	if ( ht -> nInternalPointer == idx )		195964	3					
ANR	196173	Condition	ht -> nInternalPointer == idx	980:6:29686:29712	195964	0	True				
ANR	196174	EqualityExpression	ht -> nInternalPointer == idx		195964	0		==			
ANR	196175	PtrMemberAccess	ht -> nInternalPointer		195964	0					
ANR	196176	Identifier	ht		195964	0					
ANR	196177	Identifier	nInternalPointer		195964	1					
ANR	196178	Identifier	idx		195964	1					
ANR	196179	CompoundStatement		29:35:769:769	195964	1					
ANR	196180	ExpressionStatement	ht -> nInternalPointer = new_idx	981:3:29720:29750	195964	0	True				
ANR	196181	AssignmentExpression	ht -> nInternalPointer = new_idx		195964	0		=			
ANR	196182	PtrMemberAccess	ht -> nInternalPointer		195964	0					
ANR	196183	Identifier	ht		195964	0					
ANR	196184	Identifier	nInternalPointer		195964	1					
ANR	196185	Identifier	new_idx		195964	1					
ANR	196186	ExpressionStatement	"zend_hash_iterators_update ( ht , idx , new_idx )"	983:2:29758:29802	195964	4	True				
ANR	196187	CallExpression	"zend_hash_iterators_update ( ht , idx , new_idx )"		195964	0					
ANR	196188	Callee	zend_hash_iterators_update		195964	0					
ANR	196189	Identifier	zend_hash_iterators_update		195964	0					
ANR	196190	ArgumentList	ht		195964	1					
ANR	196191	Argument	ht		195964	0					
ANR	196192	Identifier	ht		195964	0					
ANR	196193	Argument	idx		195964	1					
ANR	196194	Identifier	idx		195964	0					
ANR	196195	Argument	new_idx		195964	2					
ANR	196196	Identifier	new_idx		195964	0					
ANR	196197	IfStatement	if ( p -> key )		195964	5					
ANR	196198	Condition	p -> key	985:5:29812:29817	195964	0	True				
ANR	196199	PtrMemberAccess	p -> key		195964	0					
ANR	196200	Identifier	p		195964	0					
ANR	196201	Identifier	key		195964	1					
ANR	196202	CompoundStatement		34:13:874:874	195964	1					
ANR	196203	ExpressionStatement	zend_string_release ( p -> key )	986:2:29824:29851	195964	0	True				
ANR	196204	CallExpression	zend_string_release ( p -> key )		195964	0					
ANR	196205	Callee	zend_string_release		195964	0					
ANR	196206	Identifier	zend_string_release		195964	0					
ANR	196207	ArgumentList	p -> key		195964	1					
ANR	196208	Argument	p -> key		195964	0					
ANR	196209	PtrMemberAccess	p -> key		195964	0					
ANR	196210	Identifier	p		195964	0					
ANR	196211	Identifier	key		195964	1					
ANR	196212	IfStatement	if ( ht -> pDestructor )		195964	6					
ANR	196213	Condition	ht -> pDestructor	988:5:29861:29875	195964	0	True				
ANR	196214	PtrMemberAccess	ht -> pDestructor		195964	0					
ANR	196215	Identifier	ht		195964	0					
ANR	196216	Identifier	pDestructor		195964	1					
ANR	196217	CompoundStatement		38:2:936:944	195964	1					
ANR	196218	IdentifierDeclStatement	zval tmp ;	989:2:29882:29890	195964	0	True				
ANR	196219	IdentifierDecl	tmp		195964	0					
ANR	196220	IdentifierDeclType	zval		195964	0					
ANR	196221	Identifier	tmp		195964	1					
ANR	196222	ExpressionStatement	"ZVAL_COPY_VALUE ( & tmp , & p -> val )"	990:2:29894:29924	195964	1	True				
ANR	196223	CallExpression	"ZVAL_COPY_VALUE ( & tmp , & p -> val )"		195964	0					
ANR	196224	Callee	ZVAL_COPY_VALUE		195964	0					
ANR	196225	Identifier	ZVAL_COPY_VALUE		195964	0					
ANR	196226	ArgumentList	& tmp		195964	1					
ANR	196227	Argument	& tmp		195964	0					
ANR	196228	UnaryOperationExpression	& tmp		195964	0					
ANR	196229	UnaryOperator	&		195964	0					
ANR	196230	Identifier	tmp		195964	1					
ANR	196231	Argument	& p -> val		195964	1					
ANR	196232	UnaryOperationExpression	& p -> val		195964	0					
ANR	196233	UnaryOperator	&		195964	0					
ANR	196234	PtrMemberAccess	p -> val		195964	1					
ANR	196235	Identifier	p		195964	0					
ANR	196236	Identifier	val		195964	1					
ANR	196237	ExpressionStatement	ZVAL_UNDEF ( & p -> val )	991:2:29928:29947	195964	2	True				
ANR	196238	CallExpression	ZVAL_UNDEF ( & p -> val )		195964	0					
ANR	196239	Callee	ZVAL_UNDEF		195964	0					
ANR	196240	Identifier	ZVAL_UNDEF		195964	0					
ANR	196241	ArgumentList	& p -> val		195964	1					
ANR	196242	Argument	& p -> val		195964	0					
ANR	196243	UnaryOperationExpression	& p -> val		195964	0					
ANR	196244	UnaryOperator	&		195964	0					
ANR	196245	PtrMemberAccess	p -> val		195964	1					
ANR	196246	Identifier	p		195964	0					
ANR	196247	Identifier	val		195964	1					
ANR	196248	ExpressionStatement	ht -> pDestructor ( & tmp )	992:2:29951:29972	195964	3	True				
ANR	196249	CallExpression	ht -> pDestructor ( & tmp )		195964	0					
ANR	196250	Callee	ht -> pDestructor		195964	0					
ANR	196251	PtrMemberAccess	ht -> pDestructor		195964	0					
ANR	196252	Identifier	ht		195964	0					
ANR	196253	Identifier	pDestructor		195964	1					
ANR	196254	ArgumentList	& tmp		195964	1					
ANR	196255	Argument	& tmp		195964	0					
ANR	196256	UnaryOperationExpression	& tmp		195964	0					
ANR	196257	UnaryOperator	&		195964	0					
ANR	196258	Identifier	tmp		195964	1					
ANR	196259	ElseStatement	else		195964	0					
ANR	196260	CompoundStatement		42:8:1036:1036	195964	0					
ANR	196261	ExpressionStatement	ZVAL_UNDEF ( & p -> val )	994:2:29986:30005	195964	0	True				
ANR	196262	CallExpression	ZVAL_UNDEF ( & p -> val )		195964	0					
ANR	196263	Callee	ZVAL_UNDEF		195964	0					
ANR	196264	Identifier	ZVAL_UNDEF		195964	0					
ANR	196265	ArgumentList	& p -> val		195964	1					
ANR	196266	Argument	& p -> val		195964	0					
ANR	196267	UnaryOperationExpression	& p -> val		195964	0					
ANR	196268	UnaryOperator	&		195964	0					
ANR	196269	PtrMemberAccess	p -> val		195964	1					
ANR	196270	Identifier	p		195964	0					
ANR	196271	Identifier	val		195964	1					
ANR	196272	ExpressionStatement	HANDLE_UNBLOCK_INTERRUPTIONS ( )	996:1:30011:30041	195964	7	True				
ANR	196273	CallExpression	HANDLE_UNBLOCK_INTERRUPTIONS ( )		195964	0					
ANR	196274	Callee	HANDLE_UNBLOCK_INTERRUPTIONS		195964	0					
ANR	196275	Identifier	HANDLE_UNBLOCK_INTERRUPTIONS		195964	0					
ANR	196276	ArgumentList			195964	1					
ANR	196277	ReturnType	static zend_always_inline void		195964	1					
ANR	196278	Identifier	_zend_hash_del_el_ex		195964	2					
ANR	196279	ParameterList	"HashTable * ht , uint32_t idx , Bucket * p , Bucket * prev"		195964	3					
ANR	196280	Parameter	HashTable * ht	951:52:28891:28903	195964	0	True				
ANR	196281	ParameterType	HashTable *		195964	0					
ANR	196282	Identifier	ht		195964	1					
ANR	196283	Parameter	uint32_t idx	951:67:28906:28917	195964	1	True				
ANR	196284	ParameterType	uint32_t		195964	0					
ANR	196285	Identifier	idx		195964	1					
ANR	196286	Parameter	Bucket * p	951:81:28920:28928	195964	2	True				
ANR	196287	ParameterType	Bucket *		195964	0					
ANR	196288	Identifier	p		195964	1					
ANR	196289	Parameter	Bucket * prev	951:92:28931:28942	195964	3	True				
ANR	196290	ParameterType	Bucket *		195964	0					
ANR	196291	Identifier	prev		195964	1					
ANR	196292	CFGEntryNode	ENTRY		195964		True				
ANR	196293	CFGExitNode	EXIT		195964		True				
ANR	196294	Symbol	ht -> nTableMask		195964						
ANR	196295	Symbol	HASH_FLAG_PACKED		195964						
ANR	196296	Symbol	prev		195964						
ANR	196297	Symbol	ht -> u		195964						
ANR	196298	Symbol	* new_idx		195964						
ANR	196299	Symbol	ht -> pDestructor		195964						
ANR	196300	Symbol	ht -> arData		195964						
ANR	196301	Symbol	Z_TYPE		195964						
ANR	196302	Symbol	* prev		195964						
ANR	196303	Symbol	ht -> u . flags		195964						
ANR	196304	Symbol	Z_NEXT		195964						
ANR	196305	Symbol	ht		195964						
ANR	196306	Symbol	* ht -> nNumUsed		195964						
ANR	196307	Symbol	ht -> arData [ new_idx ] . val		195964						
ANR	196308	Symbol	ht -> u . v		195964						
ANR	196309	Symbol	UNEXPECTED		195964						
ANR	196310	Symbol	* ht		195964						
ANR	196311	Symbol	HT_HASH		195964						
ANR	196312	Symbol	tmp		195964						
ANR	196313	Symbol	p -> h		195964						
ANR	196314	Symbol	IS_UNDEF		195964						
ANR	196315	Symbol	ht -> nNumOfElements		195964						
ANR	196316	Symbol	new_idx		195964						
ANR	196317	Symbol	& p -> val		195964						
ANR	196318	Symbol	ht -> nInternalPointer		195964						
ANR	196319	Symbol	HT_INVALID_IDX		195964						
ANR	196320	Symbol	ht -> arData [ ht -> nNumUsed - 1 ] . val		195964						
ANR	196321	Symbol	HT_HASH_TO_IDX		195964						
ANR	196322	Symbol	prev -> val		195964						
ANR	196323	Symbol	p -> val		195964						
ANR	196324	Symbol	HT_IDX_TO_HASH		195964						
ANR	196325	Symbol	* ht -> arData		195964						
ANR	196326	Symbol	p -> key		195964						
ANR	196327	Symbol	p		195964						
ANR	196328	Symbol	* p		195964						
ANR	196329	Symbol	* * ht		195964						
ANR	196330	Symbol	& tmp		195964						
ANR	196331	Symbol	idx		195964						
ANR	196332	Symbol	ht -> nNumUsed		195964						
ANR	196333	Symbol	ht -> u . v . nIteratorsCount		195964						
ANR	196334	Function	_zend_hash_del_el	999:0:30046:30493							
ANR	196335	FunctionDef	"_zend_hash_del_el (HashTable * ht , uint32_t idx , Bucket * p)"		196334	0					
ANR	196336	CompoundStatement		1000:0:30135:30493	196334	0					
ANR	196337	IdentifierDeclStatement	Bucket * prev = NULL ;	1001:1:30138:30157	196334	0	True				
ANR	196338	IdentifierDecl	* prev = NULL		196334	0					
ANR	196339	IdentifierDeclType	Bucket *		196334	0					
ANR	196340	Identifier	prev		196334	1					
ANR	196341	AssignmentExpression	* prev = NULL		196334	2		=			
ANR	196342	Identifier	NULL		196334	0					
ANR	196343	Identifier	NULL		196334	1					
ANR	196344	IfStatement	if ( ! ( ht -> u . flags & HASH_FLAG_PACKED ) )		196334	1					
ANR	196345	Condition	! ( ht -> u . flags & HASH_FLAG_PACKED )	1003:5:30165:30197	196334	0	True				
ANR	196346	UnaryOperationExpression	! ( ht -> u . flags & HASH_FLAG_PACKED )		196334	0					
ANR	196347	UnaryOperator	!		196334	0					
ANR	196348	BitAndExpression	ht -> u . flags & HASH_FLAG_PACKED		196334	1		&			
ANR	196349	MemberAccess	ht -> u . flags		196334	0					
ANR	196350	PtrMemberAccess	ht -> u		196334	0					
ANR	196351	Identifier	ht		196334	0					
ANR	196352	Identifier	u		196334	1					
ANR	196353	Identifier	flags		196334	1					
ANR	196354	Identifier	HASH_FLAG_PACKED		196334	1					
ANR	196355	CompoundStatement		6:2:111:143	196334	1					
ANR	196356	IdentifierDeclStatement	uint32_t nIndex = p -> h | ht -> nTableMask ;	1004:2:30204:30243	196334	0	True				
ANR	196357	IdentifierDecl	nIndex = p -> h | ht -> nTableMask		196334	0					
ANR	196358	IdentifierDeclType	uint32_t		196334	0					
ANR	196359	Identifier	nIndex		196334	1					
ANR	196360	AssignmentExpression	nIndex = p -> h | ht -> nTableMask		196334	2		=			
ANR	196361	Identifier	nIndex		196334	0					
ANR	196362	InclusiveOrExpression	p -> h | ht -> nTableMask		196334	1		|			
ANR	196363	PtrMemberAccess	p -> h		196334	0					
ANR	196364	Identifier	p		196334	0					
ANR	196365	Identifier	h		196334	1					
ANR	196366	PtrMemberAccess	ht -> nTableMask		196334	1					
ANR	196367	Identifier	ht		196334	0					
ANR	196368	Identifier	nTableMask		196334	1					
ANR	196369	IdentifierDeclStatement	"uint32_t i = HT_HASH ( ht , nIndex ) ;"	1005:2:30247:30279	196334	1	True				
ANR	196370	IdentifierDecl	"i = HT_HASH ( ht , nIndex )"		196334	0					
ANR	196371	IdentifierDeclType	uint32_t		196334	0					
ANR	196372	Identifier	i		196334	1					
ANR	196373	AssignmentExpression	"i = HT_HASH ( ht , nIndex )"		196334	2		=			
ANR	196374	Identifier	i		196334	0					
ANR	196375	CallExpression	"HT_HASH ( ht , nIndex )"		196334	1					
ANR	196376	Callee	HT_HASH		196334	0					
ANR	196377	Identifier	HT_HASH		196334	0					
ANR	196378	ArgumentList	ht		196334	1					
ANR	196379	Argument	ht		196334	0					
ANR	196380	Identifier	ht		196334	0					
ANR	196381	Argument	nIndex		196334	1					
ANR	196382	Identifier	nIndex		196334	0					
ANR	196383	IfStatement	if ( i != idx )		196334	2					
ANR	196384	Condition	i != idx	1007:6:30288:30295	196334	0	True				
ANR	196385	EqualityExpression	i != idx		196334	0		!=			
ANR	196386	Identifier	i		196334	0					
ANR	196387	Identifier	idx		196334	1					
ANR	196388	CompoundStatement		8:16:162:162	196334	1					
ANR	196389	ExpressionStatement	"prev = HT_HASH_TO_BUCKET ( ht , i )"	1008:3:30303:30334	196334	0	True				
ANR	196390	AssignmentExpression	"prev = HT_HASH_TO_BUCKET ( ht , i )"		196334	0		=			
ANR	196391	Identifier	prev		196334	0					
ANR	196392	CallExpression	"HT_HASH_TO_BUCKET ( ht , i )"		196334	1					
ANR	196393	Callee	HT_HASH_TO_BUCKET		196334	0					
ANR	196394	Identifier	HT_HASH_TO_BUCKET		196334	0					
ANR	196395	ArgumentList	ht		196334	1					
ANR	196396	Argument	ht		196334	0					
ANR	196397	Identifier	ht		196334	0					
ANR	196398	Argument	i		196334	1					
ANR	196399	Identifier	i		196334	0					
ANR	196400	WhileStatement	while ( Z_NEXT ( prev -> val ) != idx )		196334	1					
ANR	196401	Condition	Z_NEXT ( prev -> val ) != idx	1009:10:30346:30369	196334	0	True				
ANR	196402	EqualityExpression	Z_NEXT ( prev -> val ) != idx		196334	0		!=			
ANR	196403	CallExpression	Z_NEXT ( prev -> val )		196334	0					
ANR	196404	Callee	Z_NEXT		196334	0					
ANR	196405	Identifier	Z_NEXT		196334	0					
ANR	196406	ArgumentList	prev -> val		196334	1					
ANR	196407	Argument	prev -> val		196334	0					
ANR	196408	PtrMemberAccess	prev -> val		196334	0					
ANR	196409	Identifier	prev		196334	0					
ANR	196410	Identifier	val		196334	1					
ANR	196411	Identifier	idx		196334	1					
ANR	196412	CompoundStatement		10:36:236:236	196334	1					
ANR	196413	ExpressionStatement	i = Z_NEXT ( prev -> val )	1010:4:30378:30399	196334	0	True				
ANR	196414	AssignmentExpression	i = Z_NEXT ( prev -> val )		196334	0		=			
ANR	196415	Identifier	i		196334	0					
ANR	196416	CallExpression	Z_NEXT ( prev -> val )		196334	1					
ANR	196417	Callee	Z_NEXT		196334	0					
ANR	196418	Identifier	Z_NEXT		196334	0					
ANR	196419	ArgumentList	prev -> val		196334	1					
ANR	196420	Argument	prev -> val		196334	0					
ANR	196421	PtrMemberAccess	prev -> val		196334	0					
ANR	196422	Identifier	prev		196334	0					
ANR	196423	Identifier	val		196334	1					
ANR	196424	ExpressionStatement	"prev = HT_HASH_TO_BUCKET ( ht , i )"	1011:4:30405:30436	196334	1	True				
ANR	196425	AssignmentExpression	"prev = HT_HASH_TO_BUCKET ( ht , i )"		196334	0		=			
ANR	196426	Identifier	prev		196334	0					
ANR	196427	CallExpression	"HT_HASH_TO_BUCKET ( ht , i )"		196334	1					
ANR	196428	Callee	HT_HASH_TO_BUCKET		196334	0					
ANR	196429	Identifier	HT_HASH_TO_BUCKET		196334	0					
ANR	196430	ArgumentList	ht		196334	1					
ANR	196431	Argument	ht		196334	0					
ANR	196432	Identifier	ht		196334	0					
ANR	196433	Argument	i		196334	1					
ANR	196434	Identifier	i		196334	0					
ANR	196435	ExpressionStatement	"_zend_hash_del_el_ex ( ht , idx , p , prev )"	1016:1:30453:30491	196334	2	True				
ANR	196436	CallExpression	"_zend_hash_del_el_ex ( ht , idx , p , prev )"		196334	0					
ANR	196437	Callee	_zend_hash_del_el_ex		196334	0					
ANR	196438	Identifier	_zend_hash_del_el_ex		196334	0					
ANR	196439	ArgumentList	ht		196334	1					
ANR	196440	Argument	ht		196334	0					
ANR	196441	Identifier	ht		196334	0					
ANR	196442	Argument	idx		196334	1					
ANR	196443	Identifier	idx		196334	0					
ANR	196444	Argument	p		196334	2					
ANR	196445	Identifier	p		196334	0					
ANR	196446	Argument	prev		196334	3					
ANR	196447	Identifier	prev		196334	0					
ANR	196448	ReturnType	static zend_always_inline void		196334	1					
ANR	196449	Identifier	_zend_hash_del_el		196334	2					
ANR	196450	ParameterList	"HashTable * ht , uint32_t idx , Bucket * p"		196334	3					
ANR	196451	Parameter	HashTable * ht	999:49:30095:30107	196334	0	True				
ANR	196452	ParameterType	HashTable *		196334	0					
ANR	196453	Identifier	ht		196334	1					
ANR	196454	Parameter	uint32_t idx	999:64:30110:30121	196334	1	True				
ANR	196455	ParameterType	uint32_t		196334	0					
ANR	196456	Identifier	idx		196334	1					
ANR	196457	Parameter	Bucket * p	999:78:30124:30132	196334	2	True				
ANR	196458	ParameterType	Bucket *		196334	0					
ANR	196459	Identifier	p		196334	1					
ANR	196460	CFGEntryNode	ENTRY		196334		True				
ANR	196461	CFGExitNode	EXIT		196334		True				
ANR	196462	Symbol	NULL		196334						
ANR	196463	Symbol	ht -> nTableMask		196334						
ANR	196464	Symbol	HASH_FLAG_PACKED		196334						
ANR	196465	Symbol	prev		196334						
ANR	196466	Symbol	prev -> val		196334						
ANR	196467	Symbol	ht -> u		196334						
ANR	196468	Symbol	nIndex		196334						
ANR	196469	Symbol	i		196334						
ANR	196470	Symbol	* prev		196334						
ANR	196471	Symbol	ht -> u . flags		196334						
ANR	196472	Symbol	Z_NEXT		196334						
ANR	196473	Symbol	ht		196334						
ANR	196474	Symbol	p		196334						
ANR	196475	Symbol	* ht		196334						
ANR	196476	Symbol	HT_HASH		196334						
ANR	196477	Symbol	* p		196334						
ANR	196478	Symbol	idx		196334						
ANR	196479	Symbol	p -> h		196334						
ANR	196480	Symbol	HT_HASH_TO_BUCKET		196334						
ANR	196481	Function	zend_hash_del_bucket	1019:0:30496:30686							
ANR	196482	FunctionDef	"zend_hash_del_bucket (HashTable * ht , Bucket * p)"		196481	0					
ANR	196483	CompoundStatement		1020:0:30571:30686	196481	0					
ANR	196484	ExpressionStatement	IS_CONSISTENT ( ht )	1021:1:30574:30591	196481	0	True				
ANR	196485	CallExpression	IS_CONSISTENT ( ht )		196481	0					
ANR	196486	Callee	IS_CONSISTENT		196481	0					
ANR	196487	Identifier	IS_CONSISTENT		196481	0					
ANR	196488	ArgumentList	ht		196481	1					
ANR	196489	Argument	ht		196481	0					
ANR	196490	Identifier	ht		196481	0					
ANR	196491	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	1022:1:30594:30625	196481	1	True				
ANR	196492	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		196481	0					
ANR	196493	Callee	HT_ASSERT		196481	0					
ANR	196494	Identifier	HT_ASSERT		196481	0					
ANR	196495	ArgumentList	GC_REFCOUNT ( ht ) == 1		196481	1					
ANR	196496	Argument	GC_REFCOUNT ( ht ) == 1		196481	0					
ANR	196497	EqualityExpression	GC_REFCOUNT ( ht ) == 1		196481	0		==			
ANR	196498	CallExpression	GC_REFCOUNT ( ht )		196481	0					
ANR	196499	Callee	GC_REFCOUNT		196481	0					
ANR	196500	Identifier	GC_REFCOUNT		196481	0					
ANR	196501	ArgumentList	ht		196481	1					
ANR	196502	Argument	ht		196481	0					
ANR	196503	Identifier	ht		196481	0					
ANR	196504	PrimaryExpression	1		196481	1					
ANR	196505	ExpressionStatement	"_zend_hash_del_el ( ht , HT_IDX_TO_HASH ( p - ht -> arData ) , p )"	1023:1:30628:30684	196481	2	True				
ANR	196506	CallExpression	"_zend_hash_del_el ( ht , HT_IDX_TO_HASH ( p - ht -> arData ) , p )"		196481	0					
ANR	196507	Callee	_zend_hash_del_el		196481	0					
ANR	196508	Identifier	_zend_hash_del_el		196481	0					
ANR	196509	ArgumentList	ht		196481	1					
ANR	196510	Argument	ht		196481	0					
ANR	196511	Identifier	ht		196481	0					
ANR	196512	Argument	HT_IDX_TO_HASH ( p - ht -> arData )		196481	1					
ANR	196513	CallExpression	HT_IDX_TO_HASH ( p - ht -> arData )		196481	0					
ANR	196514	Callee	HT_IDX_TO_HASH		196481	0					
ANR	196515	Identifier	HT_IDX_TO_HASH		196481	0					
ANR	196516	ArgumentList	p - ht -> arData		196481	1					
ANR	196517	Argument	p - ht -> arData		196481	0					
ANR	196518	AdditiveExpression	p - ht -> arData		196481	0		-			
ANR	196519	Identifier	p		196481	0					
ANR	196520	PtrMemberAccess	ht -> arData		196481	1					
ANR	196521	Identifier	ht		196481	0					
ANR	196522	Identifier	arData		196481	1					
ANR	196523	Argument	p		196481	2					
ANR	196524	Identifier	p		196481	0					
ANR	196525	ReturnType	ZEND_API void ZEND_FASTCALL		196481	1					
ANR	196526	Identifier	zend_hash_del_bucket		196481	2					
ANR	196527	ParameterList	"HashTable * ht , Bucket * p"		196481	3					
ANR	196528	Parameter	HashTable * ht	1019:49:30545:30557	196481	0	True				
ANR	196529	ParameterType	HashTable *		196481	0					
ANR	196530	Identifier	ht		196481	1					
ANR	196531	Parameter	Bucket * p	1019:64:30560:30568	196481	1	True				
ANR	196532	ParameterType	Bucket *		196481	0					
ANR	196533	Identifier	p		196481	1					
ANR	196534	CFGEntryNode	ENTRY		196481		True				
ANR	196535	CFGExitNode	EXIT		196481		True				
ANR	196536	Symbol	p		196481						
ANR	196537	Symbol	* ht		196481						
ANR	196538	Symbol	ht -> arData		196481						
ANR	196539	Symbol	ht		196481						
ANR	196540	Symbol	GC_REFCOUNT		196481						
ANR	196541	Symbol	HT_IDX_TO_HASH		196481						
ANR	196542	Function	zend_hash_del	1026:0:30689:31357							
ANR	196543	FunctionDef	"zend_hash_del (HashTable * ht , zend_string * key)"		196542	0					
ANR	196544	CompoundStatement		1027:0:30763:31357	196542	0					
ANR	196545	IdentifierDeclStatement	zend_ulong h ;	1028:1:30766:30778	196542	0	True				
ANR	196546	IdentifierDecl	h		196542	0					
ANR	196547	IdentifierDeclType	zend_ulong		196542	0					
ANR	196548	Identifier	h		196542	1					
ANR	196549	IdentifierDeclStatement	uint32_t nIndex ;	1029:1:30781:30796	196542	1	True				
ANR	196550	IdentifierDecl	nIndex		196542	0					
ANR	196551	IdentifierDeclType	uint32_t		196542	0					
ANR	196552	Identifier	nIndex		196542	1					
ANR	196553	IdentifierDeclStatement	uint32_t idx ;	1030:1:30799:30811	196542	2	True				
ANR	196554	IdentifierDecl	idx		196542	0					
ANR	196555	IdentifierDeclType	uint32_t		196542	0					
ANR	196556	Identifier	idx		196542	1					
ANR	196557	IdentifierDeclStatement	Bucket * p ;	1031:1:30814:30823	196542	3	True				
ANR	196558	IdentifierDecl	* p		196542	0					
ANR	196559	IdentifierDeclType	Bucket *		196542	0					
ANR	196560	Identifier	p		196542	1					
ANR	196561	IdentifierDeclStatement	Bucket * prev = NULL ;	1032:1:30826:30845	196542	4	True				
ANR	196562	IdentifierDecl	* prev = NULL		196542	0					
ANR	196563	IdentifierDeclType	Bucket *		196542	0					
ANR	196564	Identifier	prev		196542	1					
ANR	196565	AssignmentExpression	* prev = NULL		196542	2		=			
ANR	196566	Identifier	NULL		196542	0					
ANR	196567	Identifier	NULL		196542	1					
ANR	196568	ExpressionStatement	IS_CONSISTENT ( ht )	1034:1:30849:30866	196542	5	True				
ANR	196569	CallExpression	IS_CONSISTENT ( ht )		196542	0					
ANR	196570	Callee	IS_CONSISTENT		196542	0					
ANR	196571	Identifier	IS_CONSISTENT		196542	0					
ANR	196572	ArgumentList	ht		196542	1					
ANR	196573	Argument	ht		196542	0					
ANR	196574	Identifier	ht		196542	0					
ANR	196575	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	1035:1:30869:30900	196542	6	True				
ANR	196576	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		196542	0					
ANR	196577	Callee	HT_ASSERT		196542	0					
ANR	196578	Identifier	HT_ASSERT		196542	0					
ANR	196579	ArgumentList	GC_REFCOUNT ( ht ) == 1		196542	1					
ANR	196580	Argument	GC_REFCOUNT ( ht ) == 1		196542	0					
ANR	196581	EqualityExpression	GC_REFCOUNT ( ht ) == 1		196542	0		==			
ANR	196582	CallExpression	GC_REFCOUNT ( ht )		196542	0					
ANR	196583	Callee	GC_REFCOUNT		196542	0					
ANR	196584	Identifier	GC_REFCOUNT		196542	0					
ANR	196585	ArgumentList	ht		196542	1					
ANR	196586	Argument	ht		196542	0					
ANR	196587	Identifier	ht		196542	0					
ANR	196588	PrimaryExpression	1		196542	1					
ANR	196589	ExpressionStatement	h = zend_string_hash_val ( key )	1037:1:30904:30933	196542	7	True				
ANR	196590	AssignmentExpression	h = zend_string_hash_val ( key )		196542	0		=			
ANR	196591	Identifier	h		196542	0					
ANR	196592	CallExpression	zend_string_hash_val ( key )		196542	1					
ANR	196593	Callee	zend_string_hash_val		196542	0					
ANR	196594	Identifier	zend_string_hash_val		196542	0					
ANR	196595	ArgumentList	key		196542	1					
ANR	196596	Argument	key		196542	0					
ANR	196597	Identifier	key		196542	0					
ANR	196598	ExpressionStatement	nIndex = h | ht -> nTableMask	1038:1:30936:30963	196542	8	True				
ANR	196599	AssignmentExpression	nIndex = h | ht -> nTableMask		196542	0		=			
ANR	196600	Identifier	nIndex		196542	0					
ANR	196601	InclusiveOrExpression	h | ht -> nTableMask		196542	1		|			
ANR	196602	Identifier	h		196542	0					
ANR	196603	PtrMemberAccess	ht -> nTableMask		196542	1					
ANR	196604	Identifier	ht		196542	0					
ANR	196605	Identifier	nTableMask		196542	1					
ANR	196606	ExpressionStatement	"idx = HT_HASH ( ht , nIndex )"	1040:1:30967:30992	196542	9	True				
ANR	196607	AssignmentExpression	"idx = HT_HASH ( ht , nIndex )"		196542	0		=			
ANR	196608	Identifier	idx		196542	0					
ANR	196609	CallExpression	"HT_HASH ( ht , nIndex )"		196542	1					
ANR	196610	Callee	HT_HASH		196542	0					
ANR	196611	Identifier	HT_HASH		196542	0					
ANR	196612	ArgumentList	ht		196542	1					
ANR	196613	Argument	ht		196542	0					
ANR	196614	Identifier	ht		196542	0					
ANR	196615	Argument	nIndex		196542	1					
ANR	196616	Identifier	nIndex		196542	0					
ANR	196617	WhileStatement	while ( idx != HT_INVALID_IDX )		196542	10					
ANR	196618	Condition	idx != HT_INVALID_IDX	1041:8:31002:31022	196542	0	True				
ANR	196619	EqualityExpression	idx != HT_INVALID_IDX		196542	0		!=			
ANR	196620	Identifier	idx		196542	0					
ANR	196621	Identifier	HT_INVALID_IDX		196542	1					
ANR	196622	CompoundStatement		15:31:261:261	196542	1					
ANR	196623	ExpressionStatement	"p = HT_HASH_TO_BUCKET ( ht , idx )"	1042:2:31029:31059	196542	0	True				
ANR	196624	AssignmentExpression	"p = HT_HASH_TO_BUCKET ( ht , idx )"		196542	0		=			
ANR	196625	Identifier	p		196542	0					
ANR	196626	CallExpression	"HT_HASH_TO_BUCKET ( ht , idx )"		196542	1					
ANR	196627	Callee	HT_HASH_TO_BUCKET		196542	0					
ANR	196628	Identifier	HT_HASH_TO_BUCKET		196542	0					
ANR	196629	ArgumentList	ht		196542	1					
ANR	196630	Argument	ht		196542	0					
ANR	196631	Identifier	ht		196542	0					
ANR	196632	Argument	idx		196542	1					
ANR	196633	Identifier	idx		196542	0					
ANR	196634	IfStatement	"if ( ( p -> key == key ) || ( p -> h == h && p -> key && ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key ) && memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0 ) )"		196542	1					
ANR	196635	Condition	"( p -> key == key ) || ( p -> h == h && p -> key && ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key ) && memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0 )"	1043:6:31067:31230	196542	0	True				
ANR	196636	OrExpression	"( p -> key == key ) || ( p -> h == h && p -> key && ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key ) && memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0 )"		196542	0		||			
ANR	196637	EqualityExpression	p -> key == key		196542	0		==			
ANR	196638	PtrMemberAccess	p -> key		196542	0					
ANR	196639	Identifier	p		196542	0					
ANR	196640	Identifier	key		196542	1					
ANR	196641	Identifier	key		196542	1					
ANR	196642	AndExpression	"p -> h == h && p -> key && ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key ) && memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0"		196542	1		&&			
ANR	196643	EqualityExpression	p -> h == h		196542	0		==			
ANR	196644	PtrMemberAccess	p -> h		196542	0					
ANR	196645	Identifier	p		196542	0					
ANR	196646	Identifier	h		196542	1					
ANR	196647	Identifier	h		196542	1					
ANR	196648	AndExpression	"p -> key && ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key ) && memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0"		196542	1		&&			
ANR	196649	PtrMemberAccess	p -> key		196542	0					
ANR	196650	Identifier	p		196542	0					
ANR	196651	Identifier	key		196542	1					
ANR	196652	AndExpression	"ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key ) && memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0"		196542	1		&&			
ANR	196653	EqualityExpression	ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key )		196542	0		==			
ANR	196654	CallExpression	ZSTR_LEN ( p -> key )		196542	0					
ANR	196655	Callee	ZSTR_LEN		196542	0					
ANR	196656	Identifier	ZSTR_LEN		196542	0					
ANR	196657	ArgumentList	p -> key		196542	1					
ANR	196658	Argument	p -> key		196542	0					
ANR	196659	PtrMemberAccess	p -> key		196542	0					
ANR	196660	Identifier	p		196542	0					
ANR	196661	Identifier	key		196542	1					
ANR	196662	CallExpression	ZSTR_LEN ( key )		196542	1					
ANR	196663	Callee	ZSTR_LEN		196542	0					
ANR	196664	Identifier	ZSTR_LEN		196542	0					
ANR	196665	ArgumentList	key		196542	1					
ANR	196666	Argument	key		196542	0					
ANR	196667	Identifier	key		196542	0					
ANR	196668	EqualityExpression	"memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0"		196542	1		==			
ANR	196669	CallExpression	"memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) )"		196542	0					
ANR	196670	Callee	memcmp		196542	0					
ANR	196671	Identifier	memcmp		196542	0					
ANR	196672	ArgumentList	ZSTR_VAL ( p -> key )		196542	1					
ANR	196673	Argument	ZSTR_VAL ( p -> key )		196542	0					
ANR	196674	CallExpression	ZSTR_VAL ( p -> key )		196542	0					
ANR	196675	Callee	ZSTR_VAL		196542	0					
ANR	196676	Identifier	ZSTR_VAL		196542	0					
ANR	196677	ArgumentList	p -> key		196542	1					
ANR	196678	Argument	p -> key		196542	0					
ANR	196679	PtrMemberAccess	p -> key		196542	0					
ANR	196680	Identifier	p		196542	0					
ANR	196681	Identifier	key		196542	1					
ANR	196682	Argument	ZSTR_VAL ( key )		196542	1					
ANR	196683	CallExpression	ZSTR_VAL ( key )		196542	0					
ANR	196684	Callee	ZSTR_VAL		196542	0					
ANR	196685	Identifier	ZSTR_VAL		196542	0					
ANR	196686	ArgumentList	key		196542	1					
ANR	196687	Argument	key		196542	0					
ANR	196688	Identifier	key		196542	0					
ANR	196689	Argument	ZSTR_LEN ( key )		196542	2					
ANR	196690	CallExpression	ZSTR_LEN ( key )		196542	0					
ANR	196691	Callee	ZSTR_LEN		196542	0					
ANR	196692	Identifier	ZSTR_LEN		196542	0					
ANR	196693	ArgumentList	key		196542	1					
ANR	196694	Argument	key		196542	0					
ANR	196695	Identifier	key		196542	0					
ANR	196696	PrimaryExpression	0		196542	1					
ANR	196697	CompoundStatement		21:69:469:469	196542	1					
ANR	196698	ExpressionStatement	"_zend_hash_del_el_ex ( ht , idx , p , prev )"	1048:3:31238:31276	196542	0	True				
ANR	196699	CallExpression	"_zend_hash_del_el_ex ( ht , idx , p , prev )"		196542	0					
ANR	196700	Callee	_zend_hash_del_el_ex		196542	0					
ANR	196701	Identifier	_zend_hash_del_el_ex		196542	0					
ANR	196702	ArgumentList	ht		196542	1					
ANR	196703	Argument	ht		196542	0					
ANR	196704	Identifier	ht		196542	0					
ANR	196705	Argument	idx		196542	1					
ANR	196706	Identifier	idx		196542	0					
ANR	196707	Argument	p		196542	2					
ANR	196708	Identifier	p		196542	0					
ANR	196709	Argument	prev		196542	3					
ANR	196710	Identifier	prev		196542	0					
ANR	196711	ReturnStatement	return SUCCESS ;	1049:3:31281:31295	196542	1	True				
ANR	196712	Identifier	SUCCESS		196542	0					
ANR	196713	ExpressionStatement	prev = p	1051:2:31303:31311	196542	2	True				
ANR	196714	AssignmentExpression	prev = p		196542	0		=			
ANR	196715	Identifier	prev		196542	0					
ANR	196716	Identifier	p		196542	1					
ANR	196717	ExpressionStatement	idx = Z_NEXT ( p -> val )	1052:2:31315:31335	196542	3	True				
ANR	196718	AssignmentExpression	idx = Z_NEXT ( p -> val )		196542	0		=			
ANR	196719	Identifier	idx		196542	0					
ANR	196720	CallExpression	Z_NEXT ( p -> val )		196542	1					
ANR	196721	Callee	Z_NEXT		196542	0					
ANR	196722	Identifier	Z_NEXT		196542	0					
ANR	196723	ArgumentList	p -> val		196542	1					
ANR	196724	Argument	p -> val		196542	0					
ANR	196725	PtrMemberAccess	p -> val		196542	0					
ANR	196726	Identifier	p		196542	0					
ANR	196727	Identifier	val		196542	1					
ANR	196728	ReturnStatement	return FAILURE ;	1054:1:31341:31355	196542	11	True				
ANR	196729	Identifier	FAILURE		196542	0					
ANR	196730	ReturnType	ZEND_API int ZEND_FASTCALL		196542	1					
ANR	196731	Identifier	zend_hash_del		196542	2					
ANR	196732	ParameterList	"HashTable * ht , zend_string * key"		196542	3					
ANR	196733	Parameter	HashTable * ht	1026:41:30730:30742	196542	0	True				
ANR	196734	ParameterType	HashTable *		196542	0					
ANR	196735	Identifier	ht		196542	1					
ANR	196736	Parameter	zend_string * key	1026:56:30745:30760	196542	1	True				
ANR	196737	ParameterType	zend_string *		196542	0					
ANR	196738	Identifier	key		196542	1					
ANR	196739	CFGEntryNode	ENTRY		196542		True				
ANR	196740	CFGExitNode	EXIT		196542		True				
ANR	196741	Symbol	ht -> nTableMask		196542						
ANR	196742	Symbol	prev		196542						
ANR	196743	Symbol	Z_NEXT		196542						
ANR	196744	Symbol	ht		196542						
ANR	196745	Symbol	* ht		196542						
ANR	196746	Symbol	memcmp		196542						
ANR	196747	Symbol	HT_HASH		196542						
ANR	196748	Symbol	zend_string_hash_val		196542						
ANR	196749	Symbol	GC_REFCOUNT		196542						
ANR	196750	Symbol	key		196542						
ANR	196751	Symbol	p -> h		196542						
ANR	196752	Symbol	HT_INVALID_IDX		196542						
ANR	196753	Symbol	NULL		196542						
ANR	196754	Symbol	SUCCESS		196542						
ANR	196755	Symbol	h		196542						
ANR	196756	Symbol	nIndex		196542						
ANR	196757	Symbol	p -> val		196542						
ANR	196758	Symbol	FAILURE		196542						
ANR	196759	Symbol	p -> key		196542						
ANR	196760	Symbol	ZSTR_VAL		196542						
ANR	196761	Symbol	p		196542						
ANR	196762	Symbol	ZSTR_LEN		196542						
ANR	196763	Symbol	* p		196542						
ANR	196764	Symbol	idx		196542						
ANR	196765	Symbol	HT_HASH_TO_BUCKET		196542						
ANR	196766	Function	zend_hash_del_ind	1057:0:31360:32442							
ANR	196767	FunctionDef	"zend_hash_del_ind (HashTable * ht , zend_string * key)"		196766	0					
ANR	196768	CompoundStatement		1058:0:31438:32442	196766	0					
ANR	196769	IdentifierDeclStatement	zend_ulong h ;	1059:1:31441:31453	196766	0	True				
ANR	196770	IdentifierDecl	h		196766	0					
ANR	196771	IdentifierDeclType	zend_ulong		196766	0					
ANR	196772	Identifier	h		196766	1					
ANR	196773	IdentifierDeclStatement	uint32_t nIndex ;	1060:1:31456:31471	196766	1	True				
ANR	196774	IdentifierDecl	nIndex		196766	0					
ANR	196775	IdentifierDeclType	uint32_t		196766	0					
ANR	196776	Identifier	nIndex		196766	1					
ANR	196777	IdentifierDeclStatement	uint32_t idx ;	1061:1:31474:31486	196766	2	True				
ANR	196778	IdentifierDecl	idx		196766	0					
ANR	196779	IdentifierDeclType	uint32_t		196766	0					
ANR	196780	Identifier	idx		196766	1					
ANR	196781	IdentifierDeclStatement	Bucket * p ;	1062:1:31489:31498	196766	3	True				
ANR	196782	IdentifierDecl	* p		196766	0					
ANR	196783	IdentifierDeclType	Bucket *		196766	0					
ANR	196784	Identifier	p		196766	1					
ANR	196785	IdentifierDeclStatement	Bucket * prev = NULL ;	1063:1:31501:31520	196766	4	True				
ANR	196786	IdentifierDecl	* prev = NULL		196766	0					
ANR	196787	IdentifierDeclType	Bucket *		196766	0					
ANR	196788	Identifier	prev		196766	1					
ANR	196789	AssignmentExpression	* prev = NULL		196766	2		=			
ANR	196790	Identifier	NULL		196766	0					
ANR	196791	Identifier	NULL		196766	1					
ANR	196792	ExpressionStatement	IS_CONSISTENT ( ht )	1065:1:31524:31541	196766	5	True				
ANR	196793	CallExpression	IS_CONSISTENT ( ht )		196766	0					
ANR	196794	Callee	IS_CONSISTENT		196766	0					
ANR	196795	Identifier	IS_CONSISTENT		196766	0					
ANR	196796	ArgumentList	ht		196766	1					
ANR	196797	Argument	ht		196766	0					
ANR	196798	Identifier	ht		196766	0					
ANR	196799	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	1066:1:31544:31575	196766	6	True				
ANR	196800	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		196766	0					
ANR	196801	Callee	HT_ASSERT		196766	0					
ANR	196802	Identifier	HT_ASSERT		196766	0					
ANR	196803	ArgumentList	GC_REFCOUNT ( ht ) == 1		196766	1					
ANR	196804	Argument	GC_REFCOUNT ( ht ) == 1		196766	0					
ANR	196805	EqualityExpression	GC_REFCOUNT ( ht ) == 1		196766	0		==			
ANR	196806	CallExpression	GC_REFCOUNT ( ht )		196766	0					
ANR	196807	Callee	GC_REFCOUNT		196766	0					
ANR	196808	Identifier	GC_REFCOUNT		196766	0					
ANR	196809	ArgumentList	ht		196766	1					
ANR	196810	Argument	ht		196766	0					
ANR	196811	Identifier	ht		196766	0					
ANR	196812	PrimaryExpression	1		196766	1					
ANR	196813	ExpressionStatement	h = zend_string_hash_val ( key )	1068:1:31579:31608	196766	7	True				
ANR	196814	AssignmentExpression	h = zend_string_hash_val ( key )		196766	0		=			
ANR	196815	Identifier	h		196766	0					
ANR	196816	CallExpression	zend_string_hash_val ( key )		196766	1					
ANR	196817	Callee	zend_string_hash_val		196766	0					
ANR	196818	Identifier	zend_string_hash_val		196766	0					
ANR	196819	ArgumentList	key		196766	1					
ANR	196820	Argument	key		196766	0					
ANR	196821	Identifier	key		196766	0					
ANR	196822	ExpressionStatement	nIndex = h | ht -> nTableMask	1069:1:31611:31638	196766	8	True				
ANR	196823	AssignmentExpression	nIndex = h | ht -> nTableMask		196766	0		=			
ANR	196824	Identifier	nIndex		196766	0					
ANR	196825	InclusiveOrExpression	h | ht -> nTableMask		196766	1		|			
ANR	196826	Identifier	h		196766	0					
ANR	196827	PtrMemberAccess	ht -> nTableMask		196766	1					
ANR	196828	Identifier	ht		196766	0					
ANR	196829	Identifier	nTableMask		196766	1					
ANR	196830	ExpressionStatement	"idx = HT_HASH ( ht , nIndex )"	1071:1:31642:31667	196766	9	True				
ANR	196831	AssignmentExpression	"idx = HT_HASH ( ht , nIndex )"		196766	0		=			
ANR	196832	Identifier	idx		196766	0					
ANR	196833	CallExpression	"HT_HASH ( ht , nIndex )"		196766	1					
ANR	196834	Callee	HT_HASH		196766	0					
ANR	196835	Identifier	HT_HASH		196766	0					
ANR	196836	ArgumentList	ht		196766	1					
ANR	196837	Argument	ht		196766	0					
ANR	196838	Identifier	ht		196766	0					
ANR	196839	Argument	nIndex		196766	1					
ANR	196840	Identifier	nIndex		196766	0					
ANR	196841	WhileStatement	while ( idx != HT_INVALID_IDX )		196766	10					
ANR	196842	Condition	idx != HT_INVALID_IDX	1072:8:31677:31697	196766	0	True				
ANR	196843	EqualityExpression	idx != HT_INVALID_IDX		196766	0		!=			
ANR	196844	Identifier	idx		196766	0					
ANR	196845	Identifier	HT_INVALID_IDX		196766	1					
ANR	196846	CompoundStatement		15:31:261:261	196766	1					
ANR	196847	ExpressionStatement	"p = HT_HASH_TO_BUCKET ( ht , idx )"	1073:2:31704:31734	196766	0	True				
ANR	196848	AssignmentExpression	"p = HT_HASH_TO_BUCKET ( ht , idx )"		196766	0		=			
ANR	196849	Identifier	p		196766	0					
ANR	196850	CallExpression	"HT_HASH_TO_BUCKET ( ht , idx )"		196766	1					
ANR	196851	Callee	HT_HASH_TO_BUCKET		196766	0					
ANR	196852	Identifier	HT_HASH_TO_BUCKET		196766	0					
ANR	196853	ArgumentList	ht		196766	1					
ANR	196854	Argument	ht		196766	0					
ANR	196855	Identifier	ht		196766	0					
ANR	196856	Argument	idx		196766	1					
ANR	196857	Identifier	idx		196766	0					
ANR	196858	IfStatement	"if ( ( p -> key == key ) || ( p -> h == h && p -> key && ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key ) && memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0 ) )"		196766	1					
ANR	196859	Condition	"( p -> key == key ) || ( p -> h == h && p -> key && ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key ) && memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0 )"	1074:6:31742:31905	196766	0	True				
ANR	196860	OrExpression	"( p -> key == key ) || ( p -> h == h && p -> key && ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key ) && memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0 )"		196766	0		||			
ANR	196861	EqualityExpression	p -> key == key		196766	0		==			
ANR	196862	PtrMemberAccess	p -> key		196766	0					
ANR	196863	Identifier	p		196766	0					
ANR	196864	Identifier	key		196766	1					
ANR	196865	Identifier	key		196766	1					
ANR	196866	AndExpression	"p -> h == h && p -> key && ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key ) && memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0"		196766	1		&&			
ANR	196867	EqualityExpression	p -> h == h		196766	0		==			
ANR	196868	PtrMemberAccess	p -> h		196766	0					
ANR	196869	Identifier	p		196766	0					
ANR	196870	Identifier	h		196766	1					
ANR	196871	Identifier	h		196766	1					
ANR	196872	AndExpression	"p -> key && ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key ) && memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0"		196766	1		&&			
ANR	196873	PtrMemberAccess	p -> key		196766	0					
ANR	196874	Identifier	p		196766	0					
ANR	196875	Identifier	key		196766	1					
ANR	196876	AndExpression	"ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key ) && memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0"		196766	1		&&			
ANR	196877	EqualityExpression	ZSTR_LEN ( p -> key ) == ZSTR_LEN ( key )		196766	0		==			
ANR	196878	CallExpression	ZSTR_LEN ( p -> key )		196766	0					
ANR	196879	Callee	ZSTR_LEN		196766	0					
ANR	196880	Identifier	ZSTR_LEN		196766	0					
ANR	196881	ArgumentList	p -> key		196766	1					
ANR	196882	Argument	p -> key		196766	0					
ANR	196883	PtrMemberAccess	p -> key		196766	0					
ANR	196884	Identifier	p		196766	0					
ANR	196885	Identifier	key		196766	1					
ANR	196886	CallExpression	ZSTR_LEN ( key )		196766	1					
ANR	196887	Callee	ZSTR_LEN		196766	0					
ANR	196888	Identifier	ZSTR_LEN		196766	0					
ANR	196889	ArgumentList	key		196766	1					
ANR	196890	Argument	key		196766	0					
ANR	196891	Identifier	key		196766	0					
ANR	196892	EqualityExpression	"memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) ) == 0"		196766	1		==			
ANR	196893	CallExpression	"memcmp ( ZSTR_VAL ( p -> key ) , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) )"		196766	0					
ANR	196894	Callee	memcmp		196766	0					
ANR	196895	Identifier	memcmp		196766	0					
ANR	196896	ArgumentList	ZSTR_VAL ( p -> key )		196766	1					
ANR	196897	Argument	ZSTR_VAL ( p -> key )		196766	0					
ANR	196898	CallExpression	ZSTR_VAL ( p -> key )		196766	0					
ANR	196899	Callee	ZSTR_VAL		196766	0					
ANR	196900	Identifier	ZSTR_VAL		196766	0					
ANR	196901	ArgumentList	p -> key		196766	1					
ANR	196902	Argument	p -> key		196766	0					
ANR	196903	PtrMemberAccess	p -> key		196766	0					
ANR	196904	Identifier	p		196766	0					
ANR	196905	Identifier	key		196766	1					
ANR	196906	Argument	ZSTR_VAL ( key )		196766	1					
ANR	196907	CallExpression	ZSTR_VAL ( key )		196766	0					
ANR	196908	Callee	ZSTR_VAL		196766	0					
ANR	196909	Identifier	ZSTR_VAL		196766	0					
ANR	196910	ArgumentList	key		196766	1					
ANR	196911	Argument	key		196766	0					
ANR	196912	Identifier	key		196766	0					
ANR	196913	Argument	ZSTR_LEN ( key )		196766	2					
ANR	196914	CallExpression	ZSTR_LEN ( key )		196766	0					
ANR	196915	Callee	ZSTR_LEN		196766	0					
ANR	196916	Identifier	ZSTR_LEN		196766	0					
ANR	196917	ArgumentList	key		196766	1					
ANR	196918	Argument	key		196766	0					
ANR	196919	Identifier	key		196766	0					
ANR	196920	PrimaryExpression	0		196766	1					
ANR	196921	CompoundStatement		21:69:469:469	196766	1					
ANR	196922	IfStatement	if ( Z_TYPE ( p -> val ) == IS_INDIRECT )		196766	0					
ANR	196923	Condition	Z_TYPE ( p -> val ) == IS_INDIRECT	1079:7:31917:31945	196766	0	True				
ANR	196924	EqualityExpression	Z_TYPE ( p -> val ) == IS_INDIRECT		196766	0		==			
ANR	196925	CallExpression	Z_TYPE ( p -> val )		196766	0					
ANR	196926	Callee	Z_TYPE		196766	0					
ANR	196927	Identifier	Z_TYPE		196766	0					
ANR	196928	ArgumentList	p -> val		196766	1					
ANR	196929	Argument	p -> val		196766	0					
ANR	196930	PtrMemberAccess	p -> val		196766	0					
ANR	196931	Identifier	p		196766	0					
ANR	196932	Identifier	val		196766	1					
ANR	196933	Identifier	IS_INDIRECT		196766	1					
ANR	196934	CompoundStatement		23:4:515:546	196766	1					
ANR	196935	IdentifierDeclStatement	zval * data = Z_INDIRECT ( p -> val ) ;	1080:4:31954:31985	196766	0	True				
ANR	196936	IdentifierDecl	* data = Z_INDIRECT ( p -> val )		196766	0					
ANR	196937	IdentifierDeclType	zval *		196766	0					
ANR	196938	Identifier	data		196766	1					
ANR	196939	AssignmentExpression	* data = Z_INDIRECT ( p -> val )		196766	2		=			
ANR	196940	Identifier	data		196766	0					
ANR	196941	CallExpression	Z_INDIRECT ( p -> val )		196766	1					
ANR	196942	Callee	Z_INDIRECT		196766	0					
ANR	196943	Identifier	Z_INDIRECT		196766	0					
ANR	196944	ArgumentList	p -> val		196766	1					
ANR	196945	Argument	p -> val		196766	0					
ANR	196946	PtrMemberAccess	p -> val		196766	0					
ANR	196947	Identifier	p		196766	0					
ANR	196948	Identifier	val		196766	1					
ANR	196949	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( data ) == IS_UNDEF ) )		196766	1					
ANR	196950	Condition	UNEXPECTED ( Z_TYPE_P ( data ) == IS_UNDEF )	1082:8:31996:32033	196766	0	True				
ANR	196951	CallExpression	UNEXPECTED ( Z_TYPE_P ( data ) == IS_UNDEF )		196766	0					
ANR	196952	Callee	UNEXPECTED		196766	0					
ANR	196953	Identifier	UNEXPECTED		196766	0					
ANR	196954	ArgumentList	Z_TYPE_P ( data ) == IS_UNDEF		196766	1					
ANR	196955	Argument	Z_TYPE_P ( data ) == IS_UNDEF		196766	0					
ANR	196956	EqualityExpression	Z_TYPE_P ( data ) == IS_UNDEF		196766	0		==			
ANR	196957	CallExpression	Z_TYPE_P ( data )		196766	0					
ANR	196958	Callee	Z_TYPE_P		196766	0					
ANR	196959	Identifier	Z_TYPE_P		196766	0					
ANR	196960	ArgumentList	data		196766	1					
ANR	196961	Argument	data		196766	0					
ANR	196962	Identifier	data		196766	0					
ANR	196963	Identifier	IS_UNDEF		196766	1					
ANR	196964	CompoundStatement		25:48:597:597	196766	1					
ANR	196965	ReturnStatement	return FAILURE ;	1083:5:32043:32057	196766	0	True				
ANR	196966	Identifier	FAILURE		196766	0					
ANR	196967	ElseStatement	else		196766	0					
ANR	196968	CompoundStatement		27:11:631:631	196766	0					
ANR	196969	IfStatement	if ( ht -> pDestructor )		196766	0					
ANR	196970	Condition	ht -> pDestructor	1085:9:32081:32095	196766	0	True				
ANR	196971	PtrMemberAccess	ht -> pDestructor		196766	0					
ANR	196972	Identifier	ht		196766	0					
ANR	196973	Identifier	pDestructor		196766	1					
ANR	196974	CompoundStatement		29:6:667:675	196766	1					
ANR	196975	IdentifierDeclStatement	zval tmp ;	1086:6:32106:32114	196766	0	True				
ANR	196976	IdentifierDecl	tmp		196766	0					
ANR	196977	IdentifierDeclType	zval		196766	0					
ANR	196978	Identifier	tmp		196766	1					
ANR	196979	ExpressionStatement	"ZVAL_COPY_VALUE ( & tmp , data )"	1087:6:32122:32149	196766	1	True				
ANR	196980	CallExpression	"ZVAL_COPY_VALUE ( & tmp , data )"		196766	0					
ANR	196981	Callee	ZVAL_COPY_VALUE		196766	0					
ANR	196982	Identifier	ZVAL_COPY_VALUE		196766	0					
ANR	196983	ArgumentList	& tmp		196766	1					
ANR	196984	Argument	& tmp		196766	0					
ANR	196985	UnaryOperationExpression	& tmp		196766	0					
ANR	196986	UnaryOperator	&		196766	0					
ANR	196987	Identifier	tmp		196766	1					
ANR	196988	Argument	data		196766	1					
ANR	196989	Identifier	data		196766	0					
ANR	196990	ExpressionStatement	ZVAL_UNDEF ( data )	1088:6:32157:32173	196766	2	True				
ANR	196991	CallExpression	ZVAL_UNDEF ( data )		196766	0					
ANR	196992	Callee	ZVAL_UNDEF		196766	0					
ANR	196993	Identifier	ZVAL_UNDEF		196766	0					
ANR	196994	ArgumentList	data		196766	1					
ANR	196995	Argument	data		196766	0					
ANR	196996	Identifier	data		196766	0					
ANR	196997	ExpressionStatement	ht -> pDestructor ( & tmp )	1089:6:32181:32202	196766	3	True				
ANR	196998	CallExpression	ht -> pDestructor ( & tmp )		196766	0					
ANR	196999	Callee	ht -> pDestructor		196766	0					
ANR	197000	PtrMemberAccess	ht -> pDestructor		196766	0					
ANR	197001	Identifier	ht		196766	0					
ANR	197002	Identifier	pDestructor		196766	1					
ANR	197003	ArgumentList	& tmp		196766	1					
ANR	197004	Argument	& tmp		196766	0					
ANR	197005	UnaryOperationExpression	& tmp		196766	0					
ANR	197006	UnaryOperator	&		196766	0					
ANR	197007	Identifier	tmp		196766	1					
ANR	197008	ElseStatement	else		196766	0					
ANR	197009	CompoundStatement		33:12:777:777	196766	0					
ANR	197010	ExpressionStatement	ZVAL_UNDEF ( data )	1091:6:32224:32240	196766	0	True				
ANR	197011	CallExpression	ZVAL_UNDEF ( data )		196766	0					
ANR	197012	Callee	ZVAL_UNDEF		196766	0					
ANR	197013	Identifier	ZVAL_UNDEF		196766	0					
ANR	197014	ArgumentList	data		196766	1					
ANR	197015	Argument	data		196766	0					
ANR	197016	Identifier	data		196766	0					
ANR	197017	ExpressionStatement	ht -> u . v . flags |= HASH_FLAG_HAS_EMPTY_IND	1093:5:32254:32294	196766	1	True				
ANR	197018	AssignmentExpression	ht -> u . v . flags |= HASH_FLAG_HAS_EMPTY_IND		196766	0		|=			
ANR	197019	MemberAccess	ht -> u . v . flags		196766	0					
ANR	197020	MemberAccess	ht -> u . v		196766	0					
ANR	197021	PtrMemberAccess	ht -> u		196766	0					
ANR	197022	Identifier	ht		196766	0					
ANR	197023	Identifier	u		196766	1					
ANR	197024	Identifier	v		196766	1					
ANR	197025	Identifier	flags		196766	1					
ANR	197026	Identifier	HASH_FLAG_HAS_EMPTY_IND		196766	1					
ANR	197027	ElseStatement	else		196766	0					
ANR	197028	CompoundStatement		38:10:873:873	196766	0					
ANR	197029	ExpressionStatement	"_zend_hash_del_el_ex ( ht , idx , p , prev )"	1096:4:32318:32356	196766	0	True				
ANR	197030	CallExpression	"_zend_hash_del_el_ex ( ht , idx , p , prev )"		196766	0					
ANR	197031	Callee	_zend_hash_del_el_ex		196766	0					
ANR	197032	Identifier	_zend_hash_del_el_ex		196766	0					
ANR	197033	ArgumentList	ht		196766	1					
ANR	197034	Argument	ht		196766	0					
ANR	197035	Identifier	ht		196766	0					
ANR	197036	Argument	idx		196766	1					
ANR	197037	Identifier	idx		196766	0					
ANR	197038	Argument	p		196766	2					
ANR	197039	Identifier	p		196766	0					
ANR	197040	Argument	prev		196766	3					
ANR	197041	Identifier	prev		196766	0					
ANR	197042	ReturnStatement	return SUCCESS ;	1098:3:32366:32380	196766	1	True				
ANR	197043	Identifier	SUCCESS		196766	0					
ANR	197044	ExpressionStatement	prev = p	1100:2:32388:32396	196766	2	True				
ANR	197045	AssignmentExpression	prev = p		196766	0		=			
ANR	197046	Identifier	prev		196766	0					
ANR	197047	Identifier	p		196766	1					
ANR	197048	ExpressionStatement	idx = Z_NEXT ( p -> val )	1101:2:32400:32420	196766	3	True				
ANR	197049	AssignmentExpression	idx = Z_NEXT ( p -> val )		196766	0		=			
ANR	197050	Identifier	idx		196766	0					
ANR	197051	CallExpression	Z_NEXT ( p -> val )		196766	1					
ANR	197052	Callee	Z_NEXT		196766	0					
ANR	197053	Identifier	Z_NEXT		196766	0					
ANR	197054	ArgumentList	p -> val		196766	1					
ANR	197055	Argument	p -> val		196766	0					
ANR	197056	PtrMemberAccess	p -> val		196766	0					
ANR	197057	Identifier	p		196766	0					
ANR	197058	Identifier	val		196766	1					
ANR	197059	ReturnStatement	return FAILURE ;	1103:1:32426:32440	196766	11	True				
ANR	197060	Identifier	FAILURE		196766	0					
ANR	197061	ReturnType	ZEND_API int ZEND_FASTCALL		196766	1					
ANR	197062	Identifier	zend_hash_del_ind		196766	2					
ANR	197063	ParameterList	"HashTable * ht , zend_string * key"		196766	3					
ANR	197064	Parameter	HashTable * ht	1057:45:31405:31417	196766	0	True				
ANR	197065	ParameterType	HashTable *		196766	0					
ANR	197066	Identifier	ht		196766	1					
ANR	197067	Parameter	zend_string * key	1057:60:31420:31435	196766	1	True				
ANR	197068	ParameterType	zend_string *		196766	0					
ANR	197069	Identifier	key		196766	1					
ANR	197070	CFGEntryNode	ENTRY		196766		True				
ANR	197071	CFGExitNode	EXIT		196766		True				
ANR	197072	Symbol	HASH_FLAG_HAS_EMPTY_IND		196766						
ANR	197073	Symbol	data		196766						
ANR	197074	Symbol	ht -> nTableMask		196766						
ANR	197075	Symbol	prev		196766						
ANR	197076	Symbol	ht -> pDestructor		196766						
ANR	197077	Symbol	ht -> u		196766						
ANR	197078	Symbol	Z_TYPE		196766						
ANR	197079	Symbol	Z_NEXT		196766						
ANR	197080	Symbol	ht		196766						
ANR	197081	Symbol	ht -> u . v		196766						
ANR	197082	Symbol	UNEXPECTED		196766						
ANR	197083	Symbol	* ht		196766						
ANR	197084	Symbol	memcmp		196766						
ANR	197085	Symbol	Z_INDIRECT		196766						
ANR	197086	Symbol	HT_HASH		196766						
ANR	197087	Symbol	ht -> u . v . flags		196766						
ANR	197088	Symbol	tmp		196766						
ANR	197089	Symbol	zend_string_hash_val		196766						
ANR	197090	Symbol	GC_REFCOUNT		196766						
ANR	197091	Symbol	key		196766						
ANR	197092	Symbol	p -> h		196766						
ANR	197093	Symbol	IS_UNDEF		196766						
ANR	197094	Symbol	HT_INVALID_IDX		196766						
ANR	197095	Symbol	NULL		196766						
ANR	197096	Symbol	SUCCESS		196766						
ANR	197097	Symbol	h		196766						
ANR	197098	Symbol	nIndex		196766						
ANR	197099	Symbol	Z_TYPE_P		196766						
ANR	197100	Symbol	p -> val		196766						
ANR	197101	Symbol	FAILURE		196766						
ANR	197102	Symbol	p -> key		196766						
ANR	197103	Symbol	ZSTR_VAL		196766						
ANR	197104	Symbol	p		196766						
ANR	197105	Symbol	ZSTR_LEN		196766						
ANR	197106	Symbol	* p		196766						
ANR	197107	Symbol	& tmp		196766						
ANR	197108	Symbol	idx		196766						
ANR	197109	Symbol	HT_HASH_TO_BUCKET		196766						
ANR	197110	Symbol	IS_INDIRECT		196766						
ANR	197111	Function	zend_hash_str_del_ind	1106:0:32445:33395							
ANR	197112	FunctionDef	"zend_hash_str_del_ind (HashTable * ht , const char * str , size_t len)"		197111	0					
ANR	197113	CompoundStatement		1107:0:32538:33395	197111	0					
ANR	197114	IdentifierDeclStatement	zend_ulong h ;	1108:1:32541:32553	197111	0	True				
ANR	197115	IdentifierDecl	h		197111	0					
ANR	197116	IdentifierDeclType	zend_ulong		197111	0					
ANR	197117	Identifier	h		197111	1					
ANR	197118	IdentifierDeclStatement	uint32_t nIndex ;	1109:1:32556:32571	197111	1	True				
ANR	197119	IdentifierDecl	nIndex		197111	0					
ANR	197120	IdentifierDeclType	uint32_t		197111	0					
ANR	197121	Identifier	nIndex		197111	1					
ANR	197122	IdentifierDeclStatement	uint32_t idx ;	1110:1:32574:32586	197111	2	True				
ANR	197123	IdentifierDecl	idx		197111	0					
ANR	197124	IdentifierDeclType	uint32_t		197111	0					
ANR	197125	Identifier	idx		197111	1					
ANR	197126	IdentifierDeclStatement	Bucket * p ;	1111:1:32589:32598	197111	3	True				
ANR	197127	IdentifierDecl	* p		197111	0					
ANR	197128	IdentifierDeclType	Bucket *		197111	0					
ANR	197129	Identifier	p		197111	1					
ANR	197130	IdentifierDeclStatement	Bucket * prev = NULL ;	1112:1:32601:32620	197111	4	True				
ANR	197131	IdentifierDecl	* prev = NULL		197111	0					
ANR	197132	IdentifierDeclType	Bucket *		197111	0					
ANR	197133	Identifier	prev		197111	1					
ANR	197134	AssignmentExpression	* prev = NULL		197111	2		=			
ANR	197135	Identifier	NULL		197111	0					
ANR	197136	Identifier	NULL		197111	1					
ANR	197137	ExpressionStatement	IS_CONSISTENT ( ht )	1114:1:32624:32641	197111	5	True				
ANR	197138	CallExpression	IS_CONSISTENT ( ht )		197111	0					
ANR	197139	Callee	IS_CONSISTENT		197111	0					
ANR	197140	Identifier	IS_CONSISTENT		197111	0					
ANR	197141	ArgumentList	ht		197111	1					
ANR	197142	Argument	ht		197111	0					
ANR	197143	Identifier	ht		197111	0					
ANR	197144	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	1115:1:32644:32675	197111	6	True				
ANR	197145	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		197111	0					
ANR	197146	Callee	HT_ASSERT		197111	0					
ANR	197147	Identifier	HT_ASSERT		197111	0					
ANR	197148	ArgumentList	GC_REFCOUNT ( ht ) == 1		197111	1					
ANR	197149	Argument	GC_REFCOUNT ( ht ) == 1		197111	0					
ANR	197150	EqualityExpression	GC_REFCOUNT ( ht ) == 1		197111	0		==			
ANR	197151	CallExpression	GC_REFCOUNT ( ht )		197111	0					
ANR	197152	Callee	GC_REFCOUNT		197111	0					
ANR	197153	Identifier	GC_REFCOUNT		197111	0					
ANR	197154	ArgumentList	ht		197111	1					
ANR	197155	Argument	ht		197111	0					
ANR	197156	Identifier	ht		197111	0					
ANR	197157	PrimaryExpression	1		197111	1					
ANR	197158	ExpressionStatement	"h = zend_inline_hash_func ( str , len )"	1117:1:32679:32714	197111	7	True				
ANR	197159	AssignmentExpression	"h = zend_inline_hash_func ( str , len )"		197111	0		=			
ANR	197160	Identifier	h		197111	0					
ANR	197161	CallExpression	"zend_inline_hash_func ( str , len )"		197111	1					
ANR	197162	Callee	zend_inline_hash_func		197111	0					
ANR	197163	Identifier	zend_inline_hash_func		197111	0					
ANR	197164	ArgumentList	str		197111	1					
ANR	197165	Argument	str		197111	0					
ANR	197166	Identifier	str		197111	0					
ANR	197167	Argument	len		197111	1					
ANR	197168	Identifier	len		197111	0					
ANR	197169	ExpressionStatement	nIndex = h | ht -> nTableMask	1118:1:32717:32744	197111	8	True				
ANR	197170	AssignmentExpression	nIndex = h | ht -> nTableMask		197111	0		=			
ANR	197171	Identifier	nIndex		197111	0					
ANR	197172	InclusiveOrExpression	h | ht -> nTableMask		197111	1		|			
ANR	197173	Identifier	h		197111	0					
ANR	197174	PtrMemberAccess	ht -> nTableMask		197111	1					
ANR	197175	Identifier	ht		197111	0					
ANR	197176	Identifier	nTableMask		197111	1					
ANR	197177	ExpressionStatement	"idx = HT_HASH ( ht , nIndex )"	1120:1:32748:32773	197111	9	True				
ANR	197178	AssignmentExpression	"idx = HT_HASH ( ht , nIndex )"		197111	0		=			
ANR	197179	Identifier	idx		197111	0					
ANR	197180	CallExpression	"HT_HASH ( ht , nIndex )"		197111	1					
ANR	197181	Callee	HT_HASH		197111	0					
ANR	197182	Identifier	HT_HASH		197111	0					
ANR	197183	ArgumentList	ht		197111	1					
ANR	197184	Argument	ht		197111	0					
ANR	197185	Identifier	ht		197111	0					
ANR	197186	Argument	nIndex		197111	1					
ANR	197187	Identifier	nIndex		197111	0					
ANR	197188	WhileStatement	while ( idx != HT_INVALID_IDX )		197111	10					
ANR	197189	Condition	idx != HT_INVALID_IDX	1121:8:32783:32803	197111	0	True				
ANR	197190	EqualityExpression	idx != HT_INVALID_IDX		197111	0		!=			
ANR	197191	Identifier	idx		197111	0					
ANR	197192	Identifier	HT_INVALID_IDX		197111	1					
ANR	197193	CompoundStatement		15:31:267:267	197111	1					
ANR	197194	ExpressionStatement	"p = HT_HASH_TO_BUCKET ( ht , idx )"	1122:2:32810:32840	197111	0	True				
ANR	197195	AssignmentExpression	"p = HT_HASH_TO_BUCKET ( ht , idx )"		197111	0		=			
ANR	197196	Identifier	p		197111	0					
ANR	197197	CallExpression	"HT_HASH_TO_BUCKET ( ht , idx )"		197111	1					
ANR	197198	Callee	HT_HASH_TO_BUCKET		197111	0					
ANR	197199	Identifier	HT_HASH_TO_BUCKET		197111	0					
ANR	197200	ArgumentList	ht		197111	1					
ANR	197201	Argument	ht		197111	0					
ANR	197202	Identifier	ht		197111	0					
ANR	197203	Argument	idx		197111	1					
ANR	197204	Identifier	idx		197111	0					
ANR	197205	IfStatement	"if ( ( p -> h == h ) && p -> key && ( ZSTR_LEN ( p -> key ) == len ) && ! memcmp ( ZSTR_VAL ( p -> key ) , str , len ) )"		197111	1					
ANR	197206	Condition	"( p -> h == h ) && p -> key && ( ZSTR_LEN ( p -> key ) == len ) && ! memcmp ( ZSTR_VAL ( p -> key ) , str , len )"	1123:6:32848:32948	197111	0	True				
ANR	197207	AndExpression	"( p -> h == h ) && p -> key && ( ZSTR_LEN ( p -> key ) == len ) && ! memcmp ( ZSTR_VAL ( p -> key ) , str , len )"		197111	0		&&			
ANR	197208	EqualityExpression	p -> h == h		197111	0		==			
ANR	197209	PtrMemberAccess	p -> h		197111	0					
ANR	197210	Identifier	p		197111	0					
ANR	197211	Identifier	h		197111	1					
ANR	197212	Identifier	h		197111	1					
ANR	197213	AndExpression	"p -> key && ( ZSTR_LEN ( p -> key ) == len ) && ! memcmp ( ZSTR_VAL ( p -> key ) , str , len )"		197111	1		&&			
ANR	197214	PtrMemberAccess	p -> key		197111	0					
ANR	197215	Identifier	p		197111	0					
ANR	197216	Identifier	key		197111	1					
ANR	197217	AndExpression	"( ZSTR_LEN ( p -> key ) == len ) && ! memcmp ( ZSTR_VAL ( p -> key ) , str , len )"		197111	1		&&			
ANR	197218	EqualityExpression	ZSTR_LEN ( p -> key ) == len		197111	0		==			
ANR	197219	CallExpression	ZSTR_LEN ( p -> key )		197111	0					
ANR	197220	Callee	ZSTR_LEN		197111	0					
ANR	197221	Identifier	ZSTR_LEN		197111	0					
ANR	197222	ArgumentList	p -> key		197111	1					
ANR	197223	Argument	p -> key		197111	0					
ANR	197224	PtrMemberAccess	p -> key		197111	0					
ANR	197225	Identifier	p		197111	0					
ANR	197226	Identifier	key		197111	1					
ANR	197227	Identifier	len		197111	1					
ANR	197228	UnaryOperationExpression	"! memcmp ( ZSTR_VAL ( p -> key ) , str , len )"		197111	1					
ANR	197229	UnaryOperator	!		197111	0					
ANR	197230	CallExpression	"memcmp ( ZSTR_VAL ( p -> key ) , str , len )"		197111	1					
ANR	197231	Callee	memcmp		197111	0					
ANR	197232	Identifier	memcmp		197111	0					
ANR	197233	ArgumentList	ZSTR_VAL ( p -> key )		197111	1					
ANR	197234	Argument	ZSTR_VAL ( p -> key )		197111	0					
ANR	197235	CallExpression	ZSTR_VAL ( p -> key )		197111	0					
ANR	197236	Callee	ZSTR_VAL		197111	0					
ANR	197237	Identifier	ZSTR_VAL		197111	0					
ANR	197238	ArgumentList	p -> key		197111	1					
ANR	197239	Argument	p -> key		197111	0					
ANR	197240	PtrMemberAccess	p -> key		197111	0					
ANR	197241	Identifier	p		197111	0					
ANR	197242	Identifier	key		197111	1					
ANR	197243	Argument	str		197111	1					
ANR	197244	Identifier	str		197111	0					
ANR	197245	Argument	len		197111	2					
ANR	197246	Identifier	len		197111	0					
ANR	197247	CompoundStatement		20:44:412:412	197111	1					
ANR	197248	IfStatement	if ( Z_TYPE ( p -> val ) == IS_INDIRECT )		197111	0					
ANR	197249	Condition	Z_TYPE ( p -> val ) == IS_INDIRECT	1127:7:32960:32988	197111	0	True				
ANR	197250	EqualityExpression	Z_TYPE ( p -> val ) == IS_INDIRECT		197111	0		==			
ANR	197251	CallExpression	Z_TYPE ( p -> val )		197111	0					
ANR	197252	Callee	Z_TYPE		197111	0					
ANR	197253	Identifier	Z_TYPE		197111	0					
ANR	197254	ArgumentList	p -> val		197111	1					
ANR	197255	Argument	p -> val		197111	0					
ANR	197256	PtrMemberAccess	p -> val		197111	0					
ANR	197257	Identifier	p		197111	0					
ANR	197258	Identifier	val		197111	1					
ANR	197259	Identifier	IS_INDIRECT		197111	1					
ANR	197260	CompoundStatement		22:4:458:489	197111	1					
ANR	197261	IdentifierDeclStatement	zval * data = Z_INDIRECT ( p -> val ) ;	1128:4:32997:33028	197111	0	True				
ANR	197262	IdentifierDecl	* data = Z_INDIRECT ( p -> val )		197111	0					
ANR	197263	IdentifierDeclType	zval *		197111	0					
ANR	197264	Identifier	data		197111	1					
ANR	197265	AssignmentExpression	* data = Z_INDIRECT ( p -> val )		197111	2		=			
ANR	197266	Identifier	data		197111	0					
ANR	197267	CallExpression	Z_INDIRECT ( p -> val )		197111	1					
ANR	197268	Callee	Z_INDIRECT		197111	0					
ANR	197269	Identifier	Z_INDIRECT		197111	0					
ANR	197270	ArgumentList	p -> val		197111	1					
ANR	197271	Argument	p -> val		197111	0					
ANR	197272	PtrMemberAccess	p -> val		197111	0					
ANR	197273	Identifier	p		197111	0					
ANR	197274	Identifier	val		197111	1					
ANR	197275	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( data ) == IS_UNDEF ) )		197111	1					
ANR	197276	Condition	UNEXPECTED ( Z_TYPE_P ( data ) == IS_UNDEF )	1130:8:33039:33076	197111	0	True				
ANR	197277	CallExpression	UNEXPECTED ( Z_TYPE_P ( data ) == IS_UNDEF )		197111	0					
ANR	197278	Callee	UNEXPECTED		197111	0					
ANR	197279	Identifier	UNEXPECTED		197111	0					
ANR	197280	ArgumentList	Z_TYPE_P ( data ) == IS_UNDEF		197111	1					
ANR	197281	Argument	Z_TYPE_P ( data ) == IS_UNDEF		197111	0					
ANR	197282	EqualityExpression	Z_TYPE_P ( data ) == IS_UNDEF		197111	0		==			
ANR	197283	CallExpression	Z_TYPE_P ( data )		197111	0					
ANR	197284	Callee	Z_TYPE_P		197111	0					
ANR	197285	Identifier	Z_TYPE_P		197111	0					
ANR	197286	ArgumentList	data		197111	1					
ANR	197287	Argument	data		197111	0					
ANR	197288	Identifier	data		197111	0					
ANR	197289	Identifier	IS_UNDEF		197111	1					
ANR	197290	CompoundStatement		24:48:540:540	197111	1					
ANR	197291	ReturnStatement	return FAILURE ;	1131:5:33086:33100	197111	0	True				
ANR	197292	Identifier	FAILURE		197111	0					
ANR	197293	ElseStatement	else		197111	0					
ANR	197294	CompoundStatement		26:11:574:574	197111	0					
ANR	197295	IfStatement	if ( ht -> pDestructor )		197111	0					
ANR	197296	Condition	ht -> pDestructor	1133:9:33124:33138	197111	0	True				
ANR	197297	PtrMemberAccess	ht -> pDestructor		197111	0					
ANR	197298	Identifier	ht		197111	0					
ANR	197299	Identifier	pDestructor		197111	1					
ANR	197300	CompoundStatement		27:26:602:602	197111	1					
ANR	197301	ExpressionStatement	ht -> pDestructor ( data )	1134:6:33149:33170	197111	0	True				
ANR	197302	CallExpression	ht -> pDestructor ( data )		197111	0					
ANR	197303	Callee	ht -> pDestructor		197111	0					
ANR	197304	PtrMemberAccess	ht -> pDestructor		197111	0					
ANR	197305	Identifier	ht		197111	0					
ANR	197306	Identifier	pDestructor		197111	1					
ANR	197307	ArgumentList	data		197111	1					
ANR	197308	Argument	data		197111	0					
ANR	197309	Identifier	data		197111	0					
ANR	197310	ExpressionStatement	ZVAL_UNDEF ( data )	1136:5:33184:33200	197111	1	True				
ANR	197311	CallExpression	ZVAL_UNDEF ( data )		197111	0					
ANR	197312	Callee	ZVAL_UNDEF		197111	0					
ANR	197313	Identifier	ZVAL_UNDEF		197111	0					
ANR	197314	ArgumentList	data		197111	1					
ANR	197315	Argument	data		197111	0					
ANR	197316	Identifier	data		197111	0					
ANR	197317	ExpressionStatement	ht -> u . v . flags |= HASH_FLAG_HAS_EMPTY_IND	1137:5:33207:33247	197111	2	True				
ANR	197318	AssignmentExpression	ht -> u . v . flags |= HASH_FLAG_HAS_EMPTY_IND		197111	0		|=			
ANR	197319	MemberAccess	ht -> u . v . flags		197111	0					
ANR	197320	MemberAccess	ht -> u . v		197111	0					
ANR	197321	PtrMemberAccess	ht -> u		197111	0					
ANR	197322	Identifier	ht		197111	0					
ANR	197323	Identifier	u		197111	1					
ANR	197324	Identifier	v		197111	1					
ANR	197325	Identifier	flags		197111	1					
ANR	197326	Identifier	HASH_FLAG_HAS_EMPTY_IND		197111	1					
ANR	197327	ElseStatement	else		197111	0					
ANR	197328	CompoundStatement		33:10:726:726	197111	0					
ANR	197329	ExpressionStatement	"_zend_hash_del_el_ex ( ht , idx , p , prev )"	1140:4:33271:33309	197111	0	True				
ANR	197330	CallExpression	"_zend_hash_del_el_ex ( ht , idx , p , prev )"		197111	0					
ANR	197331	Callee	_zend_hash_del_el_ex		197111	0					
ANR	197332	Identifier	_zend_hash_del_el_ex		197111	0					
ANR	197333	ArgumentList	ht		197111	1					
ANR	197334	Argument	ht		197111	0					
ANR	197335	Identifier	ht		197111	0					
ANR	197336	Argument	idx		197111	1					
ANR	197337	Identifier	idx		197111	0					
ANR	197338	Argument	p		197111	2					
ANR	197339	Identifier	p		197111	0					
ANR	197340	Argument	prev		197111	3					
ANR	197341	Identifier	prev		197111	0					
ANR	197342	ReturnStatement	return SUCCESS ;	1142:3:33319:33333	197111	1	True				
ANR	197343	Identifier	SUCCESS		197111	0					
ANR	197344	ExpressionStatement	prev = p	1144:2:33341:33349	197111	2	True				
ANR	197345	AssignmentExpression	prev = p		197111	0		=			
ANR	197346	Identifier	prev		197111	0					
ANR	197347	Identifier	p		197111	1					
ANR	197348	ExpressionStatement	idx = Z_NEXT ( p -> val )	1145:2:33353:33373	197111	3	True				
ANR	197349	AssignmentExpression	idx = Z_NEXT ( p -> val )		197111	0		=			
ANR	197350	Identifier	idx		197111	0					
ANR	197351	CallExpression	Z_NEXT ( p -> val )		197111	1					
ANR	197352	Callee	Z_NEXT		197111	0					
ANR	197353	Identifier	Z_NEXT		197111	0					
ANR	197354	ArgumentList	p -> val		197111	1					
ANR	197355	Argument	p -> val		197111	0					
ANR	197356	PtrMemberAccess	p -> val		197111	0					
ANR	197357	Identifier	p		197111	0					
ANR	197358	Identifier	val		197111	1					
ANR	197359	ReturnStatement	return FAILURE ;	1147:1:33379:33393	197111	11	True				
ANR	197360	Identifier	FAILURE		197111	0					
ANR	197361	ReturnType	ZEND_API int ZEND_FASTCALL		197111	1					
ANR	197362	Identifier	zend_hash_str_del_ind		197111	2					
ANR	197363	ParameterList	"HashTable * ht , const char * str , size_t len"		197111	3					
ANR	197364	Parameter	HashTable * ht	1106:49:32494:32506	197111	0	True				
ANR	197365	ParameterType	HashTable *		197111	0					
ANR	197366	Identifier	ht		197111	1					
ANR	197367	Parameter	const char * str	1106:64:32509:32523	197111	1	True				
ANR	197368	ParameterType	const char *		197111	0					
ANR	197369	Identifier	str		197111	1					
ANR	197370	Parameter	size_t len	1106:81:32526:32535	197111	2	True				
ANR	197371	ParameterType	size_t		197111	0					
ANR	197372	Identifier	len		197111	1					
ANR	197373	CFGEntryNode	ENTRY		197111		True				
ANR	197374	CFGExitNode	EXIT		197111		True				
ANR	197375	Symbol	HASH_FLAG_HAS_EMPTY_IND		197111						
ANR	197376	Symbol	data		197111						
ANR	197377	Symbol	ht -> nTableMask		197111						
ANR	197378	Symbol	prev		197111						
ANR	197379	Symbol	ht -> pDestructor		197111						
ANR	197380	Symbol	ht -> u		197111						
ANR	197381	Symbol	Z_TYPE		197111						
ANR	197382	Symbol	Z_NEXT		197111						
ANR	197383	Symbol	ht		197111						
ANR	197384	Symbol	ht -> u . v		197111						
ANR	197385	Symbol	UNEXPECTED		197111						
ANR	197386	Symbol	* ht		197111						
ANR	197387	Symbol	memcmp		197111						
ANR	197388	Symbol	len		197111						
ANR	197389	Symbol	Z_INDIRECT		197111						
ANR	197390	Symbol	HT_HASH		197111						
ANR	197391	Symbol	ht -> u . v . flags		197111						
ANR	197392	Symbol	GC_REFCOUNT		197111						
ANR	197393	Symbol	p -> h		197111						
ANR	197394	Symbol	IS_UNDEF		197111						
ANR	197395	Symbol	HT_INVALID_IDX		197111						
ANR	197396	Symbol	NULL		197111						
ANR	197397	Symbol	SUCCESS		197111						
ANR	197398	Symbol	h		197111						
ANR	197399	Symbol	nIndex		197111						
ANR	197400	Symbol	Z_TYPE_P		197111						
ANR	197401	Symbol	p -> val		197111						
ANR	197402	Symbol	FAILURE		197111						
ANR	197403	Symbol	zend_inline_hash_func		197111						
ANR	197404	Symbol	p -> key		197111						
ANR	197405	Symbol	ZSTR_VAL		197111						
ANR	197406	Symbol	str		197111						
ANR	197407	Symbol	p		197111						
ANR	197408	Symbol	ZSTR_LEN		197111						
ANR	197409	Symbol	* p		197111						
ANR	197410	Symbol	idx		197111						
ANR	197411	Symbol	HT_HASH_TO_BUCKET		197111						
ANR	197412	Symbol	IS_INDIRECT		197111						
ANR	197413	Function	zend_hash_str_del	1150:0:33398:34024							
ANR	197414	FunctionDef	"zend_hash_str_del (HashTable * ht , const char * str , size_t len)"		197413	0					
ANR	197415	CompoundStatement		1151:0:33487:34024	197413	0					
ANR	197416	IdentifierDeclStatement	zend_ulong h ;	1152:1:33490:33502	197413	0	True				
ANR	197417	IdentifierDecl	h		197413	0					
ANR	197418	IdentifierDeclType	zend_ulong		197413	0					
ANR	197419	Identifier	h		197413	1					
ANR	197420	IdentifierDeclStatement	uint32_t nIndex ;	1153:1:33505:33520	197413	1	True				
ANR	197421	IdentifierDecl	nIndex		197413	0					
ANR	197422	IdentifierDeclType	uint32_t		197413	0					
ANR	197423	Identifier	nIndex		197413	1					
ANR	197424	IdentifierDeclStatement	uint32_t idx ;	1154:1:33523:33535	197413	2	True				
ANR	197425	IdentifierDecl	idx		197413	0					
ANR	197426	IdentifierDeclType	uint32_t		197413	0					
ANR	197427	Identifier	idx		197413	1					
ANR	197428	IdentifierDeclStatement	Bucket * p ;	1155:1:33538:33547	197413	3	True				
ANR	197429	IdentifierDecl	* p		197413	0					
ANR	197430	IdentifierDeclType	Bucket *		197413	0					
ANR	197431	Identifier	p		197413	1					
ANR	197432	IdentifierDeclStatement	Bucket * prev = NULL ;	1156:1:33550:33569	197413	4	True				
ANR	197433	IdentifierDecl	* prev = NULL		197413	0					
ANR	197434	IdentifierDeclType	Bucket *		197413	0					
ANR	197435	Identifier	prev		197413	1					
ANR	197436	AssignmentExpression	* prev = NULL		197413	2		=			
ANR	197437	Identifier	NULL		197413	0					
ANR	197438	Identifier	NULL		197413	1					
ANR	197439	ExpressionStatement	IS_CONSISTENT ( ht )	1158:1:33573:33590	197413	5	True				
ANR	197440	CallExpression	IS_CONSISTENT ( ht )		197413	0					
ANR	197441	Callee	IS_CONSISTENT		197413	0					
ANR	197442	Identifier	IS_CONSISTENT		197413	0					
ANR	197443	ArgumentList	ht		197413	1					
ANR	197444	Argument	ht		197413	0					
ANR	197445	Identifier	ht		197413	0					
ANR	197446	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	1159:1:33593:33624	197413	6	True				
ANR	197447	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		197413	0					
ANR	197448	Callee	HT_ASSERT		197413	0					
ANR	197449	Identifier	HT_ASSERT		197413	0					
ANR	197450	ArgumentList	GC_REFCOUNT ( ht ) == 1		197413	1					
ANR	197451	Argument	GC_REFCOUNT ( ht ) == 1		197413	0					
ANR	197452	EqualityExpression	GC_REFCOUNT ( ht ) == 1		197413	0		==			
ANR	197453	CallExpression	GC_REFCOUNT ( ht )		197413	0					
ANR	197454	Callee	GC_REFCOUNT		197413	0					
ANR	197455	Identifier	GC_REFCOUNT		197413	0					
ANR	197456	ArgumentList	ht		197413	1					
ANR	197457	Argument	ht		197413	0					
ANR	197458	Identifier	ht		197413	0					
ANR	197459	PrimaryExpression	1		197413	1					
ANR	197460	ExpressionStatement	"h = zend_inline_hash_func ( str , len )"	1161:1:33628:33663	197413	7	True				
ANR	197461	AssignmentExpression	"h = zend_inline_hash_func ( str , len )"		197413	0		=			
ANR	197462	Identifier	h		197413	0					
ANR	197463	CallExpression	"zend_inline_hash_func ( str , len )"		197413	1					
ANR	197464	Callee	zend_inline_hash_func		197413	0					
ANR	197465	Identifier	zend_inline_hash_func		197413	0					
ANR	197466	ArgumentList	str		197413	1					
ANR	197467	Argument	str		197413	0					
ANR	197468	Identifier	str		197413	0					
ANR	197469	Argument	len		197413	1					
ANR	197470	Identifier	len		197413	0					
ANR	197471	ExpressionStatement	nIndex = h | ht -> nTableMask	1162:1:33666:33693	197413	8	True				
ANR	197472	AssignmentExpression	nIndex = h | ht -> nTableMask		197413	0		=			
ANR	197473	Identifier	nIndex		197413	0					
ANR	197474	InclusiveOrExpression	h | ht -> nTableMask		197413	1		|			
ANR	197475	Identifier	h		197413	0					
ANR	197476	PtrMemberAccess	ht -> nTableMask		197413	1					
ANR	197477	Identifier	ht		197413	0					
ANR	197478	Identifier	nTableMask		197413	1					
ANR	197479	ExpressionStatement	"idx = HT_HASH ( ht , nIndex )"	1164:1:33697:33722	197413	9	True				
ANR	197480	AssignmentExpression	"idx = HT_HASH ( ht , nIndex )"		197413	0		=			
ANR	197481	Identifier	idx		197413	0					
ANR	197482	CallExpression	"HT_HASH ( ht , nIndex )"		197413	1					
ANR	197483	Callee	HT_HASH		197413	0					
ANR	197484	Identifier	HT_HASH		197413	0					
ANR	197485	ArgumentList	ht		197413	1					
ANR	197486	Argument	ht		197413	0					
ANR	197487	Identifier	ht		197413	0					
ANR	197488	Argument	nIndex		197413	1					
ANR	197489	Identifier	nIndex		197413	0					
ANR	197490	WhileStatement	while ( idx != HT_INVALID_IDX )		197413	10					
ANR	197491	Condition	idx != HT_INVALID_IDX	1165:8:33732:33752	197413	0	True				
ANR	197492	EqualityExpression	idx != HT_INVALID_IDX		197413	0		!=			
ANR	197493	Identifier	idx		197413	0					
ANR	197494	Identifier	HT_INVALID_IDX		197413	1					
ANR	197495	CompoundStatement		15:31:267:267	197413	1					
ANR	197496	ExpressionStatement	"p = HT_HASH_TO_BUCKET ( ht , idx )"	1166:2:33759:33789	197413	0	True				
ANR	197497	AssignmentExpression	"p = HT_HASH_TO_BUCKET ( ht , idx )"		197413	0		=			
ANR	197498	Identifier	p		197413	0					
ANR	197499	CallExpression	"HT_HASH_TO_BUCKET ( ht , idx )"		197413	1					
ANR	197500	Callee	HT_HASH_TO_BUCKET		197413	0					
ANR	197501	Identifier	HT_HASH_TO_BUCKET		197413	0					
ANR	197502	ArgumentList	ht		197413	1					
ANR	197503	Argument	ht		197413	0					
ANR	197504	Identifier	ht		197413	0					
ANR	197505	Argument	idx		197413	1					
ANR	197506	Identifier	idx		197413	0					
ANR	197507	IfStatement	"if ( ( p -> h == h ) && p -> key && ( ZSTR_LEN ( p -> key ) == len ) && ! memcmp ( ZSTR_VAL ( p -> key ) , str , len ) )"		197413	1					
ANR	197508	Condition	"( p -> h == h ) && p -> key && ( ZSTR_LEN ( p -> key ) == len ) && ! memcmp ( ZSTR_VAL ( p -> key ) , str , len )"	1167:6:33797:33897	197413	0	True				
ANR	197509	AndExpression	"( p -> h == h ) && p -> key && ( ZSTR_LEN ( p -> key ) == len ) && ! memcmp ( ZSTR_VAL ( p -> key ) , str , len )"		197413	0		&&			
ANR	197510	EqualityExpression	p -> h == h		197413	0		==			
ANR	197511	PtrMemberAccess	p -> h		197413	0					
ANR	197512	Identifier	p		197413	0					
ANR	197513	Identifier	h		197413	1					
ANR	197514	Identifier	h		197413	1					
ANR	197515	AndExpression	"p -> key && ( ZSTR_LEN ( p -> key ) == len ) && ! memcmp ( ZSTR_VAL ( p -> key ) , str , len )"		197413	1		&&			
ANR	197516	PtrMemberAccess	p -> key		197413	0					
ANR	197517	Identifier	p		197413	0					
ANR	197518	Identifier	key		197413	1					
ANR	197519	AndExpression	"( ZSTR_LEN ( p -> key ) == len ) && ! memcmp ( ZSTR_VAL ( p -> key ) , str , len )"		197413	1		&&			
ANR	197520	EqualityExpression	ZSTR_LEN ( p -> key ) == len		197413	0		==			
ANR	197521	CallExpression	ZSTR_LEN ( p -> key )		197413	0					
ANR	197522	Callee	ZSTR_LEN		197413	0					
ANR	197523	Identifier	ZSTR_LEN		197413	0					
ANR	197524	ArgumentList	p -> key		197413	1					
ANR	197525	Argument	p -> key		197413	0					
ANR	197526	PtrMemberAccess	p -> key		197413	0					
ANR	197527	Identifier	p		197413	0					
ANR	197528	Identifier	key		197413	1					
ANR	197529	Identifier	len		197413	1					
ANR	197530	UnaryOperationExpression	"! memcmp ( ZSTR_VAL ( p -> key ) , str , len )"		197413	1					
ANR	197531	UnaryOperator	!		197413	0					
ANR	197532	CallExpression	"memcmp ( ZSTR_VAL ( p -> key ) , str , len )"		197413	1					
ANR	197533	Callee	memcmp		197413	0					
ANR	197534	Identifier	memcmp		197413	0					
ANR	197535	ArgumentList	ZSTR_VAL ( p -> key )		197413	1					
ANR	197536	Argument	ZSTR_VAL ( p -> key )		197413	0					
ANR	197537	CallExpression	ZSTR_VAL ( p -> key )		197413	0					
ANR	197538	Callee	ZSTR_VAL		197413	0					
ANR	197539	Identifier	ZSTR_VAL		197413	0					
ANR	197540	ArgumentList	p -> key		197413	1					
ANR	197541	Argument	p -> key		197413	0					
ANR	197542	PtrMemberAccess	p -> key		197413	0					
ANR	197543	Identifier	p		197413	0					
ANR	197544	Identifier	key		197413	1					
ANR	197545	Argument	str		197413	1					
ANR	197546	Identifier	str		197413	0					
ANR	197547	Argument	len		197413	2					
ANR	197548	Identifier	len		197413	0					
ANR	197549	CompoundStatement		20:44:412:412	197413	1					
ANR	197550	ExpressionStatement	"_zend_hash_del_el_ex ( ht , idx , p , prev )"	1171:3:33905:33943	197413	0	True				
ANR	197551	CallExpression	"_zend_hash_del_el_ex ( ht , idx , p , prev )"		197413	0					
ANR	197552	Callee	_zend_hash_del_el_ex		197413	0					
ANR	197553	Identifier	_zend_hash_del_el_ex		197413	0					
ANR	197554	ArgumentList	ht		197413	1					
ANR	197555	Argument	ht		197413	0					
ANR	197556	Identifier	ht		197413	0					
ANR	197557	Argument	idx		197413	1					
ANR	197558	Identifier	idx		197413	0					
ANR	197559	Argument	p		197413	2					
ANR	197560	Identifier	p		197413	0					
ANR	197561	Argument	prev		197413	3					
ANR	197562	Identifier	prev		197413	0					
ANR	197563	ReturnStatement	return SUCCESS ;	1172:3:33948:33962	197413	1	True				
ANR	197564	Identifier	SUCCESS		197413	0					
ANR	197565	ExpressionStatement	prev = p	1174:2:33970:33978	197413	2	True				
ANR	197566	AssignmentExpression	prev = p		197413	0		=			
ANR	197567	Identifier	prev		197413	0					
ANR	197568	Identifier	p		197413	1					
ANR	197569	ExpressionStatement	idx = Z_NEXT ( p -> val )	1175:2:33982:34002	197413	3	True				
ANR	197570	AssignmentExpression	idx = Z_NEXT ( p -> val )		197413	0		=			
ANR	197571	Identifier	idx		197413	0					
ANR	197572	CallExpression	Z_NEXT ( p -> val )		197413	1					
ANR	197573	Callee	Z_NEXT		197413	0					
ANR	197574	Identifier	Z_NEXT		197413	0					
ANR	197575	ArgumentList	p -> val		197413	1					
ANR	197576	Argument	p -> val		197413	0					
ANR	197577	PtrMemberAccess	p -> val		197413	0					
ANR	197578	Identifier	p		197413	0					
ANR	197579	Identifier	val		197413	1					
ANR	197580	ReturnStatement	return FAILURE ;	1177:1:34008:34022	197413	11	True				
ANR	197581	Identifier	FAILURE		197413	0					
ANR	197582	ReturnType	ZEND_API int ZEND_FASTCALL		197413	1					
ANR	197583	Identifier	zend_hash_str_del		197413	2					
ANR	197584	ParameterList	"HashTable * ht , const char * str , size_t len"		197413	3					
ANR	197585	Parameter	HashTable * ht	1150:45:33443:33455	197413	0	True				
ANR	197586	ParameterType	HashTable *		197413	0					
ANR	197587	Identifier	ht		197413	1					
ANR	197588	Parameter	const char * str	1150:60:33458:33472	197413	1	True				
ANR	197589	ParameterType	const char *		197413	0					
ANR	197590	Identifier	str		197413	1					
ANR	197591	Parameter	size_t len	1150:77:33475:33484	197413	2	True				
ANR	197592	ParameterType	size_t		197413	0					
ANR	197593	Identifier	len		197413	1					
ANR	197594	CFGEntryNode	ENTRY		197413		True				
ANR	197595	CFGExitNode	EXIT		197413		True				
ANR	197596	Symbol	ht -> nTableMask		197413						
ANR	197597	Symbol	prev		197413						
ANR	197598	Symbol	Z_NEXT		197413						
ANR	197599	Symbol	ht		197413						
ANR	197600	Symbol	* ht		197413						
ANR	197601	Symbol	memcmp		197413						
ANR	197602	Symbol	len		197413						
ANR	197603	Symbol	HT_HASH		197413						
ANR	197604	Symbol	GC_REFCOUNT		197413						
ANR	197605	Symbol	p -> h		197413						
ANR	197606	Symbol	HT_INVALID_IDX		197413						
ANR	197607	Symbol	NULL		197413						
ANR	197608	Symbol	SUCCESS		197413						
ANR	197609	Symbol	h		197413						
ANR	197610	Symbol	nIndex		197413						
ANR	197611	Symbol	p -> val		197413						
ANR	197612	Symbol	FAILURE		197413						
ANR	197613	Symbol	zend_inline_hash_func		197413						
ANR	197614	Symbol	p -> key		197413						
ANR	197615	Symbol	ZSTR_VAL		197413						
ANR	197616	Symbol	str		197413						
ANR	197617	Symbol	p		197413						
ANR	197618	Symbol	ZSTR_LEN		197413						
ANR	197619	Symbol	* p		197413						
ANR	197620	Symbol	idx		197413						
ANR	197621	Symbol	HT_HASH_TO_BUCKET		197413						
ANR	197622	Function	zend_hash_index_del	1180:0:34027:34750							
ANR	197623	FunctionDef	"zend_hash_index_del (HashTable * ht , zend_ulong h)"		197622	0					
ANR	197624	CompoundStatement		1181:0:34103:34750	197622	0					
ANR	197625	IdentifierDeclStatement	uint32_t nIndex ;	1182:1:34106:34121	197622	0	True				
ANR	197626	IdentifierDecl	nIndex		197622	0					
ANR	197627	IdentifierDeclType	uint32_t		197622	0					
ANR	197628	Identifier	nIndex		197622	1					
ANR	197629	IdentifierDeclStatement	uint32_t idx ;	1183:1:34124:34136	197622	1	True				
ANR	197630	IdentifierDecl	idx		197622	0					
ANR	197631	IdentifierDeclType	uint32_t		197622	0					
ANR	197632	Identifier	idx		197622	1					
ANR	197633	IdentifierDeclStatement	Bucket * p ;	1184:1:34139:34148	197622	2	True				
ANR	197634	IdentifierDecl	* p		197622	0					
ANR	197635	IdentifierDeclType	Bucket *		197622	0					
ANR	197636	Identifier	p		197622	1					
ANR	197637	IdentifierDeclStatement	Bucket * prev = NULL ;	1185:1:34151:34170	197622	3	True				
ANR	197638	IdentifierDecl	* prev = NULL		197622	0					
ANR	197639	IdentifierDeclType	Bucket *		197622	0					
ANR	197640	Identifier	prev		197622	1					
ANR	197641	AssignmentExpression	* prev = NULL		197622	2		=			
ANR	197642	Identifier	NULL		197622	0					
ANR	197643	Identifier	NULL		197622	1					
ANR	197644	ExpressionStatement	IS_CONSISTENT ( ht )	1187:1:34174:34191	197622	4	True				
ANR	197645	CallExpression	IS_CONSISTENT ( ht )		197622	0					
ANR	197646	Callee	IS_CONSISTENT		197622	0					
ANR	197647	Identifier	IS_CONSISTENT		197622	0					
ANR	197648	ArgumentList	ht		197622	1					
ANR	197649	Argument	ht		197622	0					
ANR	197650	Identifier	ht		197622	0					
ANR	197651	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	1188:1:34194:34225	197622	5	True				
ANR	197652	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		197622	0					
ANR	197653	Callee	HT_ASSERT		197622	0					
ANR	197654	Identifier	HT_ASSERT		197622	0					
ANR	197655	ArgumentList	GC_REFCOUNT ( ht ) == 1		197622	1					
ANR	197656	Argument	GC_REFCOUNT ( ht ) == 1		197622	0					
ANR	197657	EqualityExpression	GC_REFCOUNT ( ht ) == 1		197622	0		==			
ANR	197658	CallExpression	GC_REFCOUNT ( ht )		197622	0					
ANR	197659	Callee	GC_REFCOUNT		197622	0					
ANR	197660	Identifier	GC_REFCOUNT		197622	0					
ANR	197661	ArgumentList	ht		197622	1					
ANR	197662	Argument	ht		197622	0					
ANR	197663	Identifier	ht		197622	0					
ANR	197664	PrimaryExpression	1		197622	1					
ANR	197665	IfStatement	if ( ht -> u . flags & HASH_FLAG_PACKED )		197622	6					
ANR	197666	Condition	ht -> u . flags & HASH_FLAG_PACKED	1190:5:34233:34262	197622	0	True				
ANR	197667	BitAndExpression	ht -> u . flags & HASH_FLAG_PACKED		197622	0		&			
ANR	197668	MemberAccess	ht -> u . flags		197622	0					
ANR	197669	PtrMemberAccess	ht -> u		197622	0					
ANR	197670	Identifier	ht		197622	0					
ANR	197671	Identifier	u		197622	1					
ANR	197672	Identifier	flags		197622	1					
ANR	197673	Identifier	HASH_FLAG_PACKED		197622	1					
ANR	197674	CompoundStatement		10:37:161:161	197622	1					
ANR	197675	IfStatement	if ( h < ht -> nNumUsed )		197622	0					
ANR	197676	Condition	h < ht -> nNumUsed	1191:6:34273:34288	197622	0	True				
ANR	197677	RelationalExpression	h < ht -> nNumUsed		197622	0		<			
ANR	197678	Identifier	h		197622	0					
ANR	197679	PtrMemberAccess	ht -> nNumUsed		197622	1					
ANR	197680	Identifier	ht		197622	0					
ANR	197681	Identifier	nNumUsed		197622	1					
ANR	197682	CompoundStatement		11:24:187:187	197622	1					
ANR	197683	ExpressionStatement	p = ht -> arData + h	1192:3:34296:34314	197622	0	True				
ANR	197684	AssignmentExpression	p = ht -> arData + h		197622	0		=			
ANR	197685	Identifier	p		197622	0					
ANR	197686	AdditiveExpression	ht -> arData + h		197622	1		+			
ANR	197687	PtrMemberAccess	ht -> arData		197622	0					
ANR	197688	Identifier	ht		197622	0					
ANR	197689	Identifier	arData		197622	1					
ANR	197690	Identifier	h		197622	1					
ANR	197691	IfStatement	if ( Z_TYPE ( p -> val ) != IS_UNDEF )		197622	1					
ANR	197692	Condition	Z_TYPE ( p -> val ) != IS_UNDEF	1193:7:34323:34348	197622	0	True				
ANR	197693	EqualityExpression	Z_TYPE ( p -> val ) != IS_UNDEF		197622	0		!=			
ANR	197694	CallExpression	Z_TYPE ( p -> val )		197622	0					
ANR	197695	Callee	Z_TYPE		197622	0					
ANR	197696	Identifier	Z_TYPE		197622	0					
ANR	197697	ArgumentList	p -> val		197622	1					
ANR	197698	Argument	p -> val		197622	0					
ANR	197699	PtrMemberAccess	p -> val		197622	0					
ANR	197700	Identifier	p		197622	0					
ANR	197701	Identifier	val		197622	1					
ANR	197702	Identifier	IS_UNDEF		197622	1					
ANR	197703	CompoundStatement		13:35:247:247	197622	1					
ANR	197704	ExpressionStatement	"_zend_hash_del_el_ex ( ht , HT_IDX_TO_HASH ( h ) , p , NULL )"	1194:4:34357:34409	197622	0	True				
ANR	197705	CallExpression	"_zend_hash_del_el_ex ( ht , HT_IDX_TO_HASH ( h ) , p , NULL )"		197622	0					
ANR	197706	Callee	_zend_hash_del_el_ex		197622	0					
ANR	197707	Identifier	_zend_hash_del_el_ex		197622	0					
ANR	197708	ArgumentList	ht		197622	1					
ANR	197709	Argument	ht		197622	0					
ANR	197710	Identifier	ht		197622	0					
ANR	197711	Argument	HT_IDX_TO_HASH ( h )		197622	1					
ANR	197712	CallExpression	HT_IDX_TO_HASH ( h )		197622	0					
ANR	197713	Callee	HT_IDX_TO_HASH		197622	0					
ANR	197714	Identifier	HT_IDX_TO_HASH		197622	0					
ANR	197715	ArgumentList	h		197622	1					
ANR	197716	Argument	h		197622	0					
ANR	197717	Identifier	h		197622	0					
ANR	197718	Argument	p		197622	2					
ANR	197719	Identifier	p		197622	0					
ANR	197720	Argument	NULL		197622	3					
ANR	197721	Identifier	NULL		197622	0					
ANR	197722	ReturnStatement	return SUCCESS ;	1195:4:34415:34429	197622	1	True				
ANR	197723	Identifier	SUCCESS		197622	0					
ANR	197724	ReturnStatement	return FAILURE ;	1198:2:34442:34456	197622	1	True				
ANR	197725	Identifier	FAILURE		197622	0					
ANR	197726	ExpressionStatement	nIndex = h | ht -> nTableMask	1200:1:34462:34489	197622	7	True				
ANR	197727	AssignmentExpression	nIndex = h | ht -> nTableMask		197622	0		=			
ANR	197728	Identifier	nIndex		197622	0					
ANR	197729	InclusiveOrExpression	h | ht -> nTableMask		197622	1		|			
ANR	197730	Identifier	h		197622	0					
ANR	197731	PtrMemberAccess	ht -> nTableMask		197622	1					
ANR	197732	Identifier	ht		197622	0					
ANR	197733	Identifier	nTableMask		197622	1					
ANR	197734	ExpressionStatement	"idx = HT_HASH ( ht , nIndex )"	1202:1:34493:34518	197622	8	True				
ANR	197735	AssignmentExpression	"idx = HT_HASH ( ht , nIndex )"		197622	0		=			
ANR	197736	Identifier	idx		197622	0					
ANR	197737	CallExpression	"HT_HASH ( ht , nIndex )"		197622	1					
ANR	197738	Callee	HT_HASH		197622	0					
ANR	197739	Identifier	HT_HASH		197622	0					
ANR	197740	ArgumentList	ht		197622	1					
ANR	197741	Argument	ht		197622	0					
ANR	197742	Identifier	ht		197622	0					
ANR	197743	Argument	nIndex		197622	1					
ANR	197744	Identifier	nIndex		197622	0					
ANR	197745	WhileStatement	while ( idx != HT_INVALID_IDX )		197622	9					
ANR	197746	Condition	idx != HT_INVALID_IDX	1203:8:34528:34548	197622	0	True				
ANR	197747	EqualityExpression	idx != HT_INVALID_IDX		197622	0		!=			
ANR	197748	Identifier	idx		197622	0					
ANR	197749	Identifier	HT_INVALID_IDX		197622	1					
ANR	197750	CompoundStatement		23:31:447:447	197622	1					
ANR	197751	ExpressionStatement	"p = HT_HASH_TO_BUCKET ( ht , idx )"	1204:2:34555:34585	197622	0	True				
ANR	197752	AssignmentExpression	"p = HT_HASH_TO_BUCKET ( ht , idx )"		197622	0		=			
ANR	197753	Identifier	p		197622	0					
ANR	197754	CallExpression	"HT_HASH_TO_BUCKET ( ht , idx )"		197622	1					
ANR	197755	Callee	HT_HASH_TO_BUCKET		197622	0					
ANR	197756	Identifier	HT_HASH_TO_BUCKET		197622	0					
ANR	197757	ArgumentList	ht		197622	1					
ANR	197758	Argument	ht		197622	0					
ANR	197759	Identifier	ht		197622	0					
ANR	197760	Argument	idx		197622	1					
ANR	197761	Identifier	idx		197622	0					
ANR	197762	IfStatement	if ( ( p -> h == h ) && ( p -> key == NULL ) )		197622	1					
ANR	197763	Condition	( p -> h == h ) && ( p -> key == NULL )	1205:6:34593:34623	197622	0	True				
ANR	197764	AndExpression	( p -> h == h ) && ( p -> key == NULL )		197622	0		&&			
ANR	197765	EqualityExpression	p -> h == h		197622	0		==			
ANR	197766	PtrMemberAccess	p -> h		197622	0					
ANR	197767	Identifier	p		197622	0					
ANR	197768	Identifier	h		197622	1					
ANR	197769	Identifier	h		197622	1					
ANR	197770	EqualityExpression	p -> key == NULL		197622	1		==			
ANR	197771	PtrMemberAccess	p -> key		197622	0					
ANR	197772	Identifier	p		197622	0					
ANR	197773	Identifier	key		197622	1					
ANR	197774	Identifier	NULL		197622	1					
ANR	197775	CompoundStatement		25:39:522:522	197622	1					
ANR	197776	ExpressionStatement	"_zend_hash_del_el_ex ( ht , idx , p , prev )"	1206:3:34631:34669	197622	0	True				
ANR	197777	CallExpression	"_zend_hash_del_el_ex ( ht , idx , p , prev )"		197622	0					
ANR	197778	Callee	_zend_hash_del_el_ex		197622	0					
ANR	197779	Identifier	_zend_hash_del_el_ex		197622	0					
ANR	197780	ArgumentList	ht		197622	1					
ANR	197781	Argument	ht		197622	0					
ANR	197782	Identifier	ht		197622	0					
ANR	197783	Argument	idx		197622	1					
ANR	197784	Identifier	idx		197622	0					
ANR	197785	Argument	p		197622	2					
ANR	197786	Identifier	p		197622	0					
ANR	197787	Argument	prev		197622	3					
ANR	197788	Identifier	prev		197622	0					
ANR	197789	ReturnStatement	return SUCCESS ;	1207:3:34674:34688	197622	1	True				
ANR	197790	Identifier	SUCCESS		197622	0					
ANR	197791	ExpressionStatement	prev = p	1209:2:34696:34704	197622	2	True				
ANR	197792	AssignmentExpression	prev = p		197622	0		=			
ANR	197793	Identifier	prev		197622	0					
ANR	197794	Identifier	p		197622	1					
ANR	197795	ExpressionStatement	idx = Z_NEXT ( p -> val )	1210:2:34708:34728	197622	3	True				
ANR	197796	AssignmentExpression	idx = Z_NEXT ( p -> val )		197622	0		=			
ANR	197797	Identifier	idx		197622	0					
ANR	197798	CallExpression	Z_NEXT ( p -> val )		197622	1					
ANR	197799	Callee	Z_NEXT		197622	0					
ANR	197800	Identifier	Z_NEXT		197622	0					
ANR	197801	ArgumentList	p -> val		197622	1					
ANR	197802	Argument	p -> val		197622	0					
ANR	197803	PtrMemberAccess	p -> val		197622	0					
ANR	197804	Identifier	p		197622	0					
ANR	197805	Identifier	val		197622	1					
ANR	197806	ReturnStatement	return FAILURE ;	1212:1:34734:34748	197622	10	True				
ANR	197807	Identifier	FAILURE		197622	0					
ANR	197808	ReturnType	ZEND_API int ZEND_FASTCALL		197622	1					
ANR	197809	Identifier	zend_hash_index_del		197622	2					
ANR	197810	ParameterList	"HashTable * ht , zend_ulong h"		197622	3					
ANR	197811	Parameter	HashTable * ht	1180:47:34074:34086	197622	0	True				
ANR	197812	ParameterType	HashTable *		197622	0					
ANR	197813	Identifier	ht		197622	1					
ANR	197814	Parameter	zend_ulong h	1180:62:34089:34100	197622	1	True				
ANR	197815	ParameterType	zend_ulong		197622	0					
ANR	197816	Identifier	h		197622	1					
ANR	197817	CFGEntryNode	ENTRY		197622		True				
ANR	197818	CFGExitNode	EXIT		197622		True				
ANR	197819	Symbol	ht -> nTableMask		197622						
ANR	197820	Symbol	HASH_FLAG_PACKED		197622						
ANR	197821	Symbol	prev		197622						
ANR	197822	Symbol	ht -> u		197622						
ANR	197823	Symbol	ht -> arData		197622						
ANR	197824	Symbol	Z_TYPE		197622						
ANR	197825	Symbol	ht -> u . flags		197622						
ANR	197826	Symbol	Z_NEXT		197622						
ANR	197827	Symbol	ht		197622						
ANR	197828	Symbol	* ht		197622						
ANR	197829	Symbol	HT_HASH		197622						
ANR	197830	Symbol	GC_REFCOUNT		197622						
ANR	197831	Symbol	IS_UNDEF		197622						
ANR	197832	Symbol	p -> h		197622						
ANR	197833	Symbol	HT_INVALID_IDX		197622						
ANR	197834	Symbol	NULL		197622						
ANR	197835	Symbol	SUCCESS		197622						
ANR	197836	Symbol	h		197622						
ANR	197837	Symbol	nIndex		197622						
ANR	197838	Symbol	p -> val		197622						
ANR	197839	Symbol	HT_IDX_TO_HASH		197622						
ANR	197840	Symbol	FAILURE		197622						
ANR	197841	Symbol	p -> key		197622						
ANR	197842	Symbol	p		197622						
ANR	197843	Symbol	* p		197622						
ANR	197844	Symbol	idx		197622						
ANR	197845	Symbol	ht -> nNumUsed		197622						
ANR	197846	Symbol	HT_HASH_TO_BUCKET		197622						
ANR	197847	Function	zend_hash_destroy	1215:0:34753:36217							
ANR	197848	FunctionDef	zend_hash_destroy (HashTable * ht)		197847	0					
ANR	197849	CompoundStatement		1216:0:34814:36217	197847	0					
ANR	197850	IdentifierDeclStatement	"Bucket * p , * end ;"	1217:1:34817:34832	197847	0	True				
ANR	197851	IdentifierDecl	* p		197847	0					
ANR	197852	IdentifierDeclType	Bucket *		197847	0					
ANR	197853	Identifier	p		197847	1					
ANR	197854	IdentifierDecl	* end		197847	1					
ANR	197855	IdentifierDeclType	Bucket *		197847	0					
ANR	197856	Identifier	end		197847	1					
ANR	197857	ExpressionStatement	IS_CONSISTENT ( ht )	1219:1:34836:34853	197847	1	True				
ANR	197858	CallExpression	IS_CONSISTENT ( ht )		197847	0					
ANR	197859	Callee	IS_CONSISTENT		197847	0					
ANR	197860	Identifier	IS_CONSISTENT		197847	0					
ANR	197861	ArgumentList	ht		197847	1					
ANR	197862	Argument	ht		197847	0					
ANR	197863	Identifier	ht		197847	0					
ANR	197864	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) <= 1 )	1220:1:34856:34887	197847	2	True				
ANR	197865	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) <= 1 )		197847	0					
ANR	197866	Callee	HT_ASSERT		197847	0					
ANR	197867	Identifier	HT_ASSERT		197847	0					
ANR	197868	ArgumentList	GC_REFCOUNT ( ht ) <= 1		197847	1					
ANR	197869	Argument	GC_REFCOUNT ( ht ) <= 1		197847	0					
ANR	197870	RelationalExpression	GC_REFCOUNT ( ht ) <= 1		197847	0		<=			
ANR	197871	CallExpression	GC_REFCOUNT ( ht )		197847	0					
ANR	197872	Callee	GC_REFCOUNT		197847	0					
ANR	197873	Identifier	GC_REFCOUNT		197847	0					
ANR	197874	ArgumentList	ht		197847	1					
ANR	197875	Argument	ht		197847	0					
ANR	197876	Identifier	ht		197847	0					
ANR	197877	PrimaryExpression	1		197847	1					
ANR	197878	IfStatement	if ( ht -> nNumUsed )		197847	3					
ANR	197879	Condition	ht -> nNumUsed	1222:5:34895:34906	197847	0	True				
ANR	197880	PtrMemberAccess	ht -> nNumUsed		197847	0					
ANR	197881	Identifier	ht		197847	0					
ANR	197882	Identifier	nNumUsed		197847	1					
ANR	197883	CompoundStatement		7:19:94:94	197847	1					
ANR	197884	ExpressionStatement	p = ht -> arData	1223:2:34913:34927	197847	0	True				
ANR	197885	AssignmentExpression	p = ht -> arData		197847	0		=			
ANR	197886	Identifier	p		197847	0					
ANR	197887	PtrMemberAccess	ht -> arData		197847	1					
ANR	197888	Identifier	ht		197847	0					
ANR	197889	Identifier	arData		197847	1					
ANR	197890	ExpressionStatement	end = p + ht -> nNumUsed	1224:2:34931:34953	197847	1	True				
ANR	197891	AssignmentExpression	end = p + ht -> nNumUsed		197847	0		=			
ANR	197892	Identifier	end		197847	0					
ANR	197893	AdditiveExpression	p + ht -> nNumUsed		197847	1		+			
ANR	197894	Identifier	p		197847	0					
ANR	197895	PtrMemberAccess	ht -> nNumUsed		197847	1					
ANR	197896	Identifier	ht		197847	0					
ANR	197897	Identifier	nNumUsed		197847	1					
ANR	197898	IfStatement	if ( ht -> pDestructor )		197847	2					
ANR	197899	Condition	ht -> pDestructor	1225:6:34961:34975	197847	0	True				
ANR	197900	PtrMemberAccess	ht -> pDestructor		197847	0					
ANR	197901	Identifier	ht		197847	0					
ANR	197902	Identifier	pDestructor		197847	1					
ANR	197903	CompoundStatement		10:23:163:163	197847	1					
ANR	197904	ExpressionStatement	SET_INCONSISTENT ( HT_IS_DESTROYING )	1226:3:34983:35017	197847	0	True				
ANR	197905	CallExpression	SET_INCONSISTENT ( HT_IS_DESTROYING )		197847	0					
ANR	197906	Callee	SET_INCONSISTENT		197847	0					
ANR	197907	Identifier	SET_INCONSISTENT		197847	0					
ANR	197908	ArgumentList	HT_IS_DESTROYING		197847	1					
ANR	197909	Argument	HT_IS_DESTROYING		197847	0					
ANR	197910	Identifier	HT_IS_DESTROYING		197847	0					
ANR	197911	IfStatement	if ( ht -> u . flags & ( HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS ) )		197847	1					
ANR	197912	Condition	ht -> u . flags & ( HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS )	1228:7:35027:35080	197847	0	True				
ANR	197913	BitAndExpression	ht -> u . flags & ( HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS )		197847	0		&			
ANR	197914	MemberAccess	ht -> u . flags		197847	0					
ANR	197915	PtrMemberAccess	ht -> u		197847	0					
ANR	197916	Identifier	ht		197847	0					
ANR	197917	Identifier	u		197847	1					
ANR	197918	Identifier	flags		197847	1					
ANR	197919	InclusiveOrExpression	HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS		197847	1		|			
ANR	197920	Identifier	HASH_FLAG_PACKED		197847	0					
ANR	197921	Identifier	HASH_FLAG_STATIC_KEYS		197847	1					
ANR	197922	CompoundStatement		13:63:268:268	197847	1					
ANR	197923	IfStatement	if ( ht -> nNumUsed == ht -> nNumOfElements )		197847	0					
ANR	197924	Condition	ht -> nNumUsed == ht -> nNumOfElements	1229:8:35093:35126	197847	0	True				
ANR	197925	EqualityExpression	ht -> nNumUsed == ht -> nNumOfElements		197847	0		==			
ANR	197926	PtrMemberAccess	ht -> nNumUsed		197847	0					
ANR	197927	Identifier	ht		197847	0					
ANR	197928	Identifier	nNumUsed		197847	1					
ANR	197929	PtrMemberAccess	ht -> nNumOfElements		197847	1					
ANR	197930	Identifier	ht		197847	0					
ANR	197931	Identifier	nNumOfElements		197847	1					
ANR	197932	CompoundStatement		14:44:314:314	197847	1					
ANR	197933	DoStatement	do		197847	0					
ANR	197934	CompoundStatement		15:8:324:324	197847	0					
ANR	197935	ExpressionStatement	ht -> pDestructor ( & p -> val )	1231:6:35147:35171	197847	0	True				
ANR	197936	CallExpression	ht -> pDestructor ( & p -> val )		197847	0					
ANR	197937	Callee	ht -> pDestructor		197847	0					
ANR	197938	PtrMemberAccess	ht -> pDestructor		197847	0					
ANR	197939	Identifier	ht		197847	0					
ANR	197940	Identifier	pDestructor		197847	1					
ANR	197941	ArgumentList	& p -> val		197847	1					
ANR	197942	Argument	& p -> val		197847	0					
ANR	197943	UnaryOperationExpression	& p -> val		197847	0					
ANR	197944	UnaryOperator	&		197847	0					
ANR	197945	PtrMemberAccess	p -> val		197847	1					
ANR	197946	Identifier	p		197847	0					
ANR	197947	Identifier	val		197847	1					
ANR	197948	Condition	++ p != end	1232:14:35187:35196	197847	1	True				
ANR	197949	EqualityExpression	++ p != end		197847	0		!=			
ANR	197950	UnaryExpression	++ p		197847	0					
ANR	197951	IncDec	++		197847	0					
ANR	197952	Identifier	p		197847	1					
ANR	197953	Identifier	end		197847	1					
ANR	197954	ElseStatement	else		197847	0					
ANR	197955	CompoundStatement		18:11:396:396	197847	0					
ANR	197956	DoStatement	do		197847	0					
ANR	197957	CompoundStatement		19:8:406:406	197847	0					
ANR	197958	IfStatement	if ( EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF ) )		197847	0					
ANR	197959	Condition	EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF )	1235:10:35233:35268	197847	0	True				
ANR	197960	CallExpression	EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF )		197847	0					
ANR	197961	Callee	EXPECTED		197847	0					
ANR	197962	Identifier	EXPECTED		197847	0					
ANR	197963	ArgumentList	Z_TYPE ( p -> val ) != IS_UNDEF		197847	1					
ANR	197964	Argument	Z_TYPE ( p -> val ) != IS_UNDEF		197847	0					
ANR	197965	EqualityExpression	Z_TYPE ( p -> val ) != IS_UNDEF		197847	0		!=			
ANR	197966	CallExpression	Z_TYPE ( p -> val )		197847	0					
ANR	197967	Callee	Z_TYPE		197847	0					
ANR	197968	Identifier	Z_TYPE		197847	0					
ANR	197969	ArgumentList	p -> val		197847	1					
ANR	197970	Argument	p -> val		197847	0					
ANR	197971	PtrMemberAccess	p -> val		197847	0					
ANR	197972	Identifier	p		197847	0					
ANR	197973	Identifier	val		197847	1					
ANR	197974	Identifier	IS_UNDEF		197847	1					
ANR	197975	CompoundStatement		20:48:456:456	197847	1					
ANR	197976	ExpressionStatement	ht -> pDestructor ( & p -> val )	1236:7:35280:35304	197847	0	True				
ANR	197977	CallExpression	ht -> pDestructor ( & p -> val )		197847	0					
ANR	197978	Callee	ht -> pDestructor		197847	0					
ANR	197979	PtrMemberAccess	ht -> pDestructor		197847	0					
ANR	197980	Identifier	ht		197847	0					
ANR	197981	Identifier	pDestructor		197847	1					
ANR	197982	ArgumentList	& p -> val		197847	1					
ANR	197983	Argument	& p -> val		197847	0					
ANR	197984	UnaryOperationExpression	& p -> val		197847	0					
ANR	197985	UnaryOperator	&		197847	0					
ANR	197986	PtrMemberAccess	p -> val		197847	1					
ANR	197987	Identifier	p		197847	0					
ANR	197988	Identifier	val		197847	1					
ANR	197989	Condition	++ p != end	1238:14:35328:35337	197847	1	True				
ANR	197990	EqualityExpression	++ p != end		197847	0		!=			
ANR	197991	UnaryExpression	++ p		197847	0					
ANR	197992	IncDec	++		197847	0					
ANR	197993	Identifier	p		197847	1					
ANR	197994	Identifier	end		197847	1					
ANR	197995	ElseStatement	else		197847	0					
ANR	197996	IfStatement	if ( ht -> nNumUsed == ht -> nNumOfElements )		197847	0					
ANR	197997	Condition	ht -> nNumUsed == ht -> nNumOfElements	1240:14:35361:35394	197847	0	True				
ANR	197998	EqualityExpression	ht -> nNumUsed == ht -> nNumOfElements		197847	0		==			
ANR	197999	PtrMemberAccess	ht -> nNumUsed		197847	0					
ANR	198000	Identifier	ht		197847	0					
ANR	198001	Identifier	nNumUsed		197847	1					
ANR	198002	PtrMemberAccess	ht -> nNumOfElements		197847	1					
ANR	198003	Identifier	ht		197847	0					
ANR	198004	Identifier	nNumOfElements		197847	1					
ANR	198005	CompoundStatement		25:50:582:582	197847	1					
ANR	198006	DoStatement	do		197847	0					
ANR	198007	CompoundStatement		26:7:591:591	197847	0					
ANR	198008	ExpressionStatement	ht -> pDestructor ( & p -> val )	1242:5:35413:35437	197847	0	True				
ANR	198009	CallExpression	ht -> pDestructor ( & p -> val )		197847	0					
ANR	198010	Callee	ht -> pDestructor		197847	0					
ANR	198011	PtrMemberAccess	ht -> pDestructor		197847	0					
ANR	198012	Identifier	ht		197847	0					
ANR	198013	Identifier	pDestructor		197847	1					
ANR	198014	ArgumentList	& p -> val		197847	1					
ANR	198015	Argument	& p -> val		197847	0					
ANR	198016	UnaryOperationExpression	& p -> val		197847	0					
ANR	198017	UnaryOperator	&		197847	0					
ANR	198018	PtrMemberAccess	p -> val		197847	1					
ANR	198019	Identifier	p		197847	0					
ANR	198020	Identifier	val		197847	1					
ANR	198021	IfStatement	if ( EXPECTED ( p -> key ) )		197847	1					
ANR	198022	Condition	EXPECTED ( p -> key )	1243:9:35448:35463	197847	0	True				
ANR	198023	CallExpression	EXPECTED ( p -> key )		197847	0					
ANR	198024	Callee	EXPECTED		197847	0					
ANR	198025	Identifier	EXPECTED		197847	0					
ANR	198026	ArgumentList	p -> key		197847	1					
ANR	198027	Argument	p -> key		197847	0					
ANR	198028	PtrMemberAccess	p -> key		197847	0					
ANR	198029	Identifier	p		197847	0					
ANR	198030	Identifier	key		197847	1					
ANR	198031	CompoundStatement		28:27:651:651	197847	1					
ANR	198032	ExpressionStatement	zend_string_release ( p -> key )	1244:6:35474:35501	197847	0	True				
ANR	198033	CallExpression	zend_string_release ( p -> key )		197847	0					
ANR	198034	Callee	zend_string_release		197847	0					
ANR	198035	Identifier	zend_string_release		197847	0					
ANR	198036	ArgumentList	p -> key		197847	1					
ANR	198037	Argument	p -> key		197847	0					
ANR	198038	PtrMemberAccess	p -> key		197847	0					
ANR	198039	Identifier	p		197847	0					
ANR	198040	Identifier	key		197847	1					
ANR	198041	Condition	++ p != end	1246:13:35523:35532	197847	1	True				
ANR	198042	EqualityExpression	++ p != end		197847	0		!=			
ANR	198043	UnaryExpression	++ p		197847	0					
ANR	198044	IncDec	++		197847	0					
ANR	198045	Identifier	p		197847	1					
ANR	198046	Identifier	end		197847	1					
ANR	198047	ElseStatement	else		197847	0					
ANR	198048	CompoundStatement		32:10:731:731	197847	0					
ANR	198049	DoStatement	do		197847	0					
ANR	198050	CompoundStatement		33:7:740:740	197847	0					
ANR	198051	IfStatement	if ( EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF ) )		197847	0					
ANR	198052	Condition	EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF )	1249:9:35566:35601	197847	0	True				
ANR	198053	CallExpression	EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF )		197847	0					
ANR	198054	Callee	EXPECTED		197847	0					
ANR	198055	Identifier	EXPECTED		197847	0					
ANR	198056	ArgumentList	Z_TYPE ( p -> val ) != IS_UNDEF		197847	1					
ANR	198057	Argument	Z_TYPE ( p -> val ) != IS_UNDEF		197847	0					
ANR	198058	EqualityExpression	Z_TYPE ( p -> val ) != IS_UNDEF		197847	0		!=			
ANR	198059	CallExpression	Z_TYPE ( p -> val )		197847	0					
ANR	198060	Callee	Z_TYPE		197847	0					
ANR	198061	Identifier	Z_TYPE		197847	0					
ANR	198062	ArgumentList	p -> val		197847	1					
ANR	198063	Argument	p -> val		197847	0					
ANR	198064	PtrMemberAccess	p -> val		197847	0					
ANR	198065	Identifier	p		197847	0					
ANR	198066	Identifier	val		197847	1					
ANR	198067	Identifier	IS_UNDEF		197847	1					
ANR	198068	CompoundStatement		34:47:789:789	197847	1					
ANR	198069	ExpressionStatement	ht -> pDestructor ( & p -> val )	1250:6:35612:35636	197847	0	True				
ANR	198070	CallExpression	ht -> pDestructor ( & p -> val )		197847	0					
ANR	198071	Callee	ht -> pDestructor		197847	0					
ANR	198072	PtrMemberAccess	ht -> pDestructor		197847	0					
ANR	198073	Identifier	ht		197847	0					
ANR	198074	Identifier	pDestructor		197847	1					
ANR	198075	ArgumentList	& p -> val		197847	1					
ANR	198076	Argument	& p -> val		197847	0					
ANR	198077	UnaryOperationExpression	& p -> val		197847	0					
ANR	198078	UnaryOperator	&		197847	0					
ANR	198079	PtrMemberAccess	p -> val		197847	1					
ANR	198080	Identifier	p		197847	0					
ANR	198081	Identifier	val		197847	1					
ANR	198082	IfStatement	if ( EXPECTED ( p -> key ) )		197847	1					
ANR	198083	Condition	EXPECTED ( p -> key )	1251:10:35648:35663	197847	0	True				
ANR	198084	CallExpression	EXPECTED ( p -> key )		197847	0					
ANR	198085	Callee	EXPECTED		197847	0					
ANR	198086	Identifier	EXPECTED		197847	0					
ANR	198087	ArgumentList	p -> key		197847	1					
ANR	198088	Argument	p -> key		197847	0					
ANR	198089	PtrMemberAccess	p -> key		197847	0					
ANR	198090	Identifier	p		197847	0					
ANR	198091	Identifier	key		197847	1					
ANR	198092	CompoundStatement		36:28:851:851	197847	1					
ANR	198093	ExpressionStatement	zend_string_release ( p -> key )	1252:7:35675:35702	197847	0	True				
ANR	198094	CallExpression	zend_string_release ( p -> key )		197847	0					
ANR	198095	Callee	zend_string_release		197847	0					
ANR	198096	Identifier	zend_string_release		197847	0					
ANR	198097	ArgumentList	p -> key		197847	1					
ANR	198098	Argument	p -> key		197847	0					
ANR	198099	PtrMemberAccess	p -> key		197847	0					
ANR	198100	Identifier	p		197847	0					
ANR	198101	Identifier	key		197847	1					
ANR	198102	Condition	++ p != end	1255:13:35732:35741	197847	1	True				
ANR	198103	EqualityExpression	++ p != end		197847	0		!=			
ANR	198104	UnaryExpression	++ p		197847	0					
ANR	198105	IncDec	++		197847	0					
ANR	198106	Identifier	p		197847	1					
ANR	198107	Identifier	end		197847	1					
ANR	198108	ExpressionStatement	SET_INCONSISTENT ( HT_DESTROYED )	1258:3:35754:35784	197847	2	True				
ANR	198109	CallExpression	SET_INCONSISTENT ( HT_DESTROYED )		197847	0					
ANR	198110	Callee	SET_INCONSISTENT		197847	0					
ANR	198111	Identifier	SET_INCONSISTENT		197847	0					
ANR	198112	ArgumentList	HT_DESTROYED		197847	1					
ANR	198113	Argument	HT_DESTROYED		197847	0					
ANR	198114	Identifier	HT_DESTROYED		197847	0					
ANR	198115	ElseStatement	else		197847	0					
ANR	198116	CompoundStatement		44:9:980:980	197847	0					
ANR	198117	IfStatement	if ( ! ( ht -> u . flags & ( HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS ) ) )		197847	0					
ANR	198118	Condition	! ( ht -> u . flags & ( HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS ) )	1260:7:35804:35860	197847	0	True				
ANR	198119	UnaryOperationExpression	! ( ht -> u . flags & ( HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS ) )		197847	0					
ANR	198120	UnaryOperator	!		197847	0					
ANR	198121	BitAndExpression	ht -> u . flags & ( HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS )		197847	1		&			
ANR	198122	MemberAccess	ht -> u . flags		197847	0					
ANR	198123	PtrMemberAccess	ht -> u		197847	0					
ANR	198124	Identifier	ht		197847	0					
ANR	198125	Identifier	u		197847	1					
ANR	198126	Identifier	flags		197847	1					
ANR	198127	InclusiveOrExpression	HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS		197847	1		|			
ANR	198128	Identifier	HASH_FLAG_PACKED		197847	0					
ANR	198129	Identifier	HASH_FLAG_STATIC_KEYS		197847	1					
ANR	198130	CompoundStatement		45:66:1048:1048	197847	1					
ANR	198131	DoStatement	do		197847	0					
ANR	198132	CompoundStatement		46:7:1057:1057	197847	0					
ANR	198133	IfStatement	if ( EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF ) )		197847	0					
ANR	198134	Condition	EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF )	1262:9:35883:35918	197847	0	True				
ANR	198135	CallExpression	EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF )		197847	0					
ANR	198136	Callee	EXPECTED		197847	0					
ANR	198137	Identifier	EXPECTED		197847	0					
ANR	198138	ArgumentList	Z_TYPE ( p -> val ) != IS_UNDEF		197847	1					
ANR	198139	Argument	Z_TYPE ( p -> val ) != IS_UNDEF		197847	0					
ANR	198140	EqualityExpression	Z_TYPE ( p -> val ) != IS_UNDEF		197847	0		!=			
ANR	198141	CallExpression	Z_TYPE ( p -> val )		197847	0					
ANR	198142	Callee	Z_TYPE		197847	0					
ANR	198143	Identifier	Z_TYPE		197847	0					
ANR	198144	ArgumentList	p -> val		197847	1					
ANR	198145	Argument	p -> val		197847	0					
ANR	198146	PtrMemberAccess	p -> val		197847	0					
ANR	198147	Identifier	p		197847	0					
ANR	198148	Identifier	val		197847	1					
ANR	198149	Identifier	IS_UNDEF		197847	1					
ANR	198150	CompoundStatement		47:47:1106:1106	197847	1					
ANR	198151	IfStatement	if ( EXPECTED ( p -> key ) )		197847	0					
ANR	198152	Condition	EXPECTED ( p -> key )	1263:10:35933:35948	197847	0	True				
ANR	198153	CallExpression	EXPECTED ( p -> key )		197847	0					
ANR	198154	Callee	EXPECTED		197847	0					
ANR	198155	Identifier	EXPECTED		197847	0					
ANR	198156	ArgumentList	p -> key		197847	1					
ANR	198157	Argument	p -> key		197847	0					
ANR	198158	PtrMemberAccess	p -> key		197847	0					
ANR	198159	Identifier	p		197847	0					
ANR	198160	Identifier	key		197847	1					
ANR	198161	CompoundStatement		48:28:1136:1136	197847	1					
ANR	198162	ExpressionStatement	zend_string_release ( p -> key )	1264:7:35960:35987	197847	0	True				
ANR	198163	CallExpression	zend_string_release ( p -> key )		197847	0					
ANR	198164	Callee	zend_string_release		197847	0					
ANR	198165	Identifier	zend_string_release		197847	0					
ANR	198166	ArgumentList	p -> key		197847	1					
ANR	198167	Argument	p -> key		197847	0					
ANR	198168	PtrMemberAccess	p -> key		197847	0					
ANR	198169	Identifier	p		197847	0					
ANR	198170	Identifier	key		197847	1					
ANR	198171	Condition	++ p != end	1267:13:36017:36026	197847	1	True				
ANR	198172	EqualityExpression	++ p != end		197847	0		!=			
ANR	198173	UnaryExpression	++ p		197847	0					
ANR	198174	IncDec	++		197847	0					
ANR	198175	Identifier	p		197847	1					
ANR	198176	Identifier	end		197847	1					
ANR	198177	ExpressionStatement	zend_hash_iterators_remove ( ht )	1270:2:36041:36071	197847	3	True				
ANR	198178	CallExpression	zend_hash_iterators_remove ( ht )		197847	0					
ANR	198179	Callee	zend_hash_iterators_remove		197847	0					
ANR	198180	Identifier	zend_hash_iterators_remove		197847	0					
ANR	198181	ArgumentList	ht		197847	1					
ANR	198182	Argument	ht		197847	0					
ANR	198183	Identifier	ht		197847	0					
ANR	198184	ElseStatement	else		197847	0					
ANR	198185	IfStatement	if ( EXPECTED ( ! ( ht -> u . flags & HASH_FLAG_INITIALIZED ) ) )		197847	0					
ANR	198186	Condition	EXPECTED ( ! ( ht -> u . flags & HASH_FLAG_INITIALIZED ) )	1271:12:36085:36132	197847	0	True				
ANR	198187	CallExpression	EXPECTED ( ! ( ht -> u . flags & HASH_FLAG_INITIALIZED ) )		197847	0					
ANR	198188	Callee	EXPECTED		197847	0					
ANR	198189	Identifier	EXPECTED		197847	0					
ANR	198190	ArgumentList	! ( ht -> u . flags & HASH_FLAG_INITIALIZED )		197847	1					
ANR	198191	Argument	! ( ht -> u . flags & HASH_FLAG_INITIALIZED )		197847	0					
ANR	198192	UnaryOperationExpression	! ( ht -> u . flags & HASH_FLAG_INITIALIZED )		197847	0					
ANR	198193	UnaryOperator	!		197847	0					
ANR	198194	BitAndExpression	ht -> u . flags & HASH_FLAG_INITIALIZED		197847	1		&			
ANR	198195	MemberAccess	ht -> u . flags		197847	0					
ANR	198196	PtrMemberAccess	ht -> u		197847	0					
ANR	198197	Identifier	ht		197847	0					
ANR	198198	Identifier	u		197847	1					
ANR	198199	Identifier	flags		197847	1					
ANR	198200	Identifier	HASH_FLAG_INITIALIZED		197847	1					
ANR	198201	CompoundStatement		56:62:1320:1320	197847	1					
ANR	198202	ReturnStatement	return ;	1272:2:36139:36145	197847	0	True				
ANR	198203	ExpressionStatement	"pefree ( HT_GET_DATA_ADDR ( ht ) , ht -> u . flags & HASH_FLAG_PERSISTENT )"	1274:1:36151:36215	197847	4	True				
ANR	198204	CallExpression	"pefree ( HT_GET_DATA_ADDR ( ht ) , ht -> u . flags & HASH_FLAG_PERSISTENT )"		197847	0					
ANR	198205	Callee	pefree		197847	0					
ANR	198206	Identifier	pefree		197847	0					
ANR	198207	ArgumentList	HT_GET_DATA_ADDR ( ht )		197847	1					
ANR	198208	Argument	HT_GET_DATA_ADDR ( ht )		197847	0					
ANR	198209	CallExpression	HT_GET_DATA_ADDR ( ht )		197847	0					
ANR	198210	Callee	HT_GET_DATA_ADDR		197847	0					
ANR	198211	Identifier	HT_GET_DATA_ADDR		197847	0					
ANR	198212	ArgumentList	ht		197847	1					
ANR	198213	Argument	ht		197847	0					
ANR	198214	Identifier	ht		197847	0					
ANR	198215	Argument	ht -> u . flags & HASH_FLAG_PERSISTENT		197847	1					
ANR	198216	BitAndExpression	ht -> u . flags & HASH_FLAG_PERSISTENT		197847	0		&			
ANR	198217	MemberAccess	ht -> u . flags		197847	0					
ANR	198218	PtrMemberAccess	ht -> u		197847	0					
ANR	198219	Identifier	ht		197847	0					
ANR	198220	Identifier	u		197847	1					
ANR	198221	Identifier	flags		197847	1					
ANR	198222	Identifier	HASH_FLAG_PERSISTENT		197847	1					
ANR	198223	ReturnType	ZEND_API void ZEND_FASTCALL		197847	1					
ANR	198224	Identifier	zend_hash_destroy		197847	2					
ANR	198225	ParameterList	HashTable * ht		197847	3					
ANR	198226	Parameter	HashTable * ht	1215:46:34799:34811	197847	0	True				
ANR	198227	ParameterType	HashTable *		197847	0					
ANR	198228	Identifier	ht		197847	1					
ANR	198229	CFGEntryNode	ENTRY		197847		True				
ANR	198230	CFGExitNode	EXIT		197847		True				
ANR	198231	Symbol	HASH_FLAG_STATIC_KEYS		197847						
ANR	198232	Symbol	HT_DESTROYED		197847						
ANR	198233	Symbol	HASH_FLAG_PACKED		197847						
ANR	198234	Symbol	ht -> pDestructor		197847						
ANR	198235	Symbol	ht -> u		197847						
ANR	198236	Symbol	ht -> arData		197847						
ANR	198237	Symbol	Z_TYPE		197847						
ANR	198238	Symbol	ht -> u . flags		197847						
ANR	198239	Symbol	ht		197847						
ANR	198240	Symbol	* ht		197847						
ANR	198241	Symbol	HASH_FLAG_INITIALIZED		197847						
ANR	198242	Symbol	end		197847						
ANR	198243	Symbol	GC_REFCOUNT		197847						
ANR	198244	Symbol	ht -> nNumOfElements		197847						
ANR	198245	Symbol	IS_UNDEF		197847						
ANR	198246	Symbol	& p -> val		197847						
ANR	198247	Symbol	HT_GET_DATA_ADDR		197847						
ANR	198248	Symbol	p -> val		197847						
ANR	198249	Symbol	p -> key		197847						
ANR	198250	Symbol	p		197847						
ANR	198251	Symbol	HT_IS_DESTROYING		197847						
ANR	198252	Symbol	HASH_FLAG_PERSISTENT		197847						
ANR	198253	Symbol	* p		197847						
ANR	198254	Symbol	EXPECTED		197847						
ANR	198255	Symbol	ht -> nNumUsed		197847						
ANR	198256	Function	zend_array_destroy	1277:0:36220:37520							
ANR	198257	FunctionDef	zend_array_destroy (HashTable * ht)		198256	0					
ANR	198258	CompoundStatement		1278:0:36282:37520	198256	0					
ANR	198259	IdentifierDeclStatement	"Bucket * p , * end ;"	1279:1:36285:36300	198256	0	True				
ANR	198260	IdentifierDecl	* p		198256	0					
ANR	198261	IdentifierDeclType	Bucket *		198256	0					
ANR	198262	Identifier	p		198256	1					
ANR	198263	IdentifierDecl	* end		198256	1					
ANR	198264	IdentifierDeclType	Bucket *		198256	0					
ANR	198265	Identifier	end		198256	1					
ANR	198266	ExpressionStatement	IS_CONSISTENT ( ht )	1281:1:36304:36321	198256	1	True				
ANR	198267	CallExpression	IS_CONSISTENT ( ht )		198256	0					
ANR	198268	Callee	IS_CONSISTENT		198256	0					
ANR	198269	Identifier	IS_CONSISTENT		198256	0					
ANR	198270	ArgumentList	ht		198256	1					
ANR	198271	Argument	ht		198256	0					
ANR	198272	Identifier	ht		198256	0					
ANR	198273	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) <= 1 )	1282:1:36324:36355	198256	2	True				
ANR	198274	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) <= 1 )		198256	0					
ANR	198275	Callee	HT_ASSERT		198256	0					
ANR	198276	Identifier	HT_ASSERT		198256	0					
ANR	198277	ArgumentList	GC_REFCOUNT ( ht ) <= 1		198256	1					
ANR	198278	Argument	GC_REFCOUNT ( ht ) <= 1		198256	0					
ANR	198279	RelationalExpression	GC_REFCOUNT ( ht ) <= 1		198256	0		<=			
ANR	198280	CallExpression	GC_REFCOUNT ( ht )		198256	0					
ANR	198281	Callee	GC_REFCOUNT		198256	0					
ANR	198282	Identifier	GC_REFCOUNT		198256	0					
ANR	198283	ArgumentList	ht		198256	1					
ANR	198284	Argument	ht		198256	0					
ANR	198285	Identifier	ht		198256	0					
ANR	198286	PrimaryExpression	1		198256	1					
ANR	198287	ExpressionStatement	GC_REMOVE_FROM_BUFFER ( ht )	1285:1:36388:36413	198256	3	True				
ANR	198288	CallExpression	GC_REMOVE_FROM_BUFFER ( ht )		198256	0					
ANR	198289	Callee	GC_REMOVE_FROM_BUFFER		198256	0					
ANR	198290	Identifier	GC_REMOVE_FROM_BUFFER		198256	0					
ANR	198291	ArgumentList	ht		198256	1					
ANR	198292	Argument	ht		198256	0					
ANR	198293	Identifier	ht		198256	0					
ANR	198294	ExpressionStatement	GC_TYPE_INFO ( ht ) = IS_NULL | ( GC_WHITE << 16 )	1286:1:36416:36461	198256	4	True				
ANR	198295	AssignmentExpression	GC_TYPE_INFO ( ht ) = IS_NULL | ( GC_WHITE << 16 )		198256	0		=			
ANR	198296	CallExpression	GC_TYPE_INFO ( ht )		198256	0					
ANR	198297	Callee	GC_TYPE_INFO		198256	0					
ANR	198298	Identifier	GC_TYPE_INFO		198256	0					
ANR	198299	ArgumentList	ht		198256	1					
ANR	198300	Argument	ht		198256	0					
ANR	198301	Identifier	ht		198256	0					
ANR	198302	InclusiveOrExpression	IS_NULL | ( GC_WHITE << 16 )		198256	1		|			
ANR	198303	Identifier	IS_NULL		198256	0					
ANR	198304	ShiftExpression	GC_WHITE << 16		198256	1		<<			
ANR	198305	Identifier	GC_WHITE		198256	0					
ANR	198306	PrimaryExpression	16		198256	1					
ANR	198307	IfStatement	if ( ht -> nNumUsed )		198256	5					
ANR	198308	Condition	ht -> nNumUsed	1288:5:36469:36480	198256	0	True				
ANR	198309	PtrMemberAccess	ht -> nNumUsed		198256	0					
ANR	198310	Identifier	ht		198256	0					
ANR	198311	Identifier	nNumUsed		198256	1					
ANR	198312	CompoundStatement		11:19:200:200	198256	1					
ANR	198313	IfStatement	if ( UNEXPECTED ( ht -> pDestructor != ZVAL_PTR_DTOR ) )		198256	0					
ANR	198314	Condition	UNEXPECTED ( ht -> pDestructor != ZVAL_PTR_DTOR )	1290:6:36563:36606	198256	0	True				
ANR	198315	CallExpression	UNEXPECTED ( ht -> pDestructor != ZVAL_PTR_DTOR )		198256	0					
ANR	198316	Callee	UNEXPECTED		198256	0					
ANR	198317	Identifier	UNEXPECTED		198256	0					
ANR	198318	ArgumentList	ht -> pDestructor != ZVAL_PTR_DTOR		198256	1					
ANR	198319	Argument	ht -> pDestructor != ZVAL_PTR_DTOR		198256	0					
ANR	198320	EqualityExpression	ht -> pDestructor != ZVAL_PTR_DTOR		198256	0		!=			
ANR	198321	PtrMemberAccess	ht -> pDestructor		198256	0					
ANR	198322	Identifier	ht		198256	0					
ANR	198323	Identifier	pDestructor		198256	1					
ANR	198324	Identifier	ZVAL_PTR_DTOR		198256	1					
ANR	198325	CompoundStatement		13:52:326:326	198256	1					
ANR	198326	ExpressionStatement	zend_hash_destroy ( ht )	1291:3:36614:36635	198256	0	True				
ANR	198327	CallExpression	zend_hash_destroy ( ht )		198256	0					
ANR	198328	Callee	zend_hash_destroy		198256	0					
ANR	198329	Identifier	zend_hash_destroy		198256	0					
ANR	198330	ArgumentList	ht		198256	1					
ANR	198331	Argument	ht		198256	0					
ANR	198332	Identifier	ht		198256	0					
ANR	198333	GotoStatement	goto free_ht ;	1292:3:36640:36652	198256	1	True				
ANR	198334	Identifier	free_ht		198256	0					
ANR	198335	ExpressionStatement	p = ht -> arData	1295:2:36661:36675	198256	1	True				
ANR	198336	AssignmentExpression	p = ht -> arData		198256	0		=			
ANR	198337	Identifier	p		198256	0					
ANR	198338	PtrMemberAccess	ht -> arData		198256	1					
ANR	198339	Identifier	ht		198256	0					
ANR	198340	Identifier	arData		198256	1					
ANR	198341	ExpressionStatement	end = p + ht -> nNumUsed	1296:2:36679:36701	198256	2	True				
ANR	198342	AssignmentExpression	end = p + ht -> nNumUsed		198256	0		=			
ANR	198343	Identifier	end		198256	0					
ANR	198344	AdditiveExpression	p + ht -> nNumUsed		198256	1		+			
ANR	198345	Identifier	p		198256	0					
ANR	198346	PtrMemberAccess	ht -> nNumUsed		198256	1					
ANR	198347	Identifier	ht		198256	0					
ANR	198348	Identifier	nNumUsed		198256	1					
ANR	198349	ExpressionStatement	SET_INCONSISTENT ( HT_IS_DESTROYING )	1297:2:36705:36739	198256	3	True				
ANR	198350	CallExpression	SET_INCONSISTENT ( HT_IS_DESTROYING )		198256	0					
ANR	198351	Callee	SET_INCONSISTENT		198256	0					
ANR	198352	Identifier	SET_INCONSISTENT		198256	0					
ANR	198353	ArgumentList	HT_IS_DESTROYING		198256	1					
ANR	198354	Argument	HT_IS_DESTROYING		198256	0					
ANR	198355	Identifier	HT_IS_DESTROYING		198256	0					
ANR	198356	IfStatement	if ( ht -> u . flags & ( HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS ) )		198256	4					
ANR	198357	Condition	ht -> u . flags & ( HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS )	1299:6:36748:36801	198256	0	True				
ANR	198358	BitAndExpression	ht -> u . flags & ( HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS )		198256	0		&			
ANR	198359	MemberAccess	ht -> u . flags		198256	0					
ANR	198360	PtrMemberAccess	ht -> u		198256	0					
ANR	198361	Identifier	ht		198256	0					
ANR	198362	Identifier	u		198256	1					
ANR	198363	Identifier	flags		198256	1					
ANR	198364	InclusiveOrExpression	HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS		198256	1		|			
ANR	198365	Identifier	HASH_FLAG_PACKED		198256	0					
ANR	198366	Identifier	HASH_FLAG_STATIC_KEYS		198256	1					
ANR	198367	CompoundStatement		22:62:521:521	198256	1					
ANR	198368	DoStatement	do		198256	0					
ANR	198369	CompoundStatement		23:6:529:529	198256	0					
ANR	198370	Statement	i_zval_ptr_dtor	1301:4:36818:36832	198256	0	True				
ANR	198371	Statement	(	1301:19:36833:36833	198256	1	True				
ANR	198372	Statement	&	1301:20:36834:36834	198256	2	True				
ANR	198373	Statement	p	1301:21:36835:36835	198256	3	True				
ANR	198374	Statement	->	1301:22:36836:36837	198256	4	True				
ANR	198375	Statement	val	1301:24:36838:36840	198256	5	True				
ANR	198376	Statement	ZEND_FILE_LINE_CC	1301:28:36842:36858	198256	6	True				
ANR	198377	Statement	)	1301:45:36859:36859	198256	7	True				
ANR	198378	ExpressionStatement		1301:46:36860:36860	198256	8	True				
ANR	198379	Condition	++ p != end	1302:12:36874:36883	198256	1	True				
ANR	198380	EqualityExpression	++ p != end		198256	0		!=			
ANR	198381	UnaryExpression	++ p		198256	0					
ANR	198382	IncDec	++		198256	0					
ANR	198383	Identifier	p		198256	1					
ANR	198384	Identifier	end		198256	1					
ANR	198385	ElseStatement	else		198256	0					
ANR	198386	IfStatement	if ( ht -> nNumUsed == ht -> nNumOfElements )		198256	0					
ANR	198387	Condition	ht -> nNumUsed == ht -> nNumOfElements	1303:13:36900:36933	198256	0	True				
ANR	198388	EqualityExpression	ht -> nNumUsed == ht -> nNumOfElements		198256	0		==			
ANR	198389	PtrMemberAccess	ht -> nNumUsed		198256	0					
ANR	198390	Identifier	ht		198256	0					
ANR	198391	Identifier	nNumUsed		198256	1					
ANR	198392	PtrMemberAccess	ht -> nNumOfElements		198256	1					
ANR	198393	Identifier	ht		198256	0					
ANR	198394	Identifier	nNumOfElements		198256	1					
ANR	198395	CompoundStatement		26:49:653:653	198256	1					
ANR	198396	DoStatement	do		198256	0					
ANR	198397	CompoundStatement		27:6:661:661	198256	0					
ANR	198398	Statement	i_zval_ptr_dtor	1305:4:36950:36964	198256	0	True				
ANR	198399	Statement	(	1305:19:36965:36965	198256	1	True				
ANR	198400	Statement	&	1305:20:36966:36966	198256	2	True				
ANR	198401	Statement	p	1305:21:36967:36967	198256	3	True				
ANR	198402	Statement	->	1305:22:36968:36969	198256	4	True				
ANR	198403	Statement	val	1305:24:36970:36972	198256	5	True				
ANR	198404	Statement	ZEND_FILE_LINE_CC	1305:28:36974:36990	198256	6	True				
ANR	198405	Statement	)	1305:45:36991:36991	198256	7	True				
ANR	198406	ExpressionStatement		1305:46:36992:36992	198256	8	True				
ANR	198407	IfStatement	if ( EXPECTED ( p -> key ) )		198256	9					
ANR	198408	Condition	EXPECTED ( p -> key )	1306:8:37002:37017	198256	0	True				
ANR	198409	CallExpression	EXPECTED ( p -> key )		198256	0					
ANR	198410	Callee	EXPECTED		198256	0					
ANR	198411	Identifier	EXPECTED		198256	0					
ANR	198412	ArgumentList	p -> key		198256	1					
ANR	198413	Argument	p -> key		198256	0					
ANR	198414	PtrMemberAccess	p -> key		198256	0					
ANR	198415	Identifier	p		198256	0					
ANR	198416	Identifier	key		198256	1					
ANR	198417	CompoundStatement		29:26:737:737	198256	1					
ANR	198418	ExpressionStatement	zend_string_release ( p -> key )	1307:5:37027:37054	198256	0	True				
ANR	198419	CallExpression	zend_string_release ( p -> key )		198256	0					
ANR	198420	Callee	zend_string_release		198256	0					
ANR	198421	Identifier	zend_string_release		198256	0					
ANR	198422	ArgumentList	p -> key		198256	1					
ANR	198423	Argument	p -> key		198256	0					
ANR	198424	PtrMemberAccess	p -> key		198256	0					
ANR	198425	Identifier	p		198256	0					
ANR	198426	Identifier	key		198256	1					
ANR	198427	Condition	++ p != end	1309:12:37074:37083	198256	1	True				
ANR	198428	EqualityExpression	++ p != end		198256	0		!=			
ANR	198429	UnaryExpression	++ p		198256	0					
ANR	198430	IncDec	++		198256	0					
ANR	198431	Identifier	p		198256	1					
ANR	198432	Identifier	end		198256	1					
ANR	198433	ElseStatement	else		198256	0					
ANR	198434	CompoundStatement		33:9:813:813	198256	0					
ANR	198435	DoStatement	do		198256	0					
ANR	198436	CompoundStatement		34:6:821:821	198256	0					
ANR	198437	IfStatement	if ( EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF ) )		198256	0					
ANR	198438	Condition	EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF )	1312:8:37114:37149	198256	0	True				
ANR	198439	CallExpression	EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF )		198256	0					
ANR	198440	Callee	EXPECTED		198256	0					
ANR	198441	Identifier	EXPECTED		198256	0					
ANR	198442	ArgumentList	Z_TYPE ( p -> val ) != IS_UNDEF		198256	1					
ANR	198443	Argument	Z_TYPE ( p -> val ) != IS_UNDEF		198256	0					
ANR	198444	EqualityExpression	Z_TYPE ( p -> val ) != IS_UNDEF		198256	0		!=			
ANR	198445	CallExpression	Z_TYPE ( p -> val )		198256	0					
ANR	198446	Callee	Z_TYPE		198256	0					
ANR	198447	Identifier	Z_TYPE		198256	0					
ANR	198448	ArgumentList	p -> val		198256	1					
ANR	198449	Argument	p -> val		198256	0					
ANR	198450	PtrMemberAccess	p -> val		198256	0					
ANR	198451	Identifier	p		198256	0					
ANR	198452	Identifier	val		198256	1					
ANR	198453	Identifier	IS_UNDEF		198256	1					
ANR	198454	CompoundStatement		35:46:869:869	198256	1					
ANR	198455	Statement	i_zval_ptr_dtor	1313:5:37159:37173	198256	0	True				
ANR	198456	Statement	(	1313:20:37174:37174	198256	1	True				
ANR	198457	Statement	&	1313:21:37175:37175	198256	2	True				
ANR	198458	Statement	p	1313:22:37176:37176	198256	3	True				
ANR	198459	Statement	->	1313:23:37177:37178	198256	4	True				
ANR	198460	Statement	val	1313:25:37179:37181	198256	5	True				
ANR	198461	Statement	ZEND_FILE_LINE_CC	1313:29:37183:37199	198256	6	True				
ANR	198462	Statement	)	1313:46:37200:37200	198256	7	True				
ANR	198463	ExpressionStatement		1313:47:37201:37201	198256	8	True				
ANR	198464	IfStatement	if ( EXPECTED ( p -> key ) )		198256	9					
ANR	198465	Condition	EXPECTED ( p -> key )	1314:9:37212:37227	198256	0	True				
ANR	198466	CallExpression	EXPECTED ( p -> key )		198256	0					
ANR	198467	Callee	EXPECTED		198256	0					
ANR	198468	Identifier	EXPECTED		198256	0					
ANR	198469	ArgumentList	p -> key		198256	1					
ANR	198470	Argument	p -> key		198256	0					
ANR	198471	PtrMemberAccess	p -> key		198256	0					
ANR	198472	Identifier	p		198256	0					
ANR	198473	Identifier	key		198256	1					
ANR	198474	CompoundStatement		37:27:947:947	198256	1					
ANR	198475	ExpressionStatement	zend_string_release ( p -> key )	1315:6:37238:37265	198256	0	True				
ANR	198476	CallExpression	zend_string_release ( p -> key )		198256	0					
ANR	198477	Callee	zend_string_release		198256	0					
ANR	198478	Identifier	zend_string_release		198256	0					
ANR	198479	ArgumentList	p -> key		198256	1					
ANR	198480	Argument	p -> key		198256	0					
ANR	198481	PtrMemberAccess	p -> key		198256	0					
ANR	198482	Identifier	p		198256	0					
ANR	198483	Identifier	key		198256	1					
ANR	198484	Condition	++ p != end	1318:12:37292:37301	198256	1	True				
ANR	198485	EqualityExpression	++ p != end		198256	0		!=			
ANR	198486	UnaryExpression	++ p		198256	0					
ANR	198487	IncDec	++		198256	0					
ANR	198488	Identifier	p		198256	1					
ANR	198489	Identifier	end		198256	1					
ANR	198490	ExpressionStatement	zend_hash_iterators_remove ( ht )	1320:2:37311:37341	198256	5	True				
ANR	198491	CallExpression	zend_hash_iterators_remove ( ht )		198256	0					
ANR	198492	Callee	zend_hash_iterators_remove		198256	0					
ANR	198493	Identifier	zend_hash_iterators_remove		198256	0					
ANR	198494	ArgumentList	ht		198256	1					
ANR	198495	Argument	ht		198256	0					
ANR	198496	Identifier	ht		198256	0					
ANR	198497	ExpressionStatement	SET_INCONSISTENT ( HT_DESTROYED )	1321:2:37345:37375	198256	6	True				
ANR	198498	CallExpression	SET_INCONSISTENT ( HT_DESTROYED )		198256	0					
ANR	198499	Callee	SET_INCONSISTENT		198256	0					
ANR	198500	Identifier	SET_INCONSISTENT		198256	0					
ANR	198501	ArgumentList	HT_DESTROYED		198256	1					
ANR	198502	Argument	HT_DESTROYED		198256	0					
ANR	198503	Identifier	HT_DESTROYED		198256	0					
ANR	198504	ElseStatement	else		198256	0					
ANR	198505	IfStatement	if ( EXPECTED ( ! ( ht -> u . flags & HASH_FLAG_INITIALIZED ) ) )		198256	0					
ANR	198506	Condition	EXPECTED ( ! ( ht -> u . flags & HASH_FLAG_INITIALIZED ) )	1322:12:37389:37436	198256	0	True				
ANR	198507	CallExpression	EXPECTED ( ! ( ht -> u . flags & HASH_FLAG_INITIALIZED ) )		198256	0					
ANR	198508	Callee	EXPECTED		198256	0					
ANR	198509	Identifier	EXPECTED		198256	0					
ANR	198510	ArgumentList	! ( ht -> u . flags & HASH_FLAG_INITIALIZED )		198256	1					
ANR	198511	Argument	! ( ht -> u . flags & HASH_FLAG_INITIALIZED )		198256	0					
ANR	198512	UnaryOperationExpression	! ( ht -> u . flags & HASH_FLAG_INITIALIZED )		198256	0					
ANR	198513	UnaryOperator	!		198256	0					
ANR	198514	BitAndExpression	ht -> u . flags & HASH_FLAG_INITIALIZED		198256	1		&			
ANR	198515	MemberAccess	ht -> u . flags		198256	0					
ANR	198516	PtrMemberAccess	ht -> u		198256	0					
ANR	198517	Identifier	ht		198256	0					
ANR	198518	Identifier	u		198256	1					
ANR	198519	Identifier	flags		198256	1					
ANR	198520	Identifier	HASH_FLAG_INITIALIZED		198256	1					
ANR	198521	CompoundStatement		45:62:1156:1156	198256	1					
ANR	198522	GotoStatement	goto free_ht ;	1323:2:37443:37455	198256	0	True				
ANR	198523	Identifier	free_ht		198256	0					
ANR	198524	ExpressionStatement	efree ( HT_GET_DATA_ADDR ( ht ) )	1325:1:37461:37488	198256	6	True				
ANR	198525	CallExpression	efree ( HT_GET_DATA_ADDR ( ht ) )		198256	0					
ANR	198526	Callee	efree		198256	0					
ANR	198527	Identifier	efree		198256	0					
ANR	198528	ArgumentList	HT_GET_DATA_ADDR ( ht )		198256	1					
ANR	198529	Argument	HT_GET_DATA_ADDR ( ht )		198256	0					
ANR	198530	CallExpression	HT_GET_DATA_ADDR ( ht )		198256	0					
ANR	198531	Callee	HT_GET_DATA_ADDR		198256	0					
ANR	198532	Identifier	HT_GET_DATA_ADDR		198256	0					
ANR	198533	ArgumentList	ht		198256	1					
ANR	198534	Argument	ht		198256	0					
ANR	198535	Identifier	ht		198256	0					
ANR	198536	Label	free_ht :	1326:0:37490:37497	198256	7	True				
ANR	198537	Identifier	free_ht		198256	0					
ANR	198538	ExpressionStatement	FREE_HASHTABLE ( ht )	1327:1:37500:37518	198256	8	True				
ANR	198539	CallExpression	FREE_HASHTABLE ( ht )		198256	0					
ANR	198540	Callee	FREE_HASHTABLE		198256	0					
ANR	198541	Identifier	FREE_HASHTABLE		198256	0					
ANR	198542	ArgumentList	ht		198256	1					
ANR	198543	Argument	ht		198256	0					
ANR	198544	Identifier	ht		198256	0					
ANR	198545	ReturnType	ZEND_API void ZEND_FASTCALL		198256	1					
ANR	198546	Identifier	zend_array_destroy		198256	2					
ANR	198547	ParameterList	HashTable * ht		198256	3					
ANR	198548	Parameter	HashTable * ht	1277:47:36267:36279	198256	0	True				
ANR	198549	ParameterType	HashTable *		198256	0					
ANR	198550	Identifier	ht		198256	1					
ANR	198551	CFGEntryNode	ENTRY		198256		True				
ANR	198552	CFGExitNode	EXIT		198256		True				
ANR	198553	Symbol	HASH_FLAG_STATIC_KEYS		198256						
ANR	198554	Symbol	HT_DESTROYED		198256						
ANR	198555	Symbol	HASH_FLAG_PACKED		198256						
ANR	198556	Symbol	ht -> pDestructor		198256						
ANR	198557	Symbol	ht -> u		198256						
ANR	198558	Symbol	ht -> arData		198256						
ANR	198559	Symbol	Z_TYPE		198256						
ANR	198560	Symbol	ht -> u . flags		198256						
ANR	198561	Symbol	ht		198256						
ANR	198562	Symbol	UNEXPECTED		198256						
ANR	198563	Symbol	* ht		198256						
ANR	198564	Symbol	IS_NULL		198256						
ANR	198565	Symbol	HASH_FLAG_INITIALIZED		198256						
ANR	198566	Symbol	end		198256						
ANR	198567	Symbol	GC_TYPE_INFO		198256						
ANR	198568	Symbol	GC_WHITE		198256						
ANR	198569	Symbol	GC_REFCOUNT		198256						
ANR	198570	Symbol	ht -> nNumOfElements		198256						
ANR	198571	Symbol	IS_UNDEF		198256						
ANR	198572	Symbol	HT_GET_DATA_ADDR		198256						
ANR	198573	Symbol	p -> val		198256						
ANR	198574	Symbol	p -> key		198256						
ANR	198575	Symbol	ZVAL_PTR_DTOR		198256						
ANR	198576	Symbol	p		198256						
ANR	198577	Symbol	HT_IS_DESTROYING		198256						
ANR	198578	Symbol	* p		198256						
ANR	198579	Symbol	EXPECTED		198256						
ANR	198580	Symbol	ht -> nNumUsed		198256						
ANR	198581	Function	zend_hash_clean	1330:0:37523:39097							
ANR	198582	FunctionDef	zend_hash_clean (HashTable * ht)		198581	0					
ANR	198583	CompoundStatement		1331:0:37582:39097	198581	0					
ANR	198584	IdentifierDeclStatement	"Bucket * p , * end ;"	1332:1:37585:37600	198581	0	True				
ANR	198585	IdentifierDecl	* p		198581	0					
ANR	198586	IdentifierDeclType	Bucket *		198581	0					
ANR	198587	Identifier	p		198581	1					
ANR	198588	IdentifierDecl	* end		198581	1					
ANR	198589	IdentifierDeclType	Bucket *		198581	0					
ANR	198590	Identifier	end		198581	1					
ANR	198591	ExpressionStatement	IS_CONSISTENT ( ht )	1334:1:37604:37621	198581	1	True				
ANR	198592	CallExpression	IS_CONSISTENT ( ht )		198581	0					
ANR	198593	Callee	IS_CONSISTENT		198581	0					
ANR	198594	Identifier	IS_CONSISTENT		198581	0					
ANR	198595	ArgumentList	ht		198581	1					
ANR	198596	Argument	ht		198581	0					
ANR	198597	Identifier	ht		198581	0					
ANR	198598	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	1335:1:37624:37655	198581	2	True				
ANR	198599	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		198581	0					
ANR	198600	Callee	HT_ASSERT		198581	0					
ANR	198601	Identifier	HT_ASSERT		198581	0					
ANR	198602	ArgumentList	GC_REFCOUNT ( ht ) == 1		198581	1					
ANR	198603	Argument	GC_REFCOUNT ( ht ) == 1		198581	0					
ANR	198604	EqualityExpression	GC_REFCOUNT ( ht ) == 1		198581	0		==			
ANR	198605	CallExpression	GC_REFCOUNT ( ht )		198581	0					
ANR	198606	Callee	GC_REFCOUNT		198581	0					
ANR	198607	Identifier	GC_REFCOUNT		198581	0					
ANR	198608	ArgumentList	ht		198581	1					
ANR	198609	Argument	ht		198581	0					
ANR	198610	Identifier	ht		198581	0					
ANR	198611	PrimaryExpression	1		198581	1					
ANR	198612	IfStatement	if ( ht -> nNumUsed )		198581	3					
ANR	198613	Condition	ht -> nNumUsed	1337:5:37663:37674	198581	0	True				
ANR	198614	PtrMemberAccess	ht -> nNumUsed		198581	0					
ANR	198615	Identifier	ht		198581	0					
ANR	198616	Identifier	nNumUsed		198581	1					
ANR	198617	CompoundStatement		7:19:94:94	198581	1					
ANR	198618	ExpressionStatement	p = ht -> arData	1338:2:37681:37695	198581	0	True				
ANR	198619	AssignmentExpression	p = ht -> arData		198581	0		=			
ANR	198620	Identifier	p		198581	0					
ANR	198621	PtrMemberAccess	ht -> arData		198581	1					
ANR	198622	Identifier	ht		198581	0					
ANR	198623	Identifier	arData		198581	1					
ANR	198624	ExpressionStatement	end = p + ht -> nNumUsed	1339:2:37699:37721	198581	1	True				
ANR	198625	AssignmentExpression	end = p + ht -> nNumUsed		198581	0		=			
ANR	198626	Identifier	end		198581	0					
ANR	198627	AdditiveExpression	p + ht -> nNumUsed		198581	1		+			
ANR	198628	Identifier	p		198581	0					
ANR	198629	PtrMemberAccess	ht -> nNumUsed		198581	1					
ANR	198630	Identifier	ht		198581	0					
ANR	198631	Identifier	nNumUsed		198581	1					
ANR	198632	IfStatement	if ( ht -> pDestructor )		198581	2					
ANR	198633	Condition	ht -> pDestructor	1340:6:37729:37743	198581	0	True				
ANR	198634	PtrMemberAccess	ht -> pDestructor		198581	0					
ANR	198635	Identifier	ht		198581	0					
ANR	198636	Identifier	pDestructor		198581	1					
ANR	198637	CompoundStatement		10:23:163:163	198581	1					
ANR	198638	IfStatement	if ( ht -> u . flags & ( HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS ) )		198581	0					
ANR	198639	Condition	ht -> u . flags & ( HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS )	1341:7:37755:37808	198581	0	True				
ANR	198640	BitAndExpression	ht -> u . flags & ( HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS )		198581	0		&			
ANR	198641	MemberAccess	ht -> u . flags		198581	0					
ANR	198642	PtrMemberAccess	ht -> u		198581	0					
ANR	198643	Identifier	ht		198581	0					
ANR	198644	Identifier	u		198581	1					
ANR	198645	Identifier	flags		198581	1					
ANR	198646	InclusiveOrExpression	HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS		198581	1		|			
ANR	198647	Identifier	HASH_FLAG_PACKED		198581	0					
ANR	198648	Identifier	HASH_FLAG_STATIC_KEYS		198581	1					
ANR	198649	CompoundStatement		11:63:228:228	198581	1					
ANR	198650	IfStatement	if ( ht -> nNumUsed == ht -> nNumOfElements )		198581	0					
ANR	198651	Condition	ht -> nNumUsed == ht -> nNumOfElements	1342:8:37821:37854	198581	0	True				
ANR	198652	EqualityExpression	ht -> nNumUsed == ht -> nNumOfElements		198581	0		==			
ANR	198653	PtrMemberAccess	ht -> nNumUsed		198581	0					
ANR	198654	Identifier	ht		198581	0					
ANR	198655	Identifier	nNumUsed		198581	1					
ANR	198656	PtrMemberAccess	ht -> nNumOfElements		198581	1					
ANR	198657	Identifier	ht		198581	0					
ANR	198658	Identifier	nNumOfElements		198581	1					
ANR	198659	CompoundStatement		12:44:274:274	198581	1					
ANR	198660	DoStatement	do		198581	0					
ANR	198661	CompoundStatement		13:8:284:284	198581	0					
ANR	198662	ExpressionStatement	ht -> pDestructor ( & p -> val )	1344:6:37875:37899	198581	0	True				
ANR	198663	CallExpression	ht -> pDestructor ( & p -> val )		198581	0					
ANR	198664	Callee	ht -> pDestructor		198581	0					
ANR	198665	PtrMemberAccess	ht -> pDestructor		198581	0					
ANR	198666	Identifier	ht		198581	0					
ANR	198667	Identifier	pDestructor		198581	1					
ANR	198668	ArgumentList	& p -> val		198581	1					
ANR	198669	Argument	& p -> val		198581	0					
ANR	198670	UnaryOperationExpression	& p -> val		198581	0					
ANR	198671	UnaryOperator	&		198581	0					
ANR	198672	PtrMemberAccess	p -> val		198581	1					
ANR	198673	Identifier	p		198581	0					
ANR	198674	Identifier	val		198581	1					
ANR	198675	Condition	++ p != end	1345:14:37915:37924	198581	1	True				
ANR	198676	EqualityExpression	++ p != end		198581	0		!=			
ANR	198677	UnaryExpression	++ p		198581	0					
ANR	198678	IncDec	++		198581	0					
ANR	198679	Identifier	p		198581	1					
ANR	198680	Identifier	end		198581	1					
ANR	198681	ElseStatement	else		198581	0					
ANR	198682	CompoundStatement		16:11:356:356	198581	0					
ANR	198683	DoStatement	do		198581	0					
ANR	198684	CompoundStatement		17:8:366:366	198581	0					
ANR	198685	IfStatement	if ( EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF ) )		198581	0					
ANR	198686	Condition	EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF )	1348:10:37961:37996	198581	0	True				
ANR	198687	CallExpression	EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF )		198581	0					
ANR	198688	Callee	EXPECTED		198581	0					
ANR	198689	Identifier	EXPECTED		198581	0					
ANR	198690	ArgumentList	Z_TYPE ( p -> val ) != IS_UNDEF		198581	1					
ANR	198691	Argument	Z_TYPE ( p -> val ) != IS_UNDEF		198581	0					
ANR	198692	EqualityExpression	Z_TYPE ( p -> val ) != IS_UNDEF		198581	0		!=			
ANR	198693	CallExpression	Z_TYPE ( p -> val )		198581	0					
ANR	198694	Callee	Z_TYPE		198581	0					
ANR	198695	Identifier	Z_TYPE		198581	0					
ANR	198696	ArgumentList	p -> val		198581	1					
ANR	198697	Argument	p -> val		198581	0					
ANR	198698	PtrMemberAccess	p -> val		198581	0					
ANR	198699	Identifier	p		198581	0					
ANR	198700	Identifier	val		198581	1					
ANR	198701	Identifier	IS_UNDEF		198581	1					
ANR	198702	CompoundStatement		18:48:416:416	198581	1					
ANR	198703	ExpressionStatement	ht -> pDestructor ( & p -> val )	1349:7:38008:38032	198581	0	True				
ANR	198704	CallExpression	ht -> pDestructor ( & p -> val )		198581	0					
ANR	198705	Callee	ht -> pDestructor		198581	0					
ANR	198706	PtrMemberAccess	ht -> pDestructor		198581	0					
ANR	198707	Identifier	ht		198581	0					
ANR	198708	Identifier	pDestructor		198581	1					
ANR	198709	ArgumentList	& p -> val		198581	1					
ANR	198710	Argument	& p -> val		198581	0					
ANR	198711	UnaryOperationExpression	& p -> val		198581	0					
ANR	198712	UnaryOperator	&		198581	0					
ANR	198713	PtrMemberAccess	p -> val		198581	1					
ANR	198714	Identifier	p		198581	0					
ANR	198715	Identifier	val		198581	1					
ANR	198716	Condition	++ p != end	1351:14:38056:38065	198581	1	True				
ANR	198717	EqualityExpression	++ p != end		198581	0		!=			
ANR	198718	UnaryExpression	++ p		198581	0					
ANR	198719	IncDec	++		198581	0					
ANR	198720	Identifier	p		198581	1					
ANR	198721	Identifier	end		198581	1					
ANR	198722	ElseStatement	else		198581	0					
ANR	198723	IfStatement	if ( ht -> nNumUsed == ht -> nNumOfElements )		198581	0					
ANR	198724	Condition	ht -> nNumUsed == ht -> nNumOfElements	1353:14:38089:38122	198581	0	True				
ANR	198725	EqualityExpression	ht -> nNumUsed == ht -> nNumOfElements		198581	0		==			
ANR	198726	PtrMemberAccess	ht -> nNumUsed		198581	0					
ANR	198727	Identifier	ht		198581	0					
ANR	198728	Identifier	nNumUsed		198581	1					
ANR	198729	PtrMemberAccess	ht -> nNumOfElements		198581	1					
ANR	198730	Identifier	ht		198581	0					
ANR	198731	Identifier	nNumOfElements		198581	1					
ANR	198732	CompoundStatement		23:50:542:542	198581	1					
ANR	198733	DoStatement	do		198581	0					
ANR	198734	CompoundStatement		24:7:551:551	198581	0					
ANR	198735	ExpressionStatement	ht -> pDestructor ( & p -> val )	1355:5:38141:38165	198581	0	True				
ANR	198736	CallExpression	ht -> pDestructor ( & p -> val )		198581	0					
ANR	198737	Callee	ht -> pDestructor		198581	0					
ANR	198738	PtrMemberAccess	ht -> pDestructor		198581	0					
ANR	198739	Identifier	ht		198581	0					
ANR	198740	Identifier	pDestructor		198581	1					
ANR	198741	ArgumentList	& p -> val		198581	1					
ANR	198742	Argument	& p -> val		198581	0					
ANR	198743	UnaryOperationExpression	& p -> val		198581	0					
ANR	198744	UnaryOperator	&		198581	0					
ANR	198745	PtrMemberAccess	p -> val		198581	1					
ANR	198746	Identifier	p		198581	0					
ANR	198747	Identifier	val		198581	1					
ANR	198748	IfStatement	if ( EXPECTED ( p -> key ) )		198581	1					
ANR	198749	Condition	EXPECTED ( p -> key )	1356:9:38176:38191	198581	0	True				
ANR	198750	CallExpression	EXPECTED ( p -> key )		198581	0					
ANR	198751	Callee	EXPECTED		198581	0					
ANR	198752	Identifier	EXPECTED		198581	0					
ANR	198753	ArgumentList	p -> key		198581	1					
ANR	198754	Argument	p -> key		198581	0					
ANR	198755	PtrMemberAccess	p -> key		198581	0					
ANR	198756	Identifier	p		198581	0					
ANR	198757	Identifier	key		198581	1					
ANR	198758	CompoundStatement		26:27:611:611	198581	1					
ANR	198759	ExpressionStatement	zend_string_release ( p -> key )	1357:6:38202:38229	198581	0	True				
ANR	198760	CallExpression	zend_string_release ( p -> key )		198581	0					
ANR	198761	Callee	zend_string_release		198581	0					
ANR	198762	Identifier	zend_string_release		198581	0					
ANR	198763	ArgumentList	p -> key		198581	1					
ANR	198764	Argument	p -> key		198581	0					
ANR	198765	PtrMemberAccess	p -> key		198581	0					
ANR	198766	Identifier	p		198581	0					
ANR	198767	Identifier	key		198581	1					
ANR	198768	Condition	++ p != end	1359:13:38251:38260	198581	1	True				
ANR	198769	EqualityExpression	++ p != end		198581	0		!=			
ANR	198770	UnaryExpression	++ p		198581	0					
ANR	198771	IncDec	++		198581	0					
ANR	198772	Identifier	p		198581	1					
ANR	198773	Identifier	end		198581	1					
ANR	198774	ElseStatement	else		198581	0					
ANR	198775	CompoundStatement		30:10:691:691	198581	0					
ANR	198776	DoStatement	do		198581	0					
ANR	198777	CompoundStatement		31:7:700:700	198581	0					
ANR	198778	IfStatement	if ( EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF ) )		198581	0					
ANR	198779	Condition	EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF )	1362:9:38294:38329	198581	0	True				
ANR	198780	CallExpression	EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF )		198581	0					
ANR	198781	Callee	EXPECTED		198581	0					
ANR	198782	Identifier	EXPECTED		198581	0					
ANR	198783	ArgumentList	Z_TYPE ( p -> val ) != IS_UNDEF		198581	1					
ANR	198784	Argument	Z_TYPE ( p -> val ) != IS_UNDEF		198581	0					
ANR	198785	EqualityExpression	Z_TYPE ( p -> val ) != IS_UNDEF		198581	0		!=			
ANR	198786	CallExpression	Z_TYPE ( p -> val )		198581	0					
ANR	198787	Callee	Z_TYPE		198581	0					
ANR	198788	Identifier	Z_TYPE		198581	0					
ANR	198789	ArgumentList	p -> val		198581	1					
ANR	198790	Argument	p -> val		198581	0					
ANR	198791	PtrMemberAccess	p -> val		198581	0					
ANR	198792	Identifier	p		198581	0					
ANR	198793	Identifier	val		198581	1					
ANR	198794	Identifier	IS_UNDEF		198581	1					
ANR	198795	CompoundStatement		32:47:749:749	198581	1					
ANR	198796	ExpressionStatement	ht -> pDestructor ( & p -> val )	1363:6:38340:38364	198581	0	True				
ANR	198797	CallExpression	ht -> pDestructor ( & p -> val )		198581	0					
ANR	198798	Callee	ht -> pDestructor		198581	0					
ANR	198799	PtrMemberAccess	ht -> pDestructor		198581	0					
ANR	198800	Identifier	ht		198581	0					
ANR	198801	Identifier	pDestructor		198581	1					
ANR	198802	ArgumentList	& p -> val		198581	1					
ANR	198803	Argument	& p -> val		198581	0					
ANR	198804	UnaryOperationExpression	& p -> val		198581	0					
ANR	198805	UnaryOperator	&		198581	0					
ANR	198806	PtrMemberAccess	p -> val		198581	1					
ANR	198807	Identifier	p		198581	0					
ANR	198808	Identifier	val		198581	1					
ANR	198809	IfStatement	if ( EXPECTED ( p -> key ) )		198581	1					
ANR	198810	Condition	EXPECTED ( p -> key )	1364:10:38376:38391	198581	0	True				
ANR	198811	CallExpression	EXPECTED ( p -> key )		198581	0					
ANR	198812	Callee	EXPECTED		198581	0					
ANR	198813	Identifier	EXPECTED		198581	0					
ANR	198814	ArgumentList	p -> key		198581	1					
ANR	198815	Argument	p -> key		198581	0					
ANR	198816	PtrMemberAccess	p -> key		198581	0					
ANR	198817	Identifier	p		198581	0					
ANR	198818	Identifier	key		198581	1					
ANR	198819	CompoundStatement		34:28:811:811	198581	1					
ANR	198820	ExpressionStatement	zend_string_release ( p -> key )	1365:7:38403:38430	198581	0	True				
ANR	198821	CallExpression	zend_string_release ( p -> key )		198581	0					
ANR	198822	Callee	zend_string_release		198581	0					
ANR	198823	Identifier	zend_string_release		198581	0					
ANR	198824	ArgumentList	p -> key		198581	1					
ANR	198825	Argument	p -> key		198581	0					
ANR	198826	PtrMemberAccess	p -> key		198581	0					
ANR	198827	Identifier	p		198581	0					
ANR	198828	Identifier	key		198581	1					
ANR	198829	Condition	++ p != end	1368:13:38460:38469	198581	1	True				
ANR	198830	EqualityExpression	++ p != end		198581	0		!=			
ANR	198831	UnaryExpression	++ p		198581	0					
ANR	198832	IncDec	++		198581	0					
ANR	198833	Identifier	p		198581	1					
ANR	198834	Identifier	end		198581	1					
ANR	198835	ElseStatement	else		198581	0					
ANR	198836	CompoundStatement		40:9:904:904	198581	0					
ANR	198837	IfStatement	if ( ! ( ht -> u . flags & ( HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS ) ) )		198581	0					
ANR	198838	Condition	! ( ht -> u . flags & ( HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS ) )	1371:7:38496:38552	198581	0	True				
ANR	198839	UnaryOperationExpression	! ( ht -> u . flags & ( HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS ) )		198581	0					
ANR	198840	UnaryOperator	!		198581	0					
ANR	198841	BitAndExpression	ht -> u . flags & ( HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS )		198581	1		&			
ANR	198842	MemberAccess	ht -> u . flags		198581	0					
ANR	198843	PtrMemberAccess	ht -> u		198581	0					
ANR	198844	Identifier	ht		198581	0					
ANR	198845	Identifier	u		198581	1					
ANR	198846	Identifier	flags		198581	1					
ANR	198847	InclusiveOrExpression	HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS		198581	1		|			
ANR	198848	Identifier	HASH_FLAG_PACKED		198581	0					
ANR	198849	Identifier	HASH_FLAG_STATIC_KEYS		198581	1					
ANR	198850	CompoundStatement		41:66:972:972	198581	1					
ANR	198851	IfStatement	if ( ht -> nNumUsed == ht -> nNumOfElements )		198581	0					
ANR	198852	Condition	ht -> nNumUsed == ht -> nNumOfElements	1372:8:38565:38598	198581	0	True				
ANR	198853	EqualityExpression	ht -> nNumUsed == ht -> nNumOfElements		198581	0		==			
ANR	198854	PtrMemberAccess	ht -> nNumUsed		198581	0					
ANR	198855	Identifier	ht		198581	0					
ANR	198856	Identifier	nNumUsed		198581	1					
ANR	198857	PtrMemberAccess	ht -> nNumOfElements		198581	1					
ANR	198858	Identifier	ht		198581	0					
ANR	198859	Identifier	nNumOfElements		198581	1					
ANR	198860	CompoundStatement		42:44:1018:1018	198581	1					
ANR	198861	DoStatement	do		198581	0					
ANR	198862	CompoundStatement		43:8:1028:1028	198581	0					
ANR	198863	IfStatement	if ( EXPECTED ( p -> key ) )		198581	0					
ANR	198864	Condition	EXPECTED ( p -> key )	1374:10:38623:38638	198581	0	True				
ANR	198865	CallExpression	EXPECTED ( p -> key )		198581	0					
ANR	198866	Callee	EXPECTED		198581	0					
ANR	198867	Identifier	EXPECTED		198581	0					
ANR	198868	ArgumentList	p -> key		198581	1					
ANR	198869	Argument	p -> key		198581	0					
ANR	198870	PtrMemberAccess	p -> key		198581	0					
ANR	198871	Identifier	p		198581	0					
ANR	198872	Identifier	key		198581	1					
ANR	198873	CompoundStatement		44:28:1058:1058	198581	1					
ANR	198874	ExpressionStatement	zend_string_release ( p -> key )	1375:7:38650:38677	198581	0	True				
ANR	198875	CallExpression	zend_string_release ( p -> key )		198581	0					
ANR	198876	Callee	zend_string_release		198581	0					
ANR	198877	Identifier	zend_string_release		198581	0					
ANR	198878	ArgumentList	p -> key		198581	1					
ANR	198879	Argument	p -> key		198581	0					
ANR	198880	PtrMemberAccess	p -> key		198581	0					
ANR	198881	Identifier	p		198581	0					
ANR	198882	Identifier	key		198581	1					
ANR	198883	Condition	++ p != end	1377:14:38701:38710	198581	1	True				
ANR	198884	EqualityExpression	++ p != end		198581	0		!=			
ANR	198885	UnaryExpression	++ p		198581	0					
ANR	198886	IncDec	++		198581	0					
ANR	198887	Identifier	p		198581	1					
ANR	198888	Identifier	end		198581	1					
ANR	198889	ElseStatement	else		198581	0					
ANR	198890	CompoundStatement		48:11:1142:1142	198581	0					
ANR	198891	DoStatement	do		198581	0					
ANR	198892	CompoundStatement		49:8:1152:1152	198581	0					
ANR	198893	IfStatement	if ( EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF ) )		198581	0					
ANR	198894	Condition	EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF )	1380:10:38747:38782	198581	0	True				
ANR	198895	CallExpression	EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF )		198581	0					
ANR	198896	Callee	EXPECTED		198581	0					
ANR	198897	Identifier	EXPECTED		198581	0					
ANR	198898	ArgumentList	Z_TYPE ( p -> val ) != IS_UNDEF		198581	1					
ANR	198899	Argument	Z_TYPE ( p -> val ) != IS_UNDEF		198581	0					
ANR	198900	EqualityExpression	Z_TYPE ( p -> val ) != IS_UNDEF		198581	0		!=			
ANR	198901	CallExpression	Z_TYPE ( p -> val )		198581	0					
ANR	198902	Callee	Z_TYPE		198581	0					
ANR	198903	Identifier	Z_TYPE		198581	0					
ANR	198904	ArgumentList	p -> val		198581	1					
ANR	198905	Argument	p -> val		198581	0					
ANR	198906	PtrMemberAccess	p -> val		198581	0					
ANR	198907	Identifier	p		198581	0					
ANR	198908	Identifier	val		198581	1					
ANR	198909	Identifier	IS_UNDEF		198581	1					
ANR	198910	CompoundStatement		50:48:1202:1202	198581	1					
ANR	198911	IfStatement	if ( EXPECTED ( p -> key ) )		198581	0					
ANR	198912	Condition	EXPECTED ( p -> key )	1381:11:38798:38813	198581	0	True				
ANR	198913	CallExpression	EXPECTED ( p -> key )		198581	0					
ANR	198914	Callee	EXPECTED		198581	0					
ANR	198915	Identifier	EXPECTED		198581	0					
ANR	198916	ArgumentList	p -> key		198581	1					
ANR	198917	Argument	p -> key		198581	0					
ANR	198918	PtrMemberAccess	p -> key		198581	0					
ANR	198919	Identifier	p		198581	0					
ANR	198920	Identifier	key		198581	1					
ANR	198921	CompoundStatement		51:29:1233:1233	198581	1					
ANR	198922	ExpressionStatement	zend_string_release ( p -> key )	1382:8:38826:38853	198581	0	True				
ANR	198923	CallExpression	zend_string_release ( p -> key )		198581	0					
ANR	198924	Callee	zend_string_release		198581	0					
ANR	198925	Identifier	zend_string_release		198581	0					
ANR	198926	ArgumentList	p -> key		198581	1					
ANR	198927	Argument	p -> key		198581	0					
ANR	198928	PtrMemberAccess	p -> key		198581	0					
ANR	198929	Identifier	p		198581	0					
ANR	198930	Identifier	key		198581	1					
ANR	198931	Condition	++ p != end	1385:14:38886:38895	198581	1	True				
ANR	198932	EqualityExpression	++ p != end		198581	0		!=			
ANR	198933	UnaryExpression	++ p		198581	0					
ANR	198934	IncDec	++		198581	0					
ANR	198935	Identifier	p		198581	1					
ANR	198936	Identifier	end		198581	1					
ANR	198937	IfStatement	if ( ! ( ht -> u . flags & HASH_FLAG_PACKED ) )		198581	3					
ANR	198938	Condition	! ( ht -> u . flags & HASH_FLAG_PACKED )	1389:6:38920:38952	198581	0	True				
ANR	198939	UnaryOperationExpression	! ( ht -> u . flags & HASH_FLAG_PACKED )		198581	0					
ANR	198940	UnaryOperator	!		198581	0					
ANR	198941	BitAndExpression	ht -> u . flags & HASH_FLAG_PACKED		198581	1		&			
ANR	198942	MemberAccess	ht -> u . flags		198581	0					
ANR	198943	PtrMemberAccess	ht -> u		198581	0					
ANR	198944	Identifier	ht		198581	0					
ANR	198945	Identifier	u		198581	1					
ANR	198946	Identifier	flags		198581	1					
ANR	198947	Identifier	HASH_FLAG_PACKED		198581	1					
ANR	198948	CompoundStatement		59:41:1372:1372	198581	1					
ANR	198949	ExpressionStatement	HT_HASH_RESET ( ht )	1390:3:38960:38977	198581	0	True				
ANR	198950	CallExpression	HT_HASH_RESET ( ht )		198581	0					
ANR	198951	Callee	HT_HASH_RESET		198581	0					
ANR	198952	Identifier	HT_HASH_RESET		198581	0					
ANR	198953	ArgumentList	ht		198581	1					
ANR	198954	Argument	ht		198581	0					
ANR	198955	Identifier	ht		198581	0					
ANR	198956	ExpressionStatement	ht -> nNumUsed = 0	1393:1:38987:39003	198581	4	True				
ANR	198957	AssignmentExpression	ht -> nNumUsed = 0		198581	0		=			
ANR	198958	PtrMemberAccess	ht -> nNumUsed		198581	0					
ANR	198959	Identifier	ht		198581	0					
ANR	198960	Identifier	nNumUsed		198581	1					
ANR	198961	PrimaryExpression	0		198581	1					
ANR	198962	ExpressionStatement	ht -> nNumOfElements = 0	1394:1:39006:39028	198581	5	True				
ANR	198963	AssignmentExpression	ht -> nNumOfElements = 0		198581	0		=			
ANR	198964	PtrMemberAccess	ht -> nNumOfElements		198581	0					
ANR	198965	Identifier	ht		198581	0					
ANR	198966	Identifier	nNumOfElements		198581	1					
ANR	198967	PrimaryExpression	0		198581	1					
ANR	198968	ExpressionStatement	ht -> nNextFreeElement = 0	1395:1:39031:39055	198581	6	True				
ANR	198969	AssignmentExpression	ht -> nNextFreeElement = 0		198581	0		=			
ANR	198970	PtrMemberAccess	ht -> nNextFreeElement		198581	0					
ANR	198971	Identifier	ht		198581	0					
ANR	198972	Identifier	nNextFreeElement		198581	1					
ANR	198973	PrimaryExpression	0		198581	1					
ANR	198974	ExpressionStatement	ht -> nInternalPointer = HT_INVALID_IDX	1396:1:39058:39095	198581	7	True				
ANR	198975	AssignmentExpression	ht -> nInternalPointer = HT_INVALID_IDX		198581	0		=			
ANR	198976	PtrMemberAccess	ht -> nInternalPointer		198581	0					
ANR	198977	Identifier	ht		198581	0					
ANR	198978	Identifier	nInternalPointer		198581	1					
ANR	198979	Identifier	HT_INVALID_IDX		198581	1					
ANR	198980	ReturnType	ZEND_API void ZEND_FASTCALL		198581	1					
ANR	198981	Identifier	zend_hash_clean		198581	2					
ANR	198982	ParameterList	HashTable * ht		198581	3					
ANR	198983	Parameter	HashTable * ht	1330:44:37567:37579	198581	0	True				
ANR	198984	ParameterType	HashTable *		198581	0					
ANR	198985	Identifier	ht		198581	1					
ANR	198986	CFGEntryNode	ENTRY		198581		True				
ANR	198987	CFGExitNode	EXIT		198581		True				
ANR	198988	Symbol	ht -> nInternalPointer		198581						
ANR	198989	Symbol	HT_INVALID_IDX		198581						
ANR	198990	Symbol	HASH_FLAG_STATIC_KEYS		198581						
ANR	198991	Symbol	HASH_FLAG_PACKED		198581						
ANR	198992	Symbol	ht -> pDestructor		198581						
ANR	198993	Symbol	ht -> u		198581						
ANR	198994	Symbol	ht -> arData		198581						
ANR	198995	Symbol	Z_TYPE		198581						
ANR	198996	Symbol	ht -> nNextFreeElement		198581						
ANR	198997	Symbol	ht -> u . flags		198581						
ANR	198998	Symbol	ht		198581						
ANR	198999	Symbol	p -> val		198581						
ANR	199000	Symbol	p -> key		198581						
ANR	199001	Symbol	p		198581						
ANR	199002	Symbol	* ht		198581						
ANR	199003	Symbol	end		198581						
ANR	199004	Symbol	* p		198581						
ANR	199005	Symbol	GC_REFCOUNT		198581						
ANR	199006	Symbol	EXPECTED		198581						
ANR	199007	Symbol	ht -> nNumUsed		198581						
ANR	199008	Symbol	ht -> nNumOfElements		198581						
ANR	199009	Symbol	IS_UNDEF		198581						
ANR	199010	Symbol	& p -> val		198581						
ANR	199011	Function	zend_symtable_clean	1399:0:39100:39915							
ANR	199012	FunctionDef	zend_symtable_clean (HashTable * ht)		199011	0					
ANR	199013	CompoundStatement		1400:0:39163:39915	199011	0					
ANR	199014	IdentifierDeclStatement	"Bucket * p , * end ;"	1401:1:39166:39181	199011	0	True				
ANR	199015	IdentifierDecl	* p		199011	0					
ANR	199016	IdentifierDeclType	Bucket *		199011	0					
ANR	199017	Identifier	p		199011	1					
ANR	199018	IdentifierDecl	* end		199011	1					
ANR	199019	IdentifierDeclType	Bucket *		199011	0					
ANR	199020	Identifier	end		199011	1					
ANR	199021	ExpressionStatement	IS_CONSISTENT ( ht )	1403:1:39185:39202	199011	1	True				
ANR	199022	CallExpression	IS_CONSISTENT ( ht )		199011	0					
ANR	199023	Callee	IS_CONSISTENT		199011	0					
ANR	199024	Identifier	IS_CONSISTENT		199011	0					
ANR	199025	ArgumentList	ht		199011	1					
ANR	199026	Argument	ht		199011	0					
ANR	199027	Identifier	ht		199011	0					
ANR	199028	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	1404:1:39205:39236	199011	2	True				
ANR	199029	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		199011	0					
ANR	199030	Callee	HT_ASSERT		199011	0					
ANR	199031	Identifier	HT_ASSERT		199011	0					
ANR	199032	ArgumentList	GC_REFCOUNT ( ht ) == 1		199011	1					
ANR	199033	Argument	GC_REFCOUNT ( ht ) == 1		199011	0					
ANR	199034	EqualityExpression	GC_REFCOUNT ( ht ) == 1		199011	0		==			
ANR	199035	CallExpression	GC_REFCOUNT ( ht )		199011	0					
ANR	199036	Callee	GC_REFCOUNT		199011	0					
ANR	199037	Identifier	GC_REFCOUNT		199011	0					
ANR	199038	ArgumentList	ht		199011	1					
ANR	199039	Argument	ht		199011	0					
ANR	199040	Identifier	ht		199011	0					
ANR	199041	PrimaryExpression	1		199011	1					
ANR	199042	IfStatement	if ( ht -> nNumUsed )		199011	3					
ANR	199043	Condition	ht -> nNumUsed	1406:5:39244:39255	199011	0	True				
ANR	199044	PtrMemberAccess	ht -> nNumUsed		199011	0					
ANR	199045	Identifier	ht		199011	0					
ANR	199046	Identifier	nNumUsed		199011	1					
ANR	199047	CompoundStatement		7:19:94:94	199011	1					
ANR	199048	ExpressionStatement	p = ht -> arData	1407:2:39262:39276	199011	0	True				
ANR	199049	AssignmentExpression	p = ht -> arData		199011	0		=			
ANR	199050	Identifier	p		199011	0					
ANR	199051	PtrMemberAccess	ht -> arData		199011	1					
ANR	199052	Identifier	ht		199011	0					
ANR	199053	Identifier	arData		199011	1					
ANR	199054	ExpressionStatement	end = p + ht -> nNumUsed	1408:2:39280:39302	199011	1	True				
ANR	199055	AssignmentExpression	end = p + ht -> nNumUsed		199011	0		=			
ANR	199056	Identifier	end		199011	0					
ANR	199057	AdditiveExpression	p + ht -> nNumUsed		199011	1		+			
ANR	199058	Identifier	p		199011	0					
ANR	199059	PtrMemberAccess	ht -> nNumUsed		199011	1					
ANR	199060	Identifier	ht		199011	0					
ANR	199061	Identifier	nNumUsed		199011	1					
ANR	199062	IfStatement	if ( ht -> u . flags & HASH_FLAG_STATIC_KEYS )		199011	2					
ANR	199063	Condition	ht -> u . flags & HASH_FLAG_STATIC_KEYS	1409:6:39310:39344	199011	0	True				
ANR	199064	BitAndExpression	ht -> u . flags & HASH_FLAG_STATIC_KEYS		199011	0		&			
ANR	199065	MemberAccess	ht -> u . flags		199011	0					
ANR	199066	PtrMemberAccess	ht -> u		199011	0					
ANR	199067	Identifier	ht		199011	0					
ANR	199068	Identifier	u		199011	1					
ANR	199069	Identifier	flags		199011	1					
ANR	199070	Identifier	HASH_FLAG_STATIC_KEYS		199011	1					
ANR	199071	CompoundStatement		10:43:183:183	199011	1					
ANR	199072	DoStatement	do		199011	0					
ANR	199073	CompoundStatement		11:6:191:191	199011	0					
ANR	199074	Statement	i_zval_ptr_dtor	1411:4:39361:39375	199011	0	True				
ANR	199075	Statement	(	1411:19:39376:39376	199011	1	True				
ANR	199076	Statement	&	1411:20:39377:39377	199011	2	True				
ANR	199077	Statement	p	1411:21:39378:39378	199011	3	True				
ANR	199078	Statement	->	1411:22:39379:39380	199011	4	True				
ANR	199079	Statement	val	1411:24:39381:39383	199011	5	True				
ANR	199080	Statement	ZEND_FILE_LINE_CC	1411:28:39385:39401	199011	6	True				
ANR	199081	Statement	)	1411:45:39402:39402	199011	7	True				
ANR	199082	ExpressionStatement		1411:46:39403:39403	199011	8	True				
ANR	199083	Condition	++ p != end	1412:12:39417:39426	199011	1	True				
ANR	199084	EqualityExpression	++ p != end		199011	0		!=			
ANR	199085	UnaryExpression	++ p		199011	0					
ANR	199086	IncDec	++		199011	0					
ANR	199087	Identifier	p		199011	1					
ANR	199088	Identifier	end		199011	1					
ANR	199089	ElseStatement	else		199011	0					
ANR	199090	IfStatement	if ( ht -> nNumUsed == ht -> nNumOfElements )		199011	0					
ANR	199091	Condition	ht -> nNumUsed == ht -> nNumOfElements	1413:13:39443:39476	199011	0	True				
ANR	199092	EqualityExpression	ht -> nNumUsed == ht -> nNumOfElements		199011	0		==			
ANR	199093	PtrMemberAccess	ht -> nNumUsed		199011	0					
ANR	199094	Identifier	ht		199011	0					
ANR	199095	Identifier	nNumUsed		199011	1					
ANR	199096	PtrMemberAccess	ht -> nNumOfElements		199011	1					
ANR	199097	Identifier	ht		199011	0					
ANR	199098	Identifier	nNumOfElements		199011	1					
ANR	199099	CompoundStatement		14:49:315:315	199011	1					
ANR	199100	DoStatement	do		199011	0					
ANR	199101	CompoundStatement		15:6:323:323	199011	0					
ANR	199102	Statement	i_zval_ptr_dtor	1415:4:39493:39507	199011	0	True				
ANR	199103	Statement	(	1415:19:39508:39508	199011	1	True				
ANR	199104	Statement	&	1415:20:39509:39509	199011	2	True				
ANR	199105	Statement	p	1415:21:39510:39510	199011	3	True				
ANR	199106	Statement	->	1415:22:39511:39512	199011	4	True				
ANR	199107	Statement	val	1415:24:39513:39515	199011	5	True				
ANR	199108	Statement	ZEND_FILE_LINE_CC	1415:28:39517:39533	199011	6	True				
ANR	199109	Statement	)	1415:45:39534:39534	199011	7	True				
ANR	199110	ExpressionStatement		1415:46:39535:39535	199011	8	True				
ANR	199111	ExpressionStatement	zend_string_release ( p -> key )	1416:4:39541:39568	199011	9	True				
ANR	199112	CallExpression	zend_string_release ( p -> key )		199011	0					
ANR	199113	Callee	zend_string_release		199011	0					
ANR	199114	Identifier	zend_string_release		199011	0					
ANR	199115	ArgumentList	p -> key		199011	1					
ANR	199116	Argument	p -> key		199011	0					
ANR	199117	PtrMemberAccess	p -> key		199011	0					
ANR	199118	Identifier	p		199011	0					
ANR	199119	Identifier	key		199011	1					
ANR	199120	Condition	++ p != end	1417:12:39582:39591	199011	1	True				
ANR	199121	EqualityExpression	++ p != end		199011	0		!=			
ANR	199122	UnaryExpression	++ p		199011	0					
ANR	199123	IncDec	++		199011	0					
ANR	199124	Identifier	p		199011	1					
ANR	199125	Identifier	end		199011	1					
ANR	199126	ElseStatement	else		199011	0					
ANR	199127	CompoundStatement		19:9:440:440	199011	0					
ANR	199128	DoStatement	do		199011	0					
ANR	199129	CompoundStatement		20:6:448:448	199011	0					
ANR	199130	IfStatement	if ( EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF ) )		199011	0					
ANR	199131	Condition	EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF )	1420:8:39622:39657	199011	0	True				
ANR	199132	CallExpression	EXPECTED ( Z_TYPE ( p -> val ) != IS_UNDEF )		199011	0					
ANR	199133	Callee	EXPECTED		199011	0					
ANR	199134	Identifier	EXPECTED		199011	0					
ANR	199135	ArgumentList	Z_TYPE ( p -> val ) != IS_UNDEF		199011	1					
ANR	199136	Argument	Z_TYPE ( p -> val ) != IS_UNDEF		199011	0					
ANR	199137	EqualityExpression	Z_TYPE ( p -> val ) != IS_UNDEF		199011	0		!=			
ANR	199138	CallExpression	Z_TYPE ( p -> val )		199011	0					
ANR	199139	Callee	Z_TYPE		199011	0					
ANR	199140	Identifier	Z_TYPE		199011	0					
ANR	199141	ArgumentList	p -> val		199011	1					
ANR	199142	Argument	p -> val		199011	0					
ANR	199143	PtrMemberAccess	p -> val		199011	0					
ANR	199144	Identifier	p		199011	0					
ANR	199145	Identifier	val		199011	1					
ANR	199146	Identifier	IS_UNDEF		199011	1					
ANR	199147	CompoundStatement		21:46:496:496	199011	1					
ANR	199148	Statement	i_zval_ptr_dtor	1421:5:39667:39681	199011	0	True				
ANR	199149	Statement	(	1421:20:39682:39682	199011	1	True				
ANR	199150	Statement	&	1421:21:39683:39683	199011	2	True				
ANR	199151	Statement	p	1421:22:39684:39684	199011	3	True				
ANR	199152	Statement	->	1421:23:39685:39686	199011	4	True				
ANR	199153	Statement	val	1421:25:39687:39689	199011	5	True				
ANR	199154	Statement	ZEND_FILE_LINE_CC	1421:29:39691:39707	199011	6	True				
ANR	199155	Statement	)	1421:46:39708:39708	199011	7	True				
ANR	199156	ExpressionStatement		1421:47:39709:39709	199011	8	True				
ANR	199157	ExpressionStatement	zend_string_release ( p -> key )	1422:5:39716:39743	199011	9	True				
ANR	199158	CallExpression	zend_string_release ( p -> key )		199011	0					
ANR	199159	Callee	zend_string_release		199011	0					
ANR	199160	Identifier	zend_string_release		199011	0					
ANR	199161	ArgumentList	p -> key		199011	1					
ANR	199162	Argument	p -> key		199011	0					
ANR	199163	PtrMemberAccess	p -> key		199011	0					
ANR	199164	Identifier	p		199011	0					
ANR	199165	Identifier	key		199011	1					
ANR	199166	Condition	++ p != end	1424:12:39763:39772	199011	1	True				
ANR	199167	EqualityExpression	++ p != end		199011	0		!=			
ANR	199168	UnaryExpression	++ p		199011	0					
ANR	199169	IncDec	++		199011	0					
ANR	199170	Identifier	p		199011	1					
ANR	199171	Identifier	end		199011	1					
ANR	199172	ExpressionStatement	HT_HASH_RESET ( ht )	1426:2:39782:39799	199011	3	True				
ANR	199173	CallExpression	HT_HASH_RESET ( ht )		199011	0					
ANR	199174	Callee	HT_HASH_RESET		199011	0					
ANR	199175	Identifier	HT_HASH_RESET		199011	0					
ANR	199176	ArgumentList	ht		199011	1					
ANR	199177	Argument	ht		199011	0					
ANR	199178	Identifier	ht		199011	0					
ANR	199179	ExpressionStatement	ht -> nNumUsed = 0	1428:1:39805:39821	199011	4	True				
ANR	199180	AssignmentExpression	ht -> nNumUsed = 0		199011	0		=			
ANR	199181	PtrMemberAccess	ht -> nNumUsed		199011	0					
ANR	199182	Identifier	ht		199011	0					
ANR	199183	Identifier	nNumUsed		199011	1					
ANR	199184	PrimaryExpression	0		199011	1					
ANR	199185	ExpressionStatement	ht -> nNumOfElements = 0	1429:1:39824:39846	199011	5	True				
ANR	199186	AssignmentExpression	ht -> nNumOfElements = 0		199011	0		=			
ANR	199187	PtrMemberAccess	ht -> nNumOfElements		199011	0					
ANR	199188	Identifier	ht		199011	0					
ANR	199189	Identifier	nNumOfElements		199011	1					
ANR	199190	PrimaryExpression	0		199011	1					
ANR	199191	ExpressionStatement	ht -> nNextFreeElement = 0	1430:1:39849:39873	199011	6	True				
ANR	199192	AssignmentExpression	ht -> nNextFreeElement = 0		199011	0		=			
ANR	199193	PtrMemberAccess	ht -> nNextFreeElement		199011	0					
ANR	199194	Identifier	ht		199011	0					
ANR	199195	Identifier	nNextFreeElement		199011	1					
ANR	199196	PrimaryExpression	0		199011	1					
ANR	199197	ExpressionStatement	ht -> nInternalPointer = HT_INVALID_IDX	1431:1:39876:39913	199011	7	True				
ANR	199198	AssignmentExpression	ht -> nInternalPointer = HT_INVALID_IDX		199011	0		=			
ANR	199199	PtrMemberAccess	ht -> nInternalPointer		199011	0					
ANR	199200	Identifier	ht		199011	0					
ANR	199201	Identifier	nInternalPointer		199011	1					
ANR	199202	Identifier	HT_INVALID_IDX		199011	1					
ANR	199203	ReturnType	ZEND_API void ZEND_FASTCALL		199011	1					
ANR	199204	Identifier	zend_symtable_clean		199011	2					
ANR	199205	ParameterList	HashTable * ht		199011	3					
ANR	199206	Parameter	HashTable * ht	1399:48:39148:39160	199011	0	True				
ANR	199207	ParameterType	HashTable *		199011	0					
ANR	199208	Identifier	ht		199011	1					
ANR	199209	CFGEntryNode	ENTRY		199011		True				
ANR	199210	CFGExitNode	EXIT		199011		True				
ANR	199211	Symbol	ht -> nInternalPointer		199011						
ANR	199212	Symbol	HT_INVALID_IDX		199011						
ANR	199213	Symbol	HASH_FLAG_STATIC_KEYS		199011						
ANR	199214	Symbol	ht -> u		199011						
ANR	199215	Symbol	ht -> arData		199011						
ANR	199216	Symbol	Z_TYPE		199011						
ANR	199217	Symbol	ht -> nNextFreeElement		199011						
ANR	199218	Symbol	ht -> u . flags		199011						
ANR	199219	Symbol	ht		199011						
ANR	199220	Symbol	p -> val		199011						
ANR	199221	Symbol	p -> key		199011						
ANR	199222	Symbol	p		199011						
ANR	199223	Symbol	* ht		199011						
ANR	199224	Symbol	end		199011						
ANR	199225	Symbol	* p		199011						
ANR	199226	Symbol	GC_REFCOUNT		199011						
ANR	199227	Symbol	EXPECTED		199011						
ANR	199228	Symbol	ht -> nNumUsed		199011						
ANR	199229	Symbol	ht -> nNumOfElements		199011						
ANR	199230	Symbol	IS_UNDEF		199011						
ANR	199231	Function	zend_hash_graceful_destroy	1434:0:39918:40396							
ANR	199232	FunctionDef	zend_hash_graceful_destroy (HashTable * ht)		199231	0					
ANR	199233	CompoundStatement		1435:0:39988:40396	199231	0					
ANR	199234	IdentifierDeclStatement	uint32_t idx ;	1436:1:39991:40003	199231	0	True				
ANR	199235	IdentifierDecl	idx		199231	0					
ANR	199236	IdentifierDeclType	uint32_t		199231	0					
ANR	199237	Identifier	idx		199231	1					
ANR	199238	IdentifierDeclStatement	Bucket * p ;	1437:1:40006:40015	199231	1	True				
ANR	199239	IdentifierDecl	* p		199231	0					
ANR	199240	IdentifierDeclType	Bucket *		199231	0					
ANR	199241	Identifier	p		199231	1					
ANR	199242	ExpressionStatement	IS_CONSISTENT ( ht )	1439:1:40019:40036	199231	2	True				
ANR	199243	CallExpression	IS_CONSISTENT ( ht )		199231	0					
ANR	199244	Callee	IS_CONSISTENT		199231	0					
ANR	199245	Identifier	IS_CONSISTENT		199231	0					
ANR	199246	ArgumentList	ht		199231	1					
ANR	199247	Argument	ht		199231	0					
ANR	199248	Identifier	ht		199231	0					
ANR	199249	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	1440:1:40039:40070	199231	3	True				
ANR	199250	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		199231	0					
ANR	199251	Callee	HT_ASSERT		199231	0					
ANR	199252	Identifier	HT_ASSERT		199231	0					
ANR	199253	ArgumentList	GC_REFCOUNT ( ht ) == 1		199231	1					
ANR	199254	Argument	GC_REFCOUNT ( ht ) == 1		199231	0					
ANR	199255	EqualityExpression	GC_REFCOUNT ( ht ) == 1		199231	0		==			
ANR	199256	CallExpression	GC_REFCOUNT ( ht )		199231	0					
ANR	199257	Callee	GC_REFCOUNT		199231	0					
ANR	199258	Identifier	GC_REFCOUNT		199231	0					
ANR	199259	ArgumentList	ht		199231	1					
ANR	199260	Argument	ht		199231	0					
ANR	199261	Identifier	ht		199231	0					
ANR	199262	PrimaryExpression	1		199231	1					
ANR	199263	ExpressionStatement	p = ht -> arData	1442:1:40074:40088	199231	4	True				
ANR	199264	AssignmentExpression	p = ht -> arData		199231	0		=			
ANR	199265	Identifier	p		199231	0					
ANR	199266	PtrMemberAccess	ht -> arData		199231	1					
ANR	199267	Identifier	ht		199231	0					
ANR	199268	Identifier	arData		199231	1					
ANR	199269	ForStatement	"for ( idx = 0 ; idx < ht -> nNumUsed ; idx ++ , p ++ )"		199231	5					
ANR	199270	ForInit	idx = 0 ;	1443:6:40096:40103	199231	0	True				
ANR	199271	AssignmentExpression	idx = 0		199231	0		=			
ANR	199272	Identifier	idx		199231	0					
ANR	199273	PrimaryExpression	0		199231	1					
ANR	199274	Condition	idx < ht -> nNumUsed	1443:15:40105:40122	199231	1	True				
ANR	199275	RelationalExpression	idx < ht -> nNumUsed		199231	0		<			
ANR	199276	Identifier	idx		199231	0					
ANR	199277	PtrMemberAccess	ht -> nNumUsed		199231	1					
ANR	199278	Identifier	ht		199231	0					
ANR	199279	Identifier	nNumUsed		199231	1					
ANR	199280	Expression	"idx ++ , p ++"	1443:35:40125:40134	199231	2	True				
ANR	199281	PostIncDecOperationExpression	idx ++		199231	0					
ANR	199282	Identifier	idx		199231	0					
ANR	199283	IncDec	++		199231	1					
ANR	199284	PostIncDecOperationExpression	p ++		199231	1					
ANR	199285	Identifier	p		199231	0					
ANR	199286	IncDec	++		199231	1					
ANR	199287	CompoundStatement		9:47:148:148	199231	3					
ANR	199288	IfStatement	if ( UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF ) )		199231	0					
ANR	199289	Condition	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )	1444:6:40145:40182	199231	0	True				
ANR	199290	CallExpression	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )		199231	0					
ANR	199291	Callee	UNEXPECTED		199231	0					
ANR	199292	Identifier	UNEXPECTED		199231	0					
ANR	199293	ArgumentList	Z_TYPE ( p -> val ) == IS_UNDEF		199231	1					
ANR	199294	Argument	Z_TYPE ( p -> val ) == IS_UNDEF		199231	0					
ANR	199295	EqualityExpression	Z_TYPE ( p -> val ) == IS_UNDEF		199231	0		==			
ANR	199296	CallExpression	Z_TYPE ( p -> val )		199231	0					
ANR	199297	Callee	Z_TYPE		199231	0					
ANR	199298	Identifier	Z_TYPE		199231	0					
ANR	199299	ArgumentList	p -> val		199231	1					
ANR	199300	Argument	p -> val		199231	0					
ANR	199301	PtrMemberAccess	p -> val		199231	0					
ANR	199302	Identifier	p		199231	0					
ANR	199303	Identifier	val		199231	1					
ANR	199304	Identifier	IS_UNDEF		199231	1					
ANR	199305	ContinueStatement	continue ;	1444:46:40185:40193	199231	1	True				
ANR	199306	ExpressionStatement	"_zend_hash_del_el ( ht , HT_IDX_TO_HASH ( idx ) , p )"	1445:2:40197:40242	199231	1	True				
ANR	199307	CallExpression	"_zend_hash_del_el ( ht , HT_IDX_TO_HASH ( idx ) , p )"		199231	0					
ANR	199308	Callee	_zend_hash_del_el		199231	0					
ANR	199309	Identifier	_zend_hash_del_el		199231	0					
ANR	199310	ArgumentList	ht		199231	1					
ANR	199311	Argument	ht		199231	0					
ANR	199312	Identifier	ht		199231	0					
ANR	199313	Argument	HT_IDX_TO_HASH ( idx )		199231	1					
ANR	199314	CallExpression	HT_IDX_TO_HASH ( idx )		199231	0					
ANR	199315	Callee	HT_IDX_TO_HASH		199231	0					
ANR	199316	Identifier	HT_IDX_TO_HASH		199231	0					
ANR	199317	ArgumentList	idx		199231	1					
ANR	199318	Argument	idx		199231	0					
ANR	199319	Identifier	idx		199231	0					
ANR	199320	Argument	p		199231	2					
ANR	199321	Identifier	p		199231	0					
ANR	199322	IfStatement	if ( ht -> u . flags & HASH_FLAG_INITIALIZED )		199231	6					
ANR	199323	Condition	ht -> u . flags & HASH_FLAG_INITIALIZED	1447:5:40252:40286	199231	0	True				
ANR	199324	BitAndExpression	ht -> u . flags & HASH_FLAG_INITIALIZED		199231	0		&			
ANR	199325	MemberAccess	ht -> u . flags		199231	0					
ANR	199326	PtrMemberAccess	ht -> u		199231	0					
ANR	199327	Identifier	ht		199231	0					
ANR	199328	Identifier	u		199231	1					
ANR	199329	Identifier	flags		199231	1					
ANR	199330	Identifier	HASH_FLAG_INITIALIZED		199231	1					
ANR	199331	CompoundStatement		13:42:300:300	199231	1					
ANR	199332	ExpressionStatement	"pefree ( HT_GET_DATA_ADDR ( ht ) , ht -> u . flags & HASH_FLAG_PERSISTENT )"	1448:2:40293:40357	199231	0	True				
ANR	199333	CallExpression	"pefree ( HT_GET_DATA_ADDR ( ht ) , ht -> u . flags & HASH_FLAG_PERSISTENT )"		199231	0					
ANR	199334	Callee	pefree		199231	0					
ANR	199335	Identifier	pefree		199231	0					
ANR	199336	ArgumentList	HT_GET_DATA_ADDR ( ht )		199231	1					
ANR	199337	Argument	HT_GET_DATA_ADDR ( ht )		199231	0					
ANR	199338	CallExpression	HT_GET_DATA_ADDR ( ht )		199231	0					
ANR	199339	Callee	HT_GET_DATA_ADDR		199231	0					
ANR	199340	Identifier	HT_GET_DATA_ADDR		199231	0					
ANR	199341	ArgumentList	ht		199231	1					
ANR	199342	Argument	ht		199231	0					
ANR	199343	Identifier	ht		199231	0					
ANR	199344	Argument	ht -> u . flags & HASH_FLAG_PERSISTENT		199231	1					
ANR	199345	BitAndExpression	ht -> u . flags & HASH_FLAG_PERSISTENT		199231	0		&			
ANR	199346	MemberAccess	ht -> u . flags		199231	0					
ANR	199347	PtrMemberAccess	ht -> u		199231	0					
ANR	199348	Identifier	ht		199231	0					
ANR	199349	Identifier	u		199231	1					
ANR	199350	Identifier	flags		199231	1					
ANR	199351	Identifier	HASH_FLAG_PERSISTENT		199231	1					
ANR	199352	ExpressionStatement	SET_INCONSISTENT ( HT_DESTROYED )	1451:1:40364:40394	199231	7	True				
ANR	199353	CallExpression	SET_INCONSISTENT ( HT_DESTROYED )		199231	0					
ANR	199354	Callee	SET_INCONSISTENT		199231	0					
ANR	199355	Identifier	SET_INCONSISTENT		199231	0					
ANR	199356	ArgumentList	HT_DESTROYED		199231	1					
ANR	199357	Argument	HT_DESTROYED		199231	0					
ANR	199358	Identifier	HT_DESTROYED		199231	0					
ANR	199359	ReturnType	ZEND_API void ZEND_FASTCALL		199231	1					
ANR	199360	Identifier	zend_hash_graceful_destroy		199231	2					
ANR	199361	ParameterList	HashTable * ht		199231	3					
ANR	199362	Parameter	HashTable * ht	1434:55:39973:39985	199231	0	True				
ANR	199363	ParameterType	HashTable *		199231	0					
ANR	199364	Identifier	ht		199231	1					
ANR	199365	CFGEntryNode	ENTRY		199231		True				
ANR	199366	CFGExitNode	EXIT		199231		True				
ANR	199367	Symbol	HT_DESTROYED		199231						
ANR	199368	Symbol	ht -> u		199231						
ANR	199369	Symbol	ht -> arData		199231						
ANR	199370	Symbol	Z_TYPE		199231						
ANR	199371	Symbol	HT_GET_DATA_ADDR		199231						
ANR	199372	Symbol	ht -> u . flags		199231						
ANR	199373	Symbol	ht		199231						
ANR	199374	Symbol	p -> val		199231						
ANR	199375	Symbol	HT_IDX_TO_HASH		199231						
ANR	199376	Symbol	p		199231						
ANR	199377	Symbol	UNEXPECTED		199231						
ANR	199378	Symbol	* ht		199231						
ANR	199379	Symbol	HASH_FLAG_PERSISTENT		199231						
ANR	199380	Symbol	HASH_FLAG_INITIALIZED		199231						
ANR	199381	Symbol	* p		199231						
ANR	199382	Symbol	idx		199231						
ANR	199383	Symbol	GC_REFCOUNT		199231						
ANR	199384	Symbol	ht -> nNumUsed		199231						
ANR	199385	Symbol	IS_UNDEF		199231						
ANR	199386	Function	zend_hash_graceful_reverse_destroy	1454:0:40399:40908							
ANR	199387	FunctionDef	zend_hash_graceful_reverse_destroy (HashTable * ht)		199386	0					
ANR	199388	CompoundStatement		1455:0:40477:40908	199386	0					
ANR	199389	IdentifierDeclStatement	uint32_t idx ;	1456:1:40480:40492	199386	0	True				
ANR	199390	IdentifierDecl	idx		199386	0					
ANR	199391	IdentifierDeclType	uint32_t		199386	0					
ANR	199392	Identifier	idx		199386	1					
ANR	199393	IdentifierDeclStatement	Bucket * p ;	1457:1:40495:40504	199386	1	True				
ANR	199394	IdentifierDecl	* p		199386	0					
ANR	199395	IdentifierDeclType	Bucket *		199386	0					
ANR	199396	Identifier	p		199386	1					
ANR	199397	ExpressionStatement	IS_CONSISTENT ( ht )	1459:1:40508:40525	199386	2	True				
ANR	199398	CallExpression	IS_CONSISTENT ( ht )		199386	0					
ANR	199399	Callee	IS_CONSISTENT		199386	0					
ANR	199400	Identifier	IS_CONSISTENT		199386	0					
ANR	199401	ArgumentList	ht		199386	1					
ANR	199402	Argument	ht		199386	0					
ANR	199403	Identifier	ht		199386	0					
ANR	199404	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	1460:1:40528:40559	199386	3	True				
ANR	199405	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		199386	0					
ANR	199406	Callee	HT_ASSERT		199386	0					
ANR	199407	Identifier	HT_ASSERT		199386	0					
ANR	199408	ArgumentList	GC_REFCOUNT ( ht ) == 1		199386	1					
ANR	199409	Argument	GC_REFCOUNT ( ht ) == 1		199386	0					
ANR	199410	EqualityExpression	GC_REFCOUNT ( ht ) == 1		199386	0		==			
ANR	199411	CallExpression	GC_REFCOUNT ( ht )		199386	0					
ANR	199412	Callee	GC_REFCOUNT		199386	0					
ANR	199413	Identifier	GC_REFCOUNT		199386	0					
ANR	199414	ArgumentList	ht		199386	1					
ANR	199415	Argument	ht		199386	0					
ANR	199416	Identifier	ht		199386	0					
ANR	199417	PrimaryExpression	1		199386	1					
ANR	199418	ExpressionStatement	idx = ht -> nNumUsed	1462:1:40563:40581	199386	4	True				
ANR	199419	AssignmentExpression	idx = ht -> nNumUsed		199386	0		=			
ANR	199420	Identifier	idx		199386	0					
ANR	199421	PtrMemberAccess	ht -> nNumUsed		199386	1					
ANR	199422	Identifier	ht		199386	0					
ANR	199423	Identifier	nNumUsed		199386	1					
ANR	199424	ExpressionStatement	p = ht -> arData + ht -> nNumUsed	1463:1:40584:40613	199386	5	True				
ANR	199425	AssignmentExpression	p = ht -> arData + ht -> nNumUsed		199386	0		=			
ANR	199426	Identifier	p		199386	0					
ANR	199427	AdditiveExpression	ht -> arData + ht -> nNumUsed		199386	1		+			
ANR	199428	PtrMemberAccess	ht -> arData		199386	0					
ANR	199429	Identifier	ht		199386	0					
ANR	199430	Identifier	arData		199386	1					
ANR	199431	PtrMemberAccess	ht -> nNumUsed		199386	1					
ANR	199432	Identifier	ht		199386	0					
ANR	199433	Identifier	nNumUsed		199386	1					
ANR	199434	WhileStatement	while ( idx > 0 )		199386	6					
ANR	199435	Condition	idx > 0	1464:8:40623:40629	199386	0	True				
ANR	199436	RelationalExpression	idx > 0		199386	0		>			
ANR	199437	Identifier	idx		199386	0					
ANR	199438	PrimaryExpression	0		199386	1					
ANR	199439	CompoundStatement		10:17:154:154	199386	1					
ANR	199440	ExpressionStatement	idx --	1465:2:40636:40641	199386	0	True				
ANR	199441	PostIncDecOperationExpression	idx --		199386	0					
ANR	199442	Identifier	idx		199386	0					
ANR	199443	IncDec	--		199386	1					
ANR	199444	ExpressionStatement	p --	1466:2:40645:40648	199386	1	True				
ANR	199445	PostIncDecOperationExpression	p --		199386	0					
ANR	199446	Identifier	p		199386	0					
ANR	199447	IncDec	--		199386	1					
ANR	199448	IfStatement	if ( UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF ) )		199386	2					
ANR	199449	Condition	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )	1467:6:40656:40693	199386	0	True				
ANR	199450	CallExpression	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )		199386	0					
ANR	199451	Callee	UNEXPECTED		199386	0					
ANR	199452	Identifier	UNEXPECTED		199386	0					
ANR	199453	ArgumentList	Z_TYPE ( p -> val ) == IS_UNDEF		199386	1					
ANR	199454	Argument	Z_TYPE ( p -> val ) == IS_UNDEF		199386	0					
ANR	199455	EqualityExpression	Z_TYPE ( p -> val ) == IS_UNDEF		199386	0		==			
ANR	199456	CallExpression	Z_TYPE ( p -> val )		199386	0					
ANR	199457	Callee	Z_TYPE		199386	0					
ANR	199458	Identifier	Z_TYPE		199386	0					
ANR	199459	ArgumentList	p -> val		199386	1					
ANR	199460	Argument	p -> val		199386	0					
ANR	199461	PtrMemberAccess	p -> val		199386	0					
ANR	199462	Identifier	p		199386	0					
ANR	199463	Identifier	val		199386	1					
ANR	199464	Identifier	IS_UNDEF		199386	1					
ANR	199465	ContinueStatement	continue ;	1467:46:40696:40704	199386	1	True				
ANR	199466	ExpressionStatement	"_zend_hash_del_el ( ht , HT_IDX_TO_HASH ( idx ) , p )"	1468:2:40708:40753	199386	3	True				
ANR	199467	CallExpression	"_zend_hash_del_el ( ht , HT_IDX_TO_HASH ( idx ) , p )"		199386	0					
ANR	199468	Callee	_zend_hash_del_el		199386	0					
ANR	199469	Identifier	_zend_hash_del_el		199386	0					
ANR	199470	ArgumentList	ht		199386	1					
ANR	199471	Argument	ht		199386	0					
ANR	199472	Identifier	ht		199386	0					
ANR	199473	Argument	HT_IDX_TO_HASH ( idx )		199386	1					
ANR	199474	CallExpression	HT_IDX_TO_HASH ( idx )		199386	0					
ANR	199475	Callee	HT_IDX_TO_HASH		199386	0					
ANR	199476	Identifier	HT_IDX_TO_HASH		199386	0					
ANR	199477	ArgumentList	idx		199386	1					
ANR	199478	Argument	idx		199386	0					
ANR	199479	Identifier	idx		199386	0					
ANR	199480	Argument	p		199386	2					
ANR	199481	Identifier	p		199386	0					
ANR	199482	IfStatement	if ( ht -> u . flags & HASH_FLAG_INITIALIZED )		199386	7					
ANR	199483	Condition	ht -> u . flags & HASH_FLAG_INITIALIZED	1471:5:40764:40798	199386	0	True				
ANR	199484	BitAndExpression	ht -> u . flags & HASH_FLAG_INITIALIZED		199386	0		&			
ANR	199485	MemberAccess	ht -> u . flags		199386	0					
ANR	199486	PtrMemberAccess	ht -> u		199386	0					
ANR	199487	Identifier	ht		199386	0					
ANR	199488	Identifier	u		199386	1					
ANR	199489	Identifier	flags		199386	1					
ANR	199490	Identifier	HASH_FLAG_INITIALIZED		199386	1					
ANR	199491	CompoundStatement		17:42:323:323	199386	1					
ANR	199492	ExpressionStatement	"pefree ( HT_GET_DATA_ADDR ( ht ) , ht -> u . flags & HASH_FLAG_PERSISTENT )"	1472:2:40805:40869	199386	0	True				
ANR	199493	CallExpression	"pefree ( HT_GET_DATA_ADDR ( ht ) , ht -> u . flags & HASH_FLAG_PERSISTENT )"		199386	0					
ANR	199494	Callee	pefree		199386	0					
ANR	199495	Identifier	pefree		199386	0					
ANR	199496	ArgumentList	HT_GET_DATA_ADDR ( ht )		199386	1					
ANR	199497	Argument	HT_GET_DATA_ADDR ( ht )		199386	0					
ANR	199498	CallExpression	HT_GET_DATA_ADDR ( ht )		199386	0					
ANR	199499	Callee	HT_GET_DATA_ADDR		199386	0					
ANR	199500	Identifier	HT_GET_DATA_ADDR		199386	0					
ANR	199501	ArgumentList	ht		199386	1					
ANR	199502	Argument	ht		199386	0					
ANR	199503	Identifier	ht		199386	0					
ANR	199504	Argument	ht -> u . flags & HASH_FLAG_PERSISTENT		199386	1					
ANR	199505	BitAndExpression	ht -> u . flags & HASH_FLAG_PERSISTENT		199386	0		&			
ANR	199506	MemberAccess	ht -> u . flags		199386	0					
ANR	199507	PtrMemberAccess	ht -> u		199386	0					
ANR	199508	Identifier	ht		199386	0					
ANR	199509	Identifier	u		199386	1					
ANR	199510	Identifier	flags		199386	1					
ANR	199511	Identifier	HASH_FLAG_PERSISTENT		199386	1					
ANR	199512	ExpressionStatement	SET_INCONSISTENT ( HT_DESTROYED )	1475:1:40876:40906	199386	8	True				
ANR	199513	CallExpression	SET_INCONSISTENT ( HT_DESTROYED )		199386	0					
ANR	199514	Callee	SET_INCONSISTENT		199386	0					
ANR	199515	Identifier	SET_INCONSISTENT		199386	0					
ANR	199516	ArgumentList	HT_DESTROYED		199386	1					
ANR	199517	Argument	HT_DESTROYED		199386	0					
ANR	199518	Identifier	HT_DESTROYED		199386	0					
ANR	199519	ReturnType	ZEND_API void ZEND_FASTCALL		199386	1					
ANR	199520	Identifier	zend_hash_graceful_reverse_destroy		199386	2					
ANR	199521	ParameterList	HashTable * ht		199386	3					
ANR	199522	Parameter	HashTable * ht	1454:63:40462:40474	199386	0	True				
ANR	199523	ParameterType	HashTable *		199386	0					
ANR	199524	Identifier	ht		199386	1					
ANR	199525	CFGEntryNode	ENTRY		199386		True				
ANR	199526	CFGExitNode	EXIT		199386		True				
ANR	199527	Symbol	HT_DESTROYED		199386						
ANR	199528	Symbol	ht -> u		199386						
ANR	199529	Symbol	ht -> arData		199386						
ANR	199530	Symbol	Z_TYPE		199386						
ANR	199531	Symbol	HT_GET_DATA_ADDR		199386						
ANR	199532	Symbol	ht -> u . flags		199386						
ANR	199533	Symbol	ht		199386						
ANR	199534	Symbol	p -> val		199386						
ANR	199535	Symbol	HT_IDX_TO_HASH		199386						
ANR	199536	Symbol	p		199386						
ANR	199537	Symbol	UNEXPECTED		199386						
ANR	199538	Symbol	* ht		199386						
ANR	199539	Symbol	HASH_FLAG_PERSISTENT		199386						
ANR	199540	Symbol	HASH_FLAG_INITIALIZED		199386						
ANR	199541	Symbol	* p		199386						
ANR	199542	Symbol	idx		199386						
ANR	199543	Symbol	GC_REFCOUNT		199386						
ANR	199544	Symbol	ht -> nNumUsed		199386						
ANR	199545	Symbol	IS_UNDEF		199386						
ANR	199546	Function	zend_hash_apply	1487:0:41327:41877							
ANR	199547	FunctionDef	"zend_hash_apply (HashTable * ht , apply_func_t apply_func)"		199546	0					
ANR	199548	CompoundStatement		1488:0:41411:41877	199546	0					
ANR	199549	IdentifierDeclStatement	uint32_t idx ;	1489:1:41414:41426	199546	0	True				
ANR	199550	IdentifierDecl	idx		199546	0					
ANR	199551	IdentifierDeclType	uint32_t		199546	0					
ANR	199552	Identifier	idx		199546	1					
ANR	199553	IdentifierDeclStatement	Bucket * p ;	1490:1:41429:41438	199546	1	True				
ANR	199554	IdentifierDecl	* p		199546	0					
ANR	199555	IdentifierDeclType	Bucket *		199546	0					
ANR	199556	Identifier	p		199546	1					
ANR	199557	IdentifierDeclStatement	int result ;	1491:1:41441:41451	199546	2	True				
ANR	199558	IdentifierDecl	result		199546	0					
ANR	199559	IdentifierDeclType	int		199546	0					
ANR	199560	Identifier	result		199546	1					
ANR	199561	ExpressionStatement	IS_CONSISTENT ( ht )	1493:1:41455:41472	199546	3	True				
ANR	199562	CallExpression	IS_CONSISTENT ( ht )		199546	0					
ANR	199563	Callee	IS_CONSISTENT		199546	0					
ANR	199564	Identifier	IS_CONSISTENT		199546	0					
ANR	199565	ArgumentList	ht		199546	1					
ANR	199566	Argument	ht		199546	0					
ANR	199567	Identifier	ht		199546	0					
ANR	199568	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	1494:1:41475:41506	199546	4	True				
ANR	199569	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		199546	0					
ANR	199570	Callee	HT_ASSERT		199546	0					
ANR	199571	Identifier	HT_ASSERT		199546	0					
ANR	199572	ArgumentList	GC_REFCOUNT ( ht ) == 1		199546	1					
ANR	199573	Argument	GC_REFCOUNT ( ht ) == 1		199546	0					
ANR	199574	EqualityExpression	GC_REFCOUNT ( ht ) == 1		199546	0		==			
ANR	199575	CallExpression	GC_REFCOUNT ( ht )		199546	0					
ANR	199576	Callee	GC_REFCOUNT		199546	0					
ANR	199577	Identifier	GC_REFCOUNT		199546	0					
ANR	199578	ArgumentList	ht		199546	1					
ANR	199579	Argument	ht		199546	0					
ANR	199580	Identifier	ht		199546	0					
ANR	199581	PrimaryExpression	1		199546	1					
ANR	199582	ExpressionStatement	HASH_PROTECT_RECURSION ( ht )	1496:1:41510:41536	199546	5	True				
ANR	199583	CallExpression	HASH_PROTECT_RECURSION ( ht )		199546	0					
ANR	199584	Callee	HASH_PROTECT_RECURSION		199546	0					
ANR	199585	Identifier	HASH_PROTECT_RECURSION		199546	0					
ANR	199586	ArgumentList	ht		199546	1					
ANR	199587	Argument	ht		199546	0					
ANR	199588	Identifier	ht		199546	0					
ANR	199589	ForStatement	for ( idx = 0 ; idx < ht -> nNumUsed ; idx ++ )		199546	6					
ANR	199590	ForInit	idx = 0 ;	1497:6:41544:41551	199546	0	True				
ANR	199591	AssignmentExpression	idx = 0		199546	0		=			
ANR	199592	Identifier	idx		199546	0					
ANR	199593	PrimaryExpression	0		199546	1					
ANR	199594	Condition	idx < ht -> nNumUsed	1497:15:41553:41570	199546	1	True				
ANR	199595	RelationalExpression	idx < ht -> nNumUsed		199546	0		<			
ANR	199596	Identifier	idx		199546	0					
ANR	199597	PtrMemberAccess	ht -> nNumUsed		199546	1					
ANR	199598	Identifier	ht		199546	0					
ANR	199599	Identifier	nNumUsed		199546	1					
ANR	199600	PostIncDecOperationExpression	idx ++	1497:35:41573:41577	199546	2	True				
ANR	199601	Identifier	idx		199546	0					
ANR	199602	IncDec	++		199546	1					
ANR	199603	CompoundStatement		10:42:168:168	199546	3					
ANR	199604	ExpressionStatement	p = ht -> arData + idx	1498:2:41584:41604	199546	0	True				
ANR	199605	AssignmentExpression	p = ht -> arData + idx		199546	0		=			
ANR	199606	Identifier	p		199546	0					
ANR	199607	AdditiveExpression	ht -> arData + idx		199546	1		+			
ANR	199608	PtrMemberAccess	ht -> arData		199546	0					
ANR	199609	Identifier	ht		199546	0					
ANR	199610	Identifier	arData		199546	1					
ANR	199611	Identifier	idx		199546	1					
ANR	199612	IfStatement	if ( UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF ) )		199546	1					
ANR	199613	Condition	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )	1499:6:41612:41649	199546	0	True				
ANR	199614	CallExpression	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )		199546	0					
ANR	199615	Callee	UNEXPECTED		199546	0					
ANR	199616	Identifier	UNEXPECTED		199546	0					
ANR	199617	ArgumentList	Z_TYPE ( p -> val ) == IS_UNDEF		199546	1					
ANR	199618	Argument	Z_TYPE ( p -> val ) == IS_UNDEF		199546	0					
ANR	199619	EqualityExpression	Z_TYPE ( p -> val ) == IS_UNDEF		199546	0		==			
ANR	199620	CallExpression	Z_TYPE ( p -> val )		199546	0					
ANR	199621	Callee	Z_TYPE		199546	0					
ANR	199622	Identifier	Z_TYPE		199546	0					
ANR	199623	ArgumentList	p -> val		199546	1					
ANR	199624	Argument	p -> val		199546	0					
ANR	199625	PtrMemberAccess	p -> val		199546	0					
ANR	199626	Identifier	p		199546	0					
ANR	199627	Identifier	val		199546	1					
ANR	199628	Identifier	IS_UNDEF		199546	1					
ANR	199629	ContinueStatement	continue ;	1499:46:41652:41660	199546	1	True				
ANR	199630	ExpressionStatement	result = apply_func ( & p -> val )	1500:2:41664:41692	199546	2	True				
ANR	199631	AssignmentExpression	result = apply_func ( & p -> val )		199546	0		=			
ANR	199632	Identifier	result		199546	0					
ANR	199633	CallExpression	apply_func ( & p -> val )		199546	1					
ANR	199634	Callee	apply_func		199546	0					
ANR	199635	Identifier	apply_func		199546	0					
ANR	199636	ArgumentList	& p -> val		199546	1					
ANR	199637	Argument	& p -> val		199546	0					
ANR	199638	UnaryOperationExpression	& p -> val		199546	0					
ANR	199639	UnaryOperator	&		199546	0					
ANR	199640	PtrMemberAccess	p -> val		199546	1					
ANR	199641	Identifier	p		199546	0					
ANR	199642	Identifier	val		199546	1					
ANR	199643	IfStatement	if ( result & ZEND_HASH_APPLY_REMOVE )		199546	3					
ANR	199644	Condition	result & ZEND_HASH_APPLY_REMOVE	1502:6:41701:41731	199546	0	True				
ANR	199645	BitAndExpression	result & ZEND_HASH_APPLY_REMOVE		199546	0		&			
ANR	199646	Identifier	result		199546	0					
ANR	199647	Identifier	ZEND_HASH_APPLY_REMOVE		199546	1					
ANR	199648	CompoundStatement		15:39:322:322	199546	1					
ANR	199649	ExpressionStatement	"_zend_hash_del_el ( ht , HT_IDX_TO_HASH ( idx ) , p )"	1503:3:41739:41784	199546	0	True				
ANR	199650	CallExpression	"_zend_hash_del_el ( ht , HT_IDX_TO_HASH ( idx ) , p )"		199546	0					
ANR	199651	Callee	_zend_hash_del_el		199546	0					
ANR	199652	Identifier	_zend_hash_del_el		199546	0					
ANR	199653	ArgumentList	ht		199546	1					
ANR	199654	Argument	ht		199546	0					
ANR	199655	Identifier	ht		199546	0					
ANR	199656	Argument	HT_IDX_TO_HASH ( idx )		199546	1					
ANR	199657	CallExpression	HT_IDX_TO_HASH ( idx )		199546	0					
ANR	199658	Callee	HT_IDX_TO_HASH		199546	0					
ANR	199659	Identifier	HT_IDX_TO_HASH		199546	0					
ANR	199660	ArgumentList	idx		199546	1					
ANR	199661	Argument	idx		199546	0					
ANR	199662	Identifier	idx		199546	0					
ANR	199663	Argument	p		199546	2					
ANR	199664	Identifier	p		199546	0					
ANR	199665	IfStatement	if ( result & ZEND_HASH_APPLY_STOP )		199546	4					
ANR	199666	Condition	result & ZEND_HASH_APPLY_STOP	1505:6:41796:41824	199546	0	True				
ANR	199667	BitAndExpression	result & ZEND_HASH_APPLY_STOP		199546	0		&			
ANR	199668	Identifier	result		199546	0					
ANR	199669	Identifier	ZEND_HASH_APPLY_STOP		199546	1					
ANR	199670	CompoundStatement		18:37:415:415	199546	1					
ANR	199671	BreakStatement	break ;	1506:3:41832:41837	199546	0	True				
ANR	199672	ExpressionStatement	HASH_UNPROTECT_RECURSION ( ht )	1509:1:41847:41875	199546	7	True				
ANR	199673	CallExpression	HASH_UNPROTECT_RECURSION ( ht )		199546	0					
ANR	199674	Callee	HASH_UNPROTECT_RECURSION		199546	0					
ANR	199675	Identifier	HASH_UNPROTECT_RECURSION		199546	0					
ANR	199676	ArgumentList	ht		199546	1					
ANR	199677	Argument	ht		199546	0					
ANR	199678	Identifier	ht		199546	0					
ANR	199679	ReturnType	ZEND_API void ZEND_FASTCALL		199546	1					
ANR	199680	Identifier	zend_hash_apply		199546	2					
ANR	199681	ParameterList	"HashTable * ht , apply_func_t apply_func"		199546	3					
ANR	199682	Parameter	HashTable * ht	1487:44:41371:41383	199546	0	True				
ANR	199683	ParameterType	HashTable *		199546	0					
ANR	199684	Identifier	ht		199546	1					
ANR	199685	Parameter	apply_func_t apply_func	1487:59:41386:41408	199546	1	True				
ANR	199686	ParameterType	apply_func_t		199546	0					
ANR	199687	Identifier	apply_func		199546	1					
ANR	199688	CFGEntryNode	ENTRY		199546		True				
ANR	199689	CFGExitNode	EXIT		199546		True				
ANR	199690	Symbol	ht -> arData		199546						
ANR	199691	Symbol	Z_TYPE		199546						
ANR	199692	Symbol	ht		199546						
ANR	199693	Symbol	p -> val		199546						
ANR	199694	Symbol	HT_IDX_TO_HASH		199546						
ANR	199695	Symbol	p		199546						
ANR	199696	Symbol	result		199546						
ANR	199697	Symbol	UNEXPECTED		199546						
ANR	199698	Symbol	* ht		199546						
ANR	199699	Symbol	* p		199546						
ANR	199700	Symbol	ZEND_HASH_APPLY_REMOVE		199546						
ANR	199701	Symbol	ZEND_HASH_APPLY_STOP		199546						
ANR	199702	Symbol	apply_func		199546						
ANR	199703	Symbol	idx		199546						
ANR	199704	Symbol	GC_REFCOUNT		199546						
ANR	199705	Symbol	ht -> nNumUsed		199546						
ANR	199706	Symbol	IS_UNDEF		199546						
ANR	199707	Symbol	& p -> val		199546						
ANR	199708	Function	zend_hash_apply_with_argument	1513:0:41881:42478							
ANR	199709	FunctionDef	"zend_hash_apply_with_argument (HashTable * ht , apply_func_arg_t apply_func , void * argument)"		199708	0					
ANR	199710	CompoundStatement		1514:0:41999:42478	199708	0					
ANR	199711	IdentifierDeclStatement	uint32_t idx ;	1515:4:42005:42017	199708	0	True				
ANR	199712	IdentifierDecl	idx		199708	0					
ANR	199713	IdentifierDeclType	uint32_t		199708	0					
ANR	199714	Identifier	idx		199708	1					
ANR	199715	IdentifierDeclStatement	Bucket * p ;	1516:1:42020:42029	199708	1	True				
ANR	199716	IdentifierDecl	* p		199708	0					
ANR	199717	IdentifierDeclType	Bucket *		199708	0					
ANR	199718	Identifier	p		199708	1					
ANR	199719	IdentifierDeclStatement	int result ;	1517:1:42032:42042	199708	2	True				
ANR	199720	IdentifierDecl	result		199708	0					
ANR	199721	IdentifierDeclType	int		199708	0					
ANR	199722	Identifier	result		199708	1					
ANR	199723	ExpressionStatement	IS_CONSISTENT ( ht )	1519:1:42046:42063	199708	3	True				
ANR	199724	CallExpression	IS_CONSISTENT ( ht )		199708	0					
ANR	199725	Callee	IS_CONSISTENT		199708	0					
ANR	199726	Identifier	IS_CONSISTENT		199708	0					
ANR	199727	ArgumentList	ht		199708	1					
ANR	199728	Argument	ht		199708	0					
ANR	199729	Identifier	ht		199708	0					
ANR	199730	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	1520:1:42066:42097	199708	4	True				
ANR	199731	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		199708	0					
ANR	199732	Callee	HT_ASSERT		199708	0					
ANR	199733	Identifier	HT_ASSERT		199708	0					
ANR	199734	ArgumentList	GC_REFCOUNT ( ht ) == 1		199708	1					
ANR	199735	Argument	GC_REFCOUNT ( ht ) == 1		199708	0					
ANR	199736	EqualityExpression	GC_REFCOUNT ( ht ) == 1		199708	0		==			
ANR	199737	CallExpression	GC_REFCOUNT ( ht )		199708	0					
ANR	199738	Callee	GC_REFCOUNT		199708	0					
ANR	199739	Identifier	GC_REFCOUNT		199708	0					
ANR	199740	ArgumentList	ht		199708	1					
ANR	199741	Argument	ht		199708	0					
ANR	199742	Identifier	ht		199708	0					
ANR	199743	PrimaryExpression	1		199708	1					
ANR	199744	ExpressionStatement	HASH_PROTECT_RECURSION ( ht )	1522:1:42101:42127	199708	5	True				
ANR	199745	CallExpression	HASH_PROTECT_RECURSION ( ht )		199708	0					
ANR	199746	Callee	HASH_PROTECT_RECURSION		199708	0					
ANR	199747	Identifier	HASH_PROTECT_RECURSION		199708	0					
ANR	199748	ArgumentList	ht		199708	1					
ANR	199749	Argument	ht		199708	0					
ANR	199750	Identifier	ht		199708	0					
ANR	199751	ForStatement	for ( idx = 0 ; idx < ht -> nNumUsed ; idx ++ )		199708	6					
ANR	199752	ForInit	idx = 0 ;	1523:6:42135:42142	199708	0	True				
ANR	199753	AssignmentExpression	idx = 0		199708	0		=			
ANR	199754	Identifier	idx		199708	0					
ANR	199755	PrimaryExpression	0		199708	1					
ANR	199756	Condition	idx < ht -> nNumUsed	1523:15:42144:42161	199708	1	True				
ANR	199757	RelationalExpression	idx < ht -> nNumUsed		199708	0		<			
ANR	199758	Identifier	idx		199708	0					
ANR	199759	PtrMemberAccess	ht -> nNumUsed		199708	1					
ANR	199760	Identifier	ht		199708	0					
ANR	199761	Identifier	nNumUsed		199708	1					
ANR	199762	PostIncDecOperationExpression	idx ++	1523:35:42164:42168	199708	2	True				
ANR	199763	Identifier	idx		199708	0					
ANR	199764	IncDec	++		199708	1					
ANR	199765	CompoundStatement		10:42:171:171	199708	3					
ANR	199766	ExpressionStatement	p = ht -> arData + idx	1524:2:42175:42195	199708	0	True				
ANR	199767	AssignmentExpression	p = ht -> arData + idx		199708	0		=			
ANR	199768	Identifier	p		199708	0					
ANR	199769	AdditiveExpression	ht -> arData + idx		199708	1		+			
ANR	199770	PtrMemberAccess	ht -> arData		199708	0					
ANR	199771	Identifier	ht		199708	0					
ANR	199772	Identifier	arData		199708	1					
ANR	199773	Identifier	idx		199708	1					
ANR	199774	IfStatement	if ( UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF ) )		199708	1					
ANR	199775	Condition	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )	1525:6:42203:42240	199708	0	True				
ANR	199776	CallExpression	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )		199708	0					
ANR	199777	Callee	UNEXPECTED		199708	0					
ANR	199778	Identifier	UNEXPECTED		199708	0					
ANR	199779	ArgumentList	Z_TYPE ( p -> val ) == IS_UNDEF		199708	1					
ANR	199780	Argument	Z_TYPE ( p -> val ) == IS_UNDEF		199708	0					
ANR	199781	EqualityExpression	Z_TYPE ( p -> val ) == IS_UNDEF		199708	0		==			
ANR	199782	CallExpression	Z_TYPE ( p -> val )		199708	0					
ANR	199783	Callee	Z_TYPE		199708	0					
ANR	199784	Identifier	Z_TYPE		199708	0					
ANR	199785	ArgumentList	p -> val		199708	1					
ANR	199786	Argument	p -> val		199708	0					
ANR	199787	PtrMemberAccess	p -> val		199708	0					
ANR	199788	Identifier	p		199708	0					
ANR	199789	Identifier	val		199708	1					
ANR	199790	Identifier	IS_UNDEF		199708	1					
ANR	199791	ContinueStatement	continue ;	1525:46:42243:42251	199708	1	True				
ANR	199792	ExpressionStatement	"result = apply_func ( & p -> val , argument )"	1526:2:42255:42293	199708	2	True				
ANR	199793	AssignmentExpression	"result = apply_func ( & p -> val , argument )"		199708	0		=			
ANR	199794	Identifier	result		199708	0					
ANR	199795	CallExpression	"apply_func ( & p -> val , argument )"		199708	1					
ANR	199796	Callee	apply_func		199708	0					
ANR	199797	Identifier	apply_func		199708	0					
ANR	199798	ArgumentList	& p -> val		199708	1					
ANR	199799	Argument	& p -> val		199708	0					
ANR	199800	UnaryOperationExpression	& p -> val		199708	0					
ANR	199801	UnaryOperator	&		199708	0					
ANR	199802	PtrMemberAccess	p -> val		199708	1					
ANR	199803	Identifier	p		199708	0					
ANR	199804	Identifier	val		199708	1					
ANR	199805	Argument	argument		199708	1					
ANR	199806	Identifier	argument		199708	0					
ANR	199807	IfStatement	if ( result & ZEND_HASH_APPLY_REMOVE )		199708	3					
ANR	199808	Condition	result & ZEND_HASH_APPLY_REMOVE	1528:6:42302:42332	199708	0	True				
ANR	199809	BitAndExpression	result & ZEND_HASH_APPLY_REMOVE		199708	0		&			
ANR	199810	Identifier	result		199708	0					
ANR	199811	Identifier	ZEND_HASH_APPLY_REMOVE		199708	1					
ANR	199812	CompoundStatement		15:39:335:335	199708	1					
ANR	199813	ExpressionStatement	"_zend_hash_del_el ( ht , HT_IDX_TO_HASH ( idx ) , p )"	1529:3:42340:42385	199708	0	True				
ANR	199814	CallExpression	"_zend_hash_del_el ( ht , HT_IDX_TO_HASH ( idx ) , p )"		199708	0					
ANR	199815	Callee	_zend_hash_del_el		199708	0					
ANR	199816	Identifier	_zend_hash_del_el		199708	0					
ANR	199817	ArgumentList	ht		199708	1					
ANR	199818	Argument	ht		199708	0					
ANR	199819	Identifier	ht		199708	0					
ANR	199820	Argument	HT_IDX_TO_HASH ( idx )		199708	1					
ANR	199821	CallExpression	HT_IDX_TO_HASH ( idx )		199708	0					
ANR	199822	Callee	HT_IDX_TO_HASH		199708	0					
ANR	199823	Identifier	HT_IDX_TO_HASH		199708	0					
ANR	199824	ArgumentList	idx		199708	1					
ANR	199825	Argument	idx		199708	0					
ANR	199826	Identifier	idx		199708	0					
ANR	199827	Argument	p		199708	2					
ANR	199828	Identifier	p		199708	0					
ANR	199829	IfStatement	if ( result & ZEND_HASH_APPLY_STOP )		199708	4					
ANR	199830	Condition	result & ZEND_HASH_APPLY_STOP	1531:6:42397:42425	199708	0	True				
ANR	199831	BitAndExpression	result & ZEND_HASH_APPLY_STOP		199708	0		&			
ANR	199832	Identifier	result		199708	0					
ANR	199833	Identifier	ZEND_HASH_APPLY_STOP		199708	1					
ANR	199834	CompoundStatement		18:37:428:428	199708	1					
ANR	199835	BreakStatement	break ;	1532:3:42433:42438	199708	0	True				
ANR	199836	ExpressionStatement	HASH_UNPROTECT_RECURSION ( ht )	1535:1:42448:42476	199708	7	True				
ANR	199837	CallExpression	HASH_UNPROTECT_RECURSION ( ht )		199708	0					
ANR	199838	Callee	HASH_UNPROTECT_RECURSION		199708	0					
ANR	199839	Identifier	HASH_UNPROTECT_RECURSION		199708	0					
ANR	199840	ArgumentList	ht		199708	1					
ANR	199841	Argument	ht		199708	0					
ANR	199842	Identifier	ht		199708	0					
ANR	199843	ReturnType	ZEND_API void ZEND_FASTCALL		199708	1					
ANR	199844	Identifier	zend_hash_apply_with_argument		199708	2					
ANR	199845	ParameterList	"HashTable * ht , apply_func_arg_t apply_func , void * argument"		199708	3					
ANR	199846	Parameter	HashTable * ht	1513:58:41939:41951	199708	0	True				
ANR	199847	ParameterType	HashTable *		199708	0					
ANR	199848	Identifier	ht		199708	1					
ANR	199849	Parameter	apply_func_arg_t apply_func	1513:73:41954:41980	199708	1	True				
ANR	199850	ParameterType	apply_func_arg_t		199708	0					
ANR	199851	Identifier	apply_func		199708	1					
ANR	199852	Parameter	void * argument	1513:102:41983:41996	199708	2	True				
ANR	199853	ParameterType	void *		199708	0					
ANR	199854	Identifier	argument		199708	1					
ANR	199855	CFGEntryNode	ENTRY		199708		True				
ANR	199856	CFGExitNode	EXIT		199708		True				
ANR	199857	Symbol	argument		199708						
ANR	199858	Symbol	ht -> arData		199708						
ANR	199859	Symbol	Z_TYPE		199708						
ANR	199860	Symbol	ht		199708						
ANR	199861	Symbol	p -> val		199708						
ANR	199862	Symbol	HT_IDX_TO_HASH		199708						
ANR	199863	Symbol	p		199708						
ANR	199864	Symbol	result		199708						
ANR	199865	Symbol	UNEXPECTED		199708						
ANR	199866	Symbol	* ht		199708						
ANR	199867	Symbol	* p		199708						
ANR	199868	Symbol	ZEND_HASH_APPLY_REMOVE		199708						
ANR	199869	Symbol	ZEND_HASH_APPLY_STOP		199708						
ANR	199870	Symbol	apply_func		199708						
ANR	199871	Symbol	idx		199708						
ANR	199872	Symbol	GC_REFCOUNT		199708						
ANR	199873	Symbol	ht -> nNumUsed		199708						
ANR	199874	Symbol	IS_UNDEF		199708						
ANR	199875	Symbol	& p -> val		199708						
ANR	199876	Function	zend_hash_apply_with_arguments	1539:0:42482:43248							
ANR	199877	FunctionDef	"zend_hash_apply_with_arguments (HashTable * ht , apply_func_args_t apply_func , int num_args)"		199876	0					
ANR	199878	CompoundStatement		1540:0:42605:43248	199876	0					
ANR	199879	IdentifierDeclStatement	uint32_t idx ;	1541:1:42608:42620	199876	0	True				
ANR	199880	IdentifierDecl	idx		199876	0					
ANR	199881	IdentifierDeclType	uint32_t		199876	0					
ANR	199882	Identifier	idx		199876	1					
ANR	199883	IdentifierDeclStatement	Bucket * p ;	1542:1:42623:42632	199876	1	True				
ANR	199884	IdentifierDecl	* p		199876	0					
ANR	199885	IdentifierDeclType	Bucket *		199876	0					
ANR	199886	Identifier	p		199876	1					
ANR	199887	IdentifierDeclStatement	va_list args ;	1543:1:42635:42647	199876	2	True				
ANR	199888	IdentifierDecl	args		199876	0					
ANR	199889	IdentifierDeclType	va_list		199876	0					
ANR	199890	Identifier	args		199876	1					
ANR	199891	IdentifierDeclStatement	zend_hash_key hash_key ;	1544:1:42650:42672	199876	3	True				
ANR	199892	IdentifierDecl	hash_key		199876	0					
ANR	199893	IdentifierDeclType	zend_hash_key		199876	0					
ANR	199894	Identifier	hash_key		199876	1					
ANR	199895	IdentifierDeclStatement	int result ;	1545:1:42675:42685	199876	4	True				
ANR	199896	IdentifierDecl	result		199876	0					
ANR	199897	IdentifierDeclType	int		199876	0					
ANR	199898	Identifier	result		199876	1					
ANR	199899	ExpressionStatement	IS_CONSISTENT ( ht )	1547:1:42689:42706	199876	5	True				
ANR	199900	CallExpression	IS_CONSISTENT ( ht )		199876	0					
ANR	199901	Callee	IS_CONSISTENT		199876	0					
ANR	199902	Identifier	IS_CONSISTENT		199876	0					
ANR	199903	ArgumentList	ht		199876	1					
ANR	199904	Argument	ht		199876	0					
ANR	199905	Identifier	ht		199876	0					
ANR	199906	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	1548:1:42709:42740	199876	6	True				
ANR	199907	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		199876	0					
ANR	199908	Callee	HT_ASSERT		199876	0					
ANR	199909	Identifier	HT_ASSERT		199876	0					
ANR	199910	ArgumentList	GC_REFCOUNT ( ht ) == 1		199876	1					
ANR	199911	Argument	GC_REFCOUNT ( ht ) == 1		199876	0					
ANR	199912	EqualityExpression	GC_REFCOUNT ( ht ) == 1		199876	0		==			
ANR	199913	CallExpression	GC_REFCOUNT ( ht )		199876	0					
ANR	199914	Callee	GC_REFCOUNT		199876	0					
ANR	199915	Identifier	GC_REFCOUNT		199876	0					
ANR	199916	ArgumentList	ht		199876	1					
ANR	199917	Argument	ht		199876	0					
ANR	199918	Identifier	ht		199876	0					
ANR	199919	PrimaryExpression	1		199876	1					
ANR	199920	ExpressionStatement	HASH_PROTECT_RECURSION ( ht )	1550:1:42744:42770	199876	7	True				
ANR	199921	CallExpression	HASH_PROTECT_RECURSION ( ht )		199876	0					
ANR	199922	Callee	HASH_PROTECT_RECURSION		199876	0					
ANR	199923	Identifier	HASH_PROTECT_RECURSION		199876	0					
ANR	199924	ArgumentList	ht		199876	1					
ANR	199925	Argument	ht		199876	0					
ANR	199926	Identifier	ht		199876	0					
ANR	199927	ForStatement	for ( idx = 0 ; idx < ht -> nNumUsed ; idx ++ )		199876	8					
ANR	199928	ForInit	idx = 0 ;	1552:6:42779:42786	199876	0	True				
ANR	199929	AssignmentExpression	idx = 0		199876	0		=			
ANR	199930	Identifier	idx		199876	0					
ANR	199931	PrimaryExpression	0		199876	1					
ANR	199932	Condition	idx < ht -> nNumUsed	1552:15:42788:42805	199876	1	True				
ANR	199933	RelationalExpression	idx < ht -> nNumUsed		199876	0		<			
ANR	199934	Identifier	idx		199876	0					
ANR	199935	PtrMemberAccess	ht -> nNumUsed		199876	1					
ANR	199936	Identifier	ht		199876	0					
ANR	199937	Identifier	nNumUsed		199876	1					
ANR	199938	PostIncDecOperationExpression	idx ++	1552:35:42808:42812	199876	2	True				
ANR	199939	Identifier	idx		199876	0					
ANR	199940	IncDec	++		199876	1					
ANR	199941	CompoundStatement		13:42:209:209	199876	3					
ANR	199942	ExpressionStatement	p = ht -> arData + idx	1553:2:42819:42839	199876	0	True				
ANR	199943	AssignmentExpression	p = ht -> arData + idx		199876	0		=			
ANR	199944	Identifier	p		199876	0					
ANR	199945	AdditiveExpression	ht -> arData + idx		199876	1		+			
ANR	199946	PtrMemberAccess	ht -> arData		199876	0					
ANR	199947	Identifier	ht		199876	0					
ANR	199948	Identifier	arData		199876	1					
ANR	199949	Identifier	idx		199876	1					
ANR	199950	IfStatement	if ( UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF ) )		199876	1					
ANR	199951	Condition	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )	1554:6:42847:42884	199876	0	True				
ANR	199952	CallExpression	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )		199876	0					
ANR	199953	Callee	UNEXPECTED		199876	0					
ANR	199954	Identifier	UNEXPECTED		199876	0					
ANR	199955	ArgumentList	Z_TYPE ( p -> val ) == IS_UNDEF		199876	1					
ANR	199956	Argument	Z_TYPE ( p -> val ) == IS_UNDEF		199876	0					
ANR	199957	EqualityExpression	Z_TYPE ( p -> val ) == IS_UNDEF		199876	0		==			
ANR	199958	CallExpression	Z_TYPE ( p -> val )		199876	0					
ANR	199959	Callee	Z_TYPE		199876	0					
ANR	199960	Identifier	Z_TYPE		199876	0					
ANR	199961	ArgumentList	p -> val		199876	1					
ANR	199962	Argument	p -> val		199876	0					
ANR	199963	PtrMemberAccess	p -> val		199876	0					
ANR	199964	Identifier	p		199876	0					
ANR	199965	Identifier	val		199876	1					
ANR	199966	Identifier	IS_UNDEF		199876	1					
ANR	199967	ContinueStatement	continue ;	1554:46:42887:42895	199876	1	True				
ANR	199968	ExpressionStatement	"va_start ( args , num_args )"	1555:2:42899:42923	199876	2	True				
ANR	199969	CallExpression	"va_start ( args , num_args )"		199876	0					
ANR	199970	Callee	va_start		199876	0					
ANR	199971	Identifier	va_start		199876	0					
ANR	199972	ArgumentList	args		199876	1					
ANR	199973	Argument	args		199876	0					
ANR	199974	Identifier	args		199876	0					
ANR	199975	Argument	num_args		199876	1					
ANR	199976	Identifier	num_args		199876	0					
ANR	199977	ExpressionStatement	hash_key . h = p -> h	1556:2:42927:42944	199876	3	True				
ANR	199978	AssignmentExpression	hash_key . h = p -> h		199876	0		=			
ANR	199979	MemberAccess	hash_key . h		199876	0					
ANR	199980	Identifier	hash_key		199876	0					
ANR	199981	Identifier	h		199876	1					
ANR	199982	PtrMemberAccess	p -> h		199876	1					
ANR	199983	Identifier	p		199876	0					
ANR	199984	Identifier	h		199876	1					
ANR	199985	ExpressionStatement	hash_key . key = p -> key	1557:2:42948:42969	199876	4	True				
ANR	199986	AssignmentExpression	hash_key . key = p -> key		199876	0		=			
ANR	199987	MemberAccess	hash_key . key		199876	0					
ANR	199988	Identifier	hash_key		199876	0					
ANR	199989	Identifier	key		199876	1					
ANR	199990	PtrMemberAccess	p -> key		199876	1					
ANR	199991	Identifier	p		199876	0					
ANR	199992	Identifier	key		199876	1					
ANR	199993	ExpressionStatement	"result = apply_func ( & p -> val , num_args , args , & hash_key )"	1559:2:42974:43029	199876	5	True				
ANR	199994	AssignmentExpression	"result = apply_func ( & p -> val , num_args , args , & hash_key )"		199876	0		=			
ANR	199995	Identifier	result		199876	0					
ANR	199996	CallExpression	"apply_func ( & p -> val , num_args , args , & hash_key )"		199876	1					
ANR	199997	Callee	apply_func		199876	0					
ANR	199998	Identifier	apply_func		199876	0					
ANR	199999	ArgumentList	& p -> val		199876	1					
ANR	200000	Argument	& p -> val		199876	0					
ANR	200001	UnaryOperationExpression	& p -> val		199876	0					
ANR	200002	UnaryOperator	&		199876	0					
ANR	200003	PtrMemberAccess	p -> val		199876	1					
ANR	200004	Identifier	p		199876	0					
ANR	200005	Identifier	val		199876	1					
ANR	200006	Argument	num_args		199876	1					
ANR	200007	Identifier	num_args		199876	0					
ANR	200008	Argument	args		199876	2					
ANR	200009	Identifier	args		199876	0					
ANR	200010	Argument	& hash_key		199876	3					
ANR	200011	UnaryOperationExpression	& hash_key		199876	0					
ANR	200012	UnaryOperator	&		199876	0					
ANR	200013	Identifier	hash_key		199876	1					
ANR	200014	IfStatement	if ( result & ZEND_HASH_APPLY_REMOVE )		199876	6					
ANR	200015	Condition	result & ZEND_HASH_APPLY_REMOVE	1561:6:43038:43068	199876	0	True				
ANR	200016	BitAndExpression	result & ZEND_HASH_APPLY_REMOVE		199876	0		&			
ANR	200017	Identifier	result		199876	0					
ANR	200018	Identifier	ZEND_HASH_APPLY_REMOVE		199876	1					
ANR	200019	CompoundStatement		22:39:465:465	199876	1					
ANR	200020	ExpressionStatement	"_zend_hash_del_el ( ht , HT_IDX_TO_HASH ( idx ) , p )"	1562:3:43076:43121	199876	0	True				
ANR	200021	CallExpression	"_zend_hash_del_el ( ht , HT_IDX_TO_HASH ( idx ) , p )"		199876	0					
ANR	200022	Callee	_zend_hash_del_el		199876	0					
ANR	200023	Identifier	_zend_hash_del_el		199876	0					
ANR	200024	ArgumentList	ht		199876	1					
ANR	200025	Argument	ht		199876	0					
ANR	200026	Identifier	ht		199876	0					
ANR	200027	Argument	HT_IDX_TO_HASH ( idx )		199876	1					
ANR	200028	CallExpression	HT_IDX_TO_HASH ( idx )		199876	0					
ANR	200029	Callee	HT_IDX_TO_HASH		199876	0					
ANR	200030	Identifier	HT_IDX_TO_HASH		199876	0					
ANR	200031	ArgumentList	idx		199876	1					
ANR	200032	Argument	idx		199876	0					
ANR	200033	Identifier	idx		199876	0					
ANR	200034	Argument	p		199876	2					
ANR	200035	Identifier	p		199876	0					
ANR	200036	IfStatement	if ( result & ZEND_HASH_APPLY_STOP )		199876	7					
ANR	200037	Condition	result & ZEND_HASH_APPLY_STOP	1564:6:43133:43161	199876	0	True				
ANR	200038	BitAndExpression	result & ZEND_HASH_APPLY_STOP		199876	0		&			
ANR	200039	Identifier	result		199876	0					
ANR	200040	Identifier	ZEND_HASH_APPLY_STOP		199876	1					
ANR	200041	CompoundStatement		25:37:558:558	199876	1					
ANR	200042	ExpressionStatement	va_end ( args )	1565:3:43169:43181	199876	0	True				
ANR	200043	CallExpression	va_end ( args )		199876	0					
ANR	200044	Callee	va_end		199876	0					
ANR	200045	Identifier	va_end		199876	0					
ANR	200046	ArgumentList	args		199876	1					
ANR	200047	Argument	args		199876	0					
ANR	200048	Identifier	args		199876	0					
ANR	200049	BreakStatement	break ;	1566:3:43186:43191	199876	1	True				
ANR	200050	ExpressionStatement	va_end ( args )	1568:2:43199:43211	199876	8	True				
ANR	200051	CallExpression	va_end ( args )		199876	0					
ANR	200052	Callee	va_end		199876	0					
ANR	200053	Identifier	va_end		199876	0					
ANR	200054	ArgumentList	args		199876	1					
ANR	200055	Argument	args		199876	0					
ANR	200056	Identifier	args		199876	0					
ANR	200057	ExpressionStatement	HASH_UNPROTECT_RECURSION ( ht )	1571:1:43218:43246	199876	9	True				
ANR	200058	CallExpression	HASH_UNPROTECT_RECURSION ( ht )		199876	0					
ANR	200059	Callee	HASH_UNPROTECT_RECURSION		199876	0					
ANR	200060	Identifier	HASH_UNPROTECT_RECURSION		199876	0					
ANR	200061	ArgumentList	ht		199876	1					
ANR	200062	Argument	ht		199876	0					
ANR	200063	Identifier	ht		199876	0					
ANR	200064	ReturnType	ZEND_API void ZEND_FASTCALL		199876	1					
ANR	200065	Identifier	zend_hash_apply_with_arguments		199876	2					
ANR	200066	ParameterList	"HashTable * ht , apply_func_args_t apply_func , int num_args"		199876	3					
ANR	200067	Parameter	HashTable * ht	1539:59:42541:42553	199876	0	True				
ANR	200068	ParameterType	HashTable *		199876	0					
ANR	200069	Identifier	ht		199876	1					
ANR	200070	Parameter	apply_func_args_t apply_func	1539:74:42556:42583	199876	1	True				
ANR	200071	ParameterType	apply_func_args_t		199876	0					
ANR	200072	Identifier	apply_func		199876	1					
ANR	200073	Parameter	int num_args	1539:104:42586:42597	199876	2	True				
ANR	200074	ParameterType	int		199876	0					
ANR	200075	Identifier	num_args		199876	1					
ANR	200076	CFGEntryNode	ENTRY		199876		True				
ANR	200077	CFGExitNode	EXIT		199876		True				
ANR	200078	Symbol	ht -> arData		199876						
ANR	200079	Symbol	Z_TYPE		199876						
ANR	200080	Symbol	ht		199876						
ANR	200081	Symbol	result		199876						
ANR	200082	Symbol	UNEXPECTED		199876						
ANR	200083	Symbol	* ht		199876						
ANR	200084	Symbol	num_args		199876						
ANR	200085	Symbol	hash_key . key		199876						
ANR	200086	Symbol	ZEND_HASH_APPLY_REMOVE		199876						
ANR	200087	Symbol	ZEND_HASH_APPLY_STOP		199876						
ANR	200088	Symbol	GC_REFCOUNT		199876						
ANR	200089	Symbol	IS_UNDEF		199876						
ANR	200090	Symbol	p -> h		199876						
ANR	200091	Symbol	& p -> val		199876						
ANR	200092	Symbol	& hash_key		199876						
ANR	200093	Symbol	p -> val		199876						
ANR	200094	Symbol	HT_IDX_TO_HASH		199876						
ANR	200095	Symbol	p -> key		199876						
ANR	200096	Symbol	p		199876						
ANR	200097	Symbol	args		199876						
ANR	200098	Symbol	hash_key		199876						
ANR	200099	Symbol	* p		199876						
ANR	200100	Symbol	apply_func		199876						
ANR	200101	Symbol	idx		199876						
ANR	200102	Symbol	ht -> nNumUsed		199876						
ANR	200103	Symbol	hash_key . h		199876						
ANR	200104	Function	zend_hash_reverse_apply	1575:0:43252:43816							
ANR	200105	FunctionDef	"zend_hash_reverse_apply (HashTable * ht , apply_func_t apply_func)"		200104	0					
ANR	200106	CompoundStatement		1576:0:43344:43816	200104	0					
ANR	200107	IdentifierDeclStatement	uint32_t idx ;	1577:1:43347:43359	200104	0	True				
ANR	200108	IdentifierDecl	idx		200104	0					
ANR	200109	IdentifierDeclType	uint32_t		200104	0					
ANR	200110	Identifier	idx		200104	1					
ANR	200111	IdentifierDeclStatement	Bucket * p ;	1578:1:43362:43371	200104	1	True				
ANR	200112	IdentifierDecl	* p		200104	0					
ANR	200113	IdentifierDeclType	Bucket *		200104	0					
ANR	200114	Identifier	p		200104	1					
ANR	200115	IdentifierDeclStatement	int result ;	1579:1:43374:43384	200104	2	True				
ANR	200116	IdentifierDecl	result		200104	0					
ANR	200117	IdentifierDeclType	int		200104	0					
ANR	200118	Identifier	result		200104	1					
ANR	200119	ExpressionStatement	IS_CONSISTENT ( ht )	1581:1:43388:43405	200104	3	True				
ANR	200120	CallExpression	IS_CONSISTENT ( ht )		200104	0					
ANR	200121	Callee	IS_CONSISTENT		200104	0					
ANR	200122	Identifier	IS_CONSISTENT		200104	0					
ANR	200123	ArgumentList	ht		200104	1					
ANR	200124	Argument	ht		200104	0					
ANR	200125	Identifier	ht		200104	0					
ANR	200126	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	1582:1:43408:43439	200104	4	True				
ANR	200127	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		200104	0					
ANR	200128	Callee	HT_ASSERT		200104	0					
ANR	200129	Identifier	HT_ASSERT		200104	0					
ANR	200130	ArgumentList	GC_REFCOUNT ( ht ) == 1		200104	1					
ANR	200131	Argument	GC_REFCOUNT ( ht ) == 1		200104	0					
ANR	200132	EqualityExpression	GC_REFCOUNT ( ht ) == 1		200104	0		==			
ANR	200133	CallExpression	GC_REFCOUNT ( ht )		200104	0					
ANR	200134	Callee	GC_REFCOUNT		200104	0					
ANR	200135	Identifier	GC_REFCOUNT		200104	0					
ANR	200136	ArgumentList	ht		200104	1					
ANR	200137	Argument	ht		200104	0					
ANR	200138	Identifier	ht		200104	0					
ANR	200139	PrimaryExpression	1		200104	1					
ANR	200140	ExpressionStatement	HASH_PROTECT_RECURSION ( ht )	1584:1:43443:43469	200104	5	True				
ANR	200141	CallExpression	HASH_PROTECT_RECURSION ( ht )		200104	0					
ANR	200142	Callee	HASH_PROTECT_RECURSION		200104	0					
ANR	200143	Identifier	HASH_PROTECT_RECURSION		200104	0					
ANR	200144	ArgumentList	ht		200104	1					
ANR	200145	Argument	ht		200104	0					
ANR	200146	Identifier	ht		200104	0					
ANR	200147	ExpressionStatement	idx = ht -> nNumUsed	1585:1:43472:43490	200104	6	True				
ANR	200148	AssignmentExpression	idx = ht -> nNumUsed		200104	0		=			
ANR	200149	Identifier	idx		200104	0					
ANR	200150	PtrMemberAccess	ht -> nNumUsed		200104	1					
ANR	200151	Identifier	ht		200104	0					
ANR	200152	Identifier	nNumUsed		200104	1					
ANR	200153	WhileStatement	while ( idx > 0 )		200104	7					
ANR	200154	Condition	idx > 0	1586:8:43500:43506	200104	0	True				
ANR	200155	RelationalExpression	idx > 0		200104	0		>			
ANR	200156	Identifier	idx		200104	0					
ANR	200157	PrimaryExpression	0		200104	1					
ANR	200158	CompoundStatement		11:17:164:164	200104	1					
ANR	200159	ExpressionStatement	idx --	1587:2:43513:43518	200104	0	True				
ANR	200160	PostIncDecOperationExpression	idx --		200104	0					
ANR	200161	Identifier	idx		200104	0					
ANR	200162	IncDec	--		200104	1					
ANR	200163	ExpressionStatement	p = ht -> arData + idx	1588:2:43522:43542	200104	1	True				
ANR	200164	AssignmentExpression	p = ht -> arData + idx		200104	0		=			
ANR	200165	Identifier	p		200104	0					
ANR	200166	AdditiveExpression	ht -> arData + idx		200104	1		+			
ANR	200167	PtrMemberAccess	ht -> arData		200104	0					
ANR	200168	Identifier	ht		200104	0					
ANR	200169	Identifier	arData		200104	1					
ANR	200170	Identifier	idx		200104	1					
ANR	200171	IfStatement	if ( UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF ) )		200104	2					
ANR	200172	Condition	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )	1589:6:43550:43587	200104	0	True				
ANR	200173	CallExpression	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )		200104	0					
ANR	200174	Callee	UNEXPECTED		200104	0					
ANR	200175	Identifier	UNEXPECTED		200104	0					
ANR	200176	ArgumentList	Z_TYPE ( p -> val ) == IS_UNDEF		200104	1					
ANR	200177	Argument	Z_TYPE ( p -> val ) == IS_UNDEF		200104	0					
ANR	200178	EqualityExpression	Z_TYPE ( p -> val ) == IS_UNDEF		200104	0		==			
ANR	200179	CallExpression	Z_TYPE ( p -> val )		200104	0					
ANR	200180	Callee	Z_TYPE		200104	0					
ANR	200181	Identifier	Z_TYPE		200104	0					
ANR	200182	ArgumentList	p -> val		200104	1					
ANR	200183	Argument	p -> val		200104	0					
ANR	200184	PtrMemberAccess	p -> val		200104	0					
ANR	200185	Identifier	p		200104	0					
ANR	200186	Identifier	val		200104	1					
ANR	200187	Identifier	IS_UNDEF		200104	1					
ANR	200188	ContinueStatement	continue ;	1589:46:43590:43598	200104	1	True				
ANR	200189	ExpressionStatement	result = apply_func ( & p -> val )	1591:2:43603:43631	200104	3	True				
ANR	200190	AssignmentExpression	result = apply_func ( & p -> val )		200104	0		=			
ANR	200191	Identifier	result		200104	0					
ANR	200192	CallExpression	apply_func ( & p -> val )		200104	1					
ANR	200193	Callee	apply_func		200104	0					
ANR	200194	Identifier	apply_func		200104	0					
ANR	200195	ArgumentList	& p -> val		200104	1					
ANR	200196	Argument	& p -> val		200104	0					
ANR	200197	UnaryOperationExpression	& p -> val		200104	0					
ANR	200198	UnaryOperator	&		200104	0					
ANR	200199	PtrMemberAccess	p -> val		200104	1					
ANR	200200	Identifier	p		200104	0					
ANR	200201	Identifier	val		200104	1					
ANR	200202	IfStatement	if ( result & ZEND_HASH_APPLY_REMOVE )		200104	4					
ANR	200203	Condition	result & ZEND_HASH_APPLY_REMOVE	1593:6:43640:43670	200104	0	True				
ANR	200204	BitAndExpression	result & ZEND_HASH_APPLY_REMOVE		200104	0		&			
ANR	200205	Identifier	result		200104	0					
ANR	200206	Identifier	ZEND_HASH_APPLY_REMOVE		200104	1					
ANR	200207	CompoundStatement		18:39:328:328	200104	1					
ANR	200208	ExpressionStatement	"_zend_hash_del_el ( ht , HT_IDX_TO_HASH ( idx ) , p )"	1594:3:43678:43723	200104	0	True				
ANR	200209	CallExpression	"_zend_hash_del_el ( ht , HT_IDX_TO_HASH ( idx ) , p )"		200104	0					
ANR	200210	Callee	_zend_hash_del_el		200104	0					
ANR	200211	Identifier	_zend_hash_del_el		200104	0					
ANR	200212	ArgumentList	ht		200104	1					
ANR	200213	Argument	ht		200104	0					
ANR	200214	Identifier	ht		200104	0					
ANR	200215	Argument	HT_IDX_TO_HASH ( idx )		200104	1					
ANR	200216	CallExpression	HT_IDX_TO_HASH ( idx )		200104	0					
ANR	200217	Callee	HT_IDX_TO_HASH		200104	0					
ANR	200218	Identifier	HT_IDX_TO_HASH		200104	0					
ANR	200219	ArgumentList	idx		200104	1					
ANR	200220	Argument	idx		200104	0					
ANR	200221	Identifier	idx		200104	0					
ANR	200222	Argument	p		200104	2					
ANR	200223	Identifier	p		200104	0					
ANR	200224	IfStatement	if ( result & ZEND_HASH_APPLY_STOP )		200104	5					
ANR	200225	Condition	result & ZEND_HASH_APPLY_STOP	1596:6:43735:43763	200104	0	True				
ANR	200226	BitAndExpression	result & ZEND_HASH_APPLY_STOP		200104	0		&			
ANR	200227	Identifier	result		200104	0					
ANR	200228	Identifier	ZEND_HASH_APPLY_STOP		200104	1					
ANR	200229	CompoundStatement		21:37:421:421	200104	1					
ANR	200230	BreakStatement	break ;	1597:3:43771:43776	200104	0	True				
ANR	200231	ExpressionStatement	HASH_UNPROTECT_RECURSION ( ht )	1600:1:43786:43814	200104	8	True				
ANR	200232	CallExpression	HASH_UNPROTECT_RECURSION ( ht )		200104	0					
ANR	200233	Callee	HASH_UNPROTECT_RECURSION		200104	0					
ANR	200234	Identifier	HASH_UNPROTECT_RECURSION		200104	0					
ANR	200235	ArgumentList	ht		200104	1					
ANR	200236	Argument	ht		200104	0					
ANR	200237	Identifier	ht		200104	0					
ANR	200238	ReturnType	ZEND_API void ZEND_FASTCALL		200104	1					
ANR	200239	Identifier	zend_hash_reverse_apply		200104	2					
ANR	200240	ParameterList	"HashTable * ht , apply_func_t apply_func"		200104	3					
ANR	200241	Parameter	HashTable * ht	1575:52:43304:43316	200104	0	True				
ANR	200242	ParameterType	HashTable *		200104	0					
ANR	200243	Identifier	ht		200104	1					
ANR	200244	Parameter	apply_func_t apply_func	1575:67:43319:43341	200104	1	True				
ANR	200245	ParameterType	apply_func_t		200104	0					
ANR	200246	Identifier	apply_func		200104	1					
ANR	200247	CFGEntryNode	ENTRY		200104		True				
ANR	200248	CFGExitNode	EXIT		200104		True				
ANR	200249	Symbol	ht -> arData		200104						
ANR	200250	Symbol	Z_TYPE		200104						
ANR	200251	Symbol	ht		200104						
ANR	200252	Symbol	p -> val		200104						
ANR	200253	Symbol	HT_IDX_TO_HASH		200104						
ANR	200254	Symbol	p		200104						
ANR	200255	Symbol	result		200104						
ANR	200256	Symbol	UNEXPECTED		200104						
ANR	200257	Symbol	* ht		200104						
ANR	200258	Symbol	* p		200104						
ANR	200259	Symbol	ZEND_HASH_APPLY_REMOVE		200104						
ANR	200260	Symbol	ZEND_HASH_APPLY_STOP		200104						
ANR	200261	Symbol	apply_func		200104						
ANR	200262	Symbol	idx		200104						
ANR	200263	Symbol	GC_REFCOUNT		200104						
ANR	200264	Symbol	ht -> nNumUsed		200104						
ANR	200265	Symbol	IS_UNDEF		200104						
ANR	200266	Symbol	& p -> val		200104						
ANR	200267	Function	zend_hash_copy	1604:0:43820:45043							
ANR	200268	FunctionDef	"zend_hash_copy (HashTable * target , HashTable * source , copy_ctor_func_t pCopyConstructor)"		200267	0					
ANR	200269	CompoundStatement		1605:0:43936:45043	200267	0					
ANR	200270	IdentifierDeclStatement	uint32_t idx ;	1606:4:43942:43954	200267	0	True				
ANR	200271	IdentifierDecl	idx		200267	0					
ANR	200272	IdentifierDeclType	uint32_t		200267	0					
ANR	200273	Identifier	idx		200267	1					
ANR	200274	IdentifierDeclStatement	Bucket * p ;	1607:1:43957:43966	200267	1	True				
ANR	200275	IdentifierDecl	* p		200267	0					
ANR	200276	IdentifierDeclType	Bucket *		200267	0					
ANR	200277	Identifier	p		200267	1					
ANR	200278	IdentifierDeclStatement	"zval * new_entry , * data ;"	1608:1:43969:43991	200267	2	True				
ANR	200279	IdentifierDecl	* new_entry		200267	0					
ANR	200280	IdentifierDeclType	zval *		200267	0					
ANR	200281	Identifier	new_entry		200267	1					
ANR	200282	IdentifierDecl	* data		200267	1					
ANR	200283	IdentifierDeclType	zval *		200267	0					
ANR	200284	Identifier	data		200267	1					
ANR	200285	IdentifierDeclStatement	zend_bool setTargetPointer ;	1609:1:43994:44020	200267	3	True				
ANR	200286	IdentifierDecl	setTargetPointer		200267	0					
ANR	200287	IdentifierDeclType	zend_bool		200267	0					
ANR	200288	Identifier	setTargetPointer		200267	1					
ANR	200289	ExpressionStatement	IS_CONSISTENT ( source )	1611:1:44024:44045	200267	4	True				
ANR	200290	CallExpression	IS_CONSISTENT ( source )		200267	0					
ANR	200291	Callee	IS_CONSISTENT		200267	0					
ANR	200292	Identifier	IS_CONSISTENT		200267	0					
ANR	200293	ArgumentList	source		200267	1					
ANR	200294	Argument	source		200267	0					
ANR	200295	Identifier	source		200267	0					
ANR	200296	ExpressionStatement	IS_CONSISTENT ( target )	1612:1:44048:44069	200267	5	True				
ANR	200297	CallExpression	IS_CONSISTENT ( target )		200267	0					
ANR	200298	Callee	IS_CONSISTENT		200267	0					
ANR	200299	Identifier	IS_CONSISTENT		200267	0					
ANR	200300	ArgumentList	target		200267	1					
ANR	200301	Argument	target		200267	0					
ANR	200302	Identifier	target		200267	0					
ANR	200303	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( target ) == 1 )	1613:1:44072:44107	200267	6	True				
ANR	200304	CallExpression	HT_ASSERT ( GC_REFCOUNT ( target ) == 1 )		200267	0					
ANR	200305	Callee	HT_ASSERT		200267	0					
ANR	200306	Identifier	HT_ASSERT		200267	0					
ANR	200307	ArgumentList	GC_REFCOUNT ( target ) == 1		200267	1					
ANR	200308	Argument	GC_REFCOUNT ( target ) == 1		200267	0					
ANR	200309	EqualityExpression	GC_REFCOUNT ( target ) == 1		200267	0		==			
ANR	200310	CallExpression	GC_REFCOUNT ( target )		200267	0					
ANR	200311	Callee	GC_REFCOUNT		200267	0					
ANR	200312	Identifier	GC_REFCOUNT		200267	0					
ANR	200313	ArgumentList	target		200267	1					
ANR	200314	Argument	target		200267	0					
ANR	200315	Identifier	target		200267	0					
ANR	200316	PrimaryExpression	1		200267	1					
ANR	200317	ExpressionStatement	setTargetPointer = ( target -> nInternalPointer == HT_INVALID_IDX )	1615:1:44111:44174	200267	7	True				
ANR	200318	AssignmentExpression	setTargetPointer = ( target -> nInternalPointer == HT_INVALID_IDX )		200267	0		=			
ANR	200319	Identifier	setTargetPointer		200267	0					
ANR	200320	EqualityExpression	target -> nInternalPointer == HT_INVALID_IDX		200267	1		==			
ANR	200321	PtrMemberAccess	target -> nInternalPointer		200267	0					
ANR	200322	Identifier	target		200267	0					
ANR	200323	Identifier	nInternalPointer		200267	1					
ANR	200324	Identifier	HT_INVALID_IDX		200267	1					
ANR	200325	ForStatement	for ( idx = 0 ; idx < source -> nNumUsed ; idx ++ )		200267	8					
ANR	200326	ForInit	idx = 0 ;	1616:6:44182:44189	200267	0	True				
ANR	200327	AssignmentExpression	idx = 0		200267	0		=			
ANR	200328	Identifier	idx		200267	0					
ANR	200329	PrimaryExpression	0		200267	1					
ANR	200330	Condition	idx < source -> nNumUsed	1616:15:44191:44212	200267	1	True				
ANR	200331	RelationalExpression	idx < source -> nNumUsed		200267	0		<			
ANR	200332	Identifier	idx		200267	0					
ANR	200333	PtrMemberAccess	source -> nNumUsed		200267	1					
ANR	200334	Identifier	source		200267	0					
ANR	200335	Identifier	nNumUsed		200267	1					
ANR	200336	PostIncDecOperationExpression	idx ++	1616:39:44215:44219	200267	2	True				
ANR	200337	Identifier	idx		200267	0					
ANR	200338	IncDec	++		200267	1					
ANR	200339	CompoundStatement		12:46:285:285	200267	3					
ANR	200340	ExpressionStatement	p = source -> arData + idx	1617:2:44226:44250	200267	0	True				
ANR	200341	AssignmentExpression	p = source -> arData + idx		200267	0		=			
ANR	200342	Identifier	p		200267	0					
ANR	200343	AdditiveExpression	source -> arData + idx		200267	1		+			
ANR	200344	PtrMemberAccess	source -> arData		200267	0					
ANR	200345	Identifier	source		200267	0					
ANR	200346	Identifier	arData		200267	1					
ANR	200347	Identifier	idx		200267	1					
ANR	200348	IfStatement	if ( UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF ) )		200267	1					
ANR	200349	Condition	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )	1618:6:44258:44295	200267	0	True				
ANR	200350	CallExpression	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )		200267	0					
ANR	200351	Callee	UNEXPECTED		200267	0					
ANR	200352	Identifier	UNEXPECTED		200267	0					
ANR	200353	ArgumentList	Z_TYPE ( p -> val ) == IS_UNDEF		200267	1					
ANR	200354	Argument	Z_TYPE ( p -> val ) == IS_UNDEF		200267	0					
ANR	200355	EqualityExpression	Z_TYPE ( p -> val ) == IS_UNDEF		200267	0		==			
ANR	200356	CallExpression	Z_TYPE ( p -> val )		200267	0					
ANR	200357	Callee	Z_TYPE		200267	0					
ANR	200358	Identifier	Z_TYPE		200267	0					
ANR	200359	ArgumentList	p -> val		200267	1					
ANR	200360	Argument	p -> val		200267	0					
ANR	200361	PtrMemberAccess	p -> val		200267	0					
ANR	200362	Identifier	p		200267	0					
ANR	200363	Identifier	val		200267	1					
ANR	200364	Identifier	IS_UNDEF		200267	1					
ANR	200365	ContinueStatement	continue ;	1618:46:44298:44306	200267	1	True				
ANR	200366	IfStatement	if ( setTargetPointer && source -> nInternalPointer == idx )		200267	2					
ANR	200367	Condition	setTargetPointer && source -> nInternalPointer == idx	1620:6:44315:44365	200267	0	True				
ANR	200368	AndExpression	setTargetPointer && source -> nInternalPointer == idx		200267	0		&&			
ANR	200369	Identifier	setTargetPointer		200267	0					
ANR	200370	EqualityExpression	source -> nInternalPointer == idx		200267	1		==			
ANR	200371	PtrMemberAccess	source -> nInternalPointer		200267	0					
ANR	200372	Identifier	source		200267	0					
ANR	200373	Identifier	nInternalPointer		200267	1					
ANR	200374	Identifier	idx		200267	1					
ANR	200375	CompoundStatement		16:59:431:431	200267	1					
ANR	200376	ExpressionStatement	target -> nInternalPointer = HT_INVALID_IDX	1621:3:44373:44414	200267	0	True				
ANR	200377	AssignmentExpression	target -> nInternalPointer = HT_INVALID_IDX		200267	0		=			
ANR	200378	PtrMemberAccess	target -> nInternalPointer		200267	0					
ANR	200379	Identifier	target		200267	0					
ANR	200380	Identifier	nInternalPointer		200267	1					
ANR	200381	Identifier	HT_INVALID_IDX		200267	1					
ANR	200382	ExpressionStatement	data = & p -> val	1624:2:44477:44491	200267	3	True				
ANR	200383	AssignmentExpression	data = & p -> val		200267	0		=			
ANR	200384	Identifier	data		200267	0					
ANR	200385	UnaryOperationExpression	& p -> val		200267	1					
ANR	200386	UnaryOperator	&		200267	0					
ANR	200387	PtrMemberAccess	p -> val		200267	1					
ANR	200388	Identifier	p		200267	0					
ANR	200389	Identifier	val		200267	1					
ANR	200390	IfStatement	if ( Z_TYPE_P ( data ) == IS_INDIRECT )		200267	4					
ANR	200391	Condition	Z_TYPE_P ( data ) == IS_INDIRECT	1625:6:44499:44527	200267	0	True				
ANR	200392	EqualityExpression	Z_TYPE_P ( data ) == IS_INDIRECT		200267	0		==			
ANR	200393	CallExpression	Z_TYPE_P ( data )		200267	0					
ANR	200394	Callee	Z_TYPE_P		200267	0					
ANR	200395	Identifier	Z_TYPE_P		200267	0					
ANR	200396	ArgumentList	data		200267	1					
ANR	200397	Argument	data		200267	0					
ANR	200398	Identifier	data		200267	0					
ANR	200399	Identifier	IS_INDIRECT		200267	1					
ANR	200400	CompoundStatement		21:37:593:593	200267	1					
ANR	200401	ExpressionStatement	data = Z_INDIRECT_P ( data )	1626:3:44535:44560	200267	0	True				
ANR	200402	AssignmentExpression	data = Z_INDIRECT_P ( data )		200267	0		=			
ANR	200403	Identifier	data		200267	0					
ANR	200404	CallExpression	Z_INDIRECT_P ( data )		200267	1					
ANR	200405	Callee	Z_INDIRECT_P		200267	0					
ANR	200406	Identifier	Z_INDIRECT_P		200267	0					
ANR	200407	ArgumentList	data		200267	1					
ANR	200408	Argument	data		200267	0					
ANR	200409	Identifier	data		200267	0					
ANR	200410	IfStatement	if ( UNEXPECTED ( Z_TYPE_P ( data ) == IS_UNDEF ) )		200267	1					
ANR	200411	Condition	UNEXPECTED ( Z_TYPE_P ( data ) == IS_UNDEF )	1627:7:44569:44606	200267	0	True				
ANR	200412	CallExpression	UNEXPECTED ( Z_TYPE_P ( data ) == IS_UNDEF )		200267	0					
ANR	200413	Callee	UNEXPECTED		200267	0					
ANR	200414	Identifier	UNEXPECTED		200267	0					
ANR	200415	ArgumentList	Z_TYPE_P ( data ) == IS_UNDEF		200267	1					
ANR	200416	Argument	Z_TYPE_P ( data ) == IS_UNDEF		200267	0					
ANR	200417	EqualityExpression	Z_TYPE_P ( data ) == IS_UNDEF		200267	0		==			
ANR	200418	CallExpression	Z_TYPE_P ( data )		200267	0					
ANR	200419	Callee	Z_TYPE_P		200267	0					
ANR	200420	Identifier	Z_TYPE_P		200267	0					
ANR	200421	ArgumentList	data		200267	1					
ANR	200422	Argument	data		200267	0					
ANR	200423	Identifier	data		200267	0					
ANR	200424	Identifier	IS_UNDEF		200267	1					
ANR	200425	CompoundStatement		23:47:672:672	200267	1					
ANR	200426	ContinueStatement	continue ;	1628:4:44615:44623	200267	0	True				
ANR	200427	IfStatement	if ( p -> key )		200267	5					
ANR	200428	Condition	p -> key	1631:6:44640:44645	200267	0	True				
ANR	200429	PtrMemberAccess	p -> key		200267	0					
ANR	200430	Identifier	p		200267	0					
ANR	200431	Identifier	key		200267	1					
ANR	200432	CompoundStatement		27:14:711:711	200267	1					
ANR	200433	ExpressionStatement	"new_entry = zend_hash_update ( target , p -> key , data )"	1632:3:44653:44703	200267	0	True				
ANR	200434	AssignmentExpression	"new_entry = zend_hash_update ( target , p -> key , data )"		200267	0		=			
ANR	200435	Identifier	new_entry		200267	0					
ANR	200436	CallExpression	"zend_hash_update ( target , p -> key , data )"		200267	1					
ANR	200437	Callee	zend_hash_update		200267	0					
ANR	200438	Identifier	zend_hash_update		200267	0					
ANR	200439	ArgumentList	target		200267	1					
ANR	200440	Argument	target		200267	0					
ANR	200441	Identifier	target		200267	0					
ANR	200442	Argument	p -> key		200267	1					
ANR	200443	PtrMemberAccess	p -> key		200267	0					
ANR	200444	Identifier	p		200267	0					
ANR	200445	Identifier	key		200267	1					
ANR	200446	Argument	data		200267	2					
ANR	200447	Identifier	data		200267	0					
ANR	200448	ElseStatement	else		200267	0					
ANR	200449	CompoundStatement		29:9:777:777	200267	0					
ANR	200450	ExpressionStatement	"new_entry = zend_hash_index_update ( target , p -> h , data )"	1634:3:44719:44773	200267	0	True				
ANR	200451	AssignmentExpression	"new_entry = zend_hash_index_update ( target , p -> h , data )"		200267	0		=			
ANR	200452	Identifier	new_entry		200267	0					
ANR	200453	CallExpression	"zend_hash_index_update ( target , p -> h , data )"		200267	1					
ANR	200454	Callee	zend_hash_index_update		200267	0					
ANR	200455	Identifier	zend_hash_index_update		200267	0					
ANR	200456	ArgumentList	target		200267	1					
ANR	200457	Argument	target		200267	0					
ANR	200458	Identifier	target		200267	0					
ANR	200459	Argument	p -> h		200267	1					
ANR	200460	PtrMemberAccess	p -> h		200267	0					
ANR	200461	Identifier	p		200267	0					
ANR	200462	Identifier	h		200267	1					
ANR	200463	Argument	data		200267	2					
ANR	200464	Identifier	data		200267	0					
ANR	200465	IfStatement	if ( pCopyConstructor )		200267	6					
ANR	200466	Condition	pCopyConstructor	1636:6:44785:44800	200267	0	True				
ANR	200467	Identifier	pCopyConstructor		200267	0					
ANR	200468	CompoundStatement		32:24:866:866	200267	1					
ANR	200469	ExpressionStatement	pCopyConstructor ( new_entry )	1637:3:44808:44835	200267	0	True				
ANR	200470	CallExpression	pCopyConstructor ( new_entry )		200267	0					
ANR	200471	Callee	pCopyConstructor		200267	0					
ANR	200472	Identifier	pCopyConstructor		200267	0					
ANR	200473	ArgumentList	new_entry		200267	1					
ANR	200474	Argument	new_entry		200267	0					
ANR	200475	Identifier	new_entry		200267	0					
ANR	200476	IfStatement	if ( target -> nInternalPointer == HT_INVALID_IDX && target -> nNumOfElements > 0 )		200267	9					
ANR	200477	Condition	target -> nInternalPointer == HT_INVALID_IDX && target -> nNumOfElements > 0	1640:5:44849:44920	200267	0	True				
ANR	200478	AndExpression	target -> nInternalPointer == HT_INVALID_IDX && target -> nNumOfElements > 0		200267	0		&&			
ANR	200479	EqualityExpression	target -> nInternalPointer == HT_INVALID_IDX		200267	0		==			
ANR	200480	PtrMemberAccess	target -> nInternalPointer		200267	0					
ANR	200481	Identifier	target		200267	0					
ANR	200482	Identifier	nInternalPointer		200267	1					
ANR	200483	Identifier	HT_INVALID_IDX		200267	1					
ANR	200484	RelationalExpression	target -> nNumOfElements > 0		200267	1		>			
ANR	200485	PtrMemberAccess	target -> nNumOfElements		200267	0					
ANR	200486	Identifier	target		200267	0					
ANR	200487	Identifier	nNumOfElements		200267	1					
ANR	200488	PrimaryExpression	0		200267	1					
ANR	200489	CompoundStatement		36:79:986:986	200267	1					
ANR	200490	ExpressionStatement	idx = 0	1641:2:44927:44934	200267	0	True				
ANR	200491	AssignmentExpression	idx = 0		200267	0		=			
ANR	200492	Identifier	idx		200267	0					
ANR	200493	PrimaryExpression	0		200267	1					
ANR	200494	WhileStatement	while ( Z_TYPE ( target -> arData [ idx ] . val ) == IS_UNDEF )		200267	1					
ANR	200495	Condition	Z_TYPE ( target -> arData [ idx ] . val ) == IS_UNDEF	1642:9:44945:44987	200267	0	True				
ANR	200496	EqualityExpression	Z_TYPE ( target -> arData [ idx ] . val ) == IS_UNDEF		200267	0		==			
ANR	200497	CallExpression	Z_TYPE ( target -> arData [ idx ] . val )		200267	0					
ANR	200498	Callee	Z_TYPE		200267	0					
ANR	200499	Identifier	Z_TYPE		200267	0					
ANR	200500	ArgumentList	target -> arData [ idx ] . val		200267	1					
ANR	200501	Argument	target -> arData [ idx ] . val		200267	0					
ANR	200502	MemberAccess	target -> arData [ idx ] . val		200267	0					
ANR	200503	ArrayIndexing	target -> arData [ idx ]		200267	0					
ANR	200504	PtrMemberAccess	target -> arData		200267	0					
ANR	200505	Identifier	target		200267	0					
ANR	200506	Identifier	arData		200267	1					
ANR	200507	Identifier	idx		200267	1					
ANR	200508	Identifier	val		200267	1					
ANR	200509	Identifier	IS_UNDEF		200267	1					
ANR	200510	CompoundStatement		38:54:1053:1053	200267	1					
ANR	200511	ExpressionStatement	idx ++	1643:3:44995:45000	200267	0	True				
ANR	200512	PostIncDecOperationExpression	idx ++		200267	0					
ANR	200513	Identifier	idx		200267	0					
ANR	200514	IncDec	++		200267	1					
ANR	200515	ExpressionStatement	target -> nInternalPointer = idx	1645:2:45008:45038	200267	2	True				
ANR	200516	AssignmentExpression	target -> nInternalPointer = idx		200267	0		=			
ANR	200517	PtrMemberAccess	target -> nInternalPointer		200267	0					
ANR	200518	Identifier	target		200267	0					
ANR	200519	Identifier	nInternalPointer		200267	1					
ANR	200520	Identifier	idx		200267	1					
ANR	200521	ReturnType	ZEND_API void ZEND_FASTCALL		200267	1					
ANR	200522	Identifier	zend_hash_copy		200267	2					
ANR	200523	ParameterList	"HashTable * target , HashTable * source , copy_ctor_func_t pCopyConstructor"		200267	3					
ANR	200524	Parameter	HashTable * target	1604:43:43863:43879	200267	0	True				
ANR	200525	ParameterType	HashTable *		200267	0					
ANR	200526	Identifier	target		200267	1					
ANR	200527	Parameter	HashTable * source	1604:62:43882:43898	200267	1	True				
ANR	200528	ParameterType	HashTable *		200267	0					
ANR	200529	Identifier	source		200267	1					
ANR	200530	Parameter	copy_ctor_func_t pCopyConstructor	1604:81:43901:43933	200267	2	True				
ANR	200531	ParameterType	copy_ctor_func_t		200267	0					
ANR	200532	Identifier	pCopyConstructor		200267	1					
ANR	200533	CFGEntryNode	ENTRY		200267		True				
ANR	200534	CFGExitNode	EXIT		200267		True				
ANR	200535	Symbol	setTargetPointer		200267						
ANR	200536	Symbol	target -> arData [ idx ] . val		200267						
ANR	200537	Symbol	data		200267						
ANR	200538	Symbol	source -> arData		200267						
ANR	200539	Symbol	Z_TYPE		200267						
ANR	200540	Symbol	Z_INDIRECT_P		200267						
ANR	200541	Symbol	source		200267						
ANR	200542	Symbol	UNEXPECTED		200267						
ANR	200543	Symbol	target -> nNumOfElements		200267						
ANR	200544	Symbol	* source		200267						
ANR	200545	Symbol	* idx		200267						
ANR	200546	Symbol	target -> nInternalPointer		200267						
ANR	200547	Symbol	target -> arData		200267						
ANR	200548	Symbol	pCopyConstructor		200267						
ANR	200549	Symbol	zend_hash_update		200267						
ANR	200550	Symbol	GC_REFCOUNT		200267						
ANR	200551	Symbol	IS_UNDEF		200267						
ANR	200552	Symbol	p -> h		200267						
ANR	200553	Symbol	& p -> val		200267						
ANR	200554	Symbol	HT_INVALID_IDX		200267						
ANR	200555	Symbol	source -> nNumUsed		200267						
ANR	200556	Symbol	source -> nInternalPointer		200267						
ANR	200557	Symbol	zend_hash_index_update		200267						
ANR	200558	Symbol	Z_TYPE_P		200267						
ANR	200559	Symbol	* * target		200267						
ANR	200560	Symbol	p -> val		200267						
ANR	200561	Symbol	p -> key		200267						
ANR	200562	Symbol	target		200267						
ANR	200563	Symbol	p		200267						
ANR	200564	Symbol	new_entry		200267						
ANR	200565	Symbol	* target		200267						
ANR	200566	Symbol	* p		200267						
ANR	200567	Symbol	idx		200267						
ANR	200568	Symbol	* target -> arData		200267						
ANR	200569	Symbol	IS_INDIRECT		200267						
ANR	200570	Function	zend_array_dup_element	1650:0:45047:46321							
ANR	200571	FunctionDef	"zend_array_dup_element (HashTable * source , HashTable * target , uint32_t idx , Bucket * p , Bucket * q , int packed , int static_keys , int with_holes)"		200570	0					
ANR	200572	CompoundStatement		1651:0:45219:46321	200570	0					
ANR	200573	IdentifierDeclStatement	zval * data = & p -> val ;	1652:1:45222:45242	200570	0	True				
ANR	200574	IdentifierDecl	* data = & p -> val		200570	0					
ANR	200575	IdentifierDeclType	zval *		200570	0					
ANR	200576	Identifier	data		200570	1					
ANR	200577	AssignmentExpression	* data = & p -> val		200570	2		=			
ANR	200578	Identifier	data		200570	0					
ANR	200579	UnaryOperationExpression	& p -> val		200570	1					
ANR	200580	UnaryOperator	&		200570	0					
ANR	200581	PtrMemberAccess	p -> val		200570	1					
ANR	200582	Identifier	p		200570	0					
ANR	200583	Identifier	val		200570	1					
ANR	200584	IfStatement	if ( with_holes )		200570	1					
ANR	200585	Condition	with_holes	1654:5:45250:45259	200570	0	True				
ANR	200586	Identifier	with_holes		200570	0					
ANR	200587	CompoundStatement		4:17:42:42	200570	1					
ANR	200588	IfStatement	if ( ! packed && Z_TYPE_INFO_P ( data ) == IS_INDIRECT )		200570	0					
ANR	200589	Condition	! packed && Z_TYPE_INFO_P ( data ) == IS_INDIRECT	1655:6:45270:45314	200570	0	True				
ANR	200590	AndExpression	! packed && Z_TYPE_INFO_P ( data ) == IS_INDIRECT		200570	0		&&			
ANR	200591	UnaryOperationExpression	! packed		200570	0					
ANR	200592	UnaryOperator	!		200570	0					
ANR	200593	Identifier	packed		200570	1					
ANR	200594	EqualityExpression	Z_TYPE_INFO_P ( data ) == IS_INDIRECT		200570	1		==			
ANR	200595	CallExpression	Z_TYPE_INFO_P ( data )		200570	0					
ANR	200596	Callee	Z_TYPE_INFO_P		200570	0					
ANR	200597	Identifier	Z_TYPE_INFO_P		200570	0					
ANR	200598	ArgumentList	data		200570	1					
ANR	200599	Argument	data		200570	0					
ANR	200600	Identifier	data		200570	0					
ANR	200601	Identifier	IS_INDIRECT		200570	1					
ANR	200602	CompoundStatement		5:53:97:97	200570	1					
ANR	200603	ExpressionStatement	data = Z_INDIRECT_P ( data )	1656:3:45322:45347	200570	0	True				
ANR	200604	AssignmentExpression	data = Z_INDIRECT_P ( data )		200570	0		=			
ANR	200605	Identifier	data		200570	0					
ANR	200606	CallExpression	Z_INDIRECT_P ( data )		200570	1					
ANR	200607	Callee	Z_INDIRECT_P		200570	0					
ANR	200608	Identifier	Z_INDIRECT_P		200570	0					
ANR	200609	ArgumentList	data		200570	1					
ANR	200610	Argument	data		200570	0					
ANR	200611	Identifier	data		200570	0					
ANR	200612	IfStatement	if ( UNEXPECTED ( Z_TYPE_INFO_P ( data ) == IS_UNDEF ) )		200570	1					
ANR	200613	Condition	UNEXPECTED ( Z_TYPE_INFO_P ( data ) == IS_UNDEF )	1658:6:45359:45401	200570	0	True				
ANR	200614	CallExpression	UNEXPECTED ( Z_TYPE_INFO_P ( data ) == IS_UNDEF )		200570	0					
ANR	200615	Callee	UNEXPECTED		200570	0					
ANR	200616	Identifier	UNEXPECTED		200570	0					
ANR	200617	ArgumentList	Z_TYPE_INFO_P ( data ) == IS_UNDEF		200570	1					
ANR	200618	Argument	Z_TYPE_INFO_P ( data ) == IS_UNDEF		200570	0					
ANR	200619	EqualityExpression	Z_TYPE_INFO_P ( data ) == IS_UNDEF		200570	0		==			
ANR	200620	CallExpression	Z_TYPE_INFO_P ( data )		200570	0					
ANR	200621	Callee	Z_TYPE_INFO_P		200570	0					
ANR	200622	Identifier	Z_TYPE_INFO_P		200570	0					
ANR	200623	ArgumentList	data		200570	1					
ANR	200624	Argument	data		200570	0					
ANR	200625	Identifier	data		200570	0					
ANR	200626	Identifier	IS_UNDEF		200570	1					
ANR	200627	CompoundStatement		8:51:184:184	200570	1					
ANR	200628	ReturnStatement	return 0 ;	1659:3:45409:45417	200570	0	True				
ANR	200629	PrimaryExpression	0		200570	0					
ANR	200630	ElseStatement	else		200570	0					
ANR	200631	IfStatement	if ( ! packed )		200570	0					
ANR	200632	Condition	! packed	1661:12:45435:45441	200570	0	True				
ANR	200633	UnaryOperationExpression	! packed		200570	0					
ANR	200634	UnaryOperator	!		200570	0					
ANR	200635	Identifier	packed		200570	1					
ANR	200636	CompoundStatement		11:21:224:224	200570	1					
ANR	200637	IfStatement	if ( Z_TYPE_INFO_P ( data ) == IS_INDIRECT )		200570	0					
ANR	200638	Condition	Z_TYPE_INFO_P ( data ) == IS_INDIRECT	1663:6:45507:45540	200570	0	True				
ANR	200639	EqualityExpression	Z_TYPE_INFO_P ( data ) == IS_INDIRECT		200570	0		==			
ANR	200640	CallExpression	Z_TYPE_INFO_P ( data )		200570	0					
ANR	200641	Callee	Z_TYPE_INFO_P		200570	0					
ANR	200642	Identifier	Z_TYPE_INFO_P		200570	0					
ANR	200643	ArgumentList	data		200570	1					
ANR	200644	Argument	data		200570	0					
ANR	200645	Identifier	data		200570	0					
ANR	200646	Identifier	IS_INDIRECT		200570	1					
ANR	200647	CompoundStatement		13:42:323:323	200570	1					
ANR	200648	ExpressionStatement	data = Z_INDIRECT_P ( data )	1664:3:45548:45573	200570	0	True				
ANR	200649	AssignmentExpression	data = Z_INDIRECT_P ( data )		200570	0		=			
ANR	200650	Identifier	data		200570	0					
ANR	200651	CallExpression	Z_INDIRECT_P ( data )		200570	1					
ANR	200652	Callee	Z_INDIRECT_P		200570	0					
ANR	200653	Identifier	Z_INDIRECT_P		200570	0					
ANR	200654	ArgumentList	data		200570	1					
ANR	200655	Argument	data		200570	0					
ANR	200656	Identifier	data		200570	0					
ANR	200657	IfStatement	if ( UNEXPECTED ( Z_TYPE_INFO_P ( data ) == IS_UNDEF ) )		200570	1					
ANR	200658	Condition	UNEXPECTED ( Z_TYPE_INFO_P ( data ) == IS_UNDEF )	1665:7:45582:45624	200570	0	True				
ANR	200659	CallExpression	UNEXPECTED ( Z_TYPE_INFO_P ( data ) == IS_UNDEF )		200570	0					
ANR	200660	Callee	UNEXPECTED		200570	0					
ANR	200661	Identifier	UNEXPECTED		200570	0					
ANR	200662	ArgumentList	Z_TYPE_INFO_P ( data ) == IS_UNDEF		200570	1					
ANR	200663	Argument	Z_TYPE_INFO_P ( data ) == IS_UNDEF		200570	0					
ANR	200664	EqualityExpression	Z_TYPE_INFO_P ( data ) == IS_UNDEF		200570	0		==			
ANR	200665	CallExpression	Z_TYPE_INFO_P ( data )		200570	0					
ANR	200666	Callee	Z_TYPE_INFO_P		200570	0					
ANR	200667	Identifier	Z_TYPE_INFO_P		200570	0					
ANR	200668	ArgumentList	data		200570	1					
ANR	200669	Argument	data		200570	0					
ANR	200670	Identifier	data		200570	0					
ANR	200671	Identifier	IS_UNDEF		200570	1					
ANR	200672	CompoundStatement		15:52:407:407	200570	1					
ANR	200673	ReturnStatement	return 0 ;	1666:4:45633:45641	200570	0	True				
ANR	200674	PrimaryExpression	0		200570	0					
ANR	200675	DoStatement	do		200570	2					
ANR	200676	CompoundStatement		21:4:440:440	200570	0					
ANR	200677	IfStatement	if ( Z_OPT_REFCOUNTED_P ( data ) )		200570	0					
ANR	200678	Condition	Z_OPT_REFCOUNTED_P ( data )	1672:6:45668:45691	200570	0	True				
ANR	200679	CallExpression	Z_OPT_REFCOUNTED_P ( data )		200570	0					
ANR	200680	Callee	Z_OPT_REFCOUNTED_P		200570	0					
ANR	200681	Identifier	Z_OPT_REFCOUNTED_P		200570	0					
ANR	200682	ArgumentList	data		200570	1					
ANR	200683	Argument	data		200570	0					
ANR	200684	Identifier	data		200570	0					
ANR	200685	CompoundStatement		22:32:474:474	200570	1					
ANR	200686	IfStatement	if ( Z_ISREF_P ( data ) && Z_REFCOUNT_P ( data ) == 1 && ( Z_TYPE_P ( Z_REFVAL_P ( data ) ) != IS_ARRAY || Z_ARRVAL_P ( Z_REFVAL_P ( data ) ) != source ) )		200570	0					
ANR	200687	Condition	Z_ISREF_P ( data ) && Z_REFCOUNT_P ( data ) == 1 && ( Z_TYPE_P ( Z_REFVAL_P ( data ) ) != IS_ARRAY || Z_ARRVAL_P ( Z_REFVAL_P ( data ) ) != source )	1673:7:45703:45846	200570	0	True				
ANR	200688	AndExpression	Z_ISREF_P ( data ) && Z_REFCOUNT_P ( data ) == 1 && ( Z_TYPE_P ( Z_REFVAL_P ( data ) ) != IS_ARRAY || Z_ARRVAL_P ( Z_REFVAL_P ( data ) ) != source )		200570	0		&&			
ANR	200689	CallExpression	Z_ISREF_P ( data )		200570	0					
ANR	200690	Callee	Z_ISREF_P		200570	0					
ANR	200691	Identifier	Z_ISREF_P		200570	0					
ANR	200692	ArgumentList	data		200570	1					
ANR	200693	Argument	data		200570	0					
ANR	200694	Identifier	data		200570	0					
ANR	200695	AndExpression	Z_REFCOUNT_P ( data ) == 1 && ( Z_TYPE_P ( Z_REFVAL_P ( data ) ) != IS_ARRAY || Z_ARRVAL_P ( Z_REFVAL_P ( data ) ) != source )		200570	1		&&			
ANR	200696	EqualityExpression	Z_REFCOUNT_P ( data ) == 1		200570	0		==			
ANR	200697	CallExpression	Z_REFCOUNT_P ( data )		200570	0					
ANR	200698	Callee	Z_REFCOUNT_P		200570	0					
ANR	200699	Identifier	Z_REFCOUNT_P		200570	0					
ANR	200700	ArgumentList	data		200570	1					
ANR	200701	Argument	data		200570	0					
ANR	200702	Identifier	data		200570	0					
ANR	200703	PrimaryExpression	1		200570	1					
ANR	200704	OrExpression	Z_TYPE_P ( Z_REFVAL_P ( data ) ) != IS_ARRAY || Z_ARRVAL_P ( Z_REFVAL_P ( data ) ) != source		200570	1		||			
ANR	200705	EqualityExpression	Z_TYPE_P ( Z_REFVAL_P ( data ) ) != IS_ARRAY		200570	0		!=			
ANR	200706	CallExpression	Z_TYPE_P ( Z_REFVAL_P ( data ) )		200570	0					
ANR	200707	Callee	Z_TYPE_P		200570	0					
ANR	200708	Identifier	Z_TYPE_P		200570	0					
ANR	200709	ArgumentList	Z_REFVAL_P ( data )		200570	1					
ANR	200710	Argument	Z_REFVAL_P ( data )		200570	0					
ANR	200711	CallExpression	Z_REFVAL_P ( data )		200570	0					
ANR	200712	Callee	Z_REFVAL_P		200570	0					
ANR	200713	Identifier	Z_REFVAL_P		200570	0					
ANR	200714	ArgumentList	data		200570	1					
ANR	200715	Argument	data		200570	0					
ANR	200716	Identifier	data		200570	0					
ANR	200717	Identifier	IS_ARRAY		200570	1					
ANR	200718	EqualityExpression	Z_ARRVAL_P ( Z_REFVAL_P ( data ) ) != source		200570	1		!=			
ANR	200719	CallExpression	Z_ARRVAL_P ( Z_REFVAL_P ( data ) )		200570	0					
ANR	200720	Callee	Z_ARRVAL_P		200570	0					
ANR	200721	Identifier	Z_ARRVAL_P		200570	0					
ANR	200722	ArgumentList	Z_REFVAL_P ( data )		200570	1					
ANR	200723	Argument	Z_REFVAL_P ( data )		200570	0					
ANR	200724	CallExpression	Z_REFVAL_P ( data )		200570	0					
ANR	200725	Callee	Z_REFVAL_P		200570	0					
ANR	200726	Identifier	Z_REFVAL_P		200570	0					
ANR	200727	ArgumentList	data		200570	1					
ANR	200728	Argument	data		200570	0					
ANR	200729	Identifier	data		200570	0					
ANR	200730	Identifier	source		200570	1					
ANR	200731	CompoundStatement		25:50:629:629	200570	1					
ANR	200732	ExpressionStatement	data = Z_REFVAL_P ( data )	1676:4:45855:45878	200570	0	True				
ANR	200733	AssignmentExpression	data = Z_REFVAL_P ( data )		200570	0		=			
ANR	200734	Identifier	data		200570	0					
ANR	200735	CallExpression	Z_REFVAL_P ( data )		200570	1					
ANR	200736	Callee	Z_REFVAL_P		200570	0					
ANR	200737	Identifier	Z_REFVAL_P		200570	0					
ANR	200738	ArgumentList	data		200570	1					
ANR	200739	Argument	data		200570	0					
ANR	200740	Identifier	data		200570	0					
ANR	200741	IfStatement	if ( ! Z_OPT_REFCOUNTED_P ( data ) )		200570	1					
ANR	200742	Condition	! Z_OPT_REFCOUNTED_P ( data )	1677:8:45888:45912	200570	0	True				
ANR	200743	UnaryOperationExpression	! Z_OPT_REFCOUNTED_P ( data )		200570	0					
ANR	200744	UnaryOperator	!		200570	0					
ANR	200745	CallExpression	Z_OPT_REFCOUNTED_P ( data )		200570	1					
ANR	200746	Callee	Z_OPT_REFCOUNTED_P		200570	0					
ANR	200747	Identifier	Z_OPT_REFCOUNTED_P		200570	0					
ANR	200748	ArgumentList	data		200570	1					
ANR	200749	Argument	data		200570	0					
ANR	200750	Identifier	data		200570	0					
ANR	200751	CompoundStatement		27:35:695:695	200570	1					
ANR	200752	BreakStatement	break ;	1678:5:45922:45927	200570	0	True				
ANR	200753	ExpressionStatement	Z_ADDREF_P ( data )	1681:3:45943:45959	200570	1	True				
ANR	200754	CallExpression	Z_ADDREF_P ( data )		200570	0					
ANR	200755	Callee	Z_ADDREF_P		200570	0					
ANR	200756	Identifier	Z_ADDREF_P		200570	0					
ANR	200757	ArgumentList	data		200570	1					
ANR	200758	Argument	data		200570	0					
ANR	200759	Identifier	data		200570	0					
ANR	200760	Condition	0	1683:10:45975:45975	200570	1	True				
ANR	200761	PrimaryExpression	0		200570	0					
ANR	200762	ExpressionStatement	"ZVAL_COPY_VALUE ( & q -> val , data )"	1684:1:45980:46010	200570	3	True				
ANR	200763	CallExpression	"ZVAL_COPY_VALUE ( & q -> val , data )"		200570	0					
ANR	200764	Callee	ZVAL_COPY_VALUE		200570	0					
ANR	200765	Identifier	ZVAL_COPY_VALUE		200570	0					
ANR	200766	ArgumentList	& q -> val		200570	1					
ANR	200767	Argument	& q -> val		200570	0					
ANR	200768	UnaryOperationExpression	& q -> val		200570	0					
ANR	200769	UnaryOperator	&		200570	0					
ANR	200770	PtrMemberAccess	q -> val		200570	1					
ANR	200771	Identifier	q		200570	0					
ANR	200772	Identifier	val		200570	1					
ANR	200773	Argument	data		200570	1					
ANR	200774	Identifier	data		200570	0					
ANR	200775	ExpressionStatement	q -> h = p -> h	1686:1:46014:46025	200570	4	True				
ANR	200776	AssignmentExpression	q -> h = p -> h		200570	0		=			
ANR	200777	PtrMemberAccess	q -> h		200570	0					
ANR	200778	Identifier	q		200570	0					
ANR	200779	Identifier	h		200570	1					
ANR	200780	PtrMemberAccess	p -> h		200570	1					
ANR	200781	Identifier	p		200570	0					
ANR	200782	Identifier	h		200570	1					
ANR	200783	IfStatement	if ( packed )		200570	5					
ANR	200784	Condition	packed	1687:5:46032:46037	200570	0	True				
ANR	200785	Identifier	packed		200570	0					
ANR	200786	CompoundStatement		37:13:820:820	200570	1					
ANR	200787	ExpressionStatement	q -> key = NULL	1688:2:46044:46057	200570	0	True				
ANR	200788	AssignmentExpression	q -> key = NULL		200570	0		=			
ANR	200789	PtrMemberAccess	q -> key		200570	0					
ANR	200790	Identifier	q		200570	0					
ANR	200791	Identifier	key		200570	1					
ANR	200792	Identifier	NULL		200570	1					
ANR	200793	ElseStatement	else		200570	0					
ANR	200794	CompoundStatement		40:2:851:866	200570	0					
ANR	200795	IdentifierDeclStatement	uint32_t nIndex ;	1690:2:46071:46086	200570	0	True				
ANR	200796	IdentifierDecl	nIndex		200570	0					
ANR	200797	IdentifierDeclType	uint32_t		200570	0					
ANR	200798	Identifier	nIndex		200570	1					
ANR	200799	ExpressionStatement	q -> key = p -> key	1692:2:46091:46106	200570	1	True				
ANR	200800	AssignmentExpression	q -> key = p -> key		200570	0		=			
ANR	200801	PtrMemberAccess	q -> key		200570	0					
ANR	200802	Identifier	q		200570	0					
ANR	200803	Identifier	key		200570	1					
ANR	200804	PtrMemberAccess	p -> key		200570	1					
ANR	200805	Identifier	p		200570	0					
ANR	200806	Identifier	key		200570	1					
ANR	200807	IfStatement	if ( ! static_keys && q -> key )		200570	2					
ANR	200808	Condition	! static_keys && q -> key	1693:6:46114:46135	200570	0	True				
ANR	200809	AndExpression	! static_keys && q -> key		200570	0		&&			
ANR	200810	UnaryOperationExpression	! static_keys		200570	0					
ANR	200811	UnaryOperator	!		200570	0					
ANR	200812	Identifier	static_keys		200570	1					
ANR	200813	PtrMemberAccess	q -> key		200570	1					
ANR	200814	Identifier	q		200570	0					
ANR	200815	Identifier	key		200570	1					
ANR	200816	CompoundStatement		43:30:918:918	200570	1					
ANR	200817	ExpressionStatement	zend_string_addref ( q -> key )	1694:3:46143:46169	200570	0	True				
ANR	200818	CallExpression	zend_string_addref ( q -> key )		200570	0					
ANR	200819	Callee	zend_string_addref		200570	0					
ANR	200820	Identifier	zend_string_addref		200570	0					
ANR	200821	ArgumentList	q -> key		200570	1					
ANR	200822	Argument	q -> key		200570	0					
ANR	200823	PtrMemberAccess	q -> key		200570	0					
ANR	200824	Identifier	q		200570	0					
ANR	200825	Identifier	key		200570	1					
ANR	200826	ExpressionStatement	nIndex = q -> h | target -> nTableMask	1697:2:46178:46212	200570	3	True				
ANR	200827	AssignmentExpression	nIndex = q -> h | target -> nTableMask		200570	0		=			
ANR	200828	Identifier	nIndex		200570	0					
ANR	200829	InclusiveOrExpression	q -> h | target -> nTableMask		200570	1		|			
ANR	200830	PtrMemberAccess	q -> h		200570	0					
ANR	200831	Identifier	q		200570	0					
ANR	200832	Identifier	h		200570	1					
ANR	200833	PtrMemberAccess	target -> nTableMask		200570	1					
ANR	200834	Identifier	target		200570	0					
ANR	200835	Identifier	nTableMask		200570	1					
ANR	200836	ExpressionStatement	"Z_NEXT ( q -> val ) = HT_HASH ( target , nIndex )"	1698:2:46216:46256	200570	4	True				
ANR	200837	AssignmentExpression	"Z_NEXT ( q -> val ) = HT_HASH ( target , nIndex )"		200570	0		=			
ANR	200838	CallExpression	Z_NEXT ( q -> val )		200570	0					
ANR	200839	Callee	Z_NEXT		200570	0					
ANR	200840	Identifier	Z_NEXT		200570	0					
ANR	200841	ArgumentList	q -> val		200570	1					
ANR	200842	Argument	q -> val		200570	0					
ANR	200843	PtrMemberAccess	q -> val		200570	0					
ANR	200844	Identifier	q		200570	0					
ANR	200845	Identifier	val		200570	1					
ANR	200846	CallExpression	"HT_HASH ( target , nIndex )"		200570	1					
ANR	200847	Callee	HT_HASH		200570	0					
ANR	200848	Identifier	HT_HASH		200570	0					
ANR	200849	ArgumentList	target		200570	1					
ANR	200850	Argument	target		200570	0					
ANR	200851	Identifier	target		200570	0					
ANR	200852	Argument	nIndex		200570	1					
ANR	200853	Identifier	nIndex		200570	0					
ANR	200854	ExpressionStatement	"HT_HASH ( target , nIndex ) = HT_IDX_TO_HASH ( idx )"	1699:2:46260:46305	200570	5	True				
ANR	200855	AssignmentExpression	"HT_HASH ( target , nIndex ) = HT_IDX_TO_HASH ( idx )"		200570	0		=			
ANR	200856	CallExpression	"HT_HASH ( target , nIndex )"		200570	0					
ANR	200857	Callee	HT_HASH		200570	0					
ANR	200858	Identifier	HT_HASH		200570	0					
ANR	200859	ArgumentList	target		200570	1					
ANR	200860	Argument	target		200570	0					
ANR	200861	Identifier	target		200570	0					
ANR	200862	Argument	nIndex		200570	1					
ANR	200863	Identifier	nIndex		200570	0					
ANR	200864	CallExpression	HT_IDX_TO_HASH ( idx )		200570	1					
ANR	200865	Callee	HT_IDX_TO_HASH		200570	0					
ANR	200866	Identifier	HT_IDX_TO_HASH		200570	0					
ANR	200867	ArgumentList	idx		200570	1					
ANR	200868	Argument	idx		200570	0					
ANR	200869	Identifier	idx		200570	0					
ANR	200870	ReturnStatement	return 1 ;	1701:1:46311:46319	200570	6	True				
ANR	200871	PrimaryExpression	1		200570	0					
ANR	200872	ReturnType	static zend_always_inline int		200570	1					
ANR	200873	Identifier	zend_array_dup_element		200570	2					
ANR	200874	ParameterList	"HashTable * source , HashTable * target , uint32_t idx , Bucket * p , Bucket * q , int packed , int static_keys , int with_holes"		200570	3					
ANR	200875	Parameter	HashTable * source	1650:53:45100:45116	200570	0	True				
ANR	200876	ParameterType	HashTable *		200570	0					
ANR	200877	Identifier	source		200570	1					
ANR	200878	Parameter	HashTable * target	1650:72:45119:45135	200570	1	True				
ANR	200879	ParameterType	HashTable *		200570	0					
ANR	200880	Identifier	target		200570	1					
ANR	200881	Parameter	uint32_t idx	1650:91:45138:45149	200570	2	True				
ANR	200882	ParameterType	uint32_t		200570	0					
ANR	200883	Identifier	idx		200570	1					
ANR	200884	Parameter	Bucket * p	1650:105:45152:45160	200570	3	True				
ANR	200885	ParameterType	Bucket *		200570	0					
ANR	200886	Identifier	p		200570	1					
ANR	200887	Parameter	Bucket * q	1650:116:45163:45171	200570	4	True				
ANR	200888	ParameterType	Bucket *		200570	0					
ANR	200889	Identifier	q		200570	1					
ANR	200890	Parameter	int packed	1650:127:45174:45183	200570	5	True				
ANR	200891	ParameterType	int		200570	0					
ANR	200892	Identifier	packed		200570	1					
ANR	200893	Parameter	int static_keys	1650:139:45186:45200	200570	6	True				
ANR	200894	ParameterType	int		200570	0					
ANR	200895	Identifier	static_keys		200570	1					
ANR	200896	Parameter	int with_holes	1650:156:45203:45216	200570	7	True				
ANR	200897	ParameterType	int		200570	0					
ANR	200898	Identifier	with_holes		200570	1					
ANR	200899	CFGEntryNode	ENTRY		200570		True				
ANR	200900	CFGExitNode	EXIT		200570		True				
ANR	200901	Symbol	data		200570						
ANR	200902	Symbol	Z_INDIRECT_P		200570						
ANR	200903	Symbol	source		200570						
ANR	200904	Symbol	Z_NEXT		200570						
ANR	200905	Symbol	target -> nTableMask		200570						
ANR	200906	Symbol	Z_REFCOUNT_P		200570						
ANR	200907	Symbol	q -> key		200570						
ANR	200908	Symbol	UNEXPECTED		200570						
ANR	200909	Symbol	IS_ARRAY		200570						
ANR	200910	Symbol	HT_HASH		200570						
ANR	200911	Symbol	packed		200570						
ANR	200912	Symbol	Z_ARRVAL_P		200570						
ANR	200913	Symbol	IS_UNDEF		200570						
ANR	200914	Symbol	p -> h		200570						
ANR	200915	Symbol	& p -> val		200570						
ANR	200916	Symbol	& q -> val		200570						
ANR	200917	Symbol	static_keys		200570						
ANR	200918	Symbol	Z_OPT_REFCOUNTED_P		200570						
ANR	200919	Symbol	q -> h		200570						
ANR	200920	Symbol	NULL		200570						
ANR	200921	Symbol	nIndex		200570						
ANR	200922	Symbol	Z_TYPE_P		200570						
ANR	200923	Symbol	HT_IDX_TO_HASH		200570						
ANR	200924	Symbol	Z_TYPE_INFO_P		200570						
ANR	200925	Symbol	p -> key		200570						
ANR	200926	Symbol	target		200570						
ANR	200927	Symbol	p		200570						
ANR	200928	Symbol	* target		200570						
ANR	200929	Symbol	q		200570						
ANR	200930	Symbol	q -> val		200570						
ANR	200931	Symbol	with_holes		200570						
ANR	200932	Symbol	Z_REFVAL_P		200570						
ANR	200933	Symbol	* p		200570						
ANR	200934	Symbol	* q		200570						
ANR	200935	Symbol	idx		200570						
ANR	200936	Symbol	Z_ISREF_P		200570						
ANR	200937	Symbol	IS_INDIRECT		200570						
ANR	200938	Function	zend_array_dup_packed_elements	1704:0:46324:46708							
ANR	200939	FunctionDef	"zend_array_dup_packed_elements (HashTable * source , HashTable * target , int with_holes)"		200938	0					
ANR	200940	CompoundStatement		1705:0:46440:46708	200938	0					
ANR	200941	IdentifierDeclStatement	Bucket * p = source -> arData ;	1706:1:46443:46469	200938	0	True				
ANR	200942	IdentifierDecl	* p = source -> arData		200938	0					
ANR	200943	IdentifierDeclType	Bucket *		200938	0					
ANR	200944	Identifier	p		200938	1					
ANR	200945	AssignmentExpression	* p = source -> arData		200938	2		=			
ANR	200946	Identifier	p		200938	0					
ANR	200947	PtrMemberAccess	source -> arData		200938	1					
ANR	200948	Identifier	source		200938	0					
ANR	200949	Identifier	arData		200938	1					
ANR	200950	IdentifierDeclStatement	Bucket * q = target -> arData ;	1707:1:46472:46498	200938	1	True				
ANR	200951	IdentifierDecl	* q = target -> arData		200938	0					
ANR	200952	IdentifierDeclType	Bucket *		200938	0					
ANR	200953	Identifier	q		200938	1					
ANR	200954	AssignmentExpression	* q = target -> arData		200938	2		=			
ANR	200955	Identifier	q		200938	0					
ANR	200956	PtrMemberAccess	target -> arData		200938	1					
ANR	200957	Identifier	target		200938	0					
ANR	200958	Identifier	arData		200938	1					
ANR	200959	IdentifierDeclStatement	Bucket * end = p + source -> nNumUsed ;	1708:1:46501:46535	200938	2	True				
ANR	200960	IdentifierDecl	* end = p + source -> nNumUsed		200938	0					
ANR	200961	IdentifierDeclType	Bucket *		200938	0					
ANR	200962	Identifier	end		200938	1					
ANR	200963	AssignmentExpression	* end = p + source -> nNumUsed		200938	2		=			
ANR	200964	Identifier	end		200938	0					
ANR	200965	AdditiveExpression	p + source -> nNumUsed		200938	1		+			
ANR	200966	Identifier	p		200938	0					
ANR	200967	PtrMemberAccess	source -> nNumUsed		200938	1					
ANR	200968	Identifier	source		200938	0					
ANR	200969	Identifier	nNumUsed		200938	1					
ANR	200970	DoStatement	do		200938	3					
ANR	200971	CompoundStatement		6:4:101:101	200938	0					
ANR	200972	IfStatement	"if ( ! zend_array_dup_element ( source , target , 0 , p , q , 1 , 1 , with_holes ) )"		200938	0					
ANR	200973	Condition	"! zend_array_dup_element ( source , target , 0 , p , q , 1 , 1 , with_holes )"	1711:6:46550:46615	200938	0	True				
ANR	200974	UnaryOperationExpression	"! zend_array_dup_element ( source , target , 0 , p , q , 1 , 1 , with_holes )"		200938	0					
ANR	200975	UnaryOperator	!		200938	0					
ANR	200976	CallExpression	"zend_array_dup_element ( source , target , 0 , p , q , 1 , 1 , with_holes )"		200938	1					
ANR	200977	Callee	zend_array_dup_element		200938	0					
ANR	200978	Identifier	zend_array_dup_element		200938	0					
ANR	200979	ArgumentList	source		200938	1					
ANR	200980	Argument	source		200938	0					
ANR	200981	Identifier	source		200938	0					
ANR	200982	Argument	target		200938	1					
ANR	200983	Identifier	target		200938	0					
ANR	200984	Argument	0		200938	2					
ANR	200985	PrimaryExpression	0		200938	0					
ANR	200986	Argument	p		200938	3					
ANR	200987	Identifier	p		200938	0					
ANR	200988	Argument	q		200938	4					
ANR	200989	Identifier	q		200938	0					
ANR	200990	Argument	1		200938	5					
ANR	200991	PrimaryExpression	1		200938	0					
ANR	200992	Argument	1		200938	6					
ANR	200993	PrimaryExpression	1		200938	0					
ANR	200994	Argument	with_holes		200938	7					
ANR	200995	Identifier	with_holes		200938	0					
ANR	200996	CompoundStatement		7:74:177:177	200938	1					
ANR	200997	IfStatement	if ( with_holes )		200938	0					
ANR	200998	Condition	with_holes	1712:7:46627:46636	200938	0	True				
ANR	200999	Identifier	with_holes		200938	0					
ANR	201000	CompoundStatement		8:19:198:198	200938	1					
ANR	201001	ExpressionStatement	ZVAL_UNDEF ( & q -> val )	1713:4:46645:46664	200938	0	True				
ANR	201002	CallExpression	ZVAL_UNDEF ( & q -> val )		200938	0					
ANR	201003	Callee	ZVAL_UNDEF		200938	0					
ANR	201004	Identifier	ZVAL_UNDEF		200938	0					
ANR	201005	ArgumentList	& q -> val		200938	1					
ANR	201006	Argument	& q -> val		200938	0					
ANR	201007	UnaryOperationExpression	& q -> val		200938	0					
ANR	201008	UnaryOperator	&		200938	0					
ANR	201009	PtrMemberAccess	q -> val		200938	1					
ANR	201010	Identifier	q		200938	0					
ANR	201011	Identifier	val		200938	1					
ANR	201012	ExpressionStatement	p ++	1716:2:46677:46680	200938	1	True				
ANR	201013	PostIncDecOperationExpression	p ++		200938	0					
ANR	201014	Identifier	p		200938	0					
ANR	201015	IncDec	++		200938	1					
ANR	201016	ExpressionStatement	q ++	1716:7:46682:46685	200938	2	True				
ANR	201017	PostIncDecOperationExpression	q ++		200938	0					
ANR	201018	Identifier	q		200938	0					
ANR	201019	IncDec	++		200938	1					
ANR	201020	Condition	p != end	1717:10:46697:46704	200938	1	True				
ANR	201021	EqualityExpression	p != end		200938	0		!=			
ANR	201022	Identifier	p		200938	0					
ANR	201023	Identifier	end		200938	1					
ANR	201024	ReturnType	static zend_always_inline void		200938	1					
ANR	201025	Identifier	zend_array_dup_packed_elements		200938	2					
ANR	201026	ParameterList	"HashTable * source , HashTable * target , int with_holes"		200938	3					
ANR	201027	Parameter	HashTable * source	1704:62:46386:46402	200938	0	True				
ANR	201028	ParameterType	HashTable *		200938	0					
ANR	201029	Identifier	source		200938	1					
ANR	201030	Parameter	HashTable * target	1704:81:46405:46421	200938	1	True				
ANR	201031	ParameterType	HashTable *		200938	0					
ANR	201032	Identifier	target		200938	1					
ANR	201033	Parameter	int with_holes	1704:100:46424:46437	200938	2	True				
ANR	201034	ParameterType	int		200938	0					
ANR	201035	Identifier	with_holes		200938	1					
ANR	201036	CFGEntryNode	ENTRY		200938		True				
ANR	201037	CFGExitNode	EXIT		200938		True				
ANR	201038	Symbol	source -> nNumUsed		200938						
ANR	201039	Symbol	source -> arData		200938						
ANR	201040	Symbol	source		200938						
ANR	201041	Symbol	target		200938						
ANR	201042	Symbol	p		200938						
ANR	201043	Symbol	* target		200938						
ANR	201044	Symbol	q		200938						
ANR	201045	Symbol	with_holes		200938						
ANR	201046	Symbol	* source		200938						
ANR	201047	Symbol	target -> arData		200938						
ANR	201048	Symbol	end		200938						
ANR	201049	Symbol	zend_array_dup_element		200938						
ANR	201050	Symbol	& q -> val		200938						
ANR	201051	Function	zend_array_dup_elements	1720:0:46711:47445							
ANR	201052	FunctionDef	"zend_array_dup_elements (HashTable * source , HashTable * target , int static_keys , int with_holes)"		201051	0					
ANR	201053	CompoundStatement		1721:0:46841:47445	201051	0					
ANR	201054	IdentifierDeclStatement	uint32_t idx = 0 ;	1722:4:46847:46863	201051	0	True				
ANR	201055	IdentifierDecl	idx = 0		201051	0					
ANR	201056	IdentifierDeclType	uint32_t		201051	0					
ANR	201057	Identifier	idx		201051	1					
ANR	201058	AssignmentExpression	idx = 0		201051	2		=			
ANR	201059	Identifier	idx		201051	0					
ANR	201060	PrimaryExpression	0		201051	1					
ANR	201061	IdentifierDeclStatement	Bucket * p = source -> arData ;	1723:1:46866:46892	201051	1	True				
ANR	201062	IdentifierDecl	* p = source -> arData		201051	0					
ANR	201063	IdentifierDeclType	Bucket *		201051	0					
ANR	201064	Identifier	p		201051	1					
ANR	201065	AssignmentExpression	* p = source -> arData		201051	2		=			
ANR	201066	Identifier	p		201051	0					
ANR	201067	PtrMemberAccess	source -> arData		201051	1					
ANR	201068	Identifier	source		201051	0					
ANR	201069	Identifier	arData		201051	1					
ANR	201070	IdentifierDeclStatement	Bucket * q = target -> arData ;	1724:1:46895:46921	201051	2	True				
ANR	201071	IdentifierDecl	* q = target -> arData		201051	0					
ANR	201072	IdentifierDeclType	Bucket *		201051	0					
ANR	201073	Identifier	q		201051	1					
ANR	201074	AssignmentExpression	* q = target -> arData		201051	2		=			
ANR	201075	Identifier	q		201051	0					
ANR	201076	PtrMemberAccess	target -> arData		201051	1					
ANR	201077	Identifier	target		201051	0					
ANR	201078	Identifier	arData		201051	1					
ANR	201079	IdentifierDeclStatement	Bucket * end = p + source -> nNumUsed ;	1725:1:46924:46958	201051	3	True				
ANR	201080	IdentifierDecl	* end = p + source -> nNumUsed		201051	0					
ANR	201081	IdentifierDeclType	Bucket *		201051	0					
ANR	201082	Identifier	end		201051	1					
ANR	201083	AssignmentExpression	* end = p + source -> nNumUsed		201051	2		=			
ANR	201084	Identifier	end		201051	0					
ANR	201085	AdditiveExpression	p + source -> nNumUsed		201051	1		+			
ANR	201086	Identifier	p		201051	0					
ANR	201087	PtrMemberAccess	source -> nNumUsed		201051	1					
ANR	201088	Identifier	source		201051	0					
ANR	201089	Identifier	nNumUsed		201051	1					
ANR	201090	DoStatement	do		201051	4					
ANR	201091	CompoundStatement		7:4:123:123	201051	0					
ANR	201092	IfStatement	"if ( ! zend_array_dup_element ( source , target , idx , p , q , 0 , static_keys , with_holes ) )"		201051	0					
ANR	201093	Condition	"! zend_array_dup_element ( source , target , idx , p , q , 0 , static_keys , with_holes )"	1728:6:46973:47050	201051	0	True				
ANR	201094	UnaryOperationExpression	"! zend_array_dup_element ( source , target , idx , p , q , 0 , static_keys , with_holes )"		201051	0					
ANR	201095	UnaryOperator	!		201051	0					
ANR	201096	CallExpression	"zend_array_dup_element ( source , target , idx , p , q , 0 , static_keys , with_holes )"		201051	1					
ANR	201097	Callee	zend_array_dup_element		201051	0					
ANR	201098	Identifier	zend_array_dup_element		201051	0					
ANR	201099	ArgumentList	source		201051	1					
ANR	201100	Argument	source		201051	0					
ANR	201101	Identifier	source		201051	0					
ANR	201102	Argument	target		201051	1					
ANR	201103	Identifier	target		201051	0					
ANR	201104	Argument	idx		201051	2					
ANR	201105	Identifier	idx		201051	0					
ANR	201106	Argument	p		201051	3					
ANR	201107	Identifier	p		201051	0					
ANR	201108	Argument	q		201051	4					
ANR	201109	Identifier	q		201051	0					
ANR	201110	Argument	0		201051	5					
ANR	201111	PrimaryExpression	0		201051	0					
ANR	201112	Argument	static_keys		201051	6					
ANR	201113	Identifier	static_keys		201051	0					
ANR	201114	Argument	with_holes		201051	7					
ANR	201115	Identifier	with_holes		201051	0					
ANR	201116	CompoundStatement		9:3:216:241	201051	1					
ANR	201117	IdentifierDeclStatement	uint32_t target_idx = idx ;	1729:3:47058:47083	201051	0	True				
ANR	201118	IdentifierDecl	target_idx = idx		201051	0					
ANR	201119	IdentifierDeclType	uint32_t		201051	0					
ANR	201120	Identifier	target_idx		201051	1					
ANR	201121	AssignmentExpression	target_idx = idx		201051	2		=			
ANR	201122	Identifier	idx		201051	0					
ANR	201123	Identifier	idx		201051	1					
ANR	201124	ExpressionStatement	idx ++	1731:3:47089:47094	201051	1	True				
ANR	201125	PostIncDecOperationExpression	idx ++		201051	0					
ANR	201126	Identifier	idx		201051	0					
ANR	201127	IncDec	++		201051	1					
ANR	201128	ExpressionStatement	p ++	1731:10:47096:47099	201051	2	True				
ANR	201129	PostIncDecOperationExpression	p ++		201051	0					
ANR	201130	Identifier	p		201051	0					
ANR	201131	IncDec	++		201051	1					
ANR	201132	WhileStatement	while ( p != end )		201051	3					
ANR	201133	Condition	p != end	1732:10:47111:47118	201051	0	True				
ANR	201134	EqualityExpression	p != end		201051	0		!=			
ANR	201135	Identifier	p		201051	0					
ANR	201136	Identifier	end		201051	1					
ANR	201137	CompoundStatement		12:20:279:279	201051	1					
ANR	201138	IfStatement	"if ( zend_array_dup_element ( source , target , target_idx , p , q , 0 , static_keys , with_holes ) )"		201051	0					
ANR	201139	Condition	"zend_array_dup_element ( source , target , target_idx , p , q , 0 , static_keys , with_holes )"	1733:8:47131:47214	201051	0	True				
ANR	201140	CallExpression	"zend_array_dup_element ( source , target , target_idx , p , q , 0 , static_keys , with_holes )"		201051	0					
ANR	201141	Callee	zend_array_dup_element		201051	0					
ANR	201142	Identifier	zend_array_dup_element		201051	0					
ANR	201143	ArgumentList	source		201051	1					
ANR	201144	Argument	source		201051	0					
ANR	201145	Identifier	source		201051	0					
ANR	201146	Argument	target		201051	1					
ANR	201147	Identifier	target		201051	0					
ANR	201148	Argument	target_idx		201051	2					
ANR	201149	Identifier	target_idx		201051	0					
ANR	201150	Argument	p		201051	3					
ANR	201151	Identifier	p		201051	0					
ANR	201152	Argument	q		201051	4					
ANR	201153	Identifier	q		201051	0					
ANR	201154	Argument	0		201051	5					
ANR	201155	PrimaryExpression	0		201051	0					
ANR	201156	Argument	static_keys		201051	6					
ANR	201157	Identifier	static_keys		201051	0					
ANR	201158	Argument	with_holes		201051	7					
ANR	201159	Identifier	with_holes		201051	0					
ANR	201160	CompoundStatement		13:94:375:375	201051	1					
ANR	201161	IfStatement	if ( source -> nInternalPointer == idx )		201051	0					
ANR	201162	Condition	source -> nInternalPointer == idx	1734:9:47228:47258	201051	0	True				
ANR	201163	EqualityExpression	source -> nInternalPointer == idx		201051	0		==			
ANR	201164	PtrMemberAccess	source -> nInternalPointer		201051	0					
ANR	201165	Identifier	source		201051	0					
ANR	201166	Identifier	nInternalPointer		201051	1					
ANR	201167	Identifier	idx		201051	1					
ANR	201168	CompoundStatement		14:42:419:419	201051	1					
ANR	201169	ExpressionStatement	target -> nInternalPointer = target_idx	1735:6:47269:47306	201051	0	True				
ANR	201170	AssignmentExpression	target -> nInternalPointer = target_idx		201051	0		=			
ANR	201171	PtrMemberAccess	target -> nInternalPointer		201051	0					
ANR	201172	Identifier	target		201051	0					
ANR	201173	Identifier	nInternalPointer		201051	1					
ANR	201174	Identifier	target_idx		201051	1					
ANR	201175	ExpressionStatement	target_idx ++	1737:5:47320:47332	201051	1	True				
ANR	201176	PostIncDecOperationExpression	target_idx ++		201051	0					
ANR	201177	Identifier	target_idx		201051	0					
ANR	201178	IncDec	++		201051	1					
ANR	201179	ExpressionStatement	q ++	1737:19:47334:47337	201051	2	True				
ANR	201180	PostIncDecOperationExpression	q ++		201051	0					
ANR	201181	Identifier	q		201051	0					
ANR	201182	IncDec	++		201051	1					
ANR	201183	ExpressionStatement	idx ++	1739:4:47349:47354	201051	1	True				
ANR	201184	PostIncDecOperationExpression	idx ++		201051	0					
ANR	201185	Identifier	idx		201051	0					
ANR	201186	IncDec	++		201051	1					
ANR	201187	ExpressionStatement	p ++	1739:11:47356:47359	201051	2	True				
ANR	201188	PostIncDecOperationExpression	p ++		201051	0					
ANR	201189	Identifier	p		201051	0					
ANR	201190	IncDec	++		201051	1					
ANR	201191	ReturnStatement	return target_idx ;	1741:3:47369:47386	201051	4	True				
ANR	201192	Identifier	target_idx		201051	0					
ANR	201193	ExpressionStatement	idx ++	1743:2:47394:47399	201051	1	True				
ANR	201194	PostIncDecOperationExpression	idx ++		201051	0					
ANR	201195	Identifier	idx		201051	0					
ANR	201196	IncDec	++		201051	1					
ANR	201197	ExpressionStatement	p ++	1743:9:47401:47404	201051	2	True				
ANR	201198	PostIncDecOperationExpression	p ++		201051	0					
ANR	201199	Identifier	p		201051	0					
ANR	201200	IncDec	++		201051	1					
ANR	201201	ExpressionStatement	q ++	1743:14:47406:47409	201051	3	True				
ANR	201202	PostIncDecOperationExpression	q ++		201051	0					
ANR	201203	Identifier	q		201051	0					
ANR	201204	IncDec	++		201051	1					
ANR	201205	Condition	p != end	1744:10:47421:47428	201051	1	True				
ANR	201206	EqualityExpression	p != end		201051	0		!=			
ANR	201207	Identifier	p		201051	0					
ANR	201208	Identifier	end		201051	1					
ANR	201209	ReturnStatement	return idx ;	1745:1:47433:47443	201051	5	True				
ANR	201210	Identifier	idx		201051	0					
ANR	201211	ReturnType	static zend_always_inline uint32_t		201051	1					
ANR	201212	Identifier	zend_array_dup_elements		201051	2					
ANR	201213	ParameterList	"HashTable * source , HashTable * target , int static_keys , int with_holes"		201051	3					
ANR	201214	Parameter	HashTable * source	1720:59:46770:46786	201051	0	True				
ANR	201215	ParameterType	HashTable *		201051	0					
ANR	201216	Identifier	source		201051	1					
ANR	201217	Parameter	HashTable * target	1720:78:46789:46805	201051	1	True				
ANR	201218	ParameterType	HashTable *		201051	0					
ANR	201219	Identifier	target		201051	1					
ANR	201220	Parameter	int static_keys	1720:97:46808:46822	201051	2	True				
ANR	201221	ParameterType	int		201051	0					
ANR	201222	Identifier	static_keys		201051	1					
ANR	201223	Parameter	int with_holes	1720:114:46825:46838	201051	3	True				
ANR	201224	ParameterType	int		201051	0					
ANR	201225	Identifier	with_holes		201051	1					
ANR	201226	CFGEntryNode	ENTRY		201051		True				
ANR	201227	CFGExitNode	EXIT		201051		True				
ANR	201228	Symbol	static_keys		201051						
ANR	201229	Symbol	source -> nNumUsed		201051						
ANR	201230	Symbol	source -> nInternalPointer		201051						
ANR	201231	Symbol	source -> arData		201051						
ANR	201232	Symbol	target_idx		201051						
ANR	201233	Symbol	source		201051						
ANR	201234	Symbol	target		201051						
ANR	201235	Symbol	p		201051						
ANR	201236	Symbol	* target		201051						
ANR	201237	Symbol	q		201051						
ANR	201238	Symbol	with_holes		201051						
ANR	201239	Symbol	* source		201051						
ANR	201240	Symbol	target -> arData		201051						
ANR	201241	Symbol	end		201051						
ANR	201242	Symbol	target -> nInternalPointer		201051						
ANR	201243	Symbol	zend_array_dup_element		201051						
ANR	201244	Symbol	idx		201051						
ANR	201245	Function	zend_array_dup	1748:20:47468:50692							
ANR	201246	FunctionDef	zend_array_dup (HashTable * source)		201245	0					
ANR	201247	CompoundStatement		1749:0:47516:50692	201245	0					
ANR	201248	IdentifierDeclStatement	uint32_t idx ;	1750:4:47522:47534	201245	0	True				
ANR	201249	IdentifierDecl	idx		201245	0					
ANR	201250	IdentifierDeclType	uint32_t		201245	0					
ANR	201251	Identifier	idx		201245	1					
ANR	201252	IdentifierDeclStatement	HashTable * target ;	1751:1:47537:47554	201245	1	True				
ANR	201253	IdentifierDecl	* target		201245	0					
ANR	201254	IdentifierDeclType	HashTable *		201245	0					
ANR	201255	Identifier	target		201245	1					
ANR	201256	ExpressionStatement	IS_CONSISTENT ( source )	1753:1:47558:47579	201245	2	True				
ANR	201257	CallExpression	IS_CONSISTENT ( source )		201245	0					
ANR	201258	Callee	IS_CONSISTENT		201245	0					
ANR	201259	Identifier	IS_CONSISTENT		201245	0					
ANR	201260	ArgumentList	source		201245	1					
ANR	201261	Argument	source		201245	0					
ANR	201262	Identifier	source		201245	0					
ANR	201263	ExpressionStatement	ALLOC_HASHTABLE ( target )	1755:1:47583:47606	201245	3	True				
ANR	201264	CallExpression	ALLOC_HASHTABLE ( target )		201245	0					
ANR	201265	Callee	ALLOC_HASHTABLE		201245	0					
ANR	201266	Identifier	ALLOC_HASHTABLE		201245	0					
ANR	201267	ArgumentList	target		201245	1					
ANR	201268	Argument	target		201245	0					
ANR	201269	Identifier	target		201245	0					
ANR	201270	ExpressionStatement	GC_REFCOUNT ( target ) = 1	1756:1:47609:47632	201245	4	True				
ANR	201271	AssignmentExpression	GC_REFCOUNT ( target ) = 1		201245	0		=			
ANR	201272	CallExpression	GC_REFCOUNT ( target )		201245	0					
ANR	201273	Callee	GC_REFCOUNT		201245	0					
ANR	201274	Identifier	GC_REFCOUNT		201245	0					
ANR	201275	ArgumentList	target		201245	1					
ANR	201276	Argument	target		201245	0					
ANR	201277	Identifier	target		201245	0					
ANR	201278	PrimaryExpression	1		201245	1					
ANR	201279	ExpressionStatement	GC_TYPE_INFO ( target ) = IS_ARRAY	1757:1:47635:47666	201245	5	True				
ANR	201280	AssignmentExpression	GC_TYPE_INFO ( target ) = IS_ARRAY		201245	0		=			
ANR	201281	CallExpression	GC_TYPE_INFO ( target )		201245	0					
ANR	201282	Callee	GC_TYPE_INFO		201245	0					
ANR	201283	Identifier	GC_TYPE_INFO		201245	0					
ANR	201284	ArgumentList	target		201245	1					
ANR	201285	Argument	target		201245	0					
ANR	201286	Identifier	target		201245	0					
ANR	201287	Identifier	IS_ARRAY		201245	1					
ANR	201288	ExpressionStatement	target -> nTableSize = source -> nTableSize	1759:1:47670:47709	201245	6	True				
ANR	201289	AssignmentExpression	target -> nTableSize = source -> nTableSize		201245	0		=			
ANR	201290	PtrMemberAccess	target -> nTableSize		201245	0					
ANR	201291	Identifier	target		201245	0					
ANR	201292	Identifier	nTableSize		201245	1					
ANR	201293	PtrMemberAccess	source -> nTableSize		201245	1					
ANR	201294	Identifier	source		201245	0					
ANR	201295	Identifier	nTableSize		201245	1					
ANR	201296	ExpressionStatement	target -> pDestructor = source -> pDestructor	1760:1:47712:47753	201245	7	True				
ANR	201297	AssignmentExpression	target -> pDestructor = source -> pDestructor		201245	0		=			
ANR	201298	PtrMemberAccess	target -> pDestructor		201245	0					
ANR	201299	Identifier	target		201245	0					
ANR	201300	Identifier	pDestructor		201245	1					
ANR	201301	PtrMemberAccess	source -> pDestructor		201245	1					
ANR	201302	Identifier	source		201245	0					
ANR	201303	Identifier	pDestructor		201245	1					
ANR	201304	IfStatement	if ( source -> nNumUsed == 0 )		201245	8					
ANR	201305	Condition	source -> nNumUsed == 0	1762:5:47761:47781	201245	0	True				
ANR	201306	EqualityExpression	source -> nNumUsed == 0		201245	0		==			
ANR	201307	PtrMemberAccess	source -> nNumUsed		201245	0					
ANR	201308	Identifier	source		201245	0					
ANR	201309	Identifier	nNumUsed		201245	1					
ANR	201310	PrimaryExpression	0		201245	1					
ANR	201311	CompoundStatement		14:28:267:267	201245	1					
ANR	201312	ExpressionStatement	target -> u . flags = ( source -> u . flags & ~ ( HASH_FLAG_INITIALIZED | HASH_FLAG_PACKED | HASH_FLAG_PERSISTENT ) ) | HASH_FLAG_APPLY_PROTECTION | HASH_FLAG_STATIC_KEYS	1763:2:47788:47941	201245	0	True				
ANR	201313	AssignmentExpression	target -> u . flags = ( source -> u . flags & ~ ( HASH_FLAG_INITIALIZED | HASH_FLAG_PACKED | HASH_FLAG_PERSISTENT ) ) | HASH_FLAG_APPLY_PROTECTION | HASH_FLAG_STATIC_KEYS		201245	0		=			
ANR	201314	MemberAccess	target -> u . flags		201245	0					
ANR	201315	PtrMemberAccess	target -> u		201245	0					
ANR	201316	Identifier	target		201245	0					
ANR	201317	Identifier	u		201245	1					
ANR	201318	Identifier	flags		201245	1					
ANR	201319	InclusiveOrExpression	( source -> u . flags & ~ ( HASH_FLAG_INITIALIZED | HASH_FLAG_PACKED | HASH_FLAG_PERSISTENT ) ) | HASH_FLAG_APPLY_PROTECTION | HASH_FLAG_STATIC_KEYS		201245	1		|			
ANR	201320	BitAndExpression	source -> u . flags & ~ ( HASH_FLAG_INITIALIZED | HASH_FLAG_PACKED | HASH_FLAG_PERSISTENT )		201245	0		&			
ANR	201321	MemberAccess	source -> u . flags		201245	0					
ANR	201322	PtrMemberAccess	source -> u		201245	0					
ANR	201323	Identifier	source		201245	0					
ANR	201324	Identifier	u		201245	1					
ANR	201325	Identifier	flags		201245	1					
ANR	201326	UnaryOperationExpression	~ ( HASH_FLAG_INITIALIZED | HASH_FLAG_PACKED | HASH_FLAG_PERSISTENT )		201245	1					
ANR	201327	UnaryOperator	~		201245	0					
ANR	201328	InclusiveOrExpression	HASH_FLAG_INITIALIZED | HASH_FLAG_PACKED | HASH_FLAG_PERSISTENT		201245	1		|			
ANR	201329	Identifier	HASH_FLAG_INITIALIZED		201245	0					
ANR	201330	InclusiveOrExpression	HASH_FLAG_PACKED | HASH_FLAG_PERSISTENT		201245	1		|			
ANR	201331	Identifier	HASH_FLAG_PACKED		201245	0					
ANR	201332	Identifier	HASH_FLAG_PERSISTENT		201245	1					
ANR	201333	InclusiveOrExpression	HASH_FLAG_APPLY_PROTECTION | HASH_FLAG_STATIC_KEYS		201245	1		|			
ANR	201334	Identifier	HASH_FLAG_APPLY_PROTECTION		201245	0					
ANR	201335	Identifier	HASH_FLAG_STATIC_KEYS		201245	1					
ANR	201336	ExpressionStatement	target -> nTableMask = HT_MIN_MASK	1764:2:47945:47977	201245	1	True				
ANR	201337	AssignmentExpression	target -> nTableMask = HT_MIN_MASK		201245	0		=			
ANR	201338	PtrMemberAccess	target -> nTableMask		201245	0					
ANR	201339	Identifier	target		201245	0					
ANR	201340	Identifier	nTableMask		201245	1					
ANR	201341	Identifier	HT_MIN_MASK		201245	1					
ANR	201342	ExpressionStatement	target -> nNumUsed = 0	1765:2:47981:48001	201245	2	True				
ANR	201343	AssignmentExpression	target -> nNumUsed = 0		201245	0		=			
ANR	201344	PtrMemberAccess	target -> nNumUsed		201245	0					
ANR	201345	Identifier	target		201245	0					
ANR	201346	Identifier	nNumUsed		201245	1					
ANR	201347	PrimaryExpression	0		201245	1					
ANR	201348	ExpressionStatement	target -> nNumOfElements = 0	1766:2:48005:48031	201245	3	True				
ANR	201349	AssignmentExpression	target -> nNumOfElements = 0		201245	0		=			
ANR	201350	PtrMemberAccess	target -> nNumOfElements		201245	0					
ANR	201351	Identifier	target		201245	0					
ANR	201352	Identifier	nNumOfElements		201245	1					
ANR	201353	PrimaryExpression	0		201245	1					
ANR	201354	ExpressionStatement	target -> nNextFreeElement = 0	1767:2:48035:48063	201245	4	True				
ANR	201355	AssignmentExpression	target -> nNextFreeElement = 0		201245	0		=			
ANR	201356	PtrMemberAccess	target -> nNextFreeElement		201245	0					
ANR	201357	Identifier	target		201245	0					
ANR	201358	Identifier	nNextFreeElement		201245	1					
ANR	201359	PrimaryExpression	0		201245	1					
ANR	201360	ExpressionStatement	target -> nInternalPointer = HT_INVALID_IDX	1768:2:48067:48108	201245	5	True				
ANR	201361	AssignmentExpression	target -> nInternalPointer = HT_INVALID_IDX		201245	0		=			
ANR	201362	PtrMemberAccess	target -> nInternalPointer		201245	0					
ANR	201363	Identifier	target		201245	0					
ANR	201364	Identifier	nInternalPointer		201245	1					
ANR	201365	Identifier	HT_INVALID_IDX		201245	1					
ANR	201366	ExpressionStatement	"HT_SET_DATA_ADDR ( target , & uninitialized_bucket )"	1769:2:48112:48159	201245	6	True				
ANR	201367	CallExpression	"HT_SET_DATA_ADDR ( target , & uninitialized_bucket )"		201245	0					
ANR	201368	Callee	HT_SET_DATA_ADDR		201245	0					
ANR	201369	Identifier	HT_SET_DATA_ADDR		201245	0					
ANR	201370	ArgumentList	target		201245	1					
ANR	201371	Argument	target		201245	0					
ANR	201372	Identifier	target		201245	0					
ANR	201373	Argument	& uninitialized_bucket		201245	1					
ANR	201374	UnaryOperationExpression	& uninitialized_bucket		201245	0					
ANR	201375	UnaryOperator	&		201245	0					
ANR	201376	Identifier	uninitialized_bucket		201245	1					
ANR	201377	ElseStatement	else		201245	0					
ANR	201378	IfStatement	if ( GC_FLAGS ( source ) & IS_ARRAY_IMMUTABLE )		201245	0					
ANR	201379	Condition	GC_FLAGS ( source ) & IS_ARRAY_IMMUTABLE	1770:12:48173:48209	201245	0	True				
ANR	201380	BitAndExpression	GC_FLAGS ( source ) & IS_ARRAY_IMMUTABLE		201245	0		&			
ANR	201381	CallExpression	GC_FLAGS ( source )		201245	0					
ANR	201382	Callee	GC_FLAGS		201245	0					
ANR	201383	Identifier	GC_FLAGS		201245	0					
ANR	201384	ArgumentList	source		201245	1					
ANR	201385	Argument	source		201245	0					
ANR	201386	Identifier	source		201245	0					
ANR	201387	Identifier	IS_ARRAY_IMMUTABLE		201245	1					
ANR	201388	CompoundStatement		22:51:695:695	201245	1					
ANR	201389	ExpressionStatement	target -> u . flags = ( source -> u . flags & ~HASH_FLAG_PERSISTENT ) | HASH_FLAG_APPLY_PROTECTION	1771:2:48216:48304	201245	0	True				
ANR	201390	AssignmentExpression	target -> u . flags = ( source -> u . flags & ~HASH_FLAG_PERSISTENT ) | HASH_FLAG_APPLY_PROTECTION		201245	0		=			
ANR	201391	MemberAccess	target -> u . flags		201245	0					
ANR	201392	PtrMemberAccess	target -> u		201245	0					
ANR	201393	Identifier	target		201245	0					
ANR	201394	Identifier	u		201245	1					
ANR	201395	Identifier	flags		201245	1					
ANR	201396	InclusiveOrExpression	( source -> u . flags & ~HASH_FLAG_PERSISTENT ) | HASH_FLAG_APPLY_PROTECTION		201245	1		|			
ANR	201397	BitAndExpression	source -> u . flags & ~HASH_FLAG_PERSISTENT		201245	0		&			
ANR	201398	MemberAccess	source -> u . flags		201245	0					
ANR	201399	PtrMemberAccess	source -> u		201245	0					
ANR	201400	Identifier	source		201245	0					
ANR	201401	Identifier	u		201245	1					
ANR	201402	Identifier	flags		201245	1					
ANR	201403	Identifier	~HASH_FLAG_PERSISTENT		201245	1					
ANR	201404	Identifier	HASH_FLAG_APPLY_PROTECTION		201245	1					
ANR	201405	ExpressionStatement	target -> nTableMask = source -> nTableMask	1772:2:48308:48347	201245	1	True				
ANR	201406	AssignmentExpression	target -> nTableMask = source -> nTableMask		201245	0		=			
ANR	201407	PtrMemberAccess	target -> nTableMask		201245	0					
ANR	201408	Identifier	target		201245	0					
ANR	201409	Identifier	nTableMask		201245	1					
ANR	201410	PtrMemberAccess	source -> nTableMask		201245	1					
ANR	201411	Identifier	source		201245	0					
ANR	201412	Identifier	nTableMask		201245	1					
ANR	201413	ExpressionStatement	target -> nNumUsed = source -> nNumUsed	1773:2:48351:48386	201245	2	True				
ANR	201414	AssignmentExpression	target -> nNumUsed = source -> nNumUsed		201245	0		=			
ANR	201415	PtrMemberAccess	target -> nNumUsed		201245	0					
ANR	201416	Identifier	target		201245	0					
ANR	201417	Identifier	nNumUsed		201245	1					
ANR	201418	PtrMemberAccess	source -> nNumUsed		201245	1					
ANR	201419	Identifier	source		201245	0					
ANR	201420	Identifier	nNumUsed		201245	1					
ANR	201421	ExpressionStatement	target -> nNumOfElements = source -> nNumOfElements	1774:2:48390:48437	201245	3	True				
ANR	201422	AssignmentExpression	target -> nNumOfElements = source -> nNumOfElements		201245	0		=			
ANR	201423	PtrMemberAccess	target -> nNumOfElements		201245	0					
ANR	201424	Identifier	target		201245	0					
ANR	201425	Identifier	nNumOfElements		201245	1					
ANR	201426	PtrMemberAccess	source -> nNumOfElements		201245	1					
ANR	201427	Identifier	source		201245	0					
ANR	201428	Identifier	nNumOfElements		201245	1					
ANR	201429	ExpressionStatement	target -> nNextFreeElement = source -> nNextFreeElement	1775:2:48441:48492	201245	4	True				
ANR	201430	AssignmentExpression	target -> nNextFreeElement = source -> nNextFreeElement		201245	0		=			
ANR	201431	PtrMemberAccess	target -> nNextFreeElement		201245	0					
ANR	201432	Identifier	target		201245	0					
ANR	201433	Identifier	nNextFreeElement		201245	1					
ANR	201434	PtrMemberAccess	source -> nNextFreeElement		201245	1					
ANR	201435	Identifier	source		201245	0					
ANR	201436	Identifier	nNextFreeElement		201245	1					
ANR	201437	ExpressionStatement	"HT_SET_DATA_ADDR ( target , emalloc ( HT_SIZE ( target ) ) )"	1776:2:48496:48546	201245	5	True				
ANR	201438	CallExpression	"HT_SET_DATA_ADDR ( target , emalloc ( HT_SIZE ( target ) ) )"		201245	0					
ANR	201439	Callee	HT_SET_DATA_ADDR		201245	0					
ANR	201440	Identifier	HT_SET_DATA_ADDR		201245	0					
ANR	201441	ArgumentList	target		201245	1					
ANR	201442	Argument	target		201245	0					
ANR	201443	Identifier	target		201245	0					
ANR	201444	Argument	emalloc ( HT_SIZE ( target ) )		201245	1					
ANR	201445	CallExpression	emalloc ( HT_SIZE ( target ) )		201245	0					
ANR	201446	Callee	emalloc		201245	0					
ANR	201447	Identifier	emalloc		201245	0					
ANR	201448	ArgumentList	HT_SIZE ( target )		201245	1					
ANR	201449	Argument	HT_SIZE ( target )		201245	0					
ANR	201450	CallExpression	HT_SIZE ( target )		201245	0					
ANR	201451	Callee	HT_SIZE		201245	0					
ANR	201452	Identifier	HT_SIZE		201245	0					
ANR	201453	ArgumentList	target		201245	1					
ANR	201454	Argument	target		201245	0					
ANR	201455	Identifier	target		201245	0					
ANR	201456	ExpressionStatement	target -> nInternalPointer = source -> nInternalPointer	1777:2:48550:48601	201245	6	True				
ANR	201457	AssignmentExpression	target -> nInternalPointer = source -> nInternalPointer		201245	0		=			
ANR	201458	PtrMemberAccess	target -> nInternalPointer		201245	0					
ANR	201459	Identifier	target		201245	0					
ANR	201460	Identifier	nInternalPointer		201245	1					
ANR	201461	PtrMemberAccess	source -> nInternalPointer		201245	1					
ANR	201462	Identifier	source		201245	0					
ANR	201463	Identifier	nInternalPointer		201245	1					
ANR	201464	ExpressionStatement	"memcpy ( HT_GET_DATA_ADDR ( target ) , HT_GET_DATA_ADDR ( source ) , HT_USED_SIZE ( source ) )"	1778:2:48605:48685	201245	7	True				
ANR	201465	CallExpression	"memcpy ( HT_GET_DATA_ADDR ( target ) , HT_GET_DATA_ADDR ( source ) , HT_USED_SIZE ( source ) )"		201245	0					
ANR	201466	Callee	memcpy		201245	0					
ANR	201467	Identifier	memcpy		201245	0					
ANR	201468	ArgumentList	HT_GET_DATA_ADDR ( target )		201245	1					
ANR	201469	Argument	HT_GET_DATA_ADDR ( target )		201245	0					
ANR	201470	CallExpression	HT_GET_DATA_ADDR ( target )		201245	0					
ANR	201471	Callee	HT_GET_DATA_ADDR		201245	0					
ANR	201472	Identifier	HT_GET_DATA_ADDR		201245	0					
ANR	201473	ArgumentList	target		201245	1					
ANR	201474	Argument	target		201245	0					
ANR	201475	Identifier	target		201245	0					
ANR	201476	Argument	HT_GET_DATA_ADDR ( source )		201245	1					
ANR	201477	CallExpression	HT_GET_DATA_ADDR ( source )		201245	0					
ANR	201478	Callee	HT_GET_DATA_ADDR		201245	0					
ANR	201479	Identifier	HT_GET_DATA_ADDR		201245	0					
ANR	201480	ArgumentList	source		201245	1					
ANR	201481	Argument	source		201245	0					
ANR	201482	Identifier	source		201245	0					
ANR	201483	Argument	HT_USED_SIZE ( source )		201245	2					
ANR	201484	CallExpression	HT_USED_SIZE ( source )		201245	0					
ANR	201485	Callee	HT_USED_SIZE		201245	0					
ANR	201486	Identifier	HT_USED_SIZE		201245	0					
ANR	201487	ArgumentList	source		201245	1					
ANR	201488	Argument	source		201245	0					
ANR	201489	Identifier	source		201245	0					
ANR	201490	IfStatement	if ( target -> nNumOfElements > 0 && target -> nInternalPointer == HT_INVALID_IDX )		201245	8					
ANR	201491	Condition	target -> nNumOfElements > 0 && target -> nInternalPointer == HT_INVALID_IDX	1779:6:48693:48770	201245	0	True				
ANR	201492	AndExpression	target -> nNumOfElements > 0 && target -> nInternalPointer == HT_INVALID_IDX		201245	0		&&			
ANR	201493	RelationalExpression	target -> nNumOfElements > 0		201245	0		>			
ANR	201494	PtrMemberAccess	target -> nNumOfElements		201245	0					
ANR	201495	Identifier	target		201245	0					
ANR	201496	Identifier	nNumOfElements		201245	1					
ANR	201497	PrimaryExpression	0		201245	1					
ANR	201498	EqualityExpression	target -> nInternalPointer == HT_INVALID_IDX		201245	1		==			
ANR	201499	PtrMemberAccess	target -> nInternalPointer		201245	0					
ANR	201500	Identifier	target		201245	0					
ANR	201501	Identifier	nInternalPointer		201245	1					
ANR	201502	Identifier	HT_INVALID_IDX		201245	1					
ANR	201503	CompoundStatement		32:50:1256:1256	201245	1					
ANR	201504	ExpressionStatement	idx = 0	1781:3:48778:48785	201245	0	True				
ANR	201505	AssignmentExpression	idx = 0		201245	0		=			
ANR	201506	Identifier	idx		201245	0					
ANR	201507	PrimaryExpression	0		201245	1					
ANR	201508	WhileStatement	while ( Z_TYPE ( target -> arData [ idx ] . val ) == IS_UNDEF )		201245	1					
ANR	201509	Condition	Z_TYPE ( target -> arData [ idx ] . val ) == IS_UNDEF	1782:10:48797:48839	201245	0	True				
ANR	201510	EqualityExpression	Z_TYPE ( target -> arData [ idx ] . val ) == IS_UNDEF		201245	0		==			
ANR	201511	CallExpression	Z_TYPE ( target -> arData [ idx ] . val )		201245	0					
ANR	201512	Callee	Z_TYPE		201245	0					
ANR	201513	Identifier	Z_TYPE		201245	0					
ANR	201514	ArgumentList	target -> arData [ idx ] . val		201245	1					
ANR	201515	Argument	target -> arData [ idx ] . val		201245	0					
ANR	201516	MemberAccess	target -> arData [ idx ] . val		201245	0					
ANR	201517	ArrayIndexing	target -> arData [ idx ]		201245	0					
ANR	201518	PtrMemberAccess	target -> arData		201245	0					
ANR	201519	Identifier	target		201245	0					
ANR	201520	Identifier	arData		201245	1					
ANR	201521	Identifier	idx		201245	1					
ANR	201522	Identifier	val		201245	1					
ANR	201523	Identifier	IS_UNDEF		201245	1					
ANR	201524	CompoundStatement		34:55:1325:1325	201245	1					
ANR	201525	ExpressionStatement	idx ++	1783:4:48848:48853	201245	0	True				
ANR	201526	PostIncDecOperationExpression	idx ++		201245	0					
ANR	201527	Identifier	idx		201245	0					
ANR	201528	IncDec	++		201245	1					
ANR	201529	ExpressionStatement	target -> nInternalPointer = idx	1785:3:48863:48893	201245	2	True				
ANR	201530	AssignmentExpression	target -> nInternalPointer = idx		201245	0		=			
ANR	201531	PtrMemberAccess	target -> nInternalPointer		201245	0					
ANR	201532	Identifier	target		201245	0					
ANR	201533	Identifier	nInternalPointer		201245	1					
ANR	201534	Identifier	idx		201245	1					
ANR	201535	ElseStatement	else		201245	0					
ANR	201536	IfStatement	if ( source -> u . flags & HASH_FLAG_PACKED )		201245	0					
ANR	201537	Condition	source -> u . flags & HASH_FLAG_PACKED	1787:12:48911:48944	201245	0	True				
ANR	201538	BitAndExpression	source -> u . flags & HASH_FLAG_PACKED		201245	0		&			
ANR	201539	MemberAccess	source -> u . flags		201245	0					
ANR	201540	PtrMemberAccess	source -> u		201245	0					
ANR	201541	Identifier	source		201245	0					
ANR	201542	Identifier	u		201245	1					
ANR	201543	Identifier	flags		201245	1					
ANR	201544	Identifier	HASH_FLAG_PACKED		201245	1					
ANR	201545	CompoundStatement		39:48:1430:1430	201245	1					
ANR	201546	ExpressionStatement	target -> u . flags = ( source -> u . flags & ~HASH_FLAG_PERSISTENT ) | HASH_FLAG_APPLY_PROTECTION	1788:2:48951:49039	201245	0	True				
ANR	201547	AssignmentExpression	target -> u . flags = ( source -> u . flags & ~HASH_FLAG_PERSISTENT ) | HASH_FLAG_APPLY_PROTECTION		201245	0		=			
ANR	201548	MemberAccess	target -> u . flags		201245	0					
ANR	201549	PtrMemberAccess	target -> u		201245	0					
ANR	201550	Identifier	target		201245	0					
ANR	201551	Identifier	u		201245	1					
ANR	201552	Identifier	flags		201245	1					
ANR	201553	InclusiveOrExpression	( source -> u . flags & ~HASH_FLAG_PERSISTENT ) | HASH_FLAG_APPLY_PROTECTION		201245	1		|			
ANR	201554	BitAndExpression	source -> u . flags & ~HASH_FLAG_PERSISTENT		201245	0		&			
ANR	201555	MemberAccess	source -> u . flags		201245	0					
ANR	201556	PtrMemberAccess	source -> u		201245	0					
ANR	201557	Identifier	source		201245	0					
ANR	201558	Identifier	u		201245	1					
ANR	201559	Identifier	flags		201245	1					
ANR	201560	Identifier	~HASH_FLAG_PERSISTENT		201245	1					
ANR	201561	Identifier	HASH_FLAG_APPLY_PROTECTION		201245	1					
ANR	201562	ExpressionStatement	target -> nTableMask = source -> nTableMask	1789:2:49043:49082	201245	1	True				
ANR	201563	AssignmentExpression	target -> nTableMask = source -> nTableMask		201245	0		=			
ANR	201564	PtrMemberAccess	target -> nTableMask		201245	0					
ANR	201565	Identifier	target		201245	0					
ANR	201566	Identifier	nTableMask		201245	1					
ANR	201567	PtrMemberAccess	source -> nTableMask		201245	1					
ANR	201568	Identifier	source		201245	0					
ANR	201569	Identifier	nTableMask		201245	1					
ANR	201570	ExpressionStatement	target -> nNumUsed = source -> nNumUsed	1790:2:49086:49121	201245	2	True				
ANR	201571	AssignmentExpression	target -> nNumUsed = source -> nNumUsed		201245	0		=			
ANR	201572	PtrMemberAccess	target -> nNumUsed		201245	0					
ANR	201573	Identifier	target		201245	0					
ANR	201574	Identifier	nNumUsed		201245	1					
ANR	201575	PtrMemberAccess	source -> nNumUsed		201245	1					
ANR	201576	Identifier	source		201245	0					
ANR	201577	Identifier	nNumUsed		201245	1					
ANR	201578	ExpressionStatement	target -> nNumOfElements = source -> nNumOfElements	1791:2:49125:49172	201245	3	True				
ANR	201579	AssignmentExpression	target -> nNumOfElements = source -> nNumOfElements		201245	0		=			
ANR	201580	PtrMemberAccess	target -> nNumOfElements		201245	0					
ANR	201581	Identifier	target		201245	0					
ANR	201582	Identifier	nNumOfElements		201245	1					
ANR	201583	PtrMemberAccess	source -> nNumOfElements		201245	1					
ANR	201584	Identifier	source		201245	0					
ANR	201585	Identifier	nNumOfElements		201245	1					
ANR	201586	ExpressionStatement	target -> nNextFreeElement = source -> nNextFreeElement	1792:2:49176:49227	201245	4	True				
ANR	201587	AssignmentExpression	target -> nNextFreeElement = source -> nNextFreeElement		201245	0		=			
ANR	201588	PtrMemberAccess	target -> nNextFreeElement		201245	0					
ANR	201589	Identifier	target		201245	0					
ANR	201590	Identifier	nNextFreeElement		201245	1					
ANR	201591	PtrMemberAccess	source -> nNextFreeElement		201245	1					
ANR	201592	Identifier	source		201245	0					
ANR	201593	Identifier	nNextFreeElement		201245	1					
ANR	201594	ExpressionStatement	"HT_SET_DATA_ADDR ( target , emalloc ( HT_SIZE ( target ) ) )"	1793:2:49231:49281	201245	5	True				
ANR	201595	CallExpression	"HT_SET_DATA_ADDR ( target , emalloc ( HT_SIZE ( target ) ) )"		201245	0					
ANR	201596	Callee	HT_SET_DATA_ADDR		201245	0					
ANR	201597	Identifier	HT_SET_DATA_ADDR		201245	0					
ANR	201598	ArgumentList	target		201245	1					
ANR	201599	Argument	target		201245	0					
ANR	201600	Identifier	target		201245	0					
ANR	201601	Argument	emalloc ( HT_SIZE ( target ) )		201245	1					
ANR	201602	CallExpression	emalloc ( HT_SIZE ( target ) )		201245	0					
ANR	201603	Callee	emalloc		201245	0					
ANR	201604	Identifier	emalloc		201245	0					
ANR	201605	ArgumentList	HT_SIZE ( target )		201245	1					
ANR	201606	Argument	HT_SIZE ( target )		201245	0					
ANR	201607	CallExpression	HT_SIZE ( target )		201245	0					
ANR	201608	Callee	HT_SIZE		201245	0					
ANR	201609	Identifier	HT_SIZE		201245	0					
ANR	201610	ArgumentList	target		201245	1					
ANR	201611	Argument	target		201245	0					
ANR	201612	Identifier	target		201245	0					
ANR	201613	ExpressionStatement	target -> nInternalPointer = source -> nInternalPointer	1794:2:49285:49336	201245	6	True				
ANR	201614	AssignmentExpression	target -> nInternalPointer = source -> nInternalPointer		201245	0		=			
ANR	201615	PtrMemberAccess	target -> nInternalPointer		201245	0					
ANR	201616	Identifier	target		201245	0					
ANR	201617	Identifier	nInternalPointer		201245	1					
ANR	201618	PtrMemberAccess	source -> nInternalPointer		201245	1					
ANR	201619	Identifier	source		201245	0					
ANR	201620	Identifier	nInternalPointer		201245	1					
ANR	201621	ExpressionStatement	HT_HASH_RESET_PACKED ( target )	1795:2:49340:49368	201245	7	True				
ANR	201622	CallExpression	HT_HASH_RESET_PACKED ( target )		201245	0					
ANR	201623	Callee	HT_HASH_RESET_PACKED		201245	0					
ANR	201624	Identifier	HT_HASH_RESET_PACKED		201245	0					
ANR	201625	ArgumentList	target		201245	1					
ANR	201626	Argument	target		201245	0					
ANR	201627	Identifier	target		201245	0					
ANR	201628	IfStatement	if ( target -> nNumUsed == target -> nNumOfElements )		201245	8					
ANR	201629	Condition	target -> nNumUsed == target -> nNumOfElements	1797:6:49377:49418	201245	0	True				
ANR	201630	EqualityExpression	target -> nNumUsed == target -> nNumOfElements		201245	0		==			
ANR	201631	PtrMemberAccess	target -> nNumUsed		201245	0					
ANR	201632	Identifier	target		201245	0					
ANR	201633	Identifier	nNumUsed		201245	1					
ANR	201634	PtrMemberAccess	target -> nNumOfElements		201245	1					
ANR	201635	Identifier	target		201245	0					
ANR	201636	Identifier	nNumOfElements		201245	1					
ANR	201637	CompoundStatement		49:50:1904:1904	201245	1					
ANR	201638	ExpressionStatement	"zend_array_dup_packed_elements ( source , target , 0 )"	1798:3:49426:49475	201245	0	True				
ANR	201639	CallExpression	"zend_array_dup_packed_elements ( source , target , 0 )"		201245	0					
ANR	201640	Callee	zend_array_dup_packed_elements		201245	0					
ANR	201641	Identifier	zend_array_dup_packed_elements		201245	0					
ANR	201642	ArgumentList	source		201245	1					
ANR	201643	Argument	source		201245	0					
ANR	201644	Identifier	source		201245	0					
ANR	201645	Argument	target		201245	1					
ANR	201646	Identifier	target		201245	0					
ANR	201647	Argument	0		201245	2					
ANR	201648	PrimaryExpression	0		201245	0					
ANR	201649	ElseStatement	else		201245	0					
ANR	201650	CompoundStatement		51:9:1969:1969	201245	0					
ANR	201651	ExpressionStatement	"zend_array_dup_packed_elements ( source , target , 1 )"	1800:3:49491:49540	201245	0	True				
ANR	201652	CallExpression	"zend_array_dup_packed_elements ( source , target , 1 )"		201245	0					
ANR	201653	Callee	zend_array_dup_packed_elements		201245	0					
ANR	201654	Identifier	zend_array_dup_packed_elements		201245	0					
ANR	201655	ArgumentList	source		201245	1					
ANR	201656	Argument	source		201245	0					
ANR	201657	Identifier	source		201245	0					
ANR	201658	Argument	target		201245	1					
ANR	201659	Identifier	target		201245	0					
ANR	201660	Argument	1		201245	2					
ANR	201661	PrimaryExpression	1		201245	0					
ANR	201662	IfStatement	if ( target -> nNumOfElements > 0 && target -> nInternalPointer == HT_INVALID_IDX )		201245	9					
ANR	201663	Condition	target -> nNumOfElements > 0 && target -> nInternalPointer == HT_INVALID_IDX	1802:6:49552:49629	201245	0	True				
ANR	201664	AndExpression	target -> nNumOfElements > 0 && target -> nInternalPointer == HT_INVALID_IDX		201245	0		&&			
ANR	201665	RelationalExpression	target -> nNumOfElements > 0		201245	0		>			
ANR	201666	PtrMemberAccess	target -> nNumOfElements		201245	0					
ANR	201667	Identifier	target		201245	0					
ANR	201668	Identifier	nNumOfElements		201245	1					
ANR	201669	PrimaryExpression	0		201245	1					
ANR	201670	EqualityExpression	target -> nInternalPointer == HT_INVALID_IDX		201245	1		==			
ANR	201671	PtrMemberAccess	target -> nInternalPointer		201245	0					
ANR	201672	Identifier	target		201245	0					
ANR	201673	Identifier	nInternalPointer		201245	1					
ANR	201674	Identifier	HT_INVALID_IDX		201245	1					
ANR	201675	CompoundStatement		55:50:2115:2115	201245	1					
ANR	201676	ExpressionStatement	idx = 0	1804:3:49637:49644	201245	0	True				
ANR	201677	AssignmentExpression	idx = 0		201245	0		=			
ANR	201678	Identifier	idx		201245	0					
ANR	201679	PrimaryExpression	0		201245	1					
ANR	201680	WhileStatement	while ( Z_TYPE ( target -> arData [ idx ] . val ) == IS_UNDEF )		201245	1					
ANR	201681	Condition	Z_TYPE ( target -> arData [ idx ] . val ) == IS_UNDEF	1805:10:49656:49698	201245	0	True				
ANR	201682	EqualityExpression	Z_TYPE ( target -> arData [ idx ] . val ) == IS_UNDEF		201245	0		==			
ANR	201683	CallExpression	Z_TYPE ( target -> arData [ idx ] . val )		201245	0					
ANR	201684	Callee	Z_TYPE		201245	0					
ANR	201685	Identifier	Z_TYPE		201245	0					
ANR	201686	ArgumentList	target -> arData [ idx ] . val		201245	1					
ANR	201687	Argument	target -> arData [ idx ] . val		201245	0					
ANR	201688	MemberAccess	target -> arData [ idx ] . val		201245	0					
ANR	201689	ArrayIndexing	target -> arData [ idx ]		201245	0					
ANR	201690	PtrMemberAccess	target -> arData		201245	0					
ANR	201691	Identifier	target		201245	0					
ANR	201692	Identifier	arData		201245	1					
ANR	201693	Identifier	idx		201245	1					
ANR	201694	Identifier	val		201245	1					
ANR	201695	Identifier	IS_UNDEF		201245	1					
ANR	201696	CompoundStatement		57:55:2184:2184	201245	1					
ANR	201697	ExpressionStatement	idx ++	1806:4:49707:49712	201245	0	True				
ANR	201698	PostIncDecOperationExpression	idx ++		201245	0					
ANR	201699	Identifier	idx		201245	0					
ANR	201700	IncDec	++		201245	1					
ANR	201701	ExpressionStatement	target -> nInternalPointer = idx	1808:3:49722:49752	201245	2	True				
ANR	201702	AssignmentExpression	target -> nInternalPointer = idx		201245	0		=			
ANR	201703	PtrMemberAccess	target -> nInternalPointer		201245	0					
ANR	201704	Identifier	target		201245	0					
ANR	201705	Identifier	nInternalPointer		201245	1					
ANR	201706	Identifier	idx		201245	1					
ANR	201707	ElseStatement	else		201245	0					
ANR	201708	CompoundStatement		62:8:2249:2249	201245	0					
ANR	201709	ExpressionStatement	target -> u . flags = ( source -> u . flags & ~HASH_FLAG_PERSISTENT ) | HASH_FLAG_APPLY_PROTECTION	1811:2:49770:49858	201245	0	True				
ANR	201710	AssignmentExpression	target -> u . flags = ( source -> u . flags & ~HASH_FLAG_PERSISTENT ) | HASH_FLAG_APPLY_PROTECTION		201245	0		=			
ANR	201711	MemberAccess	target -> u . flags		201245	0					
ANR	201712	PtrMemberAccess	target -> u		201245	0					
ANR	201713	Identifier	target		201245	0					
ANR	201714	Identifier	u		201245	1					
ANR	201715	Identifier	flags		201245	1					
ANR	201716	InclusiveOrExpression	( source -> u . flags & ~HASH_FLAG_PERSISTENT ) | HASH_FLAG_APPLY_PROTECTION		201245	1		|			
ANR	201717	BitAndExpression	source -> u . flags & ~HASH_FLAG_PERSISTENT		201245	0		&			
ANR	201718	MemberAccess	source -> u . flags		201245	0					
ANR	201719	PtrMemberAccess	source -> u		201245	0					
ANR	201720	Identifier	source		201245	0					
ANR	201721	Identifier	u		201245	1					
ANR	201722	Identifier	flags		201245	1					
ANR	201723	Identifier	~HASH_FLAG_PERSISTENT		201245	1					
ANR	201724	Identifier	HASH_FLAG_APPLY_PROTECTION		201245	1					
ANR	201725	ExpressionStatement	target -> nTableMask = source -> nTableMask	1812:2:49862:49901	201245	1	True				
ANR	201726	AssignmentExpression	target -> nTableMask = source -> nTableMask		201245	0		=			
ANR	201727	PtrMemberAccess	target -> nTableMask		201245	0					
ANR	201728	Identifier	target		201245	0					
ANR	201729	Identifier	nTableMask		201245	1					
ANR	201730	PtrMemberAccess	source -> nTableMask		201245	1					
ANR	201731	Identifier	source		201245	0					
ANR	201732	Identifier	nTableMask		201245	1					
ANR	201733	ExpressionStatement	target -> nNextFreeElement = source -> nNextFreeElement	1813:2:49905:49956	201245	2	True				
ANR	201734	AssignmentExpression	target -> nNextFreeElement = source -> nNextFreeElement		201245	0		=			
ANR	201735	PtrMemberAccess	target -> nNextFreeElement		201245	0					
ANR	201736	Identifier	target		201245	0					
ANR	201737	Identifier	nNextFreeElement		201245	1					
ANR	201738	PtrMemberAccess	source -> nNextFreeElement		201245	1					
ANR	201739	Identifier	source		201245	0					
ANR	201740	Identifier	nNextFreeElement		201245	1					
ANR	201741	ExpressionStatement	target -> nInternalPointer = HT_INVALID_IDX	1814:2:49960:50001	201245	3	True				
ANR	201742	AssignmentExpression	target -> nInternalPointer = HT_INVALID_IDX		201245	0		=			
ANR	201743	PtrMemberAccess	target -> nInternalPointer		201245	0					
ANR	201744	Identifier	target		201245	0					
ANR	201745	Identifier	nInternalPointer		201245	1					
ANR	201746	Identifier	HT_INVALID_IDX		201245	1					
ANR	201747	ExpressionStatement	"HT_SET_DATA_ADDR ( target , emalloc ( HT_SIZE ( target ) ) )"	1815:2:50005:50055	201245	4	True				
ANR	201748	CallExpression	"HT_SET_DATA_ADDR ( target , emalloc ( HT_SIZE ( target ) ) )"		201245	0					
ANR	201749	Callee	HT_SET_DATA_ADDR		201245	0					
ANR	201750	Identifier	HT_SET_DATA_ADDR		201245	0					
ANR	201751	ArgumentList	target		201245	1					
ANR	201752	Argument	target		201245	0					
ANR	201753	Identifier	target		201245	0					
ANR	201754	Argument	emalloc ( HT_SIZE ( target ) )		201245	1					
ANR	201755	CallExpression	emalloc ( HT_SIZE ( target ) )		201245	0					
ANR	201756	Callee	emalloc		201245	0					
ANR	201757	Identifier	emalloc		201245	0					
ANR	201758	ArgumentList	HT_SIZE ( target )		201245	1					
ANR	201759	Argument	HT_SIZE ( target )		201245	0					
ANR	201760	CallExpression	HT_SIZE ( target )		201245	0					
ANR	201761	Callee	HT_SIZE		201245	0					
ANR	201762	Identifier	HT_SIZE		201245	0					
ANR	201763	ArgumentList	target		201245	1					
ANR	201764	Argument	target		201245	0					
ANR	201765	Identifier	target		201245	0					
ANR	201766	ExpressionStatement	HT_HASH_RESET ( target )	1816:2:50059:50080	201245	5	True				
ANR	201767	CallExpression	HT_HASH_RESET ( target )		201245	0					
ANR	201768	Callee	HT_HASH_RESET		201245	0					
ANR	201769	Identifier	HT_HASH_RESET		201245	0					
ANR	201770	ArgumentList	target		201245	1					
ANR	201771	Argument	target		201245	0					
ANR	201772	Identifier	target		201245	0					
ANR	201773	IfStatement	if ( target -> u . flags & HASH_FLAG_STATIC_KEYS )		201245	6					
ANR	201774	Condition	target -> u . flags & HASH_FLAG_STATIC_KEYS	1818:6:50089:50127	201245	0	True				
ANR	201775	BitAndExpression	target -> u . flags & HASH_FLAG_STATIC_KEYS		201245	0		&			
ANR	201776	MemberAccess	target -> u . flags		201245	0					
ANR	201777	PtrMemberAccess	target -> u		201245	0					
ANR	201778	Identifier	target		201245	0					
ANR	201779	Identifier	u		201245	1					
ANR	201780	Identifier	flags		201245	1					
ANR	201781	Identifier	HASH_FLAG_STATIC_KEYS		201245	1					
ANR	201782	CompoundStatement		70:47:2613:2613	201245	1					
ANR	201783	IfStatement	if ( source -> nNumUsed == source -> nNumOfElements )		201245	0					
ANR	201784	Condition	source -> nNumUsed == source -> nNumOfElements	1819:7:50139:50180	201245	0	True				
ANR	201785	EqualityExpression	source -> nNumUsed == source -> nNumOfElements		201245	0		==			
ANR	201786	PtrMemberAccess	source -> nNumUsed		201245	0					
ANR	201787	Identifier	source		201245	0					
ANR	201788	Identifier	nNumUsed		201245	1					
ANR	201789	PtrMemberAccess	source -> nNumOfElements		201245	1					
ANR	201790	Identifier	source		201245	0					
ANR	201791	Identifier	nNumOfElements		201245	1					
ANR	201792	CompoundStatement		71:51:2666:2666	201245	1					
ANR	201793	ExpressionStatement	"idx = zend_array_dup_elements ( source , target , 1 , 0 )"	1820:4:50189:50240	201245	0	True				
ANR	201794	AssignmentExpression	"idx = zend_array_dup_elements ( source , target , 1 , 0 )"		201245	0		=			
ANR	201795	Identifier	idx		201245	0					
ANR	201796	CallExpression	"zend_array_dup_elements ( source , target , 1 , 0 )"		201245	1					
ANR	201797	Callee	zend_array_dup_elements		201245	0					
ANR	201798	Identifier	zend_array_dup_elements		201245	0					
ANR	201799	ArgumentList	source		201245	1					
ANR	201800	Argument	source		201245	0					
ANR	201801	Identifier	source		201245	0					
ANR	201802	Argument	target		201245	1					
ANR	201803	Identifier	target		201245	0					
ANR	201804	Argument	1		201245	2					
ANR	201805	PrimaryExpression	1		201245	0					
ANR	201806	Argument	0		201245	3					
ANR	201807	PrimaryExpression	0		201245	0					
ANR	201808	ElseStatement	else		201245	0					
ANR	201809	CompoundStatement		73:10:2735:2735	201245	0					
ANR	201810	ExpressionStatement	"idx = zend_array_dup_elements ( source , target , 1 , 1 )"	1822:4:50258:50309	201245	0	True				
ANR	201811	AssignmentExpression	"idx = zend_array_dup_elements ( source , target , 1 , 1 )"		201245	0		=			
ANR	201812	Identifier	idx		201245	0					
ANR	201813	CallExpression	"zend_array_dup_elements ( source , target , 1 , 1 )"		201245	1					
ANR	201814	Callee	zend_array_dup_elements		201245	0					
ANR	201815	Identifier	zend_array_dup_elements		201245	0					
ANR	201816	ArgumentList	source		201245	1					
ANR	201817	Argument	source		201245	0					
ANR	201818	Identifier	source		201245	0					
ANR	201819	Argument	target		201245	1					
ANR	201820	Identifier	target		201245	0					
ANR	201821	Argument	1		201245	2					
ANR	201822	PrimaryExpression	1		201245	0					
ANR	201823	Argument	1		201245	3					
ANR	201824	PrimaryExpression	1		201245	0					
ANR	201825	ElseStatement	else		201245	0					
ANR	201826	CompoundStatement		76:9:2808:2808	201245	0					
ANR	201827	IfStatement	if ( source -> nNumUsed == source -> nNumOfElements )		201245	0					
ANR	201828	Condition	source -> nNumUsed == source -> nNumOfElements	1825:7:50334:50375	201245	0	True				
ANR	201829	EqualityExpression	source -> nNumUsed == source -> nNumOfElements		201245	0		==			
ANR	201830	PtrMemberAccess	source -> nNumUsed		201245	0					
ANR	201831	Identifier	source		201245	0					
ANR	201832	Identifier	nNumUsed		201245	1					
ANR	201833	PtrMemberAccess	source -> nNumOfElements		201245	1					
ANR	201834	Identifier	source		201245	0					
ANR	201835	Identifier	nNumOfElements		201245	1					
ANR	201836	CompoundStatement		77:51:2861:2861	201245	1					
ANR	201837	ExpressionStatement	"idx = zend_array_dup_elements ( source , target , 0 , 0 )"	1826:4:50384:50435	201245	0	True				
ANR	201838	AssignmentExpression	"idx = zend_array_dup_elements ( source , target , 0 , 0 )"		201245	0		=			
ANR	201839	Identifier	idx		201245	0					
ANR	201840	CallExpression	"zend_array_dup_elements ( source , target , 0 , 0 )"		201245	1					
ANR	201841	Callee	zend_array_dup_elements		201245	0					
ANR	201842	Identifier	zend_array_dup_elements		201245	0					
ANR	201843	ArgumentList	source		201245	1					
ANR	201844	Argument	source		201245	0					
ANR	201845	Identifier	source		201245	0					
ANR	201846	Argument	target		201245	1					
ANR	201847	Identifier	target		201245	0					
ANR	201848	Argument	0		201245	2					
ANR	201849	PrimaryExpression	0		201245	0					
ANR	201850	Argument	0		201245	3					
ANR	201851	PrimaryExpression	0		201245	0					
ANR	201852	ElseStatement	else		201245	0					
ANR	201853	CompoundStatement		79:10:2930:2930	201245	0					
ANR	201854	ExpressionStatement	"idx = zend_array_dup_elements ( source , target , 0 , 1 )"	1828:4:50453:50504	201245	0	True				
ANR	201855	AssignmentExpression	"idx = zend_array_dup_elements ( source , target , 0 , 1 )"		201245	0		=			
ANR	201856	Identifier	idx		201245	0					
ANR	201857	CallExpression	"zend_array_dup_elements ( source , target , 0 , 1 )"		201245	1					
ANR	201858	Callee	zend_array_dup_elements		201245	0					
ANR	201859	Identifier	zend_array_dup_elements		201245	0					
ANR	201860	ArgumentList	source		201245	1					
ANR	201861	Argument	source		201245	0					
ANR	201862	Identifier	source		201245	0					
ANR	201863	Argument	target		201245	1					
ANR	201864	Identifier	target		201245	0					
ANR	201865	Argument	0		201245	2					
ANR	201866	PrimaryExpression	0		201245	0					
ANR	201867	Argument	1		201245	3					
ANR	201868	PrimaryExpression	1		201245	0					
ANR	201869	ExpressionStatement	target -> nNumUsed = idx	1831:2:50517:50539	201245	7	True				
ANR	201870	AssignmentExpression	target -> nNumUsed = idx		201245	0		=			
ANR	201871	PtrMemberAccess	target -> nNumUsed		201245	0					
ANR	201872	Identifier	target		201245	0					
ANR	201873	Identifier	nNumUsed		201245	1					
ANR	201874	Identifier	idx		201245	1					
ANR	201875	ExpressionStatement	target -> nNumOfElements = idx	1832:2:50543:50571	201245	8	True				
ANR	201876	AssignmentExpression	target -> nNumOfElements = idx		201245	0		=			
ANR	201877	PtrMemberAccess	target -> nNumOfElements		201245	0					
ANR	201878	Identifier	target		201245	0					
ANR	201879	Identifier	nNumOfElements		201245	1					
ANR	201880	Identifier	idx		201245	1					
ANR	201881	IfStatement	if ( idx > 0 && target -> nInternalPointer == HT_INVALID_IDX )		201245	9					
ANR	201882	Condition	idx > 0 && target -> nInternalPointer == HT_INVALID_IDX	1833:6:50579:50631	201245	0	True				
ANR	201883	AndExpression	idx > 0 && target -> nInternalPointer == HT_INVALID_IDX		201245	0		&&			
ANR	201884	RelationalExpression	idx > 0		201245	0		>			
ANR	201885	Identifier	idx		201245	0					
ANR	201886	PrimaryExpression	0		201245	1					
ANR	201887	EqualityExpression	target -> nInternalPointer == HT_INVALID_IDX		201245	1		==			
ANR	201888	PtrMemberAccess	target -> nInternalPointer		201245	0					
ANR	201889	Identifier	target		201245	0					
ANR	201890	Identifier	nInternalPointer		201245	1					
ANR	201891	Identifier	HT_INVALID_IDX		201245	1					
ANR	201892	CompoundStatement		85:61:3117:3117	201245	1					
ANR	201893	ExpressionStatement	target -> nInternalPointer = 0	1834:3:50639:50667	201245	0	True				
ANR	201894	AssignmentExpression	target -> nInternalPointer = 0		201245	0		=			
ANR	201895	PtrMemberAccess	target -> nInternalPointer		201245	0					
ANR	201896	Identifier	target		201245	0					
ANR	201897	Identifier	nInternalPointer		201245	1					
ANR	201898	PrimaryExpression	0		201245	1					
ANR	201899	ReturnStatement	return target ;	1837:1:50677:50690	201245	9	True				
ANR	201900	Identifier	target		201245	0					
ANR	201901	ReturnType	ZEND_FASTCALL		201245	1					
ANR	201902	Identifier	zend_array_dup		201245	2					
ANR	201903	ParameterList	HashTable * source		201245	3					
ANR	201904	Parameter	HashTable * source	1748:49:47497:47513	201245	0	True				
ANR	201905	ParameterType	HashTable *		201245	0					
ANR	201906	Identifier	source		201245	1					
ANR	201907	CFGEntryNode	ENTRY		201245		True				
ANR	201908	CFGExitNode	EXIT		201245		True				
ANR	201909	Symbol	HASH_FLAG_STATIC_KEYS		201245						
ANR	201910	Symbol	HT_MIN_MASK		201245						
ANR	201911	Symbol	Z_TYPE		201245						
ANR	201912	Symbol	source		201245						
ANR	201913	Symbol	GC_FLAGS		201245						
ANR	201914	Symbol	target -> nTableMask		201245						
ANR	201915	Symbol	HASH_FLAG_INITIALIZED		201245						
ANR	201916	Symbol	* source		201245						
ANR	201917	Symbol	* idx		201245						
ANR	201918	Symbol	target -> nInternalPointer		201245						
ANR	201919	Symbol	target -> arData		201245						
ANR	201920	Symbol	target -> nNumUsed		201245						
ANR	201921	Symbol	& uninitialized_bucket		201245						
ANR	201922	Symbol	source -> nTableSize		201245						
ANR	201923	Symbol	IS_UNDEF		201245						
ANR	201924	Symbol	target -> nTableSize		201245						
ANR	201925	Symbol	source -> nInternalPointer		201245						
ANR	201926	Symbol	source -> nTableMask		201245						
ANR	201927	Symbol	HT_USED_SIZE		201245						
ANR	201928	Symbol	target -> u . flags		201245						
ANR	201929	Symbol	HT_GET_DATA_ADDR		201245						
ANR	201930	Symbol	* * target		201245						
ANR	201931	Symbol	HT_SIZE		201245						
ANR	201932	Symbol	HASH_FLAG_PERSISTENT		201245						
ANR	201933	Symbol	idx		201245						
ANR	201934	Symbol	* target -> arData		201245						
ANR	201935	Symbol	source -> pDestructor		201245						
ANR	201936	Symbol	source -> u . flags		201245						
ANR	201937	Symbol	zend_array_dup_elements		201245						
ANR	201938	Symbol	target -> arData [ idx ] . val		201245						
ANR	201939	Symbol	HASH_FLAG_PACKED		201245						
ANR	201940	Symbol	target -> u		201245						
ANR	201941	Symbol	emalloc		201245						
ANR	201942	Symbol	IS_ARRAY		201245						
ANR	201943	Symbol	target -> pDestructor		201245						
ANR	201944	Symbol	target -> nNumOfElements		201245						
ANR	201945	Symbol	GC_TYPE_INFO		201245						
ANR	201946	Symbol	GC_REFCOUNT		201245						
ANR	201947	Symbol	HT_INVALID_IDX		201245						
ANR	201948	Symbol	source -> nNumUsed		201245						
ANR	201949	Symbol	HASH_FLAG_APPLY_PROTECTION		201245						
ANR	201950	Symbol	IS_ARRAY_IMMUTABLE		201245						
ANR	201951	Symbol	target		201245						
ANR	201952	Symbol	~HASH_FLAG_PERSISTENT		201245						
ANR	201953	Symbol	* target		201245						
ANR	201954	Symbol	source -> u		201245						
ANR	201955	Symbol	target -> nNextFreeElement		201245						
ANR	201956	Symbol	source -> nNextFreeElement		201245						
ANR	201957	Symbol	source -> nNumOfElements		201245						
ANR	201958	Function	_zend_hash_merge	1841:0:50696:51701							
ANR	201959	FunctionDef	"_zend_hash_merge (HashTable * target , HashTable * source , copy_ctor_func_t pCopyConstructor , zend_bool overwrite ZEND_FILE_LINE_DC)"		201958	0					
ANR	201960	CompoundStatement		1842:0:50853:51701	201958	0					
ANR	201961	IdentifierDeclStatement	uint32_t idx ;	1843:4:50859:50871	201958	0	True				
ANR	201962	IdentifierDecl	idx		201958	0					
ANR	201963	IdentifierDeclType	uint32_t		201958	0					
ANR	201964	Identifier	idx		201958	1					
ANR	201965	IdentifierDeclStatement	Bucket * p ;	1844:1:50874:50883	201958	1	True				
ANR	201966	IdentifierDecl	* p		201958	0					
ANR	201967	IdentifierDeclType	Bucket *		201958	0					
ANR	201968	Identifier	p		201958	1					
ANR	201969	IdentifierDeclStatement	zval * t ;	1845:1:50886:50893	201958	2	True				
ANR	201970	IdentifierDecl	* t		201958	0					
ANR	201971	IdentifierDeclType	zval *		201958	0					
ANR	201972	Identifier	t		201958	1					
ANR	201973	IdentifierDeclStatement	uint32_t mode = ( overwrite ? HASH_UPDATE : HASH_ADD ) ;	1846:1:50896:50944	201958	3	True				
ANR	201974	IdentifierDecl	mode = ( overwrite ? HASH_UPDATE : HASH_ADD )		201958	0					
ANR	201975	IdentifierDeclType	uint32_t		201958	0					
ANR	201976	Identifier	mode		201958	1					
ANR	201977	AssignmentExpression	mode = ( overwrite ? HASH_UPDATE : HASH_ADD )		201958	2		=			
ANR	201978	Identifier	mode		201958	0					
ANR	201979	ConditionalExpression	overwrite ? HASH_UPDATE : HASH_ADD		201958	1					
ANR	201980	Condition	overwrite		201958	0					
ANR	201981	Identifier	overwrite		201958	0					
ANR	201982	Identifier	HASH_UPDATE		201958	1					
ANR	201983	Identifier	HASH_ADD		201958	2					
ANR	201984	ExpressionStatement	IS_CONSISTENT ( source )	1848:1:50948:50969	201958	4	True				
ANR	201985	CallExpression	IS_CONSISTENT ( source )		201958	0					
ANR	201986	Callee	IS_CONSISTENT		201958	0					
ANR	201987	Identifier	IS_CONSISTENT		201958	0					
ANR	201988	ArgumentList	source		201958	1					
ANR	201989	Argument	source		201958	0					
ANR	201990	Identifier	source		201958	0					
ANR	201991	ExpressionStatement	IS_CONSISTENT ( target )	1849:1:50972:50993	201958	5	True				
ANR	201992	CallExpression	IS_CONSISTENT ( target )		201958	0					
ANR	201993	Callee	IS_CONSISTENT		201958	0					
ANR	201994	Identifier	IS_CONSISTENT		201958	0					
ANR	201995	ArgumentList	target		201958	1					
ANR	201996	Argument	target		201958	0					
ANR	201997	Identifier	target		201958	0					
ANR	201998	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( target ) == 1 )	1850:1:50996:51031	201958	6	True				
ANR	201999	CallExpression	HT_ASSERT ( GC_REFCOUNT ( target ) == 1 )		201958	0					
ANR	202000	Callee	HT_ASSERT		201958	0					
ANR	202001	Identifier	HT_ASSERT		201958	0					
ANR	202002	ArgumentList	GC_REFCOUNT ( target ) == 1		201958	1					
ANR	202003	Argument	GC_REFCOUNT ( target ) == 1		201958	0					
ANR	202004	EqualityExpression	GC_REFCOUNT ( target ) == 1		201958	0		==			
ANR	202005	CallExpression	GC_REFCOUNT ( target )		201958	0					
ANR	202006	Callee	GC_REFCOUNT		201958	0					
ANR	202007	Identifier	GC_REFCOUNT		201958	0					
ANR	202008	ArgumentList	target		201958	1					
ANR	202009	Argument	target		201958	0					
ANR	202010	Identifier	target		201958	0					
ANR	202011	PrimaryExpression	1		201958	1					
ANR	202012	ForStatement	for ( idx = 0 ; idx < source -> nNumUsed ; idx ++ )		201958	7					
ANR	202013	ForInit	idx = 0 ;	1852:6:51040:51047	201958	0	True				
ANR	202014	AssignmentExpression	idx = 0		201958	0		=			
ANR	202015	Identifier	idx		201958	0					
ANR	202016	PrimaryExpression	0		201958	1					
ANR	202017	Condition	idx < source -> nNumUsed	1852:15:51049:51070	201958	1	True				
ANR	202018	RelationalExpression	idx < source -> nNumUsed		201958	0		<			
ANR	202019	Identifier	idx		201958	0					
ANR	202020	PtrMemberAccess	source -> nNumUsed		201958	1					
ANR	202021	Identifier	source		201958	0					
ANR	202022	Identifier	nNumUsed		201958	1					
ANR	202023	PostIncDecOperationExpression	idx ++	1852:39:51073:51077	201958	2	True				
ANR	202024	Identifier	idx		201958	0					
ANR	202025	IncDec	++		201958	1					
ANR	202026	CompoundStatement		11:46:226:226	201958	3					
ANR	202027	ExpressionStatement	p = source -> arData + idx	1853:2:51084:51108	201958	0	True				
ANR	202028	AssignmentExpression	p = source -> arData + idx		201958	0		=			
ANR	202029	Identifier	p		201958	0					
ANR	202030	AdditiveExpression	source -> arData + idx		201958	1		+			
ANR	202031	PtrMemberAccess	source -> arData		201958	0					
ANR	202032	Identifier	source		201958	0					
ANR	202033	Identifier	arData		201958	1					
ANR	202034	Identifier	idx		201958	1					
ANR	202035	IfStatement	if ( UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF ) )		201958	1					
ANR	202036	Condition	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )	1854:6:51116:51153	201958	0	True				
ANR	202037	CallExpression	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )		201958	0					
ANR	202038	Callee	UNEXPECTED		201958	0					
ANR	202039	Identifier	UNEXPECTED		201958	0					
ANR	202040	ArgumentList	Z_TYPE ( p -> val ) == IS_UNDEF		201958	1					
ANR	202041	Argument	Z_TYPE ( p -> val ) == IS_UNDEF		201958	0					
ANR	202042	EqualityExpression	Z_TYPE ( p -> val ) == IS_UNDEF		201958	0		==			
ANR	202043	CallExpression	Z_TYPE ( p -> val )		201958	0					
ANR	202044	Callee	Z_TYPE		201958	0					
ANR	202045	Identifier	Z_TYPE		201958	0					
ANR	202046	ArgumentList	p -> val		201958	1					
ANR	202047	Argument	p -> val		201958	0					
ANR	202048	PtrMemberAccess	p -> val		201958	0					
ANR	202049	Identifier	p		201958	0					
ANR	202050	Identifier	val		201958	1					
ANR	202051	Identifier	IS_UNDEF		201958	1					
ANR	202052	ContinueStatement	continue ;	1854:46:51156:51164	201958	1	True				
ANR	202053	IfStatement	if ( p -> key )		201958	2					
ANR	202054	Condition	p -> key	1855:6:51172:51177	201958	0	True				
ANR	202055	PtrMemberAccess	p -> key		201958	0					
ANR	202056	Identifier	p		201958	0					
ANR	202057	Identifier	key		201958	1					
ANR	202058	CompoundStatement		14:14:326:326	201958	1					
ANR	202059	Statement	t	1856:3:51185:51185	201958	0	True				
ANR	202060	Statement	=	1856:5:51187:51187	201958	1	True				
ANR	202061	Statement	_zend_hash_add_or_update	1856:7:51189:51212	201958	2	True				
ANR	202062	Statement	(	1856:31:51213:51213	201958	3	True				
ANR	202063	Statement	target	1856:32:51214:51219	201958	4	True				
ANR	202064	Statement	","	1856:38:51220:51220	201958	5	True				
ANR	202065	Statement	p	1856:40:51222:51222	201958	6	True				
ANR	202066	Statement	->	1856:41:51223:51224	201958	7	True				
ANR	202067	Statement	key	1856:43:51225:51227	201958	8	True				
ANR	202068	Statement	","	1856:46:51228:51228	201958	9	True				
ANR	202069	Statement	&	1856:48:51230:51230	201958	10	True				
ANR	202070	Statement	p	1856:49:51231:51231	201958	11	True				
ANR	202071	Statement	->	1856:50:51232:51233	201958	12	True				
ANR	202072	Statement	val	1856:52:51234:51236	201958	13	True				
ANR	202073	Statement	","	1856:55:51237:51237	201958	14	True				
ANR	202074	Statement	mode	1856:57:51239:51242	201958	15	True				
ANR	202075	Statement	ZEND_FILE_LINE_RELAY_CC	1856:62:51244:51266	201958	16	True				
ANR	202076	Statement	)	1856:85:51267:51267	201958	17	True				
ANR	202077	ExpressionStatement		1856:86:51268:51268	201958	18	True				
ANR	202078	IfStatement	if ( t && pCopyConstructor )		201958	19					
ANR	202079	Condition	t && pCopyConstructor	1857:7:51277:51297	201958	0	True				
ANR	202080	AndExpression	t && pCopyConstructor		201958	0		&&			
ANR	202081	Identifier	t		201958	0					
ANR	202082	Identifier	pCopyConstructor		201958	1					
ANR	202083	CompoundStatement		16:30:446:446	201958	1					
ANR	202084	ExpressionStatement	pCopyConstructor ( t )	1858:4:51306:51325	201958	0	True				
ANR	202085	CallExpression	pCopyConstructor ( t )		201958	0					
ANR	202086	Callee	pCopyConstructor		201958	0					
ANR	202087	Identifier	pCopyConstructor		201958	0					
ANR	202088	ArgumentList	t		201958	1					
ANR	202089	Argument	t		201958	0					
ANR	202090	Identifier	t		201958	0					
ANR	202091	ElseStatement	else		201958	0					
ANR	202092	CompoundStatement		19:9:487:487	201958	0					
ANR	202093	IfStatement	"if ( ( mode == HASH_UPDATE || ! zend_hash_index_exists ( target , p -> h ) ) )"		201958	0					
ANR	202094	Condition	"mode == HASH_UPDATE || ! zend_hash_index_exists ( target , p -> h )"	1861:7:51350:51409	201958	0	True				
ANR	202095	OrExpression	"mode == HASH_UPDATE || ! zend_hash_index_exists ( target , p -> h )"		201958	0		||			
ANR	202096	EqualityExpression	mode == HASH_UPDATE		201958	0		==			
ANR	202097	Identifier	mode		201958	0					
ANR	202098	Identifier	HASH_UPDATE		201958	1					
ANR	202099	UnaryOperationExpression	"! zend_hash_index_exists ( target , p -> h )"		201958	1					
ANR	202100	UnaryOperator	!		201958	0					
ANR	202101	CallExpression	"zend_hash_index_exists ( target , p -> h )"		201958	1					
ANR	202102	Callee	zend_hash_index_exists		201958	0					
ANR	202103	Identifier	zend_hash_index_exists		201958	0					
ANR	202104	ArgumentList	target		201958	1					
ANR	202105	Argument	target		201958	0					
ANR	202106	Identifier	target		201958	0					
ANR	202107	Argument	p -> h		201958	1					
ANR	202108	PtrMemberAccess	p -> h		201958	0					
ANR	202109	Identifier	p		201958	0					
ANR	202110	Identifier	h		201958	1					
ANR	202111	CompoundStatement		20:69:558:558	201958	1					
ANR	202112	ExpressionStatement	"t = zend_hash_index_update ( target , p -> h , & p -> val )"	1862:5:51419:51468	201958	0	True				
ANR	202113	AssignmentExpression	"t = zend_hash_index_update ( target , p -> h , & p -> val )"		201958	0		=			
ANR	202114	Identifier	t		201958	0					
ANR	202115	CallExpression	"zend_hash_index_update ( target , p -> h , & p -> val )"		201958	1					
ANR	202116	Callee	zend_hash_index_update		201958	0					
ANR	202117	Identifier	zend_hash_index_update		201958	0					
ANR	202118	ArgumentList	target		201958	1					
ANR	202119	Argument	target		201958	0					
ANR	202120	Identifier	target		201958	0					
ANR	202121	Argument	p -> h		201958	1					
ANR	202122	PtrMemberAccess	p -> h		201958	0					
ANR	202123	Identifier	p		201958	0					
ANR	202124	Identifier	h		201958	1					
ANR	202125	Argument	& p -> val		201958	2					
ANR	202126	UnaryOperationExpression	& p -> val		201958	0					
ANR	202127	UnaryOperator	&		201958	0					
ANR	202128	PtrMemberAccess	p -> val		201958	1					
ANR	202129	Identifier	p		201958	0					
ANR	202130	Identifier	val		201958	1					
ANR	202131	IfStatement	if ( t && pCopyConstructor )		201958	1					
ANR	202132	Condition	t && pCopyConstructor	1863:9:51479:51499	201958	0	True				
ANR	202133	AndExpression	t && pCopyConstructor		201958	0		&&			
ANR	202134	Identifier	t		201958	0					
ANR	202135	Identifier	pCopyConstructor		201958	1					
ANR	202136	CompoundStatement		22:32:648:648	201958	1					
ANR	202137	ExpressionStatement	pCopyConstructor ( t )	1864:5:51509:51528	201958	0	True				
ANR	202138	CallExpression	pCopyConstructor ( t )		201958	0					
ANR	202139	Callee	pCopyConstructor		201958	0					
ANR	202140	Identifier	pCopyConstructor		201958	0					
ANR	202141	ArgumentList	t		201958	1					
ANR	202142	Argument	t		201958	0					
ANR	202143	Identifier	t		201958	0					
ANR	202144	IfStatement	if ( target -> nNumOfElements > 0 )		201958	8					
ANR	202145	Condition	target -> nNumOfElements > 0	1869:5:51553:51578	201958	0	True				
ANR	202146	RelationalExpression	target -> nNumOfElements > 0		201958	0		>			
ANR	202147	PtrMemberAccess	target -> nNumOfElements		201958	0					
ANR	202148	Identifier	target		201958	0					
ANR	202149	Identifier	nNumOfElements		201958	1					
ANR	202150	PrimaryExpression	0		201958	1					
ANR	202151	CompoundStatement		28:33:727:727	201958	1					
ANR	202152	ExpressionStatement	idx = 0	1870:2:51585:51592	201958	0	True				
ANR	202153	AssignmentExpression	idx = 0		201958	0		=			
ANR	202154	Identifier	idx		201958	0					
ANR	202155	PrimaryExpression	0		201958	1					
ANR	202156	WhileStatement	while ( Z_TYPE ( target -> arData [ idx ] . val ) == IS_UNDEF )		201958	1					
ANR	202157	Condition	Z_TYPE ( target -> arData [ idx ] . val ) == IS_UNDEF	1871:9:51603:51645	201958	0	True				
ANR	202158	EqualityExpression	Z_TYPE ( target -> arData [ idx ] . val ) == IS_UNDEF		201958	0		==			
ANR	202159	CallExpression	Z_TYPE ( target -> arData [ idx ] . val )		201958	0					
ANR	202160	Callee	Z_TYPE		201958	0					
ANR	202161	Identifier	Z_TYPE		201958	0					
ANR	202162	ArgumentList	target -> arData [ idx ] . val		201958	1					
ANR	202163	Argument	target -> arData [ idx ] . val		201958	0					
ANR	202164	MemberAccess	target -> arData [ idx ] . val		201958	0					
ANR	202165	ArrayIndexing	target -> arData [ idx ]		201958	0					
ANR	202166	PtrMemberAccess	target -> arData		201958	0					
ANR	202167	Identifier	target		201958	0					
ANR	202168	Identifier	arData		201958	1					
ANR	202169	Identifier	idx		201958	1					
ANR	202170	Identifier	val		201958	1					
ANR	202171	Identifier	IS_UNDEF		201958	1					
ANR	202172	CompoundStatement		30:54:794:794	201958	1					
ANR	202173	ExpressionStatement	idx ++	1872:3:51653:51658	201958	0	True				
ANR	202174	PostIncDecOperationExpression	idx ++		201958	0					
ANR	202175	Identifier	idx		201958	0					
ANR	202176	IncDec	++		201958	1					
ANR	202177	ExpressionStatement	target -> nInternalPointer = idx	1874:2:51666:51696	201958	2	True				
ANR	202178	AssignmentExpression	target -> nInternalPointer = idx		201958	0		=			
ANR	202179	PtrMemberAccess	target -> nInternalPointer		201958	0					
ANR	202180	Identifier	target		201958	0					
ANR	202181	Identifier	nInternalPointer		201958	1					
ANR	202182	Identifier	idx		201958	1					
ANR	202183	ReturnType	ZEND_API void ZEND_FASTCALL		201958	1					
ANR	202184	Identifier	_zend_hash_merge		201958	2					
ANR	202185	ParameterList	"HashTable * target , HashTable * source , copy_ctor_func_t pCopyConstructor , zend_bool overwrite ZEND_FILE_LINE_DC"		201958	3					
ANR	202186	Parameter	HashTable * target	1841:45:50741:50757	201958	0	True				
ANR	202187	ParameterType	HashTable *		201958	0					
ANR	202188	Identifier	target		201958	1					
ANR	202189	Parameter	HashTable * source	1841:64:50760:50776	201958	1	True				
ANR	202190	ParameterType	HashTable *		201958	0					
ANR	202191	Identifier	source		201958	1					
ANR	202192	Parameter	copy_ctor_func_t pCopyConstructor	1841:83:50779:50811	201958	2	True				
ANR	202193	ParameterType	copy_ctor_func_t		201958	0					
ANR	202194	Identifier	pCopyConstructor		201958	1					
ANR	202195	Parameter	zend_bool overwrite ZEND_FILE_LINE_DC	1841:118:50814:50850	201958	3	True				
ANR	202196	ParameterType	zend_bool overwrite		201958	0					
ANR	202197	Identifier	ZEND_FILE_LINE_DC		201958	1					
ANR	202198	CFGEntryNode	ENTRY		201958		True				
ANR	202199	CFGExitNode	EXIT		201958		True				
ANR	202200	Symbol	target -> arData [ idx ] . val		201958						
ANR	202201	Symbol	source -> arData		201958						
ANR	202202	Symbol	zend_hash_index_exists		201958						
ANR	202203	Symbol	Z_TYPE		201958						
ANR	202204	Symbol	source		201958						
ANR	202205	Symbol	mode		201958						
ANR	202206	Symbol	UNEXPECTED		201958						
ANR	202207	Symbol	target -> nNumOfElements		201958						
ANR	202208	Symbol	* source		201958						
ANR	202209	Symbol	* idx		201958						
ANR	202210	Symbol	ZEND_FILE_LINE_DC		201958						
ANR	202211	Symbol	target -> arData		201958						
ANR	202212	Symbol	target -> nInternalPointer		201958						
ANR	202213	Symbol	pCopyConstructor		201958						
ANR	202214	Symbol	overwrite		201958						
ANR	202215	Symbol	GC_REFCOUNT		201958						
ANR	202216	Symbol	HASH_ADD		201958						
ANR	202217	Symbol	IS_UNDEF		201958						
ANR	202218	Symbol	p -> h		201958						
ANR	202219	Symbol	& p -> val		201958						
ANR	202220	Symbol	source -> nNumUsed		201958						
ANR	202221	Symbol	HASH_UPDATE		201958						
ANR	202222	Symbol	zend_hash_index_update		201958						
ANR	202223	Symbol	* * target		201958						
ANR	202224	Symbol	p -> val		201958						
ANR	202225	Symbol	p -> key		201958						
ANR	202226	Symbol	target		201958						
ANR	202227	Symbol	p		201958						
ANR	202228	Symbol	* target		201958						
ANR	202229	Symbol	t		201958						
ANR	202230	Symbol	* p		201958						
ANR	202231	Symbol	idx		201958						
ANR	202232	Symbol	* target -> arData		201958						
ANR	202233	Function	zend_hash_replace_checker_wrapper	1879:0:51705:52014							
ANR	202234	FunctionDef	"zend_hash_replace_checker_wrapper (HashTable * target , zval * source_data , Bucket * p , void * pParam , merge_checker_func_t merge_checker_func)"		202233	0					
ANR	202235	CompoundStatement		1880:0:51874:52014	202233	0					
ANR	202236	IdentifierDeclStatement	zend_hash_key hash_key ;	1881:1:51877:51899	202233	0	True				
ANR	202237	IdentifierDecl	hash_key		202233	0					
ANR	202238	IdentifierDeclType	zend_hash_key		202233	0					
ANR	202239	Identifier	hash_key		202233	1					
ANR	202240	ExpressionStatement	hash_key . h = p -> h	1883:1:51903:51920	202233	1	True				
ANR	202241	AssignmentExpression	hash_key . h = p -> h		202233	0		=			
ANR	202242	MemberAccess	hash_key . h		202233	0					
ANR	202243	Identifier	hash_key		202233	0					
ANR	202244	Identifier	h		202233	1					
ANR	202245	PtrMemberAccess	p -> h		202233	1					
ANR	202246	Identifier	p		202233	0					
ANR	202247	Identifier	h		202233	1					
ANR	202248	ExpressionStatement	hash_key . key = p -> key	1884:1:51923:51944	202233	2	True				
ANR	202249	AssignmentExpression	hash_key . key = p -> key		202233	0		=			
ANR	202250	MemberAccess	hash_key . key		202233	0					
ANR	202251	Identifier	hash_key		202233	0					
ANR	202252	Identifier	key		202233	1					
ANR	202253	PtrMemberAccess	p -> key		202233	1					
ANR	202254	Identifier	p		202233	0					
ANR	202255	Identifier	key		202233	1					
ANR	202256	ReturnStatement	"return merge_checker_func ( target , source_data , & hash_key , pParam ) ;"	1885:1:51947:52012	202233	3	True				
ANR	202257	CallExpression	"merge_checker_func ( target , source_data , & hash_key , pParam )"		202233	0					
ANR	202258	Callee	merge_checker_func		202233	0					
ANR	202259	Identifier	merge_checker_func		202233	0					
ANR	202260	ArgumentList	target		202233	1					
ANR	202261	Argument	target		202233	0					
ANR	202262	Identifier	target		202233	0					
ANR	202263	Argument	source_data		202233	1					
ANR	202264	Identifier	source_data		202233	0					
ANR	202265	Argument	& hash_key		202233	2					
ANR	202266	UnaryOperationExpression	& hash_key		202233	0					
ANR	202267	UnaryOperator	&		202233	0					
ANR	202268	Identifier	hash_key		202233	1					
ANR	202269	Argument	pParam		202233	3					
ANR	202270	Identifier	pParam		202233	0					
ANR	202271	ReturnType	static zend_bool ZEND_FASTCALL		202233	1					
ANR	202272	Identifier	zend_hash_replace_checker_wrapper		202233	2					
ANR	202273	ParameterList	"HashTable * target , zval * source_data , Bucket * p , void * pParam , merge_checker_func_t merge_checker_func"		202233	3					
ANR	202274	Parameter	HashTable * target	1879:65:51770:51786	202233	0	True				
ANR	202275	ParameterType	HashTable *		202233	0					
ANR	202276	Identifier	target		202233	1					
ANR	202277	Parameter	zval * source_data	1879:84:51789:51805	202233	1	True				
ANR	202278	ParameterType	zval *		202233	0					
ANR	202279	Identifier	source_data		202233	1					
ANR	202280	Parameter	Bucket * p	1879:103:51808:51816	202233	2	True				
ANR	202281	ParameterType	Bucket *		202233	0					
ANR	202282	Identifier	p		202233	1					
ANR	202283	Parameter	void * pParam	1879:114:51819:51830	202233	3	True				
ANR	202284	ParameterType	void *		202233	0					
ANR	202285	Identifier	pParam		202233	1					
ANR	202286	Parameter	merge_checker_func_t merge_checker_func	1879:128:51833:51871	202233	4	True				
ANR	202287	ParameterType	merge_checker_func_t		202233	0					
ANR	202288	Identifier	merge_checker_func		202233	1					
ANR	202289	CFGEntryNode	ENTRY		202233		True				
ANR	202290	CFGExitNode	EXIT		202233		True				
ANR	202291	Symbol	p		202233						
ANR	202292	Symbol	source_data		202233						
ANR	202293	Symbol	hash_key		202233						
ANR	202294	Symbol	merge_checker_func		202233						
ANR	202295	Symbol	hash_key . key		202233						
ANR	202296	Symbol	& hash_key		202233						
ANR	202297	Symbol	* p		202233						
ANR	202298	Symbol	pParam		202233						
ANR	202299	Symbol	hash_key . h		202233						
ANR	202300	Symbol	p -> h		202233						
ANR	202301	Symbol	p -> key		202233						
ANR	202302	Symbol	target		202233						
ANR	202303	Function	zend_hash_merge_ex	1889:0:52018:52803							
ANR	202304	FunctionDef	"zend_hash_merge_ex (HashTable * target , HashTable * source , copy_ctor_func_t pCopyConstructor , merge_checker_func_t pMergeSource , void * pParam)"		202303	0					
ANR	202305	CompoundStatement		1890:0:52187:52803	202303	0					
ANR	202306	IdentifierDeclStatement	uint32_t idx ;	1891:1:52190:52202	202303	0	True				
ANR	202307	IdentifierDecl	idx		202303	0					
ANR	202308	IdentifierDeclType	uint32_t		202303	0					
ANR	202309	Identifier	idx		202303	1					
ANR	202310	IdentifierDeclStatement	Bucket * p ;	1892:1:52205:52214	202303	1	True				
ANR	202311	IdentifierDecl	* p		202303	0					
ANR	202312	IdentifierDeclType	Bucket *		202303	0					
ANR	202313	Identifier	p		202303	1					
ANR	202314	IdentifierDeclStatement	zval * t ;	1893:1:52217:52224	202303	2	True				
ANR	202315	IdentifierDecl	* t		202303	0					
ANR	202316	IdentifierDeclType	zval *		202303	0					
ANR	202317	Identifier	t		202303	1					
ANR	202318	ExpressionStatement	IS_CONSISTENT ( source )	1895:1:52228:52249	202303	3	True				
ANR	202319	CallExpression	IS_CONSISTENT ( source )		202303	0					
ANR	202320	Callee	IS_CONSISTENT		202303	0					
ANR	202321	Identifier	IS_CONSISTENT		202303	0					
ANR	202322	ArgumentList	source		202303	1					
ANR	202323	Argument	source		202303	0					
ANR	202324	Identifier	source		202303	0					
ANR	202325	ExpressionStatement	IS_CONSISTENT ( target )	1896:1:52252:52273	202303	4	True				
ANR	202326	CallExpression	IS_CONSISTENT ( target )		202303	0					
ANR	202327	Callee	IS_CONSISTENT		202303	0					
ANR	202328	Identifier	IS_CONSISTENT		202303	0					
ANR	202329	ArgumentList	target		202303	1					
ANR	202330	Argument	target		202303	0					
ANR	202331	Identifier	target		202303	0					
ANR	202332	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( target ) == 1 )	1897:1:52276:52311	202303	5	True				
ANR	202333	CallExpression	HT_ASSERT ( GC_REFCOUNT ( target ) == 1 )		202303	0					
ANR	202334	Callee	HT_ASSERT		202303	0					
ANR	202335	Identifier	HT_ASSERT		202303	0					
ANR	202336	ArgumentList	GC_REFCOUNT ( target ) == 1		202303	1					
ANR	202337	Argument	GC_REFCOUNT ( target ) == 1		202303	0					
ANR	202338	EqualityExpression	GC_REFCOUNT ( target ) == 1		202303	0		==			
ANR	202339	CallExpression	GC_REFCOUNT ( target )		202303	0					
ANR	202340	Callee	GC_REFCOUNT		202303	0					
ANR	202341	Identifier	GC_REFCOUNT		202303	0					
ANR	202342	ArgumentList	target		202303	1					
ANR	202343	Argument	target		202303	0					
ANR	202344	Identifier	target		202303	0					
ANR	202345	PrimaryExpression	1		202303	1					
ANR	202346	ForStatement	for ( idx = 0 ; idx < source -> nNumUsed ; idx ++ )		202303	6					
ANR	202347	ForInit	idx = 0 ;	1899:6:52320:52327	202303	0	True				
ANR	202348	AssignmentExpression	idx = 0		202303	0		=			
ANR	202349	Identifier	idx		202303	0					
ANR	202350	PrimaryExpression	0		202303	1					
ANR	202351	Condition	idx < source -> nNumUsed	1899:15:52329:52350	202303	1	True				
ANR	202352	RelationalExpression	idx < source -> nNumUsed		202303	0		<			
ANR	202353	Identifier	idx		202303	0					
ANR	202354	PtrMemberAccess	source -> nNumUsed		202303	1					
ANR	202355	Identifier	source		202303	0					
ANR	202356	Identifier	nNumUsed		202303	1					
ANR	202357	PostIncDecOperationExpression	idx ++	1899:39:52353:52357	202303	2	True				
ANR	202358	Identifier	idx		202303	0					
ANR	202359	IncDec	++		202303	1					
ANR	202360	CompoundStatement		10:46:172:172	202303	3					
ANR	202361	ExpressionStatement	p = source -> arData + idx	1900:2:52364:52388	202303	0	True				
ANR	202362	AssignmentExpression	p = source -> arData + idx		202303	0		=			
ANR	202363	Identifier	p		202303	0					
ANR	202364	AdditiveExpression	source -> arData + idx		202303	1		+			
ANR	202365	PtrMemberAccess	source -> arData		202303	0					
ANR	202366	Identifier	source		202303	0					
ANR	202367	Identifier	arData		202303	1					
ANR	202368	Identifier	idx		202303	1					
ANR	202369	IfStatement	if ( UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF ) )		202303	1					
ANR	202370	Condition	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )	1901:6:52396:52433	202303	0	True				
ANR	202371	CallExpression	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )		202303	0					
ANR	202372	Callee	UNEXPECTED		202303	0					
ANR	202373	Identifier	UNEXPECTED		202303	0					
ANR	202374	ArgumentList	Z_TYPE ( p -> val ) == IS_UNDEF		202303	1					
ANR	202375	Argument	Z_TYPE ( p -> val ) == IS_UNDEF		202303	0					
ANR	202376	EqualityExpression	Z_TYPE ( p -> val ) == IS_UNDEF		202303	0		==			
ANR	202377	CallExpression	Z_TYPE ( p -> val )		202303	0					
ANR	202378	Callee	Z_TYPE		202303	0					
ANR	202379	Identifier	Z_TYPE		202303	0					
ANR	202380	ArgumentList	p -> val		202303	1					
ANR	202381	Argument	p -> val		202303	0					
ANR	202382	PtrMemberAccess	p -> val		202303	0					
ANR	202383	Identifier	p		202303	0					
ANR	202384	Identifier	val		202303	1					
ANR	202385	Identifier	IS_UNDEF		202303	1					
ANR	202386	ContinueStatement	continue ;	1901:46:52436:52444	202303	1	True				
ANR	202387	IfStatement	"if ( zend_hash_replace_checker_wrapper ( target , & p -> val , p , pParam , pMergeSource ) )"		202303	2					
ANR	202388	Condition	"zend_hash_replace_checker_wrapper ( target , & p -> val , p , pParam , pMergeSource )"	1902:6:52452:52526	202303	0	True				
ANR	202389	CallExpression	"zend_hash_replace_checker_wrapper ( target , & p -> val , p , pParam , pMergeSource )"		202303	0					
ANR	202390	Callee	zend_hash_replace_checker_wrapper		202303	0					
ANR	202391	Identifier	zend_hash_replace_checker_wrapper		202303	0					
ANR	202392	ArgumentList	target		202303	1					
ANR	202393	Argument	target		202303	0					
ANR	202394	Identifier	target		202303	0					
ANR	202395	Argument	& p -> val		202303	1					
ANR	202396	UnaryOperationExpression	& p -> val		202303	0					
ANR	202397	UnaryOperator	&		202303	0					
ANR	202398	PtrMemberAccess	p -> val		202303	1					
ANR	202399	Identifier	p		202303	0					
ANR	202400	Identifier	val		202303	1					
ANR	202401	Argument	p		202303	2					
ANR	202402	Identifier	p		202303	0					
ANR	202403	Argument	pParam		202303	3					
ANR	202404	Identifier	pParam		202303	0					
ANR	202405	Argument	pMergeSource		202303	4					
ANR	202406	Identifier	pMergeSource		202303	0					
ANR	202407	CompoundStatement		13:83:341:341	202303	1					
ANR	202408	ExpressionStatement	"t = zend_hash_update ( target , p -> key , & p -> val )"	1903:3:52534:52579	202303	0	True				
ANR	202409	AssignmentExpression	"t = zend_hash_update ( target , p -> key , & p -> val )"		202303	0		=			
ANR	202410	Identifier	t		202303	0					
ANR	202411	CallExpression	"zend_hash_update ( target , p -> key , & p -> val )"		202303	1					
ANR	202412	Callee	zend_hash_update		202303	0					
ANR	202413	Identifier	zend_hash_update		202303	0					
ANR	202414	ArgumentList	target		202303	1					
ANR	202415	Argument	target		202303	0					
ANR	202416	Identifier	target		202303	0					
ANR	202417	Argument	p -> key		202303	1					
ANR	202418	PtrMemberAccess	p -> key		202303	0					
ANR	202419	Identifier	p		202303	0					
ANR	202420	Identifier	key		202303	1					
ANR	202421	Argument	& p -> val		202303	2					
ANR	202422	UnaryOperationExpression	& p -> val		202303	0					
ANR	202423	UnaryOperator	&		202303	0					
ANR	202424	PtrMemberAccess	p -> val		202303	1					
ANR	202425	Identifier	p		202303	0					
ANR	202426	Identifier	val		202303	1					
ANR	202427	IfStatement	if ( t && pCopyConstructor )		202303	1					
ANR	202428	Condition	t && pCopyConstructor	1904:7:52588:52608	202303	0	True				
ANR	202429	AndExpression	t && pCopyConstructor		202303	0		&&			
ANR	202430	Identifier	t		202303	0					
ANR	202431	Identifier	pCopyConstructor		202303	1					
ANR	202432	CompoundStatement		15:30:423:423	202303	1					
ANR	202433	ExpressionStatement	pCopyConstructor ( t )	1905:4:52617:52636	202303	0	True				
ANR	202434	CallExpression	pCopyConstructor ( t )		202303	0					
ANR	202435	Callee	pCopyConstructor		202303	0					
ANR	202436	Identifier	pCopyConstructor		202303	0					
ANR	202437	ArgumentList	t		202303	1					
ANR	202438	Argument	t		202303	0					
ANR	202439	Identifier	t		202303	0					
ANR	202440	IfStatement	if ( target -> nNumOfElements > 0 )		202303	7					
ANR	202441	Condition	target -> nNumOfElements > 0	1909:5:52655:52680	202303	0	True				
ANR	202442	RelationalExpression	target -> nNumOfElements > 0		202303	0		>			
ANR	202443	PtrMemberAccess	target -> nNumOfElements		202303	0					
ANR	202444	Identifier	target		202303	0					
ANR	202445	Identifier	nNumOfElements		202303	1					
ANR	202446	PrimaryExpression	0		202303	1					
ANR	202447	CompoundStatement		20:33:495:495	202303	1					
ANR	202448	ExpressionStatement	idx = 0	1910:2:52687:52694	202303	0	True				
ANR	202449	AssignmentExpression	idx = 0		202303	0		=			
ANR	202450	Identifier	idx		202303	0					
ANR	202451	PrimaryExpression	0		202303	1					
ANR	202452	WhileStatement	while ( Z_TYPE ( target -> arData [ idx ] . val ) == IS_UNDEF )		202303	1					
ANR	202453	Condition	Z_TYPE ( target -> arData [ idx ] . val ) == IS_UNDEF	1911:9:52705:52747	202303	0	True				
ANR	202454	EqualityExpression	Z_TYPE ( target -> arData [ idx ] . val ) == IS_UNDEF		202303	0		==			
ANR	202455	CallExpression	Z_TYPE ( target -> arData [ idx ] . val )		202303	0					
ANR	202456	Callee	Z_TYPE		202303	0					
ANR	202457	Identifier	Z_TYPE		202303	0					
ANR	202458	ArgumentList	target -> arData [ idx ] . val		202303	1					
ANR	202459	Argument	target -> arData [ idx ] . val		202303	0					
ANR	202460	MemberAccess	target -> arData [ idx ] . val		202303	0					
ANR	202461	ArrayIndexing	target -> arData [ idx ]		202303	0					
ANR	202462	PtrMemberAccess	target -> arData		202303	0					
ANR	202463	Identifier	target		202303	0					
ANR	202464	Identifier	arData		202303	1					
ANR	202465	Identifier	idx		202303	1					
ANR	202466	Identifier	val		202303	1					
ANR	202467	Identifier	IS_UNDEF		202303	1					
ANR	202468	CompoundStatement		22:54:562:562	202303	1					
ANR	202469	ExpressionStatement	idx ++	1912:3:52755:52760	202303	0	True				
ANR	202470	PostIncDecOperationExpression	idx ++		202303	0					
ANR	202471	Identifier	idx		202303	0					
ANR	202472	IncDec	++		202303	1					
ANR	202473	ExpressionStatement	target -> nInternalPointer = idx	1914:2:52768:52798	202303	2	True				
ANR	202474	AssignmentExpression	target -> nInternalPointer = idx		202303	0		=			
ANR	202475	PtrMemberAccess	target -> nInternalPointer		202303	0					
ANR	202476	Identifier	target		202303	0					
ANR	202477	Identifier	nInternalPointer		202303	1					
ANR	202478	Identifier	idx		202303	1					
ANR	202479	ReturnType	ZEND_API void ZEND_FASTCALL		202303	1					
ANR	202480	Identifier	zend_hash_merge_ex		202303	2					
ANR	202481	ParameterList	"HashTable * target , HashTable * source , copy_ctor_func_t pCopyConstructor , merge_checker_func_t pMergeSource , void * pParam"		202303	3					
ANR	202482	Parameter	HashTable * target	1889:47:52065:52081	202303	0	True				
ANR	202483	ParameterType	HashTable *		202303	0					
ANR	202484	Identifier	target		202303	1					
ANR	202485	Parameter	HashTable * source	1889:66:52084:52100	202303	1	True				
ANR	202486	ParameterType	HashTable *		202303	0					
ANR	202487	Identifier	source		202303	1					
ANR	202488	Parameter	copy_ctor_func_t pCopyConstructor	1889:85:52103:52135	202303	2	True				
ANR	202489	ParameterType	copy_ctor_func_t		202303	0					
ANR	202490	Identifier	pCopyConstructor		202303	1					
ANR	202491	Parameter	merge_checker_func_t pMergeSource	1889:120:52138:52170	202303	3	True				
ANR	202492	ParameterType	merge_checker_func_t		202303	0					
ANR	202493	Identifier	pMergeSource		202303	1					
ANR	202494	Parameter	void * pParam	1889:155:52173:52184	202303	4	True				
ANR	202495	ParameterType	void *		202303	0					
ANR	202496	Identifier	pParam		202303	1					
ANR	202497	CFGEntryNode	ENTRY		202303		True				
ANR	202498	CFGExitNode	EXIT		202303		True				
ANR	202499	Symbol	target -> arData [ idx ] . val		202303						
ANR	202500	Symbol	source -> arData		202303						
ANR	202501	Symbol	zend_hash_replace_checker_wrapper		202303						
ANR	202502	Symbol	Z_TYPE		202303						
ANR	202503	Symbol	source		202303						
ANR	202504	Symbol	pParam		202303						
ANR	202505	Symbol	UNEXPECTED		202303						
ANR	202506	Symbol	target -> nNumOfElements		202303						
ANR	202507	Symbol	* source		202303						
ANR	202508	Symbol	* idx		202303						
ANR	202509	Symbol	target -> arData		202303						
ANR	202510	Symbol	target -> nInternalPointer		202303						
ANR	202511	Symbol	pCopyConstructor		202303						
ANR	202512	Symbol	zend_hash_update		202303						
ANR	202513	Symbol	GC_REFCOUNT		202303						
ANR	202514	Symbol	IS_UNDEF		202303						
ANR	202515	Symbol	& p -> val		202303						
ANR	202516	Symbol	source -> nNumUsed		202303						
ANR	202517	Symbol	* * target		202303						
ANR	202518	Symbol	p -> val		202303						
ANR	202519	Symbol	p -> key		202303						
ANR	202520	Symbol	target		202303						
ANR	202521	Symbol	p		202303						
ANR	202522	Symbol	* target		202303						
ANR	202523	Symbol	t		202303						
ANR	202524	Symbol	* p		202303						
ANR	202525	Symbol	pMergeSource		202303						
ANR	202526	Symbol	idx		202303						
ANR	202527	Symbol	* target -> arData		202303						
ANR	202528	Function	zend_hash_find	1920:15:52882:53051							
ANR	202529	FunctionDef	"zend_hash_find (const HashTable * ht , zend_string * key)"		202528	0					
ANR	202530	CompoundStatement		1921:0:52950:53051	202528	0					
ANR	202531	IdentifierDeclStatement	Bucket * p ;	1922:1:52953:52962	202528	0	True				
ANR	202532	IdentifierDecl	* p		202528	0					
ANR	202533	IdentifierDeclType	Bucket *		202528	0					
ANR	202534	Identifier	p		202528	1					
ANR	202535	ExpressionStatement	IS_CONSISTENT ( ht )	1924:1:52966:52983	202528	1	True				
ANR	202536	CallExpression	IS_CONSISTENT ( ht )		202528	0					
ANR	202537	Callee	IS_CONSISTENT		202528	0					
ANR	202538	Identifier	IS_CONSISTENT		202528	0					
ANR	202539	ArgumentList	ht		202528	1					
ANR	202540	Argument	ht		202528	0					
ANR	202541	Identifier	ht		202528	0					
ANR	202542	ExpressionStatement	"p = zend_hash_find_bucket ( ht , key )"	1926:1:52987:53021	202528	2	True				
ANR	202543	AssignmentExpression	"p = zend_hash_find_bucket ( ht , key )"		202528	0		=			
ANR	202544	Identifier	p		202528	0					
ANR	202545	CallExpression	"zend_hash_find_bucket ( ht , key )"		202528	1					
ANR	202546	Callee	zend_hash_find_bucket		202528	0					
ANR	202547	Identifier	zend_hash_find_bucket		202528	0					
ANR	202548	ArgumentList	ht		202528	1					
ANR	202549	Argument	ht		202528	0					
ANR	202550	Identifier	ht		202528	0					
ANR	202551	Argument	key		202528	1					
ANR	202552	Identifier	key		202528	0					
ANR	202553	ReturnStatement	return p ? & p -> val : NULL ;	1927:1:53024:53049	202528	3	True				
ANR	202554	ConditionalExpression	p ? & p -> val : NULL		202528	0					
ANR	202555	Condition	p		202528	0					
ANR	202556	Identifier	p		202528	0					
ANR	202557	UnaryOperationExpression	& p -> val		202528	1					
ANR	202558	UnaryOperator	&		202528	0					
ANR	202559	PtrMemberAccess	p -> val		202528	1					
ANR	202560	Identifier	p		202528	0					
ANR	202561	Identifier	val		202528	1					
ANR	202562	Identifier	NULL		202528	2					
ANR	202563	ReturnType	ZEND_FASTCALL		202528	1					
ANR	202564	Identifier	zend_hash_find		202528	2					
ANR	202565	ParameterList	"const HashTable * ht , zend_string * key"		202528	3					
ANR	202566	Parameter	const HashTable * ht	1920:44:52911:52929	202528	0	True				
ANR	202567	ParameterType	const HashTable *		202528	0					
ANR	202568	Identifier	ht		202528	1					
ANR	202569	Parameter	zend_string * key	1920:65:52932:52947	202528	1	True				
ANR	202570	ParameterType	zend_string *		202528	0					
ANR	202571	Identifier	key		202528	1					
ANR	202572	CFGEntryNode	ENTRY		202528		True				
ANR	202573	CFGExitNode	EXIT		202528		True				
ANR	202574	Symbol	p		202528						
ANR	202575	Symbol	zend_hash_find_bucket		202528						
ANR	202576	Symbol	NULL		202528						
ANR	202577	Symbol	ht		202528						
ANR	202578	Symbol	key		202528						
ANR	202579	Symbol	& p -> val		202528						
ANR	202580	Function	zend_hash_str_find	1930:15:53069:53318							
ANR	202581	FunctionDef	"zend_hash_str_find (const HashTable * ht , const char * str , size_t len)"		202580	0					
ANR	202582	CompoundStatement		1931:0:53152:53318	202580	0					
ANR	202583	IdentifierDeclStatement	zend_ulong h ;	1932:1:53155:53167	202580	0	True				
ANR	202584	IdentifierDecl	h		202580	0					
ANR	202585	IdentifierDeclType	zend_ulong		202580	0					
ANR	202586	Identifier	h		202580	1					
ANR	202587	IdentifierDeclStatement	Bucket * p ;	1933:1:53170:53179	202580	1	True				
ANR	202588	IdentifierDecl	* p		202580	0					
ANR	202589	IdentifierDeclType	Bucket *		202580	0					
ANR	202590	Identifier	p		202580	1					
ANR	202591	ExpressionStatement	IS_CONSISTENT ( ht )	1935:1:53183:53200	202580	2	True				
ANR	202592	CallExpression	IS_CONSISTENT ( ht )		202580	0					
ANR	202593	Callee	IS_CONSISTENT		202580	0					
ANR	202594	Identifier	IS_CONSISTENT		202580	0					
ANR	202595	ArgumentList	ht		202580	1					
ANR	202596	Argument	ht		202580	0					
ANR	202597	Identifier	ht		202580	0					
ANR	202598	ExpressionStatement	"h = zend_inline_hash_func ( str , len )"	1937:1:53204:53239	202580	3	True				
ANR	202599	AssignmentExpression	"h = zend_inline_hash_func ( str , len )"		202580	0		=			
ANR	202600	Identifier	h		202580	0					
ANR	202601	CallExpression	"zend_inline_hash_func ( str , len )"		202580	1					
ANR	202602	Callee	zend_inline_hash_func		202580	0					
ANR	202603	Identifier	zend_inline_hash_func		202580	0					
ANR	202604	ArgumentList	str		202580	1					
ANR	202605	Argument	str		202580	0					
ANR	202606	Identifier	str		202580	0					
ANR	202607	Argument	len		202580	1					
ANR	202608	Identifier	len		202580	0					
ANR	202609	ExpressionStatement	"p = zend_hash_str_find_bucket ( ht , str , len , h )"	1938:1:53242:53288	202580	4	True				
ANR	202610	AssignmentExpression	"p = zend_hash_str_find_bucket ( ht , str , len , h )"		202580	0		=			
ANR	202611	Identifier	p		202580	0					
ANR	202612	CallExpression	"zend_hash_str_find_bucket ( ht , str , len , h )"		202580	1					
ANR	202613	Callee	zend_hash_str_find_bucket		202580	0					
ANR	202614	Identifier	zend_hash_str_find_bucket		202580	0					
ANR	202615	ArgumentList	ht		202580	1					
ANR	202616	Argument	ht		202580	0					
ANR	202617	Identifier	ht		202580	0					
ANR	202618	Argument	str		202580	1					
ANR	202619	Identifier	str		202580	0					
ANR	202620	Argument	len		202580	2					
ANR	202621	Identifier	len		202580	0					
ANR	202622	Argument	h		202580	3					
ANR	202623	Identifier	h		202580	0					
ANR	202624	ReturnStatement	return p ? & p -> val : NULL ;	1939:1:53291:53316	202580	5	True				
ANR	202625	ConditionalExpression	p ? & p -> val : NULL		202580	0					
ANR	202626	Condition	p		202580	0					
ANR	202627	Identifier	p		202580	0					
ANR	202628	UnaryOperationExpression	& p -> val		202580	1					
ANR	202629	UnaryOperator	&		202580	0					
ANR	202630	PtrMemberAccess	p -> val		202580	1					
ANR	202631	Identifier	p		202580	0					
ANR	202632	Identifier	val		202580	1					
ANR	202633	Identifier	NULL		202580	2					
ANR	202634	ReturnType	ZEND_FASTCALL		202580	1					
ANR	202635	Identifier	zend_hash_str_find		202580	2					
ANR	202636	ParameterList	"const HashTable * ht , const char * str , size_t len"		202580	3					
ANR	202637	Parameter	const HashTable * ht	1930:48:53102:53120	202580	0	True				
ANR	202638	ParameterType	const HashTable *		202580	0					
ANR	202639	Identifier	ht		202580	1					
ANR	202640	Parameter	const char * str	1930:69:53123:53137	202580	1	True				
ANR	202641	ParameterType	const char *		202580	0					
ANR	202642	Identifier	str		202580	1					
ANR	202643	Parameter	size_t len	1930:86:53140:53149	202580	2	True				
ANR	202644	ParameterType	size_t		202580	0					
ANR	202645	Identifier	len		202580	1					
ANR	202646	CFGEntryNode	ENTRY		202580		True				
ANR	202647	CFGExitNode	EXIT		202580		True				
ANR	202648	Symbol	str		202580						
ANR	202649	Symbol	p		202580						
ANR	202650	Symbol	NULL		202580						
ANR	202651	Symbol	len		202580						
ANR	202652	Symbol	h		202580						
ANR	202653	Symbol	zend_hash_str_find_bucket		202580						
ANR	202654	Symbol	ht		202580						
ANR	202655	Symbol	zend_inline_hash_func		202580						
ANR	202656	Symbol	& p -> val		202580						
ANR	202657	Function	zend_hash_exists	1942:0:53321:53502							
ANR	202658	FunctionDef	"zend_hash_exists (const HashTable * ht , zend_string * key)"		202657	0					
ANR	202659	CompoundStatement		1943:0:53410:53502	202657	0					
ANR	202660	IdentifierDeclStatement	Bucket * p ;	1944:1:53413:53422	202657	0	True				
ANR	202661	IdentifierDecl	* p		202657	0					
ANR	202662	IdentifierDeclType	Bucket *		202657	0					
ANR	202663	Identifier	p		202657	1					
ANR	202664	ExpressionStatement	IS_CONSISTENT ( ht )	1946:1:53426:53443	202657	1	True				
ANR	202665	CallExpression	IS_CONSISTENT ( ht )		202657	0					
ANR	202666	Callee	IS_CONSISTENT		202657	0					
ANR	202667	Identifier	IS_CONSISTENT		202657	0					
ANR	202668	ArgumentList	ht		202657	1					
ANR	202669	Argument	ht		202657	0					
ANR	202670	Identifier	ht		202657	0					
ANR	202671	ExpressionStatement	"p = zend_hash_find_bucket ( ht , key )"	1948:1:53447:53481	202657	2	True				
ANR	202672	AssignmentExpression	"p = zend_hash_find_bucket ( ht , key )"		202657	0		=			
ANR	202673	Identifier	p		202657	0					
ANR	202674	CallExpression	"zend_hash_find_bucket ( ht , key )"		202657	1					
ANR	202675	Callee	zend_hash_find_bucket		202657	0					
ANR	202676	Identifier	zend_hash_find_bucket		202657	0					
ANR	202677	ArgumentList	ht		202657	1					
ANR	202678	Argument	ht		202657	0					
ANR	202679	Identifier	ht		202657	0					
ANR	202680	Argument	key		202657	1					
ANR	202681	Identifier	key		202657	0					
ANR	202682	ReturnStatement	return p ? 1 : 0 ;	1949:1:53484:53500	202657	3	True				
ANR	202683	ConditionalExpression	p ? 1 : 0		202657	0					
ANR	202684	Condition	p		202657	0					
ANR	202685	Identifier	p		202657	0					
ANR	202686	PrimaryExpression	1		202657	1					
ANR	202687	PrimaryExpression	0		202657	2					
ANR	202688	ReturnType	ZEND_API zend_bool ZEND_FASTCALL		202657	1					
ANR	202689	Identifier	zend_hash_exists		202657	2					
ANR	202690	ParameterList	"const HashTable * ht , zend_string * key"		202657	3					
ANR	202691	Parameter	const HashTable * ht	1942:50:53371:53389	202657	0	True				
ANR	202692	ParameterType	const HashTable *		202657	0					
ANR	202693	Identifier	ht		202657	1					
ANR	202694	Parameter	zend_string * key	1942:71:53392:53407	202657	1	True				
ANR	202695	ParameterType	zend_string *		202657	0					
ANR	202696	Identifier	key		202657	1					
ANR	202697	CFGEntryNode	ENTRY		202657		True				
ANR	202698	CFGExitNode	EXIT		202657		True				
ANR	202699	Symbol	p		202657						
ANR	202700	Symbol	zend_hash_find_bucket		202657						
ANR	202701	Symbol	ht		202657						
ANR	202702	Symbol	key		202657						
ANR	202703	Function	zend_hash_str_exists	1952:0:53505:53766							
ANR	202704	FunctionDef	"zend_hash_str_exists (const HashTable * ht , const char * str , size_t len)"		202703	0					
ANR	202705	CompoundStatement		1953:0:53609:53766	202703	0					
ANR	202706	IdentifierDeclStatement	zend_ulong h ;	1954:1:53612:53624	202703	0	True				
ANR	202707	IdentifierDecl	h		202703	0					
ANR	202708	IdentifierDeclType	zend_ulong		202703	0					
ANR	202709	Identifier	h		202703	1					
ANR	202710	IdentifierDeclStatement	Bucket * p ;	1955:1:53627:53636	202703	1	True				
ANR	202711	IdentifierDecl	* p		202703	0					
ANR	202712	IdentifierDeclType	Bucket *		202703	0					
ANR	202713	Identifier	p		202703	1					
ANR	202714	ExpressionStatement	IS_CONSISTENT ( ht )	1957:1:53640:53657	202703	2	True				
ANR	202715	CallExpression	IS_CONSISTENT ( ht )		202703	0					
ANR	202716	Callee	IS_CONSISTENT		202703	0					
ANR	202717	Identifier	IS_CONSISTENT		202703	0					
ANR	202718	ArgumentList	ht		202703	1					
ANR	202719	Argument	ht		202703	0					
ANR	202720	Identifier	ht		202703	0					
ANR	202721	ExpressionStatement	"h = zend_inline_hash_func ( str , len )"	1959:1:53661:53696	202703	3	True				
ANR	202722	AssignmentExpression	"h = zend_inline_hash_func ( str , len )"		202703	0		=			
ANR	202723	Identifier	h		202703	0					
ANR	202724	CallExpression	"zend_inline_hash_func ( str , len )"		202703	1					
ANR	202725	Callee	zend_inline_hash_func		202703	0					
ANR	202726	Identifier	zend_inline_hash_func		202703	0					
ANR	202727	ArgumentList	str		202703	1					
ANR	202728	Argument	str		202703	0					
ANR	202729	Identifier	str		202703	0					
ANR	202730	Argument	len		202703	1					
ANR	202731	Identifier	len		202703	0					
ANR	202732	ExpressionStatement	"p = zend_hash_str_find_bucket ( ht , str , len , h )"	1960:1:53699:53745	202703	4	True				
ANR	202733	AssignmentExpression	"p = zend_hash_str_find_bucket ( ht , str , len , h )"		202703	0		=			
ANR	202734	Identifier	p		202703	0					
ANR	202735	CallExpression	"zend_hash_str_find_bucket ( ht , str , len , h )"		202703	1					
ANR	202736	Callee	zend_hash_str_find_bucket		202703	0					
ANR	202737	Identifier	zend_hash_str_find_bucket		202703	0					
ANR	202738	ArgumentList	ht		202703	1					
ANR	202739	Argument	ht		202703	0					
ANR	202740	Identifier	ht		202703	0					
ANR	202741	Argument	str		202703	1					
ANR	202742	Identifier	str		202703	0					
ANR	202743	Argument	len		202703	2					
ANR	202744	Identifier	len		202703	0					
ANR	202745	Argument	h		202703	3					
ANR	202746	Identifier	h		202703	0					
ANR	202747	ReturnStatement	return p ? 1 : 0 ;	1961:1:53748:53764	202703	5	True				
ANR	202748	ConditionalExpression	p ? 1 : 0		202703	0					
ANR	202749	Condition	p		202703	0					
ANR	202750	Identifier	p		202703	0					
ANR	202751	PrimaryExpression	1		202703	1					
ANR	202752	PrimaryExpression	0		202703	2					
ANR	202753	ReturnType	ZEND_API zend_bool ZEND_FASTCALL		202703	1					
ANR	202754	Identifier	zend_hash_str_exists		202703	2					
ANR	202755	ParameterList	"const HashTable * ht , const char * str , size_t len"		202703	3					
ANR	202756	Parameter	const HashTable * ht	1952:54:53559:53577	202703	0	True				
ANR	202757	ParameterType	const HashTable *		202703	0					
ANR	202758	Identifier	ht		202703	1					
ANR	202759	Parameter	const char * str	1952:75:53580:53594	202703	1	True				
ANR	202760	ParameterType	const char *		202703	0					
ANR	202761	Identifier	str		202703	1					
ANR	202762	Parameter	size_t len	1952:92:53597:53606	202703	2	True				
ANR	202763	ParameterType	size_t		202703	0					
ANR	202764	Identifier	len		202703	1					
ANR	202765	CFGEntryNode	ENTRY		202703		True				
ANR	202766	CFGExitNode	EXIT		202703		True				
ANR	202767	Symbol	str		202703						
ANR	202768	Symbol	p		202703						
ANR	202769	Symbol	len		202703						
ANR	202770	Symbol	h		202703						
ANR	202771	Symbol	zend_hash_str_find_bucket		202703						
ANR	202772	Symbol	ht		202703						
ANR	202773	Symbol	zend_inline_hash_func		202703						
ANR	202774	Function	zend_hash_index_find	1964:15:53784:54132							
ANR	202775	FunctionDef	"zend_hash_index_find (const HashTable * ht , zend_ulong h)"		202774	0					
ANR	202776	CompoundStatement		1965:0:53854:54132	202774	0					
ANR	202777	IdentifierDeclStatement	Bucket * p ;	1966:1:53857:53866	202774	0	True				
ANR	202778	IdentifierDecl	* p		202774	0					
ANR	202779	IdentifierDeclType	Bucket *		202774	0					
ANR	202780	Identifier	p		202774	1					
ANR	202781	ExpressionStatement	IS_CONSISTENT ( ht )	1968:1:53870:53887	202774	1	True				
ANR	202782	CallExpression	IS_CONSISTENT ( ht )		202774	0					
ANR	202783	Callee	IS_CONSISTENT		202774	0					
ANR	202784	Identifier	IS_CONSISTENT		202774	0					
ANR	202785	ArgumentList	ht		202774	1					
ANR	202786	Argument	ht		202774	0					
ANR	202787	Identifier	ht		202774	0					
ANR	202788	IfStatement	if ( ht -> u . flags & HASH_FLAG_PACKED )		202774	2					
ANR	202789	Condition	ht -> u . flags & HASH_FLAG_PACKED	1970:5:53895:53924	202774	0	True				
ANR	202790	BitAndExpression	ht -> u . flags & HASH_FLAG_PACKED		202774	0		&			
ANR	202791	MemberAccess	ht -> u . flags		202774	0					
ANR	202792	PtrMemberAccess	ht -> u		202774	0					
ANR	202793	Identifier	ht		202774	0					
ANR	202794	Identifier	u		202774	1					
ANR	202795	Identifier	flags		202774	1					
ANR	202796	Identifier	HASH_FLAG_PACKED		202774	1					
ANR	202797	CompoundStatement		6:37:72:72	202774	1					
ANR	202798	IfStatement	if ( h < ht -> nNumUsed )		202774	0					
ANR	202799	Condition	h < ht -> nNumUsed	1971:6:53935:53950	202774	0	True				
ANR	202800	RelationalExpression	h < ht -> nNumUsed		202774	0		<			
ANR	202801	Identifier	h		202774	0					
ANR	202802	PtrMemberAccess	ht -> nNumUsed		202774	1					
ANR	202803	Identifier	ht		202774	0					
ANR	202804	Identifier	nNumUsed		202774	1					
ANR	202805	CompoundStatement		7:24:98:98	202774	1					
ANR	202806	ExpressionStatement	p = ht -> arData + h	1972:3:53958:53976	202774	0	True				
ANR	202807	AssignmentExpression	p = ht -> arData + h		202774	0		=			
ANR	202808	Identifier	p		202774	0					
ANR	202809	AdditiveExpression	ht -> arData + h		202774	1		+			
ANR	202810	PtrMemberAccess	ht -> arData		202774	0					
ANR	202811	Identifier	ht		202774	0					
ANR	202812	Identifier	arData		202774	1					
ANR	202813	Identifier	h		202774	1					
ANR	202814	IfStatement	if ( Z_TYPE ( p -> val ) != IS_UNDEF )		202774	1					
ANR	202815	Condition	Z_TYPE ( p -> val ) != IS_UNDEF	1973:7:53985:54010	202774	0	True				
ANR	202816	EqualityExpression	Z_TYPE ( p -> val ) != IS_UNDEF		202774	0		!=			
ANR	202817	CallExpression	Z_TYPE ( p -> val )		202774	0					
ANR	202818	Callee	Z_TYPE		202774	0					
ANR	202819	Identifier	Z_TYPE		202774	0					
ANR	202820	ArgumentList	p -> val		202774	1					
ANR	202821	Argument	p -> val		202774	0					
ANR	202822	PtrMemberAccess	p -> val		202774	0					
ANR	202823	Identifier	p		202774	0					
ANR	202824	Identifier	val		202774	1					
ANR	202825	Identifier	IS_UNDEF		202774	1					
ANR	202826	CompoundStatement		9:35:158:158	202774	1					
ANR	202827	ReturnStatement	return & p -> val ;	1974:4:54019:54033	202774	0	True				
ANR	202828	UnaryOperationExpression	& p -> val		202774	0					
ANR	202829	UnaryOperator	&		202774	0					
ANR	202830	PtrMemberAccess	p -> val		202774	1					
ANR	202831	Identifier	p		202774	0					
ANR	202832	Identifier	val		202774	1					
ANR	202833	ReturnStatement	return NULL ;	1977:2:54046:54057	202774	1	True				
ANR	202834	Identifier	NULL		202774	0					
ANR	202835	ExpressionStatement	"p = zend_hash_index_find_bucket ( ht , h )"	1980:1:54064:54102	202774	3	True				
ANR	202836	AssignmentExpression	"p = zend_hash_index_find_bucket ( ht , h )"		202774	0		=			
ANR	202837	Identifier	p		202774	0					
ANR	202838	CallExpression	"zend_hash_index_find_bucket ( ht , h )"		202774	1					
ANR	202839	Callee	zend_hash_index_find_bucket		202774	0					
ANR	202840	Identifier	zend_hash_index_find_bucket		202774	0					
ANR	202841	ArgumentList	ht		202774	1					
ANR	202842	Argument	ht		202774	0					
ANR	202843	Identifier	ht		202774	0					
ANR	202844	Argument	h		202774	1					
ANR	202845	Identifier	h		202774	0					
ANR	202846	ReturnStatement	return p ? & p -> val : NULL ;	1981:1:54105:54130	202774	4	True				
ANR	202847	ConditionalExpression	p ? & p -> val : NULL		202774	0					
ANR	202848	Condition	p		202774	0					
ANR	202849	Identifier	p		202774	0					
ANR	202850	UnaryOperationExpression	& p -> val		202774	1					
ANR	202851	UnaryOperator	&		202774	0					
ANR	202852	PtrMemberAccess	p -> val		202774	1					
ANR	202853	Identifier	p		202774	0					
ANR	202854	Identifier	val		202774	1					
ANR	202855	Identifier	NULL		202774	2					
ANR	202856	ReturnType	ZEND_FASTCALL		202774	1					
ANR	202857	Identifier	zend_hash_index_find		202774	2					
ANR	202858	ParameterList	"const HashTable * ht , zend_ulong h"		202774	3					
ANR	202859	Parameter	const HashTable * ht	1964:50:53819:53837	202774	0	True				
ANR	202860	ParameterType	const HashTable *		202774	0					
ANR	202861	Identifier	ht		202774	1					
ANR	202862	Parameter	zend_ulong h	1964:71:53840:53851	202774	1	True				
ANR	202863	ParameterType	zend_ulong		202774	0					
ANR	202864	Identifier	h		202774	1					
ANR	202865	CFGEntryNode	ENTRY		202774		True				
ANR	202866	CFGExitNode	EXIT		202774		True				
ANR	202867	Symbol	NULL		202774						
ANR	202868	Symbol	HASH_FLAG_PACKED		202774						
ANR	202869	Symbol	h		202774						
ANR	202870	Symbol	ht -> u		202774						
ANR	202871	Symbol	ht -> arData		202774						
ANR	202872	Symbol	Z_TYPE		202774						
ANR	202873	Symbol	ht -> u . flags		202774						
ANR	202874	Symbol	ht		202774						
ANR	202875	Symbol	p -> val		202774						
ANR	202876	Symbol	p		202774						
ANR	202877	Symbol	* ht		202774						
ANR	202878	Symbol	zend_hash_index_find_bucket		202774						
ANR	202879	Symbol	* p		202774						
ANR	202880	Symbol	ht -> nNumUsed		202774						
ANR	202881	Symbol	IS_UNDEF		202774						
ANR	202882	Symbol	& p -> val		202774						
ANR	202883	Function	zend_hash_index_exists	1985:0:54136:54475							
ANR	202884	FunctionDef	"zend_hash_index_exists (const HashTable * ht , zend_ulong h)"		202883	0					
ANR	202885	CompoundStatement		1986:0:54227:54475	202883	0					
ANR	202886	IdentifierDeclStatement	Bucket * p ;	1987:1:54230:54239	202883	0	True				
ANR	202887	IdentifierDecl	* p		202883	0					
ANR	202888	IdentifierDeclType	Bucket *		202883	0					
ANR	202889	Identifier	p		202883	1					
ANR	202890	ExpressionStatement	IS_CONSISTENT ( ht )	1989:1:54243:54260	202883	1	True				
ANR	202891	CallExpression	IS_CONSISTENT ( ht )		202883	0					
ANR	202892	Callee	IS_CONSISTENT		202883	0					
ANR	202893	Identifier	IS_CONSISTENT		202883	0					
ANR	202894	ArgumentList	ht		202883	1					
ANR	202895	Argument	ht		202883	0					
ANR	202896	Identifier	ht		202883	0					
ANR	202897	IfStatement	if ( ht -> u . flags & HASH_FLAG_PACKED )		202883	2					
ANR	202898	Condition	ht -> u . flags & HASH_FLAG_PACKED	1991:5:54268:54297	202883	0	True				
ANR	202899	BitAndExpression	ht -> u . flags & HASH_FLAG_PACKED		202883	0		&			
ANR	202900	MemberAccess	ht -> u . flags		202883	0					
ANR	202901	PtrMemberAccess	ht -> u		202883	0					
ANR	202902	Identifier	ht		202883	0					
ANR	202903	Identifier	u		202883	1					
ANR	202904	Identifier	flags		202883	1					
ANR	202905	Identifier	HASH_FLAG_PACKED		202883	1					
ANR	202906	CompoundStatement		6:37:72:72	202883	1					
ANR	202907	IfStatement	if ( h < ht -> nNumUsed )		202883	0					
ANR	202908	Condition	h < ht -> nNumUsed	1992:6:54308:54323	202883	0	True				
ANR	202909	RelationalExpression	h < ht -> nNumUsed		202883	0		<			
ANR	202910	Identifier	h		202883	0					
ANR	202911	PtrMemberAccess	ht -> nNumUsed		202883	1					
ANR	202912	Identifier	ht		202883	0					
ANR	202913	Identifier	nNumUsed		202883	1					
ANR	202914	CompoundStatement		7:24:98:98	202883	1					
ANR	202915	IfStatement	if ( Z_TYPE ( ht -> arData [ h ] . val ) != IS_UNDEF )		202883	0					
ANR	202916	Condition	Z_TYPE ( ht -> arData [ h ] . val ) != IS_UNDEF	1993:7:54335:54371	202883	0	True				
ANR	202917	EqualityExpression	Z_TYPE ( ht -> arData [ h ] . val ) != IS_UNDEF		202883	0		!=			
ANR	202918	CallExpression	Z_TYPE ( ht -> arData [ h ] . val )		202883	0					
ANR	202919	Callee	Z_TYPE		202883	0					
ANR	202920	Identifier	Z_TYPE		202883	0					
ANR	202921	ArgumentList	ht -> arData [ h ] . val		202883	1					
ANR	202922	Argument	ht -> arData [ h ] . val		202883	0					
ANR	202923	MemberAccess	ht -> arData [ h ] . val		202883	0					
ANR	202924	ArrayIndexing	ht -> arData [ h ]		202883	0					
ANR	202925	PtrMemberAccess	ht -> arData		202883	0					
ANR	202926	Identifier	ht		202883	0					
ANR	202927	Identifier	arData		202883	1					
ANR	202928	Identifier	h		202883	1					
ANR	202929	Identifier	val		202883	1					
ANR	202930	Identifier	IS_UNDEF		202883	1					
ANR	202931	CompoundStatement		8:46:146:146	202883	1					
ANR	202932	ReturnStatement	return 1 ;	1994:4:54380:54388	202883	0	True				
ANR	202933	PrimaryExpression	1		202883	0					
ANR	202934	ReturnStatement	return 0 ;	1997:2:54401:54409	202883	1	True				
ANR	202935	PrimaryExpression	0		202883	0					
ANR	202936	ExpressionStatement	"p = zend_hash_index_find_bucket ( ht , h )"	2000:1:54416:54454	202883	3	True				
ANR	202937	AssignmentExpression	"p = zend_hash_index_find_bucket ( ht , h )"		202883	0		=			
ANR	202938	Identifier	p		202883	0					
ANR	202939	CallExpression	"zend_hash_index_find_bucket ( ht , h )"		202883	1					
ANR	202940	Callee	zend_hash_index_find_bucket		202883	0					
ANR	202941	Identifier	zend_hash_index_find_bucket		202883	0					
ANR	202942	ArgumentList	ht		202883	1					
ANR	202943	Argument	ht		202883	0					
ANR	202944	Identifier	ht		202883	0					
ANR	202945	Argument	h		202883	1					
ANR	202946	Identifier	h		202883	0					
ANR	202947	ReturnStatement	return p ? 1 : 0 ;	2001:1:54457:54473	202883	4	True				
ANR	202948	ConditionalExpression	p ? 1 : 0		202883	0					
ANR	202949	Condition	p		202883	0					
ANR	202950	Identifier	p		202883	0					
ANR	202951	PrimaryExpression	1		202883	1					
ANR	202952	PrimaryExpression	0		202883	2					
ANR	202953	ReturnType	ZEND_API zend_bool ZEND_FASTCALL		202883	1					
ANR	202954	Identifier	zend_hash_index_exists		202883	2					
ANR	202955	ParameterList	"const HashTable * ht , zend_ulong h"		202883	3					
ANR	202956	Parameter	const HashTable * ht	1985:56:54192:54210	202883	0	True				
ANR	202957	ParameterType	const HashTable *		202883	0					
ANR	202958	Identifier	ht		202883	1					
ANR	202959	Parameter	zend_ulong h	1985:77:54213:54224	202883	1	True				
ANR	202960	ParameterType	zend_ulong		202883	0					
ANR	202961	Identifier	h		202883	1					
ANR	202962	CFGEntryNode	ENTRY		202883		True				
ANR	202963	CFGExitNode	EXIT		202883		True				
ANR	202964	Symbol	HASH_FLAG_PACKED		202883						
ANR	202965	Symbol	h		202883						
ANR	202966	Symbol	ht -> u		202883						
ANR	202967	Symbol	Z_TYPE		202883						
ANR	202968	Symbol	ht -> arData		202883						
ANR	202969	Symbol	ht -> u . flags		202883						
ANR	202970	Symbol	ht		202883						
ANR	202971	Symbol	* ht -> arData		202883						
ANR	202972	Symbol	p		202883						
ANR	202973	Symbol	* ht		202883						
ANR	202974	Symbol	* h		202883						
ANR	202975	Symbol	zend_hash_index_find_bucket		202883						
ANR	202976	Symbol	* * ht		202883						
ANR	202977	Symbol	ht -> arData [ h ] . val		202883						
ANR	202978	Symbol	ht -> nNumUsed		202883						
ANR	202979	Symbol	IS_UNDEF		202883						
ANR	202980	Function	zend_hash_internal_pointer_reset_ex	2005:0:54479:54835							
ANR	202981	FunctionDef	"zend_hash_internal_pointer_reset_ex (HashTable * ht , HashPosition * pos)"		202980	0					
ANR	202982	CompoundStatement		2006:0:54577:54835	202980	0					
ANR	202983	IdentifierDeclStatement	uint32_t idx ;	2007:4:54583:54595	202980	0	True				
ANR	202984	IdentifierDecl	idx		202980	0					
ANR	202985	IdentifierDeclType	uint32_t		202980	0					
ANR	202986	Identifier	idx		202980	1					
ANR	202987	ExpressionStatement	IS_CONSISTENT ( ht )	2009:1:54599:54616	202980	1	True				
ANR	202988	CallExpression	IS_CONSISTENT ( ht )		202980	0					
ANR	202989	Callee	IS_CONSISTENT		202980	0					
ANR	202990	Identifier	IS_CONSISTENT		202980	0					
ANR	202991	ArgumentList	ht		202980	1					
ANR	202992	Argument	ht		202980	0					
ANR	202993	Identifier	ht		202980	0					
ANR	202994	ExpressionStatement	HT_ASSERT ( & ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1 )	2010:1:54619:54682	202980	2	True				
ANR	202995	CallExpression	HT_ASSERT ( & ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1 )		202980	0					
ANR	202996	Callee	HT_ASSERT		202980	0					
ANR	202997	Identifier	HT_ASSERT		202980	0					
ANR	202998	ArgumentList	& ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1		202980	1					
ANR	202999	Argument	& ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1		202980	0					
ANR	203000	OrExpression	& ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1		202980	0		||			
ANR	203001	EqualityExpression	& ht -> nInternalPointer != pos		202980	0		!=			
ANR	203002	UnaryOperationExpression	& ht -> nInternalPointer		202980	0					
ANR	203003	UnaryOperator	&		202980	0					
ANR	203004	PtrMemberAccess	ht -> nInternalPointer		202980	1					
ANR	203005	Identifier	ht		202980	0					
ANR	203006	Identifier	nInternalPointer		202980	1					
ANR	203007	Identifier	pos		202980	1					
ANR	203008	EqualityExpression	GC_REFCOUNT ( ht ) == 1		202980	1		==			
ANR	203009	CallExpression	GC_REFCOUNT ( ht )		202980	0					
ANR	203010	Callee	GC_REFCOUNT		202980	0					
ANR	203011	Identifier	GC_REFCOUNT		202980	0					
ANR	203012	ArgumentList	ht		202980	1					
ANR	203013	Argument	ht		202980	0					
ANR	203014	Identifier	ht		202980	0					
ANR	203015	PrimaryExpression	1		202980	1					
ANR	203016	ForStatement	for ( idx = 0 ; idx < ht -> nNumUsed ; idx ++ )		202980	3					
ANR	203017	ForInit	idx = 0 ;	2012:6:54691:54698	202980	0	True				
ANR	203018	AssignmentExpression	idx = 0		202980	0		=			
ANR	203019	Identifier	idx		202980	0					
ANR	203020	PrimaryExpression	0		202980	1					
ANR	203021	Condition	idx < ht -> nNumUsed	2012:15:54700:54717	202980	1	True				
ANR	203022	RelationalExpression	idx < ht -> nNumUsed		202980	0		<			
ANR	203023	Identifier	idx		202980	0					
ANR	203024	PtrMemberAccess	ht -> nNumUsed		202980	1					
ANR	203025	Identifier	ht		202980	0					
ANR	203026	Identifier	nNumUsed		202980	1					
ANR	203027	PostIncDecOperationExpression	idx ++	2012:35:54720:54724	202980	2	True				
ANR	203028	Identifier	idx		202980	0					
ANR	203029	IncDec	++		202980	1					
ANR	203030	CompoundStatement		7:42:149:149	202980	3					
ANR	203031	IfStatement	if ( Z_TYPE ( ht -> arData [ idx ] . val ) != IS_UNDEF )		202980	0					
ANR	203032	Condition	Z_TYPE ( ht -> arData [ idx ] . val ) != IS_UNDEF	2013:6:54735:54773	202980	0	True				
ANR	203033	EqualityExpression	Z_TYPE ( ht -> arData [ idx ] . val ) != IS_UNDEF		202980	0		!=			
ANR	203034	CallExpression	Z_TYPE ( ht -> arData [ idx ] . val )		202980	0					
ANR	203035	Callee	Z_TYPE		202980	0					
ANR	203036	Identifier	Z_TYPE		202980	0					
ANR	203037	ArgumentList	ht -> arData [ idx ] . val		202980	1					
ANR	203038	Argument	ht -> arData [ idx ] . val		202980	0					
ANR	203039	MemberAccess	ht -> arData [ idx ] . val		202980	0					
ANR	203040	ArrayIndexing	ht -> arData [ idx ]		202980	0					
ANR	203041	PtrMemberAccess	ht -> arData		202980	0					
ANR	203042	Identifier	ht		202980	0					
ANR	203043	Identifier	arData		202980	1					
ANR	203044	Identifier	idx		202980	1					
ANR	203045	Identifier	val		202980	1					
ANR	203046	Identifier	IS_UNDEF		202980	1					
ANR	203047	CompoundStatement		8:47:198:198	202980	1					
ANR	203048	ExpressionStatement	* pos = idx	2014:3:54781:54791	202980	0	True				
ANR	203049	AssignmentExpression	* pos = idx		202980	0		=			
ANR	203050	UnaryOperationExpression	* pos		202980	0					
ANR	203051	UnaryOperator	*		202980	0					
ANR	203052	Identifier	pos		202980	1					
ANR	203053	Identifier	idx		202980	1					
ANR	203054	ReturnStatement	return ;	2015:3:54796:54802	202980	1	True				
ANR	203055	ExpressionStatement	* pos = HT_INVALID_IDX	2018:1:54812:54833	202980	4	True				
ANR	203056	AssignmentExpression	* pos = HT_INVALID_IDX		202980	0		=			
ANR	203057	UnaryOperationExpression	* pos		202980	0					
ANR	203058	UnaryOperator	*		202980	0					
ANR	203059	Identifier	pos		202980	1					
ANR	203060	Identifier	HT_INVALID_IDX		202980	1					
ANR	203061	ReturnType	ZEND_API void ZEND_FASTCALL		202980	1					
ANR	203062	Identifier	zend_hash_internal_pointer_reset_ex		202980	2					
ANR	203063	ParameterList	"HashTable * ht , HashPosition * pos"		202980	3					
ANR	203064	Parameter	HashTable * ht	2005:64:54543:54555	202980	0	True				
ANR	203065	ParameterType	HashTable *		202980	0					
ANR	203066	Identifier	ht		202980	1					
ANR	203067	Parameter	HashPosition * pos	2005:79:54558:54574	202980	1	True				
ANR	203068	ParameterType	HashPosition *		202980	0					
ANR	203069	Identifier	pos		202980	1					
ANR	203070	CFGEntryNode	ENTRY		202980		True				
ANR	203071	CFGExitNode	EXIT		202980		True				
ANR	203072	Symbol	HT_INVALID_IDX		202980						
ANR	203073	Symbol	ht -> arData [ idx ] . val		202980						
ANR	203074	Symbol	ht -> arData		202980						
ANR	203075	Symbol	Z_TYPE		202980						
ANR	203076	Symbol	ht		202980						
ANR	203077	Symbol	* ht -> arData		202980						
ANR	203078	Symbol	* ht		202980						
ANR	203079	Symbol	pos		202980						
ANR	203080	Symbol	* idx		202980						
ANR	203081	Symbol	* * ht		202980						
ANR	203082	Symbol	idx		202980						
ANR	203083	Symbol	& ht -> nInternalPointer		202980						
ANR	203084	Symbol	GC_REFCOUNT		202980						
ANR	203085	Symbol	ht -> nNumUsed		202980						
ANR	203086	Symbol	IS_UNDEF		202980						
ANR	203087	Symbol	* pos		202980						
ANR	203088	Function	zend_hash_internal_pointer_end_ex	2025:0:54926:55282							
ANR	203089	FunctionDef	"zend_hash_internal_pointer_end_ex (HashTable * ht , HashPosition * pos)"		203088	0					
ANR	203090	CompoundStatement		2026:0:55022:55282	203088	0					
ANR	203091	IdentifierDeclStatement	uint32_t idx ;	2027:1:55025:55037	203088	0	True				
ANR	203092	IdentifierDecl	idx		203088	0					
ANR	203093	IdentifierDeclType	uint32_t		203088	0					
ANR	203094	Identifier	idx		203088	1					
ANR	203095	ExpressionStatement	IS_CONSISTENT ( ht )	2029:1:55041:55058	203088	1	True				
ANR	203096	CallExpression	IS_CONSISTENT ( ht )		203088	0					
ANR	203097	Callee	IS_CONSISTENT		203088	0					
ANR	203098	Identifier	IS_CONSISTENT		203088	0					
ANR	203099	ArgumentList	ht		203088	1					
ANR	203100	Argument	ht		203088	0					
ANR	203101	Identifier	ht		203088	0					
ANR	203102	ExpressionStatement	HT_ASSERT ( & ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1 )	2030:1:55061:55124	203088	2	True				
ANR	203103	CallExpression	HT_ASSERT ( & ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1 )		203088	0					
ANR	203104	Callee	HT_ASSERT		203088	0					
ANR	203105	Identifier	HT_ASSERT		203088	0					
ANR	203106	ArgumentList	& ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1		203088	1					
ANR	203107	Argument	& ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1		203088	0					
ANR	203108	OrExpression	& ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1		203088	0		||			
ANR	203109	EqualityExpression	& ht -> nInternalPointer != pos		203088	0		!=			
ANR	203110	UnaryOperationExpression	& ht -> nInternalPointer		203088	0					
ANR	203111	UnaryOperator	&		203088	0					
ANR	203112	PtrMemberAccess	ht -> nInternalPointer		203088	1					
ANR	203113	Identifier	ht		203088	0					
ANR	203114	Identifier	nInternalPointer		203088	1					
ANR	203115	Identifier	pos		203088	1					
ANR	203116	EqualityExpression	GC_REFCOUNT ( ht ) == 1		203088	1		==			
ANR	203117	CallExpression	GC_REFCOUNT ( ht )		203088	0					
ANR	203118	Callee	GC_REFCOUNT		203088	0					
ANR	203119	Identifier	GC_REFCOUNT		203088	0					
ANR	203120	ArgumentList	ht		203088	1					
ANR	203121	Argument	ht		203088	0					
ANR	203122	Identifier	ht		203088	0					
ANR	203123	PrimaryExpression	1		203088	1					
ANR	203124	ExpressionStatement	idx = ht -> nNumUsed	2032:1:55128:55146	203088	3	True				
ANR	203125	AssignmentExpression	idx = ht -> nNumUsed		203088	0		=			
ANR	203126	Identifier	idx		203088	0					
ANR	203127	PtrMemberAccess	ht -> nNumUsed		203088	1					
ANR	203128	Identifier	ht		203088	0					
ANR	203129	Identifier	nNumUsed		203088	1					
ANR	203130	WhileStatement	while ( idx > 0 )		203088	4					
ANR	203131	Condition	idx > 0	2033:8:55156:55162	203088	0	True				
ANR	203132	RelationalExpression	idx > 0		203088	0		>			
ANR	203133	Identifier	idx		203088	0					
ANR	203134	PrimaryExpression	0		203088	1					
ANR	203135	CompoundStatement		8:17:142:142	203088	1					
ANR	203136	ExpressionStatement	idx --	2034:2:55169:55174	203088	0	True				
ANR	203137	PostIncDecOperationExpression	idx --		203088	0					
ANR	203138	Identifier	idx		203088	0					
ANR	203139	IncDec	--		203088	1					
ANR	203140	IfStatement	if ( Z_TYPE ( ht -> arData [ idx ] . val ) != IS_UNDEF )		203088	1					
ANR	203141	Condition	Z_TYPE ( ht -> arData [ idx ] . val ) != IS_UNDEF	2035:6:55182:55220	203088	0	True				
ANR	203142	EqualityExpression	Z_TYPE ( ht -> arData [ idx ] . val ) != IS_UNDEF		203088	0		!=			
ANR	203143	CallExpression	Z_TYPE ( ht -> arData [ idx ] . val )		203088	0					
ANR	203144	Callee	Z_TYPE		203088	0					
ANR	203145	Identifier	Z_TYPE		203088	0					
ANR	203146	ArgumentList	ht -> arData [ idx ] . val		203088	1					
ANR	203147	Argument	ht -> arData [ idx ] . val		203088	0					
ANR	203148	MemberAccess	ht -> arData [ idx ] . val		203088	0					
ANR	203149	ArrayIndexing	ht -> arData [ idx ]		203088	0					
ANR	203150	PtrMemberAccess	ht -> arData		203088	0					
ANR	203151	Identifier	ht		203088	0					
ANR	203152	Identifier	arData		203088	1					
ANR	203153	Identifier	idx		203088	1					
ANR	203154	Identifier	val		203088	1					
ANR	203155	Identifier	IS_UNDEF		203088	1					
ANR	203156	CompoundStatement		10:47:200:200	203088	1					
ANR	203157	ExpressionStatement	* pos = idx	2036:3:55228:55238	203088	0	True				
ANR	203158	AssignmentExpression	* pos = idx		203088	0		=			
ANR	203159	UnaryOperationExpression	* pos		203088	0					
ANR	203160	UnaryOperator	*		203088	0					
ANR	203161	Identifier	pos		203088	1					
ANR	203162	Identifier	idx		203088	1					
ANR	203163	ReturnStatement	return ;	2037:3:55243:55249	203088	1	True				
ANR	203164	ExpressionStatement	* pos = HT_INVALID_IDX	2040:1:55259:55280	203088	5	True				
ANR	203165	AssignmentExpression	* pos = HT_INVALID_IDX		203088	0		=			
ANR	203166	UnaryOperationExpression	* pos		203088	0					
ANR	203167	UnaryOperator	*		203088	0					
ANR	203168	Identifier	pos		203088	1					
ANR	203169	Identifier	HT_INVALID_IDX		203088	1					
ANR	203170	ReturnType	ZEND_API void ZEND_FASTCALL		203088	1					
ANR	203171	Identifier	zend_hash_internal_pointer_end_ex		203088	2					
ANR	203172	ParameterList	"HashTable * ht , HashPosition * pos"		203088	3					
ANR	203173	Parameter	HashTable * ht	2025:62:54988:55000	203088	0	True				
ANR	203174	ParameterType	HashTable *		203088	0					
ANR	203175	Identifier	ht		203088	1					
ANR	203176	Parameter	HashPosition * pos	2025:77:55003:55019	203088	1	True				
ANR	203177	ParameterType	HashPosition *		203088	0					
ANR	203178	Identifier	pos		203088	1					
ANR	203179	CFGEntryNode	ENTRY		203088		True				
ANR	203180	CFGExitNode	EXIT		203088		True				
ANR	203181	Symbol	HT_INVALID_IDX		203088						
ANR	203182	Symbol	ht -> arData [ idx ] . val		203088						
ANR	203183	Symbol	ht -> arData		203088						
ANR	203184	Symbol	Z_TYPE		203088						
ANR	203185	Symbol	ht		203088						
ANR	203186	Symbol	* ht -> arData		203088						
ANR	203187	Symbol	* ht		203088						
ANR	203188	Symbol	pos		203088						
ANR	203189	Symbol	* idx		203088						
ANR	203190	Symbol	* * ht		203088						
ANR	203191	Symbol	idx		203088						
ANR	203192	Symbol	& ht -> nInternalPointer		203088						
ANR	203193	Symbol	GC_REFCOUNT		203088						
ANR	203194	Symbol	ht -> nNumUsed		203088						
ANR	203195	Symbol	IS_UNDEF		203088						
ANR	203196	Symbol	* pos		203088						
ANR	203197	Function	zend_hash_move_forward_ex	2044:0:55286:55748							
ANR	203198	FunctionDef	"zend_hash_move_forward_ex (HashTable * ht , HashPosition * pos)"		203197	0					
ANR	203199	CompoundStatement		2045:0:55373:55748	203197	0					
ANR	203200	IdentifierDeclStatement	uint32_t idx = * pos ;	2046:1:55376:55395	203197	0	True				
ANR	203201	IdentifierDecl	idx = * pos		203197	0					
ANR	203202	IdentifierDeclType	uint32_t		203197	0					
ANR	203203	Identifier	idx		203197	1					
ANR	203204	AssignmentExpression	idx = * pos		203197	2		=			
ANR	203205	Identifier	idx		203197	0					
ANR	203206	UnaryOperationExpression	* pos		203197	1					
ANR	203207	UnaryOperator	*		203197	0					
ANR	203208	Identifier	pos		203197	1					
ANR	203209	ExpressionStatement	IS_CONSISTENT ( ht )	2048:1:55399:55416	203197	1	True				
ANR	203210	CallExpression	IS_CONSISTENT ( ht )		203197	0					
ANR	203211	Callee	IS_CONSISTENT		203197	0					
ANR	203212	Identifier	IS_CONSISTENT		203197	0					
ANR	203213	ArgumentList	ht		203197	1					
ANR	203214	Argument	ht		203197	0					
ANR	203215	Identifier	ht		203197	0					
ANR	203216	ExpressionStatement	HT_ASSERT ( & ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1 )	2049:1:55419:55482	203197	2	True				
ANR	203217	CallExpression	HT_ASSERT ( & ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1 )		203197	0					
ANR	203218	Callee	HT_ASSERT		203197	0					
ANR	203219	Identifier	HT_ASSERT		203197	0					
ANR	203220	ArgumentList	& ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1		203197	1					
ANR	203221	Argument	& ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1		203197	0					
ANR	203222	OrExpression	& ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1		203197	0		||			
ANR	203223	EqualityExpression	& ht -> nInternalPointer != pos		203197	0		!=			
ANR	203224	UnaryOperationExpression	& ht -> nInternalPointer		203197	0					
ANR	203225	UnaryOperator	&		203197	0					
ANR	203226	PtrMemberAccess	ht -> nInternalPointer		203197	1					
ANR	203227	Identifier	ht		203197	0					
ANR	203228	Identifier	nInternalPointer		203197	1					
ANR	203229	Identifier	pos		203197	1					
ANR	203230	EqualityExpression	GC_REFCOUNT ( ht ) == 1		203197	1		==			
ANR	203231	CallExpression	GC_REFCOUNT ( ht )		203197	0					
ANR	203232	Callee	GC_REFCOUNT		203197	0					
ANR	203233	Identifier	GC_REFCOUNT		203197	0					
ANR	203234	ArgumentList	ht		203197	1					
ANR	203235	Argument	ht		203197	0					
ANR	203236	Identifier	ht		203197	0					
ANR	203237	PrimaryExpression	1		203197	1					
ANR	203238	IfStatement	if ( idx != HT_INVALID_IDX )		203197	3					
ANR	203239	Condition	idx != HT_INVALID_IDX	2051:5:55490:55510	203197	0	True				
ANR	203240	EqualityExpression	idx != HT_INVALID_IDX		203197	0		!=			
ANR	203241	Identifier	idx		203197	0					
ANR	203242	Identifier	HT_INVALID_IDX		203197	1					
ANR	203243	CompoundStatement		7:28:139:139	203197	1					
ANR	203244	WhileStatement	while ( 1 )		203197	0					
ANR	203245	Condition	1	2052:9:55524:55524	203197	0	True				
ANR	203246	PrimaryExpression	1		203197	0					
ANR	203247	CompoundStatement		8:12:153:153	203197	1					
ANR	203248	ExpressionStatement	idx ++	2053:3:55532:55537	203197	0	True				
ANR	203249	PostIncDecOperationExpression	idx ++		203197	0					
ANR	203250	Identifier	idx		203197	0					
ANR	203251	IncDec	++		203197	1					
ANR	203252	IfStatement	if ( idx >= ht -> nNumUsed )		203197	1					
ANR	203253	Condition	idx >= ht -> nNumUsed	2054:7:55546:55564	203197	0	True				
ANR	203254	RelationalExpression	idx >= ht -> nNumUsed		203197	0		>=			
ANR	203255	Identifier	idx		203197	0					
ANR	203256	PtrMemberAccess	ht -> nNumUsed		203197	1					
ANR	203257	Identifier	ht		203197	0					
ANR	203258	Identifier	nNumUsed		203197	1					
ANR	203259	CompoundStatement		10:28:193:193	203197	1					
ANR	203260	ExpressionStatement	* pos = HT_INVALID_IDX	2055:4:55573:55594	203197	0	True				
ANR	203261	AssignmentExpression	* pos = HT_INVALID_IDX		203197	0		=			
ANR	203262	UnaryOperationExpression	* pos		203197	0					
ANR	203263	UnaryOperator	*		203197	0					
ANR	203264	Identifier	pos		203197	1					
ANR	203265	Identifier	HT_INVALID_IDX		203197	1					
ANR	203266	ReturnStatement	return SUCCESS ;	2056:4:55600:55614	203197	1	True				
ANR	203267	Identifier	SUCCESS		203197	0					
ANR	203268	IfStatement	if ( Z_TYPE ( ht -> arData [ idx ] . val ) != IS_UNDEF )		203197	2					
ANR	203269	Condition	Z_TYPE ( ht -> arData [ idx ] . val ) != IS_UNDEF	2058:7:55628:55666	203197	0	True				
ANR	203270	EqualityExpression	Z_TYPE ( ht -> arData [ idx ] . val ) != IS_UNDEF		203197	0		!=			
ANR	203271	CallExpression	Z_TYPE ( ht -> arData [ idx ] . val )		203197	0					
ANR	203272	Callee	Z_TYPE		203197	0					
ANR	203273	Identifier	Z_TYPE		203197	0					
ANR	203274	ArgumentList	ht -> arData [ idx ] . val		203197	1					
ANR	203275	Argument	ht -> arData [ idx ] . val		203197	0					
ANR	203276	MemberAccess	ht -> arData [ idx ] . val		203197	0					
ANR	203277	ArrayIndexing	ht -> arData [ idx ]		203197	0					
ANR	203278	PtrMemberAccess	ht -> arData		203197	0					
ANR	203279	Identifier	ht		203197	0					
ANR	203280	Identifier	arData		203197	1					
ANR	203281	Identifier	idx		203197	1					
ANR	203282	Identifier	val		203197	1					
ANR	203283	Identifier	IS_UNDEF		203197	1					
ANR	203284	CompoundStatement		14:48:295:295	203197	1					
ANR	203285	ExpressionStatement	* pos = idx	2059:4:55675:55685	203197	0	True				
ANR	203286	AssignmentExpression	* pos = idx		203197	0		=			
ANR	203287	UnaryOperationExpression	* pos		203197	0					
ANR	203288	UnaryOperator	*		203197	0					
ANR	203289	Identifier	pos		203197	1					
ANR	203290	Identifier	idx		203197	1					
ANR	203291	ReturnStatement	return SUCCESS ;	2060:4:55691:55705	203197	1	True				
ANR	203292	Identifier	SUCCESS		203197	0					
ANR	203293	ElseStatement	else		203197	0					
ANR	203294	CompoundStatement		19:8:350:350	203197	0					
ANR	203295	ReturnStatement	return FAILURE ;	2064:3:55729:55743	203197	0	True				
ANR	203296	Identifier	FAILURE		203197	0					
ANR	203297	ReturnType	ZEND_API int ZEND_FASTCALL		203197	1					
ANR	203298	Identifier	zend_hash_move_forward_ex		203197	2					
ANR	203299	ParameterList	"HashTable * ht , HashPosition * pos"		203197	3					
ANR	203300	Parameter	HashTable * ht	2044:53:55339:55351	203197	0	True				
ANR	203301	ParameterType	HashTable *		203197	0					
ANR	203302	Identifier	ht		203197	1					
ANR	203303	Parameter	HashPosition * pos	2044:68:55354:55370	203197	1	True				
ANR	203304	ParameterType	HashPosition *		203197	0					
ANR	203305	Identifier	pos		203197	1					
ANR	203306	CFGEntryNode	ENTRY		203197		True				
ANR	203307	CFGExitNode	EXIT		203197		True				
ANR	203308	Symbol	HT_INVALID_IDX		203197						
ANR	203309	Symbol	SUCCESS		203197						
ANR	203310	Symbol	ht -> arData [ idx ] . val		203197						
ANR	203311	Symbol	ht -> arData		203197						
ANR	203312	Symbol	Z_TYPE		203197						
ANR	203313	Symbol	ht		203197						
ANR	203314	Symbol	FAILURE		203197						
ANR	203315	Symbol	* ht -> arData		203197						
ANR	203316	Symbol	* ht		203197						
ANR	203317	Symbol	pos		203197						
ANR	203318	Symbol	* idx		203197						
ANR	203319	Symbol	* * ht		203197						
ANR	203320	Symbol	idx		203197						
ANR	203321	Symbol	& ht -> nInternalPointer		203197						
ANR	203322	Symbol	GC_REFCOUNT		203197						
ANR	203323	Symbol	* pos		203197						
ANR	203324	Symbol	ht -> nNumUsed		203197						
ANR	203325	Symbol	IS_UNDEF		203197						
ANR	203326	Function	zend_hash_move_backwards_ex	2068:0:55751:56183							
ANR	203327	FunctionDef	"zend_hash_move_backwards_ex (HashTable * ht , HashPosition * pos)"		203326	0					
ANR	203328	CompoundStatement		2069:0:55840:56183	203326	0					
ANR	203329	IdentifierDeclStatement	uint32_t idx = * pos ;	2070:1:55843:55862	203326	0	True				
ANR	203330	IdentifierDecl	idx = * pos		203326	0					
ANR	203331	IdentifierDeclType	uint32_t		203326	0					
ANR	203332	Identifier	idx		203326	1					
ANR	203333	AssignmentExpression	idx = * pos		203326	2		=			
ANR	203334	Identifier	idx		203326	0					
ANR	203335	UnaryOperationExpression	* pos		203326	1					
ANR	203336	UnaryOperator	*		203326	0					
ANR	203337	Identifier	pos		203326	1					
ANR	203338	ExpressionStatement	IS_CONSISTENT ( ht )	2072:1:55866:55883	203326	1	True				
ANR	203339	CallExpression	IS_CONSISTENT ( ht )		203326	0					
ANR	203340	Callee	IS_CONSISTENT		203326	0					
ANR	203341	Identifier	IS_CONSISTENT		203326	0					
ANR	203342	ArgumentList	ht		203326	1					
ANR	203343	Argument	ht		203326	0					
ANR	203344	Identifier	ht		203326	0					
ANR	203345	ExpressionStatement	HT_ASSERT ( & ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1 )	2073:1:55886:55949	203326	2	True				
ANR	203346	CallExpression	HT_ASSERT ( & ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1 )		203326	0					
ANR	203347	Callee	HT_ASSERT		203326	0					
ANR	203348	Identifier	HT_ASSERT		203326	0					
ANR	203349	ArgumentList	& ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1		203326	1					
ANR	203350	Argument	& ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1		203326	0					
ANR	203351	OrExpression	& ht -> nInternalPointer != pos || GC_REFCOUNT ( ht ) == 1		203326	0		||			
ANR	203352	EqualityExpression	& ht -> nInternalPointer != pos		203326	0		!=			
ANR	203353	UnaryOperationExpression	& ht -> nInternalPointer		203326	0					
ANR	203354	UnaryOperator	&		203326	0					
ANR	203355	PtrMemberAccess	ht -> nInternalPointer		203326	1					
ANR	203356	Identifier	ht		203326	0					
ANR	203357	Identifier	nInternalPointer		203326	1					
ANR	203358	Identifier	pos		203326	1					
ANR	203359	EqualityExpression	GC_REFCOUNT ( ht ) == 1		203326	1		==			
ANR	203360	CallExpression	GC_REFCOUNT ( ht )		203326	0					
ANR	203361	Callee	GC_REFCOUNT		203326	0					
ANR	203362	Identifier	GC_REFCOUNT		203326	0					
ANR	203363	ArgumentList	ht		203326	1					
ANR	203364	Argument	ht		203326	0					
ANR	203365	Identifier	ht		203326	0					
ANR	203366	PrimaryExpression	1		203326	1					
ANR	203367	IfStatement	if ( idx != HT_INVALID_IDX )		203326	3					
ANR	203368	Condition	idx != HT_INVALID_IDX	2075:5:55957:55977	203326	0	True				
ANR	203369	EqualityExpression	idx != HT_INVALID_IDX		203326	0		!=			
ANR	203370	Identifier	idx		203326	0					
ANR	203371	Identifier	HT_INVALID_IDX		203326	1					
ANR	203372	CompoundStatement		7:28:139:139	203326	1					
ANR	203373	WhileStatement	while ( idx > 0 )		203326	0					
ANR	203374	Condition	idx > 0	2076:9:55991:55997	203326	0	True				
ANR	203375	RelationalExpression	idx > 0		203326	0		>			
ANR	203376	Identifier	idx		203326	0					
ANR	203377	PrimaryExpression	0		203326	1					
ANR	203378	CompoundStatement		8:18:159:159	203326	1					
ANR	203379	ExpressionStatement	idx --	2077:3:56005:56010	203326	0	True				
ANR	203380	PostIncDecOperationExpression	idx --		203326	0					
ANR	203381	Identifier	idx		203326	0					
ANR	203382	IncDec	--		203326	1					
ANR	203383	IfStatement	if ( Z_TYPE ( ht -> arData [ idx ] . val ) != IS_UNDEF )		203326	1					
ANR	203384	Condition	Z_TYPE ( ht -> arData [ idx ] . val ) != IS_UNDEF	2078:7:56019:56057	203326	0	True				
ANR	203385	EqualityExpression	Z_TYPE ( ht -> arData [ idx ] . val ) != IS_UNDEF		203326	0		!=			
ANR	203386	CallExpression	Z_TYPE ( ht -> arData [ idx ] . val )		203326	0					
ANR	203387	Callee	Z_TYPE		203326	0					
ANR	203388	Identifier	Z_TYPE		203326	0					
ANR	203389	ArgumentList	ht -> arData [ idx ] . val		203326	1					
ANR	203390	Argument	ht -> arData [ idx ] . val		203326	0					
ANR	203391	MemberAccess	ht -> arData [ idx ] . val		203326	0					
ANR	203392	ArrayIndexing	ht -> arData [ idx ]		203326	0					
ANR	203393	PtrMemberAccess	ht -> arData		203326	0					
ANR	203394	Identifier	ht		203326	0					
ANR	203395	Identifier	arData		203326	1					
ANR	203396	Identifier	idx		203326	1					
ANR	203397	Identifier	val		203326	1					
ANR	203398	Identifier	IS_UNDEF		203326	1					
ANR	203399	CompoundStatement		10:48:219:219	203326	1					
ANR	203400	ExpressionStatement	* pos = idx	2079:4:56066:56076	203326	0	True				
ANR	203401	AssignmentExpression	* pos = idx		203326	0		=			
ANR	203402	UnaryOperationExpression	* pos		203326	0					
ANR	203403	UnaryOperator	*		203326	0					
ANR	203404	Identifier	pos		203326	1					
ANR	203405	Identifier	idx		203326	1					
ANR	203406	ReturnStatement	return SUCCESS ;	2080:4:56082:56096	203326	1	True				
ANR	203407	Identifier	SUCCESS		203326	0					
ANR	203408	ExpressionStatement	* pos = HT_INVALID_IDX	2083:2:56109:56130	203326	1	True				
ANR	203409	AssignmentExpression	* pos = HT_INVALID_IDX		203326	0		=			
ANR	203410	UnaryOperationExpression	* pos		203326	0					
ANR	203411	UnaryOperator	*		203326	0					
ANR	203412	Identifier	pos		203326	1					
ANR	203413	Identifier	HT_INVALID_IDX		203326	1					
ANR	203414	ReturnStatement	return SUCCESS ;	2084:3:56135:56149	203326	2	True				
ANR	203415	Identifier	SUCCESS		203326	0					
ANR	203416	ElseStatement	else		203326	0					
ANR	203417	CompoundStatement		17:8:318:318	203326	0					
ANR	203418	ReturnStatement	return FAILURE ;	2086:3:56164:56178	203326	0	True				
ANR	203419	Identifier	FAILURE		203326	0					
ANR	203420	ReturnType	ZEND_API int ZEND_FASTCALL		203326	1					
ANR	203421	Identifier	zend_hash_move_backwards_ex		203326	2					
ANR	203422	ParameterList	"HashTable * ht , HashPosition * pos"		203326	3					
ANR	203423	Parameter	HashTable * ht	2068:55:55806:55818	203326	0	True				
ANR	203424	ParameterType	HashTable *		203326	0					
ANR	203425	Identifier	ht		203326	1					
ANR	203426	Parameter	HashPosition * pos	2068:70:55821:55837	203326	1	True				
ANR	203427	ParameterType	HashPosition *		203326	0					
ANR	203428	Identifier	pos		203326	1					
ANR	203429	CFGEntryNode	ENTRY		203326		True				
ANR	203430	CFGExitNode	EXIT		203326		True				
ANR	203431	Symbol	HT_INVALID_IDX		203326						
ANR	203432	Symbol	SUCCESS		203326						
ANR	203433	Symbol	ht -> arData [ idx ] . val		203326						
ANR	203434	Symbol	Z_TYPE		203326						
ANR	203435	Symbol	ht -> arData		203326						
ANR	203436	Symbol	ht		203326						
ANR	203437	Symbol	FAILURE		203326						
ANR	203438	Symbol	* ht -> arData		203326						
ANR	203439	Symbol	* ht		203326						
ANR	203440	Symbol	pos		203326						
ANR	203441	Symbol	* idx		203326						
ANR	203442	Symbol	* * ht		203326						
ANR	203443	Symbol	idx		203326						
ANR	203444	Symbol	& ht -> nInternalPointer		203326						
ANR	203445	Symbol	GC_REFCOUNT		203326						
ANR	203446	Symbol	* pos		203326						
ANR	203447	Symbol	IS_UNDEF		203326						
ANR	203448	Function	zend_hash_get_current_key_ex	2092:0:56235:56659							
ANR	203449	FunctionDef	"zend_hash_get_current_key_ex (const HashTable * ht , zend_string * * str_index , zend_ulong * num_index , HashPosition * pos)"		203448	0					
ANR	203450	CompoundStatement		2093:0:56379:56659	203448	0					
ANR	203451	IdentifierDeclStatement	uint32_t idx = * pos ;	2094:1:56382:56401	203448	0	True				
ANR	203452	IdentifierDecl	idx = * pos		203448	0					
ANR	203453	IdentifierDeclType	uint32_t		203448	0					
ANR	203454	Identifier	idx		203448	1					
ANR	203455	AssignmentExpression	idx = * pos		203448	2		=			
ANR	203456	Identifier	idx		203448	0					
ANR	203457	UnaryOperationExpression	* pos		203448	1					
ANR	203458	UnaryOperator	*		203448	0					
ANR	203459	Identifier	pos		203448	1					
ANR	203460	IdentifierDeclStatement	Bucket * p ;	2095:1:56404:56413	203448	1	True				
ANR	203461	IdentifierDecl	* p		203448	0					
ANR	203462	IdentifierDeclType	Bucket *		203448	0					
ANR	203463	Identifier	p		203448	1					
ANR	203464	ExpressionStatement	IS_CONSISTENT ( ht )	2097:1:56417:56434	203448	2	True				
ANR	203465	CallExpression	IS_CONSISTENT ( ht )		203448	0					
ANR	203466	Callee	IS_CONSISTENT		203448	0					
ANR	203467	Identifier	IS_CONSISTENT		203448	0					
ANR	203468	ArgumentList	ht		203448	1					
ANR	203469	Argument	ht		203448	0					
ANR	203470	Identifier	ht		203448	0					
ANR	203471	IfStatement	if ( idx != HT_INVALID_IDX )		203448	3					
ANR	203472	Condition	idx != HT_INVALID_IDX	2098:5:56441:56461	203448	0	True				
ANR	203473	EqualityExpression	idx != HT_INVALID_IDX		203448	0		!=			
ANR	203474	Identifier	idx		203448	0					
ANR	203475	Identifier	HT_INVALID_IDX		203448	1					
ANR	203476	CompoundStatement		6:28:84:84	203448	1					
ANR	203477	ExpressionStatement	p = ht -> arData + idx	2099:2:56468:56488	203448	0	True				
ANR	203478	AssignmentExpression	p = ht -> arData + idx		203448	0		=			
ANR	203479	Identifier	p		203448	0					
ANR	203480	AdditiveExpression	ht -> arData + idx		203448	1		+			
ANR	203481	PtrMemberAccess	ht -> arData		203448	0					
ANR	203482	Identifier	ht		203448	0					
ANR	203483	Identifier	arData		203448	1					
ANR	203484	Identifier	idx		203448	1					
ANR	203485	IfStatement	if ( p -> key )		203448	1					
ANR	203486	Condition	p -> key	2100:6:56496:56501	203448	0	True				
ANR	203487	PtrMemberAccess	p -> key		203448	0					
ANR	203488	Identifier	p		203448	0					
ANR	203489	Identifier	key		203448	1					
ANR	203490	CompoundStatement		8:14:124:124	203448	1					
ANR	203491	ExpressionStatement	* str_index = p -> key	2101:3:56509:56528	203448	0	True				
ANR	203492	AssignmentExpression	* str_index = p -> key		203448	0		=			
ANR	203493	UnaryOperationExpression	* str_index		203448	0					
ANR	203494	UnaryOperator	*		203448	0					
ANR	203495	Identifier	str_index		203448	1					
ANR	203496	PtrMemberAccess	p -> key		203448	1					
ANR	203497	Identifier	p		203448	0					
ANR	203498	Identifier	key		203448	1					
ANR	203499	ReturnStatement	return HASH_KEY_IS_STRING ;	2102:3:56533:56558	203448	1	True				
ANR	203500	Identifier	HASH_KEY_IS_STRING		203448	0					
ANR	203501	ElseStatement	else		203448	0					
ANR	203502	CompoundStatement		11:9:189:189	203448	0					
ANR	203503	ExpressionStatement	* num_index = p -> h	2104:3:56574:56591	203448	0	True				
ANR	203504	AssignmentExpression	* num_index = p -> h		203448	0		=			
ANR	203505	UnaryOperationExpression	* num_index		203448	0					
ANR	203506	UnaryOperator	*		203448	0					
ANR	203507	Identifier	num_index		203448	1					
ANR	203508	PtrMemberAccess	p -> h		203448	1					
ANR	203509	Identifier	p		203448	0					
ANR	203510	Identifier	h		203448	1					
ANR	203511	ReturnStatement	return HASH_KEY_IS_LONG ;	2105:3:56596:56619	203448	1	True				
ANR	203512	Identifier	HASH_KEY_IS_LONG		203448	0					
ANR	203513	ReturnStatement	return HASH_KEY_NON_EXISTENT ;	2108:1:56629:56657	203448	4	True				
ANR	203514	Identifier	HASH_KEY_NON_EXISTENT		203448	0					
ANR	203515	ReturnType	ZEND_API int ZEND_FASTCALL		203448	1					
ANR	203516	Identifier	zend_hash_get_current_key_ex		203448	2					
ANR	203517	ParameterList	"const HashTable * ht , zend_string * * str_index , zend_ulong * num_index , HashPosition * pos"		203448	3					
ANR	203518	Parameter	const HashTable * ht	2092:56:56291:56309	203448	0	True				
ANR	203519	ParameterType	const HashTable *		203448	0					
ANR	203520	Identifier	ht		203448	1					
ANR	203521	Parameter	zend_string * * str_index	2092:77:56312:56334	203448	1	True				
ANR	203522	ParameterType	zend_string * *		203448	0					
ANR	203523	Identifier	str_index		203448	1					
ANR	203524	Parameter	zend_ulong * num_index	2092:102:56337:56357	203448	2	True				
ANR	203525	ParameterType	zend_ulong *		203448	0					
ANR	203526	Identifier	num_index		203448	1					
ANR	203527	Parameter	HashPosition * pos	2092:125:56360:56376	203448	3	True				
ANR	203528	ParameterType	HashPosition *		203448	0					
ANR	203529	Identifier	pos		203448	1					
ANR	203530	CFGEntryNode	ENTRY		203448		True				
ANR	203531	CFGExitNode	EXIT		203448		True				
ANR	203532	Symbol	str_index		203448						
ANR	203533	Symbol	HT_INVALID_IDX		203448						
ANR	203534	Symbol	* num_index		203448						
ANR	203535	Symbol	ht -> arData		203448						
ANR	203536	Symbol	HASH_KEY_IS_STRING		203448						
ANR	203537	Symbol	HASH_KEY_NON_EXISTENT		203448						
ANR	203538	Symbol	ht		203448						
ANR	203539	Symbol	p -> key		203448						
ANR	203540	Symbol	p		203448						
ANR	203541	Symbol	* ht		203448						
ANR	203542	Symbol	pos		203448						
ANR	203543	Symbol	num_index		203448						
ANR	203544	Symbol	HASH_KEY_IS_LONG		203448						
ANR	203545	Symbol	* str_index		203448						
ANR	203546	Symbol	* p		203448						
ANR	203547	Symbol	idx		203448						
ANR	203548	Symbol	* pos		203448						
ANR	203549	Symbol	p -> h		203448						
ANR	203550	Function	zend_hash_get_current_key_zval_ex	2111:0:56662:57004							
ANR	203551	FunctionDef	"zend_hash_get_current_key_zval_ex (const HashTable * ht , zval * key , HashPosition * pos)"		203550	0					
ANR	203552	CompoundStatement		2112:0:56775:57004	203550	0					
ANR	203553	IdentifierDeclStatement	uint32_t idx = * pos ;	2113:1:56778:56797	203550	0	True				
ANR	203554	IdentifierDecl	idx = * pos		203550	0					
ANR	203555	IdentifierDeclType	uint32_t		203550	0					
ANR	203556	Identifier	idx		203550	1					
ANR	203557	AssignmentExpression	idx = * pos		203550	2		=			
ANR	203558	Identifier	idx		203550	0					
ANR	203559	UnaryOperationExpression	* pos		203550	1					
ANR	203560	UnaryOperator	*		203550	0					
ANR	203561	Identifier	pos		203550	1					
ANR	203562	IdentifierDeclStatement	Bucket * p ;	2114:1:56800:56809	203550	1	True				
ANR	203563	IdentifierDecl	* p		203550	0					
ANR	203564	IdentifierDeclType	Bucket *		203550	0					
ANR	203565	Identifier	p		203550	1					
ANR	203566	ExpressionStatement	IS_CONSISTENT ( ht )	2116:1:56813:56830	203550	2	True				
ANR	203567	CallExpression	IS_CONSISTENT ( ht )		203550	0					
ANR	203568	Callee	IS_CONSISTENT		203550	0					
ANR	203569	Identifier	IS_CONSISTENT		203550	0					
ANR	203570	ArgumentList	ht		203550	1					
ANR	203571	Argument	ht		203550	0					
ANR	203572	Identifier	ht		203550	0					
ANR	203573	IfStatement	if ( idx == HT_INVALID_IDX )		203550	3					
ANR	203574	Condition	idx == HT_INVALID_IDX	2117:5:56837:56857	203550	0	True				
ANR	203575	EqualityExpression	idx == HT_INVALID_IDX		203550	0		==			
ANR	203576	Identifier	idx		203550	0					
ANR	203577	Identifier	HT_INVALID_IDX		203550	1					
ANR	203578	CompoundStatement		6:28:84:84	203550	1					
ANR	203579	ExpressionStatement	ZVAL_NULL ( key )	2118:2:56864:56878	203550	0	True				
ANR	203580	CallExpression	ZVAL_NULL ( key )		203550	0					
ANR	203581	Callee	ZVAL_NULL		203550	0					
ANR	203582	Identifier	ZVAL_NULL		203550	0					
ANR	203583	ArgumentList	key		203550	1					
ANR	203584	Argument	key		203550	0					
ANR	203585	Identifier	key		203550	0					
ANR	203586	ElseStatement	else		203550	0					
ANR	203587	CompoundStatement		8:8:112:112	203550	0					
ANR	203588	ExpressionStatement	p = ht -> arData + idx	2120:2:56892:56912	203550	0	True				
ANR	203589	AssignmentExpression	p = ht -> arData + idx		203550	0		=			
ANR	203590	Identifier	p		203550	0					
ANR	203591	AdditiveExpression	ht -> arData + idx		203550	1		+			
ANR	203592	PtrMemberAccess	ht -> arData		203550	0					
ANR	203593	Identifier	ht		203550	0					
ANR	203594	Identifier	arData		203550	1					
ANR	203595	Identifier	idx		203550	1					
ANR	203596	IfStatement	if ( p -> key )		203550	1					
ANR	203597	Condition	p -> key	2121:6:56920:56925	203550	0	True				
ANR	203598	PtrMemberAccess	p -> key		203550	0					
ANR	203599	Identifier	p		203550	0					
ANR	203600	Identifier	key		203550	1					
ANR	203601	CompoundStatement		10:14:152:152	203550	1					
ANR	203602	ExpressionStatement	"ZVAL_STR_COPY ( key , p -> key )"	2122:3:56933:56959	203550	0	True				
ANR	203603	CallExpression	"ZVAL_STR_COPY ( key , p -> key )"		203550	0					
ANR	203604	Callee	ZVAL_STR_COPY		203550	0					
ANR	203605	Identifier	ZVAL_STR_COPY		203550	0					
ANR	203606	ArgumentList	key		203550	1					
ANR	203607	Argument	key		203550	0					
ANR	203608	Identifier	key		203550	0					
ANR	203609	Argument	p -> key		203550	1					
ANR	203610	PtrMemberAccess	p -> key		203550	0					
ANR	203611	Identifier	p		203550	0					
ANR	203612	Identifier	key		203550	1					
ANR	203613	ElseStatement	else		203550	0					
ANR	203614	CompoundStatement		12:9:194:194	203550	0					
ANR	203615	ExpressionStatement	"ZVAL_LONG ( key , p -> h )"	2124:3:56975:56995	203550	0	True				
ANR	203616	CallExpression	"ZVAL_LONG ( key , p -> h )"		203550	0					
ANR	203617	Callee	ZVAL_LONG		203550	0					
ANR	203618	Identifier	ZVAL_LONG		203550	0					
ANR	203619	ArgumentList	key		203550	1					
ANR	203620	Argument	key		203550	0					
ANR	203621	Identifier	key		203550	0					
ANR	203622	Argument	p -> h		203550	1					
ANR	203623	PtrMemberAccess	p -> h		203550	0					
ANR	203624	Identifier	p		203550	0					
ANR	203625	Identifier	h		203550	1					
ANR	203626	ReturnType	ZEND_API void ZEND_FASTCALL		203550	1					
ANR	203627	Identifier	zend_hash_get_current_key_zval_ex		203550	2					
ANR	203628	ParameterList	"const HashTable * ht , zval * key , HashPosition * pos"		203550	3					
ANR	203629	Parameter	const HashTable * ht	2111:62:56724:56742	203550	0	True				
ANR	203630	ParameterType	const HashTable *		203550	0					
ANR	203631	Identifier	ht		203550	1					
ANR	203632	Parameter	zval * key	2111:83:56745:56753	203550	1	True				
ANR	203633	ParameterType	zval *		203550	0					
ANR	203634	Identifier	key		203550	1					
ANR	203635	Parameter	HashPosition * pos	2111:94:56756:56772	203550	2	True				
ANR	203636	ParameterType	HashPosition *		203550	0					
ANR	203637	Identifier	pos		203550	1					
ANR	203638	CFGEntryNode	ENTRY		203550		True				
ANR	203639	CFGExitNode	EXIT		203550		True				
ANR	203640	Symbol	p		203550						
ANR	203641	Symbol	HT_INVALID_IDX		203550						
ANR	203642	Symbol	* ht		203550						
ANR	203643	Symbol	pos		203550						
ANR	203644	Symbol	ht -> arData		203550						
ANR	203645	Symbol	* p		203550						
ANR	203646	Symbol	ht		203550						
ANR	203647	Symbol	idx		203550						
ANR	203648	Symbol	key		203550						
ANR	203649	Symbol	* pos		203550						
ANR	203650	Symbol	p -> key		203550						
ANR	203651	Symbol	p -> h		203550						
ANR	203652	Function	zend_hash_get_current_key_type_ex	2129:0:57007:57339							
ANR	203653	FunctionDef	"zend_hash_get_current_key_type_ex (HashTable * ht , HashPosition * pos)"		203652	0					
ANR	203654	CompoundStatement		2130:0:57102:57339	203652	0					
ANR	203655	IdentifierDeclStatement	uint32_t idx = * pos ;	2131:4:57108:57127	203652	0	True				
ANR	203656	IdentifierDecl	idx = * pos		203652	0					
ANR	203657	IdentifierDeclType	uint32_t		203652	0					
ANR	203658	Identifier	idx		203652	1					
ANR	203659	AssignmentExpression	idx = * pos		203652	2		=			
ANR	203660	Identifier	idx		203652	0					
ANR	203661	UnaryOperationExpression	* pos		203652	1					
ANR	203662	UnaryOperator	*		203652	0					
ANR	203663	Identifier	pos		203652	1					
ANR	203664	IdentifierDeclStatement	Bucket * p ;	2132:1:57130:57139	203652	1	True				
ANR	203665	IdentifierDecl	* p		203652	0					
ANR	203666	IdentifierDeclType	Bucket *		203652	0					
ANR	203667	Identifier	p		203652	1					
ANR	203668	ExpressionStatement	IS_CONSISTENT ( ht )	2134:1:57143:57160	203652	2	True				
ANR	203669	CallExpression	IS_CONSISTENT ( ht )		203652	0					
ANR	203670	Callee	IS_CONSISTENT		203652	0					
ANR	203671	Identifier	IS_CONSISTENT		203652	0					
ANR	203672	ArgumentList	ht		203652	1					
ANR	203673	Argument	ht		203652	0					
ANR	203674	Identifier	ht		203652	0					
ANR	203675	IfStatement	if ( idx != HT_INVALID_IDX )		203652	3					
ANR	203676	Condition	idx != HT_INVALID_IDX	2135:5:57167:57187	203652	0	True				
ANR	203677	EqualityExpression	idx != HT_INVALID_IDX		203652	0		!=			
ANR	203678	Identifier	idx		203652	0					
ANR	203679	Identifier	HT_INVALID_IDX		203652	1					
ANR	203680	CompoundStatement		6:28:87:87	203652	1					
ANR	203681	ExpressionStatement	p = ht -> arData + idx	2136:2:57194:57214	203652	0	True				
ANR	203682	AssignmentExpression	p = ht -> arData + idx		203652	0		=			
ANR	203683	Identifier	p		203652	0					
ANR	203684	AdditiveExpression	ht -> arData + idx		203652	1		+			
ANR	203685	PtrMemberAccess	ht -> arData		203652	0					
ANR	203686	Identifier	ht		203652	0					
ANR	203687	Identifier	arData		203652	1					
ANR	203688	Identifier	idx		203652	1					
ANR	203689	IfStatement	if ( p -> key )		203652	1					
ANR	203690	Condition	p -> key	2137:6:57222:57227	203652	0	True				
ANR	203691	PtrMemberAccess	p -> key		203652	0					
ANR	203692	Identifier	p		203652	0					
ANR	203693	Identifier	key		203652	1					
ANR	203694	CompoundStatement		8:14:127:127	203652	1					
ANR	203695	ReturnStatement	return HASH_KEY_IS_STRING ;	2138:3:57235:57260	203652	0	True				
ANR	203696	Identifier	HASH_KEY_IS_STRING		203652	0					
ANR	203697	ElseStatement	else		203652	0					
ANR	203698	CompoundStatement		10:9:168:168	203652	0					
ANR	203699	ReturnStatement	return HASH_KEY_IS_LONG ;	2140:3:57276:57299	203652	0	True				
ANR	203700	Identifier	HASH_KEY_IS_LONG		203652	0					
ANR	203701	ReturnStatement	return HASH_KEY_NON_EXISTENT ;	2143:1:57309:57337	203652	4	True				
ANR	203702	Identifier	HASH_KEY_NON_EXISTENT		203652	0					
ANR	203703	ReturnType	ZEND_API int ZEND_FASTCALL		203652	1					
ANR	203704	Identifier	zend_hash_get_current_key_type_ex		203652	2					
ANR	203705	ParameterList	"HashTable * ht , HashPosition * pos"		203652	3					
ANR	203706	Parameter	HashTable * ht	2129:61:57068:57080	203652	0	True				
ANR	203707	ParameterType	HashTable *		203652	0					
ANR	203708	Identifier	ht		203652	1					
ANR	203709	Parameter	HashPosition * pos	2129:76:57083:57099	203652	1	True				
ANR	203710	ParameterType	HashPosition *		203652	0					
ANR	203711	Identifier	pos		203652	1					
ANR	203712	CFGEntryNode	ENTRY		203652		True				
ANR	203713	CFGExitNode	EXIT		203652		True				
ANR	203714	Symbol	HT_INVALID_IDX		203652						
ANR	203715	Symbol	ht -> arData		203652						
ANR	203716	Symbol	HASH_KEY_IS_STRING		203652						
ANR	203717	Symbol	HASH_KEY_NON_EXISTENT		203652						
ANR	203718	Symbol	ht		203652						
ANR	203719	Symbol	p -> key		203652						
ANR	203720	Symbol	p		203652						
ANR	203721	Symbol	* ht		203652						
ANR	203722	Symbol	pos		203652						
ANR	203723	Symbol	HASH_KEY_IS_LONG		203652						
ANR	203724	Symbol	* p		203652						
ANR	203725	Symbol	idx		203652						
ANR	203726	Symbol	* pos		203652						
ANR	203727	Function	zend_hash_get_current_data_ex	2147:15:57358:57593							
ANR	203728	FunctionDef	"zend_hash_get_current_data_ex (HashTable * ht , HashPosition * pos)"		203727	0					
ANR	203729	CompoundStatement		2148:0:57436:57593	203727	0					
ANR	203730	IdentifierDeclStatement	uint32_t idx = * pos ;	2149:1:57439:57458	203727	0	True				
ANR	203731	IdentifierDecl	idx = * pos		203727	0					
ANR	203732	IdentifierDeclType	uint32_t		203727	0					
ANR	203733	Identifier	idx		203727	1					
ANR	203734	AssignmentExpression	idx = * pos		203727	2		=			
ANR	203735	Identifier	idx		203727	0					
ANR	203736	UnaryOperationExpression	* pos		203727	1					
ANR	203737	UnaryOperator	*		203727	0					
ANR	203738	Identifier	pos		203727	1					
ANR	203739	IdentifierDeclStatement	Bucket * p ;	2150:1:57461:57470	203727	1	True				
ANR	203740	IdentifierDecl	* p		203727	0					
ANR	203741	IdentifierDeclType	Bucket *		203727	0					
ANR	203742	Identifier	p		203727	1					
ANR	203743	ExpressionStatement	IS_CONSISTENT ( ht )	2152:1:57474:57491	203727	2	True				
ANR	203744	CallExpression	IS_CONSISTENT ( ht )		203727	0					
ANR	203745	Callee	IS_CONSISTENT		203727	0					
ANR	203746	Identifier	IS_CONSISTENT		203727	0					
ANR	203747	ArgumentList	ht		203727	1					
ANR	203748	Argument	ht		203727	0					
ANR	203749	Identifier	ht		203727	0					
ANR	203750	IfStatement	if ( idx != HT_INVALID_IDX )		203727	3					
ANR	203751	Condition	idx != HT_INVALID_IDX	2153:5:57498:57518	203727	0	True				
ANR	203752	EqualityExpression	idx != HT_INVALID_IDX		203727	0		!=			
ANR	203753	Identifier	idx		203727	0					
ANR	203754	Identifier	HT_INVALID_IDX		203727	1					
ANR	203755	CompoundStatement		6:28:84:84	203727	1					
ANR	203756	ExpressionStatement	p = ht -> arData + idx	2154:2:57525:57545	203727	0	True				
ANR	203757	AssignmentExpression	p = ht -> arData + idx		203727	0		=			
ANR	203758	Identifier	p		203727	0					
ANR	203759	AdditiveExpression	ht -> arData + idx		203727	1		+			
ANR	203760	PtrMemberAccess	ht -> arData		203727	0					
ANR	203761	Identifier	ht		203727	0					
ANR	203762	Identifier	arData		203727	1					
ANR	203763	Identifier	idx		203727	1					
ANR	203764	ReturnStatement	return & p -> val ;	2155:2:57549:57563	203727	1	True				
ANR	203765	UnaryOperationExpression	& p -> val		203727	0					
ANR	203766	UnaryOperator	&		203727	0					
ANR	203767	PtrMemberAccess	p -> val		203727	1					
ANR	203768	Identifier	p		203727	0					
ANR	203769	Identifier	val		203727	1					
ANR	203770	ElseStatement	else		203727	0					
ANR	203771	CompoundStatement		9:8:136:136	203727	0					
ANR	203772	ReturnStatement	return NULL ;	2157:2:57577:57588	203727	0	True				
ANR	203773	Identifier	NULL		203727	0					
ANR	203774	ReturnType	ZEND_FASTCALL		203727	1					
ANR	203775	Identifier	zend_hash_get_current_data_ex		203727	2					
ANR	203776	ParameterList	"HashTable * ht , HashPosition * pos"		203727	3					
ANR	203777	Parameter	HashTable * ht	2147:59:57402:57414	203727	0	True				
ANR	203778	ParameterType	HashTable *		203727	0					
ANR	203779	Identifier	ht		203727	1					
ANR	203780	Parameter	HashPosition * pos	2147:74:57417:57433	203727	1	True				
ANR	203781	ParameterType	HashPosition *		203727	0					
ANR	203782	Identifier	pos		203727	1					
ANR	203783	CFGEntryNode	ENTRY		203727		True				
ANR	203784	CFGExitNode	EXIT		203727		True				
ANR	203785	Symbol	p		203727						
ANR	203786	Symbol	HT_INVALID_IDX		203727						
ANR	203787	Symbol	* ht		203727						
ANR	203788	Symbol	NULL		203727						
ANR	203789	Symbol	pos		203727						
ANR	203790	Symbol	ht -> arData		203727						
ANR	203791	Symbol	ht		203727						
ANR	203792	Symbol	idx		203727						
ANR	203793	Symbol	* pos		203727						
ANR	203794	Symbol	& p -> val		203727						
ANR	203795	Function	zend_hash_bucket_swap	2161:0:57596:57890							
ANR	203796	FunctionDef	"zend_hash_bucket_swap (Bucket * p , Bucket * q)"		203795	0					
ANR	203797	CompoundStatement		2162:0:57654:57890	203795	0					
ANR	203798	IdentifierDeclStatement	zval val ;	2163:1:57657:57665	203795	0	True				
ANR	203799	IdentifierDecl	val		203795	0					
ANR	203800	IdentifierDeclType	zval		203795	0					
ANR	203801	Identifier	val		203795	1					
ANR	203802	IdentifierDeclStatement	zend_ulong h ;	2164:1:57668:57680	203795	1	True				
ANR	203803	IdentifierDecl	h		203795	0					
ANR	203804	IdentifierDeclType	zend_ulong		203795	0					
ANR	203805	Identifier	h		203795	1					
ANR	203806	IdentifierDeclStatement	zend_string * key ;	2165:1:57683:57699	203795	2	True				
ANR	203807	IdentifierDecl	* key		203795	0					
ANR	203808	IdentifierDeclType	zend_string *		203795	0					
ANR	203809	Identifier	key		203795	1					
ANR	203810	ExpressionStatement	"ZVAL_COPY_VALUE ( & val , & p -> val )"	2167:1:57703:57733	203795	3	True				
ANR	203811	CallExpression	"ZVAL_COPY_VALUE ( & val , & p -> val )"		203795	0					
ANR	203812	Callee	ZVAL_COPY_VALUE		203795	0					
ANR	203813	Identifier	ZVAL_COPY_VALUE		203795	0					
ANR	203814	ArgumentList	& val		203795	1					
ANR	203815	Argument	& val		203795	0					
ANR	203816	UnaryOperationExpression	& val		203795	0					
ANR	203817	UnaryOperator	&		203795	0					
ANR	203818	Identifier	val		203795	1					
ANR	203819	Argument	& p -> val		203795	1					
ANR	203820	UnaryOperationExpression	& p -> val		203795	0					
ANR	203821	UnaryOperator	&		203795	0					
ANR	203822	PtrMemberAccess	p -> val		203795	1					
ANR	203823	Identifier	p		203795	0					
ANR	203824	Identifier	val		203795	1					
ANR	203825	ExpressionStatement	h = p -> h	2168:1:57736:57744	203795	4	True				
ANR	203826	AssignmentExpression	h = p -> h		203795	0		=			
ANR	203827	Identifier	h		203795	0					
ANR	203828	PtrMemberAccess	p -> h		203795	1					
ANR	203829	Identifier	p		203795	0					
ANR	203830	Identifier	h		203795	1					
ANR	203831	ExpressionStatement	key = p -> key	2169:1:57747:57759	203795	5	True				
ANR	203832	AssignmentExpression	key = p -> key		203795	0		=			
ANR	203833	Identifier	key		203795	0					
ANR	203834	PtrMemberAccess	p -> key		203795	1					
ANR	203835	Identifier	p		203795	0					
ANR	203836	Identifier	key		203795	1					
ANR	203837	ExpressionStatement	"ZVAL_COPY_VALUE ( & p -> val , & q -> val )"	2171:1:57763:57796	203795	6	True				
ANR	203838	CallExpression	"ZVAL_COPY_VALUE ( & p -> val , & q -> val )"		203795	0					
ANR	203839	Callee	ZVAL_COPY_VALUE		203795	0					
ANR	203840	Identifier	ZVAL_COPY_VALUE		203795	0					
ANR	203841	ArgumentList	& p -> val		203795	1					
ANR	203842	Argument	& p -> val		203795	0					
ANR	203843	UnaryOperationExpression	& p -> val		203795	0					
ANR	203844	UnaryOperator	&		203795	0					
ANR	203845	PtrMemberAccess	p -> val		203795	1					
ANR	203846	Identifier	p		203795	0					
ANR	203847	Identifier	val		203795	1					
ANR	203848	Argument	& q -> val		203795	1					
ANR	203849	UnaryOperationExpression	& q -> val		203795	0					
ANR	203850	UnaryOperator	&		203795	0					
ANR	203851	PtrMemberAccess	q -> val		203795	1					
ANR	203852	Identifier	q		203795	0					
ANR	203853	Identifier	val		203795	1					
ANR	203854	ExpressionStatement	p -> h = q -> h	2172:1:57799:57810	203795	7	True				
ANR	203855	AssignmentExpression	p -> h = q -> h		203795	0		=			
ANR	203856	PtrMemberAccess	p -> h		203795	0					
ANR	203857	Identifier	p		203795	0					
ANR	203858	Identifier	h		203795	1					
ANR	203859	PtrMemberAccess	q -> h		203795	1					
ANR	203860	Identifier	q		203795	0					
ANR	203861	Identifier	h		203795	1					
ANR	203862	ExpressionStatement	p -> key = q -> key	2173:1:57813:57828	203795	8	True				
ANR	203863	AssignmentExpression	p -> key = q -> key		203795	0		=			
ANR	203864	PtrMemberAccess	p -> key		203795	0					
ANR	203865	Identifier	p		203795	0					
ANR	203866	Identifier	key		203795	1					
ANR	203867	PtrMemberAccess	q -> key		203795	1					
ANR	203868	Identifier	q		203795	0					
ANR	203869	Identifier	key		203795	1					
ANR	203870	ExpressionStatement	"ZVAL_COPY_VALUE ( & q -> val , & val )"	2175:1:57832:57862	203795	9	True				
ANR	203871	CallExpression	"ZVAL_COPY_VALUE ( & q -> val , & val )"		203795	0					
ANR	203872	Callee	ZVAL_COPY_VALUE		203795	0					
ANR	203873	Identifier	ZVAL_COPY_VALUE		203795	0					
ANR	203874	ArgumentList	& q -> val		203795	1					
ANR	203875	Argument	& q -> val		203795	0					
ANR	203876	UnaryOperationExpression	& q -> val		203795	0					
ANR	203877	UnaryOperator	&		203795	0					
ANR	203878	PtrMemberAccess	q -> val		203795	1					
ANR	203879	Identifier	q		203795	0					
ANR	203880	Identifier	val		203795	1					
ANR	203881	Argument	& val		203795	1					
ANR	203882	UnaryOperationExpression	& val		203795	0					
ANR	203883	UnaryOperator	&		203795	0					
ANR	203884	Identifier	val		203795	1					
ANR	203885	ExpressionStatement	q -> h = h	2176:1:57865:57873	203795	10	True				
ANR	203886	AssignmentExpression	q -> h = h		203795	0		=			
ANR	203887	PtrMemberAccess	q -> h		203795	0					
ANR	203888	Identifier	q		203795	0					
ANR	203889	Identifier	h		203795	1					
ANR	203890	Identifier	h		203795	1					
ANR	203891	ExpressionStatement	q -> key = key	2177:1:57876:57888	203795	11	True				
ANR	203892	AssignmentExpression	q -> key = key		203795	0		=			
ANR	203893	PtrMemberAccess	q -> key		203795	0					
ANR	203894	Identifier	q		203795	0					
ANR	203895	Identifier	key		203795	1					
ANR	203896	Identifier	key		203795	1					
ANR	203897	ReturnType	ZEND_API void		203795	1					
ANR	203898	Identifier	zend_hash_bucket_swap		203795	2					
ANR	203899	ParameterList	"Bucket * p , Bucket * q"		203795	3					
ANR	203900	Parameter	Bucket * p	2161:36:57632:57640	203795	0	True				
ANR	203901	ParameterType	Bucket *		203795	0					
ANR	203902	Identifier	p		203795	1					
ANR	203903	Parameter	Bucket * q	2161:47:57643:57651	203795	1	True				
ANR	203904	ParameterType	Bucket *		203795	0					
ANR	203905	Identifier	q		203795	1					
ANR	203906	CFGEntryNode	ENTRY		203795		True				
ANR	203907	CFGExitNode	EXIT		203795		True				
ANR	203908	Symbol	val		203795						
ANR	203909	Symbol	& val		203795						
ANR	203910	Symbol	q -> h		203795						
ANR	203911	Symbol	h		203795						
ANR	203912	Symbol	p -> key		203795						
ANR	203913	Symbol	q -> key		203795						
ANR	203914	Symbol	p		203795						
ANR	203915	Symbol	q		203795						
ANR	203916	Symbol	* p		203795						
ANR	203917	Symbol	* q		203795						
ANR	203918	Symbol	key		203795						
ANR	203919	Symbol	p -> h		203795						
ANR	203920	Symbol	& p -> val		203795						
ANR	203921	Symbol	& q -> val		203795						
ANR	203922	Function	zend_hash_bucket_renum_swap	2180:0:57893:58073							
ANR	203923	FunctionDef	"zend_hash_bucket_renum_swap (Bucket * p , Bucket * q)"		203922	0					
ANR	203924	CompoundStatement		2181:0:57957:58073	203922	0					
ANR	203925	IdentifierDeclStatement	zval val ;	2182:1:57960:57968	203922	0	True				
ANR	203926	IdentifierDecl	val		203922	0					
ANR	203927	IdentifierDeclType	zval		203922	0					
ANR	203928	Identifier	val		203922	1					
ANR	203929	ExpressionStatement	"ZVAL_COPY_VALUE ( & val , & p -> val )"	2184:1:57972:58002	203922	1	True				
ANR	203930	CallExpression	"ZVAL_COPY_VALUE ( & val , & p -> val )"		203922	0					
ANR	203931	Callee	ZVAL_COPY_VALUE		203922	0					
ANR	203932	Identifier	ZVAL_COPY_VALUE		203922	0					
ANR	203933	ArgumentList	& val		203922	1					
ANR	203934	Argument	& val		203922	0					
ANR	203935	UnaryOperationExpression	& val		203922	0					
ANR	203936	UnaryOperator	&		203922	0					
ANR	203937	Identifier	val		203922	1					
ANR	203938	Argument	& p -> val		203922	1					
ANR	203939	UnaryOperationExpression	& p -> val		203922	0					
ANR	203940	UnaryOperator	&		203922	0					
ANR	203941	PtrMemberAccess	p -> val		203922	1					
ANR	203942	Identifier	p		203922	0					
ANR	203943	Identifier	val		203922	1					
ANR	203944	ExpressionStatement	"ZVAL_COPY_VALUE ( & p -> val , & q -> val )"	2185:1:58005:58038	203922	2	True				
ANR	203945	CallExpression	"ZVAL_COPY_VALUE ( & p -> val , & q -> val )"		203922	0					
ANR	203946	Callee	ZVAL_COPY_VALUE		203922	0					
ANR	203947	Identifier	ZVAL_COPY_VALUE		203922	0					
ANR	203948	ArgumentList	& p -> val		203922	1					
ANR	203949	Argument	& p -> val		203922	0					
ANR	203950	UnaryOperationExpression	& p -> val		203922	0					
ANR	203951	UnaryOperator	&		203922	0					
ANR	203952	PtrMemberAccess	p -> val		203922	1					
ANR	203953	Identifier	p		203922	0					
ANR	203954	Identifier	val		203922	1					
ANR	203955	Argument	& q -> val		203922	1					
ANR	203956	UnaryOperationExpression	& q -> val		203922	0					
ANR	203957	UnaryOperator	&		203922	0					
ANR	203958	PtrMemberAccess	q -> val		203922	1					
ANR	203959	Identifier	q		203922	0					
ANR	203960	Identifier	val		203922	1					
ANR	203961	ExpressionStatement	"ZVAL_COPY_VALUE ( & q -> val , & val )"	2186:1:58041:58071	203922	3	True				
ANR	203962	CallExpression	"ZVAL_COPY_VALUE ( & q -> val , & val )"		203922	0					
ANR	203963	Callee	ZVAL_COPY_VALUE		203922	0					
ANR	203964	Identifier	ZVAL_COPY_VALUE		203922	0					
ANR	203965	ArgumentList	& q -> val		203922	1					
ANR	203966	Argument	& q -> val		203922	0					
ANR	203967	UnaryOperationExpression	& q -> val		203922	0					
ANR	203968	UnaryOperator	&		203922	0					
ANR	203969	PtrMemberAccess	q -> val		203922	1					
ANR	203970	Identifier	q		203922	0					
ANR	203971	Identifier	val		203922	1					
ANR	203972	Argument	& val		203922	1					
ANR	203973	UnaryOperationExpression	& val		203922	0					
ANR	203974	UnaryOperator	&		203922	0					
ANR	203975	Identifier	val		203922	1					
ANR	203976	ReturnType	ZEND_API void		203922	1					
ANR	203977	Identifier	zend_hash_bucket_renum_swap		203922	2					
ANR	203978	ParameterList	"Bucket * p , Bucket * q"		203922	3					
ANR	203979	Parameter	Bucket * p	2180:42:57935:57943	203922	0	True				
ANR	203980	ParameterType	Bucket *		203922	0					
ANR	203981	Identifier	p		203922	1					
ANR	203982	Parameter	Bucket * q	2180:53:57946:57954	203922	1	True				
ANR	203983	ParameterType	Bucket *		203922	0					
ANR	203984	Identifier	q		203922	1					
ANR	203985	CFGEntryNode	ENTRY		203922		True				
ANR	203986	CFGExitNode	EXIT		203922		True				
ANR	203987	Symbol	p		203922						
ANR	203988	Symbol	val		203922						
ANR	203989	Symbol	& val		203922						
ANR	203990	Symbol	q		203922						
ANR	203991	Symbol	& p -> val		203922						
ANR	203992	Symbol	& q -> val		203922						
ANR	203993	Function	zend_hash_bucket_packed_swap	2189:0:58076:58310							
ANR	203994	FunctionDef	"zend_hash_bucket_packed_swap (Bucket * p , Bucket * q)"		203993	0					
ANR	203995	CompoundStatement		2190:0:58141:58310	203993	0					
ANR	203996	IdentifierDeclStatement	zval val ;	2191:1:58144:58152	203993	0	True				
ANR	203997	IdentifierDecl	val		203993	0					
ANR	203998	IdentifierDeclType	zval		203993	0					
ANR	203999	Identifier	val		203993	1					
ANR	204000	IdentifierDeclStatement	zend_ulong h ;	2192:1:58155:58167	203993	1	True				
ANR	204001	IdentifierDecl	h		203993	0					
ANR	204002	IdentifierDeclType	zend_ulong		203993	0					
ANR	204003	Identifier	h		203993	1					
ANR	204004	ExpressionStatement	"ZVAL_COPY_VALUE ( & val , & p -> val )"	2194:1:58171:58201	203993	2	True				
ANR	204005	CallExpression	"ZVAL_COPY_VALUE ( & val , & p -> val )"		203993	0					
ANR	204006	Callee	ZVAL_COPY_VALUE		203993	0					
ANR	204007	Identifier	ZVAL_COPY_VALUE		203993	0					
ANR	204008	ArgumentList	& val		203993	1					
ANR	204009	Argument	& val		203993	0					
ANR	204010	UnaryOperationExpression	& val		203993	0					
ANR	204011	UnaryOperator	&		203993	0					
ANR	204012	Identifier	val		203993	1					
ANR	204013	Argument	& p -> val		203993	1					
ANR	204014	UnaryOperationExpression	& p -> val		203993	0					
ANR	204015	UnaryOperator	&		203993	0					
ANR	204016	PtrMemberAccess	p -> val		203993	1					
ANR	204017	Identifier	p		203993	0					
ANR	204018	Identifier	val		203993	1					
ANR	204019	ExpressionStatement	h = p -> h	2195:1:58204:58212	203993	3	True				
ANR	204020	AssignmentExpression	h = p -> h		203993	0		=			
ANR	204021	Identifier	h		203993	0					
ANR	204022	PtrMemberAccess	p -> h		203993	1					
ANR	204023	Identifier	p		203993	0					
ANR	204024	Identifier	h		203993	1					
ANR	204025	ExpressionStatement	"ZVAL_COPY_VALUE ( & p -> val , & q -> val )"	2197:1:58216:58249	203993	4	True				
ANR	204026	CallExpression	"ZVAL_COPY_VALUE ( & p -> val , & q -> val )"		203993	0					
ANR	204027	Callee	ZVAL_COPY_VALUE		203993	0					
ANR	204028	Identifier	ZVAL_COPY_VALUE		203993	0					
ANR	204029	ArgumentList	& p -> val		203993	1					
ANR	204030	Argument	& p -> val		203993	0					
ANR	204031	UnaryOperationExpression	& p -> val		203993	0					
ANR	204032	UnaryOperator	&		203993	0					
ANR	204033	PtrMemberAccess	p -> val		203993	1					
ANR	204034	Identifier	p		203993	0					
ANR	204035	Identifier	val		203993	1					
ANR	204036	Argument	& q -> val		203993	1					
ANR	204037	UnaryOperationExpression	& q -> val		203993	0					
ANR	204038	UnaryOperator	&		203993	0					
ANR	204039	PtrMemberAccess	q -> val		203993	1					
ANR	204040	Identifier	q		203993	0					
ANR	204041	Identifier	val		203993	1					
ANR	204042	ExpressionStatement	p -> h = q -> h	2198:1:58252:58263	203993	5	True				
ANR	204043	AssignmentExpression	p -> h = q -> h		203993	0		=			
ANR	204044	PtrMemberAccess	p -> h		203993	0					
ANR	204045	Identifier	p		203993	0					
ANR	204046	Identifier	h		203993	1					
ANR	204047	PtrMemberAccess	q -> h		203993	1					
ANR	204048	Identifier	q		203993	0					
ANR	204049	Identifier	h		203993	1					
ANR	204050	ExpressionStatement	"ZVAL_COPY_VALUE ( & q -> val , & val )"	2200:1:58267:58297	203993	6	True				
ANR	204051	CallExpression	"ZVAL_COPY_VALUE ( & q -> val , & val )"		203993	0					
ANR	204052	Callee	ZVAL_COPY_VALUE		203993	0					
ANR	204053	Identifier	ZVAL_COPY_VALUE		203993	0					
ANR	204054	ArgumentList	& q -> val		203993	1					
ANR	204055	Argument	& q -> val		203993	0					
ANR	204056	UnaryOperationExpression	& q -> val		203993	0					
ANR	204057	UnaryOperator	&		203993	0					
ANR	204058	PtrMemberAccess	q -> val		203993	1					
ANR	204059	Identifier	q		203993	0					
ANR	204060	Identifier	val		203993	1					
ANR	204061	Argument	& val		203993	1					
ANR	204062	UnaryOperationExpression	& val		203993	0					
ANR	204063	UnaryOperator	&		203993	0					
ANR	204064	Identifier	val		203993	1					
ANR	204065	ExpressionStatement	q -> h = h	2201:1:58300:58308	203993	7	True				
ANR	204066	AssignmentExpression	q -> h = h		203993	0		=			
ANR	204067	PtrMemberAccess	q -> h		203993	0					
ANR	204068	Identifier	q		203993	0					
ANR	204069	Identifier	h		203993	1					
ANR	204070	Identifier	h		203993	1					
ANR	204071	ReturnType	ZEND_API void		203993	1					
ANR	204072	Identifier	zend_hash_bucket_packed_swap		203993	2					
ANR	204073	ParameterList	"Bucket * p , Bucket * q"		203993	3					
ANR	204074	Parameter	Bucket * p	2189:43:58119:58127	203993	0	True				
ANR	204075	ParameterType	Bucket *		203993	0					
ANR	204076	Identifier	p		203993	1					
ANR	204077	Parameter	Bucket * q	2189:54:58130:58138	203993	1	True				
ANR	204078	ParameterType	Bucket *		203993	0					
ANR	204079	Identifier	q		203993	1					
ANR	204080	CFGEntryNode	ENTRY		203993		True				
ANR	204081	CFGExitNode	EXIT		203993		True				
ANR	204082	Symbol	p		203993						
ANR	204083	Symbol	val		203993						
ANR	204084	Symbol	& val		203993						
ANR	204085	Symbol	q		203993						
ANR	204086	Symbol	q -> h		203993						
ANR	204087	Symbol	h		203993						
ANR	204088	Symbol	* p		203993						
ANR	204089	Symbol	* q		203993						
ANR	204090	Symbol	p -> h		203993						
ANR	204091	Symbol	& p -> val		203993						
ANR	204092	Symbol	& q -> val		203993						
ANR	204093	Function	zend_hash_sort_ex	2204:0:58313:60097							
ANR	204094	FunctionDef	"zend_hash_sort_ex (HashTable * ht , sort_func_t sort , compare_func_t compar , zend_bool renumber)"		204093	0					
ANR	204095	CompoundStatement		2205:0:58434:60097	204093	0					
ANR	204096	IdentifierDeclStatement	Bucket * p ;	2206:1:58437:58446	204093	0	True				
ANR	204097	IdentifierDecl	* p		204093	0					
ANR	204098	IdentifierDeclType	Bucket *		204093	0					
ANR	204099	Identifier	p		204093	1					
ANR	204100	IdentifierDeclStatement	"uint32_t i , j ;"	2207:1:58449:58462	204093	1	True				
ANR	204101	IdentifierDecl	i		204093	0					
ANR	204102	IdentifierDeclType	uint32_t		204093	0					
ANR	204103	Identifier	i		204093	1					
ANR	204104	IdentifierDecl	j		204093	1					
ANR	204105	IdentifierDeclType	uint32_t		204093	0					
ANR	204106	Identifier	j		204093	1					
ANR	204107	ExpressionStatement	IS_CONSISTENT ( ht )	2209:1:58466:58483	204093	2	True				
ANR	204108	CallExpression	IS_CONSISTENT ( ht )		204093	0					
ANR	204109	Callee	IS_CONSISTENT		204093	0					
ANR	204110	Identifier	IS_CONSISTENT		204093	0					
ANR	204111	ArgumentList	ht		204093	1					
ANR	204112	Argument	ht		204093	0					
ANR	204113	Identifier	ht		204093	0					
ANR	204114	ExpressionStatement	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )	2210:1:58486:58517	204093	3	True				
ANR	204115	CallExpression	HT_ASSERT ( GC_REFCOUNT ( ht ) == 1 )		204093	0					
ANR	204116	Callee	HT_ASSERT		204093	0					
ANR	204117	Identifier	HT_ASSERT		204093	0					
ANR	204118	ArgumentList	GC_REFCOUNT ( ht ) == 1		204093	1					
ANR	204119	Argument	GC_REFCOUNT ( ht ) == 1		204093	0					
ANR	204120	EqualityExpression	GC_REFCOUNT ( ht ) == 1		204093	0		==			
ANR	204121	CallExpression	GC_REFCOUNT ( ht )		204093	0					
ANR	204122	Callee	GC_REFCOUNT		204093	0					
ANR	204123	Identifier	GC_REFCOUNT		204093	0					
ANR	204124	ArgumentList	ht		204093	1					
ANR	204125	Argument	ht		204093	0					
ANR	204126	Identifier	ht		204093	0					
ANR	204127	PrimaryExpression	1		204093	1					
ANR	204128	IfStatement	if ( ! ( ht -> nNumOfElements > 1 ) && ! ( renumber && ht -> nNumOfElements > 0 ) )		204093	4					
ANR	204129	Condition	! ( ht -> nNumOfElements > 1 ) && ! ( renumber && ht -> nNumOfElements > 0 )	2212:5:58525:58586	204093	0	True				
ANR	204130	AndExpression	! ( ht -> nNumOfElements > 1 ) && ! ( renumber && ht -> nNumOfElements > 0 )		204093	0		&&			
ANR	204131	UnaryOperationExpression	! ( ht -> nNumOfElements > 1 )		204093	0					
ANR	204132	UnaryOperator	!		204093	0					
ANR	204133	RelationalExpression	ht -> nNumOfElements > 1		204093	1		>			
ANR	204134	PtrMemberAccess	ht -> nNumOfElements		204093	0					
ANR	204135	Identifier	ht		204093	0					
ANR	204136	Identifier	nNumOfElements		204093	1					
ANR	204137	PrimaryExpression	1		204093	1					
ANR	204138	UnaryOperationExpression	! ( renumber && ht -> nNumOfElements > 0 )		204093	1					
ANR	204139	UnaryOperator	!		204093	0					
ANR	204140	AndExpression	renumber && ht -> nNumOfElements > 0		204093	1		&&			
ANR	204141	Identifier	renumber		204093	0					
ANR	204142	RelationalExpression	ht -> nNumOfElements > 0		204093	1		>			
ANR	204143	PtrMemberAccess	ht -> nNumOfElements		204093	0					
ANR	204144	Identifier	ht		204093	0					
ANR	204145	Identifier	nNumOfElements		204093	1					
ANR	204146	PrimaryExpression	0		204093	1					
ANR	204147	CompoundStatement		8:69:154:154	204093	1					
ANR	204148	ReturnStatement	return SUCCESS ;	2213:2:58623:58637	204093	0	True				
ANR	204149	Identifier	SUCCESS		204093	0					
ANR	204150	IfStatement	if ( ht -> nNumUsed == ht -> nNumOfElements )		204093	5					
ANR	204151	Condition	ht -> nNumUsed == ht -> nNumOfElements	2216:5:58648:58681	204093	0	True				
ANR	204152	EqualityExpression	ht -> nNumUsed == ht -> nNumOfElements		204093	0		==			
ANR	204153	PtrMemberAccess	ht -> nNumUsed		204093	0					
ANR	204154	Identifier	ht		204093	0					
ANR	204155	Identifier	nNumUsed		204093	1					
ANR	204156	PtrMemberAccess	ht -> nNumOfElements		204093	1					
ANR	204157	Identifier	ht		204093	0					
ANR	204158	Identifier	nNumOfElements		204093	1					
ANR	204159	CompoundStatement		12:41:249:249	204093	1					
ANR	204160	ExpressionStatement	i = ht -> nNumUsed	2217:2:58688:58704	204093	0	True				
ANR	204161	AssignmentExpression	i = ht -> nNumUsed		204093	0		=			
ANR	204162	Identifier	i		204093	0					
ANR	204163	PtrMemberAccess	ht -> nNumUsed		204093	1					
ANR	204164	Identifier	ht		204093	0					
ANR	204165	Identifier	nNumUsed		204093	1					
ANR	204166	ElseStatement	else		204093	0					
ANR	204167	CompoundStatement		14:8:279:279	204093	0					
ANR	204168	ForStatement	"for ( j = 0 , i = 0 ; j < ht -> nNumUsed ; j ++ )"		204093	0					
ANR	204169	ForInit	"j = 0 , i = 0 ;"	2219:7:58723:58735	204093	0	True				
ANR	204170	Expression	"j = 0 , i = 0"		204093	0					
ANR	204171	AssignmentExpression	j = 0		204093	0		=			
ANR	204172	Identifier	j		204093	0					
ANR	204173	PrimaryExpression	0		204093	1					
ANR	204174	AssignmentExpression	i = 0		204093	1		=			
ANR	204175	Identifier	i		204093	0					
ANR	204176	PrimaryExpression	0		204093	1					
ANR	204177	Condition	j < ht -> nNumUsed	2219:21:58737:58752	204093	1	True				
ANR	204178	RelationalExpression	j < ht -> nNumUsed		204093	0		<			
ANR	204179	Identifier	j		204093	0					
ANR	204180	PtrMemberAccess	ht -> nNumUsed		204093	1					
ANR	204181	Identifier	ht		204093	0					
ANR	204182	Identifier	nNumUsed		204093	1					
ANR	204183	PostIncDecOperationExpression	j ++	2219:39:58755:58757	204093	2	True				
ANR	204184	Identifier	j		204093	0					
ANR	204185	IncDec	++		204093	1					
ANR	204186	CompoundStatement		15:44:325:325	204093	3					
ANR	204187	ExpressionStatement	p = ht -> arData + j	2220:3:58765:58783	204093	0	True				
ANR	204188	AssignmentExpression	p = ht -> arData + j		204093	0		=			
ANR	204189	Identifier	p		204093	0					
ANR	204190	AdditiveExpression	ht -> arData + j		204093	1		+			
ANR	204191	PtrMemberAccess	ht -> arData		204093	0					
ANR	204192	Identifier	ht		204093	0					
ANR	204193	Identifier	arData		204093	1					
ANR	204194	Identifier	j		204093	1					
ANR	204195	IfStatement	if ( UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF ) )		204093	1					
ANR	204196	Condition	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )	2221:7:58792:58829	204093	0	True				
ANR	204197	CallExpression	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )		204093	0					
ANR	204198	Callee	UNEXPECTED		204093	0					
ANR	204199	Identifier	UNEXPECTED		204093	0					
ANR	204200	ArgumentList	Z_TYPE ( p -> val ) == IS_UNDEF		204093	1					
ANR	204201	Argument	Z_TYPE ( p -> val ) == IS_UNDEF		204093	0					
ANR	204202	EqualityExpression	Z_TYPE ( p -> val ) == IS_UNDEF		204093	0		==			
ANR	204203	CallExpression	Z_TYPE ( p -> val )		204093	0					
ANR	204204	Callee	Z_TYPE		204093	0					
ANR	204205	Identifier	Z_TYPE		204093	0					
ANR	204206	ArgumentList	p -> val		204093	1					
ANR	204207	Argument	p -> val		204093	0					
ANR	204208	PtrMemberAccess	p -> val		204093	0					
ANR	204209	Identifier	p		204093	0					
ANR	204210	Identifier	val		204093	1					
ANR	204211	Identifier	IS_UNDEF		204093	1					
ANR	204212	ContinueStatement	continue ;	2221:47:58832:58840	204093	1	True				
ANR	204213	IfStatement	if ( i != j )		204093	2					
ANR	204214	Condition	i != j	2222:7:58849:58854	204093	0	True				
ANR	204215	EqualityExpression	i != j		204093	0		!=			
ANR	204216	Identifier	i		204093	0					
ANR	204217	Identifier	j		204093	1					
ANR	204218	CompoundStatement		18:15:422:422	204093	1					
ANR	204219	ExpressionStatement	ht -> arData [ i ] = * p	2223:4:58863:58881	204093	0	True				
ANR	204220	AssignmentExpression	ht -> arData [ i ] = * p		204093	0		=			
ANR	204221	ArrayIndexing	ht -> arData [ i ]		204093	0					
ANR	204222	PtrMemberAccess	ht -> arData		204093	0					
ANR	204223	Identifier	ht		204093	0					
ANR	204224	Identifier	arData		204093	1					
ANR	204225	Identifier	i		204093	1					
ANR	204226	UnaryOperationExpression	* p		204093	1					
ANR	204227	UnaryOperator	*		204093	0					
ANR	204228	Identifier	p		204093	1					
ANR	204229	ExpressionStatement	i ++	2225:3:58891:58894	204093	3	True				
ANR	204230	PostIncDecOperationExpression	i ++		204093	0					
ANR	204231	Identifier	i		204093	0					
ANR	204232	IncDec	++		204093	1					
ANR	204233	ExpressionStatement	"sort ( ( void * ) ht -> arData , i , sizeof ( Bucket ) , compar , ( swap_func_t ) ( renumber ? zend_hash_bucket_renum_swap : ( ( ht -> u . flags & HASH_FLAG_PACKED ) ? zend_hash_bucket_packed_swap : zend_hash_bucket_swap ) ) )"	2229:1:58905:59109	204093	6	True				
ANR	204234	CallExpression	"sort ( ( void * ) ht -> arData , i , sizeof ( Bucket ) , compar , ( swap_func_t ) ( renumber ? zend_hash_bucket_renum_swap : ( ( ht -> u . flags & HASH_FLAG_PACKED ) ? zend_hash_bucket_packed_swap : zend_hash_bucket_swap ) ) )"		204093	0					
ANR	204235	Callee	sort		204093	0					
ANR	204236	Identifier	sort		204093	0					
ANR	204237	ArgumentList	( void * ) ht -> arData		204093	1					
ANR	204238	Argument	( void * ) ht -> arData		204093	0					
ANR	204239	CastExpression	( void * ) ht -> arData		204093	0					
ANR	204240	CastTarget	void *		204093	0					
ANR	204241	PtrMemberAccess	ht -> arData		204093	1					
ANR	204242	Identifier	ht		204093	0					
ANR	204243	Identifier	arData		204093	1					
ANR	204244	Argument	i		204093	1					
ANR	204245	Identifier	i		204093	0					
ANR	204246	Argument	sizeof ( Bucket )		204093	2					
ANR	204247	SizeofExpression	sizeof ( Bucket )		204093	0					
ANR	204248	Sizeof	sizeof		204093	0					
ANR	204249	SizeofOperand	Bucket		204093	1					
ANR	204250	Argument	compar		204093	3					
ANR	204251	Identifier	compar		204093	0					
ANR	204252	Argument	( swap_func_t ) ( renumber ? zend_hash_bucket_renum_swap : ( ( ht -> u . flags & HASH_FLAG_PACKED ) ? zend_hash_bucket_packed_swap : zend_hash_bucket_swap ) )		204093	4					
ANR	204253	CastExpression	( swap_func_t ) ( renumber ? zend_hash_bucket_renum_swap : ( ( ht -> u . flags & HASH_FLAG_PACKED ) ? zend_hash_bucket_packed_swap : zend_hash_bucket_swap ) )		204093	0					
ANR	204254	CastTarget	swap_func_t		204093	0					
ANR	204255	ConditionalExpression	renumber ? zend_hash_bucket_renum_swap : ( ( ht -> u . flags & HASH_FLAG_PACKED ) ? zend_hash_bucket_packed_swap : zend_hash_bucket_swap )		204093	1					
ANR	204256	Condition	renumber		204093	0					
ANR	204257	Identifier	renumber		204093	0					
ANR	204258	Identifier	zend_hash_bucket_renum_swap		204093	1					
ANR	204259	ConditionalExpression	( ht -> u . flags & HASH_FLAG_PACKED ) ? zend_hash_bucket_packed_swap : zend_hash_bucket_swap		204093	2					
ANR	204260	Condition	ht -> u . flags & HASH_FLAG_PACKED		204093	0					
ANR	204261	BitAndExpression	ht -> u . flags & HASH_FLAG_PACKED		204093	0		&			
ANR	204262	MemberAccess	ht -> u . flags		204093	0					
ANR	204263	PtrMemberAccess	ht -> u		204093	0					
ANR	204264	Identifier	ht		204093	0					
ANR	204265	Identifier	u		204093	1					
ANR	204266	Identifier	flags		204093	1					
ANR	204267	Identifier	HASH_FLAG_PACKED		204093	1					
ANR	204268	Identifier	zend_hash_bucket_packed_swap		204093	1					
ANR	204269	Identifier	zend_hash_bucket_swap		204093	2					
ANR	204270	ExpressionStatement	HANDLE_BLOCK_INTERRUPTIONS ( )	2233:1:59113:59141	204093	7	True				
ANR	204271	CallExpression	HANDLE_BLOCK_INTERRUPTIONS ( )		204093	0					
ANR	204272	Callee	HANDLE_BLOCK_INTERRUPTIONS		204093	0					
ANR	204273	Identifier	HANDLE_BLOCK_INTERRUPTIONS		204093	0					
ANR	204274	ArgumentList			204093	1					
ANR	204275	ExpressionStatement	ht -> nNumUsed = i	2234:1:59144:59160	204093	8	True				
ANR	204276	AssignmentExpression	ht -> nNumUsed = i		204093	0		=			
ANR	204277	PtrMemberAccess	ht -> nNumUsed		204093	0					
ANR	204278	Identifier	ht		204093	0					
ANR	204279	Identifier	nNumUsed		204093	1					
ANR	204280	Identifier	i		204093	1					
ANR	204281	ExpressionStatement	ht -> nInternalPointer = 0	2235:1:59163:59187	204093	9	True				
ANR	204282	AssignmentExpression	ht -> nInternalPointer = 0		204093	0		=			
ANR	204283	PtrMemberAccess	ht -> nInternalPointer		204093	0					
ANR	204284	Identifier	ht		204093	0					
ANR	204285	Identifier	nInternalPointer		204093	1					
ANR	204286	PrimaryExpression	0		204093	1					
ANR	204287	IfStatement	if ( renumber )		204093	10					
ANR	204288	Condition	renumber	2237:5:59195:59202	204093	0	True				
ANR	204289	Identifier	renumber		204093	0					
ANR	204290	CompoundStatement		33:15:770:770	204093	1					
ANR	204291	ForStatement	for ( j = 0 ; j < i ; j ++ )		204093	0					
ANR	204292	ForInit	j = 0 ;	2238:7:59214:59219	204093	0	True				
ANR	204293	AssignmentExpression	j = 0		204093	0		=			
ANR	204294	Identifier	j		204093	0					
ANR	204295	PrimaryExpression	0		204093	1					
ANR	204296	Condition	j < i	2238:14:59221:59225	204093	1	True				
ANR	204297	RelationalExpression	j < i		204093	0		<			
ANR	204298	Identifier	j		204093	0					
ANR	204299	Identifier	i		204093	1					
ANR	204300	PostIncDecOperationExpression	j ++	2238:21:59228:59230	204093	2	True				
ANR	204301	Identifier	j		204093	0					
ANR	204302	IncDec	++		204093	1					
ANR	204303	CompoundStatement		34:26:798:798	204093	3					
ANR	204304	ExpressionStatement	p = ht -> arData + j	2239:3:59238:59256	204093	0	True				
ANR	204305	AssignmentExpression	p = ht -> arData + j		204093	0		=			
ANR	204306	Identifier	p		204093	0					
ANR	204307	AdditiveExpression	ht -> arData + j		204093	1		+			
ANR	204308	PtrMemberAccess	ht -> arData		204093	0					
ANR	204309	Identifier	ht		204093	0					
ANR	204310	Identifier	arData		204093	1					
ANR	204311	Identifier	j		204093	1					
ANR	204312	ExpressionStatement	p -> h = j	2240:3:59261:59269	204093	1	True				
ANR	204313	AssignmentExpression	p -> h = j		204093	0		=			
ANR	204314	PtrMemberAccess	p -> h		204093	0					
ANR	204315	Identifier	p		204093	0					
ANR	204316	Identifier	h		204093	1					
ANR	204317	Identifier	j		204093	1					
ANR	204318	IfStatement	if ( p -> key )		204093	2					
ANR	204319	Condition	p -> key	2241:7:59278:59283	204093	0	True				
ANR	204320	PtrMemberAccess	p -> key		204093	0					
ANR	204321	Identifier	p		204093	0					
ANR	204322	Identifier	key		204093	1					
ANR	204323	CompoundStatement		37:15:851:851	204093	1					
ANR	204324	ExpressionStatement	zend_string_release ( p -> key )	2242:4:59292:59319	204093	0	True				
ANR	204325	CallExpression	zend_string_release ( p -> key )		204093	0					
ANR	204326	Callee	zend_string_release		204093	0					
ANR	204327	Identifier	zend_string_release		204093	0					
ANR	204328	ArgumentList	p -> key		204093	1					
ANR	204329	Argument	p -> key		204093	0					
ANR	204330	PtrMemberAccess	p -> key		204093	0					
ANR	204331	Identifier	p		204093	0					
ANR	204332	Identifier	key		204093	1					
ANR	204333	ExpressionStatement	p -> key = NULL	2243:4:59325:59338	204093	1	True				
ANR	204334	AssignmentExpression	p -> key = NULL		204093	0		=			
ANR	204335	PtrMemberAccess	p -> key		204093	0					
ANR	204336	Identifier	p		204093	0					
ANR	204337	Identifier	key		204093	1					
ANR	204338	Identifier	NULL		204093	1					
ANR	204339	ExpressionStatement	ht -> nNextFreeElement = i	2247:2:59352:59376	204093	1	True				
ANR	204340	AssignmentExpression	ht -> nNextFreeElement = i		204093	0		=			
ANR	204341	PtrMemberAccess	ht -> nNextFreeElement		204093	0					
ANR	204342	Identifier	ht		204093	0					
ANR	204343	Identifier	nNextFreeElement		204093	1					
ANR	204344	Identifier	i		204093	1					
ANR	204345	IfStatement	if ( ht -> u . flags & HASH_FLAG_PACKED )		204093	11					
ANR	204346	Condition	ht -> u . flags & HASH_FLAG_PACKED	2249:5:59386:59415	204093	0	True				
ANR	204347	BitAndExpression	ht -> u . flags & HASH_FLAG_PACKED		204093	0		&			
ANR	204348	MemberAccess	ht -> u . flags		204093	0					
ANR	204349	PtrMemberAccess	ht -> u		204093	0					
ANR	204350	Identifier	ht		204093	0					
ANR	204351	Identifier	u		204093	1					
ANR	204352	Identifier	flags		204093	1					
ANR	204353	Identifier	HASH_FLAG_PACKED		204093	1					
ANR	204354	CompoundStatement		45:37:983:983	204093	1					
ANR	204355	IfStatement	if ( ! renumber )		204093	0					
ANR	204356	Condition	! renumber	2250:6:59426:59434	204093	0	True				
ANR	204357	UnaryOperationExpression	! renumber		204093	0					
ANR	204358	UnaryOperator	!		204093	0					
ANR	204359	Identifier	renumber		204093	1					
ANR	204360	CompoundStatement		46:17:1002:1002	204093	1					
ANR	204361	ExpressionStatement	zend_hash_packed_to_hash ( ht )	2251:3:59442:59470	204093	0	True				
ANR	204362	CallExpression	zend_hash_packed_to_hash ( ht )		204093	0					
ANR	204363	Callee	zend_hash_packed_to_hash		204093	0					
ANR	204364	Identifier	zend_hash_packed_to_hash		204093	0					
ANR	204365	ArgumentList	ht		204093	1					
ANR	204366	Argument	ht		204093	0					
ANR	204367	Identifier	ht		204093	0					
ANR	204368	ElseStatement	else		204093	0					
ANR	204369	CompoundStatement		49:8:1049:1049	204093	0					
ANR	204370	IfStatement	if ( renumber )		204093	0					
ANR	204371	Condition	renumber	2254:6:59492:59499	204093	0	True				
ANR	204372	Identifier	renumber		204093	0					
ANR	204373	CompoundStatement		52:3:1125:1157	204093	1					
ANR	204374	IdentifierDeclStatement	"void * new_data , * old_data = HT_GET_DATA_ADDR ( ht ) ;"	2255:3:59507:59555	204093	0	True				
ANR	204375	IdentifierDecl	* new_data		204093	0					
ANR	204376	IdentifierDeclType	void *		204093	0					
ANR	204377	Identifier	new_data		204093	1					
ANR	204378	IdentifierDecl	* old_data = HT_GET_DATA_ADDR ( ht )		204093	1					
ANR	204379	IdentifierDeclType	void *		204093	0					
ANR	204380	Identifier	old_data		204093	1					
ANR	204381	AssignmentExpression	* old_data = HT_GET_DATA_ADDR ( ht )		204093	2		=			
ANR	204382	Identifier	old_data		204093	0					
ANR	204383	CallExpression	HT_GET_DATA_ADDR ( ht )		204093	1					
ANR	204384	Callee	HT_GET_DATA_ADDR		204093	0					
ANR	204385	Identifier	HT_GET_DATA_ADDR		204093	0					
ANR	204386	ArgumentList	ht		204093	1					
ANR	204387	Argument	ht		204093	0					
ANR	204388	Identifier	ht		204093	0					
ANR	204389	IdentifierDeclStatement	Bucket * old_buckets = ht -> arData ;	2256:3:59560:59592	204093	1	True				
ANR	204390	IdentifierDecl	* old_buckets = ht -> arData		204093	0					
ANR	204391	IdentifierDeclType	Bucket *		204093	0					
ANR	204392	Identifier	old_buckets		204093	1					
ANR	204393	AssignmentExpression	* old_buckets = ht -> arData		204093	2		=			
ANR	204394	Identifier	old_buckets		204093	0					
ANR	204395	PtrMemberAccess	ht -> arData		204093	1					
ANR	204396	Identifier	ht		204093	0					
ANR	204397	Identifier	arData		204093	1					
ANR	204398	ExpressionStatement	"new_data = pemalloc ( HT_SIZE_EX ( ht -> nTableSize , HT_MIN_MASK ) , ( ht -> u . flags & HASH_FLAG_PERSISTENT ) )"	2258:3:59598:59696	204093	2	True				
ANR	204399	AssignmentExpression	"new_data = pemalloc ( HT_SIZE_EX ( ht -> nTableSize , HT_MIN_MASK ) , ( ht -> u . flags & HASH_FLAG_PERSISTENT ) )"		204093	0		=			
ANR	204400	Identifier	new_data		204093	0					
ANR	204401	CallExpression	"pemalloc ( HT_SIZE_EX ( ht -> nTableSize , HT_MIN_MASK ) , ( ht -> u . flags & HASH_FLAG_PERSISTENT ) )"		204093	1					
ANR	204402	Callee	pemalloc		204093	0					
ANR	204403	Identifier	pemalloc		204093	0					
ANR	204404	ArgumentList	"HT_SIZE_EX ( ht -> nTableSize , HT_MIN_MASK )"		204093	1					
ANR	204405	Argument	"HT_SIZE_EX ( ht -> nTableSize , HT_MIN_MASK )"		204093	0					
ANR	204406	CallExpression	"HT_SIZE_EX ( ht -> nTableSize , HT_MIN_MASK )"		204093	0					
ANR	204407	Callee	HT_SIZE_EX		204093	0					
ANR	204408	Identifier	HT_SIZE_EX		204093	0					
ANR	204409	ArgumentList	ht -> nTableSize		204093	1					
ANR	204410	Argument	ht -> nTableSize		204093	0					
ANR	204411	PtrMemberAccess	ht -> nTableSize		204093	0					
ANR	204412	Identifier	ht		204093	0					
ANR	204413	Identifier	nTableSize		204093	1					
ANR	204414	Argument	HT_MIN_MASK		204093	1					
ANR	204415	Identifier	HT_MIN_MASK		204093	0					
ANR	204416	Argument	ht -> u . flags & HASH_FLAG_PERSISTENT		204093	1					
ANR	204417	BitAndExpression	ht -> u . flags & HASH_FLAG_PERSISTENT		204093	0		&			
ANR	204418	MemberAccess	ht -> u . flags		204093	0					
ANR	204419	PtrMemberAccess	ht -> u		204093	0					
ANR	204420	Identifier	ht		204093	0					
ANR	204421	Identifier	u		204093	1					
ANR	204422	Identifier	flags		204093	1					
ANR	204423	Identifier	HASH_FLAG_PERSISTENT		204093	1					
ANR	204424	ExpressionStatement	ht -> u . flags |= HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS	2259:3:59701:59756	204093	3	True				
ANR	204425	AssignmentExpression	ht -> u . flags |= HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS		204093	0		|=			
ANR	204426	MemberAccess	ht -> u . flags		204093	0					
ANR	204427	PtrMemberAccess	ht -> u		204093	0					
ANR	204428	Identifier	ht		204093	0					
ANR	204429	Identifier	u		204093	1					
ANR	204430	Identifier	flags		204093	1					
ANR	204431	InclusiveOrExpression	HASH_FLAG_PACKED | HASH_FLAG_STATIC_KEYS		204093	1		|			
ANR	204432	Identifier	HASH_FLAG_PACKED		204093	0					
ANR	204433	Identifier	HASH_FLAG_STATIC_KEYS		204093	1					
ANR	204434	ExpressionStatement	ht -> nTableMask = HT_MIN_MASK	2260:3:59761:59789	204093	4	True				
ANR	204435	AssignmentExpression	ht -> nTableMask = HT_MIN_MASK		204093	0		=			
ANR	204436	PtrMemberAccess	ht -> nTableMask		204093	0					
ANR	204437	Identifier	ht		204093	0					
ANR	204438	Identifier	nTableMask		204093	1					
ANR	204439	Identifier	HT_MIN_MASK		204093	1					
ANR	204440	ExpressionStatement	"HT_SET_DATA_ADDR ( ht , new_data )"	2261:3:59794:59824	204093	5	True				
ANR	204441	CallExpression	"HT_SET_DATA_ADDR ( ht , new_data )"		204093	0					
ANR	204442	Callee	HT_SET_DATA_ADDR		204093	0					
ANR	204443	Identifier	HT_SET_DATA_ADDR		204093	0					
ANR	204444	ArgumentList	ht		204093	1					
ANR	204445	Argument	ht		204093	0					
ANR	204446	Identifier	ht		204093	0					
ANR	204447	Argument	new_data		204093	1					
ANR	204448	Identifier	new_data		204093	0					
ANR	204449	ExpressionStatement	"memcpy ( ht -> arData , old_buckets , sizeof ( Bucket ) * ht -> nNumUsed )"	2262:3:59829:59891	204093	6	True				
ANR	204450	CallExpression	"memcpy ( ht -> arData , old_buckets , sizeof ( Bucket ) * ht -> nNumUsed )"		204093	0					
ANR	204451	Callee	memcpy		204093	0					
ANR	204452	Identifier	memcpy		204093	0					
ANR	204453	ArgumentList	ht -> arData		204093	1					
ANR	204454	Argument	ht -> arData		204093	0					
ANR	204455	PtrMemberAccess	ht -> arData		204093	0					
ANR	204456	Identifier	ht		204093	0					
ANR	204457	Identifier	arData		204093	1					
ANR	204458	Argument	old_buckets		204093	1					
ANR	204459	Identifier	old_buckets		204093	0					
ANR	204460	Argument	sizeof ( Bucket ) * ht -> nNumUsed		204093	2					
ANR	204461	MultiplicativeExpression	sizeof ( Bucket ) * ht -> nNumUsed		204093	0		*			
ANR	204462	SizeofExpression	sizeof ( Bucket )		204093	0					
ANR	204463	Sizeof	sizeof		204093	0					
ANR	204464	SizeofOperand	Bucket		204093	1					
ANR	204465	PtrMemberAccess	ht -> nNumUsed		204093	1					
ANR	204466	Identifier	ht		204093	0					
ANR	204467	Identifier	nNumUsed		204093	1					
ANR	204468	ExpressionStatement	"pefree ( old_data , ht -> u . flags & HASH_FLAG_PERSISTENT & HASH_FLAG_PERSISTENT )"	2263:3:59896:59971	204093	7	True				
ANR	204469	CallExpression	"pefree ( old_data , ht -> u . flags & HASH_FLAG_PERSISTENT & HASH_FLAG_PERSISTENT )"		204093	0					
ANR	204470	Callee	pefree		204093	0					
ANR	204471	Identifier	pefree		204093	0					
ANR	204472	ArgumentList	old_data		204093	1					
ANR	204473	Argument	old_data		204093	0					
ANR	204474	Identifier	old_data		204093	0					
ANR	204475	Argument	ht -> u . flags & HASH_FLAG_PERSISTENT & HASH_FLAG_PERSISTENT		204093	1					
ANR	204476	BitAndExpression	ht -> u . flags & HASH_FLAG_PERSISTENT & HASH_FLAG_PERSISTENT		204093	0		&			
ANR	204477	MemberAccess	ht -> u . flags		204093	0					
ANR	204478	PtrMemberAccess	ht -> u		204093	0					
ANR	204479	Identifier	ht		204093	0					
ANR	204480	Identifier	u		204093	1					
ANR	204481	Identifier	flags		204093	1					
ANR	204482	BitAndExpression	HASH_FLAG_PERSISTENT & HASH_FLAG_PERSISTENT		204093	1		&			
ANR	204483	Identifier	HASH_FLAG_PERSISTENT		204093	0					
ANR	204484	Identifier	HASH_FLAG_PERSISTENT		204093	1					
ANR	204485	ExpressionStatement	HT_HASH_RESET_PACKED ( ht )	2264:3:59976:60000	204093	8	True				
ANR	204486	CallExpression	HT_HASH_RESET_PACKED ( ht )		204093	0					
ANR	204487	Callee	HT_HASH_RESET_PACKED		204093	0					
ANR	204488	Identifier	HT_HASH_RESET_PACKED		204093	0					
ANR	204489	ArgumentList	ht		204093	1					
ANR	204490	Argument	ht		204093	0					
ANR	204491	Identifier	ht		204093	0					
ANR	204492	ElseStatement	else		204093	0					
ANR	204493	CompoundStatement		61:9:1576:1576	204093	0					
ANR	204494	ExpressionStatement	zend_hash_rehash ( ht )	2266:3:60016:60036	204093	0	True				
ANR	204495	CallExpression	zend_hash_rehash ( ht )		204093	0					
ANR	204496	Callee	zend_hash_rehash		204093	0					
ANR	204497	Identifier	zend_hash_rehash		204093	0					
ANR	204498	ArgumentList	ht		204093	1					
ANR	204499	Argument	ht		204093	0					
ANR	204500	Identifier	ht		204093	0					
ANR	204501	ExpressionStatement	HANDLE_UNBLOCK_INTERRUPTIONS ( )	2270:1:60047:60077	204093	12	True				
ANR	204502	CallExpression	HANDLE_UNBLOCK_INTERRUPTIONS ( )		204093	0					
ANR	204503	Callee	HANDLE_UNBLOCK_INTERRUPTIONS		204093	0					
ANR	204504	Identifier	HANDLE_UNBLOCK_INTERRUPTIONS		204093	0					
ANR	204505	ArgumentList			204093	1					
ANR	204506	ReturnStatement	return SUCCESS ;	2272:1:60081:60095	204093	13	True				
ANR	204507	Identifier	SUCCESS		204093	0					
ANR	204508	ReturnType	ZEND_API int ZEND_FASTCALL		204093	1					
ANR	204509	Identifier	zend_hash_sort_ex		204093	2					
ANR	204510	ParameterList	"HashTable * ht , sort_func_t sort , compare_func_t compar , zend_bool renumber"		204093	3					
ANR	204511	Parameter	HashTable * ht	2204:45:58358:58370	204093	0	True				
ANR	204512	ParameterType	HashTable *		204093	0					
ANR	204513	Identifier	ht		204093	1					
ANR	204514	Parameter	sort_func_t sort	2204:60:58373:58388	204093	1	True				
ANR	204515	ParameterType	sort_func_t		204093	0					
ANR	204516	Identifier	sort		204093	1					
ANR	204517	Parameter	compare_func_t compar	2204:78:58391:58411	204093	2	True				
ANR	204518	ParameterType	compare_func_t		204093	0					
ANR	204519	Identifier	compar		204093	1					
ANR	204520	Parameter	zend_bool renumber	2204:101:58414:58431	204093	3	True				
ANR	204521	ParameterType	zend_bool		204093	0					
ANR	204522	Identifier	renumber		204093	1					
ANR	204523	CFGEntryNode	ENTRY		204093		True				
ANR	204524	CFGExitNode	EXIT		204093		True				
ANR	204525	Symbol	HASH_FLAG_STATIC_KEYS		204093						
ANR	204526	Symbol	ht -> nTableMask		204093						
ANR	204527	Symbol	HASH_FLAG_PACKED		204093						
ANR	204528	Symbol	HT_MIN_MASK		204093						
ANR	204529	Symbol	renumber		204093						
ANR	204530	Symbol	ht -> u		204093						
ANR	204531	Symbol	ht -> arData		204093						
ANR	204532	Symbol	Z_TYPE		204093						
ANR	204533	Symbol	HT_SIZE_EX		204093						
ANR	204534	Symbol	ht -> u . flags		204093						
ANR	204535	Symbol	ht		204093						
ANR	204536	Symbol	UNEXPECTED		204093						
ANR	204537	Symbol	* ht		204093						
ANR	204538	Symbol	old_data		204093						
ANR	204539	Symbol	ht -> nTableSize		204093						
ANR	204540	Symbol	GC_REFCOUNT		204093						
ANR	204541	Symbol	ht -> nNumOfElements		204093						
ANR	204542	Symbol	IS_UNDEF		204093						
ANR	204543	Symbol	p -> h		204093						
ANR	204544	Symbol	ht -> nInternalPointer		204093						
ANR	204545	Symbol	SUCCESS		204093						
ANR	204546	Symbol	NULL		204093						
ANR	204547	Symbol	zend_hash_bucket_swap		204093						
ANR	204548	Symbol	i		204093						
ANR	204549	Symbol	zend_hash_bucket_renum_swap		204093						
ANR	204550	Symbol	ht -> nNextFreeElement		204093						
ANR	204551	Symbol	j		204093						
ANR	204552	Symbol	HT_GET_DATA_ADDR		204093						
ANR	204553	Symbol	sort		204093						
ANR	204554	Symbol	p -> val		204093						
ANR	204555	Symbol	zend_hash_bucket_packed_swap		204093						
ANR	204556	Symbol	* ht -> arData		204093						
ANR	204557	Symbol	p -> key		204093						
ANR	204558	Symbol	old_buckets		204093						
ANR	204559	Symbol	p		204093						
ANR	204560	Symbol	* i		204093						
ANR	204561	Symbol	HASH_FLAG_PERSISTENT		204093						
ANR	204562	Symbol	new_data		204093						
ANR	204563	Symbol	* p		204093						
ANR	204564	Symbol	* * ht		204093						
ANR	204565	Symbol	ht -> nNumUsed		204093						
ANR	204566	Symbol	compar		204093						
ANR	204567	Symbol	pemalloc		204093						
ANR	204568	Function	zend_hash_compare_impl	2275:0:60100:62045							
ANR	204569	FunctionDef	"zend_hash_compare_impl (HashTable * ht1 , HashTable * ht2 , compare_func_t compar , zend_bool ordered)"		204568	0					
ANR	204570	CompoundStatement		2275:127:60227:62045	204568	0					
ANR	204571	IdentifierDeclStatement	"uint32_t idx1 , idx2 ;"	2276:1:60230:60249	204568	0	True				
ANR	204572	IdentifierDecl	idx1		204568	0					
ANR	204573	IdentifierDeclType	uint32_t		204568	0					
ANR	204574	Identifier	idx1		204568	1					
ANR	204575	IdentifierDecl	idx2		204568	1					
ANR	204576	IdentifierDeclType	uint32_t		204568	0					
ANR	204577	Identifier	idx2		204568	1					
ANR	204578	IfStatement	if ( ht1 -> nNumOfElements != ht2 -> nNumOfElements )		204568	1					
ANR	204579	Condition	ht1 -> nNumOfElements != ht2 -> nNumOfElements	2278:5:60257:60298	204568	0	True				
ANR	204580	EqualityExpression	ht1 -> nNumOfElements != ht2 -> nNumOfElements		204568	0		!=			
ANR	204581	PtrMemberAccess	ht1 -> nNumOfElements		204568	0					
ANR	204582	Identifier	ht1		204568	0					
ANR	204583	Identifier	nNumOfElements		204568	1					
ANR	204584	PtrMemberAccess	ht2 -> nNumOfElements		204568	1					
ANR	204585	Identifier	ht2		204568	0					
ANR	204586	Identifier	nNumOfElements		204568	1					
ANR	204587	CompoundStatement		4:49:73:73	204568	1					
ANR	204588	ReturnStatement	return ht1 -> nNumOfElements > ht2 -> nNumOfElements ? 1 : - 1 ;	2279:2:60305:60362	204568	0	True				
ANR	204589	ConditionalExpression	ht1 -> nNumOfElements > ht2 -> nNumOfElements ? 1 : - 1		204568	0					
ANR	204590	Condition	ht1 -> nNumOfElements > ht2 -> nNumOfElements		204568	0					
ANR	204591	RelationalExpression	ht1 -> nNumOfElements > ht2 -> nNumOfElements		204568	0		>			
ANR	204592	PtrMemberAccess	ht1 -> nNumOfElements		204568	0					
ANR	204593	Identifier	ht1		204568	0					
ANR	204594	Identifier	nNumOfElements		204568	1					
ANR	204595	PtrMemberAccess	ht2 -> nNumOfElements		204568	1					
ANR	204596	Identifier	ht2		204568	0					
ANR	204597	Identifier	nNumOfElements		204568	1					
ANR	204598	PrimaryExpression	1		204568	1					
ANR	204599	UnaryOperationExpression	- 1		204568	2					
ANR	204600	UnaryOperator	-		204568	0					
ANR	204601	PrimaryExpression	1		204568	1					
ANR	204602	ForStatement	"for ( idx1 = 0 , idx2 = 0 ; idx1 < ht1 -> nNumUsed ; idx1 ++ )"		204568	2					
ANR	204603	ForInit	"idx1 = 0 , idx2 = 0 ;"	2282:6:60374:60392	204568	0	True				
ANR	204604	Expression	"idx1 = 0 , idx2 = 0"		204568	0					
ANR	204605	AssignmentExpression	idx1 = 0		204568	0		=			
ANR	204606	Identifier	idx1		204568	0					
ANR	204607	PrimaryExpression	0		204568	1					
ANR	204608	AssignmentExpression	idx2 = 0		204568	1		=			
ANR	204609	Identifier	idx2		204568	0					
ANR	204610	PrimaryExpression	0		204568	1					
ANR	204611	Condition	idx1 < ht1 -> nNumUsed	2282:26:60394:60413	204568	1	True				
ANR	204612	RelationalExpression	idx1 < ht1 -> nNumUsed		204568	0		<			
ANR	204613	Identifier	idx1		204568	0					
ANR	204614	PtrMemberAccess	ht1 -> nNumUsed		204568	1					
ANR	204615	Identifier	ht1		204568	0					
ANR	204616	Identifier	nNumUsed		204568	1					
ANR	204617	PostIncDecOperationExpression	idx1 ++	2282:48:60416:60421	204568	2	True				
ANR	204618	Identifier	idx1		204568	0					
ANR	204619	IncDec	++		204568	1					
ANR	204620	CompoundStatement		11:2:265:275	204568	3					
ANR	204621	IdentifierDeclStatement	"Bucket * p1 = ht1 -> arData + idx1 , * p2 ;"	2283:2:60428:60464	204568	0	True				
ANR	204622	IdentifierDecl	* p1 = ht1 -> arData + idx1		204568	0					
ANR	204623	IdentifierDeclType	Bucket *		204568	0					
ANR	204624	Identifier	p1		204568	1					
ANR	204625	AssignmentExpression	* p1 = ht1 -> arData + idx1		204568	2		=			
ANR	204626	Identifier	p1		204568	0					
ANR	204627	AdditiveExpression	ht1 -> arData + idx1		204568	1		+			
ANR	204628	PtrMemberAccess	ht1 -> arData		204568	0					
ANR	204629	Identifier	ht1		204568	0					
ANR	204630	Identifier	arData		204568	1					
ANR	204631	Identifier	idx1		204568	1					
ANR	204632	IdentifierDecl	* p2		204568	1					
ANR	204633	IdentifierDeclType	Bucket *		204568	0					
ANR	204634	Identifier	p2		204568	1					
ANR	204635	IdentifierDeclStatement	"zval * pData1 , * pData2 ;"	2284:2:60468:60489	204568	1	True				
ANR	204636	IdentifierDecl	* pData1		204568	0					
ANR	204637	IdentifierDeclType	zval *		204568	0					
ANR	204638	Identifier	pData1		204568	1					
ANR	204639	IdentifierDecl	* pData2		204568	1					
ANR	204640	IdentifierDeclType	zval *		204568	0					
ANR	204641	Identifier	pData2		204568	1					
ANR	204642	IdentifierDeclStatement	int result ;	2285:2:60493:60503	204568	2	True				
ANR	204643	IdentifierDecl	result		204568	0					
ANR	204644	IdentifierDeclType	int		204568	0					
ANR	204645	Identifier	result		204568	1					
ANR	204646	IfStatement	if ( Z_TYPE ( p1 -> val ) == IS_UNDEF )		204568	3					
ANR	204647	Condition	Z_TYPE ( p1 -> val ) == IS_UNDEF	2287:6:60512:60538	204568	0	True				
ANR	204648	EqualityExpression	Z_TYPE ( p1 -> val ) == IS_UNDEF		204568	0		==			
ANR	204649	CallExpression	Z_TYPE ( p1 -> val )		204568	0					
ANR	204650	Callee	Z_TYPE		204568	0					
ANR	204651	Identifier	Z_TYPE		204568	0					
ANR	204652	ArgumentList	p1 -> val		204568	1					
ANR	204653	Argument	p1 -> val		204568	0					
ANR	204654	PtrMemberAccess	p1 -> val		204568	0					
ANR	204655	Identifier	p1		204568	0					
ANR	204656	Identifier	val		204568	1					
ANR	204657	Identifier	IS_UNDEF		204568	1					
ANR	204658	ContinueStatement	continue ;	2287:35:60541:60549	204568	1	True				
ANR	204659	IfStatement	if ( ordered )		204568	4					
ANR	204660	Condition	ordered	2288:6:60557:60563	204568	0	True				
ANR	204661	Identifier	ordered		204568	0					
ANR	204662	CompoundStatement		14:15:338:338	204568	1					
ANR	204663	WhileStatement	while ( 1 )		204568	0					
ANR	204664	Condition	1	2289:10:60578:60578	204568	0	True				
ANR	204665	PrimaryExpression	1		204568	0					
ANR	204666	CompoundStatement		15:13:353:353	204568	1					
ANR	204667	ExpressionStatement	ZEND_ASSERT ( idx2 != ht2 -> nNumUsed )	2290:4:60587:60621	204568	0	True				
ANR	204668	CallExpression	ZEND_ASSERT ( idx2 != ht2 -> nNumUsed )		204568	0					
ANR	204669	Callee	ZEND_ASSERT		204568	0					
ANR	204670	Identifier	ZEND_ASSERT		204568	0					
ANR	204671	ArgumentList	idx2 != ht2 -> nNumUsed		204568	1					
ANR	204672	Argument	idx2 != ht2 -> nNumUsed		204568	0					
ANR	204673	EqualityExpression	idx2 != ht2 -> nNumUsed		204568	0		!=			
ANR	204674	Identifier	idx2		204568	0					
ANR	204675	PtrMemberAccess	ht2 -> nNumUsed		204568	1					
ANR	204676	Identifier	ht2		204568	0					
ANR	204677	Identifier	nNumUsed		204568	1					
ANR	204678	ExpressionStatement	p2 = ht2 -> arData + idx2	2291:4:60627:60650	204568	1	True				
ANR	204679	AssignmentExpression	p2 = ht2 -> arData + idx2		204568	0		=			
ANR	204680	Identifier	p2		204568	0					
ANR	204681	AdditiveExpression	ht2 -> arData + idx2		204568	1		+			
ANR	204682	PtrMemberAccess	ht2 -> arData		204568	0					
ANR	204683	Identifier	ht2		204568	0					
ANR	204684	Identifier	arData		204568	1					
ANR	204685	Identifier	idx2		204568	1					
ANR	204686	IfStatement	if ( Z_TYPE ( p2 -> val ) != IS_UNDEF )		204568	2					
ANR	204687	Condition	Z_TYPE ( p2 -> val ) != IS_UNDEF	2292:8:60660:60686	204568	0	True				
ANR	204688	EqualityExpression	Z_TYPE ( p2 -> val ) != IS_UNDEF		204568	0		!=			
ANR	204689	CallExpression	Z_TYPE ( p2 -> val )		204568	0					
ANR	204690	Callee	Z_TYPE		204568	0					
ANR	204691	Identifier	Z_TYPE		204568	0					
ANR	204692	ArgumentList	p2 -> val		204568	1					
ANR	204693	Argument	p2 -> val		204568	0					
ANR	204694	PtrMemberAccess	p2 -> val		204568	0					
ANR	204695	Identifier	p2		204568	0					
ANR	204696	Identifier	val		204568	1					
ANR	204697	Identifier	IS_UNDEF		204568	1					
ANR	204698	BreakStatement	break ;	2292:37:60689:60694	204568	1	True				
ANR	204699	ExpressionStatement	idx2 ++	2293:4:60700:60706	204568	3	True				
ANR	204700	PostIncDecOperationExpression	idx2 ++		204568	0					
ANR	204701	Identifier	idx2		204568	0					
ANR	204702	IncDec	++		204568	1					
ANR	204703	IfStatement	if ( p1 -> key == NULL && p2 -> key == NULL )		204568	1					
ANR	204704	Condition	p1 -> key == NULL && p2 -> key == NULL	2295:7:60720:60753	204568	0	True				
ANR	204705	AndExpression	p1 -> key == NULL && p2 -> key == NULL		204568	0		&&			
ANR	204706	EqualityExpression	p1 -> key == NULL		204568	0		==			
ANR	204707	PtrMemberAccess	p1 -> key		204568	0					
ANR	204708	Identifier	p1		204568	0					
ANR	204709	Identifier	key		204568	1					
ANR	204710	Identifier	NULL		204568	1					
ANR	204711	EqualityExpression	p2 -> key == NULL		204568	1		==			
ANR	204712	PtrMemberAccess	p2 -> key		204568	0					
ANR	204713	Identifier	p2		204568	0					
ANR	204714	Identifier	key		204568	1					
ANR	204715	Identifier	NULL		204568	1					
ANR	204716	CompoundStatement		21:43:528:528	204568	1					
ANR	204717	IfStatement	if ( p1 -> h != p2 -> h )		204568	0					
ANR	204718	Condition	p1 -> h != p2 -> h	2296:8:60788:60801	204568	0	True				
ANR	204719	EqualityExpression	p1 -> h != p2 -> h		204568	0		!=			
ANR	204720	PtrMemberAccess	p1 -> h		204568	0					
ANR	204721	Identifier	p1		204568	0					
ANR	204722	Identifier	h		204568	1					
ANR	204723	PtrMemberAccess	p2 -> h		204568	1					
ANR	204724	Identifier	p2		204568	0					
ANR	204725	Identifier	h		204568	1					
ANR	204726	CompoundStatement		22:24:576:576	204568	1					
ANR	204727	ReturnStatement	return p1 -> h > p2 -> h ? 1 : - 1 ;	2297:5:60811:60840	204568	0	True				
ANR	204728	ConditionalExpression	p1 -> h > p2 -> h ? 1 : - 1		204568	0					
ANR	204729	Condition	p1 -> h > p2 -> h		204568	0					
ANR	204730	RelationalExpression	p1 -> h > p2 -> h		204568	0		>			
ANR	204731	PtrMemberAccess	p1 -> h		204568	0					
ANR	204732	Identifier	p1		204568	0					
ANR	204733	Identifier	h		204568	1					
ANR	204734	PtrMemberAccess	p2 -> h		204568	1					
ANR	204735	Identifier	p2		204568	0					
ANR	204736	Identifier	h		204568	1					
ANR	204737	PrimaryExpression	1		204568	1					
ANR	204738	UnaryOperationExpression	- 1		204568	2					
ANR	204739	UnaryOperator	-		204568	0					
ANR	204740	PrimaryExpression	1		204568	1					
ANR	204741	ElseStatement	else		204568	0					
ANR	204742	IfStatement	if ( p1 -> key != NULL && p2 -> key != NULL )		204568	0					
ANR	204743	Condition	p1 -> key != NULL && p2 -> key != NULL	2299:14:60862:60895	204568	0	True				
ANR	204744	AndExpression	p1 -> key != NULL && p2 -> key != NULL		204568	0		&&			
ANR	204745	EqualityExpression	p1 -> key != NULL		204568	0		!=			
ANR	204746	PtrMemberAccess	p1 -> key		204568	0					
ANR	204747	Identifier	p1		204568	0					
ANR	204748	Identifier	key		204568	1					
ANR	204749	Identifier	NULL		204568	1					
ANR	204750	EqualityExpression	p2 -> key != NULL		204568	1		!=			
ANR	204751	PtrMemberAccess	p2 -> key		204568	0					
ANR	204752	Identifier	p2		204568	0					
ANR	204753	Identifier	key		204568	1					
ANR	204754	Identifier	NULL		204568	1					
ANR	204755	CompoundStatement		25:50:670:670	204568	1					
ANR	204756	IfStatement	if ( ZSTR_LEN ( p1 -> key ) != ZSTR_LEN ( p2 -> key ) )		204568	0					
ANR	204757	Condition	ZSTR_LEN ( p1 -> key ) != ZSTR_LEN ( p2 -> key )	2300:8:60929:60966	204568	0	True				
ANR	204758	EqualityExpression	ZSTR_LEN ( p1 -> key ) != ZSTR_LEN ( p2 -> key )		204568	0		!=			
ANR	204759	CallExpression	ZSTR_LEN ( p1 -> key )		204568	0					
ANR	204760	Callee	ZSTR_LEN		204568	0					
ANR	204761	Identifier	ZSTR_LEN		204568	0					
ANR	204762	ArgumentList	p1 -> key		204568	1					
ANR	204763	Argument	p1 -> key		204568	0					
ANR	204764	PtrMemberAccess	p1 -> key		204568	0					
ANR	204765	Identifier	p1		204568	0					
ANR	204766	Identifier	key		204568	1					
ANR	204767	CallExpression	ZSTR_LEN ( p2 -> key )		204568	1					
ANR	204768	Callee	ZSTR_LEN		204568	0					
ANR	204769	Identifier	ZSTR_LEN		204568	0					
ANR	204770	ArgumentList	p2 -> key		204568	1					
ANR	204771	Argument	p2 -> key		204568	0					
ANR	204772	PtrMemberAccess	p2 -> key		204568	0					
ANR	204773	Identifier	p2		204568	0					
ANR	204774	Identifier	key		204568	1					
ANR	204775	CompoundStatement		26:48:741:741	204568	1					
ANR	204776	ReturnStatement	return ZSTR_LEN ( p1 -> key ) > ZSTR_LEN ( p2 -> key ) ? 1 : - 1 ;	2301:5:60976:61029	204568	0	True				
ANR	204777	ConditionalExpression	ZSTR_LEN ( p1 -> key ) > ZSTR_LEN ( p2 -> key ) ? 1 : - 1		204568	0					
ANR	204778	Condition	ZSTR_LEN ( p1 -> key ) > ZSTR_LEN ( p2 -> key )		204568	0					
ANR	204779	RelationalExpression	ZSTR_LEN ( p1 -> key ) > ZSTR_LEN ( p2 -> key )		204568	0		>			
ANR	204780	CallExpression	ZSTR_LEN ( p1 -> key )		204568	0					
ANR	204781	Callee	ZSTR_LEN		204568	0					
ANR	204782	Identifier	ZSTR_LEN		204568	0					
ANR	204783	ArgumentList	p1 -> key		204568	1					
ANR	204784	Argument	p1 -> key		204568	0					
ANR	204785	PtrMemberAccess	p1 -> key		204568	0					
ANR	204786	Identifier	p1		204568	0					
ANR	204787	Identifier	key		204568	1					
ANR	204788	CallExpression	ZSTR_LEN ( p2 -> key )		204568	1					
ANR	204789	Callee	ZSTR_LEN		204568	0					
ANR	204790	Identifier	ZSTR_LEN		204568	0					
ANR	204791	ArgumentList	p2 -> key		204568	1					
ANR	204792	Argument	p2 -> key		204568	0					
ANR	204793	PtrMemberAccess	p2 -> key		204568	0					
ANR	204794	Identifier	p2		204568	0					
ANR	204795	Identifier	key		204568	1					
ANR	204796	PrimaryExpression	1		204568	1					
ANR	204797	UnaryOperationExpression	- 1		204568	2					
ANR	204798	UnaryOperator	-		204568	0					
ANR	204799	PrimaryExpression	1		204568	1					
ANR	204800	ExpressionStatement	"result = memcmp ( ZSTR_VAL ( p1 -> key ) , ZSTR_VAL ( p2 -> key ) , ZSTR_LEN ( p1 -> key ) )"	2304:4:61042:61114	204568	1	True				
ANR	204801	AssignmentExpression	"result = memcmp ( ZSTR_VAL ( p1 -> key ) , ZSTR_VAL ( p2 -> key ) , ZSTR_LEN ( p1 -> key ) )"		204568	0		=			
ANR	204802	Identifier	result		204568	0					
ANR	204803	CallExpression	"memcmp ( ZSTR_VAL ( p1 -> key ) , ZSTR_VAL ( p2 -> key ) , ZSTR_LEN ( p1 -> key ) )"		204568	1					
ANR	204804	Callee	memcmp		204568	0					
ANR	204805	Identifier	memcmp		204568	0					
ANR	204806	ArgumentList	ZSTR_VAL ( p1 -> key )		204568	1					
ANR	204807	Argument	ZSTR_VAL ( p1 -> key )		204568	0					
ANR	204808	CallExpression	ZSTR_VAL ( p1 -> key )		204568	0					
ANR	204809	Callee	ZSTR_VAL		204568	0					
ANR	204810	Identifier	ZSTR_VAL		204568	0					
ANR	204811	ArgumentList	p1 -> key		204568	1					
ANR	204812	Argument	p1 -> key		204568	0					
ANR	204813	PtrMemberAccess	p1 -> key		204568	0					
ANR	204814	Identifier	p1		204568	0					
ANR	204815	Identifier	key		204568	1					
ANR	204816	Argument	ZSTR_VAL ( p2 -> key )		204568	1					
ANR	204817	CallExpression	ZSTR_VAL ( p2 -> key )		204568	0					
ANR	204818	Callee	ZSTR_VAL		204568	0					
ANR	204819	Identifier	ZSTR_VAL		204568	0					
ANR	204820	ArgumentList	p2 -> key		204568	1					
ANR	204821	Argument	p2 -> key		204568	0					
ANR	204822	PtrMemberAccess	p2 -> key		204568	0					
ANR	204823	Identifier	p2		204568	0					
ANR	204824	Identifier	key		204568	1					
ANR	204825	Argument	ZSTR_LEN ( p1 -> key )		204568	2					
ANR	204826	CallExpression	ZSTR_LEN ( p1 -> key )		204568	0					
ANR	204827	Callee	ZSTR_LEN		204568	0					
ANR	204828	Identifier	ZSTR_LEN		204568	0					
ANR	204829	ArgumentList	p1 -> key		204568	1					
ANR	204830	Argument	p1 -> key		204568	0					
ANR	204831	PtrMemberAccess	p1 -> key		204568	0					
ANR	204832	Identifier	p1		204568	0					
ANR	204833	Identifier	key		204568	1					
ANR	204834	IfStatement	if ( result != 0 )		204568	2					
ANR	204835	Condition	result != 0	2305:8:61124:61134	204568	0	True				
ANR	204836	EqualityExpression	result != 0		204568	0		!=			
ANR	204837	Identifier	result		204568	0					
ANR	204838	PrimaryExpression	0		204568	1					
ANR	204839	CompoundStatement		31:21:909:909	204568	1					
ANR	204840	ReturnStatement	return result ;	2306:5:61144:61157	204568	0	True				
ANR	204841	Identifier	result		204568	0					
ANR	204842	ElseStatement	else		204568	0					
ANR	204843	CompoundStatement		34:10:947:947	204568	0					
ANR	204844	ReturnStatement	return p1 -> key != NULL ? 1 : - 1 ;	2310:4:61245:61276	204568	0	True				
ANR	204845	ConditionalExpression	p1 -> key != NULL ? 1 : - 1		204568	0					
ANR	204846	Condition	p1 -> key != NULL		204568	0					
ANR	204847	EqualityExpression	p1 -> key != NULL		204568	0		!=			
ANR	204848	PtrMemberAccess	p1 -> key		204568	0					
ANR	204849	Identifier	p1		204568	0					
ANR	204850	Identifier	key		204568	1					
ANR	204851	Identifier	NULL		204568	1					
ANR	204852	PrimaryExpression	1		204568	1					
ANR	204853	UnaryOperationExpression	- 1		204568	2					
ANR	204854	UnaryOperator	-		204568	0					
ANR	204855	PrimaryExpression	1		204568	1					
ANR	204856	ExpressionStatement	pData2 = & p2 -> val	2312:3:61286:61303	204568	2	True				
ANR	204857	AssignmentExpression	pData2 = & p2 -> val		204568	0		=			
ANR	204858	Identifier	pData2		204568	0					
ANR	204859	UnaryOperationExpression	& p2 -> val		204568	1					
ANR	204860	UnaryOperator	&		204568	0					
ANR	204861	PtrMemberAccess	p2 -> val		204568	1					
ANR	204862	Identifier	p2		204568	0					
ANR	204863	Identifier	val		204568	1					
ANR	204864	ExpressionStatement	idx2 ++	2313:3:61308:61314	204568	3	True				
ANR	204865	PostIncDecOperationExpression	idx2 ++		204568	0					
ANR	204866	Identifier	idx2		204568	0					
ANR	204867	IncDec	++		204568	1					
ANR	204868	ElseStatement	else		204568	0					
ANR	204869	CompoundStatement		40:9:1097:1097	204568	0					
ANR	204870	IfStatement	if ( p1 -> key == NULL )		204568	0					
ANR	204871	Condition	p1 -> key == NULL	2315:7:61334:61348	204568	0	True				
ANR	204872	EqualityExpression	p1 -> key == NULL		204568	0		==			
ANR	204873	PtrMemberAccess	p1 -> key		204568	0					
ANR	204874	Identifier	p1		204568	0					
ANR	204875	Identifier	key		204568	1					
ANR	204876	Identifier	NULL		204568	1					
ANR	204877	CompoundStatement		41:24:1123:1123	204568	1					
ANR	204878	ExpressionStatement	"pData2 = zend_hash_index_find ( ht2 , p1 -> h )"	2316:4:61377:61418	204568	0	True				
ANR	204879	AssignmentExpression	"pData2 = zend_hash_index_find ( ht2 , p1 -> h )"		204568	0		=			
ANR	204880	Identifier	pData2		204568	0					
ANR	204881	CallExpression	"zend_hash_index_find ( ht2 , p1 -> h )"		204568	1					
ANR	204882	Callee	zend_hash_index_find		204568	0					
ANR	204883	Identifier	zend_hash_index_find		204568	0					
ANR	204884	ArgumentList	ht2		204568	1					
ANR	204885	Argument	ht2		204568	0					
ANR	204886	Identifier	ht2		204568	0					
ANR	204887	Argument	p1 -> h		204568	1					
ANR	204888	PtrMemberAccess	p1 -> h		204568	0					
ANR	204889	Identifier	p1		204568	0					
ANR	204890	Identifier	h		204568	1					
ANR	204891	IfStatement	if ( pData2 == NULL )		204568	1					
ANR	204892	Condition	pData2 == NULL	2317:8:61428:61441	204568	0	True				
ANR	204893	EqualityExpression	pData2 == NULL		204568	0		==			
ANR	204894	Identifier	pData2		204568	0					
ANR	204895	Identifier	NULL		204568	1					
ANR	204896	CompoundStatement		43:24:1216:1216	204568	1					
ANR	204897	ReturnStatement	return 1 ;	2318:5:61451:61459	204568	0	True				
ANR	204898	PrimaryExpression	1		204568	0					
ANR	204899	ElseStatement	else		204568	0					
ANR	204900	CompoundStatement		46:10:1249:1249	204568	0					
ANR	204901	ExpressionStatement	"pData2 = zend_hash_find ( ht2 , p1 -> key )"	2321:4:61502:61539	204568	0	True				
ANR	204902	AssignmentExpression	"pData2 = zend_hash_find ( ht2 , p1 -> key )"		204568	0		=			
ANR	204903	Identifier	pData2		204568	0					
ANR	204904	CallExpression	"zend_hash_find ( ht2 , p1 -> key )"		204568	1					
ANR	204905	Callee	zend_hash_find		204568	0					
ANR	204906	Identifier	zend_hash_find		204568	0					
ANR	204907	ArgumentList	ht2		204568	1					
ANR	204908	Argument	ht2		204568	0					
ANR	204909	Identifier	ht2		204568	0					
ANR	204910	Argument	p1 -> key		204568	1					
ANR	204911	PtrMemberAccess	p1 -> key		204568	0					
ANR	204912	Identifier	p1		204568	0					
ANR	204913	Identifier	key		204568	1					
ANR	204914	IfStatement	if ( pData2 == NULL )		204568	1					
ANR	204915	Condition	pData2 == NULL	2322:8:61549:61562	204568	0	True				
ANR	204916	EqualityExpression	pData2 == NULL		204568	0		==			
ANR	204917	Identifier	pData2		204568	0					
ANR	204918	Identifier	NULL		204568	1					
ANR	204919	CompoundStatement		48:24:1337:1337	204568	1					
ANR	204920	ReturnStatement	return 1 ;	2323:5:61572:61580	204568	0	True				
ANR	204921	PrimaryExpression	1		204568	0					
ANR	204922	ExpressionStatement	pData1 = & p1 -> val	2328:2:61600:61617	204568	5	True				
ANR	204923	AssignmentExpression	pData1 = & p1 -> val		204568	0		=			
ANR	204924	Identifier	pData1		204568	0					
ANR	204925	UnaryOperationExpression	& p1 -> val		204568	1					
ANR	204926	UnaryOperator	&		204568	0					
ANR	204927	PtrMemberAccess	p1 -> val		204568	1					
ANR	204928	Identifier	p1		204568	0					
ANR	204929	Identifier	val		204568	1					
ANR	204930	IfStatement	if ( Z_TYPE_P ( pData1 ) == IS_INDIRECT )		204568	6					
ANR	204931	Condition	Z_TYPE_P ( pData1 ) == IS_INDIRECT	2329:6:61625:61655	204568	0	True				
ANR	204932	EqualityExpression	Z_TYPE_P ( pData1 ) == IS_INDIRECT		204568	0		==			
ANR	204933	CallExpression	Z_TYPE_P ( pData1 )		204568	0					
ANR	204934	Callee	Z_TYPE_P		204568	0					
ANR	204935	Identifier	Z_TYPE_P		204568	0					
ANR	204936	ArgumentList	pData1		204568	1					
ANR	204937	Argument	pData1		204568	0					
ANR	204938	Identifier	pData1		204568	0					
ANR	204939	Identifier	IS_INDIRECT		204568	1					
ANR	204940	CompoundStatement		55:39:1430:1430	204568	1					
ANR	204941	ExpressionStatement	pData1 = Z_INDIRECT_P ( pData1 )	2330:3:61663:61692	204568	0	True				
ANR	204942	AssignmentExpression	pData1 = Z_INDIRECT_P ( pData1 )		204568	0		=			
ANR	204943	Identifier	pData1		204568	0					
ANR	204944	CallExpression	Z_INDIRECT_P ( pData1 )		204568	1					
ANR	204945	Callee	Z_INDIRECT_P		204568	0					
ANR	204946	Identifier	Z_INDIRECT_P		204568	0					
ANR	204947	ArgumentList	pData1		204568	1					
ANR	204948	Argument	pData1		204568	0					
ANR	204949	Identifier	pData1		204568	0					
ANR	204950	IfStatement	if ( Z_TYPE_P ( pData2 ) == IS_INDIRECT )		204568	7					
ANR	204951	Condition	Z_TYPE_P ( pData2 ) == IS_INDIRECT	2332:6:61704:61734	204568	0	True				
ANR	204952	EqualityExpression	Z_TYPE_P ( pData2 ) == IS_INDIRECT		204568	0		==			
ANR	204953	CallExpression	Z_TYPE_P ( pData2 )		204568	0					
ANR	204954	Callee	Z_TYPE_P		204568	0					
ANR	204955	Identifier	Z_TYPE_P		204568	0					
ANR	204956	ArgumentList	pData2		204568	1					
ANR	204957	Argument	pData2		204568	0					
ANR	204958	Identifier	pData2		204568	0					
ANR	204959	Identifier	IS_INDIRECT		204568	1					
ANR	204960	CompoundStatement		58:39:1509:1509	204568	1					
ANR	204961	ExpressionStatement	pData2 = Z_INDIRECT_P ( pData2 )	2333:3:61742:61771	204568	0	True				
ANR	204962	AssignmentExpression	pData2 = Z_INDIRECT_P ( pData2 )		204568	0		=			
ANR	204963	Identifier	pData2		204568	0					
ANR	204964	CallExpression	Z_INDIRECT_P ( pData2 )		204568	1					
ANR	204965	Callee	Z_INDIRECT_P		204568	0					
ANR	204966	Identifier	Z_INDIRECT_P		204568	0					
ANR	204967	ArgumentList	pData2		204568	1					
ANR	204968	Argument	pData2		204568	0					
ANR	204969	Identifier	pData2		204568	0					
ANR	204970	IfStatement	if ( Z_TYPE_P ( pData1 ) == IS_UNDEF )		204568	8					
ANR	204971	Condition	Z_TYPE_P ( pData1 ) == IS_UNDEF	2336:6:61784:61811	204568	0	True				
ANR	204972	EqualityExpression	Z_TYPE_P ( pData1 ) == IS_UNDEF		204568	0		==			
ANR	204973	CallExpression	Z_TYPE_P ( pData1 )		204568	0					
ANR	204974	Callee	Z_TYPE_P		204568	0					
ANR	204975	Identifier	Z_TYPE_P		204568	0					
ANR	204976	ArgumentList	pData1		204568	1					
ANR	204977	Argument	pData1		204568	0					
ANR	204978	Identifier	pData1		204568	0					
ANR	204979	Identifier	IS_UNDEF		204568	1					
ANR	204980	CompoundStatement		62:36:1586:1586	204568	1					
ANR	204981	IfStatement	if ( Z_TYPE_P ( pData2 ) != IS_UNDEF )		204568	0					
ANR	204982	Condition	Z_TYPE_P ( pData2 ) != IS_UNDEF	2337:7:61823:61850	204568	0	True				
ANR	204983	EqualityExpression	Z_TYPE_P ( pData2 ) != IS_UNDEF		204568	0		!=			
ANR	204984	CallExpression	Z_TYPE_P ( pData2 )		204568	0					
ANR	204985	Callee	Z_TYPE_P		204568	0					
ANR	204986	Identifier	Z_TYPE_P		204568	0					
ANR	204987	ArgumentList	pData2		204568	1					
ANR	204988	Argument	pData2		204568	0					
ANR	204989	Identifier	pData2		204568	0					
ANR	204990	Identifier	IS_UNDEF		204568	1					
ANR	204991	CompoundStatement		63:37:1625:1625	204568	1					
ANR	204992	ReturnStatement	return - 1 ;	2338:4:61859:61868	204568	0	True				
ANR	204993	UnaryOperationExpression	- 1		204568	0					
ANR	204994	UnaryOperator	-		204568	0					
ANR	204995	PrimaryExpression	1		204568	1					
ANR	204996	ElseStatement	else		204568	0					
ANR	204997	IfStatement	if ( Z_TYPE_P ( pData2 ) == IS_UNDEF )		204568	0					
ANR	204998	Condition	Z_TYPE_P ( pData2 ) == IS_UNDEF	2340:13:61888:61915	204568	0	True				
ANR	204999	EqualityExpression	Z_TYPE_P ( pData2 ) == IS_UNDEF		204568	0		==			
ANR	205000	CallExpression	Z_TYPE_P ( pData2 )		204568	0					
ANR	205001	Callee	Z_TYPE_P		204568	0					
ANR	205002	Identifier	Z_TYPE_P		204568	0					
ANR	205003	ArgumentList	pData2		204568	1					
ANR	205004	Argument	pData2		204568	0					
ANR	205005	Identifier	pData2		204568	0					
ANR	205006	Identifier	IS_UNDEF		204568	1					
ANR	205007	CompoundStatement		66:43:1690:1690	204568	1					
ANR	205008	ReturnStatement	return 1 ;	2341:3:61923:61931	204568	0	True				
ANR	205009	PrimaryExpression	1		204568	0					
ANR	205010	ElseStatement	else		204568	0					
ANR	205011	CompoundStatement		68:9:1714:1714	204568	0					
ANR	205012	ExpressionStatement	"result = compar ( pData1 , pData2 )"	2343:3:61947:61978	204568	0	True				
ANR	205013	AssignmentExpression	"result = compar ( pData1 , pData2 )"		204568	0		=			
ANR	205014	Identifier	result		204568	0					
ANR	205015	CallExpression	"compar ( pData1 , pData2 )"		204568	1					
ANR	205016	Callee	compar		204568	0					
ANR	205017	Identifier	compar		204568	0					
ANR	205018	ArgumentList	pData1		204568	1					
ANR	205019	Argument	pData1		204568	0					
ANR	205020	Identifier	pData1		204568	0					
ANR	205021	Argument	pData2		204568	1					
ANR	205022	Identifier	pData2		204568	0					
ANR	205023	IfStatement	if ( result != 0 )		204568	1					
ANR	205024	Condition	result != 0	2344:7:61987:61997	204568	0	True				
ANR	205025	EqualityExpression	result != 0		204568	0		!=			
ANR	205026	Identifier	result		204568	0					
ANR	205027	PrimaryExpression	0		204568	1					
ANR	205028	CompoundStatement		70:20:1772:1772	204568	1					
ANR	205029	ReturnStatement	return result ;	2345:4:62006:62019	204568	0	True				
ANR	205030	Identifier	result		204568	0					
ANR	205031	ReturnStatement	return 0 ;	2350:1:62035:62043	204568	3	True				
ANR	205032	PrimaryExpression	0		204568	0					
ANR	205033	ReturnType	static zend_always_inline int		204568	1					
ANR	205034	Identifier	zend_hash_compare_impl		204568	2					
ANR	205035	ParameterList	"HashTable * ht1 , HashTable * ht2 , compare_func_t compar , zend_bool ordered"		204568	3					
ANR	205036	Parameter	HashTable * ht1	2275:53:60153:60166	204568	0	True				
ANR	205037	ParameterType	HashTable *		204568	0					
ANR	205038	Identifier	ht1		204568	1					
ANR	205039	Parameter	HashTable * ht2	2275:69:60169:60182	204568	1	True				
ANR	205040	ParameterType	HashTable *		204568	0					
ANR	205041	Identifier	ht2		204568	1					
ANR	205042	Parameter	compare_func_t compar	2275:85:60185:60205	204568	2	True				
ANR	205043	ParameterType	compare_func_t		204568	0					
ANR	205044	Identifier	compar		204568	1					
ANR	205045	Parameter	zend_bool ordered	2275:108:60208:60224	204568	3	True				
ANR	205046	ParameterType	zend_bool		204568	0					
ANR	205047	Identifier	ordered		204568	1					
ANR	205048	CFGEntryNode	ENTRY		204568		True				
ANR	205049	CFGExitNode	EXIT		204568		True				
ANR	205050	Symbol	p1		204568						
ANR	205051	Symbol	& p2 -> val		204568						
ANR	205052	Symbol	& p1 -> val		204568						
ANR	205053	Symbol	p2		204568						
ANR	205054	Symbol	ht1 -> nNumUsed		204568						
ANR	205055	Symbol	ht2 -> nNumUsed		204568						
ANR	205056	Symbol	ht2 -> arData		204568						
ANR	205057	Symbol	Z_TYPE		204568						
ANR	205058	Symbol	Z_INDIRECT_P		204568						
ANR	205059	Symbol	result		204568						
ANR	205060	Symbol	zend_hash_find		204568						
ANR	205061	Symbol	memcmp		204568						
ANR	205062	Symbol	p1 -> h		204568						
ANR	205063	Symbol	ht1 -> nNumOfElements		204568						
ANR	205064	Symbol	IS_UNDEF		204568						
ANR	205065	Symbol	ordered		204568						
ANR	205066	Symbol	zend_hash_index_find		204568						
ANR	205067	Symbol	NULL		204568						
ANR	205068	Symbol	ht1		204568						
ANR	205069	Symbol	idx2		204568						
ANR	205070	Symbol	* p1		204568						
ANR	205071	Symbol	p1 -> val		204568						
ANR	205072	Symbol	idx1		204568						
ANR	205073	Symbol	p2 -> val		204568						
ANR	205074	Symbol	ht2		204568						
ANR	205075	Symbol	* p2		204568						
ANR	205076	Symbol	Z_TYPE_P		204568						
ANR	205077	Symbol	* ht2		204568						
ANR	205078	Symbol	ZSTR_VAL		204568						
ANR	205079	Symbol	* ht1		204568						
ANR	205080	Symbol	ht2 -> nNumOfElements		204568						
ANR	205081	Symbol	pData2		204568						
ANR	205082	Symbol	p2 -> h		204568						
ANR	205083	Symbol	p2 -> key		204568						
ANR	205084	Symbol	ZSTR_LEN		204568						
ANR	205085	Symbol	p1 -> key		204568						
ANR	205086	Symbol	ht1 -> arData		204568						
ANR	205087	Symbol	pData1		204568						
ANR	205088	Symbol	compar		204568						
ANR	205089	Symbol	IS_INDIRECT		204568						
ANR	205090	Function	zend_hash_compare	2353:0:62048:62413							
ANR	205091	FunctionDef	"zend_hash_compare (HashTable * ht1 , HashTable * ht2 , compare_func_t compar , zend_bool ordered)"		205090	0					
ANR	205092	CompoundStatement		2354:0:62153:62413	205090	0					
ANR	205093	IdentifierDeclStatement	int result ;	2355:1:62156:62166	205090	0	True				
ANR	205094	IdentifierDecl	result		205090	0					
ANR	205095	IdentifierDeclType	int		205090	0					
ANR	205096	Identifier	result		205090	1					
ANR	205097	ExpressionStatement	IS_CONSISTENT ( ht1 )	2356:1:62169:62187	205090	1	True				
ANR	205098	CallExpression	IS_CONSISTENT ( ht1 )		205090	0					
ANR	205099	Callee	IS_CONSISTENT		205090	0					
ANR	205100	Identifier	IS_CONSISTENT		205090	0					
ANR	205101	ArgumentList	ht1		205090	1					
ANR	205102	Argument	ht1		205090	0					
ANR	205103	Identifier	ht1		205090	0					
ANR	205104	ExpressionStatement	IS_CONSISTENT ( ht2 )	2357:1:62190:62208	205090	2	True				
ANR	205105	CallExpression	IS_CONSISTENT ( ht2 )		205090	0					
ANR	205106	Callee	IS_CONSISTENT		205090	0					
ANR	205107	Identifier	IS_CONSISTENT		205090	0					
ANR	205108	ArgumentList	ht2		205090	1					
ANR	205109	Argument	ht2		205090	0					
ANR	205110	Identifier	ht2		205090	0					
ANR	205111	ExpressionStatement	HASH_PROTECT_RECURSION ( ht1 )	2359:1:62212:62239	205090	3	True				
ANR	205112	CallExpression	HASH_PROTECT_RECURSION ( ht1 )		205090	0					
ANR	205113	Callee	HASH_PROTECT_RECURSION		205090	0					
ANR	205114	Identifier	HASH_PROTECT_RECURSION		205090	0					
ANR	205115	ArgumentList	ht1		205090	1					
ANR	205116	Argument	ht1		205090	0					
ANR	205117	Identifier	ht1		205090	0					
ANR	205118	ExpressionStatement	HASH_PROTECT_RECURSION ( ht2 )	2360:1:62242:62269	205090	4	True				
ANR	205119	CallExpression	HASH_PROTECT_RECURSION ( ht2 )		205090	0					
ANR	205120	Callee	HASH_PROTECT_RECURSION		205090	0					
ANR	205121	Identifier	HASH_PROTECT_RECURSION		205090	0					
ANR	205122	ArgumentList	ht2		205090	1					
ANR	205123	Argument	ht2		205090	0					
ANR	205124	Identifier	ht2		205090	0					
ANR	205125	ExpressionStatement	"result = zend_hash_compare_impl ( ht1 , ht2 , compar , ordered )"	2361:1:62272:62330	205090	5	True				
ANR	205126	AssignmentExpression	"result = zend_hash_compare_impl ( ht1 , ht2 , compar , ordered )"		205090	0		=			
ANR	205127	Identifier	result		205090	0					
ANR	205128	CallExpression	"zend_hash_compare_impl ( ht1 , ht2 , compar , ordered )"		205090	1					
ANR	205129	Callee	zend_hash_compare_impl		205090	0					
ANR	205130	Identifier	zend_hash_compare_impl		205090	0					
ANR	205131	ArgumentList	ht1		205090	1					
ANR	205132	Argument	ht1		205090	0					
ANR	205133	Identifier	ht1		205090	0					
ANR	205134	Argument	ht2		205090	1					
ANR	205135	Identifier	ht2		205090	0					
ANR	205136	Argument	compar		205090	2					
ANR	205137	Identifier	compar		205090	0					
ANR	205138	Argument	ordered		205090	3					
ANR	205139	Identifier	ordered		205090	0					
ANR	205140	ExpressionStatement	HASH_UNPROTECT_RECURSION ( ht1 )	2362:1:62333:62362	205090	6	True				
ANR	205141	CallExpression	HASH_UNPROTECT_RECURSION ( ht1 )		205090	0					
ANR	205142	Callee	HASH_UNPROTECT_RECURSION		205090	0					
ANR	205143	Identifier	HASH_UNPROTECT_RECURSION		205090	0					
ANR	205144	ArgumentList	ht1		205090	1					
ANR	205145	Argument	ht1		205090	0					
ANR	205146	Identifier	ht1		205090	0					
ANR	205147	ExpressionStatement	HASH_UNPROTECT_RECURSION ( ht2 )	2363:1:62365:62394	205090	7	True				
ANR	205148	CallExpression	HASH_UNPROTECT_RECURSION ( ht2 )		205090	0					
ANR	205149	Callee	HASH_UNPROTECT_RECURSION		205090	0					
ANR	205150	Identifier	HASH_UNPROTECT_RECURSION		205090	0					
ANR	205151	ArgumentList	ht2		205090	1					
ANR	205152	Argument	ht2		205090	0					
ANR	205153	Identifier	ht2		205090	0					
ANR	205154	ReturnStatement	return result ;	2365:1:62398:62411	205090	8	True				
ANR	205155	Identifier	result		205090	0					
ANR	205156	ReturnType	ZEND_API int		205090	1					
ANR	205157	Identifier	zend_hash_compare		205090	2					
ANR	205158	ParameterList	"HashTable * ht1 , HashTable * ht2 , compare_func_t compar , zend_bool ordered"		205090	3					
ANR	205159	Parameter	HashTable * ht1	2353:31:62079:62092	205090	0	True				
ANR	205160	ParameterType	HashTable *		205090	0					
ANR	205161	Identifier	ht1		205090	1					
ANR	205162	Parameter	HashTable * ht2	2353:47:62095:62108	205090	1	True				
ANR	205163	ParameterType	HashTable *		205090	0					
ANR	205164	Identifier	ht2		205090	1					
ANR	205165	Parameter	compare_func_t compar	2353:63:62111:62131	205090	2	True				
ANR	205166	ParameterType	compare_func_t		205090	0					
ANR	205167	Identifier	compar		205090	1					
ANR	205168	Parameter	zend_bool ordered	2353:86:62134:62150	205090	3	True				
ANR	205169	ParameterType	zend_bool		205090	0					
ANR	205170	Identifier	ordered		205090	1					
ANR	205171	CFGEntryNode	ENTRY		205090		True				
ANR	205172	CFGExitNode	EXIT		205090		True				
ANR	205173	Symbol	result		205090						
ANR	205174	Symbol	ordered		205090						
ANR	205175	Symbol	ht1		205090						
ANR	205176	Symbol	ht2		205090						
ANR	205177	Symbol	zend_hash_compare_impl		205090						
ANR	205178	Symbol	compar		205090						
ANR	205179	Function	zend_hash_minmax	2369:15:62432:63077							
ANR	205180	FunctionDef	"zend_hash_minmax (const HashTable * ht , compare_func_t compar , uint32_t flag)"		205179	0					
ANR	205181	CompoundStatement		2370:0:62522:63077	205179	0					
ANR	205182	IdentifierDeclStatement	uint32_t idx ;	2371:1:62525:62537	205179	0	True				
ANR	205183	IdentifierDecl	idx		205179	0					
ANR	205184	IdentifierDeclType	uint32_t		205179	0					
ANR	205185	Identifier	idx		205179	1					
ANR	205186	IdentifierDeclStatement	"Bucket * p , * res ;"	2372:1:62540:62555	205179	1	True				
ANR	205187	IdentifierDecl	* p		205179	0					
ANR	205188	IdentifierDeclType	Bucket *		205179	0					
ANR	205189	Identifier	p		205179	1					
ANR	205190	IdentifierDecl	* res		205179	1					
ANR	205191	IdentifierDeclType	Bucket *		205179	0					
ANR	205192	Identifier	res		205179	1					
ANR	205193	ExpressionStatement	IS_CONSISTENT ( ht )	2374:1:62559:62576	205179	2	True				
ANR	205194	CallExpression	IS_CONSISTENT ( ht )		205179	0					
ANR	205195	Callee	IS_CONSISTENT		205179	0					
ANR	205196	Identifier	IS_CONSISTENT		205179	0					
ANR	205197	ArgumentList	ht		205179	1					
ANR	205198	Argument	ht		205179	0					
ANR	205199	Identifier	ht		205179	0					
ANR	205200	IfStatement	if ( ht -> nNumOfElements == 0 )		205179	3					
ANR	205201	Condition	ht -> nNumOfElements == 0	2376:5:62584:62606	205179	0	True				
ANR	205202	EqualityExpression	ht -> nNumOfElements == 0		205179	0		==			
ANR	205203	PtrMemberAccess	ht -> nNumOfElements		205179	0					
ANR	205204	Identifier	ht		205179	0					
ANR	205205	Identifier	nNumOfElements		205179	1					
ANR	205206	PrimaryExpression	0		205179	1					
ANR	205207	CompoundStatement		7:31:87:87	205179	1					
ANR	205208	ReturnStatement	return NULL ;	2377:2:62614:62625	205179	0	True				
ANR	205209	Identifier	NULL		205179	0					
ANR	205210	ExpressionStatement	idx = 0	2380:1:62632:62639	205179	4	True				
ANR	205211	AssignmentExpression	idx = 0		205179	0		=			
ANR	205212	Identifier	idx		205179	0					
ANR	205213	PrimaryExpression	0		205179	1					
ANR	205214	WhileStatement	while ( 1 )		205179	5					
ANR	205215	Condition	1	2381:8:62649:62649	205179	0	True				
ANR	205216	PrimaryExpression	1		205179	0					
ANR	205217	CompoundStatement		12:11:129:129	205179	1					
ANR	205218	IfStatement	if ( idx == ht -> nNumUsed )		205179	0					
ANR	205219	Condition	idx == ht -> nNumUsed	2382:6:62660:62678	205179	0	True				
ANR	205220	EqualityExpression	idx == ht -> nNumUsed		205179	0		==			
ANR	205221	Identifier	idx		205179	0					
ANR	205222	PtrMemberAccess	ht -> nNumUsed		205179	1					
ANR	205223	Identifier	ht		205179	0					
ANR	205224	Identifier	nNumUsed		205179	1					
ANR	205225	CompoundStatement		13:27:158:158	205179	1					
ANR	205226	ReturnStatement	return NULL ;	2383:3:62686:62697	205179	0	True				
ANR	205227	Identifier	NULL		205179	0					
ANR	205228	IfStatement	if ( Z_TYPE ( ht -> arData [ idx ] . val ) != IS_UNDEF )		205179	1					
ANR	205229	Condition	Z_TYPE ( ht -> arData [ idx ] . val ) != IS_UNDEF	2385:6:62709:62747	205179	0	True				
ANR	205230	EqualityExpression	Z_TYPE ( ht -> arData [ idx ] . val ) != IS_UNDEF		205179	0		!=			
ANR	205231	CallExpression	Z_TYPE ( ht -> arData [ idx ] . val )		205179	0					
ANR	205232	Callee	Z_TYPE		205179	0					
ANR	205233	Identifier	Z_TYPE		205179	0					
ANR	205234	ArgumentList	ht -> arData [ idx ] . val		205179	1					
ANR	205235	Argument	ht -> arData [ idx ] . val		205179	0					
ANR	205236	MemberAccess	ht -> arData [ idx ] . val		205179	0					
ANR	205237	ArrayIndexing	ht -> arData [ idx ]		205179	0					
ANR	205238	PtrMemberAccess	ht -> arData		205179	0					
ANR	205239	Identifier	ht		205179	0					
ANR	205240	Identifier	arData		205179	1					
ANR	205241	Identifier	idx		205179	1					
ANR	205242	Identifier	val		205179	1					
ANR	205243	Identifier	IS_UNDEF		205179	1					
ANR	205244	BreakStatement	break ;	2385:47:62750:62755	205179	1	True				
ANR	205245	ExpressionStatement	idx ++	2386:2:62759:62764	205179	2	True				
ANR	205246	PostIncDecOperationExpression	idx ++		205179	0					
ANR	205247	Identifier	idx		205179	0					
ANR	205248	IncDec	++		205179	1					
ANR	205249	ExpressionStatement	res = ht -> arData + idx	2388:1:62770:62792	205179	6	True				
ANR	205250	AssignmentExpression	res = ht -> arData + idx		205179	0		=			
ANR	205251	Identifier	res		205179	0					
ANR	205252	AdditiveExpression	ht -> arData + idx		205179	1		+			
ANR	205253	PtrMemberAccess	ht -> arData		205179	0					
ANR	205254	Identifier	ht		205179	0					
ANR	205255	Identifier	arData		205179	1					
ANR	205256	Identifier	idx		205179	1					
ANR	205257	ForStatement	for ( ; idx < ht -> nNumUsed ; idx ++ )		205179	7					
ANR	205258	Condition	idx < ht -> nNumUsed	2389:8:62802:62819	205179	0	True				
ANR	205259	RelationalExpression	idx < ht -> nNumUsed		205179	0		<			
ANR	205260	Identifier	idx		205179	0					
ANR	205261	PtrMemberAccess	ht -> nNumUsed		205179	1					
ANR	205262	Identifier	ht		205179	0					
ANR	205263	Identifier	nNumUsed		205179	1					
ANR	205264	PostIncDecOperationExpression	idx ++	2389:28:62822:62826	205179	1	True				
ANR	205265	Identifier	idx		205179	0					
ANR	205266	IncDec	++		205179	1					
ANR	205267	CompoundStatement		20:35:306:306	205179	2					
ANR	205268	ExpressionStatement	p = ht -> arData + idx	2390:2:62833:62853	205179	0	True				
ANR	205269	AssignmentExpression	p = ht -> arData + idx		205179	0		=			
ANR	205270	Identifier	p		205179	0					
ANR	205271	AdditiveExpression	ht -> arData + idx		205179	1		+			
ANR	205272	PtrMemberAccess	ht -> arData		205179	0					
ANR	205273	Identifier	ht		205179	0					
ANR	205274	Identifier	arData		205179	1					
ANR	205275	Identifier	idx		205179	1					
ANR	205276	IfStatement	if ( UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF ) )		205179	1					
ANR	205277	Condition	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )	2391:6:62861:62898	205179	0	True				
ANR	205278	CallExpression	UNEXPECTED ( Z_TYPE ( p -> val ) == IS_UNDEF )		205179	0					
ANR	205279	Callee	UNEXPECTED		205179	0					
ANR	205280	Identifier	UNEXPECTED		205179	0					
ANR	205281	ArgumentList	Z_TYPE ( p -> val ) == IS_UNDEF		205179	1					
ANR	205282	Argument	Z_TYPE ( p -> val ) == IS_UNDEF		205179	0					
ANR	205283	EqualityExpression	Z_TYPE ( p -> val ) == IS_UNDEF		205179	0		==			
ANR	205284	CallExpression	Z_TYPE ( p -> val )		205179	0					
ANR	205285	Callee	Z_TYPE		205179	0					
ANR	205286	Identifier	Z_TYPE		205179	0					
ANR	205287	ArgumentList	p -> val		205179	1					
ANR	205288	Argument	p -> val		205179	0					
ANR	205289	PtrMemberAccess	p -> val		205179	0					
ANR	205290	Identifier	p		205179	0					
ANR	205291	Identifier	val		205179	1					
ANR	205292	Identifier	IS_UNDEF		205179	1					
ANR	205293	ContinueStatement	continue ;	2391:46:62901:62909	205179	1	True				
ANR	205294	IfStatement	if ( flag )		205179	2					
ANR	205295	Condition	flag	2393:6:62918:62921	205179	0	True				
ANR	205296	Identifier	flag		205179	0					
ANR	205297	CompoundStatement		24:12:401:401	205179	1					
ANR	205298	IfStatement	"if ( compar ( res , p ) < 0 )"		205179	0					
ANR	205299	Condition	"compar ( res , p ) < 0"	2394:7:62933:62950	205179	0	True				
ANR	205300	RelationalExpression	"compar ( res , p ) < 0"		205179	0		<			
ANR	205301	CallExpression	"compar ( res , p )"		205179	0					
ANR	205302	Callee	compar		205179	0					
ANR	205303	Identifier	compar		205179	0					
ANR	205304	ArgumentList	res		205179	1					
ANR	205305	Argument	res		205179	0					
ANR	205306	Identifier	res		205179	0					
ANR	205307	Argument	p		205179	1					
ANR	205308	Identifier	p		205179	0					
ANR	205309	PrimaryExpression	0		205179	1					
ANR	205310	CompoundStatement		25:27:430:430	205179	1					
ANR	205311	ExpressionStatement	res = p	2395:4:62969:62976	205179	0	True				
ANR	205312	AssignmentExpression	res = p		205179	0		=			
ANR	205313	Identifier	res		205179	0					
ANR	205314	Identifier	p		205179	1					
ANR	205315	ElseStatement	else		205179	0					
ANR	205316	CompoundStatement		28:9:469:469	205179	0					
ANR	205317	IfStatement	"if ( compar ( res , p ) > 0 )"		205179	0					
ANR	205318	Condition	"compar ( res , p ) > 0"	2398:7:63001:63018	205179	0	True				
ANR	205319	RelationalExpression	"compar ( res , p ) > 0"		205179	0		>			
ANR	205320	CallExpression	"compar ( res , p )"		205179	0					
ANR	205321	Callee	compar		205179	0					
ANR	205322	Identifier	compar		205179	0					
ANR	205323	ArgumentList	res		205179	1					
ANR	205324	Argument	res		205179	0					
ANR	205325	Identifier	res		205179	0					
ANR	205326	Argument	p		205179	1					
ANR	205327	Identifier	p		205179	0					
ANR	205328	PrimaryExpression	0		205179	1					
ANR	205329	CompoundStatement		29:27:498:498	205179	1					
ANR	205330	ExpressionStatement	res = p	2399:4:63037:63044	205179	0	True				
ANR	205331	AssignmentExpression	res = p		205179	0		=			
ANR	205332	Identifier	res		205179	0					
ANR	205333	Identifier	p		205179	1					
ANR	205334	ReturnStatement	return & res -> val ;	2403:1:63059:63075	205179	8	True				
ANR	205335	UnaryOperationExpression	& res -> val		205179	0					
ANR	205336	UnaryOperator	&		205179	0					
ANR	205337	PtrMemberAccess	res -> val		205179	1					
ANR	205338	Identifier	res		205179	0					
ANR	205339	Identifier	val		205179	1					
ANR	205340	ReturnType	ZEND_FASTCALL		205179	1					
ANR	205341	Identifier	zend_hash_minmax		205179	2					
ANR	205342	ParameterList	"const HashTable * ht , compare_func_t compar , uint32_t flag"		205179	3					
ANR	205343	Parameter	const HashTable * ht	2369:46:62463:62481	205179	0	True				
ANR	205344	ParameterType	const HashTable *		205179	0					
ANR	205345	Identifier	ht		205179	1					
ANR	205346	Parameter	compare_func_t compar	2369:67:62484:62504	205179	1	True				
ANR	205347	ParameterType	compare_func_t		205179	0					
ANR	205348	Identifier	compar		205179	1					
ANR	205349	Parameter	uint32_t flag	2369:90:62507:62519	205179	2	True				
ANR	205350	ParameterType	uint32_t		205179	0					
ANR	205351	Identifier	flag		205179	1					
ANR	205352	CFGEntryNode	ENTRY		205179		True				
ANR	205353	CFGExitNode	EXIT		205179		True				
ANR	205354	Symbol	res		205179						
ANR	205355	Symbol	flag		205179						
ANR	205356	Symbol	NULL		205179						
ANR	205357	Symbol	ht -> arData [ idx ] . val		205179						
ANR	205358	Symbol	Z_TYPE		205179						
ANR	205359	Symbol	ht -> arData		205179						
ANR	205360	Symbol	ht		205179						
ANR	205361	Symbol	p -> val		205179						
ANR	205362	Symbol	* ht -> arData		205179						
ANR	205363	Symbol	p		205179						
ANR	205364	Symbol	UNEXPECTED		205179						
ANR	205365	Symbol	* ht		205179						
ANR	205366	Symbol	& res -> val		205179						
ANR	205367	Symbol	* idx		205179						
ANR	205368	Symbol	* * ht		205179						
ANR	205369	Symbol	* p		205179						
ANR	205370	Symbol	idx		205179						
ANR	205371	Symbol	ht -> nNumOfElements		205179						
ANR	205372	Symbol	ht -> nNumUsed		205179						
ANR	205373	Symbol	IS_UNDEF		205179						
ANR	205374	Symbol	compar		205179						
ANR	205375	Function	_zend_handle_numeric_str_ex	2406:0:63080:63943							
ANR	205376	FunctionDef	"_zend_handle_numeric_str_ex (const char * key , size_t length , zend_ulong * idx)"		205375	0					
ANR	205377	CompoundStatement		2407:0:63184:63943	205375	0					
ANR	205378	Statement	register	2408:1:63187:63194	205375	0	True				
ANR	205379	IdentifierDeclStatement	const char * tmp = key ;	2408:10:63196:63217	205375	1	True				
ANR	205380	IdentifierDecl	* tmp = key		205375	0					
ANR	205381	IdentifierDeclType	const char *		205375	0					
ANR	205382	Identifier	tmp		205375	1					
ANR	205383	AssignmentExpression	* tmp = key		205375	2		=			
ANR	205384	Identifier	key		205375	0					
ANR	205385	Identifier	key		205375	1					
ANR	205386	IdentifierDeclStatement	const char * end = key + length ;	2410:1:63221:63251	205375	2	True				
ANR	205387	IdentifierDecl	* end = key + length		205375	0					
ANR	205388	IdentifierDeclType	const char *		205375	0					
ANR	205389	Identifier	end		205375	1					
ANR	205390	AssignmentExpression	* end = key + length		205375	2		=			
ANR	205391	Identifier	end		205375	0					
ANR	205392	AdditiveExpression	key + length		205375	1		+			
ANR	205393	Identifier	key		205375	0					
ANR	205394	Identifier	length		205375	1					
ANR	205395	ExpressionStatement	ZEND_ASSERT ( * end == '\\0' )	2411:1:63254:63279	205375	3	True				
ANR	205396	CallExpression	ZEND_ASSERT ( * end == '\\0' )		205375	0					
ANR	205397	Callee	ZEND_ASSERT		205375	0					
ANR	205398	Identifier	ZEND_ASSERT		205375	0					
ANR	205399	ArgumentList	* end == '\\0'		205375	1					
ANR	205400	Argument	* end == '\\0'		205375	0					
ANR	205401	EqualityExpression	* end == '\\0'		205375	0		==			
ANR	205402	UnaryOperationExpression	* end		205375	0					
ANR	205403	UnaryOperator	*		205375	0					
ANR	205404	Identifier	end		205375	1					
ANR	205405	PrimaryExpression	'\\0'		205375	1					
ANR	205406	IfStatement	if ( * tmp == '-' )		205375	4					
ANR	205407	Condition	* tmp == '-'	2413:5:63287:63297	205375	0	True				
ANR	205408	EqualityExpression	* tmp == '-'		205375	0		==			
ANR	205409	UnaryOperationExpression	* tmp		205375	0					
ANR	205410	UnaryOperator	*		205375	0					
ANR	205411	Identifier	tmp		205375	1					
ANR	205412	PrimaryExpression	'-'		205375	1					
ANR	205413	CompoundStatement		7:18:115:115	205375	1					
ANR	205414	ExpressionStatement	tmp ++	2414:2:63304:63309	205375	0	True				
ANR	205415	PostIncDecOperationExpression	tmp ++		205375	0					
ANR	205416	Identifier	tmp		205375	0					
ANR	205417	IncDec	++		205375	1					
ANR	205418	IfStatement	if ( ( * tmp == '0' && length > 1 ) || ( end - tmp > MAX_LENGTH_OF_LONG - 1 ) || ( SIZEOF_ZEND_LONG == 4 && end - tmp == MAX_LENGTH_OF_LONG - 1 && * tmp > '2' ) )		205375	5					
ANR	205419	Condition	( * tmp == '0' && length > 1 ) || ( end - tmp > MAX_LENGTH_OF_LONG - 1 ) || ( SIZEOF_ZEND_LONG == 4 && end - tmp == MAX_LENGTH_OF_LONG - 1 && * tmp > '2' )	2417:5:63320:63537	205375	0	True				
ANR	205420	OrExpression	( * tmp == '0' && length > 1 ) || ( end - tmp > MAX_LENGTH_OF_LONG - 1 ) || ( SIZEOF_ZEND_LONG == 4 && end - tmp == MAX_LENGTH_OF_LONG - 1 && * tmp > '2' )		205375	0		||			
ANR	205421	AndExpression	* tmp == '0' && length > 1		205375	0		&&			
ANR	205422	EqualityExpression	* tmp == '0'		205375	0		==			
ANR	205423	UnaryOperationExpression	* tmp		205375	0					
ANR	205424	UnaryOperator	*		205375	0					
ANR	205425	Identifier	tmp		205375	1					
ANR	205426	PrimaryExpression	'0'		205375	1					
ANR	205427	RelationalExpression	length > 1		205375	1		>			
ANR	205428	Identifier	length		205375	0					
ANR	205429	PrimaryExpression	1		205375	1					
ANR	205430	OrExpression	( end - tmp > MAX_LENGTH_OF_LONG - 1 ) || ( SIZEOF_ZEND_LONG == 4 && end - tmp == MAX_LENGTH_OF_LONG - 1 && * tmp > '2' )		205375	1		||			
ANR	205431	RelationalExpression	end - tmp > MAX_LENGTH_OF_LONG - 1		205375	0		>			
ANR	205432	AdditiveExpression	end - tmp		205375	0		-			
ANR	205433	Identifier	end		205375	0					
ANR	205434	Identifier	tmp		205375	1					
ANR	205435	AdditiveExpression	MAX_LENGTH_OF_LONG - 1		205375	1		-			
ANR	205436	Identifier	MAX_LENGTH_OF_LONG		205375	0					
ANR	205437	PrimaryExpression	1		205375	1					
ANR	205438	AndExpression	SIZEOF_ZEND_LONG == 4 && end - tmp == MAX_LENGTH_OF_LONG - 1 && * tmp > '2'		205375	1		&&			
ANR	205439	EqualityExpression	SIZEOF_ZEND_LONG == 4		205375	0		==			
ANR	205440	Identifier	SIZEOF_ZEND_LONG		205375	0					
ANR	205441	PrimaryExpression	4		205375	1					
ANR	205442	AndExpression	end - tmp == MAX_LENGTH_OF_LONG - 1 && * tmp > '2'		205375	1		&&			
ANR	205443	EqualityExpression	end - tmp == MAX_LENGTH_OF_LONG - 1		205375	0		==			
ANR	205444	AdditiveExpression	end - tmp		205375	0		-			
ANR	205445	Identifier	end		205375	0					
ANR	205446	Identifier	tmp		205375	1					
ANR	205447	AdditiveExpression	MAX_LENGTH_OF_LONG - 1		205375	1		-			
ANR	205448	Identifier	MAX_LENGTH_OF_LONG		205375	0					
ANR	205449	PrimaryExpression	1		205375	1					
ANR	205450	RelationalExpression	* tmp > '2'		205375	1		>			
ANR	205451	UnaryOperationExpression	* tmp		205375	0					
ANR	205452	UnaryOperator	*		205375	0					
ANR	205453	Identifier	tmp		205375	1					
ANR	205454	PrimaryExpression	'2'		205375	1					
ANR	205455	CompoundStatement		15:19:355:355	205375	1					
ANR	205456	ReturnStatement	return 0 ;	2422:2:63559:63567	205375	0	True				
ANR	205457	PrimaryExpression	0		205375	0					
ANR	205458	ExpressionStatement	* idx = ( * tmp - '0' )	2424:1:63573:63592	205375	6	True				
ANR	205459	AssignmentExpression	* idx = ( * tmp - '0' )		205375	0		=			
ANR	205460	UnaryOperationExpression	* idx		205375	0					
ANR	205461	UnaryOperator	*		205375	0					
ANR	205462	Identifier	idx		205375	1					
ANR	205463	AdditiveExpression	* tmp - '0'		205375	1		-			
ANR	205464	UnaryOperationExpression	* tmp		205375	0					
ANR	205465	UnaryOperator	*		205375	0					
ANR	205466	Identifier	tmp		205375	1					
ANR	205467	PrimaryExpression	'0'		205375	1					
ANR	205468	WhileStatement	while ( 1 )		205375	7					
ANR	205469	Condition	1	2425:8:63602:63602	205375	0	True				
ANR	205470	PrimaryExpression	1		205375	0					
ANR	205471	CompoundStatement		19:11:420:420	205375	1					
ANR	205472	ExpressionStatement	++ tmp	2426:2:63609:63614	205375	0	True				
ANR	205473	UnaryExpression	++ tmp		205375	0					
ANR	205474	IncDec	++		205375	0					
ANR	205475	Identifier	tmp		205375	1					
ANR	205476	IfStatement	if ( tmp == end )		205375	1					
ANR	205477	Condition	tmp == end	2427:6:63622:63631	205375	0	True				
ANR	205478	EqualityExpression	tmp == end		205375	0		==			
ANR	205479	Identifier	tmp		205375	0					
ANR	205480	Identifier	end		205375	1					
ANR	205481	CompoundStatement		21:18:449:449	205375	1					
ANR	205482	IfStatement	if ( * key == '-' )		205375	0					
ANR	205483	Condition	* key == '-'	2428:7:63643:63653	205375	0	True				
ANR	205484	EqualityExpression	* key == '-'		205375	0		==			
ANR	205485	UnaryOperationExpression	* key		205375	0					
ANR	205486	UnaryOperator	*		205375	0					
ANR	205487	Identifier	key		205375	1					
ANR	205488	PrimaryExpression	'-'		205375	1					
ANR	205489	CompoundStatement		22:20:471:471	205375	1					
ANR	205490	IfStatement	if ( * idx - 1 > ZEND_LONG_MAX )		205375	0					
ANR	205491	Condition	* idx - 1 > ZEND_LONG_MAX	2429:8:63666:63687	205375	0	True				
ANR	205492	RelationalExpression	* idx - 1 > ZEND_LONG_MAX		205375	0		>			
ANR	205493	AdditiveExpression	* idx - 1		205375	0		-			
ANR	205494	UnaryOperationExpression	* idx		205375	0					
ANR	205495	UnaryOperator	*		205375	0					
ANR	205496	Identifier	idx		205375	1					
ANR	205497	PrimaryExpression	1		205375	1					
ANR	205498	Identifier	ZEND_LONG_MAX		205375	1					
ANR	205499	CompoundStatement		23:32:505:505	205375	1					
ANR	205500	ReturnStatement	return 0 ;	2430:5:63712:63720	205375	0	True				
ANR	205501	PrimaryExpression	0		205375	0					
ANR	205502	ExpressionStatement	* idx = 0 - * idx	2432:4:63732:63747	205375	1	True				
ANR	205503	AssignmentExpression	* idx = 0 - * idx		205375	0		=			
ANR	205504	UnaryOperationExpression	* idx		205375	0					
ANR	205505	UnaryOperator	*		205375	0					
ANR	205506	Identifier	idx		205375	1					
ANR	205507	AdditiveExpression	0 - * idx		205375	1		-			
ANR	205508	PrimaryExpression	0		205375	0					
ANR	205509	UnaryOperationExpression	* idx		205375	1					
ANR	205510	UnaryOperator	*		205375	0					
ANR	205511	Identifier	idx		205375	1					
ANR	205512	ElseStatement	else		205375	0					
ANR	205513	IfStatement	if ( * idx > ZEND_LONG_MAX )		205375	0					
ANR	205514	Condition	* idx > ZEND_LONG_MAX	2433:14:63763:63782	205375	0	True				
ANR	205515	RelationalExpression	* idx > ZEND_LONG_MAX		205375	0		>			
ANR	205516	UnaryOperationExpression	* idx		205375	0					
ANR	205517	UnaryOperator	*		205375	0					
ANR	205518	Identifier	idx		205375	1					
ANR	205519	Identifier	ZEND_LONG_MAX		205375	1					
ANR	205520	CompoundStatement		27:36:600:600	205375	1					
ANR	205521	ReturnStatement	return 0 ;	2434:4:63806:63814	205375	0	True				
ANR	205522	PrimaryExpression	0		205375	0					
ANR	205523	ReturnStatement	return 1 ;	2436:3:63824:63832	205375	1	True				
ANR	205524	PrimaryExpression	1		205375	0					
ANR	205525	IfStatement	if ( * tmp <= '9' && * tmp >= '0' )		205375	2					
ANR	205526	Condition	* tmp <= '9' && * tmp >= '0'	2438:6:63844:63869	205375	0	True				
ANR	205527	AndExpression	* tmp <= '9' && * tmp >= '0'		205375	0		&&			
ANR	205528	RelationalExpression	* tmp <= '9'		205375	0		<=			
ANR	205529	UnaryOperationExpression	* tmp		205375	0					
ANR	205530	UnaryOperator	*		205375	0					
ANR	205531	Identifier	tmp		205375	1					
ANR	205532	PrimaryExpression	'9'		205375	1					
ANR	205533	RelationalExpression	* tmp >= '0'		205375	1		>=			
ANR	205534	UnaryOperationExpression	* tmp		205375	0					
ANR	205535	UnaryOperator	*		205375	0					
ANR	205536	Identifier	tmp		205375	1					
ANR	205537	PrimaryExpression	'0'		205375	1					
ANR	205538	CompoundStatement		32:34:687:687	205375	1					
ANR	205539	ExpressionStatement	* idx = ( * idx * 10 ) + ( * tmp - '0' )	2439:3:63877:63910	205375	0	True				
ANR	205540	AssignmentExpression	* idx = ( * idx * 10 ) + ( * tmp - '0' )		205375	0		=			
ANR	205541	UnaryOperationExpression	* idx		205375	0					
ANR	205542	UnaryOperator	*		205375	0					
ANR	205543	Identifier	idx		205375	1					
ANR	205544	AdditiveExpression	( * idx * 10 ) + ( * tmp - '0' )		205375	1		+			
ANR	205545	MultiplicativeExpression	* idx * 10		205375	0		*			
ANR	205546	UnaryOperationExpression	* idx		205375	0					
ANR	205547	UnaryOperator	*		205375	0					
ANR	205548	Identifier	idx		205375	1					
ANR	205549	PrimaryExpression	10		205375	1					
ANR	205550	AdditiveExpression	* tmp - '0'		205375	1		-			
ANR	205551	UnaryOperationExpression	* tmp		205375	0					
ANR	205552	UnaryOperator	*		205375	0					
ANR	205553	Identifier	tmp		205375	1					
ANR	205554	PrimaryExpression	'0'		205375	1					
ANR	205555	ElseStatement	else		205375	0					
ANR	205556	CompoundStatement		34:9:736:736	205375	0					
ANR	205557	ReturnStatement	return 0 ;	2441:3:63926:63934	205375	0	True				
ANR	205558	PrimaryExpression	0		205375	0					
ANR	205559	ReturnType	ZEND_API int ZEND_FASTCALL		205375	1					
ANR	205560	Identifier	_zend_handle_numeric_str_ex		205375	2					
ANR	205561	ParameterList	"const char * key , size_t length , zend_ulong * idx"		205375	3					
ANR	205562	Parameter	const char * key	2406:55:63135:63149	205375	0	True				
ANR	205563	ParameterType	const char *		205375	0					
ANR	205564	Identifier	key		205375	1					
ANR	205565	Parameter	size_t length	2406:72:63152:63164	205375	1	True				
ANR	205566	ParameterType	size_t		205375	0					
ANR	205567	Identifier	length		205375	1					
ANR	205568	Parameter	zend_ulong * idx	2406:87:63167:63181	205375	2	True				
ANR	205569	ParameterType	zend_ulong *		205375	0					
ANR	205570	Identifier	idx		205375	1					
ANR	205571	CFGEntryNode	ENTRY		205375		True				
ANR	205572	CFGExitNode	EXIT		205375		True				
ANR	205573	Symbol	* tmp		205375						
ANR	205574	Symbol	ZEND_LONG_MAX		205375						
ANR	205575	Symbol	tmp		205375						
ANR	205576	Symbol	length		205375						
ANR	205577	Symbol	* idx		205375						
ANR	205578	Symbol	MAX_LENGTH_OF_LONG		205375						
ANR	205579	Symbol	* key		205375						
ANR	205580	Symbol	end		205375						
ANR	205581	Symbol	* end		205375						
ANR	205582	Symbol	idx		205375						
ANR	205583	Symbol	SIZEOF_ZEND_LONG		205375						
ANR	205584	Symbol	key		205375						
