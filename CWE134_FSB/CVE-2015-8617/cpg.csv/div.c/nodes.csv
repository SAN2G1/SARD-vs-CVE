command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	483941	File	data/converged/CVE-2015-8617_php-src/div.c								
ANR	483942	DeclStmt									
ANR	483943	Decl							unsigned char	unsigned char *	num
ANR	483944	DeclStmt									
ANR	483945	Decl							int	int	size
ANR	483946	Decl							int	int	digit
ANR	483947	DeclStmt									
ANR	483948	Decl							unsigned char	unsigned char *	result
ANR	483949	DeclStmt									
ANR	483950	Decl							int	int	carry
ANR	483951	Decl							int	int	value
ANR	483952	DeclStmt									
ANR	483953	Decl							unsigned char	unsigned char *	nptr
ANR	483954	Decl							unsigned char	unsigned char *	rptr
ANR	483955	Function	bc_divide	87:0:2521:7108							
ANR	483956	FunctionDef	"bc_divide (bc_num n1 , bc_num n2 , bc_num * quot , int scale)"		483955	0					
ANR	483957	CompoundStatement		89:0:2583:7108	483955	0					
ANR	483958	IdentifierDeclStatement	bc_num qval ;	90:2:2587:2598	483955	0	True				
ANR	483959	IdentifierDecl	qval		483955	0					
ANR	483960	IdentifierDeclType	bc_num		483955	0					
ANR	483961	Identifier	qval		483955	1					
ANR	483962	IdentifierDeclStatement	"unsigned char * num1 , * num2 ;"	91:2:2602:2628	483955	1	True				
ANR	483963	IdentifierDecl	* num1		483955	0					
ANR	483964	IdentifierDeclType	unsigned char *		483955	0					
ANR	483965	Identifier	num1		483955	1					
ANR	483966	IdentifierDecl	* num2		483955	1					
ANR	483967	IdentifierDeclType	unsigned char *		483955	0					
ANR	483968	Identifier	num2		483955	1					
ANR	483969	IdentifierDeclStatement	"unsigned char * ptr1 , * ptr2 , * n2ptr , * qptr ;"	92:2:2632:2673	483955	2	True				
ANR	483970	IdentifierDecl	* ptr1		483955	0					
ANR	483971	IdentifierDeclType	unsigned char *		483955	0					
ANR	483972	Identifier	ptr1		483955	1					
ANR	483973	IdentifierDecl	* ptr2		483955	1					
ANR	483974	IdentifierDeclType	unsigned char *		483955	0					
ANR	483975	Identifier	ptr2		483955	1					
ANR	483976	IdentifierDecl	* n2ptr		483955	2					
ANR	483977	IdentifierDeclType	unsigned char *		483955	0					
ANR	483978	Identifier	n2ptr		483955	1					
ANR	483979	IdentifierDecl	* qptr		483955	3					
ANR	483980	IdentifierDeclType	unsigned char *		483955	0					
ANR	483981	Identifier	qptr		483955	1					
ANR	483982	IdentifierDeclStatement	"int scale1 , val ;"	93:2:2677:2693	483955	3	True				
ANR	483983	IdentifierDecl	scale1		483955	0					
ANR	483984	IdentifierDeclType	int		483955	0					
ANR	483985	Identifier	scale1		483955	1					
ANR	483986	IdentifierDecl	val		483955	1					
ANR	483987	IdentifierDeclType	int		483955	0					
ANR	483988	Identifier	val		483955	1					
ANR	483989	IdentifierDeclStatement	"unsigned int len1 , len2 , scale2 , qdigits , extra , count ;"	94:2:2697:2752	483955	4	True				
ANR	483990	IdentifierDecl	len1		483955	0					
ANR	483991	IdentifierDeclType	unsigned int		483955	0					
ANR	483992	Identifier	len1		483955	1					
ANR	483993	IdentifierDecl	len2		483955	1					
ANR	483994	IdentifierDeclType	unsigned int		483955	0					
ANR	483995	Identifier	len2		483955	1					
ANR	483996	IdentifierDecl	scale2		483955	2					
ANR	483997	IdentifierDeclType	unsigned int		483955	0					
ANR	483998	Identifier	scale2		483955	1					
ANR	483999	IdentifierDecl	qdigits		483955	3					
ANR	484000	IdentifierDeclType	unsigned int		483955	0					
ANR	484001	Identifier	qdigits		483955	1					
ANR	484002	IdentifierDecl	extra		483955	4					
ANR	484003	IdentifierDeclType	unsigned int		483955	0					
ANR	484004	Identifier	extra		483955	1					
ANR	484005	IdentifierDecl	count		483955	5					
ANR	484006	IdentifierDeclType	unsigned int		483955	0					
ANR	484007	Identifier	count		483955	1					
ANR	484008	IdentifierDeclStatement	"unsigned int qdig , qguess , borrow , carry ;"	95:2:2756:2797	483955	5	True				
ANR	484009	IdentifierDecl	qdig		483955	0					
ANR	484010	IdentifierDeclType	unsigned int		483955	0					
ANR	484011	Identifier	qdig		483955	1					
ANR	484012	IdentifierDecl	qguess		483955	1					
ANR	484013	IdentifierDeclType	unsigned int		483955	0					
ANR	484014	Identifier	qguess		483955	1					
ANR	484015	IdentifierDecl	borrow		483955	2					
ANR	484016	IdentifierDeclType	unsigned int		483955	0					
ANR	484017	Identifier	borrow		483955	1					
ANR	484018	IdentifierDecl	carry		483955	3					
ANR	484019	IdentifierDeclType	unsigned int		483955	0					
ANR	484020	Identifier	carry		483955	1					
ANR	484021	IdentifierDeclStatement	unsigned char * mval ;	96:2:2801:2820	483955	6	True				
ANR	484022	IdentifierDecl	* mval		483955	0					
ANR	484023	IdentifierDeclType	unsigned char *		483955	0					
ANR	484024	Identifier	mval		483955	1					
ANR	484025	IdentifierDeclStatement	char zero ;	97:2:2824:2833	483955	7	True				
ANR	484026	IdentifierDecl	zero		483955	0					
ANR	484027	IdentifierDeclType	char		483955	0					
ANR	484028	Identifier	zero		483955	1					
ANR	484029	IdentifierDeclStatement	unsigned int norm ;	98:2:2837:2855	483955	8	True				
ANR	484030	IdentifierDecl	norm		483955	0					
ANR	484031	IdentifierDeclType	unsigned int		483955	0					
ANR	484032	Identifier	norm		483955	1					
ANR	484033	IfStatement	if ( bc_is_zero ( n2 ) )		483955	9					
ANR	484034	Condition	bc_is_zero ( n2 )	101:6:2897:2911	483955	0	True				
ANR	484035	CallExpression	bc_is_zero ( n2 )		483955	0					
ANR	484036	Callee	bc_is_zero		483955	0					
ANR	484037	Identifier	bc_is_zero		483955	0					
ANR	484038	ArgumentList	n2		483955	1					
ANR	484039	Argument	n2		483955	0					
ANR	484040	Identifier	n2		483955	0					
ANR	484041	ReturnStatement	return - 1 ;	101:23:2914:2923	483955	1	True				
ANR	484042	UnaryOperationExpression	- 1		483955	0					
ANR	484043	UnaryOperator	-		483955	0					
ANR	484044	PrimaryExpression	1		483955	1					
ANR	484045	IfStatement	if ( n2 -> n_scale == 0 )		483955	10					
ANR	484046	Condition	n2 -> n_scale == 0	104:6:2990:3005	483955	0	True				
ANR	484047	EqualityExpression	n2 -> n_scale == 0		483955	0		==			
ANR	484048	PtrMemberAccess	n2 -> n_scale		483955	0					
ANR	484049	Identifier	n2		483955	0					
ANR	484050	Identifier	n_scale		483955	1					
ANR	484051	PrimaryExpression	0		483955	1					
ANR	484052	CompoundStatement		17:4:428:428	483955	1					
ANR	484053	IfStatement	if ( n2 -> n_len == 1 && * n2 -> n_value == 1 )		483955	0					
ANR	484054	Condition	n2 -> n_len == 1 && * n2 -> n_value == 1	106:10:3024:3058	483955	0	True				
ANR	484055	AndExpression	n2 -> n_len == 1 && * n2 -> n_value == 1		483955	0		&&			
ANR	484056	EqualityExpression	n2 -> n_len == 1		483955	0		==			
ANR	484057	PtrMemberAccess	n2 -> n_len		483955	0					
ANR	484058	Identifier	n2		483955	0					
ANR	484059	Identifier	n_len		483955	1					
ANR	484060	PrimaryExpression	1		483955	1					
ANR	484061	EqualityExpression	* n2 -> n_value == 1		483955	1		==			
ANR	484062	UnaryOperationExpression	* n2 -> n_value		483955	0					
ANR	484063	UnaryOperator	*		483955	0					
ANR	484064	PtrMemberAccess	n2 -> n_value		483955	1					
ANR	484065	Identifier	n2		483955	0					
ANR	484066	Identifier	n_value		483955	1					
ANR	484067	PrimaryExpression	1		483955	1					
ANR	484068	CompoundStatement		19:1:478:478	483955	1					
ANR	484069	ExpressionStatement	"qval = bc_new_num ( n1 -> n_len , scale )"	108:3:3067:3103	483955	0	True				
ANR	484070	AssignmentExpression	"qval = bc_new_num ( n1 -> n_len , scale )"		483955	0		=			
ANR	484071	Identifier	qval		483955	0					
ANR	484072	CallExpression	"bc_new_num ( n1 -> n_len , scale )"		483955	1					
ANR	484073	Callee	bc_new_num		483955	0					
ANR	484074	Identifier	bc_new_num		483955	0					
ANR	484075	ArgumentList	n1 -> n_len		483955	1					
ANR	484076	Argument	n1 -> n_len		483955	0					
ANR	484077	PtrMemberAccess	n1 -> n_len		483955	0					
ANR	484078	Identifier	n1		483955	0					
ANR	484079	Identifier	n_len		483955	1					
ANR	484080	Argument	scale		483955	1					
ANR	484081	Identifier	scale		483955	0					
ANR	484082	ExpressionStatement	qval -> n_sign = ( n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS )	109:3:3108:3164	483955	1	True				
ANR	484083	AssignmentExpression	qval -> n_sign = ( n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS )		483955	0		=			
ANR	484084	PtrMemberAccess	qval -> n_sign		483955	0					
ANR	484085	Identifier	qval		483955	0					
ANR	484086	Identifier	n_sign		483955	1					
ANR	484087	ConditionalExpression	n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS		483955	1					
ANR	484088	Condition	n1 -> n_sign == n2 -> n_sign		483955	0					
ANR	484089	EqualityExpression	n1 -> n_sign == n2 -> n_sign		483955	0		==			
ANR	484090	PtrMemberAccess	n1 -> n_sign		483955	0					
ANR	484091	Identifier	n1		483955	0					
ANR	484092	Identifier	n_sign		483955	1					
ANR	484093	PtrMemberAccess	n2 -> n_sign		483955	1					
ANR	484094	Identifier	n2		483955	0					
ANR	484095	Identifier	n_sign		483955	1					
ANR	484096	Identifier	PLUS		483955	1					
ANR	484097	Identifier	MINUS		483955	2					
ANR	484098	ExpressionStatement	"memset ( & qval -> n_value [ n1 -> n_len ] , 0 , scale )"	110:3:3169:3211	483955	2	True				
ANR	484099	CallExpression	"memset ( & qval -> n_value [ n1 -> n_len ] , 0 , scale )"		483955	0					
ANR	484100	Callee	memset		483955	0					
ANR	484101	Identifier	memset		483955	0					
ANR	484102	ArgumentList	& qval -> n_value [ n1 -> n_len ]		483955	1					
ANR	484103	Argument	& qval -> n_value [ n1 -> n_len ]		483955	0					
ANR	484104	UnaryOperationExpression	& qval -> n_value [ n1 -> n_len ]		483955	0					
ANR	484105	UnaryOperator	&		483955	0					
ANR	484106	ArrayIndexing	qval -> n_value [ n1 -> n_len ]		483955	1					
ANR	484107	PtrMemberAccess	qval -> n_value		483955	0					
ANR	484108	Identifier	qval		483955	0					
ANR	484109	Identifier	n_value		483955	1					
ANR	484110	PtrMemberAccess	n1 -> n_len		483955	1					
ANR	484111	Identifier	n1		483955	0					
ANR	484112	Identifier	n_len		483955	1					
ANR	484113	Argument	0		483955	1					
ANR	484114	PrimaryExpression	0		483955	0					
ANR	484115	Argument	scale		483955	2					
ANR	484116	Identifier	scale		483955	0					
ANR	484117	ExpressionStatement	"memcpy ( qval -> n_value , n1 -> n_value , n1 -> n_len + MIN ( n1 -> n_scale , scale ) )"	111:3:3216:3291	483955	3	True				
ANR	484118	CallExpression	"memcpy ( qval -> n_value , n1 -> n_value , n1 -> n_len + MIN ( n1 -> n_scale , scale ) )"		483955	0					
ANR	484119	Callee	memcpy		483955	0					
ANR	484120	Identifier	memcpy		483955	0					
ANR	484121	ArgumentList	qval -> n_value		483955	1					
ANR	484122	Argument	qval -> n_value		483955	0					
ANR	484123	PtrMemberAccess	qval -> n_value		483955	0					
ANR	484124	Identifier	qval		483955	0					
ANR	484125	Identifier	n_value		483955	1					
ANR	484126	Argument	n1 -> n_value		483955	1					
ANR	484127	PtrMemberAccess	n1 -> n_value		483955	0					
ANR	484128	Identifier	n1		483955	0					
ANR	484129	Identifier	n_value		483955	1					
ANR	484130	Argument	"n1 -> n_len + MIN ( n1 -> n_scale , scale )"		483955	2					
ANR	484131	AdditiveExpression	"n1 -> n_len + MIN ( n1 -> n_scale , scale )"		483955	0		+			
ANR	484132	PtrMemberAccess	n1 -> n_len		483955	0					
ANR	484133	Identifier	n1		483955	0					
ANR	484134	Identifier	n_len		483955	1					
ANR	484135	CallExpression	"MIN ( n1 -> n_scale , scale )"		483955	1					
ANR	484136	Callee	MIN		483955	0					
ANR	484137	Identifier	MIN		483955	0					
ANR	484138	ArgumentList	n1 -> n_scale		483955	1					
ANR	484139	Argument	n1 -> n_scale		483955	0					
ANR	484140	PtrMemberAccess	n1 -> n_scale		483955	0					
ANR	484141	Identifier	n1		483955	0					
ANR	484142	Identifier	n_scale		483955	1					
ANR	484143	Argument	scale		483955	1					
ANR	484144	Identifier	scale		483955	0					
ANR	484145	ExpressionStatement	bc_free_num ( quot )	113:3:3296:3314	483955	4	True				
ANR	484146	CallExpression	bc_free_num ( quot )		483955	0					
ANR	484147	Callee	bc_free_num		483955	0					
ANR	484148	Identifier	bc_free_num		483955	0					
ANR	484149	ArgumentList	quot		483955	1					
ANR	484150	Argument	quot		483955	0					
ANR	484151	Identifier	quot		483955	0					
ANR	484152	ExpressionStatement	* quot = qval	114:3:3319:3331	483955	5	True				
ANR	484153	AssignmentExpression	* quot = qval		483955	0		=			
ANR	484154	UnaryOperationExpression	* quot		483955	0					
ANR	484155	UnaryOperator	*		483955	0					
ANR	484156	Identifier	quot		483955	1					
ANR	484157	Identifier	qval		483955	1					
ANR	484158	ExpressionStatement	scale2 = n2 -> n_scale	120:2:3489:3509	483955	11	True				
ANR	484159	AssignmentExpression	scale2 = n2 -> n_scale		483955	0		=			
ANR	484160	Identifier	scale2		483955	0					
ANR	484161	PtrMemberAccess	n2 -> n_scale		483955	1					
ANR	484162	Identifier	n2		483955	0					
ANR	484163	Identifier	n_scale		483955	1					
ANR	484164	ExpressionStatement	n2ptr = ( unsigned char * ) n2 -> n_value + n2 -> n_len + scale2 - 1	121:2:3513:3569	483955	12	True				
ANR	484165	AssignmentExpression	n2ptr = ( unsigned char * ) n2 -> n_value + n2 -> n_len + scale2 - 1		483955	0		=			
ANR	484166	Identifier	n2ptr		483955	0					
ANR	484167	AdditiveExpression	( unsigned char * ) n2 -> n_value + n2 -> n_len + scale2 - 1		483955	1		+			
ANR	484168	CastExpression	( unsigned char * ) n2 -> n_value		483955	0					
ANR	484169	CastTarget	unsigned char *		483955	0					
ANR	484170	PtrMemberAccess	n2 -> n_value		483955	1					
ANR	484171	Identifier	n2		483955	0					
ANR	484172	Identifier	n_value		483955	1					
ANR	484173	AdditiveExpression	n2 -> n_len + scale2 - 1		483955	1		+			
ANR	484174	PtrMemberAccess	n2 -> n_len		483955	0					
ANR	484175	Identifier	n2		483955	0					
ANR	484176	Identifier	n_len		483955	1					
ANR	484177	AdditiveExpression	scale2 - 1		483955	1		-			
ANR	484178	Identifier	scale2		483955	0					
ANR	484179	PrimaryExpression	1		483955	1					
ANR	484180	WhileStatement	while ( ( scale2 > 0 ) && ( * n2ptr -- == 0 ) )		483955	13					
ANR	484181	Condition	( scale2 > 0 ) && ( * n2ptr -- == 0 )	122:9:3580:3610	483955	0	True				
ANR	484182	AndExpression	( scale2 > 0 ) && ( * n2ptr -- == 0 )		483955	0		&&			
ANR	484183	RelationalExpression	scale2 > 0		483955	0		>			
ANR	484184	Identifier	scale2		483955	0					
ANR	484185	PrimaryExpression	0		483955	1					
ANR	484186	EqualityExpression	* n2ptr -- == 0		483955	1		==			
ANR	484187	UnaryOperationExpression	* n2ptr --		483955	0					
ANR	484188	UnaryOperator	*		483955	0					
ANR	484189	PostIncDecOperationExpression	n2ptr --		483955	1					
ANR	484190	Identifier	n2ptr		483955	0					
ANR	484191	IncDec	--		483955	1					
ANR	484192	PrimaryExpression	0		483955	1					
ANR	484193	ExpressionStatement	scale2 --	122:42:3613:3621	483955	1	True				
ANR	484194	PostIncDecOperationExpression	scale2 --		483955	0					
ANR	484195	Identifier	scale2		483955	0					
ANR	484196	IncDec	--		483955	1					
ANR	484197	ExpressionStatement	len1 = n1 -> n_len + scale2	124:2:3626:3651	483955	14	True				
ANR	484198	AssignmentExpression	len1 = n1 -> n_len + scale2		483955	0		=			
ANR	484199	Identifier	len1		483955	0					
ANR	484200	AdditiveExpression	n1 -> n_len + scale2		483955	1		+			
ANR	484201	PtrMemberAccess	n1 -> n_len		483955	0					
ANR	484202	Identifier	n1		483955	0					
ANR	484203	Identifier	n_len		483955	1					
ANR	484204	Identifier	scale2		483955	1					
ANR	484205	ExpressionStatement	scale1 = n1 -> n_scale - scale2	125:2:3655:3684	483955	15	True				
ANR	484206	AssignmentExpression	scale1 = n1 -> n_scale - scale2		483955	0		=			
ANR	484207	Identifier	scale1		483955	0					
ANR	484208	AdditiveExpression	n1 -> n_scale - scale2		483955	1		-			
ANR	484209	PtrMemberAccess	n1 -> n_scale		483955	0					
ANR	484210	Identifier	n1		483955	0					
ANR	484211	Identifier	n_scale		483955	1					
ANR	484212	Identifier	scale2		483955	1					
ANR	484213	IfStatement	if ( scale1 < scale )		483955	16					
ANR	484214	Condition	scale1 < scale	126:6:3692:3705	483955	0	True				
ANR	484215	RelationalExpression	scale1 < scale		483955	0		<			
ANR	484216	Identifier	scale1		483955	0					
ANR	484217	Identifier	scale		483955	1					
ANR	484218	ExpressionStatement	extra = scale - scale1	127:4:3712:3734	483955	1	True				
ANR	484219	AssignmentExpression	extra = scale - scale1		483955	0		=			
ANR	484220	Identifier	extra		483955	0					
ANR	484221	AdditiveExpression	scale - scale1		483955	1		-			
ANR	484222	Identifier	scale		483955	0					
ANR	484223	Identifier	scale1		483955	1					
ANR	484224	ElseStatement	else		483955	0					
ANR	484225	ExpressionStatement	extra = 0	129:4:3747:3756	483955	0	True				
ANR	484226	AssignmentExpression	extra = 0		483955	0		=			
ANR	484227	Identifier	extra		483955	0					
ANR	484228	PrimaryExpression	0		483955	1					
ANR	484229	ExpressionStatement	"num1 = ( unsigned char * ) safe_emalloc ( 1 , n1 -> n_len + n1 -> n_scale , extra + 2 )"	130:2:3760:3833	483955	17	True				
ANR	484230	AssignmentExpression	"num1 = ( unsigned char * ) safe_emalloc ( 1 , n1 -> n_len + n1 -> n_scale , extra + 2 )"		483955	0		=			
ANR	484231	Identifier	num1		483955	0					
ANR	484232	CastExpression	"( unsigned char * ) safe_emalloc ( 1 , n1 -> n_len + n1 -> n_scale , extra + 2 )"		483955	1					
ANR	484233	CastTarget	unsigned char *		483955	0					
ANR	484234	CallExpression	"safe_emalloc ( 1 , n1 -> n_len + n1 -> n_scale , extra + 2 )"		483955	1					
ANR	484235	Callee	safe_emalloc		483955	0					
ANR	484236	Identifier	safe_emalloc		483955	0					
ANR	484237	ArgumentList	1		483955	1					
ANR	484238	Argument	1		483955	0					
ANR	484239	PrimaryExpression	1		483955	0					
ANR	484240	Argument	n1 -> n_len + n1 -> n_scale		483955	1					
ANR	484241	AdditiveExpression	n1 -> n_len + n1 -> n_scale		483955	0		+			
ANR	484242	PtrMemberAccess	n1 -> n_len		483955	0					
ANR	484243	Identifier	n1		483955	0					
ANR	484244	Identifier	n_len		483955	1					
ANR	484245	PtrMemberAccess	n1 -> n_scale		483955	1					
ANR	484246	Identifier	n1		483955	0					
ANR	484247	Identifier	n_scale		483955	1					
ANR	484248	Argument	extra + 2		483955	2					
ANR	484249	AdditiveExpression	extra + 2		483955	0		+			
ANR	484250	Identifier	extra		483955	0					
ANR	484251	PrimaryExpression	2		483955	1					
ANR	484252	IfStatement	if ( num1 == NULL )		483955	18					
ANR	484253	Condition	num1 == NULL	131:6:3841:3852	483955	0	True				
ANR	484254	EqualityExpression	num1 == NULL		483955	0		==			
ANR	484255	Identifier	num1		483955	0					
ANR	484256	Identifier	NULL		483955	1					
ANR	484257	ExpressionStatement	bc_out_of_memory ( )	131:20:3855:3873	483955	1	True				
ANR	484258	CallExpression	bc_out_of_memory ( )		483955	0					
ANR	484259	Callee	bc_out_of_memory		483955	0					
ANR	484260	Identifier	bc_out_of_memory		483955	0					
ANR	484261	ArgumentList			483955	1					
ANR	484262	ExpressionStatement	"memset ( num1 , 0 , n1 -> n_len + n1 -> n_scale + extra + 2 )"	132:2:3877:3924	483955	19	True				
ANR	484263	CallExpression	"memset ( num1 , 0 , n1 -> n_len + n1 -> n_scale + extra + 2 )"		483955	0					
ANR	484264	Callee	memset		483955	0					
ANR	484265	Identifier	memset		483955	0					
ANR	484266	ArgumentList	num1		483955	1					
ANR	484267	Argument	num1		483955	0					
ANR	484268	Identifier	num1		483955	0					
ANR	484269	Argument	0		483955	1					
ANR	484270	PrimaryExpression	0		483955	0					
ANR	484271	Argument	n1 -> n_len + n1 -> n_scale + extra + 2		483955	2					
ANR	484272	AdditiveExpression	n1 -> n_len + n1 -> n_scale + extra + 2		483955	0		+			
ANR	484273	PtrMemberAccess	n1 -> n_len		483955	0					
ANR	484274	Identifier	n1		483955	0					
ANR	484275	Identifier	n_len		483955	1					
ANR	484276	AdditiveExpression	n1 -> n_scale + extra + 2		483955	1		+			
ANR	484277	PtrMemberAccess	n1 -> n_scale		483955	0					
ANR	484278	Identifier	n1		483955	0					
ANR	484279	Identifier	n_scale		483955	1					
ANR	484280	AdditiveExpression	extra + 2		483955	1		+			
ANR	484281	Identifier	extra		483955	0					
ANR	484282	PrimaryExpression	2		483955	1					
ANR	484283	ExpressionStatement	"memcpy ( num1 + 1 , n1 -> n_value , n1 -> n_len + n1 -> n_scale )"	133:2:3928:3979	483955	20	True				
ANR	484284	CallExpression	"memcpy ( num1 + 1 , n1 -> n_value , n1 -> n_len + n1 -> n_scale )"		483955	0					
ANR	484285	Callee	memcpy		483955	0					
ANR	484286	Identifier	memcpy		483955	0					
ANR	484287	ArgumentList	num1 + 1		483955	1					
ANR	484288	Argument	num1 + 1		483955	0					
ANR	484289	AdditiveExpression	num1 + 1		483955	0		+			
ANR	484290	Identifier	num1		483955	0					
ANR	484291	PrimaryExpression	1		483955	1					
ANR	484292	Argument	n1 -> n_value		483955	1					
ANR	484293	PtrMemberAccess	n1 -> n_value		483955	0					
ANR	484294	Identifier	n1		483955	0					
ANR	484295	Identifier	n_value		483955	1					
ANR	484296	Argument	n1 -> n_len + n1 -> n_scale		483955	2					
ANR	484297	AdditiveExpression	n1 -> n_len + n1 -> n_scale		483955	0		+			
ANR	484298	PtrMemberAccess	n1 -> n_len		483955	0					
ANR	484299	Identifier	n1		483955	0					
ANR	484300	Identifier	n_len		483955	1					
ANR	484301	PtrMemberAccess	n1 -> n_scale		483955	1					
ANR	484302	Identifier	n1		483955	0					
ANR	484303	Identifier	n_scale		483955	1					
ANR	484304	ExpressionStatement	len2 = n2 -> n_len + scale2	135:2:3984:4009	483955	21	True				
ANR	484305	AssignmentExpression	len2 = n2 -> n_len + scale2		483955	0		=			
ANR	484306	Identifier	len2		483955	0					
ANR	484307	AdditiveExpression	n2 -> n_len + scale2		483955	1		+			
ANR	484308	PtrMemberAccess	n2 -> n_len		483955	0					
ANR	484309	Identifier	n2		483955	0					
ANR	484310	Identifier	n_len		483955	1					
ANR	484311	Identifier	scale2		483955	1					
ANR	484312	ExpressionStatement	"num2 = ( unsigned char * ) safe_emalloc ( 1 , len2 , 1 )"	136:2:4013:4063	483955	22	True				
ANR	484313	AssignmentExpression	"num2 = ( unsigned char * ) safe_emalloc ( 1 , len2 , 1 )"		483955	0		=			
ANR	484314	Identifier	num2		483955	0					
ANR	484315	CastExpression	"( unsigned char * ) safe_emalloc ( 1 , len2 , 1 )"		483955	1					
ANR	484316	CastTarget	unsigned char *		483955	0					
ANR	484317	CallExpression	"safe_emalloc ( 1 , len2 , 1 )"		483955	1					
ANR	484318	Callee	safe_emalloc		483955	0					
ANR	484319	Identifier	safe_emalloc		483955	0					
ANR	484320	ArgumentList	1		483955	1					
ANR	484321	Argument	1		483955	0					
ANR	484322	PrimaryExpression	1		483955	0					
ANR	484323	Argument	len2		483955	1					
ANR	484324	Identifier	len2		483955	0					
ANR	484325	Argument	1		483955	2					
ANR	484326	PrimaryExpression	1		483955	0					
ANR	484327	IfStatement	if ( num2 == NULL )		483955	23					
ANR	484328	Condition	num2 == NULL	137:6:4071:4082	483955	0	True				
ANR	484329	EqualityExpression	num2 == NULL		483955	0		==			
ANR	484330	Identifier	num2		483955	0					
ANR	484331	Identifier	NULL		483955	1					
ANR	484332	ExpressionStatement	bc_out_of_memory ( )	137:20:4085:4103	483955	1	True				
ANR	484333	CallExpression	bc_out_of_memory ( )		483955	0					
ANR	484334	Callee	bc_out_of_memory		483955	0					
ANR	484335	Identifier	bc_out_of_memory		483955	0					
ANR	484336	ArgumentList			483955	1					
ANR	484337	ExpressionStatement	"memcpy ( num2 , n2 -> n_value , len2 )"	138:2:4107:4139	483955	24	True				
ANR	484338	CallExpression	"memcpy ( num2 , n2 -> n_value , len2 )"		483955	0					
ANR	484339	Callee	memcpy		483955	0					
ANR	484340	Identifier	memcpy		483955	0					
ANR	484341	ArgumentList	num2		483955	1					
ANR	484342	Argument	num2		483955	0					
ANR	484343	Identifier	num2		483955	0					
ANR	484344	Argument	n2 -> n_value		483955	1					
ANR	484345	PtrMemberAccess	n2 -> n_value		483955	0					
ANR	484346	Identifier	n2		483955	0					
ANR	484347	Identifier	n_value		483955	1					
ANR	484348	Argument	len2		483955	2					
ANR	484349	Identifier	len2		483955	0					
ANR	484350	ExpressionStatement	* ( num2 + len2 ) = 0	139:2:4143:4159	483955	25	True				
ANR	484351	AssignmentExpression	* ( num2 + len2 ) = 0		483955	0		=			
ANR	484352	UnaryOperationExpression	* ( num2 + len2 )		483955	0					
ANR	484353	UnaryOperator	*		483955	0					
ANR	484354	AdditiveExpression	num2 + len2		483955	1		+			
ANR	484355	Identifier	num2		483955	0					
ANR	484356	Identifier	len2		483955	1					
ANR	484357	PrimaryExpression	0		483955	1					
ANR	484358	ExpressionStatement	n2ptr = num2	140:2:4163:4175	483955	26	True				
ANR	484359	AssignmentExpression	n2ptr = num2		483955	0		=			
ANR	484360	Identifier	n2ptr		483955	0					
ANR	484361	Identifier	num2		483955	1					
ANR	484362	WhileStatement	while ( * n2ptr == 0 )		483955	27					
ANR	484363	Condition	* n2ptr == 0	141:9:4186:4196	483955	0	True				
ANR	484364	EqualityExpression	* n2ptr == 0		483955	0		==			
ANR	484365	UnaryOperationExpression	* n2ptr		483955	0					
ANR	484366	UnaryOperator	*		483955	0					
ANR	484367	Identifier	n2ptr		483955	1					
ANR	484368	PrimaryExpression	0		483955	1					
ANR	484369	CompoundStatement		54:4:1619:1619	483955	1					
ANR	484370	ExpressionStatement	n2ptr ++	143:6:4211:4218	483955	0	True				
ANR	484371	PostIncDecOperationExpression	n2ptr ++		483955	0					
ANR	484372	Identifier	n2ptr		483955	0					
ANR	484373	IncDec	++		483955	1					
ANR	484374	ExpressionStatement	len2 --	144:6:4226:4232	483955	1	True				
ANR	484375	PostIncDecOperationExpression	len2 --		483955	0					
ANR	484376	Identifier	len2		483955	0					
ANR	484377	IncDec	--		483955	1					
ANR	484378	IfStatement	if ( len2 > len1 + scale )		483955	28					
ANR	484379	Condition	len2 > len1 + scale	148:6:4296:4312	483955	0	True				
ANR	484380	RelationalExpression	len2 > len1 + scale		483955	0		>			
ANR	484381	Identifier	len2		483955	0					
ANR	484382	AdditiveExpression	len1 + scale		483955	1		+			
ANR	484383	Identifier	len1		483955	0					
ANR	484384	Identifier	scale		483955	1					
ANR	484385	CompoundStatement		61:4:1735:1735	483955	1					
ANR	484386	ExpressionStatement	qdigits = scale + 1	150:6:4327:4344	483955	0	True				
ANR	484387	AssignmentExpression	qdigits = scale + 1		483955	0		=			
ANR	484388	Identifier	qdigits		483955	0					
ANR	484389	AdditiveExpression	scale + 1		483955	1		+			
ANR	484390	Identifier	scale		483955	0					
ANR	484391	PrimaryExpression	1		483955	1					
ANR	484392	ExpressionStatement	zero = TRUE	151:6:4352:4363	483955	1	True				
ANR	484393	AssignmentExpression	zero = TRUE		483955	0		=			
ANR	484394	Identifier	zero		483955	0					
ANR	484395	Identifier	TRUE		483955	1					
ANR	484396	ElseStatement	else		483955	0					
ANR	484397	CompoundStatement		66:4:1798:1798	483955	0					
ANR	484398	ExpressionStatement	zero = FALSE	155:6:4390:4402	483955	0	True				
ANR	484399	AssignmentExpression	zero = FALSE		483955	0		=			
ANR	484400	Identifier	zero		483955	0					
ANR	484401	Identifier	FALSE		483955	1					
ANR	484402	IfStatement	if ( len2 > len1 )		483955	1					
ANR	484403	Condition	len2 > len1	156:10:4414:4422	483955	0	True				
ANR	484404	RelationalExpression	len2 > len1		483955	0		>			
ANR	484405	Identifier	len2		483955	0					
ANR	484406	Identifier	len1		483955	1					
ANR	484407	ExpressionStatement	qdigits = scale + 1	157:1:4426:4443	483955	1	True				
ANR	484408	AssignmentExpression	qdigits = scale + 1		483955	0		=			
ANR	484409	Identifier	qdigits		483955	0					
ANR	484410	AdditiveExpression	scale + 1		483955	1		+			
ANR	484411	Identifier	scale		483955	0					
ANR	484412	PrimaryExpression	1		483955	1					
ANR	484413	ElseStatement	else		483955	0					
ANR	484414	ExpressionStatement	qdigits = len1 - len2 + scale + 1	159:1:4496:4523	483955	0	True				
ANR	484415	AssignmentExpression	qdigits = len1 - len2 + scale + 1		483955	0		=			
ANR	484416	Identifier	qdigits		483955	0					
ANR	484417	AdditiveExpression	len1 - len2 + scale + 1		483955	1		-			
ANR	484418	Identifier	len1		483955	0					
ANR	484419	AdditiveExpression	len2 + scale + 1		483955	1		+			
ANR	484420	Identifier	len2		483955	0					
ANR	484421	AdditiveExpression	scale + 1		483955	1		+			
ANR	484422	Identifier	scale		483955	0					
ANR	484423	PrimaryExpression	1		483955	1					
ANR	484424	ExpressionStatement	"qval = bc_new_num ( qdigits - scale , scale )"	163:2:4590:4629	483955	29	True				
ANR	484425	AssignmentExpression	"qval = bc_new_num ( qdigits - scale , scale )"		483955	0		=			
ANR	484426	Identifier	qval		483955	0					
ANR	484427	CallExpression	"bc_new_num ( qdigits - scale , scale )"		483955	1					
ANR	484428	Callee	bc_new_num		483955	0					
ANR	484429	Identifier	bc_new_num		483955	0					
ANR	484430	ArgumentList	qdigits - scale		483955	1					
ANR	484431	Argument	qdigits - scale		483955	0					
ANR	484432	AdditiveExpression	qdigits - scale		483955	0		-			
ANR	484433	Identifier	qdigits		483955	0					
ANR	484434	Identifier	scale		483955	1					
ANR	484435	Argument	scale		483955	1					
ANR	484436	Identifier	scale		483955	0					
ANR	484437	ExpressionStatement	"memset ( qval -> n_value , 0 , qdigits )"	164:2:4633:4667	483955	30	True				
ANR	484438	CallExpression	"memset ( qval -> n_value , 0 , qdigits )"		483955	0					
ANR	484439	Callee	memset		483955	0					
ANR	484440	Identifier	memset		483955	0					
ANR	484441	ArgumentList	qval -> n_value		483955	1					
ANR	484442	Argument	qval -> n_value		483955	0					
ANR	484443	PtrMemberAccess	qval -> n_value		483955	0					
ANR	484444	Identifier	qval		483955	0					
ANR	484445	Identifier	n_value		483955	1					
ANR	484446	Argument	0		483955	1					
ANR	484447	PrimaryExpression	0		483955	0					
ANR	484448	Argument	qdigits		483955	2					
ANR	484449	Identifier	qdigits		483955	0					
ANR	484450	ExpressionStatement	"mval = ( unsigned char * ) safe_emalloc ( 1 , len2 , 1 )"	167:2:4729:4779	483955	31	True				
ANR	484451	AssignmentExpression	"mval = ( unsigned char * ) safe_emalloc ( 1 , len2 , 1 )"		483955	0		=			
ANR	484452	Identifier	mval		483955	0					
ANR	484453	CastExpression	"( unsigned char * ) safe_emalloc ( 1 , len2 , 1 )"		483955	1					
ANR	484454	CastTarget	unsigned char *		483955	0					
ANR	484455	CallExpression	"safe_emalloc ( 1 , len2 , 1 )"		483955	1					
ANR	484456	Callee	safe_emalloc		483955	0					
ANR	484457	Identifier	safe_emalloc		483955	0					
ANR	484458	ArgumentList	1		483955	1					
ANR	484459	Argument	1		483955	0					
ANR	484460	PrimaryExpression	1		483955	0					
ANR	484461	Argument	len2		483955	1					
ANR	484462	Identifier	len2		483955	0					
ANR	484463	Argument	1		483955	2					
ANR	484464	PrimaryExpression	1		483955	0					
ANR	484465	IfStatement	if ( mval == NULL )		483955	32					
ANR	484466	Condition	mval == NULL	168:6:4787:4798	483955	0	True				
ANR	484467	EqualityExpression	mval == NULL		483955	0		==			
ANR	484468	Identifier	mval		483955	0					
ANR	484469	Identifier	NULL		483955	1					
ANR	484470	ExpressionStatement	bc_out_of_memory ( )	168:20:4801:4820	483955	1	True				
ANR	484471	CallExpression	bc_out_of_memory ( )		483955	0					
ANR	484472	Callee	bc_out_of_memory		483955	0					
ANR	484473	Identifier	bc_out_of_memory		483955	0					
ANR	484474	ArgumentList			483955	1					
ANR	484475	IfStatement	if ( ! zero )		483955	33					
ANR	484476	Condition	! zero	171:6:4872:4876	483955	0	True				
ANR	484477	UnaryOperationExpression	! zero		483955	0					
ANR	484478	UnaryOperator	!		483955	0					
ANR	484479	Identifier	zero		483955	1					
ANR	484480	CompoundStatement		84:4:2299:2299	483955	1					
ANR	484481	ExpressionStatement	norm = 10 / ( ( int ) * n2ptr + 1 )	174:6:4913:4943	483955	0	True				
ANR	484482	AssignmentExpression	norm = 10 / ( ( int ) * n2ptr + 1 )		483955	0		=			
ANR	484483	Identifier	norm		483955	0					
ANR	484484	MultiplicativeExpression	10 / ( ( int ) * n2ptr + 1 )		483955	1		/			
ANR	484485	PrimaryExpression	10		483955	0					
ANR	484486	AdditiveExpression	( int ) * n2ptr + 1		483955	1		+			
ANR	484487	CastExpression	( int ) * n2ptr		483955	0					
ANR	484488	CastTarget	int		483955	0					
ANR	484489	UnaryOperationExpression	* n2ptr		483955	1					
ANR	484490	UnaryOperator	*		483955	0					
ANR	484491	Identifier	n2ptr		483955	1					
ANR	484492	PrimaryExpression	1		483955	1					
ANR	484493	IfStatement	if ( norm != 1 )		483955	1					
ANR	484494	Condition	norm != 1	175:10:4955:4963	483955	0	True				
ANR	484495	EqualityExpression	norm != 1		483955	0		!=			
ANR	484496	Identifier	norm		483955	0					
ANR	484497	PrimaryExpression	1		483955	1					
ANR	484498	CompoundStatement		88:1:2383:2383	483955	1					
ANR	484499	ExpressionStatement	"_one_mult ( num1 , len1 + scale1 + extra + 1 , norm , num1 )"	177:3:4972:5021	483955	0	True				
ANR	484500	CallExpression	"_one_mult ( num1 , len1 + scale1 + extra + 1 , norm , num1 )"		483955	0					
ANR	484501	Callee	_one_mult		483955	0					
ANR	484502	Identifier	_one_mult		483955	0					
ANR	484503	ArgumentList	num1		483955	1					
ANR	484504	Argument	num1		483955	0					
ANR	484505	Identifier	num1		483955	0					
ANR	484506	Argument	len1 + scale1 + extra + 1		483955	1					
ANR	484507	AdditiveExpression	len1 + scale1 + extra + 1		483955	0		+			
ANR	484508	Identifier	len1		483955	0					
ANR	484509	AdditiveExpression	scale1 + extra + 1		483955	1		+			
ANR	484510	Identifier	scale1		483955	0					
ANR	484511	AdditiveExpression	extra + 1		483955	1		+			
ANR	484512	Identifier	extra		483955	0					
ANR	484513	PrimaryExpression	1		483955	1					
ANR	484514	Argument	norm		483955	2					
ANR	484515	Identifier	norm		483955	0					
ANR	484516	Argument	num1		483955	3					
ANR	484517	Identifier	num1		483955	0					
ANR	484518	ExpressionStatement	"_one_mult ( n2ptr , len2 , norm , n2ptr )"	178:3:5026:5062	483955	1	True				
ANR	484519	CallExpression	"_one_mult ( n2ptr , len2 , norm , n2ptr )"		483955	0					
ANR	484520	Callee	_one_mult		483955	0					
ANR	484521	Identifier	_one_mult		483955	0					
ANR	484522	ArgumentList	n2ptr		483955	1					
ANR	484523	Argument	n2ptr		483955	0					
ANR	484524	Identifier	n2ptr		483955	0					
ANR	484525	Argument	len2		483955	1					
ANR	484526	Identifier	len2		483955	0					
ANR	484527	Argument	norm		483955	2					
ANR	484528	Identifier	norm		483955	0					
ANR	484529	Argument	n2ptr		483955	3					
ANR	484530	Identifier	n2ptr		483955	0					
ANR	484531	ExpressionStatement	qdig = 0	182:6:5110:5118	483955	2	True				
ANR	484532	AssignmentExpression	qdig = 0		483955	0		=			
ANR	484533	Identifier	qdig		483955	0					
ANR	484534	PrimaryExpression	0		483955	1					
ANR	484535	IfStatement	if ( len2 > len1 )		483955	3					
ANR	484536	Condition	len2 > len1	183:10:5130:5140	483955	0	True				
ANR	484537	RelationalExpression	len2 > len1		483955	0		>			
ANR	484538	Identifier	len2		483955	0					
ANR	484539	Identifier	len1		483955	1					
ANR	484540	ExpressionStatement	qptr = ( unsigned char * ) qval -> n_value + len2 - len1	184:1:5144:5192	483955	1	True				
ANR	484541	AssignmentExpression	qptr = ( unsigned char * ) qval -> n_value + len2 - len1		483955	0		=			
ANR	484542	Identifier	qptr		483955	0					
ANR	484543	AdditiveExpression	( unsigned char * ) qval -> n_value + len2 - len1		483955	1		+			
ANR	484544	CastExpression	( unsigned char * ) qval -> n_value		483955	0					
ANR	484545	CastTarget	unsigned char *		483955	0					
ANR	484546	PtrMemberAccess	qval -> n_value		483955	1					
ANR	484547	Identifier	qval		483955	0					
ANR	484548	Identifier	n_value		483955	1					
ANR	484549	AdditiveExpression	len2 - len1		483955	1		-			
ANR	484550	Identifier	len2		483955	0					
ANR	484551	Identifier	len1		483955	1					
ANR	484552	ElseStatement	else		483955	0					
ANR	484553	ExpressionStatement	qptr = ( unsigned char * ) qval -> n_value	186:1:5206:5244	483955	0	True				
ANR	484554	AssignmentExpression	qptr = ( unsigned char * ) qval -> n_value		483955	0		=			
ANR	484555	Identifier	qptr		483955	0					
ANR	484556	CastExpression	( unsigned char * ) qval -> n_value		483955	1					
ANR	484557	CastTarget	unsigned char *		483955	0					
ANR	484558	PtrMemberAccess	qval -> n_value		483955	1					
ANR	484559	Identifier	qval		483955	0					
ANR	484560	Identifier	n_value		483955	1					
ANR	484561	WhileStatement	while ( qdig <= len1 + scale - len2 )		483955	4					
ANR	484562	Condition	qdig <= len1 + scale - len2	189:13:5277:5299	483955	0	True				
ANR	484563	RelationalExpression	qdig <= len1 + scale - len2		483955	0		<=			
ANR	484564	Identifier	qdig		483955	0					
ANR	484565	AdditiveExpression	len1 + scale - len2		483955	1		+			
ANR	484566	Identifier	len1		483955	0					
ANR	484567	AdditiveExpression	scale - len2		483955	1		-			
ANR	484568	Identifier	scale		483955	0					
ANR	484569	Identifier	len2		483955	1					
ANR	484570	CompoundStatement		102:1:2719:2719	483955	1					
ANR	484571	IfStatement	if ( * n2ptr == num1 [ qdig ] )		483955	0					
ANR	484572	Condition	* n2ptr == num1 [ qdig ]	192:7:5357:5376	483955	0	True				
ANR	484573	EqualityExpression	* n2ptr == num1 [ qdig ]		483955	0		==			
ANR	484574	UnaryOperationExpression	* n2ptr		483955	0					
ANR	484575	UnaryOperator	*		483955	0					
ANR	484576	Identifier	n2ptr		483955	1					
ANR	484577	ArrayIndexing	num1 [ qdig ]		483955	1					
ANR	484578	Identifier	num1		483955	0					
ANR	484579	Identifier	qdig		483955	1					
ANR	484580	ExpressionStatement	qguess = 9	193:5:5384:5394	483955	1	True				
ANR	484581	AssignmentExpression	qguess = 9		483955	0		=			
ANR	484582	Identifier	qguess		483955	0					
ANR	484583	PrimaryExpression	9		483955	1					
ANR	484584	ElseStatement	else		483955	0					
ANR	484585	ExpressionStatement	qguess = ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] ) / * n2ptr	195:5:5409:5457	483955	0	True				
ANR	484586	AssignmentExpression	qguess = ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] ) / * n2ptr		483955	0		=			
ANR	484587	Identifier	qguess		483955	0					
ANR	484588	MultiplicativeExpression	( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] ) / * n2ptr		483955	1		/			
ANR	484589	AdditiveExpression	num1 [ qdig ] * 10 + num1 [ qdig + 1 ]		483955	0		+			
ANR	484590	MultiplicativeExpression	num1 [ qdig ] * 10		483955	0		*			
ANR	484591	ArrayIndexing	num1 [ qdig ]		483955	0					
ANR	484592	Identifier	num1		483955	0					
ANR	484593	Identifier	qdig		483955	1					
ANR	484594	PrimaryExpression	10		483955	1					
ANR	484595	ArrayIndexing	num1 [ qdig + 1 ]		483955	1					
ANR	484596	Identifier	num1		483955	0					
ANR	484597	AdditiveExpression	qdig + 1		483955	1		+			
ANR	484598	Identifier	qdig		483955	0					
ANR	484599	PrimaryExpression	1		483955	1					
ANR	484600	UnaryOperationExpression	* n2ptr		483955	1					
ANR	484601	UnaryOperator	*		483955	0					
ANR	484602	Identifier	n2ptr		483955	1					
ANR	484603	IfStatement	if ( n2ptr [ 1 ] * qguess > ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ] )		483955	1					
ANR	484604	Condition	n2ptr [ 1 ] * qguess > ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ]	198:7:5489:5585	483955	0	True				
ANR	484605	RelationalExpression	n2ptr [ 1 ] * qguess > ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ]		483955	0		>			
ANR	484606	MultiplicativeExpression	n2ptr [ 1 ] * qguess		483955	0		*			
ANR	484607	ArrayIndexing	n2ptr [ 1 ]		483955	0					
ANR	484608	Identifier	n2ptr		483955	0					
ANR	484609	PrimaryExpression	1		483955	1					
ANR	484610	Identifier	qguess		483955	1					
ANR	484611	AdditiveExpression	( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ]		483955	1		+			
ANR	484612	MultiplicativeExpression	( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10		483955	0		*			
ANR	484613	AdditiveExpression	num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess		483955	0		+			
ANR	484614	MultiplicativeExpression	num1 [ qdig ] * 10		483955	0		*			
ANR	484615	ArrayIndexing	num1 [ qdig ]		483955	0					
ANR	484616	Identifier	num1		483955	0					
ANR	484617	Identifier	qdig		483955	1					
ANR	484618	PrimaryExpression	10		483955	1					
ANR	484619	AdditiveExpression	num1 [ qdig + 1 ] - * n2ptr * qguess		483955	1		-			
ANR	484620	ArrayIndexing	num1 [ qdig + 1 ]		483955	0					
ANR	484621	Identifier	num1		483955	0					
ANR	484622	AdditiveExpression	qdig + 1		483955	1		+			
ANR	484623	Identifier	qdig		483955	0					
ANR	484624	PrimaryExpression	1		483955	1					
ANR	484625	MultiplicativeExpression	* n2ptr * qguess		483955	1		*			
ANR	484626	UnaryOperationExpression	* n2ptr		483955	0					
ANR	484627	UnaryOperator	*		483955	0					
ANR	484628	Identifier	n2ptr		483955	1					
ANR	484629	Identifier	qguess		483955	1					
ANR	484630	PrimaryExpression	10		483955	1					
ANR	484631	ArrayIndexing	num1 [ qdig + 2 ]		483955	1					
ANR	484632	Identifier	num1		483955	0					
ANR	484633	AdditiveExpression	qdig + 2		483955	1		+			
ANR	484634	Identifier	qdig		483955	0					
ANR	484635	PrimaryExpression	2		483955	1					
ANR	484636	CompoundStatement		113:5:3009:3009	483955	1					
ANR	484637	ExpressionStatement	qguess --	202:7:5602:5610	483955	0	True				
ANR	484638	PostIncDecOperationExpression	qguess --		483955	0					
ANR	484639	Identifier	qguess		483955	0					
ANR	484640	IncDec	--		483955	1					
ANR	484641	IfStatement	if ( n2ptr [ 1 ] * qguess > ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ] )		483955	1					
ANR	484642	Condition	n2ptr [ 1 ] * qguess > ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ]	204:11:5647:5736	483955	0	True				
ANR	484643	RelationalExpression	n2ptr [ 1 ] * qguess > ( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ]		483955	0		>			
ANR	484644	MultiplicativeExpression	n2ptr [ 1 ] * qguess		483955	0		*			
ANR	484645	ArrayIndexing	n2ptr [ 1 ]		483955	0					
ANR	484646	Identifier	n2ptr		483955	0					
ANR	484647	PrimaryExpression	1		483955	1					
ANR	484648	Identifier	qguess		483955	1					
ANR	484649	AdditiveExpression	( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10 + num1 [ qdig + 2 ]		483955	1		+			
ANR	484650	MultiplicativeExpression	( num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess ) * 10		483955	0		*			
ANR	484651	AdditiveExpression	num1 [ qdig ] * 10 + num1 [ qdig + 1 ] - * n2ptr * qguess		483955	0		+			
ANR	484652	MultiplicativeExpression	num1 [ qdig ] * 10		483955	0		*			
ANR	484653	ArrayIndexing	num1 [ qdig ]		483955	0					
ANR	484654	Identifier	num1		483955	0					
ANR	484655	Identifier	qdig		483955	1					
ANR	484656	PrimaryExpression	10		483955	1					
ANR	484657	AdditiveExpression	num1 [ qdig + 1 ] - * n2ptr * qguess		483955	1		-			
ANR	484658	ArrayIndexing	num1 [ qdig + 1 ]		483955	0					
ANR	484659	Identifier	num1		483955	0					
ANR	484660	AdditiveExpression	qdig + 1		483955	1		+			
ANR	484661	Identifier	qdig		483955	0					
ANR	484662	PrimaryExpression	1		483955	1					
ANR	484663	MultiplicativeExpression	* n2ptr * qguess		483955	1		*			
ANR	484664	UnaryOperationExpression	* n2ptr		483955	0					
ANR	484665	UnaryOperator	*		483955	0					
ANR	484666	Identifier	n2ptr		483955	1					
ANR	484667	Identifier	qguess		483955	1					
ANR	484668	PrimaryExpression	10		483955	1					
ANR	484669	ArrayIndexing	num1 [ qdig + 2 ]		483955	1					
ANR	484670	Identifier	num1		483955	0					
ANR	484671	AdditiveExpression	qdig + 2		483955	1		+			
ANR	484672	Identifier	qdig		483955	0					
ANR	484673	PrimaryExpression	2		483955	1					
ANR	484674	ExpressionStatement	qguess --	207:2:5741:5749	483955	1	True				
ANR	484675	PostIncDecOperationExpression	qguess --		483955	0					
ANR	484676	Identifier	qguess		483955	0					
ANR	484677	IncDec	--		483955	1					
ANR	484678	ExpressionStatement	borrow = 0	211:3:5794:5804	483955	2	True				
ANR	484679	AssignmentExpression	borrow = 0		483955	0		=			
ANR	484680	Identifier	borrow		483955	0					
ANR	484681	PrimaryExpression	0		483955	1					
ANR	484682	IfStatement	if ( qguess != 0 )		483955	3					
ANR	484683	Condition	qguess != 0	212:7:5813:5823	483955	0	True				
ANR	484684	EqualityExpression	qguess != 0		483955	0		!=			
ANR	484685	Identifier	qguess		483955	0					
ANR	484686	PrimaryExpression	0		483955	1					
ANR	484687	CompoundStatement		125:5:3247:3247	483955	1					
ANR	484688	ExpressionStatement	* mval = 0	214:7:5840:5849	483955	0	True				
ANR	484689	AssignmentExpression	* mval = 0		483955	0		=			
ANR	484690	UnaryOperationExpression	* mval		483955	0					
ANR	484691	UnaryOperator	*		483955	0					
ANR	484692	Identifier	mval		483955	1					
ANR	484693	PrimaryExpression	0		483955	1					
ANR	484694	ExpressionStatement	"_one_mult ( n2ptr , len2 , qguess , mval + 1 )"	215:7:5858:5897	483955	1	True				
ANR	484695	CallExpression	"_one_mult ( n2ptr , len2 , qguess , mval + 1 )"		483955	0					
ANR	484696	Callee	_one_mult		483955	0					
ANR	484697	Identifier	_one_mult		483955	0					
ANR	484698	ArgumentList	n2ptr		483955	1					
ANR	484699	Argument	n2ptr		483955	0					
ANR	484700	Identifier	n2ptr		483955	0					
ANR	484701	Argument	len2		483955	1					
ANR	484702	Identifier	len2		483955	0					
ANR	484703	Argument	qguess		483955	2					
ANR	484704	Identifier	qguess		483955	0					
ANR	484705	Argument	mval + 1		483955	3					
ANR	484706	AdditiveExpression	mval + 1		483955	0		+			
ANR	484707	Identifier	mval		483955	0					
ANR	484708	PrimaryExpression	1		483955	1					
ANR	484709	ExpressionStatement	ptr1 = ( unsigned char * ) num1 + qdig + len2	216:7:5906:5945	483955	2	True				
ANR	484710	AssignmentExpression	ptr1 = ( unsigned char * ) num1 + qdig + len2		483955	0		=			
ANR	484711	Identifier	ptr1		483955	0					
ANR	484712	AdditiveExpression	( unsigned char * ) num1 + qdig + len2		483955	1		+			
ANR	484713	CastExpression	( unsigned char * ) num1		483955	0					
ANR	484714	CastTarget	unsigned char *		483955	0					
ANR	484715	Identifier	num1		483955	1					
ANR	484716	AdditiveExpression	qdig + len2		483955	1		+			
ANR	484717	Identifier	qdig		483955	0					
ANR	484718	Identifier	len2		483955	1					
ANR	484719	ExpressionStatement	ptr2 = ( unsigned char * ) mval + len2	217:7:5954:5988	483955	3	True				
ANR	484720	AssignmentExpression	ptr2 = ( unsigned char * ) mval + len2		483955	0		=			
ANR	484721	Identifier	ptr2		483955	0					
ANR	484722	AdditiveExpression	( unsigned char * ) mval + len2		483955	1		+			
ANR	484723	CastExpression	( unsigned char * ) mval		483955	0					
ANR	484724	CastTarget	unsigned char *		483955	0					
ANR	484725	Identifier	mval		483955	1					
ANR	484726	Identifier	len2		483955	1					
ANR	484727	ForStatement	for ( count = 0 ; count < len2 + 1 ; count ++ )		483955	4					
ANR	484728	ForInit	count = 0 ;	218:12:6002:6011	483955	0	True				
ANR	484729	AssignmentExpression	count = 0		483955	0		=			
ANR	484730	Identifier	count		483955	0					
ANR	484731	PrimaryExpression	0		483955	1					
ANR	484732	Condition	count < len2 + 1	218:23:6013:6026	483955	1	True				
ANR	484733	RelationalExpression	count < len2 + 1		483955	0		<			
ANR	484734	Identifier	count		483955	0					
ANR	484735	AdditiveExpression	len2 + 1		483955	1		+			
ANR	484736	Identifier	len2		483955	0					
ANR	484737	PrimaryExpression	1		483955	1					
ANR	484738	PostIncDecOperationExpression	count ++	218:39:6029:6035	483955	2	True				
ANR	484739	Identifier	count		483955	0					
ANR	484740	IncDec	++		483955	1					
ANR	484741	CompoundStatement		131:2:3456:3456	483955	3					
ANR	484742	ExpressionStatement	val = ( int ) * ptr1 - ( int ) * ptr2 -- - borrow	220:4:6046:6088	483955	0	True				
ANR	484743	AssignmentExpression	val = ( int ) * ptr1 - ( int ) * ptr2 -- - borrow		483955	0		=			
ANR	484744	Identifier	val		483955	0					
ANR	484745	AdditiveExpression	( int ) * ptr1 - ( int ) * ptr2 -- - borrow		483955	1		-			
ANR	484746	CastExpression	( int ) * ptr1		483955	0					
ANR	484747	CastTarget	int		483955	0					
ANR	484748	UnaryOperationExpression	* ptr1		483955	1					
ANR	484749	UnaryOperator	*		483955	0					
ANR	484750	Identifier	ptr1		483955	1					
ANR	484751	AdditiveExpression	( int ) * ptr2 -- - borrow		483955	1		-			
ANR	484752	CastExpression	( int ) * ptr2 --		483955	0					
ANR	484753	CastTarget	int		483955	0					
ANR	484754	UnaryOperationExpression	* ptr2 --		483955	1					
ANR	484755	UnaryOperator	*		483955	0					
ANR	484756	PostIncDecOperationExpression	ptr2 --		483955	1					
ANR	484757	Identifier	ptr2		483955	0					
ANR	484758	IncDec	--		483955	1					
ANR	484759	Identifier	borrow		483955	1					
ANR	484760	IfStatement	if ( val < 0 )		483955	1					
ANR	484761	Condition	val < 0	221:8:6098:6104	483955	0	True				
ANR	484762	RelationalExpression	val < 0		483955	0		<			
ANR	484763	Identifier	val		483955	0					
ANR	484764	PrimaryExpression	0		483955	1					
ANR	484765	CompoundStatement		134:6:3529:3529	483955	1					
ANR	484766	ExpressionStatement	val += 10	223:8:6123:6132	483955	0	True				
ANR	484767	AssignmentExpression	val += 10		483955	0		+=			
ANR	484768	Identifier	val		483955	0					
ANR	484769	PrimaryExpression	10		483955	1					
ANR	484770	ExpressionStatement	borrow = 1	224:8:6142:6152	483955	1	True				
ANR	484771	AssignmentExpression	borrow = 1		483955	0		=			
ANR	484772	Identifier	borrow		483955	0					
ANR	484773	PrimaryExpression	1		483955	1					
ANR	484774	ElseStatement	else		483955	0					
ANR	484775	ExpressionStatement	borrow = 0	227:6:6177:6187	483955	0	True				
ANR	484776	AssignmentExpression	borrow = 0		483955	0		=			
ANR	484777	Identifier	borrow		483955	0					
ANR	484778	PrimaryExpression	0		483955	1					
ANR	484779	ExpressionStatement	* ptr1 -- = val	228:4:6193:6206	483955	2	True				
ANR	484780	AssignmentExpression	* ptr1 -- = val		483955	0		=			
ANR	484781	UnaryOperationExpression	* ptr1 --		483955	0					
ANR	484782	UnaryOperator	*		483955	0					
ANR	484783	PostIncDecOperationExpression	ptr1 --		483955	1					
ANR	484784	Identifier	ptr1		483955	0					
ANR	484785	IncDec	--		483955	1					
ANR	484786	Identifier	val		483955	1					
ANR	484787	IfStatement	if ( borrow == 1 )		483955	4					
ANR	484788	Condition	borrow == 1	233:7:6262:6272	483955	0	True				
ANR	484789	EqualityExpression	borrow == 1		483955	0		==			
ANR	484790	Identifier	borrow		483955	0					
ANR	484791	PrimaryExpression	1		483955	1					
ANR	484792	CompoundStatement		146:5:3696:3696	483955	1					
ANR	484793	ExpressionStatement	qguess --	235:7:6289:6297	483955	0	True				
ANR	484794	PostIncDecOperationExpression	qguess --		483955	0					
ANR	484795	Identifier	qguess		483955	0					
ANR	484796	IncDec	--		483955	1					
ANR	484797	ExpressionStatement	ptr1 = ( unsigned char * ) num1 + qdig + len2	236:7:6306:6345	483955	1	True				
ANR	484798	AssignmentExpression	ptr1 = ( unsigned char * ) num1 + qdig + len2		483955	0		=			
ANR	484799	Identifier	ptr1		483955	0					
ANR	484800	AdditiveExpression	( unsigned char * ) num1 + qdig + len2		483955	1		+			
ANR	484801	CastExpression	( unsigned char * ) num1		483955	0					
ANR	484802	CastTarget	unsigned char *		483955	0					
ANR	484803	Identifier	num1		483955	1					
ANR	484804	AdditiveExpression	qdig + len2		483955	1		+			
ANR	484805	Identifier	qdig		483955	0					
ANR	484806	Identifier	len2		483955	1					
ANR	484807	ExpressionStatement	ptr2 = ( unsigned char * ) n2ptr + len2 - 1	237:7:6354:6391	483955	2	True				
ANR	484808	AssignmentExpression	ptr2 = ( unsigned char * ) n2ptr + len2 - 1		483955	0		=			
ANR	484809	Identifier	ptr2		483955	0					
ANR	484810	AdditiveExpression	( unsigned char * ) n2ptr + len2 - 1		483955	1		+			
ANR	484811	CastExpression	( unsigned char * ) n2ptr		483955	0					
ANR	484812	CastTarget	unsigned char *		483955	0					
ANR	484813	Identifier	n2ptr		483955	1					
ANR	484814	AdditiveExpression	len2 - 1		483955	1		-			
ANR	484815	Identifier	len2		483955	0					
ANR	484816	PrimaryExpression	1		483955	1					
ANR	484817	ExpressionStatement	carry = 0	238:7:6400:6409	483955	3	True				
ANR	484818	AssignmentExpression	carry = 0		483955	0		=			
ANR	484819	Identifier	carry		483955	0					
ANR	484820	PrimaryExpression	0		483955	1					
ANR	484821	ForStatement	for ( count = 0 ; count < len2 ; count ++ )		483955	4					
ANR	484822	ForInit	count = 0 ;	239:12:6423:6432	483955	0	True				
ANR	484823	AssignmentExpression	count = 0		483955	0		=			
ANR	484824	Identifier	count		483955	0					
ANR	484825	PrimaryExpression	0		483955	1					
ANR	484826	Condition	count < len2	239:23:6434:6445	483955	1	True				
ANR	484827	RelationalExpression	count < len2		483955	0		<			
ANR	484828	Identifier	count		483955	0					
ANR	484829	Identifier	len2		483955	1					
ANR	484830	PostIncDecOperationExpression	count ++	239:37:6448:6454	483955	2	True				
ANR	484831	Identifier	count		483955	0					
ANR	484832	IncDec	++		483955	1					
ANR	484833	CompoundStatement		152:2:3875:3875	483955	3					
ANR	484834	ExpressionStatement	val = ( int ) * ptr1 + ( int ) * ptr2 -- + carry	241:4:6465:6506	483955	0	True				
ANR	484835	AssignmentExpression	val = ( int ) * ptr1 + ( int ) * ptr2 -- + carry		483955	0		=			
ANR	484836	Identifier	val		483955	0					
ANR	484837	AdditiveExpression	( int ) * ptr1 + ( int ) * ptr2 -- + carry		483955	1		+			
ANR	484838	CastExpression	( int ) * ptr1		483955	0					
ANR	484839	CastTarget	int		483955	0					
ANR	484840	UnaryOperationExpression	* ptr1		483955	1					
ANR	484841	UnaryOperator	*		483955	0					
ANR	484842	Identifier	ptr1		483955	1					
ANR	484843	AdditiveExpression	( int ) * ptr2 -- + carry		483955	1		+			
ANR	484844	CastExpression	( int ) * ptr2 --		483955	0					
ANR	484845	CastTarget	int		483955	0					
ANR	484846	UnaryOperationExpression	* ptr2 --		483955	1					
ANR	484847	UnaryOperator	*		483955	0					
ANR	484848	PostIncDecOperationExpression	ptr2 --		483955	1					
ANR	484849	Identifier	ptr2		483955	0					
ANR	484850	IncDec	--		483955	1					
ANR	484851	Identifier	carry		483955	1					
ANR	484852	IfStatement	if ( val > 9 )		483955	1					
ANR	484853	Condition	val > 9	242:8:6516:6522	483955	0	True				
ANR	484854	RelationalExpression	val > 9		483955	0		>			
ANR	484855	Identifier	val		483955	0					
ANR	484856	PrimaryExpression	9		483955	1					
ANR	484857	CompoundStatement		155:6:3947:3947	483955	1					
ANR	484858	ExpressionStatement	val -= 10	244:8:6541:6550	483955	0	True				
ANR	484859	AssignmentExpression	val -= 10		483955	0		-=			
ANR	484860	Identifier	val		483955	0					
ANR	484861	PrimaryExpression	10		483955	1					
ANR	484862	ExpressionStatement	carry = 1	245:8:6560:6569	483955	1	True				
ANR	484863	AssignmentExpression	carry = 1		483955	0		=			
ANR	484864	Identifier	carry		483955	0					
ANR	484865	PrimaryExpression	1		483955	1					
ANR	484866	ElseStatement	else		483955	0					
ANR	484867	ExpressionStatement	carry = 0	248:6:6594:6603	483955	0	True				
ANR	484868	AssignmentExpression	carry = 0		483955	0		=			
ANR	484869	Identifier	carry		483955	0					
ANR	484870	PrimaryExpression	0		483955	1					
ANR	484871	ExpressionStatement	* ptr1 -- = val	249:4:6609:6622	483955	2	True				
ANR	484872	AssignmentExpression	* ptr1 -- = val		483955	0		=			
ANR	484873	UnaryOperationExpression	* ptr1 --		483955	0					
ANR	484874	UnaryOperator	*		483955	0					
ANR	484875	PostIncDecOperationExpression	ptr1 --		483955	1					
ANR	484876	Identifier	ptr1		483955	0					
ANR	484877	IncDec	--		483955	1					
ANR	484878	Identifier	val		483955	1					
ANR	484879	IfStatement	if ( carry == 1 )		483955	5					
ANR	484880	Condition	carry == 1	251:11:6639:6648	483955	0	True				
ANR	484881	EqualityExpression	carry == 1		483955	0		==			
ANR	484882	Identifier	carry		483955	0					
ANR	484883	PrimaryExpression	1		483955	1					
ANR	484884	ExpressionStatement	* ptr1 = ( * ptr1 + 1 ) % 10	251:23:6651:6675	483955	1	True				
ANR	484885	AssignmentExpression	* ptr1 = ( * ptr1 + 1 ) % 10		483955	0		=			
ANR	484886	UnaryOperationExpression	* ptr1		483955	0					
ANR	484887	UnaryOperator	*		483955	0					
ANR	484888	Identifier	ptr1		483955	1					
ANR	484889	MultiplicativeExpression	( * ptr1 + 1 ) % 10		483955	1		%			
ANR	484890	AdditiveExpression	* ptr1 + 1		483955	0		+			
ANR	484891	UnaryOperationExpression	* ptr1		483955	0					
ANR	484892	UnaryOperator	*		483955	0					
ANR	484893	Identifier	ptr1		483955	1					
ANR	484894	PrimaryExpression	1		483955	1					
ANR	484895	PrimaryExpression	10		483955	1					
ANR	484896	ExpressionStatement	* qptr ++ = qguess	255:3:6729:6746	483955	5	True				
ANR	484897	AssignmentExpression	* qptr ++ = qguess		483955	0		=			
ANR	484898	UnaryOperationExpression	* qptr ++		483955	0					
ANR	484899	UnaryOperator	*		483955	0					
ANR	484900	PostIncDecOperationExpression	qptr ++		483955	1					
ANR	484901	Identifier	qptr		483955	0					
ANR	484902	IncDec	++		483955	1					
ANR	484903	Identifier	qguess		483955	1					
ANR	484904	ExpressionStatement	qdig ++	256:3:6751:6757	483955	6	True				
ANR	484905	PostIncDecOperationExpression	qdig ++		483955	0					
ANR	484906	Identifier	qdig		483955	0					
ANR	484907	IncDec	++		483955	1					
ANR	484908	ExpressionStatement	qval -> n_sign = ( n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS )	261:2:6811:6869	483955	34	True				
ANR	484909	AssignmentExpression	qval -> n_sign = ( n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS )		483955	0		=			
ANR	484910	PtrMemberAccess	qval -> n_sign		483955	0					
ANR	484911	Identifier	qval		483955	0					
ANR	484912	Identifier	n_sign		483955	1					
ANR	484913	ConditionalExpression	n1 -> n_sign == n2 -> n_sign ? PLUS : MINUS		483955	1					
ANR	484914	Condition	n1 -> n_sign == n2 -> n_sign		483955	0					
ANR	484915	EqualityExpression	n1 -> n_sign == n2 -> n_sign		483955	0		==			
ANR	484916	PtrMemberAccess	n1 -> n_sign		483955	0					
ANR	484917	Identifier	n1		483955	0					
ANR	484918	Identifier	n_sign		483955	1					
ANR	484919	PtrMemberAccess	n2 -> n_sign		483955	1					
ANR	484920	Identifier	n2		483955	0					
ANR	484921	Identifier	n_sign		483955	1					
ANR	484922	Identifier	PLUS		483955	1					
ANR	484923	Identifier	MINUS		483955	2					
ANR	484924	IfStatement	if ( bc_is_zero ( qval ) )		483955	35					
ANR	484925	Condition	bc_is_zero ( qval )	262:6:6877:6893	483955	0	True				
ANR	484926	CallExpression	bc_is_zero ( qval )		483955	0					
ANR	484927	Callee	bc_is_zero		483955	0					
ANR	484928	Identifier	bc_is_zero		483955	0					
ANR	484929	ArgumentList	qval		483955	1					
ANR	484930	Argument	qval		483955	0					
ANR	484931	Identifier	qval		483955	0					
ANR	484932	ExpressionStatement	qval -> n_sign = PLUS	262:25:6896:6915	483955	1	True				
ANR	484933	AssignmentExpression	qval -> n_sign = PLUS		483955	0		=			
ANR	484934	PtrMemberAccess	qval -> n_sign		483955	0					
ANR	484935	Identifier	qval		483955	0					
ANR	484936	Identifier	n_sign		483955	1					
ANR	484937	Identifier	PLUS		483955	1					
ANR	484938	ExpressionStatement	_bc_rm_leading_zeros ( qval )	263:2:6919:6946	483955	36	True				
ANR	484939	CallExpression	_bc_rm_leading_zeros ( qval )		483955	0					
ANR	484940	Callee	_bc_rm_leading_zeros		483955	0					
ANR	484941	Identifier	_bc_rm_leading_zeros		483955	0					
ANR	484942	ArgumentList	qval		483955	1					
ANR	484943	Argument	qval		483955	0					
ANR	484944	Identifier	qval		483955	0					
ANR	484945	ExpressionStatement	bc_free_num ( quot )	264:2:6950:6968	483955	37	True				
ANR	484946	CallExpression	bc_free_num ( quot )		483955	0					
ANR	484947	Callee	bc_free_num		483955	0					
ANR	484948	Identifier	bc_free_num		483955	0					
ANR	484949	ArgumentList	quot		483955	1					
ANR	484950	Argument	quot		483955	0					
ANR	484951	Identifier	quot		483955	0					
ANR	484952	ExpressionStatement	* quot = qval	265:2:6972:6984	483955	38	True				
ANR	484953	AssignmentExpression	* quot = qval		483955	0		=			
ANR	484954	UnaryOperationExpression	* quot		483955	0					
ANR	484955	UnaryOperator	*		483955	0					
ANR	484956	Identifier	quot		483955	1					
ANR	484957	Identifier	qval		483955	1					
ANR	484958	ExpressionStatement	efree ( mval )	268:2:7025:7037	483955	39	True				
ANR	484959	CallExpression	efree ( mval )		483955	0					
ANR	484960	Callee	efree		483955	0					
ANR	484961	Identifier	efree		483955	0					
ANR	484962	ArgumentList	mval		483955	1					
ANR	484963	Argument	mval		483955	0					
ANR	484964	Identifier	mval		483955	0					
ANR	484965	ExpressionStatement	efree ( num1 )	269:2:7041:7053	483955	40	True				
ANR	484966	CallExpression	efree ( num1 )		483955	0					
ANR	484967	Callee	efree		483955	0					
ANR	484968	Identifier	efree		483955	0					
ANR	484969	ArgumentList	num1		483955	1					
ANR	484970	Argument	num1		483955	0					
ANR	484971	Identifier	num1		483955	0					
ANR	484972	ExpressionStatement	efree ( num2 )	270:2:7057:7069	483955	41	True				
ANR	484973	CallExpression	efree ( num2 )		483955	0					
ANR	484974	Callee	efree		483955	0					
ANR	484975	Identifier	efree		483955	0					
ANR	484976	ArgumentList	num2		483955	1					
ANR	484977	Argument	num2		483955	0					
ANR	484978	Identifier	num2		483955	0					
ANR	484979	ReturnStatement	return 0 ;	272:2:7074:7082	483955	42	True				
ANR	484980	PrimaryExpression	0		483955	0					
ANR	484981	ReturnType	int		483955	1					
ANR	484982	Identifier	bc_divide		483955	2					
ANR	484983	ParameterList	"bc_num n1 , bc_num n2 , bc_num * quot , int scale"		483955	3					
ANR	484984	Parameter	bc_num n1	88:11:2536:2544	483955	0	True				
ANR	484985	ParameterType	bc_num		483955	0					
ANR	484986	Identifier	n1		483955	1					
ANR	484987	Parameter	bc_num n2	88:22:2547:2555	483955	1	True				
ANR	484988	ParameterType	bc_num		483955	0					
ANR	484989	Identifier	n2		483955	1					
ANR	484990	Parameter	bc_num * quot	88:33:2558:2569	483955	2	True				
ANR	484991	ParameterType	bc_num *		483955	0					
ANR	484992	Identifier	quot		483955	1					
ANR	484993	Parameter	int scale	88:47:2572:2580	483955	3	True				
ANR	484994	ParameterType	int		483955	0					
ANR	484995	Identifier	scale		483955	1					
ANR	484996	CFGEntryNode	ENTRY		483955		True				
ANR	484997	CFGExitNode	EXIT		483955		True				
ANR	484998	Symbol	* num2		483955						
ANR	484999	Symbol	n1		483955						
ANR	485000	Symbol	* num1		483955						
ANR	485001	Symbol	n2		483955						
ANR	485002	Symbol	* qdig		483955						
ANR	485003	Symbol	n2 -> n_sign		483955						
ANR	485004	Symbol	len1		483955						
ANR	485005	Symbol	* ptr1 --		483955						
ANR	485006	Symbol	len2		483955						
ANR	485007	Symbol	norm		483955						
ANR	485008	Symbol	MINUS		483955						
ANR	485009	Symbol	zero		483955						
ANR	485010	Symbol	n1 -> n_value		483955						
ANR	485011	Symbol	n1 -> n_scale		483955						
ANR	485012	Symbol	* ptr1		483955						
ANR	485013	Symbol	qval -> n_value		483955						
ANR	485014	Symbol	n1 -> n_len		483955						
ANR	485015	Symbol	* quot		483955						
ANR	485016	Symbol	val		483955						
ANR	485017	Symbol	NULL		483955						
ANR	485018	Symbol	qval		483955						
ANR	485019	Symbol	n2 -> n_scale		483955						
ANR	485020	Symbol	n1 -> n_sign		483955						
ANR	485021	Symbol	mval		483955						
ANR	485022	Symbol	count		483955						
ANR	485023	Symbol	* n2		483955						
ANR	485024	Symbol	TRUE		483955						
ANR	485025	Symbol	* n1		483955						
ANR	485026	Symbol	qdigits		483955						
ANR	485027	Symbol	* ptr2 --		483955						
ANR	485028	Symbol	ptr2		483955						
ANR	485029	Symbol	* n2 -> n_value		483955						
ANR	485030	Symbol	qguess		483955						
ANR	485031	Symbol	MIN		483955						
ANR	485032	Symbol	ptr1		483955						
ANR	485033	Symbol	* qptr ++		483955						
ANR	485034	Symbol	carry		483955						
ANR	485035	Symbol	quot		483955						
ANR	485036	Symbol	PLUS		483955						
ANR	485037	Symbol	qdig		483955						
ANR	485038	Symbol	* n2ptr --		483955						
ANR	485039	Symbol	scale		483955						
ANR	485040	Symbol	n2ptr		483955						
ANR	485041	Symbol	bc_new_num		483955						
ANR	485042	Symbol	* len2		483955						
ANR	485043	Symbol	extra		483955						
ANR	485044	Symbol	num1		483955						
ANR	485045	Symbol	bc_is_zero		483955						
ANR	485046	Symbol	num2		483955						
ANR	485047	Symbol	n2 -> n_value		483955						
ANR	485048	Symbol	* qval		483955						
ANR	485049	Symbol	* ( num2 + len2 )		483955						
ANR	485050	Symbol	qptr		483955						
ANR	485051	Symbol	n2 -> n_len		483955						
ANR	485052	Symbol	* mval		483955						
ANR	485053	Symbol	qval -> n_sign		483955						
ANR	485054	Symbol	* * n2		483955						
ANR	485055	Symbol	* n2ptr		483955						
ANR	485056	Symbol	scale2		483955						
ANR	485057	Symbol	scale1		483955						
ANR	485058	Symbol	borrow		483955						
ANR	485059	Symbol	FALSE		483955						
ANR	485060	Symbol	safe_emalloc		483955						
