command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	58973	File	data/converged/CVE-2015-8617_php-src/Zend_zend_alloc.c								
ANR	58974	DeclStmt									
ANR	58975	Decl							size_t	size_t	_real_page_size
ANR	58976	DeclStmt									
ANR	58977	Decl							uint32_t	uint32_t	zend_mm_page_info
ANR	58978	DeclStmt									
ANR	58979	Decl							zend_ulong	zend_ulong	zend_mm_bitset
ANR	58980	DeclStmt									
ANR	58981	Decl							zend_mm_bitset	zend_mm_bitset [ ZEND_MM_PAGE_MAP_LEN ]	zend_mm_page_map
ANR	58982	DeclStmt									
ANR	58983	Decl							struct _zend_mm_page	struct _zend_mm_page	zend_mm_page
ANR	58984	DeclStmt									
ANR	58985	Decl							struct _zend_mm_bin	struct _zend_mm_bin	zend_mm_bin
ANR	58986	DeclStmt									
ANR	58987	Decl							struct _zend_mm_free_slot	struct _zend_mm_free_slot	zend_mm_free_slot
ANR	58988	DeclStmt									
ANR	58989	Decl							struct _zend_mm_chunk	struct _zend_mm_chunk	zend_mm_chunk
ANR	58990	DeclStmt									
ANR	58991	Decl							struct _zend_mm_huge_list	struct _zend_mm_huge_list	zend_mm_huge_list
ANR	58992	ClassDef	_zend_mm_heap	235:0:8819:10535							
ANR	58993	DeclStmt									
ANR	58994	Decl							int	int	use_custom_heap
ANR	58995	DeclStmt									
ANR	58996	Decl							zend_mm_storage	zend_mm_storage *	storage
ANR	58997	DeclStmt									
ANR	58998	Decl							size_t	size_t	size
ANR	58999	DeclStmt									
ANR	59000	Decl							size_t	size_t	peak
ANR	59001	DeclStmt									
ANR	59002	Decl							zend_mm_free_slot	zend_mm_free_slot * [ ZEND_MM_BINS ]	free_slot
ANR	59003	DeclStmt									
ANR	59004	Decl							size_t	size_t	real_size
ANR	59005	DeclStmt									
ANR	59006	Decl							size_t	size_t	real_peak
ANR	59007	DeclStmt									
ANR	59008	Decl							size_t	size_t	limit
ANR	59009	DeclStmt									
ANR	59010	Decl							int	int	overflow
ANR	59011	DeclStmt									
ANR	59012	Decl							zend_mm_huge_list	zend_mm_huge_list *	huge_list
ANR	59013	DeclStmt									
ANR	59014	Decl							zend_mm_chunk	zend_mm_chunk *	main_chunk
ANR	59015	DeclStmt									
ANR	59016	Decl							zend_mm_chunk	zend_mm_chunk *	cached_chunks
ANR	59017	DeclStmt									
ANR	59018	Decl							int	int	chunks_count
ANR	59019	DeclStmt									
ANR	59020	Decl							int	int	peak_chunks_count
ANR	59021	DeclStmt									
ANR	59022	Decl							int	int	cached_chunks_count
ANR	59023	DeclStmt									
ANR	59024	Decl							double	double	avg_chunks_count
ANR	59025	ClassDef	<unnamed>	267:1:10123:10526							
ANR	59026	ClassDef	<unnamed>	268:2:10133:10256							
ANR	59027	DeclStmt									
ANR	59028	Decl							void * ( * ) ( size_t )	void * ( * ) ( size_t )	_malloc
ANR	59029	DeclStmt									
ANR	59030	Decl							void ( * ) ( void * )	void ( * ) ( void * )	_free
ANR	59031	DeclStmt									
ANR	59032	Decl							"void * ( * ) ( void * , size_t )"	"void * ( * ) ( void * , size_t )"	_realloc
ANR	59033	DeclStmt									
ANR	59034	Decl									std
ANR	59035	ClassDef	<unnamed>	273:2:10260:10510							
ANR	59036	DeclStmt									
ANR	59037	Decl							void * ( * ) ( size_t ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC )	void * ( * ) ( size_t ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC )	_malloc
ANR	59038	DeclStmt									
ANR	59039	Decl							"void * ( * ) ( void * , size_t ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC )"	"void * ( * ) ( void * , size_t ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC )"	_realloc
ANR	59040	DeclStmt									
ANR	59041	Decl									debug
ANR	59042	DeclStmt									
ANR	59043	Decl									custom_heap
ANR	59044	ClassDef	_zend_mm_chunk	282:0:10539:11106							
ANR	59045	DeclStmt									
ANR	59046	Decl							zend_mm_heap	zend_mm_heap *	heap
ANR	59047	DeclStmt									
ANR	59048	Decl							zend_mm_chunk	zend_mm_chunk *	next
ANR	59049	DeclStmt									
ANR	59050	Decl							zend_mm_chunk	zend_mm_chunk *	prev
ANR	59051	DeclStmt									
ANR	59052	Decl							int	int	free_pages
ANR	59053	DeclStmt									
ANR	59054	Decl							int	int	free_tail
ANR	59055	DeclStmt									
ANR	59056	Decl							int	int	num
ANR	59057	DeclStmt									
ANR	59058	Decl							char	char [ 64 - ( sizeof ( void * ) * 3 + sizeof ( int ) * 3 ) ]	reserve
ANR	59059	DeclStmt									
ANR	59060	Decl							zend_mm_heap	zend_mm_heap	heap_slot
ANR	59061	DeclStmt									
ANR	59062	Decl							zend_mm_page_map	zend_mm_page_map	free_map
ANR	59063	DeclStmt									
ANR	59064	Decl							zend_mm_page_info	zend_mm_page_info [ ZEND_MM_PAGES ]	map
ANR	59065	ClassDef	_zend_mm_page	295:0:11110:11179							
ANR	59066	DeclStmt									
ANR	59067	Decl							char	char [ ZEND_MM_PAGE_SIZE ]	bytes
ANR	59068	ClassDef	_zend_mm_bin	303:0:11293:11365							
ANR	59069	DeclStmt									
ANR	59070	Decl							char	char [ ZEND_MM_PAGE_SIZE * 8 ]	bytes
ANR	59071	ClassDef	_zend_mm_free_slot	307:0:11369:11433							
ANR	59072	DeclStmt									
ANR	59073	Decl							zend_mm_free_slot	zend_mm_free_slot *	next_free_slot
ANR	59074	ClassDef	_zend_mm_huge_list	311:0:11437:11589							
ANR	59075	DeclStmt									
ANR	59076	Decl							void	void *	ptr
ANR	59077	DeclStmt									
ANR	59078	Decl							size_t	size_t	size
ANR	59079	DeclStmt									
ANR	59080	Decl							zend_mm_huge_list	zend_mm_huge_list *	next
ANR	59081	DeclStmt									
ANR	59082	Decl							zend_mm_debug_info	zend_mm_debug_info	dbg
ANR	59083	DeclStmt									
ANR	59084	Decl							const unsigned int	const unsigned int [ ]	bin_data_size
ANR	59085	DeclStmt									
ANR	59086	Decl							const int	const int [ ]	bin_elements
ANR	59087	DeclStmt									
ANR	59088	Decl							const int	const int [ ]	bin_pages
ANR	59089	Function	zend_debug_alloc_output	339:0:12161:12437							
ANR	59090	FunctionDef	zend_debug_alloc_output (char * format)		59089	0					
ANR	59091	CompoundStatement		340:0:12219:12437	59089	0					
ANR	59092	IdentifierDeclStatement	char output_buf [ 256 ] ;	341:1:12222:12242	59089	0	True				
ANR	59093	IdentifierDecl	output_buf [ 256 ]		59089	0					
ANR	59094	IdentifierDeclType	char [ 256 ]		59089	0					
ANR	59095	Identifier	output_buf		59089	1					
ANR	59096	PrimaryExpression	256		59089	2					
ANR	59097	IdentifierDeclStatement	va_list args ;	342:1:12245:12257	59089	1	True				
ANR	59098	IdentifierDecl	args		59089	0					
ANR	59099	IdentifierDeclType	va_list		59089	0					
ANR	59100	Identifier	args		59089	1					
ANR	59101	ExpressionStatement	"va_start ( args , format )"	344:1:12261:12283	59089	2	True				
ANR	59102	CallExpression	"va_start ( args , format )"		59089	0					
ANR	59103	Callee	va_start		59089	0					
ANR	59104	Identifier	va_start		59089	0					
ANR	59105	ArgumentList	args		59089	1					
ANR	59106	Argument	args		59089	0					
ANR	59107	Identifier	args		59089	0					
ANR	59108	Argument	format		59089	1					
ANR	59109	Identifier	format		59089	0					
ANR	59110	ExpressionStatement	"vsprintf ( output_buf , format , args )"	345:1:12286:12320	59089	3	True				
ANR	59111	CallExpression	"vsprintf ( output_buf , format , args )"		59089	0					
ANR	59112	Callee	vsprintf		59089	0					
ANR	59113	Identifier	vsprintf		59089	0					
ANR	59114	ArgumentList	output_buf		59089	1					
ANR	59115	Argument	output_buf		59089	0					
ANR	59116	Identifier	output_buf		59089	0					
ANR	59117	Argument	format		59089	1					
ANR	59118	Identifier	format		59089	0					
ANR	59119	Argument	args		59089	2					
ANR	59120	Identifier	args		59089	0					
ANR	59121	ExpressionStatement	va_end ( args )	346:1:12323:12335	59089	4	True				
ANR	59122	CallExpression	va_end ( args )		59089	0					
ANR	59123	Callee	va_end		59089	0					
ANR	59124	Identifier	va_end		59089	0					
ANR	59125	ArgumentList	args		59089	1					
ANR	59126	Argument	args		59089	0					
ANR	59127	Identifier	args		59089	0					
ANR	59128	ExpressionStatement	OutputDebugString ( output_buf )	349:1:12357:12386	59089	5	True				
ANR	59129	CallExpression	OutputDebugString ( output_buf )		59089	0					
ANR	59130	Callee	OutputDebugString		59089	0					
ANR	59131	Identifier	OutputDebugString		59089	0					
ANR	59132	ArgumentList	output_buf		59089	1					
ANR	59133	Argument	output_buf		59089	0					
ANR	59134	Identifier	output_buf		59089	0					
ANR	59135	ReturnType	ZEND_COLD void		59089	1					
ANR	59136	Identifier	zend_debug_alloc_output		59089	2					
ANR	59137	ParameterList	char * format		59089	3					
ANR	59138	Parameter	char * format	339:39:12200:12211	59089	0	True				
ANR	59139	ParameterType	char *		59089	0					
ANR	59140	Identifier	format		59089	1					
ANR	59141	CFGEntryNode	ENTRY		59089		True				
ANR	59142	CFGExitNode	EXIT		59089		True				
ANR	59143	Symbol	args		59089						
ANR	59144	Symbol	output_buf		59089						
ANR	59145	Symbol	format		59089						
ANR	59146	Function	zend_mm_panic	356:0:12447:12750							
ANR	59147	FunctionDef	zend_mm_panic (const char * message)		59146	0					
ANR	59148	CompoundStatement		357:0:12518:12750	59146	0					
ANR	59149	ExpressionStatement	"fprintf ( stderr , ""%s\\n"" , message )"	358:1:12521:12553	59146	0	True				
ANR	59150	CallExpression	"fprintf ( stderr , ""%s\\n"" , message )"		59146	0					
ANR	59151	Callee	fprintf		59146	0					
ANR	59152	Identifier	fprintf		59146	0					
ANR	59153	ArgumentList	stderr		59146	1					
ANR	59154	Argument	stderr		59146	0					
ANR	59155	Identifier	stderr		59146	0					
ANR	59156	Argument	"""%s\\n"""		59146	1					
ANR	59157	PrimaryExpression	"""%s\\n"""		59146	0					
ANR	59158	Argument	message		59146	2					
ANR	59159	Identifier	message		59146	0					
ANR	59160	ExpressionStatement	fflush ( stderr )	361:1:12623:12637	59146	1	True				
ANR	59161	CallExpression	fflush ( stderr )		59146	0					
ANR	59162	Callee	fflush		59146	0					
ANR	59163	Identifier	fflush		59146	0					
ANR	59164	ArgumentList	stderr		59146	1					
ANR	59165	Argument	stderr		59146	0					
ANR	59166	Identifier	stderr		59146	0					
ANR	59167	ExpressionStatement	"kill ( getpid ( ) , SIGSEGV )"	364:1:12708:12731	59146	2	True				
ANR	59168	CallExpression	"kill ( getpid ( ) , SIGSEGV )"		59146	0					
ANR	59169	Callee	kill		59146	0					
ANR	59170	Identifier	kill		59146	0					
ANR	59171	ArgumentList	getpid ( )		59146	1					
ANR	59172	Argument	getpid ( )		59146	0					
ANR	59173	CallExpression	getpid ( )		59146	0					
ANR	59174	Callee	getpid		59146	0					
ANR	59175	Identifier	getpid		59146	0					
ANR	59176	ArgumentList			59146	1					
ANR	59177	Argument	SIGSEGV		59146	1					
ANR	59178	Identifier	SIGSEGV		59146	0					
ANR	59179	ExpressionStatement	exit ( 1 )	366:1:12741:12748	59146	3	True				
ANR	59180	CallExpression	exit ( 1 )		59146	0					
ANR	59181	Callee	exit		59146	0					
ANR	59182	Identifier	exit		59146	0					
ANR	59183	ArgumentList	1		59146	1					
ANR	59184	Argument	1		59146	0					
ANR	59185	PrimaryExpression	1		59146	0					
ANR	59186	ReturnType	static ZEND_COLD ZEND_NORETURN void		59146	1					
ANR	59187	Identifier	zend_mm_panic		59146	2					
ANR	59188	ParameterList	const char * message		59146	3					
ANR	59189	Parameter	const char * message	356:50:12497:12515	59146	0	True				
ANR	59190	ParameterType	const char *		59146	0					
ANR	59191	Identifier	message		59146	1					
ANR	59192	CFGEntryNode	ENTRY		59146		True				
ANR	59193	CFGExitNode	EXIT		59146		True				
ANR	59194	Symbol	SIGSEGV		59146						
ANR	59195	Symbol	message		59146						
ANR	59196	Symbol	stderr		59146						
ANR	59197	Symbol	getpid		59146						
ANR	59198	Function	stderr_last_error	397:0:13182:13605							
ANR	59199	FunctionDef	stderr_last_error (char * msg)		59198	0					
ANR	59200	CompoundStatement		399:0:13216:13605	59198	0					
ANR	59201	IdentifierDeclStatement	LPSTR buf = NULL ;	400:1:13219:13235	59198	0	True				
ANR	59202	IdentifierDecl	buf = NULL		59198	0					
ANR	59203	IdentifierDeclType	LPSTR		59198	0					
ANR	59204	Identifier	buf		59198	1					
ANR	59205	AssignmentExpression	buf = NULL		59198	2		=			
ANR	59206	Identifier	NULL		59198	0					
ANR	59207	Identifier	NULL		59198	1					
ANR	59208	IdentifierDeclStatement	DWORD err = GetLastError ( ) ;	401:1:13238:13264	59198	1	True				
ANR	59209	IdentifierDecl	err = GetLastError ( )		59198	0					
ANR	59210	IdentifierDeclType	DWORD		59198	0					
ANR	59211	Identifier	err		59198	1					
ANR	59212	AssignmentExpression	err = GetLastError ( )		59198	2		=			
ANR	59213	Identifier	err		59198	0					
ANR	59214	CallExpression	GetLastError ( )		59198	1					
ANR	59215	Callee	GetLastError		59198	0					
ANR	59216	Identifier	GetLastError		59198	0					
ANR	59217	ArgumentList			59198	1					
ANR	59218	IfStatement	"if ( ! FormatMessage ( FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS , NULL , err , MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) , ( LPSTR ) & buf , 0 , NULL ) )"		59198	2					
ANR	59219	Condition	"! FormatMessage ( FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS , NULL , err , MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) , ( LPSTR ) & buf , 0 , NULL )"	403:5:13272:13478	59198	0	True				
ANR	59220	UnaryOperationExpression	"! FormatMessage ( FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS , NULL , err , MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) , ( LPSTR ) & buf , 0 , NULL )"		59198	0					
ANR	59221	UnaryOperator	!		59198	0					
ANR	59222	CallExpression	"FormatMessage ( FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS , NULL , err , MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT ) , ( LPSTR ) & buf , 0 , NULL )"		59198	1					
ANR	59223	Callee	FormatMessage		59198	0					
ANR	59224	Identifier	FormatMessage		59198	0					
ANR	59225	ArgumentList	FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS		59198	1					
ANR	59226	Argument	FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS		59198	0					
ANR	59227	InclusiveOrExpression	FORMAT_MESSAGE_ALLOCATE_BUFFER | FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS		59198	0		|			
ANR	59228	Identifier	FORMAT_MESSAGE_ALLOCATE_BUFFER		59198	0					
ANR	59229	InclusiveOrExpression	FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS		59198	1		|			
ANR	59230	Identifier	FORMAT_MESSAGE_FROM_SYSTEM		59198	0					
ANR	59231	Identifier	FORMAT_MESSAGE_IGNORE_INSERTS		59198	1					
ANR	59232	Argument	NULL		59198	1					
ANR	59233	Identifier	NULL		59198	0					
ANR	59234	Argument	err		59198	2					
ANR	59235	Identifier	err		59198	0					
ANR	59236	Argument	"MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT )"		59198	3					
ANR	59237	CallExpression	"MAKELANGID ( LANG_NEUTRAL , SUBLANG_DEFAULT )"		59198	0					
ANR	59238	Callee	MAKELANGID		59198	0					
ANR	59239	Identifier	MAKELANGID		59198	0					
ANR	59240	ArgumentList	LANG_NEUTRAL		59198	1					
ANR	59241	Argument	LANG_NEUTRAL		59198	0					
ANR	59242	Identifier	LANG_NEUTRAL		59198	0					
ANR	59243	Argument	SUBLANG_DEFAULT		59198	1					
ANR	59244	Identifier	SUBLANG_DEFAULT		59198	0					
ANR	59245	Argument	( LPSTR ) & buf		59198	4					
ANR	59246	CastExpression	( LPSTR ) & buf		59198	0					
ANR	59247	CastTarget	LPSTR		59198	0					
ANR	59248	UnaryOperationExpression	& buf		59198	1					
ANR	59249	UnaryOperator	&		59198	0					
ANR	59250	Identifier	buf		59198	1					
ANR	59251	Argument	0		59198	5					
ANR	59252	PrimaryExpression	0		59198	0					
ANR	59253	Argument	NULL		59198	6					
ANR	59254	Identifier	NULL		59198	0					
ANR	59255	CompoundStatement		13:12:264:264	59198	1					
ANR	59256	ExpressionStatement	"fprintf ( stderr , ""\\n%s: [0x%08lx]\\n"" , msg , err )"	412:2:13485:13531	59198	0	True				
ANR	59257	CallExpression	"fprintf ( stderr , ""\\n%s: [0x%08lx]\\n"" , msg , err )"		59198	0					
ANR	59258	Callee	fprintf		59198	0					
ANR	59259	Identifier	fprintf		59198	0					
ANR	59260	ArgumentList	stderr		59198	1					
ANR	59261	Argument	stderr		59198	0					
ANR	59262	Identifier	stderr		59198	0					
ANR	59263	Argument	"""\\n%s: [0x%08lx]\\n"""		59198	1					
ANR	59264	PrimaryExpression	"""\\n%s: [0x%08lx]\\n"""		59198	0					
ANR	59265	Argument	msg		59198	2					
ANR	59266	Identifier	msg		59198	0					
ANR	59267	Argument	err		59198	3					
ANR	59268	Identifier	err		59198	0					
ANR	59269	ElseStatement	else		59198	0					
ANR	59270	CompoundStatement		16:6:325:325	59198	0					
ANR	59271	ExpressionStatement	"fprintf ( stderr , ""\\n%s: [0x%08lx] %s\\n"" , msg , err , buf )"	415:2:13546:13600	59198	0	True				
ANR	59272	CallExpression	"fprintf ( stderr , ""\\n%s: [0x%08lx] %s\\n"" , msg , err , buf )"		59198	0					
ANR	59273	Callee	fprintf		59198	0					
ANR	59274	Identifier	fprintf		59198	0					
ANR	59275	ArgumentList	stderr		59198	1					
ANR	59276	Argument	stderr		59198	0					
ANR	59277	Identifier	stderr		59198	0					
ANR	59278	Argument	"""\\n%s: [0x%08lx] %s\\n"""		59198	1					
ANR	59279	PrimaryExpression	"""\\n%s: [0x%08lx] %s\\n"""		59198	0					
ANR	59280	Argument	msg		59198	2					
ANR	59281	Identifier	msg		59198	0					
ANR	59282	Argument	err		59198	3					
ANR	59283	Identifier	err		59198	0					
ANR	59284	Argument	buf		59198	4					
ANR	59285	Identifier	buf		59198	0					
ANR	59286	ReturnType	void		59198	1					
ANR	59287	Identifier	stderr_last_error		59198	2					
ANR	59288	ParameterList	char * msg		59198	3					
ANR	59289	Parameter	char * msg	398:18:13205:13213	59198	0	True				
ANR	59290	ParameterType	char *		59198	0					
ANR	59291	Identifier	msg		59198	1					
ANR	59292	CFGEntryNode	ENTRY		59198		True				
ANR	59293	CFGExitNode	EXIT		59198		True				
ANR	59294	Symbol	msg		59198						
ANR	59295	Symbol	FORMAT_MESSAGE_ALLOCATE_BUFFER		59198						
ANR	59296	Symbol	FormatMessage		59198						
ANR	59297	Symbol	NULL		59198						
ANR	59298	Symbol	FORMAT_MESSAGE_IGNORE_INSERTS		59198						
ANR	59299	Symbol	err		59198						
ANR	59300	Symbol	LANG_NEUTRAL		59198						
ANR	59301	Symbol	stderr		59198						
ANR	59302	Symbol	MAKELANGID		59198						
ANR	59303	Symbol	buf		59198						
ANR	59304	Symbol	GetLastError		59198						
ANR	59305	Symbol	SUBLANG_DEFAULT		59198						
ANR	59306	Symbol	FORMAT_MESSAGE_FROM_SYSTEM		59198						
ANR	59307	Symbol	& buf		59198						
ANR	59308	Function	zend_mm_mmap_fixed	424:0:13676:14370							
ANR	59309	FunctionDef	"zend_mm_mmap_fixed (void * addr , size_t size)"		59308	0					
ANR	59310	CompoundStatement		425:0:13733:14370	59308	0					
ANR	59311	ReturnStatement	"return VirtualAlloc ( addr , size , MEM_COMMIT | MEM_RESERVE , PAGE_READWRITE ) ;"	427:1:13750:13823	59308	0	True				
ANR	59312	CallExpression	"VirtualAlloc ( addr , size , MEM_COMMIT | MEM_RESERVE , PAGE_READWRITE )"		59308	0					
ANR	59313	Callee	VirtualAlloc		59308	0					
ANR	59314	Identifier	VirtualAlloc		59308	0					
ANR	59315	ArgumentList	addr		59308	1					
ANR	59316	Argument	addr		59308	0					
ANR	59317	Identifier	addr		59308	0					
ANR	59318	Argument	size		59308	1					
ANR	59319	Identifier	size		59308	0					
ANR	59320	Argument	MEM_COMMIT | MEM_RESERVE		59308	2					
ANR	59321	InclusiveOrExpression	MEM_COMMIT | MEM_RESERVE		59308	0		|			
ANR	59322	Identifier	MEM_COMMIT		59308	0					
ANR	59323	Identifier	MEM_RESERVE		59308	1					
ANR	59324	Argument	PAGE_READWRITE		59308	3					
ANR	59325	Identifier	PAGE_READWRITE		59308	0					
ANR	59326	ReturnType	static void *		59308	1					
ANR	59327	Identifier	zend_mm_mmap_fixed		59308	2					
ANR	59328	ParameterList	"void * addr , size_t size"		59308	3					
ANR	59329	Parameter	void * addr	424:32:13708:13717	59308	0	True				
ANR	59330	ParameterType	void *		59308	0					
ANR	59331	Identifier	addr		59308	1					
ANR	59332	Parameter	size_t size	424:44:13720:13730	59308	1	True				
ANR	59333	ParameterType	size_t		59308	0					
ANR	59334	Identifier	size		59308	1					
ANR	59335	CFGEntryNode	ENTRY		59308		True				
ANR	59336	CFGExitNode	EXIT		59308		True				
ANR	59337	Symbol	PAGE_READWRITE		59308						
ANR	59338	Symbol	VirtualAlloc		59308						
ANR	59339	Symbol	size		59308						
ANR	59340	Symbol	MEM_COMMIT		59308						
ANR	59341	Symbol	MEM_RESERVE		59308						
ANR	59342	Symbol	addr		59308						
ANR	59343	Function	zend_mm_mmap	449:0:14373:15100							
ANR	59344	FunctionDef	zend_mm_mmap (size_t size)		59343	0					
ANR	59345	CompoundStatement		450:0:14412:15100	59343	0					
ANR	59346	IdentifierDeclStatement	"void * ptr = VirtualAlloc ( NULL , size , MEM_COMMIT | MEM_RESERVE , PAGE_READWRITE ) ;"	452:1:14429:14507	59343	0	True				
ANR	59347	IdentifierDecl	"* ptr = VirtualAlloc ( NULL , size , MEM_COMMIT | MEM_RESERVE , PAGE_READWRITE )"		59343	0					
ANR	59348	IdentifierDeclType	void *		59343	0					
ANR	59349	Identifier	ptr		59343	1					
ANR	59350	AssignmentExpression	"* ptr = VirtualAlloc ( NULL , size , MEM_COMMIT | MEM_RESERVE , PAGE_READWRITE )"		59343	2		=			
ANR	59351	Identifier	ptr		59343	0					
ANR	59352	CallExpression	"VirtualAlloc ( NULL , size , MEM_COMMIT | MEM_RESERVE , PAGE_READWRITE )"		59343	1					
ANR	59353	Callee	VirtualAlloc		59343	0					
ANR	59354	Identifier	VirtualAlloc		59343	0					
ANR	59355	ArgumentList	NULL		59343	1					
ANR	59356	Argument	NULL		59343	0					
ANR	59357	Identifier	NULL		59343	0					
ANR	59358	Argument	size		59343	1					
ANR	59359	Identifier	size		59343	0					
ANR	59360	Argument	MEM_COMMIT | MEM_RESERVE		59343	2					
ANR	59361	InclusiveOrExpression	MEM_COMMIT | MEM_RESERVE		59343	0		|			
ANR	59362	Identifier	MEM_COMMIT		59343	0					
ANR	59363	Identifier	MEM_RESERVE		59343	1					
ANR	59364	Argument	PAGE_READWRITE		59343	3					
ANR	59365	Identifier	PAGE_READWRITE		59343	0					
ANR	59366	IfStatement	if ( ptr == NULL )		59343	1					
ANR	59367	Condition	ptr == NULL	454:5:14515:14525	59343	0	True				
ANR	59368	EqualityExpression	ptr == NULL		59343	0		==			
ANR	59369	Identifier	ptr		59343	0					
ANR	59370	Identifier	NULL		59343	1					
ANR	59371	CompoundStatement		5:18:115:115	59343	1					
ANR	59372	ExpressionStatement	"stderr_last_error ( ""VirtualAlloc() failed"" )"	456:2:14550:14592	59343	0	True				
ANR	59373	CallExpression	"stderr_last_error ( ""VirtualAlloc() failed"" )"		59343	0					
ANR	59374	Callee	stderr_last_error		59343	0					
ANR	59375	Identifier	stderr_last_error		59343	0					
ANR	59376	ArgumentList	"""VirtualAlloc() failed"""		59343	1					
ANR	59377	Argument	"""VirtualAlloc() failed"""		59343	0					
ANR	59378	PrimaryExpression	"""VirtualAlloc() failed"""		59343	0					
ANR	59379	ReturnStatement	return NULL ;	458:2:14603:14614	59343	1	True				
ANR	59380	Identifier	NULL		59343	0					
ANR	59381	ReturnStatement	return ptr ;	460:1:14620:14630	59343	2	True				
ANR	59382	Identifier	ptr		59343	0					
ANR	59383	ReturnType	static void *		59343	1					
ANR	59384	Identifier	zend_mm_mmap		59343	2					
ANR	59385	ParameterList	size_t size		59343	3					
ANR	59386	Parameter	size_t size	449:26:14399:14409	59343	0	True				
ANR	59387	ParameterType	size_t		59343	0					
ANR	59388	Identifier	size		59343	1					
ANR	59389	CFGEntryNode	ENTRY		59343		True				
ANR	59390	CFGExitNode	EXIT		59343		True				
ANR	59391	Symbol	PAGE_READWRITE		59343						
ANR	59392	Symbol	NULL		59343						
ANR	59393	Symbol	VirtualAlloc		59343						
ANR	59394	Symbol	size		59343						
ANR	59395	Symbol	MEM_COMMIT		59343						
ANR	59396	Symbol	MEM_RESERVE		59343						
ANR	59397	Symbol	ptr		59343						
ANR	59398	Function	zend_mm_munmap	485:0:15103:15439							
ANR	59399	FunctionDef	"zend_mm_munmap (void * addr , size_t size)"		59398	0					
ANR	59400	CompoundStatement		486:0:15155:15439	59398	0					
ANR	59401	IfStatement	"if ( VirtualFree ( addr , 0 , MEM_RELEASE ) == 0 )"		59398	0					
ANR	59402	Condition	"VirtualFree ( addr , 0 , MEM_RELEASE ) == 0"	488:5:15176:15213	59398	0	True				
ANR	59403	EqualityExpression	"VirtualFree ( addr , 0 , MEM_RELEASE ) == 0"		59398	0		==			
ANR	59404	CallExpression	"VirtualFree ( addr , 0 , MEM_RELEASE )"		59398	0					
ANR	59405	Callee	VirtualFree		59398	0					
ANR	59406	Identifier	VirtualFree		59398	0					
ANR	59407	ArgumentList	addr		59398	1					
ANR	59408	Argument	addr		59398	0					
ANR	59409	Identifier	addr		59398	0					
ANR	59410	Argument	0		59398	1					
ANR	59411	PrimaryExpression	0		59398	0					
ANR	59412	Argument	MEM_RELEASE		59398	2					
ANR	59413	Identifier	MEM_RELEASE		59398	0					
ANR	59414	PrimaryExpression	0		59398	1					
ANR	59415	CompoundStatement		3:45:60:60	59398	1					
ANR	59416	ExpressionStatement	"stderr_last_error ( ""VirtualFree() failed"" )"	490:2:15238:15279	59398	0	True				
ANR	59417	CallExpression	"stderr_last_error ( ""VirtualFree() failed"" )"		59398	0					
ANR	59418	Callee	stderr_last_error		59398	0					
ANR	59419	Identifier	stderr_last_error		59398	0					
ANR	59420	ArgumentList	"""VirtualFree() failed"""		59398	1					
ANR	59421	Argument	"""VirtualFree() failed"""		59398	0					
ANR	59422	PrimaryExpression	"""VirtualFree() failed"""		59398	0					
ANR	59423	ReturnType	static void		59398	1					
ANR	59424	Identifier	zend_mm_munmap		59398	2					
ANR	59425	ParameterList	"void * addr , size_t size"		59398	3					
ANR	59426	Parameter	void * addr	485:27:15130:15139	59398	0	True				
ANR	59427	ParameterType	void *		59398	0					
ANR	59428	Identifier	addr		59398	1					
ANR	59429	Parameter	size_t size	485:39:15142:15152	59398	1	True				
ANR	59430	ParameterType	size_t		59398	0					
ANR	59431	Identifier	size		59398	1					
ANR	59432	CFGEntryNode	ENTRY		59398		True				
ANR	59433	CFGExitNode	EXIT		59398		True				
ANR	59434	Symbol	VirtualFree		59398						
ANR	59435	Symbol	size		59398						
ANR	59436	Symbol	MEM_RELEASE		59398						
ANR	59437	Symbol	addr		59398						
ANR	59438	Function	zend_mm_bitset_nts	507:0:15523:16689							
ANR	59439	FunctionDef	zend_mm_bitset_nts (zend_mm_bitset bitset)		59438	0					
ANR	59440	CompoundStatement		508:0:15595:16689	59438	0					
ANR	59441	ReturnStatement	return __builtin_ctzl ( ~bitset ) ;	510:1:15724:15754	59438	0	True				
ANR	59442	CallExpression	__builtin_ctzl ( ~bitset )		59438	0					
ANR	59443	Callee	__builtin_ctzl		59438	0					
ANR	59444	Identifier	__builtin_ctzl		59438	0					
ANR	59445	ArgumentList	~bitset		59438	1					
ANR	59446	Argument	~bitset		59438	0					
ANR	59447	Identifier	~bitset		59438	0					
ANR	59448	ReturnType	static zend_always_inline int		59438	1					
ANR	59449	Identifier	zend_mm_bitset_nts		59438	2					
ANR	59450	ParameterList	zend_mm_bitset bitset		59438	3					
ANR	59451	Parameter	zend_mm_bitset bitset	507:49:15572:15592	59438	0	True				
ANR	59452	ParameterType	zend_mm_bitset		59438	0					
ANR	59453	Identifier	bitset		59438	1					
ANR	59454	CFGEntryNode	ENTRY		59438		True				
ANR	59455	CFGExitNode	EXIT		59438		True				
ANR	59456	Symbol	__builtin_ctzl		59438						
ANR	59457	Symbol	~bitset		59438						
ANR	59458	Symbol	bitset		59438						
ANR	59459	Function	zend_mm_bitset_ntz	546:0:16763:17879							
ANR	59460	FunctionDef	zend_mm_bitset_ntz (zend_mm_bitset bitset)		59459	0					
ANR	59461	CompoundStatement		547:0:16835:17879	59459	0					
ANR	59462	ReturnStatement	return __builtin_ctzl ( bitset ) ;	549:1:16964:16993	59459	0	True				
ANR	59463	CallExpression	__builtin_ctzl ( bitset )		59459	0					
ANR	59464	Callee	__builtin_ctzl		59459	0					
ANR	59465	Identifier	__builtin_ctzl		59459	0					
ANR	59466	ArgumentList	bitset		59459	1					
ANR	59467	Argument	bitset		59459	0					
ANR	59468	Identifier	bitset		59459	0					
ANR	59469	ReturnType	static zend_always_inline int		59459	1					
ANR	59470	Identifier	zend_mm_bitset_ntz		59459	2					
ANR	59471	ParameterList	zend_mm_bitset bitset		59459	3					
ANR	59472	Parameter	zend_mm_bitset bitset	546:49:16812:16832	59459	0	True				
ANR	59473	ParameterType	zend_mm_bitset		59459	0					
ANR	59474	Identifier	bitset		59459	1					
ANR	59475	CFGEntryNode	ENTRY		59459		True				
ANR	59476	CFGExitNode	EXIT		59459		True				
ANR	59477	Symbol	__builtin_ctzl		59459						
ANR	59478	Symbol	bitset		59459						
ANR	59479	Function	zend_mm_bitset_find_zero	584:0:17882:18165							
ANR	59480	FunctionDef	"zend_mm_bitset_find_zero (zend_mm_bitset * bitset , int size)"		59479	0					
ANR	59481	CompoundStatement		585:0:17971:18165	59479	0					
ANR	59482	IdentifierDeclStatement	int i = 0 ;	586:1:17974:17983	59479	0	True				
ANR	59483	IdentifierDecl	i = 0		59479	0					
ANR	59484	IdentifierDeclType	int		59479	0					
ANR	59485	Identifier	i		59479	1					
ANR	59486	AssignmentExpression	i = 0		59479	2		=			
ANR	59487	Identifier	i		59479	0					
ANR	59488	PrimaryExpression	0		59479	1					
ANR	59489	DoStatement	do		59479	1					
ANR	59490	CompoundStatement		5:2:22:52	59479	0					
ANR	59491	IdentifierDeclStatement	zend_mm_bitset tmp = bitset [ i ] ;	589:2:17994:18024	59479	0	True				
ANR	59492	IdentifierDecl	tmp = bitset [ i ]		59479	0					
ANR	59493	IdentifierDeclType	zend_mm_bitset		59479	0					
ANR	59494	Identifier	tmp		59479	1					
ANR	59495	AssignmentExpression	tmp = bitset [ i ]		59479	2		=			
ANR	59496	Identifier	tmp		59479	0					
ANR	59497	ArrayIndexing	bitset [ i ]		59479	1					
ANR	59498	Identifier	bitset		59479	0					
ANR	59499	Identifier	i		59479	1					
ANR	59500	IfStatement	if ( tmp != ( zend_mm_bitset ) - 1 )		59479	1					
ANR	59501	Condition	tmp != ( zend_mm_bitset ) - 1	590:6:18032:18056	59479	0	True				
ANR	59502	EqualityExpression	tmp != ( zend_mm_bitset ) - 1		59479	0		!=			
ANR	59503	Identifier	tmp		59479	0					
ANR	59504	CastExpression	( zend_mm_bitset ) - 1		59479	1					
ANR	59505	CastTarget	zend_mm_bitset		59479	0					
ANR	59506	UnaryOperationExpression	- 1		59479	1					
ANR	59507	UnaryOperator	-		59479	0					
ANR	59508	PrimaryExpression	1		59479	1					
ANR	59509	CompoundStatement		6:33:87:87	59479	1					
ANR	59510	ReturnStatement	return i * ZEND_MM_BITSET_LEN + zend_mm_bitset_nts ( tmp ) ;	591:3:18064:18119	59479	0	True				
ANR	59511	AdditiveExpression	i * ZEND_MM_BITSET_LEN + zend_mm_bitset_nts ( tmp )		59479	0		+			
ANR	59512	MultiplicativeExpression	i * ZEND_MM_BITSET_LEN		59479	0		*			
ANR	59513	Identifier	i		59479	0					
ANR	59514	Identifier	ZEND_MM_BITSET_LEN		59479	1					
ANR	59515	CallExpression	zend_mm_bitset_nts ( tmp )		59479	1					
ANR	59516	Callee	zend_mm_bitset_nts		59479	0					
ANR	59517	Identifier	zend_mm_bitset_nts		59479	0					
ANR	59518	ArgumentList	tmp		59479	1					
ANR	59519	Argument	tmp		59479	0					
ANR	59520	Identifier	tmp		59479	0					
ANR	59521	ExpressionStatement	i ++	593:2:18127:18130	59479	2	True				
ANR	59522	PostIncDecOperationExpression	i ++		59479	0					
ANR	59523	Identifier	i		59479	0					
ANR	59524	IncDec	++		59479	1					
ANR	59525	Condition	i < size	594:10:18142:18149	59479	1	True				
ANR	59526	RelationalExpression	i < size		59479	0		<			
ANR	59527	Identifier	i		59479	0					
ANR	59528	Identifier	size		59479	1					
ANR	59529	ReturnStatement	return - 1 ;	595:1:18154:18163	59479	2	True				
ANR	59530	UnaryOperationExpression	- 1		59479	0					
ANR	59531	UnaryOperator	-		59479	0					
ANR	59532	PrimaryExpression	1		59479	1					
ANR	59533	ReturnType	static zend_always_inline int		59479	1					
ANR	59534	Identifier	zend_mm_bitset_find_zero		59479	2					
ANR	59535	ParameterList	"zend_mm_bitset * bitset , int size"		59479	3					
ANR	59536	Parameter	zend_mm_bitset * bitset	584:55:17937:17958	59479	0	True				
ANR	59537	ParameterType	zend_mm_bitset *		59479	0					
ANR	59538	Identifier	bitset		59479	1					
ANR	59539	Parameter	int size	584:79:17961:17968	59479	1	True				
ANR	59540	ParameterType	int		59479	0					
ANR	59541	Identifier	size		59479	1					
ANR	59542	CFGEntryNode	ENTRY		59479		True				
ANR	59543	CFGExitNode	EXIT		59479		True				
ANR	59544	Symbol	* i		59479						
ANR	59545	Symbol	size		59479						
ANR	59546	Symbol	tmp		59479						
ANR	59547	Symbol	zend_mm_bitset_nts		59479						
ANR	59548	Symbol	i		59479						
ANR	59549	Symbol	ZEND_MM_BITSET_LEN		59479						
ANR	59550	Symbol	* bitset		59479						
ANR	59551	Symbol	bitset		59479						
ANR	59552	Function	zend_mm_bitset_find_one	598:0:18168:18433							
ANR	59553	FunctionDef	"zend_mm_bitset_find_one (zend_mm_bitset * bitset , int size)"		59552	0					
ANR	59554	CompoundStatement		599:0:18256:18433	59552	0					
ANR	59555	IdentifierDeclStatement	int i = 0 ;	600:1:18259:18268	59552	0	True				
ANR	59556	IdentifierDecl	i = 0		59552	0					
ANR	59557	IdentifierDeclType	int		59552	0					
ANR	59558	Identifier	i		59552	1					
ANR	59559	AssignmentExpression	i = 0		59552	2		=			
ANR	59560	Identifier	i		59552	0					
ANR	59561	PrimaryExpression	0		59552	1					
ANR	59562	DoStatement	do		59552	1					
ANR	59563	CompoundStatement		5:2:22:52	59552	0					
ANR	59564	IdentifierDeclStatement	zend_mm_bitset tmp = bitset [ i ] ;	603:2:18279:18309	59552	0	True				
ANR	59565	IdentifierDecl	tmp = bitset [ i ]		59552	0					
ANR	59566	IdentifierDeclType	zend_mm_bitset		59552	0					
ANR	59567	Identifier	tmp		59552	1					
ANR	59568	AssignmentExpression	tmp = bitset [ i ]		59552	2		=			
ANR	59569	Identifier	tmp		59552	0					
ANR	59570	ArrayIndexing	bitset [ i ]		59552	1					
ANR	59571	Identifier	bitset		59552	0					
ANR	59572	Identifier	i		59552	1					
ANR	59573	IfStatement	if ( tmp != 0 )		59552	1					
ANR	59574	Condition	tmp != 0	604:6:18317:18324	59552	0	True				
ANR	59575	EqualityExpression	tmp != 0		59552	0		!=			
ANR	59576	Identifier	tmp		59552	0					
ANR	59577	PrimaryExpression	0		59552	1					
ANR	59578	CompoundStatement		6:16:70:70	59552	1					
ANR	59579	ReturnStatement	return i * ZEND_MM_BITSET_LEN + zend_mm_bitset_ntz ( tmp ) ;	605:3:18332:18387	59552	0	True				
ANR	59580	AdditiveExpression	i * ZEND_MM_BITSET_LEN + zend_mm_bitset_ntz ( tmp )		59552	0		+			
ANR	59581	MultiplicativeExpression	i * ZEND_MM_BITSET_LEN		59552	0		*			
ANR	59582	Identifier	i		59552	0					
ANR	59583	Identifier	ZEND_MM_BITSET_LEN		59552	1					
ANR	59584	CallExpression	zend_mm_bitset_ntz ( tmp )		59552	1					
ANR	59585	Callee	zend_mm_bitset_ntz		59552	0					
ANR	59586	Identifier	zend_mm_bitset_ntz		59552	0					
ANR	59587	ArgumentList	tmp		59552	1					
ANR	59588	Argument	tmp		59552	0					
ANR	59589	Identifier	tmp		59552	0					
ANR	59590	ExpressionStatement	i ++	607:2:18395:18398	59552	2	True				
ANR	59591	PostIncDecOperationExpression	i ++		59552	0					
ANR	59592	Identifier	i		59552	0					
ANR	59593	IncDec	++		59552	1					
ANR	59594	Condition	i < size	608:10:18410:18417	59552	1	True				
ANR	59595	RelationalExpression	i < size		59552	0		<			
ANR	59596	Identifier	i		59552	0					
ANR	59597	Identifier	size		59552	1					
ANR	59598	ReturnStatement	return - 1 ;	609:1:18422:18431	59552	2	True				
ANR	59599	UnaryOperationExpression	- 1		59552	0					
ANR	59600	UnaryOperator	-		59552	0					
ANR	59601	PrimaryExpression	1		59552	1					
ANR	59602	ReturnType	static zend_always_inline int		59552	1					
ANR	59603	Identifier	zend_mm_bitset_find_one		59552	2					
ANR	59604	ParameterList	"zend_mm_bitset * bitset , int size"		59552	3					
ANR	59605	Parameter	zend_mm_bitset * bitset	598:54:18222:18243	59552	0	True				
ANR	59606	ParameterType	zend_mm_bitset *		59552	0					
ANR	59607	Identifier	bitset		59552	1					
ANR	59608	Parameter	int size	598:78:18246:18253	59552	1	True				
ANR	59609	ParameterType	int		59552	0					
ANR	59610	Identifier	size		59552	1					
ANR	59611	CFGEntryNode	ENTRY		59552		True				
ANR	59612	CFGExitNode	EXIT		59552		True				
ANR	59613	Symbol	* i		59552						
ANR	59614	Symbol	size		59552						
ANR	59615	Symbol	tmp		59552						
ANR	59616	Symbol	zend_mm_bitset_ntz		59552						
ANR	59617	Symbol	i		59552						
ANR	59618	Symbol	ZEND_MM_BITSET_LEN		59552						
ANR	59619	Symbol	* bitset		59552						
ANR	59620	Symbol	bitset		59552						
ANR	59621	Function	zend_mm_bitset_find_zero_and_set	612:0:18436:18771							
ANR	59622	FunctionDef	"zend_mm_bitset_find_zero_and_set (zend_mm_bitset * bitset , int size)"		59621	0					
ANR	59623	CompoundStatement		613:0:18533:18771	59621	0					
ANR	59624	IdentifierDeclStatement	int i = 0 ;	614:1:18536:18545	59621	0	True				
ANR	59625	IdentifierDecl	i = 0		59621	0					
ANR	59626	IdentifierDeclType	int		59621	0					
ANR	59627	Identifier	i		59621	1					
ANR	59628	AssignmentExpression	i = 0		59621	2		=			
ANR	59629	Identifier	i		59621	0					
ANR	59630	PrimaryExpression	0		59621	1					
ANR	59631	DoStatement	do		59621	1					
ANR	59632	CompoundStatement		5:2:22:52	59621	0					
ANR	59633	IdentifierDeclStatement	zend_mm_bitset tmp = bitset [ i ] ;	617:2:18556:18586	59621	0	True				
ANR	59634	IdentifierDecl	tmp = bitset [ i ]		59621	0					
ANR	59635	IdentifierDeclType	zend_mm_bitset		59621	0					
ANR	59636	Identifier	tmp		59621	1					
ANR	59637	AssignmentExpression	tmp = bitset [ i ]		59621	2		=			
ANR	59638	Identifier	tmp		59621	0					
ANR	59639	ArrayIndexing	bitset [ i ]		59621	1					
ANR	59640	Identifier	bitset		59621	0					
ANR	59641	Identifier	i		59621	1					
ANR	59642	IfStatement	if ( tmp != ( zend_mm_bitset ) - 1 )		59621	1					
ANR	59643	Condition	tmp != ( zend_mm_bitset ) - 1	618:6:18594:18618	59621	0	True				
ANR	59644	EqualityExpression	tmp != ( zend_mm_bitset ) - 1		59621	0		!=			
ANR	59645	Identifier	tmp		59621	0					
ANR	59646	CastExpression	( zend_mm_bitset ) - 1		59621	1					
ANR	59647	CastTarget	zend_mm_bitset		59621	0					
ANR	59648	UnaryOperationExpression	- 1		59621	1					
ANR	59649	UnaryOperator	-		59621	0					
ANR	59650	PrimaryExpression	1		59621	1					
ANR	59651	CompoundStatement		7:3:92:123	59621	1					
ANR	59652	IdentifierDeclStatement	int n = zend_mm_bitset_nts ( tmp ) ;	619:3:18626:18657	59621	0	True				
ANR	59653	IdentifierDecl	n = zend_mm_bitset_nts ( tmp )		59621	0					
ANR	59654	IdentifierDeclType	int		59621	0					
ANR	59655	Identifier	n		59621	1					
ANR	59656	AssignmentExpression	n = zend_mm_bitset_nts ( tmp )		59621	2		=			
ANR	59657	Identifier	n		59621	0					
ANR	59658	CallExpression	zend_mm_bitset_nts ( tmp )		59621	1					
ANR	59659	Callee	zend_mm_bitset_nts		59621	0					
ANR	59660	Identifier	zend_mm_bitset_nts		59621	0					
ANR	59661	ArgumentList	tmp		59621	1					
ANR	59662	Argument	tmp		59621	0					
ANR	59663	Identifier	tmp		59621	0					
ANR	59664	ExpressionStatement	bitset [ i ] |= Z_UL ( 1 ) << n	620:3:18662:18687	59621	1	True				
ANR	59665	AssignmentExpression	bitset [ i ] |= Z_UL ( 1 ) << n		59621	0		|=			
ANR	59666	ArrayIndexing	bitset [ i ]		59621	0					
ANR	59667	Identifier	bitset		59621	0					
ANR	59668	Identifier	i		59621	1					
ANR	59669	ShiftExpression	Z_UL ( 1 ) << n		59621	1		<<			
ANR	59670	CallExpression	Z_UL ( 1 )		59621	0					
ANR	59671	Callee	Z_UL		59621	0					
ANR	59672	Identifier	Z_UL		59621	0					
ANR	59673	ArgumentList	1		59621	1					
ANR	59674	Argument	1		59621	0					
ANR	59675	PrimaryExpression	1		59621	0					
ANR	59676	Identifier	n		59621	1					
ANR	59677	ReturnStatement	return i * ZEND_MM_BITSET_LEN + n ;	621:3:18692:18725	59621	2	True				
ANR	59678	AdditiveExpression	i * ZEND_MM_BITSET_LEN + n		59621	0		+			
ANR	59679	MultiplicativeExpression	i * ZEND_MM_BITSET_LEN		59621	0		*			
ANR	59680	Identifier	i		59621	0					
ANR	59681	Identifier	ZEND_MM_BITSET_LEN		59621	1					
ANR	59682	Identifier	n		59621	1					
ANR	59683	ExpressionStatement	i ++	623:2:18733:18736	59621	2	True				
ANR	59684	PostIncDecOperationExpression	i ++		59621	0					
ANR	59685	Identifier	i		59621	0					
ANR	59686	IncDec	++		59621	1					
ANR	59687	Condition	i < size	624:10:18748:18755	59621	1	True				
ANR	59688	RelationalExpression	i < size		59621	0		<			
ANR	59689	Identifier	i		59621	0					
ANR	59690	Identifier	size		59621	1					
ANR	59691	ReturnStatement	return - 1 ;	625:1:18760:18769	59621	2	True				
ANR	59692	UnaryOperationExpression	- 1		59621	0					
ANR	59693	UnaryOperator	-		59621	0					
ANR	59694	PrimaryExpression	1		59621	1					
ANR	59695	ReturnType	static zend_always_inline int		59621	1					
ANR	59696	Identifier	zend_mm_bitset_find_zero_and_set		59621	2					
ANR	59697	ParameterList	"zend_mm_bitset * bitset , int size"		59621	3					
ANR	59698	Parameter	zend_mm_bitset * bitset	612:63:18499:18520	59621	0	True				
ANR	59699	ParameterType	zend_mm_bitset *		59621	0					
ANR	59700	Identifier	bitset		59621	1					
ANR	59701	Parameter	int size	612:87:18523:18530	59621	1	True				
ANR	59702	ParameterType	int		59621	0					
ANR	59703	Identifier	size		59621	1					
ANR	59704	CFGEntryNode	ENTRY		59621		True				
ANR	59705	CFGExitNode	EXIT		59621		True				
ANR	59706	Symbol	* i		59621						
ANR	59707	Symbol	size		59621						
ANR	59708	Symbol	tmp		59621						
ANR	59709	Symbol	Z_UL		59621						
ANR	59710	Symbol	zend_mm_bitset_nts		59621						
ANR	59711	Symbol	i		59621						
ANR	59712	Symbol	ZEND_MM_BITSET_LEN		59621						
ANR	59713	Symbol	* bitset		59621						
ANR	59714	Symbol	bitset		59621						
ANR	59715	Symbol	n		59621						
ANR	59716	Function	zend_mm_bitset_is_set	628:0:18774:18955							
ANR	59717	FunctionDef	"zend_mm_bitset_is_set (zend_mm_bitset * bitset , int bit)"		59716	0					
ANR	59718	CompoundStatement		629:0:18859:18955	59716	0					
ANR	59719	ReturnStatement	return ( bitset [ bit / ZEND_MM_BITSET_LEN ] & ( Z_L ( 1 ) << ( bit & ( ZEND_MM_BITSET_LEN - 1 ) ) ) ) != 0 ;	630:1:18862:18953	59716	0	True				
ANR	59720	EqualityExpression	( bitset [ bit / ZEND_MM_BITSET_LEN ] & ( Z_L ( 1 ) << ( bit & ( ZEND_MM_BITSET_LEN - 1 ) ) ) ) != 0		59716	0		!=			
ANR	59721	BitAndExpression	bitset [ bit / ZEND_MM_BITSET_LEN ] & ( Z_L ( 1 ) << ( bit & ( ZEND_MM_BITSET_LEN - 1 ) ) )		59716	0		&			
ANR	59722	ArrayIndexing	bitset [ bit / ZEND_MM_BITSET_LEN ]		59716	0					
ANR	59723	Identifier	bitset		59716	0					
ANR	59724	MultiplicativeExpression	bit / ZEND_MM_BITSET_LEN		59716	1		/			
ANR	59725	Identifier	bit		59716	0					
ANR	59726	Identifier	ZEND_MM_BITSET_LEN		59716	1					
ANR	59727	ShiftExpression	Z_L ( 1 ) << ( bit & ( ZEND_MM_BITSET_LEN - 1 ) )		59716	1		<<			
ANR	59728	CallExpression	Z_L ( 1 )		59716	0					
ANR	59729	Callee	Z_L		59716	0					
ANR	59730	Identifier	Z_L		59716	0					
ANR	59731	ArgumentList	1		59716	1					
ANR	59732	Argument	1		59716	0					
ANR	59733	PrimaryExpression	1		59716	0					
ANR	59734	BitAndExpression	bit & ( ZEND_MM_BITSET_LEN - 1 )		59716	1		&			
ANR	59735	Identifier	bit		59716	0					
ANR	59736	AdditiveExpression	ZEND_MM_BITSET_LEN - 1		59716	1		-			
ANR	59737	Identifier	ZEND_MM_BITSET_LEN		59716	0					
ANR	59738	PrimaryExpression	1		59716	1					
ANR	59739	PrimaryExpression	0		59716	1					
ANR	59740	ReturnType	static zend_always_inline int		59716	1					
ANR	59741	Identifier	zend_mm_bitset_is_set		59716	2					
ANR	59742	ParameterList	"zend_mm_bitset * bitset , int bit"		59716	3					
ANR	59743	Parameter	zend_mm_bitset * bitset	628:52:18826:18847	59716	0	True				
ANR	59744	ParameterType	zend_mm_bitset *		59716	0					
ANR	59745	Identifier	bitset		59716	1					
ANR	59746	Parameter	int bit	628:76:18850:18856	59716	1	True				
ANR	59747	ParameterType	int		59716	0					
ANR	59748	Identifier	bit		59716	1					
ANR	59749	CFGEntryNode	ENTRY		59716		True				
ANR	59750	CFGExitNode	EXIT		59716		True				
ANR	59751	Symbol	Z_L		59716						
ANR	59752	Symbol	* bit		59716						
ANR	59753	Symbol	ZEND_MM_BITSET_LEN		59716						
ANR	59754	Symbol	* bitset		59716						
ANR	59755	Symbol	bitset		59716						
ANR	59756	Symbol	bit		59716						
ANR	59757	Symbol	* ZEND_MM_BITSET_LEN		59716						
ANR	59758	Function	zend_mm_bitset_set_bit	633:0:18958:19128							
ANR	59759	FunctionDef	"zend_mm_bitset_set_bit (zend_mm_bitset * bitset , int bit)"		59758	0					
ANR	59760	CompoundStatement		634:0:19045:19128	59758	0					
ANR	59761	ExpressionStatement	bitset [ bit / ZEND_MM_BITSET_LEN ] |= ( Z_L ( 1 ) << ( bit & ( ZEND_MM_BITSET_LEN - 1 ) ) )	635:1:19048:19126	59758	0	True				
ANR	59762	AssignmentExpression	bitset [ bit / ZEND_MM_BITSET_LEN ] |= ( Z_L ( 1 ) << ( bit & ( ZEND_MM_BITSET_LEN - 1 ) ) )		59758	0		|=			
ANR	59763	ArrayIndexing	bitset [ bit / ZEND_MM_BITSET_LEN ]		59758	0					
ANR	59764	Identifier	bitset		59758	0					
ANR	59765	MultiplicativeExpression	bit / ZEND_MM_BITSET_LEN		59758	1		/			
ANR	59766	Identifier	bit		59758	0					
ANR	59767	Identifier	ZEND_MM_BITSET_LEN		59758	1					
ANR	59768	ShiftExpression	Z_L ( 1 ) << ( bit & ( ZEND_MM_BITSET_LEN - 1 ) )		59758	1		<<			
ANR	59769	CallExpression	Z_L ( 1 )		59758	0					
ANR	59770	Callee	Z_L		59758	0					
ANR	59771	Identifier	Z_L		59758	0					
ANR	59772	ArgumentList	1		59758	1					
ANR	59773	Argument	1		59758	0					
ANR	59774	PrimaryExpression	1		59758	0					
ANR	59775	BitAndExpression	bit & ( ZEND_MM_BITSET_LEN - 1 )		59758	1		&			
ANR	59776	Identifier	bit		59758	0					
ANR	59777	AdditiveExpression	ZEND_MM_BITSET_LEN - 1		59758	1		-			
ANR	59778	Identifier	ZEND_MM_BITSET_LEN		59758	0					
ANR	59779	PrimaryExpression	1		59758	1					
ANR	59780	ReturnType	static zend_always_inline void		59758	1					
ANR	59781	Identifier	zend_mm_bitset_set_bit		59758	2					
ANR	59782	ParameterList	"zend_mm_bitset * bitset , int bit"		59758	3					
ANR	59783	Parameter	zend_mm_bitset * bitset	633:54:19012:19033	59758	0	True				
ANR	59784	ParameterType	zend_mm_bitset *		59758	0					
ANR	59785	Identifier	bitset		59758	1					
ANR	59786	Parameter	int bit	633:78:19036:19042	59758	1	True				
ANR	59787	ParameterType	int		59758	0					
ANR	59788	Identifier	bit		59758	1					
ANR	59789	CFGEntryNode	ENTRY		59758		True				
ANR	59790	CFGExitNode	EXIT		59758		True				
ANR	59791	Symbol	Z_L		59758						
ANR	59792	Symbol	* bit		59758						
ANR	59793	Symbol	ZEND_MM_BITSET_LEN		59758						
ANR	59794	Symbol	* bitset		59758						
ANR	59795	Symbol	bitset		59758						
ANR	59796	Symbol	bit		59758						
ANR	59797	Symbol	* ZEND_MM_BITSET_LEN		59758						
ANR	59798	Function	zend_mm_bitset_reset_bit	638:0:19131:19304							
ANR	59799	FunctionDef	"zend_mm_bitset_reset_bit (zend_mm_bitset * bitset , int bit)"		59798	0					
ANR	59800	CompoundStatement		639:0:19220:19304	59798	0					
ANR	59801	ExpressionStatement	bitset [ bit / ZEND_MM_BITSET_LEN ] &= ~ ( Z_L ( 1 ) << ( bit & ( ZEND_MM_BITSET_LEN - 1 ) ) )	640:1:19223:19302	59798	0	True				
ANR	59802	AssignmentExpression	bitset [ bit / ZEND_MM_BITSET_LEN ] &= ~ ( Z_L ( 1 ) << ( bit & ( ZEND_MM_BITSET_LEN - 1 ) ) )		59798	0		&=			
ANR	59803	ArrayIndexing	bitset [ bit / ZEND_MM_BITSET_LEN ]		59798	0					
ANR	59804	Identifier	bitset		59798	0					
ANR	59805	MultiplicativeExpression	bit / ZEND_MM_BITSET_LEN		59798	1		/			
ANR	59806	Identifier	bit		59798	0					
ANR	59807	Identifier	ZEND_MM_BITSET_LEN		59798	1					
ANR	59808	UnaryOperationExpression	~ ( Z_L ( 1 ) << ( bit & ( ZEND_MM_BITSET_LEN - 1 ) ) )		59798	1					
ANR	59809	UnaryOperator	~		59798	0					
ANR	59810	ShiftExpression	Z_L ( 1 ) << ( bit & ( ZEND_MM_BITSET_LEN - 1 ) )		59798	1		<<			
ANR	59811	CallExpression	Z_L ( 1 )		59798	0					
ANR	59812	Callee	Z_L		59798	0					
ANR	59813	Identifier	Z_L		59798	0					
ANR	59814	ArgumentList	1		59798	1					
ANR	59815	Argument	1		59798	0					
ANR	59816	PrimaryExpression	1		59798	0					
ANR	59817	BitAndExpression	bit & ( ZEND_MM_BITSET_LEN - 1 )		59798	1		&			
ANR	59818	Identifier	bit		59798	0					
ANR	59819	AdditiveExpression	ZEND_MM_BITSET_LEN - 1		59798	1		-			
ANR	59820	Identifier	ZEND_MM_BITSET_LEN		59798	0					
ANR	59821	PrimaryExpression	1		59798	1					
ANR	59822	ReturnType	static zend_always_inline void		59798	1					
ANR	59823	Identifier	zend_mm_bitset_reset_bit		59798	2					
ANR	59824	ParameterList	"zend_mm_bitset * bitset , int bit"		59798	3					
ANR	59825	Parameter	zend_mm_bitset * bitset	638:56:19187:19208	59798	0	True				
ANR	59826	ParameterType	zend_mm_bitset *		59798	0					
ANR	59827	Identifier	bitset		59798	1					
ANR	59828	Parameter	int bit	638:80:19211:19217	59798	1	True				
ANR	59829	ParameterType	int		59798	0					
ANR	59830	Identifier	bit		59798	1					
ANR	59831	CFGEntryNode	ENTRY		59798		True				
ANR	59832	CFGExitNode	EXIT		59798		True				
ANR	59833	Symbol	Z_L		59798						
ANR	59834	Symbol	* bit		59798						
ANR	59835	Symbol	ZEND_MM_BITSET_LEN		59798						
ANR	59836	Symbol	* bitset		59798						
ANR	59837	Symbol	bitset		59798						
ANR	59838	Symbol	bit		59798						
ANR	59839	Symbol	* ZEND_MM_BITSET_LEN		59798						
ANR	59840	Function	zend_mm_bitset_set_range	643:0:19307:20279							
ANR	59841	FunctionDef	"zend_mm_bitset_set_range (zend_mm_bitset * bitset , int start , int len)"		59840	0					
ANR	59842	CompoundStatement		644:0:19407:20279	59840	0					
ANR	59843	IfStatement	if ( len == 1 )		59840	0					
ANR	59844	Condition	len == 1	645:5:19414:19421	59840	0	True				
ANR	59845	EqualityExpression	len == 1		59840	0		==			
ANR	59846	Identifier	len		59840	0					
ANR	59847	PrimaryExpression	1		59840	1					
ANR	59848	CompoundStatement		2:15:16:16	59840	1					
ANR	59849	ExpressionStatement	"zend_mm_bitset_set_bit ( bitset , start )"	646:2:19428:19465	59840	0	True				
ANR	59850	CallExpression	"zend_mm_bitset_set_bit ( bitset , start )"		59840	0					
ANR	59851	Callee	zend_mm_bitset_set_bit		59840	0					
ANR	59852	Identifier	zend_mm_bitset_set_bit		59840	0					
ANR	59853	ArgumentList	bitset		59840	1					
ANR	59854	Argument	bitset		59840	0					
ANR	59855	Identifier	bitset		59840	0					
ANR	59856	Argument	start		59840	1					
ANR	59857	Identifier	start		59840	0					
ANR	59858	ElseStatement	else		59840	0					
ANR	59859	CompoundStatement		8:2:209:227	59840	0					
ANR	59860	IdentifierDeclStatement	int pos = start / ZEND_MM_BITSET_LEN ;	648:2:19479:19515	59840	0	True				
ANR	59861	IdentifierDecl	pos = start / ZEND_MM_BITSET_LEN		59840	0					
ANR	59862	IdentifierDeclType	int		59840	0					
ANR	59863	Identifier	pos		59840	1					
ANR	59864	AssignmentExpression	pos = start / ZEND_MM_BITSET_LEN		59840	2		=			
ANR	59865	Identifier	pos		59840	0					
ANR	59866	MultiplicativeExpression	start / ZEND_MM_BITSET_LEN		59840	1		/			
ANR	59867	Identifier	start		59840	0					
ANR	59868	Identifier	ZEND_MM_BITSET_LEN		59840	1					
ANR	59869	IdentifierDeclStatement	int end = ( start + len - 1 ) / ZEND_MM_BITSET_LEN ;	649:2:19519:19567	59840	1	True				
ANR	59870	IdentifierDecl	end = ( start + len - 1 ) / ZEND_MM_BITSET_LEN		59840	0					
ANR	59871	IdentifierDeclType	int		59840	0					
ANR	59872	Identifier	end		59840	1					
ANR	59873	AssignmentExpression	end = ( start + len - 1 ) / ZEND_MM_BITSET_LEN		59840	2		=			
ANR	59874	Identifier	end		59840	0					
ANR	59875	MultiplicativeExpression	( start + len - 1 ) / ZEND_MM_BITSET_LEN		59840	1		/			
ANR	59876	AdditiveExpression	start + len - 1		59840	0		+			
ANR	59877	Identifier	start		59840	0					
ANR	59878	AdditiveExpression	len - 1		59840	1		-			
ANR	59879	Identifier	len		59840	0					
ANR	59880	PrimaryExpression	1		59840	1					
ANR	59881	Identifier	ZEND_MM_BITSET_LEN		59840	1					
ANR	59882	IdentifierDeclStatement	int bit = start & ( ZEND_MM_BITSET_LEN - 1 ) ;	650:2:19571:19613	59840	2	True				
ANR	59883	IdentifierDecl	bit = start & ( ZEND_MM_BITSET_LEN - 1 )		59840	0					
ANR	59884	IdentifierDeclType	int		59840	0					
ANR	59885	Identifier	bit		59840	1					
ANR	59886	AssignmentExpression	bit = start & ( ZEND_MM_BITSET_LEN - 1 )		59840	2		=			
ANR	59887	Identifier	bit		59840	0					
ANR	59888	BitAndExpression	start & ( ZEND_MM_BITSET_LEN - 1 )		59840	1		&			
ANR	59889	Identifier	start		59840	0					
ANR	59890	AdditiveExpression	ZEND_MM_BITSET_LEN - 1		59840	1		-			
ANR	59891	Identifier	ZEND_MM_BITSET_LEN		59840	0					
ANR	59892	PrimaryExpression	1		59840	1					
ANR	59893	IdentifierDeclStatement	zend_mm_bitset tmp ;	651:2:19617:19635	59840	3	True				
ANR	59894	IdentifierDecl	tmp		59840	0					
ANR	59895	IdentifierDeclType	zend_mm_bitset		59840	0					
ANR	59896	Identifier	tmp		59840	1					
ANR	59897	IfStatement	if ( pos != end )		59840	4					
ANR	59898	Condition	pos != end	653:6:19644:19653	59840	0	True				
ANR	59899	EqualityExpression	pos != end		59840	0		!=			
ANR	59900	Identifier	pos		59840	0					
ANR	59901	Identifier	end		59840	1					
ANR	59902	CompoundStatement		10:18:248:248	59840	1					
ANR	59903	ExpressionStatement	tmp = ( zend_mm_bitset ) - 1 << bit	655:3:19714:19745	59840	0	True				
ANR	59904	AssignmentExpression	tmp = ( zend_mm_bitset ) - 1 << bit		59840	0		=			
ANR	59905	Identifier	tmp		59840	0					
ANR	59906	ShiftExpression	( zend_mm_bitset ) - 1 << bit		59840	1		<<			
ANR	59907	CastExpression	( zend_mm_bitset ) - 1		59840	0					
ANR	59908	CastTarget	zend_mm_bitset		59840	0					
ANR	59909	UnaryOperationExpression	- 1		59840	1					
ANR	59910	UnaryOperator	-		59840	0					
ANR	59911	PrimaryExpression	1		59840	1					
ANR	59912	Identifier	bit		59840	1					
ANR	59913	ExpressionStatement	bitset [ pos ++ ] |= tmp	656:3:19750:19770	59840	1	True				
ANR	59914	AssignmentExpression	bitset [ pos ++ ] |= tmp		59840	0		|=			
ANR	59915	ArrayIndexing	bitset [ pos ++ ]		59840	0					
ANR	59916	Identifier	bitset		59840	0					
ANR	59917	PostIncDecOperationExpression	pos ++		59840	1					
ANR	59918	Identifier	pos		59840	0					
ANR	59919	IncDec	++		59840	1					
ANR	59920	Identifier	tmp		59840	1					
ANR	59921	WhileStatement	while ( pos != end )		59840	2					
ANR	59922	Condition	pos != end	657:10:19782:19791	59840	0	True				
ANR	59923	EqualityExpression	pos != end		59840	0		!=			
ANR	59924	Identifier	pos		59840	0					
ANR	59925	Identifier	end		59840	1					
ANR	59926	CompoundStatement		14:22:386:386	59840	1					
ANR	59927	ExpressionStatement	bitset [ pos ++ ] = ( zend_mm_bitset ) - 1	659:4:19823:19857	59840	0	True				
ANR	59928	AssignmentExpression	bitset [ pos ++ ] = ( zend_mm_bitset ) - 1		59840	0		=			
ANR	59929	ArrayIndexing	bitset [ pos ++ ]		59840	0					
ANR	59930	Identifier	bitset		59840	0					
ANR	59931	PostIncDecOperationExpression	pos ++		59840	1					
ANR	59932	Identifier	pos		59840	0					
ANR	59933	IncDec	++		59840	1					
ANR	59934	CastExpression	( zend_mm_bitset ) - 1		59840	1					
ANR	59935	CastTarget	zend_mm_bitset		59840	0					
ANR	59936	UnaryOperationExpression	- 1		59840	1					
ANR	59937	UnaryOperator	-		59840	0					
ANR	59938	PrimaryExpression	1		59840	1					
ANR	59939	ExpressionStatement	end = ( start + len - 1 ) & ( ZEND_MM_BITSET_LEN - 1 )	661:3:19867:19917	59840	3	True				
ANR	59940	AssignmentExpression	end = ( start + len - 1 ) & ( ZEND_MM_BITSET_LEN - 1 )		59840	0		=			
ANR	59941	Identifier	end		59840	0					
ANR	59942	BitAndExpression	( start + len - 1 ) & ( ZEND_MM_BITSET_LEN - 1 )		59840	1		&			
ANR	59943	AdditiveExpression	start + len - 1		59840	0		+			
ANR	59944	Identifier	start		59840	0					
ANR	59945	AdditiveExpression	len - 1		59840	1		-			
ANR	59946	Identifier	len		59840	0					
ANR	59947	PrimaryExpression	1		59840	1					
ANR	59948	AdditiveExpression	ZEND_MM_BITSET_LEN - 1		59840	1		-			
ANR	59949	Identifier	ZEND_MM_BITSET_LEN		59840	0					
ANR	59950	PrimaryExpression	1		59840	1					
ANR	59951	ExpressionStatement	tmp = ( zend_mm_bitset ) - 1 >> ( ( ZEND_MM_BITSET_LEN - 1 ) - end )	663:3:19958:20018	59840	4	True				
ANR	59952	AssignmentExpression	tmp = ( zend_mm_bitset ) - 1 >> ( ( ZEND_MM_BITSET_LEN - 1 ) - end )		59840	0		=			
ANR	59953	Identifier	tmp		59840	0					
ANR	59954	ShiftExpression	( zend_mm_bitset ) - 1 >> ( ( ZEND_MM_BITSET_LEN - 1 ) - end )		59840	1		>>			
ANR	59955	CastExpression	( zend_mm_bitset ) - 1		59840	0					
ANR	59956	CastTarget	zend_mm_bitset		59840	0					
ANR	59957	UnaryOperationExpression	- 1		59840	1					
ANR	59958	UnaryOperator	-		59840	0					
ANR	59959	PrimaryExpression	1		59840	1					
ANR	59960	AdditiveExpression	( ZEND_MM_BITSET_LEN - 1 ) - end		59840	1		-			
ANR	59961	AdditiveExpression	ZEND_MM_BITSET_LEN - 1		59840	0		-			
ANR	59962	Identifier	ZEND_MM_BITSET_LEN		59840	0					
ANR	59963	PrimaryExpression	1		59840	1					
ANR	59964	Identifier	end		59840	1					
ANR	59965	ExpressionStatement	bitset [ pos ] |= tmp	664:3:20023:20041	59840	5	True				
ANR	59966	AssignmentExpression	bitset [ pos ] |= tmp		59840	0		|=			
ANR	59967	ArrayIndexing	bitset [ pos ]		59840	0					
ANR	59968	Identifier	bitset		59840	0					
ANR	59969	Identifier	pos		59840	1					
ANR	59970	Identifier	tmp		59840	1					
ANR	59971	ElseStatement	else		59840	0					
ANR	59972	CompoundStatement		22:9:644:644	59840	0					
ANR	59973	ExpressionStatement	end = ( start + len - 1 ) & ( ZEND_MM_BITSET_LEN - 1 )	666:3:20057:20107	59840	0	True				
ANR	59974	AssignmentExpression	end = ( start + len - 1 ) & ( ZEND_MM_BITSET_LEN - 1 )		59840	0		=			
ANR	59975	Identifier	end		59840	0					
ANR	59976	BitAndExpression	( start + len - 1 ) & ( ZEND_MM_BITSET_LEN - 1 )		59840	1		&			
ANR	59977	AdditiveExpression	start + len - 1		59840	0		+			
ANR	59978	Identifier	start		59840	0					
ANR	59979	AdditiveExpression	len - 1		59840	1		-			
ANR	59980	Identifier	len		59840	0					
ANR	59981	PrimaryExpression	1		59840	1					
ANR	59982	AdditiveExpression	ZEND_MM_BITSET_LEN - 1		59840	1		-			
ANR	59983	Identifier	ZEND_MM_BITSET_LEN		59840	0					
ANR	59984	PrimaryExpression	1		59840	1					
ANR	59985	ExpressionStatement	tmp = ( zend_mm_bitset ) - 1 << bit	668:3:20150:20181	59840	1	True				
ANR	59986	AssignmentExpression	tmp = ( zend_mm_bitset ) - 1 << bit		59840	0		=			
ANR	59987	Identifier	tmp		59840	0					
ANR	59988	ShiftExpression	( zend_mm_bitset ) - 1 << bit		59840	1		<<			
ANR	59989	CastExpression	( zend_mm_bitset ) - 1		59840	0					
ANR	59990	CastTarget	zend_mm_bitset		59840	0					
ANR	59991	UnaryOperationExpression	- 1		59840	1					
ANR	59992	UnaryOperator	-		59840	0					
ANR	59993	PrimaryExpression	1		59840	1					
ANR	59994	Identifier	bit		59840	1					
ANR	59995	ExpressionStatement	tmp &= ( zend_mm_bitset ) - 1 >> ( ( ZEND_MM_BITSET_LEN - 1 ) - end )	669:3:20186:20247	59840	2	True				
ANR	59996	AssignmentExpression	tmp &= ( zend_mm_bitset ) - 1 >> ( ( ZEND_MM_BITSET_LEN - 1 ) - end )		59840	0		&=			
ANR	59997	Identifier	tmp		59840	0					
ANR	59998	ShiftExpression	( zend_mm_bitset ) - 1 >> ( ( ZEND_MM_BITSET_LEN - 1 ) - end )		59840	1		>>			
ANR	59999	CastExpression	( zend_mm_bitset ) - 1		59840	0					
ANR	60000	CastTarget	zend_mm_bitset		59840	0					
ANR	60001	UnaryOperationExpression	- 1		59840	1					
ANR	60002	UnaryOperator	-		59840	0					
ANR	60003	PrimaryExpression	1		59840	1					
ANR	60004	AdditiveExpression	( ZEND_MM_BITSET_LEN - 1 ) - end		59840	1		-			
ANR	60005	AdditiveExpression	ZEND_MM_BITSET_LEN - 1		59840	0		-			
ANR	60006	Identifier	ZEND_MM_BITSET_LEN		59840	0					
ANR	60007	PrimaryExpression	1		59840	1					
ANR	60008	Identifier	end		59840	1					
ANR	60009	ExpressionStatement	bitset [ pos ] |= tmp	670:3:20252:20270	59840	3	True				
ANR	60010	AssignmentExpression	bitset [ pos ] |= tmp		59840	0		|=			
ANR	60011	ArrayIndexing	bitset [ pos ]		59840	0					
ANR	60012	Identifier	bitset		59840	0					
ANR	60013	Identifier	pos		59840	1					
ANR	60014	Identifier	tmp		59840	1					
ANR	60015	ReturnType	static zend_always_inline void		59840	1					
ANR	60016	Identifier	zend_mm_bitset_set_range		59840	2					
ANR	60017	ParameterList	"zend_mm_bitset * bitset , int start , int len"		59840	3					
ANR	60018	Parameter	zend_mm_bitset * bitset	643:56:19363:19384	59840	0	True				
ANR	60019	ParameterType	zend_mm_bitset *		59840	0					
ANR	60020	Identifier	bitset		59840	1					
ANR	60021	Parameter	int start	643:80:19387:19395	59840	1	True				
ANR	60022	ParameterType	int		59840	0					
ANR	60023	Identifier	start		59840	1					
ANR	60024	Parameter	int len	643:91:19398:19404	59840	2	True				
ANR	60025	ParameterType	int		59840	0					
ANR	60026	Identifier	len		59840	1					
ANR	60027	CFGEntryNode	ENTRY		59840		True				
ANR	60028	CFGExitNode	EXIT		59840		True				
ANR	60029	Symbol	len		59840						
ANR	60030	Symbol	pos		59840						
ANR	60031	Symbol	tmp		59840						
ANR	60032	Symbol	start		59840						
ANR	60033	Symbol	ZEND_MM_BITSET_LEN		59840						
ANR	60034	Symbol	end		59840						
ANR	60035	Symbol	* bitset		59840						
ANR	60036	Symbol	bitset		59840						
ANR	60037	Symbol	bit		59840						
ANR	60038	Symbol	* pos		59840						
ANR	60039	Function	zend_mm_bitset_reset_range	675:0:20282:21247							
ANR	60040	FunctionDef	"zend_mm_bitset_reset_range (zend_mm_bitset * bitset , int start , int len)"		60039	0					
ANR	60041	CompoundStatement		676:0:20384:21247	60039	0					
ANR	60042	IfStatement	if ( len == 1 )		60039	0					
ANR	60043	Condition	len == 1	677:5:20391:20398	60039	0	True				
ANR	60044	EqualityExpression	len == 1		60039	0		==			
ANR	60045	Identifier	len		60039	0					
ANR	60046	PrimaryExpression	1		60039	1					
ANR	60047	CompoundStatement		2:15:16:16	60039	1					
ANR	60048	ExpressionStatement	"zend_mm_bitset_reset_bit ( bitset , start )"	678:2:20405:20444	60039	0	True				
ANR	60049	CallExpression	"zend_mm_bitset_reset_bit ( bitset , start )"		60039	0					
ANR	60050	Callee	zend_mm_bitset_reset_bit		60039	0					
ANR	60051	Identifier	zend_mm_bitset_reset_bit		60039	0					
ANR	60052	ArgumentList	bitset		60039	1					
ANR	60053	Argument	bitset		60039	0					
ANR	60054	Identifier	bitset		60039	0					
ANR	60055	Argument	start		60039	1					
ANR	60056	Identifier	start		60039	0					
ANR	60057	ElseStatement	else		60039	0					
ANR	60058	CompoundStatement		8:2:211:229	60039	0					
ANR	60059	IdentifierDeclStatement	int pos = start / ZEND_MM_BITSET_LEN ;	680:2:20458:20494	60039	0	True				
ANR	60060	IdentifierDecl	pos = start / ZEND_MM_BITSET_LEN		60039	0					
ANR	60061	IdentifierDeclType	int		60039	0					
ANR	60062	Identifier	pos		60039	1					
ANR	60063	AssignmentExpression	pos = start / ZEND_MM_BITSET_LEN		60039	2		=			
ANR	60064	Identifier	pos		60039	0					
ANR	60065	MultiplicativeExpression	start / ZEND_MM_BITSET_LEN		60039	1		/			
ANR	60066	Identifier	start		60039	0					
ANR	60067	Identifier	ZEND_MM_BITSET_LEN		60039	1					
ANR	60068	IdentifierDeclStatement	int end = ( start + len - 1 ) / ZEND_MM_BITSET_LEN ;	681:2:20498:20546	60039	1	True				
ANR	60069	IdentifierDecl	end = ( start + len - 1 ) / ZEND_MM_BITSET_LEN		60039	0					
ANR	60070	IdentifierDeclType	int		60039	0					
ANR	60071	Identifier	end		60039	1					
ANR	60072	AssignmentExpression	end = ( start + len - 1 ) / ZEND_MM_BITSET_LEN		60039	2		=			
ANR	60073	Identifier	end		60039	0					
ANR	60074	MultiplicativeExpression	( start + len - 1 ) / ZEND_MM_BITSET_LEN		60039	1		/			
ANR	60075	AdditiveExpression	start + len - 1		60039	0		+			
ANR	60076	Identifier	start		60039	0					
ANR	60077	AdditiveExpression	len - 1		60039	1		-			
ANR	60078	Identifier	len		60039	0					
ANR	60079	PrimaryExpression	1		60039	1					
ANR	60080	Identifier	ZEND_MM_BITSET_LEN		60039	1					
ANR	60081	IdentifierDeclStatement	int bit = start & ( ZEND_MM_BITSET_LEN - 1 ) ;	682:2:20550:20592	60039	2	True				
ANR	60082	IdentifierDecl	bit = start & ( ZEND_MM_BITSET_LEN - 1 )		60039	0					
ANR	60083	IdentifierDeclType	int		60039	0					
ANR	60084	Identifier	bit		60039	1					
ANR	60085	AssignmentExpression	bit = start & ( ZEND_MM_BITSET_LEN - 1 )		60039	2		=			
ANR	60086	Identifier	bit		60039	0					
ANR	60087	BitAndExpression	start & ( ZEND_MM_BITSET_LEN - 1 )		60039	1		&			
ANR	60088	Identifier	start		60039	0					
ANR	60089	AdditiveExpression	ZEND_MM_BITSET_LEN - 1		60039	1		-			
ANR	60090	Identifier	ZEND_MM_BITSET_LEN		60039	0					
ANR	60091	PrimaryExpression	1		60039	1					
ANR	60092	IdentifierDeclStatement	zend_mm_bitset tmp ;	683:2:20596:20614	60039	3	True				
ANR	60093	IdentifierDecl	tmp		60039	0					
ANR	60094	IdentifierDeclType	zend_mm_bitset		60039	0					
ANR	60095	Identifier	tmp		60039	1					
ANR	60096	IfStatement	if ( pos != end )		60039	4					
ANR	60097	Condition	pos != end	685:6:20623:20632	60039	0	True				
ANR	60098	EqualityExpression	pos != end		60039	0		!=			
ANR	60099	Identifier	pos		60039	0					
ANR	60100	Identifier	end		60039	1					
ANR	60101	CompoundStatement		10:18:250:250	60039	1					
ANR	60102	ExpressionStatement	tmp = ~ ( ( Z_L ( 1 ) << bit ) - 1 )	687:3:20695:20723	60039	0	True				
ANR	60103	AssignmentExpression	tmp = ~ ( ( Z_L ( 1 ) << bit ) - 1 )		60039	0		=			
ANR	60104	Identifier	tmp		60039	0					
ANR	60105	UnaryOperationExpression	~ ( ( Z_L ( 1 ) << bit ) - 1 )		60039	1					
ANR	60106	UnaryOperator	~		60039	0					
ANR	60107	AdditiveExpression	( Z_L ( 1 ) << bit ) - 1		60039	1		-			
ANR	60108	ShiftExpression	Z_L ( 1 ) << bit		60039	0		<<			
ANR	60109	CallExpression	Z_L ( 1 )		60039	0					
ANR	60110	Callee	Z_L		60039	0					
ANR	60111	Identifier	Z_L		60039	0					
ANR	60112	ArgumentList	1		60039	1					
ANR	60113	Argument	1		60039	0					
ANR	60114	PrimaryExpression	1		60039	0					
ANR	60115	Identifier	bit		60039	1					
ANR	60116	PrimaryExpression	1		60039	1					
ANR	60117	ExpressionStatement	bitset [ pos ++ ] &= ~tmp	688:3:20728:20749	60039	1	True				
ANR	60118	AssignmentExpression	bitset [ pos ++ ] &= ~tmp		60039	0		&=			
ANR	60119	ArrayIndexing	bitset [ pos ++ ]		60039	0					
ANR	60120	Identifier	bitset		60039	0					
ANR	60121	PostIncDecOperationExpression	pos ++		60039	1					
ANR	60122	Identifier	pos		60039	0					
ANR	60123	IncDec	++		60039	1					
ANR	60124	Identifier	~tmp		60039	1					
ANR	60125	WhileStatement	while ( pos != end )		60039	2					
ANR	60126	Condition	pos != end	689:10:20761:20770	60039	0	True				
ANR	60127	EqualityExpression	pos != end		60039	0		!=			
ANR	60128	Identifier	pos		60039	0					
ANR	60129	Identifier	end		60039	1					
ANR	60130	CompoundStatement		14:22:388:388	60039	1					
ANR	60131	ExpressionStatement	bitset [ pos ++ ] = 0	691:4:20802:20819	60039	0	True				
ANR	60132	AssignmentExpression	bitset [ pos ++ ] = 0		60039	0		=			
ANR	60133	ArrayIndexing	bitset [ pos ++ ]		60039	0					
ANR	60134	Identifier	bitset		60039	0					
ANR	60135	PostIncDecOperationExpression	pos ++		60039	1					
ANR	60136	Identifier	pos		60039	0					
ANR	60137	IncDec	++		60039	1					
ANR	60138	PrimaryExpression	0		60039	1					
ANR	60139	ExpressionStatement	end = ( start + len - 1 ) & ( ZEND_MM_BITSET_LEN - 1 )	693:3:20829:20879	60039	3	True				
ANR	60140	AssignmentExpression	end = ( start + len - 1 ) & ( ZEND_MM_BITSET_LEN - 1 )		60039	0		=			
ANR	60141	Identifier	end		60039	0					
ANR	60142	BitAndExpression	( start + len - 1 ) & ( ZEND_MM_BITSET_LEN - 1 )		60039	1		&			
ANR	60143	AdditiveExpression	start + len - 1		60039	0		+			
ANR	60144	Identifier	start		60039	0					
ANR	60145	AdditiveExpression	len - 1		60039	1		-			
ANR	60146	Identifier	len		60039	0					
ANR	60147	PrimaryExpression	1		60039	1					
ANR	60148	AdditiveExpression	ZEND_MM_BITSET_LEN - 1		60039	1		-			
ANR	60149	Identifier	ZEND_MM_BITSET_LEN		60039	0					
ANR	60150	PrimaryExpression	1		60039	1					
ANR	60151	ExpressionStatement	tmp = ( zend_mm_bitset ) - 1 >> ( ( ZEND_MM_BITSET_LEN - 1 ) - end )	695:3:20922:20982	60039	4	True				
ANR	60152	AssignmentExpression	tmp = ( zend_mm_bitset ) - 1 >> ( ( ZEND_MM_BITSET_LEN - 1 ) - end )		60039	0		=			
ANR	60153	Identifier	tmp		60039	0					
ANR	60154	ShiftExpression	( zend_mm_bitset ) - 1 >> ( ( ZEND_MM_BITSET_LEN - 1 ) - end )		60039	1		>>			
ANR	60155	CastExpression	( zend_mm_bitset ) - 1		60039	0					
ANR	60156	CastTarget	zend_mm_bitset		60039	0					
ANR	60157	UnaryOperationExpression	- 1		60039	1					
ANR	60158	UnaryOperator	-		60039	0					
ANR	60159	PrimaryExpression	1		60039	1					
ANR	60160	AdditiveExpression	( ZEND_MM_BITSET_LEN - 1 ) - end		60039	1		-			
ANR	60161	AdditiveExpression	ZEND_MM_BITSET_LEN - 1		60039	0		-			
ANR	60162	Identifier	ZEND_MM_BITSET_LEN		60039	0					
ANR	60163	PrimaryExpression	1		60039	1					
ANR	60164	Identifier	end		60039	1					
ANR	60165	ExpressionStatement	bitset [ pos ] &= ~tmp	696:3:20987:21006	60039	5	True				
ANR	60166	AssignmentExpression	bitset [ pos ] &= ~tmp		60039	0		&=			
ANR	60167	ArrayIndexing	bitset [ pos ]		60039	0					
ANR	60168	Identifier	bitset		60039	0					
ANR	60169	Identifier	pos		60039	1					
ANR	60170	Identifier	~tmp		60039	1					
ANR	60171	ElseStatement	else		60039	0					
ANR	60172	CompoundStatement		22:9:632:632	60039	0					
ANR	60173	ExpressionStatement	end = ( start + len - 1 ) & ( ZEND_MM_BITSET_LEN - 1 )	698:3:21022:21072	60039	0	True				
ANR	60174	AssignmentExpression	end = ( start + len - 1 ) & ( ZEND_MM_BITSET_LEN - 1 )		60039	0		=			
ANR	60175	Identifier	end		60039	0					
ANR	60176	BitAndExpression	( start + len - 1 ) & ( ZEND_MM_BITSET_LEN - 1 )		60039	1		&			
ANR	60177	AdditiveExpression	start + len - 1		60039	0		+			
ANR	60178	Identifier	start		60039	0					
ANR	60179	AdditiveExpression	len - 1		60039	1		-			
ANR	60180	Identifier	len		60039	0					
ANR	60181	PrimaryExpression	1		60039	1					
ANR	60182	AdditiveExpression	ZEND_MM_BITSET_LEN - 1		60039	1		-			
ANR	60183	Identifier	ZEND_MM_BITSET_LEN		60039	0					
ANR	60184	PrimaryExpression	1		60039	1					
ANR	60185	ExpressionStatement	tmp = ( zend_mm_bitset ) - 1 << bit	700:3:21117:21148	60039	1	True				
ANR	60186	AssignmentExpression	tmp = ( zend_mm_bitset ) - 1 << bit		60039	0		=			
ANR	60187	Identifier	tmp		60039	0					
ANR	60188	ShiftExpression	( zend_mm_bitset ) - 1 << bit		60039	1		<<			
ANR	60189	CastExpression	( zend_mm_bitset ) - 1		60039	0					
ANR	60190	CastTarget	zend_mm_bitset		60039	0					
ANR	60191	UnaryOperationExpression	- 1		60039	1					
ANR	60192	UnaryOperator	-		60039	0					
ANR	60193	PrimaryExpression	1		60039	1					
ANR	60194	Identifier	bit		60039	1					
ANR	60195	ExpressionStatement	tmp &= ( zend_mm_bitset ) - 1 >> ( ( ZEND_MM_BITSET_LEN - 1 ) - end )	701:3:21153:21214	60039	2	True				
ANR	60196	AssignmentExpression	tmp &= ( zend_mm_bitset ) - 1 >> ( ( ZEND_MM_BITSET_LEN - 1 ) - end )		60039	0		&=			
ANR	60197	Identifier	tmp		60039	0					
ANR	60198	ShiftExpression	( zend_mm_bitset ) - 1 >> ( ( ZEND_MM_BITSET_LEN - 1 ) - end )		60039	1		>>			
ANR	60199	CastExpression	( zend_mm_bitset ) - 1		60039	0					
ANR	60200	CastTarget	zend_mm_bitset		60039	0					
ANR	60201	UnaryOperationExpression	- 1		60039	1					
ANR	60202	UnaryOperator	-		60039	0					
ANR	60203	PrimaryExpression	1		60039	1					
ANR	60204	AdditiveExpression	( ZEND_MM_BITSET_LEN - 1 ) - end		60039	1		-			
ANR	60205	AdditiveExpression	ZEND_MM_BITSET_LEN - 1		60039	0		-			
ANR	60206	Identifier	ZEND_MM_BITSET_LEN		60039	0					
ANR	60207	PrimaryExpression	1		60039	1					
ANR	60208	Identifier	end		60039	1					
ANR	60209	ExpressionStatement	bitset [ pos ] &= ~tmp	702:3:21219:21238	60039	3	True				
ANR	60210	AssignmentExpression	bitset [ pos ] &= ~tmp		60039	0		&=			
ANR	60211	ArrayIndexing	bitset [ pos ]		60039	0					
ANR	60212	Identifier	bitset		60039	0					
ANR	60213	Identifier	pos		60039	1					
ANR	60214	Identifier	~tmp		60039	1					
ANR	60215	ReturnType	static zend_always_inline void		60039	1					
ANR	60216	Identifier	zend_mm_bitset_reset_range		60039	2					
ANR	60217	ParameterList	"zend_mm_bitset * bitset , int start , int len"		60039	3					
ANR	60218	Parameter	zend_mm_bitset * bitset	675:58:20340:20361	60039	0	True				
ANR	60219	ParameterType	zend_mm_bitset *		60039	0					
ANR	60220	Identifier	bitset		60039	1					
ANR	60221	Parameter	int start	675:82:20364:20372	60039	1	True				
ANR	60222	ParameterType	int		60039	0					
ANR	60223	Identifier	start		60039	1					
ANR	60224	Parameter	int len	675:93:20375:20381	60039	2	True				
ANR	60225	ParameterType	int		60039	0					
ANR	60226	Identifier	len		60039	1					
ANR	60227	CFGEntryNode	ENTRY		60039		True				
ANR	60228	CFGExitNode	EXIT		60039		True				
ANR	60229	Symbol	~tmp		60039						
ANR	60230	Symbol	len		60039						
ANR	60231	Symbol	pos		60039						
ANR	60232	Symbol	tmp		60039						
ANR	60233	Symbol	Z_L		60039						
ANR	60234	Symbol	start		60039						
ANR	60235	Symbol	ZEND_MM_BITSET_LEN		60039						
ANR	60236	Symbol	end		60039						
ANR	60237	Symbol	* bitset		60039						
ANR	60238	Symbol	bitset		60039						
ANR	60239	Symbol	bit		60039						
ANR	60240	Symbol	* pos		60039						
ANR	60241	Function	zend_mm_bitset_is_free_range	707:0:21250:22300							
ANR	60242	FunctionDef	"zend_mm_bitset_is_free_range (zend_mm_bitset * bitset , int start , int len)"		60241	0					
ANR	60243	CompoundStatement		708:0:21353:22300	60241	0					
ANR	60244	IfStatement	if ( len == 1 )		60241	0					
ANR	60245	Condition	len == 1	709:5:21360:21367	60241	0	True				
ANR	60246	EqualityExpression	len == 1		60241	0		==			
ANR	60247	Identifier	len		60241	0					
ANR	60248	PrimaryExpression	1		60241	1					
ANR	60249	CompoundStatement		2:15:16:16	60241	1					
ANR	60250	ReturnStatement	"return ! zend_mm_bitset_is_set ( bitset , start ) ;"	710:2:21374:21418	60241	0	True				
ANR	60251	UnaryOperationExpression	"! zend_mm_bitset_is_set ( bitset , start )"		60241	0					
ANR	60252	UnaryOperator	!		60241	0					
ANR	60253	CallExpression	"zend_mm_bitset_is_set ( bitset , start )"		60241	1					
ANR	60254	Callee	zend_mm_bitset_is_set		60241	0					
ANR	60255	Identifier	zend_mm_bitset_is_set		60241	0					
ANR	60256	ArgumentList	bitset		60241	1					
ANR	60257	Argument	bitset		60241	0					
ANR	60258	Identifier	bitset		60241	0					
ANR	60259	Argument	start		60241	1					
ANR	60260	Identifier	start		60241	0					
ANR	60261	ElseStatement	else		60241	0					
ANR	60262	CompoundStatement		8:2:216:234	60241	0					
ANR	60263	IdentifierDeclStatement	int pos = start / ZEND_MM_BITSET_LEN ;	712:2:21432:21468	60241	0	True				
ANR	60264	IdentifierDecl	pos = start / ZEND_MM_BITSET_LEN		60241	0					
ANR	60265	IdentifierDeclType	int		60241	0					
ANR	60266	Identifier	pos		60241	1					
ANR	60267	AssignmentExpression	pos = start / ZEND_MM_BITSET_LEN		60241	2		=			
ANR	60268	Identifier	pos		60241	0					
ANR	60269	MultiplicativeExpression	start / ZEND_MM_BITSET_LEN		60241	1		/			
ANR	60270	Identifier	start		60241	0					
ANR	60271	Identifier	ZEND_MM_BITSET_LEN		60241	1					
ANR	60272	IdentifierDeclStatement	int end = ( start + len - 1 ) / ZEND_MM_BITSET_LEN ;	713:2:21472:21520	60241	1	True				
ANR	60273	IdentifierDecl	end = ( start + len - 1 ) / ZEND_MM_BITSET_LEN		60241	0					
ANR	60274	IdentifierDeclType	int		60241	0					
ANR	60275	Identifier	end		60241	1					
ANR	60276	AssignmentExpression	end = ( start + len - 1 ) / ZEND_MM_BITSET_LEN		60241	2		=			
ANR	60277	Identifier	end		60241	0					
ANR	60278	MultiplicativeExpression	( start + len - 1 ) / ZEND_MM_BITSET_LEN		60241	1		/			
ANR	60279	AdditiveExpression	start + len - 1		60241	0		+			
ANR	60280	Identifier	start		60241	0					
ANR	60281	AdditiveExpression	len - 1		60241	1		-			
ANR	60282	Identifier	len		60241	0					
ANR	60283	PrimaryExpression	1		60241	1					
ANR	60284	Identifier	ZEND_MM_BITSET_LEN		60241	1					
ANR	60285	IdentifierDeclStatement	int bit = start & ( ZEND_MM_BITSET_LEN - 1 ) ;	714:2:21524:21566	60241	2	True				
ANR	60286	IdentifierDecl	bit = start & ( ZEND_MM_BITSET_LEN - 1 )		60241	0					
ANR	60287	IdentifierDeclType	int		60241	0					
ANR	60288	Identifier	bit		60241	1					
ANR	60289	AssignmentExpression	bit = start & ( ZEND_MM_BITSET_LEN - 1 )		60241	2		=			
ANR	60290	Identifier	bit		60241	0					
ANR	60291	BitAndExpression	start & ( ZEND_MM_BITSET_LEN - 1 )		60241	1		&			
ANR	60292	Identifier	start		60241	0					
ANR	60293	AdditiveExpression	ZEND_MM_BITSET_LEN - 1		60241	1		-			
ANR	60294	Identifier	ZEND_MM_BITSET_LEN		60241	0					
ANR	60295	PrimaryExpression	1		60241	1					
ANR	60296	IdentifierDeclStatement	zend_mm_bitset tmp ;	715:2:21570:21588	60241	3	True				
ANR	60297	IdentifierDecl	tmp		60241	0					
ANR	60298	IdentifierDeclType	zend_mm_bitset		60241	0					
ANR	60299	Identifier	tmp		60241	1					
ANR	60300	IfStatement	if ( pos != end )		60241	4					
ANR	60301	Condition	pos != end	717:6:21597:21606	60241	0	True				
ANR	60302	EqualityExpression	pos != end		60241	0		!=			
ANR	60303	Identifier	pos		60241	0					
ANR	60304	Identifier	end		60241	1					
ANR	60305	CompoundStatement		10:18:255:255	60241	1					
ANR	60306	ExpressionStatement	tmp = ( zend_mm_bitset ) - 1 << bit	719:3:21667:21698	60241	0	True				
ANR	60307	AssignmentExpression	tmp = ( zend_mm_bitset ) - 1 << bit		60241	0		=			
ANR	60308	Identifier	tmp		60241	0					
ANR	60309	ShiftExpression	( zend_mm_bitset ) - 1 << bit		60241	1		<<			
ANR	60310	CastExpression	( zend_mm_bitset ) - 1		60241	0					
ANR	60311	CastTarget	zend_mm_bitset		60241	0					
ANR	60312	UnaryOperationExpression	- 1		60241	1					
ANR	60313	UnaryOperator	-		60241	0					
ANR	60314	PrimaryExpression	1		60241	1					
ANR	60315	Identifier	bit		60241	1					
ANR	60316	IfStatement	if ( ( bitset [ pos ++ ] & tmp ) != 0 )		60241	1					
ANR	60317	Condition	( bitset [ pos ++ ] & tmp ) != 0	720:7:21707:21732	60241	0	True				
ANR	60318	EqualityExpression	( bitset [ pos ++ ] & tmp ) != 0		60241	0		!=			
ANR	60319	BitAndExpression	bitset [ pos ++ ] & tmp		60241	0		&			
ANR	60320	ArrayIndexing	bitset [ pos ++ ]		60241	0					
ANR	60321	Identifier	bitset		60241	0					
ANR	60322	PostIncDecOperationExpression	pos ++		60241	1					
ANR	60323	Identifier	pos		60241	0					
ANR	60324	IncDec	++		60241	1					
ANR	60325	Identifier	tmp		60241	1					
ANR	60326	PrimaryExpression	0		60241	1					
ANR	60327	CompoundStatement		13:35:381:381	60241	1					
ANR	60328	ReturnStatement	return 0 ;	721:4:21741:21749	60241	0	True				
ANR	60329	PrimaryExpression	0		60241	0					
ANR	60330	WhileStatement	while ( pos != end )		60241	2					
ANR	60331	Condition	pos != end	723:10:21766:21775	60241	0	True				
ANR	60332	EqualityExpression	pos != end		60241	0		!=			
ANR	60333	Identifier	pos		60241	0					
ANR	60334	Identifier	end		60241	1					
ANR	60335	CompoundStatement		16:22:424:424	60241	1					
ANR	60336	IfStatement	if ( bitset [ pos ++ ] != 0 )		60241	0					
ANR	60337	Condition	bitset [ pos ++ ] != 0	725:8:21811:21828	60241	0	True				
ANR	60338	EqualityExpression	bitset [ pos ++ ] != 0		60241	0		!=			
ANR	60339	ArrayIndexing	bitset [ pos ++ ]		60241	0					
ANR	60340	Identifier	bitset		60241	0					
ANR	60341	PostIncDecOperationExpression	pos ++		60241	1					
ANR	60342	Identifier	pos		60241	0					
ANR	60343	IncDec	++		60241	1					
ANR	60344	PrimaryExpression	0		60241	1					
ANR	60345	CompoundStatement		18:28:477:477	60241	1					
ANR	60346	ReturnStatement	return 0 ;	726:5:21838:21846	60241	0	True				
ANR	60347	PrimaryExpression	0		60241	0					
ANR	60348	ExpressionStatement	end = ( start + len - 1 ) & ( ZEND_MM_BITSET_LEN - 1 )	729:3:21862:21912	60241	3	True				
ANR	60349	AssignmentExpression	end = ( start + len - 1 ) & ( ZEND_MM_BITSET_LEN - 1 )		60241	0		=			
ANR	60350	Identifier	end		60241	0					
ANR	60351	BitAndExpression	( start + len - 1 ) & ( ZEND_MM_BITSET_LEN - 1 )		60241	1		&			
ANR	60352	AdditiveExpression	start + len - 1		60241	0		+			
ANR	60353	Identifier	start		60241	0					
ANR	60354	AdditiveExpression	len - 1		60241	1		-			
ANR	60355	Identifier	len		60241	0					
ANR	60356	PrimaryExpression	1		60241	1					
ANR	60357	AdditiveExpression	ZEND_MM_BITSET_LEN - 1		60241	1		-			
ANR	60358	Identifier	ZEND_MM_BITSET_LEN		60241	0					
ANR	60359	PrimaryExpression	1		60241	1					
ANR	60360	ExpressionStatement	tmp = ( zend_mm_bitset ) - 1 >> ( ( ZEND_MM_BITSET_LEN - 1 ) - end )	731:3:21953:22013	60241	4	True				
ANR	60361	AssignmentExpression	tmp = ( zend_mm_bitset ) - 1 >> ( ( ZEND_MM_BITSET_LEN - 1 ) - end )		60241	0		=			
ANR	60362	Identifier	tmp		60241	0					
ANR	60363	ShiftExpression	( zend_mm_bitset ) - 1 >> ( ( ZEND_MM_BITSET_LEN - 1 ) - end )		60241	1		>>			
ANR	60364	CastExpression	( zend_mm_bitset ) - 1		60241	0					
ANR	60365	CastTarget	zend_mm_bitset		60241	0					
ANR	60366	UnaryOperationExpression	- 1		60241	1					
ANR	60367	UnaryOperator	-		60241	0					
ANR	60368	PrimaryExpression	1		60241	1					
ANR	60369	AdditiveExpression	( ZEND_MM_BITSET_LEN - 1 ) - end		60241	1		-			
ANR	60370	AdditiveExpression	ZEND_MM_BITSET_LEN - 1		60241	0		-			
ANR	60371	Identifier	ZEND_MM_BITSET_LEN		60241	0					
ANR	60372	PrimaryExpression	1		60241	1					
ANR	60373	Identifier	end		60241	1					
ANR	60374	ReturnStatement	return ( bitset [ pos ] & tmp ) == 0 ;	732:3:22018:22049	60241	5	True				
ANR	60375	EqualityExpression	( bitset [ pos ] & tmp ) == 0		60241	0		==			
ANR	60376	BitAndExpression	bitset [ pos ] & tmp		60241	0		&			
ANR	60377	ArrayIndexing	bitset [ pos ]		60241	0					
ANR	60378	Identifier	bitset		60241	0					
ANR	60379	Identifier	pos		60241	1					
ANR	60380	Identifier	tmp		60241	1					
ANR	60381	PrimaryExpression	0		60241	1					
ANR	60382	ElseStatement	else		60241	0					
ANR	60383	CompoundStatement		26:9:706:706	60241	0					
ANR	60384	ExpressionStatement	end = ( start + len - 1 ) & ( ZEND_MM_BITSET_LEN - 1 )	734:3:22065:22115	60241	0	True				
ANR	60385	AssignmentExpression	end = ( start + len - 1 ) & ( ZEND_MM_BITSET_LEN - 1 )		60241	0		=			
ANR	60386	Identifier	end		60241	0					
ANR	60387	BitAndExpression	( start + len - 1 ) & ( ZEND_MM_BITSET_LEN - 1 )		60241	1		&			
ANR	60388	AdditiveExpression	start + len - 1		60241	0		+			
ANR	60389	Identifier	start		60241	0					
ANR	60390	AdditiveExpression	len - 1		60241	1		-			
ANR	60391	Identifier	len		60241	0					
ANR	60392	PrimaryExpression	1		60241	1					
ANR	60393	AdditiveExpression	ZEND_MM_BITSET_LEN - 1		60241	1		-			
ANR	60394	Identifier	ZEND_MM_BITSET_LEN		60241	0					
ANR	60395	PrimaryExpression	1		60241	1					
ANR	60396	ExpressionStatement	tmp = ( zend_mm_bitset ) - 1 << bit	736:3:22158:22189	60241	1	True				
ANR	60397	AssignmentExpression	tmp = ( zend_mm_bitset ) - 1 << bit		60241	0		=			
ANR	60398	Identifier	tmp		60241	0					
ANR	60399	ShiftExpression	( zend_mm_bitset ) - 1 << bit		60241	1		<<			
ANR	60400	CastExpression	( zend_mm_bitset ) - 1		60241	0					
ANR	60401	CastTarget	zend_mm_bitset		60241	0					
ANR	60402	UnaryOperationExpression	- 1		60241	1					
ANR	60403	UnaryOperator	-		60241	0					
ANR	60404	PrimaryExpression	1		60241	1					
ANR	60405	Identifier	bit		60241	1					
ANR	60406	ExpressionStatement	tmp &= ( zend_mm_bitset ) - 1 >> ( ( ZEND_MM_BITSET_LEN - 1 ) - end )	737:3:22194:22255	60241	2	True				
ANR	60407	AssignmentExpression	tmp &= ( zend_mm_bitset ) - 1 >> ( ( ZEND_MM_BITSET_LEN - 1 ) - end )		60241	0		&=			
ANR	60408	Identifier	tmp		60241	0					
ANR	60409	ShiftExpression	( zend_mm_bitset ) - 1 >> ( ( ZEND_MM_BITSET_LEN - 1 ) - end )		60241	1		>>			
ANR	60410	CastExpression	( zend_mm_bitset ) - 1		60241	0					
ANR	60411	CastTarget	zend_mm_bitset		60241	0					
ANR	60412	UnaryOperationExpression	- 1		60241	1					
ANR	60413	UnaryOperator	-		60241	0					
ANR	60414	PrimaryExpression	1		60241	1					
ANR	60415	AdditiveExpression	( ZEND_MM_BITSET_LEN - 1 ) - end		60241	1		-			
ANR	60416	AdditiveExpression	ZEND_MM_BITSET_LEN - 1		60241	0		-			
ANR	60417	Identifier	ZEND_MM_BITSET_LEN		60241	0					
ANR	60418	PrimaryExpression	1		60241	1					
ANR	60419	Identifier	end		60241	1					
ANR	60420	ReturnStatement	return ( bitset [ pos ] & tmp ) == 0 ;	738:3:22260:22291	60241	3	True				
ANR	60421	EqualityExpression	( bitset [ pos ] & tmp ) == 0		60241	0		==			
ANR	60422	BitAndExpression	bitset [ pos ] & tmp		60241	0		&			
ANR	60423	ArrayIndexing	bitset [ pos ]		60241	0					
ANR	60424	Identifier	bitset		60241	0					
ANR	60425	Identifier	pos		60241	1					
ANR	60426	Identifier	tmp		60241	1					
ANR	60427	PrimaryExpression	0		60241	1					
ANR	60428	ReturnType	static zend_always_inline int		60241	1					
ANR	60429	Identifier	zend_mm_bitset_is_free_range		60241	2					
ANR	60430	ParameterList	"zend_mm_bitset * bitset , int start , int len"		60241	3					
ANR	60431	Parameter	zend_mm_bitset * bitset	707:59:21309:21330	60241	0	True				
ANR	60432	ParameterType	zend_mm_bitset *		60241	0					
ANR	60433	Identifier	bitset		60241	1					
ANR	60434	Parameter	int start	707:83:21333:21341	60241	1	True				
ANR	60435	ParameterType	int		60241	0					
ANR	60436	Identifier	start		60241	1					
ANR	60437	Parameter	int len	707:94:21344:21350	60241	2	True				
ANR	60438	ParameterType	int		60241	0					
ANR	60439	Identifier	len		60241	1					
ANR	60440	CFGEntryNode	ENTRY		60241		True				
ANR	60441	CFGExitNode	EXIT		60241		True				
ANR	60442	Symbol	len		60241						
ANR	60443	Symbol	pos		60241						
ANR	60444	Symbol	tmp		60241						
ANR	60445	Symbol	start		60241						
ANR	60446	Symbol	ZEND_MM_BITSET_LEN		60241						
ANR	60447	Symbol	end		60241						
ANR	60448	Symbol	* bitset		60241						
ANR	60449	Symbol	bitset		60241						
ANR	60450	Symbol	zend_mm_bitset_is_set		60241						
ANR	60451	Symbol	bit		60241						
ANR	60452	Symbol	* pos		60241						
ANR	60453	Function	zend_mm_chunk_alloc_int	747:0:22343:23506							
ANR	60454	FunctionDef	"zend_mm_chunk_alloc_int (size_t size , size_t alignment)"		60453	0					
ANR	60455	CompoundStatement		748:0:22411:23506	60453	0					
ANR	60456	IdentifierDeclStatement	void * ptr = zend_mm_mmap ( size ) ;	749:1:22414:22444	60453	0	True				
ANR	60457	IdentifierDecl	* ptr = zend_mm_mmap ( size )		60453	0					
ANR	60458	IdentifierDeclType	void *		60453	0					
ANR	60459	Identifier	ptr		60453	1					
ANR	60460	AssignmentExpression	* ptr = zend_mm_mmap ( size )		60453	2		=			
ANR	60461	Identifier	ptr		60453	0					
ANR	60462	CallExpression	zend_mm_mmap ( size )		60453	1					
ANR	60463	Callee	zend_mm_mmap		60453	0					
ANR	60464	Identifier	zend_mm_mmap		60453	0					
ANR	60465	ArgumentList	size		60453	1					
ANR	60466	Argument	size		60453	0					
ANR	60467	Identifier	size		60453	0					
ANR	60468	IfStatement	if ( ptr == NULL )		60453	1					
ANR	60469	Condition	ptr == NULL	751:5:22452:22462	60453	0	True				
ANR	60470	EqualityExpression	ptr == NULL		60453	0		==			
ANR	60471	Identifier	ptr		60453	0					
ANR	60472	Identifier	NULL		60453	1					
ANR	60473	CompoundStatement		4:18:53:53	60453	1					
ANR	60474	ReturnStatement	return NULL ;	752:2:22469:22480	60453	0	True				
ANR	60475	Identifier	NULL		60453	0					
ANR	60476	ElseStatement	else		60453	0					
ANR	60477	IfStatement	"if ( ZEND_MM_ALIGNED_OFFSET ( ptr , alignment ) == 0 )"		60453	0					
ANR	60478	Condition	"ZEND_MM_ALIGNED_OFFSET ( ptr , alignment ) == 0"	753:12:22494:22536	60453	0	True				
ANR	60479	EqualityExpression	"ZEND_MM_ALIGNED_OFFSET ( ptr , alignment ) == 0"		60453	0		==			
ANR	60480	CallExpression	"ZEND_MM_ALIGNED_OFFSET ( ptr , alignment )"		60453	0					
ANR	60481	Callee	ZEND_MM_ALIGNED_OFFSET		60453	0					
ANR	60482	Identifier	ZEND_MM_ALIGNED_OFFSET		60453	0					
ANR	60483	ArgumentList	ptr		60453	1					
ANR	60484	Argument	ptr		60453	0					
ANR	60485	Identifier	ptr		60453	0					
ANR	60486	Argument	alignment		60453	1					
ANR	60487	Identifier	alignment		60453	0					
ANR	60488	PrimaryExpression	0		60453	1					
ANR	60489	CompoundStatement		6:57:127:127	60453	1					
ANR	60490	ExpressionStatement	"madvise ( ptr , size , MADV_HUGEPAGE )"	755:5:22567:22600	60453	0	True				
ANR	60491	CallExpression	"madvise ( ptr , size , MADV_HUGEPAGE )"		60453	0					
ANR	60492	Callee	madvise		60453	0					
ANR	60493	Identifier	madvise		60453	0					
ANR	60494	ArgumentList	ptr		60453	1					
ANR	60495	Argument	ptr		60453	0					
ANR	60496	Identifier	ptr		60453	0					
ANR	60497	Argument	size		60453	1					
ANR	60498	Identifier	size		60453	0					
ANR	60499	Argument	MADV_HUGEPAGE		60453	2					
ANR	60500	Identifier	MADV_HUGEPAGE		60453	0					
ANR	60501	ReturnStatement	return ptr ;	757:2:22611:22621	60453	1	True				
ANR	60502	Identifier	ptr		60453	0					
ANR	60503	ElseStatement	else		60453	0					
ANR	60504	CompoundStatement		12:2:223:236	60453	0					
ANR	60505	IdentifierDeclStatement	size_t offset ;	759:2:22635:22648	60453	0	True				
ANR	60506	IdentifierDecl	offset		60453	0					
ANR	60507	IdentifierDeclType	size_t		60453	0					
ANR	60508	Identifier	offset		60453	1					
ANR	60509	ExpressionStatement	"zend_mm_munmap ( ptr , size )"	762:2:22685:22710	60453	1	True				
ANR	60510	CallExpression	"zend_mm_munmap ( ptr , size )"		60453	0					
ANR	60511	Callee	zend_mm_munmap		60453	0					
ANR	60512	Identifier	zend_mm_munmap		60453	0					
ANR	60513	ArgumentList	ptr		60453	1					
ANR	60514	Argument	ptr		60453	0					
ANR	60515	Identifier	ptr		60453	0					
ANR	60516	Argument	size		60453	1					
ANR	60517	Identifier	size		60453	0					
ANR	60518	ExpressionStatement	ptr = zend_mm_mmap ( size + alignment - REAL_PAGE_SIZE )	763:2:22714:22767	60453	2	True				
ANR	60519	AssignmentExpression	ptr = zend_mm_mmap ( size + alignment - REAL_PAGE_SIZE )		60453	0		=			
ANR	60520	Identifier	ptr		60453	0					
ANR	60521	CallExpression	zend_mm_mmap ( size + alignment - REAL_PAGE_SIZE )		60453	1					
ANR	60522	Callee	zend_mm_mmap		60453	0					
ANR	60523	Identifier	zend_mm_mmap		60453	0					
ANR	60524	ArgumentList	size + alignment - REAL_PAGE_SIZE		60453	1					
ANR	60525	Argument	size + alignment - REAL_PAGE_SIZE		60453	0					
ANR	60526	AdditiveExpression	size + alignment - REAL_PAGE_SIZE		60453	0		+			
ANR	60527	Identifier	size		60453	0					
ANR	60528	AdditiveExpression	alignment - REAL_PAGE_SIZE		60453	1		-			
ANR	60529	Identifier	alignment		60453	0					
ANR	60530	Identifier	REAL_PAGE_SIZE		60453	1					
ANR	60531	ExpressionStatement	"offset = ZEND_MM_ALIGNED_OFFSET ( ptr , alignment )"	765:2:22785:22832	60453	3	True				
ANR	60532	AssignmentExpression	"offset = ZEND_MM_ALIGNED_OFFSET ( ptr , alignment )"		60453	0		=			
ANR	60533	Identifier	offset		60453	0					
ANR	60534	CallExpression	"ZEND_MM_ALIGNED_OFFSET ( ptr , alignment )"		60453	1					
ANR	60535	Callee	ZEND_MM_ALIGNED_OFFSET		60453	0					
ANR	60536	Identifier	ZEND_MM_ALIGNED_OFFSET		60453	0					
ANR	60537	ArgumentList	ptr		60453	1					
ANR	60538	Argument	ptr		60453	0					
ANR	60539	Identifier	ptr		60453	0					
ANR	60540	Argument	alignment		60453	1					
ANR	60541	Identifier	alignment		60453	0					
ANR	60542	ExpressionStatement	"zend_mm_munmap ( ptr , size + alignment - REAL_PAGE_SIZE )"	766:2:22836:22890	60453	4	True				
ANR	60543	CallExpression	"zend_mm_munmap ( ptr , size + alignment - REAL_PAGE_SIZE )"		60453	0					
ANR	60544	Callee	zend_mm_munmap		60453	0					
ANR	60545	Identifier	zend_mm_munmap		60453	0					
ANR	60546	ArgumentList	ptr		60453	1					
ANR	60547	Argument	ptr		60453	0					
ANR	60548	Identifier	ptr		60453	0					
ANR	60549	Argument	size + alignment - REAL_PAGE_SIZE		60453	1					
ANR	60550	AdditiveExpression	size + alignment - REAL_PAGE_SIZE		60453	0		+			
ANR	60551	Identifier	size		60453	0					
ANR	60552	AdditiveExpression	alignment - REAL_PAGE_SIZE		60453	1		-			
ANR	60553	Identifier	alignment		60453	0					
ANR	60554	Identifier	REAL_PAGE_SIZE		60453	1					
ANR	60555	ExpressionStatement	"ptr = zend_mm_mmap_fixed ( ( void * ) ( ( char * ) ptr + ( alignment - offset ) ) , size )"	767:2:22894:22968	60453	5	True				
ANR	60556	AssignmentExpression	"ptr = zend_mm_mmap_fixed ( ( void * ) ( ( char * ) ptr + ( alignment - offset ) ) , size )"		60453	0		=			
ANR	60557	Identifier	ptr		60453	0					
ANR	60558	CallExpression	"zend_mm_mmap_fixed ( ( void * ) ( ( char * ) ptr + ( alignment - offset ) ) , size )"		60453	1					
ANR	60559	Callee	zend_mm_mmap_fixed		60453	0					
ANR	60560	Identifier	zend_mm_mmap_fixed		60453	0					
ANR	60561	ArgumentList	( void * ) ( ( char * ) ptr + ( alignment - offset ) )		60453	1					
ANR	60562	Argument	( void * ) ( ( char * ) ptr + ( alignment - offset ) )		60453	0					
ANR	60563	CastExpression	( void * ) ( ( char * ) ptr + ( alignment - offset ) )		60453	0					
ANR	60564	CastTarget	void *		60453	0					
ANR	60565	AdditiveExpression	( char * ) ptr + ( alignment - offset )		60453	1		+			
ANR	60566	CastExpression	( char * ) ptr		60453	0					
ANR	60567	CastTarget	char *		60453	0					
ANR	60568	Identifier	ptr		60453	1					
ANR	60569	AdditiveExpression	alignment - offset		60453	1		-			
ANR	60570	Identifier	alignment		60453	0					
ANR	60571	Identifier	offset		60453	1					
ANR	60572	Argument	size		60453	1					
ANR	60573	Identifier	size		60453	0					
ANR	60574	ExpressionStatement	"offset = ZEND_MM_ALIGNED_OFFSET ( ptr , alignment )"	768:2:22972:23019	60453	6	True				
ANR	60575	AssignmentExpression	"offset = ZEND_MM_ALIGNED_OFFSET ( ptr , alignment )"		60453	0		=			
ANR	60576	Identifier	offset		60453	0					
ANR	60577	CallExpression	"ZEND_MM_ALIGNED_OFFSET ( ptr , alignment )"		60453	1					
ANR	60578	Callee	ZEND_MM_ALIGNED_OFFSET		60453	0					
ANR	60579	Identifier	ZEND_MM_ALIGNED_OFFSET		60453	0					
ANR	60580	ArgumentList	ptr		60453	1					
ANR	60581	Argument	ptr		60453	0					
ANR	60582	Identifier	ptr		60453	0					
ANR	60583	Argument	alignment		60453	1					
ANR	60584	Identifier	alignment		60453	0					
ANR	60585	IfStatement	if ( offset != 0 )		60453	7					
ANR	60586	Condition	offset != 0	769:6:23027:23037	60453	0	True				
ANR	60587	EqualityExpression	offset != 0		60453	0		!=			
ANR	60588	Identifier	offset		60453	0					
ANR	60589	PrimaryExpression	0		60453	1					
ANR	60590	CompoundStatement		22:19:628:628	60453	1					
ANR	60591	ExpressionStatement	"zend_mm_munmap ( ptr , size )"	770:3:23045:23070	60453	0	True				
ANR	60592	CallExpression	"zend_mm_munmap ( ptr , size )"		60453	0					
ANR	60593	Callee	zend_mm_munmap		60453	0					
ANR	60594	Identifier	zend_mm_munmap		60453	0					
ANR	60595	ArgumentList	ptr		60453	1					
ANR	60596	Argument	ptr		60453	0					
ANR	60597	Identifier	ptr		60453	0					
ANR	60598	Argument	size		60453	1					
ANR	60599	Identifier	size		60453	0					
ANR	60600	ReturnStatement	return NULL ;	771:3:23075:23086	60453	1	True				
ANR	60601	Identifier	NULL		60453	0					
ANR	60602	ReturnStatement	return ptr ;	773:2:23094:23104	60453	8	True				
ANR	60603	Identifier	ptr		60453	0					
ANR	60604	ReturnStatement	return ptr ;	789:2:23491:23501	60453	9	True				
ANR	60605	Identifier	ptr		60453	0					
ANR	60606	ReturnType	static void *		60453	1					
ANR	60607	Identifier	zend_mm_chunk_alloc_int		60453	2					
ANR	60608	ParameterList	"size_t size , size_t alignment"		60453	3					
ANR	60609	Parameter	size_t size	747:37:22380:22390	60453	0	True				
ANR	60610	ParameterType	size_t		60453	0					
ANR	60611	Identifier	size		60453	1					
ANR	60612	Parameter	size_t alignment	747:50:22393:22408	60453	1	True				
ANR	60613	ParameterType	size_t		60453	0					
ANR	60614	Identifier	alignment		60453	1					
ANR	60615	CFGEntryNode	ENTRY		60453		True				
ANR	60616	CFGExitNode	EXIT		60453		True				
ANR	60617	Symbol	ZEND_MM_ALIGNED_OFFSET		60453						
ANR	60618	Symbol	zend_mm_mmap		60453						
ANR	60619	Symbol	NULL		60453						
ANR	60620	Symbol	zend_mm_mmap_fixed		60453						
ANR	60621	Symbol	size		60453						
ANR	60622	Symbol	offset		60453						
ANR	60623	Symbol	REAL_PAGE_SIZE		60453						
ANR	60624	Symbol	MADV_HUGEPAGE		60453						
ANR	60625	Symbol	alignment		60453						
ANR	60626	Symbol	ptr		60453						
ANR	60627	Function	zend_mm_chunk_alloc	793:0:23509:23908							
ANR	60628	FunctionDef	"zend_mm_chunk_alloc (zend_mm_heap * heap , size_t size , size_t alignment)"		60627	0					
ANR	60629	CompoundStatement		794:0:23593:23908	60627	0					
ANR	60630	IfStatement	if ( UNEXPECTED ( heap -> storage ) )		60627	0					
ANR	60631	Condition	UNEXPECTED ( heap -> storage )	796:5:23620:23644	60627	0	True				
ANR	60632	CallExpression	UNEXPECTED ( heap -> storage )		60627	0					
ANR	60633	Callee	UNEXPECTED		60627	0					
ANR	60634	Identifier	UNEXPECTED		60627	0					
ANR	60635	ArgumentList	heap -> storage		60627	1					
ANR	60636	Argument	heap -> storage		60627	0					
ANR	60637	PtrMemberAccess	heap -> storage		60627	0					
ANR	60638	Identifier	heap		60627	0					
ANR	60639	Identifier	storage		60627	1					
ANR	60640	CompoundStatement		4:2:57:136	60627	1					
ANR	60641	IdentifierDeclStatement	"void * ptr = heap -> storage -> handlers . chunk_alloc ( heap -> storage , size , alignment ) ;"	797:2:23651:23730	60627	0	True				
ANR	60642	IdentifierDecl	"* ptr = heap -> storage -> handlers . chunk_alloc ( heap -> storage , size , alignment )"		60627	0					
ANR	60643	IdentifierDeclType	void *		60627	0					
ANR	60644	Identifier	ptr		60627	1					
ANR	60645	AssignmentExpression	"* ptr = heap -> storage -> handlers . chunk_alloc ( heap -> storage , size , alignment )"		60627	2		=			
ANR	60646	Identifier	ptr		60627	0					
ANR	60647	CallExpression	"heap -> storage -> handlers . chunk_alloc ( heap -> storage , size , alignment )"		60627	1					
ANR	60648	Callee	heap -> storage -> handlers . chunk_alloc		60627	0					
ANR	60649	MemberAccess	heap -> storage -> handlers . chunk_alloc		60627	0					
ANR	60650	PtrMemberAccess	heap -> storage -> handlers		60627	0					
ANR	60651	PtrMemberAccess	heap -> storage		60627	0					
ANR	60652	Identifier	heap		60627	0					
ANR	60653	Identifier	storage		60627	1					
ANR	60654	Identifier	handlers		60627	1					
ANR	60655	Identifier	chunk_alloc		60627	1					
ANR	60656	ArgumentList	heap -> storage		60627	1					
ANR	60657	Argument	heap -> storage		60627	0					
ANR	60658	PtrMemberAccess	heap -> storage		60627	0					
ANR	60659	Identifier	heap		60627	0					
ANR	60660	Identifier	storage		60627	1					
ANR	60661	Argument	size		60627	1					
ANR	60662	Identifier	size		60627	0					
ANR	60663	Argument	alignment		60627	2					
ANR	60664	Identifier	alignment		60627	0					
ANR	60665	ExpressionStatement	ZEND_ASSERT ( ( ( zend_uintptr_t ) ( ( char * ) ptr + ( alignment - 1 ) ) & ( alignment - 1 ) ) == ( zend_uintptr_t ) ptr )	798:2:23734:23832	60627	1	True				
ANR	60666	CallExpression	ZEND_ASSERT ( ( ( zend_uintptr_t ) ( ( char * ) ptr + ( alignment - 1 ) ) & ( alignment - 1 ) ) == ( zend_uintptr_t ) ptr )		60627	0					
ANR	60667	Callee	ZEND_ASSERT		60627	0					
ANR	60668	Identifier	ZEND_ASSERT		60627	0					
ANR	60669	ArgumentList	( ( zend_uintptr_t ) ( ( char * ) ptr + ( alignment - 1 ) ) & ( alignment - 1 ) ) == ( zend_uintptr_t ) ptr		60627	1					
ANR	60670	Argument	( ( zend_uintptr_t ) ( ( char * ) ptr + ( alignment - 1 ) ) & ( alignment - 1 ) ) == ( zend_uintptr_t ) ptr		60627	0					
ANR	60671	EqualityExpression	( ( zend_uintptr_t ) ( ( char * ) ptr + ( alignment - 1 ) ) & ( alignment - 1 ) ) == ( zend_uintptr_t ) ptr		60627	0		==			
ANR	60672	BitAndExpression	( zend_uintptr_t ) ( ( char * ) ptr + ( alignment - 1 ) ) & ( alignment - 1 )		60627	0		&			
ANR	60673	CastExpression	( zend_uintptr_t ) ( ( char * ) ptr + ( alignment - 1 ) )		60627	0					
ANR	60674	CastTarget	zend_uintptr_t		60627	0					
ANR	60675	AdditiveExpression	( char * ) ptr + ( alignment - 1 )		60627	1		+			
ANR	60676	CastExpression	( char * ) ptr		60627	0					
ANR	60677	CastTarget	char *		60627	0					
ANR	60678	Identifier	ptr		60627	1					
ANR	60679	AdditiveExpression	alignment - 1		60627	1		-			
ANR	60680	Identifier	alignment		60627	0					
ANR	60681	PrimaryExpression	1		60627	1					
ANR	60682	AdditiveExpression	alignment - 1		60627	1		-			
ANR	60683	Identifier	alignment		60627	0					
ANR	60684	PrimaryExpression	1		60627	1					
ANR	60685	CastExpression	( zend_uintptr_t ) ptr		60627	1					
ANR	60686	CastTarget	zend_uintptr_t		60627	0					
ANR	60687	Identifier	ptr		60627	1					
ANR	60688	ReturnStatement	return ptr ;	799:2:23836:23846	60627	2	True				
ANR	60689	Identifier	ptr		60627	0					
ANR	60690	ReturnStatement	"return zend_mm_chunk_alloc_int ( size , alignment ) ;"	802:1:23859:23906	60627	1	True				
ANR	60691	CallExpression	"zend_mm_chunk_alloc_int ( size , alignment )"		60627	0					
ANR	60692	Callee	zend_mm_chunk_alloc_int		60627	0					
ANR	60693	Identifier	zend_mm_chunk_alloc_int		60627	0					
ANR	60694	ArgumentList	size		60627	1					
ANR	60695	Argument	size		60627	0					
ANR	60696	Identifier	size		60627	0					
ANR	60697	Argument	alignment		60627	1					
ANR	60698	Identifier	alignment		60627	0					
ANR	60699	ReturnType	static void *		60627	1					
ANR	60700	Identifier	zend_mm_chunk_alloc		60627	2					
ANR	60701	ParameterList	"zend_mm_heap * heap , size_t size , size_t alignment"		60627	3					
ANR	60702	Parameter	zend_mm_heap * heap	793:33:23542:23559	60627	0	True				
ANR	60703	ParameterType	zend_mm_heap *		60627	0					
ANR	60704	Identifier	heap		60627	1					
ANR	60705	Parameter	size_t size	793:53:23562:23572	60627	1	True				
ANR	60706	ParameterType	size_t		60627	0					
ANR	60707	Identifier	size		60627	1					
ANR	60708	Parameter	size_t alignment	793:66:23575:23590	60627	2	True				
ANR	60709	ParameterType	size_t		60627	0					
ANR	60710	Identifier	alignment		60627	1					
ANR	60711	CFGEntryNode	ENTRY		60627		True				
ANR	60712	CFGExitNode	EXIT		60627		True				
ANR	60713	Symbol	UNEXPECTED		60627						
ANR	60714	Symbol	* * heap		60627						
ANR	60715	Symbol	size		60627						
ANR	60716	Symbol	heap -> storage		60627						
ANR	60717	Symbol	* heap -> storage		60627						
ANR	60718	Symbol	heap -> storage -> handlers		60627						
ANR	60719	Symbol	heap -> storage -> handlers . chunk_alloc		60627						
ANR	60720	Symbol	heap		60627						
ANR	60721	Symbol	alignment		60627						
ANR	60722	Symbol	* heap		60627						
ANR	60723	Symbol	ptr		60627						
ANR	60724	Symbol	zend_mm_chunk_alloc_int		60627						
ANR	60725	Function	zend_mm_chunk_free	805:0:23911:24157							
ANR	60726	FunctionDef	"zend_mm_chunk_free (zend_mm_heap * heap , void * addr , size_t size)"		60725	0					
ANR	60727	CompoundStatement		806:0:23987:24157	60725	0					
ANR	60728	IfStatement	if ( UNEXPECTED ( heap -> storage ) )		60725	0					
ANR	60729	Condition	UNEXPECTED ( heap -> storage )	808:5:24014:24038	60725	0	True				
ANR	60730	CallExpression	UNEXPECTED ( heap -> storage )		60725	0					
ANR	60731	Callee	UNEXPECTED		60725	0					
ANR	60732	Identifier	UNEXPECTED		60725	0					
ANR	60733	ArgumentList	heap -> storage		60725	1					
ANR	60734	Argument	heap -> storage		60725	0					
ANR	60735	PtrMemberAccess	heap -> storage		60725	0					
ANR	60736	Identifier	heap		60725	0					
ANR	60737	Identifier	storage		60725	1					
ANR	60738	CompoundStatement		3:32:53:53	60725	1					
ANR	60739	ExpressionStatement	"heap -> storage -> handlers . chunk_free ( heap -> storage , addr , size )"	809:2:24045:24106	60725	0	True				
ANR	60740	CallExpression	"heap -> storage -> handlers . chunk_free ( heap -> storage , addr , size )"		60725	0					
ANR	60741	Callee	heap -> storage -> handlers . chunk_free		60725	0					
ANR	60742	MemberAccess	heap -> storage -> handlers . chunk_free		60725	0					
ANR	60743	PtrMemberAccess	heap -> storage -> handlers		60725	0					
ANR	60744	PtrMemberAccess	heap -> storage		60725	0					
ANR	60745	Identifier	heap		60725	0					
ANR	60746	Identifier	storage		60725	1					
ANR	60747	Identifier	handlers		60725	1					
ANR	60748	Identifier	chunk_free		60725	1					
ANR	60749	ArgumentList	heap -> storage		60725	1					
ANR	60750	Argument	heap -> storage		60725	0					
ANR	60751	PtrMemberAccess	heap -> storage		60725	0					
ANR	60752	Identifier	heap		60725	0					
ANR	60753	Identifier	storage		60725	1					
ANR	60754	Argument	addr		60725	1					
ANR	60755	Identifier	addr		60725	0					
ANR	60756	Argument	size		60725	2					
ANR	60757	Identifier	size		60725	0					
ANR	60758	ReturnStatement	return ;	810:2:24110:24116	60725	1	True				
ANR	60759	ExpressionStatement	"zend_mm_munmap ( addr , size )"	813:1:24129:24155	60725	1	True				
ANR	60760	CallExpression	"zend_mm_munmap ( addr , size )"		60725	0					
ANR	60761	Callee	zend_mm_munmap		60725	0					
ANR	60762	Identifier	zend_mm_munmap		60725	0					
ANR	60763	ArgumentList	addr		60725	1					
ANR	60764	Argument	addr		60725	0					
ANR	60765	Identifier	addr		60725	0					
ANR	60766	Argument	size		60725	1					
ANR	60767	Identifier	size		60725	0					
ANR	60768	ReturnType	static void		60725	1					
ANR	60769	Identifier	zend_mm_chunk_free		60725	2					
ANR	60770	ParameterList	"zend_mm_heap * heap , void * addr , size_t size"		60725	3					
ANR	60771	Parameter	zend_mm_heap * heap	805:31:23942:23959	60725	0	True				
ANR	60772	ParameterType	zend_mm_heap *		60725	0					
ANR	60773	Identifier	heap		60725	1					
ANR	60774	Parameter	void * addr	805:51:23962:23971	60725	1	True				
ANR	60775	ParameterType	void *		60725	0					
ANR	60776	Identifier	addr		60725	1					
ANR	60777	Parameter	size_t size	805:63:23974:23984	60725	2	True				
ANR	60778	ParameterType	size_t		60725	0					
ANR	60779	Identifier	size		60725	1					
ANR	60780	CFGEntryNode	ENTRY		60725		True				
ANR	60781	CFGExitNode	EXIT		60725		True				
ANR	60782	Symbol	UNEXPECTED		60725						
ANR	60783	Symbol	* * heap		60725						
ANR	60784	Symbol	size		60725						
ANR	60785	Symbol	heap -> storage		60725						
ANR	60786	Symbol	* heap -> storage		60725						
ANR	60787	Symbol	heap -> storage -> handlers		60725						
ANR	60788	Symbol	heap		60725						
ANR	60789	Symbol	addr		60725						
ANR	60790	Symbol	* heap		60725						
ANR	60791	Function	zend_mm_chunk_truncate	816:0:24160:24605							
ANR	60792	FunctionDef	"zend_mm_chunk_truncate (zend_mm_heap * heap , void * addr , size_t old_size , size_t new_size)"		60791	0					
ANR	60793	CompoundStatement		817:0:24260:24605	60791	0					
ANR	60794	IfStatement	if ( UNEXPECTED ( heap -> storage ) )		60791	0					
ANR	60795	Condition	UNEXPECTED ( heap -> storage )	819:5:24287:24311	60791	0	True				
ANR	60796	CallExpression	UNEXPECTED ( heap -> storage )		60791	0					
ANR	60797	Callee	UNEXPECTED		60791	0					
ANR	60798	Identifier	UNEXPECTED		60791	0					
ANR	60799	ArgumentList	heap -> storage		60791	1					
ANR	60800	Argument	heap -> storage		60791	0					
ANR	60801	PtrMemberAccess	heap -> storage		60791	0					
ANR	60802	Identifier	heap		60791	0					
ANR	60803	Identifier	storage		60791	1					
ANR	60804	CompoundStatement		3:32:53:53	60791	1					
ANR	60805	IfStatement	if ( heap -> storage -> handlers . chunk_truncate )		60791	0					
ANR	60806	Condition	heap -> storage -> handlers . chunk_truncate	820:6:24322:24359	60791	0	True				
ANR	60807	MemberAccess	heap -> storage -> handlers . chunk_truncate		60791	0					
ANR	60808	PtrMemberAccess	heap -> storage -> handlers		60791	0					
ANR	60809	PtrMemberAccess	heap -> storage		60791	0					
ANR	60810	Identifier	heap		60791	0					
ANR	60811	Identifier	storage		60791	1					
ANR	60812	Identifier	handlers		60791	1					
ANR	60813	Identifier	chunk_truncate		60791	1					
ANR	60814	CompoundStatement		4:46:101:101	60791	1					
ANR	60815	ReturnStatement	"return heap -> storage -> handlers . chunk_truncate ( heap -> storage , addr , old_size , new_size ) ;"	821:3:24367:24453	60791	0	True				
ANR	60816	CallExpression	"heap -> storage -> handlers . chunk_truncate ( heap -> storage , addr , old_size , new_size )"		60791	0					
ANR	60817	Callee	heap -> storage -> handlers . chunk_truncate		60791	0					
ANR	60818	MemberAccess	heap -> storage -> handlers . chunk_truncate		60791	0					
ANR	60819	PtrMemberAccess	heap -> storage -> handlers		60791	0					
ANR	60820	PtrMemberAccess	heap -> storage		60791	0					
ANR	60821	Identifier	heap		60791	0					
ANR	60822	Identifier	storage		60791	1					
ANR	60823	Identifier	handlers		60791	1					
ANR	60824	Identifier	chunk_truncate		60791	1					
ANR	60825	ArgumentList	heap -> storage		60791	1					
ANR	60826	Argument	heap -> storage		60791	0					
ANR	60827	PtrMemberAccess	heap -> storage		60791	0					
ANR	60828	Identifier	heap		60791	0					
ANR	60829	Identifier	storage		60791	1					
ANR	60830	Argument	addr		60791	1					
ANR	60831	Identifier	addr		60791	0					
ANR	60832	Argument	old_size		60791	2					
ANR	60833	Identifier	old_size		60791	0					
ANR	60834	Argument	new_size		60791	3					
ANR	60835	Identifier	new_size		60791	0					
ANR	60836	ElseStatement	else		60791	0					
ANR	60837	CompoundStatement		6:9:203:203	60791	0					
ANR	60838	ReturnStatement	return 0 ;	823:3:24469:24477	60791	0	True				
ANR	60839	PrimaryExpression	0		60791	0					
ANR	60840	ExpressionStatement	"zend_mm_munmap ( ( char * ) addr + new_size , old_size - new_size )"	828:1:24509:24568	60791	1	True				
ANR	60841	CallExpression	"zend_mm_munmap ( ( char * ) addr + new_size , old_size - new_size )"		60791	0					
ANR	60842	Callee	zend_mm_munmap		60791	0					
ANR	60843	Identifier	zend_mm_munmap		60791	0					
ANR	60844	ArgumentList	( char * ) addr + new_size		60791	1					
ANR	60845	Argument	( char * ) addr + new_size		60791	0					
ANR	60846	AdditiveExpression	( char * ) addr + new_size		60791	0		+			
ANR	60847	CastExpression	( char * ) addr		60791	0					
ANR	60848	CastTarget	char *		60791	0					
ANR	60849	Identifier	addr		60791	1					
ANR	60850	Identifier	new_size		60791	1					
ANR	60851	Argument	old_size - new_size		60791	1					
ANR	60852	AdditiveExpression	old_size - new_size		60791	0		-			
ANR	60853	Identifier	old_size		60791	0					
ANR	60854	Identifier	new_size		60791	1					
ANR	60855	ReturnStatement	return 1 ;	829:1:24571:24579	60791	2	True				
ANR	60856	PrimaryExpression	1		60791	0					
ANR	60857	ReturnType	static int		60791	1					
ANR	60858	Identifier	zend_mm_chunk_truncate		60791	2					
ANR	60859	ParameterList	"zend_mm_heap * heap , void * addr , size_t old_size , size_t new_size"		60791	3					
ANR	60860	Parameter	zend_mm_heap * heap	816:34:24194:24211	60791	0	True				
ANR	60861	ParameterType	zend_mm_heap *		60791	0					
ANR	60862	Identifier	heap		60791	1					
ANR	60863	Parameter	void * addr	816:54:24214:24223	60791	1	True				
ANR	60864	ParameterType	void *		60791	0					
ANR	60865	Identifier	addr		60791	1					
ANR	60866	Parameter	size_t old_size	816:66:24226:24240	60791	2	True				
ANR	60867	ParameterType	size_t		60791	0					
ANR	60868	Identifier	old_size		60791	1					
ANR	60869	Parameter	size_t new_size	816:83:24243:24257	60791	3	True				
ANR	60870	ParameterType	size_t		60791	0					
ANR	60871	Identifier	new_size		60791	1					
ANR	60872	CFGEntryNode	ENTRY		60791		True				
ANR	60873	CFGExitNode	EXIT		60791		True				
ANR	60874	Symbol	UNEXPECTED		60791						
ANR	60875	Symbol	* * heap		60791						
ANR	60876	Symbol	old_size		60791						
ANR	60877	Symbol	heap -> storage -> handlers . chunk_truncate		60791						
ANR	60878	Symbol	new_size		60791						
ANR	60879	Symbol	heap -> storage		60791						
ANR	60880	Symbol	* heap -> storage		60791						
ANR	60881	Symbol	heap -> storage -> handlers		60791						
ANR	60882	Symbol	heap		60791						
ANR	60883	Symbol	addr		60791						
ANR	60884	Symbol	* heap		60791						
ANR	60885	Function	zend_mm_chunk_extend	835:0:24608:25057							
ANR	60886	FunctionDef	"zend_mm_chunk_extend (zend_mm_heap * heap , void * addr , size_t old_size , size_t new_size)"		60885	0					
ANR	60887	CompoundStatement		836:0:24706:25057	60885	0					
ANR	60888	IfStatement	if ( UNEXPECTED ( heap -> storage ) )		60885	0					
ANR	60889	Condition	UNEXPECTED ( heap -> storage )	838:5:24733:24757	60885	0	True				
ANR	60890	CallExpression	UNEXPECTED ( heap -> storage )		60885	0					
ANR	60891	Callee	UNEXPECTED		60885	0					
ANR	60892	Identifier	UNEXPECTED		60885	0					
ANR	60893	ArgumentList	heap -> storage		60885	1					
ANR	60894	Argument	heap -> storage		60885	0					
ANR	60895	PtrMemberAccess	heap -> storage		60885	0					
ANR	60896	Identifier	heap		60885	0					
ANR	60897	Identifier	storage		60885	1					
ANR	60898	CompoundStatement		3:32:53:53	60885	1					
ANR	60899	IfStatement	if ( heap -> storage -> handlers . chunk_extend )		60885	0					
ANR	60900	Condition	heap -> storage -> handlers . chunk_extend	839:6:24768:24803	60885	0	True				
ANR	60901	MemberAccess	heap -> storage -> handlers . chunk_extend		60885	0					
ANR	60902	PtrMemberAccess	heap -> storage -> handlers		60885	0					
ANR	60903	PtrMemberAccess	heap -> storage		60885	0					
ANR	60904	Identifier	heap		60885	0					
ANR	60905	Identifier	storage		60885	1					
ANR	60906	Identifier	handlers		60885	1					
ANR	60907	Identifier	chunk_extend		60885	1					
ANR	60908	CompoundStatement		4:44:99:99	60885	1					
ANR	60909	ReturnStatement	"return heap -> storage -> handlers . chunk_extend ( heap -> storage , addr , old_size , new_size ) ;"	840:3:24811:24895	60885	0	True				
ANR	60910	CallExpression	"heap -> storage -> handlers . chunk_extend ( heap -> storage , addr , old_size , new_size )"		60885	0					
ANR	60911	Callee	heap -> storage -> handlers . chunk_extend		60885	0					
ANR	60912	MemberAccess	heap -> storage -> handlers . chunk_extend		60885	0					
ANR	60913	PtrMemberAccess	heap -> storage -> handlers		60885	0					
ANR	60914	PtrMemberAccess	heap -> storage		60885	0					
ANR	60915	Identifier	heap		60885	0					
ANR	60916	Identifier	storage		60885	1					
ANR	60917	Identifier	handlers		60885	1					
ANR	60918	Identifier	chunk_extend		60885	1					
ANR	60919	ArgumentList	heap -> storage		60885	1					
ANR	60920	Argument	heap -> storage		60885	0					
ANR	60921	PtrMemberAccess	heap -> storage		60885	0					
ANR	60922	Identifier	heap		60885	0					
ANR	60923	Identifier	storage		60885	1					
ANR	60924	Argument	addr		60885	1					
ANR	60925	Identifier	addr		60885	0					
ANR	60926	Argument	old_size		60885	2					
ANR	60927	Identifier	old_size		60885	0					
ANR	60928	Argument	new_size		60885	3					
ANR	60929	Identifier	new_size		60885	0					
ANR	60930	ElseStatement	else		60885	0					
ANR	60931	CompoundStatement		6:9:199:199	60885	0					
ANR	60932	ReturnStatement	return 0 ;	842:3:24911:24919	60885	0	True				
ANR	60933	PrimaryExpression	0		60885	0					
ANR	60934	ReturnStatement	"return ( zend_mm_mmap_fixed ( ( char * ) addr + old_size , new_size - old_size ) != NULL ) ;"	847:1:24951:25031	60885	1	True				
ANR	60935	EqualityExpression	"zend_mm_mmap_fixed ( ( char * ) addr + old_size , new_size - old_size ) != NULL"		60885	0		!=			
ANR	60936	CallExpression	"zend_mm_mmap_fixed ( ( char * ) addr + old_size , new_size - old_size )"		60885	0					
ANR	60937	Callee	zend_mm_mmap_fixed		60885	0					
ANR	60938	Identifier	zend_mm_mmap_fixed		60885	0					
ANR	60939	ArgumentList	( char * ) addr + old_size		60885	1					
ANR	60940	Argument	( char * ) addr + old_size		60885	0					
ANR	60941	AdditiveExpression	( char * ) addr + old_size		60885	0		+			
ANR	60942	CastExpression	( char * ) addr		60885	0					
ANR	60943	CastTarget	char *		60885	0					
ANR	60944	Identifier	addr		60885	1					
ANR	60945	Identifier	old_size		60885	1					
ANR	60946	Argument	new_size - old_size		60885	1					
ANR	60947	AdditiveExpression	new_size - old_size		60885	0		-			
ANR	60948	Identifier	new_size		60885	0					
ANR	60949	Identifier	old_size		60885	1					
ANR	60950	Identifier	NULL		60885	1					
ANR	60951	ReturnType	static int		60885	1					
ANR	60952	Identifier	zend_mm_chunk_extend		60885	2					
ANR	60953	ParameterList	"zend_mm_heap * heap , void * addr , size_t old_size , size_t new_size"		60885	3					
ANR	60954	Parameter	zend_mm_heap * heap	835:32:24640:24657	60885	0	True				
ANR	60955	ParameterType	zend_mm_heap *		60885	0					
ANR	60956	Identifier	heap		60885	1					
ANR	60957	Parameter	void * addr	835:52:24660:24669	60885	1	True				
ANR	60958	ParameterType	void *		60885	0					
ANR	60959	Identifier	addr		60885	1					
ANR	60960	Parameter	size_t old_size	835:64:24672:24686	60885	2	True				
ANR	60961	ParameterType	size_t		60885	0					
ANR	60962	Identifier	old_size		60885	1					
ANR	60963	Parameter	size_t new_size	835:81:24689:24703	60885	3	True				
ANR	60964	ParameterType	size_t		60885	0					
ANR	60965	Identifier	new_size		60885	1					
ANR	60966	CFGEntryNode	ENTRY		60885		True				
ANR	60967	CFGExitNode	EXIT		60885		True				
ANR	60968	Symbol	* * heap		60885						
ANR	60969	Symbol	old_size		60885						
ANR	60970	Symbol	NULL		60885						
ANR	60971	Symbol	zend_mm_mmap_fixed		60885						
ANR	60972	Symbol	heap -> storage -> handlers . chunk_extend		60885						
ANR	60973	Symbol	heap -> storage		60885						
ANR	60974	Symbol	* heap -> storage		60885						
ANR	60975	Symbol	heap -> storage -> handlers		60885						
ANR	60976	Symbol	UNEXPECTED		60885						
ANR	60977	Symbol	new_size		60885						
ANR	60978	Symbol	heap		60885						
ANR	60979	Symbol	addr		60885						
ANR	60980	Symbol	* heap		60885						
ANR	60981	Function	zend_mm_chunk_init	853:0:25060:25660							
ANR	60982	FunctionDef	"zend_mm_chunk_init (zend_mm_heap * heap , zend_mm_chunk * chunk)"		60981	0					
ANR	60983	CompoundStatement		854:0:25152:25660	60981	0					
ANR	60984	ExpressionStatement	chunk -> heap = heap	855:1:25155:25173	60981	0	True				
ANR	60985	AssignmentExpression	chunk -> heap = heap		60981	0		=			
ANR	60986	PtrMemberAccess	chunk -> heap		60981	0					
ANR	60987	Identifier	chunk		60981	0					
ANR	60988	Identifier	heap		60981	1					
ANR	60989	Identifier	heap		60981	1					
ANR	60990	ExpressionStatement	chunk -> next = heap -> main_chunk	856:1:25176:25206	60981	1	True				
ANR	60991	AssignmentExpression	chunk -> next = heap -> main_chunk		60981	0		=			
ANR	60992	PtrMemberAccess	chunk -> next		60981	0					
ANR	60993	Identifier	chunk		60981	0					
ANR	60994	Identifier	next		60981	1					
ANR	60995	PtrMemberAccess	heap -> main_chunk		60981	1					
ANR	60996	Identifier	heap		60981	0					
ANR	60997	Identifier	main_chunk		60981	1					
ANR	60998	ExpressionStatement	chunk -> prev = heap -> main_chunk -> prev	857:1:25209:25245	60981	2	True				
ANR	60999	AssignmentExpression	chunk -> prev = heap -> main_chunk -> prev		60981	0		=			
ANR	61000	PtrMemberAccess	chunk -> prev		60981	0					
ANR	61001	Identifier	chunk		60981	0					
ANR	61002	Identifier	prev		60981	1					
ANR	61003	PtrMemberAccess	heap -> main_chunk -> prev		60981	1					
ANR	61004	PtrMemberAccess	heap -> main_chunk		60981	0					
ANR	61005	Identifier	heap		60981	0					
ANR	61006	Identifier	main_chunk		60981	1					
ANR	61007	Identifier	prev		60981	1					
ANR	61008	ExpressionStatement	chunk -> prev -> next = chunk	858:1:25248:25273	60981	3	True				
ANR	61009	AssignmentExpression	chunk -> prev -> next = chunk		60981	0		=			
ANR	61010	PtrMemberAccess	chunk -> prev -> next		60981	0					
ANR	61011	PtrMemberAccess	chunk -> prev		60981	0					
ANR	61012	Identifier	chunk		60981	0					
ANR	61013	Identifier	prev		60981	1					
ANR	61014	Identifier	next		60981	1					
ANR	61015	Identifier	chunk		60981	1					
ANR	61016	ExpressionStatement	chunk -> next -> prev = chunk	859:1:25276:25301	60981	4	True				
ANR	61017	AssignmentExpression	chunk -> next -> prev = chunk		60981	0		=			
ANR	61018	PtrMemberAccess	chunk -> next -> prev		60981	0					
ANR	61019	PtrMemberAccess	chunk -> next		60981	0					
ANR	61020	Identifier	chunk		60981	0					
ANR	61021	Identifier	next		60981	1					
ANR	61022	Identifier	prev		60981	1					
ANR	61023	Identifier	chunk		60981	1					
ANR	61024	ExpressionStatement	chunk -> free_pages = ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE	861:1:25341:25395	60981	5	True				
ANR	61025	AssignmentExpression	chunk -> free_pages = ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE		60981	0		=			
ANR	61026	PtrMemberAccess	chunk -> free_pages		60981	0					
ANR	61027	Identifier	chunk		60981	0					
ANR	61028	Identifier	free_pages		60981	1					
ANR	61029	AdditiveExpression	ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE		60981	1		-			
ANR	61030	Identifier	ZEND_MM_PAGES		60981	0					
ANR	61031	Identifier	ZEND_MM_FIRST_PAGE		60981	1					
ANR	61032	ExpressionStatement	chunk -> free_tail = ZEND_MM_FIRST_PAGE	862:1:25398:25435	60981	6	True				
ANR	61033	AssignmentExpression	chunk -> free_tail = ZEND_MM_FIRST_PAGE		60981	0		=			
ANR	61034	PtrMemberAccess	chunk -> free_tail		60981	0					
ANR	61035	Identifier	chunk		60981	0					
ANR	61036	Identifier	free_tail		60981	1					
ANR	61037	Identifier	ZEND_MM_FIRST_PAGE		60981	1					
ANR	61038	ExpressionStatement	chunk -> num = chunk -> prev -> num + 1	864:1:25483:25516	60981	7	True				
ANR	61039	AssignmentExpression	chunk -> num = chunk -> prev -> num + 1		60981	0		=			
ANR	61040	PtrMemberAccess	chunk -> num		60981	0					
ANR	61041	Identifier	chunk		60981	0					
ANR	61042	Identifier	num		60981	1					
ANR	61043	AdditiveExpression	chunk -> prev -> num + 1		60981	1		+			
ANR	61044	PtrMemberAccess	chunk -> prev -> num		60981	0					
ANR	61045	PtrMemberAccess	chunk -> prev		60981	0					
ANR	61046	Identifier	chunk		60981	0					
ANR	61047	Identifier	prev		60981	1					
ANR	61048	Identifier	num		60981	1					
ANR	61049	PrimaryExpression	1		60981	1					
ANR	61050	ExpressionStatement	chunk -> free_map [ 0 ] = ( 1L << ZEND_MM_FIRST_PAGE ) - 1	866:1:25556:25607	60981	8	True				
ANR	61051	AssignmentExpression	chunk -> free_map [ 0 ] = ( 1L << ZEND_MM_FIRST_PAGE ) - 1		60981	0		=			
ANR	61052	ArrayIndexing	chunk -> free_map [ 0 ]		60981	0					
ANR	61053	PtrMemberAccess	chunk -> free_map		60981	0					
ANR	61054	Identifier	chunk		60981	0					
ANR	61055	Identifier	free_map		60981	1					
ANR	61056	PrimaryExpression	0		60981	1					
ANR	61057	AdditiveExpression	( 1L << ZEND_MM_FIRST_PAGE ) - 1		60981	1		-			
ANR	61058	ShiftExpression	1L << ZEND_MM_FIRST_PAGE		60981	0		<<			
ANR	61059	PrimaryExpression	1L		60981	0					
ANR	61060	Identifier	ZEND_MM_FIRST_PAGE		60981	1					
ANR	61061	PrimaryExpression	1		60981	1					
ANR	61062	ExpressionStatement	chunk -> map [ 0 ] = ZEND_MM_LRUN ( ZEND_MM_FIRST_PAGE )	867:1:25610:25658	60981	9	True				
ANR	61063	AssignmentExpression	chunk -> map [ 0 ] = ZEND_MM_LRUN ( ZEND_MM_FIRST_PAGE )		60981	0		=			
ANR	61064	ArrayIndexing	chunk -> map [ 0 ]		60981	0					
ANR	61065	PtrMemberAccess	chunk -> map		60981	0					
ANR	61066	Identifier	chunk		60981	0					
ANR	61067	Identifier	map		60981	1					
ANR	61068	PrimaryExpression	0		60981	1					
ANR	61069	CallExpression	ZEND_MM_LRUN ( ZEND_MM_FIRST_PAGE )		60981	1					
ANR	61070	Callee	ZEND_MM_LRUN		60981	0					
ANR	61071	Identifier	ZEND_MM_LRUN		60981	0					
ANR	61072	ArgumentList	ZEND_MM_FIRST_PAGE		60981	1					
ANR	61073	Argument	ZEND_MM_FIRST_PAGE		60981	0					
ANR	61074	Identifier	ZEND_MM_FIRST_PAGE		60981	0					
ANR	61075	ReturnType	static zend_always_inline void		60981	1					
ANR	61076	Identifier	zend_mm_chunk_init		60981	2					
ANR	61077	ParameterList	"zend_mm_heap * heap , zend_mm_chunk * chunk"		60981	3					
ANR	61078	Parameter	zend_mm_heap * heap	853:50:25110:25127	60981	0	True				
ANR	61079	ParameterType	zend_mm_heap *		60981	0					
ANR	61080	Identifier	heap		60981	1					
ANR	61081	Parameter	zend_mm_chunk * chunk	853:70:25130:25149	60981	1	True				
ANR	61082	ParameterType	zend_mm_chunk *		60981	0					
ANR	61083	Identifier	chunk		60981	1					
ANR	61084	CFGEntryNode	ENTRY		60981		True				
ANR	61085	CFGExitNode	EXIT		60981		True				
ANR	61086	Symbol	* * heap		60981						
ANR	61087	Symbol	* heap -> main_chunk		60981						
ANR	61088	Symbol	* chunk -> next		60981						
ANR	61089	Symbol	ZEND_MM_PAGES		60981						
ANR	61090	Symbol	chunk -> next -> prev		60981						
ANR	61091	Symbol	chunk		60981						
ANR	61092	Symbol	chunk -> free_tail		60981						
ANR	61093	Symbol	chunk -> num		60981						
ANR	61094	Symbol	ZEND_MM_FIRST_PAGE		60981						
ANR	61095	Symbol	heap		60981						
ANR	61096	Symbol	* chunk -> free_map		60981						
ANR	61097	Symbol	heap -> main_chunk -> prev		60981						
ANR	61098	Symbol	heap -> main_chunk		60981						
ANR	61099	Symbol	* * chunk		60981						
ANR	61100	Symbol	chunk -> prev		60981						
ANR	61101	Symbol	chunk -> next		60981						
ANR	61102	Symbol	chunk -> prev -> num		60981						
ANR	61103	Symbol	chunk -> free_pages		60981						
ANR	61104	Symbol	chunk -> heap		60981						
ANR	61105	Symbol	* chunk		60981						
ANR	61106	Symbol	* chunk -> map		60981						
ANR	61107	Symbol	* chunk -> prev		60981						
ANR	61108	Symbol	ZEND_MM_LRUN		60981						
ANR	61109	Symbol	chunk -> free_map		60981						
ANR	61110	Symbol	* heap		60981						
ANR	61111	Symbol	chunk -> map		60981						
ANR	61112	Symbol	chunk -> prev -> next		60981						
ANR	61113	DeclStmt									
ANR	61114	Decl							void	"void * ( zend_mm_heap * heap , size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC )"	zend_mm_alloc_huge
ANR	61115	DeclStmt									
ANR	61116	Decl							void	"void ( zend_mm_heap * heap , void * ptr , size_t size , size_t dbg_size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC )"	zend_mm_change_huge_block_size
ANR	61117	DeclStmt									
ANR	61118	Decl							void	"void ( zend_mm_heap * heap , void * ptr , size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC )"	zend_mm_change_huge_block_size
ANR	61119	DeclStmt									
ANR	61120	Decl							zend_mm_chunk	zend_mm_chunk *	chunk
ANR	61121	DeclStmt									
ANR	61122	Decl							int	int	page_num
ANR	61123	Decl							int	int	len
ANR	61124	DeclStmt									
ANR	61125	Decl							int	int	free_tail
ANR	61126	DeclStmt									
ANR	61127	Decl							zend_mm_bitset	zend_mm_bitset *	bitset
ANR	61128	DeclStmt									
ANR	61129	Decl							zend_mm_bitset	zend_mm_bitset	tmp
ANR	61130	DeclStmt									
ANR	61131	Decl							int	int	i
ANR	61132	DeclStmt									
ANR	61133	Decl							int	int	best
ANR	61134	DeclStmt									
ANR	61135	Decl							int	int	best_len
ANR	61136	DeclStmt									
ANR	61137	Decl							int	int	free_tail
ANR	61138	DeclStmt									
ANR	61139	Decl							zend_mm_bitset	zend_mm_bitset *	bitset
ANR	61140	DeclStmt									
ANR	61141	Decl							zend_mm_bitset	zend_mm_bitset	tmp
ANR	61142	DeclStmt									
ANR	61143	Decl							int	int	i
ANR	61144	DeclStmt									
ANR	61145	Decl							size_t	size_t	size
ANR	61146	DeclStmt									
ANR	61147	Decl							size_t	size_t	peak
ANR	61148	Function	zend_mm_alloc_large	1086:0:31988:32632							
ANR	61149	FunctionDef	"zend_mm_alloc_large (zend_mm_heap * heap , size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC)"		61148	0					
ANR	61150	CompoundStatement		1087:0:32114:32632	61148	0					
ANR	61151	IdentifierDeclStatement	"int pages_count = ( int ) ZEND_MM_SIZE_TO_NUM ( size , ZEND_MM_PAGE_SIZE ) ;"	1088:1:32117:32184	61148	0	True				
ANR	61152	IdentifierDecl	"pages_count = ( int ) ZEND_MM_SIZE_TO_NUM ( size , ZEND_MM_PAGE_SIZE )"		61148	0					
ANR	61153	IdentifierDeclType	int		61148	0					
ANR	61154	Identifier	pages_count		61148	1					
ANR	61155	AssignmentExpression	"pages_count = ( int ) ZEND_MM_SIZE_TO_NUM ( size , ZEND_MM_PAGE_SIZE )"		61148	2		=			
ANR	61156	Identifier	pages_count		61148	0					
ANR	61157	CastExpression	"( int ) ZEND_MM_SIZE_TO_NUM ( size , ZEND_MM_PAGE_SIZE )"		61148	1					
ANR	61158	CastTarget	int		61148	0					
ANR	61159	CallExpression	"ZEND_MM_SIZE_TO_NUM ( size , ZEND_MM_PAGE_SIZE )"		61148	1					
ANR	61160	Callee	ZEND_MM_SIZE_TO_NUM		61148	0					
ANR	61161	Identifier	ZEND_MM_SIZE_TO_NUM		61148	0					
ANR	61162	ArgumentList	size		61148	1					
ANR	61163	Argument	size		61148	0					
ANR	61164	Identifier	size		61148	0					
ANR	61165	Argument	ZEND_MM_PAGE_SIZE		61148	1					
ANR	61166	Identifier	ZEND_MM_PAGE_SIZE		61148	0					
ANR	61167	Statement	void	1090:1:32202:32205	61148	1	True				
ANR	61168	Statement	*	1090:6:32207:32207	61148	2	True				
ANR	61169	Statement	ptr	1090:7:32208:32210	61148	3	True				
ANR	61170	Statement	=	1090:11:32212:32212	61148	4	True				
ANR	61171	Statement	zend_mm_alloc_pages	1090:13:32214:32232	61148	5	True				
ANR	61172	Statement	(	1090:32:32233:32233	61148	6	True				
ANR	61173	Statement	heap	1090:33:32234:32237	61148	7	True				
ANR	61174	Statement	","	1090:37:32238:32238	61148	8	True				
ANR	61175	Statement	pages_count	1090:39:32240:32250	61148	9	True				
ANR	61176	Statement	","	1090:50:32251:32251	61148	10	True				
ANR	61177	Statement	size	1090:52:32253:32256	61148	11	True				
ANR	61178	Statement	ZEND_FILE_LINE_RELAY_CC	1090:57:32258:32280	61148	12	True				
ANR	61179	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	1090:81:32282:32309	61148	13	True				
ANR	61180	Statement	)	1090:109:32310:32310	61148	14	True				
ANR	61181	ExpressionStatement		1090:110:32311:32311	61148	15	True				
ANR	61182	DoStatement	do		61148	16					
ANR	61183	CompoundStatement		11:2:404:439	61148	0					
ANR	61184	IdentifierDeclStatement	size_t size = heap -> size + pages_count * ZEND_MM_PAGE_SIZE ;	1096:2:32457:32515	61148	0	True				
ANR	61185	IdentifierDecl	size = heap -> size + pages_count * ZEND_MM_PAGE_SIZE		61148	0					
ANR	61186	IdentifierDeclType	size_t		61148	0					
ANR	61187	Identifier	size		61148	1					
ANR	61188	AssignmentExpression	size = heap -> size + pages_count * ZEND_MM_PAGE_SIZE		61148	2		=			
ANR	61189	Identifier	size		61148	0					
ANR	61190	AdditiveExpression	heap -> size + pages_count * ZEND_MM_PAGE_SIZE		61148	1		+			
ANR	61191	PtrMemberAccess	heap -> size		61148	0					
ANR	61192	Identifier	heap		61148	0					
ANR	61193	Identifier	size		61148	1					
ANR	61194	MultiplicativeExpression	pages_count * ZEND_MM_PAGE_SIZE		61148	1		*			
ANR	61195	Identifier	pages_count		61148	0					
ANR	61196	Identifier	ZEND_MM_PAGE_SIZE		61148	1					
ANR	61197	IdentifierDeclStatement	"size_t peak = MAX ( heap -> peak , size ) ;"	1097:2:32519:32554	61148	1	True				
ANR	61198	IdentifierDecl	"peak = MAX ( heap -> peak , size )"		61148	0					
ANR	61199	IdentifierDeclType	size_t		61148	0					
ANR	61200	Identifier	peak		61148	1					
ANR	61201	AssignmentExpression	"peak = MAX ( heap -> peak , size )"		61148	2		=			
ANR	61202	Identifier	peak		61148	0					
ANR	61203	CallExpression	"MAX ( heap -> peak , size )"		61148	1					
ANR	61204	Callee	MAX		61148	0					
ANR	61205	Identifier	MAX		61148	0					
ANR	61206	ArgumentList	heap -> peak		61148	1					
ANR	61207	Argument	heap -> peak		61148	0					
ANR	61208	PtrMemberAccess	heap -> peak		61148	0					
ANR	61209	Identifier	heap		61148	0					
ANR	61210	Identifier	peak		61148	1					
ANR	61211	Argument	size		61148	1					
ANR	61212	Identifier	size		61148	0					
ANR	61213	ExpressionStatement	heap -> size = size	1098:2:32558:32575	61148	2	True				
ANR	61214	AssignmentExpression	heap -> size = size		61148	0		=			
ANR	61215	PtrMemberAccess	heap -> size		61148	0					
ANR	61216	Identifier	heap		61148	0					
ANR	61217	Identifier	size		61148	1					
ANR	61218	Identifier	size		61148	1					
ANR	61219	ExpressionStatement	heap -> peak = peak	1099:2:32579:32596	61148	3	True				
ANR	61220	AssignmentExpression	heap -> peak = peak		61148	0		=			
ANR	61221	PtrMemberAccess	heap -> peak		61148	0					
ANR	61222	Identifier	heap		61148	0					
ANR	61223	Identifier	peak		61148	1					
ANR	61224	Identifier	peak		61148	1					
ANR	61225	Condition	0	1100:10:32608:32608	61148	1	True				
ANR	61226	PrimaryExpression	0		61148	0					
ANR	61227	ReturnStatement	return ptr ;	1102:1:32620:32630	61148	17	True				
ANR	61228	Identifier	ptr		61148	0					
ANR	61229	ReturnType	static zend_always_inline void *		61148	1					
ANR	61230	Identifier	zend_mm_alloc_large		61148	2					
ANR	61231	ParameterList	"zend_mm_heap * heap , size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC"		61148	3					
ANR	61232	Parameter	zend_mm_heap * heap	1086:52:32040:32057	61148	0	True				
ANR	61233	ParameterType	zend_mm_heap *		61148	0					
ANR	61234	Identifier	heap		61148	1					
ANR	61235	Parameter	size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC	1086:72:32060:32111	61148	1	True				
ANR	61236	ParameterType	size_t size ZEND_FILE_LINE_DC		61148	0					
ANR	61237	Identifier	ZEND_FILE_LINE_ORIG_DC		61148	1					
ANR	61238	CFGEntryNode	ENTRY		61148		True				
ANR	61239	CFGExitNode	EXIT		61148		True				
ANR	61240	Symbol	heap -> size		61148						
ANR	61241	Symbol	heap -> peak		61148						
ANR	61242	Symbol	size		61148						
ANR	61243	Symbol	pages_count		61148						
ANR	61244	Symbol	MAX		61148						
ANR	61245	Symbol	ZEND_FILE_LINE_ORIG_DC		61148						
ANR	61246	Symbol	ZEND_MM_SIZE_TO_NUM		61148						
ANR	61247	Symbol	peak		61148						
ANR	61248	Symbol	heap		61148						
ANR	61249	Symbol	* heap		61148						
ANR	61250	Symbol	ZEND_MM_PAGE_SIZE		61148						
ANR	61251	Symbol	ptr		61148						
ANR	61252	Function	zend_mm_delete_chunk	1105:0:32635:33456							
ANR	61253	FunctionDef	"zend_mm_delete_chunk (zend_mm_heap * heap , zend_mm_chunk * chunk)"		61252	0					
ANR	61254	CompoundStatement		1106:0:32729:33456	61252	0					
ANR	61255	ExpressionStatement	chunk -> next -> prev = chunk -> prev	1107:1:32732:32763	61252	0	True				
ANR	61256	AssignmentExpression	chunk -> next -> prev = chunk -> prev		61252	0		=			
ANR	61257	PtrMemberAccess	chunk -> next -> prev		61252	0					
ANR	61258	PtrMemberAccess	chunk -> next		61252	0					
ANR	61259	Identifier	chunk		61252	0					
ANR	61260	Identifier	next		61252	1					
ANR	61261	Identifier	prev		61252	1					
ANR	61262	PtrMemberAccess	chunk -> prev		61252	1					
ANR	61263	Identifier	chunk		61252	0					
ANR	61264	Identifier	prev		61252	1					
ANR	61265	ExpressionStatement	chunk -> prev -> next = chunk -> next	1108:1:32766:32797	61252	1	True				
ANR	61266	AssignmentExpression	chunk -> prev -> next = chunk -> next		61252	0		=			
ANR	61267	PtrMemberAccess	chunk -> prev -> next		61252	0					
ANR	61268	PtrMemberAccess	chunk -> prev		61252	0					
ANR	61269	Identifier	chunk		61252	0					
ANR	61270	Identifier	prev		61252	1					
ANR	61271	Identifier	next		61252	1					
ANR	61272	PtrMemberAccess	chunk -> next		61252	1					
ANR	61273	Identifier	chunk		61252	0					
ANR	61274	Identifier	next		61252	1					
ANR	61275	ExpressionStatement	heap -> chunks_count --	1109:1:32800:32820	61252	2	True				
ANR	61276	PostIncDecOperationExpression	heap -> chunks_count --		61252	0					
ANR	61277	PtrMemberAccess	heap -> chunks_count		61252	0					
ANR	61278	Identifier	heap		61252	0					
ANR	61279	Identifier	chunks_count		61252	1					
ANR	61280	IncDec	--		61252	1					
ANR	61281	IfStatement	if ( heap -> chunks_count + heap -> cached_chunks_count < heap -> avg_chunks_count + 0.1 )		61252	3					
ANR	61282	Condition	heap -> chunks_count + heap -> cached_chunks_count < heap -> avg_chunks_count + 0.1	1110:5:32827:32903	61252	0	True				
ANR	61283	RelationalExpression	heap -> chunks_count + heap -> cached_chunks_count < heap -> avg_chunks_count + 0.1		61252	0		<			
ANR	61284	AdditiveExpression	heap -> chunks_count + heap -> cached_chunks_count		61252	0		+			
ANR	61285	PtrMemberAccess	heap -> chunks_count		61252	0					
ANR	61286	Identifier	heap		61252	0					
ANR	61287	Identifier	chunks_count		61252	1					
ANR	61288	PtrMemberAccess	heap -> cached_chunks_count		61252	1					
ANR	61289	Identifier	heap		61252	0					
ANR	61290	Identifier	cached_chunks_count		61252	1					
ANR	61291	AdditiveExpression	heap -> avg_chunks_count + 0.1		61252	1		+			
ANR	61292	PtrMemberAccess	heap -> avg_chunks_count		61252	0					
ANR	61293	Identifier	heap		61252	0					
ANR	61294	Identifier	avg_chunks_count		61252	1					
ANR	61295	PrimaryExpression	0.1		61252	1					
ANR	61296	CompoundStatement		5:84:176:176	61252	1					
ANR	61297	ExpressionStatement	heap -> cached_chunks_count ++	1112:2:32933:32960	61252	0	True				
ANR	61298	PostIncDecOperationExpression	heap -> cached_chunks_count ++		61252	0					
ANR	61299	PtrMemberAccess	heap -> cached_chunks_count		61252	0					
ANR	61300	Identifier	heap		61252	0					
ANR	61301	Identifier	cached_chunks_count		61252	1					
ANR	61302	IncDec	++		61252	1					
ANR	61303	ExpressionStatement	chunk -> next = heap -> cached_chunks	1113:2:32964:32997	61252	1	True				
ANR	61304	AssignmentExpression	chunk -> next = heap -> cached_chunks		61252	0		=			
ANR	61305	PtrMemberAccess	chunk -> next		61252	0					
ANR	61306	Identifier	chunk		61252	0					
ANR	61307	Identifier	next		61252	1					
ANR	61308	PtrMemberAccess	heap -> cached_chunks		61252	1					
ANR	61309	Identifier	heap		61252	0					
ANR	61310	Identifier	cached_chunks		61252	1					
ANR	61311	ExpressionStatement	heap -> cached_chunks = chunk	1114:2:33001:33028	61252	2	True				
ANR	61312	AssignmentExpression	heap -> cached_chunks = chunk		61252	0		=			
ANR	61313	PtrMemberAccess	heap -> cached_chunks		61252	0					
ANR	61314	Identifier	heap		61252	0					
ANR	61315	Identifier	cached_chunks		61252	1					
ANR	61316	Identifier	chunk		61252	1					
ANR	61317	ElseStatement	else		61252	0					
ANR	61318	CompoundStatement		10:8:308:308	61252	0					
ANR	61319	ExpressionStatement	heap -> real_size -= ZEND_MM_CHUNK_SIZE	1117:2:33076:33113	61252	0	True				
ANR	61320	AssignmentExpression	heap -> real_size -= ZEND_MM_CHUNK_SIZE		61252	0		-=			
ANR	61321	PtrMemberAccess	heap -> real_size		61252	0					
ANR	61322	Identifier	heap		61252	0					
ANR	61323	Identifier	real_size		61252	1					
ANR	61324	Identifier	ZEND_MM_CHUNK_SIZE		61252	1					
ANR	61325	IfStatement	if ( ! heap -> cached_chunks || chunk -> num > heap -> cached_chunks -> num )		61252	1					
ANR	61326	Condition	! heap -> cached_chunks || chunk -> num > heap -> cached_chunks -> num	1119:6:33128:33188	61252	0	True				
ANR	61327	OrExpression	! heap -> cached_chunks || chunk -> num > heap -> cached_chunks -> num		61252	0		||			
ANR	61328	UnaryOperationExpression	! heap -> cached_chunks		61252	0					
ANR	61329	UnaryOperator	!		61252	0					
ANR	61330	PtrMemberAccess	heap -> cached_chunks		61252	1					
ANR	61331	Identifier	heap		61252	0					
ANR	61332	Identifier	cached_chunks		61252	1					
ANR	61333	RelationalExpression	chunk -> num > heap -> cached_chunks -> num		61252	1		>			
ANR	61334	PtrMemberAccess	chunk -> num		61252	0					
ANR	61335	Identifier	chunk		61252	0					
ANR	61336	Identifier	num		61252	1					
ANR	61337	PtrMemberAccess	heap -> cached_chunks -> num		61252	1					
ANR	61338	PtrMemberAccess	heap -> cached_chunks		61252	0					
ANR	61339	Identifier	heap		61252	0					
ANR	61340	Identifier	cached_chunks		61252	1					
ANR	61341	Identifier	num		61252	1					
ANR	61342	CompoundStatement		14:69:461:461	61252	1					
ANR	61343	ExpressionStatement	"zend_mm_chunk_free ( heap , chunk , ZEND_MM_CHUNK_SIZE )"	1120:3:33196:33247	61252	0	True				
ANR	61344	CallExpression	"zend_mm_chunk_free ( heap , chunk , ZEND_MM_CHUNK_SIZE )"		61252	0					
ANR	61345	Callee	zend_mm_chunk_free		61252	0					
ANR	61346	Identifier	zend_mm_chunk_free		61252	0					
ANR	61347	ArgumentList	heap		61252	1					
ANR	61348	Argument	heap		61252	0					
ANR	61349	Identifier	heap		61252	0					
ANR	61350	Argument	chunk		61252	1					
ANR	61351	Identifier	chunk		61252	0					
ANR	61352	Argument	ZEND_MM_CHUNK_SIZE		61252	2					
ANR	61353	Identifier	ZEND_MM_CHUNK_SIZE		61252	0					
ANR	61354	ElseStatement	else		61252	0					
ANR	61355	CompoundStatement		16:9:528:528	61252	0					
ANR	61356	ExpressionStatement	chunk -> next = heap -> cached_chunks -> next	1123:3:33306:33345	61252	0	True				
ANR	61357	AssignmentExpression	chunk -> next = heap -> cached_chunks -> next		61252	0		=			
ANR	61358	PtrMemberAccess	chunk -> next		61252	0					
ANR	61359	Identifier	chunk		61252	0					
ANR	61360	Identifier	next		61252	1					
ANR	61361	PtrMemberAccess	heap -> cached_chunks -> next		61252	1					
ANR	61362	PtrMemberAccess	heap -> cached_chunks		61252	0					
ANR	61363	Identifier	heap		61252	0					
ANR	61364	Identifier	cached_chunks		61252	1					
ANR	61365	Identifier	next		61252	1					
ANR	61366	ExpressionStatement	"zend_mm_chunk_free ( heap , heap -> cached_chunks , ZEND_MM_CHUNK_SIZE )"	1124:3:33350:33415	61252	1	True				
ANR	61367	CallExpression	"zend_mm_chunk_free ( heap , heap -> cached_chunks , ZEND_MM_CHUNK_SIZE )"		61252	0					
ANR	61368	Callee	zend_mm_chunk_free		61252	0					
ANR	61369	Identifier	zend_mm_chunk_free		61252	0					
ANR	61370	ArgumentList	heap		61252	1					
ANR	61371	Argument	heap		61252	0					
ANR	61372	Identifier	heap		61252	0					
ANR	61373	Argument	heap -> cached_chunks		61252	1					
ANR	61374	PtrMemberAccess	heap -> cached_chunks		61252	0					
ANR	61375	Identifier	heap		61252	0					
ANR	61376	Identifier	cached_chunks		61252	1					
ANR	61377	Argument	ZEND_MM_CHUNK_SIZE		61252	2					
ANR	61378	Identifier	ZEND_MM_CHUNK_SIZE		61252	0					
ANR	61379	ExpressionStatement	heap -> cached_chunks = chunk	1125:3:33420:33447	61252	2	True				
ANR	61380	AssignmentExpression	heap -> cached_chunks = chunk		61252	0		=			
ANR	61381	PtrMemberAccess	heap -> cached_chunks		61252	0					
ANR	61382	Identifier	heap		61252	0					
ANR	61383	Identifier	cached_chunks		61252	1					
ANR	61384	Identifier	chunk		61252	1					
ANR	61385	ReturnType	static zend_always_inline void		61252	1					
ANR	61386	Identifier	zend_mm_delete_chunk		61252	2					
ANR	61387	ParameterList	"zend_mm_heap * heap , zend_mm_chunk * chunk"		61252	3					
ANR	61388	Parameter	zend_mm_heap * heap	1105:52:32687:32704	61252	0	True				
ANR	61389	ParameterType	zend_mm_heap *		61252	0					
ANR	61390	Identifier	heap		61252	1					
ANR	61391	Parameter	zend_mm_chunk * chunk	1105:72:32707:32726	61252	1	True				
ANR	61392	ParameterType	zend_mm_chunk *		61252	0					
ANR	61393	Identifier	chunk		61252	1					
ANR	61394	CFGEntryNode	ENTRY		61252		True				
ANR	61395	CFGExitNode	EXIT		61252		True				
ANR	61396	Symbol	* * heap		61252						
ANR	61397	Symbol	* * chunk		61252						
ANR	61398	Symbol	* chunk -> next		61252						
ANR	61399	Symbol	heap -> chunks_count		61252						
ANR	61400	Symbol	chunk -> next -> prev		61252						
ANR	61401	Symbol	chunk -> prev		61252						
ANR	61402	Symbol	heap -> real_size		61252						
ANR	61403	Symbol	chunk		61252						
ANR	61404	Symbol	chunk -> next		61252						
ANR	61405	Symbol	heap -> cached_chunks -> num		61252						
ANR	61406	Symbol	heap -> cached_chunks		61252						
ANR	61407	Symbol	* heap -> cached_chunks		61252						
ANR	61408	Symbol	heap -> cached_chunks_count		61252						
ANR	61409	Symbol	heap -> avg_chunks_count		61252						
ANR	61410	Symbol	* chunk		61252						
ANR	61411	Symbol	chunk -> num		61252						
ANR	61412	Symbol	* chunk -> prev		61252						
ANR	61413	Symbol	ZEND_MM_CHUNK_SIZE		61252						
ANR	61414	Symbol	heap		61252						
ANR	61415	Symbol	* heap		61252						
ANR	61416	Symbol	chunk -> prev -> next		61252						
ANR	61417	Symbol	heap -> cached_chunks -> next		61252						
ANR	61418	Function	zend_mm_free_pages_ex	1130:0:33459:33978							
ANR	61419	FunctionDef	"zend_mm_free_pages_ex (zend_mm_heap * heap , zend_mm_chunk * chunk , int page_num , int pages_count , int free_chunk)"		61418	0					
ANR	61420	CompoundStatement		1131:0:33601:33978	61418	0					
ANR	61421	ExpressionStatement	chunk -> free_pages += pages_count	1132:1:33604:33636	61418	0	True				
ANR	61422	AssignmentExpression	chunk -> free_pages += pages_count		61418	0		+=			
ANR	61423	PtrMemberAccess	chunk -> free_pages		61418	0					
ANR	61424	Identifier	chunk		61418	0					
ANR	61425	Identifier	free_pages		61418	1					
ANR	61426	Identifier	pages_count		61418	1					
ANR	61427	ExpressionStatement	"zend_mm_bitset_reset_range ( chunk -> free_map , page_num , pages_count )"	1133:1:33639:33705	61418	1	True				
ANR	61428	CallExpression	"zend_mm_bitset_reset_range ( chunk -> free_map , page_num , pages_count )"		61418	0					
ANR	61429	Callee	zend_mm_bitset_reset_range		61418	0					
ANR	61430	Identifier	zend_mm_bitset_reset_range		61418	0					
ANR	61431	ArgumentList	chunk -> free_map		61418	1					
ANR	61432	Argument	chunk -> free_map		61418	0					
ANR	61433	PtrMemberAccess	chunk -> free_map		61418	0					
ANR	61434	Identifier	chunk		61418	0					
ANR	61435	Identifier	free_map		61418	1					
ANR	61436	Argument	page_num		61418	1					
ANR	61437	Identifier	page_num		61418	0					
ANR	61438	Argument	pages_count		61418	2					
ANR	61439	Identifier	pages_count		61418	0					
ANR	61440	ExpressionStatement	chunk -> map [ page_num ] = 0	1134:1:33708:33732	61418	2	True				
ANR	61441	AssignmentExpression	chunk -> map [ page_num ] = 0		61418	0		=			
ANR	61442	ArrayIndexing	chunk -> map [ page_num ]		61418	0					
ANR	61443	PtrMemberAccess	chunk -> map		61418	0					
ANR	61444	Identifier	chunk		61418	0					
ANR	61445	Identifier	map		61418	1					
ANR	61446	Identifier	page_num		61418	1					
ANR	61447	PrimaryExpression	0		61418	1					
ANR	61448	IfStatement	if ( chunk -> free_tail == page_num + pages_count )		61418	3					
ANR	61449	Condition	chunk -> free_tail == page_num + pages_count	1135:5:33739:33780	61418	0	True				
ANR	61450	EqualityExpression	chunk -> free_tail == page_num + pages_count		61418	0		==			
ANR	61451	PtrMemberAccess	chunk -> free_tail		61418	0					
ANR	61452	Identifier	chunk		61418	0					
ANR	61453	Identifier	free_tail		61418	1					
ANR	61454	AdditiveExpression	page_num + pages_count		61418	1		+			
ANR	61455	Identifier	page_num		61418	0					
ANR	61456	Identifier	pages_count		61418	1					
ANR	61457	CompoundStatement		5:49:181:181	61418	1					
ANR	61458	ExpressionStatement	chunk -> free_tail = page_num	1137:2:33828:33855	61418	0	True				
ANR	61459	AssignmentExpression	chunk -> free_tail = page_num		61418	0		=			
ANR	61460	PtrMemberAccess	chunk -> free_tail		61418	0					
ANR	61461	Identifier	chunk		61418	0					
ANR	61462	Identifier	free_tail		61418	1					
ANR	61463	Identifier	page_num		61418	1					
ANR	61464	IfStatement	if ( free_chunk && chunk -> free_pages == ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE )		61418	4					
ANR	61465	Condition	free_chunk && chunk -> free_pages == ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE	1139:5:33865:33933	61418	0	True				
ANR	61466	AndExpression	free_chunk && chunk -> free_pages == ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE		61418	0		&&			
ANR	61467	Identifier	free_chunk		61418	0					
ANR	61468	EqualityExpression	chunk -> free_pages == ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE		61418	1		==			
ANR	61469	PtrMemberAccess	chunk -> free_pages		61418	0					
ANR	61470	Identifier	chunk		61418	0					
ANR	61471	Identifier	free_pages		61418	1					
ANR	61472	AdditiveExpression	ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE		61418	1		-			
ANR	61473	Identifier	ZEND_MM_PAGES		61418	0					
ANR	61474	Identifier	ZEND_MM_FIRST_PAGE		61418	1					
ANR	61475	CompoundStatement		9:76:334:334	61418	1					
ANR	61476	ExpressionStatement	"zend_mm_delete_chunk ( heap , chunk )"	1140:2:33940:33973	61418	0	True				
ANR	61477	CallExpression	"zend_mm_delete_chunk ( heap , chunk )"		61418	0					
ANR	61478	Callee	zend_mm_delete_chunk		61418	0					
ANR	61479	Identifier	zend_mm_delete_chunk		61418	0					
ANR	61480	ArgumentList	heap		61418	1					
ANR	61481	Argument	heap		61418	0					
ANR	61482	Identifier	heap		61418	0					
ANR	61483	Argument	chunk		61418	1					
ANR	61484	Identifier	chunk		61418	0					
ANR	61485	ReturnType	static zend_always_inline void		61418	1					
ANR	61486	Identifier	zend_mm_free_pages_ex		61418	2					
ANR	61487	ParameterList	"zend_mm_heap * heap , zend_mm_chunk * chunk , int page_num , int pages_count , int free_chunk"		61418	3					
ANR	61488	Parameter	zend_mm_heap * heap	1130:53:33512:33529	61418	0	True				
ANR	61489	ParameterType	zend_mm_heap *		61418	0					
ANR	61490	Identifier	heap		61418	1					
ANR	61491	Parameter	zend_mm_chunk * chunk	1130:73:33532:33551	61418	1	True				
ANR	61492	ParameterType	zend_mm_chunk *		61418	0					
ANR	61493	Identifier	chunk		61418	1					
ANR	61494	Parameter	int page_num	1130:95:33554:33565	61418	2	True				
ANR	61495	ParameterType	int		61418	0					
ANR	61496	Identifier	page_num		61418	1					
ANR	61497	Parameter	int pages_count	1130:109:33568:33582	61418	3	True				
ANR	61498	ParameterType	int		61418	0					
ANR	61499	Identifier	pages_count		61418	1					
ANR	61500	Parameter	int free_chunk	1130:126:33585:33598	61418	4	True				
ANR	61501	ParameterType	int		61418	0					
ANR	61502	Identifier	free_chunk		61418	1					
ANR	61503	CFGEntryNode	ENTRY		61418		True				
ANR	61504	CFGExitNode	EXIT		61418		True				
ANR	61505	Symbol	pages_count		61418						
ANR	61506	Symbol	* * chunk		61418						
ANR	61507	Symbol	ZEND_MM_PAGES		61418						
ANR	61508	Symbol	chunk		61418						
ANR	61509	Symbol	page_num		61418						
ANR	61510	Symbol	chunk -> free_pages		61418						
ANR	61511	Symbol	chunk -> free_tail		61418						
ANR	61512	Symbol	free_chunk		61418						
ANR	61513	Symbol	* chunk		61418						
ANR	61514	Symbol	* page_num		61418						
ANR	61515	Symbol	* chunk -> map		61418						
ANR	61516	Symbol	ZEND_MM_FIRST_PAGE		61418						
ANR	61517	Symbol	chunk -> free_map		61418						
ANR	61518	Symbol	heap		61418						
ANR	61519	Symbol	chunk -> map		61418						
ANR	61520	Function	zend_mm_free_pages	1144:0:33981:34150							
ANR	61521	FunctionDef	"zend_mm_free_pages (zend_mm_heap * heap , zend_mm_chunk * chunk , int page_num , int pages_count)"		61520	0					
ANR	61522	CompoundStatement		1145:0:34085:34150	61520	0					
ANR	61523	ExpressionStatement	"zend_mm_free_pages_ex ( heap , chunk , page_num , pages_count , 1 )"	1146:1:34088:34148	61520	0	True				
ANR	61524	CallExpression	"zend_mm_free_pages_ex ( heap , chunk , page_num , pages_count , 1 )"		61520	0					
ANR	61525	Callee	zend_mm_free_pages_ex		61520	0					
ANR	61526	Identifier	zend_mm_free_pages_ex		61520	0					
ANR	61527	ArgumentList	heap		61520	1					
ANR	61528	Argument	heap		61520	0					
ANR	61529	Identifier	heap		61520	0					
ANR	61530	Argument	chunk		61520	1					
ANR	61531	Identifier	chunk		61520	0					
ANR	61532	Argument	page_num		61520	2					
ANR	61533	Identifier	page_num		61520	0					
ANR	61534	Argument	pages_count		61520	3					
ANR	61535	Identifier	pages_count		61520	0					
ANR	61536	Argument	1		61520	4					
ANR	61537	PrimaryExpression	1		61520	0					
ANR	61538	ReturnType	static void		61520	1					
ANR	61539	Identifier	zend_mm_free_pages		61520	2					
ANR	61540	ParameterList	"zend_mm_heap * heap , zend_mm_chunk * chunk , int page_num , int pages_count"		61520	3					
ANR	61541	Parameter	zend_mm_heap * heap	1144:31:34012:34029	61520	0	True				
ANR	61542	ParameterType	zend_mm_heap *		61520	0					
ANR	61543	Identifier	heap		61520	1					
ANR	61544	Parameter	zend_mm_chunk * chunk	1144:51:34032:34051	61520	1	True				
ANR	61545	ParameterType	zend_mm_chunk *		61520	0					
ANR	61546	Identifier	chunk		61520	1					
ANR	61547	Parameter	int page_num	1144:73:34054:34065	61520	2	True				
ANR	61548	ParameterType	int		61520	0					
ANR	61549	Identifier	page_num		61520	1					
ANR	61550	Parameter	int pages_count	1144:87:34068:34082	61520	3	True				
ANR	61551	ParameterType	int		61520	0					
ANR	61552	Identifier	pages_count		61520	1					
ANR	61553	CFGEntryNode	ENTRY		61520		True				
ANR	61554	CFGExitNode	EXIT		61520		True				
ANR	61555	Symbol	pages_count		61520						
ANR	61556	Symbol	chunk		61520						
ANR	61557	Symbol	page_num		61520						
ANR	61558	Symbol	heap		61520						
ANR	61559	Function	zend_mm_free_large	1149:0:34153:34407							
ANR	61560	FunctionDef	"zend_mm_free_large (zend_mm_heap * heap , zend_mm_chunk * chunk , int page_num , int pages_count)"		61559	0					
ANR	61561	CompoundStatement		1150:0:34276:34407	61559	0					
ANR	61562	ExpressionStatement	heap -> size -= pages_count * ZEND_MM_PAGE_SIZE	1152:1:34296:34341	61559	0	True				
ANR	61563	AssignmentExpression	heap -> size -= pages_count * ZEND_MM_PAGE_SIZE		61559	0		-=			
ANR	61564	PtrMemberAccess	heap -> size		61559	0					
ANR	61565	Identifier	heap		61559	0					
ANR	61566	Identifier	size		61559	1					
ANR	61567	MultiplicativeExpression	pages_count * ZEND_MM_PAGE_SIZE		61559	1		*			
ANR	61568	Identifier	pages_count		61559	0					
ANR	61569	Identifier	ZEND_MM_PAGE_SIZE		61559	1					
ANR	61570	ExpressionStatement	"zend_mm_free_pages ( heap , chunk , page_num , pages_count )"	1154:1:34351:34405	61559	1	True				
ANR	61571	CallExpression	"zend_mm_free_pages ( heap , chunk , page_num , pages_count )"		61559	0					
ANR	61572	Callee	zend_mm_free_pages		61559	0					
ANR	61573	Identifier	zend_mm_free_pages		61559	0					
ANR	61574	ArgumentList	heap		61559	1					
ANR	61575	Argument	heap		61559	0					
ANR	61576	Identifier	heap		61559	0					
ANR	61577	Argument	chunk		61559	1					
ANR	61578	Identifier	chunk		61559	0					
ANR	61579	Argument	page_num		61559	2					
ANR	61580	Identifier	page_num		61559	0					
ANR	61581	Argument	pages_count		61559	3					
ANR	61582	Identifier	pages_count		61559	0					
ANR	61583	ReturnType	static zend_always_inline void		61559	1					
ANR	61584	Identifier	zend_mm_free_large		61559	2					
ANR	61585	ParameterList	"zend_mm_heap * heap , zend_mm_chunk * chunk , int page_num , int pages_count"		61559	3					
ANR	61586	Parameter	zend_mm_heap * heap	1149:50:34203:34220	61559	0	True				
ANR	61587	ParameterType	zend_mm_heap *		61559	0					
ANR	61588	Identifier	heap		61559	1					
ANR	61589	Parameter	zend_mm_chunk * chunk	1149:70:34223:34242	61559	1	True				
ANR	61590	ParameterType	zend_mm_chunk *		61559	0					
ANR	61591	Identifier	chunk		61559	1					
ANR	61592	Parameter	int page_num	1149:92:34245:34256	61559	2	True				
ANR	61593	ParameterType	int		61559	0					
ANR	61594	Identifier	page_num		61559	1					
ANR	61595	Parameter	int pages_count	1149:106:34259:34273	61559	3	True				
ANR	61596	ParameterType	int		61559	0					
ANR	61597	Identifier	pages_count		61559	1					
ANR	61598	CFGEntryNode	ENTRY		61559		True				
ANR	61599	CFGExitNode	EXIT		61559		True				
ANR	61600	Symbol	heap -> size		61559						
ANR	61601	Symbol	pages_count		61559						
ANR	61602	Symbol	chunk		61559						
ANR	61603	Symbol	page_num		61559						
ANR	61604	Symbol	heap		61559						
ANR	61605	Symbol	* heap		61559						
ANR	61606	Symbol	ZEND_MM_PAGE_SIZE		61559						
ANR	61607	Function	zend_mm_small_size_to_bit	1162:0:34543:35142							
ANR	61608	FunctionDef	zend_mm_small_size_to_bit (int size)		61607	0					
ANR	61609	CompoundStatement		1163:0:34609:35142	61607	0					
ANR	61610	ReturnStatement	return ( __builtin_clz ( size ) ^ 0x1f ) + 1 ;	1165:1:34702:34741	61607	0	True				
ANR	61611	AdditiveExpression	( __builtin_clz ( size ) ^ 0x1f ) + 1		61607	0		+			
ANR	61612	ExclusiveOrExpression	__builtin_clz ( size ) ^ 0x1f		61607	0		^			
ANR	61613	CallExpression	__builtin_clz ( size )		61607	0					
ANR	61614	Callee	__builtin_clz		61607	0					
ANR	61615	Identifier	__builtin_clz		61607	0					
ANR	61616	ArgumentList	size		61607	1					
ANR	61617	Argument	size		61607	0					
ANR	61618	Identifier	size		61607	0					
ANR	61619	PrimaryExpression	0x1f		61607	1					
ANR	61620	PrimaryExpression	1		61607	1					
ANR	61621	ReturnType	static zend_always_inline int		61607	1					
ANR	61622	Identifier	zend_mm_small_size_to_bit		61607	2					
ANR	61623	ParameterList	int size		61607	3					
ANR	61624	Parameter	int size	1162:56:34599:34606	61607	0	True				
ANR	61625	ParameterType	int		61607	0					
ANR	61626	Identifier	size		61607	1					
ANR	61627	CFGEntryNode	ENTRY		61607		True				
ANR	61628	CFGExitNode	EXIT		61607		True				
ANR	61629	Symbol	size		61607						
ANR	61630	Symbol	__builtin_clz		61607						
ANR	61631	Function	zend_mm_small_size_to_bin	1193:0:35275:35990							
ANR	61632	FunctionDef	zend_mm_small_size_to_bin (size_t size)		61631	0					
ANR	61633	CompoundStatement		1194:0:35344:35990	61631	0					
ANR	61634	IdentifierDeclStatement	int n ;	1196:1:35353:35358	61631	0	True				
ANR	61635	IdentifierDecl	n		61631	0					
ANR	61636	IdentifierDeclType	int		61631	0					
ANR	61637	Identifier	n		61631	1					
ANR	61638	Statement	static	1198:1:35443:35448	61631	1	True				
ANR	61639	IdentifierDeclStatement	"const int f1 [ ] = { 3 , 3 , 3 , 3 , 3 , 3 , 3 , 4 , 5 , 6 , 7 , 8 , 9 } ;"	1198:8:35450:35519	61631	2	True				
ANR	61640	IdentifierDecl	"f1 [ ] = { 3 , 3 , 3 , 3 , 3 , 3 , 3 , 4 , 5 , 6 , 7 , 8 , 9 }"		61631	0					
ANR	61641	IdentifierDeclType	const int [ ]		61631	0					
ANR	61642	Identifier	f1		61631	1					
ANR	61643	AssignmentExpression	"f1 [ ] = { 3 , 3 , 3 , 3 , 3 , 3 , 3 , 4 , 5 , 6 , 7 , 8 , 9 }"		61631	2		=			
ANR	61644	Identifier	f1		61631	0					
ANR	61645	InitializerList	3		61631	1					
ANR	61646	PrimaryExpression	3		61631	0					
ANR	61647	PrimaryExpression	3		61631	1					
ANR	61648	PrimaryExpression	3		61631	2					
ANR	61649	PrimaryExpression	3		61631	3					
ANR	61650	PrimaryExpression	3		61631	4					
ANR	61651	PrimaryExpression	3		61631	5					
ANR	61652	PrimaryExpression	3		61631	6					
ANR	61653	PrimaryExpression	4		61631	7					
ANR	61654	PrimaryExpression	5		61631	8					
ANR	61655	PrimaryExpression	6		61631	9					
ANR	61656	PrimaryExpression	7		61631	10					
ANR	61657	PrimaryExpression	8		61631	11					
ANR	61658	PrimaryExpression	9		61631	12					
ANR	61659	Statement	static	1199:1:35522:35527	61631	3	True				
ANR	61660	IdentifierDeclStatement	"const int f2 [ ] = { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 4 , 8 , 12 , 16 , 20 , 24 } ;"	1199:8:35529:35598	61631	4	True				
ANR	61661	IdentifierDecl	"f2 [ ] = { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 4 , 8 , 12 , 16 , 20 , 24 }"		61631	0					
ANR	61662	IdentifierDeclType	const int [ ]		61631	0					
ANR	61663	Identifier	f2		61631	1					
ANR	61664	AssignmentExpression	"f2 [ ] = { 0 , 0 , 0 , 0 , 0 , 0 , 0 , 4 , 8 , 12 , 16 , 20 , 24 }"		61631	2		=			
ANR	61665	Identifier	f2		61631	0					
ANR	61666	InitializerList	0		61631	1					
ANR	61667	PrimaryExpression	0		61631	0					
ANR	61668	PrimaryExpression	0		61631	1					
ANR	61669	PrimaryExpression	0		61631	2					
ANR	61670	PrimaryExpression	0		61631	3					
ANR	61671	PrimaryExpression	0		61631	4					
ANR	61672	PrimaryExpression	0		61631	5					
ANR	61673	PrimaryExpression	0		61631	6					
ANR	61674	PrimaryExpression	4		61631	7					
ANR	61675	PrimaryExpression	8		61631	8					
ANR	61676	PrimaryExpression	12		61631	9					
ANR	61677	PrimaryExpression	16		61631	10					
ANR	61678	PrimaryExpression	20		61631	11					
ANR	61679	PrimaryExpression	24		61631	12					
ANR	61680	IfStatement	if ( UNEXPECTED ( size <= 2 ) )		61631	5					
ANR	61681	Condition	UNEXPECTED ( size <= 2 )	1201:5:35606:35626	61631	0	True				
ANR	61682	CallExpression	UNEXPECTED ( size <= 2 )		61631	0					
ANR	61683	Callee	UNEXPECTED		61631	0					
ANR	61684	Identifier	UNEXPECTED		61631	0					
ANR	61685	ArgumentList	size <= 2		61631	1					
ANR	61686	Argument	size <= 2		61631	0					
ANR	61687	RelationalExpression	size <= 2		61631	0		<=			
ANR	61688	Identifier	size		61631	0					
ANR	61689	PrimaryExpression	2		61631	1					
ANR	61690	ReturnStatement	return 0 ;	1201:28:35629:35637	61631	1	True				
ANR	61691	PrimaryExpression	0		61631	0					
ANR	61692	ExpressionStatement	n = zend_mm_small_size_to_bit ( size - 1 )	1202:1:35640:35679	61631	6	True				
ANR	61693	AssignmentExpression	n = zend_mm_small_size_to_bit ( size - 1 )		61631	0		=			
ANR	61694	Identifier	n		61631	0					
ANR	61695	CallExpression	zend_mm_small_size_to_bit ( size - 1 )		61631	1					
ANR	61696	Callee	zend_mm_small_size_to_bit		61631	0					
ANR	61697	Identifier	zend_mm_small_size_to_bit		61631	0					
ANR	61698	ArgumentList	size - 1		61631	1					
ANR	61699	Argument	size - 1		61631	0					
ANR	61700	AdditiveExpression	size - 1		61631	0		-			
ANR	61701	Identifier	size		61631	0					
ANR	61702	PrimaryExpression	1		61631	1					
ANR	61703	ReturnStatement	return ( ( size - 1 ) >> f1 [ n ] ) + f2 [ n ] ;	1203:1:35682:35716	61631	7	True				
ANR	61704	AdditiveExpression	( ( size - 1 ) >> f1 [ n ] ) + f2 [ n ]		61631	0		+			
ANR	61705	ShiftExpression	( size - 1 ) >> f1 [ n ]		61631	0		>>			
ANR	61706	AdditiveExpression	size - 1		61631	0		-			
ANR	61707	Identifier	size		61631	0					
ANR	61708	PrimaryExpression	1		61631	1					
ANR	61709	ArrayIndexing	f1 [ n ]		61631	1					
ANR	61710	Identifier	f1		61631	0					
ANR	61711	Identifier	n		61631	1					
ANR	61712	ArrayIndexing	f2 [ n ]		61631	1					
ANR	61713	Identifier	f2		61631	0					
ANR	61714	Identifier	n		61631	1					
ANR	61715	ReturnType	static zend_always_inline int		61631	1					
ANR	61716	Identifier	zend_mm_small_size_to_bin		61631	2					
ANR	61717	ParameterList	size_t size		61631	3					
ANR	61718	Parameter	size_t size	1193:56:35331:35341	61631	0	True				
ANR	61719	ParameterType	size_t		61631	0					
ANR	61720	Identifier	size		61631	1					
ANR	61721	CFGEntryNode	ENTRY		61631		True				
ANR	61722	CFGExitNode	EXIT		61631		True				
ANR	61723	Symbol	UNEXPECTED		61631						
ANR	61724	Symbol	* f2		61631						
ANR	61725	Symbol	* f1		61631						
ANR	61726	Symbol	size		61631						
ANR	61727	Symbol	* n		61631						
ANR	61728	Symbol	zend_mm_small_size_to_bit		61631						
ANR	61729	Symbol	f1		61631						
ANR	61730	Symbol	f2		61631						
ANR	61731	Symbol	n		61631						
ANR	61732	Function	zend_mm_alloc_small_slow	1223:0:36067:37942							
ANR	61733	FunctionDef	"zend_mm_alloc_small_slow (zend_mm_heap * heap , int bin_num ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC)"		61732	0					
ANR	61734	CompoundStatement		1224:0:36197:37942	61732	0					
ANR	61735	IdentifierDeclStatement	zend_mm_chunk * chunk ;	1225:4:36203:36223	61732	0	True				
ANR	61736	IdentifierDecl	* chunk		61732	0					
ANR	61737	IdentifierDeclType	zend_mm_chunk *		61732	0					
ANR	61738	Identifier	chunk		61732	1					
ANR	61739	IdentifierDeclStatement	int page_num ;	1226:4:36229:36241	61732	1	True				
ANR	61740	IdentifierDecl	page_num		61732	0					
ANR	61741	IdentifierDeclType	int		61732	0					
ANR	61742	Identifier	page_num		61732	1					
ANR	61743	IdentifierDeclStatement	zend_mm_bin * bin ;	1227:1:36244:36260	61732	2	True				
ANR	61744	IdentifierDecl	* bin		61732	0					
ANR	61745	IdentifierDeclType	zend_mm_bin *		61732	0					
ANR	61746	Identifier	bin		61732	1					
ANR	61747	IdentifierDeclStatement	"zend_mm_free_slot * p , * end ;"	1228:1:36263:36289	61732	3	True				
ANR	61748	IdentifierDecl	* p		61732	0					
ANR	61749	IdentifierDeclType	zend_mm_free_slot *		61732	0					
ANR	61750	Identifier	p		61732	1					
ANR	61751	IdentifierDecl	* end		61732	1					
ANR	61752	IdentifierDeclType	zend_mm_free_slot *		61732	0					
ANR	61753	Identifier	end		61732	1					
ANR	61754	Statement	bin	1231:1:36308:36310	61732	4	True				
ANR	61755	Statement	=	1231:5:36312:36312	61732	5	True				
ANR	61756	Statement	(	1231:7:36314:36314	61732	6	True				
ANR	61757	Statement	zend_mm_bin	1231:8:36315:36325	61732	7	True				
ANR	61758	Statement	*	1231:19:36326:36326	61732	8	True				
ANR	61759	Statement	)	1231:20:36327:36327	61732	9	True				
ANR	61760	Statement	zend_mm_alloc_pages	1231:21:36328:36346	61732	10	True				
ANR	61761	Statement	(	1231:40:36347:36347	61732	11	True				
ANR	61762	Statement	heap	1231:41:36348:36351	61732	12	True				
ANR	61763	Statement	","	1231:45:36352:36352	61732	13	True				
ANR	61764	Statement	bin_pages	1231:47:36354:36362	61732	14	True				
ANR	61765	Statement	[	1231:56:36363:36363	61732	15	True				
ANR	61766	Statement	bin_num	1231:57:36364:36370	61732	16	True				
ANR	61767	Statement	]	1231:64:36371:36371	61732	17	True				
ANR	61768	Statement	","	1231:65:36372:36372	61732	18	True				
ANR	61769	Statement	bin_data_size	1231:67:36374:36386	61732	19	True				
ANR	61770	Statement	[	1231:80:36387:36387	61732	20	True				
ANR	61771	Statement	bin_num	1231:81:36388:36394	61732	21	True				
ANR	61772	Statement	]	1231:88:36395:36395	61732	22	True				
ANR	61773	Statement	ZEND_FILE_LINE_RELAY_CC	1231:90:36397:36419	61732	23	True				
ANR	61774	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	1231:114:36421:36448	61732	24	True				
ANR	61775	Statement	)	1231:142:36449:36449	61732	25	True				
ANR	61776	ExpressionStatement		1231:143:36450:36450	61732	26	True				
ANR	61777	IfStatement	if ( UNEXPECTED ( bin == NULL ) )		61732	27					
ANR	61778	Condition	UNEXPECTED ( bin == NULL )	1235:5:36591:36613	61732	0	True				
ANR	61779	CallExpression	UNEXPECTED ( bin == NULL )		61732	0					
ANR	61780	Callee	UNEXPECTED		61732	0					
ANR	61781	Identifier	UNEXPECTED		61732	0					
ANR	61782	ArgumentList	bin == NULL		61732	1					
ANR	61783	Argument	bin == NULL		61732	0					
ANR	61784	EqualityExpression	bin == NULL		61732	0		==			
ANR	61785	Identifier	bin		61732	0					
ANR	61786	Identifier	NULL		61732	1					
ANR	61787	CompoundStatement		12:30:418:418	61732	1					
ANR	61788	ReturnStatement	return NULL ;	1237:2:36648:36659	61732	0	True				
ANR	61789	Identifier	NULL		61732	0					
ANR	61790	ExpressionStatement	"chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( bin , ZEND_MM_CHUNK_SIZE )"	1240:1:36666:36735	61732	28	True				
ANR	61791	AssignmentExpression	"chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( bin , ZEND_MM_CHUNK_SIZE )"		61732	0		=			
ANR	61792	Identifier	chunk		61732	0					
ANR	61793	CastExpression	"( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( bin , ZEND_MM_CHUNK_SIZE )"		61732	1					
ANR	61794	CastTarget	zend_mm_chunk *		61732	0					
ANR	61795	CallExpression	"ZEND_MM_ALIGNED_BASE ( bin , ZEND_MM_CHUNK_SIZE )"		61732	1					
ANR	61796	Callee	ZEND_MM_ALIGNED_BASE		61732	0					
ANR	61797	Identifier	ZEND_MM_ALIGNED_BASE		61732	0					
ANR	61798	ArgumentList	bin		61732	1					
ANR	61799	Argument	bin		61732	0					
ANR	61800	Identifier	bin		61732	0					
ANR	61801	Argument	ZEND_MM_CHUNK_SIZE		61732	1					
ANR	61802	Identifier	ZEND_MM_CHUNK_SIZE		61732	0					
ANR	61803	ExpressionStatement	"page_num = ZEND_MM_ALIGNED_OFFSET ( bin , ZEND_MM_CHUNK_SIZE ) / ZEND_MM_PAGE_SIZE"	1241:1:36738:36816	61732	29	True				
ANR	61804	AssignmentExpression	"page_num = ZEND_MM_ALIGNED_OFFSET ( bin , ZEND_MM_CHUNK_SIZE ) / ZEND_MM_PAGE_SIZE"		61732	0		=			
ANR	61805	Identifier	page_num		61732	0					
ANR	61806	MultiplicativeExpression	"ZEND_MM_ALIGNED_OFFSET ( bin , ZEND_MM_CHUNK_SIZE ) / ZEND_MM_PAGE_SIZE"		61732	1		/			
ANR	61807	CallExpression	"ZEND_MM_ALIGNED_OFFSET ( bin , ZEND_MM_CHUNK_SIZE )"		61732	0					
ANR	61808	Callee	ZEND_MM_ALIGNED_OFFSET		61732	0					
ANR	61809	Identifier	ZEND_MM_ALIGNED_OFFSET		61732	0					
ANR	61810	ArgumentList	bin		61732	1					
ANR	61811	Argument	bin		61732	0					
ANR	61812	Identifier	bin		61732	0					
ANR	61813	Argument	ZEND_MM_CHUNK_SIZE		61732	1					
ANR	61814	Identifier	ZEND_MM_CHUNK_SIZE		61732	0					
ANR	61815	Identifier	ZEND_MM_PAGE_SIZE		61732	1					
ANR	61816	ExpressionStatement	chunk -> map [ page_num ] = ZEND_MM_SRUN ( bin_num )	1242:1:36819:36863	61732	30	True				
ANR	61817	AssignmentExpression	chunk -> map [ page_num ] = ZEND_MM_SRUN ( bin_num )		61732	0		=			
ANR	61818	ArrayIndexing	chunk -> map [ page_num ]		61732	0					
ANR	61819	PtrMemberAccess	chunk -> map		61732	0					
ANR	61820	Identifier	chunk		61732	0					
ANR	61821	Identifier	map		61732	1					
ANR	61822	Identifier	page_num		61732	1					
ANR	61823	CallExpression	ZEND_MM_SRUN ( bin_num )		61732	1					
ANR	61824	Callee	ZEND_MM_SRUN		61732	0					
ANR	61825	Identifier	ZEND_MM_SRUN		61732	0					
ANR	61826	ArgumentList	bin_num		61732	1					
ANR	61827	Argument	bin_num		61732	0					
ANR	61828	Identifier	bin_num		61732	0					
ANR	61829	IfStatement	if ( bin_pages [ bin_num ] > 1 )		61732	31					
ANR	61830	Condition	bin_pages [ bin_num ] > 1	1243:5:36870:36891	61732	0	True				
ANR	61831	RelationalExpression	bin_pages [ bin_num ] > 1		61732	0		>			
ANR	61832	ArrayIndexing	bin_pages [ bin_num ]		61732	0					
ANR	61833	Identifier	bin_pages		61732	0					
ANR	61834	Identifier	bin_num		61732	1					
ANR	61835	PrimaryExpression	1		61732	1					
ANR	61836	CompoundStatement		21:2:700:709	61732	1					
ANR	61837	IdentifierDeclStatement	int i = 1 ;	1244:2:36898:36907	61732	0	True				
ANR	61838	IdentifierDecl	i = 1		61732	0					
ANR	61839	IdentifierDeclType	int		61732	0					
ANR	61840	Identifier	i		61732	1					
ANR	61841	AssignmentExpression	i = 1		61732	2		=			
ANR	61842	Identifier	i		61732	0					
ANR	61843	PrimaryExpression	1		61732	1					
ANR	61844	DoStatement	do		61732	1					
ANR	61845	CompoundStatement		22:5:716:716	61732	0					
ANR	61846	ExpressionStatement	"chunk -> map [ page_num + i ] = ZEND_MM_NRUN ( bin_num , i )"	1246:3:36919:36968	61732	0	True				
ANR	61847	AssignmentExpression	"chunk -> map [ page_num + i ] = ZEND_MM_NRUN ( bin_num , i )"		61732	0		=			
ANR	61848	ArrayIndexing	chunk -> map [ page_num + i ]		61732	0					
ANR	61849	PtrMemberAccess	chunk -> map		61732	0					
ANR	61850	Identifier	chunk		61732	0					
ANR	61851	Identifier	map		61732	1					
ANR	61852	AdditiveExpression	page_num + i		61732	1		+			
ANR	61853	Identifier	page_num		61732	0					
ANR	61854	Identifier	i		61732	1					
ANR	61855	CallExpression	"ZEND_MM_NRUN ( bin_num , i )"		61732	1					
ANR	61856	Callee	ZEND_MM_NRUN		61732	0					
ANR	61857	Identifier	ZEND_MM_NRUN		61732	0					
ANR	61858	ArgumentList	bin_num		61732	1					
ANR	61859	Argument	bin_num		61732	0					
ANR	61860	Identifier	bin_num		61732	0					
ANR	61861	Argument	i		61732	1					
ANR	61862	Identifier	i		61732	0					
ANR	61863	ExpressionStatement	i ++	1247:3:36973:36976	61732	1	True				
ANR	61864	PostIncDecOperationExpression	i ++		61732	0					
ANR	61865	Identifier	i		61732	0					
ANR	61866	IncDec	++		61732	1					
ANR	61867	Condition	i < bin_pages [ bin_num ]	1248:11:36989:37010	61732	1	True				
ANR	61868	RelationalExpression	i < bin_pages [ bin_num ]		61732	0		<			
ANR	61869	Identifier	i		61732	0					
ANR	61870	ArrayIndexing	bin_pages [ bin_num ]		61732	1					
ANR	61871	Identifier	bin_pages		61732	0					
ANR	61872	Identifier	bin_num		61732	1					
ANR	61873	ExpressionStatement	end = ( zend_mm_free_slot * ) ( ( char * ) bin + ( bin_data_size [ bin_num ] * ( bin_elements [ bin_num ] - 1 ) ) )	1252:1:37074:37169	61732	32	True				
ANR	61874	AssignmentExpression	end = ( zend_mm_free_slot * ) ( ( char * ) bin + ( bin_data_size [ bin_num ] * ( bin_elements [ bin_num ] - 1 ) ) )		61732	0		=			
ANR	61875	Identifier	end		61732	0					
ANR	61876	CastExpression	( zend_mm_free_slot * ) ( ( char * ) bin + ( bin_data_size [ bin_num ] * ( bin_elements [ bin_num ] - 1 ) ) )		61732	1					
ANR	61877	CastTarget	zend_mm_free_slot *		61732	0					
ANR	61878	AdditiveExpression	( char * ) bin + ( bin_data_size [ bin_num ] * ( bin_elements [ bin_num ] - 1 ) )		61732	1		+			
ANR	61879	CastExpression	( char * ) bin		61732	0					
ANR	61880	CastTarget	char *		61732	0					
ANR	61881	Identifier	bin		61732	1					
ANR	61882	MultiplicativeExpression	bin_data_size [ bin_num ] * ( bin_elements [ bin_num ] - 1 )		61732	1		*			
ANR	61883	ArrayIndexing	bin_data_size [ bin_num ]		61732	0					
ANR	61884	Identifier	bin_data_size		61732	0					
ANR	61885	Identifier	bin_num		61732	1					
ANR	61886	AdditiveExpression	bin_elements [ bin_num ] - 1		61732	1		-			
ANR	61887	ArrayIndexing	bin_elements [ bin_num ]		61732	0					
ANR	61888	Identifier	bin_elements		61732	0					
ANR	61889	Identifier	bin_num		61732	1					
ANR	61890	PrimaryExpression	1		61732	1					
ANR	61891	ExpressionStatement	heap -> free_slot [ bin_num ] = p = ( zend_mm_free_slot * ) ( ( char * ) bin + bin_data_size [ bin_num ] )	1253:1:37172:37260	61732	33	True				
ANR	61892	AssignmentExpression	heap -> free_slot [ bin_num ] = p = ( zend_mm_free_slot * ) ( ( char * ) bin + bin_data_size [ bin_num ] )		61732	0		=			
ANR	61893	ArrayIndexing	heap -> free_slot [ bin_num ]		61732	0					
ANR	61894	PtrMemberAccess	heap -> free_slot		61732	0					
ANR	61895	Identifier	heap		61732	0					
ANR	61896	Identifier	free_slot		61732	1					
ANR	61897	Identifier	bin_num		61732	1					
ANR	61898	AssignmentExpression	p = ( zend_mm_free_slot * ) ( ( char * ) bin + bin_data_size [ bin_num ] )		61732	1		=			
ANR	61899	Identifier	p		61732	0					
ANR	61900	CastExpression	( zend_mm_free_slot * ) ( ( char * ) bin + bin_data_size [ bin_num ] )		61732	1					
ANR	61901	CastTarget	zend_mm_free_slot *		61732	0					
ANR	61902	AdditiveExpression	( char * ) bin + bin_data_size [ bin_num ]		61732	1		+			
ANR	61903	CastExpression	( char * ) bin		61732	0					
ANR	61904	CastTarget	char *		61732	0					
ANR	61905	Identifier	bin		61732	1					
ANR	61906	ArrayIndexing	bin_data_size [ bin_num ]		61732	1					
ANR	61907	Identifier	bin_data_size		61732	0					
ANR	61908	Identifier	bin_num		61732	1					
ANR	61909	DoStatement	do		61732	34					
ANR	61910	CompoundStatement		31:4:1068:1068	61732	0					
ANR	61911	ExpressionStatement	p -> next_free_slot = ( zend_mm_free_slot * ) ( ( char * ) p + bin_data_size [ bin_num ] )	1255:2:37270:37345	61732	0	True				
ANR	61912	AssignmentExpression	p -> next_free_slot = ( zend_mm_free_slot * ) ( ( char * ) p + bin_data_size [ bin_num ] )		61732	0		=			
ANR	61913	PtrMemberAccess	p -> next_free_slot		61732	0					
ANR	61914	Identifier	p		61732	0					
ANR	61915	Identifier	next_free_slot		61732	1					
ANR	61916	CastExpression	( zend_mm_free_slot * ) ( ( char * ) p + bin_data_size [ bin_num ] )		61732	1					
ANR	61917	CastTarget	zend_mm_free_slot *		61732	0					
ANR	61918	AdditiveExpression	( char * ) p + bin_data_size [ bin_num ]		61732	1		+			
ANR	61919	CastExpression	( char * ) p		61732	0					
ANR	61920	CastTarget	char *		61732	0					
ANR	61921	Identifier	p		61732	1					
ANR	61922	ArrayIndexing	bin_data_size [ bin_num ]		61732	1					
ANR	61923	Identifier	bin_data_size		61732	0					
ANR	61924	Identifier	bin_num		61732	1					
ANR	61925	ExpressionStatement		1255:78:37346:37346	61732	1	True				
ANR	61926	DoStatement	do		61732	2					
ANR	61927	CompoundStatement		35:3:1175:1308	61732	0					
ANR	61928	IdentifierDeclStatement	zend_mm_debug_info * dbg = ( zend_mm_debug_info * ) ( ( char * ) p + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) ) ;	1258:3:37373:37506	61732	0	True				
ANR	61929	IdentifierDecl	* dbg = ( zend_mm_debug_info * ) ( ( char * ) p + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		61732	0					
ANR	61930	IdentifierDeclType	zend_mm_debug_info *		61732	0					
ANR	61931	Identifier	dbg		61732	1					
ANR	61932	AssignmentExpression	* dbg = ( zend_mm_debug_info * ) ( ( char * ) p + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		61732	2		=			
ANR	61933	Identifier	dbg		61732	0					
ANR	61934	CastExpression	( zend_mm_debug_info * ) ( ( char * ) p + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		61732	1					
ANR	61935	CastTarget	zend_mm_debug_info *		61732	0					
ANR	61936	AdditiveExpression	( char * ) p + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		61732	1		+			
ANR	61937	CastExpression	( char * ) p		61732	0					
ANR	61938	CastTarget	char *		61732	0					
ANR	61939	Identifier	p		61732	1					
ANR	61940	AdditiveExpression	bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		61732	1		-			
ANR	61941	ArrayIndexing	bin_data_size [ bin_num ]		61732	0					
ANR	61942	Identifier	bin_data_size		61732	0					
ANR	61943	Identifier	bin_num		61732	1					
ANR	61944	CallExpression	ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		61732	1					
ANR	61945	Callee	ZEND_MM_ALIGNED_SIZE		61732	0					
ANR	61946	Identifier	ZEND_MM_ALIGNED_SIZE		61732	0					
ANR	61947	ArgumentList	sizeof ( zend_mm_debug_info )		61732	1					
ANR	61948	Argument	sizeof ( zend_mm_debug_info )		61732	0					
ANR	61949	SizeofExpression	sizeof ( zend_mm_debug_info )		61732	0					
ANR	61950	Sizeof	sizeof		61732	0					
ANR	61951	SizeofOperand	zend_mm_debug_info		61732	1					
ANR	61952	ExpressionStatement	dbg -> size = 0	1259:3:37511:37524	61732	1	True				
ANR	61953	AssignmentExpression	dbg -> size = 0		61732	0		=			
ANR	61954	PtrMemberAccess	dbg -> size		61732	0					
ANR	61955	Identifier	dbg		61732	0					
ANR	61956	Identifier	size		61732	1					
ANR	61957	PrimaryExpression	0		61732	1					
ANR	61958	Condition	0	1260:11:37537:37537	61732	1	True				
ANR	61959	PrimaryExpression	0		61732	0					
ANR	61960	ExpressionStatement	p = ( zend_mm_free_slot * ) ( ( char * ) p + bin_data_size [ bin_num ] )	1262:2:37550:37609	61732	3	True				
ANR	61961	AssignmentExpression	p = ( zend_mm_free_slot * ) ( ( char * ) p + bin_data_size [ bin_num ] )		61732	0		=			
ANR	61962	Identifier	p		61732	0					
ANR	61963	CastExpression	( zend_mm_free_slot * ) ( ( char * ) p + bin_data_size [ bin_num ] )		61732	1					
ANR	61964	CastTarget	zend_mm_free_slot *		61732	0					
ANR	61965	AdditiveExpression	( char * ) p + bin_data_size [ bin_num ]		61732	1		+			
ANR	61966	CastExpression	( char * ) p		61732	0					
ANR	61967	CastTarget	char *		61732	0					
ANR	61968	Identifier	p		61732	1					
ANR	61969	ArrayIndexing	bin_data_size [ bin_num ]		61732	1					
ANR	61970	Identifier	bin_data_size		61732	0					
ANR	61971	Identifier	bin_num		61732	1					
ANR	61972	Condition	p != end	1263:10:37621:37628	61732	1	True				
ANR	61973	EqualityExpression	p != end		61732	0		!=			
ANR	61974	Identifier	p		61732	0					
ANR	61975	Identifier	end		61732	1					
ANR	61976	ExpressionStatement	p -> next_free_slot = NULL	1266:1:37667:37691	61732	35	True				
ANR	61977	AssignmentExpression	p -> next_free_slot = NULL		61732	0		=			
ANR	61978	PtrMemberAccess	p -> next_free_slot		61732	0					
ANR	61979	Identifier	p		61732	0					
ANR	61980	Identifier	next_free_slot		61732	1					
ANR	61981	Identifier	NULL		61732	1					
ANR	61982	DoStatement	do		61732	36					
ANR	61983	CompoundStatement		46:3:1520:1653	61732	0					
ANR	61984	IdentifierDeclStatement	zend_mm_debug_info * dbg = ( zend_mm_debug_info * ) ( ( char * ) p + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) ) ;	1269:3:37718:37851	61732	0	True				
ANR	61985	IdentifierDecl	* dbg = ( zend_mm_debug_info * ) ( ( char * ) p + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		61732	0					
ANR	61986	IdentifierDeclType	zend_mm_debug_info *		61732	0					
ANR	61987	Identifier	dbg		61732	1					
ANR	61988	AssignmentExpression	* dbg = ( zend_mm_debug_info * ) ( ( char * ) p + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		61732	2		=			
ANR	61989	Identifier	dbg		61732	0					
ANR	61990	CastExpression	( zend_mm_debug_info * ) ( ( char * ) p + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		61732	1					
ANR	61991	CastTarget	zend_mm_debug_info *		61732	0					
ANR	61992	AdditiveExpression	( char * ) p + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		61732	1		+			
ANR	61993	CastExpression	( char * ) p		61732	0					
ANR	61994	CastTarget	char *		61732	0					
ANR	61995	Identifier	p		61732	1					
ANR	61996	AdditiveExpression	bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		61732	1		-			
ANR	61997	ArrayIndexing	bin_data_size [ bin_num ]		61732	0					
ANR	61998	Identifier	bin_data_size		61732	0					
ANR	61999	Identifier	bin_num		61732	1					
ANR	62000	CallExpression	ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		61732	1					
ANR	62001	Callee	ZEND_MM_ALIGNED_SIZE		61732	0					
ANR	62002	Identifier	ZEND_MM_ALIGNED_SIZE		61732	0					
ANR	62003	ArgumentList	sizeof ( zend_mm_debug_info )		61732	1					
ANR	62004	Argument	sizeof ( zend_mm_debug_info )		61732	0					
ANR	62005	SizeofExpression	sizeof ( zend_mm_debug_info )		61732	0					
ANR	62006	Sizeof	sizeof		61732	0					
ANR	62007	SizeofOperand	zend_mm_debug_info		61732	1					
ANR	62008	ExpressionStatement	dbg -> size = 0	1270:3:37856:37869	61732	1	True				
ANR	62009	AssignmentExpression	dbg -> size = 0		61732	0		=			
ANR	62010	PtrMemberAccess	dbg -> size		61732	0					
ANR	62011	Identifier	dbg		61732	0					
ANR	62012	Identifier	size		61732	1					
ANR	62013	PrimaryExpression	0		61732	1					
ANR	62014	Condition	0	1271:11:37882:37882	61732	1	True				
ANR	62015	PrimaryExpression	0		61732	0					
ANR	62016	ReturnStatement	return ( char * ) bin ;	1275:1:37923:37940	61732	37	True				
ANR	62017	CastExpression	( char * ) bin		61732	0					
ANR	62018	CastTarget	char *		61732	0					
ANR	62019	Identifier	bin		61732	1					
ANR	62020	ReturnType	static zend_never_inline void *		61732	1					
ANR	62021	Identifier	zend_mm_alloc_small_slow		61732	2					
ANR	62022	ParameterList	"zend_mm_heap * heap , int bin_num ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC"		61732	3					
ANR	62023	Parameter	zend_mm_heap * heap	1223:56:36123:36140	61732	0	True				
ANR	62024	ParameterType	zend_mm_heap *		61732	0					
ANR	62025	Identifier	heap		61732	1					
ANR	62026	Parameter	int bin_num ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC	1223:76:36143:36194	61732	1	True				
ANR	62027	ParameterType	int bin_num ZEND_FILE_LINE_DC		61732	0					
ANR	62028	Identifier	ZEND_FILE_LINE_ORIG_DC		61732	1					
ANR	62029	CFGEntryNode	ENTRY		61732		True				
ANR	62030	CFGExitNode	EXIT		61732		True				
ANR	62031	Symbol	* * heap		61732						
ANR	62032	Symbol	* heap -> free_slot		61732						
ANR	62033	Symbol	bin_num		61732						
ANR	62034	Symbol	ZEND_MM_NRUN		61732						
ANR	62035	Symbol	bin		61732						
ANR	62036	Symbol	dbg -> size		61732						
ANR	62037	Symbol	chunk		61732						
ANR	62038	Symbol	ZEND_FILE_LINE_ORIG_DC		61732						
ANR	62039	Symbol	UNEXPECTED		61732						
ANR	62040	Symbol	* bin_data_size		61732						
ANR	62041	Symbol	* page_num		61732						
ANR	62042	Symbol	end		61732						
ANR	62043	Symbol	ZEND_MM_CHUNK_SIZE		61732						
ANR	62044	Symbol	heap		61732						
ANR	62045	Symbol	ZEND_MM_ALIGNED_BASE		61732						
ANR	62046	Symbol	ZEND_MM_PAGE_SIZE		61732						
ANR	62047	Symbol	bin_data_size		61732						
ANR	62048	Symbol	* bin_elements		61732						
ANR	62049	Symbol	NULL		61732						
ANR	62050	Symbol	bin_pages		61732						
ANR	62051	Symbol	ZEND_MM_ALIGNED_SIZE		61732						
ANR	62052	Symbol	* * chunk		61732						
ANR	62053	Symbol	ZEND_MM_SRUN		61732						
ANR	62054	Symbol	heap -> free_slot		61732						
ANR	62055	Symbol	dbg		61732						
ANR	62056	Symbol	page_num		61732						
ANR	62057	Symbol	i		61732						
ANR	62058	Symbol	bin_elements		61732						
ANR	62059	Symbol	* dbg		61732						
ANR	62060	Symbol	p		61732						
ANR	62061	Symbol	ZEND_MM_ALIGNED_OFFSET		61732						
ANR	62062	Symbol	* bin_num		61732						
ANR	62063	Symbol	* chunk		61732						
ANR	62064	Symbol	* i		61732						
ANR	62065	Symbol	* bin_pages		61732						
ANR	62066	Symbol	* chunk -> map		61732						
ANR	62067	Symbol	p -> next_free_slot		61732						
ANR	62068	Symbol	* p		61732						
ANR	62069	Symbol	chunk -> map		61732						
ANR	62070	Symbol	* heap		61732						
ANR	62071	Function	zend_mm_alloc_small	1278:0:37945:38550							
ANR	62072	FunctionDef	"zend_mm_alloc_small (zend_mm_heap * heap , size_t size , int bin_num ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC)"		62071	0					
ANR	62073	CompoundStatement		1279:0:38084:38550	62071	0					
ANR	62074	DoStatement	do		62071	0					
ANR	62075	CompoundStatement		5:2:79:114	62071	0					
ANR	62076	IdentifierDeclStatement	size_t size = heap -> size + bin_data_size [ bin_num ] ;	1282:2:38111:38160	62071	0	True				
ANR	62077	IdentifierDecl	size = heap -> size + bin_data_size [ bin_num ]		62071	0					
ANR	62078	IdentifierDeclType	size_t		62071	0					
ANR	62079	Identifier	size		62071	1					
ANR	62080	AssignmentExpression	size = heap -> size + bin_data_size [ bin_num ]		62071	2		=			
ANR	62081	Identifier	size		62071	0					
ANR	62082	AdditiveExpression	heap -> size + bin_data_size [ bin_num ]		62071	1		+			
ANR	62083	PtrMemberAccess	heap -> size		62071	0					
ANR	62084	Identifier	heap		62071	0					
ANR	62085	Identifier	size		62071	1					
ANR	62086	ArrayIndexing	bin_data_size [ bin_num ]		62071	1					
ANR	62087	Identifier	bin_data_size		62071	0					
ANR	62088	Identifier	bin_num		62071	1					
ANR	62089	IdentifierDeclStatement	"size_t peak = MAX ( heap -> peak , size ) ;"	1283:2:38164:38199	62071	1	True				
ANR	62090	IdentifierDecl	"peak = MAX ( heap -> peak , size )"		62071	0					
ANR	62091	IdentifierDeclType	size_t		62071	0					
ANR	62092	Identifier	peak		62071	1					
ANR	62093	AssignmentExpression	"peak = MAX ( heap -> peak , size )"		62071	2		=			
ANR	62094	Identifier	peak		62071	0					
ANR	62095	CallExpression	"MAX ( heap -> peak , size )"		62071	1					
ANR	62096	Callee	MAX		62071	0					
ANR	62097	Identifier	MAX		62071	0					
ANR	62098	ArgumentList	heap -> peak		62071	1					
ANR	62099	Argument	heap -> peak		62071	0					
ANR	62100	PtrMemberAccess	heap -> peak		62071	0					
ANR	62101	Identifier	heap		62071	0					
ANR	62102	Identifier	peak		62071	1					
ANR	62103	Argument	size		62071	1					
ANR	62104	Identifier	size		62071	0					
ANR	62105	ExpressionStatement	heap -> size = size	1284:2:38203:38220	62071	2	True				
ANR	62106	AssignmentExpression	heap -> size = size		62071	0		=			
ANR	62107	PtrMemberAccess	heap -> size		62071	0					
ANR	62108	Identifier	heap		62071	0					
ANR	62109	Identifier	size		62071	1					
ANR	62110	Identifier	size		62071	1					
ANR	62111	ExpressionStatement	heap -> peak = peak	1285:2:38224:38241	62071	3	True				
ANR	62112	AssignmentExpression	heap -> peak = peak		62071	0		=			
ANR	62113	PtrMemberAccess	heap -> peak		62071	0					
ANR	62114	Identifier	heap		62071	0					
ANR	62115	Identifier	peak		62071	1					
ANR	62116	Identifier	peak		62071	1					
ANR	62117	Condition	0	1286:10:38253:38253	62071	1	True				
ANR	62118	PrimaryExpression	0		62071	0					
ANR	62119	IfStatement	if ( EXPECTED ( heap -> free_slot [ bin_num ] != NULL ) )		62071	1					
ANR	62120	Condition	EXPECTED ( heap -> free_slot [ bin_num ] != NULL )	1289:5:38270:38311	62071	0	True				
ANR	62121	CallExpression	EXPECTED ( heap -> free_slot [ bin_num ] != NULL )		62071	0					
ANR	62122	Callee	EXPECTED		62071	0					
ANR	62123	Identifier	EXPECTED		62071	0					
ANR	62124	ArgumentList	heap -> free_slot [ bin_num ] != NULL		62071	1					
ANR	62125	Argument	heap -> free_slot [ bin_num ] != NULL		62071	0					
ANR	62126	EqualityExpression	heap -> free_slot [ bin_num ] != NULL		62071	0		!=			
ANR	62127	ArrayIndexing	heap -> free_slot [ bin_num ]		62071	0					
ANR	62128	PtrMemberAccess	heap -> free_slot		62071	0					
ANR	62129	Identifier	heap		62071	0					
ANR	62130	Identifier	free_slot		62071	1					
ANR	62131	Identifier	bin_num		62071	1					
ANR	62132	Identifier	NULL		62071	1					
ANR	62133	CompoundStatement		12:2:233:280	62071	1					
ANR	62134	IdentifierDeclStatement	zend_mm_free_slot * p = heap -> free_slot [ bin_num ] ;	1290:2:38318:38365	62071	0	True				
ANR	62135	IdentifierDecl	* p = heap -> free_slot [ bin_num ]		62071	0					
ANR	62136	IdentifierDeclType	zend_mm_free_slot *		62071	0					
ANR	62137	Identifier	p		62071	1					
ANR	62138	AssignmentExpression	* p = heap -> free_slot [ bin_num ]		62071	2		=			
ANR	62139	Identifier	p		62071	0					
ANR	62140	ArrayIndexing	heap -> free_slot [ bin_num ]		62071	1					
ANR	62141	PtrMemberAccess	heap -> free_slot		62071	0					
ANR	62142	Identifier	heap		62071	0					
ANR	62143	Identifier	free_slot		62071	1					
ANR	62144	Identifier	bin_num		62071	1					
ANR	62145	ExpressionStatement	heap -> free_slot [ bin_num ] = p -> next_free_slot	1291:2:38369:38413	62071	1	True				
ANR	62146	AssignmentExpression	heap -> free_slot [ bin_num ] = p -> next_free_slot		62071	0		=			
ANR	62147	ArrayIndexing	heap -> free_slot [ bin_num ]		62071	0					
ANR	62148	PtrMemberAccess	heap -> free_slot		62071	0					
ANR	62149	Identifier	heap		62071	0					
ANR	62150	Identifier	free_slot		62071	1					
ANR	62151	Identifier	bin_num		62071	1					
ANR	62152	PtrMemberAccess	p -> next_free_slot		62071	1					
ANR	62153	Identifier	p		62071	0					
ANR	62154	Identifier	next_free_slot		62071	1					
ANR	62155	ReturnStatement	return ( void * ) p ;	1292:2:38417:38432	62071	2	True				
ANR	62156	CastExpression	( void * ) p		62071	0					
ANR	62157	CastTarget	void *		62071	0					
ANR	62158	Identifier	p		62071	1					
ANR	62159	ElseStatement	else		62071	0					
ANR	62160	CompoundStatement		15:8:357:357	62071	0					
ANR	62161	Statement	return	1294:2:38446:38451	62071	0	True				
ANR	62162	Statement	zend_mm_alloc_small_slow	1294:9:38453:38476	62071	1	True				
ANR	62163	Statement	(	1294:33:38477:38477	62071	2	True				
ANR	62164	Statement	heap	1294:34:38478:38481	62071	3	True				
ANR	62165	Statement	","	1294:38:38482:38482	62071	4	True				
ANR	62166	Statement	bin_num	1294:40:38484:38490	62071	5	True				
ANR	62167	Statement	ZEND_FILE_LINE_RELAY_CC	1294:48:38492:38514	62071	6	True				
ANR	62168	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	1294:72:38516:38543	62071	7	True				
ANR	62169	Statement	)	1294:100:38544:38544	62071	8	True				
ANR	62170	ExpressionStatement		1294:101:38545:38545	62071	9	True				
ANR	62171	ReturnType	static zend_always_inline void *		62071	1					
ANR	62172	Identifier	zend_mm_alloc_small		62071	2					
ANR	62173	ParameterList	"zend_mm_heap * heap , size_t size , int bin_num ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC"		62071	3					
ANR	62174	Parameter	zend_mm_heap * heap	1278:52:37997:38014	62071	0	True				
ANR	62175	ParameterType	zend_mm_heap *		62071	0					
ANR	62176	Identifier	heap		62071	1					
ANR	62177	Parameter	size_t size	1278:72:38017:38027	62071	1	True				
ANR	62178	ParameterType	size_t		62071	0					
ANR	62179	Identifier	size		62071	1					
ANR	62180	Parameter	int bin_num ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC	1278:85:38030:38081	62071	2	True				
ANR	62181	ParameterType	int bin_num ZEND_FILE_LINE_DC		62071	0					
ANR	62182	Identifier	ZEND_FILE_LINE_ORIG_DC		62071	1					
ANR	62183	CFGEntryNode	ENTRY		62071		True				
ANR	62184	CFGExitNode	EXIT		62071		True				
ANR	62185	Symbol	* * heap		62071						
ANR	62186	Symbol	* heap -> free_slot		62071						
ANR	62187	Symbol	NULL		62071						
ANR	62188	Symbol	bin_num		62071						
ANR	62189	Symbol	MAX		62071						
ANR	62190	Symbol	heap -> free_slot		62071						
ANR	62191	Symbol	ZEND_FILE_LINE_ORIG_DC		62071						
ANR	62192	Symbol	peak		62071						
ANR	62193	Symbol	p		62071						
ANR	62194	Symbol	heap -> size		62071						
ANR	62195	Symbol	heap -> peak		62071						
ANR	62196	Symbol	* bin_data_size		62071						
ANR	62197	Symbol	* bin_num		62071						
ANR	62198	Symbol	size		62071						
ANR	62199	Symbol	p -> next_free_slot		62071						
ANR	62200	Symbol	* p		62071						
ANR	62201	Symbol	heap		62071						
ANR	62202	Symbol	* heap		62071						
ANR	62203	Symbol	EXPECTED		62071						
ANR	62204	Symbol	bin_data_size		62071						
ANR	62205	Function	zend_mm_free_small	1298:0:38553:39053							
ANR	62206	FunctionDef	"zend_mm_free_small (zend_mm_heap * heap , void * ptr , int bin_num)"		62205	0					
ANR	62207	CompoundStatement		1299:0:38647:39053	62205	0					
ANR	62208	IdentifierDeclStatement	zend_mm_free_slot * p ;	1300:1:38650:38670	62205	0	True				
ANR	62209	IdentifierDecl	* p		62205	0					
ANR	62210	IdentifierDeclType	zend_mm_free_slot *		62205	0					
ANR	62211	Identifier	p		62205	1					
ANR	62212	ExpressionStatement	heap -> size -= bin_data_size [ bin_num ]	1303:1:38691:38727	62205	1	True				
ANR	62213	AssignmentExpression	heap -> size -= bin_data_size [ bin_num ]		62205	0		-=			
ANR	62214	PtrMemberAccess	heap -> size		62205	0					
ANR	62215	Identifier	heap		62205	0					
ANR	62216	Identifier	size		62205	1					
ANR	62217	ArrayIndexing	bin_data_size [ bin_num ]		62205	1					
ANR	62218	Identifier	bin_data_size		62205	0					
ANR	62219	Identifier	bin_num		62205	1					
ANR	62220	DoStatement	do		62205	2					
ANR	62221	CompoundStatement		10:2:112:247	62205	0					
ANR	62222	IdentifierDeclStatement	zend_mm_debug_info * dbg = ( zend_mm_debug_info * ) ( ( char * ) ptr + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) ) ;	1308:2:38760:38895	62205	0	True				
ANR	62223	IdentifierDecl	* dbg = ( zend_mm_debug_info * ) ( ( char * ) ptr + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		62205	0					
ANR	62224	IdentifierDeclType	zend_mm_debug_info *		62205	0					
ANR	62225	Identifier	dbg		62205	1					
ANR	62226	AssignmentExpression	* dbg = ( zend_mm_debug_info * ) ( ( char * ) ptr + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		62205	2		=			
ANR	62227	Identifier	dbg		62205	0					
ANR	62228	CastExpression	( zend_mm_debug_info * ) ( ( char * ) ptr + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		62205	1					
ANR	62229	CastTarget	zend_mm_debug_info *		62205	0					
ANR	62230	AdditiveExpression	( char * ) ptr + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		62205	1		+			
ANR	62231	CastExpression	( char * ) ptr		62205	0					
ANR	62232	CastTarget	char *		62205	0					
ANR	62233	Identifier	ptr		62205	1					
ANR	62234	AdditiveExpression	bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		62205	1		-			
ANR	62235	ArrayIndexing	bin_data_size [ bin_num ]		62205	0					
ANR	62236	Identifier	bin_data_size		62205	0					
ANR	62237	Identifier	bin_num		62205	1					
ANR	62238	CallExpression	ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		62205	1					
ANR	62239	Callee	ZEND_MM_ALIGNED_SIZE		62205	0					
ANR	62240	Identifier	ZEND_MM_ALIGNED_SIZE		62205	0					
ANR	62241	ArgumentList	sizeof ( zend_mm_debug_info )		62205	1					
ANR	62242	Argument	sizeof ( zend_mm_debug_info )		62205	0					
ANR	62243	SizeofExpression	sizeof ( zend_mm_debug_info )		62205	0					
ANR	62244	Sizeof	sizeof		62205	0					
ANR	62245	SizeofOperand	zend_mm_debug_info		62205	1					
ANR	62246	ExpressionStatement	dbg -> size = 0	1309:2:38899:38912	62205	1	True				
ANR	62247	AssignmentExpression	dbg -> size = 0		62205	0		=			
ANR	62248	PtrMemberAccess	dbg -> size		62205	0					
ANR	62249	Identifier	dbg		62205	0					
ANR	62250	Identifier	size		62205	1					
ANR	62251	PrimaryExpression	0		62205	1					
ANR	62252	Condition	0	1310:10:38924:38924	62205	1	True				
ANR	62253	PrimaryExpression	0		62205	0					
ANR	62254	ExpressionStatement	p = ( zend_mm_free_slot * ) ptr	1313:4:38940:38967	62205	3	True				
ANR	62255	AssignmentExpression	p = ( zend_mm_free_slot * ) ptr		62205	0		=			
ANR	62256	Identifier	p		62205	0					
ANR	62257	CastExpression	( zend_mm_free_slot * ) ptr		62205	1					
ANR	62258	CastTarget	zend_mm_free_slot *		62205	0					
ANR	62259	Identifier	ptr		62205	1					
ANR	62260	ExpressionStatement	p -> next_free_slot = heap -> free_slot [ bin_num ]	1314:4:38973:39017	62205	4	True				
ANR	62261	AssignmentExpression	p -> next_free_slot = heap -> free_slot [ bin_num ]		62205	0		=			
ANR	62262	PtrMemberAccess	p -> next_free_slot		62205	0					
ANR	62263	Identifier	p		62205	0					
ANR	62264	Identifier	next_free_slot		62205	1					
ANR	62265	ArrayIndexing	heap -> free_slot [ bin_num ]		62205	1					
ANR	62266	PtrMemberAccess	heap -> free_slot		62205	0					
ANR	62267	Identifier	heap		62205	0					
ANR	62268	Identifier	free_slot		62205	1					
ANR	62269	Identifier	bin_num		62205	1					
ANR	62270	ExpressionStatement	heap -> free_slot [ bin_num ] = p	1315:4:39023:39051	62205	5	True				
ANR	62271	AssignmentExpression	heap -> free_slot [ bin_num ] = p		62205	0		=			
ANR	62272	ArrayIndexing	heap -> free_slot [ bin_num ]		62205	0					
ANR	62273	PtrMemberAccess	heap -> free_slot		62205	0					
ANR	62274	Identifier	heap		62205	0					
ANR	62275	Identifier	free_slot		62205	1					
ANR	62276	Identifier	bin_num		62205	1					
ANR	62277	Identifier	p		62205	1					
ANR	62278	ReturnType	static zend_always_inline void		62205	1					
ANR	62279	Identifier	zend_mm_free_small		62205	2					
ANR	62280	ParameterList	"zend_mm_heap * heap , void * ptr , int bin_num"		62205	3					
ANR	62281	Parameter	zend_mm_heap * heap	1298:50:38603:38620	62205	0	True				
ANR	62282	ParameterType	zend_mm_heap *		62205	0					
ANR	62283	Identifier	heap		62205	1					
ANR	62284	Parameter	void * ptr	1298:70:38623:38631	62205	1	True				
ANR	62285	ParameterType	void *		62205	0					
ANR	62286	Identifier	ptr		62205	1					
ANR	62287	Parameter	int bin_num	1298:81:38634:38644	62205	2	True				
ANR	62288	ParameterType	int		62205	0					
ANR	62289	Identifier	bin_num		62205	1					
ANR	62290	CFGEntryNode	ENTRY		62205		True				
ANR	62291	CFGExitNode	EXIT		62205		True				
ANR	62292	Symbol	* heap -> free_slot		62205						
ANR	62293	Symbol	* * heap		62205						
ANR	62294	Symbol	bin_num		62205						
ANR	62295	Symbol	ZEND_MM_ALIGNED_SIZE		62205						
ANR	62296	Symbol	dbg -> size		62205						
ANR	62297	Symbol	heap -> free_slot		62205						
ANR	62298	Symbol	dbg		62205						
ANR	62299	Symbol	* dbg		62205						
ANR	62300	Symbol	ptr		62205						
ANR	62301	Symbol	p		62205						
ANR	62302	Symbol	heap -> size		62205						
ANR	62303	Symbol	* bin_data_size		62205						
ANR	62304	Symbol	* bin_num		62205						
ANR	62305	Symbol	p -> next_free_slot		62205						
ANR	62306	Symbol	* p		62205						
ANR	62307	Symbol	heap		62205						
ANR	62308	Symbol	* heap		62205						
ANR	62309	Symbol	bin_data_size		62205						
ANR	62310	Function	zend_mm_get_debug_info	1323:0:39105:40047							
ANR	62311	FunctionDef	"zend_mm_get_debug_info (zend_mm_heap * heap , void * ptr)"		62310	0					
ANR	62312	CompoundStatement		1324:0:39205:40047	62310	0					
ANR	62313	IdentifierDeclStatement	"size_t page_offset = ZEND_MM_ALIGNED_OFFSET ( ptr , ZEND_MM_CHUNK_SIZE ) ;"	1325:1:39208:39276	62310	0	True				
ANR	62314	IdentifierDecl	"page_offset = ZEND_MM_ALIGNED_OFFSET ( ptr , ZEND_MM_CHUNK_SIZE )"		62310	0					
ANR	62315	IdentifierDeclType	size_t		62310	0					
ANR	62316	Identifier	page_offset		62310	1					
ANR	62317	AssignmentExpression	"page_offset = ZEND_MM_ALIGNED_OFFSET ( ptr , ZEND_MM_CHUNK_SIZE )"		62310	2		=			
ANR	62318	Identifier	page_offset		62310	0					
ANR	62319	CallExpression	"ZEND_MM_ALIGNED_OFFSET ( ptr , ZEND_MM_CHUNK_SIZE )"		62310	1					
ANR	62320	Callee	ZEND_MM_ALIGNED_OFFSET		62310	0					
ANR	62321	Identifier	ZEND_MM_ALIGNED_OFFSET		62310	0					
ANR	62322	ArgumentList	ptr		62310	1					
ANR	62323	Argument	ptr		62310	0					
ANR	62324	Identifier	ptr		62310	0					
ANR	62325	Argument	ZEND_MM_CHUNK_SIZE		62310	1					
ANR	62326	Identifier	ZEND_MM_CHUNK_SIZE		62310	0					
ANR	62327	IdentifierDeclStatement	zend_mm_chunk * chunk ;	1326:1:39279:39299	62310	1	True				
ANR	62328	IdentifierDecl	* chunk		62310	0					
ANR	62329	IdentifierDeclType	zend_mm_chunk *		62310	0					
ANR	62330	Identifier	chunk		62310	1					
ANR	62331	IdentifierDeclStatement	int page_num ;	1327:1:39302:39314	62310	2	True				
ANR	62332	IdentifierDecl	page_num		62310	0					
ANR	62333	IdentifierDeclType	int		62310	0					
ANR	62334	Identifier	page_num		62310	1					
ANR	62335	IdentifierDeclStatement	zend_mm_page_info info ;	1328:1:39317:39339	62310	3	True				
ANR	62336	IdentifierDecl	info		62310	0					
ANR	62337	IdentifierDeclType	zend_mm_page_info		62310	0					
ANR	62338	Identifier	info		62310	1					
ANR	62339	ExpressionStatement	"ZEND_MM_CHECK ( page_offset != 0 , ""zend_mm_heap corrupted"" )"	1330:1:39343:39400	62310	4	True				
ANR	62340	CallExpression	"ZEND_MM_CHECK ( page_offset != 0 , ""zend_mm_heap corrupted"" )"		62310	0					
ANR	62341	Callee	ZEND_MM_CHECK		62310	0					
ANR	62342	Identifier	ZEND_MM_CHECK		62310	0					
ANR	62343	ArgumentList	page_offset != 0		62310	1					
ANR	62344	Argument	page_offset != 0		62310	0					
ANR	62345	EqualityExpression	page_offset != 0		62310	0		!=			
ANR	62346	Identifier	page_offset		62310	0					
ANR	62347	PrimaryExpression	0		62310	1					
ANR	62348	Argument	"""zend_mm_heap corrupted"""		62310	1					
ANR	62349	PrimaryExpression	"""zend_mm_heap corrupted"""		62310	0					
ANR	62350	ExpressionStatement	"chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"	1331:1:39403:39472	62310	5	True				
ANR	62351	AssignmentExpression	"chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"		62310	0		=			
ANR	62352	Identifier	chunk		62310	0					
ANR	62353	CastExpression	"( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"		62310	1					
ANR	62354	CastTarget	zend_mm_chunk *		62310	0					
ANR	62355	CallExpression	"ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"		62310	1					
ANR	62356	Callee	ZEND_MM_ALIGNED_BASE		62310	0					
ANR	62357	Identifier	ZEND_MM_ALIGNED_BASE		62310	0					
ANR	62358	ArgumentList	ptr		62310	1					
ANR	62359	Argument	ptr		62310	0					
ANR	62360	Identifier	ptr		62310	0					
ANR	62361	Argument	ZEND_MM_CHUNK_SIZE		62310	1					
ANR	62362	Identifier	ZEND_MM_CHUNK_SIZE		62310	0					
ANR	62363	ExpressionStatement	page_num = ( int ) ( page_offset / ZEND_MM_PAGE_SIZE )	1332:1:39475:39524	62310	6	True				
ANR	62364	AssignmentExpression	page_num = ( int ) ( page_offset / ZEND_MM_PAGE_SIZE )		62310	0		=			
ANR	62365	Identifier	page_num		62310	0					
ANR	62366	CastExpression	( int ) ( page_offset / ZEND_MM_PAGE_SIZE )		62310	1					
ANR	62367	CastTarget	int		62310	0					
ANR	62368	MultiplicativeExpression	page_offset / ZEND_MM_PAGE_SIZE		62310	1		/			
ANR	62369	Identifier	page_offset		62310	0					
ANR	62370	Identifier	ZEND_MM_PAGE_SIZE		62310	1					
ANR	62371	ExpressionStatement	info = chunk -> map [ page_num ]	1333:1:39527:39554	62310	7	True				
ANR	62372	AssignmentExpression	info = chunk -> map [ page_num ]		62310	0		=			
ANR	62373	Identifier	info		62310	0					
ANR	62374	ArrayIndexing	chunk -> map [ page_num ]		62310	1					
ANR	62375	PtrMemberAccess	chunk -> map		62310	0					
ANR	62376	Identifier	chunk		62310	0					
ANR	62377	Identifier	map		62310	1					
ANR	62378	Identifier	page_num		62310	1					
ANR	62379	ExpressionStatement	"ZEND_MM_CHECK ( chunk -> heap == heap , ""zend_mm_heap corrupted"" )"	1334:1:39557:39617	62310	8	True				
ANR	62380	CallExpression	"ZEND_MM_CHECK ( chunk -> heap == heap , ""zend_mm_heap corrupted"" )"		62310	0					
ANR	62381	Callee	ZEND_MM_CHECK		62310	0					
ANR	62382	Identifier	ZEND_MM_CHECK		62310	0					
ANR	62383	ArgumentList	chunk -> heap == heap		62310	1					
ANR	62384	Argument	chunk -> heap == heap		62310	0					
ANR	62385	EqualityExpression	chunk -> heap == heap		62310	0		==			
ANR	62386	PtrMemberAccess	chunk -> heap		62310	0					
ANR	62387	Identifier	chunk		62310	0					
ANR	62388	Identifier	heap		62310	1					
ANR	62389	Identifier	heap		62310	1					
ANR	62390	Argument	"""zend_mm_heap corrupted"""		62310	1					
ANR	62391	PrimaryExpression	"""zend_mm_heap corrupted"""		62310	0					
ANR	62392	IfStatement	if ( EXPECTED ( info & ZEND_MM_IS_SRUN ) )		62310	9					
ANR	62393	Condition	EXPECTED ( info & ZEND_MM_IS_SRUN )	1335:5:39624:39655	62310	0	True				
ANR	62394	CallExpression	EXPECTED ( info & ZEND_MM_IS_SRUN )		62310	0					
ANR	62395	Callee	EXPECTED		62310	0					
ANR	62396	Identifier	EXPECTED		62310	0					
ANR	62397	ArgumentList	info & ZEND_MM_IS_SRUN		62310	1					
ANR	62398	Argument	info & ZEND_MM_IS_SRUN		62310	0					
ANR	62399	BitAndExpression	info & ZEND_MM_IS_SRUN		62310	0		&			
ANR	62400	Identifier	info		62310	0					
ANR	62401	Identifier	ZEND_MM_IS_SRUN		62310	1					
ANR	62402	CompoundStatement		13:2:456:496	62310	1					
ANR	62403	IdentifierDeclStatement	int bin_num = ZEND_MM_SRUN_BIN_NUM ( info ) ;	1336:2:39662:39702	62310	0	True				
ANR	62404	IdentifierDecl	bin_num = ZEND_MM_SRUN_BIN_NUM ( info )		62310	0					
ANR	62405	IdentifierDeclType	int		62310	0					
ANR	62406	Identifier	bin_num		62310	1					
ANR	62407	AssignmentExpression	bin_num = ZEND_MM_SRUN_BIN_NUM ( info )		62310	2		=			
ANR	62408	Identifier	bin_num		62310	0					
ANR	62409	CallExpression	ZEND_MM_SRUN_BIN_NUM ( info )		62310	1					
ANR	62410	Callee	ZEND_MM_SRUN_BIN_NUM		62310	0					
ANR	62411	Identifier	ZEND_MM_SRUN_BIN_NUM		62310	0					
ANR	62412	ArgumentList	info		62310	1					
ANR	62413	Argument	info		62310	0					
ANR	62414	Identifier	info		62310	0					
ANR	62415	ReturnStatement	return ( zend_mm_debug_info * ) ( ( char * ) ptr + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) ) ;	1337:2:39706:39822	62310	1	True				
ANR	62416	CastExpression	( zend_mm_debug_info * ) ( ( char * ) ptr + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		62310	0					
ANR	62417	CastTarget	zend_mm_debug_info *		62310	0					
ANR	62418	AdditiveExpression	( char * ) ptr + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		62310	1		+			
ANR	62419	CastExpression	( char * ) ptr		62310	0					
ANR	62420	CastTarget	char *		62310	0					
ANR	62421	Identifier	ptr		62310	1					
ANR	62422	AdditiveExpression	bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		62310	1		-			
ANR	62423	ArrayIndexing	bin_data_size [ bin_num ]		62310	0					
ANR	62424	Identifier	bin_data_size		62310	0					
ANR	62425	Identifier	bin_num		62310	1					
ANR	62426	CallExpression	ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		62310	1					
ANR	62427	Callee	ZEND_MM_ALIGNED_SIZE		62310	0					
ANR	62428	Identifier	ZEND_MM_ALIGNED_SIZE		62310	0					
ANR	62429	ArgumentList	sizeof ( zend_mm_debug_info )		62310	1					
ANR	62430	Argument	sizeof ( zend_mm_debug_info )		62310	0					
ANR	62431	SizeofExpression	sizeof ( zend_mm_debug_info )		62310	0					
ANR	62432	Sizeof	sizeof		62310	0					
ANR	62433	SizeofOperand	zend_mm_debug_info		62310	1					
ANR	62434	ElseStatement	else		62310	0					
ANR	62435	CompoundStatement		16:2:664:706	62310	0					
ANR	62436	IdentifierDeclStatement	int pages_count = ZEND_MM_LRUN_PAGES ( info ) ;	1339:2:39870:39912	62310	0	True				
ANR	62437	IdentifierDecl	pages_count = ZEND_MM_LRUN_PAGES ( info )		62310	0					
ANR	62438	IdentifierDeclType	int		62310	0					
ANR	62439	Identifier	pages_count		62310	1					
ANR	62440	AssignmentExpression	pages_count = ZEND_MM_LRUN_PAGES ( info )		62310	2		=			
ANR	62441	Identifier	pages_count		62310	0					
ANR	62442	CallExpression	ZEND_MM_LRUN_PAGES ( info )		62310	1					
ANR	62443	Callee	ZEND_MM_LRUN_PAGES		62310	0					
ANR	62444	Identifier	ZEND_MM_LRUN_PAGES		62310	0					
ANR	62445	ArgumentList	info		62310	1					
ANR	62446	Argument	info		62310	0					
ANR	62447	Identifier	info		62310	0					
ANR	62448	ReturnStatement	return ( zend_mm_debug_info * ) ( ( char * ) ptr + ZEND_MM_PAGE_SIZE * pages_count - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) ) ;	1341:2:39917:40042	62310	1	True				
ANR	62449	CastExpression	( zend_mm_debug_info * ) ( ( char * ) ptr + ZEND_MM_PAGE_SIZE * pages_count - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		62310	0					
ANR	62450	CastTarget	zend_mm_debug_info *		62310	0					
ANR	62451	AdditiveExpression	( char * ) ptr + ZEND_MM_PAGE_SIZE * pages_count - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		62310	1		+			
ANR	62452	CastExpression	( char * ) ptr		62310	0					
ANR	62453	CastTarget	char *		62310	0					
ANR	62454	Identifier	ptr		62310	1					
ANR	62455	AdditiveExpression	ZEND_MM_PAGE_SIZE * pages_count - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		62310	1		-			
ANR	62456	MultiplicativeExpression	ZEND_MM_PAGE_SIZE * pages_count		62310	0		*			
ANR	62457	Identifier	ZEND_MM_PAGE_SIZE		62310	0					
ANR	62458	Identifier	pages_count		62310	1					
ANR	62459	CallExpression	ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		62310	1					
ANR	62460	Callee	ZEND_MM_ALIGNED_SIZE		62310	0					
ANR	62461	Identifier	ZEND_MM_ALIGNED_SIZE		62310	0					
ANR	62462	ArgumentList	sizeof ( zend_mm_debug_info )		62310	1					
ANR	62463	Argument	sizeof ( zend_mm_debug_info )		62310	0					
ANR	62464	SizeofExpression	sizeof ( zend_mm_debug_info )		62310	0					
ANR	62465	Sizeof	sizeof		62310	0					
ANR	62466	SizeofOperand	zend_mm_debug_info		62310	1					
ANR	62467	ReturnType	static zend_always_inline zend_mm_debug_info *		62310	1					
ANR	62468	Identifier	zend_mm_get_debug_info		62310	2					
ANR	62469	ParameterList	"zend_mm_heap * heap , void * ptr"		62310	3					
ANR	62470	Parameter	zend_mm_heap * heap	1323:69:39174:39191	62310	0	True				
ANR	62471	ParameterType	zend_mm_heap *		62310	0					
ANR	62472	Identifier	heap		62310	1					
ANR	62473	Parameter	void * ptr	1323:89:39194:39202	62310	1	True				
ANR	62474	ParameterType	void *		62310	0					
ANR	62475	Identifier	ptr		62310	1					
ANR	62476	CFGEntryNode	ENTRY		62310		True				
ANR	62477	CFGExitNode	EXIT		62310		True				
ANR	62478	Symbol	bin_num		62310						
ANR	62479	Symbol	chunk		62310						
ANR	62480	Symbol	ZEND_MM_SRUN_BIN_NUM		62310						
ANR	62481	Symbol	* bin_data_size		62310						
ANR	62482	Symbol	* page_num		62310						
ANR	62483	Symbol	ZEND_MM_CHUNK_SIZE		62310						
ANR	62484	Symbol	heap		62310						
ANR	62485	Symbol	ZEND_MM_ALIGNED_BASE		62310						
ANR	62486	Symbol	info		62310						
ANR	62487	Symbol	ZEND_MM_PAGE_SIZE		62310						
ANR	62488	Symbol	bin_data_size		62310						
ANR	62489	Symbol	ZEND_MM_ALIGNED_SIZE		62310						
ANR	62490	Symbol	* * chunk		62310						
ANR	62491	Symbol	pages_count		62310						
ANR	62492	Symbol	ZEND_MM_IS_SRUN		62310						
ANR	62493	Symbol	page_num		62310						
ANR	62494	Symbol	page_offset		62310						
ANR	62495	Symbol	chunk -> heap		62310						
ANR	62496	Symbol	ptr		62310						
ANR	62497	Symbol	ZEND_MM_LRUN_PAGES		62310						
ANR	62498	Symbol	ZEND_MM_ALIGNED_OFFSET		62310						
ANR	62499	Symbol	* bin_num		62310						
ANR	62500	Symbol	* chunk		62310						
ANR	62501	Symbol	* chunk -> map		62310						
ANR	62502	Symbol	chunk -> map		62310						
ANR	62503	Symbol	EXPECTED		62310						
ANR	62504	Function	zend_mm_alloc_heap	1346:0:40057:41396							
ANR	62505	FunctionDef	"zend_mm_alloc_heap (zend_mm_heap * heap , size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC)"		62504	0					
ANR	62506	CompoundStatement		1347:0:40182:41396	62504	0					
ANR	62507	IdentifierDeclStatement	void * ptr ;	1348:1:40185:40194	62504	0	True				
ANR	62508	IdentifierDecl	* ptr		62504	0					
ANR	62509	IdentifierDeclType	void *		62504	0					
ANR	62510	Identifier	ptr		62504	1					
ANR	62511	IdentifierDeclStatement	size_t real_size = size ;	1350:1:40212:40235	62504	1	True				
ANR	62512	IdentifierDecl	real_size = size		62504	0					
ANR	62513	IdentifierDeclType	size_t		62504	0					
ANR	62514	Identifier	real_size		62504	1					
ANR	62515	AssignmentExpression	real_size = size		62504	2		=			
ANR	62516	Identifier	size		62504	0					
ANR	62517	Identifier	size		62504	1					
ANR	62518	IdentifierDeclStatement	zend_mm_debug_info * dbg ;	1351:1:40238:40261	62504	2	True				
ANR	62519	IdentifierDecl	* dbg		62504	0					
ANR	62520	IdentifierDeclType	zend_mm_debug_info *		62504	0					
ANR	62521	Identifier	dbg		62504	1					
ANR	62522	ExpressionStatement	"size = MAX ( size , 1 )"	1354:1:40314:40333	62504	3	True				
ANR	62523	AssignmentExpression	"size = MAX ( size , 1 )"		62504	0		=			
ANR	62524	Identifier	size		62504	0					
ANR	62525	CallExpression	"MAX ( size , 1 )"		62504	1					
ANR	62526	Callee	MAX		62504	0					
ANR	62527	Identifier	MAX		62504	0					
ANR	62528	ArgumentList	size		62504	1					
ANR	62529	Argument	size		62504	0					
ANR	62530	Identifier	size		62504	0					
ANR	62531	Argument	1		62504	1					
ANR	62532	PrimaryExpression	1		62504	0					
ANR	62533	ExpressionStatement	size = ZEND_MM_ALIGNED_SIZE ( size ) + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )	1355:1:40336:40420	62504	4	True				
ANR	62534	AssignmentExpression	size = ZEND_MM_ALIGNED_SIZE ( size ) + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		62504	0		=			
ANR	62535	Identifier	size		62504	0					
ANR	62536	AdditiveExpression	ZEND_MM_ALIGNED_SIZE ( size ) + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		62504	1		+			
ANR	62537	CallExpression	ZEND_MM_ALIGNED_SIZE ( size )		62504	0					
ANR	62538	Callee	ZEND_MM_ALIGNED_SIZE		62504	0					
ANR	62539	Identifier	ZEND_MM_ALIGNED_SIZE		62504	0					
ANR	62540	ArgumentList	size		62504	1					
ANR	62541	Argument	size		62504	0					
ANR	62542	Identifier	size		62504	0					
ANR	62543	CallExpression	ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		62504	1					
ANR	62544	Callee	ZEND_MM_ALIGNED_SIZE		62504	0					
ANR	62545	Identifier	ZEND_MM_ALIGNED_SIZE		62504	0					
ANR	62546	ArgumentList	sizeof ( zend_mm_debug_info )		62504	1					
ANR	62547	Argument	sizeof ( zend_mm_debug_info )		62504	0					
ANR	62548	SizeofExpression	sizeof ( zend_mm_debug_info )		62504	0					
ANR	62549	Sizeof	sizeof		62504	0					
ANR	62550	SizeofOperand	zend_mm_debug_info		62504	1					
ANR	62551	IfStatement	if ( size <= ZEND_MM_MAX_SMALL_SIZE )		62504	5					
ANR	62552	Condition	size <= ZEND_MM_MAX_SMALL_SIZE	1357:5:40434:40463	62504	0	True				
ANR	62553	RelationalExpression	size <= ZEND_MM_MAX_SMALL_SIZE		62504	0		<=			
ANR	62554	Identifier	size		62504	0					
ANR	62555	Identifier	ZEND_MM_MAX_SMALL_SIZE		62504	1					
ANR	62556	CompoundStatement		11:37:283:283	62504	1					
ANR	62557	Statement	ptr	1358:2:40470:40472	62504	0	True				
ANR	62558	Statement	=	1358:6:40474:40474	62504	1	True				
ANR	62559	Statement	zend_mm_alloc_small	1358:8:40476:40494	62504	2	True				
ANR	62560	Statement	(	1358:27:40495:40495	62504	3	True				
ANR	62561	Statement	heap	1358:28:40496:40499	62504	4	True				
ANR	62562	Statement	","	1358:32:40500:40500	62504	5	True				
ANR	62563	Statement	size	1358:34:40502:40505	62504	6	True				
ANR	62564	Statement	","	1358:38:40506:40506	62504	7	True				
ANR	62565	Statement	ZEND_MM_SMALL_SIZE_TO_BIN	1358:40:40508:40532	62504	8	True				
ANR	62566	Statement	(	1358:65:40533:40533	62504	9	True				
ANR	62567	Statement	size	1358:66:40534:40537	62504	10	True				
ANR	62568	Statement	)	1358:70:40538:40538	62504	11	True				
ANR	62569	Statement	ZEND_FILE_LINE_RELAY_CC	1358:72:40540:40562	62504	12	True				
ANR	62570	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	1358:96:40564:40591	62504	13	True				
ANR	62571	Statement	)	1358:124:40592:40592	62504	14	True				
ANR	62572	ExpressionStatement		1358:125:40593:40593	62504	15	True				
ANR	62573	ExpressionStatement	"dbg = zend_mm_get_debug_info ( heap , ptr )"	1360:2:40612:40651	62504	16	True				
ANR	62574	AssignmentExpression	"dbg = zend_mm_get_debug_info ( heap , ptr )"		62504	0		=			
ANR	62575	Identifier	dbg		62504	0					
ANR	62576	CallExpression	"zend_mm_get_debug_info ( heap , ptr )"		62504	1					
ANR	62577	Callee	zend_mm_get_debug_info		62504	0					
ANR	62578	Identifier	zend_mm_get_debug_info		62504	0					
ANR	62579	ArgumentList	heap		62504	1					
ANR	62580	Argument	heap		62504	0					
ANR	62581	Identifier	heap		62504	0					
ANR	62582	Argument	ptr		62504	1					
ANR	62583	Identifier	ptr		62504	0					
ANR	62584	ExpressionStatement	dbg -> size = real_size	1361:2:40655:40676	62504	17	True				
ANR	62585	AssignmentExpression	dbg -> size = real_size		62504	0		=			
ANR	62586	PtrMemberAccess	dbg -> size		62504	0					
ANR	62587	Identifier	dbg		62504	0					
ANR	62588	Identifier	size		62504	1					
ANR	62589	Identifier	real_size		62504	1					
ANR	62590	ExpressionStatement	dbg -> filename = __zend_filename	1362:2:40680:40711	62504	18	True				
ANR	62591	AssignmentExpression	dbg -> filename = __zend_filename		62504	0		=			
ANR	62592	PtrMemberAccess	dbg -> filename		62504	0					
ANR	62593	Identifier	dbg		62504	0					
ANR	62594	Identifier	filename		62504	1					
ANR	62595	Identifier	__zend_filename		62504	1					
ANR	62596	ExpressionStatement	dbg -> orig_filename = __zend_orig_filename	1363:2:40715:40756	62504	19	True				
ANR	62597	AssignmentExpression	dbg -> orig_filename = __zend_orig_filename		62504	0		=			
ANR	62598	PtrMemberAccess	dbg -> orig_filename		62504	0					
ANR	62599	Identifier	dbg		62504	0					
ANR	62600	Identifier	orig_filename		62504	1					
ANR	62601	Identifier	__zend_orig_filename		62504	1					
ANR	62602	ExpressionStatement	dbg -> lineno = __zend_lineno	1364:2:40760:40787	62504	20	True				
ANR	62603	AssignmentExpression	dbg -> lineno = __zend_lineno		62504	0		=			
ANR	62604	PtrMemberAccess	dbg -> lineno		62504	0					
ANR	62605	Identifier	dbg		62504	0					
ANR	62606	Identifier	lineno		62504	1					
ANR	62607	Identifier	__zend_lineno		62504	1					
ANR	62608	ExpressionStatement	dbg -> orig_lineno = __zend_orig_lineno	1365:2:40791:40828	62504	21	True				
ANR	62609	AssignmentExpression	dbg -> orig_lineno = __zend_orig_lineno		62504	0		=			
ANR	62610	PtrMemberAccess	dbg -> orig_lineno		62504	0					
ANR	62611	Identifier	dbg		62504	0					
ANR	62612	Identifier	orig_lineno		62504	1					
ANR	62613	Identifier	__zend_orig_lineno		62504	1					
ANR	62614	ReturnStatement	return ptr ;	1367:2:40839:40849	62504	22	True				
ANR	62615	Identifier	ptr		62504	0					
ANR	62616	ElseStatement	else		62504	0					
ANR	62617	IfStatement	if ( size <= ZEND_MM_MAX_LARGE_SIZE )		62504	0					
ANR	62618	Condition	size <= ZEND_MM_MAX_LARGE_SIZE	1368:12:40863:40892	62504	0	True				
ANR	62619	RelationalExpression	size <= ZEND_MM_MAX_LARGE_SIZE		62504	0		<=			
ANR	62620	Identifier	size		62504	0					
ANR	62621	Identifier	ZEND_MM_MAX_LARGE_SIZE		62504	1					
ANR	62622	CompoundStatement		22:44:712:712	62504	1					
ANR	62623	Statement	ptr	1369:2:40899:40901	62504	0	True				
ANR	62624	Statement	=	1369:6:40903:40903	62504	1	True				
ANR	62625	Statement	zend_mm_alloc_large	1369:8:40905:40923	62504	2	True				
ANR	62626	Statement	(	1369:27:40924:40924	62504	3	True				
ANR	62627	Statement	heap	1369:28:40925:40928	62504	4	True				
ANR	62628	Statement	","	1369:32:40929:40929	62504	5	True				
ANR	62629	Statement	size	1369:34:40931:40934	62504	6	True				
ANR	62630	Statement	ZEND_FILE_LINE_RELAY_CC	1369:39:40936:40958	62504	7	True				
ANR	62631	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	1369:63:40960:40987	62504	8	True				
ANR	62632	Statement	)	1369:91:40988:40988	62504	9	True				
ANR	62633	ExpressionStatement		1369:92:40989:40989	62504	10	True				
ANR	62634	ExpressionStatement	"dbg = zend_mm_get_debug_info ( heap , ptr )"	1371:2:41008:41047	62504	11	True				
ANR	62635	AssignmentExpression	"dbg = zend_mm_get_debug_info ( heap , ptr )"		62504	0		=			
ANR	62636	Identifier	dbg		62504	0					
ANR	62637	CallExpression	"zend_mm_get_debug_info ( heap , ptr )"		62504	1					
ANR	62638	Callee	zend_mm_get_debug_info		62504	0					
ANR	62639	Identifier	zend_mm_get_debug_info		62504	0					
ANR	62640	ArgumentList	heap		62504	1					
ANR	62641	Argument	heap		62504	0					
ANR	62642	Identifier	heap		62504	0					
ANR	62643	Argument	ptr		62504	1					
ANR	62644	Identifier	ptr		62504	0					
ANR	62645	ExpressionStatement	dbg -> size = real_size	1372:2:41051:41072	62504	12	True				
ANR	62646	AssignmentExpression	dbg -> size = real_size		62504	0		=			
ANR	62647	PtrMemberAccess	dbg -> size		62504	0					
ANR	62648	Identifier	dbg		62504	0					
ANR	62649	Identifier	size		62504	1					
ANR	62650	Identifier	real_size		62504	1					
ANR	62651	ExpressionStatement	dbg -> filename = __zend_filename	1373:2:41076:41107	62504	13	True				
ANR	62652	AssignmentExpression	dbg -> filename = __zend_filename		62504	0		=			
ANR	62653	PtrMemberAccess	dbg -> filename		62504	0					
ANR	62654	Identifier	dbg		62504	0					
ANR	62655	Identifier	filename		62504	1					
ANR	62656	Identifier	__zend_filename		62504	1					
ANR	62657	ExpressionStatement	dbg -> orig_filename = __zend_orig_filename	1374:2:41111:41152	62504	14	True				
ANR	62658	AssignmentExpression	dbg -> orig_filename = __zend_orig_filename		62504	0		=			
ANR	62659	PtrMemberAccess	dbg -> orig_filename		62504	0					
ANR	62660	Identifier	dbg		62504	0					
ANR	62661	Identifier	orig_filename		62504	1					
ANR	62662	Identifier	__zend_orig_filename		62504	1					
ANR	62663	ExpressionStatement	dbg -> lineno = __zend_lineno	1375:2:41156:41183	62504	15	True				
ANR	62664	AssignmentExpression	dbg -> lineno = __zend_lineno		62504	0		=			
ANR	62665	PtrMemberAccess	dbg -> lineno		62504	0					
ANR	62666	Identifier	dbg		62504	0					
ANR	62667	Identifier	lineno		62504	1					
ANR	62668	Identifier	__zend_lineno		62504	1					
ANR	62669	ExpressionStatement	dbg -> orig_lineno = __zend_orig_lineno	1376:2:41187:41224	62504	16	True				
ANR	62670	AssignmentExpression	dbg -> orig_lineno = __zend_orig_lineno		62504	0		=			
ANR	62671	PtrMemberAccess	dbg -> orig_lineno		62504	0					
ANR	62672	Identifier	dbg		62504	0					
ANR	62673	Identifier	orig_lineno		62504	1					
ANR	62674	Identifier	__zend_orig_lineno		62504	1					
ANR	62675	ReturnStatement	return ptr ;	1378:2:41235:41245	62504	17	True				
ANR	62676	Identifier	ptr		62504	0					
ANR	62677	ElseStatement	else		62504	0					
ANR	62678	CompoundStatement		33:8:1072:1072	62504	0					
ANR	62679	ExpressionStatement	size = real_size	1381:2:41274:41290	62504	0	True				
ANR	62680	AssignmentExpression	size = real_size		62504	0		=			
ANR	62681	Identifier	size		62504	0					
ANR	62682	Identifier	real_size		62504	1					
ANR	62683	Statement	return	1383:2:41301:41306	62504	1	True				
ANR	62684	Statement	zend_mm_alloc_huge	1383:9:41308:41325	62504	2	True				
ANR	62685	Statement	(	1383:27:41326:41326	62504	3	True				
ANR	62686	Statement	heap	1383:28:41327:41330	62504	4	True				
ANR	62687	Statement	","	1383:32:41331:41331	62504	5	True				
ANR	62688	Statement	size	1383:34:41333:41336	62504	6	True				
ANR	62689	Statement	ZEND_FILE_LINE_RELAY_CC	1383:39:41338:41360	62504	7	True				
ANR	62690	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	1383:63:41362:41389	62504	8	True				
ANR	62691	Statement	)	1383:91:41390:41390	62504	9	True				
ANR	62692	ExpressionStatement		1383:92:41391:41391	62504	10	True				
ANR	62693	ReturnType	static zend_always_inline void *		62504	1					
ANR	62694	Identifier	zend_mm_alloc_heap		62504	2					
ANR	62695	ParameterList	"zend_mm_heap * heap , size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC"		62504	3					
ANR	62696	Parameter	zend_mm_heap * heap	1346:51:40108:40125	62504	0	True				
ANR	62697	ParameterType	zend_mm_heap *		62504	0					
ANR	62698	Identifier	heap		62504	1					
ANR	62699	Parameter	size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC	1346:71:40128:40179	62504	1	True				
ANR	62700	ParameterType	size_t size ZEND_FILE_LINE_DC		62504	0					
ANR	62701	Identifier	ZEND_FILE_LINE_ORIG_DC		62504	1					
ANR	62702	CFGEntryNode	ENTRY		62504		True				
ANR	62703	CFGExitNode	EXIT		62504		True				
ANR	62704	Symbol	ZEND_MM_ALIGNED_SIZE		62504						
ANR	62705	Symbol	zend_mm_get_debug_info		62504						
ANR	62706	Symbol	MAX		62504						
ANR	62707	Symbol	__zend_orig_filename		62504						
ANR	62708	Symbol	__zend_lineno		62504						
ANR	62709	Symbol	dbg -> size		62504						
ANR	62710	Symbol	ZEND_MM_MAX_LARGE_SIZE		62504						
ANR	62711	Symbol	dbg		62504						
ANR	62712	Symbol	ZEND_MM_MAX_SMALL_SIZE		62504						
ANR	62713	Symbol	ZEND_FILE_LINE_ORIG_DC		62504						
ANR	62714	Symbol	real_size		62504						
ANR	62715	Symbol	* dbg		62504						
ANR	62716	Symbol	dbg -> lineno		62504						
ANR	62717	Symbol	ptr		62504						
ANR	62718	Symbol	__zend_orig_lineno		62504						
ANR	62719	Symbol	dbg -> orig_filename		62504						
ANR	62720	Symbol	size		62504						
ANR	62721	Symbol	__zend_filename		62504						
ANR	62722	Symbol	dbg -> orig_lineno		62504						
ANR	62723	Symbol	dbg -> filename		62504						
ANR	62724	Symbol	heap		62504						
ANR	62725	DeclStmt									
ANR	62726	Decl							size_t	size_t	page_offset
ANR	62727	DeclStmt									
ANR	62728	Decl							zend_mm_chunk	zend_mm_chunk *	chunk
ANR	62729	DeclStmt									
ANR	62730	Decl							int	int	page_num
ANR	62731	DeclStmt									
ANR	62732	Decl							zend_mm_page_info	zend_mm_page_info	info
ANR	62733	DeclStmt									
ANR	62734	Decl							int	int	pages_count
ANR	62735	DeclStmt									
ANR	62736	Decl							size_t	size_t	page_offset
ANR	62737	DeclStmt									
ANR	62738	Decl							zend_mm_chunk	zend_mm_chunk *	chunk
ANR	62739	DeclStmt									
ANR	62740	Decl							zend_mm_debug_info	zend_mm_debug_info *	dbg
ANR	62741	DeclStmt									
ANR	62742	Decl							int	int	page_num
ANR	62743	DeclStmt									
ANR	62744	Decl							zend_mm_page_info	zend_mm_page_info	info
ANR	62745	Function	zend_mm_realloc_heap	1440:0:43319:50737							
ANR	62746	FunctionDef	"zend_mm_realloc_heap (zend_mm_heap * heap , void * ptr , size_t size , size_t copy_size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC)"		62745	0					
ANR	62747	CompoundStatement		1441:0:43456:50737	62745	0					
ANR	62748	IdentifierDeclStatement	size_t page_offset ;	1442:1:43459:43477	62745	0	True				
ANR	62749	IdentifierDecl	page_offset		62745	0					
ANR	62750	IdentifierDeclType	size_t		62745	0					
ANR	62751	Identifier	page_offset		62745	1					
ANR	62752	IdentifierDeclStatement	size_t old_size ;	1443:1:43480:43495	62745	1	True				
ANR	62753	IdentifierDecl	old_size		62745	0					
ANR	62754	IdentifierDeclType	size_t		62745	0					
ANR	62755	Identifier	old_size		62745	1					
ANR	62756	IdentifierDeclStatement	size_t new_size ;	1444:1:43498:43513	62745	2	True				
ANR	62757	IdentifierDecl	new_size		62745	0					
ANR	62758	IdentifierDeclType	size_t		62745	0					
ANR	62759	Identifier	new_size		62745	1					
ANR	62760	IdentifierDeclStatement	void * ret ;	1445:1:43516:43525	62745	3	True				
ANR	62761	IdentifierDecl	* ret		62745	0					
ANR	62762	IdentifierDeclType	void *		62745	0					
ANR	62763	Identifier	ret		62745	1					
ANR	62764	IdentifierDeclStatement	size_t real_size ;	1447:1:43543:43559	62745	4	True				
ANR	62765	IdentifierDecl	real_size		62745	0					
ANR	62766	IdentifierDeclType	size_t		62745	0					
ANR	62767	Identifier	real_size		62745	1					
ANR	62768	IdentifierDeclStatement	zend_mm_debug_info * dbg ;	1448:1:43562:43585	62745	5	True				
ANR	62769	IdentifierDecl	* dbg		62745	0					
ANR	62770	IdentifierDeclType	zend_mm_debug_info *		62745	0					
ANR	62771	Identifier	dbg		62745	1					
ANR	62772	ExpressionStatement	"page_offset = ZEND_MM_ALIGNED_OFFSET ( ptr , ZEND_MM_CHUNK_SIZE )"	1451:1:43596:43657	62745	6	True				
ANR	62773	AssignmentExpression	"page_offset = ZEND_MM_ALIGNED_OFFSET ( ptr , ZEND_MM_CHUNK_SIZE )"		62745	0		=			
ANR	62774	Identifier	page_offset		62745	0					
ANR	62775	CallExpression	"ZEND_MM_ALIGNED_OFFSET ( ptr , ZEND_MM_CHUNK_SIZE )"		62745	1					
ANR	62776	Callee	ZEND_MM_ALIGNED_OFFSET		62745	0					
ANR	62777	Identifier	ZEND_MM_ALIGNED_OFFSET		62745	0					
ANR	62778	ArgumentList	ptr		62745	1					
ANR	62779	Argument	ptr		62745	0					
ANR	62780	Identifier	ptr		62745	0					
ANR	62781	Argument	ZEND_MM_CHUNK_SIZE		62745	1					
ANR	62782	Identifier	ZEND_MM_CHUNK_SIZE		62745	0					
ANR	62783	IfStatement	if ( UNEXPECTED ( page_offset == 0 ) )		62745	7					
ANR	62784	Condition	UNEXPECTED ( page_offset == 0 )	1452:5:43664:43691	62745	0	True				
ANR	62785	CallExpression	UNEXPECTED ( page_offset == 0 )		62745	0					
ANR	62786	Callee	UNEXPECTED		62745	0					
ANR	62787	Identifier	UNEXPECTED		62745	0					
ANR	62788	ArgumentList	page_offset == 0		62745	1					
ANR	62789	Argument	page_offset == 0		62745	0					
ANR	62790	EqualityExpression	page_offset == 0		62745	0		==			
ANR	62791	Identifier	page_offset		62745	0					
ANR	62792	PrimaryExpression	0		62745	1					
ANR	62793	CompoundStatement		12:35:237:237	62745	1					
ANR	62794	IfStatement	if ( UNEXPECTED ( ptr == NULL ) )		62745	0					
ANR	62795	Condition	UNEXPECTED ( ptr == NULL )	1453:6:43702:43724	62745	0	True				
ANR	62796	CallExpression	UNEXPECTED ( ptr == NULL )		62745	0					
ANR	62797	Callee	UNEXPECTED		62745	0					
ANR	62798	Identifier	UNEXPECTED		62745	0					
ANR	62799	ArgumentList	ptr == NULL		62745	1					
ANR	62800	Argument	ptr == NULL		62745	0					
ANR	62801	EqualityExpression	ptr == NULL		62745	0		==			
ANR	62802	Identifier	ptr		62745	0					
ANR	62803	Identifier	NULL		62745	1					
ANR	62804	CompoundStatement		13:31:270:270	62745	1					
ANR	62805	Statement	return	1454:3:43732:43737	62745	0	True				
ANR	62806	Statement	zend_mm_alloc_heap	1454:10:43739:43756	62745	1	True				
ANR	62807	Statement	(	1454:28:43757:43757	62745	2	True				
ANR	62808	Statement	heap	1454:29:43758:43761	62745	3	True				
ANR	62809	Statement	","	1454:33:43762:43762	62745	4	True				
ANR	62810	Statement	size	1454:35:43764:43767	62745	5	True				
ANR	62811	Statement	ZEND_FILE_LINE_RELAY_CC	1454:40:43769:43791	62745	6	True				
ANR	62812	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	1454:64:43793:43820	62745	7	True				
ANR	62813	Statement	)	1454:92:43821:43821	62745	8	True				
ANR	62814	ExpressionStatement		1454:93:43822:43822	62745	9	True				
ANR	62815	Statement	old_size	1456:2:43830:43837	62745	1	True				
ANR	62816	Statement	=	1456:11:43839:43839	62745	2	True				
ANR	62817	Statement	zend_mm_get_huge_block_size	1456:13:43841:43867	62745	3	True				
ANR	62818	Statement	(	1456:40:43868:43868	62745	4	True				
ANR	62819	Statement	heap	1456:41:43869:43872	62745	5	True				
ANR	62820	Statement	","	1456:45:43873:43873	62745	6	True				
ANR	62821	Statement	ptr	1456:47:43875:43877	62745	7	True				
ANR	62822	Statement	ZEND_FILE_LINE_RELAY_CC	1456:51:43879:43901	62745	8	True				
ANR	62823	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	1456:75:43903:43930	62745	9	True				
ANR	62824	Statement	)	1456:103:43931:43931	62745	10	True				
ANR	62825	ExpressionStatement		1456:104:43932:43932	62745	11	True				
ANR	62826	ExpressionStatement	real_size = size	1458:2:43951:43967	62745	12	True				
ANR	62827	AssignmentExpression	real_size = size		62745	0		=			
ANR	62828	Identifier	real_size		62745	0					
ANR	62829	Identifier	size		62745	1					
ANR	62830	ExpressionStatement	size = ZEND_MM_ALIGNED_SIZE ( size ) + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )	1459:2:43971:44055	62745	13	True				
ANR	62831	AssignmentExpression	size = ZEND_MM_ALIGNED_SIZE ( size ) + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		62745	0		=			
ANR	62832	Identifier	size		62745	0					
ANR	62833	AdditiveExpression	ZEND_MM_ALIGNED_SIZE ( size ) + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		62745	1		+			
ANR	62834	CallExpression	ZEND_MM_ALIGNED_SIZE ( size )		62745	0					
ANR	62835	Callee	ZEND_MM_ALIGNED_SIZE		62745	0					
ANR	62836	Identifier	ZEND_MM_ALIGNED_SIZE		62745	0					
ANR	62837	ArgumentList	size		62745	1					
ANR	62838	Argument	size		62745	0					
ANR	62839	Identifier	size		62745	0					
ANR	62840	CallExpression	ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		62745	1					
ANR	62841	Callee	ZEND_MM_ALIGNED_SIZE		62745	0					
ANR	62842	Identifier	ZEND_MM_ALIGNED_SIZE		62745	0					
ANR	62843	ArgumentList	sizeof ( zend_mm_debug_info )		62745	1					
ANR	62844	Argument	sizeof ( zend_mm_debug_info )		62745	0					
ANR	62845	SizeofExpression	sizeof ( zend_mm_debug_info )		62745	0					
ANR	62846	Sizeof	sizeof		62745	0					
ANR	62847	SizeofOperand	zend_mm_debug_info		62745	1					
ANR	62848	IfStatement	if ( size > ZEND_MM_MAX_LARGE_SIZE )		62745	14					
ANR	62849	Condition	size > ZEND_MM_MAX_LARGE_SIZE	1461:6:44070:44098	62745	0	True				
ANR	62850	RelationalExpression	size > ZEND_MM_MAX_LARGE_SIZE		62745	0		>			
ANR	62851	Identifier	size		62745	0					
ANR	62852	Identifier	ZEND_MM_MAX_LARGE_SIZE		62745	1					
ANR	62853	CompoundStatement		21:37:644:644	62745	1					
ANR	62854	ExpressionStatement	size = real_size	1463:3:44121:44137	62745	0	True				
ANR	62855	AssignmentExpression	size = real_size		62745	0		=			
ANR	62856	Identifier	size		62745	0					
ANR	62857	Identifier	real_size		62745	1					
ANR	62858	ExpressionStatement	"new_size = ZEND_MM_ALIGNED_SIZE_EX ( size , MAX ( REAL_PAGE_SIZE , ZEND_MM_CHUNK_SIZE ) )"	1470:3:44369:44450	62745	1	True				
ANR	62859	AssignmentExpression	"new_size = ZEND_MM_ALIGNED_SIZE_EX ( size , MAX ( REAL_PAGE_SIZE , ZEND_MM_CHUNK_SIZE ) )"		62745	0		=			
ANR	62860	Identifier	new_size		62745	0					
ANR	62861	CallExpression	"ZEND_MM_ALIGNED_SIZE_EX ( size , MAX ( REAL_PAGE_SIZE , ZEND_MM_CHUNK_SIZE ) )"		62745	1					
ANR	62862	Callee	ZEND_MM_ALIGNED_SIZE_EX		62745	0					
ANR	62863	Identifier	ZEND_MM_ALIGNED_SIZE_EX		62745	0					
ANR	62864	ArgumentList	size		62745	1					
ANR	62865	Argument	size		62745	0					
ANR	62866	Identifier	size		62745	0					
ANR	62867	Argument	"MAX ( REAL_PAGE_SIZE , ZEND_MM_CHUNK_SIZE )"		62745	1					
ANR	62868	CallExpression	"MAX ( REAL_PAGE_SIZE , ZEND_MM_CHUNK_SIZE )"		62745	0					
ANR	62869	Callee	MAX		62745	0					
ANR	62870	Identifier	MAX		62745	0					
ANR	62871	ArgumentList	REAL_PAGE_SIZE		62745	1					
ANR	62872	Argument	REAL_PAGE_SIZE		62745	0					
ANR	62873	Identifier	REAL_PAGE_SIZE		62745	0					
ANR	62874	Argument	ZEND_MM_CHUNK_SIZE		62745	1					
ANR	62875	Identifier	ZEND_MM_CHUNK_SIZE		62745	0					
ANR	62876	IfStatement	if ( new_size == old_size )		62745	2					
ANR	62877	Condition	new_size == old_size	1474:7:44533:44552	62745	0	True				
ANR	62878	EqualityExpression	new_size == old_size		62745	0		==			
ANR	62879	Identifier	new_size		62745	0					
ANR	62880	Identifier	old_size		62745	1					
ANR	62881	CompoundStatement		34:29:1098:1098	62745	1					
ANR	62882	Statement	zend_mm_change_huge_block_size	1476:4:44576:44605	62745	0	True				
ANR	62883	Statement	(	1476:34:44606:44606	62745	1	True				
ANR	62884	Statement	heap	1476:35:44607:44610	62745	2	True				
ANR	62885	Statement	","	1476:39:44611:44611	62745	3	True				
ANR	62886	Statement	ptr	1476:41:44613:44615	62745	4	True				
ANR	62887	Statement	","	1476:44:44616:44616	62745	5	True				
ANR	62888	Statement	new_size	1476:46:44618:44625	62745	6	True				
ANR	62889	Statement	","	1476:54:44626:44626	62745	7	True				
ANR	62890	Statement	real_size	1476:56:44628:44636	62745	8	True				
ANR	62891	Statement	ZEND_FILE_LINE_RELAY_CC	1476:66:44638:44660	62745	9	True				
ANR	62892	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	1476:90:44662:44689	62745	10	True				
ANR	62893	Statement	)	1476:118:44690:44690	62745	11	True				
ANR	62894	ExpressionStatement		1476:119:44691:44691	62745	12	True				
ANR	62895	ReturnStatement	return ptr ;	1480:4:44820:44830	62745	13	True				
ANR	62896	Identifier	ptr		62745	0					
ANR	62897	ElseStatement	else		62745	0					
ANR	62898	IfStatement	if ( new_size < old_size )		62745	0					
ANR	62899	Condition	new_size < old_size	1481:14:44846:44864	62745	0	True				
ANR	62900	RelationalExpression	new_size < old_size		62745	0		<			
ANR	62901	Identifier	new_size		62745	0					
ANR	62902	Identifier	old_size		62745	1					
ANR	62903	CompoundStatement		41:35:1410:1410	62745	1					
ANR	62904	IfStatement	"if ( zend_mm_chunk_truncate ( heap , ptr , old_size , new_size ) )"		62745	0					
ANR	62905	Condition	"zend_mm_chunk_truncate ( heap , ptr , old_size , new_size )"	1483:8:44898:44950	62745	0	True				
ANR	62906	CallExpression	"zend_mm_chunk_truncate ( heap , ptr , old_size , new_size )"		62745	0					
ANR	62907	Callee	zend_mm_chunk_truncate		62745	0					
ANR	62908	Identifier	zend_mm_chunk_truncate		62745	0					
ANR	62909	ArgumentList	heap		62745	1					
ANR	62910	Argument	heap		62745	0					
ANR	62911	Identifier	heap		62745	0					
ANR	62912	Argument	ptr		62745	1					
ANR	62913	Identifier	ptr		62745	0					
ANR	62914	Argument	old_size		62745	2					
ANR	62915	Identifier	old_size		62745	0					
ANR	62916	Argument	new_size		62745	3					
ANR	62917	Identifier	new_size		62745	0					
ANR	62918	CompoundStatement		43:63:1496:1496	62745	1					
ANR	62919	ExpressionStatement	heap -> real_size -= old_size - new_size	1485:5:44994:45032	62745	0	True				
ANR	62920	AssignmentExpression	heap -> real_size -= old_size - new_size		62745	0		-=			
ANR	62921	PtrMemberAccess	heap -> real_size		62745	0					
ANR	62922	Identifier	heap		62745	0					
ANR	62923	Identifier	real_size		62745	1					
ANR	62924	AdditiveExpression	old_size - new_size		62745	1		-			
ANR	62925	Identifier	old_size		62745	0					
ANR	62926	Identifier	new_size		62745	1					
ANR	62927	ExpressionStatement	heap -> size -= old_size - new_size	1488:5:45063:45096	62745	1	True				
ANR	62928	AssignmentExpression	heap -> size -= old_size - new_size		62745	0		-=			
ANR	62929	PtrMemberAccess	heap -> size		62745	0					
ANR	62930	Identifier	heap		62745	0					
ANR	62931	Identifier	size		62745	1					
ANR	62932	AdditiveExpression	old_size - new_size		62745	1		-			
ANR	62933	Identifier	old_size		62745	0					
ANR	62934	Identifier	new_size		62745	1					
ANR	62935	Statement	zend_mm_change_huge_block_size	1491:5:45125:45154	62745	2	True				
ANR	62936	Statement	(	1491:35:45155:45155	62745	3	True				
ANR	62937	Statement	heap	1491:36:45156:45159	62745	4	True				
ANR	62938	Statement	","	1491:40:45160:45160	62745	5	True				
ANR	62939	Statement	ptr	1491:42:45162:45164	62745	6	True				
ANR	62940	Statement	","	1491:45:45165:45165	62745	7	True				
ANR	62941	Statement	new_size	1491:47:45167:45174	62745	8	True				
ANR	62942	Statement	","	1491:55:45175:45175	62745	9	True				
ANR	62943	Statement	real_size	1491:57:45177:45185	62745	10	True				
ANR	62944	Statement	ZEND_FILE_LINE_RELAY_CC	1491:67:45187:45209	62745	11	True				
ANR	62945	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	1491:91:45211:45238	62745	12	True				
ANR	62946	Statement	)	1491:119:45239:45239	62745	13	True				
ANR	62947	ExpressionStatement		1491:120:45240:45240	62745	14	True				
ANR	62948	ReturnStatement	return ptr ;	1495:5:45371:45381	62745	15	True				
ANR	62949	Identifier	ptr		62745	0					
ANR	62950	ElseStatement	else		62745	0					
ANR	62951	CompoundStatement		57:41:1973:1973	62745	0					
ANR	62952	IfStatement	if ( UNEXPECTED ( heap -> real_size + ( new_size - old_size ) > heap -> limit ) )		62745	0					
ANR	62953	Condition	UNEXPECTED ( heap -> real_size + ( new_size - old_size ) > heap -> limit )	1499:8:45458:45522	62745	0	True				
ANR	62954	CallExpression	UNEXPECTED ( heap -> real_size + ( new_size - old_size ) > heap -> limit )		62745	0					
ANR	62955	Callee	UNEXPECTED		62745	0					
ANR	62956	Identifier	UNEXPECTED		62745	0					
ANR	62957	ArgumentList	heap -> real_size + ( new_size - old_size ) > heap -> limit		62745	1					
ANR	62958	Argument	heap -> real_size + ( new_size - old_size ) > heap -> limit		62745	0					
ANR	62959	RelationalExpression	heap -> real_size + ( new_size - old_size ) > heap -> limit		62745	0		>			
ANR	62960	AdditiveExpression	heap -> real_size + ( new_size - old_size )		62745	0		+			
ANR	62961	PtrMemberAccess	heap -> real_size		62745	0					
ANR	62962	Identifier	heap		62745	0					
ANR	62963	Identifier	real_size		62745	1					
ANR	62964	AdditiveExpression	new_size - old_size		62745	1		-			
ANR	62965	Identifier	new_size		62745	0					
ANR	62966	Identifier	old_size		62745	1					
ANR	62967	PtrMemberAccess	heap -> limit		62745	1					
ANR	62968	Identifier	heap		62745	0					
ANR	62969	Identifier	limit		62745	1					
ANR	62970	CompoundStatement		59:75:2068:2068	62745	1					
ANR	62971	IfStatement	if ( zend_mm_gc ( heap ) && heap -> real_size + ( new_size - old_size ) <= heap -> limit )		62745	0					
ANR	62972	Condition	zend_mm_gc ( heap ) && heap -> real_size + ( new_size - old_size ) <= heap -> limit	1500:9:45536:45609	62745	0	True				
ANR	62973	AndExpression	zend_mm_gc ( heap ) && heap -> real_size + ( new_size - old_size ) <= heap -> limit		62745	0		&&			
ANR	62974	CallExpression	zend_mm_gc ( heap )		62745	0					
ANR	62975	Callee	zend_mm_gc		62745	0					
ANR	62976	Identifier	zend_mm_gc		62745	0					
ANR	62977	ArgumentList	heap		62745	1					
ANR	62978	Argument	heap		62745	0					
ANR	62979	Identifier	heap		62745	0					
ANR	62980	RelationalExpression	heap -> real_size + ( new_size - old_size ) <= heap -> limit		62745	1		<=			
ANR	62981	AdditiveExpression	heap -> real_size + ( new_size - old_size )		62745	0		+			
ANR	62982	PtrMemberAccess	heap -> real_size		62745	0					
ANR	62983	Identifier	heap		62745	0					
ANR	62984	Identifier	real_size		62745	1					
ANR	62985	AdditiveExpression	new_size - old_size		62745	1		-			
ANR	62986	Identifier	new_size		62745	0					
ANR	62987	Identifier	old_size		62745	1					
ANR	62988	PtrMemberAccess	heap -> limit		62745	1					
ANR	62989	Identifier	heap		62745	0					
ANR	62990	Identifier	limit		62745	1					
ANR	62991	CompoundStatement		60:85:2155:2155	62745	1					
ANR	62992	ElseStatement	else		62745	0					
ANR	62993	IfStatement	if ( heap -> overflow == 0 )		62745	0					
ANR	62994	Condition	heap -> overflow == 0	1502:16:45647:45665	62745	0	True				
ANR	62995	EqualityExpression	heap -> overflow == 0		62745	0		==			
ANR	62996	PtrMemberAccess	heap -> overflow		62745	0					
ANR	62997	Identifier	heap		62745	0					
ANR	62998	Identifier	overflow		62745	1					
ANR	62999	PrimaryExpression	0		62745	1					
ANR	63000	CompoundStatement		62:37:2211:2211	62745	1					
ANR	63001	ExpressionStatement	"zend_mm_safe_error ( heap , ""Allowed memory size of %zu bytes exhausted at %s:%d (tried to allocate %zu bytes)"" , heap -> limit , __zend_filename , __zend_lineno , size )"	1504:6:45691:45851	62745	0	True				
ANR	63002	CallExpression	"zend_mm_safe_error ( heap , ""Allowed memory size of %zu bytes exhausted at %s:%d (tried to allocate %zu bytes)"" , heap -> limit , __zend_filename , __zend_lineno , size )"		62745	0					
ANR	63003	Callee	zend_mm_safe_error		62745	0					
ANR	63004	Identifier	zend_mm_safe_error		62745	0					
ANR	63005	ArgumentList	heap		62745	1					
ANR	63006	Argument	heap		62745	0					
ANR	63007	Identifier	heap		62745	0					
ANR	63008	Argument	"""Allowed memory size of %zu bytes exhausted at %s:%d (tried to allocate %zu bytes)"""		62745	1					
ANR	63009	PrimaryExpression	"""Allowed memory size of %zu bytes exhausted at %s:%d (tried to allocate %zu bytes)"""		62745	0					
ANR	63010	Argument	heap -> limit		62745	2					
ANR	63011	PtrMemberAccess	heap -> limit		62745	0					
ANR	63012	Identifier	heap		62745	0					
ANR	63013	Identifier	limit		62745	1					
ANR	63014	Argument	__zend_filename		62745	3					
ANR	63015	Identifier	__zend_filename		62745	0					
ANR	63016	Argument	__zend_lineno		62745	4					
ANR	63017	Identifier	__zend_lineno		62745	0					
ANR	63018	Argument	size		62745	5					
ANR	63019	Identifier	size		62745	0					
ANR	63020	ReturnStatement	return NULL ;	1508:6:45999:46010	62745	1	True				
ANR	63021	Identifier	NULL		62745	0					
ANR	63022	IfStatement	"if ( zend_mm_chunk_extend ( heap , ptr , old_size , new_size ) )"		62745	1					
ANR	63023	Condition	"zend_mm_chunk_extend ( heap , ptr , old_size , new_size )"	1513:8:46089:46139	62745	0	True				
ANR	63024	CallExpression	"zend_mm_chunk_extend ( heap , ptr , old_size , new_size )"		62745	0					
ANR	63025	Callee	zend_mm_chunk_extend		62745	0					
ANR	63026	Identifier	zend_mm_chunk_extend		62745	0					
ANR	63027	ArgumentList	heap		62745	1					
ANR	63028	Argument	heap		62745	0					
ANR	63029	Identifier	heap		62745	0					
ANR	63030	Argument	ptr		62745	1					
ANR	63031	Identifier	ptr		62745	0					
ANR	63032	Argument	old_size		62745	2					
ANR	63033	Identifier	old_size		62745	0					
ANR	63034	Argument	new_size		62745	3					
ANR	63035	Identifier	new_size		62745	0					
ANR	63036	CompoundStatement		73:61:2685:2685	62745	1					
ANR	63037	ExpressionStatement	heap -> real_size += new_size - old_size	1515:5:46183:46221	62745	0	True				
ANR	63038	AssignmentExpression	heap -> real_size += new_size - old_size		62745	0		+=			
ANR	63039	PtrMemberAccess	heap -> real_size		62745	0					
ANR	63040	Identifier	heap		62745	0					
ANR	63041	Identifier	real_size		62745	1					
ANR	63042	AdditiveExpression	new_size - old_size		62745	1		-			
ANR	63043	Identifier	new_size		62745	0					
ANR	63044	Identifier	old_size		62745	1					
ANR	63045	ExpressionStatement	"heap -> real_peak = MAX ( heap -> real_peak , heap -> real_size )"	1518:5:46252:46307	62745	1	True				
ANR	63046	AssignmentExpression	"heap -> real_peak = MAX ( heap -> real_peak , heap -> real_size )"		62745	0		=			
ANR	63047	PtrMemberAccess	heap -> real_peak		62745	0					
ANR	63048	Identifier	heap		62745	0					
ANR	63049	Identifier	real_peak		62745	1					
ANR	63050	CallExpression	"MAX ( heap -> real_peak , heap -> real_size )"		62745	1					
ANR	63051	Callee	MAX		62745	0					
ANR	63052	Identifier	MAX		62745	0					
ANR	63053	ArgumentList	heap -> real_peak		62745	1					
ANR	63054	Argument	heap -> real_peak		62745	0					
ANR	63055	PtrMemberAccess	heap -> real_peak		62745	0					
ANR	63056	Identifier	heap		62745	0					
ANR	63057	Identifier	real_peak		62745	1					
ANR	63058	Argument	heap -> real_size		62745	1					
ANR	63059	PtrMemberAccess	heap -> real_size		62745	0					
ANR	63060	Identifier	heap		62745	0					
ANR	63061	Identifier	real_size		62745	1					
ANR	63062	ExpressionStatement	heap -> size += new_size - old_size	1519:5:46314:46347	62745	2	True				
ANR	63063	AssignmentExpression	heap -> size += new_size - old_size		62745	0		+=			
ANR	63064	PtrMemberAccess	heap -> size		62745	0					
ANR	63065	Identifier	heap		62745	0					
ANR	63066	Identifier	size		62745	1					
ANR	63067	AdditiveExpression	new_size - old_size		62745	1		-			
ANR	63068	Identifier	new_size		62745	0					
ANR	63069	Identifier	old_size		62745	1					
ANR	63070	ExpressionStatement	"heap -> peak = MAX ( heap -> peak , heap -> size )"	1520:5:46354:46394	62745	3	True				
ANR	63071	AssignmentExpression	"heap -> peak = MAX ( heap -> peak , heap -> size )"		62745	0		=			
ANR	63072	PtrMemberAccess	heap -> peak		62745	0					
ANR	63073	Identifier	heap		62745	0					
ANR	63074	Identifier	peak		62745	1					
ANR	63075	CallExpression	"MAX ( heap -> peak , heap -> size )"		62745	1					
ANR	63076	Callee	MAX		62745	0					
ANR	63077	Identifier	MAX		62745	0					
ANR	63078	ArgumentList	heap -> peak		62745	1					
ANR	63079	Argument	heap -> peak		62745	0					
ANR	63080	PtrMemberAccess	heap -> peak		62745	0					
ANR	63081	Identifier	heap		62745	0					
ANR	63082	Identifier	peak		62745	1					
ANR	63083	Argument	heap -> size		62745	1					
ANR	63084	PtrMemberAccess	heap -> size		62745	0					
ANR	63085	Identifier	heap		62745	0					
ANR	63086	Identifier	size		62745	1					
ANR	63087	Statement	zend_mm_change_huge_block_size	1523:5:46423:46452	62745	4	True				
ANR	63088	Statement	(	1523:35:46453:46453	62745	5	True				
ANR	63089	Statement	heap	1523:36:46454:46457	62745	6	True				
ANR	63090	Statement	","	1523:40:46458:46458	62745	7	True				
ANR	63091	Statement	ptr	1523:42:46460:46462	62745	8	True				
ANR	63092	Statement	","	1523:45:46463:46463	62745	9	True				
ANR	63093	Statement	new_size	1523:47:46465:46472	62745	10	True				
ANR	63094	Statement	","	1523:55:46473:46473	62745	11	True				
ANR	63095	Statement	real_size	1523:57:46475:46483	62745	12	True				
ANR	63096	Statement	ZEND_FILE_LINE_RELAY_CC	1523:67:46485:46507	62745	13	True				
ANR	63097	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	1523:91:46509:46536	62745	14	True				
ANR	63098	Statement	)	1523:119:46537:46537	62745	15	True				
ANR	63099	ExpressionStatement		1523:120:46538:46538	62745	16	True				
ANR	63100	ReturnStatement	return ptr ;	1527:5:46669:46679	62745	17	True				
ANR	63101	Identifier	ptr		62745	0					
ANR	63102	ElseStatement	else		62745	0					
ANR	63103	CompoundStatement		96:2:3460:3483	62745	0					
ANR	63104	IdentifierDeclStatement	"zend_mm_chunk * chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE ) ;"	1532:2:46708:46792	62745	0	True				
ANR	63105	IdentifierDecl	"* chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"		62745	0					
ANR	63106	IdentifierDeclType	zend_mm_chunk *		62745	0					
ANR	63107	Identifier	chunk		62745	1					
ANR	63108	AssignmentExpression	"* chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"		62745	2		=			
ANR	63109	Identifier	chunk		62745	0					
ANR	63110	CastExpression	"( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"		62745	1					
ANR	63111	CastTarget	zend_mm_chunk *		62745	0					
ANR	63112	CallExpression	"ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"		62745	1					
ANR	63113	Callee	ZEND_MM_ALIGNED_BASE		62745	0					
ANR	63114	Identifier	ZEND_MM_ALIGNED_BASE		62745	0					
ANR	63115	ArgumentList	ptr		62745	1					
ANR	63116	Argument	ptr		62745	0					
ANR	63117	Identifier	ptr		62745	0					
ANR	63118	Argument	ZEND_MM_CHUNK_SIZE		62745	1					
ANR	63119	Identifier	ZEND_MM_CHUNK_SIZE		62745	0					
ANR	63120	IdentifierDeclStatement	int page_num = ( int ) ( page_offset / ZEND_MM_PAGE_SIZE ) ;	1533:2:46796:46849	62745	1	True				
ANR	63121	IdentifierDecl	page_num = ( int ) ( page_offset / ZEND_MM_PAGE_SIZE )		62745	0					
ANR	63122	IdentifierDeclType	int		62745	0					
ANR	63123	Identifier	page_num		62745	1					
ANR	63124	AssignmentExpression	page_num = ( int ) ( page_offset / ZEND_MM_PAGE_SIZE )		62745	2		=			
ANR	63125	Identifier	page_num		62745	0					
ANR	63126	CastExpression	( int ) ( page_offset / ZEND_MM_PAGE_SIZE )		62745	1					
ANR	63127	CastTarget	int		62745	0					
ANR	63128	MultiplicativeExpression	page_offset / ZEND_MM_PAGE_SIZE		62745	1		/			
ANR	63129	Identifier	page_offset		62745	0					
ANR	63130	Identifier	ZEND_MM_PAGE_SIZE		62745	1					
ANR	63131	IdentifierDeclStatement	zend_mm_page_info info = chunk -> map [ page_num ] ;	1534:2:46853:46898	62745	2	True				
ANR	63132	IdentifierDecl	info = chunk -> map [ page_num ]		62745	0					
ANR	63133	IdentifierDeclType	zend_mm_page_info		62745	0					
ANR	63134	Identifier	info		62745	1					
ANR	63135	AssignmentExpression	info = chunk -> map [ page_num ]		62745	2		=			
ANR	63136	Identifier	info		62745	0					
ANR	63137	ArrayIndexing	chunk -> map [ page_num ]		62745	1					
ANR	63138	PtrMemberAccess	chunk -> map		62745	0					
ANR	63139	Identifier	chunk		62745	0					
ANR	63140	Identifier	map		62745	1					
ANR	63141	Identifier	page_num		62745	1					
ANR	63142	IdentifierDeclStatement	size_t real_size = size ;	1536:2:46917:46940	62745	3	True				
ANR	63143	IdentifierDecl	real_size = size		62745	0					
ANR	63144	IdentifierDeclType	size_t		62745	0					
ANR	63145	Identifier	real_size		62745	1					
ANR	63146	AssignmentExpression	real_size = size		62745	2		=			
ANR	63147	Identifier	size		62745	0					
ANR	63148	Identifier	size		62745	1					
ANR	63149	ExpressionStatement	size = ZEND_MM_ALIGNED_SIZE ( size ) + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )	1538:2:46945:47029	62745	4	True				
ANR	63150	AssignmentExpression	size = ZEND_MM_ALIGNED_SIZE ( size ) + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		62745	0		=			
ANR	63151	Identifier	size		62745	0					
ANR	63152	AdditiveExpression	ZEND_MM_ALIGNED_SIZE ( size ) + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		62745	1		+			
ANR	63153	CallExpression	ZEND_MM_ALIGNED_SIZE ( size )		62745	0					
ANR	63154	Callee	ZEND_MM_ALIGNED_SIZE		62745	0					
ANR	63155	Identifier	ZEND_MM_ALIGNED_SIZE		62745	0					
ANR	63156	ArgumentList	size		62745	1					
ANR	63157	Argument	size		62745	0					
ANR	63158	Identifier	size		62745	0					
ANR	63159	CallExpression	ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		62745	1					
ANR	63160	Callee	ZEND_MM_ALIGNED_SIZE		62745	0					
ANR	63161	Identifier	ZEND_MM_ALIGNED_SIZE		62745	0					
ANR	63162	ArgumentList	sizeof ( zend_mm_debug_info )		62745	1					
ANR	63163	Argument	sizeof ( zend_mm_debug_info )		62745	0					
ANR	63164	SizeofExpression	sizeof ( zend_mm_debug_info )		62745	0					
ANR	63165	Sizeof	sizeof		62745	0					
ANR	63166	SizeofOperand	zend_mm_debug_info		62745	1					
ANR	63167	ExpressionStatement	"ZEND_MM_CHECK ( chunk -> heap == heap , ""zend_mm_heap corrupted"" )"	1541:2:47041:47101	62745	5	True				
ANR	63168	CallExpression	"ZEND_MM_CHECK ( chunk -> heap == heap , ""zend_mm_heap corrupted"" )"		62745	0					
ANR	63169	Callee	ZEND_MM_CHECK		62745	0					
ANR	63170	Identifier	ZEND_MM_CHECK		62745	0					
ANR	63171	ArgumentList	chunk -> heap == heap		62745	1					
ANR	63172	Argument	chunk -> heap == heap		62745	0					
ANR	63173	EqualityExpression	chunk -> heap == heap		62745	0		==			
ANR	63174	PtrMemberAccess	chunk -> heap		62745	0					
ANR	63175	Identifier	chunk		62745	0					
ANR	63176	Identifier	heap		62745	1					
ANR	63177	Identifier	heap		62745	1					
ANR	63178	Argument	"""zend_mm_heap corrupted"""		62745	1					
ANR	63179	PrimaryExpression	"""zend_mm_heap corrupted"""		62745	0					
ANR	63180	IfStatement	if ( info & ZEND_MM_IS_SRUN )		62745	6					
ANR	63181	Condition	info & ZEND_MM_IS_SRUN	1542:6:47109:47130	62745	0	True				
ANR	63182	BitAndExpression	info & ZEND_MM_IS_SRUN		62745	0		&			
ANR	63183	Identifier	info		62745	0					
ANR	63184	Identifier	ZEND_MM_IS_SRUN		62745	1					
ANR	63185	CompoundStatement		103:3:3681:3705	62745	1					
ANR	63186	IdentifierDeclStatement	"int old_bin_num , bin_num ;"	1543:3:47138:47162	62745	0	True				
ANR	63187	IdentifierDecl	old_bin_num		62745	0					
ANR	63188	IdentifierDeclType	int		62745	0					
ANR	63189	Identifier	old_bin_num		62745	1					
ANR	63190	IdentifierDecl	bin_num		62745	1					
ANR	63191	IdentifierDeclType	int		62745	0					
ANR	63192	Identifier	bin_num		62745	1					
ANR	63193	ExpressionStatement	old_bin_num = ZEND_MM_SRUN_BIN_NUM ( info )	1545:3:47168:47208	62745	1	True				
ANR	63194	AssignmentExpression	old_bin_num = ZEND_MM_SRUN_BIN_NUM ( info )		62745	0		=			
ANR	63195	Identifier	old_bin_num		62745	0					
ANR	63196	CallExpression	ZEND_MM_SRUN_BIN_NUM ( info )		62745	1					
ANR	63197	Callee	ZEND_MM_SRUN_BIN_NUM		62745	0					
ANR	63198	Identifier	ZEND_MM_SRUN_BIN_NUM		62745	0					
ANR	63199	ArgumentList	info		62745	1					
ANR	63200	Argument	info		62745	0					
ANR	63201	Identifier	info		62745	0					
ANR	63202	ExpressionStatement	old_size = bin_data_size [ old_bin_num ]	1546:3:47213:47250	62745	2	True				
ANR	63203	AssignmentExpression	old_size = bin_data_size [ old_bin_num ]		62745	0		=			
ANR	63204	Identifier	old_size		62745	0					
ANR	63205	ArrayIndexing	bin_data_size [ old_bin_num ]		62745	1					
ANR	63206	Identifier	bin_data_size		62745	0					
ANR	63207	Identifier	old_bin_num		62745	1					
ANR	63208	ExpressionStatement	bin_num = ZEND_MM_SMALL_SIZE_TO_BIN ( size )	1547:3:47255:47296	62745	3	True				
ANR	63209	AssignmentExpression	bin_num = ZEND_MM_SMALL_SIZE_TO_BIN ( size )		62745	0		=			
ANR	63210	Identifier	bin_num		62745	0					
ANR	63211	CallExpression	ZEND_MM_SMALL_SIZE_TO_BIN ( size )		62745	1					
ANR	63212	Callee	ZEND_MM_SMALL_SIZE_TO_BIN		62745	0					
ANR	63213	Identifier	ZEND_MM_SMALL_SIZE_TO_BIN		62745	0					
ANR	63214	ArgumentList	size		62745	1					
ANR	63215	Argument	size		62745	0					
ANR	63216	Identifier	size		62745	0					
ANR	63217	IfStatement	if ( old_bin_num == bin_num )		62745	4					
ANR	63218	Condition	old_bin_num == bin_num	1548:7:47305:47326	62745	0	True				
ANR	63219	EqualityExpression	old_bin_num == bin_num		62745	0		==			
ANR	63220	Identifier	old_bin_num		62745	0					
ANR	63221	Identifier	bin_num		62745	1					
ANR	63222	CompoundStatement		108:31:3872:3872	62745	1					
ANR	63223	ExpressionStatement	"dbg = zend_mm_get_debug_info ( heap , ptr )"	1550:4:47350:47389	62745	0	True				
ANR	63224	AssignmentExpression	"dbg = zend_mm_get_debug_info ( heap , ptr )"		62745	0		=			
ANR	63225	Identifier	dbg		62745	0					
ANR	63226	CallExpression	"zend_mm_get_debug_info ( heap , ptr )"		62745	1					
ANR	63227	Callee	zend_mm_get_debug_info		62745	0					
ANR	63228	Identifier	zend_mm_get_debug_info		62745	0					
ANR	63229	ArgumentList	heap		62745	1					
ANR	63230	Argument	heap		62745	0					
ANR	63231	Identifier	heap		62745	0					
ANR	63232	Argument	ptr		62745	1					
ANR	63233	Identifier	ptr		62745	0					
ANR	63234	ExpressionStatement	dbg -> size = real_size	1551:4:47395:47416	62745	1	True				
ANR	63235	AssignmentExpression	dbg -> size = real_size		62745	0		=			
ANR	63236	PtrMemberAccess	dbg -> size		62745	0					
ANR	63237	Identifier	dbg		62745	0					
ANR	63238	Identifier	size		62745	1					
ANR	63239	Identifier	real_size		62745	1					
ANR	63240	ExpressionStatement	dbg -> filename = __zend_filename	1552:4:47422:47453	62745	2	True				
ANR	63241	AssignmentExpression	dbg -> filename = __zend_filename		62745	0		=			
ANR	63242	PtrMemberAccess	dbg -> filename		62745	0					
ANR	63243	Identifier	dbg		62745	0					
ANR	63244	Identifier	filename		62745	1					
ANR	63245	Identifier	__zend_filename		62745	1					
ANR	63246	ExpressionStatement	dbg -> orig_filename = __zend_orig_filename	1553:4:47459:47500	62745	3	True				
ANR	63247	AssignmentExpression	dbg -> orig_filename = __zend_orig_filename		62745	0		=			
ANR	63248	PtrMemberAccess	dbg -> orig_filename		62745	0					
ANR	63249	Identifier	dbg		62745	0					
ANR	63250	Identifier	orig_filename		62745	1					
ANR	63251	Identifier	__zend_orig_filename		62745	1					
ANR	63252	ExpressionStatement	dbg -> lineno = __zend_lineno	1554:4:47506:47533	62745	4	True				
ANR	63253	AssignmentExpression	dbg -> lineno = __zend_lineno		62745	0		=			
ANR	63254	PtrMemberAccess	dbg -> lineno		62745	0					
ANR	63255	Identifier	dbg		62745	0					
ANR	63256	Identifier	lineno		62745	1					
ANR	63257	Identifier	__zend_lineno		62745	1					
ANR	63258	ExpressionStatement	dbg -> orig_lineno = __zend_orig_lineno	1555:4:47539:47576	62745	5	True				
ANR	63259	AssignmentExpression	dbg -> orig_lineno = __zend_orig_lineno		62745	0		=			
ANR	63260	PtrMemberAccess	dbg -> orig_lineno		62745	0					
ANR	63261	Identifier	dbg		62745	0					
ANR	63262	Identifier	orig_lineno		62745	1					
ANR	63263	Identifier	__zend_orig_lineno		62745	1					
ANR	63264	ReturnStatement	return ptr ;	1557:4:47589:47599	62745	6	True				
ANR	63265	Identifier	ptr		62745	0					
ANR	63266	ElseStatement	else		62745	0					
ANR	63267	CompoundStatement		119:48:4197:4197	62745	0					
ANR	63268	ExpressionStatement	"ZEND_MM_CHECK ( ZEND_MM_ALIGNED_OFFSET ( page_offset , ZEND_MM_PAGE_SIZE ) == 0 , ""zend_mm_heap corrupted"" )"	1560:3:47659:47759	62745	0	True				
ANR	63269	CallExpression	"ZEND_MM_CHECK ( ZEND_MM_ALIGNED_OFFSET ( page_offset , ZEND_MM_PAGE_SIZE ) == 0 , ""zend_mm_heap corrupted"" )"		62745	0					
ANR	63270	Callee	ZEND_MM_CHECK		62745	0					
ANR	63271	Identifier	ZEND_MM_CHECK		62745	0					
ANR	63272	ArgumentList	"ZEND_MM_ALIGNED_OFFSET ( page_offset , ZEND_MM_PAGE_SIZE ) == 0"		62745	1					
ANR	63273	Argument	"ZEND_MM_ALIGNED_OFFSET ( page_offset , ZEND_MM_PAGE_SIZE ) == 0"		62745	0					
ANR	63274	EqualityExpression	"ZEND_MM_ALIGNED_OFFSET ( page_offset , ZEND_MM_PAGE_SIZE ) == 0"		62745	0		==			
ANR	63275	CallExpression	"ZEND_MM_ALIGNED_OFFSET ( page_offset , ZEND_MM_PAGE_SIZE )"		62745	0					
ANR	63276	Callee	ZEND_MM_ALIGNED_OFFSET		62745	0					
ANR	63277	Identifier	ZEND_MM_ALIGNED_OFFSET		62745	0					
ANR	63278	ArgumentList	page_offset		62745	1					
ANR	63279	Argument	page_offset		62745	0					
ANR	63280	Identifier	page_offset		62745	0					
ANR	63281	Argument	ZEND_MM_PAGE_SIZE		62745	1					
ANR	63282	Identifier	ZEND_MM_PAGE_SIZE		62745	0					
ANR	63283	PrimaryExpression	0		62745	1					
ANR	63284	Argument	"""zend_mm_heap corrupted"""		62745	1					
ANR	63285	PrimaryExpression	"""zend_mm_heap corrupted"""		62745	0					
ANR	63286	ExpressionStatement	old_size = ZEND_MM_LRUN_PAGES ( info ) * ZEND_MM_PAGE_SIZE	1561:3:47764:47819	62745	1	True				
ANR	63287	AssignmentExpression	old_size = ZEND_MM_LRUN_PAGES ( info ) * ZEND_MM_PAGE_SIZE		62745	0		=			
ANR	63288	Identifier	old_size		62745	0					
ANR	63289	MultiplicativeExpression	ZEND_MM_LRUN_PAGES ( info ) * ZEND_MM_PAGE_SIZE		62745	1		*			
ANR	63290	CallExpression	ZEND_MM_LRUN_PAGES ( info )		62745	0					
ANR	63291	Callee	ZEND_MM_LRUN_PAGES		62745	0					
ANR	63292	Identifier	ZEND_MM_LRUN_PAGES		62745	0					
ANR	63293	ArgumentList	info		62745	1					
ANR	63294	Argument	info		62745	0					
ANR	63295	Identifier	info		62745	0					
ANR	63296	Identifier	ZEND_MM_PAGE_SIZE		62745	1					
ANR	63297	IfStatement	if ( size > ZEND_MM_MAX_SMALL_SIZE && size <= ZEND_MM_MAX_LARGE_SIZE )		62745	2					
ANR	63298	Condition	size > ZEND_MM_MAX_SMALL_SIZE && size <= ZEND_MM_MAX_LARGE_SIZE	1562:7:47828:47890	62745	0	True				
ANR	63299	AndExpression	size > ZEND_MM_MAX_SMALL_SIZE && size <= ZEND_MM_MAX_LARGE_SIZE		62745	0		&&			
ANR	63300	RelationalExpression	size > ZEND_MM_MAX_SMALL_SIZE		62745	0		>			
ANR	63301	Identifier	size		62745	0					
ANR	63302	Identifier	ZEND_MM_MAX_SMALL_SIZE		62745	1					
ANR	63303	RelationalExpression	size <= ZEND_MM_MAX_LARGE_SIZE		62745	1		<=			
ANR	63304	Identifier	size		62745	0					
ANR	63305	Identifier	ZEND_MM_MAX_LARGE_SIZE		62745	1					
ANR	63306	CompoundStatement		122:72:4436:4436	62745	1					
ANR	63307	ExpressionStatement	"new_size = ZEND_MM_ALIGNED_SIZE_EX ( size , ZEND_MM_PAGE_SIZE )"	1563:4:47899:47958	62745	0	True				
ANR	63308	AssignmentExpression	"new_size = ZEND_MM_ALIGNED_SIZE_EX ( size , ZEND_MM_PAGE_SIZE )"		62745	0		=			
ANR	63309	Identifier	new_size		62745	0					
ANR	63310	CallExpression	"ZEND_MM_ALIGNED_SIZE_EX ( size , ZEND_MM_PAGE_SIZE )"		62745	1					
ANR	63311	Callee	ZEND_MM_ALIGNED_SIZE_EX		62745	0					
ANR	63312	Identifier	ZEND_MM_ALIGNED_SIZE_EX		62745	0					
ANR	63313	ArgumentList	size		62745	1					
ANR	63314	Argument	size		62745	0					
ANR	63315	Identifier	size		62745	0					
ANR	63316	Argument	ZEND_MM_PAGE_SIZE		62745	1					
ANR	63317	Identifier	ZEND_MM_PAGE_SIZE		62745	0					
ANR	63318	IfStatement	if ( new_size == old_size )		62745	1					
ANR	63319	Condition	new_size == old_size	1564:8:47968:47987	62745	0	True				
ANR	63320	EqualityExpression	new_size == old_size		62745	0		==			
ANR	63321	Identifier	new_size		62745	0					
ANR	63322	Identifier	old_size		62745	1					
ANR	63323	CompoundStatement		124:30:4533:4533	62745	1					
ANR	63324	ExpressionStatement	"dbg = zend_mm_get_debug_info ( heap , ptr )"	1566:5:48012:48051	62745	0	True				
ANR	63325	AssignmentExpression	"dbg = zend_mm_get_debug_info ( heap , ptr )"		62745	0		=			
ANR	63326	Identifier	dbg		62745	0					
ANR	63327	CallExpression	"zend_mm_get_debug_info ( heap , ptr )"		62745	1					
ANR	63328	Callee	zend_mm_get_debug_info		62745	0					
ANR	63329	Identifier	zend_mm_get_debug_info		62745	0					
ANR	63330	ArgumentList	heap		62745	1					
ANR	63331	Argument	heap		62745	0					
ANR	63332	Identifier	heap		62745	0					
ANR	63333	Argument	ptr		62745	1					
ANR	63334	Identifier	ptr		62745	0					
ANR	63335	ExpressionStatement	dbg -> size = real_size	1567:5:48058:48079	62745	1	True				
ANR	63336	AssignmentExpression	dbg -> size = real_size		62745	0		=			
ANR	63337	PtrMemberAccess	dbg -> size		62745	0					
ANR	63338	Identifier	dbg		62745	0					
ANR	63339	Identifier	size		62745	1					
ANR	63340	Identifier	real_size		62745	1					
ANR	63341	ExpressionStatement	dbg -> filename = __zend_filename	1568:5:48086:48117	62745	2	True				
ANR	63342	AssignmentExpression	dbg -> filename = __zend_filename		62745	0		=			
ANR	63343	PtrMemberAccess	dbg -> filename		62745	0					
ANR	63344	Identifier	dbg		62745	0					
ANR	63345	Identifier	filename		62745	1					
ANR	63346	Identifier	__zend_filename		62745	1					
ANR	63347	ExpressionStatement	dbg -> orig_filename = __zend_orig_filename	1569:5:48124:48165	62745	3	True				
ANR	63348	AssignmentExpression	dbg -> orig_filename = __zend_orig_filename		62745	0		=			
ANR	63349	PtrMemberAccess	dbg -> orig_filename		62745	0					
ANR	63350	Identifier	dbg		62745	0					
ANR	63351	Identifier	orig_filename		62745	1					
ANR	63352	Identifier	__zend_orig_filename		62745	1					
ANR	63353	ExpressionStatement	dbg -> lineno = __zend_lineno	1570:5:48172:48199	62745	4	True				
ANR	63354	AssignmentExpression	dbg -> lineno = __zend_lineno		62745	0		=			
ANR	63355	PtrMemberAccess	dbg -> lineno		62745	0					
ANR	63356	Identifier	dbg		62745	0					
ANR	63357	Identifier	lineno		62745	1					
ANR	63358	Identifier	__zend_lineno		62745	1					
ANR	63359	ExpressionStatement	dbg -> orig_lineno = __zend_orig_lineno	1571:5:48206:48243	62745	5	True				
ANR	63360	AssignmentExpression	dbg -> orig_lineno = __zend_orig_lineno		62745	0		=			
ANR	63361	PtrMemberAccess	dbg -> orig_lineno		62745	0					
ANR	63362	Identifier	dbg		62745	0					
ANR	63363	Identifier	orig_lineno		62745	1					
ANR	63364	Identifier	__zend_orig_lineno		62745	1					
ANR	63365	ReturnStatement	return ptr ;	1573:5:48257:48267	62745	6	True				
ANR	63366	Identifier	ptr		62745	0					
ANR	63367	ElseStatement	else		62745	0					
ANR	63368	IfStatement	if ( new_size < old_size )		62745	0					
ANR	63369	Condition	new_size < old_size	1574:15:48284:48302	62745	0	True				
ANR	63370	RelationalExpression	new_size < old_size		62745	0		<			
ANR	63371	Identifier	new_size		62745	0					
ANR	63372	Identifier	old_size		62745	1					
ANR	63373	CompoundStatement		137:5:4946:5017	62745	1					
ANR	63374	IdentifierDeclStatement	int new_pages_count = ( int ) ( new_size / ZEND_MM_PAGE_SIZE ) ;	1576:5:48339:48396	62745	0	True				
ANR	63375	IdentifierDecl	new_pages_count = ( int ) ( new_size / ZEND_MM_PAGE_SIZE )		62745	0					
ANR	63376	IdentifierDeclType	int		62745	0					
ANR	63377	Identifier	new_pages_count		62745	1					
ANR	63378	AssignmentExpression	new_pages_count = ( int ) ( new_size / ZEND_MM_PAGE_SIZE )		62745	2		=			
ANR	63379	Identifier	new_pages_count		62745	0					
ANR	63380	CastExpression	( int ) ( new_size / ZEND_MM_PAGE_SIZE )		62745	1					
ANR	63381	CastTarget	int		62745	0					
ANR	63382	MultiplicativeExpression	new_size / ZEND_MM_PAGE_SIZE		62745	1		/			
ANR	63383	Identifier	new_size		62745	0					
ANR	63384	Identifier	ZEND_MM_PAGE_SIZE		62745	1					
ANR	63385	IdentifierDeclStatement	int rest_pages_count = ( int ) ( ( old_size - new_size ) / ZEND_MM_PAGE_SIZE ) ;	1577:5:48403:48474	62745	1	True				
ANR	63386	IdentifierDecl	rest_pages_count = ( int ) ( ( old_size - new_size ) / ZEND_MM_PAGE_SIZE )		62745	0					
ANR	63387	IdentifierDeclType	int		62745	0					
ANR	63388	Identifier	rest_pages_count		62745	1					
ANR	63389	AssignmentExpression	rest_pages_count = ( int ) ( ( old_size - new_size ) / ZEND_MM_PAGE_SIZE )		62745	2		=			
ANR	63390	Identifier	rest_pages_count		62745	0					
ANR	63391	CastExpression	( int ) ( ( old_size - new_size ) / ZEND_MM_PAGE_SIZE )		62745	1					
ANR	63392	CastTarget	int		62745	0					
ANR	63393	MultiplicativeExpression	( old_size - new_size ) / ZEND_MM_PAGE_SIZE		62745	1		/			
ANR	63394	AdditiveExpression	old_size - new_size		62745	0		-			
ANR	63395	Identifier	old_size		62745	0					
ANR	63396	Identifier	new_size		62745	1					
ANR	63397	Identifier	ZEND_MM_PAGE_SIZE		62745	1					
ANR	63398	ExpressionStatement	heap -> size -= rest_pages_count * ZEND_MM_PAGE_SIZE	1580:5:48499:48549	62745	2	True				
ANR	63399	AssignmentExpression	heap -> size -= rest_pages_count * ZEND_MM_PAGE_SIZE		62745	0		-=			
ANR	63400	PtrMemberAccess	heap -> size		62745	0					
ANR	63401	Identifier	heap		62745	0					
ANR	63402	Identifier	size		62745	1					
ANR	63403	MultiplicativeExpression	rest_pages_count * ZEND_MM_PAGE_SIZE		62745	1		*			
ANR	63404	Identifier	rest_pages_count		62745	0					
ANR	63405	Identifier	ZEND_MM_PAGE_SIZE		62745	1					
ANR	63406	ExpressionStatement	chunk -> map [ page_num ] = ZEND_MM_LRUN ( new_pages_count )	1582:5:48563:48615	62745	3	True				
ANR	63407	AssignmentExpression	chunk -> map [ page_num ] = ZEND_MM_LRUN ( new_pages_count )		62745	0		=			
ANR	63408	ArrayIndexing	chunk -> map [ page_num ]		62745	0					
ANR	63409	PtrMemberAccess	chunk -> map		62745	0					
ANR	63410	Identifier	chunk		62745	0					
ANR	63411	Identifier	map		62745	1					
ANR	63412	Identifier	page_num		62745	1					
ANR	63413	CallExpression	ZEND_MM_LRUN ( new_pages_count )		62745	1					
ANR	63414	Callee	ZEND_MM_LRUN		62745	0					
ANR	63415	Identifier	ZEND_MM_LRUN		62745	0					
ANR	63416	ArgumentList	new_pages_count		62745	1					
ANR	63417	Argument	new_pages_count		62745	0					
ANR	63418	Identifier	new_pages_count		62745	0					
ANR	63419	ExpressionStatement	chunk -> free_pages += rest_pages_count	1583:5:48622:48659	62745	4	True				
ANR	63420	AssignmentExpression	chunk -> free_pages += rest_pages_count		62745	0		+=			
ANR	63421	PtrMemberAccess	chunk -> free_pages		62745	0					
ANR	63422	Identifier	chunk		62745	0					
ANR	63423	Identifier	free_pages		62745	1					
ANR	63424	Identifier	rest_pages_count		62745	1					
ANR	63425	ExpressionStatement	"zend_mm_bitset_reset_range ( chunk -> free_map , page_num + new_pages_count , rest_pages_count )"	1584:5:48666:48755	62745	5	True				
ANR	63426	CallExpression	"zend_mm_bitset_reset_range ( chunk -> free_map , page_num + new_pages_count , rest_pages_count )"		62745	0					
ANR	63427	Callee	zend_mm_bitset_reset_range		62745	0					
ANR	63428	Identifier	zend_mm_bitset_reset_range		62745	0					
ANR	63429	ArgumentList	chunk -> free_map		62745	1					
ANR	63430	Argument	chunk -> free_map		62745	0					
ANR	63431	PtrMemberAccess	chunk -> free_map		62745	0					
ANR	63432	Identifier	chunk		62745	0					
ANR	63433	Identifier	free_map		62745	1					
ANR	63434	Argument	page_num + new_pages_count		62745	1					
ANR	63435	AdditiveExpression	page_num + new_pages_count		62745	0		+			
ANR	63436	Identifier	page_num		62745	0					
ANR	63437	Identifier	new_pages_count		62745	1					
ANR	63438	Argument	rest_pages_count		62745	2					
ANR	63439	Identifier	rest_pages_count		62745	0					
ANR	63440	ExpressionStatement	"dbg = zend_mm_get_debug_info ( heap , ptr )"	1586:5:48777:48816	62745	6	True				
ANR	63441	AssignmentExpression	"dbg = zend_mm_get_debug_info ( heap , ptr )"		62745	0		=			
ANR	63442	Identifier	dbg		62745	0					
ANR	63443	CallExpression	"zend_mm_get_debug_info ( heap , ptr )"		62745	1					
ANR	63444	Callee	zend_mm_get_debug_info		62745	0					
ANR	63445	Identifier	zend_mm_get_debug_info		62745	0					
ANR	63446	ArgumentList	heap		62745	1					
ANR	63447	Argument	heap		62745	0					
ANR	63448	Identifier	heap		62745	0					
ANR	63449	Argument	ptr		62745	1					
ANR	63450	Identifier	ptr		62745	0					
ANR	63451	ExpressionStatement	dbg -> size = real_size	1587:5:48823:48844	62745	7	True				
ANR	63452	AssignmentExpression	dbg -> size = real_size		62745	0		=			
ANR	63453	PtrMemberAccess	dbg -> size		62745	0					
ANR	63454	Identifier	dbg		62745	0					
ANR	63455	Identifier	size		62745	1					
ANR	63456	Identifier	real_size		62745	1					
ANR	63457	ExpressionStatement	dbg -> filename = __zend_filename	1588:5:48851:48882	62745	8	True				
ANR	63458	AssignmentExpression	dbg -> filename = __zend_filename		62745	0		=			
ANR	63459	PtrMemberAccess	dbg -> filename		62745	0					
ANR	63460	Identifier	dbg		62745	0					
ANR	63461	Identifier	filename		62745	1					
ANR	63462	Identifier	__zend_filename		62745	1					
ANR	63463	ExpressionStatement	dbg -> orig_filename = __zend_orig_filename	1589:5:48889:48930	62745	9	True				
ANR	63464	AssignmentExpression	dbg -> orig_filename = __zend_orig_filename		62745	0		=			
ANR	63465	PtrMemberAccess	dbg -> orig_filename		62745	0					
ANR	63466	Identifier	dbg		62745	0					
ANR	63467	Identifier	orig_filename		62745	1					
ANR	63468	Identifier	__zend_orig_filename		62745	1					
ANR	63469	ExpressionStatement	dbg -> lineno = __zend_lineno	1590:5:48937:48964	62745	10	True				
ANR	63470	AssignmentExpression	dbg -> lineno = __zend_lineno		62745	0		=			
ANR	63471	PtrMemberAccess	dbg -> lineno		62745	0					
ANR	63472	Identifier	dbg		62745	0					
ANR	63473	Identifier	lineno		62745	1					
ANR	63474	Identifier	__zend_lineno		62745	1					
ANR	63475	ExpressionStatement	dbg -> orig_lineno = __zend_orig_lineno	1591:5:48971:49008	62745	11	True				
ANR	63476	AssignmentExpression	dbg -> orig_lineno = __zend_orig_lineno		62745	0		=			
ANR	63477	PtrMemberAccess	dbg -> orig_lineno		62745	0					
ANR	63478	Identifier	dbg		62745	0					
ANR	63479	Identifier	orig_lineno		62745	1					
ANR	63480	Identifier	__zend_orig_lineno		62745	1					
ANR	63481	ReturnStatement	return ptr ;	1593:5:49022:49032	62745	12	True				
ANR	63482	Identifier	ptr		62745	0					
ANR	63483	ElseStatement	else		62745	0					
ANR	63484	CompoundStatement		156:5:5690:5747	62745	0					
ANR	63485	IdentifierDeclStatement	int new_pages_count = ( int ) ( new_size / ZEND_MM_PAGE_SIZE ) ;	1595:5:49083:49140	62745	0	True				
ANR	63486	IdentifierDecl	new_pages_count = ( int ) ( new_size / ZEND_MM_PAGE_SIZE )		62745	0					
ANR	63487	IdentifierDeclType	int		62745	0					
ANR	63488	Identifier	new_pages_count		62745	1					
ANR	63489	AssignmentExpression	new_pages_count = ( int ) ( new_size / ZEND_MM_PAGE_SIZE )		62745	2		=			
ANR	63490	Identifier	new_pages_count		62745	0					
ANR	63491	CastExpression	( int ) ( new_size / ZEND_MM_PAGE_SIZE )		62745	1					
ANR	63492	CastTarget	int		62745	0					
ANR	63493	MultiplicativeExpression	new_size / ZEND_MM_PAGE_SIZE		62745	1		/			
ANR	63494	Identifier	new_size		62745	0					
ANR	63495	Identifier	ZEND_MM_PAGE_SIZE		62745	1					
ANR	63496	IdentifierDeclStatement	int old_pages_count = ( int ) ( old_size / ZEND_MM_PAGE_SIZE ) ;	1596:5:49147:49204	62745	1	True				
ANR	63497	IdentifierDecl	old_pages_count = ( int ) ( old_size / ZEND_MM_PAGE_SIZE )		62745	0					
ANR	63498	IdentifierDeclType	int		62745	0					
ANR	63499	Identifier	old_pages_count		62745	1					
ANR	63500	AssignmentExpression	old_pages_count = ( int ) ( old_size / ZEND_MM_PAGE_SIZE )		62745	2		=			
ANR	63501	Identifier	old_pages_count		62745	0					
ANR	63502	CastExpression	( int ) ( old_size / ZEND_MM_PAGE_SIZE )		62745	1					
ANR	63503	CastTarget	int		62745	0					
ANR	63504	MultiplicativeExpression	old_size / ZEND_MM_PAGE_SIZE		62745	1		/			
ANR	63505	Identifier	old_size		62745	0					
ANR	63506	Identifier	ZEND_MM_PAGE_SIZE		62745	1					
ANR	63507	IfStatement	"if ( page_num + new_pages_count <= ZEND_MM_PAGES && zend_mm_bitset_is_free_range ( chunk -> free_map , page_num + old_pages_count , new_pages_count - old_pages_count ) )"		62745	2					
ANR	63508	Condition	"page_num + new_pages_count <= ZEND_MM_PAGES && zend_mm_bitset_is_free_range ( chunk -> free_map , page_num + old_pages_count , new_pages_count - old_pages_count )"	1599:9:49271:49434	62745	0	True				
ANR	63509	AndExpression	"page_num + new_pages_count <= ZEND_MM_PAGES && zend_mm_bitset_is_free_range ( chunk -> free_map , page_num + old_pages_count , new_pages_count - old_pages_count )"		62745	0		&&			
ANR	63510	RelationalExpression	page_num + new_pages_count <= ZEND_MM_PAGES		62745	0		<=			
ANR	63511	AdditiveExpression	page_num + new_pages_count		62745	0		+			
ANR	63512	Identifier	page_num		62745	0					
ANR	63513	Identifier	new_pages_count		62745	1					
ANR	63514	Identifier	ZEND_MM_PAGES		62745	1					
ANR	63515	CallExpression	"zend_mm_bitset_is_free_range ( chunk -> free_map , page_num + old_pages_count , new_pages_count - old_pages_count )"		62745	1					
ANR	63516	Callee	zend_mm_bitset_is_free_range		62745	0					
ANR	63517	Identifier	zend_mm_bitset_is_free_range		62745	0					
ANR	63518	ArgumentList	chunk -> free_map		62745	1					
ANR	63519	Argument	chunk -> free_map		62745	0					
ANR	63520	PtrMemberAccess	chunk -> free_map		62745	0					
ANR	63521	Identifier	chunk		62745	0					
ANR	63522	Identifier	free_map		62745	1					
ANR	63523	Argument	page_num + old_pages_count		62745	1					
ANR	63524	AdditiveExpression	page_num + old_pages_count		62745	0		+			
ANR	63525	Identifier	page_num		62745	0					
ANR	63526	Identifier	old_pages_count		62745	1					
ANR	63527	Argument	new_pages_count - old_pages_count		62745	2					
ANR	63528	AdditiveExpression	new_pages_count - old_pages_count		62745	0		-			
ANR	63529	Identifier	new_pages_count		62745	0					
ANR	63530	Identifier	old_pages_count		62745	1					
ANR	63531	CompoundStatement		160:119:5980:5980	62745	1					
ANR	63532	DoStatement	do		62745	0					
ANR	63533	CompoundStatement		164:7:6074:6109	62745	0					
ANR	63534	IdentifierDeclStatement	size_t size = heap -> size + ( new_size - old_size ) ;	1603:7:49474:49522	62745	0	True				
ANR	63535	IdentifierDecl	size = heap -> size + ( new_size - old_size )		62745	0					
ANR	63536	IdentifierDeclType	size_t		62745	0					
ANR	63537	Identifier	size		62745	1					
ANR	63538	AssignmentExpression	size = heap -> size + ( new_size - old_size )		62745	2		=			
ANR	63539	Identifier	size		62745	0					
ANR	63540	AdditiveExpression	heap -> size + ( new_size - old_size )		62745	1		+			
ANR	63541	PtrMemberAccess	heap -> size		62745	0					
ANR	63542	Identifier	heap		62745	0					
ANR	63543	Identifier	size		62745	1					
ANR	63544	AdditiveExpression	new_size - old_size		62745	1		-			
ANR	63545	Identifier	new_size		62745	0					
ANR	63546	Identifier	old_size		62745	1					
ANR	63547	IdentifierDeclStatement	"size_t peak = MAX ( heap -> peak , size ) ;"	1604:7:49531:49566	62745	1	True				
ANR	63548	IdentifierDecl	"peak = MAX ( heap -> peak , size )"		62745	0					
ANR	63549	IdentifierDeclType	size_t		62745	0					
ANR	63550	Identifier	peak		62745	1					
ANR	63551	AssignmentExpression	"peak = MAX ( heap -> peak , size )"		62745	2		=			
ANR	63552	Identifier	peak		62745	0					
ANR	63553	CallExpression	"MAX ( heap -> peak , size )"		62745	1					
ANR	63554	Callee	MAX		62745	0					
ANR	63555	Identifier	MAX		62745	0					
ANR	63556	ArgumentList	heap -> peak		62745	1					
ANR	63557	Argument	heap -> peak		62745	0					
ANR	63558	PtrMemberAccess	heap -> peak		62745	0					
ANR	63559	Identifier	heap		62745	0					
ANR	63560	Identifier	peak		62745	1					
ANR	63561	Argument	size		62745	1					
ANR	63562	Identifier	size		62745	0					
ANR	63563	ExpressionStatement	heap -> size = size	1605:7:49575:49592	62745	2	True				
ANR	63564	AssignmentExpression	heap -> size = size		62745	0		=			
ANR	63565	PtrMemberAccess	heap -> size		62745	0					
ANR	63566	Identifier	heap		62745	0					
ANR	63567	Identifier	size		62745	1					
ANR	63568	Identifier	size		62745	1					
ANR	63569	ExpressionStatement	heap -> peak = peak	1606:7:49601:49618	62745	3	True				
ANR	63570	AssignmentExpression	heap -> peak = peak		62745	0		=			
ANR	63571	PtrMemberAccess	heap -> peak		62745	0					
ANR	63572	Identifier	heap		62745	0					
ANR	63573	Identifier	peak		62745	1					
ANR	63574	Identifier	peak		62745	1					
ANR	63575	Condition	0	1607:15:49635:49635	62745	1	True				
ANR	63576	PrimaryExpression	0		62745	0					
ANR	63577	ExpressionStatement	chunk -> free_pages -= new_pages_count - old_pages_count	1609:6:49652:49706	62745	1	True				
ANR	63578	AssignmentExpression	chunk -> free_pages -= new_pages_count - old_pages_count		62745	0		-=			
ANR	63579	PtrMemberAccess	chunk -> free_pages		62745	0					
ANR	63580	Identifier	chunk		62745	0					
ANR	63581	Identifier	free_pages		62745	1					
ANR	63582	AdditiveExpression	new_pages_count - old_pages_count		62745	1		-			
ANR	63583	Identifier	new_pages_count		62745	0					
ANR	63584	Identifier	old_pages_count		62745	1					
ANR	63585	ExpressionStatement	"zend_mm_bitset_set_range ( chunk -> free_map , page_num + old_pages_count , new_pages_count - old_pages_count )"	1610:6:49714:49818	62745	2	True				
ANR	63586	CallExpression	"zend_mm_bitset_set_range ( chunk -> free_map , page_num + old_pages_count , new_pages_count - old_pages_count )"		62745	0					
ANR	63587	Callee	zend_mm_bitset_set_range		62745	0					
ANR	63588	Identifier	zend_mm_bitset_set_range		62745	0					
ANR	63589	ArgumentList	chunk -> free_map		62745	1					
ANR	63590	Argument	chunk -> free_map		62745	0					
ANR	63591	PtrMemberAccess	chunk -> free_map		62745	0					
ANR	63592	Identifier	chunk		62745	0					
ANR	63593	Identifier	free_map		62745	1					
ANR	63594	Argument	page_num + old_pages_count		62745	1					
ANR	63595	AdditiveExpression	page_num + old_pages_count		62745	0		+			
ANR	63596	Identifier	page_num		62745	0					
ANR	63597	Identifier	old_pages_count		62745	1					
ANR	63598	Argument	new_pages_count - old_pages_count		62745	2					
ANR	63599	AdditiveExpression	new_pages_count - old_pages_count		62745	0		-			
ANR	63600	Identifier	new_pages_count		62745	0					
ANR	63601	Identifier	old_pages_count		62745	1					
ANR	63602	ExpressionStatement	chunk -> map [ page_num ] = ZEND_MM_LRUN ( new_pages_count )	1611:6:49826:49878	62745	3	True				
ANR	63603	AssignmentExpression	chunk -> map [ page_num ] = ZEND_MM_LRUN ( new_pages_count )		62745	0		=			
ANR	63604	ArrayIndexing	chunk -> map [ page_num ]		62745	0					
ANR	63605	PtrMemberAccess	chunk -> map		62745	0					
ANR	63606	Identifier	chunk		62745	0					
ANR	63607	Identifier	map		62745	1					
ANR	63608	Identifier	page_num		62745	1					
ANR	63609	CallExpression	ZEND_MM_LRUN ( new_pages_count )		62745	1					
ANR	63610	Callee	ZEND_MM_LRUN		62745	0					
ANR	63611	Identifier	ZEND_MM_LRUN		62745	0					
ANR	63612	ArgumentList	new_pages_count		62745	1					
ANR	63613	Argument	new_pages_count		62745	0					
ANR	63614	Identifier	new_pages_count		62745	0					
ANR	63615	ExpressionStatement	"dbg = zend_mm_get_debug_info ( heap , ptr )"	1613:6:49901:49940	62745	4	True				
ANR	63616	AssignmentExpression	"dbg = zend_mm_get_debug_info ( heap , ptr )"		62745	0		=			
ANR	63617	Identifier	dbg		62745	0					
ANR	63618	CallExpression	"zend_mm_get_debug_info ( heap , ptr )"		62745	1					
ANR	63619	Callee	zend_mm_get_debug_info		62745	0					
ANR	63620	Identifier	zend_mm_get_debug_info		62745	0					
ANR	63621	ArgumentList	heap		62745	1					
ANR	63622	Argument	heap		62745	0					
ANR	63623	Identifier	heap		62745	0					
ANR	63624	Argument	ptr		62745	1					
ANR	63625	Identifier	ptr		62745	0					
ANR	63626	ExpressionStatement	dbg -> size = real_size	1614:6:49948:49969	62745	5	True				
ANR	63627	AssignmentExpression	dbg -> size = real_size		62745	0		=			
ANR	63628	PtrMemberAccess	dbg -> size		62745	0					
ANR	63629	Identifier	dbg		62745	0					
ANR	63630	Identifier	size		62745	1					
ANR	63631	Identifier	real_size		62745	1					
ANR	63632	ExpressionStatement	dbg -> filename = __zend_filename	1615:6:49977:50008	62745	6	True				
ANR	63633	AssignmentExpression	dbg -> filename = __zend_filename		62745	0		=			
ANR	63634	PtrMemberAccess	dbg -> filename		62745	0					
ANR	63635	Identifier	dbg		62745	0					
ANR	63636	Identifier	filename		62745	1					
ANR	63637	Identifier	__zend_filename		62745	1					
ANR	63638	ExpressionStatement	dbg -> orig_filename = __zend_orig_filename	1616:6:50016:50057	62745	7	True				
ANR	63639	AssignmentExpression	dbg -> orig_filename = __zend_orig_filename		62745	0		=			
ANR	63640	PtrMemberAccess	dbg -> orig_filename		62745	0					
ANR	63641	Identifier	dbg		62745	0					
ANR	63642	Identifier	orig_filename		62745	1					
ANR	63643	Identifier	__zend_orig_filename		62745	1					
ANR	63644	ExpressionStatement	dbg -> lineno = __zend_lineno	1617:6:50065:50092	62745	8	True				
ANR	63645	AssignmentExpression	dbg -> lineno = __zend_lineno		62745	0		=			
ANR	63646	PtrMemberAccess	dbg -> lineno		62745	0					
ANR	63647	Identifier	dbg		62745	0					
ANR	63648	Identifier	lineno		62745	1					
ANR	63649	Identifier	__zend_lineno		62745	1					
ANR	63650	ExpressionStatement	dbg -> orig_lineno = __zend_orig_lineno	1618:6:50100:50137	62745	9	True				
ANR	63651	AssignmentExpression	dbg -> orig_lineno = __zend_orig_lineno		62745	0		=			
ANR	63652	PtrMemberAccess	dbg -> orig_lineno		62745	0					
ANR	63653	Identifier	dbg		62745	0					
ANR	63654	Identifier	orig_lineno		62745	1					
ANR	63655	Identifier	__zend_orig_lineno		62745	1					
ANR	63656	ReturnStatement	return ptr ;	1620:6:50152:50162	62745	10	True				
ANR	63657	Identifier	ptr		62745	0					
ANR	63658	ExpressionStatement	size = real_size	1626:2:50203:50219	62745	7	True				
ANR	63659	AssignmentExpression	size = real_size		62745	0		=			
ANR	63660	Identifier	size		62745	0					
ANR	63661	Identifier	real_size		62745	1					
ANR	63662	DoStatement	do		62745	8					
ANR	63663	CompoundStatement		194:2:6859:6898	62745	0					
ANR	63664	IdentifierDeclStatement	size_t orig_peak = heap -> peak ;	1633:2:50283:50312	62745	0	True				
ANR	63665	IdentifierDecl	orig_peak = heap -> peak		62745	0					
ANR	63666	IdentifierDeclType	size_t		62745	0					
ANR	63667	Identifier	orig_peak		62745	1					
ANR	63668	AssignmentExpression	orig_peak = heap -> peak		62745	2		=			
ANR	63669	Identifier	orig_peak		62745	0					
ANR	63670	PtrMemberAccess	heap -> peak		62745	1					
ANR	63671	Identifier	heap		62745	0					
ANR	63672	Identifier	peak		62745	1					
ANR	63673	IdentifierDeclStatement	size_t orig_real_peak = heap -> real_peak ;	1634:2:50316:50355	62745	1	True				
ANR	63674	IdentifierDecl	orig_real_peak = heap -> real_peak		62745	0					
ANR	63675	IdentifierDeclType	size_t		62745	0					
ANR	63676	Identifier	orig_real_peak		62745	1					
ANR	63677	AssignmentExpression	orig_real_peak = heap -> real_peak		62745	2		=			
ANR	63678	Identifier	orig_real_peak		62745	0					
ANR	63679	PtrMemberAccess	heap -> real_peak		62745	1					
ANR	63680	Identifier	heap		62745	0					
ANR	63681	Identifier	real_peak		62745	1					
ANR	63682	Statement	ret	1636:1:50365:50367	62745	2	True				
ANR	63683	Statement	=	1636:5:50369:50369	62745	3	True				
ANR	63684	Statement	zend_mm_alloc_heap	1636:7:50371:50388	62745	4	True				
ANR	63685	Statement	(	1636:25:50389:50389	62745	5	True				
ANR	63686	Statement	heap	1636:26:50390:50393	62745	6	True				
ANR	63687	Statement	","	1636:30:50394:50394	62745	7	True				
ANR	63688	Statement	size	1636:32:50396:50399	62745	8	True				
ANR	63689	Statement	ZEND_FILE_LINE_RELAY_CC	1636:37:50401:50423	62745	9	True				
ANR	63690	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	1636:61:50425:50452	62745	10	True				
ANR	63691	Statement	)	1636:89:50453:50453	62745	11	True				
ANR	63692	ExpressionStatement		1636:90:50454:50454	62745	12	True				
ANR	63693	ExpressionStatement	"memcpy ( ret , ptr , MIN ( old_size , copy_size ) )"	1637:1:50457:50499	62745	13	True				
ANR	63694	CallExpression	"memcpy ( ret , ptr , MIN ( old_size , copy_size ) )"		62745	0					
ANR	63695	Callee	memcpy		62745	0					
ANR	63696	Identifier	memcpy		62745	0					
ANR	63697	ArgumentList	ret		62745	1					
ANR	63698	Argument	ret		62745	0					
ANR	63699	Identifier	ret		62745	0					
ANR	63700	Argument	ptr		62745	1					
ANR	63701	Identifier	ptr		62745	0					
ANR	63702	Argument	"MIN ( old_size , copy_size )"		62745	2					
ANR	63703	CallExpression	"MIN ( old_size , copy_size )"		62745	0					
ANR	63704	Callee	MIN		62745	0					
ANR	63705	Identifier	MIN		62745	0					
ANR	63706	ArgumentList	old_size		62745	1					
ANR	63707	Argument	old_size		62745	0					
ANR	63708	Identifier	old_size		62745	0					
ANR	63709	Argument	copy_size		62745	1					
ANR	63710	Identifier	copy_size		62745	0					
ANR	63711	Statement	zend_mm_free_heap	1638:1:50502:50518	62745	14	True				
ANR	63712	Statement	(	1638:18:50519:50519	62745	15	True				
ANR	63713	Statement	heap	1638:19:50520:50523	62745	16	True				
ANR	63714	Statement	","	1638:23:50524:50524	62745	17	True				
ANR	63715	Statement	ptr	1638:25:50526:50528	62745	18	True				
ANR	63716	Statement	ZEND_FILE_LINE_RELAY_CC	1638:29:50530:50552	62745	19	True				
ANR	63717	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	1638:53:50554:50581	62745	20	True				
ANR	63718	Statement	)	1638:81:50582:50582	62745	21	True				
ANR	63719	ExpressionStatement		1638:82:50583:50583	62745	22	True				
ANR	63720	ExpressionStatement	"heap -> peak = MAX ( orig_peak , heap -> size )"	1640:2:50604:50643	62745	23	True				
ANR	63721	AssignmentExpression	"heap -> peak = MAX ( orig_peak , heap -> size )"		62745	0		=			
ANR	63722	PtrMemberAccess	heap -> peak		62745	0					
ANR	63723	Identifier	heap		62745	0					
ANR	63724	Identifier	peak		62745	1					
ANR	63725	CallExpression	"MAX ( orig_peak , heap -> size )"		62745	1					
ANR	63726	Callee	MAX		62745	0					
ANR	63727	Identifier	MAX		62745	0					
ANR	63728	ArgumentList	orig_peak		62745	1					
ANR	63729	Argument	orig_peak		62745	0					
ANR	63730	Identifier	orig_peak		62745	0					
ANR	63731	Argument	heap -> size		62745	1					
ANR	63732	PtrMemberAccess	heap -> size		62745	0					
ANR	63733	Identifier	heap		62745	0					
ANR	63734	Identifier	size		62745	1					
ANR	63735	ExpressionStatement	"heap -> real_peak = MAX ( orig_real_peak , heap -> real_size )"	1641:2:50647:50701	62745	24	True				
ANR	63736	AssignmentExpression	"heap -> real_peak = MAX ( orig_real_peak , heap -> real_size )"		62745	0		=			
ANR	63737	PtrMemberAccess	heap -> real_peak		62745	0					
ANR	63738	Identifier	heap		62745	0					
ANR	63739	Identifier	real_peak		62745	1					
ANR	63740	CallExpression	"MAX ( orig_real_peak , heap -> real_size )"		62745	1					
ANR	63741	Callee	MAX		62745	0					
ANR	63742	Identifier	MAX		62745	0					
ANR	63743	ArgumentList	orig_real_peak		62745	1					
ANR	63744	Argument	orig_real_peak		62745	0					
ANR	63745	Identifier	orig_real_peak		62745	0					
ANR	63746	Argument	heap -> real_size		62745	1					
ANR	63747	PtrMemberAccess	heap -> real_size		62745	0					
ANR	63748	Identifier	heap		62745	0					
ANR	63749	Identifier	real_size		62745	1					
ANR	63750	Condition	0	1642:10:50713:50713	62745	1	True				
ANR	63751	PrimaryExpression	0		62745	0					
ANR	63752	ReturnStatement	return ret ;	1644:1:50725:50735	62745	9	True				
ANR	63753	Identifier	ret		62745	0					
ANR	63754	ReturnType	static void *		62745	1					
ANR	63755	Identifier	zend_mm_realloc_heap		62745	2					
ANR	63756	ParameterList	"zend_mm_heap * heap , void * ptr , size_t size , size_t copy_size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC"		62745	3					
ANR	63757	Parameter	zend_mm_heap * heap	1440:34:43353:43370	62745	0	True				
ANR	63758	ParameterType	zend_mm_heap *		62745	0					
ANR	63759	Identifier	heap		62745	1					
ANR	63760	Parameter	void * ptr	1440:54:43373:43381	62745	1	True				
ANR	63761	ParameterType	void *		62745	0					
ANR	63762	Identifier	ptr		62745	1					
ANR	63763	Parameter	size_t size	1440:65:43384:43394	62745	2	True				
ANR	63764	ParameterType	size_t		62745	0					
ANR	63765	Identifier	size		62745	1					
ANR	63766	Parameter	size_t copy_size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC	1440:78:43397:43453	62745	3	True				
ANR	63767	ParameterType	size_t copy_size ZEND_FILE_LINE_DC		62745	0					
ANR	63768	Identifier	ZEND_FILE_LINE_ORIG_DC		62745	1					
ANR	63769	CFGEntryNode	ENTRY		62745		True				
ANR	63770	CFGExitNode	EXIT		62745		True				
ANR	63771	Symbol	zend_mm_chunk_extend		62745						
ANR	63772	Symbol	ZEND_MM_PAGES		62745						
ANR	63773	Symbol	rest_pages_count		62745						
ANR	63774	Symbol	orig_real_peak		62745						
ANR	63775	Symbol	orig_peak		62745						
ANR	63776	Symbol	dbg -> orig_filename		62745						
ANR	63777	Symbol	dbg -> orig_lineno		62745						
ANR	63778	Symbol	ZEND_MM_CHUNK_SIZE		62745						
ANR	63779	Symbol	ZEND_MM_SMALL_SIZE_TO_BIN		62745						
ANR	63780	Symbol	info		62745						
ANR	63781	Symbol	ret		62745						
ANR	63782	Symbol	NULL		62745						
ANR	63783	Symbol	__zend_lineno		62745						
ANR	63784	Symbol	ZEND_MM_IS_SRUN		62745						
ANR	63785	Symbol	dbg		62745						
ANR	63786	Symbol	heap -> real_size		62745						
ANR	63787	Symbol	ZEND_MM_MAX_SMALL_SIZE		62745						
ANR	63788	Symbol	page_offset		62745						
ANR	63789	Symbol	chunk -> heap		62745						
ANR	63790	Symbol	ZEND_MM_ALIGNED_OFFSET		62745						
ANR	63791	Symbol	heap -> peak		62745						
ANR	63792	Symbol	MIN		62745						
ANR	63793	Symbol	size		62745						
ANR	63794	Symbol	copy_size		62745						
ANR	63795	Symbol	* chunk -> map		62745						
ANR	63796	Symbol	new_pages_count		62745						
ANR	63797	Symbol	chunk -> free_map		62745						
ANR	63798	Symbol	* heap		62745						
ANR	63799	Symbol	chunk -> map		62745						
ANR	63800	Symbol	old_size		62745						
ANR	63801	Symbol	zend_mm_gc		62745						
ANR	63802	Symbol	bin_num		62745						
ANR	63803	Symbol	zend_mm_get_debug_info		62745						
ANR	63804	Symbol	MAX		62745						
ANR	63805	Symbol	dbg -> size		62745						
ANR	63806	Symbol	heap -> real_peak		62745						
ANR	63807	Symbol	chunk		62745						
ANR	63808	Symbol	ZEND_FILE_LINE_ORIG_DC		62745						
ANR	63809	Symbol	real_size		62745						
ANR	63810	Symbol	ZEND_MM_SRUN_BIN_NUM		62745						
ANR	63811	Symbol	old_bin_num		62745						
ANR	63812	Symbol	dbg -> lineno		62745						
ANR	63813	Symbol	UNEXPECTED		62745						
ANR	63814	Symbol	heap -> size		62745						
ANR	63815	Symbol	zend_mm_bitset_is_free_range		62745						
ANR	63816	Symbol	* bin_data_size		62745						
ANR	63817	Symbol	__zend_orig_lineno		62745						
ANR	63818	Symbol	__zend_filename		62745						
ANR	63819	Symbol	* page_num		62745						
ANR	63820	Symbol	new_size		62745						
ANR	63821	Symbol	dbg -> filename		62745						
ANR	63822	Symbol	heap		62745						
ANR	63823	Symbol	ZEND_MM_ALIGNED_BASE		62745						
ANR	63824	Symbol	heap -> overflow		62745						
ANR	63825	Symbol	ZEND_MM_PAGE_SIZE		62745						
ANR	63826	Symbol	bin_data_size		62745						
ANR	63827	Symbol	ZEND_MM_ALIGNED_SIZE		62745						
ANR	63828	Symbol	* * chunk		62745						
ANR	63829	Symbol	__zend_orig_filename		62745						
ANR	63830	Symbol	ZEND_MM_MAX_LARGE_SIZE		62745						
ANR	63831	Symbol	page_num		62745						
ANR	63832	Symbol	chunk -> free_pages		62745						
ANR	63833	Symbol	peak		62745						
ANR	63834	Symbol	* dbg		62745						
ANR	63835	Symbol	* old_bin_num		62745						
ANR	63836	Symbol	ptr		62745						
ANR	63837	Symbol	ZEND_MM_ALIGNED_SIZE_EX		62745						
ANR	63838	Symbol	zend_mm_chunk_truncate		62745						
ANR	63839	Symbol	ZEND_MM_LRUN_PAGES		62745						
ANR	63840	Symbol	* chunk		62745						
ANR	63841	Symbol	REAL_PAGE_SIZE		62745						
ANR	63842	Symbol	ZEND_MM_LRUN		62745						
ANR	63843	Symbol	old_pages_count		62745						
ANR	63844	Symbol	heap -> limit		62745						
ANR	63845	DeclStmt									
ANR	63846	Decl							zend_mm_huge_list	zend_mm_huge_list *	list
ANR	63847	DeclStmt									
ANR	63848	Decl							zend_mm_huge_list	zend_mm_huge_list *	prev
ANR	63849	DeclStmt									
ANR	63850	Decl							zend_mm_huge_list	zend_mm_huge_list *	list
ANR	63851	DeclStmt									
ANR	63852	Decl							size_t	size_t	size
ANR	63853	DeclStmt									
ANR	63854	Decl							zend_mm_huge_list	zend_mm_huge_list *	list
ANR	63855	DeclStmt									
ANR	63856	Decl							zend_mm_huge_list	zend_mm_huge_list *	list
ANR	63857	Function	zend_mm_alloc_huge	1731:0:53153:55467							
ANR	63858	FunctionDef	"zend_mm_alloc_huge (zend_mm_heap * heap , size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC)"		63857	0					
ANR	63859	CompoundStatement		1732:0:53259:55467	63857	0					
ANR	63860	IdentifierDeclStatement	"size_t new_size = ZEND_MM_ALIGNED_SIZE_EX ( size , MAX ( REAL_PAGE_SIZE , ZEND_MM_CHUNK_SIZE ) ) ;"	1738:1:53474:53562	63857	0	True				
ANR	63861	IdentifierDecl	"new_size = ZEND_MM_ALIGNED_SIZE_EX ( size , MAX ( REAL_PAGE_SIZE , ZEND_MM_CHUNK_SIZE ) )"		63857	0					
ANR	63862	IdentifierDeclType	size_t		63857	0					
ANR	63863	Identifier	new_size		63857	1					
ANR	63864	AssignmentExpression	"new_size = ZEND_MM_ALIGNED_SIZE_EX ( size , MAX ( REAL_PAGE_SIZE , ZEND_MM_CHUNK_SIZE ) )"		63857	2		=			
ANR	63865	Identifier	new_size		63857	0					
ANR	63866	CallExpression	"ZEND_MM_ALIGNED_SIZE_EX ( size , MAX ( REAL_PAGE_SIZE , ZEND_MM_CHUNK_SIZE ) )"		63857	1					
ANR	63867	Callee	ZEND_MM_ALIGNED_SIZE_EX		63857	0					
ANR	63868	Identifier	ZEND_MM_ALIGNED_SIZE_EX		63857	0					
ANR	63869	ArgumentList	size		63857	1					
ANR	63870	Argument	size		63857	0					
ANR	63871	Identifier	size		63857	0					
ANR	63872	Argument	"MAX ( REAL_PAGE_SIZE , ZEND_MM_CHUNK_SIZE )"		63857	1					
ANR	63873	CallExpression	"MAX ( REAL_PAGE_SIZE , ZEND_MM_CHUNK_SIZE )"		63857	0					
ANR	63874	Callee	MAX		63857	0					
ANR	63875	Identifier	MAX		63857	0					
ANR	63876	ArgumentList	REAL_PAGE_SIZE		63857	1					
ANR	63877	Argument	REAL_PAGE_SIZE		63857	0					
ANR	63878	Identifier	REAL_PAGE_SIZE		63857	0					
ANR	63879	Argument	ZEND_MM_CHUNK_SIZE		63857	1					
ANR	63880	Identifier	ZEND_MM_CHUNK_SIZE		63857	0					
ANR	63881	IdentifierDeclStatement	void * ptr ;	1742:1:53644:53653	63857	1	True				
ANR	63882	IdentifierDecl	* ptr		63857	0					
ANR	63883	IdentifierDeclType	void *		63857	0					
ANR	63884	Identifier	ptr		63857	1					
ANR	63885	IfStatement	if ( UNEXPECTED ( heap -> real_size + new_size > heap -> limit ) )		63857	2					
ANR	63886	Condition	UNEXPECTED ( heap -> real_size + new_size > heap -> limit )	1745:5:53679:53730	63857	0	True				
ANR	63887	CallExpression	UNEXPECTED ( heap -> real_size + new_size > heap -> limit )		63857	0					
ANR	63888	Callee	UNEXPECTED		63857	0					
ANR	63889	Identifier	UNEXPECTED		63857	0					
ANR	63890	ArgumentList	heap -> real_size + new_size > heap -> limit		63857	1					
ANR	63891	Argument	heap -> real_size + new_size > heap -> limit		63857	0					
ANR	63892	RelationalExpression	heap -> real_size + new_size > heap -> limit		63857	0		>			
ANR	63893	AdditiveExpression	heap -> real_size + new_size		63857	0		+			
ANR	63894	PtrMemberAccess	heap -> real_size		63857	0					
ANR	63895	Identifier	heap		63857	0					
ANR	63896	Identifier	real_size		63857	1					
ANR	63897	Identifier	new_size		63857	1					
ANR	63898	PtrMemberAccess	heap -> limit		63857	1					
ANR	63899	Identifier	heap		63857	0					
ANR	63900	Identifier	limit		63857	1					
ANR	63901	CompoundStatement		14:59:473:473	63857	1					
ANR	63902	IfStatement	if ( zend_mm_gc ( heap ) && heap -> real_size + new_size <= heap -> limit )		63857	0					
ANR	63903	Condition	zend_mm_gc ( heap ) && heap -> real_size + new_size <= heap -> limit	1746:6:53741:53801	63857	0	True				
ANR	63904	AndExpression	zend_mm_gc ( heap ) && heap -> real_size + new_size <= heap -> limit		63857	0		&&			
ANR	63905	CallExpression	zend_mm_gc ( heap )		63857	0					
ANR	63906	Callee	zend_mm_gc		63857	0					
ANR	63907	Identifier	zend_mm_gc		63857	0					
ANR	63908	ArgumentList	heap		63857	1					
ANR	63909	Argument	heap		63857	0					
ANR	63910	Identifier	heap		63857	0					
ANR	63911	RelationalExpression	heap -> real_size + new_size <= heap -> limit		63857	1		<=			
ANR	63912	AdditiveExpression	heap -> real_size + new_size		63857	0		+			
ANR	63913	PtrMemberAccess	heap -> real_size		63857	0					
ANR	63914	Identifier	heap		63857	0					
ANR	63915	Identifier	real_size		63857	1					
ANR	63916	Identifier	new_size		63857	1					
ANR	63917	PtrMemberAccess	heap -> limit		63857	1					
ANR	63918	Identifier	heap		63857	0					
ANR	63919	Identifier	limit		63857	1					
ANR	63920	CompoundStatement		15:69:544:544	63857	1					
ANR	63921	ElseStatement	else		63857	0					
ANR	63922	IfStatement	if ( heap -> overflow == 0 )		63857	0					
ANR	63923	Condition	heap -> overflow == 0	1748:13:53833:53851	63857	0	True				
ANR	63924	EqualityExpression	heap -> overflow == 0		63857	0		==			
ANR	63925	PtrMemberAccess	heap -> overflow		63857	0					
ANR	63926	Identifier	heap		63857	0					
ANR	63927	Identifier	overflow		63857	1					
ANR	63928	PrimaryExpression	0		63857	1					
ANR	63929	CompoundStatement		17:34:594:594	63857	1					
ANR	63930	ExpressionStatement	"zend_mm_safe_error ( heap , ""Allowed memory size of %zu bytes exhausted at %s:%d (tried to allocate %zu bytes)"" , heap -> limit , __zend_filename , __zend_lineno , size )"	1750:3:53874:54034	63857	0	True				
ANR	63931	CallExpression	"zend_mm_safe_error ( heap , ""Allowed memory size of %zu bytes exhausted at %s:%d (tried to allocate %zu bytes)"" , heap -> limit , __zend_filename , __zend_lineno , size )"		63857	0					
ANR	63932	Callee	zend_mm_safe_error		63857	0					
ANR	63933	Identifier	zend_mm_safe_error		63857	0					
ANR	63934	ArgumentList	heap		63857	1					
ANR	63935	Argument	heap		63857	0					
ANR	63936	Identifier	heap		63857	0					
ANR	63937	Argument	"""Allowed memory size of %zu bytes exhausted at %s:%d (tried to allocate %zu bytes)"""		63857	1					
ANR	63938	PrimaryExpression	"""Allowed memory size of %zu bytes exhausted at %s:%d (tried to allocate %zu bytes)"""		63857	0					
ANR	63939	Argument	heap -> limit		63857	2					
ANR	63940	PtrMemberAccess	heap -> limit		63857	0					
ANR	63941	Identifier	heap		63857	0					
ANR	63942	Identifier	limit		63857	1					
ANR	63943	Argument	__zend_filename		63857	3					
ANR	63944	Identifier	__zend_filename		63857	0					
ANR	63945	Argument	__zend_lineno		63857	4					
ANR	63946	Identifier	__zend_lineno		63857	0					
ANR	63947	Argument	size		63857	5					
ANR	63948	Identifier	size		63857	0					
ANR	63949	ReturnStatement	return NULL ;	1754:3:54176:54187	63857	1	True				
ANR	63950	Identifier	NULL		63857	0					
ANR	63951	ExpressionStatement	"ptr = zend_mm_chunk_alloc ( heap , new_size , ZEND_MM_CHUNK_SIZE )"	1758:1:54204:54265	63857	3	True				
ANR	63952	AssignmentExpression	"ptr = zend_mm_chunk_alloc ( heap , new_size , ZEND_MM_CHUNK_SIZE )"		63857	0		=			
ANR	63953	Identifier	ptr		63857	0					
ANR	63954	CallExpression	"zend_mm_chunk_alloc ( heap , new_size , ZEND_MM_CHUNK_SIZE )"		63857	1					
ANR	63955	Callee	zend_mm_chunk_alloc		63857	0					
ANR	63956	Identifier	zend_mm_chunk_alloc		63857	0					
ANR	63957	ArgumentList	heap		63857	1					
ANR	63958	Argument	heap		63857	0					
ANR	63959	Identifier	heap		63857	0					
ANR	63960	Argument	new_size		63857	1					
ANR	63961	Identifier	new_size		63857	0					
ANR	63962	Argument	ZEND_MM_CHUNK_SIZE		63857	2					
ANR	63963	Identifier	ZEND_MM_CHUNK_SIZE		63857	0					
ANR	63964	IfStatement	if ( UNEXPECTED ( ptr == NULL ) )		63857	4					
ANR	63965	Condition	UNEXPECTED ( ptr == NULL )	1759:5:54272:54294	63857	0	True				
ANR	63966	CallExpression	UNEXPECTED ( ptr == NULL )		63857	0					
ANR	63967	Callee	UNEXPECTED		63857	0					
ANR	63968	Identifier	UNEXPECTED		63857	0					
ANR	63969	ArgumentList	ptr == NULL		63857	1					
ANR	63970	Argument	ptr == NULL		63857	0					
ANR	63971	EqualityExpression	ptr == NULL		63857	0		==			
ANR	63972	Identifier	ptr		63857	0					
ANR	63973	Identifier	NULL		63857	1					
ANR	63974	CompoundStatement		28:30:1037:1037	63857	1					
ANR	63975	IfStatement	"if ( zend_mm_gc ( heap ) && ( ptr = zend_mm_chunk_alloc ( heap , new_size , ZEND_MM_CHUNK_SIZE ) ) != NULL )"		63857	0					
ANR	63976	Condition	"zend_mm_gc ( heap ) && ( ptr = zend_mm_chunk_alloc ( heap , new_size , ZEND_MM_CHUNK_SIZE ) ) != NULL"	1761:6:54333:54429	63857	0	True				
ANR	63977	AndExpression	"zend_mm_gc ( heap ) && ( ptr = zend_mm_chunk_alloc ( heap , new_size , ZEND_MM_CHUNK_SIZE ) ) != NULL"		63857	0		&&			
ANR	63978	CallExpression	zend_mm_gc ( heap )		63857	0					
ANR	63979	Callee	zend_mm_gc		63857	0					
ANR	63980	Identifier	zend_mm_gc		63857	0					
ANR	63981	ArgumentList	heap		63857	1					
ANR	63982	Argument	heap		63857	0					
ANR	63983	Identifier	heap		63857	0					
ANR	63984	EqualityExpression	"( ptr = zend_mm_chunk_alloc ( heap , new_size , ZEND_MM_CHUNK_SIZE ) ) != NULL"		63857	1		!=			
ANR	63985	AssignmentExpression	"ptr = zend_mm_chunk_alloc ( heap , new_size , ZEND_MM_CHUNK_SIZE )"		63857	0		=			
ANR	63986	Identifier	ptr		63857	0					
ANR	63987	CallExpression	"zend_mm_chunk_alloc ( heap , new_size , ZEND_MM_CHUNK_SIZE )"		63857	1					
ANR	63988	Callee	zend_mm_chunk_alloc		63857	0					
ANR	63989	Identifier	zend_mm_chunk_alloc		63857	0					
ANR	63990	ArgumentList	heap		63857	1					
ANR	63991	Argument	heap		63857	0					
ANR	63992	Identifier	heap		63857	0					
ANR	63993	Argument	new_size		63857	1					
ANR	63994	Identifier	new_size		63857	0					
ANR	63995	Argument	ZEND_MM_CHUNK_SIZE		63857	2					
ANR	63996	Identifier	ZEND_MM_CHUNK_SIZE		63857	0					
ANR	63997	Identifier	NULL		63857	1					
ANR	63998	CompoundStatement		31:79:1172:1172	63857	1					
ANR	63999	ElseStatement	else		63857	0					
ANR	64000	CompoundStatement		33:9:1197:1197	63857	0					
ANR	64001	ExpressionStatement	"zend_mm_safe_error ( heap , ""Out of memory"" )"	1766:3:54481:54522	63857	0	True				
ANR	64002	CallExpression	"zend_mm_safe_error ( heap , ""Out of memory"" )"		63857	0					
ANR	64003	Callee	zend_mm_safe_error		63857	0					
ANR	64004	Identifier	zend_mm_safe_error		63857	0					
ANR	64005	ArgumentList	heap		63857	1					
ANR	64006	Argument	heap		63857	0					
ANR	64007	Identifier	heap		63857	0					
ANR	64008	Argument	"""Out of memory"""		63857	1					
ANR	64009	PrimaryExpression	"""Out of memory"""		63857	0					
ANR	64010	ReturnStatement	return NULL ;	1772:3:54828:54839	63857	1	True				
ANR	64011	Identifier	NULL		63857	0					
ANR	64012	Statement	zend_mm_add_huge_block	1776:1:54864:54885	63857	5	True				
ANR	64013	Statement	(	1776:23:54886:54886	63857	6	True				
ANR	64014	Statement	heap	1776:24:54887:54890	63857	7	True				
ANR	64015	Statement	","	1776:28:54891:54891	63857	8	True				
ANR	64016	Statement	ptr	1776:30:54893:54895	63857	9	True				
ANR	64017	Statement	","	1776:33:54896:54896	63857	10	True				
ANR	64018	Statement	new_size	1776:35:54898:54905	63857	11	True				
ANR	64019	Statement	","	1776:43:54906:54906	63857	12	True				
ANR	64020	Statement	size	1776:45:54908:54911	63857	13	True				
ANR	64021	Statement	ZEND_FILE_LINE_RELAY_CC	1776:50:54913:54935	63857	14	True				
ANR	64022	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	1776:74:54937:54964	63857	15	True				
ANR	64023	Statement	)	1776:102:54965:54965	63857	16	True				
ANR	64024	ExpressionStatement		1776:103:54966:54966	63857	17	True				
ANR	64025	DoStatement	do		63857	18					
ANR	64026	CompoundStatement		52:2:1889:1929	63857	0					
ANR	64027	IdentifierDeclStatement	size_t size = heap -> real_size + new_size ;	1782:2:55105:55145	63857	0	True				
ANR	64028	IdentifierDecl	size = heap -> real_size + new_size		63857	0					
ANR	64029	IdentifierDeclType	size_t		63857	0					
ANR	64030	Identifier	size		63857	1					
ANR	64031	AssignmentExpression	size = heap -> real_size + new_size		63857	2		=			
ANR	64032	Identifier	size		63857	0					
ANR	64033	AdditiveExpression	heap -> real_size + new_size		63857	1		+			
ANR	64034	PtrMemberAccess	heap -> real_size		63857	0					
ANR	64035	Identifier	heap		63857	0					
ANR	64036	Identifier	real_size		63857	1					
ANR	64037	Identifier	new_size		63857	1					
ANR	64038	IdentifierDeclStatement	"size_t peak = MAX ( heap -> real_peak , size ) ;"	1783:2:55149:55189	63857	1	True				
ANR	64039	IdentifierDecl	"peak = MAX ( heap -> real_peak , size )"		63857	0					
ANR	64040	IdentifierDeclType	size_t		63857	0					
ANR	64041	Identifier	peak		63857	1					
ANR	64042	AssignmentExpression	"peak = MAX ( heap -> real_peak , size )"		63857	2		=			
ANR	64043	Identifier	peak		63857	0					
ANR	64044	CallExpression	"MAX ( heap -> real_peak , size )"		63857	1					
ANR	64045	Callee	MAX		63857	0					
ANR	64046	Identifier	MAX		63857	0					
ANR	64047	ArgumentList	heap -> real_peak		63857	1					
ANR	64048	Argument	heap -> real_peak		63857	0					
ANR	64049	PtrMemberAccess	heap -> real_peak		63857	0					
ANR	64050	Identifier	heap		63857	0					
ANR	64051	Identifier	real_peak		63857	1					
ANR	64052	Argument	size		63857	1					
ANR	64053	Identifier	size		63857	0					
ANR	64054	ExpressionStatement	heap -> real_size = size	1784:2:55193:55215	63857	2	True				
ANR	64055	AssignmentExpression	heap -> real_size = size		63857	0		=			
ANR	64056	PtrMemberAccess	heap -> real_size		63857	0					
ANR	64057	Identifier	heap		63857	0					
ANR	64058	Identifier	real_size		63857	1					
ANR	64059	Identifier	size		63857	1					
ANR	64060	ExpressionStatement	heap -> real_peak = peak	1785:2:55219:55241	63857	3	True				
ANR	64061	AssignmentExpression	heap -> real_peak = peak		63857	0		=			
ANR	64062	PtrMemberAccess	heap -> real_peak		63857	0					
ANR	64063	Identifier	heap		63857	0					
ANR	64064	Identifier	real_peak		63857	1					
ANR	64065	Identifier	peak		63857	1					
ANR	64066	Condition	0	1786:10:55253:55253	63857	1	True				
ANR	64067	PrimaryExpression	0		63857	0					
ANR	64068	DoStatement	do		63857	19					
ANR	64069	CompoundStatement		58:2:2044:2079	63857	0					
ANR	64070	IdentifierDeclStatement	size_t size = heap -> size + new_size ;	1788:2:55265:55300	63857	0	True				
ANR	64071	IdentifierDecl	size = heap -> size + new_size		63857	0					
ANR	64072	IdentifierDeclType	size_t		63857	0					
ANR	64073	Identifier	size		63857	1					
ANR	64074	AssignmentExpression	size = heap -> size + new_size		63857	2		=			
ANR	64075	Identifier	size		63857	0					
ANR	64076	AdditiveExpression	heap -> size + new_size		63857	1		+			
ANR	64077	PtrMemberAccess	heap -> size		63857	0					
ANR	64078	Identifier	heap		63857	0					
ANR	64079	Identifier	size		63857	1					
ANR	64080	Identifier	new_size		63857	1					
ANR	64081	IdentifierDeclStatement	"size_t peak = MAX ( heap -> peak , size ) ;"	1789:2:55304:55339	63857	1	True				
ANR	64082	IdentifierDecl	"peak = MAX ( heap -> peak , size )"		63857	0					
ANR	64083	IdentifierDeclType	size_t		63857	0					
ANR	64084	Identifier	peak		63857	1					
ANR	64085	AssignmentExpression	"peak = MAX ( heap -> peak , size )"		63857	2		=			
ANR	64086	Identifier	peak		63857	0					
ANR	64087	CallExpression	"MAX ( heap -> peak , size )"		63857	1					
ANR	64088	Callee	MAX		63857	0					
ANR	64089	Identifier	MAX		63857	0					
ANR	64090	ArgumentList	heap -> peak		63857	1					
ANR	64091	Argument	heap -> peak		63857	0					
ANR	64092	PtrMemberAccess	heap -> peak		63857	0					
ANR	64093	Identifier	heap		63857	0					
ANR	64094	Identifier	peak		63857	1					
ANR	64095	Argument	size		63857	1					
ANR	64096	Identifier	size		63857	0					
ANR	64097	ExpressionStatement	heap -> size = size	1790:2:55343:55360	63857	2	True				
ANR	64098	AssignmentExpression	heap -> size = size		63857	0		=			
ANR	64099	PtrMemberAccess	heap -> size		63857	0					
ANR	64100	Identifier	heap		63857	0					
ANR	64101	Identifier	size		63857	1					
ANR	64102	Identifier	size		63857	1					
ANR	64103	ExpressionStatement	heap -> peak = peak	1791:2:55364:55381	63857	3	True				
ANR	64104	AssignmentExpression	heap -> peak = peak		63857	0		=			
ANR	64105	PtrMemberAccess	heap -> peak		63857	0					
ANR	64106	Identifier	heap		63857	0					
ANR	64107	Identifier	peak		63857	1					
ANR	64108	Identifier	peak		63857	1					
ANR	64109	Condition	0	1792:10:55393:55393	63857	1	True				
ANR	64110	PrimaryExpression	0		63857	0					
ANR	64111	ReturnStatement	return ptr ;	1796:1:55455:55465	63857	20	True				
ANR	64112	Identifier	ptr		63857	0					
ANR	64113	ReturnType	static void *		63857	1					
ANR	64114	Identifier	zend_mm_alloc_huge		63857	2					
ANR	64115	ParameterList	"zend_mm_heap * heap , size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC"		63857	3					
ANR	64116	Parameter	zend_mm_heap * heap	1731:32:53185:53202	63857	0	True				
ANR	64117	ParameterType	zend_mm_heap *		63857	0					
ANR	64118	Identifier	heap		63857	1					
ANR	64119	Parameter	size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC	1731:52:53205:53256	63857	1	True				
ANR	64120	ParameterType	size_t size ZEND_FILE_LINE_DC		63857	0					
ANR	64121	Identifier	ZEND_FILE_LINE_ORIG_DC		63857	1					
ANR	64122	CFGEntryNode	ENTRY		63857		True				
ANR	64123	CFGExitNode	EXIT		63857		True				
ANR	64124	Symbol	zend_mm_gc		63857						
ANR	64125	Symbol	NULL		63857						
ANR	64126	Symbol	MAX		63857						
ANR	64127	Symbol	__zend_lineno		63857						
ANR	64128	Symbol	heap -> real_size		63857						
ANR	64129	Symbol	heap -> real_peak		63857						
ANR	64130	Symbol	ZEND_FILE_LINE_ORIG_DC		63857						
ANR	64131	Symbol	peak		63857						
ANR	64132	Symbol	ZEND_MM_ALIGNED_SIZE_EX		63857						
ANR	64133	Symbol	ptr		63857						
ANR	64134	Symbol	UNEXPECTED		63857						
ANR	64135	Symbol	heap -> size		63857						
ANR	64136	Symbol	heap -> peak		63857						
ANR	64137	Symbol	size		63857						
ANR	64138	Symbol	REAL_PAGE_SIZE		63857						
ANR	64139	Symbol	__zend_filename		63857						
ANR	64140	Symbol	new_size		63857						
ANR	64141	Symbol	zend_mm_chunk_alloc		63857						
ANR	64142	Symbol	ZEND_MM_CHUNK_SIZE		63857						
ANR	64143	Symbol	heap		63857						
ANR	64144	Symbol	heap -> limit		63857						
ANR	64145	Symbol	* heap		63857						
ANR	64146	Symbol	heap -> overflow		63857						
ANR	64147	DeclStmt									
ANR	64148	Decl							size_t	size_t	size
ANR	64149	Function	zend_mm_init	1818:0:55998:57312							
ANR	64150	FunctionDef	zend_mm_init ()		64149	0					
ANR	64151	CompoundStatement		1819:0:56038:57312	64149	0					
ANR	64152	IdentifierDeclStatement	"zend_mm_chunk * chunk = ( zend_mm_chunk * ) zend_mm_chunk_alloc_int ( ZEND_MM_CHUNK_SIZE , ZEND_MM_CHUNK_SIZE ) ;"	1820:1:56041:56143	64149	0	True				
ANR	64153	IdentifierDecl	"* chunk = ( zend_mm_chunk * ) zend_mm_chunk_alloc_int ( ZEND_MM_CHUNK_SIZE , ZEND_MM_CHUNK_SIZE )"		64149	0					
ANR	64154	IdentifierDeclType	zend_mm_chunk *		64149	0					
ANR	64155	Identifier	chunk		64149	1					
ANR	64156	AssignmentExpression	"* chunk = ( zend_mm_chunk * ) zend_mm_chunk_alloc_int ( ZEND_MM_CHUNK_SIZE , ZEND_MM_CHUNK_SIZE )"		64149	2		=			
ANR	64157	Identifier	chunk		64149	0					
ANR	64158	CastExpression	"( zend_mm_chunk * ) zend_mm_chunk_alloc_int ( ZEND_MM_CHUNK_SIZE , ZEND_MM_CHUNK_SIZE )"		64149	1					
ANR	64159	CastTarget	zend_mm_chunk *		64149	0					
ANR	64160	CallExpression	"zend_mm_chunk_alloc_int ( ZEND_MM_CHUNK_SIZE , ZEND_MM_CHUNK_SIZE )"		64149	1					
ANR	64161	Callee	zend_mm_chunk_alloc_int		64149	0					
ANR	64162	Identifier	zend_mm_chunk_alloc_int		64149	0					
ANR	64163	ArgumentList	ZEND_MM_CHUNK_SIZE		64149	1					
ANR	64164	Argument	ZEND_MM_CHUNK_SIZE		64149	0					
ANR	64165	Identifier	ZEND_MM_CHUNK_SIZE		64149	0					
ANR	64166	Argument	ZEND_MM_CHUNK_SIZE		64149	1					
ANR	64167	Identifier	ZEND_MM_CHUNK_SIZE		64149	0					
ANR	64168	IdentifierDeclStatement	zend_mm_heap * heap ;	1821:1:56146:56164	64149	1	True				
ANR	64169	IdentifierDecl	* heap		64149	0					
ANR	64170	IdentifierDeclType	zend_mm_heap *		64149	0					
ANR	64171	Identifier	heap		64149	1					
ANR	64172	IfStatement	if ( UNEXPECTED ( chunk == NULL ) )		64149	2					
ANR	64173	Condition	UNEXPECTED ( chunk == NULL )	1823:5:56172:56196	64149	0	True				
ANR	64174	CallExpression	UNEXPECTED ( chunk == NULL )		64149	0					
ANR	64175	Callee	UNEXPECTED		64149	0					
ANR	64176	Identifier	UNEXPECTED		64149	0					
ANR	64177	ArgumentList	chunk == NULL		64149	1					
ANR	64178	Argument	chunk == NULL		64149	0					
ANR	64179	EqualityExpression	chunk == NULL		64149	0		==			
ANR	64180	Identifier	chunk		64149	0					
ANR	64181	Identifier	NULL		64149	1					
ANR	64182	CompoundStatement		5:32:160:160	64149	1					
ANR	64183	ExpressionStatement	"stderr_last_error ( ""Can't initialize heap"" )"	1826:2:56235:56277	64149	0	True				
ANR	64184	CallExpression	"stderr_last_error ( ""Can't initialize heap"" )"		64149	0					
ANR	64185	Callee	stderr_last_error		64149	0					
ANR	64186	Identifier	stderr_last_error		64149	0					
ANR	64187	ArgumentList	"""Can't initialize heap"""		64149	1					
ANR	64188	Argument	"""Can't initialize heap"""		64149	0					
ANR	64189	PrimaryExpression	"""Can't initialize heap"""		64149	0					
ANR	64190	ReturnStatement	return NULL ;	1831:2:56382:56393	64149	1	True				
ANR	64191	Identifier	NULL		64149	0					
ANR	64192	ExpressionStatement	heap = & chunk -> heap_slot	1833:1:56399:56423	64149	3	True				
ANR	64193	AssignmentExpression	heap = & chunk -> heap_slot		64149	0		=			
ANR	64194	Identifier	heap		64149	0					
ANR	64195	UnaryOperationExpression	& chunk -> heap_slot		64149	1					
ANR	64196	UnaryOperator	&		64149	0					
ANR	64197	PtrMemberAccess	chunk -> heap_slot		64149	1					
ANR	64198	Identifier	chunk		64149	0					
ANR	64199	Identifier	heap_slot		64149	1					
ANR	64200	ExpressionStatement	chunk -> heap = heap	1834:1:56426:56444	64149	4	True				
ANR	64201	AssignmentExpression	chunk -> heap = heap		64149	0		=			
ANR	64202	PtrMemberAccess	chunk -> heap		64149	0					
ANR	64203	Identifier	chunk		64149	0					
ANR	64204	Identifier	heap		64149	1					
ANR	64205	Identifier	heap		64149	1					
ANR	64206	ExpressionStatement	chunk -> next = chunk	1835:1:56447:56466	64149	5	True				
ANR	64207	AssignmentExpression	chunk -> next = chunk		64149	0		=			
ANR	64208	PtrMemberAccess	chunk -> next		64149	0					
ANR	64209	Identifier	chunk		64149	0					
ANR	64210	Identifier	next		64149	1					
ANR	64211	Identifier	chunk		64149	1					
ANR	64212	ExpressionStatement	chunk -> prev = chunk	1836:1:56469:56488	64149	6	True				
ANR	64213	AssignmentExpression	chunk -> prev = chunk		64149	0		=			
ANR	64214	PtrMemberAccess	chunk -> prev		64149	0					
ANR	64215	Identifier	chunk		64149	0					
ANR	64216	Identifier	prev		64149	1					
ANR	64217	Identifier	chunk		64149	1					
ANR	64218	ExpressionStatement	chunk -> free_pages = ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE	1837:1:56491:56545	64149	7	True				
ANR	64219	AssignmentExpression	chunk -> free_pages = ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE		64149	0		=			
ANR	64220	PtrMemberAccess	chunk -> free_pages		64149	0					
ANR	64221	Identifier	chunk		64149	0					
ANR	64222	Identifier	free_pages		64149	1					
ANR	64223	AdditiveExpression	ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE		64149	1		-			
ANR	64224	Identifier	ZEND_MM_PAGES		64149	0					
ANR	64225	Identifier	ZEND_MM_FIRST_PAGE		64149	1					
ANR	64226	ExpressionStatement	chunk -> free_tail = ZEND_MM_FIRST_PAGE	1838:1:56548:56585	64149	8	True				
ANR	64227	AssignmentExpression	chunk -> free_tail = ZEND_MM_FIRST_PAGE		64149	0		=			
ANR	64228	PtrMemberAccess	chunk -> free_tail		64149	0					
ANR	64229	Identifier	chunk		64149	0					
ANR	64230	Identifier	free_tail		64149	1					
ANR	64231	Identifier	ZEND_MM_FIRST_PAGE		64149	1					
ANR	64232	ExpressionStatement	chunk -> num = 0	1839:1:56588:56602	64149	9	True				
ANR	64233	AssignmentExpression	chunk -> num = 0		64149	0		=			
ANR	64234	PtrMemberAccess	chunk -> num		64149	0					
ANR	64235	Identifier	chunk		64149	0					
ANR	64236	Identifier	num		64149	1					
ANR	64237	PrimaryExpression	0		64149	1					
ANR	64238	ExpressionStatement	chunk -> free_map [ 0 ] = ( Z_L ( 1 ) << ZEND_MM_FIRST_PAGE ) - 1	1840:1:56605:56660	64149	10	True				
ANR	64239	AssignmentExpression	chunk -> free_map [ 0 ] = ( Z_L ( 1 ) << ZEND_MM_FIRST_PAGE ) - 1		64149	0		=			
ANR	64240	ArrayIndexing	chunk -> free_map [ 0 ]		64149	0					
ANR	64241	PtrMemberAccess	chunk -> free_map		64149	0					
ANR	64242	Identifier	chunk		64149	0					
ANR	64243	Identifier	free_map		64149	1					
ANR	64244	PrimaryExpression	0		64149	1					
ANR	64245	AdditiveExpression	( Z_L ( 1 ) << ZEND_MM_FIRST_PAGE ) - 1		64149	1		-			
ANR	64246	ShiftExpression	Z_L ( 1 ) << ZEND_MM_FIRST_PAGE		64149	0		<<			
ANR	64247	CallExpression	Z_L ( 1 )		64149	0					
ANR	64248	Callee	Z_L		64149	0					
ANR	64249	Identifier	Z_L		64149	0					
ANR	64250	ArgumentList	1		64149	1					
ANR	64251	Argument	1		64149	0					
ANR	64252	PrimaryExpression	1		64149	0					
ANR	64253	Identifier	ZEND_MM_FIRST_PAGE		64149	1					
ANR	64254	PrimaryExpression	1		64149	1					
ANR	64255	ExpressionStatement	chunk -> map [ 0 ] = ZEND_MM_LRUN ( ZEND_MM_FIRST_PAGE )	1841:1:56663:56711	64149	11	True				
ANR	64256	AssignmentExpression	chunk -> map [ 0 ] = ZEND_MM_LRUN ( ZEND_MM_FIRST_PAGE )		64149	0		=			
ANR	64257	ArrayIndexing	chunk -> map [ 0 ]		64149	0					
ANR	64258	PtrMemberAccess	chunk -> map		64149	0					
ANR	64259	Identifier	chunk		64149	0					
ANR	64260	Identifier	map		64149	1					
ANR	64261	PrimaryExpression	0		64149	1					
ANR	64262	CallExpression	ZEND_MM_LRUN ( ZEND_MM_FIRST_PAGE )		64149	1					
ANR	64263	Callee	ZEND_MM_LRUN		64149	0					
ANR	64264	Identifier	ZEND_MM_LRUN		64149	0					
ANR	64265	ArgumentList	ZEND_MM_FIRST_PAGE		64149	1					
ANR	64266	Argument	ZEND_MM_FIRST_PAGE		64149	0					
ANR	64267	Identifier	ZEND_MM_FIRST_PAGE		64149	0					
ANR	64268	ExpressionStatement	heap -> main_chunk = chunk	1842:1:56714:56738	64149	12	True				
ANR	64269	AssignmentExpression	heap -> main_chunk = chunk		64149	0		=			
ANR	64270	PtrMemberAccess	heap -> main_chunk		64149	0					
ANR	64271	Identifier	heap		64149	0					
ANR	64272	Identifier	main_chunk		64149	1					
ANR	64273	Identifier	chunk		64149	1					
ANR	64274	ExpressionStatement	heap -> cached_chunks = NULL	1843:1:56741:56767	64149	13	True				
ANR	64275	AssignmentExpression	heap -> cached_chunks = NULL		64149	0		=			
ANR	64276	PtrMemberAccess	heap -> cached_chunks		64149	0					
ANR	64277	Identifier	heap		64149	0					
ANR	64278	Identifier	cached_chunks		64149	1					
ANR	64279	Identifier	NULL		64149	1					
ANR	64280	ExpressionStatement	heap -> chunks_count = 1	1844:1:56770:56792	64149	14	True				
ANR	64281	AssignmentExpression	heap -> chunks_count = 1		64149	0		=			
ANR	64282	PtrMemberAccess	heap -> chunks_count		64149	0					
ANR	64283	Identifier	heap		64149	0					
ANR	64284	Identifier	chunks_count		64149	1					
ANR	64285	PrimaryExpression	1		64149	1					
ANR	64286	ExpressionStatement	heap -> peak_chunks_count = 1	1845:1:56795:56822	64149	15	True				
ANR	64287	AssignmentExpression	heap -> peak_chunks_count = 1		64149	0		=			
ANR	64288	PtrMemberAccess	heap -> peak_chunks_count		64149	0					
ANR	64289	Identifier	heap		64149	0					
ANR	64290	Identifier	peak_chunks_count		64149	1					
ANR	64291	PrimaryExpression	1		64149	1					
ANR	64292	ExpressionStatement	heap -> cached_chunks_count = 0	1846:1:56825:56854	64149	16	True				
ANR	64293	AssignmentExpression	heap -> cached_chunks_count = 0		64149	0		=			
ANR	64294	PtrMemberAccess	heap -> cached_chunks_count		64149	0					
ANR	64295	Identifier	heap		64149	0					
ANR	64296	Identifier	cached_chunks_count		64149	1					
ANR	64297	PrimaryExpression	0		64149	1					
ANR	64298	ExpressionStatement	heap -> avg_chunks_count = 1.0	1847:1:56857:56885	64149	17	True				
ANR	64299	AssignmentExpression	heap -> avg_chunks_count = 1.0		64149	0		=			
ANR	64300	PtrMemberAccess	heap -> avg_chunks_count		64149	0					
ANR	64301	Identifier	heap		64149	0					
ANR	64302	Identifier	avg_chunks_count		64149	1					
ANR	64303	PrimaryExpression	1.0		64149	1					
ANR	64304	ExpressionStatement	heap -> real_size = ZEND_MM_CHUNK_SIZE	1849:1:56922:56958	64149	18	True				
ANR	64305	AssignmentExpression	heap -> real_size = ZEND_MM_CHUNK_SIZE		64149	0		=			
ANR	64306	PtrMemberAccess	heap -> real_size		64149	0					
ANR	64307	Identifier	heap		64149	0					
ANR	64308	Identifier	real_size		64149	1					
ANR	64309	Identifier	ZEND_MM_CHUNK_SIZE		64149	1					
ANR	64310	ExpressionStatement	heap -> real_peak = ZEND_MM_CHUNK_SIZE	1852:1:56985:57021	64149	19	True				
ANR	64311	AssignmentExpression	heap -> real_peak = ZEND_MM_CHUNK_SIZE		64149	0		=			
ANR	64312	PtrMemberAccess	heap -> real_peak		64149	0					
ANR	64313	Identifier	heap		64149	0					
ANR	64314	Identifier	real_peak		64149	1					
ANR	64315	Identifier	ZEND_MM_CHUNK_SIZE		64149	1					
ANR	64316	ExpressionStatement	heap -> size = 0	1853:1:57024:57038	64149	20	True				
ANR	64317	AssignmentExpression	heap -> size = 0		64149	0		=			
ANR	64318	PtrMemberAccess	heap -> size		64149	0					
ANR	64319	Identifier	heap		64149	0					
ANR	64320	Identifier	size		64149	1					
ANR	64321	PrimaryExpression	0		64149	1					
ANR	64322	ExpressionStatement	heap -> peak = 0	1854:1:57041:57055	64149	21	True				
ANR	64323	AssignmentExpression	heap -> peak = 0		64149	0		=			
ANR	64324	PtrMemberAccess	heap -> peak		64149	0					
ANR	64325	Identifier	heap		64149	0					
ANR	64326	Identifier	peak		64149	1					
ANR	64327	PrimaryExpression	0		64149	1					
ANR	64328	ExpressionStatement	heap -> limit = ( Z_L ( - 1 ) >> Z_L ( 1 ) )	1857:1:57083:57116	64149	22	True				
ANR	64329	AssignmentExpression	heap -> limit = ( Z_L ( - 1 ) >> Z_L ( 1 ) )		64149	0		=			
ANR	64330	PtrMemberAccess	heap -> limit		64149	0					
ANR	64331	Identifier	heap		64149	0					
ANR	64332	Identifier	limit		64149	1					
ANR	64333	ShiftExpression	Z_L ( - 1 ) >> Z_L ( 1 )		64149	1		>>			
ANR	64334	CallExpression	Z_L ( - 1 )		64149	0					
ANR	64335	Callee	Z_L		64149	0					
ANR	64336	Identifier	Z_L		64149	0					
ANR	64337	ArgumentList	- 1		64149	1					
ANR	64338	Argument	- 1		64149	0					
ANR	64339	UnaryOperationExpression	- 1		64149	0					
ANR	64340	UnaryOperator	-		64149	0					
ANR	64341	PrimaryExpression	1		64149	1					
ANR	64342	CallExpression	Z_L ( 1 )		64149	1					
ANR	64343	Callee	Z_L		64149	0					
ANR	64344	Identifier	Z_L		64149	0					
ANR	64345	ArgumentList	1		64149	1					
ANR	64346	Argument	1		64149	0					
ANR	64347	PrimaryExpression	1		64149	0					
ANR	64348	ExpressionStatement	heap -> overflow = 0	1858:1:57119:57137	64149	23	True				
ANR	64349	AssignmentExpression	heap -> overflow = 0		64149	0		=			
ANR	64350	PtrMemberAccess	heap -> overflow		64149	0					
ANR	64351	Identifier	heap		64149	0					
ANR	64352	Identifier	overflow		64149	1					
ANR	64353	PrimaryExpression	0		64149	1					
ANR	64354	ExpressionStatement	heap -> use_custom_heap = ZEND_MM_CUSTOM_HEAP_NONE	1861:1:57166:57214	64149	24	True				
ANR	64355	AssignmentExpression	heap -> use_custom_heap = ZEND_MM_CUSTOM_HEAP_NONE		64149	0		=			
ANR	64356	PtrMemberAccess	heap -> use_custom_heap		64149	0					
ANR	64357	Identifier	heap		64149	0					
ANR	64358	Identifier	use_custom_heap		64149	1					
ANR	64359	Identifier	ZEND_MM_CUSTOM_HEAP_NONE		64149	1					
ANR	64360	ExpressionStatement	heap -> storage = NULL	1864:1:57244:57264	64149	25	True				
ANR	64361	AssignmentExpression	heap -> storage = NULL		64149	0		=			
ANR	64362	PtrMemberAccess	heap -> storage		64149	0					
ANR	64363	Identifier	heap		64149	0					
ANR	64364	Identifier	storage		64149	1					
ANR	64365	Identifier	NULL		64149	1					
ANR	64366	ExpressionStatement	heap -> huge_list = NULL	1866:1:57274:57296	64149	26	True				
ANR	64367	AssignmentExpression	heap -> huge_list = NULL		64149	0		=			
ANR	64368	PtrMemberAccess	heap -> huge_list		64149	0					
ANR	64369	Identifier	heap		64149	0					
ANR	64370	Identifier	huge_list		64149	1					
ANR	64371	Identifier	NULL		64149	1					
ANR	64372	ReturnStatement	return heap ;	1867:1:57299:57310	64149	27	True				
ANR	64373	Identifier	heap		64149	0					
ANR	64374	ReturnType	static zend_mm_heap *		64149	1					
ANR	64375	Identifier	zend_mm_init		64149	2					
ANR	64376	ParameterList			64149	3					
ANR	64377	CFGEntryNode	ENTRY		64149		True				
ANR	64378	CFGExitNode	EXIT		64149		True				
ANR	64379	Symbol	ZEND_MM_PAGES		64149						
ANR	64380	Symbol	heap -> chunks_count		64149						
ANR	64381	Symbol	heap -> real_peak		64149						
ANR	64382	Symbol	chunk		64149						
ANR	64383	Symbol	heap -> cached_chunks		64149						
ANR	64384	Symbol	heap -> peak_chunks_count		64149						
ANR	64385	Symbol	heap -> use_custom_heap		64149						
ANR	64386	Symbol	heap -> cached_chunks_count		64149						
ANR	64387	Symbol	chunk -> free_tail		64149						
ANR	64388	Symbol	UNEXPECTED		64149						
ANR	64389	Symbol	heap -> size		64149						
ANR	64390	Symbol	chunk -> num		64149						
ANR	64391	Symbol	ZEND_MM_CHUNK_SIZE		64149						
ANR	64392	Symbol	ZEND_MM_FIRST_PAGE		64149						
ANR	64393	Symbol	heap		64149						
ANR	64394	Symbol	heap -> overflow		64149						
ANR	64395	Symbol	* chunk -> free_map		64149						
ANR	64396	Symbol	NULL		64149						
ANR	64397	Symbol	heap -> main_chunk		64149						
ANR	64398	Symbol	* * chunk		64149						
ANR	64399	Symbol	Z_L		64149						
ANR	64400	Symbol	chunk -> prev		64149						
ANR	64401	Symbol	heap -> real_size		64149						
ANR	64402	Symbol	ZEND_MM_CUSTOM_HEAP_NONE		64149						
ANR	64403	Symbol	chunk -> next		64149						
ANR	64404	Symbol	heap -> storage		64149						
ANR	64405	Symbol	chunk -> free_pages		64149						
ANR	64406	Symbol	chunk -> heap		64149						
ANR	64407	Symbol	zend_mm_chunk_alloc_int		64149						
ANR	64408	Symbol	& chunk -> heap_slot		64149						
ANR	64409	Symbol	heap -> avg_chunks_count		64149						
ANR	64410	Symbol	heap -> peak		64149						
ANR	64411	Symbol	heap -> huge_list		64149						
ANR	64412	Symbol	* chunk		64149						
ANR	64413	Symbol	* chunk -> map		64149						
ANR	64414	Symbol	ZEND_MM_LRUN		64149						
ANR	64415	Symbol	chunk -> free_map		64149						
ANR	64416	Symbol	chunk -> map		64149						
ANR	64417	Symbol	* heap		64149						
ANR	64418	Symbol	heap -> limit		64149						
ANR	64419	Function	zend_mm_gc	1870:0:57315:60469							
ANR	64420	FunctionDef	zend_mm_gc (zend_mm_heap * heap)		64419	0					
ANR	64421	CompoundStatement		1871:0:57362:60469	64419	0					
ANR	64422	IdentifierDeclStatement	"zend_mm_free_slot * p , * * q ;"	1872:1:57365:57390	64419	0	True				
ANR	64423	IdentifierDecl	* p		64419	0					
ANR	64424	IdentifierDeclType	zend_mm_free_slot *		64419	0					
ANR	64425	Identifier	p		64419	1					
ANR	64426	IdentifierDecl	* * q		64419	1					
ANR	64427	IdentifierDeclType	zend_mm_free_slot * *		64419	0					
ANR	64428	Identifier	q		64419	1					
ANR	64429	IdentifierDeclStatement	zend_mm_chunk * chunk ;	1873:1:57393:57413	64419	1	True				
ANR	64430	IdentifierDecl	* chunk		64419	0					
ANR	64431	IdentifierDeclType	zend_mm_chunk *		64419	0					
ANR	64432	Identifier	chunk		64419	1					
ANR	64433	IdentifierDeclStatement	size_t page_offset ;	1874:1:57416:57434	64419	2	True				
ANR	64434	IdentifierDecl	page_offset		64419	0					
ANR	64435	IdentifierDeclType	size_t		64419	0					
ANR	64436	Identifier	page_offset		64419	1					
ANR	64437	IdentifierDeclStatement	int page_num ;	1875:1:57437:57449	64419	3	True				
ANR	64438	IdentifierDecl	page_num		64419	0					
ANR	64439	IdentifierDeclType	int		64419	0					
ANR	64440	Identifier	page_num		64419	1					
ANR	64441	IdentifierDeclStatement	zend_mm_page_info info ;	1876:1:57452:57474	64419	4	True				
ANR	64442	IdentifierDecl	info		64419	0					
ANR	64443	IdentifierDeclType	zend_mm_page_info		64419	0					
ANR	64444	Identifier	info		64419	1					
ANR	64445	IdentifierDeclStatement	"int i , has_free_pages , free_counter ;"	1877:1:57477:57512	64419	5	True				
ANR	64446	IdentifierDecl	i		64419	0					
ANR	64447	IdentifierDeclType	int		64419	0					
ANR	64448	Identifier	i		64419	1					
ANR	64449	IdentifierDecl	has_free_pages		64419	1					
ANR	64450	IdentifierDeclType	int		64419	0					
ANR	64451	Identifier	has_free_pages		64419	1					
ANR	64452	IdentifierDecl	free_counter		64419	2					
ANR	64453	IdentifierDeclType	int		64419	0					
ANR	64454	Identifier	free_counter		64419	1					
ANR	64455	IdentifierDeclStatement	size_t collected = 0 ;	1878:1:57515:57535	64419	6	True				
ANR	64456	IdentifierDecl	collected = 0		64419	0					
ANR	64457	IdentifierDeclType	size_t		64419	0					
ANR	64458	Identifier	collected		64419	1					
ANR	64459	AssignmentExpression	collected = 0		64419	2		=			
ANR	64460	Identifier	collected		64419	0					
ANR	64461	PrimaryExpression	0		64419	1					
ANR	64462	IfStatement	if ( heap -> use_custom_heap )		64419	7					
ANR	64463	Condition	heap -> use_custom_heap	1881:5:57562:57582	64419	0	True				
ANR	64464	PtrMemberAccess	heap -> use_custom_heap		64419	0					
ANR	64465	Identifier	heap		64419	0					
ANR	64466	Identifier	use_custom_heap		64419	1					
ANR	64467	CompoundStatement		11:28:222:222	64419	1					
ANR	64468	ReturnStatement	return 0 ;	1882:2:57589:57597	64419	0	True				
ANR	64469	PrimaryExpression	0		64419	0					
ANR	64470	ForStatement	for ( i = 0 ; i < ZEND_MM_BINS ; i ++ )		64419	8					
ANR	64471	ForInit	i = 0 ;	1886:6:57616:57621	64419	0	True				
ANR	64472	AssignmentExpression	i = 0		64419	0		=			
ANR	64473	Identifier	i		64419	0					
ANR	64474	PrimaryExpression	0		64419	1					
ANR	64475	Condition	i < ZEND_MM_BINS	1886:13:57623:57638	64419	1	True				
ANR	64476	RelationalExpression	i < ZEND_MM_BINS		64419	0		<			
ANR	64477	Identifier	i		64419	0					
ANR	64478	Identifier	ZEND_MM_BINS		64419	1					
ANR	64479	PostIncDecOperationExpression	i ++	1886:31:57641:57643	64419	2	True				
ANR	64480	Identifier	i		64419	0					
ANR	64481	IncDec	++		64419	1					
ANR	64482	CompoundStatement		16:36:283:283	64419	3					
ANR	64483	ExpressionStatement	has_free_pages = 0	1887:2:57650:57668	64419	0	True				
ANR	64484	AssignmentExpression	has_free_pages = 0		64419	0		=			
ANR	64485	Identifier	has_free_pages		64419	0					
ANR	64486	PrimaryExpression	0		64419	1					
ANR	64487	ExpressionStatement	p = heap -> free_slot [ i ]	1888:2:57672:57694	64419	1	True				
ANR	64488	AssignmentExpression	p = heap -> free_slot [ i ]		64419	0		=			
ANR	64489	Identifier	p		64419	0					
ANR	64490	ArrayIndexing	heap -> free_slot [ i ]		64419	1					
ANR	64491	PtrMemberAccess	heap -> free_slot		64419	0					
ANR	64492	Identifier	heap		64419	0					
ANR	64493	Identifier	free_slot		64419	1					
ANR	64494	Identifier	i		64419	1					
ANR	64495	WhileStatement	while ( p != NULL )		64419	2					
ANR	64496	Condition	p != NULL	1889:9:57705:57713	64419	0	True				
ANR	64497	EqualityExpression	p != NULL		64419	0		!=			
ANR	64498	Identifier	p		64419	0					
ANR	64499	Identifier	NULL		64419	1					
ANR	64500	CompoundStatement		19:20:353:353	64419	1					
ANR	64501	ExpressionStatement	"chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( p , ZEND_MM_CHUNK_SIZE )"	1890:3:57721:57788	64419	0	True				
ANR	64502	AssignmentExpression	"chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( p , ZEND_MM_CHUNK_SIZE )"		64419	0		=			
ANR	64503	Identifier	chunk		64419	0					
ANR	64504	CastExpression	"( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( p , ZEND_MM_CHUNK_SIZE )"		64419	1					
ANR	64505	CastTarget	zend_mm_chunk *		64419	0					
ANR	64506	CallExpression	"ZEND_MM_ALIGNED_BASE ( p , ZEND_MM_CHUNK_SIZE )"		64419	1					
ANR	64507	Callee	ZEND_MM_ALIGNED_BASE		64419	0					
ANR	64508	Identifier	ZEND_MM_ALIGNED_BASE		64419	0					
ANR	64509	ArgumentList	p		64419	1					
ANR	64510	Argument	p		64419	0					
ANR	64511	Identifier	p		64419	0					
ANR	64512	Argument	ZEND_MM_CHUNK_SIZE		64419	1					
ANR	64513	Identifier	ZEND_MM_CHUNK_SIZE		64419	0					
ANR	64514	ExpressionStatement	"ZEND_MM_CHECK ( chunk -> heap == heap , ""zend_mm_heap corrupted"" )"	1891:3:57793:57853	64419	1	True				
ANR	64515	CallExpression	"ZEND_MM_CHECK ( chunk -> heap == heap , ""zend_mm_heap corrupted"" )"		64419	0					
ANR	64516	Callee	ZEND_MM_CHECK		64419	0					
ANR	64517	Identifier	ZEND_MM_CHECK		64419	0					
ANR	64518	ArgumentList	chunk -> heap == heap		64419	1					
ANR	64519	Argument	chunk -> heap == heap		64419	0					
ANR	64520	EqualityExpression	chunk -> heap == heap		64419	0		==			
ANR	64521	PtrMemberAccess	chunk -> heap		64419	0					
ANR	64522	Identifier	chunk		64419	0					
ANR	64523	Identifier	heap		64419	1					
ANR	64524	Identifier	heap		64419	1					
ANR	64525	Argument	"""zend_mm_heap corrupted"""		64419	1					
ANR	64526	PrimaryExpression	"""zend_mm_heap corrupted"""		64419	0					
ANR	64527	ExpressionStatement	"page_offset = ZEND_MM_ALIGNED_OFFSET ( p , ZEND_MM_CHUNK_SIZE )"	1892:3:57858:57917	64419	2	True				
ANR	64528	AssignmentExpression	"page_offset = ZEND_MM_ALIGNED_OFFSET ( p , ZEND_MM_CHUNK_SIZE )"		64419	0		=			
ANR	64529	Identifier	page_offset		64419	0					
ANR	64530	CallExpression	"ZEND_MM_ALIGNED_OFFSET ( p , ZEND_MM_CHUNK_SIZE )"		64419	1					
ANR	64531	Callee	ZEND_MM_ALIGNED_OFFSET		64419	0					
ANR	64532	Identifier	ZEND_MM_ALIGNED_OFFSET		64419	0					
ANR	64533	ArgumentList	p		64419	1					
ANR	64534	Argument	p		64419	0					
ANR	64535	Identifier	p		64419	0					
ANR	64536	Argument	ZEND_MM_CHUNK_SIZE		64419	1					
ANR	64537	Identifier	ZEND_MM_CHUNK_SIZE		64419	0					
ANR	64538	ExpressionStatement	ZEND_ASSERT ( page_offset != 0 )	1893:3:57922:57951	64419	3	True				
ANR	64539	CallExpression	ZEND_ASSERT ( page_offset != 0 )		64419	0					
ANR	64540	Callee	ZEND_ASSERT		64419	0					
ANR	64541	Identifier	ZEND_ASSERT		64419	0					
ANR	64542	ArgumentList	page_offset != 0		64419	1					
ANR	64543	Argument	page_offset != 0		64419	0					
ANR	64544	EqualityExpression	page_offset != 0		64419	0		!=			
ANR	64545	Identifier	page_offset		64419	0					
ANR	64546	PrimaryExpression	0		64419	1					
ANR	64547	ExpressionStatement	page_num = ( int ) ( page_offset / ZEND_MM_PAGE_SIZE )	1894:3:57956:58005	64419	4	True				
ANR	64548	AssignmentExpression	page_num = ( int ) ( page_offset / ZEND_MM_PAGE_SIZE )		64419	0		=			
ANR	64549	Identifier	page_num		64419	0					
ANR	64550	CastExpression	( int ) ( page_offset / ZEND_MM_PAGE_SIZE )		64419	1					
ANR	64551	CastTarget	int		64419	0					
ANR	64552	MultiplicativeExpression	page_offset / ZEND_MM_PAGE_SIZE		64419	1		/			
ANR	64553	Identifier	page_offset		64419	0					
ANR	64554	Identifier	ZEND_MM_PAGE_SIZE		64419	1					
ANR	64555	ExpressionStatement	info = chunk -> map [ page_num ]	1895:3:58010:58037	64419	5	True				
ANR	64556	AssignmentExpression	info = chunk -> map [ page_num ]		64419	0		=			
ANR	64557	Identifier	info		64419	0					
ANR	64558	ArrayIndexing	chunk -> map [ page_num ]		64419	1					
ANR	64559	PtrMemberAccess	chunk -> map		64419	0					
ANR	64560	Identifier	chunk		64419	0					
ANR	64561	Identifier	map		64419	1					
ANR	64562	Identifier	page_num		64419	1					
ANR	64563	ExpressionStatement	ZEND_ASSERT ( info & ZEND_MM_IS_SRUN )	1896:3:58042:58077	64419	6	True				
ANR	64564	CallExpression	ZEND_ASSERT ( info & ZEND_MM_IS_SRUN )		64419	0					
ANR	64565	Callee	ZEND_ASSERT		64419	0					
ANR	64566	Identifier	ZEND_ASSERT		64419	0					
ANR	64567	ArgumentList	info & ZEND_MM_IS_SRUN		64419	1					
ANR	64568	Argument	info & ZEND_MM_IS_SRUN		64419	0					
ANR	64569	BitAndExpression	info & ZEND_MM_IS_SRUN		64419	0		&			
ANR	64570	Identifier	info		64419	0					
ANR	64571	Identifier	ZEND_MM_IS_SRUN		64419	1					
ANR	64572	IfStatement	if ( info & ZEND_MM_IS_LRUN )		64419	7					
ANR	64573	Condition	info & ZEND_MM_IS_LRUN	1897:7:58086:58107	64419	0	True				
ANR	64574	BitAndExpression	info & ZEND_MM_IS_LRUN		64419	0		&			
ANR	64575	Identifier	info		64419	0					
ANR	64576	Identifier	ZEND_MM_IS_LRUN		64419	1					
ANR	64577	CompoundStatement		27:31:747:747	64419	1					
ANR	64578	ExpressionStatement	page_num -= ZEND_MM_NRUN_OFFSET ( info )	1898:4:58116:58153	64419	0	True				
ANR	64579	AssignmentExpression	page_num -= ZEND_MM_NRUN_OFFSET ( info )		64419	0		-=			
ANR	64580	Identifier	page_num		64419	0					
ANR	64581	CallExpression	ZEND_MM_NRUN_OFFSET ( info )		64419	1					
ANR	64582	Callee	ZEND_MM_NRUN_OFFSET		64419	0					
ANR	64583	Identifier	ZEND_MM_NRUN_OFFSET		64419	0					
ANR	64584	ArgumentList	info		64419	1					
ANR	64585	Argument	info		64419	0					
ANR	64586	Identifier	info		64419	0					
ANR	64587	ExpressionStatement	info = chunk -> map [ page_num ]	1899:4:58159:58186	64419	1	True				
ANR	64588	AssignmentExpression	info = chunk -> map [ page_num ]		64419	0		=			
ANR	64589	Identifier	info		64419	0					
ANR	64590	ArrayIndexing	chunk -> map [ page_num ]		64419	1					
ANR	64591	PtrMemberAccess	chunk -> map		64419	0					
ANR	64592	Identifier	chunk		64419	0					
ANR	64593	Identifier	map		64419	1					
ANR	64594	Identifier	page_num		64419	1					
ANR	64595	ExpressionStatement	ZEND_ASSERT ( info & ZEND_MM_IS_SRUN )	1900:4:58192:58227	64419	2	True				
ANR	64596	CallExpression	ZEND_ASSERT ( info & ZEND_MM_IS_SRUN )		64419	0					
ANR	64597	Callee	ZEND_ASSERT		64419	0					
ANR	64598	Identifier	ZEND_ASSERT		64419	0					
ANR	64599	ArgumentList	info & ZEND_MM_IS_SRUN		64419	1					
ANR	64600	Argument	info & ZEND_MM_IS_SRUN		64419	0					
ANR	64601	BitAndExpression	info & ZEND_MM_IS_SRUN		64419	0		&			
ANR	64602	Identifier	info		64419	0					
ANR	64603	Identifier	ZEND_MM_IS_SRUN		64419	1					
ANR	64604	ExpressionStatement	ZEND_ASSERT ( ! ( info & ZEND_MM_IS_LRUN ) )	1901:4:58233:58271	64419	3	True				
ANR	64605	CallExpression	ZEND_ASSERT ( ! ( info & ZEND_MM_IS_LRUN ) )		64419	0					
ANR	64606	Callee	ZEND_ASSERT		64419	0					
ANR	64607	Identifier	ZEND_ASSERT		64419	0					
ANR	64608	ArgumentList	! ( info & ZEND_MM_IS_LRUN )		64419	1					
ANR	64609	Argument	! ( info & ZEND_MM_IS_LRUN )		64419	0					
ANR	64610	UnaryOperationExpression	! ( info & ZEND_MM_IS_LRUN )		64419	0					
ANR	64611	UnaryOperator	!		64419	0					
ANR	64612	BitAndExpression	info & ZEND_MM_IS_LRUN		64419	1		&			
ANR	64613	Identifier	info		64419	0					
ANR	64614	Identifier	ZEND_MM_IS_LRUN		64419	1					
ANR	64615	ExpressionStatement	ZEND_ASSERT ( ZEND_MM_SRUN_BIN_NUM ( info ) == i )	1903:3:58281:58325	64419	8	True				
ANR	64616	CallExpression	ZEND_ASSERT ( ZEND_MM_SRUN_BIN_NUM ( info ) == i )		64419	0					
ANR	64617	Callee	ZEND_ASSERT		64419	0					
ANR	64618	Identifier	ZEND_ASSERT		64419	0					
ANR	64619	ArgumentList	ZEND_MM_SRUN_BIN_NUM ( info ) == i		64419	1					
ANR	64620	Argument	ZEND_MM_SRUN_BIN_NUM ( info ) == i		64419	0					
ANR	64621	EqualityExpression	ZEND_MM_SRUN_BIN_NUM ( info ) == i		64419	0		==			
ANR	64622	CallExpression	ZEND_MM_SRUN_BIN_NUM ( info )		64419	0					
ANR	64623	Callee	ZEND_MM_SRUN_BIN_NUM		64419	0					
ANR	64624	Identifier	ZEND_MM_SRUN_BIN_NUM		64419	0					
ANR	64625	ArgumentList	info		64419	1					
ANR	64626	Argument	info		64419	0					
ANR	64627	Identifier	info		64419	0					
ANR	64628	Identifier	i		64419	1					
ANR	64629	ExpressionStatement	free_counter = ZEND_MM_SRUN_FREE_COUNTER ( info ) + 1	1904:3:58330:58380	64419	9	True				
ANR	64630	AssignmentExpression	free_counter = ZEND_MM_SRUN_FREE_COUNTER ( info ) + 1		64419	0		=			
ANR	64631	Identifier	free_counter		64419	0					
ANR	64632	AdditiveExpression	ZEND_MM_SRUN_FREE_COUNTER ( info ) + 1		64419	1		+			
ANR	64633	CallExpression	ZEND_MM_SRUN_FREE_COUNTER ( info )		64419	0					
ANR	64634	Callee	ZEND_MM_SRUN_FREE_COUNTER		64419	0					
ANR	64635	Identifier	ZEND_MM_SRUN_FREE_COUNTER		64419	0					
ANR	64636	ArgumentList	info		64419	1					
ANR	64637	Argument	info		64419	0					
ANR	64638	Identifier	info		64419	0					
ANR	64639	PrimaryExpression	1		64419	1					
ANR	64640	IfStatement	if ( free_counter == bin_elements [ i ] )		64419	10					
ANR	64641	Condition	free_counter == bin_elements [ i ]	1905:7:58389:58419	64419	0	True				
ANR	64642	EqualityExpression	free_counter == bin_elements [ i ]		64419	0		==			
ANR	64643	Identifier	free_counter		64419	0					
ANR	64644	ArrayIndexing	bin_elements [ i ]		64419	1					
ANR	64645	Identifier	bin_elements		64419	0					
ANR	64646	Identifier	i		64419	1					
ANR	64647	CompoundStatement		35:40:1059:1059	64419	1					
ANR	64648	ExpressionStatement	has_free_pages = 1	1906:4:58428:58446	64419	0	True				
ANR	64649	AssignmentExpression	has_free_pages = 1		64419	0		=			
ANR	64650	Identifier	has_free_pages		64419	0					
ANR	64651	PrimaryExpression	1		64419	1					
ANR	64652	ExpressionStatement	"chunk -> map [ page_num ] = ZEND_MM_SRUN_EX ( i , free_counter )"	1908:3:58456:58511	64419	11	True				
ANR	64653	AssignmentExpression	"chunk -> map [ page_num ] = ZEND_MM_SRUN_EX ( i , free_counter )"		64419	0		=			
ANR	64654	ArrayIndexing	chunk -> map [ page_num ]		64419	0					
ANR	64655	PtrMemberAccess	chunk -> map		64419	0					
ANR	64656	Identifier	chunk		64419	0					
ANR	64657	Identifier	map		64419	1					
ANR	64658	Identifier	page_num		64419	1					
ANR	64659	CallExpression	"ZEND_MM_SRUN_EX ( i , free_counter )"		64419	1					
ANR	64660	Callee	ZEND_MM_SRUN_EX		64419	0					
ANR	64661	Identifier	ZEND_MM_SRUN_EX		64419	0					
ANR	64662	ArgumentList	i		64419	1					
ANR	64663	Argument	i		64419	0					
ANR	64664	Identifier	i		64419	0					
ANR	64665	Argument	free_counter		64419	1					
ANR	64666	Identifier	free_counter		64419	0					
ANR	64667	ExpressionStatement		1908:59:58512:58512	64419	12	True				
ANR	64668	ExpressionStatement	p = p -> next_free_slot	1909:3:58517:58538	64419	13	True				
ANR	64669	AssignmentExpression	p = p -> next_free_slot		64419	0		=			
ANR	64670	Identifier	p		64419	0					
ANR	64671	PtrMemberAccess	p -> next_free_slot		64419	1					
ANR	64672	Identifier	p		64419	0					
ANR	64673	Identifier	next_free_slot		64419	1					
ANR	64674	IfStatement	if ( ! has_free_pages )		64419	3					
ANR	64675	Condition	! has_free_pages	1912:6:58551:58565	64419	0	True				
ANR	64676	UnaryOperationExpression	! has_free_pages		64419	0					
ANR	64677	UnaryOperator	!		64419	0					
ANR	64678	Identifier	has_free_pages		64419	1					
ANR	64679	CompoundStatement		42:23:1205:1205	64419	1					
ANR	64680	ContinueStatement	continue ;	1913:3:58573:58581	64419	0	True				
ANR	64681	ExpressionStatement	q = & heap -> free_slot [ i ]	1916:2:58590:58613	64419	4	True				
ANR	64682	AssignmentExpression	q = & heap -> free_slot [ i ]		64419	0		=			
ANR	64683	Identifier	q		64419	0					
ANR	64684	UnaryOperationExpression	& heap -> free_slot [ i ]		64419	1					
ANR	64685	UnaryOperator	&		64419	0					
ANR	64686	ArrayIndexing	heap -> free_slot [ i ]		64419	1					
ANR	64687	PtrMemberAccess	heap -> free_slot		64419	0					
ANR	64688	Identifier	heap		64419	0					
ANR	64689	Identifier	free_slot		64419	1					
ANR	64690	Identifier	i		64419	1					
ANR	64691	ExpressionStatement	p = * q	1917:2:58617:58623	64419	5	True				
ANR	64692	AssignmentExpression	p = * q		64419	0		=			
ANR	64693	Identifier	p		64419	0					
ANR	64694	UnaryOperationExpression	* q		64419	1					
ANR	64695	UnaryOperator	*		64419	0					
ANR	64696	Identifier	q		64419	1					
ANR	64697	WhileStatement	while ( p != NULL )		64419	6					
ANR	64698	Condition	p != NULL	1918:9:58634:58642	64419	0	True				
ANR	64699	EqualityExpression	p != NULL		64419	0		!=			
ANR	64700	Identifier	p		64419	0					
ANR	64701	Identifier	NULL		64419	1					
ANR	64702	CompoundStatement		48:20:1282:1282	64419	1					
ANR	64703	ExpressionStatement	"chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( p , ZEND_MM_CHUNK_SIZE )"	1919:3:58650:58717	64419	0	True				
ANR	64704	AssignmentExpression	"chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( p , ZEND_MM_CHUNK_SIZE )"		64419	0		=			
ANR	64705	Identifier	chunk		64419	0					
ANR	64706	CastExpression	"( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( p , ZEND_MM_CHUNK_SIZE )"		64419	1					
ANR	64707	CastTarget	zend_mm_chunk *		64419	0					
ANR	64708	CallExpression	"ZEND_MM_ALIGNED_BASE ( p , ZEND_MM_CHUNK_SIZE )"		64419	1					
ANR	64709	Callee	ZEND_MM_ALIGNED_BASE		64419	0					
ANR	64710	Identifier	ZEND_MM_ALIGNED_BASE		64419	0					
ANR	64711	ArgumentList	p		64419	1					
ANR	64712	Argument	p		64419	0					
ANR	64713	Identifier	p		64419	0					
ANR	64714	Argument	ZEND_MM_CHUNK_SIZE		64419	1					
ANR	64715	Identifier	ZEND_MM_CHUNK_SIZE		64419	0					
ANR	64716	ExpressionStatement	"ZEND_MM_CHECK ( chunk -> heap == heap , ""zend_mm_heap corrupted"" )"	1920:3:58722:58782	64419	1	True				
ANR	64717	CallExpression	"ZEND_MM_CHECK ( chunk -> heap == heap , ""zend_mm_heap corrupted"" )"		64419	0					
ANR	64718	Callee	ZEND_MM_CHECK		64419	0					
ANR	64719	Identifier	ZEND_MM_CHECK		64419	0					
ANR	64720	ArgumentList	chunk -> heap == heap		64419	1					
ANR	64721	Argument	chunk -> heap == heap		64419	0					
ANR	64722	EqualityExpression	chunk -> heap == heap		64419	0		==			
ANR	64723	PtrMemberAccess	chunk -> heap		64419	0					
ANR	64724	Identifier	chunk		64419	0					
ANR	64725	Identifier	heap		64419	1					
ANR	64726	Identifier	heap		64419	1					
ANR	64727	Argument	"""zend_mm_heap corrupted"""		64419	1					
ANR	64728	PrimaryExpression	"""zend_mm_heap corrupted"""		64419	0					
ANR	64729	ExpressionStatement	"page_offset = ZEND_MM_ALIGNED_OFFSET ( p , ZEND_MM_CHUNK_SIZE )"	1921:3:58787:58846	64419	2	True				
ANR	64730	AssignmentExpression	"page_offset = ZEND_MM_ALIGNED_OFFSET ( p , ZEND_MM_CHUNK_SIZE )"		64419	0		=			
ANR	64731	Identifier	page_offset		64419	0					
ANR	64732	CallExpression	"ZEND_MM_ALIGNED_OFFSET ( p , ZEND_MM_CHUNK_SIZE )"		64419	1					
ANR	64733	Callee	ZEND_MM_ALIGNED_OFFSET		64419	0					
ANR	64734	Identifier	ZEND_MM_ALIGNED_OFFSET		64419	0					
ANR	64735	ArgumentList	p		64419	1					
ANR	64736	Argument	p		64419	0					
ANR	64737	Identifier	p		64419	0					
ANR	64738	Argument	ZEND_MM_CHUNK_SIZE		64419	1					
ANR	64739	Identifier	ZEND_MM_CHUNK_SIZE		64419	0					
ANR	64740	ExpressionStatement	ZEND_ASSERT ( page_offset != 0 )	1922:3:58851:58880	64419	3	True				
ANR	64741	CallExpression	ZEND_ASSERT ( page_offset != 0 )		64419	0					
ANR	64742	Callee	ZEND_ASSERT		64419	0					
ANR	64743	Identifier	ZEND_ASSERT		64419	0					
ANR	64744	ArgumentList	page_offset != 0		64419	1					
ANR	64745	Argument	page_offset != 0		64419	0					
ANR	64746	EqualityExpression	page_offset != 0		64419	0		!=			
ANR	64747	Identifier	page_offset		64419	0					
ANR	64748	PrimaryExpression	0		64419	1					
ANR	64749	ExpressionStatement	page_num = ( int ) ( page_offset / ZEND_MM_PAGE_SIZE )	1923:3:58885:58934	64419	4	True				
ANR	64750	AssignmentExpression	page_num = ( int ) ( page_offset / ZEND_MM_PAGE_SIZE )		64419	0		=			
ANR	64751	Identifier	page_num		64419	0					
ANR	64752	CastExpression	( int ) ( page_offset / ZEND_MM_PAGE_SIZE )		64419	1					
ANR	64753	CastTarget	int		64419	0					
ANR	64754	MultiplicativeExpression	page_offset / ZEND_MM_PAGE_SIZE		64419	1		/			
ANR	64755	Identifier	page_offset		64419	0					
ANR	64756	Identifier	ZEND_MM_PAGE_SIZE		64419	1					
ANR	64757	ExpressionStatement	info = chunk -> map [ page_num ]	1924:3:58939:58966	64419	5	True				
ANR	64758	AssignmentExpression	info = chunk -> map [ page_num ]		64419	0		=			
ANR	64759	Identifier	info		64419	0					
ANR	64760	ArrayIndexing	chunk -> map [ page_num ]		64419	1					
ANR	64761	PtrMemberAccess	chunk -> map		64419	0					
ANR	64762	Identifier	chunk		64419	0					
ANR	64763	Identifier	map		64419	1					
ANR	64764	Identifier	page_num		64419	1					
ANR	64765	ExpressionStatement	ZEND_ASSERT ( info & ZEND_MM_IS_SRUN )	1925:3:58971:59006	64419	6	True				
ANR	64766	CallExpression	ZEND_ASSERT ( info & ZEND_MM_IS_SRUN )		64419	0					
ANR	64767	Callee	ZEND_ASSERT		64419	0					
ANR	64768	Identifier	ZEND_ASSERT		64419	0					
ANR	64769	ArgumentList	info & ZEND_MM_IS_SRUN		64419	1					
ANR	64770	Argument	info & ZEND_MM_IS_SRUN		64419	0					
ANR	64771	BitAndExpression	info & ZEND_MM_IS_SRUN		64419	0		&			
ANR	64772	Identifier	info		64419	0					
ANR	64773	Identifier	ZEND_MM_IS_SRUN		64419	1					
ANR	64774	IfStatement	if ( info & ZEND_MM_IS_LRUN )		64419	7					
ANR	64775	Condition	info & ZEND_MM_IS_LRUN	1926:7:59015:59036	64419	0	True				
ANR	64776	BitAndExpression	info & ZEND_MM_IS_LRUN		64419	0		&			
ANR	64777	Identifier	info		64419	0					
ANR	64778	Identifier	ZEND_MM_IS_LRUN		64419	1					
ANR	64779	CompoundStatement		56:31:1676:1676	64419	1					
ANR	64780	ExpressionStatement	page_num -= ZEND_MM_NRUN_OFFSET ( info )	1927:4:59045:59082	64419	0	True				
ANR	64781	AssignmentExpression	page_num -= ZEND_MM_NRUN_OFFSET ( info )		64419	0		-=			
ANR	64782	Identifier	page_num		64419	0					
ANR	64783	CallExpression	ZEND_MM_NRUN_OFFSET ( info )		64419	1					
ANR	64784	Callee	ZEND_MM_NRUN_OFFSET		64419	0					
ANR	64785	Identifier	ZEND_MM_NRUN_OFFSET		64419	0					
ANR	64786	ArgumentList	info		64419	1					
ANR	64787	Argument	info		64419	0					
ANR	64788	Identifier	info		64419	0					
ANR	64789	ExpressionStatement	info = chunk -> map [ page_num ]	1928:4:59088:59115	64419	1	True				
ANR	64790	AssignmentExpression	info = chunk -> map [ page_num ]		64419	0		=			
ANR	64791	Identifier	info		64419	0					
ANR	64792	ArrayIndexing	chunk -> map [ page_num ]		64419	1					
ANR	64793	PtrMemberAccess	chunk -> map		64419	0					
ANR	64794	Identifier	chunk		64419	0					
ANR	64795	Identifier	map		64419	1					
ANR	64796	Identifier	page_num		64419	1					
ANR	64797	ExpressionStatement	ZEND_ASSERT ( info & ZEND_MM_IS_SRUN )	1929:4:59121:59156	64419	2	True				
ANR	64798	CallExpression	ZEND_ASSERT ( info & ZEND_MM_IS_SRUN )		64419	0					
ANR	64799	Callee	ZEND_ASSERT		64419	0					
ANR	64800	Identifier	ZEND_ASSERT		64419	0					
ANR	64801	ArgumentList	info & ZEND_MM_IS_SRUN		64419	1					
ANR	64802	Argument	info & ZEND_MM_IS_SRUN		64419	0					
ANR	64803	BitAndExpression	info & ZEND_MM_IS_SRUN		64419	0		&			
ANR	64804	Identifier	info		64419	0					
ANR	64805	Identifier	ZEND_MM_IS_SRUN		64419	1					
ANR	64806	ExpressionStatement	ZEND_ASSERT ( ! ( info & ZEND_MM_IS_LRUN ) )	1930:4:59162:59200	64419	3	True				
ANR	64807	CallExpression	ZEND_ASSERT ( ! ( info & ZEND_MM_IS_LRUN ) )		64419	0					
ANR	64808	Callee	ZEND_ASSERT		64419	0					
ANR	64809	Identifier	ZEND_ASSERT		64419	0					
ANR	64810	ArgumentList	! ( info & ZEND_MM_IS_LRUN )		64419	1					
ANR	64811	Argument	! ( info & ZEND_MM_IS_LRUN )		64419	0					
ANR	64812	UnaryOperationExpression	! ( info & ZEND_MM_IS_LRUN )		64419	0					
ANR	64813	UnaryOperator	!		64419	0					
ANR	64814	BitAndExpression	info & ZEND_MM_IS_LRUN		64419	1		&			
ANR	64815	Identifier	info		64419	0					
ANR	64816	Identifier	ZEND_MM_IS_LRUN		64419	1					
ANR	64817	ExpressionStatement	ZEND_ASSERT ( ZEND_MM_SRUN_BIN_NUM ( info ) == i )	1932:3:59210:59254	64419	8	True				
ANR	64818	CallExpression	ZEND_ASSERT ( ZEND_MM_SRUN_BIN_NUM ( info ) == i )		64419	0					
ANR	64819	Callee	ZEND_ASSERT		64419	0					
ANR	64820	Identifier	ZEND_ASSERT		64419	0					
ANR	64821	ArgumentList	ZEND_MM_SRUN_BIN_NUM ( info ) == i		64419	1					
ANR	64822	Argument	ZEND_MM_SRUN_BIN_NUM ( info ) == i		64419	0					
ANR	64823	EqualityExpression	ZEND_MM_SRUN_BIN_NUM ( info ) == i		64419	0		==			
ANR	64824	CallExpression	ZEND_MM_SRUN_BIN_NUM ( info )		64419	0					
ANR	64825	Callee	ZEND_MM_SRUN_BIN_NUM		64419	0					
ANR	64826	Identifier	ZEND_MM_SRUN_BIN_NUM		64419	0					
ANR	64827	ArgumentList	info		64419	1					
ANR	64828	Argument	info		64419	0					
ANR	64829	Identifier	info		64419	0					
ANR	64830	Identifier	i		64419	1					
ANR	64831	IfStatement	if ( ZEND_MM_SRUN_FREE_COUNTER ( info ) == bin_elements [ i ] )		64419	9					
ANR	64832	Condition	ZEND_MM_SRUN_FREE_COUNTER ( info ) == bin_elements [ i ]	1933:7:59263:59312	64419	0	True				
ANR	64833	EqualityExpression	ZEND_MM_SRUN_FREE_COUNTER ( info ) == bin_elements [ i ]		64419	0		==			
ANR	64834	CallExpression	ZEND_MM_SRUN_FREE_COUNTER ( info )		64419	0					
ANR	64835	Callee	ZEND_MM_SRUN_FREE_COUNTER		64419	0					
ANR	64836	Identifier	ZEND_MM_SRUN_FREE_COUNTER		64419	0					
ANR	64837	ArgumentList	info		64419	1					
ANR	64838	Argument	info		64419	0					
ANR	64839	Identifier	info		64419	0					
ANR	64840	ArrayIndexing	bin_elements [ i ]		64419	1					
ANR	64841	Identifier	bin_elements		64419	0					
ANR	64842	Identifier	i		64419	1					
ANR	64843	CompoundStatement		63:59:1952:1952	64419	1					
ANR	64844	ExpressionStatement	p = p -> next_free_slot	1935:4:59349:59370	64419	0	True				
ANR	64845	AssignmentExpression	p = p -> next_free_slot		64419	0		=			
ANR	64846	Identifier	p		64419	0					
ANR	64847	PtrMemberAccess	p -> next_free_slot		64419	1					
ANR	64848	Identifier	p		64419	0					
ANR	64849	Identifier	next_free_slot		64419	1					
ANR	64850	ExpressionStatement		1935:26:59371:59371	64419	1	True				
ANR	64851	ExpressionStatement	* q = p	1936:4:59377:59383	64419	2	True				
ANR	64852	AssignmentExpression	* q = p		64419	0		=			
ANR	64853	UnaryOperationExpression	* q		64419	0					
ANR	64854	UnaryOperator	*		64419	0					
ANR	64855	Identifier	q		64419	1					
ANR	64856	Identifier	p		64419	1					
ANR	64857	ElseStatement	else		64419	0					
ANR	64858	CompoundStatement		67:10:2032:2032	64419	0					
ANR	64859	ExpressionStatement	q = & p -> next_free_slot	1938:4:59401:59423	64419	0	True				
ANR	64860	AssignmentExpression	q = & p -> next_free_slot		64419	0		=			
ANR	64861	Identifier	q		64419	0					
ANR	64862	UnaryOperationExpression	& p -> next_free_slot		64419	1					
ANR	64863	UnaryOperator	&		64419	0					
ANR	64864	PtrMemberAccess	p -> next_free_slot		64419	1					
ANR	64865	Identifier	p		64419	0					
ANR	64866	Identifier	next_free_slot		64419	1					
ANR	64867	ExpressionStatement	p = * q	1939:4:59429:59435	64419	1	True				
ANR	64868	AssignmentExpression	p = * q		64419	0		=			
ANR	64869	Identifier	p		64419	0					
ANR	64870	UnaryOperationExpression	* q		64419	1					
ANR	64871	UnaryOperator	*		64419	0					
ANR	64872	Identifier	q		64419	1					
ANR	64873	ExpressionStatement	chunk = heap -> main_chunk	1944:1:59451:59475	64419	9	True				
ANR	64874	AssignmentExpression	chunk = heap -> main_chunk		64419	0		=			
ANR	64875	Identifier	chunk		64419	0					
ANR	64876	PtrMemberAccess	heap -> main_chunk		64419	1					
ANR	64877	Identifier	heap		64419	0					
ANR	64878	Identifier	main_chunk		64419	1					
ANR	64879	DoStatement	do		64419	10					
ANR	64880	CompoundStatement		75:4:2118:2118	64419	0					
ANR	64881	ExpressionStatement	i = ZEND_MM_FIRST_PAGE	1946:2:59485:59507	64419	0	True				
ANR	64882	AssignmentExpression	i = ZEND_MM_FIRST_PAGE		64419	0		=			
ANR	64883	Identifier	i		64419	0					
ANR	64884	Identifier	ZEND_MM_FIRST_PAGE		64419	1					
ANR	64885	WhileStatement	while ( i < chunk -> free_tail )		64419	1					
ANR	64886	Condition	i < chunk -> free_tail	1947:9:59518:59537	64419	0	True				
ANR	64887	RelationalExpression	i < chunk -> free_tail		64419	0		<			
ANR	64888	Identifier	i		64419	0					
ANR	64889	PtrMemberAccess	chunk -> free_tail		64419	1					
ANR	64890	Identifier	chunk		64419	0					
ANR	64891	Identifier	free_tail		64419	1					
ANR	64892	CompoundStatement		77:31:2177:2177	64419	1					
ANR	64893	IfStatement	"if ( zend_mm_bitset_is_set ( chunk -> free_map , i ) )"		64419	0					
ANR	64894	Condition	"zend_mm_bitset_is_set ( chunk -> free_map , i )"	1948:7:59549:59589	64419	0	True				
ANR	64895	CallExpression	"zend_mm_bitset_is_set ( chunk -> free_map , i )"		64419	0					
ANR	64896	Callee	zend_mm_bitset_is_set		64419	0					
ANR	64897	Identifier	zend_mm_bitset_is_set		64419	0					
ANR	64898	ArgumentList	chunk -> free_map		64419	1					
ANR	64899	Argument	chunk -> free_map		64419	0					
ANR	64900	PtrMemberAccess	chunk -> free_map		64419	0					
ANR	64901	Identifier	chunk		64419	0					
ANR	64902	Identifier	free_map		64419	1					
ANR	64903	Argument	i		64419	1					
ANR	64904	Identifier	i		64419	0					
ANR	64905	CompoundStatement		78:50:2229:2229	64419	1					
ANR	64906	ExpressionStatement	info = chunk -> map [ i ]	1949:4:59598:59618	64419	0	True				
ANR	64907	AssignmentExpression	info = chunk -> map [ i ]		64419	0		=			
ANR	64908	Identifier	info		64419	0					
ANR	64909	ArrayIndexing	chunk -> map [ i ]		64419	1					
ANR	64910	PtrMemberAccess	chunk -> map		64419	0					
ANR	64911	Identifier	chunk		64419	0					
ANR	64912	Identifier	map		64419	1					
ANR	64913	Identifier	i		64419	1					
ANR	64914	IfStatement	if ( info & ZEND_MM_IS_SRUN )		64419	1					
ANR	64915	Condition	info & ZEND_MM_IS_SRUN	1950:8:59628:59649	64419	0	True				
ANR	64916	BitAndExpression	info & ZEND_MM_IS_SRUN		64419	0		&			
ANR	64917	Identifier	info		64419	0					
ANR	64918	Identifier	ZEND_MM_IS_SRUN		64419	1					
ANR	64919	CompoundStatement		82:5:2343:2379	64419	1					
ANR	64920	IdentifierDeclStatement	int bin_num = ZEND_MM_SRUN_BIN_NUM ( info ) ;	1951:5:59659:59699	64419	0	True				
ANR	64921	IdentifierDecl	bin_num = ZEND_MM_SRUN_BIN_NUM ( info )		64419	0					
ANR	64922	IdentifierDeclType	int		64419	0					
ANR	64923	Identifier	bin_num		64419	1					
ANR	64924	AssignmentExpression	bin_num = ZEND_MM_SRUN_BIN_NUM ( info )		64419	2		=			
ANR	64925	Identifier	bin_num		64419	0					
ANR	64926	CallExpression	ZEND_MM_SRUN_BIN_NUM ( info )		64419	1					
ANR	64927	Callee	ZEND_MM_SRUN_BIN_NUM		64419	0					
ANR	64928	Identifier	ZEND_MM_SRUN_BIN_NUM		64419	0					
ANR	64929	ArgumentList	info		64419	1					
ANR	64930	Argument	info		64419	0					
ANR	64931	Identifier	info		64419	0					
ANR	64932	IdentifierDeclStatement	int pages_count = bin_pages [ bin_num ] ;	1952:5:59706:59742	64419	1	True				
ANR	64933	IdentifierDecl	pages_count = bin_pages [ bin_num ]		64419	0					
ANR	64934	IdentifierDeclType	int		64419	0					
ANR	64935	Identifier	pages_count		64419	1					
ANR	64936	AssignmentExpression	pages_count = bin_pages [ bin_num ]		64419	2		=			
ANR	64937	Identifier	pages_count		64419	0					
ANR	64938	ArrayIndexing	bin_pages [ bin_num ]		64419	1					
ANR	64939	Identifier	bin_pages		64419	0					
ANR	64940	Identifier	bin_num		64419	1					
ANR	64941	IfStatement	if ( ZEND_MM_SRUN_FREE_COUNTER ( info ) == bin_elements [ bin_num ] )		64419	2					
ANR	64942	Condition	ZEND_MM_SRUN_FREE_COUNTER ( info ) == bin_elements [ bin_num ]	1954:9:59754:59809	64419	0	True				
ANR	64943	EqualityExpression	ZEND_MM_SRUN_FREE_COUNTER ( info ) == bin_elements [ bin_num ]		64419	0		==			
ANR	64944	CallExpression	ZEND_MM_SRUN_FREE_COUNTER ( info )		64419	0					
ANR	64945	Callee	ZEND_MM_SRUN_FREE_COUNTER		64419	0					
ANR	64946	Identifier	ZEND_MM_SRUN_FREE_COUNTER		64419	0					
ANR	64947	ArgumentList	info		64419	1					
ANR	64948	Argument	info		64419	0					
ANR	64949	Identifier	info		64419	0					
ANR	64950	ArrayIndexing	bin_elements [ bin_num ]		64419	1					
ANR	64951	Identifier	bin_elements		64419	0					
ANR	64952	Identifier	bin_num		64419	1					
ANR	64953	CompoundStatement		84:67:2449:2449	64419	1					
ANR	64954	ExpressionStatement	"zend_mm_free_pages_ex ( heap , chunk , i , pages_count , 0 )"	1956:6:59853:59906	64419	0	True				
ANR	64955	CallExpression	"zend_mm_free_pages_ex ( heap , chunk , i , pages_count , 0 )"		64419	0					
ANR	64956	Callee	zend_mm_free_pages_ex		64419	0					
ANR	64957	Identifier	zend_mm_free_pages_ex		64419	0					
ANR	64958	ArgumentList	heap		64419	1					
ANR	64959	Argument	heap		64419	0					
ANR	64960	Identifier	heap		64419	0					
ANR	64961	Argument	chunk		64419	1					
ANR	64962	Identifier	chunk		64419	0					
ANR	64963	Argument	i		64419	2					
ANR	64964	Identifier	i		64419	0					
ANR	64965	Argument	pages_count		64419	3					
ANR	64966	Identifier	pages_count		64419	0					
ANR	64967	Argument	0		64419	4					
ANR	64968	PrimaryExpression	0		64419	0					
ANR	64969	ExpressionStatement	collected += pages_count	1957:6:59914:59938	64419	1	True				
ANR	64970	AssignmentExpression	collected += pages_count		64419	0		+=			
ANR	64971	Identifier	collected		64419	0					
ANR	64972	Identifier	pages_count		64419	1					
ANR	64973	ElseStatement	else		64419	0					
ANR	64974	CompoundStatement		88:12:2589:2589	64419	0					
ANR	64975	ExpressionStatement	chunk -> map [ i ] = ZEND_MM_SRUN ( bin_num )	1960:6:59986:60023	64419	0	True				
ANR	64976	AssignmentExpression	chunk -> map [ i ] = ZEND_MM_SRUN ( bin_num )		64419	0		=			
ANR	64977	ArrayIndexing	chunk -> map [ i ]		64419	0					
ANR	64978	PtrMemberAccess	chunk -> map		64419	0					
ANR	64979	Identifier	chunk		64419	0					
ANR	64980	Identifier	map		64419	1					
ANR	64981	Identifier	i		64419	1					
ANR	64982	CallExpression	ZEND_MM_SRUN ( bin_num )		64419	1					
ANR	64983	Callee	ZEND_MM_SRUN		64419	0					
ANR	64984	Identifier	ZEND_MM_SRUN		64419	0					
ANR	64985	ArgumentList	bin_num		64419	1					
ANR	64986	Argument	bin_num		64419	0					
ANR	64987	Identifier	bin_num		64419	0					
ANR	64988	ExpressionStatement	i += bin_pages [ bin_num ]	1962:5:60037:60060	64419	3	True				
ANR	64989	AssignmentExpression	i += bin_pages [ bin_num ]		64419	0		+=			
ANR	64990	Identifier	i		64419	0					
ANR	64991	ArrayIndexing	bin_pages [ bin_num ]		64419	1					
ANR	64992	Identifier	bin_pages		64419	0					
ANR	64993	Identifier	bin_num		64419	1					
ANR	64994	ElseStatement	else		64419	0					
ANR	64995	CompoundStatement		93:45:2744:2744	64419	0					
ANR	64996	ExpressionStatement	i += ZEND_MM_LRUN_PAGES ( info )	1964:5:60114:60143	64419	0	True				
ANR	64997	AssignmentExpression	i += ZEND_MM_LRUN_PAGES ( info )		64419	0		+=			
ANR	64998	Identifier	i		64419	0					
ANR	64999	CallExpression	ZEND_MM_LRUN_PAGES ( info )		64419	1					
ANR	65000	Callee	ZEND_MM_LRUN_PAGES		64419	0					
ANR	65001	Identifier	ZEND_MM_LRUN_PAGES		64419	0					
ANR	65002	ArgumentList	info		64419	1					
ANR	65003	Argument	info		64419	0					
ANR	65004	Identifier	info		64419	0					
ANR	65005	ElseStatement	else		64419	0					
ANR	65006	CompoundStatement		96:10:2798:2798	64419	0					
ANR	65007	ExpressionStatement	i ++	1967:4:60167:60170	64419	0	True				
ANR	65008	PostIncDecOperationExpression	i ++		64419	0					
ANR	65009	Identifier	i		64419	0					
ANR	65010	IncDec	++		64419	1					
ANR	65011	IfStatement	if ( chunk -> free_pages == ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE )		64419	2					
ANR	65012	Condition	chunk -> free_pages == ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE	1970:6:60187:60241	64419	0	True				
ANR	65013	EqualityExpression	chunk -> free_pages == ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE		64419	0		==			
ANR	65014	PtrMemberAccess	chunk -> free_pages		64419	0					
ANR	65015	Identifier	chunk		64419	0					
ANR	65016	Identifier	free_pages		64419	1					
ANR	65017	AdditiveExpression	ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE		64419	1		-			
ANR	65018	Identifier	ZEND_MM_PAGES		64419	0					
ANR	65019	Identifier	ZEND_MM_FIRST_PAGE		64419	1					
ANR	65020	CompoundStatement		101:3:2886:2925	64419	1					
ANR	65021	IdentifierDeclStatement	zend_mm_chunk * next_chunk = chunk -> next ;	1971:3:60249:60288	64419	0	True				
ANR	65022	IdentifierDecl	* next_chunk = chunk -> next		64419	0					
ANR	65023	IdentifierDeclType	zend_mm_chunk *		64419	0					
ANR	65024	Identifier	next_chunk		64419	1					
ANR	65025	AssignmentExpression	* next_chunk = chunk -> next		64419	2		=			
ANR	65026	Identifier	next_chunk		64419	0					
ANR	65027	PtrMemberAccess	chunk -> next		64419	1					
ANR	65028	Identifier	chunk		64419	0					
ANR	65029	Identifier	next		64419	1					
ANR	65030	ExpressionStatement	"zend_mm_delete_chunk ( heap , chunk )"	1973:3:60294:60327	64419	1	True				
ANR	65031	CallExpression	"zend_mm_delete_chunk ( heap , chunk )"		64419	0					
ANR	65032	Callee	zend_mm_delete_chunk		64419	0					
ANR	65033	Identifier	zend_mm_delete_chunk		64419	0					
ANR	65034	ArgumentList	heap		64419	1					
ANR	65035	Argument	heap		64419	0					
ANR	65036	Identifier	heap		64419	0					
ANR	65037	Argument	chunk		64419	1					
ANR	65038	Identifier	chunk		64419	0					
ANR	65039	ExpressionStatement	chunk = next_chunk	1974:3:60332:60350	64419	2	True				
ANR	65040	AssignmentExpression	chunk = next_chunk		64419	0		=			
ANR	65041	Identifier	chunk		64419	0					
ANR	65042	Identifier	next_chunk		64419	1					
ANR	65043	ElseStatement	else		64419	0					
ANR	65044	CompoundStatement		105:9:2998:2998	64419	0					
ANR	65045	ExpressionStatement	chunk = chunk -> next	1976:3:60366:60385	64419	0	True				
ANR	65046	AssignmentExpression	chunk = chunk -> next		64419	0		=			
ANR	65047	Identifier	chunk		64419	0					
ANR	65048	PtrMemberAccess	chunk -> next		64419	1					
ANR	65049	Identifier	chunk		64419	0					
ANR	65050	Identifier	next		64419	1					
ANR	65051	Condition	chunk != heap -> main_chunk	1978:10:60401:60425	64419	1	True				
ANR	65052	EqualityExpression	chunk != heap -> main_chunk		64419	0		!=			
ANR	65053	Identifier	chunk		64419	0					
ANR	65054	PtrMemberAccess	heap -> main_chunk		64419	1					
ANR	65055	Identifier	heap		64419	0					
ANR	65056	Identifier	main_chunk		64419	1					
ANR	65057	ReturnStatement	return collected * ZEND_MM_PAGE_SIZE ;	1980:1:60431:60467	64419	11	True				
ANR	65058	MultiplicativeExpression	collected * ZEND_MM_PAGE_SIZE		64419	0		*			
ANR	65059	Identifier	collected		64419	0					
ANR	65060	Identifier	ZEND_MM_PAGE_SIZE		64419	1					
ANR	65061	ReturnType	ZEND_API size_t		64419	1					
ANR	65062	Identifier	zend_mm_gc		64419	2					
ANR	65063	ParameterList	zend_mm_heap * heap		64419	3					
ANR	65064	Parameter	zend_mm_heap * heap	1870:27:57342:57359	64419	0	True				
ANR	65065	ParameterType	zend_mm_heap *		64419	0					
ANR	65066	Identifier	heap		64419	1					
ANR	65067	CFGEntryNode	ENTRY		64419		True				
ANR	65068	CFGExitNode	EXIT		64419		True				
ANR	65069	Symbol	* * heap		64419						
ANR	65070	Symbol	ZEND_MM_NRUN_OFFSET		64419						
ANR	65071	Symbol	ZEND_MM_PAGES		64419						
ANR	65072	Symbol	collected		64419						
ANR	65073	Symbol	zend_mm_bitset_is_set		64419						
ANR	65074	Symbol	heap -> use_custom_heap		64419						
ANR	65075	Symbol	chunk -> free_tail		64419						
ANR	65076	Symbol	next_chunk		64419						
ANR	65077	Symbol	free_counter		64419						
ANR	65078	Symbol	ZEND_MM_SRUN_FREE_COUNTER		64419						
ANR	65079	Symbol	ZEND_MM_CHUNK_SIZE		64419						
ANR	65080	Symbol	ZEND_MM_IS_LRUN		64419						
ANR	65081	Symbol	info		64419						
ANR	65082	Symbol	NULL		64419						
ANR	65083	Symbol	heap -> main_chunk		64419						
ANR	65084	Symbol	pages_count		64419						
ANR	65085	Symbol	ZEND_MM_IS_SRUN		64419						
ANR	65086	Symbol	chunk -> next		64419						
ANR	65087	Symbol	page_offset		64419						
ANR	65088	Symbol	chunk -> heap		64419						
ANR	65089	Symbol	has_free_pages		64419						
ANR	65090	Symbol	ZEND_MM_ALIGNED_OFFSET		64419						
ANR	65091	Symbol	* bin_num		64419						
ANR	65092	Symbol	* bin_pages		64419						
ANR	65093	Symbol	* chunk -> map		64419						
ANR	65094	Symbol	chunk -> free_map		64419						
ANR	65095	Symbol	* heap		64419						
ANR	65096	Symbol	chunk -> map		64419						
ANR	65097	Symbol	* heap -> free_slot		64419						
ANR	65098	Symbol	bin_num		64419						
ANR	65099	Symbol	chunk		64419						
ANR	65100	Symbol	ZEND_MM_SRUN_BIN_NUM		64419						
ANR	65101	Symbol	* page_num		64419						
ANR	65102	Symbol	ZEND_MM_BINS		64419						
ANR	65103	Symbol	ZEND_MM_FIRST_PAGE		64419						
ANR	65104	Symbol	heap		64419						
ANR	65105	Symbol	ZEND_MM_ALIGNED_BASE		64419						
ANR	65106	Symbol	ZEND_MM_PAGE_SIZE		64419						
ANR	65107	Symbol	ZEND_MM_SRUN_EX		64419						
ANR	65108	Symbol	* bin_elements		64419						
ANR	65109	Symbol	bin_pages		64419						
ANR	65110	Symbol	* * chunk		64419						
ANR	65111	Symbol	ZEND_MM_SRUN		64419						
ANR	65112	Symbol	heap -> free_slot		64419						
ANR	65113	Symbol	& p -> next_free_slot		64419						
ANR	65114	Symbol	page_num		64419						
ANR	65115	Symbol	i		64419						
ANR	65116	Symbol	chunk -> free_pages		64419						
ANR	65117	Symbol	bin_elements		64419						
ANR	65118	Symbol	p		64419						
ANR	65119	Symbol	ZEND_MM_LRUN_PAGES		64419						
ANR	65120	Symbol	q		64419						
ANR	65121	Symbol	* i		64419						
ANR	65122	Symbol	* chunk		64419						
ANR	65123	Symbol	p -> next_free_slot		64419						
ANR	65124	Symbol	* p		64419						
ANR	65125	Symbol	* q		64419						
ANR	65126	Function	zend_mm_find_leaks_small	1988:0:60551:61334							
ANR	65127	FunctionDef	"zend_mm_find_leaks_small (zend_mm_chunk * p , int i , int j , zend_leak_info * leak)"		65126	0					
ANR	65128	CompoundStatement		1989:0:60647:61334	65126	0					
ANR	65129	IdentifierDeclStatement	int empty = 1 ;	1990:4:60653:60666	65126	0	True				
ANR	65130	IdentifierDecl	empty = 1		65126	0					
ANR	65131	IdentifierDeclType	int		65126	0					
ANR	65132	Identifier	empty		65126	1					
ANR	65133	AssignmentExpression	empty = 1		65126	2		=			
ANR	65134	Identifier	empty		65126	0					
ANR	65135	PrimaryExpression	1		65126	1					
ANR	65136	IdentifierDeclStatement	zend_long count = 0 ;	1991:1:60669:60688	65126	1	True				
ANR	65137	IdentifierDecl	count = 0		65126	0					
ANR	65138	IdentifierDeclType	zend_long		65126	0					
ANR	65139	Identifier	count		65126	1					
ANR	65140	AssignmentExpression	count = 0		65126	2		=			
ANR	65141	Identifier	count		65126	0					
ANR	65142	PrimaryExpression	0		65126	1					
ANR	65143	IdentifierDeclStatement	int bin_num = ZEND_MM_SRUN_BIN_NUM ( p -> map [ i ] ) ;	1992:1:60691:60736	65126	2	True				
ANR	65144	IdentifierDecl	bin_num = ZEND_MM_SRUN_BIN_NUM ( p -> map [ i ] )		65126	0					
ANR	65145	IdentifierDeclType	int		65126	0					
ANR	65146	Identifier	bin_num		65126	1					
ANR	65147	AssignmentExpression	bin_num = ZEND_MM_SRUN_BIN_NUM ( p -> map [ i ] )		65126	2		=			
ANR	65148	Identifier	bin_num		65126	0					
ANR	65149	CallExpression	ZEND_MM_SRUN_BIN_NUM ( p -> map [ i ] )		65126	1					
ANR	65150	Callee	ZEND_MM_SRUN_BIN_NUM		65126	0					
ANR	65151	Identifier	ZEND_MM_SRUN_BIN_NUM		65126	0					
ANR	65152	ArgumentList	p -> map [ i ]		65126	1					
ANR	65153	Argument	p -> map [ i ]		65126	0					
ANR	65154	ArrayIndexing	p -> map [ i ]		65126	0					
ANR	65155	PtrMemberAccess	p -> map		65126	0					
ANR	65156	Identifier	p		65126	0					
ANR	65157	Identifier	map		65126	1					
ANR	65158	Identifier	i		65126	1					
ANR	65159	IdentifierDeclStatement	zend_mm_debug_info * dbg = ( zend_mm_debug_info * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * i + bin_data_size [ bin_num ] * ( j + 1 ) - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) ) ;	1993:1:60739:60906	65126	3	True				
ANR	65160	IdentifierDecl	* dbg = ( zend_mm_debug_info * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * i + bin_data_size [ bin_num ] * ( j + 1 ) - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		65126	0					
ANR	65161	IdentifierDeclType	zend_mm_debug_info *		65126	0					
ANR	65162	Identifier	dbg		65126	1					
ANR	65163	AssignmentExpression	* dbg = ( zend_mm_debug_info * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * i + bin_data_size [ bin_num ] * ( j + 1 ) - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		65126	2		=			
ANR	65164	Identifier	dbg		65126	0					
ANR	65165	CastExpression	( zend_mm_debug_info * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * i + bin_data_size [ bin_num ] * ( j + 1 ) - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		65126	1					
ANR	65166	CastTarget	zend_mm_debug_info *		65126	0					
ANR	65167	AdditiveExpression	( char * ) p + ZEND_MM_PAGE_SIZE * i + bin_data_size [ bin_num ] * ( j + 1 ) - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		65126	1		+			
ANR	65168	CastExpression	( char * ) p		65126	0					
ANR	65169	CastTarget	char *		65126	0					
ANR	65170	Identifier	p		65126	1					
ANR	65171	AdditiveExpression	ZEND_MM_PAGE_SIZE * i + bin_data_size [ bin_num ] * ( j + 1 ) - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		65126	1		+			
ANR	65172	MultiplicativeExpression	ZEND_MM_PAGE_SIZE * i		65126	0		*			
ANR	65173	Identifier	ZEND_MM_PAGE_SIZE		65126	0					
ANR	65174	Identifier	i		65126	1					
ANR	65175	AdditiveExpression	bin_data_size [ bin_num ] * ( j + 1 ) - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		65126	1		-			
ANR	65176	MultiplicativeExpression	bin_data_size [ bin_num ] * ( j + 1 )		65126	0		*			
ANR	65177	ArrayIndexing	bin_data_size [ bin_num ]		65126	0					
ANR	65178	Identifier	bin_data_size		65126	0					
ANR	65179	Identifier	bin_num		65126	1					
ANR	65180	AdditiveExpression	j + 1		65126	1		+			
ANR	65181	Identifier	j		65126	0					
ANR	65182	PrimaryExpression	1		65126	1					
ANR	65183	CallExpression	ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		65126	1					
ANR	65184	Callee	ZEND_MM_ALIGNED_SIZE		65126	0					
ANR	65185	Identifier	ZEND_MM_ALIGNED_SIZE		65126	0					
ANR	65186	ArgumentList	sizeof ( zend_mm_debug_info )		65126	1					
ANR	65187	Argument	sizeof ( zend_mm_debug_info )		65126	0					
ANR	65188	SizeofExpression	sizeof ( zend_mm_debug_info )		65126	0					
ANR	65189	Sizeof	sizeof		65126	0					
ANR	65190	SizeofOperand	zend_mm_debug_info		65126	1					
ANR	65191	WhileStatement	while ( j < bin_elements [ bin_num ] )		65126	4					
ANR	65192	Condition	j < bin_elements [ bin_num ]	1995:8:60917:60941	65126	0	True				
ANR	65193	RelationalExpression	j < bin_elements [ bin_num ]		65126	0		<			
ANR	65194	Identifier	j		65126	0					
ANR	65195	ArrayIndexing	bin_elements [ bin_num ]		65126	1					
ANR	65196	Identifier	bin_elements		65126	0					
ANR	65197	Identifier	bin_num		65126	1					
ANR	65198	CompoundStatement		7:35:296:296	65126	1					
ANR	65199	IfStatement	if ( dbg -> size != 0 )		65126	0					
ANR	65200	Condition	dbg -> size != 0	1996:6:60952:60965	65126	0	True				
ANR	65201	EqualityExpression	dbg -> size != 0		65126	0		!=			
ANR	65202	PtrMemberAccess	dbg -> size		65126	0					
ANR	65203	Identifier	dbg		65126	0					
ANR	65204	Identifier	size		65126	1					
ANR	65205	PrimaryExpression	0		65126	1					
ANR	65206	CompoundStatement		8:22:320:320	65126	1					
ANR	65207	IfStatement	if ( dbg -> filename == leak -> filename && dbg -> lineno == leak -> lineno )		65126	0					
ANR	65208	Condition	dbg -> filename == leak -> filename && dbg -> lineno == leak -> lineno	1997:7:60977:61038	65126	0	True				
ANR	65209	AndExpression	dbg -> filename == leak -> filename && dbg -> lineno == leak -> lineno		65126	0		&&			
ANR	65210	EqualityExpression	dbg -> filename == leak -> filename		65126	0		==			
ANR	65211	PtrMemberAccess	dbg -> filename		65126	0					
ANR	65212	Identifier	dbg		65126	0					
ANR	65213	Identifier	filename		65126	1					
ANR	65214	PtrMemberAccess	leak -> filename		65126	1					
ANR	65215	Identifier	leak		65126	0					
ANR	65216	Identifier	filename		65126	1					
ANR	65217	EqualityExpression	dbg -> lineno == leak -> lineno		65126	1		==			
ANR	65218	PtrMemberAccess	dbg -> lineno		65126	0					
ANR	65219	Identifier	dbg		65126	0					
ANR	65220	Identifier	lineno		65126	1					
ANR	65221	PtrMemberAccess	leak -> lineno		65126	1					
ANR	65222	Identifier	leak		65126	0					
ANR	65223	Identifier	lineno		65126	1					
ANR	65224	CompoundStatement		9:71:393:393	65126	1					
ANR	65225	ExpressionStatement	count ++	1998:4:61047:61054	65126	0	True				
ANR	65226	PostIncDecOperationExpression	count ++		65126	0					
ANR	65227	Identifier	count		65126	0					
ANR	65228	IncDec	++		65126	1					
ANR	65229	ExpressionStatement	dbg -> size = 0	1999:4:61060:61073	65126	1	True				
ANR	65230	AssignmentExpression	dbg -> size = 0		65126	0		=			
ANR	65231	PtrMemberAccess	dbg -> size		65126	0					
ANR	65232	Identifier	dbg		65126	0					
ANR	65233	Identifier	size		65126	1					
ANR	65234	PrimaryExpression	0		65126	1					
ANR	65235	ExpressionStatement	dbg -> filename = NULL	2000:4:61079:61099	65126	2	True				
ANR	65236	AssignmentExpression	dbg -> filename = NULL		65126	0		=			
ANR	65237	PtrMemberAccess	dbg -> filename		65126	0					
ANR	65238	Identifier	dbg		65126	0					
ANR	65239	Identifier	filename		65126	1					
ANR	65240	Identifier	NULL		65126	1					
ANR	65241	ExpressionStatement	dbg -> lineno = 0	2001:4:61105:61120	65126	3	True				
ANR	65242	AssignmentExpression	dbg -> lineno = 0		65126	0		=			
ANR	65243	PtrMemberAccess	dbg -> lineno		65126	0					
ANR	65244	Identifier	dbg		65126	0					
ANR	65245	Identifier	lineno		65126	1					
ANR	65246	PrimaryExpression	0		65126	1					
ANR	65247	ElseStatement	else		65126	0					
ANR	65248	CompoundStatement		14:10:484:484	65126	0					
ANR	65249	ExpressionStatement	empty = 0	2003:4:61138:61147	65126	0	True				
ANR	65250	AssignmentExpression	empty = 0		65126	0		=			
ANR	65251	Identifier	empty		65126	0					
ANR	65252	PrimaryExpression	0		65126	1					
ANR	65253	ExpressionStatement	j ++	2006:2:61160:61163	65126	1	True				
ANR	65254	PostIncDecOperationExpression	j ++		65126	0					
ANR	65255	Identifier	j		65126	0					
ANR	65256	IncDec	++		65126	1					
ANR	65257	ExpressionStatement	dbg = ( zend_mm_debug_info * ) ( ( char * ) dbg + bin_data_size [ bin_num ] )	2007:2:61167:61231	65126	2	True				
ANR	65258	AssignmentExpression	dbg = ( zend_mm_debug_info * ) ( ( char * ) dbg + bin_data_size [ bin_num ] )		65126	0		=			
ANR	65259	Identifier	dbg		65126	0					
ANR	65260	CastExpression	( zend_mm_debug_info * ) ( ( char * ) dbg + bin_data_size [ bin_num ] )		65126	1					
ANR	65261	CastTarget	zend_mm_debug_info *		65126	0					
ANR	65262	AdditiveExpression	( char * ) dbg + bin_data_size [ bin_num ]		65126	1		+			
ANR	65263	CastExpression	( char * ) dbg		65126	0					
ANR	65264	CastTarget	char *		65126	0					
ANR	65265	Identifier	dbg		65126	1					
ANR	65266	ArrayIndexing	bin_data_size [ bin_num ]		65126	1					
ANR	65267	Identifier	bin_data_size		65126	0					
ANR	65268	Identifier	bin_num		65126	1					
ANR	65269	IfStatement	if ( empty )		65126	5					
ANR	65270	Condition	empty	2009:5:61241:61245	65126	0	True				
ANR	65271	Identifier	empty		65126	0					
ANR	65272	CompoundStatement		21:12:600:600	65126	1					
ANR	65273	ExpressionStatement	"zend_mm_bitset_reset_range ( p -> free_map , i , bin_pages [ bin_num ] )"	2010:2:61252:61314	65126	0	True				
ANR	65274	CallExpression	"zend_mm_bitset_reset_range ( p -> free_map , i , bin_pages [ bin_num ] )"		65126	0					
ANR	65275	Callee	zend_mm_bitset_reset_range		65126	0					
ANR	65276	Identifier	zend_mm_bitset_reset_range		65126	0					
ANR	65277	ArgumentList	p -> free_map		65126	1					
ANR	65278	Argument	p -> free_map		65126	0					
ANR	65279	PtrMemberAccess	p -> free_map		65126	0					
ANR	65280	Identifier	p		65126	0					
ANR	65281	Identifier	free_map		65126	1					
ANR	65282	Argument	i		65126	1					
ANR	65283	Identifier	i		65126	0					
ANR	65284	Argument	bin_pages [ bin_num ]		65126	2					
ANR	65285	ArrayIndexing	bin_pages [ bin_num ]		65126	0					
ANR	65286	Identifier	bin_pages		65126	0					
ANR	65287	Identifier	bin_num		65126	1					
ANR	65288	ReturnStatement	return count ;	2012:1:61320:61332	65126	6	True				
ANR	65289	Identifier	count		65126	0					
ANR	65290	ReturnType	static zend_long		65126	1					
ANR	65291	Identifier	zend_mm_find_leaks_small		65126	2					
ANR	65292	ParameterList	"zend_mm_chunk * p , int i , int j , zend_leak_info * leak"		65126	3					
ANR	65293	Parameter	zend_mm_chunk * p	1988:42:60593:60608	65126	0	True				
ANR	65294	ParameterType	zend_mm_chunk *		65126	0					
ANR	65295	Identifier	p		65126	1					
ANR	65296	Parameter	int i	1988:60:60611:60615	65126	1	True				
ANR	65297	ParameterType	int		65126	0					
ANR	65298	Identifier	i		65126	1					
ANR	65299	Parameter	int j	1988:67:60618:60622	65126	2	True				
ANR	65300	ParameterType	int		65126	0					
ANR	65301	Identifier	j		65126	1					
ANR	65302	Parameter	zend_leak_info * leak	1988:74:60625:60644	65126	3	True				
ANR	65303	ParameterType	zend_leak_info *		65126	0					
ANR	65304	Identifier	leak		65126	1					
ANR	65305	CFGEntryNode	ENTRY		65126		True				
ANR	65306	CFGExitNode	EXIT		65126		True				
ANR	65307	Symbol	leak -> filename		65126						
ANR	65308	Symbol	bin_num		65126						
ANR	65309	Symbol	dbg -> size		65126						
ANR	65310	Symbol	ZEND_MM_SRUN_BIN_NUM		65126						
ANR	65311	Symbol	dbg -> lineno		65126						
ANR	65312	Symbol	p -> free_map		65126						
ANR	65313	Symbol	empty		65126						
ANR	65314	Symbol	leak		65126						
ANR	65315	Symbol	p -> map		65126						
ANR	65316	Symbol	* bin_data_size		65126						
ANR	65317	Symbol	dbg -> filename		65126						
ANR	65318	Symbol	* * p		65126						
ANR	65319	Symbol	ZEND_MM_PAGE_SIZE		65126						
ANR	65320	Symbol	bin_data_size		65126						
ANR	65321	Symbol	* bin_elements		65126						
ANR	65322	Symbol	NULL		65126						
ANR	65323	Symbol	bin_pages		65126						
ANR	65324	Symbol	ZEND_MM_ALIGNED_SIZE		65126						
ANR	65325	Symbol	count		65126						
ANR	65326	Symbol	dbg		65126						
ANR	65327	Symbol	i		65126						
ANR	65328	Symbol	j		65126						
ANR	65329	Symbol	bin_elements		65126						
ANR	65330	Symbol	* dbg		65126						
ANR	65331	Symbol	p		65126						
ANR	65332	Symbol	* bin_num		65126						
ANR	65333	Symbol	leak -> lineno		65126						
ANR	65334	Symbol	* i		65126						
ANR	65335	Symbol	* bin_pages		65126						
ANR	65336	Symbol	* leak		65126						
ANR	65337	Symbol	* p -> map		65126						
ANR	65338	Symbol	* p		65126						
ANR	65339	Function	zend_mm_find_leaks	2015:0:61337:62268							
ANR	65340	FunctionDef	"zend_mm_find_leaks (zend_mm_heap * heap , zend_mm_chunk * p , int i , zend_leak_info * leak)"		65339	0					
ANR	65341	CompoundStatement		2016:0:61440:62268	65339	0					
ANR	65342	IdentifierDeclStatement	zend_long count = 0 ;	2017:1:61443:61462	65339	0	True				
ANR	65343	IdentifierDecl	count = 0		65339	0					
ANR	65344	IdentifierDeclType	zend_long		65339	0					
ANR	65345	Identifier	count		65339	1					
ANR	65346	AssignmentExpression	count = 0		65339	2		=			
ANR	65347	Identifier	count		65339	0					
ANR	65348	PrimaryExpression	0		65339	1					
ANR	65349	DoStatement	do		65339	1					
ANR	65350	CompoundStatement		4:4:28:28	65339	0					
ANR	65351	WhileStatement	while ( i < p -> free_tail )		65339	0					
ANR	65352	Condition	i < p -> free_tail	2020:9:61480:61495	65339	0	True				
ANR	65353	RelationalExpression	i < p -> free_tail		65339	0		<			
ANR	65354	Identifier	i		65339	0					
ANR	65355	PtrMemberAccess	p -> free_tail		65339	1					
ANR	65356	Identifier	p		65339	0					
ANR	65357	Identifier	free_tail		65339	1					
ANR	65358	CompoundStatement		5:27:57:57	65339	1					
ANR	65359	IfStatement	"if ( zend_mm_bitset_is_set ( p -> free_map , i ) )"		65339	0					
ANR	65360	Condition	"zend_mm_bitset_is_set ( p -> free_map , i )"	2021:7:61507:61543	65339	0	True				
ANR	65361	CallExpression	"zend_mm_bitset_is_set ( p -> free_map , i )"		65339	0					
ANR	65362	Callee	zend_mm_bitset_is_set		65339	0					
ANR	65363	Identifier	zend_mm_bitset_is_set		65339	0					
ANR	65364	ArgumentList	p -> free_map		65339	1					
ANR	65365	Argument	p -> free_map		65339	0					
ANR	65366	PtrMemberAccess	p -> free_map		65339	0					
ANR	65367	Identifier	p		65339	0					
ANR	65368	Identifier	free_map		65339	1					
ANR	65369	Argument	i		65339	1					
ANR	65370	Identifier	i		65339	0					
ANR	65371	CompoundStatement		6:46:105:105	65339	1					
ANR	65372	IfStatement	if ( p -> map [ i ] & ZEND_MM_IS_SRUN )		65339	0					
ANR	65373	Condition	p -> map [ i ] & ZEND_MM_IS_SRUN	2022:8:61556:61582	65339	0	True				
ANR	65374	BitAndExpression	p -> map [ i ] & ZEND_MM_IS_SRUN		65339	0		&			
ANR	65375	ArrayIndexing	p -> map [ i ]		65339	0					
ANR	65376	PtrMemberAccess	p -> map		65339	0					
ANR	65377	Identifier	p		65339	0					
ANR	65378	Identifier	map		65339	1					
ANR	65379	Identifier	i		65339	1					
ANR	65380	Identifier	ZEND_MM_IS_SRUN		65339	1					
ANR	65381	CompoundStatement		8:5:151:196	65339	1					
ANR	65382	IdentifierDeclStatement	int bin_num = ZEND_MM_SRUN_BIN_NUM ( p -> map [ i ] ) ;	2023:5:61592:61637	65339	0	True				
ANR	65383	IdentifierDecl	bin_num = ZEND_MM_SRUN_BIN_NUM ( p -> map [ i ] )		65339	0					
ANR	65384	IdentifierDeclType	int		65339	0					
ANR	65385	Identifier	bin_num		65339	1					
ANR	65386	AssignmentExpression	bin_num = ZEND_MM_SRUN_BIN_NUM ( p -> map [ i ] )		65339	2		=			
ANR	65387	Identifier	bin_num		65339	0					
ANR	65388	CallExpression	ZEND_MM_SRUN_BIN_NUM ( p -> map [ i ] )		65339	1					
ANR	65389	Callee	ZEND_MM_SRUN_BIN_NUM		65339	0					
ANR	65390	Identifier	ZEND_MM_SRUN_BIN_NUM		65339	0					
ANR	65391	ArgumentList	p -> map [ i ]		65339	1					
ANR	65392	Argument	p -> map [ i ]		65339	0					
ANR	65393	ArrayIndexing	p -> map [ i ]		65339	0					
ANR	65394	PtrMemberAccess	p -> map		65339	0					
ANR	65395	Identifier	p		65339	0					
ANR	65396	Identifier	map		65339	1					
ANR	65397	Identifier	i		65339	1					
ANR	65398	ExpressionStatement	"count += zend_mm_find_leaks_small ( p , i , 0 , leak )"	2024:5:61644:61692	65339	1	True				
ANR	65399	AssignmentExpression	"count += zend_mm_find_leaks_small ( p , i , 0 , leak )"		65339	0		+=			
ANR	65400	Identifier	count		65339	0					
ANR	65401	CallExpression	"zend_mm_find_leaks_small ( p , i , 0 , leak )"		65339	1					
ANR	65402	Callee	zend_mm_find_leaks_small		65339	0					
ANR	65403	Identifier	zend_mm_find_leaks_small		65339	0					
ANR	65404	ArgumentList	p		65339	1					
ANR	65405	Argument	p		65339	0					
ANR	65406	Identifier	p		65339	0					
ANR	65407	Argument	i		65339	1					
ANR	65408	Identifier	i		65339	0					
ANR	65409	Argument	0		65339	2					
ANR	65410	PrimaryExpression	0		65339	0					
ANR	65411	Argument	leak		65339	3					
ANR	65412	Identifier	leak		65339	0					
ANR	65413	ExpressionStatement	i += bin_pages [ bin_num ]	2025:5:61699:61722	65339	2	True				
ANR	65414	AssignmentExpression	i += bin_pages [ bin_num ]		65339	0		+=			
ANR	65415	Identifier	i		65339	0					
ANR	65416	ArrayIndexing	bin_pages [ bin_num ]		65339	1					
ANR	65417	Identifier	bin_pages		65339	0					
ANR	65418	Identifier	bin_num		65339	1					
ANR	65419	ElseStatement	else		65339	0					
ANR	65420	CompoundStatement		13:5:394:542	65339	0					
ANR	65421	IdentifierDeclStatement	int pages_count = ZEND_MM_LRUN_PAGES ( p -> map [ i ] ) ;	2027:5:61781:61828	65339	0	True				
ANR	65422	IdentifierDecl	pages_count = ZEND_MM_LRUN_PAGES ( p -> map [ i ] )		65339	0					
ANR	65423	IdentifierDeclType	int		65339	0					
ANR	65424	Identifier	pages_count		65339	1					
ANR	65425	AssignmentExpression	pages_count = ZEND_MM_LRUN_PAGES ( p -> map [ i ] )		65339	2		=			
ANR	65426	Identifier	pages_count		65339	0					
ANR	65427	CallExpression	ZEND_MM_LRUN_PAGES ( p -> map [ i ] )		65339	1					
ANR	65428	Callee	ZEND_MM_LRUN_PAGES		65339	0					
ANR	65429	Identifier	ZEND_MM_LRUN_PAGES		65339	0					
ANR	65430	ArgumentList	p -> map [ i ]		65339	1					
ANR	65431	Argument	p -> map [ i ]		65339	0					
ANR	65432	ArrayIndexing	p -> map [ i ]		65339	0					
ANR	65433	PtrMemberAccess	p -> map		65339	0					
ANR	65434	Identifier	p		65339	0					
ANR	65435	Identifier	map		65339	1					
ANR	65436	Identifier	i		65339	1					
ANR	65437	IdentifierDeclStatement	zend_mm_debug_info * dbg = ( zend_mm_debug_info * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * ( i + pages_count ) - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) ) ;	2028:5:61835:61983	65339	1	True				
ANR	65438	IdentifierDecl	* dbg = ( zend_mm_debug_info * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * ( i + pages_count ) - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		65339	0					
ANR	65439	IdentifierDeclType	zend_mm_debug_info *		65339	0					
ANR	65440	Identifier	dbg		65339	1					
ANR	65441	AssignmentExpression	* dbg = ( zend_mm_debug_info * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * ( i + pages_count ) - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		65339	2		=			
ANR	65442	Identifier	dbg		65339	0					
ANR	65443	CastExpression	( zend_mm_debug_info * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * ( i + pages_count ) - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		65339	1					
ANR	65444	CastTarget	zend_mm_debug_info *		65339	0					
ANR	65445	AdditiveExpression	( char * ) p + ZEND_MM_PAGE_SIZE * ( i + pages_count ) - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		65339	1		+			
ANR	65446	CastExpression	( char * ) p		65339	0					
ANR	65447	CastTarget	char *		65339	0					
ANR	65448	Identifier	p		65339	1					
ANR	65449	AdditiveExpression	ZEND_MM_PAGE_SIZE * ( i + pages_count ) - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		65339	1		-			
ANR	65450	MultiplicativeExpression	ZEND_MM_PAGE_SIZE * ( i + pages_count )		65339	0		*			
ANR	65451	Identifier	ZEND_MM_PAGE_SIZE		65339	0					
ANR	65452	AdditiveExpression	i + pages_count		65339	1		+			
ANR	65453	Identifier	i		65339	0					
ANR	65454	Identifier	pages_count		65339	1					
ANR	65455	CallExpression	ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		65339	1					
ANR	65456	Callee	ZEND_MM_ALIGNED_SIZE		65339	0					
ANR	65457	Identifier	ZEND_MM_ALIGNED_SIZE		65339	0					
ANR	65458	ArgumentList	sizeof ( zend_mm_debug_info )		65339	1					
ANR	65459	Argument	sizeof ( zend_mm_debug_info )		65339	0					
ANR	65460	SizeofExpression	sizeof ( zend_mm_debug_info )		65339	0					
ANR	65461	Sizeof	sizeof		65339	0					
ANR	65462	SizeofOperand	zend_mm_debug_info		65339	1					
ANR	65463	IfStatement	if ( dbg -> filename == leak -> filename && dbg -> lineno == leak -> lineno )		65339	2					
ANR	65464	Condition	dbg -> filename == leak -> filename && dbg -> lineno == leak -> lineno	2030:9:61995:62056	65339	0	True				
ANR	65465	AndExpression	dbg -> filename == leak -> filename && dbg -> lineno == leak -> lineno		65339	0		&&			
ANR	65466	EqualityExpression	dbg -> filename == leak -> filename		65339	0		==			
ANR	65467	PtrMemberAccess	dbg -> filename		65339	0					
ANR	65468	Identifier	dbg		65339	0					
ANR	65469	Identifier	filename		65339	1					
ANR	65470	PtrMemberAccess	leak -> filename		65339	1					
ANR	65471	Identifier	leak		65339	0					
ANR	65472	Identifier	filename		65339	1					
ANR	65473	EqualityExpression	dbg -> lineno == leak -> lineno		65339	1		==			
ANR	65474	PtrMemberAccess	dbg -> lineno		65339	0					
ANR	65475	Identifier	dbg		65339	0					
ANR	65476	Identifier	lineno		65339	1					
ANR	65477	PtrMemberAccess	leak -> lineno		65339	1					
ANR	65478	Identifier	leak		65339	0					
ANR	65479	Identifier	lineno		65339	1					
ANR	65480	CompoundStatement		15:73:618:618	65339	1					
ANR	65481	ExpressionStatement	count ++	2031:6:62067:62074	65339	0	True				
ANR	65482	PostIncDecOperationExpression	count ++		65339	0					
ANR	65483	Identifier	count		65339	0					
ANR	65484	IncDec	++		65339	1					
ANR	65485	ExpressionStatement	"zend_mm_bitset_reset_range ( p -> free_map , i , pages_count )"	2033:5:62088:62143	65339	3	True				
ANR	65486	CallExpression	"zend_mm_bitset_reset_range ( p -> free_map , i , pages_count )"		65339	0					
ANR	65487	Callee	zend_mm_bitset_reset_range		65339	0					
ANR	65488	Identifier	zend_mm_bitset_reset_range		65339	0					
ANR	65489	ArgumentList	p -> free_map		65339	1					
ANR	65490	Argument	p -> free_map		65339	0					
ANR	65491	PtrMemberAccess	p -> free_map		65339	0					
ANR	65492	Identifier	p		65339	0					
ANR	65493	Identifier	free_map		65339	1					
ANR	65494	Argument	i		65339	1					
ANR	65495	Identifier	i		65339	0					
ANR	65496	Argument	pages_count		65339	2					
ANR	65497	Identifier	pages_count		65339	0					
ANR	65498	ExpressionStatement	i += pages_count	2034:5:62150:62166	65339	4	True				
ANR	65499	AssignmentExpression	i += pages_count		65339	0		+=			
ANR	65500	Identifier	i		65339	0					
ANR	65501	Identifier	pages_count		65339	1					
ANR	65502	ElseStatement	else		65339	0					
ANR	65503	CompoundStatement		21:10:743:743	65339	0					
ANR	65504	ExpressionStatement	i ++	2037:4:62190:62193	65339	0	True				
ANR	65505	PostIncDecOperationExpression	i ++		65339	0					
ANR	65506	Identifier	i		65339	0					
ANR	65507	IncDec	++		65339	1					
ANR	65508	ExpressionStatement	p = p -> next	2040:2:62206:62217	65339	1	True				
ANR	65509	AssignmentExpression	p = p -> next		65339	0		=			
ANR	65510	Identifier	p		65339	0					
ANR	65511	PtrMemberAccess	p -> next		65339	1					
ANR	65512	Identifier	p		65339	0					
ANR	65513	Identifier	next		65339	1					
ANR	65514	Condition	p != heap -> main_chunk	2041:10:62229:62249	65339	1	True				
ANR	65515	EqualityExpression	p != heap -> main_chunk		65339	0		!=			
ANR	65516	Identifier	p		65339	0					
ANR	65517	PtrMemberAccess	heap -> main_chunk		65339	1					
ANR	65518	Identifier	heap		65339	0					
ANR	65519	Identifier	main_chunk		65339	1					
ANR	65520	ReturnStatement	return count ;	2042:1:62254:62266	65339	2	True				
ANR	65521	Identifier	count		65339	0					
ANR	65522	ReturnType	static zend_long		65339	1					
ANR	65523	Identifier	zend_mm_find_leaks		65339	2					
ANR	65524	ParameterList	"zend_mm_heap * heap , zend_mm_chunk * p , int i , zend_leak_info * leak"		65339	3					
ANR	65525	Parameter	zend_mm_heap * heap	2015:36:61373:61390	65339	0	True				
ANR	65526	ParameterType	zend_mm_heap *		65339	0					
ANR	65527	Identifier	heap		65339	1					
ANR	65528	Parameter	zend_mm_chunk * p	2015:56:61393:61408	65339	1	True				
ANR	65529	ParameterType	zend_mm_chunk *		65339	0					
ANR	65530	Identifier	p		65339	1					
ANR	65531	Parameter	int i	2015:74:61411:61415	65339	2	True				
ANR	65532	ParameterType	int		65339	0					
ANR	65533	Identifier	i		65339	1					
ANR	65534	Parameter	zend_leak_info * leak	2015:81:61418:61437	65339	3	True				
ANR	65535	ParameterType	zend_leak_info *		65339	0					
ANR	65536	Identifier	leak		65339	1					
ANR	65537	CFGEntryNode	ENTRY		65339		True				
ANR	65538	CFGExitNode	EXIT		65339		True				
ANR	65539	Symbol	leak -> filename		65339						
ANR	65540	Symbol	p -> next		65339						
ANR	65541	Symbol	bin_num		65339						
ANR	65542	Symbol	ZEND_MM_SRUN_BIN_NUM		65339						
ANR	65543	Symbol	zend_mm_bitset_is_set		65339						
ANR	65544	Symbol	dbg -> lineno		65339						
ANR	65545	Symbol	p -> free_map		65339						
ANR	65546	Symbol	zend_mm_find_leaks_small		65339						
ANR	65547	Symbol	leak		65339						
ANR	65548	Symbol	p -> map		65339						
ANR	65549	Symbol	dbg -> filename		65339						
ANR	65550	Symbol	p -> free_tail		65339						
ANR	65551	Symbol	* * p		65339						
ANR	65552	Symbol	heap		65339						
ANR	65553	Symbol	ZEND_MM_PAGE_SIZE		65339						
ANR	65554	Symbol	bin_pages		65339						
ANR	65555	Symbol	heap -> main_chunk		65339						
ANR	65556	Symbol	ZEND_MM_ALIGNED_SIZE		65339						
ANR	65557	Symbol	pages_count		65339						
ANR	65558	Symbol	ZEND_MM_IS_SRUN		65339						
ANR	65559	Symbol	count		65339						
ANR	65560	Symbol	dbg		65339						
ANR	65561	Symbol	i		65339						
ANR	65562	Symbol	* dbg		65339						
ANR	65563	Symbol	p		65339						
ANR	65564	Symbol	ZEND_MM_LRUN_PAGES		65339						
ANR	65565	Symbol	* bin_num		65339						
ANR	65566	Symbol	leak -> lineno		65339						
ANR	65567	Symbol	* i		65339						
ANR	65568	Symbol	* bin_pages		65339						
ANR	65569	Symbol	* leak		65339						
ANR	65570	Symbol	* p		65339						
ANR	65571	Symbol	* p -> map		65339						
ANR	65572	Symbol	* heap		65339						
ANR	65573	Function	zend_mm_find_leaks_huge	2045:0:62271:62745							
ANR	65574	FunctionDef	"zend_mm_find_leaks_huge (zend_mm_heap * heap , zend_mm_huge_list * list)"		65573	0					
ANR	65575	CompoundStatement		2046:0:62357:62745	65573	0					
ANR	65576	IdentifierDeclStatement	zend_long count = 0 ;	2047:1:62360:62379	65573	0	True				
ANR	65577	IdentifierDecl	count = 0		65573	0					
ANR	65578	IdentifierDeclType	zend_long		65573	0					
ANR	65579	Identifier	count		65573	1					
ANR	65580	AssignmentExpression	count = 0		65573	2		=			
ANR	65581	Identifier	count		65573	0					
ANR	65582	PrimaryExpression	0		65573	1					
ANR	65583	IdentifierDeclStatement	zend_mm_huge_list * prev = list ;	2048:1:62382:62412	65573	1	True				
ANR	65584	IdentifierDecl	* prev = list		65573	0					
ANR	65585	IdentifierDeclType	zend_mm_huge_list *		65573	0					
ANR	65586	Identifier	prev		65573	1					
ANR	65587	AssignmentExpression	* prev = list		65573	2		=			
ANR	65588	Identifier	list		65573	0					
ANR	65589	Identifier	list		65573	1					
ANR	65590	IdentifierDeclStatement	zend_mm_huge_list * p = list -> next ;	2049:1:62415:62448	65573	2	True				
ANR	65591	IdentifierDecl	* p = list -> next		65573	0					
ANR	65592	IdentifierDeclType	zend_mm_huge_list *		65573	0					
ANR	65593	Identifier	p		65573	1					
ANR	65594	AssignmentExpression	* p = list -> next		65573	2		=			
ANR	65595	Identifier	p		65573	0					
ANR	65596	PtrMemberAccess	list -> next		65573	1					
ANR	65597	Identifier	list		65573	0					
ANR	65598	Identifier	next		65573	1					
ANR	65599	WhileStatement	while ( p )		65573	3					
ANR	65600	Condition	p	2051:8:62459:62459	65573	0	True				
ANR	65601	Identifier	p		65573	0					
ANR	65602	CompoundStatement		6:11:104:104	65573	1					
ANR	65603	IfStatement	if ( p -> dbg . filename == list -> dbg . filename && p -> dbg . lineno == list -> dbg . lineno )		65573	0					
ANR	65604	Condition	p -> dbg . filename == list -> dbg . filename && p -> dbg . lineno == list -> dbg . lineno	2052:6:62470:62543	65573	0	True				
ANR	65605	AndExpression	p -> dbg . filename == list -> dbg . filename && p -> dbg . lineno == list -> dbg . lineno		65573	0		&&			
ANR	65606	EqualityExpression	p -> dbg . filename == list -> dbg . filename		65573	0		==			
ANR	65607	MemberAccess	p -> dbg . filename		65573	0					
ANR	65608	PtrMemberAccess	p -> dbg		65573	0					
ANR	65609	Identifier	p		65573	0					
ANR	65610	Identifier	dbg		65573	1					
ANR	65611	Identifier	filename		65573	1					
ANR	65612	MemberAccess	list -> dbg . filename		65573	1					
ANR	65613	PtrMemberAccess	list -> dbg		65573	0					
ANR	65614	Identifier	list		65573	0					
ANR	65615	Identifier	dbg		65573	1					
ANR	65616	Identifier	filename		65573	1					
ANR	65617	EqualityExpression	p -> dbg . lineno == list -> dbg . lineno		65573	1		==			
ANR	65618	MemberAccess	p -> dbg . lineno		65573	0					
ANR	65619	PtrMemberAccess	p -> dbg		65573	0					
ANR	65620	Identifier	p		65573	0					
ANR	65621	Identifier	dbg		65573	1					
ANR	65622	Identifier	lineno		65573	1					
ANR	65623	MemberAccess	list -> dbg . lineno		65573	1					
ANR	65624	PtrMemberAccess	list -> dbg		65573	0					
ANR	65625	Identifier	list		65573	0					
ANR	65626	Identifier	dbg		65573	1					
ANR	65627	Identifier	lineno		65573	1					
ANR	65628	CompoundStatement		7:82:188:188	65573	1					
ANR	65629	ExpressionStatement	prev -> next = p -> next	2053:3:62551:62571	65573	0	True				
ANR	65630	AssignmentExpression	prev -> next = p -> next		65573	0		=			
ANR	65631	PtrMemberAccess	prev -> next		65573	0					
ANR	65632	Identifier	prev		65573	0					
ANR	65633	Identifier	next		65573	1					
ANR	65634	PtrMemberAccess	p -> next		65573	1					
ANR	65635	Identifier	p		65573	0					
ANR	65636	Identifier	next		65573	1					
ANR	65637	ExpressionStatement	"zend_mm_chunk_free ( heap , p -> ptr , p -> size )"	2054:3:62576:62617	65573	1	True				
ANR	65638	CallExpression	"zend_mm_chunk_free ( heap , p -> ptr , p -> size )"		65573	0					
ANR	65639	Callee	zend_mm_chunk_free		65573	0					
ANR	65640	Identifier	zend_mm_chunk_free		65573	0					
ANR	65641	ArgumentList	heap		65573	1					
ANR	65642	Argument	heap		65573	0					
ANR	65643	Identifier	heap		65573	0					
ANR	65644	Argument	p -> ptr		65573	1					
ANR	65645	PtrMemberAccess	p -> ptr		65573	0					
ANR	65646	Identifier	p		65573	0					
ANR	65647	Identifier	ptr		65573	1					
ANR	65648	Argument	p -> size		65573	2					
ANR	65649	PtrMemberAccess	p -> size		65573	0					
ANR	65650	Identifier	p		65573	0					
ANR	65651	Identifier	size		65573	1					
ANR	65652	ExpressionStatement	"zend_mm_free_heap ( heap , p , NULL , 0 , NULL , 0 )"	2055:3:62622:62666	65573	2	True				
ANR	65653	CallExpression	"zend_mm_free_heap ( heap , p , NULL , 0 , NULL , 0 )"		65573	0					
ANR	65654	Callee	zend_mm_free_heap		65573	0					
ANR	65655	Identifier	zend_mm_free_heap		65573	0					
ANR	65656	ArgumentList	heap		65573	1					
ANR	65657	Argument	heap		65573	0					
ANR	65658	Identifier	heap		65573	0					
ANR	65659	Argument	p		65573	1					
ANR	65660	Identifier	p		65573	0					
ANR	65661	Argument	NULL		65573	2					
ANR	65662	Identifier	NULL		65573	0					
ANR	65663	Argument	0		65573	3					
ANR	65664	PrimaryExpression	0		65573	0					
ANR	65665	Argument	NULL		65573	4					
ANR	65666	Identifier	NULL		65573	0					
ANR	65667	Argument	0		65573	5					
ANR	65668	PrimaryExpression	0		65573	0					
ANR	65669	ExpressionStatement	count ++	2056:3:62671:62678	65573	3	True				
ANR	65670	PostIncDecOperationExpression	count ++		65573	0					
ANR	65671	Identifier	count		65573	0					
ANR	65672	IncDec	++		65573	1					
ANR	65673	ElseStatement	else		65573	0					
ANR	65674	CompoundStatement		12:9:331:331	65573	0					
ANR	65675	ExpressionStatement	prev = p	2058:3:62694:62702	65573	0	True				
ANR	65676	AssignmentExpression	prev = p		65573	0		=			
ANR	65677	Identifier	prev		65573	0					
ANR	65678	Identifier	p		65573	1					
ANR	65679	ExpressionStatement	p = prev -> next	2060:2:62710:62724	65573	1	True				
ANR	65680	AssignmentExpression	p = prev -> next		65573	0		=			
ANR	65681	Identifier	p		65573	0					
ANR	65682	PtrMemberAccess	prev -> next		65573	1					
ANR	65683	Identifier	prev		65573	0					
ANR	65684	Identifier	next		65573	1					
ANR	65685	ReturnStatement	return count ;	2063:1:62731:62743	65573	4	True				
ANR	65686	Identifier	count		65573	0					
ANR	65687	ReturnType	static zend_long		65573	1					
ANR	65688	Identifier	zend_mm_find_leaks_huge		65573	2					
ANR	65689	ParameterList	"zend_mm_heap * heap , zend_mm_huge_list * list"		65573	3					
ANR	65690	Parameter	zend_mm_heap * heap	2045:41:62312:62329	65573	0	True				
ANR	65691	ParameterType	zend_mm_heap *		65573	0					
ANR	65692	Identifier	heap		65573	1					
ANR	65693	Parameter	zend_mm_huge_list * list	2045:61:62332:62354	65573	1	True				
ANR	65694	ParameterType	zend_mm_huge_list *		65573	0					
ANR	65695	Identifier	list		65573	1					
ANR	65696	CFGEntryNode	ENTRY		65573		True				
ANR	65697	CFGExitNode	EXIT		65573		True				
ANR	65698	Symbol	list -> next		65573						
ANR	65699	Symbol	prev -> next		65573						
ANR	65700	Symbol	p -> ptr		65573						
ANR	65701	Symbol	p -> next		65573						
ANR	65702	Symbol	NULL		65573						
ANR	65703	Symbol	p -> dbg		65573						
ANR	65704	Symbol	prev		65573						
ANR	65705	Symbol	count		65573						
ANR	65706	Symbol	list -> dbg . filename		65573						
ANR	65707	Symbol	* prev		65573						
ANR	65708	Symbol	list		65573						
ANR	65709	Symbol	p		65573						
ANR	65710	Symbol	list -> dbg		65573						
ANR	65711	Symbol	p -> size		65573						
ANR	65712	Symbol	* list		65573						
ANR	65713	Symbol	list -> dbg . lineno		65573						
ANR	65714	Symbol	p -> dbg . lineno		65573						
ANR	65715	Symbol	* p		65573						
ANR	65716	Symbol	heap		65573						
ANR	65717	Symbol	p -> dbg . filename		65573						
ANR	65718	Function	zend_mm_check_leaks	2066:0:62748:66226							
ANR	65719	FunctionDef	zend_mm_check_leaks (zend_mm_heap * heap)		65718	0					
ANR	65720	CompoundStatement		2067:0:62800:66226	65718	0					
ANR	65721	IdentifierDeclStatement	zend_mm_huge_list * list ;	2068:1:62803:62826	65718	0	True				
ANR	65722	IdentifierDecl	* list		65718	0					
ANR	65723	IdentifierDeclType	zend_mm_huge_list *		65718	0					
ANR	65724	Identifier	list		65718	1					
ANR	65725	IdentifierDeclStatement	zend_mm_chunk * p ;	2069:1:62829:62845	65718	1	True				
ANR	65726	IdentifierDecl	* p		65718	0					
ANR	65727	IdentifierDeclType	zend_mm_chunk *		65718	0					
ANR	65728	Identifier	p		65718	1					
ANR	65729	IdentifierDeclStatement	zend_leak_info leak ;	2070:1:62848:62867	65718	2	True				
ANR	65730	IdentifierDecl	leak		65718	0					
ANR	65731	IdentifierDeclType	zend_leak_info		65718	0					
ANR	65732	Identifier	leak		65718	1					
ANR	65733	IdentifierDeclStatement	zend_long repeated = 0 ;	2071:1:62870:62892	65718	3	True				
ANR	65734	IdentifierDecl	repeated = 0		65718	0					
ANR	65735	IdentifierDeclType	zend_long		65718	0					
ANR	65736	Identifier	repeated		65718	1					
ANR	65737	AssignmentExpression	repeated = 0		65718	2		=			
ANR	65738	Identifier	repeated		65718	0					
ANR	65739	PrimaryExpression	0		65718	1					
ANR	65740	IdentifierDeclStatement	uint32_t total = 0 ;	2072:1:62895:62913	65718	4	True				
ANR	65741	IdentifierDecl	total = 0		65718	0					
ANR	65742	IdentifierDeclType	uint32_t		65718	0					
ANR	65743	Identifier	total		65718	1					
ANR	65744	AssignmentExpression	total = 0		65718	2		=			
ANR	65745	Identifier	total		65718	0					
ANR	65746	PrimaryExpression	0		65718	1					
ANR	65747	IdentifierDeclStatement	"int i , j ;"	2073:1:62916:62924	65718	5	True				
ANR	65748	IdentifierDecl	i		65718	0					
ANR	65749	IdentifierDeclType	int		65718	0					
ANR	65750	Identifier	i		65718	1					
ANR	65751	IdentifierDecl	j		65718	1					
ANR	65752	IdentifierDeclType	int		65718	0					
ANR	65753	Identifier	j		65718	1					
ANR	65754	ExpressionStatement	list = heap -> huge_list	2076:1:62973:62995	65718	6	True				
ANR	65755	AssignmentExpression	list = heap -> huge_list		65718	0		=			
ANR	65756	Identifier	list		65718	0					
ANR	65757	PtrMemberAccess	heap -> huge_list		65718	1					
ANR	65758	Identifier	heap		65718	0					
ANR	65759	Identifier	huge_list		65718	1					
ANR	65760	WhileStatement	while ( list )		65718	7					
ANR	65761	Condition	list	2077:8:63005:63008	65718	0	True				
ANR	65762	Identifier	list		65718	0					
ANR	65763	CompoundStatement		12:2:214:241	65718	1					
ANR	65764	IdentifierDeclStatement	zend_mm_huge_list * q = list ;	2078:2:63015:63042	65718	0	True				
ANR	65765	IdentifierDecl	* q = list		65718	0					
ANR	65766	IdentifierDeclType	zend_mm_huge_list *		65718	0					
ANR	65767	Identifier	q		65718	1					
ANR	65768	AssignmentExpression	* q = list		65718	2		=			
ANR	65769	Identifier	list		65718	0					
ANR	65770	Identifier	list		65718	1					
ANR	65771	ExpressionStatement	leak . addr = list -> ptr	2080:2:63047:63068	65718	1	True				
ANR	65772	AssignmentExpression	leak . addr = list -> ptr		65718	0		=			
ANR	65773	MemberAccess	leak . addr		65718	0					
ANR	65774	Identifier	leak		65718	0					
ANR	65775	Identifier	addr		65718	1					
ANR	65776	PtrMemberAccess	list -> ptr		65718	1					
ANR	65777	Identifier	list		65718	0					
ANR	65778	Identifier	ptr		65718	1					
ANR	65779	ExpressionStatement	leak . size = list -> dbg . size	2081:2:63072:63098	65718	2	True				
ANR	65780	AssignmentExpression	leak . size = list -> dbg . size		65718	0		=			
ANR	65781	MemberAccess	leak . size		65718	0					
ANR	65782	Identifier	leak		65718	0					
ANR	65783	Identifier	size		65718	1					
ANR	65784	MemberAccess	list -> dbg . size		65718	1					
ANR	65785	PtrMemberAccess	list -> dbg		65718	0					
ANR	65786	Identifier	list		65718	0					
ANR	65787	Identifier	dbg		65718	1					
ANR	65788	Identifier	size		65718	1					
ANR	65789	ExpressionStatement	leak . filename = list -> dbg . filename	2082:2:63102:63136	65718	3	True				
ANR	65790	AssignmentExpression	leak . filename = list -> dbg . filename		65718	0		=			
ANR	65791	MemberAccess	leak . filename		65718	0					
ANR	65792	Identifier	leak		65718	0					
ANR	65793	Identifier	filename		65718	1					
ANR	65794	MemberAccess	list -> dbg . filename		65718	1					
ANR	65795	PtrMemberAccess	list -> dbg		65718	0					
ANR	65796	Identifier	list		65718	0					
ANR	65797	Identifier	dbg		65718	1					
ANR	65798	Identifier	filename		65718	1					
ANR	65799	ExpressionStatement	leak . orig_filename = list -> dbg . orig_filename	2083:2:63140:63184	65718	4	True				
ANR	65800	AssignmentExpression	leak . orig_filename = list -> dbg . orig_filename		65718	0		=			
ANR	65801	MemberAccess	leak . orig_filename		65718	0					
ANR	65802	Identifier	leak		65718	0					
ANR	65803	Identifier	orig_filename		65718	1					
ANR	65804	MemberAccess	list -> dbg . orig_filename		65718	1					
ANR	65805	PtrMemberAccess	list -> dbg		65718	0					
ANR	65806	Identifier	list		65718	0					
ANR	65807	Identifier	dbg		65718	1					
ANR	65808	Identifier	orig_filename		65718	1					
ANR	65809	ExpressionStatement	leak . lineno = list -> dbg . lineno	2084:2:63188:63218	65718	5	True				
ANR	65810	AssignmentExpression	leak . lineno = list -> dbg . lineno		65718	0		=			
ANR	65811	MemberAccess	leak . lineno		65718	0					
ANR	65812	Identifier	leak		65718	0					
ANR	65813	Identifier	lineno		65718	1					
ANR	65814	MemberAccess	list -> dbg . lineno		65718	1					
ANR	65815	PtrMemberAccess	list -> dbg		65718	0					
ANR	65816	Identifier	list		65718	0					
ANR	65817	Identifier	dbg		65718	1					
ANR	65818	Identifier	lineno		65718	1					
ANR	65819	ExpressionStatement	leak . orig_lineno = list -> dbg . orig_lineno	2085:2:63222:63262	65718	6	True				
ANR	65820	AssignmentExpression	leak . orig_lineno = list -> dbg . orig_lineno		65718	0		=			
ANR	65821	MemberAccess	leak . orig_lineno		65718	0					
ANR	65822	Identifier	leak		65718	0					
ANR	65823	Identifier	orig_lineno		65718	1					
ANR	65824	MemberAccess	list -> dbg . orig_lineno		65718	1					
ANR	65825	PtrMemberAccess	list -> dbg		65718	0					
ANR	65826	Identifier	list		65718	0					
ANR	65827	Identifier	dbg		65718	1					
ANR	65828	Identifier	orig_lineno		65718	1					
ANR	65829	ExpressionStatement	"zend_message_dispatcher ( ZMSG_LOG_SCRIPT_NAME , NULL )"	2087:2:63267:63318	65718	7	True				
ANR	65830	CallExpression	"zend_message_dispatcher ( ZMSG_LOG_SCRIPT_NAME , NULL )"		65718	0					
ANR	65831	Callee	zend_message_dispatcher		65718	0					
ANR	65832	Identifier	zend_message_dispatcher		65718	0					
ANR	65833	ArgumentList	ZMSG_LOG_SCRIPT_NAME		65718	1					
ANR	65834	Argument	ZMSG_LOG_SCRIPT_NAME		65718	0					
ANR	65835	Identifier	ZMSG_LOG_SCRIPT_NAME		65718	0					
ANR	65836	Argument	NULL		65718	1					
ANR	65837	Identifier	NULL		65718	0					
ANR	65838	ExpressionStatement	"zend_message_dispatcher ( ZMSG_MEMORY_LEAK_DETECTED , & leak )"	2088:2:63322:63379	65718	8	True				
ANR	65839	CallExpression	"zend_message_dispatcher ( ZMSG_MEMORY_LEAK_DETECTED , & leak )"		65718	0					
ANR	65840	Callee	zend_message_dispatcher		65718	0					
ANR	65841	Identifier	zend_message_dispatcher		65718	0					
ANR	65842	ArgumentList	ZMSG_MEMORY_LEAK_DETECTED		65718	1					
ANR	65843	Argument	ZMSG_MEMORY_LEAK_DETECTED		65718	0					
ANR	65844	Identifier	ZMSG_MEMORY_LEAK_DETECTED		65718	0					
ANR	65845	Argument	& leak		65718	1					
ANR	65846	UnaryOperationExpression	& leak		65718	0					
ANR	65847	UnaryOperator	&		65718	0					
ANR	65848	Identifier	leak		65718	1					
ANR	65849	ExpressionStatement	"repeated = zend_mm_find_leaks_huge ( heap , list )"	2089:2:63383:63429	65718	9	True				
ANR	65850	AssignmentExpression	"repeated = zend_mm_find_leaks_huge ( heap , list )"		65718	0		=			
ANR	65851	Identifier	repeated		65718	0					
ANR	65852	CallExpression	"zend_mm_find_leaks_huge ( heap , list )"		65718	1					
ANR	65853	Callee	zend_mm_find_leaks_huge		65718	0					
ANR	65854	Identifier	zend_mm_find_leaks_huge		65718	0					
ANR	65855	ArgumentList	heap		65718	1					
ANR	65856	Argument	heap		65718	0					
ANR	65857	Identifier	heap		65718	0					
ANR	65858	Argument	list		65718	1					
ANR	65859	Identifier	list		65718	0					
ANR	65860	ExpressionStatement	total += 1 + repeated	2090:2:63433:63454	65718	10	True				
ANR	65861	AssignmentExpression	total += 1 + repeated		65718	0		+=			
ANR	65862	Identifier	total		65718	0					
ANR	65863	AdditiveExpression	1 + repeated		65718	1		+			
ANR	65864	PrimaryExpression	1		65718	0					
ANR	65865	Identifier	repeated		65718	1					
ANR	65866	IfStatement	if ( repeated )		65718	11					
ANR	65867	Condition	repeated	2091:6:63462:63469	65718	0	True				
ANR	65868	Identifier	repeated		65718	0					
ANR	65869	CompoundStatement		25:16:671:671	65718	1					
ANR	65870	ExpressionStatement	"zend_message_dispatcher ( ZMSG_MEMORY_LEAK_REPEATED , ( void * ) ( zend_uintptr_t ) repeated )"	2092:3:63477:63561	65718	0	True				
ANR	65871	CallExpression	"zend_message_dispatcher ( ZMSG_MEMORY_LEAK_REPEATED , ( void * ) ( zend_uintptr_t ) repeated )"		65718	0					
ANR	65872	Callee	zend_message_dispatcher		65718	0					
ANR	65873	Identifier	zend_message_dispatcher		65718	0					
ANR	65874	ArgumentList	ZMSG_MEMORY_LEAK_REPEATED		65718	1					
ANR	65875	Argument	ZMSG_MEMORY_LEAK_REPEATED		65718	0					
ANR	65876	Identifier	ZMSG_MEMORY_LEAK_REPEATED		65718	0					
ANR	65877	Argument	( void * ) ( zend_uintptr_t ) repeated		65718	1					
ANR	65878	CastExpression	( void * ) ( zend_uintptr_t ) repeated		65718	0					
ANR	65879	CastTarget	void *		65718	0					
ANR	65880	CastExpression	( zend_uintptr_t ) repeated		65718	1					
ANR	65881	CastTarget	zend_uintptr_t		65718	0					
ANR	65882	Identifier	repeated		65718	1					
ANR	65883	ExpressionStatement	heap -> huge_list = list = list -> next	2095:2:63570:63605	65718	12	True				
ANR	65884	AssignmentExpression	heap -> huge_list = list = list -> next		65718	0		=			
ANR	65885	PtrMemberAccess	heap -> huge_list		65718	0					
ANR	65886	Identifier	heap		65718	0					
ANR	65887	Identifier	huge_list		65718	1					
ANR	65888	AssignmentExpression	list = list -> next		65718	1		=			
ANR	65889	Identifier	list		65718	0					
ANR	65890	PtrMemberAccess	list -> next		65718	1					
ANR	65891	Identifier	list		65718	0					
ANR	65892	Identifier	next		65718	1					
ANR	65893	ExpressionStatement	"zend_mm_chunk_free ( heap , q -> ptr , q -> size )"	2096:2:63609:63650	65718	13	True				
ANR	65894	CallExpression	"zend_mm_chunk_free ( heap , q -> ptr , q -> size )"		65718	0					
ANR	65895	Callee	zend_mm_chunk_free		65718	0					
ANR	65896	Identifier	zend_mm_chunk_free		65718	0					
ANR	65897	ArgumentList	heap		65718	1					
ANR	65898	Argument	heap		65718	0					
ANR	65899	Identifier	heap		65718	0					
ANR	65900	Argument	q -> ptr		65718	1					
ANR	65901	PtrMemberAccess	q -> ptr		65718	0					
ANR	65902	Identifier	q		65718	0					
ANR	65903	Identifier	ptr		65718	1					
ANR	65904	Argument	q -> size		65718	2					
ANR	65905	PtrMemberAccess	q -> size		65718	0					
ANR	65906	Identifier	q		65718	0					
ANR	65907	Identifier	size		65718	1					
ANR	65908	ExpressionStatement	"zend_mm_free_heap ( heap , q , NULL , 0 , NULL , 0 )"	2097:2:63654:63698	65718	14	True				
ANR	65909	CallExpression	"zend_mm_free_heap ( heap , q , NULL , 0 , NULL , 0 )"		65718	0					
ANR	65910	Callee	zend_mm_free_heap		65718	0					
ANR	65911	Identifier	zend_mm_free_heap		65718	0					
ANR	65912	ArgumentList	heap		65718	1					
ANR	65913	Argument	heap		65718	0					
ANR	65914	Identifier	heap		65718	0					
ANR	65915	Argument	q		65718	1					
ANR	65916	Identifier	q		65718	0					
ANR	65917	Argument	NULL		65718	2					
ANR	65918	Identifier	NULL		65718	0					
ANR	65919	Argument	0		65718	3					
ANR	65920	PrimaryExpression	0		65718	0					
ANR	65921	Argument	NULL		65718	4					
ANR	65922	Identifier	NULL		65718	0					
ANR	65923	Argument	0		65718	5					
ANR	65924	PrimaryExpression	0		65718	0					
ANR	65925	ExpressionStatement	p = heap -> main_chunk	2101:1:63727:63747	65718	8	True				
ANR	65926	AssignmentExpression	p = heap -> main_chunk		65718	0		=			
ANR	65927	Identifier	p		65718	0					
ANR	65928	PtrMemberAccess	heap -> main_chunk		65718	1					
ANR	65929	Identifier	heap		65718	0					
ANR	65930	Identifier	main_chunk		65718	1					
ANR	65931	DoStatement	do		65718	9					
ANR	65932	CompoundStatement		36:4:952:952	65718	0					
ANR	65933	ExpressionStatement	i = ZEND_MM_FIRST_PAGE	2103:2:63757:63779	65718	0	True				
ANR	65934	AssignmentExpression	i = ZEND_MM_FIRST_PAGE		65718	0		=			
ANR	65935	Identifier	i		65718	0					
ANR	65936	Identifier	ZEND_MM_FIRST_PAGE		65718	1					
ANR	65937	WhileStatement	while ( i < p -> free_tail )		65718	1					
ANR	65938	Condition	i < p -> free_tail	2104:9:63790:63805	65718	0	True				
ANR	65939	RelationalExpression	i < p -> free_tail		65718	0		<			
ANR	65940	Identifier	i		65718	0					
ANR	65941	PtrMemberAccess	p -> free_tail		65718	1					
ANR	65942	Identifier	p		65718	0					
ANR	65943	Identifier	free_tail		65718	1					
ANR	65944	CompoundStatement		38:27:1007:1007	65718	1					
ANR	65945	IfStatement	"if ( zend_mm_bitset_is_set ( p -> free_map , i ) )"		65718	0					
ANR	65946	Condition	"zend_mm_bitset_is_set ( p -> free_map , i )"	2105:7:63817:63853	65718	0	True				
ANR	65947	CallExpression	"zend_mm_bitset_is_set ( p -> free_map , i )"		65718	0					
ANR	65948	Callee	zend_mm_bitset_is_set		65718	0					
ANR	65949	Identifier	zend_mm_bitset_is_set		65718	0					
ANR	65950	ArgumentList	p -> free_map		65718	1					
ANR	65951	Argument	p -> free_map		65718	0					
ANR	65952	PtrMemberAccess	p -> free_map		65718	0					
ANR	65953	Identifier	p		65718	0					
ANR	65954	Identifier	free_map		65718	1					
ANR	65955	Argument	i		65718	1					
ANR	65956	Identifier	i		65718	0					
ANR	65957	CompoundStatement		39:46:1055:1055	65718	1					
ANR	65958	IfStatement	if ( p -> map [ i ] & ZEND_MM_IS_SRUN )		65718	0					
ANR	65959	Condition	p -> map [ i ] & ZEND_MM_IS_SRUN	2106:8:63866:63892	65718	0	True				
ANR	65960	BitAndExpression	p -> map [ i ] & ZEND_MM_IS_SRUN		65718	0		&			
ANR	65961	ArrayIndexing	p -> map [ i ]		65718	0					
ANR	65962	PtrMemberAccess	p -> map		65718	0					
ANR	65963	Identifier	p		65718	0					
ANR	65964	Identifier	map		65718	1					
ANR	65965	Identifier	i		65718	1					
ANR	65966	Identifier	ZEND_MM_IS_SRUN		65718	1					
ANR	65967	CompoundStatement		42:5:1153:1310	65718	1					
ANR	65968	IdentifierDeclStatement	int bin_num = ZEND_MM_SRUN_BIN_NUM ( p -> map [ i ] ) ;	2107:5:63902:63947	65718	0	True				
ANR	65969	IdentifierDecl	bin_num = ZEND_MM_SRUN_BIN_NUM ( p -> map [ i ] )		65718	0					
ANR	65970	IdentifierDeclType	int		65718	0					
ANR	65971	Identifier	bin_num		65718	1					
ANR	65972	AssignmentExpression	bin_num = ZEND_MM_SRUN_BIN_NUM ( p -> map [ i ] )		65718	2		=			
ANR	65973	Identifier	bin_num		65718	0					
ANR	65974	CallExpression	ZEND_MM_SRUN_BIN_NUM ( p -> map [ i ] )		65718	1					
ANR	65975	Callee	ZEND_MM_SRUN_BIN_NUM		65718	0					
ANR	65976	Identifier	ZEND_MM_SRUN_BIN_NUM		65718	0					
ANR	65977	ArgumentList	p -> map [ i ]		65718	1					
ANR	65978	Argument	p -> map [ i ]		65718	0					
ANR	65979	ArrayIndexing	p -> map [ i ]		65718	0					
ANR	65980	PtrMemberAccess	p -> map		65718	0					
ANR	65981	Identifier	p		65718	0					
ANR	65982	Identifier	map		65718	1					
ANR	65983	Identifier	i		65718	1					
ANR	65984	IdentifierDeclStatement	zend_mm_debug_info * dbg = ( zend_mm_debug_info * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * i + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) ) ;	2108:5:63954:64111	65718	1	True				
ANR	65985	IdentifierDecl	* dbg = ( zend_mm_debug_info * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * i + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		65718	0					
ANR	65986	IdentifierDeclType	zend_mm_debug_info *		65718	0					
ANR	65987	Identifier	dbg		65718	1					
ANR	65988	AssignmentExpression	* dbg = ( zend_mm_debug_info * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * i + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		65718	2		=			
ANR	65989	Identifier	dbg		65718	0					
ANR	65990	CastExpression	( zend_mm_debug_info * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * i + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		65718	1					
ANR	65991	CastTarget	zend_mm_debug_info *		65718	0					
ANR	65992	AdditiveExpression	( char * ) p + ZEND_MM_PAGE_SIZE * i + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		65718	1		+			
ANR	65993	CastExpression	( char * ) p		65718	0					
ANR	65994	CastTarget	char *		65718	0					
ANR	65995	Identifier	p		65718	1					
ANR	65996	AdditiveExpression	ZEND_MM_PAGE_SIZE * i + bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		65718	1		+			
ANR	65997	MultiplicativeExpression	ZEND_MM_PAGE_SIZE * i		65718	0		*			
ANR	65998	Identifier	ZEND_MM_PAGE_SIZE		65718	0					
ANR	65999	Identifier	i		65718	1					
ANR	66000	AdditiveExpression	bin_data_size [ bin_num ] - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		65718	1		-			
ANR	66001	ArrayIndexing	bin_data_size [ bin_num ]		65718	0					
ANR	66002	Identifier	bin_data_size		65718	0					
ANR	66003	Identifier	bin_num		65718	1					
ANR	66004	CallExpression	ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		65718	1					
ANR	66005	Callee	ZEND_MM_ALIGNED_SIZE		65718	0					
ANR	66006	Identifier	ZEND_MM_ALIGNED_SIZE		65718	0					
ANR	66007	ArgumentList	sizeof ( zend_mm_debug_info )		65718	1					
ANR	66008	Argument	sizeof ( zend_mm_debug_info )		65718	0					
ANR	66009	SizeofExpression	sizeof ( zend_mm_debug_info )		65718	0					
ANR	66010	Sizeof	sizeof		65718	0					
ANR	66011	SizeofOperand	zend_mm_debug_info		65718	1					
ANR	66012	ExpressionStatement	j = 0	2110:5:64119:64124	65718	2	True				
ANR	66013	AssignmentExpression	j = 0		65718	0		=			
ANR	66014	Identifier	j		65718	0					
ANR	66015	PrimaryExpression	0		65718	1					
ANR	66016	WhileStatement	while ( j < bin_elements [ bin_num ] )		65718	3					
ANR	66017	Condition	j < bin_elements [ bin_num ]	2111:12:64138:64162	65718	0	True				
ANR	66018	RelationalExpression	j < bin_elements [ bin_num ]		65718	0		<			
ANR	66019	Identifier	j		65718	0					
ANR	66020	ArrayIndexing	bin_elements [ bin_num ]		65718	1					
ANR	66021	Identifier	bin_elements		65718	0					
ANR	66022	Identifier	bin_num		65718	1					
ANR	66023	CompoundStatement		45:39:1364:1364	65718	1					
ANR	66024	IfStatement	if ( dbg -> size != 0 )		65718	0					
ANR	66025	Condition	dbg -> size != 0	2112:10:64177:64190	65718	0	True				
ANR	66026	EqualityExpression	dbg -> size != 0		65718	0		!=			
ANR	66027	PtrMemberAccess	dbg -> size		65718	0					
ANR	66028	Identifier	dbg		65718	0					
ANR	66029	Identifier	size		65718	1					
ANR	66030	PrimaryExpression	0		65718	1					
ANR	66031	CompoundStatement		46:26:1392:1392	65718	1					
ANR	66032	ExpressionStatement	leak . addr = ( zend_mm_debug_info * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * i + bin_data_size [ bin_num ] * j )	2113:7:64202:64298	65718	0	True				
ANR	66033	AssignmentExpression	leak . addr = ( zend_mm_debug_info * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * i + bin_data_size [ bin_num ] * j )		65718	0		=			
ANR	66034	MemberAccess	leak . addr		65718	0					
ANR	66035	Identifier	leak		65718	0					
ANR	66036	Identifier	addr		65718	1					
ANR	66037	CastExpression	( zend_mm_debug_info * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * i + bin_data_size [ bin_num ] * j )		65718	1					
ANR	66038	CastTarget	zend_mm_debug_info *		65718	0					
ANR	66039	AdditiveExpression	( char * ) p + ZEND_MM_PAGE_SIZE * i + bin_data_size [ bin_num ] * j		65718	1		+			
ANR	66040	CastExpression	( char * ) p		65718	0					
ANR	66041	CastTarget	char *		65718	0					
ANR	66042	Identifier	p		65718	1					
ANR	66043	AdditiveExpression	ZEND_MM_PAGE_SIZE * i + bin_data_size [ bin_num ] * j		65718	1		+			
ANR	66044	MultiplicativeExpression	ZEND_MM_PAGE_SIZE * i		65718	0		*			
ANR	66045	Identifier	ZEND_MM_PAGE_SIZE		65718	0					
ANR	66046	Identifier	i		65718	1					
ANR	66047	MultiplicativeExpression	bin_data_size [ bin_num ] * j		65718	1		*			
ANR	66048	ArrayIndexing	bin_data_size [ bin_num ]		65718	0					
ANR	66049	Identifier	bin_data_size		65718	0					
ANR	66050	Identifier	bin_num		65718	1					
ANR	66051	Identifier	j		65718	1					
ANR	66052	ExpressionStatement	leak . size = dbg -> size	2114:7:64307:64328	65718	1	True				
ANR	66053	AssignmentExpression	leak . size = dbg -> size		65718	0		=			
ANR	66054	MemberAccess	leak . size		65718	0					
ANR	66055	Identifier	leak		65718	0					
ANR	66056	Identifier	size		65718	1					
ANR	66057	PtrMemberAccess	dbg -> size		65718	1					
ANR	66058	Identifier	dbg		65718	0					
ANR	66059	Identifier	size		65718	1					
ANR	66060	ExpressionStatement	leak . filename = dbg -> filename	2115:7:64337:64366	65718	2	True				
ANR	66061	AssignmentExpression	leak . filename = dbg -> filename		65718	0		=			
ANR	66062	MemberAccess	leak . filename		65718	0					
ANR	66063	Identifier	leak		65718	0					
ANR	66064	Identifier	filename		65718	1					
ANR	66065	PtrMemberAccess	dbg -> filename		65718	1					
ANR	66066	Identifier	dbg		65718	0					
ANR	66067	Identifier	filename		65718	1					
ANR	66068	ExpressionStatement	leak . orig_filename = dbg -> orig_filename	2116:7:64375:64414	65718	3	True				
ANR	66069	AssignmentExpression	leak . orig_filename = dbg -> orig_filename		65718	0		=			
ANR	66070	MemberAccess	leak . orig_filename		65718	0					
ANR	66071	Identifier	leak		65718	0					
ANR	66072	Identifier	orig_filename		65718	1					
ANR	66073	PtrMemberAccess	dbg -> orig_filename		65718	1					
ANR	66074	Identifier	dbg		65718	0					
ANR	66075	Identifier	orig_filename		65718	1					
ANR	66076	ExpressionStatement	leak . lineno = dbg -> lineno	2117:7:64423:64448	65718	4	True				
ANR	66077	AssignmentExpression	leak . lineno = dbg -> lineno		65718	0		=			
ANR	66078	MemberAccess	leak . lineno		65718	0					
ANR	66079	Identifier	leak		65718	0					
ANR	66080	Identifier	lineno		65718	1					
ANR	66081	PtrMemberAccess	dbg -> lineno		65718	1					
ANR	66082	Identifier	dbg		65718	0					
ANR	66083	Identifier	lineno		65718	1					
ANR	66084	ExpressionStatement	leak . orig_lineno = dbg -> orig_lineno	2118:7:64457:64492	65718	5	True				
ANR	66085	AssignmentExpression	leak . orig_lineno = dbg -> orig_lineno		65718	0		=			
ANR	66086	MemberAccess	leak . orig_lineno		65718	0					
ANR	66087	Identifier	leak		65718	0					
ANR	66088	Identifier	orig_lineno		65718	1					
ANR	66089	PtrMemberAccess	dbg -> orig_lineno		65718	1					
ANR	66090	Identifier	dbg		65718	0					
ANR	66091	Identifier	orig_lineno		65718	1					
ANR	66092	ExpressionStatement	"zend_message_dispatcher ( ZMSG_LOG_SCRIPT_NAME , NULL )"	2120:7:64502:64553	65718	6	True				
ANR	66093	CallExpression	"zend_message_dispatcher ( ZMSG_LOG_SCRIPT_NAME , NULL )"		65718	0					
ANR	66094	Callee	zend_message_dispatcher		65718	0					
ANR	66095	Identifier	zend_message_dispatcher		65718	0					
ANR	66096	ArgumentList	ZMSG_LOG_SCRIPT_NAME		65718	1					
ANR	66097	Argument	ZMSG_LOG_SCRIPT_NAME		65718	0					
ANR	66098	Identifier	ZMSG_LOG_SCRIPT_NAME		65718	0					
ANR	66099	Argument	NULL		65718	1					
ANR	66100	Identifier	NULL		65718	0					
ANR	66101	ExpressionStatement	"zend_message_dispatcher ( ZMSG_MEMORY_LEAK_DETECTED , & leak )"	2121:7:64562:64619	65718	7	True				
ANR	66102	CallExpression	"zend_message_dispatcher ( ZMSG_MEMORY_LEAK_DETECTED , & leak )"		65718	0					
ANR	66103	Callee	zend_message_dispatcher		65718	0					
ANR	66104	Identifier	zend_message_dispatcher		65718	0					
ANR	66105	ArgumentList	ZMSG_MEMORY_LEAK_DETECTED		65718	1					
ANR	66106	Argument	ZMSG_MEMORY_LEAK_DETECTED		65718	0					
ANR	66107	Identifier	ZMSG_MEMORY_LEAK_DETECTED		65718	0					
ANR	66108	Argument	& leak		65718	1					
ANR	66109	UnaryOperationExpression	& leak		65718	0					
ANR	66110	UnaryOperator	&		65718	0					
ANR	66111	Identifier	leak		65718	1					
ANR	66112	ExpressionStatement	dbg -> size = 0	2123:7:64629:64642	65718	8	True				
ANR	66113	AssignmentExpression	dbg -> size = 0		65718	0		=			
ANR	66114	PtrMemberAccess	dbg -> size		65718	0					
ANR	66115	Identifier	dbg		65718	0					
ANR	66116	Identifier	size		65718	1					
ANR	66117	PrimaryExpression	0		65718	1					
ANR	66118	ExpressionStatement	dbg -> filename = NULL	2124:7:64651:64671	65718	9	True				
ANR	66119	AssignmentExpression	dbg -> filename = NULL		65718	0		=			
ANR	66120	PtrMemberAccess	dbg -> filename		65718	0					
ANR	66121	Identifier	dbg		65718	0					
ANR	66122	Identifier	filename		65718	1					
ANR	66123	Identifier	NULL		65718	1					
ANR	66124	ExpressionStatement	dbg -> lineno = 0	2125:7:64680:64695	65718	10	True				
ANR	66125	AssignmentExpression	dbg -> lineno = 0		65718	0		=			
ANR	66126	PtrMemberAccess	dbg -> lineno		65718	0					
ANR	66127	Identifier	dbg		65718	0					
ANR	66128	Identifier	lineno		65718	1					
ANR	66129	PrimaryExpression	0		65718	1					
ANR	66130	ExpressionStatement	"repeated = zend_mm_find_leaks_small ( p , i , j + 1 , & leak ) + zend_mm_find_leaks ( heap , p , i + bin_pages [ bin_num ] , & leak )"	2127:7:64705:64839	65718	11	True				
ANR	66131	AssignmentExpression	"repeated = zend_mm_find_leaks_small ( p , i , j + 1 , & leak ) + zend_mm_find_leaks ( heap , p , i + bin_pages [ bin_num ] , & leak )"		65718	0		=			
ANR	66132	Identifier	repeated		65718	0					
ANR	66133	AdditiveExpression	"zend_mm_find_leaks_small ( p , i , j + 1 , & leak ) + zend_mm_find_leaks ( heap , p , i + bin_pages [ bin_num ] , & leak )"		65718	1		+			
ANR	66134	CallExpression	"zend_mm_find_leaks_small ( p , i , j + 1 , & leak )"		65718	0					
ANR	66135	Callee	zend_mm_find_leaks_small		65718	0					
ANR	66136	Identifier	zend_mm_find_leaks_small		65718	0					
ANR	66137	ArgumentList	p		65718	1					
ANR	66138	Argument	p		65718	0					
ANR	66139	Identifier	p		65718	0					
ANR	66140	Argument	i		65718	1					
ANR	66141	Identifier	i		65718	0					
ANR	66142	Argument	j + 1		65718	2					
ANR	66143	AdditiveExpression	j + 1		65718	0		+			
ANR	66144	Identifier	j		65718	0					
ANR	66145	PrimaryExpression	1		65718	1					
ANR	66146	Argument	& leak		65718	3					
ANR	66147	UnaryOperationExpression	& leak		65718	0					
ANR	66148	UnaryOperator	&		65718	0					
ANR	66149	Identifier	leak		65718	1					
ANR	66150	CallExpression	"zend_mm_find_leaks ( heap , p , i + bin_pages [ bin_num ] , & leak )"		65718	1					
ANR	66151	Callee	zend_mm_find_leaks		65718	0					
ANR	66152	Identifier	zend_mm_find_leaks		65718	0					
ANR	66153	ArgumentList	heap		65718	1					
ANR	66154	Argument	heap		65718	0					
ANR	66155	Identifier	heap		65718	0					
ANR	66156	Argument	p		65718	1					
ANR	66157	Identifier	p		65718	0					
ANR	66158	Argument	i + bin_pages [ bin_num ]		65718	2					
ANR	66159	AdditiveExpression	i + bin_pages [ bin_num ]		65718	0		+			
ANR	66160	Identifier	i		65718	0					
ANR	66161	ArrayIndexing	bin_pages [ bin_num ]		65718	1					
ANR	66162	Identifier	bin_pages		65718	0					
ANR	66163	Identifier	bin_num		65718	1					
ANR	66164	Argument	& leak		65718	3					
ANR	66165	UnaryOperationExpression	& leak		65718	0					
ANR	66166	UnaryOperator	&		65718	0					
ANR	66167	Identifier	leak		65718	1					
ANR	66168	ExpressionStatement	total += 1 + repeated	2129:7:64848:64869	65718	12	True				
ANR	66169	AssignmentExpression	total += 1 + repeated		65718	0		+=			
ANR	66170	Identifier	total		65718	0					
ANR	66171	AdditiveExpression	1 + repeated		65718	1		+			
ANR	66172	PrimaryExpression	1		65718	0					
ANR	66173	Identifier	repeated		65718	1					
ANR	66174	IfStatement	if ( repeated )		65718	13					
ANR	66175	Condition	repeated	2130:11:64882:64889	65718	0	True				
ANR	66176	Identifier	repeated		65718	0					
ANR	66177	CompoundStatement		64:21:2091:2091	65718	1					
ANR	66178	ExpressionStatement	"zend_message_dispatcher ( ZMSG_MEMORY_LEAK_REPEATED , ( void * ) ( zend_uintptr_t ) repeated )"	2131:8:64902:64986	65718	0	True				
ANR	66179	CallExpression	"zend_message_dispatcher ( ZMSG_MEMORY_LEAK_REPEATED , ( void * ) ( zend_uintptr_t ) repeated )"		65718	0					
ANR	66180	Callee	zend_message_dispatcher		65718	0					
ANR	66181	Identifier	zend_message_dispatcher		65718	0					
ANR	66182	ArgumentList	ZMSG_MEMORY_LEAK_REPEATED		65718	1					
ANR	66183	Argument	ZMSG_MEMORY_LEAK_REPEATED		65718	0					
ANR	66184	Identifier	ZMSG_MEMORY_LEAK_REPEATED		65718	0					
ANR	66185	Argument	( void * ) ( zend_uintptr_t ) repeated		65718	1					
ANR	66186	CastExpression	( void * ) ( zend_uintptr_t ) repeated		65718	0					
ANR	66187	CastTarget	void *		65718	0					
ANR	66188	CastExpression	( zend_uintptr_t ) repeated		65718	1					
ANR	66189	CastTarget	zend_uintptr_t		65718	0					
ANR	66190	Identifier	repeated		65718	1					
ANR	66191	ExpressionStatement	dbg = ( zend_mm_debug_info * ) ( ( char * ) dbg + bin_data_size [ bin_num ] )	2134:6:65011:65075	65718	1	True				
ANR	66192	AssignmentExpression	dbg = ( zend_mm_debug_info * ) ( ( char * ) dbg + bin_data_size [ bin_num ] )		65718	0		=			
ANR	66193	Identifier	dbg		65718	0					
ANR	66194	CastExpression	( zend_mm_debug_info * ) ( ( char * ) dbg + bin_data_size [ bin_num ] )		65718	1					
ANR	66195	CastTarget	zend_mm_debug_info *		65718	0					
ANR	66196	AdditiveExpression	( char * ) dbg + bin_data_size [ bin_num ]		65718	1		+			
ANR	66197	CastExpression	( char * ) dbg		65718	0					
ANR	66198	CastTarget	char *		65718	0					
ANR	66199	Identifier	dbg		65718	1					
ANR	66200	ArrayIndexing	bin_data_size [ bin_num ]		65718	1					
ANR	66201	Identifier	bin_data_size		65718	0					
ANR	66202	Identifier	bin_num		65718	1					
ANR	66203	ExpressionStatement	j ++	2135:6:65083:65086	65718	2	True				
ANR	66204	PostIncDecOperationExpression	j ++		65718	0					
ANR	66205	Identifier	j		65718	0					
ANR	66206	IncDec	++		65718	1					
ANR	66207	ExpressionStatement	i += bin_pages [ bin_num ]	2137:5:65100:65123	65718	4	True				
ANR	66208	AssignmentExpression	i += bin_pages [ bin_num ]		65718	0		+=			
ANR	66209	Identifier	i		65718	0					
ANR	66210	ArrayIndexing	bin_pages [ bin_num ]		65718	1					
ANR	66211	Identifier	bin_pages		65718	0					
ANR	66212	Identifier	bin_num		65718	1					
ANR	66213	ElseStatement	else		65718	0					
ANR	66214	CompoundStatement		74:5:2435:2583	65718	0					
ANR	66215	IdentifierDeclStatement	int pages_count = ZEND_MM_LRUN_PAGES ( p -> map [ i ] ) ;	2139:5:65182:65229	65718	0	True				
ANR	66216	IdentifierDecl	pages_count = ZEND_MM_LRUN_PAGES ( p -> map [ i ] )		65718	0					
ANR	66217	IdentifierDeclType	int		65718	0					
ANR	66218	Identifier	pages_count		65718	1					
ANR	66219	AssignmentExpression	pages_count = ZEND_MM_LRUN_PAGES ( p -> map [ i ] )		65718	2		=			
ANR	66220	Identifier	pages_count		65718	0					
ANR	66221	CallExpression	ZEND_MM_LRUN_PAGES ( p -> map [ i ] )		65718	1					
ANR	66222	Callee	ZEND_MM_LRUN_PAGES		65718	0					
ANR	66223	Identifier	ZEND_MM_LRUN_PAGES		65718	0					
ANR	66224	ArgumentList	p -> map [ i ]		65718	1					
ANR	66225	Argument	p -> map [ i ]		65718	0					
ANR	66226	ArrayIndexing	p -> map [ i ]		65718	0					
ANR	66227	PtrMemberAccess	p -> map		65718	0					
ANR	66228	Identifier	p		65718	0					
ANR	66229	Identifier	map		65718	1					
ANR	66230	Identifier	i		65718	1					
ANR	66231	IdentifierDeclStatement	zend_mm_debug_info * dbg = ( zend_mm_debug_info * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * ( i + pages_count ) - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) ) ;	2140:5:65236:65384	65718	1	True				
ANR	66232	IdentifierDecl	* dbg = ( zend_mm_debug_info * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * ( i + pages_count ) - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		65718	0					
ANR	66233	IdentifierDeclType	zend_mm_debug_info *		65718	0					
ANR	66234	Identifier	dbg		65718	1					
ANR	66235	AssignmentExpression	* dbg = ( zend_mm_debug_info * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * ( i + pages_count ) - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		65718	2		=			
ANR	66236	Identifier	dbg		65718	0					
ANR	66237	CastExpression	( zend_mm_debug_info * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * ( i + pages_count ) - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) ) )		65718	1					
ANR	66238	CastTarget	zend_mm_debug_info *		65718	0					
ANR	66239	AdditiveExpression	( char * ) p + ZEND_MM_PAGE_SIZE * ( i + pages_count ) - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		65718	1		+			
ANR	66240	CastExpression	( char * ) p		65718	0					
ANR	66241	CastTarget	char *		65718	0					
ANR	66242	Identifier	p		65718	1					
ANR	66243	AdditiveExpression	ZEND_MM_PAGE_SIZE * ( i + pages_count ) - ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		65718	1		-			
ANR	66244	MultiplicativeExpression	ZEND_MM_PAGE_SIZE * ( i + pages_count )		65718	0		*			
ANR	66245	Identifier	ZEND_MM_PAGE_SIZE		65718	0					
ANR	66246	AdditiveExpression	i + pages_count		65718	1		+			
ANR	66247	Identifier	i		65718	0					
ANR	66248	Identifier	pages_count		65718	1					
ANR	66249	CallExpression	ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_mm_debug_info ) )		65718	1					
ANR	66250	Callee	ZEND_MM_ALIGNED_SIZE		65718	0					
ANR	66251	Identifier	ZEND_MM_ALIGNED_SIZE		65718	0					
ANR	66252	ArgumentList	sizeof ( zend_mm_debug_info )		65718	1					
ANR	66253	Argument	sizeof ( zend_mm_debug_info )		65718	0					
ANR	66254	SizeofExpression	sizeof ( zend_mm_debug_info )		65718	0					
ANR	66255	Sizeof	sizeof		65718	0					
ANR	66256	SizeofOperand	zend_mm_debug_info		65718	1					
ANR	66257	ExpressionStatement	leak . addr = ( void * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * i )	2142:5:65392:65445	65718	2	True				
ANR	66258	AssignmentExpression	leak . addr = ( void * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * i )		65718	0		=			
ANR	66259	MemberAccess	leak . addr		65718	0					
ANR	66260	Identifier	leak		65718	0					
ANR	66261	Identifier	addr		65718	1					
ANR	66262	CastExpression	( void * ) ( ( char * ) p + ZEND_MM_PAGE_SIZE * i )		65718	1					
ANR	66263	CastTarget	void *		65718	0					
ANR	66264	AdditiveExpression	( char * ) p + ZEND_MM_PAGE_SIZE * i		65718	1		+			
ANR	66265	CastExpression	( char * ) p		65718	0					
ANR	66266	CastTarget	char *		65718	0					
ANR	66267	Identifier	p		65718	1					
ANR	66268	MultiplicativeExpression	ZEND_MM_PAGE_SIZE * i		65718	1		*			
ANR	66269	Identifier	ZEND_MM_PAGE_SIZE		65718	0					
ANR	66270	Identifier	i		65718	1					
ANR	66271	ExpressionStatement	leak . size = dbg -> size	2143:5:65452:65473	65718	3	True				
ANR	66272	AssignmentExpression	leak . size = dbg -> size		65718	0		=			
ANR	66273	MemberAccess	leak . size		65718	0					
ANR	66274	Identifier	leak		65718	0					
ANR	66275	Identifier	size		65718	1					
ANR	66276	PtrMemberAccess	dbg -> size		65718	1					
ANR	66277	Identifier	dbg		65718	0					
ANR	66278	Identifier	size		65718	1					
ANR	66279	ExpressionStatement	leak . filename = dbg -> filename	2144:5:65480:65509	65718	4	True				
ANR	66280	AssignmentExpression	leak . filename = dbg -> filename		65718	0		=			
ANR	66281	MemberAccess	leak . filename		65718	0					
ANR	66282	Identifier	leak		65718	0					
ANR	66283	Identifier	filename		65718	1					
ANR	66284	PtrMemberAccess	dbg -> filename		65718	1					
ANR	66285	Identifier	dbg		65718	0					
ANR	66286	Identifier	filename		65718	1					
ANR	66287	ExpressionStatement	leak . orig_filename = dbg -> orig_filename	2145:5:65516:65555	65718	5	True				
ANR	66288	AssignmentExpression	leak . orig_filename = dbg -> orig_filename		65718	0		=			
ANR	66289	MemberAccess	leak . orig_filename		65718	0					
ANR	66290	Identifier	leak		65718	0					
ANR	66291	Identifier	orig_filename		65718	1					
ANR	66292	PtrMemberAccess	dbg -> orig_filename		65718	1					
ANR	66293	Identifier	dbg		65718	0					
ANR	66294	Identifier	orig_filename		65718	1					
ANR	66295	ExpressionStatement	leak . lineno = dbg -> lineno	2146:5:65562:65587	65718	6	True				
ANR	66296	AssignmentExpression	leak . lineno = dbg -> lineno		65718	0		=			
ANR	66297	MemberAccess	leak . lineno		65718	0					
ANR	66298	Identifier	leak		65718	0					
ANR	66299	Identifier	lineno		65718	1					
ANR	66300	PtrMemberAccess	dbg -> lineno		65718	1					
ANR	66301	Identifier	dbg		65718	0					
ANR	66302	Identifier	lineno		65718	1					
ANR	66303	ExpressionStatement	leak . orig_lineno = dbg -> orig_lineno	2147:5:65594:65629	65718	7	True				
ANR	66304	AssignmentExpression	leak . orig_lineno = dbg -> orig_lineno		65718	0		=			
ANR	66305	MemberAccess	leak . orig_lineno		65718	0					
ANR	66306	Identifier	leak		65718	0					
ANR	66307	Identifier	orig_lineno		65718	1					
ANR	66308	PtrMemberAccess	dbg -> orig_lineno		65718	1					
ANR	66309	Identifier	dbg		65718	0					
ANR	66310	Identifier	orig_lineno		65718	1					
ANR	66311	ExpressionStatement	"zend_message_dispatcher ( ZMSG_LOG_SCRIPT_NAME , NULL )"	2149:5:65637:65688	65718	8	True				
ANR	66312	CallExpression	"zend_message_dispatcher ( ZMSG_LOG_SCRIPT_NAME , NULL )"		65718	0					
ANR	66313	Callee	zend_message_dispatcher		65718	0					
ANR	66314	Identifier	zend_message_dispatcher		65718	0					
ANR	66315	ArgumentList	ZMSG_LOG_SCRIPT_NAME		65718	1					
ANR	66316	Argument	ZMSG_LOG_SCRIPT_NAME		65718	0					
ANR	66317	Identifier	ZMSG_LOG_SCRIPT_NAME		65718	0					
ANR	66318	Argument	NULL		65718	1					
ANR	66319	Identifier	NULL		65718	0					
ANR	66320	ExpressionStatement	"zend_message_dispatcher ( ZMSG_MEMORY_LEAK_DETECTED , & leak )"	2150:5:65695:65752	65718	9	True				
ANR	66321	CallExpression	"zend_message_dispatcher ( ZMSG_MEMORY_LEAK_DETECTED , & leak )"		65718	0					
ANR	66322	Callee	zend_message_dispatcher		65718	0					
ANR	66323	Identifier	zend_message_dispatcher		65718	0					
ANR	66324	ArgumentList	ZMSG_MEMORY_LEAK_DETECTED		65718	1					
ANR	66325	Argument	ZMSG_MEMORY_LEAK_DETECTED		65718	0					
ANR	66326	Identifier	ZMSG_MEMORY_LEAK_DETECTED		65718	0					
ANR	66327	Argument	& leak		65718	1					
ANR	66328	UnaryOperationExpression	& leak		65718	0					
ANR	66329	UnaryOperator	&		65718	0					
ANR	66330	Identifier	leak		65718	1					
ANR	66331	ExpressionStatement	"zend_mm_bitset_reset_range ( p -> free_map , i , pages_count )"	2152:5:65760:65815	65718	10	True				
ANR	66332	CallExpression	"zend_mm_bitset_reset_range ( p -> free_map , i , pages_count )"		65718	0					
ANR	66333	Callee	zend_mm_bitset_reset_range		65718	0					
ANR	66334	Identifier	zend_mm_bitset_reset_range		65718	0					
ANR	66335	ArgumentList	p -> free_map		65718	1					
ANR	66336	Argument	p -> free_map		65718	0					
ANR	66337	PtrMemberAccess	p -> free_map		65718	0					
ANR	66338	Identifier	p		65718	0					
ANR	66339	Identifier	free_map		65718	1					
ANR	66340	Argument	i		65718	1					
ANR	66341	Identifier	i		65718	0					
ANR	66342	Argument	pages_count		65718	2					
ANR	66343	Identifier	pages_count		65718	0					
ANR	66344	ExpressionStatement	"repeated = zend_mm_find_leaks ( heap , p , i + pages_count , & leak )"	2154:5:65823:65885	65718	11	True				
ANR	66345	AssignmentExpression	"repeated = zend_mm_find_leaks ( heap , p , i + pages_count , & leak )"		65718	0		=			
ANR	66346	Identifier	repeated		65718	0					
ANR	66347	CallExpression	"zend_mm_find_leaks ( heap , p , i + pages_count , & leak )"		65718	1					
ANR	66348	Callee	zend_mm_find_leaks		65718	0					
ANR	66349	Identifier	zend_mm_find_leaks		65718	0					
ANR	66350	ArgumentList	heap		65718	1					
ANR	66351	Argument	heap		65718	0					
ANR	66352	Identifier	heap		65718	0					
ANR	66353	Argument	p		65718	1					
ANR	66354	Identifier	p		65718	0					
ANR	66355	Argument	i + pages_count		65718	2					
ANR	66356	AdditiveExpression	i + pages_count		65718	0		+			
ANR	66357	Identifier	i		65718	0					
ANR	66358	Identifier	pages_count		65718	1					
ANR	66359	Argument	& leak		65718	3					
ANR	66360	UnaryOperationExpression	& leak		65718	0					
ANR	66361	UnaryOperator	&		65718	0					
ANR	66362	Identifier	leak		65718	1					
ANR	66363	ExpressionStatement	total += 1 + repeated	2155:5:65892:65913	65718	12	True				
ANR	66364	AssignmentExpression	total += 1 + repeated		65718	0		+=			
ANR	66365	Identifier	total		65718	0					
ANR	66366	AdditiveExpression	1 + repeated		65718	1		+			
ANR	66367	PrimaryExpression	1		65718	0					
ANR	66368	Identifier	repeated		65718	1					
ANR	66369	IfStatement	if ( repeated )		65718	13					
ANR	66370	Condition	repeated	2156:9:65924:65931	65718	0	True				
ANR	66371	Identifier	repeated		65718	0					
ANR	66372	CompoundStatement		90:19:3133:3133	65718	1					
ANR	66373	ExpressionStatement	"zend_message_dispatcher ( ZMSG_MEMORY_LEAK_REPEATED , ( void * ) ( zend_uintptr_t ) repeated )"	2157:6:65942:66026	65718	0	True				
ANR	66374	CallExpression	"zend_message_dispatcher ( ZMSG_MEMORY_LEAK_REPEATED , ( void * ) ( zend_uintptr_t ) repeated )"		65718	0					
ANR	66375	Callee	zend_message_dispatcher		65718	0					
ANR	66376	Identifier	zend_message_dispatcher		65718	0					
ANR	66377	ArgumentList	ZMSG_MEMORY_LEAK_REPEATED		65718	1					
ANR	66378	Argument	ZMSG_MEMORY_LEAK_REPEATED		65718	0					
ANR	66379	Identifier	ZMSG_MEMORY_LEAK_REPEATED		65718	0					
ANR	66380	Argument	( void * ) ( zend_uintptr_t ) repeated		65718	1					
ANR	66381	CastExpression	( void * ) ( zend_uintptr_t ) repeated		65718	0					
ANR	66382	CastTarget	void *		65718	0					
ANR	66383	CastExpression	( zend_uintptr_t ) repeated		65718	1					
ANR	66384	CastTarget	zend_uintptr_t		65718	0					
ANR	66385	Identifier	repeated		65718	1					
ANR	66386	ExpressionStatement	i += pages_count	2159:5:66040:66056	65718	14	True				
ANR	66387	AssignmentExpression	i += pages_count		65718	0		+=			
ANR	66388	Identifier	i		65718	0					
ANR	66389	Identifier	pages_count		65718	1					
ANR	66390	ElseStatement	else		65718	0					
ANR	66391	CompoundStatement		95:10:3273:3273	65718	0					
ANR	66392	ExpressionStatement	i ++	2162:4:66080:66083	65718	0	True				
ANR	66393	PostIncDecOperationExpression	i ++		65718	0					
ANR	66394	Identifier	i		65718	0					
ANR	66395	IncDec	++		65718	1					
ANR	66396	ExpressionStatement	p = p -> next	2165:2:66096:66107	65718	2	True				
ANR	66397	AssignmentExpression	p = p -> next		65718	0		=			
ANR	66398	Identifier	p		65718	0					
ANR	66399	PtrMemberAccess	p -> next		65718	1					
ANR	66400	Identifier	p		65718	0					
ANR	66401	Identifier	next		65718	1					
ANR	66402	Condition	p != heap -> main_chunk	2166:10:66119:66139	65718	1	True				
ANR	66403	EqualityExpression	p != heap -> main_chunk		65718	0		!=			
ANR	66404	Identifier	p		65718	0					
ANR	66405	PtrMemberAccess	heap -> main_chunk		65718	1					
ANR	66406	Identifier	heap		65718	0					
ANR	66407	Identifier	main_chunk		65718	1					
ANR	66408	IfStatement	if ( total )		65718	10					
ANR	66409	Condition	total	2167:5:66148:66152	65718	0	True				
ANR	66410	Identifier	total		65718	0					
ANR	66411	CompoundStatement		101:12:3354:3354	65718	1					
ANR	66412	ExpressionStatement	"zend_message_dispatcher ( ZMSG_MEMORY_LEAKS_GRAND_TOTAL , & total )"	2168:2:66159:66221	65718	0	True				
ANR	66413	CallExpression	"zend_message_dispatcher ( ZMSG_MEMORY_LEAKS_GRAND_TOTAL , & total )"		65718	0					
ANR	66414	Callee	zend_message_dispatcher		65718	0					
ANR	66415	Identifier	zend_message_dispatcher		65718	0					
ANR	66416	ArgumentList	ZMSG_MEMORY_LEAKS_GRAND_TOTAL		65718	1					
ANR	66417	Argument	ZMSG_MEMORY_LEAKS_GRAND_TOTAL		65718	0					
ANR	66418	Identifier	ZMSG_MEMORY_LEAKS_GRAND_TOTAL		65718	0					
ANR	66419	Argument	& total		65718	1					
ANR	66420	UnaryOperationExpression	& total		65718	0					
ANR	66421	UnaryOperator	&		65718	0					
ANR	66422	Identifier	total		65718	1					
ANR	66423	ReturnType	static void		65718	1					
ANR	66424	Identifier	zend_mm_check_leaks		65718	2					
ANR	66425	ParameterList	zend_mm_heap * heap		65718	3					
ANR	66426	Parameter	zend_mm_heap * heap	2066:32:62780:62797	65718	0	True				
ANR	66427	ParameterType	zend_mm_heap *		65718	0					
ANR	66428	Identifier	heap		65718	1					
ANR	66429	CFGEntryNode	ENTRY		65718		True				
ANR	66430	CFGExitNode	EXIT		65718		True				
ANR	66431	Symbol	zend_mm_find_leaks		65718						
ANR	66432	Symbol	p -> next		65718						
ANR	66433	Symbol	zend_mm_bitset_is_set		65718						
ANR	66434	Symbol	repeated		65718						
ANR	66435	Symbol	p -> free_map		65718						
ANR	66436	Symbol	list -> dbg		65718						
ANR	66437	Symbol	leak . orig_filename		65718						
ANR	66438	Symbol	p -> map		65718						
ANR	66439	Symbol	dbg -> orig_filename		65718						
ANR	66440	Symbol	& total		65718						
ANR	66441	Symbol	list -> dbg . size		65718						
ANR	66442	Symbol	list -> dbg . lineno		65718						
ANR	66443	Symbol	leak . filename		65718						
ANR	66444	Symbol	list -> dbg . orig_filename		65718						
ANR	66445	Symbol	dbg -> orig_lineno		65718						
ANR	66446	Symbol	p -> free_tail		65718						
ANR	66447	Symbol	list -> next		65718						
ANR	66448	Symbol	NULL		65718						
ANR	66449	Symbol	heap -> main_chunk		65718						
ANR	66450	Symbol	pages_count		65718						
ANR	66451	Symbol	ZEND_MM_IS_SRUN		65718						
ANR	66452	Symbol	dbg		65718						
ANR	66453	Symbol	list		65718						
ANR	66454	Symbol	list -> ptr		65718						
ANR	66455	Symbol	heap -> huge_list		65718						
ANR	66456	Symbol	* bin_num		65718						
ANR	66457	Symbol	* bin_pages		65718						
ANR	66458	Symbol	leak . addr		65718						
ANR	66459	Symbol	* heap		65718						
ANR	66460	Symbol	ZMSG_LOG_SCRIPT_NAME		65718						
ANR	66461	Symbol	bin_num		65718						
ANR	66462	Symbol	leak . orig_lineno		65718						
ANR	66463	Symbol	dbg -> size		65718						
ANR	66464	Symbol	ZEND_MM_SRUN_BIN_NUM		65718						
ANR	66465	Symbol	leak . lineno		65718						
ANR	66466	Symbol	dbg -> lineno		65718						
ANR	66467	Symbol	zend_mm_find_leaks_small		65718						
ANR	66468	Symbol	leak . size		65718						
ANR	66469	Symbol	& leak		65718						
ANR	66470	Symbol	leak		65718						
ANR	66471	Symbol	total		65718						
ANR	66472	Symbol	* bin_data_size		65718						
ANR	66473	Symbol	zend_mm_find_leaks_huge		65718						
ANR	66474	Symbol	dbg -> filename		65718						
ANR	66475	Symbol	ZEND_MM_FIRST_PAGE		65718						
ANR	66476	Symbol	* * p		65718						
ANR	66477	Symbol	heap		65718						
ANR	66478	Symbol	ZEND_MM_PAGE_SIZE		65718						
ANR	66479	Symbol	bin_data_size		65718						
ANR	66480	Symbol	ZMSG_MEMORY_LEAK_DETECTED		65718						
ANR	66481	Symbol	* bin_elements		65718						
ANR	66482	Symbol	bin_pages		65718						
ANR	66483	Symbol	ZEND_MM_ALIGNED_SIZE		65718						
ANR	66484	Symbol	ZMSG_MEMORY_LEAKS_GRAND_TOTAL		65718						
ANR	66485	Symbol	ZMSG_MEMORY_LEAK_REPEATED		65718						
ANR	66486	Symbol	i		65718						
ANR	66487	Symbol	j		65718						
ANR	66488	Symbol	list -> dbg . filename		65718						
ANR	66489	Symbol	bin_elements		65718						
ANR	66490	Symbol	* dbg		65718						
ANR	66491	Symbol	p		65718						
ANR	66492	Symbol	ZEND_MM_LRUN_PAGES		65718						
ANR	66493	Symbol	q		65718						
ANR	66494	Symbol	* i		65718						
ANR	66495	Symbol	* list		65718						
ANR	66496	Symbol	q -> size		65718						
ANR	66497	Symbol	list -> dbg . orig_lineno		65718						
ANR	66498	Symbol	* p		65718						
ANR	66499	Symbol	* p -> map		65718						
ANR	66500	Symbol	* q		65718						
ANR	66501	Symbol	q -> ptr		65718						
ANR	66502	Function	zend_mm_shutdown	2173:0:66236:68832							
ANR	66503	FunctionDef	"zend_mm_shutdown (zend_mm_heap * heap , int full , int silent)"		66502	0					
ANR	66504	CompoundStatement		2174:0:66300:68832	66502	0					
ANR	66505	IdentifierDeclStatement	zend_mm_chunk * p ;	2175:1:66303:66319	66502	0	True				
ANR	66506	IdentifierDecl	* p		66502	0					
ANR	66507	IdentifierDeclType	zend_mm_chunk *		66502	0					
ANR	66508	Identifier	p		66502	1					
ANR	66509	IdentifierDeclStatement	zend_mm_huge_list * list ;	2176:1:66322:66345	66502	1	True				
ANR	66510	IdentifierDecl	* list		66502	0					
ANR	66511	IdentifierDeclType	zend_mm_huge_list *		66502	0					
ANR	66512	Identifier	list		66502	1					
ANR	66513	IfStatement	if ( heap -> use_custom_heap )		66502	2					
ANR	66514	Condition	heap -> use_custom_heap	2179:5:66372:66392	66502	0	True				
ANR	66515	PtrMemberAccess	heap -> use_custom_heap		66502	0					
ANR	66516	Identifier	heap		66502	0					
ANR	66517	Identifier	use_custom_heap		66502	1					
ANR	66518	CompoundStatement		6:28:94:94	66502	1					
ANR	66519	IfStatement	if ( full )		66502	0					
ANR	66520	Condition	full	2180:6:66403:66406	66502	0	True				
ANR	66521	Identifier	full		66502	0					
ANR	66522	CompoundStatement		7:12:108:108	66502	1					
ANR	66523	IfStatement	if ( ZEND_DEBUG && heap -> use_custom_heap == ZEND_MM_CUSTOM_HEAP_DEBUG )		66502	0					
ANR	66524	Condition	ZEND_DEBUG && heap -> use_custom_heap == ZEND_MM_CUSTOM_HEAP_DEBUG	2181:7:66418:66481	66502	0	True				
ANR	66525	AndExpression	ZEND_DEBUG && heap -> use_custom_heap == ZEND_MM_CUSTOM_HEAP_DEBUG		66502	0		&&			
ANR	66526	Identifier	ZEND_DEBUG		66502	0					
ANR	66527	EqualityExpression	heap -> use_custom_heap == ZEND_MM_CUSTOM_HEAP_DEBUG		66502	1		==			
ANR	66528	PtrMemberAccess	heap -> use_custom_heap		66502	0					
ANR	66529	Identifier	heap		66502	0					
ANR	66530	Identifier	use_custom_heap		66502	1					
ANR	66531	Identifier	ZEND_MM_CUSTOM_HEAP_DEBUG		66502	1					
ANR	66532	CompoundStatement		8:73:183:183	66502	1					
ANR	66533	Statement	heap	2182:4:66490:66493	66502	0	True				
ANR	66534	Statement	->	2182:8:66494:66495	66502	1	True				
ANR	66535	Statement	custom_heap	2182:10:66496:66506	66502	2	True				
ANR	66536	Statement	.	2182:21:66507:66507	66502	3	True				
ANR	66537	Statement	debug	2182:22:66508:66512	66502	4	True				
ANR	66538	Statement	.	2182:27:66513:66513	66502	5	True				
ANR	66539	Statement	_free	2182:28:66514:66518	66502	6	True				
ANR	66540	Statement	(	2182:33:66519:66519	66502	7	True				
ANR	66541	Statement	heap	2182:34:66520:66523	66502	8	True				
ANR	66542	Statement	ZEND_FILE_LINE_CC	2182:39:66525:66541	66502	9	True				
ANR	66543	Statement	ZEND_FILE_LINE_EMPTY_CC	2182:57:66543:66565	66502	10	True				
ANR	66544	Statement	)	2182:80:66566:66566	66502	11	True				
ANR	66545	ExpressionStatement		2182:81:66567:66567	66502	12	True				
ANR	66546	ElseStatement	else		66502	0					
ANR	66547	CompoundStatement		10:10:278:278	66502	0					
ANR	66548	ExpressionStatement	heap -> custom_heap . std . _free ( heap )	2184:4:66585:66618	66502	0	True				
ANR	66549	CallExpression	heap -> custom_heap . std . _free ( heap )		66502	0					
ANR	66550	Callee	heap -> custom_heap . std . _free		66502	0					
ANR	66551	MemberAccess	heap -> custom_heap . std . _free		66502	0					
ANR	66552	MemberAccess	heap -> custom_heap . std		66502	0					
ANR	66553	PtrMemberAccess	heap -> custom_heap		66502	0					
ANR	66554	Identifier	heap		66502	0					
ANR	66555	Identifier	custom_heap		66502	1					
ANR	66556	Identifier	std		66502	1					
ANR	66557	Identifier	_free		66502	1					
ANR	66558	ArgumentList	heap		66502	1					
ANR	66559	Argument	heap		66502	0					
ANR	66560	Identifier	heap		66502	0					
ANR	66561	ReturnStatement	return ;	2187:2:66631:66637	66502	1	True				
ANR	66562	IfStatement	if ( ! silent )		66502	3					
ANR	66563	Condition	! silent	2192:5:66670:66676	66502	0	True				
ANR	66564	UnaryOperationExpression	! silent		66502	0					
ANR	66565	UnaryOperator	!		66502	0					
ANR	66566	Identifier	silent		66502	1					
ANR	66567	CompoundStatement		19:14:378:378	66502	1					
ANR	66568	ExpressionStatement	zend_mm_check_leaks ( heap )	2193:2:66683:66708	66502	0	True				
ANR	66569	CallExpression	zend_mm_check_leaks ( heap )		66502	0					
ANR	66570	Callee	zend_mm_check_leaks		66502	0					
ANR	66571	Identifier	zend_mm_check_leaks		66502	0					
ANR	66572	ArgumentList	heap		66502	1					
ANR	66573	Argument	heap		66502	0					
ANR	66574	Identifier	heap		66502	0					
ANR	66575	ExpressionStatement	list = heap -> huge_list	2198:1:66746:66768	66502	4	True				
ANR	66576	AssignmentExpression	list = heap -> huge_list		66502	0		=			
ANR	66577	Identifier	list		66502	0					
ANR	66578	PtrMemberAccess	heap -> huge_list		66502	1					
ANR	66579	Identifier	heap		66502	0					
ANR	66580	Identifier	huge_list		66502	1					
ANR	66581	ExpressionStatement	heap -> huge_list = NULL	2199:1:66771:66793	66502	5	True				
ANR	66582	AssignmentExpression	heap -> huge_list = NULL		66502	0		=			
ANR	66583	PtrMemberAccess	heap -> huge_list		66502	0					
ANR	66584	Identifier	heap		66502	0					
ANR	66585	Identifier	huge_list		66502	1					
ANR	66586	Identifier	NULL		66502	1					
ANR	66587	WhileStatement	while ( list )		66502	6					
ANR	66588	Condition	list	2200:8:66803:66806	66502	0	True				
ANR	66589	Identifier	list		66502	0					
ANR	66590	CompoundStatement		28:2:512:539	66502	1					
ANR	66591	IdentifierDeclStatement	zend_mm_huge_list * q = list ;	2201:2:66813:66840	66502	0	True				
ANR	66592	IdentifierDecl	* q = list		66502	0					
ANR	66593	IdentifierDeclType	zend_mm_huge_list *		66502	0					
ANR	66594	Identifier	q		66502	1					
ANR	66595	AssignmentExpression	* q = list		66502	2		=			
ANR	66596	Identifier	list		66502	0					
ANR	66597	Identifier	list		66502	1					
ANR	66598	ExpressionStatement	list = list -> next	2202:2:66844:66861	66502	1	True				
ANR	66599	AssignmentExpression	list = list -> next		66502	0		=			
ANR	66600	Identifier	list		66502	0					
ANR	66601	PtrMemberAccess	list -> next		66502	1					
ANR	66602	Identifier	list		66502	0					
ANR	66603	Identifier	next		66502	1					
ANR	66604	ExpressionStatement	"zend_mm_chunk_free ( heap , q -> ptr , q -> size )"	2203:2:66865:66906	66502	2	True				
ANR	66605	CallExpression	"zend_mm_chunk_free ( heap , q -> ptr , q -> size )"		66502	0					
ANR	66606	Callee	zend_mm_chunk_free		66502	0					
ANR	66607	Identifier	zend_mm_chunk_free		66502	0					
ANR	66608	ArgumentList	heap		66502	1					
ANR	66609	Argument	heap		66502	0					
ANR	66610	Identifier	heap		66502	0					
ANR	66611	Argument	q -> ptr		66502	1					
ANR	66612	PtrMemberAccess	q -> ptr		66502	0					
ANR	66613	Identifier	q		66502	0					
ANR	66614	Identifier	ptr		66502	1					
ANR	66615	Argument	q -> size		66502	2					
ANR	66616	PtrMemberAccess	q -> size		66502	0					
ANR	66617	Identifier	q		66502	0					
ANR	66618	Identifier	size		66502	1					
ANR	66619	ExpressionStatement	p = heap -> main_chunk -> next	2207:1:66975:67001	66502	7	True				
ANR	66620	AssignmentExpression	p = heap -> main_chunk -> next		66502	0		=			
ANR	66621	Identifier	p		66502	0					
ANR	66622	PtrMemberAccess	heap -> main_chunk -> next		66502	1					
ANR	66623	PtrMemberAccess	heap -> main_chunk		66502	0					
ANR	66624	Identifier	heap		66502	0					
ANR	66625	Identifier	main_chunk		66502	1					
ANR	66626	Identifier	next		66502	1					
ANR	66627	WhileStatement	while ( p != heap -> main_chunk )		66502	8					
ANR	66628	Condition	p != heap -> main_chunk	2208:8:67011:67031	66502	0	True				
ANR	66629	EqualityExpression	p != heap -> main_chunk		66502	0		!=			
ANR	66630	Identifier	p		66502	0					
ANR	66631	PtrMemberAccess	heap -> main_chunk		66502	1					
ANR	66632	Identifier	heap		66502	0					
ANR	66633	Identifier	main_chunk		66502	1					
ANR	66634	CompoundStatement		36:2:737:763	66502	1					
ANR	66635	IdentifierDeclStatement	zend_mm_chunk * q = p -> next ;	2209:2:67038:67064	66502	0	True				
ANR	66636	IdentifierDecl	* q = p -> next		66502	0					
ANR	66637	IdentifierDeclType	zend_mm_chunk *		66502	0					
ANR	66638	Identifier	q		66502	1					
ANR	66639	AssignmentExpression	* q = p -> next		66502	2		=			
ANR	66640	Identifier	q		66502	0					
ANR	66641	PtrMemberAccess	p -> next		66502	1					
ANR	66642	Identifier	p		66502	0					
ANR	66643	Identifier	next		66502	1					
ANR	66644	ExpressionStatement	p -> next = heap -> cached_chunks	2210:2:67068:67097	66502	1	True				
ANR	66645	AssignmentExpression	p -> next = heap -> cached_chunks		66502	0		=			
ANR	66646	PtrMemberAccess	p -> next		66502	0					
ANR	66647	Identifier	p		66502	0					
ANR	66648	Identifier	next		66502	1					
ANR	66649	PtrMemberAccess	heap -> cached_chunks		66502	1					
ANR	66650	Identifier	heap		66502	0					
ANR	66651	Identifier	cached_chunks		66502	1					
ANR	66652	ExpressionStatement	heap -> cached_chunks = p	2211:2:67101:67124	66502	2	True				
ANR	66653	AssignmentExpression	heap -> cached_chunks = p		66502	0		=			
ANR	66654	PtrMemberAccess	heap -> cached_chunks		66502	0					
ANR	66655	Identifier	heap		66502	0					
ANR	66656	Identifier	cached_chunks		66502	1					
ANR	66657	Identifier	p		66502	1					
ANR	66658	ExpressionStatement	p = q	2212:2:67128:67133	66502	3	True				
ANR	66659	AssignmentExpression	p = q		66502	0		=			
ANR	66660	Identifier	p		66502	0					
ANR	66661	Identifier	q		66502	1					
ANR	66662	ExpressionStatement	heap -> chunks_count --	2213:2:67137:67157	66502	4	True				
ANR	66663	PostIncDecOperationExpression	heap -> chunks_count --		66502	0					
ANR	66664	PtrMemberAccess	heap -> chunks_count		66502	0					
ANR	66665	Identifier	heap		66502	0					
ANR	66666	Identifier	chunks_count		66502	1					
ANR	66667	IncDec	--		66502	1					
ANR	66668	ExpressionStatement	heap -> cached_chunks_count ++	2214:2:67161:67188	66502	5	True				
ANR	66669	PostIncDecOperationExpression	heap -> cached_chunks_count ++		66502	0					
ANR	66670	PtrMemberAccess	heap -> cached_chunks_count		66502	0					
ANR	66671	Identifier	heap		66502	0					
ANR	66672	Identifier	cached_chunks_count		66502	1					
ANR	66673	IncDec	++		66502	1					
ANR	66674	IfStatement	if ( full )		66502	9					
ANR	66675	Condition	full	2217:5:67199:67202	66502	0	True				
ANR	66676	Identifier	full		66502	0					
ANR	66677	CompoundStatement		44:11:904:904	66502	1					
ANR	66678	WhileStatement	while ( heap -> cached_chunks )		66502	0					
ANR	66679	Condition	heap -> cached_chunks	2219:9:67247:67265	66502	0	True				
ANR	66680	PtrMemberAccess	heap -> cached_chunks		66502	0					
ANR	66681	Identifier	heap		66502	0					
ANR	66682	Identifier	cached_chunks		66502	1					
ANR	66683	CompoundStatement		46:30:967:967	66502	1					
ANR	66684	ExpressionStatement	p = heap -> cached_chunks	2220:3:67273:67296	66502	0	True				
ANR	66685	AssignmentExpression	p = heap -> cached_chunks		66502	0		=			
ANR	66686	Identifier	p		66502	0					
ANR	66687	PtrMemberAccess	heap -> cached_chunks		66502	1					
ANR	66688	Identifier	heap		66502	0					
ANR	66689	Identifier	cached_chunks		66502	1					
ANR	66690	ExpressionStatement	heap -> cached_chunks = p -> next	2221:3:67301:67330	66502	1	True				
ANR	66691	AssignmentExpression	heap -> cached_chunks = p -> next		66502	0		=			
ANR	66692	PtrMemberAccess	heap -> cached_chunks		66502	0					
ANR	66693	Identifier	heap		66502	0					
ANR	66694	Identifier	cached_chunks		66502	1					
ANR	66695	PtrMemberAccess	p -> next		66502	1					
ANR	66696	Identifier	p		66502	0					
ANR	66697	Identifier	next		66502	1					
ANR	66698	ExpressionStatement	"zend_mm_chunk_free ( heap , p , ZEND_MM_CHUNK_SIZE )"	2222:3:67335:67382	66502	2	True				
ANR	66699	CallExpression	"zend_mm_chunk_free ( heap , p , ZEND_MM_CHUNK_SIZE )"		66502	0					
ANR	66700	Callee	zend_mm_chunk_free		66502	0					
ANR	66701	Identifier	zend_mm_chunk_free		66502	0					
ANR	66702	ArgumentList	heap		66502	1					
ANR	66703	Argument	heap		66502	0					
ANR	66704	Identifier	heap		66502	0					
ANR	66705	Argument	p		66502	1					
ANR	66706	Identifier	p		66502	0					
ANR	66707	Argument	ZEND_MM_CHUNK_SIZE		66502	2					
ANR	66708	Identifier	ZEND_MM_CHUNK_SIZE		66502	0					
ANR	66709	ExpressionStatement	"zend_mm_chunk_free ( heap , heap -> main_chunk , ZEND_MM_CHUNK_SIZE )"	2225:2:67419:67481	66502	1	True				
ANR	66710	CallExpression	"zend_mm_chunk_free ( heap , heap -> main_chunk , ZEND_MM_CHUNK_SIZE )"		66502	0					
ANR	66711	Callee	zend_mm_chunk_free		66502	0					
ANR	66712	Identifier	zend_mm_chunk_free		66502	0					
ANR	66713	ArgumentList	heap		66502	1					
ANR	66714	Argument	heap		66502	0					
ANR	66715	Identifier	heap		66502	0					
ANR	66716	Argument	heap -> main_chunk		66502	1					
ANR	66717	PtrMemberAccess	heap -> main_chunk		66502	0					
ANR	66718	Identifier	heap		66502	0					
ANR	66719	Identifier	main_chunk		66502	1					
ANR	66720	Argument	ZEND_MM_CHUNK_SIZE		66502	2					
ANR	66721	Identifier	ZEND_MM_CHUNK_SIZE		66502	0					
ANR	66722	ElseStatement	else		66502	0					
ANR	66723	CompoundStatement		54:2:1194:1215	66502	0					
ANR	66724	IdentifierDeclStatement	zend_mm_heap old_heap ;	2227:2:67495:67516	66502	0	True				
ANR	66725	IdentifierDecl	old_heap		66502	0					
ANR	66726	IdentifierDeclType	zend_mm_heap		66502	0					
ANR	66727	Identifier	old_heap		66502	1					
ANR	66728	ExpressionStatement	heap -> avg_chunks_count = ( heap -> avg_chunks_count + ( double ) heap -> peak_chunks_count ) / 2.0	2230:2:67575:67664	66502	1	True				
ANR	66729	AssignmentExpression	heap -> avg_chunks_count = ( heap -> avg_chunks_count + ( double ) heap -> peak_chunks_count ) / 2.0		66502	0		=			
ANR	66730	PtrMemberAccess	heap -> avg_chunks_count		66502	0					
ANR	66731	Identifier	heap		66502	0					
ANR	66732	Identifier	avg_chunks_count		66502	1					
ANR	66733	MultiplicativeExpression	( heap -> avg_chunks_count + ( double ) heap -> peak_chunks_count ) / 2.0		66502	1		/			
ANR	66734	AdditiveExpression	heap -> avg_chunks_count + ( double ) heap -> peak_chunks_count		66502	0		+			
ANR	66735	PtrMemberAccess	heap -> avg_chunks_count		66502	0					
ANR	66736	Identifier	heap		66502	0					
ANR	66737	Identifier	avg_chunks_count		66502	1					
ANR	66738	CastExpression	( double ) heap -> peak_chunks_count		66502	1					
ANR	66739	CastTarget	double		66502	0					
ANR	66740	PtrMemberAccess	heap -> peak_chunks_count		66502	1					
ANR	66741	Identifier	heap		66502	0					
ANR	66742	Identifier	peak_chunks_count		66502	1					
ANR	66743	PrimaryExpression	2.0		66502	1					
ANR	66744	WhileStatement	while ( ( double ) heap -> cached_chunks_count + 0.9 > heap -> avg_chunks_count && heap -> cached_chunks )		66502	2					
ANR	66745	Condition	( double ) heap -> cached_chunks_count + 0.9 > heap -> avg_chunks_count && heap -> cached_chunks	2231:9:67675:67770	66502	0	True				
ANR	66746	AndExpression	( double ) heap -> cached_chunks_count + 0.9 > heap -> avg_chunks_count && heap -> cached_chunks		66502	0		&&			
ANR	66747	RelationalExpression	( double ) heap -> cached_chunks_count + 0.9 > heap -> avg_chunks_count		66502	0		>			
ANR	66748	AdditiveExpression	( double ) heap -> cached_chunks_count + 0.9		66502	0		+			
ANR	66749	CastExpression	( double ) heap -> cached_chunks_count		66502	0					
ANR	66750	CastTarget	double		66502	0					
ANR	66751	PtrMemberAccess	heap -> cached_chunks_count		66502	1					
ANR	66752	Identifier	heap		66502	0					
ANR	66753	Identifier	cached_chunks_count		66502	1					
ANR	66754	PrimaryExpression	0.9		66502	1					
ANR	66755	PtrMemberAccess	heap -> avg_chunks_count		66502	1					
ANR	66756	Identifier	heap		66502	0					
ANR	66757	Identifier	avg_chunks_count		66502	1					
ANR	66758	PtrMemberAccess	heap -> cached_chunks		66502	1					
ANR	66759	Identifier	heap		66502	0					
ANR	66760	Identifier	cached_chunks		66502	1					
ANR	66761	CompoundStatement		59:30:1472:1472	66502	1					
ANR	66762	ExpressionStatement	p = heap -> cached_chunks	2233:3:67778:67801	66502	0	True				
ANR	66763	AssignmentExpression	p = heap -> cached_chunks		66502	0		=			
ANR	66764	Identifier	p		66502	0					
ANR	66765	PtrMemberAccess	heap -> cached_chunks		66502	1					
ANR	66766	Identifier	heap		66502	0					
ANR	66767	Identifier	cached_chunks		66502	1					
ANR	66768	ExpressionStatement	heap -> cached_chunks = p -> next	2234:3:67806:67835	66502	1	True				
ANR	66769	AssignmentExpression	heap -> cached_chunks = p -> next		66502	0		=			
ANR	66770	PtrMemberAccess	heap -> cached_chunks		66502	0					
ANR	66771	Identifier	heap		66502	0					
ANR	66772	Identifier	cached_chunks		66502	1					
ANR	66773	PtrMemberAccess	p -> next		66502	1					
ANR	66774	Identifier	p		66502	0					
ANR	66775	Identifier	next		66502	1					
ANR	66776	ExpressionStatement	"zend_mm_chunk_free ( heap , p , ZEND_MM_CHUNK_SIZE )"	2235:3:67840:67887	66502	2	True				
ANR	66777	CallExpression	"zend_mm_chunk_free ( heap , p , ZEND_MM_CHUNK_SIZE )"		66502	0					
ANR	66778	Callee	zend_mm_chunk_free		66502	0					
ANR	66779	Identifier	zend_mm_chunk_free		66502	0					
ANR	66780	ArgumentList	heap		66502	1					
ANR	66781	Argument	heap		66502	0					
ANR	66782	Identifier	heap		66502	0					
ANR	66783	Argument	p		66502	1					
ANR	66784	Identifier	p		66502	0					
ANR	66785	Argument	ZEND_MM_CHUNK_SIZE		66502	2					
ANR	66786	Identifier	ZEND_MM_CHUNK_SIZE		66502	0					
ANR	66787	ExpressionStatement	heap -> cached_chunks_count --	2236:3:67892:67919	66502	3	True				
ANR	66788	PostIncDecOperationExpression	heap -> cached_chunks_count --		66502	0					
ANR	66789	PtrMemberAccess	heap -> cached_chunks_count		66502	0					
ANR	66790	Identifier	heap		66502	0					
ANR	66791	Identifier	cached_chunks_count		66502	1					
ANR	66792	IncDec	--		66502	1					
ANR	66793	ExpressionStatement	p = heap -> cached_chunks	2239:2:67955:67978	66502	3	True				
ANR	66794	AssignmentExpression	p = heap -> cached_chunks		66502	0		=			
ANR	66795	Identifier	p		66502	0					
ANR	66796	PtrMemberAccess	heap -> cached_chunks		66502	1					
ANR	66797	Identifier	heap		66502	0					
ANR	66798	Identifier	cached_chunks		66502	1					
ANR	66799	WhileStatement	while ( p != NULL )		66502	4					
ANR	66800	Condition	p != NULL	2240:9:67989:67997	66502	0	True				
ANR	66801	EqualityExpression	p != NULL		66502	0		!=			
ANR	66802	Identifier	p		66502	0					
ANR	66803	Identifier	NULL		66502	1					
ANR	66804	CompoundStatement		68:3:1704:1730	66502	1					
ANR	66805	IdentifierDeclStatement	zend_mm_chunk * q = p -> next ;	2241:3:68005:68031	66502	0	True				
ANR	66806	IdentifierDecl	* q = p -> next		66502	0					
ANR	66807	IdentifierDeclType	zend_mm_chunk *		66502	0					
ANR	66808	Identifier	q		66502	1					
ANR	66809	AssignmentExpression	* q = p -> next		66502	2		=			
ANR	66810	Identifier	q		66502	0					
ANR	66811	PtrMemberAccess	p -> next		66502	1					
ANR	66812	Identifier	p		66502	0					
ANR	66813	Identifier	next		66502	1					
ANR	66814	ExpressionStatement	"memset ( p , 0 , sizeof ( zend_mm_chunk ) )"	2242:3:68036:68071	66502	1	True				
ANR	66815	CallExpression	"memset ( p , 0 , sizeof ( zend_mm_chunk ) )"		66502	0					
ANR	66816	Callee	memset		66502	0					
ANR	66817	Identifier	memset		66502	0					
ANR	66818	ArgumentList	p		66502	1					
ANR	66819	Argument	p		66502	0					
ANR	66820	Identifier	p		66502	0					
ANR	66821	Argument	0		66502	1					
ANR	66822	PrimaryExpression	0		66502	0					
ANR	66823	Argument	sizeof ( zend_mm_chunk )		66502	2					
ANR	66824	SizeofExpression	sizeof ( zend_mm_chunk )		66502	0					
ANR	66825	Sizeof	sizeof		66502	0					
ANR	66826	SizeofOperand	zend_mm_chunk		66502	1					
ANR	66827	ExpressionStatement	p -> next = q	2243:3:68076:68087	66502	2	True				
ANR	66828	AssignmentExpression	p -> next = q		66502	0		=			
ANR	66829	PtrMemberAccess	p -> next		66502	0					
ANR	66830	Identifier	p		66502	0					
ANR	66831	Identifier	next		66502	1					
ANR	66832	Identifier	q		66502	1					
ANR	66833	ExpressionStatement	p = q	2244:3:68092:68097	66502	3	True				
ANR	66834	AssignmentExpression	p = q		66502	0		=			
ANR	66835	Identifier	p		66502	0					
ANR	66836	Identifier	q		66502	1					
ANR	66837	ExpressionStatement	old_heap = * heap	2248:2:68152:68168	66502	5	True				
ANR	66838	AssignmentExpression	old_heap = * heap		66502	0		=			
ANR	66839	Identifier	old_heap		66502	0					
ANR	66840	UnaryOperationExpression	* heap		66502	1					
ANR	66841	UnaryOperator	*		66502	0					
ANR	66842	Identifier	heap		66502	1					
ANR	66843	ExpressionStatement	p = heap -> main_chunk	2249:2:68172:68192	66502	6	True				
ANR	66844	AssignmentExpression	p = heap -> main_chunk		66502	0		=			
ANR	66845	Identifier	p		66502	0					
ANR	66846	PtrMemberAccess	heap -> main_chunk		66502	1					
ANR	66847	Identifier	heap		66502	0					
ANR	66848	Identifier	main_chunk		66502	1					
ANR	66849	ExpressionStatement	"memset ( p , 0 , ZEND_MM_FIRST_PAGE * ZEND_MM_PAGE_SIZE )"	2250:2:68196:68248	66502	7	True				
ANR	66850	CallExpression	"memset ( p , 0 , ZEND_MM_FIRST_PAGE * ZEND_MM_PAGE_SIZE )"		66502	0					
ANR	66851	Callee	memset		66502	0					
ANR	66852	Identifier	memset		66502	0					
ANR	66853	ArgumentList	p		66502	1					
ANR	66854	Argument	p		66502	0					
ANR	66855	Identifier	p		66502	0					
ANR	66856	Argument	0		66502	1					
ANR	66857	PrimaryExpression	0		66502	0					
ANR	66858	Argument	ZEND_MM_FIRST_PAGE * ZEND_MM_PAGE_SIZE		66502	2					
ANR	66859	MultiplicativeExpression	ZEND_MM_FIRST_PAGE * ZEND_MM_PAGE_SIZE		66502	0		*			
ANR	66860	Identifier	ZEND_MM_FIRST_PAGE		66502	0					
ANR	66861	Identifier	ZEND_MM_PAGE_SIZE		66502	1					
ANR	66862	ExpressionStatement	* heap = old_heap	2251:2:68252:68268	66502	8	True				
ANR	66863	AssignmentExpression	* heap = old_heap		66502	0		=			
ANR	66864	UnaryOperationExpression	* heap		66502	0					
ANR	66865	UnaryOperator	*		66502	0					
ANR	66866	Identifier	heap		66502	1					
ANR	66867	Identifier	old_heap		66502	1					
ANR	66868	ExpressionStatement	"memset ( heap -> free_slot , 0 , sizeof ( heap -> free_slot ) )"	2252:2:68272:68323	66502	9	True				
ANR	66869	CallExpression	"memset ( heap -> free_slot , 0 , sizeof ( heap -> free_slot ) )"		66502	0					
ANR	66870	Callee	memset		66502	0					
ANR	66871	Identifier	memset		66502	0					
ANR	66872	ArgumentList	heap -> free_slot		66502	1					
ANR	66873	Argument	heap -> free_slot		66502	0					
ANR	66874	PtrMemberAccess	heap -> free_slot		66502	0					
ANR	66875	Identifier	heap		66502	0					
ANR	66876	Identifier	free_slot		66502	1					
ANR	66877	Argument	0		66502	1					
ANR	66878	PrimaryExpression	0		66502	0					
ANR	66879	Argument	sizeof ( heap -> free_slot )		66502	2					
ANR	66880	SizeofExpression	sizeof ( heap -> free_slot )		66502	0					
ANR	66881	Sizeof	sizeof		66502	0					
ANR	66882	PtrMemberAccess	heap -> free_slot		66502	1					
ANR	66883	Identifier	heap		66502	0					
ANR	66884	Identifier	free_slot		66502	1					
ANR	66885	ExpressionStatement	heap -> main_chunk = p	2253:2:68327:68347	66502	10	True				
ANR	66886	AssignmentExpression	heap -> main_chunk = p		66502	0		=			
ANR	66887	PtrMemberAccess	heap -> main_chunk		66502	0					
ANR	66888	Identifier	heap		66502	0					
ANR	66889	Identifier	main_chunk		66502	1					
ANR	66890	Identifier	p		66502	1					
ANR	66891	ExpressionStatement	p -> heap = & p -> heap_slot	2254:2:68351:68374	66502	11	True				
ANR	66892	AssignmentExpression	p -> heap = & p -> heap_slot		66502	0		=			
ANR	66893	PtrMemberAccess	p -> heap		66502	0					
ANR	66894	Identifier	p		66502	0					
ANR	66895	Identifier	heap		66502	1					
ANR	66896	UnaryOperationExpression	& p -> heap_slot		66502	1					
ANR	66897	UnaryOperator	&		66502	0					
ANR	66898	PtrMemberAccess	p -> heap_slot		66502	1					
ANR	66899	Identifier	p		66502	0					
ANR	66900	Identifier	heap_slot		66502	1					
ANR	66901	ExpressionStatement	p -> next = p	2255:2:68378:68389	66502	12	True				
ANR	66902	AssignmentExpression	p -> next = p		66502	0		=			
ANR	66903	PtrMemberAccess	p -> next		66502	0					
ANR	66904	Identifier	p		66502	0					
ANR	66905	Identifier	next		66502	1					
ANR	66906	Identifier	p		66502	1					
ANR	66907	ExpressionStatement	p -> prev = p	2256:2:68393:68404	66502	13	True				
ANR	66908	AssignmentExpression	p -> prev = p		66502	0		=			
ANR	66909	PtrMemberAccess	p -> prev		66502	0					
ANR	66910	Identifier	p		66502	0					
ANR	66911	Identifier	prev		66502	1					
ANR	66912	Identifier	p		66502	1					
ANR	66913	ExpressionStatement	p -> free_pages = ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE	2257:2:68408:68458	66502	14	True				
ANR	66914	AssignmentExpression	p -> free_pages = ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE		66502	0		=			
ANR	66915	PtrMemberAccess	p -> free_pages		66502	0					
ANR	66916	Identifier	p		66502	0					
ANR	66917	Identifier	free_pages		66502	1					
ANR	66918	AdditiveExpression	ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE		66502	1		-			
ANR	66919	Identifier	ZEND_MM_PAGES		66502	0					
ANR	66920	Identifier	ZEND_MM_FIRST_PAGE		66502	1					
ANR	66921	ExpressionStatement	p -> free_tail = ZEND_MM_FIRST_PAGE	2258:2:68462:68495	66502	15	True				
ANR	66922	AssignmentExpression	p -> free_tail = ZEND_MM_FIRST_PAGE		66502	0		=			
ANR	66923	PtrMemberAccess	p -> free_tail		66502	0					
ANR	66924	Identifier	p		66502	0					
ANR	66925	Identifier	free_tail		66502	1					
ANR	66926	Identifier	ZEND_MM_FIRST_PAGE		66502	1					
ANR	66927	ExpressionStatement	p -> free_map [ 0 ] = ( 1L << ZEND_MM_FIRST_PAGE ) - 1	2259:2:68499:68546	66502	16	True				
ANR	66928	AssignmentExpression	p -> free_map [ 0 ] = ( 1L << ZEND_MM_FIRST_PAGE ) - 1		66502	0		=			
ANR	66929	ArrayIndexing	p -> free_map [ 0 ]		66502	0					
ANR	66930	PtrMemberAccess	p -> free_map		66502	0					
ANR	66931	Identifier	p		66502	0					
ANR	66932	Identifier	free_map		66502	1					
ANR	66933	PrimaryExpression	0		66502	1					
ANR	66934	AdditiveExpression	( 1L << ZEND_MM_FIRST_PAGE ) - 1		66502	1		-			
ANR	66935	ShiftExpression	1L << ZEND_MM_FIRST_PAGE		66502	0		<<			
ANR	66936	PrimaryExpression	1L		66502	0					
ANR	66937	Identifier	ZEND_MM_FIRST_PAGE		66502	1					
ANR	66938	PrimaryExpression	1		66502	1					
ANR	66939	ExpressionStatement	p -> map [ 0 ] = ZEND_MM_LRUN ( ZEND_MM_FIRST_PAGE )	2260:2:68550:68594	66502	17	True				
ANR	66940	AssignmentExpression	p -> map [ 0 ] = ZEND_MM_LRUN ( ZEND_MM_FIRST_PAGE )		66502	0		=			
ANR	66941	ArrayIndexing	p -> map [ 0 ]		66502	0					
ANR	66942	PtrMemberAccess	p -> map		66502	0					
ANR	66943	Identifier	p		66502	0					
ANR	66944	Identifier	map		66502	1					
ANR	66945	PrimaryExpression	0		66502	1					
ANR	66946	CallExpression	ZEND_MM_LRUN ( ZEND_MM_FIRST_PAGE )		66502	1					
ANR	66947	Callee	ZEND_MM_LRUN		66502	0					
ANR	66948	Identifier	ZEND_MM_LRUN		66502	0					
ANR	66949	ArgumentList	ZEND_MM_FIRST_PAGE		66502	1					
ANR	66950	Argument	ZEND_MM_FIRST_PAGE		66502	0					
ANR	66951	Identifier	ZEND_MM_FIRST_PAGE		66502	0					
ANR	66952	ExpressionStatement	heap -> chunks_count = 1	2261:2:68598:68620	66502	18	True				
ANR	66953	AssignmentExpression	heap -> chunks_count = 1		66502	0		=			
ANR	66954	PtrMemberAccess	heap -> chunks_count		66502	0					
ANR	66955	Identifier	heap		66502	0					
ANR	66956	Identifier	chunks_count		66502	1					
ANR	66957	PrimaryExpression	1		66502	1					
ANR	66958	ExpressionStatement	heap -> peak_chunks_count = 1	2262:2:68624:68651	66502	19	True				
ANR	66959	AssignmentExpression	heap -> peak_chunks_count = 1		66502	0		=			
ANR	66960	PtrMemberAccess	heap -> peak_chunks_count		66502	0					
ANR	66961	Identifier	heap		66502	0					
ANR	66962	Identifier	peak_chunks_count		66502	1					
ANR	66963	PrimaryExpression	1		66502	1					
ANR	66964	ExpressionStatement	heap -> real_size = ZEND_MM_CHUNK_SIZE	2264:2:68689:68725	66502	20	True				
ANR	66965	AssignmentExpression	heap -> real_size = ZEND_MM_CHUNK_SIZE		66502	0		=			
ANR	66966	PtrMemberAccess	heap -> real_size		66502	0					
ANR	66967	Identifier	heap		66502	0					
ANR	66968	Identifier	real_size		66502	1					
ANR	66969	Identifier	ZEND_MM_CHUNK_SIZE		66502	1					
ANR	66970	ExpressionStatement	heap -> real_peak = ZEND_MM_CHUNK_SIZE	2267:2:68753:68789	66502	21	True				
ANR	66971	AssignmentExpression	heap -> real_peak = ZEND_MM_CHUNK_SIZE		66502	0		=			
ANR	66972	PtrMemberAccess	heap -> real_peak		66502	0					
ANR	66973	Identifier	heap		66502	0					
ANR	66974	Identifier	real_peak		66502	1					
ANR	66975	Identifier	ZEND_MM_CHUNK_SIZE		66502	1					
ANR	66976	ExpressionStatement	heap -> size = heap -> peak = 0	2268:2:68793:68820	66502	22	True				
ANR	66977	AssignmentExpression	heap -> size = heap -> peak = 0		66502	0		=			
ANR	66978	PtrMemberAccess	heap -> size		66502	0					
ANR	66979	Identifier	heap		66502	0					
ANR	66980	Identifier	size		66502	1					
ANR	66981	AssignmentExpression	heap -> peak = 0		66502	1		=			
ANR	66982	PtrMemberAccess	heap -> peak		66502	0					
ANR	66983	Identifier	heap		66502	0					
ANR	66984	Identifier	peak		66502	1					
ANR	66985	PrimaryExpression	0		66502	1					
ANR	66986	ReturnType	void		66502	1					
ANR	66987	Identifier	zend_mm_shutdown		66502	2					
ANR	66988	ParameterList	"zend_mm_heap * heap , int full , int silent"		66502	3					
ANR	66989	Parameter	zend_mm_heap * heap	2173:22:66258:66275	66502	0	True				
ANR	66990	ParameterType	zend_mm_heap *		66502	0					
ANR	66991	Identifier	heap		66502	1					
ANR	66992	Parameter	int full	2173:42:66278:66285	66502	1	True				
ANR	66993	ParameterType	int		66502	0					
ANR	66994	Identifier	full		66502	1					
ANR	66995	Parameter	int silent	2173:52:66288:66297	66502	2	True				
ANR	66996	ParameterType	int		66502	0					
ANR	66997	Identifier	silent		66502	1					
ANR	66998	CFGEntryNode	ENTRY		66502		True				
ANR	66999	CFGExitNode	EXIT		66502		True				
ANR	67000	Symbol	* * heap		66502						
ANR	67001	Symbol	p -> next		66502						
ANR	67002	Symbol	p -> heap		66502						
ANR	67003	Symbol	ZEND_MM_PAGES		66502						
ANR	67004	Symbol	heap -> use_custom_heap		66502						
ANR	67005	Symbol	heap -> cached_chunks_count		66502						
ANR	67006	Symbol	p -> free_map		66502						
ANR	67007	Symbol	p -> map		66502						
ANR	67008	Symbol	& p -> heap_slot		66502						
ANR	67009	Symbol	ZEND_DEBUG		66502						
ANR	67010	Symbol	ZEND_MM_CHUNK_SIZE		66502						
ANR	67011	Symbol	p -> free_tail		66502						
ANR	67012	Symbol	list -> next		66502						
ANR	67013	Symbol	NULL		66502						
ANR	67014	Symbol	heap -> main_chunk		66502						
ANR	67015	Symbol	heap -> real_size		66502						
ANR	67016	Symbol	list		66502						
ANR	67017	Symbol	heap -> peak		66502						
ANR	67018	Symbol	heap -> huge_list		66502						
ANR	67019	Symbol	ZEND_MM_CUSTOM_HEAP_DEBUG		66502						
ANR	67020	Symbol	* heap		66502						
ANR	67021	Symbol	full		66502						
ANR	67022	Symbol	p -> prev		66502						
ANR	67023	Symbol	* heap -> main_chunk		66502						
ANR	67024	Symbol	heap -> chunks_count		66502						
ANR	67025	Symbol	heap -> real_peak		66502						
ANR	67026	Symbol	heap -> cached_chunks		66502						
ANR	67027	Symbol	heap -> peak_chunks_count		66502						
ANR	67028	Symbol	heap -> size		66502						
ANR	67029	Symbol	old_heap		66502						
ANR	67030	Symbol	ZEND_MM_FIRST_PAGE		66502						
ANR	67031	Symbol	* * p		66502						
ANR	67032	Symbol	heap		66502						
ANR	67033	Symbol	ZEND_MM_PAGE_SIZE		66502						
ANR	67034	Symbol	heap -> main_chunk -> next		66502						
ANR	67035	Symbol	silent		66502						
ANR	67036	Symbol	heap -> free_slot		66502						
ANR	67037	Symbol	p -> free_pages		66502						
ANR	67038	Symbol	heap -> custom_heap		66502						
ANR	67039	Symbol	* p -> free_map		66502						
ANR	67040	Symbol	p		66502						
ANR	67041	Symbol	heap -> avg_chunks_count		66502						
ANR	67042	Symbol	q		66502						
ANR	67043	Symbol	* list		66502						
ANR	67044	Symbol	q -> size		66502						
ANR	67045	Symbol	ZEND_MM_LRUN		66502						
ANR	67046	Symbol	* p		66502						
ANR	67047	Symbol	* p -> map		66502						
ANR	67048	Symbol	* q		66502						
ANR	67049	Symbol	heap -> custom_heap . std		66502						
ANR	67050	Symbol	q -> ptr		66502						
ANR	67051	Function	_zend_mm_alloc	2277:15:68902:69100							
ANR	67052	FunctionDef	"_zend_mm_alloc (zend_mm_heap * heap , size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC)"		67051	0					
ANR	67053	CompoundStatement		2278:0:69005:69100	67051	0					
ANR	67054	Statement	return	2279:1:69008:69013	67051	0	True				
ANR	67055	Statement	zend_mm_alloc_heap	2279:8:69015:69032	67051	1	True				
ANR	67056	Statement	(	2279:26:69033:69033	67051	2	True				
ANR	67057	Statement	heap	2279:27:69034:69037	67051	3	True				
ANR	67058	Statement	","	2279:31:69038:69038	67051	4	True				
ANR	67059	Statement	size	2279:33:69040:69043	67051	5	True				
ANR	67060	Statement	ZEND_FILE_LINE_RELAY_CC	2279:38:69045:69067	67051	6	True				
ANR	67061	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	2279:62:69069:69096	67051	7	True				
ANR	67062	Statement	)	2279:90:69097:69097	67051	8	True				
ANR	67063	ExpressionStatement		2279:91:69098:69098	67051	9	True				
ANR	67064	ReturnType	ZEND_FASTCALL		67051	1					
ANR	67065	Identifier	_zend_mm_alloc		67051	2					
ANR	67066	ParameterList	"zend_mm_heap * heap , size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC"		67051	3					
ANR	67067	Parameter	zend_mm_heap * heap	2277:44:68931:68948	67051	0	True				
ANR	67068	ParameterType	zend_mm_heap *		67051	0					
ANR	67069	Identifier	heap		67051	1					
ANR	67070	Parameter	size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC	2277:64:68951:69002	67051	1	True				
ANR	67071	ParameterType	size_t size ZEND_FILE_LINE_DC		67051	0					
ANR	67072	Identifier	ZEND_FILE_LINE_ORIG_DC		67051	1					
ANR	67073	CFGEntryNode	ENTRY		67051		True				
ANR	67074	CFGExitNode	EXIT		67051		True				
ANR	67075	Symbol	ZEND_FILE_LINE_ORIG_DC		67051						
ANR	67076	Symbol	heap		67051						
ANR	67077	Function	_zend_mm_realloc	2287:6:69312:69536							
ANR	67078	FunctionDef	"_zend_mm_realloc (zend_mm_heap * heap , void * ptr , size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC)"		67077	0					
ANR	67079	CompoundStatement		2288:0:69428:69536	67077	0					
ANR	67080	Statement	return	2289:1:69431:69436	67077	0	True				
ANR	67081	Statement	zend_mm_realloc_heap	2289:8:69438:69457	67077	1	True				
ANR	67082	Statement	(	2289:28:69458:69458	67077	2	True				
ANR	67083	Statement	heap	2289:29:69459:69462	67077	3	True				
ANR	67084	Statement	","	2289:33:69463:69463	67077	4	True				
ANR	67085	Statement	ptr	2289:35:69465:69467	67077	5	True				
ANR	67086	Statement	","	2289:38:69468:69468	67077	6	True				
ANR	67087	Statement	size	2289:40:69470:69473	67077	7	True				
ANR	67088	Statement	","	2289:44:69474:69474	67077	8	True				
ANR	67089	Statement	size	2289:46:69476:69479	67077	9	True				
ANR	67090	Statement	ZEND_FILE_LINE_RELAY_CC	2289:51:69481:69503	67077	10	True				
ANR	67091	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	2289:75:69505:69532	67077	11	True				
ANR	67092	Statement	)	2289:103:69533:69533	67077	12	True				
ANR	67093	ExpressionStatement		2289:104:69534:69534	67077	13	True				
ANR	67094	ReturnType	ZEND_FASTCALL		67077	1					
ANR	67095	Identifier	_zend_mm_realloc		67077	2					
ANR	67096	ParameterList	"zend_mm_heap * heap , void * ptr , size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC"		67077	3					
ANR	67097	Parameter	zend_mm_heap * heap	2287:37:69343:69360	67077	0	True				
ANR	67098	ParameterType	zend_mm_heap *		67077	0					
ANR	67099	Identifier	heap		67077	1					
ANR	67100	Parameter	void * ptr	2287:57:69363:69371	67077	1	True				
ANR	67101	ParameterType	void *		67077	0					
ANR	67102	Identifier	ptr		67077	1					
ANR	67103	Parameter	size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC	2287:68:69374:69425	67077	2	True				
ANR	67104	ParameterType	size_t size ZEND_FILE_LINE_DC		67077	0					
ANR	67105	Identifier	ZEND_FILE_LINE_ORIG_DC		67077	1					
ANR	67106	CFGEntryNode	ENTRY		67077		True				
ANR	67107	CFGExitNode	EXIT		67077		True				
ANR	67108	Symbol	ZEND_FILE_LINE_ORIG_DC		67077						
ANR	67109	Symbol	heap		67077						
ANR	67110	Symbol	ptr		67077						
ANR	67111	Function	_zend_mm_realloc2	2292:6:69545:69793							
ANR	67112	FunctionDef	"_zend_mm_realloc2 (zend_mm_heap * heap , void * ptr , size_t size , size_t copy_size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC)"		67111	0					
ANR	67113	CompoundStatement		2293:0:69680:69793	67111	0					
ANR	67114	Statement	return	2294:1:69683:69688	67111	0	True				
ANR	67115	Statement	zend_mm_realloc_heap	2294:8:69690:69709	67111	1	True				
ANR	67116	Statement	(	2294:28:69710:69710	67111	2	True				
ANR	67117	Statement	heap	2294:29:69711:69714	67111	3	True				
ANR	67118	Statement	","	2294:33:69715:69715	67111	4	True				
ANR	67119	Statement	ptr	2294:35:69717:69719	67111	5	True				
ANR	67120	Statement	","	2294:38:69720:69720	67111	6	True				
ANR	67121	Statement	size	2294:40:69722:69725	67111	7	True				
ANR	67122	Statement	","	2294:44:69726:69726	67111	8	True				
ANR	67123	Statement	copy_size	2294:46:69728:69736	67111	9	True				
ANR	67124	Statement	ZEND_FILE_LINE_RELAY_CC	2294:56:69738:69760	67111	10	True				
ANR	67125	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	2294:80:69762:69789	67111	11	True				
ANR	67126	Statement	)	2294:108:69790:69790	67111	12	True				
ANR	67127	ExpressionStatement		2294:109:69791:69791	67111	13	True				
ANR	67128	ReturnType	ZEND_FASTCALL		67111	1					
ANR	67129	Identifier	_zend_mm_realloc2		67111	2					
ANR	67130	ParameterList	"zend_mm_heap * heap , void * ptr , size_t size , size_t copy_size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC"		67111	3					
ANR	67131	Parameter	zend_mm_heap * heap	2292:38:69577:69594	67111	0	True				
ANR	67132	ParameterType	zend_mm_heap *		67111	0					
ANR	67133	Identifier	heap		67111	1					
ANR	67134	Parameter	void * ptr	2292:58:69597:69605	67111	1	True				
ANR	67135	ParameterType	void *		67111	0					
ANR	67136	Identifier	ptr		67111	1					
ANR	67137	Parameter	size_t size	2292:69:69608:69618	67111	2	True				
ANR	67138	ParameterType	size_t		67111	0					
ANR	67139	Identifier	size		67111	1					
ANR	67140	Parameter	size_t copy_size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC	2292:82:69621:69677	67111	3	True				
ANR	67141	ParameterType	size_t copy_size ZEND_FILE_LINE_DC		67111	0					
ANR	67142	Identifier	ZEND_FILE_LINE_ORIG_DC		67111	1					
ANR	67143	CFGEntryNode	ENTRY		67111		True				
ANR	67144	CFGExitNode	EXIT		67111		True				
ANR	67145	Symbol	size		67111						
ANR	67146	Symbol	ZEND_FILE_LINE_ORIG_DC		67111						
ANR	67147	Symbol	heap		67111						
ANR	67148	Symbol	ptr		67111						
ANR	67149	ClassDef	_zend_alloc_globals	2306:8:70093:70166							
ANR	67150	DeclStmt									
ANR	67151	Decl							zend_mm_heap	zend_mm_heap *	mm_heap
ANR	67152	DeclStmt									
ANR	67153	Decl							_zend_alloc_globals	_zend_alloc_globals	zend_alloc_globals
ANR	67154	DeclStmt									
ANR	67155	Decl							int	int	alloc_globals_id
ANR	67156	DeclStmt									
ANR	67157	Decl							zend_alloc_globals	zend_alloc_globals	alloc_globals
ANR	67158	Function	is_zend_mm	2318:0:70366:70480							
ANR	67159	FunctionDef	is_zend_mm ()		67158	0					
ANR	67160	CompoundStatement		2319:0:70396:70480	67158	0					
ANR	67161	ReturnStatement	return ! AG ( mm_heap ) -> use_custom_heap ;	2321:1:70418:70454	67158	0	True				
ANR	67162	UnaryOperationExpression	! AG ( mm_heap ) -> use_custom_heap		67158	0					
ANR	67163	UnaryOperator	!		67158	0					
ANR	67164	PtrMemberAccess	AG ( mm_heap ) -> use_custom_heap		67158	1					
ANR	67165	CallExpression	AG ( mm_heap )		67158	0					
ANR	67166	Callee	AG		67158	0					
ANR	67167	Identifier	AG		67158	0					
ANR	67168	ArgumentList	mm_heap		67158	1					
ANR	67169	Argument	mm_heap		67158	0					
ANR	67170	Identifier	mm_heap		67158	0					
ANR	67171	Identifier	use_custom_heap		67158	1					
ANR	67172	ReturnType	ZEND_API int		67158	1					
ANR	67173	Identifier	is_zend_mm		67158	2					
ANR	67174	ParameterList			67158	3					
ANR	67175	CFGEntryNode	ENTRY		67158		True				
ANR	67176	CFGExitNode	EXIT		67158		True				
ANR	67177	Symbol	AG ( mm_heap ) -> use_custom_heap		67158						
ANR	67178	Symbol	AG		67158						
ANR	67179	Symbol	mm_heap		67158						
ANR	67180	Symbol	* AG		67158						
ANR	67181	Function	_size	2356:16:71513:71705							
ANR	67182	FunctionDef	_size ()		67181	0					
ANR	67183	CompoundStatement		2356:55:71552:71705	67181	0					
ANR	67184	ExpressionStatement	ZEND_MM_CUSTOM_ALLOCATOR ( _size )	2357:2:71558:71589	67181	0	True				
ANR	67185	CallExpression	ZEND_MM_CUSTOM_ALLOCATOR ( _size )		67181	0					
ANR	67186	Callee	ZEND_MM_CUSTOM_ALLOCATOR		67181	0					
ANR	67187	Identifier	ZEND_MM_CUSTOM_ALLOCATOR		67181	0					
ANR	67188	ArgumentList	_size		67181	1					
ANR	67189	Argument	_size		67181	0					
ANR	67190	Identifier	_size		67181	0					
ANR	67191	Statement	return	2358:2:71595:71600	67181	1	True				
ANR	67192	Statement	zend_mm_alloc_small	2358:9:71602:71620	67181	2	True				
ANR	67193	Statement	(	2358:28:71621:71621	67181	3	True				
ANR	67194	Statement	AG	2358:29:71622:71623	67181	4	True				
ANR	67195	Statement	(	2358:31:71624:71624	67181	5	True				
ANR	67196	Statement	mm_heap	2358:32:71625:71631	67181	6	True				
ANR	67197	Statement	)	2358:39:71632:71632	67181	7	True				
ANR	67198	Statement	","	2358:40:71633:71633	67181	8	True				
ANR	67199	Statement	_size	2358:42:71635:71639	67181	9	True				
ANR	67200	Statement	","	2358:47:71640:71640	67181	10	True				
ANR	67201	Statement	_num	2358:49:71642:71645	67181	11	True				
ANR	67202	Statement	ZEND_FILE_LINE_RELAY_CC	2358:54:71647:71669	67181	12	True				
ANR	67203	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	2358:78:71671:71698	67181	13	True				
ANR	67204	Statement	)	2358:106:71699:71699	67181	14	True				
ANR	67205	ExpressionStatement		2358:107:71700:71700	67181	15	True				
ANR	67206	ReturnType	ZEND_FASTCALL _emalloc_		67181	1					
ANR	67207	Identifier	_size		67181	2					
ANR	67208	ParameterList			67181	3					
ANR	67209	CFGEntryNode	ENTRY		67181		True				
ANR	67210	CFGExitNode	EXIT		67181		True				
ANR	67211	Symbol	_size		67181						
ANR	67212	Function	_emalloc_large	2363:15:71769:71989							
ANR	67213	FunctionDef	_emalloc_large (size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC)		67212	0					
ANR	67214	CompoundStatement		2364:0:71852:71989	67212	0					
ANR	67215	ExpressionStatement	ZEND_MM_CUSTOM_ALLOCATOR ( size )	2366:1:71856:71886	67212	0	True				
ANR	67216	CallExpression	ZEND_MM_CUSTOM_ALLOCATOR ( size )		67212	0					
ANR	67217	Callee	ZEND_MM_CUSTOM_ALLOCATOR		67212	0					
ANR	67218	Identifier	ZEND_MM_CUSTOM_ALLOCATOR		67212	0					
ANR	67219	ArgumentList	size		67212	1					
ANR	67220	Argument	size		67212	0					
ANR	67221	Identifier	size		67212	0					
ANR	67222	Statement	return	2367:1:71889:71894	67212	1	True				
ANR	67223	Statement	zend_mm_alloc_large	2367:8:71896:71914	67212	2	True				
ANR	67224	Statement	(	2367:27:71915:71915	67212	3	True				
ANR	67225	Statement	AG	2367:28:71916:71917	67212	4	True				
ANR	67226	Statement	(	2367:30:71918:71918	67212	5	True				
ANR	67227	Statement	mm_heap	2367:31:71919:71925	67212	6	True				
ANR	67228	Statement	)	2367:38:71926:71926	67212	7	True				
ANR	67229	Statement	","	2367:39:71927:71927	67212	8	True				
ANR	67230	Statement	size	2367:41:71929:71932	67212	9	True				
ANR	67231	Statement	ZEND_FILE_LINE_RELAY_CC	2367:46:71934:71956	67212	10	True				
ANR	67232	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	2367:70:71958:71985	67212	11	True				
ANR	67233	Statement	)	2367:98:71986:71986	67212	12	True				
ANR	67234	ExpressionStatement		2367:99:71987:71987	67212	13	True				
ANR	67235	ReturnType	ZEND_FASTCALL		67212	1					
ANR	67236	Identifier	_emalloc_large		67212	2					
ANR	67237	ParameterList	size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC		67212	3					
ANR	67238	Parameter	size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC	2363:44:71798:71849	67212	0	True				
ANR	67239	ParameterType	size_t size ZEND_FILE_LINE_DC		67212	0					
ANR	67240	Identifier	ZEND_FILE_LINE_ORIG_DC		67212	1					
ANR	67241	CFGEntryNode	ENTRY		67212		True				
ANR	67242	CFGExitNode	EXIT		67212		True				
ANR	67243	Symbol	size		67212						
ANR	67244	Symbol	ZEND_FILE_LINE_ORIG_DC		67212						
ANR	67245	Function	_emalloc_huge	2370:15:72007:72131							
ANR	67246	FunctionDef	_emalloc_huge (size_t size)		67245	0					
ANR	67247	CompoundStatement		2371:0:72048:72131	67245	0					
ANR	67248	ExpressionStatement	ZEND_MM_CUSTOM_ALLOCATOR ( size )	2373:1:72052:72082	67245	0	True				
ANR	67249	CallExpression	ZEND_MM_CUSTOM_ALLOCATOR ( size )		67245	0					
ANR	67250	Callee	ZEND_MM_CUSTOM_ALLOCATOR		67245	0					
ANR	67251	Identifier	ZEND_MM_CUSTOM_ALLOCATOR		67245	0					
ANR	67252	ArgumentList	size		67245	1					
ANR	67253	Argument	size		67245	0					
ANR	67254	Identifier	size		67245	0					
ANR	67255	ReturnStatement	"return zend_mm_alloc_huge ( AG ( mm_heap ) , size ) ;"	2374:1:72085:72129	67245	1	True				
ANR	67256	CallExpression	"zend_mm_alloc_huge ( AG ( mm_heap ) , size )"		67245	0					
ANR	67257	Callee	zend_mm_alloc_huge		67245	0					
ANR	67258	Identifier	zend_mm_alloc_huge		67245	0					
ANR	67259	ArgumentList	AG ( mm_heap )		67245	1					
ANR	67260	Argument	AG ( mm_heap )		67245	0					
ANR	67261	CallExpression	AG ( mm_heap )		67245	0					
ANR	67262	Callee	AG		67245	0					
ANR	67263	Identifier	AG		67245	0					
ANR	67264	ArgumentList	mm_heap		67245	1					
ANR	67265	Argument	mm_heap		67245	0					
ANR	67266	Identifier	mm_heap		67245	0					
ANR	67267	Argument	size		67245	1					
ANR	67268	Identifier	size		67245	0					
ANR	67269	ReturnType	ZEND_FASTCALL		67245	1					
ANR	67270	Identifier	_emalloc_huge		67245	2					
ANR	67271	ParameterList	size_t size		67245	3					
ANR	67272	Parameter	size_t size	2370:43:72035:72045	67245	0	True				
ANR	67273	ParameterType	size_t		67245	0					
ANR	67274	Identifier	size		67245	1					
ANR	67275	CFGEntryNode	ENTRY		67245		True				
ANR	67276	CFGExitNode	EXIT		67245		True				
ANR	67277	Symbol	zend_mm_alloc_huge		67245						
ANR	67278	Symbol	size		67245						
ANR	67279	Symbol	AG		67245						
ANR	67280	Symbol	mm_heap		67245						
ANR	67281	Function	_size	2379:1:72214:72794							
ANR	67282	FunctionDef	_size (void * ptr)		67281	0					
ANR	67283	CompoundStatement		2379:57:72270:72794	67281	0					
ANR	67284	ExpressionStatement	ZEND_MM_CUSTOM_DEALLOCATOR ( ptr )	2380:2:72276:72307	67281	0	True				
ANR	67285	CallExpression	ZEND_MM_CUSTOM_DEALLOCATOR ( ptr )		67281	0					
ANR	67286	Callee	ZEND_MM_CUSTOM_DEALLOCATOR		67281	0					
ANR	67287	Identifier	ZEND_MM_CUSTOM_DEALLOCATOR		67281	0					
ANR	67288	ArgumentList	ptr		67281	1					
ANR	67289	Argument	ptr		67281	0					
ANR	67290	Identifier	ptr		67281	0					
ANR	67291	CompoundStatement		6:3:215:261	67281	1					
ANR	67292	IdentifierDeclStatement	"size_t page_offset = ZEND_MM_ALIGNED_OFFSET ( ptr , ZEND_MM_CHUNK_SIZE ) ;"	2382:3:72320:72388	67281	0	True				
ANR	67293	IdentifierDecl	"page_offset = ZEND_MM_ALIGNED_OFFSET ( ptr , ZEND_MM_CHUNK_SIZE )"		67281	0					
ANR	67294	IdentifierDeclType	size_t		67281	0					
ANR	67295	Identifier	page_offset		67281	1					
ANR	67296	AssignmentExpression	"page_offset = ZEND_MM_ALIGNED_OFFSET ( ptr , ZEND_MM_CHUNK_SIZE )"		67281	2		=			
ANR	67297	Identifier	page_offset		67281	0					
ANR	67298	CallExpression	"ZEND_MM_ALIGNED_OFFSET ( ptr , ZEND_MM_CHUNK_SIZE )"		67281	1					
ANR	67299	Callee	ZEND_MM_ALIGNED_OFFSET		67281	0					
ANR	67300	Identifier	ZEND_MM_ALIGNED_OFFSET		67281	0					
ANR	67301	ArgumentList	ptr		67281	1					
ANR	67302	Argument	ptr		67281	0					
ANR	67303	Identifier	ptr		67281	0					
ANR	67304	Argument	ZEND_MM_CHUNK_SIZE		67281	1					
ANR	67305	Identifier	ZEND_MM_CHUNK_SIZE		67281	0					
ANR	67306	IdentifierDeclStatement	"zend_mm_chunk * chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE ) ;"	2383:3:72395:72479	67281	1	True				
ANR	67307	IdentifierDecl	"* chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"		67281	0					
ANR	67308	IdentifierDeclType	zend_mm_chunk *		67281	0					
ANR	67309	Identifier	chunk		67281	1					
ANR	67310	AssignmentExpression	"* chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"		67281	2		=			
ANR	67311	Identifier	chunk		67281	0					
ANR	67312	CastExpression	"( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"		67281	1					
ANR	67313	CastTarget	zend_mm_chunk *		67281	0					
ANR	67314	CallExpression	"ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"		67281	1					
ANR	67315	Callee	ZEND_MM_ALIGNED_BASE		67281	0					
ANR	67316	Identifier	ZEND_MM_ALIGNED_BASE		67281	0					
ANR	67317	ArgumentList	ptr		67281	1					
ANR	67318	Argument	ptr		67281	0					
ANR	67319	Identifier	ptr		67281	0					
ANR	67320	Argument	ZEND_MM_CHUNK_SIZE		67281	1					
ANR	67321	Identifier	ZEND_MM_CHUNK_SIZE		67281	0					
ANR	67322	IdentifierDeclStatement	int page_num = page_offset / ZEND_MM_PAGE_SIZE ;	2384:3:72486:72532	67281	2	True				
ANR	67323	IdentifierDecl	page_num = page_offset / ZEND_MM_PAGE_SIZE		67281	0					
ANR	67324	IdentifierDeclType	int		67281	0					
ANR	67325	Identifier	page_num		67281	1					
ANR	67326	AssignmentExpression	page_num = page_offset / ZEND_MM_PAGE_SIZE		67281	2		=			
ANR	67327	Identifier	page_num		67281	0					
ANR	67328	MultiplicativeExpression	page_offset / ZEND_MM_PAGE_SIZE		67281	1		/			
ANR	67329	Identifier	page_offset		67281	0					
ANR	67330	Identifier	ZEND_MM_PAGE_SIZE		67281	1					
ANR	67331	ExpressionStatement	"ZEND_MM_CHECK ( chunk -> heap == AG ( mm_heap ) , ""zend_mm_heap corrupted"" )"	2385:3:72539:72606	67281	3	True				
ANR	67332	CallExpression	"ZEND_MM_CHECK ( chunk -> heap == AG ( mm_heap ) , ""zend_mm_heap corrupted"" )"		67281	0					
ANR	67333	Callee	ZEND_MM_CHECK		67281	0					
ANR	67334	Identifier	ZEND_MM_CHECK		67281	0					
ANR	67335	ArgumentList	chunk -> heap == AG ( mm_heap )		67281	1					
ANR	67336	Argument	chunk -> heap == AG ( mm_heap )		67281	0					
ANR	67337	EqualityExpression	chunk -> heap == AG ( mm_heap )		67281	0		==			
ANR	67338	PtrMemberAccess	chunk -> heap		67281	0					
ANR	67339	Identifier	chunk		67281	0					
ANR	67340	Identifier	heap		67281	1					
ANR	67341	CallExpression	AG ( mm_heap )		67281	1					
ANR	67342	Callee	AG		67281	0					
ANR	67343	Identifier	AG		67281	0					
ANR	67344	ArgumentList	mm_heap		67281	1					
ANR	67345	Argument	mm_heap		67281	0					
ANR	67346	Identifier	mm_heap		67281	0					
ANR	67347	Argument	"""zend_mm_heap corrupted"""		67281	1					
ANR	67348	PrimaryExpression	"""zend_mm_heap corrupted"""		67281	0					
ANR	67349	ExpressionStatement	ZEND_ASSERT ( chunk -> map [ page_num ] & ZEND_MM_IS_SRUN )	2386:3:72613:72664	67281	4	True				
ANR	67350	CallExpression	ZEND_ASSERT ( chunk -> map [ page_num ] & ZEND_MM_IS_SRUN )		67281	0					
ANR	67351	Callee	ZEND_ASSERT		67281	0					
ANR	67352	Identifier	ZEND_ASSERT		67281	0					
ANR	67353	ArgumentList	chunk -> map [ page_num ] & ZEND_MM_IS_SRUN		67281	1					
ANR	67354	Argument	chunk -> map [ page_num ] & ZEND_MM_IS_SRUN		67281	0					
ANR	67355	BitAndExpression	chunk -> map [ page_num ] & ZEND_MM_IS_SRUN		67281	0		&			
ANR	67356	ArrayIndexing	chunk -> map [ page_num ]		67281	0					
ANR	67357	PtrMemberAccess	chunk -> map		67281	0					
ANR	67358	Identifier	chunk		67281	0					
ANR	67359	Identifier	map		67281	1					
ANR	67360	Identifier	page_num		67281	1					
ANR	67361	Identifier	ZEND_MM_IS_SRUN		67281	1					
ANR	67362	ExpressionStatement	ZEND_ASSERT ( ZEND_MM_SRUN_BIN_NUM ( chunk -> map [ page_num ] ) == _num )	2387:3:72671:72734	67281	5	True				
ANR	67363	CallExpression	ZEND_ASSERT ( ZEND_MM_SRUN_BIN_NUM ( chunk -> map [ page_num ] ) == _num )		67281	0					
ANR	67364	Callee	ZEND_ASSERT		67281	0					
ANR	67365	Identifier	ZEND_ASSERT		67281	0					
ANR	67366	ArgumentList	ZEND_MM_SRUN_BIN_NUM ( chunk -> map [ page_num ] ) == _num		67281	1					
ANR	67367	Argument	ZEND_MM_SRUN_BIN_NUM ( chunk -> map [ page_num ] ) == _num		67281	0					
ANR	67368	EqualityExpression	ZEND_MM_SRUN_BIN_NUM ( chunk -> map [ page_num ] ) == _num		67281	0		==			
ANR	67369	CallExpression	ZEND_MM_SRUN_BIN_NUM ( chunk -> map [ page_num ] )		67281	0					
ANR	67370	Callee	ZEND_MM_SRUN_BIN_NUM		67281	0					
ANR	67371	Identifier	ZEND_MM_SRUN_BIN_NUM		67281	0					
ANR	67372	ArgumentList	chunk -> map [ page_num ]		67281	1					
ANR	67373	Argument	chunk -> map [ page_num ]		67281	0					
ANR	67374	ArrayIndexing	chunk -> map [ page_num ]		67281	0					
ANR	67375	PtrMemberAccess	chunk -> map		67281	0					
ANR	67376	Identifier	chunk		67281	0					
ANR	67377	Identifier	map		67281	1					
ANR	67378	Identifier	page_num		67281	1					
ANR	67379	Identifier	_num		67281	1					
ANR	67380	ExpressionStatement	"zend_mm_free_small ( AG ( mm_heap ) , ptr , _num )"	2388:3:72741:72783	67281	6	True				
ANR	67381	CallExpression	"zend_mm_free_small ( AG ( mm_heap ) , ptr , _num )"		67281	0					
ANR	67382	Callee	zend_mm_free_small		67281	0					
ANR	67383	Identifier	zend_mm_free_small		67281	0					
ANR	67384	ArgumentList	AG ( mm_heap )		67281	1					
ANR	67385	Argument	AG ( mm_heap )		67281	0					
ANR	67386	CallExpression	AG ( mm_heap )		67281	0					
ANR	67387	Callee	AG		67281	0					
ANR	67388	Identifier	AG		67281	0					
ANR	67389	ArgumentList	mm_heap		67281	1					
ANR	67390	Argument	mm_heap		67281	0					
ANR	67391	Identifier	mm_heap		67281	0					
ANR	67392	Argument	ptr		67281	1					
ANR	67393	Identifier	ptr		67281	0					
ANR	67394	Argument	_num		67281	2					
ANR	67395	Identifier	_num		67281	0					
ANR	67396	ReturnType	ZEND_API void ZEND_FASTCALL _efree_		67281	1					
ANR	67397	Identifier	_size		67281	2					
ANR	67398	ParameterList	void * ptr		67281	3					
ANR	67399	Parameter	void * ptr	2379:46:72259:72267	67281	0	True				
ANR	67400	ParameterType	void *		67281	0					
ANR	67401	Identifier	ptr		67281	1					
ANR	67402	CFGEntryNode	ENTRY		67281		True				
ANR	67403	CFGExitNode	EXIT		67281		True				
ANR	67404	Symbol	* * chunk		67281						
ANR	67405	Symbol	AG		67281						
ANR	67406	Symbol	ZEND_MM_IS_SRUN		67281						
ANR	67407	Symbol	chunk		67281						
ANR	67408	Symbol	page_num		67281						
ANR	67409	Symbol	page_offset		67281						
ANR	67410	Symbol	chunk -> heap		67281						
ANR	67411	Symbol	ZEND_MM_SRUN_BIN_NUM		67281						
ANR	67412	Symbol	_num		67281						
ANR	67413	Symbol	ptr		67281						
ANR	67414	Symbol	ZEND_MM_ALIGNED_OFFSET		67281						
ANR	67415	Symbol	* chunk		67281						
ANR	67416	Symbol	* page_num		67281						
ANR	67417	Symbol	* chunk -> map		67281						
ANR	67418	Symbol	mm_heap		67281						
ANR	67419	Symbol	ZEND_MM_CHUNK_SIZE		67281						
ANR	67420	Symbol	ZEND_MM_ALIGNED_BASE		67281						
ANR	67421	Symbol	chunk -> map		67281						
ANR	67422	Symbol	ZEND_MM_PAGE_SIZE		67281						
ANR	67423	Function	_size	2393:1:72867:73191							
ANR	67424	FunctionDef	_size (void * ptr)		67423	0					
ANR	67425	CompoundStatement		2393:57:72923:73191	67423	0					
ANR	67426	ExpressionStatement	ZEND_MM_CUSTOM_DEALLOCATOR ( ptr )	2394:2:72929:72960	67423	0	True				
ANR	67427	CallExpression	ZEND_MM_CUSTOM_DEALLOCATOR ( ptr )		67423	0					
ANR	67428	Callee	ZEND_MM_CUSTOM_DEALLOCATOR		67423	0					
ANR	67429	Identifier	ZEND_MM_CUSTOM_DEALLOCATOR		67423	0					
ANR	67430	ArgumentList	ptr		67423	1					
ANR	67431	Argument	ptr		67423	0					
ANR	67432	Identifier	ptr		67423	0					
ANR	67433	CompoundStatement		4:3:49:133	67423	1					
ANR	67434	IdentifierDeclStatement	"zend_mm_chunk * chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE ) ;"	2396:3:72973:73057	67423	0	True				
ANR	67435	IdentifierDecl	"* chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"		67423	0					
ANR	67436	IdentifierDeclType	zend_mm_chunk *		67423	0					
ANR	67437	Identifier	chunk		67423	1					
ANR	67438	AssignmentExpression	"* chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"		67423	2		=			
ANR	67439	Identifier	chunk		67423	0					
ANR	67440	CastExpression	"( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"		67423	1					
ANR	67441	CastTarget	zend_mm_chunk *		67423	0					
ANR	67442	CallExpression	"ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"		67423	1					
ANR	67443	Callee	ZEND_MM_ALIGNED_BASE		67423	0					
ANR	67444	Identifier	ZEND_MM_ALIGNED_BASE		67423	0					
ANR	67445	ArgumentList	ptr		67423	1					
ANR	67446	Argument	ptr		67423	0					
ANR	67447	Identifier	ptr		67423	0					
ANR	67448	Argument	ZEND_MM_CHUNK_SIZE		67423	1					
ANR	67449	Identifier	ZEND_MM_CHUNK_SIZE		67423	0					
ANR	67450	ExpressionStatement	"ZEND_MM_CHECK ( chunk -> heap == AG ( mm_heap ) , ""zend_mm_heap corrupted"" )"	2397:3:73064:73131	67423	1	True				
ANR	67451	CallExpression	"ZEND_MM_CHECK ( chunk -> heap == AG ( mm_heap ) , ""zend_mm_heap corrupted"" )"		67423	0					
ANR	67452	Callee	ZEND_MM_CHECK		67423	0					
ANR	67453	Identifier	ZEND_MM_CHECK		67423	0					
ANR	67454	ArgumentList	chunk -> heap == AG ( mm_heap )		67423	1					
ANR	67455	Argument	chunk -> heap == AG ( mm_heap )		67423	0					
ANR	67456	EqualityExpression	chunk -> heap == AG ( mm_heap )		67423	0		==			
ANR	67457	PtrMemberAccess	chunk -> heap		67423	0					
ANR	67458	Identifier	chunk		67423	0					
ANR	67459	Identifier	heap		67423	1					
ANR	67460	CallExpression	AG ( mm_heap )		67423	1					
ANR	67461	Callee	AG		67423	0					
ANR	67462	Identifier	AG		67423	0					
ANR	67463	ArgumentList	mm_heap		67423	1					
ANR	67464	Argument	mm_heap		67423	0					
ANR	67465	Identifier	mm_heap		67423	0					
ANR	67466	Argument	"""zend_mm_heap corrupted"""		67423	1					
ANR	67467	PrimaryExpression	"""zend_mm_heap corrupted"""		67423	0					
ANR	67468	ExpressionStatement	"zend_mm_free_small ( AG ( mm_heap ) , ptr , _num )"	2398:3:73138:73180	67423	2	True				
ANR	67469	CallExpression	"zend_mm_free_small ( AG ( mm_heap ) , ptr , _num )"		67423	0					
ANR	67470	Callee	zend_mm_free_small		67423	0					
ANR	67471	Identifier	zend_mm_free_small		67423	0					
ANR	67472	ArgumentList	AG ( mm_heap )		67423	1					
ANR	67473	Argument	AG ( mm_heap )		67423	0					
ANR	67474	CallExpression	AG ( mm_heap )		67423	0					
ANR	67475	Callee	AG		67423	0					
ANR	67476	Identifier	AG		67423	0					
ANR	67477	ArgumentList	mm_heap		67423	1					
ANR	67478	Argument	mm_heap		67423	0					
ANR	67479	Identifier	mm_heap		67423	0					
ANR	67480	Argument	ptr		67423	1					
ANR	67481	Identifier	ptr		67423	0					
ANR	67482	Argument	_num		67423	2					
ANR	67483	Identifier	_num		67423	0					
ANR	67484	ReturnType	ZEND_API void ZEND_FASTCALL _efree_		67423	1					
ANR	67485	Identifier	_size		67423	2					
ANR	67486	ParameterList	void * ptr		67423	3					
ANR	67487	Parameter	void * ptr	2393:46:72912:72920	67423	0	True				
ANR	67488	ParameterType	void *		67423	0					
ANR	67489	Identifier	ptr		67423	1					
ANR	67490	CFGEntryNode	ENTRY		67423		True				
ANR	67491	CFGExitNode	EXIT		67423		True				
ANR	67492	Symbol	* chunk		67423						
ANR	67493	Symbol	AG		67423						
ANR	67494	Symbol	chunk		67423						
ANR	67495	Symbol	mm_heap		67423						
ANR	67496	Symbol	ZEND_MM_CHUNK_SIZE		67423						
ANR	67497	Symbol	chunk -> heap		67423						
ANR	67498	Symbol	_num		67423						
ANR	67499	Symbol	ZEND_MM_ALIGNED_BASE		67423						
ANR	67500	Symbol	ptr		67423						
ANR	67501	Function	_efree_large	2405:0:73242:73977							
ANR	67502	FunctionDef	"_efree_large (void * ptr , size_t size)"		67501	0					
ANR	67503	CompoundStatement		2406:0:73307:73977	67501	0					
ANR	67504	ExpressionStatement	ZEND_MM_CUSTOM_DEALLOCATOR ( ptr )	2408:1:73311:73342	67501	0	True				
ANR	67505	CallExpression	ZEND_MM_CUSTOM_DEALLOCATOR ( ptr )		67501	0					
ANR	67506	Callee	ZEND_MM_CUSTOM_DEALLOCATOR		67501	0					
ANR	67507	Identifier	ZEND_MM_CUSTOM_DEALLOCATOR		67501	0					
ANR	67508	ArgumentList	ptr		67501	1					
ANR	67509	Argument	ptr		67501	0					
ANR	67510	Identifier	ptr		67501	0					
ANR	67511	CompoundStatement		8:2:251:337	67501	1					
ANR	67512	IdentifierDeclStatement	"size_t page_offset = ZEND_MM_ALIGNED_OFFSET ( ptr , ZEND_MM_CHUNK_SIZE ) ;"	2410:2:73349:73417	67501	0	True				
ANR	67513	IdentifierDecl	"page_offset = ZEND_MM_ALIGNED_OFFSET ( ptr , ZEND_MM_CHUNK_SIZE )"		67501	0					
ANR	67514	IdentifierDeclType	size_t		67501	0					
ANR	67515	Identifier	page_offset		67501	1					
ANR	67516	AssignmentExpression	"page_offset = ZEND_MM_ALIGNED_OFFSET ( ptr , ZEND_MM_CHUNK_SIZE )"		67501	2		=			
ANR	67517	Identifier	page_offset		67501	0					
ANR	67518	CallExpression	"ZEND_MM_ALIGNED_OFFSET ( ptr , ZEND_MM_CHUNK_SIZE )"		67501	1					
ANR	67519	Callee	ZEND_MM_ALIGNED_OFFSET		67501	0					
ANR	67520	Identifier	ZEND_MM_ALIGNED_OFFSET		67501	0					
ANR	67521	ArgumentList	ptr		67501	1					
ANR	67522	Argument	ptr		67501	0					
ANR	67523	Identifier	ptr		67501	0					
ANR	67524	Argument	ZEND_MM_CHUNK_SIZE		67501	1					
ANR	67525	Identifier	ZEND_MM_CHUNK_SIZE		67501	0					
ANR	67526	IdentifierDeclStatement	"zend_mm_chunk * chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE ) ;"	2411:2:73421:73505	67501	1	True				
ANR	67527	IdentifierDecl	"* chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"		67501	0					
ANR	67528	IdentifierDeclType	zend_mm_chunk *		67501	0					
ANR	67529	Identifier	chunk		67501	1					
ANR	67530	AssignmentExpression	"* chunk = ( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"		67501	2		=			
ANR	67531	Identifier	chunk		67501	0					
ANR	67532	CastExpression	"( zend_mm_chunk * ) ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"		67501	1					
ANR	67533	CastTarget	zend_mm_chunk *		67501	0					
ANR	67534	CallExpression	"ZEND_MM_ALIGNED_BASE ( ptr , ZEND_MM_CHUNK_SIZE )"		67501	1					
ANR	67535	Callee	ZEND_MM_ALIGNED_BASE		67501	0					
ANR	67536	Identifier	ZEND_MM_ALIGNED_BASE		67501	0					
ANR	67537	ArgumentList	ptr		67501	1					
ANR	67538	Argument	ptr		67501	0					
ANR	67539	Identifier	ptr		67501	0					
ANR	67540	Argument	ZEND_MM_CHUNK_SIZE		67501	1					
ANR	67541	Identifier	ZEND_MM_CHUNK_SIZE		67501	0					
ANR	67542	IdentifierDeclStatement	int page_num = page_offset / ZEND_MM_PAGE_SIZE ;	2412:2:73509:73555	67501	2	True				
ANR	67543	IdentifierDecl	page_num = page_offset / ZEND_MM_PAGE_SIZE		67501	0					
ANR	67544	IdentifierDeclType	int		67501	0					
ANR	67545	Identifier	page_num		67501	1					
ANR	67546	AssignmentExpression	page_num = page_offset / ZEND_MM_PAGE_SIZE		67501	2		=			
ANR	67547	Identifier	page_num		67501	0					
ANR	67548	MultiplicativeExpression	page_offset / ZEND_MM_PAGE_SIZE		67501	1		/			
ANR	67549	Identifier	page_offset		67501	0					
ANR	67550	Identifier	ZEND_MM_PAGE_SIZE		67501	1					
ANR	67551	IdentifierDeclStatement	"int pages_count = ZEND_MM_ALIGNED_SIZE_EX ( size , ZEND_MM_PAGE_SIZE ) / ZEND_MM_PAGE_SIZE ;"	2413:2:73559:73645	67501	3	True				
ANR	67552	IdentifierDecl	"pages_count = ZEND_MM_ALIGNED_SIZE_EX ( size , ZEND_MM_PAGE_SIZE ) / ZEND_MM_PAGE_SIZE"		67501	0					
ANR	67553	IdentifierDeclType	int		67501	0					
ANR	67554	Identifier	pages_count		67501	1					
ANR	67555	AssignmentExpression	"pages_count = ZEND_MM_ALIGNED_SIZE_EX ( size , ZEND_MM_PAGE_SIZE ) / ZEND_MM_PAGE_SIZE"		67501	2		=			
ANR	67556	Identifier	pages_count		67501	0					
ANR	67557	MultiplicativeExpression	"ZEND_MM_ALIGNED_SIZE_EX ( size , ZEND_MM_PAGE_SIZE ) / ZEND_MM_PAGE_SIZE"		67501	1		/			
ANR	67558	CallExpression	"ZEND_MM_ALIGNED_SIZE_EX ( size , ZEND_MM_PAGE_SIZE )"		67501	0					
ANR	67559	Callee	ZEND_MM_ALIGNED_SIZE_EX		67501	0					
ANR	67560	Identifier	ZEND_MM_ALIGNED_SIZE_EX		67501	0					
ANR	67561	ArgumentList	size		67501	1					
ANR	67562	Argument	size		67501	0					
ANR	67563	Identifier	size		67501	0					
ANR	67564	Argument	ZEND_MM_PAGE_SIZE		67501	1					
ANR	67565	Identifier	ZEND_MM_PAGE_SIZE		67501	0					
ANR	67566	Identifier	ZEND_MM_PAGE_SIZE		67501	1					
ANR	67567	ExpressionStatement	"ZEND_MM_CHECK ( chunk -> heap == AG ( mm_heap ) && ZEND_MM_ALIGNED_OFFSET ( page_offset , ZEND_MM_PAGE_SIZE ) == 0 , ""zend_mm_heap corrupted"" )"	2415:2:73650:73780	67501	4	True				
ANR	67568	CallExpression	"ZEND_MM_CHECK ( chunk -> heap == AG ( mm_heap ) && ZEND_MM_ALIGNED_OFFSET ( page_offset , ZEND_MM_PAGE_SIZE ) == 0 , ""zend_mm_heap corrupted"" )"		67501	0					
ANR	67569	Callee	ZEND_MM_CHECK		67501	0					
ANR	67570	Identifier	ZEND_MM_CHECK		67501	0					
ANR	67571	ArgumentList	"chunk -> heap == AG ( mm_heap ) && ZEND_MM_ALIGNED_OFFSET ( page_offset , ZEND_MM_PAGE_SIZE ) == 0"		67501	1					
ANR	67572	Argument	"chunk -> heap == AG ( mm_heap ) && ZEND_MM_ALIGNED_OFFSET ( page_offset , ZEND_MM_PAGE_SIZE ) == 0"		67501	0					
ANR	67573	AndExpression	"chunk -> heap == AG ( mm_heap ) && ZEND_MM_ALIGNED_OFFSET ( page_offset , ZEND_MM_PAGE_SIZE ) == 0"		67501	0		&&			
ANR	67574	EqualityExpression	chunk -> heap == AG ( mm_heap )		67501	0		==			
ANR	67575	PtrMemberAccess	chunk -> heap		67501	0					
ANR	67576	Identifier	chunk		67501	0					
ANR	67577	Identifier	heap		67501	1					
ANR	67578	CallExpression	AG ( mm_heap )		67501	1					
ANR	67579	Callee	AG		67501	0					
ANR	67580	Identifier	AG		67501	0					
ANR	67581	ArgumentList	mm_heap		67501	1					
ANR	67582	Argument	mm_heap		67501	0					
ANR	67583	Identifier	mm_heap		67501	0					
ANR	67584	EqualityExpression	"ZEND_MM_ALIGNED_OFFSET ( page_offset , ZEND_MM_PAGE_SIZE ) == 0"		67501	1		==			
ANR	67585	CallExpression	"ZEND_MM_ALIGNED_OFFSET ( page_offset , ZEND_MM_PAGE_SIZE )"		67501	0					
ANR	67586	Callee	ZEND_MM_ALIGNED_OFFSET		67501	0					
ANR	67587	Identifier	ZEND_MM_ALIGNED_OFFSET		67501	0					
ANR	67588	ArgumentList	page_offset		67501	1					
ANR	67589	Argument	page_offset		67501	0					
ANR	67590	Identifier	page_offset		67501	0					
ANR	67591	Argument	ZEND_MM_PAGE_SIZE		67501	1					
ANR	67592	Identifier	ZEND_MM_PAGE_SIZE		67501	0					
ANR	67593	PrimaryExpression	0		67501	1					
ANR	67594	Argument	"""zend_mm_heap corrupted"""		67501	1					
ANR	67595	PrimaryExpression	"""zend_mm_heap corrupted"""		67501	0					
ANR	67596	ExpressionStatement	ZEND_ASSERT ( chunk -> map [ page_num ] & ZEND_MM_IS_LRUN )	2416:2:73784:73835	67501	5	True				
ANR	67597	CallExpression	ZEND_ASSERT ( chunk -> map [ page_num ] & ZEND_MM_IS_LRUN )		67501	0					
ANR	67598	Callee	ZEND_ASSERT		67501	0					
ANR	67599	Identifier	ZEND_ASSERT		67501	0					
ANR	67600	ArgumentList	chunk -> map [ page_num ] & ZEND_MM_IS_LRUN		67501	1					
ANR	67601	Argument	chunk -> map [ page_num ] & ZEND_MM_IS_LRUN		67501	0					
ANR	67602	BitAndExpression	chunk -> map [ page_num ] & ZEND_MM_IS_LRUN		67501	0		&			
ANR	67603	ArrayIndexing	chunk -> map [ page_num ]		67501	0					
ANR	67604	PtrMemberAccess	chunk -> map		67501	0					
ANR	67605	Identifier	chunk		67501	0					
ANR	67606	Identifier	map		67501	1					
ANR	67607	Identifier	page_num		67501	1					
ANR	67608	Identifier	ZEND_MM_IS_LRUN		67501	1					
ANR	67609	ExpressionStatement	ZEND_ASSERT ( ZEND_MM_LRUN_PAGES ( chunk -> map [ page_num ] ) == pages_count )	2417:2:73839:73907	67501	6	True				
ANR	67610	CallExpression	ZEND_ASSERT ( ZEND_MM_LRUN_PAGES ( chunk -> map [ page_num ] ) == pages_count )		67501	0					
ANR	67611	Callee	ZEND_ASSERT		67501	0					
ANR	67612	Identifier	ZEND_ASSERT		67501	0					
ANR	67613	ArgumentList	ZEND_MM_LRUN_PAGES ( chunk -> map [ page_num ] ) == pages_count		67501	1					
ANR	67614	Argument	ZEND_MM_LRUN_PAGES ( chunk -> map [ page_num ] ) == pages_count		67501	0					
ANR	67615	EqualityExpression	ZEND_MM_LRUN_PAGES ( chunk -> map [ page_num ] ) == pages_count		67501	0		==			
ANR	67616	CallExpression	ZEND_MM_LRUN_PAGES ( chunk -> map [ page_num ] )		67501	0					
ANR	67617	Callee	ZEND_MM_LRUN_PAGES		67501	0					
ANR	67618	Identifier	ZEND_MM_LRUN_PAGES		67501	0					
ANR	67619	ArgumentList	chunk -> map [ page_num ]		67501	1					
ANR	67620	Argument	chunk -> map [ page_num ]		67501	0					
ANR	67621	ArrayIndexing	chunk -> map [ page_num ]		67501	0					
ANR	67622	PtrMemberAccess	chunk -> map		67501	0					
ANR	67623	Identifier	chunk		67501	0					
ANR	67624	Identifier	map		67501	1					
ANR	67625	Identifier	page_num		67501	1					
ANR	67626	Identifier	pages_count		67501	1					
ANR	67627	ExpressionStatement	"zend_mm_free_large ( AG ( mm_heap ) , chunk , page_num , pages_count )"	2418:2:73911:73972	67501	7	True				
ANR	67628	CallExpression	"zend_mm_free_large ( AG ( mm_heap ) , chunk , page_num , pages_count )"		67501	0					
ANR	67629	Callee	zend_mm_free_large		67501	0					
ANR	67630	Identifier	zend_mm_free_large		67501	0					
ANR	67631	ArgumentList	AG ( mm_heap )		67501	1					
ANR	67632	Argument	AG ( mm_heap )		67501	0					
ANR	67633	CallExpression	AG ( mm_heap )		67501	0					
ANR	67634	Callee	AG		67501	0					
ANR	67635	Identifier	AG		67501	0					
ANR	67636	ArgumentList	mm_heap		67501	1					
ANR	67637	Argument	mm_heap		67501	0					
ANR	67638	Identifier	mm_heap		67501	0					
ANR	67639	Argument	chunk		67501	1					
ANR	67640	Identifier	chunk		67501	0					
ANR	67641	Argument	page_num		67501	2					
ANR	67642	Identifier	page_num		67501	0					
ANR	67643	Argument	pages_count		67501	3					
ANR	67644	Identifier	pages_count		67501	0					
ANR	67645	ReturnType	ZEND_API void ZEND_FASTCALL		67501	1					
ANR	67646	Identifier	_efree_large		67501	2					
ANR	67647	ParameterList	"void * ptr , size_t size"		67501	3					
ANR	67648	Parameter	void * ptr	2405:41:73283:73291	67501	0	True				
ANR	67649	ParameterType	void *		67501	0					
ANR	67650	Identifier	ptr		67501	1					
ANR	67651	Parameter	size_t size	2405:52:73294:73304	67501	1	True				
ANR	67652	ParameterType	size_t		67501	0					
ANR	67653	Identifier	size		67501	1					
ANR	67654	CFGEntryNode	ENTRY		67501		True				
ANR	67655	CFGExitNode	EXIT		67501		True				
ANR	67656	Symbol	pages_count		67501						
ANR	67657	Symbol	* * chunk		67501						
ANR	67658	Symbol	AG		67501						
ANR	67659	Symbol	chunk		67501						
ANR	67660	Symbol	page_num		67501						
ANR	67661	Symbol	page_offset		67501						
ANR	67662	Symbol	chunk -> heap		67501						
ANR	67663	Symbol	ptr		67501						
ANR	67664	Symbol	ZEND_MM_ALIGNED_SIZE_EX		67501						
ANR	67665	Symbol	ZEND_MM_LRUN_PAGES		67501						
ANR	67666	Symbol	ZEND_MM_ALIGNED_OFFSET		67501						
ANR	67667	Symbol	* chunk		67501						
ANR	67668	Symbol	size		67501						
ANR	67669	Symbol	* page_num		67501						
ANR	67670	Symbol	* chunk -> map		67501						
ANR	67671	Symbol	mm_heap		67501						
ANR	67672	Symbol	ZEND_MM_CHUNK_SIZE		67501						
ANR	67673	Symbol	ZEND_MM_IS_LRUN		67501						
ANR	67674	Symbol	ZEND_MM_ALIGNED_BASE		67501						
ANR	67675	Symbol	chunk -> map		67501						
ANR	67676	Symbol	ZEND_MM_PAGE_SIZE		67501						
ANR	67677	Function	_efree_huge	2422:0:73980:74119							
ANR	67678	FunctionDef	"_efree_huge (void * ptr , size_t size)"		67677	0					
ANR	67679	CompoundStatement		2423:0:74044:74119	67677	0					
ANR	67680	ExpressionStatement	ZEND_MM_CUSTOM_DEALLOCATOR ( ptr )	2425:1:74048:74079	67677	0	True				
ANR	67681	CallExpression	ZEND_MM_CUSTOM_DEALLOCATOR ( ptr )		67677	0					
ANR	67682	Callee	ZEND_MM_CUSTOM_DEALLOCATOR		67677	0					
ANR	67683	Identifier	ZEND_MM_CUSTOM_DEALLOCATOR		67677	0					
ANR	67684	ArgumentList	ptr		67677	1					
ANR	67685	Argument	ptr		67677	0					
ANR	67686	Identifier	ptr		67677	0					
ANR	67687	ExpressionStatement	"zend_mm_free_huge ( AG ( mm_heap ) , ptr )"	2426:1:74082:74117	67677	1	True				
ANR	67688	CallExpression	"zend_mm_free_huge ( AG ( mm_heap ) , ptr )"		67677	0					
ANR	67689	Callee	zend_mm_free_huge		67677	0					
ANR	67690	Identifier	zend_mm_free_huge		67677	0					
ANR	67691	ArgumentList	AG ( mm_heap )		67677	1					
ANR	67692	Argument	AG ( mm_heap )		67677	0					
ANR	67693	CallExpression	AG ( mm_heap )		67677	0					
ANR	67694	Callee	AG		67677	0					
ANR	67695	Identifier	AG		67677	0					
ANR	67696	ArgumentList	mm_heap		67677	1					
ANR	67697	Argument	mm_heap		67677	0					
ANR	67698	Identifier	mm_heap		67677	0					
ANR	67699	Argument	ptr		67677	1					
ANR	67700	Identifier	ptr		67677	0					
ANR	67701	ReturnType	ZEND_API void ZEND_FASTCALL		67677	1					
ANR	67702	Identifier	_efree_huge		67677	2					
ANR	67703	ParameterList	"void * ptr , size_t size"		67677	3					
ANR	67704	Parameter	void * ptr	2422:40:74020:74028	67677	0	True				
ANR	67705	ParameterType	void *		67677	0					
ANR	67706	Identifier	ptr		67677	1					
ANR	67707	Parameter	size_t size	2422:51:74031:74041	67677	1	True				
ANR	67708	ParameterType	size_t		67677	0					
ANR	67709	Identifier	size		67677	1					
ANR	67710	CFGEntryNode	ENTRY		67677		True				
ANR	67711	CFGExitNode	EXIT		67677		True				
ANR	67712	Symbol	size		67677						
ANR	67713	Symbol	AG		67677						
ANR	67714	Symbol	mm_heap		67677						
ANR	67715	Symbol	ptr		67677						
ANR	67716	Function	_emalloc	2430:15:74144:74661							
ANR	67717	FunctionDef	_emalloc (size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC)		67716	0					
ANR	67718	CompoundStatement		2431:0:74221:74661	67716	0					
ANR	67719	IfStatement	if ( UNEXPECTED ( AG ( mm_heap ) -> use_custom_heap ) )		67716	0					
ANR	67720	Condition	UNEXPECTED ( AG ( mm_heap ) -> use_custom_heap )	2434:5:74248:74287	67716	0	True				
ANR	67721	CallExpression	UNEXPECTED ( AG ( mm_heap ) -> use_custom_heap )		67716	0					
ANR	67722	Callee	UNEXPECTED		67716	0					
ANR	67723	Identifier	UNEXPECTED		67716	0					
ANR	67724	ArgumentList	AG ( mm_heap ) -> use_custom_heap		67716	1					
ANR	67725	Argument	AG ( mm_heap ) -> use_custom_heap		67716	0					
ANR	67726	PtrMemberAccess	AG ( mm_heap ) -> use_custom_heap		67716	0					
ANR	67727	CallExpression	AG ( mm_heap )		67716	0					
ANR	67728	Callee	AG		67716	0					
ANR	67729	Identifier	AG		67716	0					
ANR	67730	ArgumentList	mm_heap		67716	1					
ANR	67731	Argument	mm_heap		67716	0					
ANR	67732	Identifier	mm_heap		67716	0					
ANR	67733	Identifier	use_custom_heap		67716	1					
ANR	67734	CompoundStatement		4:47:68:68	67716	1					
ANR	67735	IfStatement	if ( ZEND_DEBUG && AG ( mm_heap ) -> use_custom_heap == ZEND_MM_CUSTOM_HEAP_DEBUG )		67716	0					
ANR	67736	Condition	ZEND_DEBUG && AG ( mm_heap ) -> use_custom_heap == ZEND_MM_CUSTOM_HEAP_DEBUG	2435:6:74298:74368	67716	0	True				
ANR	67737	AndExpression	ZEND_DEBUG && AG ( mm_heap ) -> use_custom_heap == ZEND_MM_CUSTOM_HEAP_DEBUG		67716	0		&&			
ANR	67738	Identifier	ZEND_DEBUG		67716	0					
ANR	67739	EqualityExpression	AG ( mm_heap ) -> use_custom_heap == ZEND_MM_CUSTOM_HEAP_DEBUG		67716	1		==			
ANR	67740	PtrMemberAccess	AG ( mm_heap ) -> use_custom_heap		67716	0					
ANR	67741	CallExpression	AG ( mm_heap )		67716	0					
ANR	67742	Callee	AG		67716	0					
ANR	67743	Identifier	AG		67716	0					
ANR	67744	ArgumentList	mm_heap		67716	1					
ANR	67745	Argument	mm_heap		67716	0					
ANR	67746	Identifier	mm_heap		67716	0					
ANR	67747	Identifier	use_custom_heap		67716	1					
ANR	67748	Identifier	ZEND_MM_CUSTOM_HEAP_DEBUG		67716	1					
ANR	67749	CompoundStatement		5:79:149:149	67716	1					
ANR	67750	Statement	return	2436:3:74376:74381	67716	0	True				
ANR	67751	Statement	AG	2436:10:74383:74384	67716	1	True				
ANR	67752	Statement	(	2436:12:74385:74385	67716	2	True				
ANR	67753	Statement	mm_heap	2436:13:74386:74392	67716	3	True				
ANR	67754	Statement	)	2436:20:74393:74393	67716	4	True				
ANR	67755	Statement	->	2436:21:74394:74395	67716	5	True				
ANR	67756	Statement	custom_heap	2436:23:74396:74406	67716	6	True				
ANR	67757	Statement	.	2436:34:74407:74407	67716	7	True				
ANR	67758	Statement	debug	2436:35:74408:74412	67716	8	True				
ANR	67759	Statement	.	2436:40:74413:74413	67716	9	True				
ANR	67760	Statement	_malloc	2436:41:74414:74420	67716	10	True				
ANR	67761	Statement	(	2436:48:74421:74421	67716	11	True				
ANR	67762	Statement	size	2436:49:74422:74425	67716	12	True				
ANR	67763	Statement	ZEND_FILE_LINE_RELAY_CC	2436:54:74427:74449	67716	13	True				
ANR	67764	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	2436:78:74451:74478	67716	14	True				
ANR	67765	Statement	)	2436:106:74479:74479	67716	15	True				
ANR	67766	ExpressionStatement		2436:107:74480:74480	67716	16	True				
ANR	67767	ElseStatement	else		67716	0					
ANR	67768	CompoundStatement		7:9:269:269	67716	0					
ANR	67769	ReturnStatement	return AG ( mm_heap ) -> custom_heap . std . _malloc ( size ) ;	2438:3:74496:74545	67716	0	True				
ANR	67770	CallExpression	AG ( mm_heap ) -> custom_heap . std . _malloc ( size )		67716	0					
ANR	67771	Callee	AG ( mm_heap ) -> custom_heap . std . _malloc		67716	0					
ANR	67772	MemberAccess	AG ( mm_heap ) -> custom_heap . std . _malloc		67716	0					
ANR	67773	MemberAccess	AG ( mm_heap ) -> custom_heap . std		67716	0					
ANR	67774	PtrMemberAccess	AG ( mm_heap ) -> custom_heap		67716	0					
ANR	67775	CallExpression	AG ( mm_heap )		67716	0					
ANR	67776	Callee	AG		67716	0					
ANR	67777	Identifier	AG		67716	0					
ANR	67778	ArgumentList	mm_heap		67716	1					
ANR	67779	Argument	mm_heap		67716	0					
ANR	67780	Identifier	mm_heap		67716	0					
ANR	67781	Identifier	custom_heap		67716	1					
ANR	67782	Identifier	std		67716	1					
ANR	67783	Identifier	_malloc		67716	1					
ANR	67784	ArgumentList	size		67716	1					
ANR	67785	Argument	size		67716	0					
ANR	67786	Identifier	size		67716	0					
ANR	67787	Statement	return	2442:1:74562:74567	67716	1	True				
ANR	67788	Statement	zend_mm_alloc_heap	2442:8:74569:74586	67716	2	True				
ANR	67789	Statement	(	2442:26:74587:74587	67716	3	True				
ANR	67790	Statement	AG	2442:27:74588:74589	67716	4	True				
ANR	67791	Statement	(	2442:29:74590:74590	67716	5	True				
ANR	67792	Statement	mm_heap	2442:30:74591:74597	67716	6	True				
ANR	67793	Statement	)	2442:37:74598:74598	67716	7	True				
ANR	67794	Statement	","	2442:38:74599:74599	67716	8	True				
ANR	67795	Statement	size	2442:40:74601:74604	67716	9	True				
ANR	67796	Statement	ZEND_FILE_LINE_RELAY_CC	2442:45:74606:74628	67716	10	True				
ANR	67797	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	2442:69:74630:74657	67716	11	True				
ANR	67798	Statement	)	2442:97:74658:74658	67716	12	True				
ANR	67799	ExpressionStatement		2442:98:74659:74659	67716	13	True				
ANR	67800	ReturnType	ZEND_FASTCALL		67716	1					
ANR	67801	Identifier	_emalloc		67716	2					
ANR	67802	ParameterList	size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC		67716	3					
ANR	67803	Parameter	size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC	2430:38:74167:74218	67716	0	True				
ANR	67804	ParameterType	size_t size ZEND_FILE_LINE_DC		67716	0					
ANR	67805	Identifier	ZEND_FILE_LINE_ORIG_DC		67716	1					
ANR	67806	CFGEntryNode	ENTRY		67716		True				
ANR	67807	CFGExitNode	EXIT		67716		True				
ANR	67808	Symbol	UNEXPECTED		67716						
ANR	67809	Symbol	AG ( mm_heap ) -> use_custom_heap		67716						
ANR	67810	Symbol	size		67716						
ANR	67811	Symbol	ZEND_MM_CUSTOM_HEAP_DEBUG		67716						
ANR	67812	Symbol	AG		67716						
ANR	67813	Symbol	ZEND_DEBUG		67716						
ANR	67814	Symbol	mm_heap		67716						
ANR	67815	Symbol	ZEND_FILE_LINE_ORIG_DC		67716						
ANR	67816	Symbol	AG ( mm_heap ) -> custom_heap . std		67716						
ANR	67817	Symbol	AG ( mm_heap ) -> custom_heap		67716						
ANR	67818	Symbol	* AG		67716						
ANR	67819	Symbol	AG ( mm_heap ) -> custom_heap . std . _malloc		67716						
ANR	67820	Function	_erealloc	2461:15:75193:75721							
ANR	67821	FunctionDef	"_erealloc (void * ptr , size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC)"		67820	0					
ANR	67822	CompoundStatement		2462:0:75282:75721	67820	0					
ANR	67823	IfStatement	if ( UNEXPECTED ( AG ( mm_heap ) -> use_custom_heap ) )		67820	0					
ANR	67824	Condition	UNEXPECTED ( AG ( mm_heap ) -> use_custom_heap )	2464:5:75290:75329	67820	0	True				
ANR	67825	CallExpression	UNEXPECTED ( AG ( mm_heap ) -> use_custom_heap )		67820	0					
ANR	67826	Callee	UNEXPECTED		67820	0					
ANR	67827	Identifier	UNEXPECTED		67820	0					
ANR	67828	ArgumentList	AG ( mm_heap ) -> use_custom_heap		67820	1					
ANR	67829	Argument	AG ( mm_heap ) -> use_custom_heap		67820	0					
ANR	67830	PtrMemberAccess	AG ( mm_heap ) -> use_custom_heap		67820	0					
ANR	67831	CallExpression	AG ( mm_heap )		67820	0					
ANR	67832	Callee	AG		67820	0					
ANR	67833	Identifier	AG		67820	0					
ANR	67834	ArgumentList	mm_heap		67820	1					
ANR	67835	Argument	mm_heap		67820	0					
ANR	67836	Identifier	mm_heap		67820	0					
ANR	67837	Identifier	use_custom_heap		67820	1					
ANR	67838	CompoundStatement		3:47:49:49	67820	1					
ANR	67839	IfStatement	if ( ZEND_DEBUG && AG ( mm_heap ) -> use_custom_heap == ZEND_MM_CUSTOM_HEAP_DEBUG )		67820	0					
ANR	67840	Condition	ZEND_DEBUG && AG ( mm_heap ) -> use_custom_heap == ZEND_MM_CUSTOM_HEAP_DEBUG	2465:6:75340:75410	67820	0	True				
ANR	67841	AndExpression	ZEND_DEBUG && AG ( mm_heap ) -> use_custom_heap == ZEND_MM_CUSTOM_HEAP_DEBUG		67820	0		&&			
ANR	67842	Identifier	ZEND_DEBUG		67820	0					
ANR	67843	EqualityExpression	AG ( mm_heap ) -> use_custom_heap == ZEND_MM_CUSTOM_HEAP_DEBUG		67820	1		==			
ANR	67844	PtrMemberAccess	AG ( mm_heap ) -> use_custom_heap		67820	0					
ANR	67845	CallExpression	AG ( mm_heap )		67820	0					
ANR	67846	Callee	AG		67820	0					
ANR	67847	Identifier	AG		67820	0					
ANR	67848	ArgumentList	mm_heap		67820	1					
ANR	67849	Argument	mm_heap		67820	0					
ANR	67850	Identifier	mm_heap		67820	0					
ANR	67851	Identifier	use_custom_heap		67820	1					
ANR	67852	Identifier	ZEND_MM_CUSTOM_HEAP_DEBUG		67820	1					
ANR	67853	CompoundStatement		4:79:130:130	67820	1					
ANR	67854	Statement	return	2466:3:75418:75423	67820	0	True				
ANR	67855	Statement	AG	2466:10:75425:75426	67820	1	True				
ANR	67856	Statement	(	2466:12:75427:75427	67820	2	True				
ANR	67857	Statement	mm_heap	2466:13:75428:75434	67820	3	True				
ANR	67858	Statement	)	2466:20:75435:75435	67820	4	True				
ANR	67859	Statement	->	2466:21:75436:75437	67820	5	True				
ANR	67860	Statement	custom_heap	2466:23:75438:75448	67820	6	True				
ANR	67861	Statement	.	2466:34:75449:75449	67820	7	True				
ANR	67862	Statement	debug	2466:35:75450:75454	67820	8	True				
ANR	67863	Statement	.	2466:40:75455:75455	67820	9	True				
ANR	67864	Statement	_realloc	2466:41:75456:75463	67820	10	True				
ANR	67865	Statement	(	2466:49:75464:75464	67820	11	True				
ANR	67866	Statement	ptr	2466:50:75465:75467	67820	12	True				
ANR	67867	Statement	","	2466:53:75468:75468	67820	13	True				
ANR	67868	Statement	size	2466:55:75470:75473	67820	14	True				
ANR	67869	Statement	ZEND_FILE_LINE_RELAY_CC	2466:60:75475:75497	67820	15	True				
ANR	67870	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	2466:84:75499:75526	67820	16	True				
ANR	67871	Statement	)	2466:112:75527:75527	67820	17	True				
ANR	67872	ExpressionStatement		2466:113:75528:75528	67820	18	True				
ANR	67873	ElseStatement	else		67820	0					
ANR	67874	CompoundStatement		6:9:256:256	67820	0					
ANR	67875	ReturnStatement	"return AG ( mm_heap ) -> custom_heap . std . _realloc ( ptr , size ) ;"	2468:3:75544:75599	67820	0	True				
ANR	67876	CallExpression	"AG ( mm_heap ) -> custom_heap . std . _realloc ( ptr , size )"		67820	0					
ANR	67877	Callee	AG ( mm_heap ) -> custom_heap . std . _realloc		67820	0					
ANR	67878	MemberAccess	AG ( mm_heap ) -> custom_heap . std . _realloc		67820	0					
ANR	67879	MemberAccess	AG ( mm_heap ) -> custom_heap . std		67820	0					
ANR	67880	PtrMemberAccess	AG ( mm_heap ) -> custom_heap		67820	0					
ANR	67881	CallExpression	AG ( mm_heap )		67820	0					
ANR	67882	Callee	AG		67820	0					
ANR	67883	Identifier	AG		67820	0					
ANR	67884	ArgumentList	mm_heap		67820	1					
ANR	67885	Argument	mm_heap		67820	0					
ANR	67886	Identifier	mm_heap		67820	0					
ANR	67887	Identifier	custom_heap		67820	1					
ANR	67888	Identifier	std		67820	1					
ANR	67889	Identifier	_realloc		67820	1					
ANR	67890	ArgumentList	ptr		67820	1					
ANR	67891	Argument	ptr		67820	0					
ANR	67892	Identifier	ptr		67820	0					
ANR	67893	Argument	size		67820	1					
ANR	67894	Identifier	size		67820	0					
ANR	67895	Statement	return	2471:1:75609:75614	67820	1	True				
ANR	67896	Statement	zend_mm_realloc_heap	2471:8:75616:75635	67820	2	True				
ANR	67897	Statement	(	2471:28:75636:75636	67820	3	True				
ANR	67898	Statement	AG	2471:29:75637:75638	67820	4	True				
ANR	67899	Statement	(	2471:31:75639:75639	67820	5	True				
ANR	67900	Statement	mm_heap	2471:32:75640:75646	67820	6	True				
ANR	67901	Statement	)	2471:39:75647:75647	67820	7	True				
ANR	67902	Statement	","	2471:40:75648:75648	67820	8	True				
ANR	67903	Statement	ptr	2471:42:75650:75652	67820	9	True				
ANR	67904	Statement	","	2471:45:75653:75653	67820	10	True				
ANR	67905	Statement	size	2471:47:75655:75658	67820	11	True				
ANR	67906	Statement	","	2471:51:75659:75659	67820	12	True				
ANR	67907	Statement	size	2471:53:75661:75664	67820	13	True				
ANR	67908	Statement	ZEND_FILE_LINE_RELAY_CC	2471:58:75666:75688	67820	14	True				
ANR	67909	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	2471:82:75690:75717	67820	15	True				
ANR	67910	Statement	)	2471:110:75718:75718	67820	16	True				
ANR	67911	ExpressionStatement		2471:111:75719:75719	67820	17	True				
ANR	67912	ReturnType	ZEND_FASTCALL		67820	1					
ANR	67913	Identifier	_erealloc		67820	2					
ANR	67914	ParameterList	"void * ptr , size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC"		67820	3					
ANR	67915	Parameter	void * ptr	2461:39:75217:75225	67820	0	True				
ANR	67916	ParameterType	void *		67820	0					
ANR	67917	Identifier	ptr		67820	1					
ANR	67918	Parameter	size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC	2461:50:75228:75279	67820	1	True				
ANR	67919	ParameterType	size_t size ZEND_FILE_LINE_DC		67820	0					
ANR	67920	Identifier	ZEND_FILE_LINE_ORIG_DC		67820	1					
ANR	67921	CFGEntryNode	ENTRY		67820		True				
ANR	67922	CFGExitNode	EXIT		67820		True				
ANR	67923	Symbol	AG ( mm_heap ) -> use_custom_heap		67820						
ANR	67924	Symbol	AG		67820						
ANR	67925	Symbol	ZEND_FILE_LINE_ORIG_DC		67820						
ANR	67926	Symbol	AG ( mm_heap ) -> custom_heap		67820						
ANR	67927	Symbol	AG ( mm_heap ) -> custom_heap . std		67820						
ANR	67928	Symbol	ptr		67820						
ANR	67929	Symbol	* AG		67820						
ANR	67930	Symbol	UNEXPECTED		67820						
ANR	67931	Symbol	size		67820						
ANR	67932	Symbol	ZEND_MM_CUSTOM_HEAP_DEBUG		67820						
ANR	67933	Symbol	ZEND_DEBUG		67820						
ANR	67934	Symbol	mm_heap		67820						
ANR	67935	Symbol	AG ( mm_heap ) -> custom_heap . std . _realloc		67820						
ANR	67936	Function	_erealloc2	2474:15:75739:76291							
ANR	67937	FunctionDef	"_erealloc2 (void * ptr , size_t size , size_t copy_size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC)"		67936	0					
ANR	67938	CompoundStatement		2475:0:75847:76291	67936	0					
ANR	67939	IfStatement	if ( UNEXPECTED ( AG ( mm_heap ) -> use_custom_heap ) )		67936	0					
ANR	67940	Condition	UNEXPECTED ( AG ( mm_heap ) -> use_custom_heap )	2477:5:75855:75894	67936	0	True				
ANR	67941	CallExpression	UNEXPECTED ( AG ( mm_heap ) -> use_custom_heap )		67936	0					
ANR	67942	Callee	UNEXPECTED		67936	0					
ANR	67943	Identifier	UNEXPECTED		67936	0					
ANR	67944	ArgumentList	AG ( mm_heap ) -> use_custom_heap		67936	1					
ANR	67945	Argument	AG ( mm_heap ) -> use_custom_heap		67936	0					
ANR	67946	PtrMemberAccess	AG ( mm_heap ) -> use_custom_heap		67936	0					
ANR	67947	CallExpression	AG ( mm_heap )		67936	0					
ANR	67948	Callee	AG		67936	0					
ANR	67949	Identifier	AG		67936	0					
ANR	67950	ArgumentList	mm_heap		67936	1					
ANR	67951	Argument	mm_heap		67936	0					
ANR	67952	Identifier	mm_heap		67936	0					
ANR	67953	Identifier	use_custom_heap		67936	1					
ANR	67954	CompoundStatement		3:47:49:49	67936	1					
ANR	67955	IfStatement	if ( ZEND_DEBUG && AG ( mm_heap ) -> use_custom_heap == ZEND_MM_CUSTOM_HEAP_DEBUG )		67936	0					
ANR	67956	Condition	ZEND_DEBUG && AG ( mm_heap ) -> use_custom_heap == ZEND_MM_CUSTOM_HEAP_DEBUG	2478:6:75905:75975	67936	0	True				
ANR	67957	AndExpression	ZEND_DEBUG && AG ( mm_heap ) -> use_custom_heap == ZEND_MM_CUSTOM_HEAP_DEBUG		67936	0		&&			
ANR	67958	Identifier	ZEND_DEBUG		67936	0					
ANR	67959	EqualityExpression	AG ( mm_heap ) -> use_custom_heap == ZEND_MM_CUSTOM_HEAP_DEBUG		67936	1		==			
ANR	67960	PtrMemberAccess	AG ( mm_heap ) -> use_custom_heap		67936	0					
ANR	67961	CallExpression	AG ( mm_heap )		67936	0					
ANR	67962	Callee	AG		67936	0					
ANR	67963	Identifier	AG		67936	0					
ANR	67964	ArgumentList	mm_heap		67936	1					
ANR	67965	Argument	mm_heap		67936	0					
ANR	67966	Identifier	mm_heap		67936	0					
ANR	67967	Identifier	use_custom_heap		67936	1					
ANR	67968	Identifier	ZEND_MM_CUSTOM_HEAP_DEBUG		67936	1					
ANR	67969	CompoundStatement		4:79:130:130	67936	1					
ANR	67970	Statement	return	2479:3:75983:75988	67936	0	True				
ANR	67971	Statement	AG	2479:10:75990:75991	67936	1	True				
ANR	67972	Statement	(	2479:12:75992:75992	67936	2	True				
ANR	67973	Statement	mm_heap	2479:13:75993:75999	67936	3	True				
ANR	67974	Statement	)	2479:20:76000:76000	67936	4	True				
ANR	67975	Statement	->	2479:21:76001:76002	67936	5	True				
ANR	67976	Statement	custom_heap	2479:23:76003:76013	67936	6	True				
ANR	67977	Statement	.	2479:34:76014:76014	67936	7	True				
ANR	67978	Statement	debug	2479:35:76015:76019	67936	8	True				
ANR	67979	Statement	.	2479:40:76020:76020	67936	9	True				
ANR	67980	Statement	_realloc	2479:41:76021:76028	67936	10	True				
ANR	67981	Statement	(	2479:49:76029:76029	67936	11	True				
ANR	67982	Statement	ptr	2479:50:76030:76032	67936	12	True				
ANR	67983	Statement	","	2479:53:76033:76033	67936	13	True				
ANR	67984	Statement	size	2479:55:76035:76038	67936	14	True				
ANR	67985	Statement	ZEND_FILE_LINE_RELAY_CC	2479:60:76040:76062	67936	15	True				
ANR	67986	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	2479:84:76064:76091	67936	16	True				
ANR	67987	Statement	)	2479:112:76092:76092	67936	17	True				
ANR	67988	ExpressionStatement		2479:113:76093:76093	67936	18	True				
ANR	67989	ElseStatement	else		67936	0					
ANR	67990	CompoundStatement		6:9:256:256	67936	0					
ANR	67991	ReturnStatement	"return AG ( mm_heap ) -> custom_heap . std . _realloc ( ptr , size ) ;"	2481:3:76109:76164	67936	0	True				
ANR	67992	CallExpression	"AG ( mm_heap ) -> custom_heap . std . _realloc ( ptr , size )"		67936	0					
ANR	67993	Callee	AG ( mm_heap ) -> custom_heap . std . _realloc		67936	0					
ANR	67994	MemberAccess	AG ( mm_heap ) -> custom_heap . std . _realloc		67936	0					
ANR	67995	MemberAccess	AG ( mm_heap ) -> custom_heap . std		67936	0					
ANR	67996	PtrMemberAccess	AG ( mm_heap ) -> custom_heap		67936	0					
ANR	67997	CallExpression	AG ( mm_heap )		67936	0					
ANR	67998	Callee	AG		67936	0					
ANR	67999	Identifier	AG		67936	0					
ANR	68000	ArgumentList	mm_heap		67936	1					
ANR	68001	Argument	mm_heap		67936	0					
ANR	68002	Identifier	mm_heap		67936	0					
ANR	68003	Identifier	custom_heap		67936	1					
ANR	68004	Identifier	std		67936	1					
ANR	68005	Identifier	_realloc		67936	1					
ANR	68006	ArgumentList	ptr		67936	1					
ANR	68007	Argument	ptr		67936	0					
ANR	68008	Identifier	ptr		67936	0					
ANR	68009	Argument	size		67936	1					
ANR	68010	Identifier	size		67936	0					
ANR	68011	Statement	return	2484:1:76174:76179	67936	1	True				
ANR	68012	Statement	zend_mm_realloc_heap	2484:8:76181:76200	67936	2	True				
ANR	68013	Statement	(	2484:28:76201:76201	67936	3	True				
ANR	68014	Statement	AG	2484:29:76202:76203	67936	4	True				
ANR	68015	Statement	(	2484:31:76204:76204	67936	5	True				
ANR	68016	Statement	mm_heap	2484:32:76205:76211	67936	6	True				
ANR	68017	Statement	)	2484:39:76212:76212	67936	7	True				
ANR	68018	Statement	","	2484:40:76213:76213	67936	8	True				
ANR	68019	Statement	ptr	2484:42:76215:76217	67936	9	True				
ANR	68020	Statement	","	2484:45:76218:76218	67936	10	True				
ANR	68021	Statement	size	2484:47:76220:76223	67936	11	True				
ANR	68022	Statement	","	2484:51:76224:76224	67936	12	True				
ANR	68023	Statement	copy_size	2484:53:76226:76234	67936	13	True				
ANR	68024	Statement	ZEND_FILE_LINE_RELAY_CC	2484:63:76236:76258	67936	14	True				
ANR	68025	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	2484:87:76260:76287	67936	15	True				
ANR	68026	Statement	)	2484:115:76288:76288	67936	16	True				
ANR	68027	ExpressionStatement		2484:116:76289:76289	67936	17	True				
ANR	68028	ReturnType	ZEND_FASTCALL		67936	1					
ANR	68029	Identifier	_erealloc2		67936	2					
ANR	68030	ParameterList	"void * ptr , size_t size , size_t copy_size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC"		67936	3					
ANR	68031	Parameter	void * ptr	2474:40:75764:75772	67936	0	True				
ANR	68032	ParameterType	void *		67936	0					
ANR	68033	Identifier	ptr		67936	1					
ANR	68034	Parameter	size_t size	2474:51:75775:75785	67936	1	True				
ANR	68035	ParameterType	size_t		67936	0					
ANR	68036	Identifier	size		67936	1					
ANR	68037	Parameter	size_t copy_size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC	2474:64:75788:75844	67936	2	True				
ANR	68038	ParameterType	size_t copy_size ZEND_FILE_LINE_DC		67936	0					
ANR	68039	Identifier	ZEND_FILE_LINE_ORIG_DC		67936	1					
ANR	68040	CFGEntryNode	ENTRY		67936		True				
ANR	68041	CFGExitNode	EXIT		67936		True				
ANR	68042	Symbol	AG ( mm_heap ) -> use_custom_heap		67936						
ANR	68043	Symbol	AG		67936						
ANR	68044	Symbol	ZEND_FILE_LINE_ORIG_DC		67936						
ANR	68045	Symbol	AG ( mm_heap ) -> custom_heap		67936						
ANR	68046	Symbol	AG ( mm_heap ) -> custom_heap . std		67936						
ANR	68047	Symbol	ptr		67936						
ANR	68048	Symbol	* AG		67936						
ANR	68049	Symbol	UNEXPECTED		67936						
ANR	68050	Symbol	size		67936						
ANR	68051	Symbol	ZEND_MM_CUSTOM_HEAP_DEBUG		67936						
ANR	68052	Symbol	ZEND_DEBUG		67936						
ANR	68053	Symbol	mm_heap		67936						
ANR	68054	Symbol	AG ( mm_heap ) -> custom_heap . std . _realloc		67936						
ANR	68055	Function	safe_address	2495:0:76559:76908							
ANR	68056	FunctionDef	"safe_address (size_t nmemb , size_t size , size_t offset)"		68055	0					
ANR	68057	CompoundStatement		2496:0:76647:76908	68055	0					
ANR	68058	IdentifierDeclStatement	int overflow ;	2497:1:76650:76662	68055	0	True				
ANR	68059	IdentifierDecl	overflow		68055	0					
ANR	68060	IdentifierDeclType	int		68055	0					
ANR	68061	Identifier	overflow		68055	1					
ANR	68062	IdentifierDeclStatement	"size_t ret = zend_safe_address ( nmemb , size , offset , & overflow ) ;"	2498:1:76665:76727	68055	1	True				
ANR	68063	IdentifierDecl	"ret = zend_safe_address ( nmemb , size , offset , & overflow )"		68055	0					
ANR	68064	IdentifierDeclType	size_t		68055	0					
ANR	68065	Identifier	ret		68055	1					
ANR	68066	AssignmentExpression	"ret = zend_safe_address ( nmemb , size , offset , & overflow )"		68055	2		=			
ANR	68067	Identifier	ret		68055	0					
ANR	68068	CallExpression	"zend_safe_address ( nmemb , size , offset , & overflow )"		68055	1					
ANR	68069	Callee	zend_safe_address		68055	0					
ANR	68070	Identifier	zend_safe_address		68055	0					
ANR	68071	ArgumentList	nmemb		68055	1					
ANR	68072	Argument	nmemb		68055	0					
ANR	68073	Identifier	nmemb		68055	0					
ANR	68074	Argument	size		68055	1					
ANR	68075	Identifier	size		68055	0					
ANR	68076	Argument	offset		68055	2					
ANR	68077	Identifier	offset		68055	0					
ANR	68078	Argument	& overflow		68055	3					
ANR	68079	UnaryOperationExpression	& overflow		68055	0					
ANR	68080	UnaryOperator	&		68055	0					
ANR	68081	Identifier	overflow		68055	1					
ANR	68082	IfStatement	if ( UNEXPECTED ( overflow ) )		68055	2					
ANR	68083	Condition	UNEXPECTED ( overflow )	2500:5:76735:76754	68055	0	True				
ANR	68084	CallExpression	UNEXPECTED ( overflow )		68055	0					
ANR	68085	Callee	UNEXPECTED		68055	0					
ANR	68086	Identifier	UNEXPECTED		68055	0					
ANR	68087	ArgumentList	overflow		68055	1					
ANR	68088	Argument	overflow		68055	0					
ANR	68089	Identifier	overflow		68055	0					
ANR	68090	CompoundStatement		5:27:109:109	68055	1					
ANR	68091	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Possible integer overflow in memory allocation (%zu * %zu + %zu)"" , nmemb , size , offset )"	2501:2:76761:76878	68055	0	True				
ANR	68092	CallExpression	"zend_error_noreturn ( E_ERROR , ""Possible integer overflow in memory allocation (%zu * %zu + %zu)"" , nmemb , size , offset )"		68055	0					
ANR	68093	Callee	zend_error_noreturn		68055	0					
ANR	68094	Identifier	zend_error_noreturn		68055	0					
ANR	68095	ArgumentList	E_ERROR		68055	1					
ANR	68096	Argument	E_ERROR		68055	0					
ANR	68097	Identifier	E_ERROR		68055	0					
ANR	68098	Argument	"""Possible integer overflow in memory allocation (%zu * %zu + %zu)"""		68055	1					
ANR	68099	PrimaryExpression	"""Possible integer overflow in memory allocation (%zu * %zu + %zu)"""		68055	0					
ANR	68100	Argument	nmemb		68055	2					
ANR	68101	Identifier	nmemb		68055	0					
ANR	68102	Argument	size		68055	3					
ANR	68103	Identifier	size		68055	0					
ANR	68104	Argument	offset		68055	4					
ANR	68105	Identifier	offset		68055	0					
ANR	68106	ReturnStatement	return 0 ;	2502:2:76882:76890	68055	1	True				
ANR	68107	PrimaryExpression	0		68055	0					
ANR	68108	ReturnStatement	return ret ;	2504:1:76896:76906	68055	3	True				
ANR	68109	Identifier	ret		68055	0					
ANR	68110	ReturnType	static zend_always_inline size_t		68055	1					
ANR	68111	Identifier	safe_address		68055	2					
ANR	68112	ParameterList	"size_t nmemb , size_t size , size_t offset"		68055	3					
ANR	68113	Parameter	size_t nmemb	2495:46:76605:76616	68055	0	True				
ANR	68114	ParameterType	size_t		68055	0					
ANR	68115	Identifier	nmemb		68055	1					
ANR	68116	Parameter	size_t size	2495:60:76619:76629	68055	1	True				
ANR	68117	ParameterType	size_t		68055	0					
ANR	68118	Identifier	size		68055	1					
ANR	68119	Parameter	size_t offset	2495:73:76632:76644	68055	2	True				
ANR	68120	ParameterType	size_t		68055	0					
ANR	68121	Identifier	offset		68055	1					
ANR	68122	CFGEntryNode	ENTRY		68055		True				
ANR	68123	CFGExitNode	EXIT		68055		True				
ANR	68124	Symbol	ret		68055						
ANR	68125	Symbol	UNEXPECTED		68055						
ANR	68126	Symbol	overflow		68055						
ANR	68127	Symbol	E_ERROR		68055						
ANR	68128	Symbol	size		68055						
ANR	68129	Symbol	offset		68055						
ANR	68130	Symbol	zend_safe_address		68055						
ANR	68131	Symbol	nmemb		68055						
ANR	68132	Symbol	& overflow		68055						
ANR	68133	Function	_safe_emalloc	2508:15:76927:77096							
ANR	68134	FunctionDef	"_safe_emalloc (size_t nmemb , size_t size , size_t offset ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC)"		68133	0					
ANR	68135	CompoundStatement		2509:0:77038:77096	68133	0					
ANR	68136	ReturnStatement	"return emalloc_rel ( safe_address ( nmemb , size , offset ) ) ;"	2510:1:77041:77094	68133	0	True				
ANR	68137	CallExpression	"emalloc_rel ( safe_address ( nmemb , size , offset ) )"		68133	0					
ANR	68138	Callee	emalloc_rel		68133	0					
ANR	68139	Identifier	emalloc_rel		68133	0					
ANR	68140	ArgumentList	"safe_address ( nmemb , size , offset )"		68133	1					
ANR	68141	Argument	"safe_address ( nmemb , size , offset )"		68133	0					
ANR	68142	CallExpression	"safe_address ( nmemb , size , offset )"		68133	0					
ANR	68143	Callee	safe_address		68133	0					
ANR	68144	Identifier	safe_address		68133	0					
ANR	68145	ArgumentList	nmemb		68133	1					
ANR	68146	Argument	nmemb		68133	0					
ANR	68147	Identifier	nmemb		68133	0					
ANR	68148	Argument	size		68133	1					
ANR	68149	Identifier	size		68133	0					
ANR	68150	Argument	offset		68133	2					
ANR	68151	Identifier	offset		68133	0					
ANR	68152	ReturnType	ZEND_FASTCALL		68133	1					
ANR	68153	Identifier	_safe_emalloc		68133	2					
ANR	68154	ParameterList	"size_t nmemb , size_t size , size_t offset ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC"		68133	3					
ANR	68155	Parameter	size_t nmemb	2508:43:76955:76966	68133	0	True				
ANR	68156	ParameterType	size_t		68133	0					
ANR	68157	Identifier	nmemb		68133	1					
ANR	68158	Parameter	size_t size	2508:57:76969:76979	68133	1	True				
ANR	68159	ParameterType	size_t		68133	0					
ANR	68160	Identifier	size		68133	1					
ANR	68161	Parameter	size_t offset ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC	2508:70:76982:77035	68133	2	True				
ANR	68162	ParameterType	size_t offset ZEND_FILE_LINE_DC		68133	0					
ANR	68163	Identifier	ZEND_FILE_LINE_ORIG_DC		68133	1					
ANR	68164	CFGEntryNode	ENTRY		68133		True				
ANR	68165	CFGExitNode	EXIT		68133		True				
ANR	68166	Symbol	emalloc_rel		68133						
ANR	68167	Symbol	size		68133						
ANR	68168	Symbol	offset		68133						
ANR	68169	Symbol	nmemb		68133						
ANR	68170	Symbol	ZEND_FILE_LINE_ORIG_DC		68133						
ANR	68171	Symbol	safe_address		68133						
ANR	68172	Function	_safe_malloc	2513:15:77114:77241							
ANR	68173	FunctionDef	"_safe_malloc (size_t nmemb , size_t size , size_t offset)"		68172	0					
ANR	68174	CompoundStatement		2514:0:77183:77241	68172	0					
ANR	68175	ReturnStatement	"return pemalloc ( safe_address ( nmemb , size , offset ) , 1 ) ;"	2515:1:77186:77239	68172	0	True				
ANR	68176	CallExpression	"pemalloc ( safe_address ( nmemb , size , offset ) , 1 )"		68172	0					
ANR	68177	Callee	pemalloc		68172	0					
ANR	68178	Identifier	pemalloc		68172	0					
ANR	68179	ArgumentList	"safe_address ( nmemb , size , offset )"		68172	1					
ANR	68180	Argument	"safe_address ( nmemb , size , offset )"		68172	0					
ANR	68181	CallExpression	"safe_address ( nmemb , size , offset )"		68172	0					
ANR	68182	Callee	safe_address		68172	0					
ANR	68183	Identifier	safe_address		68172	0					
ANR	68184	ArgumentList	nmemb		68172	1					
ANR	68185	Argument	nmemb		68172	0					
ANR	68186	Identifier	nmemb		68172	0					
ANR	68187	Argument	size		68172	1					
ANR	68188	Identifier	size		68172	0					
ANR	68189	Argument	offset		68172	2					
ANR	68190	Identifier	offset		68172	0					
ANR	68191	Argument	1		68172	1					
ANR	68192	PrimaryExpression	1		68172	0					
ANR	68193	ReturnType	ZEND_FASTCALL		68172	1					
ANR	68194	Identifier	_safe_malloc		68172	2					
ANR	68195	ParameterList	"size_t nmemb , size_t size , size_t offset"		68172	3					
ANR	68196	Parameter	size_t nmemb	2513:42:77141:77152	68172	0	True				
ANR	68197	ParameterType	size_t		68172	0					
ANR	68198	Identifier	nmemb		68172	1					
ANR	68199	Parameter	size_t size	2513:56:77155:77165	68172	1	True				
ANR	68200	ParameterType	size_t		68172	0					
ANR	68201	Identifier	size		68172	1					
ANR	68202	Parameter	size_t offset	2513:69:77168:77180	68172	2	True				
ANR	68203	ParameterType	size_t		68172	0					
ANR	68204	Identifier	offset		68172	1					
ANR	68205	CFGEntryNode	ENTRY		68172		True				
ANR	68206	CFGExitNode	EXIT		68172		True				
ANR	68207	Symbol	size		68172						
ANR	68208	Symbol	offset		68172						
ANR	68209	Symbol	nmemb		68172						
ANR	68210	Symbol	safe_address		68172						
ANR	68211	Symbol	pemalloc		68172						
ANR	68212	Function	_safe_erealloc	2518:15:77259:77446							
ANR	68213	FunctionDef	"_safe_erealloc (void * ptr , size_t nmemb , size_t size , size_t offset ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC)"		68212	0					
ANR	68214	CompoundStatement		2519:0:77382:77446	68212	0					
ANR	68215	ReturnStatement	"return erealloc_rel ( ptr , safe_address ( nmemb , size , offset ) ) ;"	2520:1:77385:77444	68212	0	True				
ANR	68216	CallExpression	"erealloc_rel ( ptr , safe_address ( nmemb , size , offset ) )"		68212	0					
ANR	68217	Callee	erealloc_rel		68212	0					
ANR	68218	Identifier	erealloc_rel		68212	0					
ANR	68219	ArgumentList	ptr		68212	1					
ANR	68220	Argument	ptr		68212	0					
ANR	68221	Identifier	ptr		68212	0					
ANR	68222	Argument	"safe_address ( nmemb , size , offset )"		68212	1					
ANR	68223	CallExpression	"safe_address ( nmemb , size , offset )"		68212	0					
ANR	68224	Callee	safe_address		68212	0					
ANR	68225	Identifier	safe_address		68212	0					
ANR	68226	ArgumentList	nmemb		68212	1					
ANR	68227	Argument	nmemb		68212	0					
ANR	68228	Identifier	nmemb		68212	0					
ANR	68229	Argument	size		68212	1					
ANR	68230	Identifier	size		68212	0					
ANR	68231	Argument	offset		68212	2					
ANR	68232	Identifier	offset		68212	0					
ANR	68233	ReturnType	ZEND_FASTCALL		68212	1					
ANR	68234	Identifier	_safe_erealloc		68212	2					
ANR	68235	ParameterList	"void * ptr , size_t nmemb , size_t size , size_t offset ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC"		68212	3					
ANR	68236	Parameter	void * ptr	2518:44:77288:77296	68212	0	True				
ANR	68237	ParameterType	void *		68212	0					
ANR	68238	Identifier	ptr		68212	1					
ANR	68239	Parameter	size_t nmemb	2518:55:77299:77310	68212	1	True				
ANR	68240	ParameterType	size_t		68212	0					
ANR	68241	Identifier	nmemb		68212	1					
ANR	68242	Parameter	size_t size	2518:69:77313:77323	68212	2	True				
ANR	68243	ParameterType	size_t		68212	0					
ANR	68244	Identifier	size		68212	1					
ANR	68245	Parameter	size_t offset ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC	2518:82:77326:77379	68212	3	True				
ANR	68246	ParameterType	size_t offset ZEND_FILE_LINE_DC		68212	0					
ANR	68247	Identifier	ZEND_FILE_LINE_ORIG_DC		68212	1					
ANR	68248	CFGEntryNode	ENTRY		68212		True				
ANR	68249	CFGExitNode	EXIT		68212		True				
ANR	68250	Symbol	size		68212						
ANR	68251	Symbol	offset		68212						
ANR	68252	Symbol	erealloc_rel		68212						
ANR	68253	Symbol	nmemb		68212						
ANR	68254	Symbol	ZEND_FILE_LINE_ORIG_DC		68212						
ANR	68255	Symbol	safe_address		68212						
ANR	68256	Symbol	ptr		68212						
ANR	68257	Function	_safe_realloc	2523:15:77464:77609							
ANR	68258	FunctionDef	"_safe_realloc (void * ptr , size_t nmemb , size_t size , size_t offset)"		68257	0					
ANR	68259	CompoundStatement		2524:0:77545:77609	68257	0					
ANR	68260	ReturnStatement	"return perealloc ( ptr , safe_address ( nmemb , size , offset ) , 1 ) ;"	2525:1:77548:77607	68257	0	True				
ANR	68261	CallExpression	"perealloc ( ptr , safe_address ( nmemb , size , offset ) , 1 )"		68257	0					
ANR	68262	Callee	perealloc		68257	0					
ANR	68263	Identifier	perealloc		68257	0					
ANR	68264	ArgumentList	ptr		68257	1					
ANR	68265	Argument	ptr		68257	0					
ANR	68266	Identifier	ptr		68257	0					
ANR	68267	Argument	"safe_address ( nmemb , size , offset )"		68257	1					
ANR	68268	CallExpression	"safe_address ( nmemb , size , offset )"		68257	0					
ANR	68269	Callee	safe_address		68257	0					
ANR	68270	Identifier	safe_address		68257	0					
ANR	68271	ArgumentList	nmemb		68257	1					
ANR	68272	Argument	nmemb		68257	0					
ANR	68273	Identifier	nmemb		68257	0					
ANR	68274	Argument	size		68257	1					
ANR	68275	Identifier	size		68257	0					
ANR	68276	Argument	offset		68257	2					
ANR	68277	Identifier	offset		68257	0					
ANR	68278	Argument	1		68257	2					
ANR	68279	PrimaryExpression	1		68257	0					
ANR	68280	ReturnType	ZEND_FASTCALL		68257	1					
ANR	68281	Identifier	_safe_realloc		68257	2					
ANR	68282	ParameterList	"void * ptr , size_t nmemb , size_t size , size_t offset"		68257	3					
ANR	68283	Parameter	void * ptr	2523:43:77492:77500	68257	0	True				
ANR	68284	ParameterType	void *		68257	0					
ANR	68285	Identifier	ptr		68257	1					
ANR	68286	Parameter	size_t nmemb	2523:54:77503:77514	68257	1	True				
ANR	68287	ParameterType	size_t		68257	0					
ANR	68288	Identifier	nmemb		68257	1					
ANR	68289	Parameter	size_t size	2523:68:77517:77527	68257	2	True				
ANR	68290	ParameterType	size_t		68257	0					
ANR	68291	Identifier	size		68257	1					
ANR	68292	Parameter	size_t offset	2523:81:77530:77542	68257	3	True				
ANR	68293	ParameterType	size_t		68257	0					
ANR	68294	Identifier	offset		68257	1					
ANR	68295	CFGEntryNode	ENTRY		68257		True				
ANR	68296	CFGExitNode	EXIT		68257		True				
ANR	68297	Symbol	size		68257						
ANR	68298	Symbol	offset		68257						
ANR	68299	Symbol	nmemb		68257						
ANR	68300	Symbol	safe_address		68257						
ANR	68301	Symbol	perealloc		68257						
ANR	68302	Symbol	ptr		68257						
ANR	68303	Function	_ecalloc	2529:15:77628:77906							
ANR	68304	FunctionDef	"_ecalloc (size_t nmemb , size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC)"		68303	0					
ANR	68305	CompoundStatement		2530:0:77719:77906	68303	0					
ANR	68306	IdentifierDeclStatement	void * p ;	2531:1:77722:77729	68303	0	True				
ANR	68307	IdentifierDecl	* p		68303	0					
ANR	68308	IdentifierDeclType	void *		68303	0					
ANR	68309	Identifier	p		68303	1					
ANR	68310	Statement	p	2533:1:77733:77733	68303	1	True				
ANR	68311	Statement	=	2533:3:77735:77735	68303	2	True				
ANR	68312	Statement	_safe_emalloc	2533:5:77737:77749	68303	3	True				
ANR	68313	Statement	(	2533:18:77750:77750	68303	4	True				
ANR	68314	Statement	nmemb	2533:19:77751:77755	68303	5	True				
ANR	68315	Statement	","	2533:24:77756:77756	68303	6	True				
ANR	68316	Statement	size	2533:26:77758:77761	68303	7	True				
ANR	68317	Statement	","	2533:30:77762:77762	68303	8	True				
ANR	68318	Statement	0	2533:32:77764:77764	68303	9	True				
ANR	68319	Statement	ZEND_FILE_LINE_RELAY_CC	2533:34:77766:77788	68303	10	True				
ANR	68320	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	2533:58:77790:77817	68303	11	True				
ANR	68321	Statement	)	2533:86:77818:77818	68303	12	True				
ANR	68322	ExpressionStatement		2533:87:77819:77819	68303	13	True				
ANR	68323	IfStatement	if ( UNEXPECTED ( p == NULL ) )		68303	14					
ANR	68324	Condition	UNEXPECTED ( p == NULL )	2534:5:77826:77846	68303	0	True				
ANR	68325	CallExpression	UNEXPECTED ( p == NULL )		68303	0					
ANR	68326	Callee	UNEXPECTED		68303	0					
ANR	68327	Identifier	UNEXPECTED		68303	0					
ANR	68328	ArgumentList	p == NULL		68303	1					
ANR	68329	Argument	p == NULL		68303	0					
ANR	68330	EqualityExpression	p == NULL		68303	0		==			
ANR	68331	Identifier	p		68303	0					
ANR	68332	Identifier	NULL		68303	1					
ANR	68333	CompoundStatement		5:28:129:129	68303	1					
ANR	68334	ReturnStatement	return p ;	2535:2:77853:77861	68303	0	True				
ANR	68335	Identifier	p		68303	0					
ANR	68336	ExpressionStatement	"memset ( p , 0 , size * nmemb )"	2537:1:77867:77893	68303	15	True				
ANR	68337	CallExpression	"memset ( p , 0 , size * nmemb )"		68303	0					
ANR	68338	Callee	memset		68303	0					
ANR	68339	Identifier	memset		68303	0					
ANR	68340	ArgumentList	p		68303	1					
ANR	68341	Argument	p		68303	0					
ANR	68342	Identifier	p		68303	0					
ANR	68343	Argument	0		68303	1					
ANR	68344	PrimaryExpression	0		68303	0					
ANR	68345	Argument	size * nmemb		68303	2					
ANR	68346	MultiplicativeExpression	size * nmemb		68303	0		*			
ANR	68347	Identifier	size		68303	0					
ANR	68348	Identifier	nmemb		68303	1					
ANR	68349	ReturnStatement	return p ;	2538:1:77896:77904	68303	16	True				
ANR	68350	Identifier	p		68303	0					
ANR	68351	ReturnType	ZEND_FASTCALL		68303	1					
ANR	68352	Identifier	_ecalloc		68303	2					
ANR	68353	ParameterList	"size_t nmemb , size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC"		68303	3					
ANR	68354	Parameter	size_t nmemb	2529:38:77651:77662	68303	0	True				
ANR	68355	ParameterType	size_t		68303	0					
ANR	68356	Identifier	nmemb		68303	1					
ANR	68357	Parameter	size_t size ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC	2529:52:77665:77716	68303	1	True				
ANR	68358	ParameterType	size_t size ZEND_FILE_LINE_DC		68303	0					
ANR	68359	Identifier	ZEND_FILE_LINE_ORIG_DC		68303	1					
ANR	68360	CFGEntryNode	ENTRY		68303		True				
ANR	68361	CFGExitNode	EXIT		68303		True				
ANR	68362	Symbol	p		68303						
ANR	68363	Symbol	UNEXPECTED		68303						
ANR	68364	Symbol	NULL		68303						
ANR	68365	Symbol	size		68303						
ANR	68366	Symbol	nmemb		68303						
ANR	68367	Symbol	ZEND_FILE_LINE_ORIG_DC		68303						
ANR	68368	DeclStmt									
ANR	68369	Decl							size_t	size_t	length
ANR	68370	DeclStmt									
ANR	68371	Decl							char	char *	p
ANR	68372	Function	_estrndup	2558:15:78394:78839							
ANR	68373	FunctionDef	"_estrndup (const char * s , size_t length ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC)"		68372	0					
ANR	68374	CompoundStatement		2559:0:78489:78839	68372	0					
ANR	68375	IdentifierDeclStatement	char * p ;	2560:1:78492:78499	68372	0	True				
ANR	68376	IdentifierDecl	* p		68372	0					
ANR	68377	IdentifierDeclType	char *		68372	0					
ANR	68378	Identifier	p		68372	1					
ANR	68379	IfStatement	if ( UNEXPECTED ( length + 1 == 0 ) )		68372	1					
ANR	68380	Condition	UNEXPECTED ( length + 1 == 0 )	2562:5:78507:78533	68372	0	True				
ANR	68381	CallExpression	UNEXPECTED ( length + 1 == 0 )		68372	0					
ANR	68382	Callee	UNEXPECTED		68372	0					
ANR	68383	Identifier	UNEXPECTED		68372	0					
ANR	68384	ArgumentList	length + 1 == 0		68372	1					
ANR	68385	Argument	length + 1 == 0		68372	0					
ANR	68386	EqualityExpression	length + 1 == 0		68372	0		==			
ANR	68387	AdditiveExpression	length + 1		68372	0		+			
ANR	68388	Identifier	length		68372	0					
ANR	68389	PrimaryExpression	1		68372	1					
ANR	68390	PrimaryExpression	0		68372	1					
ANR	68391	CompoundStatement		4:34:46:46	68372	1					
ANR	68392	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Possible integer overflow in memory allocation (%zu * %zu + %zu)"" , 1 , length , 1 )"	2563:2:78540:78650	68372	0	True				
ANR	68393	CallExpression	"zend_error_noreturn ( E_ERROR , ""Possible integer overflow in memory allocation (%zu * %zu + %zu)"" , 1 , length , 1 )"		68372	0					
ANR	68394	Callee	zend_error_noreturn		68372	0					
ANR	68395	Identifier	zend_error_noreturn		68372	0					
ANR	68396	ArgumentList	E_ERROR		68372	1					
ANR	68397	Argument	E_ERROR		68372	0					
ANR	68398	Identifier	E_ERROR		68372	0					
ANR	68399	Argument	"""Possible integer overflow in memory allocation (%zu * %zu + %zu)"""		68372	1					
ANR	68400	PrimaryExpression	"""Possible integer overflow in memory allocation (%zu * %zu + %zu)"""		68372	0					
ANR	68401	Argument	1		68372	2					
ANR	68402	PrimaryExpression	1		68372	0					
ANR	68403	Argument	length		68372	3					
ANR	68404	Identifier	length		68372	0					
ANR	68405	Argument	1		68372	4					
ANR	68406	PrimaryExpression	1		68372	0					
ANR	68407	Statement	p	2565:1:78656:78656	68372	2	True				
ANR	68408	Statement	=	2565:3:78658:78658	68372	3	True				
ANR	68409	Statement	(	2565:5:78660:78660	68372	4	True				
ANR	68410	Statement	char	2565:6:78661:78664	68372	5	True				
ANR	68411	Statement	*	2565:11:78666:78666	68372	6	True				
ANR	68412	Statement	)	2565:12:78667:78667	68372	7	True				
ANR	68413	Statement	_emalloc	2565:14:78669:78676	68372	8	True				
ANR	68414	Statement	(	2565:22:78677:78677	68372	9	True				
ANR	68415	Statement	length	2565:23:78678:78683	68372	10	True				
ANR	68416	Statement	+	2565:30:78685:78685	68372	11	True				
ANR	68417	Statement	1	2565:32:78687:78687	68372	12	True				
ANR	68418	Statement	ZEND_FILE_LINE_RELAY_CC	2565:34:78689:78711	68372	13	True				
ANR	68419	Statement	ZEND_FILE_LINE_ORIG_RELAY_CC	2565:58:78713:78740	68372	14	True				
ANR	68420	Statement	)	2565:86:78741:78741	68372	15	True				
ANR	68421	ExpressionStatement		2565:87:78742:78742	68372	16	True				
ANR	68422	IfStatement	if ( UNEXPECTED ( p == NULL ) )		68372	17					
ANR	68423	Condition	UNEXPECTED ( p == NULL )	2566:5:78749:78769	68372	0	True				
ANR	68424	CallExpression	UNEXPECTED ( p == NULL )		68372	0					
ANR	68425	Callee	UNEXPECTED		68372	0					
ANR	68426	Identifier	UNEXPECTED		68372	0					
ANR	68427	ArgumentList	p == NULL		68372	1					
ANR	68428	Argument	p == NULL		68372	0					
ANR	68429	EqualityExpression	p == NULL		68372	0		==			
ANR	68430	Identifier	p		68372	0					
ANR	68431	Identifier	NULL		68372	1					
ANR	68432	CompoundStatement		8:28:282:282	68372	1					
ANR	68433	ReturnStatement	return p ;	2567:2:78776:78784	68372	0	True				
ANR	68434	Identifier	p		68372	0					
ANR	68435	ExpressionStatement	"memcpy ( p , s , length )"	2569:1:78790:78810	68372	18	True				
ANR	68436	CallExpression	"memcpy ( p , s , length )"		68372	0					
ANR	68437	Callee	memcpy		68372	0					
ANR	68438	Identifier	memcpy		68372	0					
ANR	68439	ArgumentList	p		68372	1					
ANR	68440	Argument	p		68372	0					
ANR	68441	Identifier	p		68372	0					
ANR	68442	Argument	s		68372	1					
ANR	68443	Identifier	s		68372	0					
ANR	68444	Argument	length		68372	2					
ANR	68445	Identifier	length		68372	0					
ANR	68446	ExpressionStatement	p [ length ] = 0	2570:1:78813:78826	68372	19	True				
ANR	68447	AssignmentExpression	p [ length ] = 0		68372	0		=			
ANR	68448	ArrayIndexing	p [ length ]		68372	0					
ANR	68449	Identifier	p		68372	0					
ANR	68450	Identifier	length		68372	1					
ANR	68451	PrimaryExpression	0		68372	1					
ANR	68452	ReturnStatement	return p ;	2571:1:78829:78837	68372	20	True				
ANR	68453	Identifier	p		68372	0					
ANR	68454	ReturnType	ZEND_FASTCALL		68372	1					
ANR	68455	Identifier	_estrndup		68372	2					
ANR	68456	ParameterList	"const char * s , size_t length ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC"		68372	3					
ANR	68457	Parameter	const char * s	2558:39:78418:78430	68372	0	True				
ANR	68458	ParameterType	const char *		68372	0					
ANR	68459	Identifier	s		68372	1					
ANR	68460	Parameter	size_t length ZEND_FILE_LINE_DC ZEND_FILE_LINE_ORIG_DC	2558:54:78433:78486	68372	1	True				
ANR	68461	ParameterType	size_t length ZEND_FILE_LINE_DC		68372	0					
ANR	68462	Identifier	ZEND_FILE_LINE_ORIG_DC		68372	1					
ANR	68463	CFGEntryNode	ENTRY		68372		True				
ANR	68464	CFGExitNode	EXIT		68372		True				
ANR	68465	Symbol	p		68372						
ANR	68466	Symbol	UNEXPECTED		68372						
ANR	68467	Symbol	s		68372						
ANR	68468	Symbol	E_ERROR		68372						
ANR	68469	Symbol	NULL		68372						
ANR	68470	Symbol	length		68372						
ANR	68471	Symbol	ZEND_FILE_LINE_ORIG_DC		68372						
ANR	68472	Symbol	* length		68372						
ANR	68473	Symbol	* p		68372						
ANR	68474	Function	zend_strndup	2575:15:78858:79239							
ANR	68475	FunctionDef	"zend_strndup (const char * s , size_t length)"		68474	0					
ANR	68476	CompoundStatement		2576:0:78915:79239	68474	0					
ANR	68477	IdentifierDeclStatement	char * p ;	2577:1:78918:78925	68474	0	True				
ANR	68478	IdentifierDecl	* p		68474	0					
ANR	68479	IdentifierDeclType	char *		68474	0					
ANR	68480	Identifier	p		68474	1					
ANR	68481	IfStatement	if ( UNEXPECTED ( length + 1 == 0 ) )		68474	1					
ANR	68482	Condition	UNEXPECTED ( length + 1 == 0 )	2579:5:78933:78959	68474	0	True				
ANR	68483	CallExpression	UNEXPECTED ( length + 1 == 0 )		68474	0					
ANR	68484	Callee	UNEXPECTED		68474	0					
ANR	68485	Identifier	UNEXPECTED		68474	0					
ANR	68486	ArgumentList	length + 1 == 0		68474	1					
ANR	68487	Argument	length + 1 == 0		68474	0					
ANR	68488	EqualityExpression	length + 1 == 0		68474	0		==			
ANR	68489	AdditiveExpression	length + 1		68474	0		+			
ANR	68490	Identifier	length		68474	0					
ANR	68491	PrimaryExpression	1		68474	1					
ANR	68492	PrimaryExpression	0		68474	1					
ANR	68493	CompoundStatement		4:34:46:46	68474	1					
ANR	68494	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Possible integer overflow in memory allocation (%zu * %zu + %zu)"" , 1 , length , 1 )"	2580:2:78966:79076	68474	0	True				
ANR	68495	CallExpression	"zend_error_noreturn ( E_ERROR , ""Possible integer overflow in memory allocation (%zu * %zu + %zu)"" , 1 , length , 1 )"		68474	0					
ANR	68496	Callee	zend_error_noreturn		68474	0					
ANR	68497	Identifier	zend_error_noreturn		68474	0					
ANR	68498	ArgumentList	E_ERROR		68474	1					
ANR	68499	Argument	E_ERROR		68474	0					
ANR	68500	Identifier	E_ERROR		68474	0					
ANR	68501	Argument	"""Possible integer overflow in memory allocation (%zu * %zu + %zu)"""		68474	1					
ANR	68502	PrimaryExpression	"""Possible integer overflow in memory allocation (%zu * %zu + %zu)"""		68474	0					
ANR	68503	Argument	1		68474	2					
ANR	68504	PrimaryExpression	1		68474	0					
ANR	68505	Argument	length		68474	3					
ANR	68506	Identifier	length		68474	0					
ANR	68507	Argument	1		68474	4					
ANR	68508	PrimaryExpression	1		68474	0					
ANR	68509	ExpressionStatement	p = ( char * ) malloc ( length + 1 )	2582:1:79082:79113	68474	2	True				
ANR	68510	AssignmentExpression	p = ( char * ) malloc ( length + 1 )		68474	0		=			
ANR	68511	Identifier	p		68474	0					
ANR	68512	CastExpression	( char * ) malloc ( length + 1 )		68474	1					
ANR	68513	CastTarget	char *		68474	0					
ANR	68514	CallExpression	malloc ( length + 1 )		68474	1					
ANR	68515	Callee	malloc		68474	0					
ANR	68516	Identifier	malloc		68474	0					
ANR	68517	ArgumentList	length + 1		68474	1					
ANR	68518	Argument	length + 1		68474	0					
ANR	68519	AdditiveExpression	length + 1		68474	0		+			
ANR	68520	Identifier	length		68474	0					
ANR	68521	PrimaryExpression	1		68474	1					
ANR	68522	IfStatement	if ( UNEXPECTED ( p == NULL ) )		68474	3					
ANR	68523	Condition	UNEXPECTED ( p == NULL )	2583:5:79120:79140	68474	0	True				
ANR	68524	CallExpression	UNEXPECTED ( p == NULL )		68474	0					
ANR	68525	Callee	UNEXPECTED		68474	0					
ANR	68526	Identifier	UNEXPECTED		68474	0					
ANR	68527	ArgumentList	p == NULL		68474	1					
ANR	68528	Argument	p == NULL		68474	0					
ANR	68529	EqualityExpression	p == NULL		68474	0		==			
ANR	68530	Identifier	p		68474	0					
ANR	68531	Identifier	NULL		68474	1					
ANR	68532	CompoundStatement		8:28:227:227	68474	1					
ANR	68533	ReturnStatement	return p ;	2584:2:79147:79155	68474	0	True				
ANR	68534	Identifier	p		68474	0					
ANR	68535	IfStatement	if ( EXPECTED ( length ) )		68474	4					
ANR	68536	Condition	EXPECTED ( length )	2586:5:79165:79180	68474	0	True				
ANR	68537	CallExpression	EXPECTED ( length )		68474	0					
ANR	68538	Callee	EXPECTED		68474	0					
ANR	68539	Identifier	EXPECTED		68474	0					
ANR	68540	ArgumentList	length		68474	1					
ANR	68541	Argument	length		68474	0					
ANR	68542	Identifier	length		68474	0					
ANR	68543	CompoundStatement		11:23:267:267	68474	1					
ANR	68544	ExpressionStatement	"memcpy ( p , s , length )"	2587:2:79187:79207	68474	0	True				
ANR	68545	CallExpression	"memcpy ( p , s , length )"		68474	0					
ANR	68546	Callee	memcpy		68474	0					
ANR	68547	Identifier	memcpy		68474	0					
ANR	68548	ArgumentList	p		68474	1					
ANR	68549	Argument	p		68474	0					
ANR	68550	Identifier	p		68474	0					
ANR	68551	Argument	s		68474	1					
ANR	68552	Identifier	s		68474	0					
ANR	68553	Argument	length		68474	2					
ANR	68554	Identifier	length		68474	0					
ANR	68555	ExpressionStatement	p [ length ] = 0	2589:1:79213:79226	68474	5	True				
ANR	68556	AssignmentExpression	p [ length ] = 0		68474	0		=			
ANR	68557	ArrayIndexing	p [ length ]		68474	0					
ANR	68558	Identifier	p		68474	0					
ANR	68559	Identifier	length		68474	1					
ANR	68560	PrimaryExpression	0		68474	1					
ANR	68561	ReturnStatement	return p ;	2590:1:79229:79237	68474	6	True				
ANR	68562	Identifier	p		68474	0					
ANR	68563	ReturnType	ZEND_FASTCALL		68474	1					
ANR	68564	Identifier	zend_strndup		68474	2					
ANR	68565	ParameterList	"const char * s , size_t length"		68474	3					
ANR	68566	Parameter	const char * s	2575:42:78885:78897	68474	0	True				
ANR	68567	ParameterType	const char *		68474	0					
ANR	68568	Identifier	s		68474	1					
ANR	68569	Parameter	size_t length	2575:57:78900:78912	68474	1	True				
ANR	68570	ParameterType	size_t		68474	0					
ANR	68571	Identifier	length		68474	1					
ANR	68572	CFGEntryNode	ENTRY		68474		True				
ANR	68573	CFGExitNode	EXIT		68474		True				
ANR	68574	Symbol	p		68474						
ANR	68575	Symbol	UNEXPECTED		68474						
ANR	68576	Symbol	malloc		68474						
ANR	68577	Symbol	s		68474						
ANR	68578	Symbol	E_ERROR		68474						
ANR	68579	Symbol	NULL		68474						
ANR	68580	Symbol	length		68474						
ANR	68581	Symbol	* length		68474						
ANR	68582	Symbol	* p		68474						
ANR	68583	Symbol	EXPECTED		68474						
ANR	68584	Function	zend_set_memory_limit	2594:0:79243:79439							
ANR	68585	FunctionDef	zend_set_memory_limit (size_t memory_limit)		68584	0					
ANR	68586	CompoundStatement		2595:0:79299:79439	68584	0					
ANR	68587	ExpressionStatement	AG ( mm_heap ) -> limit = ( memory_limit >= ZEND_MM_CHUNK_SIZE ) ? memory_limit : ZEND_MM_CHUNK_SIZE	2597:1:79320:79413	68584	0	True				
ANR	68588	AssignmentExpression	AG ( mm_heap ) -> limit = ( memory_limit >= ZEND_MM_CHUNK_SIZE ) ? memory_limit : ZEND_MM_CHUNK_SIZE		68584	0		=			
ANR	68589	PtrMemberAccess	AG ( mm_heap ) -> limit		68584	0					
ANR	68590	CallExpression	AG ( mm_heap )		68584	0					
ANR	68591	Callee	AG		68584	0					
ANR	68592	Identifier	AG		68584	0					
ANR	68593	ArgumentList	mm_heap		68584	1					
ANR	68594	Argument	mm_heap		68584	0					
ANR	68595	Identifier	mm_heap		68584	0					
ANR	68596	Identifier	limit		68584	1					
ANR	68597	ConditionalExpression	( memory_limit >= ZEND_MM_CHUNK_SIZE ) ? memory_limit : ZEND_MM_CHUNK_SIZE		68584	1					
ANR	68598	Condition	memory_limit >= ZEND_MM_CHUNK_SIZE		68584	0					
ANR	68599	RelationalExpression	memory_limit >= ZEND_MM_CHUNK_SIZE		68584	0		>=			
ANR	68600	Identifier	memory_limit		68584	0					
ANR	68601	Identifier	ZEND_MM_CHUNK_SIZE		68584	1					
ANR	68602	Identifier	memory_limit		68584	1					
ANR	68603	Identifier	ZEND_MM_CHUNK_SIZE		68584	2					
ANR	68604	ReturnStatement	return SUCCESS ;	2599:1:79423:79437	68584	1	True				
ANR	68605	Identifier	SUCCESS		68584	0					
ANR	68606	ReturnType	ZEND_API int		68584	1					
ANR	68607	Identifier	zend_set_memory_limit		68584	2					
ANR	68608	ParameterList	size_t memory_limit		68584	3					
ANR	68609	Parameter	size_t memory_limit	2594:35:79278:79296	68584	0	True				
ANR	68610	ParameterType	size_t		68584	0					
ANR	68611	Identifier	memory_limit		68584	1					
ANR	68612	CFGEntryNode	ENTRY		68584		True				
ANR	68613	CFGExitNode	EXIT		68584		True				
ANR	68614	Symbol	SUCCESS		68584						
ANR	68615	Symbol	AG		68584						
ANR	68616	Symbol	AG ( mm_heap ) -> limit		68584						
ANR	68617	Symbol	mm_heap		68584						
ANR	68618	Symbol	ZEND_MM_CHUNK_SIZE		68584						
ANR	68619	Symbol	memory_limit		68584						
ANR	68620	Symbol	* AG		68584						
ANR	68621	Function	zend_memory_usage	2602:0:79442:79646							
ANR	68622	FunctionDef	zend_memory_usage (int real_usage)		68621	0					
ANR	68623	CompoundStatement		2603:0:79492:79646	68621	0					
ANR	68624	IfStatement	if ( real_usage )		68621	0					
ANR	68625	Condition	real_usage	2605:5:79516:79525	68621	0	True				
ANR	68626	Identifier	real_usage		68621	0					
ANR	68627	CompoundStatement		3:17:35:35	68621	1					
ANR	68628	ReturnStatement	return AG ( mm_heap ) -> real_size ;	2606:2:79532:79561	68621	0	True				
ANR	68629	PtrMemberAccess	AG ( mm_heap ) -> real_size		68621	0					
ANR	68630	CallExpression	AG ( mm_heap )		68621	0					
ANR	68631	Callee	AG		68621	0					
ANR	68632	Identifier	AG		68621	0					
ANR	68633	ArgumentList	mm_heap		68621	1					
ANR	68634	Argument	mm_heap		68621	0					
ANR	68635	Identifier	mm_heap		68621	0					
ANR	68636	Identifier	real_size		68621	1					
ANR	68637	ElseStatement	else		68621	0					
ANR	68638	CompoundStatement		6:2:82:114	68621	0					
ANR	68639	IdentifierDeclStatement	size_t usage = AG ( mm_heap ) -> size ;	2608:2:79575:79607	68621	0	True				
ANR	68640	IdentifierDecl	usage = AG ( mm_heap ) -> size		68621	0					
ANR	68641	IdentifierDeclType	size_t		68621	0					
ANR	68642	Identifier	usage		68621	1					
ANR	68643	AssignmentExpression	usage = AG ( mm_heap ) -> size		68621	2		=			
ANR	68644	Identifier	usage		68621	0					
ANR	68645	PtrMemberAccess	AG ( mm_heap ) -> size		68621	1					
ANR	68646	CallExpression	AG ( mm_heap )		68621	0					
ANR	68647	Callee	AG		68621	0					
ANR	68648	Identifier	AG		68621	0					
ANR	68649	ArgumentList	mm_heap		68621	1					
ANR	68650	Argument	mm_heap		68621	0					
ANR	68651	Identifier	mm_heap		68621	0					
ANR	68652	Identifier	size		68621	1					
ANR	68653	ReturnStatement	return usage ;	2609:2:79611:79623	68621	1	True				
ANR	68654	Identifier	usage		68621	0					
ANR	68655	ReturnStatement	return 0 ;	2612:1:79636:79644	68621	1	True				
ANR	68656	PrimaryExpression	0		68621	0					
ANR	68657	ReturnType	ZEND_API size_t		68621	1					
ANR	68658	Identifier	zend_memory_usage		68621	2					
ANR	68659	ParameterList	int real_usage		68621	3					
ANR	68660	Parameter	int real_usage	2602:34:79476:79489	68621	0	True				
ANR	68661	ParameterType	int		68621	0					
ANR	68662	Identifier	real_usage		68621	1					
ANR	68663	CFGEntryNode	ENTRY		68621		True				
ANR	68664	CFGExitNode	EXIT		68621		True				
ANR	68665	Symbol	AG ( mm_heap ) -> real_size		68621						
ANR	68666	Symbol	AG ( mm_heap ) -> size		68621						
ANR	68667	Symbol	AG		68621						
ANR	68668	Symbol	usage		68621						
ANR	68669	Symbol	mm_heap		68621						
ANR	68670	Symbol	real_usage		68621						
ANR	68671	Symbol	* AG		68621						
ANR	68672	Function	zend_memory_peak_usage	2615:0:79649:79834							
ANR	68673	FunctionDef	zend_memory_peak_usage (int real_usage)		68672	0					
ANR	68674	CompoundStatement		2616:0:79704:79834	68672	0					
ANR	68675	IfStatement	if ( real_usage )		68672	0					
ANR	68676	Condition	real_usage	2618:5:79728:79737	68672	0	True				
ANR	68677	Identifier	real_usage		68672	0					
ANR	68678	CompoundStatement		3:17:35:35	68672	1					
ANR	68679	ReturnStatement	return AG ( mm_heap ) -> real_peak ;	2619:2:79744:79773	68672	0	True				
ANR	68680	PtrMemberAccess	AG ( mm_heap ) -> real_peak		68672	0					
ANR	68681	CallExpression	AG ( mm_heap )		68672	0					
ANR	68682	Callee	AG		68672	0					
ANR	68683	Identifier	AG		68672	0					
ANR	68684	ArgumentList	mm_heap		68672	1					
ANR	68685	Argument	mm_heap		68672	0					
ANR	68686	Identifier	mm_heap		68672	0					
ANR	68687	Identifier	real_peak		68672	1					
ANR	68688	ElseStatement	else		68672	0					
ANR	68689	CompoundStatement		5:8:78:78	68672	0					
ANR	68690	ReturnStatement	return AG ( mm_heap ) -> peak ;	2621:2:79787:79811	68672	0	True				
ANR	68691	PtrMemberAccess	AG ( mm_heap ) -> peak		68672	0					
ANR	68692	CallExpression	AG ( mm_heap )		68672	0					
ANR	68693	Callee	AG		68672	0					
ANR	68694	Identifier	AG		68672	0					
ANR	68695	ArgumentList	mm_heap		68672	1					
ANR	68696	Argument	mm_heap		68672	0					
ANR	68697	Identifier	mm_heap		68672	0					
ANR	68698	Identifier	peak		68672	1					
ANR	68699	ReturnStatement	return 0 ;	2624:1:79824:79832	68672	1	True				
ANR	68700	PrimaryExpression	0		68672	0					
ANR	68701	ReturnType	ZEND_API size_t		68672	1					
ANR	68702	Identifier	zend_memory_peak_usage		68672	2					
ANR	68703	ParameterList	int real_usage		68672	3					
ANR	68704	Parameter	int real_usage	2615:39:79688:79701	68672	0	True				
ANR	68705	ParameterType	int		68672	0					
ANR	68706	Identifier	real_usage		68672	1					
ANR	68707	CFGEntryNode	ENTRY		68672		True				
ANR	68708	CFGExitNode	EXIT		68672		True				
ANR	68709	Symbol	AG ( mm_heap ) -> peak		68672						
ANR	68710	Symbol	AG		68672						
ANR	68711	Symbol	mm_heap		68672						
ANR	68712	Symbol	real_usage		68672						
ANR	68713	Symbol	AG ( mm_heap ) -> real_peak		68672						
ANR	68714	Symbol	* AG		68672						
ANR	68715	Function	shutdown_memory_manager	2627:0:79837:79963							
ANR	68716	FunctionDef	"shutdown_memory_manager (int silent , int full_shutdown)"		68715	0					
ANR	68717	CompoundStatement		2628:0:79906:79963	68715	0					
ANR	68718	ExpressionStatement	"zend_mm_shutdown ( AG ( mm_heap ) , full_shutdown , silent )"	2629:1:79909:79961	68715	0	True				
ANR	68719	CallExpression	"zend_mm_shutdown ( AG ( mm_heap ) , full_shutdown , silent )"		68715	0					
ANR	68720	Callee	zend_mm_shutdown		68715	0					
ANR	68721	Identifier	zend_mm_shutdown		68715	0					
ANR	68722	ArgumentList	AG ( mm_heap )		68715	1					
ANR	68723	Argument	AG ( mm_heap )		68715	0					
ANR	68724	CallExpression	AG ( mm_heap )		68715	0					
ANR	68725	Callee	AG		68715	0					
ANR	68726	Identifier	AG		68715	0					
ANR	68727	ArgumentList	mm_heap		68715	1					
ANR	68728	Argument	mm_heap		68715	0					
ANR	68729	Identifier	mm_heap		68715	0					
ANR	68730	Argument	full_shutdown		68715	1					
ANR	68731	Identifier	full_shutdown		68715	0					
ANR	68732	Argument	silent		68715	2					
ANR	68733	Identifier	silent		68715	0					
ANR	68734	ReturnType	ZEND_API void		68715	1					
ANR	68735	Identifier	shutdown_memory_manager		68715	2					
ANR	68736	ParameterList	"int silent , int full_shutdown"		68715	3					
ANR	68737	Parameter	int silent	2627:38:79875:79884	68715	0	True				
ANR	68738	ParameterType	int		68715	0					
ANR	68739	Identifier	silent		68715	1					
ANR	68740	Parameter	int full_shutdown	2627:50:79887:79903	68715	1	True				
ANR	68741	ParameterType	int		68715	0					
ANR	68742	Identifier	full_shutdown		68715	1					
ANR	68743	CFGEntryNode	ENTRY		68715		True				
ANR	68744	CFGExitNode	EXIT		68715		True				
ANR	68745	Symbol	silent		68715						
ANR	68746	Symbol	AG		68715						
ANR	68747	Symbol	mm_heap		68715						
ANR	68748	Symbol	full_shutdown		68715						
ANR	68749	Function	alloc_globals_ctor	2632:0:79966:80581							
ANR	68750	FunctionDef	alloc_globals_ctor (zend_alloc_globals * alloc_globals)		68749	0					
ANR	68751	CompoundStatement		2633:0:80032:80581	68749	0					
ANR	68752	IdentifierDeclStatement	"char * tmp = getenv ( ""USE_ZEND_ALLOC"" ) ;"	2635:1:80054:80090	68749	0	True				
ANR	68753	IdentifierDecl	"* tmp = getenv ( ""USE_ZEND_ALLOC"" )"		68749	0					
ANR	68754	IdentifierDeclType	char *		68749	0					
ANR	68755	Identifier	tmp		68749	1					
ANR	68756	AssignmentExpression	"* tmp = getenv ( ""USE_ZEND_ALLOC"" )"		68749	2		=			
ANR	68757	Identifier	tmp		68749	0					
ANR	68758	CallExpression	"getenv ( ""USE_ZEND_ALLOC"" )"		68749	1					
ANR	68759	Callee	getenv		68749	0					
ANR	68760	Identifier	getenv		68749	0					
ANR	68761	ArgumentList	"""USE_ZEND_ALLOC"""		68749	1					
ANR	68762	Argument	"""USE_ZEND_ALLOC"""		68749	0					
ANR	68763	PrimaryExpression	"""USE_ZEND_ALLOC"""		68749	0					
ANR	68764	IfStatement	"if ( tmp && ! zend_atoi ( tmp , 0 ) )"		68749	1					
ANR	68765	Condition	"tmp && ! zend_atoi ( tmp , 0 )"	2637:5:80098:80122	68749	0	True				
ANR	68766	AndExpression	"tmp && ! zend_atoi ( tmp , 0 )"		68749	0		&&			
ANR	68767	Identifier	tmp		68749	0					
ANR	68768	UnaryOperationExpression	"! zend_atoi ( tmp , 0 )"		68749	1					
ANR	68769	UnaryOperator	!		68749	0					
ANR	68770	CallExpression	"zend_atoi ( tmp , 0 )"		68749	1					
ANR	68771	Callee	zend_atoi		68749	0					
ANR	68772	Identifier	zend_atoi		68749	0					
ANR	68773	ArgumentList	tmp		68749	1					
ANR	68774	Argument	tmp		68749	0					
ANR	68775	Identifier	tmp		68749	0					
ANR	68776	Argument	0		68749	1					
ANR	68777	PrimaryExpression	0		68749	0					
ANR	68778	CompoundStatement		5:32:92:92	68749	1					
ANR	68779	ExpressionStatement	alloc_globals -> mm_heap = malloc ( sizeof ( zend_mm_heap ) )	2638:2:80129:80182	68749	0	True				
ANR	68780	AssignmentExpression	alloc_globals -> mm_heap = malloc ( sizeof ( zend_mm_heap ) )		68749	0		=			
ANR	68781	PtrMemberAccess	alloc_globals -> mm_heap		68749	0					
ANR	68782	Identifier	alloc_globals		68749	0					
ANR	68783	Identifier	mm_heap		68749	1					
ANR	68784	CallExpression	malloc ( sizeof ( zend_mm_heap ) )		68749	1					
ANR	68785	Callee	malloc		68749	0					
ANR	68786	Identifier	malloc		68749	0					
ANR	68787	ArgumentList	sizeof ( zend_mm_heap )		68749	1					
ANR	68788	Argument	sizeof ( zend_mm_heap )		68749	0					
ANR	68789	SizeofExpression	sizeof ( zend_mm_heap )		68749	0					
ANR	68790	Sizeof	sizeof		68749	0					
ANR	68791	SizeofOperand	zend_mm_heap		68749	1					
ANR	68792	ExpressionStatement	"memset ( alloc_globals -> mm_heap , 0 , sizeof ( zend_mm_heap ) )"	2639:2:80186:80241	68749	1	True				
ANR	68793	CallExpression	"memset ( alloc_globals -> mm_heap , 0 , sizeof ( zend_mm_heap ) )"		68749	0					
ANR	68794	Callee	memset		68749	0					
ANR	68795	Identifier	memset		68749	0					
ANR	68796	ArgumentList	alloc_globals -> mm_heap		68749	1					
ANR	68797	Argument	alloc_globals -> mm_heap		68749	0					
ANR	68798	PtrMemberAccess	alloc_globals -> mm_heap		68749	0					
ANR	68799	Identifier	alloc_globals		68749	0					
ANR	68800	Identifier	mm_heap		68749	1					
ANR	68801	Argument	0		68749	1					
ANR	68802	PrimaryExpression	0		68749	0					
ANR	68803	Argument	sizeof ( zend_mm_heap )		68749	2					
ANR	68804	SizeofExpression	sizeof ( zend_mm_heap )		68749	0					
ANR	68805	Sizeof	sizeof		68749	0					
ANR	68806	SizeofOperand	zend_mm_heap		68749	1					
ANR	68807	ExpressionStatement	alloc_globals -> mm_heap -> use_custom_heap = ZEND_MM_CUSTOM_HEAP_STD	2640:2:80245:80310	68749	2	True				
ANR	68808	AssignmentExpression	alloc_globals -> mm_heap -> use_custom_heap = ZEND_MM_CUSTOM_HEAP_STD		68749	0		=			
ANR	68809	PtrMemberAccess	alloc_globals -> mm_heap -> use_custom_heap		68749	0					
ANR	68810	PtrMemberAccess	alloc_globals -> mm_heap		68749	0					
ANR	68811	Identifier	alloc_globals		68749	0					
ANR	68812	Identifier	mm_heap		68749	1					
ANR	68813	Identifier	use_custom_heap		68749	1					
ANR	68814	Identifier	ZEND_MM_CUSTOM_HEAP_STD		68749	1					
ANR	68815	ExpressionStatement	alloc_globals -> mm_heap -> custom_heap . std . _malloc = malloc	2641:2:80314:80370	68749	3	True				
ANR	68816	AssignmentExpression	alloc_globals -> mm_heap -> custom_heap . std . _malloc = malloc		68749	0		=			
ANR	68817	MemberAccess	alloc_globals -> mm_heap -> custom_heap . std . _malloc		68749	0					
ANR	68818	MemberAccess	alloc_globals -> mm_heap -> custom_heap . std		68749	0					
ANR	68819	PtrMemberAccess	alloc_globals -> mm_heap -> custom_heap		68749	0					
ANR	68820	PtrMemberAccess	alloc_globals -> mm_heap		68749	0					
ANR	68821	Identifier	alloc_globals		68749	0					
ANR	68822	Identifier	mm_heap		68749	1					
ANR	68823	Identifier	custom_heap		68749	1					
ANR	68824	Identifier	std		68749	1					
ANR	68825	Identifier	_malloc		68749	1					
ANR	68826	Identifier	malloc		68749	1					
ANR	68827	ExpressionStatement	alloc_globals -> mm_heap -> custom_heap . std . _free = free	2642:2:80374:80426	68749	4	True				
ANR	68828	AssignmentExpression	alloc_globals -> mm_heap -> custom_heap . std . _free = free		68749	0		=			
ANR	68829	MemberAccess	alloc_globals -> mm_heap -> custom_heap . std . _free		68749	0					
ANR	68830	MemberAccess	alloc_globals -> mm_heap -> custom_heap . std		68749	0					
ANR	68831	PtrMemberAccess	alloc_globals -> mm_heap -> custom_heap		68749	0					
ANR	68832	PtrMemberAccess	alloc_globals -> mm_heap		68749	0					
ANR	68833	Identifier	alloc_globals		68749	0					
ANR	68834	Identifier	mm_heap		68749	1					
ANR	68835	Identifier	custom_heap		68749	1					
ANR	68836	Identifier	std		68749	1					
ANR	68837	Identifier	_free		68749	1					
ANR	68838	Identifier	free		68749	1					
ANR	68839	ExpressionStatement	alloc_globals -> mm_heap -> custom_heap . std . _realloc = realloc	2643:2:80430:80488	68749	5	True				
ANR	68840	AssignmentExpression	alloc_globals -> mm_heap -> custom_heap . std . _realloc = realloc		68749	0		=			
ANR	68841	MemberAccess	alloc_globals -> mm_heap -> custom_heap . std . _realloc		68749	0					
ANR	68842	MemberAccess	alloc_globals -> mm_heap -> custom_heap . std		68749	0					
ANR	68843	PtrMemberAccess	alloc_globals -> mm_heap -> custom_heap		68749	0					
ANR	68844	PtrMemberAccess	alloc_globals -> mm_heap		68749	0					
ANR	68845	Identifier	alloc_globals		68749	0					
ANR	68846	Identifier	mm_heap		68749	1					
ANR	68847	Identifier	custom_heap		68749	1					
ANR	68848	Identifier	std		68749	1					
ANR	68849	Identifier	_realloc		68749	1					
ANR	68850	Identifier	realloc		68749	1					
ANR	68851	ReturnStatement	return ;	2644:2:80492:80498	68749	6	True				
ANR	68852	ExpressionStatement	ZEND_TSRMLS_CACHE_UPDATE ( )	2647:1:80511:80537	68749	2	True				
ANR	68853	CallExpression	ZEND_TSRMLS_CACHE_UPDATE ( )		68749	0					
ANR	68854	Callee	ZEND_TSRMLS_CACHE_UPDATE		68749	0					
ANR	68855	Identifier	ZEND_TSRMLS_CACHE_UPDATE		68749	0					
ANR	68856	ArgumentList			68749	1					
ANR	68857	ExpressionStatement	alloc_globals -> mm_heap = zend_mm_init ( )	2648:1:80540:80579	68749	3	True				
ANR	68858	AssignmentExpression	alloc_globals -> mm_heap = zend_mm_init ( )		68749	0		=			
ANR	68859	PtrMemberAccess	alloc_globals -> mm_heap		68749	0					
ANR	68860	Identifier	alloc_globals		68749	0					
ANR	68861	Identifier	mm_heap		68749	1					
ANR	68862	CallExpression	zend_mm_init ( )		68749	1					
ANR	68863	Callee	zend_mm_init		68749	0					
ANR	68864	Identifier	zend_mm_init		68749	0					
ANR	68865	ArgumentList			68749	1					
ANR	68866	ReturnType	static void		68749	1					
ANR	68867	Identifier	alloc_globals_ctor		68749	2					
ANR	68868	ParameterList	zend_alloc_globals * alloc_globals		68749	3					
ANR	68869	Parameter	zend_alloc_globals * alloc_globals	2632:31:79997:80029	68749	0	True				
ANR	68870	ParameterType	zend_alloc_globals *		68749	0					
ANR	68871	Identifier	alloc_globals		68749	1					
ANR	68872	CFGEntryNode	ENTRY		68749		True				
ANR	68873	CFGExitNode	EXIT		68749		True				
ANR	68874	Symbol	malloc		68749						
ANR	68875	Symbol	* * alloc_globals		68749						
ANR	68876	Symbol	zend_mm_init		68749						
ANR	68877	Symbol	alloc_globals -> mm_heap		68749						
ANR	68878	Symbol	zend_atoi		68749						
ANR	68879	Symbol	* alloc_globals -> mm_heap		68749						
ANR	68880	Symbol	alloc_globals -> mm_heap -> custom_heap . std		68749						
ANR	68881	Symbol	realloc		68749						
ANR	68882	Symbol	alloc_globals		68749						
ANR	68883	Symbol	* alloc_globals		68749						
ANR	68884	Symbol	alloc_globals -> mm_heap -> use_custom_heap		68749						
ANR	68885	Symbol	ZEND_MM_CUSTOM_HEAP_STD		68749						
ANR	68886	Symbol	alloc_globals -> mm_heap -> custom_heap . std . _realloc		68749						
ANR	68887	Symbol	tmp		68749						
ANR	68888	Symbol	alloc_globals -> mm_heap -> custom_heap . std . _malloc		68749						
ANR	68889	Symbol	free		68749						
ANR	68890	Symbol	getenv		68749						
ANR	68891	Symbol	alloc_globals -> mm_heap -> custom_heap		68749						
ANR	68892	Symbol	alloc_globals -> mm_heap -> custom_heap . std . _free		68749						
ANR	68893	Function	alloc_globals_dtor	2652:0:80595:80712							
ANR	68894	FunctionDef	alloc_globals_dtor (zend_alloc_globals * alloc_globals)		68893	0					
ANR	68895	CompoundStatement		2653:0:80661:80712	68893	0					
ANR	68896	ExpressionStatement	"zend_mm_shutdown ( alloc_globals -> mm_heap , 1 , 1 )"	2654:1:80664:80710	68893	0	True				
ANR	68897	CallExpression	"zend_mm_shutdown ( alloc_globals -> mm_heap , 1 , 1 )"		68893	0					
ANR	68898	Callee	zend_mm_shutdown		68893	0					
ANR	68899	Identifier	zend_mm_shutdown		68893	0					
ANR	68900	ArgumentList	alloc_globals -> mm_heap		68893	1					
ANR	68901	Argument	alloc_globals -> mm_heap		68893	0					
ANR	68902	PtrMemberAccess	alloc_globals -> mm_heap		68893	0					
ANR	68903	Identifier	alloc_globals		68893	0					
ANR	68904	Identifier	mm_heap		68893	1					
ANR	68905	Argument	1		68893	1					
ANR	68906	PrimaryExpression	1		68893	0					
ANR	68907	Argument	1		68893	2					
ANR	68908	PrimaryExpression	1		68893	0					
ANR	68909	ReturnType	static void		68893	1					
ANR	68910	Identifier	alloc_globals_dtor		68893	2					
ANR	68911	ParameterList	zend_alloc_globals * alloc_globals		68893	3					
ANR	68912	Parameter	zend_alloc_globals * alloc_globals	2652:31:80626:80658	68893	0	True				
ANR	68913	ParameterType	zend_alloc_globals *		68893	0					
ANR	68914	Identifier	alloc_globals		68893	1					
ANR	68915	CFGEntryNode	ENTRY		68893		True				
ANR	68916	CFGExitNode	EXIT		68893		True				
ANR	68917	Symbol	* alloc_globals		68893						
ANR	68918	Symbol	alloc_globals -> mm_heap		68893						
ANR	68919	Symbol	alloc_globals		68893						
ANR	68920	Function	start_memory_manager	2658:0:80722:81141							
ANR	68921	FunctionDef	start_memory_manager ()		68920	0					
ANR	68922	CompoundStatement		2659:0:80763:81141	68920	0					
ANR	68923	ExpressionStatement	"ts_allocate_id ( & alloc_globals_id , sizeof ( zend_alloc_globals ) , ( ts_allocate_ctor ) alloc_globals_ctor , ( ts_allocate_dtor ) alloc_globals_dtor )"	2661:1:80777:80916	68920	0	True				
ANR	68924	CallExpression	"ts_allocate_id ( & alloc_globals_id , sizeof ( zend_alloc_globals ) , ( ts_allocate_ctor ) alloc_globals_ctor , ( ts_allocate_dtor ) alloc_globals_dtor )"		68920	0					
ANR	68925	Callee	ts_allocate_id		68920	0					
ANR	68926	Identifier	ts_allocate_id		68920	0					
ANR	68927	ArgumentList	& alloc_globals_id		68920	1					
ANR	68928	Argument	& alloc_globals_id		68920	0					
ANR	68929	UnaryOperationExpression	& alloc_globals_id		68920	0					
ANR	68930	UnaryOperator	&		68920	0					
ANR	68931	Identifier	alloc_globals_id		68920	1					
ANR	68932	Argument	sizeof ( zend_alloc_globals )		68920	1					
ANR	68933	SizeofExpression	sizeof ( zend_alloc_globals )		68920	0					
ANR	68934	Sizeof	sizeof		68920	0					
ANR	68935	SizeofOperand	zend_alloc_globals		68920	1					
ANR	68936	Argument	( ts_allocate_ctor ) alloc_globals_ctor		68920	2					
ANR	68937	CastExpression	( ts_allocate_ctor ) alloc_globals_ctor		68920	0					
ANR	68938	CastTarget	ts_allocate_ctor		68920	0					
ANR	68939	Identifier	alloc_globals_ctor		68920	1					
ANR	68940	Argument	( ts_allocate_dtor ) alloc_globals_dtor		68920	3					
ANR	68941	CastExpression	( ts_allocate_dtor ) alloc_globals_dtor		68920	0					
ANR	68942	CastTarget	ts_allocate_dtor		68920	0					
ANR	68943	Identifier	alloc_globals_dtor		68920	1					
ANR	68944	Statement	if	2666:3:80986:80987	68920	1	True				
ANR	68945	Statement	defined	2666:6:80989:80995	68920	2	True				
ANR	68946	ExpressionStatement	( _SC_PAGESIZE ) REAL_PAGE_SIZE = sysconf ( _SC_PAGESIZE )	2666:13:80996:81050	68920	3	True				
ANR	68947	AssignmentExpression	( _SC_PAGESIZE ) REAL_PAGE_SIZE = sysconf ( _SC_PAGESIZE )		68920	0		=			
ANR	68948	CastExpression	( _SC_PAGESIZE ) REAL_PAGE_SIZE		68920	0					
ANR	68949	CastTarget	_SC_PAGESIZE		68920	0					
ANR	68950	Identifier	REAL_PAGE_SIZE		68920	1					
ANR	68951	CallExpression	sysconf ( _SC_PAGESIZE )		68920	1					
ANR	68952	Callee	sysconf		68920	0					
ANR	68953	Identifier	sysconf		68920	0					
ANR	68954	ArgumentList	_SC_PAGESIZE		68920	1					
ANR	68955	Argument	_SC_PAGESIZE		68920	0					
ANR	68956	Identifier	_SC_PAGESIZE		68920	0					
ANR	68957	Statement	elif	2668:3:81055:81058	68920	4	True				
ANR	68958	Statement	defined	2668:8:81060:81066	68920	5	True				
ANR	68959	ExpressionStatement	( _SC_PAGE_SIZE ) REAL_PAGE_SIZE = sysconf ( _SC_PAGE_SIZE )	2668:15:81067:81123	68920	6	True				
ANR	68960	AssignmentExpression	( _SC_PAGE_SIZE ) REAL_PAGE_SIZE = sysconf ( _SC_PAGE_SIZE )		68920	0		=			
ANR	68961	CastExpression	( _SC_PAGE_SIZE ) REAL_PAGE_SIZE		68920	0					
ANR	68962	CastTarget	_SC_PAGE_SIZE		68920	0					
ANR	68963	Identifier	REAL_PAGE_SIZE		68920	1					
ANR	68964	CallExpression	sysconf ( _SC_PAGE_SIZE )		68920	1					
ANR	68965	Callee	sysconf		68920	0					
ANR	68966	Identifier	sysconf		68920	0					
ANR	68967	ArgumentList	_SC_PAGE_SIZE		68920	1					
ANR	68968	Argument	_SC_PAGE_SIZE		68920	0					
ANR	68969	Identifier	_SC_PAGE_SIZE		68920	0					
ANR	68970	Statement	endif	2670:3:81128:81132	68920	7	True				
ANR	68971	ReturnType	ZEND_API void		68920	1					
ANR	68972	Identifier	start_memory_manager		68920	2					
ANR	68973	ParameterList			68920	3					
ANR	68974	CFGEntryNode	ENTRY		68920		True				
ANR	68975	CFGExitNode	EXIT		68920		True				
ANR	68976	Symbol	REAL_PAGE_SIZE		68920						
ANR	68977	Symbol	alloc_globals_dtor		68920						
ANR	68978	Symbol	alloc_globals_ctor		68920						
ANR	68979	Symbol	& alloc_globals_id		68920						
ANR	68980	Symbol	sysconf		68920						
ANR	68981	Symbol	_SC_PAGE_SIZE		68920						
ANR	68982	Symbol	_SC_PAGESIZE		68920						
ANR	68983	Function	zend_mm_set_heap	2674:0:81144:81334							
ANR	68984	FunctionDef	zend_mm_set_heap (zend_mm_heap * new_heap)		68983	0					
ANR	68985	CompoundStatement		2675:0:81208:81334	68983	0					
ANR	68986	IdentifierDeclStatement	zend_mm_heap * old_heap ;	2676:1:81211:81233	68983	0	True				
ANR	68987	IdentifierDecl	* old_heap		68983	0					
ANR	68988	IdentifierDeclType	zend_mm_heap *		68983	0					
ANR	68989	Identifier	old_heap		68983	1					
ANR	68990	ExpressionStatement	old_heap = AG ( mm_heap )	2678:1:81237:81259	68983	1	True				
ANR	68991	AssignmentExpression	old_heap = AG ( mm_heap )		68983	0		=			
ANR	68992	Identifier	old_heap		68983	0					
ANR	68993	CallExpression	AG ( mm_heap )		68983	1					
ANR	68994	Callee	AG		68983	0					
ANR	68995	Identifier	AG		68983	0					
ANR	68996	ArgumentList	mm_heap		68983	1					
ANR	68997	Argument	mm_heap		68983	0					
ANR	68998	Identifier	mm_heap		68983	0					
ANR	68999	ExpressionStatement	AG ( mm_heap ) = ( zend_mm_heap * ) new_heap	2679:1:81262:81299	68983	2	True				
ANR	69000	AssignmentExpression	AG ( mm_heap ) = ( zend_mm_heap * ) new_heap		68983	0		=			
ANR	69001	CallExpression	AG ( mm_heap )		68983	0					
ANR	69002	Callee	AG		68983	0					
ANR	69003	Identifier	AG		68983	0					
ANR	69004	ArgumentList	mm_heap		68983	1					
ANR	69005	Argument	mm_heap		68983	0					
ANR	69006	Identifier	mm_heap		68983	0					
ANR	69007	CastExpression	( zend_mm_heap * ) new_heap		68983	1					
ANR	69008	CastTarget	zend_mm_heap *		68983	0					
ANR	69009	Identifier	new_heap		68983	1					
ANR	69010	ReturnStatement	return ( zend_mm_heap * ) old_heap ;	2680:1:81302:81332	68983	3	True				
ANR	69011	CastExpression	( zend_mm_heap * ) old_heap		68983	0					
ANR	69012	CastTarget	zend_mm_heap *		68983	0					
ANR	69013	Identifier	old_heap		68983	1					
ANR	69014	ReturnType	ZEND_API zend_mm_heap *		68983	1					
ANR	69015	Identifier	zend_mm_set_heap		68983	2					
ANR	69016	ParameterList	zend_mm_heap * new_heap		68983	3					
ANR	69017	Parameter	zend_mm_heap * new_heap	2674:40:81184:81205	68983	0	True				
ANR	69018	ParameterType	zend_mm_heap *		68983	0					
ANR	69019	Identifier	new_heap		68983	1					
ANR	69020	CFGEntryNode	ENTRY		68983		True				
ANR	69021	CFGExitNode	EXIT		68983		True				
ANR	69022	Symbol	AG		68983						
ANR	69023	Symbol	old_heap		68983						
ANR	69024	Symbol	new_heap		68983						
ANR	69025	Symbol	mm_heap		68983						
ANR	69026	Function	zend_mm_get_heap	2683:0:81337:81406							
ANR	69027	FunctionDef	zend_mm_get_heap ()		69026	0					
ANR	69028	CompoundStatement		2684:0:81383:81406	69026	0					
ANR	69029	ReturnStatement	return AG ( mm_heap ) ;	2685:1:81386:81404	69026	0	True				
ANR	69030	CallExpression	AG ( mm_heap )		69026	0					
ANR	69031	Callee	AG		69026	0					
ANR	69032	Identifier	AG		69026	0					
ANR	69033	ArgumentList	mm_heap		69026	1					
ANR	69034	Argument	mm_heap		69026	0					
ANR	69035	Identifier	mm_heap		69026	0					
ANR	69036	ReturnType	ZEND_API zend_mm_heap *		69026	1					
ANR	69037	Identifier	zend_mm_get_heap		69026	2					
ANR	69038	ParameterList			69026	3					
ANR	69039	CFGEntryNode	ENTRY		69026		True				
ANR	69040	CFGExitNode	EXIT		69026		True				
ANR	69041	Symbol	AG		69026						
ANR	69042	Symbol	mm_heap		69026						
ANR	69043	Function	zend_mm_is_custom_heap	2688:0:81409:81552							
ANR	69044	FunctionDef	zend_mm_is_custom_heap (zend_mm_heap * new_heap)		69043	0					
ANR	69045	CompoundStatement		2689:0:81469:81552	69043	0					
ANR	69046	ReturnStatement	return AG ( mm_heap ) -> use_custom_heap ;	2691:1:81491:81526	69043	0	True				
ANR	69047	PtrMemberAccess	AG ( mm_heap ) -> use_custom_heap		69043	0					
ANR	69048	CallExpression	AG ( mm_heap )		69043	0					
ANR	69049	Callee	AG		69043	0					
ANR	69050	Identifier	AG		69043	0					
ANR	69051	ArgumentList	mm_heap		69043	1					
ANR	69052	Argument	mm_heap		69043	0					
ANR	69053	Identifier	mm_heap		69043	0					
ANR	69054	Identifier	use_custom_heap		69043	1					
ANR	69055	ReturnType	ZEND_API int		69043	1					
ANR	69056	Identifier	zend_mm_is_custom_heap		69043	2					
ANR	69057	ParameterList	zend_mm_heap * new_heap		69043	3					
ANR	69058	Parameter	zend_mm_heap * new_heap	2688:36:81445:81466	69043	0	True				
ANR	69059	ParameterType	zend_mm_heap *		69043	0					
ANR	69060	Identifier	new_heap		69043	1					
ANR	69061	CFGEntryNode	ENTRY		69043		True				
ANR	69062	CFGExitNode	EXIT		69043		True				
ANR	69063	Symbol	AG ( mm_heap ) -> use_custom_heap		69043						
ANR	69064	Symbol	AG		69043						
ANR	69065	Symbol	new_heap		69043						
ANR	69066	Symbol	mm_heap		69043						
ANR	69067	Symbol	* AG		69043						
ANR	69068	Function	zend_mm_set_custom_handlers	2697:0:81555:82077							
ANR	69069	FunctionDef	"zend_mm_set_custom_handlers (zend_mm_heap * heap , void * ( * _malloc ) ( size_t ) , void ( * _free ) ( void * ) , void * ( * _realloc ) ( void * , size_t ))"		69068	0					
ANR	69070	CompoundStatement		2701:0:81826:82077	69068	0					
ANR	69071	IdentifierDeclStatement	zend_mm_heap * _heap = ( zend_mm_heap * ) heap ;	2703:1:81848:81889	69068	0	True				
ANR	69072	IdentifierDecl	* _heap = ( zend_mm_heap * ) heap		69068	0					
ANR	69073	IdentifierDeclType	zend_mm_heap *		69068	0					
ANR	69074	Identifier	_heap		69068	1					
ANR	69075	AssignmentExpression	* _heap = ( zend_mm_heap * ) heap		69068	2		=			
ANR	69076	Identifier	_heap		69068	0					
ANR	69077	CastExpression	( zend_mm_heap * ) heap		69068	1					
ANR	69078	CastTarget	zend_mm_heap *		69068	0					
ANR	69079	Identifier	heap		69068	1					
ANR	69080	ExpressionStatement	_heap -> use_custom_heap = ZEND_MM_CUSTOM_HEAP_STD	2705:1:81893:81941	69068	1	True				
ANR	69081	AssignmentExpression	_heap -> use_custom_heap = ZEND_MM_CUSTOM_HEAP_STD		69068	0		=			
ANR	69082	PtrMemberAccess	_heap -> use_custom_heap		69068	0					
ANR	69083	Identifier	_heap		69068	0					
ANR	69084	Identifier	use_custom_heap		69068	1					
ANR	69085	Identifier	ZEND_MM_CUSTOM_HEAP_STD		69068	1					
ANR	69086	ExpressionStatement	_heap -> custom_heap . std . _malloc = _malloc	2706:1:81944:81984	69068	2	True				
ANR	69087	AssignmentExpression	_heap -> custom_heap . std . _malloc = _malloc		69068	0		=			
ANR	69088	MemberAccess	_heap -> custom_heap . std . _malloc		69068	0					
ANR	69089	MemberAccess	_heap -> custom_heap . std		69068	0					
ANR	69090	PtrMemberAccess	_heap -> custom_heap		69068	0					
ANR	69091	Identifier	_heap		69068	0					
ANR	69092	Identifier	custom_heap		69068	1					
ANR	69093	Identifier	std		69068	1					
ANR	69094	Identifier	_malloc		69068	1					
ANR	69095	Identifier	_malloc		69068	1					
ANR	69096	ExpressionStatement	_heap -> custom_heap . std . _free = _free	2707:1:81987:82023	69068	3	True				
ANR	69097	AssignmentExpression	_heap -> custom_heap . std . _free = _free		69068	0		=			
ANR	69098	MemberAccess	_heap -> custom_heap . std . _free		69068	0					
ANR	69099	MemberAccess	_heap -> custom_heap . std		69068	0					
ANR	69100	PtrMemberAccess	_heap -> custom_heap		69068	0					
ANR	69101	Identifier	_heap		69068	0					
ANR	69102	Identifier	custom_heap		69068	1					
ANR	69103	Identifier	std		69068	1					
ANR	69104	Identifier	_free		69068	1					
ANR	69105	Identifier	_free		69068	1					
ANR	69106	ExpressionStatement	_heap -> custom_heap . std . _realloc = _realloc	2708:1:82026:82068	69068	4	True				
ANR	69107	AssignmentExpression	_heap -> custom_heap . std . _realloc = _realloc		69068	0		=			
ANR	69108	MemberAccess	_heap -> custom_heap . std . _realloc		69068	0					
ANR	69109	MemberAccess	_heap -> custom_heap . std		69068	0					
ANR	69110	PtrMemberAccess	_heap -> custom_heap		69068	0					
ANR	69111	Identifier	_heap		69068	0					
ANR	69112	Identifier	custom_heap		69068	1					
ANR	69113	Identifier	std		69068	1					
ANR	69114	Identifier	_realloc		69068	1					
ANR	69115	Identifier	_realloc		69068	1					
ANR	69116	ReturnType	ZEND_API void		69068	1					
ANR	69117	Identifier	zend_mm_set_custom_handlers		69068	2					
ANR	69118	ParameterList	"zend_mm_heap * heap , void * ( * _malloc ) ( size_t ) , void ( * _free ) ( void * ) , void * ( * _realloc ) ( void * , size_t )"		69068	3					
ANR	69119	Parameter	zend_mm_heap * heap	2697:42:81597:81614	69068	0	True				
ANR	69120	ParameterType	zend_mm_heap *		69068	0					
ANR	69121	Identifier	heap		69068	1					
ANR	69122	Parameter	void * ( * _malloc ) ( size_t )	2698:42:81659:81682	69068	1	True				
ANR	69123	ParameterType	(* ( size_t ) void) *		69068	0					
ANR	69124	Identifier	_malloc		69068	1					
ANR	69125	Parameter	void ( * _free ) ( void * )	2699:42:81727:81747	69068	2	True				
ANR	69126	ParameterType	(( void * ) void) *		69068	0					
ANR	69127	Identifier	_free		69068	1					
ANR	69128	Parameter	"void * ( * _realloc ) ( void * , size_t )"	2700:42:81792:81823	69068	3	True				
ANR	69129	ParameterType	"(* ( void * , size_t ) void) *"		69068	0					
ANR	69130	Identifier	_realloc		69068	1					
ANR	69131	CFGEntryNode	ENTRY		69068		True				
ANR	69132	CFGExitNode	EXIT		69068		True				
ANR	69133	Symbol	_heap		69068						
ANR	69134	Symbol	_free		69068						
ANR	69135	Symbol	_heap -> custom_heap . std		69068						
ANR	69136	Symbol	_heap -> custom_heap		69068						
ANR	69137	Symbol	_heap -> custom_heap . std . _free		69068						
ANR	69138	Symbol	_heap -> custom_heap . std . _realloc		69068						
ANR	69139	Symbol	ZEND_MM_CUSTOM_HEAP_STD		69068						
ANR	69140	Symbol	_heap -> use_custom_heap		69068						
ANR	69141	Symbol	* _heap		69068						
ANR	69142	Symbol	_realloc		69068						
ANR	69143	Symbol	heap		69068						
ANR	69144	Symbol	_malloc		69068						
ANR	69145	Symbol	_heap -> custom_heap . std . _malloc		69068						
ANR	69146	Function	zend_mm_get_custom_handlers	2712:0:82080:82718							
ANR	69147	FunctionDef	"zend_mm_get_custom_handlers (zend_mm_heap * heap , void * ( * * _malloc ) ( size_t ) , void ( * * _free ) ( void * ) , void * ( * * _realloc ) ( void * , size_t ))"		69146	0					
ANR	69148	CompoundStatement		2716:0:82354:82718	69146	0					
ANR	69149	IdentifierDeclStatement	zend_mm_heap * _heap = ( zend_mm_heap * ) heap ;	2718:1:82376:82417	69146	0	True				
ANR	69150	IdentifierDecl	* _heap = ( zend_mm_heap * ) heap		69146	0					
ANR	69151	IdentifierDeclType	zend_mm_heap *		69146	0					
ANR	69152	Identifier	_heap		69146	1					
ANR	69153	AssignmentExpression	* _heap = ( zend_mm_heap * ) heap		69146	2		=			
ANR	69154	Identifier	_heap		69146	0					
ANR	69155	CastExpression	( zend_mm_heap * ) heap		69146	1					
ANR	69156	CastTarget	zend_mm_heap *		69146	0					
ANR	69157	Identifier	heap		69146	1					
ANR	69158	IfStatement	if ( heap -> use_custom_heap )		69146	1					
ANR	69159	Condition	heap -> use_custom_heap	2720:5:82425:82445	69146	0	True				
ANR	69160	PtrMemberAccess	heap -> use_custom_heap		69146	0					
ANR	69161	Identifier	heap		69146	0					
ANR	69162	Identifier	use_custom_heap		69146	1					
ANR	69163	CompoundStatement		5:28:93:93	69146	1					
ANR	69164	ExpressionStatement	* _malloc = _heap -> custom_heap . std . _malloc	2721:2:82452:82493	69146	0	True				
ANR	69165	AssignmentExpression	* _malloc = _heap -> custom_heap . std . _malloc		69146	0		=			
ANR	69166	UnaryOperationExpression	* _malloc		69146	0					
ANR	69167	UnaryOperator	*		69146	0					
ANR	69168	Identifier	_malloc		69146	1					
ANR	69169	MemberAccess	_heap -> custom_heap . std . _malloc		69146	1					
ANR	69170	MemberAccess	_heap -> custom_heap . std		69146	0					
ANR	69171	PtrMemberAccess	_heap -> custom_heap		69146	0					
ANR	69172	Identifier	_heap		69146	0					
ANR	69173	Identifier	custom_heap		69146	1					
ANR	69174	Identifier	std		69146	1					
ANR	69175	Identifier	_malloc		69146	1					
ANR	69176	ExpressionStatement	* _free = _heap -> custom_heap . std . _free	2722:2:82497:82534	69146	1	True				
ANR	69177	AssignmentExpression	* _free = _heap -> custom_heap . std . _free		69146	0		=			
ANR	69178	UnaryOperationExpression	* _free		69146	0					
ANR	69179	UnaryOperator	*		69146	0					
ANR	69180	Identifier	_free		69146	1					
ANR	69181	MemberAccess	_heap -> custom_heap . std . _free		69146	1					
ANR	69182	MemberAccess	_heap -> custom_heap . std		69146	0					
ANR	69183	PtrMemberAccess	_heap -> custom_heap		69146	0					
ANR	69184	Identifier	_heap		69146	0					
ANR	69185	Identifier	custom_heap		69146	1					
ANR	69186	Identifier	std		69146	1					
ANR	69187	Identifier	_free		69146	1					
ANR	69188	ExpressionStatement	* _realloc = _heap -> custom_heap . std . _realloc	2723:2:82538:82581	69146	2	True				
ANR	69189	AssignmentExpression	* _realloc = _heap -> custom_heap . std . _realloc		69146	0		=			
ANR	69190	UnaryOperationExpression	* _realloc		69146	0					
ANR	69191	UnaryOperator	*		69146	0					
ANR	69192	Identifier	_realloc		69146	1					
ANR	69193	MemberAccess	_heap -> custom_heap . std . _realloc		69146	1					
ANR	69194	MemberAccess	_heap -> custom_heap . std		69146	0					
ANR	69195	PtrMemberAccess	_heap -> custom_heap		69146	0					
ANR	69196	Identifier	_heap		69146	0					
ANR	69197	Identifier	custom_heap		69146	1					
ANR	69198	Identifier	std		69146	1					
ANR	69199	Identifier	_realloc		69146	1					
ANR	69200	ElseStatement	else		69146	0					
ANR	69201	CompoundStatement		9:8:236:236	69146	0					
ANR	69202	ExpressionStatement	* _malloc = NULL	2725:2:82595:82610	69146	0	True				
ANR	69203	AssignmentExpression	* _malloc = NULL		69146	0		=			
ANR	69204	UnaryOperationExpression	* _malloc		69146	0					
ANR	69205	UnaryOperator	*		69146	0					
ANR	69206	Identifier	_malloc		69146	1					
ANR	69207	Identifier	NULL		69146	1					
ANR	69208	ExpressionStatement	* _free = NULL	2726:2:82614:82627	69146	1	True				
ANR	69209	AssignmentExpression	* _free = NULL		69146	0		=			
ANR	69210	UnaryOperationExpression	* _free		69146	0					
ANR	69211	UnaryOperator	*		69146	0					
ANR	69212	Identifier	_free		69146	1					
ANR	69213	Identifier	NULL		69146	1					
ANR	69214	ExpressionStatement	* _realloc = NULL	2727:2:82631:82647	69146	2	True				
ANR	69215	AssignmentExpression	* _realloc = NULL		69146	0		=			
ANR	69216	UnaryOperationExpression	* _realloc		69146	0					
ANR	69217	UnaryOperator	*		69146	0					
ANR	69218	Identifier	_realloc		69146	1					
ANR	69219	Identifier	NULL		69146	1					
ANR	69220	ReturnType	ZEND_API void		69146	1					
ANR	69221	Identifier	zend_mm_get_custom_handlers		69146	2					
ANR	69222	ParameterList	"zend_mm_heap * heap , void * ( * * _malloc ) ( size_t ) , void ( * * _free ) ( void * ) , void * ( * * _realloc ) ( void * , size_t )"		69146	3					
ANR	69223	Parameter	zend_mm_heap * heap	2712:42:82122:82139	69146	0	True				
ANR	69224	ParameterType	zend_mm_heap *		69146	0					
ANR	69225	Identifier	heap		69146	1					
ANR	69226	Parameter	void * ( * * _malloc ) ( size_t )	2713:42:82184:82208	69146	1	True				
ANR	69227	ParameterType	(* ( size_t ) void) * *		69146	0					
ANR	69228	Identifier	_malloc		69146	1					
ANR	69229	Parameter	void ( * * _free ) ( void * )	2714:42:82253:82274	69146	2	True				
ANR	69230	ParameterType	(( void * ) void) * *		69146	0					
ANR	69231	Identifier	_free		69146	1					
ANR	69232	Parameter	"void * ( * * _realloc ) ( void * , size_t )"	2715:42:82319:82351	69146	3	True				
ANR	69233	ParameterType	"(* ( void * , size_t ) void) * *"		69146	0					
ANR	69234	Identifier	_realloc		69146	1					
ANR	69235	CFGEntryNode	ENTRY		69146		True				
ANR	69236	CFGExitNode	EXIT		69146		True				
ANR	69237	Symbol	_heap		69146						
ANR	69238	Symbol	_free		69146						
ANR	69239	Symbol	_heap -> custom_heap . std		69146						
ANR	69240	Symbol	NULL		69146						
ANR	69241	Symbol	_heap -> custom_heap		69146						
ANR	69242	Symbol	* _malloc		69146						
ANR	69243	Symbol	* _realloc		69146						
ANR	69244	Symbol	heap -> use_custom_heap		69146						
ANR	69245	Symbol	_heap -> custom_heap . std . _free		69146						
ANR	69246	Symbol	_heap -> custom_heap . std . _realloc		69146						
ANR	69247	Symbol	* _heap		69146						
ANR	69248	Symbol	_realloc		69146						
ANR	69249	Symbol	heap		69146						
ANR	69250	Symbol	* heap		69146						
ANR	69251	Symbol	_malloc		69146						
ANR	69252	Symbol	_heap -> custom_heap . std . _malloc		69146						
ANR	69253	Symbol	* _free		69146						
ANR	69254	DeclStmt									
ANR	69255	Decl							zend_mm_heap	zend_mm_heap *	_heap
ANR	69256	Function	zend_mm_get_storage	2753:0:83405:83542							
ANR	69257	FunctionDef	zend_mm_get_storage (zend_mm_heap * heap)		69256	0					
ANR	69258	CompoundStatement		2754:0:83471:83542	69256	0					
ANR	69259	ReturnStatement	return heap -> storage ;	2756:1:83494:83514	69256	0	True				
ANR	69260	PtrMemberAccess	heap -> storage		69256	0					
ANR	69261	Identifier	heap		69256	0					
ANR	69262	Identifier	storage		69256	1					
ANR	69263	ReturnType	ZEND_API zend_mm_storage *		69256	1					
ANR	69264	Identifier	zend_mm_get_storage		69256	2					
ANR	69265	ParameterList	zend_mm_heap * heap		69256	3					
ANR	69266	Parameter	zend_mm_heap * heap	2753:46:83451:83468	69256	0	True				
ANR	69267	ParameterType	zend_mm_heap *		69256	0					
ANR	69268	Identifier	heap		69256	1					
ANR	69269	CFGEntryNode	ENTRY		69256		True				
ANR	69270	CFGExitNode	EXIT		69256		True				
ANR	69271	Symbol	heap -> storage		69256						
ANR	69272	Symbol	heap		69256						
ANR	69273	Symbol	* heap		69256						
ANR	69274	Function	zend_mm_startup	2762:0:83545:83616							
ANR	69275	FunctionDef	zend_mm_startup ()		69274	0					
ANR	69276	CompoundStatement		2763:0:83590:83616	69274	0					
ANR	69277	ReturnStatement	return zend_mm_init ( ) ;	2764:1:83593:83614	69274	0	True				
ANR	69278	CallExpression	zend_mm_init ( )		69274	0					
ANR	69279	Callee	zend_mm_init		69274	0					
ANR	69280	Identifier	zend_mm_init		69274	0					
ANR	69281	ArgumentList			69274	1					
ANR	69282	ReturnType	ZEND_API zend_mm_heap *		69274	1					
ANR	69283	Identifier	zend_mm_startup		69274	2					
ANR	69284	ParameterList			69274	3					
ANR	69285	CFGEntryNode	ENTRY		69274		True				
ANR	69286	CFGExitNode	EXIT		69274		True				
ANR	69287	Symbol	zend_mm_init		69274						
ANR	69288	Function	zend_mm_startup_ex	2767:0:83619:85828							
ANR	69289	FunctionDef	"zend_mm_startup_ex (const zend_mm_handlers * handlers , void * data , size_t data_size)"		69288	0					
ANR	69290	CompoundStatement		2768:0:83725:85828	69288	0					
ANR	69291	IdentifierDeclStatement	"zend_mm_storage tmp_storage , * storage ;"	2770:1:83748:83785	69288	0	True				
ANR	69292	IdentifierDecl	tmp_storage		69288	0					
ANR	69293	IdentifierDeclType	zend_mm_storage		69288	0					
ANR	69294	Identifier	tmp_storage		69288	1					
ANR	69295	IdentifierDecl	* storage		69288	1					
ANR	69296	IdentifierDeclType	zend_mm_storage *		69288	0					
ANR	69297	Identifier	storage		69288	1					
ANR	69298	IdentifierDeclStatement	zend_mm_chunk * chunk ;	2771:1:83788:83808	69288	1	True				
ANR	69299	IdentifierDecl	* chunk		69288	0					
ANR	69300	IdentifierDeclType	zend_mm_chunk *		69288	0					
ANR	69301	Identifier	chunk		69288	1					
ANR	69302	IdentifierDeclStatement	zend_mm_heap * heap ;	2772:1:83811:83829	69288	2	True				
ANR	69303	IdentifierDecl	* heap		69288	0					
ANR	69304	IdentifierDeclType	zend_mm_heap *		69288	0					
ANR	69305	Identifier	heap		69288	1					
ANR	69306	ExpressionStatement	"memcpy ( ( zend_mm_handlers * ) & tmp_storage . handlers , handlers , sizeof ( zend_mm_handlers ) )"	2774:1:83833:83917	69288	3	True				
ANR	69307	CallExpression	"memcpy ( ( zend_mm_handlers * ) & tmp_storage . handlers , handlers , sizeof ( zend_mm_handlers ) )"		69288	0					
ANR	69308	Callee	memcpy		69288	0					
ANR	69309	Identifier	memcpy		69288	0					
ANR	69310	ArgumentList	( zend_mm_handlers * ) & tmp_storage . handlers		69288	1					
ANR	69311	Argument	( zend_mm_handlers * ) & tmp_storage . handlers		69288	0					
ANR	69312	CastExpression	( zend_mm_handlers * ) & tmp_storage . handlers		69288	0					
ANR	69313	CastTarget	zend_mm_handlers *		69288	0					
ANR	69314	UnaryOperationExpression	& tmp_storage . handlers		69288	1					
ANR	69315	UnaryOperator	&		69288	0					
ANR	69316	MemberAccess	tmp_storage . handlers		69288	1					
ANR	69317	Identifier	tmp_storage		69288	0					
ANR	69318	Identifier	handlers		69288	1					
ANR	69319	Argument	handlers		69288	1					
ANR	69320	Identifier	handlers		69288	0					
ANR	69321	Argument	sizeof ( zend_mm_handlers )		69288	2					
ANR	69322	SizeofExpression	sizeof ( zend_mm_handlers )		69288	0					
ANR	69323	Sizeof	sizeof		69288	0					
ANR	69324	SizeofOperand	zend_mm_handlers		69288	1					
ANR	69325	ExpressionStatement	tmp_storage . data = data	2775:1:83920:83943	69288	4	True				
ANR	69326	AssignmentExpression	tmp_storage . data = data		69288	0		=			
ANR	69327	MemberAccess	tmp_storage . data		69288	0					
ANR	69328	Identifier	tmp_storage		69288	0					
ANR	69329	Identifier	data		69288	1					
ANR	69330	Identifier	data		69288	1					
ANR	69331	ExpressionStatement	"chunk = ( zend_mm_chunk * ) handlers -> chunk_alloc ( & tmp_storage , ZEND_MM_CHUNK_SIZE , ZEND_MM_CHUNK_SIZE )"	2776:1:83946:84045	69288	5	True				
ANR	69332	AssignmentExpression	"chunk = ( zend_mm_chunk * ) handlers -> chunk_alloc ( & tmp_storage , ZEND_MM_CHUNK_SIZE , ZEND_MM_CHUNK_SIZE )"		69288	0		=			
ANR	69333	Identifier	chunk		69288	0					
ANR	69334	CastExpression	"( zend_mm_chunk * ) handlers -> chunk_alloc ( & tmp_storage , ZEND_MM_CHUNK_SIZE , ZEND_MM_CHUNK_SIZE )"		69288	1					
ANR	69335	CastTarget	zend_mm_chunk *		69288	0					
ANR	69336	CallExpression	"handlers -> chunk_alloc ( & tmp_storage , ZEND_MM_CHUNK_SIZE , ZEND_MM_CHUNK_SIZE )"		69288	1					
ANR	69337	Callee	handlers -> chunk_alloc		69288	0					
ANR	69338	PtrMemberAccess	handlers -> chunk_alloc		69288	0					
ANR	69339	Identifier	handlers		69288	0					
ANR	69340	Identifier	chunk_alloc		69288	1					
ANR	69341	ArgumentList	& tmp_storage		69288	1					
ANR	69342	Argument	& tmp_storage		69288	0					
ANR	69343	UnaryOperationExpression	& tmp_storage		69288	0					
ANR	69344	UnaryOperator	&		69288	0					
ANR	69345	Identifier	tmp_storage		69288	1					
ANR	69346	Argument	ZEND_MM_CHUNK_SIZE		69288	1					
ANR	69347	Identifier	ZEND_MM_CHUNK_SIZE		69288	0					
ANR	69348	Argument	ZEND_MM_CHUNK_SIZE		69288	2					
ANR	69349	Identifier	ZEND_MM_CHUNK_SIZE		69288	0					
ANR	69350	IfStatement	if ( UNEXPECTED ( chunk == NULL ) )		69288	6					
ANR	69351	Condition	UNEXPECTED ( chunk == NULL )	2777:5:84052:84076	69288	0	True				
ANR	69352	CallExpression	UNEXPECTED ( chunk == NULL )		69288	0					
ANR	69353	Callee	UNEXPECTED		69288	0					
ANR	69354	Identifier	UNEXPECTED		69288	0					
ANR	69355	ArgumentList	chunk == NULL		69288	1					
ANR	69356	Argument	chunk == NULL		69288	0					
ANR	69357	EqualityExpression	chunk == NULL		69288	0		==			
ANR	69358	Identifier	chunk		69288	0					
ANR	69359	Identifier	NULL		69288	1					
ANR	69360	CompoundStatement		10:32:353:353	69288	1					
ANR	69361	ExpressionStatement	"stderr_last_error ( ""Can't initialize heap"" )"	2780:2:84115:84157	69288	0	True				
ANR	69362	CallExpression	"stderr_last_error ( ""Can't initialize heap"" )"		69288	0					
ANR	69363	Callee	stderr_last_error		69288	0					
ANR	69364	Identifier	stderr_last_error		69288	0					
ANR	69365	ArgumentList	"""Can't initialize heap"""		69288	1					
ANR	69366	Argument	"""Can't initialize heap"""		69288	0					
ANR	69367	PrimaryExpression	"""Can't initialize heap"""		69288	0					
ANR	69368	ReturnStatement	return NULL ;	2785:2:84262:84273	69288	1	True				
ANR	69369	Identifier	NULL		69288	0					
ANR	69370	ExpressionStatement	heap = & chunk -> heap_slot	2787:1:84279:84303	69288	7	True				
ANR	69371	AssignmentExpression	heap = & chunk -> heap_slot		69288	0		=			
ANR	69372	Identifier	heap		69288	0					
ANR	69373	UnaryOperationExpression	& chunk -> heap_slot		69288	1					
ANR	69374	UnaryOperator	&		69288	0					
ANR	69375	PtrMemberAccess	chunk -> heap_slot		69288	1					
ANR	69376	Identifier	chunk		69288	0					
ANR	69377	Identifier	heap_slot		69288	1					
ANR	69378	ExpressionStatement	chunk -> heap = heap	2788:1:84306:84324	69288	8	True				
ANR	69379	AssignmentExpression	chunk -> heap = heap		69288	0		=			
ANR	69380	PtrMemberAccess	chunk -> heap		69288	0					
ANR	69381	Identifier	chunk		69288	0					
ANR	69382	Identifier	heap		69288	1					
ANR	69383	Identifier	heap		69288	1					
ANR	69384	ExpressionStatement	chunk -> next = chunk	2789:1:84327:84346	69288	9	True				
ANR	69385	AssignmentExpression	chunk -> next = chunk		69288	0		=			
ANR	69386	PtrMemberAccess	chunk -> next		69288	0					
ANR	69387	Identifier	chunk		69288	0					
ANR	69388	Identifier	next		69288	1					
ANR	69389	Identifier	chunk		69288	1					
ANR	69390	ExpressionStatement	chunk -> prev = chunk	2790:1:84349:84368	69288	10	True				
ANR	69391	AssignmentExpression	chunk -> prev = chunk		69288	0		=			
ANR	69392	PtrMemberAccess	chunk -> prev		69288	0					
ANR	69393	Identifier	chunk		69288	0					
ANR	69394	Identifier	prev		69288	1					
ANR	69395	Identifier	chunk		69288	1					
ANR	69396	ExpressionStatement	chunk -> free_pages = ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE	2791:1:84371:84425	69288	11	True				
ANR	69397	AssignmentExpression	chunk -> free_pages = ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE		69288	0		=			
ANR	69398	PtrMemberAccess	chunk -> free_pages		69288	0					
ANR	69399	Identifier	chunk		69288	0					
ANR	69400	Identifier	free_pages		69288	1					
ANR	69401	AdditiveExpression	ZEND_MM_PAGES - ZEND_MM_FIRST_PAGE		69288	1		-			
ANR	69402	Identifier	ZEND_MM_PAGES		69288	0					
ANR	69403	Identifier	ZEND_MM_FIRST_PAGE		69288	1					
ANR	69404	ExpressionStatement	chunk -> free_tail = ZEND_MM_FIRST_PAGE	2792:1:84428:84465	69288	12	True				
ANR	69405	AssignmentExpression	chunk -> free_tail = ZEND_MM_FIRST_PAGE		69288	0		=			
ANR	69406	PtrMemberAccess	chunk -> free_tail		69288	0					
ANR	69407	Identifier	chunk		69288	0					
ANR	69408	Identifier	free_tail		69288	1					
ANR	69409	Identifier	ZEND_MM_FIRST_PAGE		69288	1					
ANR	69410	ExpressionStatement	chunk -> num = 0	2793:1:84468:84482	69288	13	True				
ANR	69411	AssignmentExpression	chunk -> num = 0		69288	0		=			
ANR	69412	PtrMemberAccess	chunk -> num		69288	0					
ANR	69413	Identifier	chunk		69288	0					
ANR	69414	Identifier	num		69288	1					
ANR	69415	PrimaryExpression	0		69288	1					
ANR	69416	ExpressionStatement	chunk -> free_map [ 0 ] = ( Z_L ( 1 ) << ZEND_MM_FIRST_PAGE ) - 1	2794:1:84485:84540	69288	14	True				
ANR	69417	AssignmentExpression	chunk -> free_map [ 0 ] = ( Z_L ( 1 ) << ZEND_MM_FIRST_PAGE ) - 1		69288	0		=			
ANR	69418	ArrayIndexing	chunk -> free_map [ 0 ]		69288	0					
ANR	69419	PtrMemberAccess	chunk -> free_map		69288	0					
ANR	69420	Identifier	chunk		69288	0					
ANR	69421	Identifier	free_map		69288	1					
ANR	69422	PrimaryExpression	0		69288	1					
ANR	69423	AdditiveExpression	( Z_L ( 1 ) << ZEND_MM_FIRST_PAGE ) - 1		69288	1		-			
ANR	69424	ShiftExpression	Z_L ( 1 ) << ZEND_MM_FIRST_PAGE		69288	0		<<			
ANR	69425	CallExpression	Z_L ( 1 )		69288	0					
ANR	69426	Callee	Z_L		69288	0					
ANR	69427	Identifier	Z_L		69288	0					
ANR	69428	ArgumentList	1		69288	1					
ANR	69429	Argument	1		69288	0					
ANR	69430	PrimaryExpression	1		69288	0					
ANR	69431	Identifier	ZEND_MM_FIRST_PAGE		69288	1					
ANR	69432	PrimaryExpression	1		69288	1					
ANR	69433	ExpressionStatement	chunk -> map [ 0 ] = ZEND_MM_LRUN ( ZEND_MM_FIRST_PAGE )	2795:1:84543:84591	69288	15	True				
ANR	69434	AssignmentExpression	chunk -> map [ 0 ] = ZEND_MM_LRUN ( ZEND_MM_FIRST_PAGE )		69288	0		=			
ANR	69435	ArrayIndexing	chunk -> map [ 0 ]		69288	0					
ANR	69436	PtrMemberAccess	chunk -> map		69288	0					
ANR	69437	Identifier	chunk		69288	0					
ANR	69438	Identifier	map		69288	1					
ANR	69439	PrimaryExpression	0		69288	1					
ANR	69440	CallExpression	ZEND_MM_LRUN ( ZEND_MM_FIRST_PAGE )		69288	1					
ANR	69441	Callee	ZEND_MM_LRUN		69288	0					
ANR	69442	Identifier	ZEND_MM_LRUN		69288	0					
ANR	69443	ArgumentList	ZEND_MM_FIRST_PAGE		69288	1					
ANR	69444	Argument	ZEND_MM_FIRST_PAGE		69288	0					
ANR	69445	Identifier	ZEND_MM_FIRST_PAGE		69288	0					
ANR	69446	ExpressionStatement	heap -> main_chunk = chunk	2796:1:84594:84618	69288	16	True				
ANR	69447	AssignmentExpression	heap -> main_chunk = chunk		69288	0		=			
ANR	69448	PtrMemberAccess	heap -> main_chunk		69288	0					
ANR	69449	Identifier	heap		69288	0					
ANR	69450	Identifier	main_chunk		69288	1					
ANR	69451	Identifier	chunk		69288	1					
ANR	69452	ExpressionStatement	heap -> cached_chunks = NULL	2797:1:84621:84647	69288	17	True				
ANR	69453	AssignmentExpression	heap -> cached_chunks = NULL		69288	0		=			
ANR	69454	PtrMemberAccess	heap -> cached_chunks		69288	0					
ANR	69455	Identifier	heap		69288	0					
ANR	69456	Identifier	cached_chunks		69288	1					
ANR	69457	Identifier	NULL		69288	1					
ANR	69458	ExpressionStatement	heap -> chunks_count = 1	2798:1:84650:84672	69288	18	True				
ANR	69459	AssignmentExpression	heap -> chunks_count = 1		69288	0		=			
ANR	69460	PtrMemberAccess	heap -> chunks_count		69288	0					
ANR	69461	Identifier	heap		69288	0					
ANR	69462	Identifier	chunks_count		69288	1					
ANR	69463	PrimaryExpression	1		69288	1					
ANR	69464	ExpressionStatement	heap -> peak_chunks_count = 1	2799:1:84675:84702	69288	19	True				
ANR	69465	AssignmentExpression	heap -> peak_chunks_count = 1		69288	0		=			
ANR	69466	PtrMemberAccess	heap -> peak_chunks_count		69288	0					
ANR	69467	Identifier	heap		69288	0					
ANR	69468	Identifier	peak_chunks_count		69288	1					
ANR	69469	PrimaryExpression	1		69288	1					
ANR	69470	ExpressionStatement	heap -> cached_chunks_count = 0	2800:1:84705:84734	69288	20	True				
ANR	69471	AssignmentExpression	heap -> cached_chunks_count = 0		69288	0		=			
ANR	69472	PtrMemberAccess	heap -> cached_chunks_count		69288	0					
ANR	69473	Identifier	heap		69288	0					
ANR	69474	Identifier	cached_chunks_count		69288	1					
ANR	69475	PrimaryExpression	0		69288	1					
ANR	69476	ExpressionStatement	heap -> avg_chunks_count = 1.0	2801:1:84737:84765	69288	21	True				
ANR	69477	AssignmentExpression	heap -> avg_chunks_count = 1.0		69288	0		=			
ANR	69478	PtrMemberAccess	heap -> avg_chunks_count		69288	0					
ANR	69479	Identifier	heap		69288	0					
ANR	69480	Identifier	avg_chunks_count		69288	1					
ANR	69481	PrimaryExpression	1.0		69288	1					
ANR	69482	ExpressionStatement	heap -> real_size = ZEND_MM_CHUNK_SIZE	2803:1:84802:84838	69288	22	True				
ANR	69483	AssignmentExpression	heap -> real_size = ZEND_MM_CHUNK_SIZE		69288	0		=			
ANR	69484	PtrMemberAccess	heap -> real_size		69288	0					
ANR	69485	Identifier	heap		69288	0					
ANR	69486	Identifier	real_size		69288	1					
ANR	69487	Identifier	ZEND_MM_CHUNK_SIZE		69288	1					
ANR	69488	ExpressionStatement	heap -> real_peak = ZEND_MM_CHUNK_SIZE	2806:1:84865:84901	69288	23	True				
ANR	69489	AssignmentExpression	heap -> real_peak = ZEND_MM_CHUNK_SIZE		69288	0		=			
ANR	69490	PtrMemberAccess	heap -> real_peak		69288	0					
ANR	69491	Identifier	heap		69288	0					
ANR	69492	Identifier	real_peak		69288	1					
ANR	69493	Identifier	ZEND_MM_CHUNK_SIZE		69288	1					
ANR	69494	ExpressionStatement	heap -> size = 0	2807:1:84904:84918	69288	24	True				
ANR	69495	AssignmentExpression	heap -> size = 0		69288	0		=			
ANR	69496	PtrMemberAccess	heap -> size		69288	0					
ANR	69497	Identifier	heap		69288	0					
ANR	69498	Identifier	size		69288	1					
ANR	69499	PrimaryExpression	0		69288	1					
ANR	69500	ExpressionStatement	heap -> peak = 0	2808:1:84921:84935	69288	25	True				
ANR	69501	AssignmentExpression	heap -> peak = 0		69288	0		=			
ANR	69502	PtrMemberAccess	heap -> peak		69288	0					
ANR	69503	Identifier	heap		69288	0					
ANR	69504	Identifier	peak		69288	1					
ANR	69505	PrimaryExpression	0		69288	1					
ANR	69506	ExpressionStatement	heap -> limit = ( Z_L ( - 1 ) >> Z_L ( 1 ) )	2811:1:84963:84996	69288	26	True				
ANR	69507	AssignmentExpression	heap -> limit = ( Z_L ( - 1 ) >> Z_L ( 1 ) )		69288	0		=			
ANR	69508	PtrMemberAccess	heap -> limit		69288	0					
ANR	69509	Identifier	heap		69288	0					
ANR	69510	Identifier	limit		69288	1					
ANR	69511	ShiftExpression	Z_L ( - 1 ) >> Z_L ( 1 )		69288	1		>>			
ANR	69512	CallExpression	Z_L ( - 1 )		69288	0					
ANR	69513	Callee	Z_L		69288	0					
ANR	69514	Identifier	Z_L		69288	0					
ANR	69515	ArgumentList	- 1		69288	1					
ANR	69516	Argument	- 1		69288	0					
ANR	69517	UnaryOperationExpression	- 1		69288	0					
ANR	69518	UnaryOperator	-		69288	0					
ANR	69519	PrimaryExpression	1		69288	1					
ANR	69520	CallExpression	Z_L ( 1 )		69288	1					
ANR	69521	Callee	Z_L		69288	0					
ANR	69522	Identifier	Z_L		69288	0					
ANR	69523	ArgumentList	1		69288	1					
ANR	69524	Argument	1		69288	0					
ANR	69525	PrimaryExpression	1		69288	0					
ANR	69526	ExpressionStatement	heap -> overflow = 0	2812:1:84999:85017	69288	27	True				
ANR	69527	AssignmentExpression	heap -> overflow = 0		69288	0		=			
ANR	69528	PtrMemberAccess	heap -> overflow		69288	0					
ANR	69529	Identifier	heap		69288	0					
ANR	69530	Identifier	overflow		69288	1					
ANR	69531	PrimaryExpression	0		69288	1					
ANR	69532	ExpressionStatement	heap -> use_custom_heap = 0	2815:1:85046:85071	69288	28	True				
ANR	69533	AssignmentExpression	heap -> use_custom_heap = 0		69288	0		=			
ANR	69534	PtrMemberAccess	heap -> use_custom_heap		69288	0					
ANR	69535	Identifier	heap		69288	0					
ANR	69536	Identifier	use_custom_heap		69288	1					
ANR	69537	PrimaryExpression	0		69288	1					
ANR	69538	ExpressionStatement	heap -> storage = & tmp_storage	2817:1:85081:85109	69288	29	True				
ANR	69539	AssignmentExpression	heap -> storage = & tmp_storage		69288	0		=			
ANR	69540	PtrMemberAccess	heap -> storage		69288	0					
ANR	69541	Identifier	heap		69288	0					
ANR	69542	Identifier	storage		69288	1					
ANR	69543	UnaryOperationExpression	& tmp_storage		69288	1					
ANR	69544	UnaryOperator	&		69288	0					
ANR	69545	Identifier	tmp_storage		69288	1					
ANR	69546	ExpressionStatement	heap -> huge_list = NULL	2818:1:85112:85134	69288	30	True				
ANR	69547	AssignmentExpression	heap -> huge_list = NULL		69288	0		=			
ANR	69548	PtrMemberAccess	heap -> huge_list		69288	0					
ANR	69549	Identifier	heap		69288	0					
ANR	69550	Identifier	huge_list		69288	1					
ANR	69551	Identifier	NULL		69288	1					
ANR	69552	ExpressionStatement	"memset ( heap -> free_slot , 0 , sizeof ( heap -> free_slot ) )"	2819:1:85137:85188	69288	31	True				
ANR	69553	CallExpression	"memset ( heap -> free_slot , 0 , sizeof ( heap -> free_slot ) )"		69288	0					
ANR	69554	Callee	memset		69288	0					
ANR	69555	Identifier	memset		69288	0					
ANR	69556	ArgumentList	heap -> free_slot		69288	1					
ANR	69557	Argument	heap -> free_slot		69288	0					
ANR	69558	PtrMemberAccess	heap -> free_slot		69288	0					
ANR	69559	Identifier	heap		69288	0					
ANR	69560	Identifier	free_slot		69288	1					
ANR	69561	Argument	0		69288	1					
ANR	69562	PrimaryExpression	0		69288	0					
ANR	69563	Argument	sizeof ( heap -> free_slot )		69288	2					
ANR	69564	SizeofExpression	sizeof ( heap -> free_slot )		69288	0					
ANR	69565	Sizeof	sizeof		69288	0					
ANR	69566	PtrMemberAccess	heap -> free_slot		69288	1					
ANR	69567	Identifier	heap		69288	0					
ANR	69568	Identifier	free_slot		69288	1					
ANR	69569	Statement	storage	2820:1:85191:85197	69288	32	True				
ANR	69570	Statement	=	2820:9:85199:85199	69288	33	True				
ANR	69571	Statement	_zend_mm_alloc	2820:11:85201:85214	69288	34	True				
ANR	69572	Statement	(	2820:25:85215:85215	69288	35	True				
ANR	69573	Statement	heap	2820:26:85216:85219	69288	36	True				
ANR	69574	Statement	","	2820:30:85220:85220	69288	37	True				
ANR	69575	Statement	sizeof	2820:32:85222:85227	69288	38	True				
ANR	69576	Statement	(	2820:38:85228:85228	69288	39	True				
ANR	69577	Statement	zend_mm_storage	2820:39:85229:85243	69288	40	True				
ANR	69578	Statement	)	2820:54:85244:85244	69288	41	True				
ANR	69579	Statement	+	2820:56:85246:85246	69288	42	True				
ANR	69580	Statement	data_size	2820:58:85248:85256	69288	43	True				
ANR	69581	Statement	ZEND_FILE_LINE_CC	2820:68:85258:85274	69288	44	True				
ANR	69582	Statement	ZEND_FILE_LINE_CC	2820:86:85276:85292	69288	45	True				
ANR	69583	Statement	)	2820:103:85293:85293	69288	46	True				
ANR	69584	ExpressionStatement		2820:104:85294:85294	69288	47	True				
ANR	69585	IfStatement	if ( ! storage )		69288	48					
ANR	69586	Condition	! storage	2821:5:85301:85308	69288	0	True				
ANR	69587	UnaryOperationExpression	! storage		69288	0					
ANR	69588	UnaryOperator	!		69288	0					
ANR	69589	Identifier	storage		69288	1					
ANR	69590	CompoundStatement		54:15:1585:1585	69288	1					
ANR	69591	ExpressionStatement	"handlers -> chunk_free ( & tmp_storage , chunk , ZEND_MM_CHUNK_SIZE )"	2822:2:85315:85376	69288	0	True				
ANR	69592	CallExpression	"handlers -> chunk_free ( & tmp_storage , chunk , ZEND_MM_CHUNK_SIZE )"		69288	0					
ANR	69593	Callee	handlers -> chunk_free		69288	0					
ANR	69594	PtrMemberAccess	handlers -> chunk_free		69288	0					
ANR	69595	Identifier	handlers		69288	0					
ANR	69596	Identifier	chunk_free		69288	1					
ANR	69597	ArgumentList	& tmp_storage		69288	1					
ANR	69598	Argument	& tmp_storage		69288	0					
ANR	69599	UnaryOperationExpression	& tmp_storage		69288	0					
ANR	69600	UnaryOperator	&		69288	0					
ANR	69601	Identifier	tmp_storage		69288	1					
ANR	69602	Argument	chunk		69288	1					
ANR	69603	Identifier	chunk		69288	0					
ANR	69604	Argument	ZEND_MM_CHUNK_SIZE		69288	2					
ANR	69605	Identifier	ZEND_MM_CHUNK_SIZE		69288	0					
ANR	69606	ExpressionStatement	"stderr_last_error ( ""Can't initialize heap"" )"	2825:2:85412:85454	69288	1	True				
ANR	69607	CallExpression	"stderr_last_error ( ""Can't initialize heap"" )"		69288	0					
ANR	69608	Callee	stderr_last_error		69288	0					
ANR	69609	Identifier	stderr_last_error		69288	0					
ANR	69610	ArgumentList	"""Can't initialize heap"""		69288	1					
ANR	69611	Argument	"""Can't initialize heap"""		69288	0					
ANR	69612	PrimaryExpression	"""Can't initialize heap"""		69288	0					
ANR	69613	ReturnStatement	return NULL ;	2830:2:85559:85570	69288	2	True				
ANR	69614	Identifier	NULL		69288	0					
ANR	69615	ExpressionStatement	"memcpy ( storage , & tmp_storage , sizeof ( zend_mm_storage ) )"	2832:1:85576:85630	69288	49	True				
ANR	69616	CallExpression	"memcpy ( storage , & tmp_storage , sizeof ( zend_mm_storage ) )"		69288	0					
ANR	69617	Callee	memcpy		69288	0					
ANR	69618	Identifier	memcpy		69288	0					
ANR	69619	ArgumentList	storage		69288	1					
ANR	69620	Argument	storage		69288	0					
ANR	69621	Identifier	storage		69288	0					
ANR	69622	Argument	& tmp_storage		69288	1					
ANR	69623	UnaryOperationExpression	& tmp_storage		69288	0					
ANR	69624	UnaryOperator	&		69288	0					
ANR	69625	Identifier	tmp_storage		69288	1					
ANR	69626	Argument	sizeof ( zend_mm_storage )		69288	2					
ANR	69627	SizeofExpression	sizeof ( zend_mm_storage )		69288	0					
ANR	69628	Sizeof	sizeof		69288	0					
ANR	69629	SizeofOperand	zend_mm_storage		69288	1					
ANR	69630	IfStatement	if ( data )		69288	50					
ANR	69631	Condition	data	2833:5:85637:85640	69288	0	True				
ANR	69632	Identifier	data		69288	0					
ANR	69633	CompoundStatement		66:11:1917:1917	69288	1					
ANR	69634	ExpressionStatement	storage -> data = ( void * ) ( ( ( char * ) storage + sizeof ( zend_mm_storage ) ) )	2834:2:85647:85714	69288	0	True				
ANR	69635	AssignmentExpression	storage -> data = ( void * ) ( ( ( char * ) storage + sizeof ( zend_mm_storage ) ) )		69288	0		=			
ANR	69636	PtrMemberAccess	storage -> data		69288	0					
ANR	69637	Identifier	storage		69288	0					
ANR	69638	Identifier	data		69288	1					
ANR	69639	CastExpression	( void * ) ( ( ( char * ) storage + sizeof ( zend_mm_storage ) ) )		69288	1					
ANR	69640	CastTarget	void *		69288	0					
ANR	69641	AdditiveExpression	( char * ) storage + sizeof ( zend_mm_storage )		69288	1		+			
ANR	69642	CastExpression	( char * ) storage		69288	0					
ANR	69643	CastTarget	char *		69288	0					
ANR	69644	Identifier	storage		69288	1					
ANR	69645	SizeofExpression	sizeof ( zend_mm_storage )		69288	1					
ANR	69646	Sizeof	sizeof		69288	0					
ANR	69647	SizeofOperand	zend_mm_storage		69288	1					
ANR	69648	ExpressionStatement	"memcpy ( storage -> data , data , data_size )"	2835:2:85718:85756	69288	1	True				
ANR	69649	CallExpression	"memcpy ( storage -> data , data , data_size )"		69288	0					
ANR	69650	Callee	memcpy		69288	0					
ANR	69651	Identifier	memcpy		69288	0					
ANR	69652	ArgumentList	storage -> data		69288	1					
ANR	69653	Argument	storage -> data		69288	0					
ANR	69654	PtrMemberAccess	storage -> data		69288	0					
ANR	69655	Identifier	storage		69288	0					
ANR	69656	Identifier	data		69288	1					
ANR	69657	Argument	data		69288	1					
ANR	69658	Identifier	data		69288	0					
ANR	69659	Argument	data_size		69288	2					
ANR	69660	Identifier	data_size		69288	0					
ANR	69661	ExpressionStatement	heap -> storage = storage	2837:1:85762:85785	69288	51	True				
ANR	69662	AssignmentExpression	heap -> storage = storage		69288	0		=			
ANR	69663	PtrMemberAccess	heap -> storage		69288	0					
ANR	69664	Identifier	heap		69288	0					
ANR	69665	Identifier	storage		69288	1					
ANR	69666	Identifier	storage		69288	1					
ANR	69667	ReturnStatement	return heap ;	2838:1:85788:85799	69288	52	True				
ANR	69668	Identifier	heap		69288	0					
ANR	69669	ReturnType	ZEND_API zend_mm_heap *		69288	1					
ANR	69670	Identifier	zend_mm_startup_ex		69288	2					
ANR	69671	ParameterList	"const zend_mm_handlers * handlers , void * data , size_t data_size"		69288	3					
ANR	69672	Parameter	const zend_mm_handlers * handlers	2767:42:83661:83692	69288	0	True				
ANR	69673	ParameterType	const zend_mm_handlers *		69288	0					
ANR	69674	Identifier	handlers		69288	1					
ANR	69675	Parameter	void * data	2767:76:83695:83704	69288	1	True				
ANR	69676	ParameterType	void *		69288	0					
ANR	69677	Identifier	data		69288	1					
ANR	69678	Parameter	size_t data_size	2767:88:83707:83722	69288	2	True				
ANR	69679	ParameterType	size_t		69288	0					
ANR	69680	Identifier	data_size		69288	1					
ANR	69681	CFGEntryNode	ENTRY		69288		True				
ANR	69682	CFGExitNode	EXIT		69288		True				
ANR	69683	Symbol	data		69288						
ANR	69684	Symbol	ZEND_MM_PAGES		69288						
ANR	69685	Symbol	heap -> use_custom_heap		69288						
ANR	69686	Symbol	heap -> cached_chunks_count		69288						
ANR	69687	Symbol	chunk -> free_tail		69288						
ANR	69688	Symbol	* storage		69288						
ANR	69689	Symbol	chunk -> num		69288						
ANR	69690	Symbol	ZEND_MM_CHUNK_SIZE		69288						
ANR	69691	Symbol	storage -> data		69288						
ANR	69692	Symbol	data_size		69288						
ANR	69693	Symbol	NULL		69288						
ANR	69694	Symbol	heap -> main_chunk		69288						
ANR	69695	Symbol	* handlers		69288						
ANR	69696	Symbol	Z_L		69288						
ANR	69697	Symbol	heap -> real_size		69288						
ANR	69698	Symbol	chunk -> next		69288						
ANR	69699	Symbol	heap -> storage		69288						
ANR	69700	Symbol	chunk -> heap		69288						
ANR	69701	Symbol	& tmp_storage . handlers		69288						
ANR	69702	Symbol	& chunk -> heap_slot		69288						
ANR	69703	Symbol	heap -> peak		69288						
ANR	69704	Symbol	heap -> huge_list		69288						
ANR	69705	Symbol	* chunk -> map		69288						
ANR	69706	Symbol	chunk -> free_map		69288						
ANR	69707	Symbol	tmp_storage . data		69288						
ANR	69708	Symbol	chunk -> map		69288						
ANR	69709	Symbol	* heap		69288						
ANR	69710	Symbol	tmp_storage		69288						
ANR	69711	Symbol	heap -> chunks_count		69288						
ANR	69712	Symbol	heap -> real_peak		69288						
ANR	69713	Symbol	chunk		69288						
ANR	69714	Symbol	storage		69288						
ANR	69715	Symbol	heap -> cached_chunks		69288						
ANR	69716	Symbol	heap -> peak_chunks_count		69288						
ANR	69717	Symbol	UNEXPECTED		69288						
ANR	69718	Symbol	heap -> size		69288						
ANR	69719	Symbol	ZEND_MM_FIRST_PAGE		69288						
ANR	69720	Symbol	heap		69288						
ANR	69721	Symbol	heap -> overflow		69288						
ANR	69722	Symbol	* chunk -> free_map		69288						
ANR	69723	Symbol	handlers -> chunk_alloc		69288						
ANR	69724	Symbol	* * chunk		69288						
ANR	69725	Symbol	heap -> free_slot		69288						
ANR	69726	Symbol	& tmp_storage		69288						
ANR	69727	Symbol	chunk -> prev		69288						
ANR	69728	Symbol	chunk -> free_pages		69288						
ANR	69729	Symbol	heap -> avg_chunks_count		69288						
ANR	69730	Symbol	* chunk		69288						
ANR	69731	Symbol	handlers		69288						
ANR	69732	Symbol	ZEND_MM_LRUN		69288						
ANR	69733	Symbol	heap -> limit		69288						
ANR	69734	Function	zend_out_of_memory	2844:0:85831:85941							
ANR	69735	FunctionDef	zend_out_of_memory ()		69734	0					
ANR	69736	CompoundStatement		2845:0:85892:85941	69734	0					
ANR	69737	ExpressionStatement	"fprintf ( stderr , ""Out of memory\\n"" )"	2846:1:85895:85929	69734	0	True				
ANR	69738	CallExpression	"fprintf ( stderr , ""Out of memory\\n"" )"		69734	0					
ANR	69739	Callee	fprintf		69734	0					
ANR	69740	Identifier	fprintf		69734	0					
ANR	69741	ArgumentList	stderr		69734	1					
ANR	69742	Argument	stderr		69734	0					
ANR	69743	Identifier	stderr		69734	0					
ANR	69744	Argument	"""Out of memory\\n"""		69734	1					
ANR	69745	PrimaryExpression	"""Out of memory\\n"""		69734	0					
ANR	69746	ExpressionStatement	exit ( 1 )	2847:1:85932:85939	69734	1	True				
ANR	69747	CallExpression	exit ( 1 )		69734	0					
ANR	69748	Callee	exit		69734	0					
ANR	69749	Identifier	exit		69734	0					
ANR	69750	ArgumentList	1		69734	1					
ANR	69751	Argument	1		69734	0					
ANR	69752	PrimaryExpression	1		69734	0					
ANR	69753	ReturnType	static ZEND_COLD ZEND_NORETURN void		69734	1					
ANR	69754	Identifier	zend_out_of_memory		69734	2					
ANR	69755	ParameterList			69734	3					
ANR	69756	CFGEntryNode	ENTRY		69734		True				
ANR	69757	CFGExitNode	EXIT		69734		True				
ANR	69758	Symbol	stderr		69734						
ANR	69759	Function	__zend_malloc	2850:0:85944:86076							
ANR	69760	FunctionDef	__zend_malloc (size_t len)		69759	0					
ANR	69761	CompoundStatement		2851:0:85986:86076	69759	0					
ANR	69762	IdentifierDeclStatement	void * tmp = malloc ( len ) ;	2852:1:85989:86012	69759	0	True				
ANR	69763	IdentifierDecl	* tmp = malloc ( len )		69759	0					
ANR	69764	IdentifierDeclType	void *		69759	0					
ANR	69765	Identifier	tmp		69759	1					
ANR	69766	AssignmentExpression	* tmp = malloc ( len )		69759	2		=			
ANR	69767	Identifier	tmp		69759	0					
ANR	69768	CallExpression	malloc ( len )		69759	1					
ANR	69769	Callee	malloc		69759	0					
ANR	69770	Identifier	malloc		69759	0					
ANR	69771	ArgumentList	len		69759	1					
ANR	69772	Argument	len		69759	0					
ANR	69773	Identifier	len		69759	0					
ANR	69774	IfStatement	if ( EXPECTED ( tmp ) )		69759	1					
ANR	69775	Condition	EXPECTED ( tmp )	2853:5:86019:86031	69759	0	True				
ANR	69776	CallExpression	EXPECTED ( tmp )		69759	0					
ANR	69777	Callee	EXPECTED		69759	0					
ANR	69778	Identifier	EXPECTED		69759	0					
ANR	69779	ArgumentList	tmp		69759	1					
ANR	69780	Argument	tmp		69759	0					
ANR	69781	Identifier	tmp		69759	0					
ANR	69782	CompoundStatement		3:20:47:47	69759	1					
ANR	69783	ReturnStatement	return tmp ;	2854:2:86038:86048	69759	0	True				
ANR	69784	Identifier	tmp		69759	0					
ANR	69785	ExpressionStatement	zend_out_of_memory ( )	2856:1:86054:86074	69759	2	True				
ANR	69786	CallExpression	zend_out_of_memory ( )		69759	0					
ANR	69787	Callee	zend_out_of_memory		69759	0					
ANR	69788	Identifier	zend_out_of_memory		69759	0					
ANR	69789	ArgumentList			69759	1					
ANR	69790	ReturnType	ZEND_API void *		69759	1					
ANR	69791	Identifier	__zend_malloc		69759	2					
ANR	69792	ParameterList	size_t len		69759	3					
ANR	69793	Parameter	size_t len	2850:30:85974:85983	69759	0	True				
ANR	69794	ParameterType	size_t		69759	0					
ANR	69795	Identifier	len		69759	1					
ANR	69796	CFGEntryNode	ENTRY		69759		True				
ANR	69797	CFGExitNode	EXIT		69759		True				
ANR	69798	Symbol	malloc		69759						
ANR	69799	Symbol	len		69759						
ANR	69800	Symbol	tmp		69759						
ANR	69801	Symbol	EXPECTED		69759						
ANR	69802	Function	__zend_calloc	2859:0:86079:86222							
ANR	69803	FunctionDef	"__zend_calloc (size_t nmemb , size_t len)"		69802	0					
ANR	69804	CompoundStatement		2860:0:86135:86222	69802	0					
ANR	69805	IdentifierDeclStatement	"void * tmp = _safe_malloc ( nmemb , len , 0 ) ;"	2861:1:86138:86177	69802	0	True				
ANR	69806	IdentifierDecl	"* tmp = _safe_malloc ( nmemb , len , 0 )"		69802	0					
ANR	69807	IdentifierDeclType	void *		69802	0					
ANR	69808	Identifier	tmp		69802	1					
ANR	69809	AssignmentExpression	"* tmp = _safe_malloc ( nmemb , len , 0 )"		69802	2		=			
ANR	69810	Identifier	tmp		69802	0					
ANR	69811	CallExpression	"_safe_malloc ( nmemb , len , 0 )"		69802	1					
ANR	69812	Callee	_safe_malloc		69802	0					
ANR	69813	Identifier	_safe_malloc		69802	0					
ANR	69814	ArgumentList	nmemb		69802	1					
ANR	69815	Argument	nmemb		69802	0					
ANR	69816	Identifier	nmemb		69802	0					
ANR	69817	Argument	len		69802	1					
ANR	69818	Identifier	len		69802	0					
ANR	69819	Argument	0		69802	2					
ANR	69820	PrimaryExpression	0		69802	0					
ANR	69821	ExpressionStatement	"memset ( tmp , 0 , nmemb * len )"	2862:1:86180:86207	69802	1	True				
ANR	69822	CallExpression	"memset ( tmp , 0 , nmemb * len )"		69802	0					
ANR	69823	Callee	memset		69802	0					
ANR	69824	Identifier	memset		69802	0					
ANR	69825	ArgumentList	tmp		69802	1					
ANR	69826	Argument	tmp		69802	0					
ANR	69827	Identifier	tmp		69802	0					
ANR	69828	Argument	0		69802	1					
ANR	69829	PrimaryExpression	0		69802	0					
ANR	69830	Argument	nmemb * len		69802	2					
ANR	69831	MultiplicativeExpression	nmemb * len		69802	0		*			
ANR	69832	Identifier	nmemb		69802	0					
ANR	69833	Identifier	len		69802	1					
ANR	69834	ReturnStatement	return tmp ;	2863:1:86210:86220	69802	2	True				
ANR	69835	Identifier	tmp		69802	0					
ANR	69836	ReturnType	ZEND_API void *		69802	1					
ANR	69837	Identifier	__zend_calloc		69802	2					
ANR	69838	ParameterList	"size_t nmemb , size_t len"		69802	3					
ANR	69839	Parameter	size_t nmemb	2859:30:86109:86120	69802	0	True				
ANR	69840	ParameterType	size_t		69802	0					
ANR	69841	Identifier	nmemb		69802	1					
ANR	69842	Parameter	size_t len	2859:44:86123:86132	69802	1	True				
ANR	69843	ParameterType	size_t		69802	0					
ANR	69844	Identifier	len		69802	1					
ANR	69845	CFGEntryNode	ENTRY		69802		True				
ANR	69846	CFGExitNode	EXIT		69802		True				
ANR	69847	Symbol	len		69802						
ANR	69848	Symbol	tmp		69802						
ANR	69849	Symbol	nmemb		69802						
ANR	69850	Symbol	_safe_malloc		69802						
ANR	69851	Function	__zend_realloc	2866:0:86225:86359							
ANR	69852	FunctionDef	"__zend_realloc (void * p , size_t len)"		69851	0					
ANR	69853	CompoundStatement		2867:0:86277:86359	69851	0					
ANR	69854	ExpressionStatement	"p = realloc ( p , len )"	2868:1:86280:86299	69851	0	True				
ANR	69855	AssignmentExpression	"p = realloc ( p , len )"		69851	0		=			
ANR	69856	Identifier	p		69851	0					
ANR	69857	CallExpression	"realloc ( p , len )"		69851	1					
ANR	69858	Callee	realloc		69851	0					
ANR	69859	Identifier	realloc		69851	0					
ANR	69860	ArgumentList	p		69851	1					
ANR	69861	Argument	p		69851	0					
ANR	69862	Identifier	p		69851	0					
ANR	69863	Argument	len		69851	1					
ANR	69864	Identifier	len		69851	0					
ANR	69865	IfStatement	if ( EXPECTED ( p ) )		69851	1					
ANR	69866	Condition	EXPECTED ( p )	2869:5:86306:86316	69851	0	True				
ANR	69867	CallExpression	EXPECTED ( p )		69851	0					
ANR	69868	Callee	EXPECTED		69851	0					
ANR	69869	Identifier	EXPECTED		69851	0					
ANR	69870	ArgumentList	p		69851	1					
ANR	69871	Argument	p		69851	0					
ANR	69872	Identifier	p		69851	0					
ANR	69873	CompoundStatement		3:18:41:41	69851	1					
ANR	69874	ReturnStatement	return p ;	2870:2:86323:86331	69851	0	True				
ANR	69875	Identifier	p		69851	0					
ANR	69876	ExpressionStatement	zend_out_of_memory ( )	2872:1:86337:86357	69851	2	True				
ANR	69877	CallExpression	zend_out_of_memory ( )		69851	0					
ANR	69878	Callee	zend_out_of_memory		69851	0					
ANR	69879	Identifier	zend_out_of_memory		69851	0					
ANR	69880	ArgumentList			69851	1					
ANR	69881	ReturnType	ZEND_API void *		69851	1					
ANR	69882	Identifier	__zend_realloc		69851	2					
ANR	69883	ParameterList	"void * p , size_t len"		69851	3					
ANR	69884	Parameter	void * p	2866:31:86256:86262	69851	0	True				
ANR	69885	ParameterType	void *		69851	0					
ANR	69886	Identifier	p		69851	1					
ANR	69887	Parameter	size_t len	2866:40:86265:86274	69851	1	True				
ANR	69888	ParameterType	size_t		69851	0					
ANR	69889	Identifier	len		69851	1					
ANR	69890	CFGEntryNode	ENTRY		69851		True				
ANR	69891	CFGExitNode	EXIT		69851		True				
ANR	69892	Symbol	p		69851						
ANR	69893	Symbol	len		69851						
ANR	69894	Symbol	realloc		69851						
ANR	69895	Symbol	EXPECTED		69851						
