command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3868900	File	data/converged/CVE-2015-8617_php-src/zend_API.h								
ANR	3868901	ClassDef	_zend_function_entry	36:8:1585:1790							
ANR	3868902	DeclStmt									
ANR	3868903	Decl							const char	const char *	fname
ANR	3868904	DeclStmt									
ANR	3868905	Decl							void ( * ) ( INTERNAL_FUNCTION_PARAMETERS )	void ( * ) ( INTERNAL_FUNCTION_PARAMETERS )	handler
ANR	3868906	DeclStmt									
ANR	3868907	Decl							const struct _zend_internal_arg_info	const struct _zend_internal_arg_info *	arg_info
ANR	3868908	DeclStmt									
ANR	3868909	Decl							uint32_t	uint32_t	num_args
ANR	3868910	DeclStmt									
ANR	3868911	Decl							uint32_t	uint32_t	flags
ANR	3868912	DeclStmt									
ANR	3868913	Decl							_zend_function_entry	_zend_function_entry	zend_function_entry
ANR	3868914	ClassDef	_zend_fcall_info	44:8:1801:2035							
ANR	3868915	DeclStmt									
ANR	3868916	Decl							size_t	size_t	size
ANR	3868917	DeclStmt									
ANR	3868918	Decl							HashTable	HashTable *	function_table
ANR	3868919	DeclStmt									
ANR	3868920	Decl							zval	zval	function_name
ANR	3868921	DeclStmt									
ANR	3868922	Decl							zend_array	zend_array *	symbol_table
ANR	3868923	DeclStmt									
ANR	3868924	Decl							zval	zval *	retval
ANR	3868925	DeclStmt									
ANR	3868926	Decl							zval	zval *	params
ANR	3868927	DeclStmt									
ANR	3868928	Decl							zend_object	zend_object *	object
ANR	3868929	DeclStmt									
ANR	3868930	Decl							zend_bool	zend_bool	no_separation
ANR	3868931	DeclStmt									
ANR	3868932	Decl							uint32_t	uint32_t	param_count
ANR	3868933	DeclStmt									
ANR	3868934	Decl							_zend_fcall_info	_zend_fcall_info	zend_fcall_info
ANR	3868935	ClassDef	_zend_fcall_info_cache	56:8:2046:2248							
ANR	3868936	DeclStmt									
ANR	3868937	Decl							zend_bool	zend_bool	initialized
ANR	3868938	DeclStmt									
ANR	3868939	Decl							zend_function	zend_function *	function_handler
ANR	3868940	DeclStmt									
ANR	3868941	Decl							zend_class_entry	zend_class_entry *	calling_scope
ANR	3868942	DeclStmt									
ANR	3868943	Decl							zend_class_entry	zend_class_entry *	called_scope
ANR	3868944	DeclStmt									
ANR	3868945	Decl							zend_object	zend_object *	object
ANR	3868946	DeclStmt									
ANR	3868947	Decl							_zend_fcall_info_cache	_zend_fcall_info_cache	zend_fcall_info_cache
ANR	3868948	DeclStmt									
ANR	3868949	Decl							const zend_internal_arg_info	const zend_internal_arg_info [ ]	name
ANR	3868950	Function	get_module	146:1:8246:8327							
ANR	3868951	FunctionDef	get_module ()		3868950	0					
ANR	3868952	CompoundStatement		146:51:8296:8327	3868950	0					
ANR	3868953	Statement	return	146:1:8298:8303	3868950	0	True				
ANR	3868954	Statement	&	146:8:8305:8305	3868950	1	True				
ANR	3868955	IdentifierDeclStatement	name _module_entry ;	146:9:8306:8325	3868950	2	True				
ANR	3868956	IdentifierDecl	_module_entry		3868950	0					
ANR	3868957	IdentifierDeclType	name		3868950	0					
ANR	3868958	Identifier	_module_entry		3868950	1					
ANR	3868959	ReturnType	ZEND_DLEXPORT zend_module_entry *		3868950	1					
ANR	3868960	Identifier	get_module		3868950	2					
ANR	3868961	ParameterList			3868950	3					
ANR	3868962	CFGEntryNode	ENTRY		3868950		True				
ANR	3868963	CFGExitNode	EXIT		3868950		True				
ANR	3868964	Symbol	_module_entry		3868950						
ANR	3868965	DeclStmt									
ANR	3868966	Decl							zend_ module_name	zend_ module_name	_globals
ANR	3868967	DeclStmt									
ANR	3868968	Decl							ts_rsrc_id module_name	ts_rsrc_id module_name	_globals_id
ANR	3868969	DeclStmt									
ANR	3868970	Decl							extern ts_rsrc_id module_name	extern ts_rsrc_id module_name	_globals_id
ANR	3868971	DeclStmt									
ANR	3868972	Decl							zend_ module_name _globals module_name	zend_ module_name _globals module_name	_globals
ANR	3868973	DeclStmt									
ANR	3868974	Decl							extern zend_ module_name _globals module_name	extern zend_ module_name _globals module_name	_globals
ANR	3868975	DeclStmt									
ANR	3868976	Decl							zend_string	zend_string *	cl_name
ANR	3868977	DeclStmt									
ANR	3868978	Decl							ZEND_API int	ZEND_API int ( void )	zend_next_free_module
ANR	3868979	DeclStmt									
ANR	3868980	Decl							ZEND_API int	"ZEND_API int ( int param_count , zval * argument_array )"	_zend_get_parameters_array_ex
ANR	3868981	DeclStmt									
ANR	3868982	Decl							ZEND_API int	"ZEND_API int ( int param_count , zval * argument_array )"	zend_copy_parameters_array
ANR	3868983	DeclStmt									
ANR	3868984	Decl							ZEND_API char	ZEND_API char * ( const zval * arg )	zend_zval_type_name
ANR	3868985	DeclStmt									
ANR	3868986	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * scope , const zend_function_entry * functions , HashTable * function_table , int type )"	zend_register_functions
ANR	3868987	DeclStmt									
ANR	3868988	Decl							ZEND_API void	"ZEND_API void ( const zend_function_entry * functions , int count , HashTable * function_table )"	zend_unregister_functions
ANR	3868989	DeclStmt									
ANR	3868990	Decl							ZEND_API int	ZEND_API int ( zend_module_entry * module_entry )	zend_startup_module
ANR	3868991	DeclStmt									
ANR	3868992	Decl							ZEND_API zend_module_entry	ZEND_API zend_module_entry * ( zend_module_entry * module_entry )	zend_register_internal_module
ANR	3868993	DeclStmt									
ANR	3868994	Decl							ZEND_API zend_module_entry	ZEND_API zend_module_entry * ( zend_module_entry * module )	zend_register_module_ex
ANR	3868995	DeclStmt									
ANR	3868996	Decl							ZEND_API int	ZEND_API int ( zend_module_entry * module )	zend_startup_module_ex
ANR	3868997	DeclStmt									
ANR	3868998	Decl							ZEND_API int	ZEND_API int ( void )	zend_startup_modules
ANR	3868999	DeclStmt									
ANR	3869000	Decl							ZEND_API void	ZEND_API void ( void )	zend_collect_module_handlers
ANR	3869001	DeclStmt									
ANR	3869002	Decl							ZEND_API void	ZEND_API void ( void )	zend_destroy_modules
ANR	3869003	DeclStmt									
ANR	3869004	Decl							ZEND_API void	"ZEND_API void ( const zend_class_entry * ce , const zend_function * fptr , int error_type )"	zend_check_magic_method_implementation
ANR	3869005	DeclStmt									
ANR	3869006	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry * ( zend_class_entry * class_entry )	zend_register_internal_class
ANR	3869007	DeclStmt									
ANR	3869008	Decl							ZEND_API zend_class_entry	"ZEND_API zend_class_entry * ( zend_class_entry * class_entry , zend_class_entry * parent_ce )"	zend_register_internal_class_ex
ANR	3869009	DeclStmt									
ANR	3869010	Decl							ZEND_API zend_class_entry	ZEND_API zend_class_entry * ( zend_class_entry * orig_class_entry )	zend_register_internal_interface
ANR	3869011	DeclStmt									
ANR	3869012	Decl							ZEND_API int	"ZEND_API int ( const char * name , size_t name_len , zend_class_entry * ce )"	zend_register_class_alias_ex
ANR	3869013	DeclStmt									
ANR	3869014	Decl							ZEND_API int	"ZEND_API int ( char * function_name , size_t function_name_length )"	zend_disable_function
ANR	3869015	DeclStmt									
ANR	3869016	Decl							ZEND_API int	"ZEND_API int ( char * class_name , size_t class_name_length )"	zend_disable_class
ANR	3869017	DeclStmt									
ANR	3869018	Decl							ZEND_API ZEND_COLD void	ZEND_API ZEND_COLD void ( void )	zend_wrong_param_count
ANR	3869019	DeclStmt									
ANR	3869020	Decl							ZEND_API zend_bool	"ZEND_API zend_bool ( zval * callable , zend_object * object , uint check_flags , zend_string * * callable_name , zend_fcall_info_cache * fcc , char * * error )"	zend_is_callable_ex
ANR	3869021	DeclStmt									
ANR	3869022	Decl							ZEND_API zend_bool	"ZEND_API zend_bool ( zval * callable , uint check_flags , zend_string * * callable_name )"	zend_is_callable
ANR	3869023	DeclStmt									
ANR	3869024	Decl							ZEND_API zend_bool	"ZEND_API zend_bool ( zval * callable , zend_string * * callable_name )"	zend_make_callable
ANR	3869025	DeclStmt									
ANR	3869026	Decl							const char	const char * ( const char * module_name )	zend_get_module_version
ANR	3869027	DeclStmt									
ANR	3869028	Decl							ZEND_API int	ZEND_API int ( const char * module_name )	zend_get_module_started
ANR	3869029	DeclStmt									
ANR	3869030	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , zend_string * name , zval * property , int access_type , zend_string * doc_comment )"	zend_declare_property_ex
ANR	3869031	DeclStmt									
ANR	3869032	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , zval * property , int access_type )"	zend_declare_property
ANR	3869033	DeclStmt									
ANR	3869034	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , int access_type )"	zend_declare_property_null
ANR	3869035	DeclStmt									
ANR	3869036	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , zend_long value , int access_type )"	zend_declare_property_bool
ANR	3869037	DeclStmt									
ANR	3869038	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , zend_long value , int access_type )"	zend_declare_property_long
ANR	3869039	DeclStmt									
ANR	3869040	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , double value , int access_type )"	zend_declare_property_double
ANR	3869041	DeclStmt									
ANR	3869042	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , const char * value , int access_type )"	zend_declare_property_string
ANR	3869043	DeclStmt									
ANR	3869044	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , const char * value , size_t value_len , int access_type )"	zend_declare_property_stringl
ANR	3869045	DeclStmt									
ANR	3869046	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , zval * value )"	zend_declare_class_constant
ANR	3869047	DeclStmt									
ANR	3869048	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length )"	zend_declare_class_constant_null
ANR	3869049	DeclStmt									
ANR	3869050	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , zend_long value )"	zend_declare_class_constant_long
ANR	3869051	DeclStmt									
ANR	3869052	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , zend_bool value )"	zend_declare_class_constant_bool
ANR	3869053	DeclStmt									
ANR	3869054	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , double value )"	zend_declare_class_constant_double
ANR	3869055	DeclStmt									
ANR	3869056	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , const char * value , size_t value_length )"	zend_declare_class_constant_stringl
ANR	3869057	DeclStmt									
ANR	3869058	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * ce , const char * name , size_t name_length , const char * value )"	zend_declare_class_constant_string
ANR	3869059	DeclStmt									
ANR	3869060	Decl							ZEND_API int	ZEND_API int ( zend_class_entry * class_type )	zend_update_class_constants
ANR	3869061	DeclStmt									
ANR	3869062	Decl							ZEND_API void	"ZEND_API void ( zend_class_entry * scope , zval * object , zend_string * name , zval * value )"	zend_update_property_ex
ANR	3869063	DeclStmt									
ANR	3869064	Decl							ZEND_API void	"ZEND_API void ( zend_class_entry * scope , zval * object , const char * name , size_t name_length , zval * value )"	zend_update_property
ANR	3869065	DeclStmt									
ANR	3869066	Decl							ZEND_API void	"ZEND_API void ( zend_class_entry * scope , zval * object , const char * name , size_t name_length )"	zend_update_property_null
ANR	3869067	DeclStmt									
ANR	3869068	Decl							ZEND_API void	"ZEND_API void ( zend_class_entry * scope , zval * object , const char * name , size_t name_length , zend_long value )"	zend_update_property_bool
ANR	3869069	DeclStmt									
ANR	3869070	Decl							ZEND_API void	"ZEND_API void ( zend_class_entry * scope , zval * object , const char * name , size_t name_length , zend_long value )"	zend_update_property_long
ANR	3869071	DeclStmt									
ANR	3869072	Decl							ZEND_API void	"ZEND_API void ( zend_class_entry * scope , zval * object , const char * name , size_t name_length , double value )"	zend_update_property_double
ANR	3869073	DeclStmt									
ANR	3869074	Decl							ZEND_API void	"ZEND_API void ( zend_class_entry * scope , zval * object , const char * name , size_t name_length , zend_string * value )"	zend_update_property_str
ANR	3869075	DeclStmt									
ANR	3869076	Decl							ZEND_API void	"ZEND_API void ( zend_class_entry * scope , zval * object , const char * name , size_t name_length , const char * value )"	zend_update_property_string
ANR	3869077	DeclStmt									
ANR	3869078	Decl							ZEND_API void	"ZEND_API void ( zend_class_entry * scope , zval * object , const char * name , size_t name_length , const char * value , size_t value_length )"	zend_update_property_stringl
ANR	3869079	DeclStmt									
ANR	3869080	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * scope , const char * name , size_t name_length , zval * value )"	zend_update_static_property
ANR	3869081	DeclStmt									
ANR	3869082	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * scope , const char * name , size_t name_length )"	zend_update_static_property_null
ANR	3869083	DeclStmt									
ANR	3869084	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * scope , const char * name , size_t name_length , zend_long value )"	zend_update_static_property_bool
ANR	3869085	DeclStmt									
ANR	3869086	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * scope , const char * name , size_t name_length , zend_long value )"	zend_update_static_property_long
ANR	3869087	DeclStmt									
ANR	3869088	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * scope , const char * name , size_t name_length , double value )"	zend_update_static_property_double
ANR	3869089	DeclStmt									
ANR	3869090	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * scope , const char * name , size_t name_length , const char * value )"	zend_update_static_property_string
ANR	3869091	DeclStmt									
ANR	3869092	Decl							ZEND_API int	"ZEND_API int ( zend_class_entry * scope , const char * name , size_t name_length , const char * value , size_t value_length )"	zend_update_static_property_stringl
ANR	3869093	DeclStmt									
ANR	3869094	Decl							ZEND_API zval	"ZEND_API zval * ( zend_class_entry * scope , zval * object , const char * name , size_t name_length , zend_bool silent , zval * rv )"	zend_read_property
ANR	3869095	DeclStmt									
ANR	3869096	Decl							ZEND_API zval	"ZEND_API zval * ( zend_class_entry * scope , const char * name , size_t name_length , zend_bool silent )"	zend_read_static_property
ANR	3869097	DeclStmt									
ANR	3869098	Decl							ZEND_API char	ZEND_API char * ( int type )	zend_get_type_by_const
ANR	3869099	Function	ZEND_WRONG_PARAM_COUNT	368:1:22489:22561							
ANR	3869100	FunctionDef	ZEND_WRONG_PARAM_COUNT ()		3869099	0					
ANR	3869101	CompoundStatement		368:37:22525:22561	3869099	0					
ANR	3869102	ExpressionStatement	zend_wrong_param_count ( )	368:1:22527:22551	3869099	0	True				
ANR	3869103	CallExpression	zend_wrong_param_count ( )		3869099	0					
ANR	3869104	Callee	zend_wrong_param_count		3869099	0					
ANR	3869105	Identifier	zend_wrong_param_count		3869099	0					
ANR	3869106	ArgumentList			3869099	1					
ANR	3869107	ReturnStatement	return ;	368:27:22553:22559	3869099	1	True				
ANR	3869108	ReturnType	define		3869099	1					
ANR	3869109	Identifier	ZEND_WRONG_PARAM_COUNT		3869099	2					
ANR	3869110	ParameterList			3869099	3					
ANR	3869111	CFGEntryNode	ENTRY		3869099		True				
ANR	3869112	CFGExitNode	EXIT		3869099		True				
ANR	3869113	DeclStmt									
ANR	3869114	Decl							ZEND_API int	"ZEND_API int ( zval * arg , uint32_t size ZEND_FILE_LINE_DC )"	_array_init
ANR	3869115	DeclStmt									
ANR	3869116	Decl							ZEND_API void	"ZEND_API void ( zend_object * object , zend_class_entry * class_type )"	object_properties_init
ANR	3869117	DeclStmt									
ANR	3869118	Decl							ZEND_API void	"ZEND_API void ( zend_object * object , HashTable * properties )"	object_properties_init_ex
ANR	3869119	DeclStmt									
ANR	3869120	Decl							ZEND_API void	"ZEND_API void ( zend_object * object , HashTable * properties )"	object_properties_load
ANR	3869121	DeclStmt									
ANR	3869122	Decl							ZEND_API void	"ZEND_API void ( zval * obj , HashTable * properties )"	zend_merge_properties
ANR	3869123	DeclStmt									
ANR	3869124	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , zend_long n )"	add_assoc_long_ex
ANR	3869125	DeclStmt									
ANR	3869126	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len )"	add_assoc_null_ex
ANR	3869127	DeclStmt									
ANR	3869128	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , int b )"	add_assoc_bool_ex
ANR	3869129	DeclStmt									
ANR	3869130	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , zend_resource * r )"	add_assoc_resource_ex
ANR	3869131	DeclStmt									
ANR	3869132	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , double d )"	add_assoc_double_ex
ANR	3869133	DeclStmt									
ANR	3869134	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , zend_string * str )"	add_assoc_str_ex
ANR	3869135	DeclStmt									
ANR	3869136	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , char * str )"	add_assoc_string_ex
ANR	3869137	DeclStmt									
ANR	3869138	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , char * str , size_t length )"	add_assoc_stringl_ex
ANR	3869139	DeclStmt									
ANR	3869140	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , zval * value )"	add_assoc_zval_ex
ANR	3869141	DeclStmt									
ANR	3869142	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_ulong idx , zend_long n )"	add_index_long
ANR	3869143	DeclStmt									
ANR	3869144	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_ulong idx )"	add_index_null
ANR	3869145	DeclStmt									
ANR	3869146	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_ulong idx , int b )"	add_index_bool
ANR	3869147	DeclStmt									
ANR	3869148	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_ulong idx , zend_resource * r )"	add_index_resource
ANR	3869149	DeclStmt									
ANR	3869150	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_ulong idx , double d )"	add_index_double
ANR	3869151	DeclStmt									
ANR	3869152	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_ulong idx , zend_string * str )"	add_index_str
ANR	3869153	DeclStmt									
ANR	3869154	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_ulong idx , const char * str )"	add_index_string
ANR	3869155	DeclStmt									
ANR	3869156	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_ulong idx , const char * str , size_t length )"	add_index_stringl
ANR	3869157	DeclStmt									
ANR	3869158	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_ulong index , zval * value )"	add_index_zval
ANR	3869159	DeclStmt									
ANR	3869160	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_long n )"	add_next_index_long
ANR	3869161	DeclStmt									
ANR	3869162	Decl							ZEND_API int	ZEND_API int ( zval * arg )	add_next_index_null
ANR	3869163	DeclStmt									
ANR	3869164	Decl							ZEND_API int	"ZEND_API int ( zval * arg , int b )"	add_next_index_bool
ANR	3869165	DeclStmt									
ANR	3869166	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_resource * r )"	add_next_index_resource
ANR	3869167	DeclStmt									
ANR	3869168	Decl							ZEND_API int	"ZEND_API int ( zval * arg , double d )"	add_next_index_double
ANR	3869169	DeclStmt									
ANR	3869170	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zend_string * str )"	add_next_index_str
ANR	3869171	DeclStmt									
ANR	3869172	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * str )"	add_next_index_string
ANR	3869173	DeclStmt									
ANR	3869174	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * str , size_t length )"	add_next_index_stringl
ANR	3869175	DeclStmt									
ANR	3869176	Decl							ZEND_API int	"ZEND_API int ( zval * arg , zval * value )"	add_next_index_zval
ANR	3869177	DeclStmt									
ANR	3869178	Decl							ZEND_API zval	"ZEND_API zval * ( zval * arg , const char * key , uint key_len , const char * str )"	add_get_assoc_string_ex
ANR	3869179	DeclStmt									
ANR	3869180	Decl							ZEND_API zval	"ZEND_API zval * ( zval * arg , const char * key , uint key_len , const char * str , size_t length )"	add_get_assoc_stringl_ex
ANR	3869181	DeclStmt									
ANR	3869182	Decl							ZEND_API zval	"ZEND_API zval * ( zval * arg , zend_ulong idx , zend_long l )"	add_get_index_long
ANR	3869183	DeclStmt									
ANR	3869184	Decl							ZEND_API zval	"ZEND_API zval * ( zval * arg , zend_ulong idx , double d )"	add_get_index_double
ANR	3869185	DeclStmt									
ANR	3869186	Decl							ZEND_API zval	"ZEND_API zval * ( zval * arg , zend_ulong index , zend_string * str )"	add_get_index_str
ANR	3869187	DeclStmt									
ANR	3869188	Decl							ZEND_API zval	"ZEND_API zval * ( zval * arg , zend_ulong idx , const char * str )"	add_get_index_string
ANR	3869189	DeclStmt									
ANR	3869190	Decl							ZEND_API zval	"ZEND_API zval * ( zval * arg , zend_ulong idx , const char * str , size_t length )"	add_get_index_stringl
ANR	3869191	DeclStmt									
ANR	3869192	Decl							ZEND_API int	"ZEND_API int ( HashTable * ht , zval * key , zval * value )"	array_set_zval_key
ANR	3869193	DeclStmt									
ANR	3869194	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , zend_long l )"	add_property_long_ex
ANR	3869195	DeclStmt									
ANR	3869196	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len )"	add_property_null_ex
ANR	3869197	DeclStmt									
ANR	3869198	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , zend_long b )"	add_property_bool_ex
ANR	3869199	DeclStmt									
ANR	3869200	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , zend_resource * r )"	add_property_resource_ex
ANR	3869201	DeclStmt									
ANR	3869202	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , double d )"	add_property_double_ex
ANR	3869203	DeclStmt									
ANR	3869204	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , zend_string * str )"	add_property_str_ex
ANR	3869205	DeclStmt									
ANR	3869206	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , const char * str )"	add_property_string_ex
ANR	3869207	DeclStmt									
ANR	3869208	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , const char * str , size_t length )"	add_property_stringl_ex
ANR	3869209	DeclStmt									
ANR	3869210	Decl							ZEND_API int	"ZEND_API int ( zval * arg , const char * key , size_t key_len , zval * value )"	add_property_zval_ex
ANR	3869211	DeclStmt									
ANR	3869212	Decl							ZEND_API int	"ZEND_API int ( HashTable * function_table , zval * object , zval * function_name , zval * retval_ptr , uint32_t param_count , zval params [ ] )"	call_user_function
ANR	3869213	DeclStmt									
ANR	3869214	Decl							ZEND_API int	"ZEND_API int ( HashTable * function_table , zval * object , zval * function_name , zval * retval_ptr , uint32_t param_count , zval params [ ] , int no_separation , zend_array * symbol_table )"	call_user_function_ex
ANR	3869215	DeclStmt									
ANR	3869216	Decl							const zend_fcall_info	const zend_fcall_info	empty_fcall_info
ANR	3869217	DeclStmt									
ANR	3869218	Decl							const zend_fcall_info_cache	const zend_fcall_info_cache	empty_fcall_info_cache
ANR	3869219	DeclStmt									
ANR	3869220	Decl							ZEND_API int	"ZEND_API int ( zval * callable , uint check_flags , zend_fcall_info * fci , zend_fcall_info_cache * fcc , zend_string * * callable_name , char * * error )"	zend_fcall_info_init
ANR	3869221	DeclStmt									
ANR	3869222	Decl							ZEND_API void	"ZEND_API void ( zend_fcall_info * fci , int free_mem )"	zend_fcall_info_args_clear
ANR	3869223	DeclStmt									
ANR	3869224	Decl							ZEND_API void	"ZEND_API void ( zend_fcall_info * fci , int * param_count , zval * * params )"	zend_fcall_info_args_save
ANR	3869225	DeclStmt									
ANR	3869226	Decl							ZEND_API void	"ZEND_API void ( zend_fcall_info * fci , int param_count , zval * params )"	zend_fcall_info_args_restore
ANR	3869227	DeclStmt									
ANR	3869228	Decl							ZEND_API int	"ZEND_API int ( zend_fcall_info * fci , zval * args )"	zend_fcall_info_args
ANR	3869229	DeclStmt									
ANR	3869230	Decl							ZEND_API int	"ZEND_API int ( zend_fcall_info * fci , zend_function * func , zval * args )"	zend_fcall_info_args_ex
ANR	3869231	DeclStmt									
ANR	3869232	Decl							ZEND_API int	"ZEND_API int ( zend_fcall_info * fci , int argc , zval * argv )"	zend_fcall_info_argp
ANR	3869233	DeclStmt									
ANR	3869234	Decl							ZEND_API int	"ZEND_API int ( zend_fcall_info * fci , int argc , va_list * argv )"	zend_fcall_info_argv
ANR	3869235	DeclStmt									
ANR	3869236	Decl							ZEND_API int	"ZEND_API int ( zend_fcall_info * fci , zend_fcall_info_cache * fcc , zval * retval , zval * args )"	zend_fcall_info_call
ANR	3869237	DeclStmt									
ANR	3869238	Decl							ZEND_API int	"ZEND_API int ( zend_fcall_info * fci , zend_fcall_info_cache * fci_cache )"	zend_call_function
ANR	3869239	DeclStmt									
ANR	3869240	Decl							ZEND_API int	ZEND_API int ( zend_string * name )	zend_delete_global_variable
ANR	3869241	DeclStmt									
ANR	3869242	Decl							ZEND_API zend_array	ZEND_API zend_array * ( void )	zend_rebuild_symbol_table
ANR	3869243	DeclStmt									
ANR	3869244	Decl							ZEND_API void	ZEND_API void ( zend_execute_data * execute_data )	zend_attach_symbol_table
ANR	3869245	DeclStmt									
ANR	3869246	Decl							ZEND_API void	ZEND_API void ( zend_execute_data * execute_data )	zend_detach_symbol_table
ANR	3869247	DeclStmt									
ANR	3869248	Decl							ZEND_API int	"ZEND_API int ( zend_string * name , zval * value , int force )"	zend_set_local_var
ANR	3869249	DeclStmt									
ANR	3869250	Decl							ZEND_API int	"ZEND_API int ( const char * name , size_t len , zval * value , int force )"	zend_set_local_var_str
ANR	3869251	DeclStmt									
ANR	3869252	Decl							ZEND_API zend_string	"ZEND_API zend_string * ( zend_class_entry * ce , zend_string * name )"	zend_find_alias_name
ANR	3869253	DeclStmt									
ANR	3869254	Decl							ZEND_API zend_string	"ZEND_API zend_string * ( zend_class_entry * ce , zend_function * f )"	zend_resolve_method_name
ANR	3869255	DeclStmt									
ANR	3869256	Decl							const char	const char * ( const zend_class_entry * ce )	zend_get_object_type
ANR	3869257	DeclStmt									
ANR	3869258	Decl							ZEND_API	ZEND_API ( display_disabled_function )	ZEND_FUNCTION
ANR	3869259	DeclStmt									
ANR	3869260	Decl							ZEND_API	ZEND_API ( display_disabled_class )	ZEND_FUNCTION
ANR	3869261	DeclStmt									
ANR	3869262	Decl							const char	const char *	_s
ANR	3869263	DeclStmt									
ANR	3869264	Decl							const char	const char *	_s
ANR	3869265	DeclStmt									
ANR	3869266	Decl							zval	zval *	__z
ANR	3869267	DeclStmt									
ANR	3869268	Decl							zval	zval *	__zv
ANR	3869269	Function	RETURN_NULL	630:1:36570:36620							
ANR	3869270	FunctionDef	RETURN_NULL ()		3869269	0					
ANR	3869271	CompoundStatement		630:27:36596:36620	3869269	0					
ANR	3869272	ExpressionStatement	RETVAL_NULL ( )	630:1:36598:36611	3869269	0	True				
ANR	3869273	CallExpression	RETVAL_NULL ( )		3869269	0					
ANR	3869274	Callee	RETVAL_NULL		3869269	0					
ANR	3869275	Identifier	RETVAL_NULL		3869269	0					
ANR	3869276	ArgumentList			3869269	1					
ANR	3869277	ReturnStatement	return ;	630:16:36613:36619	3869269	1	True				
ANR	3869278	ReturnType	define		3869269	1					
ANR	3869279	Identifier	RETURN_NULL		3869269	2					
ANR	3869280	ParameterList			3869269	3					
ANR	3869281	CFGEntryNode	ENTRY		3869269		True				
ANR	3869282	CFGExitNode	EXIT		3869269		True				
ANR	3869283	Function	RETURN_EMPTY_STRING	639:1:37108:37173							
ANR	3869284	FunctionDef	RETURN_EMPTY_STRING ()		3869283	0					
ANR	3869285	CompoundStatement		639:33:37140:37173	3869283	0					
ANR	3869286	ExpressionStatement	RETVAL_EMPTY_STRING ( )	639:1:37142:37163	3869283	0	True				
ANR	3869287	CallExpression	RETVAL_EMPTY_STRING ( )		3869283	0					
ANR	3869288	Callee	RETVAL_EMPTY_STRING		3869283	0					
ANR	3869289	Identifier	RETVAL_EMPTY_STRING		3869283	0					
ANR	3869290	ArgumentList			3869283	1					
ANR	3869291	ReturnStatement	return ;	639:24:37165:37171	3869283	1	True				
ANR	3869292	ReturnType	define		3869283	1					
ANR	3869293	Identifier	RETURN_EMPTY_STRING		3869283	2					
ANR	3869294	ParameterList			3869283	3					
ANR	3869295	CFGEntryNode	ENTRY		3869283		True				
ANR	3869296	CFGExitNode	EXIT		3869283		True				
ANR	3869297	ClassDef	_zend_expected_type	690:8:39164:39268							
ANR	3869298	DeclStmt									
ANR	3869299	Decl							_zend_expected_type	_zend_expected_type	zend_expected_type
ANR	3869300	DeclStmt									
ANR	3869301	Decl							ZEND_API ZEND_COLD void ZEND_FASTCALL	"ZEND_API ZEND_COLD void ZEND_FASTCALL ( int num_args , int min_num_args , int max_num_args )"	zend_wrong_paramers_count_error
ANR	3869302	DeclStmt									
ANR	3869303	Decl							ZEND_API ZEND_COLD void ZEND_FASTCALL	"ZEND_API ZEND_COLD void ZEND_FASTCALL ( int num , zend_expected_type expected_type , zval * arg )"	zend_wrong_paramer_type_error
ANR	3869304	DeclStmt									
ANR	3869305	Decl							ZEND_API ZEND_COLD void ZEND_FASTCALL	"ZEND_API ZEND_COLD void ZEND_FASTCALL ( int num , char * name , zval * arg )"	zend_wrong_paramer_class_error
ANR	3869306	DeclStmt									
ANR	3869307	Decl							ZEND_API ZEND_COLD void ZEND_FASTCALL	"ZEND_API ZEND_COLD void ZEND_FASTCALL ( int severity , int num , char * error )"	zend_wrong_callback_error
ANR	3869308	DeclStmt									
ANR	3869309	Decl							const int	const int	_flags
ANR	3869310	DeclStmt									
ANR	3869311	Decl							int	int	_min_num_args
ANR	3869312	DeclStmt									
ANR	3869313	Decl							int	int	_max_num_args
ANR	3869314	DeclStmt									
ANR	3869315	Decl							int	int	_num_args
ANR	3869316	DeclStmt									
ANR	3869317	Decl							int	int	_i
ANR	3869318	DeclStmt									
ANR	3869319	Decl							zval	zval *	_real_arg
ANR	3869320	Decl							zval	zval *	_arg
ANR	3869321	DeclStmt									
ANR	3869322	Decl							zend_expected_type	zend_expected_type	_expected_type
ANR	3869323	DeclStmt									
ANR	3869324	Decl							char	char *	_error
ANR	3869325	DeclStmt									
ANR	3869326	Decl							zend_bool	zend_bool	_dummy
ANR	3869327	DeclStmt									
ANR	3869328	Decl							zend_bool	zend_bool	_optional
ANR	3869329	DeclStmt									
ANR	3869330	Decl							int	int	error_code
ANR	3869331	DeclStmt									
ANR	3869332	Decl							define Z_PARAM_OPTIONAL	define Z_PARAM_OPTIONAL	_optional
ANR	3869333	DeclStmt									
ANR	3869334	Decl							int	int	_num_varargs
ANR	3869335	DeclStmt									
ANR	3869336	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , zend_class_entry * * pce , int num , int check_null )"	zend_parse_arg_class
ANR	3869337	DeclStmt									
ANR	3869338	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , zend_bool * dest )"	zend_parse_arg_bool_slow
ANR	3869339	DeclStmt									
ANR	3869340	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , zend_bool * dest )"	zend_parse_arg_bool_weak
ANR	3869341	DeclStmt									
ANR	3869342	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , zend_long * dest )"	zend_parse_arg_long_slow
ANR	3869343	DeclStmt									
ANR	3869344	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , zend_long * dest )"	zend_parse_arg_long_weak
ANR	3869345	DeclStmt									
ANR	3869346	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , zend_long * dest )"	zend_parse_arg_long_cap_slow
ANR	3869347	DeclStmt									
ANR	3869348	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , zend_long * dest )"	zend_parse_arg_long_cap_weak
ANR	3869349	DeclStmt									
ANR	3869350	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , double * dest )"	zend_parse_arg_double_slow
ANR	3869351	DeclStmt									
ANR	3869352	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , double * dest )"	zend_parse_arg_double_weak
ANR	3869353	DeclStmt									
ANR	3869354	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , zend_string * * dest )"	zend_parse_arg_str_slow
ANR	3869355	DeclStmt									
ANR	3869356	Decl							ZEND_API int ZEND_FASTCALL	"ZEND_API int ZEND_FASTCALL ( zval * arg , zend_string * * dest )"	zend_parse_arg_str_weak
ANR	3869357	Function	zend_parse_arg_bool	1056:0:50714:51141							
ANR	3869358	FunctionDef	"zend_parse_arg_bool (zval * arg , zend_bool * dest , zend_bool * is_null , int check_null)"		3869357	0					
ANR	3869359	CompoundStatement		1057:0:50828:51141	3869357	0					
ANR	3869360	IfStatement	if ( check_null )		3869357	0					
ANR	3869361	Condition	check_null	1058:5:50835:50844	3869357	0	True				
ANR	3869362	Identifier	check_null		3869357	0					
ANR	3869363	CompoundStatement		2:17:18:18	3869357	1					
ANR	3869364	ExpressionStatement	* is_null = 0	1059:2:50851:50863	3869357	0	True				
ANR	3869365	AssignmentExpression	* is_null = 0		3869357	0		=			
ANR	3869366	UnaryOperationExpression	* is_null		3869357	0					
ANR	3869367	UnaryOperator	*		3869357	0					
ANR	3869368	Identifier	is_null		3869357	1					
ANR	3869369	PrimaryExpression	0		3869357	1					
ANR	3869370	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_TRUE ) )		3869357	1					
ANR	3869371	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_TRUE )	1061:5:50873:50906	3869357	0	True				
ANR	3869372	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_TRUE )		3869357	0					
ANR	3869373	Callee	EXPECTED		3869357	0					
ANR	3869374	Identifier	EXPECTED		3869357	0					
ANR	3869375	ArgumentList	Z_TYPE_P ( arg ) == IS_TRUE		3869357	1					
ANR	3869376	Argument	Z_TYPE_P ( arg ) == IS_TRUE		3869357	0					
ANR	3869377	EqualityExpression	Z_TYPE_P ( arg ) == IS_TRUE		3869357	0		==			
ANR	3869378	CallExpression	Z_TYPE_P ( arg )		3869357	0					
ANR	3869379	Callee	Z_TYPE_P		3869357	0					
ANR	3869380	Identifier	Z_TYPE_P		3869357	0					
ANR	3869381	ArgumentList	arg		3869357	1					
ANR	3869382	Argument	arg		3869357	0					
ANR	3869383	Identifier	arg		3869357	0					
ANR	3869384	Identifier	IS_TRUE		3869357	1					
ANR	3869385	CompoundStatement		5:41:80:80	3869357	1					
ANR	3869386	ExpressionStatement	* dest = 1	1062:2:50913:50922	3869357	0	True				
ANR	3869387	AssignmentExpression	* dest = 1		3869357	0		=			
ANR	3869388	UnaryOperationExpression	* dest		3869357	0					
ANR	3869389	UnaryOperator	*		3869357	0					
ANR	3869390	Identifier	dest		3869357	1					
ANR	3869391	PrimaryExpression	1		3869357	1					
ANR	3869392	ElseStatement	else		3869357	0					
ANR	3869393	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_FALSE ) )		3869357	0					
ANR	3869394	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_FALSE )	1063:12:50936:50970	3869357	0	True				
ANR	3869395	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_FALSE )		3869357	0					
ANR	3869396	Callee	EXPECTED		3869357	0					
ANR	3869397	Identifier	EXPECTED		3869357	0					
ANR	3869398	ArgumentList	Z_TYPE_P ( arg ) == IS_FALSE		3869357	1					
ANR	3869399	Argument	Z_TYPE_P ( arg ) == IS_FALSE		3869357	0					
ANR	3869400	EqualityExpression	Z_TYPE_P ( arg ) == IS_FALSE		3869357	0		==			
ANR	3869401	CallExpression	Z_TYPE_P ( arg )		3869357	0					
ANR	3869402	Callee	Z_TYPE_P		3869357	0					
ANR	3869403	Identifier	Z_TYPE_P		3869357	0					
ANR	3869404	ArgumentList	arg		3869357	1					
ANR	3869405	Argument	arg		3869357	0					
ANR	3869406	Identifier	arg		3869357	0					
ANR	3869407	Identifier	IS_FALSE		3869357	1					
ANR	3869408	CompoundStatement		7:49:144:144	3869357	1					
ANR	3869409	ExpressionStatement	* dest = 0	1064:2:50977:50986	3869357	0	True				
ANR	3869410	AssignmentExpression	* dest = 0		3869357	0		=			
ANR	3869411	UnaryOperationExpression	* dest		3869357	0					
ANR	3869412	UnaryOperator	*		3869357	0					
ANR	3869413	Identifier	dest		3869357	1					
ANR	3869414	PrimaryExpression	0		3869357	1					
ANR	3869415	ElseStatement	else		3869357	0					
ANR	3869416	IfStatement	if ( check_null && Z_TYPE_P ( arg ) == IS_NULL )		3869357	0					
ANR	3869417	Condition	check_null && Z_TYPE_P ( arg ) == IS_NULL	1065:12:51000:51037	3869357	0	True				
ANR	3869418	AndExpression	check_null && Z_TYPE_P ( arg ) == IS_NULL		3869357	0		&&			
ANR	3869419	Identifier	check_null		3869357	0					
ANR	3869420	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		3869357	1		==			
ANR	3869421	CallExpression	Z_TYPE_P ( arg )		3869357	0					
ANR	3869422	Callee	Z_TYPE_P		3869357	0					
ANR	3869423	Identifier	Z_TYPE_P		3869357	0					
ANR	3869424	ArgumentList	arg		3869357	1					
ANR	3869425	Argument	arg		3869357	0					
ANR	3869426	Identifier	arg		3869357	0					
ANR	3869427	Identifier	IS_NULL		3869357	1					
ANR	3869428	CompoundStatement		9:52:211:211	3869357	1					
ANR	3869429	ExpressionStatement	* is_null = 1	1066:2:51044:51056	3869357	0	True				
ANR	3869430	AssignmentExpression	* is_null = 1		3869357	0		=			
ANR	3869431	UnaryOperationExpression	* is_null		3869357	0					
ANR	3869432	UnaryOperator	*		3869357	0					
ANR	3869433	Identifier	is_null		3869357	1					
ANR	3869434	PrimaryExpression	1		3869357	1					
ANR	3869435	ExpressionStatement	* dest = 0	1067:2:51060:51069	3869357	1	True				
ANR	3869436	AssignmentExpression	* dest = 0		3869357	0		=			
ANR	3869437	UnaryOperationExpression	* dest		3869357	0					
ANR	3869438	UnaryOperator	*		3869357	0					
ANR	3869439	Identifier	dest		3869357	1					
ANR	3869440	PrimaryExpression	0		3869357	1					
ANR	3869441	ElseStatement	else		3869357	0					
ANR	3869442	CompoundStatement		12:8:250:250	3869357	0					
ANR	3869443	ReturnStatement	"return zend_parse_arg_bool_slow ( arg , dest ) ;"	1069:2:51083:51125	3869357	0	True				
ANR	3869444	CallExpression	"zend_parse_arg_bool_slow ( arg , dest )"		3869357	0					
ANR	3869445	Callee	zend_parse_arg_bool_slow		3869357	0					
ANR	3869446	Identifier	zend_parse_arg_bool_slow		3869357	0					
ANR	3869447	ArgumentList	arg		3869357	1					
ANR	3869448	Argument	arg		3869357	0					
ANR	3869449	Identifier	arg		3869357	0					
ANR	3869450	Argument	dest		3869357	1					
ANR	3869451	Identifier	dest		3869357	0					
ANR	3869452	ReturnStatement	return 1 ;	1071:1:51131:51139	3869357	2	True				
ANR	3869453	PrimaryExpression	1		3869357	0					
ANR	3869454	ReturnType	static zend_always_inline int		3869357	1					
ANR	3869455	Identifier	zend_parse_arg_bool		3869357	2					
ANR	3869456	ParameterList	"zval * arg , zend_bool * dest , zend_bool * is_null , int check_null"		3869357	3					
ANR	3869457	Parameter	zval * arg	1056:50:50764:50772	3869357	0	True				
ANR	3869458	ParameterType	zval *		3869357	0					
ANR	3869459	Identifier	arg		3869357	1					
ANR	3869460	Parameter	zend_bool * dest	1056:61:50775:50789	3869357	1	True				
ANR	3869461	ParameterType	zend_bool *		3869357	0					
ANR	3869462	Identifier	dest		3869357	1					
ANR	3869463	Parameter	zend_bool * is_null	1056:78:50792:50809	3869357	2	True				
ANR	3869464	ParameterType	zend_bool *		3869357	0					
ANR	3869465	Identifier	is_null		3869357	1					
ANR	3869466	Parameter	int check_null	1056:98:50812:50825	3869357	3	True				
ANR	3869467	ParameterType	int		3869357	0					
ANR	3869468	Identifier	check_null		3869357	1					
ANR	3869469	CFGEntryNode	ENTRY		3869357		True				
ANR	3869470	CFGExitNode	EXIT		3869357		True				
ANR	3869471	Symbol	IS_NULL		3869357						
ANR	3869472	Symbol	* dest		3869357						
ANR	3869473	Symbol	is_null		3869357						
ANR	3869474	Symbol	check_null		3869357						
ANR	3869475	Symbol	arg		3869357						
ANR	3869476	Symbol	IS_TRUE		3869357						
ANR	3869477	Symbol	zend_parse_arg_bool_slow		3869357						
ANR	3869478	Symbol	dest		3869357						
ANR	3869479	Symbol	Z_TYPE_P		3869357						
ANR	3869480	Symbol	EXPECTED		3869357						
ANR	3869481	Symbol	IS_FALSE		3869357						
ANR	3869482	Symbol	* is_null		3869357						
ANR	3869483	Function	zend_parse_arg_long	1074:0:51144:51597							
ANR	3869484	FunctionDef	"zend_parse_arg_long (zval * arg , zend_long * dest , zend_bool * is_null , int check_null , int cap)"		3869483	0					
ANR	3869485	CompoundStatement		1075:0:51267:51597	3869483	0					
ANR	3869486	IfStatement	if ( check_null )		3869483	0					
ANR	3869487	Condition	check_null	1076:5:51274:51283	3869483	0	True				
ANR	3869488	Identifier	check_null		3869483	0					
ANR	3869489	CompoundStatement		2:17:18:18	3869483	1					
ANR	3869490	ExpressionStatement	* is_null = 0	1077:2:51290:51302	3869483	0	True				
ANR	3869491	AssignmentExpression	* is_null = 0		3869483	0		=			
ANR	3869492	UnaryOperationExpression	* is_null		3869483	0					
ANR	3869493	UnaryOperator	*		3869483	0					
ANR	3869494	Identifier	is_null		3869483	1					
ANR	3869495	PrimaryExpression	0		3869483	1					
ANR	3869496	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_LONG ) )		3869483	1					
ANR	3869497	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_LONG )	1079:5:51312:51345	3869483	0	True				
ANR	3869498	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_LONG )		3869483	0					
ANR	3869499	Callee	EXPECTED		3869483	0					
ANR	3869500	Identifier	EXPECTED		3869483	0					
ANR	3869501	ArgumentList	Z_TYPE_P ( arg ) == IS_LONG		3869483	1					
ANR	3869502	Argument	Z_TYPE_P ( arg ) == IS_LONG		3869483	0					
ANR	3869503	EqualityExpression	Z_TYPE_P ( arg ) == IS_LONG		3869483	0		==			
ANR	3869504	CallExpression	Z_TYPE_P ( arg )		3869483	0					
ANR	3869505	Callee	Z_TYPE_P		3869483	0					
ANR	3869506	Identifier	Z_TYPE_P		3869483	0					
ANR	3869507	ArgumentList	arg		3869483	1					
ANR	3869508	Argument	arg		3869483	0					
ANR	3869509	Identifier	arg		3869483	0					
ANR	3869510	Identifier	IS_LONG		3869483	1					
ANR	3869511	CompoundStatement		5:41:80:80	3869483	1					
ANR	3869512	ExpressionStatement	* dest = Z_LVAL_P ( arg )	1080:2:51352:51373	3869483	0	True				
ANR	3869513	AssignmentExpression	* dest = Z_LVAL_P ( arg )		3869483	0		=			
ANR	3869514	UnaryOperationExpression	* dest		3869483	0					
ANR	3869515	UnaryOperator	*		3869483	0					
ANR	3869516	Identifier	dest		3869483	1					
ANR	3869517	CallExpression	Z_LVAL_P ( arg )		3869483	1					
ANR	3869518	Callee	Z_LVAL_P		3869483	0					
ANR	3869519	Identifier	Z_LVAL_P		3869483	0					
ANR	3869520	ArgumentList	arg		3869483	1					
ANR	3869521	Argument	arg		3869483	0					
ANR	3869522	Identifier	arg		3869483	0					
ANR	3869523	ElseStatement	else		3869483	0					
ANR	3869524	IfStatement	if ( check_null && Z_TYPE_P ( arg ) == IS_NULL )		3869483	0					
ANR	3869525	Condition	check_null && Z_TYPE_P ( arg ) == IS_NULL	1081:12:51387:51424	3869483	0	True				
ANR	3869526	AndExpression	check_null && Z_TYPE_P ( arg ) == IS_NULL		3869483	0		&&			
ANR	3869527	Identifier	check_null		3869483	0					
ANR	3869528	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		3869483	1		==			
ANR	3869529	CallExpression	Z_TYPE_P ( arg )		3869483	0					
ANR	3869530	Callee	Z_TYPE_P		3869483	0					
ANR	3869531	Identifier	Z_TYPE_P		3869483	0					
ANR	3869532	ArgumentList	arg		3869483	1					
ANR	3869533	Argument	arg		3869483	0					
ANR	3869534	Identifier	arg		3869483	0					
ANR	3869535	Identifier	IS_NULL		3869483	1					
ANR	3869536	CompoundStatement		7:52:159:159	3869483	1					
ANR	3869537	ExpressionStatement	* is_null = 1	1082:2:51431:51443	3869483	0	True				
ANR	3869538	AssignmentExpression	* is_null = 1		3869483	0		=			
ANR	3869539	UnaryOperationExpression	* is_null		3869483	0					
ANR	3869540	UnaryOperator	*		3869483	0					
ANR	3869541	Identifier	is_null		3869483	1					
ANR	3869542	PrimaryExpression	1		3869483	1					
ANR	3869543	ExpressionStatement	* dest = 0	1083:2:51447:51456	3869483	1	True				
ANR	3869544	AssignmentExpression	* dest = 0		3869483	0		=			
ANR	3869545	UnaryOperationExpression	* dest		3869483	0					
ANR	3869546	UnaryOperator	*		3869483	0					
ANR	3869547	Identifier	dest		3869483	1					
ANR	3869548	PrimaryExpression	0		3869483	1					
ANR	3869549	ElseStatement	else		3869483	0					
ANR	3869550	IfStatement	if ( cap )		3869483	0					
ANR	3869551	Condition	cap	1084:12:51470:51472	3869483	0	True				
ANR	3869552	Identifier	cap		3869483	0					
ANR	3869553	CompoundStatement		10:17:207:207	3869483	1					
ANR	3869554	ReturnStatement	"return zend_parse_arg_long_cap_slow ( arg , dest ) ;"	1085:2:51479:51525	3869483	0	True				
ANR	3869555	CallExpression	"zend_parse_arg_long_cap_slow ( arg , dest )"		3869483	0					
ANR	3869556	Callee	zend_parse_arg_long_cap_slow		3869483	0					
ANR	3869557	Identifier	zend_parse_arg_long_cap_slow		3869483	0					
ANR	3869558	ArgumentList	arg		3869483	1					
ANR	3869559	Argument	arg		3869483	0					
ANR	3869560	Identifier	arg		3869483	0					
ANR	3869561	Argument	dest		3869483	1					
ANR	3869562	Identifier	dest		3869483	0					
ANR	3869563	ElseStatement	else		3869483	0					
ANR	3869564	CompoundStatement		12:8:267:267	3869483	0					
ANR	3869565	ReturnStatement	"return zend_parse_arg_long_slow ( arg , dest ) ;"	1087:2:51539:51581	3869483	0	True				
ANR	3869566	CallExpression	"zend_parse_arg_long_slow ( arg , dest )"		3869483	0					
ANR	3869567	Callee	zend_parse_arg_long_slow		3869483	0					
ANR	3869568	Identifier	zend_parse_arg_long_slow		3869483	0					
ANR	3869569	ArgumentList	arg		3869483	1					
ANR	3869570	Argument	arg		3869483	0					
ANR	3869571	Identifier	arg		3869483	0					
ANR	3869572	Argument	dest		3869483	1					
ANR	3869573	Identifier	dest		3869483	0					
ANR	3869574	ReturnStatement	return 1 ;	1089:1:51587:51595	3869483	2	True				
ANR	3869575	PrimaryExpression	1		3869483	0					
ANR	3869576	ReturnType	static zend_always_inline int		3869483	1					
ANR	3869577	Identifier	zend_parse_arg_long		3869483	2					
ANR	3869578	ParameterList	"zval * arg , zend_long * dest , zend_bool * is_null , int check_null , int cap"		3869483	3					
ANR	3869579	Parameter	zval * arg	1074:50:51194:51202	3869483	0	True				
ANR	3869580	ParameterType	zval *		3869483	0					
ANR	3869581	Identifier	arg		3869483	1					
ANR	3869582	Parameter	zend_long * dest	1074:61:51205:51219	3869483	1	True				
ANR	3869583	ParameterType	zend_long *		3869483	0					
ANR	3869584	Identifier	dest		3869483	1					
ANR	3869585	Parameter	zend_bool * is_null	1074:78:51222:51239	3869483	2	True				
ANR	3869586	ParameterType	zend_bool *		3869483	0					
ANR	3869587	Identifier	is_null		3869483	1					
ANR	3869588	Parameter	int check_null	1074:98:51242:51255	3869483	3	True				
ANR	3869589	ParameterType	int		3869483	0					
ANR	3869590	Identifier	check_null		3869483	1					
ANR	3869591	Parameter	int cap	1074:114:51258:51264	3869483	4	True				
ANR	3869592	ParameterType	int		3869483	0					
ANR	3869593	Identifier	cap		3869483	1					
ANR	3869594	CFGEntryNode	ENTRY		3869483		True				
ANR	3869595	CFGExitNode	EXIT		3869483		True				
ANR	3869596	Symbol	* dest		3869483						
ANR	3869597	Symbol	is_null		3869483						
ANR	3869598	Symbol	check_null		3869483						
ANR	3869599	Symbol	zend_parse_arg_long_slow		3869483						
ANR	3869600	Symbol	dest		3869483						
ANR	3869601	Symbol	Z_TYPE_P		3869483						
ANR	3869602	Symbol	Z_LVAL_P		3869483						
ANR	3869603	Symbol	cap		3869483						
ANR	3869604	Symbol	IS_NULL		3869483						
ANR	3869605	Symbol	IS_LONG		3869483						
ANR	3869606	Symbol	arg		3869483						
ANR	3869607	Symbol	EXPECTED		3869483						
ANR	3869608	Symbol	zend_parse_arg_long_cap_slow		3869483						
ANR	3869609	Symbol	* is_null		3869483						
ANR	3869610	Function	zend_parse_arg_double	1092:0:51600:51980							
ANR	3869611	FunctionDef	"zend_parse_arg_double (zval * arg , double * dest , zend_bool * is_null , int check_null)"		3869610	0					
ANR	3869612	CompoundStatement		1093:0:51713:51980	3869610	0					
ANR	3869613	IfStatement	if ( check_null )		3869610	0					
ANR	3869614	Condition	check_null	1094:5:51720:51729	3869610	0	True				
ANR	3869615	Identifier	check_null		3869610	0					
ANR	3869616	CompoundStatement		2:17:18:18	3869610	1					
ANR	3869617	ExpressionStatement	* is_null = 0	1095:2:51736:51748	3869610	0	True				
ANR	3869618	AssignmentExpression	* is_null = 0		3869610	0		=			
ANR	3869619	UnaryOperationExpression	* is_null		3869610	0					
ANR	3869620	UnaryOperator	*		3869610	0					
ANR	3869621	Identifier	is_null		3869610	1					
ANR	3869622	PrimaryExpression	0		3869610	1					
ANR	3869623	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_DOUBLE ) )		3869610	1					
ANR	3869624	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_DOUBLE )	1097:5:51758:51793	3869610	0	True				
ANR	3869625	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_DOUBLE )		3869610	0					
ANR	3869626	Callee	EXPECTED		3869610	0					
ANR	3869627	Identifier	EXPECTED		3869610	0					
ANR	3869628	ArgumentList	Z_TYPE_P ( arg ) == IS_DOUBLE		3869610	1					
ANR	3869629	Argument	Z_TYPE_P ( arg ) == IS_DOUBLE		3869610	0					
ANR	3869630	EqualityExpression	Z_TYPE_P ( arg ) == IS_DOUBLE		3869610	0		==			
ANR	3869631	CallExpression	Z_TYPE_P ( arg )		3869610	0					
ANR	3869632	Callee	Z_TYPE_P		3869610	0					
ANR	3869633	Identifier	Z_TYPE_P		3869610	0					
ANR	3869634	ArgumentList	arg		3869610	1					
ANR	3869635	Argument	arg		3869610	0					
ANR	3869636	Identifier	arg		3869610	0					
ANR	3869637	Identifier	IS_DOUBLE		3869610	1					
ANR	3869638	CompoundStatement		5:43:82:82	3869610	1					
ANR	3869639	ExpressionStatement	* dest = Z_DVAL_P ( arg )	1098:2:51800:51821	3869610	0	True				
ANR	3869640	AssignmentExpression	* dest = Z_DVAL_P ( arg )		3869610	0		=			
ANR	3869641	UnaryOperationExpression	* dest		3869610	0					
ANR	3869642	UnaryOperator	*		3869610	0					
ANR	3869643	Identifier	dest		3869610	1					
ANR	3869644	CallExpression	Z_DVAL_P ( arg )		3869610	1					
ANR	3869645	Callee	Z_DVAL_P		3869610	0					
ANR	3869646	Identifier	Z_DVAL_P		3869610	0					
ANR	3869647	ArgumentList	arg		3869610	1					
ANR	3869648	Argument	arg		3869610	0					
ANR	3869649	Identifier	arg		3869610	0					
ANR	3869650	ElseStatement	else		3869610	0					
ANR	3869651	IfStatement	if ( check_null && Z_TYPE_P ( arg ) == IS_NULL )		3869610	0					
ANR	3869652	Condition	check_null && Z_TYPE_P ( arg ) == IS_NULL	1099:12:51835:51872	3869610	0	True				
ANR	3869653	AndExpression	check_null && Z_TYPE_P ( arg ) == IS_NULL		3869610	0		&&			
ANR	3869654	Identifier	check_null		3869610	0					
ANR	3869655	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		3869610	1		==			
ANR	3869656	CallExpression	Z_TYPE_P ( arg )		3869610	0					
ANR	3869657	Callee	Z_TYPE_P		3869610	0					
ANR	3869658	Identifier	Z_TYPE_P		3869610	0					
ANR	3869659	ArgumentList	arg		3869610	1					
ANR	3869660	Argument	arg		3869610	0					
ANR	3869661	Identifier	arg		3869610	0					
ANR	3869662	Identifier	IS_NULL		3869610	1					
ANR	3869663	CompoundStatement		7:52:161:161	3869610	1					
ANR	3869664	ExpressionStatement	* is_null = 1	1100:2:51879:51891	3869610	0	True				
ANR	3869665	AssignmentExpression	* is_null = 1		3869610	0		=			
ANR	3869666	UnaryOperationExpression	* is_null		3869610	0					
ANR	3869667	UnaryOperator	*		3869610	0					
ANR	3869668	Identifier	is_null		3869610	1					
ANR	3869669	PrimaryExpression	1		3869610	1					
ANR	3869670	ExpressionStatement	* dest = 0.0	1101:2:51895:51906	3869610	1	True				
ANR	3869671	AssignmentExpression	* dest = 0.0		3869610	0		=			
ANR	3869672	UnaryOperationExpression	* dest		3869610	0					
ANR	3869673	UnaryOperator	*		3869610	0					
ANR	3869674	Identifier	dest		3869610	1					
ANR	3869675	PrimaryExpression	0.0		3869610	1					
ANR	3869676	ElseStatement	else		3869610	0					
ANR	3869677	CompoundStatement		10:8:202:202	3869610	0					
ANR	3869678	ReturnStatement	"return zend_parse_arg_double_slow ( arg , dest ) ;"	1103:2:51920:51964	3869610	0	True				
ANR	3869679	CallExpression	"zend_parse_arg_double_slow ( arg , dest )"		3869610	0					
ANR	3869680	Callee	zend_parse_arg_double_slow		3869610	0					
ANR	3869681	Identifier	zend_parse_arg_double_slow		3869610	0					
ANR	3869682	ArgumentList	arg		3869610	1					
ANR	3869683	Argument	arg		3869610	0					
ANR	3869684	Identifier	arg		3869610	0					
ANR	3869685	Argument	dest		3869610	1					
ANR	3869686	Identifier	dest		3869610	0					
ANR	3869687	ReturnStatement	return 1 ;	1105:1:51970:51978	3869610	2	True				
ANR	3869688	PrimaryExpression	1		3869610	0					
ANR	3869689	ReturnType	static zend_always_inline int		3869610	1					
ANR	3869690	Identifier	zend_parse_arg_double		3869610	2					
ANR	3869691	ParameterList	"zval * arg , double * dest , zend_bool * is_null , int check_null"		3869610	3					
ANR	3869692	Parameter	zval * arg	1092:52:51652:51660	3869610	0	True				
ANR	3869693	ParameterType	zval *		3869610	0					
ANR	3869694	Identifier	arg		3869610	1					
ANR	3869695	Parameter	double * dest	1092:63:51663:51674	3869610	1	True				
ANR	3869696	ParameterType	double *		3869610	0					
ANR	3869697	Identifier	dest		3869610	1					
ANR	3869698	Parameter	zend_bool * is_null	1092:77:51677:51694	3869610	2	True				
ANR	3869699	ParameterType	zend_bool *		3869610	0					
ANR	3869700	Identifier	is_null		3869610	1					
ANR	3869701	Parameter	int check_null	1092:97:51697:51710	3869610	3	True				
ANR	3869702	ParameterType	int		3869610	0					
ANR	3869703	Identifier	check_null		3869610	1					
ANR	3869704	CFGEntryNode	ENTRY		3869610		True				
ANR	3869705	CFGExitNode	EXIT		3869610		True				
ANR	3869706	Symbol	IS_NULL		3869610						
ANR	3869707	Symbol	* dest		3869610						
ANR	3869708	Symbol	is_null		3869610						
ANR	3869709	Symbol	check_null		3869610						
ANR	3869710	Symbol	arg		3869610						
ANR	3869711	Symbol	IS_DOUBLE		3869610						
ANR	3869712	Symbol	zend_parse_arg_double_slow		3869610						
ANR	3869713	Symbol	dest		3869610						
ANR	3869714	Symbol	Z_TYPE_P		3869610						
ANR	3869715	Symbol	EXPECTED		3869610						
ANR	3869716	Symbol	Z_DVAL_P		3869610						
ANR	3869717	Symbol	* is_null		3869610						
ANR	3869718	Function	zend_parse_arg_str	1108:0:51983:52289							
ANR	3869719	FunctionDef	"zend_parse_arg_str (zval * arg , zend_string * * dest , int check_null)"		3869718	0					
ANR	3869720	CompoundStatement		1109:0:52079:52289	3869718	0					
ANR	3869721	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_STRING ) )		3869718	0					
ANR	3869722	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_STRING )	1110:5:52086:52121	3869718	0	True				
ANR	3869723	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_STRING )		3869718	0					
ANR	3869724	Callee	EXPECTED		3869718	0					
ANR	3869725	Identifier	EXPECTED		3869718	0					
ANR	3869726	ArgumentList	Z_TYPE_P ( arg ) == IS_STRING		3869718	1					
ANR	3869727	Argument	Z_TYPE_P ( arg ) == IS_STRING		3869718	0					
ANR	3869728	EqualityExpression	Z_TYPE_P ( arg ) == IS_STRING		3869718	0		==			
ANR	3869729	CallExpression	Z_TYPE_P ( arg )		3869718	0					
ANR	3869730	Callee	Z_TYPE_P		3869718	0					
ANR	3869731	Identifier	Z_TYPE_P		3869718	0					
ANR	3869732	ArgumentList	arg		3869718	1					
ANR	3869733	Argument	arg		3869718	0					
ANR	3869734	Identifier	arg		3869718	0					
ANR	3869735	Identifier	IS_STRING		3869718	1					
ANR	3869736	CompoundStatement		2:43:44:44	3869718	1					
ANR	3869737	ExpressionStatement	* dest = Z_STR_P ( arg )	1111:2:52128:52148	3869718	0	True				
ANR	3869738	AssignmentExpression	* dest = Z_STR_P ( arg )		3869718	0		=			
ANR	3869739	UnaryOperationExpression	* dest		3869718	0					
ANR	3869740	UnaryOperator	*		3869718	0					
ANR	3869741	Identifier	dest		3869718	1					
ANR	3869742	CallExpression	Z_STR_P ( arg )		3869718	1					
ANR	3869743	Callee	Z_STR_P		3869718	0					
ANR	3869744	Identifier	Z_STR_P		3869718	0					
ANR	3869745	ArgumentList	arg		3869718	1					
ANR	3869746	Argument	arg		3869718	0					
ANR	3869747	Identifier	arg		3869718	0					
ANR	3869748	ElseStatement	else		3869718	0					
ANR	3869749	IfStatement	if ( check_null && Z_TYPE_P ( arg ) == IS_NULL )		3869718	0					
ANR	3869750	Condition	check_null && Z_TYPE_P ( arg ) == IS_NULL	1112:12:52162:52199	3869718	0	True				
ANR	3869751	AndExpression	check_null && Z_TYPE_P ( arg ) == IS_NULL		3869718	0		&&			
ANR	3869752	Identifier	check_null		3869718	0					
ANR	3869753	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		3869718	1		==			
ANR	3869754	CallExpression	Z_TYPE_P ( arg )		3869718	0					
ANR	3869755	Callee	Z_TYPE_P		3869718	0					
ANR	3869756	Identifier	Z_TYPE_P		3869718	0					
ANR	3869757	ArgumentList	arg		3869718	1					
ANR	3869758	Argument	arg		3869718	0					
ANR	3869759	Identifier	arg		3869718	0					
ANR	3869760	Identifier	IS_NULL		3869718	1					
ANR	3869761	CompoundStatement		4:52:122:122	3869718	1					
ANR	3869762	ExpressionStatement	* dest = NULL	1113:2:52206:52218	3869718	0	True				
ANR	3869763	AssignmentExpression	* dest = NULL		3869718	0		=			
ANR	3869764	UnaryOperationExpression	* dest		3869718	0					
ANR	3869765	UnaryOperator	*		3869718	0					
ANR	3869766	Identifier	dest		3869718	1					
ANR	3869767	Identifier	NULL		3869718	1					
ANR	3869768	ElseStatement	else		3869718	0					
ANR	3869769	CompoundStatement		6:8:148:148	3869718	0					
ANR	3869770	ReturnStatement	"return zend_parse_arg_str_slow ( arg , dest ) ;"	1115:2:52232:52273	3869718	0	True				
ANR	3869771	CallExpression	"zend_parse_arg_str_slow ( arg , dest )"		3869718	0					
ANR	3869772	Callee	zend_parse_arg_str_slow		3869718	0					
ANR	3869773	Identifier	zend_parse_arg_str_slow		3869718	0					
ANR	3869774	ArgumentList	arg		3869718	1					
ANR	3869775	Argument	arg		3869718	0					
ANR	3869776	Identifier	arg		3869718	0					
ANR	3869777	Argument	dest		3869718	1					
ANR	3869778	Identifier	dest		3869718	0					
ANR	3869779	ReturnStatement	return 1 ;	1117:1:52279:52287	3869718	1	True				
ANR	3869780	PrimaryExpression	1		3869718	0					
ANR	3869781	ReturnType	static zend_always_inline int		3869718	1					
ANR	3869782	Identifier	zend_parse_arg_str		3869718	2					
ANR	3869783	ParameterList	"zval * arg , zend_string * * dest , int check_null"		3869718	3					
ANR	3869784	Parameter	zval * arg	1108:49:52032:52040	3869718	0	True				
ANR	3869785	ParameterType	zval *		3869718	0					
ANR	3869786	Identifier	arg		3869718	1					
ANR	3869787	Parameter	zend_string * * dest	1108:60:52043:52060	3869718	1	True				
ANR	3869788	ParameterType	zend_string * *		3869718	0					
ANR	3869789	Identifier	dest		3869718	1					
ANR	3869790	Parameter	int check_null	1108:80:52063:52076	3869718	2	True				
ANR	3869791	ParameterType	int		3869718	0					
ANR	3869792	Identifier	check_null		3869718	1					
ANR	3869793	CFGEntryNode	ENTRY		3869718		True				
ANR	3869794	CFGExitNode	EXIT		3869718		True				
ANR	3869795	Symbol	zend_parse_arg_str_slow		3869718						
ANR	3869796	Symbol	NULL		3869718						
ANR	3869797	Symbol	IS_NULL		3869718						
ANR	3869798	Symbol	* dest		3869718						
ANR	3869799	Symbol	check_null		3869718						
ANR	3869800	Symbol	arg		3869718						
ANR	3869801	Symbol	IS_STRING		3869718						
ANR	3869802	Symbol	Z_STR_P		3869718						
ANR	3869803	Symbol	dest		3869718						
ANR	3869804	Symbol	Z_TYPE_P		3869718						
ANR	3869805	Symbol	EXPECTED		3869718						
ANR	3869806	Function	zend_parse_arg_string	1120:0:52292:52640							
ANR	3869807	FunctionDef	"zend_parse_arg_string (zval * arg , char * * dest , size_t * dest_len , int check_null)"		3869806	0					
ANR	3869808	CompoundStatement		1121:0:52402:52640	3869806	0					
ANR	3869809	IdentifierDeclStatement	zend_string * str ;	1122:1:52405:52421	3869806	0	True				
ANR	3869810	IdentifierDecl	* str		3869806	0					
ANR	3869811	IdentifierDeclType	zend_string *		3869806	0					
ANR	3869812	Identifier	str		3869806	1					
ANR	3869813	IfStatement	"if ( ! zend_parse_arg_str ( arg , & str , check_null ) )"		3869806	1					
ANR	3869814	Condition	"! zend_parse_arg_str ( arg , & str , check_null )"	1124:5:52429:52470	3869806	0	True				
ANR	3869815	UnaryOperationExpression	"! zend_parse_arg_str ( arg , & str , check_null )"		3869806	0					
ANR	3869816	UnaryOperator	!		3869806	0					
ANR	3869817	CallExpression	"zend_parse_arg_str ( arg , & str , check_null )"		3869806	1					
ANR	3869818	Callee	zend_parse_arg_str		3869806	0					
ANR	3869819	Identifier	zend_parse_arg_str		3869806	0					
ANR	3869820	ArgumentList	arg		3869806	1					
ANR	3869821	Argument	arg		3869806	0					
ANR	3869822	Identifier	arg		3869806	0					
ANR	3869823	Argument	& str		3869806	1					
ANR	3869824	UnaryOperationExpression	& str		3869806	0					
ANR	3869825	UnaryOperator	&		3869806	0					
ANR	3869826	Identifier	str		3869806	1					
ANR	3869827	Argument	check_null		3869806	2					
ANR	3869828	Identifier	check_null		3869806	0					
ANR	3869829	CompoundStatement		4:49:70:70	3869806	1					
ANR	3869830	ReturnStatement	return 0 ;	1125:2:52477:52485	3869806	0	True				
ANR	3869831	PrimaryExpression	0		3869806	0					
ANR	3869832	IfStatement	if ( check_null && UNEXPECTED ( ! str ) )		3869806	2					
ANR	3869833	Condition	check_null && UNEXPECTED ( ! str )	1127:5:52495:52524	3869806	0	True				
ANR	3869834	AndExpression	check_null && UNEXPECTED ( ! str )		3869806	0		&&			
ANR	3869835	Identifier	check_null		3869806	0					
ANR	3869836	CallExpression	UNEXPECTED ( ! str )		3869806	1					
ANR	3869837	Callee	UNEXPECTED		3869806	0					
ANR	3869838	Identifier	UNEXPECTED		3869806	0					
ANR	3869839	ArgumentList	! str		3869806	1					
ANR	3869840	Argument	! str		3869806	0					
ANR	3869841	UnaryOperationExpression	! str		3869806	0					
ANR	3869842	UnaryOperator	!		3869806	0					
ANR	3869843	Identifier	str		3869806	1					
ANR	3869844	CompoundStatement		7:37:124:124	3869806	1					
ANR	3869845	ExpressionStatement	* dest = NULL	1128:2:52531:52543	3869806	0	True				
ANR	3869846	AssignmentExpression	* dest = NULL		3869806	0		=			
ANR	3869847	UnaryOperationExpression	* dest		3869806	0					
ANR	3869848	UnaryOperator	*		3869806	0					
ANR	3869849	Identifier	dest		3869806	1					
ANR	3869850	Identifier	NULL		3869806	1					
ANR	3869851	ExpressionStatement	* dest_len = 0	1129:2:52547:52560	3869806	1	True				
ANR	3869852	AssignmentExpression	* dest_len = 0		3869806	0		=			
ANR	3869853	UnaryOperationExpression	* dest_len		3869806	0					
ANR	3869854	UnaryOperator	*		3869806	0					
ANR	3869855	Identifier	dest_len		3869806	1					
ANR	3869856	PrimaryExpression	0		3869806	1					
ANR	3869857	ElseStatement	else		3869806	0					
ANR	3869858	CompoundStatement		10:8:167:167	3869806	0					
ANR	3869859	ExpressionStatement	* dest = ZSTR_VAL ( str )	1131:2:52574:52595	3869806	0	True				
ANR	3869860	AssignmentExpression	* dest = ZSTR_VAL ( str )		3869806	0		=			
ANR	3869861	UnaryOperationExpression	* dest		3869806	0					
ANR	3869862	UnaryOperator	*		3869806	0					
ANR	3869863	Identifier	dest		3869806	1					
ANR	3869864	CallExpression	ZSTR_VAL ( str )		3869806	1					
ANR	3869865	Callee	ZSTR_VAL		3869806	0					
ANR	3869866	Identifier	ZSTR_VAL		3869806	0					
ANR	3869867	ArgumentList	str		3869806	1					
ANR	3869868	Argument	str		3869806	0					
ANR	3869869	Identifier	str		3869806	0					
ANR	3869870	ExpressionStatement	* dest_len = ZSTR_LEN ( str )	1132:2:52599:52624	3869806	1	True				
ANR	3869871	AssignmentExpression	* dest_len = ZSTR_LEN ( str )		3869806	0		=			
ANR	3869872	UnaryOperationExpression	* dest_len		3869806	0					
ANR	3869873	UnaryOperator	*		3869806	0					
ANR	3869874	Identifier	dest_len		3869806	1					
ANR	3869875	CallExpression	ZSTR_LEN ( str )		3869806	1					
ANR	3869876	Callee	ZSTR_LEN		3869806	0					
ANR	3869877	Identifier	ZSTR_LEN		3869806	0					
ANR	3869878	ArgumentList	str		3869806	1					
ANR	3869879	Argument	str		3869806	0					
ANR	3869880	Identifier	str		3869806	0					
ANR	3869881	ReturnStatement	return 1 ;	1134:1:52630:52638	3869806	3	True				
ANR	3869882	PrimaryExpression	1		3869806	0					
ANR	3869883	ReturnType	static zend_always_inline int		3869806	1					
ANR	3869884	Identifier	zend_parse_arg_string		3869806	2					
ANR	3869885	ParameterList	"zval * arg , char * * dest , size_t * dest_len , int check_null"		3869806	3					
ANR	3869886	Parameter	zval * arg	1120:52:52344:52352	3869806	0	True				
ANR	3869887	ParameterType	zval *		3869806	0					
ANR	3869888	Identifier	arg		3869806	1					
ANR	3869889	Parameter	char * * dest	1120:63:52355:52365	3869806	1	True				
ANR	3869890	ParameterType	char * *		3869806	0					
ANR	3869891	Identifier	dest		3869806	1					
ANR	3869892	Parameter	size_t * dest_len	1120:76:52368:52383	3869806	2	True				
ANR	3869893	ParameterType	size_t *		3869806	0					
ANR	3869894	Identifier	dest_len		3869806	1					
ANR	3869895	Parameter	int check_null	1120:94:52386:52399	3869806	3	True				
ANR	3869896	ParameterType	int		3869806	0					
ANR	3869897	Identifier	check_null		3869806	1					
ANR	3869898	CFGEntryNode	ENTRY		3869806		True				
ANR	3869899	CFGExitNode	EXIT		3869806		True				
ANR	3869900	Symbol	zend_parse_arg_str		3869806						
ANR	3869901	Symbol	NULL		3869806						
ANR	3869902	Symbol	* dest		3869806						
ANR	3869903	Symbol	check_null		3869806						
ANR	3869904	Symbol	dest		3869806						
ANR	3869905	Symbol	dest_len		3869806						
ANR	3869906	Symbol	ZSTR_VAL		3869806						
ANR	3869907	Symbol	str		3869806						
ANR	3869908	Symbol	& str		3869806						
ANR	3869909	Symbol	UNEXPECTED		3869806						
ANR	3869910	Symbol	arg		3869806						
ANR	3869911	Symbol	ZSTR_LEN		3869806						
ANR	3869912	Symbol	* dest_len		3869806						
ANR	3869913	Function	zend_parse_arg_path_str	1137:0:52643:52904							
ANR	3869914	FunctionDef	"zend_parse_arg_path_str (zval * arg , zend_string * * dest , int check_null)"		3869913	0					
ANR	3869915	CompoundStatement		1138:0:52744:52904	3869913	0					
ANR	3869916	IfStatement	"if ( ! zend_parse_arg_str ( arg , dest , check_null ) || ( * dest && UNEXPECTED ( CHECK_NULL_PATH ( ZSTR_VAL ( * dest ) , ZSTR_LEN ( * dest ) ) ) ) )"		3869913	0					
ANR	3869917	Condition	"! zend_parse_arg_str ( arg , dest , check_null ) || ( * dest && UNEXPECTED ( CHECK_NULL_PATH ( ZSTR_VAL ( * dest ) , ZSTR_LEN ( * dest ) ) ) )"	1139:5:52751:52873	3869913	0	True				
ANR	3869918	OrExpression	"! zend_parse_arg_str ( arg , dest , check_null ) || ( * dest && UNEXPECTED ( CHECK_NULL_PATH ( ZSTR_VAL ( * dest ) , ZSTR_LEN ( * dest ) ) ) )"		3869913	0		||			
ANR	3869919	UnaryOperationExpression	"! zend_parse_arg_str ( arg , dest , check_null )"		3869913	0					
ANR	3869920	UnaryOperator	!		3869913	0					
ANR	3869921	CallExpression	"zend_parse_arg_str ( arg , dest , check_null )"		3869913	1					
ANR	3869922	Callee	zend_parse_arg_str		3869913	0					
ANR	3869923	Identifier	zend_parse_arg_str		3869913	0					
ANR	3869924	ArgumentList	arg		3869913	1					
ANR	3869925	Argument	arg		3869913	0					
ANR	3869926	Identifier	arg		3869913	0					
ANR	3869927	Argument	dest		3869913	1					
ANR	3869928	Identifier	dest		3869913	0					
ANR	3869929	Argument	check_null		3869913	2					
ANR	3869930	Identifier	check_null		3869913	0					
ANR	3869931	AndExpression	"* dest && UNEXPECTED ( CHECK_NULL_PATH ( ZSTR_VAL ( * dest ) , ZSTR_LEN ( * dest ) ) )"		3869913	1		&&			
ANR	3869932	UnaryOperationExpression	* dest		3869913	0					
ANR	3869933	UnaryOperator	*		3869913	0					
ANR	3869934	Identifier	dest		3869913	1					
ANR	3869935	CallExpression	"UNEXPECTED ( CHECK_NULL_PATH ( ZSTR_VAL ( * dest ) , ZSTR_LEN ( * dest ) ) )"		3869913	1					
ANR	3869936	Callee	UNEXPECTED		3869913	0					
ANR	3869937	Identifier	UNEXPECTED		3869913	0					
ANR	3869938	ArgumentList	"CHECK_NULL_PATH ( ZSTR_VAL ( * dest ) , ZSTR_LEN ( * dest ) )"		3869913	1					
ANR	3869939	Argument	"CHECK_NULL_PATH ( ZSTR_VAL ( * dest ) , ZSTR_LEN ( * dest ) )"		3869913	0					
ANR	3869940	CallExpression	"CHECK_NULL_PATH ( ZSTR_VAL ( * dest ) , ZSTR_LEN ( * dest ) )"		3869913	0					
ANR	3869941	Callee	CHECK_NULL_PATH		3869913	0					
ANR	3869942	Identifier	CHECK_NULL_PATH		3869913	0					
ANR	3869943	ArgumentList	ZSTR_VAL ( * dest )		3869913	1					
ANR	3869944	Argument	ZSTR_VAL ( * dest )		3869913	0					
ANR	3869945	CallExpression	ZSTR_VAL ( * dest )		3869913	0					
ANR	3869946	Callee	ZSTR_VAL		3869913	0					
ANR	3869947	Identifier	ZSTR_VAL		3869913	0					
ANR	3869948	ArgumentList	* dest		3869913	1					
ANR	3869949	Argument	* dest		3869913	0					
ANR	3869950	UnaryOperationExpression	* dest		3869913	0					
ANR	3869951	UnaryOperator	*		3869913	0					
ANR	3869952	Identifier	dest		3869913	1					
ANR	3869953	Argument	ZSTR_LEN ( * dest )		3869913	1					
ANR	3869954	CallExpression	ZSTR_LEN ( * dest )		3869913	0					
ANR	3869955	Callee	ZSTR_LEN		3869913	0					
ANR	3869956	Identifier	ZSTR_LEN		3869913	0					
ANR	3869957	ArgumentList	* dest		3869913	1					
ANR	3869958	Argument	* dest		3869913	0					
ANR	3869959	UnaryOperationExpression	* dest		3869913	0					
ANR	3869960	UnaryOperator	*		3869913	0					
ANR	3869961	Identifier	dest		3869913	1					
ANR	3869962	CompoundStatement		3:79:131:131	3869913	1					
ANR	3869963	ReturnStatement	return 0 ;	1141:2:52880:52888	3869913	0	True				
ANR	3869964	PrimaryExpression	0		3869913	0					
ANR	3869965	ReturnStatement	return 1 ;	1143:1:52894:52902	3869913	1	True				
ANR	3869966	PrimaryExpression	1		3869913	0					
ANR	3869967	ReturnType	static zend_always_inline int		3869913	1					
ANR	3869968	Identifier	zend_parse_arg_path_str		3869913	2					
ANR	3869969	ParameterList	"zval * arg , zend_string * * dest , int check_null"		3869913	3					
ANR	3869970	Parameter	zval * arg	1137:54:52697:52705	3869913	0	True				
ANR	3869971	ParameterType	zval *		3869913	0					
ANR	3869972	Identifier	arg		3869913	1					
ANR	3869973	Parameter	zend_string * * dest	1137:65:52708:52725	3869913	1	True				
ANR	3869974	ParameterType	zend_string * *		3869913	0					
ANR	3869975	Identifier	dest		3869913	1					
ANR	3869976	Parameter	int check_null	1137:85:52728:52741	3869913	2	True				
ANR	3869977	ParameterType	int		3869913	0					
ANR	3869978	Identifier	check_null		3869913	1					
ANR	3869979	CFGEntryNode	ENTRY		3869913		True				
ANR	3869980	CFGExitNode	EXIT		3869913		True				
ANR	3869981	Symbol	UNEXPECTED		3869913						
ANR	3869982	Symbol	zend_parse_arg_str		3869913						
ANR	3869983	Symbol	CHECK_NULL_PATH		3869913						
ANR	3869984	Symbol	* dest		3869913						
ANR	3869985	Symbol	check_null		3869913						
ANR	3869986	Symbol	arg		3869913						
ANR	3869987	Symbol	ZSTR_LEN		3869913						
ANR	3869988	Symbol	dest		3869913						
ANR	3869989	Symbol	ZSTR_VAL		3869913						
ANR	3869990	Function	zend_parse_arg_path	1146:0:52907:53258							
ANR	3869991	FunctionDef	"zend_parse_arg_path (zval * arg , char * * dest , size_t * dest_len , int check_null)"		3869990	0					
ANR	3869992	CompoundStatement		1147:0:53015:53258	3869990	0					
ANR	3869993	IdentifierDeclStatement	zend_string * str ;	1148:1:53018:53034	3869990	0	True				
ANR	3869994	IdentifierDecl	* str		3869990	0					
ANR	3869995	IdentifierDeclType	zend_string *		3869990	0					
ANR	3869996	Identifier	str		3869990	1					
ANR	3869997	IfStatement	"if ( ! zend_parse_arg_path_str ( arg , & str , check_null ) )"		3869990	1					
ANR	3869998	Condition	"! zend_parse_arg_path_str ( arg , & str , check_null )"	1150:5:53042:53088	3869990	0	True				
ANR	3869999	UnaryOperationExpression	"! zend_parse_arg_path_str ( arg , & str , check_null )"		3869990	0					
ANR	3870000	UnaryOperator	!		3869990	0					
ANR	3870001	CallExpression	"zend_parse_arg_path_str ( arg , & str , check_null )"		3869990	1					
ANR	3870002	Callee	zend_parse_arg_path_str		3869990	0					
ANR	3870003	Identifier	zend_parse_arg_path_str		3869990	0					
ANR	3870004	ArgumentList	arg		3869990	1					
ANR	3870005	Argument	arg		3869990	0					
ANR	3870006	Identifier	arg		3869990	0					
ANR	3870007	Argument	& str		3869990	1					
ANR	3870008	UnaryOperationExpression	& str		3869990	0					
ANR	3870009	UnaryOperator	&		3869990	0					
ANR	3870010	Identifier	str		3869990	1					
ANR	3870011	Argument	check_null		3869990	2					
ANR	3870012	Identifier	check_null		3869990	0					
ANR	3870013	CompoundStatement		4:54:75:75	3869990	1					
ANR	3870014	ReturnStatement	return 0 ;	1151:2:53095:53103	3869990	0	True				
ANR	3870015	PrimaryExpression	0		3869990	0					
ANR	3870016	IfStatement	if ( check_null && UNEXPECTED ( ! str ) )		3869990	2					
ANR	3870017	Condition	check_null && UNEXPECTED ( ! str )	1153:5:53113:53142	3869990	0	True				
ANR	3870018	AndExpression	check_null && UNEXPECTED ( ! str )		3869990	0		&&			
ANR	3870019	Identifier	check_null		3869990	0					
ANR	3870020	CallExpression	UNEXPECTED ( ! str )		3869990	1					
ANR	3870021	Callee	UNEXPECTED		3869990	0					
ANR	3870022	Identifier	UNEXPECTED		3869990	0					
ANR	3870023	ArgumentList	! str		3869990	1					
ANR	3870024	Argument	! str		3869990	0					
ANR	3870025	UnaryOperationExpression	! str		3869990	0					
ANR	3870026	UnaryOperator	!		3869990	0					
ANR	3870027	Identifier	str		3869990	1					
ANR	3870028	CompoundStatement		7:37:129:129	3869990	1					
ANR	3870029	ExpressionStatement	* dest = NULL	1154:2:53149:53161	3869990	0	True				
ANR	3870030	AssignmentExpression	* dest = NULL		3869990	0		=			
ANR	3870031	UnaryOperationExpression	* dest		3869990	0					
ANR	3870032	UnaryOperator	*		3869990	0					
ANR	3870033	Identifier	dest		3869990	1					
ANR	3870034	Identifier	NULL		3869990	1					
ANR	3870035	ExpressionStatement	* dest_len = 0	1155:2:53165:53178	3869990	1	True				
ANR	3870036	AssignmentExpression	* dest_len = 0		3869990	0		=			
ANR	3870037	UnaryOperationExpression	* dest_len		3869990	0					
ANR	3870038	UnaryOperator	*		3869990	0					
ANR	3870039	Identifier	dest_len		3869990	1					
ANR	3870040	PrimaryExpression	0		3869990	1					
ANR	3870041	ElseStatement	else		3869990	0					
ANR	3870042	CompoundStatement		10:8:172:172	3869990	0					
ANR	3870043	ExpressionStatement	* dest = ZSTR_VAL ( str )	1157:2:53192:53213	3869990	0	True				
ANR	3870044	AssignmentExpression	* dest = ZSTR_VAL ( str )		3869990	0		=			
ANR	3870045	UnaryOperationExpression	* dest		3869990	0					
ANR	3870046	UnaryOperator	*		3869990	0					
ANR	3870047	Identifier	dest		3869990	1					
ANR	3870048	CallExpression	ZSTR_VAL ( str )		3869990	1					
ANR	3870049	Callee	ZSTR_VAL		3869990	0					
ANR	3870050	Identifier	ZSTR_VAL		3869990	0					
ANR	3870051	ArgumentList	str		3869990	1					
ANR	3870052	Argument	str		3869990	0					
ANR	3870053	Identifier	str		3869990	0					
ANR	3870054	ExpressionStatement	* dest_len = ZSTR_LEN ( str )	1158:2:53217:53242	3869990	1	True				
ANR	3870055	AssignmentExpression	* dest_len = ZSTR_LEN ( str )		3869990	0		=			
ANR	3870056	UnaryOperationExpression	* dest_len		3869990	0					
ANR	3870057	UnaryOperator	*		3869990	0					
ANR	3870058	Identifier	dest_len		3869990	1					
ANR	3870059	CallExpression	ZSTR_LEN ( str )		3869990	1					
ANR	3870060	Callee	ZSTR_LEN		3869990	0					
ANR	3870061	Identifier	ZSTR_LEN		3869990	0					
ANR	3870062	ArgumentList	str		3869990	1					
ANR	3870063	Argument	str		3869990	0					
ANR	3870064	Identifier	str		3869990	0					
ANR	3870065	ReturnStatement	return 1 ;	1160:1:53248:53256	3869990	3	True				
ANR	3870066	PrimaryExpression	1		3869990	0					
ANR	3870067	ReturnType	static zend_always_inline int		3869990	1					
ANR	3870068	Identifier	zend_parse_arg_path		3869990	2					
ANR	3870069	ParameterList	"zval * arg , char * * dest , size_t * dest_len , int check_null"		3869990	3					
ANR	3870070	Parameter	zval * arg	1146:50:52957:52965	3869990	0	True				
ANR	3870071	ParameterType	zval *		3869990	0					
ANR	3870072	Identifier	arg		3869990	1					
ANR	3870073	Parameter	char * * dest	1146:61:52968:52978	3869990	1	True				
ANR	3870074	ParameterType	char * *		3869990	0					
ANR	3870075	Identifier	dest		3869990	1					
ANR	3870076	Parameter	size_t * dest_len	1146:74:52981:52996	3869990	2	True				
ANR	3870077	ParameterType	size_t *		3869990	0					
ANR	3870078	Identifier	dest_len		3869990	1					
ANR	3870079	Parameter	int check_null	1146:92:52999:53012	3869990	3	True				
ANR	3870080	ParameterType	int		3869990	0					
ANR	3870081	Identifier	check_null		3869990	1					
ANR	3870082	CFGEntryNode	ENTRY		3869990		True				
ANR	3870083	CFGExitNode	EXIT		3869990		True				
ANR	3870084	Symbol	NULL		3869990						
ANR	3870085	Symbol	* dest		3869990						
ANR	3870086	Symbol	check_null		3869990						
ANR	3870087	Symbol	dest		3869990						
ANR	3870088	Symbol	dest_len		3869990						
ANR	3870089	Symbol	ZSTR_VAL		3869990						
ANR	3870090	Symbol	str		3869990						
ANR	3870091	Symbol	& str		3869990						
ANR	3870092	Symbol	UNEXPECTED		3869990						
ANR	3870093	Symbol	zend_parse_arg_path_str		3869990						
ANR	3870094	Symbol	arg		3869990						
ANR	3870095	Symbol	ZSTR_LEN		3869990						
ANR	3870096	Symbol	* dest_len		3869990						
ANR	3870097	Function	zend_parse_arg_array	1163:0:53261:53601							
ANR	3870098	FunctionDef	"zend_parse_arg_array (zval * arg , zval * * dest , int check_null , int or_object)"		3870097	0					
ANR	3870099	CompoundStatement		1164:0:53367:53601	3870097	0					
ANR	3870100	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_ARRAY ) || ( or_object && EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT ) ) )		3870097	0					
ANR	3870101	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_ARRAY ) || ( or_object && EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT ) )	1165:5:53374:53465	3870097	0	True				
ANR	3870102	OrExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_ARRAY ) || ( or_object && EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT ) )		3870097	0		||			
ANR	3870103	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_ARRAY )		3870097	0					
ANR	3870104	Callee	EXPECTED		3870097	0					
ANR	3870105	Identifier	EXPECTED		3870097	0					
ANR	3870106	ArgumentList	Z_TYPE_P ( arg ) == IS_ARRAY		3870097	1					
ANR	3870107	Argument	Z_TYPE_P ( arg ) == IS_ARRAY		3870097	0					
ANR	3870108	EqualityExpression	Z_TYPE_P ( arg ) == IS_ARRAY		3870097	0		==			
ANR	3870109	CallExpression	Z_TYPE_P ( arg )		3870097	0					
ANR	3870110	Callee	Z_TYPE_P		3870097	0					
ANR	3870111	Identifier	Z_TYPE_P		3870097	0					
ANR	3870112	ArgumentList	arg		3870097	1					
ANR	3870113	Argument	arg		3870097	0					
ANR	3870114	Identifier	arg		3870097	0					
ANR	3870115	Identifier	IS_ARRAY		3870097	1					
ANR	3870116	AndExpression	or_object && EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT )		3870097	1		&&			
ANR	3870117	Identifier	or_object		3870097	0					
ANR	3870118	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT )		3870097	1					
ANR	3870119	Callee	EXPECTED		3870097	0					
ANR	3870120	Identifier	EXPECTED		3870097	0					
ANR	3870121	ArgumentList	Z_TYPE_P ( arg ) == IS_OBJECT		3870097	1					
ANR	3870122	Argument	Z_TYPE_P ( arg ) == IS_OBJECT		3870097	0					
ANR	3870123	EqualityExpression	Z_TYPE_P ( arg ) == IS_OBJECT		3870097	0		==			
ANR	3870124	CallExpression	Z_TYPE_P ( arg )		3870097	0					
ANR	3870125	Callee	Z_TYPE_P		3870097	0					
ANR	3870126	Identifier	Z_TYPE_P		3870097	0					
ANR	3870127	ArgumentList	arg		3870097	1					
ANR	3870128	Argument	arg		3870097	0					
ANR	3870129	Identifier	arg		3870097	0					
ANR	3870130	Identifier	IS_OBJECT		3870097	1					
ANR	3870131	CompoundStatement		3:55:100:100	3870097	1					
ANR	3870132	ExpressionStatement	* dest = arg	1167:2:53472:53483	3870097	0	True				
ANR	3870133	AssignmentExpression	* dest = arg		3870097	0		=			
ANR	3870134	UnaryOperationExpression	* dest		3870097	0					
ANR	3870135	UnaryOperator	*		3870097	0					
ANR	3870136	Identifier	dest		3870097	1					
ANR	3870137	Identifier	arg		3870097	1					
ANR	3870138	ElseStatement	else		3870097	0					
ANR	3870139	IfStatement	if ( check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) )		3870097	0					
ANR	3870140	Condition	check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )	1168:12:53497:53544	3870097	0	True				
ANR	3870141	AndExpression	check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		3870097	0		&&			
ANR	3870142	Identifier	check_null		3870097	0					
ANR	3870143	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		3870097	1					
ANR	3870144	Callee	EXPECTED		3870097	0					
ANR	3870145	Identifier	EXPECTED		3870097	0					
ANR	3870146	ArgumentList	Z_TYPE_P ( arg ) == IS_NULL		3870097	1					
ANR	3870147	Argument	Z_TYPE_P ( arg ) == IS_NULL		3870097	0					
ANR	3870148	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		3870097	0		==			
ANR	3870149	CallExpression	Z_TYPE_P ( arg )		3870097	0					
ANR	3870150	Callee	Z_TYPE_P		3870097	0					
ANR	3870151	Identifier	Z_TYPE_P		3870097	0					
ANR	3870152	ArgumentList	arg		3870097	1					
ANR	3870153	Argument	arg		3870097	0					
ANR	3870154	Identifier	arg		3870097	0					
ANR	3870155	Identifier	IS_NULL		3870097	1					
ANR	3870156	CompoundStatement		5:62:179:179	3870097	1					
ANR	3870157	ExpressionStatement	* dest = NULL	1169:2:53551:53563	3870097	0	True				
ANR	3870158	AssignmentExpression	* dest = NULL		3870097	0		=			
ANR	3870159	UnaryOperationExpression	* dest		3870097	0					
ANR	3870160	UnaryOperator	*		3870097	0					
ANR	3870161	Identifier	dest		3870097	1					
ANR	3870162	Identifier	NULL		3870097	1					
ANR	3870163	ElseStatement	else		3870097	0					
ANR	3870164	CompoundStatement		7:8:205:205	3870097	0					
ANR	3870165	ReturnStatement	return 0 ;	1171:2:53577:53585	3870097	0	True				
ANR	3870166	PrimaryExpression	0		3870097	0					
ANR	3870167	ReturnStatement	return 1 ;	1173:1:53591:53599	3870097	1	True				
ANR	3870168	PrimaryExpression	1		3870097	0					
ANR	3870169	ReturnType	static zend_always_inline int		3870097	1					
ANR	3870170	Identifier	zend_parse_arg_array		3870097	2					
ANR	3870171	ParameterList	"zval * arg , zval * * dest , int check_null , int or_object"		3870097	3					
ANR	3870172	Parameter	zval * arg	1163:51:53312:53320	3870097	0	True				
ANR	3870173	ParameterType	zval *		3870097	0					
ANR	3870174	Identifier	arg		3870097	1					
ANR	3870175	Parameter	zval * * dest	1163:62:53323:53333	3870097	1	True				
ANR	3870176	ParameterType	zval * *		3870097	0					
ANR	3870177	Identifier	dest		3870097	1					
ANR	3870178	Parameter	int check_null	1163:75:53336:53349	3870097	2	True				
ANR	3870179	ParameterType	int		3870097	0					
ANR	3870180	Identifier	check_null		3870097	1					
ANR	3870181	Parameter	int or_object	1163:91:53352:53364	3870097	3	True				
ANR	3870182	ParameterType	int		3870097	0					
ANR	3870183	Identifier	or_object		3870097	1					
ANR	3870184	CFGEntryNode	ENTRY		3870097		True				
ANR	3870185	CFGExitNode	EXIT		3870097		True				
ANR	3870186	Symbol	NULL		3870097						
ANR	3870187	Symbol	IS_NULL		3870097						
ANR	3870188	Symbol	IS_ARRAY		3870097						
ANR	3870189	Symbol	* dest		3870097						
ANR	3870190	Symbol	check_null		3870097						
ANR	3870191	Symbol	arg		3870097						
ANR	3870192	Symbol	or_object		3870097						
ANR	3870193	Symbol	dest		3870097						
ANR	3870194	Symbol	IS_OBJECT		3870097						
ANR	3870195	Symbol	Z_TYPE_P		3870097						
ANR	3870196	Symbol	EXPECTED		3870097						
ANR	3870197	Function	zend_parse_arg_array_ht	1176:0:53604:54020							
ANR	3870198	FunctionDef	"zend_parse_arg_array_ht (zval * arg , HashTable * * dest , int check_null , int or_object)"		3870197	0					
ANR	3870199	CompoundStatement		1177:0:53718:54020	3870197	0					
ANR	3870200	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_ARRAY ) )		3870197	0					
ANR	3870201	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_ARRAY )	1178:5:53725:53759	3870197	0	True				
ANR	3870202	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_ARRAY )		3870197	0					
ANR	3870203	Callee	EXPECTED		3870197	0					
ANR	3870204	Identifier	EXPECTED		3870197	0					
ANR	3870205	ArgumentList	Z_TYPE_P ( arg ) == IS_ARRAY		3870197	1					
ANR	3870206	Argument	Z_TYPE_P ( arg ) == IS_ARRAY		3870197	0					
ANR	3870207	EqualityExpression	Z_TYPE_P ( arg ) == IS_ARRAY		3870197	0		==			
ANR	3870208	CallExpression	Z_TYPE_P ( arg )		3870197	0					
ANR	3870209	Callee	Z_TYPE_P		3870197	0					
ANR	3870210	Identifier	Z_TYPE_P		3870197	0					
ANR	3870211	ArgumentList	arg		3870197	1					
ANR	3870212	Argument	arg		3870197	0					
ANR	3870213	Identifier	arg		3870197	0					
ANR	3870214	Identifier	IS_ARRAY		3870197	1					
ANR	3870215	CompoundStatement		2:42:43:43	3870197	1					
ANR	3870216	ExpressionStatement	* dest = Z_ARRVAL_P ( arg )	1179:2:53766:53789	3870197	0	True				
ANR	3870217	AssignmentExpression	* dest = Z_ARRVAL_P ( arg )		3870197	0		=			
ANR	3870218	UnaryOperationExpression	* dest		3870197	0					
ANR	3870219	UnaryOperator	*		3870197	0					
ANR	3870220	Identifier	dest		3870197	1					
ANR	3870221	CallExpression	Z_ARRVAL_P ( arg )		3870197	1					
ANR	3870222	Callee	Z_ARRVAL_P		3870197	0					
ANR	3870223	Identifier	Z_ARRVAL_P		3870197	0					
ANR	3870224	ArgumentList	arg		3870197	1					
ANR	3870225	Argument	arg		3870197	0					
ANR	3870226	Identifier	arg		3870197	0					
ANR	3870227	ElseStatement	else		3870197	0					
ANR	3870228	IfStatement	if ( or_object && EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT ) )		3870197	0					
ANR	3870229	Condition	or_object && EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT )	1180:12:53803:53851	3870197	0	True				
ANR	3870230	AndExpression	or_object && EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT )		3870197	0		&&			
ANR	3870231	Identifier	or_object		3870197	0					
ANR	3870232	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT )		3870197	1					
ANR	3870233	Callee	EXPECTED		3870197	0					
ANR	3870234	Identifier	EXPECTED		3870197	0					
ANR	3870235	ArgumentList	Z_TYPE_P ( arg ) == IS_OBJECT		3870197	1					
ANR	3870236	Argument	Z_TYPE_P ( arg ) == IS_OBJECT		3870197	0					
ANR	3870237	EqualityExpression	Z_TYPE_P ( arg ) == IS_OBJECT		3870197	0		==			
ANR	3870238	CallExpression	Z_TYPE_P ( arg )		3870197	0					
ANR	3870239	Callee	Z_TYPE_P		3870197	0					
ANR	3870240	Identifier	Z_TYPE_P		3870197	0					
ANR	3870241	ArgumentList	arg		3870197	1					
ANR	3870242	Argument	arg		3870197	0					
ANR	3870243	Identifier	arg		3870197	0					
ANR	3870244	Identifier	IS_OBJECT		3870197	1					
ANR	3870245	CompoundStatement		4:63:135:135	3870197	1					
ANR	3870246	ExpressionStatement	* dest = Z_OBJ_HT_P ( arg ) -> get_properties ( arg )	1181:2:53858:53902	3870197	0	True				
ANR	3870247	AssignmentExpression	* dest = Z_OBJ_HT_P ( arg ) -> get_properties ( arg )		3870197	0		=			
ANR	3870248	UnaryOperationExpression	* dest		3870197	0					
ANR	3870249	UnaryOperator	*		3870197	0					
ANR	3870250	Identifier	dest		3870197	1					
ANR	3870251	CallExpression	Z_OBJ_HT_P ( arg ) -> get_properties ( arg )		3870197	1					
ANR	3870252	Callee	Z_OBJ_HT_P ( arg ) -> get_properties		3870197	0					
ANR	3870253	PtrMemberAccess	Z_OBJ_HT_P ( arg ) -> get_properties		3870197	0					
ANR	3870254	CallExpression	Z_OBJ_HT_P ( arg )		3870197	0					
ANR	3870255	Callee	Z_OBJ_HT_P		3870197	0					
ANR	3870256	Identifier	Z_OBJ_HT_P		3870197	0					
ANR	3870257	ArgumentList	arg		3870197	1					
ANR	3870258	Argument	arg		3870197	0					
ANR	3870259	Identifier	arg		3870197	0					
ANR	3870260	Identifier	get_properties		3870197	1					
ANR	3870261	ArgumentList	arg		3870197	1					
ANR	3870262	Argument	arg		3870197	0					
ANR	3870263	Identifier	arg		3870197	0					
ANR	3870264	ElseStatement	else		3870197	0					
ANR	3870265	IfStatement	if ( check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) )		3870197	0					
ANR	3870266	Condition	check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )	1182:12:53916:53963	3870197	0	True				
ANR	3870267	AndExpression	check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		3870197	0		&&			
ANR	3870268	Identifier	check_null		3870197	0					
ANR	3870269	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		3870197	1					
ANR	3870270	Callee	EXPECTED		3870197	0					
ANR	3870271	Identifier	EXPECTED		3870197	0					
ANR	3870272	ArgumentList	Z_TYPE_P ( arg ) == IS_NULL		3870197	1					
ANR	3870273	Argument	Z_TYPE_P ( arg ) == IS_NULL		3870197	0					
ANR	3870274	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		3870197	0		==			
ANR	3870275	CallExpression	Z_TYPE_P ( arg )		3870197	0					
ANR	3870276	Callee	Z_TYPE_P		3870197	0					
ANR	3870277	Identifier	Z_TYPE_P		3870197	0					
ANR	3870278	ArgumentList	arg		3870197	1					
ANR	3870279	Argument	arg		3870197	0					
ANR	3870280	Identifier	arg		3870197	0					
ANR	3870281	Identifier	IS_NULL		3870197	1					
ANR	3870282	CompoundStatement		6:62:247:247	3870197	1					
ANR	3870283	ExpressionStatement	* dest = NULL	1183:2:53970:53982	3870197	0	True				
ANR	3870284	AssignmentExpression	* dest = NULL		3870197	0		=			
ANR	3870285	UnaryOperationExpression	* dest		3870197	0					
ANR	3870286	UnaryOperator	*		3870197	0					
ANR	3870287	Identifier	dest		3870197	1					
ANR	3870288	Identifier	NULL		3870197	1					
ANR	3870289	ElseStatement	else		3870197	0					
ANR	3870290	CompoundStatement		8:8:273:273	3870197	0					
ANR	3870291	ReturnStatement	return 0 ;	1185:2:53996:54004	3870197	0	True				
ANR	3870292	PrimaryExpression	0		3870197	0					
ANR	3870293	ReturnStatement	return 1 ;	1187:1:54010:54018	3870197	1	True				
ANR	3870294	PrimaryExpression	1		3870197	0					
ANR	3870295	ReturnType	static zend_always_inline int		3870197	1					
ANR	3870296	Identifier	zend_parse_arg_array_ht		3870197	2					
ANR	3870297	ParameterList	"zval * arg , HashTable * * dest , int check_null , int or_object"		3870197	3					
ANR	3870298	Parameter	zval * arg	1176:54:53658:53666	3870197	0	True				
ANR	3870299	ParameterType	zval *		3870197	0					
ANR	3870300	Identifier	arg		3870197	1					
ANR	3870301	Parameter	HashTable * * dest	1176:65:53669:53684	3870197	1	True				
ANR	3870302	ParameterType	HashTable * *		3870197	0					
ANR	3870303	Identifier	dest		3870197	1					
ANR	3870304	Parameter	int check_null	1176:83:53687:53700	3870197	2	True				
ANR	3870305	ParameterType	int		3870197	0					
ANR	3870306	Identifier	check_null		3870197	1					
ANR	3870307	Parameter	int or_object	1176:99:53703:53715	3870197	3	True				
ANR	3870308	ParameterType	int		3870197	0					
ANR	3870309	Identifier	or_object		3870197	1					
ANR	3870310	CFGEntryNode	ENTRY		3870197		True				
ANR	3870311	CFGExitNode	EXIT		3870197		True				
ANR	3870312	Symbol	NULL		3870197						
ANR	3870313	Symbol	* dest		3870197						
ANR	3870314	Symbol	Z_OBJ_HT_P ( arg ) -> get_properties		3870197						
ANR	3870315	Symbol	check_null		3870197						
ANR	3870316	Symbol	dest		3870197						
ANR	3870317	Symbol	Z_TYPE_P		3870197						
ANR	3870318	Symbol	* Z_OBJ_HT_P		3870197						
ANR	3870319	Symbol	IS_NULL		3870197						
ANR	3870320	Symbol	IS_ARRAY		3870197						
ANR	3870321	Symbol	arg		3870197						
ANR	3870322	Symbol	Z_OBJ_HT_P		3870197						
ANR	3870323	Symbol	or_object		3870197						
ANR	3870324	Symbol	Z_ARRVAL_P		3870197						
ANR	3870325	Symbol	IS_OBJECT		3870197						
ANR	3870326	Symbol	EXPECTED		3870197						
ANR	3870327	Function	zend_parse_arg_object	1190:0:54023:54387							
ANR	3870328	FunctionDef	"zend_parse_arg_object (zval * arg , zval * * dest , zend_class_entry * ce , int check_null)"		3870327	0					
ANR	3870329	CompoundStatement		1191:0:54137:54387	3870327	0					
ANR	3870330	IfStatement	"if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT ) && ( ! ce || EXPECTED ( instanceof_function ( Z_OBJCE_P ( arg ) , ce ) != 0 ) ) )"		3870327	0					
ANR	3870331	Condition	"EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT ) && ( ! ce || EXPECTED ( instanceof_function ( Z_OBJCE_P ( arg ) , ce ) != 0 ) )"	1192:5:54144:54251	3870327	0	True				
ANR	3870332	AndExpression	"EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT ) && ( ! ce || EXPECTED ( instanceof_function ( Z_OBJCE_P ( arg ) , ce ) != 0 ) )"		3870327	0		&&			
ANR	3870333	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_OBJECT )		3870327	0					
ANR	3870334	Callee	EXPECTED		3870327	0					
ANR	3870335	Identifier	EXPECTED		3870327	0					
ANR	3870336	ArgumentList	Z_TYPE_P ( arg ) == IS_OBJECT		3870327	1					
ANR	3870337	Argument	Z_TYPE_P ( arg ) == IS_OBJECT		3870327	0					
ANR	3870338	EqualityExpression	Z_TYPE_P ( arg ) == IS_OBJECT		3870327	0		==			
ANR	3870339	CallExpression	Z_TYPE_P ( arg )		3870327	0					
ANR	3870340	Callee	Z_TYPE_P		3870327	0					
ANR	3870341	Identifier	Z_TYPE_P		3870327	0					
ANR	3870342	ArgumentList	arg		3870327	1					
ANR	3870343	Argument	arg		3870327	0					
ANR	3870344	Identifier	arg		3870327	0					
ANR	3870345	Identifier	IS_OBJECT		3870327	1					
ANR	3870346	OrExpression	"! ce || EXPECTED ( instanceof_function ( Z_OBJCE_P ( arg ) , ce ) != 0 )"		3870327	1		||			
ANR	3870347	UnaryOperationExpression	! ce		3870327	0					
ANR	3870348	UnaryOperator	!		3870327	0					
ANR	3870349	Identifier	ce		3870327	1					
ANR	3870350	CallExpression	"EXPECTED ( instanceof_function ( Z_OBJCE_P ( arg ) , ce ) != 0 )"		3870327	1					
ANR	3870351	Callee	EXPECTED		3870327	0					
ANR	3870352	Identifier	EXPECTED		3870327	0					
ANR	3870353	ArgumentList	"instanceof_function ( Z_OBJCE_P ( arg ) , ce ) != 0"		3870327	1					
ANR	3870354	Argument	"instanceof_function ( Z_OBJCE_P ( arg ) , ce ) != 0"		3870327	0					
ANR	3870355	EqualityExpression	"instanceof_function ( Z_OBJCE_P ( arg ) , ce ) != 0"		3870327	0		!=			
ANR	3870356	CallExpression	"instanceof_function ( Z_OBJCE_P ( arg ) , ce )"		3870327	0					
ANR	3870357	Callee	instanceof_function		3870327	0					
ANR	3870358	Identifier	instanceof_function		3870327	0					
ANR	3870359	ArgumentList	Z_OBJCE_P ( arg )		3870327	1					
ANR	3870360	Argument	Z_OBJCE_P ( arg )		3870327	0					
ANR	3870361	CallExpression	Z_OBJCE_P ( arg )		3870327	0					
ANR	3870362	Callee	Z_OBJCE_P		3870327	0					
ANR	3870363	Identifier	Z_OBJCE_P		3870327	0					
ANR	3870364	ArgumentList	arg		3870327	1					
ANR	3870365	Argument	arg		3870327	0					
ANR	3870366	Identifier	arg		3870327	0					
ANR	3870367	Argument	ce		3870327	1					
ANR	3870368	Identifier	ce		3870327	0					
ANR	3870369	PrimaryExpression	0		3870327	1					
ANR	3870370	CompoundStatement		3:70:116:116	3870327	1					
ANR	3870371	ExpressionStatement	* dest = arg	1194:2:54258:54269	3870327	0	True				
ANR	3870372	AssignmentExpression	* dest = arg		3870327	0		=			
ANR	3870373	UnaryOperationExpression	* dest		3870327	0					
ANR	3870374	UnaryOperator	*		3870327	0					
ANR	3870375	Identifier	dest		3870327	1					
ANR	3870376	Identifier	arg		3870327	1					
ANR	3870377	ElseStatement	else		3870327	0					
ANR	3870378	IfStatement	if ( check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) )		3870327	0					
ANR	3870379	Condition	check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )	1195:12:54283:54330	3870327	0	True				
ANR	3870380	AndExpression	check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		3870327	0		&&			
ANR	3870381	Identifier	check_null		3870327	0					
ANR	3870382	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		3870327	1					
ANR	3870383	Callee	EXPECTED		3870327	0					
ANR	3870384	Identifier	EXPECTED		3870327	0					
ANR	3870385	ArgumentList	Z_TYPE_P ( arg ) == IS_NULL		3870327	1					
ANR	3870386	Argument	Z_TYPE_P ( arg ) == IS_NULL		3870327	0					
ANR	3870387	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		3870327	0		==			
ANR	3870388	CallExpression	Z_TYPE_P ( arg )		3870327	0					
ANR	3870389	Callee	Z_TYPE_P		3870327	0					
ANR	3870390	Identifier	Z_TYPE_P		3870327	0					
ANR	3870391	ArgumentList	arg		3870327	1					
ANR	3870392	Argument	arg		3870327	0					
ANR	3870393	Identifier	arg		3870327	0					
ANR	3870394	Identifier	IS_NULL		3870327	1					
ANR	3870395	CompoundStatement		5:62:195:195	3870327	1					
ANR	3870396	ExpressionStatement	* dest = NULL	1196:2:54337:54349	3870327	0	True				
ANR	3870397	AssignmentExpression	* dest = NULL		3870327	0		=			
ANR	3870398	UnaryOperationExpression	* dest		3870327	0					
ANR	3870399	UnaryOperator	*		3870327	0					
ANR	3870400	Identifier	dest		3870327	1					
ANR	3870401	Identifier	NULL		3870327	1					
ANR	3870402	ElseStatement	else		3870327	0					
ANR	3870403	CompoundStatement		7:8:221:221	3870327	0					
ANR	3870404	ReturnStatement	return 0 ;	1198:2:54363:54371	3870327	0	True				
ANR	3870405	PrimaryExpression	0		3870327	0					
ANR	3870406	ReturnStatement	return 1 ;	1200:1:54377:54385	3870327	1	True				
ANR	3870407	PrimaryExpression	1		3870327	0					
ANR	3870408	ReturnType	static zend_always_inline int		3870327	1					
ANR	3870409	Identifier	zend_parse_arg_object		3870327	2					
ANR	3870410	ParameterList	"zval * arg , zval * * dest , zend_class_entry * ce , int check_null"		3870327	3					
ANR	3870411	Parameter	zval * arg	1190:52:54075:54083	3870327	0	True				
ANR	3870412	ParameterType	zval *		3870327	0					
ANR	3870413	Identifier	arg		3870327	1					
ANR	3870414	Parameter	zval * * dest	1190:63:54086:54096	3870327	1	True				
ANR	3870415	ParameterType	zval * *		3870327	0					
ANR	3870416	Identifier	dest		3870327	1					
ANR	3870417	Parameter	zend_class_entry * ce	1190:76:54099:54118	3870327	2	True				
ANR	3870418	ParameterType	zend_class_entry *		3870327	0					
ANR	3870419	Identifier	ce		3870327	1					
ANR	3870420	Parameter	int check_null	1190:98:54121:54134	3870327	3	True				
ANR	3870421	ParameterType	int		3870327	0					
ANR	3870422	Identifier	check_null		3870327	1					
ANR	3870423	CFGEntryNode	ENTRY		3870327		True				
ANR	3870424	CFGExitNode	EXIT		3870327		True				
ANR	3870425	Symbol	instanceof_function		3870327						
ANR	3870426	Symbol	ce		3870327						
ANR	3870427	Symbol	NULL		3870327						
ANR	3870428	Symbol	IS_NULL		3870327						
ANR	3870429	Symbol	* dest		3870327						
ANR	3870430	Symbol	check_null		3870327						
ANR	3870431	Symbol	arg		3870327						
ANR	3870432	Symbol	Z_OBJCE_P		3870327						
ANR	3870433	Symbol	dest		3870327						
ANR	3870434	Symbol	IS_OBJECT		3870327						
ANR	3870435	Symbol	Z_TYPE_P		3870327						
ANR	3870436	Symbol	EXPECTED		3870327						
ANR	3870437	Function	zend_parse_arg_resource	1203:0:54390:54664							
ANR	3870438	FunctionDef	"zend_parse_arg_resource (zval * arg , zval * * dest , int check_null)"		3870437	0					
ANR	3870439	CompoundStatement		1204:0:54484:54664	3870437	0					
ANR	3870440	IfStatement	if ( EXPECTED ( Z_TYPE_P ( arg ) == IS_RESOURCE ) )		3870437	0					
ANR	3870441	Condition	EXPECTED ( Z_TYPE_P ( arg ) == IS_RESOURCE )	1205:5:54491:54528	3870437	0	True				
ANR	3870442	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_RESOURCE )		3870437	0					
ANR	3870443	Callee	EXPECTED		3870437	0					
ANR	3870444	Identifier	EXPECTED		3870437	0					
ANR	3870445	ArgumentList	Z_TYPE_P ( arg ) == IS_RESOURCE		3870437	1					
ANR	3870446	Argument	Z_TYPE_P ( arg ) == IS_RESOURCE		3870437	0					
ANR	3870447	EqualityExpression	Z_TYPE_P ( arg ) == IS_RESOURCE		3870437	0		==			
ANR	3870448	CallExpression	Z_TYPE_P ( arg )		3870437	0					
ANR	3870449	Callee	Z_TYPE_P		3870437	0					
ANR	3870450	Identifier	Z_TYPE_P		3870437	0					
ANR	3870451	ArgumentList	arg		3870437	1					
ANR	3870452	Argument	arg		3870437	0					
ANR	3870453	Identifier	arg		3870437	0					
ANR	3870454	Identifier	IS_RESOURCE		3870437	1					
ANR	3870455	CompoundStatement		2:45:46:46	3870437	1					
ANR	3870456	ExpressionStatement	* dest = arg	1206:2:54535:54546	3870437	0	True				
ANR	3870457	AssignmentExpression	* dest = arg		3870437	0		=			
ANR	3870458	UnaryOperationExpression	* dest		3870437	0					
ANR	3870459	UnaryOperator	*		3870437	0					
ANR	3870460	Identifier	dest		3870437	1					
ANR	3870461	Identifier	arg		3870437	1					
ANR	3870462	ElseStatement	else		3870437	0					
ANR	3870463	IfStatement	if ( check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) )		3870437	0					
ANR	3870464	Condition	check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )	1207:12:54560:54607	3870437	0	True				
ANR	3870465	AndExpression	check_null && EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		3870437	0		&&			
ANR	3870466	Identifier	check_null		3870437	0					
ANR	3870467	CallExpression	EXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		3870437	1					
ANR	3870468	Callee	EXPECTED		3870437	0					
ANR	3870469	Identifier	EXPECTED		3870437	0					
ANR	3870470	ArgumentList	Z_TYPE_P ( arg ) == IS_NULL		3870437	1					
ANR	3870471	Argument	Z_TYPE_P ( arg ) == IS_NULL		3870437	0					
ANR	3870472	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		3870437	0		==			
ANR	3870473	CallExpression	Z_TYPE_P ( arg )		3870437	0					
ANR	3870474	Callee	Z_TYPE_P		3870437	0					
ANR	3870475	Identifier	Z_TYPE_P		3870437	0					
ANR	3870476	ArgumentList	arg		3870437	1					
ANR	3870477	Argument	arg		3870437	0					
ANR	3870478	Identifier	arg		3870437	0					
ANR	3870479	Identifier	IS_NULL		3870437	1					
ANR	3870480	CompoundStatement		4:62:125:125	3870437	1					
ANR	3870481	ExpressionStatement	* dest = NULL	1208:2:54614:54626	3870437	0	True				
ANR	3870482	AssignmentExpression	* dest = NULL		3870437	0		=			
ANR	3870483	UnaryOperationExpression	* dest		3870437	0					
ANR	3870484	UnaryOperator	*		3870437	0					
ANR	3870485	Identifier	dest		3870437	1					
ANR	3870486	Identifier	NULL		3870437	1					
ANR	3870487	ElseStatement	else		3870437	0					
ANR	3870488	CompoundStatement		6:8:151:151	3870437	0					
ANR	3870489	ReturnStatement	return 0 ;	1210:2:54640:54648	3870437	0	True				
ANR	3870490	PrimaryExpression	0		3870437	0					
ANR	3870491	ReturnStatement	return 1 ;	1212:1:54654:54662	3870437	1	True				
ANR	3870492	PrimaryExpression	1		3870437	0					
ANR	3870493	ReturnType	static zend_always_inline int		3870437	1					
ANR	3870494	Identifier	zend_parse_arg_resource		3870437	2					
ANR	3870495	ParameterList	"zval * arg , zval * * dest , int check_null"		3870437	3					
ANR	3870496	Parameter	zval * arg	1203:54:54444:54452	3870437	0	True				
ANR	3870497	ParameterType	zval *		3870437	0					
ANR	3870498	Identifier	arg		3870437	1					
ANR	3870499	Parameter	zval * * dest	1203:65:54455:54465	3870437	1	True				
ANR	3870500	ParameterType	zval * *		3870437	0					
ANR	3870501	Identifier	dest		3870437	1					
ANR	3870502	Parameter	int check_null	1203:78:54468:54481	3870437	2	True				
ANR	3870503	ParameterType	int		3870437	0					
ANR	3870504	Identifier	check_null		3870437	1					
ANR	3870505	CFGEntryNode	ENTRY		3870437		True				
ANR	3870506	CFGExitNode	EXIT		3870437		True				
ANR	3870507	Symbol	NULL		3870437						
ANR	3870508	Symbol	IS_NULL		3870437						
ANR	3870509	Symbol	* dest		3870437						
ANR	3870510	Symbol	check_null		3870437						
ANR	3870511	Symbol	arg		3870437						
ANR	3870512	Symbol	dest		3870437						
ANR	3870513	Symbol	Z_TYPE_P		3870437						
ANR	3870514	Symbol	EXPECTED		3870437						
ANR	3870515	Symbol	IS_RESOURCE		3870437						
ANR	3870516	Function	zend_parse_arg_func	1215:0:54667:55073							
ANR	3870517	FunctionDef	"zend_parse_arg_func (zval * arg , zend_fcall_info * dest_fci , zend_fcall_info_cache * dest_fcc , int check_null , char * * error)"		3870516	0					
ANR	3870518	CompoundStatement		1216:0:54818:55073	3870516	0					
ANR	3870519	IfStatement	if ( check_null && UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) )		3870516	0					
ANR	3870520	Condition	check_null && UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )	1217:5:54825:54874	3870516	0	True				
ANR	3870521	AndExpression	check_null && UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		3870516	0		&&			
ANR	3870522	Identifier	check_null		3870516	0					
ANR	3870523	CallExpression	UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		3870516	1					
ANR	3870524	Callee	UNEXPECTED		3870516	0					
ANR	3870525	Identifier	UNEXPECTED		3870516	0					
ANR	3870526	ArgumentList	Z_TYPE_P ( arg ) == IS_NULL		3870516	1					
ANR	3870527	Argument	Z_TYPE_P ( arg ) == IS_NULL		3870516	0					
ANR	3870528	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		3870516	0		==			
ANR	3870529	CallExpression	Z_TYPE_P ( arg )		3870516	0					
ANR	3870530	Callee	Z_TYPE_P		3870516	0					
ANR	3870531	Identifier	Z_TYPE_P		3870516	0					
ANR	3870532	ArgumentList	arg		3870516	1					
ANR	3870533	Argument	arg		3870516	0					
ANR	3870534	Identifier	arg		3870516	0					
ANR	3870535	Identifier	IS_NULL		3870516	1					
ANR	3870536	CompoundStatement		2:57:58:58	3870516	1					
ANR	3870537	ExpressionStatement	dest_fci -> size = 0	1218:2:54881:54899	3870516	0	True				
ANR	3870538	AssignmentExpression	dest_fci -> size = 0		3870516	0		=			
ANR	3870539	PtrMemberAccess	dest_fci -> size		3870516	0					
ANR	3870540	Identifier	dest_fci		3870516	0					
ANR	3870541	Identifier	size		3870516	1					
ANR	3870542	PrimaryExpression	0		3870516	1					
ANR	3870543	ExpressionStatement	dest_fcc -> initialized = 0	1219:2:54903:54928	3870516	1	True				
ANR	3870544	AssignmentExpression	dest_fcc -> initialized = 0		3870516	0		=			
ANR	3870545	PtrMemberAccess	dest_fcc -> initialized		3870516	0					
ANR	3870546	Identifier	dest_fcc		3870516	0					
ANR	3870547	Identifier	initialized		3870516	1					
ANR	3870548	PrimaryExpression	0		3870516	1					
ANR	3870549	ExpressionStatement	* error = NULL	1220:2:54932:54945	3870516	2	True				
ANR	3870550	AssignmentExpression	* error = NULL		3870516	0		=			
ANR	3870551	UnaryOperationExpression	* error		3870516	0					
ANR	3870552	UnaryOperator	*		3870516	0					
ANR	3870553	Identifier	error		3870516	1					
ANR	3870554	Identifier	NULL		3870516	1					
ANR	3870555	ElseStatement	else		3870516	0					
ANR	3870556	IfStatement	"if ( UNEXPECTED ( zend_fcall_info_init ( arg , 0 , dest_fci , dest_fcc , NULL , error ) != SUCCESS ) )"		3870516	0					
ANR	3870557	Condition	"UNEXPECTED ( zend_fcall_info_init ( arg , 0 , dest_fci , dest_fcc , NULL , error ) != SUCCESS )"	1221:12:54959:55042	3870516	0	True				
ANR	3870558	CallExpression	"UNEXPECTED ( zend_fcall_info_init ( arg , 0 , dest_fci , dest_fcc , NULL , error ) != SUCCESS )"		3870516	0					
ANR	3870559	Callee	UNEXPECTED		3870516	0					
ANR	3870560	Identifier	UNEXPECTED		3870516	0					
ANR	3870561	ArgumentList	"zend_fcall_info_init ( arg , 0 , dest_fci , dest_fcc , NULL , error ) != SUCCESS"		3870516	1					
ANR	3870562	Argument	"zend_fcall_info_init ( arg , 0 , dest_fci , dest_fcc , NULL , error ) != SUCCESS"		3870516	0					
ANR	3870563	EqualityExpression	"zend_fcall_info_init ( arg , 0 , dest_fci , dest_fcc , NULL , error ) != SUCCESS"		3870516	0		!=			
ANR	3870564	CallExpression	"zend_fcall_info_init ( arg , 0 , dest_fci , dest_fcc , NULL , error )"		3870516	0					
ANR	3870565	Callee	zend_fcall_info_init		3870516	0					
ANR	3870566	Identifier	zend_fcall_info_init		3870516	0					
ANR	3870567	ArgumentList	arg		3870516	1					
ANR	3870568	Argument	arg		3870516	0					
ANR	3870569	Identifier	arg		3870516	0					
ANR	3870570	Argument	0		3870516	1					
ANR	3870571	PrimaryExpression	0		3870516	0					
ANR	3870572	Argument	dest_fci		3870516	2					
ANR	3870573	Identifier	dest_fci		3870516	0					
ANR	3870574	Argument	dest_fcc		3870516	3					
ANR	3870575	Identifier	dest_fcc		3870516	0					
ANR	3870576	Argument	NULL		3870516	4					
ANR	3870577	Identifier	NULL		3870516	0					
ANR	3870578	Argument	error		3870516	5					
ANR	3870579	Identifier	error		3870516	0					
ANR	3870580	Identifier	SUCCESS		3870516	1					
ANR	3870581	CompoundStatement		6:98:226:226	3870516	1					
ANR	3870582	ReturnStatement	return 0 ;	1222:2:55049:55057	3870516	0	True				
ANR	3870583	PrimaryExpression	0		3870516	0					
ANR	3870584	ReturnStatement	return 1 ;	1224:1:55063:55071	3870516	1	True				
ANR	3870585	PrimaryExpression	1		3870516	0					
ANR	3870586	ReturnType	static zend_always_inline int		3870516	1					
ANR	3870587	Identifier	zend_parse_arg_func		3870516	2					
ANR	3870588	ParameterList	"zval * arg , zend_fcall_info * dest_fci , zend_fcall_info_cache * dest_fcc , int check_null , char * * error"		3870516	3					
ANR	3870589	Parameter	zval * arg	1215:50:54717:54725	3870516	0	True				
ANR	3870590	ParameterType	zval *		3870516	0					
ANR	3870591	Identifier	arg		3870516	1					
ANR	3870592	Parameter	zend_fcall_info * dest_fci	1215:61:54728:54752	3870516	1	True				
ANR	3870593	ParameterType	zend_fcall_info *		3870516	0					
ANR	3870594	Identifier	dest_fci		3870516	1					
ANR	3870595	Parameter	zend_fcall_info_cache * dest_fcc	1215:88:54755:54785	3870516	2	True				
ANR	3870596	ParameterType	zend_fcall_info_cache *		3870516	0					
ANR	3870597	Identifier	dest_fcc		3870516	1					
ANR	3870598	Parameter	int check_null	1215:121:54788:54801	3870516	3	True				
ANR	3870599	ParameterType	int		3870516	0					
ANR	3870600	Identifier	check_null		3870516	1					
ANR	3870601	Parameter	char * * error	1215:137:54804:54815	3870516	4	True				
ANR	3870602	ParameterType	char * *		3870516	0					
ANR	3870603	Identifier	error		3870516	1					
ANR	3870604	CFGEntryNode	ENTRY		3870516		True				
ANR	3870605	CFGExitNode	EXIT		3870516		True				
ANR	3870606	Symbol	NULL		3870516						
ANR	3870607	Symbol	SUCCESS		3870516						
ANR	3870608	Symbol	zend_fcall_info_init		3870516						
ANR	3870609	Symbol	check_null		3870516						
ANR	3870610	Symbol	error		3870516						
ANR	3870611	Symbol	Z_TYPE_P		3870516						
ANR	3870612	Symbol	dest_fci -> size		3870516						
ANR	3870613	Symbol	* dest_fcc		3870516						
ANR	3870614	Symbol	UNEXPECTED		3870516						
ANR	3870615	Symbol	IS_NULL		3870516						
ANR	3870616	Symbol	dest_fcc -> initialized		3870516						
ANR	3870617	Symbol	arg		3870516						
ANR	3870618	Symbol	* dest_fci		3870516						
ANR	3870619	Symbol	* error		3870516						
ANR	3870620	Symbol	dest_fci		3870516						
ANR	3870621	Symbol	dest_fcc		3870516						
ANR	3870622	Function	zend_parse_arg_zval	1227:0:55076:55349							
ANR	3870623	FunctionDef	"zend_parse_arg_zval (zval * arg , zval * * dest , int check_null)"		3870622	0					
ANR	3870624	CompoundStatement		1228:0:55167:55349	3870622	0					
ANR	3870625	ExpressionStatement	* dest = ( check_null && ( UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) || ( UNEXPECTED ( Z_ISREF_P ( arg ) ) && UNEXPECTED ( Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL ) ) ) ) ? NULL : arg	1229:1:55170:55347	3870622	0	True				
ANR	3870626	AssignmentExpression	* dest = ( check_null && ( UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) || ( UNEXPECTED ( Z_ISREF_P ( arg ) ) && UNEXPECTED ( Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL ) ) ) ) ? NULL : arg		3870622	0		=			
ANR	3870627	UnaryOperationExpression	* dest		3870622	0					
ANR	3870628	UnaryOperator	*		3870622	0					
ANR	3870629	Identifier	dest		3870622	1					
ANR	3870630	ConditionalExpression	( check_null && ( UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) || ( UNEXPECTED ( Z_ISREF_P ( arg ) ) && UNEXPECTED ( Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL ) ) ) ) ? NULL : arg		3870622	1					
ANR	3870631	Condition	check_null && ( UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) || ( UNEXPECTED ( Z_ISREF_P ( arg ) ) && UNEXPECTED ( Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL ) ) )		3870622	0					
ANR	3870632	AndExpression	check_null && ( UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) || ( UNEXPECTED ( Z_ISREF_P ( arg ) ) && UNEXPECTED ( Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL ) ) )		3870622	0		&&			
ANR	3870633	Identifier	check_null		3870622	0					
ANR	3870634	OrExpression	UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) || ( UNEXPECTED ( Z_ISREF_P ( arg ) ) && UNEXPECTED ( Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL ) )		3870622	1		||			
ANR	3870635	CallExpression	UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		3870622	0					
ANR	3870636	Callee	UNEXPECTED		3870622	0					
ANR	3870637	Identifier	UNEXPECTED		3870622	0					
ANR	3870638	ArgumentList	Z_TYPE_P ( arg ) == IS_NULL		3870622	1					
ANR	3870639	Argument	Z_TYPE_P ( arg ) == IS_NULL		3870622	0					
ANR	3870640	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		3870622	0		==			
ANR	3870641	CallExpression	Z_TYPE_P ( arg )		3870622	0					
ANR	3870642	Callee	Z_TYPE_P		3870622	0					
ANR	3870643	Identifier	Z_TYPE_P		3870622	0					
ANR	3870644	ArgumentList	arg		3870622	1					
ANR	3870645	Argument	arg		3870622	0					
ANR	3870646	Identifier	arg		3870622	0					
ANR	3870647	Identifier	IS_NULL		3870622	1					
ANR	3870648	AndExpression	UNEXPECTED ( Z_ISREF_P ( arg ) ) && UNEXPECTED ( Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL )		3870622	1		&&			
ANR	3870649	CallExpression	UNEXPECTED ( Z_ISREF_P ( arg ) )		3870622	0					
ANR	3870650	Callee	UNEXPECTED		3870622	0					
ANR	3870651	Identifier	UNEXPECTED		3870622	0					
ANR	3870652	ArgumentList	Z_ISREF_P ( arg )		3870622	1					
ANR	3870653	Argument	Z_ISREF_P ( arg )		3870622	0					
ANR	3870654	CallExpression	Z_ISREF_P ( arg )		3870622	0					
ANR	3870655	Callee	Z_ISREF_P		3870622	0					
ANR	3870656	Identifier	Z_ISREF_P		3870622	0					
ANR	3870657	ArgumentList	arg		3870622	1					
ANR	3870658	Argument	arg		3870622	0					
ANR	3870659	Identifier	arg		3870622	0					
ANR	3870660	CallExpression	UNEXPECTED ( Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL )		3870622	1					
ANR	3870661	Callee	UNEXPECTED		3870622	0					
ANR	3870662	Identifier	UNEXPECTED		3870622	0					
ANR	3870663	ArgumentList	Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL		3870622	1					
ANR	3870664	Argument	Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL		3870622	0					
ANR	3870665	EqualityExpression	Z_TYPE_P ( Z_REFVAL_P ( arg ) ) == IS_NULL		3870622	0		==			
ANR	3870666	CallExpression	Z_TYPE_P ( Z_REFVAL_P ( arg ) )		3870622	0					
ANR	3870667	Callee	Z_TYPE_P		3870622	0					
ANR	3870668	Identifier	Z_TYPE_P		3870622	0					
ANR	3870669	ArgumentList	Z_REFVAL_P ( arg )		3870622	1					
ANR	3870670	Argument	Z_REFVAL_P ( arg )		3870622	0					
ANR	3870671	CallExpression	Z_REFVAL_P ( arg )		3870622	0					
ANR	3870672	Callee	Z_REFVAL_P		3870622	0					
ANR	3870673	Identifier	Z_REFVAL_P		3870622	0					
ANR	3870674	ArgumentList	arg		3870622	1					
ANR	3870675	Argument	arg		3870622	0					
ANR	3870676	Identifier	arg		3870622	0					
ANR	3870677	Identifier	IS_NULL		3870622	1					
ANR	3870678	Identifier	NULL		3870622	1					
ANR	3870679	Identifier	arg		3870622	2					
ANR	3870680	ReturnType	static zend_always_inline void		3870622	1					
ANR	3870681	Identifier	zend_parse_arg_zval		3870622	2					
ANR	3870682	ParameterList	"zval * arg , zval * * dest , int check_null"		3870622	3					
ANR	3870683	Parameter	zval * arg	1227:51:55127:55135	3870622	0	True				
ANR	3870684	ParameterType	zval *		3870622	0					
ANR	3870685	Identifier	arg		3870622	1					
ANR	3870686	Parameter	zval * * dest	1227:62:55138:55148	3870622	1	True				
ANR	3870687	ParameterType	zval * *		3870622	0					
ANR	3870688	Identifier	dest		3870622	1					
ANR	3870689	Parameter	int check_null	1227:75:55151:55164	3870622	2	True				
ANR	3870690	ParameterType	int		3870622	0					
ANR	3870691	Identifier	check_null		3870622	1					
ANR	3870692	CFGEntryNode	ENTRY		3870622		True				
ANR	3870693	CFGExitNode	EXIT		3870622		True				
ANR	3870694	Symbol	UNEXPECTED		3870622						
ANR	3870695	Symbol	NULL		3870622						
ANR	3870696	Symbol	IS_NULL		3870622						
ANR	3870697	Symbol	* dest		3870622						
ANR	3870698	Symbol	check_null		3870622						
ANR	3870699	Symbol	arg		3870622						
ANR	3870700	Symbol	Z_REFVAL_P		3870622						
ANR	3870701	Symbol	dest		3870622						
ANR	3870702	Symbol	Z_TYPE_P		3870622						
ANR	3870703	Symbol	Z_ISREF_P		3870622						
ANR	3870704	Function	zend_parse_arg_zval_deref	1235:0:55352:55527							
ANR	3870705	FunctionDef	"zend_parse_arg_zval_deref (zval * arg , zval * * dest , int check_null)"		3870704	0					
ANR	3870706	CompoundStatement		1236:0:55449:55527	3870704	0					
ANR	3870707	ExpressionStatement	* dest = ( check_null && UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) ) ? NULL : arg	1237:1:55452:55525	3870704	0	True				
ANR	3870708	AssignmentExpression	* dest = ( check_null && UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) ) ? NULL : arg		3870704	0		=			
ANR	3870709	UnaryOperationExpression	* dest		3870704	0					
ANR	3870710	UnaryOperator	*		3870704	0					
ANR	3870711	Identifier	dest		3870704	1					
ANR	3870712	ConditionalExpression	( check_null && UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL ) ) ? NULL : arg		3870704	1					
ANR	3870713	Condition	check_null && UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		3870704	0					
ANR	3870714	AndExpression	check_null && UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		3870704	0		&&			
ANR	3870715	Identifier	check_null		3870704	0					
ANR	3870716	CallExpression	UNEXPECTED ( Z_TYPE_P ( arg ) == IS_NULL )		3870704	1					
ANR	3870717	Callee	UNEXPECTED		3870704	0					
ANR	3870718	Identifier	UNEXPECTED		3870704	0					
ANR	3870719	ArgumentList	Z_TYPE_P ( arg ) == IS_NULL		3870704	1					
ANR	3870720	Argument	Z_TYPE_P ( arg ) == IS_NULL		3870704	0					
ANR	3870721	EqualityExpression	Z_TYPE_P ( arg ) == IS_NULL		3870704	0		==			
ANR	3870722	CallExpression	Z_TYPE_P ( arg )		3870704	0					
ANR	3870723	Callee	Z_TYPE_P		3870704	0					
ANR	3870724	Identifier	Z_TYPE_P		3870704	0					
ANR	3870725	ArgumentList	arg		3870704	1					
ANR	3870726	Argument	arg		3870704	0					
ANR	3870727	Identifier	arg		3870704	0					
ANR	3870728	Identifier	IS_NULL		3870704	1					
ANR	3870729	Identifier	NULL		3870704	1					
ANR	3870730	Identifier	arg		3870704	2					
ANR	3870731	ReturnType	static zend_always_inline void		3870704	1					
ANR	3870732	Identifier	zend_parse_arg_zval_deref		3870704	2					
ANR	3870733	ParameterList	"zval * arg , zval * * dest , int check_null"		3870704	3					
ANR	3870734	Parameter	zval * arg	1235:57:55409:55417	3870704	0	True				
ANR	3870735	ParameterType	zval *		3870704	0					
ANR	3870736	Identifier	arg		3870704	1					
ANR	3870737	Parameter	zval * * dest	1235:68:55420:55430	3870704	1	True				
ANR	3870738	ParameterType	zval * *		3870704	0					
ANR	3870739	Identifier	dest		3870704	1					
ANR	3870740	Parameter	int check_null	1235:81:55433:55446	3870704	2	True				
ANR	3870741	ParameterType	int		3870704	0					
ANR	3870742	Identifier	check_null		3870704	1					
ANR	3870743	CFGEntryNode	ENTRY		3870704		True				
ANR	3870744	CFGExitNode	EXIT		3870704		True				
ANR	3870745	Symbol	UNEXPECTED		3870704						
ANR	3870746	Symbol	NULL		3870704						
ANR	3870747	Symbol	IS_NULL		3870704						
ANR	3870748	Symbol	* dest		3870704						
ANR	3870749	Symbol	check_null		3870704						
ANR	3870750	Symbol	arg		3870704						
ANR	3870751	Symbol	dest		3870704						
ANR	3870752	Symbol	Z_TYPE_P		3870704						
