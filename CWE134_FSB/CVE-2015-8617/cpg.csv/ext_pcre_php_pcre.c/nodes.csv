command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1701710	File	data/converged/CVE-2015-8617_php-src/ext_pcre_php_pcre.c								
ANR	1701711	ClassDef	<unnamed>	52:0:1893:2106							
ANR	1701712	Function	pcre_handle_exec_error	66:0:2154:2837							
ANR	1701713	FunctionDef	pcre_handle_exec_error (int pcre_code)		1701712	0					
ANR	1701714	CompoundStatement		67:0:2214:2837	1701712	0					
ANR	1701715	IdentifierDeclStatement	int preg_code = 0 ;	68:1:2217:2234	1701712	0	True				
ANR	1701716	IdentifierDecl	preg_code = 0		1701712	0					
ANR	1701717	IdentifierDeclType	int		1701712	0					
ANR	1701718	Identifier	preg_code		1701712	1					
ANR	1701719	AssignmentExpression	preg_code = 0		1701712	2		=			
ANR	1701720	Identifier	preg_code		1701712	0					
ANR	1701721	PrimaryExpression	0		1701712	1					
ANR	1701722	SwitchStatement	switch ( pcre_code )		1701712	1					
ANR	1701723	Condition	pcre_code	70:9:2246:2254	1701712	0	True				
ANR	1701724	Identifier	pcre_code		1701712	0					
ANR	1701725	CompoundStatement		4:20:42:42	1701712	1					
ANR	1701726	Label	case PCRE_ERROR_MATCHLIMIT :	71:2:2261:2287	1701712	0	True				
ANR	1701727	Identifier	PCRE_ERROR_MATCHLIMIT		1701712	0					
ANR	1701728	ExpressionStatement	preg_code = PHP_PCRE_BACKTRACK_LIMIT_ERROR	72:3:2292:2334	1701712	1	True				
ANR	1701729	AssignmentExpression	preg_code = PHP_PCRE_BACKTRACK_LIMIT_ERROR		1701712	0		=			
ANR	1701730	Identifier	preg_code		1701712	0					
ANR	1701731	Identifier	PHP_PCRE_BACKTRACK_LIMIT_ERROR		1701712	1					
ANR	1701732	BreakStatement	break ;	73:3:2339:2344	1701712	2	True				
ANR	1701733	Label	case PCRE_ERROR_RECURSIONLIMIT :	75:2:2349:2379	1701712	3	True				
ANR	1701734	Identifier	PCRE_ERROR_RECURSIONLIMIT		1701712	0					
ANR	1701735	ExpressionStatement	preg_code = PHP_PCRE_RECURSION_LIMIT_ERROR	76:3:2384:2426	1701712	4	True				
ANR	1701736	AssignmentExpression	preg_code = PHP_PCRE_RECURSION_LIMIT_ERROR		1701712	0		=			
ANR	1701737	Identifier	preg_code		1701712	0					
ANR	1701738	Identifier	PHP_PCRE_RECURSION_LIMIT_ERROR		1701712	1					
ANR	1701739	BreakStatement	break ;	77:3:2431:2436	1701712	5	True				
ANR	1701740	Label	case PCRE_ERROR_BADUTF8 :	79:2:2441:2464	1701712	6	True				
ANR	1701741	Identifier	PCRE_ERROR_BADUTF8		1701712	0					
ANR	1701742	ExpressionStatement	preg_code = PHP_PCRE_BAD_UTF8_ERROR	80:3:2469:2504	1701712	7	True				
ANR	1701743	AssignmentExpression	preg_code = PHP_PCRE_BAD_UTF8_ERROR		1701712	0		=			
ANR	1701744	Identifier	preg_code		1701712	0					
ANR	1701745	Identifier	PHP_PCRE_BAD_UTF8_ERROR		1701712	1					
ANR	1701746	BreakStatement	break ;	81:3:2509:2514	1701712	8	True				
ANR	1701747	Label	case PCRE_ERROR_BADUTF8_OFFSET :	83:2:2519:2549	1701712	9	True				
ANR	1701748	Identifier	PCRE_ERROR_BADUTF8_OFFSET		1701712	0					
ANR	1701749	ExpressionStatement	preg_code = PHP_PCRE_BAD_UTF8_OFFSET_ERROR	84:3:2554:2596	1701712	10	True				
ANR	1701750	AssignmentExpression	preg_code = PHP_PCRE_BAD_UTF8_OFFSET_ERROR		1701712	0		=			
ANR	1701751	Identifier	preg_code		1701712	0					
ANR	1701752	Identifier	PHP_PCRE_BAD_UTF8_OFFSET_ERROR		1701712	1					
ANR	1701753	BreakStatement	break ;	85:3:2601:2606	1701712	11	True				
ANR	1701754	Label	case PCRE_ERROR_JIT_STACKLIMIT :	88:2:2643:2673	1701712	12	True				
ANR	1701755	Identifier	PCRE_ERROR_JIT_STACKLIMIT		1701712	0					
ANR	1701756	ExpressionStatement	preg_code = PHP_PCRE_JIT_STACKLIMIT_ERROR	89:3:2678:2719	1701712	13	True				
ANR	1701757	AssignmentExpression	preg_code = PHP_PCRE_JIT_STACKLIMIT_ERROR		1701712	0		=			
ANR	1701758	Identifier	preg_code		1701712	0					
ANR	1701759	Identifier	PHP_PCRE_JIT_STACKLIMIT_ERROR		1701712	1					
ANR	1701760	BreakStatement	break ;	90:3:2724:2729	1701712	14	True				
ANR	1701761	Label	default :	93:2:2741:2748	1701712	15	True				
ANR	1701762	Identifier	default		1701712	0					
ANR	1701763	ExpressionStatement	preg_code = PHP_PCRE_INTERNAL_ERROR	94:3:2753:2788	1701712	16	True				
ANR	1701764	AssignmentExpression	preg_code = PHP_PCRE_INTERNAL_ERROR		1701712	0		=			
ANR	1701765	Identifier	preg_code		1701712	0					
ANR	1701766	Identifier	PHP_PCRE_INTERNAL_ERROR		1701712	1					
ANR	1701767	BreakStatement	break ;	95:3:2793:2798	1701712	17	True				
ANR	1701768	ExpressionStatement	PCRE_G ( error_code ) = preg_code	98:1:2805:2835	1701712	2	True				
ANR	1701769	AssignmentExpression	PCRE_G ( error_code ) = preg_code		1701712	0		=			
ANR	1701770	CallExpression	PCRE_G ( error_code )		1701712	0					
ANR	1701771	Callee	PCRE_G		1701712	0					
ANR	1701772	Identifier	PCRE_G		1701712	0					
ANR	1701773	ArgumentList	error_code		1701712	1					
ANR	1701774	Argument	error_code		1701712	0					
ANR	1701775	Identifier	error_code		1701712	0					
ANR	1701776	Identifier	preg_code		1701712	1					
ANR	1701777	ReturnType	static void		1701712	1					
ANR	1701778	Identifier	pcre_handle_exec_error		1701712	2					
ANR	1701779	ParameterList	int pcre_code		1701712	3					
ANR	1701780	Parameter	int pcre_code	66:35:2189:2201	1701712	0	True				
ANR	1701781	ParameterType	int		1701712	0					
ANR	1701782	Identifier	pcre_code		1701712	1					
ANR	1701783	CFGEntryNode	ENTRY		1701712		True				
ANR	1701784	CFGExitNode	EXIT		1701712		True				
ANR	1701785	Symbol	preg_code		1701712						
ANR	1701786	Symbol	PHP_PCRE_INTERNAL_ERROR		1701712						
ANR	1701787	Symbol	PHP_PCRE_BAD_UTF8_OFFSET_ERROR		1701712						
ANR	1701788	Symbol	PCRE_G		1701712						
ANR	1701789	Symbol	PHP_PCRE_BACKTRACK_LIMIT_ERROR		1701712						
ANR	1701790	Symbol	PHP_PCRE_RECURSION_LIMIT_ERROR		1701712						
ANR	1701791	Symbol	PHP_PCRE_BAD_UTF8_ERROR		1701712						
ANR	1701792	Symbol	pcre_code		1701712						
ANR	1701793	Symbol	PHP_PCRE_JIT_STACKLIMIT_ERROR		1701712						
ANR	1701794	Symbol	error_code		1701712						
ANR	1701795	Function	php_free_pcre_cache	102:0:2850:3218							
ANR	1701796	FunctionDef	php_free_pcre_cache (zval * data)		1701795	0					
ANR	1701797	CompoundStatement		103:0:2904:3218	1701795	0					
ANR	1701798	IdentifierDeclStatement	pcre_cache_entry * pce = ( pcre_cache_entry * ) Z_PTR_P ( data ) ;	104:1:2907:2965	1701795	0	True				
ANR	1701799	IdentifierDecl	* pce = ( pcre_cache_entry * ) Z_PTR_P ( data )		1701795	0					
ANR	1701800	IdentifierDeclType	pcre_cache_entry *		1701795	0					
ANR	1701801	Identifier	pce		1701795	1					
ANR	1701802	AssignmentExpression	* pce = ( pcre_cache_entry * ) Z_PTR_P ( data )		1701795	2		=			
ANR	1701803	Identifier	pce		1701795	0					
ANR	1701804	CastExpression	( pcre_cache_entry * ) Z_PTR_P ( data )		1701795	1					
ANR	1701805	CastTarget	pcre_cache_entry *		1701795	0					
ANR	1701806	CallExpression	Z_PTR_P ( data )		1701795	1					
ANR	1701807	Callee	Z_PTR_P		1701795	0					
ANR	1701808	Identifier	Z_PTR_P		1701795	0					
ANR	1701809	ArgumentList	data		1701795	1					
ANR	1701810	Argument	data		1701795	0					
ANR	1701811	Identifier	data		1701795	0					
ANR	1701812	IfStatement	if ( ! pce )		1701795	1					
ANR	1701813	Condition	! pce	105:5:2972:2975	1701795	0	True				
ANR	1701814	UnaryOperationExpression	! pce		1701795	0					
ANR	1701815	UnaryOperator	!		1701795	0					
ANR	1701816	Identifier	pce		1701795	1					
ANR	1701817	ReturnStatement	return ;	105:11:2978:2984	1701795	1	True				
ANR	1701818	ExpressionStatement	pcre_free ( pce -> re )	106:1:2987:3005	1701795	2	True				
ANR	1701819	CallExpression	pcre_free ( pce -> re )		1701795	0					
ANR	1701820	Callee	pcre_free		1701795	0					
ANR	1701821	Identifier	pcre_free		1701795	0					
ANR	1701822	ArgumentList	pce -> re		1701795	1					
ANR	1701823	Argument	pce -> re		1701795	0					
ANR	1701824	PtrMemberAccess	pce -> re		1701795	0					
ANR	1701825	Identifier	pce		1701795	0					
ANR	1701826	Identifier	re		1701795	1					
ANR	1701827	IfStatement	if ( pce -> extra )		1701795	3					
ANR	1701828	Condition	pce -> extra	107:5:3012:3021	1701795	0	True				
ANR	1701829	PtrMemberAccess	pce -> extra		1701795	0					
ANR	1701830	Identifier	pce		1701795	0					
ANR	1701831	Identifier	extra		1701795	1					
ANR	1701832	CompoundStatement		5:17:119:119	1701795	1					
ANR	1701833	ExpressionStatement	pcre_free_study ( pce -> extra )	108:2:3028:3055	1701795	0	True				
ANR	1701834	CallExpression	pcre_free_study ( pce -> extra )		1701795	0					
ANR	1701835	Callee	pcre_free_study		1701795	0					
ANR	1701836	Identifier	pcre_free_study		1701795	0					
ANR	1701837	ArgumentList	pce -> extra		1701795	1					
ANR	1701838	Argument	pce -> extra		1701795	0					
ANR	1701839	PtrMemberAccess	pce -> extra		1701795	0					
ANR	1701840	Identifier	pce		1701795	0					
ANR	1701841	Identifier	extra		1701795	1					
ANR	1701842	IfStatement	if ( ( void * ) pce -> tables )		1701795	4					
ANR	1701843	Condition	( void * ) pce -> tables	111:5:3084:3101	1701795	0	True				
ANR	1701844	CastExpression	( void * ) pce -> tables		1701795	0					
ANR	1701845	CastTarget	void *		1701795	0					
ANR	1701846	PtrMemberAccess	pce -> tables		1701795	1					
ANR	1701847	Identifier	pce		1701795	0					
ANR	1701848	Identifier	tables		1701795	1					
ANR	1701849	ExpressionStatement	"pefree ( ( void * ) pce -> tables , 1 )"	111:25:3104:3133	1701795	1	True				
ANR	1701850	CallExpression	"pefree ( ( void * ) pce -> tables , 1 )"		1701795	0					
ANR	1701851	Callee	pefree		1701795	0					
ANR	1701852	Identifier	pefree		1701795	0					
ANR	1701853	ArgumentList	( void * ) pce -> tables		1701795	1					
ANR	1701854	Argument	( void * ) pce -> tables		1701795	0					
ANR	1701855	CastExpression	( void * ) pce -> tables		1701795	0					
ANR	1701856	CastTarget	void *		1701795	0					
ANR	1701857	PtrMemberAccess	pce -> tables		1701795	1					
ANR	1701858	Identifier	pce		1701795	0					
ANR	1701859	Identifier	tables		1701795	1					
ANR	1701860	Argument	1		1701795	1					
ANR	1701861	PrimaryExpression	1		1701795	0					
ANR	1701862	IfStatement	if ( pce -> locale )		1701795	5					
ANR	1701863	Condition	pce -> locale	112:5:3140:3150	1701795	0	True				
ANR	1701864	PtrMemberAccess	pce -> locale		1701795	0					
ANR	1701865	Identifier	pce		1701795	0					
ANR	1701866	Identifier	locale		1701795	1					
ANR	1701867	CompoundStatement		10:18:248:248	1701795	1					
ANR	1701868	ExpressionStatement	zend_string_release ( pce -> locale )	113:2:3157:3189	1701795	0	True				
ANR	1701869	CallExpression	zend_string_release ( pce -> locale )		1701795	0					
ANR	1701870	Callee	zend_string_release		1701795	0					
ANR	1701871	Identifier	zend_string_release		1701795	0					
ANR	1701872	ArgumentList	pce -> locale		1701795	1					
ANR	1701873	Argument	pce -> locale		1701795	0					
ANR	1701874	PtrMemberAccess	pce -> locale		1701795	0					
ANR	1701875	Identifier	pce		1701795	0					
ANR	1701876	Identifier	locale		1701795	1					
ANR	1701877	ExpressionStatement	"pefree ( pce , 1 )"	116:1:3202:3216	1701795	6	True				
ANR	1701878	CallExpression	"pefree ( pce , 1 )"		1701795	0					
ANR	1701879	Callee	pefree		1701795	0					
ANR	1701880	Identifier	pefree		1701795	0					
ANR	1701881	ArgumentList	pce		1701795	1					
ANR	1701882	Argument	pce		1701795	0					
ANR	1701883	Identifier	pce		1701795	0					
ANR	1701884	Argument	1		1701795	1					
ANR	1701885	PrimaryExpression	1		1701795	0					
ANR	1701886	ReturnType	static void		1701795	1					
ANR	1701887	Identifier	php_free_pcre_cache		1701795	2					
ANR	1701888	ParameterList	zval * data		1701795	3					
ANR	1701889	Parameter	zval * data	102:32:2882:2891	1701795	0	True				
ANR	1701890	ParameterType	zval *		1701795	0					
ANR	1701891	Identifier	data		1701795	1					
ANR	1701892	CFGEntryNode	ENTRY		1701795		True				
ANR	1701893	CFGExitNode	EXIT		1701795		True				
ANR	1701894	Symbol	Z_PTR_P		1701795						
ANR	1701895	Symbol	pce		1701795						
ANR	1701896	Symbol	data		1701795						
ANR	1701897	Symbol	pce -> extra		1701795						
ANR	1701898	Symbol	pce -> locale		1701795						
ANR	1701899	Symbol	pce -> re		1701795						
ANR	1701900	Symbol	pce -> tables		1701795						
ANR	1701901	Symbol	* pce		1701795						
ANR	1701902	DeclStmt									
ANR	1701903	Decl							int	int	jit_yes
ANR	1701904	Function	pcre_clean_cache	201:0:6461:6742							
ANR	1701905	FunctionDef	"pcre_clean_cache (zval * data , void * arg)"		1701904	0					
ANR	1701906	CompoundStatement		202:0:6512:6742	1701904	0					
ANR	1701907	IdentifierDeclStatement	pcre_cache_entry * pce = ( pcre_cache_entry * ) Z_PTR_P ( data ) ;	203:1:6515:6573	1701904	0	True				
ANR	1701908	IdentifierDecl	* pce = ( pcre_cache_entry * ) Z_PTR_P ( data )		1701904	0					
ANR	1701909	IdentifierDeclType	pcre_cache_entry *		1701904	0					
ANR	1701910	Identifier	pce		1701904	1					
ANR	1701911	AssignmentExpression	* pce = ( pcre_cache_entry * ) Z_PTR_P ( data )		1701904	2		=			
ANR	1701912	Identifier	pce		1701904	0					
ANR	1701913	CastExpression	( pcre_cache_entry * ) Z_PTR_P ( data )		1701904	1					
ANR	1701914	CastTarget	pcre_cache_entry *		1701904	0					
ANR	1701915	CallExpression	Z_PTR_P ( data )		1701904	1					
ANR	1701916	Callee	Z_PTR_P		1701904	0					
ANR	1701917	Identifier	Z_PTR_P		1701904	0					
ANR	1701918	ArgumentList	data		1701904	1					
ANR	1701919	Argument	data		1701904	0					
ANR	1701920	Identifier	data		1701904	0					
ANR	1701921	IdentifierDeclStatement	int * num_clean = ( int * ) arg ;	204:1:6576:6603	1701904	1	True				
ANR	1701922	IdentifierDecl	* num_clean = ( int * ) arg		1701904	0					
ANR	1701923	IdentifierDeclType	int *		1701904	0					
ANR	1701924	Identifier	num_clean		1701904	1					
ANR	1701925	AssignmentExpression	* num_clean = ( int * ) arg		1701904	2		=			
ANR	1701926	Identifier	num_clean		1701904	0					
ANR	1701927	CastExpression	( int * ) arg		1701904	1					
ANR	1701928	CastTarget	int *		1701904	0					
ANR	1701929	Identifier	arg		1701904	1					
ANR	1701930	IfStatement	if ( * num_clean > 0 && ! pce -> refcount )		1701904	2					
ANR	1701931	Condition	* num_clean > 0 && ! pce -> refcount	206:5:6611:6642	1701904	0	True				
ANR	1701932	AndExpression	* num_clean > 0 && ! pce -> refcount		1701904	0		&&			
ANR	1701933	RelationalExpression	* num_clean > 0		1701904	0		>			
ANR	1701934	UnaryOperationExpression	* num_clean		1701904	0					
ANR	1701935	UnaryOperator	*		1701904	0					
ANR	1701936	Identifier	num_clean		1701904	1					
ANR	1701937	PrimaryExpression	0		1701904	1					
ANR	1701938	UnaryOperationExpression	! pce -> refcount		1701904	1					
ANR	1701939	UnaryOperator	!		1701904	0					
ANR	1701940	PtrMemberAccess	pce -> refcount		1701904	1					
ANR	1701941	Identifier	pce		1701904	0					
ANR	1701942	Identifier	refcount		1701904	1					
ANR	1701943	CompoundStatement		5:39:132:132	1701904	1					
ANR	1701944	ExpressionStatement	( * num_clean ) --	207:2:6649:6663	1701904	0	True				
ANR	1701945	PostIncDecOperationExpression	( * num_clean ) --		1701904	0					
ANR	1701946	UnaryOperationExpression	* num_clean		1701904	0					
ANR	1701947	UnaryOperator	*		1701904	0					
ANR	1701948	Identifier	num_clean		1701904	1					
ANR	1701949	IncDec	--		1701904	1					
ANR	1701950	ReturnStatement	return ZEND_HASH_APPLY_REMOVE ;	208:2:6667:6696	1701904	1	True				
ANR	1701951	Identifier	ZEND_HASH_APPLY_REMOVE		1701904	0					
ANR	1701952	ElseStatement	else		1701904	0					
ANR	1701953	CompoundStatement		8:8:193:193	1701904	0					
ANR	1701954	ReturnStatement	return ZEND_HASH_APPLY_KEEP ;	210:2:6710:6737	1701904	0	True				
ANR	1701955	Identifier	ZEND_HASH_APPLY_KEEP		1701904	0					
ANR	1701956	ReturnType	static int		1701904	1					
ANR	1701957	Identifier	pcre_clean_cache		1701904	2					
ANR	1701958	ParameterList	"zval * data , void * arg"		1701904	3					
ANR	1701959	Parameter	zval * data	201:28:6489:6498	1701904	0	True				
ANR	1701960	ParameterType	zval *		1701904	0					
ANR	1701961	Identifier	data		1701904	1					
ANR	1701962	Parameter	void * arg	201:40:6501:6509	1701904	1	True				
ANR	1701963	ParameterType	void *		1701904	0					
ANR	1701964	Identifier	arg		1701904	1					
ANR	1701965	CFGEntryNode	ENTRY		1701904		True				
ANR	1701966	CFGExitNode	EXIT		1701904		True				
ANR	1701967	Symbol	Z_PTR_P		1701904						
ANR	1701968	Symbol	ZEND_HASH_APPLY_KEEP		1701904						
ANR	1701969	Symbol	pce		1701904						
ANR	1701970	Symbol	data		1701904						
ANR	1701971	Symbol	arg		1701904						
ANR	1701972	Symbol	* num_clean		1701904						
ANR	1701973	Symbol	pce -> refcount		1701904						
ANR	1701974	Symbol	num_clean		1701904						
ANR	1701975	Symbol	ZEND_HASH_APPLY_REMOVE		1701904						
ANR	1701976	Symbol	* pce		1701904						
ANR	1701977	Function	make_subpats_table	216:0:6791:7820							
ANR	1701978	FunctionDef	"make_subpats_table (int num_subpats , pcre_cache_entry * pce)"		1701977	0					
ANR	1701979	CompoundStatement		217:0:6864:7820	1701977	0					
ANR	1701980	IdentifierDeclStatement	pcre_extra * extra = pce -> extra ;	218:1:6867:6897	1701977	0	True				
ANR	1701981	IdentifierDecl	* extra = pce -> extra		1701977	0					
ANR	1701982	IdentifierDeclType	pcre_extra *		1701977	0					
ANR	1701983	Identifier	extra		1701977	1					
ANR	1701984	AssignmentExpression	* extra = pce -> extra		1701977	2		=			
ANR	1701985	Identifier	extra		1701977	0					
ANR	1701986	PtrMemberAccess	pce -> extra		1701977	1					
ANR	1701987	Identifier	pce		1701977	0					
ANR	1701988	Identifier	extra		1701977	1					
ANR	1701989	IdentifierDeclStatement	"int name_cnt = pce -> name_count , name_size , ni = 0 ;"	219:1:6900:6949	1701977	1	True				
ANR	1701990	IdentifierDecl	name_cnt = pce -> name_count		1701977	0					
ANR	1701991	IdentifierDeclType	int		1701977	0					
ANR	1701992	Identifier	name_cnt		1701977	1					
ANR	1701993	AssignmentExpression	name_cnt = pce -> name_count		1701977	2		=			
ANR	1701994	Identifier	name_cnt		1701977	0					
ANR	1701995	PtrMemberAccess	pce -> name_count		1701977	1					
ANR	1701996	Identifier	pce		1701977	0					
ANR	1701997	Identifier	name_count		1701977	1					
ANR	1701998	IdentifierDecl	name_size		1701977	1					
ANR	1701999	IdentifierDeclType	int		1701977	0					
ANR	1702000	Identifier	name_size		1701977	1					
ANR	1702001	IdentifierDecl	ni = 0		1701977	2					
ANR	1702002	IdentifierDeclType	int		1701977	0					
ANR	1702003	Identifier	ni		1701977	1					
ANR	1702004	AssignmentExpression	ni = 0		1701977	2		=			
ANR	1702005	Identifier	ni		1701977	0					
ANR	1702006	PrimaryExpression	0		1701977	1					
ANR	1702007	IdentifierDeclStatement	int rc ;	220:1:6952:6958	1701977	2	True				
ANR	1702008	IdentifierDecl	rc		1701977	0					
ANR	1702009	IdentifierDeclType	int		1701977	0					
ANR	1702010	Identifier	rc		1701977	1					
ANR	1702011	IdentifierDeclStatement	char * name_table ;	221:1:6961:6977	1701977	3	True				
ANR	1702012	IdentifierDecl	* name_table		1701977	0					
ANR	1702013	IdentifierDeclType	char *		1701977	0					
ANR	1702014	Identifier	name_table		1701977	1					
ANR	1702015	IdentifierDeclStatement	unsigned short name_idx ;	222:1:6980:7003	1701977	4	True				
ANR	1702016	IdentifierDecl	name_idx		1701977	0					
ANR	1702017	IdentifierDeclType	unsigned short		1701977	0					
ANR	1702018	Identifier	name_idx		1701977	1					
ANR	1702019	IdentifierDeclStatement	char * * subpat_names ;	223:1:7006:7025	1701977	5	True				
ANR	1702020	IdentifierDecl	* * subpat_names		1701977	0					
ANR	1702021	IdentifierDeclType	char * *		1701977	0					
ANR	1702022	Identifier	subpat_names		1701977	1					
ANR	1702023	IdentifierDeclStatement	"int rc1 , rc2 ;"	224:1:7028:7040	1701977	6	True				
ANR	1702024	IdentifierDecl	rc1		1701977	0					
ANR	1702025	IdentifierDeclType	int		1701977	0					
ANR	1702026	Identifier	rc1		1701977	1					
ANR	1702027	IdentifierDecl	rc2		1701977	1					
ANR	1702028	IdentifierDeclType	int		1701977	0					
ANR	1702029	Identifier	rc2		1701977	1					
ANR	1702030	ExpressionStatement	"rc1 = pcre_fullinfo ( pce -> re , extra , PCRE_INFO_NAMETABLE , & name_table )"	226:1:7044:7113	1701977	7	True				
ANR	1702031	AssignmentExpression	"rc1 = pcre_fullinfo ( pce -> re , extra , PCRE_INFO_NAMETABLE , & name_table )"		1701977	0		=			
ANR	1702032	Identifier	rc1		1701977	0					
ANR	1702033	CallExpression	"pcre_fullinfo ( pce -> re , extra , PCRE_INFO_NAMETABLE , & name_table )"		1701977	1					
ANR	1702034	Callee	pcre_fullinfo		1701977	0					
ANR	1702035	Identifier	pcre_fullinfo		1701977	0					
ANR	1702036	ArgumentList	pce -> re		1701977	1					
ANR	1702037	Argument	pce -> re		1701977	0					
ANR	1702038	PtrMemberAccess	pce -> re		1701977	0					
ANR	1702039	Identifier	pce		1701977	0					
ANR	1702040	Identifier	re		1701977	1					
ANR	1702041	Argument	extra		1701977	1					
ANR	1702042	Identifier	extra		1701977	0					
ANR	1702043	Argument	PCRE_INFO_NAMETABLE		1701977	2					
ANR	1702044	Identifier	PCRE_INFO_NAMETABLE		1701977	0					
ANR	1702045	Argument	& name_table		1701977	3					
ANR	1702046	UnaryOperationExpression	& name_table		1701977	0					
ANR	1702047	UnaryOperator	&		1701977	0					
ANR	1702048	Identifier	name_table		1701977	1					
ANR	1702049	ExpressionStatement	"rc2 = pcre_fullinfo ( pce -> re , extra , PCRE_INFO_NAMEENTRYSIZE , & name_size )"	227:1:7116:7188	1701977	8	True				
ANR	1702050	AssignmentExpression	"rc2 = pcre_fullinfo ( pce -> re , extra , PCRE_INFO_NAMEENTRYSIZE , & name_size )"		1701977	0		=			
ANR	1702051	Identifier	rc2		1701977	0					
ANR	1702052	CallExpression	"pcre_fullinfo ( pce -> re , extra , PCRE_INFO_NAMEENTRYSIZE , & name_size )"		1701977	1					
ANR	1702053	Callee	pcre_fullinfo		1701977	0					
ANR	1702054	Identifier	pcre_fullinfo		1701977	0					
ANR	1702055	ArgumentList	pce -> re		1701977	1					
ANR	1702056	Argument	pce -> re		1701977	0					
ANR	1702057	PtrMemberAccess	pce -> re		1701977	0					
ANR	1702058	Identifier	pce		1701977	0					
ANR	1702059	Identifier	re		1701977	1					
ANR	1702060	Argument	extra		1701977	1					
ANR	1702061	Identifier	extra		1701977	0					
ANR	1702062	Argument	PCRE_INFO_NAMEENTRYSIZE		1701977	2					
ANR	1702063	Identifier	PCRE_INFO_NAMEENTRYSIZE		1701977	0					
ANR	1702064	Argument	& name_size		1701977	3					
ANR	1702065	UnaryOperationExpression	& name_size		1701977	0					
ANR	1702066	UnaryOperator	&		1701977	0					
ANR	1702067	Identifier	name_size		1701977	1					
ANR	1702068	ExpressionStatement	rc = rc2 ? rc2 : rc1	228:1:7191:7211	1701977	9	True				
ANR	1702069	AssignmentExpression	rc = rc2 ? rc2 : rc1		1701977	0		=			
ANR	1702070	Identifier	rc		1701977	0					
ANR	1702071	ConditionalExpression	rc2 ? rc2 : rc1		1701977	1					
ANR	1702072	Condition	rc2		1701977	0					
ANR	1702073	Identifier	rc2		1701977	0					
ANR	1702074	Identifier	rc2		1701977	1					
ANR	1702075	Identifier	rc1		1701977	2					
ANR	1702076	IfStatement	if ( rc < 0 )		1701977	10					
ANR	1702077	Condition	rc < 0	229:5:7218:7223	1701977	0	True				
ANR	1702078	RelationalExpression	rc < 0		1701977	0		<			
ANR	1702079	Identifier	rc		1701977	0					
ANR	1702080	PrimaryExpression	0		1701977	1					
ANR	1702081	CompoundStatement		13:13:361:361	1701977	1					
ANR	1702082	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Internal pcre_fullinfo() error %d"" , rc )"	230:2:7230:7304	1701977	0	True				
ANR	1702083	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Internal pcre_fullinfo() error %d"" , rc )"		1701977	0					
ANR	1702084	Callee	php_error_docref		1701977	0					
ANR	1702085	Identifier	php_error_docref		1701977	0					
ANR	1702086	ArgumentList	NULL		1701977	1					
ANR	1702087	Argument	NULL		1701977	0					
ANR	1702088	Identifier	NULL		1701977	0					
ANR	1702089	Argument	E_WARNING		1701977	1					
ANR	1702090	Identifier	E_WARNING		1701977	0					
ANR	1702091	Argument	"""Internal pcre_fullinfo() error %d"""		1701977	2					
ANR	1702092	PrimaryExpression	"""Internal pcre_fullinfo() error %d"""		1701977	0					
ANR	1702093	Argument	rc		1701977	3					
ANR	1702094	Identifier	rc		1701977	0					
ANR	1702095	ReturnStatement	return NULL ;	231:2:7308:7319	1701977	1	True				
ANR	1702096	Identifier	NULL		1701977	0					
ANR	1702097	ExpressionStatement	"subpat_names = ( char * * ) ecalloc ( num_subpats , sizeof ( char * ) )"	234:1:7326:7386	1701977	11	True				
ANR	1702098	AssignmentExpression	"subpat_names = ( char * * ) ecalloc ( num_subpats , sizeof ( char * ) )"		1701977	0		=			
ANR	1702099	Identifier	subpat_names		1701977	0					
ANR	1702100	CastExpression	"( char * * ) ecalloc ( num_subpats , sizeof ( char * ) )"		1701977	1					
ANR	1702101	CastTarget	char * *		1701977	0					
ANR	1702102	CallExpression	"ecalloc ( num_subpats , sizeof ( char * ) )"		1701977	1					
ANR	1702103	Callee	ecalloc		1701977	0					
ANR	1702104	Identifier	ecalloc		1701977	0					
ANR	1702105	ArgumentList	num_subpats		1701977	1					
ANR	1702106	Argument	num_subpats		1701977	0					
ANR	1702107	Identifier	num_subpats		1701977	0					
ANR	1702108	Argument	sizeof ( char * )		1701977	1					
ANR	1702109	SizeofExpression	sizeof ( char * )		1701977	0					
ANR	1702110	Sizeof	sizeof		1701977	0					
ANR	1702111	SizeofOperand	char *		1701977	1					
ANR	1702112	WhileStatement	while ( ni ++ < name_cnt )		1701977	12					
ANR	1702113	Condition	ni ++ < name_cnt	235:8:7396:7410	1701977	0	True				
ANR	1702114	RelationalExpression	ni ++ < name_cnt		1701977	0		<			
ANR	1702115	PostIncDecOperationExpression	ni ++		1701977	0					
ANR	1702116	Identifier	ni		1701977	0					
ANR	1702117	IncDec	++		1701977	1					
ANR	1702118	Identifier	name_cnt		1701977	1					
ANR	1702119	CompoundStatement		19:25:548:548	1701977	1					
ANR	1702120	ExpressionStatement	name_idx = 0xff * ( unsigned char ) name_table [ 0 ] + ( unsigned char ) name_table [ 1 ]	236:2:7417:7494	1701977	0	True				
ANR	1702121	AssignmentExpression	name_idx = 0xff * ( unsigned char ) name_table [ 0 ] + ( unsigned char ) name_table [ 1 ]		1701977	0		=			
ANR	1702122	Identifier	name_idx		1701977	0					
ANR	1702123	AdditiveExpression	0xff * ( unsigned char ) name_table [ 0 ] + ( unsigned char ) name_table [ 1 ]		1701977	1		+			
ANR	1702124	MultiplicativeExpression	0xff * ( unsigned char ) name_table [ 0 ]		1701977	0		*			
ANR	1702125	PrimaryExpression	0xff		1701977	0					
ANR	1702126	CastExpression	( unsigned char ) name_table [ 0 ]		1701977	1					
ANR	1702127	CastTarget	unsigned char		1701977	0					
ANR	1702128	ArrayIndexing	name_table [ 0 ]		1701977	1					
ANR	1702129	Identifier	name_table		1701977	0					
ANR	1702130	PrimaryExpression	0		1701977	1					
ANR	1702131	CastExpression	( unsigned char ) name_table [ 1 ]		1701977	1					
ANR	1702132	CastTarget	unsigned char		1701977	0					
ANR	1702133	ArrayIndexing	name_table [ 1 ]		1701977	1					
ANR	1702134	Identifier	name_table		1701977	0					
ANR	1702135	PrimaryExpression	1		1701977	1					
ANR	1702136	ExpressionStatement	subpat_names [ name_idx ] = name_table + 2	237:2:7498:7537	1701977	1	True				
ANR	1702137	AssignmentExpression	subpat_names [ name_idx ] = name_table + 2		1701977	0		=			
ANR	1702138	ArrayIndexing	subpat_names [ name_idx ]		1701977	0					
ANR	1702139	Identifier	subpat_names		1701977	0					
ANR	1702140	Identifier	name_idx		1701977	1					
ANR	1702141	AdditiveExpression	name_table + 2		1701977	1		+			
ANR	1702142	Identifier	name_table		1701977	0					
ANR	1702143	PrimaryExpression	2		1701977	1					
ANR	1702144	IfStatement	"if ( is_numeric_string ( subpat_names [ name_idx ] , strlen ( subpat_names [ name_idx ] ) , NULL , NULL , 0 ) > 0 )"		1701977	2					
ANR	1702145	Condition	"is_numeric_string ( subpat_names [ name_idx ] , strlen ( subpat_names [ name_idx ] ) , NULL , NULL , 0 ) > 0"	238:6:7545:7636	1701977	0	True				
ANR	1702146	RelationalExpression	"is_numeric_string ( subpat_names [ name_idx ] , strlen ( subpat_names [ name_idx ] ) , NULL , NULL , 0 ) > 0"		1701977	0		>			
ANR	1702147	CallExpression	"is_numeric_string ( subpat_names [ name_idx ] , strlen ( subpat_names [ name_idx ] ) , NULL , NULL , 0 )"		1701977	0					
ANR	1702148	Callee	is_numeric_string		1701977	0					
ANR	1702149	Identifier	is_numeric_string		1701977	0					
ANR	1702150	ArgumentList	subpat_names [ name_idx ]		1701977	1					
ANR	1702151	Argument	subpat_names [ name_idx ]		1701977	0					
ANR	1702152	ArrayIndexing	subpat_names [ name_idx ]		1701977	0					
ANR	1702153	Identifier	subpat_names		1701977	0					
ANR	1702154	Identifier	name_idx		1701977	1					
ANR	1702155	Argument	strlen ( subpat_names [ name_idx ] )		1701977	1					
ANR	1702156	CallExpression	strlen ( subpat_names [ name_idx ] )		1701977	0					
ANR	1702157	Callee	strlen		1701977	0					
ANR	1702158	Identifier	strlen		1701977	0					
ANR	1702159	ArgumentList	subpat_names [ name_idx ]		1701977	1					
ANR	1702160	Argument	subpat_names [ name_idx ]		1701977	0					
ANR	1702161	ArrayIndexing	subpat_names [ name_idx ]		1701977	0					
ANR	1702162	Identifier	subpat_names		1701977	0					
ANR	1702163	Identifier	name_idx		1701977	1					
ANR	1702164	Argument	NULL		1701977	2					
ANR	1702165	Identifier	NULL		1701977	0					
ANR	1702166	Argument	NULL		1701977	3					
ANR	1702167	Identifier	NULL		1701977	0					
ANR	1702168	Argument	0		1701977	4					
ANR	1702169	PrimaryExpression	0		1701977	0					
ANR	1702170	PrimaryExpression	0		1701977	1					
ANR	1702171	CompoundStatement		22:100:774:774	1701977	1					
ANR	1702172	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Numeric named subpatterns are not allowed"" )"	239:3:7644:7722	1701977	0	True				
ANR	1702173	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Numeric named subpatterns are not allowed"" )"		1701977	0					
ANR	1702174	Callee	php_error_docref		1701977	0					
ANR	1702175	Identifier	php_error_docref		1701977	0					
ANR	1702176	ArgumentList	NULL		1701977	1					
ANR	1702177	Argument	NULL		1701977	0					
ANR	1702178	Identifier	NULL		1701977	0					
ANR	1702179	Argument	E_WARNING		1701977	1					
ANR	1702180	Identifier	E_WARNING		1701977	0					
ANR	1702181	Argument	"""Numeric named subpatterns are not allowed"""		1701977	2					
ANR	1702182	PrimaryExpression	"""Numeric named subpatterns are not allowed"""		1701977	0					
ANR	1702183	ExpressionStatement	efree ( subpat_names )	240:3:7727:7746	1701977	1	True				
ANR	1702184	CallExpression	efree ( subpat_names )		1701977	0					
ANR	1702185	Callee	efree		1701977	0					
ANR	1702186	Identifier	efree		1701977	0					
ANR	1702187	ArgumentList	subpat_names		1701977	1					
ANR	1702188	Argument	subpat_names		1701977	0					
ANR	1702189	Identifier	subpat_names		1701977	0					
ANR	1702190	ReturnStatement	return NULL ;	241:3:7751:7762	1701977	2	True				
ANR	1702191	Identifier	NULL		1701977	0					
ANR	1702192	ExpressionStatement	name_table += name_size	243:2:7770:7793	1701977	3	True				
ANR	1702193	AssignmentExpression	name_table += name_size		1701977	0		+=			
ANR	1702194	Identifier	name_table		1701977	0					
ANR	1702195	Identifier	name_size		1701977	1					
ANR	1702196	ReturnStatement	return subpat_names ;	245:1:7799:7818	1701977	13	True				
ANR	1702197	Identifier	subpat_names		1701977	0					
ANR	1702198	ReturnType	static char * *		1701977	1					
ANR	1702199	Identifier	make_subpats_table		1701977	2					
ANR	1702200	ParameterList	"int num_subpats , pcre_cache_entry * pce"		1701977	3					
ANR	1702201	Parameter	int num_subpats	216:33:6824:6838	1701977	0	True				
ANR	1702202	ParameterType	int		1701977	0					
ANR	1702203	Identifier	num_subpats		1701977	1					
ANR	1702204	Parameter	pcre_cache_entry * pce	216:50:6841:6861	1701977	1	True				
ANR	1702205	ParameterType	pcre_cache_entry *		1701977	0					
ANR	1702206	Identifier	pce		1701977	1					
ANR	1702207	CFGEntryNode	ENTRY		1701977		True				
ANR	1702208	CFGExitNode	EXIT		1701977		True				
ANR	1702209	Symbol	num_subpats		1701977						
ANR	1702210	Symbol	pce -> name_count		1701977						
ANR	1702211	Symbol	* subpat_names		1701977						
ANR	1702212	Symbol	name_table		1701977						
ANR	1702213	Symbol	pce -> extra		1701977						
ANR	1702214	Symbol	& name_table		1701977						
ANR	1702215	Symbol	* name_table		1701977						
ANR	1702216	Symbol	name_cnt		1701977						
ANR	1702217	Symbol	PCRE_INFO_NAMETABLE		1701977						
ANR	1702218	Symbol	& name_size		1701977						
ANR	1702219	Symbol	E_WARNING		1701977						
ANR	1702220	Symbol	strlen		1701977						
ANR	1702221	Symbol	pce		1701977						
ANR	1702222	Symbol	extra		1701977						
ANR	1702223	Symbol	PCRE_INFO_NAMEENTRYSIZE		1701977						
ANR	1702224	Symbol	ecalloc		1701977						
ANR	1702225	Symbol	rc2		1701977						
ANR	1702226	Symbol	rc1		1701977						
ANR	1702227	Symbol	NULL		1701977						
ANR	1702228	Symbol	* name_idx		1701977						
ANR	1702229	Symbol	pcre_fullinfo		1701977						
ANR	1702230	Symbol	rc		1701977						
ANR	1702231	Symbol	subpat_names		1701977						
ANR	1702232	Symbol	name_idx		1701977						
ANR	1702233	Symbol	is_numeric_string		1701977						
ANR	1702234	Symbol	pce -> re		1701977						
ANR	1702235	Symbol	ni		1701977						
ANR	1702236	Symbol	* pce		1701977						
ANR	1702237	Symbol	name_size		1701977						
ANR	1702238	Function	calculate_unit_length	251:0:7963:8272							
ANR	1702239	FunctionDef	"calculate_unit_length (pcre_cache_entry * pce , char * start)"		1702238	0					
ANR	1702240	CompoundStatement		252:0:8051:8272	1702238	0					
ANR	1702241	IdentifierDeclStatement	int unit_len ;	253:1:8054:8066	1702238	0	True				
ANR	1702242	IdentifierDecl	unit_len		1702238	0					
ANR	1702243	IdentifierDeclType	int		1702238	0					
ANR	1702244	Identifier	unit_len		1702238	1					
ANR	1702245	IfStatement	if ( pce -> compile_options & PCRE_UTF8 )		1702238	1					
ANR	1702246	Condition	pce -> compile_options & PCRE_UTF8	255:5:8074:8105	1702238	0	True				
ANR	1702247	BitAndExpression	pce -> compile_options & PCRE_UTF8		1702238	0		&			
ANR	1702248	PtrMemberAccess	pce -> compile_options		1702238	0					
ANR	1702249	Identifier	pce		1702238	0					
ANR	1702250	Identifier	compile_options		1702238	1					
ANR	1702251	Identifier	PCRE_UTF8		1702238	1					
ANR	1702252	CompoundStatement		5:2:60:77	1702238	1					
ANR	1702253	IdentifierDeclStatement	char * end = start ;	256:2:8112:8129	1702238	0	True				
ANR	1702254	IdentifierDecl	* end = start		1702238	0					
ANR	1702255	IdentifierDeclType	char *		1702238	0					
ANR	1702256	Identifier	end		1702238	1					
ANR	1702257	AssignmentExpression	* end = start		1702238	2		=			
ANR	1702258	Identifier	start		1702238	0					
ANR	1702259	Identifier	start		1702238	1					
ANR	1702260	WhileStatement	while ( ( * ++ end & 0xC0 ) == 0x80 )		1702238	1					
ANR	1702261	Condition	( * ++ end & 0xC0 ) == 0x80	259:9:8173:8195	1702238	0	True				
ANR	1702262	EqualityExpression	( * ++ end & 0xC0 ) == 0x80		1702238	0		==			
ANR	1702263	BitAndExpression	* ++ end & 0xC0		1702238	0		&			
ANR	1702264	UnaryOperationExpression	* ++ end		1702238	0					
ANR	1702265	UnaryOperator	*		1702238	0					
ANR	1702266	UnaryExpression	++ end		1702238	1					
ANR	1702267	IncDec	++		1702238	0					
ANR	1702268	Identifier	end		1702238	1					
ANR	1702269	PrimaryExpression	0xC0		1702238	1					
ANR	1702270	PrimaryExpression	0x80		1702238	1					
ANR	1702271	ExpressionStatement		259:33:8197:8197	1702238	1	True				
ANR	1702272	ExpressionStatement	unit_len = end - start	260:2:8201:8223	1702238	2	True				
ANR	1702273	AssignmentExpression	unit_len = end - start		1702238	0		=			
ANR	1702274	Identifier	unit_len		1702238	0					
ANR	1702275	AdditiveExpression	end - start		1702238	1		-			
ANR	1702276	Identifier	end		1702238	0					
ANR	1702277	Identifier	start		1702238	1					
ANR	1702278	ElseStatement	else		1702238	0					
ANR	1702279	CompoundStatement		10:8:181:181	1702238	0					
ANR	1702280	ExpressionStatement	unit_len = 1	262:2:8237:8249	1702238	0	True				
ANR	1702281	AssignmentExpression	unit_len = 1		1702238	0		=			
ANR	1702282	Identifier	unit_len		1702238	0					
ANR	1702283	PrimaryExpression	1		1702238	1					
ANR	1702284	ReturnStatement	return unit_len ;	264:1:8255:8270	1702238	2	True				
ANR	1702285	Identifier	unit_len		1702238	0					
ANR	1702286	ReturnType	static zend_always_inline int		1702238	1					
ANR	1702287	Identifier	calculate_unit_length		1702238	2					
ANR	1702288	ParameterList	"pcre_cache_entry * pce , char * start"		1702238	3					
ANR	1702289	Parameter	pcre_cache_entry * pce	251:52:8015:8035	1702238	0	True				
ANR	1702290	ParameterType	pcre_cache_entry *		1702238	0					
ANR	1702291	Identifier	pce		1702238	1					
ANR	1702292	Parameter	char * start	251:75:8038:8048	1702238	1	True				
ANR	1702293	ParameterType	char *		1702238	0					
ANR	1702294	Identifier	start		1702238	1					
ANR	1702295	CFGEntryNode	ENTRY		1702238		True				
ANR	1702296	CFGExitNode	EXIT		1702238		True				
ANR	1702297	Symbol	pce		1702238						
ANR	1702298	Symbol	* ++ end		1702238						
ANR	1702299	Symbol	start		1702238						
ANR	1702300	Symbol	unit_len		1702238						
ANR	1702301	Symbol	pce -> compile_options		1702238						
ANR	1702302	Symbol	end		1702238						
ANR	1702303	Symbol	* end		1702238						
ANR	1702304	Symbol	PCRE_UTF8		1702238						
ANR	1702305	Symbol	* pce		1702238						
ANR	1702306	Function	pcre_get_compiled_regex_cache	270:0:8326:16253							
ANR	1702307	FunctionDef	pcre_get_compiled_regex_cache (zend_string * regex)		1702306	0					
ANR	1702308	CompoundStatement		271:0:8401:16253	1702306	0					
ANR	1702309	IdentifierDeclStatement	pcre * re = NULL ;	272:1:8404:8422	1702306	0	True				
ANR	1702310	IdentifierDecl	* re = NULL		1702306	0					
ANR	1702311	IdentifierDeclType	pcre *		1702306	0					
ANR	1702312	Identifier	re		1702306	1					
ANR	1702313	AssignmentExpression	* re = NULL		1702306	2		=			
ANR	1702314	Identifier	NULL		1702306	0					
ANR	1702315	Identifier	NULL		1702306	1					
ANR	1702316	IdentifierDeclStatement	pcre_extra * extra ;	273:1:8425:8444	1702306	1	True				
ANR	1702317	IdentifierDecl	* extra		1702306	0					
ANR	1702318	IdentifierDeclType	pcre_extra *		1702306	0					
ANR	1702319	Identifier	extra		1702306	1					
ANR	1702320	IdentifierDeclStatement	int coptions = 0 ;	274:1:8447:8468	1702306	2	True				
ANR	1702321	IdentifierDecl	coptions = 0		1702306	0					
ANR	1702322	IdentifierDeclType	int		1702306	0					
ANR	1702323	Identifier	coptions		1702306	1					
ANR	1702324	AssignmentExpression	coptions = 0		1702306	2		=			
ANR	1702325	Identifier	coptions		1702306	0					
ANR	1702326	PrimaryExpression	0		1702306	1					
ANR	1702327	IdentifierDeclStatement	int soptions = 0 ;	275:1:8471:8492	1702306	3	True				
ANR	1702328	IdentifierDecl	soptions = 0		1702306	0					
ANR	1702329	IdentifierDeclType	int		1702306	0					
ANR	1702330	Identifier	soptions		1702306	1					
ANR	1702331	AssignmentExpression	soptions = 0		1702306	2		=			
ANR	1702332	Identifier	soptions		1702306	0					
ANR	1702333	PrimaryExpression	0		1702306	1					
ANR	1702334	IdentifierDeclStatement	const char * error ;	276:1:8495:8514	1702306	4	True				
ANR	1702335	IdentifierDecl	* error		1702306	0					
ANR	1702336	IdentifierDeclType	const char *		1702306	0					
ANR	1702337	Identifier	error		1702306	1					
ANR	1702338	IdentifierDeclStatement	int erroffset ;	277:1:8517:8535	1702306	5	True				
ANR	1702339	IdentifierDecl	erroffset		1702306	0					
ANR	1702340	IdentifierDeclType	int		1702306	0					
ANR	1702341	Identifier	erroffset		1702306	1					
ANR	1702342	IdentifierDeclStatement	char delimiter ;	278:1:8538:8556	1702306	6	True				
ANR	1702343	IdentifierDecl	delimiter		1702306	0					
ANR	1702344	IdentifierDeclType	char		1702306	0					
ANR	1702345	Identifier	delimiter		1702306	1					
ANR	1702346	IdentifierDeclStatement	char start_delimiter ;	279:1:8559:8583	1702306	7	True				
ANR	1702347	IdentifierDecl	start_delimiter		1702306	0					
ANR	1702348	IdentifierDeclType	char		1702306	0					
ANR	1702349	Identifier	start_delimiter		1702306	1					
ANR	1702350	IdentifierDeclStatement	char end_delimiter ;	280:1:8586:8608	1702306	8	True				
ANR	1702351	IdentifierDecl	end_delimiter		1702306	0					
ANR	1702352	IdentifierDeclType	char		1702306	0					
ANR	1702353	Identifier	end_delimiter		1702306	1					
ANR	1702354	IdentifierDeclStatement	"char * p , * pp ;"	281:1:8611:8626	1702306	9	True				
ANR	1702355	IdentifierDecl	* p		1702306	0					
ANR	1702356	IdentifierDeclType	char *		1702306	0					
ANR	1702357	Identifier	p		1702306	1					
ANR	1702358	IdentifierDecl	* pp		1702306	1					
ANR	1702359	IdentifierDeclType	char *		1702306	0					
ANR	1702360	Identifier	pp		1702306	1					
ANR	1702361	IdentifierDeclStatement	char * pattern ;	282:1:8629:8645	1702306	10	True				
ANR	1702362	IdentifierDecl	* pattern		1702306	0					
ANR	1702363	IdentifierDeclType	char *		1702306	0					
ANR	1702364	Identifier	pattern		1702306	1					
ANR	1702365	IdentifierDeclStatement	int do_study = 0 ;	283:1:8648:8669	1702306	11	True				
ANR	1702366	IdentifierDecl	do_study = 0		1702306	0					
ANR	1702367	IdentifierDeclType	int		1702306	0					
ANR	1702368	Identifier	do_study		1702306	1					
ANR	1702369	AssignmentExpression	do_study = 0		1702306	2		=			
ANR	1702370	Identifier	do_study		1702306	0					
ANR	1702371	PrimaryExpression	0		1702306	1					
ANR	1702372	IdentifierDeclStatement	int poptions = 0 ;	284:1:8672:8693	1702306	12	True				
ANR	1702373	IdentifierDecl	poptions = 0		1702306	0					
ANR	1702374	IdentifierDeclType	int		1702306	0					
ANR	1702375	Identifier	poptions		1702306	1					
ANR	1702376	AssignmentExpression	poptions = 0		1702306	2		=			
ANR	1702377	Identifier	poptions		1702306	0					
ANR	1702378	PrimaryExpression	0		1702306	1					
ANR	1702379	Statement	unsigned	285:1:8696:8703	1702306	13	True				
ANR	1702380	IdentifierDeclStatement	const char * tables = NULL ;	285:10:8705:8730	1702306	14	True				
ANR	1702381	IdentifierDecl	* tables = NULL		1702306	0					
ANR	1702382	IdentifierDeclType	const char *		1702306	0					
ANR	1702383	Identifier	tables		1702306	1					
ANR	1702384	AssignmentExpression	* tables = NULL		1702306	2		=			
ANR	1702385	Identifier	NULL		1702306	0					
ANR	1702386	Identifier	NULL		1702306	1					
ANR	1702387	IdentifierDeclStatement	pcre_cache_entry * pce ;	286:1:8733:8754	1702306	15	True				
ANR	1702388	IdentifierDecl	* pce		1702306	0					
ANR	1702389	IdentifierDeclType	pcre_cache_entry *		1702306	0					
ANR	1702390	Identifier	pce		1702306	1					
ANR	1702391	IdentifierDeclStatement	pcre_cache_entry new_entry ;	287:1:8757:8784	1702306	16	True				
ANR	1702392	IdentifierDecl	new_entry		1702306	0					
ANR	1702393	IdentifierDeclType	pcre_cache_entry		1702306	0					
ANR	1702394	Identifier	new_entry		1702306	1					
ANR	1702395	IdentifierDeclStatement	int rc ;	288:1:8787:8798	1702306	17	True				
ANR	1702396	IdentifierDecl	rc		1702306	0					
ANR	1702397	IdentifierDeclType	int		1702306	0					
ANR	1702398	Identifier	rc		1702306	1					
ANR	1702399	ExpressionStatement	"pce = zend_hash_find_ptr ( & PCRE_G ( pcre_cache ) , regex )"	292:1:8939:8991	1702306	18	True				
ANR	1702400	AssignmentExpression	"pce = zend_hash_find_ptr ( & PCRE_G ( pcre_cache ) , regex )"		1702306	0		=			
ANR	1702401	Identifier	pce		1702306	0					
ANR	1702402	CallExpression	"zend_hash_find_ptr ( & PCRE_G ( pcre_cache ) , regex )"		1702306	1					
ANR	1702403	Callee	zend_hash_find_ptr		1702306	0					
ANR	1702404	Identifier	zend_hash_find_ptr		1702306	0					
ANR	1702405	ArgumentList	& PCRE_G ( pcre_cache )		1702306	1					
ANR	1702406	Argument	& PCRE_G ( pcre_cache )		1702306	0					
ANR	1702407	UnaryOperationExpression	& PCRE_G ( pcre_cache )		1702306	0					
ANR	1702408	UnaryOperator	&		1702306	0					
ANR	1702409	CallExpression	PCRE_G ( pcre_cache )		1702306	1					
ANR	1702410	Callee	PCRE_G		1702306	0					
ANR	1702411	Identifier	PCRE_G		1702306	0					
ANR	1702412	ArgumentList	pcre_cache		1702306	1					
ANR	1702413	Argument	pcre_cache		1702306	0					
ANR	1702414	Identifier	pcre_cache		1702306	0					
ANR	1702415	Argument	regex		1702306	1					
ANR	1702416	Identifier	regex		1702306	0					
ANR	1702417	IfStatement	if ( pce )		1702306	19					
ANR	1702418	Condition	pce	293:5:8998:9000	1702306	0	True				
ANR	1702419	Identifier	pce		1702306	0					
ANR	1702420	CompoundStatement		23:10:601:601	1702306	1					
ANR	1702421	IfStatement	"if ( pce -> locale == BG ( locale_string ) || ( pce -> locale && BG ( locale_string ) && ZSTR_LEN ( pce -> locale ) == ZSTR_LEN ( BG ( locale_string ) ) && ! memcmp ( ZSTR_VAL ( pce -> locale ) , ZSTR_VAL ( BG ( locale_string ) ) , ZSTR_LEN ( pce -> locale ) ) ) || ( ! pce -> locale && ZSTR_LEN ( BG ( locale_string ) ) == 1 && ZSTR_VAL ( BG ( locale_string ) ) [ 0 ] == 'C' ) || ( ! BG ( locale_string ) && ZSTR_LEN ( pce -> locale ) == 1 && ZSTR_VAL ( pce -> locale ) [ 0 ] == 'C' ) )"		1702306	0					
ANR	1702422	Condition	"pce -> locale == BG ( locale_string ) || ( pce -> locale && BG ( locale_string ) && ZSTR_LEN ( pce -> locale ) == ZSTR_LEN ( BG ( locale_string ) ) && ! memcmp ( ZSTR_VAL ( pce -> locale ) , ZSTR_VAL ( BG ( locale_string ) ) , ZSTR_LEN ( pce -> locale ) ) ) || ( ! pce -> locale && ZSTR_LEN ( BG ( locale_string ) ) == 1 && ZSTR_VAL ( BG ( locale_string ) ) [ 0 ] == 'C' ) || ( ! BG ( locale_string ) && ZSTR_LEN ( pce -> locale ) == 1 && ZSTR_VAL ( pce -> locale ) [ 0 ] == 'C' )"	295:6:9030:9485	1702306	0	True				
ANR	1702423	OrExpression	"pce -> locale == BG ( locale_string ) || ( pce -> locale && BG ( locale_string ) && ZSTR_LEN ( pce -> locale ) == ZSTR_LEN ( BG ( locale_string ) ) && ! memcmp ( ZSTR_VAL ( pce -> locale ) , ZSTR_VAL ( BG ( locale_string ) ) , ZSTR_LEN ( pce -> locale ) ) ) || ( ! pce -> locale && ZSTR_LEN ( BG ( locale_string ) ) == 1 && ZSTR_VAL ( BG ( locale_string ) ) [ 0 ] == 'C' ) || ( ! BG ( locale_string ) && ZSTR_LEN ( pce -> locale ) == 1 && ZSTR_VAL ( pce -> locale ) [ 0 ] == 'C' )"		1702306	0		||			
ANR	1702424	EqualityExpression	pce -> locale == BG ( locale_string )		1702306	0		==			
ANR	1702425	PtrMemberAccess	pce -> locale		1702306	0					
ANR	1702426	Identifier	pce		1702306	0					
ANR	1702427	Identifier	locale		1702306	1					
ANR	1702428	CallExpression	BG ( locale_string )		1702306	1					
ANR	1702429	Callee	BG		1702306	0					
ANR	1702430	Identifier	BG		1702306	0					
ANR	1702431	ArgumentList	locale_string		1702306	1					
ANR	1702432	Argument	locale_string		1702306	0					
ANR	1702433	Identifier	locale_string		1702306	0					
ANR	1702434	OrExpression	"( pce -> locale && BG ( locale_string ) && ZSTR_LEN ( pce -> locale ) == ZSTR_LEN ( BG ( locale_string ) ) && ! memcmp ( ZSTR_VAL ( pce -> locale ) , ZSTR_VAL ( BG ( locale_string ) ) , ZSTR_LEN ( pce -> locale ) ) ) || ( ! pce -> locale && ZSTR_LEN ( BG ( locale_string ) ) == 1 && ZSTR_VAL ( BG ( locale_string ) ) [ 0 ] == 'C' ) || ( ! BG ( locale_string ) && ZSTR_LEN ( pce -> locale ) == 1 && ZSTR_VAL ( pce -> locale ) [ 0 ] == 'C' )"		1702306	1		||			
ANR	1702435	AndExpression	"pce -> locale && BG ( locale_string ) && ZSTR_LEN ( pce -> locale ) == ZSTR_LEN ( BG ( locale_string ) ) && ! memcmp ( ZSTR_VAL ( pce -> locale ) , ZSTR_VAL ( BG ( locale_string ) ) , ZSTR_LEN ( pce -> locale ) )"		1702306	0		&&			
ANR	1702436	PtrMemberAccess	pce -> locale		1702306	0					
ANR	1702437	Identifier	pce		1702306	0					
ANR	1702438	Identifier	locale		1702306	1					
ANR	1702439	AndExpression	"BG ( locale_string ) && ZSTR_LEN ( pce -> locale ) == ZSTR_LEN ( BG ( locale_string ) ) && ! memcmp ( ZSTR_VAL ( pce -> locale ) , ZSTR_VAL ( BG ( locale_string ) ) , ZSTR_LEN ( pce -> locale ) )"		1702306	1		&&			
ANR	1702440	CallExpression	BG ( locale_string )		1702306	0					
ANR	1702441	Callee	BG		1702306	0					
ANR	1702442	Identifier	BG		1702306	0					
ANR	1702443	ArgumentList	locale_string		1702306	1					
ANR	1702444	Argument	locale_string		1702306	0					
ANR	1702445	Identifier	locale_string		1702306	0					
ANR	1702446	AndExpression	"ZSTR_LEN ( pce -> locale ) == ZSTR_LEN ( BG ( locale_string ) ) && ! memcmp ( ZSTR_VAL ( pce -> locale ) , ZSTR_VAL ( BG ( locale_string ) ) , ZSTR_LEN ( pce -> locale ) )"		1702306	1		&&			
ANR	1702447	EqualityExpression	ZSTR_LEN ( pce -> locale ) == ZSTR_LEN ( BG ( locale_string ) )		1702306	0		==			
ANR	1702448	CallExpression	ZSTR_LEN ( pce -> locale )		1702306	0					
ANR	1702449	Callee	ZSTR_LEN		1702306	0					
ANR	1702450	Identifier	ZSTR_LEN		1702306	0					
ANR	1702451	ArgumentList	pce -> locale		1702306	1					
ANR	1702452	Argument	pce -> locale		1702306	0					
ANR	1702453	PtrMemberAccess	pce -> locale		1702306	0					
ANR	1702454	Identifier	pce		1702306	0					
ANR	1702455	Identifier	locale		1702306	1					
ANR	1702456	CallExpression	ZSTR_LEN ( BG ( locale_string ) )		1702306	1					
ANR	1702457	Callee	ZSTR_LEN		1702306	0					
ANR	1702458	Identifier	ZSTR_LEN		1702306	0					
ANR	1702459	ArgumentList	BG ( locale_string )		1702306	1					
ANR	1702460	Argument	BG ( locale_string )		1702306	0					
ANR	1702461	CallExpression	BG ( locale_string )		1702306	0					
ANR	1702462	Callee	BG		1702306	0					
ANR	1702463	Identifier	BG		1702306	0					
ANR	1702464	ArgumentList	locale_string		1702306	1					
ANR	1702465	Argument	locale_string		1702306	0					
ANR	1702466	Identifier	locale_string		1702306	0					
ANR	1702467	UnaryOperationExpression	"! memcmp ( ZSTR_VAL ( pce -> locale ) , ZSTR_VAL ( BG ( locale_string ) ) , ZSTR_LEN ( pce -> locale ) )"		1702306	1					
ANR	1702468	UnaryOperator	!		1702306	0					
ANR	1702469	CallExpression	"memcmp ( ZSTR_VAL ( pce -> locale ) , ZSTR_VAL ( BG ( locale_string ) ) , ZSTR_LEN ( pce -> locale ) )"		1702306	1					
ANR	1702470	Callee	memcmp		1702306	0					
ANR	1702471	Identifier	memcmp		1702306	0					
ANR	1702472	ArgumentList	ZSTR_VAL ( pce -> locale )		1702306	1					
ANR	1702473	Argument	ZSTR_VAL ( pce -> locale )		1702306	0					
ANR	1702474	CallExpression	ZSTR_VAL ( pce -> locale )		1702306	0					
ANR	1702475	Callee	ZSTR_VAL		1702306	0					
ANR	1702476	Identifier	ZSTR_VAL		1702306	0					
ANR	1702477	ArgumentList	pce -> locale		1702306	1					
ANR	1702478	Argument	pce -> locale		1702306	0					
ANR	1702479	PtrMemberAccess	pce -> locale		1702306	0					
ANR	1702480	Identifier	pce		1702306	0					
ANR	1702481	Identifier	locale		1702306	1					
ANR	1702482	Argument	ZSTR_VAL ( BG ( locale_string ) )		1702306	1					
ANR	1702483	CallExpression	ZSTR_VAL ( BG ( locale_string ) )		1702306	0					
ANR	1702484	Callee	ZSTR_VAL		1702306	0					
ANR	1702485	Identifier	ZSTR_VAL		1702306	0					
ANR	1702486	ArgumentList	BG ( locale_string )		1702306	1					
ANR	1702487	Argument	BG ( locale_string )		1702306	0					
ANR	1702488	CallExpression	BG ( locale_string )		1702306	0					
ANR	1702489	Callee	BG		1702306	0					
ANR	1702490	Identifier	BG		1702306	0					
ANR	1702491	ArgumentList	locale_string		1702306	1					
ANR	1702492	Argument	locale_string		1702306	0					
ANR	1702493	Identifier	locale_string		1702306	0					
ANR	1702494	Argument	ZSTR_LEN ( pce -> locale )		1702306	2					
ANR	1702495	CallExpression	ZSTR_LEN ( pce -> locale )		1702306	0					
ANR	1702496	Callee	ZSTR_LEN		1702306	0					
ANR	1702497	Identifier	ZSTR_LEN		1702306	0					
ANR	1702498	ArgumentList	pce -> locale		1702306	1					
ANR	1702499	Argument	pce -> locale		1702306	0					
ANR	1702500	PtrMemberAccess	pce -> locale		1702306	0					
ANR	1702501	Identifier	pce		1702306	0					
ANR	1702502	Identifier	locale		1702306	1					
ANR	1702503	OrExpression	( ! pce -> locale && ZSTR_LEN ( BG ( locale_string ) ) == 1 && ZSTR_VAL ( BG ( locale_string ) ) [ 0 ] == 'C' ) || ( ! BG ( locale_string ) && ZSTR_LEN ( pce -> locale ) == 1 && ZSTR_VAL ( pce -> locale ) [ 0 ] == 'C' )		1702306	1		||			
ANR	1702504	AndExpression	! pce -> locale && ZSTR_LEN ( BG ( locale_string ) ) == 1 && ZSTR_VAL ( BG ( locale_string ) ) [ 0 ] == 'C'		1702306	0		&&			
ANR	1702505	UnaryOperationExpression	! pce -> locale		1702306	0					
ANR	1702506	UnaryOperator	!		1702306	0					
ANR	1702507	PtrMemberAccess	pce -> locale		1702306	1					
ANR	1702508	Identifier	pce		1702306	0					
ANR	1702509	Identifier	locale		1702306	1					
ANR	1702510	AndExpression	ZSTR_LEN ( BG ( locale_string ) ) == 1 && ZSTR_VAL ( BG ( locale_string ) ) [ 0 ] == 'C'		1702306	1		&&			
ANR	1702511	EqualityExpression	ZSTR_LEN ( BG ( locale_string ) ) == 1		1702306	0		==			
ANR	1702512	CallExpression	ZSTR_LEN ( BG ( locale_string ) )		1702306	0					
ANR	1702513	Callee	ZSTR_LEN		1702306	0					
ANR	1702514	Identifier	ZSTR_LEN		1702306	0					
ANR	1702515	ArgumentList	BG ( locale_string )		1702306	1					
ANR	1702516	Argument	BG ( locale_string )		1702306	0					
ANR	1702517	CallExpression	BG ( locale_string )		1702306	0					
ANR	1702518	Callee	BG		1702306	0					
ANR	1702519	Identifier	BG		1702306	0					
ANR	1702520	ArgumentList	locale_string		1702306	1					
ANR	1702521	Argument	locale_string		1702306	0					
ANR	1702522	Identifier	locale_string		1702306	0					
ANR	1702523	PrimaryExpression	1		1702306	1					
ANR	1702524	EqualityExpression	ZSTR_VAL ( BG ( locale_string ) ) [ 0 ] == 'C'		1702306	1		==			
ANR	1702525	ArrayIndexing	ZSTR_VAL ( BG ( locale_string ) ) [ 0 ]		1702306	0					
ANR	1702526	CallExpression	ZSTR_VAL ( BG ( locale_string ) )		1702306	0					
ANR	1702527	Callee	ZSTR_VAL		1702306	0					
ANR	1702528	Identifier	ZSTR_VAL		1702306	0					
ANR	1702529	ArgumentList	BG ( locale_string )		1702306	1					
ANR	1702530	Argument	BG ( locale_string )		1702306	0					
ANR	1702531	CallExpression	BG ( locale_string )		1702306	0					
ANR	1702532	Callee	BG		1702306	0					
ANR	1702533	Identifier	BG		1702306	0					
ANR	1702534	ArgumentList	locale_string		1702306	1					
ANR	1702535	Argument	locale_string		1702306	0					
ANR	1702536	Identifier	locale_string		1702306	0					
ANR	1702537	PrimaryExpression	0		1702306	1					
ANR	1702538	PrimaryExpression	'C'		1702306	1					
ANR	1702539	AndExpression	! BG ( locale_string ) && ZSTR_LEN ( pce -> locale ) == 1 && ZSTR_VAL ( pce -> locale ) [ 0 ] == 'C'		1702306	1		&&			
ANR	1702540	UnaryOperationExpression	! BG ( locale_string )		1702306	0					
ANR	1702541	UnaryOperator	!		1702306	0					
ANR	1702542	CallExpression	BG ( locale_string )		1702306	1					
ANR	1702543	Callee	BG		1702306	0					
ANR	1702544	Identifier	BG		1702306	0					
ANR	1702545	ArgumentList	locale_string		1702306	1					
ANR	1702546	Argument	locale_string		1702306	0					
ANR	1702547	Identifier	locale_string		1702306	0					
ANR	1702548	AndExpression	ZSTR_LEN ( pce -> locale ) == 1 && ZSTR_VAL ( pce -> locale ) [ 0 ] == 'C'		1702306	1		&&			
ANR	1702549	EqualityExpression	ZSTR_LEN ( pce -> locale ) == 1		1702306	0		==			
ANR	1702550	CallExpression	ZSTR_LEN ( pce -> locale )		1702306	0					
ANR	1702551	Callee	ZSTR_LEN		1702306	0					
ANR	1702552	Identifier	ZSTR_LEN		1702306	0					
ANR	1702553	ArgumentList	pce -> locale		1702306	1					
ANR	1702554	Argument	pce -> locale		1702306	0					
ANR	1702555	PtrMemberAccess	pce -> locale		1702306	0					
ANR	1702556	Identifier	pce		1702306	0					
ANR	1702557	Identifier	locale		1702306	1					
ANR	1702558	PrimaryExpression	1		1702306	1					
ANR	1702559	EqualityExpression	ZSTR_VAL ( pce -> locale ) [ 0 ] == 'C'		1702306	1		==			
ANR	1702560	ArrayIndexing	ZSTR_VAL ( pce -> locale ) [ 0 ]		1702306	0					
ANR	1702561	CallExpression	ZSTR_VAL ( pce -> locale )		1702306	0					
ANR	1702562	Callee	ZSTR_VAL		1702306	0					
ANR	1702563	Identifier	ZSTR_VAL		1702306	0					
ANR	1702564	ArgumentList	pce -> locale		1702306	1					
ANR	1702565	Argument	pce -> locale		1702306	0					
ANR	1702566	PtrMemberAccess	pce -> locale		1702306	0					
ANR	1702567	Identifier	pce		1702306	0					
ANR	1702568	Identifier	locale		1702306	1					
ANR	1702569	PrimaryExpression	0		1702306	1					
ANR	1702570	PrimaryExpression	'C'		1702306	1					
ANR	1702571	CompoundStatement		34:41:1086:1086	1702306	1					
ANR	1702572	ReturnStatement	return pce ;	305:3:9493:9503	1702306	0	True				
ANR	1702573	Identifier	pce		1702306	0					
ANR	1702574	ExpressionStatement	p = ZSTR_VAL ( regex )	312:1:9541:9560	1702306	20	True				
ANR	1702575	AssignmentExpression	p = ZSTR_VAL ( regex )		1702306	0		=			
ANR	1702576	Identifier	p		1702306	0					
ANR	1702577	CallExpression	ZSTR_VAL ( regex )		1702306	1					
ANR	1702578	Callee	ZSTR_VAL		1702306	0					
ANR	1702579	Identifier	ZSTR_VAL		1702306	0					
ANR	1702580	ArgumentList	regex		1702306	1					
ANR	1702581	Argument	regex		1702306	0					
ANR	1702582	Identifier	regex		1702306	0					
ANR	1702583	WhileStatement	while ( isspace ( ( int ) * ( unsigned char * ) p ) )		1702306	21					
ANR	1702584	Condition	isspace ( ( int ) * ( unsigned char * ) p )	316:8:9697:9729	1702306	0	True				
ANR	1702585	CallExpression	isspace ( ( int ) * ( unsigned char * ) p )		1702306	0					
ANR	1702586	Callee	isspace		1702306	0					
ANR	1702587	Identifier	isspace		1702306	0					
ANR	1702588	ArgumentList	( int ) * ( unsigned char * ) p		1702306	1					
ANR	1702589	Argument	( int ) * ( unsigned char * ) p		1702306	0					
ANR	1702590	CastExpression	( int ) * ( unsigned char * ) p		1702306	0					
ANR	1702591	CastTarget	int		1702306	0					
ANR	1702592	UnaryOperationExpression	* ( unsigned char * ) p		1702306	1					
ANR	1702593	UnaryOperator	*		1702306	0					
ANR	1702594	CastExpression	( unsigned char * ) p		1702306	1					
ANR	1702595	CastTarget	unsigned char *		1702306	0					
ANR	1702596	Identifier	p		1702306	1					
ANR	1702597	ExpressionStatement	p ++	316:43:9732:9735	1702306	1	True				
ANR	1702598	PostIncDecOperationExpression	p ++		1702306	0					
ANR	1702599	Identifier	p		1702306	0					
ANR	1702600	IncDec	++		1702306	1					
ANR	1702601	IfStatement	if ( * p == 0 )		1702306	22					
ANR	1702602	Condition	* p == 0	317:5:9742:9748	1702306	0	True				
ANR	1702603	EqualityExpression	* p == 0		1702306	0		==			
ANR	1702604	UnaryOperationExpression	* p		1702306	0					
ANR	1702605	UnaryOperator	*		1702306	0					
ANR	1702606	Identifier	p		1702306	1					
ANR	1702607	PrimaryExpression	0		1702306	1					
ANR	1702608	CompoundStatement		47:14:1349:1349	1702306	1					
ANR	1702609	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , p < ZSTR_VAL ( regex ) + ZSTR_LEN ( regex ) ? ""Null byte in regex"" : ""Empty regular expression"" )"	318:2:9755:9886	1702306	0	True				
ANR	1702610	CallExpression	"php_error_docref ( NULL , E_WARNING , p < ZSTR_VAL ( regex ) + ZSTR_LEN ( regex ) ? ""Null byte in regex"" : ""Empty regular expression"" )"		1702306	0					
ANR	1702611	Callee	php_error_docref		1702306	0					
ANR	1702612	Identifier	php_error_docref		1702306	0					
ANR	1702613	ArgumentList	NULL		1702306	1					
ANR	1702614	Argument	NULL		1702306	0					
ANR	1702615	Identifier	NULL		1702306	0					
ANR	1702616	Argument	E_WARNING		1702306	1					
ANR	1702617	Identifier	E_WARNING		1702306	0					
ANR	1702618	Argument	"p < ZSTR_VAL ( regex ) + ZSTR_LEN ( regex ) ? ""Null byte in regex"" : ""Empty regular expression"""		1702306	2					
ANR	1702619	ConditionalExpression	"p < ZSTR_VAL ( regex ) + ZSTR_LEN ( regex ) ? ""Null byte in regex"" : ""Empty regular expression"""		1702306	0					
ANR	1702620	Condition	p < ZSTR_VAL ( regex ) + ZSTR_LEN ( regex )		1702306	0					
ANR	1702621	RelationalExpression	p < ZSTR_VAL ( regex ) + ZSTR_LEN ( regex )		1702306	0		<			
ANR	1702622	Identifier	p		1702306	0					
ANR	1702623	AdditiveExpression	ZSTR_VAL ( regex ) + ZSTR_LEN ( regex )		1702306	1		+			
ANR	1702624	CallExpression	ZSTR_VAL ( regex )		1702306	0					
ANR	1702625	Callee	ZSTR_VAL		1702306	0					
ANR	1702626	Identifier	ZSTR_VAL		1702306	0					
ANR	1702627	ArgumentList	regex		1702306	1					
ANR	1702628	Argument	regex		1702306	0					
ANR	1702629	Identifier	regex		1702306	0					
ANR	1702630	CallExpression	ZSTR_LEN ( regex )		1702306	1					
ANR	1702631	Callee	ZSTR_LEN		1702306	0					
ANR	1702632	Identifier	ZSTR_LEN		1702306	0					
ANR	1702633	ArgumentList	regex		1702306	1					
ANR	1702634	Argument	regex		1702306	0					
ANR	1702635	Identifier	regex		1702306	0					
ANR	1702636	PrimaryExpression	"""Null byte in regex"""		1702306	1					
ANR	1702637	PrimaryExpression	"""Empty regular expression"""		1702306	2					
ANR	1702638	ReturnStatement	return NULL ;	320:2:9890:9901	1702306	1	True				
ANR	1702639	Identifier	NULL		1702306	0					
ANR	1702640	ExpressionStatement	delimiter = * p ++	325:1:9997:10013	1702306	23	True				
ANR	1702641	AssignmentExpression	delimiter = * p ++		1702306	0		=			
ANR	1702642	Identifier	delimiter		1702306	0					
ANR	1702643	UnaryOperationExpression	* p ++		1702306	1					
ANR	1702644	UnaryOperator	*		1702306	0					
ANR	1702645	PostIncDecOperationExpression	p ++		1702306	1					
ANR	1702646	Identifier	p		1702306	0					
ANR	1702647	IncDec	++		1702306	1					
ANR	1702648	IfStatement	if ( isalnum ( ( int ) * ( unsigned char * ) & delimiter ) || delimiter == '\\\\' )		1702306	24					
ANR	1702649	Condition	isalnum ( ( int ) * ( unsigned char * ) & delimiter ) || delimiter == '\\\\'	326:5:10020:10082	1702306	0	True				
ANR	1702650	OrExpression	isalnum ( ( int ) * ( unsigned char * ) & delimiter ) || delimiter == '\\\\'		1702306	0		||			
ANR	1702651	CallExpression	isalnum ( ( int ) * ( unsigned char * ) & delimiter )		1702306	0					
ANR	1702652	Callee	isalnum		1702306	0					
ANR	1702653	Identifier	isalnum		1702306	0					
ANR	1702654	ArgumentList	( int ) * ( unsigned char * ) & delimiter		1702306	1					
ANR	1702655	Argument	( int ) * ( unsigned char * ) & delimiter		1702306	0					
ANR	1702656	CastExpression	( int ) * ( unsigned char * ) & delimiter		1702306	0					
ANR	1702657	CastTarget	int		1702306	0					
ANR	1702658	UnaryOperationExpression	* ( unsigned char * ) & delimiter		1702306	1					
ANR	1702659	UnaryOperator	*		1702306	0					
ANR	1702660	CastExpression	( unsigned char * ) & delimiter		1702306	1					
ANR	1702661	CastTarget	unsigned char *		1702306	0					
ANR	1702662	UnaryOperationExpression	& delimiter		1702306	1					
ANR	1702663	UnaryOperator	&		1702306	0					
ANR	1702664	Identifier	delimiter		1702306	1					
ANR	1702665	EqualityExpression	delimiter == '\\\\'		1702306	1		==			
ANR	1702666	Identifier	delimiter		1702306	0					
ANR	1702667	PrimaryExpression	'\\\\'		1702306	1					
ANR	1702668	CompoundStatement		56:70:1683:1683	1702306	1					
ANR	1702669	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Delimiter must not be alphanumeric or backslash"" )"	327:2:10089:10172	1702306	0	True				
ANR	1702670	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Delimiter must not be alphanumeric or backslash"" )"		1702306	0					
ANR	1702671	Callee	php_error_docref		1702306	0					
ANR	1702672	Identifier	php_error_docref		1702306	0					
ANR	1702673	ArgumentList	NULL		1702306	1					
ANR	1702674	Argument	NULL		1702306	0					
ANR	1702675	Identifier	NULL		1702306	0					
ANR	1702676	Argument	E_WARNING		1702306	1					
ANR	1702677	Identifier	E_WARNING		1702306	0					
ANR	1702678	Argument	"""Delimiter must not be alphanumeric or backslash"""		1702306	2					
ANR	1702679	PrimaryExpression	"""Delimiter must not be alphanumeric or backslash"""		1702306	0					
ANR	1702680	ReturnStatement	return NULL ;	328:2:10176:10187	1702306	1	True				
ANR	1702681	Identifier	NULL		1702306	0					
ANR	1702682	ExpressionStatement	start_delimiter = delimiter	331:1:10194:10221	1702306	25	True				
ANR	1702683	AssignmentExpression	start_delimiter = delimiter		1702306	0		=			
ANR	1702684	Identifier	start_delimiter		1702306	0					
ANR	1702685	Identifier	delimiter		1702306	1					
ANR	1702686	IfStatement	"if ( ( pp = strchr ( ""([{< )]}> )]}>"" , delimiter ) ) )"		1702306	26					
ANR	1702687	Condition	"pp = strchr ( ""([{< )]}> )]}>"" , delimiter )"	332:5:10228:10269	1702306	0	True				
ANR	1702688	AssignmentExpression	"pp = strchr ( ""([{< )]}> )]}>"" , delimiter )"		1702306	0		=			
ANR	1702689	Identifier	pp		1702306	0					
ANR	1702690	CallExpression	"strchr ( ""([{< )]}> )]}>"" , delimiter )"		1702306	1					
ANR	1702691	Callee	strchr		1702306	0					
ANR	1702692	Identifier	strchr		1702306	0					
ANR	1702693	ArgumentList	"""([{< )]}> )]}>"""		1702306	1					
ANR	1702694	Argument	"""([{< )]}> )]}>"""		1702306	0					
ANR	1702695	PrimaryExpression	"""([{< )]}> )]}>"""		1702306	0					
ANR	1702696	Argument	delimiter		1702306	1					
ANR	1702697	Identifier	delimiter		1702306	0					
ANR	1702698	ExpressionStatement	delimiter = pp [ 5 ]	333:2:10274:10291	1702306	1	True				
ANR	1702699	AssignmentExpression	delimiter = pp [ 5 ]		1702306	0		=			
ANR	1702700	Identifier	delimiter		1702306	0					
ANR	1702701	ArrayIndexing	pp [ 5 ]		1702306	1					
ANR	1702702	Identifier	pp		1702306	0					
ANR	1702703	PrimaryExpression	5		1702306	1					
ANR	1702704	ExpressionStatement	end_delimiter = delimiter	334:1:10294:10319	1702306	27	True				
ANR	1702705	AssignmentExpression	end_delimiter = delimiter		1702306	0		=			
ANR	1702706	Identifier	end_delimiter		1702306	0					
ANR	1702707	Identifier	delimiter		1702306	1					
ANR	1702708	ExpressionStatement	pp = p	336:1:10323:10329	1702306	28	True				
ANR	1702709	AssignmentExpression	pp = p		1702306	0		=			
ANR	1702710	Identifier	pp		1702306	0					
ANR	1702711	Identifier	p		1702306	1					
ANR	1702712	IfStatement	if ( start_delimiter == end_delimiter )		1702306	29					
ANR	1702713	Condition	start_delimiter == end_delimiter	338:5:10337:10368	1702306	0	True				
ANR	1702714	EqualityExpression	start_delimiter == end_delimiter		1702306	0		==			
ANR	1702715	Identifier	start_delimiter		1702306	0					
ANR	1702716	Identifier	end_delimiter		1702306	1					
ANR	1702717	CompoundStatement		68:39:1969:1969	1702306	1					
ANR	1702718	WhileStatement	while ( * pp != 0 )		1702306	0					
ANR	1702719	Condition	* pp != 0	342:9:10575:10582	1702306	0	True				
ANR	1702720	EqualityExpression	* pp != 0		1702306	0		!=			
ANR	1702721	UnaryOperationExpression	* pp		1702306	0					
ANR	1702722	UnaryOperator	*		1702306	0					
ANR	1702723	Identifier	pp		1702306	1					
ANR	1702724	PrimaryExpression	0		1702306	1					
ANR	1702725	CompoundStatement		72:19:2183:2183	1702306	1					
ANR	1702726	IfStatement	if ( * pp == '\\\\' && pp [ 1 ] != 0 )		1702306	0					
ANR	1702727	Condition	* pp == '\\\\' && pp [ 1 ] != 0	343:7:10594:10618	1702306	0	True				
ANR	1702728	AndExpression	* pp == '\\\\' && pp [ 1 ] != 0		1702306	0		&&			
ANR	1702729	EqualityExpression	* pp == '\\\\'		1702306	0		==			
ANR	1702730	UnaryOperationExpression	* pp		1702306	0					
ANR	1702731	UnaryOperator	*		1702306	0					
ANR	1702732	Identifier	pp		1702306	1					
ANR	1702733	PrimaryExpression	'\\\\'		1702306	1					
ANR	1702734	EqualityExpression	pp [ 1 ] != 0		1702306	1		!=			
ANR	1702735	ArrayIndexing	pp [ 1 ]		1702306	0					
ANR	1702736	Identifier	pp		1702306	0					
ANR	1702737	PrimaryExpression	1		1702306	1					
ANR	1702738	PrimaryExpression	0		1702306	1					
ANR	1702739	ExpressionStatement	pp ++	343:34:10621:10625	1702306	1	True				
ANR	1702740	PostIncDecOperationExpression	pp ++		1702306	0					
ANR	1702741	Identifier	pp		1702306	0					
ANR	1702742	IncDec	++		1702306	1					
ANR	1702743	ElseStatement	else		1702306	0					
ANR	1702744	IfStatement	if ( * pp == delimiter )		1702306	0					
ANR	1702745	Condition	* pp == delimiter	344:12:10639:10654	1702306	0	True				
ANR	1702746	EqualityExpression	* pp == delimiter		1702306	0		==			
ANR	1702747	UnaryOperationExpression	* pp		1702306	0					
ANR	1702748	UnaryOperator	*		1702306	0					
ANR	1702749	Identifier	pp		1702306	1					
ANR	1702750	Identifier	delimiter		1702306	1					
ANR	1702751	BreakStatement	break ;	345:4:10661:10666	1702306	1	True				
ANR	1702752	ExpressionStatement	pp ++	346:3:10671:10675	1702306	1	True				
ANR	1702753	PostIncDecOperationExpression	pp ++		1702306	0					
ANR	1702754	Identifier	pp		1702306	0					
ANR	1702755	IncDec	++		1702306	1					
ANR	1702756	ElseStatement	else		1702306	0					
ANR	1702757	CompoundStatement		84:2:2585:2601	1702306	0					
ANR	1702758	IdentifierDeclStatement	int brackets = 1 ;	354:2:10987:11003	1702306	0	True				
ANR	1702759	IdentifierDecl	brackets = 1		1702306	0					
ANR	1702760	IdentifierDeclType	int		1702306	0					
ANR	1702761	Identifier	brackets		1702306	1					
ANR	1702762	AssignmentExpression	brackets = 1		1702306	2		=			
ANR	1702763	Identifier	brackets		1702306	0					
ANR	1702764	PrimaryExpression	1		1702306	1					
ANR	1702765	WhileStatement	while ( * pp != 0 )		1702306	1					
ANR	1702766	Condition	* pp != 0	355:9:11044:11051	1702306	0	True				
ANR	1702767	EqualityExpression	* pp != 0		1702306	0		!=			
ANR	1702768	UnaryOperationExpression	* pp		1702306	0					
ANR	1702769	UnaryOperator	*		1702306	0					
ANR	1702770	Identifier	pp		1702306	1					
ANR	1702771	PrimaryExpression	0		1702306	1					
ANR	1702772	CompoundStatement		85:19:2652:2652	1702306	1					
ANR	1702773	IfStatement	if ( * pp == '\\\\' && pp [ 1 ] != 0 )		1702306	0					
ANR	1702774	Condition	* pp == '\\\\' && pp [ 1 ] != 0	356:7:11063:11087	1702306	0	True				
ANR	1702775	AndExpression	* pp == '\\\\' && pp [ 1 ] != 0		1702306	0		&&			
ANR	1702776	EqualityExpression	* pp == '\\\\'		1702306	0		==			
ANR	1702777	UnaryOperationExpression	* pp		1702306	0					
ANR	1702778	UnaryOperator	*		1702306	0					
ANR	1702779	Identifier	pp		1702306	1					
ANR	1702780	PrimaryExpression	'\\\\'		1702306	1					
ANR	1702781	EqualityExpression	pp [ 1 ] != 0		1702306	1		!=			
ANR	1702782	ArrayIndexing	pp [ 1 ]		1702306	0					
ANR	1702783	Identifier	pp		1702306	0					
ANR	1702784	PrimaryExpression	1		1702306	1					
ANR	1702785	PrimaryExpression	0		1702306	1					
ANR	1702786	ExpressionStatement	pp ++	356:34:11090:11094	1702306	1	True				
ANR	1702787	PostIncDecOperationExpression	pp ++		1702306	0					
ANR	1702788	Identifier	pp		1702306	0					
ANR	1702789	IncDec	++		1702306	1					
ANR	1702790	ElseStatement	else		1702306	0					
ANR	1702791	IfStatement	if ( * pp == end_delimiter && -- brackets <= 0 )		1702306	0					
ANR	1702792	Condition	* pp == end_delimiter && -- brackets <= 0	357:12:11108:11146	1702306	0	True				
ANR	1702793	AndExpression	* pp == end_delimiter && -- brackets <= 0		1702306	0		&&			
ANR	1702794	EqualityExpression	* pp == end_delimiter		1702306	0		==			
ANR	1702795	UnaryOperationExpression	* pp		1702306	0					
ANR	1702796	UnaryOperator	*		1702306	0					
ANR	1702797	Identifier	pp		1702306	1					
ANR	1702798	Identifier	end_delimiter		1702306	1					
ANR	1702799	RelationalExpression	-- brackets <= 0		1702306	1		<=			
ANR	1702800	UnaryExpression	-- brackets		1702306	0					
ANR	1702801	IncDec	--		1702306	0					
ANR	1702802	Identifier	brackets		1702306	1					
ANR	1702803	PrimaryExpression	0		1702306	1					
ANR	1702804	BreakStatement	break ;	358:4:11153:11158	1702306	1	True				
ANR	1702805	ElseStatement	else		1702306	0					
ANR	1702806	IfStatement	if ( * pp == start_delimiter )		1702306	0					
ANR	1702807	Condition	* pp == start_delimiter	359:12:11172:11193	1702306	0	True				
ANR	1702808	EqualityExpression	* pp == start_delimiter		1702306	0		==			
ANR	1702809	UnaryOperationExpression	* pp		1702306	0					
ANR	1702810	UnaryOperator	*		1702306	0					
ANR	1702811	Identifier	pp		1702306	1					
ANR	1702812	Identifier	start_delimiter		1702306	1					
ANR	1702813	ExpressionStatement	brackets ++	360:4:11200:11210	1702306	1	True				
ANR	1702814	PostIncDecOperationExpression	brackets ++		1702306	0					
ANR	1702815	Identifier	brackets		1702306	0					
ANR	1702816	IncDec	++		1702306	1					
ANR	1702817	ExpressionStatement	pp ++	361:3:11215:11219	1702306	1	True				
ANR	1702818	PostIncDecOperationExpression	pp ++		1702306	0					
ANR	1702819	Identifier	pp		1702306	0					
ANR	1702820	IncDec	++		1702306	1					
ANR	1702821	IfStatement	if ( * pp == 0 )		1702306	30					
ANR	1702822	Condition	* pp == 0	365:5:11234:11241	1702306	0	True				
ANR	1702823	EqualityExpression	* pp == 0		1702306	0		==			
ANR	1702824	UnaryOperationExpression	* pp		1702306	0					
ANR	1702825	UnaryOperator	*		1702306	0					
ANR	1702826	Identifier	pp		1702306	1					
ANR	1702827	PrimaryExpression	0		1702306	1					
ANR	1702828	CompoundStatement		95:15:2842:2842	1702306	1					
ANR	1702829	IfStatement	if ( pp < ZSTR_VAL ( regex ) + ZSTR_LEN ( regex ) )		1702306	0					
ANR	1702830	Condition	pp < ZSTR_VAL ( regex ) + ZSTR_LEN ( regex )	366:6:11252:11289	1702306	0	True				
ANR	1702831	RelationalExpression	pp < ZSTR_VAL ( regex ) + ZSTR_LEN ( regex )		1702306	0		<			
ANR	1702832	Identifier	pp		1702306	0					
ANR	1702833	AdditiveExpression	ZSTR_VAL ( regex ) + ZSTR_LEN ( regex )		1702306	1		+			
ANR	1702834	CallExpression	ZSTR_VAL ( regex )		1702306	0					
ANR	1702835	Callee	ZSTR_VAL		1702306	0					
ANR	1702836	Identifier	ZSTR_VAL		1702306	0					
ANR	1702837	ArgumentList	regex		1702306	1					
ANR	1702838	Argument	regex		1702306	0					
ANR	1702839	Identifier	regex		1702306	0					
ANR	1702840	CallExpression	ZSTR_LEN ( regex )		1702306	1					
ANR	1702841	Callee	ZSTR_LEN		1702306	0					
ANR	1702842	Identifier	ZSTR_LEN		1702306	0					
ANR	1702843	ArgumentList	regex		1702306	1					
ANR	1702844	Argument	regex		1702306	0					
ANR	1702845	Identifier	regex		1702306	0					
ANR	1702846	CompoundStatement		96:46:2890:2890	1702306	1					
ANR	1702847	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Null byte in regex"" )"	367:3:11297:11351	1702306	0	True				
ANR	1702848	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Null byte in regex"" )"		1702306	0					
ANR	1702849	Callee	php_error_docref		1702306	0					
ANR	1702850	Identifier	php_error_docref		1702306	0					
ANR	1702851	ArgumentList	NULL		1702306	1					
ANR	1702852	Argument	NULL		1702306	0					
ANR	1702853	Identifier	NULL		1702306	0					
ANR	1702854	Argument	E_WARNING		1702306	1					
ANR	1702855	Identifier	E_WARNING		1702306	0					
ANR	1702856	Argument	"""Null byte in regex"""		1702306	2					
ANR	1702857	PrimaryExpression	"""Null byte in regex"""		1702306	0					
ANR	1702858	ElseStatement	else		1702306	0					
ANR	1702859	IfStatement	if ( start_delimiter == end_delimiter )		1702306	0					
ANR	1702860	Condition	start_delimiter == end_delimiter	368:13:11366:11397	1702306	0	True				
ANR	1702861	EqualityExpression	start_delimiter == end_delimiter		1702306	0		==			
ANR	1702862	Identifier	start_delimiter		1702306	0					
ANR	1702863	Identifier	end_delimiter		1702306	1					
ANR	1702864	CompoundStatement		98:47:2998:2998	1702306	1					
ANR	1702865	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""No ending delimiter '%c' found"" , delimiter )"	369:3:11405:11482	1702306	0	True				
ANR	1702866	CallExpression	"php_error_docref ( NULL , E_WARNING , ""No ending delimiter '%c' found"" , delimiter )"		1702306	0					
ANR	1702867	Callee	php_error_docref		1702306	0					
ANR	1702868	Identifier	php_error_docref		1702306	0					
ANR	1702869	ArgumentList	NULL		1702306	1					
ANR	1702870	Argument	NULL		1702306	0					
ANR	1702871	Identifier	NULL		1702306	0					
ANR	1702872	Argument	E_WARNING		1702306	1					
ANR	1702873	Identifier	E_WARNING		1702306	0					
ANR	1702874	Argument	"""No ending delimiter '%c' found"""		1702306	2					
ANR	1702875	PrimaryExpression	"""No ending delimiter '%c' found"""		1702306	0					
ANR	1702876	Argument	delimiter		1702306	3					
ANR	1702877	Identifier	delimiter		1702306	0					
ANR	1702878	ElseStatement	else		1702306	0					
ANR	1702879	CompoundStatement		100:9:3091:3091	1702306	0					
ANR	1702880	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""No ending matching delimiter '%c' found"" , delimiter )"	371:3:11498:11584	1702306	0	True				
ANR	1702881	CallExpression	"php_error_docref ( NULL , E_WARNING , ""No ending matching delimiter '%c' found"" , delimiter )"		1702306	0					
ANR	1702882	Callee	php_error_docref		1702306	0					
ANR	1702883	Identifier	php_error_docref		1702306	0					
ANR	1702884	ArgumentList	NULL		1702306	1					
ANR	1702885	Argument	NULL		1702306	0					
ANR	1702886	Identifier	NULL		1702306	0					
ANR	1702887	Argument	E_WARNING		1702306	1					
ANR	1702888	Identifier	E_WARNING		1702306	0					
ANR	1702889	Argument	"""No ending matching delimiter '%c' found"""		1702306	2					
ANR	1702890	PrimaryExpression	"""No ending matching delimiter '%c' found"""		1702306	0					
ANR	1702891	Argument	delimiter		1702306	3					
ANR	1702892	Identifier	delimiter		1702306	0					
ANR	1702893	ReturnStatement	return NULL ;	373:2:11592:11603	1702306	1	True				
ANR	1702894	Identifier	NULL		1702306	0					
ANR	1702895	ExpressionStatement	"pattern = estrndup ( p , pp - p )"	377:1:11652:11679	1702306	31	True				
ANR	1702896	AssignmentExpression	"pattern = estrndup ( p , pp - p )"		1702306	0		=			
ANR	1702897	Identifier	pattern		1702306	0					
ANR	1702898	CallExpression	"estrndup ( p , pp - p )"		1702306	1					
ANR	1702899	Callee	estrndup		1702306	0					
ANR	1702900	Identifier	estrndup		1702306	0					
ANR	1702901	ArgumentList	p		1702306	1					
ANR	1702902	Argument	p		1702306	0					
ANR	1702903	Identifier	p		1702306	0					
ANR	1702904	Argument	pp - p		1702306	1					
ANR	1702905	AdditiveExpression	pp - p		1702306	0		-			
ANR	1702906	Identifier	pp		1702306	0					
ANR	1702907	Identifier	p		1702306	1					
ANR	1702908	ExpressionStatement	pp ++	380:1:11713:11717	1702306	32	True				
ANR	1702909	PostIncDecOperationExpression	pp ++		1702306	0					
ANR	1702910	Identifier	pp		1702306	0					
ANR	1702911	IncDec	++		1702306	1					
ANR	1702912	WhileStatement	while ( pp < ZSTR_VAL ( regex ) + ZSTR_LEN ( regex ) )		1702306	33					
ANR	1702913	Condition	pp < ZSTR_VAL ( regex ) + ZSTR_LEN ( regex )	384:8:11849:11886	1702306	0	True				
ANR	1702914	RelationalExpression	pp < ZSTR_VAL ( regex ) + ZSTR_LEN ( regex )		1702306	0		<			
ANR	1702915	Identifier	pp		1702306	0					
ANR	1702916	AdditiveExpression	ZSTR_VAL ( regex ) + ZSTR_LEN ( regex )		1702306	1		+			
ANR	1702917	CallExpression	ZSTR_VAL ( regex )		1702306	0					
ANR	1702918	Callee	ZSTR_VAL		1702306	0					
ANR	1702919	Identifier	ZSTR_VAL		1702306	0					
ANR	1702920	ArgumentList	regex		1702306	1					
ANR	1702921	Argument	regex		1702306	0					
ANR	1702922	Identifier	regex		1702306	0					
ANR	1702923	CallExpression	ZSTR_LEN ( regex )		1702306	1					
ANR	1702924	Callee	ZSTR_LEN		1702306	0					
ANR	1702925	Identifier	ZSTR_LEN		1702306	0					
ANR	1702926	ArgumentList	regex		1702306	1					
ANR	1702927	Argument	regex		1702306	0					
ANR	1702928	Identifier	regex		1702306	0					
ANR	1702929	CompoundStatement		114:48:3487:3487	1702306	1					
ANR	1702930	SwitchStatement	switch ( * pp ++ )		1702306	0					
ANR	1702931	Condition	* pp ++	385:10:11901:11905	1702306	0	True				
ANR	1702932	UnaryOperationExpression	* pp ++		1702306	0					
ANR	1702933	UnaryOperator	*		1702306	0					
ANR	1702934	PostIncDecOperationExpression	pp ++		1702306	1					
ANR	1702935	Identifier	pp		1702306	0					
ANR	1702936	IncDec	++		1702306	1					
ANR	1702937	CompoundStatement		115:17:3506:3506	1702306	1					
ANR	1702938	Label	case 'i' :	387:3:11946:11954	1702306	0	True				
ANR	1702939	ExpressionStatement	coptions |= PCRE_CASELESS	387:13:11956:11981	1702306	1	True				
ANR	1702940	AssignmentExpression	coptions |= PCRE_CASELESS		1702306	0		|=			
ANR	1702941	Identifier	coptions		1702306	0					
ANR	1702942	Identifier	PCRE_CASELESS		1702306	1					
ANR	1702943	BreakStatement	break ;	387:41:11984:11989	1702306	2	True				
ANR	1702944	Label	case 'm' :	388:3:11994:12002	1702306	3	True				
ANR	1702945	ExpressionStatement	coptions |= PCRE_MULTILINE	388:13:12004:12030	1702306	4	True				
ANR	1702946	AssignmentExpression	coptions |= PCRE_MULTILINE		1702306	0		|=			
ANR	1702947	Identifier	coptions		1702306	0					
ANR	1702948	Identifier	PCRE_MULTILINE		1702306	1					
ANR	1702949	BreakStatement	break ;	388:42:12033:12038	1702306	5	True				
ANR	1702950	Label	case 's' :	389:3:12043:12051	1702306	6	True				
ANR	1702951	ExpressionStatement	coptions |= PCRE_DOTALL	389:13:12053:12076	1702306	7	True				
ANR	1702952	AssignmentExpression	coptions |= PCRE_DOTALL		1702306	0		|=			
ANR	1702953	Identifier	coptions		1702306	0					
ANR	1702954	Identifier	PCRE_DOTALL		1702306	1					
ANR	1702955	BreakStatement	break ;	389:39:12079:12084	1702306	8	True				
ANR	1702956	Label	case 'x' :	390:3:12089:12097	1702306	9	True				
ANR	1702957	ExpressionStatement	coptions |= PCRE_EXTENDED	390:13:12099:12124	1702306	10	True				
ANR	1702958	AssignmentExpression	coptions |= PCRE_EXTENDED		1702306	0		|=			
ANR	1702959	Identifier	coptions		1702306	0					
ANR	1702960	Identifier	PCRE_EXTENDED		1702306	1					
ANR	1702961	BreakStatement	break ;	390:41:12127:12132	1702306	11	True				
ANR	1702962	Label	case 'A' :	393:3:12169:12177	1702306	12	True				
ANR	1702963	ExpressionStatement	coptions |= PCRE_ANCHORED	393:13:12179:12204	1702306	13	True				
ANR	1702964	AssignmentExpression	coptions |= PCRE_ANCHORED		1702306	0		|=			
ANR	1702965	Identifier	coptions		1702306	0					
ANR	1702966	Identifier	PCRE_ANCHORED		1702306	1					
ANR	1702967	BreakStatement	break ;	393:41:12207:12212	1702306	14	True				
ANR	1702968	Label	case 'D' :	394:3:12217:12225	1702306	15	True				
ANR	1702969	ExpressionStatement	coptions |= PCRE_DOLLAR_ENDONLY	394:13:12227:12258	1702306	16	True				
ANR	1702970	AssignmentExpression	coptions |= PCRE_DOLLAR_ENDONLY		1702306	0		|=			
ANR	1702971	Identifier	coptions		1702306	0					
ANR	1702972	Identifier	PCRE_DOLLAR_ENDONLY		1702306	1					
ANR	1702973	BreakStatement	break ;	394:45:12259:12264	1702306	17	True				
ANR	1702974	Label	case 'S' :	395:3:12269:12277	1702306	18	True				
ANR	1702975	ExpressionStatement	do_study = 1	395:13:12279:12292	1702306	19	True				
ANR	1702976	AssignmentExpression	do_study = 1		1702306	0		=			
ANR	1702977	Identifier	do_study		1702306	0					
ANR	1702978	PrimaryExpression	1		1702306	1					
ANR	1702979	BreakStatement	break ;	395:32:12298:12303	1702306	20	True				
ANR	1702980	Label	case 'U' :	396:3:12308:12316	1702306	21	True				
ANR	1702981	ExpressionStatement	coptions |= PCRE_UNGREEDY	396:13:12318:12343	1702306	22	True				
ANR	1702982	AssignmentExpression	coptions |= PCRE_UNGREEDY		1702306	0		|=			
ANR	1702983	Identifier	coptions		1702306	0					
ANR	1702984	Identifier	PCRE_UNGREEDY		1702306	1					
ANR	1702985	BreakStatement	break ;	396:41:12346:12351	1702306	23	True				
ANR	1702986	Label	case 'X' :	397:3:12356:12364	1702306	24	True				
ANR	1702987	ExpressionStatement	coptions |= PCRE_EXTRA	397:13:12366:12388	1702306	25	True				
ANR	1702988	AssignmentExpression	coptions |= PCRE_EXTRA		1702306	0		|=			
ANR	1702989	Identifier	coptions		1702306	0					
ANR	1702990	Identifier	PCRE_EXTRA		1702306	1					
ANR	1702991	BreakStatement	break ;	397:39:12392:12397	1702306	26	True				
ANR	1702992	Label	case 'u' :	398:3:12402:12410	1702306	27	True				
ANR	1702993	ExpressionStatement	coptions |= PCRE_UTF8	398:13:12412:12433	1702306	28	True				
ANR	1702994	AssignmentExpression	coptions |= PCRE_UTF8		1702306	0		|=			
ANR	1702995	Identifier	coptions		1702306	0					
ANR	1702996	Identifier	PCRE_UTF8		1702306	1					
ANR	1702997	ExpressionStatement	coptions |= PCRE_UCP	403:6:12643:12663	1702306	29	True				
ANR	1702998	AssignmentExpression	coptions |= PCRE_UCP		1702306	0		|=			
ANR	1702999	Identifier	coptions		1702306	0					
ANR	1703000	Identifier	PCRE_UCP		1702306	1					
ANR	1703001	BreakStatement	break ;	405:4:12676:12681	1702306	30	True				
ANR	1703002	Label	case 'e' :	408:3:12716:12724	1702306	31	True				
ANR	1703003	ExpressionStatement	poptions |= PREG_REPLACE_EVAL	408:13:12726:12755	1702306	32	True				
ANR	1703004	AssignmentExpression	poptions |= PREG_REPLACE_EVAL		1702306	0		|=			
ANR	1703005	Identifier	poptions		1702306	0					
ANR	1703006	Identifier	PREG_REPLACE_EVAL		1702306	1					
ANR	1703007	BreakStatement	break ;	408:44:12757:12762	1702306	33	True				
ANR	1703008	Label	case ' ' :	410:3:12768:12776	1702306	34	True				
ANR	1703009	Label	case '\\n' :	411:3:12781:12790	1702306	35	True				
ANR	1703010	BreakStatement	break ;	412:4:12796:12801	1702306	36	True				
ANR	1703011	Label	default :	414:3:12807:12814	1702306	37	True				
ANR	1703012	Identifier	default		1702306	0					
ANR	1703013	IfStatement	if ( pp [ - 1 ] )		1702306	38					
ANR	1703014	Condition	pp [ - 1 ]	415:8:12824:12829	1702306	0	True				
ANR	1703015	ArrayIndexing	pp [ - 1 ]		1702306	0					
ANR	1703016	Identifier	pp		1702306	0					
ANR	1703017	UnaryOperationExpression	- 1		1702306	1					
ANR	1703018	UnaryOperator	-		1702306	0					
ANR	1703019	PrimaryExpression	1		1702306	1					
ANR	1703020	CompoundStatement		145:16:4430:4430	1702306	1					
ANR	1703021	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Unknown modifier '%c'"" , pp [ - 1 ] )"	416:5:12839:12904	1702306	0	True				
ANR	1703022	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Unknown modifier '%c'"" , pp [ - 1 ] )"		1702306	0					
ANR	1703023	Callee	php_error_docref		1702306	0					
ANR	1703024	Identifier	php_error_docref		1702306	0					
ANR	1703025	ArgumentList	NULL		1702306	1					
ANR	1703026	Argument	NULL		1702306	0					
ANR	1703027	Identifier	NULL		1702306	0					
ANR	1703028	Argument	E_WARNING		1702306	1					
ANR	1703029	Identifier	E_WARNING		1702306	0					
ANR	1703030	Argument	"""Unknown modifier '%c'"""		1702306	2					
ANR	1703031	PrimaryExpression	"""Unknown modifier '%c'"""		1702306	0					
ANR	1703032	Argument	pp [ - 1 ]		1702306	3					
ANR	1703033	ArrayIndexing	pp [ - 1 ]		1702306	0					
ANR	1703034	Identifier	pp		1702306	0					
ANR	1703035	UnaryOperationExpression	- 1		1702306	1					
ANR	1703036	UnaryOperator	-		1702306	0					
ANR	1703037	PrimaryExpression	1		1702306	1					
ANR	1703038	ElseStatement	else		1702306	0					
ANR	1703039	CompoundStatement		147:11:4515:4515	1702306	0					
ANR	1703040	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Null byte in regex"" )"	418:5:12924:12978	1702306	0	True				
ANR	1703041	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Null byte in regex"" )"		1702306	0					
ANR	1703042	Callee	php_error_docref		1702306	0					
ANR	1703043	Identifier	php_error_docref		1702306	0					
ANR	1703044	ArgumentList	NULL		1702306	1					
ANR	1703045	Argument	NULL		1702306	0					
ANR	1703046	Identifier	NULL		1702306	0					
ANR	1703047	Argument	E_WARNING		1702306	1					
ANR	1703048	Identifier	E_WARNING		1702306	0					
ANR	1703049	Argument	"""Null byte in regex"""		1702306	2					
ANR	1703050	PrimaryExpression	"""Null byte in regex"""		1702306	0					
ANR	1703051	ExpressionStatement	efree ( pattern )	420:4:12990:13004	1702306	39	True				
ANR	1703052	CallExpression	efree ( pattern )		1702306	0					
ANR	1703053	Callee	efree		1702306	0					
ANR	1703054	Identifier	efree		1702306	0					
ANR	1703055	ArgumentList	pattern		1702306	1					
ANR	1703056	Argument	pattern		1702306	0					
ANR	1703057	Identifier	pattern		1702306	0					
ANR	1703058	ReturnStatement	return NULL ;	421:4:13010:13021	1702306	40	True				
ANR	1703059	Identifier	NULL		1702306	0					
ANR	1703060	IfStatement	if ( BG ( locale_string ) && ( ZSTR_LEN ( BG ( locale_string ) ) != 1 || ZSTR_VAL ( BG ( locale_string ) ) [ 0 ] != 'C' ) )		1702306	34					
ANR	1703061	Condition	BG ( locale_string ) && ( ZSTR_LEN ( BG ( locale_string ) ) != 1 || ZSTR_VAL ( BG ( locale_string ) ) [ 0 ] != 'C' )	426:5:13055:13155	1702306	0	True				
ANR	1703062	AndExpression	BG ( locale_string ) && ( ZSTR_LEN ( BG ( locale_string ) ) != 1 || ZSTR_VAL ( BG ( locale_string ) ) [ 0 ] != 'C' )		1702306	0		&&			
ANR	1703063	CallExpression	BG ( locale_string )		1702306	0					
ANR	1703064	Callee	BG		1702306	0					
ANR	1703065	Identifier	BG		1702306	0					
ANR	1703066	ArgumentList	locale_string		1702306	1					
ANR	1703067	Argument	locale_string		1702306	0					
ANR	1703068	Identifier	locale_string		1702306	0					
ANR	1703069	OrExpression	ZSTR_LEN ( BG ( locale_string ) ) != 1 || ZSTR_VAL ( BG ( locale_string ) ) [ 0 ] != 'C'		1702306	1		||			
ANR	1703070	EqualityExpression	ZSTR_LEN ( BG ( locale_string ) ) != 1		1702306	0		!=			
ANR	1703071	CallExpression	ZSTR_LEN ( BG ( locale_string ) )		1702306	0					
ANR	1703072	Callee	ZSTR_LEN		1702306	0					
ANR	1703073	Identifier	ZSTR_LEN		1702306	0					
ANR	1703074	ArgumentList	BG ( locale_string )		1702306	1					
ANR	1703075	Argument	BG ( locale_string )		1702306	0					
ANR	1703076	CallExpression	BG ( locale_string )		1702306	0					
ANR	1703077	Callee	BG		1702306	0					
ANR	1703078	Identifier	BG		1702306	0					
ANR	1703079	ArgumentList	locale_string		1702306	1					
ANR	1703080	Argument	locale_string		1702306	0					
ANR	1703081	Identifier	locale_string		1702306	0					
ANR	1703082	PrimaryExpression	1		1702306	1					
ANR	1703083	EqualityExpression	ZSTR_VAL ( BG ( locale_string ) ) [ 0 ] != 'C'		1702306	1		!=			
ANR	1703084	ArrayIndexing	ZSTR_VAL ( BG ( locale_string ) ) [ 0 ]		1702306	0					
ANR	1703085	CallExpression	ZSTR_VAL ( BG ( locale_string ) )		1702306	0					
ANR	1703086	Callee	ZSTR_VAL		1702306	0					
ANR	1703087	Identifier	ZSTR_VAL		1702306	0					
ANR	1703088	ArgumentList	BG ( locale_string )		1702306	1					
ANR	1703089	Argument	BG ( locale_string )		1702306	0					
ANR	1703090	CallExpression	BG ( locale_string )		1702306	0					
ANR	1703091	Callee	BG		1702306	0					
ANR	1703092	Identifier	BG		1702306	0					
ANR	1703093	ArgumentList	locale_string		1702306	1					
ANR	1703094	Argument	locale_string		1702306	0					
ANR	1703095	Identifier	locale_string		1702306	0					
ANR	1703096	PrimaryExpression	0		1702306	1					
ANR	1703097	PrimaryExpression	'C'		1702306	1					
ANR	1703098	CompoundStatement		157:82:4756:4756	1702306	1					
ANR	1703099	ExpressionStatement	tables = pcre_maketables ( )	428:2:13162:13188	1702306	0	True				
ANR	1703100	AssignmentExpression	tables = pcre_maketables ( )		1702306	0		=			
ANR	1703101	Identifier	tables		1702306	0					
ANR	1703102	CallExpression	pcre_maketables ( )		1702306	1					
ANR	1703103	Callee	pcre_maketables		1702306	0					
ANR	1703104	Identifier	pcre_maketables		1702306	0					
ANR	1703105	ArgumentList			1702306	1					
ANR	1703106	ExpressionStatement	"re = pcre_compile ( pattern , coptions , & error , & erroffset , tables )"	433:1:13270:13362	1702306	35	True				
ANR	1703107	AssignmentExpression	"re = pcre_compile ( pattern , coptions , & error , & erroffset , tables )"		1702306	0		=			
ANR	1703108	Identifier	re		1702306	0					
ANR	1703109	CallExpression	"pcre_compile ( pattern , coptions , & error , & erroffset , tables )"		1702306	1					
ANR	1703110	Callee	pcre_compile		1702306	0					
ANR	1703111	Identifier	pcre_compile		1702306	0					
ANR	1703112	ArgumentList	pattern		1702306	1					
ANR	1703113	Argument	pattern		1702306	0					
ANR	1703114	Identifier	pattern		1702306	0					
ANR	1703115	Argument	coptions		1702306	1					
ANR	1703116	Identifier	coptions		1702306	0					
ANR	1703117	Argument	& error		1702306	2					
ANR	1703118	UnaryOperationExpression	& error		1702306	0					
ANR	1703119	UnaryOperator	&		1702306	0					
ANR	1703120	Identifier	error		1702306	1					
ANR	1703121	Argument	& erroffset		1702306	3					
ANR	1703122	UnaryOperationExpression	& erroffset		1702306	0					
ANR	1703123	UnaryOperator	&		1702306	0					
ANR	1703124	Identifier	erroffset		1702306	1					
ANR	1703125	Argument	tables		1702306	4					
ANR	1703126	Identifier	tables		1702306	0					
ANR	1703127	IfStatement	if ( re == NULL )		1702306	36					
ANR	1703128	Condition	re == NULL	439:5:13370:13379	1702306	0	True				
ANR	1703129	EqualityExpression	re == NULL		1702306	0		==			
ANR	1703130	Identifier	re		1702306	0					
ANR	1703131	Identifier	NULL		1702306	1					
ANR	1703132	CompoundStatement		169:17:4980:4980	1702306	1					
ANR	1703133	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Compilation failed: %s at offset %d"" , error , erroffset )"	440:2:13386:13475	1702306	0	True				
ANR	1703134	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Compilation failed: %s at offset %d"" , error , erroffset )"		1702306	0					
ANR	1703135	Callee	php_error_docref		1702306	0					
ANR	1703136	Identifier	php_error_docref		1702306	0					
ANR	1703137	ArgumentList	NULL		1702306	1					
ANR	1703138	Argument	NULL		1702306	0					
ANR	1703139	Identifier	NULL		1702306	0					
ANR	1703140	Argument	E_WARNING		1702306	1					
ANR	1703141	Identifier	E_WARNING		1702306	0					
ANR	1703142	Argument	"""Compilation failed: %s at offset %d"""		1702306	2					
ANR	1703143	PrimaryExpression	"""Compilation failed: %s at offset %d"""		1702306	0					
ANR	1703144	Argument	error		1702306	3					
ANR	1703145	Identifier	error		1702306	0					
ANR	1703146	Argument	erroffset		1702306	4					
ANR	1703147	Identifier	erroffset		1702306	0					
ANR	1703148	ExpressionStatement	efree ( pattern )	441:2:13479:13493	1702306	1	True				
ANR	1703149	CallExpression	efree ( pattern )		1702306	0					
ANR	1703150	Callee	efree		1702306	0					
ANR	1703151	Identifier	efree		1702306	0					
ANR	1703152	ArgumentList	pattern		1702306	1					
ANR	1703153	Argument	pattern		1702306	0					
ANR	1703154	Identifier	pattern		1702306	0					
ANR	1703155	IfStatement	if ( tables )		1702306	2					
ANR	1703156	Condition	tables	442:6:13501:13506	1702306	0	True				
ANR	1703157	Identifier	tables		1702306	0					
ANR	1703158	CompoundStatement		172:14:5107:5107	1702306	1					
ANR	1703159	ExpressionStatement	"pefree ( ( void * ) tables , 1 )"	443:3:13514:13538	1702306	0	True				
ANR	1703160	CallExpression	"pefree ( ( void * ) tables , 1 )"		1702306	0					
ANR	1703161	Callee	pefree		1702306	0					
ANR	1703162	Identifier	pefree		1702306	0					
ANR	1703163	ArgumentList	( void * ) tables		1702306	1					
ANR	1703164	Argument	( void * ) tables		1702306	0					
ANR	1703165	CastExpression	( void * ) tables		1702306	0					
ANR	1703166	CastTarget	void *		1702306	0					
ANR	1703167	Identifier	tables		1702306	1					
ANR	1703168	Argument	1		1702306	1					
ANR	1703169	PrimaryExpression	1		1702306	0					
ANR	1703170	ReturnStatement	return NULL ;	445:2:13546:13557	1702306	3	True				
ANR	1703171	Identifier	NULL		1702306	0					
ANR	1703172	IfStatement	if ( PCRE_G ( jit ) )		1702306	37					
ANR	1703173	Condition	PCRE_G ( jit )	449:5:13598:13608	1702306	0	True				
ANR	1703174	CallExpression	PCRE_G ( jit )		1702306	0					
ANR	1703175	Callee	PCRE_G		1702306	0					
ANR	1703176	Identifier	PCRE_G		1702306	0					
ANR	1703177	ArgumentList	jit		1702306	1					
ANR	1703178	Argument	jit		1702306	0					
ANR	1703179	Identifier	jit		1702306	0					
ANR	1703180	CompoundStatement		179:18:5209:5209	1702306	1					
ANR	1703181	ExpressionStatement	do_study = 1	451:2:13648:13660	1702306	0	True				
ANR	1703182	AssignmentExpression	do_study = 1		1702306	0		=			
ANR	1703183	Identifier	do_study		1702306	0					
ANR	1703184	PrimaryExpression	1		1702306	1					
ANR	1703185	ExpressionStatement	soptions |= PCRE_STUDY_JIT_COMPILE	452:2:13664:13698	1702306	1	True				
ANR	1703186	AssignmentExpression	soptions |= PCRE_STUDY_JIT_COMPILE		1702306	0		|=			
ANR	1703187	Identifier	soptions		1702306	0					
ANR	1703188	Identifier	PCRE_STUDY_JIT_COMPILE		1702306	1					
ANR	1703189	IfStatement	if ( do_study )		1702306	38					
ANR	1703190	Condition	do_study	458:5:13832:13839	1702306	0	True				
ANR	1703191	Identifier	do_study		1702306	0					
ANR	1703192	CompoundStatement		188:15:5440:5440	1702306	1					
ANR	1703193	ExpressionStatement	"extra = pcre_study ( re , soptions , & error )"	459:2:13846:13886	1702306	0	True				
ANR	1703194	AssignmentExpression	"extra = pcre_study ( re , soptions , & error )"		1702306	0		=			
ANR	1703195	Identifier	extra		1702306	0					
ANR	1703196	CallExpression	"pcre_study ( re , soptions , & error )"		1702306	1					
ANR	1703197	Callee	pcre_study		1702306	0					
ANR	1703198	Identifier	pcre_study		1702306	0					
ANR	1703199	ArgumentList	re		1702306	1					
ANR	1703200	Argument	re		1702306	0					
ANR	1703201	Identifier	re		1702306	0					
ANR	1703202	Argument	soptions		1702306	1					
ANR	1703203	Identifier	soptions		1702306	0					
ANR	1703204	Argument	& error		1702306	2					
ANR	1703205	UnaryOperationExpression	& error		1702306	0					
ANR	1703206	UnaryOperator	&		1702306	0					
ANR	1703207	Identifier	error		1702306	1					
ANR	1703208	IfStatement	if ( extra )		1702306	1					
ANR	1703209	Condition	extra	460:6:13894:13898	1702306	0	True				
ANR	1703210	Identifier	extra		1702306	0					
ANR	1703211	CompoundStatement		190:13:5499:5499	1702306	1					
ANR	1703212	ExpressionStatement	extra -> flags |= PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION	461:3:13906:13979	1702306	0	True				
ANR	1703213	AssignmentExpression	extra -> flags |= PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION		1702306	0		|=			
ANR	1703214	PtrMemberAccess	extra -> flags		1702306	0					
ANR	1703215	Identifier	extra		1702306	0					
ANR	1703216	Identifier	flags		1702306	1					
ANR	1703217	InclusiveOrExpression	PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION		1702306	1		|			
ANR	1703218	Identifier	PCRE_EXTRA_MATCH_LIMIT		1702306	0					
ANR	1703219	Identifier	PCRE_EXTRA_MATCH_LIMIT_RECURSION		1702306	1					
ANR	1703220	ExpressionStatement	extra -> match_limit = ( unsigned long ) PCRE_G ( backtrack_limit )	462:3:13984:14043	1702306	1	True				
ANR	1703221	AssignmentExpression	extra -> match_limit = ( unsigned long ) PCRE_G ( backtrack_limit )		1702306	0		=			
ANR	1703222	PtrMemberAccess	extra -> match_limit		1702306	0					
ANR	1703223	Identifier	extra		1702306	0					
ANR	1703224	Identifier	match_limit		1702306	1					
ANR	1703225	CastExpression	( unsigned long ) PCRE_G ( backtrack_limit )		1702306	1					
ANR	1703226	CastTarget	unsigned long		1702306	0					
ANR	1703227	CallExpression	PCRE_G ( backtrack_limit )		1702306	1					
ANR	1703228	Callee	PCRE_G		1702306	0					
ANR	1703229	Identifier	PCRE_G		1702306	0					
ANR	1703230	ArgumentList	backtrack_limit		1702306	1					
ANR	1703231	Argument	backtrack_limit		1702306	0					
ANR	1703232	Identifier	backtrack_limit		1702306	0					
ANR	1703233	ExpressionStatement	extra -> match_limit_recursion = ( unsigned long ) PCRE_G ( recursion_limit )	463:3:14048:14117	1702306	2	True				
ANR	1703234	AssignmentExpression	extra -> match_limit_recursion = ( unsigned long ) PCRE_G ( recursion_limit )		1702306	0		=			
ANR	1703235	PtrMemberAccess	extra -> match_limit_recursion		1702306	0					
ANR	1703236	Identifier	extra		1702306	0					
ANR	1703237	Identifier	match_limit_recursion		1702306	1					
ANR	1703238	CastExpression	( unsigned long ) PCRE_G ( recursion_limit )		1702306	1					
ANR	1703239	CastTarget	unsigned long		1702306	0					
ANR	1703240	CallExpression	PCRE_G ( recursion_limit )		1702306	1					
ANR	1703241	Callee	PCRE_G		1702306	0					
ANR	1703242	Identifier	PCRE_G		1702306	0					
ANR	1703243	ArgumentList	recursion_limit		1702306	1					
ANR	1703244	Argument	recursion_limit		1702306	0					
ANR	1703245	Identifier	recursion_limit		1702306	0					
ANR	1703246	IfStatement	if ( error != NULL )		1702306	2					
ANR	1703247	Condition	error != NULL	465:6:14129:14141	1702306	0	True				
ANR	1703248	EqualityExpression	error != NULL		1702306	0		!=			
ANR	1703249	Identifier	error		1702306	0					
ANR	1703250	Identifier	NULL		1702306	1					
ANR	1703251	CompoundStatement		195:21:5742:5742	1702306	1					
ANR	1703252	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Error while studying pattern"" )"	466:3:14149:14214	1702306	0	True				
ANR	1703253	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Error while studying pattern"" )"		1702306	0					
ANR	1703254	Callee	php_error_docref		1702306	0					
ANR	1703255	Identifier	php_error_docref		1702306	0					
ANR	1703256	ArgumentList	NULL		1702306	1					
ANR	1703257	Argument	NULL		1702306	0					
ANR	1703258	Identifier	NULL		1702306	0					
ANR	1703259	Argument	E_WARNING		1702306	1					
ANR	1703260	Identifier	E_WARNING		1702306	0					
ANR	1703261	Argument	"""Error while studying pattern"""		1702306	2					
ANR	1703262	PrimaryExpression	"""Error while studying pattern"""		1702306	0					
ANR	1703263	ElseStatement	else		1702306	0					
ANR	1703264	CompoundStatement		198:8:5826:5826	1702306	0					
ANR	1703265	ExpressionStatement	extra = NULL	469:2:14232:14244	1702306	0	True				
ANR	1703266	AssignmentExpression	extra = NULL		1702306	0		=			
ANR	1703267	Identifier	extra		1702306	0					
ANR	1703268	Identifier	NULL		1702306	1					
ANR	1703269	ExpressionStatement	efree ( pattern )	472:1:14251:14265	1702306	39	True				
ANR	1703270	CallExpression	efree ( pattern )		1702306	0					
ANR	1703271	Callee	efree		1702306	0					
ANR	1703272	Identifier	efree		1702306	0					
ANR	1703273	ArgumentList	pattern		1702306	1					
ANR	1703274	Argument	pattern		1702306	0					
ANR	1703275	Identifier	pattern		1702306	0					
ANR	1703276	IfStatement	if ( zend_hash_num_elements ( & PCRE_G ( pcre_cache ) ) == PCRE_CACHE_SIZE )		1702306	40					
ANR	1703277	Condition	zend_hash_num_elements ( & PCRE_G ( pcre_cache ) ) == PCRE_CACHE_SIZE	479:5:14448:14509	1702306	0	True				
ANR	1703278	EqualityExpression	zend_hash_num_elements ( & PCRE_G ( pcre_cache ) ) == PCRE_CACHE_SIZE		1702306	0		==			
ANR	1703279	CallExpression	zend_hash_num_elements ( & PCRE_G ( pcre_cache ) )		1702306	0					
ANR	1703280	Callee	zend_hash_num_elements		1702306	0					
ANR	1703281	Identifier	zend_hash_num_elements		1702306	0					
ANR	1703282	ArgumentList	& PCRE_G ( pcre_cache )		1702306	1					
ANR	1703283	Argument	& PCRE_G ( pcre_cache )		1702306	0					
ANR	1703284	UnaryOperationExpression	& PCRE_G ( pcre_cache )		1702306	0					
ANR	1703285	UnaryOperator	&		1702306	0					
ANR	1703286	CallExpression	PCRE_G ( pcre_cache )		1702306	1					
ANR	1703287	Callee	PCRE_G		1702306	0					
ANR	1703288	Identifier	PCRE_G		1702306	0					
ANR	1703289	ArgumentList	pcre_cache		1702306	1					
ANR	1703290	Argument	pcre_cache		1702306	0					
ANR	1703291	Identifier	pcre_cache		1702306	0					
ANR	1703292	Identifier	PCRE_CACHE_SIZE		1702306	1					
ANR	1703293	CompoundStatement		210:2:6114:6149	1702306	1					
ANR	1703294	IdentifierDeclStatement	int num_clean = PCRE_CACHE_SIZE / 8 ;	480:2:14516:14551	1702306	0	True				
ANR	1703295	IdentifierDecl	num_clean = PCRE_CACHE_SIZE / 8		1702306	0					
ANR	1703296	IdentifierDeclType	int		1702306	0					
ANR	1703297	Identifier	num_clean		1702306	1					
ANR	1703298	AssignmentExpression	num_clean = PCRE_CACHE_SIZE / 8		1702306	2		=			
ANR	1703299	Identifier	num_clean		1702306	0					
ANR	1703300	MultiplicativeExpression	PCRE_CACHE_SIZE / 8		1702306	1		/			
ANR	1703301	Identifier	PCRE_CACHE_SIZE		1702306	0					
ANR	1703302	PrimaryExpression	8		1702306	1					
ANR	1703303	ExpressionStatement	"zend_hash_apply_with_argument ( & PCRE_G ( pcre_cache ) , pcre_clean_cache , & num_clean )"	481:2:14555:14635	1702306	1	True				
ANR	1703304	CallExpression	"zend_hash_apply_with_argument ( & PCRE_G ( pcre_cache ) , pcre_clean_cache , & num_clean )"		1702306	0					
ANR	1703305	Callee	zend_hash_apply_with_argument		1702306	0					
ANR	1703306	Identifier	zend_hash_apply_with_argument		1702306	0					
ANR	1703307	ArgumentList	& PCRE_G ( pcre_cache )		1702306	1					
ANR	1703308	Argument	& PCRE_G ( pcre_cache )		1702306	0					
ANR	1703309	UnaryOperationExpression	& PCRE_G ( pcre_cache )		1702306	0					
ANR	1703310	UnaryOperator	&		1702306	0					
ANR	1703311	CallExpression	PCRE_G ( pcre_cache )		1702306	1					
ANR	1703312	Callee	PCRE_G		1702306	0					
ANR	1703313	Identifier	PCRE_G		1702306	0					
ANR	1703314	ArgumentList	pcre_cache		1702306	1					
ANR	1703315	Argument	pcre_cache		1702306	0					
ANR	1703316	Identifier	pcre_cache		1702306	0					
ANR	1703317	Argument	pcre_clean_cache		1702306	1					
ANR	1703318	Identifier	pcre_clean_cache		1702306	0					
ANR	1703319	Argument	& num_clean		1702306	2					
ANR	1703320	UnaryOperationExpression	& num_clean		1702306	0					
ANR	1703321	UnaryOperator	&		1702306	0					
ANR	1703322	Identifier	num_clean		1702306	1					
ANR	1703323	ExpressionStatement	new_entry . re = re	485:1:14705:14722	1702306	41	True				
ANR	1703324	AssignmentExpression	new_entry . re = re		1702306	0		=			
ANR	1703325	MemberAccess	new_entry . re		1702306	0					
ANR	1703326	Identifier	new_entry		1702306	0					
ANR	1703327	Identifier	re		1702306	1					
ANR	1703328	Identifier	re		1702306	1					
ANR	1703329	ExpressionStatement	new_entry . extra = extra	486:1:14725:14748	1702306	42	True				
ANR	1703330	AssignmentExpression	new_entry . extra = extra		1702306	0		=			
ANR	1703331	MemberAccess	new_entry . extra		1702306	0					
ANR	1703332	Identifier	new_entry		1702306	0					
ANR	1703333	Identifier	extra		1702306	1					
ANR	1703334	Identifier	extra		1702306	1					
ANR	1703335	ExpressionStatement	new_entry . preg_options = poptions	487:1:14751:14784	1702306	43	True				
ANR	1703336	AssignmentExpression	new_entry . preg_options = poptions		1702306	0		=			
ANR	1703337	MemberAccess	new_entry . preg_options		1702306	0					
ANR	1703338	Identifier	new_entry		1702306	0					
ANR	1703339	Identifier	preg_options		1702306	1					
ANR	1703340	Identifier	poptions		1702306	1					
ANR	1703341	ExpressionStatement	new_entry . compile_options = coptions	488:1:14787:14823	1702306	44	True				
ANR	1703342	AssignmentExpression	new_entry . compile_options = coptions		1702306	0		=			
ANR	1703343	MemberAccess	new_entry . compile_options		1702306	0					
ANR	1703344	Identifier	new_entry		1702306	0					
ANR	1703345	Identifier	compile_options		1702306	1					
ANR	1703346	Identifier	coptions		1702306	1					
ANR	1703347	ExpressionStatement	"new_entry . locale = BG ( locale_string ) ? ( ( GC_FLAGS ( BG ( locale_string ) ) & IS_STR_PERSISTENT ) ? zend_string_copy ( BG ( locale_string ) ) : zend_string_init ( ZSTR_VAL ( BG ( locale_string ) ) , ZSTR_LEN ( BG ( locale_string ) ) , 1 ) ) : NULL"	490:1:14845:15070	1702306	45	True				
ANR	1703348	AssignmentExpression	"new_entry . locale = BG ( locale_string ) ? ( ( GC_FLAGS ( BG ( locale_string ) ) & IS_STR_PERSISTENT ) ? zend_string_copy ( BG ( locale_string ) ) : zend_string_init ( ZSTR_VAL ( BG ( locale_string ) ) , ZSTR_LEN ( BG ( locale_string ) ) , 1 ) ) : NULL"		1702306	0		=			
ANR	1703349	MemberAccess	new_entry . locale		1702306	0					
ANR	1703350	Identifier	new_entry		1702306	0					
ANR	1703351	Identifier	locale		1702306	1					
ANR	1703352	ConditionalExpression	"BG ( locale_string ) ? ( ( GC_FLAGS ( BG ( locale_string ) ) & IS_STR_PERSISTENT ) ? zend_string_copy ( BG ( locale_string ) ) : zend_string_init ( ZSTR_VAL ( BG ( locale_string ) ) , ZSTR_LEN ( BG ( locale_string ) ) , 1 ) ) : NULL"		1702306	1					
ANR	1703353	Condition	BG ( locale_string )		1702306	0					
ANR	1703354	CallExpression	BG ( locale_string )		1702306	0					
ANR	1703355	Callee	BG		1702306	0					
ANR	1703356	Identifier	BG		1702306	0					
ANR	1703357	ArgumentList	locale_string		1702306	1					
ANR	1703358	Argument	locale_string		1702306	0					
ANR	1703359	Identifier	locale_string		1702306	0					
ANR	1703360	ConditionalExpression	"( GC_FLAGS ( BG ( locale_string ) ) & IS_STR_PERSISTENT ) ? zend_string_copy ( BG ( locale_string ) ) : zend_string_init ( ZSTR_VAL ( BG ( locale_string ) ) , ZSTR_LEN ( BG ( locale_string ) ) , 1 )"		1702306	1					
ANR	1703361	Condition	GC_FLAGS ( BG ( locale_string ) ) & IS_STR_PERSISTENT		1702306	0					
ANR	1703362	BitAndExpression	GC_FLAGS ( BG ( locale_string ) ) & IS_STR_PERSISTENT		1702306	0		&			
ANR	1703363	CallExpression	GC_FLAGS ( BG ( locale_string ) )		1702306	0					
ANR	1703364	Callee	GC_FLAGS		1702306	0					
ANR	1703365	Identifier	GC_FLAGS		1702306	0					
ANR	1703366	ArgumentList	BG ( locale_string )		1702306	1					
ANR	1703367	Argument	BG ( locale_string )		1702306	0					
ANR	1703368	CallExpression	BG ( locale_string )		1702306	0					
ANR	1703369	Callee	BG		1702306	0					
ANR	1703370	Identifier	BG		1702306	0					
ANR	1703371	ArgumentList	locale_string		1702306	1					
ANR	1703372	Argument	locale_string		1702306	0					
ANR	1703373	Identifier	locale_string		1702306	0					
ANR	1703374	Identifier	IS_STR_PERSISTENT		1702306	1					
ANR	1703375	CallExpression	zend_string_copy ( BG ( locale_string ) )		1702306	1					
ANR	1703376	Callee	zend_string_copy		1702306	0					
ANR	1703377	Identifier	zend_string_copy		1702306	0					
ANR	1703378	ArgumentList	BG ( locale_string )		1702306	1					
ANR	1703379	Argument	BG ( locale_string )		1702306	0					
ANR	1703380	CallExpression	BG ( locale_string )		1702306	0					
ANR	1703381	Callee	BG		1702306	0					
ANR	1703382	Identifier	BG		1702306	0					
ANR	1703383	ArgumentList	locale_string		1702306	1					
ANR	1703384	Argument	locale_string		1702306	0					
ANR	1703385	Identifier	locale_string		1702306	0					
ANR	1703386	CallExpression	"zend_string_init ( ZSTR_VAL ( BG ( locale_string ) ) , ZSTR_LEN ( BG ( locale_string ) ) , 1 )"		1702306	2					
ANR	1703387	Callee	zend_string_init		1702306	0					
ANR	1703388	Identifier	zend_string_init		1702306	0					
ANR	1703389	ArgumentList	ZSTR_VAL ( BG ( locale_string ) )		1702306	1					
ANR	1703390	Argument	ZSTR_VAL ( BG ( locale_string ) )		1702306	0					
ANR	1703391	CallExpression	ZSTR_VAL ( BG ( locale_string ) )		1702306	0					
ANR	1703392	Callee	ZSTR_VAL		1702306	0					
ANR	1703393	Identifier	ZSTR_VAL		1702306	0					
ANR	1703394	ArgumentList	BG ( locale_string )		1702306	1					
ANR	1703395	Argument	BG ( locale_string )		1702306	0					
ANR	1703396	CallExpression	BG ( locale_string )		1702306	0					
ANR	1703397	Callee	BG		1702306	0					
ANR	1703398	Identifier	BG		1702306	0					
ANR	1703399	ArgumentList	locale_string		1702306	1					
ANR	1703400	Argument	locale_string		1702306	0					
ANR	1703401	Identifier	locale_string		1702306	0					
ANR	1703402	Argument	ZSTR_LEN ( BG ( locale_string ) )		1702306	1					
ANR	1703403	CallExpression	ZSTR_LEN ( BG ( locale_string ) )		1702306	0					
ANR	1703404	Callee	ZSTR_LEN		1702306	0					
ANR	1703405	Identifier	ZSTR_LEN		1702306	0					
ANR	1703406	ArgumentList	BG ( locale_string )		1702306	1					
ANR	1703407	Argument	BG ( locale_string )		1702306	0					
ANR	1703408	CallExpression	BG ( locale_string )		1702306	0					
ANR	1703409	Callee	BG		1702306	0					
ANR	1703410	Identifier	BG		1702306	0					
ANR	1703411	ArgumentList	locale_string		1702306	1					
ANR	1703412	Argument	locale_string		1702306	0					
ANR	1703413	Identifier	locale_string		1702306	0					
ANR	1703414	Argument	1		1702306	2					
ANR	1703415	PrimaryExpression	1		1702306	0					
ANR	1703416	Identifier	NULL		1702306	2					
ANR	1703417	ExpressionStatement	new_entry . tables = tables	495:1:15073:15098	1702306	46	True				
ANR	1703418	AssignmentExpression	new_entry . tables = tables		1702306	0		=			
ANR	1703419	MemberAccess	new_entry . tables		1702306	0					
ANR	1703420	Identifier	new_entry		1702306	0					
ANR	1703421	Identifier	tables		1702306	1					
ANR	1703422	Identifier	tables		1702306	1					
ANR	1703423	ExpressionStatement	new_entry . refcount = 0	497:1:15108:15130	1702306	47	True				
ANR	1703424	AssignmentExpression	new_entry . refcount = 0		1702306	0		=			
ANR	1703425	MemberAccess	new_entry . refcount		1702306	0					
ANR	1703426	Identifier	new_entry		1702306	0					
ANR	1703427	Identifier	refcount		1702306	1					
ANR	1703428	PrimaryExpression	0		1702306	1					
ANR	1703429	ExpressionStatement	"rc = pcre_fullinfo ( re , extra , PCRE_INFO_CAPTURECOUNT , & new_entry . capture_count )"	499:1:15134:15213	1702306	48	True				
ANR	1703430	AssignmentExpression	"rc = pcre_fullinfo ( re , extra , PCRE_INFO_CAPTURECOUNT , & new_entry . capture_count )"		1702306	0		=			
ANR	1703431	Identifier	rc		1702306	0					
ANR	1703432	CallExpression	"pcre_fullinfo ( re , extra , PCRE_INFO_CAPTURECOUNT , & new_entry . capture_count )"		1702306	1					
ANR	1703433	Callee	pcre_fullinfo		1702306	0					
ANR	1703434	Identifier	pcre_fullinfo		1702306	0					
ANR	1703435	ArgumentList	re		1702306	1					
ANR	1703436	Argument	re		1702306	0					
ANR	1703437	Identifier	re		1702306	0					
ANR	1703438	Argument	extra		1702306	1					
ANR	1703439	Identifier	extra		1702306	0					
ANR	1703440	Argument	PCRE_INFO_CAPTURECOUNT		1702306	2					
ANR	1703441	Identifier	PCRE_INFO_CAPTURECOUNT		1702306	0					
ANR	1703442	Argument	& new_entry . capture_count		1702306	3					
ANR	1703443	UnaryOperationExpression	& new_entry . capture_count		1702306	0					
ANR	1703444	UnaryOperator	&		1702306	0					
ANR	1703445	MemberAccess	new_entry . capture_count		1702306	1					
ANR	1703446	Identifier	new_entry		1702306	0					
ANR	1703447	Identifier	capture_count		1702306	1					
ANR	1703448	IfStatement	if ( rc < 0 )		1702306	49					
ANR	1703449	Condition	rc < 0	500:5:15220:15225	1702306	0	True				
ANR	1703450	RelationalExpression	rc < 0		1702306	0		<			
ANR	1703451	Identifier	rc		1702306	0					
ANR	1703452	PrimaryExpression	0		1702306	1					
ANR	1703453	CompoundStatement		230:13:6826:6826	1702306	1					
ANR	1703454	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Internal pcre_fullinfo() error %d"" , rc )"	501:2:15232:15306	1702306	0	True				
ANR	1703455	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Internal pcre_fullinfo() error %d"" , rc )"		1702306	0					
ANR	1703456	Callee	php_error_docref		1702306	0					
ANR	1703457	Identifier	php_error_docref		1702306	0					
ANR	1703458	ArgumentList	NULL		1702306	1					
ANR	1703459	Argument	NULL		1702306	0					
ANR	1703460	Identifier	NULL		1702306	0					
ANR	1703461	Argument	E_WARNING		1702306	1					
ANR	1703462	Identifier	E_WARNING		1702306	0					
ANR	1703463	Argument	"""Internal pcre_fullinfo() error %d"""		1702306	2					
ANR	1703464	PrimaryExpression	"""Internal pcre_fullinfo() error %d"""		1702306	0					
ANR	1703465	Argument	rc		1702306	3					
ANR	1703466	Identifier	rc		1702306	0					
ANR	1703467	ReturnStatement	return NULL ;	502:2:15310:15321	1702306	1	True				
ANR	1703468	Identifier	NULL		1702306	0					
ANR	1703469	ExpressionStatement	"rc = pcre_fullinfo ( re , extra , PCRE_INFO_NAMECOUNT , & new_entry . name_count )"	505:1:15328:15401	1702306	50	True				
ANR	1703470	AssignmentExpression	"rc = pcre_fullinfo ( re , extra , PCRE_INFO_NAMECOUNT , & new_entry . name_count )"		1702306	0		=			
ANR	1703471	Identifier	rc		1702306	0					
ANR	1703472	CallExpression	"pcre_fullinfo ( re , extra , PCRE_INFO_NAMECOUNT , & new_entry . name_count )"		1702306	1					
ANR	1703473	Callee	pcre_fullinfo		1702306	0					
ANR	1703474	Identifier	pcre_fullinfo		1702306	0					
ANR	1703475	ArgumentList	re		1702306	1					
ANR	1703476	Argument	re		1702306	0					
ANR	1703477	Identifier	re		1702306	0					
ANR	1703478	Argument	extra		1702306	1					
ANR	1703479	Identifier	extra		1702306	0					
ANR	1703480	Argument	PCRE_INFO_NAMECOUNT		1702306	2					
ANR	1703481	Identifier	PCRE_INFO_NAMECOUNT		1702306	0					
ANR	1703482	Argument	& new_entry . name_count		1702306	3					
ANR	1703483	UnaryOperationExpression	& new_entry . name_count		1702306	0					
ANR	1703484	UnaryOperator	&		1702306	0					
ANR	1703485	MemberAccess	new_entry . name_count		1702306	1					
ANR	1703486	Identifier	new_entry		1702306	0					
ANR	1703487	Identifier	name_count		1702306	1					
ANR	1703488	IfStatement	if ( rc < 0 )		1702306	51					
ANR	1703489	Condition	rc < 0	506:5:15408:15413	1702306	0	True				
ANR	1703490	RelationalExpression	rc < 0		1702306	0		<			
ANR	1703491	Identifier	rc		1702306	0					
ANR	1703492	PrimaryExpression	0		1702306	1					
ANR	1703493	CompoundStatement		236:13:7014:7014	1702306	1					
ANR	1703494	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Internal pcre_fullinfo() error %d"" , rc )"	507:2:15420:15494	1702306	0	True				
ANR	1703495	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Internal pcre_fullinfo() error %d"" , rc )"		1702306	0					
ANR	1703496	Callee	php_error_docref		1702306	0					
ANR	1703497	Identifier	php_error_docref		1702306	0					
ANR	1703498	ArgumentList	NULL		1702306	1					
ANR	1703499	Argument	NULL		1702306	0					
ANR	1703500	Identifier	NULL		1702306	0					
ANR	1703501	Argument	E_WARNING		1702306	1					
ANR	1703502	Identifier	E_WARNING		1702306	0					
ANR	1703503	Argument	"""Internal pcre_fullinfo() error %d"""		1702306	2					
ANR	1703504	PrimaryExpression	"""Internal pcre_fullinfo() error %d"""		1702306	0					
ANR	1703505	Argument	rc		1702306	3					
ANR	1703506	Identifier	rc		1702306	0					
ANR	1703507	ReturnStatement	return NULL ;	508:2:15498:15509	1702306	1	True				
ANR	1703508	Identifier	NULL		1702306	0					
ANR	1703509	IfStatement	if ( ! ZSTR_IS_INTERNED ( regex ) || ! ( GC_FLAGS ( regex ) & IS_STR_PERMANENT ) )		1702306	52					
ANR	1703510	Condition	! ZSTR_IS_INTERNED ( regex ) || ! ( GC_FLAGS ( regex ) & IS_STR_PERMANENT )	519:5:15873:15937	1702306	0	True				
ANR	1703511	OrExpression	! ZSTR_IS_INTERNED ( regex ) || ! ( GC_FLAGS ( regex ) & IS_STR_PERMANENT )		1702306	0		||			
ANR	1703512	UnaryOperationExpression	! ZSTR_IS_INTERNED ( regex )		1702306	0					
ANR	1703513	UnaryOperator	!		1702306	0					
ANR	1703514	CallExpression	ZSTR_IS_INTERNED ( regex )		1702306	1					
ANR	1703515	Callee	ZSTR_IS_INTERNED		1702306	0					
ANR	1703516	Identifier	ZSTR_IS_INTERNED		1702306	0					
ANR	1703517	ArgumentList	regex		1702306	1					
ANR	1703518	Argument	regex		1702306	0					
ANR	1703519	Identifier	regex		1702306	0					
ANR	1703520	UnaryOperationExpression	! ( GC_FLAGS ( regex ) & IS_STR_PERMANENT )		1702306	1					
ANR	1703521	UnaryOperator	!		1702306	0					
ANR	1703522	BitAndExpression	GC_FLAGS ( regex ) & IS_STR_PERMANENT		1702306	1		&			
ANR	1703523	CallExpression	GC_FLAGS ( regex )		1702306	0					
ANR	1703524	Callee	GC_FLAGS		1702306	0					
ANR	1703525	Identifier	GC_FLAGS		1702306	0					
ANR	1703526	ArgumentList	regex		1702306	1					
ANR	1703527	Argument	regex		1702306	0					
ANR	1703528	Identifier	regex		1702306	0					
ANR	1703529	Identifier	IS_STR_PERMANENT		1702306	1					
ANR	1703530	CompoundStatement		250:2:7542:7614	1702306	1					
ANR	1703531	IdentifierDeclStatement	"zend_string * str = zend_string_init ( ZSTR_VAL ( regex ) , ZSTR_LEN ( regex ) , 1 ) ;"	520:2:15944:16016	1702306	0	True				
ANR	1703532	IdentifierDecl	"* str = zend_string_init ( ZSTR_VAL ( regex ) , ZSTR_LEN ( regex ) , 1 )"		1702306	0					
ANR	1703533	IdentifierDeclType	zend_string *		1702306	0					
ANR	1703534	Identifier	str		1702306	1					
ANR	1703535	AssignmentExpression	"* str = zend_string_init ( ZSTR_VAL ( regex ) , ZSTR_LEN ( regex ) , 1 )"		1702306	2		=			
ANR	1703536	Identifier	str		1702306	0					
ANR	1703537	CallExpression	"zend_string_init ( ZSTR_VAL ( regex ) , ZSTR_LEN ( regex ) , 1 )"		1702306	1					
ANR	1703538	Callee	zend_string_init		1702306	0					
ANR	1703539	Identifier	zend_string_init		1702306	0					
ANR	1703540	ArgumentList	ZSTR_VAL ( regex )		1702306	1					
ANR	1703541	Argument	ZSTR_VAL ( regex )		1702306	0					
ANR	1703542	CallExpression	ZSTR_VAL ( regex )		1702306	0					
ANR	1703543	Callee	ZSTR_VAL		1702306	0					
ANR	1703544	Identifier	ZSTR_VAL		1702306	0					
ANR	1703545	ArgumentList	regex		1702306	1					
ANR	1703546	Argument	regex		1702306	0					
ANR	1703547	Identifier	regex		1702306	0					
ANR	1703548	Argument	ZSTR_LEN ( regex )		1702306	1					
ANR	1703549	CallExpression	ZSTR_LEN ( regex )		1702306	0					
ANR	1703550	Callee	ZSTR_LEN		1702306	0					
ANR	1703551	Identifier	ZSTR_LEN		1702306	0					
ANR	1703552	ArgumentList	regex		1702306	1					
ANR	1703553	Argument	regex		1702306	0					
ANR	1703554	Identifier	regex		1702306	0					
ANR	1703555	Argument	1		1702306	2					
ANR	1703556	PrimaryExpression	1		1702306	0					
ANR	1703557	ExpressionStatement	GC_REFCOUNT ( str ) = 0	521:2:16020:16040	1702306	1	True				
ANR	1703558	AssignmentExpression	GC_REFCOUNT ( str ) = 0		1702306	0		=			
ANR	1703559	CallExpression	GC_REFCOUNT ( str )		1702306	0					
ANR	1703560	Callee	GC_REFCOUNT		1702306	0					
ANR	1703561	Identifier	GC_REFCOUNT		1702306	0					
ANR	1703562	ArgumentList	str		1702306	1					
ANR	1703563	Argument	str		1702306	0					
ANR	1703564	Identifier	str		1702306	0					
ANR	1703565	PrimaryExpression	0		1702306	1					
ANR	1703566	ExpressionStatement	ZSTR_H ( str ) = ZSTR_H ( regex )	522:2:16096:16123	1702306	2	True				
ANR	1703567	AssignmentExpression	ZSTR_H ( str ) = ZSTR_H ( regex )		1702306	0		=			
ANR	1703568	CallExpression	ZSTR_H ( str )		1702306	0					
ANR	1703569	Callee	ZSTR_H		1702306	0					
ANR	1703570	Identifier	ZSTR_H		1702306	0					
ANR	1703571	ArgumentList	str		1702306	1					
ANR	1703572	Argument	str		1702306	0					
ANR	1703573	Identifier	str		1702306	0					
ANR	1703574	CallExpression	ZSTR_H ( regex )		1702306	1					
ANR	1703575	Callee	ZSTR_H		1702306	0					
ANR	1703576	Identifier	ZSTR_H		1702306	0					
ANR	1703577	ArgumentList	regex		1702306	1					
ANR	1703578	Argument	regex		1702306	0					
ANR	1703579	Identifier	regex		1702306	0					
ANR	1703580	ExpressionStatement	regex = str	523:2:16127:16138	1702306	3	True				
ANR	1703581	AssignmentExpression	regex = str		1702306	0		=			
ANR	1703582	Identifier	regex		1702306	0					
ANR	1703583	Identifier	str		1702306	1					
ANR	1703584	ExpressionStatement	"pce = zend_hash_update_mem ( & PCRE_G ( pcre_cache ) , regex , & new_entry , sizeof ( pcre_cache_entry ) )"	526:1:16145:16237	1702306	53	True				
ANR	1703585	AssignmentExpression	"pce = zend_hash_update_mem ( & PCRE_G ( pcre_cache ) , regex , & new_entry , sizeof ( pcre_cache_entry ) )"		1702306	0		=			
ANR	1703586	Identifier	pce		1702306	0					
ANR	1703587	CallExpression	"zend_hash_update_mem ( & PCRE_G ( pcre_cache ) , regex , & new_entry , sizeof ( pcre_cache_entry ) )"		1702306	1					
ANR	1703588	Callee	zend_hash_update_mem		1702306	0					
ANR	1703589	Identifier	zend_hash_update_mem		1702306	0					
ANR	1703590	ArgumentList	& PCRE_G ( pcre_cache )		1702306	1					
ANR	1703591	Argument	& PCRE_G ( pcre_cache )		1702306	0					
ANR	1703592	UnaryOperationExpression	& PCRE_G ( pcre_cache )		1702306	0					
ANR	1703593	UnaryOperator	&		1702306	0					
ANR	1703594	CallExpression	PCRE_G ( pcre_cache )		1702306	1					
ANR	1703595	Callee	PCRE_G		1702306	0					
ANR	1703596	Identifier	PCRE_G		1702306	0					
ANR	1703597	ArgumentList	pcre_cache		1702306	1					
ANR	1703598	Argument	pcre_cache		1702306	0					
ANR	1703599	Identifier	pcre_cache		1702306	0					
ANR	1703600	Argument	regex		1702306	1					
ANR	1703601	Identifier	regex		1702306	0					
ANR	1703602	Argument	& new_entry		1702306	2					
ANR	1703603	UnaryOperationExpression	& new_entry		1702306	0					
ANR	1703604	UnaryOperator	&		1702306	0					
ANR	1703605	Identifier	new_entry		1702306	1					
ANR	1703606	Argument	sizeof ( pcre_cache_entry )		1702306	3					
ANR	1703607	SizeofExpression	sizeof ( pcre_cache_entry )		1702306	0					
ANR	1703608	Sizeof	sizeof		1702306	0					
ANR	1703609	SizeofOperand	pcre_cache_entry		1702306	1					
ANR	1703610	ReturnStatement	return pce ;	528:1:16241:16251	1702306	54	True				
ANR	1703611	Identifier	pce		1702306	0					
ANR	1703612	ReturnType	PHPAPI pcre_cache_entry *		1702306	1					
ANR	1703613	Identifier	pcre_get_compiled_regex_cache		1702306	2					
ANR	1703614	ParameterList	zend_string * regex		1702306	3					
ANR	1703615	Parameter	zend_string * regex	270:55:8381:8398	1702306	0	True				
ANR	1703616	ParameterType	zend_string *		1702306	0					
ANR	1703617	Identifier	regex		1702306	1					
ANR	1703618	CFGEntryNode	ENTRY		1702306		True				
ANR	1703619	CFGExitNode	EXIT		1702306		True				
ANR	1703620	Symbol	pp		1702306						
ANR	1703621	Symbol	& error		1702306						
ANR	1703622	Symbol	strchr		1702306						
ANR	1703623	Symbol	& new_entry . name_count		1702306						
ANR	1703624	Symbol	end_delimiter		1702306						
ANR	1703625	Symbol	PCRE_EXTENDED		1702306						
ANR	1703626	Symbol	extra -> flags		1702306						
ANR	1703627	Symbol	new_entry . tables		1702306						
ANR	1703628	Symbol	zend_string_init		1702306						
ANR	1703629	Symbol	tables		1702306						
ANR	1703630	Symbol	PCRE_INFO_NAMECOUNT		1702306						
ANR	1703631	Symbol	jit		1702306						
ANR	1703632	Symbol	delimiter		1702306						
ANR	1703633	Symbol	pcre_cache		1702306						
ANR	1703634	Symbol	locale_string		1702306						
ANR	1703635	Symbol	* ZSTR_VAL		1702306						
ANR	1703636	Symbol	poptions		1702306						
ANR	1703637	Symbol	isspace		1702306						
ANR	1703638	Symbol	brackets		1702306						
ANR	1703639	Symbol	new_entry		1702306						
ANR	1703640	Symbol	str		1702306						
ANR	1703641	Symbol	rc		1702306						
ANR	1703642	Symbol	regex		1702306						
ANR	1703643	Symbol	re		1702306						
ANR	1703644	Symbol	erroffset		1702306						
ANR	1703645	Symbol	new_entry . compile_options		1702306						
ANR	1703646	Symbol	coptions		1702306						
ANR	1703647	Symbol	BG		1702306						
ANR	1703648	Symbol	backtrack_limit		1702306						
ANR	1703649	Symbol	pattern		1702306						
ANR	1703650	Symbol	num_clean		1702306						
ANR	1703651	Symbol	pcre_compile		1702306						
ANR	1703652	Symbol	E_WARNING		1702306						
ANR	1703653	Symbol	recursion_limit		1702306						
ANR	1703654	Symbol	new_entry . preg_options		1702306						
ANR	1703655	Symbol	PCRE_INFO_CAPTURECOUNT		1702306						
ANR	1703656	Symbol	PCRE_CASELESS		1702306						
ANR	1703657	Symbol	new_entry . refcount		1702306						
ANR	1703658	Symbol	do_study		1702306						
ANR	1703659	Symbol	* ( unsigned char * ) p		1702306						
ANR	1703660	Symbol	zend_hash_num_elements		1702306						
ANR	1703661	Symbol	soptions		1702306						
ANR	1703662	Symbol	& PCRE_G		1702306						
ANR	1703663	Symbol	* ( unsigned char * ) & delimiter		1702306						
ANR	1703664	Symbol	PCRE_ANCHORED		1702306						
ANR	1703665	Symbol	PCRE_MULTILINE		1702306						
ANR	1703666	Symbol	PCRE_EXTRA_MATCH_LIMIT_RECURSION		1702306						
ANR	1703667	Symbol	p		1702306						
ANR	1703668	Symbol	IS_STR_PERSISTENT		1702306						
ANR	1703669	Symbol	pce -> locale		1702306						
ANR	1703670	Symbol	PCRE_CACHE_SIZE		1702306						
ANR	1703671	Symbol	GC_FLAGS		1702306						
ANR	1703672	Symbol	memcmp		1702306						
ANR	1703673	Symbol	& erroffset		1702306						
ANR	1703674	Symbol	zend_hash_find_ptr		1702306						
ANR	1703675	Symbol	NULL		1702306						
ANR	1703676	Symbol	isalnum		1702306						
ANR	1703677	Symbol	* pp		1702306						
ANR	1703678	Symbol	PCRE_UNGREEDY		1702306						
ANR	1703679	Symbol	zend_string_copy		1702306						
ANR	1703680	Symbol	PCRE_UCP		1702306						
ANR	1703681	Symbol	& new_entry . capture_count		1702306						
ANR	1703682	Symbol	start_delimiter		1702306						
ANR	1703683	Symbol	* extra		1702306						
ANR	1703684	Symbol	* pp ++		1702306						
ANR	1703685	Symbol	* pce		1702306						
ANR	1703686	Symbol	& delimiter		1702306						
ANR	1703687	Symbol	pcre_clean_cache		1702306						
ANR	1703688	Symbol	PREG_REPLACE_EVAL		1702306						
ANR	1703689	Symbol	extra -> match_limit		1702306						
ANR	1703690	Symbol	IS_STR_PERMANENT		1702306						
ANR	1703691	Symbol	PCRE_EXTRA		1702306						
ANR	1703692	Symbol	error		1702306						
ANR	1703693	Symbol	extra -> match_limit_recursion		1702306						
ANR	1703694	Symbol	ZSTR_H		1702306						
ANR	1703695	Symbol	estrndup		1702306						
ANR	1703696	Symbol	pce		1702306						
ANR	1703697	Symbol	new_entry . locale		1702306						
ANR	1703698	Symbol	extra		1702306						
ANR	1703699	Symbol	& new_entry		1702306						
ANR	1703700	Symbol	GC_REFCOUNT		1702306						
ANR	1703701	Symbol	new_entry . extra		1702306						
ANR	1703702	Symbol	new_entry . re		1702306						
ANR	1703703	Symbol	pcre_maketables		1702306						
ANR	1703704	Symbol	zend_hash_update_mem		1702306						
ANR	1703705	Symbol	* p ++		1702306						
ANR	1703706	Symbol	PCRE_DOLLAR_ENDONLY		1702306						
ANR	1703707	Symbol	pcre_study		1702306						
ANR	1703708	Symbol	& num_clean		1702306						
ANR	1703709	Symbol	pcre_fullinfo		1702306						
ANR	1703710	Symbol	ZSTR_VAL		1702306						
ANR	1703711	Symbol	PCRE_STUDY_JIT_COMPILE		1702306						
ANR	1703712	Symbol	PCRE_G		1702306						
ANR	1703713	Symbol	PCRE_DOTALL		1702306						
ANR	1703714	Symbol	ZSTR_LEN		1702306						
ANR	1703715	Symbol	PCRE_EXTRA_MATCH_LIMIT		1702306						
ANR	1703716	Symbol	ZSTR_IS_INTERNED		1702306						
ANR	1703717	Symbol	* p		1702306						
ANR	1703718	Symbol	PCRE_UTF8		1702306						
ANR	1703719	Function	pcre_get_compiled_regex	534:0:16301:16619							
ANR	1703720	FunctionDef	"pcre_get_compiled_regex (zend_string * regex , pcre_extra * * extra , int * preg_options)"		1703719	0					
ANR	1703721	CompoundStatement		535:0:16397:16619	1703719	0					
ANR	1703722	IdentifierDeclStatement	pcre_cache_entry * pce = pcre_get_compiled_regex_cache ( regex ) ;	536:1:16400:16461	1703719	0	True				
ANR	1703723	IdentifierDecl	* pce = pcre_get_compiled_regex_cache ( regex )		1703719	0					
ANR	1703724	IdentifierDeclType	pcre_cache_entry *		1703719	0					
ANR	1703725	Identifier	pce		1703719	1					
ANR	1703726	AssignmentExpression	* pce = pcre_get_compiled_regex_cache ( regex )		1703719	2		=			
ANR	1703727	Identifier	pce		1703719	0					
ANR	1703728	CallExpression	pcre_get_compiled_regex_cache ( regex )		1703719	1					
ANR	1703729	Callee	pcre_get_compiled_regex_cache		1703719	0					
ANR	1703730	Identifier	pcre_get_compiled_regex_cache		1703719	0					
ANR	1703731	ArgumentList	regex		1703719	1					
ANR	1703732	Argument	regex		1703719	0					
ANR	1703733	Identifier	regex		1703719	0					
ANR	1703734	IfStatement	if ( extra )		1703719	1					
ANR	1703735	Condition	extra	538:5:16469:16473	1703719	0	True				
ANR	1703736	Identifier	extra		1703719	0					
ANR	1703737	CompoundStatement		4:12:78:78	1703719	1					
ANR	1703738	ExpressionStatement	* extra = pce ? pce -> extra : NULL	539:2:16480:16512	1703719	0	True				
ANR	1703739	AssignmentExpression	* extra = pce ? pce -> extra : NULL		1703719	0		=			
ANR	1703740	UnaryOperationExpression	* extra		1703719	0					
ANR	1703741	UnaryOperator	*		1703719	0					
ANR	1703742	Identifier	extra		1703719	1					
ANR	1703743	ConditionalExpression	pce ? pce -> extra : NULL		1703719	1					
ANR	1703744	Condition	pce		1703719	0					
ANR	1703745	Identifier	pce		1703719	0					
ANR	1703746	PtrMemberAccess	pce -> extra		1703719	1					
ANR	1703747	Identifier	pce		1703719	0					
ANR	1703748	Identifier	extra		1703719	1					
ANR	1703749	Identifier	NULL		1703719	2					
ANR	1703750	IfStatement	if ( preg_options )		1703719	2					
ANR	1703751	Condition	preg_options	541:5:16522:16533	1703719	0	True				
ANR	1703752	Identifier	preg_options		1703719	0					
ANR	1703753	CompoundStatement		7:19:138:138	1703719	1					
ANR	1703754	ExpressionStatement	* preg_options = pce ? pce -> preg_options : 0	542:2:16540:16583	1703719	0	True				
ANR	1703755	AssignmentExpression	* preg_options = pce ? pce -> preg_options : 0		1703719	0		=			
ANR	1703756	UnaryOperationExpression	* preg_options		1703719	0					
ANR	1703757	UnaryOperator	*		1703719	0					
ANR	1703758	Identifier	preg_options		1703719	1					
ANR	1703759	ConditionalExpression	pce ? pce -> preg_options : 0		1703719	1					
ANR	1703760	Condition	pce		1703719	0					
ANR	1703761	Identifier	pce		1703719	0					
ANR	1703762	PtrMemberAccess	pce -> preg_options		1703719	1					
ANR	1703763	Identifier	pce		1703719	0					
ANR	1703764	Identifier	preg_options		1703719	1					
ANR	1703765	PrimaryExpression	0		1703719	2					
ANR	1703766	ReturnStatement	return pce ? pce -> re : NULL ;	545:1:16590:16617	1703719	3	True				
ANR	1703767	ConditionalExpression	pce ? pce -> re : NULL		1703719	0					
ANR	1703768	Condition	pce		1703719	0					
ANR	1703769	Identifier	pce		1703719	0					
ANR	1703770	PtrMemberAccess	pce -> re		1703719	1					
ANR	1703771	Identifier	pce		1703719	0					
ANR	1703772	Identifier	re		1703719	1					
ANR	1703773	Identifier	NULL		1703719	2					
ANR	1703774	ReturnType	PHPAPI pcre *		1703719	1					
ANR	1703775	Identifier	pcre_get_compiled_regex		1703719	2					
ANR	1703776	ParameterList	"zend_string * regex , pcre_extra * * extra , int * preg_options"		1703719	3					
ANR	1703777	Parameter	zend_string * regex	534:37:16338:16355	1703719	0	True				
ANR	1703778	ParameterType	zend_string *		1703719	0					
ANR	1703779	Identifier	regex		1703719	1					
ANR	1703780	Parameter	pcre_extra * * extra	534:57:16358:16375	1703719	1	True				
ANR	1703781	ParameterType	pcre_extra * *		1703719	0					
ANR	1703782	Identifier	extra		1703719	1					
ANR	1703783	Parameter	int * preg_options	534:77:16378:16394	1703719	2	True				
ANR	1703784	ParameterType	int *		1703719	0					
ANR	1703785	Identifier	preg_options		1703719	1					
ANR	1703786	CFGEntryNode	ENTRY		1703719		True				
ANR	1703787	CFGExitNode	EXIT		1703719		True				
ANR	1703788	Symbol	regex		1703719						
ANR	1703789	Symbol	* extra		1703719						
ANR	1703790	Symbol	pce		1703719						
ANR	1703791	Symbol	NULL		1703719						
ANR	1703792	Symbol	pce -> preg_options		1703719						
ANR	1703793	Symbol	pce -> extra		1703719						
ANR	1703794	Symbol	* preg_options		1703719						
ANR	1703795	Symbol	extra		1703719						
ANR	1703796	Symbol	pcre_get_compiled_regex_cache		1703719						
ANR	1703797	Symbol	pce -> re		1703719						
ANR	1703798	Symbol	preg_options		1703719						
ANR	1703799	Symbol	* pce		1703719						
ANR	1703800	Function	pcre_get_compiled_regex_ex	551:0:16670:17093							
ANR	1703801	FunctionDef	"pcre_get_compiled_regex_ex (zend_string * regex , pcre_extra * * extra , int * preg_options , int * compile_options)"		1703800	0					
ANR	1703802	CompoundStatement		552:0:16791:17093	1703800	0					
ANR	1703803	IdentifierDeclStatement	pcre_cache_entry * pce = pcre_get_compiled_regex_cache ( regex ) ;	553:1:16794:16855	1703800	0	True				
ANR	1703804	IdentifierDecl	* pce = pcre_get_compiled_regex_cache ( regex )		1703800	0					
ANR	1703805	IdentifierDeclType	pcre_cache_entry *		1703800	0					
ANR	1703806	Identifier	pce		1703800	1					
ANR	1703807	AssignmentExpression	* pce = pcre_get_compiled_regex_cache ( regex )		1703800	2		=			
ANR	1703808	Identifier	pce		1703800	0					
ANR	1703809	CallExpression	pcre_get_compiled_regex_cache ( regex )		1703800	1					
ANR	1703810	Callee	pcre_get_compiled_regex_cache		1703800	0					
ANR	1703811	Identifier	pcre_get_compiled_regex_cache		1703800	0					
ANR	1703812	ArgumentList	regex		1703800	1					
ANR	1703813	Argument	regex		1703800	0					
ANR	1703814	Identifier	regex		1703800	0					
ANR	1703815	IfStatement	if ( extra )		1703800	1					
ANR	1703816	Condition	extra	555:5:16863:16867	1703800	0	True				
ANR	1703817	Identifier	extra		1703800	0					
ANR	1703818	CompoundStatement		4:12:78:78	1703800	1					
ANR	1703819	ExpressionStatement	* extra = pce ? pce -> extra : NULL	556:2:16874:16906	1703800	0	True				
ANR	1703820	AssignmentExpression	* extra = pce ? pce -> extra : NULL		1703800	0		=			
ANR	1703821	UnaryOperationExpression	* extra		1703800	0					
ANR	1703822	UnaryOperator	*		1703800	0					
ANR	1703823	Identifier	extra		1703800	1					
ANR	1703824	ConditionalExpression	pce ? pce -> extra : NULL		1703800	1					
ANR	1703825	Condition	pce		1703800	0					
ANR	1703826	Identifier	pce		1703800	0					
ANR	1703827	PtrMemberAccess	pce -> extra		1703800	1					
ANR	1703828	Identifier	pce		1703800	0					
ANR	1703829	Identifier	extra		1703800	1					
ANR	1703830	Identifier	NULL		1703800	2					
ANR	1703831	IfStatement	if ( preg_options )		1703800	2					
ANR	1703832	Condition	preg_options	558:5:16916:16927	1703800	0	True				
ANR	1703833	Identifier	preg_options		1703800	0					
ANR	1703834	CompoundStatement		7:19:138:138	1703800	1					
ANR	1703835	ExpressionStatement	* preg_options = pce ? pce -> preg_options : 0	559:2:16934:16977	1703800	0	True				
ANR	1703836	AssignmentExpression	* preg_options = pce ? pce -> preg_options : 0		1703800	0		=			
ANR	1703837	UnaryOperationExpression	* preg_options		1703800	0					
ANR	1703838	UnaryOperator	*		1703800	0					
ANR	1703839	Identifier	preg_options		1703800	1					
ANR	1703840	ConditionalExpression	pce ? pce -> preg_options : 0		1703800	1					
ANR	1703841	Condition	pce		1703800	0					
ANR	1703842	Identifier	pce		1703800	0					
ANR	1703843	PtrMemberAccess	pce -> preg_options		1703800	1					
ANR	1703844	Identifier	pce		1703800	0					
ANR	1703845	Identifier	preg_options		1703800	1					
ANR	1703846	PrimaryExpression	0		1703800	2					
ANR	1703847	IfStatement	if ( compile_options )		1703800	3					
ANR	1703848	Condition	compile_options	561:5:16987:17001	1703800	0	True				
ANR	1703849	Identifier	compile_options		1703800	0					
ANR	1703850	CompoundStatement		10:22:212:212	1703800	1					
ANR	1703851	ExpressionStatement	* compile_options = pce ? pce -> compile_options : 0	562:2:17008:17057	1703800	0	True				
ANR	1703852	AssignmentExpression	* compile_options = pce ? pce -> compile_options : 0		1703800	0		=			
ANR	1703853	UnaryOperationExpression	* compile_options		1703800	0					
ANR	1703854	UnaryOperator	*		1703800	0					
ANR	1703855	Identifier	compile_options		1703800	1					
ANR	1703856	ConditionalExpression	pce ? pce -> compile_options : 0		1703800	1					
ANR	1703857	Condition	pce		1703800	0					
ANR	1703858	Identifier	pce		1703800	0					
ANR	1703859	PtrMemberAccess	pce -> compile_options		1703800	1					
ANR	1703860	Identifier	pce		1703800	0					
ANR	1703861	Identifier	compile_options		1703800	1					
ANR	1703862	PrimaryExpression	0		1703800	2					
ANR	1703863	ReturnStatement	return pce ? pce -> re : NULL ;	565:1:17064:17091	1703800	4	True				
ANR	1703864	ConditionalExpression	pce ? pce -> re : NULL		1703800	0					
ANR	1703865	Condition	pce		1703800	0					
ANR	1703866	Identifier	pce		1703800	0					
ANR	1703867	PtrMemberAccess	pce -> re		1703800	1					
ANR	1703868	Identifier	pce		1703800	0					
ANR	1703869	Identifier	re		1703800	1					
ANR	1703870	Identifier	NULL		1703800	2					
ANR	1703871	ReturnType	PHPAPI pcre *		1703800	1					
ANR	1703872	Identifier	pcre_get_compiled_regex_ex		1703800	2					
ANR	1703873	ParameterList	"zend_string * regex , pcre_extra * * extra , int * preg_options , int * compile_options"		1703800	3					
ANR	1703874	Parameter	zend_string * regex	551:40:16710:16727	1703800	0	True				
ANR	1703875	ParameterType	zend_string *		1703800	0					
ANR	1703876	Identifier	regex		1703800	1					
ANR	1703877	Parameter	pcre_extra * * extra	551:60:16730:16747	1703800	1	True				
ANR	1703878	ParameterType	pcre_extra * *		1703800	0					
ANR	1703879	Identifier	extra		1703800	1					
ANR	1703880	Parameter	int * preg_options	551:80:16750:16766	1703800	2	True				
ANR	1703881	ParameterType	int *		1703800	0					
ANR	1703882	Identifier	preg_options		1703800	1					
ANR	1703883	Parameter	int * compile_options	551:99:16769:16788	1703800	3	True				
ANR	1703884	ParameterType	int *		1703800	0					
ANR	1703885	Identifier	compile_options		1703800	1					
ANR	1703886	CFGEntryNode	ENTRY		1703800		True				
ANR	1703887	CFGExitNode	EXIT		1703800		True				
ANR	1703888	Symbol	NULL		1703800						
ANR	1703889	Symbol	pce -> preg_options		1703800						
ANR	1703890	Symbol	* compile_options		1703800						
ANR	1703891	Symbol	pce -> extra		1703800						
ANR	1703892	Symbol	pcre_get_compiled_regex_cache		1703800						
ANR	1703893	Symbol	pce -> compile_options		1703800						
ANR	1703894	Symbol	preg_options		1703800						
ANR	1703895	Symbol	regex		1703800						
ANR	1703896	Symbol	* extra		1703800						
ANR	1703897	Symbol	pce		1703800						
ANR	1703898	Symbol	* preg_options		1703800						
ANR	1703899	Symbol	extra		1703800						
ANR	1703900	Symbol	compile_options		1703800						
ANR	1703901	Symbol	pce -> re		1703800						
ANR	1703902	Symbol	* pce		1703800						
ANR	1703903	Function	add_offset_pair	570:0:17132:17695							
ANR	1703904	FunctionDef	"add_offset_pair (zval * result , char * str , int len , int offset , char * name)"		1703903	0					
ANR	1703905	CompoundStatement		571:0:17225:17695	1703903	0					
ANR	1703906	IdentifierDeclStatement	"zval match_pair , tmp ;"	572:1:17228:17248	1703903	0	True				
ANR	1703907	IdentifierDecl	match_pair		1703903	0					
ANR	1703908	IdentifierDeclType	zval		1703903	0					
ANR	1703909	Identifier	match_pair		1703903	1					
ANR	1703910	IdentifierDecl	tmp		1703903	1					
ANR	1703911	IdentifierDeclType	zval		1703903	0					
ANR	1703912	Identifier	tmp		1703903	1					
ANR	1703913	ExpressionStatement	"array_init_size ( & match_pair , 2 )"	574:1:17252:17283	1703903	1	True				
ANR	1703914	CallExpression	"array_init_size ( & match_pair , 2 )"		1703903	0					
ANR	1703915	Callee	array_init_size		1703903	0					
ANR	1703916	Identifier	array_init_size		1703903	0					
ANR	1703917	ArgumentList	& match_pair		1703903	1					
ANR	1703918	Argument	& match_pair		1703903	0					
ANR	1703919	UnaryOperationExpression	& match_pair		1703903	0					
ANR	1703920	UnaryOperator	&		1703903	0					
ANR	1703921	Identifier	match_pair		1703903	1					
ANR	1703922	Argument	2		1703903	1					
ANR	1703923	PrimaryExpression	2		1703903	0					
ANR	1703924	ExpressionStatement	"ZVAL_STRINGL ( & tmp , str , len )"	577:1:17334:17362	1703903	2	True				
ANR	1703925	CallExpression	"ZVAL_STRINGL ( & tmp , str , len )"		1703903	0					
ANR	1703926	Callee	ZVAL_STRINGL		1703903	0					
ANR	1703927	Identifier	ZVAL_STRINGL		1703903	0					
ANR	1703928	ArgumentList	& tmp		1703903	1					
ANR	1703929	Argument	& tmp		1703903	0					
ANR	1703930	UnaryOperationExpression	& tmp		1703903	0					
ANR	1703931	UnaryOperator	&		1703903	0					
ANR	1703932	Identifier	tmp		1703903	1					
ANR	1703933	Argument	str		1703903	1					
ANR	1703934	Identifier	str		1703903	0					
ANR	1703935	Argument	len		1703903	2					
ANR	1703936	Identifier	len		1703903	0					
ANR	1703937	ExpressionStatement	"zend_hash_next_index_insert_new ( Z_ARRVAL ( match_pair ) , & tmp )"	578:1:17365:17424	1703903	3	True				
ANR	1703938	CallExpression	"zend_hash_next_index_insert_new ( Z_ARRVAL ( match_pair ) , & tmp )"		1703903	0					
ANR	1703939	Callee	zend_hash_next_index_insert_new		1703903	0					
ANR	1703940	Identifier	zend_hash_next_index_insert_new		1703903	0					
ANR	1703941	ArgumentList	Z_ARRVAL ( match_pair )		1703903	1					
ANR	1703942	Argument	Z_ARRVAL ( match_pair )		1703903	0					
ANR	1703943	CallExpression	Z_ARRVAL ( match_pair )		1703903	0					
ANR	1703944	Callee	Z_ARRVAL		1703903	0					
ANR	1703945	Identifier	Z_ARRVAL		1703903	0					
ANR	1703946	ArgumentList	match_pair		1703903	1					
ANR	1703947	Argument	match_pair		1703903	0					
ANR	1703948	Identifier	match_pair		1703903	0					
ANR	1703949	Argument	& tmp		1703903	1					
ANR	1703950	UnaryOperationExpression	& tmp		1703903	0					
ANR	1703951	UnaryOperator	&		1703903	0					
ANR	1703952	Identifier	tmp		1703903	1					
ANR	1703953	ExpressionStatement	"ZVAL_LONG ( & tmp , offset )"	579:1:17427:17450	1703903	4	True				
ANR	1703954	CallExpression	"ZVAL_LONG ( & tmp , offset )"		1703903	0					
ANR	1703955	Callee	ZVAL_LONG		1703903	0					
ANR	1703956	Identifier	ZVAL_LONG		1703903	0					
ANR	1703957	ArgumentList	& tmp		1703903	1					
ANR	1703958	Argument	& tmp		1703903	0					
ANR	1703959	UnaryOperationExpression	& tmp		1703903	0					
ANR	1703960	UnaryOperator	&		1703903	0					
ANR	1703961	Identifier	tmp		1703903	1					
ANR	1703962	Argument	offset		1703903	1					
ANR	1703963	Identifier	offset		1703903	0					
ANR	1703964	ExpressionStatement	"zend_hash_next_index_insert_new ( Z_ARRVAL ( match_pair ) , & tmp )"	580:1:17453:17512	1703903	5	True				
ANR	1703965	CallExpression	"zend_hash_next_index_insert_new ( Z_ARRVAL ( match_pair ) , & tmp )"		1703903	0					
ANR	1703966	Callee	zend_hash_next_index_insert_new		1703903	0					
ANR	1703967	Identifier	zend_hash_next_index_insert_new		1703903	0					
ANR	1703968	ArgumentList	Z_ARRVAL ( match_pair )		1703903	1					
ANR	1703969	Argument	Z_ARRVAL ( match_pair )		1703903	0					
ANR	1703970	CallExpression	Z_ARRVAL ( match_pair )		1703903	0					
ANR	1703971	Callee	Z_ARRVAL		1703903	0					
ANR	1703972	Identifier	Z_ARRVAL		1703903	0					
ANR	1703973	ArgumentList	match_pair		1703903	1					
ANR	1703974	Argument	match_pair		1703903	0					
ANR	1703975	Identifier	match_pair		1703903	0					
ANR	1703976	Argument	& tmp		1703903	1					
ANR	1703977	UnaryOperationExpression	& tmp		1703903	0					
ANR	1703978	UnaryOperator	&		1703903	0					
ANR	1703979	Identifier	tmp		1703903	1					
ANR	1703980	IfStatement	if ( name )		1703903	6					
ANR	1703981	Condition	name	582:5:17520:17523	1703903	0	True				
ANR	1703982	Identifier	name		1703903	0					
ANR	1703983	CompoundStatement		12:11:300:300	1703903	1					
ANR	1703984	ExpressionStatement	Z_ADDREF ( match_pair )	583:2:17530:17550	1703903	0	True				
ANR	1703985	CallExpression	Z_ADDREF ( match_pair )		1703903	0					
ANR	1703986	Callee	Z_ADDREF		1703903	0					
ANR	1703987	Identifier	Z_ADDREF		1703903	0					
ANR	1703988	ArgumentList	match_pair		1703903	1					
ANR	1703989	Argument	match_pair		1703903	0					
ANR	1703990	Identifier	match_pair		1703903	0					
ANR	1703991	ExpressionStatement	"zend_hash_str_update ( Z_ARRVAL_P ( result ) , name , strlen ( name ) , & match_pair )"	584:2:17554:17627	1703903	1	True				
ANR	1703992	CallExpression	"zend_hash_str_update ( Z_ARRVAL_P ( result ) , name , strlen ( name ) , & match_pair )"		1703903	0					
ANR	1703993	Callee	zend_hash_str_update		1703903	0					
ANR	1703994	Identifier	zend_hash_str_update		1703903	0					
ANR	1703995	ArgumentList	Z_ARRVAL_P ( result )		1703903	1					
ANR	1703996	Argument	Z_ARRVAL_P ( result )		1703903	0					
ANR	1703997	CallExpression	Z_ARRVAL_P ( result )		1703903	0					
ANR	1703998	Callee	Z_ARRVAL_P		1703903	0					
ANR	1703999	Identifier	Z_ARRVAL_P		1703903	0					
ANR	1704000	ArgumentList	result		1703903	1					
ANR	1704001	Argument	result		1703903	0					
ANR	1704002	Identifier	result		1703903	0					
ANR	1704003	Argument	name		1703903	1					
ANR	1704004	Identifier	name		1703903	0					
ANR	1704005	Argument	strlen ( name )		1703903	2					
ANR	1704006	CallExpression	strlen ( name )		1703903	0					
ANR	1704007	Callee	strlen		1703903	0					
ANR	1704008	Identifier	strlen		1703903	0					
ANR	1704009	ArgumentList	name		1703903	1					
ANR	1704010	Argument	name		1703903	0					
ANR	1704011	Identifier	name		1703903	0					
ANR	1704012	Argument	& match_pair		1703903	3					
ANR	1704013	UnaryOperationExpression	& match_pair		1703903	0					
ANR	1704014	UnaryOperator	&		1703903	0					
ANR	1704015	Identifier	match_pair		1703903	1					
ANR	1704016	ExpressionStatement	"zend_hash_next_index_insert ( Z_ARRVAL_P ( result ) , & match_pair )"	586:1:17633:17693	1703903	7	True				
ANR	1704017	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( result ) , & match_pair )"		1703903	0					
ANR	1704018	Callee	zend_hash_next_index_insert		1703903	0					
ANR	1704019	Identifier	zend_hash_next_index_insert		1703903	0					
ANR	1704020	ArgumentList	Z_ARRVAL_P ( result )		1703903	1					
ANR	1704021	Argument	Z_ARRVAL_P ( result )		1703903	0					
ANR	1704022	CallExpression	Z_ARRVAL_P ( result )		1703903	0					
ANR	1704023	Callee	Z_ARRVAL_P		1703903	0					
ANR	1704024	Identifier	Z_ARRVAL_P		1703903	0					
ANR	1704025	ArgumentList	result		1703903	1					
ANR	1704026	Argument	result		1703903	0					
ANR	1704027	Identifier	result		1703903	0					
ANR	1704028	Argument	& match_pair		1703903	1					
ANR	1704029	UnaryOperationExpression	& match_pair		1703903	0					
ANR	1704030	UnaryOperator	&		1703903	0					
ANR	1704031	Identifier	match_pair		1703903	1					
ANR	1704032	ReturnType	static inline void		1703903	1					
ANR	1704033	Identifier	add_offset_pair		1703903	2					
ANR	1704034	ParameterList	"zval * result , char * str , int len , int offset , char * name"		1703903	3					
ANR	1704035	Parameter	zval * result	570:35:17167:17178	1703903	0	True				
ANR	1704036	ParameterType	zval *		1703903	0					
ANR	1704037	Identifier	result		1703903	1					
ANR	1704038	Parameter	char * str	570:49:17181:17189	1703903	1	True				
ANR	1704039	ParameterType	char *		1703903	0					
ANR	1704040	Identifier	str		1703903	1					
ANR	1704041	Parameter	int len	570:60:17192:17198	1703903	2	True				
ANR	1704042	ParameterType	int		1703903	0					
ANR	1704043	Identifier	len		1703903	1					
ANR	1704044	Parameter	int offset	570:69:17201:17210	1703903	3	True				
ANR	1704045	ParameterType	int		1703903	0					
ANR	1704046	Identifier	offset		1703903	1					
ANR	1704047	Parameter	char * name	570:81:17213:17222	1703903	4	True				
ANR	1704048	ParameterType	char *		1703903	0					
ANR	1704049	Identifier	name		1703903	1					
ANR	1704050	CFGEntryNode	ENTRY		1703903		True				
ANR	1704051	CFGExitNode	EXIT		1703903		True				
ANR	1704052	Symbol	result		1703903						
ANR	1704053	Symbol	str		1703903						
ANR	1704054	Symbol	strlen		1703903						
ANR	1704055	Symbol	len		1703903						
ANR	1704056	Symbol	offset		1703903						
ANR	1704057	Symbol	tmp		1703903						
ANR	1704058	Symbol	name		1703903						
ANR	1704059	Symbol	& tmp		1703903						
ANR	1704060	Symbol	Z_ARRVAL		1703903						
ANR	1704061	Symbol	Z_ARRVAL_P		1703903						
ANR	1704062	Symbol	& match_pair		1703903						
ANR	1704063	Symbol	match_pair		1703903						
ANR	1704064	DeclStmt									
ANR	1704065	Decl							zend_string	zend_string *	regex
ANR	1704066	DeclStmt									
ANR	1704067	Decl							zend_string	zend_string *	subject
ANR	1704068	DeclStmt									
ANR	1704069	Decl							pcre_cache_entry	pcre_cache_entry *	pce
ANR	1704070	DeclStmt									
ANR	1704071	Decl							zval	zval *	subpats
ANR	1704072	DeclStmt									
ANR	1704073	Decl							zend_long	zend_long	flags
ANR	1704074	DeclStmt									
ANR	1704075	Decl							zend_long	zend_long	start_offset
ANR	1704076	Function	php_pcre_match_impl	634:0:19038:29585							
ANR	1704077	FunctionDef	"php_pcre_match_impl (pcre_cache_entry * pce , char * subject , int subject_len , zval * return_value , zval * subpats , int global , int use_flags , zend_long flags , zend_long start_offset)"		1704076	0					
ANR	1704078	CompoundStatement		636:0:19229:29585	1704076	0					
ANR	1704079	IdentifierDeclStatement	"zval result_set , * match_sets = NULL ;"	637:1:19232:19346	1704076	0	True				
ANR	1704080	IdentifierDecl	result_set		1704076	0					
ANR	1704081	IdentifierDeclType	zval		1704076	0					
ANR	1704082	Identifier	result_set		1704076	1					
ANR	1704083	IdentifierDecl	* match_sets = NULL		1704076	1					
ANR	1704084	IdentifierDeclType	zval *		1704076	0					
ANR	1704085	Identifier	match_sets		1704076	1					
ANR	1704086	AssignmentExpression	* match_sets = NULL		1704076	2		=			
ANR	1704087	Identifier	NULL		1704076	0					
ANR	1704088	Identifier	NULL		1704076	1					
ANR	1704089	IdentifierDeclStatement	pcre_extra * extra = pce -> extra ;	641:1:19437:19468	1704076	1	True				
ANR	1704090	IdentifierDecl	* extra = pce -> extra		1704076	0					
ANR	1704091	IdentifierDeclType	pcre_extra *		1704076	0					
ANR	1704092	Identifier	extra		1704076	1					
ANR	1704093	AssignmentExpression	* extra = pce -> extra		1704076	2		=			
ANR	1704094	Identifier	extra		1704076	0					
ANR	1704095	PtrMemberAccess	pce -> extra		1704076	1					
ANR	1704096	Identifier	pce		1704076	0					
ANR	1704097	Identifier	extra		1704076	1					
ANR	1704098	IdentifierDeclStatement	pcre_extra extra_data ;	642:1:19502:19525	1704076	2	True				
ANR	1704099	IdentifierDecl	extra_data		1704076	0					
ANR	1704100	IdentifierDeclType	pcre_extra		1704076	0					
ANR	1704101	Identifier	extra_data		1704076	1					
ANR	1704102	IdentifierDeclStatement	int exoptions = 0 ;	643:1:19565:19586	1704076	3	True				
ANR	1704103	IdentifierDecl	exoptions = 0		1704076	0					
ANR	1704104	IdentifierDeclType	int		1704076	0					
ANR	1704105	Identifier	exoptions		1704076	1					
ANR	1704106	AssignmentExpression	exoptions = 0		1704076	2		=			
ANR	1704107	Identifier	exoptions		1704076	0					
ANR	1704108	PrimaryExpression	0		1704076	1					
ANR	1704109	IdentifierDeclStatement	int count = 0 ;	644:1:19614:19631	1704076	4	True				
ANR	1704110	IdentifierDecl	count = 0		1704076	0					
ANR	1704111	IdentifierDeclType	int		1704076	0					
ANR	1704112	Identifier	count		1704076	1					
ANR	1704113	AssignmentExpression	count = 0		1704076	2		=			
ANR	1704114	Identifier	count		1704076	0					
ANR	1704115	PrimaryExpression	0		1704076	1					
ANR	1704116	IdentifierDeclStatement	int * offsets ;	645:1:19671:19686	1704076	5	True				
ANR	1704117	IdentifierDecl	* offsets		1704076	0					
ANR	1704118	IdentifierDeclType	int *		1704076	0					
ANR	1704119	Identifier	offsets		1704076	1					
ANR	1704120	IdentifierDeclStatement	int num_subpats ;	646:1:19725:19744	1704076	6	True				
ANR	1704121	IdentifierDecl	num_subpats		1704076	0					
ANR	1704122	IdentifierDeclType	int		1704076	0					
ANR	1704123	Identifier	num_subpats		1704076	1					
ANR	1704124	IdentifierDeclStatement	int size_offsets ;	647:1:19785:19805	1704076	7	True				
ANR	1704125	IdentifierDecl	size_offsets		1704076	0					
ANR	1704126	IdentifierDeclType	int		1704076	0					
ANR	1704127	Identifier	size_offsets		1704076	1					
ANR	1704128	IdentifierDeclStatement	int matched ;	648:1:19841:19856	1704076	8	True				
ANR	1704129	IdentifierDecl	matched		1704076	0					
ANR	1704130	IdentifierDeclType	int		1704076	0					
ANR	1704131	Identifier	matched		1704076	1					
ANR	1704132	IdentifierDeclStatement	int g_notempty = 0 ;	649:1:19888:19910	1704076	9	True				
ANR	1704133	IdentifierDecl	g_notempty = 0		1704076	0					
ANR	1704134	IdentifierDeclType	int		1704076	0					
ANR	1704135	Identifier	g_notempty		1704076	1					
ANR	1704136	AssignmentExpression	g_notempty = 0		1704076	2		=			
ANR	1704137	Identifier	g_notempty		1704076	0					
ANR	1704138	PrimaryExpression	0		1704076	1					
ANR	1704139	IdentifierDeclStatement	const char * * stringlist ;	650:1:19952:19978	1704076	10	True				
ANR	1704140	IdentifierDecl	* * stringlist		1704076	0					
ANR	1704141	IdentifierDeclType	const char * *		1704076	0					
ANR	1704142	Identifier	stringlist		1704076	1					
ANR	1704143	IdentifierDeclStatement	char * * subpat_names ;	651:1:20014:20038	1704076	11	True				
ANR	1704144	IdentifierDecl	* * subpat_names		1704076	0					
ANR	1704145	IdentifierDeclType	char * *		1704076	0					
ANR	1704146	Identifier	subpat_names		1704076	1					
ANR	1704147	IdentifierDeclStatement	int i ;	652:1:20076:20085	1704076	12	True				
ANR	1704148	IdentifierDecl	i		1704076	0					
ANR	1704149	IdentifierDeclType	int		1704076	0					
ANR	1704150	Identifier	i		1704076	1					
ANR	1704151	IdentifierDeclStatement	int subpats_order ;	653:1:20088:20109	1704076	13	True				
ANR	1704152	IdentifierDecl	subpats_order		1704076	0					
ANR	1704153	IdentifierDeclType	int		1704076	0					
ANR	1704154	Identifier	subpats_order		1704076	1					
ANR	1704155	IdentifierDeclStatement	int offset_capture ;	654:1:20147:20169	1704076	14	True				
ANR	1704156	IdentifierDecl	offset_capture		1704076	0					
ANR	1704157	IdentifierDeclType	int		1704076	0					
ANR	1704158	Identifier	offset_capture		1704076	1					
ANR	1704159	IdentifierDeclStatement	unsigned char * mark = NULL ;	655:1:20211:20239	1704076	15	True				
ANR	1704160	IdentifierDecl	* mark = NULL		1704076	0					
ANR	1704161	IdentifierDeclType	unsigned char *		1704076	0					
ANR	1704162	Identifier	mark		1704076	1					
ANR	1704163	AssignmentExpression	* mark = NULL		1704076	2		=			
ANR	1704164	Identifier	NULL		1704076	0					
ANR	1704165	Identifier	NULL		1704076	1					
ANR	1704166	IdentifierDeclStatement	zval marks ;	656:1:20275:20296	1704076	16	True				
ANR	1704167	IdentifierDecl	marks		1704076	0					
ANR	1704168	IdentifierDeclType	zval		1704076	0					
ANR	1704169	Identifier	marks		1704076	1					
ANR	1704170	ExpressionStatement	ALLOCA_FLAG ( use_heap )	657:1:20350:20371	1704076	17	True				
ANR	1704171	CallExpression	ALLOCA_FLAG ( use_heap )		1704076	0					
ANR	1704172	Callee	ALLOCA_FLAG		1704076	0					
ANR	1704173	Identifier	ALLOCA_FLAG		1704076	0					
ANR	1704174	ArgumentList	use_heap		1704076	1					
ANR	1704175	Argument	use_heap		1704076	0					
ANR	1704176	Identifier	use_heap		1704076	0					
ANR	1704177	ExpressionStatement	ZVAL_UNDEF ( & marks )	659:1:20375:20393	1704076	18	True				
ANR	1704178	CallExpression	ZVAL_UNDEF ( & marks )		1704076	0					
ANR	1704179	Callee	ZVAL_UNDEF		1704076	0					
ANR	1704180	Identifier	ZVAL_UNDEF		1704076	0					
ANR	1704181	ArgumentList	& marks		1704076	1					
ANR	1704182	Argument	& marks		1704076	0					
ANR	1704183	UnaryOperationExpression	& marks		1704076	0					
ANR	1704184	UnaryOperator	&		1704076	0					
ANR	1704185	Identifier	marks		1704076	1					
ANR	1704186	IfStatement	if ( subpats != NULL )		1704076	19					
ANR	1704187	Condition	subpats != NULL	662:5:20475:20489	1704076	0	True				
ANR	1704188	EqualityExpression	subpats != NULL		1704076	0		!=			
ANR	1704189	Identifier	subpats		1704076	0					
ANR	1704190	Identifier	NULL		1704076	1					
ANR	1704191	CompoundStatement		27:22:1262:1262	1704076	1					
ANR	1704192	ExpressionStatement	zval_dtor ( subpats )	663:2:20496:20514	1704076	0	True				
ANR	1704193	CallExpression	zval_dtor ( subpats )		1704076	0					
ANR	1704194	Callee	zval_dtor		1704076	0					
ANR	1704195	Identifier	zval_dtor		1704076	0					
ANR	1704196	ArgumentList	subpats		1704076	1					
ANR	1704197	Argument	subpats		1704076	0					
ANR	1704198	Identifier	subpats		1704076	0					
ANR	1704199	ExpressionStatement	array_init ( subpats )	664:2:20518:20537	1704076	1	True				
ANR	1704200	CallExpression	array_init ( subpats )		1704076	0					
ANR	1704201	Callee	array_init		1704076	0					
ANR	1704202	Identifier	array_init		1704076	0					
ANR	1704203	ArgumentList	subpats		1704076	1					
ANR	1704204	Argument	subpats		1704076	0					
ANR	1704205	Identifier	subpats		1704076	0					
ANR	1704206	ExpressionStatement	subpats_order = global ? PREG_PATTERN_ORDER : 0	667:1:20544:20591	1704076	20	True				
ANR	1704207	AssignmentExpression	subpats_order = global ? PREG_PATTERN_ORDER : 0		1704076	0		=			
ANR	1704208	Identifier	subpats_order		1704076	0					
ANR	1704209	ConditionalExpression	global ? PREG_PATTERN_ORDER : 0		1704076	1					
ANR	1704210	Condition	global		1704076	0					
ANR	1704211	Identifier	global		1704076	0					
ANR	1704212	Identifier	PREG_PATTERN_ORDER		1704076	1					
ANR	1704213	PrimaryExpression	0		1704076	2					
ANR	1704214	IfStatement	if ( use_flags )		1704076	21					
ANR	1704215	Condition	use_flags	669:5:20599:20607	1704076	0	True				
ANR	1704216	Identifier	use_flags		1704076	0					
ANR	1704217	CompoundStatement		34:16:1380:1380	1704076	1					
ANR	1704218	ExpressionStatement	offset_capture = flags & PREG_OFFSET_CAPTURE	670:2:20614:20658	1704076	0	True				
ANR	1704219	AssignmentExpression	offset_capture = flags & PREG_OFFSET_CAPTURE		1704076	0		=			
ANR	1704220	Identifier	offset_capture		1704076	0					
ANR	1704221	BitAndExpression	flags & PREG_OFFSET_CAPTURE		1704076	1		&			
ANR	1704222	Identifier	flags		1704076	0					
ANR	1704223	Identifier	PREG_OFFSET_CAPTURE		1704076	1					
ANR	1704224	IfStatement	if ( flags & 0xff )		1704076	1					
ANR	1704225	Condition	flags & 0xff	676:6:20764:20775	1704076	0	True				
ANR	1704226	BitAndExpression	flags & 0xff		1704076	0		&			
ANR	1704227	Identifier	flags		1704076	0					
ANR	1704228	PrimaryExpression	0xff		1704076	1					
ANR	1704229	CompoundStatement		41:20:1548:1548	1704076	1					
ANR	1704230	ExpressionStatement	subpats_order = flags & 0xff	677:3:20783:20811	1704076	0	True				
ANR	1704231	AssignmentExpression	subpats_order = flags & 0xff		1704076	0		=			
ANR	1704232	Identifier	subpats_order		1704076	0					
ANR	1704233	BitAndExpression	flags & 0xff		1704076	1		&			
ANR	1704234	Identifier	flags		1704076	0					
ANR	1704235	PrimaryExpression	0xff		1704076	1					
ANR	1704236	IfStatement	if ( ( global && ( subpats_order < PREG_PATTERN_ORDER || subpats_order > PREG_SET_ORDER ) ) || ( ! global && subpats_order != 0 ) )		1704076	2					
ANR	1704237	Condition	( global && ( subpats_order < PREG_PATTERN_ORDER || subpats_order > PREG_SET_ORDER ) ) || ( ! global && subpats_order != 0 )	679:6:20823:20942	1704076	0	True				
ANR	1704238	OrExpression	( global && ( subpats_order < PREG_PATTERN_ORDER || subpats_order > PREG_SET_ORDER ) ) || ( ! global && subpats_order != 0 )		1704076	0		||			
ANR	1704239	AndExpression	global && ( subpats_order < PREG_PATTERN_ORDER || subpats_order > PREG_SET_ORDER )		1704076	0		&&			
ANR	1704240	Identifier	global		1704076	0					
ANR	1704241	OrExpression	subpats_order < PREG_PATTERN_ORDER || subpats_order > PREG_SET_ORDER		1704076	1		||			
ANR	1704242	RelationalExpression	subpats_order < PREG_PATTERN_ORDER		1704076	0		<			
ANR	1704243	Identifier	subpats_order		1704076	0					
ANR	1704244	Identifier	PREG_PATTERN_ORDER		1704076	1					
ANR	1704245	RelationalExpression	subpats_order > PREG_SET_ORDER		1704076	1		>			
ANR	1704246	Identifier	subpats_order		1704076	0					
ANR	1704247	Identifier	PREG_SET_ORDER		1704076	1					
ANR	1704248	AndExpression	! global && subpats_order != 0		1704076	1		&&			
ANR	1704249	UnaryOperationExpression	! global		1704076	0					
ANR	1704250	UnaryOperator	!		1704076	0					
ANR	1704251	Identifier	global		1704076	1					
ANR	1704252	EqualityExpression	subpats_order != 0		1704076	1		!=			
ANR	1704253	Identifier	subpats_order		1704076	0					
ANR	1704254	PrimaryExpression	0		1704076	1					
ANR	1704255	CompoundStatement		45:36:1715:1715	1704076	1					
ANR	1704256	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Invalid flags specified"" )"	681:3:20950:21010	1704076	0	True				
ANR	1704257	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Invalid flags specified"" )"		1704076	0					
ANR	1704258	Callee	php_error_docref		1704076	0					
ANR	1704259	Identifier	php_error_docref		1704076	0					
ANR	1704260	ArgumentList	NULL		1704076	1					
ANR	1704261	Argument	NULL		1704076	0					
ANR	1704262	Identifier	NULL		1704076	0					
ANR	1704263	Argument	E_WARNING		1704076	1					
ANR	1704264	Identifier	E_WARNING		1704076	0					
ANR	1704265	Argument	"""Invalid flags specified"""		1704076	2					
ANR	1704266	PrimaryExpression	"""Invalid flags specified"""		1704076	0					
ANR	1704267	ReturnStatement	return ;	682:3:21015:21021	1704076	1	True				
ANR	1704268	ElseStatement	else		1704076	0					
ANR	1704269	CompoundStatement		49:8:1805:1805	1704076	0					
ANR	1704270	ExpressionStatement	offset_capture = 0	685:2:21039:21057	1704076	0	True				
ANR	1704271	AssignmentExpression	offset_capture = 0		1704076	0		=			
ANR	1704272	Identifier	offset_capture		1704076	0					
ANR	1704273	PrimaryExpression	0		1704076	1					
ANR	1704274	IfStatement	if ( start_offset < 0 )		1704076	22					
ANR	1704275	Condition	start_offset < 0	689:5:21126:21141	1704076	0	True				
ANR	1704276	RelationalExpression	start_offset < 0		1704076	0		<			
ANR	1704277	Identifier	start_offset		1704076	0					
ANR	1704278	PrimaryExpression	0		1704076	1					
ANR	1704279	CompoundStatement		54:23:1914:1914	1704076	1					
ANR	1704280	ExpressionStatement	start_offset = subject_len + start_offset	690:2:21148:21189	1704076	0	True				
ANR	1704281	AssignmentExpression	start_offset = subject_len + start_offset		1704076	0		=			
ANR	1704282	Identifier	start_offset		1704076	0					
ANR	1704283	AdditiveExpression	subject_len + start_offset		1704076	1		+			
ANR	1704284	Identifier	subject_len		1704076	0					
ANR	1704285	Identifier	start_offset		1704076	1					
ANR	1704286	IfStatement	if ( start_offset < 0 )		1704076	1					
ANR	1704287	Condition	start_offset < 0	691:6:21197:21212	1704076	0	True				
ANR	1704288	RelationalExpression	start_offset < 0		1704076	0		<			
ANR	1704289	Identifier	start_offset		1704076	0					
ANR	1704290	PrimaryExpression	0		1704076	1					
ANR	1704291	CompoundStatement		56:24:1985:1985	1704076	1					
ANR	1704292	ExpressionStatement	start_offset = 0	692:3:21220:21236	1704076	0	True				
ANR	1704293	AssignmentExpression	start_offset = 0		1704076	0		=			
ANR	1704294	Identifier	start_offset		1704076	0					
ANR	1704295	PrimaryExpression	0		1704076	1					
ANR	1704296	IfStatement	if ( extra == NULL )		1704076	23					
ANR	1704297	Condition	extra == NULL	696:5:21251:21263	1704076	0	True				
ANR	1704298	EqualityExpression	extra == NULL		1704076	0		==			
ANR	1704299	Identifier	extra		1704076	0					
ANR	1704300	Identifier	NULL		1704076	1					
ANR	1704301	CompoundStatement		61:20:2036:2036	1704076	1					
ANR	1704302	ExpressionStatement	extra_data . flags = PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION	697:2:21270:21346	1704076	0	True				
ANR	1704303	AssignmentExpression	extra_data . flags = PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION		1704076	0		=			
ANR	1704304	MemberAccess	extra_data . flags		1704076	0					
ANR	1704305	Identifier	extra_data		1704076	0					
ANR	1704306	Identifier	flags		1704076	1					
ANR	1704307	InclusiveOrExpression	PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION		1704076	1		|			
ANR	1704308	Identifier	PCRE_EXTRA_MATCH_LIMIT		1704076	0					
ANR	1704309	Identifier	PCRE_EXTRA_MATCH_LIMIT_RECURSION		1704076	1					
ANR	1704310	ExpressionStatement	extra = & extra_data	698:2:21350:21369	1704076	1	True				
ANR	1704311	AssignmentExpression	extra = & extra_data		1704076	0		=			
ANR	1704312	Identifier	extra		1704076	0					
ANR	1704313	UnaryOperationExpression	& extra_data		1704076	1					
ANR	1704314	UnaryOperator	&		1704076	0					
ANR	1704315	Identifier	extra_data		1704076	1					
ANR	1704316	ExpressionStatement	extra -> match_limit = ( unsigned long ) PCRE_G ( backtrack_limit )	700:1:21375:21434	1704076	24	True				
ANR	1704317	AssignmentExpression	extra -> match_limit = ( unsigned long ) PCRE_G ( backtrack_limit )		1704076	0		=			
ANR	1704318	PtrMemberAccess	extra -> match_limit		1704076	0					
ANR	1704319	Identifier	extra		1704076	0					
ANR	1704320	Identifier	match_limit		1704076	1					
ANR	1704321	CastExpression	( unsigned long ) PCRE_G ( backtrack_limit )		1704076	1					
ANR	1704322	CastTarget	unsigned long		1704076	0					
ANR	1704323	CallExpression	PCRE_G ( backtrack_limit )		1704076	1					
ANR	1704324	Callee	PCRE_G		1704076	0					
ANR	1704325	Identifier	PCRE_G		1704076	0					
ANR	1704326	ArgumentList	backtrack_limit		1704076	1					
ANR	1704327	Argument	backtrack_limit		1704076	0					
ANR	1704328	Identifier	backtrack_limit		1704076	0					
ANR	1704329	ExpressionStatement	extra -> match_limit_recursion = ( unsigned long ) PCRE_G ( recursion_limit )	701:1:21437:21506	1704076	25	True				
ANR	1704330	AssignmentExpression	extra -> match_limit_recursion = ( unsigned long ) PCRE_G ( recursion_limit )		1704076	0		=			
ANR	1704331	PtrMemberAccess	extra -> match_limit_recursion		1704076	0					
ANR	1704332	Identifier	extra		1704076	0					
ANR	1704333	Identifier	match_limit_recursion		1704076	1					
ANR	1704334	CastExpression	( unsigned long ) PCRE_G ( recursion_limit )		1704076	1					
ANR	1704335	CastTarget	unsigned long		1704076	0					
ANR	1704336	CallExpression	PCRE_G ( recursion_limit )		1704076	1					
ANR	1704337	Callee	PCRE_G		1704076	0					
ANR	1704338	Identifier	PCRE_G		1704076	0					
ANR	1704339	ArgumentList	recursion_limit		1704076	1					
ANR	1704340	Argument	recursion_limit		1704076	0					
ANR	1704341	Identifier	recursion_limit		1704076	0					
ANR	1704342	ExpressionStatement	extra -> mark = & mark	703:1:21532:21551	1704076	26	True				
ANR	1704343	AssignmentExpression	extra -> mark = & mark		1704076	0		=			
ANR	1704344	PtrMemberAccess	extra -> mark		1704076	0					
ANR	1704345	Identifier	extra		1704076	0					
ANR	1704346	Identifier	mark		1704076	1					
ANR	1704347	UnaryOperationExpression	& mark		1704076	1					
ANR	1704348	UnaryOperator	&		1704076	0					
ANR	1704349	Identifier	mark		1704076	1					
ANR	1704350	ExpressionStatement	extra -> flags |= PCRE_EXTRA_MARK	704:1:21554:21585	1704076	27	True				
ANR	1704351	AssignmentExpression	extra -> flags |= PCRE_EXTRA_MARK		1704076	0		|=			
ANR	1704352	PtrMemberAccess	extra -> flags		1704076	0					
ANR	1704353	Identifier	extra		1704076	0					
ANR	1704354	Identifier	flags		1704076	1					
ANR	1704355	Identifier	PCRE_EXTRA_MARK		1704076	1					
ANR	1704356	ExpressionStatement	num_subpats = pce -> capture_count + 1	708:1:21672:21708	1704076	28	True				
ANR	1704357	AssignmentExpression	num_subpats = pce -> capture_count + 1		1704076	0		=			
ANR	1704358	Identifier	num_subpats		1704076	0					
ANR	1704359	AdditiveExpression	pce -> capture_count + 1		1704076	1		+			
ANR	1704360	PtrMemberAccess	pce -> capture_count		1704076	0					
ANR	1704361	Identifier	pce		1704076	0					
ANR	1704362	Identifier	capture_count		1704076	1					
ANR	1704363	PrimaryExpression	1		1704076	1					
ANR	1704364	ExpressionStatement	size_offsets = num_subpats * 3	709:1:21711:21741	1704076	29	True				
ANR	1704365	AssignmentExpression	size_offsets = num_subpats * 3		1704076	0		=			
ANR	1704366	Identifier	size_offsets		1704076	0					
ANR	1704367	MultiplicativeExpression	num_subpats * 3		1704076	1		*			
ANR	1704368	Identifier	num_subpats		1704076	0					
ANR	1704369	PrimaryExpression	3		1704076	1					
ANR	1704370	ExpressionStatement	subpat_names = NULL	715:1:21886:21905	1704076	30	True				
ANR	1704371	AssignmentExpression	subpat_names = NULL		1704076	0		=			
ANR	1704372	Identifier	subpat_names		1704076	0					
ANR	1704373	Identifier	NULL		1704076	1					
ANR	1704374	IfStatement	if ( pce -> name_count > 0 )		1704076	31					
ANR	1704375	Condition	pce -> name_count > 0	716:5:21912:21930	1704076	0	True				
ANR	1704376	RelationalExpression	pce -> name_count > 0		1704076	0		>			
ANR	1704377	PtrMemberAccess	pce -> name_count		1704076	0					
ANR	1704378	Identifier	pce		1704076	0					
ANR	1704379	Identifier	name_count		1704076	1					
ANR	1704380	PrimaryExpression	0		1704076	1					
ANR	1704381	CompoundStatement		81:26:2703:2703	1704076	1					
ANR	1704382	ExpressionStatement	"subpat_names = make_subpats_table ( num_subpats , pce )"	717:2:21937:21988	1704076	0	True				
ANR	1704383	AssignmentExpression	"subpat_names = make_subpats_table ( num_subpats , pce )"		1704076	0		=			
ANR	1704384	Identifier	subpat_names		1704076	0					
ANR	1704385	CallExpression	"make_subpats_table ( num_subpats , pce )"		1704076	1					
ANR	1704386	Callee	make_subpats_table		1704076	0					
ANR	1704387	Identifier	make_subpats_table		1704076	0					
ANR	1704388	ArgumentList	num_subpats		1704076	1					
ANR	1704389	Argument	num_subpats		1704076	0					
ANR	1704390	Identifier	num_subpats		1704076	0					
ANR	1704391	Argument	pce		1704076	1					
ANR	1704392	Identifier	pce		1704076	0					
ANR	1704393	IfStatement	if ( ! subpat_names )		1704076	1					
ANR	1704394	Condition	! subpat_names	718:6:21996:22008	1704076	0	True				
ANR	1704395	UnaryOperationExpression	! subpat_names		1704076	0					
ANR	1704396	UnaryOperator	!		1704076	0					
ANR	1704397	Identifier	subpat_names		1704076	1					
ANR	1704398	CompoundStatement		83:21:2781:2781	1704076	1					
ANR	1704399	ExpressionStatement	RETURN_FALSE	719:3:22016:22028	1704076	0	True				
ANR	1704400	Identifier	RETURN_FALSE		1704076	0					
ANR	1704401	IfStatement	if ( size_offsets <= 32 )		1704076	32					
ANR	1704402	Condition	size_offsets <= 32	723:5:22043:22060	1704076	0	True				
ANR	1704403	RelationalExpression	size_offsets <= 32		1704076	0		<=			
ANR	1704404	Identifier	size_offsets		1704076	0					
ANR	1704405	PrimaryExpression	32		1704076	1					
ANR	1704406	CompoundStatement		88:25:2833:2833	1704076	1					
ANR	1704407	ExpressionStatement	"offsets = ( int * ) do_alloca ( size_offsets * sizeof ( int ) , use_heap )"	724:2:22067:22131	1704076	0	True				
ANR	1704408	AssignmentExpression	"offsets = ( int * ) do_alloca ( size_offsets * sizeof ( int ) , use_heap )"		1704076	0		=			
ANR	1704409	Identifier	offsets		1704076	0					
ANR	1704410	CastExpression	"( int * ) do_alloca ( size_offsets * sizeof ( int ) , use_heap )"		1704076	1					
ANR	1704411	CastTarget	int *		1704076	0					
ANR	1704412	CallExpression	"do_alloca ( size_offsets * sizeof ( int ) , use_heap )"		1704076	1					
ANR	1704413	Callee	do_alloca		1704076	0					
ANR	1704414	Identifier	do_alloca		1704076	0					
ANR	1704415	ArgumentList	size_offsets * sizeof ( int )		1704076	1					
ANR	1704416	Argument	size_offsets * sizeof ( int )		1704076	0					
ANR	1704417	MultiplicativeExpression	size_offsets * sizeof ( int )		1704076	0		*			
ANR	1704418	Identifier	size_offsets		1704076	0					
ANR	1704419	SizeofExpression	sizeof ( int )		1704076	1					
ANR	1704420	Sizeof	sizeof		1704076	0					
ANR	1704421	SizeofOperand	int		1704076	1					
ANR	1704422	Argument	use_heap		1704076	1					
ANR	1704423	Identifier	use_heap		1704076	0					
ANR	1704424	ElseStatement	else		1704076	0					
ANR	1704425	CompoundStatement		90:8:2911:2911	1704076	0					
ANR	1704426	ExpressionStatement	"offsets = ( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"	726:2:22145:22204	1704076	0	True				
ANR	1704427	AssignmentExpression	"offsets = ( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1704076	0		=			
ANR	1704428	Identifier	offsets		1704076	0					
ANR	1704429	CastExpression	"( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1704076	1					
ANR	1704430	CastTarget	int *		1704076	0					
ANR	1704431	CallExpression	"safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1704076	1					
ANR	1704432	Callee	safe_emalloc		1704076	0					
ANR	1704433	Identifier	safe_emalloc		1704076	0					
ANR	1704434	ArgumentList	size_offsets		1704076	1					
ANR	1704435	Argument	size_offsets		1704076	0					
ANR	1704436	Identifier	size_offsets		1704076	0					
ANR	1704437	Argument	sizeof ( int )		1704076	1					
ANR	1704438	SizeofExpression	sizeof ( int )		1704076	0					
ANR	1704439	Sizeof	sizeof		1704076	0					
ANR	1704440	SizeofOperand	int		1704076	1					
ANR	1704441	Argument	0		1704076	2					
ANR	1704442	PrimaryExpression	0		1704076	0					
ANR	1704443	ExpressionStatement	"memset ( offsets , 0 , size_offsets * sizeof ( int ) )"	728:1:22210:22254	1704076	33	True				
ANR	1704444	CallExpression	"memset ( offsets , 0 , size_offsets * sizeof ( int ) )"		1704076	0					
ANR	1704445	Callee	memset		1704076	0					
ANR	1704446	Identifier	memset		1704076	0					
ANR	1704447	ArgumentList	offsets		1704076	1					
ANR	1704448	Argument	offsets		1704076	0					
ANR	1704449	Identifier	offsets		1704076	0					
ANR	1704450	Argument	0		1704076	1					
ANR	1704451	PrimaryExpression	0		1704076	0					
ANR	1704452	Argument	size_offsets * sizeof ( int )		1704076	2					
ANR	1704453	MultiplicativeExpression	size_offsets * sizeof ( int )		1704076	0		*			
ANR	1704454	Identifier	size_offsets		1704076	0					
ANR	1704455	SizeofExpression	sizeof ( int )		1704076	1					
ANR	1704456	Sizeof	sizeof		1704076	0					
ANR	1704457	SizeofOperand	int		1704076	1					
ANR	1704458	IfStatement	if ( global && subpats && subpats_order == PREG_PATTERN_ORDER )		1704076	34					
ANR	1704459	Condition	global && subpats && subpats_order == PREG_PATTERN_ORDER	730:5:22321:22376	1704076	0	True				
ANR	1704460	AndExpression	global && subpats && subpats_order == PREG_PATTERN_ORDER		1704076	0		&&			
ANR	1704461	Identifier	global		1704076	0					
ANR	1704462	AndExpression	subpats && subpats_order == PREG_PATTERN_ORDER		1704076	1		&&			
ANR	1704463	Identifier	subpats		1704076	0					
ANR	1704464	EqualityExpression	subpats_order == PREG_PATTERN_ORDER		1704076	1		==			
ANR	1704465	Identifier	subpats_order		1704076	0					
ANR	1704466	Identifier	PREG_PATTERN_ORDER		1704076	1					
ANR	1704467	CompoundStatement		95:63:3149:3149	1704076	1					
ANR	1704468	ExpressionStatement	"match_sets = ( zval * ) safe_emalloc ( num_subpats , sizeof ( zval ) , 0 )"	731:2:22383:22446	1704076	0	True				
ANR	1704469	AssignmentExpression	"match_sets = ( zval * ) safe_emalloc ( num_subpats , sizeof ( zval ) , 0 )"		1704076	0		=			
ANR	1704470	Identifier	match_sets		1704076	0					
ANR	1704471	CastExpression	"( zval * ) safe_emalloc ( num_subpats , sizeof ( zval ) , 0 )"		1704076	1					
ANR	1704472	CastTarget	zval *		1704076	0					
ANR	1704473	CallExpression	"safe_emalloc ( num_subpats , sizeof ( zval ) , 0 )"		1704076	1					
ANR	1704474	Callee	safe_emalloc		1704076	0					
ANR	1704475	Identifier	safe_emalloc		1704076	0					
ANR	1704476	ArgumentList	num_subpats		1704076	1					
ANR	1704477	Argument	num_subpats		1704076	0					
ANR	1704478	Identifier	num_subpats		1704076	0					
ANR	1704479	Argument	sizeof ( zval )		1704076	1					
ANR	1704480	SizeofExpression	sizeof ( zval )		1704076	0					
ANR	1704481	Sizeof	sizeof		1704076	0					
ANR	1704482	SizeofOperand	zval		1704076	1					
ANR	1704483	Argument	0		1704076	2					
ANR	1704484	PrimaryExpression	0		1704076	0					
ANR	1704485	ForStatement	for ( i = 0 ; i < num_subpats ; i ++ )		1704076	1					
ANR	1704486	ForInit	i = 0 ;	732:7:22455:22458	1704076	0	True				
ANR	1704487	AssignmentExpression	i = 0		1704076	0		=			
ANR	1704488	Identifier	i		1704076	0					
ANR	1704489	PrimaryExpression	0		1704076	1					
ANR	1704490	Condition	i < num_subpats	732:12:22460:22472	1704076	1	True				
ANR	1704491	RelationalExpression	i < num_subpats		1704076	0		<			
ANR	1704492	Identifier	i		1704076	0					
ANR	1704493	Identifier	num_subpats		1704076	1					
ANR	1704494	PostIncDecOperationExpression	i ++	732:27:22475:22477	1704076	2	True				
ANR	1704495	Identifier	i		1704076	0					
ANR	1704496	IncDec	++		1704076	1					
ANR	1704497	CompoundStatement		97:32:3250:3250	1704076	3					
ANR	1704498	ExpressionStatement	array_init ( & match_sets [ i ] )	733:3:22485:22511	1704076	0	True				
ANR	1704499	CallExpression	array_init ( & match_sets [ i ] )		1704076	0					
ANR	1704500	Callee	array_init		1704076	0					
ANR	1704501	Identifier	array_init		1704076	0					
ANR	1704502	ArgumentList	& match_sets [ i ]		1704076	1					
ANR	1704503	Argument	& match_sets [ i ]		1704076	0					
ANR	1704504	UnaryOperationExpression	& match_sets [ i ]		1704076	0					
ANR	1704505	UnaryOperator	&		1704076	0					
ANR	1704506	ArrayIndexing	match_sets [ i ]		1704076	1					
ANR	1704507	Identifier	match_sets		1704076	0					
ANR	1704508	Identifier	i		1704076	1					
ANR	1704509	ExpressionStatement	matched = 0	737:1:22522:22533	1704076	35	True				
ANR	1704510	AssignmentExpression	matched = 0		1704076	0		=			
ANR	1704511	Identifier	matched		1704076	0					
ANR	1704512	PrimaryExpression	0		1704076	1					
ANR	1704513	ExpressionStatement	PCRE_G ( error_code ) = PHP_PCRE_NO_ERROR	738:1:22536:22574	1704076	36	True				
ANR	1704514	AssignmentExpression	PCRE_G ( error_code ) = PHP_PCRE_NO_ERROR		1704076	0		=			
ANR	1704515	CallExpression	PCRE_G ( error_code )		1704076	0					
ANR	1704516	Callee	PCRE_G		1704076	0					
ANR	1704517	Identifier	PCRE_G		1704076	0					
ANR	1704518	ArgumentList	error_code		1704076	1					
ANR	1704519	Argument	error_code		1704076	0					
ANR	1704520	Identifier	error_code		1704076	0					
ANR	1704521	Identifier	PHP_PCRE_NO_ERROR		1704076	1					
ANR	1704522	DoStatement	do		1704076	37					
ANR	1704523	CompoundStatement		105:4:3351:3351	1704076	0					
ANR	1704524	ExpressionStatement	"count = pcre_exec ( pce -> re , extra , subject , ( int ) subject_len , ( int ) start_offset , exoptions | g_notempty , offsets , size_offsets )"	742:2:22625:22757	1704076	0	True				
ANR	1704525	AssignmentExpression	"count = pcre_exec ( pce -> re , extra , subject , ( int ) subject_len , ( int ) start_offset , exoptions | g_notempty , offsets , size_offsets )"		1704076	0		=			
ANR	1704526	Identifier	count		1704076	0					
ANR	1704527	CallExpression	"pcre_exec ( pce -> re , extra , subject , ( int ) subject_len , ( int ) start_offset , exoptions | g_notempty , offsets , size_offsets )"		1704076	1					
ANR	1704528	Callee	pcre_exec		1704076	0					
ANR	1704529	Identifier	pcre_exec		1704076	0					
ANR	1704530	ArgumentList	pce -> re		1704076	1					
ANR	1704531	Argument	pce -> re		1704076	0					
ANR	1704532	PtrMemberAccess	pce -> re		1704076	0					
ANR	1704533	Identifier	pce		1704076	0					
ANR	1704534	Identifier	re		1704076	1					
ANR	1704535	Argument	extra		1704076	1					
ANR	1704536	Identifier	extra		1704076	0					
ANR	1704537	Argument	subject		1704076	2					
ANR	1704538	Identifier	subject		1704076	0					
ANR	1704539	Argument	( int ) subject_len		1704076	3					
ANR	1704540	CastExpression	( int ) subject_len		1704076	0					
ANR	1704541	CastTarget	int		1704076	0					
ANR	1704542	Identifier	subject_len		1704076	1					
ANR	1704543	Argument	( int ) start_offset		1704076	4					
ANR	1704544	CastExpression	( int ) start_offset		1704076	0					
ANR	1704545	CastTarget	int		1704076	0					
ANR	1704546	Identifier	start_offset		1704076	1					
ANR	1704547	Argument	exoptions | g_notempty		1704076	5					
ANR	1704548	InclusiveOrExpression	exoptions | g_notempty		1704076	0		|			
ANR	1704549	Identifier	exoptions		1704076	0					
ANR	1704550	Identifier	g_notempty		1704076	1					
ANR	1704551	Argument	offsets		1704076	6					
ANR	1704552	Identifier	offsets		1704076	0					
ANR	1704553	Argument	size_offsets		1704076	7					
ANR	1704554	Identifier	size_offsets		1704076	0					
ANR	1704555	ExpressionStatement	exoptions |= PCRE_NO_UTF8_CHECK	746:2:22818:22849	1704076	1	True				
ANR	1704556	AssignmentExpression	exoptions |= PCRE_NO_UTF8_CHECK		1704076	0		|=			
ANR	1704557	Identifier	exoptions		1704076	0					
ANR	1704558	Identifier	PCRE_NO_UTF8_CHECK		1704076	1					
ANR	1704559	IfStatement	if ( count == 0 )		1704076	2					
ANR	1704560	Condition	count == 0	749:6:22907:22916	1704076	0	True				
ANR	1704561	EqualityExpression	count == 0		1704076	0		==			
ANR	1704562	Identifier	count		1704076	0					
ANR	1704563	PrimaryExpression	0		1704076	1					
ANR	1704564	CompoundStatement		114:18:3689:3689	1704076	1					
ANR	1704565	ExpressionStatement	"php_error_docref ( NULL , E_NOTICE , ""Matched, but too many substrings"" )"	750:3:22924:22992	1704076	0	True				
ANR	1704566	CallExpression	"php_error_docref ( NULL , E_NOTICE , ""Matched, but too many substrings"" )"		1704076	0					
ANR	1704567	Callee	php_error_docref		1704076	0					
ANR	1704568	Identifier	php_error_docref		1704076	0					
ANR	1704569	ArgumentList	NULL		1704076	1					
ANR	1704570	Argument	NULL		1704076	0					
ANR	1704571	Identifier	NULL		1704076	0					
ANR	1704572	Argument	E_NOTICE		1704076	1					
ANR	1704573	Identifier	E_NOTICE		1704076	0					
ANR	1704574	Argument	"""Matched, but too many substrings"""		1704076	2					
ANR	1704575	PrimaryExpression	"""Matched, but too many substrings"""		1704076	0					
ANR	1704576	ExpressionStatement	count = size_offsets / 3	751:3:22997:23019	1704076	1	True				
ANR	1704577	AssignmentExpression	count = size_offsets / 3		1704076	0		=			
ANR	1704578	Identifier	count		1704076	0					
ANR	1704579	MultiplicativeExpression	size_offsets / 3		1704076	1		/			
ANR	1704580	Identifier	size_offsets		1704076	0					
ANR	1704581	PrimaryExpression	3		1704076	1					
ANR	1704582	IfStatement	if ( count > 0 )		1704076	3					
ANR	1704583	Condition	count > 0	755:6:23065:23073	1704076	0	True				
ANR	1704584	RelationalExpression	count > 0		1704076	0		>			
ANR	1704585	Identifier	count		1704076	0					
ANR	1704586	PrimaryExpression	0		1704076	1					
ANR	1704587	CompoundStatement		120:17:3846:3846	1704076	1					
ANR	1704588	ExpressionStatement	matched ++	756:3:23081:23090	1704076	0	True				
ANR	1704589	PostIncDecOperationExpression	matched ++		1704076	0					
ANR	1704590	Identifier	matched		1704076	0					
ANR	1704591	IncDec	++		1704076	1					
ANR	1704592	IfStatement	if ( subpats != NULL )		1704076	1					
ANR	1704593	Condition	subpats != NULL	759:7:23171:23185	1704076	0	True				
ANR	1704594	EqualityExpression	subpats != NULL		1704076	0		!=			
ANR	1704595	Identifier	subpats		1704076	0					
ANR	1704596	Identifier	NULL		1704076	1					
ANR	1704597	CompoundStatement		124:24:3958:3958	1704076	1					
ANR	1704598	IfStatement	"if ( ( offsets [ 1 ] - offsets [ 0 ] < 0 ) || pcre_get_substring_list ( subject , offsets , count , & stringlist ) < 0 )"		1704076	0					
ANR	1704599	Condition	"( offsets [ 1 ] - offsets [ 0 ] < 0 ) || pcre_get_substring_list ( subject , offsets , count , & stringlist ) < 0"	761:8:23275:23372	1704076	0	True				
ANR	1704600	OrExpression	"( offsets [ 1 ] - offsets [ 0 ] < 0 ) || pcre_get_substring_list ( subject , offsets , count , & stringlist ) < 0"		1704076	0		||			
ANR	1704601	RelationalExpression	offsets [ 1 ] - offsets [ 0 ] < 0		1704076	0		<			
ANR	1704602	AdditiveExpression	offsets [ 1 ] - offsets [ 0 ]		1704076	0		-			
ANR	1704603	ArrayIndexing	offsets [ 1 ]		1704076	0					
ANR	1704604	Identifier	offsets		1704076	0					
ANR	1704605	PrimaryExpression	1		1704076	1					
ANR	1704606	ArrayIndexing	offsets [ 0 ]		1704076	1					
ANR	1704607	Identifier	offsets		1704076	0					
ANR	1704608	PrimaryExpression	0		1704076	1					
ANR	1704609	PrimaryExpression	0		1704076	1					
ANR	1704610	RelationalExpression	"pcre_get_substring_list ( subject , offsets , count , & stringlist ) < 0"		1704076	1		<			
ANR	1704611	CallExpression	"pcre_get_substring_list ( subject , offsets , count , & stringlist )"		1704076	0					
ANR	1704612	Callee	pcre_get_substring_list		1704076	0					
ANR	1704613	Identifier	pcre_get_substring_list		1704076	0					
ANR	1704614	ArgumentList	subject		1704076	1					
ANR	1704615	Argument	subject		1704076	0					
ANR	1704616	Identifier	subject		1704076	0					
ANR	1704617	Argument	offsets		1704076	1					
ANR	1704618	Identifier	offsets		1704076	0					
ANR	1704619	Argument	count		1704076	2					
ANR	1704620	Identifier	count		1704076	0					
ANR	1704621	Argument	& stringlist		1704076	3					
ANR	1704622	UnaryOperationExpression	& stringlist		1704076	0					
ANR	1704623	UnaryOperator	&		1704076	0					
ANR	1704624	Identifier	stringlist		1704076	1					
ANR	1704625	PrimaryExpression	0		1704076	1					
ANR	1704626	CompoundStatement		126:108:4145:4145	1704076	1					
ANR	1704627	IfStatement	if ( subpat_names )		1704076	0					
ANR	1704628	Condition	subpat_names	762:9:23386:23397	1704076	0	True				
ANR	1704629	Identifier	subpat_names		1704076	0					
ANR	1704630	CompoundStatement		127:23:4170:4170	1704076	1					
ANR	1704631	ExpressionStatement	efree ( subpat_names )	763:6:23408:23427	1704076	0	True				
ANR	1704632	CallExpression	efree ( subpat_names )		1704076	0					
ANR	1704633	Callee	efree		1704076	0					
ANR	1704634	Identifier	efree		1704076	0					
ANR	1704635	ArgumentList	subpat_names		1704076	1					
ANR	1704636	Argument	subpat_names		1704076	0					
ANR	1704637	Identifier	subpat_names		1704076	0					
ANR	1704638	IfStatement	if ( size_offsets <= 32 )		1704076	1					
ANR	1704639	Condition	size_offsets <= 32	765:9:23445:23462	1704076	0	True				
ANR	1704640	RelationalExpression	size_offsets <= 32		1704076	0		<=			
ANR	1704641	Identifier	size_offsets		1704076	0					
ANR	1704642	PrimaryExpression	32		1704076	1					
ANR	1704643	CompoundStatement		130:29:4235:4235	1704076	1					
ANR	1704644	ExpressionStatement	"free_alloca ( offsets , use_heap )"	766:6:23473:23503	1704076	0	True				
ANR	1704645	CallExpression	"free_alloca ( offsets , use_heap )"		1704076	0					
ANR	1704646	Callee	free_alloca		1704076	0					
ANR	1704647	Identifier	free_alloca		1704076	0					
ANR	1704648	ArgumentList	offsets		1704076	1					
ANR	1704649	Argument	offsets		1704076	0					
ANR	1704650	Identifier	offsets		1704076	0					
ANR	1704651	Argument	use_heap		1704076	1					
ANR	1704652	Identifier	use_heap		1704076	0					
ANR	1704653	ElseStatement	else		1704076	0					
ANR	1704654	CompoundStatement		132:12:4287:4287	1704076	0					
ANR	1704655	ExpressionStatement	efree ( offsets )	768:6:23525:23539	1704076	0	True				
ANR	1704656	CallExpression	efree ( offsets )		1704076	0					
ANR	1704657	Callee	efree		1704076	0					
ANR	1704658	Identifier	efree		1704076	0					
ANR	1704659	ArgumentList	offsets		1704076	1					
ANR	1704660	Argument	offsets		1704076	0					
ANR	1704661	Identifier	offsets		1704076	0					
ANR	1704662	IfStatement	if ( match_sets )		1704076	2					
ANR	1704663	Condition	match_sets	770:9:23557:23566	1704076	0	True				
ANR	1704664	Identifier	match_sets		1704076	0					
ANR	1704665	ExpressionStatement	efree ( match_sets )	770:21:23569:23586	1704076	1	True				
ANR	1704666	CallExpression	efree ( match_sets )		1704076	0					
ANR	1704667	Callee	efree		1704076	0					
ANR	1704668	Identifier	efree		1704076	0					
ANR	1704669	ArgumentList	match_sets		1704076	1					
ANR	1704670	Argument	match_sets		1704076	0					
ANR	1704671	Identifier	match_sets		1704076	0					
ANR	1704672	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Get subpatterns list failed"" )"	771:5:23593:23657	1704076	3	True				
ANR	1704673	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Get subpatterns list failed"" )"		1704076	0					
ANR	1704674	Callee	php_error_docref		1704076	0					
ANR	1704675	Identifier	php_error_docref		1704076	0					
ANR	1704676	ArgumentList	NULL		1704076	1					
ANR	1704677	Argument	NULL		1704076	0					
ANR	1704678	Identifier	NULL		1704076	0					
ANR	1704679	Argument	E_WARNING		1704076	1					
ANR	1704680	Identifier	E_WARNING		1704076	0					
ANR	1704681	Argument	"""Get subpatterns list failed"""		1704076	2					
ANR	1704682	PrimaryExpression	"""Get subpatterns list failed"""		1704076	0					
ANR	1704683	ExpressionStatement	RETURN_FALSE	772:5:23664:23676	1704076	4	True				
ANR	1704684	Identifier	RETURN_FALSE		1704076	0					
ANR	1704685	IfStatement	if ( global )		1704076	1					
ANR	1704686	Condition	global	775:8:23693:23698	1704076	0	True				
ANR	1704687	Identifier	global		1704076	0					
ANR	1704688	CompoundStatement		140:16:4471:4471	1704076	1					
ANR	1704689	IfStatement	if ( subpats && subpats_order == PREG_PATTERN_ORDER )		1704076	0					
ANR	1704690	Condition	subpats && subpats_order == PREG_PATTERN_ORDER	776:9:23742:23787	1704076	0	True				
ANR	1704691	AndExpression	subpats && subpats_order == PREG_PATTERN_ORDER		1704076	0		&&			
ANR	1704692	Identifier	subpats		1704076	0					
ANR	1704693	EqualityExpression	subpats_order == PREG_PATTERN_ORDER		1704076	1		==			
ANR	1704694	Identifier	subpats_order		1704076	0					
ANR	1704695	Identifier	PREG_PATTERN_ORDER		1704076	1					
ANR	1704696	CompoundStatement		141:57:4560:4560	1704076	1					
ANR	1704697	IfStatement	if ( offset_capture )		1704076	0					
ANR	1704698	Condition	offset_capture	778:10:23873:23886	1704076	0	True				
ANR	1704699	Identifier	offset_capture		1704076	0					
ANR	1704700	CompoundStatement		143:26:4659:4659	1704076	1					
ANR	1704701	ForStatement	for ( i = 0 ; i < count ; i ++ )		1704076	0					
ANR	1704702	ForInit	i = 0 ;	779:12:23903:23908	1704076	0	True				
ANR	1704703	AssignmentExpression	i = 0		1704076	0		=			
ANR	1704704	Identifier	i		1704076	0					
ANR	1704705	PrimaryExpression	0		1704076	1					
ANR	1704706	Condition	i < count	779:19:23910:23918	1704076	1	True				
ANR	1704707	RelationalExpression	i < count		1704076	0		<			
ANR	1704708	Identifier	i		1704076	0					
ANR	1704709	Identifier	count		1704076	1					
ANR	1704710	PostIncDecOperationExpression	i ++	779:30:23921:23923	1704076	2	True				
ANR	1704711	Identifier	i		1704076	0					
ANR	1704712	IncDec	++		1704076	1					
ANR	1704713	CompoundStatement		144:35:4696:4696	1704076	3					
ANR	1704714	ExpressionStatement	"add_offset_pair ( & match_sets [ i ] , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , offsets [ i << 1 ] , NULL )"	780:8:23936:24058	1704076	0	True				
ANR	1704715	CallExpression	"add_offset_pair ( & match_sets [ i ] , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , offsets [ i << 1 ] , NULL )"		1704076	0					
ANR	1704716	Callee	add_offset_pair		1704076	0					
ANR	1704717	Identifier	add_offset_pair		1704076	0					
ANR	1704718	ArgumentList	& match_sets [ i ]		1704076	1					
ANR	1704719	Argument	& match_sets [ i ]		1704076	0					
ANR	1704720	UnaryOperationExpression	& match_sets [ i ]		1704076	0					
ANR	1704721	UnaryOperator	&		1704076	0					
ANR	1704722	ArrayIndexing	match_sets [ i ]		1704076	1					
ANR	1704723	Identifier	match_sets		1704076	0					
ANR	1704724	Identifier	i		1704076	1					
ANR	1704725	Argument	( char * ) stringlist [ i ]		1704076	1					
ANR	1704726	CastExpression	( char * ) stringlist [ i ]		1704076	0					
ANR	1704727	CastTarget	char *		1704076	0					
ANR	1704728	ArrayIndexing	stringlist [ i ]		1704076	1					
ANR	1704729	Identifier	stringlist		1704076	0					
ANR	1704730	Identifier	i		1704076	1					
ANR	1704731	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	2					
ANR	1704732	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	0		-			
ANR	1704733	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1704076	0					
ANR	1704734	Identifier	offsets		1704076	0					
ANR	1704735	AdditiveExpression	( i << 1 ) + 1		1704076	1		+			
ANR	1704736	ShiftExpression	i << 1		1704076	0		<<			
ANR	1704737	Identifier	i		1704076	0					
ANR	1704738	PrimaryExpression	1		1704076	1					
ANR	1704739	PrimaryExpression	1		1704076	1					
ANR	1704740	ArrayIndexing	offsets [ i << 1 ]		1704076	1					
ANR	1704741	Identifier	offsets		1704076	0					
ANR	1704742	ShiftExpression	i << 1		1704076	1		<<			
ANR	1704743	Identifier	i		1704076	0					
ANR	1704744	PrimaryExpression	1		1704076	1					
ANR	1704745	Argument	offsets [ i << 1 ]		1704076	3					
ANR	1704746	ArrayIndexing	offsets [ i << 1 ]		1704076	0					
ANR	1704747	Identifier	offsets		1704076	0					
ANR	1704748	ShiftExpression	i << 1		1704076	1		<<			
ANR	1704749	Identifier	i		1704076	0					
ANR	1704750	PrimaryExpression	1		1704076	1					
ANR	1704751	Argument	NULL		1704076	4					
ANR	1704752	Identifier	NULL		1704076	0					
ANR	1704753	ElseStatement	else		1704076	0					
ANR	1704754	CompoundStatement		148:13:4852:4852	1704076	0					
ANR	1704755	ForStatement	for ( i = 0 ; i < count ; i ++ )		1704076	0					
ANR	1704756	ForInit	i = 0 ;	784:12:24096:24101	1704076	0	True				
ANR	1704757	AssignmentExpression	i = 0		1704076	0		=			
ANR	1704758	Identifier	i		1704076	0					
ANR	1704759	PrimaryExpression	0		1704076	1					
ANR	1704760	Condition	i < count	784:19:24103:24111	1704076	1	True				
ANR	1704761	RelationalExpression	i < count		1704076	0		<			
ANR	1704762	Identifier	i		1704076	0					
ANR	1704763	Identifier	count		1704076	1					
ANR	1704764	PostIncDecOperationExpression	i ++	784:30:24114:24116	1704076	2	True				
ANR	1704765	Identifier	i		1704076	0					
ANR	1704766	IncDec	++		1704076	1					
ANR	1704767	CompoundStatement		149:35:4889:4889	1704076	3					
ANR	1704768	ExpressionStatement	"add_next_index_stringl ( & match_sets [ i ] , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"	785:8:24129:24241	1704076	0	True				
ANR	1704769	CallExpression	"add_next_index_stringl ( & match_sets [ i ] , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"		1704076	0					
ANR	1704770	Callee	add_next_index_stringl		1704076	0					
ANR	1704771	Identifier	add_next_index_stringl		1704076	0					
ANR	1704772	ArgumentList	& match_sets [ i ]		1704076	1					
ANR	1704773	Argument	& match_sets [ i ]		1704076	0					
ANR	1704774	UnaryOperationExpression	& match_sets [ i ]		1704076	0					
ANR	1704775	UnaryOperator	&		1704076	0					
ANR	1704776	ArrayIndexing	match_sets [ i ]		1704076	1					
ANR	1704777	Identifier	match_sets		1704076	0					
ANR	1704778	Identifier	i		1704076	1					
ANR	1704779	Argument	( char * ) stringlist [ i ]		1704076	1					
ANR	1704780	CastExpression	( char * ) stringlist [ i ]		1704076	0					
ANR	1704781	CastTarget	char *		1704076	0					
ANR	1704782	ArrayIndexing	stringlist [ i ]		1704076	1					
ANR	1704783	Identifier	stringlist		1704076	0					
ANR	1704784	Identifier	i		1704076	1					
ANR	1704785	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	2					
ANR	1704786	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	0		-			
ANR	1704787	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1704076	0					
ANR	1704788	Identifier	offsets		1704076	0					
ANR	1704789	AdditiveExpression	( i << 1 ) + 1		1704076	1		+			
ANR	1704790	ShiftExpression	i << 1		1704076	0		<<			
ANR	1704791	Identifier	i		1704076	0					
ANR	1704792	PrimaryExpression	1		1704076	1					
ANR	1704793	PrimaryExpression	1		1704076	1					
ANR	1704794	ArrayIndexing	offsets [ i << 1 ]		1704076	1					
ANR	1704795	Identifier	offsets		1704076	0					
ANR	1704796	ShiftExpression	i << 1		1704076	1		<<			
ANR	1704797	Identifier	i		1704076	0					
ANR	1704798	PrimaryExpression	1		1704076	1					
ANR	1704799	IfStatement	if ( mark )		1704076	1					
ANR	1704800	Condition	mark	790:10:24305:24308	1704076	0	True				
ANR	1704801	Identifier	mark		1704076	0					
ANR	1704802	CompoundStatement		155:16:5081:5081	1704076	1					
ANR	1704803	IfStatement	if ( Z_TYPE ( marks ) == IS_UNDEF )		1704076	0					
ANR	1704804	Condition	Z_TYPE ( marks ) == IS_UNDEF	791:11:24324:24348	1704076	0	True				
ANR	1704805	EqualityExpression	Z_TYPE ( marks ) == IS_UNDEF		1704076	0		==			
ANR	1704806	CallExpression	Z_TYPE ( marks )		1704076	0					
ANR	1704807	Callee	Z_TYPE		1704076	0					
ANR	1704808	Identifier	Z_TYPE		1704076	0					
ANR	1704809	ArgumentList	marks		1704076	1					
ANR	1704810	Argument	marks		1704076	0					
ANR	1704811	Identifier	marks		1704076	0					
ANR	1704812	Identifier	IS_UNDEF		1704076	1					
ANR	1704813	CompoundStatement		156:38:5121:5121	1704076	1					
ANR	1704814	ExpressionStatement	array_init ( & marks )	792:8:24361:24379	1704076	0	True				
ANR	1704815	CallExpression	array_init ( & marks )		1704076	0					
ANR	1704816	Callee	array_init		1704076	0					
ANR	1704817	Identifier	array_init		1704076	0					
ANR	1704818	ArgumentList	& marks		1704076	1					
ANR	1704819	Argument	& marks		1704076	0					
ANR	1704820	UnaryOperationExpression	& marks		1704076	0					
ANR	1704821	UnaryOperator	&		1704076	0					
ANR	1704822	Identifier	marks		1704076	1					
ANR	1704823	ExpressionStatement	"add_index_string ( & marks , matched - 1 , ( char * ) mark )"	794:7:24397:24449	1704076	1	True				
ANR	1704824	CallExpression	"add_index_string ( & marks , matched - 1 , ( char * ) mark )"		1704076	0					
ANR	1704825	Callee	add_index_string		1704076	0					
ANR	1704826	Identifier	add_index_string		1704076	0					
ANR	1704827	ArgumentList	& marks		1704076	1					
ANR	1704828	Argument	& marks		1704076	0					
ANR	1704829	UnaryOperationExpression	& marks		1704076	0					
ANR	1704830	UnaryOperator	&		1704076	0					
ANR	1704831	Identifier	marks		1704076	1					
ANR	1704832	Argument	matched - 1		1704076	1					
ANR	1704833	AdditiveExpression	matched - 1		1704076	0		-			
ANR	1704834	Identifier	matched		1704076	0					
ANR	1704835	PrimaryExpression	1		1704076	1					
ANR	1704836	Argument	( char * ) mark		1704076	2					
ANR	1704837	CastExpression	( char * ) mark		1704076	0					
ANR	1704838	CastTarget	char *		1704076	0					
ANR	1704839	Identifier	mark		1704076	1					
ANR	1704840	IfStatement	if ( count < num_subpats )		1704076	2					
ANR	1704841	Condition	count < num_subpats	801:10:24647:24665	1704076	0	True				
ANR	1704842	RelationalExpression	count < num_subpats		1704076	0		<			
ANR	1704843	Identifier	count		1704076	0					
ANR	1704844	Identifier	num_subpats		1704076	1					
ANR	1704845	CompoundStatement		166:31:5438:5438	1704076	1					
ANR	1704846	ForStatement	for ( ; i < num_subpats ; i ++ )		1704076	0					
ANR	1704847	Condition	i < num_subpats	802:14:24684:24698	1704076	0	True				
ANR	1704848	RelationalExpression	i < num_subpats		1704076	0		<			
ANR	1704849	Identifier	i		1704076	0					
ANR	1704850	Identifier	num_subpats		1704076	1					
ANR	1704851	PostIncDecOperationExpression	i ++	802:31:24701:24703	1704076	1	True				
ANR	1704852	Identifier	i		1704076	0					
ANR	1704853	IncDec	++		1704076	1					
ANR	1704854	CompoundStatement		167:36:5476:5476	1704076	2					
ANR	1704855	ExpressionStatement	"add_next_index_string ( & match_sets [ i ] , """" )"	803:8:24716:24757	1704076	0	True				
ANR	1704856	CallExpression	"add_next_index_string ( & match_sets [ i ] , """" )"		1704076	0					
ANR	1704857	Callee	add_next_index_string		1704076	0					
ANR	1704858	Identifier	add_next_index_string		1704076	0					
ANR	1704859	ArgumentList	& match_sets [ i ]		1704076	1					
ANR	1704860	Argument	& match_sets [ i ]		1704076	0					
ANR	1704861	UnaryOperationExpression	& match_sets [ i ]		1704076	0					
ANR	1704862	UnaryOperator	&		1704076	0					
ANR	1704863	ArrayIndexing	match_sets [ i ]		1704076	1					
ANR	1704864	Identifier	match_sets		1704076	0					
ANR	1704865	Identifier	i		1704076	1					
ANR	1704866	Argument	""""""		1704076	1					
ANR	1704867	PrimaryExpression	""""""		1704076	0					
ANR	1704868	ElseStatement	else		1704076	0					
ANR	1704869	CompoundStatement		171:12:5558:5558	1704076	0					
ANR	1704870	ExpressionStatement	"array_init_size ( & result_set , count + ( mark ? 1 : 0 ) )"	808:6:24838:24890	1704076	0	True				
ANR	1704871	CallExpression	"array_init_size ( & result_set , count + ( mark ? 1 : 0 ) )"		1704076	0					
ANR	1704872	Callee	array_init_size		1704076	0					
ANR	1704873	Identifier	array_init_size		1704076	0					
ANR	1704874	ArgumentList	& result_set		1704076	1					
ANR	1704875	Argument	& result_set		1704076	0					
ANR	1704876	UnaryOperationExpression	& result_set		1704076	0					
ANR	1704877	UnaryOperator	&		1704076	0					
ANR	1704878	Identifier	result_set		1704076	1					
ANR	1704879	Argument	count + ( mark ? 1 : 0 )		1704076	1					
ANR	1704880	AdditiveExpression	count + ( mark ? 1 : 0 )		1704076	0		+			
ANR	1704881	Identifier	count		1704076	0					
ANR	1704882	ConditionalExpression	mark ? 1 : 0		1704076	1					
ANR	1704883	Condition	mark		1704076	0					
ANR	1704884	Identifier	mark		1704076	0					
ANR	1704885	PrimaryExpression	1		1704076	1					
ANR	1704886	PrimaryExpression	0		1704076	2					
ANR	1704887	IfStatement	if ( subpat_names )		1704076	1					
ANR	1704888	Condition	subpat_names	811:10:24945:24956	1704076	0	True				
ANR	1704889	Identifier	subpat_names		1704076	0					
ANR	1704890	CompoundStatement		176:24:5729:5729	1704076	1					
ANR	1704891	IfStatement	if ( offset_capture )		1704076	0					
ANR	1704892	Condition	offset_capture	812:11:24972:24985	1704076	0	True				
ANR	1704893	Identifier	offset_capture		1704076	0					
ANR	1704894	CompoundStatement		177:27:5758:5758	1704076	1					
ANR	1704895	ForStatement	for ( i = 0 ; i < count ; i ++ )		1704076	0					
ANR	1704896	ForInit	i = 0 ;	813:13:25003:25008	1704076	0	True				
ANR	1704897	AssignmentExpression	i = 0		1704076	0		=			
ANR	1704898	Identifier	i		1704076	0					
ANR	1704899	PrimaryExpression	0		1704076	1					
ANR	1704900	Condition	i < count	813:20:25010:25018	1704076	1	True				
ANR	1704901	RelationalExpression	i < count		1704076	0		<			
ANR	1704902	Identifier	i		1704076	0					
ANR	1704903	Identifier	count		1704076	1					
ANR	1704904	PostIncDecOperationExpression	i ++	813:31:25021:25023	1704076	2	True				
ANR	1704905	Identifier	i		1704076	0					
ANR	1704906	IncDec	++		1704076	1					
ANR	1704907	CompoundStatement		178:36:5796:5796	1704076	3					
ANR	1704908	ExpressionStatement	"add_offset_pair ( & result_set , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , offsets [ i << 1 ] , subpat_names [ i ] )"	814:9:25037:25168	1704076	0	True				
ANR	1704909	CallExpression	"add_offset_pair ( & result_set , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , offsets [ i << 1 ] , subpat_names [ i ] )"		1704076	0					
ANR	1704910	Callee	add_offset_pair		1704076	0					
ANR	1704911	Identifier	add_offset_pair		1704076	0					
ANR	1704912	ArgumentList	& result_set		1704076	1					
ANR	1704913	Argument	& result_set		1704076	0					
ANR	1704914	UnaryOperationExpression	& result_set		1704076	0					
ANR	1704915	UnaryOperator	&		1704076	0					
ANR	1704916	Identifier	result_set		1704076	1					
ANR	1704917	Argument	( char * ) stringlist [ i ]		1704076	1					
ANR	1704918	CastExpression	( char * ) stringlist [ i ]		1704076	0					
ANR	1704919	CastTarget	char *		1704076	0					
ANR	1704920	ArrayIndexing	stringlist [ i ]		1704076	1					
ANR	1704921	Identifier	stringlist		1704076	0					
ANR	1704922	Identifier	i		1704076	1					
ANR	1704923	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	2					
ANR	1704924	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	0		-			
ANR	1704925	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1704076	0					
ANR	1704926	Identifier	offsets		1704076	0					
ANR	1704927	AdditiveExpression	( i << 1 ) + 1		1704076	1		+			
ANR	1704928	ShiftExpression	i << 1		1704076	0		<<			
ANR	1704929	Identifier	i		1704076	0					
ANR	1704930	PrimaryExpression	1		1704076	1					
ANR	1704931	PrimaryExpression	1		1704076	1					
ANR	1704932	ArrayIndexing	offsets [ i << 1 ]		1704076	1					
ANR	1704933	Identifier	offsets		1704076	0					
ANR	1704934	ShiftExpression	i << 1		1704076	1		<<			
ANR	1704935	Identifier	i		1704076	0					
ANR	1704936	PrimaryExpression	1		1704076	1					
ANR	1704937	Argument	offsets [ i << 1 ]		1704076	3					
ANR	1704938	ArrayIndexing	offsets [ i << 1 ]		1704076	0					
ANR	1704939	Identifier	offsets		1704076	0					
ANR	1704940	ShiftExpression	i << 1		1704076	1		<<			
ANR	1704941	Identifier	i		1704076	0					
ANR	1704942	PrimaryExpression	1		1704076	1					
ANR	1704943	Argument	subpat_names [ i ]		1704076	4					
ANR	1704944	ArrayIndexing	subpat_names [ i ]		1704076	0					
ANR	1704945	Identifier	subpat_names		1704076	0					
ANR	1704946	Identifier	i		1704076	1					
ANR	1704947	ElseStatement	else		1704076	0					
ANR	1704948	CompoundStatement		182:14:5964:5964	1704076	0					
ANR	1704949	ForStatement	for ( i = 0 ; i < count ; i ++ )		1704076	0					
ANR	1704950	ForInit	i = 0 ;	818:13:25209:25214	1704076	0	True				
ANR	1704951	AssignmentExpression	i = 0		1704076	0		=			
ANR	1704952	Identifier	i		1704076	0					
ANR	1704953	PrimaryExpression	0		1704076	1					
ANR	1704954	Condition	i < count	818:20:25216:25224	1704076	1	True				
ANR	1704955	RelationalExpression	i < count		1704076	0		<			
ANR	1704956	Identifier	i		1704076	0					
ANR	1704957	Identifier	count		1704076	1					
ANR	1704958	PostIncDecOperationExpression	i ++	818:31:25227:25229	1704076	2	True				
ANR	1704959	Identifier	i		1704076	0					
ANR	1704960	IncDec	++		1704076	1					
ANR	1704961	CompoundStatement		183:36:6002:6002	1704076	3					
ANR	1704962	IfStatement	if ( subpat_names [ i ] )		1704076	0					
ANR	1704963	Condition	subpat_names [ i ]	819:13:25247:25261	1704076	0	True				
ANR	1704964	ArrayIndexing	subpat_names [ i ]		1704076	0					
ANR	1704965	Identifier	subpat_names		1704076	0					
ANR	1704966	Identifier	i		1704076	1					
ANR	1704967	CompoundStatement		184:30:6034:6034	1704076	1					
ANR	1704968	ExpressionStatement	"add_assoc_stringl ( & result_set , subpat_names [ i ] , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"	820:10:25276:25399	1704076	0	True				
ANR	1704969	CallExpression	"add_assoc_stringl ( & result_set , subpat_names [ i ] , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"		1704076	0					
ANR	1704970	Callee	add_assoc_stringl		1704076	0					
ANR	1704971	Identifier	add_assoc_stringl		1704076	0					
ANR	1704972	ArgumentList	& result_set		1704076	1					
ANR	1704973	Argument	& result_set		1704076	0					
ANR	1704974	UnaryOperationExpression	& result_set		1704076	0					
ANR	1704975	UnaryOperator	&		1704076	0					
ANR	1704976	Identifier	result_set		1704076	1					
ANR	1704977	Argument	subpat_names [ i ]		1704076	1					
ANR	1704978	ArrayIndexing	subpat_names [ i ]		1704076	0					
ANR	1704979	Identifier	subpat_names		1704076	0					
ANR	1704980	Identifier	i		1704076	1					
ANR	1704981	Argument	( char * ) stringlist [ i ]		1704076	2					
ANR	1704982	CastExpression	( char * ) stringlist [ i ]		1704076	0					
ANR	1704983	CastTarget	char *		1704076	0					
ANR	1704984	ArrayIndexing	stringlist [ i ]		1704076	1					
ANR	1704985	Identifier	stringlist		1704076	0					
ANR	1704986	Identifier	i		1704076	1					
ANR	1704987	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	3					
ANR	1704988	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	0		-			
ANR	1704989	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1704076	0					
ANR	1704990	Identifier	offsets		1704076	0					
ANR	1704991	AdditiveExpression	( i << 1 ) + 1		1704076	1		+			
ANR	1704992	ShiftExpression	i << 1		1704076	0		<<			
ANR	1704993	Identifier	i		1704076	0					
ANR	1704994	PrimaryExpression	1		1704076	1					
ANR	1704995	PrimaryExpression	1		1704076	1					
ANR	1704996	ArrayIndexing	offsets [ i << 1 ]		1704076	1					
ANR	1704997	Identifier	offsets		1704076	0					
ANR	1704998	ShiftExpression	i << 1		1704076	1		<<			
ANR	1704999	Identifier	i		1704076	0					
ANR	1705000	PrimaryExpression	1		1704076	1					
ANR	1705001	ExpressionStatement	"add_next_index_stringl ( & result_set , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"	823:9:25421:25531	1704076	1	True				
ANR	1705002	CallExpression	"add_next_index_stringl ( & result_set , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"		1704076	0					
ANR	1705003	Callee	add_next_index_stringl		1704076	0					
ANR	1705004	Identifier	add_next_index_stringl		1704076	0					
ANR	1705005	ArgumentList	& result_set		1704076	1					
ANR	1705006	Argument	& result_set		1704076	0					
ANR	1705007	UnaryOperationExpression	& result_set		1704076	0					
ANR	1705008	UnaryOperator	&		1704076	0					
ANR	1705009	Identifier	result_set		1704076	1					
ANR	1705010	Argument	( char * ) stringlist [ i ]		1704076	1					
ANR	1705011	CastExpression	( char * ) stringlist [ i ]		1704076	0					
ANR	1705012	CastTarget	char *		1704076	0					
ANR	1705013	ArrayIndexing	stringlist [ i ]		1704076	1					
ANR	1705014	Identifier	stringlist		1704076	0					
ANR	1705015	Identifier	i		1704076	1					
ANR	1705016	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	2					
ANR	1705017	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	0		-			
ANR	1705018	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1704076	0					
ANR	1705019	Identifier	offsets		1704076	0					
ANR	1705020	AdditiveExpression	( i << 1 ) + 1		1704076	1		+			
ANR	1705021	ShiftExpression	i << 1		1704076	0		<<			
ANR	1705022	Identifier	i		1704076	0					
ANR	1705023	PrimaryExpression	1		1704076	1					
ANR	1705024	PrimaryExpression	1		1704076	1					
ANR	1705025	ArrayIndexing	offsets [ i << 1 ]		1704076	1					
ANR	1705026	Identifier	offsets		1704076	0					
ANR	1705027	ShiftExpression	i << 1		1704076	1		<<			
ANR	1705028	Identifier	i		1704076	0					
ANR	1705029	PrimaryExpression	1		1704076	1					
ANR	1705030	ElseStatement	else		1704076	0					
ANR	1705031	CompoundStatement		192:13:6335:6335	1704076	0					
ANR	1705032	IfStatement	if ( offset_capture )		1704076	0					
ANR	1705033	Condition	offset_capture	828:11:25578:25591	1704076	0	True				
ANR	1705034	Identifier	offset_capture		1704076	0					
ANR	1705035	CompoundStatement		193:27:6364:6364	1704076	1					
ANR	1705036	ForStatement	for ( i = 0 ; i < count ; i ++ )		1704076	0					
ANR	1705037	ForInit	i = 0 ;	829:13:25609:25614	1704076	0	True				
ANR	1705038	AssignmentExpression	i = 0		1704076	0		=			
ANR	1705039	Identifier	i		1704076	0					
ANR	1705040	PrimaryExpression	0		1704076	1					
ANR	1705041	Condition	i < count	829:20:25616:25624	1704076	1	True				
ANR	1705042	RelationalExpression	i < count		1704076	0		<			
ANR	1705043	Identifier	i		1704076	0					
ANR	1705044	Identifier	count		1704076	1					
ANR	1705045	PostIncDecOperationExpression	i ++	829:31:25627:25629	1704076	2	True				
ANR	1705046	Identifier	i		1704076	0					
ANR	1705047	IncDec	++		1704076	1					
ANR	1705048	CompoundStatement		194:36:6402:6402	1704076	3					
ANR	1705049	ExpressionStatement	"add_offset_pair ( & result_set , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , offsets [ i << 1 ] , NULL )"	830:9:25643:25763	1704076	0	True				
ANR	1705050	CallExpression	"add_offset_pair ( & result_set , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , offsets [ i << 1 ] , NULL )"		1704076	0					
ANR	1705051	Callee	add_offset_pair		1704076	0					
ANR	1705052	Identifier	add_offset_pair		1704076	0					
ANR	1705053	ArgumentList	& result_set		1704076	1					
ANR	1705054	Argument	& result_set		1704076	0					
ANR	1705055	UnaryOperationExpression	& result_set		1704076	0					
ANR	1705056	UnaryOperator	&		1704076	0					
ANR	1705057	Identifier	result_set		1704076	1					
ANR	1705058	Argument	( char * ) stringlist [ i ]		1704076	1					
ANR	1705059	CastExpression	( char * ) stringlist [ i ]		1704076	0					
ANR	1705060	CastTarget	char *		1704076	0					
ANR	1705061	ArrayIndexing	stringlist [ i ]		1704076	1					
ANR	1705062	Identifier	stringlist		1704076	0					
ANR	1705063	Identifier	i		1704076	1					
ANR	1705064	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	2					
ANR	1705065	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	0		-			
ANR	1705066	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1704076	0					
ANR	1705067	Identifier	offsets		1704076	0					
ANR	1705068	AdditiveExpression	( i << 1 ) + 1		1704076	1		+			
ANR	1705069	ShiftExpression	i << 1		1704076	0		<<			
ANR	1705070	Identifier	i		1704076	0					
ANR	1705071	PrimaryExpression	1		1704076	1					
ANR	1705072	PrimaryExpression	1		1704076	1					
ANR	1705073	ArrayIndexing	offsets [ i << 1 ]		1704076	1					
ANR	1705074	Identifier	offsets		1704076	0					
ANR	1705075	ShiftExpression	i << 1		1704076	1		<<			
ANR	1705076	Identifier	i		1704076	0					
ANR	1705077	PrimaryExpression	1		1704076	1					
ANR	1705078	Argument	offsets [ i << 1 ]		1704076	3					
ANR	1705079	ArrayIndexing	offsets [ i << 1 ]		1704076	0					
ANR	1705080	Identifier	offsets		1704076	0					
ANR	1705081	ShiftExpression	i << 1		1704076	1		<<			
ANR	1705082	Identifier	i		1704076	0					
ANR	1705083	PrimaryExpression	1		1704076	1					
ANR	1705084	Argument	NULL		1704076	4					
ANR	1705085	Identifier	NULL		1704076	0					
ANR	1705086	ElseStatement	else		1704076	0					
ANR	1705087	CompoundStatement		198:14:6559:6559	1704076	0					
ANR	1705088	ForStatement	for ( i = 0 ; i < count ; i ++ )		1704076	0					
ANR	1705089	ForInit	i = 0 ;	834:13:25804:25809	1704076	0	True				
ANR	1705090	AssignmentExpression	i = 0		1704076	0		=			
ANR	1705091	Identifier	i		1704076	0					
ANR	1705092	PrimaryExpression	0		1704076	1					
ANR	1705093	Condition	i < count	834:20:25811:25819	1704076	1	True				
ANR	1705094	RelationalExpression	i < count		1704076	0		<			
ANR	1705095	Identifier	i		1704076	0					
ANR	1705096	Identifier	count		1704076	1					
ANR	1705097	PostIncDecOperationExpression	i ++	834:31:25822:25824	1704076	2	True				
ANR	1705098	Identifier	i		1704076	0					
ANR	1705099	IncDec	++		1704076	1					
ANR	1705100	CompoundStatement		199:36:6597:6597	1704076	3					
ANR	1705101	ExpressionStatement	"add_next_index_stringl ( & result_set , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"	835:9:25838:25948	1704076	0	True				
ANR	1705102	CallExpression	"add_next_index_stringl ( & result_set , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"		1704076	0					
ANR	1705103	Callee	add_next_index_stringl		1704076	0					
ANR	1705104	Identifier	add_next_index_stringl		1704076	0					
ANR	1705105	ArgumentList	& result_set		1704076	1					
ANR	1705106	Argument	& result_set		1704076	0					
ANR	1705107	UnaryOperationExpression	& result_set		1704076	0					
ANR	1705108	UnaryOperator	&		1704076	0					
ANR	1705109	Identifier	result_set		1704076	1					
ANR	1705110	Argument	( char * ) stringlist [ i ]		1704076	1					
ANR	1705111	CastExpression	( char * ) stringlist [ i ]		1704076	0					
ANR	1705112	CastTarget	char *		1704076	0					
ANR	1705113	ArrayIndexing	stringlist [ i ]		1704076	1					
ANR	1705114	Identifier	stringlist		1704076	0					
ANR	1705115	Identifier	i		1704076	1					
ANR	1705116	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	2					
ANR	1705117	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	0		-			
ANR	1705118	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1704076	0					
ANR	1705119	Identifier	offsets		1704076	0					
ANR	1705120	AdditiveExpression	( i << 1 ) + 1		1704076	1		+			
ANR	1705121	ShiftExpression	i << 1		1704076	0		<<			
ANR	1705122	Identifier	i		1704076	0					
ANR	1705123	PrimaryExpression	1		1704076	1					
ANR	1705124	PrimaryExpression	1		1704076	1					
ANR	1705125	ArrayIndexing	offsets [ i << 1 ]		1704076	1					
ANR	1705126	Identifier	offsets		1704076	0					
ANR	1705127	ShiftExpression	i << 1		1704076	1		<<			
ANR	1705128	Identifier	i		1704076	0					
ANR	1705129	PrimaryExpression	1		1704076	1					
ANR	1705130	IfStatement	if ( mark )		1704076	2					
ANR	1705131	Condition	mark	841:10:26022:26025	1704076	0	True				
ANR	1705132	Identifier	mark		1704076	0					
ANR	1705133	CompoundStatement		206:16:6798:6798	1704076	1					
ANR	1705134	ExpressionStatement	"add_assoc_string_ex ( & result_set , ""MARK"" , sizeof ( ""MARK"" ) - 1 , ( char * ) mark )"	842:7:26037:26111	1704076	0	True				
ANR	1705135	CallExpression	"add_assoc_string_ex ( & result_set , ""MARK"" , sizeof ( ""MARK"" ) - 1 , ( char * ) mark )"		1704076	0					
ANR	1705136	Callee	add_assoc_string_ex		1704076	0					
ANR	1705137	Identifier	add_assoc_string_ex		1704076	0					
ANR	1705138	ArgumentList	& result_set		1704076	1					
ANR	1705139	Argument	& result_set		1704076	0					
ANR	1705140	UnaryOperationExpression	& result_set		1704076	0					
ANR	1705141	UnaryOperator	&		1704076	0					
ANR	1705142	Identifier	result_set		1704076	1					
ANR	1705143	Argument	"""MARK"""		1704076	1					
ANR	1705144	PrimaryExpression	"""MARK"""		1704076	0					
ANR	1705145	Argument	"sizeof ( ""MARK"" ) - 1"		1704076	2					
ANR	1705146	AdditiveExpression	"sizeof ( ""MARK"" ) - 1"		1704076	0		-			
ANR	1705147	SizeofExpression	"sizeof ( ""MARK"" )"		1704076	0					
ANR	1705148	Sizeof	sizeof		1704076	0					
ANR	1705149	PrimaryExpression	"""MARK"""		1704076	1					
ANR	1705150	PrimaryExpression	1		1704076	1					
ANR	1705151	Argument	( char * ) mark		1704076	3					
ANR	1705152	CastExpression	( char * ) mark		1704076	0					
ANR	1705153	CastTarget	char *		1704076	0					
ANR	1705154	Identifier	mark		1704076	1					
ANR	1705155	ExpressionStatement	"zend_hash_next_index_insert ( Z_ARRVAL_P ( subpats ) , & result_set )"	845:6:26170:26231	1704076	3	True				
ANR	1705156	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( subpats ) , & result_set )"		1704076	0					
ANR	1705157	Callee	zend_hash_next_index_insert		1704076	0					
ANR	1705158	Identifier	zend_hash_next_index_insert		1704076	0					
ANR	1705159	ArgumentList	Z_ARRVAL_P ( subpats )		1704076	1					
ANR	1705160	Argument	Z_ARRVAL_P ( subpats )		1704076	0					
ANR	1705161	CallExpression	Z_ARRVAL_P ( subpats )		1704076	0					
ANR	1705162	Callee	Z_ARRVAL_P		1704076	0					
ANR	1705163	Identifier	Z_ARRVAL_P		1704076	0					
ANR	1705164	ArgumentList	subpats		1704076	1					
ANR	1705165	Argument	subpats		1704076	0					
ANR	1705166	Identifier	subpats		1704076	0					
ANR	1705167	Argument	& result_set		1704076	1					
ANR	1705168	UnaryOperationExpression	& result_set		1704076	0					
ANR	1705169	UnaryOperator	&		1704076	0					
ANR	1705170	Identifier	result_set		1704076	1					
ANR	1705171	ElseStatement	else		1704076	0					
ANR	1705172	CompoundStatement		212:11:7021:7021	1704076	0					
ANR	1705173	IfStatement	if ( subpat_names )		1704076	0					
ANR	1705174	Condition	subpat_names	849:9:26364:26375	1704076	0	True				
ANR	1705175	Identifier	subpat_names		1704076	0					
ANR	1705176	CompoundStatement		214:23:7148:7148	1704076	1					
ANR	1705177	IfStatement	if ( offset_capture )		1704076	0					
ANR	1705178	Condition	offset_capture	850:10:26390:26403	1704076	0	True				
ANR	1705179	Identifier	offset_capture		1704076	0					
ANR	1705180	CompoundStatement		215:26:7176:7176	1704076	1					
ANR	1705181	ForStatement	for ( i = 0 ; i < count ; i ++ )		1704076	0					
ANR	1705182	ForInit	i = 0 ;	851:12:26420:26425	1704076	0	True				
ANR	1705183	AssignmentExpression	i = 0		1704076	0		=			
ANR	1705184	Identifier	i		1704076	0					
ANR	1705185	PrimaryExpression	0		1704076	1					
ANR	1705186	Condition	i < count	851:19:26427:26435	1704076	1	True				
ANR	1705187	RelationalExpression	i < count		1704076	0		<			
ANR	1705188	Identifier	i		1704076	0					
ANR	1705189	Identifier	count		1704076	1					
ANR	1705190	PostIncDecOperationExpression	i ++	851:30:26438:26440	1704076	2	True				
ANR	1705191	Identifier	i		1704076	0					
ANR	1705192	IncDec	++		1704076	1					
ANR	1705193	CompoundStatement		216:35:7213:7213	1704076	3					
ANR	1705194	ExpressionStatement	"add_offset_pair ( subpats , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , offsets [ i << 1 ] , subpat_names [ i ] )"	852:8:26453:26591	1704076	0	True				
ANR	1705195	CallExpression	"add_offset_pair ( subpats , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , offsets [ i << 1 ] , subpat_names [ i ] )"		1704076	0					
ANR	1705196	Callee	add_offset_pair		1704076	0					
ANR	1705197	Identifier	add_offset_pair		1704076	0					
ANR	1705198	ArgumentList	subpats		1704076	1					
ANR	1705199	Argument	subpats		1704076	0					
ANR	1705200	Identifier	subpats		1704076	0					
ANR	1705201	Argument	( char * ) stringlist [ i ]		1704076	1					
ANR	1705202	CastExpression	( char * ) stringlist [ i ]		1704076	0					
ANR	1705203	CastTarget	char *		1704076	0					
ANR	1705204	ArrayIndexing	stringlist [ i ]		1704076	1					
ANR	1705205	Identifier	stringlist		1704076	0					
ANR	1705206	Identifier	i		1704076	1					
ANR	1705207	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	2					
ANR	1705208	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	0		-			
ANR	1705209	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1704076	0					
ANR	1705210	Identifier	offsets		1704076	0					
ANR	1705211	AdditiveExpression	( i << 1 ) + 1		1704076	1		+			
ANR	1705212	ShiftExpression	i << 1		1704076	0		<<			
ANR	1705213	Identifier	i		1704076	0					
ANR	1705214	PrimaryExpression	1		1704076	1					
ANR	1705215	PrimaryExpression	1		1704076	1					
ANR	1705216	ArrayIndexing	offsets [ i << 1 ]		1704076	1					
ANR	1705217	Identifier	offsets		1704076	0					
ANR	1705218	ShiftExpression	i << 1		1704076	1		<<			
ANR	1705219	Identifier	i		1704076	0					
ANR	1705220	PrimaryExpression	1		1704076	1					
ANR	1705221	Argument	offsets [ i << 1 ]		1704076	3					
ANR	1705222	ArrayIndexing	offsets [ i << 1 ]		1704076	0					
ANR	1705223	Identifier	offsets		1704076	0					
ANR	1705224	ShiftExpression	i << 1		1704076	1		<<			
ANR	1705225	Identifier	i		1704076	0					
ANR	1705226	PrimaryExpression	1		1704076	1					
ANR	1705227	Argument	subpat_names [ i ]		1704076	4					
ANR	1705228	ArrayIndexing	subpat_names [ i ]		1704076	0					
ANR	1705229	Identifier	subpat_names		1704076	0					
ANR	1705230	Identifier	i		1704076	1					
ANR	1705231	ElseStatement	else		1704076	0					
ANR	1705232	CompoundStatement		221:13:7385:7385	1704076	0					
ANR	1705233	ForStatement	for ( i = 0 ; i < count ; i ++ )		1704076	0					
ANR	1705234	ForInit	i = 0 ;	857:12:26629:26634	1704076	0	True				
ANR	1705235	AssignmentExpression	i = 0		1704076	0		=			
ANR	1705236	Identifier	i		1704076	0					
ANR	1705237	PrimaryExpression	0		1704076	1					
ANR	1705238	Condition	i < count	857:19:26636:26644	1704076	1	True				
ANR	1705239	RelationalExpression	i < count		1704076	0		<			
ANR	1705240	Identifier	i		1704076	0					
ANR	1705241	Identifier	count		1704076	1					
ANR	1705242	PostIncDecOperationExpression	i ++	857:30:26647:26649	1704076	2	True				
ANR	1705243	Identifier	i		1704076	0					
ANR	1705244	IncDec	++		1704076	1					
ANR	1705245	CompoundStatement		222:35:7422:7422	1704076	3					
ANR	1705246	IfStatement	if ( subpat_names [ i ] )		1704076	0					
ANR	1705247	Condition	subpat_names [ i ]	858:12:26666:26680	1704076	0	True				
ANR	1705248	ArrayIndexing	subpat_names [ i ]		1704076	0					
ANR	1705249	Identifier	subpat_names		1704076	0					
ANR	1705250	Identifier	i		1704076	1					
ANR	1705251	CompoundStatement		223:29:7453:7453	1704076	1					
ANR	1705252	ExpressionStatement	"add_assoc_stringl ( subpats , subpat_names [ i ] , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"	859:9:26694:26810	1704076	0	True				
ANR	1705253	CallExpression	"add_assoc_stringl ( subpats , subpat_names [ i ] , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"		1704076	0					
ANR	1705254	Callee	add_assoc_stringl		1704076	0					
ANR	1705255	Identifier	add_assoc_stringl		1704076	0					
ANR	1705256	ArgumentList	subpats		1704076	1					
ANR	1705257	Argument	subpats		1704076	0					
ANR	1705258	Identifier	subpats		1704076	0					
ANR	1705259	Argument	subpat_names [ i ]		1704076	1					
ANR	1705260	ArrayIndexing	subpat_names [ i ]		1704076	0					
ANR	1705261	Identifier	subpat_names		1704076	0					
ANR	1705262	Identifier	i		1704076	1					
ANR	1705263	Argument	( char * ) stringlist [ i ]		1704076	2					
ANR	1705264	CastExpression	( char * ) stringlist [ i ]		1704076	0					
ANR	1705265	CastTarget	char *		1704076	0					
ANR	1705266	ArrayIndexing	stringlist [ i ]		1704076	1					
ANR	1705267	Identifier	stringlist		1704076	0					
ANR	1705268	Identifier	i		1704076	1					
ANR	1705269	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	3					
ANR	1705270	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	0		-			
ANR	1705271	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1704076	0					
ANR	1705272	Identifier	offsets		1704076	0					
ANR	1705273	AdditiveExpression	( i << 1 ) + 1		1704076	1		+			
ANR	1705274	ShiftExpression	i << 1		1704076	0		<<			
ANR	1705275	Identifier	i		1704076	0					
ANR	1705276	PrimaryExpression	1		1704076	1					
ANR	1705277	PrimaryExpression	1		1704076	1					
ANR	1705278	ArrayIndexing	offsets [ i << 1 ]		1704076	1					
ANR	1705279	Identifier	offsets		1704076	0					
ANR	1705280	ShiftExpression	i << 1		1704076	1		<<			
ANR	1705281	Identifier	i		1704076	0					
ANR	1705282	PrimaryExpression	1		1704076	1					
ANR	1705283	ExpressionStatement	"add_next_index_stringl ( subpats , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"	862:8:26830:26935	1704076	1	True				
ANR	1705284	CallExpression	"add_next_index_stringl ( subpats , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"		1704076	0					
ANR	1705285	Callee	add_next_index_stringl		1704076	0					
ANR	1705286	Identifier	add_next_index_stringl		1704076	0					
ANR	1705287	ArgumentList	subpats		1704076	1					
ANR	1705288	Argument	subpats		1704076	0					
ANR	1705289	Identifier	subpats		1704076	0					
ANR	1705290	Argument	( char * ) stringlist [ i ]		1704076	1					
ANR	1705291	CastExpression	( char * ) stringlist [ i ]		1704076	0					
ANR	1705292	CastTarget	char *		1704076	0					
ANR	1705293	ArrayIndexing	stringlist [ i ]		1704076	1					
ANR	1705294	Identifier	stringlist		1704076	0					
ANR	1705295	Identifier	i		1704076	1					
ANR	1705296	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	2					
ANR	1705297	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	0		-			
ANR	1705298	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1704076	0					
ANR	1705299	Identifier	offsets		1704076	0					
ANR	1705300	AdditiveExpression	( i << 1 ) + 1		1704076	1		+			
ANR	1705301	ShiftExpression	i << 1		1704076	0		<<			
ANR	1705302	Identifier	i		1704076	0					
ANR	1705303	PrimaryExpression	1		1704076	1					
ANR	1705304	PrimaryExpression	1		1704076	1					
ANR	1705305	ArrayIndexing	offsets [ i << 1 ]		1704076	1					
ANR	1705306	Identifier	offsets		1704076	0					
ANR	1705307	ShiftExpression	i << 1		1704076	1		<<			
ANR	1705308	Identifier	i		1704076	0					
ANR	1705309	PrimaryExpression	1		1704076	1					
ANR	1705310	ElseStatement	else		1704076	0					
ANR	1705311	CompoundStatement		231:12:7736:7736	1704076	0					
ANR	1705312	IfStatement	if ( offset_capture )		1704076	0					
ANR	1705313	Condition	offset_capture	867:10:26978:26991	1704076	0	True				
ANR	1705314	Identifier	offset_capture		1704076	0					
ANR	1705315	CompoundStatement		232:26:7764:7764	1704076	1					
ANR	1705316	ForStatement	for ( i = 0 ; i < count ; i ++ )		1704076	0					
ANR	1705317	ForInit	i = 0 ;	868:12:27008:27013	1704076	0	True				
ANR	1705318	AssignmentExpression	i = 0		1704076	0		=			
ANR	1705319	Identifier	i		1704076	0					
ANR	1705320	PrimaryExpression	0		1704076	1					
ANR	1705321	Condition	i < count	868:19:27015:27023	1704076	1	True				
ANR	1705322	RelationalExpression	i < count		1704076	0		<			
ANR	1705323	Identifier	i		1704076	0					
ANR	1705324	Identifier	count		1704076	1					
ANR	1705325	PostIncDecOperationExpression	i ++	868:30:27026:27028	1704076	2	True				
ANR	1705326	Identifier	i		1704076	0					
ANR	1705327	IncDec	++		1704076	1					
ANR	1705328	CompoundStatement		233:35:7801:7801	1704076	3					
ANR	1705329	ExpressionStatement	"add_offset_pair ( subpats , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , offsets [ i << 1 ] , NULL )"	869:8:27041:27168	1704076	0	True				
ANR	1705330	CallExpression	"add_offset_pair ( subpats , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] , offsets [ i << 1 ] , NULL )"		1704076	0					
ANR	1705331	Callee	add_offset_pair		1704076	0					
ANR	1705332	Identifier	add_offset_pair		1704076	0					
ANR	1705333	ArgumentList	subpats		1704076	1					
ANR	1705334	Argument	subpats		1704076	0					
ANR	1705335	Identifier	subpats		1704076	0					
ANR	1705336	Argument	( char * ) stringlist [ i ]		1704076	1					
ANR	1705337	CastExpression	( char * ) stringlist [ i ]		1704076	0					
ANR	1705338	CastTarget	char *		1704076	0					
ANR	1705339	ArrayIndexing	stringlist [ i ]		1704076	1					
ANR	1705340	Identifier	stringlist		1704076	0					
ANR	1705341	Identifier	i		1704076	1					
ANR	1705342	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	2					
ANR	1705343	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	0		-			
ANR	1705344	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1704076	0					
ANR	1705345	Identifier	offsets		1704076	0					
ANR	1705346	AdditiveExpression	( i << 1 ) + 1		1704076	1		+			
ANR	1705347	ShiftExpression	i << 1		1704076	0		<<			
ANR	1705348	Identifier	i		1704076	0					
ANR	1705349	PrimaryExpression	1		1704076	1					
ANR	1705350	PrimaryExpression	1		1704076	1					
ANR	1705351	ArrayIndexing	offsets [ i << 1 ]		1704076	1					
ANR	1705352	Identifier	offsets		1704076	0					
ANR	1705353	ShiftExpression	i << 1		1704076	1		<<			
ANR	1705354	Identifier	i		1704076	0					
ANR	1705355	PrimaryExpression	1		1704076	1					
ANR	1705356	Argument	offsets [ i << 1 ]		1704076	3					
ANR	1705357	ArrayIndexing	offsets [ i << 1 ]		1704076	0					
ANR	1705358	Identifier	offsets		1704076	0					
ANR	1705359	ShiftExpression	i << 1		1704076	1		<<			
ANR	1705360	Identifier	i		1704076	0					
ANR	1705361	PrimaryExpression	1		1704076	1					
ANR	1705362	Argument	NULL		1704076	4					
ANR	1705363	Identifier	NULL		1704076	0					
ANR	1705364	ElseStatement	else		1704076	0					
ANR	1705365	CompoundStatement		238:13:7962:7962	1704076	0					
ANR	1705366	ForStatement	for ( i = 0 ; i < count ; i ++ )		1704076	0					
ANR	1705367	ForInit	i = 0 ;	874:12:27206:27211	1704076	0	True				
ANR	1705368	AssignmentExpression	i = 0		1704076	0		=			
ANR	1705369	Identifier	i		1704076	0					
ANR	1705370	PrimaryExpression	0		1704076	1					
ANR	1705371	Condition	i < count	874:19:27213:27221	1704076	1	True				
ANR	1705372	RelationalExpression	i < count		1704076	0		<			
ANR	1705373	Identifier	i		1704076	0					
ANR	1705374	Identifier	count		1704076	1					
ANR	1705375	PostIncDecOperationExpression	i ++	874:30:27224:27226	1704076	2	True				
ANR	1705376	Identifier	i		1704076	0					
ANR	1705377	IncDec	++		1704076	1					
ANR	1705378	CompoundStatement		239:35:7999:7999	1704076	3					
ANR	1705379	ExpressionStatement	"add_next_index_stringl ( subpats , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"	875:8:27239:27344	1704076	0	True				
ANR	1705380	CallExpression	"add_next_index_stringl ( subpats , ( char * ) stringlist [ i ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"		1704076	0					
ANR	1705381	Callee	add_next_index_stringl		1704076	0					
ANR	1705382	Identifier	add_next_index_stringl		1704076	0					
ANR	1705383	ArgumentList	subpats		1704076	1					
ANR	1705384	Argument	subpats		1704076	0					
ANR	1705385	Identifier	subpats		1704076	0					
ANR	1705386	Argument	( char * ) stringlist [ i ]		1704076	1					
ANR	1705387	CastExpression	( char * ) stringlist [ i ]		1704076	0					
ANR	1705388	CastTarget	char *		1704076	0					
ANR	1705389	ArrayIndexing	stringlist [ i ]		1704076	1					
ANR	1705390	Identifier	stringlist		1704076	0					
ANR	1705391	Identifier	i		1704076	1					
ANR	1705392	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	2					
ANR	1705393	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1704076	0		-			
ANR	1705394	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1704076	0					
ANR	1705395	Identifier	offsets		1704076	0					
ANR	1705396	AdditiveExpression	( i << 1 ) + 1		1704076	1		+			
ANR	1705397	ShiftExpression	i << 1		1704076	0		<<			
ANR	1705398	Identifier	i		1704076	0					
ANR	1705399	PrimaryExpression	1		1704076	1					
ANR	1705400	PrimaryExpression	1		1704076	1					
ANR	1705401	ArrayIndexing	offsets [ i << 1 ]		1704076	1					
ANR	1705402	Identifier	offsets		1704076	0					
ANR	1705403	ShiftExpression	i << 1		1704076	1		<<			
ANR	1705404	Identifier	i		1704076	0					
ANR	1705405	PrimaryExpression	1		1704076	1					
ANR	1705406	IfStatement	if ( mark )		1704076	1					
ANR	1705407	Condition	mark	881:9:27413:27416	1704076	0	True				
ANR	1705408	Identifier	mark		1704076	0					
ANR	1705409	CompoundStatement		246:15:8189:8189	1704076	1					
ANR	1705410	ExpressionStatement	"add_assoc_string_ex ( subpats , ""MARK"" , sizeof ( ""MARK"" ) - 1 , ( char * ) mark )"	882:6:27427:27497	1704076	0	True				
ANR	1705411	CallExpression	"add_assoc_string_ex ( subpats , ""MARK"" , sizeof ( ""MARK"" ) - 1 , ( char * ) mark )"		1704076	0					
ANR	1705412	Callee	add_assoc_string_ex		1704076	0					
ANR	1705413	Identifier	add_assoc_string_ex		1704076	0					
ANR	1705414	ArgumentList	subpats		1704076	1					
ANR	1705415	Argument	subpats		1704076	0					
ANR	1705416	Identifier	subpats		1704076	0					
ANR	1705417	Argument	"""MARK"""		1704076	1					
ANR	1705418	PrimaryExpression	"""MARK"""		1704076	0					
ANR	1705419	Argument	"sizeof ( ""MARK"" ) - 1"		1704076	2					
ANR	1705420	AdditiveExpression	"sizeof ( ""MARK"" ) - 1"		1704076	0		-			
ANR	1705421	SizeofExpression	"sizeof ( ""MARK"" )"		1704076	0					
ANR	1705422	Sizeof	sizeof		1704076	0					
ANR	1705423	PrimaryExpression	"""MARK"""		1704076	1					
ANR	1705424	PrimaryExpression	1		1704076	1					
ANR	1705425	Argument	( char * ) mark		1704076	3					
ANR	1705426	CastExpression	( char * ) mark		1704076	0					
ANR	1705427	CastTarget	char *		1704076	0					
ANR	1705428	Identifier	mark		1704076	1					
ANR	1705429	ExpressionStatement	pcre_free ( ( void * ) stringlist )	886:4:27517:27547	1704076	2	True				
ANR	1705430	CallExpression	pcre_free ( ( void * ) stringlist )		1704076	0					
ANR	1705431	Callee	pcre_free		1704076	0					
ANR	1705432	Identifier	pcre_free		1704076	0					
ANR	1705433	ArgumentList	( void * ) stringlist		1704076	1					
ANR	1705434	Argument	( void * ) stringlist		1704076	0					
ANR	1705435	CastExpression	( void * ) stringlist		1704076	0					
ANR	1705436	CastTarget	void *		1704076	0					
ANR	1705437	Identifier	stringlist		1704076	1					
ANR	1705438	ElseStatement	else		1704076	0					
ANR	1705439	IfStatement	if ( count == PCRE_ERROR_NOMATCH )		1704076	0					
ANR	1705440	Condition	count == PCRE_ERROR_NOMATCH	888:13:27567:27593	1704076	0	True				
ANR	1705441	EqualityExpression	count == PCRE_ERROR_NOMATCH		1704076	0		==			
ANR	1705442	Identifier	count		1704076	0					
ANR	1705443	Identifier	PCRE_ERROR_NOMATCH		1704076	1					
ANR	1705444	CompoundStatement		253:42:8366:8366	1704076	1					
ANR	1705445	IfStatement	if ( g_notempty != 0 && start_offset < subject_len )		1704076	0					
ANR	1705446	Condition	g_notempty != 0 && start_offset < subject_len	893:7:27867:27911	1704076	0	True				
ANR	1705447	AndExpression	g_notempty != 0 && start_offset < subject_len		1704076	0		&&			
ANR	1705448	EqualityExpression	g_notempty != 0		1704076	0		!=			
ANR	1705449	Identifier	g_notempty		1704076	0					
ANR	1705450	PrimaryExpression	0		1704076	1					
ANR	1705451	RelationalExpression	start_offset < subject_len		1704076	1		<			
ANR	1705452	Identifier	start_offset		1704076	0					
ANR	1705453	Identifier	subject_len		1704076	1					
ANR	1705454	CompoundStatement		259:4:8690:8755	1704076	1					
ANR	1705455	IdentifierDeclStatement	"int unit_len = calculate_unit_length ( pce , subject + start_offset ) ;"	894:4:27920:27985	1704076	0	True				
ANR	1705456	IdentifierDecl	"unit_len = calculate_unit_length ( pce , subject + start_offset )"		1704076	0					
ANR	1705457	IdentifierDeclType	int		1704076	0					
ANR	1705458	Identifier	unit_len		1704076	1					
ANR	1705459	AssignmentExpression	"unit_len = calculate_unit_length ( pce , subject + start_offset )"		1704076	2		=			
ANR	1705460	Identifier	unit_len		1704076	0					
ANR	1705461	CallExpression	"calculate_unit_length ( pce , subject + start_offset )"		1704076	1					
ANR	1705462	Callee	calculate_unit_length		1704076	0					
ANR	1705463	Identifier	calculate_unit_length		1704076	0					
ANR	1705464	ArgumentList	pce		1704076	1					
ANR	1705465	Argument	pce		1704076	0					
ANR	1705466	Identifier	pce		1704076	0					
ANR	1705467	Argument	subject + start_offset		1704076	1					
ANR	1705468	AdditiveExpression	subject + start_offset		1704076	0		+			
ANR	1705469	Identifier	subject		1704076	0					
ANR	1705470	Identifier	start_offset		1704076	1					
ANR	1705471	ExpressionStatement	offsets [ 0 ] = ( int ) start_offset	896:4:27996:28026	1704076	1	True				
ANR	1705472	AssignmentExpression	offsets [ 0 ] = ( int ) start_offset		1704076	0		=			
ANR	1705473	ArrayIndexing	offsets [ 0 ]		1704076	0					
ANR	1705474	Identifier	offsets		1704076	0					
ANR	1705475	PrimaryExpression	0		1704076	1					
ANR	1705476	CastExpression	( int ) start_offset		1704076	1					
ANR	1705477	CastTarget	int		1704076	0					
ANR	1705478	Identifier	start_offset		1704076	1					
ANR	1705479	ExpressionStatement	offsets [ 1 ] = ( int ) ( start_offset + unit_len )	897:4:28032:28075	1704076	2	True				
ANR	1705480	AssignmentExpression	offsets [ 1 ] = ( int ) ( start_offset + unit_len )		1704076	0		=			
ANR	1705481	ArrayIndexing	offsets [ 1 ]		1704076	0					
ANR	1705482	Identifier	offsets		1704076	0					
ANR	1705483	PrimaryExpression	1		1704076	1					
ANR	1705484	CastExpression	( int ) ( start_offset + unit_len )		1704076	1					
ANR	1705485	CastTarget	int		1704076	0					
ANR	1705486	AdditiveExpression	start_offset + unit_len		1704076	1		+			
ANR	1705487	Identifier	start_offset		1704076	0					
ANR	1705488	Identifier	unit_len		1704076	1					
ANR	1705489	ElseStatement	else		1704076	0					
ANR	1705490	BreakStatement	break ;	899:4:28091:28096	1704076	0	True				
ANR	1705491	ElseStatement	else		1704076	0					
ANR	1705492	CompoundStatement		265:9:8877:8877	1704076	0					
ANR	1705493	ExpressionStatement	pcre_handle_exec_error ( count )	901:3:28112:28141	1704076	0	True				
ANR	1705494	CallExpression	pcre_handle_exec_error ( count )		1704076	0					
ANR	1705495	Callee	pcre_handle_exec_error		1704076	0					
ANR	1705496	Identifier	pcre_handle_exec_error		1704076	0					
ANR	1705497	ArgumentList	count		1704076	1					
ANR	1705498	Argument	count		1704076	0					
ANR	1705499	Identifier	count		1704076	0					
ANR	1705500	BreakStatement	break ;	902:3:28146:28151	1704076	1	True				
ANR	1705501	ExpressionStatement	g_notempty = ( offsets [ 1 ] == offsets [ 0 ] ) ? PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED : 0	909:2:28435:28517	1704076	4	True				
ANR	1705502	AssignmentExpression	g_notempty = ( offsets [ 1 ] == offsets [ 0 ] ) ? PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED : 0		1704076	0		=			
ANR	1705503	Identifier	g_notempty		1704076	0					
ANR	1705504	ConditionalExpression	( offsets [ 1 ] == offsets [ 0 ] ) ? PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED : 0		1704076	1					
ANR	1705505	Condition	offsets [ 1 ] == offsets [ 0 ]		1704076	0					
ANR	1705506	EqualityExpression	offsets [ 1 ] == offsets [ 0 ]		1704076	0		==			
ANR	1705507	ArrayIndexing	offsets [ 1 ]		1704076	0					
ANR	1705508	Identifier	offsets		1704076	0					
ANR	1705509	PrimaryExpression	1		1704076	1					
ANR	1705510	ArrayIndexing	offsets [ 0 ]		1704076	1					
ANR	1705511	Identifier	offsets		1704076	0					
ANR	1705512	PrimaryExpression	0		1704076	1					
ANR	1705513	InclusiveOrExpression	PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED		1704076	1		|			
ANR	1705514	Identifier	PCRE_NOTEMPTY_ATSTART		1704076	0					
ANR	1705515	Identifier	PCRE_ANCHORED		1704076	1					
ANR	1705516	PrimaryExpression	0		1704076	2					
ANR	1705517	ExpressionStatement	start_offset = offsets [ 1 ]	912:2:28586:28611	1704076	5	True				
ANR	1705518	AssignmentExpression	start_offset = offsets [ 1 ]		1704076	0		=			
ANR	1705519	Identifier	start_offset		1704076	0					
ANR	1705520	ArrayIndexing	offsets [ 1 ]		1704076	1					
ANR	1705521	Identifier	offsets		1704076	0					
ANR	1705522	PrimaryExpression	1		1704076	1					
ANR	1705523	Condition	global	913:10:28623:28628	1704076	1	True				
ANR	1705524	Identifier	global		1704076	0					
ANR	1705525	IfStatement	if ( global && subpats && subpats_order == PREG_PATTERN_ORDER )		1704076	38					
ANR	1705526	Condition	global && subpats && subpats_order == PREG_PATTERN_ORDER	916:5:28697:28752	1704076	0	True				
ANR	1705527	AndExpression	global && subpats && subpats_order == PREG_PATTERN_ORDER		1704076	0		&&			
ANR	1705528	Identifier	global		1704076	0					
ANR	1705529	AndExpression	subpats && subpats_order == PREG_PATTERN_ORDER		1704076	1		&&			
ANR	1705530	Identifier	subpats		1704076	0					
ANR	1705531	EqualityExpression	subpats_order == PREG_PATTERN_ORDER		1704076	1		==			
ANR	1705532	Identifier	subpats_order		1704076	0					
ANR	1705533	Identifier	PREG_PATTERN_ORDER		1704076	1					
ANR	1705534	CompoundStatement		281:63:9525:9525	1704076	1					
ANR	1705535	IfStatement	if ( subpat_names )		1704076	0					
ANR	1705536	Condition	subpat_names	917:6:28763:28774	1704076	0	True				
ANR	1705537	Identifier	subpat_names		1704076	0					
ANR	1705538	CompoundStatement		282:20:9547:9547	1704076	1					
ANR	1705539	ForStatement	for ( i = 0 ; i < num_subpats ; i ++ )		1704076	0					
ANR	1705540	ForInit	i = 0 ;	918:8:28787:28792	1704076	0	True				
ANR	1705541	AssignmentExpression	i = 0		1704076	0		=			
ANR	1705542	Identifier	i		1704076	0					
ANR	1705543	PrimaryExpression	0		1704076	1					
ANR	1705544	Condition	i < num_subpats	918:15:28794:28808	1704076	1	True				
ANR	1705545	RelationalExpression	i < num_subpats		1704076	0		<			
ANR	1705546	Identifier	i		1704076	0					
ANR	1705547	Identifier	num_subpats		1704076	1					
ANR	1705548	PostIncDecOperationExpression	i ++	918:32:28811:28813	1704076	2	True				
ANR	1705549	Identifier	i		1704076	0					
ANR	1705550	IncDec	++		1704076	1					
ANR	1705551	CompoundStatement		283:37:9586:9586	1704076	3					
ANR	1705552	IfStatement	if ( subpat_names [ i ] )		1704076	0					
ANR	1705553	Condition	subpat_names [ i ]	919:8:28826:28840	1704076	0	True				
ANR	1705554	ArrayIndexing	subpat_names [ i ]		1704076	0					
ANR	1705555	Identifier	subpat_names		1704076	0					
ANR	1705556	Identifier	i		1704076	1					
ANR	1705557	CompoundStatement		284:25:9613:9613	1704076	1					
ANR	1705558	ExpressionStatement	"zend_hash_str_update ( Z_ARRVAL_P ( subpats ) , subpat_names [ i ] , strlen ( subpat_names [ i ] ) , & match_sets [ i ] )"	920:5:28850:28959	1704076	0	True				
ANR	1705559	CallExpression	"zend_hash_str_update ( Z_ARRVAL_P ( subpats ) , subpat_names [ i ] , strlen ( subpat_names [ i ] ) , & match_sets [ i ] )"		1704076	0					
ANR	1705560	Callee	zend_hash_str_update		1704076	0					
ANR	1705561	Identifier	zend_hash_str_update		1704076	0					
ANR	1705562	ArgumentList	Z_ARRVAL_P ( subpats )		1704076	1					
ANR	1705563	Argument	Z_ARRVAL_P ( subpats )		1704076	0					
ANR	1705564	CallExpression	Z_ARRVAL_P ( subpats )		1704076	0					
ANR	1705565	Callee	Z_ARRVAL_P		1704076	0					
ANR	1705566	Identifier	Z_ARRVAL_P		1704076	0					
ANR	1705567	ArgumentList	subpats		1704076	1					
ANR	1705568	Argument	subpats		1704076	0					
ANR	1705569	Identifier	subpats		1704076	0					
ANR	1705570	Argument	subpat_names [ i ]		1704076	1					
ANR	1705571	ArrayIndexing	subpat_names [ i ]		1704076	0					
ANR	1705572	Identifier	subpat_names		1704076	0					
ANR	1705573	Identifier	i		1704076	1					
ANR	1705574	Argument	strlen ( subpat_names [ i ] )		1704076	2					
ANR	1705575	CallExpression	strlen ( subpat_names [ i ] )		1704076	0					
ANR	1705576	Callee	strlen		1704076	0					
ANR	1705577	Identifier	strlen		1704076	0					
ANR	1705578	ArgumentList	subpat_names [ i ]		1704076	1					
ANR	1705579	Argument	subpat_names [ i ]		1704076	0					
ANR	1705580	ArrayIndexing	subpat_names [ i ]		1704076	0					
ANR	1705581	Identifier	subpat_names		1704076	0					
ANR	1705582	Identifier	i		1704076	1					
ANR	1705583	Argument	& match_sets [ i ]		1704076	3					
ANR	1705584	UnaryOperationExpression	& match_sets [ i ]		1704076	0					
ANR	1705585	UnaryOperator	&		1704076	0					
ANR	1705586	ArrayIndexing	match_sets [ i ]		1704076	1					
ANR	1705587	Identifier	match_sets		1704076	0					
ANR	1705588	Identifier	i		1704076	1					
ANR	1705589	ExpressionStatement	Z_ADDREF ( match_sets [ i ] )	922:5:28966:28989	1704076	1	True				
ANR	1705590	CallExpression	Z_ADDREF ( match_sets [ i ] )		1704076	0					
ANR	1705591	Callee	Z_ADDREF		1704076	0					
ANR	1705592	Identifier	Z_ADDREF		1704076	0					
ANR	1705593	ArgumentList	match_sets [ i ]		1704076	1					
ANR	1705594	Argument	match_sets [ i ]		1704076	0					
ANR	1705595	ArrayIndexing	match_sets [ i ]		1704076	0					
ANR	1705596	Identifier	match_sets		1704076	0					
ANR	1705597	Identifier	i		1704076	1					
ANR	1705598	ExpressionStatement	"zend_hash_next_index_insert ( Z_ARRVAL_P ( subpats ) , & match_sets [ i ] )"	924:4:29001:29065	1704076	1	True				
ANR	1705599	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( subpats ) , & match_sets [ i ] )"		1704076	0					
ANR	1705600	Callee	zend_hash_next_index_insert		1704076	0					
ANR	1705601	Identifier	zend_hash_next_index_insert		1704076	0					
ANR	1705602	ArgumentList	Z_ARRVAL_P ( subpats )		1704076	1					
ANR	1705603	Argument	Z_ARRVAL_P ( subpats )		1704076	0					
ANR	1705604	CallExpression	Z_ARRVAL_P ( subpats )		1704076	0					
ANR	1705605	Callee	Z_ARRVAL_P		1704076	0					
ANR	1705606	Identifier	Z_ARRVAL_P		1704076	0					
ANR	1705607	ArgumentList	subpats		1704076	1					
ANR	1705608	Argument	subpats		1704076	0					
ANR	1705609	Identifier	subpats		1704076	0					
ANR	1705610	Argument	& match_sets [ i ]		1704076	1					
ANR	1705611	UnaryOperationExpression	& match_sets [ i ]		1704076	0					
ANR	1705612	UnaryOperator	&		1704076	0					
ANR	1705613	ArrayIndexing	match_sets [ i ]		1704076	1					
ANR	1705614	Identifier	match_sets		1704076	0					
ANR	1705615	Identifier	i		1704076	1					
ANR	1705616	ElseStatement	else		1704076	0					
ANR	1705617	CompoundStatement		291:9:9851:9851	1704076	0					
ANR	1705618	ForStatement	for ( i = 0 ; i < num_subpats ; i ++ )		1704076	0					
ANR	1705619	ForInit	i = 0 ;	927:8:29091:29096	1704076	0	True				
ANR	1705620	AssignmentExpression	i = 0		1704076	0		=			
ANR	1705621	Identifier	i		1704076	0					
ANR	1705622	PrimaryExpression	0		1704076	1					
ANR	1705623	Condition	i < num_subpats	927:15:29098:29112	1704076	1	True				
ANR	1705624	RelationalExpression	i < num_subpats		1704076	0		<			
ANR	1705625	Identifier	i		1704076	0					
ANR	1705626	Identifier	num_subpats		1704076	1					
ANR	1705627	PostIncDecOperationExpression	i ++	927:32:29115:29117	1704076	2	True				
ANR	1705628	Identifier	i		1704076	0					
ANR	1705629	IncDec	++		1704076	1					
ANR	1705630	CompoundStatement		292:37:9890:9890	1704076	3					
ANR	1705631	ExpressionStatement	"zend_hash_next_index_insert ( Z_ARRVAL_P ( subpats ) , & match_sets [ i ] )"	928:4:29126:29190	1704076	0	True				
ANR	1705632	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( subpats ) , & match_sets [ i ] )"		1704076	0					
ANR	1705633	Callee	zend_hash_next_index_insert		1704076	0					
ANR	1705634	Identifier	zend_hash_next_index_insert		1704076	0					
ANR	1705635	ArgumentList	Z_ARRVAL_P ( subpats )		1704076	1					
ANR	1705636	Argument	Z_ARRVAL_P ( subpats )		1704076	0					
ANR	1705637	CallExpression	Z_ARRVAL_P ( subpats )		1704076	0					
ANR	1705638	Callee	Z_ARRVAL_P		1704076	0					
ANR	1705639	Identifier	Z_ARRVAL_P		1704076	0					
ANR	1705640	ArgumentList	subpats		1704076	1					
ANR	1705641	Argument	subpats		1704076	0					
ANR	1705642	Identifier	subpats		1704076	0					
ANR	1705643	Argument	& match_sets [ i ]		1704076	1					
ANR	1705644	UnaryOperationExpression	& match_sets [ i ]		1704076	0					
ANR	1705645	UnaryOperator	&		1704076	0					
ANR	1705646	ArrayIndexing	match_sets [ i ]		1704076	1					
ANR	1705647	Identifier	match_sets		1704076	0					
ANR	1705648	Identifier	i		1704076	1					
ANR	1705649	ExpressionStatement	efree ( match_sets )	931:2:29203:29220	1704076	1	True				
ANR	1705650	CallExpression	efree ( match_sets )		1704076	0					
ANR	1705651	Callee	efree		1704076	0					
ANR	1705652	Identifier	efree		1704076	0					
ANR	1705653	ArgumentList	match_sets		1704076	1					
ANR	1705654	Argument	match_sets		1704076	0					
ANR	1705655	Identifier	match_sets		1704076	0					
ANR	1705656	IfStatement	if ( Z_TYPE ( marks ) != IS_UNDEF )		1704076	2					
ANR	1705657	Condition	Z_TYPE ( marks ) != IS_UNDEF	933:6:29229:29253	1704076	0	True				
ANR	1705658	EqualityExpression	Z_TYPE ( marks ) != IS_UNDEF		1704076	0		!=			
ANR	1705659	CallExpression	Z_TYPE ( marks )		1704076	0					
ANR	1705660	Callee	Z_TYPE		1704076	0					
ANR	1705661	Identifier	Z_TYPE		1704076	0					
ANR	1705662	ArgumentList	marks		1704076	1					
ANR	1705663	Argument	marks		1704076	0					
ANR	1705664	Identifier	marks		1704076	0					
ANR	1705665	Identifier	IS_UNDEF		1704076	1					
ANR	1705666	CompoundStatement		298:33:10026:10026	1704076	1					
ANR	1705667	ExpressionStatement	"add_assoc_zval ( subpats , ""MARK"" , & marks )"	934:3:29261:29300	1704076	0	True				
ANR	1705668	CallExpression	"add_assoc_zval ( subpats , ""MARK"" , & marks )"		1704076	0					
ANR	1705669	Callee	add_assoc_zval		1704076	0					
ANR	1705670	Identifier	add_assoc_zval		1704076	0					
ANR	1705671	ArgumentList	subpats		1704076	1					
ANR	1705672	Argument	subpats		1704076	0					
ANR	1705673	Identifier	subpats		1704076	0					
ANR	1705674	Argument	"""MARK"""		1704076	1					
ANR	1705675	PrimaryExpression	"""MARK"""		1704076	0					
ANR	1705676	Argument	& marks		1704076	2					
ANR	1705677	UnaryOperationExpression	& marks		1704076	0					
ANR	1705678	UnaryOperator	&		1704076	0					
ANR	1705679	Identifier	marks		1704076	1					
ANR	1705680	IfStatement	if ( size_offsets <= 32 )		1704076	39					
ANR	1705681	Condition	size_offsets <= 32	938:5:29315:29332	1704076	0	True				
ANR	1705682	RelationalExpression	size_offsets <= 32		1704076	0		<=			
ANR	1705683	Identifier	size_offsets		1704076	0					
ANR	1705684	PrimaryExpression	32		1704076	1					
ANR	1705685	CompoundStatement		303:25:10105:10105	1704076	1					
ANR	1705686	ExpressionStatement	"free_alloca ( offsets , use_heap )"	939:2:29339:29369	1704076	0	True				
ANR	1705687	CallExpression	"free_alloca ( offsets , use_heap )"		1704076	0					
ANR	1705688	Callee	free_alloca		1704076	0					
ANR	1705689	Identifier	free_alloca		1704076	0					
ANR	1705690	ArgumentList	offsets		1704076	1					
ANR	1705691	Argument	offsets		1704076	0					
ANR	1705692	Identifier	offsets		1704076	0					
ANR	1705693	Argument	use_heap		1704076	1					
ANR	1705694	Identifier	use_heap		1704076	0					
ANR	1705695	ElseStatement	else		1704076	0					
ANR	1705696	CompoundStatement		305:8:10149:10149	1704076	0					
ANR	1705697	ExpressionStatement	efree ( offsets )	941:2:29383:29397	1704076	0	True				
ANR	1705698	CallExpression	efree ( offsets )		1704076	0					
ANR	1705699	Callee	efree		1704076	0					
ANR	1705700	Identifier	efree		1704076	0					
ANR	1705701	ArgumentList	offsets		1704076	1					
ANR	1705702	Argument	offsets		1704076	0					
ANR	1705703	Identifier	offsets		1704076	0					
ANR	1705704	IfStatement	if ( subpat_names )		1704076	40					
ANR	1705705	Condition	subpat_names	943:5:29407:29418	1704076	0	True				
ANR	1705706	Identifier	subpat_names		1704076	0					
ANR	1705707	CompoundStatement		308:19:10191:10191	1704076	1					
ANR	1705708	ExpressionStatement	efree ( subpat_names )	944:2:29425:29444	1704076	0	True				
ANR	1705709	CallExpression	efree ( subpat_names )		1704076	0					
ANR	1705710	Callee	efree		1704076	0					
ANR	1705711	Identifier	efree		1704076	0					
ANR	1705712	ArgumentList	subpat_names		1704076	1					
ANR	1705713	Argument	subpat_names		1704076	0					
ANR	1705714	Identifier	subpat_names		1704076	0					
ANR	1705715	IfStatement	if ( PCRE_G ( error_code ) == PHP_PCRE_NO_ERROR )		1704076	41					
ANR	1705716	Condition	PCRE_G ( error_code ) == PHP_PCRE_NO_ERROR	948:5:29489:29527	1704076	0	True				
ANR	1705717	EqualityExpression	PCRE_G ( error_code ) == PHP_PCRE_NO_ERROR		1704076	0		==			
ANR	1705718	CallExpression	PCRE_G ( error_code )		1704076	0					
ANR	1705719	Callee	PCRE_G		1704076	0					
ANR	1705720	Identifier	PCRE_G		1704076	0					
ANR	1705721	ArgumentList	error_code		1704076	1					
ANR	1705722	Argument	error_code		1704076	0					
ANR	1705723	Identifier	error_code		1704076	0					
ANR	1705724	Identifier	PHP_PCRE_NO_ERROR		1704076	1					
ANR	1705725	CompoundStatement		313:46:10300:10300	1704076	1					
ANR	1705726	ExpressionStatement	RETVAL_LONG ( matched )	949:2:29534:29554	1704076	0	True				
ANR	1705727	CallExpression	RETVAL_LONG ( matched )		1704076	0					
ANR	1705728	Callee	RETVAL_LONG		1704076	0					
ANR	1705729	Identifier	RETVAL_LONG		1704076	0					
ANR	1705730	ArgumentList	matched		1704076	1					
ANR	1705731	Argument	matched		1704076	0					
ANR	1705732	Identifier	matched		1704076	0					
ANR	1705733	ElseStatement	else		1704076	0					
ANR	1705734	CompoundStatement		315:8:10334:10334	1704076	0					
ANR	1705735	ExpressionStatement	RETVAL_FALSE	951:2:29568:29580	1704076	0	True				
ANR	1705736	Identifier	RETVAL_FALSE		1704076	0					
ANR	1705737	ReturnType	PHPAPI void		1704076	1					
ANR	1705738	Identifier	php_pcre_match_impl		1704076	2					
ANR	1705739	ParameterList	"pcre_cache_entry * pce , char * subject , int subject_len , zval * return_value , zval * subpats , int global , int use_flags , zend_long flags , zend_long start_offset"		1704076	3					
ANR	1705740	Parameter	pcre_cache_entry * pce	634:32:19070:19090	1704076	0	True				
ANR	1705741	ParameterType	pcre_cache_entry *		1704076	0					
ANR	1705742	Identifier	pce		1704076	1					
ANR	1705743	Parameter	char * subject	634:55:19093:19105	1704076	1	True				
ANR	1705744	ParameterType	char *		1704076	0					
ANR	1705745	Identifier	subject		1704076	1					
ANR	1705746	Parameter	int subject_len	634:70:19108:19122	1704076	2	True				
ANR	1705747	ParameterType	int		1704076	0					
ANR	1705748	Identifier	subject_len		1704076	1					
ANR	1705749	Parameter	zval * return_value	634:87:19125:19142	1704076	3	True				
ANR	1705750	ParameterType	zval *		1704076	0					
ANR	1705751	Identifier	return_value		1704076	1					
ANR	1705752	Parameter	zval * subpats	635:1:19146:19158	1704076	4	True				
ANR	1705753	ParameterType	zval *		1704076	0					
ANR	1705754	Identifier	subpats		1704076	1					
ANR	1705755	Parameter	int global	635:16:19161:19170	1704076	5	True				
ANR	1705756	ParameterType	int		1704076	0					
ANR	1705757	Identifier	global		1704076	1					
ANR	1705758	Parameter	int use_flags	635:28:19173:19185	1704076	6	True				
ANR	1705759	ParameterType	int		1704076	0					
ANR	1705760	Identifier	use_flags		1704076	1					
ANR	1705761	Parameter	zend_long flags	635:43:19188:19202	1704076	7	True				
ANR	1705762	ParameterType	zend_long		1704076	0					
ANR	1705763	Identifier	flags		1704076	1					
ANR	1705764	Parameter	zend_long start_offset	635:60:19205:19226	1704076	8	True				
ANR	1705765	ParameterType	zend_long		1704076	0					
ANR	1705766	Identifier	start_offset		1704076	1					
ANR	1705767	CFGEntryNode	ENTRY		1704076		True				
ANR	1705768	CFGExitNode	EXIT		1704076		True				
ANR	1705769	Symbol	num_subpats		1704076						
ANR	1705770	Symbol	* subpat_names		1704076						
ANR	1705771	Symbol	pce -> extra		1704076						
ANR	1705772	Symbol	pcre_exec		1704076						
ANR	1705773	Symbol	subject		1704076						
ANR	1705774	Symbol	g_notempty		1704076						
ANR	1705775	Symbol	Z_TYPE		1704076						
ANR	1705776	Symbol	extra -> flags		1704076						
ANR	1705777	Symbol	strlen		1704076						
ANR	1705778	Symbol	subject_len		1704076						
ANR	1705779	Symbol	exoptions		1704076						
ANR	1705780	Symbol	pcre_get_substring_list		1704076						
ANR	1705781	Symbol	IS_UNDEF		1704076						
ANR	1705782	Symbol	& result_set		1704076						
ANR	1705783	Symbol	NULL		1704076						
ANR	1705784	Symbol	match_sets		1704076						
ANR	1705785	Symbol	PCRE_EXTRA_MARK		1704076						
ANR	1705786	Symbol	count		1704076						
ANR	1705787	Symbol	E_NOTICE		1704076						
ANR	1705788	Symbol	* match_sets		1704076						
ANR	1705789	Symbol	result_set		1704076						
ANR	1705790	Symbol	subpat_names		1704076						
ANR	1705791	Symbol	PCRE_ERROR_NOMATCH		1704076						
ANR	1705792	Symbol	& extra_data		1704076						
ANR	1705793	Symbol	* extra		1704076						
ANR	1705794	Symbol	subpats_order		1704076						
ANR	1705795	Symbol	make_subpats_table		1704076						
ANR	1705796	Symbol	pce -> re		1704076						
ANR	1705797	Symbol	& marks		1704076						
ANR	1705798	Symbol	PREG_PATTERN_ORDER		1704076						
ANR	1705799	Symbol	matched		1704076						
ANR	1705800	Symbol	error_code		1704076						
ANR	1705801	Symbol	extra_data . flags		1704076						
ANR	1705802	Symbol	* pce		1704076						
ANR	1705803	Symbol	use_heap		1704076						
ANR	1705804	Symbol	return_value		1704076						
ANR	1705805	Symbol	pce -> name_count		1704076						
ANR	1705806	Symbol	offset_capture		1704076						
ANR	1705807	Symbol	backtrack_limit		1704076						
ANR	1705808	Symbol	pce -> capture_count		1704076						
ANR	1705809	Symbol	flags		1704076						
ANR	1705810	Symbol	PREG_SET_ORDER		1704076						
ANR	1705811	Symbol	& mark		1704076						
ANR	1705812	Symbol	unit_len		1704076						
ANR	1705813	Symbol	global		1704076						
ANR	1705814	Symbol	extra -> match_limit		1704076						
ANR	1705815	Symbol	extra -> match_limit_recursion		1704076						
ANR	1705816	Symbol	E_WARNING		1704076						
ANR	1705817	Symbol	pce		1704076						
ANR	1705818	Symbol	& stringlist		1704076						
ANR	1705819	Symbol	recursion_limit		1704076						
ANR	1705820	Symbol	extra -> mark		1704076						
ANR	1705821	Symbol	extra		1704076						
ANR	1705822	Symbol	PCRE_NO_UTF8_CHECK		1704076						
ANR	1705823	Symbol	Z_ARRVAL_P		1704076						
ANR	1705824	Symbol	subpats		1704076						
ANR	1705825	Symbol	size_offsets		1704076						
ANR	1705826	Symbol	PREG_OFFSET_CAPTURE		1704076						
ANR	1705827	Symbol	* offsets		1704076						
ANR	1705828	Symbol	use_flags		1704076						
ANR	1705829	Symbol	* stringlist		1704076						
ANR	1705830	Symbol	stringlist		1704076						
ANR	1705831	Symbol	PHP_PCRE_NO_ERROR		1704076						
ANR	1705832	Symbol	PCRE_ANCHORED		1704076						
ANR	1705833	Symbol	i		1704076						
ANR	1705834	Symbol	marks		1704076						
ANR	1705835	Symbol	PCRE_EXTRA_MATCH_LIMIT_RECURSION		1704076						
ANR	1705836	Symbol	PCRE_NOTEMPTY_ATSTART		1704076						
ANR	1705837	Symbol	* i		1704076						
ANR	1705838	Symbol	PCRE_G		1704076						
ANR	1705839	Symbol	extra_data		1704076						
ANR	1705840	Symbol	offsets		1704076						
ANR	1705841	Symbol	calculate_unit_length		1704076						
ANR	1705842	Symbol	PCRE_EXTRA_MATCH_LIMIT		1704076						
ANR	1705843	Symbol	do_alloca		1704076						
ANR	1705844	Symbol	start_offset		1704076						
ANR	1705845	Symbol	safe_emalloc		1704076						
ANR	1705846	Symbol	mark		1704076						
ANR	1705847	Function	preg_get_backref	974:0:30177:30709							
ANR	1705848	FunctionDef	"preg_get_backref (char * * str , int * backref)"		1705847	0					
ANR	1705849	CompoundStatement		975:0:30231:30709	1705847	0					
ANR	1705850	Statement	register	976:1:30234:30241	1705847	0	True				
ANR	1705851	IdentifierDeclStatement	char in_brace = 0 ;	976:10:30243:30260	1705847	1	True				
ANR	1705852	IdentifierDecl	in_brace = 0		1705847	0					
ANR	1705853	IdentifierDeclType	char		1705847	0					
ANR	1705854	Identifier	in_brace		1705847	1					
ANR	1705855	AssignmentExpression	in_brace = 0		1705847	2		=			
ANR	1705856	Identifier	in_brace		1705847	0					
ANR	1705857	PrimaryExpression	0		1705847	1					
ANR	1705858	Statement	register	977:1:30263:30270	1705847	2	True				
ANR	1705859	IdentifierDeclStatement	char * walk = * str ;	977:10:30272:30289	1705847	3	True				
ANR	1705860	IdentifierDecl	* walk = * str		1705847	0					
ANR	1705861	IdentifierDeclType	char *		1705847	0					
ANR	1705862	Identifier	walk		1705847	1					
ANR	1705863	AssignmentExpression	* walk = * str		1705847	2		=			
ANR	1705864	Identifier	walk		1705847	0					
ANR	1705865	UnaryOperationExpression	* str		1705847	1					
ANR	1705866	UnaryOperator	*		1705847	0					
ANR	1705867	Identifier	str		1705847	1					
ANR	1705868	IfStatement	if ( walk [ 1 ] == 0 )		1705847	4					
ANR	1705869	Condition	walk [ 1 ] == 0	979:5:30297:30308	1705847	0	True				
ANR	1705870	EqualityExpression	walk [ 1 ] == 0		1705847	0		==			
ANR	1705871	ArrayIndexing	walk [ 1 ]		1705847	0					
ANR	1705872	Identifier	walk		1705847	0					
ANR	1705873	PrimaryExpression	1		1705847	1					
ANR	1705874	PrimaryExpression	0		1705847	1					
ANR	1705875	ReturnStatement	return 0 ;	980:2:30313:30321	1705847	1	True				
ANR	1705876	PrimaryExpression	0		1705847	0					
ANR	1705877	IfStatement	if ( * walk == '$' && walk [ 1 ] == '{' )		1705847	5					
ANR	1705878	Condition	* walk == '$' && walk [ 1 ] == '{'	982:5:30329:30358	1705847	0	True				
ANR	1705879	AndExpression	* walk == '$' && walk [ 1 ] == '{'		1705847	0		&&			
ANR	1705880	EqualityExpression	* walk == '$'		1705847	0		==			
ANR	1705881	UnaryOperationExpression	* walk		1705847	0					
ANR	1705882	UnaryOperator	*		1705847	0					
ANR	1705883	Identifier	walk		1705847	1					
ANR	1705884	PrimaryExpression	'$'		1705847	1					
ANR	1705885	EqualityExpression	walk [ 1 ] == '{'		1705847	1		==			
ANR	1705886	ArrayIndexing	walk [ 1 ]		1705847	0					
ANR	1705887	Identifier	walk		1705847	0					
ANR	1705888	PrimaryExpression	1		1705847	1					
ANR	1705889	PrimaryExpression	'{'		1705847	1					
ANR	1705890	CompoundStatement		8:37:129:129	1705847	1					
ANR	1705891	ExpressionStatement	in_brace = 1	983:2:30365:30377	1705847	0	True				
ANR	1705892	AssignmentExpression	in_brace = 1		1705847	0		=			
ANR	1705893	Identifier	in_brace		1705847	0					
ANR	1705894	PrimaryExpression	1		1705847	1					
ANR	1705895	ExpressionStatement	walk ++	984:2:30381:30387	1705847	1	True				
ANR	1705896	PostIncDecOperationExpression	walk ++		1705847	0					
ANR	1705897	Identifier	walk		1705847	0					
ANR	1705898	IncDec	++		1705847	1					
ANR	1705899	ExpressionStatement	walk ++	986:1:30393:30399	1705847	6	True				
ANR	1705900	PostIncDecOperationExpression	walk ++		1705847	0					
ANR	1705901	Identifier	walk		1705847	0					
ANR	1705902	IncDec	++		1705847	1					
ANR	1705903	IfStatement	if ( * walk >= '0' && * walk <= '9' )		1705847	7					
ANR	1705904	Condition	* walk >= '0' && * walk <= '9'	988:5:30407:30434	1705847	0	True				
ANR	1705905	AndExpression	* walk >= '0' && * walk <= '9'		1705847	0		&&			
ANR	1705906	RelationalExpression	* walk >= '0'		1705847	0		>=			
ANR	1705907	UnaryOperationExpression	* walk		1705847	0					
ANR	1705908	UnaryOperator	*		1705847	0					
ANR	1705909	Identifier	walk		1705847	1					
ANR	1705910	PrimaryExpression	'0'		1705847	1					
ANR	1705911	RelationalExpression	* walk <= '9'		1705847	1		<=			
ANR	1705912	UnaryOperationExpression	* walk		1705847	0					
ANR	1705913	UnaryOperator	*		1705847	0					
ANR	1705914	Identifier	walk		1705847	1					
ANR	1705915	PrimaryExpression	'9'		1705847	1					
ANR	1705916	CompoundStatement		14:35:205:205	1705847	1					
ANR	1705917	ExpressionStatement	* backref = * walk - '0'	989:2:30441:30463	1705847	0	True				
ANR	1705918	AssignmentExpression	* backref = * walk - '0'		1705847	0		=			
ANR	1705919	UnaryOperationExpression	* backref		1705847	0					
ANR	1705920	UnaryOperator	*		1705847	0					
ANR	1705921	Identifier	backref		1705847	1					
ANR	1705922	AdditiveExpression	* walk - '0'		1705847	1		-			
ANR	1705923	UnaryOperationExpression	* walk		1705847	0					
ANR	1705924	UnaryOperator	*		1705847	0					
ANR	1705925	Identifier	walk		1705847	1					
ANR	1705926	PrimaryExpression	'0'		1705847	1					
ANR	1705927	ExpressionStatement	walk ++	990:2:30467:30473	1705847	1	True				
ANR	1705928	PostIncDecOperationExpression	walk ++		1705847	0					
ANR	1705929	Identifier	walk		1705847	0					
ANR	1705930	IncDec	++		1705847	1					
ANR	1705931	ElseStatement	else		1705847	0					
ANR	1705932	ReturnStatement	return 0 ;	992:2:30485:30493	1705847	0	True				
ANR	1705933	PrimaryExpression	0		1705847	0					
ANR	1705934	IfStatement	if ( * walk && * walk >= '0' && * walk <= '9' )		1705847	8					
ANR	1705935	Condition	* walk && * walk >= '0' && * walk <= '9'	994:5:30501:30537	1705847	0	True				
ANR	1705936	AndExpression	* walk && * walk >= '0' && * walk <= '9'		1705847	0		&&			
ANR	1705937	UnaryOperationExpression	* walk		1705847	0					
ANR	1705938	UnaryOperator	*		1705847	0					
ANR	1705939	Identifier	walk		1705847	1					
ANR	1705940	AndExpression	* walk >= '0' && * walk <= '9'		1705847	1		&&			
ANR	1705941	RelationalExpression	* walk >= '0'		1705847	0		>=			
ANR	1705942	UnaryOperationExpression	* walk		1705847	0					
ANR	1705943	UnaryOperator	*		1705847	0					
ANR	1705944	Identifier	walk		1705847	1					
ANR	1705945	PrimaryExpression	'0'		1705847	1					
ANR	1705946	RelationalExpression	* walk <= '9'		1705847	1		<=			
ANR	1705947	UnaryOperationExpression	* walk		1705847	0					
ANR	1705948	UnaryOperator	*		1705847	0					
ANR	1705949	Identifier	walk		1705847	1					
ANR	1705950	PrimaryExpression	'9'		1705847	1					
ANR	1705951	CompoundStatement		20:44:308:308	1705847	1					
ANR	1705952	ExpressionStatement	* backref = * backref * 10 + * walk - '0'	995:2:30544:30582	1705847	0	True				
ANR	1705953	AssignmentExpression	* backref = * backref * 10 + * walk - '0'		1705847	0		=			
ANR	1705954	UnaryOperationExpression	* backref		1705847	0					
ANR	1705955	UnaryOperator	*		1705847	0					
ANR	1705956	Identifier	backref		1705847	1					
ANR	1705957	AdditiveExpression	* backref * 10 + * walk - '0'		1705847	1		+			
ANR	1705958	MultiplicativeExpression	* backref * 10		1705847	0		*			
ANR	1705959	UnaryOperationExpression	* backref		1705847	0					
ANR	1705960	UnaryOperator	*		1705847	0					
ANR	1705961	Identifier	backref		1705847	1					
ANR	1705962	PrimaryExpression	10		1705847	1					
ANR	1705963	AdditiveExpression	* walk - '0'		1705847	1		-			
ANR	1705964	UnaryOperationExpression	* walk		1705847	0					
ANR	1705965	UnaryOperator	*		1705847	0					
ANR	1705966	Identifier	walk		1705847	1					
ANR	1705967	PrimaryExpression	'0'		1705847	1					
ANR	1705968	ExpressionStatement	walk ++	996:2:30586:30592	1705847	1	True				
ANR	1705969	PostIncDecOperationExpression	walk ++		1705847	0					
ANR	1705970	Identifier	walk		1705847	0					
ANR	1705971	IncDec	++		1705847	1					
ANR	1705972	IfStatement	if ( in_brace )		1705847	9					
ANR	1705973	Condition	in_brace	999:5:30603:30610	1705847	0	True				
ANR	1705974	Identifier	in_brace		1705847	0					
ANR	1705975	CompoundStatement		25:15:381:381	1705847	1					
ANR	1705976	IfStatement	if ( * walk == 0 || * walk != '}' )		1705847	0					
ANR	1705977	Condition	* walk == 0 || * walk != '}'	1000:6:30621:30646	1705847	0	True				
ANR	1705978	OrExpression	* walk == 0 || * walk != '}'		1705847	0		||			
ANR	1705979	EqualityExpression	* walk == 0		1705847	0		==			
ANR	1705980	UnaryOperationExpression	* walk		1705847	0					
ANR	1705981	UnaryOperator	*		1705847	0					
ANR	1705982	Identifier	walk		1705847	1					
ANR	1705983	PrimaryExpression	0		1705847	1					
ANR	1705984	EqualityExpression	* walk != '}'		1705847	1		!=			
ANR	1705985	UnaryOperationExpression	* walk		1705847	0					
ANR	1705986	UnaryOperator	*		1705847	0					
ANR	1705987	Identifier	walk		1705847	1					
ANR	1705988	PrimaryExpression	'}'		1705847	1					
ANR	1705989	ReturnStatement	return 0 ;	1001:3:30652:30660	1705847	1	True				
ANR	1705990	PrimaryExpression	0		1705847	0					
ANR	1705991	ElseStatement	else		1705847	0					
ANR	1705992	ExpressionStatement	walk ++	1003:3:30672:30678	1705847	0	True				
ANR	1705993	PostIncDecOperationExpression	walk ++		1705847	0					
ANR	1705994	Identifier	walk		1705847	0					
ANR	1705995	IncDec	++		1705847	1					
ANR	1705996	ExpressionStatement	* str = walk	1006:1:30685:30696	1705847	10	True				
ANR	1705997	AssignmentExpression	* str = walk		1705847	0		=			
ANR	1705998	UnaryOperationExpression	* str		1705847	0					
ANR	1705999	UnaryOperator	*		1705847	0					
ANR	1706000	Identifier	str		1705847	1					
ANR	1706001	Identifier	walk		1705847	1					
ANR	1706002	ReturnStatement	return 1 ;	1007:1:30699:30707	1705847	11	True				
ANR	1706003	PrimaryExpression	1		1705847	0					
ANR	1706004	ReturnType	static int		1705847	1					
ANR	1706005	Identifier	preg_get_backref		1705847	2					
ANR	1706006	ParameterList	"char * * str , int * backref"		1705847	3					
ANR	1706007	Parameter	char * * str	974:28:30205:30214	1705847	0	True				
ANR	1706008	ParameterType	char * *		1705847	0					
ANR	1706009	Identifier	str		1705847	1					
ANR	1706010	Parameter	int * backref	974:40:30217:30228	1705847	1	True				
ANR	1706011	ParameterType	int *		1705847	0					
ANR	1706012	Identifier	backref		1705847	1					
ANR	1706013	CFGEntryNode	ENTRY		1705847		True				
ANR	1706014	CFGExitNode	EXIT		1705847		True				
ANR	1706015	Symbol	str		1705847						
ANR	1706016	Symbol	backref		1705847						
ANR	1706017	Symbol	in_brace		1705847						
ANR	1706018	Symbol	* backref		1705847						
ANR	1706019	Symbol	* walk		1705847						
ANR	1706020	Symbol	* str		1705847						
ANR	1706021	Symbol	walk		1705847						
ANR	1706022	Function	preg_do_repl_func	1013:0:30751:32052							
ANR	1706023	FunctionDef	"preg_do_repl_func (zval * function , char * subject , int * offsets , char * * subpat_names , int count , unsigned char * mark)"		1706022	0					
ANR	1706024	CompoundStatement		1014:0:30887:32052	1706022	0					
ANR	1706025	IdentifierDeclStatement	zend_string * result_str ;	1015:1:30890:30913	1706022	0	True				
ANR	1706026	IdentifierDecl	* result_str		1706022	0					
ANR	1706027	IdentifierDeclType	zend_string *		1706022	0					
ANR	1706028	Identifier	result_str		1706022	1					
ANR	1706029	IdentifierDeclStatement	zval retval ;	1016:1:30916:30929	1706022	1	True				
ANR	1706030	IdentifierDecl	retval		1706022	0					
ANR	1706031	IdentifierDeclType	zval		1706022	0					
ANR	1706032	Identifier	retval		1706022	1					
ANR	1706033	IdentifierDeclStatement	zval args [ 1 ] ;	1017:1:30962:30979	1706022	2	True				
ANR	1706034	IdentifierDecl	args [ 1 ]		1706022	0					
ANR	1706035	IdentifierDeclType	zval [ 1 ]		1706022	0					
ANR	1706036	Identifier	args		1706022	1					
ANR	1706037	PrimaryExpression	1		1706022	2					
ANR	1706038	IdentifierDeclStatement	int i ;	1018:1:31019:31027	1706022	3	True				
ANR	1706039	IdentifierDecl	i		1706022	0					
ANR	1706040	IdentifierDeclType	int		1706022	0					
ANR	1706041	Identifier	i		1706022	1					
ANR	1706042	ExpressionStatement	"array_init_size ( & args [ 0 ] , count + ( mark ? 1 : 0 ) )"	1020:1:31031:31080	1706022	4	True				
ANR	1706043	CallExpression	"array_init_size ( & args [ 0 ] , count + ( mark ? 1 : 0 ) )"		1706022	0					
ANR	1706044	Callee	array_init_size		1706022	0					
ANR	1706045	Identifier	array_init_size		1706022	0					
ANR	1706046	ArgumentList	& args [ 0 ]		1706022	1					
ANR	1706047	Argument	& args [ 0 ]		1706022	0					
ANR	1706048	UnaryOperationExpression	& args [ 0 ]		1706022	0					
ANR	1706049	UnaryOperator	&		1706022	0					
ANR	1706050	ArrayIndexing	args [ 0 ]		1706022	1					
ANR	1706051	Identifier	args		1706022	0					
ANR	1706052	PrimaryExpression	0		1706022	1					
ANR	1706053	Argument	count + ( mark ? 1 : 0 )		1706022	1					
ANR	1706054	AdditiveExpression	count + ( mark ? 1 : 0 )		1706022	0		+			
ANR	1706055	Identifier	count		1706022	0					
ANR	1706056	ConditionalExpression	mark ? 1 : 0		1706022	1					
ANR	1706057	Condition	mark		1706022	0					
ANR	1706058	Identifier	mark		1706022	0					
ANR	1706059	PrimaryExpression	1		1706022	1					
ANR	1706060	PrimaryExpression	0		1706022	2					
ANR	1706061	IfStatement	if ( subpat_names )		1706022	5					
ANR	1706062	Condition	subpat_names	1021:5:31087:31098	1706022	0	True				
ANR	1706063	Identifier	subpat_names		1706022	0					
ANR	1706064	CompoundStatement		8:19:213:213	1706022	1					
ANR	1706065	ForStatement	for ( i = 0 ; i < count ; i ++ )		1706022	0					
ANR	1706066	ForInit	i = 0 ;	1022:7:31110:31115	1706022	0	True				
ANR	1706067	AssignmentExpression	i = 0		1706022	0		=			
ANR	1706068	Identifier	i		1706022	0					
ANR	1706069	PrimaryExpression	0		1706022	1					
ANR	1706070	Condition	i < count	1022:14:31117:31125	1706022	1	True				
ANR	1706071	RelationalExpression	i < count		1706022	0		<			
ANR	1706072	Identifier	i		1706022	0					
ANR	1706073	Identifier	count		1706022	1					
ANR	1706074	PostIncDecOperationExpression	i ++	1022:25:31128:31130	1706022	2	True				
ANR	1706075	Identifier	i		1706022	0					
ANR	1706076	IncDec	++		1706022	1					
ANR	1706077	CompoundStatement		9:30:245:245	1706022	3					
ANR	1706078	IfStatement	if ( subpat_names [ i ] )		1706022	0					
ANR	1706079	Condition	subpat_names [ i ]	1023:7:31142:31156	1706022	0	True				
ANR	1706080	ArrayIndexing	subpat_names [ i ]		1706022	0					
ANR	1706081	Identifier	subpat_names		1706022	0					
ANR	1706082	Identifier	i		1706022	1					
ANR	1706083	CompoundStatement		10:24:271:271	1706022	1					
ANR	1706084	ExpressionStatement	"add_assoc_stringl ( & args [ 0 ] , subpat_names [ i ] , & subject [ offsets [ i << 1 ] ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"	1024:4:31165:31270	1706022	0	True				
ANR	1706085	CallExpression	"add_assoc_stringl ( & args [ 0 ] , subpat_names [ i ] , & subject [ offsets [ i << 1 ] ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"		1706022	0					
ANR	1706086	Callee	add_assoc_stringl		1706022	0					
ANR	1706087	Identifier	add_assoc_stringl		1706022	0					
ANR	1706088	ArgumentList	& args [ 0 ]		1706022	1					
ANR	1706089	Argument	& args [ 0 ]		1706022	0					
ANR	1706090	UnaryOperationExpression	& args [ 0 ]		1706022	0					
ANR	1706091	UnaryOperator	&		1706022	0					
ANR	1706092	ArrayIndexing	args [ 0 ]		1706022	1					
ANR	1706093	Identifier	args		1706022	0					
ANR	1706094	PrimaryExpression	0		1706022	1					
ANR	1706095	Argument	subpat_names [ i ]		1706022	1					
ANR	1706096	ArrayIndexing	subpat_names [ i ]		1706022	0					
ANR	1706097	Identifier	subpat_names		1706022	0					
ANR	1706098	Identifier	i		1706022	1					
ANR	1706099	Argument	& subject [ offsets [ i << 1 ] ]		1706022	2					
ANR	1706100	UnaryOperationExpression	& subject [ offsets [ i << 1 ] ]		1706022	0					
ANR	1706101	UnaryOperator	&		1706022	0					
ANR	1706102	ArrayIndexing	subject [ offsets [ i << 1 ] ]		1706022	1					
ANR	1706103	Identifier	subject		1706022	0					
ANR	1706104	ArrayIndexing	offsets [ i << 1 ]		1706022	1					
ANR	1706105	Identifier	offsets		1706022	0					
ANR	1706106	ShiftExpression	i << 1		1706022	1		<<			
ANR	1706107	Identifier	i		1706022	0					
ANR	1706108	PrimaryExpression	1		1706022	1					
ANR	1706109	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1706022	3					
ANR	1706110	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1706022	0		-			
ANR	1706111	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1706022	0					
ANR	1706112	Identifier	offsets		1706022	0					
ANR	1706113	AdditiveExpression	( i << 1 ) + 1		1706022	1		+			
ANR	1706114	ShiftExpression	i << 1		1706022	0		<<			
ANR	1706115	Identifier	i		1706022	0					
ANR	1706116	PrimaryExpression	1		1706022	1					
ANR	1706117	PrimaryExpression	1		1706022	1					
ANR	1706118	ArrayIndexing	offsets [ i << 1 ]		1706022	1					
ANR	1706119	Identifier	offsets		1706022	0					
ANR	1706120	ShiftExpression	i << 1		1706022	1		<<			
ANR	1706121	Identifier	i		1706022	0					
ANR	1706122	PrimaryExpression	1		1706022	1					
ANR	1706123	ExpressionStatement	"add_next_index_stringl ( & args [ 0 ] , & subject [ offsets [ i << 1 ] ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"	1026:3:31280:31372	1706022	1	True				
ANR	1706124	CallExpression	"add_next_index_stringl ( & args [ 0 ] , & subject [ offsets [ i << 1 ] ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"		1706022	0					
ANR	1706125	Callee	add_next_index_stringl		1706022	0					
ANR	1706126	Identifier	add_next_index_stringl		1706022	0					
ANR	1706127	ArgumentList	& args [ 0 ]		1706022	1					
ANR	1706128	Argument	& args [ 0 ]		1706022	0					
ANR	1706129	UnaryOperationExpression	& args [ 0 ]		1706022	0					
ANR	1706130	UnaryOperator	&		1706022	0					
ANR	1706131	ArrayIndexing	args [ 0 ]		1706022	1					
ANR	1706132	Identifier	args		1706022	0					
ANR	1706133	PrimaryExpression	0		1706022	1					
ANR	1706134	Argument	& subject [ offsets [ i << 1 ] ]		1706022	1					
ANR	1706135	UnaryOperationExpression	& subject [ offsets [ i << 1 ] ]		1706022	0					
ANR	1706136	UnaryOperator	&		1706022	0					
ANR	1706137	ArrayIndexing	subject [ offsets [ i << 1 ] ]		1706022	1					
ANR	1706138	Identifier	subject		1706022	0					
ANR	1706139	ArrayIndexing	offsets [ i << 1 ]		1706022	1					
ANR	1706140	Identifier	offsets		1706022	0					
ANR	1706141	ShiftExpression	i << 1		1706022	1		<<			
ANR	1706142	Identifier	i		1706022	0					
ANR	1706143	PrimaryExpression	1		1706022	1					
ANR	1706144	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1706022	2					
ANR	1706145	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1706022	0		-			
ANR	1706146	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1706022	0					
ANR	1706147	Identifier	offsets		1706022	0					
ANR	1706148	AdditiveExpression	( i << 1 ) + 1		1706022	1		+			
ANR	1706149	ShiftExpression	i << 1		1706022	0		<<			
ANR	1706150	Identifier	i		1706022	0					
ANR	1706151	PrimaryExpression	1		1706022	1					
ANR	1706152	PrimaryExpression	1		1706022	1					
ANR	1706153	ArrayIndexing	offsets [ i << 1 ]		1706022	1					
ANR	1706154	Identifier	offsets		1706022	0					
ANR	1706155	ShiftExpression	i << 1		1706022	1		<<			
ANR	1706156	Identifier	i		1706022	0					
ANR	1706157	PrimaryExpression	1		1706022	1					
ANR	1706158	ElseStatement	else		1706022	0					
ANR	1706159	CompoundStatement		15:8:498:498	1706022	0					
ANR	1706160	ForStatement	for ( i = 0 ; i < count ; i ++ )		1706022	0					
ANR	1706161	ForInit	i = 0 ;	1029:7:31395:31400	1706022	0	True				
ANR	1706162	AssignmentExpression	i = 0		1706022	0		=			
ANR	1706163	Identifier	i		1706022	0					
ANR	1706164	PrimaryExpression	0		1706022	1					
ANR	1706165	Condition	i < count	1029:14:31402:31410	1706022	1	True				
ANR	1706166	RelationalExpression	i < count		1706022	0		<			
ANR	1706167	Identifier	i		1706022	0					
ANR	1706168	Identifier	count		1706022	1					
ANR	1706169	PostIncDecOperationExpression	i ++	1029:25:31413:31415	1706022	2	True				
ANR	1706170	Identifier	i		1706022	0					
ANR	1706171	IncDec	++		1706022	1					
ANR	1706172	CompoundStatement		16:30:530:530	1706022	3					
ANR	1706173	ExpressionStatement	"add_next_index_stringl ( & args [ 0 ] , & subject [ offsets [ i << 1 ] ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"	1030:3:31423:31515	1706022	0	True				
ANR	1706174	CallExpression	"add_next_index_stringl ( & args [ 0 ] , & subject [ offsets [ i << 1 ] ] , offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ] )"		1706022	0					
ANR	1706175	Callee	add_next_index_stringl		1706022	0					
ANR	1706176	Identifier	add_next_index_stringl		1706022	0					
ANR	1706177	ArgumentList	& args [ 0 ]		1706022	1					
ANR	1706178	Argument	& args [ 0 ]		1706022	0					
ANR	1706179	UnaryOperationExpression	& args [ 0 ]		1706022	0					
ANR	1706180	UnaryOperator	&		1706022	0					
ANR	1706181	ArrayIndexing	args [ 0 ]		1706022	1					
ANR	1706182	Identifier	args		1706022	0					
ANR	1706183	PrimaryExpression	0		1706022	1					
ANR	1706184	Argument	& subject [ offsets [ i << 1 ] ]		1706022	1					
ANR	1706185	UnaryOperationExpression	& subject [ offsets [ i << 1 ] ]		1706022	0					
ANR	1706186	UnaryOperator	&		1706022	0					
ANR	1706187	ArrayIndexing	subject [ offsets [ i << 1 ] ]		1706022	1					
ANR	1706188	Identifier	subject		1706022	0					
ANR	1706189	ArrayIndexing	offsets [ i << 1 ]		1706022	1					
ANR	1706190	Identifier	offsets		1706022	0					
ANR	1706191	ShiftExpression	i << 1		1706022	1		<<			
ANR	1706192	Identifier	i		1706022	0					
ANR	1706193	PrimaryExpression	1		1706022	1					
ANR	1706194	Argument	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1706022	2					
ANR	1706195	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1706022	0		-			
ANR	1706196	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1706022	0					
ANR	1706197	Identifier	offsets		1706022	0					
ANR	1706198	AdditiveExpression	( i << 1 ) + 1		1706022	1		+			
ANR	1706199	ShiftExpression	i << 1		1706022	0		<<			
ANR	1706200	Identifier	i		1706022	0					
ANR	1706201	PrimaryExpression	1		1706022	1					
ANR	1706202	PrimaryExpression	1		1706022	1					
ANR	1706203	ArrayIndexing	offsets [ i << 1 ]		1706022	1					
ANR	1706204	Identifier	offsets		1706022	0					
ANR	1706205	ShiftExpression	i << 1		1706022	1		<<			
ANR	1706206	Identifier	i		1706022	0					
ANR	1706207	PrimaryExpression	1		1706022	1					
ANR	1706208	IfStatement	if ( mark )		1706022	6					
ANR	1706209	Condition	mark	1033:5:31529:31532	1706022	0	True				
ANR	1706210	Identifier	mark		1706022	0					
ANR	1706211	CompoundStatement		20:11:647:647	1706022	1					
ANR	1706212	ExpressionStatement	"add_assoc_string ( & args [ 0 ] , ""MARK"" , ( char * ) mark )"	1034:2:31539:31588	1706022	0	True				
ANR	1706213	CallExpression	"add_assoc_string ( & args [ 0 ] , ""MARK"" , ( char * ) mark )"		1706022	0					
ANR	1706214	Callee	add_assoc_string		1706022	0					
ANR	1706215	Identifier	add_assoc_string		1706022	0					
ANR	1706216	ArgumentList	& args [ 0 ]		1706022	1					
ANR	1706217	Argument	& args [ 0 ]		1706022	0					
ANR	1706218	UnaryOperationExpression	& args [ 0 ]		1706022	0					
ANR	1706219	UnaryOperator	&		1706022	0					
ANR	1706220	ArrayIndexing	args [ 0 ]		1706022	1					
ANR	1706221	Identifier	args		1706022	0					
ANR	1706222	PrimaryExpression	0		1706022	1					
ANR	1706223	Argument	"""MARK"""		1706022	1					
ANR	1706224	PrimaryExpression	"""MARK"""		1706022	0					
ANR	1706225	Argument	( char * ) mark		1706022	2					
ANR	1706226	CastExpression	( char * ) mark		1706022	0					
ANR	1706227	CastTarget	char *		1706022	0					
ANR	1706228	Identifier	mark		1706022	1					
ANR	1706229	IfStatement	"if ( call_user_function_ex ( EG ( function_table ) , NULL , function , & retval , 1 , args , 0 , NULL ) == SUCCESS && Z_TYPE ( retval ) != IS_UNDEF )"		1706022	7					
ANR	1706230	Condition	"call_user_function_ex ( EG ( function_table ) , NULL , function , & retval , 1 , args , 0 , NULL ) == SUCCESS && Z_TYPE ( retval ) != IS_UNDEF"	1037:5:31599:31723	1706022	0	True				
ANR	1706231	AndExpression	"call_user_function_ex ( EG ( function_table ) , NULL , function , & retval , 1 , args , 0 , NULL ) == SUCCESS && Z_TYPE ( retval ) != IS_UNDEF"		1706022	0		&&			
ANR	1706232	EqualityExpression	"call_user_function_ex ( EG ( function_table ) , NULL , function , & retval , 1 , args , 0 , NULL ) == SUCCESS"		1706022	0		==			
ANR	1706233	CallExpression	"call_user_function_ex ( EG ( function_table ) , NULL , function , & retval , 1 , args , 0 , NULL )"		1706022	0					
ANR	1706234	Callee	call_user_function_ex		1706022	0					
ANR	1706235	Identifier	call_user_function_ex		1706022	0					
ANR	1706236	ArgumentList	EG ( function_table )		1706022	1					
ANR	1706237	Argument	EG ( function_table )		1706022	0					
ANR	1706238	CallExpression	EG ( function_table )		1706022	0					
ANR	1706239	Callee	EG		1706022	0					
ANR	1706240	Identifier	EG		1706022	0					
ANR	1706241	ArgumentList	function_table		1706022	1					
ANR	1706242	Argument	function_table		1706022	0					
ANR	1706243	Identifier	function_table		1706022	0					
ANR	1706244	Argument	NULL		1706022	1					
ANR	1706245	Identifier	NULL		1706022	0					
ANR	1706246	Argument	function		1706022	2					
ANR	1706247	Identifier	function		1706022	0					
ANR	1706248	Argument	& retval		1706022	3					
ANR	1706249	UnaryOperationExpression	& retval		1706022	0					
ANR	1706250	UnaryOperator	&		1706022	0					
ANR	1706251	Identifier	retval		1706022	1					
ANR	1706252	Argument	1		1706022	4					
ANR	1706253	PrimaryExpression	1		1706022	0					
ANR	1706254	Argument	args		1706022	5					
ANR	1706255	Identifier	args		1706022	0					
ANR	1706256	Argument	0		1706022	6					
ANR	1706257	PrimaryExpression	0		1706022	0					
ANR	1706258	Argument	NULL		1706022	7					
ANR	1706259	Identifier	NULL		1706022	0					
ANR	1706260	Identifier	SUCCESS		1706022	1					
ANR	1706261	EqualityExpression	Z_TYPE ( retval ) != IS_UNDEF		1706022	1		!=			
ANR	1706262	CallExpression	Z_TYPE ( retval )		1706022	0					
ANR	1706263	Callee	Z_TYPE		1706022	0					
ANR	1706264	Identifier	Z_TYPE		1706022	0					
ANR	1706265	ArgumentList	retval		1706022	1					
ANR	1706266	Argument	retval		1706022	0					
ANR	1706267	Identifier	retval		1706022	0					
ANR	1706268	Identifier	IS_UNDEF		1706022	1					
ANR	1706269	CompoundStatement		24:132:838:838	1706022	1					
ANR	1706270	ExpressionStatement	result_str = zval_get_string ( & retval )	1038:2:31730:31767	1706022	0	True				
ANR	1706271	AssignmentExpression	result_str = zval_get_string ( & retval )		1706022	0		=			
ANR	1706272	Identifier	result_str		1706022	0					
ANR	1706273	CallExpression	zval_get_string ( & retval )		1706022	1					
ANR	1706274	Callee	zval_get_string		1706022	0					
ANR	1706275	Identifier	zval_get_string		1706022	0					
ANR	1706276	ArgumentList	& retval		1706022	1					
ANR	1706277	Argument	& retval		1706022	0					
ANR	1706278	UnaryOperationExpression	& retval		1706022	0					
ANR	1706279	UnaryOperator	&		1706022	0					
ANR	1706280	Identifier	retval		1706022	1					
ANR	1706281	ExpressionStatement	zval_ptr_dtor ( & retval )	1039:2:31771:31793	1706022	1	True				
ANR	1706282	CallExpression	zval_ptr_dtor ( & retval )		1706022	0					
ANR	1706283	Callee	zval_ptr_dtor		1706022	0					
ANR	1706284	Identifier	zval_ptr_dtor		1706022	0					
ANR	1706285	ArgumentList	& retval		1706022	1					
ANR	1706286	Argument	& retval		1706022	0					
ANR	1706287	UnaryOperationExpression	& retval		1706022	0					
ANR	1706288	UnaryOperator	&		1706022	0					
ANR	1706289	Identifier	retval		1706022	1					
ANR	1706290	ElseStatement	else		1706022	0					
ANR	1706291	CompoundStatement		27:8:915:915	1706022	0					
ANR	1706292	IfStatement	if ( ! EG ( exception ) )		1706022	0					
ANR	1706293	Condition	! EG ( exception )	1041:6:31811:31824	1706022	0	True				
ANR	1706294	UnaryOperationExpression	! EG ( exception )		1706022	0					
ANR	1706295	UnaryOperator	!		1706022	0					
ANR	1706296	CallExpression	EG ( exception )		1706022	1					
ANR	1706297	Callee	EG		1706022	0					
ANR	1706298	Identifier	EG		1706022	0					
ANR	1706299	ArgumentList	exception		1706022	1					
ANR	1706300	Argument	exception		1706022	0					
ANR	1706301	Identifier	exception		1706022	0					
ANR	1706302	CompoundStatement		28:22:939:939	1706022	1					
ANR	1706303	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Unable to call custom replacement function"" )"	1042:3:31832:31911	1706022	0	True				
ANR	1706304	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Unable to call custom replacement function"" )"		1706022	0					
ANR	1706305	Callee	php_error_docref		1706022	0					
ANR	1706306	Identifier	php_error_docref		1706022	0					
ANR	1706307	ArgumentList	NULL		1706022	1					
ANR	1706308	Argument	NULL		1706022	0					
ANR	1706309	Identifier	NULL		1706022	0					
ANR	1706310	Argument	E_WARNING		1706022	1					
ANR	1706311	Identifier	E_WARNING		1706022	0					
ANR	1706312	Argument	"""Unable to call custom replacement function"""		1706022	2					
ANR	1706313	PrimaryExpression	"""Unable to call custom replacement function"""		1706022	0					
ANR	1706314	ExpressionStatement	"result_str = zend_string_init ( & subject [ offsets [ 0 ] ] , offsets [ 1 ] - offsets [ 0 ] , 0 )"	1045:2:31920:31999	1706022	1	True				
ANR	1706315	AssignmentExpression	"result_str = zend_string_init ( & subject [ offsets [ 0 ] ] , offsets [ 1 ] - offsets [ 0 ] , 0 )"		1706022	0		=			
ANR	1706316	Identifier	result_str		1706022	0					
ANR	1706317	CallExpression	"zend_string_init ( & subject [ offsets [ 0 ] ] , offsets [ 1 ] - offsets [ 0 ] , 0 )"		1706022	1					
ANR	1706318	Callee	zend_string_init		1706022	0					
ANR	1706319	Identifier	zend_string_init		1706022	0					
ANR	1706320	ArgumentList	& subject [ offsets [ 0 ] ]		1706022	1					
ANR	1706321	Argument	& subject [ offsets [ 0 ] ]		1706022	0					
ANR	1706322	UnaryOperationExpression	& subject [ offsets [ 0 ] ]		1706022	0					
ANR	1706323	UnaryOperator	&		1706022	0					
ANR	1706324	ArrayIndexing	subject [ offsets [ 0 ] ]		1706022	1					
ANR	1706325	Identifier	subject		1706022	0					
ANR	1706326	ArrayIndexing	offsets [ 0 ]		1706022	1					
ANR	1706327	Identifier	offsets		1706022	0					
ANR	1706328	PrimaryExpression	0		1706022	1					
ANR	1706329	Argument	offsets [ 1 ] - offsets [ 0 ]		1706022	1					
ANR	1706330	AdditiveExpression	offsets [ 1 ] - offsets [ 0 ]		1706022	0		-			
ANR	1706331	ArrayIndexing	offsets [ 1 ]		1706022	0					
ANR	1706332	Identifier	offsets		1706022	0					
ANR	1706333	PrimaryExpression	1		1706022	1					
ANR	1706334	ArrayIndexing	offsets [ 0 ]		1706022	1					
ANR	1706335	Identifier	offsets		1706022	0					
ANR	1706336	PrimaryExpression	0		1706022	1					
ANR	1706337	Argument	0		1706022	2					
ANR	1706338	PrimaryExpression	0		1706022	0					
ANR	1706339	ExpressionStatement	zval_ptr_dtor ( & args [ 0 ] )	1048:1:32006:32029	1706022	8	True				
ANR	1706340	CallExpression	zval_ptr_dtor ( & args [ 0 ] )		1706022	0					
ANR	1706341	Callee	zval_ptr_dtor		1706022	0					
ANR	1706342	Identifier	zval_ptr_dtor		1706022	0					
ANR	1706343	ArgumentList	& args [ 0 ]		1706022	1					
ANR	1706344	Argument	& args [ 0 ]		1706022	0					
ANR	1706345	UnaryOperationExpression	& args [ 0 ]		1706022	0					
ANR	1706346	UnaryOperator	&		1706022	0					
ANR	1706347	ArrayIndexing	args [ 0 ]		1706022	1					
ANR	1706348	Identifier	args		1706022	0					
ANR	1706349	PrimaryExpression	0		1706022	1					
ANR	1706350	ReturnStatement	return result_str ;	1050:1:32033:32050	1706022	9	True				
ANR	1706351	Identifier	result_str		1706022	0					
ANR	1706352	ReturnType	static zend_string *		1706022	1					
ANR	1706353	Identifier	preg_do_repl_func		1706022	2					
ANR	1706354	ParameterList	"zval * function , char * subject , int * offsets , char * * subpat_names , int count , unsigned char * mark"		1706022	3					
ANR	1706355	Parameter	zval * function	1013:38:30789:30802	1706022	0	True				
ANR	1706356	ParameterType	zval *		1706022	0					
ANR	1706357	Identifier	function		1706022	1					
ANR	1706358	Parameter	char * subject	1013:54:30805:30817	1706022	1	True				
ANR	1706359	ParameterType	char *		1706022	0					
ANR	1706360	Identifier	subject		1706022	1					
ANR	1706361	Parameter	int * offsets	1013:69:30820:30831	1706022	2	True				
ANR	1706362	ParameterType	int *		1706022	0					
ANR	1706363	Identifier	offsets		1706022	1					
ANR	1706364	Parameter	char * * subpat_names	1013:83:30834:30852	1706022	3	True				
ANR	1706365	ParameterType	char * *		1706022	0					
ANR	1706366	Identifier	subpat_names		1706022	1					
ANR	1706367	Parameter	int count	1013:104:30855:30863	1706022	4	True				
ANR	1706368	ParameterType	int		1706022	0					
ANR	1706369	Identifier	count		1706022	1					
ANR	1706370	Parameter	unsigned char * mark	1013:115:30866:30884	1706022	5	True				
ANR	1706371	ParameterType	unsigned char *		1706022	0					
ANR	1706372	Identifier	mark		1706022	1					
ANR	1706373	CFGEntryNode	ENTRY		1706022		True				
ANR	1706374	CFGExitNode	EXIT		1706022		True				
ANR	1706375	Symbol	exception		1706022						
ANR	1706376	Symbol	* subpat_names		1706022						
ANR	1706377	Symbol	subject		1706022						
ANR	1706378	Symbol	Z_TYPE		1706022						
ANR	1706379	Symbol	E_WARNING		1706022						
ANR	1706380	Symbol	zend_string_init		1706022						
ANR	1706381	Symbol	function		1706022						
ANR	1706382	Symbol	& retval		1706022						
ANR	1706383	Symbol	IS_UNDEF		1706022						
ANR	1706384	Symbol	* offsets		1706022						
ANR	1706385	Symbol	result_str		1706022						
ANR	1706386	Symbol	EG		1706022						
ANR	1706387	Symbol	NULL		1706022						
ANR	1706388	Symbol	SUCCESS		1706022						
ANR	1706389	Symbol	count		1706022						
ANR	1706390	Symbol	i		1706022						
ANR	1706391	Symbol	zval_get_string		1706022						
ANR	1706392	Symbol	call_user_function_ex		1706022						
ANR	1706393	Symbol	retval		1706022						
ANR	1706394	Symbol	args		1706022						
ANR	1706395	Symbol	subpat_names		1706022						
ANR	1706396	Symbol	* i		1706022						
ANR	1706397	Symbol	offsets		1706022						
ANR	1706398	Symbol	function_table		1706022						
ANR	1706399	Symbol	mark		1706022						
ANR	1706400	Function	php_pcre_replace	1056:0:32093:32741							
ANR	1706401	FunctionDef	"php_pcre_replace (zend_string * regex , zend_string * subject_str , char * subject , int subject_len , zval * replace_val , int is_callable_replace , int limit , int * replace_count)"		1706400	0					
ANR	1706402	CompoundStatement		1061:0:32319:32741	1706400	0					
ANR	1706403	IdentifierDeclStatement	pcre_cache_entry * pce ;	1062:1:32322:32343	1706400	0	True				
ANR	1706404	IdentifierDecl	* pce		1706400	0					
ANR	1706405	IdentifierDeclType	pcre_cache_entry *		1706400	0					
ANR	1706406	Identifier	pce		1706400	1					
ANR	1706407	IdentifierDeclStatement	zend_string * result ;	1063:1:32386:32408	1706400	1	True				
ANR	1706408	IdentifierDecl	* result		1706400	0					
ANR	1706409	IdentifierDeclType	zend_string *		1706400	0					
ANR	1706410	Identifier	result		1706400	1					
ANR	1706411	IfStatement	if ( ( pce = pcre_get_compiled_regex_cache ( regex ) ) == NULL )		1706400	2					
ANR	1706412	Condition	( pce = pcre_get_compiled_regex_cache ( regex ) ) == NULL	1066:5:32483:32534	1706400	0	True				
ANR	1706413	EqualityExpression	( pce = pcre_get_compiled_regex_cache ( regex ) ) == NULL		1706400	0		==			
ANR	1706414	AssignmentExpression	pce = pcre_get_compiled_regex_cache ( regex )		1706400	0		=			
ANR	1706415	Identifier	pce		1706400	0					
ANR	1706416	CallExpression	pcre_get_compiled_regex_cache ( regex )		1706400	1					
ANR	1706417	Callee	pcre_get_compiled_regex_cache		1706400	0					
ANR	1706418	Identifier	pcre_get_compiled_regex_cache		1706400	0					
ANR	1706419	ArgumentList	regex		1706400	1					
ANR	1706420	Argument	regex		1706400	0					
ANR	1706421	Identifier	regex		1706400	0					
ANR	1706422	Identifier	NULL		1706400	1					
ANR	1706423	CompoundStatement		6:59:217:217	1706400	1					
ANR	1706424	ReturnStatement	return NULL ;	1067:2:32541:32552	1706400	0	True				
ANR	1706425	Identifier	NULL		1706400	0					
ANR	1706426	ExpressionStatement	pce -> refcount ++	1069:1:32558:32573	1706400	3	True				
ANR	1706427	PostIncDecOperationExpression	pce -> refcount ++		1706400	0					
ANR	1706428	PtrMemberAccess	pce -> refcount		1706400	0					
ANR	1706429	Identifier	pce		1706400	0					
ANR	1706430	Identifier	refcount		1706400	1					
ANR	1706431	IncDec	++		1706400	1					
ANR	1706432	ExpressionStatement	"result = php_pcre_replace_impl ( pce , subject_str , subject , subject_len , replace_val , is_callable_replace , limit , replace_count )"	1070:1:32576:32704	1706400	4	True				
ANR	1706433	AssignmentExpression	"result = php_pcre_replace_impl ( pce , subject_str , subject , subject_len , replace_val , is_callable_replace , limit , replace_count )"		1706400	0		=			
ANR	1706434	Identifier	result		1706400	0					
ANR	1706435	CallExpression	"php_pcre_replace_impl ( pce , subject_str , subject , subject_len , replace_val , is_callable_replace , limit , replace_count )"		1706400	1					
ANR	1706436	Callee	php_pcre_replace_impl		1706400	0					
ANR	1706437	Identifier	php_pcre_replace_impl		1706400	0					
ANR	1706438	ArgumentList	pce		1706400	1					
ANR	1706439	Argument	pce		1706400	0					
ANR	1706440	Identifier	pce		1706400	0					
ANR	1706441	Argument	subject_str		1706400	1					
ANR	1706442	Identifier	subject_str		1706400	0					
ANR	1706443	Argument	subject		1706400	2					
ANR	1706444	Identifier	subject		1706400	0					
ANR	1706445	Argument	subject_len		1706400	3					
ANR	1706446	Identifier	subject_len		1706400	0					
ANR	1706447	Argument	replace_val		1706400	4					
ANR	1706448	Identifier	replace_val		1706400	0					
ANR	1706449	Argument	is_callable_replace		1706400	5					
ANR	1706450	Identifier	is_callable_replace		1706400	0					
ANR	1706451	Argument	limit		1706400	6					
ANR	1706452	Identifier	limit		1706400	0					
ANR	1706453	Argument	replace_count		1706400	7					
ANR	1706454	Identifier	replace_count		1706400	0					
ANR	1706455	ExpressionStatement	pce -> refcount --	1072:1:32707:32722	1706400	5	True				
ANR	1706456	PostIncDecOperationExpression	pce -> refcount --		1706400	0					
ANR	1706457	PtrMemberAccess	pce -> refcount		1706400	0					
ANR	1706458	Identifier	pce		1706400	0					
ANR	1706459	Identifier	refcount		1706400	1					
ANR	1706460	IncDec	--		1706400	1					
ANR	1706461	ReturnStatement	return result ;	1074:1:32726:32739	1706400	6	True				
ANR	1706462	Identifier	result		1706400	0					
ANR	1706463	ReturnType	PHPAPI zend_string *		1706400	1					
ANR	1706464	Identifier	php_pcre_replace		1706400	2					
ANR	1706465	ParameterList	"zend_string * regex , zend_string * subject_str , char * subject , int subject_len , zval * replace_val , int is_callable_replace , int limit , int * replace_count"		1706400	3					
ANR	1706466	Parameter	zend_string * regex	1056:37:32130:32147	1706400	0	True				
ANR	1706467	ParameterType	zend_string *		1706400	0					
ANR	1706468	Identifier	regex		1706400	1					
ANR	1706469	Parameter	zend_string * subject_str	1057:9:32159:32182	1706400	1	True				
ANR	1706470	ParameterType	zend_string *		1706400	0					
ANR	1706471	Identifier	subject_str		1706400	1					
ANR	1706472	Parameter	char * subject	1058:9:32194:32206	1706400	2	True				
ANR	1706473	ParameterType	char *		1706400	0					
ANR	1706474	Identifier	subject		1706400	1					
ANR	1706475	Parameter	int subject_len	1058:24:32209:32223	1706400	3	True				
ANR	1706476	ParameterType	int		1706400	0					
ANR	1706477	Identifier	subject_len		1706400	1					
ANR	1706478	Parameter	zval * replace_val	1059:9:32235:32251	1706400	4	True				
ANR	1706479	ParameterType	zval *		1706400	0					
ANR	1706480	Identifier	replace_val		1706400	1					
ANR	1706481	Parameter	int is_callable_replace	1059:28:32254:32276	1706400	5	True				
ANR	1706482	ParameterType	int		1706400	0					
ANR	1706483	Identifier	is_callable_replace		1706400	1					
ANR	1706484	Parameter	int limit	1060:9:32288:32296	1706400	6	True				
ANR	1706485	ParameterType	int		1706400	0					
ANR	1706486	Identifier	limit		1706400	1					
ANR	1706487	Parameter	int * replace_count	1060:20:32299:32316	1706400	7	True				
ANR	1706488	ParameterType	int *		1706400	0					
ANR	1706489	Identifier	replace_count		1706400	1					
ANR	1706490	CFGEntryNode	ENTRY		1706400		True				
ANR	1706491	CFGExitNode	EXIT		1706400		True				
ANR	1706492	Symbol	NULL		1706400						
ANR	1706493	Symbol	php_pcre_replace_impl		1706400						
ANR	1706494	Symbol	subject		1706400						
ANR	1706495	Symbol	pcre_get_compiled_regex_cache		1706400						
ANR	1706496	Symbol	subject_str		1706400						
ANR	1706497	Symbol	replace_count		1706400						
ANR	1706498	Symbol	result		1706400						
ANR	1706499	Symbol	regex		1706400						
ANR	1706500	Symbol	subject_len		1706400						
ANR	1706501	Symbol	pce		1706400						
ANR	1706502	Symbol	limit		1706400						
ANR	1706503	Symbol	pce -> refcount		1706400						
ANR	1706504	Symbol	is_callable_replace		1706400						
ANR	1706505	Symbol	* pce		1706400						
ANR	1706506	Symbol	replace_val		1706400						
ANR	1706507	Function	php_pcre_replace_impl	1079:0:32788:41566							
ANR	1706508	FunctionDef	"php_pcre_replace_impl (pcre_cache_entry * pce , zend_string * subject_str , char * subject , int subject_len , zval * replace_val , int is_callable_replace , int limit , int * replace_count)"		1706507	0					
ANR	1706509	CompoundStatement		1080:0:32986:41566	1706507	0					
ANR	1706510	IdentifierDeclStatement	pcre_extra * extra = pce -> extra ;	1081:1:32989:33020	1706507	0	True				
ANR	1706511	IdentifierDecl	* extra = pce -> extra		1706507	0					
ANR	1706512	IdentifierDeclType	pcre_extra *		1706507	0					
ANR	1706513	Identifier	extra		1706507	1					
ANR	1706514	AssignmentExpression	* extra = pce -> extra		1706507	2		=			
ANR	1706515	Identifier	extra		1706507	0					
ANR	1706516	PtrMemberAccess	pce -> extra		1706507	1					
ANR	1706517	Identifier	pce		1706507	0					
ANR	1706518	Identifier	extra		1706507	1					
ANR	1706519	IdentifierDeclStatement	pcre_extra extra_data ;	1082:1:33054:33077	1706507	1	True				
ANR	1706520	IdentifierDecl	extra_data		1706507	0					
ANR	1706521	IdentifierDeclType	pcre_extra		1706507	0					
ANR	1706522	Identifier	extra_data		1706507	1					
ANR	1706523	IdentifierDeclStatement	int exoptions = 0 ;	1083:1:33117:33138	1706507	2	True				
ANR	1706524	IdentifierDecl	exoptions = 0		1706507	0					
ANR	1706525	IdentifierDeclType	int		1706507	0					
ANR	1706526	Identifier	exoptions		1706507	1					
ANR	1706527	AssignmentExpression	exoptions = 0		1706507	2		=			
ANR	1706528	Identifier	exoptions		1706507	0					
ANR	1706529	PrimaryExpression	0		1706507	1					
ANR	1706530	IdentifierDeclStatement	int count = 0 ;	1084:1:33166:33183	1706507	3	True				
ANR	1706531	IdentifierDecl	count = 0		1706507	0					
ANR	1706532	IdentifierDeclType	int		1706507	0					
ANR	1706533	Identifier	count		1706507	1					
ANR	1706534	AssignmentExpression	count = 0		1706507	2		=			
ANR	1706535	Identifier	count		1706507	0					
ANR	1706536	PrimaryExpression	0		1706507	1					
ANR	1706537	IdentifierDeclStatement	int * offsets ;	1085:1:33223:33238	1706507	4	True				
ANR	1706538	IdentifierDecl	* offsets		1706507	0					
ANR	1706539	IdentifierDeclType	int *		1706507	0					
ANR	1706540	Identifier	offsets		1706507	1					
ANR	1706541	IdentifierDeclStatement	char * * subpat_names ;	1086:1:33277:33299	1706507	5	True				
ANR	1706542	IdentifierDecl	* * subpat_names		1706507	0					
ANR	1706543	IdentifierDeclType	char * *		1706507	0					
ANR	1706544	Identifier	subpat_names		1706507	1					
ANR	1706545	IdentifierDeclStatement	int num_subpats ;	1087:1:33337:33356	1706507	6	True				
ANR	1706546	IdentifierDecl	num_subpats		1706507	0					
ANR	1706547	IdentifierDeclType	int		1706507	0					
ANR	1706548	Identifier	num_subpats		1706507	1					
ANR	1706549	IdentifierDeclStatement	int size_offsets ;	1088:1:33397:33417	1706507	7	True				
ANR	1706550	IdentifierDecl	size_offsets		1706507	0					
ANR	1706551	IdentifierDeclType	int		1706507	0					
ANR	1706552	Identifier	size_offsets		1706507	1					
ANR	1706553	IdentifierDeclStatement	int new_len ;	1089:1:33453:33468	1706507	8	True				
ANR	1706554	IdentifierDecl	new_len		1706507	0					
ANR	1706555	IdentifierDeclType	int		1706507	0					
ANR	1706556	Identifier	new_len		1706507	1					
ANR	1706557	IdentifierDeclStatement	int alloc_len ;	1090:1:33504:33521	1706507	9	True				
ANR	1706558	IdentifierDecl	alloc_len		1706507	0					
ANR	1706559	IdentifierDeclType	int		1706507	0					
ANR	1706560	Identifier	alloc_len		1706507	1					
ANR	1706561	IdentifierDeclStatement	int match_len ;	1091:1:33556:33573	1706507	10	True				
ANR	1706562	IdentifierDecl	match_len		1706507	0					
ANR	1706563	IdentifierDeclType	int		1706507	0					
ANR	1706564	Identifier	match_len		1706507	1					
ANR	1706565	IdentifierDeclStatement	int backref ;	1092:1:33612:33627	1706507	11	True				
ANR	1706566	IdentifierDecl	backref		1706507	0					
ANR	1706567	IdentifierDeclType	int		1706507	0					
ANR	1706568	Identifier	backref		1706507	1					
ANR	1706569	IdentifierDeclStatement	int start_offset ;	1093:1:33659:33679	1706507	12	True				
ANR	1706570	IdentifierDecl	start_offset		1706507	0					
ANR	1706571	IdentifierDeclType	int		1706507	0					
ANR	1706572	Identifier	start_offset		1706507	1					
ANR	1706573	IdentifierDeclStatement	int g_notempty = 0 ;	1094:1:33717:33737	1706507	13	True				
ANR	1706574	IdentifierDecl	g_notempty = 0		1706507	0					
ANR	1706575	IdentifierDeclType	int		1706507	0					
ANR	1706576	Identifier	g_notempty		1706507	1					
ANR	1706577	AssignmentExpression	g_notempty = 0		1706507	2		=			
ANR	1706578	Identifier	g_notempty		1706507	0					
ANR	1706579	PrimaryExpression	0		1706507	1					
ANR	1706580	IdentifierDeclStatement	int replace_len = 0 ;	1095:1:33780:33801	1706507	14	True				
ANR	1706581	IdentifierDecl	replace_len = 0		1706507	0					
ANR	1706582	IdentifierDeclType	int		1706507	0					
ANR	1706583	Identifier	replace_len		1706507	1					
ANR	1706584	AssignmentExpression	replace_len = 0		1706507	2		=			
ANR	1706585	Identifier	replace_len		1706507	0					
ANR	1706586	PrimaryExpression	0		1706507	1					
ANR	1706587	IdentifierDeclStatement	"char * replace = NULL , * walkbuf , * walk , * match , * piece , * replace_end = NULL , walk_last ;"	1096:1:33840:34176	1706507	15	True				
ANR	1706588	IdentifierDecl	* replace = NULL		1706507	0					
ANR	1706589	IdentifierDeclType	char *		1706507	0					
ANR	1706590	Identifier	replace		1706507	1					
ANR	1706591	AssignmentExpression	* replace = NULL		1706507	2		=			
ANR	1706592	Identifier	NULL		1706507	0					
ANR	1706593	Identifier	NULL		1706507	1					
ANR	1706594	IdentifierDecl	* walkbuf		1706507	1					
ANR	1706595	IdentifierDeclType	char *		1706507	0					
ANR	1706596	Identifier	walkbuf		1706507	1					
ANR	1706597	IdentifierDecl	* walk		1706507	2					
ANR	1706598	IdentifierDeclType	char *		1706507	0					
ANR	1706599	Identifier	walk		1706507	1					
ANR	1706600	IdentifierDecl	* match		1706507	3					
ANR	1706601	IdentifierDeclType	char *		1706507	0					
ANR	1706602	Identifier	match		1706507	1					
ANR	1706603	IdentifierDecl	* piece		1706507	4					
ANR	1706604	IdentifierDeclType	char *		1706507	0					
ANR	1706605	Identifier	piece		1706507	1					
ANR	1706606	IdentifierDecl	* replace_end = NULL		1706507	5					
ANR	1706607	IdentifierDeclType	char *		1706507	0					
ANR	1706608	Identifier	replace_end		1706507	1					
ANR	1706609	AssignmentExpression	* replace_end = NULL		1706507	2		=			
ANR	1706610	Identifier	NULL		1706507	0					
ANR	1706611	Identifier	NULL		1706507	1					
ANR	1706612	IdentifierDecl	walk_last		1706507	6					
ANR	1706613	IdentifierDeclType	char		1706507	0					
ANR	1706614	Identifier	walk_last		1706507	1					
ANR	1706615	IdentifierDeclStatement	int result_len ;	1103:1:34209:34227	1706507	16	True				
ANR	1706616	IdentifierDecl	result_len		1706507	0					
ANR	1706617	IdentifierDeclType	int		1706507	0					
ANR	1706618	Identifier	result_len		1706507	1					
ANR	1706619	IdentifierDeclStatement	unsigned char * mark = NULL ;	1104:1:34255:34283	1706507	17	True				
ANR	1706620	IdentifierDecl	* mark = NULL		1706507	0					
ANR	1706621	IdentifierDeclType	unsigned char *		1706507	0					
ANR	1706622	Identifier	mark		1706507	1					
ANR	1706623	AssignmentExpression	* mark = NULL		1706507	2		=			
ANR	1706624	Identifier	NULL		1706507	0					
ANR	1706625	Identifier	NULL		1706507	1					
ANR	1706626	IdentifierDeclStatement	zend_string * result ;	1105:1:34319:34339	1706507	18	True				
ANR	1706627	IdentifierDecl	* result		1706507	0					
ANR	1706628	IdentifierDeclType	zend_string *		1706507	0					
ANR	1706629	Identifier	result		1706507	1					
ANR	1706630	IdentifierDeclStatement	zend_string * eval_result = NULL ;	1106:1:34372:34405	1706507	19	True				
ANR	1706631	IdentifierDecl	* eval_result = NULL		1706507	0					
ANR	1706632	IdentifierDeclType	zend_string *		1706507	0					
ANR	1706633	Identifier	eval_result		1706507	1					
ANR	1706634	AssignmentExpression	* eval_result = NULL		1706507	2		=			
ANR	1706635	Identifier	NULL		1706507	0					
ANR	1706636	Identifier	NULL		1706507	1					
ANR	1706637	ExpressionStatement	ALLOCA_FLAG ( use_heap )	1108:1:34442:34463	1706507	20	True				
ANR	1706638	CallExpression	ALLOCA_FLAG ( use_heap )		1706507	0					
ANR	1706639	Callee	ALLOCA_FLAG		1706507	0					
ANR	1706640	Identifier	ALLOCA_FLAG		1706507	0					
ANR	1706641	ArgumentList	use_heap		1706507	1					
ANR	1706642	Argument	use_heap		1706507	0					
ANR	1706643	Identifier	use_heap		1706507	0					
ANR	1706644	IfStatement	if ( extra == NULL )		1706507	21					
ANR	1706645	Condition	extra == NULL	1110:5:34471:34483	1706507	0	True				
ANR	1706646	EqualityExpression	extra == NULL		1706507	0		==			
ANR	1706647	Identifier	extra		1706507	0					
ANR	1706648	Identifier	NULL		1706507	1					
ANR	1706649	CompoundStatement		31:20:1499:1499	1706507	1					
ANR	1706650	ExpressionStatement	extra_data . flags = PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION	1111:2:34490:34566	1706507	0	True				
ANR	1706651	AssignmentExpression	extra_data . flags = PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION		1706507	0		=			
ANR	1706652	MemberAccess	extra_data . flags		1706507	0					
ANR	1706653	Identifier	extra_data		1706507	0					
ANR	1706654	Identifier	flags		1706507	1					
ANR	1706655	InclusiveOrExpression	PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION		1706507	1		|			
ANR	1706656	Identifier	PCRE_EXTRA_MATCH_LIMIT		1706507	0					
ANR	1706657	Identifier	PCRE_EXTRA_MATCH_LIMIT_RECURSION		1706507	1					
ANR	1706658	ExpressionStatement	extra = & extra_data	1112:2:34570:34589	1706507	1	True				
ANR	1706659	AssignmentExpression	extra = & extra_data		1706507	0		=			
ANR	1706660	Identifier	extra		1706507	0					
ANR	1706661	UnaryOperationExpression	& extra_data		1706507	1					
ANR	1706662	UnaryOperator	&		1706507	0					
ANR	1706663	Identifier	extra_data		1706507	1					
ANR	1706664	ExpressionStatement	extra -> match_limit = ( unsigned long ) PCRE_G ( backtrack_limit )	1115:1:34596:34655	1706507	22	True				
ANR	1706665	AssignmentExpression	extra -> match_limit = ( unsigned long ) PCRE_G ( backtrack_limit )		1706507	0		=			
ANR	1706666	PtrMemberAccess	extra -> match_limit		1706507	0					
ANR	1706667	Identifier	extra		1706507	0					
ANR	1706668	Identifier	match_limit		1706507	1					
ANR	1706669	CastExpression	( unsigned long ) PCRE_G ( backtrack_limit )		1706507	1					
ANR	1706670	CastTarget	unsigned long		1706507	0					
ANR	1706671	CallExpression	PCRE_G ( backtrack_limit )		1706507	1					
ANR	1706672	Callee	PCRE_G		1706507	0					
ANR	1706673	Identifier	PCRE_G		1706507	0					
ANR	1706674	ArgumentList	backtrack_limit		1706507	1					
ANR	1706675	Argument	backtrack_limit		1706507	0					
ANR	1706676	Identifier	backtrack_limit		1706507	0					
ANR	1706677	ExpressionStatement	extra -> match_limit_recursion = ( unsigned long ) PCRE_G ( recursion_limit )	1116:1:34658:34727	1706507	23	True				
ANR	1706678	AssignmentExpression	extra -> match_limit_recursion = ( unsigned long ) PCRE_G ( recursion_limit )		1706507	0		=			
ANR	1706679	PtrMemberAccess	extra -> match_limit_recursion		1706507	0					
ANR	1706680	Identifier	extra		1706507	0					
ANR	1706681	Identifier	match_limit_recursion		1706507	1					
ANR	1706682	CastExpression	( unsigned long ) PCRE_G ( recursion_limit )		1706507	1					
ANR	1706683	CastTarget	unsigned long		1706507	0					
ANR	1706684	CallExpression	PCRE_G ( recursion_limit )		1706507	1					
ANR	1706685	Callee	PCRE_G		1706507	0					
ANR	1706686	Identifier	PCRE_G		1706507	0					
ANR	1706687	ArgumentList	recursion_limit		1706507	1					
ANR	1706688	Argument	recursion_limit		1706507	0					
ANR	1706689	Identifier	recursion_limit		1706507	0					
ANR	1706690	IfStatement	if ( UNEXPECTED ( pce -> preg_options & PREG_REPLACE_EVAL ) )		1706507	24					
ANR	1706691	Condition	UNEXPECTED ( pce -> preg_options & PREG_REPLACE_EVAL )	1118:5:34735:34783	1706507	0	True				
ANR	1706692	CallExpression	UNEXPECTED ( pce -> preg_options & PREG_REPLACE_EVAL )		1706507	0					
ANR	1706693	Callee	UNEXPECTED		1706507	0					
ANR	1706694	Identifier	UNEXPECTED		1706507	0					
ANR	1706695	ArgumentList	pce -> preg_options & PREG_REPLACE_EVAL		1706507	1					
ANR	1706696	Argument	pce -> preg_options & PREG_REPLACE_EVAL		1706507	0					
ANR	1706697	BitAndExpression	pce -> preg_options & PREG_REPLACE_EVAL		1706507	0		&			
ANR	1706698	PtrMemberAccess	pce -> preg_options		1706507	0					
ANR	1706699	Identifier	pce		1706507	0					
ANR	1706700	Identifier	preg_options		1706507	1					
ANR	1706701	Identifier	PREG_REPLACE_EVAL		1706507	1					
ANR	1706702	CompoundStatement		39:56:1799:1799	1706507	1					
ANR	1706703	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""The /e modifier is no longer supported, use preg_replace_callback instead"" )"	1119:2:34790:34900	1706507	0	True				
ANR	1706704	CallExpression	"php_error_docref ( NULL , E_WARNING , ""The /e modifier is no longer supported, use preg_replace_callback instead"" )"		1706507	0					
ANR	1706705	Callee	php_error_docref		1706507	0					
ANR	1706706	Identifier	php_error_docref		1706507	0					
ANR	1706707	ArgumentList	NULL		1706507	1					
ANR	1706708	Argument	NULL		1706507	0					
ANR	1706709	Identifier	NULL		1706507	0					
ANR	1706710	Argument	E_WARNING		1706507	1					
ANR	1706711	Identifier	E_WARNING		1706507	0					
ANR	1706712	Argument	"""The /e modifier is no longer supported, use preg_replace_callback instead"""		1706507	2					
ANR	1706713	PrimaryExpression	"""The /e modifier is no longer supported, use preg_replace_callback instead"""		1706507	0					
ANR	1706714	ReturnStatement	return NULL ;	1120:2:34904:34915	1706507	1	True				
ANR	1706715	Identifier	NULL		1706507	0					
ANR	1706716	IfStatement	if ( ! is_callable_replace )		1706507	25					
ANR	1706717	Condition	! is_callable_replace	1123:5:34926:34945	1706507	0	True				
ANR	1706718	UnaryOperationExpression	! is_callable_replace		1706507	0					
ANR	1706719	UnaryOperator	!		1706507	0					
ANR	1706720	Identifier	is_callable_replace		1706507	1					
ANR	1706721	CompoundStatement		44:27:1961:1961	1706507	1					
ANR	1706722	ExpressionStatement	replace = Z_STRVAL_P ( replace_val )	1124:2:34952:34985	1706507	0	True				
ANR	1706723	AssignmentExpression	replace = Z_STRVAL_P ( replace_val )		1706507	0		=			
ANR	1706724	Identifier	replace		1706507	0					
ANR	1706725	CallExpression	Z_STRVAL_P ( replace_val )		1706507	1					
ANR	1706726	Callee	Z_STRVAL_P		1706507	0					
ANR	1706727	Identifier	Z_STRVAL_P		1706507	0					
ANR	1706728	ArgumentList	replace_val		1706507	1					
ANR	1706729	Argument	replace_val		1706507	0					
ANR	1706730	Identifier	replace_val		1706507	0					
ANR	1706731	ExpressionStatement	replace_len = ( int ) Z_STRLEN_P ( replace_val )	1125:2:34989:35031	1706507	1	True				
ANR	1706732	AssignmentExpression	replace_len = ( int ) Z_STRLEN_P ( replace_val )		1706507	0		=			
ANR	1706733	Identifier	replace_len		1706507	0					
ANR	1706734	CastExpression	( int ) Z_STRLEN_P ( replace_val )		1706507	1					
ANR	1706735	CastTarget	int		1706507	0					
ANR	1706736	CallExpression	Z_STRLEN_P ( replace_val )		1706507	1					
ANR	1706737	Callee	Z_STRLEN_P		1706507	0					
ANR	1706738	Identifier	Z_STRLEN_P		1706507	0					
ANR	1706739	ArgumentList	replace_val		1706507	1					
ANR	1706740	Argument	replace_val		1706507	0					
ANR	1706741	Identifier	replace_val		1706507	0					
ANR	1706742	ExpressionStatement	replace_end = replace + replace_len	1126:2:35035:35070	1706507	2	True				
ANR	1706743	AssignmentExpression	replace_end = replace + replace_len		1706507	0		=			
ANR	1706744	Identifier	replace_end		1706507	0					
ANR	1706745	AdditiveExpression	replace + replace_len		1706507	1		+			
ANR	1706746	Identifier	replace		1706507	0					
ANR	1706747	Identifier	replace_len		1706507	1					
ANR	1706748	ExpressionStatement	num_subpats = pce -> capture_count + 1	1130:1:35153:35189	1706507	26	True				
ANR	1706749	AssignmentExpression	num_subpats = pce -> capture_count + 1		1706507	0		=			
ANR	1706750	Identifier	num_subpats		1706507	0					
ANR	1706751	AdditiveExpression	pce -> capture_count + 1		1706507	1		+			
ANR	1706752	PtrMemberAccess	pce -> capture_count		1706507	0					
ANR	1706753	Identifier	pce		1706507	0					
ANR	1706754	Identifier	capture_count		1706507	1					
ANR	1706755	PrimaryExpression	1		1706507	1					
ANR	1706756	ExpressionStatement	size_offsets = num_subpats * 3	1131:1:35192:35222	1706507	27	True				
ANR	1706757	AssignmentExpression	size_offsets = num_subpats * 3		1706507	0		=			
ANR	1706758	Identifier	size_offsets		1706507	0					
ANR	1706759	MultiplicativeExpression	num_subpats * 3		1706507	1		*			
ANR	1706760	Identifier	num_subpats		1706507	0					
ANR	1706761	PrimaryExpression	3		1706507	1					
ANR	1706762	IfStatement	if ( size_offsets <= 32 )		1706507	28					
ANR	1706763	Condition	size_offsets <= 32	1132:5:35229:35246	1706507	0	True				
ANR	1706764	RelationalExpression	size_offsets <= 32		1706507	0		<=			
ANR	1706765	Identifier	size_offsets		1706507	0					
ANR	1706766	PrimaryExpression	32		1706507	1					
ANR	1706767	CompoundStatement		53:25:2262:2262	1706507	1					
ANR	1706768	ExpressionStatement	"offsets = ( int * ) do_alloca ( size_offsets * sizeof ( int ) , use_heap )"	1133:2:35253:35317	1706507	0	True				
ANR	1706769	AssignmentExpression	"offsets = ( int * ) do_alloca ( size_offsets * sizeof ( int ) , use_heap )"		1706507	0		=			
ANR	1706770	Identifier	offsets		1706507	0					
ANR	1706771	CastExpression	"( int * ) do_alloca ( size_offsets * sizeof ( int ) , use_heap )"		1706507	1					
ANR	1706772	CastTarget	int *		1706507	0					
ANR	1706773	CallExpression	"do_alloca ( size_offsets * sizeof ( int ) , use_heap )"		1706507	1					
ANR	1706774	Callee	do_alloca		1706507	0					
ANR	1706775	Identifier	do_alloca		1706507	0					
ANR	1706776	ArgumentList	size_offsets * sizeof ( int )		1706507	1					
ANR	1706777	Argument	size_offsets * sizeof ( int )		1706507	0					
ANR	1706778	MultiplicativeExpression	size_offsets * sizeof ( int )		1706507	0		*			
ANR	1706779	Identifier	size_offsets		1706507	0					
ANR	1706780	SizeofExpression	sizeof ( int )		1706507	1					
ANR	1706781	Sizeof	sizeof		1706507	0					
ANR	1706782	SizeofOperand	int		1706507	1					
ANR	1706783	Argument	use_heap		1706507	1					
ANR	1706784	Identifier	use_heap		1706507	0					
ANR	1706785	ElseStatement	else		1706507	0					
ANR	1706786	CompoundStatement		55:8:2340:2340	1706507	0					
ANR	1706787	ExpressionStatement	"offsets = ( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"	1135:2:35331:35390	1706507	0	True				
ANR	1706788	AssignmentExpression	"offsets = ( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1706507	0		=			
ANR	1706789	Identifier	offsets		1706507	0					
ANR	1706790	CastExpression	"( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1706507	1					
ANR	1706791	CastTarget	int *		1706507	0					
ANR	1706792	CallExpression	"safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1706507	1					
ANR	1706793	Callee	safe_emalloc		1706507	0					
ANR	1706794	Identifier	safe_emalloc		1706507	0					
ANR	1706795	ArgumentList	size_offsets		1706507	1					
ANR	1706796	Argument	size_offsets		1706507	0					
ANR	1706797	Identifier	size_offsets		1706507	0					
ANR	1706798	Argument	sizeof ( int )		1706507	1					
ANR	1706799	SizeofExpression	sizeof ( int )		1706507	0					
ANR	1706800	Sizeof	sizeof		1706507	0					
ANR	1706801	SizeofOperand	int		1706507	1					
ANR	1706802	Argument	0		1706507	2					
ANR	1706803	PrimaryExpression	0		1706507	0					
ANR	1706804	ExpressionStatement	subpat_names = NULL	1142:1:35538:35557	1706507	29	True				
ANR	1706805	AssignmentExpression	subpat_names = NULL		1706507	0		=			
ANR	1706806	Identifier	subpat_names		1706507	0					
ANR	1706807	Identifier	NULL		1706507	1					
ANR	1706808	IfStatement	if ( UNEXPECTED ( pce -> name_count > 0 ) )		1706507	30					
ANR	1706809	Condition	UNEXPECTED ( pce -> name_count > 0 )	1143:5:35564:35594	1706507	0	True				
ANR	1706810	CallExpression	UNEXPECTED ( pce -> name_count > 0 )		1706507	0					
ANR	1706811	Callee	UNEXPECTED		1706507	0					
ANR	1706812	Identifier	UNEXPECTED		1706507	0					
ANR	1706813	ArgumentList	pce -> name_count > 0		1706507	1					
ANR	1706814	Argument	pce -> name_count > 0		1706507	0					
ANR	1706815	RelationalExpression	pce -> name_count > 0		1706507	0		>			
ANR	1706816	PtrMemberAccess	pce -> name_count		1706507	0					
ANR	1706817	Identifier	pce		1706507	0					
ANR	1706818	Identifier	name_count		1706507	1					
ANR	1706819	PrimaryExpression	0		1706507	1					
ANR	1706820	CompoundStatement		64:38:2610:2610	1706507	1					
ANR	1706821	ExpressionStatement	"subpat_names = make_subpats_table ( num_subpats , pce )"	1144:2:35601:35652	1706507	0	True				
ANR	1706822	AssignmentExpression	"subpat_names = make_subpats_table ( num_subpats , pce )"		1706507	0		=			
ANR	1706823	Identifier	subpat_names		1706507	0					
ANR	1706824	CallExpression	"make_subpats_table ( num_subpats , pce )"		1706507	1					
ANR	1706825	Callee	make_subpats_table		1706507	0					
ANR	1706826	Identifier	make_subpats_table		1706507	0					
ANR	1706827	ArgumentList	num_subpats		1706507	1					
ANR	1706828	Argument	num_subpats		1706507	0					
ANR	1706829	Identifier	num_subpats		1706507	0					
ANR	1706830	Argument	pce		1706507	1					
ANR	1706831	Identifier	pce		1706507	0					
ANR	1706832	IfStatement	if ( ! subpat_names )		1706507	1					
ANR	1706833	Condition	! subpat_names	1145:6:35660:35672	1706507	0	True				
ANR	1706834	UnaryOperationExpression	! subpat_names		1706507	0					
ANR	1706835	UnaryOperator	!		1706507	0					
ANR	1706836	Identifier	subpat_names		1706507	1					
ANR	1706837	CompoundStatement		66:21:2688:2688	1706507	1					
ANR	1706838	ReturnStatement	return NULL ;	1146:3:35680:35691	1706507	0	True				
ANR	1706839	Identifier	NULL		1706507	0					
ANR	1706840	ExpressionStatement	alloc_len = 0	1150:1:35702:35715	1706507	31	True				
ANR	1706841	AssignmentExpression	alloc_len = 0		1706507	0		=			
ANR	1706842	Identifier	alloc_len		1706507	0					
ANR	1706843	PrimaryExpression	0		1706507	1					
ANR	1706844	ExpressionStatement	result = NULL	1151:1:35718:35731	1706507	32	True				
ANR	1706845	AssignmentExpression	result = NULL		1706507	0		=			
ANR	1706846	Identifier	result		1706507	0					
ANR	1706847	Identifier	NULL		1706507	1					
ANR	1706848	ExpressionStatement	match = NULL	1154:1:35753:35765	1706507	33	True				
ANR	1706849	AssignmentExpression	match = NULL		1706507	0		=			
ANR	1706850	Identifier	match		1706507	0					
ANR	1706851	Identifier	NULL		1706507	1					
ANR	1706852	ExpressionStatement	start_offset = 0	1155:1:35768:35784	1706507	34	True				
ANR	1706853	AssignmentExpression	start_offset = 0		1706507	0		=			
ANR	1706854	Identifier	start_offset		1706507	0					
ANR	1706855	PrimaryExpression	0		1706507	1					
ANR	1706856	ExpressionStatement	result_len = 0	1156:1:35787:35801	1706507	35	True				
ANR	1706857	AssignmentExpression	result_len = 0		1706507	0		=			
ANR	1706858	Identifier	result_len		1706507	0					
ANR	1706859	PrimaryExpression	0		1706507	1					
ANR	1706860	ExpressionStatement	PCRE_G ( error_code ) = PHP_PCRE_NO_ERROR	1157:1:35804:35842	1706507	36	True				
ANR	1706861	AssignmentExpression	PCRE_G ( error_code ) = PHP_PCRE_NO_ERROR		1706507	0		=			
ANR	1706862	CallExpression	PCRE_G ( error_code )		1706507	0					
ANR	1706863	Callee	PCRE_G		1706507	0					
ANR	1706864	Identifier	PCRE_G		1706507	0					
ANR	1706865	ArgumentList	error_code		1706507	1					
ANR	1706866	Argument	error_code		1706507	0					
ANR	1706867	Identifier	error_code		1706507	0					
ANR	1706868	Identifier	PHP_PCRE_NO_ERROR		1706507	1					
ANR	1706869	WhileStatement	while ( 1 )		1706507	37					
ANR	1706870	Condition	1	1159:8:35853:35853	1706507	0	True				
ANR	1706871	PrimaryExpression	1		1706507	0					
ANR	1706872	CompoundStatement		80:11:2869:2869	1706507	1					
ANR	1706873	ExpressionStatement	extra -> mark = & mark	1161:2:35883:35902	1706507	0	True				
ANR	1706874	AssignmentExpression	extra -> mark = & mark		1706507	0		=			
ANR	1706875	PtrMemberAccess	extra -> mark		1706507	0					
ANR	1706876	Identifier	extra		1706507	0					
ANR	1706877	Identifier	mark		1706507	1					
ANR	1706878	UnaryOperationExpression	& mark		1706507	1					
ANR	1706879	UnaryOperator	&		1706507	0					
ANR	1706880	Identifier	mark		1706507	1					
ANR	1706881	ExpressionStatement	extra -> flags |= PCRE_EXTRA_MARK	1162:2:35906:35937	1706507	1	True				
ANR	1706882	AssignmentExpression	extra -> flags |= PCRE_EXTRA_MARK		1706507	0		|=			
ANR	1706883	PtrMemberAccess	extra -> flags		1706507	0					
ANR	1706884	Identifier	extra		1706507	0					
ANR	1706885	Identifier	flags		1706507	1					
ANR	1706886	Identifier	PCRE_EXTRA_MARK		1706507	1					
ANR	1706887	ExpressionStatement	"count = pcre_exec ( pce -> re , extra , subject , subject_len , start_offset , exoptions | g_notempty , offsets , size_offsets )"	1165:2:35988:36110	1706507	2	True				
ANR	1706888	AssignmentExpression	"count = pcre_exec ( pce -> re , extra , subject , subject_len , start_offset , exoptions | g_notempty , offsets , size_offsets )"		1706507	0		=			
ANR	1706889	Identifier	count		1706507	0					
ANR	1706890	CallExpression	"pcre_exec ( pce -> re , extra , subject , subject_len , start_offset , exoptions | g_notempty , offsets , size_offsets )"		1706507	1					
ANR	1706891	Callee	pcre_exec		1706507	0					
ANR	1706892	Identifier	pcre_exec		1706507	0					
ANR	1706893	ArgumentList	pce -> re		1706507	1					
ANR	1706894	Argument	pce -> re		1706507	0					
ANR	1706895	PtrMemberAccess	pce -> re		1706507	0					
ANR	1706896	Identifier	pce		1706507	0					
ANR	1706897	Identifier	re		1706507	1					
ANR	1706898	Argument	extra		1706507	1					
ANR	1706899	Identifier	extra		1706507	0					
ANR	1706900	Argument	subject		1706507	2					
ANR	1706901	Identifier	subject		1706507	0					
ANR	1706902	Argument	subject_len		1706507	3					
ANR	1706903	Identifier	subject_len		1706507	0					
ANR	1706904	Argument	start_offset		1706507	4					
ANR	1706905	Identifier	start_offset		1706507	0					
ANR	1706906	Argument	exoptions | g_notempty		1706507	5					
ANR	1706907	InclusiveOrExpression	exoptions | g_notempty		1706507	0		|			
ANR	1706908	Identifier	exoptions		1706507	0					
ANR	1706909	Identifier	g_notempty		1706507	1					
ANR	1706910	Argument	offsets		1706507	6					
ANR	1706911	Identifier	offsets		1706507	0					
ANR	1706912	Argument	size_offsets		1706507	7					
ANR	1706913	Identifier	size_offsets		1706507	0					
ANR	1706914	ExpressionStatement	exoptions |= PCRE_NO_UTF8_CHECK	1169:2:36171:36202	1706507	3	True				
ANR	1706915	AssignmentExpression	exoptions |= PCRE_NO_UTF8_CHECK		1706507	0		|=			
ANR	1706916	Identifier	exoptions		1706507	0					
ANR	1706917	Identifier	PCRE_NO_UTF8_CHECK		1706507	1					
ANR	1706918	IfStatement	if ( UNEXPECTED ( count == 0 ) )		1706507	4					
ANR	1706919	Condition	UNEXPECTED ( count == 0 )	1172:6:36260:36281	1706507	0	True				
ANR	1706920	CallExpression	UNEXPECTED ( count == 0 )		1706507	0					
ANR	1706921	Callee	UNEXPECTED		1706507	0					
ANR	1706922	Identifier	UNEXPECTED		1706507	0					
ANR	1706923	ArgumentList	count == 0		1706507	1					
ANR	1706924	Argument	count == 0		1706507	0					
ANR	1706925	EqualityExpression	count == 0		1706507	0		==			
ANR	1706926	Identifier	count		1706507	0					
ANR	1706927	PrimaryExpression	0		1706507	1					
ANR	1706928	CompoundStatement		93:30:3297:3297	1706507	1					
ANR	1706929	ExpressionStatement	"php_error_docref ( NULL , E_NOTICE , ""Matched, but too many substrings"" )"	1173:3:36289:36356	1706507	0	True				
ANR	1706930	CallExpression	"php_error_docref ( NULL , E_NOTICE , ""Matched, but too many substrings"" )"		1706507	0					
ANR	1706931	Callee	php_error_docref		1706507	0					
ANR	1706932	Identifier	php_error_docref		1706507	0					
ANR	1706933	ArgumentList	NULL		1706507	1					
ANR	1706934	Argument	NULL		1706507	0					
ANR	1706935	Identifier	NULL		1706507	0					
ANR	1706936	Argument	E_NOTICE		1706507	1					
ANR	1706937	Identifier	E_NOTICE		1706507	0					
ANR	1706938	Argument	"""Matched, but too many substrings"""		1706507	2					
ANR	1706939	PrimaryExpression	"""Matched, but too many substrings"""		1706507	0					
ANR	1706940	ExpressionStatement	count = size_offsets / 3	1174:3:36361:36385	1706507	1	True				
ANR	1706941	AssignmentExpression	count = size_offsets / 3		1706507	0		=			
ANR	1706942	Identifier	count		1706507	0					
ANR	1706943	MultiplicativeExpression	size_offsets / 3		1706507	1		/			
ANR	1706944	Identifier	size_offsets		1706507	0					
ANR	1706945	PrimaryExpression	3		1706507	1					
ANR	1706946	ExpressionStatement	piece = subject + start_offset	1177:2:36394:36424	1706507	5	True				
ANR	1706947	AssignmentExpression	piece = subject + start_offset		1706507	0		=			
ANR	1706948	Identifier	piece		1706507	0					
ANR	1706949	AdditiveExpression	subject + start_offset		1706507	1		+			
ANR	1706950	Identifier	subject		1706507	0					
ANR	1706951	Identifier	start_offset		1706507	1					
ANR	1706952	IfStatement	if ( EXPECTED ( count > 0 && ( offsets [ 1 ] - offsets [ 0 ] >= 0 ) && limit ) )		1706507	6					
ANR	1706953	Condition	EXPECTED ( count > 0 && ( offsets [ 1 ] - offsets [ 0 ] >= 0 ) && limit )	1180:6:36496:36557	1706507	0	True				
ANR	1706954	CallExpression	EXPECTED ( count > 0 && ( offsets [ 1 ] - offsets [ 0 ] >= 0 ) && limit )		1706507	0					
ANR	1706955	Callee	EXPECTED		1706507	0					
ANR	1706956	Identifier	EXPECTED		1706507	0					
ANR	1706957	ArgumentList	count > 0 && ( offsets [ 1 ] - offsets [ 0 ] >= 0 ) && limit		1706507	1					
ANR	1706958	Argument	count > 0 && ( offsets [ 1 ] - offsets [ 0 ] >= 0 ) && limit		1706507	0					
ANR	1706959	AndExpression	count > 0 && ( offsets [ 1 ] - offsets [ 0 ] >= 0 ) && limit		1706507	0		&&			
ANR	1706960	RelationalExpression	count > 0		1706507	0		>			
ANR	1706961	Identifier	count		1706507	0					
ANR	1706962	PrimaryExpression	0		1706507	1					
ANR	1706963	AndExpression	( offsets [ 1 ] - offsets [ 0 ] >= 0 ) && limit		1706507	1		&&			
ANR	1706964	RelationalExpression	offsets [ 1 ] - offsets [ 0 ] >= 0		1706507	0		>=			
ANR	1706965	AdditiveExpression	offsets [ 1 ] - offsets [ 0 ]		1706507	0		-			
ANR	1706966	ArrayIndexing	offsets [ 1 ]		1706507	0					
ANR	1706967	Identifier	offsets		1706507	0					
ANR	1706968	PrimaryExpression	1		1706507	1					
ANR	1706969	ArrayIndexing	offsets [ 0 ]		1706507	1					
ANR	1706970	Identifier	offsets		1706507	0					
ANR	1706971	PrimaryExpression	0		1706507	1					
ANR	1706972	PrimaryExpression	0		1706507	1					
ANR	1706973	Identifier	limit		1706507	1					
ANR	1706974	CompoundStatement		101:70:3573:3573	1706507	1					
ANR	1706975	IfStatement	if ( UNEXPECTED ( replace_count ) )		1706507	0					
ANR	1706976	Condition	UNEXPECTED ( replace_count )	1181:7:36569:36593	1706507	0	True				
ANR	1706977	CallExpression	UNEXPECTED ( replace_count )		1706507	0					
ANR	1706978	Callee	UNEXPECTED		1706507	0					
ANR	1706979	Identifier	UNEXPECTED		1706507	0					
ANR	1706980	ArgumentList	replace_count		1706507	1					
ANR	1706981	Argument	replace_count		1706507	0					
ANR	1706982	Identifier	replace_count		1706507	0					
ANR	1706983	CompoundStatement		102:34:3609:3609	1706507	1					
ANR	1706984	ExpressionStatement	++ * replace_count	1182:4:36602:36618	1706507	0	True				
ANR	1706985	UnaryExpression	++ * replace_count		1706507	0					
ANR	1706986	IncDec	++		1706507	0					
ANR	1706987	UnaryOperationExpression	* replace_count		1706507	1					
ANR	1706988	UnaryOperator	*		1706507	0					
ANR	1706989	Identifier	replace_count		1706507	1					
ANR	1706990	ExpressionStatement	match = subject + offsets [ 0 ]	1186:3:36672:36700	1706507	1	True				
ANR	1706991	AssignmentExpression	match = subject + offsets [ 0 ]		1706507	0		=			
ANR	1706992	Identifier	match		1706507	0					
ANR	1706993	AdditiveExpression	subject + offsets [ 0 ]		1706507	1		+			
ANR	1706994	Identifier	subject		1706507	0					
ANR	1706995	ArrayIndexing	offsets [ 0 ]		1706507	1					
ANR	1706996	Identifier	offsets		1706507	0					
ANR	1706997	PrimaryExpression	0		1706507	1					
ANR	1706998	ExpressionStatement	new_len = result_len + offsets [ 0 ] - start_offset	1188:3:36706:36754	1706507	2	True				
ANR	1706999	AssignmentExpression	new_len = result_len + offsets [ 0 ] - start_offset		1706507	0		=			
ANR	1707000	Identifier	new_len		1706507	0					
ANR	1707001	AdditiveExpression	result_len + offsets [ 0 ] - start_offset		1706507	1		+			
ANR	1707002	Identifier	result_len		1706507	0					
ANR	1707003	AdditiveExpression	offsets [ 0 ] - start_offset		1706507	1		-			
ANR	1707004	ArrayIndexing	offsets [ 0 ]		1706507	0					
ANR	1707005	Identifier	offsets		1706507	0					
ANR	1707006	PrimaryExpression	0		1706507	1					
ANR	1707007	Identifier	start_offset		1706507	1					
ANR	1707008	IfStatement	if ( EXPECTED ( replace ) )		1706507	3					
ANR	1707009	Condition	EXPECTED ( replace )	1191:7:36830:36846	1706507	0	True				
ANR	1707010	CallExpression	EXPECTED ( replace )		1706507	0					
ANR	1707011	Callee	EXPECTED		1706507	0					
ANR	1707012	Identifier	EXPECTED		1706507	0					
ANR	1707013	ArgumentList	replace		1706507	1					
ANR	1707014	Argument	replace		1706507	0					
ANR	1707015	Identifier	replace		1706507	0					
ANR	1707016	CompoundStatement		112:26:3862:3862	1706507	1					
ANR	1707017	ExpressionStatement	walk = replace	1193:4:36889:36903	1706507	0	True				
ANR	1707018	AssignmentExpression	walk = replace		1706507	0		=			
ANR	1707019	Identifier	walk		1706507	0					
ANR	1707020	Identifier	replace		1706507	1					
ANR	1707021	ExpressionStatement	walk_last = 0	1194:4:36909:36922	1706507	1	True				
ANR	1707022	AssignmentExpression	walk_last = 0		1706507	0		=			
ANR	1707023	Identifier	walk_last		1706507	0					
ANR	1707024	PrimaryExpression	0		1706507	1					
ANR	1707025	WhileStatement	while ( walk < replace_end )		1706507	2					
ANR	1707026	Condition	walk < replace_end	1196:11:36936:36953	1706507	0	True				
ANR	1707027	RelationalExpression	walk < replace_end		1706507	0		<			
ANR	1707028	Identifier	walk		1706507	0					
ANR	1707029	Identifier	replace_end		1706507	1					
ANR	1707030	CompoundStatement		117:31:3969:3969	1706507	1					
ANR	1707031	IfStatement	if ( '\\\\' == * walk || '$' == * walk )		1706507	0					
ANR	1707032	Condition	'\\\\' == * walk || '$' == * walk	1197:9:36967:36995	1706507	0	True				
ANR	1707033	OrExpression	'\\\\' == * walk || '$' == * walk		1706507	0		||			
ANR	1707034	EqualityExpression	'\\\\' == * walk		1706507	0		==			
ANR	1707035	PrimaryExpression	'\\\\'		1706507	0					
ANR	1707036	UnaryOperationExpression	* walk		1706507	1					
ANR	1707037	UnaryOperator	*		1706507	0					
ANR	1707038	Identifier	walk		1706507	1					
ANR	1707039	EqualityExpression	'$' == * walk		1706507	1		==			
ANR	1707040	PrimaryExpression	'$'		1706507	0					
ANR	1707041	UnaryOperationExpression	* walk		1706507	1					
ANR	1707042	UnaryOperator	*		1706507	0					
ANR	1707043	Identifier	walk		1706507	1					
ANR	1707044	CompoundStatement		118:40:4011:4011	1706507	1					
ANR	1707045	IfStatement	if ( walk_last == '\\\\' )		1706507	0					
ANR	1707046	Condition	walk_last == '\\\\'	1198:10:37010:37026	1706507	0	True				
ANR	1707047	EqualityExpression	walk_last == '\\\\'		1706507	0		==			
ANR	1707048	Identifier	walk_last		1706507	0					
ANR	1707049	PrimaryExpression	'\\\\'		1706507	1					
ANR	1707050	CompoundStatement		119:29:4042:4042	1706507	1					
ANR	1707051	ExpressionStatement	walk ++	1199:7:37038:37044	1706507	0	True				
ANR	1707052	PostIncDecOperationExpression	walk ++		1706507	0					
ANR	1707053	Identifier	walk		1706507	0					
ANR	1707054	IncDec	++		1706507	1					
ANR	1707055	ExpressionStatement	walk_last = 0	1200:7:37053:37066	1706507	1	True				
ANR	1707056	AssignmentExpression	walk_last = 0		1706507	0		=			
ANR	1707057	Identifier	walk_last		1706507	0					
ANR	1707058	PrimaryExpression	0		1706507	1					
ANR	1707059	ContinueStatement	continue ;	1201:7:37075:37083	1706507	2	True				
ANR	1707060	IfStatement	"if ( preg_get_backref ( & walk , & backref ) )"		1706507	1					
ANR	1707061	Condition	"preg_get_backref ( & walk , & backref )"	1203:10:37103:37135	1706507	0	True				
ANR	1707062	CallExpression	"preg_get_backref ( & walk , & backref )"		1706507	0					
ANR	1707063	Callee	preg_get_backref		1706507	0					
ANR	1707064	Identifier	preg_get_backref		1706507	0					
ANR	1707065	ArgumentList	& walk		1706507	1					
ANR	1707066	Argument	& walk		1706507	0					
ANR	1707067	UnaryOperationExpression	& walk		1706507	0					
ANR	1707068	UnaryOperator	&		1706507	0					
ANR	1707069	Identifier	walk		1706507	1					
ANR	1707070	Argument	& backref		1706507	1					
ANR	1707071	UnaryOperationExpression	& backref		1706507	0					
ANR	1707072	UnaryOperator	&		1706507	0					
ANR	1707073	Identifier	backref		1706507	1					
ANR	1707074	CompoundStatement		124:45:4151:4151	1706507	1					
ANR	1707075	IfStatement	if ( backref < count )		1706507	0					
ANR	1707076	Condition	backref < count	1204:11:37151:37165	1706507	0	True				
ANR	1707077	RelationalExpression	backref < count		1706507	0		<			
ANR	1707078	Identifier	backref		1706507	0					
ANR	1707079	Identifier	count		1706507	1					
ANR	1707080	ExpressionStatement	new_len += offsets [ ( backref << 1 ) + 1 ] - offsets [ backref << 1 ]	1205:8:37176:37232	1706507	1	True				
ANR	1707081	AssignmentExpression	new_len += offsets [ ( backref << 1 ) + 1 ] - offsets [ backref << 1 ]		1706507	0		+=			
ANR	1707082	Identifier	new_len		1706507	0					
ANR	1707083	AdditiveExpression	offsets [ ( backref << 1 ) + 1 ] - offsets [ backref << 1 ]		1706507	1		-			
ANR	1707084	ArrayIndexing	offsets [ ( backref << 1 ) + 1 ]		1706507	0					
ANR	1707085	Identifier	offsets		1706507	0					
ANR	1707086	AdditiveExpression	( backref << 1 ) + 1		1706507	1		+			
ANR	1707087	ShiftExpression	backref << 1		1706507	0		<<			
ANR	1707088	Identifier	backref		1706507	0					
ANR	1707089	PrimaryExpression	1		1706507	1					
ANR	1707090	PrimaryExpression	1		1706507	1					
ANR	1707091	ArrayIndexing	offsets [ backref << 1 ]		1706507	1					
ANR	1707092	Identifier	offsets		1706507	0					
ANR	1707093	ShiftExpression	backref << 1		1706507	1		<<			
ANR	1707094	Identifier	backref		1706507	0					
ANR	1707095	PrimaryExpression	1		1706507	1					
ANR	1707096	ContinueStatement	continue ;	1206:7:37241:37249	1706507	1	True				
ANR	1707097	ExpressionStatement	new_len ++	1209:5:37271:37280	1706507	1	True				
ANR	1707098	PostIncDecOperationExpression	new_len ++		1706507	0					
ANR	1707099	Identifier	new_len		1706507	0					
ANR	1707100	IncDec	++		1706507	1					
ANR	1707101	ExpressionStatement	walk ++	1210:5:37287:37293	1706507	2	True				
ANR	1707102	PostIncDecOperationExpression	walk ++		1706507	0					
ANR	1707103	Identifier	walk		1706507	0					
ANR	1707104	IncDec	++		1706507	1					
ANR	1707105	ExpressionStatement	walk_last = walk [ - 1 ]	1211:5:37300:37320	1706507	3	True				
ANR	1707106	AssignmentExpression	walk_last = walk [ - 1 ]		1706507	0		=			
ANR	1707107	Identifier	walk_last		1706507	0					
ANR	1707108	ArrayIndexing	walk [ - 1 ]		1706507	1					
ANR	1707109	Identifier	walk		1706507	0					
ANR	1707110	UnaryOperationExpression	- 1		1706507	1					
ANR	1707111	UnaryOperator	-		1706507	0					
ANR	1707112	PrimaryExpression	1		1706507	1					
ANR	1707113	IfStatement	if ( new_len >= alloc_len )		1706507	3					
ANR	1707114	Condition	new_len >= alloc_len	1214:8:37337:37356	1706507	0	True				
ANR	1707115	RelationalExpression	new_len >= alloc_len		1706507	0		>=			
ANR	1707116	Identifier	new_len		1706507	0					
ANR	1707117	Identifier	alloc_len		1706507	1					
ANR	1707118	CompoundStatement		135:30:4372:4372	1706507	1					
ANR	1707119	ExpressionStatement	alloc_len = alloc_len + 2 * new_len	1215:5:37366:37401	1706507	0	True				
ANR	1707120	AssignmentExpression	alloc_len = alloc_len + 2 * new_len		1706507	0		=			
ANR	1707121	Identifier	alloc_len		1706507	0					
ANR	1707122	AdditiveExpression	alloc_len + 2 * new_len		1706507	1		+			
ANR	1707123	Identifier	alloc_len		1706507	0					
ANR	1707124	MultiplicativeExpression	2 * new_len		1706507	1		*			
ANR	1707125	PrimaryExpression	2		1706507	0					
ANR	1707126	Identifier	new_len		1706507	1					
ANR	1707127	IfStatement	if ( result == NULL )		1706507	1					
ANR	1707128	Condition	result == NULL	1216:9:37412:37425	1706507	0	True				
ANR	1707129	EqualityExpression	result == NULL		1706507	0		==			
ANR	1707130	Identifier	result		1706507	0					
ANR	1707131	Identifier	NULL		1706507	1					
ANR	1707132	CompoundStatement		137:25:4441:4441	1706507	1					
ANR	1707133	ExpressionStatement	"result = zend_string_alloc ( alloc_len , 0 )"	1217:6:37436:37476	1706507	0	True				
ANR	1707134	AssignmentExpression	"result = zend_string_alloc ( alloc_len , 0 )"		1706507	0		=			
ANR	1707135	Identifier	result		1706507	0					
ANR	1707136	CallExpression	"zend_string_alloc ( alloc_len , 0 )"		1706507	1					
ANR	1707137	Callee	zend_string_alloc		1706507	0					
ANR	1707138	Identifier	zend_string_alloc		1706507	0					
ANR	1707139	ArgumentList	alloc_len		1706507	1					
ANR	1707140	Argument	alloc_len		1706507	0					
ANR	1707141	Identifier	alloc_len		1706507	0					
ANR	1707142	Argument	0		1706507	1					
ANR	1707143	PrimaryExpression	0		1706507	0					
ANR	1707144	ElseStatement	else		1706507	0					
ANR	1707145	CompoundStatement		139:12:4503:4503	1706507	0					
ANR	1707146	ExpressionStatement	"result = zend_string_extend ( result , alloc_len , 0 )"	1219:6:37498:37547	1706507	0	True				
ANR	1707147	AssignmentExpression	"result = zend_string_extend ( result , alloc_len , 0 )"		1706507	0		=			
ANR	1707148	Identifier	result		1706507	0					
ANR	1707149	CallExpression	"zend_string_extend ( result , alloc_len , 0 )"		1706507	1					
ANR	1707150	Callee	zend_string_extend		1706507	0					
ANR	1707151	Identifier	zend_string_extend		1706507	0					
ANR	1707152	ArgumentList	result		1706507	1					
ANR	1707153	Argument	result		1706507	0					
ANR	1707154	Identifier	result		1706507	0					
ANR	1707155	Argument	alloc_len		1706507	1					
ANR	1707156	Identifier	alloc_len		1706507	0					
ANR	1707157	Argument	0		1706507	2					
ANR	1707158	PrimaryExpression	0		1706507	0					
ANR	1707159	ExpressionStatement	"memcpy ( & ZSTR_VAL ( result ) [ result_len ] , piece , match - piece )"	1224:4:37622:37679	1706507	4	True				
ANR	1707160	CallExpression	"memcpy ( & ZSTR_VAL ( result ) [ result_len ] , piece , match - piece )"		1706507	0					
ANR	1707161	Callee	memcpy		1706507	0					
ANR	1707162	Identifier	memcpy		1706507	0					
ANR	1707163	ArgumentList	& ZSTR_VAL ( result ) [ result_len ]		1706507	1					
ANR	1707164	Argument	& ZSTR_VAL ( result ) [ result_len ]		1706507	0					
ANR	1707165	UnaryOperationExpression	& ZSTR_VAL ( result ) [ result_len ]		1706507	0					
ANR	1707166	UnaryOperator	&		1706507	0					
ANR	1707167	ArrayIndexing	ZSTR_VAL ( result ) [ result_len ]		1706507	1					
ANR	1707168	CallExpression	ZSTR_VAL ( result )		1706507	0					
ANR	1707169	Callee	ZSTR_VAL		1706507	0					
ANR	1707170	Identifier	ZSTR_VAL		1706507	0					
ANR	1707171	ArgumentList	result		1706507	1					
ANR	1707172	Argument	result		1706507	0					
ANR	1707173	Identifier	result		1706507	0					
ANR	1707174	Identifier	result_len		1706507	1					
ANR	1707175	Argument	piece		1706507	1					
ANR	1707176	Identifier	piece		1706507	0					
ANR	1707177	Argument	match - piece		1706507	2					
ANR	1707178	AdditiveExpression	match - piece		1706507	0		-			
ANR	1707179	Identifier	match		1706507	0					
ANR	1707180	Identifier	piece		1706507	1					
ANR	1707181	ExpressionStatement	result_len += ( int ) ( match - piece )	1225:4:37685:37717	1706507	5	True				
ANR	1707182	AssignmentExpression	result_len += ( int ) ( match - piece )		1706507	0		+=			
ANR	1707183	Identifier	result_len		1706507	0					
ANR	1707184	CastExpression	( int ) ( match - piece )		1706507	1					
ANR	1707185	CastTarget	int		1706507	0					
ANR	1707186	AdditiveExpression	match - piece		1706507	1		-			
ANR	1707187	Identifier	match		1706507	0					
ANR	1707188	Identifier	piece		1706507	1					
ANR	1707189	ExpressionStatement	walkbuf = ZSTR_VAL ( result ) + result_len	1228:4:37764:37803	1706507	6	True				
ANR	1707190	AssignmentExpression	walkbuf = ZSTR_VAL ( result ) + result_len		1706507	0		=			
ANR	1707191	Identifier	walkbuf		1706507	0					
ANR	1707192	AdditiveExpression	ZSTR_VAL ( result ) + result_len		1706507	1		+			
ANR	1707193	CallExpression	ZSTR_VAL ( result )		1706507	0					
ANR	1707194	Callee	ZSTR_VAL		1706507	0					
ANR	1707195	Identifier	ZSTR_VAL		1706507	0					
ANR	1707196	ArgumentList	result		1706507	1					
ANR	1707197	Argument	result		1706507	0					
ANR	1707198	Identifier	result		1706507	0					
ANR	1707199	Identifier	result_len		1706507	1					
ANR	1707200	ExpressionStatement	walk = replace	1230:4:37810:37824	1706507	7	True				
ANR	1707201	AssignmentExpression	walk = replace		1706507	0		=			
ANR	1707202	Identifier	walk		1706507	0					
ANR	1707203	Identifier	replace		1706507	1					
ANR	1707204	ExpressionStatement	walk_last = 0	1231:4:37830:37843	1706507	8	True				
ANR	1707205	AssignmentExpression	walk_last = 0		1706507	0		=			
ANR	1707206	Identifier	walk_last		1706507	0					
ANR	1707207	PrimaryExpression	0		1706507	1					
ANR	1707208	WhileStatement	while ( walk < replace_end )		1706507	9					
ANR	1707209	Condition	walk < replace_end	1232:11:37856:37873	1706507	0	True				
ANR	1707210	RelationalExpression	walk < replace_end		1706507	0		<			
ANR	1707211	Identifier	walk		1706507	0					
ANR	1707212	Identifier	replace_end		1706507	1					
ANR	1707213	CompoundStatement		153:31:4889:4889	1706507	1					
ANR	1707214	IfStatement	if ( '\\\\' == * walk || '$' == * walk )		1706507	0					
ANR	1707215	Condition	'\\\\' == * walk || '$' == * walk	1233:9:37887:37915	1706507	0	True				
ANR	1707216	OrExpression	'\\\\' == * walk || '$' == * walk		1706507	0		||			
ANR	1707217	EqualityExpression	'\\\\' == * walk		1706507	0		==			
ANR	1707218	PrimaryExpression	'\\\\'		1706507	0					
ANR	1707219	UnaryOperationExpression	* walk		1706507	1					
ANR	1707220	UnaryOperator	*		1706507	0					
ANR	1707221	Identifier	walk		1706507	1					
ANR	1707222	EqualityExpression	'$' == * walk		1706507	1		==			
ANR	1707223	PrimaryExpression	'$'		1706507	0					
ANR	1707224	UnaryOperationExpression	* walk		1706507	1					
ANR	1707225	UnaryOperator	*		1706507	0					
ANR	1707226	Identifier	walk		1706507	1					
ANR	1707227	CompoundStatement		154:40:4931:4931	1706507	1					
ANR	1707228	IfStatement	if ( walk_last == '\\\\' )		1706507	0					
ANR	1707229	Condition	walk_last == '\\\\'	1234:10:37930:37946	1706507	0	True				
ANR	1707230	EqualityExpression	walk_last == '\\\\'		1706507	0		==			
ANR	1707231	Identifier	walk_last		1706507	0					
ANR	1707232	PrimaryExpression	'\\\\'		1706507	1					
ANR	1707233	CompoundStatement		155:29:4962:4962	1706507	1					
ANR	1707234	ExpressionStatement	* ( walkbuf - 1 ) = * walk ++	1235:7:37958:37980	1706507	0	True				
ANR	1707235	AssignmentExpression	* ( walkbuf - 1 ) = * walk ++		1706507	0		=			
ANR	1707236	UnaryOperationExpression	* ( walkbuf - 1 )		1706507	0					
ANR	1707237	UnaryOperator	*		1706507	0					
ANR	1707238	AdditiveExpression	walkbuf - 1		1706507	1		-			
ANR	1707239	Identifier	walkbuf		1706507	0					
ANR	1707240	PrimaryExpression	1		1706507	1					
ANR	1707241	UnaryOperationExpression	* walk ++		1706507	1					
ANR	1707242	UnaryOperator	*		1706507	0					
ANR	1707243	PostIncDecOperationExpression	walk ++		1706507	1					
ANR	1707244	Identifier	walk		1706507	0					
ANR	1707245	IncDec	++		1706507	1					
ANR	1707246	ExpressionStatement	walk_last = 0	1236:7:37989:38002	1706507	1	True				
ANR	1707247	AssignmentExpression	walk_last = 0		1706507	0		=			
ANR	1707248	Identifier	walk_last		1706507	0					
ANR	1707249	PrimaryExpression	0		1706507	1					
ANR	1707250	ContinueStatement	continue ;	1237:7:38011:38019	1706507	2	True				
ANR	1707251	IfStatement	"if ( preg_get_backref ( & walk , & backref ) )"		1706507	1					
ANR	1707252	Condition	"preg_get_backref ( & walk , & backref )"	1239:10:38039:38071	1706507	0	True				
ANR	1707253	CallExpression	"preg_get_backref ( & walk , & backref )"		1706507	0					
ANR	1707254	Callee	preg_get_backref		1706507	0					
ANR	1707255	Identifier	preg_get_backref		1706507	0					
ANR	1707256	ArgumentList	& walk		1706507	1					
ANR	1707257	Argument	& walk		1706507	0					
ANR	1707258	UnaryOperationExpression	& walk		1706507	0					
ANR	1707259	UnaryOperator	&		1706507	0					
ANR	1707260	Identifier	walk		1706507	1					
ANR	1707261	Argument	& backref		1706507	1					
ANR	1707262	UnaryOperationExpression	& backref		1706507	0					
ANR	1707263	UnaryOperator	&		1706507	0					
ANR	1707264	Identifier	backref		1706507	1					
ANR	1707265	CompoundStatement		160:45:5087:5087	1706507	1					
ANR	1707266	IfStatement	if ( backref < count )		1706507	0					
ANR	1707267	Condition	backref < count	1240:11:38087:38101	1706507	0	True				
ANR	1707268	RelationalExpression	backref < count		1706507	0		<			
ANR	1707269	Identifier	backref		1706507	0					
ANR	1707270	Identifier	count		1706507	1					
ANR	1707271	CompoundStatement		161:28:5117:5117	1706507	1					
ANR	1707272	ExpressionStatement	match_len = offsets [ ( backref << 1 ) + 1 ] - offsets [ backref << 1 ]	1241:8:38114:38171	1706507	0	True				
ANR	1707273	AssignmentExpression	match_len = offsets [ ( backref << 1 ) + 1 ] - offsets [ backref << 1 ]		1706507	0		=			
ANR	1707274	Identifier	match_len		1706507	0					
ANR	1707275	AdditiveExpression	offsets [ ( backref << 1 ) + 1 ] - offsets [ backref << 1 ]		1706507	1		-			
ANR	1707276	ArrayIndexing	offsets [ ( backref << 1 ) + 1 ]		1706507	0					
ANR	1707277	Identifier	offsets		1706507	0					
ANR	1707278	AdditiveExpression	( backref << 1 ) + 1		1706507	1		+			
ANR	1707279	ShiftExpression	backref << 1		1706507	0		<<			
ANR	1707280	Identifier	backref		1706507	0					
ANR	1707281	PrimaryExpression	1		1706507	1					
ANR	1707282	PrimaryExpression	1		1706507	1					
ANR	1707283	ArrayIndexing	offsets [ backref << 1 ]		1706507	1					
ANR	1707284	Identifier	offsets		1706507	0					
ANR	1707285	ShiftExpression	backref << 1		1706507	1		<<			
ANR	1707286	Identifier	backref		1706507	0					
ANR	1707287	PrimaryExpression	1		1706507	1					
ANR	1707288	ExpressionStatement	"memcpy ( walkbuf , subject + offsets [ backref << 1 ] , match_len )"	1242:8:38181:38238	1706507	1	True				
ANR	1707289	CallExpression	"memcpy ( walkbuf , subject + offsets [ backref << 1 ] , match_len )"		1706507	0					
ANR	1707290	Callee	memcpy		1706507	0					
ANR	1707291	Identifier	memcpy		1706507	0					
ANR	1707292	ArgumentList	walkbuf		1706507	1					
ANR	1707293	Argument	walkbuf		1706507	0					
ANR	1707294	Identifier	walkbuf		1706507	0					
ANR	1707295	Argument	subject + offsets [ backref << 1 ]		1706507	1					
ANR	1707296	AdditiveExpression	subject + offsets [ backref << 1 ]		1706507	0		+			
ANR	1707297	Identifier	subject		1706507	0					
ANR	1707298	ArrayIndexing	offsets [ backref << 1 ]		1706507	1					
ANR	1707299	Identifier	offsets		1706507	0					
ANR	1707300	ShiftExpression	backref << 1		1706507	1		<<			
ANR	1707301	Identifier	backref		1706507	0					
ANR	1707302	PrimaryExpression	1		1706507	1					
ANR	1707303	Argument	match_len		1706507	2					
ANR	1707304	Identifier	match_len		1706507	0					
ANR	1707305	ExpressionStatement	walkbuf += match_len	1243:8:38248:38268	1706507	2	True				
ANR	1707306	AssignmentExpression	walkbuf += match_len		1706507	0		+=			
ANR	1707307	Identifier	walkbuf		1706507	0					
ANR	1707308	Identifier	match_len		1706507	1					
ANR	1707309	ContinueStatement	continue ;	1245:7:38286:38294	1706507	1	True				
ANR	1707310	ExpressionStatement	* walkbuf ++ = * walk ++	1248:5:38316:38336	1706507	1	True				
ANR	1707311	AssignmentExpression	* walkbuf ++ = * walk ++		1706507	0		=			
ANR	1707312	UnaryOperationExpression	* walkbuf ++		1706507	0					
ANR	1707313	UnaryOperator	*		1706507	0					
ANR	1707314	PostIncDecOperationExpression	walkbuf ++		1706507	1					
ANR	1707315	Identifier	walkbuf		1706507	0					
ANR	1707316	IncDec	++		1706507	1					
ANR	1707317	UnaryOperationExpression	* walk ++		1706507	1					
ANR	1707318	UnaryOperator	*		1706507	0					
ANR	1707319	PostIncDecOperationExpression	walk ++		1706507	1					
ANR	1707320	Identifier	walk		1706507	0					
ANR	1707321	IncDec	++		1706507	1					
ANR	1707322	ExpressionStatement	walk_last = walk [ - 1 ]	1249:5:38343:38363	1706507	2	True				
ANR	1707323	AssignmentExpression	walk_last = walk [ - 1 ]		1706507	0		=			
ANR	1707324	Identifier	walk_last		1706507	0					
ANR	1707325	ArrayIndexing	walk [ - 1 ]		1706507	1					
ANR	1707326	Identifier	walk		1706507	0					
ANR	1707327	UnaryOperationExpression	- 1		1706507	1					
ANR	1707328	UnaryOperator	-		1706507	0					
ANR	1707329	PrimaryExpression	1		1706507	1					
ANR	1707330	ExpressionStatement	* walkbuf = '\\0'	1251:4:38375:38390	1706507	10	True				
ANR	1707331	AssignmentExpression	* walkbuf = '\\0'		1706507	0		=			
ANR	1707332	UnaryOperationExpression	* walkbuf		1706507	0					
ANR	1707333	UnaryOperator	*		1706507	0					
ANR	1707334	Identifier	walkbuf		1706507	1					
ANR	1707335	PrimaryExpression	'\\0'		1706507	1					
ANR	1707336	ExpressionStatement	result_len += ( int ) ( walkbuf - ( ZSTR_VAL ( result ) + result_len ) )	1253:4:38472:38534	1706507	11	True				
ANR	1707337	AssignmentExpression	result_len += ( int ) ( walkbuf - ( ZSTR_VAL ( result ) + result_len ) )		1706507	0		+=			
ANR	1707338	Identifier	result_len		1706507	0					
ANR	1707339	CastExpression	( int ) ( walkbuf - ( ZSTR_VAL ( result ) + result_len ) )		1706507	1					
ANR	1707340	CastTarget	int		1706507	0					
ANR	1707341	AdditiveExpression	walkbuf - ( ZSTR_VAL ( result ) + result_len )		1706507	1		-			
ANR	1707342	Identifier	walkbuf		1706507	0					
ANR	1707343	AdditiveExpression	ZSTR_VAL ( result ) + result_len		1706507	1		+			
ANR	1707344	CallExpression	ZSTR_VAL ( result )		1706507	0					
ANR	1707345	Callee	ZSTR_VAL		1706507	0					
ANR	1707346	Identifier	ZSTR_VAL		1706507	0					
ANR	1707347	ArgumentList	result		1706507	1					
ANR	1707348	Argument	result		1706507	0					
ANR	1707349	Identifier	result		1706507	0					
ANR	1707350	Identifier	result_len		1706507	1					
ANR	1707351	ElseStatement	else		1706507	0					
ANR	1707352	CompoundStatement		175:10:5559:5559	1706507	0					
ANR	1707353	ExpressionStatement	"eval_result = preg_do_repl_func ( replace_val , subject , offsets , subpat_names , count , mark )"	1256:4:38624:38713	1706507	0	True				
ANR	1707354	AssignmentExpression	"eval_result = preg_do_repl_func ( replace_val , subject , offsets , subpat_names , count , mark )"		1706507	0		=			
ANR	1707355	Identifier	eval_result		1706507	0					
ANR	1707356	CallExpression	"preg_do_repl_func ( replace_val , subject , offsets , subpat_names , count , mark )"		1706507	1					
ANR	1707357	Callee	preg_do_repl_func		1706507	0					
ANR	1707358	Identifier	preg_do_repl_func		1706507	0					
ANR	1707359	ArgumentList	replace_val		1706507	1					
ANR	1707360	Argument	replace_val		1706507	0					
ANR	1707361	Identifier	replace_val		1706507	0					
ANR	1707362	Argument	subject		1706507	1					
ANR	1707363	Identifier	subject		1706507	0					
ANR	1707364	Argument	offsets		1706507	2					
ANR	1707365	Identifier	offsets		1706507	0					
ANR	1707366	Argument	subpat_names		1706507	3					
ANR	1707367	Identifier	subpat_names		1706507	0					
ANR	1707368	Argument	count		1706507	4					
ANR	1707369	Identifier	count		1706507	0					
ANR	1707370	Argument	mark		1706507	5					
ANR	1707371	Identifier	mark		1706507	0					
ANR	1707372	ExpressionStatement	ZEND_ASSERT ( eval_result )	1257:4:38719:38743	1706507	1	True				
ANR	1707373	CallExpression	ZEND_ASSERT ( eval_result )		1706507	0					
ANR	1707374	Callee	ZEND_ASSERT		1706507	0					
ANR	1707375	Identifier	ZEND_ASSERT		1706507	0					
ANR	1707376	ArgumentList	eval_result		1706507	1					
ANR	1707377	Argument	eval_result		1706507	0					
ANR	1707378	Identifier	eval_result		1706507	0					
ANR	1707379	ExpressionStatement	new_len += ( int ) ZSTR_LEN ( eval_result )	1258:4:38749:38786	1706507	2	True				
ANR	1707380	AssignmentExpression	new_len += ( int ) ZSTR_LEN ( eval_result )		1706507	0		+=			
ANR	1707381	Identifier	new_len		1706507	0					
ANR	1707382	CastExpression	( int ) ZSTR_LEN ( eval_result )		1706507	1					
ANR	1707383	CastTarget	int		1706507	0					
ANR	1707384	CallExpression	ZSTR_LEN ( eval_result )		1706507	1					
ANR	1707385	Callee	ZSTR_LEN		1706507	0					
ANR	1707386	Identifier	ZSTR_LEN		1706507	0					
ANR	1707387	ArgumentList	eval_result		1706507	1					
ANR	1707388	Argument	eval_result		1706507	0					
ANR	1707389	Identifier	eval_result		1706507	0					
ANR	1707390	IfStatement	if ( new_len >= alloc_len )		1706507	3					
ANR	1707391	Condition	new_len >= alloc_len	1259:8:38796:38815	1706507	0	True				
ANR	1707392	RelationalExpression	new_len >= alloc_len		1706507	0		>=			
ANR	1707393	Identifier	new_len		1706507	0					
ANR	1707394	Identifier	alloc_len		1706507	1					
ANR	1707395	CompoundStatement		180:30:5831:5831	1706507	1					
ANR	1707396	ExpressionStatement	alloc_len = alloc_len + 2 * new_len	1260:5:38825:38860	1706507	0	True				
ANR	1707397	AssignmentExpression	alloc_len = alloc_len + 2 * new_len		1706507	0		=			
ANR	1707398	Identifier	alloc_len		1706507	0					
ANR	1707399	AdditiveExpression	alloc_len + 2 * new_len		1706507	1		+			
ANR	1707400	Identifier	alloc_len		1706507	0					
ANR	1707401	MultiplicativeExpression	2 * new_len		1706507	1		*			
ANR	1707402	PrimaryExpression	2		1706507	0					
ANR	1707403	Identifier	new_len		1706507	1					
ANR	1707404	IfStatement	if ( result == NULL )		1706507	1					
ANR	1707405	Condition	result == NULL	1261:9:38871:38884	1706507	0	True				
ANR	1707406	EqualityExpression	result == NULL		1706507	0		==			
ANR	1707407	Identifier	result		1706507	0					
ANR	1707408	Identifier	NULL		1706507	1					
ANR	1707409	CompoundStatement		182:25:5900:5900	1706507	1					
ANR	1707410	ExpressionStatement	"result = zend_string_alloc ( alloc_len , 0 )"	1262:6:38895:38935	1706507	0	True				
ANR	1707411	AssignmentExpression	"result = zend_string_alloc ( alloc_len , 0 )"		1706507	0		=			
ANR	1707412	Identifier	result		1706507	0					
ANR	1707413	CallExpression	"zend_string_alloc ( alloc_len , 0 )"		1706507	1					
ANR	1707414	Callee	zend_string_alloc		1706507	0					
ANR	1707415	Identifier	zend_string_alloc		1706507	0					
ANR	1707416	ArgumentList	alloc_len		1706507	1					
ANR	1707417	Argument	alloc_len		1706507	0					
ANR	1707418	Identifier	alloc_len		1706507	0					
ANR	1707419	Argument	0		1706507	1					
ANR	1707420	PrimaryExpression	0		1706507	0					
ANR	1707421	ElseStatement	else		1706507	0					
ANR	1707422	CompoundStatement		184:12:5962:5962	1706507	0					
ANR	1707423	ExpressionStatement	"result = zend_string_extend ( result , alloc_len , 0 )"	1264:6:38957:39006	1706507	0	True				
ANR	1707424	AssignmentExpression	"result = zend_string_extend ( result , alloc_len , 0 )"		1706507	0		=			
ANR	1707425	Identifier	result		1706507	0					
ANR	1707426	CallExpression	"zend_string_extend ( result , alloc_len , 0 )"		1706507	1					
ANR	1707427	Callee	zend_string_extend		1706507	0					
ANR	1707428	Identifier	zend_string_extend		1706507	0					
ANR	1707429	ArgumentList	result		1706507	1					
ANR	1707430	Argument	result		1706507	0					
ANR	1707431	Identifier	result		1706507	0					
ANR	1707432	Argument	alloc_len		1706507	1					
ANR	1707433	Identifier	alloc_len		1706507	0					
ANR	1707434	Argument	0		1706507	2					
ANR	1707435	PrimaryExpression	0		1706507	0					
ANR	1707436	ExpressionStatement	"memcpy ( ZSTR_VAL ( result ) + result_len , piece , match - piece )"	1268:4:39080:39137	1706507	4	True				
ANR	1707437	CallExpression	"memcpy ( ZSTR_VAL ( result ) + result_len , piece , match - piece )"		1706507	0					
ANR	1707438	Callee	memcpy		1706507	0					
ANR	1707439	Identifier	memcpy		1706507	0					
ANR	1707440	ArgumentList	ZSTR_VAL ( result ) + result_len		1706507	1					
ANR	1707441	Argument	ZSTR_VAL ( result ) + result_len		1706507	0					
ANR	1707442	AdditiveExpression	ZSTR_VAL ( result ) + result_len		1706507	0		+			
ANR	1707443	CallExpression	ZSTR_VAL ( result )		1706507	0					
ANR	1707444	Callee	ZSTR_VAL		1706507	0					
ANR	1707445	Identifier	ZSTR_VAL		1706507	0					
ANR	1707446	ArgumentList	result		1706507	1					
ANR	1707447	Argument	result		1706507	0					
ANR	1707448	Identifier	result		1706507	0					
ANR	1707449	Identifier	result_len		1706507	1					
ANR	1707450	Argument	piece		1706507	1					
ANR	1707451	Identifier	piece		1706507	0					
ANR	1707452	Argument	match - piece		1706507	2					
ANR	1707453	AdditiveExpression	match - piece		1706507	0		-			
ANR	1707454	Identifier	match		1706507	0					
ANR	1707455	Identifier	piece		1706507	1					
ANR	1707456	ExpressionStatement	result_len += ( int ) ( match - piece )	1269:4:39143:39175	1706507	5	True				
ANR	1707457	AssignmentExpression	result_len += ( int ) ( match - piece )		1706507	0		+=			
ANR	1707458	Identifier	result_len		1706507	0					
ANR	1707459	CastExpression	( int ) ( match - piece )		1706507	1					
ANR	1707460	CastTarget	int		1706507	0					
ANR	1707461	AdditiveExpression	match - piece		1706507	1		-			
ANR	1707462	Identifier	match		1706507	0					
ANR	1707463	Identifier	piece		1706507	1					
ANR	1707464	ExpressionStatement	walkbuf = ZSTR_VAL ( result ) + result_len	1272:4:39222:39261	1706507	6	True				
ANR	1707465	AssignmentExpression	walkbuf = ZSTR_VAL ( result ) + result_len		1706507	0		=			
ANR	1707466	Identifier	walkbuf		1706507	0					
ANR	1707467	AdditiveExpression	ZSTR_VAL ( result ) + result_len		1706507	1		+			
ANR	1707468	CallExpression	ZSTR_VAL ( result )		1706507	0					
ANR	1707469	Callee	ZSTR_VAL		1706507	0					
ANR	1707470	Identifier	ZSTR_VAL		1706507	0					
ANR	1707471	ArgumentList	result		1706507	1					
ANR	1707472	Argument	result		1706507	0					
ANR	1707473	Identifier	result		1706507	0					
ANR	1707474	Identifier	result_len		1706507	1					
ANR	1707475	ExpressionStatement	"memcpy ( walkbuf , ZSTR_VAL ( eval_result ) , ZSTR_LEN ( eval_result ) )"	1275:4:39344:39405	1706507	7	True				
ANR	1707476	CallExpression	"memcpy ( walkbuf , ZSTR_VAL ( eval_result ) , ZSTR_LEN ( eval_result ) )"		1706507	0					
ANR	1707477	Callee	memcpy		1706507	0					
ANR	1707478	Identifier	memcpy		1706507	0					
ANR	1707479	ArgumentList	walkbuf		1706507	1					
ANR	1707480	Argument	walkbuf		1706507	0					
ANR	1707481	Identifier	walkbuf		1706507	0					
ANR	1707482	Argument	ZSTR_VAL ( eval_result )		1706507	1					
ANR	1707483	CallExpression	ZSTR_VAL ( eval_result )		1706507	0					
ANR	1707484	Callee	ZSTR_VAL		1706507	0					
ANR	1707485	Identifier	ZSTR_VAL		1706507	0					
ANR	1707486	ArgumentList	eval_result		1706507	1					
ANR	1707487	Argument	eval_result		1706507	0					
ANR	1707488	Identifier	eval_result		1706507	0					
ANR	1707489	Argument	ZSTR_LEN ( eval_result )		1706507	2					
ANR	1707490	CallExpression	ZSTR_LEN ( eval_result )		1706507	0					
ANR	1707491	Callee	ZSTR_LEN		1706507	0					
ANR	1707492	Identifier	ZSTR_LEN		1706507	0					
ANR	1707493	ArgumentList	eval_result		1706507	1					
ANR	1707494	Argument	eval_result		1706507	0					
ANR	1707495	Identifier	eval_result		1706507	0					
ANR	1707496	ExpressionStatement	result_len += ( int ) ZSTR_LEN ( eval_result )	1276:4:39411:39451	1706507	8	True				
ANR	1707497	AssignmentExpression	result_len += ( int ) ZSTR_LEN ( eval_result )		1706507	0		+=			
ANR	1707498	Identifier	result_len		1706507	0					
ANR	1707499	CastExpression	( int ) ZSTR_LEN ( eval_result )		1706507	1					
ANR	1707500	CastTarget	int		1706507	0					
ANR	1707501	CallExpression	ZSTR_LEN ( eval_result )		1706507	1					
ANR	1707502	Callee	ZSTR_LEN		1706507	0					
ANR	1707503	Identifier	ZSTR_LEN		1706507	0					
ANR	1707504	ArgumentList	eval_result		1706507	1					
ANR	1707505	Argument	eval_result		1706507	0					
ANR	1707506	Identifier	eval_result		1706507	0					
ANR	1707507	ExpressionStatement	zend_string_release ( eval_result )	1277:4:39457:39489	1706507	9	True				
ANR	1707508	CallExpression	zend_string_release ( eval_result )		1706507	0					
ANR	1707509	Callee	zend_string_release		1706507	0					
ANR	1707510	Identifier	zend_string_release		1706507	0					
ANR	1707511	ArgumentList	eval_result		1706507	1					
ANR	1707512	Argument	eval_result		1706507	0					
ANR	1707513	Identifier	eval_result		1706507	0					
ANR	1707514	IfStatement	if ( EXPECTED ( limit ) )		1706507	4					
ANR	1707515	Condition	EXPECTED ( limit )	1280:7:39504:39518	1706507	0	True				
ANR	1707516	CallExpression	EXPECTED ( limit )		1706507	0					
ANR	1707517	Callee	EXPECTED		1706507	0					
ANR	1707518	Identifier	EXPECTED		1706507	0					
ANR	1707519	ArgumentList	limit		1706507	1					
ANR	1707520	Argument	limit		1706507	0					
ANR	1707521	Identifier	limit		1706507	0					
ANR	1707522	CompoundStatement		201:24:6534:6534	1706507	1					
ANR	1707523	ExpressionStatement	limit --	1281:4:39527:39534	1706507	0	True				
ANR	1707524	PostIncDecOperationExpression	limit --		1706507	0					
ANR	1707525	Identifier	limit		1706507	0					
ANR	1707526	IncDec	--		1706507	1					
ANR	1707527	ElseStatement	else		1706507	0					
ANR	1707528	IfStatement	if ( count == PCRE_ERROR_NOMATCH || UNEXPECTED ( limit == 0 ) )		1706507	0					
ANR	1707529	Condition	count == PCRE_ERROR_NOMATCH || UNEXPECTED ( limit == 0 )	1283:13:39554:39606	1706507	0	True				
ANR	1707530	OrExpression	count == PCRE_ERROR_NOMATCH || UNEXPECTED ( limit == 0 )		1706507	0		||			
ANR	1707531	EqualityExpression	count == PCRE_ERROR_NOMATCH		1706507	0		==			
ANR	1707532	Identifier	count		1706507	0					
ANR	1707533	Identifier	PCRE_ERROR_NOMATCH		1706507	1					
ANR	1707534	CallExpression	UNEXPECTED ( limit == 0 )		1706507	1					
ANR	1707535	Callee	UNEXPECTED		1706507	0					
ANR	1707536	Identifier	UNEXPECTED		1706507	0					
ANR	1707537	ArgumentList	limit == 0		1706507	1					
ANR	1707538	Argument	limit == 0		1706507	0					
ANR	1707539	EqualityExpression	limit == 0		1706507	0		==			
ANR	1707540	Identifier	limit		1706507	0					
ANR	1707541	PrimaryExpression	0		1706507	1					
ANR	1707542	CompoundStatement		204:68:6622:6622	1706507	1					
ANR	1707543	IfStatement	if ( g_notempty != 0 && start_offset < subject_len )		1706507	0					
ANR	1707544	Condition	g_notempty != 0 && start_offset < subject_len	1288:7:39880:39924	1706507	0	True				
ANR	1707545	AndExpression	g_notempty != 0 && start_offset < subject_len		1706507	0		&&			
ANR	1707546	EqualityExpression	g_notempty != 0		1706507	0		!=			
ANR	1707547	Identifier	g_notempty		1706507	0					
ANR	1707548	PrimaryExpression	0		1706507	1					
ANR	1707549	RelationalExpression	start_offset < subject_len		1706507	1		<			
ANR	1707550	Identifier	start_offset		1706507	0					
ANR	1707551	Identifier	subject_len		1706507	1					
ANR	1707552	CompoundStatement		210:4:6946:6994	1706507	1					
ANR	1707553	IdentifierDeclStatement	"int unit_len = calculate_unit_length ( pce , piece ) ;"	1289:4:39933:39981	1706507	0	True				
ANR	1707554	IdentifierDecl	"unit_len = calculate_unit_length ( pce , piece )"		1706507	0					
ANR	1707555	IdentifierDeclType	int		1706507	0					
ANR	1707556	Identifier	unit_len		1706507	1					
ANR	1707557	AssignmentExpression	"unit_len = calculate_unit_length ( pce , piece )"		1706507	2		=			
ANR	1707558	Identifier	unit_len		1706507	0					
ANR	1707559	CallExpression	"calculate_unit_length ( pce , piece )"		1706507	1					
ANR	1707560	Callee	calculate_unit_length		1706507	0					
ANR	1707561	Identifier	calculate_unit_length		1706507	0					
ANR	1707562	ArgumentList	pce		1706507	1					
ANR	1707563	Argument	pce		1706507	0					
ANR	1707564	Identifier	pce		1706507	0					
ANR	1707565	Argument	piece		1706507	1					
ANR	1707566	Identifier	piece		1706507	0					
ANR	1707567	ExpressionStatement	offsets [ 0 ] = start_offset	1291:4:39988:40013	1706507	1	True				
ANR	1707568	AssignmentExpression	offsets [ 0 ] = start_offset		1706507	0		=			
ANR	1707569	ArrayIndexing	offsets [ 0 ]		1706507	0					
ANR	1707570	Identifier	offsets		1706507	0					
ANR	1707571	PrimaryExpression	0		1706507	1					
ANR	1707572	Identifier	start_offset		1706507	1					
ANR	1707573	ExpressionStatement	offsets [ 1 ] = start_offset + unit_len	1292:4:40019:40055	1706507	2	True				
ANR	1707574	AssignmentExpression	offsets [ 1 ] = start_offset + unit_len		1706507	0		=			
ANR	1707575	ArrayIndexing	offsets [ 1 ]		1706507	0					
ANR	1707576	Identifier	offsets		1706507	0					
ANR	1707577	PrimaryExpression	1		1706507	1					
ANR	1707578	AdditiveExpression	start_offset + unit_len		1706507	1		+			
ANR	1707579	Identifier	start_offset		1706507	0					
ANR	1707580	Identifier	unit_len		1706507	1					
ANR	1707581	ExpressionStatement	"memcpy ( ZSTR_VAL ( result ) + result_len , piece , unit_len )"	1293:4:40061:40115	1706507	3	True				
ANR	1707582	CallExpression	"memcpy ( ZSTR_VAL ( result ) + result_len , piece , unit_len )"		1706507	0					
ANR	1707583	Callee	memcpy		1706507	0					
ANR	1707584	Identifier	memcpy		1706507	0					
ANR	1707585	ArgumentList	ZSTR_VAL ( result ) + result_len		1706507	1					
ANR	1707586	Argument	ZSTR_VAL ( result ) + result_len		1706507	0					
ANR	1707587	AdditiveExpression	ZSTR_VAL ( result ) + result_len		1706507	0		+			
ANR	1707588	CallExpression	ZSTR_VAL ( result )		1706507	0					
ANR	1707589	Callee	ZSTR_VAL		1706507	0					
ANR	1707590	Identifier	ZSTR_VAL		1706507	0					
ANR	1707591	ArgumentList	result		1706507	1					
ANR	1707592	Argument	result		1706507	0					
ANR	1707593	Identifier	result		1706507	0					
ANR	1707594	Identifier	result_len		1706507	1					
ANR	1707595	Argument	piece		1706507	1					
ANR	1707596	Identifier	piece		1706507	0					
ANR	1707597	Argument	unit_len		1706507	2					
ANR	1707598	Identifier	unit_len		1706507	0					
ANR	1707599	ExpressionStatement	result_len += unit_len	1294:4:40121:40143	1706507	4	True				
ANR	1707600	AssignmentExpression	result_len += unit_len		1706507	0		+=			
ANR	1707601	Identifier	result_len		1706507	0					
ANR	1707602	Identifier	unit_len		1706507	1					
ANR	1707603	ElseStatement	else		1706507	0					
ANR	1707604	CompoundStatement		216:10:7168:7168	1706507	0					
ANR	1707605	IfStatement	if ( ! result && subject_str )		1706507	0					
ANR	1707606	Condition	! result && subject_str	1296:8:40165:40186	1706507	0	True				
ANR	1707607	AndExpression	! result && subject_str		1706507	0		&&			
ANR	1707608	UnaryOperationExpression	! result		1706507	0					
ANR	1707609	UnaryOperator	!		1706507	0					
ANR	1707610	Identifier	result		1706507	1					
ANR	1707611	Identifier	subject_str		1706507	1					
ANR	1707612	CompoundStatement		217:32:7202:7202	1706507	1					
ANR	1707613	ExpressionStatement	result = zend_string_copy ( subject_str )	1297:5:40196:40234	1706507	0	True				
ANR	1707614	AssignmentExpression	result = zend_string_copy ( subject_str )		1706507	0		=			
ANR	1707615	Identifier	result		1706507	0					
ANR	1707616	CallExpression	zend_string_copy ( subject_str )		1706507	1					
ANR	1707617	Callee	zend_string_copy		1706507	0					
ANR	1707618	Identifier	zend_string_copy		1706507	0					
ANR	1707619	ArgumentList	subject_str		1706507	1					
ANR	1707620	Argument	subject_str		1706507	0					
ANR	1707621	Identifier	subject_str		1706507	0					
ANR	1707622	BreakStatement	break ;	1298:5:40241:40246	1706507	1	True				
ANR	1707623	ExpressionStatement	new_len = result_len + subject_len - start_offset	1300:4:40258:40307	1706507	1	True				
ANR	1707624	AssignmentExpression	new_len = result_len + subject_len - start_offset		1706507	0		=			
ANR	1707625	Identifier	new_len		1706507	0					
ANR	1707626	AdditiveExpression	result_len + subject_len - start_offset		1706507	1		+			
ANR	1707627	Identifier	result_len		1706507	0					
ANR	1707628	AdditiveExpression	subject_len - start_offset		1706507	1		-			
ANR	1707629	Identifier	subject_len		1706507	0					
ANR	1707630	Identifier	start_offset		1706507	1					
ANR	1707631	IfStatement	if ( new_len > alloc_len )		1706507	2					
ANR	1707632	Condition	new_len > alloc_len	1301:8:40317:40335	1706507	0	True				
ANR	1707633	RelationalExpression	new_len > alloc_len		1706507	0		>			
ANR	1707634	Identifier	new_len		1706507	0					
ANR	1707635	Identifier	alloc_len		1706507	1					
ANR	1707636	CompoundStatement		222:29:7351:7351	1706507	1					
ANR	1707637	ExpressionStatement	alloc_len = new_len	1302:5:40345:40364	1706507	0	True				
ANR	1707638	AssignmentExpression	alloc_len = new_len		1706507	0		=			
ANR	1707639	Identifier	alloc_len		1706507	0					
ANR	1707640	Identifier	new_len		1706507	1					
ANR	1707641	IfStatement	if ( NULL != result )		1706507	1					
ANR	1707642	Condition	NULL != result	1303:9:40416:40429	1706507	0	True				
ANR	1707643	EqualityExpression	NULL != result		1706507	0		!=			
ANR	1707644	Identifier	NULL		1706507	0					
ANR	1707645	Identifier	result		1706507	1					
ANR	1707646	CompoundStatement		224:25:7445:7445	1706507	1					
ANR	1707647	ExpressionStatement	"result = zend_string_realloc ( result , alloc_len , 0 )"	1304:6:40440:40490	1706507	0	True				
ANR	1707648	AssignmentExpression	"result = zend_string_realloc ( result , alloc_len , 0 )"		1706507	0		=			
ANR	1707649	Identifier	result		1706507	0					
ANR	1707650	CallExpression	"zend_string_realloc ( result , alloc_len , 0 )"		1706507	1					
ANR	1707651	Callee	zend_string_realloc		1706507	0					
ANR	1707652	Identifier	zend_string_realloc		1706507	0					
ANR	1707653	ArgumentList	result		1706507	1					
ANR	1707654	Argument	result		1706507	0					
ANR	1707655	Identifier	result		1706507	0					
ANR	1707656	Argument	alloc_len		1706507	1					
ANR	1707657	Identifier	alloc_len		1706507	0					
ANR	1707658	Argument	0		1706507	2					
ANR	1707659	PrimaryExpression	0		1706507	0					
ANR	1707660	ElseStatement	else		1706507	0					
ANR	1707661	CompoundStatement		226:12:7517:7517	1706507	0					
ANR	1707662	ExpressionStatement	"result = zend_string_alloc ( alloc_len , 0 )"	1306:6:40512:40552	1706507	0	True				
ANR	1707663	AssignmentExpression	"result = zend_string_alloc ( alloc_len , 0 )"		1706507	0		=			
ANR	1707664	Identifier	result		1706507	0					
ANR	1707665	CallExpression	"zend_string_alloc ( alloc_len , 0 )"		1706507	1					
ANR	1707666	Callee	zend_string_alloc		1706507	0					
ANR	1707667	Identifier	zend_string_alloc		1706507	0					
ANR	1707668	ArgumentList	alloc_len		1706507	1					
ANR	1707669	Argument	alloc_len		1706507	0					
ANR	1707670	Identifier	alloc_len		1706507	0					
ANR	1707671	Argument	0		1706507	1					
ANR	1707672	PrimaryExpression	0		1706507	0					
ANR	1707673	ExpressionStatement	"memcpy ( ZSTR_VAL ( result ) + result_len , piece , subject_len - start_offset )"	1310:4:40625:40697	1706507	3	True				
ANR	1707674	CallExpression	"memcpy ( ZSTR_VAL ( result ) + result_len , piece , subject_len - start_offset )"		1706507	0					
ANR	1707675	Callee	memcpy		1706507	0					
ANR	1707676	Identifier	memcpy		1706507	0					
ANR	1707677	ArgumentList	ZSTR_VAL ( result ) + result_len		1706507	1					
ANR	1707678	Argument	ZSTR_VAL ( result ) + result_len		1706507	0					
ANR	1707679	AdditiveExpression	ZSTR_VAL ( result ) + result_len		1706507	0		+			
ANR	1707680	CallExpression	ZSTR_VAL ( result )		1706507	0					
ANR	1707681	Callee	ZSTR_VAL		1706507	0					
ANR	1707682	Identifier	ZSTR_VAL		1706507	0					
ANR	1707683	ArgumentList	result		1706507	1					
ANR	1707684	Argument	result		1706507	0					
ANR	1707685	Identifier	result		1706507	0					
ANR	1707686	Identifier	result_len		1706507	1					
ANR	1707687	Argument	piece		1706507	1					
ANR	1707688	Identifier	piece		1706507	0					
ANR	1707689	Argument	subject_len - start_offset		1706507	2					
ANR	1707690	AdditiveExpression	subject_len - start_offset		1706507	0		-			
ANR	1707691	Identifier	subject_len		1706507	0					
ANR	1707692	Identifier	start_offset		1706507	1					
ANR	1707693	ExpressionStatement	result_len += subject_len - start_offset	1311:4:40703:40743	1706507	4	True				
ANR	1707694	AssignmentExpression	result_len += subject_len - start_offset		1706507	0		+=			
ANR	1707695	Identifier	result_len		1706507	0					
ANR	1707696	AdditiveExpression	subject_len - start_offset		1706507	1		-			
ANR	1707697	Identifier	subject_len		1706507	0					
ANR	1707698	Identifier	start_offset		1706507	1					
ANR	1707699	ExpressionStatement	ZSTR_VAL ( result ) [ result_len ] = '\\0'	1312:4:40749:40784	1706507	5	True				
ANR	1707700	AssignmentExpression	ZSTR_VAL ( result ) [ result_len ] = '\\0'		1706507	0		=			
ANR	1707701	ArrayIndexing	ZSTR_VAL ( result ) [ result_len ]		1706507	0					
ANR	1707702	CallExpression	ZSTR_VAL ( result )		1706507	0					
ANR	1707703	Callee	ZSTR_VAL		1706507	0					
ANR	1707704	Identifier	ZSTR_VAL		1706507	0					
ANR	1707705	ArgumentList	result		1706507	1					
ANR	1707706	Argument	result		1706507	0					
ANR	1707707	Identifier	result		1706507	0					
ANR	1707708	Identifier	result_len		1706507	1					
ANR	1707709	PrimaryExpression	'\\0'		1706507	1					
ANR	1707710	ExpressionStatement	ZSTR_LEN ( result ) = result_len	1313:4:40790:40819	1706507	6	True				
ANR	1707711	AssignmentExpression	ZSTR_LEN ( result ) = result_len		1706507	0		=			
ANR	1707712	CallExpression	ZSTR_LEN ( result )		1706507	0					
ANR	1707713	Callee	ZSTR_LEN		1706507	0					
ANR	1707714	Identifier	ZSTR_LEN		1706507	0					
ANR	1707715	ArgumentList	result		1706507	1					
ANR	1707716	Argument	result		1706507	0					
ANR	1707717	Identifier	result		1706507	0					
ANR	1707718	Identifier	result_len		1706507	1					
ANR	1707719	BreakStatement	break ;	1314:4:40825:40830	1706507	7	True				
ANR	1707720	ElseStatement	else		1706507	0					
ANR	1707721	CompoundStatement		237:9:7859:7859	1706507	0					
ANR	1707722	ExpressionStatement	pcre_handle_exec_error ( count )	1317:3:40851:40880	1706507	0	True				
ANR	1707723	CallExpression	pcre_handle_exec_error ( count )		1706507	0					
ANR	1707724	Callee	pcre_handle_exec_error		1706507	0					
ANR	1707725	Identifier	pcre_handle_exec_error		1706507	0					
ANR	1707726	ArgumentList	count		1706507	1					
ANR	1707727	Argument	count		1706507	0					
ANR	1707728	Identifier	count		1706507	0					
ANR	1707729	IfStatement	if ( result )		1706507	1					
ANR	1707730	Condition	result	1318:7:40889:40894	1706507	0	True				
ANR	1707731	Identifier	result		1706507	0					
ANR	1707732	CompoundStatement		239:15:7910:7910	1706507	1					
ANR	1707733	ExpressionStatement	zend_string_free ( result )	1319:4:40903:40927	1706507	0	True				
ANR	1707734	CallExpression	zend_string_free ( result )		1706507	0					
ANR	1707735	Callee	zend_string_free		1706507	0					
ANR	1707736	Identifier	zend_string_free		1706507	0					
ANR	1707737	ArgumentList	result		1706507	1					
ANR	1707738	Argument	result		1706507	0					
ANR	1707739	Identifier	result		1706507	0					
ANR	1707740	ExpressionStatement	result = NULL	1320:4:40933:40946	1706507	1	True				
ANR	1707741	AssignmentExpression	result = NULL		1706507	0		=			
ANR	1707742	Identifier	result		1706507	0					
ANR	1707743	Identifier	NULL		1706507	1					
ANR	1707744	BreakStatement	break ;	1322:3:40956:40961	1706507	2	True				
ANR	1707745	ExpressionStatement	g_notempty = ( offsets [ 1 ] == offsets [ 0 ] ) ? PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED : 0	1329:2:41245:41327	1706507	7	True				
ANR	1707746	AssignmentExpression	g_notempty = ( offsets [ 1 ] == offsets [ 0 ] ) ? PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED : 0		1706507	0		=			
ANR	1707747	Identifier	g_notempty		1706507	0					
ANR	1707748	ConditionalExpression	( offsets [ 1 ] == offsets [ 0 ] ) ? PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED : 0		1706507	1					
ANR	1707749	Condition	offsets [ 1 ] == offsets [ 0 ]		1706507	0					
ANR	1707750	EqualityExpression	offsets [ 1 ] == offsets [ 0 ]		1706507	0		==			
ANR	1707751	ArrayIndexing	offsets [ 1 ]		1706507	0					
ANR	1707752	Identifier	offsets		1706507	0					
ANR	1707753	PrimaryExpression	1		1706507	1					
ANR	1707754	ArrayIndexing	offsets [ 0 ]		1706507	1					
ANR	1707755	Identifier	offsets		1706507	0					
ANR	1707756	PrimaryExpression	0		1706507	1					
ANR	1707757	InclusiveOrExpression	PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED		1706507	1		|			
ANR	1707758	Identifier	PCRE_NOTEMPTY_ATSTART		1706507	0					
ANR	1707759	Identifier	PCRE_ANCHORED		1706507	1					
ANR	1707760	PrimaryExpression	0		1706507	2					
ANR	1707761	ExpressionStatement	start_offset = offsets [ 1 ]	1332:2:41367:41392	1706507	8	True				
ANR	1707762	AssignmentExpression	start_offset = offsets [ 1 ]		1706507	0		=			
ANR	1707763	Identifier	start_offset		1706507	0					
ANR	1707764	ArrayIndexing	offsets [ 1 ]		1706507	1					
ANR	1707765	Identifier	offsets		1706507	0					
ANR	1707766	PrimaryExpression	1		1706507	1					
ANR	1707767	IfStatement	if ( size_offsets <= 32 )		1706507	38					
ANR	1707768	Condition	size_offsets <= 32	1335:5:41403:41420	1706507	0	True				
ANR	1707769	RelationalExpression	size_offsets <= 32		1706507	0		<=			
ANR	1707770	Identifier	size_offsets		1706507	0					
ANR	1707771	PrimaryExpression	32		1706507	1					
ANR	1707772	CompoundStatement		256:25:8436:8436	1706507	1					
ANR	1707773	ExpressionStatement	"free_alloca ( offsets , use_heap )"	1336:2:41427:41457	1706507	0	True				
ANR	1707774	CallExpression	"free_alloca ( offsets , use_heap )"		1706507	0					
ANR	1707775	Callee	free_alloca		1706507	0					
ANR	1707776	Identifier	free_alloca		1706507	0					
ANR	1707777	ArgumentList	offsets		1706507	1					
ANR	1707778	Argument	offsets		1706507	0					
ANR	1707779	Identifier	offsets		1706507	0					
ANR	1707780	Argument	use_heap		1706507	1					
ANR	1707781	Identifier	use_heap		1706507	0					
ANR	1707782	ElseStatement	else		1706507	0					
ANR	1707783	CompoundStatement		258:8:8480:8480	1706507	0					
ANR	1707784	ExpressionStatement	efree ( offsets )	1338:2:41471:41485	1706507	0	True				
ANR	1707785	CallExpression	efree ( offsets )		1706507	0					
ANR	1707786	Callee	efree		1706507	0					
ANR	1707787	Identifier	efree		1706507	0					
ANR	1707788	ArgumentList	offsets		1706507	1					
ANR	1707789	Argument	offsets		1706507	0					
ANR	1707790	Identifier	offsets		1706507	0					
ANR	1707791	IfStatement	if ( UNEXPECTED ( subpat_names ) )		1706507	39					
ANR	1707792	Condition	UNEXPECTED ( subpat_names )	1340:5:41495:41518	1706507	0	True				
ANR	1707793	CallExpression	UNEXPECTED ( subpat_names )		1706507	0					
ANR	1707794	Callee	UNEXPECTED		1706507	0					
ANR	1707795	Identifier	UNEXPECTED		1706507	0					
ANR	1707796	ArgumentList	subpat_names		1706507	1					
ANR	1707797	Argument	subpat_names		1706507	0					
ANR	1707798	Identifier	subpat_names		1706507	0					
ANR	1707799	CompoundStatement		261:31:8534:8534	1706507	1					
ANR	1707800	ExpressionStatement	efree ( subpat_names )	1341:2:41525:41544	1706507	0	True				
ANR	1707801	CallExpression	efree ( subpat_names )		1706507	0					
ANR	1707802	Callee	efree		1706507	0					
ANR	1707803	Identifier	efree		1706507	0					
ANR	1707804	ArgumentList	subpat_names		1706507	1					
ANR	1707805	Argument	subpat_names		1706507	0					
ANR	1707806	Identifier	subpat_names		1706507	0					
ANR	1707807	ReturnStatement	return result ;	1344:1:41551:41564	1706507	40	True				
ANR	1707808	Identifier	result		1706507	0					
ANR	1707809	ReturnType	PHPAPI zend_string *		1706507	1					
ANR	1707810	Identifier	php_pcre_replace_impl		1706507	2					
ANR	1707811	ParameterList	"pcre_cache_entry * pce , zend_string * subject_str , char * subject , int subject_len , zval * replace_val , int is_callable_replace , int limit , int * replace_count"		1706507	3					
ANR	1707812	Parameter	pcre_cache_entry * pce	1079:42:32830:32850	1706507	0	True				
ANR	1707813	ParameterType	pcre_cache_entry *		1706507	0					
ANR	1707814	Identifier	pce		1706507	1					
ANR	1707815	Parameter	zend_string * subject_str	1079:65:32853:32876	1706507	1	True				
ANR	1707816	ParameterType	zend_string *		1706507	0					
ANR	1707817	Identifier	subject_str		1706507	1					
ANR	1707818	Parameter	char * subject	1079:91:32879:32891	1706507	2	True				
ANR	1707819	ParameterType	char *		1706507	0					
ANR	1707820	Identifier	subject		1706507	1					
ANR	1707821	Parameter	int subject_len	1079:106:32894:32908	1706507	3	True				
ANR	1707822	ParameterType	int		1706507	0					
ANR	1707823	Identifier	subject_len		1706507	1					
ANR	1707824	Parameter	zval * replace_val	1079:123:32911:32927	1706507	4	True				
ANR	1707825	ParameterType	zval *		1706507	0					
ANR	1707826	Identifier	replace_val		1706507	1					
ANR	1707827	Parameter	int is_callable_replace	1079:142:32930:32952	1706507	5	True				
ANR	1707828	ParameterType	int		1706507	0					
ANR	1707829	Identifier	is_callable_replace		1706507	1					
ANR	1707830	Parameter	int limit	1079:167:32955:32963	1706507	6	True				
ANR	1707831	ParameterType	int		1706507	0					
ANR	1707832	Identifier	limit		1706507	1					
ANR	1707833	Parameter	int * replace_count	1079:178:32966:32983	1706507	7	True				
ANR	1707834	ParameterType	int *		1706507	0					
ANR	1707835	Identifier	replace_count		1706507	1					
ANR	1707836	CFGEntryNode	ENTRY		1706507		True				
ANR	1707837	CFGExitNode	EXIT		1706507		True				
ANR	1707838	Symbol	num_subpats		1706507						
ANR	1707839	Symbol	backref		1706507						
ANR	1707840	Symbol	* result_len		1706507						
ANR	1707841	Symbol	pce -> extra		1706507						
ANR	1707842	Symbol	match_len		1706507						
ANR	1707843	Symbol	pcre_exec		1706507						
ANR	1707844	Symbol	subject		1706507						
ANR	1707845	Symbol	replace		1706507						
ANR	1707846	Symbol	g_notempty		1706507						
ANR	1707847	Symbol	walk_last		1706507						
ANR	1707848	Symbol	* walkbuf ++		1706507						
ANR	1707849	Symbol	zend_string_realloc		1706507						
ANR	1707850	Symbol	subject_str		1706507						
ANR	1707851	Symbol	extra -> flags		1706507						
ANR	1707852	Symbol	subject_len		1706507						
ANR	1707853	Symbol	limit		1706507						
ANR	1707854	Symbol	exoptions		1706507						
ANR	1707855	Symbol	* walkbuf		1706507						
ANR	1707856	Symbol	alloc_len		1706507						
ANR	1707857	Symbol	result_len		1706507						
ANR	1707858	Symbol	eval_result		1706507						
ANR	1707859	Symbol	* ZSTR_VAL		1706507						
ANR	1707860	Symbol	zend_string_alloc		1706507						
ANR	1707861	Symbol	replace_len		1706507						
ANR	1707862	Symbol	NULL		1706507						
ANR	1707863	Symbol	walkbuf		1706507						
ANR	1707864	Symbol	PCRE_EXTRA_MARK		1706507						
ANR	1707865	Symbol	count		1706507						
ANR	1707866	Symbol	E_NOTICE		1706507						
ANR	1707867	Symbol	zend_string_copy		1706507						
ANR	1707868	Symbol	* walk ++		1706507						
ANR	1707869	Symbol	subpat_names		1706507						
ANR	1707870	Symbol	PCRE_ERROR_NOMATCH		1706507						
ANR	1707871	Symbol	& extra_data		1706507						
ANR	1707872	Symbol	* extra		1706507						
ANR	1707873	Symbol	make_subpats_table		1706507						
ANR	1707874	Symbol	piece		1706507						
ANR	1707875	Symbol	pce -> re		1706507						
ANR	1707876	Symbol	error_code		1706507						
ANR	1707877	Symbol	extra_data . flags		1706507						
ANR	1707878	Symbol	* pce		1706507						
ANR	1707879	Symbol	replace_val		1706507						
ANR	1707880	Symbol	use_heap		1706507						
ANR	1707881	Symbol	preg_get_backref		1706507						
ANR	1707882	Symbol	pce -> name_count		1706507						
ANR	1707883	Symbol	zend_string_extend		1706507						
ANR	1707884	Symbol	pce -> preg_options		1706507						
ANR	1707885	Symbol	backtrack_limit		1706507						
ANR	1707886	Symbol	pce -> capture_count		1706507						
ANR	1707887	Symbol	PREG_REPLACE_EVAL		1706507						
ANR	1707888	Symbol	& mark		1706507						
ANR	1707889	Symbol	unit_len		1706507						
ANR	1707890	Symbol	extra -> match_limit		1706507						
ANR	1707891	Symbol	extra -> match_limit_recursion		1706507						
ANR	1707892	Symbol	& backref		1706507						
ANR	1707893	Symbol	replace_count		1706507						
ANR	1707894	Symbol	result		1706507						
ANR	1707895	Symbol	UNEXPECTED		1706507						
ANR	1707896	Symbol	E_WARNING		1706507						
ANR	1707897	Symbol	& walk		1706507						
ANR	1707898	Symbol	pce		1706507						
ANR	1707899	Symbol	recursion_limit		1706507						
ANR	1707900	Symbol	extra -> mark		1706507						
ANR	1707901	Symbol	extra		1706507						
ANR	1707902	Symbol	PCRE_NO_UTF8_CHECK		1706507						
ANR	1707903	Symbol	is_callable_replace		1706507						
ANR	1707904	Symbol	* walk		1706507						
ANR	1707905	Symbol	Z_STRLEN_P		1706507						
ANR	1707906	Symbol	preg_do_repl_func		1706507						
ANR	1707907	Symbol	size_offsets		1706507						
ANR	1707908	Symbol	* offsets		1706507						
ANR	1707909	Symbol	match		1706507						
ANR	1707910	Symbol	PHP_PCRE_NO_ERROR		1706507						
ANR	1707911	Symbol	PCRE_ANCHORED		1706507						
ANR	1707912	Symbol	Z_STRVAL_P		1706507						
ANR	1707913	Symbol	PCRE_EXTRA_MATCH_LIMIT_RECURSION		1706507						
ANR	1707914	Symbol	ZSTR_VAL		1706507						
ANR	1707915	Symbol	PCRE_NOTEMPTY_ATSTART		1706507						
ANR	1707916	Symbol	PCRE_G		1706507						
ANR	1707917	Symbol	extra_data		1706507						
ANR	1707918	Symbol	offsets		1706507						
ANR	1707919	Symbol	calculate_unit_length		1706507						
ANR	1707920	Symbol	new_len		1706507						
ANR	1707921	Symbol	replace_end		1706507						
ANR	1707922	Symbol	PCRE_EXTRA_MATCH_LIMIT		1706507						
ANR	1707923	Symbol	do_alloca		1706507						
ANR	1707924	Symbol	* backref		1706507						
ANR	1707925	Symbol	ZSTR_LEN		1706507						
ANR	1707926	Symbol	start_offset		1706507						
ANR	1707927	Symbol	safe_emalloc		1706507						
ANR	1707928	Symbol	EXPECTED		1706507						
ANR	1707929	Symbol	walk		1706507						
ANR	1707930	Symbol	mark		1706507						
ANR	1707931	Symbol	* ( walkbuf - 1 )		1706507						
ANR	1707932	Function	php_replace_in_subject	1350:0:41613:44228							
ANR	1707933	FunctionDef	"php_replace_in_subject (zval * regex , zval * replace , zval * subject , int limit , int is_callable_replace , int * replace_count)"		1707932	0					
ANR	1707934	CompoundStatement		1351:0:41755:44228	1707932	0					
ANR	1707935	IdentifierDeclStatement	"zval * regex_entry , * replace_entry = NULL , * replace_value , empty_replace ;"	1352:1:41758:41843	1707932	0	True				
ANR	1707936	IdentifierDecl	* regex_entry		1707932	0					
ANR	1707937	IdentifierDeclType	zval *		1707932	0					
ANR	1707938	Identifier	regex_entry		1707932	1					
ANR	1707939	IdentifierDecl	* replace_entry = NULL		1707932	1					
ANR	1707940	IdentifierDeclType	zval *		1707932	0					
ANR	1707941	Identifier	replace_entry		1707932	1					
ANR	1707942	AssignmentExpression	* replace_entry = NULL		1707932	2		=			
ANR	1707943	Identifier	NULL		1707932	0					
ANR	1707944	Identifier	NULL		1707932	1					
ANR	1707945	IdentifierDecl	* replace_value		1707932	2					
ANR	1707946	IdentifierDeclType	zval *		1707932	0					
ANR	1707947	Identifier	replace_value		1707932	1					
ANR	1707948	IdentifierDecl	empty_replace		1707932	3					
ANR	1707949	IdentifierDeclType	zval		1707932	0					
ANR	1707950	Identifier	empty_replace		1707932	1					
ANR	1707951	IdentifierDeclStatement	zend_string * result ;	1356:1:41846:41865	1707932	1	True				
ANR	1707952	IdentifierDecl	* result		1707932	0					
ANR	1707953	IdentifierDeclType	zend_string *		1707932	0					
ANR	1707954	Identifier	result		1707932	1					
ANR	1707955	IdentifierDeclStatement	uint32_t replace_idx ;	1357:1:41868:41888	1707932	2	True				
ANR	1707956	IdentifierDecl	replace_idx		1707932	0					
ANR	1707957	IdentifierDeclType	uint32_t		1707932	0					
ANR	1707958	Identifier	replace_idx		1707932	1					
ANR	1707959	IdentifierDeclStatement	zend_string * subject_str = zval_get_string ( subject ) ;	1358:1:41891:41942	1707932	3	True				
ANR	1707960	IdentifierDecl	* subject_str = zval_get_string ( subject )		1707932	0					
ANR	1707961	IdentifierDeclType	zend_string *		1707932	0					
ANR	1707962	Identifier	subject_str		1707932	1					
ANR	1707963	AssignmentExpression	* subject_str = zval_get_string ( subject )		1707932	2		=			
ANR	1707964	Identifier	subject_str		1707932	0					
ANR	1707965	CallExpression	zval_get_string ( subject )		1707932	1					
ANR	1707966	Callee	zval_get_string		1707932	0					
ANR	1707967	Identifier	zval_get_string		1707932	0					
ANR	1707968	ArgumentList	subject		1707932	1					
ANR	1707969	Argument	subject		1707932	0					
ANR	1707970	Identifier	subject		1707932	0					
ANR	1707971	ExpressionStatement	ZVAL_EMPTY_STRING ( & empty_replace )	1361:1:42059:42092	1707932	4	True				
ANR	1707972	CallExpression	ZVAL_EMPTY_STRING ( & empty_replace )		1707932	0					
ANR	1707973	Callee	ZVAL_EMPTY_STRING		1707932	0					
ANR	1707974	Identifier	ZVAL_EMPTY_STRING		1707932	0					
ANR	1707975	ArgumentList	& empty_replace		1707932	1					
ANR	1707976	Argument	& empty_replace		1707932	0					
ANR	1707977	UnaryOperationExpression	& empty_replace		1707932	0					
ANR	1707978	UnaryOperator	&		1707932	0					
ANR	1707979	Identifier	empty_replace		1707932	1					
ANR	1707980	IfStatement	if ( ZEND_SIZE_T_INT_OVFL ( ZSTR_LEN ( subject_str ) ) )		1707932	5					
ANR	1707981	Condition	ZEND_SIZE_T_INT_OVFL ( ZSTR_LEN ( subject_str ) )	1363:5:42100:42142	1707932	0	True				
ANR	1707982	CallExpression	ZEND_SIZE_T_INT_OVFL ( ZSTR_LEN ( subject_str ) )		1707932	0					
ANR	1707983	Callee	ZEND_SIZE_T_INT_OVFL		1707932	0					
ANR	1707984	Identifier	ZEND_SIZE_T_INT_OVFL		1707932	0					
ANR	1707985	ArgumentList	ZSTR_LEN ( subject_str )		1707932	1					
ANR	1707986	Argument	ZSTR_LEN ( subject_str )		1707932	0					
ANR	1707987	CallExpression	ZSTR_LEN ( subject_str )		1707932	0					
ANR	1707988	Callee	ZSTR_LEN		1707932	0					
ANR	1707989	Identifier	ZSTR_LEN		1707932	0					
ANR	1707990	ArgumentList	subject_str		1707932	1					
ANR	1707991	Argument	subject_str		1707932	0					
ANR	1707992	Identifier	subject_str		1707932	0					
ANR	1707993	CompoundStatement		13:50:389:389	1707932	1					
ANR	1707994	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Subject is too long"" )"	1364:3:42150:42206	1707932	0	True				
ANR	1707995	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Subject is too long"" )"		1707932	0					
ANR	1707996	Callee	php_error_docref		1707932	0					
ANR	1707997	Identifier	php_error_docref		1707932	0					
ANR	1707998	ArgumentList	NULL		1707932	1					
ANR	1707999	Argument	NULL		1707932	0					
ANR	1708000	Identifier	NULL		1707932	0					
ANR	1708001	Argument	E_WARNING		1707932	1					
ANR	1708002	Identifier	E_WARNING		1707932	0					
ANR	1708003	Argument	"""Subject is too long"""		1707932	2					
ANR	1708004	PrimaryExpression	"""Subject is too long"""		1707932	0					
ANR	1708005	ReturnStatement	return NULL ;	1365:3:42211:42222	1707932	1	True				
ANR	1708006	Identifier	NULL		1707932	0					
ANR	1708007	IfStatement	if ( Z_TYPE_P ( regex ) == IS_ARRAY )		1707932	6					
ANR	1708008	Condition	Z_TYPE_P ( regex ) == IS_ARRAY	1369:5:42261:42287	1707932	0	True				
ANR	1708009	EqualityExpression	Z_TYPE_P ( regex ) == IS_ARRAY		1707932	0		==			
ANR	1708010	CallExpression	Z_TYPE_P ( regex )		1707932	0					
ANR	1708011	Callee	Z_TYPE_P		1707932	0					
ANR	1708012	Identifier	Z_TYPE_P		1707932	0					
ANR	1708013	ArgumentList	regex		1707932	1					
ANR	1708014	Argument	regex		1707932	0					
ANR	1708015	Identifier	regex		1707932	0					
ANR	1708016	Identifier	IS_ARRAY		1707932	1					
ANR	1708017	CompoundStatement		19:34:534:534	1707932	1					
ANR	1708018	ExpressionStatement	replace_value = replace	1370:2:42294:42317	1707932	0	True				
ANR	1708019	AssignmentExpression	replace_value = replace		1707932	0		=			
ANR	1708020	Identifier	replace_value		1707932	0					
ANR	1708021	Identifier	replace		1707932	1					
ANR	1708022	ExpressionStatement	replace_idx = 0	1371:2:42321:42336	1707932	1	True				
ANR	1708023	AssignmentExpression	replace_idx = 0		1707932	0		=			
ANR	1708024	Identifier	replace_idx		1707932	0					
ANR	1708025	PrimaryExpression	0		1707932	1					
ANR	1708026	Statement	ZEND_HASH_FOREACH_VAL	1374:2:42398:42418	1707932	2	True				
ANR	1708027	Statement	(	1374:23:42419:42419	1707932	3	True				
ANR	1708028	Statement	Z_ARRVAL_P	1374:24:42420:42429	1707932	4	True				
ANR	1708029	Statement	(	1374:34:42430:42430	1707932	5	True				
ANR	1708030	Statement	regex	1374:35:42431:42435	1707932	6	True				
ANR	1708031	Statement	)	1374:40:42436:42436	1707932	7	True				
ANR	1708032	Statement	","	1374:41:42437:42437	1707932	8	True				
ANR	1708033	Statement	regex_entry	1374:43:42439:42449	1707932	9	True				
ANR	1708034	Statement	)	1374:54:42450:42450	1707932	10	True				
ANR	1708035	CompoundStatement		26:3:748:801	1707932	11					
ANR	1708036	IdentifierDeclStatement	zend_string * regex_str = zval_get_string ( regex_entry ) ;	1376:3:42504:42557	1707932	0	True				
ANR	1708037	IdentifierDecl	* regex_str = zval_get_string ( regex_entry )		1707932	0					
ANR	1708038	IdentifierDeclType	zend_string *		1707932	0					
ANR	1708039	Identifier	regex_str		1707932	1					
ANR	1708040	AssignmentExpression	* regex_str = zval_get_string ( regex_entry )		1707932	2		=			
ANR	1708041	Identifier	regex_str		1707932	0					
ANR	1708042	CallExpression	zval_get_string ( regex_entry )		1707932	1					
ANR	1708043	Callee	zval_get_string		1707932	0					
ANR	1708044	Identifier	zval_get_string		1707932	0					
ANR	1708045	ArgumentList	regex_entry		1707932	1					
ANR	1708046	Argument	regex_entry		1707932	0					
ANR	1708047	Identifier	regex_entry		1707932	0					
ANR	1708048	IfStatement	if ( Z_TYPE_P ( replace ) == IS_ARRAY && ! is_callable_replace )		1707932	1					
ANR	1708049	Condition	Z_TYPE_P ( replace ) == IS_ARRAY && ! is_callable_replace	1379:7:42628:42680	1707932	0	True				
ANR	1708050	AndExpression	Z_TYPE_P ( replace ) == IS_ARRAY && ! is_callable_replace		1707932	0		&&			
ANR	1708051	EqualityExpression	Z_TYPE_P ( replace ) == IS_ARRAY		1707932	0		==			
ANR	1708052	CallExpression	Z_TYPE_P ( replace )		1707932	0					
ANR	1708053	Callee	Z_TYPE_P		1707932	0					
ANR	1708054	Identifier	Z_TYPE_P		1707932	0					
ANR	1708055	ArgumentList	replace		1707932	1					
ANR	1708056	Argument	replace		1707932	0					
ANR	1708057	Identifier	replace		1707932	0					
ANR	1708058	Identifier	IS_ARRAY		1707932	1					
ANR	1708059	UnaryOperationExpression	! is_callable_replace		1707932	1					
ANR	1708060	UnaryOperator	!		1707932	0					
ANR	1708061	Identifier	is_callable_replace		1707932	1					
ANR	1708062	CompoundStatement		29:62:927:927	1707932	1					
ANR	1708063	ExpressionStatement	replace_entry = NULL	1381:4:42717:42737	1707932	0	True				
ANR	1708064	AssignmentExpression	replace_entry = NULL		1707932	0		=			
ANR	1708065	Identifier	replace_entry		1707932	0					
ANR	1708066	Identifier	NULL		1707932	1					
ANR	1708067	WhileStatement	while ( replace_idx < Z_ARRVAL_P ( replace ) -> nNumUsed )		1707932	1					
ANR	1708068	Condition	replace_idx < Z_ARRVAL_P ( replace ) -> nNumUsed	1382:11:42750:42792	1707932	0	True				
ANR	1708069	RelationalExpression	replace_idx < Z_ARRVAL_P ( replace ) -> nNumUsed		1707932	0		<			
ANR	1708070	Identifier	replace_idx		1707932	0					
ANR	1708071	PtrMemberAccess	Z_ARRVAL_P ( replace ) -> nNumUsed		1707932	1					
ANR	1708072	CallExpression	Z_ARRVAL_P ( replace )		1707932	0					
ANR	1708073	Callee	Z_ARRVAL_P		1707932	0					
ANR	1708074	Identifier	Z_ARRVAL_P		1707932	0					
ANR	1708075	ArgumentList	replace		1707932	1					
ANR	1708076	Argument	replace		1707932	0					
ANR	1708077	Identifier	replace		1707932	0					
ANR	1708078	Identifier	nNumUsed		1707932	1					
ANR	1708079	CompoundStatement		32:56:1039:1039	1707932	1					
ANR	1708080	IfStatement	if ( Z_TYPE ( Z_ARRVAL_P ( replace ) -> arData [ replace_idx ] . val ) != IS_UNUSED )		1707932	0					
ANR	1708081	Condition	Z_TYPE ( Z_ARRVAL_P ( replace ) -> arData [ replace_idx ] . val ) != IS_UNUSED	1383:9:42806:42870	1707932	0	True				
ANR	1708082	EqualityExpression	Z_TYPE ( Z_ARRVAL_P ( replace ) -> arData [ replace_idx ] . val ) != IS_UNUSED		1707932	0		!=			
ANR	1708083	CallExpression	Z_TYPE ( Z_ARRVAL_P ( replace ) -> arData [ replace_idx ] . val )		1707932	0					
ANR	1708084	Callee	Z_TYPE		1707932	0					
ANR	1708085	Identifier	Z_TYPE		1707932	0					
ANR	1708086	ArgumentList	Z_ARRVAL_P ( replace ) -> arData [ replace_idx ] . val		1707932	1					
ANR	1708087	Argument	Z_ARRVAL_P ( replace ) -> arData [ replace_idx ] . val		1707932	0					
ANR	1708088	MemberAccess	Z_ARRVAL_P ( replace ) -> arData [ replace_idx ] . val		1707932	0					
ANR	1708089	ArrayIndexing	Z_ARRVAL_P ( replace ) -> arData [ replace_idx ]		1707932	0					
ANR	1708090	PtrMemberAccess	Z_ARRVAL_P ( replace ) -> arData		1707932	0					
ANR	1708091	CallExpression	Z_ARRVAL_P ( replace )		1707932	0					
ANR	1708092	Callee	Z_ARRVAL_P		1707932	0					
ANR	1708093	Identifier	Z_ARRVAL_P		1707932	0					
ANR	1708094	ArgumentList	replace		1707932	1					
ANR	1708095	Argument	replace		1707932	0					
ANR	1708096	Identifier	replace		1707932	0					
ANR	1708097	Identifier	arData		1707932	1					
ANR	1708098	Identifier	replace_idx		1707932	1					
ANR	1708099	Identifier	val		1707932	1					
ANR	1708100	Identifier	IS_UNUSED		1707932	1					
ANR	1708101	CompoundStatement		33:76:1117:1117	1707932	1					
ANR	1708102	ExpressionStatement	replace_entry = & Z_ARRVAL_P ( replace ) -> arData [ replace_idx ] . val	1384:6:42881:42942	1707932	0	True				
ANR	1708103	AssignmentExpression	replace_entry = & Z_ARRVAL_P ( replace ) -> arData [ replace_idx ] . val		1707932	0		=			
ANR	1708104	Identifier	replace_entry		1707932	0					
ANR	1708105	UnaryOperationExpression	& Z_ARRVAL_P ( replace ) -> arData [ replace_idx ] . val		1707932	1					
ANR	1708106	UnaryOperator	&		1707932	0					
ANR	1708107	MemberAccess	Z_ARRVAL_P ( replace ) -> arData [ replace_idx ] . val		1707932	1					
ANR	1708108	ArrayIndexing	Z_ARRVAL_P ( replace ) -> arData [ replace_idx ]		1707932	0					
ANR	1708109	PtrMemberAccess	Z_ARRVAL_P ( replace ) -> arData		1707932	0					
ANR	1708110	CallExpression	Z_ARRVAL_P ( replace )		1707932	0					
ANR	1708111	Callee	Z_ARRVAL_P		1707932	0					
ANR	1708112	Identifier	Z_ARRVAL_P		1707932	0					
ANR	1708113	ArgumentList	replace		1707932	1					
ANR	1708114	Argument	replace		1707932	0					
ANR	1708115	Identifier	replace		1707932	0					
ANR	1708116	Identifier	arData		1707932	1					
ANR	1708117	Identifier	replace_idx		1707932	1					
ANR	1708118	Identifier	val		1707932	1					
ANR	1708119	BreakStatement	break ;	1385:6:42950:42955	1707932	1	True				
ANR	1708120	ExpressionStatement	replace_idx ++	1387:5:42969:42982	1707932	1	True				
ANR	1708121	PostIncDecOperationExpression	replace_idx ++		1707932	0					
ANR	1708122	Identifier	replace_idx		1707932	0					
ANR	1708123	IncDec	++		1707932	1					
ANR	1708124	IfStatement	if ( replace_entry != NULL )		1707932	2					
ANR	1708125	Condition	replace_entry != NULL	1389:8:42998:43018	1707932	0	True				
ANR	1708126	EqualityExpression	replace_entry != NULL		1707932	0		!=			
ANR	1708127	Identifier	replace_entry		1707932	0					
ANR	1708128	Identifier	NULL		1707932	1					
ANR	1708129	CompoundStatement		39:31:1265:1265	1707932	1					
ANR	1708130	IfStatement	if ( ! is_callable_replace )		1707932	0					
ANR	1708131	Condition	! is_callable_replace	1390:9:43032:43051	1707932	0	True				
ANR	1708132	UnaryOperationExpression	! is_callable_replace		1707932	0					
ANR	1708133	UnaryOperator	!		1707932	0					
ANR	1708134	Identifier	is_callable_replace		1707932	1					
ANR	1708135	CompoundStatement		40:31:1298:1298	1707932	1					
ANR	1708136	ExpressionStatement	convert_to_string_ex ( replace_entry )	1391:6:43062:43097	1707932	0	True				
ANR	1708137	CallExpression	convert_to_string_ex ( replace_entry )		1707932	0					
ANR	1708138	Callee	convert_to_string_ex		1707932	0					
ANR	1708139	Identifier	convert_to_string_ex		1707932	0					
ANR	1708140	ArgumentList	replace_entry		1707932	1					
ANR	1708141	Argument	replace_entry		1707932	0					
ANR	1708142	Identifier	replace_entry		1707932	0					
ANR	1708143	ExpressionStatement	replace_value = replace_entry	1393:5:43111:43140	1707932	1	True				
ANR	1708144	AssignmentExpression	replace_value = replace_entry		1707932	0		=			
ANR	1708145	Identifier	replace_value		1707932	0					
ANR	1708146	Identifier	replace_entry		1707932	1					
ANR	1708147	ExpressionStatement	replace_idx ++	1394:5:43147:43160	1707932	2	True				
ANR	1708148	PostIncDecOperationExpression	replace_idx ++		1707932	0					
ANR	1708149	Identifier	replace_idx		1707932	0					
ANR	1708150	IncDec	++		1707932	1					
ANR	1708151	ElseStatement	else		1707932	0					
ANR	1708152	CompoundStatement		45:11:1417:1417	1707932	0					
ANR	1708153	ExpressionStatement	replace_value = & empty_replace	1397:5:43249:43279	1707932	0	True				
ANR	1708154	AssignmentExpression	replace_value = & empty_replace		1707932	0		=			
ANR	1708155	Identifier	replace_value		1707932	0					
ANR	1708156	UnaryOperationExpression	& empty_replace		1707932	1					
ANR	1708157	UnaryOperator	&		1707932	0					
ANR	1708158	Identifier	empty_replace		1707932	1					
ANR	1708159	IfStatement	"if ( ( result = php_pcre_replace ( regex_str , subject_str , ZSTR_VAL ( subject_str ) , ( int ) ZSTR_LEN ( subject_str ) , replace_value , is_callable_replace , limit , replace_count ) ) != NULL )"		1707932	2					
ANR	1708160	Condition	"( result = php_pcre_replace ( regex_str , subject_str , ZSTR_VAL ( subject_str ) , ( int ) ZSTR_LEN ( subject_str ) , replace_value , is_callable_replace , limit , replace_count ) ) != NULL"	1403:7:43408:43666	1707932	0	True				
ANR	1708161	EqualityExpression	"( result = php_pcre_replace ( regex_str , subject_str , ZSTR_VAL ( subject_str ) , ( int ) ZSTR_LEN ( subject_str ) , replace_value , is_callable_replace , limit , replace_count ) ) != NULL"		1707932	0		!=			
ANR	1708162	AssignmentExpression	"result = php_pcre_replace ( regex_str , subject_str , ZSTR_VAL ( subject_str ) , ( int ) ZSTR_LEN ( subject_str ) , replace_value , is_callable_replace , limit , replace_count )"		1707932	0		=			
ANR	1708163	Identifier	result		1707932	0					
ANR	1708164	CallExpression	"php_pcre_replace ( regex_str , subject_str , ZSTR_VAL ( subject_str ) , ( int ) ZSTR_LEN ( subject_str ) , replace_value , is_callable_replace , limit , replace_count )"		1707932	1					
ANR	1708165	Callee	php_pcre_replace		1707932	0					
ANR	1708166	Identifier	php_pcre_replace		1707932	0					
ANR	1708167	ArgumentList	regex_str		1707932	1					
ANR	1708168	Argument	regex_str		1707932	0					
ANR	1708169	Identifier	regex_str		1707932	0					
ANR	1708170	Argument	subject_str		1707932	1					
ANR	1708171	Identifier	subject_str		1707932	0					
ANR	1708172	Argument	ZSTR_VAL ( subject_str )		1707932	2					
ANR	1708173	CallExpression	ZSTR_VAL ( subject_str )		1707932	0					
ANR	1708174	Callee	ZSTR_VAL		1707932	0					
ANR	1708175	Identifier	ZSTR_VAL		1707932	0					
ANR	1708176	ArgumentList	subject_str		1707932	1					
ANR	1708177	Argument	subject_str		1707932	0					
ANR	1708178	Identifier	subject_str		1707932	0					
ANR	1708179	Argument	( int ) ZSTR_LEN ( subject_str )		1707932	3					
ANR	1708180	CastExpression	( int ) ZSTR_LEN ( subject_str )		1707932	0					
ANR	1708181	CastTarget	int		1707932	0					
ANR	1708182	CallExpression	ZSTR_LEN ( subject_str )		1707932	1					
ANR	1708183	Callee	ZSTR_LEN		1707932	0					
ANR	1708184	Identifier	ZSTR_LEN		1707932	0					
ANR	1708185	ArgumentList	subject_str		1707932	1					
ANR	1708186	Argument	subject_str		1707932	0					
ANR	1708187	Identifier	subject_str		1707932	0					
ANR	1708188	Argument	replace_value		1707932	4					
ANR	1708189	Identifier	replace_value		1707932	0					
ANR	1708190	Argument	is_callable_replace		1707932	5					
ANR	1708191	Identifier	is_callable_replace		1707932	0					
ANR	1708192	Argument	limit		1707932	6					
ANR	1708193	Identifier	limit		1707932	0					
ANR	1708194	Argument	replace_count		1707932	7					
ANR	1708195	Identifier	replace_count		1707932	0					
ANR	1708196	Identifier	NULL		1707932	1					
ANR	1708197	CompoundStatement		60:38:1913:1913	1707932	1					
ANR	1708198	ExpressionStatement	zend_string_release ( subject_str )	1411:4:43675:43707	1707932	0	True				
ANR	1708199	CallExpression	zend_string_release ( subject_str )		1707932	0					
ANR	1708200	Callee	zend_string_release		1707932	0					
ANR	1708201	Identifier	zend_string_release		1707932	0					
ANR	1708202	ArgumentList	subject_str		1707932	1					
ANR	1708203	Argument	subject_str		1707932	0					
ANR	1708204	Identifier	subject_str		1707932	0					
ANR	1708205	ExpressionStatement	subject_str = result	1412:4:43713:43733	1707932	1	True				
ANR	1708206	AssignmentExpression	subject_str = result		1707932	0		=			
ANR	1708207	Identifier	subject_str		1707932	0					
ANR	1708208	Identifier	result		1707932	1					
ANR	1708209	ElseStatement	else		1707932	0					
ANR	1708210	CompoundStatement		63:10:1989:1989	1707932	0					
ANR	1708211	ExpressionStatement	zend_string_release ( subject_str )	1414:4:43751:43783	1707932	0	True				
ANR	1708212	CallExpression	zend_string_release ( subject_str )		1707932	0					
ANR	1708213	Callee	zend_string_release		1707932	0					
ANR	1708214	Identifier	zend_string_release		1707932	0					
ANR	1708215	ArgumentList	subject_str		1707932	1					
ANR	1708216	Argument	subject_str		1707932	0					
ANR	1708217	Identifier	subject_str		1707932	0					
ANR	1708218	ExpressionStatement	zend_string_release ( regex_str )	1415:4:43789:43819	1707932	1	True				
ANR	1708219	CallExpression	zend_string_release ( regex_str )		1707932	0					
ANR	1708220	Callee	zend_string_release		1707932	0					
ANR	1708221	Identifier	zend_string_release		1707932	0					
ANR	1708222	ArgumentList	regex_str		1707932	1					
ANR	1708223	Argument	regex_str		1707932	0					
ANR	1708224	Identifier	regex_str		1707932	0					
ANR	1708225	ReturnStatement	return NULL ;	1416:4:43825:43836	1707932	2	True				
ANR	1708226	Identifier	NULL		1707932	0					
ANR	1708227	ExpressionStatement	zend_string_release ( regex_str )	1419:3:43847:43877	1707932	3	True				
ANR	1708228	CallExpression	zend_string_release ( regex_str )		1707932	0					
ANR	1708229	Callee	zend_string_release		1707932	0					
ANR	1708230	Identifier	zend_string_release		1707932	0					
ANR	1708231	ArgumentList	regex_str		1707932	1					
ANR	1708232	Argument	regex_str		1707932	0					
ANR	1708233	Identifier	regex_str		1707932	0					
ANR	1708234	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1420:4:43883:43906	1707932	12	True				
ANR	1708235	CallExpression	ZEND_HASH_FOREACH_END ( )		1707932	0					
ANR	1708236	Callee	ZEND_HASH_FOREACH_END		1707932	0					
ANR	1708237	Identifier	ZEND_HASH_FOREACH_END		1707932	0					
ANR	1708238	ArgumentList			1707932	1					
ANR	1708239	ReturnStatement	return subject_str ;	1422:2:43911:43929	1707932	13	True				
ANR	1708240	Identifier	subject_str		1707932	0					
ANR	1708241	ElseStatement	else		1707932	0					
ANR	1708242	CompoundStatement		73:8:2183:2183	1707932	0					
ANR	1708243	ExpressionStatement	"result = php_pcre_replace ( Z_STR_P ( regex ) , subject_str , ZSTR_VAL ( subject_str ) , ( int ) ZSTR_LEN ( subject_str ) , replace , is_callable_replace , limit , replace_count )"	1424:2:43943:44170	1707932	0	True				
ANR	1708244	AssignmentExpression	"result = php_pcre_replace ( Z_STR_P ( regex ) , subject_str , ZSTR_VAL ( subject_str ) , ( int ) ZSTR_LEN ( subject_str ) , replace , is_callable_replace , limit , replace_count )"		1707932	0		=			
ANR	1708245	Identifier	result		1707932	0					
ANR	1708246	CallExpression	"php_pcre_replace ( Z_STR_P ( regex ) , subject_str , ZSTR_VAL ( subject_str ) , ( int ) ZSTR_LEN ( subject_str ) , replace , is_callable_replace , limit , replace_count )"		1707932	1					
ANR	1708247	Callee	php_pcre_replace		1707932	0					
ANR	1708248	Identifier	php_pcre_replace		1707932	0					
ANR	1708249	ArgumentList	Z_STR_P ( regex )		1707932	1					
ANR	1708250	Argument	Z_STR_P ( regex )		1707932	0					
ANR	1708251	CallExpression	Z_STR_P ( regex )		1707932	0					
ANR	1708252	Callee	Z_STR_P		1707932	0					
ANR	1708253	Identifier	Z_STR_P		1707932	0					
ANR	1708254	ArgumentList	regex		1707932	1					
ANR	1708255	Argument	regex		1707932	0					
ANR	1708256	Identifier	regex		1707932	0					
ANR	1708257	Argument	subject_str		1707932	1					
ANR	1708258	Identifier	subject_str		1707932	0					
ANR	1708259	Argument	ZSTR_VAL ( subject_str )		1707932	2					
ANR	1708260	CallExpression	ZSTR_VAL ( subject_str )		1707932	0					
ANR	1708261	Callee	ZSTR_VAL		1707932	0					
ANR	1708262	Identifier	ZSTR_VAL		1707932	0					
ANR	1708263	ArgumentList	subject_str		1707932	1					
ANR	1708264	Argument	subject_str		1707932	0					
ANR	1708265	Identifier	subject_str		1707932	0					
ANR	1708266	Argument	( int ) ZSTR_LEN ( subject_str )		1707932	3					
ANR	1708267	CastExpression	( int ) ZSTR_LEN ( subject_str )		1707932	0					
ANR	1708268	CastTarget	int		1707932	0					
ANR	1708269	CallExpression	ZSTR_LEN ( subject_str )		1707932	1					
ANR	1708270	Callee	ZSTR_LEN		1707932	0					
ANR	1708271	Identifier	ZSTR_LEN		1707932	0					
ANR	1708272	ArgumentList	subject_str		1707932	1					
ANR	1708273	Argument	subject_str		1707932	0					
ANR	1708274	Identifier	subject_str		1707932	0					
ANR	1708275	Argument	replace		1707932	4					
ANR	1708276	Identifier	replace		1707932	0					
ANR	1708277	Argument	is_callable_replace		1707932	5					
ANR	1708278	Identifier	is_callable_replace		1707932	0					
ANR	1708279	Argument	limit		1707932	6					
ANR	1708280	Identifier	limit		1707932	0					
ANR	1708281	Argument	replace_count		1707932	7					
ANR	1708282	Identifier	replace_count		1707932	0					
ANR	1708283	ExpressionStatement	zend_string_release ( subject_str )	1432:2:44174:44206	1707932	1	True				
ANR	1708284	CallExpression	zend_string_release ( subject_str )		1707932	0					
ANR	1708285	Callee	zend_string_release		1707932	0					
ANR	1708286	Identifier	zend_string_release		1707932	0					
ANR	1708287	ArgumentList	subject_str		1707932	1					
ANR	1708288	Argument	subject_str		1707932	0					
ANR	1708289	Identifier	subject_str		1707932	0					
ANR	1708290	ReturnStatement	return result ;	1433:2:44210:44223	1707932	2	True				
ANR	1708291	Identifier	result		1707932	0					
ANR	1708292	ReturnType	static zend_string *		1707932	1					
ANR	1708293	Identifier	php_replace_in_subject		1707932	2					
ANR	1708294	ParameterList	"zval * regex , zval * replace , zval * subject , int limit , int is_callable_replace , int * replace_count"		1707932	3					
ANR	1708295	Parameter	zval * regex	1350:43:41656:41666	1707932	0	True				
ANR	1708296	ParameterType	zval *		1707932	0					
ANR	1708297	Identifier	regex		1707932	1					
ANR	1708298	Parameter	zval * replace	1350:56:41669:41681	1707932	1	True				
ANR	1708299	ParameterType	zval *		1707932	0					
ANR	1708300	Identifier	replace		1707932	1					
ANR	1708301	Parameter	zval * subject	1350:71:41684:41696	1707932	2	True				
ANR	1708302	ParameterType	zval *		1707932	0					
ANR	1708303	Identifier	subject		1707932	1					
ANR	1708304	Parameter	int limit	1350:86:41699:41707	1707932	3	True				
ANR	1708305	ParameterType	int		1707932	0					
ANR	1708306	Identifier	limit		1707932	1					
ANR	1708307	Parameter	int is_callable_replace	1350:97:41710:41732	1707932	4	True				
ANR	1708308	ParameterType	int		1707932	0					
ANR	1708309	Identifier	is_callable_replace		1707932	1					
ANR	1708310	Parameter	int * replace_count	1350:122:41735:41752	1707932	5	True				
ANR	1708311	ParameterType	int *		1707932	0					
ANR	1708312	Identifier	replace_count		1707932	1					
ANR	1708313	CFGEntryNode	ENTRY		1707932		True				
ANR	1708314	CFGExitNode	EXIT		1707932		True				
ANR	1708315	Symbol	ZEND_SIZE_T_INT_OVFL		1707932						
ANR	1708316	Symbol	regex_entry		1707932						
ANR	1708317	Symbol	subject		1707932						
ANR	1708318	Symbol	php_pcre_replace		1707932						
ANR	1708319	Symbol	replace		1707932						
ANR	1708320	Symbol	* Z_ARRVAL_P		1707932						
ANR	1708321	Symbol	Z_TYPE		1707932						
ANR	1708322	Symbol	* * Z_ARRVAL_P		1707932						
ANR	1708323	Symbol	empty_replace		1707932						
ANR	1708324	Symbol	subject_str		1707932						
ANR	1708325	Symbol	Z_ARRVAL_P ( replace ) -> arData [ replace_idx ] . val		1707932						
ANR	1708326	Symbol	replace_count		1707932						
ANR	1708327	Symbol	result		1707932						
ANR	1708328	Symbol	E_WARNING		1707932						
ANR	1708329	Symbol	& empty_replace		1707932						
ANR	1708330	Symbol	IS_ARRAY		1707932						
ANR	1708331	Symbol	Z_ARRVAL_P ( replace ) -> nNumUsed		1707932						
ANR	1708332	Symbol	Z_ARRVAL_P ( replace ) -> arData		1707932						
ANR	1708333	Symbol	replace_entry		1707932						
ANR	1708334	Symbol	limit		1707932						
ANR	1708335	Symbol	is_callable_replace		1707932						
ANR	1708336	Symbol	replace_idx		1707932						
ANR	1708337	Symbol	Z_ARRVAL_P		1707932						
ANR	1708338	Symbol	* replace_idx		1707932						
ANR	1708339	Symbol	NULL		1707932						
ANR	1708340	Symbol	zval_get_string		1707932						
ANR	1708341	Symbol	regex_str		1707932						
ANR	1708342	Symbol	Z_TYPE_P		1707932						
ANR	1708343	Symbol	ZSTR_VAL		1707932						
ANR	1708344	Symbol	regex		1707932						
ANR	1708345	Symbol	& Z_ARRVAL_P ( replace ) -> arData [ replace_idx ] . val		1707932						
ANR	1708346	Symbol	ZSTR_LEN		1707932						
ANR	1708347	Symbol	* Z_ARRVAL_P ( replace ) -> arData		1707932						
ANR	1708348	Symbol	Z_STR_P		1707932						
ANR	1708349	Symbol	replace_value		1707932						
ANR	1708350	Symbol	IS_UNUSED		1707932						
ANR	1708351	Function	preg_replace_impl	1440:0:44270:46078							
ANR	1708352	FunctionDef	"preg_replace_impl (zval * return_value , zval * regex , zval * replace , zval * subject , zend_long limit_val , int is_callable_replace , int is_filter)"		1708351	0					
ANR	1708353	CompoundStatement		1441:0:44423:46078	1708351	0					
ANR	1708354	IdentifierDeclStatement	zval * subject_entry ;	1442:1:44426:44446	1708351	0	True				
ANR	1708355	IdentifierDecl	* subject_entry		1708351	0					
ANR	1708356	IdentifierDeclType	zval *		1708351	0					
ANR	1708357	Identifier	subject_entry		1708351	1					
ANR	1708358	IdentifierDeclStatement	zend_string * result ;	1443:1:44449:44468	1708351	1	True				
ANR	1708359	IdentifierDecl	* result		1708351	0					
ANR	1708360	IdentifierDeclType	zend_string *		1708351	0					
ANR	1708361	Identifier	result		1708351	1					
ANR	1708362	IdentifierDeclStatement	zend_string * string_key ;	1444:1:44471:44494	1708351	2	True				
ANR	1708363	IdentifierDecl	* string_key		1708351	0					
ANR	1708364	IdentifierDeclType	zend_string *		1708351	0					
ANR	1708365	Identifier	string_key		1708351	1					
ANR	1708366	IdentifierDeclStatement	zend_ulong num_key ;	1445:1:44497:44516	1708351	3	True				
ANR	1708367	IdentifierDecl	num_key		1708351	0					
ANR	1708368	IdentifierDeclType	zend_ulong		1708351	0					
ANR	1708369	Identifier	num_key		1708351	1					
ANR	1708370	IdentifierDeclStatement	"int replace_count = 0 , old_replace_count ;"	1446:1:44519:44562	1708351	4	True				
ANR	1708371	IdentifierDecl	replace_count = 0		1708351	0					
ANR	1708372	IdentifierDeclType	int		1708351	0					
ANR	1708373	Identifier	replace_count		1708351	1					
ANR	1708374	AssignmentExpression	replace_count = 0		1708351	2		=			
ANR	1708375	Identifier	replace_count		1708351	0					
ANR	1708376	PrimaryExpression	0		1708351	1					
ANR	1708377	IdentifierDecl	old_replace_count		1708351	1					
ANR	1708378	IdentifierDeclType	int		1708351	0					
ANR	1708379	Identifier	old_replace_count		1708351	1					
ANR	1708380	IfStatement	if ( Z_TYPE_P ( replace ) != IS_ARRAY && ( Z_TYPE_P ( replace ) != IS_OBJECT || ! is_callable_replace ) )		1708351	5					
ANR	1708381	Condition	Z_TYPE_P ( replace ) != IS_ARRAY && ( Z_TYPE_P ( replace ) != IS_OBJECT || ! is_callable_replace )	1448:5:44570:44658	1708351	0	True				
ANR	1708382	AndExpression	Z_TYPE_P ( replace ) != IS_ARRAY && ( Z_TYPE_P ( replace ) != IS_OBJECT || ! is_callable_replace )		1708351	0		&&			
ANR	1708383	EqualityExpression	Z_TYPE_P ( replace ) != IS_ARRAY		1708351	0		!=			
ANR	1708384	CallExpression	Z_TYPE_P ( replace )		1708351	0					
ANR	1708385	Callee	Z_TYPE_P		1708351	0					
ANR	1708386	Identifier	Z_TYPE_P		1708351	0					
ANR	1708387	ArgumentList	replace		1708351	1					
ANR	1708388	Argument	replace		1708351	0					
ANR	1708389	Identifier	replace		1708351	0					
ANR	1708390	Identifier	IS_ARRAY		1708351	1					
ANR	1708391	OrExpression	Z_TYPE_P ( replace ) != IS_OBJECT || ! is_callable_replace		1708351	1		||			
ANR	1708392	EqualityExpression	Z_TYPE_P ( replace ) != IS_OBJECT		1708351	0		!=			
ANR	1708393	CallExpression	Z_TYPE_P ( replace )		1708351	0					
ANR	1708394	Callee	Z_TYPE_P		1708351	0					
ANR	1708395	Identifier	Z_TYPE_P		1708351	0					
ANR	1708396	ArgumentList	replace		1708351	1					
ANR	1708397	Argument	replace		1708351	0					
ANR	1708398	Identifier	replace		1708351	0					
ANR	1708399	Identifier	IS_OBJECT		1708351	1					
ANR	1708400	UnaryOperationExpression	! is_callable_replace		1708351	1					
ANR	1708401	UnaryOperator	!		1708351	0					
ANR	1708402	Identifier	is_callable_replace		1708351	1					
ANR	1708403	CompoundStatement		8:96:237:237	1708351	1					
ANR	1708404	ExpressionStatement	convert_to_string_ex ( replace )	1449:2:44665:44694	1708351	0	True				
ANR	1708405	CallExpression	convert_to_string_ex ( replace )		1708351	0					
ANR	1708406	Callee	convert_to_string_ex		1708351	0					
ANR	1708407	Identifier	convert_to_string_ex		1708351	0					
ANR	1708408	ArgumentList	replace		1708351	1					
ANR	1708409	Argument	replace		1708351	0					
ANR	1708410	Identifier	replace		1708351	0					
ANR	1708411	IfStatement	if ( Z_TYPE_P ( regex ) != IS_ARRAY )		1708351	6					
ANR	1708412	Condition	Z_TYPE_P ( regex ) != IS_ARRAY	1452:5:44705:44731	1708351	0	True				
ANR	1708413	EqualityExpression	Z_TYPE_P ( regex ) != IS_ARRAY		1708351	0		!=			
ANR	1708414	CallExpression	Z_TYPE_P ( regex )		1708351	0					
ANR	1708415	Callee	Z_TYPE_P		1708351	0					
ANR	1708416	Identifier	Z_TYPE_P		1708351	0					
ANR	1708417	ArgumentList	regex		1708351	1					
ANR	1708418	Argument	regex		1708351	0					
ANR	1708419	Identifier	regex		1708351	0					
ANR	1708420	Identifier	IS_ARRAY		1708351	1					
ANR	1708421	CompoundStatement		12:34:310:310	1708351	1					
ANR	1708422	ExpressionStatement	convert_to_string_ex ( regex )	1453:2:44738:44765	1708351	0	True				
ANR	1708423	CallExpression	convert_to_string_ex ( regex )		1708351	0					
ANR	1708424	Callee	convert_to_string_ex		1708351	0					
ANR	1708425	Identifier	convert_to_string_ex		1708351	0					
ANR	1708426	ArgumentList	regex		1708351	1					
ANR	1708427	Argument	regex		1708351	0					
ANR	1708428	Identifier	regex		1708351	0					
ANR	1708429	IfStatement	if ( Z_TYPE_P ( subject ) == IS_ARRAY )		1708351	7					
ANR	1708430	Condition	Z_TYPE_P ( subject ) == IS_ARRAY	1457:5:44806:44834	1708351	0	True				
ANR	1708431	EqualityExpression	Z_TYPE_P ( subject ) == IS_ARRAY		1708351	0		==			
ANR	1708432	CallExpression	Z_TYPE_P ( subject )		1708351	0					
ANR	1708433	Callee	Z_TYPE_P		1708351	0					
ANR	1708434	Identifier	Z_TYPE_P		1708351	0					
ANR	1708435	ArgumentList	subject		1708351	1					
ANR	1708436	Argument	subject		1708351	0					
ANR	1708437	Identifier	subject		1708351	0					
ANR	1708438	Identifier	IS_ARRAY		1708351	1					
ANR	1708439	CompoundStatement		17:36:413:413	1708351	1					
ANR	1708440	ExpressionStatement	"array_init_size ( return_value , zend_hash_num_elements ( Z_ARRVAL_P ( subject ) ) )"	1458:2:44841:44915	1708351	0	True				
ANR	1708441	CallExpression	"array_init_size ( return_value , zend_hash_num_elements ( Z_ARRVAL_P ( subject ) ) )"		1708351	0					
ANR	1708442	Callee	array_init_size		1708351	0					
ANR	1708443	Identifier	array_init_size		1708351	0					
ANR	1708444	ArgumentList	return_value		1708351	1					
ANR	1708445	Argument	return_value		1708351	0					
ANR	1708446	Identifier	return_value		1708351	0					
ANR	1708447	Argument	zend_hash_num_elements ( Z_ARRVAL_P ( subject ) )		1708351	1					
ANR	1708448	CallExpression	zend_hash_num_elements ( Z_ARRVAL_P ( subject ) )		1708351	0					
ANR	1708449	Callee	zend_hash_num_elements		1708351	0					
ANR	1708450	Identifier	zend_hash_num_elements		1708351	0					
ANR	1708451	ArgumentList	Z_ARRVAL_P ( subject )		1708351	1					
ANR	1708452	Argument	Z_ARRVAL_P ( subject )		1708351	0					
ANR	1708453	CallExpression	Z_ARRVAL_P ( subject )		1708351	0					
ANR	1708454	Callee	Z_ARRVAL_P		1708351	0					
ANR	1708455	Identifier	Z_ARRVAL_P		1708351	0					
ANR	1708456	ArgumentList	subject		1708351	1					
ANR	1708457	Argument	subject		1708351	0					
ANR	1708458	Identifier	subject		1708351	0					
ANR	1708459	Statement	ZEND_HASH_FOREACH_KEY_VAL	1462:2:45050:45074	1708351	1	True				
ANR	1708460	Statement	(	1462:27:45075:45075	1708351	2	True				
ANR	1708461	Statement	Z_ARRVAL_P	1462:28:45076:45085	1708351	3	True				
ANR	1708462	Statement	(	1462:38:45086:45086	1708351	4	True				
ANR	1708463	Statement	subject	1462:39:45087:45093	1708351	5	True				
ANR	1708464	Statement	)	1462:46:45094:45094	1708351	6	True				
ANR	1708465	Statement	","	1462:47:45095:45095	1708351	7	True				
ANR	1708466	Statement	num_key	1462:49:45097:45103	1708351	8	True				
ANR	1708467	Statement	","	1462:56:45104:45104	1708351	9	True				
ANR	1708468	Statement	string_key	1462:58:45106:45115	1708351	10	True				
ANR	1708469	Statement	","	1462:68:45116:45116	1708351	11	True				
ANR	1708470	Statement	subject_entry	1462:70:45118:45130	1708351	12	True				
ANR	1708471	Statement	)	1462:83:45131:45131	1708351	13	True				
ANR	1708472	CompoundStatement		22:85:709:709	1708351	14					
ANR	1708473	ExpressionStatement	old_replace_count = replace_count	1463:3:45138:45171	1708351	0	True				
ANR	1708474	AssignmentExpression	old_replace_count = replace_count		1708351	0		=			
ANR	1708475	Identifier	old_replace_count		1708351	0					
ANR	1708476	Identifier	replace_count		1708351	1					
ANR	1708477	IfStatement	"if ( ( result = php_replace_in_subject ( regex , replace , subject_entry , limit_val , is_callable_replace , & replace_count ) ) != NULL )"		1708351	1					
ANR	1708478	Condition	"( result = php_replace_in_subject ( regex , replace , subject_entry , limit_val , is_callable_replace , & replace_count ) ) != NULL"	1464:7:45180:45299	1708351	0	True				
ANR	1708479	EqualityExpression	"( result = php_replace_in_subject ( regex , replace , subject_entry , limit_val , is_callable_replace , & replace_count ) ) != NULL"		1708351	0		!=			
ANR	1708480	AssignmentExpression	"result = php_replace_in_subject ( regex , replace , subject_entry , limit_val , is_callable_replace , & replace_count )"		1708351	0		=			
ANR	1708481	Identifier	result		1708351	0					
ANR	1708482	CallExpression	"php_replace_in_subject ( regex , replace , subject_entry , limit_val , is_callable_replace , & replace_count )"		1708351	1					
ANR	1708483	Callee	php_replace_in_subject		1708351	0					
ANR	1708484	Identifier	php_replace_in_subject		1708351	0					
ANR	1708485	ArgumentList	regex		1708351	1					
ANR	1708486	Argument	regex		1708351	0					
ANR	1708487	Identifier	regex		1708351	0					
ANR	1708488	Argument	replace		1708351	1					
ANR	1708489	Identifier	replace		1708351	0					
ANR	1708490	Argument	subject_entry		1708351	2					
ANR	1708491	Identifier	subject_entry		1708351	0					
ANR	1708492	Argument	limit_val		1708351	3					
ANR	1708493	Identifier	limit_val		1708351	0					
ANR	1708494	Argument	is_callable_replace		1708351	4					
ANR	1708495	Identifier	is_callable_replace		1708351	0					
ANR	1708496	Argument	& replace_count		1708351	5					
ANR	1708497	UnaryOperationExpression	& replace_count		1708351	0					
ANR	1708498	UnaryOperator	&		1708351	0					
ANR	1708499	Identifier	replace_count		1708351	1					
ANR	1708500	Identifier	NULL		1708351	1					
ANR	1708501	CompoundStatement		24:129:878:878	1708351	1					
ANR	1708502	IfStatement	if ( ! is_filter || replace_count > old_replace_count )		1708351	0					
ANR	1708503	Condition	! is_filter || replace_count > old_replace_count	1465:8:45312:45358	1708351	0	True				
ANR	1708504	OrExpression	! is_filter || replace_count > old_replace_count		1708351	0		||			
ANR	1708505	UnaryOperationExpression	! is_filter		1708351	0					
ANR	1708506	UnaryOperator	!		1708351	0					
ANR	1708507	Identifier	is_filter		1708351	1					
ANR	1708508	RelationalExpression	replace_count > old_replace_count		1708351	1		>			
ANR	1708509	Identifier	replace_count		1708351	0					
ANR	1708510	Identifier	old_replace_count		1708351	1					
ANR	1708511	CompoundStatement		27:5:975:982	1708351	1					
ANR	1708512	IdentifierDeclStatement	zval zv ;	1467:5:45399:45406	1708351	0	True				
ANR	1708513	IdentifierDecl	zv		1708351	0					
ANR	1708514	IdentifierDeclType	zval		1708351	0					
ANR	1708515	Identifier	zv		1708351	1					
ANR	1708516	ExpressionStatement	"ZVAL_STR ( & zv , result )"	1469:5:45414:45435	1708351	1	True				
ANR	1708517	CallExpression	"ZVAL_STR ( & zv , result )"		1708351	0					
ANR	1708518	Callee	ZVAL_STR		1708351	0					
ANR	1708519	Identifier	ZVAL_STR		1708351	0					
ANR	1708520	ArgumentList	& zv		1708351	1					
ANR	1708521	Argument	& zv		1708351	0					
ANR	1708522	UnaryOperationExpression	& zv		1708351	0					
ANR	1708523	UnaryOperator	&		1708351	0					
ANR	1708524	Identifier	zv		1708351	1					
ANR	1708525	Argument	result		1708351	1					
ANR	1708526	Identifier	result		1708351	0					
ANR	1708527	IfStatement	if ( string_key )		1708351	2					
ANR	1708528	Condition	string_key	1470:9:45446:45455	1708351	0	True				
ANR	1708529	Identifier	string_key		1708351	0					
ANR	1708530	CompoundStatement		30:21:1034:1034	1708351	1					
ANR	1708531	ExpressionStatement	"zend_hash_add_new ( Z_ARRVAL_P ( return_value ) , string_key , & zv )"	1471:6:45466:45526	1708351	0	True				
ANR	1708532	CallExpression	"zend_hash_add_new ( Z_ARRVAL_P ( return_value ) , string_key , & zv )"		1708351	0					
ANR	1708533	Callee	zend_hash_add_new		1708351	0					
ANR	1708534	Identifier	zend_hash_add_new		1708351	0					
ANR	1708535	ArgumentList	Z_ARRVAL_P ( return_value )		1708351	1					
ANR	1708536	Argument	Z_ARRVAL_P ( return_value )		1708351	0					
ANR	1708537	CallExpression	Z_ARRVAL_P ( return_value )		1708351	0					
ANR	1708538	Callee	Z_ARRVAL_P		1708351	0					
ANR	1708539	Identifier	Z_ARRVAL_P		1708351	0					
ANR	1708540	ArgumentList	return_value		1708351	1					
ANR	1708541	Argument	return_value		1708351	0					
ANR	1708542	Identifier	return_value		1708351	0					
ANR	1708543	Argument	string_key		1708351	1					
ANR	1708544	Identifier	string_key		1708351	0					
ANR	1708545	Argument	& zv		1708351	2					
ANR	1708546	UnaryOperationExpression	& zv		1708351	0					
ANR	1708547	UnaryOperator	&		1708351	0					
ANR	1708548	Identifier	zv		1708351	1					
ANR	1708549	ElseStatement	else		1708351	0					
ANR	1708550	CompoundStatement		32:12:1116:1116	1708351	0					
ANR	1708551	ExpressionStatement	"zend_hash_index_add_new ( Z_ARRVAL_P ( return_value ) , num_key , & zv )"	1473:6:45548:45611	1708351	0	True				
ANR	1708552	CallExpression	"zend_hash_index_add_new ( Z_ARRVAL_P ( return_value ) , num_key , & zv )"		1708351	0					
ANR	1708553	Callee	zend_hash_index_add_new		1708351	0					
ANR	1708554	Identifier	zend_hash_index_add_new		1708351	0					
ANR	1708555	ArgumentList	Z_ARRVAL_P ( return_value )		1708351	1					
ANR	1708556	Argument	Z_ARRVAL_P ( return_value )		1708351	0					
ANR	1708557	CallExpression	Z_ARRVAL_P ( return_value )		1708351	0					
ANR	1708558	Callee	Z_ARRVAL_P		1708351	0					
ANR	1708559	Identifier	Z_ARRVAL_P		1708351	0					
ANR	1708560	ArgumentList	return_value		1708351	1					
ANR	1708561	Argument	return_value		1708351	0					
ANR	1708562	Identifier	return_value		1708351	0					
ANR	1708563	Argument	num_key		1708351	1					
ANR	1708564	Identifier	num_key		1708351	0					
ANR	1708565	Argument	& zv		1708351	2					
ANR	1708566	UnaryOperationExpression	& zv		1708351	0					
ANR	1708567	UnaryOperator	&		1708351	0					
ANR	1708568	Identifier	zv		1708351	1					
ANR	1708569	ElseStatement	else		1708351	0					
ANR	1708570	CompoundStatement		35:11:1207:1207	1708351	0					
ANR	1708571	ExpressionStatement	zend_string_release ( result )	1476:5:45638:45665	1708351	0	True				
ANR	1708572	CallExpression	zend_string_release ( result )		1708351	0					
ANR	1708573	Callee	zend_string_release		1708351	0					
ANR	1708574	Identifier	zend_string_release		1708351	0					
ANR	1708575	ArgumentList	result		1708351	1					
ANR	1708576	Argument	result		1708351	0					
ANR	1708577	Identifier	result		1708351	0					
ANR	1708578	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1479:4:45682:45705	1708351	15	True				
ANR	1708579	CallExpression	ZEND_HASH_FOREACH_END ( )		1708351	0					
ANR	1708580	Callee	ZEND_HASH_FOREACH_END		1708351	0					
ANR	1708581	Identifier	ZEND_HASH_FOREACH_END		1708351	0					
ANR	1708582	ArgumentList			1708351	1					
ANR	1708583	ElseStatement	else		1708351	0					
ANR	1708584	CompoundStatement		40:8:1291:1291	1708351	0					
ANR	1708585	ExpressionStatement	old_replace_count = replace_count	1482:2:45755:45788	1708351	0	True				
ANR	1708586	AssignmentExpression	old_replace_count = replace_count		1708351	0		=			
ANR	1708587	Identifier	old_replace_count		1708351	0					
ANR	1708588	Identifier	replace_count		1708351	1					
ANR	1708589	IfStatement	"if ( ( result = php_replace_in_subject ( regex , replace , subject , limit_val , is_callable_replace , & replace_count ) ) != NULL )"		1708351	1					
ANR	1708590	Condition	"( result = php_replace_in_subject ( regex , replace , subject , limit_val , is_callable_replace , & replace_count ) ) != NULL"	1483:6:45796:45909	1708351	0	True				
ANR	1708591	EqualityExpression	"( result = php_replace_in_subject ( regex , replace , subject , limit_val , is_callable_replace , & replace_count ) ) != NULL"		1708351	0		!=			
ANR	1708592	AssignmentExpression	"result = php_replace_in_subject ( regex , replace , subject , limit_val , is_callable_replace , & replace_count )"		1708351	0		=			
ANR	1708593	Identifier	result		1708351	0					
ANR	1708594	CallExpression	"php_replace_in_subject ( regex , replace , subject , limit_val , is_callable_replace , & replace_count )"		1708351	1					
ANR	1708595	Callee	php_replace_in_subject		1708351	0					
ANR	1708596	Identifier	php_replace_in_subject		1708351	0					
ANR	1708597	ArgumentList	regex		1708351	1					
ANR	1708598	Argument	regex		1708351	0					
ANR	1708599	Identifier	regex		1708351	0					
ANR	1708600	Argument	replace		1708351	1					
ANR	1708601	Identifier	replace		1708351	0					
ANR	1708602	Argument	subject		1708351	2					
ANR	1708603	Identifier	subject		1708351	0					
ANR	1708604	Argument	limit_val		1708351	3					
ANR	1708605	Identifier	limit_val		1708351	0					
ANR	1708606	Argument	is_callable_replace		1708351	4					
ANR	1708607	Identifier	is_callable_replace		1708351	0					
ANR	1708608	Argument	& replace_count		1708351	5					
ANR	1708609	UnaryOperationExpression	& replace_count		1708351	0					
ANR	1708610	UnaryOperator	&		1708351	0					
ANR	1708611	Identifier	replace_count		1708351	1					
ANR	1708612	Identifier	NULL		1708351	1					
ANR	1708613	CompoundStatement		43:122:1488:1488	1708351	1					
ANR	1708614	IfStatement	if ( ! is_filter || replace_count > old_replace_count )		1708351	0					
ANR	1708615	Condition	! is_filter || replace_count > old_replace_count	1484:7:45921:45967	1708351	0	True				
ANR	1708616	OrExpression	! is_filter || replace_count > old_replace_count		1708351	0		||			
ANR	1708617	UnaryOperationExpression	! is_filter		1708351	0					
ANR	1708618	UnaryOperator	!		1708351	0					
ANR	1708619	Identifier	is_filter		1708351	1					
ANR	1708620	RelationalExpression	replace_count > old_replace_count		1708351	1		>			
ANR	1708621	Identifier	replace_count		1708351	0					
ANR	1708622	Identifier	old_replace_count		1708351	1					
ANR	1708623	CompoundStatement		44:56:1546:1546	1708351	1					
ANR	1708624	ExpressionStatement	RETVAL_STR ( result )	1485:4:45976:45994	1708351	0	True				
ANR	1708625	CallExpression	RETVAL_STR ( result )		1708351	0					
ANR	1708626	Callee	RETVAL_STR		1708351	0					
ANR	1708627	Identifier	RETVAL_STR		1708351	0					
ANR	1708628	ArgumentList	result		1708351	1					
ANR	1708629	Argument	result		1708351	0					
ANR	1708630	Identifier	result		1708351	0					
ANR	1708631	ElseStatement	else		1708351	0					
ANR	1708632	CompoundStatement		46:10:1582:1582	1708351	0					
ANR	1708633	ExpressionStatement	zend_string_release ( result )	1487:4:46012:46039	1708351	0	True				
ANR	1708634	CallExpression	zend_string_release ( result )		1708351	0					
ANR	1708635	Callee	zend_string_release		1708351	0					
ANR	1708636	Identifier	zend_string_release		1708351	0					
ANR	1708637	ArgumentList	result		1708351	1					
ANR	1708638	Argument	result		1708351	0					
ANR	1708639	Identifier	result		1708351	0					
ANR	1708640	ReturnStatement	return replace_count ;	1492:1:46056:46076	1708351	8	True				
ANR	1708641	Identifier	replace_count		1708351	0					
ANR	1708642	ReturnType	static int		1708351	1					
ANR	1708643	Identifier	preg_replace_impl		1708351	2					
ANR	1708644	ParameterList	"zval * return_value , zval * regex , zval * replace , zval * subject , zend_long limit_val , int is_callable_replace , int is_filter"		1708351	3					
ANR	1708645	Parameter	zval * return_value	1440:29:44299:44316	1708351	0	True				
ANR	1708646	ParameterType	zval *		1708351	0					
ANR	1708647	Identifier	return_value		1708351	1					
ANR	1708648	Parameter	zval * regex	1440:49:44319:44329	1708351	1	True				
ANR	1708649	ParameterType	zval *		1708351	0					
ANR	1708650	Identifier	regex		1708351	1					
ANR	1708651	Parameter	zval * replace	1440:62:44332:44344	1708351	2	True				
ANR	1708652	ParameterType	zval *		1708351	0					
ANR	1708653	Identifier	replace		1708351	1					
ANR	1708654	Parameter	zval * subject	1440:77:44347:44359	1708351	3	True				
ANR	1708655	ParameterType	zval *		1708351	0					
ANR	1708656	Identifier	subject		1708351	1					
ANR	1708657	Parameter	zend_long limit_val	1440:92:44362:44380	1708351	4	True				
ANR	1708658	ParameterType	zend_long		1708351	0					
ANR	1708659	Identifier	limit_val		1708351	1					
ANR	1708660	Parameter	int is_callable_replace	1440:113:44383:44405	1708351	5	True				
ANR	1708661	ParameterType	int		1708351	0					
ANR	1708662	Identifier	is_callable_replace		1708351	1					
ANR	1708663	Parameter	int is_filter	1440:138:44408:44420	1708351	6	True				
ANR	1708664	ParameterType	int		1708351	0					
ANR	1708665	Identifier	is_filter		1708351	1					
ANR	1708666	CFGEntryNode	ENTRY		1708351		True				
ANR	1708667	CFGExitNode	EXIT		1708351		True				
ANR	1708668	Symbol	limit_val		1708351						
ANR	1708669	Symbol	return_value		1708351						
ANR	1708670	Symbol	NULL		1708351						
ANR	1708671	Symbol	old_replace_count		1708351						
ANR	1708672	Symbol	zend_hash_num_elements		1708351						
ANR	1708673	Symbol	subject		1708351						
ANR	1708674	Symbol	num_key		1708351						
ANR	1708675	Symbol	& zv		1708351						
ANR	1708676	Symbol	replace		1708351						
ANR	1708677	Symbol	Z_TYPE_P		1708351						
ANR	1708678	Symbol	result		1708351						
ANR	1708679	Symbol	string_key		1708351						
ANR	1708680	Symbol	replace_count		1708351						
ANR	1708681	Symbol	php_replace_in_subject		1708351						
ANR	1708682	Symbol	regex		1708351						
ANR	1708683	Symbol	IS_ARRAY		1708351						
ANR	1708684	Symbol	& replace_count		1708351						
ANR	1708685	Symbol	subject_entry		1708351						
ANR	1708686	Symbol	is_callable_replace		1708351						
ANR	1708687	Symbol	is_filter		1708351						
ANR	1708688	Symbol	IS_OBJECT		1708351						
ANR	1708689	Symbol	Z_ARRVAL_P		1708351						
ANR	1708690	Symbol	zv		1708351						
ANR	1708691	DeclStmt									
ANR	1708692	Decl							zval	zval *	regex
ANR	1708693	Decl							zval	zval *	replace
ANR	1708694	Decl							zval	zval *	subject
ANR	1708695	Decl							zval	zval *	zcount
ANR	1708696	DeclStmt									
ANR	1708697	Decl							zend_long	zend_long	limit
ANR	1708698	DeclStmt									
ANR	1708699	Decl							int	int	replace_count
ANR	1708700	DeclStmt									
ANR	1708701	Decl							zval	zval *	regex
ANR	1708702	Decl							zval	zval *	replace
ANR	1708703	Decl							zval	zval *	subject
ANR	1708704	Decl							zval	zval *	zcount
ANR	1708705	DeclStmt									
ANR	1708706	Decl							zend_long	zend_long	limit
ANR	1708707	DeclStmt									
ANR	1708708	Decl							zend_string	zend_string *	callback_name
ANR	1708709	DeclStmt									
ANR	1708710	Decl							int	int	replace_count
ANR	1708711	DeclStmt									
ANR	1708712	Decl							zval	zval	regex
ANR	1708713	Decl							zval	zval	zv
ANR	1708714	Decl							zval	zval *	replace
ANR	1708715	Decl							zval	zval *	subject
ANR	1708716	Decl							zval	zval *	pattern
ANR	1708717	Decl							zval	zval *	zcount
ANR	1708718	DeclStmt									
ANR	1708719	Decl							zend_long	zend_long	limit
ANR	1708720	DeclStmt									
ANR	1708721	Decl							zend_string	zend_string *	str_idx
ANR	1708722	DeclStmt									
ANR	1708723	Decl							zend_string	zend_string *	callback_name
ANR	1708724	DeclStmt									
ANR	1708725	Decl							int	int	replace_count
ANR	1708726	DeclStmt									
ANR	1708727	Decl							zval	zval *	regex
ANR	1708728	Decl							zval	zval *	replace
ANR	1708729	Decl							zval	zval *	subject
ANR	1708730	Decl							zval	zval *	zcount
ANR	1708731	DeclStmt									
ANR	1708732	Decl							zend_long	zend_long	limit
ANR	1708733	DeclStmt									
ANR	1708734	Decl							int	int	replace_count
ANR	1708735	DeclStmt									
ANR	1708736	Decl							zend_string	zend_string *	regex
ANR	1708737	DeclStmt									
ANR	1708738	Decl							zend_string	zend_string *	subject
ANR	1708739	DeclStmt									
ANR	1708740	Decl							zend_long	zend_long	limit_val
ANR	1708741	DeclStmt									
ANR	1708742	Decl							zend_long	zend_long	flags
ANR	1708743	DeclStmt									
ANR	1708744	Decl							pcre_cache_entry	pcre_cache_entry *	pce
ANR	1708745	Function	php_pcre_split_impl	1728:0:52884:58934							
ANR	1708746	FunctionDef	"php_pcre_split_impl (pcre_cache_entry * pce , char * subject , int subject_len , zval * return_value , zend_long limit_val , zend_long flags)"		1708745	0					
ANR	1708747	CompoundStatement		1730:0:53030:58934	1708745	0					
ANR	1708748	IdentifierDeclStatement	pcre_extra * extra = pce -> extra ;	1731:1:53033:53064	1708745	0	True				
ANR	1708749	IdentifierDecl	* extra = pce -> extra		1708745	0					
ANR	1708750	IdentifierDeclType	pcre_extra *		1708745	0					
ANR	1708751	Identifier	extra		1708745	1					
ANR	1708752	AssignmentExpression	* extra = pce -> extra		1708745	2		=			
ANR	1708753	Identifier	extra		1708745	0					
ANR	1708754	PtrMemberAccess	pce -> extra		1708745	1					
ANR	1708755	Identifier	pce		1708745	0					
ANR	1708756	Identifier	extra		1708745	1					
ANR	1708757	IdentifierDeclStatement	pcre * re_bump = NULL ;	1732:1:53098:53120	1708745	1	True				
ANR	1708758	IdentifierDecl	* re_bump = NULL		1708745	0					
ANR	1708759	IdentifierDeclType	pcre *		1708745	0					
ANR	1708760	Identifier	re_bump		1708745	1					
ANR	1708761	AssignmentExpression	* re_bump = NULL		1708745	2		=			
ANR	1708762	Identifier	NULL		1708745	0					
ANR	1708763	Identifier	NULL		1708745	1					
ANR	1708764	IdentifierDeclStatement	pcre_extra * extra_bump = NULL ;	1733:1:53162:53192	1708745	2	True				
ANR	1708765	IdentifierDecl	* extra_bump = NULL		1708745	0					
ANR	1708766	IdentifierDeclType	pcre_extra *		1708745	0					
ANR	1708767	Identifier	extra_bump		1708745	1					
ANR	1708768	AssignmentExpression	* extra_bump = NULL		1708745	2		=			
ANR	1708769	Identifier	NULL		1708745	0					
ANR	1708770	Identifier	NULL		1708745	1					
ANR	1708771	IdentifierDeclStatement	pcre_extra extra_data ;	1734:1:53214:53237	1708745	3	True				
ANR	1708772	IdentifierDecl	extra_data		1708745	0					
ANR	1708773	IdentifierDeclType	pcre_extra		1708745	0					
ANR	1708774	Identifier	extra_data		1708745	1					
ANR	1708775	IdentifierDeclStatement	int * offsets ;	1735:1:53277:53292	1708745	4	True				
ANR	1708776	IdentifierDecl	* offsets		1708745	0					
ANR	1708777	IdentifierDeclType	int *		1708745	0					
ANR	1708778	Identifier	offsets		1708745	1					
ANR	1708779	IdentifierDeclStatement	int size_offsets ;	1736:1:53331:53351	1708745	5	True				
ANR	1708780	IdentifierDecl	size_offsets		1708745	0					
ANR	1708781	IdentifierDeclType	int		1708745	0					
ANR	1708782	Identifier	size_offsets		1708745	1					
ANR	1708783	IdentifierDeclStatement	int exoptions = 0 ;	1737:1:53387:53408	1708745	6	True				
ANR	1708784	IdentifierDecl	exoptions = 0		1708745	0					
ANR	1708785	IdentifierDeclType	int		1708745	0					
ANR	1708786	Identifier	exoptions		1708745	1					
ANR	1708787	AssignmentExpression	exoptions = 0		1708745	2		=			
ANR	1708788	Identifier	exoptions		1708745	0					
ANR	1708789	PrimaryExpression	0		1708745	1					
ANR	1708790	IdentifierDeclStatement	int count = 0 ;	1738:1:53436:53453	1708745	7	True				
ANR	1708791	IdentifierDecl	count = 0		1708745	0					
ANR	1708792	IdentifierDeclType	int		1708745	0					
ANR	1708793	Identifier	count		1708745	1					
ANR	1708794	AssignmentExpression	count = 0		1708745	2		=			
ANR	1708795	Identifier	count		1708745	0					
ANR	1708796	PrimaryExpression	0		1708745	1					
ANR	1708797	IdentifierDeclStatement	int start_offset ;	1739:1:53493:53513	1708745	8	True				
ANR	1708798	IdentifierDecl	start_offset		1708745	0					
ANR	1708799	IdentifierDeclType	int		1708745	0					
ANR	1708800	Identifier	start_offset		1708745	1					
ANR	1708801	IdentifierDeclStatement	int next_offset ;	1740:1:53551:53570	1708745	9	True				
ANR	1708802	IdentifierDecl	next_offset		1708745	0					
ANR	1708803	IdentifierDeclType	int		1708745	0					
ANR	1708804	Identifier	next_offset		1708745	1					
ANR	1708805	IdentifierDeclStatement	int g_notempty = 0 ;	1741:1:53616:53638	1708745	10	True				
ANR	1708806	IdentifierDecl	g_notempty = 0		1708745	0					
ANR	1708807	IdentifierDeclType	int		1708745	0					
ANR	1708808	Identifier	g_notempty		1708745	1					
ANR	1708809	AssignmentExpression	g_notempty = 0		1708745	2		=			
ANR	1708810	Identifier	g_notempty		1708745	0					
ANR	1708811	PrimaryExpression	0		1708745	1					
ANR	1708812	IdentifierDeclStatement	char * last_match ;	1742:1:53680:53698	1708745	11	True				
ANR	1708813	IdentifierDecl	* last_match		1708745	0					
ANR	1708814	IdentifierDeclType	char *		1708745	0					
ANR	1708815	Identifier	last_match		1708745	1					
ANR	1708816	IdentifierDeclStatement	int no_empty ;	1743:1:53731:53747	1708745	12	True				
ANR	1708817	IdentifierDecl	no_empty		1708745	0					
ANR	1708818	IdentifierDeclType	int		1708745	0					
ANR	1708819	Identifier	no_empty		1708745	1					
ANR	1708820	IdentifierDeclStatement	int delim_capture ;	1744:1:53782:53803	1708745	13	True				
ANR	1708821	IdentifierDecl	delim_capture		1708745	0					
ANR	1708822	IdentifierDeclType	int		1708745	0					
ANR	1708823	Identifier	delim_capture		1708745	1					
ANR	1708824	IdentifierDeclStatement	int offset_capture ;	1745:1:53846:53868	1708745	14	True				
ANR	1708825	IdentifierDecl	offset_capture		1708745	0					
ANR	1708826	IdentifierDeclType	int		1708745	0					
ANR	1708827	Identifier	offset_capture		1708745	1					
ANR	1708828	IdentifierDeclStatement	zval tmp ;	1746:1:53907:53918	1708745	15	True				
ANR	1708829	IdentifierDecl	tmp		1708745	0					
ANR	1708830	IdentifierDeclType	zval		1708745	0					
ANR	1708831	Identifier	tmp		1708745	1					
ANR	1708832	ExpressionStatement	ALLOCA_FLAG ( use_heap )	1747:1:53921:53942	1708745	16	True				
ANR	1708833	CallExpression	ALLOCA_FLAG ( use_heap )		1708745	0					
ANR	1708834	Callee	ALLOCA_FLAG		1708745	0					
ANR	1708835	Identifier	ALLOCA_FLAG		1708745	0					
ANR	1708836	ArgumentList	use_heap		1708745	1					
ANR	1708837	Argument	use_heap		1708745	0					
ANR	1708838	Identifier	use_heap		1708745	0					
ANR	1708839	ExpressionStatement	no_empty = flags & PREG_SPLIT_NO_EMPTY	1749:1:53946:53984	1708745	17	True				
ANR	1708840	AssignmentExpression	no_empty = flags & PREG_SPLIT_NO_EMPTY		1708745	0		=			
ANR	1708841	Identifier	no_empty		1708745	0					
ANR	1708842	BitAndExpression	flags & PREG_SPLIT_NO_EMPTY		1708745	1		&			
ANR	1708843	Identifier	flags		1708745	0					
ANR	1708844	Identifier	PREG_SPLIT_NO_EMPTY		1708745	1					
ANR	1708845	ExpressionStatement	delim_capture = flags & PREG_SPLIT_DELIM_CAPTURE	1750:1:53987:54035	1708745	18	True				
ANR	1708846	AssignmentExpression	delim_capture = flags & PREG_SPLIT_DELIM_CAPTURE		1708745	0		=			
ANR	1708847	Identifier	delim_capture		1708745	0					
ANR	1708848	BitAndExpression	flags & PREG_SPLIT_DELIM_CAPTURE		1708745	1		&			
ANR	1708849	Identifier	flags		1708745	0					
ANR	1708850	Identifier	PREG_SPLIT_DELIM_CAPTURE		1708745	1					
ANR	1708851	ExpressionStatement	offset_capture = flags & PREG_SPLIT_OFFSET_CAPTURE	1751:1:54038:54088	1708745	19	True				
ANR	1708852	AssignmentExpression	offset_capture = flags & PREG_SPLIT_OFFSET_CAPTURE		1708745	0		=			
ANR	1708853	Identifier	offset_capture		1708745	0					
ANR	1708854	BitAndExpression	flags & PREG_SPLIT_OFFSET_CAPTURE		1708745	1		&			
ANR	1708855	Identifier	flags		1708745	0					
ANR	1708856	Identifier	PREG_SPLIT_OFFSET_CAPTURE		1708745	1					
ANR	1708857	IfStatement	if ( limit_val == 0 )		1708745	20					
ANR	1708858	Condition	limit_val == 0	1753:5:54096:54109	1708745	0	True				
ANR	1708859	EqualityExpression	limit_val == 0		1708745	0		==			
ANR	1708860	Identifier	limit_val		1708745	0					
ANR	1708861	PrimaryExpression	0		1708745	1					
ANR	1708862	CompoundStatement		24:21:1081:1081	1708745	1					
ANR	1708863	ExpressionStatement	limit_val = - 1	1754:2:54116:54130	1708745	0	True				
ANR	1708864	AssignmentExpression	limit_val = - 1		1708745	0		=			
ANR	1708865	Identifier	limit_val		1708745	0					
ANR	1708866	UnaryOperationExpression	- 1		1708745	1					
ANR	1708867	UnaryOperator	-		1708745	0					
ANR	1708868	PrimaryExpression	1		1708745	1					
ANR	1708869	IfStatement	if ( extra == NULL )		1708745	21					
ANR	1708870	Condition	extra == NULL	1757:5:54141:54153	1708745	0	True				
ANR	1708871	EqualityExpression	extra == NULL		1708745	0		==			
ANR	1708872	Identifier	extra		1708745	0					
ANR	1708873	Identifier	NULL		1708745	1					
ANR	1708874	CompoundStatement		28:20:1125:1125	1708745	1					
ANR	1708875	ExpressionStatement	extra_data . flags = PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION	1758:2:54160:54236	1708745	0	True				
ANR	1708876	AssignmentExpression	extra_data . flags = PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION		1708745	0		=			
ANR	1708877	MemberAccess	extra_data . flags		1708745	0					
ANR	1708878	Identifier	extra_data		1708745	0					
ANR	1708879	Identifier	flags		1708745	1					
ANR	1708880	InclusiveOrExpression	PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION		1708745	1		|			
ANR	1708881	Identifier	PCRE_EXTRA_MATCH_LIMIT		1708745	0					
ANR	1708882	Identifier	PCRE_EXTRA_MATCH_LIMIT_RECURSION		1708745	1					
ANR	1708883	ExpressionStatement	extra = & extra_data	1759:2:54240:54259	1708745	1	True				
ANR	1708884	AssignmentExpression	extra = & extra_data		1708745	0		=			
ANR	1708885	Identifier	extra		1708745	0					
ANR	1708886	UnaryOperationExpression	& extra_data		1708745	1					
ANR	1708887	UnaryOperator	&		1708745	0					
ANR	1708888	Identifier	extra_data		1708745	1					
ANR	1708889	ExpressionStatement	extra -> match_limit = ( unsigned long ) PCRE_G ( backtrack_limit )	1761:1:54265:54324	1708745	22	True				
ANR	1708890	AssignmentExpression	extra -> match_limit = ( unsigned long ) PCRE_G ( backtrack_limit )		1708745	0		=			
ANR	1708891	PtrMemberAccess	extra -> match_limit		1708745	0					
ANR	1708892	Identifier	extra		1708745	0					
ANR	1708893	Identifier	match_limit		1708745	1					
ANR	1708894	CastExpression	( unsigned long ) PCRE_G ( backtrack_limit )		1708745	1					
ANR	1708895	CastTarget	unsigned long		1708745	0					
ANR	1708896	CallExpression	PCRE_G ( backtrack_limit )		1708745	1					
ANR	1708897	Callee	PCRE_G		1708745	0					
ANR	1708898	Identifier	PCRE_G		1708745	0					
ANR	1708899	ArgumentList	backtrack_limit		1708745	1					
ANR	1708900	Argument	backtrack_limit		1708745	0					
ANR	1708901	Identifier	backtrack_limit		1708745	0					
ANR	1708902	ExpressionStatement	extra -> match_limit_recursion = ( unsigned long ) PCRE_G ( recursion_limit )	1762:1:54327:54396	1708745	23	True				
ANR	1708903	AssignmentExpression	extra -> match_limit_recursion = ( unsigned long ) PCRE_G ( recursion_limit )		1708745	0		=			
ANR	1708904	PtrMemberAccess	extra -> match_limit_recursion		1708745	0					
ANR	1708905	Identifier	extra		1708745	0					
ANR	1708906	Identifier	match_limit_recursion		1708745	1					
ANR	1708907	CastExpression	( unsigned long ) PCRE_G ( recursion_limit )		1708745	1					
ANR	1708908	CastTarget	unsigned long		1708745	0					
ANR	1708909	CallExpression	PCRE_G ( recursion_limit )		1708745	1					
ANR	1708910	Callee	PCRE_G		1708745	0					
ANR	1708911	Identifier	PCRE_G		1708745	0					
ANR	1708912	ArgumentList	recursion_limit		1708745	1					
ANR	1708913	Argument	recursion_limit		1708745	0					
ANR	1708914	Identifier	recursion_limit		1708745	0					
ANR	1708915	ExpressionStatement	extra -> flags &= ~PCRE_EXTRA_MARK	1764:1:54422:54454	1708745	24	True				
ANR	1708916	AssignmentExpression	extra -> flags &= ~PCRE_EXTRA_MARK		1708745	0		&=			
ANR	1708917	PtrMemberAccess	extra -> flags		1708745	0					
ANR	1708918	Identifier	extra		1708745	0					
ANR	1708919	Identifier	flags		1708745	1					
ANR	1708920	Identifier	~PCRE_EXTRA_MARK		1708745	1					
ANR	1708921	ExpressionStatement	array_init ( return_value )	1768:1:54496:54520	1708745	25	True				
ANR	1708922	CallExpression	array_init ( return_value )		1708745	0					
ANR	1708923	Callee	array_init		1708745	0					
ANR	1708924	Identifier	array_init		1708745	0					
ANR	1708925	ArgumentList	return_value		1708745	1					
ANR	1708926	Argument	return_value		1708745	0					
ANR	1708927	Identifier	return_value		1708745	0					
ANR	1708928	ExpressionStatement	size_offsets = ( pce -> capture_count + 1 ) * 3	1771:1:54600:54643	1708745	26	True				
ANR	1708929	AssignmentExpression	size_offsets = ( pce -> capture_count + 1 ) * 3		1708745	0		=			
ANR	1708930	Identifier	size_offsets		1708745	0					
ANR	1708931	MultiplicativeExpression	( pce -> capture_count + 1 ) * 3		1708745	1		*			
ANR	1708932	AdditiveExpression	pce -> capture_count + 1		1708745	0		+			
ANR	1708933	PtrMemberAccess	pce -> capture_count		1708745	0					
ANR	1708934	Identifier	pce		1708745	0					
ANR	1708935	Identifier	capture_count		1708745	1					
ANR	1708936	PrimaryExpression	1		1708745	1					
ANR	1708937	PrimaryExpression	3		1708745	1					
ANR	1708938	IfStatement	if ( size_offsets <= 32 )		1708745	27					
ANR	1708939	Condition	size_offsets <= 32	1772:5:54650:54667	1708745	0	True				
ANR	1708940	RelationalExpression	size_offsets <= 32		1708745	0		<=			
ANR	1708941	Identifier	size_offsets		1708745	0					
ANR	1708942	PrimaryExpression	32		1708745	1					
ANR	1708943	CompoundStatement		43:25:1639:1639	1708745	1					
ANR	1708944	ExpressionStatement	"offsets = ( int * ) do_alloca ( size_offsets * sizeof ( int ) , use_heap )"	1773:2:54674:54738	1708745	0	True				
ANR	1708945	AssignmentExpression	"offsets = ( int * ) do_alloca ( size_offsets * sizeof ( int ) , use_heap )"		1708745	0		=			
ANR	1708946	Identifier	offsets		1708745	0					
ANR	1708947	CastExpression	"( int * ) do_alloca ( size_offsets * sizeof ( int ) , use_heap )"		1708745	1					
ANR	1708948	CastTarget	int *		1708745	0					
ANR	1708949	CallExpression	"do_alloca ( size_offsets * sizeof ( int ) , use_heap )"		1708745	1					
ANR	1708950	Callee	do_alloca		1708745	0					
ANR	1708951	Identifier	do_alloca		1708745	0					
ANR	1708952	ArgumentList	size_offsets * sizeof ( int )		1708745	1					
ANR	1708953	Argument	size_offsets * sizeof ( int )		1708745	0					
ANR	1708954	MultiplicativeExpression	size_offsets * sizeof ( int )		1708745	0		*			
ANR	1708955	Identifier	size_offsets		1708745	0					
ANR	1708956	SizeofExpression	sizeof ( int )		1708745	1					
ANR	1708957	Sizeof	sizeof		1708745	0					
ANR	1708958	SizeofOperand	int		1708745	1					
ANR	1708959	Argument	use_heap		1708745	1					
ANR	1708960	Identifier	use_heap		1708745	0					
ANR	1708961	ElseStatement	else		1708745	0					
ANR	1708962	CompoundStatement		45:8:1717:1717	1708745	0					
ANR	1708963	ExpressionStatement	"offsets = ( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"	1775:2:54752:54811	1708745	0	True				
ANR	1708964	AssignmentExpression	"offsets = ( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1708745	0		=			
ANR	1708965	Identifier	offsets		1708745	0					
ANR	1708966	CastExpression	"( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1708745	1					
ANR	1708967	CastTarget	int *		1708745	0					
ANR	1708968	CallExpression	"safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1708745	1					
ANR	1708969	Callee	safe_emalloc		1708745	0					
ANR	1708970	Identifier	safe_emalloc		1708745	0					
ANR	1708971	ArgumentList	size_offsets		1708745	1					
ANR	1708972	Argument	size_offsets		1708745	0					
ANR	1708973	Identifier	size_offsets		1708745	0					
ANR	1708974	Argument	sizeof ( int )		1708745	1					
ANR	1708975	SizeofExpression	sizeof ( int )		1708745	0					
ANR	1708976	Sizeof	sizeof		1708745	0					
ANR	1708977	SizeofOperand	int		1708745	1					
ANR	1708978	Argument	0		1708745	2					
ANR	1708979	PrimaryExpression	0		1708745	0					
ANR	1708980	ExpressionStatement	start_offset = 0	1779:1:54862:54878	1708745	28	True				
ANR	1708981	AssignmentExpression	start_offset = 0		1708745	0		=			
ANR	1708982	Identifier	start_offset		1708745	0					
ANR	1708983	PrimaryExpression	0		1708745	1					
ANR	1708984	ExpressionStatement	next_offset = 0	1780:1:54881:54896	1708745	29	True				
ANR	1708985	AssignmentExpression	next_offset = 0		1708745	0		=			
ANR	1708986	Identifier	next_offset		1708745	0					
ANR	1708987	PrimaryExpression	0		1708745	1					
ANR	1708988	ExpressionStatement	last_match = subject	1781:1:54899:54919	1708745	30	True				
ANR	1708989	AssignmentExpression	last_match = subject		1708745	0		=			
ANR	1708990	Identifier	last_match		1708745	0					
ANR	1708991	Identifier	subject		1708745	1					
ANR	1708992	ExpressionStatement	PCRE_G ( error_code ) = PHP_PCRE_NO_ERROR	1782:1:54922:54960	1708745	31	True				
ANR	1708993	AssignmentExpression	PCRE_G ( error_code ) = PHP_PCRE_NO_ERROR		1708745	0		=			
ANR	1708994	CallExpression	PCRE_G ( error_code )		1708745	0					
ANR	1708995	Callee	PCRE_G		1708745	0					
ANR	1708996	Identifier	PCRE_G		1708745	0					
ANR	1708997	ArgumentList	error_code		1708745	1					
ANR	1708998	Argument	error_code		1708745	0					
ANR	1708999	Identifier	error_code		1708745	0					
ANR	1709000	Identifier	PHP_PCRE_NO_ERROR		1708745	1					
ANR	1709001	WhileStatement	while ( ( limit_val == - 1 || limit_val > 1 ) )		1708745	32					
ANR	1709002	Condition	limit_val == - 1 || limit_val > 1	1785:8:55051:55084	1708745	0	True				
ANR	1709003	OrExpression	limit_val == - 1 || limit_val > 1		1708745	0		||			
ANR	1709004	EqualityExpression	limit_val == - 1		1708745	0		==			
ANR	1709005	Identifier	limit_val		1708745	0					
ANR	1709006	UnaryOperationExpression	- 1		1708745	1					
ANR	1709007	UnaryOperator	-		1708745	0					
ANR	1709008	PrimaryExpression	1		1708745	1					
ANR	1709009	RelationalExpression	limit_val > 1		1708745	1		>			
ANR	1709010	Identifier	limit_val		1708745	0					
ANR	1709011	PrimaryExpression	1		1708745	1					
ANR	1709012	CompoundStatement		56:44:2056:2056	1708745	1					
ANR	1709013	ExpressionStatement	"count = pcre_exec ( pce -> re , extra , subject , subject_len , start_offset , exoptions | g_notempty , offsets , size_offsets )"	1786:2:55091:55221	1708745	0	True				
ANR	1709014	AssignmentExpression	"count = pcre_exec ( pce -> re , extra , subject , subject_len , start_offset , exoptions | g_notempty , offsets , size_offsets )"		1708745	0		=			
ANR	1709015	Identifier	count		1708745	0					
ANR	1709016	CallExpression	"pcre_exec ( pce -> re , extra , subject , subject_len , start_offset , exoptions | g_notempty , offsets , size_offsets )"		1708745	1					
ANR	1709017	Callee	pcre_exec		1708745	0					
ANR	1709018	Identifier	pcre_exec		1708745	0					
ANR	1709019	ArgumentList	pce -> re		1708745	1					
ANR	1709020	Argument	pce -> re		1708745	0					
ANR	1709021	PtrMemberAccess	pce -> re		1708745	0					
ANR	1709022	Identifier	pce		1708745	0					
ANR	1709023	Identifier	re		1708745	1					
ANR	1709024	Argument	extra		1708745	1					
ANR	1709025	Identifier	extra		1708745	0					
ANR	1709026	Argument	subject		1708745	2					
ANR	1709027	Identifier	subject		1708745	0					
ANR	1709028	Argument	subject_len		1708745	3					
ANR	1709029	Identifier	subject_len		1708745	0					
ANR	1709030	Argument	start_offset		1708745	4					
ANR	1709031	Identifier	start_offset		1708745	0					
ANR	1709032	Argument	exoptions | g_notempty		1708745	5					
ANR	1709033	InclusiveOrExpression	exoptions | g_notempty		1708745	0		|			
ANR	1709034	Identifier	exoptions		1708745	0					
ANR	1709035	Identifier	g_notempty		1708745	1					
ANR	1709036	Argument	offsets		1708745	6					
ANR	1709037	Identifier	offsets		1708745	0					
ANR	1709038	Argument	size_offsets		1708745	7					
ANR	1709039	Identifier	size_offsets		1708745	0					
ANR	1709040	ExpressionStatement	exoptions |= PCRE_NO_UTF8_CHECK	1791:2:55282:55313	1708745	1	True				
ANR	1709041	AssignmentExpression	exoptions |= PCRE_NO_UTF8_CHECK		1708745	0		|=			
ANR	1709042	Identifier	exoptions		1708745	0					
ANR	1709043	Identifier	PCRE_NO_UTF8_CHECK		1708745	1					
ANR	1709044	IfStatement	if ( count == 0 )		1708745	2					
ANR	1709045	Condition	count == 0	1794:6:55371:55380	1708745	0	True				
ANR	1709046	EqualityExpression	count == 0		1708745	0		==			
ANR	1709047	Identifier	count		1708745	0					
ANR	1709048	PrimaryExpression	0		1708745	1					
ANR	1709049	CompoundStatement		65:18:2352:2352	1708745	1					
ANR	1709050	ExpressionStatement	"php_error_docref ( NULL , E_NOTICE , ""Matched, but too many substrings"" )"	1795:3:55388:55455	1708745	0	True				
ANR	1709051	CallExpression	"php_error_docref ( NULL , E_NOTICE , ""Matched, but too many substrings"" )"		1708745	0					
ANR	1709052	Callee	php_error_docref		1708745	0					
ANR	1709053	Identifier	php_error_docref		1708745	0					
ANR	1709054	ArgumentList	NULL		1708745	1					
ANR	1709055	Argument	NULL		1708745	0					
ANR	1709056	Identifier	NULL		1708745	0					
ANR	1709057	Argument	E_NOTICE		1708745	1					
ANR	1709058	Identifier	E_NOTICE		1708745	0					
ANR	1709059	Argument	"""Matched, but too many substrings"""		1708745	2					
ANR	1709060	PrimaryExpression	"""Matched, but too many substrings"""		1708745	0					
ANR	1709061	ExpressionStatement	count = size_offsets / 3	1796:3:55460:55482	1708745	1	True				
ANR	1709062	AssignmentExpression	count = size_offsets / 3		1708745	0		=			
ANR	1709063	Identifier	count		1708745	0					
ANR	1709064	MultiplicativeExpression	size_offsets / 3		1708745	1		/			
ANR	1709065	Identifier	size_offsets		1708745	0					
ANR	1709066	PrimaryExpression	3		1708745	1					
ANR	1709067	IfStatement	if ( count > 0 && ( offsets [ 1 ] - offsets [ 0 ] >= 0 ) )		1708745	3					
ANR	1709068	Condition	count > 0 && ( offsets [ 1 ] - offsets [ 0 ] >= 0 )	1800:6:55524:55566	1708745	0	True				
ANR	1709069	AndExpression	count > 0 && ( offsets [ 1 ] - offsets [ 0 ] >= 0 )		1708745	0		&&			
ANR	1709070	RelationalExpression	count > 0		1708745	0		>			
ANR	1709071	Identifier	count		1708745	0					
ANR	1709072	PrimaryExpression	0		1708745	1					
ANR	1709073	RelationalExpression	offsets [ 1 ] - offsets [ 0 ] >= 0		1708745	1		>=			
ANR	1709074	AdditiveExpression	offsets [ 1 ] - offsets [ 0 ]		1708745	0		-			
ANR	1709075	ArrayIndexing	offsets [ 1 ]		1708745	0					
ANR	1709076	Identifier	offsets		1708745	0					
ANR	1709077	PrimaryExpression	1		1708745	1					
ANR	1709078	ArrayIndexing	offsets [ 0 ]		1708745	1					
ANR	1709079	Identifier	offsets		1708745	0					
ANR	1709080	PrimaryExpression	0		1708745	1					
ANR	1709081	PrimaryExpression	0		1708745	1					
ANR	1709082	CompoundStatement		71:51:2538:2538	1708745	1					
ANR	1709083	IfStatement	if ( ! no_empty || & subject [ offsets [ 0 ] ] != last_match )		1708745	0					
ANR	1709084	Condition	! no_empty || & subject [ offsets [ 0 ] ] != last_match	1801:7:55578:55624	1708745	0	True				
ANR	1709085	OrExpression	! no_empty || & subject [ offsets [ 0 ] ] != last_match		1708745	0		||			
ANR	1709086	UnaryOperationExpression	! no_empty		1708745	0					
ANR	1709087	UnaryOperator	!		1708745	0					
ANR	1709088	Identifier	no_empty		1708745	1					
ANR	1709089	EqualityExpression	& subject [ offsets [ 0 ] ] != last_match		1708745	1		!=			
ANR	1709090	UnaryOperationExpression	& subject [ offsets [ 0 ] ]		1708745	0					
ANR	1709091	UnaryOperator	&		1708745	0					
ANR	1709092	ArrayIndexing	subject [ offsets [ 0 ] ]		1708745	1					
ANR	1709093	Identifier	subject		1708745	0					
ANR	1709094	ArrayIndexing	offsets [ 0 ]		1708745	1					
ANR	1709095	Identifier	offsets		1708745	0					
ANR	1709096	PrimaryExpression	0		1708745	1					
ANR	1709097	Identifier	last_match		1708745	1					
ANR	1709098	CompoundStatement		72:56:2596:2596	1708745	1					
ANR	1709099	IfStatement	if ( offset_capture )		1708745	0					
ANR	1709100	Condition	offset_capture	1803:8:55638:55651	1708745	0	True				
ANR	1709101	Identifier	offset_capture		1708745	0					
ANR	1709102	CompoundStatement		74:24:2623:2623	1708745	1					
ANR	1709103	ExpressionStatement	"add_offset_pair ( return_value , last_match , ( int ) ( & subject [ offsets [ 0 ] ] - last_match ) , next_offset , NULL )"	1805:5:55717:55817	1708745	0	True				
ANR	1709104	CallExpression	"add_offset_pair ( return_value , last_match , ( int ) ( & subject [ offsets [ 0 ] ] - last_match ) , next_offset , NULL )"		1708745	0					
ANR	1709105	Callee	add_offset_pair		1708745	0					
ANR	1709106	Identifier	add_offset_pair		1708745	0					
ANR	1709107	ArgumentList	return_value		1708745	1					
ANR	1709108	Argument	return_value		1708745	0					
ANR	1709109	Identifier	return_value		1708745	0					
ANR	1709110	Argument	last_match		1708745	1					
ANR	1709111	Identifier	last_match		1708745	0					
ANR	1709112	Argument	( int ) ( & subject [ offsets [ 0 ] ] - last_match )		1708745	2					
ANR	1709113	CastExpression	( int ) ( & subject [ offsets [ 0 ] ] - last_match )		1708745	0					
ANR	1709114	CastTarget	int		1708745	0					
ANR	1709115	AdditiveExpression	& subject [ offsets [ 0 ] ] - last_match		1708745	1		-			
ANR	1709116	UnaryOperationExpression	& subject [ offsets [ 0 ] ]		1708745	0					
ANR	1709117	UnaryOperator	&		1708745	0					
ANR	1709118	ArrayIndexing	subject [ offsets [ 0 ] ]		1708745	1					
ANR	1709119	Identifier	subject		1708745	0					
ANR	1709120	ArrayIndexing	offsets [ 0 ]		1708745	1					
ANR	1709121	Identifier	offsets		1708745	0					
ANR	1709122	PrimaryExpression	0		1708745	1					
ANR	1709123	Identifier	last_match		1708745	1					
ANR	1709124	Argument	next_offset		1708745	3					
ANR	1709125	Identifier	next_offset		1708745	0					
ANR	1709126	Argument	NULL		1708745	4					
ANR	1709127	Identifier	NULL		1708745	0					
ANR	1709128	ElseStatement	else		1708745	0					
ANR	1709129	CompoundStatement		77:11:2799:2799	1708745	0					
ANR	1709130	ExpressionStatement	"ZVAL_STRINGL ( & tmp , last_match , & subject [ offsets [ 0 ] ] - last_match )"	1808:5:55882:55945	1708745	0	True				
ANR	1709131	CallExpression	"ZVAL_STRINGL ( & tmp , last_match , & subject [ offsets [ 0 ] ] - last_match )"		1708745	0					
ANR	1709132	Callee	ZVAL_STRINGL		1708745	0					
ANR	1709133	Identifier	ZVAL_STRINGL		1708745	0					
ANR	1709134	ArgumentList	& tmp		1708745	1					
ANR	1709135	Argument	& tmp		1708745	0					
ANR	1709136	UnaryOperationExpression	& tmp		1708745	0					
ANR	1709137	UnaryOperator	&		1708745	0					
ANR	1709138	Identifier	tmp		1708745	1					
ANR	1709139	Argument	last_match		1708745	1					
ANR	1709140	Identifier	last_match		1708745	0					
ANR	1709141	Argument	& subject [ offsets [ 0 ] ] - last_match		1708745	2					
ANR	1709142	AdditiveExpression	& subject [ offsets [ 0 ] ] - last_match		1708745	0		-			
ANR	1709143	UnaryOperationExpression	& subject [ offsets [ 0 ] ]		1708745	0					
ANR	1709144	UnaryOperator	&		1708745	0					
ANR	1709145	ArrayIndexing	subject [ offsets [ 0 ] ]		1708745	1					
ANR	1709146	Identifier	subject		1708745	0					
ANR	1709147	ArrayIndexing	offsets [ 0 ]		1708745	1					
ANR	1709148	Identifier	offsets		1708745	0					
ANR	1709149	PrimaryExpression	0		1708745	1					
ANR	1709150	Identifier	last_match		1708745	1					
ANR	1709151	ExpressionStatement	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( return_value ) , & tmp )"	1809:5:55952:56015	1708745	1	True				
ANR	1709152	CallExpression	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( return_value ) , & tmp )"		1708745	0					
ANR	1709153	Callee	zend_hash_next_index_insert_new		1708745	0					
ANR	1709154	Identifier	zend_hash_next_index_insert_new		1708745	0					
ANR	1709155	ArgumentList	Z_ARRVAL_P ( return_value )		1708745	1					
ANR	1709156	Argument	Z_ARRVAL_P ( return_value )		1708745	0					
ANR	1709157	CallExpression	Z_ARRVAL_P ( return_value )		1708745	0					
ANR	1709158	Callee	Z_ARRVAL_P		1708745	0					
ANR	1709159	Identifier	Z_ARRVAL_P		1708745	0					
ANR	1709160	ArgumentList	return_value		1708745	1					
ANR	1709161	Argument	return_value		1708745	0					
ANR	1709162	Identifier	return_value		1708745	0					
ANR	1709163	Argument	& tmp		1708745	1					
ANR	1709164	UnaryOperationExpression	& tmp		1708745	0					
ANR	1709165	UnaryOperator	&		1708745	0					
ANR	1709166	Identifier	tmp		1708745	1					
ANR	1709167	IfStatement	if ( limit_val != - 1 )		1708745	1					
ANR	1709168	Condition	limit_val != - 1	1813:8:56062:56076	1708745	0	True				
ANR	1709169	EqualityExpression	limit_val != - 1		1708745	0		!=			
ANR	1709170	Identifier	limit_val		1708745	0					
ANR	1709171	UnaryOperationExpression	- 1		1708745	1					
ANR	1709172	UnaryOperator	-		1708745	0					
ANR	1709173	PrimaryExpression	1		1708745	1					
ANR	1709174	ExpressionStatement	limit_val --	1814:5:56084:56095	1708745	1	True				
ANR	1709175	PostIncDecOperationExpression	limit_val --		1708745	0					
ANR	1709176	Identifier	limit_val		1708745	0					
ANR	1709177	IncDec	--		1708745	1					
ANR	1709178	ExpressionStatement	last_match = & subject [ offsets [ 1 ] ]	1817:3:56106:56139	1708745	1	True				
ANR	1709179	AssignmentExpression	last_match = & subject [ offsets [ 1 ] ]		1708745	0		=			
ANR	1709180	Identifier	last_match		1708745	0					
ANR	1709181	UnaryOperationExpression	& subject [ offsets [ 1 ] ]		1708745	1					
ANR	1709182	UnaryOperator	&		1708745	0					
ANR	1709183	ArrayIndexing	subject [ offsets [ 1 ] ]		1708745	1					
ANR	1709184	Identifier	subject		1708745	0					
ANR	1709185	ArrayIndexing	offsets [ 1 ]		1708745	1					
ANR	1709186	Identifier	offsets		1708745	0					
ANR	1709187	PrimaryExpression	1		1708745	1					
ANR	1709188	ExpressionStatement	next_offset = offsets [ 1 ]	1818:3:56144:56168	1708745	2	True				
ANR	1709189	AssignmentExpression	next_offset = offsets [ 1 ]		1708745	0		=			
ANR	1709190	Identifier	next_offset		1708745	0					
ANR	1709191	ArrayIndexing	offsets [ 1 ]		1708745	1					
ANR	1709192	Identifier	offsets		1708745	0					
ANR	1709193	PrimaryExpression	1		1708745	1					
ANR	1709194	IfStatement	if ( delim_capture )		1708745	3					
ANR	1709195	Condition	delim_capture	1820:7:56178:56190	1708745	0	True				
ANR	1709196	Identifier	delim_capture		1708745	0					
ANR	1709197	CompoundStatement		92:4:3168:3184	1708745	1					
ANR	1709198	IdentifierDeclStatement	"int i , match_len ;"	1821:4:56199:56215	1708745	0	True				
ANR	1709199	IdentifierDecl	i		1708745	0					
ANR	1709200	IdentifierDeclType	int		1708745	0					
ANR	1709201	Identifier	i		1708745	1					
ANR	1709202	IdentifierDecl	match_len		1708745	1					
ANR	1709203	IdentifierDeclType	int		1708745	0					
ANR	1709204	Identifier	match_len		1708745	1					
ANR	1709205	ForStatement	for ( i = 1 ; i < count ; i ++ )		1708745	1					
ANR	1709206	ForInit	i = 1 ;	1822:9:56226:56231	1708745	0	True				
ANR	1709207	AssignmentExpression	i = 1		1708745	0		=			
ANR	1709208	Identifier	i		1708745	0					
ANR	1709209	PrimaryExpression	1		1708745	1					
ANR	1709210	Condition	i < count	1822:16:56233:56241	1708745	1	True				
ANR	1709211	RelationalExpression	i < count		1708745	0		<			
ANR	1709212	Identifier	i		1708745	0					
ANR	1709213	Identifier	count		1708745	1					
ANR	1709214	PostIncDecOperationExpression	i ++	1822:27:56244:56246	1708745	2	True				
ANR	1709215	Identifier	i		1708745	0					
ANR	1709216	IncDec	++		1708745	1					
ANR	1709217	CompoundStatement		93:32:3218:3218	1708745	3					
ANR	1709218	ExpressionStatement	match_len = offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]	1823:5:56256:56301	1708745	0	True				
ANR	1709219	AssignmentExpression	match_len = offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1708745	0		=			
ANR	1709220	Identifier	match_len		1708745	0					
ANR	1709221	AdditiveExpression	offsets [ ( i << 1 ) + 1 ] - offsets [ i << 1 ]		1708745	1		-			
ANR	1709222	ArrayIndexing	offsets [ ( i << 1 ) + 1 ]		1708745	0					
ANR	1709223	Identifier	offsets		1708745	0					
ANR	1709224	AdditiveExpression	( i << 1 ) + 1		1708745	1		+			
ANR	1709225	ShiftExpression	i << 1		1708745	0		<<			
ANR	1709226	Identifier	i		1708745	0					
ANR	1709227	PrimaryExpression	1		1708745	1					
ANR	1709228	PrimaryExpression	1		1708745	1					
ANR	1709229	ArrayIndexing	offsets [ i << 1 ]		1708745	1					
ANR	1709230	Identifier	offsets		1708745	0					
ANR	1709231	ShiftExpression	i << 1		1708745	1		<<			
ANR	1709232	Identifier	i		1708745	0					
ANR	1709233	PrimaryExpression	1		1708745	1					
ANR	1709234	IfStatement	if ( ! no_empty || match_len > 0 )		1708745	1					
ANR	1709235	Condition	! no_empty || match_len > 0	1825:9:56354:56379	1708745	0	True				
ANR	1709236	OrExpression	! no_empty || match_len > 0		1708745	0		||			
ANR	1709237	UnaryOperationExpression	! no_empty		1708745	0					
ANR	1709238	UnaryOperator	!		1708745	0					
ANR	1709239	Identifier	no_empty		1708745	1					
ANR	1709240	RelationalExpression	match_len > 0		1708745	1		>			
ANR	1709241	Identifier	match_len		1708745	0					
ANR	1709242	PrimaryExpression	0		1708745	1					
ANR	1709243	CompoundStatement		96:37:3351:3351	1708745	1					
ANR	1709244	IfStatement	if ( offset_capture )		1708745	0					
ANR	1709245	Condition	offset_capture	1826:10:56394:56407	1708745	0	True				
ANR	1709246	Identifier	offset_capture		1708745	0					
ANR	1709247	CompoundStatement		97:26:3379:3379	1708745	1					
ANR	1709248	ExpressionStatement	"add_offset_pair ( return_value , & subject [ offsets [ i << 1 ] ] , match_len , offsets [ i << 1 ] , NULL )"	1827:7:56419:56505	1708745	0	True				
ANR	1709249	CallExpression	"add_offset_pair ( return_value , & subject [ offsets [ i << 1 ] ] , match_len , offsets [ i << 1 ] , NULL )"		1708745	0					
ANR	1709250	Callee	add_offset_pair		1708745	0					
ANR	1709251	Identifier	add_offset_pair		1708745	0					
ANR	1709252	ArgumentList	return_value		1708745	1					
ANR	1709253	Argument	return_value		1708745	0					
ANR	1709254	Identifier	return_value		1708745	0					
ANR	1709255	Argument	& subject [ offsets [ i << 1 ] ]		1708745	1					
ANR	1709256	UnaryOperationExpression	& subject [ offsets [ i << 1 ] ]		1708745	0					
ANR	1709257	UnaryOperator	&		1708745	0					
ANR	1709258	ArrayIndexing	subject [ offsets [ i << 1 ] ]		1708745	1					
ANR	1709259	Identifier	subject		1708745	0					
ANR	1709260	ArrayIndexing	offsets [ i << 1 ]		1708745	1					
ANR	1709261	Identifier	offsets		1708745	0					
ANR	1709262	ShiftExpression	i << 1		1708745	1		<<			
ANR	1709263	Identifier	i		1708745	0					
ANR	1709264	PrimaryExpression	1		1708745	1					
ANR	1709265	Argument	match_len		1708745	2					
ANR	1709266	Identifier	match_len		1708745	0					
ANR	1709267	Argument	offsets [ i << 1 ]		1708745	3					
ANR	1709268	ArrayIndexing	offsets [ i << 1 ]		1708745	0					
ANR	1709269	Identifier	offsets		1708745	0					
ANR	1709270	ShiftExpression	i << 1		1708745	1		<<			
ANR	1709271	Identifier	i		1708745	0					
ANR	1709272	PrimaryExpression	1		1708745	1					
ANR	1709273	Argument	NULL		1708745	4					
ANR	1709274	Identifier	NULL		1708745	0					
ANR	1709275	ElseStatement	else		1708745	0					
ANR	1709276	CompoundStatement		99:13:3489:3489	1708745	0					
ANR	1709277	ExpressionStatement	"ZVAL_STRINGL ( & tmp , & subject [ offsets [ i << 1 ] ] , match_len )"	1829:7:56529:56583	1708745	0	True				
ANR	1709278	CallExpression	"ZVAL_STRINGL ( & tmp , & subject [ offsets [ i << 1 ] ] , match_len )"		1708745	0					
ANR	1709279	Callee	ZVAL_STRINGL		1708745	0					
ANR	1709280	Identifier	ZVAL_STRINGL		1708745	0					
ANR	1709281	ArgumentList	& tmp		1708745	1					
ANR	1709282	Argument	& tmp		1708745	0					
ANR	1709283	UnaryOperationExpression	& tmp		1708745	0					
ANR	1709284	UnaryOperator	&		1708745	0					
ANR	1709285	Identifier	tmp		1708745	1					
ANR	1709286	Argument	& subject [ offsets [ i << 1 ] ]		1708745	1					
ANR	1709287	UnaryOperationExpression	& subject [ offsets [ i << 1 ] ]		1708745	0					
ANR	1709288	UnaryOperator	&		1708745	0					
ANR	1709289	ArrayIndexing	subject [ offsets [ i << 1 ] ]		1708745	1					
ANR	1709290	Identifier	subject		1708745	0					
ANR	1709291	ArrayIndexing	offsets [ i << 1 ]		1708745	1					
ANR	1709292	Identifier	offsets		1708745	0					
ANR	1709293	ShiftExpression	i << 1		1708745	1		<<			
ANR	1709294	Identifier	i		1708745	0					
ANR	1709295	PrimaryExpression	1		1708745	1					
ANR	1709296	Argument	match_len		1708745	2					
ANR	1709297	Identifier	match_len		1708745	0					
ANR	1709298	ExpressionStatement	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( return_value ) , & tmp )"	1830:7:56592:56655	1708745	1	True				
ANR	1709299	CallExpression	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( return_value ) , & tmp )"		1708745	0					
ANR	1709300	Callee	zend_hash_next_index_insert_new		1708745	0					
ANR	1709301	Identifier	zend_hash_next_index_insert_new		1708745	0					
ANR	1709302	ArgumentList	Z_ARRVAL_P ( return_value )		1708745	1					
ANR	1709303	Argument	Z_ARRVAL_P ( return_value )		1708745	0					
ANR	1709304	CallExpression	Z_ARRVAL_P ( return_value )		1708745	0					
ANR	1709305	Callee	Z_ARRVAL_P		1708745	0					
ANR	1709306	Identifier	Z_ARRVAL_P		1708745	0					
ANR	1709307	ArgumentList	return_value		1708745	1					
ANR	1709308	Argument	return_value		1708745	0					
ANR	1709309	Identifier	return_value		1708745	0					
ANR	1709310	Argument	& tmp		1708745	1					
ANR	1709311	UnaryOperationExpression	& tmp		1708745	0					
ANR	1709312	UnaryOperator	&		1708745	0					
ANR	1709313	Identifier	tmp		1708745	1					
ANR	1709314	ElseStatement	else		1708745	0					
ANR	1709315	IfStatement	if ( count == PCRE_ERROR_NOMATCH )		1708745	0					
ANR	1709316	Condition	count == PCRE_ERROR_NOMATCH	1835:13:56696:56722	1708745	0	True				
ANR	1709317	EqualityExpression	count == PCRE_ERROR_NOMATCH		1708745	0		==			
ANR	1709318	Identifier	count		1708745	0					
ANR	1709319	Identifier	PCRE_ERROR_NOMATCH		1708745	1					
ANR	1709320	CompoundStatement		106:42:3694:3694	1708745	1					
ANR	1709321	IfStatement	if ( g_notempty != 0 && start_offset < subject_len )		1708745	0					
ANR	1709322	Condition	g_notempty != 0 && start_offset < subject_len	1840:7:56996:57040	1708745	0	True				
ANR	1709323	AndExpression	g_notempty != 0 && start_offset < subject_len		1708745	0		&&			
ANR	1709324	EqualityExpression	g_notempty != 0		1708745	0		!=			
ANR	1709325	Identifier	g_notempty		1708745	0					
ANR	1709326	PrimaryExpression	0		1708745	1					
ANR	1709327	RelationalExpression	start_offset < subject_len		1708745	1		<			
ANR	1709328	Identifier	start_offset		1708745	0					
ANR	1709329	Identifier	subject_len		1708745	1					
ANR	1709330	CompoundStatement		111:54:4012:4012	1708745	1					
ANR	1709331	IfStatement	if ( pce -> compile_options & PCRE_UTF8 )		1708745	0					
ANR	1709332	Condition	pce -> compile_options & PCRE_UTF8	1841:8:57053:57084	1708745	0	True				
ANR	1709333	BitAndExpression	pce -> compile_options & PCRE_UTF8		1708745	0		&			
ANR	1709334	PtrMemberAccess	pce -> compile_options		1708745	0					
ANR	1709335	Identifier	pce		1708745	0					
ANR	1709336	Identifier	compile_options		1708745	1					
ANR	1709337	Identifier	PCRE_UTF8		1708745	1					
ANR	1709338	CompoundStatement		112:42:4056:4056	1708745	1					
ANR	1709339	IfStatement	if ( re_bump == NULL )		1708745	0					
ANR	1709340	Condition	re_bump == NULL	1842:9:57098:57112	1708745	0	True				
ANR	1709341	EqualityExpression	re_bump == NULL		1708745	0		==			
ANR	1709342	Identifier	re_bump		1708745	0					
ANR	1709343	Identifier	NULL		1708745	1					
ANR	1709344	CompoundStatement		115:6:4109:4177	1708745	1					
ANR	1709345	IdentifierDeclStatement	int dummy ;	1843:6:57123:57132	1708745	0	True				
ANR	1709346	IdentifierDecl	dummy		1708745	0					
ANR	1709347	IdentifierDeclType	int		1708745	0					
ANR	1709348	Identifier	dummy		1708745	1					
ANR	1709349	IdentifierDeclStatement	"zend_string * regex = zend_string_init ( ""/./us"" , sizeof ( ""/./us"" ) - 1 , 0 ) ;"	1844:6:57140:57208	1708745	1	True				
ANR	1709350	IdentifierDecl	"* regex = zend_string_init ( ""/./us"" , sizeof ( ""/./us"" ) - 1 , 0 )"		1708745	0					
ANR	1709351	IdentifierDeclType	zend_string *		1708745	0					
ANR	1709352	Identifier	regex		1708745	1					
ANR	1709353	AssignmentExpression	"* regex = zend_string_init ( ""/./us"" , sizeof ( ""/./us"" ) - 1 , 0 )"		1708745	2		=			
ANR	1709354	Identifier	regex		1708745	0					
ANR	1709355	CallExpression	"zend_string_init ( ""/./us"" , sizeof ( ""/./us"" ) - 1 , 0 )"		1708745	1					
ANR	1709356	Callee	zend_string_init		1708745	0					
ANR	1709357	Identifier	zend_string_init		1708745	0					
ANR	1709358	ArgumentList	"""/./us"""		1708745	1					
ANR	1709359	Argument	"""/./us"""		1708745	0					
ANR	1709360	PrimaryExpression	"""/./us"""		1708745	0					
ANR	1709361	Argument	"sizeof ( ""/./us"" ) - 1"		1708745	1					
ANR	1709362	AdditiveExpression	"sizeof ( ""/./us"" ) - 1"		1708745	0		-			
ANR	1709363	SizeofExpression	"sizeof ( ""/./us"" )"		1708745	0					
ANR	1709364	Sizeof	sizeof		1708745	0					
ANR	1709365	PrimaryExpression	"""/./us"""		1708745	1					
ANR	1709366	PrimaryExpression	1		1708745	1					
ANR	1709367	Argument	0		1708745	2					
ANR	1709368	PrimaryExpression	0		1708745	0					
ANR	1709369	ExpressionStatement	"re_bump = pcre_get_compiled_regex ( regex , & extra_bump , & dummy )"	1845:6:57216:57277	1708745	2	True				
ANR	1709370	AssignmentExpression	"re_bump = pcre_get_compiled_regex ( regex , & extra_bump , & dummy )"		1708745	0		=			
ANR	1709371	Identifier	re_bump		1708745	0					
ANR	1709372	CallExpression	"pcre_get_compiled_regex ( regex , & extra_bump , & dummy )"		1708745	1					
ANR	1709373	Callee	pcre_get_compiled_regex		1708745	0					
ANR	1709374	Identifier	pcre_get_compiled_regex		1708745	0					
ANR	1709375	ArgumentList	regex		1708745	1					
ANR	1709376	Argument	regex		1708745	0					
ANR	1709377	Identifier	regex		1708745	0					
ANR	1709378	Argument	& extra_bump		1708745	1					
ANR	1709379	UnaryOperationExpression	& extra_bump		1708745	0					
ANR	1709380	UnaryOperator	&		1708745	0					
ANR	1709381	Identifier	extra_bump		1708745	1					
ANR	1709382	Argument	& dummy		1708745	2					
ANR	1709383	UnaryOperationExpression	& dummy		1708745	0					
ANR	1709384	UnaryOperator	&		1708745	0					
ANR	1709385	Identifier	dummy		1708745	1					
ANR	1709386	ExpressionStatement	zend_string_release ( regex )	1846:6:57285:57311	1708745	3	True				
ANR	1709387	CallExpression	zend_string_release ( regex )		1708745	0					
ANR	1709388	Callee	zend_string_release		1708745	0					
ANR	1709389	Identifier	zend_string_release		1708745	0					
ANR	1709390	ArgumentList	regex		1708745	1					
ANR	1709391	Argument	regex		1708745	0					
ANR	1709392	Identifier	regex		1708745	0					
ANR	1709393	IfStatement	if ( re_bump == NULL )		1708745	4					
ANR	1709394	Condition	re_bump == NULL	1847:10:57323:57337	1708745	0	True				
ANR	1709395	EqualityExpression	re_bump == NULL		1708745	0		==			
ANR	1709396	Identifier	re_bump		1708745	0					
ANR	1709397	Identifier	NULL		1708745	1					
ANR	1709398	CompoundStatement		118:27:4309:4309	1708745	1					
ANR	1709399	ExpressionStatement	RETURN_FALSE	1848:7:57349:57361	1708745	0	True				
ANR	1709400	Identifier	RETURN_FALSE		1708745	0					
ANR	1709401	ExpressionStatement	"count = pcre_exec ( re_bump , extra_bump , subject , subject_len , start_offset , exoptions , offsets , size_offsets )"	1851:5:57383:57509	1708745	1	True				
ANR	1709402	AssignmentExpression	"count = pcre_exec ( re_bump , extra_bump , subject , subject_len , start_offset , exoptions , offsets , size_offsets )"		1708745	0		=			
ANR	1709403	Identifier	count		1708745	0					
ANR	1709404	CallExpression	"pcre_exec ( re_bump , extra_bump , subject , subject_len , start_offset , exoptions , offsets , size_offsets )"		1708745	1					
ANR	1709405	Callee	pcre_exec		1708745	0					
ANR	1709406	Identifier	pcre_exec		1708745	0					
ANR	1709407	ArgumentList	re_bump		1708745	1					
ANR	1709408	Argument	re_bump		1708745	0					
ANR	1709409	Identifier	re_bump		1708745	0					
ANR	1709410	Argument	extra_bump		1708745	1					
ANR	1709411	Identifier	extra_bump		1708745	0					
ANR	1709412	Argument	subject		1708745	2					
ANR	1709413	Identifier	subject		1708745	0					
ANR	1709414	Argument	subject_len		1708745	3					
ANR	1709415	Identifier	subject_len		1708745	0					
ANR	1709416	Argument	start_offset		1708745	4					
ANR	1709417	Identifier	start_offset		1708745	0					
ANR	1709418	Argument	exoptions		1708745	5					
ANR	1709419	Identifier	exoptions		1708745	0					
ANR	1709420	Argument	offsets		1708745	6					
ANR	1709421	Identifier	offsets		1708745	0					
ANR	1709422	Argument	size_offsets		1708745	7					
ANR	1709423	Identifier	size_offsets		1708745	0					
ANR	1709424	IfStatement	if ( count < 1 )		1708745	2					
ANR	1709425	Condition	count < 1	1854:9:57520:57528	1708745	0	True				
ANR	1709426	RelationalExpression	count < 1		1708745	0		<			
ANR	1709427	Identifier	count		1708745	0					
ANR	1709428	PrimaryExpression	1		1708745	1					
ANR	1709429	CompoundStatement		125:20:4500:4500	1708745	1					
ANR	1709430	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Unknown error"" )"	1855:6:57539:57589	1708745	0	True				
ANR	1709431	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Unknown error"" )"		1708745	0					
ANR	1709432	Callee	php_error_docref		1708745	0					
ANR	1709433	Identifier	php_error_docref		1708745	0					
ANR	1709434	ArgumentList	NULL		1708745	1					
ANR	1709435	Argument	NULL		1708745	0					
ANR	1709436	Identifier	NULL		1708745	0					
ANR	1709437	Argument	E_WARNING		1708745	1					
ANR	1709438	Identifier	E_WARNING		1708745	0					
ANR	1709439	Argument	"""Unknown error"""		1708745	2					
ANR	1709440	PrimaryExpression	"""Unknown error"""		1708745	0					
ANR	1709441	ExpressionStatement	RETURN_FALSE	1856:6:57597:57609	1708745	1	True				
ANR	1709442	Identifier	RETURN_FALSE		1708745	0					
ANR	1709443	ElseStatement	else		1708745	0					
ANR	1709444	CompoundStatement		129:11:4598:4598	1708745	0					
ANR	1709445	ExpressionStatement	offsets [ 0 ] = start_offset	1859:5:57636:57661	1708745	0	True				
ANR	1709446	AssignmentExpression	offsets [ 0 ] = start_offset		1708745	0		=			
ANR	1709447	ArrayIndexing	offsets [ 0 ]		1708745	0					
ANR	1709448	Identifier	offsets		1708745	0					
ANR	1709449	PrimaryExpression	0		1708745	1					
ANR	1709450	Identifier	start_offset		1708745	1					
ANR	1709451	ExpressionStatement	offsets [ 1 ] = start_offset + 1	1860:5:57668:57697	1708745	1	True				
ANR	1709452	AssignmentExpression	offsets [ 1 ] = start_offset + 1		1708745	0		=			
ANR	1709453	ArrayIndexing	offsets [ 1 ]		1708745	0					
ANR	1709454	Identifier	offsets		1708745	0					
ANR	1709455	PrimaryExpression	1		1708745	1					
ANR	1709456	AdditiveExpression	start_offset + 1		1708745	1		+			
ANR	1709457	Identifier	start_offset		1708745	0					
ANR	1709458	PrimaryExpression	1		1708745	1					
ANR	1709459	ElseStatement	else		1708745	0					
ANR	1709460	BreakStatement	break ;	1863:4:57719:57724	1708745	0	True				
ANR	1709461	ElseStatement	else		1708745	0					
ANR	1709462	CompoundStatement		135:9:4704:4704	1708745	0					
ANR	1709463	ExpressionStatement	pcre_handle_exec_error ( count )	1865:3:57740:57769	1708745	0	True				
ANR	1709464	CallExpression	pcre_handle_exec_error ( count )		1708745	0					
ANR	1709465	Callee	pcre_handle_exec_error		1708745	0					
ANR	1709466	Identifier	pcre_handle_exec_error		1708745	0					
ANR	1709467	ArgumentList	count		1708745	1					
ANR	1709468	Argument	count		1708745	0					
ANR	1709469	Identifier	count		1708745	0					
ANR	1709470	BreakStatement	break ;	1866:3:57774:57779	1708745	1	True				
ANR	1709471	ExpressionStatement	g_notempty = ( offsets [ 1 ] == offsets [ 0 ] ) ? PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED : 0	1873:2:58063:58145	1708745	4	True				
ANR	1709472	AssignmentExpression	g_notempty = ( offsets [ 1 ] == offsets [ 0 ] ) ? PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED : 0		1708745	0		=			
ANR	1709473	Identifier	g_notempty		1708745	0					
ANR	1709474	ConditionalExpression	( offsets [ 1 ] == offsets [ 0 ] ) ? PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED : 0		1708745	1					
ANR	1709475	Condition	offsets [ 1 ] == offsets [ 0 ]		1708745	0					
ANR	1709476	EqualityExpression	offsets [ 1 ] == offsets [ 0 ]		1708745	0		==			
ANR	1709477	ArrayIndexing	offsets [ 1 ]		1708745	0					
ANR	1709478	Identifier	offsets		1708745	0					
ANR	1709479	PrimaryExpression	1		1708745	1					
ANR	1709480	ArrayIndexing	offsets [ 0 ]		1708745	1					
ANR	1709481	Identifier	offsets		1708745	0					
ANR	1709482	PrimaryExpression	0		1708745	1					
ANR	1709483	InclusiveOrExpression	PCRE_NOTEMPTY_ATSTART | PCRE_ANCHORED		1708745	1		|			
ANR	1709484	Identifier	PCRE_NOTEMPTY_ATSTART		1708745	0					
ANR	1709485	Identifier	PCRE_ANCHORED		1708745	1					
ANR	1709486	PrimaryExpression	0		1708745	2					
ANR	1709487	ExpressionStatement	start_offset = offsets [ 1 ]	1876:2:58214:58239	1708745	5	True				
ANR	1709488	AssignmentExpression	start_offset = offsets [ 1 ]		1708745	0		=			
ANR	1709489	Identifier	start_offset		1708745	0					
ANR	1709490	ArrayIndexing	offsets [ 1 ]		1708745	1					
ANR	1709491	Identifier	offsets		1708745	0					
ANR	1709492	PrimaryExpression	1		1708745	1					
ANR	1709493	ExpressionStatement	start_offset = ( int ) ( last_match - subject )	1880:1:58247:58289	1708745	33	True				
ANR	1709494	AssignmentExpression	start_offset = ( int ) ( last_match - subject )		1708745	0		=			
ANR	1709495	Identifier	start_offset		1708745	0					
ANR	1709496	CastExpression	( int ) ( last_match - subject )		1708745	1					
ANR	1709497	CastTarget	int		1708745	0					
ANR	1709498	AdditiveExpression	last_match - subject		1708745	1		-			
ANR	1709499	Identifier	last_match		1708745	0					
ANR	1709500	Identifier	subject		1708745	1					
ANR	1709501	IfStatement	if ( ! no_empty || start_offset < subject_len )		1708745	34					
ANR	1709502	Condition	! no_empty || start_offset < subject_len	1882:5:58382:58420	1708745	0	True				
ANR	1709503	OrExpression	! no_empty || start_offset < subject_len		1708745	0		||			
ANR	1709504	UnaryOperationExpression	! no_empty		1708745	0					
ANR	1709505	UnaryOperator	!		1708745	0					
ANR	1709506	Identifier	no_empty		1708745	1					
ANR	1709507	RelationalExpression	start_offset < subject_len		1708745	1		<			
ANR	1709508	Identifier	start_offset		1708745	0					
ANR	1709509	Identifier	subject_len		1708745	1					
ANR	1709510	CompoundStatement		154:1:5393:5393	1708745	1					
ANR	1709511	IfStatement	if ( offset_capture )		1708745	0					
ANR	1709512	Condition	offset_capture	1884:6:58432:58445	1708745	0	True				
ANR	1709513	Identifier	offset_capture		1708745	0					
ANR	1709514	CompoundStatement		155:22:5417:5417	1708745	1					
ANR	1709515	ExpressionStatement	"add_offset_pair ( return_value , & subject [ start_offset ] , subject_len - start_offset , start_offset , NULL )"	1886:3:58516:58617	1708745	0	True				
ANR	1709516	CallExpression	"add_offset_pair ( return_value , & subject [ start_offset ] , subject_len - start_offset , start_offset , NULL )"		1708745	0					
ANR	1709517	Callee	add_offset_pair		1708745	0					
ANR	1709518	Identifier	add_offset_pair		1708745	0					
ANR	1709519	ArgumentList	return_value		1708745	1					
ANR	1709520	Argument	return_value		1708745	0					
ANR	1709521	Identifier	return_value		1708745	0					
ANR	1709522	Argument	& subject [ start_offset ]		1708745	1					
ANR	1709523	UnaryOperationExpression	& subject [ start_offset ]		1708745	0					
ANR	1709524	UnaryOperator	&		1708745	0					
ANR	1709525	ArrayIndexing	subject [ start_offset ]		1708745	1					
ANR	1709526	Identifier	subject		1708745	0					
ANR	1709527	Identifier	start_offset		1708745	1					
ANR	1709528	Argument	subject_len - start_offset		1708745	2					
ANR	1709529	AdditiveExpression	subject_len - start_offset		1708745	0		-			
ANR	1709530	Identifier	subject_len		1708745	0					
ANR	1709531	Identifier	start_offset		1708745	1					
ANR	1709532	Argument	start_offset		1708745	3					
ANR	1709533	Identifier	start_offset		1708745	0					
ANR	1709534	Argument	NULL		1708745	4					
ANR	1709535	Identifier	NULL		1708745	0					
ANR	1709536	ElseStatement	else		1708745	0					
ANR	1709537	CompoundStatement		158:9:5597:5597	1708745	0					
ANR	1709538	ExpressionStatement	"ZVAL_STRINGL ( & tmp , last_match , subject + subject_len - last_match )"	1889:3:58681:58747	1708745	0	True				
ANR	1709539	CallExpression	"ZVAL_STRINGL ( & tmp , last_match , subject + subject_len - last_match )"		1708745	0					
ANR	1709540	Callee	ZVAL_STRINGL		1708745	0					
ANR	1709541	Identifier	ZVAL_STRINGL		1708745	0					
ANR	1709542	ArgumentList	& tmp		1708745	1					
ANR	1709543	Argument	& tmp		1708745	0					
ANR	1709544	UnaryOperationExpression	& tmp		1708745	0					
ANR	1709545	UnaryOperator	&		1708745	0					
ANR	1709546	Identifier	tmp		1708745	1					
ANR	1709547	Argument	last_match		1708745	1					
ANR	1709548	Identifier	last_match		1708745	0					
ANR	1709549	Argument	subject + subject_len - last_match		1708745	2					
ANR	1709550	AdditiveExpression	subject + subject_len - last_match		1708745	0		+			
ANR	1709551	Identifier	subject		1708745	0					
ANR	1709552	AdditiveExpression	subject_len - last_match		1708745	1		-			
ANR	1709553	Identifier	subject_len		1708745	0					
ANR	1709554	Identifier	last_match		1708745	1					
ANR	1709555	ExpressionStatement	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( return_value ) , & tmp )"	1890:3:58752:58815	1708745	1	True				
ANR	1709556	CallExpression	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( return_value ) , & tmp )"		1708745	0					
ANR	1709557	Callee	zend_hash_next_index_insert_new		1708745	0					
ANR	1709558	Identifier	zend_hash_next_index_insert_new		1708745	0					
ANR	1709559	ArgumentList	Z_ARRVAL_P ( return_value )		1708745	1					
ANR	1709560	Argument	Z_ARRVAL_P ( return_value )		1708745	0					
ANR	1709561	CallExpression	Z_ARRVAL_P ( return_value )		1708745	0					
ANR	1709562	Callee	Z_ARRVAL_P		1708745	0					
ANR	1709563	Identifier	Z_ARRVAL_P		1708745	0					
ANR	1709564	ArgumentList	return_value		1708745	1					
ANR	1709565	Argument	return_value		1708745	0					
ANR	1709566	Identifier	return_value		1708745	0					
ANR	1709567	Argument	& tmp		1708745	1					
ANR	1709568	UnaryOperationExpression	& tmp		1708745	0					
ANR	1709569	UnaryOperator	&		1708745	0					
ANR	1709570	Identifier	tmp		1708745	1					
ANR	1709571	IfStatement	if ( size_offsets <= 32 )		1708745	35					
ANR	1709572	Condition	size_offsets <= 32	1896:5:58847:58864	1708745	0	True				
ANR	1709573	RelationalExpression	size_offsets <= 32		1708745	0		<=			
ANR	1709574	Identifier	size_offsets		1708745	0					
ANR	1709575	PrimaryExpression	32		1708745	1					
ANR	1709576	CompoundStatement		167:25:5836:5836	1708745	1					
ANR	1709577	ExpressionStatement	"free_alloca ( offsets , use_heap )"	1897:2:58871:58901	1708745	0	True				
ANR	1709578	CallExpression	"free_alloca ( offsets , use_heap )"		1708745	0					
ANR	1709579	Callee	free_alloca		1708745	0					
ANR	1709580	Identifier	free_alloca		1708745	0					
ANR	1709581	ArgumentList	offsets		1708745	1					
ANR	1709582	Argument	offsets		1708745	0					
ANR	1709583	Identifier	offsets		1708745	0					
ANR	1709584	Argument	use_heap		1708745	1					
ANR	1709585	Identifier	use_heap		1708745	0					
ANR	1709586	ElseStatement	else		1708745	0					
ANR	1709587	CompoundStatement		169:8:5880:5880	1708745	0					
ANR	1709588	ExpressionStatement	efree ( offsets )	1899:2:58915:58929	1708745	0	True				
ANR	1709589	CallExpression	efree ( offsets )		1708745	0					
ANR	1709590	Callee	efree		1708745	0					
ANR	1709591	Identifier	efree		1708745	0					
ANR	1709592	ArgumentList	offsets		1708745	1					
ANR	1709593	Argument	offsets		1708745	0					
ANR	1709594	Identifier	offsets		1708745	0					
ANR	1709595	ReturnType	PHPAPI void		1708745	1					
ANR	1709596	Identifier	php_pcre_split_impl		1708745	2					
ANR	1709597	ParameterList	"pcre_cache_entry * pce , char * subject , int subject_len , zval * return_value , zend_long limit_val , zend_long flags"		1708745	3					
ANR	1709598	Parameter	pcre_cache_entry * pce	1728:32:52916:52936	1708745	0	True				
ANR	1709599	ParameterType	pcre_cache_entry *		1708745	0					
ANR	1709600	Identifier	pce		1708745	1					
ANR	1709601	Parameter	char * subject	1728:55:52939:52951	1708745	1	True				
ANR	1709602	ParameterType	char *		1708745	0					
ANR	1709603	Identifier	subject		1708745	1					
ANR	1709604	Parameter	int subject_len	1728:70:52954:52968	1708745	2	True				
ANR	1709605	ParameterType	int		1708745	0					
ANR	1709606	Identifier	subject_len		1708745	1					
ANR	1709607	Parameter	zval * return_value	1728:87:52971:52988	1708745	3	True				
ANR	1709608	ParameterType	zval *		1708745	0					
ANR	1709609	Identifier	return_value		1708745	1					
ANR	1709610	Parameter	zend_long limit_val	1729:1:52992:53010	1708745	4	True				
ANR	1709611	ParameterType	zend_long		1708745	0					
ANR	1709612	Identifier	limit_val		1708745	1					
ANR	1709613	Parameter	zend_long flags	1729:22:53013:53027	1708745	5	True				
ANR	1709614	ParameterType	zend_long		1708745	0					
ANR	1709615	Identifier	flags		1708745	1					
ANR	1709616	CFGEntryNode	ENTRY		1708745		True				
ANR	1709617	CFGExitNode	EXIT		1708745		True				
ANR	1709618	Symbol	PREG_SPLIT_OFFSET_CAPTURE		1708745						
ANR	1709619	Symbol	pce -> extra		1708745						
ANR	1709620	Symbol	pcre_exec		1708745						
ANR	1709621	Symbol	match_len		1708745						
ANR	1709622	Symbol	subject		1708745						
ANR	1709623	Symbol	g_notempty		1708745						
ANR	1709624	Symbol	pce -> compile_options		1708745						
ANR	1709625	Symbol	re_bump		1708745						
ANR	1709626	Symbol	extra_bump		1708745						
ANR	1709627	Symbol	extra -> flags		1708745						
ANR	1709628	Symbol	dummy		1708745						
ANR	1709629	Symbol	zend_string_init		1708745						
ANR	1709630	Symbol	subject_len		1708745						
ANR	1709631	Symbol	tmp		1708745						
ANR	1709632	Symbol	exoptions		1708745						
ANR	1709633	Symbol	NULL		1708745						
ANR	1709634	Symbol	count		1708745						
ANR	1709635	Symbol	E_NOTICE		1708745						
ANR	1709636	Symbol	~PCRE_EXTRA_MARK		1708745						
ANR	1709637	Symbol	PCRE_ERROR_NOMATCH		1708745						
ANR	1709638	Symbol	& extra_data		1708745						
ANR	1709639	Symbol	* extra		1708745						
ANR	1709640	Symbol	regex		1708745						
ANR	1709641	Symbol	pce -> re		1708745						
ANR	1709642	Symbol	error_code		1708745						
ANR	1709643	Symbol	& tmp		1708745						
ANR	1709644	Symbol	extra_data . flags		1708745						
ANR	1709645	Symbol	* pce		1708745						
ANR	1709646	Symbol	no_empty		1708745						
ANR	1709647	Symbol	use_heap		1708745						
ANR	1709648	Symbol	& extra_bump		1708745						
ANR	1709649	Symbol	return_value		1708745						
ANR	1709650	Symbol	offset_capture		1708745						
ANR	1709651	Symbol	backtrack_limit		1708745						
ANR	1709652	Symbol	pce -> capture_count		1708745						
ANR	1709653	Symbol	flags		1708745						
ANR	1709654	Symbol	extra -> match_limit		1708745						
ANR	1709655	Symbol	extra -> match_limit_recursion		1708745						
ANR	1709656	Symbol	E_WARNING		1708745						
ANR	1709657	Symbol	& dummy		1708745						
ANR	1709658	Symbol	pce		1708745						
ANR	1709659	Symbol	recursion_limit		1708745						
ANR	1709660	Symbol	extra		1708745						
ANR	1709661	Symbol	PCRE_NO_UTF8_CHECK		1708745						
ANR	1709662	Symbol	Z_ARRVAL_P		1708745						
ANR	1709663	Symbol	size_offsets		1708745						
ANR	1709664	Symbol	next_offset		1708745						
ANR	1709665	Symbol	* offsets		1708745						
ANR	1709666	Symbol	limit_val		1708745						
ANR	1709667	Symbol	PREG_SPLIT_DELIM_CAPTURE		1708745						
ANR	1709668	Symbol	PHP_PCRE_NO_ERROR		1708745						
ANR	1709669	Symbol	pcre_get_compiled_regex		1708745						
ANR	1709670	Symbol	PCRE_ANCHORED		1708745						
ANR	1709671	Symbol	i		1708745						
ANR	1709672	Symbol	PREG_SPLIT_NO_EMPTY		1708745						
ANR	1709673	Symbol	PCRE_EXTRA_MATCH_LIMIT_RECURSION		1708745						
ANR	1709674	Symbol	PCRE_NOTEMPTY_ATSTART		1708745						
ANR	1709675	Symbol	last_match		1708745						
ANR	1709676	Symbol	* i		1708745						
ANR	1709677	Symbol	delim_capture		1708745						
ANR	1709678	Symbol	PCRE_G		1708745						
ANR	1709679	Symbol	extra_data		1708745						
ANR	1709680	Symbol	offsets		1708745						
ANR	1709681	Symbol	PCRE_EXTRA_MATCH_LIMIT		1708745						
ANR	1709682	Symbol	do_alloca		1708745						
ANR	1709683	Symbol	start_offset		1708745						
ANR	1709684	Symbol	PCRE_UTF8		1708745						
ANR	1709685	Symbol	safe_emalloc		1708745						
ANR	1709686	DeclStmt									
ANR	1709687	Decl							size_t	size_t	in_str_len
ANR	1709688	DeclStmt									
ANR	1709689	Decl							char	char *	in_str
ANR	1709690	DeclStmt									
ANR	1709691	Decl							char	char *	in_str_end
ANR	1709692	DeclStmt									
ANR	1709693	Decl							size_t	size_t	delim_len
ANR	1709694	DeclStmt									
ANR	1709695	Decl							char	char *	delim
ANR	1709696	DeclStmt									
ANR	1709697	Decl							zend_string	zend_string *	out_str
ANR	1709698	DeclStmt									
ANR	1709699	Decl							char	char *	p
ANR	1709700	Decl							char	char *	q
ANR	1709701	Decl							char	char	delim_char
ANR	1709702	Decl							char	char	c
ANR	1709703	DeclStmt									
ANR	1709704	Decl							zend_bool	zend_bool	quote_delim
ANR	1709705	DeclStmt									
ANR	1709706	Decl							zend_string	zend_string *	regex
ANR	1709707	DeclStmt									
ANR	1709708	Decl							zval	zval *	input
ANR	1709709	DeclStmt									
ANR	1709710	Decl							zend_long	zend_long	flags
ANR	1709711	DeclStmt									
ANR	1709712	Decl							pcre_cache_entry	pcre_cache_entry *	pce
ANR	1709713	Function	php_pcre_grep_impl	2035:0:62098:64690							
ANR	1709714	FunctionDef	"php_pcre_grep_impl (pcre_cache_entry * pce , zval * input , zval * return_value , zend_long flags)"		1709713	0					
ANR	1709715	CompoundStatement		2036:0:62213:64690	1709713	0					
ANR	1709716	IdentifierDeclStatement	zval * entry ;	2037:1:62216:62232	1709713	0	True				
ANR	1709717	IdentifierDecl	* entry		1709713	0					
ANR	1709718	IdentifierDeclType	zval *		1709713	0					
ANR	1709719	Identifier	entry		1709713	1					
ANR	1709720	IdentifierDeclStatement	pcre_extra * extra = pce -> extra ;	2038:1:62272:62303	1709713	1	True				
ANR	1709721	IdentifierDecl	* extra = pce -> extra		1709713	0					
ANR	1709722	IdentifierDeclType	pcre_extra *		1709713	0					
ANR	1709723	Identifier	extra		1709713	1					
ANR	1709724	AssignmentExpression	* extra = pce -> extra		1709713	2		=			
ANR	1709725	Identifier	extra		1709713	0					
ANR	1709726	PtrMemberAccess	pce -> extra		1709713	1					
ANR	1709727	Identifier	pce		1709713	0					
ANR	1709728	Identifier	extra		1709713	1					
ANR	1709729	IdentifierDeclStatement	pcre_extra extra_data ;	2039:1:62337:62360	1709713	2	True				
ANR	1709730	IdentifierDecl	extra_data		1709713	0					
ANR	1709731	IdentifierDeclType	pcre_extra		1709713	0					
ANR	1709732	Identifier	extra_data		1709713	1					
ANR	1709733	IdentifierDeclStatement	int * offsets ;	2040:1:62400:62415	1709713	3	True				
ANR	1709734	IdentifierDecl	* offsets		1709713	0					
ANR	1709735	IdentifierDeclType	int *		1709713	0					
ANR	1709736	Identifier	offsets		1709713	1					
ANR	1709737	IdentifierDeclStatement	int size_offsets ;	2041:1:62454:62474	1709713	4	True				
ANR	1709738	IdentifierDecl	size_offsets		1709713	0					
ANR	1709739	IdentifierDeclType	int		1709713	0					
ANR	1709740	Identifier	size_offsets		1709713	1					
ANR	1709741	IdentifierDeclStatement	int count = 0 ;	2042:1:62510:62527	1709713	5	True				
ANR	1709742	IdentifierDecl	count = 0		1709713	0					
ANR	1709743	IdentifierDeclType	int		1709713	0					
ANR	1709744	Identifier	count		1709713	1					
ANR	1709745	AssignmentExpression	count = 0		1709713	2		=			
ANR	1709746	Identifier	count		1709713	0					
ANR	1709747	PrimaryExpression	0		1709713	1					
ANR	1709748	IdentifierDeclStatement	zend_string * string_key ;	2043:1:62567:62591	1709713	6	True				
ANR	1709749	IdentifierDecl	* string_key		1709713	0					
ANR	1709750	IdentifierDeclType	zend_string *		1709713	0					
ANR	1709751	Identifier	string_key		1709713	1					
ANR	1709752	IdentifierDeclStatement	zend_ulong num_key ;	2044:1:62594:62614	1709713	7	True				
ANR	1709753	IdentifierDecl	num_key		1709713	0					
ANR	1709754	IdentifierDeclType	zend_ulong		1709713	0					
ANR	1709755	Identifier	num_key		1709713	1					
ANR	1709756	IdentifierDeclStatement	zend_bool invert ;	2045:1:62617:62635	1709713	8	True				
ANR	1709757	IdentifierDecl	invert		1709713	0					
ANR	1709758	IdentifierDeclType	zend_bool		1709713	0					
ANR	1709759	Identifier	invert		1709713	1					
ANR	1709760	ExpressionStatement	ALLOCA_FLAG ( use_heap )	2047:1:62698:62719	1709713	9	True				
ANR	1709761	CallExpression	ALLOCA_FLAG ( use_heap )		1709713	0					
ANR	1709762	Callee	ALLOCA_FLAG		1709713	0					
ANR	1709763	Identifier	ALLOCA_FLAG		1709713	0					
ANR	1709764	ArgumentList	use_heap		1709713	1					
ANR	1709765	Argument	use_heap		1709713	0					
ANR	1709766	Identifier	use_heap		1709713	0					
ANR	1709767	ExpressionStatement	invert = flags & PREG_GREP_INVERT ? 1 : 0	2049:1:62723:62764	1709713	10	True				
ANR	1709768	AssignmentExpression	invert = flags & PREG_GREP_INVERT ? 1 : 0		1709713	0		=			
ANR	1709769	Identifier	invert		1709713	0					
ANR	1709770	ConditionalExpression	flags & PREG_GREP_INVERT ? 1 : 0		1709713	1					
ANR	1709771	Condition	flags & PREG_GREP_INVERT		1709713	0					
ANR	1709772	BitAndExpression	flags & PREG_GREP_INVERT		1709713	0		&			
ANR	1709773	Identifier	flags		1709713	0					
ANR	1709774	Identifier	PREG_GREP_INVERT		1709713	1					
ANR	1709775	PrimaryExpression	1		1709713	1					
ANR	1709776	PrimaryExpression	0		1709713	2					
ANR	1709777	IfStatement	if ( extra == NULL )		1709713	11					
ANR	1709778	Condition	extra == NULL	2051:5:62772:62784	1709713	0	True				
ANR	1709779	EqualityExpression	extra == NULL		1709713	0		==			
ANR	1709780	Identifier	extra		1709713	0					
ANR	1709781	Identifier	NULL		1709713	1					
ANR	1709782	CompoundStatement		16:20:573:573	1709713	1					
ANR	1709783	ExpressionStatement	extra_data . flags = PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION	2052:2:62791:62867	1709713	0	True				
ANR	1709784	AssignmentExpression	extra_data . flags = PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION		1709713	0		=			
ANR	1709785	MemberAccess	extra_data . flags		1709713	0					
ANR	1709786	Identifier	extra_data		1709713	0					
ANR	1709787	Identifier	flags		1709713	1					
ANR	1709788	InclusiveOrExpression	PCRE_EXTRA_MATCH_LIMIT | PCRE_EXTRA_MATCH_LIMIT_RECURSION		1709713	1		|			
ANR	1709789	Identifier	PCRE_EXTRA_MATCH_LIMIT		1709713	0					
ANR	1709790	Identifier	PCRE_EXTRA_MATCH_LIMIT_RECURSION		1709713	1					
ANR	1709791	ExpressionStatement	extra = & extra_data	2053:2:62871:62890	1709713	1	True				
ANR	1709792	AssignmentExpression	extra = & extra_data		1709713	0		=			
ANR	1709793	Identifier	extra		1709713	0					
ANR	1709794	UnaryOperationExpression	& extra_data		1709713	1					
ANR	1709795	UnaryOperator	&		1709713	0					
ANR	1709796	Identifier	extra_data		1709713	1					
ANR	1709797	ExpressionStatement	extra -> match_limit = ( unsigned long ) PCRE_G ( backtrack_limit )	2055:1:62896:62955	1709713	12	True				
ANR	1709798	AssignmentExpression	extra -> match_limit = ( unsigned long ) PCRE_G ( backtrack_limit )		1709713	0		=			
ANR	1709799	PtrMemberAccess	extra -> match_limit		1709713	0					
ANR	1709800	Identifier	extra		1709713	0					
ANR	1709801	Identifier	match_limit		1709713	1					
ANR	1709802	CastExpression	( unsigned long ) PCRE_G ( backtrack_limit )		1709713	1					
ANR	1709803	CastTarget	unsigned long		1709713	0					
ANR	1709804	CallExpression	PCRE_G ( backtrack_limit )		1709713	1					
ANR	1709805	Callee	PCRE_G		1709713	0					
ANR	1709806	Identifier	PCRE_G		1709713	0					
ANR	1709807	ArgumentList	backtrack_limit		1709713	1					
ANR	1709808	Argument	backtrack_limit		1709713	0					
ANR	1709809	Identifier	backtrack_limit		1709713	0					
ANR	1709810	ExpressionStatement	extra -> match_limit_recursion = ( unsigned long ) PCRE_G ( recursion_limit )	2056:1:62958:63027	1709713	13	True				
ANR	1709811	AssignmentExpression	extra -> match_limit_recursion = ( unsigned long ) PCRE_G ( recursion_limit )		1709713	0		=			
ANR	1709812	PtrMemberAccess	extra -> match_limit_recursion		1709713	0					
ANR	1709813	Identifier	extra		1709713	0					
ANR	1709814	Identifier	match_limit_recursion		1709713	1					
ANR	1709815	CastExpression	( unsigned long ) PCRE_G ( recursion_limit )		1709713	1					
ANR	1709816	CastTarget	unsigned long		1709713	0					
ANR	1709817	CallExpression	PCRE_G ( recursion_limit )		1709713	1					
ANR	1709818	Callee	PCRE_G		1709713	0					
ANR	1709819	Identifier	PCRE_G		1709713	0					
ANR	1709820	ArgumentList	recursion_limit		1709713	1					
ANR	1709821	Argument	recursion_limit		1709713	0					
ANR	1709822	Identifier	recursion_limit		1709713	0					
ANR	1709823	ExpressionStatement	extra -> flags &= ~PCRE_EXTRA_MARK	2058:1:63053:63085	1709713	14	True				
ANR	1709824	AssignmentExpression	extra -> flags &= ~PCRE_EXTRA_MARK		1709713	0		&=			
ANR	1709825	PtrMemberAccess	extra -> flags		1709713	0					
ANR	1709826	Identifier	extra		1709713	0					
ANR	1709827	Identifier	flags		1709713	1					
ANR	1709828	Identifier	~PCRE_EXTRA_MARK		1709713	1					
ANR	1709829	ExpressionStatement	size_offsets = ( pce -> capture_count + 1 ) * 3	2062:1:63172:63215	1709713	15	True				
ANR	1709830	AssignmentExpression	size_offsets = ( pce -> capture_count + 1 ) * 3		1709713	0		=			
ANR	1709831	Identifier	size_offsets		1709713	0					
ANR	1709832	MultiplicativeExpression	( pce -> capture_count + 1 ) * 3		1709713	1		*			
ANR	1709833	AdditiveExpression	pce -> capture_count + 1		1709713	0		+			
ANR	1709834	PtrMemberAccess	pce -> capture_count		1709713	0					
ANR	1709835	Identifier	pce		1709713	0					
ANR	1709836	Identifier	capture_count		1709713	1					
ANR	1709837	PrimaryExpression	1		1709713	1					
ANR	1709838	PrimaryExpression	3		1709713	1					
ANR	1709839	IfStatement	if ( size_offsets <= 32 )		1709713	16					
ANR	1709840	Condition	size_offsets <= 32	2063:5:63222:63239	1709713	0	True				
ANR	1709841	RelationalExpression	size_offsets <= 32		1709713	0		<=			
ANR	1709842	Identifier	size_offsets		1709713	0					
ANR	1709843	PrimaryExpression	32		1709713	1					
ANR	1709844	CompoundStatement		28:25:1028:1028	1709713	1					
ANR	1709845	ExpressionStatement	"offsets = ( int * ) do_alloca ( size_offsets * sizeof ( int ) , use_heap )"	2064:2:63246:63310	1709713	0	True				
ANR	1709846	AssignmentExpression	"offsets = ( int * ) do_alloca ( size_offsets * sizeof ( int ) , use_heap )"		1709713	0		=			
ANR	1709847	Identifier	offsets		1709713	0					
ANR	1709848	CastExpression	"( int * ) do_alloca ( size_offsets * sizeof ( int ) , use_heap )"		1709713	1					
ANR	1709849	CastTarget	int *		1709713	0					
ANR	1709850	CallExpression	"do_alloca ( size_offsets * sizeof ( int ) , use_heap )"		1709713	1					
ANR	1709851	Callee	do_alloca		1709713	0					
ANR	1709852	Identifier	do_alloca		1709713	0					
ANR	1709853	ArgumentList	size_offsets * sizeof ( int )		1709713	1					
ANR	1709854	Argument	size_offsets * sizeof ( int )		1709713	0					
ANR	1709855	MultiplicativeExpression	size_offsets * sizeof ( int )		1709713	0		*			
ANR	1709856	Identifier	size_offsets		1709713	0					
ANR	1709857	SizeofExpression	sizeof ( int )		1709713	1					
ANR	1709858	Sizeof	sizeof		1709713	0					
ANR	1709859	SizeofOperand	int		1709713	1					
ANR	1709860	Argument	use_heap		1709713	1					
ANR	1709861	Identifier	use_heap		1709713	0					
ANR	1709862	ElseStatement	else		1709713	0					
ANR	1709863	CompoundStatement		30:8:1106:1106	1709713	0					
ANR	1709864	ExpressionStatement	"offsets = ( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"	2066:2:63324:63383	1709713	0	True				
ANR	1709865	AssignmentExpression	"offsets = ( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1709713	0		=			
ANR	1709866	Identifier	offsets		1709713	0					
ANR	1709867	CastExpression	"( int * ) safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1709713	1					
ANR	1709868	CastTarget	int *		1709713	0					
ANR	1709869	CallExpression	"safe_emalloc ( size_offsets , sizeof ( int ) , 0 )"		1709713	1					
ANR	1709870	Callee	safe_emalloc		1709713	0					
ANR	1709871	Identifier	safe_emalloc		1709713	0					
ANR	1709872	ArgumentList	size_offsets		1709713	1					
ANR	1709873	Argument	size_offsets		1709713	0					
ANR	1709874	Identifier	size_offsets		1709713	0					
ANR	1709875	Argument	sizeof ( int )		1709713	1					
ANR	1709876	SizeofExpression	sizeof ( int )		1709713	0					
ANR	1709877	Sizeof	sizeof		1709713	0					
ANR	1709878	SizeofOperand	int		1709713	1					
ANR	1709879	Argument	0		1709713	2					
ANR	1709880	PrimaryExpression	0		1709713	0					
ANR	1709881	ExpressionStatement	array_init ( return_value )	2070:1:63421:63445	1709713	17	True				
ANR	1709882	CallExpression	array_init ( return_value )		1709713	0					
ANR	1709883	Callee	array_init		1709713	0					
ANR	1709884	Identifier	array_init		1709713	0					
ANR	1709885	ArgumentList	return_value		1709713	1					
ANR	1709886	Argument	return_value		1709713	0					
ANR	1709887	Identifier	return_value		1709713	0					
ANR	1709888	ExpressionStatement	PCRE_G ( error_code ) = PHP_PCRE_NO_ERROR	2072:1:63449:63487	1709713	18	True				
ANR	1709889	AssignmentExpression	PCRE_G ( error_code ) = PHP_PCRE_NO_ERROR		1709713	0		=			
ANR	1709890	CallExpression	PCRE_G ( error_code )		1709713	0					
ANR	1709891	Callee	PCRE_G		1709713	0					
ANR	1709892	Identifier	PCRE_G		1709713	0					
ANR	1709893	ArgumentList	error_code		1709713	1					
ANR	1709894	Argument	error_code		1709713	0					
ANR	1709895	Identifier	error_code		1709713	0					
ANR	1709896	Identifier	PHP_PCRE_NO_ERROR		1709713	1					
ANR	1709897	Statement	ZEND_HASH_FOREACH_KEY_VAL	2075:1:63525:63549	1709713	19	True				
ANR	1709898	Statement	(	2075:26:63550:63550	1709713	20	True				
ANR	1709899	Statement	Z_ARRVAL_P	2075:27:63551:63560	1709713	21	True				
ANR	1709900	Statement	(	2075:37:63561:63561	1709713	22	True				
ANR	1709901	Statement	input	2075:38:63562:63566	1709713	23	True				
ANR	1709902	Statement	)	2075:43:63567:63567	1709713	24	True				
ANR	1709903	Statement	","	2075:44:63568:63568	1709713	25	True				
ANR	1709904	Statement	num_key	2075:46:63570:63576	1709713	26	True				
ANR	1709905	Statement	","	2075:53:63577:63577	1709713	27	True				
ANR	1709906	Statement	string_key	2075:55:63579:63588	1709713	28	True				
ANR	1709907	Statement	","	2075:65:63589:63589	1709713	29	True				
ANR	1709908	Statement	entry	2075:67:63591:63595	1709713	30	True				
ANR	1709909	Statement	)	2075:72:63596:63596	1709713	31	True				
ANR	1709910	CompoundStatement		41:2:1388:1437	1709713	32					
ANR	1709911	IdentifierDeclStatement	zend_string * subject_str = zval_get_string ( entry ) ;	2076:2:63602:63651	1709713	0	True				
ANR	1709912	IdentifierDecl	* subject_str = zval_get_string ( entry )		1709713	0					
ANR	1709913	IdentifierDeclType	zend_string *		1709713	0					
ANR	1709914	Identifier	subject_str		1709713	1					
ANR	1709915	AssignmentExpression	* subject_str = zval_get_string ( entry )		1709713	2		=			
ANR	1709916	Identifier	subject_str		1709713	0					
ANR	1709917	CallExpression	zval_get_string ( entry )		1709713	1					
ANR	1709918	Callee	zval_get_string		1709713	0					
ANR	1709919	Identifier	zval_get_string		1709713	0					
ANR	1709920	ArgumentList	entry		1709713	1					
ANR	1709921	Argument	entry		1709713	0					
ANR	1709922	Identifier	entry		1709713	0					
ANR	1709923	ExpressionStatement	"count = pcre_exec ( pce -> re , extra , ZSTR_VAL ( subject_str ) , ( int ) ZSTR_LEN ( subject_str ) , 0 , 0 , offsets , size_offsets )"	2079:2:63682:63811	1709713	1	True				
ANR	1709924	AssignmentExpression	"count = pcre_exec ( pce -> re , extra , ZSTR_VAL ( subject_str ) , ( int ) ZSTR_LEN ( subject_str ) , 0 , 0 , offsets , size_offsets )"		1709713	0		=			
ANR	1709925	Identifier	count		1709713	0					
ANR	1709926	CallExpression	"pcre_exec ( pce -> re , extra , ZSTR_VAL ( subject_str ) , ( int ) ZSTR_LEN ( subject_str ) , 0 , 0 , offsets , size_offsets )"		1709713	1					
ANR	1709927	Callee	pcre_exec		1709713	0					
ANR	1709928	Identifier	pcre_exec		1709713	0					
ANR	1709929	ArgumentList	pce -> re		1709713	1					
ANR	1709930	Argument	pce -> re		1709713	0					
ANR	1709931	PtrMemberAccess	pce -> re		1709713	0					
ANR	1709932	Identifier	pce		1709713	0					
ANR	1709933	Identifier	re		1709713	1					
ANR	1709934	Argument	extra		1709713	1					
ANR	1709935	Identifier	extra		1709713	0					
ANR	1709936	Argument	ZSTR_VAL ( subject_str )		1709713	2					
ANR	1709937	CallExpression	ZSTR_VAL ( subject_str )		1709713	0					
ANR	1709938	Callee	ZSTR_VAL		1709713	0					
ANR	1709939	Identifier	ZSTR_VAL		1709713	0					
ANR	1709940	ArgumentList	subject_str		1709713	1					
ANR	1709941	Argument	subject_str		1709713	0					
ANR	1709942	Identifier	subject_str		1709713	0					
ANR	1709943	Argument	( int ) ZSTR_LEN ( subject_str )		1709713	3					
ANR	1709944	CastExpression	( int ) ZSTR_LEN ( subject_str )		1709713	0					
ANR	1709945	CastTarget	int		1709713	0					
ANR	1709946	CallExpression	ZSTR_LEN ( subject_str )		1709713	1					
ANR	1709947	Callee	ZSTR_LEN		1709713	0					
ANR	1709948	Identifier	ZSTR_LEN		1709713	0					
ANR	1709949	ArgumentList	subject_str		1709713	1					
ANR	1709950	Argument	subject_str		1709713	0					
ANR	1709951	Identifier	subject_str		1709713	0					
ANR	1709952	Argument	0		1709713	4					
ANR	1709953	PrimaryExpression	0		1709713	0					
ANR	1709954	Argument	0		1709713	5					
ANR	1709955	PrimaryExpression	0		1709713	0					
ANR	1709956	Argument	offsets		1709713	6					
ANR	1709957	Identifier	offsets		1709713	0					
ANR	1709958	Argument	size_offsets		1709713	7					
ANR	1709959	Identifier	size_offsets		1709713	0					
ANR	1709960	IfStatement	if ( count == 0 )		1709713	2					
ANR	1709961	Condition	count == 0	2084:6:63869:63878	1709713	0	True				
ANR	1709962	EqualityExpression	count == 0		1709713	0		==			
ANR	1709963	Identifier	count		1709713	0					
ANR	1709964	PrimaryExpression	0		1709713	1					
ANR	1709965	CompoundStatement		49:18:1667:1667	1709713	1					
ANR	1709966	ExpressionStatement	"php_error_docref ( NULL , E_NOTICE , ""Matched, but too many substrings"" )"	2085:3:63886:63954	1709713	0	True				
ANR	1709967	CallExpression	"php_error_docref ( NULL , E_NOTICE , ""Matched, but too many substrings"" )"		1709713	0					
ANR	1709968	Callee	php_error_docref		1709713	0					
ANR	1709969	Identifier	php_error_docref		1709713	0					
ANR	1709970	ArgumentList	NULL		1709713	1					
ANR	1709971	Argument	NULL		1709713	0					
ANR	1709972	Identifier	NULL		1709713	0					
ANR	1709973	Argument	E_NOTICE		1709713	1					
ANR	1709974	Identifier	E_NOTICE		1709713	0					
ANR	1709975	Argument	"""Matched, but too many substrings"""		1709713	2					
ANR	1709976	PrimaryExpression	"""Matched, but too many substrings"""		1709713	0					
ANR	1709977	ExpressionStatement	count = size_offsets / 3	2086:3:63959:63981	1709713	1	True				
ANR	1709978	AssignmentExpression	count = size_offsets / 3		1709713	0		=			
ANR	1709979	Identifier	count		1709713	0					
ANR	1709980	MultiplicativeExpression	size_offsets / 3		1709713	1		/			
ANR	1709981	Identifier	size_offsets		1709713	0					
ANR	1709982	PrimaryExpression	3		1709713	1					
ANR	1709983	ElseStatement	else		1709713	0					
ANR	1709984	IfStatement	if ( count < 0 && count != PCRE_ERROR_NOMATCH )		1709713	0					
ANR	1709985	Condition	count < 0 && count != PCRE_ERROR_NOMATCH	2087:13:63996:64035	1709713	0	True				
ANR	1709986	AndExpression	count < 0 && count != PCRE_ERROR_NOMATCH		1709713	0		&&			
ANR	1709987	RelationalExpression	count < 0		1709713	0		<			
ANR	1709988	Identifier	count		1709713	0					
ANR	1709989	PrimaryExpression	0		1709713	1					
ANR	1709990	EqualityExpression	count != PCRE_ERROR_NOMATCH		1709713	1		!=			
ANR	1709991	Identifier	count		1709713	0					
ANR	1709992	Identifier	PCRE_ERROR_NOMATCH		1709713	1					
ANR	1709993	CompoundStatement		52:55:1824:1824	1709713	1					
ANR	1709994	ExpressionStatement	pcre_handle_exec_error ( count )	2088:3:64043:64072	1709713	0	True				
ANR	1709995	CallExpression	pcre_handle_exec_error ( count )		1709713	0					
ANR	1709996	Callee	pcre_handle_exec_error		1709713	0					
ANR	1709997	Identifier	pcre_handle_exec_error		1709713	0					
ANR	1709998	ArgumentList	count		1709713	1					
ANR	1709999	Argument	count		1709713	0					
ANR	1710000	Identifier	count		1709713	0					
ANR	1710001	ExpressionStatement	zend_string_release ( subject_str )	2089:3:64077:64109	1709713	1	True				
ANR	1710002	CallExpression	zend_string_release ( subject_str )		1709713	0					
ANR	1710003	Callee	zend_string_release		1709713	0					
ANR	1710004	Identifier	zend_string_release		1709713	0					
ANR	1710005	ArgumentList	subject_str		1709713	1					
ANR	1710006	Argument	subject_str		1709713	0					
ANR	1710007	Identifier	subject_str		1709713	0					
ANR	1710008	BreakStatement	break ;	2090:3:64114:64119	1709713	2	True				
ANR	1710009	IfStatement	if ( ( count > 0 && ! invert ) || ( count == PCRE_ERROR_NOMATCH && invert ) )		1709713	3					
ANR	1710010	Condition	( count > 0 && ! invert ) || ( count == PCRE_ERROR_NOMATCH && invert )	2094:6:64175:64239	1709713	0	True				
ANR	1710011	OrExpression	( count > 0 && ! invert ) || ( count == PCRE_ERROR_NOMATCH && invert )		1709713	0		||			
ANR	1710012	AndExpression	count > 0 && ! invert		1709713	0		&&			
ANR	1710013	RelationalExpression	count > 0		1709713	0		>			
ANR	1710014	Identifier	count		1709713	0					
ANR	1710015	PrimaryExpression	0		1709713	1					
ANR	1710016	UnaryOperationExpression	! invert		1709713	1					
ANR	1710017	UnaryOperator	!		1709713	0					
ANR	1710018	Identifier	invert		1709713	1					
ANR	1710019	AndExpression	count == PCRE_ERROR_NOMATCH && invert		1709713	1		&&			
ANR	1710020	EqualityExpression	count == PCRE_ERROR_NOMATCH		1709713	0		==			
ANR	1710021	Identifier	count		1709713	0					
ANR	1710022	Identifier	PCRE_ERROR_NOMATCH		1709713	1					
ANR	1710023	Identifier	invert		1709713	1					
ANR	1710024	CompoundStatement		59:73:2028:2028	1709713	1					
ANR	1710025	IfStatement	if ( Z_REFCOUNTED_P ( entry ) )		1709713	0					
ANR	1710026	Condition	Z_REFCOUNTED_P ( entry )	2095:7:64251:64271	1709713	0	True				
ANR	1710027	CallExpression	Z_REFCOUNTED_P ( entry )		1709713	0					
ANR	1710028	Callee	Z_REFCOUNTED_P		1709713	0					
ANR	1710029	Identifier	Z_REFCOUNTED_P		1709713	0					
ANR	1710030	ArgumentList	entry		1709713	1					
ANR	1710031	Argument	entry		1709713	0					
ANR	1710032	Identifier	entry		1709713	0					
ANR	1710033	CompoundStatement		60:30:2060:2060	1709713	1					
ANR	1710034	ExpressionStatement	Z_ADDREF_P ( entry )	2096:7:64283:64300	1709713	0	True				
ANR	1710035	CallExpression	Z_ADDREF_P ( entry )		1709713	0					
ANR	1710036	Callee	Z_ADDREF_P		1709713	0					
ANR	1710037	Identifier	Z_ADDREF_P		1709713	0					
ANR	1710038	ArgumentList	entry		1709713	1					
ANR	1710039	Argument	entry		1709713	0					
ANR	1710040	Identifier	entry		1709713	0					
ANR	1710041	IfStatement	if ( string_key )		1709713	1					
ANR	1710042	Condition	string_key	2100:7:64344:64353	1709713	0	True				
ANR	1710043	Identifier	string_key		1709713	0					
ANR	1710044	CompoundStatement		65:19:2142:2142	1709713	1					
ANR	1710045	ExpressionStatement	"zend_hash_update ( Z_ARRVAL_P ( return_value ) , string_key , entry )"	2101:4:64362:64423	1709713	0	True				
ANR	1710046	CallExpression	"zend_hash_update ( Z_ARRVAL_P ( return_value ) , string_key , entry )"		1709713	0					
ANR	1710047	Callee	zend_hash_update		1709713	0					
ANR	1710048	Identifier	zend_hash_update		1709713	0					
ANR	1710049	ArgumentList	Z_ARRVAL_P ( return_value )		1709713	1					
ANR	1710050	Argument	Z_ARRVAL_P ( return_value )		1709713	0					
ANR	1710051	CallExpression	Z_ARRVAL_P ( return_value )		1709713	0					
ANR	1710052	Callee	Z_ARRVAL_P		1709713	0					
ANR	1710053	Identifier	Z_ARRVAL_P		1709713	0					
ANR	1710054	ArgumentList	return_value		1709713	1					
ANR	1710055	Argument	return_value		1709713	0					
ANR	1710056	Identifier	return_value		1709713	0					
ANR	1710057	Argument	string_key		1709713	1					
ANR	1710058	Identifier	string_key		1709713	0					
ANR	1710059	Argument	entry		1709713	2					
ANR	1710060	Identifier	entry		1709713	0					
ANR	1710061	ElseStatement	else		1709713	0					
ANR	1710062	CompoundStatement		67:10:2221:2221	1709713	0					
ANR	1710063	ExpressionStatement	"zend_hash_index_update ( Z_ARRVAL_P ( return_value ) , num_key , entry )"	2103:4:64441:64505	1709713	0	True				
ANR	1710064	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( return_value ) , num_key , entry )"		1709713	0					
ANR	1710065	Callee	zend_hash_index_update		1709713	0					
ANR	1710066	Identifier	zend_hash_index_update		1709713	0					
ANR	1710067	ArgumentList	Z_ARRVAL_P ( return_value )		1709713	1					
ANR	1710068	Argument	Z_ARRVAL_P ( return_value )		1709713	0					
ANR	1710069	CallExpression	Z_ARRVAL_P ( return_value )		1709713	0					
ANR	1710070	Callee	Z_ARRVAL_P		1709713	0					
ANR	1710071	Identifier	Z_ARRVAL_P		1709713	0					
ANR	1710072	ArgumentList	return_value		1709713	1					
ANR	1710073	Argument	return_value		1709713	0					
ANR	1710074	Identifier	return_value		1709713	0					
ANR	1710075	Argument	num_key		1709713	1					
ANR	1710076	Identifier	num_key		1709713	0					
ANR	1710077	Argument	entry		1709713	2					
ANR	1710078	Identifier	entry		1709713	0					
ANR	1710079	ExpressionStatement	zend_string_release ( subject_str )	2107:2:64519:64551	1709713	4	True				
ANR	1710080	CallExpression	zend_string_release ( subject_str )		1709713	0					
ANR	1710081	Callee	zend_string_release		1709713	0					
ANR	1710082	Identifier	zend_string_release		1709713	0					
ANR	1710083	ArgumentList	subject_str		1709713	1					
ANR	1710084	Argument	subject_str		1709713	0					
ANR	1710085	Identifier	subject_str		1709713	0					
ANR	1710086	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	2108:3:64556:64579	1709713	33	True				
ANR	1710087	CallExpression	ZEND_HASH_FOREACH_END ( )		1709713	0					
ANR	1710088	Callee	ZEND_HASH_FOREACH_END		1709713	0					
ANR	1710089	Identifier	ZEND_HASH_FOREACH_END		1709713	0					
ANR	1710090	ArgumentList			1709713	1					
ANR	1710091	IfStatement	if ( size_offsets <= 32 )		1709713	34					
ANR	1710092	Condition	size_offsets <= 32	2111:5:64603:64620	1709713	0	True				
ANR	1710093	RelationalExpression	size_offsets <= 32		1709713	0		<=			
ANR	1710094	Identifier	size_offsets		1709713	0					
ANR	1710095	PrimaryExpression	32		1709713	1					
ANR	1710096	CompoundStatement		76:25:2409:2409	1709713	1					
ANR	1710097	ExpressionStatement	"free_alloca ( offsets , use_heap )"	2112:2:64627:64657	1709713	0	True				
ANR	1710098	CallExpression	"free_alloca ( offsets , use_heap )"		1709713	0					
ANR	1710099	Callee	free_alloca		1709713	0					
ANR	1710100	Identifier	free_alloca		1709713	0					
ANR	1710101	ArgumentList	offsets		1709713	1					
ANR	1710102	Argument	offsets		1709713	0					
ANR	1710103	Identifier	offsets		1709713	0					
ANR	1710104	Argument	use_heap		1709713	1					
ANR	1710105	Identifier	use_heap		1709713	0					
ANR	1710106	ElseStatement	else		1709713	0					
ANR	1710107	CompoundStatement		78:8:2453:2453	1709713	0					
ANR	1710108	ExpressionStatement	efree ( offsets )	2114:2:64671:64685	1709713	0	True				
ANR	1710109	CallExpression	efree ( offsets )		1709713	0					
ANR	1710110	Callee	efree		1709713	0					
ANR	1710111	Identifier	efree		1709713	0					
ANR	1710112	ArgumentList	offsets		1709713	1					
ANR	1710113	Argument	offsets		1709713	0					
ANR	1710114	Identifier	offsets		1709713	0					
ANR	1710115	ReturnType	PHPAPI void		1709713	1					
ANR	1710116	Identifier	php_pcre_grep_impl		1709713	2					
ANR	1710117	ParameterList	"pcre_cache_entry * pce , zval * input , zval * return_value , zend_long flags"		1709713	3					
ANR	1710118	Parameter	pcre_cache_entry * pce	2035:32:62130:62150	1709713	0	True				
ANR	1710119	ParameterType	pcre_cache_entry *		1709713	0					
ANR	1710120	Identifier	pce		1709713	1					
ANR	1710121	Parameter	zval * input	2035:55:62153:62163	1709713	1	True				
ANR	1710122	ParameterType	zval *		1709713	0					
ANR	1710123	Identifier	input		1709713	1					
ANR	1710124	Parameter	zval * return_value	2035:68:62166:62183	1709713	2	True				
ANR	1710125	ParameterType	zval *		1709713	0					
ANR	1710126	Identifier	return_value		1709713	1					
ANR	1710127	Parameter	zend_long flags	2035:88:62186:62200	1709713	3	True				
ANR	1710128	ParameterType	zend_long		1709713	0					
ANR	1710129	Identifier	flags		1709713	1					
ANR	1710130	CFGEntryNode	ENTRY		1709713		True				
ANR	1710131	CFGExitNode	EXIT		1709713		True				
ANR	1710132	CFGErrorNode	ERROR		1709713		True				
ANR	1710133	Symbol	return_value		1709713						
ANR	1710134	Symbol	pce -> extra		1709713						
ANR	1710135	Symbol	backtrack_limit		1709713						
ANR	1710136	Symbol	pcre_exec		1709713						
ANR	1710137	Symbol	pce -> capture_count		1709713						
ANR	1710138	Symbol	flags		1709713						
ANR	1710139	Symbol	extra -> match_limit		1709713						
ANR	1710140	Symbol	extra -> match_limit_recursion		1709713						
ANR	1710141	Symbol	extra -> flags		1709713						
ANR	1710142	Symbol	subject_str		1709713						
ANR	1710143	Symbol	pce		1709713						
ANR	1710144	Symbol	recursion_limit		1709713						
ANR	1710145	Symbol	extra		1709713						
ANR	1710146	Symbol	Z_ARRVAL_P		1709713						
ANR	1710147	Symbol	size_offsets		1709713						
ANR	1710148	Symbol	NULL		1709713						
ANR	1710149	Symbol	invert		1709713						
ANR	1710150	Symbol	PREG_GREP_INVERT		1709713						
ANR	1710151	Symbol	num_key		1709713						
ANR	1710152	Symbol	count		1709713						
ANR	1710153	Symbol	PHP_PCRE_NO_ERROR		1709713						
ANR	1710154	Symbol	zval_get_string		1709713						
ANR	1710155	Symbol	E_NOTICE		1709713						
ANR	1710156	Symbol	~PCRE_EXTRA_MARK		1709713						
ANR	1710157	Symbol	PCRE_EXTRA_MATCH_LIMIT_RECURSION		1709713						
ANR	1710158	Symbol	ZSTR_VAL		1709713						
ANR	1710159	Symbol	string_key		1709713						
ANR	1710160	Symbol	input		1709713						
ANR	1710161	Symbol	entry		1709713						
ANR	1710162	Symbol	PCRE_ERROR_NOMATCH		1709713						
ANR	1710163	Symbol	& extra_data		1709713						
ANR	1710164	Symbol	* extra		1709713						
ANR	1710165	Symbol	PCRE_G		1709713						
ANR	1710166	Symbol	extra_data		1709713						
ANR	1710167	Symbol	offsets		1709713						
ANR	1710168	Symbol	PCRE_EXTRA_MATCH_LIMIT		1709713						
ANR	1710169	Symbol	do_alloca		1709713						
ANR	1710170	Symbol	pce -> re		1709713						
ANR	1710171	Symbol	ZSTR_LEN		1709713						
ANR	1710172	Symbol	error_code		1709713						
ANR	1710173	Symbol	extra_data . flags		1709713						
ANR	1710174	Symbol	Z_REFCOUNTED_P		1709713						
ANR	1710175	Symbol	* pce		1709713						
ANR	1710176	Symbol	safe_emalloc		1709713						
ANR	1710177	Symbol	use_heap		1709713						
ANR	1710178	DeclStmt									
ANR	1710179	Decl							const zend_function_entry	const zend_function_entry [ ]	pcre_functions
ANR	1710180	DeclStmt									
ANR	1710181	Decl							zend_module_entry	zend_module_entry	pcre_module_entry
