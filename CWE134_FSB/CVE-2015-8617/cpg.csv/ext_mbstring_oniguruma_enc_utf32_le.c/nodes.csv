command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1158430	File	data/converged/CVE-2015-8617_php-src/ext_mbstring_oniguruma_enc_utf32_le.c								
ANR	1158431	Function	utf32le_is_mbc_newline	38:0:1685:2181							
ANR	1158432	FunctionDef	"utf32le_is_mbc_newline (const UChar * p , const UChar * end)"		1158431	0					
ANR	1158433	CompoundStatement		40:0:1753:2181	1158431	0					
ANR	1158434	IfStatement	if ( p + 3 < end )		1158431	0					
ANR	1158435	Condition	p + 3 < end	41:6:1761:1771	1158431	0	True				
ANR	1158436	RelationalExpression	p + 3 < end		1158431	0		<			
ANR	1158437	AdditiveExpression	p + 3		1158431	0		+			
ANR	1158438	Identifier	p		1158431	0					
ANR	1158439	PrimaryExpression	3		1158431	1					
ANR	1158440	Identifier	end		1158431	1					
ANR	1158441	CompoundStatement		2:19:20:20	1158431	1					
ANR	1158442	IfStatement	if ( * p == 0x0a && * ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0 )		1158431	0					
ANR	1158443	Condition	* p == 0x0a && * ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0	42:8:1784:1838	1158431	0	True				
ANR	1158444	AndExpression	* p == 0x0a && * ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0		1158431	0		&&			
ANR	1158445	EqualityExpression	* p == 0x0a		1158431	0		==			
ANR	1158446	UnaryOperationExpression	* p		1158431	0					
ANR	1158447	UnaryOperator	*		1158431	0					
ANR	1158448	Identifier	p		1158431	1					
ANR	1158449	PrimaryExpression	0x0a		1158431	1					
ANR	1158450	AndExpression	* ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0		1158431	1		&&			
ANR	1158451	EqualityExpression	* ( p + 1 ) == 0		1158431	0		==			
ANR	1158452	UnaryOperationExpression	* ( p + 1 )		1158431	0					
ANR	1158453	UnaryOperator	*		1158431	0					
ANR	1158454	AdditiveExpression	p + 1		1158431	1		+			
ANR	1158455	Identifier	p		1158431	0					
ANR	1158456	PrimaryExpression	1		1158431	1					
ANR	1158457	PrimaryExpression	0		1158431	1					
ANR	1158458	AndExpression	* ( p + 2 ) == 0 && * ( p + 3 ) == 0		1158431	1		&&			
ANR	1158459	EqualityExpression	* ( p + 2 ) == 0		1158431	0		==			
ANR	1158460	UnaryOperationExpression	* ( p + 2 )		1158431	0					
ANR	1158461	UnaryOperator	*		1158431	0					
ANR	1158462	AdditiveExpression	p + 2		1158431	1		+			
ANR	1158463	Identifier	p		1158431	0					
ANR	1158464	PrimaryExpression	2		1158431	1					
ANR	1158465	PrimaryExpression	0		1158431	1					
ANR	1158466	EqualityExpression	* ( p + 3 ) == 0		1158431	1		==			
ANR	1158467	UnaryOperationExpression	* ( p + 3 )		1158431	0					
ANR	1158468	UnaryOperator	*		1158431	0					
ANR	1158469	AdditiveExpression	p + 3		1158431	1		+			
ANR	1158470	Identifier	p		1158431	0					
ANR	1158471	PrimaryExpression	3		1158431	1					
ANR	1158472	PrimaryExpression	0		1158431	1					
ANR	1158473	ReturnStatement	return 1 ;	43:6:1847:1855	1158431	1	True				
ANR	1158474	PrimaryExpression	1		1158431	0					
ANR	1158475	Statement	if	45:4:1901:1902	1158431	1	True				
ANR	1158476	Statement	(	45:7:1904:1904	1158431	2	True				
ANR	1158477	Statement	(	45:8:1905:1905	1158431	3	True				
ANR	1158478	Statement	*	47:2:1945:1945	1158431	4	True				
ANR	1158479	Statement	p	47:3:1946:1946	1158431	5	True				
ANR	1158480	Statement	==	47:5:1948:1949	1158431	6	True				
ANR	1158481	Statement	0x0d	47:8:1951:1954	1158431	7	True				
ANR	1158482	Statement	||	47:13:1956:1957	1158431	8	True				
ANR	1158483	Statement	*	49:2:1968:1968	1158431	9	True				
ANR	1158484	Statement	p	49:3:1969:1969	1158431	10	True				
ANR	1158485	Statement	==	49:5:1971:1972	1158431	11	True				
ANR	1158486	Statement	0x85	49:8:1974:1977	1158431	12	True				
ANR	1158487	Statement	)	49:12:1978:1978	1158431	13	True				
ANR	1158488	Statement	&&	50:1:1981:1982	1158431	14	True				
ANR	1158489	Statement	*	50:4:1984:1984	1158431	15	True				
ANR	1158490	Statement	(	50:5:1985:1985	1158431	16	True				
ANR	1158491	Statement	p	50:6:1986:1986	1158431	17	True				
ANR	1158492	Statement	+	50:7:1987:1987	1158431	18	True				
ANR	1158493	Statement	1	50:8:1988:1988	1158431	19	True				
ANR	1158494	Statement	)	50:9:1989:1989	1158431	20	True				
ANR	1158495	Statement	==	50:11:1991:1992	1158431	21	True				
ANR	1158496	Statement	0x00	50:14:1994:1997	1158431	22	True				
ANR	1158497	Statement	&&	50:19:1999:2000	1158431	23	True				
ANR	1158498	Statement	(	50:22:2002:2002	1158431	24	True				
ANR	1158499	Statement	p	50:23:2003:2003	1158431	25	True				
ANR	1158500	Statement	+	50:24:2004:2004	1158431	26	True				
ANR	1158501	Statement	2	50:25:2005:2005	1158431	27	True				
ANR	1158502	Statement	)	50:26:2006:2006	1158431	28	True				
ANR	1158503	Statement	==	50:28:2008:2009	1158431	29	True				
ANR	1158504	Statement	0x00	50:31:2011:2014	1158431	30	True				
ANR	1158505	Statement	&&	50:36:2016:2017	1158431	31	True				
ANR	1158506	Statement	*	50:39:2019:2019	1158431	32	True				
ANR	1158507	Statement	(	50:40:2020:2020	1158431	33	True				
ANR	1158508	Statement	p	50:41:2021:2021	1158431	34	True				
ANR	1158509	Statement	+	50:42:2022:2022	1158431	35	True				
ANR	1158510	Statement	3	50:43:2023:2023	1158431	36	True				
ANR	1158511	Statement	)	50:44:2024:2024	1158431	37	True				
ANR	1158512	Statement	==	50:46:2026:2027	1158431	38	True				
ANR	1158513	Statement	0x00	50:49:2029:2032	1158431	39	True				
ANR	1158514	Statement	)	50:53:2033:2033	1158431	40	True				
ANR	1158515	ReturnStatement	return 1 ;	51:6:2041:2049	1158431	41	True				
ANR	1158516	PrimaryExpression	1		1158431	0					
ANR	1158517	IfStatement	if ( * ( p + 1 ) == 0x20 && ( * p == 0x29 || * p == 0x28 ) && * ( p + 2 ) == 0x00 && * ( p + 3 ) == 0x00 )		1158431	42					
ANR	1158518	Condition	* ( p + 1 ) == 0x20 && ( * p == 0x29 || * p == 0x28 ) && * ( p + 2 ) == 0x00 && * ( p + 3 ) == 0x00	52:8:2059:2139	1158431	0	True				
ANR	1158519	AndExpression	* ( p + 1 ) == 0x20 && ( * p == 0x29 || * p == 0x28 ) && * ( p + 2 ) == 0x00 && * ( p + 3 ) == 0x00		1158431	0		&&			
ANR	1158520	EqualityExpression	* ( p + 1 ) == 0x20		1158431	0		==			
ANR	1158521	UnaryOperationExpression	* ( p + 1 )		1158431	0					
ANR	1158522	UnaryOperator	*		1158431	0					
ANR	1158523	AdditiveExpression	p + 1		1158431	1		+			
ANR	1158524	Identifier	p		1158431	0					
ANR	1158525	PrimaryExpression	1		1158431	1					
ANR	1158526	PrimaryExpression	0x20		1158431	1					
ANR	1158527	AndExpression	( * p == 0x29 || * p == 0x28 ) && * ( p + 2 ) == 0x00 && * ( p + 3 ) == 0x00		1158431	1		&&			
ANR	1158528	OrExpression	* p == 0x29 || * p == 0x28		1158431	0		||			
ANR	1158529	EqualityExpression	* p == 0x29		1158431	0		==			
ANR	1158530	UnaryOperationExpression	* p		1158431	0					
ANR	1158531	UnaryOperator	*		1158431	0					
ANR	1158532	Identifier	p		1158431	1					
ANR	1158533	PrimaryExpression	0x29		1158431	1					
ANR	1158534	EqualityExpression	* p == 0x28		1158431	1		==			
ANR	1158535	UnaryOperationExpression	* p		1158431	0					
ANR	1158536	UnaryOperator	*		1158431	0					
ANR	1158537	Identifier	p		1158431	1					
ANR	1158538	PrimaryExpression	0x28		1158431	1					
ANR	1158539	AndExpression	* ( p + 2 ) == 0x00 && * ( p + 3 ) == 0x00		1158431	1		&&			
ANR	1158540	EqualityExpression	* ( p + 2 ) == 0x00		1158431	0		==			
ANR	1158541	UnaryOperationExpression	* ( p + 2 )		1158431	0					
ANR	1158542	UnaryOperator	*		1158431	0					
ANR	1158543	AdditiveExpression	p + 2		1158431	1		+			
ANR	1158544	Identifier	p		1158431	0					
ANR	1158545	PrimaryExpression	2		1158431	1					
ANR	1158546	PrimaryExpression	0x00		1158431	1					
ANR	1158547	EqualityExpression	* ( p + 3 ) == 0x00		1158431	1		==			
ANR	1158548	UnaryOperationExpression	* ( p + 3 )		1158431	0					
ANR	1158549	UnaryOperator	*		1158431	0					
ANR	1158550	AdditiveExpression	p + 3		1158431	1		+			
ANR	1158551	Identifier	p		1158431	0					
ANR	1158552	PrimaryExpression	3		1158431	1					
ANR	1158553	PrimaryExpression	0x00		1158431	1					
ANR	1158554	ReturnStatement	return 1 ;	54:6:2148:2156	1158431	1	True				
ANR	1158555	PrimaryExpression	1		1158431	0					
ANR	1158556	ReturnStatement	return 0 ;	57:2:2171:2179	1158431	1	True				
ANR	1158557	PrimaryExpression	0		1158431	0					
ANR	1158558	ReturnType	static int		1158431	1					
ANR	1158559	Identifier	utf32le_is_mbc_newline		1158431	2					
ANR	1158560	ParameterList	"const UChar * p , const UChar * end"		1158431	3					
ANR	1158561	Parameter	const UChar * p	39:23:1719:1732	1158431	0	True				
ANR	1158562	ParameterType	const UChar *		1158431	0					
ANR	1158563	Identifier	p		1158431	1					
ANR	1158564	Parameter	const UChar * end	39:39:1735:1750	1158431	1	True				
ANR	1158565	ParameterType	const UChar *		1158431	0					
ANR	1158566	Identifier	end		1158431	1					
ANR	1158567	CFGEntryNode	ENTRY		1158431		True				
ANR	1158568	CFGExitNode	EXIT		1158431		True				
ANR	1158569	Symbol	p		1158431						
ANR	1158570	Symbol	* ( p + 2 )		1158431						
ANR	1158571	Symbol	* ( p + 3 )		1158431						
ANR	1158572	Symbol	end		1158431						
ANR	1158573	Symbol	* p		1158431						
ANR	1158574	Symbol	* ( p + 1 )		1158431						
ANR	1158575	Function	utf32le_code_to_mbclen	66:0:2351:2430							
ANR	1158576	FunctionDef	utf32le_code_to_mbclen (OnigCodePoint code ARG_UNUSED)		1158575	0					
ANR	1158577	CompoundStatement		68:0:2416:2430	1158575	0					
ANR	1158578	ReturnStatement	return 4 ;	69:2:2420:2428	1158575	0	True				
ANR	1158579	PrimaryExpression	4		1158575	0					
ANR	1158580	ReturnType	static int		1158575	1					
ANR	1158581	Identifier	utf32le_code_to_mbclen		1158575	2					
ANR	1158582	ParameterList	OnigCodePoint code ARG_UNUSED		1158575	3					
ANR	1158583	Parameter	OnigCodePoint code ARG_UNUSED	67:23:2385:2413	1158575	0	True				
ANR	1158584	ParameterType	OnigCodePoint code		1158575	0					
ANR	1158585	Identifier	ARG_UNUSED		1158575	1					
ANR	1158586	CFGEntryNode	ENTRY		1158575		True				
ANR	1158587	CFGExitNode	EXIT		1158575		True				
ANR	1158588	Symbol	ARG_UNUSED		1158575						
ANR	1158589	Function	utf32le_code_to_mbc	72:0:2433:2697							
ANR	1158590	FunctionDef	"utf32le_code_to_mbc (OnigCodePoint code , UChar * buf)"		1158589	0					
ANR	1158591	CompoundStatement		74:0:2496:2697	1158589	0					
ANR	1158592	IdentifierDeclStatement	UChar * p = buf ;	75:2:2500:2514	1158589	0	True				
ANR	1158593	IdentifierDecl	* p = buf		1158589	0					
ANR	1158594	IdentifierDeclType	UChar *		1158589	0					
ANR	1158595	Identifier	p		1158589	1					
ANR	1158596	AssignmentExpression	* p = buf		1158589	2		=			
ANR	1158597	Identifier	buf		1158589	0					
ANR	1158598	Identifier	buf		1158589	1					
ANR	1158599	ExpressionStatement	* p ++ = ( UChar ) ( code & 0xff )	77:2:2519:2548	1158589	1	True				
ANR	1158600	AssignmentExpression	* p ++ = ( UChar ) ( code & 0xff )		1158589	0		=			
ANR	1158601	UnaryOperationExpression	* p ++		1158589	0					
ANR	1158602	UnaryOperator	*		1158589	0					
ANR	1158603	PostIncDecOperationExpression	p ++		1158589	1					
ANR	1158604	Identifier	p		1158589	0					
ANR	1158605	IncDec	++		1158589	1					
ANR	1158606	CastExpression	( UChar ) ( code & 0xff )		1158589	1					
ANR	1158607	CastTarget	UChar		1158589	0					
ANR	1158608	BitAndExpression	code & 0xff		1158589	1		&			
ANR	1158609	Identifier	code		1158589	0					
ANR	1158610	PrimaryExpression	0xff		1158589	1					
ANR	1158611	ExpressionStatement	* p ++ = ( UChar ) ( ( code & 0xff00 ) >> 8 )	78:2:2552:2593	1158589	2	True				
ANR	1158612	AssignmentExpression	* p ++ = ( UChar ) ( ( code & 0xff00 ) >> 8 )		1158589	0		=			
ANR	1158613	UnaryOperationExpression	* p ++		1158589	0					
ANR	1158614	UnaryOperator	*		1158589	0					
ANR	1158615	PostIncDecOperationExpression	p ++		1158589	1					
ANR	1158616	Identifier	p		1158589	0					
ANR	1158617	IncDec	++		1158589	1					
ANR	1158618	CastExpression	( UChar ) ( ( code & 0xff00 ) >> 8 )		1158589	1					
ANR	1158619	CastTarget	UChar		1158589	0					
ANR	1158620	ShiftExpression	( code & 0xff00 ) >> 8		1158589	1		>>			
ANR	1158621	BitAndExpression	code & 0xff00		1158589	0		&			
ANR	1158622	Identifier	code		1158589	0					
ANR	1158623	PrimaryExpression	0xff00		1158589	1					
ANR	1158624	PrimaryExpression	8		1158589	1					
ANR	1158625	ExpressionStatement	* p ++ = ( UChar ) ( ( code & 0xff0000 ) >> 16 )	79:2:2597:2638	1158589	3	True				
ANR	1158626	AssignmentExpression	* p ++ = ( UChar ) ( ( code & 0xff0000 ) >> 16 )		1158589	0		=			
ANR	1158627	UnaryOperationExpression	* p ++		1158589	0					
ANR	1158628	UnaryOperator	*		1158589	0					
ANR	1158629	PostIncDecOperationExpression	p ++		1158589	1					
ANR	1158630	Identifier	p		1158589	0					
ANR	1158631	IncDec	++		1158589	1					
ANR	1158632	CastExpression	( UChar ) ( ( code & 0xff0000 ) >> 16 )		1158589	1					
ANR	1158633	CastTarget	UChar		1158589	0					
ANR	1158634	ShiftExpression	( code & 0xff0000 ) >> 16		1158589	1		>>			
ANR	1158635	BitAndExpression	code & 0xff0000		1158589	0		&			
ANR	1158636	Identifier	code		1158589	0					
ANR	1158637	PrimaryExpression	0xff0000		1158589	1					
ANR	1158638	PrimaryExpression	16		1158589	1					
ANR	1158639	ExpressionStatement	* p ++ = ( UChar ) ( ( code & 0xff000000 ) >> 24 )	80:2:2642:2683	1158589	4	True				
ANR	1158640	AssignmentExpression	* p ++ = ( UChar ) ( ( code & 0xff000000 ) >> 24 )		1158589	0		=			
ANR	1158641	UnaryOperationExpression	* p ++		1158589	0					
ANR	1158642	UnaryOperator	*		1158589	0					
ANR	1158643	PostIncDecOperationExpression	p ++		1158589	1					
ANR	1158644	Identifier	p		1158589	0					
ANR	1158645	IncDec	++		1158589	1					
ANR	1158646	CastExpression	( UChar ) ( ( code & 0xff000000 ) >> 24 )		1158589	1					
ANR	1158647	CastTarget	UChar		1158589	0					
ANR	1158648	ShiftExpression	( code & 0xff000000 ) >> 24		1158589	1		>>			
ANR	1158649	BitAndExpression	code & 0xff000000		1158589	0		&			
ANR	1158650	Identifier	code		1158589	0					
ANR	1158651	PrimaryExpression	0xff000000		1158589	1					
ANR	1158652	PrimaryExpression	24		1158589	1					
ANR	1158653	ReturnStatement	return 4 ;	81:2:2687:2695	1158589	5	True				
ANR	1158654	PrimaryExpression	4		1158589	0					
ANR	1158655	ReturnType	static int		1158589	1					
ANR	1158656	Identifier	utf32le_code_to_mbc		1158589	2					
ANR	1158657	ParameterList	"OnigCodePoint code , UChar * buf"		1158589	3					
ANR	1158658	Parameter	OnigCodePoint code	73:20:2464:2481	1158589	0	True				
ANR	1158659	ParameterType	OnigCodePoint		1158589	0					
ANR	1158660	Identifier	code		1158589	1					
ANR	1158661	Parameter	UChar * buf	73:40:2484:2493	1158589	1	True				
ANR	1158662	ParameterType	UChar *		1158589	0					
ANR	1158663	Identifier	buf		1158589	1					
ANR	1158664	CFGEntryNode	ENTRY		1158589		True				
ANR	1158665	CFGExitNode	EXIT		1158589		True				
ANR	1158666	Symbol	p		1158589						
ANR	1158667	Symbol	buf		1158589						
ANR	1158668	Symbol	code		1158589						
ANR	1158669	Symbol	* p ++		1158589						
ANR	1158670	Function	utf32le_mbc_case_fold	84:0:2700:3406							
ANR	1158671	FunctionDef	"utf32le_mbc_case_fold (OnigCaseFoldType flag , const UChar * * pp , const UChar * end , UChar * fold)"		1158670	0					
ANR	1158672	CompoundStatement		87:0:2813:3406	1158670	0					
ANR	1158673	IdentifierDeclStatement	const UChar * p = * pp ;	88:2:2817:2837	1158670	0	True				
ANR	1158674	IdentifierDecl	* p = * pp		1158670	0					
ANR	1158675	IdentifierDeclType	const UChar *		1158670	0					
ANR	1158676	Identifier	p		1158670	1					
ANR	1158677	AssignmentExpression	* p = * pp		1158670	2		=			
ANR	1158678	Identifier	p		1158670	0					
ANR	1158679	UnaryOperationExpression	* pp		1158670	1					
ANR	1158680	UnaryOperator	*		1158670	0					
ANR	1158681	Identifier	pp		1158670	1					
ANR	1158682	IfStatement	if ( ONIGENC_IS_ASCII_CODE ( * p ) && * ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0 )		1158670	1					
ANR	1158683	Condition	ONIGENC_IS_ASCII_CODE ( * p ) && * ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0	90:6:2846:2915	1158670	0	True				
ANR	1158684	AndExpression	ONIGENC_IS_ASCII_CODE ( * p ) && * ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0		1158670	0		&&			
ANR	1158685	CallExpression	ONIGENC_IS_ASCII_CODE ( * p )		1158670	0					
ANR	1158686	Callee	ONIGENC_IS_ASCII_CODE		1158670	0					
ANR	1158687	Identifier	ONIGENC_IS_ASCII_CODE		1158670	0					
ANR	1158688	ArgumentList	* p		1158670	1					
ANR	1158689	Argument	* p		1158670	0					
ANR	1158690	UnaryOperationExpression	* p		1158670	0					
ANR	1158691	UnaryOperator	*		1158670	0					
ANR	1158692	Identifier	p		1158670	1					
ANR	1158693	AndExpression	* ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0		1158670	1		&&			
ANR	1158694	EqualityExpression	* ( p + 1 ) == 0		1158670	0		==			
ANR	1158695	UnaryOperationExpression	* ( p + 1 )		1158670	0					
ANR	1158696	UnaryOperator	*		1158670	0					
ANR	1158697	AdditiveExpression	p + 1		1158670	1		+			
ANR	1158698	Identifier	p		1158670	0					
ANR	1158699	PrimaryExpression	1		1158670	1					
ANR	1158700	PrimaryExpression	0		1158670	1					
ANR	1158701	AndExpression	* ( p + 2 ) == 0 && * ( p + 3 ) == 0		1158670	1		&&			
ANR	1158702	EqualityExpression	* ( p + 2 ) == 0		1158670	0		==			
ANR	1158703	UnaryOperationExpression	* ( p + 2 )		1158670	0					
ANR	1158704	UnaryOperator	*		1158670	0					
ANR	1158705	AdditiveExpression	p + 2		1158670	1		+			
ANR	1158706	Identifier	p		1158670	0					
ANR	1158707	PrimaryExpression	2		1158670	1					
ANR	1158708	PrimaryExpression	0		1158670	1					
ANR	1158709	EqualityExpression	* ( p + 3 ) == 0		1158670	1		==			
ANR	1158710	UnaryOperationExpression	* ( p + 3 )		1158670	0					
ANR	1158711	UnaryOperator	*		1158670	0					
ANR	1158712	AdditiveExpression	p + 3		1158670	1		+			
ANR	1158713	Identifier	p		1158670	0					
ANR	1158714	PrimaryExpression	3		1158670	1					
ANR	1158715	PrimaryExpression	0		1158670	1					
ANR	1158716	CompoundStatement		4:78:104:104	1158670	1					
ANR	1158717	IfStatement	if ( ( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0 )		1158670	0					
ANR	1158718	Condition	( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0	92:8:2971:3015	1158670	0	True				
ANR	1158719	EqualityExpression	( flag & ONIGENC_CASE_FOLD_TURKISH_AZERI ) != 0		1158670	0		!=			
ANR	1158720	BitAndExpression	flag & ONIGENC_CASE_FOLD_TURKISH_AZERI		1158670	0		&			
ANR	1158721	Identifier	flag		1158670	0					
ANR	1158722	Identifier	ONIGENC_CASE_FOLD_TURKISH_AZERI		1158670	1					
ANR	1158723	PrimaryExpression	0		1158670	1					
ANR	1158724	CompoundStatement		6:55:204:204	1158670	1					
ANR	1158725	IfStatement	if ( * p == 0x49 )		1158670	0					
ANR	1158726	Condition	* p == 0x49	93:10:3030:3039	1158670	0	True				
ANR	1158727	EqualityExpression	* p == 0x49		1158670	0		==			
ANR	1158728	UnaryOperationExpression	* p		1158670	0					
ANR	1158729	UnaryOperator	*		1158670	0					
ANR	1158730	Identifier	p		1158670	1					
ANR	1158731	PrimaryExpression	0x49		1158670	1					
ANR	1158732	CompoundStatement		7:22:228:228	1158670	1					
ANR	1158733	ExpressionStatement	* fold ++ = 0x31	94:1:3045:3059	1158670	0	True				
ANR	1158734	AssignmentExpression	* fold ++ = 0x31		1158670	0		=			
ANR	1158735	UnaryOperationExpression	* fold ++		1158670	0					
ANR	1158736	UnaryOperator	*		1158670	0					
ANR	1158737	PostIncDecOperationExpression	fold ++		1158670	1					
ANR	1158738	Identifier	fold		1158670	0					
ANR	1158739	IncDec	++		1158670	1					
ANR	1158740	PrimaryExpression	0x31		1158670	1					
ANR	1158741	ExpressionStatement	* fold ++ = 0x01	95:1:3062:3076	1158670	1	True				
ANR	1158742	AssignmentExpression	* fold ++ = 0x01		1158670	0		=			
ANR	1158743	UnaryOperationExpression	* fold ++		1158670	0					
ANR	1158744	UnaryOperator	*		1158670	0					
ANR	1158745	PostIncDecOperationExpression	fold ++		1158670	1					
ANR	1158746	Identifier	fold		1158670	0					
ANR	1158747	IncDec	++		1158670	1					
ANR	1158748	PrimaryExpression	0x01		1158670	1					
ANR	1158749	ElseStatement	else		1158670	0					
ANR	1158750	CompoundStatement		12:9:287:287	1158670	0					
ANR	1158751	ExpressionStatement	* fold ++ = ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )	100:6:3116:3162	1158670	0	True				
ANR	1158752	AssignmentExpression	* fold ++ = ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )		1158670	0		=			
ANR	1158753	UnaryOperationExpression	* fold ++		1158670	0					
ANR	1158754	UnaryOperator	*		1158670	0					
ANR	1158755	PostIncDecOperationExpression	fold ++		1158670	1					
ANR	1158756	Identifier	fold		1158670	0					
ANR	1158757	IncDec	++		1158670	1					
ANR	1158758	CallExpression	ONIGENC_ASCII_CODE_TO_LOWER_CASE ( * p )		1158670	1					
ANR	1158759	Callee	ONIGENC_ASCII_CODE_TO_LOWER_CASE		1158670	0					
ANR	1158760	Identifier	ONIGENC_ASCII_CODE_TO_LOWER_CASE		1158670	0					
ANR	1158761	ArgumentList	* p		1158670	1					
ANR	1158762	Argument	* p		1158670	0					
ANR	1158763	UnaryOperationExpression	* p		1158670	0					
ANR	1158764	UnaryOperator	*		1158670	0					
ANR	1158765	Identifier	p		1158670	1					
ANR	1158766	ExpressionStatement	* fold ++ = 0	101:6:3170:3181	1158670	1	True				
ANR	1158767	AssignmentExpression	* fold ++ = 0		1158670	0		=			
ANR	1158768	UnaryOperationExpression	* fold ++		1158670	0					
ANR	1158769	UnaryOperator	*		1158670	0					
ANR	1158770	PostIncDecOperationExpression	fold ++		1158670	1					
ANR	1158771	Identifier	fold		1158670	0					
ANR	1158772	IncDec	++		1158670	1					
ANR	1158773	PrimaryExpression	0		1158670	1					
ANR	1158774	ExpressionStatement	* fold ++ = 0	106:4:3244:3255	1158670	1	True				
ANR	1158775	AssignmentExpression	* fold ++ = 0		1158670	0		=			
ANR	1158776	UnaryOperationExpression	* fold ++		1158670	0					
ANR	1158777	UnaryOperator	*		1158670	0					
ANR	1158778	PostIncDecOperationExpression	fold ++		1158670	1					
ANR	1158779	Identifier	fold		1158670	0					
ANR	1158780	IncDec	++		1158670	1					
ANR	1158781	PrimaryExpression	0		1158670	1					
ANR	1158782	ExpressionStatement	* fold = 0	107:4:3261:3272	1158670	2	True				
ANR	1158783	AssignmentExpression	* fold = 0		1158670	0		=			
ANR	1158784	UnaryOperationExpression	* fold		1158670	0					
ANR	1158785	UnaryOperator	*		1158670	0					
ANR	1158786	Identifier	fold		1158670	1					
ANR	1158787	PrimaryExpression	0		1158670	1					
ANR	1158788	ExpressionStatement	* pp += 4	108:4:3278:3286	1158670	3	True				
ANR	1158789	AssignmentExpression	* pp += 4		1158670	0		+=			
ANR	1158790	UnaryOperationExpression	* pp		1158670	0					
ANR	1158791	UnaryOperator	*		1158670	0					
ANR	1158792	Identifier	pp		1158670	1					
ANR	1158793	PrimaryExpression	4		1158670	1					
ANR	1158794	ReturnStatement	return 4 ;	109:4:3292:3300	1158670	4	True				
ANR	1158795	PrimaryExpression	4		1158670	0					
ANR	1158796	ElseStatement	else		1158670	0					
ANR	1158797	ReturnStatement	"return onigenc_unicode_mbc_case_fold ( ONIG_ENCODING_UTF32_LE , flag , pp , end , fold ) ;"	112:4:3317:3404	1158670	0	True				
ANR	1158798	CallExpression	"onigenc_unicode_mbc_case_fold ( ONIG_ENCODING_UTF32_LE , flag , pp , end , fold )"		1158670	0					
ANR	1158799	Callee	onigenc_unicode_mbc_case_fold		1158670	0					
ANR	1158800	Identifier	onigenc_unicode_mbc_case_fold		1158670	0					
ANR	1158801	ArgumentList	ONIG_ENCODING_UTF32_LE		1158670	1					
ANR	1158802	Argument	ONIG_ENCODING_UTF32_LE		1158670	0					
ANR	1158803	Identifier	ONIG_ENCODING_UTF32_LE		1158670	0					
ANR	1158804	Argument	flag		1158670	1					
ANR	1158805	Identifier	flag		1158670	0					
ANR	1158806	Argument	pp		1158670	2					
ANR	1158807	Identifier	pp		1158670	0					
ANR	1158808	Argument	end		1158670	3					
ANR	1158809	Identifier	end		1158670	0					
ANR	1158810	Argument	fold		1158670	4					
ANR	1158811	Identifier	fold		1158670	0					
ANR	1158812	ReturnType	static int		1158670	1					
ANR	1158813	Identifier	utf32le_mbc_case_fold		1158670	2					
ANR	1158814	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end , UChar * fold"		1158670	3					
ANR	1158815	Parameter	OnigCaseFoldType flag	85:22:2733:2753	1158670	0	True				
ANR	1158816	ParameterType	OnigCaseFoldType		1158670	0					
ANR	1158817	Identifier	flag		1158670	1					
ANR	1158818	Parameter	const UChar * * pp	86:8:2764:2779	1158670	1	True				
ANR	1158819	ParameterType	const UChar * *		1158670	0					
ANR	1158820	Identifier	pp		1158670	1					
ANR	1158821	Parameter	const UChar * end	86:26:2782:2797	1158670	2	True				
ANR	1158822	ParameterType	const UChar *		1158670	0					
ANR	1158823	Identifier	end		1158670	1					
ANR	1158824	Parameter	UChar * fold	86:44:2800:2810	1158670	3	True				
ANR	1158825	ParameterType	UChar *		1158670	0					
ANR	1158826	Identifier	fold		1158670	1					
ANR	1158827	CFGEntryNode	ENTRY		1158670		True				
ANR	1158828	CFGExitNode	EXIT		1158670		True				
ANR	1158829	Symbol	pp		1158670						
ANR	1158830	Symbol	ONIGENC_IS_ASCII_CODE		1158670						
ANR	1158831	Symbol	flag		1158670						
ANR	1158832	Symbol	* ( p + 2 )		1158670						
ANR	1158833	Symbol	* pp		1158670						
ANR	1158834	Symbol	* ( p + 3 )		1158670						
ANR	1158835	Symbol	* fold		1158670						
ANR	1158836	Symbol	* ( p + 1 )		1158670						
ANR	1158837	Symbol	* fold ++		1158670						
ANR	1158838	Symbol	ONIG_ENCODING_UTF32_LE		1158670						
ANR	1158839	Symbol	p		1158670						
ANR	1158840	Symbol	fold		1158670						
ANR	1158841	Symbol	ONIGENC_ASCII_CODE_TO_LOWER_CASE		1158670						
ANR	1158842	Symbol	ONIGENC_CASE_FOLD_TURKISH_AZERI		1158670						
ANR	1158843	Symbol	end		1158670						
ANR	1158844	Symbol	* p		1158670						
ANR	1158845	Symbol	onigenc_unicode_mbc_case_fold		1158670						
ANR	1158846	Function	utf32le_is_mbc_ambiguous	117:0:3415:4091							
ANR	1158847	FunctionDef	"utf32le_is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		1158846	0					
ANR	1158848	CompoundStatement		119:0:3510:4091	1158846	0					
ANR	1158849	IdentifierDeclStatement	const UChar * p = * pp ;	120:2:3514:3534	1158846	0	True				
ANR	1158850	IdentifierDecl	* p = * pp		1158846	0					
ANR	1158851	IdentifierDeclType	const UChar *		1158846	0					
ANR	1158852	Identifier	p		1158846	1					
ANR	1158853	AssignmentExpression	* p = * pp		1158846	2		=			
ANR	1158854	Identifier	p		1158846	0					
ANR	1158855	UnaryOperationExpression	* pp		1158846	1					
ANR	1158856	UnaryOperator	*		1158846	0					
ANR	1158857	Identifier	pp		1158846	1					
ANR	1158858	ExpressionStatement	( * pp ) += 4	122:2:3539:3549	1158846	1	True				
ANR	1158859	AssignmentExpression	( * pp ) += 4		1158846	0		+=			
ANR	1158860	UnaryOperationExpression	* pp		1158846	0					
ANR	1158861	UnaryOperator	*		1158846	0					
ANR	1158862	Identifier	pp		1158846	1					
ANR	1158863	PrimaryExpression	4		1158846	1					
ANR	1158864	IfStatement	if ( * ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0 )		1158846	2					
ANR	1158865	Condition	* ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0	124:6:3558:3598	1158846	0	True				
ANR	1158866	AndExpression	* ( p + 1 ) == 0 && * ( p + 2 ) == 0 && * ( p + 3 ) == 0		1158846	0		&&			
ANR	1158867	EqualityExpression	* ( p + 1 ) == 0		1158846	0		==			
ANR	1158868	UnaryOperationExpression	* ( p + 1 )		1158846	0					
ANR	1158869	UnaryOperator	*		1158846	0					
ANR	1158870	AdditiveExpression	p + 1		1158846	1		+			
ANR	1158871	Identifier	p		1158846	0					
ANR	1158872	PrimaryExpression	1		1158846	1					
ANR	1158873	PrimaryExpression	0		1158846	1					
ANR	1158874	AndExpression	* ( p + 2 ) == 0 && * ( p + 3 ) == 0		1158846	1		&&			
ANR	1158875	EqualityExpression	* ( p + 2 ) == 0		1158846	0		==			
ANR	1158876	UnaryOperationExpression	* ( p + 2 )		1158846	0					
ANR	1158877	UnaryOperator	*		1158846	0					
ANR	1158878	AdditiveExpression	p + 2		1158846	1		+			
ANR	1158879	Identifier	p		1158846	0					
ANR	1158880	PrimaryExpression	2		1158846	1					
ANR	1158881	PrimaryExpression	0		1158846	1					
ANR	1158882	EqualityExpression	* ( p + 3 ) == 0		1158846	1		==			
ANR	1158883	UnaryOperationExpression	* ( p + 3 )		1158846	0					
ANR	1158884	UnaryOperator	*		1158846	0					
ANR	1158885	AdditiveExpression	p + 3		1158846	1		+			
ANR	1158886	Identifier	p		1158846	0					
ANR	1158887	PrimaryExpression	3		1158846	1					
ANR	1158888	PrimaryExpression	0		1158846	1					
ANR	1158889	CompoundStatement		7:4:96:104	1158846	1					
ANR	1158890	IdentifierDeclStatement	"int c , v ;"	125:4:3607:3615	1158846	0	True				
ANR	1158891	IdentifierDecl	c		1158846	0					
ANR	1158892	IdentifierDeclType	int		1158846	0					
ANR	1158893	Identifier	c		1158846	1					
ANR	1158894	IdentifierDecl	v		1158846	1					
ANR	1158895	IdentifierDeclType	int		1158846	0					
ANR	1158896	Identifier	v		1158846	1					
ANR	1158897	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		1158846	1					
ANR	1158898	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	127:8:3626:3690	1158846	0	True				
ANR	1158899	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		1158846	0		&&			
ANR	1158900	EqualityExpression	* p == 0xdf		1158846	0		==			
ANR	1158901	UnaryOperationExpression	* p		1158846	0					
ANR	1158902	UnaryOperator	*		1158846	0					
ANR	1158903	Identifier	p		1158846	1					
ANR	1158904	PrimaryExpression	0xdf		1158846	1					
ANR	1158905	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		1158846	1		!=			
ANR	1158906	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1158846	0		&			
ANR	1158907	Identifier	flag		1158846	0					
ANR	1158908	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1158846	1					
ANR	1158909	PrimaryExpression	0		1158846	1					
ANR	1158910	CompoundStatement		9:75:182:182	1158846	1					
ANR	1158911	ReturnStatement	return TRUE ;	128:6:3701:3712	1158846	0	True				
ANR	1158912	Identifier	TRUE		1158846	0					
ANR	1158913	ExpressionStatement	c = * p	131:4:3725:3731	1158846	2	True				
ANR	1158914	AssignmentExpression	c = * p		1158846	0		=			
ANR	1158915	Identifier	c		1158846	0					
ANR	1158916	UnaryOperationExpression	* p		1158846	1					
ANR	1158917	UnaryOperator	*		1158846	0					
ANR	1158918	Identifier	p		1158846	1					
ANR	1158919	ExpressionStatement	"v = ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE ( c , ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )"	132:4:3737:3843	1158846	3	True				
ANR	1158920	AssignmentExpression	"v = ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE ( c , ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )"		1158846	0		=			
ANR	1158921	Identifier	v		1158846	0					
ANR	1158922	CallExpression	"ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE ( c , ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )"		1158846	1					
ANR	1158923	Callee	ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE		1158846	0					
ANR	1158924	Identifier	ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE		1158846	0					
ANR	1158925	ArgumentList	c		1158846	1					
ANR	1158926	Argument	c		1158846	0					
ANR	1158927	Identifier	c		1158846	0					
ANR	1158928	Argument	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		1158846	1					
ANR	1158929	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		1158846	0		|			
ANR	1158930	Identifier	BIT_CTYPE_UPPER		1158846	0					
ANR	1158931	Identifier	BIT_CTYPE_LOWER		1158846	1					
ANR	1158932	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		1158846	4					
ANR	1158933	Condition	( v | BIT_CTYPE_LOWER ) != 0	134:8:3853:3878	1158846	0	True				
ANR	1158934	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		1158846	0		!=			
ANR	1158935	InclusiveOrExpression	v | BIT_CTYPE_LOWER		1158846	0		|			
ANR	1158936	Identifier	v		1158846	0					
ANR	1158937	Identifier	BIT_CTYPE_LOWER		1158846	1					
ANR	1158938	PrimaryExpression	0		1158846	1					
ANR	1158939	CompoundStatement		16:36:370:370	1158846	1					
ANR	1158940	IfStatement	if ( c >= 0xaa && c <= 0xba )		1158846	0					
ANR	1158941	Condition	c >= 0xaa && c <= 0xba	136:10:3964:3985	1158846	0	True				
ANR	1158942	AndExpression	c >= 0xaa && c <= 0xba		1158846	0		&&			
ANR	1158943	RelationalExpression	c >= 0xaa		1158846	0		>=			
ANR	1158944	Identifier	c		1158846	0					
ANR	1158945	PrimaryExpression	0xaa		1158846	1					
ANR	1158946	RelationalExpression	c <= 0xba		1158846	1		<=			
ANR	1158947	Identifier	c		1158846	0					
ANR	1158948	PrimaryExpression	0xba		1158846	1					
ANR	1158949	ReturnStatement	return FALSE ;	137:1:3989:4001	1158846	1	True				
ANR	1158950	Identifier	FALSE		1158846	0					
ANR	1158951	ElseStatement	else		1158846	0					
ANR	1158952	ReturnStatement	return TRUE ;	139:1:4015:4026	1158846	0	True				
ANR	1158953	Identifier	TRUE		1158846	0					
ANR	1158954	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	141:4:4038:4068	1158846	5	True				
ANR	1158955	ConditionalExpression	v != 0 ? TRUE : FALSE		1158846	0					
ANR	1158956	Condition	v != 0		1158846	0					
ANR	1158957	EqualityExpression	v != 0		1158846	0		!=			
ANR	1158958	Identifier	v		1158846	0					
ANR	1158959	PrimaryExpression	0		1158846	1					
ANR	1158960	Identifier	TRUE		1158846	1					
ANR	1158961	Identifier	FALSE		1158846	2					
ANR	1158962	ReturnStatement	return FALSE ;	144:2:4077:4089	1158846	3	True				
ANR	1158963	Identifier	FALSE		1158846	0					
ANR	1158964	ReturnType	static int		1158846	1					
ANR	1158965	Identifier	utf32le_is_mbc_ambiguous		1158846	2					
ANR	1158966	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		1158846	3					
ANR	1158967	Parameter	OnigCaseFoldType flag	118:25:3451:3471	1158846	0	True				
ANR	1158968	ParameterType	OnigCaseFoldType		1158846	0					
ANR	1158969	Identifier	flag		1158846	1					
ANR	1158970	Parameter	const UChar * * pp	118:48:3474:3489	1158846	1	True				
ANR	1158971	ParameterType	const UChar * *		1158846	0					
ANR	1158972	Identifier	pp		1158846	1					
ANR	1158973	Parameter	const UChar * end	118:66:3492:3507	1158846	2	True				
ANR	1158974	ParameterType	const UChar *		1158846	0					
ANR	1158975	Identifier	end		1158846	1					
ANR	1158976	CFGEntryNode	ENTRY		1158846		True				
ANR	1158977	CFGExitNode	EXIT		1158846		True				
ANR	1158978	Symbol	pp		1158846						
ANR	1158979	Symbol	flag		1158846						
ANR	1158980	Symbol	c		1158846						
ANR	1158981	Symbol	* ( p + 2 )		1158846						
ANR	1158982	Symbol	* pp		1158846						
ANR	1158983	Symbol	* ( p + 3 )		1158846						
ANR	1158984	Symbol	TRUE		1158846						
ANR	1158985	Symbol	* ( p + 1 )		1158846						
ANR	1158986	Symbol	p		1158846						
ANR	1158987	Symbol	ONIGENC_IS_UNICODE_ISO_8859_1_BIT_CTYPE		1158846						
ANR	1158988	Symbol	v		1158846						
ANR	1158989	Symbol	BIT_CTYPE_LOWER		1158846						
ANR	1158990	Symbol	end		1158846						
ANR	1158991	Symbol	* p		1158846						
ANR	1158992	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1158846						
ANR	1158993	Symbol	BIT_CTYPE_UPPER		1158846						
ANR	1158994	Symbol	FALSE		1158846						
ANR	1158995	Function	utf32le_left_adjust_char_head	148:0:4101:4287							
ANR	1158996	FunctionDef	"utf32le_left_adjust_char_head (const UChar * start , const UChar * s)"		1158995	0					
ANR	1158997	CompoundStatement		150:0:4181:4287	1158995	0					
ANR	1158998	IdentifierDeclStatement	int rem ;	151:2:4185:4192	1158995	0	True				
ANR	1158999	IdentifierDecl	rem		1158995	0					
ANR	1159000	IdentifierDeclType	int		1158995	0					
ANR	1159001	Identifier	rem		1158995	1					
ANR	1159002	IfStatement	if ( s <= start )		1158995	1					
ANR	1159003	Condition	s <= start	153:6:4201:4210	1158995	0	True				
ANR	1159004	RelationalExpression	s <= start		1158995	0		<=			
ANR	1159005	Identifier	s		1158995	0					
ANR	1159006	Identifier	start		1158995	1					
ANR	1159007	ReturnStatement	return ( UChar * ) s ;	153:18:4213:4230	1158995	1	True				
ANR	1159008	CastExpression	( UChar * ) s		1158995	0					
ANR	1159009	CastTarget	UChar *		1158995	0					
ANR	1159010	Identifier	s		1158995	1					
ANR	1159011	ExpressionStatement	rem = ( s - start ) % 4	155:2:4235:4256	1158995	2	True				
ANR	1159012	AssignmentExpression	rem = ( s - start ) % 4		1158995	0		=			
ANR	1159013	Identifier	rem		1158995	0					
ANR	1159014	MultiplicativeExpression	( s - start ) % 4		1158995	1		%			
ANR	1159015	AdditiveExpression	s - start		1158995	0		-			
ANR	1159016	Identifier	s		1158995	0					
ANR	1159017	Identifier	start		1158995	1					
ANR	1159018	PrimaryExpression	4		1158995	1					
ANR	1159019	ReturnStatement	return ( UChar * ) ( s - rem ) ;	156:2:4260:4285	1158995	3	True				
ANR	1159020	CastExpression	( UChar * ) ( s - rem )		1158995	0					
ANR	1159021	CastTarget	UChar *		1158995	0					
ANR	1159022	AdditiveExpression	s - rem		1158995	1		-			
ANR	1159023	Identifier	s		1158995	0					
ANR	1159024	Identifier	rem		1158995	1					
ANR	1159025	ReturnType	static UChar *		1158995	1					
ANR	1159026	Identifier	utf32le_left_adjust_char_head		1158995	2					
ANR	1159027	ParameterList	"const UChar * start , const UChar * s"		1158995	3					
ANR	1159028	Parameter	const UChar * start	149:30:4145:4162	1158995	0	True				
ANR	1159029	ParameterType	const UChar *		1158995	0					
ANR	1159030	Identifier	start		1158995	1					
ANR	1159031	Parameter	const UChar * s	149:50:4165:4178	1158995	1	True				
ANR	1159032	ParameterType	const UChar *		1158995	0					
ANR	1159033	Identifier	s		1158995	1					
ANR	1159034	CFGEntryNode	ENTRY		1158995		True				
ANR	1159035	CFGExitNode	EXIT		1158995		True				
ANR	1159036	Symbol	s		1158995						
ANR	1159037	Symbol	start		1158995						
ANR	1159038	Symbol	rem		1158995						
ANR	1159039	Function	utf32le_get_case_fold_codes_by_str	159:0:4290:4545							
ANR	1159040	FunctionDef	"utf32le_get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		1159039	0					
ANR	1159041	CompoundStatement		162:0:4435:4545	1159039	0					
ANR	1159042	ReturnStatement	"return onigenc_unicode_get_case_fold_codes_by_str ( ONIG_ENCODING_UTF32_LE , flag , p , end , items ) ;"	163:2:4439:4543	1159039	0	True				
ANR	1159043	CallExpression	"onigenc_unicode_get_case_fold_codes_by_str ( ONIG_ENCODING_UTF32_LE , flag , p , end , items )"		1159039	0					
ANR	1159044	Callee	onigenc_unicode_get_case_fold_codes_by_str		1159039	0					
ANR	1159045	Identifier	onigenc_unicode_get_case_fold_codes_by_str		1159039	0					
ANR	1159046	ArgumentList	ONIG_ENCODING_UTF32_LE		1159039	1					
ANR	1159047	Argument	ONIG_ENCODING_UTF32_LE		1159039	0					
ANR	1159048	Identifier	ONIG_ENCODING_UTF32_LE		1159039	0					
ANR	1159049	Argument	flag		1159039	1					
ANR	1159050	Identifier	flag		1159039	0					
ANR	1159051	Argument	p		1159039	2					
ANR	1159052	Identifier	p		1159039	0					
ANR	1159053	Argument	end		1159039	3					
ANR	1159054	Identifier	end		1159039	0					
ANR	1159055	Argument	items		1159039	4					
ANR	1159056	Identifier	items		1159039	0					
ANR	1159057	ReturnType	static int		1159039	1					
ANR	1159058	Identifier	utf32le_get_case_fold_codes_by_str		1159039	2					
ANR	1159059	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		1159039	3					
ANR	1159060	Parameter	OnigCaseFoldType flag	160:35:4336:4356	1159039	0	True				
ANR	1159061	ParameterType	OnigCaseFoldType		1159039	0					
ANR	1159062	Identifier	flag		1159039	1					
ANR	1159063	Parameter	const OnigUChar * p	161:4:4363:4380	1159039	1	True				
ANR	1159064	ParameterType	const OnigUChar *		1159039	0					
ANR	1159065	Identifier	p		1159039	1					
ANR	1159066	Parameter	const OnigUChar * end	161:24:4383:4402	1159039	2	True				
ANR	1159067	ParameterType	const OnigUChar *		1159039	0					
ANR	1159068	Identifier	end		1159039	1					
ANR	1159069	Parameter	OnigCaseFoldCodeItem items [ ]	161:46:4405:4432	1159039	3	True				
ANR	1159070	ParameterType	OnigCaseFoldCodeItem [ ]		1159039	0					
ANR	1159071	Identifier	items		1159039	1					
ANR	1159072	CFGEntryNode	ENTRY		1159039		True				
ANR	1159073	CFGExitNode	EXIT		1159039		True				
ANR	1159074	Symbol	p		1159039						
ANR	1159075	Symbol	flag		1159039						
ANR	1159076	Symbol	onigenc_unicode_get_case_fold_codes_by_str		1159039						
ANR	1159077	Symbol	end		1159039						
ANR	1159078	Symbol	items		1159039						
ANR	1159079	Symbol	ONIG_ENCODING_UTF32_LE		1159039						
ANR	1159080	DeclStmt									
ANR	1159081	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingUTF32_LE
