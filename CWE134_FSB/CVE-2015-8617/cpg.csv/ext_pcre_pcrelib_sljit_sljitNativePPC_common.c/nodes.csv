command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1637890	File	data/converged/CVE-2015-8617_php-src/ext_pcre_pcrelib_sljit_sljitNativePPC_common.c								
ANR	1637891	Function	sljit_get_platform_name	27:0:1455:1563							
ANR	1637892	FunctionDef	sljit_get_platform_name ()		1637891	0					
ANR	1637893	CompoundStatement		28:0:1528:1563	1637891	0					
ANR	1637894	Statement	return	29:1:1531:1536	1637891	0	True				
ANR	1637895	Statement	"""PowerPC"""	29:8:1538:1546	1637891	1	True				
ANR	1637896	ExpressionStatement	SLJIT_CPUINFO	29:18:1548:1561	1637891	2	True				
ANR	1637897	Identifier	SLJIT_CPUINFO		1637891	0					
ANR	1637898	ReturnType	SLJIT_API_FUNC_ATTRIBUTE SLJIT_CONST char *		1637891	1					
ANR	1637899	Identifier	sljit_get_platform_name		1637891	2					
ANR	1637900	ParameterList			1637891	3					
ANR	1637901	CFGEntryNode	ENTRY		1637891		True				
ANR	1637902	CFGExitNode	EXIT		1637891		True				
ANR	1637903	DeclStmt									
ANR	1637904	Decl							sljit_ui	sljit_ui	sljit_ins
ANR	1637905	Function	ppc_cache_flush	49:0:1990:3040							
ANR	1637906	FunctionDef	"ppc_cache_flush (sljit_ins * from , sljit_ins * to)"		1637905	0					
ANR	1637907	CompoundStatement		50:0:2050:3040	1637905	0					
ANR	1637908	ExpressionStatement	"_sync_cache_range ( ( caddr_t ) from , ( int ) ( ( size_t ) to - ( size_t ) from ) )"	52:1:2065:2131	1637905	0	True				
ANR	1637909	CallExpression	"_sync_cache_range ( ( caddr_t ) from , ( int ) ( ( size_t ) to - ( size_t ) from ) )"		1637905	0					
ANR	1637910	Callee	_sync_cache_range		1637905	0					
ANR	1637911	Identifier	_sync_cache_range		1637905	0					
ANR	1637912	ArgumentList	( caddr_t ) from		1637905	1					
ANR	1637913	Argument	( caddr_t ) from		1637905	0					
ANR	1637914	CastExpression	( caddr_t ) from		1637905	0					
ANR	1637915	CastTarget	caddr_t		1637905	0					
ANR	1637916	Identifier	from		1637905	1					
ANR	1637917	Argument	( int ) ( ( size_t ) to - ( size_t ) from )		1637905	1					
ANR	1637918	CastExpression	( int ) ( ( size_t ) to - ( size_t ) from )		1637905	0					
ANR	1637919	CastTarget	int		1637905	0					
ANR	1637920	AdditiveExpression	( size_t ) to - ( size_t ) from		1637905	1		-			
ANR	1637921	CastExpression	( size_t ) to		1637905	0					
ANR	1637922	CastTarget	size_t		1637905	0					
ANR	1637923	Identifier	to		1637905	1					
ANR	1637924	CastExpression	( size_t ) from		1637905	1					
ANR	1637925	CastTarget	size_t		1637905	0					
ANR	1637926	Identifier	from		1637905	1					
ANR	1637927	ReturnType	static void		1637905	1					
ANR	1637928	Identifier	ppc_cache_flush		1637905	2					
ANR	1637929	ParameterList	"sljit_ins * from , sljit_ins * to"		1637905	3					
ANR	1637930	Parameter	sljit_ins * from	49:28:2018:2032	1637905	0	True				
ANR	1637931	ParameterType	sljit_ins *		1637905	0					
ANR	1637932	Identifier	from		1637905	1					
ANR	1637933	Parameter	sljit_ins * to	49:45:2035:2047	1637905	1	True				
ANR	1637934	ParameterType	sljit_ins *		1637905	0					
ANR	1637935	Identifier	to		1637905	1					
ANR	1637936	CFGEntryNode	ENTRY		1637905		True				
ANR	1637937	CFGExitNode	EXIT		1637905		True				
ANR	1637938	Symbol	from		1637905						
ANR	1637939	Symbol	to		1637905						
ANR	1637940	DeclStmt									
ANR	1637941	Decl							SLJIT_CONST sljit_ub	SLJIT_CONST sljit_ub [ SLJIT_NUMBER_OF_REGISTERS + 7 ]	reg_map
ANR	1637942	Function	sljit_set_function_context	227:0:7504:7823							
ANR	1637943	FunctionDef	"sljit_set_function_context (void * * func_ptr , struct sljit_function_context * context , sljit_sw addr , void * func)"		1637942	0					
ANR	1637944	CompoundStatement		228:0:7645:7823	1637942	0					
ANR	1637945	IdentifierDeclStatement	sljit_sw * ptrs ;	229:1:7648:7662	1637942	0	True				
ANR	1637946	IdentifierDecl	* ptrs		1637942	0					
ANR	1637947	IdentifierDeclType	sljit_sw *		1637942	0					
ANR	1637948	Identifier	ptrs		1637942	1					
ANR	1637949	IfStatement	if ( func_ptr )		1637942	1					
ANR	1637950	Condition	func_ptr	230:5:7669:7676	1637942	0	True				
ANR	1637951	Identifier	func_ptr		1637942	0					
ANR	1637952	ExpressionStatement	* func_ptr = ( void * ) context	231:2:7681:7707	1637942	1	True				
ANR	1637953	AssignmentExpression	* func_ptr = ( void * ) context		1637942	0		=			
ANR	1637954	UnaryOperationExpression	* func_ptr		1637942	0					
ANR	1637955	UnaryOperator	*		1637942	0					
ANR	1637956	Identifier	func_ptr		1637942	1					
ANR	1637957	CastExpression	( void * ) context		1637942	1					
ANR	1637958	CastTarget	void *		1637942	0					
ANR	1637959	Identifier	context		1637942	1					
ANR	1637960	ExpressionStatement	ptrs = ( sljit_sw * ) func	232:1:7710:7732	1637942	2	True				
ANR	1637961	AssignmentExpression	ptrs = ( sljit_sw * ) func		1637942	0		=			
ANR	1637962	Identifier	ptrs		1637942	0					
ANR	1637963	CastExpression	( sljit_sw * ) func		1637942	1					
ANR	1637964	CastTarget	sljit_sw *		1637942	0					
ANR	1637965	Identifier	func		1637942	1					
ANR	1637966	ExpressionStatement	context -> addr = addr ? addr : ptrs [ 0 ]	233:1:7735:7772	1637942	3	True				
ANR	1637967	AssignmentExpression	context -> addr = addr ? addr : ptrs [ 0 ]		1637942	0		=			
ANR	1637968	PtrMemberAccess	context -> addr		1637942	0					
ANR	1637969	Identifier	context		1637942	0					
ANR	1637970	Identifier	addr		1637942	1					
ANR	1637971	ConditionalExpression	addr ? addr : ptrs [ 0 ]		1637942	1					
ANR	1637972	Condition	addr		1637942	0					
ANR	1637973	Identifier	addr		1637942	0					
ANR	1637974	Identifier	addr		1637942	1					
ANR	1637975	ArrayIndexing	ptrs [ 0 ]		1637942	2					
ANR	1637976	Identifier	ptrs		1637942	0					
ANR	1637977	PrimaryExpression	0		1637942	1					
ANR	1637978	ExpressionStatement	context -> r2 = ptrs [ 1 ]	234:1:7775:7796	1637942	4	True				
ANR	1637979	AssignmentExpression	context -> r2 = ptrs [ 1 ]		1637942	0		=			
ANR	1637980	PtrMemberAccess	context -> r2		1637942	0					
ANR	1637981	Identifier	context		1637942	0					
ANR	1637982	Identifier	r2		1637942	1					
ANR	1637983	ArrayIndexing	ptrs [ 1 ]		1637942	1					
ANR	1637984	Identifier	ptrs		1637942	0					
ANR	1637985	PrimaryExpression	1		1637942	1					
ANR	1637986	ExpressionStatement	context -> r11 = ptrs [ 2 ]	235:1:7799:7821	1637942	5	True				
ANR	1637987	AssignmentExpression	context -> r11 = ptrs [ 2 ]		1637942	0		=			
ANR	1637988	PtrMemberAccess	context -> r11		1637942	0					
ANR	1637989	Identifier	context		1637942	0					
ANR	1637990	Identifier	r11		1637942	1					
ANR	1637991	ArrayIndexing	ptrs [ 2 ]		1637942	1					
ANR	1637992	Identifier	ptrs		1637942	0					
ANR	1637993	PrimaryExpression	2		1637942	1					
ANR	1637994	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void		1637942	1					
ANR	1637995	Identifier	sljit_set_function_context		1637942	2					
ANR	1637996	ParameterList	"void * * func_ptr , struct sljit_function_context * context , sljit_sw addr , void * func"		1637942	3					
ANR	1637997	Parameter	void * * func_ptr	227:57:7561:7575	1637942	0	True				
ANR	1637998	ParameterType	void * *		1637942	0					
ANR	1637999	Identifier	func_ptr		1637942	1					
ANR	1638000	Parameter	struct sljit_function_context * context	227:74:7578:7615	1637942	1	True				
ANR	1638001	ParameterType	struct sljit_function_context *		1637942	0					
ANR	1638002	Identifier	context		1637942	1					
ANR	1638003	Parameter	sljit_sw addr	227:114:7618:7630	1637942	2	True				
ANR	1638004	ParameterType	sljit_sw		1637942	0					
ANR	1638005	Identifier	addr		1637942	1					
ANR	1638006	Parameter	void * func	227:129:7633:7642	1637942	3	True				
ANR	1638007	ParameterType	void *		1637942	0					
ANR	1638008	Identifier	func		1637942	1					
ANR	1638009	CFGEntryNode	ENTRY		1637942		True				
ANR	1638010	CFGExitNode	EXIT		1637942		True				
ANR	1638011	Symbol	ptrs		1637942						
ANR	1638012	Symbol	context -> r2		1637942						
ANR	1638013	Symbol	func		1637942						
ANR	1638014	Symbol	func_ptr		1637942						
ANR	1638015	Symbol	context		1637942						
ANR	1638016	Symbol	* ptrs		1637942						
ANR	1638017	Symbol	context -> r11		1637942						
ANR	1638018	Symbol	* func_ptr		1637942						
ANR	1638019	Symbol	context -> addr		1637942						
ANR	1638020	Symbol	addr		1637942						
ANR	1638021	Symbol	* context		1637942						
ANR	1638022	Function	push_inst	239:0:7833:8051							
ANR	1638023	FunctionDef	"push_inst (struct sljit_compiler * compiler , sljit_ins ins)"		1638022	0					
ANR	1638024	CompoundStatement		240:0:7907:8051	1638022	0					
ANR	1638025	IdentifierDeclStatement	"sljit_ins * ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) ) ;"	241:1:7910:7978	1638022	0	True				
ANR	1638026	IdentifierDecl	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1638022	0					
ANR	1638027	IdentifierDeclType	sljit_ins *		1638022	0					
ANR	1638028	Identifier	ptr		1638022	1					
ANR	1638029	AssignmentExpression	"* ptr = ( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1638022	2		=			
ANR	1638030	Identifier	ptr		1638022	0					
ANR	1638031	CastExpression	"( sljit_ins * ) ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1638022	1					
ANR	1638032	CastTarget	sljit_ins *		1638022	0					
ANR	1638033	CallExpression	"ensure_buf ( compiler , sizeof ( sljit_ins ) )"		1638022	1					
ANR	1638034	Callee	ensure_buf		1638022	0					
ANR	1638035	Identifier	ensure_buf		1638022	0					
ANR	1638036	ArgumentList	compiler		1638022	1					
ANR	1638037	Argument	compiler		1638022	0					
ANR	1638038	Identifier	compiler		1638022	0					
ANR	1638039	Argument	sizeof ( sljit_ins )		1638022	1					
ANR	1638040	SizeofExpression	sizeof ( sljit_ins )		1638022	0					
ANR	1638041	Sizeof	sizeof		1638022	0					
ANR	1638042	SizeofOperand	sljit_ins		1638022	1					
ANR	1638043	ExpressionStatement	FAIL_IF ( ! ptr )	242:1:7981:7994	1638022	1	True				
ANR	1638044	CallExpression	FAIL_IF ( ! ptr )		1638022	0					
ANR	1638045	Callee	FAIL_IF		1638022	0					
ANR	1638046	Identifier	FAIL_IF		1638022	0					
ANR	1638047	ArgumentList	! ptr		1638022	1					
ANR	1638048	Argument	! ptr		1638022	0					
ANR	1638049	UnaryOperationExpression	! ptr		1638022	0					
ANR	1638050	UnaryOperator	!		1638022	0					
ANR	1638051	Identifier	ptr		1638022	1					
ANR	1638052	ExpressionStatement	* ptr = ins	243:1:7997:8007	1638022	2	True				
ANR	1638053	AssignmentExpression	* ptr = ins		1638022	0		=			
ANR	1638054	UnaryOperationExpression	* ptr		1638022	0					
ANR	1638055	UnaryOperator	*		1638022	0					
ANR	1638056	Identifier	ptr		1638022	1					
ANR	1638057	Identifier	ins		1638022	1					
ANR	1638058	ExpressionStatement	compiler -> size ++	244:1:8010:8026	1638022	3	True				
ANR	1638059	PostIncDecOperationExpression	compiler -> size ++		1638022	0					
ANR	1638060	PtrMemberAccess	compiler -> size		1638022	0					
ANR	1638061	Identifier	compiler		1638022	0					
ANR	1638062	Identifier	size		1638022	1					
ANR	1638063	IncDec	++		1638022	1					
ANR	1638064	ReturnStatement	return SLJIT_SUCCESS ;	245:1:8029:8049	1638022	4	True				
ANR	1638065	Identifier	SLJIT_SUCCESS		1638022	0					
ANR	1638066	ReturnType	static sljit_si		1638022	1					
ANR	1638067	Identifier	push_inst		1638022	2					
ANR	1638068	ParameterList	"struct sljit_compiler * compiler , sljit_ins ins"		1638022	3					
ANR	1638069	Parameter	struct sljit_compiler * compiler	239:26:7859:7889	1638022	0	True				
ANR	1638070	ParameterType	struct sljit_compiler *		1638022	0					
ANR	1638071	Identifier	compiler		1638022	1					
ANR	1638072	Parameter	sljit_ins ins	239:59:7892:7904	1638022	1	True				
ANR	1638073	ParameterType	sljit_ins		1638022	0					
ANR	1638074	Identifier	ins		1638022	1					
ANR	1638075	CFGEntryNode	ENTRY		1638022		True				
ANR	1638076	CFGExitNode	EXIT		1638022		True				
ANR	1638077	Symbol	compiler -> size		1638022						
ANR	1638078	Symbol	ensure_buf		1638022						
ANR	1638079	Symbol	* ptr		1638022						
ANR	1638080	Symbol	SLJIT_SUCCESS		1638022						
ANR	1638081	Symbol	* compiler		1638022						
ANR	1638082	Symbol	compiler		1638022						
ANR	1638083	Symbol	ins		1638022						
ANR	1638084	Symbol	ptr		1638022						
ANR	1638085	Function	detect_jump_type	248:0:8054:9780							
ANR	1638086	FunctionDef	"detect_jump_type (struct sljit_jump * jump , sljit_ins * code_ptr , sljit_ins * code)"		1638085	0					
ANR	1638087	CompoundStatement		249:0:8163:9780	1638085	0					
ANR	1638088	IdentifierDeclStatement	sljit_sw diff ;	250:1:8166:8179	1638085	0	True				
ANR	1638089	IdentifierDecl	diff		1638085	0					
ANR	1638090	IdentifierDeclType	sljit_sw		1638085	0					
ANR	1638091	Identifier	diff		1638085	1					
ANR	1638092	IdentifierDeclStatement	sljit_uw target_addr ;	251:1:8182:8202	1638085	1	True				
ANR	1638093	IdentifierDecl	target_addr		1638085	0					
ANR	1638094	IdentifierDeclType	sljit_uw		1638085	0					
ANR	1638095	Identifier	target_addr		1638085	1					
ANR	1638096	IdentifierDeclStatement	sljit_sw extra_jump_flags ;	252:1:8205:8230	1638085	2	True				
ANR	1638097	IdentifierDecl	extra_jump_flags		1638085	0					
ANR	1638098	IdentifierDeclType	sljit_sw		1638085	0					
ANR	1638099	Identifier	extra_jump_flags		1638085	1					
ANR	1638100	IfStatement	if ( jump -> flags & ( SLJIT_REWRITABLE_JUMP | IS_CALL ) )		1638085	3					
ANR	1638101	Condition	jump -> flags & ( SLJIT_REWRITABLE_JUMP | IS_CALL )	255:5:8371:8417	1638085	0	True				
ANR	1638102	BitAndExpression	jump -> flags & ( SLJIT_REWRITABLE_JUMP | IS_CALL )		1638085	0		&			
ANR	1638103	PtrMemberAccess	jump -> flags		1638085	0					
ANR	1638104	Identifier	jump		1638085	0					
ANR	1638105	Identifier	flags		1638085	1					
ANR	1638106	InclusiveOrExpression	SLJIT_REWRITABLE_JUMP | IS_CALL		1638085	1		|			
ANR	1638107	Identifier	SLJIT_REWRITABLE_JUMP		1638085	0					
ANR	1638108	Identifier	IS_CALL		1638085	1					
ANR	1638109	ReturnStatement	return 0 ;	256:2:8422:8430	1638085	1	True				
ANR	1638110	PrimaryExpression	0		1638085	0					
ANR	1638111	IfStatement	if ( jump -> flags & JUMP_ADDR )		1638085	4					
ANR	1638112	Condition	jump -> flags & JUMP_ADDR	262:5:8505:8527	1638085	0	True				
ANR	1638113	BitAndExpression	jump -> flags & JUMP_ADDR		1638085	0		&			
ANR	1638114	PtrMemberAccess	jump -> flags		1638085	0					
ANR	1638115	Identifier	jump		1638085	0					
ANR	1638116	Identifier	flags		1638085	1					
ANR	1638117	Identifier	JUMP_ADDR		1638085	1					
ANR	1638118	ExpressionStatement	target_addr = jump -> u . target	263:2:8532:8560	1638085	1	True				
ANR	1638119	AssignmentExpression	target_addr = jump -> u . target		1638085	0		=			
ANR	1638120	Identifier	target_addr		1638085	0					
ANR	1638121	MemberAccess	jump -> u . target		1638085	1					
ANR	1638122	PtrMemberAccess	jump -> u		1638085	0					
ANR	1638123	Identifier	jump		1638085	0					
ANR	1638124	Identifier	u		1638085	1					
ANR	1638125	Identifier	target		1638085	1					
ANR	1638126	ElseStatement	else		1638085	0					
ANR	1638127	CompoundStatement		16:6:404:404	1638085	0					
ANR	1638128	ExpressionStatement	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )	265:2:8572:8610	1638085	0	True				
ANR	1638129	CallExpression	SLJIT_ASSERT ( jump -> flags & JUMP_LABEL )		1638085	0					
ANR	1638130	Callee	SLJIT_ASSERT		1638085	0					
ANR	1638131	Identifier	SLJIT_ASSERT		1638085	0					
ANR	1638132	ArgumentList	jump -> flags & JUMP_LABEL		1638085	1					
ANR	1638133	Argument	jump -> flags & JUMP_LABEL		1638085	0					
ANR	1638134	BitAndExpression	jump -> flags & JUMP_LABEL		1638085	0		&			
ANR	1638135	PtrMemberAccess	jump -> flags		1638085	0					
ANR	1638136	Identifier	jump		1638085	0					
ANR	1638137	Identifier	flags		1638085	1					
ANR	1638138	Identifier	JUMP_LABEL		1638085	1					
ANR	1638139	ExpressionStatement	target_addr = ( sljit_uw ) ( code + jump -> u . label -> size )	266:2:8614:8666	1638085	1	True				
ANR	1638140	AssignmentExpression	target_addr = ( sljit_uw ) ( code + jump -> u . label -> size )		1638085	0		=			
ANR	1638141	Identifier	target_addr		1638085	0					
ANR	1638142	CastExpression	( sljit_uw ) ( code + jump -> u . label -> size )		1638085	1					
ANR	1638143	CastTarget	sljit_uw		1638085	0					
ANR	1638144	AdditiveExpression	code + jump -> u . label -> size		1638085	1		+			
ANR	1638145	Identifier	code		1638085	0					
ANR	1638146	PtrMemberAccess	jump -> u . label -> size		1638085	1					
ANR	1638147	MemberAccess	jump -> u . label		1638085	0					
ANR	1638148	PtrMemberAccess	jump -> u		1638085	0					
ANR	1638149	Identifier	jump		1638085	0					
ANR	1638150	Identifier	u		1638085	1					
ANR	1638151	Identifier	label		1638085	1					
ANR	1638152	Identifier	size		1638085	1					
ANR	1638153	IfStatement	if ( jump -> flags & IS_CALL )		1638085	5					
ANR	1638154	Condition	jump -> flags & IS_CALL	270:5:8810:8830	1638085	0	True				
ANR	1638155	BitAndExpression	jump -> flags & IS_CALL		1638085	0		&			
ANR	1638156	PtrMemberAccess	jump -> flags		1638085	0					
ANR	1638157	Identifier	jump		1638085	0					
ANR	1638158	Identifier	flags		1638085	1					
ANR	1638159	Identifier	IS_CALL		1638085	1					
ANR	1638160	GotoStatement	goto keep_address ;	271:2:8835:8852	1638085	1	True				
ANR	1638161	Identifier	keep_address		1638085	0					
ANR	1638162	ExpressionStatement	diff = ( ( sljit_sw ) target_addr - ( sljit_sw ) ( code_ptr ) ) & ~0x3l	274:1:8863:8924	1638085	6	True				
ANR	1638163	AssignmentExpression	diff = ( ( sljit_sw ) target_addr - ( sljit_sw ) ( code_ptr ) ) & ~0x3l		1638085	0		=			
ANR	1638164	Identifier	diff		1638085	0					
ANR	1638165	BitAndExpression	( ( sljit_sw ) target_addr - ( sljit_sw ) ( code_ptr ) ) & ~0x3l		1638085	1		&			
ANR	1638166	AdditiveExpression	( sljit_sw ) target_addr - ( sljit_sw ) ( code_ptr )		1638085	0		-			
ANR	1638167	CastExpression	( sljit_sw ) target_addr		1638085	0					
ANR	1638168	CastTarget	sljit_sw		1638085	0					
ANR	1638169	Identifier	target_addr		1638085	1					
ANR	1638170	CastExpression	( sljit_sw ) ( code_ptr )		1638085	1					
ANR	1638171	CastTarget	sljit_sw		1638085	0					
ANR	1638172	Identifier	code_ptr		1638085	1					
ANR	1638173	Identifier	~0x3l		1638085	1					
ANR	1638174	ExpressionStatement	extra_jump_flags = 0	276:1:8928:8948	1638085	7	True				
ANR	1638175	AssignmentExpression	extra_jump_flags = 0		1638085	0		=			
ANR	1638176	Identifier	extra_jump_flags		1638085	0					
ANR	1638177	PrimaryExpression	0		1638085	1					
ANR	1638178	IfStatement	if ( jump -> flags & IS_COND )		1638085	8					
ANR	1638179	Condition	jump -> flags & IS_COND	277:5:8955:8975	1638085	0	True				
ANR	1638180	BitAndExpression	jump -> flags & IS_COND		1638085	0		&			
ANR	1638181	PtrMemberAccess	jump -> flags		1638085	0					
ANR	1638182	Identifier	jump		1638085	0					
ANR	1638183	Identifier	flags		1638085	1					
ANR	1638184	Identifier	IS_COND		1638085	1					
ANR	1638185	CompoundStatement		29:28:814:814	1638085	1					
ANR	1638186	IfStatement	if ( diff <= 0x7fff && diff >= - 0x8000 )		1638085	0					
ANR	1638187	Condition	diff <= 0x7fff && diff >= - 0x8000	278:6:8986:9018	1638085	0	True				
ANR	1638188	AndExpression	diff <= 0x7fff && diff >= - 0x8000		1638085	0		&&			
ANR	1638189	RelationalExpression	diff <= 0x7fff		1638085	0		<=			
ANR	1638190	Identifier	diff		1638085	0					
ANR	1638191	PrimaryExpression	0x7fff		1638085	1					
ANR	1638192	RelationalExpression	diff >= - 0x8000		1638085	1		>=			
ANR	1638193	Identifier	diff		1638085	0					
ANR	1638194	UnaryOperationExpression	- 0x8000		1638085	1					
ANR	1638195	UnaryOperator	-		1638085	0					
ANR	1638196	PrimaryExpression	0x8000		1638085	1					
ANR	1638197	CompoundStatement		30:41:857:857	1638085	1					
ANR	1638198	ExpressionStatement	jump -> flags |= PATCH_B	279:3:9026:9048	1638085	0	True				
ANR	1638199	AssignmentExpression	jump -> flags |= PATCH_B		1638085	0		|=			
ANR	1638200	PtrMemberAccess	jump -> flags		1638085	0					
ANR	1638201	Identifier	jump		1638085	0					
ANR	1638202	Identifier	flags		1638085	1					
ANR	1638203	Identifier	PATCH_B		1638085	1					
ANR	1638204	ReturnStatement	return 1 ;	280:3:9053:9061	1638085	1	True				
ANR	1638205	PrimaryExpression	1		1638085	0					
ANR	1638206	IfStatement	if ( target_addr <= 0xffff )		1638085	1					
ANR	1638207	Condition	target_addr <= 0xffff	282:6:9073:9093	1638085	0	True				
ANR	1638208	RelationalExpression	target_addr <= 0xffff		1638085	0		<=			
ANR	1638209	Identifier	target_addr		1638085	0					
ANR	1638210	PrimaryExpression	0xffff		1638085	1					
ANR	1638211	CompoundStatement		34:29:932:932	1638085	1					
ANR	1638212	ExpressionStatement	jump -> flags |= PATCH_B | PATCH_ABS_B	283:3:9101:9137	1638085	0	True				
ANR	1638213	AssignmentExpression	jump -> flags |= PATCH_B | PATCH_ABS_B		1638085	0		|=			
ANR	1638214	PtrMemberAccess	jump -> flags		1638085	0					
ANR	1638215	Identifier	jump		1638085	0					
ANR	1638216	Identifier	flags		1638085	1					
ANR	1638217	InclusiveOrExpression	PATCH_B | PATCH_ABS_B		1638085	1		|			
ANR	1638218	Identifier	PATCH_B		1638085	0					
ANR	1638219	Identifier	PATCH_ABS_B		1638085	1					
ANR	1638220	ReturnStatement	return 1 ;	284:3:9142:9150	1638085	1	True				
ANR	1638221	PrimaryExpression	1		1638085	0					
ANR	1638222	ExpressionStatement	extra_jump_flags = REMOVE_COND	286:2:9158:9188	1638085	2	True				
ANR	1638223	AssignmentExpression	extra_jump_flags = REMOVE_COND		1638085	0		=			
ANR	1638224	Identifier	extra_jump_flags		1638085	0					
ANR	1638225	Identifier	REMOVE_COND		1638085	1					
ANR	1638226	ExpressionStatement	diff -= sizeof ( sljit_ins )	288:2:9193:9218	1638085	3	True				
ANR	1638227	AssignmentExpression	diff -= sizeof ( sljit_ins )		1638085	0		-=			
ANR	1638228	Identifier	diff		1638085	0					
ANR	1638229	SizeofExpression	sizeof ( sljit_ins )		1638085	1					
ANR	1638230	Sizeof	sizeof		1638085	0					
ANR	1638231	SizeofOperand	sljit_ins		1638085	1					
ANR	1638232	IfStatement	if ( diff <= 0x01ffffff && diff >= - 0x02000000 )		1638085	9					
ANR	1638233	Condition	diff <= 0x01ffffff && diff >= - 0x02000000	291:5:9229:9269	1638085	0	True				
ANR	1638234	AndExpression	diff <= 0x01ffffff && diff >= - 0x02000000		1638085	0		&&			
ANR	1638235	RelationalExpression	diff <= 0x01ffffff		1638085	0		<=			
ANR	1638236	Identifier	diff		1638085	0					
ANR	1638237	PrimaryExpression	0x01ffffff		1638085	1					
ANR	1638238	RelationalExpression	diff >= - 0x02000000		1638085	1		>=			
ANR	1638239	Identifier	diff		1638085	0					
ANR	1638240	UnaryOperationExpression	- 0x02000000		1638085	1					
ANR	1638241	UnaryOperator	-		1638085	0					
ANR	1638242	PrimaryExpression	0x02000000		1638085	1					
ANR	1638243	CompoundStatement		43:48:1108:1108	1638085	1					
ANR	1638244	ExpressionStatement	jump -> flags |= PATCH_B | extra_jump_flags	292:2:9276:9317	1638085	0	True				
ANR	1638245	AssignmentExpression	jump -> flags |= PATCH_B | extra_jump_flags		1638085	0		|=			
ANR	1638246	PtrMemberAccess	jump -> flags		1638085	0					
ANR	1638247	Identifier	jump		1638085	0					
ANR	1638248	Identifier	flags		1638085	1					
ANR	1638249	InclusiveOrExpression	PATCH_B | extra_jump_flags		1638085	1		|			
ANR	1638250	Identifier	PATCH_B		1638085	0					
ANR	1638251	Identifier	extra_jump_flags		1638085	1					
ANR	1638252	ReturnStatement	return 1 ;	293:2:9321:9329	1638085	1	True				
ANR	1638253	PrimaryExpression	1		1638085	0					
ANR	1638254	IfStatement	if ( target_addr <= 0x03ffffff )		1638085	10					
ANR	1638255	Condition	target_addr <= 0x03ffffff	295:5:9339:9363	1638085	0	True				
ANR	1638256	RelationalExpression	target_addr <= 0x03ffffff		1638085	0		<=			
ANR	1638257	Identifier	target_addr		1638085	0					
ANR	1638258	PrimaryExpression	0x03ffffff		1638085	1					
ANR	1638259	CompoundStatement		47:32:1202:1202	1638085	1					
ANR	1638260	ExpressionStatement	jump -> flags |= PATCH_B | PATCH_ABS_B | extra_jump_flags	296:2:9370:9425	1638085	0	True				
ANR	1638261	AssignmentExpression	jump -> flags |= PATCH_B | PATCH_ABS_B | extra_jump_flags		1638085	0		|=			
ANR	1638262	PtrMemberAccess	jump -> flags		1638085	0					
ANR	1638263	Identifier	jump		1638085	0					
ANR	1638264	Identifier	flags		1638085	1					
ANR	1638265	InclusiveOrExpression	PATCH_B | PATCH_ABS_B | extra_jump_flags		1638085	1		|			
ANR	1638266	Identifier	PATCH_B		1638085	0					
ANR	1638267	InclusiveOrExpression	PATCH_ABS_B | extra_jump_flags		1638085	1		|			
ANR	1638268	Identifier	PATCH_ABS_B		1638085	0					
ANR	1638269	Identifier	extra_jump_flags		1638085	1					
ANR	1638270	ReturnStatement	return 1 ;	297:2:9429:9437	1638085	1	True				
ANR	1638271	PrimaryExpression	1		1638085	0					
ANR	1638272	Label	keep_address :	302:0:9577:9589	1638085	11	True				
ANR	1638273	Identifier	keep_address		1638085	0					
ANR	1638274	IfStatement	if ( target_addr <= 0x7fffffff )		1638085	12					
ANR	1638275	Condition	target_addr <= 0x7fffffff	304:5:9603:9627	1638085	0	True				
ANR	1638276	RelationalExpression	target_addr <= 0x7fffffff		1638085	0		<=			
ANR	1638277	Identifier	target_addr		1638085	0					
ANR	1638278	PrimaryExpression	0x7fffffff		1638085	1					
ANR	1638279	CompoundStatement		56:32:1466:1466	1638085	1					
ANR	1638280	ExpressionStatement	jump -> flags |= PATCH_ABS32	305:2:9634:9660	1638085	0	True				
ANR	1638281	AssignmentExpression	jump -> flags |= PATCH_ABS32		1638085	0		|=			
ANR	1638282	PtrMemberAccess	jump -> flags		1638085	0					
ANR	1638283	Identifier	jump		1638085	0					
ANR	1638284	Identifier	flags		1638085	1					
ANR	1638285	Identifier	PATCH_ABS32		1638085	1					
ANR	1638286	ReturnStatement	return 1 ;	306:2:9664:9672	1638085	1	True				
ANR	1638287	PrimaryExpression	1		1638085	0					
ANR	1638288	IfStatement	if ( target_addr <= 0x7fffffffffffl )		1638085	13					
ANR	1638289	Condition	target_addr <= 0x7fffffffffffl	308:5:9682:9711	1638085	0	True				
ANR	1638290	RelationalExpression	target_addr <= 0x7fffffffffffl		1638085	0		<=			
ANR	1638291	Identifier	target_addr		1638085	0					
ANR	1638292	PrimaryExpression	0x7fffffffffffl		1638085	1					
ANR	1638293	CompoundStatement		60:37:1550:1550	1638085	1					
ANR	1638294	ExpressionStatement	jump -> flags |= PATCH_ABS48	309:2:9718:9744	1638085	0	True				
ANR	1638295	AssignmentExpression	jump -> flags |= PATCH_ABS48		1638085	0		|=			
ANR	1638296	PtrMemberAccess	jump -> flags		1638085	0					
ANR	1638297	Identifier	jump		1638085	0					
ANR	1638298	Identifier	flags		1638085	1					
ANR	1638299	Identifier	PATCH_ABS48		1638085	1					
ANR	1638300	ReturnStatement	return 1 ;	310:2:9748:9756	1638085	1	True				
ANR	1638301	PrimaryExpression	1		1638085	0					
ANR	1638302	ReturnStatement	return 0 ;	314:1:9770:9778	1638085	14	True				
ANR	1638303	PrimaryExpression	0		1638085	0					
ANR	1638304	ReturnType	static SLJIT_INLINE sljit_si		1638085	1					
ANR	1638305	Identifier	detect_jump_type		1638085	2					
ANR	1638306	ParameterList	"struct sljit_jump * jump , sljit_ins * code_ptr , sljit_ins * code"		1638085	3					
ANR	1638307	Parameter	struct sljit_jump * jump	248:46:8100:8122	1638085	0	True				
ANR	1638308	ParameterType	struct sljit_jump *		1638085	0					
ANR	1638309	Identifier	jump		1638085	1					
ANR	1638310	Parameter	sljit_ins * code_ptr	248:71:8125:8143	1638085	1	True				
ANR	1638311	ParameterType	sljit_ins *		1638085	0					
ANR	1638312	Identifier	code_ptr		1638085	1					
ANR	1638313	Parameter	sljit_ins * code	248:92:8146:8160	1638085	2	True				
ANR	1638314	ParameterType	sljit_ins *		1638085	0					
ANR	1638315	Identifier	code		1638085	1					
ANR	1638316	CFGEntryNode	ENTRY		1638085		True				
ANR	1638317	CFGExitNode	EXIT		1638085		True				
ANR	1638318	Symbol	jump -> u . label -> size		1638085						
ANR	1638319	Symbol	code		1638085						
ANR	1638320	Symbol	* * jump		1638085						
ANR	1638321	Symbol	* jump		1638085						
ANR	1638322	Symbol	jump -> u		1638085						
ANR	1638323	Symbol	jump -> flags		1638085						
ANR	1638324	Symbol	JUMP_LABEL		1638085						
ANR	1638325	Symbol	JUMP_ADDR		1638085						
ANR	1638326	Symbol	PATCH_ABS32		1638085						
ANR	1638327	Symbol	code_ptr		1638085						
ANR	1638328	Symbol	~0x3l		1638085						
ANR	1638329	Symbol	SLJIT_REWRITABLE_JUMP		1638085						
ANR	1638330	Symbol	jump		1638085						
ANR	1638331	Symbol	extra_jump_flags		1638085						
ANR	1638332	Symbol	target_addr		1638085						
ANR	1638333	Symbol	diff		1638085						
ANR	1638334	Symbol	PATCH_ABS48		1638085						
ANR	1638335	Symbol	PATCH_ABS_B		1638085						
ANR	1638336	Symbol	IS_CALL		1638085						
ANR	1638337	Symbol	* jump -> u . label		1638085						
ANR	1638338	Symbol	REMOVE_COND		1638085						
ANR	1638339	Symbol	* jump -> u		1638085						
ANR	1638340	Symbol	IS_COND		1638085						
ANR	1638341	Symbol	jump -> u . target		1638085						
ANR	1638342	Symbol	PATCH_B		1638085						
ANR	1638343	Symbol	jump -> u . label		1638085						
ANR	1638344	Function	sljit_generate_code	317:0:9783:15819							
ANR	1638345	FunctionDef	sljit_generate_code (struct sljit_compiler * compiler)		1638344	0					
ANR	1638346	CompoundStatement		318:0:9867:15819	1638344	0					
ANR	1638347	IdentifierDeclStatement	struct sljit_memory_fragment * buf ;	319:1:9870:9903	1638344	0	True				
ANR	1638348	IdentifierDecl	* buf		1638344	0					
ANR	1638349	IdentifierDeclType	struct sljit_memory_fragment *		1638344	0					
ANR	1638350	Identifier	buf		1638344	1					
ANR	1638351	IdentifierDeclStatement	sljit_ins * code ;	320:1:9906:9921	1638344	1	True				
ANR	1638352	IdentifierDecl	* code		1638344	0					
ANR	1638353	IdentifierDeclType	sljit_ins *		1638344	0					
ANR	1638354	Identifier	code		1638344	1					
ANR	1638355	IdentifierDeclStatement	sljit_ins * code_ptr ;	321:1:9924:9943	1638344	2	True				
ANR	1638356	IdentifierDecl	* code_ptr		1638344	0					
ANR	1638357	IdentifierDeclType	sljit_ins *		1638344	0					
ANR	1638358	Identifier	code_ptr		1638344	1					
ANR	1638359	IdentifierDeclStatement	sljit_ins * buf_ptr ;	322:1:9946:9964	1638344	3	True				
ANR	1638360	IdentifierDecl	* buf_ptr		1638344	0					
ANR	1638361	IdentifierDeclType	sljit_ins *		1638344	0					
ANR	1638362	Identifier	buf_ptr		1638344	1					
ANR	1638363	IdentifierDeclStatement	sljit_ins * buf_end ;	323:1:9967:9985	1638344	4	True				
ANR	1638364	IdentifierDecl	* buf_end		1638344	0					
ANR	1638365	IdentifierDeclType	sljit_ins *		1638344	0					
ANR	1638366	Identifier	buf_end		1638344	1					
ANR	1638367	IdentifierDeclStatement	sljit_uw word_count ;	324:1:9988:10007	1638344	5	True				
ANR	1638368	IdentifierDecl	word_count		1638344	0					
ANR	1638369	IdentifierDeclType	sljit_uw		1638344	0					
ANR	1638370	Identifier	word_count		1638344	1					
ANR	1638371	IdentifierDeclStatement	sljit_uw addr ;	325:1:10010:10023	1638344	6	True				
ANR	1638372	IdentifierDecl	addr		1638344	0					
ANR	1638373	IdentifierDeclType	sljit_uw		1638344	0					
ANR	1638374	Identifier	addr		1638344	1					
ANR	1638375	IdentifierDeclStatement	struct sljit_label * label ;	327:1:10027:10052	1638344	7	True				
ANR	1638376	IdentifierDecl	* label		1638344	0					
ANR	1638377	IdentifierDeclType	struct sljit_label *		1638344	0					
ANR	1638378	Identifier	label		1638344	1					
ANR	1638379	IdentifierDeclStatement	struct sljit_jump * jump ;	328:1:10055:10078	1638344	8	True				
ANR	1638380	IdentifierDecl	* jump		1638344	0					
ANR	1638381	IdentifierDeclType	struct sljit_jump *		1638344	0					
ANR	1638382	Identifier	jump		1638344	1					
ANR	1638383	IdentifierDeclStatement	struct sljit_const * const_ ;	329:1:10081:10107	1638344	9	True				
ANR	1638384	IdentifierDecl	* const_		1638344	0					
ANR	1638385	IdentifierDeclType	struct sljit_const *		1638344	0					
ANR	1638386	Identifier	const_		1638344	1					
ANR	1638387	ExpressionStatement	CHECK_ERROR_PTR ( )	331:1:10111:10128	1638344	10	True				
ANR	1638388	CallExpression	CHECK_ERROR_PTR ( )		1638344	0					
ANR	1638389	Callee	CHECK_ERROR_PTR		1638344	0					
ANR	1638390	Identifier	CHECK_ERROR_PTR		1638344	0					
ANR	1638391	ArgumentList			1638344	1					
ANR	1638392	ExpressionStatement	CHECK_PTR ( check_sljit_generate_code ( compiler ) )	332:1:10131:10177	1638344	11	True				
ANR	1638393	CallExpression	CHECK_PTR ( check_sljit_generate_code ( compiler ) )		1638344	0					
ANR	1638394	Callee	CHECK_PTR		1638344	0					
ANR	1638395	Identifier	CHECK_PTR		1638344	0					
ANR	1638396	ArgumentList	check_sljit_generate_code ( compiler )		1638344	1					
ANR	1638397	Argument	check_sljit_generate_code ( compiler )		1638344	0					
ANR	1638398	CallExpression	check_sljit_generate_code ( compiler )		1638344	0					
ANR	1638399	Callee	check_sljit_generate_code		1638344	0					
ANR	1638400	Identifier	check_sljit_generate_code		1638344	0					
ANR	1638401	ArgumentList	compiler		1638344	1					
ANR	1638402	Argument	compiler		1638344	0					
ANR	1638403	Identifier	compiler		1638344	0					
ANR	1638404	ExpressionStatement	reverse_buf ( compiler )	333:1:10180:10201	1638344	12	True				
ANR	1638405	CallExpression	reverse_buf ( compiler )		1638344	0					
ANR	1638406	Callee	reverse_buf		1638344	0					
ANR	1638407	Identifier	reverse_buf		1638344	0					
ANR	1638408	ArgumentList	compiler		1638344	1					
ANR	1638409	Argument	compiler		1638344	0					
ANR	1638410	Identifier	compiler		1638344	0					
ANR	1638411	ExpressionStatement	compiler -> size += ( compiler -> size & 0x1 ) + ( sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins ) )	337:1:10319:10421	1638344	13	True				
ANR	1638412	AssignmentExpression	compiler -> size += ( compiler -> size & 0x1 ) + ( sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins ) )		1638344	0		+=			
ANR	1638413	PtrMemberAccess	compiler -> size		1638344	0					
ANR	1638414	Identifier	compiler		1638344	0					
ANR	1638415	Identifier	size		1638344	1					
ANR	1638416	AdditiveExpression	( compiler -> size & 0x1 ) + ( sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins ) )		1638344	1		+			
ANR	1638417	BitAndExpression	compiler -> size & 0x1		1638344	0		&			
ANR	1638418	PtrMemberAccess	compiler -> size		1638344	0					
ANR	1638419	Identifier	compiler		1638344	0					
ANR	1638420	Identifier	size		1638344	1					
ANR	1638421	PrimaryExpression	0x1		1638344	1					
ANR	1638422	MultiplicativeExpression	sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins )		1638344	1		/			
ANR	1638423	SizeofExpression	sizeof ( struct sljit_function_context )		1638344	0					
ANR	1638424	Sizeof	sizeof		1638344	0					
ANR	1638425	SizeofOperand	struct sljit_function_context		1638344	1					
ANR	1638426	SizeofExpression	sizeof ( sljit_ins )		1638344	1					
ANR	1638427	Sizeof	sizeof		1638344	0					
ANR	1638428	SizeofOperand	sljit_ins		1638344	1					
ANR	1638429	ExpressionStatement	code = ( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )	342:1:10524:10596	1638344	14	True				
ANR	1638430	AssignmentExpression	code = ( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1638344	0		=			
ANR	1638431	Identifier	code		1638344	0					
ANR	1638432	CastExpression	( sljit_ins * ) SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1638344	1					
ANR	1638433	CastTarget	sljit_ins *		1638344	0					
ANR	1638434	CallExpression	SLJIT_MALLOC_EXEC ( compiler -> size * sizeof ( sljit_ins ) )		1638344	1					
ANR	1638435	Callee	SLJIT_MALLOC_EXEC		1638344	0					
ANR	1638436	Identifier	SLJIT_MALLOC_EXEC		1638344	0					
ANR	1638437	ArgumentList	compiler -> size * sizeof ( sljit_ins )		1638344	1					
ANR	1638438	Argument	compiler -> size * sizeof ( sljit_ins )		1638344	0					
ANR	1638439	MultiplicativeExpression	compiler -> size * sizeof ( sljit_ins )		1638344	0		*			
ANR	1638440	PtrMemberAccess	compiler -> size		1638344	0					
ANR	1638441	Identifier	compiler		1638344	0					
ANR	1638442	Identifier	size		1638344	1					
ANR	1638443	SizeofExpression	sizeof ( sljit_ins )		1638344	1					
ANR	1638444	Sizeof	sizeof		1638344	0					
ANR	1638445	SizeofOperand	sljit_ins		1638344	1					
ANR	1638446	ExpressionStatement	PTR_FAIL_WITH_EXEC_IF ( code )	343:1:10599:10626	1638344	15	True				
ANR	1638447	CallExpression	PTR_FAIL_WITH_EXEC_IF ( code )		1638344	0					
ANR	1638448	Callee	PTR_FAIL_WITH_EXEC_IF		1638344	0					
ANR	1638449	Identifier	PTR_FAIL_WITH_EXEC_IF		1638344	0					
ANR	1638450	ArgumentList	code		1638344	1					
ANR	1638451	Argument	code		1638344	0					
ANR	1638452	Identifier	code		1638344	0					
ANR	1638453	ExpressionStatement	buf = compiler -> buf	344:1:10629:10648	1638344	16	True				
ANR	1638454	AssignmentExpression	buf = compiler -> buf		1638344	0		=			
ANR	1638455	Identifier	buf		1638344	0					
ANR	1638456	PtrMemberAccess	compiler -> buf		1638344	1					
ANR	1638457	Identifier	compiler		1638344	0					
ANR	1638458	Identifier	buf		1638344	1					
ANR	1638459	ExpressionStatement	code_ptr = code	346:1:10652:10667	1638344	17	True				
ANR	1638460	AssignmentExpression	code_ptr = code		1638344	0		=			
ANR	1638461	Identifier	code_ptr		1638344	0					
ANR	1638462	Identifier	code		1638344	1					
ANR	1638463	ExpressionStatement	word_count = 0	347:1:10670:10684	1638344	18	True				
ANR	1638464	AssignmentExpression	word_count = 0		1638344	0		=			
ANR	1638465	Identifier	word_count		1638344	0					
ANR	1638466	PrimaryExpression	0		1638344	1					
ANR	1638467	ExpressionStatement	label = compiler -> labels	348:1:10687:10711	1638344	19	True				
ANR	1638468	AssignmentExpression	label = compiler -> labels		1638344	0		=			
ANR	1638469	Identifier	label		1638344	0					
ANR	1638470	PtrMemberAccess	compiler -> labels		1638344	1					
ANR	1638471	Identifier	compiler		1638344	0					
ANR	1638472	Identifier	labels		1638344	1					
ANR	1638473	ExpressionStatement	jump = compiler -> jumps	349:1:10714:10736	1638344	20	True				
ANR	1638474	AssignmentExpression	jump = compiler -> jumps		1638344	0		=			
ANR	1638475	Identifier	jump		1638344	0					
ANR	1638476	PtrMemberAccess	compiler -> jumps		1638344	1					
ANR	1638477	Identifier	compiler		1638344	0					
ANR	1638478	Identifier	jumps		1638344	1					
ANR	1638479	ExpressionStatement	const_ = compiler -> consts	350:1:10739:10764	1638344	21	True				
ANR	1638480	AssignmentExpression	const_ = compiler -> consts		1638344	0		=			
ANR	1638481	Identifier	const_		1638344	0					
ANR	1638482	PtrMemberAccess	compiler -> consts		1638344	1					
ANR	1638483	Identifier	compiler		1638344	0					
ANR	1638484	Identifier	consts		1638344	1					
ANR	1638485	DoStatement	do		1638344	22					
ANR	1638486	CompoundStatement		34:4:902:902	1638344	0					
ANR	1638487	ExpressionStatement	buf_ptr = ( sljit_ins * ) buf -> memory	352:2:10774:10807	1638344	0	True				
ANR	1638488	AssignmentExpression	buf_ptr = ( sljit_ins * ) buf -> memory		1638344	0		=			
ANR	1638489	Identifier	buf_ptr		1638344	0					
ANR	1638490	CastExpression	( sljit_ins * ) buf -> memory		1638344	1					
ANR	1638491	CastTarget	sljit_ins *		1638344	0					
ANR	1638492	PtrMemberAccess	buf -> memory		1638344	1					
ANR	1638493	Identifier	buf		1638344	0					
ANR	1638494	Identifier	memory		1638344	1					
ANR	1638495	ExpressionStatement	buf_end = buf_ptr + ( buf -> used_size >> 2 )	353:2:10811:10852	1638344	1	True				
ANR	1638496	AssignmentExpression	buf_end = buf_ptr + ( buf -> used_size >> 2 )		1638344	0		=			
ANR	1638497	Identifier	buf_end		1638344	0					
ANR	1638498	AdditiveExpression	buf_ptr + ( buf -> used_size >> 2 )		1638344	1		+			
ANR	1638499	Identifier	buf_ptr		1638344	0					
ANR	1638500	ShiftExpression	buf -> used_size >> 2		1638344	1		>>			
ANR	1638501	PtrMemberAccess	buf -> used_size		1638344	0					
ANR	1638502	Identifier	buf		1638344	0					
ANR	1638503	Identifier	used_size		1638344	1					
ANR	1638504	PrimaryExpression	2		1638344	1					
ANR	1638505	DoStatement	do		1638344	2					
ANR	1638506	CompoundStatement		37:5:991:991	1638344	0					
ANR	1638507	ExpressionStatement	* code_ptr = * buf_ptr ++	355:3:10864:10886	1638344	0	True				
ANR	1638508	AssignmentExpression	* code_ptr = * buf_ptr ++		1638344	0		=			
ANR	1638509	UnaryOperationExpression	* code_ptr		1638344	0					
ANR	1638510	UnaryOperator	*		1638344	0					
ANR	1638511	Identifier	code_ptr		1638344	1					
ANR	1638512	UnaryOperationExpression	* buf_ptr ++		1638344	1					
ANR	1638513	UnaryOperator	*		1638344	0					
ANR	1638514	PostIncDecOperationExpression	buf_ptr ++		1638344	1					
ANR	1638515	Identifier	buf_ptr		1638344	0					
ANR	1638516	IncDec	++		1638344	1					
ANR	1638517	ExpressionStatement	SLJIT_ASSERT ( ! label || label -> size >= word_count )	356:3:10891:10940	1638344	1	True				
ANR	1638518	CallExpression	SLJIT_ASSERT ( ! label || label -> size >= word_count )		1638344	0					
ANR	1638519	Callee	SLJIT_ASSERT		1638344	0					
ANR	1638520	Identifier	SLJIT_ASSERT		1638344	0					
ANR	1638521	ArgumentList	! label || label -> size >= word_count		1638344	1					
ANR	1638522	Argument	! label || label -> size >= word_count		1638344	0					
ANR	1638523	OrExpression	! label || label -> size >= word_count		1638344	0		||			
ANR	1638524	UnaryOperationExpression	! label		1638344	0					
ANR	1638525	UnaryOperator	!		1638344	0					
ANR	1638526	Identifier	label		1638344	1					
ANR	1638527	RelationalExpression	label -> size >= word_count		1638344	1		>=			
ANR	1638528	PtrMemberAccess	label -> size		1638344	0					
ANR	1638529	Identifier	label		1638344	0					
ANR	1638530	Identifier	size		1638344	1					
ANR	1638531	Identifier	word_count		1638344	1					
ANR	1638532	ExpressionStatement	SLJIT_ASSERT ( ! jump || jump -> addr >= word_count )	357:3:10945:10992	1638344	2	True				
ANR	1638533	CallExpression	SLJIT_ASSERT ( ! jump || jump -> addr >= word_count )		1638344	0					
ANR	1638534	Callee	SLJIT_ASSERT		1638344	0					
ANR	1638535	Identifier	SLJIT_ASSERT		1638344	0					
ANR	1638536	ArgumentList	! jump || jump -> addr >= word_count		1638344	1					
ANR	1638537	Argument	! jump || jump -> addr >= word_count		1638344	0					
ANR	1638538	OrExpression	! jump || jump -> addr >= word_count		1638344	0		||			
ANR	1638539	UnaryOperationExpression	! jump		1638344	0					
ANR	1638540	UnaryOperator	!		1638344	0					
ANR	1638541	Identifier	jump		1638344	1					
ANR	1638542	RelationalExpression	jump -> addr >= word_count		1638344	1		>=			
ANR	1638543	PtrMemberAccess	jump -> addr		1638344	0					
ANR	1638544	Identifier	jump		1638344	0					
ANR	1638545	Identifier	addr		1638344	1					
ANR	1638546	Identifier	word_count		1638344	1					
ANR	1638547	ExpressionStatement	SLJIT_ASSERT ( ! const_ || const_ -> addr >= word_count )	358:3:10997:11048	1638344	3	True				
ANR	1638548	CallExpression	SLJIT_ASSERT ( ! const_ || const_ -> addr >= word_count )		1638344	0					
ANR	1638549	Callee	SLJIT_ASSERT		1638344	0					
ANR	1638550	Identifier	SLJIT_ASSERT		1638344	0					
ANR	1638551	ArgumentList	! const_ || const_ -> addr >= word_count		1638344	1					
ANR	1638552	Argument	! const_ || const_ -> addr >= word_count		1638344	0					
ANR	1638553	OrExpression	! const_ || const_ -> addr >= word_count		1638344	0		||			
ANR	1638554	UnaryOperationExpression	! const_		1638344	0					
ANR	1638555	UnaryOperator	!		1638344	0					
ANR	1638556	Identifier	const_		1638344	1					
ANR	1638557	RelationalExpression	const_ -> addr >= word_count		1638344	1		>=			
ANR	1638558	PtrMemberAccess	const_ -> addr		1638344	0					
ANR	1638559	Identifier	const_		1638344	0					
ANR	1638560	Identifier	addr		1638344	1					
ANR	1638561	Identifier	word_count		1638344	1					
ANR	1638562	IfStatement	if ( label && label -> size == word_count )		1638344	4					
ANR	1638563	Condition	label && label -> size == word_count	360:7:11113:11146	1638344	0	True				
ANR	1638564	AndExpression	label && label -> size == word_count		1638344	0		&&			
ANR	1638565	Identifier	label		1638344	0					
ANR	1638566	EqualityExpression	label -> size == word_count		1638344	1		==			
ANR	1638567	PtrMemberAccess	label -> size		1638344	0					
ANR	1638568	Identifier	label		1638344	0					
ANR	1638569	Identifier	size		1638344	1					
ANR	1638570	Identifier	word_count		1638344	1					
ANR	1638571	CompoundStatement		43:43:1281:1281	1638344	1					
ANR	1638572	ExpressionStatement	label -> addr = ( sljit_uw ) code_ptr	362:4:11193:11225	1638344	0	True				
ANR	1638573	AssignmentExpression	label -> addr = ( sljit_uw ) code_ptr		1638344	0		=			
ANR	1638574	PtrMemberAccess	label -> addr		1638344	0					
ANR	1638575	Identifier	label		1638344	0					
ANR	1638576	Identifier	addr		1638344	1					
ANR	1638577	CastExpression	( sljit_uw ) code_ptr		1638344	1					
ANR	1638578	CastTarget	sljit_uw		1638344	0					
ANR	1638579	Identifier	code_ptr		1638344	1					
ANR	1638580	ExpressionStatement	label -> size = code_ptr - code	363:4:11231:11260	1638344	1	True				
ANR	1638581	AssignmentExpression	label -> size = code_ptr - code		1638344	0		=			
ANR	1638582	PtrMemberAccess	label -> size		1638344	0					
ANR	1638583	Identifier	label		1638344	0					
ANR	1638584	Identifier	size		1638344	1					
ANR	1638585	AdditiveExpression	code_ptr - code		1638344	1		-			
ANR	1638586	Identifier	code_ptr		1638344	0					
ANR	1638587	Identifier	code		1638344	1					
ANR	1638588	ExpressionStatement	label = label -> next	364:4:11266:11285	1638344	2	True				
ANR	1638589	AssignmentExpression	label = label -> next		1638344	0		=			
ANR	1638590	Identifier	label		1638344	0					
ANR	1638591	PtrMemberAccess	label -> next		1638344	1					
ANR	1638592	Identifier	label		1638344	0					
ANR	1638593	Identifier	next		1638344	1					
ANR	1638594	IfStatement	if ( jump && jump -> addr == word_count )		1638344	5					
ANR	1638595	Condition	jump && jump -> addr == word_count	366:7:11299:11330	1638344	0	True				
ANR	1638596	AndExpression	jump && jump -> addr == word_count		1638344	0		&&			
ANR	1638597	Identifier	jump		1638344	0					
ANR	1638598	EqualityExpression	jump -> addr == word_count		1638344	1		==			
ANR	1638599	PtrMemberAccess	jump -> addr		1638344	0					
ANR	1638600	Identifier	jump		1638344	0					
ANR	1638601	Identifier	addr		1638344	1					
ANR	1638602	Identifier	word_count		1638344	1					
ANR	1638603	CompoundStatement		49:41:1465:1465	1638344	1					
ANR	1638604	ExpressionStatement	jump -> addr = ( sljit_uw ) ( code_ptr - 3 )	368:4:11396:11433	1638344	0	True				
ANR	1638605	AssignmentExpression	jump -> addr = ( sljit_uw ) ( code_ptr - 3 )		1638344	0		=			
ANR	1638606	PtrMemberAccess	jump -> addr		1638344	0					
ANR	1638607	Identifier	jump		1638344	0					
ANR	1638608	Identifier	addr		1638344	1					
ANR	1638609	CastExpression	( sljit_uw ) ( code_ptr - 3 )		1638344	1					
ANR	1638610	CastTarget	sljit_uw		1638344	0					
ANR	1638611	AdditiveExpression	code_ptr - 3		1638344	1		-			
ANR	1638612	Identifier	code_ptr		1638344	0					
ANR	1638613	PrimaryExpression	3		1638344	1					
ANR	1638614	IfStatement	"if ( detect_jump_type ( jump , code_ptr , code ) )"		1638344	1					
ANR	1638615	Condition	"detect_jump_type ( jump , code_ptr , code )"	372:8:11499:11536	1638344	0	True				
ANR	1638616	CallExpression	"detect_jump_type ( jump , code_ptr , code )"		1638344	0					
ANR	1638617	Callee	detect_jump_type		1638344	0					
ANR	1638618	Identifier	detect_jump_type		1638344	0					
ANR	1638619	ArgumentList	jump		1638344	1					
ANR	1638620	Argument	jump		1638344	0					
ANR	1638621	Identifier	jump		1638344	0					
ANR	1638622	Argument	code_ptr		1638344	1					
ANR	1638623	Identifier	code_ptr		1638344	0					
ANR	1638624	Argument	code		1638344	2					
ANR	1638625	Identifier	code		1638344	0					
ANR	1638626	CompoundStatement		55:48:1671:1671	1638344	1					
ANR	1638627	ExpressionStatement	code_ptr [ - 3 ] = code_ptr [ 0 ]	374:5:11603:11629	1638344	0	True				
ANR	1638628	AssignmentExpression	code_ptr [ - 3 ] = code_ptr [ 0 ]		1638344	0		=			
ANR	1638629	ArrayIndexing	code_ptr [ - 3 ]		1638344	0					
ANR	1638630	Identifier	code_ptr		1638344	0					
ANR	1638631	UnaryOperationExpression	- 3		1638344	1					
ANR	1638632	UnaryOperator	-		1638344	0					
ANR	1638633	PrimaryExpression	3		1638344	1					
ANR	1638634	ArrayIndexing	code_ptr [ 0 ]		1638344	1					
ANR	1638635	Identifier	code_ptr		1638344	0					
ANR	1638636	PrimaryExpression	0		1638344	1					
ANR	1638637	ExpressionStatement	code_ptr -= 3	375:5:11636:11649	1638344	1	True				
ANR	1638638	AssignmentExpression	code_ptr -= 3		1638344	0		-=			
ANR	1638639	Identifier	code_ptr		1638344	0					
ANR	1638640	PrimaryExpression	3		1638344	1					
ANR	1638641	IfStatement	if ( jump -> flags & REMOVE_COND )		1638344	2					
ANR	1638642	Condition	jump -> flags & REMOVE_COND	397:9:12211:12235	1638344	0	True				
ANR	1638643	BitAndExpression	jump -> flags & REMOVE_COND		1638344	0		&			
ANR	1638644	PtrMemberAccess	jump -> flags		1638344	0					
ANR	1638645	Identifier	jump		1638344	0					
ANR	1638646	Identifier	flags		1638344	1					
ANR	1638647	Identifier	REMOVE_COND		1638344	1					
ANR	1638648	CompoundStatement		80:36:2370:2370	1638344	1					
ANR	1638649	ExpressionStatement	code_ptr [ 0 ] = BCx | ( 2 << 2 ) | ( ( code_ptr [ 0 ] ^ ( 8 << 21 ) ) & 0x03ff0001 )	398:6:12246:12317	1638344	0	True				
ANR	1638650	AssignmentExpression	code_ptr [ 0 ] = BCx | ( 2 << 2 ) | ( ( code_ptr [ 0 ] ^ ( 8 << 21 ) ) & 0x03ff0001 )		1638344	0		=			
ANR	1638651	ArrayIndexing	code_ptr [ 0 ]		1638344	0					
ANR	1638652	Identifier	code_ptr		1638344	0					
ANR	1638653	PrimaryExpression	0		1638344	1					
ANR	1638654	InclusiveOrExpression	BCx | ( 2 << 2 ) | ( ( code_ptr [ 0 ] ^ ( 8 << 21 ) ) & 0x03ff0001 )		1638344	1		|			
ANR	1638655	Identifier	BCx		1638344	0					
ANR	1638656	InclusiveOrExpression	( 2 << 2 ) | ( ( code_ptr [ 0 ] ^ ( 8 << 21 ) ) & 0x03ff0001 )		1638344	1		|			
ANR	1638657	ShiftExpression	2 << 2		1638344	0		<<			
ANR	1638658	PrimaryExpression	2		1638344	0					
ANR	1638659	PrimaryExpression	2		1638344	1					
ANR	1638660	BitAndExpression	( code_ptr [ 0 ] ^ ( 8 << 21 ) ) & 0x03ff0001		1638344	1		&			
ANR	1638661	ExclusiveOrExpression	code_ptr [ 0 ] ^ ( 8 << 21 )		1638344	0		^			
ANR	1638662	ArrayIndexing	code_ptr [ 0 ]		1638344	0					
ANR	1638663	Identifier	code_ptr		1638344	0					
ANR	1638664	PrimaryExpression	0		1638344	1					
ANR	1638665	ShiftExpression	8 << 21		1638344	1		<<			
ANR	1638666	PrimaryExpression	8		1638344	0					
ANR	1638667	PrimaryExpression	21		1638344	1					
ANR	1638668	PrimaryExpression	0x03ff0001		1638344	1					
ANR	1638669	ExpressionStatement	code_ptr ++	399:6:12325:12335	1638344	1	True				
ANR	1638670	PostIncDecOperationExpression	code_ptr ++		1638344	0					
ANR	1638671	Identifier	code_ptr		1638344	0					
ANR	1638672	IncDec	++		1638344	1					
ANR	1638673	ExpressionStatement	jump -> addr += sizeof ( sljit_ins )	400:6:12343:12374	1638344	2	True				
ANR	1638674	AssignmentExpression	jump -> addr += sizeof ( sljit_ins )		1638344	0		+=			
ANR	1638675	PtrMemberAccess	jump -> addr		1638344	0					
ANR	1638676	Identifier	jump		1638344	0					
ANR	1638677	Identifier	addr		1638344	1					
ANR	1638678	SizeofExpression	sizeof ( sljit_ins )		1638344	1					
ANR	1638679	Sizeof	sizeof		1638344	0					
ANR	1638680	SizeofOperand	sljit_ins		1638344	1					
ANR	1638681	ExpressionStatement	code_ptr [ 0 ] = Bx	401:6:12382:12398	1638344	3	True				
ANR	1638682	AssignmentExpression	code_ptr [ 0 ] = Bx		1638344	0		=			
ANR	1638683	ArrayIndexing	code_ptr [ 0 ]		1638344	0					
ANR	1638684	Identifier	code_ptr		1638344	0					
ANR	1638685	PrimaryExpression	0		1638344	1					
ANR	1638686	Identifier	Bx		1638344	1					
ANR	1638687	ExpressionStatement	jump -> flags -= IS_COND	402:6:12406:12428	1638344	4	True				
ANR	1638688	AssignmentExpression	jump -> flags -= IS_COND		1638344	0		-=			
ANR	1638689	PtrMemberAccess	jump -> flags		1638344	0					
ANR	1638690	Identifier	jump		1638344	0					
ANR	1638691	Identifier	flags		1638344	1					
ANR	1638692	Identifier	IS_COND		1638344	1					
ANR	1638693	ExpressionStatement	jump = jump -> next	405:4:12447:12464	1638344	2	True				
ANR	1638694	AssignmentExpression	jump = jump -> next		1638344	0		=			
ANR	1638695	Identifier	jump		1638344	0					
ANR	1638696	PtrMemberAccess	jump -> next		1638344	1					
ANR	1638697	Identifier	jump		1638344	0					
ANR	1638698	Identifier	next		1638344	1					
ANR	1638699	IfStatement	if ( const_ && const_ -> addr == word_count )		1638344	6					
ANR	1638700	Condition	const_ && const_ -> addr == word_count	407:7:12478:12513	1638344	0	True				
ANR	1638701	AndExpression	const_ && const_ -> addr == word_count		1638344	0		&&			
ANR	1638702	Identifier	const_		1638344	0					
ANR	1638703	EqualityExpression	const_ -> addr == word_count		1638344	1		==			
ANR	1638704	PtrMemberAccess	const_ -> addr		1638344	0					
ANR	1638705	Identifier	const_		1638344	0					
ANR	1638706	Identifier	addr		1638344	1					
ANR	1638707	Identifier	word_count		1638344	1					
ANR	1638708	CompoundStatement		90:45:2648:2648	1638344	1					
ANR	1638709	ExpressionStatement	const_ -> addr = ( sljit_uw ) code_ptr	408:4:12522:12555	1638344	0	True				
ANR	1638710	AssignmentExpression	const_ -> addr = ( sljit_uw ) code_ptr		1638344	0		=			
ANR	1638711	PtrMemberAccess	const_ -> addr		1638344	0					
ANR	1638712	Identifier	const_		1638344	0					
ANR	1638713	Identifier	addr		1638344	1					
ANR	1638714	CastExpression	( sljit_uw ) code_ptr		1638344	1					
ANR	1638715	CastTarget	sljit_uw		1638344	0					
ANR	1638716	Identifier	code_ptr		1638344	1					
ANR	1638717	ExpressionStatement	const_ = const_ -> next	409:4:12561:12582	1638344	1	True				
ANR	1638718	AssignmentExpression	const_ = const_ -> next		1638344	0		=			
ANR	1638719	Identifier	const_		1638344	0					
ANR	1638720	PtrMemberAccess	const_ -> next		1638344	1					
ANR	1638721	Identifier	const_		1638344	0					
ANR	1638722	Identifier	next		1638344	1					
ANR	1638723	ExpressionStatement	code_ptr ++	411:3:12592:12603	1638344	7	True				
ANR	1638724	PostIncDecOperationExpression	code_ptr ++		1638344	0					
ANR	1638725	Identifier	code_ptr		1638344	0					
ANR	1638726	IncDec	++		1638344	1					
ANR	1638727	ExpressionStatement	word_count ++	412:3:12608:12621	1638344	8	True				
ANR	1638728	PostIncDecOperationExpression	word_count ++		1638344	0					
ANR	1638729	Identifier	word_count		1638344	0					
ANR	1638730	IncDec	++		1638344	1					
ANR	1638731	Condition	buf_ptr < buf_end	413:11:12634:12650	1638344	1	True				
ANR	1638732	RelationalExpression	buf_ptr < buf_end		1638344	0		<			
ANR	1638733	Identifier	buf_ptr		1638344	0					
ANR	1638734	Identifier	buf_end		1638344	1					
ANR	1638735	ExpressionStatement	buf = buf -> next	415:2:12657:12672	1638344	3	True				
ANR	1638736	AssignmentExpression	buf = buf -> next		1638344	0		=			
ANR	1638737	Identifier	buf		1638344	0					
ANR	1638738	PtrMemberAccess	buf -> next		1638344	1					
ANR	1638739	Identifier	buf		1638344	0					
ANR	1638740	Identifier	next		1638344	1					
ANR	1638741	Condition	buf	416:10:12684:12686	1638344	1	True				
ANR	1638742	Identifier	buf		1638344	0					
ANR	1638743	IfStatement	if ( label && label -> size == word_count )		1638344	23					
ANR	1638744	Condition	label && label -> size == word_count	418:5:12696:12729	1638344	0	True				
ANR	1638745	AndExpression	label && label -> size == word_count		1638344	0		&&			
ANR	1638746	Identifier	label		1638344	0					
ANR	1638747	EqualityExpression	label -> size == word_count		1638344	1		==			
ANR	1638748	PtrMemberAccess	label -> size		1638344	0					
ANR	1638749	Identifier	label		1638344	0					
ANR	1638750	Identifier	size		1638344	1					
ANR	1638751	Identifier	word_count		1638344	1					
ANR	1638752	CompoundStatement		101:41:2864:2864	1638344	1					
ANR	1638753	ExpressionStatement	label -> addr = ( sljit_uw ) code_ptr	419:2:12736:12768	1638344	0	True				
ANR	1638754	AssignmentExpression	label -> addr = ( sljit_uw ) code_ptr		1638344	0		=			
ANR	1638755	PtrMemberAccess	label -> addr		1638344	0					
ANR	1638756	Identifier	label		1638344	0					
ANR	1638757	Identifier	addr		1638344	1					
ANR	1638758	CastExpression	( sljit_uw ) code_ptr		1638344	1					
ANR	1638759	CastTarget	sljit_uw		1638344	0					
ANR	1638760	Identifier	code_ptr		1638344	1					
ANR	1638761	ExpressionStatement	label -> size = code_ptr - code	420:2:12772:12801	1638344	1	True				
ANR	1638762	AssignmentExpression	label -> size = code_ptr - code		1638344	0		=			
ANR	1638763	PtrMemberAccess	label -> size		1638344	0					
ANR	1638764	Identifier	label		1638344	0					
ANR	1638765	Identifier	size		1638344	1					
ANR	1638766	AdditiveExpression	code_ptr - code		1638344	1		-			
ANR	1638767	Identifier	code_ptr		1638344	0					
ANR	1638768	Identifier	code		1638344	1					
ANR	1638769	ExpressionStatement	label = label -> next	421:2:12805:12824	1638344	2	True				
ANR	1638770	AssignmentExpression	label = label -> next		1638344	0		=			
ANR	1638771	Identifier	label		1638344	0					
ANR	1638772	PtrMemberAccess	label -> next		1638344	1					
ANR	1638773	Identifier	label		1638344	0					
ANR	1638774	Identifier	next		1638344	1					
ANR	1638775	ExpressionStatement	SLJIT_ASSERT ( ! label )	424:1:12831:12851	1638344	24	True				
ANR	1638776	CallExpression	SLJIT_ASSERT ( ! label )		1638344	0					
ANR	1638777	Callee	SLJIT_ASSERT		1638344	0					
ANR	1638778	Identifier	SLJIT_ASSERT		1638344	0					
ANR	1638779	ArgumentList	! label		1638344	1					
ANR	1638780	Argument	! label		1638344	0					
ANR	1638781	UnaryOperationExpression	! label		1638344	0					
ANR	1638782	UnaryOperator	!		1638344	0					
ANR	1638783	Identifier	label		1638344	1					
ANR	1638784	ExpressionStatement	SLJIT_ASSERT ( ! jump )	425:1:12854:12873	1638344	25	True				
ANR	1638785	CallExpression	SLJIT_ASSERT ( ! jump )		1638344	0					
ANR	1638786	Callee	SLJIT_ASSERT		1638344	0					
ANR	1638787	Identifier	SLJIT_ASSERT		1638344	0					
ANR	1638788	ArgumentList	! jump		1638344	1					
ANR	1638789	Argument	! jump		1638344	0					
ANR	1638790	UnaryOperationExpression	! jump		1638344	0					
ANR	1638791	UnaryOperator	!		1638344	0					
ANR	1638792	Identifier	jump		1638344	1					
ANR	1638793	ExpressionStatement	SLJIT_ASSERT ( ! const_ )	426:1:12876:12897	1638344	26	True				
ANR	1638794	CallExpression	SLJIT_ASSERT ( ! const_ )		1638344	0					
ANR	1638795	Callee	SLJIT_ASSERT		1638344	0					
ANR	1638796	Identifier	SLJIT_ASSERT		1638344	0					
ANR	1638797	ArgumentList	! const_		1638344	1					
ANR	1638798	Argument	! const_		1638344	0					
ANR	1638799	UnaryOperationExpression	! const_		1638344	0					
ANR	1638800	UnaryOperator	!		1638344	0					
ANR	1638801	Identifier	const_		1638344	1					
ANR	1638802	ExpressionStatement	SLJIT_ASSERT ( code_ptr - code <= ( sljit_sw ) compiler -> size - ( sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins ) ) )	428:1:12957:13076	1638344	27	True				
ANR	1638803	CallExpression	SLJIT_ASSERT ( code_ptr - code <= ( sljit_sw ) compiler -> size - ( sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins ) ) )		1638344	0					
ANR	1638804	Callee	SLJIT_ASSERT		1638344	0					
ANR	1638805	Identifier	SLJIT_ASSERT		1638344	0					
ANR	1638806	ArgumentList	code_ptr - code <= ( sljit_sw ) compiler -> size - ( sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins ) )		1638344	1					
ANR	1638807	Argument	code_ptr - code <= ( sljit_sw ) compiler -> size - ( sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins ) )		1638344	0					
ANR	1638808	RelationalExpression	code_ptr - code <= ( sljit_sw ) compiler -> size - ( sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins ) )		1638344	0		<=			
ANR	1638809	AdditiveExpression	code_ptr - code		1638344	0		-			
ANR	1638810	Identifier	code_ptr		1638344	0					
ANR	1638811	Identifier	code		1638344	1					
ANR	1638812	AdditiveExpression	( sljit_sw ) compiler -> size - ( sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins ) )		1638344	1		-			
ANR	1638813	CastExpression	( sljit_sw ) compiler -> size		1638344	0					
ANR	1638814	CastTarget	sljit_sw		1638344	0					
ANR	1638815	PtrMemberAccess	compiler -> size		1638344	1					
ANR	1638816	Identifier	compiler		1638344	0					
ANR	1638817	Identifier	size		1638344	1					
ANR	1638818	MultiplicativeExpression	sizeof ( struct sljit_function_context ) / sizeof ( sljit_ins )		1638344	1		/			
ANR	1638819	SizeofExpression	sizeof ( struct sljit_function_context )		1638344	0					
ANR	1638820	Sizeof	sizeof		1638344	0					
ANR	1638821	SizeofOperand	struct sljit_function_context		1638344	1					
ANR	1638822	SizeofExpression	sizeof ( sljit_ins )		1638344	1					
ANR	1638823	Sizeof	sizeof		1638344	0					
ANR	1638824	SizeofOperand	sljit_ins		1638344	1					
ANR	1638825	ExpressionStatement	jump = compiler -> jumps	433:1:13153:13175	1638344	28	True				
ANR	1638826	AssignmentExpression	jump = compiler -> jumps		1638344	0		=			
ANR	1638827	Identifier	jump		1638344	0					
ANR	1638828	PtrMemberAccess	compiler -> jumps		1638344	1					
ANR	1638829	Identifier	compiler		1638344	0					
ANR	1638830	Identifier	jumps		1638344	1					
ANR	1638831	WhileStatement	while ( jump )		1638344	29					
ANR	1638832	Condition	jump	434:8:13185:13188	1638344	0	True				
ANR	1638833	Identifier	jump		1638344	0					
ANR	1638834	CompoundStatement		117:14:3323:3323	1638344	1					
ANR	1638835	DoStatement	do		1638344	0					
ANR	1638836	CompoundStatement		118:5:3330:3330	1638344	0					
ANR	1638837	ExpressionStatement	addr = ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target	436:3:13203:13275	1638344	0	True				
ANR	1638838	AssignmentExpression	addr = ( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1638344	0		=			
ANR	1638839	Identifier	addr		1638344	0					
ANR	1638840	ConditionalExpression	( jump -> flags & JUMP_LABEL ) ? jump -> u . label -> addr : jump -> u . target		1638344	1					
ANR	1638841	Condition	jump -> flags & JUMP_LABEL		1638344	0					
ANR	1638842	BitAndExpression	jump -> flags & JUMP_LABEL		1638344	0		&			
ANR	1638843	PtrMemberAccess	jump -> flags		1638344	0					
ANR	1638844	Identifier	jump		1638344	0					
ANR	1638845	Identifier	flags		1638344	1					
ANR	1638846	Identifier	JUMP_LABEL		1638344	1					
ANR	1638847	PtrMemberAccess	jump -> u . label -> addr		1638344	1					
ANR	1638848	MemberAccess	jump -> u . label		1638344	0					
ANR	1638849	PtrMemberAccess	jump -> u		1638344	0					
ANR	1638850	Identifier	jump		1638344	0					
ANR	1638851	Identifier	u		1638344	1					
ANR	1638852	Identifier	label		1638344	1					
ANR	1638853	Identifier	addr		1638344	1					
ANR	1638854	MemberAccess	jump -> u . target		1638344	2					
ANR	1638855	PtrMemberAccess	jump -> u		1638344	0					
ANR	1638856	Identifier	jump		1638344	0					
ANR	1638857	Identifier	u		1638344	1					
ANR	1638858	Identifier	target		1638344	1					
ANR	1638859	ExpressionStatement	buf_ptr = ( sljit_ins * ) jump -> addr	437:3:13280:13312	1638344	1	True				
ANR	1638860	AssignmentExpression	buf_ptr = ( sljit_ins * ) jump -> addr		1638344	0		=			
ANR	1638861	Identifier	buf_ptr		1638344	0					
ANR	1638862	CastExpression	( sljit_ins * ) jump -> addr		1638344	1					
ANR	1638863	CastTarget	sljit_ins *		1638344	0					
ANR	1638864	PtrMemberAccess	jump -> addr		1638344	1					
ANR	1638865	Identifier	jump		1638344	0					
ANR	1638866	Identifier	addr		1638344	1					
ANR	1638867	IfStatement	if ( jump -> flags & PATCH_B )		1638344	2					
ANR	1638868	Condition	jump -> flags & PATCH_B	438:7:13321:13341	1638344	0	True				
ANR	1638869	BitAndExpression	jump -> flags & PATCH_B		1638344	0		&			
ANR	1638870	PtrMemberAccess	jump -> flags		1638344	0					
ANR	1638871	Identifier	jump		1638344	0					
ANR	1638872	Identifier	flags		1638344	1					
ANR	1638873	Identifier	PATCH_B		1638344	1					
ANR	1638874	CompoundStatement		121:30:3476:3476	1638344	1					
ANR	1638875	IfStatement	if ( jump -> flags & IS_COND )		1638344	0					
ANR	1638876	Condition	jump -> flags & IS_COND	439:8:13354:13374	1638344	0	True				
ANR	1638877	BitAndExpression	jump -> flags & IS_COND		1638344	0		&			
ANR	1638878	PtrMemberAccess	jump -> flags		1638344	0					
ANR	1638879	Identifier	jump		1638344	0					
ANR	1638880	Identifier	flags		1638344	1					
ANR	1638881	Identifier	IS_COND		1638344	1					
ANR	1638882	CompoundStatement		122:31:3509:3509	1638344	1					
ANR	1638883	IfStatement	if ( ! ( jump -> flags & PATCH_ABS_B ) )		1638344	0					
ANR	1638884	Condition	! ( jump -> flags & PATCH_ABS_B )	440:9:13388:13415	1638344	0	True				
ANR	1638885	UnaryOperationExpression	! ( jump -> flags & PATCH_ABS_B )		1638344	0					
ANR	1638886	UnaryOperator	!		1638344	0					
ANR	1638887	BitAndExpression	jump -> flags & PATCH_ABS_B		1638344	1		&			
ANR	1638888	PtrMemberAccess	jump -> flags		1638344	0					
ANR	1638889	Identifier	jump		1638344	0					
ANR	1638890	Identifier	flags		1638344	1					
ANR	1638891	Identifier	PATCH_ABS_B		1638344	1					
ANR	1638892	CompoundStatement		123:39:3550:3550	1638344	1					
ANR	1638893	ExpressionStatement	addr = addr - jump -> addr	441:6:13426:13450	1638344	0	True				
ANR	1638894	AssignmentExpression	addr = addr - jump -> addr		1638344	0		=			
ANR	1638895	Identifier	addr		1638344	0					
ANR	1638896	AdditiveExpression	addr - jump -> addr		1638344	1		-			
ANR	1638897	Identifier	addr		1638344	0					
ANR	1638898	PtrMemberAccess	jump -> addr		1638344	1					
ANR	1638899	Identifier	jump		1638344	0					
ANR	1638900	Identifier	addr		1638344	1					
ANR	1638901	ExpressionStatement	SLJIT_ASSERT ( ( sljit_sw ) addr <= 0x7fff && ( sljit_sw ) addr >= - 0x8000 )	442:6:13458:13525	1638344	1	True				
ANR	1638902	CallExpression	SLJIT_ASSERT ( ( sljit_sw ) addr <= 0x7fff && ( sljit_sw ) addr >= - 0x8000 )		1638344	0					
ANR	1638903	Callee	SLJIT_ASSERT		1638344	0					
ANR	1638904	Identifier	SLJIT_ASSERT		1638344	0					
ANR	1638905	ArgumentList	( sljit_sw ) addr <= 0x7fff && ( sljit_sw ) addr >= - 0x8000		1638344	1					
ANR	1638906	Argument	( sljit_sw ) addr <= 0x7fff && ( sljit_sw ) addr >= - 0x8000		1638344	0					
ANR	1638907	AndExpression	( sljit_sw ) addr <= 0x7fff && ( sljit_sw ) addr >= - 0x8000		1638344	0		&&			
ANR	1638908	RelationalExpression	( sljit_sw ) addr <= 0x7fff		1638344	0		<=			
ANR	1638909	CastExpression	( sljit_sw ) addr		1638344	0					
ANR	1638910	CastTarget	sljit_sw		1638344	0					
ANR	1638911	Identifier	addr		1638344	1					
ANR	1638912	PrimaryExpression	0x7fff		1638344	1					
ANR	1638913	RelationalExpression	( sljit_sw ) addr >= - 0x8000		1638344	1		>=			
ANR	1638914	CastExpression	( sljit_sw ) addr		1638344	0					
ANR	1638915	CastTarget	sljit_sw		1638344	0					
ANR	1638916	Identifier	addr		1638344	1					
ANR	1638917	UnaryOperationExpression	- 0x8000		1638344	1					
ANR	1638918	UnaryOperator	-		1638344	0					
ANR	1638919	PrimaryExpression	0x8000		1638344	1					
ANR	1638920	ExpressionStatement	* buf_ptr = BCx | ( addr & 0xfffc ) | ( ( * buf_ptr ) & 0x03ff0001 )	443:6:13533:13593	1638344	2	True				
ANR	1638921	AssignmentExpression	* buf_ptr = BCx | ( addr & 0xfffc ) | ( ( * buf_ptr ) & 0x03ff0001 )		1638344	0		=			
ANR	1638922	UnaryOperationExpression	* buf_ptr		1638344	0					
ANR	1638923	UnaryOperator	*		1638344	0					
ANR	1638924	Identifier	buf_ptr		1638344	1					
ANR	1638925	InclusiveOrExpression	BCx | ( addr & 0xfffc ) | ( ( * buf_ptr ) & 0x03ff0001 )		1638344	1		|			
ANR	1638926	Identifier	BCx		1638344	0					
ANR	1638927	InclusiveOrExpression	( addr & 0xfffc ) | ( ( * buf_ptr ) & 0x03ff0001 )		1638344	1		|			
ANR	1638928	BitAndExpression	addr & 0xfffc		1638344	0		&			
ANR	1638929	Identifier	addr		1638344	0					
ANR	1638930	PrimaryExpression	0xfffc		1638344	1					
ANR	1638931	BitAndExpression	( * buf_ptr ) & 0x03ff0001		1638344	1		&			
ANR	1638932	UnaryOperationExpression	* buf_ptr		1638344	0					
ANR	1638933	UnaryOperator	*		1638344	0					
ANR	1638934	Identifier	buf_ptr		1638344	1					
ANR	1638935	PrimaryExpression	0x03ff0001		1638344	1					
ANR	1638936	ElseStatement	else		1638344	0					
ANR	1638937	CompoundStatement		128:10:3744:3744	1638344	0					
ANR	1638938	ExpressionStatement	SLJIT_ASSERT ( addr <= 0xffff )	446:6:13620:13648	1638344	0	True				
ANR	1638939	CallExpression	SLJIT_ASSERT ( addr <= 0xffff )		1638344	0					
ANR	1638940	Callee	SLJIT_ASSERT		1638344	0					
ANR	1638941	Identifier	SLJIT_ASSERT		1638344	0					
ANR	1638942	ArgumentList	addr <= 0xffff		1638344	1					
ANR	1638943	Argument	addr <= 0xffff		1638344	0					
ANR	1638944	RelationalExpression	addr <= 0xffff		1638344	0		<=			
ANR	1638945	Identifier	addr		1638344	0					
ANR	1638946	PrimaryExpression	0xffff		1638344	1					
ANR	1638947	ExpressionStatement	* buf_ptr = BCx | ( addr & 0xfffc ) | 0x2 | ( ( * buf_ptr ) & 0x03ff0001 )	447:6:13656:13722	1638344	1	True				
ANR	1638948	AssignmentExpression	* buf_ptr = BCx | ( addr & 0xfffc ) | 0x2 | ( ( * buf_ptr ) & 0x03ff0001 )		1638344	0		=			
ANR	1638949	UnaryOperationExpression	* buf_ptr		1638344	0					
ANR	1638950	UnaryOperator	*		1638344	0					
ANR	1638951	Identifier	buf_ptr		1638344	1					
ANR	1638952	InclusiveOrExpression	BCx | ( addr & 0xfffc ) | 0x2 | ( ( * buf_ptr ) & 0x03ff0001 )		1638344	1		|			
ANR	1638953	Identifier	BCx		1638344	0					
ANR	1638954	InclusiveOrExpression	( addr & 0xfffc ) | 0x2 | ( ( * buf_ptr ) & 0x03ff0001 )		1638344	1		|			
ANR	1638955	BitAndExpression	addr & 0xfffc		1638344	0		&			
ANR	1638956	Identifier	addr		1638344	0					
ANR	1638957	PrimaryExpression	0xfffc		1638344	1					
ANR	1638958	InclusiveOrExpression	0x2 | ( ( * buf_ptr ) & 0x03ff0001 )		1638344	1		|			
ANR	1638959	PrimaryExpression	0x2		1638344	0					
ANR	1638960	BitAndExpression	( * buf_ptr ) & 0x03ff0001		1638344	1		&			
ANR	1638961	UnaryOperationExpression	* buf_ptr		1638344	0					
ANR	1638962	UnaryOperator	*		1638344	0					
ANR	1638963	Identifier	buf_ptr		1638344	1					
ANR	1638964	PrimaryExpression	0x03ff0001		1638344	1					
ANR	1638965	ElseStatement	else		1638344	0					
ANR	1638966	CompoundStatement		133:9:3878:3878	1638344	0					
ANR	1638967	IfStatement	if ( ! ( jump -> flags & PATCH_ABS_B ) )		1638344	0					
ANR	1638968	Condition	! ( jump -> flags & PATCH_ABS_B )	451:9:13757:13784	1638344	0	True				
ANR	1638969	UnaryOperationExpression	! ( jump -> flags & PATCH_ABS_B )		1638344	0					
ANR	1638970	UnaryOperator	!		1638344	0					
ANR	1638971	BitAndExpression	jump -> flags & PATCH_ABS_B		1638344	1		&			
ANR	1638972	PtrMemberAccess	jump -> flags		1638344	0					
ANR	1638973	Identifier	jump		1638344	0					
ANR	1638974	Identifier	flags		1638344	1					
ANR	1638975	Identifier	PATCH_ABS_B		1638344	1					
ANR	1638976	CompoundStatement		134:39:3919:3919	1638344	1					
ANR	1638977	ExpressionStatement	addr = addr - jump -> addr	452:6:13795:13819	1638344	0	True				
ANR	1638978	AssignmentExpression	addr = addr - jump -> addr		1638344	0		=			
ANR	1638979	Identifier	addr		1638344	0					
ANR	1638980	AdditiveExpression	addr - jump -> addr		1638344	1		-			
ANR	1638981	Identifier	addr		1638344	0					
ANR	1638982	PtrMemberAccess	jump -> addr		1638344	1					
ANR	1638983	Identifier	jump		1638344	0					
ANR	1638984	Identifier	addr		1638344	1					
ANR	1638985	ExpressionStatement	SLJIT_ASSERT ( ( sljit_sw ) addr <= 0x01ffffff && ( sljit_sw ) addr >= - 0x02000000 )	453:6:13827:13902	1638344	1	True				
ANR	1638986	CallExpression	SLJIT_ASSERT ( ( sljit_sw ) addr <= 0x01ffffff && ( sljit_sw ) addr >= - 0x02000000 )		1638344	0					
ANR	1638987	Callee	SLJIT_ASSERT		1638344	0					
ANR	1638988	Identifier	SLJIT_ASSERT		1638344	0					
ANR	1638989	ArgumentList	( sljit_sw ) addr <= 0x01ffffff && ( sljit_sw ) addr >= - 0x02000000		1638344	1					
ANR	1638990	Argument	( sljit_sw ) addr <= 0x01ffffff && ( sljit_sw ) addr >= - 0x02000000		1638344	0					
ANR	1638991	AndExpression	( sljit_sw ) addr <= 0x01ffffff && ( sljit_sw ) addr >= - 0x02000000		1638344	0		&&			
ANR	1638992	RelationalExpression	( sljit_sw ) addr <= 0x01ffffff		1638344	0		<=			
ANR	1638993	CastExpression	( sljit_sw ) addr		1638344	0					
ANR	1638994	CastTarget	sljit_sw		1638344	0					
ANR	1638995	Identifier	addr		1638344	1					
ANR	1638996	PrimaryExpression	0x01ffffff		1638344	1					
ANR	1638997	RelationalExpression	( sljit_sw ) addr >= - 0x02000000		1638344	1		>=			
ANR	1638998	CastExpression	( sljit_sw ) addr		1638344	0					
ANR	1638999	CastTarget	sljit_sw		1638344	0					
ANR	1639000	Identifier	addr		1638344	1					
ANR	1639001	UnaryOperationExpression	- 0x02000000		1638344	1					
ANR	1639002	UnaryOperator	-		1638344	0					
ANR	1639003	PrimaryExpression	0x02000000		1638344	1					
ANR	1639004	ExpressionStatement	* buf_ptr = Bx | ( addr & 0x03fffffc ) | ( ( * buf_ptr ) & 0x1 )	454:6:13910:13966	1638344	2	True				
ANR	1639005	AssignmentExpression	* buf_ptr = Bx | ( addr & 0x03fffffc ) | ( ( * buf_ptr ) & 0x1 )		1638344	0		=			
ANR	1639006	UnaryOperationExpression	* buf_ptr		1638344	0					
ANR	1639007	UnaryOperator	*		1638344	0					
ANR	1639008	Identifier	buf_ptr		1638344	1					
ANR	1639009	InclusiveOrExpression	Bx | ( addr & 0x03fffffc ) | ( ( * buf_ptr ) & 0x1 )		1638344	1		|			
ANR	1639010	Identifier	Bx		1638344	0					
ANR	1639011	InclusiveOrExpression	( addr & 0x03fffffc ) | ( ( * buf_ptr ) & 0x1 )		1638344	1		|			
ANR	1639012	BitAndExpression	addr & 0x03fffffc		1638344	0		&			
ANR	1639013	Identifier	addr		1638344	0					
ANR	1639014	PrimaryExpression	0x03fffffc		1638344	1					
ANR	1639015	BitAndExpression	( * buf_ptr ) & 0x1		1638344	1		&			
ANR	1639016	UnaryOperationExpression	* buf_ptr		1638344	0					
ANR	1639017	UnaryOperator	*		1638344	0					
ANR	1639018	Identifier	buf_ptr		1638344	1					
ANR	1639019	PrimaryExpression	0x1		1638344	1					
ANR	1639020	ElseStatement	else		1638344	0					
ANR	1639021	CompoundStatement		139:10:4117:4117	1638344	0					
ANR	1639022	ExpressionStatement	SLJIT_ASSERT ( addr <= 0x03ffffff )	457:6:13993:14025	1638344	0	True				
ANR	1639023	CallExpression	SLJIT_ASSERT ( addr <= 0x03ffffff )		1638344	0					
ANR	1639024	Callee	SLJIT_ASSERT		1638344	0					
ANR	1639025	Identifier	SLJIT_ASSERT		1638344	0					
ANR	1639026	ArgumentList	addr <= 0x03ffffff		1638344	1					
ANR	1639027	Argument	addr <= 0x03ffffff		1638344	0					
ANR	1639028	RelationalExpression	addr <= 0x03ffffff		1638344	0		<=			
ANR	1639029	Identifier	addr		1638344	0					
ANR	1639030	PrimaryExpression	0x03ffffff		1638344	1					
ANR	1639031	ExpressionStatement	* buf_ptr = Bx | ( addr & 0x03fffffc ) | 0x2 | ( ( * buf_ptr ) & 0x1 )	458:6:14033:14095	1638344	1	True				
ANR	1639032	AssignmentExpression	* buf_ptr = Bx | ( addr & 0x03fffffc ) | 0x2 | ( ( * buf_ptr ) & 0x1 )		1638344	0		=			
ANR	1639033	UnaryOperationExpression	* buf_ptr		1638344	0					
ANR	1639034	UnaryOperator	*		1638344	0					
ANR	1639035	Identifier	buf_ptr		1638344	1					
ANR	1639036	InclusiveOrExpression	Bx | ( addr & 0x03fffffc ) | 0x2 | ( ( * buf_ptr ) & 0x1 )		1638344	1		|			
ANR	1639037	Identifier	Bx		1638344	0					
ANR	1639038	InclusiveOrExpression	( addr & 0x03fffffc ) | 0x2 | ( ( * buf_ptr ) & 0x1 )		1638344	1		|			
ANR	1639039	BitAndExpression	addr & 0x03fffffc		1638344	0		&			
ANR	1639040	Identifier	addr		1638344	0					
ANR	1639041	PrimaryExpression	0x03fffffc		1638344	1					
ANR	1639042	InclusiveOrExpression	0x2 | ( ( * buf_ptr ) & 0x1 )		1638344	1		|			
ANR	1639043	PrimaryExpression	0x2		1638344	0					
ANR	1639044	BitAndExpression	( * buf_ptr ) & 0x1		1638344	1		&			
ANR	1639045	UnaryOperationExpression	* buf_ptr		1638344	0					
ANR	1639046	UnaryOperator	*		1638344	0					
ANR	1639047	Identifier	buf_ptr		1638344	1					
ANR	1639048	PrimaryExpression	0x1		1638344	1					
ANR	1639049	BreakStatement	break ;	461:4:14114:14119	1638344	1	True				
ANR	1639050	ExpressionStatement	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & 0xffff0000 ) | ( ( addr >> 16 ) & 0xffff )	465:3:14230:14294	1638344	3	True				
ANR	1639051	AssignmentExpression	buf_ptr [ 0 ] = ( buf_ptr [ 0 ] & 0xffff0000 ) | ( ( addr >> 16 ) & 0xffff )		1638344	0		=			
ANR	1639052	ArrayIndexing	buf_ptr [ 0 ]		1638344	0					
ANR	1639053	Identifier	buf_ptr		1638344	0					
ANR	1639054	PrimaryExpression	0		1638344	1					
ANR	1639055	InclusiveOrExpression	( buf_ptr [ 0 ] & 0xffff0000 ) | ( ( addr >> 16 ) & 0xffff )		1638344	1		|			
ANR	1639056	BitAndExpression	buf_ptr [ 0 ] & 0xffff0000		1638344	0		&			
ANR	1639057	ArrayIndexing	buf_ptr [ 0 ]		1638344	0					
ANR	1639058	Identifier	buf_ptr		1638344	0					
ANR	1639059	PrimaryExpression	0		1638344	1					
ANR	1639060	PrimaryExpression	0xffff0000		1638344	1					
ANR	1639061	BitAndExpression	( addr >> 16 ) & 0xffff		1638344	1		&			
ANR	1639062	ShiftExpression	addr >> 16		1638344	0		>>			
ANR	1639063	Identifier	addr		1638344	0					
ANR	1639064	PrimaryExpression	16		1638344	1					
ANR	1639065	PrimaryExpression	0xffff		1638344	1					
ANR	1639066	ExpressionStatement	buf_ptr [ 1 ] = ( buf_ptr [ 1 ] & 0xffff0000 ) | ( addr & 0xffff )	466:3:14299:14355	1638344	4	True				
ANR	1639067	AssignmentExpression	buf_ptr [ 1 ] = ( buf_ptr [ 1 ] & 0xffff0000 ) | ( addr & 0xffff )		1638344	0		=			
ANR	1639068	ArrayIndexing	buf_ptr [ 1 ]		1638344	0					
ANR	1639069	Identifier	buf_ptr		1638344	0					
ANR	1639070	PrimaryExpression	1		1638344	1					
ANR	1639071	InclusiveOrExpression	( buf_ptr [ 1 ] & 0xffff0000 ) | ( addr & 0xffff )		1638344	1		|			
ANR	1639072	BitAndExpression	buf_ptr [ 1 ] & 0xffff0000		1638344	0		&			
ANR	1639073	ArrayIndexing	buf_ptr [ 1 ]		1638344	0					
ANR	1639074	Identifier	buf_ptr		1638344	0					
ANR	1639075	PrimaryExpression	1		1638344	1					
ANR	1639076	PrimaryExpression	0xffff0000		1638344	1					
ANR	1639077	BitAndExpression	addr & 0xffff		1638344	1		&			
ANR	1639078	Identifier	addr		1638344	0					
ANR	1639079	PrimaryExpression	0xffff		1638344	1					
ANR	1639080	Condition	0	486:11:15167:15167	1638344	1	True				
ANR	1639081	PrimaryExpression	0		1638344	0					
ANR	1639082	ExpressionStatement	jump = jump -> next	487:2:15173:15190	1638344	1	True				
ANR	1639083	AssignmentExpression	jump = jump -> next		1638344	0		=			
ANR	1639084	Identifier	jump		1638344	0					
ANR	1639085	PtrMemberAccess	jump -> next		1638344	1					
ANR	1639086	Identifier	jump		1638344	0					
ANR	1639087	Identifier	next		1638344	1					
ANR	1639088	ExpressionStatement	compiler -> error = SLJIT_ERR_COMPILED	490:1:15197:15233	1638344	30	True				
ANR	1639089	AssignmentExpression	compiler -> error = SLJIT_ERR_COMPILED		1638344	0		=			
ANR	1639090	PtrMemberAccess	compiler -> error		1638344	0					
ANR	1639091	Identifier	compiler		1638344	0					
ANR	1639092	Identifier	error		1638344	1					
ANR	1639093	Identifier	SLJIT_ERR_COMPILED		1638344	1					
ANR	1639094	ExpressionStatement	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_ins )	491:1:15236:15301	1638344	31	True				
ANR	1639095	AssignmentExpression	compiler -> executable_size = ( code_ptr - code ) * sizeof ( sljit_ins )		1638344	0		=			
ANR	1639096	PtrMemberAccess	compiler -> executable_size		1638344	0					
ANR	1639097	Identifier	compiler		1638344	0					
ANR	1639098	Identifier	executable_size		1638344	1					
ANR	1639099	MultiplicativeExpression	( code_ptr - code ) * sizeof ( sljit_ins )		1638344	1		*			
ANR	1639100	AdditiveExpression	code_ptr - code		1638344	0		-			
ANR	1639101	Identifier	code_ptr		1638344	0					
ANR	1639102	Identifier	code		1638344	1					
ANR	1639103	SizeofExpression	sizeof ( sljit_ins )		1638344	1					
ANR	1639104	Sizeof	sizeof		1638344	0					
ANR	1639105	SizeofOperand	sljit_ins		1638344	1					
ANR	1639106	ExpressionStatement	"SLJIT_CACHE_FLUSH ( code , code_ptr )"	492:1:15304:15337	1638344	32	True				
ANR	1639107	CallExpression	"SLJIT_CACHE_FLUSH ( code , code_ptr )"		1638344	0					
ANR	1639108	Callee	SLJIT_CACHE_FLUSH		1638344	0					
ANR	1639109	Identifier	SLJIT_CACHE_FLUSH		1638344	0					
ANR	1639110	ArgumentList	code		1638344	1					
ANR	1639111	Argument	code		1638344	0					
ANR	1639112	Identifier	code		1638344	0					
ANR	1639113	Argument	code_ptr		1638344	1					
ANR	1639114	Identifier	code_ptr		1638344	0					
ANR	1639115	IfStatement	if ( ( ( sljit_sw ) code_ptr ) & 0x4 )		1638344	33					
ANR	1639116	Condition	( ( sljit_sw ) code_ptr ) & 0x4	496:5:15459:15484	1638344	0	True				
ANR	1639117	BitAndExpression	( ( sljit_sw ) code_ptr ) & 0x4		1638344	0		&			
ANR	1639118	CastExpression	( sljit_sw ) code_ptr		1638344	0					
ANR	1639119	CastTarget	sljit_sw		1638344	0					
ANR	1639120	Identifier	code_ptr		1638344	1					
ANR	1639121	PrimaryExpression	0x4		1638344	1					
ANR	1639122	ExpressionStatement	code_ptr ++	497:2:15489:15499	1638344	1	True				
ANR	1639123	PostIncDecOperationExpression	code_ptr ++		1638344	0					
ANR	1639124	Identifier	code_ptr		1638344	0					
ANR	1639125	IncDec	++		1638344	1					
ANR	1639126	ExpressionStatement	"sljit_set_function_context ( NULL , ( struct sljit_function_context * ) code_ptr , ( sljit_sw ) code , ( void * ) sljit_generate_code )"	498:1:15502:15620	1638344	34	True				
ANR	1639127	CallExpression	"sljit_set_function_context ( NULL , ( struct sljit_function_context * ) code_ptr , ( sljit_sw ) code , ( void * ) sljit_generate_code )"		1638344	0					
ANR	1639128	Callee	sljit_set_function_context		1638344	0					
ANR	1639129	Identifier	sljit_set_function_context		1638344	0					
ANR	1639130	ArgumentList	NULL		1638344	1					
ANR	1639131	Argument	NULL		1638344	0					
ANR	1639132	Identifier	NULL		1638344	0					
ANR	1639133	Argument	( struct sljit_function_context * ) code_ptr		1638344	1					
ANR	1639134	CastExpression	( struct sljit_function_context * ) code_ptr		1638344	0					
ANR	1639135	CastTarget	struct sljit_function_context *		1638344	0					
ANR	1639136	Identifier	code_ptr		1638344	1					
ANR	1639137	Argument	( sljit_sw ) code		1638344	2					
ANR	1639138	CastExpression	( sljit_sw ) code		1638344	0					
ANR	1639139	CastTarget	sljit_sw		1638344	0					
ANR	1639140	Identifier	code		1638344	1					
ANR	1639141	Argument	( void * ) sljit_generate_code		1638344	3					
ANR	1639142	CastExpression	( void * ) sljit_generate_code		1638344	0					
ANR	1639143	CastTarget	void *		1638344	0					
ANR	1639144	Identifier	sljit_generate_code		1638344	1					
ANR	1639145	ReturnStatement	return code_ptr ;	499:1:15623:15638	1638344	35	True				
ANR	1639146	Identifier	code_ptr		1638344	0					
ANR	1639147	ReturnType	SLJIT_API_FUNC_ATTRIBUTE void *		1638344	1					
ANR	1639148	Identifier	sljit_generate_code		1638344	2					
ANR	1639149	ParameterList	struct sljit_compiler * compiler		1638344	3					
ANR	1639150	Parameter	struct sljit_compiler * compiler	317:51:9834:9864	1638344	0	True				
ANR	1639151	ParameterType	struct sljit_compiler *		1638344	0					
ANR	1639152	Identifier	compiler		1638344	1					
ANR	1639153	CFGEntryNode	ENTRY		1638344		True				
ANR	1639154	CFGExitNode	EXIT		1638344		True				
ANR	1639155	Symbol	label -> addr		1638344						
ANR	1639156	Symbol	compiler -> buf		1638344						
ANR	1639157	Symbol	SLJIT_MALLOC_EXEC		1638344						
ANR	1639158	Symbol	JUMP_LABEL		1638344						
ANR	1639159	Symbol	label -> next		1638344						
ANR	1639160	Symbol	* compiler		1638344						
ANR	1639161	Symbol	const_ -> next		1638344						
ANR	1639162	Symbol	const_ -> addr		1638344						
ANR	1639163	Symbol	buf -> next		1638344						
ANR	1639164	Symbol	buf_end		1638344						
ANR	1639165	Symbol	compiler -> executable_size		1638344						
ANR	1639166	Symbol	jump		1638344						
ANR	1639167	Symbol	buf -> used_size		1638344						
ANR	1639168	Symbol	check_sljit_generate_code		1638344						
ANR	1639169	Symbol	* buf		1638344						
ANR	1639170	Symbol	compiler -> labels		1638344						
ANR	1639171	Symbol	buf -> memory		1638344						
ANR	1639172	Symbol	NULL		1638344						
ANR	1639173	Symbol	detect_jump_type		1638344						
ANR	1639174	Symbol	* buf_ptr ++		1638344						
ANR	1639175	Symbol	jump -> addr		1638344						
ANR	1639176	Symbol	PATCH_ABS_B		1638344						
ANR	1639177	Symbol	buf_ptr		1638344						
ANR	1639178	Symbol	* code_ptr		1638344						
ANR	1639179	Symbol	* jump -> u . label		1638344						
ANR	1639180	Symbol	IS_COND		1638344						
ANR	1639181	Symbol	jump -> u . target		1638344						
ANR	1639182	Symbol	compiler -> jumps		1638344						
ANR	1639183	Symbol	label -> size		1638344						
ANR	1639184	Symbol	jump -> next		1638344						
ANR	1639185	Symbol	code		1638344						
ANR	1639186	Symbol	* * jump		1638344						
ANR	1639187	Symbol	* jump		1638344						
ANR	1639188	Symbol	jump -> u		1638344						
ANR	1639189	Symbol	jump -> flags		1638344						
ANR	1639190	Symbol	word_count		1638344						
ANR	1639191	Symbol	code_ptr		1638344						
ANR	1639192	Symbol	BCx		1638344						
ANR	1639193	Symbol	compiler		1638344						
ANR	1639194	Symbol	addr		1638344						
ANR	1639195	Symbol	* buf_ptr		1638344						
ANR	1639196	Symbol	const_		1638344						
ANR	1639197	Symbol	compiler -> consts		1638344						
ANR	1639198	Symbol	* const_		1638344						
ANR	1639199	Symbol	label		1638344						
ANR	1639200	Symbol	buf		1638344						
ANR	1639201	Symbol	REMOVE_COND		1638344						
ANR	1639202	Symbol	sljit_generate_code		1638344						
ANR	1639203	Symbol	compiler -> size		1638344						
ANR	1639204	Symbol	* jump -> u		1638344						
ANR	1639205	Symbol	Bx		1638344						
ANR	1639206	Symbol	PATCH_B		1638344						
ANR	1639207	Symbol	jump -> u . label -> addr		1638344						
ANR	1639208	Symbol	jump -> u . label		1638344						
ANR	1639209	Symbol	SLJIT_ERR_COMPILED		1638344						
ANR	1639210	Symbol	compiler -> error		1638344						
ANR	1639211	Symbol	* label		1638344						
ANR	1639212	Function	sljit_emit_enter	574:0:17516:20054							
ANR	1639213	FunctionDef	"sljit_emit_enter (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1639212	0					
ANR	1639214	CompoundStatement		577:0:17732:20054	1639212	0					
ANR	1639215	IdentifierDeclStatement	"sljit_si i , tmp , offs ;"	578:1:17735:17756	1639212	0	True				
ANR	1639216	IdentifierDecl	i		1639212	0					
ANR	1639217	IdentifierDeclType	sljit_si		1639212	0					
ANR	1639218	Identifier	i		1639212	1					
ANR	1639219	IdentifierDecl	tmp		1639212	1					
ANR	1639220	IdentifierDeclType	sljit_si		1639212	0					
ANR	1639221	Identifier	tmp		1639212	1					
ANR	1639222	IdentifierDecl	offs		1639212	2					
ANR	1639223	IdentifierDeclType	sljit_si		1639212	0					
ANR	1639224	Identifier	offs		1639212	1					
ANR	1639225	ExpressionStatement	CHECK_ERROR ( )	580:1:17760:17773	1639212	1	True				
ANR	1639226	CallExpression	CHECK_ERROR ( )		1639212	0					
ANR	1639227	Callee	CHECK_ERROR		1639212	0					
ANR	1639228	Identifier	CHECK_ERROR		1639212	0					
ANR	1639229	ArgumentList			1639212	1					
ANR	1639230	ExpressionStatement	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	581:1:17776:17882	1639212	2	True				
ANR	1639231	CallExpression	"CHECK ( check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1639212	0					
ANR	1639232	Callee	CHECK		1639212	0					
ANR	1639233	Identifier	CHECK		1639212	0					
ANR	1639234	ArgumentList	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1639212	1					
ANR	1639235	Argument	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1639212	0					
ANR	1639236	CallExpression	"check_sljit_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1639212	0					
ANR	1639237	Callee	check_sljit_emit_enter		1639212	0					
ANR	1639238	Identifier	check_sljit_emit_enter		1639212	0					
ANR	1639239	ArgumentList	compiler		1639212	1					
ANR	1639240	Argument	compiler		1639212	0					
ANR	1639241	Identifier	compiler		1639212	0					
ANR	1639242	Argument	options		1639212	1					
ANR	1639243	Identifier	options		1639212	0					
ANR	1639244	Argument	args		1639212	2					
ANR	1639245	Identifier	args		1639212	0					
ANR	1639246	Argument	scratches		1639212	3					
ANR	1639247	Identifier	scratches		1639212	0					
ANR	1639248	Argument	saveds		1639212	4					
ANR	1639249	Identifier	saveds		1639212	0					
ANR	1639250	Argument	fscratches		1639212	5					
ANR	1639251	Identifier	fscratches		1639212	0					
ANR	1639252	Argument	fsaveds		1639212	6					
ANR	1639253	Identifier	fsaveds		1639212	0					
ANR	1639254	Argument	local_size		1639212	7					
ANR	1639255	Identifier	local_size		1639212	0					
ANR	1639256	ExpressionStatement	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	582:1:17885:17976	1639212	3	True				
ANR	1639257	CallExpression	"set_emit_enter ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1639212	0					
ANR	1639258	Callee	set_emit_enter		1639212	0					
ANR	1639259	Identifier	set_emit_enter		1639212	0					
ANR	1639260	ArgumentList	compiler		1639212	1					
ANR	1639261	Argument	compiler		1639212	0					
ANR	1639262	Identifier	compiler		1639212	0					
ANR	1639263	Argument	options		1639212	1					
ANR	1639264	Identifier	options		1639212	0					
ANR	1639265	Argument	args		1639212	2					
ANR	1639266	Identifier	args		1639212	0					
ANR	1639267	Argument	scratches		1639212	3					
ANR	1639268	Identifier	scratches		1639212	0					
ANR	1639269	Argument	saveds		1639212	4					
ANR	1639270	Identifier	saveds		1639212	0					
ANR	1639271	Argument	fscratches		1639212	5					
ANR	1639272	Identifier	fscratches		1639212	0					
ANR	1639273	Argument	fsaveds		1639212	6					
ANR	1639274	Identifier	fsaveds		1639212	0					
ANR	1639275	Argument	local_size		1639212	7					
ANR	1639276	Identifier	local_size		1639212	0					
ANR	1639277	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MFLR | D ( 0 ) ) )"	584:1:17980:18021	1639212	4	True				
ANR	1639278	CallExpression	"FAIL_IF ( push_inst ( compiler , MFLR | D ( 0 ) ) )"		1639212	0					
ANR	1639279	Callee	FAIL_IF		1639212	0					
ANR	1639280	Identifier	FAIL_IF		1639212	0					
ANR	1639281	ArgumentList	"push_inst ( compiler , MFLR | D ( 0 ) )"		1639212	1					
ANR	1639282	Argument	"push_inst ( compiler , MFLR | D ( 0 ) )"		1639212	0					
ANR	1639283	CallExpression	"push_inst ( compiler , MFLR | D ( 0 ) )"		1639212	0					
ANR	1639284	Callee	push_inst		1639212	0					
ANR	1639285	Identifier	push_inst		1639212	0					
ANR	1639286	ArgumentList	compiler		1639212	1					
ANR	1639287	Argument	compiler		1639212	0					
ANR	1639288	Identifier	compiler		1639212	0					
ANR	1639289	Argument	MFLR | D ( 0 )		1639212	1					
ANR	1639290	InclusiveOrExpression	MFLR | D ( 0 )		1639212	0		|			
ANR	1639291	Identifier	MFLR		1639212	0					
ANR	1639292	CallExpression	D ( 0 )		1639212	1					
ANR	1639293	Callee	D		1639212	0					
ANR	1639294	Identifier	D		1639212	0					
ANR	1639295	ArgumentList	0		1639212	1					
ANR	1639296	Argument	0		1639212	0					
ANR	1639297	PrimaryExpression	0		1639212	0					
ANR	1639298	ExpressionStatement	offs = - ( sljit_si ) ( sizeof ( sljit_sw ) )	585:1:18024:18060	1639212	5	True				
ANR	1639299	AssignmentExpression	offs = - ( sljit_si ) ( sizeof ( sljit_sw ) )		1639212	0		=			
ANR	1639300	Identifier	offs		1639212	0					
ANR	1639301	UnaryOperationExpression	- ( sljit_si ) ( sizeof ( sljit_sw ) )		1639212	1					
ANR	1639302	UnaryOperator	-		1639212	0					
ANR	1639303	CastExpression	( sljit_si ) ( sizeof ( sljit_sw ) )		1639212	1					
ANR	1639304	CastTarget	sljit_si		1639212	0					
ANR	1639305	SizeofExpression	sizeof ( sljit_sw )		1639212	1					
ANR	1639306	Sizeof	sizeof		1639212	0					
ANR	1639307	SizeofOperand	sljit_sw		1639212	1					
ANR	1639308	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_STORE | S ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"	586:1:18063:18144	1639212	6	True				
ANR	1639309	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_STORE | S ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"		1639212	0					
ANR	1639310	Callee	FAIL_IF		1639212	0					
ANR	1639311	Identifier	FAIL_IF		1639212	0					
ANR	1639312	ArgumentList	"push_inst ( compiler , STACK_STORE | S ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1639212	1					
ANR	1639313	Argument	"push_inst ( compiler , STACK_STORE | S ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1639212	0					
ANR	1639314	CallExpression	"push_inst ( compiler , STACK_STORE | S ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1639212	0					
ANR	1639315	Callee	push_inst		1639212	0					
ANR	1639316	Identifier	push_inst		1639212	0					
ANR	1639317	ArgumentList	compiler		1639212	1					
ANR	1639318	Argument	compiler		1639212	0					
ANR	1639319	Identifier	compiler		1639212	0					
ANR	1639320	Argument	STACK_STORE | S ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs )		1639212	1					
ANR	1639321	InclusiveOrExpression	STACK_STORE | S ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs )		1639212	0		|			
ANR	1639322	Identifier	STACK_STORE		1639212	0					
ANR	1639323	InclusiveOrExpression	S ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs )		1639212	1		|			
ANR	1639324	CallExpression	S ( TMP_ZERO )		1639212	0					
ANR	1639325	Callee	S		1639212	0					
ANR	1639326	Identifier	S		1639212	0					
ANR	1639327	ArgumentList	TMP_ZERO		1639212	1					
ANR	1639328	Argument	TMP_ZERO		1639212	0					
ANR	1639329	Identifier	TMP_ZERO		1639212	0					
ANR	1639330	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( offs )		1639212	1		|			
ANR	1639331	CallExpression	A ( SLJIT_SP )		1639212	0					
ANR	1639332	Callee	A		1639212	0					
ANR	1639333	Identifier	A		1639212	0					
ANR	1639334	ArgumentList	SLJIT_SP		1639212	1					
ANR	1639335	Argument	SLJIT_SP		1639212	0					
ANR	1639336	Identifier	SLJIT_SP		1639212	0					
ANR	1639337	CallExpression	IMM ( offs )		1639212	1					
ANR	1639338	Callee	IMM		1639212	0					
ANR	1639339	Identifier	IMM		1639212	0					
ANR	1639340	ArgumentList	offs		1639212	1					
ANR	1639341	Argument	offs		1639212	0					
ANR	1639342	Identifier	offs		1639212	0					
ANR	1639343	ExpressionStatement	tmp = saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG	588:1:18148:18244	1639212	7	True				
ANR	1639344	AssignmentExpression	tmp = saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG		1639212	0		=			
ANR	1639345	Identifier	tmp		1639212	0					
ANR	1639346	ConditionalExpression	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - saveds ) : SLJIT_FIRST_SAVED_REG		1639212	1					
ANR	1639347	Condition	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1639212	0					
ANR	1639348	RelationalExpression	saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1639212	0		<			
ANR	1639349	Identifier	saveds		1639212	0					
ANR	1639350	Identifier	SLJIT_NUMBER_OF_SAVED_REGISTERS		1639212	1					
ANR	1639351	AdditiveExpression	SLJIT_S0 + 1 - saveds		1639212	1		+			
ANR	1639352	Identifier	SLJIT_S0		1639212	0					
ANR	1639353	AdditiveExpression	1 - saveds		1639212	1		-			
ANR	1639354	PrimaryExpression	1		1639212	0					
ANR	1639355	Identifier	saveds		1639212	1					
ANR	1639356	Identifier	SLJIT_FIRST_SAVED_REG		1639212	2					
ANR	1639357	ForStatement	for ( i = SLJIT_S0 ; i >= tmp ; i -- )		1639212	8					
ANR	1639358	ForInit	i = SLJIT_S0 ;	589:6:18252:18264	1639212	0	True				
ANR	1639359	AssignmentExpression	i = SLJIT_S0		1639212	0		=			
ANR	1639360	Identifier	i		1639212	0					
ANR	1639361	Identifier	SLJIT_S0		1639212	1					
ANR	1639362	Condition	i >= tmp	589:20:18266:18273	1639212	1	True				
ANR	1639363	RelationalExpression	i >= tmp		1639212	0		>=			
ANR	1639364	Identifier	i		1639212	0					
ANR	1639365	Identifier	tmp		1639212	1					
ANR	1639366	PostIncDecOperationExpression	i --	589:30:18276:18278	1639212	2	True				
ANR	1639367	Identifier	i		1639212	0					
ANR	1639368	IncDec	--		1639212	1					
ANR	1639369	CompoundStatement		13:35:548:548	1639212	3					
ANR	1639370	ExpressionStatement	offs -= ( sljit_si ) ( sizeof ( sljit_sw ) )	590:2:18285:18321	1639212	0	True				
ANR	1639371	AssignmentExpression	offs -= ( sljit_si ) ( sizeof ( sljit_sw ) )		1639212	0		-=			
ANR	1639372	Identifier	offs		1639212	0					
ANR	1639373	CastExpression	( sljit_si ) ( sizeof ( sljit_sw ) )		1639212	1					
ANR	1639374	CastTarget	sljit_si		1639212	0					
ANR	1639375	SizeofExpression	sizeof ( sljit_sw )		1639212	1					
ANR	1639376	Sizeof	sizeof		1639212	0					
ANR	1639377	SizeofOperand	sljit_sw		1639212	1					
ANR	1639378	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"	591:2:18325:18399	1639212	1	True				
ANR	1639379	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"		1639212	0					
ANR	1639380	Callee	FAIL_IF		1639212	0					
ANR	1639381	Identifier	FAIL_IF		1639212	0					
ANR	1639382	ArgumentList	"push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1639212	1					
ANR	1639383	Argument	"push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1639212	0					
ANR	1639384	CallExpression	"push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1639212	0					
ANR	1639385	Callee	push_inst		1639212	0					
ANR	1639386	Identifier	push_inst		1639212	0					
ANR	1639387	ArgumentList	compiler		1639212	1					
ANR	1639388	Argument	compiler		1639212	0					
ANR	1639389	Identifier	compiler		1639212	0					
ANR	1639390	Argument	STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1639212	1					
ANR	1639391	InclusiveOrExpression	STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1639212	0		|			
ANR	1639392	Identifier	STACK_STORE		1639212	0					
ANR	1639393	InclusiveOrExpression	S ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1639212	1		|			
ANR	1639394	CallExpression	S ( i )		1639212	0					
ANR	1639395	Callee	S		1639212	0					
ANR	1639396	Identifier	S		1639212	0					
ANR	1639397	ArgumentList	i		1639212	1					
ANR	1639398	Argument	i		1639212	0					
ANR	1639399	Identifier	i		1639212	0					
ANR	1639400	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( offs )		1639212	1		|			
ANR	1639401	CallExpression	A ( SLJIT_SP )		1639212	0					
ANR	1639402	Callee	A		1639212	0					
ANR	1639403	Identifier	A		1639212	0					
ANR	1639404	ArgumentList	SLJIT_SP		1639212	1					
ANR	1639405	Argument	SLJIT_SP		1639212	0					
ANR	1639406	Identifier	SLJIT_SP		1639212	0					
ANR	1639407	CallExpression	IMM ( offs )		1639212	1					
ANR	1639408	Callee	IMM		1639212	0					
ANR	1639409	Identifier	IMM		1639212	0					
ANR	1639410	ArgumentList	offs		1639212	1					
ANR	1639411	Argument	offs		1639212	0					
ANR	1639412	Identifier	offs		1639212	0					
ANR	1639413	ForStatement	for ( i = scratches ; i >= SLJIT_FIRST_SAVED_REG ; i -- )		1639212	9					
ANR	1639414	ForInit	i = scratches ;	594:6:18411:18424	1639212	0	True				
ANR	1639415	AssignmentExpression	i = scratches		1639212	0		=			
ANR	1639416	Identifier	i		1639212	0					
ANR	1639417	Identifier	scratches		1639212	1					
ANR	1639418	Condition	i >= SLJIT_FIRST_SAVED_REG	594:21:18426:18451	1639212	1	True				
ANR	1639419	RelationalExpression	i >= SLJIT_FIRST_SAVED_REG		1639212	0		>=			
ANR	1639420	Identifier	i		1639212	0					
ANR	1639421	Identifier	SLJIT_FIRST_SAVED_REG		1639212	1					
ANR	1639422	PostIncDecOperationExpression	i --	594:49:18454:18456	1639212	2	True				
ANR	1639423	Identifier	i		1639212	0					
ANR	1639424	IncDec	--		1639212	1					
ANR	1639425	CompoundStatement		18:54:726:726	1639212	3					
ANR	1639426	ExpressionStatement	offs -= ( sljit_si ) ( sizeof ( sljit_sw ) )	595:2:18463:18499	1639212	0	True				
ANR	1639427	AssignmentExpression	offs -= ( sljit_si ) ( sizeof ( sljit_sw ) )		1639212	0		-=			
ANR	1639428	Identifier	offs		1639212	0					
ANR	1639429	CastExpression	( sljit_si ) ( sizeof ( sljit_sw ) )		1639212	1					
ANR	1639430	CastTarget	sljit_si		1639212	0					
ANR	1639431	SizeofExpression	sizeof ( sljit_sw )		1639212	1					
ANR	1639432	Sizeof	sizeof		1639212	0					
ANR	1639433	SizeofOperand	sljit_sw		1639212	1					
ANR	1639434	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"	596:2:18503:18577	1639212	1	True				
ANR	1639435	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"		1639212	0					
ANR	1639436	Callee	FAIL_IF		1639212	0					
ANR	1639437	Identifier	FAIL_IF		1639212	0					
ANR	1639438	ArgumentList	"push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1639212	1					
ANR	1639439	Argument	"push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1639212	0					
ANR	1639440	CallExpression	"push_inst ( compiler , STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1639212	0					
ANR	1639441	Callee	push_inst		1639212	0					
ANR	1639442	Identifier	push_inst		1639212	0					
ANR	1639443	ArgumentList	compiler		1639212	1					
ANR	1639444	Argument	compiler		1639212	0					
ANR	1639445	Identifier	compiler		1639212	0					
ANR	1639446	Argument	STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1639212	1					
ANR	1639447	InclusiveOrExpression	STACK_STORE | S ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1639212	0		|			
ANR	1639448	Identifier	STACK_STORE		1639212	0					
ANR	1639449	InclusiveOrExpression	S ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1639212	1		|			
ANR	1639450	CallExpression	S ( i )		1639212	0					
ANR	1639451	Callee	S		1639212	0					
ANR	1639452	Identifier	S		1639212	0					
ANR	1639453	ArgumentList	i		1639212	1					
ANR	1639454	Argument	i		1639212	0					
ANR	1639455	Identifier	i		1639212	0					
ANR	1639456	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( offs )		1639212	1		|			
ANR	1639457	CallExpression	A ( SLJIT_SP )		1639212	0					
ANR	1639458	Callee	A		1639212	0					
ANR	1639459	Identifier	A		1639212	0					
ANR	1639460	ArgumentList	SLJIT_SP		1639212	1					
ANR	1639461	Argument	SLJIT_SP		1639212	0					
ANR	1639462	Identifier	SLJIT_SP		1639212	0					
ANR	1639463	CallExpression	IMM ( offs )		1639212	1					
ANR	1639464	Callee	IMM		1639212	0					
ANR	1639465	Identifier	IMM		1639212	0					
ANR	1639466	ArgumentList	offs		1639212	1					
ANR	1639467	Argument	offs		1639212	0					
ANR	1639468	Identifier	offs		1639212	0					
ANR	1639469	ExpressionStatement	"SLJIT_ASSERT ( offs == - ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 ) )"	599:1:18584:18683	1639212	10	True				
ANR	1639470	CallExpression	"SLJIT_ASSERT ( offs == - ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 ) )"		1639212	0					
ANR	1639471	Callee	SLJIT_ASSERT		1639212	0					
ANR	1639472	Identifier	SLJIT_ASSERT		1639212	0					
ANR	1639473	ArgumentList	"offs == - ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1639212	1					
ANR	1639474	Argument	"offs == - ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1639212	0					
ANR	1639475	EqualityExpression	"offs == - ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1639212	0		==			
ANR	1639476	Identifier	offs		1639212	0					
ANR	1639477	UnaryOperationExpression	"- ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1639212	1					
ANR	1639478	UnaryOperator	-		1639212	0					
ANR	1639479	CastExpression	"( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1639212	1					
ANR	1639480	CastTarget	sljit_si		1639212	0					
ANR	1639481	CallExpression	"GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1639212	1					
ANR	1639482	Callee	GET_SAVED_REGISTERS_SIZE		1639212	0					
ANR	1639483	Identifier	GET_SAVED_REGISTERS_SIZE		1639212	0					
ANR	1639484	ArgumentList	compiler -> scratches		1639212	1					
ANR	1639485	Argument	compiler -> scratches		1639212	0					
ANR	1639486	PtrMemberAccess	compiler -> scratches		1639212	0					
ANR	1639487	Identifier	compiler		1639212	0					
ANR	1639488	Identifier	scratches		1639212	1					
ANR	1639489	Argument	compiler -> saveds		1639212	1					
ANR	1639490	PtrMemberAccess	compiler -> saveds		1639212	0					
ANR	1639491	Identifier	compiler		1639212	0					
ANR	1639492	Identifier	saveds		1639212	1					
ANR	1639493	Argument	1		1639212	2					
ANR	1639494	PrimaryExpression	1		1639212	0					
ANR	1639495	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_STORE | S ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) ) )"	602:1:18754:18844	1639212	11	True				
ANR	1639496	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_STORE | S ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) ) )"		1639212	0					
ANR	1639497	Callee	FAIL_IF		1639212	0					
ANR	1639498	Identifier	FAIL_IF		1639212	0					
ANR	1639499	ArgumentList	"push_inst ( compiler , STACK_STORE | S ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) )"		1639212	1					
ANR	1639500	Argument	"push_inst ( compiler , STACK_STORE | S ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) )"		1639212	0					
ANR	1639501	CallExpression	"push_inst ( compiler , STACK_STORE | S ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) )"		1639212	0					
ANR	1639502	Callee	push_inst		1639212	0					
ANR	1639503	Identifier	push_inst		1639212	0					
ANR	1639504	ArgumentList	compiler		1639212	1					
ANR	1639505	Argument	compiler		1639212	0					
ANR	1639506	Identifier	compiler		1639212	0					
ANR	1639507	Argument	STACK_STORE | S ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) )		1639212	1					
ANR	1639508	InclusiveOrExpression	STACK_STORE | S ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) )		1639212	0		|			
ANR	1639509	Identifier	STACK_STORE		1639212	0					
ANR	1639510	InclusiveOrExpression	S ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) )		1639212	1		|			
ANR	1639511	CallExpression	S ( 0 )		1639212	0					
ANR	1639512	Callee	S		1639212	0					
ANR	1639513	Identifier	S		1639212	0					
ANR	1639514	ArgumentList	0		1639212	1					
ANR	1639515	Argument	0		1639212	0					
ANR	1639516	PrimaryExpression	0		1639212	0					
ANR	1639517	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) )		1639212	1		|			
ANR	1639518	CallExpression	A ( SLJIT_SP )		1639212	0					
ANR	1639519	Callee	A		1639212	0					
ANR	1639520	Identifier	A		1639212	0					
ANR	1639521	ArgumentList	SLJIT_SP		1639212	1					
ANR	1639522	Argument	SLJIT_SP		1639212	0					
ANR	1639523	Identifier	SLJIT_SP		1639212	0					
ANR	1639524	CallExpression	IMM ( 2 * sizeof ( sljit_sw ) )		1639212	1					
ANR	1639525	Callee	IMM		1639212	0					
ANR	1639526	Identifier	IMM		1639212	0					
ANR	1639527	ArgumentList	2 * sizeof ( sljit_sw )		1639212	1					
ANR	1639528	Argument	2 * sizeof ( sljit_sw )		1639212	0					
ANR	1639529	MultiplicativeExpression	2 * sizeof ( sljit_sw )		1639212	0		*			
ANR	1639530	PrimaryExpression	2		1639212	0					
ANR	1639531	SizeofExpression	sizeof ( sljit_sw )		1639212	1					
ANR	1639532	Sizeof	sizeof		1639212	0					
ANR	1639533	SizeofOperand	sljit_sw		1639212	1					
ANR	1639534	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDI | D ( TMP_ZERO ) | A ( 0 ) | 0 ) )"	607:1:18950:19009	1639212	12	True				
ANR	1639535	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDI | D ( TMP_ZERO ) | A ( 0 ) | 0 ) )"		1639212	0					
ANR	1639536	Callee	FAIL_IF		1639212	0					
ANR	1639537	Identifier	FAIL_IF		1639212	0					
ANR	1639538	ArgumentList	"push_inst ( compiler , ADDI | D ( TMP_ZERO ) | A ( 0 ) | 0 )"		1639212	1					
ANR	1639539	Argument	"push_inst ( compiler , ADDI | D ( TMP_ZERO ) | A ( 0 ) | 0 )"		1639212	0					
ANR	1639540	CallExpression	"push_inst ( compiler , ADDI | D ( TMP_ZERO ) | A ( 0 ) | 0 )"		1639212	0					
ANR	1639541	Callee	push_inst		1639212	0					
ANR	1639542	Identifier	push_inst		1639212	0					
ANR	1639543	ArgumentList	compiler		1639212	1					
ANR	1639544	Argument	compiler		1639212	0					
ANR	1639545	Identifier	compiler		1639212	0					
ANR	1639546	Argument	ADDI | D ( TMP_ZERO ) | A ( 0 ) | 0		1639212	1					
ANR	1639547	InclusiveOrExpression	ADDI | D ( TMP_ZERO ) | A ( 0 ) | 0		1639212	0		|			
ANR	1639548	Identifier	ADDI		1639212	0					
ANR	1639549	InclusiveOrExpression	D ( TMP_ZERO ) | A ( 0 ) | 0		1639212	1		|			
ANR	1639550	CallExpression	D ( TMP_ZERO )		1639212	0					
ANR	1639551	Callee	D		1639212	0					
ANR	1639552	Identifier	D		1639212	0					
ANR	1639553	ArgumentList	TMP_ZERO		1639212	1					
ANR	1639554	Argument	TMP_ZERO		1639212	0					
ANR	1639555	Identifier	TMP_ZERO		1639212	0					
ANR	1639556	InclusiveOrExpression	A ( 0 ) | 0		1639212	1		|			
ANR	1639557	CallExpression	A ( 0 )		1639212	0					
ANR	1639558	Callee	A		1639212	0					
ANR	1639559	Identifier	A		1639212	0					
ANR	1639560	ArgumentList	0		1639212	1					
ANR	1639561	Argument	0		1639212	0					
ANR	1639562	PrimaryExpression	0		1639212	0					
ANR	1639563	PrimaryExpression	0		1639212	1					
ANR	1639564	IfStatement	if ( args >= 1 )		1639212	13					
ANR	1639565	Condition	args >= 1	608:5:19016:19024	1639212	0	True				
ANR	1639566	RelationalExpression	args >= 1		1639212	0		>=			
ANR	1639567	Identifier	args		1639212	0					
ANR	1639568	PrimaryExpression	1		1639212	1					
ANR	1639569	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( SLJIT_S0 ) | B ( SLJIT_R0 ) ) )"	609:2:19029:19103	1639212	1	True				
ANR	1639570	CallExpression	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( SLJIT_S0 ) | B ( SLJIT_R0 ) ) )"		1639212	0					
ANR	1639571	Callee	FAIL_IF		1639212	0					
ANR	1639572	Identifier	FAIL_IF		1639212	0					
ANR	1639573	ArgumentList	"push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( SLJIT_S0 ) | B ( SLJIT_R0 ) )"		1639212	1					
ANR	1639574	Argument	"push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( SLJIT_S0 ) | B ( SLJIT_R0 ) )"		1639212	0					
ANR	1639575	CallExpression	"push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( SLJIT_S0 ) | B ( SLJIT_R0 ) )"		1639212	0					
ANR	1639576	Callee	push_inst		1639212	0					
ANR	1639577	Identifier	push_inst		1639212	0					
ANR	1639578	ArgumentList	compiler		1639212	1					
ANR	1639579	Argument	compiler		1639212	0					
ANR	1639580	Identifier	compiler		1639212	0					
ANR	1639581	Argument	OR | S ( SLJIT_R0 ) | A ( SLJIT_S0 ) | B ( SLJIT_R0 )		1639212	1					
ANR	1639582	InclusiveOrExpression	OR | S ( SLJIT_R0 ) | A ( SLJIT_S0 ) | B ( SLJIT_R0 )		1639212	0		|			
ANR	1639583	Identifier	OR		1639212	0					
ANR	1639584	InclusiveOrExpression	S ( SLJIT_R0 ) | A ( SLJIT_S0 ) | B ( SLJIT_R0 )		1639212	1		|			
ANR	1639585	CallExpression	S ( SLJIT_R0 )		1639212	0					
ANR	1639586	Callee	S		1639212	0					
ANR	1639587	Identifier	S		1639212	0					
ANR	1639588	ArgumentList	SLJIT_R0		1639212	1					
ANR	1639589	Argument	SLJIT_R0		1639212	0					
ANR	1639590	Identifier	SLJIT_R0		1639212	0					
ANR	1639591	InclusiveOrExpression	A ( SLJIT_S0 ) | B ( SLJIT_R0 )		1639212	1		|			
ANR	1639592	CallExpression	A ( SLJIT_S0 )		1639212	0					
ANR	1639593	Callee	A		1639212	0					
ANR	1639594	Identifier	A		1639212	0					
ANR	1639595	ArgumentList	SLJIT_S0		1639212	1					
ANR	1639596	Argument	SLJIT_S0		1639212	0					
ANR	1639597	Identifier	SLJIT_S0		1639212	0					
ANR	1639598	CallExpression	B ( SLJIT_R0 )		1639212	1					
ANR	1639599	Callee	B		1639212	0					
ANR	1639600	Identifier	B		1639212	0					
ANR	1639601	ArgumentList	SLJIT_R0		1639212	1					
ANR	1639602	Argument	SLJIT_R0		1639212	0					
ANR	1639603	Identifier	SLJIT_R0		1639212	0					
ANR	1639604	IfStatement	if ( args >= 2 )		1639212	14					
ANR	1639605	Condition	args >= 2	610:5:19110:19118	1639212	0	True				
ANR	1639606	RelationalExpression	args >= 2		1639212	0		>=			
ANR	1639607	Identifier	args		1639212	0					
ANR	1639608	PrimaryExpression	2		1639212	1					
ANR	1639609	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R1 ) | A ( SLJIT_S1 ) | B ( SLJIT_R1 ) ) )"	611:2:19123:19197	1639212	1	True				
ANR	1639610	CallExpression	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R1 ) | A ( SLJIT_S1 ) | B ( SLJIT_R1 ) ) )"		1639212	0					
ANR	1639611	Callee	FAIL_IF		1639212	0					
ANR	1639612	Identifier	FAIL_IF		1639212	0					
ANR	1639613	ArgumentList	"push_inst ( compiler , OR | S ( SLJIT_R1 ) | A ( SLJIT_S1 ) | B ( SLJIT_R1 ) )"		1639212	1					
ANR	1639614	Argument	"push_inst ( compiler , OR | S ( SLJIT_R1 ) | A ( SLJIT_S1 ) | B ( SLJIT_R1 ) )"		1639212	0					
ANR	1639615	CallExpression	"push_inst ( compiler , OR | S ( SLJIT_R1 ) | A ( SLJIT_S1 ) | B ( SLJIT_R1 ) )"		1639212	0					
ANR	1639616	Callee	push_inst		1639212	0					
ANR	1639617	Identifier	push_inst		1639212	0					
ANR	1639618	ArgumentList	compiler		1639212	1					
ANR	1639619	Argument	compiler		1639212	0					
ANR	1639620	Identifier	compiler		1639212	0					
ANR	1639621	Argument	OR | S ( SLJIT_R1 ) | A ( SLJIT_S1 ) | B ( SLJIT_R1 )		1639212	1					
ANR	1639622	InclusiveOrExpression	OR | S ( SLJIT_R1 ) | A ( SLJIT_S1 ) | B ( SLJIT_R1 )		1639212	0		|			
ANR	1639623	Identifier	OR		1639212	0					
ANR	1639624	InclusiveOrExpression	S ( SLJIT_R1 ) | A ( SLJIT_S1 ) | B ( SLJIT_R1 )		1639212	1		|			
ANR	1639625	CallExpression	S ( SLJIT_R1 )		1639212	0					
ANR	1639626	Callee	S		1639212	0					
ANR	1639627	Identifier	S		1639212	0					
ANR	1639628	ArgumentList	SLJIT_R1		1639212	1					
ANR	1639629	Argument	SLJIT_R1		1639212	0					
ANR	1639630	Identifier	SLJIT_R1		1639212	0					
ANR	1639631	InclusiveOrExpression	A ( SLJIT_S1 ) | B ( SLJIT_R1 )		1639212	1		|			
ANR	1639632	CallExpression	A ( SLJIT_S1 )		1639212	0					
ANR	1639633	Callee	A		1639212	0					
ANR	1639634	Identifier	A		1639212	0					
ANR	1639635	ArgumentList	SLJIT_S1		1639212	1					
ANR	1639636	Argument	SLJIT_S1		1639212	0					
ANR	1639637	Identifier	SLJIT_S1		1639212	0					
ANR	1639638	CallExpression	B ( SLJIT_R1 )		1639212	1					
ANR	1639639	Callee	B		1639212	0					
ANR	1639640	Identifier	B		1639212	0					
ANR	1639641	ArgumentList	SLJIT_R1		1639212	1					
ANR	1639642	Argument	SLJIT_R1		1639212	0					
ANR	1639643	Identifier	SLJIT_R1		1639212	0					
ANR	1639644	IfStatement	if ( args >= 3 )		1639212	15					
ANR	1639645	Condition	args >= 3	612:5:19204:19212	1639212	0	True				
ANR	1639646	RelationalExpression	args >= 3		1639212	0		>=			
ANR	1639647	Identifier	args		1639212	0					
ANR	1639648	PrimaryExpression	3		1639212	1					
ANR	1639649	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R2 ) | A ( SLJIT_S2 ) | B ( SLJIT_R2 ) ) )"	613:2:19217:19291	1639212	1	True				
ANR	1639650	CallExpression	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R2 ) | A ( SLJIT_S2 ) | B ( SLJIT_R2 ) ) )"		1639212	0					
ANR	1639651	Callee	FAIL_IF		1639212	0					
ANR	1639652	Identifier	FAIL_IF		1639212	0					
ANR	1639653	ArgumentList	"push_inst ( compiler , OR | S ( SLJIT_R2 ) | A ( SLJIT_S2 ) | B ( SLJIT_R2 ) )"		1639212	1					
ANR	1639654	Argument	"push_inst ( compiler , OR | S ( SLJIT_R2 ) | A ( SLJIT_S2 ) | B ( SLJIT_R2 ) )"		1639212	0					
ANR	1639655	CallExpression	"push_inst ( compiler , OR | S ( SLJIT_R2 ) | A ( SLJIT_S2 ) | B ( SLJIT_R2 ) )"		1639212	0					
ANR	1639656	Callee	push_inst		1639212	0					
ANR	1639657	Identifier	push_inst		1639212	0					
ANR	1639658	ArgumentList	compiler		1639212	1					
ANR	1639659	Argument	compiler		1639212	0					
ANR	1639660	Identifier	compiler		1639212	0					
ANR	1639661	Argument	OR | S ( SLJIT_R2 ) | A ( SLJIT_S2 ) | B ( SLJIT_R2 )		1639212	1					
ANR	1639662	InclusiveOrExpression	OR | S ( SLJIT_R2 ) | A ( SLJIT_S2 ) | B ( SLJIT_R2 )		1639212	0		|			
ANR	1639663	Identifier	OR		1639212	0					
ANR	1639664	InclusiveOrExpression	S ( SLJIT_R2 ) | A ( SLJIT_S2 ) | B ( SLJIT_R2 )		1639212	1		|			
ANR	1639665	CallExpression	S ( SLJIT_R2 )		1639212	0					
ANR	1639666	Callee	S		1639212	0					
ANR	1639667	Identifier	S		1639212	0					
ANR	1639668	ArgumentList	SLJIT_R2		1639212	1					
ANR	1639669	Argument	SLJIT_R2		1639212	0					
ANR	1639670	Identifier	SLJIT_R2		1639212	0					
ANR	1639671	InclusiveOrExpression	A ( SLJIT_S2 ) | B ( SLJIT_R2 )		1639212	1		|			
ANR	1639672	CallExpression	A ( SLJIT_S2 )		1639212	0					
ANR	1639673	Callee	A		1639212	0					
ANR	1639674	Identifier	A		1639212	0					
ANR	1639675	ArgumentList	SLJIT_S2		1639212	1					
ANR	1639676	Argument	SLJIT_S2		1639212	0					
ANR	1639677	Identifier	SLJIT_S2		1639212	0					
ANR	1639678	CallExpression	B ( SLJIT_R2 )		1639212	1					
ANR	1639679	Callee	B		1639212	0					
ANR	1639680	Identifier	B		1639212	0					
ANR	1639681	ArgumentList	SLJIT_R2		1639212	1					
ANR	1639682	Argument	SLJIT_R2		1639212	0					
ANR	1639683	Identifier	SLJIT_R2		1639212	0					
ANR	1639684	ExpressionStatement	"local_size += GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 ) + SLJIT_LOCALS_OFFSET"	615:1:19295:19377	1639212	16	True				
ANR	1639685	AssignmentExpression	"local_size += GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 ) + SLJIT_LOCALS_OFFSET"		1639212	0		+=			
ANR	1639686	Identifier	local_size		1639212	0					
ANR	1639687	AdditiveExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 ) + SLJIT_LOCALS_OFFSET"		1639212	1		+			
ANR	1639688	CallExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 )"		1639212	0					
ANR	1639689	Callee	GET_SAVED_REGISTERS_SIZE		1639212	0					
ANR	1639690	Identifier	GET_SAVED_REGISTERS_SIZE		1639212	0					
ANR	1639691	ArgumentList	scratches		1639212	1					
ANR	1639692	Argument	scratches		1639212	0					
ANR	1639693	Identifier	scratches		1639212	0					
ANR	1639694	Argument	saveds		1639212	1					
ANR	1639695	Identifier	saveds		1639212	0					
ANR	1639696	Argument	1		1639212	2					
ANR	1639697	PrimaryExpression	1		1639212	0					
ANR	1639698	Identifier	SLJIT_LOCALS_OFFSET		1639212	1					
ANR	1639699	ExpressionStatement	local_size = ( local_size + 15 ) & ~0xf	616:1:19380:19417	1639212	17	True				
ANR	1639700	AssignmentExpression	local_size = ( local_size + 15 ) & ~0xf		1639212	0		=			
ANR	1639701	Identifier	local_size		1639212	0					
ANR	1639702	BitAndExpression	( local_size + 15 ) & ~0xf		1639212	1		&			
ANR	1639703	AdditiveExpression	local_size + 15		1639212	0		+			
ANR	1639704	Identifier	local_size		1639212	0					
ANR	1639705	PrimaryExpression	15		1639212	1					
ANR	1639706	Identifier	~0xf		1639212	1					
ANR	1639707	ExpressionStatement	compiler -> local_size = local_size	617:1:19420:19453	1639212	18	True				
ANR	1639708	AssignmentExpression	compiler -> local_size = local_size		1639212	0		=			
ANR	1639709	PtrMemberAccess	compiler -> local_size		1639212	0					
ANR	1639710	Identifier	compiler		1639212	0					
ANR	1639711	Identifier	local_size		1639212	1					
ANR	1639712	Identifier	local_size		1639212	1					
ANR	1639713	IfStatement	if ( local_size <= SIMM_MAX )		1639212	19					
ANR	1639714	Condition	local_size <= SIMM_MAX	620:5:19518:19539	1639212	0	True				
ANR	1639715	RelationalExpression	local_size <= SIMM_MAX		1639212	0		<=			
ANR	1639716	Identifier	local_size		1639212	0					
ANR	1639717	Identifier	SIMM_MAX		1639212	1					
ANR	1639718	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STWU | S ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( - local_size ) ) )"	621:2:19544:19625	1639212	1	True				
ANR	1639719	CallExpression	"FAIL_IF ( push_inst ( compiler , STWU | S ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( - local_size ) ) )"		1639212	0					
ANR	1639720	Callee	FAIL_IF		1639212	0					
ANR	1639721	Identifier	FAIL_IF		1639212	0					
ANR	1639722	ArgumentList	"push_inst ( compiler , STWU | S ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( - local_size ) )"		1639212	1					
ANR	1639723	Argument	"push_inst ( compiler , STWU | S ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( - local_size ) )"		1639212	0					
ANR	1639724	CallExpression	"push_inst ( compiler , STWU | S ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( - local_size ) )"		1639212	0					
ANR	1639725	Callee	push_inst		1639212	0					
ANR	1639726	Identifier	push_inst		1639212	0					
ANR	1639727	ArgumentList	compiler		1639212	1					
ANR	1639728	Argument	compiler		1639212	0					
ANR	1639729	Identifier	compiler		1639212	0					
ANR	1639730	Argument	STWU | S ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( - local_size )		1639212	1					
ANR	1639731	InclusiveOrExpression	STWU | S ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( - local_size )		1639212	0		|			
ANR	1639732	Identifier	STWU		1639212	0					
ANR	1639733	InclusiveOrExpression	S ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( - local_size )		1639212	1		|			
ANR	1639734	CallExpression	S ( SLJIT_SP )		1639212	0					
ANR	1639735	Callee	S		1639212	0					
ANR	1639736	Identifier	S		1639212	0					
ANR	1639737	ArgumentList	SLJIT_SP		1639212	1					
ANR	1639738	Argument	SLJIT_SP		1639212	0					
ANR	1639739	Identifier	SLJIT_SP		1639212	0					
ANR	1639740	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( - local_size )		1639212	1		|			
ANR	1639741	CallExpression	A ( SLJIT_SP )		1639212	0					
ANR	1639742	Callee	A		1639212	0					
ANR	1639743	Identifier	A		1639212	0					
ANR	1639744	ArgumentList	SLJIT_SP		1639212	1					
ANR	1639745	Argument	SLJIT_SP		1639212	0					
ANR	1639746	Identifier	SLJIT_SP		1639212	0					
ANR	1639747	CallExpression	IMM ( - local_size )		1639212	1					
ANR	1639748	Callee	IMM		1639212	0					
ANR	1639749	Identifier	IMM		1639212	0					
ANR	1639750	ArgumentList	- local_size		1639212	1					
ANR	1639751	Argument	- local_size		1639212	0					
ANR	1639752	UnaryOperationExpression	- local_size		1639212	0					
ANR	1639753	UnaryOperator	-		1639212	0					
ANR	1639754	Identifier	local_size		1639212	1					
ANR	1639755	ElseStatement	else		1639212	0					
ANR	1639756	CompoundStatement		46:6:1900:1900	1639212	0					
ANR	1639757	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , 0 , - local_size ) )"	623:2:19637:19686	1639212	0	True				
ANR	1639758	CallExpression	"FAIL_IF ( load_immediate ( compiler , 0 , - local_size ) )"		1639212	0					
ANR	1639759	Callee	FAIL_IF		1639212	0					
ANR	1639760	Identifier	FAIL_IF		1639212	0					
ANR	1639761	ArgumentList	"load_immediate ( compiler , 0 , - local_size )"		1639212	1					
ANR	1639762	Argument	"load_immediate ( compiler , 0 , - local_size )"		1639212	0					
ANR	1639763	CallExpression	"load_immediate ( compiler , 0 , - local_size )"		1639212	0					
ANR	1639764	Callee	load_immediate		1639212	0					
ANR	1639765	Identifier	load_immediate		1639212	0					
ANR	1639766	ArgumentList	compiler		1639212	1					
ANR	1639767	Argument	compiler		1639212	0					
ANR	1639768	Identifier	compiler		1639212	0					
ANR	1639769	Argument	0		1639212	1					
ANR	1639770	PrimaryExpression	0		1639212	0					
ANR	1639771	Argument	- local_size		1639212	2					
ANR	1639772	UnaryOperationExpression	- local_size		1639212	0					
ANR	1639773	UnaryOperator	-		1639212	0					
ANR	1639774	Identifier	local_size		1639212	1					
ANR	1639775	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STWUX | S ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) ) )"	624:2:19690:19760	1639212	1	True				
ANR	1639776	CallExpression	"FAIL_IF ( push_inst ( compiler , STWUX | S ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) ) )"		1639212	0					
ANR	1639777	Callee	FAIL_IF		1639212	0					
ANR	1639778	Identifier	FAIL_IF		1639212	0					
ANR	1639779	ArgumentList	"push_inst ( compiler , STWUX | S ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) )"		1639212	1					
ANR	1639780	Argument	"push_inst ( compiler , STWUX | S ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) )"		1639212	0					
ANR	1639781	CallExpression	"push_inst ( compiler , STWUX | S ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) )"		1639212	0					
ANR	1639782	Callee	push_inst		1639212	0					
ANR	1639783	Identifier	push_inst		1639212	0					
ANR	1639784	ArgumentList	compiler		1639212	1					
ANR	1639785	Argument	compiler		1639212	0					
ANR	1639786	Identifier	compiler		1639212	0					
ANR	1639787	Argument	STWUX | S ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 )		1639212	1					
ANR	1639788	InclusiveOrExpression	STWUX | S ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 )		1639212	0		|			
ANR	1639789	Identifier	STWUX		1639212	0					
ANR	1639790	InclusiveOrExpression	S ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 )		1639212	1		|			
ANR	1639791	CallExpression	S ( SLJIT_SP )		1639212	0					
ANR	1639792	Callee	S		1639212	0					
ANR	1639793	Identifier	S		1639212	0					
ANR	1639794	ArgumentList	SLJIT_SP		1639212	1					
ANR	1639795	Argument	SLJIT_SP		1639212	0					
ANR	1639796	Identifier	SLJIT_SP		1639212	0					
ANR	1639797	InclusiveOrExpression	A ( SLJIT_SP ) | B ( 0 )		1639212	1		|			
ANR	1639798	CallExpression	A ( SLJIT_SP )		1639212	0					
ANR	1639799	Callee	A		1639212	0					
ANR	1639800	Identifier	A		1639212	0					
ANR	1639801	ArgumentList	SLJIT_SP		1639212	1					
ANR	1639802	Argument	SLJIT_SP		1639212	0					
ANR	1639803	Identifier	SLJIT_SP		1639212	0					
ANR	1639804	CallExpression	B ( 0 )		1639212	1					
ANR	1639805	Callee	B		1639212	0					
ANR	1639806	Identifier	B		1639212	0					
ANR	1639807	ArgumentList	0		1639212	1					
ANR	1639808	Argument	0		1639212	0					
ANR	1639809	PrimaryExpression	0		1639212	0					
ANR	1639810	ReturnStatement	return SLJIT_SUCCESS ;	635:1:20032:20052	1639212	20	True				
ANR	1639811	Identifier	SLJIT_SUCCESS		1639212	0					
ANR	1639812	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1639212	1					
ANR	1639813	Identifier	sljit_emit_enter		1639212	2					
ANR	1639814	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1639212	3					
ANR	1639815	Parameter	struct sljit_compiler * compiler	574:51:17567:17597	1639212	0	True				
ANR	1639816	ParameterType	struct sljit_compiler *		1639212	0					
ANR	1639817	Identifier	compiler		1639212	1					
ANR	1639818	Parameter	sljit_si options	575:1:17601:17616	1639212	1	True				
ANR	1639819	ParameterType	sljit_si		1639212	0					
ANR	1639820	Identifier	options		1639212	1					
ANR	1639821	Parameter	sljit_si args	575:19:17619:17631	1639212	2	True				
ANR	1639822	ParameterType	sljit_si		1639212	0					
ANR	1639823	Identifier	args		1639212	1					
ANR	1639824	Parameter	sljit_si scratches	575:34:17634:17651	1639212	3	True				
ANR	1639825	ParameterType	sljit_si		1639212	0					
ANR	1639826	Identifier	scratches		1639212	1					
ANR	1639827	Parameter	sljit_si saveds	575:54:17654:17668	1639212	4	True				
ANR	1639828	ParameterType	sljit_si		1639212	0					
ANR	1639829	Identifier	saveds		1639212	1					
ANR	1639830	Parameter	sljit_si fscratches	576:1:17672:17690	1639212	5	True				
ANR	1639831	ParameterType	sljit_si		1639212	0					
ANR	1639832	Identifier	fscratches		1639212	1					
ANR	1639833	Parameter	sljit_si fsaveds	576:22:17693:17708	1639212	6	True				
ANR	1639834	ParameterType	sljit_si		1639212	0					
ANR	1639835	Identifier	fsaveds		1639212	1					
ANR	1639836	Parameter	sljit_si local_size	576:40:17711:17729	1639212	7	True				
ANR	1639837	ParameterType	sljit_si		1639212	0					
ANR	1639838	Identifier	local_size		1639212	1					
ANR	1639839	CFGEntryNode	ENTRY		1639212		True				
ANR	1639840	CFGExitNode	EXIT		1639212		True				
ANR	1639841	Symbol	STWUX		1639212						
ANR	1639842	Symbol	A		1639212						
ANR	1639843	Symbol	compiler -> scratches		1639212						
ANR	1639844	Symbol	B		1639212						
ANR	1639845	Symbol	D		1639212						
ANR	1639846	Symbol	scratches		1639212						
ANR	1639847	Symbol	saveds		1639212						
ANR	1639848	Symbol	check_sljit_emit_enter		1639212						
ANR	1639849	Symbol	* compiler		1639212						
ANR	1639850	Symbol	SLJIT_R1		1639212						
ANR	1639851	Symbol	SIMM_MAX		1639212						
ANR	1639852	Symbol	SLJIT_NUMBER_OF_SAVED_REGISTERS		1639212						
ANR	1639853	Symbol	SLJIT_R2		1639212						
ANR	1639854	Symbol	SLJIT_SP		1639212						
ANR	1639855	Symbol	SLJIT_R0		1639212						
ANR	1639856	Symbol	offs		1639212						
ANR	1639857	Symbol	S		1639212						
ANR	1639858	Symbol	load_immediate		1639212						
ANR	1639859	Symbol	tmp		1639212						
ANR	1639860	Symbol	SLJIT_LOCALS_OFFSET		1639212						
ANR	1639861	Symbol	options		1639212						
ANR	1639862	Symbol	STWU		1639212						
ANR	1639863	Symbol	~0xf		1639212						
ANR	1639864	Symbol	compiler		1639212						
ANR	1639865	Symbol	GET_SAVED_REGISTERS_SIZE		1639212						
ANR	1639866	Symbol	local_size		1639212						
ANR	1639867	Symbol	push_inst		1639212						
ANR	1639868	Symbol	OR		1639212						
ANR	1639869	Symbol	IMM		1639212						
ANR	1639870	Symbol	i		1639212						
ANR	1639871	Symbol	SLJIT_SUCCESS		1639212						
ANR	1639872	Symbol	SLJIT_S2		1639212						
ANR	1639873	Symbol	SLJIT_S0		1639212						
ANR	1639874	Symbol	SLJIT_S1		1639212						
ANR	1639875	Symbol	args		1639212						
ANR	1639876	Symbol	fscratches		1639212						
ANR	1639877	Symbol	compiler -> saveds		1639212						
ANR	1639878	Symbol	compiler -> local_size		1639212						
ANR	1639879	Symbol	fsaveds		1639212						
ANR	1639880	Symbol	ADDI		1639212						
ANR	1639881	Symbol	SLJIT_FIRST_SAVED_REG		1639212						
ANR	1639882	Symbol	TMP_ZERO		1639212						
ANR	1639883	Symbol	MFLR		1639212						
ANR	1639884	Symbol	STACK_STORE		1639212						
ANR	1639885	Function	sljit_set_context	638:0:20057:20656							
ANR	1639886	FunctionDef	"sljit_set_context (struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size)"		1639885	0					
ANR	1639887	CompoundStatement		641:0:20274:20656	1639885	0					
ANR	1639888	ExpressionStatement	CHECK_ERROR ( )	642:1:20277:20290	1639885	0	True				
ANR	1639889	CallExpression	CHECK_ERROR ( )		1639885	0					
ANR	1639890	Callee	CHECK_ERROR		1639885	0					
ANR	1639891	Identifier	CHECK_ERROR		1639885	0					
ANR	1639892	ArgumentList			1639885	1					
ANR	1639893	ExpressionStatement	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"	643:1:20293:20400	1639885	1	True				
ANR	1639894	CallExpression	"CHECK ( check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size ) )"		1639885	0					
ANR	1639895	Callee	CHECK		1639885	0					
ANR	1639896	Identifier	CHECK		1639885	0					
ANR	1639897	ArgumentList	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1639885	1					
ANR	1639898	Argument	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1639885	0					
ANR	1639899	CallExpression	"check_sljit_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1639885	0					
ANR	1639900	Callee	check_sljit_set_context		1639885	0					
ANR	1639901	Identifier	check_sljit_set_context		1639885	0					
ANR	1639902	ArgumentList	compiler		1639885	1					
ANR	1639903	Argument	compiler		1639885	0					
ANR	1639904	Identifier	compiler		1639885	0					
ANR	1639905	Argument	options		1639885	1					
ANR	1639906	Identifier	options		1639885	0					
ANR	1639907	Argument	args		1639885	2					
ANR	1639908	Identifier	args		1639885	0					
ANR	1639909	Argument	scratches		1639885	3					
ANR	1639910	Identifier	scratches		1639885	0					
ANR	1639911	Argument	saveds		1639885	4					
ANR	1639912	Identifier	saveds		1639885	0					
ANR	1639913	Argument	fscratches		1639885	5					
ANR	1639914	Identifier	fscratches		1639885	0					
ANR	1639915	Argument	fsaveds		1639885	6					
ANR	1639916	Identifier	fsaveds		1639885	0					
ANR	1639917	Argument	local_size		1639885	7					
ANR	1639918	Identifier	local_size		1639885	0					
ANR	1639919	ExpressionStatement	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"	644:1:20403:20495	1639885	2	True				
ANR	1639920	CallExpression	"set_set_context ( compiler , options , args , scratches , saveds , fscratches , fsaveds , local_size )"		1639885	0					
ANR	1639921	Callee	set_set_context		1639885	0					
ANR	1639922	Identifier	set_set_context		1639885	0					
ANR	1639923	ArgumentList	compiler		1639885	1					
ANR	1639924	Argument	compiler		1639885	0					
ANR	1639925	Identifier	compiler		1639885	0					
ANR	1639926	Argument	options		1639885	1					
ANR	1639927	Identifier	options		1639885	0					
ANR	1639928	Argument	args		1639885	2					
ANR	1639929	Identifier	args		1639885	0					
ANR	1639930	Argument	scratches		1639885	3					
ANR	1639931	Identifier	scratches		1639885	0					
ANR	1639932	Argument	saveds		1639885	4					
ANR	1639933	Identifier	saveds		1639885	0					
ANR	1639934	Argument	fscratches		1639885	5					
ANR	1639935	Identifier	fscratches		1639885	0					
ANR	1639936	Argument	fsaveds		1639885	6					
ANR	1639937	Identifier	fsaveds		1639885	0					
ANR	1639938	Argument	local_size		1639885	7					
ANR	1639939	Identifier	local_size		1639885	0					
ANR	1639940	ExpressionStatement	"local_size += GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 ) + SLJIT_LOCALS_OFFSET"	646:1:20499:20581	1639885	3	True				
ANR	1639941	AssignmentExpression	"local_size += GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 ) + SLJIT_LOCALS_OFFSET"		1639885	0		+=			
ANR	1639942	Identifier	local_size		1639885	0					
ANR	1639943	AdditiveExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 ) + SLJIT_LOCALS_OFFSET"		1639885	1		+			
ANR	1639944	CallExpression	"GET_SAVED_REGISTERS_SIZE ( scratches , saveds , 1 )"		1639885	0					
ANR	1639945	Callee	GET_SAVED_REGISTERS_SIZE		1639885	0					
ANR	1639946	Identifier	GET_SAVED_REGISTERS_SIZE		1639885	0					
ANR	1639947	ArgumentList	scratches		1639885	1					
ANR	1639948	Argument	scratches		1639885	0					
ANR	1639949	Identifier	scratches		1639885	0					
ANR	1639950	Argument	saveds		1639885	1					
ANR	1639951	Identifier	saveds		1639885	0					
ANR	1639952	Argument	1		1639885	2					
ANR	1639953	PrimaryExpression	1		1639885	0					
ANR	1639954	Identifier	SLJIT_LOCALS_OFFSET		1639885	1					
ANR	1639955	ExpressionStatement	compiler -> local_size = ( local_size + 15 ) & ~0xf	647:1:20584:20631	1639885	4	True				
ANR	1639956	AssignmentExpression	compiler -> local_size = ( local_size + 15 ) & ~0xf		1639885	0		=			
ANR	1639957	PtrMemberAccess	compiler -> local_size		1639885	0					
ANR	1639958	Identifier	compiler		1639885	0					
ANR	1639959	Identifier	local_size		1639885	1					
ANR	1639960	BitAndExpression	( local_size + 15 ) & ~0xf		1639885	1		&			
ANR	1639961	AdditiveExpression	local_size + 15		1639885	0		+			
ANR	1639962	Identifier	local_size		1639885	0					
ANR	1639963	PrimaryExpression	15		1639885	1					
ANR	1639964	Identifier	~0xf		1639885	1					
ANR	1639965	ReturnStatement	return SLJIT_SUCCESS ;	648:1:20634:20654	1639885	5	True				
ANR	1639966	Identifier	SLJIT_SUCCESS		1639885	0					
ANR	1639967	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1639885	1					
ANR	1639968	Identifier	sljit_set_context		1639885	2					
ANR	1639969	ParameterList	"struct sljit_compiler * compiler , sljit_si options , sljit_si args , sljit_si scratches , sljit_si saveds , sljit_si fscratches , sljit_si fsaveds , sljit_si local_size"		1639885	3					
ANR	1639970	Parameter	struct sljit_compiler * compiler	638:52:20109:20139	1639885	0	True				
ANR	1639971	ParameterType	struct sljit_compiler *		1639885	0					
ANR	1639972	Identifier	compiler		1639885	1					
ANR	1639973	Parameter	sljit_si options	639:1:20143:20158	1639885	1	True				
ANR	1639974	ParameterType	sljit_si		1639885	0					
ANR	1639975	Identifier	options		1639885	1					
ANR	1639976	Parameter	sljit_si args	639:19:20161:20173	1639885	2	True				
ANR	1639977	ParameterType	sljit_si		1639885	0					
ANR	1639978	Identifier	args		1639885	1					
ANR	1639979	Parameter	sljit_si scratches	639:34:20176:20193	1639885	3	True				
ANR	1639980	ParameterType	sljit_si		1639885	0					
ANR	1639981	Identifier	scratches		1639885	1					
ANR	1639982	Parameter	sljit_si saveds	639:54:20196:20210	1639885	4	True				
ANR	1639983	ParameterType	sljit_si		1639885	0					
ANR	1639984	Identifier	saveds		1639885	1					
ANR	1639985	Parameter	sljit_si fscratches	640:1:20214:20232	1639885	5	True				
ANR	1639986	ParameterType	sljit_si		1639885	0					
ANR	1639987	Identifier	fscratches		1639885	1					
ANR	1639988	Parameter	sljit_si fsaveds	640:22:20235:20250	1639885	6	True				
ANR	1639989	ParameterType	sljit_si		1639885	0					
ANR	1639990	Identifier	fsaveds		1639885	1					
ANR	1639991	Parameter	sljit_si local_size	640:40:20253:20271	1639885	7	True				
ANR	1639992	ParameterType	sljit_si		1639885	0					
ANR	1639993	Identifier	local_size		1639885	1					
ANR	1639994	CFGEntryNode	ENTRY		1639885		True				
ANR	1639995	CFGExitNode	EXIT		1639885		True				
ANR	1639996	Symbol	GET_SAVED_REGISTERS_SIZE		1639885						
ANR	1639997	Symbol	local_size		1639885						
ANR	1639998	Symbol	scratches		1639885						
ANR	1639999	Symbol	saveds		1639885						
ANR	1640000	Symbol	check_sljit_set_context		1639885						
ANR	1640001	Symbol	SLJIT_SUCCESS		1639885						
ANR	1640002	Symbol	* compiler		1639885						
ANR	1640003	Symbol	args		1639885						
ANR	1640004	Symbol	fscratches		1639885						
ANR	1640005	Symbol	compiler -> local_size		1639885						
ANR	1640006	Symbol	fsaveds		1639885						
ANR	1640007	Symbol	SLJIT_LOCALS_OFFSET		1639885						
ANR	1640008	Symbol	options		1639885						
ANR	1640009	Symbol	~0xf		1639885						
ANR	1640010	Symbol	compiler		1639885						
ANR	1640011	Function	sljit_emit_return	651:0:20659:22294							
ANR	1640012	FunctionDef	"sljit_emit_return (struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw)"		1640011	0					
ANR	1640013	CompoundStatement		652:0:20786:22294	1640011	0					
ANR	1640014	IdentifierDeclStatement	"sljit_si i , tmp , offs ;"	653:1:20789:20810	1640011	0	True				
ANR	1640015	IdentifierDecl	i		1640011	0					
ANR	1640016	IdentifierDeclType	sljit_si		1640011	0					
ANR	1640017	Identifier	i		1640011	1					
ANR	1640018	IdentifierDecl	tmp		1640011	1					
ANR	1640019	IdentifierDeclType	sljit_si		1640011	0					
ANR	1640020	Identifier	tmp		1640011	1					
ANR	1640021	IdentifierDecl	offs		1640011	2					
ANR	1640022	IdentifierDeclType	sljit_si		1640011	0					
ANR	1640023	Identifier	offs		1640011	1					
ANR	1640024	ExpressionStatement	CHECK_ERROR ( )	655:1:20814:20827	1640011	1	True				
ANR	1640025	CallExpression	CHECK_ERROR ( )		1640011	0					
ANR	1640026	Callee	CHECK_ERROR		1640011	0					
ANR	1640027	Identifier	CHECK_ERROR		1640011	0					
ANR	1640028	ArgumentList			1640011	1					
ANR	1640029	ExpressionStatement	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"	656:1:20830:20885	1640011	2	True				
ANR	1640030	CallExpression	"CHECK ( check_sljit_emit_return ( compiler , op , src , srcw ) )"		1640011	0					
ANR	1640031	Callee	CHECK		1640011	0					
ANR	1640032	Identifier	CHECK		1640011	0					
ANR	1640033	ArgumentList	"check_sljit_emit_return ( compiler , op , src , srcw )"		1640011	1					
ANR	1640034	Argument	"check_sljit_emit_return ( compiler , op , src , srcw )"		1640011	0					
ANR	1640035	CallExpression	"check_sljit_emit_return ( compiler , op , src , srcw )"		1640011	0					
ANR	1640036	Callee	check_sljit_emit_return		1640011	0					
ANR	1640037	Identifier	check_sljit_emit_return		1640011	0					
ANR	1640038	ArgumentList	compiler		1640011	1					
ANR	1640039	Argument	compiler		1640011	0					
ANR	1640040	Identifier	compiler		1640011	0					
ANR	1640041	Argument	op		1640011	1					
ANR	1640042	Identifier	op		1640011	0					
ANR	1640043	Argument	src		1640011	2					
ANR	1640044	Identifier	src		1640011	0					
ANR	1640045	Argument	srcw		1640011	3					
ANR	1640046	Identifier	srcw		1640011	0					
ANR	1640047	ExpressionStatement	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"	658:1:20889:20945	1640011	3	True				
ANR	1640048	CallExpression	"FAIL_IF ( emit_mov_before_return ( compiler , op , src , srcw ) )"		1640011	0					
ANR	1640049	Callee	FAIL_IF		1640011	0					
ANR	1640050	Identifier	FAIL_IF		1640011	0					
ANR	1640051	ArgumentList	"emit_mov_before_return ( compiler , op , src , srcw )"		1640011	1					
ANR	1640052	Argument	"emit_mov_before_return ( compiler , op , src , srcw )"		1640011	0					
ANR	1640053	CallExpression	"emit_mov_before_return ( compiler , op , src , srcw )"		1640011	0					
ANR	1640054	Callee	emit_mov_before_return		1640011	0					
ANR	1640055	Identifier	emit_mov_before_return		1640011	0					
ANR	1640056	ArgumentList	compiler		1640011	1					
ANR	1640057	Argument	compiler		1640011	0					
ANR	1640058	Identifier	compiler		1640011	0					
ANR	1640059	Argument	op		1640011	1					
ANR	1640060	Identifier	op		1640011	0					
ANR	1640061	Argument	src		1640011	2					
ANR	1640062	Identifier	src		1640011	0					
ANR	1640063	Argument	srcw		1640011	3					
ANR	1640064	Identifier	srcw		1640011	0					
ANR	1640065	IfStatement	if ( compiler -> local_size <= SIMM_MAX )		1640011	4					
ANR	1640066	Condition	compiler -> local_size <= SIMM_MAX	660:5:20953:20984	1640011	0	True				
ANR	1640067	RelationalExpression	compiler -> local_size <= SIMM_MAX		1640011	0		<=			
ANR	1640068	PtrMemberAccess	compiler -> local_size		1640011	0					
ANR	1640069	Identifier	compiler		1640011	0					
ANR	1640070	Identifier	local_size		1640011	1					
ANR	1640071	Identifier	SIMM_MAX		1640011	1					
ANR	1640072	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDI | D ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( compiler -> local_size ) ) )"	661:2:20989:21079	1640011	1	True				
ANR	1640073	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDI | D ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( compiler -> local_size ) ) )"		1640011	0					
ANR	1640074	Callee	FAIL_IF		1640011	0					
ANR	1640075	Identifier	FAIL_IF		1640011	0					
ANR	1640076	ArgumentList	"push_inst ( compiler , ADDI | D ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( compiler -> local_size ) )"		1640011	1					
ANR	1640077	Argument	"push_inst ( compiler , ADDI | D ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( compiler -> local_size ) )"		1640011	0					
ANR	1640078	CallExpression	"push_inst ( compiler , ADDI | D ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( compiler -> local_size ) )"		1640011	0					
ANR	1640079	Callee	push_inst		1640011	0					
ANR	1640080	Identifier	push_inst		1640011	0					
ANR	1640081	ArgumentList	compiler		1640011	1					
ANR	1640082	Argument	compiler		1640011	0					
ANR	1640083	Identifier	compiler		1640011	0					
ANR	1640084	Argument	ADDI | D ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( compiler -> local_size )		1640011	1					
ANR	1640085	InclusiveOrExpression	ADDI | D ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( compiler -> local_size )		1640011	0		|			
ANR	1640086	Identifier	ADDI		1640011	0					
ANR	1640087	InclusiveOrExpression	D ( SLJIT_SP ) | A ( SLJIT_SP ) | IMM ( compiler -> local_size )		1640011	1		|			
ANR	1640088	CallExpression	D ( SLJIT_SP )		1640011	0					
ANR	1640089	Callee	D		1640011	0					
ANR	1640090	Identifier	D		1640011	0					
ANR	1640091	ArgumentList	SLJIT_SP		1640011	1					
ANR	1640092	Argument	SLJIT_SP		1640011	0					
ANR	1640093	Identifier	SLJIT_SP		1640011	0					
ANR	1640094	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( compiler -> local_size )		1640011	1		|			
ANR	1640095	CallExpression	A ( SLJIT_SP )		1640011	0					
ANR	1640096	Callee	A		1640011	0					
ANR	1640097	Identifier	A		1640011	0					
ANR	1640098	ArgumentList	SLJIT_SP		1640011	1					
ANR	1640099	Argument	SLJIT_SP		1640011	0					
ANR	1640100	Identifier	SLJIT_SP		1640011	0					
ANR	1640101	CallExpression	IMM ( compiler -> local_size )		1640011	1					
ANR	1640102	Callee	IMM		1640011	0					
ANR	1640103	Identifier	IMM		1640011	0					
ANR	1640104	ArgumentList	compiler -> local_size		1640011	1					
ANR	1640105	Argument	compiler -> local_size		1640011	0					
ANR	1640106	PtrMemberAccess	compiler -> local_size		1640011	0					
ANR	1640107	Identifier	compiler		1640011	0					
ANR	1640108	Identifier	local_size		1640011	1					
ANR	1640109	ElseStatement	else		1640011	0					
ANR	1640110	CompoundStatement		11:6:300:300	1640011	0					
ANR	1640111	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , 0 , compiler -> local_size ) )"	663:2:21091:21149	1640011	0	True				
ANR	1640112	CallExpression	"FAIL_IF ( load_immediate ( compiler , 0 , compiler -> local_size ) )"		1640011	0					
ANR	1640113	Callee	FAIL_IF		1640011	0					
ANR	1640114	Identifier	FAIL_IF		1640011	0					
ANR	1640115	ArgumentList	"load_immediate ( compiler , 0 , compiler -> local_size )"		1640011	1					
ANR	1640116	Argument	"load_immediate ( compiler , 0 , compiler -> local_size )"		1640011	0					
ANR	1640117	CallExpression	"load_immediate ( compiler , 0 , compiler -> local_size )"		1640011	0					
ANR	1640118	Callee	load_immediate		1640011	0					
ANR	1640119	Identifier	load_immediate		1640011	0					
ANR	1640120	ArgumentList	compiler		1640011	1					
ANR	1640121	Argument	compiler		1640011	0					
ANR	1640122	Identifier	compiler		1640011	0					
ANR	1640123	Argument	0		1640011	1					
ANR	1640124	PrimaryExpression	0		1640011	0					
ANR	1640125	Argument	compiler -> local_size		1640011	2					
ANR	1640126	PtrMemberAccess	compiler -> local_size		1640011	0					
ANR	1640127	Identifier	compiler		1640011	0					
ANR	1640128	Identifier	local_size		1640011	1					
ANR	1640129	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADD | D ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) ) )"	664:2:21153:21221	1640011	1	True				
ANR	1640130	CallExpression	"FAIL_IF ( push_inst ( compiler , ADD | D ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) ) )"		1640011	0					
ANR	1640131	Callee	FAIL_IF		1640011	0					
ANR	1640132	Identifier	FAIL_IF		1640011	0					
ANR	1640133	ArgumentList	"push_inst ( compiler , ADD | D ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) )"		1640011	1					
ANR	1640134	Argument	"push_inst ( compiler , ADD | D ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) )"		1640011	0					
ANR	1640135	CallExpression	"push_inst ( compiler , ADD | D ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 ) )"		1640011	0					
ANR	1640136	Callee	push_inst		1640011	0					
ANR	1640137	Identifier	push_inst		1640011	0					
ANR	1640138	ArgumentList	compiler		1640011	1					
ANR	1640139	Argument	compiler		1640011	0					
ANR	1640140	Identifier	compiler		1640011	0					
ANR	1640141	Argument	ADD | D ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 )		1640011	1					
ANR	1640142	InclusiveOrExpression	ADD | D ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 )		1640011	0		|			
ANR	1640143	Identifier	ADD		1640011	0					
ANR	1640144	InclusiveOrExpression	D ( SLJIT_SP ) | A ( SLJIT_SP ) | B ( 0 )		1640011	1		|			
ANR	1640145	CallExpression	D ( SLJIT_SP )		1640011	0					
ANR	1640146	Callee	D		1640011	0					
ANR	1640147	Identifier	D		1640011	0					
ANR	1640148	ArgumentList	SLJIT_SP		1640011	1					
ANR	1640149	Argument	SLJIT_SP		1640011	0					
ANR	1640150	Identifier	SLJIT_SP		1640011	0					
ANR	1640151	InclusiveOrExpression	A ( SLJIT_SP ) | B ( 0 )		1640011	1		|			
ANR	1640152	CallExpression	A ( SLJIT_SP )		1640011	0					
ANR	1640153	Callee	A		1640011	0					
ANR	1640154	Identifier	A		1640011	0					
ANR	1640155	ArgumentList	SLJIT_SP		1640011	1					
ANR	1640156	Argument	SLJIT_SP		1640011	0					
ANR	1640157	Identifier	SLJIT_SP		1640011	0					
ANR	1640158	CallExpression	B ( 0 )		1640011	1					
ANR	1640159	Callee	B		1640011	0					
ANR	1640160	Identifier	B		1640011	0					
ANR	1640161	ArgumentList	0		1640011	1					
ANR	1640162	Argument	0		1640011	0					
ANR	1640163	PrimaryExpression	0		1640011	0					
ANR	1640164	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | D ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) ) )"	668:1:21295:21384	1640011	5	True				
ANR	1640165	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | D ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) ) )"		1640011	0					
ANR	1640166	Callee	FAIL_IF		1640011	0					
ANR	1640167	Identifier	FAIL_IF		1640011	0					
ANR	1640168	ArgumentList	"push_inst ( compiler , STACK_LOAD | D ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) )"		1640011	1					
ANR	1640169	Argument	"push_inst ( compiler , STACK_LOAD | D ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) )"		1640011	0					
ANR	1640170	CallExpression	"push_inst ( compiler , STACK_LOAD | D ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) ) )"		1640011	0					
ANR	1640171	Callee	push_inst		1640011	0					
ANR	1640172	Identifier	push_inst		1640011	0					
ANR	1640173	ArgumentList	compiler		1640011	1					
ANR	1640174	Argument	compiler		1640011	0					
ANR	1640175	Identifier	compiler		1640011	0					
ANR	1640176	Argument	STACK_LOAD | D ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) )		1640011	1					
ANR	1640177	InclusiveOrExpression	STACK_LOAD | D ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) )		1640011	0		|			
ANR	1640178	Identifier	STACK_LOAD		1640011	0					
ANR	1640179	InclusiveOrExpression	D ( 0 ) | A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) )		1640011	1		|			
ANR	1640180	CallExpression	D ( 0 )		1640011	0					
ANR	1640181	Callee	D		1640011	0					
ANR	1640182	Identifier	D		1640011	0					
ANR	1640183	ArgumentList	0		1640011	1					
ANR	1640184	Argument	0		1640011	0					
ANR	1640185	PrimaryExpression	0		1640011	0					
ANR	1640186	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( 2 * sizeof ( sljit_sw ) )		1640011	1		|			
ANR	1640187	CallExpression	A ( SLJIT_SP )		1640011	0					
ANR	1640188	Callee	A		1640011	0					
ANR	1640189	Identifier	A		1640011	0					
ANR	1640190	ArgumentList	SLJIT_SP		1640011	1					
ANR	1640191	Argument	SLJIT_SP		1640011	0					
ANR	1640192	Identifier	SLJIT_SP		1640011	0					
ANR	1640193	CallExpression	IMM ( 2 * sizeof ( sljit_sw ) )		1640011	1					
ANR	1640194	Callee	IMM		1640011	0					
ANR	1640195	Identifier	IMM		1640011	0					
ANR	1640196	ArgumentList	2 * sizeof ( sljit_sw )		1640011	1					
ANR	1640197	Argument	2 * sizeof ( sljit_sw )		1640011	0					
ANR	1640198	MultiplicativeExpression	2 * sizeof ( sljit_sw )		1640011	0		*			
ANR	1640199	PrimaryExpression	2		1640011	0					
ANR	1640200	SizeofExpression	sizeof ( sljit_sw )		1640011	1					
ANR	1640201	Sizeof	sizeof		1640011	0					
ANR	1640202	SizeofOperand	sljit_sw		1640011	1					
ANR	1640203	ExpressionStatement	"offs = - ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"	673:1:21489:21573	1640011	6	True				
ANR	1640204	AssignmentExpression	"offs = - ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1640011	0		=			
ANR	1640205	Identifier	offs		1640011	0					
ANR	1640206	UnaryOperationExpression	"- ( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1640011	1					
ANR	1640207	UnaryOperator	-		1640011	0					
ANR	1640208	CastExpression	"( sljit_si ) GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1640011	1					
ANR	1640209	CastTarget	sljit_si		1640011	0					
ANR	1640210	CallExpression	"GET_SAVED_REGISTERS_SIZE ( compiler -> scratches , compiler -> saveds , 1 )"		1640011	1					
ANR	1640211	Callee	GET_SAVED_REGISTERS_SIZE		1640011	0					
ANR	1640212	Identifier	GET_SAVED_REGISTERS_SIZE		1640011	0					
ANR	1640213	ArgumentList	compiler -> scratches		1640011	1					
ANR	1640214	Argument	compiler -> scratches		1640011	0					
ANR	1640215	PtrMemberAccess	compiler -> scratches		1640011	0					
ANR	1640216	Identifier	compiler		1640011	0					
ANR	1640217	Identifier	scratches		1640011	1					
ANR	1640218	Argument	compiler -> saveds		1640011	1					
ANR	1640219	PtrMemberAccess	compiler -> saveds		1640011	0					
ANR	1640220	Identifier	compiler		1640011	0					
ANR	1640221	Identifier	saveds		1640011	1					
ANR	1640222	Argument	1		1640011	2					
ANR	1640223	PrimaryExpression	1		1640011	0					
ANR	1640224	ExpressionStatement	tmp = compiler -> scratches	675:1:21577:21602	1640011	7	True				
ANR	1640225	AssignmentExpression	tmp = compiler -> scratches		1640011	0		=			
ANR	1640226	Identifier	tmp		1640011	0					
ANR	1640227	PtrMemberAccess	compiler -> scratches		1640011	1					
ANR	1640228	Identifier	compiler		1640011	0					
ANR	1640229	Identifier	scratches		1640011	1					
ANR	1640230	ForStatement	for ( i = SLJIT_FIRST_SAVED_REG ; i <= tmp ; i ++ )		1640011	8					
ANR	1640231	ForInit	i = SLJIT_FIRST_SAVED_REG ;	676:6:21610:21635	1640011	0	True				
ANR	1640232	AssignmentExpression	i = SLJIT_FIRST_SAVED_REG		1640011	0		=			
ANR	1640233	Identifier	i		1640011	0					
ANR	1640234	Identifier	SLJIT_FIRST_SAVED_REG		1640011	1					
ANR	1640235	Condition	i <= tmp	676:33:21637:21644	1640011	1	True				
ANR	1640236	RelationalExpression	i <= tmp		1640011	0		<=			
ANR	1640237	Identifier	i		1640011	0					
ANR	1640238	Identifier	tmp		1640011	1					
ANR	1640239	PostIncDecOperationExpression	i ++	676:43:21647:21649	1640011	2	True				
ANR	1640240	Identifier	i		1640011	0					
ANR	1640241	IncDec	++		1640011	1					
ANR	1640242	CompoundStatement		25:48:865:865	1640011	3					
ANR	1640243	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"	677:2:21656:21729	1640011	0	True				
ANR	1640244	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"		1640011	0					
ANR	1640245	Callee	FAIL_IF		1640011	0					
ANR	1640246	Identifier	FAIL_IF		1640011	0					
ANR	1640247	ArgumentList	"push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1640011	1					
ANR	1640248	Argument	"push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1640011	0					
ANR	1640249	CallExpression	"push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1640011	0					
ANR	1640250	Callee	push_inst		1640011	0					
ANR	1640251	Identifier	push_inst		1640011	0					
ANR	1640252	ArgumentList	compiler		1640011	1					
ANR	1640253	Argument	compiler		1640011	0					
ANR	1640254	Identifier	compiler		1640011	0					
ANR	1640255	Argument	STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1640011	1					
ANR	1640256	InclusiveOrExpression	STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1640011	0		|			
ANR	1640257	Identifier	STACK_LOAD		1640011	0					
ANR	1640258	InclusiveOrExpression	D ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1640011	1		|			
ANR	1640259	CallExpression	D ( i )		1640011	0					
ANR	1640260	Callee	D		1640011	0					
ANR	1640261	Identifier	D		1640011	0					
ANR	1640262	ArgumentList	i		1640011	1					
ANR	1640263	Argument	i		1640011	0					
ANR	1640264	Identifier	i		1640011	0					
ANR	1640265	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( offs )		1640011	1		|			
ANR	1640266	CallExpression	A ( SLJIT_SP )		1640011	0					
ANR	1640267	Callee	A		1640011	0					
ANR	1640268	Identifier	A		1640011	0					
ANR	1640269	ArgumentList	SLJIT_SP		1640011	1					
ANR	1640270	Argument	SLJIT_SP		1640011	0					
ANR	1640271	Identifier	SLJIT_SP		1640011	0					
ANR	1640272	CallExpression	IMM ( offs )		1640011	1					
ANR	1640273	Callee	IMM		1640011	0					
ANR	1640274	Identifier	IMM		1640011	0					
ANR	1640275	ArgumentList	offs		1640011	1					
ANR	1640276	Argument	offs		1640011	0					
ANR	1640277	Identifier	offs		1640011	0					
ANR	1640278	ExpressionStatement	offs += ( sljit_si ) ( sizeof ( sljit_sw ) )	678:2:21733:21769	1640011	1	True				
ANR	1640279	AssignmentExpression	offs += ( sljit_si ) ( sizeof ( sljit_sw ) )		1640011	0		+=			
ANR	1640280	Identifier	offs		1640011	0					
ANR	1640281	CastExpression	( sljit_si ) ( sizeof ( sljit_sw ) )		1640011	1					
ANR	1640282	CastTarget	sljit_si		1640011	0					
ANR	1640283	SizeofExpression	sizeof ( sljit_sw )		1640011	1					
ANR	1640284	Sizeof	sizeof		1640011	0					
ANR	1640285	SizeofOperand	sljit_sw		1640011	1					
ANR	1640286	ExpressionStatement	tmp = compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG	681:1:21776:21892	1640011	9	True				
ANR	1640287	AssignmentExpression	tmp = compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG		1640011	0		=			
ANR	1640288	Identifier	tmp		1640011	0					
ANR	1640289	ConditionalExpression	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS ? ( SLJIT_S0 + 1 - compiler -> saveds ) : SLJIT_FIRST_SAVED_REG		1640011	1					
ANR	1640290	Condition	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1640011	0					
ANR	1640291	RelationalExpression	compiler -> saveds < SLJIT_NUMBER_OF_SAVED_REGISTERS		1640011	0		<			
ANR	1640292	PtrMemberAccess	compiler -> saveds		1640011	0					
ANR	1640293	Identifier	compiler		1640011	0					
ANR	1640294	Identifier	saveds		1640011	1					
ANR	1640295	Identifier	SLJIT_NUMBER_OF_SAVED_REGISTERS		1640011	1					
ANR	1640296	AdditiveExpression	SLJIT_S0 + 1 - compiler -> saveds		1640011	1		+			
ANR	1640297	Identifier	SLJIT_S0		1640011	0					
ANR	1640298	AdditiveExpression	1 - compiler -> saveds		1640011	1		-			
ANR	1640299	PrimaryExpression	1		1640011	0					
ANR	1640300	PtrMemberAccess	compiler -> saveds		1640011	1					
ANR	1640301	Identifier	compiler		1640011	0					
ANR	1640302	Identifier	saveds		1640011	1					
ANR	1640303	Identifier	SLJIT_FIRST_SAVED_REG		1640011	2					
ANR	1640304	ForStatement	for ( i = tmp ; i <= SLJIT_S0 ; i ++ )		1640011	10					
ANR	1640305	ForInit	i = tmp ;	682:6:21900:21907	1640011	0	True				
ANR	1640306	AssignmentExpression	i = tmp		1640011	0		=			
ANR	1640307	Identifier	i		1640011	0					
ANR	1640308	Identifier	tmp		1640011	1					
ANR	1640309	Condition	i <= SLJIT_S0	682:15:21909:21921	1640011	1	True				
ANR	1640310	RelationalExpression	i <= SLJIT_S0		1640011	0		<=			
ANR	1640311	Identifier	i		1640011	0					
ANR	1640312	Identifier	SLJIT_S0		1640011	1					
ANR	1640313	PostIncDecOperationExpression	i ++	682:30:21924:21926	1640011	2	True				
ANR	1640314	Identifier	i		1640011	0					
ANR	1640315	IncDec	++		1640011	1					
ANR	1640316	CompoundStatement		31:35:1142:1142	1640011	3					
ANR	1640317	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"	683:2:21933:22006	1640011	0	True				
ANR	1640318	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"		1640011	0					
ANR	1640319	Callee	FAIL_IF		1640011	0					
ANR	1640320	Identifier	FAIL_IF		1640011	0					
ANR	1640321	ArgumentList	"push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1640011	1					
ANR	1640322	Argument	"push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1640011	0					
ANR	1640323	CallExpression	"push_inst ( compiler , STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1640011	0					
ANR	1640324	Callee	push_inst		1640011	0					
ANR	1640325	Identifier	push_inst		1640011	0					
ANR	1640326	ArgumentList	compiler		1640011	1					
ANR	1640327	Argument	compiler		1640011	0					
ANR	1640328	Identifier	compiler		1640011	0					
ANR	1640329	Argument	STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1640011	1					
ANR	1640330	InclusiveOrExpression	STACK_LOAD | D ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1640011	0		|			
ANR	1640331	Identifier	STACK_LOAD		1640011	0					
ANR	1640332	InclusiveOrExpression	D ( i ) | A ( SLJIT_SP ) | IMM ( offs )		1640011	1		|			
ANR	1640333	CallExpression	D ( i )		1640011	0					
ANR	1640334	Callee	D		1640011	0					
ANR	1640335	Identifier	D		1640011	0					
ANR	1640336	ArgumentList	i		1640011	1					
ANR	1640337	Argument	i		1640011	0					
ANR	1640338	Identifier	i		1640011	0					
ANR	1640339	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( offs )		1640011	1		|			
ANR	1640340	CallExpression	A ( SLJIT_SP )		1640011	0					
ANR	1640341	Callee	A		1640011	0					
ANR	1640342	Identifier	A		1640011	0					
ANR	1640343	ArgumentList	SLJIT_SP		1640011	1					
ANR	1640344	Argument	SLJIT_SP		1640011	0					
ANR	1640345	Identifier	SLJIT_SP		1640011	0					
ANR	1640346	CallExpression	IMM ( offs )		1640011	1					
ANR	1640347	Callee	IMM		1640011	0					
ANR	1640348	Identifier	IMM		1640011	0					
ANR	1640349	ArgumentList	offs		1640011	1					
ANR	1640350	Argument	offs		1640011	0					
ANR	1640351	Identifier	offs		1640011	0					
ANR	1640352	ExpressionStatement	offs += ( sljit_si ) ( sizeof ( sljit_sw ) )	684:2:22010:22046	1640011	1	True				
ANR	1640353	AssignmentExpression	offs += ( sljit_si ) ( sizeof ( sljit_sw ) )		1640011	0		+=			
ANR	1640354	Identifier	offs		1640011	0					
ANR	1640355	CastExpression	( sljit_si ) ( sizeof ( sljit_sw ) )		1640011	1					
ANR	1640356	CastTarget	sljit_si		1640011	0					
ANR	1640357	SizeofExpression	sizeof ( sljit_sw )		1640011	1					
ANR	1640358	Sizeof	sizeof		1640011	0					
ANR	1640359	SizeofOperand	sljit_sw		1640011	1					
ANR	1640360	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | D ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"	687:1:22053:22133	1640011	11	True				
ANR	1640361	CallExpression	"FAIL_IF ( push_inst ( compiler , STACK_LOAD | D ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) ) )"		1640011	0					
ANR	1640362	Callee	FAIL_IF		1640011	0					
ANR	1640363	Identifier	FAIL_IF		1640011	0					
ANR	1640364	ArgumentList	"push_inst ( compiler , STACK_LOAD | D ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1640011	1					
ANR	1640365	Argument	"push_inst ( compiler , STACK_LOAD | D ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1640011	0					
ANR	1640366	CallExpression	"push_inst ( compiler , STACK_LOAD | D ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs ) )"		1640011	0					
ANR	1640367	Callee	push_inst		1640011	0					
ANR	1640368	Identifier	push_inst		1640011	0					
ANR	1640369	ArgumentList	compiler		1640011	1					
ANR	1640370	Argument	compiler		1640011	0					
ANR	1640371	Identifier	compiler		1640011	0					
ANR	1640372	Argument	STACK_LOAD | D ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs )		1640011	1					
ANR	1640373	InclusiveOrExpression	STACK_LOAD | D ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs )		1640011	0		|			
ANR	1640374	Identifier	STACK_LOAD		1640011	0					
ANR	1640375	InclusiveOrExpression	D ( TMP_ZERO ) | A ( SLJIT_SP ) | IMM ( offs )		1640011	1		|			
ANR	1640376	CallExpression	D ( TMP_ZERO )		1640011	0					
ANR	1640377	Callee	D		1640011	0					
ANR	1640378	Identifier	D		1640011	0					
ANR	1640379	ArgumentList	TMP_ZERO		1640011	1					
ANR	1640380	Argument	TMP_ZERO		1640011	0					
ANR	1640381	Identifier	TMP_ZERO		1640011	0					
ANR	1640382	InclusiveOrExpression	A ( SLJIT_SP ) | IMM ( offs )		1640011	1		|			
ANR	1640383	CallExpression	A ( SLJIT_SP )		1640011	0					
ANR	1640384	Callee	A		1640011	0					
ANR	1640385	Identifier	A		1640011	0					
ANR	1640386	ArgumentList	SLJIT_SP		1640011	1					
ANR	1640387	Argument	SLJIT_SP		1640011	0					
ANR	1640388	Identifier	SLJIT_SP		1640011	0					
ANR	1640389	CallExpression	IMM ( offs )		1640011	1					
ANR	1640390	Callee	IMM		1640011	0					
ANR	1640391	Identifier	IMM		1640011	0					
ANR	1640392	ArgumentList	offs		1640011	1					
ANR	1640393	Argument	offs		1640011	0					
ANR	1640394	Identifier	offs		1640011	0					
ANR	1640395	ExpressionStatement	SLJIT_ASSERT ( offs == - ( sljit_sw ) ( sizeof ( sljit_sw ) ) )	688:1:22136:22187	1640011	12	True				
ANR	1640396	CallExpression	SLJIT_ASSERT ( offs == - ( sljit_sw ) ( sizeof ( sljit_sw ) ) )		1640011	0					
ANR	1640397	Callee	SLJIT_ASSERT		1640011	0					
ANR	1640398	Identifier	SLJIT_ASSERT		1640011	0					
ANR	1640399	ArgumentList	offs == - ( sljit_sw ) ( sizeof ( sljit_sw ) )		1640011	1					
ANR	1640400	Argument	offs == - ( sljit_sw ) ( sizeof ( sljit_sw ) )		1640011	0					
ANR	1640401	EqualityExpression	offs == - ( sljit_sw ) ( sizeof ( sljit_sw ) )		1640011	0		==			
ANR	1640402	Identifier	offs		1640011	0					
ANR	1640403	UnaryOperationExpression	- ( sljit_sw ) ( sizeof ( sljit_sw ) )		1640011	1					
ANR	1640404	UnaryOperator	-		1640011	0					
ANR	1640405	CastExpression	( sljit_sw ) ( sizeof ( sljit_sw ) )		1640011	1					
ANR	1640406	CastTarget	sljit_sw		1640011	0					
ANR	1640407	SizeofExpression	sizeof ( sljit_sw )		1640011	1					
ANR	1640408	Sizeof	sizeof		1640011	0					
ANR	1640409	SizeofOperand	sljit_sw		1640011	1					
ANR	1640410	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MTLR | S ( 0 ) ) )"	690:1:22191:22232	1640011	13	True				
ANR	1640411	CallExpression	"FAIL_IF ( push_inst ( compiler , MTLR | S ( 0 ) ) )"		1640011	0					
ANR	1640412	Callee	FAIL_IF		1640011	0					
ANR	1640413	Identifier	FAIL_IF		1640011	0					
ANR	1640414	ArgumentList	"push_inst ( compiler , MTLR | S ( 0 ) )"		1640011	1					
ANR	1640415	Argument	"push_inst ( compiler , MTLR | S ( 0 ) )"		1640011	0					
ANR	1640416	CallExpression	"push_inst ( compiler , MTLR | S ( 0 ) )"		1640011	0					
ANR	1640417	Callee	push_inst		1640011	0					
ANR	1640418	Identifier	push_inst		1640011	0					
ANR	1640419	ArgumentList	compiler		1640011	1					
ANR	1640420	Argument	compiler		1640011	0					
ANR	1640421	Identifier	compiler		1640011	0					
ANR	1640422	Argument	MTLR | S ( 0 )		1640011	1					
ANR	1640423	InclusiveOrExpression	MTLR | S ( 0 )		1640011	0		|			
ANR	1640424	Identifier	MTLR		1640011	0					
ANR	1640425	CallExpression	S ( 0 )		1640011	1					
ANR	1640426	Callee	S		1640011	0					
ANR	1640427	Identifier	S		1640011	0					
ANR	1640428	ArgumentList	0		1640011	1					
ANR	1640429	Argument	0		1640011	0					
ANR	1640430	PrimaryExpression	0		1640011	0					
ANR	1640431	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , BLR ) )"	691:1:22235:22268	1640011	14	True				
ANR	1640432	CallExpression	"FAIL_IF ( push_inst ( compiler , BLR ) )"		1640011	0					
ANR	1640433	Callee	FAIL_IF		1640011	0					
ANR	1640434	Identifier	FAIL_IF		1640011	0					
ANR	1640435	ArgumentList	"push_inst ( compiler , BLR )"		1640011	1					
ANR	1640436	Argument	"push_inst ( compiler , BLR )"		1640011	0					
ANR	1640437	CallExpression	"push_inst ( compiler , BLR )"		1640011	0					
ANR	1640438	Callee	push_inst		1640011	0					
ANR	1640439	Identifier	push_inst		1640011	0					
ANR	1640440	ArgumentList	compiler		1640011	1					
ANR	1640441	Argument	compiler		1640011	0					
ANR	1640442	Identifier	compiler		1640011	0					
ANR	1640443	Argument	BLR		1640011	1					
ANR	1640444	Identifier	BLR		1640011	0					
ANR	1640445	ReturnStatement	return SLJIT_SUCCESS ;	693:1:22272:22292	1640011	15	True				
ANR	1640446	Identifier	SLJIT_SUCCESS		1640011	0					
ANR	1640447	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1640011	1					
ANR	1640448	Identifier	sljit_emit_return		1640011	2					
ANR	1640449	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src , sljit_sw srcw"		1640011	3					
ANR	1640450	Parameter	struct sljit_compiler * compiler	651:52:20711:20741	1640011	0	True				
ANR	1640451	ParameterType	struct sljit_compiler *		1640011	0					
ANR	1640452	Identifier	compiler		1640011	1					
ANR	1640453	Parameter	sljit_si op	651:85:20744:20754	1640011	1	True				
ANR	1640454	ParameterType	sljit_si		1640011	0					
ANR	1640455	Identifier	op		1640011	1					
ANR	1640456	Parameter	sljit_si src	651:98:20757:20768	1640011	2	True				
ANR	1640457	ParameterType	sljit_si		1640011	0					
ANR	1640458	Identifier	src		1640011	1					
ANR	1640459	Parameter	sljit_sw srcw	651:112:20771:20783	1640011	3	True				
ANR	1640460	ParameterType	sljit_sw		1640011	0					
ANR	1640461	Identifier	srcw		1640011	1					
ANR	1640462	CFGEntryNode	ENTRY		1640011		True				
ANR	1640463	CFGExitNode	EXIT		1640011		True				
ANR	1640464	Symbol	A		1640011						
ANR	1640465	Symbol	ADD		1640011						
ANR	1640466	Symbol	B		1640011						
ANR	1640467	Symbol	compiler -> scratches		1640011						
ANR	1640468	Symbol	D		1640011						
ANR	1640469	Symbol	MTLR		1640011						
ANR	1640470	Symbol	BLR		1640011						
ANR	1640471	Symbol	* compiler		1640011						
ANR	1640472	Symbol	SIMM_MAX		1640011						
ANR	1640473	Symbol	SLJIT_NUMBER_OF_SAVED_REGISTERS		1640011						
ANR	1640474	Symbol	SLJIT_SP		1640011						
ANR	1640475	Symbol	offs		1640011						
ANR	1640476	Symbol	S		1640011						
ANR	1640477	Symbol	load_immediate		1640011						
ANR	1640478	Symbol	check_sljit_emit_return		1640011						
ANR	1640479	Symbol	tmp		1640011						
ANR	1640480	Symbol	STACK_LOAD		1640011						
ANR	1640481	Symbol	compiler		1640011						
ANR	1640482	Symbol	GET_SAVED_REGISTERS_SIZE		1640011						
ANR	1640483	Symbol	op		1640011						
ANR	1640484	Symbol	push_inst		1640011						
ANR	1640485	Symbol	src		1640011						
ANR	1640486	Symbol	srcw		1640011						
ANR	1640487	Symbol	IMM		1640011						
ANR	1640488	Symbol	i		1640011						
ANR	1640489	Symbol	SLJIT_SUCCESS		1640011						
ANR	1640490	Symbol	SLJIT_S0		1640011						
ANR	1640491	Symbol	compiler -> local_size		1640011						
ANR	1640492	Symbol	compiler -> saveds		1640011						
ANR	1640493	Symbol	ADDI		1640011						
ANR	1640494	Symbol	SLJIT_FIRST_SAVED_REG		1640011						
ANR	1640495	Symbol	emit_mov_before_return		1640011						
ANR	1640496	Symbol	TMP_ZERO		1640011						
ANR	1640497	DeclStmt									
ANR	1640498	Decl							SLJIT_CONST sljit_ins	SLJIT_CONST sljit_ins [ 64 + 8 ]	data_transfer_insts
ANR	1640499	Function	getput_arg_fast	844:0:27545:28947							
ANR	1640500	FunctionDef	"getput_arg_fast (struct sljit_compiler * compiler , sljit_si inp_flags , sljit_si reg , sljit_si arg , sljit_sw argw)"		1640499	0					
ANR	1640501	CompoundStatement		845:0:27673:28947	1640499	0					
ANR	1640502	IdentifierDeclStatement	sljit_ins inst ;	846:1:27676:27690	1640499	0	True				
ANR	1640503	IdentifierDecl	inst		1640499	0					
ANR	1640504	IdentifierDeclType	sljit_ins		1640499	0					
ANR	1640505	Identifier	inst		1640499	1					
ANR	1640506	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( A ( 0 ) == 0 , a0_must_be_0 )"	849:1:27741:27786	1640499	1	True				
ANR	1640507	CallExpression	"SLJIT_COMPILE_ASSERT ( A ( 0 ) == 0 , a0_must_be_0 )"		1640499	0					
ANR	1640508	Callee	SLJIT_COMPILE_ASSERT		1640499	0					
ANR	1640509	Identifier	SLJIT_COMPILE_ASSERT		1640499	0					
ANR	1640510	ArgumentList	A ( 0 ) == 0		1640499	1					
ANR	1640511	Argument	A ( 0 ) == 0		1640499	0					
ANR	1640512	EqualityExpression	A ( 0 ) == 0		1640499	0		==			
ANR	1640513	CallExpression	A ( 0 )		1640499	0					
ANR	1640514	Callee	A		1640499	0					
ANR	1640515	Identifier	A		1640499	0					
ANR	1640516	ArgumentList	0		1640499	1					
ANR	1640517	Argument	0		1640499	0					
ANR	1640518	PrimaryExpression	0		1640499	0					
ANR	1640519	PrimaryExpression	0		1640499	1					
ANR	1640520	Argument	a0_must_be_0		1640499	1					
ANR	1640521	Identifier	a0_must_be_0		1640499	0					
ANR	1640522	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	850:1:27789:27818	1640499	2	True				
ANR	1640523	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1640499	0					
ANR	1640524	Callee	SLJIT_ASSERT		1640499	0					
ANR	1640525	Identifier	SLJIT_ASSERT		1640499	0					
ANR	1640526	ArgumentList	arg & SLJIT_MEM		1640499	1					
ANR	1640527	Argument	arg & SLJIT_MEM		1640499	0					
ANR	1640528	BitAndExpression	arg & SLJIT_MEM		1640499	0		&			
ANR	1640529	Identifier	arg		1640499	0					
ANR	1640530	Identifier	SLJIT_MEM		1640499	1					
ANR	1640531	IfStatement	if ( arg & OFFS_REG_MASK )		1640499	3					
ANR	1640532	Condition	arg & OFFS_REG_MASK	852:5:27826:27844	1640499	0	True				
ANR	1640533	BitAndExpression	arg & OFFS_REG_MASK		1640499	0		&			
ANR	1640534	Identifier	arg		1640499	0					
ANR	1640535	Identifier	OFFS_REG_MASK		1640499	1					
ANR	1640536	CompoundStatement		8:26:173:173	1640499	1					
ANR	1640537	IfStatement	if ( argw & 0x3 )		1640499	0					
ANR	1640538	Condition	argw & 0x3	853:6:27855:27864	1640499	0	True				
ANR	1640539	BitAndExpression	argw & 0x3		1640499	0		&			
ANR	1640540	Identifier	argw		1640499	0					
ANR	1640541	PrimaryExpression	0x3		1640499	1					
ANR	1640542	ReturnStatement	return 0 ;	854:3:27870:27878	1640499	1	True				
ANR	1640543	PrimaryExpression	0		1640499	0					
ANR	1640544	IfStatement	if ( inp_flags & ARG_TEST )		1640499	1					
ANR	1640545	Condition	inp_flags & ARG_TEST	855:6:27886:27905	1640499	0	True				
ANR	1640546	BitAndExpression	inp_flags & ARG_TEST		1640499	0		&			
ANR	1640547	Identifier	inp_flags		1640499	0					
ANR	1640548	Identifier	ARG_TEST		1640499	1					
ANR	1640549	ReturnStatement	return 1 ;	856:3:27911:27919	1640499	1	True				
ANR	1640550	PrimaryExpression	1		1640499	0					
ANR	1640551	ExpressionStatement	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]	858:2:27924:27984	1640499	2	True				
ANR	1640552	AssignmentExpression	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1640499	0		=			
ANR	1640553	Identifier	inst		1640499	0					
ANR	1640554	ArrayIndexing	data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1640499	1					
ANR	1640555	Identifier	data_transfer_insts		1640499	0					
ANR	1640556	BitAndExpression	( inp_flags | INDEXED ) & MEM_MASK		1640499	1		&			
ANR	1640557	InclusiveOrExpression	inp_flags | INDEXED		1640499	0		|			
ANR	1640558	Identifier	inp_flags		1640499	0					
ANR	1640559	Identifier	INDEXED		1640499	1					
ANR	1640560	Identifier	MEM_MASK		1640499	1					
ANR	1640561	ExpressionStatement	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )	859:2:27988:28038	1640499	3	True				
ANR	1640562	CallExpression	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )		1640499	0					
ANR	1640563	Callee	SLJIT_ASSERT		1640499	0					
ANR	1640564	Identifier	SLJIT_ASSERT		1640499	0					
ANR	1640565	ArgumentList	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1640499	1					
ANR	1640566	Argument	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1640499	0					
ANR	1640567	UnaryOperationExpression	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1640499	0					
ANR	1640568	UnaryOperator	!		1640499	0					
ANR	1640569	BitAndExpression	inst & ( INT_ALIGNED | UPDATE_REQ )		1640499	1		&			
ANR	1640570	Identifier	inst		1640499	0					
ANR	1640571	InclusiveOrExpression	INT_ALIGNED | UPDATE_REQ		1640499	1		|			
ANR	1640572	Identifier	INT_ALIGNED		1640499	0					
ANR	1640573	Identifier	UPDATE_REQ		1640499	1					
ANR	1640574	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( OFFS_REG ( arg ) ) ) )"	860:2:28042:28150	1640499	4	True				
ANR	1640575	CallExpression	"FAIL_IF ( push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( OFFS_REG ( arg ) ) ) )"		1640499	0					
ANR	1640576	Callee	FAIL_IF		1640499	0					
ANR	1640577	Identifier	FAIL_IF		1640499	0					
ANR	1640578	ArgumentList	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( OFFS_REG ( arg ) ) )"		1640499	1					
ANR	1640579	Argument	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( OFFS_REG ( arg ) ) )"		1640499	0					
ANR	1640580	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( OFFS_REG ( arg ) ) )"		1640499	0					
ANR	1640581	Callee	push_inst		1640499	0					
ANR	1640582	Identifier	push_inst		1640499	0					
ANR	1640583	ArgumentList	compiler		1640499	1					
ANR	1640584	Argument	compiler		1640499	0					
ANR	1640585	Identifier	compiler		1640499	0					
ANR	1640586	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( OFFS_REG ( arg ) )"		1640499	1					
ANR	1640587	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( OFFS_REG ( arg ) )"		1640499	0		|			
ANR	1640588	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1640499	0					
ANR	1640589	Callee	INST_CODE_AND_DST		1640499	0					
ANR	1640590	Identifier	INST_CODE_AND_DST		1640499	0					
ANR	1640591	ArgumentList	inst		1640499	1					
ANR	1640592	Argument	inst		1640499	0					
ANR	1640593	Identifier	inst		1640499	0					
ANR	1640594	Argument	inp_flags		1640499	1					
ANR	1640595	Identifier	inp_flags		1640499	0					
ANR	1640596	Argument	reg		1640499	2					
ANR	1640597	Identifier	reg		1640499	0					
ANR	1640598	InclusiveOrExpression	A ( arg & REG_MASK ) | B ( OFFS_REG ( arg ) )		1640499	1		|			
ANR	1640599	CallExpression	A ( arg & REG_MASK )		1640499	0					
ANR	1640600	Callee	A		1640499	0					
ANR	1640601	Identifier	A		1640499	0					
ANR	1640602	ArgumentList	arg & REG_MASK		1640499	1					
ANR	1640603	Argument	arg & REG_MASK		1640499	0					
ANR	1640604	BitAndExpression	arg & REG_MASK		1640499	0		&			
ANR	1640605	Identifier	arg		1640499	0					
ANR	1640606	Identifier	REG_MASK		1640499	1					
ANR	1640607	CallExpression	B ( OFFS_REG ( arg ) )		1640499	1					
ANR	1640608	Callee	B		1640499	0					
ANR	1640609	Identifier	B		1640499	0					
ANR	1640610	ArgumentList	OFFS_REG ( arg )		1640499	1					
ANR	1640611	Argument	OFFS_REG ( arg )		1640499	0					
ANR	1640612	CallExpression	OFFS_REG ( arg )		1640499	0					
ANR	1640613	Callee	OFFS_REG		1640499	0					
ANR	1640614	Identifier	OFFS_REG		1640499	0					
ANR	1640615	ArgumentList	arg		1640499	1					
ANR	1640616	Argument	arg		1640499	0					
ANR	1640617	Identifier	arg		1640499	0					
ANR	1640618	ReturnStatement	return - 1 ;	861:2:28154:28163	1640499	5	True				
ANR	1640619	UnaryOperationExpression	- 1		1640499	0					
ANR	1640620	UnaryOperator	-		1640499	0					
ANR	1640621	PrimaryExpression	1		1640499	1					
ANR	1640622	IfStatement	if ( SLJIT_UNLIKELY ( ! ( arg & REG_MASK ) ) )		1640499	4					
ANR	1640623	Condition	SLJIT_UNLIKELY ( ! ( arg & REG_MASK ) )	864:5:28174:28206	1640499	0	True				
ANR	1640624	CallExpression	SLJIT_UNLIKELY ( ! ( arg & REG_MASK ) )		1640499	0					
ANR	1640625	Callee	SLJIT_UNLIKELY		1640499	0					
ANR	1640626	Identifier	SLJIT_UNLIKELY		1640499	0					
ANR	1640627	ArgumentList	! ( arg & REG_MASK )		1640499	1					
ANR	1640628	Argument	! ( arg & REG_MASK )		1640499	0					
ANR	1640629	UnaryOperationExpression	! ( arg & REG_MASK )		1640499	0					
ANR	1640630	UnaryOperator	!		1640499	0					
ANR	1640631	BitAndExpression	arg & REG_MASK		1640499	1		&			
ANR	1640632	Identifier	arg		1640499	0					
ANR	1640633	Identifier	REG_MASK		1640499	1					
ANR	1640634	ExpressionStatement	inp_flags &= ~WRITE_BACK	865:2:28211:28235	1640499	1	True				
ANR	1640635	AssignmentExpression	inp_flags &= ~WRITE_BACK		1640499	0		&=			
ANR	1640636	Identifier	inp_flags		1640499	0					
ANR	1640637	Identifier	~WRITE_BACK		1640499	1					
ANR	1640638	ExpressionStatement	inst = data_transfer_insts [ inp_flags & MEM_MASK ]	868:1:28296:28344	1640499	5	True				
ANR	1640639	AssignmentExpression	inst = data_transfer_insts [ inp_flags & MEM_MASK ]		1640499	0		=			
ANR	1640640	Identifier	inst		1640499	0					
ANR	1640641	ArrayIndexing	data_transfer_insts [ inp_flags & MEM_MASK ]		1640499	1					
ANR	1640642	Identifier	data_transfer_insts		1640499	0					
ANR	1640643	BitAndExpression	inp_flags & MEM_MASK		1640499	1		&			
ANR	1640644	Identifier	inp_flags		1640499	0					
ANR	1640645	Identifier	MEM_MASK		1640499	1					
ANR	1640646	ExpressionStatement	SLJIT_ASSERT ( ( arg & REG_MASK ) || ! ( inst & UPDATE_REQ ) )	869:1:28347:28401	1640499	6	True				
ANR	1640647	CallExpression	SLJIT_ASSERT ( ( arg & REG_MASK ) || ! ( inst & UPDATE_REQ ) )		1640499	0					
ANR	1640648	Callee	SLJIT_ASSERT		1640499	0					
ANR	1640649	Identifier	SLJIT_ASSERT		1640499	0					
ANR	1640650	ArgumentList	( arg & REG_MASK ) || ! ( inst & UPDATE_REQ )		1640499	1					
ANR	1640651	Argument	( arg & REG_MASK ) || ! ( inst & UPDATE_REQ )		1640499	0					
ANR	1640652	OrExpression	( arg & REG_MASK ) || ! ( inst & UPDATE_REQ )		1640499	0		||			
ANR	1640653	BitAndExpression	arg & REG_MASK		1640499	0		&			
ANR	1640654	Identifier	arg		1640499	0					
ANR	1640655	Identifier	REG_MASK		1640499	1					
ANR	1640656	UnaryOperationExpression	! ( inst & UPDATE_REQ )		1640499	1					
ANR	1640657	UnaryOperator	!		1640499	0					
ANR	1640658	BitAndExpression	inst & UPDATE_REQ		1640499	1		&			
ANR	1640659	Identifier	inst		1640499	0					
ANR	1640660	Identifier	UPDATE_REQ		1640499	1					
ANR	1640661	IfStatement	if ( argw > SIMM_MAX || argw < SIMM_MIN || ( ( inst & INT_ALIGNED ) && ( argw & 0x3 ) ) || ( inst & UPDATE_REQ ) )		1640499	7					
ANR	1640662	Condition	argw > SIMM_MAX || argw < SIMM_MIN || ( ( inst & INT_ALIGNED ) && ( argw & 0x3 ) ) || ( inst & UPDATE_REQ )	871:5:28409:28507	1640499	0	True				
ANR	1640663	OrExpression	argw > SIMM_MAX || argw < SIMM_MIN || ( ( inst & INT_ALIGNED ) && ( argw & 0x3 ) ) || ( inst & UPDATE_REQ )		1640499	0		||			
ANR	1640664	RelationalExpression	argw > SIMM_MAX		1640499	0		>			
ANR	1640665	Identifier	argw		1640499	0					
ANR	1640666	Identifier	SIMM_MAX		1640499	1					
ANR	1640667	OrExpression	argw < SIMM_MIN || ( ( inst & INT_ALIGNED ) && ( argw & 0x3 ) ) || ( inst & UPDATE_REQ )		1640499	1		||			
ANR	1640668	RelationalExpression	argw < SIMM_MIN		1640499	0		<			
ANR	1640669	Identifier	argw		1640499	0					
ANR	1640670	Identifier	SIMM_MIN		1640499	1					
ANR	1640671	OrExpression	( ( inst & INT_ALIGNED ) && ( argw & 0x3 ) ) || ( inst & UPDATE_REQ )		1640499	1		||			
ANR	1640672	AndExpression	( inst & INT_ALIGNED ) && ( argw & 0x3 )		1640499	0		&&			
ANR	1640673	BitAndExpression	inst & INT_ALIGNED		1640499	0		&			
ANR	1640674	Identifier	inst		1640499	0					
ANR	1640675	Identifier	INT_ALIGNED		1640499	1					
ANR	1640676	BitAndExpression	argw & 0x3		1640499	1		&			
ANR	1640677	Identifier	argw		1640499	0					
ANR	1640678	PrimaryExpression	0x3		1640499	1					
ANR	1640679	BitAndExpression	inst & UPDATE_REQ		1640499	1		&			
ANR	1640680	Identifier	inst		1640499	0					
ANR	1640681	Identifier	UPDATE_REQ		1640499	1					
ANR	1640682	ReturnStatement	return 0 ;	872:2:28512:28520	1640499	1	True				
ANR	1640683	PrimaryExpression	0		1640499	0					
ANR	1640684	IfStatement	if ( inp_flags & ARG_TEST )		1640499	8					
ANR	1640685	Condition	inp_flags & ARG_TEST	873:5:28527:28546	1640499	0	True				
ANR	1640686	BitAndExpression	inp_flags & ARG_TEST		1640499	0		&			
ANR	1640687	Identifier	inp_flags		1640499	0					
ANR	1640688	Identifier	ARG_TEST		1640499	1					
ANR	1640689	ReturnStatement	return 1 ;	874:2:28551:28559	1640499	1	True				
ANR	1640690	PrimaryExpression	1		1640499	0					
ANR	1640691	IfStatement	if ( argw > SIMM_MAX || argw < SIMM_MIN )		1640499	9					
ANR	1640692	Condition	argw > SIMM_MAX || argw < SIMM_MIN	878:5:28631:28664	1640499	0	True				
ANR	1640693	OrExpression	argw > SIMM_MAX || argw < SIMM_MIN		1640499	0		||			
ANR	1640694	RelationalExpression	argw > SIMM_MAX		1640499	0		>			
ANR	1640695	Identifier	argw		1640499	0					
ANR	1640696	Identifier	SIMM_MAX		1640499	1					
ANR	1640697	RelationalExpression	argw < SIMM_MIN		1640499	1		<			
ANR	1640698	Identifier	argw		1640499	0					
ANR	1640699	Identifier	SIMM_MIN		1640499	1					
ANR	1640700	ReturnStatement	return 0 ;	879:2:28669:28677	1640499	1	True				
ANR	1640701	PrimaryExpression	0		1640499	0					
ANR	1640702	IfStatement	if ( inp_flags & ARG_TEST )		1640499	10					
ANR	1640703	Condition	inp_flags & ARG_TEST	880:5:28684:28703	1640499	0	True				
ANR	1640704	BitAndExpression	inp_flags & ARG_TEST		1640499	0		&			
ANR	1640705	Identifier	inp_flags		1640499	0					
ANR	1640706	Identifier	ARG_TEST		1640499	1					
ANR	1640707	ReturnStatement	return 1 ;	881:2:28708:28716	1640499	1	True				
ANR	1640708	PrimaryExpression	1		1640499	0					
ANR	1640709	ExpressionStatement	inst = data_transfer_insts [ inp_flags & MEM_MASK ]	883:1:28720:28768	1640499	11	True				
ANR	1640710	AssignmentExpression	inst = data_transfer_insts [ inp_flags & MEM_MASK ]		1640499	0		=			
ANR	1640711	Identifier	inst		1640499	0					
ANR	1640712	ArrayIndexing	data_transfer_insts [ inp_flags & MEM_MASK ]		1640499	1					
ANR	1640713	Identifier	data_transfer_insts		1640499	0					
ANR	1640714	BitAndExpression	inp_flags & MEM_MASK		1640499	1		&			
ANR	1640715	Identifier	inp_flags		1640499	0					
ANR	1640716	Identifier	MEM_MASK		1640499	1					
ANR	1640717	ExpressionStatement	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )	884:1:28771:28821	1640499	12	True				
ANR	1640718	CallExpression	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )		1640499	0					
ANR	1640719	Callee	SLJIT_ASSERT		1640499	0					
ANR	1640720	Identifier	SLJIT_ASSERT		1640499	0					
ANR	1640721	ArgumentList	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1640499	1					
ANR	1640722	Argument	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1640499	0					
ANR	1640723	UnaryOperationExpression	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1640499	0					
ANR	1640724	UnaryOperator	!		1640499	0					
ANR	1640725	BitAndExpression	inst & ( INT_ALIGNED | UPDATE_REQ )		1640499	1		&			
ANR	1640726	Identifier	inst		1640499	0					
ANR	1640727	InclusiveOrExpression	INT_ALIGNED | UPDATE_REQ		1640499	1		|			
ANR	1640728	Identifier	INT_ALIGNED		1640499	0					
ANR	1640729	Identifier	UPDATE_REQ		1640499	1					
ANR	1640730	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | IMM ( argw ) ) )"	887:1:28832:28933	1640499	13	True				
ANR	1640731	CallExpression	"FAIL_IF ( push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | IMM ( argw ) ) )"		1640499	0					
ANR	1640732	Callee	FAIL_IF		1640499	0					
ANR	1640733	Identifier	FAIL_IF		1640499	0					
ANR	1640734	ArgumentList	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | IMM ( argw ) )"		1640499	1					
ANR	1640735	Argument	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | IMM ( argw ) )"		1640499	0					
ANR	1640736	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | IMM ( argw ) )"		1640499	0					
ANR	1640737	Callee	push_inst		1640499	0					
ANR	1640738	Identifier	push_inst		1640499	0					
ANR	1640739	ArgumentList	compiler		1640499	1					
ANR	1640740	Argument	compiler		1640499	0					
ANR	1640741	Identifier	compiler		1640499	0					
ANR	1640742	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | IMM ( argw )"		1640499	1					
ANR	1640743	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | IMM ( argw )"		1640499	0		|			
ANR	1640744	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1640499	0					
ANR	1640745	Callee	INST_CODE_AND_DST		1640499	0					
ANR	1640746	Identifier	INST_CODE_AND_DST		1640499	0					
ANR	1640747	ArgumentList	inst		1640499	1					
ANR	1640748	Argument	inst		1640499	0					
ANR	1640749	Identifier	inst		1640499	0					
ANR	1640750	Argument	inp_flags		1640499	1					
ANR	1640751	Identifier	inp_flags		1640499	0					
ANR	1640752	Argument	reg		1640499	2					
ANR	1640753	Identifier	reg		1640499	0					
ANR	1640754	InclusiveOrExpression	A ( arg & REG_MASK ) | IMM ( argw )		1640499	1		|			
ANR	1640755	CallExpression	A ( arg & REG_MASK )		1640499	0					
ANR	1640756	Callee	A		1640499	0					
ANR	1640757	Identifier	A		1640499	0					
ANR	1640758	ArgumentList	arg & REG_MASK		1640499	1					
ANR	1640759	Argument	arg & REG_MASK		1640499	0					
ANR	1640760	BitAndExpression	arg & REG_MASK		1640499	0		&			
ANR	1640761	Identifier	arg		1640499	0					
ANR	1640762	Identifier	REG_MASK		1640499	1					
ANR	1640763	CallExpression	IMM ( argw )		1640499	1					
ANR	1640764	Callee	IMM		1640499	0					
ANR	1640765	Identifier	IMM		1640499	0					
ANR	1640766	ArgumentList	argw		1640499	1					
ANR	1640767	Argument	argw		1640499	0					
ANR	1640768	Identifier	argw		1640499	0					
ANR	1640769	ReturnStatement	return - 1 ;	888:1:28936:28945	1640499	14	True				
ANR	1640770	UnaryOperationExpression	- 1		1640499	0					
ANR	1640771	UnaryOperator	-		1640499	0					
ANR	1640772	PrimaryExpression	1		1640499	1					
ANR	1640773	ReturnType	static sljit_si		1640499	1					
ANR	1640774	Identifier	getput_arg_fast		1640499	2					
ANR	1640775	ParameterList	"struct sljit_compiler * compiler , sljit_si inp_flags , sljit_si reg , sljit_si arg , sljit_sw argw"		1640499	3					
ANR	1640776	Parameter	struct sljit_compiler * compiler	844:32:27577:27607	1640499	0	True				
ANR	1640777	ParameterType	struct sljit_compiler *		1640499	0					
ANR	1640778	Identifier	compiler		1640499	1					
ANR	1640779	Parameter	sljit_si inp_flags	844:65:27610:27627	1640499	1	True				
ANR	1640780	ParameterType	sljit_si		1640499	0					
ANR	1640781	Identifier	inp_flags		1640499	1					
ANR	1640782	Parameter	sljit_si reg	844:85:27630:27641	1640499	2	True				
ANR	1640783	ParameterType	sljit_si		1640499	0					
ANR	1640784	Identifier	reg		1640499	1					
ANR	1640785	Parameter	sljit_si arg	844:99:27644:27655	1640499	3	True				
ANR	1640786	ParameterType	sljit_si		1640499	0					
ANR	1640787	Identifier	arg		1640499	1					
ANR	1640788	Parameter	sljit_sw argw	844:113:27658:27670	1640499	4	True				
ANR	1640789	ParameterType	sljit_sw		1640499	0					
ANR	1640790	Identifier	argw		1640499	1					
ANR	1640791	CFGEntryNode	ENTRY		1640499		True				
ANR	1640792	CFGExitNode	EXIT		1640499		True				
ANR	1640793	Symbol	A		1640499						
ANR	1640794	Symbol	B		1640499						
ANR	1640795	Symbol	SLJIT_MEM		1640499						
ANR	1640796	Symbol	inp_flags		1640499						
ANR	1640797	Symbol	* MEM_MASK		1640499						
ANR	1640798	Symbol	argw		1640499						
ANR	1640799	Symbol	SIMM_MAX		1640499						
ANR	1640800	Symbol	ARG_TEST		1640499						
ANR	1640801	Symbol	INDEXED		1640499						
ANR	1640802	Symbol	* inp_flags		1640499						
ANR	1640803	Symbol	UPDATE_REQ		1640499						
ANR	1640804	Symbol	reg		1640499						
ANR	1640805	Symbol	arg		1640499						
ANR	1640806	Symbol	compiler		1640499						
ANR	1640807	Symbol	a0_must_be_0		1640499						
ANR	1640808	Symbol	INST_CODE_AND_DST		1640499						
ANR	1640809	Symbol	SIMM_MIN		1640499						
ANR	1640810	Symbol	push_inst		1640499						
ANR	1640811	Symbol	REG_MASK		1640499						
ANR	1640812	Symbol	* INDEXED		1640499						
ANR	1640813	Symbol	OFFS_REG_MASK		1640499						
ANR	1640814	Symbol	IMM		1640499						
ANR	1640815	Symbol	data_transfer_insts		1640499						
ANR	1640816	Symbol	* data_transfer_insts		1640499						
ANR	1640817	Symbol	~WRITE_BACK		1640499						
ANR	1640818	Symbol	INT_ALIGNED		1640499						
ANR	1640819	Symbol	inst		1640499						
ANR	1640820	Symbol	MEM_MASK		1640499						
ANR	1640821	Symbol	OFFS_REG		1640499						
ANR	1640822	Symbol	SLJIT_UNLIKELY		1640499						
ANR	1640823	Function	can_cache	894:0:29099:30207							
ANR	1640824	FunctionDef	"can_cache (sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1640823	0					
ANR	1640825	CompoundStatement		895:0:29193:30207	1640823	0					
ANR	1640826	IdentifierDeclStatement	"sljit_sw high_short , next_high_short ;"	896:1:29196:29232	1640823	0	True				
ANR	1640827	IdentifierDecl	high_short		1640823	0					
ANR	1640828	IdentifierDeclType	sljit_sw		1640823	0					
ANR	1640829	Identifier	high_short		1640823	1					
ANR	1640830	IdentifierDecl	next_high_short		1640823	1					
ANR	1640831	IdentifierDeclType	sljit_sw		1640823	0					
ANR	1640832	Identifier	next_high_short		1640823	1					
ANR	1640833	IdentifierDeclStatement	sljit_sw diff ;	898:1:29292:29305	1640823	1	True				
ANR	1640834	IdentifierDecl	diff		1640823	0					
ANR	1640835	IdentifierDeclType	sljit_sw		1640823	0					
ANR	1640836	Identifier	diff		1640823	1					
ANR	1640837	ExpressionStatement	SLJIT_ASSERT ( ( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM ) )	901:1:29316:29373	1640823	2	True				
ANR	1640838	CallExpression	SLJIT_ASSERT ( ( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM ) )		1640823	0					
ANR	1640839	Callee	SLJIT_ASSERT		1640823	0					
ANR	1640840	Identifier	SLJIT_ASSERT		1640823	0					
ANR	1640841	ArgumentList	( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM )		1640823	1					
ANR	1640842	Argument	( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM )		1640823	0					
ANR	1640843	AndExpression	( arg & SLJIT_MEM ) && ( next_arg & SLJIT_MEM )		1640823	0		&&			
ANR	1640844	BitAndExpression	arg & SLJIT_MEM		1640823	0		&			
ANR	1640845	Identifier	arg		1640823	0					
ANR	1640846	Identifier	SLJIT_MEM		1640823	1					
ANR	1640847	BitAndExpression	next_arg & SLJIT_MEM		1640823	1		&			
ANR	1640848	Identifier	next_arg		1640823	0					
ANR	1640849	Identifier	SLJIT_MEM		1640823	1					
ANR	1640850	IfStatement	if ( arg & OFFS_REG_MASK )		1640823	3					
ANR	1640851	Condition	arg & OFFS_REG_MASK	903:5:29381:29399	1640823	0	True				
ANR	1640852	BitAndExpression	arg & OFFS_REG_MASK		1640823	0		&			
ANR	1640853	Identifier	arg		1640823	0					
ANR	1640854	Identifier	OFFS_REG_MASK		1640823	1					
ANR	1640855	ReturnStatement	return ( ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) && ( argw & 0x3 ) == ( next_argw & 0x3 ) ) ;	904:2:29404:29501	1640823	1	True				
ANR	1640856	AndExpression	( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) && ( argw & 0x3 ) == ( next_argw & 0x3 )		1640823	0		&&			
ANR	1640857	EqualityExpression	( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK )		1640823	0		==			
ANR	1640858	BitAndExpression	arg & OFFS_REG_MASK		1640823	0		&			
ANR	1640859	Identifier	arg		1640823	0					
ANR	1640860	Identifier	OFFS_REG_MASK		1640823	1					
ANR	1640861	BitAndExpression	next_arg & OFFS_REG_MASK		1640823	1		&			
ANR	1640862	Identifier	next_arg		1640823	0					
ANR	1640863	Identifier	OFFS_REG_MASK		1640823	1					
ANR	1640864	EqualityExpression	( argw & 0x3 ) == ( next_argw & 0x3 )		1640823	1		==			
ANR	1640865	BitAndExpression	argw & 0x3		1640823	0		&			
ANR	1640866	Identifier	argw		1640823	0					
ANR	1640867	PrimaryExpression	0x3		1640823	1					
ANR	1640868	BitAndExpression	next_argw & 0x3		1640823	1		&			
ANR	1640869	Identifier	next_argw		1640823	0					
ANR	1640870	PrimaryExpression	0x3		1640823	1					
ANR	1640871	IfStatement	if ( next_arg & OFFS_REG_MASK )		1640823	4					
ANR	1640872	Condition	next_arg & OFFS_REG_MASK	906:5:29509:29532	1640823	0	True				
ANR	1640873	BitAndExpression	next_arg & OFFS_REG_MASK		1640823	0		&			
ANR	1640874	Identifier	next_arg		1640823	0					
ANR	1640875	Identifier	OFFS_REG_MASK		1640823	1					
ANR	1640876	ReturnStatement	return 0 ;	907:2:29537:29545	1640823	1	True				
ANR	1640877	PrimaryExpression	0		1640823	0					
ANR	1640878	ExpressionStatement	high_short = ( argw + ( ( argw & 0x8000 ) << 1 ) ) & ~0xffff	910:1:29606:29660	1640823	5	True				
ANR	1640879	AssignmentExpression	high_short = ( argw + ( ( argw & 0x8000 ) << 1 ) ) & ~0xffff		1640823	0		=			
ANR	1640880	Identifier	high_short		1640823	0					
ANR	1640881	BitAndExpression	( argw + ( ( argw & 0x8000 ) << 1 ) ) & ~0xffff		1640823	1		&			
ANR	1640882	AdditiveExpression	argw + ( ( argw & 0x8000 ) << 1 )		1640823	0		+			
ANR	1640883	Identifier	argw		1640823	0					
ANR	1640884	ShiftExpression	( argw & 0x8000 ) << 1		1640823	1		<<			
ANR	1640885	BitAndExpression	argw & 0x8000		1640823	0		&			
ANR	1640886	Identifier	argw		1640823	0					
ANR	1640887	PrimaryExpression	0x8000		1640823	1					
ANR	1640888	PrimaryExpression	1		1640823	1					
ANR	1640889	Identifier	~0xffff		1640823	1					
ANR	1640890	ExpressionStatement	next_high_short = ( next_argw + ( ( next_argw & 0x8000 ) << 1 ) ) & ~0xffff	911:1:29663:29732	1640823	6	True				
ANR	1640891	AssignmentExpression	next_high_short = ( next_argw + ( ( next_argw & 0x8000 ) << 1 ) ) & ~0xffff		1640823	0		=			
ANR	1640892	Identifier	next_high_short		1640823	0					
ANR	1640893	BitAndExpression	( next_argw + ( ( next_argw & 0x8000 ) << 1 ) ) & ~0xffff		1640823	1		&			
ANR	1640894	AdditiveExpression	next_argw + ( ( next_argw & 0x8000 ) << 1 )		1640823	0		+			
ANR	1640895	Identifier	next_argw		1640823	0					
ANR	1640896	ShiftExpression	( next_argw & 0x8000 ) << 1		1640823	1		<<			
ANR	1640897	BitAndExpression	next_argw & 0x8000		1640823	0		&			
ANR	1640898	Identifier	next_argw		1640823	0					
ANR	1640899	PrimaryExpression	0x8000		1640823	1					
ANR	1640900	PrimaryExpression	1		1640823	1					
ANR	1640901	Identifier	~0xffff		1640823	1					
ANR	1640902	ReturnStatement	return high_short == next_high_short ;	912:1:29735:29771	1640823	7	True				
ANR	1640903	EqualityExpression	high_short == next_high_short		1640823	0		==			
ANR	1640904	Identifier	high_short		1640823	0					
ANR	1640905	Identifier	next_high_short		1640823	1					
ANR	1640906	ReturnType	static sljit_si		1640823	1					
ANR	1640907	Identifier	can_cache		1640823	2					
ANR	1640908	ParameterList	"sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1640823	3					
ANR	1640909	Parameter	sljit_si arg	894:26:29125:29136	1640823	0	True				
ANR	1640910	ParameterType	sljit_si		1640823	0					
ANR	1640911	Identifier	arg		1640823	1					
ANR	1640912	Parameter	sljit_sw argw	894:40:29139:29151	1640823	1	True				
ANR	1640913	ParameterType	sljit_sw		1640823	0					
ANR	1640914	Identifier	argw		1640823	1					
ANR	1640915	Parameter	sljit_si next_arg	894:55:29154:29170	1640823	2	True				
ANR	1640916	ParameterType	sljit_si		1640823	0					
ANR	1640917	Identifier	next_arg		1640823	1					
ANR	1640918	Parameter	sljit_sw next_argw	894:74:29173:29190	1640823	3	True				
ANR	1640919	ParameterType	sljit_sw		1640823	0					
ANR	1640920	Identifier	next_argw		1640823	1					
ANR	1640921	CFGEntryNode	ENTRY		1640823		True				
ANR	1640922	CFGExitNode	EXIT		1640823		True				
ANR	1640923	Symbol	next_high_short		1640823						
ANR	1640924	Symbol	next_arg		1640823						
ANR	1640925	Symbol	~0xffff		1640823						
ANR	1640926	Symbol	high_short		1640823						
ANR	1640927	Symbol	SLJIT_MEM		1640823						
ANR	1640928	Symbol	arg		1640823						
ANR	1640929	Symbol	OFFS_REG_MASK		1640823						
ANR	1640930	Symbol	next_argw		1640823						
ANR	1640931	Symbol	diff		1640823						
ANR	1640932	Symbol	argw		1640823						
ANR	1640933	Function	getput_arg	943:0:30625:36776							
ANR	1640934	FunctionDef	"getput_arg (struct sljit_compiler * compiler , sljit_si inp_flags , sljit_si reg , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw)"		1640933	0					
ANR	1640935	CompoundStatement		944:0:30787:36776	1640933	0					
ANR	1640936	IdentifierDeclStatement	sljit_si tmp_r ;	945:1:30790:30804	1640933	0	True				
ANR	1640937	IdentifierDecl	tmp_r		1640933	0					
ANR	1640938	IdentifierDeclType	sljit_si		1640933	0					
ANR	1640939	Identifier	tmp_r		1640933	1					
ANR	1640940	IdentifierDeclStatement	sljit_ins inst ;	946:1:30807:30821	1640933	1	True				
ANR	1640941	IdentifierDecl	inst		1640933	0					
ANR	1640942	IdentifierDeclType	sljit_ins		1640933	0					
ANR	1640943	Identifier	inst		1640933	1					
ANR	1640944	IdentifierDeclStatement	"sljit_sw high_short , next_high_short ;"	947:1:30824:30860	1640933	2	True				
ANR	1640945	IdentifierDecl	high_short		1640933	0					
ANR	1640946	IdentifierDeclType	sljit_sw		1640933	0					
ANR	1640947	Identifier	high_short		1640933	1					
ANR	1640948	IdentifierDecl	next_high_short		1640933	1					
ANR	1640949	IdentifierDeclType	sljit_sw		1640933	0					
ANR	1640950	Identifier	next_high_short		1640933	1					
ANR	1640951	IdentifierDeclStatement	sljit_sw diff ;	949:1:30920:30933	1640933	3	True				
ANR	1640952	IdentifierDecl	diff		1640933	0					
ANR	1640953	IdentifierDeclType	sljit_sw		1640933	0					
ANR	1640954	Identifier	diff		1640933	1					
ANR	1640955	ExpressionStatement	SLJIT_ASSERT ( arg & SLJIT_MEM )	952:1:30944:30973	1640933	4	True				
ANR	1640956	CallExpression	SLJIT_ASSERT ( arg & SLJIT_MEM )		1640933	0					
ANR	1640957	Callee	SLJIT_ASSERT		1640933	0					
ANR	1640958	Identifier	SLJIT_ASSERT		1640933	0					
ANR	1640959	ArgumentList	arg & SLJIT_MEM		1640933	1					
ANR	1640960	Argument	arg & SLJIT_MEM		1640933	0					
ANR	1640961	BitAndExpression	arg & SLJIT_MEM		1640933	0		&			
ANR	1640962	Identifier	arg		1640933	0					
ANR	1640963	Identifier	SLJIT_MEM		1640933	1					
ANR	1640964	ExpressionStatement	tmp_r = ( ( inp_flags & LOAD_DATA ) && ( ( inp_flags ) & MEM_MASK ) <= GPR_REG ) ? reg : TMP_REG1	954:1:30977:31066	1640933	5	True				
ANR	1640965	AssignmentExpression	tmp_r = ( ( inp_flags & LOAD_DATA ) && ( ( inp_flags ) & MEM_MASK ) <= GPR_REG ) ? reg : TMP_REG1		1640933	0		=			
ANR	1640966	Identifier	tmp_r		1640933	0					
ANR	1640967	ConditionalExpression	( ( inp_flags & LOAD_DATA ) && ( ( inp_flags ) & MEM_MASK ) <= GPR_REG ) ? reg : TMP_REG1		1640933	1					
ANR	1640968	Condition	( inp_flags & LOAD_DATA ) && ( ( inp_flags ) & MEM_MASK ) <= GPR_REG		1640933	0					
ANR	1640969	AndExpression	( inp_flags & LOAD_DATA ) && ( ( inp_flags ) & MEM_MASK ) <= GPR_REG		1640933	0		&&			
ANR	1640970	BitAndExpression	inp_flags & LOAD_DATA		1640933	0		&			
ANR	1640971	Identifier	inp_flags		1640933	0					
ANR	1640972	Identifier	LOAD_DATA		1640933	1					
ANR	1640973	RelationalExpression	( ( inp_flags ) & MEM_MASK ) <= GPR_REG		1640933	1		<=			
ANR	1640974	CastExpression	( inp_flags ) & MEM_MASK		1640933	0					
ANR	1640975	CastTarget	inp_flags		1640933	0					
ANR	1640976	UnaryOperationExpression	& MEM_MASK		1640933	1					
ANR	1640977	UnaryOperator	&		1640933	0					
ANR	1640978	Identifier	MEM_MASK		1640933	1					
ANR	1640979	Identifier	GPR_REG		1640933	1					
ANR	1640980	Identifier	reg		1640933	1					
ANR	1640981	Identifier	TMP_REG1		1640933	2					
ANR	1640982	IfStatement	if ( ( arg & REG_MASK ) == tmp_r )		1640933	6					
ANR	1640983	Condition	( arg & REG_MASK ) == tmp_r	956:5:31121:31145	1640933	0	True				
ANR	1640984	EqualityExpression	( arg & REG_MASK ) == tmp_r		1640933	0		==			
ANR	1640985	BitAndExpression	arg & REG_MASK		1640933	0		&			
ANR	1640986	Identifier	arg		1640933	0					
ANR	1640987	Identifier	REG_MASK		1640933	1					
ANR	1640988	Identifier	tmp_r		1640933	1					
ANR	1640989	ExpressionStatement	tmp_r = TMP_REG1	957:2:31150:31166	1640933	1	True				
ANR	1640990	AssignmentExpression	tmp_r = TMP_REG1		1640933	0		=			
ANR	1640991	Identifier	tmp_r		1640933	0					
ANR	1640992	Identifier	TMP_REG1		1640933	1					
ANR	1640993	IfStatement	if ( SLJIT_UNLIKELY ( arg & OFFS_REG_MASK ) )		1640933	7					
ANR	1640994	Condition	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )	959:5:31174:31208	1640933	0	True				
ANR	1640995	CallExpression	SLJIT_UNLIKELY ( arg & OFFS_REG_MASK )		1640933	0					
ANR	1640996	Callee	SLJIT_UNLIKELY		1640933	0					
ANR	1640997	Identifier	SLJIT_UNLIKELY		1640933	0					
ANR	1640998	ArgumentList	arg & OFFS_REG_MASK		1640933	1					
ANR	1640999	Argument	arg & OFFS_REG_MASK		1640933	0					
ANR	1641000	BitAndExpression	arg & OFFS_REG_MASK		1640933	0		&			
ANR	1641001	Identifier	arg		1640933	0					
ANR	1641002	Identifier	OFFS_REG_MASK		1640933	1					
ANR	1641003	CompoundStatement		16:42:423:423	1640933	1					
ANR	1641004	ExpressionStatement	argw &= 0x3	960:2:31215:31226	1640933	0	True				
ANR	1641005	AssignmentExpression	argw &= 0x3		1640933	0		&=			
ANR	1641006	Identifier	argw		1640933	0					
ANR	1641007	PrimaryExpression	0x3		1640933	1					
ANR	1641008	ExpressionStatement	SLJIT_ASSERT ( argw )	962:2:31282:31300	1640933	1	True				
ANR	1641009	CallExpression	SLJIT_ASSERT ( argw )		1640933	0					
ANR	1641010	Callee	SLJIT_ASSERT		1640933	0					
ANR	1641011	Identifier	SLJIT_ASSERT		1640933	0					
ANR	1641012	ArgumentList	argw		1640933	1					
ANR	1641013	Argument	argw		1640933	0					
ANR	1641014	Identifier	argw		1640933	0					
ANR	1641015	IfStatement	if ( ( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg && argw == compiler -> cache_argw )		1640933	2					
ANR	1641016	Condition	( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg && argw == compiler -> cache_argw	964:6:31309:31398	1640933	0	True				
ANR	1641017	AndExpression	( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg && argw == compiler -> cache_argw		1640933	0		&&			
ANR	1641018	EqualityExpression	( SLJIT_MEM | ( arg & OFFS_REG_MASK ) ) == compiler -> cache_arg		1640933	0		==			
ANR	1641019	InclusiveOrExpression	SLJIT_MEM | ( arg & OFFS_REG_MASK )		1640933	0		|			
ANR	1641020	Identifier	SLJIT_MEM		1640933	0					
ANR	1641021	BitAndExpression	arg & OFFS_REG_MASK		1640933	1		&			
ANR	1641022	Identifier	arg		1640933	0					
ANR	1641023	Identifier	OFFS_REG_MASK		1640933	1					
ANR	1641024	PtrMemberAccess	compiler -> cache_arg		1640933	1					
ANR	1641025	Identifier	compiler		1640933	0					
ANR	1641026	Identifier	cache_arg		1640933	1					
ANR	1641027	EqualityExpression	argw == compiler -> cache_argw		1640933	1		==			
ANR	1641028	Identifier	argw		1640933	0					
ANR	1641029	PtrMemberAccess	compiler -> cache_argw		1640933	1					
ANR	1641030	Identifier	compiler		1640933	0					
ANR	1641031	Identifier	cache_argw		1640933	1					
ANR	1641032	ExpressionStatement	tmp_r = TMP_REG3	965:3:31404:31420	1640933	1	True				
ANR	1641033	AssignmentExpression	tmp_r = TMP_REG3		1640933	0		=			
ANR	1641034	Identifier	tmp_r		1640933	0					
ANR	1641035	Identifier	TMP_REG3		1640933	1					
ANR	1641036	ElseStatement	else		1640933	0					
ANR	1641037	CompoundStatement		23:7:641:641	1640933	0					
ANR	1641038	IfStatement	if ( ( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) && argw == ( next_argw & 0x3 ) )		1640933	0					
ANR	1641039	Condition	( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) && argw == ( next_argw & 0x3 )	967:7:31438:31517	1640933	0	True				
ANR	1641040	AndExpression	( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK ) && argw == ( next_argw & 0x3 )		1640933	0		&&			
ANR	1641041	EqualityExpression	( arg & OFFS_REG_MASK ) == ( next_arg & OFFS_REG_MASK )		1640933	0		==			
ANR	1641042	BitAndExpression	arg & OFFS_REG_MASK		1640933	0		&			
ANR	1641043	Identifier	arg		1640933	0					
ANR	1641044	Identifier	OFFS_REG_MASK		1640933	1					
ANR	1641045	BitAndExpression	next_arg & OFFS_REG_MASK		1640933	1		&			
ANR	1641046	Identifier	next_arg		1640933	0					
ANR	1641047	Identifier	OFFS_REG_MASK		1640933	1					
ANR	1641048	EqualityExpression	argw == ( next_argw & 0x3 )		1640933	1		==			
ANR	1641049	Identifier	argw		1640933	0					
ANR	1641050	BitAndExpression	next_argw & 0x3		1640933	1		&			
ANR	1641051	Identifier	next_argw		1640933	0					
ANR	1641052	PrimaryExpression	0x3		1640933	1					
ANR	1641053	CompoundStatement		24:89:732:732	1640933	1					
ANR	1641054	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM | ( arg & OFFS_REG_MASK )	968:4:31526:31581	1640933	0	True				
ANR	1641055	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM | ( arg & OFFS_REG_MASK )		1640933	0		=			
ANR	1641056	PtrMemberAccess	compiler -> cache_arg		1640933	0					
ANR	1641057	Identifier	compiler		1640933	0					
ANR	1641058	Identifier	cache_arg		1640933	1					
ANR	1641059	InclusiveOrExpression	SLJIT_MEM | ( arg & OFFS_REG_MASK )		1640933	1		|			
ANR	1641060	Identifier	SLJIT_MEM		1640933	0					
ANR	1641061	BitAndExpression	arg & OFFS_REG_MASK		1640933	1		&			
ANR	1641062	Identifier	arg		1640933	0					
ANR	1641063	Identifier	OFFS_REG_MASK		1640933	1					
ANR	1641064	ExpressionStatement	compiler -> cache_argw = argw	969:4:31587:31614	1640933	1	True				
ANR	1641065	AssignmentExpression	compiler -> cache_argw = argw		1640933	0		=			
ANR	1641066	PtrMemberAccess	compiler -> cache_argw		1640933	0					
ANR	1641067	Identifier	compiler		1640933	0					
ANR	1641068	Identifier	cache_argw		1640933	1					
ANR	1641069	Identifier	argw		1640933	1					
ANR	1641070	ExpressionStatement	tmp_r = TMP_REG3	970:4:31620:31636	1640933	2	True				
ANR	1641071	AssignmentExpression	tmp_r = TMP_REG3		1640933	0		=			
ANR	1641072	Identifier	tmp_r		1640933	0					
ANR	1641073	Identifier	TMP_REG3		1640933	1					
ANR	1641074	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , RLWINM | S ( OFFS_REG ( arg ) ) | A ( tmp_r ) | ( argw << 11 ) | ( ( 31 - argw ) << 1 ) ) )"	973:3:31703:31805	1640933	1	True				
ANR	1641075	CallExpression	"FAIL_IF ( push_inst ( compiler , RLWINM | S ( OFFS_REG ( arg ) ) | A ( tmp_r ) | ( argw << 11 ) | ( ( 31 - argw ) << 1 ) ) )"		1640933	0					
ANR	1641076	Callee	FAIL_IF		1640933	0					
ANR	1641077	Identifier	FAIL_IF		1640933	0					
ANR	1641078	ArgumentList	"push_inst ( compiler , RLWINM | S ( OFFS_REG ( arg ) ) | A ( tmp_r ) | ( argw << 11 ) | ( ( 31 - argw ) << 1 ) )"		1640933	1					
ANR	1641079	Argument	"push_inst ( compiler , RLWINM | S ( OFFS_REG ( arg ) ) | A ( tmp_r ) | ( argw << 11 ) | ( ( 31 - argw ) << 1 ) )"		1640933	0					
ANR	1641080	CallExpression	"push_inst ( compiler , RLWINM | S ( OFFS_REG ( arg ) ) | A ( tmp_r ) | ( argw << 11 ) | ( ( 31 - argw ) << 1 ) )"		1640933	0					
ANR	1641081	Callee	push_inst		1640933	0					
ANR	1641082	Identifier	push_inst		1640933	0					
ANR	1641083	ArgumentList	compiler		1640933	1					
ANR	1641084	Argument	compiler		1640933	0					
ANR	1641085	Identifier	compiler		1640933	0					
ANR	1641086	Argument	RLWINM | S ( OFFS_REG ( arg ) ) | A ( tmp_r ) | ( argw << 11 ) | ( ( 31 - argw ) << 1 )		1640933	1					
ANR	1641087	InclusiveOrExpression	RLWINM | S ( OFFS_REG ( arg ) ) | A ( tmp_r ) | ( argw << 11 ) | ( ( 31 - argw ) << 1 )		1640933	0		|			
ANR	1641088	Identifier	RLWINM		1640933	0					
ANR	1641089	InclusiveOrExpression	S ( OFFS_REG ( arg ) ) | A ( tmp_r ) | ( argw << 11 ) | ( ( 31 - argw ) << 1 )		1640933	1		|			
ANR	1641090	CallExpression	S ( OFFS_REG ( arg ) )		1640933	0					
ANR	1641091	Callee	S		1640933	0					
ANR	1641092	Identifier	S		1640933	0					
ANR	1641093	ArgumentList	OFFS_REG ( arg )		1640933	1					
ANR	1641094	Argument	OFFS_REG ( arg )		1640933	0					
ANR	1641095	CallExpression	OFFS_REG ( arg )		1640933	0					
ANR	1641096	Callee	OFFS_REG		1640933	0					
ANR	1641097	Identifier	OFFS_REG		1640933	0					
ANR	1641098	ArgumentList	arg		1640933	1					
ANR	1641099	Argument	arg		1640933	0					
ANR	1641100	Identifier	arg		1640933	0					
ANR	1641101	InclusiveOrExpression	A ( tmp_r ) | ( argw << 11 ) | ( ( 31 - argw ) << 1 )		1640933	1		|			
ANR	1641102	CallExpression	A ( tmp_r )		1640933	0					
ANR	1641103	Callee	A		1640933	0					
ANR	1641104	Identifier	A		1640933	0					
ANR	1641105	ArgumentList	tmp_r		1640933	1					
ANR	1641106	Argument	tmp_r		1640933	0					
ANR	1641107	Identifier	tmp_r		1640933	0					
ANR	1641108	InclusiveOrExpression	( argw << 11 ) | ( ( 31 - argw ) << 1 )		1640933	1		|			
ANR	1641109	ShiftExpression	argw << 11		1640933	0		<<			
ANR	1641110	Identifier	argw		1640933	0					
ANR	1641111	PrimaryExpression	11		1640933	1					
ANR	1641112	ShiftExpression	( 31 - argw ) << 1		1640933	1		<<			
ANR	1641113	AdditiveExpression	31 - argw		1640933	0		-			
ANR	1641114	PrimaryExpression	31		1640933	0					
ANR	1641115	Identifier	argw		1640933	1					
ANR	1641116	PrimaryExpression	1		1640933	1					
ANR	1641117	ExpressionStatement	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]	978:2:31907:31967	1640933	3	True				
ANR	1641118	AssignmentExpression	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1640933	0		=			
ANR	1641119	Identifier	inst		1640933	0					
ANR	1641120	ArrayIndexing	data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1640933	1					
ANR	1641121	Identifier	data_transfer_insts		1640933	0					
ANR	1641122	BitAndExpression	( inp_flags | INDEXED ) & MEM_MASK		1640933	1		&			
ANR	1641123	InclusiveOrExpression	inp_flags | INDEXED		1640933	0		|			
ANR	1641124	Identifier	inp_flags		1640933	0					
ANR	1641125	Identifier	INDEXED		1640933	1					
ANR	1641126	Identifier	MEM_MASK		1640933	1					
ANR	1641127	ExpressionStatement	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )	979:2:31971:32021	1640933	4	True				
ANR	1641128	CallExpression	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )		1640933	0					
ANR	1641129	Callee	SLJIT_ASSERT		1640933	0					
ANR	1641130	Identifier	SLJIT_ASSERT		1640933	0					
ANR	1641131	ArgumentList	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1640933	1					
ANR	1641132	Argument	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1640933	0					
ANR	1641133	UnaryOperationExpression	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1640933	0					
ANR	1641134	UnaryOperator	!		1640933	0					
ANR	1641135	BitAndExpression	inst & ( INT_ALIGNED | UPDATE_REQ )		1640933	1		&			
ANR	1641136	Identifier	inst		1640933	0					
ANR	1641137	InclusiveOrExpression	INT_ALIGNED | UPDATE_REQ		1640933	1		|			
ANR	1641138	Identifier	INT_ALIGNED		1640933	0					
ANR	1641139	Identifier	UPDATE_REQ		1640933	1					
ANR	1641140	ReturnStatement	"return push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( tmp_r ) ) ;"	980:2:32025:32123	1640933	5	True				
ANR	1641141	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( tmp_r ) )"		1640933	0					
ANR	1641142	Callee	push_inst		1640933	0					
ANR	1641143	Identifier	push_inst		1640933	0					
ANR	1641144	ArgumentList	compiler		1640933	1					
ANR	1641145	Argument	compiler		1640933	0					
ANR	1641146	Identifier	compiler		1640933	0					
ANR	1641147	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( tmp_r )"		1640933	1					
ANR	1641148	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( tmp_r )"		1640933	0		|			
ANR	1641149	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1640933	0					
ANR	1641150	Callee	INST_CODE_AND_DST		1640933	0					
ANR	1641151	Identifier	INST_CODE_AND_DST		1640933	0					
ANR	1641152	ArgumentList	inst		1640933	1					
ANR	1641153	Argument	inst		1640933	0					
ANR	1641154	Identifier	inst		1640933	0					
ANR	1641155	Argument	inp_flags		1640933	1					
ANR	1641156	Identifier	inp_flags		1640933	0					
ANR	1641157	Argument	reg		1640933	2					
ANR	1641158	Identifier	reg		1640933	0					
ANR	1641159	InclusiveOrExpression	A ( arg & REG_MASK ) | B ( tmp_r )		1640933	1		|			
ANR	1641160	CallExpression	A ( arg & REG_MASK )		1640933	0					
ANR	1641161	Callee	A		1640933	0					
ANR	1641162	Identifier	A		1640933	0					
ANR	1641163	ArgumentList	arg & REG_MASK		1640933	1					
ANR	1641164	Argument	arg & REG_MASK		1640933	0					
ANR	1641165	BitAndExpression	arg & REG_MASK		1640933	0		&			
ANR	1641166	Identifier	arg		1640933	0					
ANR	1641167	Identifier	REG_MASK		1640933	1					
ANR	1641168	CallExpression	B ( tmp_r )		1640933	1					
ANR	1641169	Callee	B		1640933	0					
ANR	1641170	Identifier	B		1640933	0					
ANR	1641171	ArgumentList	tmp_r		1640933	1					
ANR	1641172	Argument	tmp_r		1640933	0					
ANR	1641173	Identifier	tmp_r		1640933	0					
ANR	1641174	IfStatement	if ( SLJIT_UNLIKELY ( ! ( arg & REG_MASK ) ) )		1640933	8					
ANR	1641175	Condition	SLJIT_UNLIKELY ( ! ( arg & REG_MASK ) )	983:5:32134:32166	1640933	0	True				
ANR	1641176	CallExpression	SLJIT_UNLIKELY ( ! ( arg & REG_MASK ) )		1640933	0					
ANR	1641177	Callee	SLJIT_UNLIKELY		1640933	0					
ANR	1641178	Identifier	SLJIT_UNLIKELY		1640933	0					
ANR	1641179	ArgumentList	! ( arg & REG_MASK )		1640933	1					
ANR	1641180	Argument	! ( arg & REG_MASK )		1640933	0					
ANR	1641181	UnaryOperationExpression	! ( arg & REG_MASK )		1640933	0					
ANR	1641182	UnaryOperator	!		1640933	0					
ANR	1641183	BitAndExpression	arg & REG_MASK		1640933	1		&			
ANR	1641184	Identifier	arg		1640933	0					
ANR	1641185	Identifier	REG_MASK		1640933	1					
ANR	1641186	ExpressionStatement	inp_flags &= ~WRITE_BACK	984:2:32171:32195	1640933	1	True				
ANR	1641187	AssignmentExpression	inp_flags &= ~WRITE_BACK		1640933	0		&=			
ANR	1641188	Identifier	inp_flags		1640933	0					
ANR	1641189	Identifier	~WRITE_BACK		1640933	1					
ANR	1641190	ExpressionStatement	inst = data_transfer_insts [ inp_flags & MEM_MASK ]	986:1:32199:32247	1640933	9	True				
ANR	1641191	AssignmentExpression	inst = data_transfer_insts [ inp_flags & MEM_MASK ]		1640933	0		=			
ANR	1641192	Identifier	inst		1640933	0					
ANR	1641193	ArrayIndexing	data_transfer_insts [ inp_flags & MEM_MASK ]		1640933	1					
ANR	1641194	Identifier	data_transfer_insts		1640933	0					
ANR	1641195	BitAndExpression	inp_flags & MEM_MASK		1640933	1		&			
ANR	1641196	Identifier	inp_flags		1640933	0					
ANR	1641197	Identifier	MEM_MASK		1640933	1					
ANR	1641198	ExpressionStatement	SLJIT_ASSERT ( ( arg & REG_MASK ) || ! ( inst & UPDATE_REQ ) )	987:1:32250:32304	1640933	10	True				
ANR	1641199	CallExpression	SLJIT_ASSERT ( ( arg & REG_MASK ) || ! ( inst & UPDATE_REQ ) )		1640933	0					
ANR	1641200	Callee	SLJIT_ASSERT		1640933	0					
ANR	1641201	Identifier	SLJIT_ASSERT		1640933	0					
ANR	1641202	ArgumentList	( arg & REG_MASK ) || ! ( inst & UPDATE_REQ )		1640933	1					
ANR	1641203	Argument	( arg & REG_MASK ) || ! ( inst & UPDATE_REQ )		1640933	0					
ANR	1641204	OrExpression	( arg & REG_MASK ) || ! ( inst & UPDATE_REQ )		1640933	0		||			
ANR	1641205	BitAndExpression	arg & REG_MASK		1640933	0		&			
ANR	1641206	Identifier	arg		1640933	0					
ANR	1641207	Identifier	REG_MASK		1640933	1					
ANR	1641208	UnaryOperationExpression	! ( inst & UPDATE_REQ )		1640933	1					
ANR	1641209	UnaryOperator	!		1640933	0					
ANR	1641210	BitAndExpression	inst & UPDATE_REQ		1640933	1		&			
ANR	1641211	Identifier	inst		1640933	0					
ANR	1641212	Identifier	UPDATE_REQ		1640933	1					
ANR	1641213	IfStatement	if ( argw <= 0x7fff7fffl && argw >= - 0x80000000l && ( ! ( inst & INT_ALIGNED ) || ! ( argw & 0x3 ) ) && ! ( inst & UPDATE_REQ ) )		1640933	11					
ANR	1641214	Condition	argw <= 0x7fff7fffl && argw >= - 0x80000000l && ( ! ( inst & INT_ALIGNED ) || ! ( argw & 0x3 ) ) && ! ( inst & UPDATE_REQ )	990:5:32369:32482	1640933	0	True				
ANR	1641215	AndExpression	argw <= 0x7fff7fffl && argw >= - 0x80000000l && ( ! ( inst & INT_ALIGNED ) || ! ( argw & 0x3 ) ) && ! ( inst & UPDATE_REQ )		1640933	0		&&			
ANR	1641216	RelationalExpression	argw <= 0x7fff7fffl		1640933	0		<=			
ANR	1641217	Identifier	argw		1640933	0					
ANR	1641218	PrimaryExpression	0x7fff7fffl		1640933	1					
ANR	1641219	AndExpression	argw >= - 0x80000000l && ( ! ( inst & INT_ALIGNED ) || ! ( argw & 0x3 ) ) && ! ( inst & UPDATE_REQ )		1640933	1		&&			
ANR	1641220	RelationalExpression	argw >= - 0x80000000l		1640933	0		>=			
ANR	1641221	Identifier	argw		1640933	0					
ANR	1641222	UnaryOperationExpression	- 0x80000000l		1640933	1					
ANR	1641223	UnaryOperator	-		1640933	0					
ANR	1641224	PrimaryExpression	0x80000000l		1640933	1					
ANR	1641225	AndExpression	( ! ( inst & INT_ALIGNED ) || ! ( argw & 0x3 ) ) && ! ( inst & UPDATE_REQ )		1640933	1		&&			
ANR	1641226	OrExpression	! ( inst & INT_ALIGNED ) || ! ( argw & 0x3 )		1640933	0		||			
ANR	1641227	UnaryOperationExpression	! ( inst & INT_ALIGNED )		1640933	0					
ANR	1641228	UnaryOperator	!		1640933	0					
ANR	1641229	BitAndExpression	inst & INT_ALIGNED		1640933	1		&			
ANR	1641230	Identifier	inst		1640933	0					
ANR	1641231	Identifier	INT_ALIGNED		1640933	1					
ANR	1641232	UnaryOperationExpression	! ( argw & 0x3 )		1640933	1					
ANR	1641233	UnaryOperator	!		1640933	0					
ANR	1641234	BitAndExpression	argw & 0x3		1640933	1		&			
ANR	1641235	Identifier	argw		1640933	0					
ANR	1641236	PrimaryExpression	0x3		1640933	1					
ANR	1641237	UnaryOperationExpression	! ( inst & UPDATE_REQ )		1640933	1					
ANR	1641238	UnaryOperator	!		1640933	0					
ANR	1641239	BitAndExpression	inst & UPDATE_REQ		1640933	1		&			
ANR	1641240	Identifier	inst		1640933	0					
ANR	1641241	Identifier	UPDATE_REQ		1640933	1					
ANR	1641242	CompoundStatement		48:72:1697:1697	1640933	1					
ANR	1641243	ExpressionStatement	arg &= REG_MASK	994:2:32497:32512	1640933	0	True				
ANR	1641244	AssignmentExpression	arg &= REG_MASK		1640933	0		&=			
ANR	1641245	Identifier	arg		1640933	0					
ANR	1641246	Identifier	REG_MASK		1640933	1					
ANR	1641247	ExpressionStatement	high_short = ( sljit_si ) ( argw + ( ( argw & 0x8000 ) << 1 ) ) & ~0xffff	995:2:32516:32580	1640933	1	True				
ANR	1641248	AssignmentExpression	high_short = ( sljit_si ) ( argw + ( ( argw & 0x8000 ) << 1 ) ) & ~0xffff		1640933	0		=			
ANR	1641249	Identifier	high_short		1640933	0					
ANR	1641250	BitAndExpression	( sljit_si ) ( argw + ( ( argw & 0x8000 ) << 1 ) ) & ~0xffff		1640933	1		&			
ANR	1641251	CastExpression	( sljit_si ) ( argw + ( ( argw & 0x8000 ) << 1 ) )		1640933	0					
ANR	1641252	CastTarget	sljit_si		1640933	0					
ANR	1641253	AdditiveExpression	argw + ( ( argw & 0x8000 ) << 1 )		1640933	1		+			
ANR	1641254	Identifier	argw		1640933	0					
ANR	1641255	ShiftExpression	( argw & 0x8000 ) << 1		1640933	1		<<			
ANR	1641256	BitAndExpression	argw & 0x8000		1640933	0		&			
ANR	1641257	Identifier	argw		1640933	0					
ANR	1641258	PrimaryExpression	0x8000		1640933	1					
ANR	1641259	PrimaryExpression	1		1640933	1					
ANR	1641260	Identifier	~0xffff		1640933	1					
ANR	1641261	ExpressionStatement	SLJIT_ASSERT ( high_short && high_short <= 0x7fffffffl && high_short >= - 0x80000000l )	998:2:32699:32782	1640933	2	True				
ANR	1641262	CallExpression	SLJIT_ASSERT ( high_short && high_short <= 0x7fffffffl && high_short >= - 0x80000000l )		1640933	0					
ANR	1641263	Callee	SLJIT_ASSERT		1640933	0					
ANR	1641264	Identifier	SLJIT_ASSERT		1640933	0					
ANR	1641265	ArgumentList	high_short && high_short <= 0x7fffffffl && high_short >= - 0x80000000l		1640933	1					
ANR	1641266	Argument	high_short && high_short <= 0x7fffffffl && high_short >= - 0x80000000l		1640933	0					
ANR	1641267	AndExpression	high_short && high_short <= 0x7fffffffl && high_short >= - 0x80000000l		1640933	0		&&			
ANR	1641268	Identifier	high_short		1640933	0					
ANR	1641269	AndExpression	high_short <= 0x7fffffffl && high_short >= - 0x80000000l		1640933	1		&&			
ANR	1641270	RelationalExpression	high_short <= 0x7fffffffl		1640933	0		<=			
ANR	1641271	Identifier	high_short		1640933	0					
ANR	1641272	PrimaryExpression	0x7fffffffl		1640933	1					
ANR	1641273	RelationalExpression	high_short >= - 0x80000000l		1640933	1		>=			
ANR	1641274	Identifier	high_short		1640933	0					
ANR	1641275	UnaryOperationExpression	- 0x80000000l		1640933	1					
ANR	1641276	UnaryOperator	-		1640933	0					
ANR	1641277	PrimaryExpression	0x80000000l		1640933	1					
ANR	1641278	IfStatement	if ( inp_flags & WRITE_BACK )		1640933	3					
ANR	1641279	Condition	inp_flags & WRITE_BACK	1003:6:32872:32893	1640933	0	True				
ANR	1641280	BitAndExpression	inp_flags & WRITE_BACK		1640933	0		&			
ANR	1641281	Identifier	inp_flags		1640933	0					
ANR	1641282	Identifier	WRITE_BACK		1640933	1					
ANR	1641283	CompoundStatement		60:30:2108:2108	1640933	1					
ANR	1641284	IfStatement	if ( arg == reg )		1640933	0					
ANR	1641285	Condition	arg == reg	1004:7:32905:32914	1640933	0	True				
ANR	1641286	EqualityExpression	arg == reg		1640933	0		==			
ANR	1641287	Identifier	arg		1640933	0					
ANR	1641288	Identifier	reg		1640933	1					
ANR	1641289	CompoundStatement		61:19:2129:2129	1640933	1					
ANR	1641290	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , OR | S ( reg ) | A ( tmp_r ) | B ( reg ) ) )"	1005:4:32923:32984	1640933	0	True				
ANR	1641291	CallExpression	"FAIL_IF ( push_inst ( compiler , OR | S ( reg ) | A ( tmp_r ) | B ( reg ) ) )"		1640933	0					
ANR	1641292	Callee	FAIL_IF		1640933	0					
ANR	1641293	Identifier	FAIL_IF		1640933	0					
ANR	1641294	ArgumentList	"push_inst ( compiler , OR | S ( reg ) | A ( tmp_r ) | B ( reg ) )"		1640933	1					
ANR	1641295	Argument	"push_inst ( compiler , OR | S ( reg ) | A ( tmp_r ) | B ( reg ) )"		1640933	0					
ANR	1641296	CallExpression	"push_inst ( compiler , OR | S ( reg ) | A ( tmp_r ) | B ( reg ) )"		1640933	0					
ANR	1641297	Callee	push_inst		1640933	0					
ANR	1641298	Identifier	push_inst		1640933	0					
ANR	1641299	ArgumentList	compiler		1640933	1					
ANR	1641300	Argument	compiler		1640933	0					
ANR	1641301	Identifier	compiler		1640933	0					
ANR	1641302	Argument	OR | S ( reg ) | A ( tmp_r ) | B ( reg )		1640933	1					
ANR	1641303	InclusiveOrExpression	OR | S ( reg ) | A ( tmp_r ) | B ( reg )		1640933	0		|			
ANR	1641304	Identifier	OR		1640933	0					
ANR	1641305	InclusiveOrExpression	S ( reg ) | A ( tmp_r ) | B ( reg )		1640933	1		|			
ANR	1641306	CallExpression	S ( reg )		1640933	0					
ANR	1641307	Callee	S		1640933	0					
ANR	1641308	Identifier	S		1640933	0					
ANR	1641309	ArgumentList	reg		1640933	1					
ANR	1641310	Argument	reg		1640933	0					
ANR	1641311	Identifier	reg		1640933	0					
ANR	1641312	InclusiveOrExpression	A ( tmp_r ) | B ( reg )		1640933	1		|			
ANR	1641313	CallExpression	A ( tmp_r )		1640933	0					
ANR	1641314	Callee	A		1640933	0					
ANR	1641315	Identifier	A		1640933	0					
ANR	1641316	ArgumentList	tmp_r		1640933	1					
ANR	1641317	Argument	tmp_r		1640933	0					
ANR	1641318	Identifier	tmp_r		1640933	0					
ANR	1641319	CallExpression	B ( reg )		1640933	1					
ANR	1641320	Callee	B		1640933	0					
ANR	1641321	Identifier	B		1640933	0					
ANR	1641322	ArgumentList	reg		1640933	1					
ANR	1641323	Argument	reg		1640933	0					
ANR	1641324	Identifier	reg		1640933	0					
ANR	1641325	ExpressionStatement	reg = tmp_r	1006:4:32990:33001	1640933	1	True				
ANR	1641326	AssignmentExpression	reg = tmp_r		1640933	0		=			
ANR	1641327	Identifier	reg		1640933	0					
ANR	1641328	Identifier	tmp_r		1640933	1					
ANR	1641329	ExpressionStatement	tmp_r = arg	1008:3:33011:33022	1640933	1	True				
ANR	1641330	AssignmentExpression	tmp_r = arg		1640933	0		=			
ANR	1641331	Identifier	tmp_r		1640933	0					
ANR	1641332	Identifier	arg		1640933	1					
ANR	1641333	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDIS | D ( arg ) | A ( arg ) | IMM ( high_short >> 16 ) ) )"	1009:3:33027:33104	1640933	2	True				
ANR	1641334	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDIS | D ( arg ) | A ( arg ) | IMM ( high_short >> 16 ) ) )"		1640933	0					
ANR	1641335	Callee	FAIL_IF		1640933	0					
ANR	1641336	Identifier	FAIL_IF		1640933	0					
ANR	1641337	ArgumentList	"push_inst ( compiler , ADDIS | D ( arg ) | A ( arg ) | IMM ( high_short >> 16 ) )"		1640933	1					
ANR	1641338	Argument	"push_inst ( compiler , ADDIS | D ( arg ) | A ( arg ) | IMM ( high_short >> 16 ) )"		1640933	0					
ANR	1641339	CallExpression	"push_inst ( compiler , ADDIS | D ( arg ) | A ( arg ) | IMM ( high_short >> 16 ) )"		1640933	0					
ANR	1641340	Callee	push_inst		1640933	0					
ANR	1641341	Identifier	push_inst		1640933	0					
ANR	1641342	ArgumentList	compiler		1640933	1					
ANR	1641343	Argument	compiler		1640933	0					
ANR	1641344	Identifier	compiler		1640933	0					
ANR	1641345	Argument	ADDIS | D ( arg ) | A ( arg ) | IMM ( high_short >> 16 )		1640933	1					
ANR	1641346	InclusiveOrExpression	ADDIS | D ( arg ) | A ( arg ) | IMM ( high_short >> 16 )		1640933	0		|			
ANR	1641347	Identifier	ADDIS		1640933	0					
ANR	1641348	InclusiveOrExpression	D ( arg ) | A ( arg ) | IMM ( high_short >> 16 )		1640933	1		|			
ANR	1641349	CallExpression	D ( arg )		1640933	0					
ANR	1641350	Callee	D		1640933	0					
ANR	1641351	Identifier	D		1640933	0					
ANR	1641352	ArgumentList	arg		1640933	1					
ANR	1641353	Argument	arg		1640933	0					
ANR	1641354	Identifier	arg		1640933	0					
ANR	1641355	InclusiveOrExpression	A ( arg ) | IMM ( high_short >> 16 )		1640933	1		|			
ANR	1641356	CallExpression	A ( arg )		1640933	0					
ANR	1641357	Callee	A		1640933	0					
ANR	1641358	Identifier	A		1640933	0					
ANR	1641359	ArgumentList	arg		1640933	1					
ANR	1641360	Argument	arg		1640933	0					
ANR	1641361	Identifier	arg		1640933	0					
ANR	1641362	CallExpression	IMM ( high_short >> 16 )		1640933	1					
ANR	1641363	Callee	IMM		1640933	0					
ANR	1641364	Identifier	IMM		1640933	0					
ANR	1641365	ArgumentList	high_short >> 16		1640933	1					
ANR	1641366	Argument	high_short >> 16		1640933	0					
ANR	1641367	ShiftExpression	high_short >> 16		1640933	0		>>			
ANR	1641368	Identifier	high_short		1640933	0					
ANR	1641369	PrimaryExpression	16		1640933	1					
ANR	1641370	ElseStatement	else		1640933	0					
ANR	1641371	IfStatement	if ( compiler -> cache_arg != ( SLJIT_MEM | arg ) || high_short != compiler -> cache_argw )		1640933	0					
ANR	1641372	Condition	compiler -> cache_arg != ( SLJIT_MEM | arg ) || high_short != compiler -> cache_argw	1011:11:33121:33198	1640933	0	True				
ANR	1641373	OrExpression	compiler -> cache_arg != ( SLJIT_MEM | arg ) || high_short != compiler -> cache_argw		1640933	0		||			
ANR	1641374	EqualityExpression	compiler -> cache_arg != ( SLJIT_MEM | arg )		1640933	0		!=			
ANR	1641375	PtrMemberAccess	compiler -> cache_arg		1640933	0					
ANR	1641376	Identifier	compiler		1640933	0					
ANR	1641377	Identifier	cache_arg		1640933	1					
ANR	1641378	InclusiveOrExpression	SLJIT_MEM | arg		1640933	1		|			
ANR	1641379	Identifier	SLJIT_MEM		1640933	0					
ANR	1641380	Identifier	arg		1640933	1					
ANR	1641381	EqualityExpression	high_short != compiler -> cache_argw		1640933	1		!=			
ANR	1641382	Identifier	high_short		1640933	0					
ANR	1641383	PtrMemberAccess	compiler -> cache_argw		1640933	1					
ANR	1641384	Identifier	compiler		1640933	0					
ANR	1641385	Identifier	cache_argw		1640933	1					
ANR	1641386	CompoundStatement		68:91:2413:2413	1640933	1					
ANR	1641387	IfStatement	if ( ( next_arg & SLJIT_MEM ) && ! ( next_arg & OFFS_REG_MASK ) )		1640933	0					
ANR	1641388	Condition	( next_arg & SLJIT_MEM ) && ! ( next_arg & OFFS_REG_MASK )	1012:7:33210:33262	1640933	0	True				
ANR	1641389	AndExpression	( next_arg & SLJIT_MEM ) && ! ( next_arg & OFFS_REG_MASK )		1640933	0		&&			
ANR	1641390	BitAndExpression	next_arg & SLJIT_MEM		1640933	0		&			
ANR	1641391	Identifier	next_arg		1640933	0					
ANR	1641392	Identifier	SLJIT_MEM		1640933	1					
ANR	1641393	UnaryOperationExpression	! ( next_arg & OFFS_REG_MASK )		1640933	1					
ANR	1641394	UnaryOperator	!		1640933	0					
ANR	1641395	BitAndExpression	next_arg & OFFS_REG_MASK		1640933	1		&			
ANR	1641396	Identifier	next_arg		1640933	0					
ANR	1641397	Identifier	OFFS_REG_MASK		1640933	1					
ANR	1641398	CompoundStatement		69:62:2477:2477	1640933	1					
ANR	1641399	ExpressionStatement	next_high_short = ( sljit_si ) ( next_argw + ( ( next_argw & 0x8000 ) << 1 ) ) & ~0xffff	1013:4:33271:33350	1640933	0	True				
ANR	1641400	AssignmentExpression	next_high_short = ( sljit_si ) ( next_argw + ( ( next_argw & 0x8000 ) << 1 ) ) & ~0xffff		1640933	0		=			
ANR	1641401	Identifier	next_high_short		1640933	0					
ANR	1641402	BitAndExpression	( sljit_si ) ( next_argw + ( ( next_argw & 0x8000 ) << 1 ) ) & ~0xffff		1640933	1		&			
ANR	1641403	CastExpression	( sljit_si ) ( next_argw + ( ( next_argw & 0x8000 ) << 1 ) )		1640933	0					
ANR	1641404	CastTarget	sljit_si		1640933	0					
ANR	1641405	AdditiveExpression	next_argw + ( ( next_argw & 0x8000 ) << 1 )		1640933	1		+			
ANR	1641406	Identifier	next_argw		1640933	0					
ANR	1641407	ShiftExpression	( next_argw & 0x8000 ) << 1		1640933	1		<<			
ANR	1641408	BitAndExpression	next_argw & 0x8000		1640933	0		&			
ANR	1641409	Identifier	next_argw		1640933	0					
ANR	1641410	PrimaryExpression	0x8000		1640933	1					
ANR	1641411	PrimaryExpression	1		1640933	1					
ANR	1641412	Identifier	~0xffff		1640933	1					
ANR	1641413	IfStatement	if ( high_short == next_high_short )		1640933	1					
ANR	1641414	Condition	high_short == next_high_short	1014:8:33360:33388	1640933	0	True				
ANR	1641415	EqualityExpression	high_short == next_high_short		1640933	0		==			
ANR	1641416	Identifier	high_short		1640933	0					
ANR	1641417	Identifier	next_high_short		1640933	1					
ANR	1641418	CompoundStatement		71:39:2603:2603	1640933	1					
ANR	1641419	ExpressionStatement	compiler -> cache_arg = SLJIT_MEM | arg	1015:5:33398:33435	1640933	0	True				
ANR	1641420	AssignmentExpression	compiler -> cache_arg = SLJIT_MEM | arg		1640933	0		=			
ANR	1641421	PtrMemberAccess	compiler -> cache_arg		1640933	0					
ANR	1641422	Identifier	compiler		1640933	0					
ANR	1641423	Identifier	cache_arg		1640933	1					
ANR	1641424	InclusiveOrExpression	SLJIT_MEM | arg		1640933	1		|			
ANR	1641425	Identifier	SLJIT_MEM		1640933	0					
ANR	1641426	Identifier	arg		1640933	1					
ANR	1641427	ExpressionStatement	compiler -> cache_argw = high_short	1016:5:33442:33475	1640933	1	True				
ANR	1641428	AssignmentExpression	compiler -> cache_argw = high_short		1640933	0		=			
ANR	1641429	PtrMemberAccess	compiler -> cache_argw		1640933	0					
ANR	1641430	Identifier	compiler		1640933	0					
ANR	1641431	Identifier	cache_argw		1640933	1					
ANR	1641432	Identifier	high_short		1640933	1					
ANR	1641433	ExpressionStatement	tmp_r = TMP_REG3	1017:5:33482:33498	1640933	2	True				
ANR	1641434	AssignmentExpression	tmp_r = TMP_REG3		1640933	0		=			
ANR	1641435	Identifier	tmp_r		1640933	0					
ANR	1641436	Identifier	TMP_REG3		1640933	1					
ANR	1641437	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDIS | D ( tmp_r ) | A ( arg & REG_MASK ) | IMM ( high_short >> 16 ) ) )"	1020:3:33514:33604	1640933	1	True				
ANR	1641438	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDIS | D ( tmp_r ) | A ( arg & REG_MASK ) | IMM ( high_short >> 16 ) ) )"		1640933	0					
ANR	1641439	Callee	FAIL_IF		1640933	0					
ANR	1641440	Identifier	FAIL_IF		1640933	0					
ANR	1641441	ArgumentList	"push_inst ( compiler , ADDIS | D ( tmp_r ) | A ( arg & REG_MASK ) | IMM ( high_short >> 16 ) )"		1640933	1					
ANR	1641442	Argument	"push_inst ( compiler , ADDIS | D ( tmp_r ) | A ( arg & REG_MASK ) | IMM ( high_short >> 16 ) )"		1640933	0					
ANR	1641443	CallExpression	"push_inst ( compiler , ADDIS | D ( tmp_r ) | A ( arg & REG_MASK ) | IMM ( high_short >> 16 ) )"		1640933	0					
ANR	1641444	Callee	push_inst		1640933	0					
ANR	1641445	Identifier	push_inst		1640933	0					
ANR	1641446	ArgumentList	compiler		1640933	1					
ANR	1641447	Argument	compiler		1640933	0					
ANR	1641448	Identifier	compiler		1640933	0					
ANR	1641449	Argument	ADDIS | D ( tmp_r ) | A ( arg & REG_MASK ) | IMM ( high_short >> 16 )		1640933	1					
ANR	1641450	InclusiveOrExpression	ADDIS | D ( tmp_r ) | A ( arg & REG_MASK ) | IMM ( high_short >> 16 )		1640933	0		|			
ANR	1641451	Identifier	ADDIS		1640933	0					
ANR	1641452	InclusiveOrExpression	D ( tmp_r ) | A ( arg & REG_MASK ) | IMM ( high_short >> 16 )		1640933	1		|			
ANR	1641453	CallExpression	D ( tmp_r )		1640933	0					
ANR	1641454	Callee	D		1640933	0					
ANR	1641455	Identifier	D		1640933	0					
ANR	1641456	ArgumentList	tmp_r		1640933	1					
ANR	1641457	Argument	tmp_r		1640933	0					
ANR	1641458	Identifier	tmp_r		1640933	0					
ANR	1641459	InclusiveOrExpression	A ( arg & REG_MASK ) | IMM ( high_short >> 16 )		1640933	1		|			
ANR	1641460	CallExpression	A ( arg & REG_MASK )		1640933	0					
ANR	1641461	Callee	A		1640933	0					
ANR	1641462	Identifier	A		1640933	0					
ANR	1641463	ArgumentList	arg & REG_MASK		1640933	1					
ANR	1641464	Argument	arg & REG_MASK		1640933	0					
ANR	1641465	BitAndExpression	arg & REG_MASK		1640933	0		&			
ANR	1641466	Identifier	arg		1640933	0					
ANR	1641467	Identifier	REG_MASK		1640933	1					
ANR	1641468	CallExpression	IMM ( high_short >> 16 )		1640933	1					
ANR	1641469	Callee	IMM		1640933	0					
ANR	1641470	Identifier	IMM		1640933	0					
ANR	1641471	ArgumentList	high_short >> 16		1640933	1					
ANR	1641472	Argument	high_short >> 16		1640933	0					
ANR	1641473	ShiftExpression	high_short >> 16		1640933	0		>>			
ANR	1641474	Identifier	high_short		1640933	0					
ANR	1641475	PrimaryExpression	16		1640933	1					
ANR	1641476	ElseStatement	else		1640933	0					
ANR	1641477	ExpressionStatement	tmp_r = TMP_REG3	1023:3:33620:33636	1640933	0	True				
ANR	1641478	AssignmentExpression	tmp_r = TMP_REG3		1640933	0		=			
ANR	1641479	Identifier	tmp_r		1640933	0					
ANR	1641480	Identifier	TMP_REG3		1640933	1					
ANR	1641481	ReturnStatement	"return push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( tmp_r ) | IMM ( argw ) ) ;"	1025:2:33641:33731	1640933	4	True				
ANR	1641482	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( tmp_r ) | IMM ( argw ) )"		1640933	0					
ANR	1641483	Callee	push_inst		1640933	0					
ANR	1641484	Identifier	push_inst		1640933	0					
ANR	1641485	ArgumentList	compiler		1640933	1					
ANR	1641486	Argument	compiler		1640933	0					
ANR	1641487	Identifier	compiler		1640933	0					
ANR	1641488	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( tmp_r ) | IMM ( argw )"		1640933	1					
ANR	1641489	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( tmp_r ) | IMM ( argw )"		1640933	0		|			
ANR	1641490	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1640933	0					
ANR	1641491	Callee	INST_CODE_AND_DST		1640933	0					
ANR	1641492	Identifier	INST_CODE_AND_DST		1640933	0					
ANR	1641493	ArgumentList	inst		1640933	1					
ANR	1641494	Argument	inst		1640933	0					
ANR	1641495	Identifier	inst		1640933	0					
ANR	1641496	Argument	inp_flags		1640933	1					
ANR	1641497	Identifier	inp_flags		1640933	0					
ANR	1641498	Argument	reg		1640933	2					
ANR	1641499	Identifier	reg		1640933	0					
ANR	1641500	InclusiveOrExpression	A ( tmp_r ) | IMM ( argw )		1640933	1		|			
ANR	1641501	CallExpression	A ( tmp_r )		1640933	0					
ANR	1641502	Callee	A		1640933	0					
ANR	1641503	Identifier	A		1640933	0					
ANR	1641504	ArgumentList	tmp_r		1640933	1					
ANR	1641505	Argument	tmp_r		1640933	0					
ANR	1641506	Identifier	tmp_r		1640933	0					
ANR	1641507	CallExpression	IMM ( argw )		1640933	1					
ANR	1641508	Callee	IMM		1640933	0					
ANR	1641509	Identifier	IMM		1640933	0					
ANR	1641510	ArgumentList	argw		1640933	1					
ANR	1641511	Argument	argw		1640933	0					
ANR	1641512	Identifier	argw		1640933	0					
ANR	1641513	IfStatement	if ( SLJIT_UNLIKELY ( ! ( arg & REG_MASK ) ) )		1640933	12					
ANR	1641514	Condition	SLJIT_UNLIKELY ( ! ( arg & REG_MASK ) )	1031:5:33839:33871	1640933	0	True				
ANR	1641515	CallExpression	SLJIT_UNLIKELY ( ! ( arg & REG_MASK ) )		1640933	0					
ANR	1641516	Callee	SLJIT_UNLIKELY		1640933	0					
ANR	1641517	Identifier	SLJIT_UNLIKELY		1640933	0					
ANR	1641518	ArgumentList	! ( arg & REG_MASK )		1640933	1					
ANR	1641519	Argument	! ( arg & REG_MASK )		1640933	0					
ANR	1641520	UnaryOperationExpression	! ( arg & REG_MASK )		1640933	0					
ANR	1641521	UnaryOperator	!		1640933	0					
ANR	1641522	BitAndExpression	arg & REG_MASK		1640933	1		&			
ANR	1641523	Identifier	arg		1640933	0					
ANR	1641524	Identifier	REG_MASK		1640933	1					
ANR	1641525	CompoundStatement		88:40:3086:3086	1640933	1					
ANR	1641526	ExpressionStatement	diff = argw - compiler -> cache_argw	1032:2:33878:33912	1640933	0	True				
ANR	1641527	AssignmentExpression	diff = argw - compiler -> cache_argw		1640933	0		=			
ANR	1641528	Identifier	diff		1640933	0					
ANR	1641529	AdditiveExpression	argw - compiler -> cache_argw		1640933	1		-			
ANR	1641530	Identifier	argw		1640933	0					
ANR	1641531	PtrMemberAccess	compiler -> cache_argw		1640933	1					
ANR	1641532	Identifier	compiler		1640933	0					
ANR	1641533	Identifier	cache_argw		1640933	1					
ANR	1641534	IfStatement	if ( ( compiler -> cache_arg & SLJIT_IMM ) && diff <= SIMM_MAX && diff >= SIMM_MIN )		1640933	1					
ANR	1641535	Condition	( compiler -> cache_arg & SLJIT_IMM ) && diff <= SIMM_MAX && diff >= SIMM_MIN	1033:6:33920:33992	1640933	0	True				
ANR	1641536	AndExpression	( compiler -> cache_arg & SLJIT_IMM ) && diff <= SIMM_MAX && diff >= SIMM_MIN		1640933	0		&&			
ANR	1641537	BitAndExpression	compiler -> cache_arg & SLJIT_IMM		1640933	0		&			
ANR	1641538	PtrMemberAccess	compiler -> cache_arg		1640933	0					
ANR	1641539	Identifier	compiler		1640933	0					
ANR	1641540	Identifier	cache_arg		1640933	1					
ANR	1641541	Identifier	SLJIT_IMM		1640933	1					
ANR	1641542	AndExpression	diff <= SIMM_MAX && diff >= SIMM_MIN		1640933	1		&&			
ANR	1641543	RelationalExpression	diff <= SIMM_MAX		1640933	0		<=			
ANR	1641544	Identifier	diff		1640933	0					
ANR	1641545	Identifier	SIMM_MAX		1640933	1					
ANR	1641546	RelationalExpression	diff >= SIMM_MIN		1640933	1		>=			
ANR	1641547	Identifier	diff		1640933	0					
ANR	1641548	Identifier	SIMM_MIN		1640933	1					
ANR	1641549	CompoundStatement		90:81:3207:3207	1640933	1					
ANR	1641550	ExpressionStatement	ADJUST_CACHED_IMM ( diff )	1034:3:34000:34023	1640933	0	True				
ANR	1641551	CallExpression	ADJUST_CACHED_IMM ( diff )		1640933	0					
ANR	1641552	Callee	ADJUST_CACHED_IMM		1640933	0					
ANR	1641553	Identifier	ADJUST_CACHED_IMM		1640933	0					
ANR	1641554	ArgumentList	diff		1640933	1					
ANR	1641555	Argument	diff		1640933	0					
ANR	1641556	Identifier	diff		1640933	0					
ANR	1641557	ReturnStatement	"return push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) | IMM ( diff ) ) ;"	1035:3:34028:34121	1640933	1	True				
ANR	1641558	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) | IMM ( diff ) )"		1640933	0					
ANR	1641559	Callee	push_inst		1640933	0					
ANR	1641560	Identifier	push_inst		1640933	0					
ANR	1641561	ArgumentList	compiler		1640933	1					
ANR	1641562	Argument	compiler		1640933	0					
ANR	1641563	Identifier	compiler		1640933	0					
ANR	1641564	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) | IMM ( diff )"		1640933	1					
ANR	1641565	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) | IMM ( diff )"		1640933	0		|			
ANR	1641566	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1640933	0					
ANR	1641567	Callee	INST_CODE_AND_DST		1640933	0					
ANR	1641568	Identifier	INST_CODE_AND_DST		1640933	0					
ANR	1641569	ArgumentList	inst		1640933	1					
ANR	1641570	Argument	inst		1640933	0					
ANR	1641571	Identifier	inst		1640933	0					
ANR	1641572	Argument	inp_flags		1640933	1					
ANR	1641573	Identifier	inp_flags		1640933	0					
ANR	1641574	Argument	reg		1640933	2					
ANR	1641575	Identifier	reg		1640933	0					
ANR	1641576	InclusiveOrExpression	A ( TMP_REG3 ) | IMM ( diff )		1640933	1		|			
ANR	1641577	CallExpression	A ( TMP_REG3 )		1640933	0					
ANR	1641578	Callee	A		1640933	0					
ANR	1641579	Identifier	A		1640933	0					
ANR	1641580	ArgumentList	TMP_REG3		1640933	1					
ANR	1641581	Argument	TMP_REG3		1640933	0					
ANR	1641582	Identifier	TMP_REG3		1640933	0					
ANR	1641583	CallExpression	IMM ( diff )		1640933	1					
ANR	1641584	Callee	IMM		1640933	0					
ANR	1641585	Identifier	IMM		1640933	0					
ANR	1641586	ArgumentList	diff		1640933	1					
ANR	1641587	Argument	diff		1640933	0					
ANR	1641588	Identifier	diff		1640933	0					
ANR	1641589	ExpressionStatement	diff = argw - next_argw	1038:2:34130:34153	1640933	2	True				
ANR	1641590	AssignmentExpression	diff = argw - next_argw		1640933	0		=			
ANR	1641591	Identifier	diff		1640933	0					
ANR	1641592	AdditiveExpression	argw - next_argw		1640933	1		-			
ANR	1641593	Identifier	argw		1640933	0					
ANR	1641594	Identifier	next_argw		1640933	1					
ANR	1641595	IfStatement	if ( ( next_arg & SLJIT_MEM ) && diff <= SIMM_MAX && diff >= SIMM_MIN )		1640933	3					
ANR	1641596	Condition	( next_arg & SLJIT_MEM ) && diff <= SIMM_MAX && diff >= SIMM_MIN	1039:6:34161:34222	1640933	0	True				
ANR	1641597	AndExpression	( next_arg & SLJIT_MEM ) && diff <= SIMM_MAX && diff >= SIMM_MIN		1640933	0		&&			
ANR	1641598	BitAndExpression	next_arg & SLJIT_MEM		1640933	0		&			
ANR	1641599	Identifier	next_arg		1640933	0					
ANR	1641600	Identifier	SLJIT_MEM		1640933	1					
ANR	1641601	AndExpression	diff <= SIMM_MAX && diff >= SIMM_MIN		1640933	1		&&			
ANR	1641602	RelationalExpression	diff <= SIMM_MAX		1640933	0		<=			
ANR	1641603	Identifier	diff		1640933	0					
ANR	1641604	Identifier	SIMM_MAX		1640933	1					
ANR	1641605	RelationalExpression	diff >= SIMM_MIN		1640933	1		>=			
ANR	1641606	Identifier	diff		1640933	0					
ANR	1641607	Identifier	SIMM_MIN		1640933	1					
ANR	1641608	CompoundStatement		96:70:3437:3437	1640933	1					
ANR	1641609	ExpressionStatement	SLJIT_ASSERT ( inp_flags & LOAD_DATA )	1040:3:34230:34265	1640933	0	True				
ANR	1641610	CallExpression	SLJIT_ASSERT ( inp_flags & LOAD_DATA )		1640933	0					
ANR	1641611	Callee	SLJIT_ASSERT		1640933	0					
ANR	1641612	Identifier	SLJIT_ASSERT		1640933	0					
ANR	1641613	ArgumentList	inp_flags & LOAD_DATA		1640933	1					
ANR	1641614	Argument	inp_flags & LOAD_DATA		1640933	0					
ANR	1641615	BitAndExpression	inp_flags & LOAD_DATA		1640933	0		&			
ANR	1641616	Identifier	inp_flags		1640933	0					
ANR	1641617	Identifier	LOAD_DATA		1640933	1					
ANR	1641618	ExpressionStatement	compiler -> cache_arg = SLJIT_IMM	1042:3:34271:34302	1640933	1	True				
ANR	1641619	AssignmentExpression	compiler -> cache_arg = SLJIT_IMM		1640933	0		=			
ANR	1641620	PtrMemberAccess	compiler -> cache_arg		1640933	0					
ANR	1641621	Identifier	compiler		1640933	0					
ANR	1641622	Identifier	cache_arg		1640933	1					
ANR	1641623	Identifier	SLJIT_IMM		1640933	1					
ANR	1641624	ExpressionStatement	compiler -> cache_argw = argw	1043:3:34307:34334	1640933	2	True				
ANR	1641625	AssignmentExpression	compiler -> cache_argw = argw		1640933	0		=			
ANR	1641626	PtrMemberAccess	compiler -> cache_argw		1640933	0					
ANR	1641627	Identifier	compiler		1640933	0					
ANR	1641628	Identifier	cache_argw		1640933	1					
ANR	1641629	Identifier	argw		1640933	1					
ANR	1641630	ExpressionStatement	tmp_r = TMP_REG3	1044:3:34339:34355	1640933	3	True				
ANR	1641631	AssignmentExpression	tmp_r = TMP_REG3		1640933	0		=			
ANR	1641632	Identifier	tmp_r		1640933	0					
ANR	1641633	Identifier	TMP_REG3		1640933	1					
ANR	1641634	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , tmp_r , argw ) )"	1047:2:34364:34410	1640933	4	True				
ANR	1641635	CallExpression	"FAIL_IF ( load_immediate ( compiler , tmp_r , argw ) )"		1640933	0					
ANR	1641636	Callee	FAIL_IF		1640933	0					
ANR	1641637	Identifier	FAIL_IF		1640933	0					
ANR	1641638	ArgumentList	"load_immediate ( compiler , tmp_r , argw )"		1640933	1					
ANR	1641639	Argument	"load_immediate ( compiler , tmp_r , argw )"		1640933	0					
ANR	1641640	CallExpression	"load_immediate ( compiler , tmp_r , argw )"		1640933	0					
ANR	1641641	Callee	load_immediate		1640933	0					
ANR	1641642	Identifier	load_immediate		1640933	0					
ANR	1641643	ArgumentList	compiler		1640933	1					
ANR	1641644	Argument	compiler		1640933	0					
ANR	1641645	Identifier	compiler		1640933	0					
ANR	1641646	Argument	tmp_r		1640933	1					
ANR	1641647	Identifier	tmp_r		1640933	0					
ANR	1641648	Argument	argw		1640933	2					
ANR	1641649	Identifier	argw		1640933	0					
ANR	1641650	ReturnStatement	"return push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( tmp_r ) ) ;"	1048:2:34414:34492	1640933	5	True				
ANR	1641651	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( tmp_r ) )"		1640933	0					
ANR	1641652	Callee	push_inst		1640933	0					
ANR	1641653	Identifier	push_inst		1640933	0					
ANR	1641654	ArgumentList	compiler		1640933	1					
ANR	1641655	Argument	compiler		1640933	0					
ANR	1641656	Identifier	compiler		1640933	0					
ANR	1641657	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( tmp_r )"		1640933	1					
ANR	1641658	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( tmp_r )"		1640933	0		|			
ANR	1641659	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1640933	0					
ANR	1641660	Callee	INST_CODE_AND_DST		1640933	0					
ANR	1641661	Identifier	INST_CODE_AND_DST		1640933	0					
ANR	1641662	ArgumentList	inst		1640933	1					
ANR	1641663	Argument	inst		1640933	0					
ANR	1641664	Identifier	inst		1640933	0					
ANR	1641665	Argument	inp_flags		1640933	1					
ANR	1641666	Identifier	inp_flags		1640933	0					
ANR	1641667	Argument	reg		1640933	2					
ANR	1641668	Identifier	reg		1640933	0					
ANR	1641669	CallExpression	A ( tmp_r )		1640933	1					
ANR	1641670	Callee	A		1640933	0					
ANR	1641671	Identifier	A		1640933	0					
ANR	1641672	ArgumentList	tmp_r		1640933	1					
ANR	1641673	Argument	tmp_r		1640933	0					
ANR	1641674	Identifier	tmp_r		1640933	0					
ANR	1641675	ExpressionStatement	diff = argw - compiler -> cache_argw	1051:1:34499:34533	1640933	13	True				
ANR	1641676	AssignmentExpression	diff = argw - compiler -> cache_argw		1640933	0		=			
ANR	1641677	Identifier	diff		1640933	0					
ANR	1641678	AdditiveExpression	argw - compiler -> cache_argw		1640933	1		-			
ANR	1641679	Identifier	argw		1640933	0					
ANR	1641680	PtrMemberAccess	compiler -> cache_argw		1640933	1					
ANR	1641681	Identifier	compiler		1640933	0					
ANR	1641682	Identifier	cache_argw		1640933	1					
ANR	1641683	IfStatement	if ( compiler -> cache_arg == arg && diff <= SIMM_MAX && diff >= SIMM_MIN )		1640933	14					
ANR	1641684	Condition	compiler -> cache_arg == arg && diff <= SIMM_MAX && diff >= SIMM_MIN	1052:5:34540:34605	1640933	0	True				
ANR	1641685	AndExpression	compiler -> cache_arg == arg && diff <= SIMM_MAX && diff >= SIMM_MIN		1640933	0		&&			
ANR	1641686	EqualityExpression	compiler -> cache_arg == arg		1640933	0		==			
ANR	1641687	PtrMemberAccess	compiler -> cache_arg		1640933	0					
ANR	1641688	Identifier	compiler		1640933	0					
ANR	1641689	Identifier	cache_arg		1640933	1					
ANR	1641690	Identifier	arg		1640933	1					
ANR	1641691	AndExpression	diff <= SIMM_MAX && diff >= SIMM_MIN		1640933	1		&&			
ANR	1641692	RelationalExpression	diff <= SIMM_MAX		1640933	0		<=			
ANR	1641693	Identifier	diff		1640933	0					
ANR	1641694	Identifier	SIMM_MAX		1640933	1					
ANR	1641695	RelationalExpression	diff >= SIMM_MIN		1640933	1		>=			
ANR	1641696	Identifier	diff		1640933	0					
ANR	1641697	Identifier	SIMM_MIN		1640933	1					
ANR	1641698	CompoundStatement		109:73:3820:3820	1640933	1					
ANR	1641699	ExpressionStatement	SLJIT_ASSERT ( ! ( inp_flags & WRITE_BACK ) && ! ( inst & UPDATE_REQ ) )	1053:2:34612:34675	1640933	0	True				
ANR	1641700	CallExpression	SLJIT_ASSERT ( ! ( inp_flags & WRITE_BACK ) && ! ( inst & UPDATE_REQ ) )		1640933	0					
ANR	1641701	Callee	SLJIT_ASSERT		1640933	0					
ANR	1641702	Identifier	SLJIT_ASSERT		1640933	0					
ANR	1641703	ArgumentList	! ( inp_flags & WRITE_BACK ) && ! ( inst & UPDATE_REQ )		1640933	1					
ANR	1641704	Argument	! ( inp_flags & WRITE_BACK ) && ! ( inst & UPDATE_REQ )		1640933	0					
ANR	1641705	AndExpression	! ( inp_flags & WRITE_BACK ) && ! ( inst & UPDATE_REQ )		1640933	0		&&			
ANR	1641706	UnaryOperationExpression	! ( inp_flags & WRITE_BACK )		1640933	0					
ANR	1641707	UnaryOperator	!		1640933	0					
ANR	1641708	BitAndExpression	inp_flags & WRITE_BACK		1640933	1		&			
ANR	1641709	Identifier	inp_flags		1640933	0					
ANR	1641710	Identifier	WRITE_BACK		1640933	1					
ANR	1641711	UnaryOperationExpression	! ( inst & UPDATE_REQ )		1640933	1					
ANR	1641712	UnaryOperator	!		1640933	0					
ANR	1641713	BitAndExpression	inst & UPDATE_REQ		1640933	1		&			
ANR	1641714	Identifier	inst		1640933	0					
ANR	1641715	Identifier	UPDATE_REQ		1640933	1					
ANR	1641716	ExpressionStatement	ADJUST_CACHED_IMM ( diff )	1054:2:34679:34702	1640933	1	True				
ANR	1641717	CallExpression	ADJUST_CACHED_IMM ( diff )		1640933	0					
ANR	1641718	Callee	ADJUST_CACHED_IMM		1640933	0					
ANR	1641719	Identifier	ADJUST_CACHED_IMM		1640933	0					
ANR	1641720	ArgumentList	diff		1640933	1					
ANR	1641721	Argument	diff		1640933	0					
ANR	1641722	Identifier	diff		1640933	0					
ANR	1641723	ReturnStatement	"return push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) | IMM ( diff ) ) ;"	1055:2:34706:34799	1640933	2	True				
ANR	1641724	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) | IMM ( diff ) )"		1640933	0					
ANR	1641725	Callee	push_inst		1640933	0					
ANR	1641726	Identifier	push_inst		1640933	0					
ANR	1641727	ArgumentList	compiler		1640933	1					
ANR	1641728	Argument	compiler		1640933	0					
ANR	1641729	Identifier	compiler		1640933	0					
ANR	1641730	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) | IMM ( diff )"		1640933	1					
ANR	1641731	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) | IMM ( diff )"		1640933	0		|			
ANR	1641732	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1640933	0					
ANR	1641733	Callee	INST_CODE_AND_DST		1640933	0					
ANR	1641734	Identifier	INST_CODE_AND_DST		1640933	0					
ANR	1641735	ArgumentList	inst		1640933	1					
ANR	1641736	Argument	inst		1640933	0					
ANR	1641737	Identifier	inst		1640933	0					
ANR	1641738	Argument	inp_flags		1640933	1					
ANR	1641739	Identifier	inp_flags		1640933	0					
ANR	1641740	Argument	reg		1640933	2					
ANR	1641741	Identifier	reg		1640933	0					
ANR	1641742	InclusiveOrExpression	A ( TMP_REG3 ) | IMM ( diff )		1640933	1		|			
ANR	1641743	CallExpression	A ( TMP_REG3 )		1640933	0					
ANR	1641744	Callee	A		1640933	0					
ANR	1641745	Identifier	A		1640933	0					
ANR	1641746	ArgumentList	TMP_REG3		1640933	1					
ANR	1641747	Argument	TMP_REG3		1640933	0					
ANR	1641748	Identifier	TMP_REG3		1640933	0					
ANR	1641749	CallExpression	IMM ( diff )		1640933	1					
ANR	1641750	Callee	IMM		1640933	0					
ANR	1641751	Identifier	IMM		1640933	0					
ANR	1641752	ArgumentList	diff		1640933	1					
ANR	1641753	Argument	diff		1640933	0					
ANR	1641754	Identifier	diff		1640933	0					
ANR	1641755	IfStatement	if ( ( compiler -> cache_arg & SLJIT_IMM ) && diff <= SIMM_MAX && diff >= SIMM_MIN )		1640933	15					
ANR	1641756	Condition	( compiler -> cache_arg & SLJIT_IMM ) && diff <= SIMM_MAX && diff >= SIMM_MIN	1058:5:34810:34882	1640933	0	True				
ANR	1641757	AndExpression	( compiler -> cache_arg & SLJIT_IMM ) && diff <= SIMM_MAX && diff >= SIMM_MIN		1640933	0		&&			
ANR	1641758	BitAndExpression	compiler -> cache_arg & SLJIT_IMM		1640933	0		&			
ANR	1641759	PtrMemberAccess	compiler -> cache_arg		1640933	0					
ANR	1641760	Identifier	compiler		1640933	0					
ANR	1641761	Identifier	cache_arg		1640933	1					
ANR	1641762	Identifier	SLJIT_IMM		1640933	1					
ANR	1641763	AndExpression	diff <= SIMM_MAX && diff >= SIMM_MIN		1640933	1		&&			
ANR	1641764	RelationalExpression	diff <= SIMM_MAX		1640933	0		<=			
ANR	1641765	Identifier	diff		1640933	0					
ANR	1641766	Identifier	SIMM_MAX		1640933	1					
ANR	1641767	RelationalExpression	diff >= SIMM_MIN		1640933	1		>=			
ANR	1641768	Identifier	diff		1640933	0					
ANR	1641769	Identifier	SIMM_MIN		1640933	1					
ANR	1641770	CompoundStatement		115:80:4097:4097	1640933	1					
ANR	1641771	ExpressionStatement	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]	1059:2:34889:34949	1640933	0	True				
ANR	1641772	AssignmentExpression	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1640933	0		=			
ANR	1641773	Identifier	inst		1640933	0					
ANR	1641774	ArrayIndexing	data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1640933	1					
ANR	1641775	Identifier	data_transfer_insts		1640933	0					
ANR	1641776	BitAndExpression	( inp_flags | INDEXED ) & MEM_MASK		1640933	1		&			
ANR	1641777	InclusiveOrExpression	inp_flags | INDEXED		1640933	0		|			
ANR	1641778	Identifier	inp_flags		1640933	0					
ANR	1641779	Identifier	INDEXED		1640933	1					
ANR	1641780	Identifier	MEM_MASK		1640933	1					
ANR	1641781	ExpressionStatement	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )	1060:2:34953:35003	1640933	1	True				
ANR	1641782	CallExpression	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )		1640933	0					
ANR	1641783	Callee	SLJIT_ASSERT		1640933	0					
ANR	1641784	Identifier	SLJIT_ASSERT		1640933	0					
ANR	1641785	ArgumentList	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1640933	1					
ANR	1641786	Argument	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1640933	0					
ANR	1641787	UnaryOperationExpression	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1640933	0					
ANR	1641788	UnaryOperator	!		1640933	0					
ANR	1641789	BitAndExpression	inst & ( INT_ALIGNED | UPDATE_REQ )		1640933	1		&			
ANR	1641790	Identifier	inst		1640933	0					
ANR	1641791	InclusiveOrExpression	INT_ALIGNED | UPDATE_REQ		1640933	1		|			
ANR	1641792	Identifier	INT_ALIGNED		1640933	0					
ANR	1641793	Identifier	UPDATE_REQ		1640933	1					
ANR	1641794	IfStatement	if ( compiler -> cache_argw != argw )		1640933	2					
ANR	1641795	Condition	compiler -> cache_argw != argw	1061:6:35011:35038	1640933	0	True				
ANR	1641796	EqualityExpression	compiler -> cache_argw != argw		1640933	0		!=			
ANR	1641797	PtrMemberAccess	compiler -> cache_argw		1640933	0					
ANR	1641798	Identifier	compiler		1640933	0					
ANR	1641799	Identifier	cache_argw		1640933	1					
ANR	1641800	Identifier	argw		1640933	1					
ANR	1641801	CompoundStatement		118:36:4253:4253	1640933	1					
ANR	1641802	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADDI | D ( TMP_REG3 ) | A ( TMP_REG3 ) | IMM ( diff ) ) )"	1062:3:35046:35120	1640933	0	True				
ANR	1641803	CallExpression	"FAIL_IF ( push_inst ( compiler , ADDI | D ( TMP_REG3 ) | A ( TMP_REG3 ) | IMM ( diff ) ) )"		1640933	0					
ANR	1641804	Callee	FAIL_IF		1640933	0					
ANR	1641805	Identifier	FAIL_IF		1640933	0					
ANR	1641806	ArgumentList	"push_inst ( compiler , ADDI | D ( TMP_REG3 ) | A ( TMP_REG3 ) | IMM ( diff ) )"		1640933	1					
ANR	1641807	Argument	"push_inst ( compiler , ADDI | D ( TMP_REG3 ) | A ( TMP_REG3 ) | IMM ( diff ) )"		1640933	0					
ANR	1641808	CallExpression	"push_inst ( compiler , ADDI | D ( TMP_REG3 ) | A ( TMP_REG3 ) | IMM ( diff ) )"		1640933	0					
ANR	1641809	Callee	push_inst		1640933	0					
ANR	1641810	Identifier	push_inst		1640933	0					
ANR	1641811	ArgumentList	compiler		1640933	1					
ANR	1641812	Argument	compiler		1640933	0					
ANR	1641813	Identifier	compiler		1640933	0					
ANR	1641814	Argument	ADDI | D ( TMP_REG3 ) | A ( TMP_REG3 ) | IMM ( diff )		1640933	1					
ANR	1641815	InclusiveOrExpression	ADDI | D ( TMP_REG3 ) | A ( TMP_REG3 ) | IMM ( diff )		1640933	0		|			
ANR	1641816	Identifier	ADDI		1640933	0					
ANR	1641817	InclusiveOrExpression	D ( TMP_REG3 ) | A ( TMP_REG3 ) | IMM ( diff )		1640933	1		|			
ANR	1641818	CallExpression	D ( TMP_REG3 )		1640933	0					
ANR	1641819	Callee	D		1640933	0					
ANR	1641820	Identifier	D		1640933	0					
ANR	1641821	ArgumentList	TMP_REG3		1640933	1					
ANR	1641822	Argument	TMP_REG3		1640933	0					
ANR	1641823	Identifier	TMP_REG3		1640933	0					
ANR	1641824	InclusiveOrExpression	A ( TMP_REG3 ) | IMM ( diff )		1640933	1		|			
ANR	1641825	CallExpression	A ( TMP_REG3 )		1640933	0					
ANR	1641826	Callee	A		1640933	0					
ANR	1641827	Identifier	A		1640933	0					
ANR	1641828	ArgumentList	TMP_REG3		1640933	1					
ANR	1641829	Argument	TMP_REG3		1640933	0					
ANR	1641830	Identifier	TMP_REG3		1640933	0					
ANR	1641831	CallExpression	IMM ( diff )		1640933	1					
ANR	1641832	Callee	IMM		1640933	0					
ANR	1641833	Identifier	IMM		1640933	0					
ANR	1641834	ArgumentList	diff		1640933	1					
ANR	1641835	Argument	diff		1640933	0					
ANR	1641836	Identifier	diff		1640933	0					
ANR	1641837	ExpressionStatement	compiler -> cache_argw = argw	1063:3:35125:35152	1640933	1	True				
ANR	1641838	AssignmentExpression	compiler -> cache_argw = argw		1640933	0		=			
ANR	1641839	PtrMemberAccess	compiler -> cache_argw		1640933	0					
ANR	1641840	Identifier	compiler		1640933	0					
ANR	1641841	Identifier	cache_argw		1640933	1					
ANR	1641842	Identifier	argw		1640933	1					
ANR	1641843	ReturnStatement	"return push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( TMP_REG3 ) ) ;"	1065:2:35160:35261	1640933	3	True				
ANR	1641844	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( TMP_REG3 ) )"		1640933	0					
ANR	1641845	Callee	push_inst		1640933	0					
ANR	1641846	Identifier	push_inst		1640933	0					
ANR	1641847	ArgumentList	compiler		1640933	1					
ANR	1641848	Argument	compiler		1640933	0					
ANR	1641849	Identifier	compiler		1640933	0					
ANR	1641850	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( TMP_REG3 )"		1640933	1					
ANR	1641851	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( TMP_REG3 )"		1640933	0		|			
ANR	1641852	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1640933	0					
ANR	1641853	Callee	INST_CODE_AND_DST		1640933	0					
ANR	1641854	Identifier	INST_CODE_AND_DST		1640933	0					
ANR	1641855	ArgumentList	inst		1640933	1					
ANR	1641856	Argument	inst		1640933	0					
ANR	1641857	Identifier	inst		1640933	0					
ANR	1641858	Argument	inp_flags		1640933	1					
ANR	1641859	Identifier	inp_flags		1640933	0					
ANR	1641860	Argument	reg		1640933	2					
ANR	1641861	Identifier	reg		1640933	0					
ANR	1641862	InclusiveOrExpression	A ( arg & REG_MASK ) | B ( TMP_REG3 )		1640933	1		|			
ANR	1641863	CallExpression	A ( arg & REG_MASK )		1640933	0					
ANR	1641864	Callee	A		1640933	0					
ANR	1641865	Identifier	A		1640933	0					
ANR	1641866	ArgumentList	arg & REG_MASK		1640933	1					
ANR	1641867	Argument	arg & REG_MASK		1640933	0					
ANR	1641868	BitAndExpression	arg & REG_MASK		1640933	0		&			
ANR	1641869	Identifier	arg		1640933	0					
ANR	1641870	Identifier	REG_MASK		1640933	1					
ANR	1641871	CallExpression	B ( TMP_REG3 )		1640933	1					
ANR	1641872	Callee	B		1640933	0					
ANR	1641873	Identifier	B		1640933	0					
ANR	1641874	ArgumentList	TMP_REG3		1640933	1					
ANR	1641875	Argument	TMP_REG3		1640933	0					
ANR	1641876	Identifier	TMP_REG3		1640933	0					
ANR	1641877	IfStatement	if ( argw == next_argw && ( next_arg & SLJIT_MEM ) )		1640933	16					
ANR	1641878	Condition	argw == next_argw && ( next_arg & SLJIT_MEM )	1068:5:35272:35314	1640933	0	True				
ANR	1641879	AndExpression	argw == next_argw && ( next_arg & SLJIT_MEM )		1640933	0		&&			
ANR	1641880	EqualityExpression	argw == next_argw		1640933	0		==			
ANR	1641881	Identifier	argw		1640933	0					
ANR	1641882	Identifier	next_argw		1640933	1					
ANR	1641883	BitAndExpression	next_arg & SLJIT_MEM		1640933	1		&			
ANR	1641884	Identifier	next_arg		1640933	0					
ANR	1641885	Identifier	SLJIT_MEM		1640933	1					
ANR	1641886	CompoundStatement		125:50:4529:4529	1640933	1					
ANR	1641887	ExpressionStatement	SLJIT_ASSERT ( inp_flags & LOAD_DATA )	1069:2:35321:35356	1640933	0	True				
ANR	1641888	CallExpression	SLJIT_ASSERT ( inp_flags & LOAD_DATA )		1640933	0					
ANR	1641889	Callee	SLJIT_ASSERT		1640933	0					
ANR	1641890	Identifier	SLJIT_ASSERT		1640933	0					
ANR	1641891	ArgumentList	inp_flags & LOAD_DATA		1640933	1					
ANR	1641892	Argument	inp_flags & LOAD_DATA		1640933	0					
ANR	1641893	BitAndExpression	inp_flags & LOAD_DATA		1640933	0		&			
ANR	1641894	Identifier	inp_flags		1640933	0					
ANR	1641895	Identifier	LOAD_DATA		1640933	1					
ANR	1641896	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"	1070:2:35360:35409	1640933	1	True				
ANR	1641897	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"		1640933	0					
ANR	1641898	Callee	FAIL_IF		1640933	0					
ANR	1641899	Identifier	FAIL_IF		1640933	0					
ANR	1641900	ArgumentList	"load_immediate ( compiler , TMP_REG3 , argw )"		1640933	1					
ANR	1641901	Argument	"load_immediate ( compiler , TMP_REG3 , argw )"		1640933	0					
ANR	1641902	CallExpression	"load_immediate ( compiler , TMP_REG3 , argw )"		1640933	0					
ANR	1641903	Callee	load_immediate		1640933	0					
ANR	1641904	Identifier	load_immediate		1640933	0					
ANR	1641905	ArgumentList	compiler		1640933	1					
ANR	1641906	Argument	compiler		1640933	0					
ANR	1641907	Identifier	compiler		1640933	0					
ANR	1641908	Argument	TMP_REG3		1640933	1					
ANR	1641909	Identifier	TMP_REG3		1640933	0					
ANR	1641910	Argument	argw		1640933	2					
ANR	1641911	Identifier	argw		1640933	0					
ANR	1641912	ExpressionStatement	compiler -> cache_arg = SLJIT_IMM	1072:2:35414:35445	1640933	2	True				
ANR	1641913	AssignmentExpression	compiler -> cache_arg = SLJIT_IMM		1640933	0		=			
ANR	1641914	PtrMemberAccess	compiler -> cache_arg		1640933	0					
ANR	1641915	Identifier	compiler		1640933	0					
ANR	1641916	Identifier	cache_arg		1640933	1					
ANR	1641917	Identifier	SLJIT_IMM		1640933	1					
ANR	1641918	ExpressionStatement	compiler -> cache_argw = argw	1073:2:35449:35476	1640933	3	True				
ANR	1641919	AssignmentExpression	compiler -> cache_argw = argw		1640933	0		=			
ANR	1641920	PtrMemberAccess	compiler -> cache_argw		1640933	0					
ANR	1641921	Identifier	compiler		1640933	0					
ANR	1641922	Identifier	cache_argw		1640933	1					
ANR	1641923	Identifier	argw		1640933	1					
ANR	1641924	ExpressionStatement	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]	1075:2:35481:35541	1640933	4	True				
ANR	1641925	AssignmentExpression	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1640933	0		=			
ANR	1641926	Identifier	inst		1640933	0					
ANR	1641927	ArrayIndexing	data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1640933	1					
ANR	1641928	Identifier	data_transfer_insts		1640933	0					
ANR	1641929	BitAndExpression	( inp_flags | INDEXED ) & MEM_MASK		1640933	1		&			
ANR	1641930	InclusiveOrExpression	inp_flags | INDEXED		1640933	0		|			
ANR	1641931	Identifier	inp_flags		1640933	0					
ANR	1641932	Identifier	INDEXED		1640933	1					
ANR	1641933	Identifier	MEM_MASK		1640933	1					
ANR	1641934	ExpressionStatement	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )	1076:2:35545:35595	1640933	5	True				
ANR	1641935	CallExpression	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )		1640933	0					
ANR	1641936	Callee	SLJIT_ASSERT		1640933	0					
ANR	1641937	Identifier	SLJIT_ASSERT		1640933	0					
ANR	1641938	ArgumentList	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1640933	1					
ANR	1641939	Argument	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1640933	0					
ANR	1641940	UnaryOperationExpression	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1640933	0					
ANR	1641941	UnaryOperator	!		1640933	0					
ANR	1641942	BitAndExpression	inst & ( INT_ALIGNED | UPDATE_REQ )		1640933	1		&			
ANR	1641943	Identifier	inst		1640933	0					
ANR	1641944	InclusiveOrExpression	INT_ALIGNED | UPDATE_REQ		1640933	1		|			
ANR	1641945	Identifier	INT_ALIGNED		1640933	0					
ANR	1641946	Identifier	UPDATE_REQ		1640933	1					
ANR	1641947	ReturnStatement	"return push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( TMP_REG3 ) ) ;"	1077:2:35599:35700	1640933	6	True				
ANR	1641948	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( TMP_REG3 ) )"		1640933	0					
ANR	1641949	Callee	push_inst		1640933	0					
ANR	1641950	Identifier	push_inst		1640933	0					
ANR	1641951	ArgumentList	compiler		1640933	1					
ANR	1641952	Argument	compiler		1640933	0					
ANR	1641953	Identifier	compiler		1640933	0					
ANR	1641954	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( TMP_REG3 )"		1640933	1					
ANR	1641955	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( TMP_REG3 )"		1640933	0		|			
ANR	1641956	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1640933	0					
ANR	1641957	Callee	INST_CODE_AND_DST		1640933	0					
ANR	1641958	Identifier	INST_CODE_AND_DST		1640933	0					
ANR	1641959	ArgumentList	inst		1640933	1					
ANR	1641960	Argument	inst		1640933	0					
ANR	1641961	Identifier	inst		1640933	0					
ANR	1641962	Argument	inp_flags		1640933	1					
ANR	1641963	Identifier	inp_flags		1640933	0					
ANR	1641964	Argument	reg		1640933	2					
ANR	1641965	Identifier	reg		1640933	0					
ANR	1641966	InclusiveOrExpression	A ( arg & REG_MASK ) | B ( TMP_REG3 )		1640933	1		|			
ANR	1641967	CallExpression	A ( arg & REG_MASK )		1640933	0					
ANR	1641968	Callee	A		1640933	0					
ANR	1641969	Identifier	A		1640933	0					
ANR	1641970	ArgumentList	arg & REG_MASK		1640933	1					
ANR	1641971	Argument	arg & REG_MASK		1640933	0					
ANR	1641972	BitAndExpression	arg & REG_MASK		1640933	0		&			
ANR	1641973	Identifier	arg		1640933	0					
ANR	1641974	Identifier	REG_MASK		1640933	1					
ANR	1641975	CallExpression	B ( TMP_REG3 )		1640933	1					
ANR	1641976	Callee	B		1640933	0					
ANR	1641977	Identifier	B		1640933	0					
ANR	1641978	ArgumentList	TMP_REG3		1640933	1					
ANR	1641979	Argument	TMP_REG3		1640933	0					
ANR	1641980	Identifier	TMP_REG3		1640933	0					
ANR	1641981	ExpressionStatement	diff = argw - next_argw	1080:1:35707:35730	1640933	17	True				
ANR	1641982	AssignmentExpression	diff = argw - next_argw		1640933	0		=			
ANR	1641983	Identifier	diff		1640933	0					
ANR	1641984	AdditiveExpression	argw - next_argw		1640933	1		-			
ANR	1641985	Identifier	argw		1640933	0					
ANR	1641986	Identifier	next_argw		1640933	1					
ANR	1641987	IfStatement	if ( arg == next_arg && ! ( inp_flags & WRITE_BACK ) && diff <= SIMM_MAX && diff >= SIMM_MIN )		1640933	18					
ANR	1641988	Condition	arg == next_arg && ! ( inp_flags & WRITE_BACK ) && diff <= SIMM_MAX && diff >= SIMM_MIN	1081:5:35737:35820	1640933	0	True				
ANR	1641989	AndExpression	arg == next_arg && ! ( inp_flags & WRITE_BACK ) && diff <= SIMM_MAX && diff >= SIMM_MIN		1640933	0		&&			
ANR	1641990	EqualityExpression	arg == next_arg		1640933	0		==			
ANR	1641991	Identifier	arg		1640933	0					
ANR	1641992	Identifier	next_arg		1640933	1					
ANR	1641993	AndExpression	! ( inp_flags & WRITE_BACK ) && diff <= SIMM_MAX && diff >= SIMM_MIN		1640933	1		&&			
ANR	1641994	UnaryOperationExpression	! ( inp_flags & WRITE_BACK )		1640933	0					
ANR	1641995	UnaryOperator	!		1640933	0					
ANR	1641996	BitAndExpression	inp_flags & WRITE_BACK		1640933	1		&			
ANR	1641997	Identifier	inp_flags		1640933	0					
ANR	1641998	Identifier	WRITE_BACK		1640933	1					
ANR	1641999	AndExpression	diff <= SIMM_MAX && diff >= SIMM_MIN		1640933	1		&&			
ANR	1642000	RelationalExpression	diff <= SIMM_MAX		1640933	0		<=			
ANR	1642001	Identifier	diff		1640933	0					
ANR	1642002	Identifier	SIMM_MAX		1640933	1					
ANR	1642003	RelationalExpression	diff >= SIMM_MIN		1640933	1		>=			
ANR	1642004	Identifier	diff		1640933	0					
ANR	1642005	Identifier	SIMM_MIN		1640933	1					
ANR	1642006	CompoundStatement		138:91:5035:5035	1640933	1					
ANR	1642007	ExpressionStatement	SLJIT_ASSERT ( inp_flags & LOAD_DATA )	1082:2:35827:35862	1640933	0	True				
ANR	1642008	CallExpression	SLJIT_ASSERT ( inp_flags & LOAD_DATA )		1640933	0					
ANR	1642009	Callee	SLJIT_ASSERT		1640933	0					
ANR	1642010	Identifier	SLJIT_ASSERT		1640933	0					
ANR	1642011	ArgumentList	inp_flags & LOAD_DATA		1640933	1					
ANR	1642012	Argument	inp_flags & LOAD_DATA		1640933	0					
ANR	1642013	BitAndExpression	inp_flags & LOAD_DATA		1640933	0		&			
ANR	1642014	Identifier	inp_flags		1640933	0					
ANR	1642015	Identifier	LOAD_DATA		1640933	1					
ANR	1642016	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"	1083:2:35866:35915	1640933	1	True				
ANR	1642017	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"		1640933	0					
ANR	1642018	Callee	FAIL_IF		1640933	0					
ANR	1642019	Identifier	FAIL_IF		1640933	0					
ANR	1642020	ArgumentList	"load_immediate ( compiler , TMP_REG3 , argw )"		1640933	1					
ANR	1642021	Argument	"load_immediate ( compiler , TMP_REG3 , argw )"		1640933	0					
ANR	1642022	CallExpression	"load_immediate ( compiler , TMP_REG3 , argw )"		1640933	0					
ANR	1642023	Callee	load_immediate		1640933	0					
ANR	1642024	Identifier	load_immediate		1640933	0					
ANR	1642025	ArgumentList	compiler		1640933	1					
ANR	1642026	Argument	compiler		1640933	0					
ANR	1642027	Identifier	compiler		1640933	0					
ANR	1642028	Argument	TMP_REG3		1640933	1					
ANR	1642029	Identifier	TMP_REG3		1640933	0					
ANR	1642030	Argument	argw		1640933	2					
ANR	1642031	Identifier	argw		1640933	0					
ANR	1642032	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ADD | D ( TMP_REG3 ) | A ( TMP_REG3 ) | B ( arg & REG_MASK ) ) )"	1084:2:35919:36000	1640933	2	True				
ANR	1642033	CallExpression	"FAIL_IF ( push_inst ( compiler , ADD | D ( TMP_REG3 ) | A ( TMP_REG3 ) | B ( arg & REG_MASK ) ) )"		1640933	0					
ANR	1642034	Callee	FAIL_IF		1640933	0					
ANR	1642035	Identifier	FAIL_IF		1640933	0					
ANR	1642036	ArgumentList	"push_inst ( compiler , ADD | D ( TMP_REG3 ) | A ( TMP_REG3 ) | B ( arg & REG_MASK ) )"		1640933	1					
ANR	1642037	Argument	"push_inst ( compiler , ADD | D ( TMP_REG3 ) | A ( TMP_REG3 ) | B ( arg & REG_MASK ) )"		1640933	0					
ANR	1642038	CallExpression	"push_inst ( compiler , ADD | D ( TMP_REG3 ) | A ( TMP_REG3 ) | B ( arg & REG_MASK ) )"		1640933	0					
ANR	1642039	Callee	push_inst		1640933	0					
ANR	1642040	Identifier	push_inst		1640933	0					
ANR	1642041	ArgumentList	compiler		1640933	1					
ANR	1642042	Argument	compiler		1640933	0					
ANR	1642043	Identifier	compiler		1640933	0					
ANR	1642044	Argument	ADD | D ( TMP_REG3 ) | A ( TMP_REG3 ) | B ( arg & REG_MASK )		1640933	1					
ANR	1642045	InclusiveOrExpression	ADD | D ( TMP_REG3 ) | A ( TMP_REG3 ) | B ( arg & REG_MASK )		1640933	0		|			
ANR	1642046	Identifier	ADD		1640933	0					
ANR	1642047	InclusiveOrExpression	D ( TMP_REG3 ) | A ( TMP_REG3 ) | B ( arg & REG_MASK )		1640933	1		|			
ANR	1642048	CallExpression	D ( TMP_REG3 )		1640933	0					
ANR	1642049	Callee	D		1640933	0					
ANR	1642050	Identifier	D		1640933	0					
ANR	1642051	ArgumentList	TMP_REG3		1640933	1					
ANR	1642052	Argument	TMP_REG3		1640933	0					
ANR	1642053	Identifier	TMP_REG3		1640933	0					
ANR	1642054	InclusiveOrExpression	A ( TMP_REG3 ) | B ( arg & REG_MASK )		1640933	1		|			
ANR	1642055	CallExpression	A ( TMP_REG3 )		1640933	0					
ANR	1642056	Callee	A		1640933	0					
ANR	1642057	Identifier	A		1640933	0					
ANR	1642058	ArgumentList	TMP_REG3		1640933	1					
ANR	1642059	Argument	TMP_REG3		1640933	0					
ANR	1642060	Identifier	TMP_REG3		1640933	0					
ANR	1642061	CallExpression	B ( arg & REG_MASK )		1640933	1					
ANR	1642062	Callee	B		1640933	0					
ANR	1642063	Identifier	B		1640933	0					
ANR	1642064	ArgumentList	arg & REG_MASK		1640933	1					
ANR	1642065	Argument	arg & REG_MASK		1640933	0					
ANR	1642066	BitAndExpression	arg & REG_MASK		1640933	0		&			
ANR	1642067	Identifier	arg		1640933	0					
ANR	1642068	Identifier	REG_MASK		1640933	1					
ANR	1642069	ExpressionStatement	compiler -> cache_arg = arg	1086:2:36005:36030	1640933	3	True				
ANR	1642070	AssignmentExpression	compiler -> cache_arg = arg		1640933	0		=			
ANR	1642071	PtrMemberAccess	compiler -> cache_arg		1640933	0					
ANR	1642072	Identifier	compiler		1640933	0					
ANR	1642073	Identifier	cache_arg		1640933	1					
ANR	1642074	Identifier	arg		1640933	1					
ANR	1642075	ExpressionStatement	compiler -> cache_argw = argw	1087:2:36034:36061	1640933	4	True				
ANR	1642076	AssignmentExpression	compiler -> cache_argw = argw		1640933	0		=			
ANR	1642077	PtrMemberAccess	compiler -> cache_argw		1640933	0					
ANR	1642078	Identifier	compiler		1640933	0					
ANR	1642079	Identifier	cache_argw		1640933	1					
ANR	1642080	Identifier	argw		1640933	1					
ANR	1642081	ReturnStatement	"return push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) ) ;"	1089:2:36066:36147	1640933	5	True				
ANR	1642082	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 ) )"		1640933	0					
ANR	1642083	Callee	push_inst		1640933	0					
ANR	1642084	Identifier	push_inst		1640933	0					
ANR	1642085	ArgumentList	compiler		1640933	1					
ANR	1642086	Argument	compiler		1640933	0					
ANR	1642087	Identifier	compiler		1640933	0					
ANR	1642088	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 )"		1640933	1					
ANR	1642089	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( TMP_REG3 )"		1640933	0		|			
ANR	1642090	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1640933	0					
ANR	1642091	Callee	INST_CODE_AND_DST		1640933	0					
ANR	1642092	Identifier	INST_CODE_AND_DST		1640933	0					
ANR	1642093	ArgumentList	inst		1640933	1					
ANR	1642094	Argument	inst		1640933	0					
ANR	1642095	Identifier	inst		1640933	0					
ANR	1642096	Argument	inp_flags		1640933	1					
ANR	1642097	Identifier	inp_flags		1640933	0					
ANR	1642098	Argument	reg		1640933	2					
ANR	1642099	Identifier	reg		1640933	0					
ANR	1642100	CallExpression	A ( TMP_REG3 )		1640933	1					
ANR	1642101	Callee	A		1640933	0					
ANR	1642102	Identifier	A		1640933	0					
ANR	1642103	ArgumentList	TMP_REG3		1640933	1					
ANR	1642104	Argument	TMP_REG3		1640933	0					
ANR	1642105	Identifier	TMP_REG3		1640933	0					
ANR	1642106	IfStatement	if ( ( next_arg & SLJIT_MEM ) && ! ( next_arg & OFFS_REG_MASK ) && diff <= SIMM_MAX && diff >= SIMM_MIN )		1640933	19					
ANR	1642107	Condition	( next_arg & SLJIT_MEM ) && ! ( next_arg & OFFS_REG_MASK ) && diff <= SIMM_MAX && diff >= SIMM_MIN	1092:5:36158:36250	1640933	0	True				
ANR	1642108	AndExpression	( next_arg & SLJIT_MEM ) && ! ( next_arg & OFFS_REG_MASK ) && diff <= SIMM_MAX && diff >= SIMM_MIN		1640933	0		&&			
ANR	1642109	BitAndExpression	next_arg & SLJIT_MEM		1640933	0		&			
ANR	1642110	Identifier	next_arg		1640933	0					
ANR	1642111	Identifier	SLJIT_MEM		1640933	1					
ANR	1642112	AndExpression	! ( next_arg & OFFS_REG_MASK ) && diff <= SIMM_MAX && diff >= SIMM_MIN		1640933	1		&&			
ANR	1642113	UnaryOperationExpression	! ( next_arg & OFFS_REG_MASK )		1640933	0					
ANR	1642114	UnaryOperator	!		1640933	0					
ANR	1642115	BitAndExpression	next_arg & OFFS_REG_MASK		1640933	1		&			
ANR	1642116	Identifier	next_arg		1640933	0					
ANR	1642117	Identifier	OFFS_REG_MASK		1640933	1					
ANR	1642118	AndExpression	diff <= SIMM_MAX && diff >= SIMM_MIN		1640933	1		&&			
ANR	1642119	RelationalExpression	diff <= SIMM_MAX		1640933	0		<=			
ANR	1642120	Identifier	diff		1640933	0					
ANR	1642121	Identifier	SIMM_MAX		1640933	1					
ANR	1642122	RelationalExpression	diff >= SIMM_MIN		1640933	1		>=			
ANR	1642123	Identifier	diff		1640933	0					
ANR	1642124	Identifier	SIMM_MIN		1640933	1					
ANR	1642125	CompoundStatement		149:100:5465:5465	1640933	1					
ANR	1642126	ExpressionStatement	SLJIT_ASSERT ( inp_flags & LOAD_DATA )	1093:2:36257:36292	1640933	0	True				
ANR	1642127	CallExpression	SLJIT_ASSERT ( inp_flags & LOAD_DATA )		1640933	0					
ANR	1642128	Callee	SLJIT_ASSERT		1640933	0					
ANR	1642129	Identifier	SLJIT_ASSERT		1640933	0					
ANR	1642130	ArgumentList	inp_flags & LOAD_DATA		1640933	1					
ANR	1642131	Argument	inp_flags & LOAD_DATA		1640933	0					
ANR	1642132	BitAndExpression	inp_flags & LOAD_DATA		1640933	0		&			
ANR	1642133	Identifier	inp_flags		1640933	0					
ANR	1642134	Identifier	LOAD_DATA		1640933	1					
ANR	1642135	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"	1094:2:36296:36345	1640933	1	True				
ANR	1642136	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG3 , argw ) )"		1640933	0					
ANR	1642137	Callee	FAIL_IF		1640933	0					
ANR	1642138	Identifier	FAIL_IF		1640933	0					
ANR	1642139	ArgumentList	"load_immediate ( compiler , TMP_REG3 , argw )"		1640933	1					
ANR	1642140	Argument	"load_immediate ( compiler , TMP_REG3 , argw )"		1640933	0					
ANR	1642141	CallExpression	"load_immediate ( compiler , TMP_REG3 , argw )"		1640933	0					
ANR	1642142	Callee	load_immediate		1640933	0					
ANR	1642143	Identifier	load_immediate		1640933	0					
ANR	1642144	ArgumentList	compiler		1640933	1					
ANR	1642145	Argument	compiler		1640933	0					
ANR	1642146	Identifier	compiler		1640933	0					
ANR	1642147	Argument	TMP_REG3		1640933	1					
ANR	1642148	Identifier	TMP_REG3		1640933	0					
ANR	1642149	Argument	argw		1640933	2					
ANR	1642150	Identifier	argw		1640933	0					
ANR	1642151	ExpressionStatement	compiler -> cache_arg = SLJIT_IMM	1096:2:36350:36381	1640933	2	True				
ANR	1642152	AssignmentExpression	compiler -> cache_arg = SLJIT_IMM		1640933	0		=			
ANR	1642153	PtrMemberAccess	compiler -> cache_arg		1640933	0					
ANR	1642154	Identifier	compiler		1640933	0					
ANR	1642155	Identifier	cache_arg		1640933	1					
ANR	1642156	Identifier	SLJIT_IMM		1640933	1					
ANR	1642157	ExpressionStatement	compiler -> cache_argw = argw	1097:2:36385:36412	1640933	3	True				
ANR	1642158	AssignmentExpression	compiler -> cache_argw = argw		1640933	0		=			
ANR	1642159	PtrMemberAccess	compiler -> cache_argw		1640933	0					
ANR	1642160	Identifier	compiler		1640933	0					
ANR	1642161	Identifier	cache_argw		1640933	1					
ANR	1642162	Identifier	argw		1640933	1					
ANR	1642163	ExpressionStatement	tmp_r = TMP_REG3	1098:2:36416:36432	1640933	4	True				
ANR	1642164	AssignmentExpression	tmp_r = TMP_REG3		1640933	0		=			
ANR	1642165	Identifier	tmp_r		1640933	0					
ANR	1642166	Identifier	TMP_REG3		1640933	1					
ANR	1642167	ElseStatement	else		1640933	0					
ANR	1642168	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , tmp_r , argw ) )"	1101:2:36445:36491	1640933	0	True				
ANR	1642169	CallExpression	"FAIL_IF ( load_immediate ( compiler , tmp_r , argw ) )"		1640933	0					
ANR	1642170	Callee	FAIL_IF		1640933	0					
ANR	1642171	Identifier	FAIL_IF		1640933	0					
ANR	1642172	ArgumentList	"load_immediate ( compiler , tmp_r , argw )"		1640933	1					
ANR	1642173	Argument	"load_immediate ( compiler , tmp_r , argw )"		1640933	0					
ANR	1642174	CallExpression	"load_immediate ( compiler , tmp_r , argw )"		1640933	0					
ANR	1642175	Callee	load_immediate		1640933	0					
ANR	1642176	Identifier	load_immediate		1640933	0					
ANR	1642177	ArgumentList	compiler		1640933	1					
ANR	1642178	Argument	compiler		1640933	0					
ANR	1642179	Identifier	compiler		1640933	0					
ANR	1642180	Argument	tmp_r		1640933	1					
ANR	1642181	Identifier	tmp_r		1640933	0					
ANR	1642182	Argument	argw		1640933	2					
ANR	1642183	Identifier	argw		1640933	0					
ANR	1642184	ExpressionStatement	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]	1104:1:36553:36613	1640933	20	True				
ANR	1642185	AssignmentExpression	inst = data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1640933	0		=			
ANR	1642186	Identifier	inst		1640933	0					
ANR	1642187	ArrayIndexing	data_transfer_insts [ ( inp_flags | INDEXED ) & MEM_MASK ]		1640933	1					
ANR	1642188	Identifier	data_transfer_insts		1640933	0					
ANR	1642189	BitAndExpression	( inp_flags | INDEXED ) & MEM_MASK		1640933	1		&			
ANR	1642190	InclusiveOrExpression	inp_flags | INDEXED		1640933	0		|			
ANR	1642191	Identifier	inp_flags		1640933	0					
ANR	1642192	Identifier	INDEXED		1640933	1					
ANR	1642193	Identifier	MEM_MASK		1640933	1					
ANR	1642194	ExpressionStatement	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )	1105:1:36616:36666	1640933	21	True				
ANR	1642195	CallExpression	SLJIT_ASSERT ( ! ( inst & ( INT_ALIGNED | UPDATE_REQ ) ) )		1640933	0					
ANR	1642196	Callee	SLJIT_ASSERT		1640933	0					
ANR	1642197	Identifier	SLJIT_ASSERT		1640933	0					
ANR	1642198	ArgumentList	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1640933	1					
ANR	1642199	Argument	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1640933	0					
ANR	1642200	UnaryOperationExpression	! ( inst & ( INT_ALIGNED | UPDATE_REQ ) )		1640933	0					
ANR	1642201	UnaryOperator	!		1640933	0					
ANR	1642202	BitAndExpression	inst & ( INT_ALIGNED | UPDATE_REQ )		1640933	1		&			
ANR	1642203	Identifier	inst		1640933	0					
ANR	1642204	InclusiveOrExpression	INT_ALIGNED | UPDATE_REQ		1640933	1		|			
ANR	1642205	Identifier	INT_ALIGNED		1640933	0					
ANR	1642206	Identifier	UPDATE_REQ		1640933	1					
ANR	1642207	ReturnStatement	"return push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( tmp_r ) ) ;"	1106:1:36669:36767	1640933	22	True				
ANR	1642208	CallExpression	"push_inst ( compiler , INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( tmp_r ) )"		1640933	0					
ANR	1642209	Callee	push_inst		1640933	0					
ANR	1642210	Identifier	push_inst		1640933	0					
ANR	1642211	ArgumentList	compiler		1640933	1					
ANR	1642212	Argument	compiler		1640933	0					
ANR	1642213	Identifier	compiler		1640933	0					
ANR	1642214	Argument	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( tmp_r )"		1640933	1					
ANR	1642215	InclusiveOrExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg ) | A ( arg & REG_MASK ) | B ( tmp_r )"		1640933	0		|			
ANR	1642216	CallExpression	"INST_CODE_AND_DST ( inst , inp_flags , reg )"		1640933	0					
ANR	1642217	Callee	INST_CODE_AND_DST		1640933	0					
ANR	1642218	Identifier	INST_CODE_AND_DST		1640933	0					
ANR	1642219	ArgumentList	inst		1640933	1					
ANR	1642220	Argument	inst		1640933	0					
ANR	1642221	Identifier	inst		1640933	0					
ANR	1642222	Argument	inp_flags		1640933	1					
ANR	1642223	Identifier	inp_flags		1640933	0					
ANR	1642224	Argument	reg		1640933	2					
ANR	1642225	Identifier	reg		1640933	0					
ANR	1642226	InclusiveOrExpression	A ( arg & REG_MASK ) | B ( tmp_r )		1640933	1		|			
ANR	1642227	CallExpression	A ( arg & REG_MASK )		1640933	0					
ANR	1642228	Callee	A		1640933	0					
ANR	1642229	Identifier	A		1640933	0					
ANR	1642230	ArgumentList	arg & REG_MASK		1640933	1					
ANR	1642231	Argument	arg & REG_MASK		1640933	0					
ANR	1642232	BitAndExpression	arg & REG_MASK		1640933	0		&			
ANR	1642233	Identifier	arg		1640933	0					
ANR	1642234	Identifier	REG_MASK		1640933	1					
ANR	1642235	CallExpression	B ( tmp_r )		1640933	1					
ANR	1642236	Callee	B		1640933	0					
ANR	1642237	Identifier	B		1640933	0					
ANR	1642238	ArgumentList	tmp_r		1640933	1					
ANR	1642239	Argument	tmp_r		1640933	0					
ANR	1642240	Identifier	tmp_r		1640933	0					
ANR	1642241	ReturnType	static sljit_si		1640933	1					
ANR	1642242	Identifier	getput_arg		1640933	2					
ANR	1642243	ParameterList	"struct sljit_compiler * compiler , sljit_si inp_flags , sljit_si reg , sljit_si arg , sljit_sw argw , sljit_si next_arg , sljit_sw next_argw"		1640933	3					
ANR	1642244	Parameter	struct sljit_compiler * compiler	943:27:30652:30682	1640933	0	True				
ANR	1642245	ParameterType	struct sljit_compiler *		1640933	0					
ANR	1642246	Identifier	compiler		1640933	1					
ANR	1642247	Parameter	sljit_si inp_flags	943:60:30685:30702	1640933	1	True				
ANR	1642248	ParameterType	sljit_si		1640933	0					
ANR	1642249	Identifier	inp_flags		1640933	1					
ANR	1642250	Parameter	sljit_si reg	943:80:30705:30716	1640933	2	True				
ANR	1642251	ParameterType	sljit_si		1640933	0					
ANR	1642252	Identifier	reg		1640933	1					
ANR	1642253	Parameter	sljit_si arg	943:94:30719:30730	1640933	3	True				
ANR	1642254	ParameterType	sljit_si		1640933	0					
ANR	1642255	Identifier	arg		1640933	1					
ANR	1642256	Parameter	sljit_sw argw	943:108:30733:30745	1640933	4	True				
ANR	1642257	ParameterType	sljit_sw		1640933	0					
ANR	1642258	Identifier	argw		1640933	1					
ANR	1642259	Parameter	sljit_si next_arg	943:123:30748:30764	1640933	5	True				
ANR	1642260	ParameterType	sljit_si		1640933	0					
ANR	1642261	Identifier	next_arg		1640933	1					
ANR	1642262	Parameter	sljit_sw next_argw	943:142:30767:30784	1640933	6	True				
ANR	1642263	ParameterType	sljit_sw		1640933	0					
ANR	1642264	Identifier	next_argw		1640933	1					
ANR	1642265	CFGEntryNode	ENTRY		1640933		True				
ANR	1642266	CFGExitNode	EXIT		1640933		True				
ANR	1642267	Symbol	TMP_REG3		1640933						
ANR	1642268	Symbol	ADD		1640933						
ANR	1642269	Symbol	TMP_REG1		1640933						
ANR	1642270	Symbol	SLJIT_MEM		1640933						
ANR	1642271	Symbol	* compiler		1640933						
ANR	1642272	Symbol	SIMM_MAX		1640933						
ANR	1642273	Symbol	RLWINM		1640933						
ANR	1642274	Symbol	* inp_flags		1640933						
ANR	1642275	Symbol	SLJIT_IMM		1640933						
ANR	1642276	Symbol	reg		1640933						
ANR	1642277	Symbol	SIMM_MIN		1640933						
ANR	1642278	Symbol	* INDEXED		1640933						
ANR	1642279	Symbol	compiler -> cache_arg		1640933						
ANR	1642280	Symbol	OFFS_REG_MASK		1640933						
ANR	1642281	Symbol	IMM		1640933						
ANR	1642282	Symbol	next_argw		1640933						
ANR	1642283	Symbol	diff		1640933						
ANR	1642284	Symbol	* data_transfer_insts		1640933						
ANR	1642285	Symbol	~WRITE_BACK		1640933						
ANR	1642286	Symbol	GPR_REG		1640933						
ANR	1642287	Symbol	INT_ALIGNED		1640933						
ANR	1642288	Symbol	high_short		1640933						
ANR	1642289	Symbol	MEM_MASK		1640933						
ANR	1642290	Symbol	OFFS_REG		1640933						
ANR	1642291	Symbol	SLJIT_UNLIKELY		1640933						
ANR	1642292	Symbol	A		1640933						
ANR	1642293	Symbol	compiler -> cache_argw		1640933						
ANR	1642294	Symbol	B		1640933						
ANR	1642295	Symbol	~0xffff		1640933						
ANR	1642296	Symbol	LOAD_DATA		1640933						
ANR	1642297	Symbol	D		1640933						
ANR	1642298	Symbol	inp_flags		1640933						
ANR	1642299	Symbol	* MEM_MASK		1640933						
ANR	1642300	Symbol	argw		1640933						
ANR	1642301	Symbol	INDEXED		1640933						
ANR	1642302	Symbol	next_high_short		1640933						
ANR	1642303	Symbol	UPDATE_REQ		1640933						
ANR	1642304	Symbol	S		1640933						
ANR	1642305	Symbol	load_immediate		1640933						
ANR	1642306	Symbol	arg		1640933						
ANR	1642307	Symbol	ADDIS		1640933						
ANR	1642308	Symbol	compiler		1640933						
ANR	1642309	Symbol	INST_CODE_AND_DST		1640933						
ANR	1642310	Symbol	WRITE_BACK		1640933						
ANR	1642311	Symbol	tmp_r		1640933						
ANR	1642312	Symbol	next_arg		1640933						
ANR	1642313	Symbol	push_inst		1640933						
ANR	1642314	Symbol	REG_MASK		1640933						
ANR	1642315	Symbol	OR		1640933						
ANR	1642316	Symbol	data_transfer_insts		1640933						
ANR	1642317	Symbol	& MEM_MASK		1640933						
ANR	1642318	Symbol	ADDI		1640933						
ANR	1642319	Symbol	inst		1640933						
ANR	1642320	Function	emit_op_mem2	1110:0:36779:37099							
ANR	1642321	FunctionDef	"emit_op_mem2 (struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w)"		1642320	0					
ANR	1642322	CompoundStatement		1111:0:36946:37099	1642320	0					
ANR	1642323	IfStatement	"if ( getput_arg_fast ( compiler , flags , reg , arg1 , arg1w ) )"		1642320	0					
ANR	1642324	Condition	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"	1112:5:36953:37002	1642320	0	True				
ANR	1642325	CallExpression	"getput_arg_fast ( compiler , flags , reg , arg1 , arg1w )"		1642320	0					
ANR	1642326	Callee	getput_arg_fast		1642320	0					
ANR	1642327	Identifier	getput_arg_fast		1642320	0					
ANR	1642328	ArgumentList	compiler		1642320	1					
ANR	1642329	Argument	compiler		1642320	0					
ANR	1642330	Identifier	compiler		1642320	0					
ANR	1642331	Argument	flags		1642320	1					
ANR	1642332	Identifier	flags		1642320	0					
ANR	1642333	Argument	reg		1642320	2					
ANR	1642334	Identifier	reg		1642320	0					
ANR	1642335	Argument	arg1		1642320	3					
ANR	1642336	Identifier	arg1		1642320	0					
ANR	1642337	Argument	arg1w		1642320	4					
ANR	1642338	Identifier	arg1w		1642320	0					
ANR	1642339	ReturnStatement	return compiler -> error ;	1113:2:37007:37029	1642320	1	True				
ANR	1642340	PtrMemberAccess	compiler -> error		1642320	0					
ANR	1642341	Identifier	compiler		1642320	0					
ANR	1642342	Identifier	error		1642320	1					
ANR	1642343	ReturnStatement	"return getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w ) ;"	1114:1:37032:37097	1642320	1	True				
ANR	1642344	CallExpression	"getput_arg ( compiler , flags , reg , arg1 , arg1w , arg2 , arg2w )"		1642320	0					
ANR	1642345	Callee	getput_arg		1642320	0					
ANR	1642346	Identifier	getput_arg		1642320	0					
ANR	1642347	ArgumentList	compiler		1642320	1					
ANR	1642348	Argument	compiler		1642320	0					
ANR	1642349	Identifier	compiler		1642320	0					
ANR	1642350	Argument	flags		1642320	1					
ANR	1642351	Identifier	flags		1642320	0					
ANR	1642352	Argument	reg		1642320	2					
ANR	1642353	Identifier	reg		1642320	0					
ANR	1642354	Argument	arg1		1642320	3					
ANR	1642355	Identifier	arg1		1642320	0					
ANR	1642356	Argument	arg1w		1642320	4					
ANR	1642357	Identifier	arg1w		1642320	0					
ANR	1642358	Argument	arg2		1642320	5					
ANR	1642359	Identifier	arg2		1642320	0					
ANR	1642360	Argument	arg2w		1642320	6					
ANR	1642361	Identifier	arg2w		1642320	0					
ANR	1642362	ReturnType	static SLJIT_INLINE sljit_si		1642320	1					
ANR	1642363	Identifier	emit_op_mem2		1642320	2					
ANR	1642364	ParameterList	"struct sljit_compiler * compiler , sljit_si flags , sljit_si reg , sljit_si arg1 , sljit_sw arg1w , sljit_si arg2 , sljit_sw arg2w"		1642320	3					
ANR	1642365	Parameter	struct sljit_compiler * compiler	1110:42:36821:36851	1642320	0	True				
ANR	1642366	ParameterType	struct sljit_compiler *		1642320	0					
ANR	1642367	Identifier	compiler		1642320	1					
ANR	1642368	Parameter	sljit_si flags	1110:75:36854:36867	1642320	1	True				
ANR	1642369	ParameterType	sljit_si		1642320	0					
ANR	1642370	Identifier	flags		1642320	1					
ANR	1642371	Parameter	sljit_si reg	1110:91:36870:36881	1642320	2	True				
ANR	1642372	ParameterType	sljit_si		1642320	0					
ANR	1642373	Identifier	reg		1642320	1					
ANR	1642374	Parameter	sljit_si arg1	1110:105:36884:36896	1642320	3	True				
ANR	1642375	ParameterType	sljit_si		1642320	0					
ANR	1642376	Identifier	arg1		1642320	1					
ANR	1642377	Parameter	sljit_sw arg1w	1110:120:36899:36912	1642320	4	True				
ANR	1642378	ParameterType	sljit_sw		1642320	0					
ANR	1642379	Identifier	arg1w		1642320	1					
ANR	1642380	Parameter	sljit_si arg2	1110:136:36915:36927	1642320	5	True				
ANR	1642381	ParameterType	sljit_si		1642320	0					
ANR	1642382	Identifier	arg2		1642320	1					
ANR	1642383	Parameter	sljit_sw arg2w	1110:151:36930:36943	1642320	6	True				
ANR	1642384	ParameterType	sljit_sw		1642320	0					
ANR	1642385	Identifier	arg2w		1642320	1					
ANR	1642386	CFGEntryNode	ENTRY		1642320		True				
ANR	1642387	CFGExitNode	EXIT		1642320		True				
ANR	1642388	Symbol	arg1w		1642320						
ANR	1642389	Symbol	arg2		1642320						
ANR	1642390	Symbol	getput_arg		1642320						
ANR	1642391	Symbol	reg		1642320						
ANR	1642392	Symbol	arg1		1642320						
ANR	1642393	Symbol	arg2w		1642320						
ANR	1642394	Symbol	flags		1642320						
ANR	1642395	Symbol	* compiler		1642320						
ANR	1642396	Symbol	compiler		1642320						
ANR	1642397	Symbol	getput_arg_fast		1642320						
ANR	1642398	Symbol	compiler -> error		1642320						
ANR	1642399	Function	emit_op	1117:0:37102:40965							
ANR	1642400	FunctionDef	"emit_op (struct sljit_compiler * compiler , sljit_si op , sljit_si input_flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1642399	0					
ANR	1642401	CompoundStatement		1121:0:37288:40965	1642399	0					
ANR	1642402	IdentifierDeclStatement	sljit_si dst_r ;	1126:1:37484:37498	1642399	0	True				
ANR	1642403	IdentifierDecl	dst_r		1642399	0					
ANR	1642404	IdentifierDeclType	sljit_si		1642399	0					
ANR	1642405	Identifier	dst_r		1642399	1					
ANR	1642406	IdentifierDeclStatement	sljit_si src1_r ;	1127:1:37501:37516	1642399	1	True				
ANR	1642407	IdentifierDecl	src1_r		1642399	0					
ANR	1642408	IdentifierDeclType	sljit_si		1642399	0					
ANR	1642409	Identifier	src1_r		1642399	1					
ANR	1642410	IdentifierDeclStatement	sljit_si src2_r ;	1128:1:37519:37534	1642399	2	True				
ANR	1642411	IdentifierDecl	src2_r		1642399	0					
ANR	1642412	IdentifierDeclType	sljit_si		1642399	0					
ANR	1642413	Identifier	src2_r		1642399	1					
ANR	1642414	IdentifierDeclStatement	sljit_si sugg_src2_r = TMP_REG2 ;	1129:1:37537:37568	1642399	3	True				
ANR	1642415	IdentifierDecl	sugg_src2_r = TMP_REG2		1642399	0					
ANR	1642416	IdentifierDeclType	sljit_si		1642399	0					
ANR	1642417	Identifier	sugg_src2_r		1642399	1					
ANR	1642418	AssignmentExpression	sugg_src2_r = TMP_REG2		1642399	2		=			
ANR	1642419	Identifier	TMP_REG2		1642399	0					
ANR	1642420	Identifier	TMP_REG2		1642399	1					
ANR	1642421	IdentifierDeclStatement	sljit_si flags = input_flags & ( ALT_FORM1 | ALT_FORM2 | ALT_FORM3 | ALT_FORM4 | ALT_FORM5 | ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS ) ;	1130:1:37571:37704	1642399	4	True				
ANR	1642422	IdentifierDecl	flags = input_flags & ( ALT_FORM1 | ALT_FORM2 | ALT_FORM3 | ALT_FORM4 | ALT_FORM5 | ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS )		1642399	0					
ANR	1642423	IdentifierDeclType	sljit_si		1642399	0					
ANR	1642424	Identifier	flags		1642399	1					
ANR	1642425	AssignmentExpression	flags = input_flags & ( ALT_FORM1 | ALT_FORM2 | ALT_FORM3 | ALT_FORM4 | ALT_FORM5 | ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS )		1642399	2		=			
ANR	1642426	Identifier	flags		1642399	0					
ANR	1642427	BitAndExpression	input_flags & ( ALT_FORM1 | ALT_FORM2 | ALT_FORM3 | ALT_FORM4 | ALT_FORM5 | ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS )		1642399	1		&			
ANR	1642428	Identifier	input_flags		1642399	0					
ANR	1642429	InclusiveOrExpression	ALT_FORM1 | ALT_FORM2 | ALT_FORM3 | ALT_FORM4 | ALT_FORM5 | ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS		1642399	1		|			
ANR	1642430	Identifier	ALT_FORM1		1642399	0					
ANR	1642431	InclusiveOrExpression	ALT_FORM2 | ALT_FORM3 | ALT_FORM4 | ALT_FORM5 | ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS		1642399	1		|			
ANR	1642432	Identifier	ALT_FORM2		1642399	0					
ANR	1642433	InclusiveOrExpression	ALT_FORM3 | ALT_FORM4 | ALT_FORM5 | ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS		1642399	1		|			
ANR	1642434	Identifier	ALT_FORM3		1642399	0					
ANR	1642435	InclusiveOrExpression	ALT_FORM4 | ALT_FORM5 | ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS		1642399	1		|			
ANR	1642436	Identifier	ALT_FORM4		1642399	0					
ANR	1642437	InclusiveOrExpression	ALT_FORM5 | ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS		1642399	1		|			
ANR	1642438	Identifier	ALT_FORM5		1642399	0					
ANR	1642439	InclusiveOrExpression	ALT_FORM6 | ALT_SIGN_EXT | ALT_SET_FLAGS		1642399	1		|			
ANR	1642440	Identifier	ALT_FORM6		1642399	0					
ANR	1642441	InclusiveOrExpression	ALT_SIGN_EXT | ALT_SET_FLAGS		1642399	1		|			
ANR	1642442	Identifier	ALT_SIGN_EXT		1642399	0					
ANR	1642443	Identifier	ALT_SET_FLAGS		1642399	1					
ANR	1642444	IfStatement	if ( ! ( input_flags & ALT_KEEP_CACHE ) )		1642399	5					
ANR	1642445	Condition	! ( input_flags & ALT_KEEP_CACHE )	1132:5:37712:37742	1642399	0	True				
ANR	1642446	UnaryOperationExpression	! ( input_flags & ALT_KEEP_CACHE )		1642399	0					
ANR	1642447	UnaryOperator	!		1642399	0					
ANR	1642448	BitAndExpression	input_flags & ALT_KEEP_CACHE		1642399	1		&			
ANR	1642449	Identifier	input_flags		1642399	0					
ANR	1642450	Identifier	ALT_KEEP_CACHE		1642399	1					
ANR	1642451	CompoundStatement		12:38:456:456	1642399	1					
ANR	1642452	ExpressionStatement	compiler -> cache_arg = 0	1133:2:37749:37772	1642399	0	True				
ANR	1642453	AssignmentExpression	compiler -> cache_arg = 0		1642399	0		=			
ANR	1642454	PtrMemberAccess	compiler -> cache_arg		1642399	0					
ANR	1642455	Identifier	compiler		1642399	0					
ANR	1642456	Identifier	cache_arg		1642399	1					
ANR	1642457	PrimaryExpression	0		1642399	1					
ANR	1642458	ExpressionStatement	compiler -> cache_argw = 0	1134:2:37776:37800	1642399	1	True				
ANR	1642459	AssignmentExpression	compiler -> cache_argw = 0		1642399	0		=			
ANR	1642460	PtrMemberAccess	compiler -> cache_argw		1642399	0					
ANR	1642461	Identifier	compiler		1642399	0					
ANR	1642462	Identifier	cache_argw		1642399	1					
ANR	1642463	PrimaryExpression	0		1642399	1					
ANR	1642464	IfStatement	if ( SLJIT_UNLIKELY ( dst == SLJIT_UNUSED ) )		1642399	6					
ANR	1642465	Condition	SLJIT_UNLIKELY ( dst == SLJIT_UNUSED )	1138:5:37837:37871	1642399	0	True				
ANR	1642466	CallExpression	SLJIT_UNLIKELY ( dst == SLJIT_UNUSED )		1642399	0					
ANR	1642467	Callee	SLJIT_UNLIKELY		1642399	0					
ANR	1642468	Identifier	SLJIT_UNLIKELY		1642399	0					
ANR	1642469	ArgumentList	dst == SLJIT_UNUSED		1642399	1					
ANR	1642470	Argument	dst == SLJIT_UNUSED		1642399	0					
ANR	1642471	EqualityExpression	dst == SLJIT_UNUSED		1642399	0		==			
ANR	1642472	Identifier	dst		1642399	0					
ANR	1642473	Identifier	SLJIT_UNUSED		1642399	1					
ANR	1642474	CompoundStatement		18:42:585:585	1642399	1					
ANR	1642475	IfStatement	if ( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM ) )		1642399	0					
ANR	1642476	Condition	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )	1139:6:37882:37942	1642399	0	True				
ANR	1642477	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )		1642399	0		&&			
ANR	1642478	RelationalExpression	op >= SLJIT_MOV		1642399	0		>=			
ANR	1642479	Identifier	op		1642399	0					
ANR	1642480	Identifier	SLJIT_MOV		1642399	1					
ANR	1642481	AndExpression	op <= SLJIT_MOVU_SI && ! ( src2 & SLJIT_MEM )		1642399	1		&&			
ANR	1642482	RelationalExpression	op <= SLJIT_MOVU_SI		1642399	0		<=			
ANR	1642483	Identifier	op		1642399	0					
ANR	1642484	Identifier	SLJIT_MOVU_SI		1642399	1					
ANR	1642485	UnaryOperationExpression	! ( src2 & SLJIT_MEM )		1642399	1					
ANR	1642486	UnaryOperator	!		1642399	0					
ANR	1642487	BitAndExpression	src2 & SLJIT_MEM		1642399	1		&			
ANR	1642488	Identifier	src2		1642399	0					
ANR	1642489	Identifier	SLJIT_MEM		1642399	1					
ANR	1642490	ReturnStatement	return SLJIT_SUCCESS ;	1140:3:37948:37968	1642399	1	True				
ANR	1642491	Identifier	SLJIT_SUCCESS		1642399	0					
ANR	1642492	ExpressionStatement	dst_r = TMP_REG2	1141:2:37972:37988	1642399	1	True				
ANR	1642493	AssignmentExpression	dst_r = TMP_REG2		1642399	0		=			
ANR	1642494	Identifier	dst_r		1642399	0					
ANR	1642495	Identifier	TMP_REG2		1642399	1					
ANR	1642496	ElseStatement	else		1642399	0					
ANR	1642497	IfStatement	if ( FAST_IS_REG ( dst ) )		1642399	0					
ANR	1642498	Condition	FAST_IS_REG ( dst )	1143:10:38003:38018	1642399	0	True				
ANR	1642499	CallExpression	FAST_IS_REG ( dst )		1642399	0					
ANR	1642500	Callee	FAST_IS_REG		1642399	0					
ANR	1642501	Identifier	FAST_IS_REG		1642399	0					
ANR	1642502	ArgumentList	dst		1642399	1					
ANR	1642503	Argument	dst		1642399	0					
ANR	1642504	Identifier	dst		1642399	0					
ANR	1642505	CompoundStatement		23:28:732:732	1642399	1					
ANR	1642506	ExpressionStatement	dst_r = dst	1144:2:38025:38036	1642399	0	True				
ANR	1642507	AssignmentExpression	dst_r = dst		1642399	0		=			
ANR	1642508	Identifier	dst_r		1642399	0					
ANR	1642509	Identifier	dst		1642399	1					
ANR	1642510	ExpressionStatement	flags |= REG_DEST	1145:2:38040:38057	1642399	1	True				
ANR	1642511	AssignmentExpression	flags |= REG_DEST		1642399	0		|=			
ANR	1642512	Identifier	flags		1642399	0					
ANR	1642513	Identifier	REG_DEST		1642399	1					
ANR	1642514	IfStatement	if ( op >= SLJIT_MOV && op <= SLJIT_MOVU_SI )		1642399	2					
ANR	1642515	Condition	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI	1146:6:38065:38102	1642399	0	True				
ANR	1642516	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1642399	0		&&			
ANR	1642517	RelationalExpression	op >= SLJIT_MOV		1642399	0		>=			
ANR	1642518	Identifier	op		1642399	0					
ANR	1642519	Identifier	SLJIT_MOV		1642399	1					
ANR	1642520	RelationalExpression	op <= SLJIT_MOVU_SI		1642399	1		<=			
ANR	1642521	Identifier	op		1642399	0					
ANR	1642522	Identifier	SLJIT_MOVU_SI		1642399	1					
ANR	1642523	ExpressionStatement	sugg_src2_r = dst_r	1147:3:38108:38127	1642399	1	True				
ANR	1642524	AssignmentExpression	sugg_src2_r = dst_r		1642399	0		=			
ANR	1642525	Identifier	sugg_src2_r		1642399	0					
ANR	1642526	Identifier	dst_r		1642399	1					
ANR	1642527	ElseStatement	else		1642399	0					
ANR	1642528	CompoundStatement		29:6:849:849	1642399	0					
ANR	1642529	ExpressionStatement	SLJIT_ASSERT ( dst & SLJIT_MEM )	1150:2:38142:38171	1642399	0	True				
ANR	1642530	CallExpression	SLJIT_ASSERT ( dst & SLJIT_MEM )		1642399	0					
ANR	1642531	Callee	SLJIT_ASSERT		1642399	0					
ANR	1642532	Identifier	SLJIT_ASSERT		1642399	0					
ANR	1642533	ArgumentList	dst & SLJIT_MEM		1642399	1					
ANR	1642534	Argument	dst & SLJIT_MEM		1642399	0					
ANR	1642535	BitAndExpression	dst & SLJIT_MEM		1642399	0		&			
ANR	1642536	Identifier	dst		1642399	0					
ANR	1642537	Identifier	SLJIT_MEM		1642399	1					
ANR	1642538	IfStatement	"if ( getput_arg_fast ( compiler , input_flags | ARG_TEST , TMP_REG2 , dst , dstw ) )"		1642399	1					
ANR	1642539	Condition	"getput_arg_fast ( compiler , input_flags | ARG_TEST , TMP_REG2 , dst , dstw )"	1151:6:38179:38248	1642399	0	True				
ANR	1642540	CallExpression	"getput_arg_fast ( compiler , input_flags | ARG_TEST , TMP_REG2 , dst , dstw )"		1642399	0					
ANR	1642541	Callee	getput_arg_fast		1642399	0					
ANR	1642542	Identifier	getput_arg_fast		1642399	0					
ANR	1642543	ArgumentList	compiler		1642399	1					
ANR	1642544	Argument	compiler		1642399	0					
ANR	1642545	Identifier	compiler		1642399	0					
ANR	1642546	Argument	input_flags | ARG_TEST		1642399	1					
ANR	1642547	InclusiveOrExpression	input_flags | ARG_TEST		1642399	0		|			
ANR	1642548	Identifier	input_flags		1642399	0					
ANR	1642549	Identifier	ARG_TEST		1642399	1					
ANR	1642550	Argument	TMP_REG2		1642399	2					
ANR	1642551	Identifier	TMP_REG2		1642399	0					
ANR	1642552	Argument	dst		1642399	3					
ANR	1642553	Identifier	dst		1642399	0					
ANR	1642554	Argument	dstw		1642399	4					
ANR	1642555	Identifier	dstw		1642399	0					
ANR	1642556	CompoundStatement		31:78:962:962	1642399	1					
ANR	1642557	ExpressionStatement	flags |= FAST_DEST	1152:3:38256:38274	1642399	0	True				
ANR	1642558	AssignmentExpression	flags |= FAST_DEST		1642399	0		|=			
ANR	1642559	Identifier	flags		1642399	0					
ANR	1642560	Identifier	FAST_DEST		1642399	1					
ANR	1642561	ExpressionStatement	dst_r = TMP_REG2	1153:3:38279:38295	1642399	1	True				
ANR	1642562	AssignmentExpression	dst_r = TMP_REG2		1642399	0		=			
ANR	1642563	Identifier	dst_r		1642399	0					
ANR	1642564	Identifier	TMP_REG2		1642399	1					
ANR	1642565	ElseStatement	else		1642399	0					
ANR	1642566	CompoundStatement		35:7:1019:1019	1642399	0					
ANR	1642567	ExpressionStatement	flags |= SLOW_DEST	1156:3:38313:38331	1642399	0	True				
ANR	1642568	AssignmentExpression	flags |= SLOW_DEST		1642399	0		|=			
ANR	1642569	Identifier	flags		1642399	0					
ANR	1642570	Identifier	SLOW_DEST		1642399	1					
ANR	1642571	ExpressionStatement	dst_r = 0	1157:3:38336:38345	1642399	1	True				
ANR	1642572	AssignmentExpression	dst_r = 0		1642399	0		=			
ANR	1642573	Identifier	dst_r		1642399	0					
ANR	1642574	PrimaryExpression	0		1642399	1					
ANR	1642575	IfStatement	if ( FAST_IS_REG ( src1 ) )		1642399	7					
ANR	1642576	Condition	FAST_IS_REG ( src1 )	1162:5:38377:38393	1642399	0	True				
ANR	1642577	CallExpression	FAST_IS_REG ( src1 )		1642399	0					
ANR	1642578	Callee	FAST_IS_REG		1642399	0					
ANR	1642579	Identifier	FAST_IS_REG		1642399	0					
ANR	1642580	ArgumentList	src1		1642399	1					
ANR	1642581	Argument	src1		1642399	0					
ANR	1642582	Identifier	src1		1642399	0					
ANR	1642583	CompoundStatement		42:24:1107:1107	1642399	1					
ANR	1642584	ExpressionStatement	src1_r = src1	1163:2:38400:38413	1642399	0	True				
ANR	1642585	AssignmentExpression	src1_r = src1		1642399	0		=			
ANR	1642586	Identifier	src1_r		1642399	0					
ANR	1642587	Identifier	src1		1642399	1					
ANR	1642588	ExpressionStatement	flags |= REG1_SOURCE	1164:2:38417:38437	1642399	1	True				
ANR	1642589	AssignmentExpression	flags |= REG1_SOURCE		1642399	0		|=			
ANR	1642590	Identifier	flags		1642399	0					
ANR	1642591	Identifier	REG1_SOURCE		1642399	1					
ANR	1642592	ElseStatement	else		1642399	0					
ANR	1642593	IfStatement	if ( src1 & SLJIT_IMM )		1642399	0					
ANR	1642594	Condition	src1 & SLJIT_IMM	1166:10:38452:38467	1642399	0	True				
ANR	1642595	BitAndExpression	src1 & SLJIT_IMM		1642399	0		&			
ANR	1642596	Identifier	src1		1642399	0					
ANR	1642597	Identifier	SLJIT_IMM		1642399	1					
ANR	1642598	CompoundStatement		46:28:1181:1181	1642399	1					
ANR	1642599	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , src1w ) )"	1167:2:38474:38524	1642399	0	True				
ANR	1642600	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , src1w ) )"		1642399	0					
ANR	1642601	Callee	FAIL_IF		1642399	0					
ANR	1642602	Identifier	FAIL_IF		1642399	0					
ANR	1642603	ArgumentList	"load_immediate ( compiler , TMP_REG1 , src1w )"		1642399	1					
ANR	1642604	Argument	"load_immediate ( compiler , TMP_REG1 , src1w )"		1642399	0					
ANR	1642605	CallExpression	"load_immediate ( compiler , TMP_REG1 , src1w )"		1642399	0					
ANR	1642606	Callee	load_immediate		1642399	0					
ANR	1642607	Identifier	load_immediate		1642399	0					
ANR	1642608	ArgumentList	compiler		1642399	1					
ANR	1642609	Argument	compiler		1642399	0					
ANR	1642610	Identifier	compiler		1642399	0					
ANR	1642611	Argument	TMP_REG1		1642399	1					
ANR	1642612	Identifier	TMP_REG1		1642399	0					
ANR	1642613	Argument	src1w		1642399	2					
ANR	1642614	Identifier	src1w		1642399	0					
ANR	1642615	ExpressionStatement	src1_r = TMP_REG1	1168:2:38528:38545	1642399	1	True				
ANR	1642616	AssignmentExpression	src1_r = TMP_REG1		1642399	0		=			
ANR	1642617	Identifier	src1_r		1642399	0					
ANR	1642618	Identifier	TMP_REG1		1642399	1					
ANR	1642619	ElseStatement	else		1642399	0					
ANR	1642620	IfStatement	"if ( getput_arg_fast ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w ) )"		1642399	0					
ANR	1642621	Condition	"getput_arg_fast ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w )"	1170:10:38560:38632	1642399	0	True				
ANR	1642622	CallExpression	"getput_arg_fast ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w )"		1642399	0					
ANR	1642623	Callee	getput_arg_fast		1642399	0					
ANR	1642624	Identifier	getput_arg_fast		1642399	0					
ANR	1642625	ArgumentList	compiler		1642399	1					
ANR	1642626	Argument	compiler		1642399	0					
ANR	1642627	Identifier	compiler		1642399	0					
ANR	1642628	Argument	input_flags | LOAD_DATA		1642399	1					
ANR	1642629	InclusiveOrExpression	input_flags | LOAD_DATA		1642399	0		|			
ANR	1642630	Identifier	input_flags		1642399	0					
ANR	1642631	Identifier	LOAD_DATA		1642399	1					
ANR	1642632	Argument	TMP_REG1		1642399	2					
ANR	1642633	Identifier	TMP_REG1		1642399	0					
ANR	1642634	Argument	src1		1642399	3					
ANR	1642635	Identifier	src1		1642399	0					
ANR	1642636	Argument	src1w		1642399	4					
ANR	1642637	Identifier	src1w		1642399	0					
ANR	1642638	CompoundStatement		50:85:1346:1346	1642399	1					
ANR	1642639	ExpressionStatement	FAIL_IF ( compiler -> error )	1171:2:38639:38663	1642399	0	True				
ANR	1642640	CallExpression	FAIL_IF ( compiler -> error )		1642399	0					
ANR	1642641	Callee	FAIL_IF		1642399	0					
ANR	1642642	Identifier	FAIL_IF		1642399	0					
ANR	1642643	ArgumentList	compiler -> error		1642399	1					
ANR	1642644	Argument	compiler -> error		1642399	0					
ANR	1642645	PtrMemberAccess	compiler -> error		1642399	0					
ANR	1642646	Identifier	compiler		1642399	0					
ANR	1642647	Identifier	error		1642399	1					
ANR	1642648	ExpressionStatement	src1_r = TMP_REG1	1172:2:38667:38684	1642399	1	True				
ANR	1642649	AssignmentExpression	src1_r = TMP_REG1		1642399	0		=			
ANR	1642650	Identifier	src1_r		1642399	0					
ANR	1642651	Identifier	TMP_REG1		1642399	1					
ANR	1642652	ElseStatement	else		1642399	0					
ANR	1642653	ExpressionStatement	src1_r = 0	1175:2:38697:38707	1642399	0	True				
ANR	1642654	AssignmentExpression	src1_r = 0		1642399	0		=			
ANR	1642655	Identifier	src1_r		1642399	0					
ANR	1642656	PrimaryExpression	0		1642399	1					
ANR	1642657	IfStatement	if ( FAST_IS_REG ( src2 ) )		1642399	8					
ANR	1642658	Condition	FAST_IS_REG ( src2 )	1178:5:38732:38748	1642399	0	True				
ANR	1642659	CallExpression	FAST_IS_REG ( src2 )		1642399	0					
ANR	1642660	Callee	FAST_IS_REG		1642399	0					
ANR	1642661	Identifier	FAST_IS_REG		1642399	0					
ANR	1642662	ArgumentList	src2		1642399	1					
ANR	1642663	Argument	src2		1642399	0					
ANR	1642664	Identifier	src2		1642399	0					
ANR	1642665	CompoundStatement		58:24:1462:1462	1642399	1					
ANR	1642666	ExpressionStatement	src2_r = src2	1179:2:38755:38768	1642399	0	True				
ANR	1642667	AssignmentExpression	src2_r = src2		1642399	0		=			
ANR	1642668	Identifier	src2_r		1642399	0					
ANR	1642669	Identifier	src2		1642399	1					
ANR	1642670	ExpressionStatement	flags |= REG2_SOURCE	1180:2:38772:38792	1642399	1	True				
ANR	1642671	AssignmentExpression	flags |= REG2_SOURCE		1642399	0		|=			
ANR	1642672	Identifier	flags		1642399	0					
ANR	1642673	Identifier	REG2_SOURCE		1642399	1					
ANR	1642674	IfStatement	if ( ! ( flags & REG_DEST ) && op >= SLJIT_MOV && op <= SLJIT_MOVU_SI )		1642399	2					
ANR	1642675	Condition	! ( flags & REG_DEST ) && op >= SLJIT_MOV && op <= SLJIT_MOVU_SI	1181:6:38800:38860	1642399	0	True				
ANR	1642676	AndExpression	! ( flags & REG_DEST ) && op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1642399	0		&&			
ANR	1642677	UnaryOperationExpression	! ( flags & REG_DEST )		1642399	0					
ANR	1642678	UnaryOperator	!		1642399	0					
ANR	1642679	BitAndExpression	flags & REG_DEST		1642399	1		&			
ANR	1642680	Identifier	flags		1642399	0					
ANR	1642681	Identifier	REG_DEST		1642399	1					
ANR	1642682	AndExpression	op >= SLJIT_MOV && op <= SLJIT_MOVU_SI		1642399	1		&&			
ANR	1642683	RelationalExpression	op >= SLJIT_MOV		1642399	0		>=			
ANR	1642684	Identifier	op		1642399	0					
ANR	1642685	Identifier	SLJIT_MOV		1642399	1					
ANR	1642686	RelationalExpression	op <= SLJIT_MOVU_SI		1642399	1		<=			
ANR	1642687	Identifier	op		1642399	0					
ANR	1642688	Identifier	SLJIT_MOVU_SI		1642399	1					
ANR	1642689	ExpressionStatement	dst_r = src2_r	1182:3:38866:38880	1642399	1	True				
ANR	1642690	AssignmentExpression	dst_r = src2_r		1642399	0		=			
ANR	1642691	Identifier	dst_r		1642399	0					
ANR	1642692	Identifier	src2_r		1642399	1					
ANR	1642693	ElseStatement	else		1642399	0					
ANR	1642694	IfStatement	if ( src2 & SLJIT_IMM )		1642399	0					
ANR	1642695	Condition	src2 & SLJIT_IMM	1184:10:38895:38910	1642399	0	True				
ANR	1642696	BitAndExpression	src2 & SLJIT_IMM		1642399	0		&			
ANR	1642697	Identifier	src2		1642399	0					
ANR	1642698	Identifier	SLJIT_IMM		1642399	1					
ANR	1642699	CompoundStatement		64:28:1624:1624	1642399	1					
ANR	1642700	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , sugg_src2_r , src2w ) )"	1185:2:38917:38970	1642399	0	True				
ANR	1642701	CallExpression	"FAIL_IF ( load_immediate ( compiler , sugg_src2_r , src2w ) )"		1642399	0					
ANR	1642702	Callee	FAIL_IF		1642399	0					
ANR	1642703	Identifier	FAIL_IF		1642399	0					
ANR	1642704	ArgumentList	"load_immediate ( compiler , sugg_src2_r , src2w )"		1642399	1					
ANR	1642705	Argument	"load_immediate ( compiler , sugg_src2_r , src2w )"		1642399	0					
ANR	1642706	CallExpression	"load_immediate ( compiler , sugg_src2_r , src2w )"		1642399	0					
ANR	1642707	Callee	load_immediate		1642399	0					
ANR	1642708	Identifier	load_immediate		1642399	0					
ANR	1642709	ArgumentList	compiler		1642399	1					
ANR	1642710	Argument	compiler		1642399	0					
ANR	1642711	Identifier	compiler		1642399	0					
ANR	1642712	Argument	sugg_src2_r		1642399	1					
ANR	1642713	Identifier	sugg_src2_r		1642399	0					
ANR	1642714	Argument	src2w		1642399	2					
ANR	1642715	Identifier	src2w		1642399	0					
ANR	1642716	ExpressionStatement	src2_r = sugg_src2_r	1186:2:38974:38994	1642399	1	True				
ANR	1642717	AssignmentExpression	src2_r = sugg_src2_r		1642399	0		=			
ANR	1642718	Identifier	src2_r		1642399	0					
ANR	1642719	Identifier	sugg_src2_r		1642399	1					
ANR	1642720	ElseStatement	else		1642399	0					
ANR	1642721	IfStatement	"if ( getput_arg_fast ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w ) )"		1642399	0					
ANR	1642722	Condition	"getput_arg_fast ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w )"	1188:10:39009:39084	1642399	0	True				
ANR	1642723	CallExpression	"getput_arg_fast ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w )"		1642399	0					
ANR	1642724	Callee	getput_arg_fast		1642399	0					
ANR	1642725	Identifier	getput_arg_fast		1642399	0					
ANR	1642726	ArgumentList	compiler		1642399	1					
ANR	1642727	Argument	compiler		1642399	0					
ANR	1642728	Identifier	compiler		1642399	0					
ANR	1642729	Argument	input_flags | LOAD_DATA		1642399	1					
ANR	1642730	InclusiveOrExpression	input_flags | LOAD_DATA		1642399	0		|			
ANR	1642731	Identifier	input_flags		1642399	0					
ANR	1642732	Identifier	LOAD_DATA		1642399	1					
ANR	1642733	Argument	sugg_src2_r		1642399	2					
ANR	1642734	Identifier	sugg_src2_r		1642399	0					
ANR	1642735	Argument	src2		1642399	3					
ANR	1642736	Identifier	src2		1642399	0					
ANR	1642737	Argument	src2w		1642399	4					
ANR	1642738	Identifier	src2w		1642399	0					
ANR	1642739	CompoundStatement		68:88:1798:1798	1642399	1					
ANR	1642740	ExpressionStatement	FAIL_IF ( compiler -> error )	1189:2:39091:39115	1642399	0	True				
ANR	1642741	CallExpression	FAIL_IF ( compiler -> error )		1642399	0					
ANR	1642742	Callee	FAIL_IF		1642399	0					
ANR	1642743	Identifier	FAIL_IF		1642399	0					
ANR	1642744	ArgumentList	compiler -> error		1642399	1					
ANR	1642745	Argument	compiler -> error		1642399	0					
ANR	1642746	PtrMemberAccess	compiler -> error		1642399	0					
ANR	1642747	Identifier	compiler		1642399	0					
ANR	1642748	Identifier	error		1642399	1					
ANR	1642749	ExpressionStatement	src2_r = sugg_src2_r	1190:2:39119:39139	1642399	1	True				
ANR	1642750	AssignmentExpression	src2_r = sugg_src2_r		1642399	0		=			
ANR	1642751	Identifier	src2_r		1642399	0					
ANR	1642752	Identifier	sugg_src2_r		1642399	1					
ANR	1642753	ElseStatement	else		1642399	0					
ANR	1642754	ExpressionStatement	src2_r = 0	1193:2:39152:39162	1642399	0	True				
ANR	1642755	AssignmentExpression	src2_r = 0		1642399	0		=			
ANR	1642756	Identifier	src2_r		1642399	0					
ANR	1642757	PrimaryExpression	0		1642399	1					
ANR	1642758	IfStatement	if ( src1_r == 0 && src2_r == 0 && dst_r == 0 )		1642399	9					
ANR	1642759	Condition	src1_r == 0 && src2_r == 0 && dst_r == 0	1197:5:39307:39346	1642399	0	True				
ANR	1642760	AndExpression	src1_r == 0 && src2_r == 0 && dst_r == 0		1642399	0		&&			
ANR	1642761	EqualityExpression	src1_r == 0		1642399	0		==			
ANR	1642762	Identifier	src1_r		1642399	0					
ANR	1642763	PrimaryExpression	0		1642399	1					
ANR	1642764	AndExpression	src2_r == 0 && dst_r == 0		1642399	1		&&			
ANR	1642765	EqualityExpression	src2_r == 0		1642399	0		==			
ANR	1642766	Identifier	src2_r		1642399	0					
ANR	1642767	PrimaryExpression	0		1642399	1					
ANR	1642768	EqualityExpression	dst_r == 0		1642399	1		==			
ANR	1642769	Identifier	dst_r		1642399	0					
ANR	1642770	PrimaryExpression	0		1642399	1					
ANR	1642771	CompoundStatement		77:47:2060:2060	1642399	1					
ANR	1642772	IfStatement	"if ( ! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw ) )"		1642399	0					
ANR	1642773	Condition	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"	1198:6:39357:39429	1642399	0	True				
ANR	1642774	AndExpression	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"		1642399	0		&&			
ANR	1642775	UnaryOperationExpression	"! can_cache ( src1 , src1w , src2 , src2w )"		1642399	0					
ANR	1642776	UnaryOperator	!		1642399	0					
ANR	1642777	CallExpression	"can_cache ( src1 , src1w , src2 , src2w )"		1642399	1					
ANR	1642778	Callee	can_cache		1642399	0					
ANR	1642779	Identifier	can_cache		1642399	0					
ANR	1642780	ArgumentList	src1		1642399	1					
ANR	1642781	Argument	src1		1642399	0					
ANR	1642782	Identifier	src1		1642399	0					
ANR	1642783	Argument	src1w		1642399	1					
ANR	1642784	Identifier	src1w		1642399	0					
ANR	1642785	Argument	src2		1642399	2					
ANR	1642786	Identifier	src2		1642399	0					
ANR	1642787	Argument	src2w		1642399	3					
ANR	1642788	Identifier	src2w		1642399	0					
ANR	1642789	CallExpression	"can_cache ( src1 , src1w , dst , dstw )"		1642399	1					
ANR	1642790	Callee	can_cache		1642399	0					
ANR	1642791	Identifier	can_cache		1642399	0					
ANR	1642792	ArgumentList	src1		1642399	1					
ANR	1642793	Argument	src1		1642399	0					
ANR	1642794	Identifier	src1		1642399	0					
ANR	1642795	Argument	src1w		1642399	1					
ANR	1642796	Identifier	src1w		1642399	0					
ANR	1642797	Argument	dst		1642399	2					
ANR	1642798	Identifier	dst		1642399	0					
ANR	1642799	Argument	dstw		1642399	3					
ANR	1642800	Identifier	dstw		1642399	0					
ANR	1642801	CompoundStatement		78:81:2143:2143	1642399	1					
ANR	1642802	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , src1 , src1w ) )"	1199:3:39437:39527	1642399	0	True				
ANR	1642803	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , src1 , src1w ) )"		1642399	0					
ANR	1642804	Callee	FAIL_IF		1642399	0					
ANR	1642805	Identifier	FAIL_IF		1642399	0					
ANR	1642806	ArgumentList	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , src1 , src1w )"		1642399	1					
ANR	1642807	Argument	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , src1 , src1w )"		1642399	0					
ANR	1642808	CallExpression	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , src1 , src1w )"		1642399	0					
ANR	1642809	Callee	getput_arg		1642399	0					
ANR	1642810	Identifier	getput_arg		1642399	0					
ANR	1642811	ArgumentList	compiler		1642399	1					
ANR	1642812	Argument	compiler		1642399	0					
ANR	1642813	Identifier	compiler		1642399	0					
ANR	1642814	Argument	input_flags | LOAD_DATA		1642399	1					
ANR	1642815	InclusiveOrExpression	input_flags | LOAD_DATA		1642399	0		|			
ANR	1642816	Identifier	input_flags		1642399	0					
ANR	1642817	Identifier	LOAD_DATA		1642399	1					
ANR	1642818	Argument	TMP_REG2		1642399	2					
ANR	1642819	Identifier	TMP_REG2		1642399	0					
ANR	1642820	Argument	src2		1642399	3					
ANR	1642821	Identifier	src2		1642399	0					
ANR	1642822	Argument	src2w		1642399	4					
ANR	1642823	Identifier	src2w		1642399	0					
ANR	1642824	Argument	src1		1642399	5					
ANR	1642825	Identifier	src1		1642399	0					
ANR	1642826	Argument	src1w		1642399	6					
ANR	1642827	Identifier	src1w		1642399	0					
ANR	1642828	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw ) )"	1200:3:39532:39620	1642399	1	True				
ANR	1642829	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw ) )"		1642399	0					
ANR	1642830	Callee	FAIL_IF		1642399	0					
ANR	1642831	Identifier	FAIL_IF		1642399	0					
ANR	1642832	ArgumentList	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw )"		1642399	1					
ANR	1642833	Argument	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw )"		1642399	0					
ANR	1642834	CallExpression	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw )"		1642399	0					
ANR	1642835	Callee	getput_arg		1642399	0					
ANR	1642836	Identifier	getput_arg		1642399	0					
ANR	1642837	ArgumentList	compiler		1642399	1					
ANR	1642838	Argument	compiler		1642399	0					
ANR	1642839	Identifier	compiler		1642399	0					
ANR	1642840	Argument	input_flags | LOAD_DATA		1642399	1					
ANR	1642841	InclusiveOrExpression	input_flags | LOAD_DATA		1642399	0		|			
ANR	1642842	Identifier	input_flags		1642399	0					
ANR	1642843	Identifier	LOAD_DATA		1642399	1					
ANR	1642844	Argument	TMP_REG1		1642399	2					
ANR	1642845	Identifier	TMP_REG1		1642399	0					
ANR	1642846	Argument	src1		1642399	3					
ANR	1642847	Identifier	src1		1642399	0					
ANR	1642848	Argument	src1w		1642399	4					
ANR	1642849	Identifier	src1w		1642399	0					
ANR	1642850	Argument	dst		1642399	5					
ANR	1642851	Identifier	dst		1642399	0					
ANR	1642852	Argument	dstw		1642399	6					
ANR	1642853	Identifier	dstw		1642399	0					
ANR	1642854	ElseStatement	else		1642399	0					
ANR	1642855	CompoundStatement		82:7:2344:2344	1642399	0					
ANR	1642856	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w ) )"	1203:3:39638:39728	1642399	0	True				
ANR	1642857	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w ) )"		1642399	0					
ANR	1642858	Callee	FAIL_IF		1642399	0					
ANR	1642859	Identifier	FAIL_IF		1642399	0					
ANR	1642860	ArgumentList	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w )"		1642399	1					
ANR	1642861	Argument	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w )"		1642399	0					
ANR	1642862	CallExpression	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w )"		1642399	0					
ANR	1642863	Callee	getput_arg		1642399	0					
ANR	1642864	Identifier	getput_arg		1642399	0					
ANR	1642865	ArgumentList	compiler		1642399	1					
ANR	1642866	Argument	compiler		1642399	0					
ANR	1642867	Identifier	compiler		1642399	0					
ANR	1642868	Argument	input_flags | LOAD_DATA		1642399	1					
ANR	1642869	InclusiveOrExpression	input_flags | LOAD_DATA		1642399	0		|			
ANR	1642870	Identifier	input_flags		1642399	0					
ANR	1642871	Identifier	LOAD_DATA		1642399	1					
ANR	1642872	Argument	TMP_REG1		1642399	2					
ANR	1642873	Identifier	TMP_REG1		1642399	0					
ANR	1642874	Argument	src1		1642399	3					
ANR	1642875	Identifier	src1		1642399	0					
ANR	1642876	Argument	src1w		1642399	4					
ANR	1642877	Identifier	src1w		1642399	0					
ANR	1642878	Argument	src2		1642399	5					
ANR	1642879	Identifier	src2		1642399	0					
ANR	1642880	Argument	src2w		1642399	6					
ANR	1642881	Identifier	src2w		1642399	0					
ANR	1642882	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , dst , dstw ) )"	1204:3:39733:39821	1642399	1	True				
ANR	1642883	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , dst , dstw ) )"		1642399	0					
ANR	1642884	Callee	FAIL_IF		1642399	0					
ANR	1642885	Identifier	FAIL_IF		1642399	0					
ANR	1642886	ArgumentList	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , dst , dstw )"		1642399	1					
ANR	1642887	Argument	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , dst , dstw )"		1642399	0					
ANR	1642888	CallExpression	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG2 , src2 , src2w , dst , dstw )"		1642399	0					
ANR	1642889	Callee	getput_arg		1642399	0					
ANR	1642890	Identifier	getput_arg		1642399	0					
ANR	1642891	ArgumentList	compiler		1642399	1					
ANR	1642892	Argument	compiler		1642399	0					
ANR	1642893	Identifier	compiler		1642399	0					
ANR	1642894	Argument	input_flags | LOAD_DATA		1642399	1					
ANR	1642895	InclusiveOrExpression	input_flags | LOAD_DATA		1642399	0		|			
ANR	1642896	Identifier	input_flags		1642399	0					
ANR	1642897	Identifier	LOAD_DATA		1642399	1					
ANR	1642898	Argument	TMP_REG2		1642399	2					
ANR	1642899	Identifier	TMP_REG2		1642399	0					
ANR	1642900	Argument	src2		1642399	3					
ANR	1642901	Identifier	src2		1642399	0					
ANR	1642902	Argument	src2w		1642399	4					
ANR	1642903	Identifier	src2w		1642399	0					
ANR	1642904	Argument	dst		1642399	5					
ANR	1642905	Identifier	dst		1642399	0					
ANR	1642906	Argument	dstw		1642399	6					
ANR	1642907	Identifier	dstw		1642399	0					
ANR	1642908	ExpressionStatement	src1_r = TMP_REG1	1206:2:39829:39846	1642399	1	True				
ANR	1642909	AssignmentExpression	src1_r = TMP_REG1		1642399	0		=			
ANR	1642910	Identifier	src1_r		1642399	0					
ANR	1642911	Identifier	TMP_REG1		1642399	1					
ANR	1642912	ExpressionStatement	src2_r = TMP_REG2	1207:2:39850:39867	1642399	2	True				
ANR	1642913	AssignmentExpression	src2_r = TMP_REG2		1642399	0		=			
ANR	1642914	Identifier	src2_r		1642399	0					
ANR	1642915	Identifier	TMP_REG2		1642399	1					
ANR	1642916	ElseStatement	else		1642399	0					
ANR	1642917	IfStatement	if ( src1_r == 0 && src2_r == 0 )		1642399	0					
ANR	1642918	Condition	src1_r == 0 && src2_r == 0	1209:10:39882:39907	1642399	0	True				
ANR	1642919	AndExpression	src1_r == 0 && src2_r == 0		1642399	0		&&			
ANR	1642920	EqualityExpression	src1_r == 0		1642399	0		==			
ANR	1642921	Identifier	src1_r		1642399	0					
ANR	1642922	PrimaryExpression	0		1642399	1					
ANR	1642923	EqualityExpression	src2_r == 0		1642399	1		==			
ANR	1642924	Identifier	src2_r		1642399	0					
ANR	1642925	PrimaryExpression	0		1642399	1					
ANR	1642926	CompoundStatement		89:38:2621:2621	1642399	1					
ANR	1642927	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w ) )"	1210:2:39914:40004	1642399	0	True				
ANR	1642928	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w ) )"		1642399	0					
ANR	1642929	Callee	FAIL_IF		1642399	0					
ANR	1642930	Identifier	FAIL_IF		1642399	0					
ANR	1642931	ArgumentList	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w )"		1642399	1					
ANR	1642932	Argument	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w )"		1642399	0					
ANR	1642933	CallExpression	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , src2 , src2w )"		1642399	0					
ANR	1642934	Callee	getput_arg		1642399	0					
ANR	1642935	Identifier	getput_arg		1642399	0					
ANR	1642936	ArgumentList	compiler		1642399	1					
ANR	1642937	Argument	compiler		1642399	0					
ANR	1642938	Identifier	compiler		1642399	0					
ANR	1642939	Argument	input_flags | LOAD_DATA		1642399	1					
ANR	1642940	InclusiveOrExpression	input_flags | LOAD_DATA		1642399	0		|			
ANR	1642941	Identifier	input_flags		1642399	0					
ANR	1642942	Identifier	LOAD_DATA		1642399	1					
ANR	1642943	Argument	TMP_REG1		1642399	2					
ANR	1642944	Identifier	TMP_REG1		1642399	0					
ANR	1642945	Argument	src1		1642399	3					
ANR	1642946	Identifier	src1		1642399	0					
ANR	1642947	Argument	src1w		1642399	4					
ANR	1642948	Identifier	src1w		1642399	0					
ANR	1642949	Argument	src2		1642399	5					
ANR	1642950	Identifier	src2		1642399	0					
ANR	1642951	Argument	src2w		1642399	6					
ANR	1642952	Identifier	src2w		1642399	0					
ANR	1642953	ExpressionStatement	src1_r = TMP_REG1	1211:2:40008:40025	1642399	1	True				
ANR	1642954	AssignmentExpression	src1_r = TMP_REG1		1642399	0		=			
ANR	1642955	Identifier	src1_r		1642399	0					
ANR	1642956	Identifier	TMP_REG1		1642399	1					
ANR	1642957	ElseStatement	else		1642399	0					
ANR	1642958	IfStatement	if ( src1_r == 0 && dst_r == 0 )		1642399	0					
ANR	1642959	Condition	src1_r == 0 && dst_r == 0	1213:10:40040:40064	1642399	0	True				
ANR	1642960	AndExpression	src1_r == 0 && dst_r == 0		1642399	0		&&			
ANR	1642961	EqualityExpression	src1_r == 0		1642399	0		==			
ANR	1642962	Identifier	src1_r		1642399	0					
ANR	1642963	PrimaryExpression	0		1642399	1					
ANR	1642964	EqualityExpression	dst_r == 0		1642399	1		==			
ANR	1642965	Identifier	dst_r		1642399	0					
ANR	1642966	PrimaryExpression	0		1642399	1					
ANR	1642967	CompoundStatement		93:37:2778:2778	1642399	1					
ANR	1642968	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw ) )"	1214:2:40071:40159	1642399	0	True				
ANR	1642969	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw ) )"		1642399	0					
ANR	1642970	Callee	FAIL_IF		1642399	0					
ANR	1642971	Identifier	FAIL_IF		1642399	0					
ANR	1642972	ArgumentList	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw )"		1642399	1					
ANR	1642973	Argument	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw )"		1642399	0					
ANR	1642974	CallExpression	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , dst , dstw )"		1642399	0					
ANR	1642975	Callee	getput_arg		1642399	0					
ANR	1642976	Identifier	getput_arg		1642399	0					
ANR	1642977	ArgumentList	compiler		1642399	1					
ANR	1642978	Argument	compiler		1642399	0					
ANR	1642979	Identifier	compiler		1642399	0					
ANR	1642980	Argument	input_flags | LOAD_DATA		1642399	1					
ANR	1642981	InclusiveOrExpression	input_flags | LOAD_DATA		1642399	0		|			
ANR	1642982	Identifier	input_flags		1642399	0					
ANR	1642983	Identifier	LOAD_DATA		1642399	1					
ANR	1642984	Argument	TMP_REG1		1642399	2					
ANR	1642985	Identifier	TMP_REG1		1642399	0					
ANR	1642986	Argument	src1		1642399	3					
ANR	1642987	Identifier	src1		1642399	0					
ANR	1642988	Argument	src1w		1642399	4					
ANR	1642989	Identifier	src1w		1642399	0					
ANR	1642990	Argument	dst		1642399	5					
ANR	1642991	Identifier	dst		1642399	0					
ANR	1642992	Argument	dstw		1642399	6					
ANR	1642993	Identifier	dstw		1642399	0					
ANR	1642994	ExpressionStatement	src1_r = TMP_REG1	1215:2:40163:40180	1642399	1	True				
ANR	1642995	AssignmentExpression	src1_r = TMP_REG1		1642399	0		=			
ANR	1642996	Identifier	src1_r		1642399	0					
ANR	1642997	Identifier	TMP_REG1		1642399	1					
ANR	1642998	ElseStatement	else		1642399	0					
ANR	1642999	IfStatement	if ( src2_r == 0 && dst_r == 0 )		1642399	0					
ANR	1643000	Condition	src2_r == 0 && dst_r == 0	1217:10:40195:40219	1642399	0	True				
ANR	1643001	AndExpression	src2_r == 0 && dst_r == 0		1642399	0		&&			
ANR	1643002	EqualityExpression	src2_r == 0		1642399	0		==			
ANR	1643003	Identifier	src2_r		1642399	0					
ANR	1643004	PrimaryExpression	0		1642399	1					
ANR	1643005	EqualityExpression	dst_r == 0		1642399	1		==			
ANR	1643006	Identifier	dst_r		1642399	0					
ANR	1643007	PrimaryExpression	0		1642399	1					
ANR	1643008	CompoundStatement		97:37:2933:2933	1642399	1					
ANR	1643009	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , dst , dstw ) )"	1218:2:40226:40317	1642399	0	True				
ANR	1643010	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , dst , dstw ) )"		1642399	0					
ANR	1643011	Callee	FAIL_IF		1642399	0					
ANR	1643012	Identifier	FAIL_IF		1642399	0					
ANR	1643013	ArgumentList	"getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , dst , dstw )"		1642399	1					
ANR	1643014	Argument	"getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , dst , dstw )"		1642399	0					
ANR	1643015	CallExpression	"getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , dst , dstw )"		1642399	0					
ANR	1643016	Callee	getput_arg		1642399	0					
ANR	1643017	Identifier	getput_arg		1642399	0					
ANR	1643018	ArgumentList	compiler		1642399	1					
ANR	1643019	Argument	compiler		1642399	0					
ANR	1643020	Identifier	compiler		1642399	0					
ANR	1643021	Argument	input_flags | LOAD_DATA		1642399	1					
ANR	1643022	InclusiveOrExpression	input_flags | LOAD_DATA		1642399	0		|			
ANR	1643023	Identifier	input_flags		1642399	0					
ANR	1643024	Identifier	LOAD_DATA		1642399	1					
ANR	1643025	Argument	sugg_src2_r		1642399	2					
ANR	1643026	Identifier	sugg_src2_r		1642399	0					
ANR	1643027	Argument	src2		1642399	3					
ANR	1643028	Identifier	src2		1642399	0					
ANR	1643029	Argument	src2w		1642399	4					
ANR	1643030	Identifier	src2w		1642399	0					
ANR	1643031	Argument	dst		1642399	5					
ANR	1643032	Identifier	dst		1642399	0					
ANR	1643033	Argument	dstw		1642399	6					
ANR	1643034	Identifier	dstw		1642399	0					
ANR	1643035	ExpressionStatement	src2_r = sugg_src2_r	1219:2:40321:40341	1642399	1	True				
ANR	1643036	AssignmentExpression	src2_r = sugg_src2_r		1642399	0		=			
ANR	1643037	Identifier	src2_r		1642399	0					
ANR	1643038	Identifier	sugg_src2_r		1642399	1					
ANR	1643039	IfStatement	if ( dst_r == 0 )		1642399	10					
ANR	1643040	Condition	dst_r == 0	1222:5:40352:40361	1642399	0	True				
ANR	1643041	EqualityExpression	dst_r == 0		1642399	0		==			
ANR	1643042	Identifier	dst_r		1642399	0					
ANR	1643043	PrimaryExpression	0		1642399	1					
ANR	1643044	ExpressionStatement	dst_r = TMP_REG2	1223:2:40366:40382	1642399	1	True				
ANR	1643045	AssignmentExpression	dst_r = TMP_REG2		1642399	0		=			
ANR	1643046	Identifier	dst_r		1642399	0					
ANR	1643047	Identifier	TMP_REG2		1642399	1					
ANR	1643048	IfStatement	if ( src1_r == 0 )		1642399	11					
ANR	1643049	Condition	src1_r == 0	1225:5:40390:40400	1642399	0	True				
ANR	1643050	EqualityExpression	src1_r == 0		1642399	0		==			
ANR	1643051	Identifier	src1_r		1642399	0					
ANR	1643052	PrimaryExpression	0		1642399	1					
ANR	1643053	CompoundStatement		105:18:3114:3114	1642399	1					
ANR	1643054	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , 0 , 0 ) )"	1226:2:40407:40490	1642399	0	True				
ANR	1643055	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , 0 , 0 ) )"		1642399	0					
ANR	1643056	Callee	FAIL_IF		1642399	0					
ANR	1643057	Identifier	FAIL_IF		1642399	0					
ANR	1643058	ArgumentList	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , 0 , 0 )"		1642399	1					
ANR	1643059	Argument	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , 0 , 0 )"		1642399	0					
ANR	1643060	CallExpression	"getput_arg ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src1 , src1w , 0 , 0 )"		1642399	0					
ANR	1643061	Callee	getput_arg		1642399	0					
ANR	1643062	Identifier	getput_arg		1642399	0					
ANR	1643063	ArgumentList	compiler		1642399	1					
ANR	1643064	Argument	compiler		1642399	0					
ANR	1643065	Identifier	compiler		1642399	0					
ANR	1643066	Argument	input_flags | LOAD_DATA		1642399	1					
ANR	1643067	InclusiveOrExpression	input_flags | LOAD_DATA		1642399	0		|			
ANR	1643068	Identifier	input_flags		1642399	0					
ANR	1643069	Identifier	LOAD_DATA		1642399	1					
ANR	1643070	Argument	TMP_REG1		1642399	2					
ANR	1643071	Identifier	TMP_REG1		1642399	0					
ANR	1643072	Argument	src1		1642399	3					
ANR	1643073	Identifier	src1		1642399	0					
ANR	1643074	Argument	src1w		1642399	4					
ANR	1643075	Identifier	src1w		1642399	0					
ANR	1643076	Argument	0		1642399	5					
ANR	1643077	PrimaryExpression	0		1642399	0					
ANR	1643078	Argument	0		1642399	6					
ANR	1643079	PrimaryExpression	0		1642399	0					
ANR	1643080	ExpressionStatement	src1_r = TMP_REG1	1227:2:40494:40511	1642399	1	True				
ANR	1643081	AssignmentExpression	src1_r = TMP_REG1		1642399	0		=			
ANR	1643082	Identifier	src1_r		1642399	0					
ANR	1643083	Identifier	TMP_REG1		1642399	1					
ANR	1643084	IfStatement	if ( src2_r == 0 )		1642399	12					
ANR	1643085	Condition	src2_r == 0	1230:5:40522:40532	1642399	0	True				
ANR	1643086	EqualityExpression	src2_r == 0		1642399	0		==			
ANR	1643087	Identifier	src2_r		1642399	0					
ANR	1643088	PrimaryExpression	0		1642399	1					
ANR	1643089	CompoundStatement		110:18:3246:3246	1642399	1					
ANR	1643090	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , 0 , 0 ) )"	1231:2:40539:40625	1642399	0	True				
ANR	1643091	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , 0 , 0 ) )"		1642399	0					
ANR	1643092	Callee	FAIL_IF		1642399	0					
ANR	1643093	Identifier	FAIL_IF		1642399	0					
ANR	1643094	ArgumentList	"getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , 0 , 0 )"		1642399	1					
ANR	1643095	Argument	"getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , 0 , 0 )"		1642399	0					
ANR	1643096	CallExpression	"getput_arg ( compiler , input_flags | LOAD_DATA , sugg_src2_r , src2 , src2w , 0 , 0 )"		1642399	0					
ANR	1643097	Callee	getput_arg		1642399	0					
ANR	1643098	Identifier	getput_arg		1642399	0					
ANR	1643099	ArgumentList	compiler		1642399	1					
ANR	1643100	Argument	compiler		1642399	0					
ANR	1643101	Identifier	compiler		1642399	0					
ANR	1643102	Argument	input_flags | LOAD_DATA		1642399	1					
ANR	1643103	InclusiveOrExpression	input_flags | LOAD_DATA		1642399	0		|			
ANR	1643104	Identifier	input_flags		1642399	0					
ANR	1643105	Identifier	LOAD_DATA		1642399	1					
ANR	1643106	Argument	sugg_src2_r		1642399	2					
ANR	1643107	Identifier	sugg_src2_r		1642399	0					
ANR	1643108	Argument	src2		1642399	3					
ANR	1643109	Identifier	src2		1642399	0					
ANR	1643110	Argument	src2w		1642399	4					
ANR	1643111	Identifier	src2w		1642399	0					
ANR	1643112	Argument	0		1642399	5					
ANR	1643113	PrimaryExpression	0		1642399	0					
ANR	1643114	Argument	0		1642399	6					
ANR	1643115	PrimaryExpression	0		1642399	0					
ANR	1643116	ExpressionStatement	src2_r = sugg_src2_r	1232:2:40629:40649	1642399	1	True				
ANR	1643117	AssignmentExpression	src2_r = sugg_src2_r		1642399	0		=			
ANR	1643118	Identifier	src2_r		1642399	0					
ANR	1643119	Identifier	sugg_src2_r		1642399	1					
ANR	1643120	ExpressionStatement	"FAIL_IF ( emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r ) )"	1235:1:40656:40723	1642399	13	True				
ANR	1643121	CallExpression	"FAIL_IF ( emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r ) )"		1642399	0					
ANR	1643122	Callee	FAIL_IF		1642399	0					
ANR	1643123	Identifier	FAIL_IF		1642399	0					
ANR	1643124	ArgumentList	"emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r )"		1642399	1					
ANR	1643125	Argument	"emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r )"		1642399	0					
ANR	1643126	CallExpression	"emit_single_op ( compiler , op , flags , dst_r , src1_r , src2_r )"		1642399	0					
ANR	1643127	Callee	emit_single_op		1642399	0					
ANR	1643128	Identifier	emit_single_op		1642399	0					
ANR	1643129	ArgumentList	compiler		1642399	1					
ANR	1643130	Argument	compiler		1642399	0					
ANR	1643131	Identifier	compiler		1642399	0					
ANR	1643132	Argument	op		1642399	1					
ANR	1643133	Identifier	op		1642399	0					
ANR	1643134	Argument	flags		1642399	2					
ANR	1643135	Identifier	flags		1642399	0					
ANR	1643136	Argument	dst_r		1642399	3					
ANR	1643137	Identifier	dst_r		1642399	0					
ANR	1643138	Argument	src1_r		1642399	4					
ANR	1643139	Identifier	src1_r		1642399	0					
ANR	1643140	Argument	src2_r		1642399	5					
ANR	1643141	Identifier	src2_r		1642399	0					
ANR	1643142	IfStatement	if ( flags & ( FAST_DEST | SLOW_DEST ) )		1642399	14					
ANR	1643143	Condition	flags & ( FAST_DEST | SLOW_DEST )	1237:5:40731:40761	1642399	0	True				
ANR	1643144	BitAndExpression	flags & ( FAST_DEST | SLOW_DEST )		1642399	0		&			
ANR	1643145	Identifier	flags		1642399	0					
ANR	1643146	InclusiveOrExpression	FAST_DEST | SLOW_DEST		1642399	1		|			
ANR	1643147	Identifier	FAST_DEST		1642399	0					
ANR	1643148	Identifier	SLOW_DEST		1642399	1					
ANR	1643149	CompoundStatement		117:38:3475:3475	1642399	1					
ANR	1643150	IfStatement	if ( flags & FAST_DEST )		1642399	0					
ANR	1643151	Condition	flags & FAST_DEST	1238:6:40772:40788	1642399	0	True				
ANR	1643152	BitAndExpression	flags & FAST_DEST		1642399	0		&			
ANR	1643153	Identifier	flags		1642399	0					
ANR	1643154	Identifier	FAST_DEST		1642399	1					
ANR	1643155	ExpressionStatement	"FAIL_IF ( getput_arg_fast ( compiler , input_flags , dst_r , dst , dstw ) )"	1239:3:40794:40859	1642399	1	True				
ANR	1643156	CallExpression	"FAIL_IF ( getput_arg_fast ( compiler , input_flags , dst_r , dst , dstw ) )"		1642399	0					
ANR	1643157	Callee	FAIL_IF		1642399	0					
ANR	1643158	Identifier	FAIL_IF		1642399	0					
ANR	1643159	ArgumentList	"getput_arg_fast ( compiler , input_flags , dst_r , dst , dstw )"		1642399	1					
ANR	1643160	Argument	"getput_arg_fast ( compiler , input_flags , dst_r , dst , dstw )"		1642399	0					
ANR	1643161	CallExpression	"getput_arg_fast ( compiler , input_flags , dst_r , dst , dstw )"		1642399	0					
ANR	1643162	Callee	getput_arg_fast		1642399	0					
ANR	1643163	Identifier	getput_arg_fast		1642399	0					
ANR	1643164	ArgumentList	compiler		1642399	1					
ANR	1643165	Argument	compiler		1642399	0					
ANR	1643166	Identifier	compiler		1642399	0					
ANR	1643167	Argument	input_flags		1642399	1					
ANR	1643168	Identifier	input_flags		1642399	0					
ANR	1643169	Argument	dst_r		1642399	2					
ANR	1643170	Identifier	dst_r		1642399	0					
ANR	1643171	Argument	dst		1642399	3					
ANR	1643172	Identifier	dst		1642399	0					
ANR	1643173	Argument	dstw		1642399	4					
ANR	1643174	Identifier	dstw		1642399	0					
ANR	1643175	ElseStatement	else		1642399	0					
ANR	1643176	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , input_flags , dst_r , dst , dstw , 0 , 0 ) )"	1241:3:40871:40937	1642399	0	True				
ANR	1643177	CallExpression	"FAIL_IF ( getput_arg ( compiler , input_flags , dst_r , dst , dstw , 0 , 0 ) )"		1642399	0					
ANR	1643178	Callee	FAIL_IF		1642399	0					
ANR	1643179	Identifier	FAIL_IF		1642399	0					
ANR	1643180	ArgumentList	"getput_arg ( compiler , input_flags , dst_r , dst , dstw , 0 , 0 )"		1642399	1					
ANR	1643181	Argument	"getput_arg ( compiler , input_flags , dst_r , dst , dstw , 0 , 0 )"		1642399	0					
ANR	1643182	CallExpression	"getput_arg ( compiler , input_flags , dst_r , dst , dstw , 0 , 0 )"		1642399	0					
ANR	1643183	Callee	getput_arg		1642399	0					
ANR	1643184	Identifier	getput_arg		1642399	0					
ANR	1643185	ArgumentList	compiler		1642399	1					
ANR	1643186	Argument	compiler		1642399	0					
ANR	1643187	Identifier	compiler		1642399	0					
ANR	1643188	Argument	input_flags		1642399	1					
ANR	1643189	Identifier	input_flags		1642399	0					
ANR	1643190	Argument	dst_r		1642399	2					
ANR	1643191	Identifier	dst_r		1642399	0					
ANR	1643192	Argument	dst		1642399	3					
ANR	1643193	Identifier	dst		1642399	0					
ANR	1643194	Argument	dstw		1642399	4					
ANR	1643195	Identifier	dstw		1642399	0					
ANR	1643196	Argument	0		1642399	5					
ANR	1643197	PrimaryExpression	0		1642399	0					
ANR	1643198	Argument	0		1642399	6					
ANR	1643199	PrimaryExpression	0		1642399	0					
ANR	1643200	ReturnStatement	return SLJIT_SUCCESS ;	1243:1:40943:40963	1642399	15	True				
ANR	1643201	Identifier	SLJIT_SUCCESS		1642399	0					
ANR	1643202	ReturnType	static sljit_si		1642399	1					
ANR	1643203	Identifier	emit_op		1642399	2					
ANR	1643204	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si input_flags , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1642399	3					
ANR	1643205	Parameter	struct sljit_compiler * compiler	1117:24:37126:37156	1642399	0	True				
ANR	1643206	ParameterType	struct sljit_compiler *		1642399	0					
ANR	1643207	Identifier	compiler		1642399	1					
ANR	1643208	Parameter	sljit_si op	1117:57:37159:37169	1642399	1	True				
ANR	1643209	ParameterType	sljit_si		1642399	0					
ANR	1643210	Identifier	op		1642399	1					
ANR	1643211	Parameter	sljit_si input_flags	1117:70:37172:37191	1642399	2	True				
ANR	1643212	ParameterType	sljit_si		1642399	0					
ANR	1643213	Identifier	input_flags		1642399	1					
ANR	1643214	Parameter	sljit_si dst	1118:1:37195:37206	1642399	3	True				
ANR	1643215	ParameterType	sljit_si		1642399	0					
ANR	1643216	Identifier	dst		1642399	1					
ANR	1643217	Parameter	sljit_sw dstw	1118:15:37209:37221	1642399	4	True				
ANR	1643218	ParameterType	sljit_sw		1642399	0					
ANR	1643219	Identifier	dstw		1642399	1					
ANR	1643220	Parameter	sljit_si src1	1119:1:37225:37237	1642399	5	True				
ANR	1643221	ParameterType	sljit_si		1642399	0					
ANR	1643222	Identifier	src1		1642399	1					
ANR	1643223	Parameter	sljit_sw src1w	1119:16:37240:37253	1642399	6	True				
ANR	1643224	ParameterType	sljit_sw		1642399	0					
ANR	1643225	Identifier	src1w		1642399	1					
ANR	1643226	Parameter	sljit_si src2	1120:1:37257:37269	1642399	7	True				
ANR	1643227	ParameterType	sljit_si		1642399	0					
ANR	1643228	Identifier	src2		1642399	1					
ANR	1643229	Parameter	sljit_sw src2w	1120:16:37272:37285	1642399	8	True				
ANR	1643230	ParameterType	sljit_sw		1642399	0					
ANR	1643231	Identifier	src2w		1642399	1					
ANR	1643232	CFGEntryNode	ENTRY		1642399		True				
ANR	1643233	CFGExitNode	EXIT		1642399		True				
ANR	1643234	Symbol	TMP_REG2		1642399						
ANR	1643235	Symbol	TMP_REG1		1642399						
ANR	1643236	Symbol	SLJIT_MEM		1642399						
ANR	1643237	Symbol	SLJIT_MOVU_SI		1642399						
ANR	1643238	Symbol	* compiler		1642399						
ANR	1643239	Symbol	ARG_TEST		1642399						
ANR	1643240	Symbol	SLJIT_IMM		1642399						
ANR	1643241	Symbol	getput_arg		1642399						
ANR	1643242	Symbol	FAST_DEST		1642399						
ANR	1643243	Symbol	ALT_SET_FLAGS		1642399						
ANR	1643244	Symbol	can_cache		1642399						
ANR	1643245	Symbol	FAST_IS_REG		1642399						
ANR	1643246	Symbol	compiler -> cache_arg		1642399						
ANR	1643247	Symbol	input_flags		1642399						
ANR	1643248	Symbol	REG2_SOURCE		1642399						
ANR	1643249	Symbol	src1_r		1642399						
ANR	1643250	Symbol	ALT_SIGN_EXT		1642399						
ANR	1643251	Symbol	emit_single_op		1642399						
ANR	1643252	Symbol	REG_DEST		1642399						
ANR	1643253	Symbol	getput_arg_fast		1642399						
ANR	1643254	Symbol	SLJIT_UNLIKELY		1642399						
ANR	1643255	Symbol	compiler -> cache_argw		1642399						
ANR	1643256	Symbol	src1w		1642399						
ANR	1643257	Symbol	dst		1642399						
ANR	1643258	Symbol	LOAD_DATA		1642399						
ANR	1643259	Symbol	SLJIT_MOV		1642399						
ANR	1643260	Symbol	SLOW_DEST		1642399						
ANR	1643261	Symbol	flags		1642399						
ANR	1643262	Symbol	sugg_src2_r		1642399						
ANR	1643263	Symbol	dst_r		1642399						
ANR	1643264	Symbol	load_immediate		1642399						
ANR	1643265	Symbol	ALT_FORM1		1642399						
ANR	1643266	Symbol	ALT_FORM2		1642399						
ANR	1643267	Symbol	ALT_FORM3		1642399						
ANR	1643268	Symbol	ALT_FORM4		1642399						
ANR	1643269	Symbol	ALT_FORM5		1642399						
ANR	1643270	Symbol	compiler		1642399						
ANR	1643271	Symbol	ALT_FORM6		1642399						
ANR	1643272	Symbol	src2w		1642399						
ANR	1643273	Symbol	op		1642399						
ANR	1643274	Symbol	REG1_SOURCE		1642399						
ANR	1643275	Symbol	SLJIT_SUCCESS		1642399						
ANR	1643276	Symbol	src2_r		1642399						
ANR	1643277	Symbol	SLJIT_UNUSED		1642399						
ANR	1643278	Symbol	src1		1642399						
ANR	1643279	Symbol	src2		1642399						
ANR	1643280	Symbol	dstw		1642399						
ANR	1643281	Symbol	ALT_KEEP_CACHE		1642399						
ANR	1643282	Symbol	compiler -> error		1642399						
ANR	1643283	Function	sljit_emit_op0	1246:0:40968:42887							
ANR	1643284	FunctionDef	"sljit_emit_op0 (struct sljit_compiler * compiler , sljit_si op)"		1643283	0					
ANR	1643285	CompoundStatement		1247:0:41063:42887	1643283	0					
ANR	1643286	IdentifierDeclStatement	sljit_si int_op = op & SLJIT_INT_OP ;	1249:1:41123:41158	1643283	0	True				
ANR	1643287	IdentifierDecl	int_op = op & SLJIT_INT_OP		1643283	0					
ANR	1643288	IdentifierDeclType	sljit_si		1643283	0					
ANR	1643289	Identifier	int_op		1643283	1					
ANR	1643290	AssignmentExpression	int_op = op & SLJIT_INT_OP		1643283	2		=			
ANR	1643291	Identifier	int_op		1643283	0					
ANR	1643292	BitAndExpression	op & SLJIT_INT_OP		1643283	1		&			
ANR	1643293	Identifier	op		1643283	0					
ANR	1643294	Identifier	SLJIT_INT_OP		1643283	1					
ANR	1643295	ExpressionStatement	CHECK_ERROR ( )	1252:1:41169:41182	1643283	1	True				
ANR	1643296	CallExpression	CHECK_ERROR ( )		1643283	0					
ANR	1643297	Callee	CHECK_ERROR		1643283	0					
ANR	1643298	Identifier	CHECK_ERROR		1643283	0					
ANR	1643299	ArgumentList			1643283	1					
ANR	1643300	ExpressionStatement	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"	1253:1:41185:41226	1643283	2	True				
ANR	1643301	CallExpression	"CHECK ( check_sljit_emit_op0 ( compiler , op ) )"		1643283	0					
ANR	1643302	Callee	CHECK		1643283	0					
ANR	1643303	Identifier	CHECK		1643283	0					
ANR	1643304	ArgumentList	"check_sljit_emit_op0 ( compiler , op )"		1643283	1					
ANR	1643305	Argument	"check_sljit_emit_op0 ( compiler , op )"		1643283	0					
ANR	1643306	CallExpression	"check_sljit_emit_op0 ( compiler , op )"		1643283	0					
ANR	1643307	Callee	check_sljit_emit_op0		1643283	0					
ANR	1643308	Identifier	check_sljit_emit_op0		1643283	0					
ANR	1643309	ArgumentList	compiler		1643283	1					
ANR	1643310	Argument	compiler		1643283	0					
ANR	1643311	Identifier	compiler		1643283	0					
ANR	1643312	Argument	op		1643283	1					
ANR	1643313	Identifier	op		1643283	0					
ANR	1643314	ExpressionStatement	op = GET_OPCODE ( op )	1255:1:41230:41249	1643283	3	True				
ANR	1643315	AssignmentExpression	op = GET_OPCODE ( op )		1643283	0		=			
ANR	1643316	Identifier	op		1643283	0					
ANR	1643317	CallExpression	GET_OPCODE ( op )		1643283	1					
ANR	1643318	Callee	GET_OPCODE		1643283	0					
ANR	1643319	Identifier	GET_OPCODE		1643283	0					
ANR	1643320	ArgumentList	op		1643283	1					
ANR	1643321	Argument	op		1643283	0					
ANR	1643322	Identifier	op		1643283	0					
ANR	1643323	SwitchStatement	switch ( op )		1643283	4					
ANR	1643324	Condition	op	1256:9:41260:41261	1643283	0	True				
ANR	1643325	Identifier	op		1643283	0					
ANR	1643326	CompoundStatement		10:13:200:200	1643283	1					
ANR	1643327	Label	case SLJIT_BREAKPOINT :	1257:1:41267:41288	1643283	0	True				
ANR	1643328	Identifier	SLJIT_BREAKPOINT		1643283	0					
ANR	1643329	Label	case SLJIT_NOP :	1258:1:41291:41305	1643283	1	True				
ANR	1643330	Identifier	SLJIT_NOP		1643283	0					
ANR	1643331	ReturnStatement	"return push_inst ( compiler , NOP ) ;"	1259:2:41309:41340	1643283	2	True				
ANR	1643332	CallExpression	"push_inst ( compiler , NOP )"		1643283	0					
ANR	1643333	Callee	push_inst		1643283	0					
ANR	1643334	Identifier	push_inst		1643283	0					
ANR	1643335	ArgumentList	compiler		1643283	1					
ANR	1643336	Argument	compiler		1643283	0					
ANR	1643337	Identifier	compiler		1643283	0					
ANR	1643338	Argument	NOP		1643283	1					
ANR	1643339	Identifier	NOP		1643283	0					
ANR	1643340	Label	case SLJIT_LUMUL :	1260:1:41343:41359	1643283	3	True				
ANR	1643341	Identifier	SLJIT_LUMUL		1643283	0					
ANR	1643342	Label	case SLJIT_LSMUL :	1261:1:41362:41378	1643283	4	True				
ANR	1643343	Identifier	SLJIT_LSMUL		1643283	0					
ANR	1643344	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) ) )"	1262:2:41382:41456	1643283	5	True				
ANR	1643345	CallExpression	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) ) )"		1643283	0					
ANR	1643346	Callee	FAIL_IF		1643283	0					
ANR	1643347	Identifier	FAIL_IF		1643283	0					
ANR	1643348	ArgumentList	"push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) )"		1643283	1					
ANR	1643349	Argument	"push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) )"		1643283	0					
ANR	1643350	CallExpression	"push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) )"		1643283	0					
ANR	1643351	Callee	push_inst		1643283	0					
ANR	1643352	Identifier	push_inst		1643283	0					
ANR	1643353	ArgumentList	compiler		1643283	1					
ANR	1643354	Argument	compiler		1643283	0					
ANR	1643355	Identifier	compiler		1643283	0					
ANR	1643356	Argument	OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 )		1643283	1					
ANR	1643357	InclusiveOrExpression	OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 )		1643283	0		|			
ANR	1643358	Identifier	OR		1643283	0					
ANR	1643359	InclusiveOrExpression	S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 )		1643283	1		|			
ANR	1643360	CallExpression	S ( SLJIT_R0 )		1643283	0					
ANR	1643361	Callee	S		1643283	0					
ANR	1643362	Identifier	S		1643283	0					
ANR	1643363	ArgumentList	SLJIT_R0		1643283	1					
ANR	1643364	Argument	SLJIT_R0		1643283	0					
ANR	1643365	Identifier	SLJIT_R0		1643283	0					
ANR	1643366	InclusiveOrExpression	A ( TMP_REG1 ) | B ( SLJIT_R0 )		1643283	1		|			
ANR	1643367	CallExpression	A ( TMP_REG1 )		1643283	0					
ANR	1643368	Callee	A		1643283	0					
ANR	1643369	Identifier	A		1643283	0					
ANR	1643370	ArgumentList	TMP_REG1		1643283	1					
ANR	1643371	Argument	TMP_REG1		1643283	0					
ANR	1643372	Identifier	TMP_REG1		1643283	0					
ANR	1643373	CallExpression	B ( SLJIT_R0 )		1643283	1					
ANR	1643374	Callee	B		1643283	0					
ANR	1643375	Identifier	B		1643283	0					
ANR	1643376	ArgumentList	SLJIT_R0		1643283	1					
ANR	1643377	Argument	SLJIT_R0		1643283	0					
ANR	1643378	Identifier	SLJIT_R0		1643283	0					
ANR	1643379	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MULLD | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) ) )"	1264:2:41517:41594	1643283	6	True				
ANR	1643380	CallExpression	"FAIL_IF ( push_inst ( compiler , MULLD | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) ) )"		1643283	0					
ANR	1643381	Callee	FAIL_IF		1643283	0					
ANR	1643382	Identifier	FAIL_IF		1643283	0					
ANR	1643383	ArgumentList	"push_inst ( compiler , MULLD | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) )"		1643283	1					
ANR	1643384	Argument	"push_inst ( compiler , MULLD | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) )"		1643283	0					
ANR	1643385	CallExpression	"push_inst ( compiler , MULLD | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) )"		1643283	0					
ANR	1643386	Callee	push_inst		1643283	0					
ANR	1643387	Identifier	push_inst		1643283	0					
ANR	1643388	ArgumentList	compiler		1643283	1					
ANR	1643389	Argument	compiler		1643283	0					
ANR	1643390	Identifier	compiler		1643283	0					
ANR	1643391	Argument	MULLD | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 )		1643283	1					
ANR	1643392	InclusiveOrExpression	MULLD | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 )		1643283	0		|			
ANR	1643393	Identifier	MULLD		1643283	0					
ANR	1643394	InclusiveOrExpression	D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 )		1643283	1		|			
ANR	1643395	CallExpression	D ( SLJIT_R0 )		1643283	0					
ANR	1643396	Callee	D		1643283	0					
ANR	1643397	Identifier	D		1643283	0					
ANR	1643398	ArgumentList	SLJIT_R0		1643283	1					
ANR	1643399	Argument	SLJIT_R0		1643283	0					
ANR	1643400	Identifier	SLJIT_R0		1643283	0					
ANR	1643401	InclusiveOrExpression	A ( TMP_REG1 ) | B ( SLJIT_R1 )		1643283	1		|			
ANR	1643402	CallExpression	A ( TMP_REG1 )		1643283	0					
ANR	1643403	Callee	A		1643283	0					
ANR	1643404	Identifier	A		1643283	0					
ANR	1643405	ArgumentList	TMP_REG1		1643283	1					
ANR	1643406	Argument	TMP_REG1		1643283	0					
ANR	1643407	Identifier	TMP_REG1		1643283	0					
ANR	1643408	CallExpression	B ( SLJIT_R1 )		1643283	1					
ANR	1643409	Callee	B		1643283	0					
ANR	1643410	Identifier	B		1643283	0					
ANR	1643411	ArgumentList	SLJIT_R1		1643283	1					
ANR	1643412	Argument	SLJIT_R1		1643283	0					
ANR	1643413	Identifier	SLJIT_R1		1643283	0					
ANR	1643414	ReturnStatement	"return push_inst ( compiler , ( op == SLJIT_LUMUL ? MULHDU : MULHD ) | D ( SLJIT_R1 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) ) ;"	1265:2:41598:41704	1643283	7	True				
ANR	1643415	CallExpression	"push_inst ( compiler , ( op == SLJIT_LUMUL ? MULHDU : MULHD ) | D ( SLJIT_R1 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) )"		1643283	0					
ANR	1643416	Callee	push_inst		1643283	0					
ANR	1643417	Identifier	push_inst		1643283	0					
ANR	1643418	ArgumentList	compiler		1643283	1					
ANR	1643419	Argument	compiler		1643283	0					
ANR	1643420	Identifier	compiler		1643283	0					
ANR	1643421	Argument	( op == SLJIT_LUMUL ? MULHDU : MULHD ) | D ( SLJIT_R1 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 )		1643283	1					
ANR	1643422	InclusiveOrExpression	( op == SLJIT_LUMUL ? MULHDU : MULHD ) | D ( SLJIT_R1 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 )		1643283	0		|			
ANR	1643423	ConditionalExpression	op == SLJIT_LUMUL ? MULHDU : MULHD		1643283	0					
ANR	1643424	Condition	op == SLJIT_LUMUL		1643283	0					
ANR	1643425	EqualityExpression	op == SLJIT_LUMUL		1643283	0		==			
ANR	1643426	Identifier	op		1643283	0					
ANR	1643427	Identifier	SLJIT_LUMUL		1643283	1					
ANR	1643428	Identifier	MULHDU		1643283	1					
ANR	1643429	Identifier	MULHD		1643283	2					
ANR	1643430	InclusiveOrExpression	D ( SLJIT_R1 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 )		1643283	1		|			
ANR	1643431	CallExpression	D ( SLJIT_R1 )		1643283	0					
ANR	1643432	Callee	D		1643283	0					
ANR	1643433	Identifier	D		1643283	0					
ANR	1643434	ArgumentList	SLJIT_R1		1643283	1					
ANR	1643435	Argument	SLJIT_R1		1643283	0					
ANR	1643436	Identifier	SLJIT_R1		1643283	0					
ANR	1643437	InclusiveOrExpression	A ( TMP_REG1 ) | B ( SLJIT_R1 )		1643283	1		|			
ANR	1643438	CallExpression	A ( TMP_REG1 )		1643283	0					
ANR	1643439	Callee	A		1643283	0					
ANR	1643440	Identifier	A		1643283	0					
ANR	1643441	ArgumentList	TMP_REG1		1643283	1					
ANR	1643442	Argument	TMP_REG1		1643283	0					
ANR	1643443	Identifier	TMP_REG1		1643283	0					
ANR	1643444	CallExpression	B ( SLJIT_R1 )		1643283	1					
ANR	1643445	Callee	B		1643283	0					
ANR	1643446	Identifier	B		1643283	0					
ANR	1643447	ArgumentList	SLJIT_R1		1643283	1					
ANR	1643448	Argument	SLJIT_R1		1643283	0					
ANR	1643449	Identifier	SLJIT_R1		1643283	0					
ANR	1643450	Label	case SLJIT_LUDIV :	1270:1:41911:41927	1643283	8	True				
ANR	1643451	Identifier	SLJIT_LUDIV		1643283	0					
ANR	1643452	Label	case SLJIT_LSDIV :	1271:1:41930:41946	1643283	9	True				
ANR	1643453	Identifier	SLJIT_LSDIV		1643283	0					
ANR	1643454	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) ) )"	1272:2:41950:42024	1643283	10	True				
ANR	1643455	CallExpression	"FAIL_IF ( push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) ) )"		1643283	0					
ANR	1643456	Callee	FAIL_IF		1643283	0					
ANR	1643457	Identifier	FAIL_IF		1643283	0					
ANR	1643458	ArgumentList	"push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) )"		1643283	1					
ANR	1643459	Argument	"push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) )"		1643283	0					
ANR	1643460	CallExpression	"push_inst ( compiler , OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 ) )"		1643283	0					
ANR	1643461	Callee	push_inst		1643283	0					
ANR	1643462	Identifier	push_inst		1643283	0					
ANR	1643463	ArgumentList	compiler		1643283	1					
ANR	1643464	Argument	compiler		1643283	0					
ANR	1643465	Identifier	compiler		1643283	0					
ANR	1643466	Argument	OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 )		1643283	1					
ANR	1643467	InclusiveOrExpression	OR | S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 )		1643283	0		|			
ANR	1643468	Identifier	OR		1643283	0					
ANR	1643469	InclusiveOrExpression	S ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R0 )		1643283	1		|			
ANR	1643470	CallExpression	S ( SLJIT_R0 )		1643283	0					
ANR	1643471	Callee	S		1643283	0					
ANR	1643472	Identifier	S		1643283	0					
ANR	1643473	ArgumentList	SLJIT_R0		1643283	1					
ANR	1643474	Argument	SLJIT_R0		1643283	0					
ANR	1643475	Identifier	SLJIT_R0		1643283	0					
ANR	1643476	InclusiveOrExpression	A ( TMP_REG1 ) | B ( SLJIT_R0 )		1643283	1		|			
ANR	1643477	CallExpression	A ( TMP_REG1 )		1643283	0					
ANR	1643478	Callee	A		1643283	0					
ANR	1643479	Identifier	A		1643283	0					
ANR	1643480	ArgumentList	TMP_REG1		1643283	1					
ANR	1643481	Argument	TMP_REG1		1643283	0					
ANR	1643482	Identifier	TMP_REG1		1643283	0					
ANR	1643483	CallExpression	B ( SLJIT_R0 )		1643283	1					
ANR	1643484	Callee	B		1643283	0					
ANR	1643485	Identifier	B		1643283	0					
ANR	1643486	ArgumentList	SLJIT_R0		1643283	1					
ANR	1643487	Argument	SLJIT_R0		1643283	0					
ANR	1643488	Identifier	SLJIT_R0		1643283	0					
ANR	1643489	IfStatement	if ( int_op )		1643283	11					
ANR	1643490	Condition	int_op	1274:6:42089:42094	1643283	0	True				
ANR	1643491	Identifier	int_op		1643283	0					
ANR	1643492	CompoundStatement		28:14:1033:1033	1643283	1					
ANR	1643493	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( op == SLJIT_LUDIV ? DIVWU : DIVW ) | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) ) )"	1275:3:42102:42208	1643283	0	True				
ANR	1643494	CallExpression	"FAIL_IF ( push_inst ( compiler , ( op == SLJIT_LUDIV ? DIVWU : DIVW ) | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) ) )"		1643283	0					
ANR	1643495	Callee	FAIL_IF		1643283	0					
ANR	1643496	Identifier	FAIL_IF		1643283	0					
ANR	1643497	ArgumentList	"push_inst ( compiler , ( op == SLJIT_LUDIV ? DIVWU : DIVW ) | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) )"		1643283	1					
ANR	1643498	Argument	"push_inst ( compiler , ( op == SLJIT_LUDIV ? DIVWU : DIVW ) | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) )"		1643283	0					
ANR	1643499	CallExpression	"push_inst ( compiler , ( op == SLJIT_LUDIV ? DIVWU : DIVW ) | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) )"		1643283	0					
ANR	1643500	Callee	push_inst		1643283	0					
ANR	1643501	Identifier	push_inst		1643283	0					
ANR	1643502	ArgumentList	compiler		1643283	1					
ANR	1643503	Argument	compiler		1643283	0					
ANR	1643504	Identifier	compiler		1643283	0					
ANR	1643505	Argument	( op == SLJIT_LUDIV ? DIVWU : DIVW ) | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 )		1643283	1					
ANR	1643506	InclusiveOrExpression	( op == SLJIT_LUDIV ? DIVWU : DIVW ) | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 )		1643283	0		|			
ANR	1643507	ConditionalExpression	op == SLJIT_LUDIV ? DIVWU : DIVW		1643283	0					
ANR	1643508	Condition	op == SLJIT_LUDIV		1643283	0					
ANR	1643509	EqualityExpression	op == SLJIT_LUDIV		1643283	0		==			
ANR	1643510	Identifier	op		1643283	0					
ANR	1643511	Identifier	SLJIT_LUDIV		1643283	1					
ANR	1643512	Identifier	DIVWU		1643283	1					
ANR	1643513	Identifier	DIVW		1643283	2					
ANR	1643514	InclusiveOrExpression	D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 )		1643283	1		|			
ANR	1643515	CallExpression	D ( SLJIT_R0 )		1643283	0					
ANR	1643516	Callee	D		1643283	0					
ANR	1643517	Identifier	D		1643283	0					
ANR	1643518	ArgumentList	SLJIT_R0		1643283	1					
ANR	1643519	Argument	SLJIT_R0		1643283	0					
ANR	1643520	Identifier	SLJIT_R0		1643283	0					
ANR	1643521	InclusiveOrExpression	A ( TMP_REG1 ) | B ( SLJIT_R1 )		1643283	1		|			
ANR	1643522	CallExpression	A ( TMP_REG1 )		1643283	0					
ANR	1643523	Callee	A		1643283	0					
ANR	1643524	Identifier	A		1643283	0					
ANR	1643525	ArgumentList	TMP_REG1		1643283	1					
ANR	1643526	Argument	TMP_REG1		1643283	0					
ANR	1643527	Identifier	TMP_REG1		1643283	0					
ANR	1643528	CallExpression	B ( SLJIT_R1 )		1643283	1					
ANR	1643529	Callee	B		1643283	0					
ANR	1643530	Identifier	B		1643283	0					
ANR	1643531	ArgumentList	SLJIT_R1		1643283	1					
ANR	1643532	Argument	SLJIT_R1		1643283	0					
ANR	1643533	Identifier	SLJIT_R1		1643283	0					
ANR	1643534	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MULLW | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) ) )"	1276:3:42213:42290	1643283	1	True				
ANR	1643535	CallExpression	"FAIL_IF ( push_inst ( compiler , MULLW | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) ) )"		1643283	0					
ANR	1643536	Callee	FAIL_IF		1643283	0					
ANR	1643537	Identifier	FAIL_IF		1643283	0					
ANR	1643538	ArgumentList	"push_inst ( compiler , MULLW | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) )"		1643283	1					
ANR	1643539	Argument	"push_inst ( compiler , MULLW | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) )"		1643283	0					
ANR	1643540	CallExpression	"push_inst ( compiler , MULLW | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) )"		1643283	0					
ANR	1643541	Callee	push_inst		1643283	0					
ANR	1643542	Identifier	push_inst		1643283	0					
ANR	1643543	ArgumentList	compiler		1643283	1					
ANR	1643544	Argument	compiler		1643283	0					
ANR	1643545	Identifier	compiler		1643283	0					
ANR	1643546	Argument	MULLW | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1643283	1					
ANR	1643547	InclusiveOrExpression	MULLW | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1643283	0		|			
ANR	1643548	Identifier	MULLW		1643283	0					
ANR	1643549	InclusiveOrExpression	D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1643283	1		|			
ANR	1643550	CallExpression	D ( SLJIT_R1 )		1643283	0					
ANR	1643551	Callee	D		1643283	0					
ANR	1643552	Identifier	D		1643283	0					
ANR	1643553	ArgumentList	SLJIT_R1		1643283	1					
ANR	1643554	Argument	SLJIT_R1		1643283	0					
ANR	1643555	Identifier	SLJIT_R1		1643283	0					
ANR	1643556	InclusiveOrExpression	A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1643283	1		|			
ANR	1643557	CallExpression	A ( SLJIT_R0 )		1643283	0					
ANR	1643558	Callee	A		1643283	0					
ANR	1643559	Identifier	A		1643283	0					
ANR	1643560	ArgumentList	SLJIT_R0		1643283	1					
ANR	1643561	Argument	SLJIT_R0		1643283	0					
ANR	1643562	Identifier	SLJIT_R0		1643283	0					
ANR	1643563	CallExpression	B ( SLJIT_R1 )		1643283	1					
ANR	1643564	Callee	B		1643283	0					
ANR	1643565	Identifier	B		1643283	0					
ANR	1643566	ArgumentList	SLJIT_R1		1643283	1					
ANR	1643567	Argument	SLJIT_R1		1643283	0					
ANR	1643568	Identifier	SLJIT_R1		1643283	0					
ANR	1643569	ElseStatement	else		1643283	0					
ANR	1643570	CompoundStatement		31:9:1237:1237	1643283	0					
ANR	1643571	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( op == SLJIT_LUDIV ? DIVDU : DIVD ) | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) ) )"	1278:3:42306:42412	1643283	0	True				
ANR	1643572	CallExpression	"FAIL_IF ( push_inst ( compiler , ( op == SLJIT_LUDIV ? DIVDU : DIVD ) | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) ) )"		1643283	0					
ANR	1643573	Callee	FAIL_IF		1643283	0					
ANR	1643574	Identifier	FAIL_IF		1643283	0					
ANR	1643575	ArgumentList	"push_inst ( compiler , ( op == SLJIT_LUDIV ? DIVDU : DIVD ) | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) )"		1643283	1					
ANR	1643576	Argument	"push_inst ( compiler , ( op == SLJIT_LUDIV ? DIVDU : DIVD ) | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) )"		1643283	0					
ANR	1643577	CallExpression	"push_inst ( compiler , ( op == SLJIT_LUDIV ? DIVDU : DIVD ) | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 ) )"		1643283	0					
ANR	1643578	Callee	push_inst		1643283	0					
ANR	1643579	Identifier	push_inst		1643283	0					
ANR	1643580	ArgumentList	compiler		1643283	1					
ANR	1643581	Argument	compiler		1643283	0					
ANR	1643582	Identifier	compiler		1643283	0					
ANR	1643583	Argument	( op == SLJIT_LUDIV ? DIVDU : DIVD ) | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 )		1643283	1					
ANR	1643584	InclusiveOrExpression	( op == SLJIT_LUDIV ? DIVDU : DIVD ) | D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 )		1643283	0		|			
ANR	1643585	ConditionalExpression	op == SLJIT_LUDIV ? DIVDU : DIVD		1643283	0					
ANR	1643586	Condition	op == SLJIT_LUDIV		1643283	0					
ANR	1643587	EqualityExpression	op == SLJIT_LUDIV		1643283	0		==			
ANR	1643588	Identifier	op		1643283	0					
ANR	1643589	Identifier	SLJIT_LUDIV		1643283	1					
ANR	1643590	Identifier	DIVDU		1643283	1					
ANR	1643591	Identifier	DIVD		1643283	2					
ANR	1643592	InclusiveOrExpression	D ( SLJIT_R0 ) | A ( TMP_REG1 ) | B ( SLJIT_R1 )		1643283	1		|			
ANR	1643593	CallExpression	D ( SLJIT_R0 )		1643283	0					
ANR	1643594	Callee	D		1643283	0					
ANR	1643595	Identifier	D		1643283	0					
ANR	1643596	ArgumentList	SLJIT_R0		1643283	1					
ANR	1643597	Argument	SLJIT_R0		1643283	0					
ANR	1643598	Identifier	SLJIT_R0		1643283	0					
ANR	1643599	InclusiveOrExpression	A ( TMP_REG1 ) | B ( SLJIT_R1 )		1643283	1		|			
ANR	1643600	CallExpression	A ( TMP_REG1 )		1643283	0					
ANR	1643601	Callee	A		1643283	0					
ANR	1643602	Identifier	A		1643283	0					
ANR	1643603	ArgumentList	TMP_REG1		1643283	1					
ANR	1643604	Argument	TMP_REG1		1643283	0					
ANR	1643605	Identifier	TMP_REG1		1643283	0					
ANR	1643606	CallExpression	B ( SLJIT_R1 )		1643283	1					
ANR	1643607	Callee	B		1643283	0					
ANR	1643608	Identifier	B		1643283	0					
ANR	1643609	ArgumentList	SLJIT_R1		1643283	1					
ANR	1643610	Argument	SLJIT_R1		1643283	0					
ANR	1643611	Identifier	SLJIT_R1		1643283	0					
ANR	1643612	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MULLD | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) ) )"	1279:3:42417:42494	1643283	1	True				
ANR	1643613	CallExpression	"FAIL_IF ( push_inst ( compiler , MULLD | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) ) )"		1643283	0					
ANR	1643614	Callee	FAIL_IF		1643283	0					
ANR	1643615	Identifier	FAIL_IF		1643283	0					
ANR	1643616	ArgumentList	"push_inst ( compiler , MULLD | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) )"		1643283	1					
ANR	1643617	Argument	"push_inst ( compiler , MULLD | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) )"		1643283	0					
ANR	1643618	CallExpression	"push_inst ( compiler , MULLD | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 ) )"		1643283	0					
ANR	1643619	Callee	push_inst		1643283	0					
ANR	1643620	Identifier	push_inst		1643283	0					
ANR	1643621	ArgumentList	compiler		1643283	1					
ANR	1643622	Argument	compiler		1643283	0					
ANR	1643623	Identifier	compiler		1643283	0					
ANR	1643624	Argument	MULLD | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1643283	1					
ANR	1643625	InclusiveOrExpression	MULLD | D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1643283	0		|			
ANR	1643626	Identifier	MULLD		1643283	0					
ANR	1643627	InclusiveOrExpression	D ( SLJIT_R1 ) | A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1643283	1		|			
ANR	1643628	CallExpression	D ( SLJIT_R1 )		1643283	0					
ANR	1643629	Callee	D		1643283	0					
ANR	1643630	Identifier	D		1643283	0					
ANR	1643631	ArgumentList	SLJIT_R1		1643283	1					
ANR	1643632	Argument	SLJIT_R1		1643283	0					
ANR	1643633	Identifier	SLJIT_R1		1643283	0					
ANR	1643634	InclusiveOrExpression	A ( SLJIT_R0 ) | B ( SLJIT_R1 )		1643283	1		|			
ANR	1643635	CallExpression	A ( SLJIT_R0 )		1643283	0					
ANR	1643636	Callee	A		1643283	0					
ANR	1643637	Identifier	A		1643283	0					
ANR	1643638	ArgumentList	SLJIT_R0		1643283	1					
ANR	1643639	Argument	SLJIT_R0		1643283	0					
ANR	1643640	Identifier	SLJIT_R0		1643283	0					
ANR	1643641	CallExpression	B ( SLJIT_R1 )		1643283	1					
ANR	1643642	Callee	B		1643283	0					
ANR	1643643	Identifier	B		1643283	0					
ANR	1643644	ArgumentList	SLJIT_R1		1643283	1					
ANR	1643645	Argument	SLJIT_R1		1643283	0					
ANR	1643646	Identifier	SLJIT_R1		1643283	0					
ANR	1643647	ReturnStatement	"return push_inst ( compiler , SUBF | D ( SLJIT_R1 ) | A ( SLJIT_R1 ) | B ( TMP_REG1 ) ) ;"	1281:2:42502:42576	1643283	12	True				
ANR	1643648	CallExpression	"push_inst ( compiler , SUBF | D ( SLJIT_R1 ) | A ( SLJIT_R1 ) | B ( TMP_REG1 ) )"		1643283	0					
ANR	1643649	Callee	push_inst		1643283	0					
ANR	1643650	Identifier	push_inst		1643283	0					
ANR	1643651	ArgumentList	compiler		1643283	1					
ANR	1643652	Argument	compiler		1643283	0					
ANR	1643653	Identifier	compiler		1643283	0					
ANR	1643654	Argument	SUBF | D ( SLJIT_R1 ) | A ( SLJIT_R1 ) | B ( TMP_REG1 )		1643283	1					
ANR	1643655	InclusiveOrExpression	SUBF | D ( SLJIT_R1 ) | A ( SLJIT_R1 ) | B ( TMP_REG1 )		1643283	0		|			
ANR	1643656	Identifier	SUBF		1643283	0					
ANR	1643657	InclusiveOrExpression	D ( SLJIT_R1 ) | A ( SLJIT_R1 ) | B ( TMP_REG1 )		1643283	1		|			
ANR	1643658	CallExpression	D ( SLJIT_R1 )		1643283	0					
ANR	1643659	Callee	D		1643283	0					
ANR	1643660	Identifier	D		1643283	0					
ANR	1643661	ArgumentList	SLJIT_R1		1643283	1					
ANR	1643662	Argument	SLJIT_R1		1643283	0					
ANR	1643663	Identifier	SLJIT_R1		1643283	0					
ANR	1643664	InclusiveOrExpression	A ( SLJIT_R1 ) | B ( TMP_REG1 )		1643283	1		|			
ANR	1643665	CallExpression	A ( SLJIT_R1 )		1643283	0					
ANR	1643666	Callee	A		1643283	0					
ANR	1643667	Identifier	A		1643283	0					
ANR	1643668	ArgumentList	SLJIT_R1		1643283	1					
ANR	1643669	Argument	SLJIT_R1		1643283	0					
ANR	1643670	Identifier	SLJIT_R1		1643283	0					
ANR	1643671	CallExpression	B ( TMP_REG1 )		1643283	1					
ANR	1643672	Callee	B		1643283	0					
ANR	1643673	Identifier	B		1643283	0					
ANR	1643674	ArgumentList	TMP_REG1		1643283	1					
ANR	1643675	Argument	TMP_REG1		1643283	0					
ANR	1643676	Identifier	TMP_REG1		1643283	0					
ANR	1643677	ReturnStatement	return SLJIT_SUCCESS ;	1289:1:42865:42885	1643283	5	True				
ANR	1643678	Identifier	SLJIT_SUCCESS		1643283	0					
ANR	1643679	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1643283	1					
ANR	1643680	Identifier	sljit_emit_op0		1643283	2					
ANR	1643681	ParameterList	"struct sljit_compiler * compiler , sljit_si op"		1643283	3					
ANR	1643682	Parameter	struct sljit_compiler * compiler	1246:49:41017:41047	1643283	0	True				
ANR	1643683	ParameterType	struct sljit_compiler *		1643283	0					
ANR	1643684	Identifier	compiler		1643283	1					
ANR	1643685	Parameter	sljit_si op	1246:82:41050:41060	1643283	1	True				
ANR	1643686	ParameterType	sljit_si		1643283	0					
ANR	1643687	Identifier	op		1643283	1					
ANR	1643688	CFGEntryNode	ENTRY		1643283		True				
ANR	1643689	CFGExitNode	EXIT		1643283		True				
ANR	1643690	Symbol	int_op		1643283						
ANR	1643691	Symbol	A		1643283						
ANR	1643692	Symbol	SUBF		1643283						
ANR	1643693	Symbol	B		1643283						
ANR	1643694	Symbol	TMP_REG1		1643283						
ANR	1643695	Symbol	MULHDU		1643283						
ANR	1643696	Symbol	D		1643283						
ANR	1643697	Symbol	MULHD		1643283						
ANR	1643698	Symbol	SLJIT_LUMUL		1643283						
ANR	1643699	Symbol	MULLW		1643283						
ANR	1643700	Symbol	SLJIT_R1		1643283						
ANR	1643701	Symbol	GET_OPCODE		1643283						
ANR	1643702	Symbol	SLJIT_R0		1643283						
ANR	1643703	Symbol	S		1643283						
ANR	1643704	Symbol	DIVD		1643283						
ANR	1643705	Symbol	compiler		1643283						
ANR	1643706	Symbol	op		1643283						
ANR	1643707	Symbol	push_inst		1643283						
ANR	1643708	Symbol	DIVDU		1643283						
ANR	1643709	Symbol	OR		1643283						
ANR	1643710	Symbol	check_sljit_emit_op0		1643283						
ANR	1643711	Symbol	DIVW		1643283						
ANR	1643712	Symbol	SLJIT_INT_OP		1643283						
ANR	1643713	Symbol	SLJIT_LUDIV		1643283						
ANR	1643714	Symbol	SLJIT_SUCCESS		1643283						
ANR	1643715	Symbol	NOP		1643283						
ANR	1643716	Symbol	DIVWU		1643283						
ANR	1643717	Symbol	MULLD		1643283						
ANR	1643718	Function	sljit_emit_op1	1295:0:43090:46629							
ANR	1643719	FunctionDef	"sljit_emit_op1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1643718	0					
ANR	1643720	CompoundStatement		1298:0:43245:46629	1643718	0					
ANR	1643721	IdentifierDeclStatement	sljit_si flags = GET_FLAGS ( op ) ? ALT_SET_FLAGS : 0 ;	1299:1:43248:43298	1643718	0	True				
ANR	1643722	IdentifierDecl	flags = GET_FLAGS ( op ) ? ALT_SET_FLAGS : 0		1643718	0					
ANR	1643723	IdentifierDeclType	sljit_si		1643718	0					
ANR	1643724	Identifier	flags		1643718	1					
ANR	1643725	AssignmentExpression	flags = GET_FLAGS ( op ) ? ALT_SET_FLAGS : 0		1643718	2		=			
ANR	1643726	Identifier	flags		1643718	0					
ANR	1643727	ConditionalExpression	GET_FLAGS ( op ) ? ALT_SET_FLAGS : 0		1643718	1					
ANR	1643728	Condition	GET_FLAGS ( op )		1643718	0					
ANR	1643729	CallExpression	GET_FLAGS ( op )		1643718	0					
ANR	1643730	Callee	GET_FLAGS		1643718	0					
ANR	1643731	Identifier	GET_FLAGS		1643718	0					
ANR	1643732	ArgumentList	op		1643718	1					
ANR	1643733	Argument	op		1643718	0					
ANR	1643734	Identifier	op		1643718	0					
ANR	1643735	Identifier	ALT_SET_FLAGS		1643718	1					
ANR	1643736	PrimaryExpression	0		1643718	2					
ANR	1643737	IdentifierDeclStatement	sljit_si op_flags = GET_ALL_FLAGS ( op ) ;	1300:1:43301:43338	1643718	1	True				
ANR	1643738	IdentifierDecl	op_flags = GET_ALL_FLAGS ( op )		1643718	0					
ANR	1643739	IdentifierDeclType	sljit_si		1643718	0					
ANR	1643740	Identifier	op_flags		1643718	1					
ANR	1643741	AssignmentExpression	op_flags = GET_ALL_FLAGS ( op )		1643718	2		=			
ANR	1643742	Identifier	op_flags		1643718	0					
ANR	1643743	CallExpression	GET_ALL_FLAGS ( op )		1643718	1					
ANR	1643744	Callee	GET_ALL_FLAGS		1643718	0					
ANR	1643745	Identifier	GET_ALL_FLAGS		1643718	0					
ANR	1643746	ArgumentList	op		1643718	1					
ANR	1643747	Argument	op		1643718	0					
ANR	1643748	Identifier	op		1643718	0					
ANR	1643749	ExpressionStatement	CHECK_ERROR ( )	1302:1:43342:43355	1643718	2	True				
ANR	1643750	CallExpression	CHECK_ERROR ( )		1643718	0					
ANR	1643751	Callee	CHECK_ERROR		1643718	0					
ANR	1643752	Identifier	CHECK_ERROR		1643718	0					
ANR	1643753	ArgumentList			1643718	1					
ANR	1643754	ExpressionStatement	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"	1303:1:43358:43421	1643718	3	True				
ANR	1643755	CallExpression	"CHECK ( check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw ) )"		1643718	0					
ANR	1643756	Callee	CHECK		1643718	0					
ANR	1643757	Identifier	CHECK		1643718	0					
ANR	1643758	ArgumentList	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1643718	1					
ANR	1643759	Argument	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1643718	0					
ANR	1643760	CallExpression	"check_sljit_emit_op1 ( compiler , op , dst , dstw , src , srcw )"		1643718	0					
ANR	1643761	Callee	check_sljit_emit_op1		1643718	0					
ANR	1643762	Identifier	check_sljit_emit_op1		1643718	0					
ANR	1643763	ArgumentList	compiler		1643718	1					
ANR	1643764	Argument	compiler		1643718	0					
ANR	1643765	Identifier	compiler		1643718	0					
ANR	1643766	Argument	op		1643718	1					
ANR	1643767	Identifier	op		1643718	0					
ANR	1643768	Argument	dst		1643718	2					
ANR	1643769	Identifier	dst		1643718	0					
ANR	1643770	Argument	dstw		1643718	3					
ANR	1643771	Identifier	dstw		1643718	0					
ANR	1643772	Argument	src		1643718	4					
ANR	1643773	Identifier	src		1643718	0					
ANR	1643774	Argument	srcw		1643718	5					
ANR	1643775	Identifier	srcw		1643718	0					
ANR	1643776	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1304:1:43424:43454	1643718	4	True				
ANR	1643777	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1643718	0					
ANR	1643778	Callee	ADJUST_LOCAL_OFFSET		1643718	0					
ANR	1643779	Identifier	ADJUST_LOCAL_OFFSET		1643718	0					
ANR	1643780	ArgumentList	dst		1643718	1					
ANR	1643781	Argument	dst		1643718	0					
ANR	1643782	Identifier	dst		1643718	0					
ANR	1643783	Argument	dstw		1643718	1					
ANR	1643784	Identifier	dstw		1643718	0					
ANR	1643785	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	1305:1:43457:43487	1643718	5	True				
ANR	1643786	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1643718	0					
ANR	1643787	Callee	ADJUST_LOCAL_OFFSET		1643718	0					
ANR	1643788	Identifier	ADJUST_LOCAL_OFFSET		1643718	0					
ANR	1643789	ArgumentList	src		1643718	1					
ANR	1643790	Argument	src		1643718	0					
ANR	1643791	Identifier	src		1643718	0					
ANR	1643792	Argument	srcw		1643718	1					
ANR	1643793	Identifier	srcw		1643718	0					
ANR	1643794	ExpressionStatement	op = GET_OPCODE ( op )	1307:1:43491:43510	1643718	6	True				
ANR	1643795	AssignmentExpression	op = GET_OPCODE ( op )		1643718	0		=			
ANR	1643796	Identifier	op		1643718	0					
ANR	1643797	CallExpression	GET_OPCODE ( op )		1643718	1					
ANR	1643798	Callee	GET_OPCODE		1643718	0					
ANR	1643799	Identifier	GET_OPCODE		1643718	0					
ANR	1643800	ArgumentList	op		1643718	1					
ANR	1643801	Argument	op		1643718	0					
ANR	1643802	Identifier	op		1643718	0					
ANR	1643803	IfStatement	if ( ( src & SLJIT_IMM ) && srcw == 0 )		1643718	7					
ANR	1643804	Condition	( src & SLJIT_IMM ) && srcw == 0	1308:5:43517:43546	1643718	0	True				
ANR	1643805	AndExpression	( src & SLJIT_IMM ) && srcw == 0		1643718	0		&&			
ANR	1643806	BitAndExpression	src & SLJIT_IMM		1643718	0		&			
ANR	1643807	Identifier	src		1643718	0					
ANR	1643808	Identifier	SLJIT_IMM		1643718	1					
ANR	1643809	EqualityExpression	srcw == 0		1643718	1		==			
ANR	1643810	Identifier	srcw		1643718	0					
ANR	1643811	PrimaryExpression	0		1643718	1					
ANR	1643812	ExpressionStatement	src = TMP_ZERO	1309:2:43551:43565	1643718	1	True				
ANR	1643813	AssignmentExpression	src = TMP_ZERO		1643718	0		=			
ANR	1643814	Identifier	src		1643718	0					
ANR	1643815	Identifier	TMP_ZERO		1643718	1					
ANR	1643816	IfStatement	if ( op_flags & SLJIT_SET_O )		1643718	8					
ANR	1643817	Condition	op_flags & SLJIT_SET_O	1311:5:43573:43594	1643718	0	True				
ANR	1643818	BitAndExpression	op_flags & SLJIT_SET_O		1643718	0		&			
ANR	1643819	Identifier	op_flags		1643718	0					
ANR	1643820	Identifier	SLJIT_SET_O		1643718	1					
ANR	1643821	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MTXER | S ( TMP_ZERO ) ) )"	1312:2:43599:43648	1643718	1	True				
ANR	1643822	CallExpression	"FAIL_IF ( push_inst ( compiler , MTXER | S ( TMP_ZERO ) ) )"		1643718	0					
ANR	1643823	Callee	FAIL_IF		1643718	0					
ANR	1643824	Identifier	FAIL_IF		1643718	0					
ANR	1643825	ArgumentList	"push_inst ( compiler , MTXER | S ( TMP_ZERO ) )"		1643718	1					
ANR	1643826	Argument	"push_inst ( compiler , MTXER | S ( TMP_ZERO ) )"		1643718	0					
ANR	1643827	CallExpression	"push_inst ( compiler , MTXER | S ( TMP_ZERO ) )"		1643718	0					
ANR	1643828	Callee	push_inst		1643718	0					
ANR	1643829	Identifier	push_inst		1643718	0					
ANR	1643830	ArgumentList	compiler		1643718	1					
ANR	1643831	Argument	compiler		1643718	0					
ANR	1643832	Identifier	compiler		1643718	0					
ANR	1643833	Argument	MTXER | S ( TMP_ZERO )		1643718	1					
ANR	1643834	InclusiveOrExpression	MTXER | S ( TMP_ZERO )		1643718	0		|			
ANR	1643835	Identifier	MTXER		1643718	0					
ANR	1643836	CallExpression	S ( TMP_ZERO )		1643718	1					
ANR	1643837	Callee	S		1643718	0					
ANR	1643838	Identifier	S		1643718	0					
ANR	1643839	ArgumentList	TMP_ZERO		1643718	1					
ANR	1643840	Argument	TMP_ZERO		1643718	0					
ANR	1643841	Identifier	TMP_ZERO		1643718	0					
ANR	1643842	IfStatement	if ( op_flags & SLJIT_INT_OP )		1643718	9					
ANR	1643843	Condition	op_flags & SLJIT_INT_OP	1314:5:43656:43678	1643718	0	True				
ANR	1643844	BitAndExpression	op_flags & SLJIT_INT_OP		1643718	0		&			
ANR	1643845	Identifier	op_flags		1643718	0					
ANR	1643846	Identifier	SLJIT_INT_OP		1643718	1					
ANR	1643847	CompoundStatement		17:30:435:435	1643718	1					
ANR	1643848	IfStatement	if ( op < SLJIT_NOT )		1643718	0					
ANR	1643849	Condition	op < SLJIT_NOT	1315:6:43689:43702	1643718	0	True				
ANR	1643850	RelationalExpression	op < SLJIT_NOT		1643718	0		<			
ANR	1643851	Identifier	op		1643718	0					
ANR	1643852	Identifier	SLJIT_NOT		1643718	1					
ANR	1643853	CompoundStatement		18:22:459:459	1643718	1					
ANR	1643854	IfStatement	if ( FAST_IS_REG ( src ) && src == dst )		1643718	0					
ANR	1643855	Condition	FAST_IS_REG ( src ) && src == dst	1316:7:43714:43743	1643718	0	True				
ANR	1643856	AndExpression	FAST_IS_REG ( src ) && src == dst		1643718	0		&&			
ANR	1643857	CallExpression	FAST_IS_REG ( src )		1643718	0					
ANR	1643858	Callee	FAST_IS_REG		1643718	0					
ANR	1643859	Identifier	FAST_IS_REG		1643718	0					
ANR	1643860	ArgumentList	src		1643718	1					
ANR	1643861	Argument	src		1643718	0					
ANR	1643862	Identifier	src		1643718	0					
ANR	1643863	EqualityExpression	src == dst		1643718	1		==			
ANR	1643864	Identifier	src		1643718	0					
ANR	1643865	Identifier	dst		1643718	1					
ANR	1643866	CompoundStatement		19:39:500:500	1643718	1					
ANR	1643867	IfStatement	if ( ! TYPE_CAST_NEEDED ( op ) )		1643718	0					
ANR	1643868	Condition	! TYPE_CAST_NEEDED ( op )	1317:8:43756:43776	1643718	0	True				
ANR	1643869	UnaryOperationExpression	! TYPE_CAST_NEEDED ( op )		1643718	0					
ANR	1643870	UnaryOperator	!		1643718	0					
ANR	1643871	CallExpression	TYPE_CAST_NEEDED ( op )		1643718	1					
ANR	1643872	Callee	TYPE_CAST_NEEDED		1643718	0					
ANR	1643873	Identifier	TYPE_CAST_NEEDED		1643718	0					
ANR	1643874	ArgumentList	op		1643718	1					
ANR	1643875	Argument	op		1643718	0					
ANR	1643876	Identifier	op		1643718	0					
ANR	1643877	ReturnStatement	return SLJIT_SUCCESS ;	1318:5:43784:43804	1643718	1	True				
ANR	1643878	Identifier	SLJIT_SUCCESS		1643718	0					
ANR	1643879	IfStatement	if ( op == SLJIT_MOV_SI && ( src & SLJIT_MEM ) )		1643718	1					
ANR	1643880	Condition	op == SLJIT_MOV_SI && ( src & SLJIT_MEM )	1321:7:43875:43913	1643718	0	True				
ANR	1643881	AndExpression	op == SLJIT_MOV_SI && ( src & SLJIT_MEM )		1643718	0		&&			
ANR	1643882	EqualityExpression	op == SLJIT_MOV_SI		1643718	0		==			
ANR	1643883	Identifier	op		1643718	0					
ANR	1643884	Identifier	SLJIT_MOV_SI		1643718	1					
ANR	1643885	BitAndExpression	src & SLJIT_MEM		1643718	1		&			
ANR	1643886	Identifier	src		1643718	0					
ANR	1643887	Identifier	SLJIT_MEM		1643718	1					
ANR	1643888	ExpressionStatement	op = SLJIT_MOV_UI	1322:4:43920:43937	1643718	1	True				
ANR	1643889	AssignmentExpression	op = SLJIT_MOV_UI		1643718	0		=			
ANR	1643890	Identifier	op		1643718	0					
ANR	1643891	Identifier	SLJIT_MOV_UI		1643718	1					
ANR	1643892	IfStatement	if ( op == SLJIT_MOVU_SI && ( src & SLJIT_MEM ) )		1643718	2					
ANR	1643893	Condition	op == SLJIT_MOVU_SI && ( src & SLJIT_MEM )	1323:7:43946:43985	1643718	0	True				
ANR	1643894	AndExpression	op == SLJIT_MOVU_SI && ( src & SLJIT_MEM )		1643718	0		&&			
ANR	1643895	EqualityExpression	op == SLJIT_MOVU_SI		1643718	0		==			
ANR	1643896	Identifier	op		1643718	0					
ANR	1643897	Identifier	SLJIT_MOVU_SI		1643718	1					
ANR	1643898	BitAndExpression	src & SLJIT_MEM		1643718	1		&			
ANR	1643899	Identifier	src		1643718	0					
ANR	1643900	Identifier	SLJIT_MEM		1643718	1					
ANR	1643901	ExpressionStatement	op = SLJIT_MOVU_UI	1324:4:43992:44010	1643718	1	True				
ANR	1643902	AssignmentExpression	op = SLJIT_MOVU_UI		1643718	0		=			
ANR	1643903	Identifier	op		1643718	0					
ANR	1643904	Identifier	SLJIT_MOVU_UI		1643718	1					
ANR	1643905	IfStatement	if ( op == SLJIT_MOV_UI && ( src & SLJIT_IMM ) )		1643718	3					
ANR	1643906	Condition	op == SLJIT_MOV_UI && ( src & SLJIT_IMM )	1325:7:44019:44057	1643718	0	True				
ANR	1643907	AndExpression	op == SLJIT_MOV_UI && ( src & SLJIT_IMM )		1643718	0		&&			
ANR	1643908	EqualityExpression	op == SLJIT_MOV_UI		1643718	0		==			
ANR	1643909	Identifier	op		1643718	0					
ANR	1643910	Identifier	SLJIT_MOV_UI		1643718	1					
ANR	1643911	BitAndExpression	src & SLJIT_IMM		1643718	1		&			
ANR	1643912	Identifier	src		1643718	0					
ANR	1643913	Identifier	SLJIT_IMM		1643718	1					
ANR	1643914	ExpressionStatement	op = SLJIT_MOV_SI	1326:4:44064:44081	1643718	1	True				
ANR	1643915	AssignmentExpression	op = SLJIT_MOV_SI		1643718	0		=			
ANR	1643916	Identifier	op		1643718	0					
ANR	1643917	Identifier	SLJIT_MOV_SI		1643718	1					
ANR	1643918	IfStatement	if ( op == SLJIT_MOVU_UI && ( src & SLJIT_IMM ) )		1643718	4					
ANR	1643919	Condition	op == SLJIT_MOVU_UI && ( src & SLJIT_IMM )	1327:7:44090:44129	1643718	0	True				
ANR	1643920	AndExpression	op == SLJIT_MOVU_UI && ( src & SLJIT_IMM )		1643718	0		&&			
ANR	1643921	EqualityExpression	op == SLJIT_MOVU_UI		1643718	0		==			
ANR	1643922	Identifier	op		1643718	0					
ANR	1643923	Identifier	SLJIT_MOVU_UI		1643718	1					
ANR	1643924	BitAndExpression	src & SLJIT_IMM		1643718	1		&			
ANR	1643925	Identifier	src		1643718	0					
ANR	1643926	Identifier	SLJIT_IMM		1643718	1					
ANR	1643927	ExpressionStatement	op = SLJIT_MOVU_SI	1328:4:44136:44154	1643718	1	True				
ANR	1643928	AssignmentExpression	op = SLJIT_MOVU_SI		1643718	0		=			
ANR	1643929	Identifier	op		1643718	0					
ANR	1643930	Identifier	SLJIT_MOVU_SI		1643718	1					
ANR	1643931	ElseStatement	else		1643718	0					
ANR	1643932	CompoundStatement		35:7:985:985	1643718	0					
ANR	1643933	ExpressionStatement	flags |= INT_DATA | SIGNED_DATA	1334:3:44293:44324	1643718	0	True				
ANR	1643934	AssignmentExpression	flags |= INT_DATA | SIGNED_DATA		1643718	0		|=			
ANR	1643935	Identifier	flags		1643718	0					
ANR	1643936	InclusiveOrExpression	INT_DATA | SIGNED_DATA		1643718	1		|			
ANR	1643937	Identifier	INT_DATA		1643718	0					
ANR	1643938	Identifier	SIGNED_DATA		1643718	1					
ANR	1643939	IfStatement	if ( src & SLJIT_IMM )		1643718	1					
ANR	1643940	Condition	src & SLJIT_IMM	1335:7:44333:44347	1643718	0	True				
ANR	1643941	BitAndExpression	src & SLJIT_IMM		1643718	0		&			
ANR	1643942	Identifier	src		1643718	0					
ANR	1643943	Identifier	SLJIT_IMM		1643718	1					
ANR	1643944	ExpressionStatement	srcw = ( sljit_si ) srcw	1336:4:44354:44375	1643718	1	True				
ANR	1643945	AssignmentExpression	srcw = ( sljit_si ) srcw		1643718	0		=			
ANR	1643946	Identifier	srcw		1643718	0					
ANR	1643947	CastExpression	( sljit_si ) srcw		1643718	1					
ANR	1643948	CastTarget	sljit_si		1643718	0					
ANR	1643949	Identifier	srcw		1643718	1					
ANR	1643950	SwitchStatement	switch ( op )		1643718	10					
ANR	1643951	Condition	op	1341:9:44401:44402	1643718	0	True				
ANR	1643952	Identifier	op		1643718	0					
ANR	1643953	CompoundStatement		44:13:1159:1159	1643718	1					
ANR	1643954	Label	case SLJIT_MOV :	1342:1:44408:44422	1643718	0	True				
ANR	1643955	Identifier	SLJIT_MOV		1643718	0					
ANR	1643956	Label	case SLJIT_MOV_P :	1343:1:44425:44441	1643718	1	True				
ANR	1643957	Identifier	SLJIT_MOV_P		1643718	0					
ANR	1643958	Label	case SLJIT_MOV_UI :	1345:1:44501:44518	1643718	2	True				
ANR	1643959	Identifier	SLJIT_MOV_UI		1643718	0					
ANR	1643960	Label	case SLJIT_MOV_SI :	1346:1:44521:44538	1643718	3	True				
ANR	1643961	Identifier	SLJIT_MOV_SI		1643718	0					
ANR	1643962	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV , flags | WORD_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1348:2:44549:44638	1643718	4	True				
ANR	1643963	CallExpression	"emit_op ( compiler , SLJIT_MOV , flags | WORD_DATA , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1643718	0					
ANR	1643964	Callee	emit_op		1643718	0					
ANR	1643965	Identifier	emit_op		1643718	0					
ANR	1643966	ArgumentList	compiler		1643718	1					
ANR	1643967	Argument	compiler		1643718	0					
ANR	1643968	Identifier	compiler		1643718	0					
ANR	1643969	Argument	SLJIT_MOV		1643718	1					
ANR	1643970	Identifier	SLJIT_MOV		1643718	0					
ANR	1643971	Argument	flags | WORD_DATA		1643718	2					
ANR	1643972	InclusiveOrExpression	flags | WORD_DATA		1643718	0		|			
ANR	1643973	Identifier	flags		1643718	0					
ANR	1643974	Identifier	WORD_DATA		1643718	1					
ANR	1643975	Argument	dst		1643718	3					
ANR	1643976	Identifier	dst		1643718	0					
ANR	1643977	Argument	dstw		1643718	4					
ANR	1643978	Identifier	dstw		1643718	0					
ANR	1643979	Argument	TMP_REG1		1643718	5					
ANR	1643980	Identifier	TMP_REG1		1643718	0					
ANR	1643981	Argument	0		1643718	6					
ANR	1643982	PrimaryExpression	0		1643718	0					
ANR	1643983	Argument	src		1643718	7					
ANR	1643984	Identifier	src		1643718	0					
ANR	1643985	Argument	srcw		1643718	8					
ANR	1643986	Identifier	srcw		1643718	0					
ANR	1643987	Label	case SLJIT_MOV_UI :	1351:1:44699:44716	1643718	5	True				
ANR	1643988	Identifier	SLJIT_MOV_UI		1643718	0					
ANR	1643989	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_UI , INT_DATA , ( sljit_ui ) ) ;"	1352:2:44720:44771	1643718	6	True				
ANR	1643990	CallExpression	"EMIT_MOV ( SLJIT_MOV_UI , INT_DATA , ( sljit_ui ) )"		1643718	0					
ANR	1643991	Callee	EMIT_MOV		1643718	0					
ANR	1643992	Identifier	EMIT_MOV		1643718	0					
ANR	1643993	ArgumentList	SLJIT_MOV_UI		1643718	1					
ANR	1643994	Argument	SLJIT_MOV_UI		1643718	0					
ANR	1643995	Identifier	SLJIT_MOV_UI		1643718	0					
ANR	1643996	Argument	INT_DATA		1643718	1					
ANR	1643997	Identifier	INT_DATA		1643718	0					
ANR	1643998	Argument	sljit_ui		1643718	2					
ANR	1643999	Identifier	sljit_ui		1643718	0					
ANR	1644000	Label	case SLJIT_MOV_SI :	1354:1:44775:44792	1643718	7	True				
ANR	1644001	Identifier	SLJIT_MOV_SI		1643718	0					
ANR	1644002	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_SI , INT_DATA | SIGNED_DATA , ( sljit_si ) ) ;"	1355:2:44796:44861	1643718	8	True				
ANR	1644003	CallExpression	"EMIT_MOV ( SLJIT_MOV_SI , INT_DATA | SIGNED_DATA , ( sljit_si ) )"		1643718	0					
ANR	1644004	Callee	EMIT_MOV		1643718	0					
ANR	1644005	Identifier	EMIT_MOV		1643718	0					
ANR	1644006	ArgumentList	SLJIT_MOV_SI		1643718	1					
ANR	1644007	Argument	SLJIT_MOV_SI		1643718	0					
ANR	1644008	Identifier	SLJIT_MOV_SI		1643718	0					
ANR	1644009	Argument	INT_DATA | SIGNED_DATA		1643718	1					
ANR	1644010	InclusiveOrExpression	INT_DATA | SIGNED_DATA		1643718	0		|			
ANR	1644011	Identifier	INT_DATA		1643718	0					
ANR	1644012	Identifier	SIGNED_DATA		1643718	1					
ANR	1644013	Argument	sljit_si		1643718	2					
ANR	1644014	Identifier	sljit_si		1643718	0					
ANR	1644015	Label	case SLJIT_MOV_UB :	1358:1:44872:44889	1643718	9	True				
ANR	1644016	Identifier	SLJIT_MOV_UB		1643718	0					
ANR	1644017	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_UB , BYTE_DATA , ( sljit_ub ) ) ;"	1359:2:44893:44945	1643718	10	True				
ANR	1644018	CallExpression	"EMIT_MOV ( SLJIT_MOV_UB , BYTE_DATA , ( sljit_ub ) )"		1643718	0					
ANR	1644019	Callee	EMIT_MOV		1643718	0					
ANR	1644020	Identifier	EMIT_MOV		1643718	0					
ANR	1644021	ArgumentList	SLJIT_MOV_UB		1643718	1					
ANR	1644022	Argument	SLJIT_MOV_UB		1643718	0					
ANR	1644023	Identifier	SLJIT_MOV_UB		1643718	0					
ANR	1644024	Argument	BYTE_DATA		1643718	1					
ANR	1644025	Identifier	BYTE_DATA		1643718	0					
ANR	1644026	Argument	sljit_ub		1643718	2					
ANR	1644027	Identifier	sljit_ub		1643718	0					
ANR	1644028	Label	case SLJIT_MOV_SB :	1361:1:44949:44966	1643718	11	True				
ANR	1644029	Identifier	SLJIT_MOV_SB		1643718	0					
ANR	1644030	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA , ( sljit_sb ) ) ;"	1362:2:44970:45036	1643718	12	True				
ANR	1644031	CallExpression	"EMIT_MOV ( SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA , ( sljit_sb ) )"		1643718	0					
ANR	1644032	Callee	EMIT_MOV		1643718	0					
ANR	1644033	Identifier	EMIT_MOV		1643718	0					
ANR	1644034	ArgumentList	SLJIT_MOV_SB		1643718	1					
ANR	1644035	Argument	SLJIT_MOV_SB		1643718	0					
ANR	1644036	Identifier	SLJIT_MOV_SB		1643718	0					
ANR	1644037	Argument	BYTE_DATA | SIGNED_DATA		1643718	1					
ANR	1644038	InclusiveOrExpression	BYTE_DATA | SIGNED_DATA		1643718	0		|			
ANR	1644039	Identifier	BYTE_DATA		1643718	0					
ANR	1644040	Identifier	SIGNED_DATA		1643718	1					
ANR	1644041	Argument	sljit_sb		1643718	2					
ANR	1644042	Identifier	sljit_sb		1643718	0					
ANR	1644043	Label	case SLJIT_MOV_UH :	1364:1:45040:45057	1643718	13	True				
ANR	1644044	Identifier	SLJIT_MOV_UH		1643718	0					
ANR	1644045	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_UH , HALF_DATA , ( sljit_uh ) ) ;"	1365:2:45061:45113	1643718	14	True				
ANR	1644046	CallExpression	"EMIT_MOV ( SLJIT_MOV_UH , HALF_DATA , ( sljit_uh ) )"		1643718	0					
ANR	1644047	Callee	EMIT_MOV		1643718	0					
ANR	1644048	Identifier	EMIT_MOV		1643718	0					
ANR	1644049	ArgumentList	SLJIT_MOV_UH		1643718	1					
ANR	1644050	Argument	SLJIT_MOV_UH		1643718	0					
ANR	1644051	Identifier	SLJIT_MOV_UH		1643718	0					
ANR	1644052	Argument	HALF_DATA		1643718	1					
ANR	1644053	Identifier	HALF_DATA		1643718	0					
ANR	1644054	Argument	sljit_uh		1643718	2					
ANR	1644055	Identifier	sljit_uh		1643718	0					
ANR	1644056	Label	case SLJIT_MOV_SH :	1367:1:45117:45134	1643718	15	True				
ANR	1644057	Identifier	SLJIT_MOV_SH		1643718	0					
ANR	1644058	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA , ( sljit_sh ) ) ;"	1368:2:45138:45204	1643718	16	True				
ANR	1644059	CallExpression	"EMIT_MOV ( SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA , ( sljit_sh ) )"		1643718	0					
ANR	1644060	Callee	EMIT_MOV		1643718	0					
ANR	1644061	Identifier	EMIT_MOV		1643718	0					
ANR	1644062	ArgumentList	SLJIT_MOV_SH		1643718	1					
ANR	1644063	Argument	SLJIT_MOV_SH		1643718	0					
ANR	1644064	Identifier	SLJIT_MOV_SH		1643718	0					
ANR	1644065	Argument	HALF_DATA | SIGNED_DATA		1643718	1					
ANR	1644066	InclusiveOrExpression	HALF_DATA | SIGNED_DATA		1643718	0		|			
ANR	1644067	Identifier	HALF_DATA		1643718	0					
ANR	1644068	Identifier	SIGNED_DATA		1643718	1					
ANR	1644069	Argument	sljit_sh		1643718	2					
ANR	1644070	Identifier	sljit_sh		1643718	0					
ANR	1644071	Label	case SLJIT_MOVU :	1370:1:45208:45223	1643718	17	True				
ANR	1644072	Identifier	SLJIT_MOVU		1643718	0					
ANR	1644073	Label	case SLJIT_MOVU_P :	1371:1:45226:45243	1643718	18	True				
ANR	1644074	Identifier	SLJIT_MOVU_P		1643718	0					
ANR	1644075	Label	case SLJIT_MOVU_UI :	1373:1:45303:45321	1643718	19	True				
ANR	1644076	Identifier	SLJIT_MOVU_UI		1643718	0					
ANR	1644077	Label	case SLJIT_MOVU_SI :	1374:1:45324:45342	1643718	20	True				
ANR	1644078	Identifier	SLJIT_MOVU_SI		1643718	0					
ANR	1644079	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV , flags | WORD_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1376:2:45353:45455	1643718	21	True				
ANR	1644080	CallExpression	"emit_op ( compiler , SLJIT_MOV , flags | WORD_DATA | WRITE_BACK , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1643718	0					
ANR	1644081	Callee	emit_op		1643718	0					
ANR	1644082	Identifier	emit_op		1643718	0					
ANR	1644083	ArgumentList	compiler		1643718	1					
ANR	1644084	Argument	compiler		1643718	0					
ANR	1644085	Identifier	compiler		1643718	0					
ANR	1644086	Argument	SLJIT_MOV		1643718	1					
ANR	1644087	Identifier	SLJIT_MOV		1643718	0					
ANR	1644088	Argument	flags | WORD_DATA | WRITE_BACK		1643718	2					
ANR	1644089	InclusiveOrExpression	flags | WORD_DATA | WRITE_BACK		1643718	0		|			
ANR	1644090	Identifier	flags		1643718	0					
ANR	1644091	InclusiveOrExpression	WORD_DATA | WRITE_BACK		1643718	1		|			
ANR	1644092	Identifier	WORD_DATA		1643718	0					
ANR	1644093	Identifier	WRITE_BACK		1643718	1					
ANR	1644094	Argument	dst		1643718	3					
ANR	1644095	Identifier	dst		1643718	0					
ANR	1644096	Argument	dstw		1643718	4					
ANR	1644097	Identifier	dstw		1643718	0					
ANR	1644098	Argument	TMP_REG1		1643718	5					
ANR	1644099	Identifier	TMP_REG1		1643718	0					
ANR	1644100	Argument	0		1643718	6					
ANR	1644101	PrimaryExpression	0		1643718	0					
ANR	1644102	Argument	src		1643718	7					
ANR	1644103	Identifier	src		1643718	0					
ANR	1644104	Argument	srcw		1643718	8					
ANR	1644105	Identifier	srcw		1643718	0					
ANR	1644106	Label	case SLJIT_MOVU_UI :	1379:1:45516:45534	1643718	22	True				
ANR	1644107	Identifier	SLJIT_MOVU_UI		1643718	0					
ANR	1644108	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_UI , INT_DATA | WRITE_BACK , ( sljit_ui ) ) ;"	1380:2:45538:45602	1643718	23	True				
ANR	1644109	CallExpression	"EMIT_MOV ( SLJIT_MOV_UI , INT_DATA | WRITE_BACK , ( sljit_ui ) )"		1643718	0					
ANR	1644110	Callee	EMIT_MOV		1643718	0					
ANR	1644111	Identifier	EMIT_MOV		1643718	0					
ANR	1644112	ArgumentList	SLJIT_MOV_UI		1643718	1					
ANR	1644113	Argument	SLJIT_MOV_UI		1643718	0					
ANR	1644114	Identifier	SLJIT_MOV_UI		1643718	0					
ANR	1644115	Argument	INT_DATA | WRITE_BACK		1643718	1					
ANR	1644116	InclusiveOrExpression	INT_DATA | WRITE_BACK		1643718	0		|			
ANR	1644117	Identifier	INT_DATA		1643718	0					
ANR	1644118	Identifier	WRITE_BACK		1643718	1					
ANR	1644119	Argument	sljit_ui		1643718	2					
ANR	1644120	Identifier	sljit_ui		1643718	0					
ANR	1644121	Label	case SLJIT_MOVU_SI :	1382:1:45606:45624	1643718	24	True				
ANR	1644122	Identifier	SLJIT_MOVU_SI		1643718	0					
ANR	1644123	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_SI , INT_DATA | SIGNED_DATA | WRITE_BACK , ( sljit_si ) ) ;"	1383:2:45628:45706	1643718	25	True				
ANR	1644124	CallExpression	"EMIT_MOV ( SLJIT_MOV_SI , INT_DATA | SIGNED_DATA | WRITE_BACK , ( sljit_si ) )"		1643718	0					
ANR	1644125	Callee	EMIT_MOV		1643718	0					
ANR	1644126	Identifier	EMIT_MOV		1643718	0					
ANR	1644127	ArgumentList	SLJIT_MOV_SI		1643718	1					
ANR	1644128	Argument	SLJIT_MOV_SI		1643718	0					
ANR	1644129	Identifier	SLJIT_MOV_SI		1643718	0					
ANR	1644130	Argument	INT_DATA | SIGNED_DATA | WRITE_BACK		1643718	1					
ANR	1644131	InclusiveOrExpression	INT_DATA | SIGNED_DATA | WRITE_BACK		1643718	0		|			
ANR	1644132	Identifier	INT_DATA		1643718	0					
ANR	1644133	InclusiveOrExpression	SIGNED_DATA | WRITE_BACK		1643718	1		|			
ANR	1644134	Identifier	SIGNED_DATA		1643718	0					
ANR	1644135	Identifier	WRITE_BACK		1643718	1					
ANR	1644136	Argument	sljit_si		1643718	2					
ANR	1644137	Identifier	sljit_si		1643718	0					
ANR	1644138	Label	case SLJIT_MOVU_UB :	1386:1:45717:45735	1643718	26	True				
ANR	1644139	Identifier	SLJIT_MOVU_UB		1643718	0					
ANR	1644140	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_UB , BYTE_DATA | WRITE_BACK , ( sljit_ub ) ) ;"	1387:2:45739:45804	1643718	27	True				
ANR	1644141	CallExpression	"EMIT_MOV ( SLJIT_MOV_UB , BYTE_DATA | WRITE_BACK , ( sljit_ub ) )"		1643718	0					
ANR	1644142	Callee	EMIT_MOV		1643718	0					
ANR	1644143	Identifier	EMIT_MOV		1643718	0					
ANR	1644144	ArgumentList	SLJIT_MOV_UB		1643718	1					
ANR	1644145	Argument	SLJIT_MOV_UB		1643718	0					
ANR	1644146	Identifier	SLJIT_MOV_UB		1643718	0					
ANR	1644147	Argument	BYTE_DATA | WRITE_BACK		1643718	1					
ANR	1644148	InclusiveOrExpression	BYTE_DATA | WRITE_BACK		1643718	0		|			
ANR	1644149	Identifier	BYTE_DATA		1643718	0					
ANR	1644150	Identifier	WRITE_BACK		1643718	1					
ANR	1644151	Argument	sljit_ub		1643718	2					
ANR	1644152	Identifier	sljit_ub		1643718	0					
ANR	1644153	Label	case SLJIT_MOVU_SB :	1389:1:45808:45826	1643718	28	True				
ANR	1644154	Identifier	SLJIT_MOVU_SB		1643718	0					
ANR	1644155	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA | WRITE_BACK , ( sljit_sb ) ) ;"	1390:2:45830:45909	1643718	29	True				
ANR	1644156	CallExpression	"EMIT_MOV ( SLJIT_MOV_SB , BYTE_DATA | SIGNED_DATA | WRITE_BACK , ( sljit_sb ) )"		1643718	0					
ANR	1644157	Callee	EMIT_MOV		1643718	0					
ANR	1644158	Identifier	EMIT_MOV		1643718	0					
ANR	1644159	ArgumentList	SLJIT_MOV_SB		1643718	1					
ANR	1644160	Argument	SLJIT_MOV_SB		1643718	0					
ANR	1644161	Identifier	SLJIT_MOV_SB		1643718	0					
ANR	1644162	Argument	BYTE_DATA | SIGNED_DATA | WRITE_BACK		1643718	1					
ANR	1644163	InclusiveOrExpression	BYTE_DATA | SIGNED_DATA | WRITE_BACK		1643718	0		|			
ANR	1644164	Identifier	BYTE_DATA		1643718	0					
ANR	1644165	InclusiveOrExpression	SIGNED_DATA | WRITE_BACK		1643718	1		|			
ANR	1644166	Identifier	SIGNED_DATA		1643718	0					
ANR	1644167	Identifier	WRITE_BACK		1643718	1					
ANR	1644168	Argument	sljit_sb		1643718	2					
ANR	1644169	Identifier	sljit_sb		1643718	0					
ANR	1644170	Label	case SLJIT_MOVU_UH :	1392:1:45913:45931	1643718	30	True				
ANR	1644171	Identifier	SLJIT_MOVU_UH		1643718	0					
ANR	1644172	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_UH , HALF_DATA | WRITE_BACK , ( sljit_uh ) ) ;"	1393:2:45935:46000	1643718	31	True				
ANR	1644173	CallExpression	"EMIT_MOV ( SLJIT_MOV_UH , HALF_DATA | WRITE_BACK , ( sljit_uh ) )"		1643718	0					
ANR	1644174	Callee	EMIT_MOV		1643718	0					
ANR	1644175	Identifier	EMIT_MOV		1643718	0					
ANR	1644176	ArgumentList	SLJIT_MOV_UH		1643718	1					
ANR	1644177	Argument	SLJIT_MOV_UH		1643718	0					
ANR	1644178	Identifier	SLJIT_MOV_UH		1643718	0					
ANR	1644179	Argument	HALF_DATA | WRITE_BACK		1643718	1					
ANR	1644180	InclusiveOrExpression	HALF_DATA | WRITE_BACK		1643718	0		|			
ANR	1644181	Identifier	HALF_DATA		1643718	0					
ANR	1644182	Identifier	WRITE_BACK		1643718	1					
ANR	1644183	Argument	sljit_uh		1643718	2					
ANR	1644184	Identifier	sljit_uh		1643718	0					
ANR	1644185	Label	case SLJIT_MOVU_SH :	1395:1:46004:46022	1643718	32	True				
ANR	1644186	Identifier	SLJIT_MOVU_SH		1643718	0					
ANR	1644187	ReturnStatement	"return EMIT_MOV ( SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA | WRITE_BACK , ( sljit_sh ) ) ;"	1396:2:46026:46105	1643718	33	True				
ANR	1644188	CallExpression	"EMIT_MOV ( SLJIT_MOV_SH , HALF_DATA | SIGNED_DATA | WRITE_BACK , ( sljit_sh ) )"		1643718	0					
ANR	1644189	Callee	EMIT_MOV		1643718	0					
ANR	1644190	Identifier	EMIT_MOV		1643718	0					
ANR	1644191	ArgumentList	SLJIT_MOV_SH		1643718	1					
ANR	1644192	Argument	SLJIT_MOV_SH		1643718	0					
ANR	1644193	Identifier	SLJIT_MOV_SH		1643718	0					
ANR	1644194	Argument	HALF_DATA | SIGNED_DATA | WRITE_BACK		1643718	1					
ANR	1644195	InclusiveOrExpression	HALF_DATA | SIGNED_DATA | WRITE_BACK		1643718	0		|			
ANR	1644196	Identifier	HALF_DATA		1643718	0					
ANR	1644197	InclusiveOrExpression	SIGNED_DATA | WRITE_BACK		1643718	1		|			
ANR	1644198	Identifier	SIGNED_DATA		1643718	0					
ANR	1644199	Identifier	WRITE_BACK		1643718	1					
ANR	1644200	Argument	sljit_sh		1643718	2					
ANR	1644201	Identifier	sljit_sh		1643718	0					
ANR	1644202	Label	case SLJIT_NOT :	1398:1:46109:46123	1643718	34	True				
ANR	1644203	Identifier	SLJIT_NOT		1643718	0					
ANR	1644204	ReturnStatement	"return emit_op ( compiler , SLJIT_NOT , flags , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1399:2:46127:46204	1643718	35	True				
ANR	1644205	CallExpression	"emit_op ( compiler , SLJIT_NOT , flags , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1643718	0					
ANR	1644206	Callee	emit_op		1643718	0					
ANR	1644207	Identifier	emit_op		1643718	0					
ANR	1644208	ArgumentList	compiler		1643718	1					
ANR	1644209	Argument	compiler		1643718	0					
ANR	1644210	Identifier	compiler		1643718	0					
ANR	1644211	Argument	SLJIT_NOT		1643718	1					
ANR	1644212	Identifier	SLJIT_NOT		1643718	0					
ANR	1644213	Argument	flags		1643718	2					
ANR	1644214	Identifier	flags		1643718	0					
ANR	1644215	Argument	dst		1643718	3					
ANR	1644216	Identifier	dst		1643718	0					
ANR	1644217	Argument	dstw		1643718	4					
ANR	1644218	Identifier	dstw		1643718	0					
ANR	1644219	Argument	TMP_REG1		1643718	5					
ANR	1644220	Identifier	TMP_REG1		1643718	0					
ANR	1644221	Argument	0		1643718	6					
ANR	1644222	PrimaryExpression	0		1643718	0					
ANR	1644223	Argument	src		1643718	7					
ANR	1644224	Identifier	src		1643718	0					
ANR	1644225	Argument	srcw		1643718	8					
ANR	1644226	Identifier	srcw		1643718	0					
ANR	1644227	Label	case SLJIT_NEG :	1401:1:46208:46222	1643718	36	True				
ANR	1644228	Identifier	SLJIT_NEG		1643718	0					
ANR	1644229	ReturnStatement	"return emit_op ( compiler , SLJIT_NEG , flags , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1402:2:46226:46303	1643718	37	True				
ANR	1644230	CallExpression	"emit_op ( compiler , SLJIT_NEG , flags , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1643718	0					
ANR	1644231	Callee	emit_op		1643718	0					
ANR	1644232	Identifier	emit_op		1643718	0					
ANR	1644233	ArgumentList	compiler		1643718	1					
ANR	1644234	Argument	compiler		1643718	0					
ANR	1644235	Identifier	compiler		1643718	0					
ANR	1644236	Argument	SLJIT_NEG		1643718	1					
ANR	1644237	Identifier	SLJIT_NEG		1643718	0					
ANR	1644238	Argument	flags		1643718	2					
ANR	1644239	Identifier	flags		1643718	0					
ANR	1644240	Argument	dst		1643718	3					
ANR	1644241	Identifier	dst		1643718	0					
ANR	1644242	Argument	dstw		1643718	4					
ANR	1644243	Identifier	dstw		1643718	0					
ANR	1644244	Argument	TMP_REG1		1643718	5					
ANR	1644245	Identifier	TMP_REG1		1643718	0					
ANR	1644246	Argument	0		1643718	6					
ANR	1644247	PrimaryExpression	0		1643718	0					
ANR	1644248	Argument	src		1643718	7					
ANR	1644249	Identifier	src		1643718	0					
ANR	1644250	Argument	srcw		1643718	8					
ANR	1644251	Identifier	srcw		1643718	0					
ANR	1644252	Label	case SLJIT_CLZ :	1404:1:46307:46321	1643718	38	True				
ANR	1644253	Identifier	SLJIT_CLZ		1643718	0					
ANR	1644254	ReturnStatement	"return emit_op ( compiler , SLJIT_CLZ , flags | ( ! ( op_flags & SLJIT_INT_OP ) ? 0 : ALT_FORM1 ) , dst , dstw , TMP_REG1 , 0 , src , srcw ) ;"	1406:2:46382:46506	1643718	39	True				
ANR	1644255	CallExpression	"emit_op ( compiler , SLJIT_CLZ , flags | ( ! ( op_flags & SLJIT_INT_OP ) ? 0 : ALT_FORM1 ) , dst , dstw , TMP_REG1 , 0 , src , srcw )"		1643718	0					
ANR	1644256	Callee	emit_op		1643718	0					
ANR	1644257	Identifier	emit_op		1643718	0					
ANR	1644258	ArgumentList	compiler		1643718	1					
ANR	1644259	Argument	compiler		1643718	0					
ANR	1644260	Identifier	compiler		1643718	0					
ANR	1644261	Argument	SLJIT_CLZ		1643718	1					
ANR	1644262	Identifier	SLJIT_CLZ		1643718	0					
ANR	1644263	Argument	flags | ( ! ( op_flags & SLJIT_INT_OP ) ? 0 : ALT_FORM1 )		1643718	2					
ANR	1644264	InclusiveOrExpression	flags | ( ! ( op_flags & SLJIT_INT_OP ) ? 0 : ALT_FORM1 )		1643718	0		|			
ANR	1644265	Identifier	flags		1643718	0					
ANR	1644266	ConditionalExpression	! ( op_flags & SLJIT_INT_OP ) ? 0 : ALT_FORM1		1643718	1					
ANR	1644267	Condition	! ( op_flags & SLJIT_INT_OP )		1643718	0					
ANR	1644268	UnaryOperationExpression	! ( op_flags & SLJIT_INT_OP )		1643718	0					
ANR	1644269	UnaryOperator	!		1643718	0					
ANR	1644270	BitAndExpression	op_flags & SLJIT_INT_OP		1643718	1		&			
ANR	1644271	Identifier	op_flags		1643718	0					
ANR	1644272	Identifier	SLJIT_INT_OP		1643718	1					
ANR	1644273	PrimaryExpression	0		1643718	1					
ANR	1644274	Identifier	ALT_FORM1		1643718	2					
ANR	1644275	Argument	dst		1643718	3					
ANR	1644276	Identifier	dst		1643718	0					
ANR	1644277	Argument	dstw		1643718	4					
ANR	1644278	Identifier	dstw		1643718	0					
ANR	1644279	Argument	TMP_REG1		1643718	5					
ANR	1644280	Identifier	TMP_REG1		1643718	0					
ANR	1644281	Argument	0		1643718	6					
ANR	1644282	PrimaryExpression	0		1643718	0					
ANR	1644283	Argument	src		1643718	7					
ANR	1644284	Identifier	src		1643718	0					
ANR	1644285	Argument	srcw		1643718	8					
ANR	1644286	Identifier	srcw		1643718	0					
ANR	1644287	ReturnStatement	return SLJIT_SUCCESS ;	1412:1:46607:46627	1643718	11	True				
ANR	1644288	Identifier	SLJIT_SUCCESS		1643718	0					
ANR	1644289	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1643718	1					
ANR	1644290	Identifier	sljit_emit_op1		1643718	2					
ANR	1644291	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1643718	3					
ANR	1644292	Parameter	struct sljit_compiler * compiler	1295:49:43139:43169	1643718	0	True				
ANR	1644293	ParameterType	struct sljit_compiler *		1643718	0					
ANR	1644294	Identifier	compiler		1643718	1					
ANR	1644295	Parameter	sljit_si op	1295:82:43172:43182	1643718	1	True				
ANR	1644296	ParameterType	sljit_si		1643718	0					
ANR	1644297	Identifier	op		1643718	1					
ANR	1644298	Parameter	sljit_si dst	1296:1:43186:43197	1643718	2	True				
ANR	1644299	ParameterType	sljit_si		1643718	0					
ANR	1644300	Identifier	dst		1643718	1					
ANR	1644301	Parameter	sljit_sw dstw	1296:15:43200:43212	1643718	3	True				
ANR	1644302	ParameterType	sljit_sw		1643718	0					
ANR	1644303	Identifier	dstw		1643718	1					
ANR	1644304	Parameter	sljit_si src	1297:1:43216:43227	1643718	4	True				
ANR	1644305	ParameterType	sljit_si		1643718	0					
ANR	1644306	Identifier	src		1643718	1					
ANR	1644307	Parameter	sljit_sw srcw	1297:15:43230:43242	1643718	5	True				
ANR	1644308	ParameterType	sljit_sw		1643718	0					
ANR	1644309	Identifier	srcw		1643718	1					
ANR	1644310	CFGEntryNode	ENTRY		1643718		True				
ANR	1644311	CFGExitNode	EXIT		1643718		True				
ANR	1644312	Symbol	TMP_REG1		1643718						
ANR	1644313	Symbol	SLJIT_NOT		1643718						
ANR	1644314	Symbol	SLJIT_MEM		1643718						
ANR	1644315	Symbol	TYPE_CAST_NEEDED		1643718						
ANR	1644316	Symbol	SLJIT_MOVU_SI		1643718						
ANR	1644317	Symbol	GET_OPCODE		1643718						
ANR	1644318	Symbol	BYTE_DATA		1643718						
ANR	1644319	Symbol	SLJIT_IMM		1643718						
ANR	1644320	Symbol	SLJIT_MOV_UH		1643718						
ANR	1644321	Symbol	SLJIT_MOV_UI		1643718						
ANR	1644322	Symbol	INT_DATA		1643718						
ANR	1644323	Symbol	MTXER		1643718						
ANR	1644324	Symbol	emit_op		1643718						
ANR	1644325	Symbol	ALT_SET_FLAGS		1643718						
ANR	1644326	Symbol	FAST_IS_REG		1643718						
ANR	1644327	Symbol	check_sljit_emit_op1		1643718						
ANR	1644328	Symbol	HALF_DATA		1643718						
ANR	1644329	Symbol	srcw		1643718						
ANR	1644330	Symbol	SLJIT_MOV_UB		1643718						
ANR	1644331	Symbol	sljit_ui		1643718						
ANR	1644332	Symbol	sljit_uh		1643718						
ANR	1644333	Symbol	sljit_ub		1643718						
ANR	1644334	Symbol	SLJIT_CLZ		1643718						
ANR	1644335	Symbol	dst		1643718						
ANR	1644336	Symbol	SLJIT_SET_O		1643718						
ANR	1644337	Symbol	SLJIT_MOV		1643718						
ANR	1644338	Symbol	EMIT_MOV		1643718						
ANR	1644339	Symbol	flags		1643718						
ANR	1644340	Symbol	GET_FLAGS		1643718						
ANR	1644341	Symbol	GET_ALL_FLAGS		1643718						
ANR	1644342	Symbol	SLJIT_MOV_SI		1643718						
ANR	1644343	Symbol	S		1643718						
ANR	1644344	Symbol	SLJIT_MOVU_UI		1643718						
ANR	1644345	Symbol	SLJIT_MOV_SH		1643718						
ANR	1644346	Symbol	ALT_FORM1		1643718						
ANR	1644347	Symbol	SLJIT_NEG		1643718						
ANR	1644348	Symbol	compiler		1643718						
ANR	1644349	Symbol	WRITE_BACK		1643718						
ANR	1644350	Symbol	WORD_DATA		1643718						
ANR	1644351	Symbol	op		1643718						
ANR	1644352	Symbol	op_flags		1643718						
ANR	1644353	Symbol	push_inst		1643718						
ANR	1644354	Symbol	src		1643718						
ANR	1644355	Symbol	SLJIT_INT_OP		1643718						
ANR	1644356	Symbol	SLJIT_MOV_SB		1643718						
ANR	1644357	Symbol	SLJIT_SUCCESS		1643718						
ANR	1644358	Symbol	SIGNED_DATA		1643718						
ANR	1644359	Symbol	sljit_sb		1643718						
ANR	1644360	Symbol	TMP_ZERO		1643718						
ANR	1644361	Symbol	dstw		1643718						
ANR	1644362	Symbol	sljit_si		1643718						
ANR	1644363	Symbol	sljit_sh		1643718						
ANR	1644364	Function	sljit_emit_op2	1450:0:47634:55834							
ANR	1644365	FunctionDef	"sljit_emit_op2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1644364	0					
ANR	1644366	CompoundStatement		1454:0:47823:55834	1644364	0					
ANR	1644367	IdentifierDeclStatement	sljit_si flags = GET_FLAGS ( op ) ? ALT_SET_FLAGS : 0 ;	1455:1:47826:47876	1644364	0	True				
ANR	1644368	IdentifierDecl	flags = GET_FLAGS ( op ) ? ALT_SET_FLAGS : 0		1644364	0					
ANR	1644369	IdentifierDeclType	sljit_si		1644364	0					
ANR	1644370	Identifier	flags		1644364	1					
ANR	1644371	AssignmentExpression	flags = GET_FLAGS ( op ) ? ALT_SET_FLAGS : 0		1644364	2		=			
ANR	1644372	Identifier	flags		1644364	0					
ANR	1644373	ConditionalExpression	GET_FLAGS ( op ) ? ALT_SET_FLAGS : 0		1644364	1					
ANR	1644374	Condition	GET_FLAGS ( op )		1644364	0					
ANR	1644375	CallExpression	GET_FLAGS ( op )		1644364	0					
ANR	1644376	Callee	GET_FLAGS		1644364	0					
ANR	1644377	Identifier	GET_FLAGS		1644364	0					
ANR	1644378	ArgumentList	op		1644364	1					
ANR	1644379	Argument	op		1644364	0					
ANR	1644380	Identifier	op		1644364	0					
ANR	1644381	Identifier	ALT_SET_FLAGS		1644364	1					
ANR	1644382	PrimaryExpression	0		1644364	2					
ANR	1644383	ExpressionStatement	CHECK_ERROR ( )	1457:1:47880:47893	1644364	1	True				
ANR	1644384	CallExpression	CHECK_ERROR ( )		1644364	0					
ANR	1644385	Callee	CHECK_ERROR		1644364	0					
ANR	1644386	Identifier	CHECK_ERROR		1644364	0					
ANR	1644387	ArgumentList			1644364	1					
ANR	1644388	ExpressionStatement	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	1458:1:47896:47974	1644364	2	True				
ANR	1644389	CallExpression	"CHECK ( check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1644364	0					
ANR	1644390	Callee	CHECK		1644364	0					
ANR	1644391	Identifier	CHECK		1644364	0					
ANR	1644392	ArgumentList	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1644364	1					
ANR	1644393	Argument	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1644364	0					
ANR	1644394	CallExpression	"check_sljit_emit_op2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1644364	0					
ANR	1644395	Callee	check_sljit_emit_op2		1644364	0					
ANR	1644396	Identifier	check_sljit_emit_op2		1644364	0					
ANR	1644397	ArgumentList	compiler		1644364	1					
ANR	1644398	Argument	compiler		1644364	0					
ANR	1644399	Identifier	compiler		1644364	0					
ANR	1644400	Argument	op		1644364	1					
ANR	1644401	Identifier	op		1644364	0					
ANR	1644402	Argument	dst		1644364	2					
ANR	1644403	Identifier	dst		1644364	0					
ANR	1644404	Argument	dstw		1644364	3					
ANR	1644405	Identifier	dstw		1644364	0					
ANR	1644406	Argument	src1		1644364	4					
ANR	1644407	Identifier	src1		1644364	0					
ANR	1644408	Argument	src1w		1644364	5					
ANR	1644409	Identifier	src1w		1644364	0					
ANR	1644410	Argument	src2		1644364	6					
ANR	1644411	Identifier	src2		1644364	0					
ANR	1644412	Argument	src2w		1644364	7					
ANR	1644413	Identifier	src2w		1644364	0					
ANR	1644414	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1459:1:47977:48007	1644364	3	True				
ANR	1644415	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1644364	0					
ANR	1644416	Callee	ADJUST_LOCAL_OFFSET		1644364	0					
ANR	1644417	Identifier	ADJUST_LOCAL_OFFSET		1644364	0					
ANR	1644418	ArgumentList	dst		1644364	1					
ANR	1644419	Argument	dst		1644364	0					
ANR	1644420	Identifier	dst		1644364	0					
ANR	1644421	Argument	dstw		1644364	1					
ANR	1644422	Identifier	dstw		1644364	0					
ANR	1644423	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	1460:1:48010:48042	1644364	4	True				
ANR	1644424	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1644364	0					
ANR	1644425	Callee	ADJUST_LOCAL_OFFSET		1644364	0					
ANR	1644426	Identifier	ADJUST_LOCAL_OFFSET		1644364	0					
ANR	1644427	ArgumentList	src1		1644364	1					
ANR	1644428	Argument	src1		1644364	0					
ANR	1644429	Identifier	src1		1644364	0					
ANR	1644430	Argument	src1w		1644364	1					
ANR	1644431	Identifier	src1w		1644364	0					
ANR	1644432	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	1461:1:48045:48077	1644364	5	True				
ANR	1644433	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1644364	0					
ANR	1644434	Callee	ADJUST_LOCAL_OFFSET		1644364	0					
ANR	1644435	Identifier	ADJUST_LOCAL_OFFSET		1644364	0					
ANR	1644436	ArgumentList	src2		1644364	1					
ANR	1644437	Argument	src2		1644364	0					
ANR	1644438	Identifier	src2		1644364	0					
ANR	1644439	Argument	src2w		1644364	1					
ANR	1644440	Identifier	src2w		1644364	0					
ANR	1644441	IfStatement	if ( ( src1 & SLJIT_IMM ) && src1w == 0 )		1644364	6					
ANR	1644442	Condition	( src1 & SLJIT_IMM ) && src1w == 0	1463:5:48085:48116	1644364	0	True				
ANR	1644443	AndExpression	( src1 & SLJIT_IMM ) && src1w == 0		1644364	0		&&			
ANR	1644444	BitAndExpression	src1 & SLJIT_IMM		1644364	0		&			
ANR	1644445	Identifier	src1		1644364	0					
ANR	1644446	Identifier	SLJIT_IMM		1644364	1					
ANR	1644447	EqualityExpression	src1w == 0		1644364	1		==			
ANR	1644448	Identifier	src1w		1644364	0					
ANR	1644449	PrimaryExpression	0		1644364	1					
ANR	1644450	ExpressionStatement	src1 = TMP_ZERO	1464:2:48121:48136	1644364	1	True				
ANR	1644451	AssignmentExpression	src1 = TMP_ZERO		1644364	0		=			
ANR	1644452	Identifier	src1		1644364	0					
ANR	1644453	Identifier	TMP_ZERO		1644364	1					
ANR	1644454	IfStatement	if ( ( src2 & SLJIT_IMM ) && src2w == 0 )		1644364	7					
ANR	1644455	Condition	( src2 & SLJIT_IMM ) && src2w == 0	1465:5:48143:48174	1644364	0	True				
ANR	1644456	AndExpression	( src2 & SLJIT_IMM ) && src2w == 0		1644364	0		&&			
ANR	1644457	BitAndExpression	src2 & SLJIT_IMM		1644364	0		&			
ANR	1644458	Identifier	src2		1644364	0					
ANR	1644459	Identifier	SLJIT_IMM		1644364	1					
ANR	1644460	EqualityExpression	src2w == 0		1644364	1		==			
ANR	1644461	Identifier	src2w		1644364	0					
ANR	1644462	PrimaryExpression	0		1644364	1					
ANR	1644463	ExpressionStatement	src2 = TMP_ZERO	1466:2:48179:48194	1644364	1	True				
ANR	1644464	AssignmentExpression	src2 = TMP_ZERO		1644364	0		=			
ANR	1644465	Identifier	src2		1644364	0					
ANR	1644466	Identifier	TMP_ZERO		1644364	1					
ANR	1644467	IfStatement	if ( op & SLJIT_INT_OP )		1644364	8					
ANR	1644468	Condition	op & SLJIT_INT_OP	1469:5:48259:48275	1644364	0	True				
ANR	1644469	BitAndExpression	op & SLJIT_INT_OP		1644364	0		&			
ANR	1644470	Identifier	op		1644364	0					
ANR	1644471	Identifier	SLJIT_INT_OP		1644364	1					
ANR	1644472	CompoundStatement		16:24:454:454	1644364	1					
ANR	1644473	ExpressionStatement	flags |= INT_DATA | SIGNED_DATA	1471:2:48338:48369	1644364	0	True				
ANR	1644474	AssignmentExpression	flags |= INT_DATA | SIGNED_DATA		1644364	0		|=			
ANR	1644475	Identifier	flags		1644364	0					
ANR	1644476	InclusiveOrExpression	INT_DATA | SIGNED_DATA		1644364	1		|			
ANR	1644477	Identifier	INT_DATA		1644364	0					
ANR	1644478	Identifier	SIGNED_DATA		1644364	1					
ANR	1644479	IfStatement	if ( src1 & SLJIT_IMM )		1644364	1					
ANR	1644480	Condition	src1 & SLJIT_IMM	1472:6:48377:48392	1644364	0	True				
ANR	1644481	BitAndExpression	src1 & SLJIT_IMM		1644364	0		&			
ANR	1644482	Identifier	src1		1644364	0					
ANR	1644483	Identifier	SLJIT_IMM		1644364	1					
ANR	1644484	ExpressionStatement	src1w = ( sljit_si ) ( src1w )	1473:3:48398:48423	1644364	1	True				
ANR	1644485	AssignmentExpression	src1w = ( sljit_si ) ( src1w )		1644364	0		=			
ANR	1644486	Identifier	src1w		1644364	0					
ANR	1644487	CastExpression	( sljit_si ) ( src1w )		1644364	1					
ANR	1644488	CastTarget	sljit_si		1644364	0					
ANR	1644489	Identifier	src1w		1644364	1					
ANR	1644490	IfStatement	if ( src2 & SLJIT_IMM )		1644364	2					
ANR	1644491	Condition	src2 & SLJIT_IMM	1474:6:48431:48446	1644364	0	True				
ANR	1644492	BitAndExpression	src2 & SLJIT_IMM		1644364	0		&			
ANR	1644493	Identifier	src2		1644364	0					
ANR	1644494	Identifier	SLJIT_IMM		1644364	1					
ANR	1644495	ExpressionStatement	src2w = ( sljit_si ) ( src2w )	1475:3:48452:48477	1644364	1	True				
ANR	1644496	AssignmentExpression	src2w = ( sljit_si ) ( src2w )		1644364	0		=			
ANR	1644497	Identifier	src2w		1644364	0					
ANR	1644498	CastExpression	( sljit_si ) ( src2w )		1644364	1					
ANR	1644499	CastTarget	sljit_si		1644364	0					
ANR	1644500	Identifier	src2w		1644364	1					
ANR	1644501	IfStatement	if ( GET_FLAGS ( op ) )		1644364	3					
ANR	1644502	Condition	GET_FLAGS ( op )	1476:6:48485:48497	1644364	0	True				
ANR	1644503	CallExpression	GET_FLAGS ( op )		1644364	0					
ANR	1644504	Callee	GET_FLAGS		1644364	0					
ANR	1644505	Identifier	GET_FLAGS		1644364	0					
ANR	1644506	ArgumentList	op		1644364	1					
ANR	1644507	Argument	op		1644364	0					
ANR	1644508	Identifier	op		1644364	0					
ANR	1644509	ExpressionStatement	flags |= ALT_SIGN_EXT	1477:3:48503:48524	1644364	1	True				
ANR	1644510	AssignmentExpression	flags |= ALT_SIGN_EXT		1644364	0		|=			
ANR	1644511	Identifier	flags		1644364	0					
ANR	1644512	Identifier	ALT_SIGN_EXT		1644364	1					
ANR	1644513	IfStatement	if ( op & SLJIT_SET_O )		1644364	9					
ANR	1644514	Condition	op & SLJIT_SET_O	1480:5:48541:48556	1644364	0	True				
ANR	1644515	BitAndExpression	op & SLJIT_SET_O		1644364	0		&			
ANR	1644516	Identifier	op		1644364	0					
ANR	1644517	Identifier	SLJIT_SET_O		1644364	1					
ANR	1644518	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MTXER | S ( TMP_ZERO ) ) )"	1481:2:48561:48610	1644364	1	True				
ANR	1644519	CallExpression	"FAIL_IF ( push_inst ( compiler , MTXER | S ( TMP_ZERO ) ) )"		1644364	0					
ANR	1644520	Callee	FAIL_IF		1644364	0					
ANR	1644521	Identifier	FAIL_IF		1644364	0					
ANR	1644522	ArgumentList	"push_inst ( compiler , MTXER | S ( TMP_ZERO ) )"		1644364	1					
ANR	1644523	Argument	"push_inst ( compiler , MTXER | S ( TMP_ZERO ) )"		1644364	0					
ANR	1644524	CallExpression	"push_inst ( compiler , MTXER | S ( TMP_ZERO ) )"		1644364	0					
ANR	1644525	Callee	push_inst		1644364	0					
ANR	1644526	Identifier	push_inst		1644364	0					
ANR	1644527	ArgumentList	compiler		1644364	1					
ANR	1644528	Argument	compiler		1644364	0					
ANR	1644529	Identifier	compiler		1644364	0					
ANR	1644530	Argument	MTXER | S ( TMP_ZERO )		1644364	1					
ANR	1644531	InclusiveOrExpression	MTXER | S ( TMP_ZERO )		1644364	0		|			
ANR	1644532	Identifier	MTXER		1644364	0					
ANR	1644533	CallExpression	S ( TMP_ZERO )		1644364	1					
ANR	1644534	Callee	S		1644364	0					
ANR	1644535	Identifier	S		1644364	0					
ANR	1644536	ArgumentList	TMP_ZERO		1644364	1					
ANR	1644537	Argument	TMP_ZERO		1644364	0					
ANR	1644538	Identifier	TMP_ZERO		1644364	0					
ANR	1644539	IfStatement	if ( src2 == TMP_REG2 )		1644364	10					
ANR	1644540	Condition	src2 == TMP_REG2	1482:5:48617:48632	1644364	0	True				
ANR	1644541	EqualityExpression	src2 == TMP_REG2		1644364	0		==			
ANR	1644542	Identifier	src2		1644364	0					
ANR	1644543	Identifier	TMP_REG2		1644364	1					
ANR	1644544	ExpressionStatement	flags |= ALT_KEEP_CACHE	1483:2:48637:48660	1644364	1	True				
ANR	1644545	AssignmentExpression	flags |= ALT_KEEP_CACHE		1644364	0		|=			
ANR	1644546	Identifier	flags		1644364	0					
ANR	1644547	Identifier	ALT_KEEP_CACHE		1644364	1					
ANR	1644548	SwitchStatement	switch ( GET_OPCODE ( op ) )		1644364	11					
ANR	1644549	Condition	GET_OPCODE ( op )	1485:9:48672:48685	1644364	0	True				
ANR	1644550	CallExpression	GET_OPCODE ( op )		1644364	0					
ANR	1644551	Callee	GET_OPCODE		1644364	0					
ANR	1644552	Identifier	GET_OPCODE		1644364	0					
ANR	1644553	ArgumentList	op		1644364	1					
ANR	1644554	Argument	op		1644364	0					
ANR	1644555	Identifier	op		1644364	0					
ANR	1644556	CompoundStatement		32:25:864:864	1644364	1					
ANR	1644557	Label	case SLJIT_ADD :	1486:1:48691:48705	1644364	0	True				
ANR	1644558	Identifier	SLJIT_ADD		1644364	0					
ANR	1644559	IfStatement	if ( ! GET_FLAGS ( op ) && ( ( src1 | src2 ) & SLJIT_IMM ) )		1644364	1					
ANR	1644560	Condition	! GET_FLAGS ( op ) && ( ( src1 | src2 ) & SLJIT_IMM )	1487:6:48713:48757	1644364	0	True				
ANR	1644561	AndExpression	! GET_FLAGS ( op ) && ( ( src1 | src2 ) & SLJIT_IMM )		1644364	0		&&			
ANR	1644562	UnaryOperationExpression	! GET_FLAGS ( op )		1644364	0					
ANR	1644563	UnaryOperator	!		1644364	0					
ANR	1644564	CallExpression	GET_FLAGS ( op )		1644364	1					
ANR	1644565	Callee	GET_FLAGS		1644364	0					
ANR	1644566	Identifier	GET_FLAGS		1644364	0					
ANR	1644567	ArgumentList	op		1644364	1					
ANR	1644568	Argument	op		1644364	0					
ANR	1644569	Identifier	op		1644364	0					
ANR	1644570	BitAndExpression	( src1 | src2 ) & SLJIT_IMM		1644364	1		&			
ANR	1644571	InclusiveOrExpression	src1 | src2		1644364	0		|			
ANR	1644572	Identifier	src1		1644364	0					
ANR	1644573	Identifier	src2		1644364	1					
ANR	1644574	Identifier	SLJIT_IMM		1644364	1					
ANR	1644575	CompoundStatement		34:53:936:936	1644364	1					
ANR	1644576	IfStatement	"if ( TEST_SL_IMM ( src2 , src2w ) )"		1644364	0					
ANR	1644577	Condition	"TEST_SL_IMM ( src2 , src2w )"	1488:7:48769:48792	1644364	0	True				
ANR	1644578	CallExpression	"TEST_SL_IMM ( src2 , src2w )"		1644364	0					
ANR	1644579	Callee	TEST_SL_IMM		1644364	0					
ANR	1644580	Identifier	TEST_SL_IMM		1644364	0					
ANR	1644581	ArgumentList	src2		1644364	1					
ANR	1644582	Argument	src2		1644364	0					
ANR	1644583	Identifier	src2		1644364	0					
ANR	1644584	Argument	src2w		1644364	1					
ANR	1644585	Identifier	src2w		1644364	0					
ANR	1644586	CompoundStatement		35:33:971:971	1644364	1					
ANR	1644587	ExpressionStatement	compiler -> imm = src2w & 0xffff	1489:4:48801:48831	1644364	0	True				
ANR	1644588	AssignmentExpression	compiler -> imm = src2w & 0xffff		1644364	0		=			
ANR	1644589	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1644590	Identifier	compiler		1644364	0					
ANR	1644591	Identifier	imm		1644364	1					
ANR	1644592	BitAndExpression	src2w & 0xffff		1644364	1		&			
ANR	1644593	Identifier	src2w		1644364	0					
ANR	1644594	PrimaryExpression	0xffff		1644364	1					
ANR	1644595	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1490:4:48837:48928	1644364	1	True				
ANR	1644596	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1644364	0					
ANR	1644597	Callee	emit_op		1644364	0					
ANR	1644598	Identifier	emit_op		1644364	0					
ANR	1644599	ArgumentList	compiler		1644364	1					
ANR	1644600	Argument	compiler		1644364	0					
ANR	1644601	Identifier	compiler		1644364	0					
ANR	1644602	Argument	SLJIT_ADD		1644364	1					
ANR	1644603	Identifier	SLJIT_ADD		1644364	0					
ANR	1644604	Argument	flags | ALT_FORM1		1644364	2					
ANR	1644605	InclusiveOrExpression	flags | ALT_FORM1		1644364	0		|			
ANR	1644606	Identifier	flags		1644364	0					
ANR	1644607	Identifier	ALT_FORM1		1644364	1					
ANR	1644608	Argument	dst		1644364	3					
ANR	1644609	Identifier	dst		1644364	0					
ANR	1644610	Argument	dstw		1644364	4					
ANR	1644611	Identifier	dstw		1644364	0					
ANR	1644612	Argument	src1		1644364	5					
ANR	1644613	Identifier	src1		1644364	0					
ANR	1644614	Argument	src1w		1644364	6					
ANR	1644615	Identifier	src1w		1644364	0					
ANR	1644616	Argument	TMP_REG2		1644364	7					
ANR	1644617	Identifier	TMP_REG2		1644364	0					
ANR	1644618	Argument	0		1644364	8					
ANR	1644619	PrimaryExpression	0		1644364	0					
ANR	1644620	IfStatement	"if ( TEST_SL_IMM ( src1 , src1w ) )"		1644364	1					
ANR	1644621	Condition	"TEST_SL_IMM ( src1 , src1w )"	1492:7:48942:48965	1644364	0	True				
ANR	1644622	CallExpression	"TEST_SL_IMM ( src1 , src1w )"		1644364	0					
ANR	1644623	Callee	TEST_SL_IMM		1644364	0					
ANR	1644624	Identifier	TEST_SL_IMM		1644364	0					
ANR	1644625	ArgumentList	src1		1644364	1					
ANR	1644626	Argument	src1		1644364	0					
ANR	1644627	Identifier	src1		1644364	0					
ANR	1644628	Argument	src1w		1644364	1					
ANR	1644629	Identifier	src1w		1644364	0					
ANR	1644630	CompoundStatement		39:33:1144:1144	1644364	1					
ANR	1644631	ExpressionStatement	compiler -> imm = src1w & 0xffff	1493:4:48974:49004	1644364	0	True				
ANR	1644632	AssignmentExpression	compiler -> imm = src1w & 0xffff		1644364	0		=			
ANR	1644633	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1644634	Identifier	compiler		1644364	0					
ANR	1644635	Identifier	imm		1644364	1					
ANR	1644636	BitAndExpression	src1w & 0xffff		1644364	1		&			
ANR	1644637	Identifier	src1w		1644364	0					
ANR	1644638	PrimaryExpression	0xffff		1644364	1					
ANR	1644639	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM1 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1494:4:49010:49101	1644364	1	True				
ANR	1644640	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM1 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1644364	0					
ANR	1644641	Callee	emit_op		1644364	0					
ANR	1644642	Identifier	emit_op		1644364	0					
ANR	1644643	ArgumentList	compiler		1644364	1					
ANR	1644644	Argument	compiler		1644364	0					
ANR	1644645	Identifier	compiler		1644364	0					
ANR	1644646	Argument	SLJIT_ADD		1644364	1					
ANR	1644647	Identifier	SLJIT_ADD		1644364	0					
ANR	1644648	Argument	flags | ALT_FORM1		1644364	2					
ANR	1644649	InclusiveOrExpression	flags | ALT_FORM1		1644364	0		|			
ANR	1644650	Identifier	flags		1644364	0					
ANR	1644651	Identifier	ALT_FORM1		1644364	1					
ANR	1644652	Argument	dst		1644364	3					
ANR	1644653	Identifier	dst		1644364	0					
ANR	1644654	Argument	dstw		1644364	4					
ANR	1644655	Identifier	dstw		1644364	0					
ANR	1644656	Argument	src2		1644364	5					
ANR	1644657	Identifier	src2		1644364	0					
ANR	1644658	Argument	src2w		1644364	6					
ANR	1644659	Identifier	src2w		1644364	0					
ANR	1644660	Argument	TMP_REG2		1644364	7					
ANR	1644661	Identifier	TMP_REG2		1644364	0					
ANR	1644662	Argument	0		1644364	8					
ANR	1644663	PrimaryExpression	0		1644364	0					
ANR	1644664	IfStatement	"if ( TEST_SH_IMM ( src2 , src2w ) )"		1644364	2					
ANR	1644665	Condition	"TEST_SH_IMM ( src2 , src2w )"	1496:7:49115:49138	1644364	0	True				
ANR	1644666	CallExpression	"TEST_SH_IMM ( src2 , src2w )"		1644364	0					
ANR	1644667	Callee	TEST_SH_IMM		1644364	0					
ANR	1644668	Identifier	TEST_SH_IMM		1644364	0					
ANR	1644669	ArgumentList	src2		1644364	1					
ANR	1644670	Argument	src2		1644364	0					
ANR	1644671	Identifier	src2		1644364	0					
ANR	1644672	Argument	src2w		1644364	1					
ANR	1644673	Identifier	src2w		1644364	0					
ANR	1644674	CompoundStatement		43:33:1317:1317	1644364	1					
ANR	1644675	ExpressionStatement	compiler -> imm = ( src2w >> 16 ) & 0xffff	1497:4:49147:49185	1644364	0	True				
ANR	1644676	AssignmentExpression	compiler -> imm = ( src2w >> 16 ) & 0xffff		1644364	0		=			
ANR	1644677	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1644678	Identifier	compiler		1644364	0					
ANR	1644679	Identifier	imm		1644364	1					
ANR	1644680	BitAndExpression	( src2w >> 16 ) & 0xffff		1644364	1		&			
ANR	1644681	ShiftExpression	src2w >> 16		1644364	0		>>			
ANR	1644682	Identifier	src2w		1644364	0					
ANR	1644683	PrimaryExpression	16		1644364	1					
ANR	1644684	PrimaryExpression	0xffff		1644364	1					
ANR	1644685	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM2 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1498:4:49191:49282	1644364	1	True				
ANR	1644686	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM2 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1644364	0					
ANR	1644687	Callee	emit_op		1644364	0					
ANR	1644688	Identifier	emit_op		1644364	0					
ANR	1644689	ArgumentList	compiler		1644364	1					
ANR	1644690	Argument	compiler		1644364	0					
ANR	1644691	Identifier	compiler		1644364	0					
ANR	1644692	Argument	SLJIT_ADD		1644364	1					
ANR	1644693	Identifier	SLJIT_ADD		1644364	0					
ANR	1644694	Argument	flags | ALT_FORM2		1644364	2					
ANR	1644695	InclusiveOrExpression	flags | ALT_FORM2		1644364	0		|			
ANR	1644696	Identifier	flags		1644364	0					
ANR	1644697	Identifier	ALT_FORM2		1644364	1					
ANR	1644698	Argument	dst		1644364	3					
ANR	1644699	Identifier	dst		1644364	0					
ANR	1644700	Argument	dstw		1644364	4					
ANR	1644701	Identifier	dstw		1644364	0					
ANR	1644702	Argument	src1		1644364	5					
ANR	1644703	Identifier	src1		1644364	0					
ANR	1644704	Argument	src1w		1644364	6					
ANR	1644705	Identifier	src1w		1644364	0					
ANR	1644706	Argument	TMP_REG2		1644364	7					
ANR	1644707	Identifier	TMP_REG2		1644364	0					
ANR	1644708	Argument	0		1644364	8					
ANR	1644709	PrimaryExpression	0		1644364	0					
ANR	1644710	IfStatement	"if ( TEST_SH_IMM ( src1 , src1w ) )"		1644364	3					
ANR	1644711	Condition	"TEST_SH_IMM ( src1 , src1w )"	1500:7:49296:49319	1644364	0	True				
ANR	1644712	CallExpression	"TEST_SH_IMM ( src1 , src1w )"		1644364	0					
ANR	1644713	Callee	TEST_SH_IMM		1644364	0					
ANR	1644714	Identifier	TEST_SH_IMM		1644364	0					
ANR	1644715	ArgumentList	src1		1644364	1					
ANR	1644716	Argument	src1		1644364	0					
ANR	1644717	Identifier	src1		1644364	0					
ANR	1644718	Argument	src1w		1644364	1					
ANR	1644719	Identifier	src1w		1644364	0					
ANR	1644720	CompoundStatement		47:33:1498:1498	1644364	1					
ANR	1644721	ExpressionStatement	compiler -> imm = ( src1w >> 16 ) & 0xffff	1501:4:49328:49366	1644364	0	True				
ANR	1644722	AssignmentExpression	compiler -> imm = ( src1w >> 16 ) & 0xffff		1644364	0		=			
ANR	1644723	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1644724	Identifier	compiler		1644364	0					
ANR	1644725	Identifier	imm		1644364	1					
ANR	1644726	BitAndExpression	( src1w >> 16 ) & 0xffff		1644364	1		&			
ANR	1644727	ShiftExpression	src1w >> 16		1644364	0		>>			
ANR	1644728	Identifier	src1w		1644364	0					
ANR	1644729	PrimaryExpression	16		1644364	1					
ANR	1644730	PrimaryExpression	0xffff		1644364	1					
ANR	1644731	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM2 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1502:4:49372:49463	1644364	1	True				
ANR	1644732	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM2 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1644364	0					
ANR	1644733	Callee	emit_op		1644364	0					
ANR	1644734	Identifier	emit_op		1644364	0					
ANR	1644735	ArgumentList	compiler		1644364	1					
ANR	1644736	Argument	compiler		1644364	0					
ANR	1644737	Identifier	compiler		1644364	0					
ANR	1644738	Argument	SLJIT_ADD		1644364	1					
ANR	1644739	Identifier	SLJIT_ADD		1644364	0					
ANR	1644740	Argument	flags | ALT_FORM2		1644364	2					
ANR	1644741	InclusiveOrExpression	flags | ALT_FORM2		1644364	0		|			
ANR	1644742	Identifier	flags		1644364	0					
ANR	1644743	Identifier	ALT_FORM2		1644364	1					
ANR	1644744	Argument	dst		1644364	3					
ANR	1644745	Identifier	dst		1644364	0					
ANR	1644746	Argument	dstw		1644364	4					
ANR	1644747	Identifier	dstw		1644364	0					
ANR	1644748	Argument	src2		1644364	5					
ANR	1644749	Identifier	src2		1644364	0					
ANR	1644750	Argument	src2w		1644364	6					
ANR	1644751	Identifier	src2w		1644364	0					
ANR	1644752	Argument	TMP_REG2		1644364	7					
ANR	1644753	Identifier	TMP_REG2		1644364	0					
ANR	1644754	Argument	0		1644364	8					
ANR	1644755	PrimaryExpression	0		1644364	0					
ANR	1644756	IfStatement	"if ( TEST_ADD_IMM ( src2 , src2w ) )"		1644364	4					
ANR	1644757	Condition	"TEST_ADD_IMM ( src2 , src2w )"	1505:7:49532:49556	1644364	0	True				
ANR	1644758	CallExpression	"TEST_ADD_IMM ( src2 , src2w )"		1644364	0					
ANR	1644759	Callee	TEST_ADD_IMM		1644364	0					
ANR	1644760	Identifier	TEST_ADD_IMM		1644364	0					
ANR	1644761	ArgumentList	src2		1644364	1					
ANR	1644762	Argument	src2		1644364	0					
ANR	1644763	Identifier	src2		1644364	0					
ANR	1644764	Argument	src2w		1644364	1					
ANR	1644765	Identifier	src2w		1644364	0					
ANR	1644766	CompoundStatement		52:34:1735:1735	1644364	1					
ANR	1644767	ExpressionStatement	compiler -> imm = src2w & 0xffffffff	1506:4:49565:49599	1644364	0	True				
ANR	1644768	AssignmentExpression	compiler -> imm = src2w & 0xffffffff		1644364	0		=			
ANR	1644769	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1644770	Identifier	compiler		1644364	0					
ANR	1644771	Identifier	imm		1644364	1					
ANR	1644772	BitAndExpression	src2w & 0xffffffff		1644364	1		&			
ANR	1644773	Identifier	src2w		1644364	0					
ANR	1644774	PrimaryExpression	0xffffffff		1644364	1					
ANR	1644775	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM4 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1507:4:49605:49696	1644364	1	True				
ANR	1644776	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM4 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1644364	0					
ANR	1644777	Callee	emit_op		1644364	0					
ANR	1644778	Identifier	emit_op		1644364	0					
ANR	1644779	ArgumentList	compiler		1644364	1					
ANR	1644780	Argument	compiler		1644364	0					
ANR	1644781	Identifier	compiler		1644364	0					
ANR	1644782	Argument	SLJIT_ADD		1644364	1					
ANR	1644783	Identifier	SLJIT_ADD		1644364	0					
ANR	1644784	Argument	flags | ALT_FORM4		1644364	2					
ANR	1644785	InclusiveOrExpression	flags | ALT_FORM4		1644364	0		|			
ANR	1644786	Identifier	flags		1644364	0					
ANR	1644787	Identifier	ALT_FORM4		1644364	1					
ANR	1644788	Argument	dst		1644364	3					
ANR	1644789	Identifier	dst		1644364	0					
ANR	1644790	Argument	dstw		1644364	4					
ANR	1644791	Identifier	dstw		1644364	0					
ANR	1644792	Argument	src1		1644364	5					
ANR	1644793	Identifier	src1		1644364	0					
ANR	1644794	Argument	src1w		1644364	6					
ANR	1644795	Identifier	src1w		1644364	0					
ANR	1644796	Argument	TMP_REG2		1644364	7					
ANR	1644797	Identifier	TMP_REG2		1644364	0					
ANR	1644798	Argument	0		1644364	8					
ANR	1644799	PrimaryExpression	0		1644364	0					
ANR	1644800	IfStatement	"if ( TEST_ADD_IMM ( src1 , src1w ) )"		1644364	5					
ANR	1644801	Condition	"TEST_ADD_IMM ( src1 , src1w )"	1509:7:49710:49734	1644364	0	True				
ANR	1644802	CallExpression	"TEST_ADD_IMM ( src1 , src1w )"		1644364	0					
ANR	1644803	Callee	TEST_ADD_IMM		1644364	0					
ANR	1644804	Identifier	TEST_ADD_IMM		1644364	0					
ANR	1644805	ArgumentList	src1		1644364	1					
ANR	1644806	Argument	src1		1644364	0					
ANR	1644807	Identifier	src1		1644364	0					
ANR	1644808	Argument	src1w		1644364	1					
ANR	1644809	Identifier	src1w		1644364	0					
ANR	1644810	CompoundStatement		56:34:1913:1913	1644364	1					
ANR	1644811	ExpressionStatement	compiler -> imm = src1w & 0xffffffff	1510:4:49743:49777	1644364	0	True				
ANR	1644812	AssignmentExpression	compiler -> imm = src1w & 0xffffffff		1644364	0		=			
ANR	1644813	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1644814	Identifier	compiler		1644364	0					
ANR	1644815	Identifier	imm		1644364	1					
ANR	1644816	BitAndExpression	src1w & 0xffffffff		1644364	1		&			
ANR	1644817	Identifier	src1w		1644364	0					
ANR	1644818	PrimaryExpression	0xffffffff		1644364	1					
ANR	1644819	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM4 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1511:4:49783:49874	1644364	1	True				
ANR	1644820	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM4 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1644364	0					
ANR	1644821	Callee	emit_op		1644364	0					
ANR	1644822	Identifier	emit_op		1644364	0					
ANR	1644823	ArgumentList	compiler		1644364	1					
ANR	1644824	Argument	compiler		1644364	0					
ANR	1644825	Identifier	compiler		1644364	0					
ANR	1644826	Argument	SLJIT_ADD		1644364	1					
ANR	1644827	Identifier	SLJIT_ADD		1644364	0					
ANR	1644828	Argument	flags | ALT_FORM4		1644364	2					
ANR	1644829	InclusiveOrExpression	flags | ALT_FORM4		1644364	0		|			
ANR	1644830	Identifier	flags		1644364	0					
ANR	1644831	Identifier	ALT_FORM4		1644364	1					
ANR	1644832	Argument	dst		1644364	3					
ANR	1644833	Identifier	dst		1644364	0					
ANR	1644834	Argument	dstw		1644364	4					
ANR	1644835	Identifier	dstw		1644364	0					
ANR	1644836	Argument	src2		1644364	5					
ANR	1644837	Identifier	src2		1644364	0					
ANR	1644838	Argument	src2w		1644364	6					
ANR	1644839	Identifier	src2w		1644364	0					
ANR	1644840	Argument	TMP_REG2		1644364	7					
ANR	1644841	Identifier	TMP_REG2		1644364	0					
ANR	1644842	Argument	0		1644364	8					
ANR	1644843	PrimaryExpression	0		1644364	0					
ANR	1644844	IfStatement	if ( ! ( GET_FLAGS ( op ) & ( SLJIT_SET_E | SLJIT_SET_O ) ) )		1644364	2					
ANR	1644845	Condition	! ( GET_FLAGS ( op ) & ( SLJIT_SET_E | SLJIT_SET_O ) )	1514:6:49891:49936	1644364	0	True				
ANR	1644846	UnaryOperationExpression	! ( GET_FLAGS ( op ) & ( SLJIT_SET_E | SLJIT_SET_O ) )		1644364	0					
ANR	1644847	UnaryOperator	!		1644364	0					
ANR	1644848	BitAndExpression	GET_FLAGS ( op ) & ( SLJIT_SET_E | SLJIT_SET_O )		1644364	1		&			
ANR	1644849	CallExpression	GET_FLAGS ( op )		1644364	0					
ANR	1644850	Callee	GET_FLAGS		1644364	0					
ANR	1644851	Identifier	GET_FLAGS		1644364	0					
ANR	1644852	ArgumentList	op		1644364	1					
ANR	1644853	Argument	op		1644364	0					
ANR	1644854	Identifier	op		1644364	0					
ANR	1644855	InclusiveOrExpression	SLJIT_SET_E | SLJIT_SET_O		1644364	1		|			
ANR	1644856	Identifier	SLJIT_SET_E		1644364	0					
ANR	1644857	Identifier	SLJIT_SET_O		1644364	1					
ANR	1644858	CompoundStatement		61:54:2115:2115	1644364	1					
ANR	1644859	IfStatement	"if ( TEST_SL_IMM ( src2 , src2w ) )"		1644364	0					
ANR	1644860	Condition	"TEST_SL_IMM ( src2 , src2w )"	1515:7:49948:49971	1644364	0	True				
ANR	1644861	CallExpression	"TEST_SL_IMM ( src2 , src2w )"		1644364	0					
ANR	1644862	Callee	TEST_SL_IMM		1644364	0					
ANR	1644863	Identifier	TEST_SL_IMM		1644364	0					
ANR	1644864	ArgumentList	src2		1644364	1					
ANR	1644865	Argument	src2		1644364	0					
ANR	1644866	Identifier	src2		1644364	0					
ANR	1644867	Argument	src2w		1644364	1					
ANR	1644868	Identifier	src2w		1644364	0					
ANR	1644869	CompoundStatement		62:33:2150:2150	1644364	1					
ANR	1644870	ExpressionStatement	compiler -> imm = src2w & 0xffff	1516:4:49980:50010	1644364	0	True				
ANR	1644871	AssignmentExpression	compiler -> imm = src2w & 0xffff		1644364	0		=			
ANR	1644872	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1644873	Identifier	compiler		1644364	0					
ANR	1644874	Identifier	imm		1644364	1					
ANR	1644875	BitAndExpression	src2w & 0xffff		1644364	1		&			
ANR	1644876	Identifier	src2w		1644364	0					
ANR	1644877	PrimaryExpression	0xffff		1644364	1					
ANR	1644878	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1517:4:50016:50107	1644364	1	True				
ANR	1644879	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1644364	0					
ANR	1644880	Callee	emit_op		1644364	0					
ANR	1644881	Identifier	emit_op		1644364	0					
ANR	1644882	ArgumentList	compiler		1644364	1					
ANR	1644883	Argument	compiler		1644364	0					
ANR	1644884	Identifier	compiler		1644364	0					
ANR	1644885	Argument	SLJIT_ADD		1644364	1					
ANR	1644886	Identifier	SLJIT_ADD		1644364	0					
ANR	1644887	Argument	flags | ALT_FORM3		1644364	2					
ANR	1644888	InclusiveOrExpression	flags | ALT_FORM3		1644364	0		|			
ANR	1644889	Identifier	flags		1644364	0					
ANR	1644890	Identifier	ALT_FORM3		1644364	1					
ANR	1644891	Argument	dst		1644364	3					
ANR	1644892	Identifier	dst		1644364	0					
ANR	1644893	Argument	dstw		1644364	4					
ANR	1644894	Identifier	dstw		1644364	0					
ANR	1644895	Argument	src1		1644364	5					
ANR	1644896	Identifier	src1		1644364	0					
ANR	1644897	Argument	src1w		1644364	6					
ANR	1644898	Identifier	src1w		1644364	0					
ANR	1644899	Argument	TMP_REG2		1644364	7					
ANR	1644900	Identifier	TMP_REG2		1644364	0					
ANR	1644901	Argument	0		1644364	8					
ANR	1644902	PrimaryExpression	0		1644364	0					
ANR	1644903	IfStatement	"if ( TEST_SL_IMM ( src1 , src1w ) )"		1644364	1					
ANR	1644904	Condition	"TEST_SL_IMM ( src1 , src1w )"	1519:7:50121:50144	1644364	0	True				
ANR	1644905	CallExpression	"TEST_SL_IMM ( src1 , src1w )"		1644364	0					
ANR	1644906	Callee	TEST_SL_IMM		1644364	0					
ANR	1644907	Identifier	TEST_SL_IMM		1644364	0					
ANR	1644908	ArgumentList	src1		1644364	1					
ANR	1644909	Argument	src1		1644364	0					
ANR	1644910	Identifier	src1		1644364	0					
ANR	1644911	Argument	src1w		1644364	1					
ANR	1644912	Identifier	src1w		1644364	0					
ANR	1644913	CompoundStatement		66:33:2323:2323	1644364	1					
ANR	1644914	ExpressionStatement	compiler -> imm = src1w & 0xffff	1520:4:50153:50183	1644364	0	True				
ANR	1644915	AssignmentExpression	compiler -> imm = src1w & 0xffff		1644364	0		=			
ANR	1644916	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1644917	Identifier	compiler		1644364	0					
ANR	1644918	Identifier	imm		1644364	1					
ANR	1644919	BitAndExpression	src1w & 0xffff		1644364	1		&			
ANR	1644920	Identifier	src1w		1644364	0					
ANR	1644921	PrimaryExpression	0xffff		1644364	1					
ANR	1644922	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM3 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1521:4:50189:50280	1644364	1	True				
ANR	1644923	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM3 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1644364	0					
ANR	1644924	Callee	emit_op		1644364	0					
ANR	1644925	Identifier	emit_op		1644364	0					
ANR	1644926	ArgumentList	compiler		1644364	1					
ANR	1644927	Argument	compiler		1644364	0					
ANR	1644928	Identifier	compiler		1644364	0					
ANR	1644929	Argument	SLJIT_ADD		1644364	1					
ANR	1644930	Identifier	SLJIT_ADD		1644364	0					
ANR	1644931	Argument	flags | ALT_FORM3		1644364	2					
ANR	1644932	InclusiveOrExpression	flags | ALT_FORM3		1644364	0		|			
ANR	1644933	Identifier	flags		1644364	0					
ANR	1644934	Identifier	ALT_FORM3		1644364	1					
ANR	1644935	Argument	dst		1644364	3					
ANR	1644936	Identifier	dst		1644364	0					
ANR	1644937	Argument	dstw		1644364	4					
ANR	1644938	Identifier	dstw		1644364	0					
ANR	1644939	Argument	src2		1644364	5					
ANR	1644940	Identifier	src2		1644364	0					
ANR	1644941	Argument	src2w		1644364	6					
ANR	1644942	Identifier	src2w		1644364	0					
ANR	1644943	Argument	TMP_REG2		1644364	7					
ANR	1644944	Identifier	TMP_REG2		1644364	0					
ANR	1644945	Argument	0		1644364	8					
ANR	1644946	PrimaryExpression	0		1644364	0					
ANR	1644947	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1524:2:50293:50372	1644364	3	True				
ANR	1644948	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags , dst , dstw , src1 , src1w , src2 , src2w )"		1644364	0					
ANR	1644949	Callee	emit_op		1644364	0					
ANR	1644950	Identifier	emit_op		1644364	0					
ANR	1644951	ArgumentList	compiler		1644364	1					
ANR	1644952	Argument	compiler		1644364	0					
ANR	1644953	Identifier	compiler		1644364	0					
ANR	1644954	Argument	SLJIT_ADD		1644364	1					
ANR	1644955	Identifier	SLJIT_ADD		1644364	0					
ANR	1644956	Argument	flags		1644364	2					
ANR	1644957	Identifier	flags		1644364	0					
ANR	1644958	Argument	dst		1644364	3					
ANR	1644959	Identifier	dst		1644364	0					
ANR	1644960	Argument	dstw		1644364	4					
ANR	1644961	Identifier	dstw		1644364	0					
ANR	1644962	Argument	src1		1644364	5					
ANR	1644963	Identifier	src1		1644364	0					
ANR	1644964	Argument	src1w		1644364	6					
ANR	1644965	Identifier	src1w		1644364	0					
ANR	1644966	Argument	src2		1644364	7					
ANR	1644967	Identifier	src2		1644364	0					
ANR	1644968	Argument	src2w		1644364	8					
ANR	1644969	Identifier	src2w		1644364	0					
ANR	1644970	Label	case SLJIT_ADDC :	1526:1:50376:50391	1644364	4	True				
ANR	1644971	Identifier	SLJIT_ADDC		1644364	0					
ANR	1644972	ReturnStatement	"return emit_op ( compiler , SLJIT_ADDC , flags | ( ! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1 ) , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1527:2:50395:50520	1644364	5	True				
ANR	1644973	CallExpression	"emit_op ( compiler , SLJIT_ADDC , flags | ( ! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1 ) , dst , dstw , src1 , src1w , src2 , src2w )"		1644364	0					
ANR	1644974	Callee	emit_op		1644364	0					
ANR	1644975	Identifier	emit_op		1644364	0					
ANR	1644976	ArgumentList	compiler		1644364	1					
ANR	1644977	Argument	compiler		1644364	0					
ANR	1644978	Identifier	compiler		1644364	0					
ANR	1644979	Argument	SLJIT_ADDC		1644364	1					
ANR	1644980	Identifier	SLJIT_ADDC		1644364	0					
ANR	1644981	Argument	flags | ( ! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1 )		1644364	2					
ANR	1644982	InclusiveOrExpression	flags | ( ! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1 )		1644364	0		|			
ANR	1644983	Identifier	flags		1644364	0					
ANR	1644984	ConditionalExpression	! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1		1644364	1					
ANR	1644985	Condition	! ( op & SLJIT_KEEP_FLAGS )		1644364	0					
ANR	1644986	UnaryOperationExpression	! ( op & SLJIT_KEEP_FLAGS )		1644364	0					
ANR	1644987	UnaryOperator	!		1644364	0					
ANR	1644988	BitAndExpression	op & SLJIT_KEEP_FLAGS		1644364	1		&			
ANR	1644989	Identifier	op		1644364	0					
ANR	1644990	Identifier	SLJIT_KEEP_FLAGS		1644364	1					
ANR	1644991	PrimaryExpression	0		1644364	1					
ANR	1644992	Identifier	ALT_FORM1		1644364	2					
ANR	1644993	Argument	dst		1644364	3					
ANR	1644994	Identifier	dst		1644364	0					
ANR	1644995	Argument	dstw		1644364	4					
ANR	1644996	Identifier	dstw		1644364	0					
ANR	1644997	Argument	src1		1644364	5					
ANR	1644998	Identifier	src1		1644364	0					
ANR	1644999	Argument	src1w		1644364	6					
ANR	1645000	Identifier	src1w		1644364	0					
ANR	1645001	Argument	src2		1644364	7					
ANR	1645002	Identifier	src2		1644364	0					
ANR	1645003	Argument	src2w		1644364	8					
ANR	1645004	Identifier	src2w		1644364	0					
ANR	1645005	Label	case SLJIT_SUB :	1529:1:50524:50538	1644364	6	True				
ANR	1645006	Identifier	SLJIT_SUB		1644364	0					
ANR	1645007	IfStatement	if ( ! GET_FLAGS ( op ) && ( ( src1 | src2 ) & SLJIT_IMM ) )		1644364	7					
ANR	1645008	Condition	! GET_FLAGS ( op ) && ( ( src1 | src2 ) & SLJIT_IMM )	1530:6:50546:50590	1644364	0	True				
ANR	1645009	AndExpression	! GET_FLAGS ( op ) && ( ( src1 | src2 ) & SLJIT_IMM )		1644364	0		&&			
ANR	1645010	UnaryOperationExpression	! GET_FLAGS ( op )		1644364	0					
ANR	1645011	UnaryOperator	!		1644364	0					
ANR	1645012	CallExpression	GET_FLAGS ( op )		1644364	1					
ANR	1645013	Callee	GET_FLAGS		1644364	0					
ANR	1645014	Identifier	GET_FLAGS		1644364	0					
ANR	1645015	ArgumentList	op		1644364	1					
ANR	1645016	Argument	op		1644364	0					
ANR	1645017	Identifier	op		1644364	0					
ANR	1645018	BitAndExpression	( src1 | src2 ) & SLJIT_IMM		1644364	1		&			
ANR	1645019	InclusiveOrExpression	src1 | src2		1644364	0		|			
ANR	1645020	Identifier	src1		1644364	0					
ANR	1645021	Identifier	src2		1644364	1					
ANR	1645022	Identifier	SLJIT_IMM		1644364	1					
ANR	1645023	CompoundStatement		77:53:2769:2769	1644364	1					
ANR	1645024	IfStatement	"if ( TEST_SL_IMM ( src2 , - src2w ) )"		1644364	0					
ANR	1645025	Condition	"TEST_SL_IMM ( src2 , - src2w )"	1531:7:50602:50626	1644364	0	True				
ANR	1645026	CallExpression	"TEST_SL_IMM ( src2 , - src2w )"		1644364	0					
ANR	1645027	Callee	TEST_SL_IMM		1644364	0					
ANR	1645028	Identifier	TEST_SL_IMM		1644364	0					
ANR	1645029	ArgumentList	src2		1644364	1					
ANR	1645030	Argument	src2		1644364	0					
ANR	1645031	Identifier	src2		1644364	0					
ANR	1645032	Argument	- src2w		1644364	1					
ANR	1645033	UnaryOperationExpression	- src2w		1644364	0					
ANR	1645034	UnaryOperator	-		1644364	0					
ANR	1645035	Identifier	src2w		1644364	1					
ANR	1645036	CompoundStatement		78:34:2805:2805	1644364	1					
ANR	1645037	ExpressionStatement	compiler -> imm = ( - src2w ) & 0xffff	1532:4:50635:50668	1644364	0	True				
ANR	1645038	AssignmentExpression	compiler -> imm = ( - src2w ) & 0xffff		1644364	0		=			
ANR	1645039	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1645040	Identifier	compiler		1644364	0					
ANR	1645041	Identifier	imm		1644364	1					
ANR	1645042	BitAndExpression	( - src2w ) & 0xffff		1644364	1		&			
ANR	1645043	UnaryOperationExpression	- src2w		1644364	0					
ANR	1645044	UnaryOperator	-		1644364	0					
ANR	1645045	Identifier	src2w		1644364	1					
ANR	1645046	PrimaryExpression	0xffff		1644364	1					
ANR	1645047	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1533:4:50674:50765	1644364	1	True				
ANR	1645048	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1644364	0					
ANR	1645049	Callee	emit_op		1644364	0					
ANR	1645050	Identifier	emit_op		1644364	0					
ANR	1645051	ArgumentList	compiler		1644364	1					
ANR	1645052	Argument	compiler		1644364	0					
ANR	1645053	Identifier	compiler		1644364	0					
ANR	1645054	Argument	SLJIT_ADD		1644364	1					
ANR	1645055	Identifier	SLJIT_ADD		1644364	0					
ANR	1645056	Argument	flags | ALT_FORM1		1644364	2					
ANR	1645057	InclusiveOrExpression	flags | ALT_FORM1		1644364	0		|			
ANR	1645058	Identifier	flags		1644364	0					
ANR	1645059	Identifier	ALT_FORM1		1644364	1					
ANR	1645060	Argument	dst		1644364	3					
ANR	1645061	Identifier	dst		1644364	0					
ANR	1645062	Argument	dstw		1644364	4					
ANR	1645063	Identifier	dstw		1644364	0					
ANR	1645064	Argument	src1		1644364	5					
ANR	1645065	Identifier	src1		1644364	0					
ANR	1645066	Argument	src1w		1644364	6					
ANR	1645067	Identifier	src1w		1644364	0					
ANR	1645068	Argument	TMP_REG2		1644364	7					
ANR	1645069	Identifier	TMP_REG2		1644364	0					
ANR	1645070	Argument	0		1644364	8					
ANR	1645071	PrimaryExpression	0		1644364	0					
ANR	1645072	IfStatement	"if ( TEST_SL_IMM ( src1 , src1w ) )"		1644364	1					
ANR	1645073	Condition	"TEST_SL_IMM ( src1 , src1w )"	1535:7:50779:50802	1644364	0	True				
ANR	1645074	CallExpression	"TEST_SL_IMM ( src1 , src1w )"		1644364	0					
ANR	1645075	Callee	TEST_SL_IMM		1644364	0					
ANR	1645076	Identifier	TEST_SL_IMM		1644364	0					
ANR	1645077	ArgumentList	src1		1644364	1					
ANR	1645078	Argument	src1		1644364	0					
ANR	1645079	Identifier	src1		1644364	0					
ANR	1645080	Argument	src1w		1644364	1					
ANR	1645081	Identifier	src1w		1644364	0					
ANR	1645082	CompoundStatement		82:33:2981:2981	1644364	1					
ANR	1645083	ExpressionStatement	compiler -> imm = src1w & 0xffff	1536:4:50811:50841	1644364	0	True				
ANR	1645084	AssignmentExpression	compiler -> imm = src1w & 0xffff		1644364	0		=			
ANR	1645085	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1645086	Identifier	compiler		1644364	0					
ANR	1645087	Identifier	imm		1644364	1					
ANR	1645088	BitAndExpression	src1w & 0xffff		1644364	1		&			
ANR	1645089	Identifier	src1w		1644364	0					
ANR	1645090	PrimaryExpression	0xffff		1644364	1					
ANR	1645091	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM1 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1537:4:50847:50938	1644364	1	True				
ANR	1645092	CallExpression	"emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM1 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1644364	0					
ANR	1645093	Callee	emit_op		1644364	0					
ANR	1645094	Identifier	emit_op		1644364	0					
ANR	1645095	ArgumentList	compiler		1644364	1					
ANR	1645096	Argument	compiler		1644364	0					
ANR	1645097	Identifier	compiler		1644364	0					
ANR	1645098	Argument	SLJIT_SUB		1644364	1					
ANR	1645099	Identifier	SLJIT_SUB		1644364	0					
ANR	1645100	Argument	flags | ALT_FORM1		1644364	2					
ANR	1645101	InclusiveOrExpression	flags | ALT_FORM1		1644364	0		|			
ANR	1645102	Identifier	flags		1644364	0					
ANR	1645103	Identifier	ALT_FORM1		1644364	1					
ANR	1645104	Argument	dst		1644364	3					
ANR	1645105	Identifier	dst		1644364	0					
ANR	1645106	Argument	dstw		1644364	4					
ANR	1645107	Identifier	dstw		1644364	0					
ANR	1645108	Argument	src2		1644364	5					
ANR	1645109	Identifier	src2		1644364	0					
ANR	1645110	Argument	src2w		1644364	6					
ANR	1645111	Identifier	src2w		1644364	0					
ANR	1645112	Argument	TMP_REG2		1644364	7					
ANR	1645113	Identifier	TMP_REG2		1644364	0					
ANR	1645114	Argument	0		1644364	8					
ANR	1645115	PrimaryExpression	0		1644364	0					
ANR	1645116	IfStatement	"if ( TEST_SH_IMM ( src2 , - src2w ) )"		1644364	2					
ANR	1645117	Condition	"TEST_SH_IMM ( src2 , - src2w )"	1539:7:50952:50976	1644364	0	True				
ANR	1645118	CallExpression	"TEST_SH_IMM ( src2 , - src2w )"		1644364	0					
ANR	1645119	Callee	TEST_SH_IMM		1644364	0					
ANR	1645120	Identifier	TEST_SH_IMM		1644364	0					
ANR	1645121	ArgumentList	src2		1644364	1					
ANR	1645122	Argument	src2		1644364	0					
ANR	1645123	Identifier	src2		1644364	0					
ANR	1645124	Argument	- src2w		1644364	1					
ANR	1645125	UnaryOperationExpression	- src2w		1644364	0					
ANR	1645126	UnaryOperator	-		1644364	0					
ANR	1645127	Identifier	src2w		1644364	1					
ANR	1645128	CompoundStatement		86:34:3155:3155	1644364	1					
ANR	1645129	ExpressionStatement	compiler -> imm = ( ( - src2w ) >> 16 ) & 0xffff	1540:4:50985:51026	1644364	0	True				
ANR	1645130	AssignmentExpression	compiler -> imm = ( ( - src2w ) >> 16 ) & 0xffff		1644364	0		=			
ANR	1645131	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1645132	Identifier	compiler		1644364	0					
ANR	1645133	Identifier	imm		1644364	1					
ANR	1645134	BitAndExpression	( ( - src2w ) >> 16 ) & 0xffff		1644364	1		&			
ANR	1645135	ShiftExpression	( - src2w ) >> 16		1644364	0		>>			
ANR	1645136	UnaryOperationExpression	- src2w		1644364	0					
ANR	1645137	UnaryOperator	-		1644364	0					
ANR	1645138	Identifier	src2w		1644364	1					
ANR	1645139	PrimaryExpression	16		1644364	1					
ANR	1645140	PrimaryExpression	0xffff		1644364	1					
ANR	1645141	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM2 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1541:4:51032:51123	1644364	1	True				
ANR	1645142	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM2 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1644364	0					
ANR	1645143	Callee	emit_op		1644364	0					
ANR	1645144	Identifier	emit_op		1644364	0					
ANR	1645145	ArgumentList	compiler		1644364	1					
ANR	1645146	Argument	compiler		1644364	0					
ANR	1645147	Identifier	compiler		1644364	0					
ANR	1645148	Argument	SLJIT_ADD		1644364	1					
ANR	1645149	Identifier	SLJIT_ADD		1644364	0					
ANR	1645150	Argument	flags | ALT_FORM2		1644364	2					
ANR	1645151	InclusiveOrExpression	flags | ALT_FORM2		1644364	0		|			
ANR	1645152	Identifier	flags		1644364	0					
ANR	1645153	Identifier	ALT_FORM2		1644364	1					
ANR	1645154	Argument	dst		1644364	3					
ANR	1645155	Identifier	dst		1644364	0					
ANR	1645156	Argument	dstw		1644364	4					
ANR	1645157	Identifier	dstw		1644364	0					
ANR	1645158	Argument	src1		1644364	5					
ANR	1645159	Identifier	src1		1644364	0					
ANR	1645160	Argument	src1w		1644364	6					
ANR	1645161	Identifier	src1w		1644364	0					
ANR	1645162	Argument	TMP_REG2		1644364	7					
ANR	1645163	Identifier	TMP_REG2		1644364	0					
ANR	1645164	Argument	0		1644364	8					
ANR	1645165	PrimaryExpression	0		1644364	0					
ANR	1645166	IfStatement	"if ( TEST_ADD_IMM ( src2 , - src2w ) )"		1644364	3					
ANR	1645167	Condition	"TEST_ADD_IMM ( src2 , - src2w )"	1544:7:51192:51217	1644364	0	True				
ANR	1645168	CallExpression	"TEST_ADD_IMM ( src2 , - src2w )"		1644364	0					
ANR	1645169	Callee	TEST_ADD_IMM		1644364	0					
ANR	1645170	Identifier	TEST_ADD_IMM		1644364	0					
ANR	1645171	ArgumentList	src2		1644364	1					
ANR	1645172	Argument	src2		1644364	0					
ANR	1645173	Identifier	src2		1644364	0					
ANR	1645174	Argument	- src2w		1644364	1					
ANR	1645175	UnaryOperationExpression	- src2w		1644364	0					
ANR	1645176	UnaryOperator	-		1644364	0					
ANR	1645177	Identifier	src2w		1644364	1					
ANR	1645178	CompoundStatement		91:35:3396:3396	1644364	1					
ANR	1645179	ExpressionStatement	compiler -> imm = - src2w & 0xffffffff	1545:4:51226:51261	1644364	0	True				
ANR	1645180	AssignmentExpression	compiler -> imm = - src2w & 0xffffffff		1644364	0		=			
ANR	1645181	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1645182	Identifier	compiler		1644364	0					
ANR	1645183	Identifier	imm		1644364	1					
ANR	1645184	BitAndExpression	- src2w & 0xffffffff		1644364	1		&			
ANR	1645185	UnaryOperationExpression	- src2w		1644364	0					
ANR	1645186	UnaryOperator	-		1644364	0					
ANR	1645187	Identifier	src2w		1644364	1					
ANR	1645188	PrimaryExpression	0xffffffff		1644364	1					
ANR	1645189	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM4 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1546:4:51267:51358	1644364	1	True				
ANR	1645190	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM4 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1644364	0					
ANR	1645191	Callee	emit_op		1644364	0					
ANR	1645192	Identifier	emit_op		1644364	0					
ANR	1645193	ArgumentList	compiler		1644364	1					
ANR	1645194	Argument	compiler		1644364	0					
ANR	1645195	Identifier	compiler		1644364	0					
ANR	1645196	Argument	SLJIT_ADD		1644364	1					
ANR	1645197	Identifier	SLJIT_ADD		1644364	0					
ANR	1645198	Argument	flags | ALT_FORM4		1644364	2					
ANR	1645199	InclusiveOrExpression	flags | ALT_FORM4		1644364	0		|			
ANR	1645200	Identifier	flags		1644364	0					
ANR	1645201	Identifier	ALT_FORM4		1644364	1					
ANR	1645202	Argument	dst		1644364	3					
ANR	1645203	Identifier	dst		1644364	0					
ANR	1645204	Argument	dstw		1644364	4					
ANR	1645205	Identifier	dstw		1644364	0					
ANR	1645206	Argument	src1		1644364	5					
ANR	1645207	Identifier	src1		1644364	0					
ANR	1645208	Argument	src1w		1644364	6					
ANR	1645209	Identifier	src1w		1644364	0					
ANR	1645210	Argument	TMP_REG2		1644364	7					
ANR	1645211	Identifier	TMP_REG2		1644364	0					
ANR	1645212	Argument	0		1644364	8					
ANR	1645213	PrimaryExpression	0		1644364	0					
ANR	1645214	IfStatement	if ( dst == SLJIT_UNUSED && ( op & ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S ) ) && ! ( op & ( SLJIT_SET_O | SLJIT_SET_C ) ) )		1644364	8					
ANR	1645215	Condition	dst == SLJIT_UNUSED && ( op & ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S ) ) && ! ( op & ( SLJIT_SET_O | SLJIT_SET_C ) )	1549:6:51375:51484	1644364	0	True				
ANR	1645216	AndExpression	dst == SLJIT_UNUSED && ( op & ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S ) ) && ! ( op & ( SLJIT_SET_O | SLJIT_SET_C ) )		1644364	0		&&			
ANR	1645217	EqualityExpression	dst == SLJIT_UNUSED		1644364	0		==			
ANR	1645218	Identifier	dst		1644364	0					
ANR	1645219	Identifier	SLJIT_UNUSED		1644364	1					
ANR	1645220	AndExpression	( op & ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S ) ) && ! ( op & ( SLJIT_SET_O | SLJIT_SET_C ) )		1644364	1		&&			
ANR	1645221	BitAndExpression	op & ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S )		1644364	0		&			
ANR	1645222	Identifier	op		1644364	0					
ANR	1645223	InclusiveOrExpression	SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S		1644364	1		|			
ANR	1645224	Identifier	SLJIT_SET_E		1644364	0					
ANR	1645225	InclusiveOrExpression	SLJIT_SET_U | SLJIT_SET_S		1644364	1		|			
ANR	1645226	Identifier	SLJIT_SET_U		1644364	0					
ANR	1645227	Identifier	SLJIT_SET_S		1644364	1					
ANR	1645228	UnaryOperationExpression	! ( op & ( SLJIT_SET_O | SLJIT_SET_C ) )		1644364	1					
ANR	1645229	UnaryOperator	!		1644364	0					
ANR	1645230	BitAndExpression	op & ( SLJIT_SET_O | SLJIT_SET_C )		1644364	1		&			
ANR	1645231	Identifier	op		1644364	0					
ANR	1645232	InclusiveOrExpression	SLJIT_SET_O | SLJIT_SET_C		1644364	1		|			
ANR	1645233	Identifier	SLJIT_SET_O		1644364	0					
ANR	1645234	Identifier	SLJIT_SET_C		1644364	1					
ANR	1645235	CompoundStatement		96:118:3663:3663	1644364	1					
ANR	1645236	IfStatement	if ( ! ( op & SLJIT_SET_U ) )		1644364	0					
ANR	1645237	Condition	! ( op & SLJIT_SET_U )	1550:7:51496:51514	1644364	0	True				
ANR	1645238	UnaryOperationExpression	! ( op & SLJIT_SET_U )		1644364	0					
ANR	1645239	UnaryOperator	!		1644364	0					
ANR	1645240	BitAndExpression	op & SLJIT_SET_U		1644364	1		&			
ANR	1645241	Identifier	op		1644364	0					
ANR	1645242	Identifier	SLJIT_SET_U		1644364	1					
ANR	1645243	CompoundStatement		97:28:3693:3693	1644364	1					
ANR	1645244	IfStatement	"if ( TEST_SL_IMM ( src2 , src2w ) )"		1644364	0					
ANR	1645245	Condition	"TEST_SL_IMM ( src2 , src2w )"	1552:8:51609:51632	1644364	0	True				
ANR	1645246	CallExpression	"TEST_SL_IMM ( src2 , src2w )"		1644364	0					
ANR	1645247	Callee	TEST_SL_IMM		1644364	0					
ANR	1645248	Identifier	TEST_SL_IMM		1644364	0					
ANR	1645249	ArgumentList	src2		1644364	1					
ANR	1645250	Argument	src2		1644364	0					
ANR	1645251	Identifier	src2		1644364	0					
ANR	1645252	Argument	src2w		1644364	1					
ANR	1645253	Identifier	src2w		1644364	0					
ANR	1645254	CompoundStatement		99:34:3811:3811	1644364	1					
ANR	1645255	ExpressionStatement	compiler -> imm = src2w & 0xffff	1553:5:51642:51672	1644364	0	True				
ANR	1645256	AssignmentExpression	compiler -> imm = src2w & 0xffff		1644364	0		=			
ANR	1645257	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1645258	Identifier	compiler		1644364	0					
ANR	1645259	Identifier	imm		1644364	1					
ANR	1645260	BitAndExpression	src2w & 0xffff		1644364	1		&			
ANR	1645261	Identifier	src2w		1644364	0					
ANR	1645262	PrimaryExpression	0xffff		1644364	1					
ANR	1645263	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM2 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1554:5:51679:51770	1644364	1	True				
ANR	1645264	CallExpression	"emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM2 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1644364	0					
ANR	1645265	Callee	emit_op		1644364	0					
ANR	1645266	Identifier	emit_op		1644364	0					
ANR	1645267	ArgumentList	compiler		1644364	1					
ANR	1645268	Argument	compiler		1644364	0					
ANR	1645269	Identifier	compiler		1644364	0					
ANR	1645270	Argument	SLJIT_SUB		1644364	1					
ANR	1645271	Identifier	SLJIT_SUB		1644364	0					
ANR	1645272	Argument	flags | ALT_FORM2		1644364	2					
ANR	1645273	InclusiveOrExpression	flags | ALT_FORM2		1644364	0		|			
ANR	1645274	Identifier	flags		1644364	0					
ANR	1645275	Identifier	ALT_FORM2		1644364	1					
ANR	1645276	Argument	dst		1644364	3					
ANR	1645277	Identifier	dst		1644364	0					
ANR	1645278	Argument	dstw		1644364	4					
ANR	1645279	Identifier	dstw		1644364	0					
ANR	1645280	Argument	src1		1644364	5					
ANR	1645281	Identifier	src1		1644364	0					
ANR	1645282	Argument	src1w		1644364	6					
ANR	1645283	Identifier	src1w		1644364	0					
ANR	1645284	Argument	TMP_REG2		1644364	7					
ANR	1645285	Identifier	TMP_REG2		1644364	0					
ANR	1645286	Argument	0		1644364	8					
ANR	1645287	PrimaryExpression	0		1644364	0					
ANR	1645288	IfStatement	"if ( GET_FLAGS ( op ) == SLJIT_SET_E && TEST_SL_IMM ( src1 , src1w ) )"		1644364	1					
ANR	1645289	Condition	"GET_FLAGS ( op ) == SLJIT_SET_E && TEST_SL_IMM ( src1 , src1w )"	1556:8:51786:51841	1644364	0	True				
ANR	1645290	AndExpression	"GET_FLAGS ( op ) == SLJIT_SET_E && TEST_SL_IMM ( src1 , src1w )"		1644364	0		&&			
ANR	1645291	EqualityExpression	GET_FLAGS ( op ) == SLJIT_SET_E		1644364	0		==			
ANR	1645292	CallExpression	GET_FLAGS ( op )		1644364	0					
ANR	1645293	Callee	GET_FLAGS		1644364	0					
ANR	1645294	Identifier	GET_FLAGS		1644364	0					
ANR	1645295	ArgumentList	op		1644364	1					
ANR	1645296	Argument	op		1644364	0					
ANR	1645297	Identifier	op		1644364	0					
ANR	1645298	Identifier	SLJIT_SET_E		1644364	1					
ANR	1645299	CallExpression	"TEST_SL_IMM ( src1 , src1w )"		1644364	1					
ANR	1645300	Callee	TEST_SL_IMM		1644364	0					
ANR	1645301	Identifier	TEST_SL_IMM		1644364	0					
ANR	1645302	ArgumentList	src1		1644364	1					
ANR	1645303	Argument	src1		1644364	0					
ANR	1645304	Identifier	src1		1644364	0					
ANR	1645305	Argument	src1w		1644364	1					
ANR	1645306	Identifier	src1w		1644364	0					
ANR	1645307	CompoundStatement		103:66:4020:4020	1644364	1					
ANR	1645308	ExpressionStatement	compiler -> imm = src1w & 0xffff	1557:5:51851:51881	1644364	0	True				
ANR	1645309	AssignmentExpression	compiler -> imm = src1w & 0xffff		1644364	0		=			
ANR	1645310	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1645311	Identifier	compiler		1644364	0					
ANR	1645312	Identifier	imm		1644364	1					
ANR	1645313	BitAndExpression	src1w & 0xffff		1644364	1		&			
ANR	1645314	Identifier	src1w		1644364	0					
ANR	1645315	PrimaryExpression	0xffff		1644364	1					
ANR	1645316	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM2 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1558:5:51888:51979	1644364	1	True				
ANR	1645317	CallExpression	"emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM2 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1644364	0					
ANR	1645318	Callee	emit_op		1644364	0					
ANR	1645319	Identifier	emit_op		1644364	0					
ANR	1645320	ArgumentList	compiler		1644364	1					
ANR	1645321	Argument	compiler		1644364	0					
ANR	1645322	Identifier	compiler		1644364	0					
ANR	1645323	Argument	SLJIT_SUB		1644364	1					
ANR	1645324	Identifier	SLJIT_SUB		1644364	0					
ANR	1645325	Argument	flags | ALT_FORM2		1644364	2					
ANR	1645326	InclusiveOrExpression	flags | ALT_FORM2		1644364	0		|			
ANR	1645327	Identifier	flags		1644364	0					
ANR	1645328	Identifier	ALT_FORM2		1644364	1					
ANR	1645329	Argument	dst		1644364	3					
ANR	1645330	Identifier	dst		1644364	0					
ANR	1645331	Argument	dstw		1644364	4					
ANR	1645332	Identifier	dstw		1644364	0					
ANR	1645333	Argument	src2		1644364	5					
ANR	1645334	Identifier	src2		1644364	0					
ANR	1645335	Argument	src2w		1644364	6					
ANR	1645336	Identifier	src2w		1644364	0					
ANR	1645337	Argument	TMP_REG2		1644364	7					
ANR	1645338	Identifier	TMP_REG2		1644364	0					
ANR	1645339	Argument	0		1644364	8					
ANR	1645340	PrimaryExpression	0		1644364	0					
ANR	1645341	IfStatement	if ( ! ( op & ( SLJIT_SET_E | SLJIT_SET_S ) ) )		1644364	1					
ANR	1645342	Condition	! ( op & ( SLJIT_SET_E | SLJIT_SET_S ) )	1561:7:51999:52033	1644364	0	True				
ANR	1645343	UnaryOperationExpression	! ( op & ( SLJIT_SET_E | SLJIT_SET_S ) )		1644364	0					
ANR	1645344	UnaryOperator	!		1644364	0					
ANR	1645345	BitAndExpression	op & ( SLJIT_SET_E | SLJIT_SET_S )		1644364	1		&			
ANR	1645346	Identifier	op		1644364	0					
ANR	1645347	InclusiveOrExpression	SLJIT_SET_E | SLJIT_SET_S		1644364	1		|			
ANR	1645348	Identifier	SLJIT_SET_E		1644364	0					
ANR	1645349	Identifier	SLJIT_SET_S		1644364	1					
ANR	1645350	CompoundStatement		108:44:4212:4212	1644364	1					
ANR	1645351	IfStatement	"if ( TEST_UL_IMM ( src2 , src2w ) )"		1644364	0					
ANR	1645352	Condition	"TEST_UL_IMM ( src2 , src2w )"	1563:8:52128:52151	1644364	0	True				
ANR	1645353	CallExpression	"TEST_UL_IMM ( src2 , src2w )"		1644364	0					
ANR	1645354	Callee	TEST_UL_IMM		1644364	0					
ANR	1645355	Identifier	TEST_UL_IMM		1644364	0					
ANR	1645356	ArgumentList	src2		1644364	1					
ANR	1645357	Argument	src2		1644364	0					
ANR	1645358	Identifier	src2		1644364	0					
ANR	1645359	Argument	src2w		1644364	1					
ANR	1645360	Identifier	src2w		1644364	0					
ANR	1645361	CompoundStatement		110:34:4330:4330	1644364	1					
ANR	1645362	ExpressionStatement	compiler -> imm = src2w & 0xffff	1564:5:52161:52191	1644364	0	True				
ANR	1645363	AssignmentExpression	compiler -> imm = src2w & 0xffff		1644364	0		=			
ANR	1645364	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1645365	Identifier	compiler		1644364	0					
ANR	1645366	Identifier	imm		1644364	1					
ANR	1645367	BitAndExpression	src2w & 0xffff		1644364	1		&			
ANR	1645368	Identifier	src2w		1644364	0					
ANR	1645369	PrimaryExpression	0xffff		1644364	1					
ANR	1645370	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1565:5:52198:52289	1644364	1	True				
ANR	1645371	CallExpression	"emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1644364	0					
ANR	1645372	Callee	emit_op		1644364	0					
ANR	1645373	Identifier	emit_op		1644364	0					
ANR	1645374	ArgumentList	compiler		1644364	1					
ANR	1645375	Argument	compiler		1644364	0					
ANR	1645376	Identifier	compiler		1644364	0					
ANR	1645377	Argument	SLJIT_SUB		1644364	1					
ANR	1645378	Identifier	SLJIT_SUB		1644364	0					
ANR	1645379	Argument	flags | ALT_FORM3		1644364	2					
ANR	1645380	InclusiveOrExpression	flags | ALT_FORM3		1644364	0		|			
ANR	1645381	Identifier	flags		1644364	0					
ANR	1645382	Identifier	ALT_FORM3		1644364	1					
ANR	1645383	Argument	dst		1644364	3					
ANR	1645384	Identifier	dst		1644364	0					
ANR	1645385	Argument	dstw		1644364	4					
ANR	1645386	Identifier	dstw		1644364	0					
ANR	1645387	Argument	src1		1644364	5					
ANR	1645388	Identifier	src1		1644364	0					
ANR	1645389	Argument	src1w		1644364	6					
ANR	1645390	Identifier	src1w		1644364	0					
ANR	1645391	Argument	TMP_REG2		1644364	7					
ANR	1645392	Identifier	TMP_REG2		1644364	0					
ANR	1645393	Argument	0		1644364	8					
ANR	1645394	PrimaryExpression	0		1644364	0					
ANR	1645395	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM4 , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1567:4:52301:52392	1644364	1	True				
ANR	1645396	CallExpression	"emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM4 , dst , dstw , src1 , src1w , src2 , src2w )"		1644364	0					
ANR	1645397	Callee	emit_op		1644364	0					
ANR	1645398	Identifier	emit_op		1644364	0					
ANR	1645399	ArgumentList	compiler		1644364	1					
ANR	1645400	Argument	compiler		1644364	0					
ANR	1645401	Identifier	compiler		1644364	0					
ANR	1645402	Argument	SLJIT_SUB		1644364	1					
ANR	1645403	Identifier	SLJIT_SUB		1644364	0					
ANR	1645404	Argument	flags | ALT_FORM4		1644364	2					
ANR	1645405	InclusiveOrExpression	flags | ALT_FORM4		1644364	0		|			
ANR	1645406	Identifier	flags		1644364	0					
ANR	1645407	Identifier	ALT_FORM4		1644364	1					
ANR	1645408	Argument	dst		1644364	3					
ANR	1645409	Identifier	dst		1644364	0					
ANR	1645410	Argument	dstw		1644364	4					
ANR	1645411	Identifier	dstw		1644364	0					
ANR	1645412	Argument	src1		1644364	5					
ANR	1645413	Identifier	src1		1644364	0					
ANR	1645414	Argument	src1w		1644364	6					
ANR	1645415	Identifier	src1w		1644364	0					
ANR	1645416	Argument	src2		1644364	7					
ANR	1645417	Identifier	src2		1644364	0					
ANR	1645418	Argument	src2w		1644364	8					
ANR	1645419	Identifier	src2w		1644364	0					
ANR	1645420	IfStatement	if ( ( src2 & SLJIT_IMM ) && src2w >= 0 && src2w <= 0x7fff )		1644364	2					
ANR	1645421	Condition	( src2 & SLJIT_IMM ) && src2w >= 0 && src2w <= 0x7fff	1569:7:52406:52456	1644364	0	True				
ANR	1645422	AndExpression	( src2 & SLJIT_IMM ) && src2w >= 0 && src2w <= 0x7fff		1644364	0		&&			
ANR	1645423	BitAndExpression	src2 & SLJIT_IMM		1644364	0		&			
ANR	1645424	Identifier	src2		1644364	0					
ANR	1645425	Identifier	SLJIT_IMM		1644364	1					
ANR	1645426	AndExpression	src2w >= 0 && src2w <= 0x7fff		1644364	1		&&			
ANR	1645427	RelationalExpression	src2w >= 0		1644364	0		>=			
ANR	1645428	Identifier	src2w		1644364	0					
ANR	1645429	PrimaryExpression	0		1644364	1					
ANR	1645430	RelationalExpression	src2w <= 0x7fff		1644364	1		<=			
ANR	1645431	Identifier	src2w		1644364	0					
ANR	1645432	PrimaryExpression	0x7fff		1644364	1					
ANR	1645433	CompoundStatement		116:60:4635:4635	1644364	1					
ANR	1645434	ExpressionStatement	compiler -> imm = src2w	1570:4:52465:52486	1644364	0	True				
ANR	1645435	AssignmentExpression	compiler -> imm = src2w		1644364	0		=			
ANR	1645436	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1645437	Identifier	compiler		1644364	0					
ANR	1645438	Identifier	imm		1644364	1					
ANR	1645439	Identifier	src2w		1644364	1					
ANR	1645440	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM2 | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1571:4:52492:52595	1644364	1	True				
ANR	1645441	CallExpression	"emit_op ( compiler , SLJIT_SUB , flags | ALT_FORM2 | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1644364	0					
ANR	1645442	Callee	emit_op		1644364	0					
ANR	1645443	Identifier	emit_op		1644364	0					
ANR	1645444	ArgumentList	compiler		1644364	1					
ANR	1645445	Argument	compiler		1644364	0					
ANR	1645446	Identifier	compiler		1644364	0					
ANR	1645447	Argument	SLJIT_SUB		1644364	1					
ANR	1645448	Identifier	SLJIT_SUB		1644364	0					
ANR	1645449	Argument	flags | ALT_FORM2 | ALT_FORM3		1644364	2					
ANR	1645450	InclusiveOrExpression	flags | ALT_FORM2 | ALT_FORM3		1644364	0		|			
ANR	1645451	Identifier	flags		1644364	0					
ANR	1645452	InclusiveOrExpression	ALT_FORM2 | ALT_FORM3		1644364	1		|			
ANR	1645453	Identifier	ALT_FORM2		1644364	0					
ANR	1645454	Identifier	ALT_FORM3		1644364	1					
ANR	1645455	Argument	dst		1644364	3					
ANR	1645456	Identifier	dst		1644364	0					
ANR	1645457	Argument	dstw		1644364	4					
ANR	1645458	Identifier	dstw		1644364	0					
ANR	1645459	Argument	src1		1644364	5					
ANR	1645460	Identifier	src1		1644364	0					
ANR	1645461	Argument	src1w		1644364	6					
ANR	1645462	Identifier	src1w		1644364	0					
ANR	1645463	Argument	TMP_REG2		1644364	7					
ANR	1645464	Identifier	TMP_REG2		1644364	0					
ANR	1645465	Argument	0		1644364	8					
ANR	1645466	PrimaryExpression	0		1644364	0					
ANR	1645467	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB , flags | ( ( op & SLJIT_SET_U ) ? ALT_FORM4 : 0 ) | ( ( op & ( SLJIT_SET_E | SLJIT_SET_S ) ) ? ALT_FORM5 : 0 ) , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1573:3:52605:52778	1644364	3	True				
ANR	1645468	CallExpression	"emit_op ( compiler , SLJIT_SUB , flags | ( ( op & SLJIT_SET_U ) ? ALT_FORM4 : 0 ) | ( ( op & ( SLJIT_SET_E | SLJIT_SET_S ) ) ? ALT_FORM5 : 0 ) , dst , dstw , src1 , src1w , src2 , src2w )"		1644364	0					
ANR	1645469	Callee	emit_op		1644364	0					
ANR	1645470	Identifier	emit_op		1644364	0					
ANR	1645471	ArgumentList	compiler		1644364	1					
ANR	1645472	Argument	compiler		1644364	0					
ANR	1645473	Identifier	compiler		1644364	0					
ANR	1645474	Argument	SLJIT_SUB		1644364	1					
ANR	1645475	Identifier	SLJIT_SUB		1644364	0					
ANR	1645476	Argument	flags | ( ( op & SLJIT_SET_U ) ? ALT_FORM4 : 0 ) | ( ( op & ( SLJIT_SET_E | SLJIT_SET_S ) ) ? ALT_FORM5 : 0 )		1644364	2					
ANR	1645477	InclusiveOrExpression	flags | ( ( op & SLJIT_SET_U ) ? ALT_FORM4 : 0 ) | ( ( op & ( SLJIT_SET_E | SLJIT_SET_S ) ) ? ALT_FORM5 : 0 )		1644364	0		|			
ANR	1645478	Identifier	flags		1644364	0					
ANR	1645479	InclusiveOrExpression	( ( op & SLJIT_SET_U ) ? ALT_FORM4 : 0 ) | ( ( op & ( SLJIT_SET_E | SLJIT_SET_S ) ) ? ALT_FORM5 : 0 )		1644364	1		|			
ANR	1645480	ConditionalExpression	( op & SLJIT_SET_U ) ? ALT_FORM4 : 0		1644364	0					
ANR	1645481	Condition	op & SLJIT_SET_U		1644364	0					
ANR	1645482	BitAndExpression	op & SLJIT_SET_U		1644364	0		&			
ANR	1645483	Identifier	op		1644364	0					
ANR	1645484	Identifier	SLJIT_SET_U		1644364	1					
ANR	1645485	Identifier	ALT_FORM4		1644364	1					
ANR	1645486	PrimaryExpression	0		1644364	2					
ANR	1645487	ConditionalExpression	( op & ( SLJIT_SET_E | SLJIT_SET_S ) ) ? ALT_FORM5 : 0		1644364	1					
ANR	1645488	Condition	op & ( SLJIT_SET_E | SLJIT_SET_S )		1644364	0					
ANR	1645489	BitAndExpression	op & ( SLJIT_SET_E | SLJIT_SET_S )		1644364	0		&			
ANR	1645490	Identifier	op		1644364	0					
ANR	1645491	InclusiveOrExpression	SLJIT_SET_E | SLJIT_SET_S		1644364	1		|			
ANR	1645492	Identifier	SLJIT_SET_E		1644364	0					
ANR	1645493	Identifier	SLJIT_SET_S		1644364	1					
ANR	1645494	Identifier	ALT_FORM5		1644364	1					
ANR	1645495	PrimaryExpression	0		1644364	2					
ANR	1645496	Argument	dst		1644364	3					
ANR	1645497	Identifier	dst		1644364	0					
ANR	1645498	Argument	dstw		1644364	4					
ANR	1645499	Identifier	dstw		1644364	0					
ANR	1645500	Argument	src1		1644364	5					
ANR	1645501	Identifier	src1		1644364	0					
ANR	1645502	Argument	src1w		1644364	6					
ANR	1645503	Identifier	src1w		1644364	0					
ANR	1645504	Argument	src2		1644364	7					
ANR	1645505	Identifier	src2		1644364	0					
ANR	1645506	Argument	src2w		1644364	8					
ANR	1645507	Identifier	src2w		1644364	0					
ANR	1645508	IfStatement	if ( ! ( op & ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_O ) ) )		1644364	9					
ANR	1645509	Condition	! ( op & ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_O ) )	1575:6:52790:52852	1644364	0	True				
ANR	1645510	UnaryOperationExpression	! ( op & ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_O ) )		1644364	0					
ANR	1645511	UnaryOperator	!		1644364	0					
ANR	1645512	BitAndExpression	op & ( SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_O )		1644364	1		&			
ANR	1645513	Identifier	op		1644364	0					
ANR	1645514	InclusiveOrExpression	SLJIT_SET_E | SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_O		1644364	1		|			
ANR	1645515	Identifier	SLJIT_SET_E		1644364	0					
ANR	1645516	InclusiveOrExpression	SLJIT_SET_U | SLJIT_SET_S | SLJIT_SET_O		1644364	1		|			
ANR	1645517	Identifier	SLJIT_SET_U		1644364	0					
ANR	1645518	InclusiveOrExpression	SLJIT_SET_S | SLJIT_SET_O		1644364	1		|			
ANR	1645519	Identifier	SLJIT_SET_S		1644364	0					
ANR	1645520	Identifier	SLJIT_SET_O		1644364	1					
ANR	1645521	CompoundStatement		122:71:5031:5031	1644364	1					
ANR	1645522	IfStatement	"if ( TEST_SL_IMM ( src2 , - src2w ) )"		1644364	0					
ANR	1645523	Condition	"TEST_SL_IMM ( src2 , - src2w )"	1576:7:52864:52888	1644364	0	True				
ANR	1645524	CallExpression	"TEST_SL_IMM ( src2 , - src2w )"		1644364	0					
ANR	1645525	Callee	TEST_SL_IMM		1644364	0					
ANR	1645526	Identifier	TEST_SL_IMM		1644364	0					
ANR	1645527	ArgumentList	src2		1644364	1					
ANR	1645528	Argument	src2		1644364	0					
ANR	1645529	Identifier	src2		1644364	0					
ANR	1645530	Argument	- src2w		1644364	1					
ANR	1645531	UnaryOperationExpression	- src2w		1644364	0					
ANR	1645532	UnaryOperator	-		1644364	0					
ANR	1645533	Identifier	src2w		1644364	1					
ANR	1645534	CompoundStatement		123:34:5067:5067	1644364	1					
ANR	1645535	ExpressionStatement	compiler -> imm = ( - src2w ) & 0xffff	1577:4:52897:52930	1644364	0	True				
ANR	1645536	AssignmentExpression	compiler -> imm = ( - src2w ) & 0xffff		1644364	0		=			
ANR	1645537	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1645538	Identifier	compiler		1644364	0					
ANR	1645539	Identifier	imm		1644364	1					
ANR	1645540	BitAndExpression	( - src2w ) & 0xffff		1644364	1		&			
ANR	1645541	UnaryOperationExpression	- src2w		1644364	0					
ANR	1645542	UnaryOperator	-		1644364	0					
ANR	1645543	Identifier	src2w		1644364	1					
ANR	1645544	PrimaryExpression	0xffff		1644364	1					
ANR	1645545	ReturnStatement	"return emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1578:4:52936:53027	1644364	1	True				
ANR	1645546	CallExpression	"emit_op ( compiler , SLJIT_ADD , flags | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1644364	0					
ANR	1645547	Callee	emit_op		1644364	0					
ANR	1645548	Identifier	emit_op		1644364	0					
ANR	1645549	ArgumentList	compiler		1644364	1					
ANR	1645550	Argument	compiler		1644364	0					
ANR	1645551	Identifier	compiler		1644364	0					
ANR	1645552	Argument	SLJIT_ADD		1644364	1					
ANR	1645553	Identifier	SLJIT_ADD		1644364	0					
ANR	1645554	Argument	flags | ALT_FORM3		1644364	2					
ANR	1645555	InclusiveOrExpression	flags | ALT_FORM3		1644364	0		|			
ANR	1645556	Identifier	flags		1644364	0					
ANR	1645557	Identifier	ALT_FORM3		1644364	1					
ANR	1645558	Argument	dst		1644364	3					
ANR	1645559	Identifier	dst		1644364	0					
ANR	1645560	Argument	dstw		1644364	4					
ANR	1645561	Identifier	dstw		1644364	0					
ANR	1645562	Argument	src1		1644364	5					
ANR	1645563	Identifier	src1		1644364	0					
ANR	1645564	Argument	src1w		1644364	6					
ANR	1645565	Identifier	src1w		1644364	0					
ANR	1645566	Argument	TMP_REG2		1644364	7					
ANR	1645567	Identifier	TMP_REG2		1644364	0					
ANR	1645568	Argument	0		1644364	8					
ANR	1645569	PrimaryExpression	0		1644364	0					
ANR	1645570	ReturnStatement	"return emit_op ( compiler , SLJIT_SUB , flags | ( ! ( op & SLJIT_SET_U ) ? 0 : ALT_FORM6 ) , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1582:2:53120:53239	1644364	10	True				
ANR	1645571	CallExpression	"emit_op ( compiler , SLJIT_SUB , flags | ( ! ( op & SLJIT_SET_U ) ? 0 : ALT_FORM6 ) , dst , dstw , src1 , src1w , src2 , src2w )"		1644364	0					
ANR	1645572	Callee	emit_op		1644364	0					
ANR	1645573	Identifier	emit_op		1644364	0					
ANR	1645574	ArgumentList	compiler		1644364	1					
ANR	1645575	Argument	compiler		1644364	0					
ANR	1645576	Identifier	compiler		1644364	0					
ANR	1645577	Argument	SLJIT_SUB		1644364	1					
ANR	1645578	Identifier	SLJIT_SUB		1644364	0					
ANR	1645579	Argument	flags | ( ! ( op & SLJIT_SET_U ) ? 0 : ALT_FORM6 )		1644364	2					
ANR	1645580	InclusiveOrExpression	flags | ( ! ( op & SLJIT_SET_U ) ? 0 : ALT_FORM6 )		1644364	0		|			
ANR	1645581	Identifier	flags		1644364	0					
ANR	1645582	ConditionalExpression	! ( op & SLJIT_SET_U ) ? 0 : ALT_FORM6		1644364	1					
ANR	1645583	Condition	! ( op & SLJIT_SET_U )		1644364	0					
ANR	1645584	UnaryOperationExpression	! ( op & SLJIT_SET_U )		1644364	0					
ANR	1645585	UnaryOperator	!		1644364	0					
ANR	1645586	BitAndExpression	op & SLJIT_SET_U		1644364	1		&			
ANR	1645587	Identifier	op		1644364	0					
ANR	1645588	Identifier	SLJIT_SET_U		1644364	1					
ANR	1645589	PrimaryExpression	0		1644364	1					
ANR	1645590	Identifier	ALT_FORM6		1644364	2					
ANR	1645591	Argument	dst		1644364	3					
ANR	1645592	Identifier	dst		1644364	0					
ANR	1645593	Argument	dstw		1644364	4					
ANR	1645594	Identifier	dstw		1644364	0					
ANR	1645595	Argument	src1		1644364	5					
ANR	1645596	Identifier	src1		1644364	0					
ANR	1645597	Argument	src1w		1644364	6					
ANR	1645598	Identifier	src1w		1644364	0					
ANR	1645599	Argument	src2		1644364	7					
ANR	1645600	Identifier	src2		1644364	0					
ANR	1645601	Argument	src2w		1644364	8					
ANR	1645602	Identifier	src2w		1644364	0					
ANR	1645603	Label	case SLJIT_SUBC :	1584:1:53243:53258	1644364	11	True				
ANR	1645604	Identifier	SLJIT_SUBC		1644364	0					
ANR	1645605	ReturnStatement	"return emit_op ( compiler , SLJIT_SUBC , flags | ( ! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1 ) , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1585:2:53262:53387	1644364	12	True				
ANR	1645606	CallExpression	"emit_op ( compiler , SLJIT_SUBC , flags | ( ! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1 ) , dst , dstw , src1 , src1w , src2 , src2w )"		1644364	0					
ANR	1645607	Callee	emit_op		1644364	0					
ANR	1645608	Identifier	emit_op		1644364	0					
ANR	1645609	ArgumentList	compiler		1644364	1					
ANR	1645610	Argument	compiler		1644364	0					
ANR	1645611	Identifier	compiler		1644364	0					
ANR	1645612	Argument	SLJIT_SUBC		1644364	1					
ANR	1645613	Identifier	SLJIT_SUBC		1644364	0					
ANR	1645614	Argument	flags | ( ! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1 )		1644364	2					
ANR	1645615	InclusiveOrExpression	flags | ( ! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1 )		1644364	0		|			
ANR	1645616	Identifier	flags		1644364	0					
ANR	1645617	ConditionalExpression	! ( op & SLJIT_KEEP_FLAGS ) ? 0 : ALT_FORM1		1644364	1					
ANR	1645618	Condition	! ( op & SLJIT_KEEP_FLAGS )		1644364	0					
ANR	1645619	UnaryOperationExpression	! ( op & SLJIT_KEEP_FLAGS )		1644364	0					
ANR	1645620	UnaryOperator	!		1644364	0					
ANR	1645621	BitAndExpression	op & SLJIT_KEEP_FLAGS		1644364	1		&			
ANR	1645622	Identifier	op		1644364	0					
ANR	1645623	Identifier	SLJIT_KEEP_FLAGS		1644364	1					
ANR	1645624	PrimaryExpression	0		1644364	1					
ANR	1645625	Identifier	ALT_FORM1		1644364	2					
ANR	1645626	Argument	dst		1644364	3					
ANR	1645627	Identifier	dst		1644364	0					
ANR	1645628	Argument	dstw		1644364	4					
ANR	1645629	Identifier	dstw		1644364	0					
ANR	1645630	Argument	src1		1644364	5					
ANR	1645631	Identifier	src1		1644364	0					
ANR	1645632	Argument	src1w		1644364	6					
ANR	1645633	Identifier	src1w		1644364	0					
ANR	1645634	Argument	src2		1644364	7					
ANR	1645635	Identifier	src2		1644364	0					
ANR	1645636	Argument	src2w		1644364	8					
ANR	1645637	Identifier	src2w		1644364	0					
ANR	1645638	Label	case SLJIT_MUL :	1587:1:53391:53405	1644364	13	True				
ANR	1645639	Identifier	SLJIT_MUL		1644364	0					
ANR	1645640	IfStatement	if ( op & SLJIT_INT_OP )		1644364	14					
ANR	1645641	Condition	op & SLJIT_INT_OP	1589:6:53470:53486	1644364	0	True				
ANR	1645642	BitAndExpression	op & SLJIT_INT_OP		1644364	0		&			
ANR	1645643	Identifier	op		1644364	0					
ANR	1645644	Identifier	SLJIT_INT_OP		1644364	1					
ANR	1645645	ExpressionStatement	flags |= ALT_FORM2	1590:3:53492:53510	1644364	1	True				
ANR	1645646	AssignmentExpression	flags |= ALT_FORM2		1644364	0		|=			
ANR	1645647	Identifier	flags		1644364	0					
ANR	1645648	Identifier	ALT_FORM2		1644364	1					
ANR	1645649	IfStatement	if ( ! GET_FLAGS ( op ) )		1644364	15					
ANR	1645650	Condition	! GET_FLAGS ( op )	1592:6:53525:53538	1644364	0	True				
ANR	1645651	UnaryOperationExpression	! GET_FLAGS ( op )		1644364	0					
ANR	1645652	UnaryOperator	!		1644364	0					
ANR	1645653	CallExpression	GET_FLAGS ( op )		1644364	1					
ANR	1645654	Callee	GET_FLAGS		1644364	0					
ANR	1645655	Identifier	GET_FLAGS		1644364	0					
ANR	1645656	ArgumentList	op		1644364	1					
ANR	1645657	Argument	op		1644364	0					
ANR	1645658	Identifier	op		1644364	0					
ANR	1645659	CompoundStatement		139:22:5717:5717	1644364	1					
ANR	1645660	IfStatement	"if ( TEST_SL_IMM ( src2 , src2w ) )"		1644364	0					
ANR	1645661	Condition	"TEST_SL_IMM ( src2 , src2w )"	1593:7:53550:53573	1644364	0	True				
ANR	1645662	CallExpression	"TEST_SL_IMM ( src2 , src2w )"		1644364	0					
ANR	1645663	Callee	TEST_SL_IMM		1644364	0					
ANR	1645664	Identifier	TEST_SL_IMM		1644364	0					
ANR	1645665	ArgumentList	src2		1644364	1					
ANR	1645666	Argument	src2		1644364	0					
ANR	1645667	Identifier	src2		1644364	0					
ANR	1645668	Argument	src2w		1644364	1					
ANR	1645669	Identifier	src2w		1644364	0					
ANR	1645670	CompoundStatement		140:33:5752:5752	1644364	1					
ANR	1645671	ExpressionStatement	compiler -> imm = src2w & 0xffff	1594:4:53582:53612	1644364	0	True				
ANR	1645672	AssignmentExpression	compiler -> imm = src2w & 0xffff		1644364	0		=			
ANR	1645673	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1645674	Identifier	compiler		1644364	0					
ANR	1645675	Identifier	imm		1644364	1					
ANR	1645676	BitAndExpression	src2w & 0xffff		1644364	1		&			
ANR	1645677	Identifier	src2w		1644364	0					
ANR	1645678	PrimaryExpression	0xffff		1644364	1					
ANR	1645679	ReturnStatement	"return emit_op ( compiler , SLJIT_MUL , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1595:4:53618:53709	1644364	1	True				
ANR	1645680	CallExpression	"emit_op ( compiler , SLJIT_MUL , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1644364	0					
ANR	1645681	Callee	emit_op		1644364	0					
ANR	1645682	Identifier	emit_op		1644364	0					
ANR	1645683	ArgumentList	compiler		1644364	1					
ANR	1645684	Argument	compiler		1644364	0					
ANR	1645685	Identifier	compiler		1644364	0					
ANR	1645686	Argument	SLJIT_MUL		1644364	1					
ANR	1645687	Identifier	SLJIT_MUL		1644364	0					
ANR	1645688	Argument	flags | ALT_FORM1		1644364	2					
ANR	1645689	InclusiveOrExpression	flags | ALT_FORM1		1644364	0		|			
ANR	1645690	Identifier	flags		1644364	0					
ANR	1645691	Identifier	ALT_FORM1		1644364	1					
ANR	1645692	Argument	dst		1644364	3					
ANR	1645693	Identifier	dst		1644364	0					
ANR	1645694	Argument	dstw		1644364	4					
ANR	1645695	Identifier	dstw		1644364	0					
ANR	1645696	Argument	src1		1644364	5					
ANR	1645697	Identifier	src1		1644364	0					
ANR	1645698	Argument	src1w		1644364	6					
ANR	1645699	Identifier	src1w		1644364	0					
ANR	1645700	Argument	TMP_REG2		1644364	7					
ANR	1645701	Identifier	TMP_REG2		1644364	0					
ANR	1645702	Argument	0		1644364	8					
ANR	1645703	PrimaryExpression	0		1644364	0					
ANR	1645704	IfStatement	"if ( TEST_SL_IMM ( src1 , src1w ) )"		1644364	1					
ANR	1645705	Condition	"TEST_SL_IMM ( src1 , src1w )"	1597:7:53723:53746	1644364	0	True				
ANR	1645706	CallExpression	"TEST_SL_IMM ( src1 , src1w )"		1644364	0					
ANR	1645707	Callee	TEST_SL_IMM		1644364	0					
ANR	1645708	Identifier	TEST_SL_IMM		1644364	0					
ANR	1645709	ArgumentList	src1		1644364	1					
ANR	1645710	Argument	src1		1644364	0					
ANR	1645711	Identifier	src1		1644364	0					
ANR	1645712	Argument	src1w		1644364	1					
ANR	1645713	Identifier	src1w		1644364	0					
ANR	1645714	CompoundStatement		144:33:5925:5925	1644364	1					
ANR	1645715	ExpressionStatement	compiler -> imm = src1w & 0xffff	1598:4:53755:53785	1644364	0	True				
ANR	1645716	AssignmentExpression	compiler -> imm = src1w & 0xffff		1644364	0		=			
ANR	1645717	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1645718	Identifier	compiler		1644364	0					
ANR	1645719	Identifier	imm		1644364	1					
ANR	1645720	BitAndExpression	src1w & 0xffff		1644364	1		&			
ANR	1645721	Identifier	src1w		1644364	0					
ANR	1645722	PrimaryExpression	0xffff		1644364	1					
ANR	1645723	ReturnStatement	"return emit_op ( compiler , SLJIT_MUL , flags | ALT_FORM1 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1599:4:53791:53882	1644364	1	True				
ANR	1645724	CallExpression	"emit_op ( compiler , SLJIT_MUL , flags | ALT_FORM1 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1644364	0					
ANR	1645725	Callee	emit_op		1644364	0					
ANR	1645726	Identifier	emit_op		1644364	0					
ANR	1645727	ArgumentList	compiler		1644364	1					
ANR	1645728	Argument	compiler		1644364	0					
ANR	1645729	Identifier	compiler		1644364	0					
ANR	1645730	Argument	SLJIT_MUL		1644364	1					
ANR	1645731	Identifier	SLJIT_MUL		1644364	0					
ANR	1645732	Argument	flags | ALT_FORM1		1644364	2					
ANR	1645733	InclusiveOrExpression	flags | ALT_FORM1		1644364	0		|			
ANR	1645734	Identifier	flags		1644364	0					
ANR	1645735	Identifier	ALT_FORM1		1644364	1					
ANR	1645736	Argument	dst		1644364	3					
ANR	1645737	Identifier	dst		1644364	0					
ANR	1645738	Argument	dstw		1644364	4					
ANR	1645739	Identifier	dstw		1644364	0					
ANR	1645740	Argument	src2		1644364	5					
ANR	1645741	Identifier	src2		1644364	0					
ANR	1645742	Argument	src2w		1644364	6					
ANR	1645743	Identifier	src2w		1644364	0					
ANR	1645744	Argument	TMP_REG2		1644364	7					
ANR	1645745	Identifier	TMP_REG2		1644364	0					
ANR	1645746	Argument	0		1644364	8					
ANR	1645747	PrimaryExpression	0		1644364	0					
ANR	1645748	ReturnStatement	"return emit_op ( compiler , SLJIT_MUL , flags , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1602:2:53895:53974	1644364	16	True				
ANR	1645749	CallExpression	"emit_op ( compiler , SLJIT_MUL , flags , dst , dstw , src1 , src1w , src2 , src2w )"		1644364	0					
ANR	1645750	Callee	emit_op		1644364	0					
ANR	1645751	Identifier	emit_op		1644364	0					
ANR	1645752	ArgumentList	compiler		1644364	1					
ANR	1645753	Argument	compiler		1644364	0					
ANR	1645754	Identifier	compiler		1644364	0					
ANR	1645755	Argument	SLJIT_MUL		1644364	1					
ANR	1645756	Identifier	SLJIT_MUL		1644364	0					
ANR	1645757	Argument	flags		1644364	2					
ANR	1645758	Identifier	flags		1644364	0					
ANR	1645759	Argument	dst		1644364	3					
ANR	1645760	Identifier	dst		1644364	0					
ANR	1645761	Argument	dstw		1644364	4					
ANR	1645762	Identifier	dstw		1644364	0					
ANR	1645763	Argument	src1		1644364	5					
ANR	1645764	Identifier	src1		1644364	0					
ANR	1645765	Argument	src1w		1644364	6					
ANR	1645766	Identifier	src1w		1644364	0					
ANR	1645767	Argument	src2		1644364	7					
ANR	1645768	Identifier	src2		1644364	0					
ANR	1645769	Argument	src2w		1644364	8					
ANR	1645770	Identifier	src2w		1644364	0					
ANR	1645771	Label	case SLJIT_AND :	1604:1:53978:53992	1644364	17	True				
ANR	1645772	Identifier	SLJIT_AND		1644364	0					
ANR	1645773	Label	case SLJIT_OR :	1605:1:53995:54008	1644364	18	True				
ANR	1645774	Identifier	SLJIT_OR		1644364	0					
ANR	1645775	Label	case SLJIT_XOR :	1606:1:54011:54025	1644364	19	True				
ANR	1645776	Identifier	SLJIT_XOR		1644364	0					
ANR	1645777	IfStatement	if ( ! GET_FLAGS ( op ) || GET_OPCODE ( op ) == SLJIT_AND )		1644364	20					
ANR	1645778	Condition	! GET_FLAGS ( op ) || GET_OPCODE ( op ) == SLJIT_AND	1608:6:54074:54118	1644364	0	True				
ANR	1645779	OrExpression	! GET_FLAGS ( op ) || GET_OPCODE ( op ) == SLJIT_AND		1644364	0		||			
ANR	1645780	UnaryOperationExpression	! GET_FLAGS ( op )		1644364	0					
ANR	1645781	UnaryOperator	!		1644364	0					
ANR	1645782	CallExpression	GET_FLAGS ( op )		1644364	1					
ANR	1645783	Callee	GET_FLAGS		1644364	0					
ANR	1645784	Identifier	GET_FLAGS		1644364	0					
ANR	1645785	ArgumentList	op		1644364	1					
ANR	1645786	Argument	op		1644364	0					
ANR	1645787	Identifier	op		1644364	0					
ANR	1645788	EqualityExpression	GET_OPCODE ( op ) == SLJIT_AND		1644364	1		==			
ANR	1645789	CallExpression	GET_OPCODE ( op )		1644364	0					
ANR	1645790	Callee	GET_OPCODE		1644364	0					
ANR	1645791	Identifier	GET_OPCODE		1644364	0					
ANR	1645792	ArgumentList	op		1644364	1					
ANR	1645793	Argument	op		1644364	0					
ANR	1645794	Identifier	op		1644364	0					
ANR	1645795	Identifier	SLJIT_AND		1644364	1					
ANR	1645796	CompoundStatement		155:53:6297:6297	1644364	1					
ANR	1645797	IfStatement	"if ( TEST_UL_IMM ( src2 , src2w ) )"		1644364	0					
ANR	1645798	Condition	"TEST_UL_IMM ( src2 , src2w )"	1609:7:54130:54153	1644364	0	True				
ANR	1645799	CallExpression	"TEST_UL_IMM ( src2 , src2w )"		1644364	0					
ANR	1645800	Callee	TEST_UL_IMM		1644364	0					
ANR	1645801	Identifier	TEST_UL_IMM		1644364	0					
ANR	1645802	ArgumentList	src2		1644364	1					
ANR	1645803	Argument	src2		1644364	0					
ANR	1645804	Identifier	src2		1644364	0					
ANR	1645805	Argument	src2w		1644364	1					
ANR	1645806	Identifier	src2w		1644364	0					
ANR	1645807	CompoundStatement		156:33:6332:6332	1644364	1					
ANR	1645808	ExpressionStatement	compiler -> imm = src2w	1610:4:54162:54183	1644364	0	True				
ANR	1645809	AssignmentExpression	compiler -> imm = src2w		1644364	0		=			
ANR	1645810	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1645811	Identifier	compiler		1644364	0					
ANR	1645812	Identifier	imm		1644364	1					
ANR	1645813	Identifier	src2w		1644364	1					
ANR	1645814	ReturnStatement	"return emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1611:4:54189:54285	1644364	1	True				
ANR	1645815	CallExpression	"emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1644364	0					
ANR	1645816	Callee	emit_op		1644364	0					
ANR	1645817	Identifier	emit_op		1644364	0					
ANR	1645818	ArgumentList	compiler		1644364	1					
ANR	1645819	Argument	compiler		1644364	0					
ANR	1645820	Identifier	compiler		1644364	0					
ANR	1645821	Argument	GET_OPCODE ( op )		1644364	1					
ANR	1645822	CallExpression	GET_OPCODE ( op )		1644364	0					
ANR	1645823	Callee	GET_OPCODE		1644364	0					
ANR	1645824	Identifier	GET_OPCODE		1644364	0					
ANR	1645825	ArgumentList	op		1644364	1					
ANR	1645826	Argument	op		1644364	0					
ANR	1645827	Identifier	op		1644364	0					
ANR	1645828	Argument	flags | ALT_FORM1		1644364	2					
ANR	1645829	InclusiveOrExpression	flags | ALT_FORM1		1644364	0		|			
ANR	1645830	Identifier	flags		1644364	0					
ANR	1645831	Identifier	ALT_FORM1		1644364	1					
ANR	1645832	Argument	dst		1644364	3					
ANR	1645833	Identifier	dst		1644364	0					
ANR	1645834	Argument	dstw		1644364	4					
ANR	1645835	Identifier	dstw		1644364	0					
ANR	1645836	Argument	src1		1644364	5					
ANR	1645837	Identifier	src1		1644364	0					
ANR	1645838	Argument	src1w		1644364	6					
ANR	1645839	Identifier	src1w		1644364	0					
ANR	1645840	Argument	TMP_REG2		1644364	7					
ANR	1645841	Identifier	TMP_REG2		1644364	0					
ANR	1645842	Argument	0		1644364	8					
ANR	1645843	PrimaryExpression	0		1644364	0					
ANR	1645844	IfStatement	"if ( TEST_UL_IMM ( src1 , src1w ) )"		1644364	1					
ANR	1645845	Condition	"TEST_UL_IMM ( src1 , src1w )"	1613:7:54299:54322	1644364	0	True				
ANR	1645846	CallExpression	"TEST_UL_IMM ( src1 , src1w )"		1644364	0					
ANR	1645847	Callee	TEST_UL_IMM		1644364	0					
ANR	1645848	Identifier	TEST_UL_IMM		1644364	0					
ANR	1645849	ArgumentList	src1		1644364	1					
ANR	1645850	Argument	src1		1644364	0					
ANR	1645851	Identifier	src1		1644364	0					
ANR	1645852	Argument	src1w		1644364	1					
ANR	1645853	Identifier	src1w		1644364	0					
ANR	1645854	CompoundStatement		160:33:6501:6501	1644364	1					
ANR	1645855	ExpressionStatement	compiler -> imm = src1w	1614:4:54331:54352	1644364	0	True				
ANR	1645856	AssignmentExpression	compiler -> imm = src1w		1644364	0		=			
ANR	1645857	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1645858	Identifier	compiler		1644364	0					
ANR	1645859	Identifier	imm		1644364	1					
ANR	1645860	Identifier	src1w		1644364	1					
ANR	1645861	ReturnStatement	"return emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM1 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1615:4:54358:54454	1644364	1	True				
ANR	1645862	CallExpression	"emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM1 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1644364	0					
ANR	1645863	Callee	emit_op		1644364	0					
ANR	1645864	Identifier	emit_op		1644364	0					
ANR	1645865	ArgumentList	compiler		1644364	1					
ANR	1645866	Argument	compiler		1644364	0					
ANR	1645867	Identifier	compiler		1644364	0					
ANR	1645868	Argument	GET_OPCODE ( op )		1644364	1					
ANR	1645869	CallExpression	GET_OPCODE ( op )		1644364	0					
ANR	1645870	Callee	GET_OPCODE		1644364	0					
ANR	1645871	Identifier	GET_OPCODE		1644364	0					
ANR	1645872	ArgumentList	op		1644364	1					
ANR	1645873	Argument	op		1644364	0					
ANR	1645874	Identifier	op		1644364	0					
ANR	1645875	Argument	flags | ALT_FORM1		1644364	2					
ANR	1645876	InclusiveOrExpression	flags | ALT_FORM1		1644364	0		|			
ANR	1645877	Identifier	flags		1644364	0					
ANR	1645878	Identifier	ALT_FORM1		1644364	1					
ANR	1645879	Argument	dst		1644364	3					
ANR	1645880	Identifier	dst		1644364	0					
ANR	1645881	Argument	dstw		1644364	4					
ANR	1645882	Identifier	dstw		1644364	0					
ANR	1645883	Argument	src2		1644364	5					
ANR	1645884	Identifier	src2		1644364	0					
ANR	1645885	Argument	src2w		1644364	6					
ANR	1645886	Identifier	src2w		1644364	0					
ANR	1645887	Argument	TMP_REG2		1644364	7					
ANR	1645888	Identifier	TMP_REG2		1644364	0					
ANR	1645889	Argument	0		1644364	8					
ANR	1645890	PrimaryExpression	0		1644364	0					
ANR	1645891	IfStatement	"if ( TEST_UH_IMM ( src2 , src2w ) )"		1644364	2					
ANR	1645892	Condition	"TEST_UH_IMM ( src2 , src2w )"	1617:7:54468:54491	1644364	0	True				
ANR	1645893	CallExpression	"TEST_UH_IMM ( src2 , src2w )"		1644364	0					
ANR	1645894	Callee	TEST_UH_IMM		1644364	0					
ANR	1645895	Identifier	TEST_UH_IMM		1644364	0					
ANR	1645896	ArgumentList	src2		1644364	1					
ANR	1645897	Argument	src2		1644364	0					
ANR	1645898	Identifier	src2		1644364	0					
ANR	1645899	Argument	src2w		1644364	1					
ANR	1645900	Identifier	src2w		1644364	0					
ANR	1645901	CompoundStatement		164:33:6670:6670	1644364	1					
ANR	1645902	ExpressionStatement	compiler -> imm = ( src2w >> 16 ) & 0xffff	1618:4:54500:54538	1644364	0	True				
ANR	1645903	AssignmentExpression	compiler -> imm = ( src2w >> 16 ) & 0xffff		1644364	0		=			
ANR	1645904	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1645905	Identifier	compiler		1644364	0					
ANR	1645906	Identifier	imm		1644364	1					
ANR	1645907	BitAndExpression	( src2w >> 16 ) & 0xffff		1644364	1		&			
ANR	1645908	ShiftExpression	src2w >> 16		1644364	0		>>			
ANR	1645909	Identifier	src2w		1644364	0					
ANR	1645910	PrimaryExpression	16		1644364	1					
ANR	1645911	PrimaryExpression	0xffff		1644364	1					
ANR	1645912	ReturnStatement	"return emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM2 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1619:4:54544:54640	1644364	1	True				
ANR	1645913	CallExpression	"emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM2 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1644364	0					
ANR	1645914	Callee	emit_op		1644364	0					
ANR	1645915	Identifier	emit_op		1644364	0					
ANR	1645916	ArgumentList	compiler		1644364	1					
ANR	1645917	Argument	compiler		1644364	0					
ANR	1645918	Identifier	compiler		1644364	0					
ANR	1645919	Argument	GET_OPCODE ( op )		1644364	1					
ANR	1645920	CallExpression	GET_OPCODE ( op )		1644364	0					
ANR	1645921	Callee	GET_OPCODE		1644364	0					
ANR	1645922	Identifier	GET_OPCODE		1644364	0					
ANR	1645923	ArgumentList	op		1644364	1					
ANR	1645924	Argument	op		1644364	0					
ANR	1645925	Identifier	op		1644364	0					
ANR	1645926	Argument	flags | ALT_FORM2		1644364	2					
ANR	1645927	InclusiveOrExpression	flags | ALT_FORM2		1644364	0		|			
ANR	1645928	Identifier	flags		1644364	0					
ANR	1645929	Identifier	ALT_FORM2		1644364	1					
ANR	1645930	Argument	dst		1644364	3					
ANR	1645931	Identifier	dst		1644364	0					
ANR	1645932	Argument	dstw		1644364	4					
ANR	1645933	Identifier	dstw		1644364	0					
ANR	1645934	Argument	src1		1644364	5					
ANR	1645935	Identifier	src1		1644364	0					
ANR	1645936	Argument	src1w		1644364	6					
ANR	1645937	Identifier	src1w		1644364	0					
ANR	1645938	Argument	TMP_REG2		1644364	7					
ANR	1645939	Identifier	TMP_REG2		1644364	0					
ANR	1645940	Argument	0		1644364	8					
ANR	1645941	PrimaryExpression	0		1644364	0					
ANR	1645942	IfStatement	"if ( TEST_UH_IMM ( src1 , src1w ) )"		1644364	3					
ANR	1645943	Condition	"TEST_UH_IMM ( src1 , src1w )"	1621:7:54654:54677	1644364	0	True				
ANR	1645944	CallExpression	"TEST_UH_IMM ( src1 , src1w )"		1644364	0					
ANR	1645945	Callee	TEST_UH_IMM		1644364	0					
ANR	1645946	Identifier	TEST_UH_IMM		1644364	0					
ANR	1645947	ArgumentList	src1		1644364	1					
ANR	1645948	Argument	src1		1644364	0					
ANR	1645949	Identifier	src1		1644364	0					
ANR	1645950	Argument	src1w		1644364	1					
ANR	1645951	Identifier	src1w		1644364	0					
ANR	1645952	CompoundStatement		168:33:6856:6856	1644364	1					
ANR	1645953	ExpressionStatement	compiler -> imm = ( src1w >> 16 ) & 0xffff	1622:4:54686:54724	1644364	0	True				
ANR	1645954	AssignmentExpression	compiler -> imm = ( src1w >> 16 ) & 0xffff		1644364	0		=			
ANR	1645955	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1645956	Identifier	compiler		1644364	0					
ANR	1645957	Identifier	imm		1644364	1					
ANR	1645958	BitAndExpression	( src1w >> 16 ) & 0xffff		1644364	1		&			
ANR	1645959	ShiftExpression	src1w >> 16		1644364	0		>>			
ANR	1645960	Identifier	src1w		1644364	0					
ANR	1645961	PrimaryExpression	16		1644364	1					
ANR	1645962	PrimaryExpression	0xffff		1644364	1					
ANR	1645963	ReturnStatement	"return emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM2 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1623:4:54730:54826	1644364	1	True				
ANR	1645964	CallExpression	"emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM2 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1644364	0					
ANR	1645965	Callee	emit_op		1644364	0					
ANR	1645966	Identifier	emit_op		1644364	0					
ANR	1645967	ArgumentList	compiler		1644364	1					
ANR	1645968	Argument	compiler		1644364	0					
ANR	1645969	Identifier	compiler		1644364	0					
ANR	1645970	Argument	GET_OPCODE ( op )		1644364	1					
ANR	1645971	CallExpression	GET_OPCODE ( op )		1644364	0					
ANR	1645972	Callee	GET_OPCODE		1644364	0					
ANR	1645973	Identifier	GET_OPCODE		1644364	0					
ANR	1645974	ArgumentList	op		1644364	1					
ANR	1645975	Argument	op		1644364	0					
ANR	1645976	Identifier	op		1644364	0					
ANR	1645977	Argument	flags | ALT_FORM2		1644364	2					
ANR	1645978	InclusiveOrExpression	flags | ALT_FORM2		1644364	0		|			
ANR	1645979	Identifier	flags		1644364	0					
ANR	1645980	Identifier	ALT_FORM2		1644364	1					
ANR	1645981	Argument	dst		1644364	3					
ANR	1645982	Identifier	dst		1644364	0					
ANR	1645983	Argument	dstw		1644364	4					
ANR	1645984	Identifier	dstw		1644364	0					
ANR	1645985	Argument	src2		1644364	5					
ANR	1645986	Identifier	src2		1644364	0					
ANR	1645987	Argument	src2w		1644364	6					
ANR	1645988	Identifier	src2w		1644364	0					
ANR	1645989	Argument	TMP_REG2		1644364	7					
ANR	1645990	Identifier	TMP_REG2		1644364	0					
ANR	1645991	Argument	0		1644364	8					
ANR	1645992	PrimaryExpression	0		1644364	0					
ANR	1645993	IfStatement	if ( ! GET_FLAGS ( op ) && GET_OPCODE ( op ) != SLJIT_AND )		1644364	21					
ANR	1645994	Condition	! GET_FLAGS ( op ) && GET_OPCODE ( op ) != SLJIT_AND	1626:6:54843:54887	1644364	0	True				
ANR	1645995	AndExpression	! GET_FLAGS ( op ) && GET_OPCODE ( op ) != SLJIT_AND		1644364	0		&&			
ANR	1645996	UnaryOperationExpression	! GET_FLAGS ( op )		1644364	0					
ANR	1645997	UnaryOperator	!		1644364	0					
ANR	1645998	CallExpression	GET_FLAGS ( op )		1644364	1					
ANR	1645999	Callee	GET_FLAGS		1644364	0					
ANR	1646000	Identifier	GET_FLAGS		1644364	0					
ANR	1646001	ArgumentList	op		1644364	1					
ANR	1646002	Argument	op		1644364	0					
ANR	1646003	Identifier	op		1644364	0					
ANR	1646004	EqualityExpression	GET_OPCODE ( op ) != SLJIT_AND		1644364	1		!=			
ANR	1646005	CallExpression	GET_OPCODE ( op )		1644364	0					
ANR	1646006	Callee	GET_OPCODE		1644364	0					
ANR	1646007	Identifier	GET_OPCODE		1644364	0					
ANR	1646008	ArgumentList	op		1644364	1					
ANR	1646009	Argument	op		1644364	0					
ANR	1646010	Identifier	op		1644364	0					
ANR	1646011	Identifier	SLJIT_AND		1644364	1					
ANR	1646012	CompoundStatement		173:53:7066:7066	1644364	1					
ANR	1646013	IfStatement	"if ( TEST_UI_IMM ( src2 , src2w ) )"		1644364	0					
ANR	1646014	Condition	"TEST_UI_IMM ( src2 , src2w )"	1627:7:54899:54922	1644364	0	True				
ANR	1646015	CallExpression	"TEST_UI_IMM ( src2 , src2w )"		1644364	0					
ANR	1646016	Callee	TEST_UI_IMM		1644364	0					
ANR	1646017	Identifier	TEST_UI_IMM		1644364	0					
ANR	1646018	ArgumentList	src2		1644364	1					
ANR	1646019	Argument	src2		1644364	0					
ANR	1646020	Identifier	src2		1644364	0					
ANR	1646021	Argument	src2w		1644364	1					
ANR	1646022	Identifier	src2w		1644364	0					
ANR	1646023	CompoundStatement		174:33:7101:7101	1644364	1					
ANR	1646024	ExpressionStatement	compiler -> imm = src2w	1628:4:54931:54952	1644364	0	True				
ANR	1646025	AssignmentExpression	compiler -> imm = src2w		1644364	0		=			
ANR	1646026	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1646027	Identifier	compiler		1644364	0					
ANR	1646028	Identifier	imm		1644364	1					
ANR	1646029	Identifier	src2w		1644364	1					
ANR	1646030	ReturnStatement	"return emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1629:4:54958:55054	1644364	1	True				
ANR	1646031	CallExpression	"emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM3 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1644364	0					
ANR	1646032	Callee	emit_op		1644364	0					
ANR	1646033	Identifier	emit_op		1644364	0					
ANR	1646034	ArgumentList	compiler		1644364	1					
ANR	1646035	Argument	compiler		1644364	0					
ANR	1646036	Identifier	compiler		1644364	0					
ANR	1646037	Argument	GET_OPCODE ( op )		1644364	1					
ANR	1646038	CallExpression	GET_OPCODE ( op )		1644364	0					
ANR	1646039	Callee	GET_OPCODE		1644364	0					
ANR	1646040	Identifier	GET_OPCODE		1644364	0					
ANR	1646041	ArgumentList	op		1644364	1					
ANR	1646042	Argument	op		1644364	0					
ANR	1646043	Identifier	op		1644364	0					
ANR	1646044	Argument	flags | ALT_FORM3		1644364	2					
ANR	1646045	InclusiveOrExpression	flags | ALT_FORM3		1644364	0		|			
ANR	1646046	Identifier	flags		1644364	0					
ANR	1646047	Identifier	ALT_FORM3		1644364	1					
ANR	1646048	Argument	dst		1644364	3					
ANR	1646049	Identifier	dst		1644364	0					
ANR	1646050	Argument	dstw		1644364	4					
ANR	1646051	Identifier	dstw		1644364	0					
ANR	1646052	Argument	src1		1644364	5					
ANR	1646053	Identifier	src1		1644364	0					
ANR	1646054	Argument	src1w		1644364	6					
ANR	1646055	Identifier	src1w		1644364	0					
ANR	1646056	Argument	TMP_REG2		1644364	7					
ANR	1646057	Identifier	TMP_REG2		1644364	0					
ANR	1646058	Argument	0		1644364	8					
ANR	1646059	PrimaryExpression	0		1644364	0					
ANR	1646060	IfStatement	"if ( TEST_UI_IMM ( src1 , src1w ) )"		1644364	1					
ANR	1646061	Condition	"TEST_UI_IMM ( src1 , src1w )"	1631:7:55068:55091	1644364	0	True				
ANR	1646062	CallExpression	"TEST_UI_IMM ( src1 , src1w )"		1644364	0					
ANR	1646063	Callee	TEST_UI_IMM		1644364	0					
ANR	1646064	Identifier	TEST_UI_IMM		1644364	0					
ANR	1646065	ArgumentList	src1		1644364	1					
ANR	1646066	Argument	src1		1644364	0					
ANR	1646067	Identifier	src1		1644364	0					
ANR	1646068	Argument	src1w		1644364	1					
ANR	1646069	Identifier	src1w		1644364	0					
ANR	1646070	CompoundStatement		178:33:7270:7270	1644364	1					
ANR	1646071	ExpressionStatement	compiler -> imm = src1w	1632:4:55100:55121	1644364	0	True				
ANR	1646072	AssignmentExpression	compiler -> imm = src1w		1644364	0		=			
ANR	1646073	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1646074	Identifier	compiler		1644364	0					
ANR	1646075	Identifier	imm		1644364	1					
ANR	1646076	Identifier	src1w		1644364	1					
ANR	1646077	ReturnStatement	"return emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM3 , dst , dstw , src2 , src2w , TMP_REG2 , 0 ) ;"	1633:4:55127:55223	1644364	1	True				
ANR	1646078	CallExpression	"emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM3 , dst , dstw , src2 , src2w , TMP_REG2 , 0 )"		1644364	0					
ANR	1646079	Callee	emit_op		1644364	0					
ANR	1646080	Identifier	emit_op		1644364	0					
ANR	1646081	ArgumentList	compiler		1644364	1					
ANR	1646082	Argument	compiler		1644364	0					
ANR	1646083	Identifier	compiler		1644364	0					
ANR	1646084	Argument	GET_OPCODE ( op )		1644364	1					
ANR	1646085	CallExpression	GET_OPCODE ( op )		1644364	0					
ANR	1646086	Callee	GET_OPCODE		1644364	0					
ANR	1646087	Identifier	GET_OPCODE		1644364	0					
ANR	1646088	ArgumentList	op		1644364	1					
ANR	1646089	Argument	op		1644364	0					
ANR	1646090	Identifier	op		1644364	0					
ANR	1646091	Argument	flags | ALT_FORM3		1644364	2					
ANR	1646092	InclusiveOrExpression	flags | ALT_FORM3		1644364	0		|			
ANR	1646093	Identifier	flags		1644364	0					
ANR	1646094	Identifier	ALT_FORM3		1644364	1					
ANR	1646095	Argument	dst		1644364	3					
ANR	1646096	Identifier	dst		1644364	0					
ANR	1646097	Argument	dstw		1644364	4					
ANR	1646098	Identifier	dstw		1644364	0					
ANR	1646099	Argument	src2		1644364	5					
ANR	1646100	Identifier	src2		1644364	0					
ANR	1646101	Argument	src2w		1644364	6					
ANR	1646102	Identifier	src2w		1644364	0					
ANR	1646103	Argument	TMP_REG2		1644364	7					
ANR	1646104	Identifier	TMP_REG2		1644364	0					
ANR	1646105	Argument	0		1644364	8					
ANR	1646106	PrimaryExpression	0		1644364	0					
ANR	1646107	ReturnStatement	"return emit_op ( compiler , GET_OPCODE ( op ) , flags , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1636:2:55236:55320	1644364	22	True				
ANR	1646108	CallExpression	"emit_op ( compiler , GET_OPCODE ( op ) , flags , dst , dstw , src1 , src1w , src2 , src2w )"		1644364	0					
ANR	1646109	Callee	emit_op		1644364	0					
ANR	1646110	Identifier	emit_op		1644364	0					
ANR	1646111	ArgumentList	compiler		1644364	1					
ANR	1646112	Argument	compiler		1644364	0					
ANR	1646113	Identifier	compiler		1644364	0					
ANR	1646114	Argument	GET_OPCODE ( op )		1644364	1					
ANR	1646115	CallExpression	GET_OPCODE ( op )		1644364	0					
ANR	1646116	Callee	GET_OPCODE		1644364	0					
ANR	1646117	Identifier	GET_OPCODE		1644364	0					
ANR	1646118	ArgumentList	op		1644364	1					
ANR	1646119	Argument	op		1644364	0					
ANR	1646120	Identifier	op		1644364	0					
ANR	1646121	Argument	flags		1644364	2					
ANR	1646122	Identifier	flags		1644364	0					
ANR	1646123	Argument	dst		1644364	3					
ANR	1646124	Identifier	dst		1644364	0					
ANR	1646125	Argument	dstw		1644364	4					
ANR	1646126	Identifier	dstw		1644364	0					
ANR	1646127	Argument	src1		1644364	5					
ANR	1646128	Identifier	src1		1644364	0					
ANR	1646129	Argument	src1w		1644364	6					
ANR	1646130	Identifier	src1w		1644364	0					
ANR	1646131	Argument	src2		1644364	7					
ANR	1646132	Identifier	src2		1644364	0					
ANR	1646133	Argument	src2w		1644364	8					
ANR	1646134	Identifier	src2w		1644364	0					
ANR	1646135	Label	case SLJIT_ASHR :	1638:1:55324:55339	1644364	23	True				
ANR	1646136	Identifier	SLJIT_ASHR		1644364	0					
ANR	1646137	IfStatement	if ( op & SLJIT_KEEP_FLAGS )		1644364	24					
ANR	1646138	Condition	op & SLJIT_KEEP_FLAGS	1639:6:55347:55367	1644364	0	True				
ANR	1646139	BitAndExpression	op & SLJIT_KEEP_FLAGS		1644364	0		&			
ANR	1646140	Identifier	op		1644364	0					
ANR	1646141	Identifier	SLJIT_KEEP_FLAGS		1644364	1					
ANR	1646142	ExpressionStatement	flags |= ALT_FORM3	1640:3:55373:55391	1644364	1	True				
ANR	1646143	AssignmentExpression	flags |= ALT_FORM3		1644364	0		|=			
ANR	1646144	Identifier	flags		1644364	0					
ANR	1646145	Identifier	ALT_FORM3		1644364	1					
ANR	1646146	Label	case SLJIT_SHL :	1642:1:55416:55430	1644364	25	True				
ANR	1646147	Identifier	SLJIT_SHL		1644364	0					
ANR	1646148	Label	case SLJIT_LSHR :	1643:1:55433:55448	1644364	26	True				
ANR	1646149	Identifier	SLJIT_LSHR		1644364	0					
ANR	1646150	IfStatement	if ( op & SLJIT_INT_OP )		1644364	27					
ANR	1646151	Condition	op & SLJIT_INT_OP	1645:6:55513:55529	1644364	0	True				
ANR	1646152	BitAndExpression	op & SLJIT_INT_OP		1644364	0		&			
ANR	1646153	Identifier	op		1644364	0					
ANR	1646154	Identifier	SLJIT_INT_OP		1644364	1					
ANR	1646155	ExpressionStatement	flags |= ALT_FORM2	1646:3:55535:55553	1644364	1	True				
ANR	1646156	AssignmentExpression	flags |= ALT_FORM2		1644364	0		|=			
ANR	1646157	Identifier	flags		1644364	0					
ANR	1646158	Identifier	ALT_FORM2		1644364	1					
ANR	1646159	IfStatement	if ( src2 & SLJIT_IMM )		1644364	28					
ANR	1646160	Condition	src2 & SLJIT_IMM	1648:6:55568:55583	1644364	0	True				
ANR	1646161	BitAndExpression	src2 & SLJIT_IMM		1644364	0		&			
ANR	1646162	Identifier	src2		1644364	0					
ANR	1646163	Identifier	SLJIT_IMM		1644364	1					
ANR	1646164	CompoundStatement		195:24:7762:7762	1644364	1					
ANR	1646165	ExpressionStatement	compiler -> imm = src2w	1649:3:55591:55612	1644364	0	True				
ANR	1646166	AssignmentExpression	compiler -> imm = src2w		1644364	0		=			
ANR	1646167	PtrMemberAccess	compiler -> imm		1644364	0					
ANR	1646168	Identifier	compiler		1644364	0					
ANR	1646169	Identifier	imm		1644364	1					
ANR	1646170	Identifier	src2w		1644364	1					
ANR	1646171	ReturnStatement	"return emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 ) ;"	1650:3:55617:55713	1644364	1	True				
ANR	1646172	CallExpression	"emit_op ( compiler , GET_OPCODE ( op ) , flags | ALT_FORM1 , dst , dstw , src1 , src1w , TMP_REG2 , 0 )"		1644364	0					
ANR	1646173	Callee	emit_op		1644364	0					
ANR	1646174	Identifier	emit_op		1644364	0					
ANR	1646175	ArgumentList	compiler		1644364	1					
ANR	1646176	Argument	compiler		1644364	0					
ANR	1646177	Identifier	compiler		1644364	0					
ANR	1646178	Argument	GET_OPCODE ( op )		1644364	1					
ANR	1646179	CallExpression	GET_OPCODE ( op )		1644364	0					
ANR	1646180	Callee	GET_OPCODE		1644364	0					
ANR	1646181	Identifier	GET_OPCODE		1644364	0					
ANR	1646182	ArgumentList	op		1644364	1					
ANR	1646183	Argument	op		1644364	0					
ANR	1646184	Identifier	op		1644364	0					
ANR	1646185	Argument	flags | ALT_FORM1		1644364	2					
ANR	1646186	InclusiveOrExpression	flags | ALT_FORM1		1644364	0		|			
ANR	1646187	Identifier	flags		1644364	0					
ANR	1646188	Identifier	ALT_FORM1		1644364	1					
ANR	1646189	Argument	dst		1644364	3					
ANR	1646190	Identifier	dst		1644364	0					
ANR	1646191	Argument	dstw		1644364	4					
ANR	1646192	Identifier	dstw		1644364	0					
ANR	1646193	Argument	src1		1644364	5					
ANR	1646194	Identifier	src1		1644364	0					
ANR	1646195	Argument	src1w		1644364	6					
ANR	1646196	Identifier	src1w		1644364	0					
ANR	1646197	Argument	TMP_REG2		1644364	7					
ANR	1646198	Identifier	TMP_REG2		1644364	0					
ANR	1646199	Argument	0		1644364	8					
ANR	1646200	PrimaryExpression	0		1644364	0					
ANR	1646201	ReturnStatement	"return emit_op ( compiler , GET_OPCODE ( op ) , flags , dst , dstw , src1 , src1w , src2 , src2w ) ;"	1652:2:55721:55805	1644364	29	True				
ANR	1646202	CallExpression	"emit_op ( compiler , GET_OPCODE ( op ) , flags , dst , dstw , src1 , src1w , src2 , src2w )"		1644364	0					
ANR	1646203	Callee	emit_op		1644364	0					
ANR	1646204	Identifier	emit_op		1644364	0					
ANR	1646205	ArgumentList	compiler		1644364	1					
ANR	1646206	Argument	compiler		1644364	0					
ANR	1646207	Identifier	compiler		1644364	0					
ANR	1646208	Argument	GET_OPCODE ( op )		1644364	1					
ANR	1646209	CallExpression	GET_OPCODE ( op )		1644364	0					
ANR	1646210	Callee	GET_OPCODE		1644364	0					
ANR	1646211	Identifier	GET_OPCODE		1644364	0					
ANR	1646212	ArgumentList	op		1644364	1					
ANR	1646213	Argument	op		1644364	0					
ANR	1646214	Identifier	op		1644364	0					
ANR	1646215	Argument	flags		1644364	2					
ANR	1646216	Identifier	flags		1644364	0					
ANR	1646217	Argument	dst		1644364	3					
ANR	1646218	Identifier	dst		1644364	0					
ANR	1646219	Argument	dstw		1644364	4					
ANR	1646220	Identifier	dstw		1644364	0					
ANR	1646221	Argument	src1		1644364	5					
ANR	1646222	Identifier	src1		1644364	0					
ANR	1646223	Argument	src1w		1644364	6					
ANR	1646224	Identifier	src1w		1644364	0					
ANR	1646225	Argument	src2		1644364	7					
ANR	1646226	Identifier	src2		1644364	0					
ANR	1646227	Argument	src2w		1644364	8					
ANR	1646228	Identifier	src2w		1644364	0					
ANR	1646229	ReturnStatement	return SLJIT_SUCCESS ;	1655:1:55812:55832	1644364	12	True				
ANR	1646230	Identifier	SLJIT_SUCCESS		1644364	0					
ANR	1646231	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1644364	1					
ANR	1646232	Identifier	sljit_emit_op2		1644364	2					
ANR	1646233	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1644364	3					
ANR	1646234	Parameter	struct sljit_compiler * compiler	1450:49:47683:47713	1644364	0	True				
ANR	1646235	ParameterType	struct sljit_compiler *		1644364	0					
ANR	1646236	Identifier	compiler		1644364	1					
ANR	1646237	Parameter	sljit_si op	1450:82:47716:47726	1644364	1	True				
ANR	1646238	ParameterType	sljit_si		1644364	0					
ANR	1646239	Identifier	op		1644364	1					
ANR	1646240	Parameter	sljit_si dst	1451:1:47730:47741	1644364	2	True				
ANR	1646241	ParameterType	sljit_si		1644364	0					
ANR	1646242	Identifier	dst		1644364	1					
ANR	1646243	Parameter	sljit_sw dstw	1451:15:47744:47756	1644364	3	True				
ANR	1646244	ParameterType	sljit_sw		1644364	0					
ANR	1646245	Identifier	dstw		1644364	1					
ANR	1646246	Parameter	sljit_si src1	1452:1:47760:47772	1644364	4	True				
ANR	1646247	ParameterType	sljit_si		1644364	0					
ANR	1646248	Identifier	src1		1644364	1					
ANR	1646249	Parameter	sljit_sw src1w	1452:16:47775:47788	1644364	5	True				
ANR	1646250	ParameterType	sljit_sw		1644364	0					
ANR	1646251	Identifier	src1w		1644364	1					
ANR	1646252	Parameter	sljit_si src2	1453:1:47792:47804	1644364	6	True				
ANR	1646253	ParameterType	sljit_si		1644364	0					
ANR	1646254	Identifier	src2		1644364	1					
ANR	1646255	Parameter	sljit_sw src2w	1453:16:47807:47820	1644364	7	True				
ANR	1646256	ParameterType	sljit_sw		1644364	0					
ANR	1646257	Identifier	src2w		1644364	1					
ANR	1646258	CFGEntryNode	ENTRY		1644364		True				
ANR	1646259	CFGExitNode	EXIT		1644364		True				
ANR	1646260	Symbol	SLJIT_AND		1644364						
ANR	1646261	Symbol	TMP_REG2		1644364						
ANR	1646262	Symbol	* compiler		1644364						
ANR	1646263	Symbol	TEST_UL_IMM		1644364						
ANR	1646264	Symbol	GET_OPCODE		1644364						
ANR	1646265	Symbol	TEST_SH_IMM		1644364						
ANR	1646266	Symbol	SLJIT_SUBC		1644364						
ANR	1646267	Symbol	SLJIT_IMM		1644364						
ANR	1646268	Symbol	SLJIT_KEEP_FLAGS		1644364						
ANR	1646269	Symbol	TEST_ADD_IMM		1644364						
ANR	1646270	Symbol	SLJIT_MUL		1644364						
ANR	1646271	Symbol	INT_DATA		1644364						
ANR	1646272	Symbol	MTXER		1644364						
ANR	1646273	Symbol	emit_op		1644364						
ANR	1646274	Symbol	ALT_SET_FLAGS		1644364						
ANR	1646275	Symbol	check_sljit_emit_op2		1644364						
ANR	1646276	Symbol	SLJIT_SUB		1644364						
ANR	1646277	Symbol	ALT_SIGN_EXT		1644364						
ANR	1646278	Symbol	src1w		1644364						
ANR	1646279	Symbol	dst		1644364						
ANR	1646280	Symbol	SLJIT_SET_O		1644364						
ANR	1646281	Symbol	TEST_SL_IMM		1644364						
ANR	1646282	Symbol	flags		1644364						
ANR	1646283	Symbol	SLJIT_SET_C		1644364						
ANR	1646284	Symbol	SLJIT_ADD		1644364						
ANR	1646285	Symbol	SLJIT_ADDC		1644364						
ANR	1646286	Symbol	TEST_UH_IMM		1644364						
ANR	1646287	Symbol	SLJIT_SET_E		1644364						
ANR	1646288	Symbol	GET_FLAGS		1644364						
ANR	1646289	Symbol	S		1644364						
ANR	1646290	Symbol	ALT_FORM1		1644364						
ANR	1646291	Symbol	ALT_FORM2		1644364						
ANR	1646292	Symbol	SLJIT_SET_S		1644364						
ANR	1646293	Symbol	ALT_FORM3		1644364						
ANR	1646294	Symbol	ALT_FORM4		1644364						
ANR	1646295	Symbol	compiler -> imm		1644364						
ANR	1646296	Symbol	ALT_FORM5		1644364						
ANR	1646297	Symbol	compiler		1644364						
ANR	1646298	Symbol	ALT_FORM6		1644364						
ANR	1646299	Symbol	SLJIT_SET_U		1644364						
ANR	1646300	Symbol	TEST_UI_IMM		1644364						
ANR	1646301	Symbol	src2w		1644364						
ANR	1646302	Symbol	op		1644364						
ANR	1646303	Symbol	push_inst		1644364						
ANR	1646304	Symbol	SLJIT_INT_OP		1644364						
ANR	1646305	Symbol	SLJIT_SUCCESS		1644364						
ANR	1646306	Symbol	SIGNED_DATA		1644364						
ANR	1646307	Symbol	SLJIT_UNUSED		1644364						
ANR	1646308	Symbol	src1		1644364						
ANR	1646309	Symbol	TMP_ZERO		1644364						
ANR	1646310	Symbol	src2		1644364						
ANR	1646311	Symbol	dstw		1644364						
ANR	1646312	Symbol	ALT_KEEP_CACHE		1644364						
ANR	1646313	Function	sljit_get_register_index	1658:0:55837:55989							
ANR	1646314	FunctionDef	sljit_get_register_index (sljit_si reg)		1646313	0					
ANR	1646315	CompoundStatement		1659:0:55910:55989	1646313	0					
ANR	1646316	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )	1660:1:55913:55965	1646313	0	True				
ANR	1646317	CallExpression	CHECK_REG_INDEX ( check_sljit_get_register_index ( reg ) )		1646313	0					
ANR	1646318	Callee	CHECK_REG_INDEX		1646313	0					
ANR	1646319	Identifier	CHECK_REG_INDEX		1646313	0					
ANR	1646320	ArgumentList	check_sljit_get_register_index ( reg )		1646313	1					
ANR	1646321	Argument	check_sljit_get_register_index ( reg )		1646313	0					
ANR	1646322	CallExpression	check_sljit_get_register_index ( reg )		1646313	0					
ANR	1646323	Callee	check_sljit_get_register_index		1646313	0					
ANR	1646324	Identifier	check_sljit_get_register_index		1646313	0					
ANR	1646325	ArgumentList	reg		1646313	1					
ANR	1646326	Argument	reg		1646313	0					
ANR	1646327	Identifier	reg		1646313	0					
ANR	1646328	ReturnStatement	return reg_map [ reg ] ;	1661:1:55968:55987	1646313	1	True				
ANR	1646329	ArrayIndexing	reg_map [ reg ]		1646313	0					
ANR	1646330	Identifier	reg_map		1646313	0					
ANR	1646331	Identifier	reg		1646313	1					
ANR	1646332	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1646313	1					
ANR	1646333	Identifier	sljit_get_register_index		1646313	2					
ANR	1646334	ParameterList	sljit_si reg		1646313	3					
ANR	1646335	Parameter	sljit_si reg	1658:59:55896:55907	1646313	0	True				
ANR	1646336	ParameterType	sljit_si		1646313	0					
ANR	1646337	Identifier	reg		1646313	1					
ANR	1646338	CFGEntryNode	ENTRY		1646313		True				
ANR	1646339	CFGExitNode	EXIT		1646313		True				
ANR	1646340	Symbol	reg		1646313						
ANR	1646341	Symbol	reg_map		1646313						
ANR	1646342	Symbol	* reg_map		1646313						
ANR	1646343	Symbol	* reg		1646313						
ANR	1646344	Symbol	check_sljit_get_register_index		1646313						
ANR	1646345	Function	sljit_get_float_register_index	1664:0:55992:56147							
ANR	1646346	FunctionDef	sljit_get_float_register_index (sljit_si reg)		1646345	0					
ANR	1646347	CompoundStatement		1665:0:56071:56147	1646345	0					
ANR	1646348	ExpressionStatement	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )	1666:1:56074:56132	1646345	0	True				
ANR	1646349	CallExpression	CHECK_REG_INDEX ( check_sljit_get_float_register_index ( reg ) )		1646345	0					
ANR	1646350	Callee	CHECK_REG_INDEX		1646345	0					
ANR	1646351	Identifier	CHECK_REG_INDEX		1646345	0					
ANR	1646352	ArgumentList	check_sljit_get_float_register_index ( reg )		1646345	1					
ANR	1646353	Argument	check_sljit_get_float_register_index ( reg )		1646345	0					
ANR	1646354	CallExpression	check_sljit_get_float_register_index ( reg )		1646345	0					
ANR	1646355	Callee	check_sljit_get_float_register_index		1646345	0					
ANR	1646356	Identifier	check_sljit_get_float_register_index		1646345	0					
ANR	1646357	ArgumentList	reg		1646345	1					
ANR	1646358	Argument	reg		1646345	0					
ANR	1646359	Identifier	reg		1646345	0					
ANR	1646360	ReturnStatement	return reg ;	1667:1:56135:56145	1646345	1	True				
ANR	1646361	Identifier	reg		1646345	0					
ANR	1646362	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1646345	1					
ANR	1646363	Identifier	sljit_get_float_register_index		1646345	2					
ANR	1646364	ParameterList	sljit_si reg		1646345	3					
ANR	1646365	Parameter	sljit_si reg	1664:65:56057:56068	1646345	0	True				
ANR	1646366	ParameterType	sljit_si		1646345	0					
ANR	1646367	Identifier	reg		1646345	1					
ANR	1646368	CFGEntryNode	ENTRY		1646345		True				
ANR	1646369	CFGExitNode	EXIT		1646345		True				
ANR	1646370	Symbol	reg		1646345						
ANR	1646371	Symbol	check_sljit_get_float_register_index		1646345						
ANR	1646372	Function	sljit_emit_op_custom	1670:0:56150:56412							
ANR	1646373	FunctionDef	"sljit_emit_op_custom (struct sljit_compiler * compiler , void * instruction , sljit_si size)"		1646372	0					
ANR	1646374	CompoundStatement		1672:0:56273:56412	1646372	0					
ANR	1646375	ExpressionStatement	CHECK_ERROR ( )	1673:1:56276:56289	1646372	0	True				
ANR	1646376	CallExpression	CHECK_ERROR ( )		1646372	0					
ANR	1646377	Callee	CHECK_ERROR		1646372	0					
ANR	1646378	Identifier	CHECK_ERROR		1646372	0					
ANR	1646379	ArgumentList			1646372	1					
ANR	1646380	ExpressionStatement	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"	1674:1:56292:56354	1646372	1	True				
ANR	1646381	CallExpression	"CHECK ( check_sljit_emit_op_custom ( compiler , instruction , size ) )"		1646372	0					
ANR	1646382	Callee	CHECK		1646372	0					
ANR	1646383	Identifier	CHECK		1646372	0					
ANR	1646384	ArgumentList	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1646372	1					
ANR	1646385	Argument	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1646372	0					
ANR	1646386	CallExpression	"check_sljit_emit_op_custom ( compiler , instruction , size )"		1646372	0					
ANR	1646387	Callee	check_sljit_emit_op_custom		1646372	0					
ANR	1646388	Identifier	check_sljit_emit_op_custom		1646372	0					
ANR	1646389	ArgumentList	compiler		1646372	1					
ANR	1646390	Argument	compiler		1646372	0					
ANR	1646391	Identifier	compiler		1646372	0					
ANR	1646392	Argument	instruction		1646372	1					
ANR	1646393	Identifier	instruction		1646372	0					
ANR	1646394	Argument	size		1646372	2					
ANR	1646395	Identifier	size		1646372	0					
ANR	1646396	ReturnStatement	"return push_inst ( compiler , * ( sljit_ins * ) instruction ) ;"	1676:1:56358:56410	1646372	2	True				
ANR	1646397	CallExpression	"push_inst ( compiler , * ( sljit_ins * ) instruction )"		1646372	0					
ANR	1646398	Callee	push_inst		1646372	0					
ANR	1646399	Identifier	push_inst		1646372	0					
ANR	1646400	ArgumentList	compiler		1646372	1					
ANR	1646401	Argument	compiler		1646372	0					
ANR	1646402	Identifier	compiler		1646372	0					
ANR	1646403	Argument	* ( sljit_ins * ) instruction		1646372	1					
ANR	1646404	UnaryOperationExpression	* ( sljit_ins * ) instruction		1646372	0					
ANR	1646405	UnaryOperator	*		1646372	0					
ANR	1646406	CastExpression	( sljit_ins * ) instruction		1646372	1					
ANR	1646407	CastTarget	sljit_ins *		1646372	0					
ANR	1646408	Identifier	instruction		1646372	1					
ANR	1646409	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1646372	1					
ANR	1646410	Identifier	sljit_emit_op_custom		1646372	2					
ANR	1646411	ParameterList	"struct sljit_compiler * compiler , void * instruction , sljit_si size"		1646372	3					
ANR	1646412	Parameter	struct sljit_compiler * compiler	1670:55:56205:56235	1646372	0	True				
ANR	1646413	ParameterType	struct sljit_compiler *		1646372	0					
ANR	1646414	Identifier	compiler		1646372	1					
ANR	1646415	Parameter	void * instruction	1671:1:56239:56255	1646372	1	True				
ANR	1646416	ParameterType	void *		1646372	0					
ANR	1646417	Identifier	instruction		1646372	1					
ANR	1646418	Parameter	sljit_si size	1671:20:56258:56270	1646372	2	True				
ANR	1646419	ParameterType	sljit_si		1646372	0					
ANR	1646420	Identifier	size		1646372	1					
ANR	1646421	CFGEntryNode	ENTRY		1646372		True				
ANR	1646422	CFGExitNode	EXIT		1646372		True				
ANR	1646423	Symbol	push_inst		1646372						
ANR	1646424	Symbol	size		1646372						
ANR	1646425	Symbol	* instruction		1646372						
ANR	1646426	Symbol	* ( sljit_ins * ) instruction		1646372						
ANR	1646427	Symbol	instruction		1646372						
ANR	1646428	Symbol	check_sljit_emit_op_custom		1646372						
ANR	1646429	Symbol	compiler		1646372						
ANR	1646430	Function	sljit_is_fpu_available	1683:0:56644:56824							
ANR	1646431	FunctionDef	sljit_is_fpu_available ()		1646430	0					
ANR	1646432	CompoundStatement		1684:0:56707:56824	1646430	0					
ANR	1646433	ReturnStatement	return SLJIT_IS_FPU_AVAILABLE ;	1686:1:56740:56769	1646430	0	True				
ANR	1646434	Identifier	SLJIT_IS_FPU_AVAILABLE		1646430	0					
ANR	1646435	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1646430	1					
ANR	1646436	Identifier	sljit_is_fpu_available		1646430	2					
ANR	1646437	ParameterList			1646430	3					
ANR	1646438	CFGEntryNode	ENTRY		1646430		True				
ANR	1646439	CFGExitNode	EXIT		1646430		True				
ANR	1646440	Symbol	SLJIT_IS_FPU_AVAILABLE		1646430						
ANR	1646441	Function	sljit_emit_fop1_convw_fromd	1711:0:57474:59624							
ANR	1646442	FunctionDef	"sljit_emit_fop1_convw_fromd (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1646441	0					
ANR	1646443	CompoundStatement		1714:0:57637:59624	1646441	0					
ANR	1646444	IfStatement	if ( src & SLJIT_MEM )		1646441	0					
ANR	1646445	Condition	src & SLJIT_MEM	1715:5:57644:57658	1646441	0	True				
ANR	1646446	BitAndExpression	src & SLJIT_MEM		1646441	0		&			
ANR	1646447	Identifier	src		1646441	0					
ANR	1646448	Identifier	SLJIT_MEM		1646441	1					
ANR	1646449	CompoundStatement		2:22:23:23	1646441	1					
ANR	1646450	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw ) )"	1717:2:57753:57845	1646441	0	True				
ANR	1646451	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw ) )"		1646441	0					
ANR	1646452	Callee	FAIL_IF		1646441	0					
ANR	1646453	Identifier	FAIL_IF		1646441	0					
ANR	1646454	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1646441	1					
ANR	1646455	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1646441	0					
ANR	1646456	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1646441	0					
ANR	1646457	Callee	emit_op_mem2		1646441	0					
ANR	1646458	Identifier	emit_op_mem2		1646441	0					
ANR	1646459	ArgumentList	compiler		1646441	1					
ANR	1646460	Argument	compiler		1646441	0					
ANR	1646461	Identifier	compiler		1646441	0					
ANR	1646462	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1646441	1					
ANR	1646463	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1646441	0		|			
ANR	1646464	CallExpression	FLOAT_DATA ( op )		1646441	0					
ANR	1646465	Callee	FLOAT_DATA		1646441	0					
ANR	1646466	Identifier	FLOAT_DATA		1646441	0					
ANR	1646467	ArgumentList	op		1646441	1					
ANR	1646468	Argument	op		1646441	0					
ANR	1646469	Identifier	op		1646441	0					
ANR	1646470	Identifier	LOAD_DATA		1646441	1					
ANR	1646471	Argument	TMP_FREG1		1646441	2					
ANR	1646472	Identifier	TMP_FREG1		1646441	0					
ANR	1646473	Argument	src		1646441	3					
ANR	1646474	Identifier	src		1646441	0					
ANR	1646475	Argument	srcw		1646441	4					
ANR	1646476	Identifier	srcw		1646441	0					
ANR	1646477	Argument	dst		1646441	5					
ANR	1646478	Identifier	dst		1646441	0					
ANR	1646479	Argument	dstw		1646441	6					
ANR	1646480	Identifier	dstw		1646441	0					
ANR	1646481	ExpressionStatement	src = TMP_FREG1	1718:2:57849:57864	1646441	1	True				
ANR	1646482	AssignmentExpression	src = TMP_FREG1		1646441	0		=			
ANR	1646483	Identifier	src		1646441	0					
ANR	1646484	Identifier	TMP_FREG1		1646441	1					
ANR	1646485	ExpressionStatement	op = GET_OPCODE ( op )	1722:1:57928:57947	1646441	1	True				
ANR	1646486	AssignmentExpression	op = GET_OPCODE ( op )		1646441	0		=			
ANR	1646487	Identifier	op		1646441	0					
ANR	1646488	CallExpression	GET_OPCODE ( op )		1646441	1					
ANR	1646489	Callee	GET_OPCODE		1646441	0					
ANR	1646490	Identifier	GET_OPCODE		1646441	0					
ANR	1646491	ArgumentList	op		1646441	1					
ANR	1646492	Argument	op		1646441	0					
ANR	1646493	Identifier	op		1646441	0					
ANR	1646494	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , ( op == SLJIT_CONVI_FROMD ? FCTIWZ : FCTIDZ ) | FD ( TMP_FREG1 ) | FB ( src ) ) )"	1723:1:57950:58049	1646441	2	True				
ANR	1646495	CallExpression	"FAIL_IF ( push_inst ( compiler , ( op == SLJIT_CONVI_FROMD ? FCTIWZ : FCTIDZ ) | FD ( TMP_FREG1 ) | FB ( src ) ) )"		1646441	0					
ANR	1646496	Callee	FAIL_IF		1646441	0					
ANR	1646497	Identifier	FAIL_IF		1646441	0					
ANR	1646498	ArgumentList	"push_inst ( compiler , ( op == SLJIT_CONVI_FROMD ? FCTIWZ : FCTIDZ ) | FD ( TMP_FREG1 ) | FB ( src ) )"		1646441	1					
ANR	1646499	Argument	"push_inst ( compiler , ( op == SLJIT_CONVI_FROMD ? FCTIWZ : FCTIDZ ) | FD ( TMP_FREG1 ) | FB ( src ) )"		1646441	0					
ANR	1646500	CallExpression	"push_inst ( compiler , ( op == SLJIT_CONVI_FROMD ? FCTIWZ : FCTIDZ ) | FD ( TMP_FREG1 ) | FB ( src ) )"		1646441	0					
ANR	1646501	Callee	push_inst		1646441	0					
ANR	1646502	Identifier	push_inst		1646441	0					
ANR	1646503	ArgumentList	compiler		1646441	1					
ANR	1646504	Argument	compiler		1646441	0					
ANR	1646505	Identifier	compiler		1646441	0					
ANR	1646506	Argument	( op == SLJIT_CONVI_FROMD ? FCTIWZ : FCTIDZ ) | FD ( TMP_FREG1 ) | FB ( src )		1646441	1					
ANR	1646507	InclusiveOrExpression	( op == SLJIT_CONVI_FROMD ? FCTIWZ : FCTIDZ ) | FD ( TMP_FREG1 ) | FB ( src )		1646441	0		|			
ANR	1646508	ConditionalExpression	op == SLJIT_CONVI_FROMD ? FCTIWZ : FCTIDZ		1646441	0					
ANR	1646509	Condition	op == SLJIT_CONVI_FROMD		1646441	0					
ANR	1646510	EqualityExpression	op == SLJIT_CONVI_FROMD		1646441	0		==			
ANR	1646511	Identifier	op		1646441	0					
ANR	1646512	Identifier	SLJIT_CONVI_FROMD		1646441	1					
ANR	1646513	Identifier	FCTIWZ		1646441	1					
ANR	1646514	Identifier	FCTIDZ		1646441	2					
ANR	1646515	InclusiveOrExpression	FD ( TMP_FREG1 ) | FB ( src )		1646441	1		|			
ANR	1646516	CallExpression	FD ( TMP_FREG1 )		1646441	0					
ANR	1646517	Callee	FD		1646441	0					
ANR	1646518	Identifier	FD		1646441	0					
ANR	1646519	ArgumentList	TMP_FREG1		1646441	1					
ANR	1646520	Argument	TMP_FREG1		1646441	0					
ANR	1646521	Identifier	TMP_FREG1		1646441	0					
ANR	1646522	CallExpression	FB ( src )		1646441	1					
ANR	1646523	Callee	FB		1646441	0					
ANR	1646524	Identifier	FB		1646441	0					
ANR	1646525	ArgumentList	src		1646441	1					
ANR	1646526	Argument	src		1646441	0					
ANR	1646527	Identifier	src		1646441	0					
ANR	1646528	IfStatement	if ( dst == SLJIT_UNUSED )		1646441	3					
ANR	1646529	Condition	dst == SLJIT_UNUSED	1725:5:58057:58075	1646441	0	True				
ANR	1646530	EqualityExpression	dst == SLJIT_UNUSED		1646441	0		==			
ANR	1646531	Identifier	dst		1646441	0					
ANR	1646532	Identifier	SLJIT_UNUSED		1646441	1					
ANR	1646533	ReturnStatement	return SLJIT_SUCCESS ;	1726:2:58080:58100	1646441	1	True				
ANR	1646534	Identifier	SLJIT_SUCCESS		1646441	0					
ANR	1646535	IfStatement	if ( op == SLJIT_CONVW_FROMD )		1646441	4					
ANR	1646536	Condition	op == SLJIT_CONVW_FROMD	1728:5:58108:58130	1646441	0	True				
ANR	1646537	EqualityExpression	op == SLJIT_CONVW_FROMD		1646441	0		==			
ANR	1646538	Identifier	op		1646441	0					
ANR	1646539	Identifier	SLJIT_CONVW_FROMD		1646441	1					
ANR	1646540	CompoundStatement		15:30:495:495	1646441	1					
ANR	1646541	IfStatement	if ( FAST_IS_REG ( dst ) )		1646441	0					
ANR	1646542	Condition	FAST_IS_REG ( dst )	1729:6:58141:58156	1646441	0	True				
ANR	1646543	CallExpression	FAST_IS_REG ( dst )		1646441	0					
ANR	1646544	Callee	FAST_IS_REG		1646441	0					
ANR	1646545	Identifier	FAST_IS_REG		1646441	0					
ANR	1646546	ArgumentList	dst		1646441	1					
ANR	1646547	Argument	dst		1646441	0					
ANR	1646548	Identifier	dst		1646441	0					
ANR	1646549	CompoundStatement		16:24:521:521	1646441	1					
ANR	1646550	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , DOUBLE_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , 0 , 0 ) )"	1730:3:58164:58269	1646441	0	True				
ANR	1646551	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , DOUBLE_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , 0 , 0 ) )"		1646441	0					
ANR	1646552	Callee	FAIL_IF		1646441	0					
ANR	1646553	Identifier	FAIL_IF		1646441	0					
ANR	1646554	ArgumentList	"emit_op_mem2 ( compiler , DOUBLE_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , 0 , 0 )"		1646441	1					
ANR	1646555	Argument	"emit_op_mem2 ( compiler , DOUBLE_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , 0 , 0 )"		1646441	0					
ANR	1646556	CallExpression	"emit_op_mem2 ( compiler , DOUBLE_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , 0 , 0 )"		1646441	0					
ANR	1646557	Callee	emit_op_mem2		1646441	0					
ANR	1646558	Identifier	emit_op_mem2		1646441	0					
ANR	1646559	ArgumentList	compiler		1646441	1					
ANR	1646560	Argument	compiler		1646441	0					
ANR	1646561	Identifier	compiler		1646441	0					
ANR	1646562	Argument	DOUBLE_DATA		1646441	1					
ANR	1646563	Identifier	DOUBLE_DATA		1646441	0					
ANR	1646564	Argument	TMP_FREG1		1646441	2					
ANR	1646565	Identifier	TMP_FREG1		1646441	0					
ANR	1646566	Argument	SLJIT_MEM1 ( SLJIT_SP )		1646441	3					
ANR	1646567	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1646441	0					
ANR	1646568	Callee	SLJIT_MEM1		1646441	0					
ANR	1646569	Identifier	SLJIT_MEM1		1646441	0					
ANR	1646570	ArgumentList	SLJIT_SP		1646441	1					
ANR	1646571	Argument	SLJIT_SP		1646441	0					
ANR	1646572	Identifier	SLJIT_SP		1646441	0					
ANR	1646573	Argument	FLOAT_TMP_MEM_OFFSET		1646441	4					
ANR	1646574	Identifier	FLOAT_TMP_MEM_OFFSET		1646441	0					
ANR	1646575	Argument	0		1646441	5					
ANR	1646576	PrimaryExpression	0		1646441	0					
ANR	1646577	Argument	0		1646441	6					
ANR	1646578	PrimaryExpression	0		1646441	0					
ANR	1646579	ReturnStatement	"return emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , dst , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , 0 , 0 ) ;"	1731:3:58274:58381	1646441	1	True				
ANR	1646580	CallExpression	"emit_op_mem2 ( compiler , WORD_DATA | LOAD_DATA , dst , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , 0 , 0 )"		1646441	0					
ANR	1646581	Callee	emit_op_mem2		1646441	0					
ANR	1646582	Identifier	emit_op_mem2		1646441	0					
ANR	1646583	ArgumentList	compiler		1646441	1					
ANR	1646584	Argument	compiler		1646441	0					
ANR	1646585	Identifier	compiler		1646441	0					
ANR	1646586	Argument	WORD_DATA | LOAD_DATA		1646441	1					
ANR	1646587	InclusiveOrExpression	WORD_DATA | LOAD_DATA		1646441	0		|			
ANR	1646588	Identifier	WORD_DATA		1646441	0					
ANR	1646589	Identifier	LOAD_DATA		1646441	1					
ANR	1646590	Argument	dst		1646441	2					
ANR	1646591	Identifier	dst		1646441	0					
ANR	1646592	Argument	SLJIT_MEM1 ( SLJIT_SP )		1646441	3					
ANR	1646593	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1646441	0					
ANR	1646594	Callee	SLJIT_MEM1		1646441	0					
ANR	1646595	Identifier	SLJIT_MEM1		1646441	0					
ANR	1646596	ArgumentList	SLJIT_SP		1646441	1					
ANR	1646597	Argument	SLJIT_SP		1646441	0					
ANR	1646598	Identifier	SLJIT_SP		1646441	0					
ANR	1646599	Argument	FLOAT_TMP_MEM_OFFSET		1646441	4					
ANR	1646600	Identifier	FLOAT_TMP_MEM_OFFSET		1646441	0					
ANR	1646601	Argument	0		1646441	5					
ANR	1646602	PrimaryExpression	0		1646441	0					
ANR	1646603	Argument	0		1646441	6					
ANR	1646604	PrimaryExpression	0		1646441	0					
ANR	1646605	ReturnStatement	"return emit_op_mem2 ( compiler , DOUBLE_DATA , TMP_FREG1 , dst , dstw , 0 , 0 ) ;"	1733:2:58389:58459	1646441	1	True				
ANR	1646606	CallExpression	"emit_op_mem2 ( compiler , DOUBLE_DATA , TMP_FREG1 , dst , dstw , 0 , 0 )"		1646441	0					
ANR	1646607	Callee	emit_op_mem2		1646441	0					
ANR	1646608	Identifier	emit_op_mem2		1646441	0					
ANR	1646609	ArgumentList	compiler		1646441	1					
ANR	1646610	Argument	compiler		1646441	0					
ANR	1646611	Identifier	compiler		1646441	0					
ANR	1646612	Argument	DOUBLE_DATA		1646441	1					
ANR	1646613	Identifier	DOUBLE_DATA		1646441	0					
ANR	1646614	Argument	TMP_FREG1		1646441	2					
ANR	1646615	Identifier	TMP_FREG1		1646441	0					
ANR	1646616	Argument	dst		1646441	3					
ANR	1646617	Identifier	dst		1646441	0					
ANR	1646618	Argument	dstw		1646441	4					
ANR	1646619	Identifier	dstw		1646441	0					
ANR	1646620	Argument	0		1646441	5					
ANR	1646621	PrimaryExpression	0		1646441	0					
ANR	1646622	Argument	0		1646441	6					
ANR	1646623	PrimaryExpression	0		1646441	0					
ANR	1646624	IfStatement	if ( FAST_IS_REG ( dst ) )		1646441	5					
ANR	1646625	Condition	FAST_IS_REG ( dst )	1743:5:58600:58615	1646441	0	True				
ANR	1646626	CallExpression	FAST_IS_REG ( dst )		1646441	0					
ANR	1646627	Callee	FAST_IS_REG		1646441	0					
ANR	1646628	Identifier	FAST_IS_REG		1646441	0					
ANR	1646629	ArgumentList	dst		1646441	1					
ANR	1646630	Argument	dst		1646441	0					
ANR	1646631	Identifier	dst		1646441	0					
ANR	1646632	CompoundStatement		30:23:980:980	1646441	1					
ANR	1646633	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , FLOAT_TMP_MEM_OFFSET ) )"	1744:2:58622:58687	1646441	0	True				
ANR	1646634	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , FLOAT_TMP_MEM_OFFSET ) )"		1646441	0					
ANR	1646635	Callee	FAIL_IF		1646441	0					
ANR	1646636	Identifier	FAIL_IF		1646441	0					
ANR	1646637	ArgumentList	"load_immediate ( compiler , TMP_REG1 , FLOAT_TMP_MEM_OFFSET )"		1646441	1					
ANR	1646638	Argument	"load_immediate ( compiler , TMP_REG1 , FLOAT_TMP_MEM_OFFSET )"		1646441	0					
ANR	1646639	CallExpression	"load_immediate ( compiler , TMP_REG1 , FLOAT_TMP_MEM_OFFSET )"		1646441	0					
ANR	1646640	Callee	load_immediate		1646441	0					
ANR	1646641	Identifier	load_immediate		1646441	0					
ANR	1646642	ArgumentList	compiler		1646441	1					
ANR	1646643	Argument	compiler		1646441	0					
ANR	1646644	Identifier	compiler		1646441	0					
ANR	1646645	Argument	TMP_REG1		1646441	1					
ANR	1646646	Identifier	TMP_REG1		1646441	0					
ANR	1646647	Argument	FLOAT_TMP_MEM_OFFSET		1646441	2					
ANR	1646648	Identifier	FLOAT_TMP_MEM_OFFSET		1646441	0					
ANR	1646649	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , STFIWX | FS ( TMP_FREG1 ) | A ( SLJIT_SP ) | B ( TMP_REG1 ) ) )"	1745:2:58691:58771	1646441	1	True				
ANR	1646650	CallExpression	"FAIL_IF ( push_inst ( compiler , STFIWX | FS ( TMP_FREG1 ) | A ( SLJIT_SP ) | B ( TMP_REG1 ) ) )"		1646441	0					
ANR	1646651	Callee	FAIL_IF		1646441	0					
ANR	1646652	Identifier	FAIL_IF		1646441	0					
ANR	1646653	ArgumentList	"push_inst ( compiler , STFIWX | FS ( TMP_FREG1 ) | A ( SLJIT_SP ) | B ( TMP_REG1 ) )"		1646441	1					
ANR	1646654	Argument	"push_inst ( compiler , STFIWX | FS ( TMP_FREG1 ) | A ( SLJIT_SP ) | B ( TMP_REG1 ) )"		1646441	0					
ANR	1646655	CallExpression	"push_inst ( compiler , STFIWX | FS ( TMP_FREG1 ) | A ( SLJIT_SP ) | B ( TMP_REG1 ) )"		1646441	0					
ANR	1646656	Callee	push_inst		1646441	0					
ANR	1646657	Identifier	push_inst		1646441	0					
ANR	1646658	ArgumentList	compiler		1646441	1					
ANR	1646659	Argument	compiler		1646441	0					
ANR	1646660	Identifier	compiler		1646441	0					
ANR	1646661	Argument	STFIWX | FS ( TMP_FREG1 ) | A ( SLJIT_SP ) | B ( TMP_REG1 )		1646441	1					
ANR	1646662	InclusiveOrExpression	STFIWX | FS ( TMP_FREG1 ) | A ( SLJIT_SP ) | B ( TMP_REG1 )		1646441	0		|			
ANR	1646663	Identifier	STFIWX		1646441	0					
ANR	1646664	InclusiveOrExpression	FS ( TMP_FREG1 ) | A ( SLJIT_SP ) | B ( TMP_REG1 )		1646441	1		|			
ANR	1646665	CallExpression	FS ( TMP_FREG1 )		1646441	0					
ANR	1646666	Callee	FS		1646441	0					
ANR	1646667	Identifier	FS		1646441	0					
ANR	1646668	ArgumentList	TMP_FREG1		1646441	1					
ANR	1646669	Argument	TMP_FREG1		1646441	0					
ANR	1646670	Identifier	TMP_FREG1		1646441	0					
ANR	1646671	InclusiveOrExpression	A ( SLJIT_SP ) | B ( TMP_REG1 )		1646441	1		|			
ANR	1646672	CallExpression	A ( SLJIT_SP )		1646441	0					
ANR	1646673	Callee	A		1646441	0					
ANR	1646674	Identifier	A		1646441	0					
ANR	1646675	ArgumentList	SLJIT_SP		1646441	1					
ANR	1646676	Argument	SLJIT_SP		1646441	0					
ANR	1646677	Identifier	SLJIT_SP		1646441	0					
ANR	1646678	CallExpression	B ( TMP_REG1 )		1646441	1					
ANR	1646679	Callee	B		1646441	0					
ANR	1646680	Identifier	B		1646441	0					
ANR	1646681	ArgumentList	TMP_REG1		1646441	1					
ANR	1646682	Argument	TMP_REG1		1646441	0					
ANR	1646683	Identifier	TMP_REG1		1646441	0					
ANR	1646684	ReturnStatement	"return emit_op_mem2 ( compiler , INT_DATA | LOAD_DATA , dst , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , 0 , 0 ) ;"	1746:2:58775:58881	1646441	2	True				
ANR	1646685	CallExpression	"emit_op_mem2 ( compiler , INT_DATA | LOAD_DATA , dst , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , 0 , 0 )"		1646441	0					
ANR	1646686	Callee	emit_op_mem2		1646441	0					
ANR	1646687	Identifier	emit_op_mem2		1646441	0					
ANR	1646688	ArgumentList	compiler		1646441	1					
ANR	1646689	Argument	compiler		1646441	0					
ANR	1646690	Identifier	compiler		1646441	0					
ANR	1646691	Argument	INT_DATA | LOAD_DATA		1646441	1					
ANR	1646692	InclusiveOrExpression	INT_DATA | LOAD_DATA		1646441	0		|			
ANR	1646693	Identifier	INT_DATA		1646441	0					
ANR	1646694	Identifier	LOAD_DATA		1646441	1					
ANR	1646695	Argument	dst		1646441	2					
ANR	1646696	Identifier	dst		1646441	0					
ANR	1646697	Argument	SLJIT_MEM1 ( SLJIT_SP )		1646441	3					
ANR	1646698	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1646441	0					
ANR	1646699	Callee	SLJIT_MEM1		1646441	0					
ANR	1646700	Identifier	SLJIT_MEM1		1646441	0					
ANR	1646701	ArgumentList	SLJIT_SP		1646441	1					
ANR	1646702	Argument	SLJIT_SP		1646441	0					
ANR	1646703	Identifier	SLJIT_SP		1646441	0					
ANR	1646704	Argument	FLOAT_TMP_MEM_OFFSET		1646441	4					
ANR	1646705	Identifier	FLOAT_TMP_MEM_OFFSET		1646441	0					
ANR	1646706	Argument	0		1646441	5					
ANR	1646707	PrimaryExpression	0		1646441	0					
ANR	1646708	Argument	0		1646441	6					
ANR	1646709	PrimaryExpression	0		1646441	0					
ANR	1646710	ExpressionStatement	SLJIT_ASSERT ( dst & SLJIT_MEM )	1749:1:58888:58917	1646441	6	True				
ANR	1646711	CallExpression	SLJIT_ASSERT ( dst & SLJIT_MEM )		1646441	0					
ANR	1646712	Callee	SLJIT_ASSERT		1646441	0					
ANR	1646713	Identifier	SLJIT_ASSERT		1646441	0					
ANR	1646714	ArgumentList	dst & SLJIT_MEM		1646441	1					
ANR	1646715	Argument	dst & SLJIT_MEM		1646441	0					
ANR	1646716	BitAndExpression	dst & SLJIT_MEM		1646441	0		&			
ANR	1646717	Identifier	dst		1646441	0					
ANR	1646718	Identifier	SLJIT_MEM		1646441	1					
ANR	1646719	IfStatement	if ( dst & OFFS_REG_MASK )		1646441	7					
ANR	1646720	Condition	dst & OFFS_REG_MASK	1751:5:58925:58943	1646441	0	True				
ANR	1646721	BitAndExpression	dst & OFFS_REG_MASK		1646441	0		&			
ANR	1646722	Identifier	dst		1646441	0					
ANR	1646723	Identifier	OFFS_REG_MASK		1646441	1					
ANR	1646724	CompoundStatement		38:26:1308:1308	1646441	1					
ANR	1646725	ExpressionStatement	dstw &= 0x3	1752:2:58950:58961	1646441	0	True				
ANR	1646726	AssignmentExpression	dstw &= 0x3		1646441	0		&=			
ANR	1646727	Identifier	dstw		1646441	0					
ANR	1646728	PrimaryExpression	0x3		1646441	1					
ANR	1646729	IfStatement	if ( dstw )		1646441	1					
ANR	1646730	Condition	dstw	1753:6:58969:58972	1646441	0	True				
ANR	1646731	Identifier	dstw		1646441	0					
ANR	1646732	CompoundStatement		40:12:1337:1337	1646441	1					
ANR	1646733	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , RLWINM | S ( OFFS_REG ( dst ) ) | A ( TMP_REG1 ) | ( dstw << 11 ) | ( ( 31 - dstw ) << 1 ) ) )"	1755:3:59037:59142	1646441	0	True				
ANR	1646734	CallExpression	"FAIL_IF ( push_inst ( compiler , RLWINM | S ( OFFS_REG ( dst ) ) | A ( TMP_REG1 ) | ( dstw << 11 ) | ( ( 31 - dstw ) << 1 ) ) )"		1646441	0					
ANR	1646735	Callee	FAIL_IF		1646441	0					
ANR	1646736	Identifier	FAIL_IF		1646441	0					
ANR	1646737	ArgumentList	"push_inst ( compiler , RLWINM | S ( OFFS_REG ( dst ) ) | A ( TMP_REG1 ) | ( dstw << 11 ) | ( ( 31 - dstw ) << 1 ) )"		1646441	1					
ANR	1646738	Argument	"push_inst ( compiler , RLWINM | S ( OFFS_REG ( dst ) ) | A ( TMP_REG1 ) | ( dstw << 11 ) | ( ( 31 - dstw ) << 1 ) )"		1646441	0					
ANR	1646739	CallExpression	"push_inst ( compiler , RLWINM | S ( OFFS_REG ( dst ) ) | A ( TMP_REG1 ) | ( dstw << 11 ) | ( ( 31 - dstw ) << 1 ) )"		1646441	0					
ANR	1646740	Callee	push_inst		1646441	0					
ANR	1646741	Identifier	push_inst		1646441	0					
ANR	1646742	ArgumentList	compiler		1646441	1					
ANR	1646743	Argument	compiler		1646441	0					
ANR	1646744	Identifier	compiler		1646441	0					
ANR	1646745	Argument	RLWINM | S ( OFFS_REG ( dst ) ) | A ( TMP_REG1 ) | ( dstw << 11 ) | ( ( 31 - dstw ) << 1 )		1646441	1					
ANR	1646746	InclusiveOrExpression	RLWINM | S ( OFFS_REG ( dst ) ) | A ( TMP_REG1 ) | ( dstw << 11 ) | ( ( 31 - dstw ) << 1 )		1646441	0		|			
ANR	1646747	Identifier	RLWINM		1646441	0					
ANR	1646748	InclusiveOrExpression	S ( OFFS_REG ( dst ) ) | A ( TMP_REG1 ) | ( dstw << 11 ) | ( ( 31 - dstw ) << 1 )		1646441	1		|			
ANR	1646749	CallExpression	S ( OFFS_REG ( dst ) )		1646441	0					
ANR	1646750	Callee	S		1646441	0					
ANR	1646751	Identifier	S		1646441	0					
ANR	1646752	ArgumentList	OFFS_REG ( dst )		1646441	1					
ANR	1646753	Argument	OFFS_REG ( dst )		1646441	0					
ANR	1646754	CallExpression	OFFS_REG ( dst )		1646441	0					
ANR	1646755	Callee	OFFS_REG		1646441	0					
ANR	1646756	Identifier	OFFS_REG		1646441	0					
ANR	1646757	ArgumentList	dst		1646441	1					
ANR	1646758	Argument	dst		1646441	0					
ANR	1646759	Identifier	dst		1646441	0					
ANR	1646760	InclusiveOrExpression	A ( TMP_REG1 ) | ( dstw << 11 ) | ( ( 31 - dstw ) << 1 )		1646441	1		|			
ANR	1646761	CallExpression	A ( TMP_REG1 )		1646441	0					
ANR	1646762	Callee	A		1646441	0					
ANR	1646763	Identifier	A		1646441	0					
ANR	1646764	ArgumentList	TMP_REG1		1646441	1					
ANR	1646765	Argument	TMP_REG1		1646441	0					
ANR	1646766	Identifier	TMP_REG1		1646441	0					
ANR	1646767	InclusiveOrExpression	( dstw << 11 ) | ( ( 31 - dstw ) << 1 )		1646441	1		|			
ANR	1646768	ShiftExpression	dstw << 11		1646441	0		<<			
ANR	1646769	Identifier	dstw		1646441	0					
ANR	1646770	PrimaryExpression	11		1646441	1					
ANR	1646771	ShiftExpression	( 31 - dstw ) << 1		1646441	1		<<			
ANR	1646772	AdditiveExpression	31 - dstw		1646441	0		-			
ANR	1646773	PrimaryExpression	31		1646441	0					
ANR	1646774	Identifier	dstw		1646441	1					
ANR	1646775	PrimaryExpression	1		1646441	1					
ANR	1646776	ExpressionStatement	dstw = TMP_REG1	1759:3:59244:59259	1646441	1	True				
ANR	1646777	AssignmentExpression	dstw = TMP_REG1		1646441	0		=			
ANR	1646778	Identifier	dstw		1646441	0					
ANR	1646779	Identifier	TMP_REG1		1646441	1					
ANR	1646780	ElseStatement	else		1646441	0					
ANR	1646781	ExpressionStatement	dstw = OFFS_REG ( dst )	1762:3:59275:59295	1646441	0	True				
ANR	1646782	AssignmentExpression	dstw = OFFS_REG ( dst )		1646441	0		=			
ANR	1646783	Identifier	dstw		1646441	0					
ANR	1646784	CallExpression	OFFS_REG ( dst )		1646441	1					
ANR	1646785	Callee	OFFS_REG		1646441	0					
ANR	1646786	Identifier	OFFS_REG		1646441	0					
ANR	1646787	ArgumentList	dst		1646441	1					
ANR	1646788	Argument	dst		1646441	0					
ANR	1646789	Identifier	dst		1646441	0					
ANR	1646790	ElseStatement	else		1646441	0					
ANR	1646791	CompoundStatement		51:6:1668:1668	1646441	0					
ANR	1646792	IfStatement	if ( ( dst & REG_MASK ) && ! dstw )		1646441	0					
ANR	1646793	Condition	( dst & REG_MASK ) && ! dstw	1765:6:59314:59338	1646441	0	True				
ANR	1646794	AndExpression	( dst & REG_MASK ) && ! dstw		1646441	0		&&			
ANR	1646795	BitAndExpression	dst & REG_MASK		1646441	0		&			
ANR	1646796	Identifier	dst		1646441	0					
ANR	1646797	Identifier	REG_MASK		1646441	1					
ANR	1646798	UnaryOperationExpression	! dstw		1646441	1					
ANR	1646799	UnaryOperator	!		1646441	0					
ANR	1646800	Identifier	dstw		1646441	1					
ANR	1646801	CompoundStatement		52:33:1703:1703	1646441	1					
ANR	1646802	ExpressionStatement	dstw = dst & REG_MASK	1766:3:59346:59367	1646441	0	True				
ANR	1646803	AssignmentExpression	dstw = dst & REG_MASK		1646441	0		=			
ANR	1646804	Identifier	dstw		1646441	0					
ANR	1646805	BitAndExpression	dst & REG_MASK		1646441	1		&			
ANR	1646806	Identifier	dst		1646441	0					
ANR	1646807	Identifier	REG_MASK		1646441	1					
ANR	1646808	ExpressionStatement	dst = 0	1767:3:59372:59379	1646441	1	True				
ANR	1646809	AssignmentExpression	dst = 0		1646441	0		=			
ANR	1646810	Identifier	dst		1646441	0					
ANR	1646811	PrimaryExpression	0		1646441	1					
ANR	1646812	ElseStatement	else		1646441	0					
ANR	1646813	CompoundStatement		56:7:1754:1754	1646441	0					
ANR	1646814	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , dstw ) )"	1771:3:59462:59511	1646441	0	True				
ANR	1646815	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , dstw ) )"		1646441	0					
ANR	1646816	Callee	FAIL_IF		1646441	0					
ANR	1646817	Identifier	FAIL_IF		1646441	0					
ANR	1646818	ArgumentList	"load_immediate ( compiler , TMP_REG1 , dstw )"		1646441	1					
ANR	1646819	Argument	"load_immediate ( compiler , TMP_REG1 , dstw )"		1646441	0					
ANR	1646820	CallExpression	"load_immediate ( compiler , TMP_REG1 , dstw )"		1646441	0					
ANR	1646821	Callee	load_immediate		1646441	0					
ANR	1646822	Identifier	load_immediate		1646441	0					
ANR	1646823	ArgumentList	compiler		1646441	1					
ANR	1646824	Argument	compiler		1646441	0					
ANR	1646825	Identifier	compiler		1646441	0					
ANR	1646826	Argument	TMP_REG1		1646441	1					
ANR	1646827	Identifier	TMP_REG1		1646441	0					
ANR	1646828	Argument	dstw		1646441	2					
ANR	1646829	Identifier	dstw		1646441	0					
ANR	1646830	ExpressionStatement	dstw = TMP_REG1	1772:3:59516:59531	1646441	1	True				
ANR	1646831	AssignmentExpression	dstw = TMP_REG1		1646441	0		=			
ANR	1646832	Identifier	dstw		1646441	0					
ANR	1646833	Identifier	TMP_REG1		1646441	1					
ANR	1646834	ReturnStatement	"return push_inst ( compiler , STFIWX | FS ( TMP_FREG1 ) | A ( dst & REG_MASK ) | B ( dstw ) ) ;"	1776:1:59542:59622	1646441	8	True				
ANR	1646835	CallExpression	"push_inst ( compiler , STFIWX | FS ( TMP_FREG1 ) | A ( dst & REG_MASK ) | B ( dstw ) )"		1646441	0					
ANR	1646836	Callee	push_inst		1646441	0					
ANR	1646837	Identifier	push_inst		1646441	0					
ANR	1646838	ArgumentList	compiler		1646441	1					
ANR	1646839	Argument	compiler		1646441	0					
ANR	1646840	Identifier	compiler		1646441	0					
ANR	1646841	Argument	STFIWX | FS ( TMP_FREG1 ) | A ( dst & REG_MASK ) | B ( dstw )		1646441	1					
ANR	1646842	InclusiveOrExpression	STFIWX | FS ( TMP_FREG1 ) | A ( dst & REG_MASK ) | B ( dstw )		1646441	0		|			
ANR	1646843	Identifier	STFIWX		1646441	0					
ANR	1646844	InclusiveOrExpression	FS ( TMP_FREG1 ) | A ( dst & REG_MASK ) | B ( dstw )		1646441	1		|			
ANR	1646845	CallExpression	FS ( TMP_FREG1 )		1646441	0					
ANR	1646846	Callee	FS		1646441	0					
ANR	1646847	Identifier	FS		1646441	0					
ANR	1646848	ArgumentList	TMP_FREG1		1646441	1					
ANR	1646849	Argument	TMP_FREG1		1646441	0					
ANR	1646850	Identifier	TMP_FREG1		1646441	0					
ANR	1646851	InclusiveOrExpression	A ( dst & REG_MASK ) | B ( dstw )		1646441	1		|			
ANR	1646852	CallExpression	A ( dst & REG_MASK )		1646441	0					
ANR	1646853	Callee	A		1646441	0					
ANR	1646854	Identifier	A		1646441	0					
ANR	1646855	ArgumentList	dst & REG_MASK		1646441	1					
ANR	1646856	Argument	dst & REG_MASK		1646441	0					
ANR	1646857	BitAndExpression	dst & REG_MASK		1646441	0		&			
ANR	1646858	Identifier	dst		1646441	0					
ANR	1646859	Identifier	REG_MASK		1646441	1					
ANR	1646860	CallExpression	B ( dstw )		1646441	1					
ANR	1646861	Callee	B		1646441	0					
ANR	1646862	Identifier	B		1646441	0					
ANR	1646863	ArgumentList	dstw		1646441	1					
ANR	1646864	Argument	dstw		1646441	0					
ANR	1646865	Identifier	dstw		1646441	0					
ANR	1646866	ReturnType	static SLJIT_INLINE sljit_si		1646441	1					
ANR	1646867	Identifier	sljit_emit_fop1_convw_fromd		1646441	2					
ANR	1646868	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1646441	3					
ANR	1646869	Parameter	struct sljit_compiler * compiler	1711:57:57531:57561	1646441	0	True				
ANR	1646870	ParameterType	struct sljit_compiler *		1646441	0					
ANR	1646871	Identifier	compiler		1646441	1					
ANR	1646872	Parameter	sljit_si op	1711:90:57564:57574	1646441	1	True				
ANR	1646873	ParameterType	sljit_si		1646441	0					
ANR	1646874	Identifier	op		1646441	1					
ANR	1646875	Parameter	sljit_si dst	1712:1:57578:57589	1646441	2	True				
ANR	1646876	ParameterType	sljit_si		1646441	0					
ANR	1646877	Identifier	dst		1646441	1					
ANR	1646878	Parameter	sljit_sw dstw	1712:15:57592:57604	1646441	3	True				
ANR	1646879	ParameterType	sljit_sw		1646441	0					
ANR	1646880	Identifier	dstw		1646441	1					
ANR	1646881	Parameter	sljit_si src	1713:1:57608:57619	1646441	4	True				
ANR	1646882	ParameterType	sljit_si		1646441	0					
ANR	1646883	Identifier	src		1646441	1					
ANR	1646884	Parameter	sljit_sw srcw	1713:15:57622:57634	1646441	5	True				
ANR	1646885	ParameterType	sljit_sw		1646441	0					
ANR	1646886	Identifier	srcw		1646441	1					
ANR	1646887	CFGEntryNode	ENTRY		1646441		True				
ANR	1646888	CFGExitNode	EXIT		1646441		True				
ANR	1646889	Symbol	A		1646441						
ANR	1646890	Symbol	FCTIDZ		1646441						
ANR	1646891	Symbol	TMP_REG1		1646441						
ANR	1646892	Symbol	B		1646441						
ANR	1646893	Symbol	dst		1646441						
ANR	1646894	Symbol	FLOAT_DATA		1646441						
ANR	1646895	Symbol	LOAD_DATA		1646441						
ANR	1646896	Symbol	TMP_FREG1		1646441						
ANR	1646897	Symbol	SLJIT_MEM		1646441						
ANR	1646898	Symbol	FS		1646441						
ANR	1646899	Symbol	SLJIT_SP		1646441						
ANR	1646900	Symbol	RLWINM		1646441						
ANR	1646901	Symbol	GET_OPCODE		1646441						
ANR	1646902	Symbol	SLJIT_CONVI_FROMD		1646441						
ANR	1646903	Symbol	S		1646441						
ANR	1646904	Symbol	load_immediate		1646441						
ANR	1646905	Symbol	INT_DATA		1646441						
ANR	1646906	Symbol	FLOAT_TMP_MEM_OFFSET		1646441						
ANR	1646907	Symbol	compiler		1646441						
ANR	1646908	Symbol	WORD_DATA		1646441						
ANR	1646909	Symbol	FCTIWZ		1646441						
ANR	1646910	Symbol	op		1646441						
ANR	1646911	Symbol	push_inst		1646441						
ANR	1646912	Symbol	REG_MASK		1646441						
ANR	1646913	Symbol	FAST_IS_REG		1646441						
ANR	1646914	Symbol	src		1646441						
ANR	1646915	Symbol	srcw		1646441						
ANR	1646916	Symbol	STFIWX		1646441						
ANR	1646917	Symbol	OFFS_REG_MASK		1646441						
ANR	1646918	Symbol	emit_op_mem2		1646441						
ANR	1646919	Symbol	SLJIT_SUCCESS		1646441						
ANR	1646920	Symbol	SLJIT_MEM1		1646441						
ANR	1646921	Symbol	SLJIT_CONVW_FROMD		1646441						
ANR	1646922	Symbol	SLJIT_UNUSED		1646441						
ANR	1646923	Symbol	DOUBLE_DATA		1646441						
ANR	1646924	Symbol	OFFS_REG		1646441						
ANR	1646925	Symbol	FB		1646441						
ANR	1646926	Symbol	dstw		1646441						
ANR	1646927	Symbol	FD		1646441						
ANR	1646928	Function	sljit_emit_fop1_convd_fromw	1779:0:59627:63203							
ANR	1646929	FunctionDef	"sljit_emit_fop1_convd_fromw (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1646928	0					
ANR	1646930	CompoundStatement		1782:0:59790:63203	1646928	0					
ANR	1646931	IdentifierDeclStatement	sljit_si dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1 ;	1785:1:59851:59902	1646928	0	True				
ANR	1646932	IdentifierDecl	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1646928	0					
ANR	1646933	IdentifierDeclType	sljit_si		1646928	0					
ANR	1646934	Identifier	dst_r		1646928	1					
ANR	1646935	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1646928	2		=			
ANR	1646936	Identifier	dst_r		1646928	0					
ANR	1646937	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1646928	1					
ANR	1646938	Condition	FAST_IS_REG ( dst )		1646928	0					
ANR	1646939	CallExpression	FAST_IS_REG ( dst )		1646928	0					
ANR	1646940	Callee	FAST_IS_REG		1646928	0					
ANR	1646941	Identifier	FAST_IS_REG		1646928	0					
ANR	1646942	ArgumentList	dst		1646928	1					
ANR	1646943	Argument	dst		1646928	0					
ANR	1646944	Identifier	dst		1646928	0					
ANR	1646945	Identifier	dst		1646928	1					
ANR	1646946	Identifier	TMP_FREG1		1646928	2					
ANR	1646947	IfStatement	if ( src & SLJIT_IMM )		1646928	1					
ANR	1646948	Condition	src & SLJIT_IMM	1787:5:59910:59924	1646928	0	True				
ANR	1646949	BitAndExpression	src & SLJIT_IMM		1646928	0		&			
ANR	1646950	Identifier	src		1646928	0					
ANR	1646951	Identifier	SLJIT_IMM		1646928	1					
ANR	1646952	CompoundStatement		6:22:136:136	1646928	1					
ANR	1646953	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMI )		1646928	0					
ANR	1646954	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI	1788:6:59935:59969	1646928	0	True				
ANR	1646955	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI		1646928	0		==			
ANR	1646956	CallExpression	GET_OPCODE ( op )		1646928	0					
ANR	1646957	Callee	GET_OPCODE		1646928	0					
ANR	1646958	Identifier	GET_OPCODE		1646928	0					
ANR	1646959	ArgumentList	op		1646928	1					
ANR	1646960	Argument	op		1646928	0					
ANR	1646961	Identifier	op		1646928	0					
ANR	1646962	Identifier	SLJIT_CONVD_FROMI		1646928	1					
ANR	1646963	ExpressionStatement	srcw = ( sljit_si ) srcw	1789:3:59975:59996	1646928	1	True				
ANR	1646964	AssignmentExpression	srcw = ( sljit_si ) srcw		1646928	0		=			
ANR	1646965	Identifier	srcw		1646928	0					
ANR	1646966	CastExpression	( sljit_si ) srcw		1646928	1					
ANR	1646967	CastTarget	sljit_si		1646928	0					
ANR	1646968	Identifier	srcw		1646928	1					
ANR	1646969	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , srcw ) )"	1790:2:60000:60049	1646928	1	True				
ANR	1646970	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG1 , srcw ) )"		1646928	0					
ANR	1646971	Callee	FAIL_IF		1646928	0					
ANR	1646972	Identifier	FAIL_IF		1646928	0					
ANR	1646973	ArgumentList	"load_immediate ( compiler , TMP_REG1 , srcw )"		1646928	1					
ANR	1646974	Argument	"load_immediate ( compiler , TMP_REG1 , srcw )"		1646928	0					
ANR	1646975	CallExpression	"load_immediate ( compiler , TMP_REG1 , srcw )"		1646928	0					
ANR	1646976	Callee	load_immediate		1646928	0					
ANR	1646977	Identifier	load_immediate		1646928	0					
ANR	1646978	ArgumentList	compiler		1646928	1					
ANR	1646979	Argument	compiler		1646928	0					
ANR	1646980	Identifier	compiler		1646928	0					
ANR	1646981	Argument	TMP_REG1		1646928	1					
ANR	1646982	Identifier	TMP_REG1		1646928	0					
ANR	1646983	Argument	srcw		1646928	2					
ANR	1646984	Identifier	srcw		1646928	0					
ANR	1646985	ExpressionStatement	src = TMP_REG1	1791:2:60053:60067	1646928	2	True				
ANR	1646986	AssignmentExpression	src = TMP_REG1		1646928	0		=			
ANR	1646987	Identifier	src		1646928	0					
ANR	1646988	Identifier	TMP_REG1		1646928	1					
ANR	1646989	ElseStatement	else		1646928	0					
ANR	1646990	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMI )		1646928	0					
ANR	1646991	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI	1793:10:60082:60116	1646928	0	True				
ANR	1646992	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMI		1646928	0		==			
ANR	1646993	CallExpression	GET_OPCODE ( op )		1646928	0					
ANR	1646994	Callee	GET_OPCODE		1646928	0					
ANR	1646995	Identifier	GET_OPCODE		1646928	0					
ANR	1646996	ArgumentList	op		1646928	1					
ANR	1646997	Argument	op		1646928	0					
ANR	1646998	Identifier	op		1646928	0					
ANR	1646999	Identifier	SLJIT_CONVD_FROMI		1646928	1					
ANR	1647000	CompoundStatement		12:47:328:328	1646928	1					
ANR	1647001	IfStatement	if ( FAST_IS_REG ( src ) )		1646928	0					
ANR	1647002	Condition	FAST_IS_REG ( src )	1794:6:60127:60142	1646928	0	True				
ANR	1647003	CallExpression	FAST_IS_REG ( src )		1646928	0					
ANR	1647004	Callee	FAST_IS_REG		1646928	0					
ANR	1647005	Identifier	FAST_IS_REG		1646928	0					
ANR	1647006	ArgumentList	src		1646928	1					
ANR	1647007	Argument	src		1646928	0					
ANR	1647008	Identifier	src		1646928	0					
ANR	1647009	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , EXTSW | S ( src ) | A ( TMP_REG1 ) ) )"	1795:3:60148:60206	1646928	1	True				
ANR	1647010	CallExpression	"FAIL_IF ( push_inst ( compiler , EXTSW | S ( src ) | A ( TMP_REG1 ) ) )"		1646928	0					
ANR	1647011	Callee	FAIL_IF		1646928	0					
ANR	1647012	Identifier	FAIL_IF		1646928	0					
ANR	1647013	ArgumentList	"push_inst ( compiler , EXTSW | S ( src ) | A ( TMP_REG1 ) )"		1646928	1					
ANR	1647014	Argument	"push_inst ( compiler , EXTSW | S ( src ) | A ( TMP_REG1 ) )"		1646928	0					
ANR	1647015	CallExpression	"push_inst ( compiler , EXTSW | S ( src ) | A ( TMP_REG1 ) )"		1646928	0					
ANR	1647016	Callee	push_inst		1646928	0					
ANR	1647017	Identifier	push_inst		1646928	0					
ANR	1647018	ArgumentList	compiler		1646928	1					
ANR	1647019	Argument	compiler		1646928	0					
ANR	1647020	Identifier	compiler		1646928	0					
ANR	1647021	Argument	EXTSW | S ( src ) | A ( TMP_REG1 )		1646928	1					
ANR	1647022	InclusiveOrExpression	EXTSW | S ( src ) | A ( TMP_REG1 )		1646928	0		|			
ANR	1647023	Identifier	EXTSW		1646928	0					
ANR	1647024	InclusiveOrExpression	S ( src ) | A ( TMP_REG1 )		1646928	1		|			
ANR	1647025	CallExpression	S ( src )		1646928	0					
ANR	1647026	Callee	S		1646928	0					
ANR	1647027	Identifier	S		1646928	0					
ANR	1647028	ArgumentList	src		1646928	1					
ANR	1647029	Argument	src		1646928	0					
ANR	1647030	Identifier	src		1646928	0					
ANR	1647031	CallExpression	A ( TMP_REG1 )		1646928	1					
ANR	1647032	Callee	A		1646928	0					
ANR	1647033	Identifier	A		1646928	0					
ANR	1647034	ArgumentList	TMP_REG1		1646928	1					
ANR	1647035	Argument	TMP_REG1		1646928	0					
ANR	1647036	Identifier	TMP_REG1		1646928	0					
ANR	1647037	ElseStatement	else		1646928	0					
ANR	1647038	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , INT_DATA | SIGNED_DATA | LOAD_DATA , TMP_REG1 , src , srcw , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET ) )"	1797:3:60218:60350	1646928	0	True				
ANR	1647039	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , INT_DATA | SIGNED_DATA | LOAD_DATA , TMP_REG1 , src , srcw , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET ) )"		1646928	0					
ANR	1647040	Callee	FAIL_IF		1646928	0					
ANR	1647041	Identifier	FAIL_IF		1646928	0					
ANR	1647042	ArgumentList	"emit_op_mem2 ( compiler , INT_DATA | SIGNED_DATA | LOAD_DATA , TMP_REG1 , src , srcw , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET )"		1646928	1					
ANR	1647043	Argument	"emit_op_mem2 ( compiler , INT_DATA | SIGNED_DATA | LOAD_DATA , TMP_REG1 , src , srcw , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET )"		1646928	0					
ANR	1647044	CallExpression	"emit_op_mem2 ( compiler , INT_DATA | SIGNED_DATA | LOAD_DATA , TMP_REG1 , src , srcw , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET )"		1646928	0					
ANR	1647045	Callee	emit_op_mem2		1646928	0					
ANR	1647046	Identifier	emit_op_mem2		1646928	0					
ANR	1647047	ArgumentList	compiler		1646928	1					
ANR	1647048	Argument	compiler		1646928	0					
ANR	1647049	Identifier	compiler		1646928	0					
ANR	1647050	Argument	INT_DATA | SIGNED_DATA | LOAD_DATA		1646928	1					
ANR	1647051	InclusiveOrExpression	INT_DATA | SIGNED_DATA | LOAD_DATA		1646928	0		|			
ANR	1647052	Identifier	INT_DATA		1646928	0					
ANR	1647053	InclusiveOrExpression	SIGNED_DATA | LOAD_DATA		1646928	1		|			
ANR	1647054	Identifier	SIGNED_DATA		1646928	0					
ANR	1647055	Identifier	LOAD_DATA		1646928	1					
ANR	1647056	Argument	TMP_REG1		1646928	2					
ANR	1647057	Identifier	TMP_REG1		1646928	0					
ANR	1647058	Argument	src		1646928	3					
ANR	1647059	Identifier	src		1646928	0					
ANR	1647060	Argument	srcw		1646928	4					
ANR	1647061	Identifier	srcw		1646928	0					
ANR	1647062	Argument	SLJIT_MEM1 ( SLJIT_SP )		1646928	5					
ANR	1647063	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1646928	0					
ANR	1647064	Callee	SLJIT_MEM1		1646928	0					
ANR	1647065	Identifier	SLJIT_MEM1		1646928	0					
ANR	1647066	ArgumentList	SLJIT_SP		1646928	1					
ANR	1647067	Argument	SLJIT_SP		1646928	0					
ANR	1647068	Identifier	SLJIT_SP		1646928	0					
ANR	1647069	Argument	FLOAT_TMP_MEM_OFFSET		1646928	6					
ANR	1647070	Identifier	FLOAT_TMP_MEM_OFFSET		1646928	0					
ANR	1647071	ExpressionStatement	src = TMP_REG1	1798:2:60354:60368	1646928	1	True				
ANR	1647072	AssignmentExpression	src = TMP_REG1		1646928	0		=			
ANR	1647073	Identifier	src		1646928	0					
ANR	1647074	Identifier	TMP_REG1		1646928	1					
ANR	1647075	IfStatement	if ( FAST_IS_REG ( src ) )		1646928	2					
ANR	1647076	Condition	FAST_IS_REG ( src )	1801:5:60379:60394	1646928	0	True				
ANR	1647077	CallExpression	FAST_IS_REG ( src )		1646928	0					
ANR	1647078	Callee	FAST_IS_REG		1646928	0					
ANR	1647079	Identifier	FAST_IS_REG		1646928	0					
ANR	1647080	ArgumentList	src		1646928	1					
ANR	1647081	Argument	src		1646928	0					
ANR	1647082	Identifier	src		1646928	0					
ANR	1647083	CompoundStatement		20:23:606:606	1646928	1					
ANR	1647084	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_DATA , src , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET ) )"	1802:2:60401:60536	1646928	0	True				
ANR	1647085	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , WORD_DATA , src , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET ) )"		1646928	0					
ANR	1647086	Callee	FAIL_IF		1646928	0					
ANR	1647087	Identifier	FAIL_IF		1646928	0					
ANR	1647088	ArgumentList	"emit_op_mem2 ( compiler , WORD_DATA , src , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET )"		1646928	1					
ANR	1647089	Argument	"emit_op_mem2 ( compiler , WORD_DATA , src , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET )"		1646928	0					
ANR	1647090	CallExpression	"emit_op_mem2 ( compiler , WORD_DATA , src , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET )"		1646928	0					
ANR	1647091	Callee	emit_op_mem2		1646928	0					
ANR	1647092	Identifier	emit_op_mem2		1646928	0					
ANR	1647093	ArgumentList	compiler		1646928	1					
ANR	1647094	Argument	compiler		1646928	0					
ANR	1647095	Identifier	compiler		1646928	0					
ANR	1647096	Argument	WORD_DATA		1646928	1					
ANR	1647097	Identifier	WORD_DATA		1646928	0					
ANR	1647098	Argument	src		1646928	2					
ANR	1647099	Identifier	src		1646928	0					
ANR	1647100	Argument	SLJIT_MEM1 ( SLJIT_SP )		1646928	3					
ANR	1647101	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1646928	0					
ANR	1647102	Callee	SLJIT_MEM1		1646928	0					
ANR	1647103	Identifier	SLJIT_MEM1		1646928	0					
ANR	1647104	ArgumentList	SLJIT_SP		1646928	1					
ANR	1647105	Argument	SLJIT_SP		1646928	0					
ANR	1647106	Identifier	SLJIT_SP		1646928	0					
ANR	1647107	Argument	FLOAT_TMP_MEM_OFFSET		1646928	4					
ANR	1647108	Identifier	FLOAT_TMP_MEM_OFFSET		1646928	0					
ANR	1647109	Argument	SLJIT_MEM1 ( SLJIT_SP )		1646928	5					
ANR	1647110	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1646928	0					
ANR	1647111	Callee	SLJIT_MEM1		1646928	0					
ANR	1647112	Identifier	SLJIT_MEM1		1646928	0					
ANR	1647113	ArgumentList	SLJIT_SP		1646928	1					
ANR	1647114	Argument	SLJIT_SP		1646928	0					
ANR	1647115	Identifier	SLJIT_SP		1646928	0					
ANR	1647116	Argument	FLOAT_TMP_MEM_OFFSET		1646928	6					
ANR	1647117	Identifier	FLOAT_TMP_MEM_OFFSET		1646928	0					
ANR	1647118	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , dst , dstw ) )"	1803:2:60540:60662	1646928	1	True				
ANR	1647119	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , dst , dstw ) )"		1646928	0					
ANR	1647120	Callee	FAIL_IF		1646928	0					
ANR	1647121	Identifier	FAIL_IF		1646928	0					
ANR	1647122	ArgumentList	"emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , dst , dstw )"		1646928	1					
ANR	1647123	Argument	"emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , dst , dstw )"		1646928	0					
ANR	1647124	CallExpression	"emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , SLJIT_MEM1 ( SLJIT_SP ) , FLOAT_TMP_MEM_OFFSET , dst , dstw )"		1646928	0					
ANR	1647125	Callee	emit_op_mem2		1646928	0					
ANR	1647126	Identifier	emit_op_mem2		1646928	0					
ANR	1647127	ArgumentList	compiler		1646928	1					
ANR	1647128	Argument	compiler		1646928	0					
ANR	1647129	Identifier	compiler		1646928	0					
ANR	1647130	Argument	DOUBLE_DATA | LOAD_DATA		1646928	1					
ANR	1647131	InclusiveOrExpression	DOUBLE_DATA | LOAD_DATA		1646928	0		|			
ANR	1647132	Identifier	DOUBLE_DATA		1646928	0					
ANR	1647133	Identifier	LOAD_DATA		1646928	1					
ANR	1647134	Argument	TMP_FREG1		1646928	2					
ANR	1647135	Identifier	TMP_FREG1		1646928	0					
ANR	1647136	Argument	SLJIT_MEM1 ( SLJIT_SP )		1646928	3					
ANR	1647137	CallExpression	SLJIT_MEM1 ( SLJIT_SP )		1646928	0					
ANR	1647138	Callee	SLJIT_MEM1		1646928	0					
ANR	1647139	Identifier	SLJIT_MEM1		1646928	0					
ANR	1647140	ArgumentList	SLJIT_SP		1646928	1					
ANR	1647141	Argument	SLJIT_SP		1646928	0					
ANR	1647142	Identifier	SLJIT_SP		1646928	0					
ANR	1647143	Argument	FLOAT_TMP_MEM_OFFSET		1646928	4					
ANR	1647144	Identifier	FLOAT_TMP_MEM_OFFSET		1646928	0					
ANR	1647145	Argument	dst		1646928	5					
ANR	1647146	Identifier	dst		1646928	0					
ANR	1647147	Argument	dstw		1646928	6					
ANR	1647148	Identifier	dstw		1646928	0					
ANR	1647149	ElseStatement	else		1646928	0					
ANR	1647150	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw ) )"	1806:2:60675:60764	1646928	0	True				
ANR	1647151	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw ) )"		1646928	0					
ANR	1647152	Callee	FAIL_IF		1646928	0					
ANR	1647153	Identifier	FAIL_IF		1646928	0					
ANR	1647154	ArgumentList	"emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1646928	1					
ANR	1647155	Argument	"emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1646928	0					
ANR	1647156	CallExpression	"emit_op_mem2 ( compiler , DOUBLE_DATA | LOAD_DATA , TMP_FREG1 , src , srcw , dst , dstw )"		1646928	0					
ANR	1647157	Callee	emit_op_mem2		1646928	0					
ANR	1647158	Identifier	emit_op_mem2		1646928	0					
ANR	1647159	ArgumentList	compiler		1646928	1					
ANR	1647160	Argument	compiler		1646928	0					
ANR	1647161	Identifier	compiler		1646928	0					
ANR	1647162	Argument	DOUBLE_DATA | LOAD_DATA		1646928	1					
ANR	1647163	InclusiveOrExpression	DOUBLE_DATA | LOAD_DATA		1646928	0		|			
ANR	1647164	Identifier	DOUBLE_DATA		1646928	0					
ANR	1647165	Identifier	LOAD_DATA		1646928	1					
ANR	1647166	Argument	TMP_FREG1		1646928	2					
ANR	1647167	Identifier	TMP_FREG1		1646928	0					
ANR	1647168	Argument	src		1646928	3					
ANR	1647169	Identifier	src		1646928	0					
ANR	1647170	Argument	srcw		1646928	4					
ANR	1647171	Identifier	srcw		1646928	0					
ANR	1647172	Argument	dst		1646928	5					
ANR	1647173	Identifier	dst		1646928	0					
ANR	1647174	Argument	dstw		1646928	6					
ANR	1647175	Identifier	dstw		1646928	0					
ANR	1647176	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , FCFID | FD ( dst_r ) | FB ( TMP_FREG1 ) ) )"	1808:1:60768:60831	1646928	3	True				
ANR	1647177	CallExpression	"FAIL_IF ( push_inst ( compiler , FCFID | FD ( dst_r ) | FB ( TMP_FREG1 ) ) )"		1646928	0					
ANR	1647178	Callee	FAIL_IF		1646928	0					
ANR	1647179	Identifier	FAIL_IF		1646928	0					
ANR	1647180	ArgumentList	"push_inst ( compiler , FCFID | FD ( dst_r ) | FB ( TMP_FREG1 ) )"		1646928	1					
ANR	1647181	Argument	"push_inst ( compiler , FCFID | FD ( dst_r ) | FB ( TMP_FREG1 ) )"		1646928	0					
ANR	1647182	CallExpression	"push_inst ( compiler , FCFID | FD ( dst_r ) | FB ( TMP_FREG1 ) )"		1646928	0					
ANR	1647183	Callee	push_inst		1646928	0					
ANR	1647184	Identifier	push_inst		1646928	0					
ANR	1647185	ArgumentList	compiler		1646928	1					
ANR	1647186	Argument	compiler		1646928	0					
ANR	1647187	Identifier	compiler		1646928	0					
ANR	1647188	Argument	FCFID | FD ( dst_r ) | FB ( TMP_FREG1 )		1646928	1					
ANR	1647189	InclusiveOrExpression	FCFID | FD ( dst_r ) | FB ( TMP_FREG1 )		1646928	0		|			
ANR	1647190	Identifier	FCFID		1646928	0					
ANR	1647191	InclusiveOrExpression	FD ( dst_r ) | FB ( TMP_FREG1 )		1646928	1		|			
ANR	1647192	CallExpression	FD ( dst_r )		1646928	0					
ANR	1647193	Callee	FD		1646928	0					
ANR	1647194	Identifier	FD		1646928	0					
ANR	1647195	ArgumentList	dst_r		1646928	1					
ANR	1647196	Argument	dst_r		1646928	0					
ANR	1647197	Identifier	dst_r		1646928	0					
ANR	1647198	CallExpression	FB ( TMP_FREG1 )		1646928	1					
ANR	1647199	Callee	FB		1646928	0					
ANR	1647200	Identifier	FB		1646928	0					
ANR	1647201	ArgumentList	TMP_FREG1		1646928	1					
ANR	1647202	Argument	TMP_FREG1		1646928	0					
ANR	1647203	Identifier	TMP_FREG1		1646928	0					
ANR	1647204	IfStatement	if ( dst & SLJIT_MEM )		1646928	4					
ANR	1647205	Condition	dst & SLJIT_MEM	1810:5:60839:60853	1646928	0	True				
ANR	1647206	BitAndExpression	dst & SLJIT_MEM		1646928	0		&			
ANR	1647207	Identifier	dst		1646928	0					
ANR	1647208	Identifier	SLJIT_MEM		1646928	1					
ANR	1647209	ReturnStatement	"return emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG1 , dst , dstw , 0 , 0 ) ;"	1811:2:60858:60931	1646928	1	True				
ANR	1647210	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG1 , dst , dstw , 0 , 0 )"		1646928	0					
ANR	1647211	Callee	emit_op_mem2		1646928	0					
ANR	1647212	Identifier	emit_op_mem2		1646928	0					
ANR	1647213	ArgumentList	compiler		1646928	1					
ANR	1647214	Argument	compiler		1646928	0					
ANR	1647215	Identifier	compiler		1646928	0					
ANR	1647216	Argument	FLOAT_DATA ( op )		1646928	1					
ANR	1647217	CallExpression	FLOAT_DATA ( op )		1646928	0					
ANR	1647218	Callee	FLOAT_DATA		1646928	0					
ANR	1647219	Identifier	FLOAT_DATA		1646928	0					
ANR	1647220	ArgumentList	op		1646928	1					
ANR	1647221	Argument	op		1646928	0					
ANR	1647222	Identifier	op		1646928	0					
ANR	1647223	Argument	TMP_FREG1		1646928	2					
ANR	1647224	Identifier	TMP_FREG1		1646928	0					
ANR	1647225	Argument	dst		1646928	3					
ANR	1647226	Identifier	dst		1646928	0					
ANR	1647227	Argument	dstw		1646928	4					
ANR	1647228	Identifier	dstw		1646928	0					
ANR	1647229	Argument	0		1646928	5					
ANR	1647230	PrimaryExpression	0		1646928	0					
ANR	1647231	Argument	0		1646928	6					
ANR	1647232	PrimaryExpression	0		1646928	0					
ANR	1647233	IfStatement	if ( op & SLJIT_SINGLE_OP )		1646928	5					
ANR	1647234	Condition	op & SLJIT_SINGLE_OP	1812:5:60938:60957	1646928	0	True				
ANR	1647235	BitAndExpression	op & SLJIT_SINGLE_OP		1646928	0		&			
ANR	1647236	Identifier	op		1646928	0					
ANR	1647237	Identifier	SLJIT_SINGLE_OP		1646928	1					
ANR	1647238	ReturnStatement	"return push_inst ( compiler , FRSP | FD ( dst_r ) | FB ( dst_r ) ) ;"	1813:2:60962:61018	1646928	1	True				
ANR	1647239	CallExpression	"push_inst ( compiler , FRSP | FD ( dst_r ) | FB ( dst_r ) )"		1646928	0					
ANR	1647240	Callee	push_inst		1646928	0					
ANR	1647241	Identifier	push_inst		1646928	0					
ANR	1647242	ArgumentList	compiler		1646928	1					
ANR	1647243	Argument	compiler		1646928	0					
ANR	1647244	Identifier	compiler		1646928	0					
ANR	1647245	Argument	FRSP | FD ( dst_r ) | FB ( dst_r )		1646928	1					
ANR	1647246	InclusiveOrExpression	FRSP | FD ( dst_r ) | FB ( dst_r )		1646928	0		|			
ANR	1647247	Identifier	FRSP		1646928	0					
ANR	1647248	InclusiveOrExpression	FD ( dst_r ) | FB ( dst_r )		1646928	1		|			
ANR	1647249	CallExpression	FD ( dst_r )		1646928	0					
ANR	1647250	Callee	FD		1646928	0					
ANR	1647251	Identifier	FD		1646928	0					
ANR	1647252	ArgumentList	dst_r		1646928	1					
ANR	1647253	Argument	dst_r		1646928	0					
ANR	1647254	Identifier	dst_r		1646928	0					
ANR	1647255	CallExpression	FB ( dst_r )		1646928	1					
ANR	1647256	Callee	FB		1646928	0					
ANR	1647257	Identifier	FB		1646928	0					
ANR	1647258	ArgumentList	dst_r		1646928	1					
ANR	1647259	Argument	dst_r		1646928	0					
ANR	1647260	Identifier	dst_r		1646928	0					
ANR	1647261	ReturnStatement	return SLJIT_SUCCESS ;	1814:1:61021:61041	1646928	6	True				
ANR	1647262	Identifier	SLJIT_SUCCESS		1646928	0					
ANR	1647263	ReturnType	static SLJIT_INLINE sljit_si		1646928	1					
ANR	1647264	Identifier	sljit_emit_fop1_convd_fromw		1646928	2					
ANR	1647265	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1646928	3					
ANR	1647266	Parameter	struct sljit_compiler * compiler	1779:57:59684:59714	1646928	0	True				
ANR	1647267	ParameterType	struct sljit_compiler *		1646928	0					
ANR	1647268	Identifier	compiler		1646928	1					
ANR	1647269	Parameter	sljit_si op	1779:90:59717:59727	1646928	1	True				
ANR	1647270	ParameterType	sljit_si		1646928	0					
ANR	1647271	Identifier	op		1646928	1					
ANR	1647272	Parameter	sljit_si dst	1780:1:59731:59742	1646928	2	True				
ANR	1647273	ParameterType	sljit_si		1646928	0					
ANR	1647274	Identifier	dst		1646928	1					
ANR	1647275	Parameter	sljit_sw dstw	1780:15:59745:59757	1646928	3	True				
ANR	1647276	ParameterType	sljit_sw		1646928	0					
ANR	1647277	Identifier	dstw		1646928	1					
ANR	1647278	Parameter	sljit_si src	1781:1:59761:59772	1646928	4	True				
ANR	1647279	ParameterType	sljit_si		1646928	0					
ANR	1647280	Identifier	src		1646928	1					
ANR	1647281	Parameter	sljit_sw srcw	1781:15:59775:59787	1646928	5	True				
ANR	1647282	ParameterType	sljit_sw		1646928	0					
ANR	1647283	Identifier	srcw		1646928	1					
ANR	1647284	CFGEntryNode	ENTRY		1646928		True				
ANR	1647285	CFGExitNode	EXIT		1646928		True				
ANR	1647286	Symbol	A		1646928						
ANR	1647287	Symbol	TMP_REG1		1646928						
ANR	1647288	Symbol	dst		1646928						
ANR	1647289	Symbol	LOAD_DATA		1646928						
ANR	1647290	Symbol	FLOAT_DATA		1646928						
ANR	1647291	Symbol	TMP_FREG1		1646928						
ANR	1647292	Symbol	SLJIT_MEM		1646928						
ANR	1647293	Symbol	FRSP		1646928						
ANR	1647294	Symbol	SLJIT_SP		1646928						
ANR	1647295	Symbol	dst_r		1646928						
ANR	1647296	Symbol	GET_OPCODE		1646928						
ANR	1647297	Symbol	EXTSW		1646928						
ANR	1647298	Symbol	SLJIT_IMM		1646928						
ANR	1647299	Symbol	SLJIT_CONVD_FROMI		1646928						
ANR	1647300	Symbol	S		1646928						
ANR	1647301	Symbol	load_immediate		1646928						
ANR	1647302	Symbol	INT_DATA		1646928						
ANR	1647303	Symbol	FLOAT_TMP_MEM_OFFSET		1646928						
ANR	1647304	Symbol	compiler		1646928						
ANR	1647305	Symbol	WORD_DATA		1646928						
ANR	1647306	Symbol	op		1646928						
ANR	1647307	Symbol	push_inst		1646928						
ANR	1647308	Symbol	FAST_IS_REG		1646928						
ANR	1647309	Symbol	src		1646928						
ANR	1647310	Symbol	srcw		1646928						
ANR	1647311	Symbol	SLJIT_SINGLE_OP		1646928						
ANR	1647312	Symbol	emit_op_mem2		1646928						
ANR	1647313	Symbol	SLJIT_SUCCESS		1646928						
ANR	1647314	Symbol	SLJIT_MEM1		1646928						
ANR	1647315	Symbol	SIGNED_DATA		1646928						
ANR	1647316	Symbol	DOUBLE_DATA		1646928						
ANR	1647317	Symbol	FB		1646928						
ANR	1647318	Symbol	dstw		1646928						
ANR	1647319	Symbol	FCFID		1646928						
ANR	1647320	Symbol	FD		1646928						
ANR	1647321	Function	sljit_emit_fop1_cmp	1857:0:63206:63725							
ANR	1647322	FunctionDef	"sljit_emit_fop1_cmp (struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1647321	0					
ANR	1647323	CompoundStatement		1860:0:63365:63725	1647321	0					
ANR	1647324	IfStatement	if ( src1 & SLJIT_MEM )		1647321	0					
ANR	1647325	Condition	src1 & SLJIT_MEM	1861:5:63372:63387	1647321	0	True				
ANR	1647326	BitAndExpression	src1 & SLJIT_MEM		1647321	0		&			
ANR	1647327	Identifier	src1		1647321	0					
ANR	1647328	Identifier	SLJIT_MEM		1647321	1					
ANR	1647329	CompoundStatement		2:23:24:24	1647321	1					
ANR	1647330	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w ) )"	1862:2:63394:63490	1647321	0	True				
ANR	1647331	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w ) )"		1647321	0					
ANR	1647332	Callee	FAIL_IF		1647321	0					
ANR	1647333	Identifier	FAIL_IF		1647321	0					
ANR	1647334	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1647321	1					
ANR	1647335	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1647321	0					
ANR	1647336	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1647321	0					
ANR	1647337	Callee	emit_op_mem2		1647321	0					
ANR	1647338	Identifier	emit_op_mem2		1647321	0					
ANR	1647339	ArgumentList	compiler		1647321	1					
ANR	1647340	Argument	compiler		1647321	0					
ANR	1647341	Identifier	compiler		1647321	0					
ANR	1647342	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1647321	1					
ANR	1647343	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1647321	0		|			
ANR	1647344	CallExpression	FLOAT_DATA ( op )		1647321	0					
ANR	1647345	Callee	FLOAT_DATA		1647321	0					
ANR	1647346	Identifier	FLOAT_DATA		1647321	0					
ANR	1647347	ArgumentList	op		1647321	1					
ANR	1647348	Argument	op		1647321	0					
ANR	1647349	Identifier	op		1647321	0					
ANR	1647350	Identifier	LOAD_DATA		1647321	1					
ANR	1647351	Argument	TMP_FREG1		1647321	2					
ANR	1647352	Identifier	TMP_FREG1		1647321	0					
ANR	1647353	Argument	src1		1647321	3					
ANR	1647354	Identifier	src1		1647321	0					
ANR	1647355	Argument	src1w		1647321	4					
ANR	1647356	Identifier	src1w		1647321	0					
ANR	1647357	Argument	src2		1647321	5					
ANR	1647358	Identifier	src2		1647321	0					
ANR	1647359	Argument	src2w		1647321	6					
ANR	1647360	Identifier	src2w		1647321	0					
ANR	1647361	ExpressionStatement	src1 = TMP_FREG1	1863:2:63494:63510	1647321	1	True				
ANR	1647362	AssignmentExpression	src1 = TMP_FREG1		1647321	0		=			
ANR	1647363	Identifier	src1		1647321	0					
ANR	1647364	Identifier	TMP_FREG1		1647321	1					
ANR	1647365	IfStatement	if ( src2 & SLJIT_MEM )		1647321	1					
ANR	1647366	Condition	src2 & SLJIT_MEM	1866:5:63521:63536	1647321	0	True				
ANR	1647367	BitAndExpression	src2 & SLJIT_MEM		1647321	0		&			
ANR	1647368	Identifier	src2		1647321	0					
ANR	1647369	Identifier	SLJIT_MEM		1647321	1					
ANR	1647370	CompoundStatement		7:23:173:173	1647321	1					
ANR	1647371	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 ) )"	1867:2:63543:63632	1647321	0	True				
ANR	1647372	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 ) )"		1647321	0					
ANR	1647373	Callee	FAIL_IF		1647321	0					
ANR	1647374	Identifier	FAIL_IF		1647321	0					
ANR	1647375	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 )"		1647321	1					
ANR	1647376	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 )"		1647321	0					
ANR	1647377	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , 0 , 0 )"		1647321	0					
ANR	1647378	Callee	emit_op_mem2		1647321	0					
ANR	1647379	Identifier	emit_op_mem2		1647321	0					
ANR	1647380	ArgumentList	compiler		1647321	1					
ANR	1647381	Argument	compiler		1647321	0					
ANR	1647382	Identifier	compiler		1647321	0					
ANR	1647383	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1647321	1					
ANR	1647384	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1647321	0		|			
ANR	1647385	CallExpression	FLOAT_DATA ( op )		1647321	0					
ANR	1647386	Callee	FLOAT_DATA		1647321	0					
ANR	1647387	Identifier	FLOAT_DATA		1647321	0					
ANR	1647388	ArgumentList	op		1647321	1					
ANR	1647389	Argument	op		1647321	0					
ANR	1647390	Identifier	op		1647321	0					
ANR	1647391	Identifier	LOAD_DATA		1647321	1					
ANR	1647392	Argument	TMP_FREG2		1647321	2					
ANR	1647393	Identifier	TMP_FREG2		1647321	0					
ANR	1647394	Argument	src2		1647321	3					
ANR	1647395	Identifier	src2		1647321	0					
ANR	1647396	Argument	src2w		1647321	4					
ANR	1647397	Identifier	src2w		1647321	0					
ANR	1647398	Argument	0		1647321	5					
ANR	1647399	PrimaryExpression	0		1647321	0					
ANR	1647400	Argument	0		1647321	6					
ANR	1647401	PrimaryExpression	0		1647321	0					
ANR	1647402	ExpressionStatement	src2 = TMP_FREG2	1868:2:63636:63652	1647321	1	True				
ANR	1647403	AssignmentExpression	src2 = TMP_FREG2		1647321	0		=			
ANR	1647404	Identifier	src2		1647321	0					
ANR	1647405	Identifier	TMP_FREG2		1647321	1					
ANR	1647406	ReturnStatement	"return push_inst ( compiler , FCMPU | CRD ( 4 ) | FA ( src1 ) | FB ( src2 ) ) ;"	1871:1:63659:63723	1647321	2	True				
ANR	1647407	CallExpression	"push_inst ( compiler , FCMPU | CRD ( 4 ) | FA ( src1 ) | FB ( src2 ) )"		1647321	0					
ANR	1647408	Callee	push_inst		1647321	0					
ANR	1647409	Identifier	push_inst		1647321	0					
ANR	1647410	ArgumentList	compiler		1647321	1					
ANR	1647411	Argument	compiler		1647321	0					
ANR	1647412	Identifier	compiler		1647321	0					
ANR	1647413	Argument	FCMPU | CRD ( 4 ) | FA ( src1 ) | FB ( src2 )		1647321	1					
ANR	1647414	InclusiveOrExpression	FCMPU | CRD ( 4 ) | FA ( src1 ) | FB ( src2 )		1647321	0		|			
ANR	1647415	Identifier	FCMPU		1647321	0					
ANR	1647416	InclusiveOrExpression	CRD ( 4 ) | FA ( src1 ) | FB ( src2 )		1647321	1		|			
ANR	1647417	CallExpression	CRD ( 4 )		1647321	0					
ANR	1647418	Callee	CRD		1647321	0					
ANR	1647419	Identifier	CRD		1647321	0					
ANR	1647420	ArgumentList	4		1647321	1					
ANR	1647421	Argument	4		1647321	0					
ANR	1647422	PrimaryExpression	4		1647321	0					
ANR	1647423	InclusiveOrExpression	FA ( src1 ) | FB ( src2 )		1647321	1		|			
ANR	1647424	CallExpression	FA ( src1 )		1647321	0					
ANR	1647425	Callee	FA		1647321	0					
ANR	1647426	Identifier	FA		1647321	0					
ANR	1647427	ArgumentList	src1		1647321	1					
ANR	1647428	Argument	src1		1647321	0					
ANR	1647429	Identifier	src1		1647321	0					
ANR	1647430	CallExpression	FB ( src2 )		1647321	1					
ANR	1647431	Callee	FB		1647321	0					
ANR	1647432	Identifier	FB		1647321	0					
ANR	1647433	ArgumentList	src2		1647321	1					
ANR	1647434	Argument	src2		1647321	0					
ANR	1647435	Identifier	src2		1647321	0					
ANR	1647436	ReturnType	static SLJIT_INLINE sljit_si		1647321	1					
ANR	1647437	Identifier	sljit_emit_fop1_cmp		1647321	2					
ANR	1647438	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1647321	3					
ANR	1647439	Parameter	struct sljit_compiler * compiler	1857:49:63255:63285	1647321	0	True				
ANR	1647440	ParameterType	struct sljit_compiler *		1647321	0					
ANR	1647441	Identifier	compiler		1647321	1					
ANR	1647442	Parameter	sljit_si op	1857:82:63288:63298	1647321	1	True				
ANR	1647443	ParameterType	sljit_si		1647321	0					
ANR	1647444	Identifier	op		1647321	1					
ANR	1647445	Parameter	sljit_si src1	1858:1:63302:63314	1647321	2	True				
ANR	1647446	ParameterType	sljit_si		1647321	0					
ANR	1647447	Identifier	src1		1647321	1					
ANR	1647448	Parameter	sljit_sw src1w	1858:16:63317:63330	1647321	3	True				
ANR	1647449	ParameterType	sljit_sw		1647321	0					
ANR	1647450	Identifier	src1w		1647321	1					
ANR	1647451	Parameter	sljit_si src2	1859:1:63334:63346	1647321	4	True				
ANR	1647452	ParameterType	sljit_si		1647321	0					
ANR	1647453	Identifier	src2		1647321	1					
ANR	1647454	Parameter	sljit_sw src2w	1859:16:63349:63362	1647321	5	True				
ANR	1647455	ParameterType	sljit_sw		1647321	0					
ANR	1647456	Identifier	src2w		1647321	1					
ANR	1647457	CFGEntryNode	ENTRY		1647321		True				
ANR	1647458	CFGExitNode	EXIT		1647321		True				
ANR	1647459	Symbol	src2w		1647321						
ANR	1647460	Symbol	op		1647321						
ANR	1647461	Symbol	push_inst		1647321						
ANR	1647462	Symbol	TMP_FREG2		1647321						
ANR	1647463	Symbol	src1w		1647321						
ANR	1647464	Symbol	LOAD_DATA		1647321						
ANR	1647465	Symbol	FLOAT_DATA		1647321						
ANR	1647466	Symbol	TMP_FREG1		1647321						
ANR	1647467	Symbol	SLJIT_MEM		1647321						
ANR	1647468	Symbol	emit_op_mem2		1647321						
ANR	1647469	Symbol	FCMPU		1647321						
ANR	1647470	Symbol	CRD		1647321						
ANR	1647471	Symbol	src1		1647321						
ANR	1647472	Symbol	src2		1647321						
ANR	1647473	Symbol	FA		1647321						
ANR	1647474	Symbol	compiler		1647321						
ANR	1647475	Symbol	FB		1647321						
ANR	1647476	Function	sljit_emit_fop1	1874:0:63728:65065							
ANR	1647477	FunctionDef	"sljit_emit_fop1 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw)"		1647476	0					
ANR	1647478	CompoundStatement		1877:0:63884:65065	1647476	0					
ANR	1647479	IdentifierDeclStatement	sljit_si dst_r ;	1878:1:63887:63901	1647476	0	True				
ANR	1647480	IdentifierDecl	dst_r		1647476	0					
ANR	1647481	IdentifierDeclType	sljit_si		1647476	0					
ANR	1647482	Identifier	dst_r		1647476	1					
ANR	1647483	ExpressionStatement	CHECK_ERROR ( )	1880:1:63905:63918	1647476	1	True				
ANR	1647484	CallExpression	CHECK_ERROR ( )		1647476	0					
ANR	1647485	Callee	CHECK_ERROR		1647476	0					
ANR	1647486	Identifier	CHECK_ERROR		1647476	0					
ANR	1647487	ArgumentList			1647476	1					
ANR	1647488	ExpressionStatement	compiler -> cache_arg = 0	1881:1:63921:63944	1647476	2	True				
ANR	1647489	AssignmentExpression	compiler -> cache_arg = 0		1647476	0		=			
ANR	1647490	PtrMemberAccess	compiler -> cache_arg		1647476	0					
ANR	1647491	Identifier	compiler		1647476	0					
ANR	1647492	Identifier	cache_arg		1647476	1					
ANR	1647493	PrimaryExpression	0		1647476	1					
ANR	1647494	ExpressionStatement	compiler -> cache_argw = 0	1882:1:63947:63971	1647476	3	True				
ANR	1647495	AssignmentExpression	compiler -> cache_argw = 0		1647476	0		=			
ANR	1647496	PtrMemberAccess	compiler -> cache_argw		1647476	0					
ANR	1647497	Identifier	compiler		1647476	0					
ANR	1647498	Identifier	cache_argw		1647476	1					
ANR	1647499	PrimaryExpression	0		1647476	1					
ANR	1647500	ExpressionStatement	"SLJIT_COMPILE_ASSERT ( ( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x4 ) , float_transfer_bit_error )"	1884:1:63975:64073	1647476	4	True				
ANR	1647501	CallExpression	"SLJIT_COMPILE_ASSERT ( ( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x4 ) , float_transfer_bit_error )"		1647476	0					
ANR	1647502	Callee	SLJIT_COMPILE_ASSERT		1647476	0					
ANR	1647503	Identifier	SLJIT_COMPILE_ASSERT		1647476	0					
ANR	1647504	ArgumentList	( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x4 )		1647476	1					
ANR	1647505	Argument	( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x4 )		1647476	0					
ANR	1647506	AndExpression	( SLJIT_SINGLE_OP == 0x100 ) && ! ( DOUBLE_DATA & 0x4 )		1647476	0		&&			
ANR	1647507	EqualityExpression	SLJIT_SINGLE_OP == 0x100		1647476	0		==			
ANR	1647508	Identifier	SLJIT_SINGLE_OP		1647476	0					
ANR	1647509	PrimaryExpression	0x100		1647476	1					
ANR	1647510	UnaryOperationExpression	! ( DOUBLE_DATA & 0x4 )		1647476	1					
ANR	1647511	UnaryOperator	!		1647476	0					
ANR	1647512	BitAndExpression	DOUBLE_DATA & 0x4		1647476	1		&			
ANR	1647513	Identifier	DOUBLE_DATA		1647476	0					
ANR	1647514	PrimaryExpression	0x4		1647476	1					
ANR	1647515	Argument	float_transfer_bit_error		1647476	1					
ANR	1647516	Identifier	float_transfer_bit_error		1647476	0					
ANR	1647517	ExpressionStatement	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"	1885:1:64076:64145	1647476	5	True				
ANR	1647518	CallExpression	"SELECT_FOP1_OPERATION_WITH_CHECKS ( compiler , op , dst , dstw , src , srcw )"		1647476	0					
ANR	1647519	Callee	SELECT_FOP1_OPERATION_WITH_CHECKS		1647476	0					
ANR	1647520	Identifier	SELECT_FOP1_OPERATION_WITH_CHECKS		1647476	0					
ANR	1647521	ArgumentList	compiler		1647476	1					
ANR	1647522	Argument	compiler		1647476	0					
ANR	1647523	Identifier	compiler		1647476	0					
ANR	1647524	Argument	op		1647476	1					
ANR	1647525	Identifier	op		1647476	0					
ANR	1647526	Argument	dst		1647476	2					
ANR	1647527	Identifier	dst		1647476	0					
ANR	1647528	Argument	dstw		1647476	3					
ANR	1647529	Identifier	dstw		1647476	0					
ANR	1647530	Argument	src		1647476	4					
ANR	1647531	Identifier	src		1647476	0					
ANR	1647532	Argument	srcw		1647476	5					
ANR	1647533	Identifier	srcw		1647476	0					
ANR	1647534	IfStatement	if ( GET_OPCODE ( op ) == SLJIT_CONVD_FROMS )		1647476	6					
ANR	1647535	Condition	GET_OPCODE ( op ) == SLJIT_CONVD_FROMS	1887:5:64153:64187	1647476	0	True				
ANR	1647536	EqualityExpression	GET_OPCODE ( op ) == SLJIT_CONVD_FROMS		1647476	0		==			
ANR	1647537	CallExpression	GET_OPCODE ( op )		1647476	0					
ANR	1647538	Callee	GET_OPCODE		1647476	0					
ANR	1647539	Identifier	GET_OPCODE		1647476	0					
ANR	1647540	ArgumentList	op		1647476	1					
ANR	1647541	Argument	op		1647476	0					
ANR	1647542	Identifier	op		1647476	0					
ANR	1647543	Identifier	SLJIT_CONVD_FROMS		1647476	1					
ANR	1647544	ExpressionStatement	op ^= SLJIT_SINGLE_OP	1888:2:64192:64213	1647476	1	True				
ANR	1647545	AssignmentExpression	op ^= SLJIT_SINGLE_OP		1647476	0		^=			
ANR	1647546	Identifier	op		1647476	0					
ANR	1647547	Identifier	SLJIT_SINGLE_OP		1647476	1					
ANR	1647548	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1	1890:1:64217:64259	1647476	7	True				
ANR	1647549	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1647476	0		=			
ANR	1647550	Identifier	dst_r		1647476	0					
ANR	1647551	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG1		1647476	1					
ANR	1647552	Condition	FAST_IS_REG ( dst )		1647476	0					
ANR	1647553	CallExpression	FAST_IS_REG ( dst )		1647476	0					
ANR	1647554	Callee	FAST_IS_REG		1647476	0					
ANR	1647555	Identifier	FAST_IS_REG		1647476	0					
ANR	1647556	ArgumentList	dst		1647476	1					
ANR	1647557	Argument	dst		1647476	0					
ANR	1647558	Identifier	dst		1647476	0					
ANR	1647559	Identifier	dst		1647476	1					
ANR	1647560	Identifier	TMP_FREG1		1647476	2					
ANR	1647561	IfStatement	if ( src & SLJIT_MEM )		1647476	8					
ANR	1647562	Condition	src & SLJIT_MEM	1892:5:64267:64281	1647476	0	True				
ANR	1647563	BitAndExpression	src & SLJIT_MEM		1647476	0		&			
ANR	1647564	Identifier	src		1647476	0					
ANR	1647565	Identifier	SLJIT_MEM		1647476	1					
ANR	1647566	CompoundStatement		16:22:399:399	1647476	1					
ANR	1647567	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw ) )"	1893:2:64288:64376	1647476	0	True				
ANR	1647568	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw ) )"		1647476	0					
ANR	1647569	Callee	FAIL_IF		1647476	0					
ANR	1647570	Identifier	FAIL_IF		1647476	0					
ANR	1647571	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw )"		1647476	1					
ANR	1647572	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw )"		1647476	0					
ANR	1647573	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , dst_r , src , srcw , dst , dstw )"		1647476	0					
ANR	1647574	Callee	emit_op_mem2		1647476	0					
ANR	1647575	Identifier	emit_op_mem2		1647476	0					
ANR	1647576	ArgumentList	compiler		1647476	1					
ANR	1647577	Argument	compiler		1647476	0					
ANR	1647578	Identifier	compiler		1647476	0					
ANR	1647579	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1647476	1					
ANR	1647580	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1647476	0		|			
ANR	1647581	CallExpression	FLOAT_DATA ( op )		1647476	0					
ANR	1647582	Callee	FLOAT_DATA		1647476	0					
ANR	1647583	Identifier	FLOAT_DATA		1647476	0					
ANR	1647584	ArgumentList	op		1647476	1					
ANR	1647585	Argument	op		1647476	0					
ANR	1647586	Identifier	op		1647476	0					
ANR	1647587	Identifier	LOAD_DATA		1647476	1					
ANR	1647588	Argument	dst_r		1647476	2					
ANR	1647589	Identifier	dst_r		1647476	0					
ANR	1647590	Argument	src		1647476	3					
ANR	1647591	Identifier	src		1647476	0					
ANR	1647592	Argument	srcw		1647476	4					
ANR	1647593	Identifier	srcw		1647476	0					
ANR	1647594	Argument	dst		1647476	5					
ANR	1647595	Identifier	dst		1647476	0					
ANR	1647596	Argument	dstw		1647476	6					
ANR	1647597	Identifier	dstw		1647476	0					
ANR	1647598	ExpressionStatement	src = dst_r	1894:2:64380:64391	1647476	1	True				
ANR	1647599	AssignmentExpression	src = dst_r		1647476	0		=			
ANR	1647600	Identifier	src		1647476	0					
ANR	1647601	Identifier	dst_r		1647476	1					
ANR	1647602	SwitchStatement	switch ( GET_OPCODE ( op ) )		1647476	9					
ANR	1647603	Condition	GET_OPCODE ( op )	1897:9:64406:64419	1647476	0	True				
ANR	1647604	CallExpression	GET_OPCODE ( op )		1647476	0					
ANR	1647605	Callee	GET_OPCODE		1647476	0					
ANR	1647606	Identifier	GET_OPCODE		1647476	0					
ANR	1647607	ArgumentList	op		1647476	1					
ANR	1647608	Argument	op		1647476	0					
ANR	1647609	Identifier	op		1647476	0					
ANR	1647610	CompoundStatement		21:25:537:537	1647476	1					
ANR	1647611	Label	case SLJIT_CONVD_FROMS :	1898:1:64425:64447	1647476	0	True				
ANR	1647612	Identifier	SLJIT_CONVD_FROMS		1647476	0					
ANR	1647613	ExpressionStatement	op ^= SLJIT_SINGLE_OP	1899:2:64451:64472	1647476	1	True				
ANR	1647614	AssignmentExpression	op ^= SLJIT_SINGLE_OP		1647476	0		^=			
ANR	1647615	Identifier	op		1647476	0					
ANR	1647616	Identifier	SLJIT_SINGLE_OP		1647476	1					
ANR	1647617	IfStatement	if ( op & SLJIT_SINGLE_OP )		1647476	2					
ANR	1647618	Condition	op & SLJIT_SINGLE_OP	1900:6:64480:64499	1647476	0	True				
ANR	1647619	BitAndExpression	op & SLJIT_SINGLE_OP		1647476	0		&			
ANR	1647620	Identifier	op		1647476	0					
ANR	1647621	Identifier	SLJIT_SINGLE_OP		1647476	1					
ANR	1647622	CompoundStatement		24:28:617:617	1647476	1					
ANR	1647623	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , FRSP | FD ( dst_r ) | FB ( src ) ) )"	1901:3:64507:64563	1647476	0	True				
ANR	1647624	CallExpression	"FAIL_IF ( push_inst ( compiler , FRSP | FD ( dst_r ) | FB ( src ) ) )"		1647476	0					
ANR	1647625	Callee	FAIL_IF		1647476	0					
ANR	1647626	Identifier	FAIL_IF		1647476	0					
ANR	1647627	ArgumentList	"push_inst ( compiler , FRSP | FD ( dst_r ) | FB ( src ) )"		1647476	1					
ANR	1647628	Argument	"push_inst ( compiler , FRSP | FD ( dst_r ) | FB ( src ) )"		1647476	0					
ANR	1647629	CallExpression	"push_inst ( compiler , FRSP | FD ( dst_r ) | FB ( src ) )"		1647476	0					
ANR	1647630	Callee	push_inst		1647476	0					
ANR	1647631	Identifier	push_inst		1647476	0					
ANR	1647632	ArgumentList	compiler		1647476	1					
ANR	1647633	Argument	compiler		1647476	0					
ANR	1647634	Identifier	compiler		1647476	0					
ANR	1647635	Argument	FRSP | FD ( dst_r ) | FB ( src )		1647476	1					
ANR	1647636	InclusiveOrExpression	FRSP | FD ( dst_r ) | FB ( src )		1647476	0		|			
ANR	1647637	Identifier	FRSP		1647476	0					
ANR	1647638	InclusiveOrExpression	FD ( dst_r ) | FB ( src )		1647476	1		|			
ANR	1647639	CallExpression	FD ( dst_r )		1647476	0					
ANR	1647640	Callee	FD		1647476	0					
ANR	1647641	Identifier	FD		1647476	0					
ANR	1647642	ArgumentList	dst_r		1647476	1					
ANR	1647643	Argument	dst_r		1647476	0					
ANR	1647644	Identifier	dst_r		1647476	0					
ANR	1647645	CallExpression	FB ( src )		1647476	1					
ANR	1647646	Callee	FB		1647476	0					
ANR	1647647	Identifier	FB		1647476	0					
ANR	1647648	ArgumentList	src		1647476	1					
ANR	1647649	Argument	src		1647476	0					
ANR	1647650	Identifier	src		1647476	0					
ANR	1647651	BreakStatement	break ;	1902:3:64568:64573	1647476	1	True				
ANR	1647652	Label	case SLJIT_DMOV :	1905:1:64602:64617	1647476	3	True				
ANR	1647653	Identifier	SLJIT_DMOV		1647476	0					
ANR	1647654	IfStatement	if ( src != dst_r )		1647476	4					
ANR	1647655	Condition	src != dst_r	1906:6:64625:64636	1647476	0	True				
ANR	1647656	EqualityExpression	src != dst_r		1647476	0		!=			
ANR	1647657	Identifier	src		1647476	0					
ANR	1647658	Identifier	dst_r		1647476	1					
ANR	1647659	CompoundStatement		30:20:754:754	1647476	1					
ANR	1647660	IfStatement	if ( dst_r != TMP_FREG1 )		1647476	0					
ANR	1647661	Condition	dst_r != TMP_FREG1	1907:7:64648:64665	1647476	0	True				
ANR	1647662	EqualityExpression	dst_r != TMP_FREG1		1647476	0		!=			
ANR	1647663	Identifier	dst_r		1647476	0					
ANR	1647664	Identifier	TMP_FREG1		1647476	1					
ANR	1647665	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , FMR | FD ( dst_r ) | FB ( src ) ) )"	1908:4:64672:64727	1647476	1	True				
ANR	1647666	CallExpression	"FAIL_IF ( push_inst ( compiler , FMR | FD ( dst_r ) | FB ( src ) ) )"		1647476	0					
ANR	1647667	Callee	FAIL_IF		1647476	0					
ANR	1647668	Identifier	FAIL_IF		1647476	0					
ANR	1647669	ArgumentList	"push_inst ( compiler , FMR | FD ( dst_r ) | FB ( src ) )"		1647476	1					
ANR	1647670	Argument	"push_inst ( compiler , FMR | FD ( dst_r ) | FB ( src ) )"		1647476	0					
ANR	1647671	CallExpression	"push_inst ( compiler , FMR | FD ( dst_r ) | FB ( src ) )"		1647476	0					
ANR	1647672	Callee	push_inst		1647476	0					
ANR	1647673	Identifier	push_inst		1647476	0					
ANR	1647674	ArgumentList	compiler		1647476	1					
ANR	1647675	Argument	compiler		1647476	0					
ANR	1647676	Identifier	compiler		1647476	0					
ANR	1647677	Argument	FMR | FD ( dst_r ) | FB ( src )		1647476	1					
ANR	1647678	InclusiveOrExpression	FMR | FD ( dst_r ) | FB ( src )		1647476	0		|			
ANR	1647679	Identifier	FMR		1647476	0					
ANR	1647680	InclusiveOrExpression	FD ( dst_r ) | FB ( src )		1647476	1		|			
ANR	1647681	CallExpression	FD ( dst_r )		1647476	0					
ANR	1647682	Callee	FD		1647476	0					
ANR	1647683	Identifier	FD		1647476	0					
ANR	1647684	ArgumentList	dst_r		1647476	1					
ANR	1647685	Argument	dst_r		1647476	0					
ANR	1647686	Identifier	dst_r		1647476	0					
ANR	1647687	CallExpression	FB ( src )		1647476	1					
ANR	1647688	Callee	FB		1647476	0					
ANR	1647689	Identifier	FB		1647476	0					
ANR	1647690	ArgumentList	src		1647476	1					
ANR	1647691	Argument	src		1647476	0					
ANR	1647692	Identifier	src		1647476	0					
ANR	1647693	ElseStatement	else		1647476	0					
ANR	1647694	ExpressionStatement	dst_r = src	1910:4:64741:64752	1647476	0	True				
ANR	1647695	AssignmentExpression	dst_r = src		1647476	0		=			
ANR	1647696	Identifier	dst_r		1647476	0					
ANR	1647697	Identifier	src		1647476	1					
ANR	1647698	BreakStatement	break ;	1912:2:64760:64765	1647476	5	True				
ANR	1647699	Label	case SLJIT_DNEG :	1913:1:64768:64783	1647476	6	True				
ANR	1647700	Identifier	SLJIT_DNEG		1647476	0					
ANR	1647701	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , FNEG | FD ( dst_r ) | FB ( src ) ) )"	1914:2:64787:64843	1647476	7	True				
ANR	1647702	CallExpression	"FAIL_IF ( push_inst ( compiler , FNEG | FD ( dst_r ) | FB ( src ) ) )"		1647476	0					
ANR	1647703	Callee	FAIL_IF		1647476	0					
ANR	1647704	Identifier	FAIL_IF		1647476	0					
ANR	1647705	ArgumentList	"push_inst ( compiler , FNEG | FD ( dst_r ) | FB ( src ) )"		1647476	1					
ANR	1647706	Argument	"push_inst ( compiler , FNEG | FD ( dst_r ) | FB ( src ) )"		1647476	0					
ANR	1647707	CallExpression	"push_inst ( compiler , FNEG | FD ( dst_r ) | FB ( src ) )"		1647476	0					
ANR	1647708	Callee	push_inst		1647476	0					
ANR	1647709	Identifier	push_inst		1647476	0					
ANR	1647710	ArgumentList	compiler		1647476	1					
ANR	1647711	Argument	compiler		1647476	0					
ANR	1647712	Identifier	compiler		1647476	0					
ANR	1647713	Argument	FNEG | FD ( dst_r ) | FB ( src )		1647476	1					
ANR	1647714	InclusiveOrExpression	FNEG | FD ( dst_r ) | FB ( src )		1647476	0		|			
ANR	1647715	Identifier	FNEG		1647476	0					
ANR	1647716	InclusiveOrExpression	FD ( dst_r ) | FB ( src )		1647476	1		|			
ANR	1647717	CallExpression	FD ( dst_r )		1647476	0					
ANR	1647718	Callee	FD		1647476	0					
ANR	1647719	Identifier	FD		1647476	0					
ANR	1647720	ArgumentList	dst_r		1647476	1					
ANR	1647721	Argument	dst_r		1647476	0					
ANR	1647722	Identifier	dst_r		1647476	0					
ANR	1647723	CallExpression	FB ( src )		1647476	1					
ANR	1647724	Callee	FB		1647476	0					
ANR	1647725	Identifier	FB		1647476	0					
ANR	1647726	ArgumentList	src		1647476	1					
ANR	1647727	Argument	src		1647476	0					
ANR	1647728	Identifier	src		1647476	0					
ANR	1647729	BreakStatement	break ;	1915:2:64847:64852	1647476	8	True				
ANR	1647730	Label	case SLJIT_DABS :	1916:1:64855:64870	1647476	9	True				
ANR	1647731	Identifier	SLJIT_DABS		1647476	0					
ANR	1647732	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , FABS | FD ( dst_r ) | FB ( src ) ) )"	1917:2:64874:64930	1647476	10	True				
ANR	1647733	CallExpression	"FAIL_IF ( push_inst ( compiler , FABS | FD ( dst_r ) | FB ( src ) ) )"		1647476	0					
ANR	1647734	Callee	FAIL_IF		1647476	0					
ANR	1647735	Identifier	FAIL_IF		1647476	0					
ANR	1647736	ArgumentList	"push_inst ( compiler , FABS | FD ( dst_r ) | FB ( src ) )"		1647476	1					
ANR	1647737	Argument	"push_inst ( compiler , FABS | FD ( dst_r ) | FB ( src ) )"		1647476	0					
ANR	1647738	CallExpression	"push_inst ( compiler , FABS | FD ( dst_r ) | FB ( src ) )"		1647476	0					
ANR	1647739	Callee	push_inst		1647476	0					
ANR	1647740	Identifier	push_inst		1647476	0					
ANR	1647741	ArgumentList	compiler		1647476	1					
ANR	1647742	Argument	compiler		1647476	0					
ANR	1647743	Identifier	compiler		1647476	0					
ANR	1647744	Argument	FABS | FD ( dst_r ) | FB ( src )		1647476	1					
ANR	1647745	InclusiveOrExpression	FABS | FD ( dst_r ) | FB ( src )		1647476	0		|			
ANR	1647746	Identifier	FABS		1647476	0					
ANR	1647747	InclusiveOrExpression	FD ( dst_r ) | FB ( src )		1647476	1		|			
ANR	1647748	CallExpression	FD ( dst_r )		1647476	0					
ANR	1647749	Callee	FD		1647476	0					
ANR	1647750	Identifier	FD		1647476	0					
ANR	1647751	ArgumentList	dst_r		1647476	1					
ANR	1647752	Argument	dst_r		1647476	0					
ANR	1647753	Identifier	dst_r		1647476	0					
ANR	1647754	CallExpression	FB ( src )		1647476	1					
ANR	1647755	Callee	FB		1647476	0					
ANR	1647756	Identifier	FB		1647476	0					
ANR	1647757	ArgumentList	src		1647476	1					
ANR	1647758	Argument	src		1647476	0					
ANR	1647759	Identifier	src		1647476	0					
ANR	1647760	BreakStatement	break ;	1918:2:64934:64939	1647476	11	True				
ANR	1647761	IfStatement	if ( dst & SLJIT_MEM )		1647476	10					
ANR	1647762	Condition	dst & SLJIT_MEM	1921:5:64950:64964	1647476	0	True				
ANR	1647763	BitAndExpression	dst & SLJIT_MEM		1647476	0		&			
ANR	1647764	Identifier	dst		1647476	0					
ANR	1647765	Identifier	SLJIT_MEM		1647476	1					
ANR	1647766	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , dst_r , dst , dstw , 0 , 0 ) )"	1922:2:64969:65040	1647476	1	True				
ANR	1647767	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , dst_r , dst , dstw , 0 , 0 ) )"		1647476	0					
ANR	1647768	Callee	FAIL_IF		1647476	0					
ANR	1647769	Identifier	FAIL_IF		1647476	0					
ANR	1647770	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , dst_r , dst , dstw , 0 , 0 )"		1647476	1					
ANR	1647771	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , dst_r , dst , dstw , 0 , 0 )"		1647476	0					
ANR	1647772	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , dst_r , dst , dstw , 0 , 0 )"		1647476	0					
ANR	1647773	Callee	emit_op_mem2		1647476	0					
ANR	1647774	Identifier	emit_op_mem2		1647476	0					
ANR	1647775	ArgumentList	compiler		1647476	1					
ANR	1647776	Argument	compiler		1647476	0					
ANR	1647777	Identifier	compiler		1647476	0					
ANR	1647778	Argument	FLOAT_DATA ( op )		1647476	1					
ANR	1647779	CallExpression	FLOAT_DATA ( op )		1647476	0					
ANR	1647780	Callee	FLOAT_DATA		1647476	0					
ANR	1647781	Identifier	FLOAT_DATA		1647476	0					
ANR	1647782	ArgumentList	op		1647476	1					
ANR	1647783	Argument	op		1647476	0					
ANR	1647784	Identifier	op		1647476	0					
ANR	1647785	Argument	dst_r		1647476	2					
ANR	1647786	Identifier	dst_r		1647476	0					
ANR	1647787	Argument	dst		1647476	3					
ANR	1647788	Identifier	dst		1647476	0					
ANR	1647789	Argument	dstw		1647476	4					
ANR	1647790	Identifier	dstw		1647476	0					
ANR	1647791	Argument	0		1647476	5					
ANR	1647792	PrimaryExpression	0		1647476	0					
ANR	1647793	Argument	0		1647476	6					
ANR	1647794	PrimaryExpression	0		1647476	0					
ANR	1647795	ReturnStatement	return SLJIT_SUCCESS ;	1923:1:65043:65063	1647476	11	True				
ANR	1647796	Identifier	SLJIT_SUCCESS		1647476	0					
ANR	1647797	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1647476	1					
ANR	1647798	Identifier	sljit_emit_fop1		1647476	2					
ANR	1647799	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw"		1647476	3					
ANR	1647800	Parameter	struct sljit_compiler * compiler	1874:50:63778:63808	1647476	0	True				
ANR	1647801	ParameterType	struct sljit_compiler *		1647476	0					
ANR	1647802	Identifier	compiler		1647476	1					
ANR	1647803	Parameter	sljit_si op	1874:83:63811:63821	1647476	1	True				
ANR	1647804	ParameterType	sljit_si		1647476	0					
ANR	1647805	Identifier	op		1647476	1					
ANR	1647806	Parameter	sljit_si dst	1875:1:63825:63836	1647476	2	True				
ANR	1647807	ParameterType	sljit_si		1647476	0					
ANR	1647808	Identifier	dst		1647476	1					
ANR	1647809	Parameter	sljit_sw dstw	1875:15:63839:63851	1647476	3	True				
ANR	1647810	ParameterType	sljit_sw		1647476	0					
ANR	1647811	Identifier	dstw		1647476	1					
ANR	1647812	Parameter	sljit_si src	1876:1:63855:63866	1647476	4	True				
ANR	1647813	ParameterType	sljit_si		1647476	0					
ANR	1647814	Identifier	src		1647476	1					
ANR	1647815	Parameter	sljit_sw srcw	1876:15:63869:63881	1647476	5	True				
ANR	1647816	ParameterType	sljit_sw		1647476	0					
ANR	1647817	Identifier	srcw		1647476	1					
ANR	1647818	CFGEntryNode	ENTRY		1647476		True				
ANR	1647819	CFGExitNode	EXIT		1647476		True				
ANR	1647820	Symbol	compiler -> cache_argw		1647476						
ANR	1647821	Symbol	dst		1647476						
ANR	1647822	Symbol	LOAD_DATA		1647476						
ANR	1647823	Symbol	FLOAT_DATA		1647476						
ANR	1647824	Symbol	TMP_FREG1		1647476						
ANR	1647825	Symbol	SLJIT_MEM		1647476						
ANR	1647826	Symbol	SLJIT_CONVD_FROMS		1647476						
ANR	1647827	Symbol	FRSP		1647476						
ANR	1647828	Symbol	FNEG		1647476						
ANR	1647829	Symbol	* compiler		1647476						
ANR	1647830	Symbol	dst_r		1647476						
ANR	1647831	Symbol	GET_OPCODE		1647476						
ANR	1647832	Symbol	float_transfer_bit_error		1647476						
ANR	1647833	Symbol	compiler		1647476						
ANR	1647834	Symbol	op		1647476						
ANR	1647835	Symbol	push_inst		1647476						
ANR	1647836	Symbol	FAST_IS_REG		1647476						
ANR	1647837	Symbol	src		1647476						
ANR	1647838	Symbol	srcw		1647476						
ANR	1647839	Symbol	compiler -> cache_arg		1647476						
ANR	1647840	Symbol	SLJIT_SINGLE_OP		1647476						
ANR	1647841	Symbol	emit_op_mem2		1647476						
ANR	1647842	Symbol	FMR		1647476						
ANR	1647843	Symbol	SLJIT_SUCCESS		1647476						
ANR	1647844	Symbol	FABS		1647476						
ANR	1647845	Symbol	DOUBLE_DATA		1647476						
ANR	1647846	Symbol	FB		1647476						
ANR	1647847	Symbol	dstw		1647476						
ANR	1647848	Symbol	FD		1647476						
ANR	1647849	Function	sljit_emit_fop2	1926:0:65068:67567							
ANR	1647850	FunctionDef	"sljit_emit_fop2 (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w)"		1647849	0					
ANR	1647851	CompoundStatement		1930:0:65258:67567	1647849	0					
ANR	1647852	IdentifierDeclStatement	"sljit_si dst_r , flags = 0 ;"	1931:1:65261:65286	1647849	0	True				
ANR	1647853	IdentifierDecl	dst_r		1647849	0					
ANR	1647854	IdentifierDeclType	sljit_si		1647849	0					
ANR	1647855	Identifier	dst_r		1647849	1					
ANR	1647856	IdentifierDecl	flags = 0		1647849	1					
ANR	1647857	IdentifierDeclType	sljit_si		1647849	0					
ANR	1647858	Identifier	flags		1647849	1					
ANR	1647859	AssignmentExpression	flags = 0		1647849	2		=			
ANR	1647860	Identifier	flags		1647849	0					
ANR	1647861	PrimaryExpression	0		1647849	1					
ANR	1647862	ExpressionStatement	CHECK_ERROR ( )	1933:1:65290:65303	1647849	1	True				
ANR	1647863	CallExpression	CHECK_ERROR ( )		1647849	0					
ANR	1647864	Callee	CHECK_ERROR		1647849	0					
ANR	1647865	Identifier	CHECK_ERROR		1647849	0					
ANR	1647866	ArgumentList			1647849	1					
ANR	1647867	ExpressionStatement	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"	1934:1:65306:65385	1647849	2	True				
ANR	1647868	CallExpression	"CHECK ( check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w ) )"		1647849	0					
ANR	1647869	Callee	CHECK		1647849	0					
ANR	1647870	Identifier	CHECK		1647849	0					
ANR	1647871	ArgumentList	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1647849	1					
ANR	1647872	Argument	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1647849	0					
ANR	1647873	CallExpression	"check_sljit_emit_fop2 ( compiler , op , dst , dstw , src1 , src1w , src2 , src2w )"		1647849	0					
ANR	1647874	Callee	check_sljit_emit_fop2		1647849	0					
ANR	1647875	Identifier	check_sljit_emit_fop2		1647849	0					
ANR	1647876	ArgumentList	compiler		1647849	1					
ANR	1647877	Argument	compiler		1647849	0					
ANR	1647878	Identifier	compiler		1647849	0					
ANR	1647879	Argument	op		1647849	1					
ANR	1647880	Identifier	op		1647849	0					
ANR	1647881	Argument	dst		1647849	2					
ANR	1647882	Identifier	dst		1647849	0					
ANR	1647883	Argument	dstw		1647849	3					
ANR	1647884	Identifier	dstw		1647849	0					
ANR	1647885	Argument	src1		1647849	4					
ANR	1647886	Identifier	src1		1647849	0					
ANR	1647887	Argument	src1w		1647849	5					
ANR	1647888	Identifier	src1w		1647849	0					
ANR	1647889	Argument	src2		1647849	6					
ANR	1647890	Identifier	src2		1647849	0					
ANR	1647891	Argument	src2w		1647849	7					
ANR	1647892	Identifier	src2w		1647849	0					
ANR	1647893	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	1935:1:65388:65418	1647849	3	True				
ANR	1647894	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1647849	0					
ANR	1647895	Callee	ADJUST_LOCAL_OFFSET		1647849	0					
ANR	1647896	Identifier	ADJUST_LOCAL_OFFSET		1647849	0					
ANR	1647897	ArgumentList	dst		1647849	1					
ANR	1647898	Argument	dst		1647849	0					
ANR	1647899	Identifier	dst		1647849	0					
ANR	1647900	Argument	dstw		1647849	1					
ANR	1647901	Identifier	dstw		1647849	0					
ANR	1647902	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"	1936:1:65421:65453	1647849	4	True				
ANR	1647903	CallExpression	"ADJUST_LOCAL_OFFSET ( src1 , src1w )"		1647849	0					
ANR	1647904	Callee	ADJUST_LOCAL_OFFSET		1647849	0					
ANR	1647905	Identifier	ADJUST_LOCAL_OFFSET		1647849	0					
ANR	1647906	ArgumentList	src1		1647849	1					
ANR	1647907	Argument	src1		1647849	0					
ANR	1647908	Identifier	src1		1647849	0					
ANR	1647909	Argument	src1w		1647849	1					
ANR	1647910	Identifier	src1w		1647849	0					
ANR	1647911	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"	1937:1:65456:65488	1647849	5	True				
ANR	1647912	CallExpression	"ADJUST_LOCAL_OFFSET ( src2 , src2w )"		1647849	0					
ANR	1647913	Callee	ADJUST_LOCAL_OFFSET		1647849	0					
ANR	1647914	Identifier	ADJUST_LOCAL_OFFSET		1647849	0					
ANR	1647915	ArgumentList	src2		1647849	1					
ANR	1647916	Argument	src2		1647849	0					
ANR	1647917	Identifier	src2		1647849	0					
ANR	1647918	Argument	src2w		1647849	1					
ANR	1647919	Identifier	src2w		1647849	0					
ANR	1647920	ExpressionStatement	compiler -> cache_arg = 0	1939:1:65492:65515	1647849	6	True				
ANR	1647921	AssignmentExpression	compiler -> cache_arg = 0		1647849	0		=			
ANR	1647922	PtrMemberAccess	compiler -> cache_arg		1647849	0					
ANR	1647923	Identifier	compiler		1647849	0					
ANR	1647924	Identifier	cache_arg		1647849	1					
ANR	1647925	PrimaryExpression	0		1647849	1					
ANR	1647926	ExpressionStatement	compiler -> cache_argw = 0	1940:1:65518:65542	1647849	7	True				
ANR	1647927	AssignmentExpression	compiler -> cache_argw = 0		1647849	0		=			
ANR	1647928	PtrMemberAccess	compiler -> cache_argw		1647849	0					
ANR	1647929	Identifier	compiler		1647849	0					
ANR	1647930	Identifier	cache_argw		1647849	1					
ANR	1647931	PrimaryExpression	0		1647849	1					
ANR	1647932	ExpressionStatement	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG2	1942:1:65546:65588	1647849	8	True				
ANR	1647933	AssignmentExpression	dst_r = FAST_IS_REG ( dst ) ? dst : TMP_FREG2		1647849	0		=			
ANR	1647934	Identifier	dst_r		1647849	0					
ANR	1647935	ConditionalExpression	FAST_IS_REG ( dst ) ? dst : TMP_FREG2		1647849	1					
ANR	1647936	Condition	FAST_IS_REG ( dst )		1647849	0					
ANR	1647937	CallExpression	FAST_IS_REG ( dst )		1647849	0					
ANR	1647938	Callee	FAST_IS_REG		1647849	0					
ANR	1647939	Identifier	FAST_IS_REG		1647849	0					
ANR	1647940	ArgumentList	dst		1647849	1					
ANR	1647941	Argument	dst		1647849	0					
ANR	1647942	Identifier	dst		1647849	0					
ANR	1647943	Identifier	dst		1647849	1					
ANR	1647944	Identifier	TMP_FREG2		1647849	2					
ANR	1647945	IfStatement	if ( src1 & SLJIT_MEM )		1647849	9					
ANR	1647946	Condition	src1 & SLJIT_MEM	1944:5:65596:65611	1647849	0	True				
ANR	1647947	BitAndExpression	src1 & SLJIT_MEM		1647849	0		&			
ANR	1647948	Identifier	src1		1647849	0					
ANR	1647949	Identifier	SLJIT_MEM		1647849	1					
ANR	1647950	CompoundStatement		15:23:355:355	1647849	1					
ANR	1647951	IfStatement	"if ( getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w ) )"		1647849	0					
ANR	1647952	Condition	"getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w )"	1945:6:65622:65698	1647849	0	True				
ANR	1647953	CallExpression	"getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w )"		1647849	0					
ANR	1647954	Callee	getput_arg_fast		1647849	0					
ANR	1647955	Identifier	getput_arg_fast		1647849	0					
ANR	1647956	ArgumentList	compiler		1647849	1					
ANR	1647957	Argument	compiler		1647849	0					
ANR	1647958	Identifier	compiler		1647849	0					
ANR	1647959	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1647849	1					
ANR	1647960	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1647849	0		|			
ANR	1647961	CallExpression	FLOAT_DATA ( op )		1647849	0					
ANR	1647962	Callee	FLOAT_DATA		1647849	0					
ANR	1647963	Identifier	FLOAT_DATA		1647849	0					
ANR	1647964	ArgumentList	op		1647849	1					
ANR	1647965	Argument	op		1647849	0					
ANR	1647966	Identifier	op		1647849	0					
ANR	1647967	Identifier	LOAD_DATA		1647849	1					
ANR	1647968	Argument	TMP_FREG1		1647849	2					
ANR	1647969	Identifier	TMP_FREG1		1647849	0					
ANR	1647970	Argument	src1		1647849	3					
ANR	1647971	Identifier	src1		1647849	0					
ANR	1647972	Argument	src1w		1647849	4					
ANR	1647973	Identifier	src1w		1647849	0					
ANR	1647974	CompoundStatement		16:85:442:442	1647849	1					
ANR	1647975	ExpressionStatement	FAIL_IF ( compiler -> error )	1946:3:65706:65730	1647849	0	True				
ANR	1647976	CallExpression	FAIL_IF ( compiler -> error )		1647849	0					
ANR	1647977	Callee	FAIL_IF		1647849	0					
ANR	1647978	Identifier	FAIL_IF		1647849	0					
ANR	1647979	ArgumentList	compiler -> error		1647849	1					
ANR	1647980	Argument	compiler -> error		1647849	0					
ANR	1647981	PtrMemberAccess	compiler -> error		1647849	0					
ANR	1647982	Identifier	compiler		1647849	0					
ANR	1647983	Identifier	error		1647849	1					
ANR	1647984	ExpressionStatement	src1 = TMP_FREG1	1947:3:65735:65751	1647849	1	True				
ANR	1647985	AssignmentExpression	src1 = TMP_FREG1		1647849	0		=			
ANR	1647986	Identifier	src1		1647849	0					
ANR	1647987	Identifier	TMP_FREG1		1647849	1					
ANR	1647988	ElseStatement	else		1647849	0					
ANR	1647989	ExpressionStatement	flags |= ALT_FORM1	1949:3:65765:65783	1647849	0	True				
ANR	1647990	AssignmentExpression	flags |= ALT_FORM1		1647849	0		|=			
ANR	1647991	Identifier	flags		1647849	0					
ANR	1647992	Identifier	ALT_FORM1		1647849	1					
ANR	1647993	IfStatement	if ( src2 & SLJIT_MEM )		1647849	10					
ANR	1647994	Condition	src2 & SLJIT_MEM	1952:5:65794:65809	1647849	0	True				
ANR	1647995	BitAndExpression	src2 & SLJIT_MEM		1647849	0		&			
ANR	1647996	Identifier	src2		1647849	0					
ANR	1647997	Identifier	SLJIT_MEM		1647849	1					
ANR	1647998	CompoundStatement		23:23:553:553	1647849	1					
ANR	1647999	IfStatement	"if ( getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w ) )"		1647849	0					
ANR	1648000	Condition	"getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w )"	1953:6:65820:65896	1647849	0	True				
ANR	1648001	CallExpression	"getput_arg_fast ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w )"		1647849	0					
ANR	1648002	Callee	getput_arg_fast		1647849	0					
ANR	1648003	Identifier	getput_arg_fast		1647849	0					
ANR	1648004	ArgumentList	compiler		1647849	1					
ANR	1648005	Argument	compiler		1647849	0					
ANR	1648006	Identifier	compiler		1647849	0					
ANR	1648007	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1647849	1					
ANR	1648008	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1647849	0		|			
ANR	1648009	CallExpression	FLOAT_DATA ( op )		1647849	0					
ANR	1648010	Callee	FLOAT_DATA		1647849	0					
ANR	1648011	Identifier	FLOAT_DATA		1647849	0					
ANR	1648012	ArgumentList	op		1647849	1					
ANR	1648013	Argument	op		1647849	0					
ANR	1648014	Identifier	op		1647849	0					
ANR	1648015	Identifier	LOAD_DATA		1647849	1					
ANR	1648016	Argument	TMP_FREG2		1647849	2					
ANR	1648017	Identifier	TMP_FREG2		1647849	0					
ANR	1648018	Argument	src2		1647849	3					
ANR	1648019	Identifier	src2		1647849	0					
ANR	1648020	Argument	src2w		1647849	4					
ANR	1648021	Identifier	src2w		1647849	0					
ANR	1648022	CompoundStatement		24:85:640:640	1647849	1					
ANR	1648023	ExpressionStatement	FAIL_IF ( compiler -> error )	1954:3:65904:65928	1647849	0	True				
ANR	1648024	CallExpression	FAIL_IF ( compiler -> error )		1647849	0					
ANR	1648025	Callee	FAIL_IF		1647849	0					
ANR	1648026	Identifier	FAIL_IF		1647849	0					
ANR	1648027	ArgumentList	compiler -> error		1647849	1					
ANR	1648028	Argument	compiler -> error		1647849	0					
ANR	1648029	PtrMemberAccess	compiler -> error		1647849	0					
ANR	1648030	Identifier	compiler		1647849	0					
ANR	1648031	Identifier	error		1647849	1					
ANR	1648032	ExpressionStatement	src2 = TMP_FREG2	1955:3:65933:65949	1647849	1	True				
ANR	1648033	AssignmentExpression	src2 = TMP_FREG2		1647849	0		=			
ANR	1648034	Identifier	src2		1647849	0					
ANR	1648035	Identifier	TMP_FREG2		1647849	1					
ANR	1648036	ElseStatement	else		1647849	0					
ANR	1648037	ExpressionStatement	flags |= ALT_FORM2	1957:3:65963:65981	1647849	0	True				
ANR	1648038	AssignmentExpression	flags |= ALT_FORM2		1647849	0		|=			
ANR	1648039	Identifier	flags		1647849	0					
ANR	1648040	Identifier	ALT_FORM2		1647849	1					
ANR	1648041	IfStatement	if ( ( flags & ( ALT_FORM1 | ALT_FORM2 ) ) == ( ALT_FORM1 | ALT_FORM2 ) )		1647849	11					
ANR	1648042	Condition	( flags & ( ALT_FORM1 | ALT_FORM2 ) ) == ( ALT_FORM1 | ALT_FORM2 )	1960:5:65992:66051	1647849	0	True				
ANR	1648043	EqualityExpression	( flags & ( ALT_FORM1 | ALT_FORM2 ) ) == ( ALT_FORM1 | ALT_FORM2 )		1647849	0		==			
ANR	1648044	BitAndExpression	flags & ( ALT_FORM1 | ALT_FORM2 )		1647849	0		&			
ANR	1648045	Identifier	flags		1647849	0					
ANR	1648046	InclusiveOrExpression	ALT_FORM1 | ALT_FORM2		1647849	1		|			
ANR	1648047	Identifier	ALT_FORM1		1647849	0					
ANR	1648048	Identifier	ALT_FORM2		1647849	1					
ANR	1648049	InclusiveOrExpression	ALT_FORM1 | ALT_FORM2		1647849	1		|			
ANR	1648050	Identifier	ALT_FORM1		1647849	0					
ANR	1648051	Identifier	ALT_FORM2		1647849	1					
ANR	1648052	CompoundStatement		31:67:795:795	1647849	1					
ANR	1648053	IfStatement	"if ( ! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw ) )"		1647849	0					
ANR	1648054	Condition	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"	1961:6:66062:66134	1647849	0	True				
ANR	1648055	AndExpression	"! can_cache ( src1 , src1w , src2 , src2w ) && can_cache ( src1 , src1w , dst , dstw )"		1647849	0		&&			
ANR	1648056	UnaryOperationExpression	"! can_cache ( src1 , src1w , src2 , src2w )"		1647849	0					
ANR	1648057	UnaryOperator	!		1647849	0					
ANR	1648058	CallExpression	"can_cache ( src1 , src1w , src2 , src2w )"		1647849	1					
ANR	1648059	Callee	can_cache		1647849	0					
ANR	1648060	Identifier	can_cache		1647849	0					
ANR	1648061	ArgumentList	src1		1647849	1					
ANR	1648062	Argument	src1		1647849	0					
ANR	1648063	Identifier	src1		1647849	0					
ANR	1648064	Argument	src1w		1647849	1					
ANR	1648065	Identifier	src1w		1647849	0					
ANR	1648066	Argument	src2		1647849	2					
ANR	1648067	Identifier	src2		1647849	0					
ANR	1648068	Argument	src2w		1647849	3					
ANR	1648069	Identifier	src2w		1647849	0					
ANR	1648070	CallExpression	"can_cache ( src1 , src1w , dst , dstw )"		1647849	1					
ANR	1648071	Callee	can_cache		1647849	0					
ANR	1648072	Identifier	can_cache		1647849	0					
ANR	1648073	ArgumentList	src1		1647849	1					
ANR	1648074	Argument	src1		1647849	0					
ANR	1648075	Identifier	src1		1647849	0					
ANR	1648076	Argument	src1w		1647849	1					
ANR	1648077	Identifier	src1w		1647849	0					
ANR	1648078	Argument	dst		1647849	2					
ANR	1648079	Identifier	dst		1647849	0					
ANR	1648080	Argument	dstw		1647849	3					
ANR	1648081	Identifier	dstw		1647849	0					
ANR	1648082	CompoundStatement		32:81:878:878	1647849	1					
ANR	1648083	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w ) )"	1962:3:66142:66236	1647849	0	True				
ANR	1648084	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w ) )"		1647849	0					
ANR	1648085	Callee	FAIL_IF		1647849	0					
ANR	1648086	Identifier	FAIL_IF		1647849	0					
ANR	1648087	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w )"		1647849	1					
ANR	1648088	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w )"		1647849	0					
ANR	1648089	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , src1 , src1w )"		1647849	0					
ANR	1648090	Callee	getput_arg		1647849	0					
ANR	1648091	Identifier	getput_arg		1647849	0					
ANR	1648092	ArgumentList	compiler		1647849	1					
ANR	1648093	Argument	compiler		1647849	0					
ANR	1648094	Identifier	compiler		1647849	0					
ANR	1648095	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1647849	1					
ANR	1648096	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1647849	0		|			
ANR	1648097	CallExpression	FLOAT_DATA ( op )		1647849	0					
ANR	1648098	Callee	FLOAT_DATA		1647849	0					
ANR	1648099	Identifier	FLOAT_DATA		1647849	0					
ANR	1648100	ArgumentList	op		1647849	1					
ANR	1648101	Argument	op		1647849	0					
ANR	1648102	Identifier	op		1647849	0					
ANR	1648103	Identifier	LOAD_DATA		1647849	1					
ANR	1648104	Argument	TMP_FREG2		1647849	2					
ANR	1648105	Identifier	TMP_FREG2		1647849	0					
ANR	1648106	Argument	src2		1647849	3					
ANR	1648107	Identifier	src2		1647849	0					
ANR	1648108	Argument	src2w		1647849	4					
ANR	1648109	Identifier	src2w		1647849	0					
ANR	1648110	Argument	src1		1647849	5					
ANR	1648111	Identifier	src1		1647849	0					
ANR	1648112	Argument	src1w		1647849	6					
ANR	1648113	Identifier	src1w		1647849	0					
ANR	1648114	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw ) )"	1963:3:66241:66333	1647849	1	True				
ANR	1648115	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw ) )"		1647849	0					
ANR	1648116	Callee	FAIL_IF		1647849	0					
ANR	1648117	Identifier	FAIL_IF		1647849	0					
ANR	1648118	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1647849	1					
ANR	1648119	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1647849	0					
ANR	1648120	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1647849	0					
ANR	1648121	Callee	getput_arg		1647849	0					
ANR	1648122	Identifier	getput_arg		1647849	0					
ANR	1648123	ArgumentList	compiler		1647849	1					
ANR	1648124	Argument	compiler		1647849	0					
ANR	1648125	Identifier	compiler		1647849	0					
ANR	1648126	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1647849	1					
ANR	1648127	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1647849	0		|			
ANR	1648128	CallExpression	FLOAT_DATA ( op )		1647849	0					
ANR	1648129	Callee	FLOAT_DATA		1647849	0					
ANR	1648130	Identifier	FLOAT_DATA		1647849	0					
ANR	1648131	ArgumentList	op		1647849	1					
ANR	1648132	Argument	op		1647849	0					
ANR	1648133	Identifier	op		1647849	0					
ANR	1648134	Identifier	LOAD_DATA		1647849	1					
ANR	1648135	Argument	TMP_FREG1		1647849	2					
ANR	1648136	Identifier	TMP_FREG1		1647849	0					
ANR	1648137	Argument	src1		1647849	3					
ANR	1648138	Identifier	src1		1647849	0					
ANR	1648139	Argument	src1w		1647849	4					
ANR	1648140	Identifier	src1w		1647849	0					
ANR	1648141	Argument	dst		1647849	5					
ANR	1648142	Identifier	dst		1647849	0					
ANR	1648143	Argument	dstw		1647849	6					
ANR	1648144	Identifier	dstw		1647849	0					
ANR	1648145	ElseStatement	else		1647849	0					
ANR	1648146	CompoundStatement		36:7:1087:1087	1647849	0					
ANR	1648147	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w ) )"	1966:3:66351:66445	1647849	0	True				
ANR	1648148	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w ) )"		1647849	0					
ANR	1648149	Callee	FAIL_IF		1647849	0					
ANR	1648150	Identifier	FAIL_IF		1647849	0					
ANR	1648151	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1647849	1					
ANR	1648152	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1647849	0					
ANR	1648153	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , src2 , src2w )"		1647849	0					
ANR	1648154	Callee	getput_arg		1647849	0					
ANR	1648155	Identifier	getput_arg		1647849	0					
ANR	1648156	ArgumentList	compiler		1647849	1					
ANR	1648157	Argument	compiler		1647849	0					
ANR	1648158	Identifier	compiler		1647849	0					
ANR	1648159	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1647849	1					
ANR	1648160	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1647849	0		|			
ANR	1648161	CallExpression	FLOAT_DATA ( op )		1647849	0					
ANR	1648162	Callee	FLOAT_DATA		1647849	0					
ANR	1648163	Identifier	FLOAT_DATA		1647849	0					
ANR	1648164	ArgumentList	op		1647849	1					
ANR	1648165	Argument	op		1647849	0					
ANR	1648166	Identifier	op		1647849	0					
ANR	1648167	Identifier	LOAD_DATA		1647849	1					
ANR	1648168	Argument	TMP_FREG1		1647849	2					
ANR	1648169	Identifier	TMP_FREG1		1647849	0					
ANR	1648170	Argument	src1		1647849	3					
ANR	1648171	Identifier	src1		1647849	0					
ANR	1648172	Argument	src1w		1647849	4					
ANR	1648173	Identifier	src1w		1647849	0					
ANR	1648174	Argument	src2		1647849	5					
ANR	1648175	Identifier	src2		1647849	0					
ANR	1648176	Argument	src2w		1647849	6					
ANR	1648177	Identifier	src2w		1647849	0					
ANR	1648178	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw ) )"	1967:3:66450:66542	1647849	1	True				
ANR	1648179	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw ) )"		1647849	0					
ANR	1648180	Callee	FAIL_IF		1647849	0					
ANR	1648181	Identifier	FAIL_IF		1647849	0					
ANR	1648182	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1647849	1					
ANR	1648183	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1647849	0					
ANR	1648184	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1647849	0					
ANR	1648185	Callee	getput_arg		1647849	0					
ANR	1648186	Identifier	getput_arg		1647849	0					
ANR	1648187	ArgumentList	compiler		1647849	1					
ANR	1648188	Argument	compiler		1647849	0					
ANR	1648189	Identifier	compiler		1647849	0					
ANR	1648190	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1647849	1					
ANR	1648191	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1647849	0		|			
ANR	1648192	CallExpression	FLOAT_DATA ( op )		1647849	0					
ANR	1648193	Callee	FLOAT_DATA		1647849	0					
ANR	1648194	Identifier	FLOAT_DATA		1647849	0					
ANR	1648195	ArgumentList	op		1647849	1					
ANR	1648196	Argument	op		1647849	0					
ANR	1648197	Identifier	op		1647849	0					
ANR	1648198	Identifier	LOAD_DATA		1647849	1					
ANR	1648199	Argument	TMP_FREG2		1647849	2					
ANR	1648200	Identifier	TMP_FREG2		1647849	0					
ANR	1648201	Argument	src2		1647849	3					
ANR	1648202	Identifier	src2		1647849	0					
ANR	1648203	Argument	src2w		1647849	4					
ANR	1648204	Identifier	src2w		1647849	0					
ANR	1648205	Argument	dst		1647849	5					
ANR	1648206	Identifier	dst		1647849	0					
ANR	1648207	Argument	dstw		1647849	6					
ANR	1648208	Identifier	dstw		1647849	0					
ANR	1648209	ElseStatement	else		1647849	0					
ANR	1648210	IfStatement	if ( flags & ALT_FORM1 )		1647849	0					
ANR	1648211	Condition	flags & ALT_FORM1	1970:10:66561:66577	1647849	0	True				
ANR	1648212	BitAndExpression	flags & ALT_FORM1		1647849	0		&			
ANR	1648213	Identifier	flags		1647849	0					
ANR	1648214	Identifier	ALT_FORM1		1647849	1					
ANR	1648215	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw ) )"	1971:2:66582:66674	1647849	1	True				
ANR	1648216	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw ) )"		1647849	0					
ANR	1648217	Callee	FAIL_IF		1647849	0					
ANR	1648218	Identifier	FAIL_IF		1647849	0					
ANR	1648219	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1647849	1					
ANR	1648220	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1647849	0					
ANR	1648221	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG1 , src1 , src1w , dst , dstw )"		1647849	0					
ANR	1648222	Callee	getput_arg		1647849	0					
ANR	1648223	Identifier	getput_arg		1647849	0					
ANR	1648224	ArgumentList	compiler		1647849	1					
ANR	1648225	Argument	compiler		1647849	0					
ANR	1648226	Identifier	compiler		1647849	0					
ANR	1648227	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1647849	1					
ANR	1648228	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1647849	0		|			
ANR	1648229	CallExpression	FLOAT_DATA ( op )		1647849	0					
ANR	1648230	Callee	FLOAT_DATA		1647849	0					
ANR	1648231	Identifier	FLOAT_DATA		1647849	0					
ANR	1648232	ArgumentList	op		1647849	1					
ANR	1648233	Argument	op		1647849	0					
ANR	1648234	Identifier	op		1647849	0					
ANR	1648235	Identifier	LOAD_DATA		1647849	1					
ANR	1648236	Argument	TMP_FREG1		1647849	2					
ANR	1648237	Identifier	TMP_FREG1		1647849	0					
ANR	1648238	Argument	src1		1647849	3					
ANR	1648239	Identifier	src1		1647849	0					
ANR	1648240	Argument	src1w		1647849	4					
ANR	1648241	Identifier	src1w		1647849	0					
ANR	1648242	Argument	dst		1647849	5					
ANR	1648243	Identifier	dst		1647849	0					
ANR	1648244	Argument	dstw		1647849	6					
ANR	1648245	Identifier	dstw		1647849	0					
ANR	1648246	ElseStatement	else		1647849	0					
ANR	1648247	IfStatement	if ( flags & ALT_FORM2 )		1647849	0					
ANR	1648248	Condition	flags & ALT_FORM2	1972:10:66686:66702	1647849	0	True				
ANR	1648249	BitAndExpression	flags & ALT_FORM2		1647849	0		&			
ANR	1648250	Identifier	flags		1647849	0					
ANR	1648251	Identifier	ALT_FORM2		1647849	1					
ANR	1648252	ExpressionStatement	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw ) )"	1973:2:66707:66799	1647849	1	True				
ANR	1648253	CallExpression	"FAIL_IF ( getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw ) )"		1647849	0					
ANR	1648254	Callee	FAIL_IF		1647849	0					
ANR	1648255	Identifier	FAIL_IF		1647849	0					
ANR	1648256	ArgumentList	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1647849	1					
ANR	1648257	Argument	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1647849	0					
ANR	1648258	CallExpression	"getput_arg ( compiler , FLOAT_DATA ( op ) | LOAD_DATA , TMP_FREG2 , src2 , src2w , dst , dstw )"		1647849	0					
ANR	1648259	Callee	getput_arg		1647849	0					
ANR	1648260	Identifier	getput_arg		1647849	0					
ANR	1648261	ArgumentList	compiler		1647849	1					
ANR	1648262	Argument	compiler		1647849	0					
ANR	1648263	Identifier	compiler		1647849	0					
ANR	1648264	Argument	FLOAT_DATA ( op ) | LOAD_DATA		1647849	1					
ANR	1648265	InclusiveOrExpression	FLOAT_DATA ( op ) | LOAD_DATA		1647849	0		|			
ANR	1648266	CallExpression	FLOAT_DATA ( op )		1647849	0					
ANR	1648267	Callee	FLOAT_DATA		1647849	0					
ANR	1648268	Identifier	FLOAT_DATA		1647849	0					
ANR	1648269	ArgumentList	op		1647849	1					
ANR	1648270	Argument	op		1647849	0					
ANR	1648271	Identifier	op		1647849	0					
ANR	1648272	Identifier	LOAD_DATA		1647849	1					
ANR	1648273	Argument	TMP_FREG2		1647849	2					
ANR	1648274	Identifier	TMP_FREG2		1647849	0					
ANR	1648275	Argument	src2		1647849	3					
ANR	1648276	Identifier	src2		1647849	0					
ANR	1648277	Argument	src2w		1647849	4					
ANR	1648278	Identifier	src2w		1647849	0					
ANR	1648279	Argument	dst		1647849	5					
ANR	1648280	Identifier	dst		1647849	0					
ANR	1648281	Argument	dstw		1647849	6					
ANR	1648282	Identifier	dstw		1647849	0					
ANR	1648283	IfStatement	if ( flags & ALT_FORM1 )		1647849	12					
ANR	1648284	Condition	flags & ALT_FORM1	1975:5:66807:66823	1647849	0	True				
ANR	1648285	BitAndExpression	flags & ALT_FORM1		1647849	0		&			
ANR	1648286	Identifier	flags		1647849	0					
ANR	1648287	Identifier	ALT_FORM1		1647849	1					
ANR	1648288	ExpressionStatement	src1 = TMP_FREG1	1976:2:66828:66844	1647849	1	True				
ANR	1648289	AssignmentExpression	src1 = TMP_FREG1		1647849	0		=			
ANR	1648290	Identifier	src1		1647849	0					
ANR	1648291	Identifier	TMP_FREG1		1647849	1					
ANR	1648292	IfStatement	if ( flags & ALT_FORM2 )		1647849	13					
ANR	1648293	Condition	flags & ALT_FORM2	1977:5:66851:66867	1647849	0	True				
ANR	1648294	BitAndExpression	flags & ALT_FORM2		1647849	0		&			
ANR	1648295	Identifier	flags		1647849	0					
ANR	1648296	Identifier	ALT_FORM2		1647849	1					
ANR	1648297	ExpressionStatement	src2 = TMP_FREG2	1978:2:66872:66888	1647849	1	True				
ANR	1648298	AssignmentExpression	src2 = TMP_FREG2		1647849	0		=			
ANR	1648299	Identifier	src2		1647849	0					
ANR	1648300	Identifier	TMP_FREG2		1647849	1					
ANR	1648301	SwitchStatement	switch ( GET_OPCODE ( op ) )		1647849	14					
ANR	1648302	Condition	GET_OPCODE ( op )	1980:9:66900:66913	1647849	0	True				
ANR	1648303	CallExpression	GET_OPCODE ( op )		1647849	0					
ANR	1648304	Callee	GET_OPCODE		1647849	0					
ANR	1648305	Identifier	GET_OPCODE		1647849	0					
ANR	1648306	ArgumentList	op		1647849	1					
ANR	1648307	Argument	op		1647849	0					
ANR	1648308	Identifier	op		1647849	0					
ANR	1648309	CompoundStatement		51:25:1657:1657	1647849	1					
ANR	1648310	Label	case SLJIT_DADD :	1981:1:66919:66934	1647849	0	True				
ANR	1648311	Identifier	SLJIT_DADD		1647849	0					
ANR	1648312	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FADDS , FADD ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) ) )"	1982:2:66938:67029	1647849	1	True				
ANR	1648313	CallExpression	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FADDS , FADD ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) ) )"		1647849	0					
ANR	1648314	Callee	FAIL_IF		1647849	0					
ANR	1648315	Identifier	FAIL_IF		1647849	0					
ANR	1648316	ArgumentList	"push_inst ( compiler , SELECT_FOP ( op , FADDS , FADD ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) )"		1647849	1					
ANR	1648317	Argument	"push_inst ( compiler , SELECT_FOP ( op , FADDS , FADD ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) )"		1647849	0					
ANR	1648318	CallExpression	"push_inst ( compiler , SELECT_FOP ( op , FADDS , FADD ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) )"		1647849	0					
ANR	1648319	Callee	push_inst		1647849	0					
ANR	1648320	Identifier	push_inst		1647849	0					
ANR	1648321	ArgumentList	compiler		1647849	1					
ANR	1648322	Argument	compiler		1647849	0					
ANR	1648323	Identifier	compiler		1647849	0					
ANR	1648324	Argument	"SELECT_FOP ( op , FADDS , FADD ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 )"		1647849	1					
ANR	1648325	InclusiveOrExpression	"SELECT_FOP ( op , FADDS , FADD ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 )"		1647849	0		|			
ANR	1648326	CallExpression	"SELECT_FOP ( op , FADDS , FADD )"		1647849	0					
ANR	1648327	Callee	SELECT_FOP		1647849	0					
ANR	1648328	Identifier	SELECT_FOP		1647849	0					
ANR	1648329	ArgumentList	op		1647849	1					
ANR	1648330	Argument	op		1647849	0					
ANR	1648331	Identifier	op		1647849	0					
ANR	1648332	Argument	FADDS		1647849	1					
ANR	1648333	Identifier	FADDS		1647849	0					
ANR	1648334	Argument	FADD		1647849	2					
ANR	1648335	Identifier	FADD		1647849	0					
ANR	1648336	InclusiveOrExpression	FD ( dst_r ) | FA ( src1 ) | FB ( src2 )		1647849	1		|			
ANR	1648337	CallExpression	FD ( dst_r )		1647849	0					
ANR	1648338	Callee	FD		1647849	0					
ANR	1648339	Identifier	FD		1647849	0					
ANR	1648340	ArgumentList	dst_r		1647849	1					
ANR	1648341	Argument	dst_r		1647849	0					
ANR	1648342	Identifier	dst_r		1647849	0					
ANR	1648343	InclusiveOrExpression	FA ( src1 ) | FB ( src2 )		1647849	1		|			
ANR	1648344	CallExpression	FA ( src1 )		1647849	0					
ANR	1648345	Callee	FA		1647849	0					
ANR	1648346	Identifier	FA		1647849	0					
ANR	1648347	ArgumentList	src1		1647849	1					
ANR	1648348	Argument	src1		1647849	0					
ANR	1648349	Identifier	src1		1647849	0					
ANR	1648350	CallExpression	FB ( src2 )		1647849	1					
ANR	1648351	Callee	FB		1647849	0					
ANR	1648352	Identifier	FB		1647849	0					
ANR	1648353	ArgumentList	src2		1647849	1					
ANR	1648354	Argument	src2		1647849	0					
ANR	1648355	Identifier	src2		1647849	0					
ANR	1648356	BreakStatement	break ;	1983:2:67033:67038	1647849	2	True				
ANR	1648357	Label	case SLJIT_DSUB :	1985:1:67042:67057	1647849	3	True				
ANR	1648358	Identifier	SLJIT_DSUB		1647849	0					
ANR	1648359	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FSUBS , FSUB ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) ) )"	1986:2:67061:67152	1647849	4	True				
ANR	1648360	CallExpression	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FSUBS , FSUB ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) ) )"		1647849	0					
ANR	1648361	Callee	FAIL_IF		1647849	0					
ANR	1648362	Identifier	FAIL_IF		1647849	0					
ANR	1648363	ArgumentList	"push_inst ( compiler , SELECT_FOP ( op , FSUBS , FSUB ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) )"		1647849	1					
ANR	1648364	Argument	"push_inst ( compiler , SELECT_FOP ( op , FSUBS , FSUB ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) )"		1647849	0					
ANR	1648365	CallExpression	"push_inst ( compiler , SELECT_FOP ( op , FSUBS , FSUB ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) )"		1647849	0					
ANR	1648366	Callee	push_inst		1647849	0					
ANR	1648367	Identifier	push_inst		1647849	0					
ANR	1648368	ArgumentList	compiler		1647849	1					
ANR	1648369	Argument	compiler		1647849	0					
ANR	1648370	Identifier	compiler		1647849	0					
ANR	1648371	Argument	"SELECT_FOP ( op , FSUBS , FSUB ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 )"		1647849	1					
ANR	1648372	InclusiveOrExpression	"SELECT_FOP ( op , FSUBS , FSUB ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 )"		1647849	0		|			
ANR	1648373	CallExpression	"SELECT_FOP ( op , FSUBS , FSUB )"		1647849	0					
ANR	1648374	Callee	SELECT_FOP		1647849	0					
ANR	1648375	Identifier	SELECT_FOP		1647849	0					
ANR	1648376	ArgumentList	op		1647849	1					
ANR	1648377	Argument	op		1647849	0					
ANR	1648378	Identifier	op		1647849	0					
ANR	1648379	Argument	FSUBS		1647849	1					
ANR	1648380	Identifier	FSUBS		1647849	0					
ANR	1648381	Argument	FSUB		1647849	2					
ANR	1648382	Identifier	FSUB		1647849	0					
ANR	1648383	InclusiveOrExpression	FD ( dst_r ) | FA ( src1 ) | FB ( src2 )		1647849	1		|			
ANR	1648384	CallExpression	FD ( dst_r )		1647849	0					
ANR	1648385	Callee	FD		1647849	0					
ANR	1648386	Identifier	FD		1647849	0					
ANR	1648387	ArgumentList	dst_r		1647849	1					
ANR	1648388	Argument	dst_r		1647849	0					
ANR	1648389	Identifier	dst_r		1647849	0					
ANR	1648390	InclusiveOrExpression	FA ( src1 ) | FB ( src2 )		1647849	1		|			
ANR	1648391	CallExpression	FA ( src1 )		1647849	0					
ANR	1648392	Callee	FA		1647849	0					
ANR	1648393	Identifier	FA		1647849	0					
ANR	1648394	ArgumentList	src1		1647849	1					
ANR	1648395	Argument	src1		1647849	0					
ANR	1648396	Identifier	src1		1647849	0					
ANR	1648397	CallExpression	FB ( src2 )		1647849	1					
ANR	1648398	Callee	FB		1647849	0					
ANR	1648399	Identifier	FB		1647849	0					
ANR	1648400	ArgumentList	src2		1647849	1					
ANR	1648401	Argument	src2		1647849	0					
ANR	1648402	Identifier	src2		1647849	0					
ANR	1648403	BreakStatement	break ;	1987:2:67156:67161	1647849	5	True				
ANR	1648404	Label	case SLJIT_DMUL :	1989:1:67165:67180	1647849	6	True				
ANR	1648405	Identifier	SLJIT_DMUL		1647849	0					
ANR	1648406	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FMULS , FMUL ) | FD ( dst_r ) | FA ( src1 ) | FC ( src2 ) ) )"	1990:2:67184:67301	1647849	7	True				
ANR	1648407	CallExpression	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FMULS , FMUL ) | FD ( dst_r ) | FA ( src1 ) | FC ( src2 ) ) )"		1647849	0					
ANR	1648408	Callee	FAIL_IF		1647849	0					
ANR	1648409	Identifier	FAIL_IF		1647849	0					
ANR	1648410	ArgumentList	"push_inst ( compiler , SELECT_FOP ( op , FMULS , FMUL ) | FD ( dst_r ) | FA ( src1 ) | FC ( src2 ) )"		1647849	1					
ANR	1648411	Argument	"push_inst ( compiler , SELECT_FOP ( op , FMULS , FMUL ) | FD ( dst_r ) | FA ( src1 ) | FC ( src2 ) )"		1647849	0					
ANR	1648412	CallExpression	"push_inst ( compiler , SELECT_FOP ( op , FMULS , FMUL ) | FD ( dst_r ) | FA ( src1 ) | FC ( src2 ) )"		1647849	0					
ANR	1648413	Callee	push_inst		1647849	0					
ANR	1648414	Identifier	push_inst		1647849	0					
ANR	1648415	ArgumentList	compiler		1647849	1					
ANR	1648416	Argument	compiler		1647849	0					
ANR	1648417	Identifier	compiler		1647849	0					
ANR	1648418	Argument	"SELECT_FOP ( op , FMULS , FMUL ) | FD ( dst_r ) | FA ( src1 ) | FC ( src2 )"		1647849	1					
ANR	1648419	InclusiveOrExpression	"SELECT_FOP ( op , FMULS , FMUL ) | FD ( dst_r ) | FA ( src1 ) | FC ( src2 )"		1647849	0		|			
ANR	1648420	CallExpression	"SELECT_FOP ( op , FMULS , FMUL )"		1647849	0					
ANR	1648421	Callee	SELECT_FOP		1647849	0					
ANR	1648422	Identifier	SELECT_FOP		1647849	0					
ANR	1648423	ArgumentList	op		1647849	1					
ANR	1648424	Argument	op		1647849	0					
ANR	1648425	Identifier	op		1647849	0					
ANR	1648426	Argument	FMULS		1647849	1					
ANR	1648427	Identifier	FMULS		1647849	0					
ANR	1648428	Argument	FMUL		1647849	2					
ANR	1648429	Identifier	FMUL		1647849	0					
ANR	1648430	InclusiveOrExpression	FD ( dst_r ) | FA ( src1 ) | FC ( src2 )		1647849	1		|			
ANR	1648431	CallExpression	FD ( dst_r )		1647849	0					
ANR	1648432	Callee	FD		1647849	0					
ANR	1648433	Identifier	FD		1647849	0					
ANR	1648434	ArgumentList	dst_r		1647849	1					
ANR	1648435	Argument	dst_r		1647849	0					
ANR	1648436	Identifier	dst_r		1647849	0					
ANR	1648437	InclusiveOrExpression	FA ( src1 ) | FC ( src2 )		1647849	1		|			
ANR	1648438	CallExpression	FA ( src1 )		1647849	0					
ANR	1648439	Callee	FA		1647849	0					
ANR	1648440	Identifier	FA		1647849	0					
ANR	1648441	ArgumentList	src1		1647849	1					
ANR	1648442	Argument	src1		1647849	0					
ANR	1648443	Identifier	src1		1647849	0					
ANR	1648444	CallExpression	FC ( src2 )		1647849	1					
ANR	1648445	Callee	FC		1647849	0					
ANR	1648446	Identifier	FC		1647849	0					
ANR	1648447	ArgumentList	src2		1647849	1					
ANR	1648448	Argument	src2		1647849	0					
ANR	1648449	Identifier	src2		1647849	0					
ANR	1648450	BreakStatement	break ;	1991:2:67305:67310	1647849	8	True				
ANR	1648451	Label	case SLJIT_DDIV :	1993:1:67314:67329	1647849	9	True				
ANR	1648452	Identifier	SLJIT_DDIV		1647849	0					
ANR	1648453	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FDIVS , FDIV ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) ) )"	1994:2:67333:67424	1647849	10	True				
ANR	1648454	CallExpression	"FAIL_IF ( push_inst ( compiler , SELECT_FOP ( op , FDIVS , FDIV ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) ) )"		1647849	0					
ANR	1648455	Callee	FAIL_IF		1647849	0					
ANR	1648456	Identifier	FAIL_IF		1647849	0					
ANR	1648457	ArgumentList	"push_inst ( compiler , SELECT_FOP ( op , FDIVS , FDIV ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) )"		1647849	1					
ANR	1648458	Argument	"push_inst ( compiler , SELECT_FOP ( op , FDIVS , FDIV ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) )"		1647849	0					
ANR	1648459	CallExpression	"push_inst ( compiler , SELECT_FOP ( op , FDIVS , FDIV ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 ) )"		1647849	0					
ANR	1648460	Callee	push_inst		1647849	0					
ANR	1648461	Identifier	push_inst		1647849	0					
ANR	1648462	ArgumentList	compiler		1647849	1					
ANR	1648463	Argument	compiler		1647849	0					
ANR	1648464	Identifier	compiler		1647849	0					
ANR	1648465	Argument	"SELECT_FOP ( op , FDIVS , FDIV ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 )"		1647849	1					
ANR	1648466	InclusiveOrExpression	"SELECT_FOP ( op , FDIVS , FDIV ) | FD ( dst_r ) | FA ( src1 ) | FB ( src2 )"		1647849	0		|			
ANR	1648467	CallExpression	"SELECT_FOP ( op , FDIVS , FDIV )"		1647849	0					
ANR	1648468	Callee	SELECT_FOP		1647849	0					
ANR	1648469	Identifier	SELECT_FOP		1647849	0					
ANR	1648470	ArgumentList	op		1647849	1					
ANR	1648471	Argument	op		1647849	0					
ANR	1648472	Identifier	op		1647849	0					
ANR	1648473	Argument	FDIVS		1647849	1					
ANR	1648474	Identifier	FDIVS		1647849	0					
ANR	1648475	Argument	FDIV		1647849	2					
ANR	1648476	Identifier	FDIV		1647849	0					
ANR	1648477	InclusiveOrExpression	FD ( dst_r ) | FA ( src1 ) | FB ( src2 )		1647849	1		|			
ANR	1648478	CallExpression	FD ( dst_r )		1647849	0					
ANR	1648479	Callee	FD		1647849	0					
ANR	1648480	Identifier	FD		1647849	0					
ANR	1648481	ArgumentList	dst_r		1647849	1					
ANR	1648482	Argument	dst_r		1647849	0					
ANR	1648483	Identifier	dst_r		1647849	0					
ANR	1648484	InclusiveOrExpression	FA ( src1 ) | FB ( src2 )		1647849	1		|			
ANR	1648485	CallExpression	FA ( src1 )		1647849	0					
ANR	1648486	Callee	FA		1647849	0					
ANR	1648487	Identifier	FA		1647849	0					
ANR	1648488	ArgumentList	src1		1647849	1					
ANR	1648489	Argument	src1		1647849	0					
ANR	1648490	Identifier	src1		1647849	0					
ANR	1648491	CallExpression	FB ( src2 )		1647849	1					
ANR	1648492	Callee	FB		1647849	0					
ANR	1648493	Identifier	FB		1647849	0					
ANR	1648494	ArgumentList	src2		1647849	1					
ANR	1648495	Argument	src2		1647849	0					
ANR	1648496	Identifier	src2		1647849	0					
ANR	1648497	BreakStatement	break ;	1995:2:67428:67433	1647849	11	True				
ANR	1648498	IfStatement	if ( dst_r == TMP_FREG2 )		1647849	15					
ANR	1648499	Condition	dst_r == TMP_FREG2	1998:5:67444:67461	1647849	0	True				
ANR	1648500	EqualityExpression	dst_r == TMP_FREG2		1647849	0		==			
ANR	1648501	Identifier	dst_r		1647849	0					
ANR	1648502	Identifier	TMP_FREG2		1647849	1					
ANR	1648503	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 ) )"	1999:2:67466:67541	1647849	1	True				
ANR	1648504	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 ) )"		1647849	0					
ANR	1648505	Callee	FAIL_IF		1647849	0					
ANR	1648506	Identifier	FAIL_IF		1647849	0					
ANR	1648507	ArgumentList	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 )"		1647849	1					
ANR	1648508	Argument	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 )"		1647849	0					
ANR	1648509	CallExpression	"emit_op_mem2 ( compiler , FLOAT_DATA ( op ) , TMP_FREG2 , dst , dstw , 0 , 0 )"		1647849	0					
ANR	1648510	Callee	emit_op_mem2		1647849	0					
ANR	1648511	Identifier	emit_op_mem2		1647849	0					
ANR	1648512	ArgumentList	compiler		1647849	1					
ANR	1648513	Argument	compiler		1647849	0					
ANR	1648514	Identifier	compiler		1647849	0					
ANR	1648515	Argument	FLOAT_DATA ( op )		1647849	1					
ANR	1648516	CallExpression	FLOAT_DATA ( op )		1647849	0					
ANR	1648517	Callee	FLOAT_DATA		1647849	0					
ANR	1648518	Identifier	FLOAT_DATA		1647849	0					
ANR	1648519	ArgumentList	op		1647849	1					
ANR	1648520	Argument	op		1647849	0					
ANR	1648521	Identifier	op		1647849	0					
ANR	1648522	Argument	TMP_FREG2		1647849	2					
ANR	1648523	Identifier	TMP_FREG2		1647849	0					
ANR	1648524	Argument	dst		1647849	3					
ANR	1648525	Identifier	dst		1647849	0					
ANR	1648526	Argument	dstw		1647849	4					
ANR	1648527	Identifier	dstw		1647849	0					
ANR	1648528	Argument	0		1647849	5					
ANR	1648529	PrimaryExpression	0		1647849	0					
ANR	1648530	Argument	0		1647849	6					
ANR	1648531	PrimaryExpression	0		1647849	0					
ANR	1648532	ReturnStatement	return SLJIT_SUCCESS ;	2001:1:67545:67565	1647849	16	True				
ANR	1648533	Identifier	SLJIT_SUCCESS		1647849	0					
ANR	1648534	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1647849	1					
ANR	1648535	Identifier	sljit_emit_fop2		1647849	2					
ANR	1648536	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src1 , sljit_sw src1w , sljit_si src2 , sljit_sw src2w"		1647849	3					
ANR	1648537	Parameter	struct sljit_compiler * compiler	1926:50:65118:65148	1647849	0	True				
ANR	1648538	ParameterType	struct sljit_compiler *		1647849	0					
ANR	1648539	Identifier	compiler		1647849	1					
ANR	1648540	Parameter	sljit_si op	1926:83:65151:65161	1647849	1	True				
ANR	1648541	ParameterType	sljit_si		1647849	0					
ANR	1648542	Identifier	op		1647849	1					
ANR	1648543	Parameter	sljit_si dst	1927:1:65165:65176	1647849	2	True				
ANR	1648544	ParameterType	sljit_si		1647849	0					
ANR	1648545	Identifier	dst		1647849	1					
ANR	1648546	Parameter	sljit_sw dstw	1927:15:65179:65191	1647849	3	True				
ANR	1648547	ParameterType	sljit_sw		1647849	0					
ANR	1648548	Identifier	dstw		1647849	1					
ANR	1648549	Parameter	sljit_si src1	1928:1:65195:65207	1647849	4	True				
ANR	1648550	ParameterType	sljit_si		1647849	0					
ANR	1648551	Identifier	src1		1647849	1					
ANR	1648552	Parameter	sljit_sw src1w	1928:16:65210:65223	1647849	5	True				
ANR	1648553	ParameterType	sljit_sw		1647849	0					
ANR	1648554	Identifier	src1w		1647849	1					
ANR	1648555	Parameter	sljit_si src2	1929:1:65227:65239	1647849	6	True				
ANR	1648556	ParameterType	sljit_si		1647849	0					
ANR	1648557	Identifier	src2		1647849	1					
ANR	1648558	Parameter	sljit_sw src2w	1929:16:65242:65255	1647849	7	True				
ANR	1648559	ParameterType	sljit_sw		1647849	0					
ANR	1648560	Identifier	src2w		1647849	1					
ANR	1648561	CFGEntryNode	ENTRY		1647849		True				
ANR	1648562	CFGExitNode	EXIT		1647849		True				
ANR	1648563	Symbol	FADDS		1647849						
ANR	1648564	Symbol	compiler -> cache_argw		1647849						
ANR	1648565	Symbol	TMP_FREG2		1647849						
ANR	1648566	Symbol	src1w		1647849						
ANR	1648567	Symbol	dst		1647849						
ANR	1648568	Symbol	FLOAT_DATA		1647849						
ANR	1648569	Symbol	LOAD_DATA		1647849						
ANR	1648570	Symbol	TMP_FREG1		1647849						
ANR	1648571	Symbol	SLJIT_MEM		1647849						
ANR	1648572	Symbol	flags		1647849						
ANR	1648573	Symbol	* compiler		1647849						
ANR	1648574	Symbol	FMULS		1647849						
ANR	1648575	Symbol	FDIV		1647849						
ANR	1648576	Symbol	dst_r		1647849						
ANR	1648577	Symbol	GET_OPCODE		1647849						
ANR	1648578	Symbol	getput_arg		1647849						
ANR	1648579	Symbol	ALT_FORM1		1647849						
ANR	1648580	Symbol	ALT_FORM2		1647849						
ANR	1648581	Symbol	FADD		1647849						
ANR	1648582	Symbol	compiler		1647849						
ANR	1648583	Symbol	src2w		1647849						
ANR	1648584	Symbol	can_cache		1647849						
ANR	1648585	Symbol	op		1647849						
ANR	1648586	Symbol	push_inst		1647849						
ANR	1648587	Symbol	FAST_IS_REG		1647849						
ANR	1648588	Symbol	compiler -> cache_arg		1647849						
ANR	1648589	Symbol	emit_op_mem2		1647849						
ANR	1648590	Symbol	SLJIT_SUCCESS		1647849						
ANR	1648591	Symbol	check_sljit_emit_fop2		1647849						
ANR	1648592	Symbol	SELECT_FOP		1647849						
ANR	1648593	Symbol	FDIVS		1647849						
ANR	1648594	Symbol	src1		1647849						
ANR	1648595	Symbol	FSUBS		1647849						
ANR	1648596	Symbol	src2		1647849						
ANR	1648597	Symbol	FA		1647849						
ANR	1648598	Symbol	FSUB		1647849						
ANR	1648599	Symbol	getput_arg_fast		1647849						
ANR	1648600	Symbol	FB		1647849						
ANR	1648601	Symbol	dstw		1647849						
ANR	1648602	Symbol	compiler -> error		1647849						
ANR	1648603	Symbol	FC		1647849						
ANR	1648604	Symbol	FD		1647849						
ANR	1648605	Symbol	FMUL		1647849						
ANR	1648606	Function	sljit_emit_fast_enter	2004:1:67571:68383							
ANR	1648607	FunctionDef	"sljit_emit_fast_enter (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw)"		1648606	0					
ANR	1648608	CompoundStatement		2012:0:67954:68383	1648606	0					
ANR	1648609	ExpressionStatement	CHECK_ERROR ( )	2013:1:67957:67970	1648606	0	True				
ANR	1648610	CallExpression	CHECK_ERROR ( )		1648606	0					
ANR	1648611	Callee	CHECK_ERROR		1648606	0					
ANR	1648612	Identifier	CHECK_ERROR		1648606	0					
ANR	1648613	ArgumentList			1648606	1					
ANR	1648614	ExpressionStatement	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"	2014:1:67973:68028	1648606	1	True				
ANR	1648615	CallExpression	"CHECK ( check_sljit_emit_fast_enter ( compiler , dst , dstw ) )"		1648606	0					
ANR	1648616	Callee	CHECK		1648606	0					
ANR	1648617	Identifier	CHECK		1648606	0					
ANR	1648618	ArgumentList	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1648606	1					
ANR	1648619	Argument	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1648606	0					
ANR	1648620	CallExpression	"check_sljit_emit_fast_enter ( compiler , dst , dstw )"		1648606	0					
ANR	1648621	Callee	check_sljit_emit_fast_enter		1648606	0					
ANR	1648622	Identifier	check_sljit_emit_fast_enter		1648606	0					
ANR	1648623	ArgumentList	compiler		1648606	1					
ANR	1648624	Argument	compiler		1648606	0					
ANR	1648625	Identifier	compiler		1648606	0					
ANR	1648626	Argument	dst		1648606	1					
ANR	1648627	Identifier	dst		1648606	0					
ANR	1648628	Argument	dstw		1648606	2					
ANR	1648629	Identifier	dstw		1648606	0					
ANR	1648630	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2015:1:68031:68061	1648606	2	True				
ANR	1648631	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1648606	0					
ANR	1648632	Callee	ADJUST_LOCAL_OFFSET		1648606	0					
ANR	1648633	Identifier	ADJUST_LOCAL_OFFSET		1648606	0					
ANR	1648634	ArgumentList	dst		1648606	1					
ANR	1648635	Argument	dst		1648606	0					
ANR	1648636	Identifier	dst		1648606	0					
ANR	1648637	Argument	dstw		1648606	1					
ANR	1648638	Identifier	dstw		1648606	0					
ANR	1648639	IfStatement	if ( dst == SLJIT_UNUSED )		1648606	3					
ANR	1648640	Condition	dst == SLJIT_UNUSED	2018:5:68116:68134	1648606	0	True				
ANR	1648641	EqualityExpression	dst == SLJIT_UNUSED		1648606	0		==			
ANR	1648642	Identifier	dst		1648606	0					
ANR	1648643	Identifier	SLJIT_UNUSED		1648606	1					
ANR	1648644	ReturnStatement	return SLJIT_SUCCESS ;	2019:2:68139:68159	1648606	1	True				
ANR	1648645	Identifier	SLJIT_SUCCESS		1648606	0					
ANR	1648646	IfStatement	if ( FAST_IS_REG ( dst ) )		1648606	4					
ANR	1648647	Condition	FAST_IS_REG ( dst )	2021:5:68167:68182	1648606	0	True				
ANR	1648648	CallExpression	FAST_IS_REG ( dst )		1648606	0					
ANR	1648649	Callee	FAST_IS_REG		1648606	0					
ANR	1648650	Identifier	FAST_IS_REG		1648606	0					
ANR	1648651	ArgumentList	dst		1648606	1					
ANR	1648652	Argument	dst		1648606	0					
ANR	1648653	Identifier	dst		1648606	0					
ANR	1648654	ReturnStatement	"return push_inst ( compiler , MFLR | D ( dst ) ) ;"	2022:2:68187:68228	1648606	1	True				
ANR	1648655	CallExpression	"push_inst ( compiler , MFLR | D ( dst ) )"		1648606	0					
ANR	1648656	Callee	push_inst		1648606	0					
ANR	1648657	Identifier	push_inst		1648606	0					
ANR	1648658	ArgumentList	compiler		1648606	1					
ANR	1648659	Argument	compiler		1648606	0					
ANR	1648660	Identifier	compiler		1648606	0					
ANR	1648661	Argument	MFLR | D ( dst )		1648606	1					
ANR	1648662	InclusiveOrExpression	MFLR | D ( dst )		1648606	0		|			
ANR	1648663	Identifier	MFLR		1648606	0					
ANR	1648664	CallExpression	D ( dst )		1648606	1					
ANR	1648665	Callee	D		1648606	0					
ANR	1648666	Identifier	D		1648606	0					
ANR	1648667	ArgumentList	dst		1648606	1					
ANR	1648668	Argument	dst		1648606	0					
ANR	1648669	Identifier	dst		1648606	0					
ANR	1648670	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MFLR | D ( TMP_REG2 ) ) )"	2025:1:68247:68295	1648606	5	True				
ANR	1648671	CallExpression	"FAIL_IF ( push_inst ( compiler , MFLR | D ( TMP_REG2 ) ) )"		1648606	0					
ANR	1648672	Callee	FAIL_IF		1648606	0					
ANR	1648673	Identifier	FAIL_IF		1648606	0					
ANR	1648674	ArgumentList	"push_inst ( compiler , MFLR | D ( TMP_REG2 ) )"		1648606	1					
ANR	1648675	Argument	"push_inst ( compiler , MFLR | D ( TMP_REG2 ) )"		1648606	0					
ANR	1648676	CallExpression	"push_inst ( compiler , MFLR | D ( TMP_REG2 ) )"		1648606	0					
ANR	1648677	Callee	push_inst		1648606	0					
ANR	1648678	Identifier	push_inst		1648606	0					
ANR	1648679	ArgumentList	compiler		1648606	1					
ANR	1648680	Argument	compiler		1648606	0					
ANR	1648681	Identifier	compiler		1648606	0					
ANR	1648682	Argument	MFLR | D ( TMP_REG2 )		1648606	1					
ANR	1648683	InclusiveOrExpression	MFLR | D ( TMP_REG2 )		1648606	0		|			
ANR	1648684	Identifier	MFLR		1648606	0					
ANR	1648685	CallExpression	D ( TMP_REG2 )		1648606	1					
ANR	1648686	Callee	D		1648606	0					
ANR	1648687	Identifier	D		1648606	0					
ANR	1648688	ArgumentList	TMP_REG2		1648606	1					
ANR	1648689	Argument	TMP_REG2		1648606	0					
ANR	1648690	Identifier	TMP_REG2		1648606	0					
ANR	1648691	ReturnStatement	"return emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 ) ;"	2026:1:68298:68381	1648606	6	True				
ANR	1648692	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 )"		1648606	0					
ANR	1648693	Callee	emit_op		1648606	0					
ANR	1648694	Identifier	emit_op		1648606	0					
ANR	1648695	ArgumentList	compiler		1648606	1					
ANR	1648696	Argument	compiler		1648606	0					
ANR	1648697	Identifier	compiler		1648606	0					
ANR	1648698	Argument	SLJIT_MOV		1648606	1					
ANR	1648699	Identifier	SLJIT_MOV		1648606	0					
ANR	1648700	Argument	WORD_DATA		1648606	2					
ANR	1648701	Identifier	WORD_DATA		1648606	0					
ANR	1648702	Argument	dst		1648606	3					
ANR	1648703	Identifier	dst		1648606	0					
ANR	1648704	Argument	dstw		1648606	4					
ANR	1648705	Identifier	dstw		1648606	0					
ANR	1648706	Argument	TMP_REG1		1648606	5					
ANR	1648707	Identifier	TMP_REG1		1648606	0					
ANR	1648708	Argument	0		1648606	6					
ANR	1648709	PrimaryExpression	0		1648606	0					
ANR	1648710	Argument	TMP_REG2		1648606	7					
ANR	1648711	Identifier	TMP_REG2		1648606	0					
ANR	1648712	Argument	0		1648606	8					
ANR	1648713	PrimaryExpression	0		1648606	0					
ANR	1648714	ReturnType	undef FLOAT_DATA undef SELECT_FOP SLJIT_API_FUNC_ATTRIBUTE sljit_si		1648606	1					
ANR	1648715	Identifier	sljit_emit_fast_enter		1648606	2					
ANR	1648716	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw"		1648606	3					
ANR	1648717	Parameter	struct sljit_compiler * compiler	2011:56:67892:67922	1648606	0	True				
ANR	1648718	ParameterType	struct sljit_compiler *		1648606	0					
ANR	1648719	Identifier	compiler		1648606	1					
ANR	1648720	Parameter	sljit_si dst	2011:89:67925:67936	1648606	1	True				
ANR	1648721	ParameterType	sljit_si		1648606	0					
ANR	1648722	Identifier	dst		1648606	1					
ANR	1648723	Parameter	sljit_sw dstw	2011:103:67939:67951	1648606	2	True				
ANR	1648724	ParameterType	sljit_sw		1648606	0					
ANR	1648725	Identifier	dstw		1648606	1					
ANR	1648726	CFGEntryNode	ENTRY		1648606		True				
ANR	1648727	CFGExitNode	EXIT		1648606		True				
ANR	1648728	Symbol	push_inst		1648606						
ANR	1648729	Symbol	TMP_REG2		1648606						
ANR	1648730	Symbol	check_sljit_emit_fast_enter		1648606						
ANR	1648731	Symbol	TMP_REG1		1648606						
ANR	1648732	Symbol	FAST_IS_REG		1648606						
ANR	1648733	Symbol	dst		1648606						
ANR	1648734	Symbol	D		1648606						
ANR	1648735	Symbol	SLJIT_MOV		1648606						
ANR	1648736	Symbol	SLJIT_SUCCESS		1648606						
ANR	1648737	Symbol	SLJIT_UNUSED		1648606						
ANR	1648738	Symbol	MFLR		1648606						
ANR	1648739	Symbol	compiler		1648606						
ANR	1648740	Symbol	dstw		1648606						
ANR	1648741	Symbol	emit_op		1648606						
ANR	1648742	Symbol	WORD_DATA		1648606						
ANR	1648743	Function	sljit_emit_fast_return	2029:0:68386:68978							
ANR	1648744	FunctionDef	"sljit_emit_fast_return (struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw)"		1648743	0					
ANR	1648745	CompoundStatement		2030:0:68505:68978	1648743	0					
ANR	1648746	ExpressionStatement	CHECK_ERROR ( )	2031:1:68508:68521	1648743	0	True				
ANR	1648747	CallExpression	CHECK_ERROR ( )		1648743	0					
ANR	1648748	Callee	CHECK_ERROR		1648743	0					
ANR	1648749	Identifier	CHECK_ERROR		1648743	0					
ANR	1648750	ArgumentList			1648743	1					
ANR	1648751	ExpressionStatement	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"	2032:1:68524:68580	1648743	1	True				
ANR	1648752	CallExpression	"CHECK ( check_sljit_emit_fast_return ( compiler , src , srcw ) )"		1648743	0					
ANR	1648753	Callee	CHECK		1648743	0					
ANR	1648754	Identifier	CHECK		1648743	0					
ANR	1648755	ArgumentList	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1648743	1					
ANR	1648756	Argument	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1648743	0					
ANR	1648757	CallExpression	"check_sljit_emit_fast_return ( compiler , src , srcw )"		1648743	0					
ANR	1648758	Callee	check_sljit_emit_fast_return		1648743	0					
ANR	1648759	Identifier	check_sljit_emit_fast_return		1648743	0					
ANR	1648760	ArgumentList	compiler		1648743	1					
ANR	1648761	Argument	compiler		1648743	0					
ANR	1648762	Identifier	compiler		1648743	0					
ANR	1648763	Argument	src		1648743	1					
ANR	1648764	Identifier	src		1648743	0					
ANR	1648765	Argument	srcw		1648743	2					
ANR	1648766	Identifier	srcw		1648743	0					
ANR	1648767	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	2033:1:68583:68613	1648743	2	True				
ANR	1648768	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1648743	0					
ANR	1648769	Callee	ADJUST_LOCAL_OFFSET		1648743	0					
ANR	1648770	Identifier	ADJUST_LOCAL_OFFSET		1648743	0					
ANR	1648771	ArgumentList	src		1648743	1					
ANR	1648772	Argument	src		1648743	0					
ANR	1648773	Identifier	src		1648743	0					
ANR	1648774	Argument	srcw		1648743	1					
ANR	1648775	Identifier	srcw		1648743	0					
ANR	1648776	IfStatement	if ( FAST_IS_REG ( src ) )		1648743	3					
ANR	1648777	Condition	FAST_IS_REG ( src )	2035:5:68621:68636	1648743	0	True				
ANR	1648778	CallExpression	FAST_IS_REG ( src )		1648743	0					
ANR	1648779	Callee	FAST_IS_REG		1648743	0					
ANR	1648780	Identifier	FAST_IS_REG		1648743	0					
ANR	1648781	ArgumentList	src		1648743	1					
ANR	1648782	Argument	src		1648743	0					
ANR	1648783	Identifier	src		1648743	0					
ANR	1648784	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MTLR | S ( src ) ) )"	2036:2:68641:68684	1648743	1	True				
ANR	1648785	CallExpression	"FAIL_IF ( push_inst ( compiler , MTLR | S ( src ) ) )"		1648743	0					
ANR	1648786	Callee	FAIL_IF		1648743	0					
ANR	1648787	Identifier	FAIL_IF		1648743	0					
ANR	1648788	ArgumentList	"push_inst ( compiler , MTLR | S ( src ) )"		1648743	1					
ANR	1648789	Argument	"push_inst ( compiler , MTLR | S ( src ) )"		1648743	0					
ANR	1648790	CallExpression	"push_inst ( compiler , MTLR | S ( src ) )"		1648743	0					
ANR	1648791	Callee	push_inst		1648743	0					
ANR	1648792	Identifier	push_inst		1648743	0					
ANR	1648793	ArgumentList	compiler		1648743	1					
ANR	1648794	Argument	compiler		1648743	0					
ANR	1648795	Identifier	compiler		1648743	0					
ANR	1648796	Argument	MTLR | S ( src )		1648743	1					
ANR	1648797	InclusiveOrExpression	MTLR | S ( src )		1648743	0		|			
ANR	1648798	Identifier	MTLR		1648743	0					
ANR	1648799	CallExpression	S ( src )		1648743	1					
ANR	1648800	Callee	S		1648743	0					
ANR	1648801	Identifier	S		1648743	0					
ANR	1648802	ArgumentList	src		1648743	1					
ANR	1648803	Argument	src		1648743	0					
ANR	1648804	Identifier	src		1648743	0					
ANR	1648805	ElseStatement	else		1648743	0					
ANR	1648806	CompoundStatement		8:6:186:186	1648743	0					
ANR	1648807	IfStatement	if ( src & SLJIT_MEM )		1648743	0					
ANR	1648808	Condition	src & SLJIT_MEM	2038:6:68700:68714	1648743	0	True				
ANR	1648809	BitAndExpression	src & SLJIT_MEM		1648743	0		&			
ANR	1648810	Identifier	src		1648743	0					
ANR	1648811	Identifier	SLJIT_MEM		1648743	1					
ANR	1648812	ExpressionStatement	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw ) )"	2039:3:68720:68805	1648743	1	True				
ANR	1648813	CallExpression	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw ) )"		1648743	0					
ANR	1648814	Callee	FAIL_IF		1648743	0					
ANR	1648815	Identifier	FAIL_IF		1648743	0					
ANR	1648816	ArgumentList	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1648743	1					
ANR	1648817	Argument	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1648743	0					
ANR	1648818	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_REG2 , 0 , TMP_REG1 , 0 , src , srcw )"		1648743	0					
ANR	1648819	Callee	emit_op		1648743	0					
ANR	1648820	Identifier	emit_op		1648743	0					
ANR	1648821	ArgumentList	compiler		1648743	1					
ANR	1648822	Argument	compiler		1648743	0					
ANR	1648823	Identifier	compiler		1648743	0					
ANR	1648824	Argument	SLJIT_MOV		1648743	1					
ANR	1648825	Identifier	SLJIT_MOV		1648743	0					
ANR	1648826	Argument	WORD_DATA		1648743	2					
ANR	1648827	Identifier	WORD_DATA		1648743	0					
ANR	1648828	Argument	TMP_REG2		1648743	3					
ANR	1648829	Identifier	TMP_REG2		1648743	0					
ANR	1648830	Argument	0		1648743	4					
ANR	1648831	PrimaryExpression	0		1648743	0					
ANR	1648832	Argument	TMP_REG1		1648743	5					
ANR	1648833	Identifier	TMP_REG1		1648743	0					
ANR	1648834	Argument	0		1648743	6					
ANR	1648835	PrimaryExpression	0		1648743	0					
ANR	1648836	Argument	src		1648743	7					
ANR	1648837	Identifier	src		1648743	0					
ANR	1648838	Argument	srcw		1648743	8					
ANR	1648839	Identifier	srcw		1648743	0					
ANR	1648840	ElseStatement	else		1648743	0					
ANR	1648841	IfStatement	if ( src & SLJIT_IMM )		1648743	0					
ANR	1648842	Condition	src & SLJIT_IMM	2040:11:68818:68832	1648743	0	True				
ANR	1648843	BitAndExpression	src & SLJIT_IMM		1648743	0		&			
ANR	1648844	Identifier	src		1648743	0					
ANR	1648845	Identifier	SLJIT_IMM		1648743	1					
ANR	1648846	ExpressionStatement	"FAIL_IF ( load_immediate ( compiler , TMP_REG2 , srcw ) )"	2041:3:68838:68887	1648743	1	True				
ANR	1648847	CallExpression	"FAIL_IF ( load_immediate ( compiler , TMP_REG2 , srcw ) )"		1648743	0					
ANR	1648848	Callee	FAIL_IF		1648743	0					
ANR	1648849	Identifier	FAIL_IF		1648743	0					
ANR	1648850	ArgumentList	"load_immediate ( compiler , TMP_REG2 , srcw )"		1648743	1					
ANR	1648851	Argument	"load_immediate ( compiler , TMP_REG2 , srcw )"		1648743	0					
ANR	1648852	CallExpression	"load_immediate ( compiler , TMP_REG2 , srcw )"		1648743	0					
ANR	1648853	Callee	load_immediate		1648743	0					
ANR	1648854	Identifier	load_immediate		1648743	0					
ANR	1648855	ArgumentList	compiler		1648743	1					
ANR	1648856	Argument	compiler		1648743	0					
ANR	1648857	Identifier	compiler		1648743	0					
ANR	1648858	Argument	TMP_REG2		1648743	1					
ANR	1648859	Identifier	TMP_REG2		1648743	0					
ANR	1648860	Argument	srcw		1648743	2					
ANR	1648861	Identifier	srcw		1648743	0					
ANR	1648862	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MTLR | S ( TMP_REG2 ) ) )"	2042:2:68891:68939	1648743	1	True				
ANR	1648863	CallExpression	"FAIL_IF ( push_inst ( compiler , MTLR | S ( TMP_REG2 ) ) )"		1648743	0					
ANR	1648864	Callee	FAIL_IF		1648743	0					
ANR	1648865	Identifier	FAIL_IF		1648743	0					
ANR	1648866	ArgumentList	"push_inst ( compiler , MTLR | S ( TMP_REG2 ) )"		1648743	1					
ANR	1648867	Argument	"push_inst ( compiler , MTLR | S ( TMP_REG2 ) )"		1648743	0					
ANR	1648868	CallExpression	"push_inst ( compiler , MTLR | S ( TMP_REG2 ) )"		1648743	0					
ANR	1648869	Callee	push_inst		1648743	0					
ANR	1648870	Identifier	push_inst		1648743	0					
ANR	1648871	ArgumentList	compiler		1648743	1					
ANR	1648872	Argument	compiler		1648743	0					
ANR	1648873	Identifier	compiler		1648743	0					
ANR	1648874	Argument	MTLR | S ( TMP_REG2 )		1648743	1					
ANR	1648875	InclusiveOrExpression	MTLR | S ( TMP_REG2 )		1648743	0		|			
ANR	1648876	Identifier	MTLR		1648743	0					
ANR	1648877	CallExpression	S ( TMP_REG2 )		1648743	1					
ANR	1648878	Callee	S		1648743	0					
ANR	1648879	Identifier	S		1648743	0					
ANR	1648880	ArgumentList	TMP_REG2		1648743	1					
ANR	1648881	Argument	TMP_REG2		1648743	0					
ANR	1648882	Identifier	TMP_REG2		1648743	0					
ANR	1648883	ReturnStatement	"return push_inst ( compiler , BLR ) ;"	2044:1:68945:68976	1648743	4	True				
ANR	1648884	CallExpression	"push_inst ( compiler , BLR )"		1648743	0					
ANR	1648885	Callee	push_inst		1648743	0					
ANR	1648886	Identifier	push_inst		1648743	0					
ANR	1648887	ArgumentList	compiler		1648743	1					
ANR	1648888	Argument	compiler		1648743	0					
ANR	1648889	Identifier	compiler		1648743	0					
ANR	1648890	Argument	BLR		1648743	1					
ANR	1648891	Identifier	BLR		1648743	0					
ANR	1648892	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1648743	1					
ANR	1648893	Identifier	sljit_emit_fast_return		1648743	2					
ANR	1648894	ParameterList	"struct sljit_compiler * compiler , sljit_si src , sljit_sw srcw"		1648743	3					
ANR	1648895	Parameter	struct sljit_compiler * compiler	2029:57:68443:68473	1648743	0	True				
ANR	1648896	ParameterType	struct sljit_compiler *		1648743	0					
ANR	1648897	Identifier	compiler		1648743	1					
ANR	1648898	Parameter	sljit_si src	2029:90:68476:68487	1648743	1	True				
ANR	1648899	ParameterType	sljit_si		1648743	0					
ANR	1648900	Identifier	src		1648743	1					
ANR	1648901	Parameter	sljit_sw srcw	2029:104:68490:68502	1648743	2	True				
ANR	1648902	ParameterType	sljit_sw		1648743	0					
ANR	1648903	Identifier	srcw		1648743	1					
ANR	1648904	CFGEntryNode	ENTRY		1648743		True				
ANR	1648905	CFGExitNode	EXIT		1648743		True				
ANR	1648906	Symbol	push_inst		1648743						
ANR	1648907	Symbol	TMP_REG2		1648743						
ANR	1648908	Symbol	TMP_REG1		1648743						
ANR	1648909	Symbol	FAST_IS_REG		1648743						
ANR	1648910	Symbol	src		1648743						
ANR	1648911	Symbol	SLJIT_MOV		1648743						
ANR	1648912	Symbol	srcw		1648743						
ANR	1648913	Symbol	SLJIT_MEM		1648743						
ANR	1648914	Symbol	MTLR		1648743						
ANR	1648915	Symbol	BLR		1648743						
ANR	1648916	Symbol	SLJIT_IMM		1648743						
ANR	1648917	Symbol	S		1648743						
ANR	1648918	Symbol	check_sljit_emit_fast_return		1648743						
ANR	1648919	Symbol	load_immediate		1648743						
ANR	1648920	Symbol	compiler		1648743						
ANR	1648921	Symbol	WORD_DATA		1648743						
ANR	1648922	Symbol	emit_op		1648743						
ANR	1648923	Function	sljit_emit_label	2051:25:69235:69657							
ANR	1648924	FunctionDef	sljit_emit_label (struct sljit_compiler * compiler)		1648923	0					
ANR	1648925	CompoundStatement		2052:0:69305:69657	1648923	0					
ANR	1648926	IdentifierDeclStatement	struct sljit_label * label ;	2053:1:69308:69333	1648923	0	True				
ANR	1648927	IdentifierDecl	* label		1648923	0					
ANR	1648928	IdentifierDeclType	struct sljit_label *		1648923	0					
ANR	1648929	Identifier	label		1648923	1					
ANR	1648930	ExpressionStatement	CHECK_ERROR_PTR ( )	2055:1:69337:69354	1648923	1	True				
ANR	1648931	CallExpression	CHECK_ERROR_PTR ( )		1648923	0					
ANR	1648932	Callee	CHECK_ERROR_PTR		1648923	0					
ANR	1648933	Identifier	CHECK_ERROR_PTR		1648923	0					
ANR	1648934	ArgumentList			1648923	1					
ANR	1648935	ExpressionStatement	CHECK_PTR ( check_sljit_emit_label ( compiler ) )	2056:1:69357:69400	1648923	2	True				
ANR	1648936	CallExpression	CHECK_PTR ( check_sljit_emit_label ( compiler ) )		1648923	0					
ANR	1648937	Callee	CHECK_PTR		1648923	0					
ANR	1648938	Identifier	CHECK_PTR		1648923	0					
ANR	1648939	ArgumentList	check_sljit_emit_label ( compiler )		1648923	1					
ANR	1648940	Argument	check_sljit_emit_label ( compiler )		1648923	0					
ANR	1648941	CallExpression	check_sljit_emit_label ( compiler )		1648923	0					
ANR	1648942	Callee	check_sljit_emit_label		1648923	0					
ANR	1648943	Identifier	check_sljit_emit_label		1648923	0					
ANR	1648944	ArgumentList	compiler		1648923	1					
ANR	1648945	Argument	compiler		1648923	0					
ANR	1648946	Identifier	compiler		1648923	0					
ANR	1648947	IfStatement	if ( compiler -> last_label && compiler -> last_label -> size == compiler -> size )		1648923	3					
ANR	1648948	Condition	compiler -> last_label && compiler -> last_label -> size == compiler -> size	2058:5:69408:69475	1648923	0	True				
ANR	1648949	AndExpression	compiler -> last_label && compiler -> last_label -> size == compiler -> size		1648923	0		&&			
ANR	1648950	PtrMemberAccess	compiler -> last_label		1648923	0					
ANR	1648951	Identifier	compiler		1648923	0					
ANR	1648952	Identifier	last_label		1648923	1					
ANR	1648953	EqualityExpression	compiler -> last_label -> size == compiler -> size		1648923	1		==			
ANR	1648954	PtrMemberAccess	compiler -> last_label -> size		1648923	0					
ANR	1648955	PtrMemberAccess	compiler -> last_label		1648923	0					
ANR	1648956	Identifier	compiler		1648923	0					
ANR	1648957	Identifier	last_label		1648923	1					
ANR	1648958	Identifier	size		1648923	1					
ANR	1648959	PtrMemberAccess	compiler -> size		1648923	1					
ANR	1648960	Identifier	compiler		1648923	0					
ANR	1648961	Identifier	size		1648923	1					
ANR	1648962	ReturnStatement	return compiler -> last_label ;	2059:2:69480:69507	1648923	1	True				
ANR	1648963	PtrMemberAccess	compiler -> last_label		1648923	0					
ANR	1648964	Identifier	compiler		1648923	0					
ANR	1648965	Identifier	last_label		1648923	1					
ANR	1648966	ExpressionStatement	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"	2061:1:69511:69589	1648923	4	True				
ANR	1648967	AssignmentExpression	"label = ( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1648923	0		=			
ANR	1648968	Identifier	label		1648923	0					
ANR	1648969	CastExpression	"( struct sljit_label * ) ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1648923	1					
ANR	1648970	CastTarget	struct sljit_label *		1648923	0					
ANR	1648971	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_label ) )"		1648923	1					
ANR	1648972	Callee	ensure_abuf		1648923	0					
ANR	1648973	Identifier	ensure_abuf		1648923	0					
ANR	1648974	ArgumentList	compiler		1648923	1					
ANR	1648975	Argument	compiler		1648923	0					
ANR	1648976	Identifier	compiler		1648923	0					
ANR	1648977	Argument	sizeof ( struct sljit_label )		1648923	1					
ANR	1648978	SizeofExpression	sizeof ( struct sljit_label )		1648923	0					
ANR	1648979	Sizeof	sizeof		1648923	0					
ANR	1648980	SizeofOperand	struct sljit_label		1648923	1					
ANR	1648981	ExpressionStatement	PTR_FAIL_IF ( ! label )	2062:1:69592:69611	1648923	5	True				
ANR	1648982	CallExpression	PTR_FAIL_IF ( ! label )		1648923	0					
ANR	1648983	Callee	PTR_FAIL_IF		1648923	0					
ANR	1648984	Identifier	PTR_FAIL_IF		1648923	0					
ANR	1648985	ArgumentList	! label		1648923	1					
ANR	1648986	Argument	! label		1648923	0					
ANR	1648987	UnaryOperationExpression	! label		1648923	0					
ANR	1648988	UnaryOperator	!		1648923	0					
ANR	1648989	Identifier	label		1648923	1					
ANR	1648990	ExpressionStatement	"set_label ( label , compiler )"	2063:1:69614:69640	1648923	6	True				
ANR	1648991	CallExpression	"set_label ( label , compiler )"		1648923	0					
ANR	1648992	Callee	set_label		1648923	0					
ANR	1648993	Identifier	set_label		1648923	0					
ANR	1648994	ArgumentList	label		1648923	1					
ANR	1648995	Argument	label		1648923	0					
ANR	1648996	Identifier	label		1648923	0					
ANR	1648997	Argument	compiler		1648923	1					
ANR	1648998	Identifier	compiler		1648923	0					
ANR	1648999	ReturnStatement	return label ;	2064:1:69643:69655	1648923	7	True				
ANR	1649000	Identifier	label		1648923	0					
ANR	1649001	ReturnType	struct sljit_label *		1648923	1					
ANR	1649002	Identifier	sljit_emit_label		1648923	2					
ANR	1649003	ParameterList	struct sljit_compiler * compiler		1648923	3					
ANR	1649004	Parameter	struct sljit_compiler * compiler	2051:62:69272:69302	1648923	0	True				
ANR	1649005	ParameterType	struct sljit_compiler *		1648923	0					
ANR	1649006	Identifier	compiler		1648923	1					
ANR	1649007	CFGEntryNode	ENTRY		1648923		True				
ANR	1649008	CFGExitNode	EXIT		1648923		True				
ANR	1649009	Symbol	* compiler -> last_label		1648923						
ANR	1649010	Symbol	compiler -> last_label -> size		1648923						
ANR	1649011	Symbol	compiler -> last_label		1648923						
ANR	1649012	Symbol	* * compiler		1648923						
ANR	1649013	Symbol	compiler -> size		1648923						
ANR	1649014	Symbol	check_sljit_emit_label		1648923						
ANR	1649015	Symbol	label		1648923						
ANR	1649016	Symbol	* compiler		1648923						
ANR	1649017	Symbol	ensure_abuf		1648923						
ANR	1649018	Symbol	compiler		1648923						
ANR	1649019	Function	get_bo_bi_flags	2067:0:69660:70938							
ANR	1649020	FunctionDef	get_bo_bi_flags (sljit_si type)		1649019	0					
ANR	1649021	CompoundStatement		2068:0:69708:70938	1649019	0					
ANR	1649022	SwitchStatement	switch ( type )		1649019	0					
ANR	1649023	Condition	type	2069:9:69719:69722	1649019	0	True				
ANR	1649024	Identifier	type		1649019	0					
ANR	1649025	CompoundStatement		2:15:16:16	1649019	1					
ANR	1649026	Label	case SLJIT_EQUAL :	2070:1:69728:69744	1649019	0	True				
ANR	1649027	Identifier	SLJIT_EQUAL		1649019	0					
ANR	1649028	ReturnStatement	return ( 12 << 21 ) | ( 2 << 16 ) ;	2071:2:69748:69777	1649019	1	True				
ANR	1649029	InclusiveOrExpression	( 12 << 21 ) | ( 2 << 16 )		1649019	0		|			
ANR	1649030	ShiftExpression	12 << 21		1649019	0		<<			
ANR	1649031	PrimaryExpression	12		1649019	0					
ANR	1649032	PrimaryExpression	21		1649019	1					
ANR	1649033	ShiftExpression	2 << 16		1649019	1		<<			
ANR	1649034	PrimaryExpression	2		1649019	0					
ANR	1649035	PrimaryExpression	16		1649019	1					
ANR	1649036	Label	case SLJIT_NOT_EQUAL :	2073:1:69781:69801	1649019	2	True				
ANR	1649037	Identifier	SLJIT_NOT_EQUAL		1649019	0					
ANR	1649038	ReturnStatement	return ( 4 << 21 ) | ( 2 << 16 ) ;	2074:2:69805:69833	1649019	3	True				
ANR	1649039	InclusiveOrExpression	( 4 << 21 ) | ( 2 << 16 )		1649019	0		|			
ANR	1649040	ShiftExpression	4 << 21		1649019	0		<<			
ANR	1649041	PrimaryExpression	4		1649019	0					
ANR	1649042	PrimaryExpression	21		1649019	1					
ANR	1649043	ShiftExpression	2 << 16		1649019	1		<<			
ANR	1649044	PrimaryExpression	2		1649019	0					
ANR	1649045	PrimaryExpression	16		1649019	1					
ANR	1649046	Label	case SLJIT_LESS :	2076:1:69837:69852	1649019	4	True				
ANR	1649047	Identifier	SLJIT_LESS		1649019	0					
ANR	1649048	Label	case SLJIT_D_LESS :	2077:1:69855:69872	1649019	5	True				
ANR	1649049	Identifier	SLJIT_D_LESS		1649019	0					
ANR	1649050	ReturnStatement	return ( 12 << 21 ) | ( ( 4 + 0 ) << 16 ) ;	2078:2:69876:69911	1649019	6	True				
ANR	1649051	InclusiveOrExpression	( 12 << 21 ) | ( ( 4 + 0 ) << 16 )		1649019	0		|			
ANR	1649052	ShiftExpression	12 << 21		1649019	0		<<			
ANR	1649053	PrimaryExpression	12		1649019	0					
ANR	1649054	PrimaryExpression	21		1649019	1					
ANR	1649055	ShiftExpression	( 4 + 0 ) << 16		1649019	1		<<			
ANR	1649056	AdditiveExpression	4 + 0		1649019	0		+			
ANR	1649057	PrimaryExpression	4		1649019	0					
ANR	1649058	PrimaryExpression	0		1649019	1					
ANR	1649059	PrimaryExpression	16		1649019	1					
ANR	1649060	Label	case SLJIT_GREATER_EQUAL :	2080:1:69915:69939	1649019	7	True				
ANR	1649061	Identifier	SLJIT_GREATER_EQUAL		1649019	0					
ANR	1649062	Label	case SLJIT_D_GREATER_EQUAL :	2081:1:69942:69968	1649019	8	True				
ANR	1649063	Identifier	SLJIT_D_GREATER_EQUAL		1649019	0					
ANR	1649064	ReturnStatement	return ( 4 << 21 ) | ( ( 4 + 0 ) << 16 ) ;	2082:2:69972:70006	1649019	9	True				
ANR	1649065	InclusiveOrExpression	( 4 << 21 ) | ( ( 4 + 0 ) << 16 )		1649019	0		|			
ANR	1649066	ShiftExpression	4 << 21		1649019	0		<<			
ANR	1649067	PrimaryExpression	4		1649019	0					
ANR	1649068	PrimaryExpression	21		1649019	1					
ANR	1649069	ShiftExpression	( 4 + 0 ) << 16		1649019	1		<<			
ANR	1649070	AdditiveExpression	4 + 0		1649019	0		+			
ANR	1649071	PrimaryExpression	4		1649019	0					
ANR	1649072	PrimaryExpression	0		1649019	1					
ANR	1649073	PrimaryExpression	16		1649019	1					
ANR	1649074	Label	case SLJIT_GREATER :	2084:1:70010:70028	1649019	10	True				
ANR	1649075	Identifier	SLJIT_GREATER		1649019	0					
ANR	1649076	Label	case SLJIT_D_GREATER :	2085:1:70031:70051	1649019	11	True				
ANR	1649077	Identifier	SLJIT_D_GREATER		1649019	0					
ANR	1649078	ReturnStatement	return ( 12 << 21 ) | ( ( 4 + 1 ) << 16 ) ;	2086:2:70055:70090	1649019	12	True				
ANR	1649079	InclusiveOrExpression	( 12 << 21 ) | ( ( 4 + 1 ) << 16 )		1649019	0		|			
ANR	1649080	ShiftExpression	12 << 21		1649019	0		<<			
ANR	1649081	PrimaryExpression	12		1649019	0					
ANR	1649082	PrimaryExpression	21		1649019	1					
ANR	1649083	ShiftExpression	( 4 + 1 ) << 16		1649019	1		<<			
ANR	1649084	AdditiveExpression	4 + 1		1649019	0		+			
ANR	1649085	PrimaryExpression	4		1649019	0					
ANR	1649086	PrimaryExpression	1		1649019	1					
ANR	1649087	PrimaryExpression	16		1649019	1					
ANR	1649088	Label	case SLJIT_LESS_EQUAL :	2088:1:70094:70115	1649019	13	True				
ANR	1649089	Identifier	SLJIT_LESS_EQUAL		1649019	0					
ANR	1649090	Label	case SLJIT_D_LESS_EQUAL :	2089:1:70118:70141	1649019	14	True				
ANR	1649091	Identifier	SLJIT_D_LESS_EQUAL		1649019	0					
ANR	1649092	ReturnStatement	return ( 4 << 21 ) | ( ( 4 + 1 ) << 16 ) ;	2090:2:70145:70179	1649019	15	True				
ANR	1649093	InclusiveOrExpression	( 4 << 21 ) | ( ( 4 + 1 ) << 16 )		1649019	0		|			
ANR	1649094	ShiftExpression	4 << 21		1649019	0		<<			
ANR	1649095	PrimaryExpression	4		1649019	0					
ANR	1649096	PrimaryExpression	21		1649019	1					
ANR	1649097	ShiftExpression	( 4 + 1 ) << 16		1649019	1		<<			
ANR	1649098	AdditiveExpression	4 + 1		1649019	0		+			
ANR	1649099	PrimaryExpression	4		1649019	0					
ANR	1649100	PrimaryExpression	1		1649019	1					
ANR	1649101	PrimaryExpression	16		1649019	1					
ANR	1649102	Label	case SLJIT_SIG_LESS :	2092:1:70183:70202	1649019	16	True				
ANR	1649103	Identifier	SLJIT_SIG_LESS		1649019	0					
ANR	1649104	ReturnStatement	return ( 12 << 21 ) | ( 0 << 16 ) ;	2093:2:70206:70235	1649019	17	True				
ANR	1649105	InclusiveOrExpression	( 12 << 21 ) | ( 0 << 16 )		1649019	0		|			
ANR	1649106	ShiftExpression	12 << 21		1649019	0		<<			
ANR	1649107	PrimaryExpression	12		1649019	0					
ANR	1649108	PrimaryExpression	21		1649019	1					
ANR	1649109	ShiftExpression	0 << 16		1649019	1		<<			
ANR	1649110	PrimaryExpression	0		1649019	0					
ANR	1649111	PrimaryExpression	16		1649019	1					
ANR	1649112	Label	case SLJIT_SIG_GREATER_EQUAL :	2095:1:70239:70267	1649019	18	True				
ANR	1649113	Identifier	SLJIT_SIG_GREATER_EQUAL		1649019	0					
ANR	1649114	ReturnStatement	return ( 4 << 21 ) | ( 0 << 16 ) ;	2096:2:70271:70299	1649019	19	True				
ANR	1649115	InclusiveOrExpression	( 4 << 21 ) | ( 0 << 16 )		1649019	0		|			
ANR	1649116	ShiftExpression	4 << 21		1649019	0		<<			
ANR	1649117	PrimaryExpression	4		1649019	0					
ANR	1649118	PrimaryExpression	21		1649019	1					
ANR	1649119	ShiftExpression	0 << 16		1649019	1		<<			
ANR	1649120	PrimaryExpression	0		1649019	0					
ANR	1649121	PrimaryExpression	16		1649019	1					
ANR	1649122	Label	case SLJIT_SIG_GREATER :	2098:1:70303:70325	1649019	20	True				
ANR	1649123	Identifier	SLJIT_SIG_GREATER		1649019	0					
ANR	1649124	ReturnStatement	return ( 12 << 21 ) | ( 1 << 16 ) ;	2099:2:70329:70358	1649019	21	True				
ANR	1649125	InclusiveOrExpression	( 12 << 21 ) | ( 1 << 16 )		1649019	0		|			
ANR	1649126	ShiftExpression	12 << 21		1649019	0		<<			
ANR	1649127	PrimaryExpression	12		1649019	0					
ANR	1649128	PrimaryExpression	21		1649019	1					
ANR	1649129	ShiftExpression	1 << 16		1649019	1		<<			
ANR	1649130	PrimaryExpression	1		1649019	0					
ANR	1649131	PrimaryExpression	16		1649019	1					
ANR	1649132	Label	case SLJIT_SIG_LESS_EQUAL :	2101:1:70362:70387	1649019	22	True				
ANR	1649133	Identifier	SLJIT_SIG_LESS_EQUAL		1649019	0					
ANR	1649134	ReturnStatement	return ( 4 << 21 ) | ( 1 << 16 ) ;	2102:2:70391:70419	1649019	23	True				
ANR	1649135	InclusiveOrExpression	( 4 << 21 ) | ( 1 << 16 )		1649019	0		|			
ANR	1649136	ShiftExpression	4 << 21		1649019	0		<<			
ANR	1649137	PrimaryExpression	4		1649019	0					
ANR	1649138	PrimaryExpression	21		1649019	1					
ANR	1649139	ShiftExpression	1 << 16		1649019	1		<<			
ANR	1649140	PrimaryExpression	1		1649019	0					
ANR	1649141	PrimaryExpression	16		1649019	1					
ANR	1649142	Label	case SLJIT_OVERFLOW :	2104:1:70423:70442	1649019	24	True				
ANR	1649143	Identifier	SLJIT_OVERFLOW		1649019	0					
ANR	1649144	Label	case SLJIT_MUL_OVERFLOW :	2105:1:70445:70468	1649019	25	True				
ANR	1649145	Identifier	SLJIT_MUL_OVERFLOW		1649019	0					
ANR	1649146	ReturnStatement	return ( 12 << 21 ) | ( 3 << 16 ) ;	2106:2:70472:70501	1649019	26	True				
ANR	1649147	InclusiveOrExpression	( 12 << 21 ) | ( 3 << 16 )		1649019	0		|			
ANR	1649148	ShiftExpression	12 << 21		1649019	0		<<			
ANR	1649149	PrimaryExpression	12		1649019	0					
ANR	1649150	PrimaryExpression	21		1649019	1					
ANR	1649151	ShiftExpression	3 << 16		1649019	1		<<			
ANR	1649152	PrimaryExpression	3		1649019	0					
ANR	1649153	PrimaryExpression	16		1649019	1					
ANR	1649154	Label	case SLJIT_NOT_OVERFLOW :	2108:1:70505:70528	1649019	27	True				
ANR	1649155	Identifier	SLJIT_NOT_OVERFLOW		1649019	0					
ANR	1649156	Label	case SLJIT_MUL_NOT_OVERFLOW :	2109:1:70531:70558	1649019	28	True				
ANR	1649157	Identifier	SLJIT_MUL_NOT_OVERFLOW		1649019	0					
ANR	1649158	ReturnStatement	return ( 4 << 21 ) | ( 3 << 16 ) ;	2110:2:70562:70590	1649019	29	True				
ANR	1649159	InclusiveOrExpression	( 4 << 21 ) | ( 3 << 16 )		1649019	0		|			
ANR	1649160	ShiftExpression	4 << 21		1649019	0		<<			
ANR	1649161	PrimaryExpression	4		1649019	0					
ANR	1649162	PrimaryExpression	21		1649019	1					
ANR	1649163	ShiftExpression	3 << 16		1649019	1		<<			
ANR	1649164	PrimaryExpression	3		1649019	0					
ANR	1649165	PrimaryExpression	16		1649019	1					
ANR	1649166	Label	case SLJIT_D_EQUAL :	2112:1:70594:70612	1649019	30	True				
ANR	1649167	Identifier	SLJIT_D_EQUAL		1649019	0					
ANR	1649168	ReturnStatement	return ( 12 << 21 ) | ( ( 4 + 2 ) << 16 ) ;	2113:2:70616:70651	1649019	31	True				
ANR	1649169	InclusiveOrExpression	( 12 << 21 ) | ( ( 4 + 2 ) << 16 )		1649019	0		|			
ANR	1649170	ShiftExpression	12 << 21		1649019	0		<<			
ANR	1649171	PrimaryExpression	12		1649019	0					
ANR	1649172	PrimaryExpression	21		1649019	1					
ANR	1649173	ShiftExpression	( 4 + 2 ) << 16		1649019	1		<<			
ANR	1649174	AdditiveExpression	4 + 2		1649019	0		+			
ANR	1649175	PrimaryExpression	4		1649019	0					
ANR	1649176	PrimaryExpression	2		1649019	1					
ANR	1649177	PrimaryExpression	16		1649019	1					
ANR	1649178	Label	case SLJIT_D_NOT_EQUAL :	2115:1:70655:70677	1649019	32	True				
ANR	1649179	Identifier	SLJIT_D_NOT_EQUAL		1649019	0					
ANR	1649180	ReturnStatement	return ( 4 << 21 ) | ( ( 4 + 2 ) << 16 ) ;	2116:2:70681:70715	1649019	33	True				
ANR	1649181	InclusiveOrExpression	( 4 << 21 ) | ( ( 4 + 2 ) << 16 )		1649019	0		|			
ANR	1649182	ShiftExpression	4 << 21		1649019	0		<<			
ANR	1649183	PrimaryExpression	4		1649019	0					
ANR	1649184	PrimaryExpression	21		1649019	1					
ANR	1649185	ShiftExpression	( 4 + 2 ) << 16		1649019	1		<<			
ANR	1649186	AdditiveExpression	4 + 2		1649019	0		+			
ANR	1649187	PrimaryExpression	4		1649019	0					
ANR	1649188	PrimaryExpression	2		1649019	1					
ANR	1649189	PrimaryExpression	16		1649019	1					
ANR	1649190	Label	case SLJIT_D_UNORDERED :	2118:1:70719:70741	1649019	34	True				
ANR	1649191	Identifier	SLJIT_D_UNORDERED		1649019	0					
ANR	1649192	ReturnStatement	return ( 12 << 21 ) | ( ( 4 + 3 ) << 16 ) ;	2119:2:70745:70780	1649019	35	True				
ANR	1649193	InclusiveOrExpression	( 12 << 21 ) | ( ( 4 + 3 ) << 16 )		1649019	0		|			
ANR	1649194	ShiftExpression	12 << 21		1649019	0		<<			
ANR	1649195	PrimaryExpression	12		1649019	0					
ANR	1649196	PrimaryExpression	21		1649019	1					
ANR	1649197	ShiftExpression	( 4 + 3 ) << 16		1649019	1		<<			
ANR	1649198	AdditiveExpression	4 + 3		1649019	0		+			
ANR	1649199	PrimaryExpression	4		1649019	0					
ANR	1649200	PrimaryExpression	3		1649019	1					
ANR	1649201	PrimaryExpression	16		1649019	1					
ANR	1649202	Label	case SLJIT_D_ORDERED :	2121:1:70784:70804	1649019	36	True				
ANR	1649203	Identifier	SLJIT_D_ORDERED		1649019	0					
ANR	1649204	ReturnStatement	return ( 4 << 21 ) | ( ( 4 + 3 ) << 16 ) ;	2122:2:70808:70842	1649019	37	True				
ANR	1649205	InclusiveOrExpression	( 4 << 21 ) | ( ( 4 + 3 ) << 16 )		1649019	0		|			
ANR	1649206	ShiftExpression	4 << 21		1649019	0		<<			
ANR	1649207	PrimaryExpression	4		1649019	0					
ANR	1649208	PrimaryExpression	21		1649019	1					
ANR	1649209	ShiftExpression	( 4 + 3 ) << 16		1649019	1		<<			
ANR	1649210	AdditiveExpression	4 + 3		1649019	0		+			
ANR	1649211	PrimaryExpression	4		1649019	0					
ANR	1649212	PrimaryExpression	3		1649019	1					
ANR	1649213	PrimaryExpression	16		1649019	1					
ANR	1649214	Label	default :	2124:1:70846:70853	1649019	38	True				
ANR	1649215	Identifier	default		1649019	0					
ANR	1649216	ExpressionStatement	SLJIT_ASSERT ( type >= SLJIT_JUMP && type <= SLJIT_CALL3 )	2125:2:70857:70912	1649019	39	True				
ANR	1649217	CallExpression	SLJIT_ASSERT ( type >= SLJIT_JUMP && type <= SLJIT_CALL3 )		1649019	0					
ANR	1649218	Callee	SLJIT_ASSERT		1649019	0					
ANR	1649219	Identifier	SLJIT_ASSERT		1649019	0					
ANR	1649220	ArgumentList	type >= SLJIT_JUMP && type <= SLJIT_CALL3		1649019	1					
ANR	1649221	Argument	type >= SLJIT_JUMP && type <= SLJIT_CALL3		1649019	0					
ANR	1649222	AndExpression	type >= SLJIT_JUMP && type <= SLJIT_CALL3		1649019	0		&&			
ANR	1649223	RelationalExpression	type >= SLJIT_JUMP		1649019	0		>=			
ANR	1649224	Identifier	type		1649019	0					
ANR	1649225	Identifier	SLJIT_JUMP		1649019	1					
ANR	1649226	RelationalExpression	type <= SLJIT_CALL3		1649019	1		<=			
ANR	1649227	Identifier	type		1649019	0					
ANR	1649228	Identifier	SLJIT_CALL3		1649019	1					
ANR	1649229	ReturnStatement	return ( 20 << 21 ) ;	2126:2:70916:70933	1649019	40	True				
ANR	1649230	ShiftExpression	20 << 21		1649019	0		<<			
ANR	1649231	PrimaryExpression	20		1649019	0					
ANR	1649232	PrimaryExpression	21		1649019	1					
ANR	1649233	ReturnType	static sljit_ins		1649019	1					
ANR	1649234	Identifier	get_bo_bi_flags		1649019	2					
ANR	1649235	ParameterList	sljit_si type		1649019	3					
ANR	1649236	Parameter	sljit_si type	2067:33:69693:69705	1649019	0	True				
ANR	1649237	ParameterType	sljit_si		1649019	0					
ANR	1649238	Identifier	type		1649019	1					
ANR	1649239	CFGEntryNode	ENTRY		1649019		True				
ANR	1649240	CFGExitNode	EXIT		1649019		True				
ANR	1649241	Symbol	SLJIT_JUMP		1649019						
ANR	1649242	Symbol	SLJIT_CALL3		1649019						
ANR	1649243	Symbol	type		1649019						
ANR	1649244	Function	sljit_emit_jump	2130:25:70966:71915							
ANR	1649245	FunctionDef	"sljit_emit_jump (struct sljit_compiler * compiler , sljit_si type)"		1649244	0					
ANR	1649246	CompoundStatement		2131:0:71049:71915	1649244	0					
ANR	1649247	IdentifierDeclStatement	struct sljit_jump * jump ;	2132:1:71052:71075	1649244	0	True				
ANR	1649248	IdentifierDecl	* jump		1649244	0					
ANR	1649249	IdentifierDeclType	struct sljit_jump *		1649244	0					
ANR	1649250	Identifier	jump		1649244	1					
ANR	1649251	IdentifierDeclStatement	sljit_ins bo_bi_flags ;	2133:1:71078:71099	1649244	1	True				
ANR	1649252	IdentifierDecl	bo_bi_flags		1649244	0					
ANR	1649253	IdentifierDeclType	sljit_ins		1649244	0					
ANR	1649254	Identifier	bo_bi_flags		1649244	1					
ANR	1649255	ExpressionStatement	CHECK_ERROR_PTR ( )	2135:1:71103:71120	1649244	2	True				
ANR	1649256	CallExpression	CHECK_ERROR_PTR ( )		1649244	0					
ANR	1649257	Callee	CHECK_ERROR_PTR		1649244	0					
ANR	1649258	Identifier	CHECK_ERROR_PTR		1649244	0					
ANR	1649259	ArgumentList			1649244	1					
ANR	1649260	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"	2136:1:71123:71171	1649244	3	True				
ANR	1649261	CallExpression	"CHECK_PTR ( check_sljit_emit_jump ( compiler , type ) )"		1649244	0					
ANR	1649262	Callee	CHECK_PTR		1649244	0					
ANR	1649263	Identifier	CHECK_PTR		1649244	0					
ANR	1649264	ArgumentList	"check_sljit_emit_jump ( compiler , type )"		1649244	1					
ANR	1649265	Argument	"check_sljit_emit_jump ( compiler , type )"		1649244	0					
ANR	1649266	CallExpression	"check_sljit_emit_jump ( compiler , type )"		1649244	0					
ANR	1649267	Callee	check_sljit_emit_jump		1649244	0					
ANR	1649268	Identifier	check_sljit_emit_jump		1649244	0					
ANR	1649269	ArgumentList	compiler		1649244	1					
ANR	1649270	Argument	compiler		1649244	0					
ANR	1649271	Identifier	compiler		1649244	0					
ANR	1649272	Argument	type		1649244	1					
ANR	1649273	Identifier	type		1649244	0					
ANR	1649274	ExpressionStatement	bo_bi_flags = get_bo_bi_flags ( type & 0xff )	2138:1:71175:71217	1649244	4	True				
ANR	1649275	AssignmentExpression	bo_bi_flags = get_bo_bi_flags ( type & 0xff )		1649244	0		=			
ANR	1649276	Identifier	bo_bi_flags		1649244	0					
ANR	1649277	CallExpression	get_bo_bi_flags ( type & 0xff )		1649244	1					
ANR	1649278	Callee	get_bo_bi_flags		1649244	0					
ANR	1649279	Identifier	get_bo_bi_flags		1649244	0					
ANR	1649280	ArgumentList	type & 0xff		1649244	1					
ANR	1649281	Argument	type & 0xff		1649244	0					
ANR	1649282	BitAndExpression	type & 0xff		1649244	0		&			
ANR	1649283	Identifier	type		1649244	0					
ANR	1649284	PrimaryExpression	0xff		1649244	1					
ANR	1649285	IfStatement	if ( ! bo_bi_flags )		1649244	5					
ANR	1649286	Condition	! bo_bi_flags	2139:5:71224:71235	1649244	0	True				
ANR	1649287	UnaryOperationExpression	! bo_bi_flags		1649244	0					
ANR	1649288	UnaryOperator	!		1649244	0					
ANR	1649289	Identifier	bo_bi_flags		1649244	1					
ANR	1649290	ReturnStatement	return NULL ;	2140:2:71240:71251	1649244	1	True				
ANR	1649291	Identifier	NULL		1649244	0					
ANR	1649292	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	2142:1:71255:71330	1649244	6	True				
ANR	1649293	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1649244	0		=			
ANR	1649294	Identifier	jump		1649244	0					
ANR	1649295	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1649244	1					
ANR	1649296	CastTarget	struct sljit_jump *		1649244	0					
ANR	1649297	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1649244	1					
ANR	1649298	Callee	ensure_abuf		1649244	0					
ANR	1649299	Identifier	ensure_abuf		1649244	0					
ANR	1649300	ArgumentList	compiler		1649244	1					
ANR	1649301	Argument	compiler		1649244	0					
ANR	1649302	Identifier	compiler		1649244	0					
ANR	1649303	Argument	sizeof ( struct sljit_jump )		1649244	1					
ANR	1649304	SizeofExpression	sizeof ( struct sljit_jump )		1649244	0					
ANR	1649305	Sizeof	sizeof		1649244	0					
ANR	1649306	SizeofOperand	struct sljit_jump		1649244	1					
ANR	1649307	ExpressionStatement	PTR_FAIL_IF ( ! jump )	2143:1:71333:71351	1649244	7	True				
ANR	1649308	CallExpression	PTR_FAIL_IF ( ! jump )		1649244	0					
ANR	1649309	Callee	PTR_FAIL_IF		1649244	0					
ANR	1649310	Identifier	PTR_FAIL_IF		1649244	0					
ANR	1649311	ArgumentList	! jump		1649244	1					
ANR	1649312	Argument	! jump		1649244	0					
ANR	1649313	UnaryOperationExpression	! jump		1649244	0					
ANR	1649314	UnaryOperator	!		1649244	0					
ANR	1649315	Identifier	jump		1649244	1					
ANR	1649316	ExpressionStatement	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"	2144:1:71354:71408	1649244	8	True				
ANR	1649317	CallExpression	"set_jump ( jump , compiler , type & SLJIT_REWRITABLE_JUMP )"		1649244	0					
ANR	1649318	Callee	set_jump		1649244	0					
ANR	1649319	Identifier	set_jump		1649244	0					
ANR	1649320	ArgumentList	jump		1649244	1					
ANR	1649321	Argument	jump		1649244	0					
ANR	1649322	Identifier	jump		1649244	0					
ANR	1649323	Argument	compiler		1649244	1					
ANR	1649324	Identifier	compiler		1649244	0					
ANR	1649325	Argument	type & SLJIT_REWRITABLE_JUMP		1649244	2					
ANR	1649326	BitAndExpression	type & SLJIT_REWRITABLE_JUMP		1649244	0		&			
ANR	1649327	Identifier	type		1649244	0					
ANR	1649328	Identifier	SLJIT_REWRITABLE_JUMP		1649244	1					
ANR	1649329	ExpressionStatement	type &= 0xff	2145:1:71411:71423	1649244	9	True				
ANR	1649330	AssignmentExpression	type &= 0xff		1649244	0		&=			
ANR	1649331	Identifier	type		1649244	0					
ANR	1649332	PrimaryExpression	0xff		1649244	1					
ANR	1649333	IfStatement	if ( type < SLJIT_JUMP )		1649244	10					
ANR	1649334	Condition	type < SLJIT_JUMP	2148:5:71484:71500	1649244	0	True				
ANR	1649335	RelationalExpression	type < SLJIT_JUMP		1649244	0		<			
ANR	1649336	Identifier	type		1649244	0					
ANR	1649337	Identifier	SLJIT_JUMP		1649244	1					
ANR	1649338	ExpressionStatement	jump -> flags |= IS_COND	2149:2:71505:71527	1649244	1	True				
ANR	1649339	AssignmentExpression	jump -> flags |= IS_COND		1649244	0		|=			
ANR	1649340	PtrMemberAccess	jump -> flags		1649244	0					
ANR	1649341	Identifier	jump		1649244	0					
ANR	1649342	Identifier	flags		1649244	1					
ANR	1649343	Identifier	IS_COND		1649244	1					
ANR	1649344	IfStatement	if ( type >= SLJIT_CALL0 )		1649244	11					
ANR	1649345	Condition	type >= SLJIT_CALL0	2151:5:71611:71629	1649244	0	True				
ANR	1649346	RelationalExpression	type >= SLJIT_CALL0		1649244	0		>=			
ANR	1649347	Identifier	type		1649244	0					
ANR	1649348	Identifier	SLJIT_CALL0		1649244	1					
ANR	1649349	ExpressionStatement	jump -> flags |= IS_CALL	2152:2:71634:71656	1649244	1	True				
ANR	1649350	AssignmentExpression	jump -> flags |= IS_CALL		1649244	0		|=			
ANR	1649351	PtrMemberAccess	jump -> flags		1649244	0					
ANR	1649352	Identifier	jump		1649244	0					
ANR	1649353	Identifier	flags		1649244	1					
ANR	1649354	Identifier	IS_CALL		1649244	1					
ANR	1649355	ExpressionStatement	"PTR_FAIL_IF ( emit_const ( compiler , TMP_CALL_REG , 0 ) )"	2155:1:71667:71717	1649244	12	True				
ANR	1649356	CallExpression	"PTR_FAIL_IF ( emit_const ( compiler , TMP_CALL_REG , 0 ) )"		1649244	0					
ANR	1649357	Callee	PTR_FAIL_IF		1649244	0					
ANR	1649358	Identifier	PTR_FAIL_IF		1649244	0					
ANR	1649359	ArgumentList	"emit_const ( compiler , TMP_CALL_REG , 0 )"		1649244	1					
ANR	1649360	Argument	"emit_const ( compiler , TMP_CALL_REG , 0 )"		1649244	0					
ANR	1649361	CallExpression	"emit_const ( compiler , TMP_CALL_REG , 0 )"		1649244	0					
ANR	1649362	Callee	emit_const		1649244	0					
ANR	1649363	Identifier	emit_const		1649244	0					
ANR	1649364	ArgumentList	compiler		1649244	1					
ANR	1649365	Argument	compiler		1649244	0					
ANR	1649366	Identifier	compiler		1649244	0					
ANR	1649367	Argument	TMP_CALL_REG		1649244	1					
ANR	1649368	Identifier	TMP_CALL_REG		1649244	0					
ANR	1649369	Argument	0		1649244	2					
ANR	1649370	PrimaryExpression	0		1649244	0					
ANR	1649371	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , MTCTR | S ( TMP_CALL_REG ) ) )"	2156:1:71720:71777	1649244	13	True				
ANR	1649372	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , MTCTR | S ( TMP_CALL_REG ) ) )"		1649244	0					
ANR	1649373	Callee	PTR_FAIL_IF		1649244	0					
ANR	1649374	Identifier	PTR_FAIL_IF		1649244	0					
ANR	1649375	ArgumentList	"push_inst ( compiler , MTCTR | S ( TMP_CALL_REG ) )"		1649244	1					
ANR	1649376	Argument	"push_inst ( compiler , MTCTR | S ( TMP_CALL_REG ) )"		1649244	0					
ANR	1649377	CallExpression	"push_inst ( compiler , MTCTR | S ( TMP_CALL_REG ) )"		1649244	0					
ANR	1649378	Callee	push_inst		1649244	0					
ANR	1649379	Identifier	push_inst		1649244	0					
ANR	1649380	ArgumentList	compiler		1649244	1					
ANR	1649381	Argument	compiler		1649244	0					
ANR	1649382	Identifier	compiler		1649244	0					
ANR	1649383	Argument	MTCTR | S ( TMP_CALL_REG )		1649244	1					
ANR	1649384	InclusiveOrExpression	MTCTR | S ( TMP_CALL_REG )		1649244	0		|			
ANR	1649385	Identifier	MTCTR		1649244	0					
ANR	1649386	CallExpression	S ( TMP_CALL_REG )		1649244	1					
ANR	1649387	Callee	S		1649244	0					
ANR	1649388	Identifier	S		1649244	0					
ANR	1649389	ArgumentList	TMP_CALL_REG		1649244	1					
ANR	1649390	Argument	TMP_CALL_REG		1649244	0					
ANR	1649391	Identifier	TMP_CALL_REG		1649244	0					
ANR	1649392	ExpressionStatement	jump -> addr = compiler -> size	2157:1:71780:71807	1649244	14	True				
ANR	1649393	AssignmentExpression	jump -> addr = compiler -> size		1649244	0		=			
ANR	1649394	PtrMemberAccess	jump -> addr		1649244	0					
ANR	1649395	Identifier	jump		1649244	0					
ANR	1649396	Identifier	addr		1649244	1					
ANR	1649397	PtrMemberAccess	compiler -> size		1649244	1					
ANR	1649398	Identifier	compiler		1649244	0					
ANR	1649399	Identifier	size		1649244	1					
ANR	1649400	ExpressionStatement	"PTR_FAIL_IF ( push_inst ( compiler , BCCTR | bo_bi_flags | ( type >= SLJIT_FAST_CALL ? 1 : 0 ) ) )"	2158:1:71810:71899	1649244	15	True				
ANR	1649401	CallExpression	"PTR_FAIL_IF ( push_inst ( compiler , BCCTR | bo_bi_flags | ( type >= SLJIT_FAST_CALL ? 1 : 0 ) ) )"		1649244	0					
ANR	1649402	Callee	PTR_FAIL_IF		1649244	0					
ANR	1649403	Identifier	PTR_FAIL_IF		1649244	0					
ANR	1649404	ArgumentList	"push_inst ( compiler , BCCTR | bo_bi_flags | ( type >= SLJIT_FAST_CALL ? 1 : 0 ) )"		1649244	1					
ANR	1649405	Argument	"push_inst ( compiler , BCCTR | bo_bi_flags | ( type >= SLJIT_FAST_CALL ? 1 : 0 ) )"		1649244	0					
ANR	1649406	CallExpression	"push_inst ( compiler , BCCTR | bo_bi_flags | ( type >= SLJIT_FAST_CALL ? 1 : 0 ) )"		1649244	0					
ANR	1649407	Callee	push_inst		1649244	0					
ANR	1649408	Identifier	push_inst		1649244	0					
ANR	1649409	ArgumentList	compiler		1649244	1					
ANR	1649410	Argument	compiler		1649244	0					
ANR	1649411	Identifier	compiler		1649244	0					
ANR	1649412	Argument	BCCTR | bo_bi_flags | ( type >= SLJIT_FAST_CALL ? 1 : 0 )		1649244	1					
ANR	1649413	InclusiveOrExpression	BCCTR | bo_bi_flags | ( type >= SLJIT_FAST_CALL ? 1 : 0 )		1649244	0		|			
ANR	1649414	Identifier	BCCTR		1649244	0					
ANR	1649415	InclusiveOrExpression	bo_bi_flags | ( type >= SLJIT_FAST_CALL ? 1 : 0 )		1649244	1		|			
ANR	1649416	Identifier	bo_bi_flags		1649244	0					
ANR	1649417	ConditionalExpression	type >= SLJIT_FAST_CALL ? 1 : 0		1649244	1					
ANR	1649418	Condition	type >= SLJIT_FAST_CALL		1649244	0					
ANR	1649419	RelationalExpression	type >= SLJIT_FAST_CALL		1649244	0		>=			
ANR	1649420	Identifier	type		1649244	0					
ANR	1649421	Identifier	SLJIT_FAST_CALL		1649244	1					
ANR	1649422	PrimaryExpression	1		1649244	1					
ANR	1649423	PrimaryExpression	0		1649244	2					
ANR	1649424	ReturnStatement	return jump ;	2159:1:71902:71913	1649244	16	True				
ANR	1649425	Identifier	jump		1649244	0					
ANR	1649426	ReturnType	struct sljit_jump *		1649244	1					
ANR	1649427	Identifier	sljit_emit_jump		1649244	2					
ANR	1649428	ParameterList	"struct sljit_compiler * compiler , sljit_si type"		1649244	3					
ANR	1649429	Parameter	struct sljit_compiler * compiler	2130:60:71001:71031	1649244	0	True				
ANR	1649430	ParameterType	struct sljit_compiler *		1649244	0					
ANR	1649431	Identifier	compiler		1649244	1					
ANR	1649432	Parameter	sljit_si type	2130:93:71034:71046	1649244	1	True				
ANR	1649433	ParameterType	sljit_si		1649244	0					
ANR	1649434	Identifier	type		1649244	1					
ANR	1649435	CFGEntryNode	ENTRY		1649244		True				
ANR	1649436	CFGExitNode	EXIT		1649244		True				
ANR	1649437	Symbol	SLJIT_JUMP		1649244						
ANR	1649438	Symbol	* jump		1649244						
ANR	1649439	Symbol	TMP_CALL_REG		1649244						
ANR	1649440	Symbol	jump -> flags		1649244						
ANR	1649441	Symbol	* compiler		1649244						
ANR	1649442	Symbol	type		1649244						
ANR	1649443	Symbol	S		1649244						
ANR	1649444	Symbol	bo_bi_flags		1649244						
ANR	1649445	Symbol	SLJIT_FAST_CALL		1649244						
ANR	1649446	Symbol	SLJIT_REWRITABLE_JUMP		1649244						
ANR	1649447	Symbol	compiler		1649244						
ANR	1649448	Symbol	MTCTR		1649244						
ANR	1649449	Symbol	jump		1649244						
ANR	1649450	Symbol	push_inst		1649244						
ANR	1649451	Symbol	BCCTR		1649244						
ANR	1649452	Symbol	NULL		1649244						
ANR	1649453	Symbol	SLJIT_CALL0		1649244						
ANR	1649454	Symbol	jump -> addr		1649244						
ANR	1649455	Symbol	ensure_abuf		1649244						
ANR	1649456	Symbol	IS_CALL		1649244						
ANR	1649457	Symbol	get_bo_bi_flags		1649244						
ANR	1649458	Symbol	compiler -> size		1649244						
ANR	1649459	Symbol	IS_COND		1649244						
ANR	1649460	Symbol	check_sljit_emit_jump		1649244						
ANR	1649461	Symbol	emit_const		1649244						
ANR	1649462	Function	sljit_emit_ijump	2162:0:71918:73204							
ANR	1649463	FunctionDef	"sljit_emit_ijump (struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw)"		1649462	0					
ANR	1649464	CompoundStatement		2163:0:72046:73204	1649462	0					
ANR	1649465	IdentifierDeclStatement	struct sljit_jump * jump = NULL ;	2164:1:72049:72079	1649462	0	True				
ANR	1649466	IdentifierDecl	* jump = NULL		1649462	0					
ANR	1649467	IdentifierDeclType	struct sljit_jump *		1649462	0					
ANR	1649468	Identifier	jump		1649462	1					
ANR	1649469	AssignmentExpression	* jump = NULL		1649462	2		=			
ANR	1649470	Identifier	NULL		1649462	0					
ANR	1649471	Identifier	NULL		1649462	1					
ANR	1649472	IdentifierDeclStatement	sljit_si src_r ;	2165:1:72082:72096	1649462	1	True				
ANR	1649473	IdentifierDecl	src_r		1649462	0					
ANR	1649474	IdentifierDeclType	sljit_si		1649462	0					
ANR	1649475	Identifier	src_r		1649462	1					
ANR	1649476	ExpressionStatement	CHECK_ERROR ( )	2167:1:72100:72113	1649462	2	True				
ANR	1649477	CallExpression	CHECK_ERROR ( )		1649462	0					
ANR	1649478	Callee	CHECK_ERROR		1649462	0					
ANR	1649479	Identifier	CHECK_ERROR		1649462	0					
ANR	1649480	ArgumentList			1649462	1					
ANR	1649481	ExpressionStatement	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"	2168:1:72116:72172	1649462	3	True				
ANR	1649482	CallExpression	"CHECK ( check_sljit_emit_ijump ( compiler , type , src , srcw ) )"		1649462	0					
ANR	1649483	Callee	CHECK		1649462	0					
ANR	1649484	Identifier	CHECK		1649462	0					
ANR	1649485	ArgumentList	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1649462	1					
ANR	1649486	Argument	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1649462	0					
ANR	1649487	CallExpression	"check_sljit_emit_ijump ( compiler , type , src , srcw )"		1649462	0					
ANR	1649488	Callee	check_sljit_emit_ijump		1649462	0					
ANR	1649489	Identifier	check_sljit_emit_ijump		1649462	0					
ANR	1649490	ArgumentList	compiler		1649462	1					
ANR	1649491	Argument	compiler		1649462	0					
ANR	1649492	Identifier	compiler		1649462	0					
ANR	1649493	Argument	type		1649462	1					
ANR	1649494	Identifier	type		1649462	0					
ANR	1649495	Argument	src		1649462	2					
ANR	1649496	Identifier	src		1649462	0					
ANR	1649497	Argument	srcw		1649462	3					
ANR	1649498	Identifier	srcw		1649462	0					
ANR	1649499	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	2169:1:72175:72205	1649462	4	True				
ANR	1649500	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1649462	0					
ANR	1649501	Callee	ADJUST_LOCAL_OFFSET		1649462	0					
ANR	1649502	Identifier	ADJUST_LOCAL_OFFSET		1649462	0					
ANR	1649503	ArgumentList	src		1649462	1					
ANR	1649504	Argument	src		1649462	0					
ANR	1649505	Identifier	src		1649462	0					
ANR	1649506	Argument	srcw		1649462	1					
ANR	1649507	Identifier	srcw		1649462	0					
ANR	1649508	IfStatement	if ( FAST_IS_REG ( src ) )		1649462	5					
ANR	1649509	Condition	FAST_IS_REG ( src )	2171:5:72213:72228	1649462	0	True				
ANR	1649510	CallExpression	FAST_IS_REG ( src )		1649462	0					
ANR	1649511	Callee	FAST_IS_REG		1649462	0					
ANR	1649512	Identifier	FAST_IS_REG		1649462	0					
ANR	1649513	ArgumentList	src		1649462	1					
ANR	1649514	Argument	src		1649462	0					
ANR	1649515	Identifier	src		1649462	0					
ANR	1649516	CompoundStatement		9:23:184:184	1649462	1					
ANR	1649517	IfStatement	if ( type >= SLJIT_CALL0 )		1649462	0					
ANR	1649518	Condition	type >= SLJIT_CALL0	2173:6:72316:72334	1649462	0	True				
ANR	1649519	RelationalExpression	type >= SLJIT_CALL0		1649462	0		>=			
ANR	1649520	Identifier	type		1649462	0					
ANR	1649521	Identifier	SLJIT_CALL0		1649462	1					
ANR	1649522	CompoundStatement		11:27:290:290	1649462	1					
ANR	1649523	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , OR | S ( src ) | A ( TMP_CALL_REG ) | B ( src ) ) )"	2174:3:72342:72410	1649462	0	True				
ANR	1649524	CallExpression	"FAIL_IF ( push_inst ( compiler , OR | S ( src ) | A ( TMP_CALL_REG ) | B ( src ) ) )"		1649462	0					
ANR	1649525	Callee	FAIL_IF		1649462	0					
ANR	1649526	Identifier	FAIL_IF		1649462	0					
ANR	1649527	ArgumentList	"push_inst ( compiler , OR | S ( src ) | A ( TMP_CALL_REG ) | B ( src ) )"		1649462	1					
ANR	1649528	Argument	"push_inst ( compiler , OR | S ( src ) | A ( TMP_CALL_REG ) | B ( src ) )"		1649462	0					
ANR	1649529	CallExpression	"push_inst ( compiler , OR | S ( src ) | A ( TMP_CALL_REG ) | B ( src ) )"		1649462	0					
ANR	1649530	Callee	push_inst		1649462	0					
ANR	1649531	Identifier	push_inst		1649462	0					
ANR	1649532	ArgumentList	compiler		1649462	1					
ANR	1649533	Argument	compiler		1649462	0					
ANR	1649534	Identifier	compiler		1649462	0					
ANR	1649535	Argument	OR | S ( src ) | A ( TMP_CALL_REG ) | B ( src )		1649462	1					
ANR	1649536	InclusiveOrExpression	OR | S ( src ) | A ( TMP_CALL_REG ) | B ( src )		1649462	0		|			
ANR	1649537	Identifier	OR		1649462	0					
ANR	1649538	InclusiveOrExpression	S ( src ) | A ( TMP_CALL_REG ) | B ( src )		1649462	1		|			
ANR	1649539	CallExpression	S ( src )		1649462	0					
ANR	1649540	Callee	S		1649462	0					
ANR	1649541	Identifier	S		1649462	0					
ANR	1649542	ArgumentList	src		1649462	1					
ANR	1649543	Argument	src		1649462	0					
ANR	1649544	Identifier	src		1649462	0					
ANR	1649545	InclusiveOrExpression	A ( TMP_CALL_REG ) | B ( src )		1649462	1		|			
ANR	1649546	CallExpression	A ( TMP_CALL_REG )		1649462	0					
ANR	1649547	Callee	A		1649462	0					
ANR	1649548	Identifier	A		1649462	0					
ANR	1649549	ArgumentList	TMP_CALL_REG		1649462	1					
ANR	1649550	Argument	TMP_CALL_REG		1649462	0					
ANR	1649551	Identifier	TMP_CALL_REG		1649462	0					
ANR	1649552	CallExpression	B ( src )		1649462	1					
ANR	1649553	Callee	B		1649462	0					
ANR	1649554	Identifier	B		1649462	0					
ANR	1649555	ArgumentList	src		1649462	1					
ANR	1649556	Argument	src		1649462	0					
ANR	1649557	Identifier	src		1649462	0					
ANR	1649558	ExpressionStatement	src_r = TMP_CALL_REG	2175:3:72415:72435	1649462	1	True				
ANR	1649559	AssignmentExpression	src_r = TMP_CALL_REG		1649462	0		=			
ANR	1649560	Identifier	src_r		1649462	0					
ANR	1649561	Identifier	TMP_CALL_REG		1649462	1					
ANR	1649562	ElseStatement	else		1649462	0					
ANR	1649563	ExpressionStatement	src_r = src	2178:3:72451:72462	1649462	0	True				
ANR	1649564	AssignmentExpression	src_r = src		1649462	0		=			
ANR	1649565	Identifier	src_r		1649462	0					
ANR	1649566	Identifier	src		1649462	1					
ANR	1649567	ElseStatement	else		1649462	0					
ANR	1649568	IfStatement	if ( src & SLJIT_IMM )		1649462	0					
ANR	1649569	Condition	src & SLJIT_IMM	2182:12:72504:72518	1649462	0	True				
ANR	1649570	BitAndExpression	src & SLJIT_IMM		1649462	0		&			
ANR	1649571	Identifier	src		1649462	0					
ANR	1649572	Identifier	SLJIT_IMM		1649462	1					
ANR	1649573	CompoundStatement		20:29:474:474	1649462	1					
ANR	1649574	ExpressionStatement	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"	2183:2:72525:72600	1649462	0	True				
ANR	1649575	AssignmentExpression	"jump = ( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1649462	0		=			
ANR	1649576	Identifier	jump		1649462	0					
ANR	1649577	CastExpression	"( struct sljit_jump * ) ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1649462	1					
ANR	1649578	CastTarget	struct sljit_jump *		1649462	0					
ANR	1649579	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_jump ) )"		1649462	1					
ANR	1649580	Callee	ensure_abuf		1649462	0					
ANR	1649581	Identifier	ensure_abuf		1649462	0					
ANR	1649582	ArgumentList	compiler		1649462	1					
ANR	1649583	Argument	compiler		1649462	0					
ANR	1649584	Identifier	compiler		1649462	0					
ANR	1649585	Argument	sizeof ( struct sljit_jump )		1649462	1					
ANR	1649586	SizeofExpression	sizeof ( struct sljit_jump )		1649462	0					
ANR	1649587	Sizeof	sizeof		1649462	0					
ANR	1649588	SizeofOperand	struct sljit_jump		1649462	1					
ANR	1649589	ExpressionStatement	FAIL_IF ( ! jump )	2184:2:72604:72618	1649462	1	True				
ANR	1649590	CallExpression	FAIL_IF ( ! jump )		1649462	0					
ANR	1649591	Callee	FAIL_IF		1649462	0					
ANR	1649592	Identifier	FAIL_IF		1649462	0					
ANR	1649593	ArgumentList	! jump		1649462	1					
ANR	1649594	Argument	! jump		1649462	0					
ANR	1649595	UnaryOperationExpression	! jump		1649462	0					
ANR	1649596	UnaryOperator	!		1649462	0					
ANR	1649597	Identifier	jump		1649462	1					
ANR	1649598	ExpressionStatement	"set_jump ( jump , compiler , JUMP_ADDR )"	2185:2:72622:72657	1649462	2	True				
ANR	1649599	CallExpression	"set_jump ( jump , compiler , JUMP_ADDR )"		1649462	0					
ANR	1649600	Callee	set_jump		1649462	0					
ANR	1649601	Identifier	set_jump		1649462	0					
ANR	1649602	ArgumentList	jump		1649462	1					
ANR	1649603	Argument	jump		1649462	0					
ANR	1649604	Identifier	jump		1649462	0					
ANR	1649605	Argument	compiler		1649462	1					
ANR	1649606	Identifier	compiler		1649462	0					
ANR	1649607	Argument	JUMP_ADDR		1649462	2					
ANR	1649608	Identifier	JUMP_ADDR		1649462	0					
ANR	1649609	ExpressionStatement	jump -> u . target = srcw	2186:2:72661:72682	1649462	3	True				
ANR	1649610	AssignmentExpression	jump -> u . target = srcw		1649462	0		=			
ANR	1649611	MemberAccess	jump -> u . target		1649462	0					
ANR	1649612	PtrMemberAccess	jump -> u		1649462	0					
ANR	1649613	Identifier	jump		1649462	0					
ANR	1649614	Identifier	u		1649462	1					
ANR	1649615	Identifier	target		1649462	1					
ANR	1649616	Identifier	srcw		1649462	1					
ANR	1649617	IfStatement	if ( type >= SLJIT_CALL0 )		1649462	4					
ANR	1649618	Condition	type >= SLJIT_CALL0	2188:6:72767:72785	1649462	0	True				
ANR	1649619	RelationalExpression	type >= SLJIT_CALL0		1649462	0		>=			
ANR	1649620	Identifier	type		1649462	0					
ANR	1649621	Identifier	SLJIT_CALL0		1649462	1					
ANR	1649622	ExpressionStatement	jump -> flags |= IS_CALL	2189:3:72791:72813	1649462	1	True				
ANR	1649623	AssignmentExpression	jump -> flags |= IS_CALL		1649462	0		|=			
ANR	1649624	PtrMemberAccess	jump -> flags		1649462	0					
ANR	1649625	Identifier	jump		1649462	0					
ANR	1649626	Identifier	flags		1649462	1					
ANR	1649627	Identifier	IS_CALL		1649462	1					
ANR	1649628	ExpressionStatement	"FAIL_IF ( emit_const ( compiler , TMP_CALL_REG , 0 ) )"	2191:2:72824:72870	1649462	5	True				
ANR	1649629	CallExpression	"FAIL_IF ( emit_const ( compiler , TMP_CALL_REG , 0 ) )"		1649462	0					
ANR	1649630	Callee	FAIL_IF		1649462	0					
ANR	1649631	Identifier	FAIL_IF		1649462	0					
ANR	1649632	ArgumentList	"emit_const ( compiler , TMP_CALL_REG , 0 )"		1649462	1					
ANR	1649633	Argument	"emit_const ( compiler , TMP_CALL_REG , 0 )"		1649462	0					
ANR	1649634	CallExpression	"emit_const ( compiler , TMP_CALL_REG , 0 )"		1649462	0					
ANR	1649635	Callee	emit_const		1649462	0					
ANR	1649636	Identifier	emit_const		1649462	0					
ANR	1649637	ArgumentList	compiler		1649462	1					
ANR	1649638	Argument	compiler		1649462	0					
ANR	1649639	Identifier	compiler		1649462	0					
ANR	1649640	Argument	TMP_CALL_REG		1649462	1					
ANR	1649641	Identifier	TMP_CALL_REG		1649462	0					
ANR	1649642	Argument	0		1649462	2					
ANR	1649643	PrimaryExpression	0		1649462	0					
ANR	1649644	ExpressionStatement	src_r = TMP_CALL_REG	2192:2:72874:72894	1649462	6	True				
ANR	1649645	AssignmentExpression	src_r = TMP_CALL_REG		1649462	0		=			
ANR	1649646	Identifier	src_r		1649462	0					
ANR	1649647	Identifier	TMP_CALL_REG		1649462	1					
ANR	1649648	ElseStatement	else		1649462	0					
ANR	1649649	CompoundStatement		32:6:858:858	1649462	0					
ANR	1649650	ExpressionStatement	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_CALL_REG , 0 , TMP_REG1 , 0 , src , srcw ) )"	2195:2:72909:72998	1649462	0	True				
ANR	1649651	CallExpression	"FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_CALL_REG , 0 , TMP_REG1 , 0 , src , srcw ) )"		1649462	0					
ANR	1649652	Callee	FAIL_IF		1649462	0					
ANR	1649653	Identifier	FAIL_IF		1649462	0					
ANR	1649654	ArgumentList	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_CALL_REG , 0 , TMP_REG1 , 0 , src , srcw )"		1649462	1					
ANR	1649655	Argument	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_CALL_REG , 0 , TMP_REG1 , 0 , src , srcw )"		1649462	0					
ANR	1649656	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , TMP_CALL_REG , 0 , TMP_REG1 , 0 , src , srcw )"		1649462	0					
ANR	1649657	Callee	emit_op		1649462	0					
ANR	1649658	Identifier	emit_op		1649462	0					
ANR	1649659	ArgumentList	compiler		1649462	1					
ANR	1649660	Argument	compiler		1649462	0					
ANR	1649661	Identifier	compiler		1649462	0					
ANR	1649662	Argument	SLJIT_MOV		1649462	1					
ANR	1649663	Identifier	SLJIT_MOV		1649462	0					
ANR	1649664	Argument	WORD_DATA		1649462	2					
ANR	1649665	Identifier	WORD_DATA		1649462	0					
ANR	1649666	Argument	TMP_CALL_REG		1649462	3					
ANR	1649667	Identifier	TMP_CALL_REG		1649462	0					
ANR	1649668	Argument	0		1649462	4					
ANR	1649669	PrimaryExpression	0		1649462	0					
ANR	1649670	Argument	TMP_REG1		1649462	5					
ANR	1649671	Identifier	TMP_REG1		1649462	0					
ANR	1649672	Argument	0		1649462	6					
ANR	1649673	PrimaryExpression	0		1649462	0					
ANR	1649674	Argument	src		1649462	7					
ANR	1649675	Identifier	src		1649462	0					
ANR	1649676	Argument	srcw		1649462	8					
ANR	1649677	Identifier	srcw		1649462	0					
ANR	1649678	ExpressionStatement	src_r = TMP_CALL_REG	2196:2:73002:73022	1649462	1	True				
ANR	1649679	AssignmentExpression	src_r = TMP_CALL_REG		1649462	0		=			
ANR	1649680	Identifier	src_r		1649462	0					
ANR	1649681	Identifier	TMP_CALL_REG		1649462	1					
ANR	1649682	ExpressionStatement	"FAIL_IF ( push_inst ( compiler , MTCTR | S ( src_r ) ) )"	2199:1:73029:73075	1649462	6	True				
ANR	1649683	CallExpression	"FAIL_IF ( push_inst ( compiler , MTCTR | S ( src_r ) ) )"		1649462	0					
ANR	1649684	Callee	FAIL_IF		1649462	0					
ANR	1649685	Identifier	FAIL_IF		1649462	0					
ANR	1649686	ArgumentList	"push_inst ( compiler , MTCTR | S ( src_r ) )"		1649462	1					
ANR	1649687	Argument	"push_inst ( compiler , MTCTR | S ( src_r ) )"		1649462	0					
ANR	1649688	CallExpression	"push_inst ( compiler , MTCTR | S ( src_r ) )"		1649462	0					
ANR	1649689	Callee	push_inst		1649462	0					
ANR	1649690	Identifier	push_inst		1649462	0					
ANR	1649691	ArgumentList	compiler		1649462	1					
ANR	1649692	Argument	compiler		1649462	0					
ANR	1649693	Identifier	compiler		1649462	0					
ANR	1649694	Argument	MTCTR | S ( src_r )		1649462	1					
ANR	1649695	InclusiveOrExpression	MTCTR | S ( src_r )		1649462	0		|			
ANR	1649696	Identifier	MTCTR		1649462	0					
ANR	1649697	CallExpression	S ( src_r )		1649462	1					
ANR	1649698	Callee	S		1649462	0					
ANR	1649699	Identifier	S		1649462	0					
ANR	1649700	ArgumentList	src_r		1649462	1					
ANR	1649701	Argument	src_r		1649462	0					
ANR	1649702	Identifier	src_r		1649462	0					
ANR	1649703	IfStatement	if ( jump )		1649462	7					
ANR	1649704	Condition	jump	2200:5:73082:73085	1649462	0	True				
ANR	1649705	Identifier	jump		1649462	0					
ANR	1649706	ExpressionStatement	jump -> addr = compiler -> size	2201:2:73090:73117	1649462	1	True				
ANR	1649707	AssignmentExpression	jump -> addr = compiler -> size		1649462	0		=			
ANR	1649708	PtrMemberAccess	jump -> addr		1649462	0					
ANR	1649709	Identifier	jump		1649462	0					
ANR	1649710	Identifier	addr		1649462	1					
ANR	1649711	PtrMemberAccess	compiler -> size		1649462	1					
ANR	1649712	Identifier	compiler		1649462	0					
ANR	1649713	Identifier	size		1649462	1					
ANR	1649714	ReturnStatement	"return push_inst ( compiler , BCCTR | ( 20 << 21 ) | ( type >= SLJIT_FAST_CALL ? 1 : 0 ) ) ;"	2202:1:73120:73202	1649462	8	True				
ANR	1649715	CallExpression	"push_inst ( compiler , BCCTR | ( 20 << 21 ) | ( type >= SLJIT_FAST_CALL ? 1 : 0 ) )"		1649462	0					
ANR	1649716	Callee	push_inst		1649462	0					
ANR	1649717	Identifier	push_inst		1649462	0					
ANR	1649718	ArgumentList	compiler		1649462	1					
ANR	1649719	Argument	compiler		1649462	0					
ANR	1649720	Identifier	compiler		1649462	0					
ANR	1649721	Argument	BCCTR | ( 20 << 21 ) | ( type >= SLJIT_FAST_CALL ? 1 : 0 )		1649462	1					
ANR	1649722	InclusiveOrExpression	BCCTR | ( 20 << 21 ) | ( type >= SLJIT_FAST_CALL ? 1 : 0 )		1649462	0		|			
ANR	1649723	Identifier	BCCTR		1649462	0					
ANR	1649724	InclusiveOrExpression	( 20 << 21 ) | ( type >= SLJIT_FAST_CALL ? 1 : 0 )		1649462	1		|			
ANR	1649725	ShiftExpression	20 << 21		1649462	0		<<			
ANR	1649726	PrimaryExpression	20		1649462	0					
ANR	1649727	PrimaryExpression	21		1649462	1					
ANR	1649728	ConditionalExpression	type >= SLJIT_FAST_CALL ? 1 : 0		1649462	1					
ANR	1649729	Condition	type >= SLJIT_FAST_CALL		1649462	0					
ANR	1649730	RelationalExpression	type >= SLJIT_FAST_CALL		1649462	0		>=			
ANR	1649731	Identifier	type		1649462	0					
ANR	1649732	Identifier	SLJIT_FAST_CALL		1649462	1					
ANR	1649733	PrimaryExpression	1		1649462	1					
ANR	1649734	PrimaryExpression	0		1649462	2					
ANR	1649735	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1649462	1					
ANR	1649736	Identifier	sljit_emit_ijump		1649462	2					
ANR	1649737	ParameterList	"struct sljit_compiler * compiler , sljit_si type , sljit_si src , sljit_sw srcw"		1649462	3					
ANR	1649738	Parameter	struct sljit_compiler * compiler	2162:51:71969:71999	1649462	0	True				
ANR	1649739	ParameterType	struct sljit_compiler *		1649462	0					
ANR	1649740	Identifier	compiler		1649462	1					
ANR	1649741	Parameter	sljit_si type	2162:84:72002:72014	1649462	1	True				
ANR	1649742	ParameterType	sljit_si		1649462	0					
ANR	1649743	Identifier	type		1649462	1					
ANR	1649744	Parameter	sljit_si src	2162:99:72017:72028	1649462	2	True				
ANR	1649745	ParameterType	sljit_si		1649462	0					
ANR	1649746	Identifier	src		1649462	1					
ANR	1649747	Parameter	sljit_sw srcw	2162:113:72031:72043	1649462	3	True				
ANR	1649748	ParameterType	sljit_sw		1649462	0					
ANR	1649749	Identifier	srcw		1649462	1					
ANR	1649750	CFGEntryNode	ENTRY		1649462		True				
ANR	1649751	CFGExitNode	EXIT		1649462		True				
ANR	1649752	Symbol	check_sljit_emit_ijump		1649462						
ANR	1649753	Symbol	A		1649462						
ANR	1649754	Symbol	B		1649462						
ANR	1649755	Symbol	TMP_REG1		1649462						
ANR	1649756	Symbol	* jump		1649462						
ANR	1649757	Symbol	jump -> u		1649462						
ANR	1649758	Symbol	SLJIT_MOV		1649462						
ANR	1649759	Symbol	TMP_CALL_REG		1649462						
ANR	1649760	Symbol	jump -> flags		1649462						
ANR	1649761	Symbol	JUMP_ADDR		1649462						
ANR	1649762	Symbol	* compiler		1649462						
ANR	1649763	Symbol	type		1649462						
ANR	1649764	Symbol	SLJIT_IMM		1649462						
ANR	1649765	Symbol	S		1649462						
ANR	1649766	Symbol	SLJIT_FAST_CALL		1649462						
ANR	1649767	Symbol	compiler		1649462						
ANR	1649768	Symbol	src_r		1649462						
ANR	1649769	Symbol	emit_op		1649462						
ANR	1649770	Symbol	WORD_DATA		1649462						
ANR	1649771	Symbol	MTCTR		1649462						
ANR	1649772	Symbol	jump		1649462						
ANR	1649773	Symbol	push_inst		1649462						
ANR	1649774	Symbol	BCCTR		1649462						
ANR	1649775	Symbol	NULL		1649462						
ANR	1649776	Symbol	FAST_IS_REG		1649462						
ANR	1649777	Symbol	OR		1649462						
ANR	1649778	Symbol	src		1649462						
ANR	1649779	Symbol	srcw		1649462						
ANR	1649780	Symbol	SLJIT_CALL0		1649462						
ANR	1649781	Symbol	jump -> addr		1649462						
ANR	1649782	Symbol	ensure_abuf		1649462						
ANR	1649783	Symbol	IS_CALL		1649462						
ANR	1649784	Symbol	compiler -> size		1649462						
ANR	1649785	Symbol	jump -> u . target		1649462						
ANR	1649786	Symbol	emit_const		1649462						
ANR	1649787	Function	sljit_emit_op_flags	2213:0:73530:76406							
ANR	1649788	FunctionDef	"sljit_emit_op_flags (struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type)"		1649787	0					
ANR	1649789	CompoundStatement		2217:0:73706:76406	1649787	0					
ANR	1649790	IdentifierDeclStatement	"sljit_si reg , input_flags ;"	2218:1:73709:73734	1649787	0	True				
ANR	1649791	IdentifierDecl	reg		1649787	0					
ANR	1649792	IdentifierDeclType	sljit_si		1649787	0					
ANR	1649793	Identifier	reg		1649787	1					
ANR	1649794	IdentifierDecl	input_flags		1649787	1					
ANR	1649795	IdentifierDeclType	sljit_si		1649787	0					
ANR	1649796	Identifier	input_flags		1649787	1					
ANR	1649797	IdentifierDeclStatement	sljit_si flags = GET_ALL_FLAGS ( op ) ;	2219:1:73737:73771	1649787	1	True				
ANR	1649798	IdentifierDecl	flags = GET_ALL_FLAGS ( op )		1649787	0					
ANR	1649799	IdentifierDeclType	sljit_si		1649787	0					
ANR	1649800	Identifier	flags		1649787	1					
ANR	1649801	AssignmentExpression	flags = GET_ALL_FLAGS ( op )		1649787	2		=			
ANR	1649802	Identifier	flags		1649787	0					
ANR	1649803	CallExpression	GET_ALL_FLAGS ( op )		1649787	1					
ANR	1649804	Callee	GET_ALL_FLAGS		1649787	0					
ANR	1649805	Identifier	GET_ALL_FLAGS		1649787	0					
ANR	1649806	ArgumentList	op		1649787	1					
ANR	1649807	Argument	op		1649787	0					
ANR	1649808	Identifier	op		1649787	0					
ANR	1649809	IdentifierDeclStatement	sljit_sw original_dstw = dstw ;	2220:1:73774:73803	1649787	2	True				
ANR	1649810	IdentifierDecl	original_dstw = dstw		1649787	0					
ANR	1649811	IdentifierDeclType	sljit_sw		1649787	0					
ANR	1649812	Identifier	original_dstw		1649787	1					
ANR	1649813	AssignmentExpression	original_dstw = dstw		1649787	2		=			
ANR	1649814	Identifier	dstw		1649787	0					
ANR	1649815	Identifier	dstw		1649787	1					
ANR	1649816	ExpressionStatement	CHECK_ERROR ( )	2222:1:73807:73820	1649787	3	True				
ANR	1649817	CallExpression	CHECK_ERROR ( )		1649787	0					
ANR	1649818	Callee	CHECK_ERROR		1649787	0					
ANR	1649819	Identifier	CHECK_ERROR		1649787	0					
ANR	1649820	ArgumentList			1649787	1					
ANR	1649821	ExpressionStatement	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"	2223:1:73823:73897	1649787	4	True				
ANR	1649822	CallExpression	"CHECK ( check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type ) )"		1649787	0					
ANR	1649823	Callee	CHECK		1649787	0					
ANR	1649824	Identifier	CHECK		1649787	0					
ANR	1649825	ArgumentList	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1649787	1					
ANR	1649826	Argument	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1649787	0					
ANR	1649827	CallExpression	"check_sljit_emit_op_flags ( compiler , op , dst , dstw , src , srcw , type )"		1649787	0					
ANR	1649828	Callee	check_sljit_emit_op_flags		1649787	0					
ANR	1649829	Identifier	check_sljit_emit_op_flags		1649787	0					
ANR	1649830	ArgumentList	compiler		1649787	1					
ANR	1649831	Argument	compiler		1649787	0					
ANR	1649832	Identifier	compiler		1649787	0					
ANR	1649833	Argument	op		1649787	1					
ANR	1649834	Identifier	op		1649787	0					
ANR	1649835	Argument	dst		1649787	2					
ANR	1649836	Identifier	dst		1649787	0					
ANR	1649837	Argument	dstw		1649787	3					
ANR	1649838	Identifier	dstw		1649787	0					
ANR	1649839	Argument	src		1649787	4					
ANR	1649840	Identifier	src		1649787	0					
ANR	1649841	Argument	srcw		1649787	5					
ANR	1649842	Identifier	srcw		1649787	0					
ANR	1649843	Argument	type		1649787	6					
ANR	1649844	Identifier	type		1649787	0					
ANR	1649845	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2224:1:73900:73930	1649787	5	True				
ANR	1649846	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1649787	0					
ANR	1649847	Callee	ADJUST_LOCAL_OFFSET		1649787	0					
ANR	1649848	Identifier	ADJUST_LOCAL_OFFSET		1649787	0					
ANR	1649849	ArgumentList	dst		1649787	1					
ANR	1649850	Argument	dst		1649787	0					
ANR	1649851	Identifier	dst		1649787	0					
ANR	1649852	Argument	dstw		1649787	1					
ANR	1649853	Identifier	dstw		1649787	0					
ANR	1649854	IfStatement	if ( dst == SLJIT_UNUSED )		1649787	6					
ANR	1649855	Condition	dst == SLJIT_UNUSED	2226:5:73938:73956	1649787	0	True				
ANR	1649856	EqualityExpression	dst == SLJIT_UNUSED		1649787	0		==			
ANR	1649857	Identifier	dst		1649787	0					
ANR	1649858	Identifier	SLJIT_UNUSED		1649787	1					
ANR	1649859	ReturnStatement	return SLJIT_SUCCESS ;	2227:2:73961:73981	1649787	1	True				
ANR	1649860	Identifier	SLJIT_SUCCESS		1649787	0					
ANR	1649861	ExpressionStatement	op = GET_OPCODE ( op )	2229:1:73985:74004	1649787	7	True				
ANR	1649862	AssignmentExpression	op = GET_OPCODE ( op )		1649787	0		=			
ANR	1649863	Identifier	op		1649787	0					
ANR	1649864	CallExpression	GET_OPCODE ( op )		1649787	1					
ANR	1649865	Callee	GET_OPCODE		1649787	0					
ANR	1649866	Identifier	GET_OPCODE		1649787	0					
ANR	1649867	ArgumentList	op		1649787	1					
ANR	1649868	Argument	op		1649787	0					
ANR	1649869	Identifier	op		1649787	0					
ANR	1649870	ExpressionStatement	reg = ( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2	2230:1:74007:74066	1649787	8	True				
ANR	1649871	AssignmentExpression	reg = ( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2		1649787	0		=			
ANR	1649872	Identifier	reg		1649787	0					
ANR	1649873	ConditionalExpression	( op < SLJIT_ADD && FAST_IS_REG ( dst ) ) ? dst : TMP_REG2		1649787	1					
ANR	1649874	Condition	op < SLJIT_ADD && FAST_IS_REG ( dst )		1649787	0					
ANR	1649875	AndExpression	op < SLJIT_ADD && FAST_IS_REG ( dst )		1649787	0		&&			
ANR	1649876	RelationalExpression	op < SLJIT_ADD		1649787	0		<			
ANR	1649877	Identifier	op		1649787	0					
ANR	1649878	Identifier	SLJIT_ADD		1649787	1					
ANR	1649879	CallExpression	FAST_IS_REG ( dst )		1649787	1					
ANR	1649880	Callee	FAST_IS_REG		1649787	0					
ANR	1649881	Identifier	FAST_IS_REG		1649787	0					
ANR	1649882	ArgumentList	dst		1649787	1					
ANR	1649883	Argument	dst		1649787	0					
ANR	1649884	Identifier	dst		1649787	0					
ANR	1649885	Identifier	dst		1649787	1					
ANR	1649886	Identifier	TMP_REG2		1649787	2					
ANR	1649887	ExpressionStatement	compiler -> cache_arg = 0	2232:1:74070:74093	1649787	9	True				
ANR	1649888	AssignmentExpression	compiler -> cache_arg = 0		1649787	0		=			
ANR	1649889	PtrMemberAccess	compiler -> cache_arg		1649787	0					
ANR	1649890	Identifier	compiler		1649787	0					
ANR	1649891	Identifier	cache_arg		1649787	1					
ANR	1649892	PrimaryExpression	0		1649787	1					
ANR	1649893	ExpressionStatement	compiler -> cache_argw = 0	2233:1:74096:74120	1649787	10	True				
ANR	1649894	AssignmentExpression	compiler -> cache_argw = 0		1649787	0		=			
ANR	1649895	PtrMemberAccess	compiler -> cache_argw		1649787	0					
ANR	1649896	Identifier	compiler		1649787	0					
ANR	1649897	Identifier	cache_argw		1649787	1					
ANR	1649898	PrimaryExpression	0		1649787	1					
ANR	1649899	IfStatement	if ( op >= SLJIT_ADD && ( src & SLJIT_MEM ) )		1649787	11					
ANR	1649900	Condition	op >= SLJIT_ADD && ( src & SLJIT_MEM )	2234:5:74127:74162	1649787	0	True				
ANR	1649901	AndExpression	op >= SLJIT_ADD && ( src & SLJIT_MEM )		1649787	0		&&			
ANR	1649902	RelationalExpression	op >= SLJIT_ADD		1649787	0		>=			
ANR	1649903	Identifier	op		1649787	0					
ANR	1649904	Identifier	SLJIT_ADD		1649787	1					
ANR	1649905	BitAndExpression	src & SLJIT_MEM		1649787	1		&			
ANR	1649906	Identifier	src		1649787	0					
ANR	1649907	Identifier	SLJIT_MEM		1649787	1					
ANR	1649908	CompoundStatement		18:43:458:458	1649787	1					
ANR	1649909	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( src , srcw )"	2235:2:74169:74199	1649787	0	True				
ANR	1649910	CallExpression	"ADJUST_LOCAL_OFFSET ( src , srcw )"		1649787	0					
ANR	1649911	Callee	ADJUST_LOCAL_OFFSET		1649787	0					
ANR	1649912	Identifier	ADJUST_LOCAL_OFFSET		1649787	0					
ANR	1649913	ArgumentList	src		1649787	1					
ANR	1649914	Argument	src		1649787	0					
ANR	1649915	Identifier	src		1649787	0					
ANR	1649916	Argument	srcw		1649787	1					
ANR	1649917	Identifier	srcw		1649787	0					
ANR	1649918	ExpressionStatement	input_flags = ( flags & SLJIT_INT_OP ) ? INT_DATA : WORD_DATA	2237:2:74260:74319	1649787	1	True				
ANR	1649919	AssignmentExpression	input_flags = ( flags & SLJIT_INT_OP ) ? INT_DATA : WORD_DATA		1649787	0		=			
ANR	1649920	Identifier	input_flags		1649787	0					
ANR	1649921	ConditionalExpression	( flags & SLJIT_INT_OP ) ? INT_DATA : WORD_DATA		1649787	1					
ANR	1649922	Condition	flags & SLJIT_INT_OP		1649787	0					
ANR	1649923	BitAndExpression	flags & SLJIT_INT_OP		1649787	0		&			
ANR	1649924	Identifier	flags		1649787	0					
ANR	1649925	Identifier	SLJIT_INT_OP		1649787	1					
ANR	1649926	Identifier	INT_DATA		1649787	1					
ANR	1649927	Identifier	WORD_DATA		1649787	2					
ANR	1649928	ExpressionStatement	"FAIL_IF ( emit_op_mem2 ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw ) )"	2241:2:74363:74451	1649787	2	True				
ANR	1649929	CallExpression	"FAIL_IF ( emit_op_mem2 ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw ) )"		1649787	0					
ANR	1649930	Callee	FAIL_IF		1649787	0					
ANR	1649931	Identifier	FAIL_IF		1649787	0					
ANR	1649932	ArgumentList	"emit_op_mem2 ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw )"		1649787	1					
ANR	1649933	Argument	"emit_op_mem2 ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw )"		1649787	0					
ANR	1649934	CallExpression	"emit_op_mem2 ( compiler , input_flags | LOAD_DATA , TMP_REG1 , src , srcw , dst , dstw )"		1649787	0					
ANR	1649935	Callee	emit_op_mem2		1649787	0					
ANR	1649936	Identifier	emit_op_mem2		1649787	0					
ANR	1649937	ArgumentList	compiler		1649787	1					
ANR	1649938	Argument	compiler		1649787	0					
ANR	1649939	Identifier	compiler		1649787	0					
ANR	1649940	Argument	input_flags | LOAD_DATA		1649787	1					
ANR	1649941	InclusiveOrExpression	input_flags | LOAD_DATA		1649787	0		|			
ANR	1649942	Identifier	input_flags		1649787	0					
ANR	1649943	Identifier	LOAD_DATA		1649787	1					
ANR	1649944	Argument	TMP_REG1		1649787	2					
ANR	1649945	Identifier	TMP_REG1		1649787	0					
ANR	1649946	Argument	src		1649787	3					
ANR	1649947	Identifier	src		1649787	0					
ANR	1649948	Argument	srcw		1649787	4					
ANR	1649949	Identifier	srcw		1649787	0					
ANR	1649950	Argument	dst		1649787	5					
ANR	1649951	Identifier	dst		1649787	0					
ANR	1649952	Argument	dstw		1649787	6					
ANR	1649953	Identifier	dstw		1649787	0					
ANR	1649954	ExpressionStatement	src = TMP_REG1	2242:2:74455:74469	1649787	3	True				
ANR	1649955	AssignmentExpression	src = TMP_REG1		1649787	0		=			
ANR	1649956	Identifier	src		1649787	0					
ANR	1649957	Identifier	TMP_REG1		1649787	1					
ANR	1649958	ExpressionStatement	srcw = 0	2243:2:74473:74481	1649787	4	True				
ANR	1649959	AssignmentExpression	srcw = 0		1649787	0		=			
ANR	1649960	Identifier	srcw		1649787	0					
ANR	1649961	PrimaryExpression	0		1649787	1					
ANR	1649962	SwitchStatement	switch ( type & 0xff )		1649787	12					
ANR	1649963	Condition	type & 0xff	2246:9:74496:74506	1649787	0	True				
ANR	1649964	BitAndExpression	type & 0xff		1649787	0		&			
ANR	1649965	Identifier	type		1649787	0					
ANR	1649966	PrimaryExpression	0xff		1649787	1					
ANR	1649967	CompoundStatement		30:22:802:802	1649787	1					
ANR	1649968	Label	case SLJIT_EQUAL :	2247:1:74512:74528	1649787	0	True				
ANR	1649969	Identifier	SLJIT_EQUAL		1649787	0					
ANR	1649970	ExpressionStatement	"GET_CR_BIT ( 2 , reg )"	2248:2:74532:74550	1649787	1	True				
ANR	1649971	CallExpression	"GET_CR_BIT ( 2 , reg )"		1649787	0					
ANR	1649972	Callee	GET_CR_BIT		1649787	0					
ANR	1649973	Identifier	GET_CR_BIT		1649787	0					
ANR	1649974	ArgumentList	2		1649787	1					
ANR	1649975	Argument	2		1649787	0					
ANR	1649976	PrimaryExpression	2		1649787	0					
ANR	1649977	Argument	reg		1649787	1					
ANR	1649978	Identifier	reg		1649787	0					
ANR	1649979	BreakStatement	break ;	2249:2:74554:74559	1649787	2	True				
ANR	1649980	Label	case SLJIT_NOT_EQUAL :	2251:1:74563:74583	1649787	3	True				
ANR	1649981	Identifier	SLJIT_NOT_EQUAL		1649787	0					
ANR	1649982	ExpressionStatement	"GET_CR_BIT ( 2 , reg )"	2252:2:74587:74605	1649787	4	True				
ANR	1649983	CallExpression	"GET_CR_BIT ( 2 , reg )"		1649787	0					
ANR	1649984	Callee	GET_CR_BIT		1649787	0					
ANR	1649985	Identifier	GET_CR_BIT		1649787	0					
ANR	1649986	ArgumentList	2		1649787	1					
ANR	1649987	Argument	2		1649787	0					
ANR	1649988	PrimaryExpression	2		1649787	0					
ANR	1649989	Argument	reg		1649787	1					
ANR	1649990	Identifier	reg		1649787	0					
ANR	1649991	ExpressionStatement	INVERT_BIT ( reg )	2253:2:74609:74624	1649787	5	True				
ANR	1649992	CallExpression	INVERT_BIT ( reg )		1649787	0					
ANR	1649993	Callee	INVERT_BIT		1649787	0					
ANR	1649994	Identifier	INVERT_BIT		1649787	0					
ANR	1649995	ArgumentList	reg		1649787	1					
ANR	1649996	Argument	reg		1649787	0					
ANR	1649997	Identifier	reg		1649787	0					
ANR	1649998	BreakStatement	break ;	2254:2:74628:74633	1649787	6	True				
ANR	1649999	Label	case SLJIT_LESS :	2256:1:74637:74652	1649787	7	True				
ANR	1650000	Identifier	SLJIT_LESS		1649787	0					
ANR	1650001	Label	case SLJIT_D_LESS :	2257:1:74655:74672	1649787	8	True				
ANR	1650002	Identifier	SLJIT_D_LESS		1649787	0					
ANR	1650003	ExpressionStatement	"GET_CR_BIT ( 4 + 0 , reg )"	2258:2:74676:74698	1649787	9	True				
ANR	1650004	CallExpression	"GET_CR_BIT ( 4 + 0 , reg )"		1649787	0					
ANR	1650005	Callee	GET_CR_BIT		1649787	0					
ANR	1650006	Identifier	GET_CR_BIT		1649787	0					
ANR	1650007	ArgumentList	4 + 0		1649787	1					
ANR	1650008	Argument	4 + 0		1649787	0					
ANR	1650009	AdditiveExpression	4 + 0		1649787	0		+			
ANR	1650010	PrimaryExpression	4		1649787	0					
ANR	1650011	PrimaryExpression	0		1649787	1					
ANR	1650012	Argument	reg		1649787	1					
ANR	1650013	Identifier	reg		1649787	0					
ANR	1650014	BreakStatement	break ;	2259:2:74702:74707	1649787	10	True				
ANR	1650015	Label	case SLJIT_GREATER_EQUAL :	2261:1:74711:74735	1649787	11	True				
ANR	1650016	Identifier	SLJIT_GREATER_EQUAL		1649787	0					
ANR	1650017	Label	case SLJIT_D_GREATER_EQUAL :	2262:1:74738:74764	1649787	12	True				
ANR	1650018	Identifier	SLJIT_D_GREATER_EQUAL		1649787	0					
ANR	1650019	ExpressionStatement	"GET_CR_BIT ( 4 + 0 , reg )"	2263:2:74768:74790	1649787	13	True				
ANR	1650020	CallExpression	"GET_CR_BIT ( 4 + 0 , reg )"		1649787	0					
ANR	1650021	Callee	GET_CR_BIT		1649787	0					
ANR	1650022	Identifier	GET_CR_BIT		1649787	0					
ANR	1650023	ArgumentList	4 + 0		1649787	1					
ANR	1650024	Argument	4 + 0		1649787	0					
ANR	1650025	AdditiveExpression	4 + 0		1649787	0		+			
ANR	1650026	PrimaryExpression	4		1649787	0					
ANR	1650027	PrimaryExpression	0		1649787	1					
ANR	1650028	Argument	reg		1649787	1					
ANR	1650029	Identifier	reg		1649787	0					
ANR	1650030	ExpressionStatement	INVERT_BIT ( reg )	2264:2:74794:74809	1649787	14	True				
ANR	1650031	CallExpression	INVERT_BIT ( reg )		1649787	0					
ANR	1650032	Callee	INVERT_BIT		1649787	0					
ANR	1650033	Identifier	INVERT_BIT		1649787	0					
ANR	1650034	ArgumentList	reg		1649787	1					
ANR	1650035	Argument	reg		1649787	0					
ANR	1650036	Identifier	reg		1649787	0					
ANR	1650037	BreakStatement	break ;	2265:2:74813:74818	1649787	15	True				
ANR	1650038	Label	case SLJIT_GREATER :	2267:1:74822:74840	1649787	16	True				
ANR	1650039	Identifier	SLJIT_GREATER		1649787	0					
ANR	1650040	Label	case SLJIT_D_GREATER :	2268:1:74843:74863	1649787	17	True				
ANR	1650041	Identifier	SLJIT_D_GREATER		1649787	0					
ANR	1650042	ExpressionStatement	"GET_CR_BIT ( 4 + 1 , reg )"	2269:2:74867:74889	1649787	18	True				
ANR	1650043	CallExpression	"GET_CR_BIT ( 4 + 1 , reg )"		1649787	0					
ANR	1650044	Callee	GET_CR_BIT		1649787	0					
ANR	1650045	Identifier	GET_CR_BIT		1649787	0					
ANR	1650046	ArgumentList	4 + 1		1649787	1					
ANR	1650047	Argument	4 + 1		1649787	0					
ANR	1650048	AdditiveExpression	4 + 1		1649787	0		+			
ANR	1650049	PrimaryExpression	4		1649787	0					
ANR	1650050	PrimaryExpression	1		1649787	1					
ANR	1650051	Argument	reg		1649787	1					
ANR	1650052	Identifier	reg		1649787	0					
ANR	1650053	BreakStatement	break ;	2270:2:74893:74898	1649787	19	True				
ANR	1650054	Label	case SLJIT_LESS_EQUAL :	2272:1:74902:74923	1649787	20	True				
ANR	1650055	Identifier	SLJIT_LESS_EQUAL		1649787	0					
ANR	1650056	Label	case SLJIT_D_LESS_EQUAL :	2273:1:74926:74949	1649787	21	True				
ANR	1650057	Identifier	SLJIT_D_LESS_EQUAL		1649787	0					
ANR	1650058	ExpressionStatement	"GET_CR_BIT ( 4 + 1 , reg )"	2274:2:74953:74975	1649787	22	True				
ANR	1650059	CallExpression	"GET_CR_BIT ( 4 + 1 , reg )"		1649787	0					
ANR	1650060	Callee	GET_CR_BIT		1649787	0					
ANR	1650061	Identifier	GET_CR_BIT		1649787	0					
ANR	1650062	ArgumentList	4 + 1		1649787	1					
ANR	1650063	Argument	4 + 1		1649787	0					
ANR	1650064	AdditiveExpression	4 + 1		1649787	0		+			
ANR	1650065	PrimaryExpression	4		1649787	0					
ANR	1650066	PrimaryExpression	1		1649787	1					
ANR	1650067	Argument	reg		1649787	1					
ANR	1650068	Identifier	reg		1649787	0					
ANR	1650069	ExpressionStatement	INVERT_BIT ( reg )	2275:2:74979:74994	1649787	23	True				
ANR	1650070	CallExpression	INVERT_BIT ( reg )		1649787	0					
ANR	1650071	Callee	INVERT_BIT		1649787	0					
ANR	1650072	Identifier	INVERT_BIT		1649787	0					
ANR	1650073	ArgumentList	reg		1649787	1					
ANR	1650074	Argument	reg		1649787	0					
ANR	1650075	Identifier	reg		1649787	0					
ANR	1650076	BreakStatement	break ;	2276:2:74998:75003	1649787	24	True				
ANR	1650077	Label	case SLJIT_SIG_LESS :	2278:1:75007:75026	1649787	25	True				
ANR	1650078	Identifier	SLJIT_SIG_LESS		1649787	0					
ANR	1650079	ExpressionStatement	"GET_CR_BIT ( 0 , reg )"	2279:2:75030:75048	1649787	26	True				
ANR	1650080	CallExpression	"GET_CR_BIT ( 0 , reg )"		1649787	0					
ANR	1650081	Callee	GET_CR_BIT		1649787	0					
ANR	1650082	Identifier	GET_CR_BIT		1649787	0					
ANR	1650083	ArgumentList	0		1649787	1					
ANR	1650084	Argument	0		1649787	0					
ANR	1650085	PrimaryExpression	0		1649787	0					
ANR	1650086	Argument	reg		1649787	1					
ANR	1650087	Identifier	reg		1649787	0					
ANR	1650088	BreakStatement	break ;	2280:2:75052:75057	1649787	27	True				
ANR	1650089	Label	case SLJIT_SIG_GREATER_EQUAL :	2282:1:75061:75089	1649787	28	True				
ANR	1650090	Identifier	SLJIT_SIG_GREATER_EQUAL		1649787	0					
ANR	1650091	ExpressionStatement	"GET_CR_BIT ( 0 , reg )"	2283:2:75093:75111	1649787	29	True				
ANR	1650092	CallExpression	"GET_CR_BIT ( 0 , reg )"		1649787	0					
ANR	1650093	Callee	GET_CR_BIT		1649787	0					
ANR	1650094	Identifier	GET_CR_BIT		1649787	0					
ANR	1650095	ArgumentList	0		1649787	1					
ANR	1650096	Argument	0		1649787	0					
ANR	1650097	PrimaryExpression	0		1649787	0					
ANR	1650098	Argument	reg		1649787	1					
ANR	1650099	Identifier	reg		1649787	0					
ANR	1650100	ExpressionStatement	INVERT_BIT ( reg )	2284:2:75115:75130	1649787	30	True				
ANR	1650101	CallExpression	INVERT_BIT ( reg )		1649787	0					
ANR	1650102	Callee	INVERT_BIT		1649787	0					
ANR	1650103	Identifier	INVERT_BIT		1649787	0					
ANR	1650104	ArgumentList	reg		1649787	1					
ANR	1650105	Argument	reg		1649787	0					
ANR	1650106	Identifier	reg		1649787	0					
ANR	1650107	BreakStatement	break ;	2285:2:75134:75139	1649787	31	True				
ANR	1650108	Label	case SLJIT_SIG_GREATER :	2287:1:75143:75165	1649787	32	True				
ANR	1650109	Identifier	SLJIT_SIG_GREATER		1649787	0					
ANR	1650110	ExpressionStatement	"GET_CR_BIT ( 1 , reg )"	2288:2:75169:75187	1649787	33	True				
ANR	1650111	CallExpression	"GET_CR_BIT ( 1 , reg )"		1649787	0					
ANR	1650112	Callee	GET_CR_BIT		1649787	0					
ANR	1650113	Identifier	GET_CR_BIT		1649787	0					
ANR	1650114	ArgumentList	1		1649787	1					
ANR	1650115	Argument	1		1649787	0					
ANR	1650116	PrimaryExpression	1		1649787	0					
ANR	1650117	Argument	reg		1649787	1					
ANR	1650118	Identifier	reg		1649787	0					
ANR	1650119	BreakStatement	break ;	2289:2:75191:75196	1649787	34	True				
ANR	1650120	Label	case SLJIT_SIG_LESS_EQUAL :	2291:1:75200:75225	1649787	35	True				
ANR	1650121	Identifier	SLJIT_SIG_LESS_EQUAL		1649787	0					
ANR	1650122	ExpressionStatement	"GET_CR_BIT ( 1 , reg )"	2292:2:75229:75247	1649787	36	True				
ANR	1650123	CallExpression	"GET_CR_BIT ( 1 , reg )"		1649787	0					
ANR	1650124	Callee	GET_CR_BIT		1649787	0					
ANR	1650125	Identifier	GET_CR_BIT		1649787	0					
ANR	1650126	ArgumentList	1		1649787	1					
ANR	1650127	Argument	1		1649787	0					
ANR	1650128	PrimaryExpression	1		1649787	0					
ANR	1650129	Argument	reg		1649787	1					
ANR	1650130	Identifier	reg		1649787	0					
ANR	1650131	ExpressionStatement	INVERT_BIT ( reg )	2293:2:75251:75266	1649787	37	True				
ANR	1650132	CallExpression	INVERT_BIT ( reg )		1649787	0					
ANR	1650133	Callee	INVERT_BIT		1649787	0					
ANR	1650134	Identifier	INVERT_BIT		1649787	0					
ANR	1650135	ArgumentList	reg		1649787	1					
ANR	1650136	Argument	reg		1649787	0					
ANR	1650137	Identifier	reg		1649787	0					
ANR	1650138	BreakStatement	break ;	2294:2:75270:75275	1649787	38	True				
ANR	1650139	Label	case SLJIT_OVERFLOW :	2296:1:75279:75298	1649787	39	True				
ANR	1650140	Identifier	SLJIT_OVERFLOW		1649787	0					
ANR	1650141	Label	case SLJIT_MUL_OVERFLOW :	2297:1:75301:75324	1649787	40	True				
ANR	1650142	Identifier	SLJIT_MUL_OVERFLOW		1649787	0					
ANR	1650143	ExpressionStatement	"GET_CR_BIT ( 3 , reg )"	2298:2:75328:75346	1649787	41	True				
ANR	1650144	CallExpression	"GET_CR_BIT ( 3 , reg )"		1649787	0					
ANR	1650145	Callee	GET_CR_BIT		1649787	0					
ANR	1650146	Identifier	GET_CR_BIT		1649787	0					
ANR	1650147	ArgumentList	3		1649787	1					
ANR	1650148	Argument	3		1649787	0					
ANR	1650149	PrimaryExpression	3		1649787	0					
ANR	1650150	Argument	reg		1649787	1					
ANR	1650151	Identifier	reg		1649787	0					
ANR	1650152	BreakStatement	break ;	2299:2:75350:75355	1649787	42	True				
ANR	1650153	Label	case SLJIT_NOT_OVERFLOW :	2301:1:75359:75382	1649787	43	True				
ANR	1650154	Identifier	SLJIT_NOT_OVERFLOW		1649787	0					
ANR	1650155	Label	case SLJIT_MUL_NOT_OVERFLOW :	2302:1:75385:75412	1649787	44	True				
ANR	1650156	Identifier	SLJIT_MUL_NOT_OVERFLOW		1649787	0					
ANR	1650157	ExpressionStatement	"GET_CR_BIT ( 3 , reg )"	2303:2:75416:75434	1649787	45	True				
ANR	1650158	CallExpression	"GET_CR_BIT ( 3 , reg )"		1649787	0					
ANR	1650159	Callee	GET_CR_BIT		1649787	0					
ANR	1650160	Identifier	GET_CR_BIT		1649787	0					
ANR	1650161	ArgumentList	3		1649787	1					
ANR	1650162	Argument	3		1649787	0					
ANR	1650163	PrimaryExpression	3		1649787	0					
ANR	1650164	Argument	reg		1649787	1					
ANR	1650165	Identifier	reg		1649787	0					
ANR	1650166	ExpressionStatement	INVERT_BIT ( reg )	2304:2:75438:75453	1649787	46	True				
ANR	1650167	CallExpression	INVERT_BIT ( reg )		1649787	0					
ANR	1650168	Callee	INVERT_BIT		1649787	0					
ANR	1650169	Identifier	INVERT_BIT		1649787	0					
ANR	1650170	ArgumentList	reg		1649787	1					
ANR	1650171	Argument	reg		1649787	0					
ANR	1650172	Identifier	reg		1649787	0					
ANR	1650173	BreakStatement	break ;	2305:2:75457:75462	1649787	47	True				
ANR	1650174	Label	case SLJIT_D_EQUAL :	2307:1:75466:75484	1649787	48	True				
ANR	1650175	Identifier	SLJIT_D_EQUAL		1649787	0					
ANR	1650176	ExpressionStatement	"GET_CR_BIT ( 4 + 2 , reg )"	2308:2:75488:75510	1649787	49	True				
ANR	1650177	CallExpression	"GET_CR_BIT ( 4 + 2 , reg )"		1649787	0					
ANR	1650178	Callee	GET_CR_BIT		1649787	0					
ANR	1650179	Identifier	GET_CR_BIT		1649787	0					
ANR	1650180	ArgumentList	4 + 2		1649787	1					
ANR	1650181	Argument	4 + 2		1649787	0					
ANR	1650182	AdditiveExpression	4 + 2		1649787	0		+			
ANR	1650183	PrimaryExpression	4		1649787	0					
ANR	1650184	PrimaryExpression	2		1649787	1					
ANR	1650185	Argument	reg		1649787	1					
ANR	1650186	Identifier	reg		1649787	0					
ANR	1650187	BreakStatement	break ;	2309:2:75514:75519	1649787	50	True				
ANR	1650188	Label	case SLJIT_D_NOT_EQUAL :	2311:1:75523:75545	1649787	51	True				
ANR	1650189	Identifier	SLJIT_D_NOT_EQUAL		1649787	0					
ANR	1650190	ExpressionStatement	"GET_CR_BIT ( 4 + 2 , reg )"	2312:2:75549:75571	1649787	52	True				
ANR	1650191	CallExpression	"GET_CR_BIT ( 4 + 2 , reg )"		1649787	0					
ANR	1650192	Callee	GET_CR_BIT		1649787	0					
ANR	1650193	Identifier	GET_CR_BIT		1649787	0					
ANR	1650194	ArgumentList	4 + 2		1649787	1					
ANR	1650195	Argument	4 + 2		1649787	0					
ANR	1650196	AdditiveExpression	4 + 2		1649787	0		+			
ANR	1650197	PrimaryExpression	4		1649787	0					
ANR	1650198	PrimaryExpression	2		1649787	1					
ANR	1650199	Argument	reg		1649787	1					
ANR	1650200	Identifier	reg		1649787	0					
ANR	1650201	ExpressionStatement	INVERT_BIT ( reg )	2313:2:75575:75590	1649787	53	True				
ANR	1650202	CallExpression	INVERT_BIT ( reg )		1649787	0					
ANR	1650203	Callee	INVERT_BIT		1649787	0					
ANR	1650204	Identifier	INVERT_BIT		1649787	0					
ANR	1650205	ArgumentList	reg		1649787	1					
ANR	1650206	Argument	reg		1649787	0					
ANR	1650207	Identifier	reg		1649787	0					
ANR	1650208	BreakStatement	break ;	2314:2:75594:75599	1649787	54	True				
ANR	1650209	Label	case SLJIT_D_UNORDERED :	2316:1:75603:75625	1649787	55	True				
ANR	1650210	Identifier	SLJIT_D_UNORDERED		1649787	0					
ANR	1650211	ExpressionStatement	"GET_CR_BIT ( 4 + 3 , reg )"	2317:2:75629:75651	1649787	56	True				
ANR	1650212	CallExpression	"GET_CR_BIT ( 4 + 3 , reg )"		1649787	0					
ANR	1650213	Callee	GET_CR_BIT		1649787	0					
ANR	1650214	Identifier	GET_CR_BIT		1649787	0					
ANR	1650215	ArgumentList	4 + 3		1649787	1					
ANR	1650216	Argument	4 + 3		1649787	0					
ANR	1650217	AdditiveExpression	4 + 3		1649787	0		+			
ANR	1650218	PrimaryExpression	4		1649787	0					
ANR	1650219	PrimaryExpression	3		1649787	1					
ANR	1650220	Argument	reg		1649787	1					
ANR	1650221	Identifier	reg		1649787	0					
ANR	1650222	BreakStatement	break ;	2318:2:75655:75660	1649787	57	True				
ANR	1650223	Label	case SLJIT_D_ORDERED :	2320:1:75664:75684	1649787	58	True				
ANR	1650224	Identifier	SLJIT_D_ORDERED		1649787	0					
ANR	1650225	ExpressionStatement	"GET_CR_BIT ( 4 + 3 , reg )"	2321:2:75688:75710	1649787	59	True				
ANR	1650226	CallExpression	"GET_CR_BIT ( 4 + 3 , reg )"		1649787	0					
ANR	1650227	Callee	GET_CR_BIT		1649787	0					
ANR	1650228	Identifier	GET_CR_BIT		1649787	0					
ANR	1650229	ArgumentList	4 + 3		1649787	1					
ANR	1650230	Argument	4 + 3		1649787	0					
ANR	1650231	AdditiveExpression	4 + 3		1649787	0		+			
ANR	1650232	PrimaryExpression	4		1649787	0					
ANR	1650233	PrimaryExpression	3		1649787	1					
ANR	1650234	Argument	reg		1649787	1					
ANR	1650235	Identifier	reg		1649787	0					
ANR	1650236	ExpressionStatement	INVERT_BIT ( reg )	2322:2:75714:75729	1649787	60	True				
ANR	1650237	CallExpression	INVERT_BIT ( reg )		1649787	0					
ANR	1650238	Callee	INVERT_BIT		1649787	0					
ANR	1650239	Identifier	INVERT_BIT		1649787	0					
ANR	1650240	ArgumentList	reg		1649787	1					
ANR	1650241	Argument	reg		1649787	0					
ANR	1650242	Identifier	reg		1649787	0					
ANR	1650243	BreakStatement	break ;	2323:2:75733:75738	1649787	61	True				
ANR	1650244	Label	default :	2325:1:75742:75749	1649787	62	True				
ANR	1650245	Identifier	default		1649787	0					
ANR	1650246	ExpressionStatement	SLJIT_ASSERT_STOP ( )	2326:2:75753:75772	1649787	63	True				
ANR	1650247	CallExpression	SLJIT_ASSERT_STOP ( )		1649787	0					
ANR	1650248	Callee	SLJIT_ASSERT_STOP		1649787	0					
ANR	1650249	Identifier	SLJIT_ASSERT_STOP		1649787	0					
ANR	1650250	ArgumentList			1649787	1					
ANR	1650251	BreakStatement	break ;	2327:2:75776:75781	1649787	64	True				
ANR	1650252	IfStatement	if ( op < SLJIT_ADD )		1649787	13					
ANR	1650253	Condition	op < SLJIT_ADD	2330:5:75792:75805	1649787	0	True				
ANR	1650254	RelationalExpression	op < SLJIT_ADD		1649787	0		<			
ANR	1650255	Identifier	op		1649787	0					
ANR	1650256	Identifier	SLJIT_ADD		1649787	1					
ANR	1650257	CompoundStatement		114:21:2101:2101	1649787	1					
ANR	1650258	IfStatement	if ( op == SLJIT_MOV )		1649787	0					
ANR	1650259	Condition	op == SLJIT_MOV	2332:6:75873:75887	1649787	0	True				
ANR	1650260	EqualityExpression	op == SLJIT_MOV		1649787	0		==			
ANR	1650261	Identifier	op		1649787	0					
ANR	1650262	Identifier	SLJIT_MOV		1649787	1					
ANR	1650263	ExpressionStatement	input_flags = WORD_DATA	2333:3:75893:75916	1649787	1	True				
ANR	1650264	AssignmentExpression	input_flags = WORD_DATA		1649787	0		=			
ANR	1650265	Identifier	input_flags		1649787	0					
ANR	1650266	Identifier	WORD_DATA		1649787	1					
ANR	1650267	ElseStatement	else		1649787	0					
ANR	1650268	CompoundStatement		118:7:2218:2218	1649787	0					
ANR	1650269	ExpressionStatement	op = SLJIT_MOV_UI	2335:3:75930:75947	1649787	0	True				
ANR	1650270	AssignmentExpression	op = SLJIT_MOV_UI		1649787	0		=			
ANR	1650271	Identifier	op		1649787	0					
ANR	1650272	Identifier	SLJIT_MOV_UI		1649787	1					
ANR	1650273	ExpressionStatement	input_flags = INT_DATA	2336:3:75952:75974	1649787	1	True				
ANR	1650274	AssignmentExpression	input_flags = INT_DATA		1649787	0		=			
ANR	1650275	Identifier	input_flags		1649787	0					
ANR	1650276	Identifier	INT_DATA		1649787	1					
ANR	1650277	IfStatement	if ( reg != TMP_REG2 )		1649787	1					
ANR	1650278	Condition	reg != TMP_REG2	2342:6:76044:76058	1649787	0	True				
ANR	1650279	EqualityExpression	reg != TMP_REG2		1649787	0		!=			
ANR	1650280	Identifier	reg		1649787	0					
ANR	1650281	Identifier	TMP_REG2		1649787	1					
ANR	1650282	ReturnStatement	return SLJIT_SUCCESS ;	2343:3:76064:76084	1649787	1	True				
ANR	1650283	Identifier	SLJIT_SUCCESS		1649787	0					
ANR	1650284	ReturnStatement	"return emit_op ( compiler , op , input_flags , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 ) ;"	2344:2:76088:76166	1649787	2	True				
ANR	1650285	CallExpression	"emit_op ( compiler , op , input_flags , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 )"		1649787	0					
ANR	1650286	Callee	emit_op		1649787	0					
ANR	1650287	Identifier	emit_op		1649787	0					
ANR	1650288	ArgumentList	compiler		1649787	1					
ANR	1650289	Argument	compiler		1649787	0					
ANR	1650290	Identifier	compiler		1649787	0					
ANR	1650291	Argument	op		1649787	1					
ANR	1650292	Identifier	op		1649787	0					
ANR	1650293	Argument	input_flags		1649787	2					
ANR	1650294	Identifier	input_flags		1649787	0					
ANR	1650295	Argument	dst		1649787	3					
ANR	1650296	Identifier	dst		1649787	0					
ANR	1650297	Argument	dstw		1649787	4					
ANR	1650298	Identifier	dstw		1649787	0					
ANR	1650299	Argument	TMP_REG1		1649787	5					
ANR	1650300	Identifier	TMP_REG1		1649787	0					
ANR	1650301	Argument	0		1649787	6					
ANR	1650302	PrimaryExpression	0		1649787	0					
ANR	1650303	Argument	TMP_REG2		1649787	7					
ANR	1650304	Identifier	TMP_REG2		1649787	0					
ANR	1650305	Argument	0		1649787	8					
ANR	1650306	PrimaryExpression	0		1649787	0					
ANR	1650307	Statement	||	2348:2:76221:76222	1649787	14	True				
ANR	1650308	Statement	(	2348:5:76224:76224	1649787	15	True				
ANR	1650309	Statement	defined	2348:6:76225:76231	1649787	16	True				
ANR	1650310	Statement	SLJIT_ARGUMENT_CHECKS	2348:14:76233:76253	1649787	17	True				
ANR	1650311	Statement	&&	2348:36:76255:76256	1649787	18	True				
ANR	1650312	Statement	SLJIT_ARGUMENT_CHECKS	2348:39:76258:76278	1649787	19	True				
ANR	1650313	Statement	)	2348:60:76279:76279	1649787	20	True				
ANR	1650314	ExpressionStatement	compiler -> skip_checks = 1	2349:1:76282:76307	1649787	21	True				
ANR	1650315	AssignmentExpression	compiler -> skip_checks = 1		1649787	0		=			
ANR	1650316	PtrMemberAccess	compiler -> skip_checks		1649787	0					
ANR	1650317	Identifier	compiler		1649787	0					
ANR	1650318	Identifier	skip_checks		1649787	1					
ANR	1650319	PrimaryExpression	1		1649787	1					
ANR	1650320	ReturnStatement	"return sljit_emit_op2 ( compiler , op | flags , dst , original_dstw , src , srcw , TMP_REG2 , 0 ) ;"	2351:1:76317:76404	1649787	22	True				
ANR	1650321	CallExpression	"sljit_emit_op2 ( compiler , op | flags , dst , original_dstw , src , srcw , TMP_REG2 , 0 )"		1649787	0					
ANR	1650322	Callee	sljit_emit_op2		1649787	0					
ANR	1650323	Identifier	sljit_emit_op2		1649787	0					
ANR	1650324	ArgumentList	compiler		1649787	1					
ANR	1650325	Argument	compiler		1649787	0					
ANR	1650326	Identifier	compiler		1649787	0					
ANR	1650327	Argument	op | flags		1649787	1					
ANR	1650328	InclusiveOrExpression	op | flags		1649787	0		|			
ANR	1650329	Identifier	op		1649787	0					
ANR	1650330	Identifier	flags		1649787	1					
ANR	1650331	Argument	dst		1649787	2					
ANR	1650332	Identifier	dst		1649787	0					
ANR	1650333	Argument	original_dstw		1649787	3					
ANR	1650334	Identifier	original_dstw		1649787	0					
ANR	1650335	Argument	src		1649787	4					
ANR	1650336	Identifier	src		1649787	0					
ANR	1650337	Argument	srcw		1649787	5					
ANR	1650338	Identifier	srcw		1649787	0					
ANR	1650339	Argument	TMP_REG2		1649787	6					
ANR	1650340	Identifier	TMP_REG2		1649787	0					
ANR	1650341	Argument	0		1649787	7					
ANR	1650342	PrimaryExpression	0		1649787	0					
ANR	1650343	ReturnType	SLJIT_API_FUNC_ATTRIBUTE sljit_si		1649787	1					
ANR	1650344	Identifier	sljit_emit_op_flags		1649787	2					
ANR	1650345	ParameterList	"struct sljit_compiler * compiler , sljit_si op , sljit_si dst , sljit_sw dstw , sljit_si src , sljit_sw srcw , sljit_si type"		1649787	3					
ANR	1650346	Parameter	struct sljit_compiler * compiler	2213:54:73584:73614	1649787	0	True				
ANR	1650347	ParameterType	struct sljit_compiler *		1649787	0					
ANR	1650348	Identifier	compiler		1649787	1					
ANR	1650349	Parameter	sljit_si op	2213:87:73617:73627	1649787	1	True				
ANR	1650350	ParameterType	sljit_si		1649787	0					
ANR	1650351	Identifier	op		1649787	1					
ANR	1650352	Parameter	sljit_si dst	2214:1:73631:73642	1649787	2	True				
ANR	1650353	ParameterType	sljit_si		1649787	0					
ANR	1650354	Identifier	dst		1649787	1					
ANR	1650355	Parameter	sljit_sw dstw	2214:15:73645:73657	1649787	3	True				
ANR	1650356	ParameterType	sljit_sw		1649787	0					
ANR	1650357	Identifier	dstw		1649787	1					
ANR	1650358	Parameter	sljit_si src	2215:1:73661:73672	1649787	4	True				
ANR	1650359	ParameterType	sljit_si		1649787	0					
ANR	1650360	Identifier	src		1649787	1					
ANR	1650361	Parameter	sljit_sw srcw	2215:15:73675:73687	1649787	5	True				
ANR	1650362	ParameterType	sljit_sw		1649787	0					
ANR	1650363	Identifier	srcw		1649787	1					
ANR	1650364	Parameter	sljit_si type	2216:1:73691:73703	1649787	6	True				
ANR	1650365	ParameterType	sljit_si		1649787	0					
ANR	1650366	Identifier	type		1649787	1					
ANR	1650367	CFGEntryNode	ENTRY		1649787		True				
ANR	1650368	CFGExitNode	EXIT		1649787		True				
ANR	1650369	Symbol	TMP_REG2		1649787						
ANR	1650370	Symbol	compiler -> cache_argw		1649787						
ANR	1650371	Symbol	TMP_REG1		1649787						
ANR	1650372	Symbol	sljit_emit_op2		1649787						
ANR	1650373	Symbol	dst		1649787						
ANR	1650374	Symbol	LOAD_DATA		1649787						
ANR	1650375	Symbol	SLJIT_MOV		1649787						
ANR	1650376	Symbol	SLJIT_MEM		1649787						
ANR	1650377	Symbol	flags		1649787						
ANR	1650378	Symbol	original_dstw		1649787						
ANR	1650379	Symbol	SLJIT_ADD		1649787						
ANR	1650380	Symbol	* compiler		1649787						
ANR	1650381	Symbol	type		1649787						
ANR	1650382	Symbol	GET_OPCODE		1649787						
ANR	1650383	Symbol	GET_ALL_FLAGS		1649787						
ANR	1650384	Symbol	reg		1649787						
ANR	1650385	Symbol	INT_DATA		1649787						
ANR	1650386	Symbol	SLJIT_MOV_UI		1649787						
ANR	1650387	Symbol	compiler		1649787						
ANR	1650388	Symbol	check_sljit_emit_op_flags		1649787						
ANR	1650389	Symbol	WORD_DATA		1649787						
ANR	1650390	Symbol	emit_op		1649787						
ANR	1650391	Symbol	op		1649787						
ANR	1650392	Symbol	FAST_IS_REG		1649787						
ANR	1650393	Symbol	src		1649787						
ANR	1650394	Symbol	srcw		1649787						
ANR	1650395	Symbol	compiler -> cache_arg		1649787						
ANR	1650396	Symbol	input_flags		1649787						
ANR	1650397	Symbol	SLJIT_INT_OP		1649787						
ANR	1650398	Symbol	emit_op_mem2		1649787						
ANR	1650399	Symbol	SLJIT_SUCCESS		1649787						
ANR	1650400	Symbol	SLJIT_UNUSED		1649787						
ANR	1650401	Symbol	compiler -> skip_checks		1649787						
ANR	1650402	Symbol	dstw		1649787						
ANR	1650403	Function	sljit_emit_const	2354:25:76434:77088							
ANR	1650404	FunctionDef	"sljit_emit_const (struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value)"		1650403	0					
ANR	1650405	CompoundStatement		2355:0:76554:77088	1650403	0					
ANR	1650406	IdentifierDeclStatement	struct sljit_const * const_ ;	2356:1:76557:76583	1650403	0	True				
ANR	1650407	IdentifierDecl	* const_		1650403	0					
ANR	1650408	IdentifierDeclType	struct sljit_const *		1650403	0					
ANR	1650409	Identifier	const_		1650403	1					
ANR	1650410	IdentifierDeclStatement	sljit_si reg ;	2357:1:76586:76598	1650403	1	True				
ANR	1650411	IdentifierDecl	reg		1650403	0					
ANR	1650412	IdentifierDeclType	sljit_si		1650403	0					
ANR	1650413	Identifier	reg		1650403	1					
ANR	1650414	ExpressionStatement	CHECK_ERROR_PTR ( )	2359:1:76602:76619	1650403	2	True				
ANR	1650415	CallExpression	CHECK_ERROR_PTR ( )		1650403	0					
ANR	1650416	Callee	CHECK_ERROR_PTR		1650403	0					
ANR	1650417	Identifier	CHECK_ERROR_PTR		1650403	0					
ANR	1650418	ArgumentList			1650403	1					
ANR	1650419	ExpressionStatement	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"	2360:1:76622:76688	1650403	3	True				
ANR	1650420	CallExpression	"CHECK_PTR ( check_sljit_emit_const ( compiler , dst , dstw , init_value ) )"		1650403	0					
ANR	1650421	Callee	CHECK_PTR		1650403	0					
ANR	1650422	Identifier	CHECK_PTR		1650403	0					
ANR	1650423	ArgumentList	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1650403	1					
ANR	1650424	Argument	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1650403	0					
ANR	1650425	CallExpression	"check_sljit_emit_const ( compiler , dst , dstw , init_value )"		1650403	0					
ANR	1650426	Callee	check_sljit_emit_const		1650403	0					
ANR	1650427	Identifier	check_sljit_emit_const		1650403	0					
ANR	1650428	ArgumentList	compiler		1650403	1					
ANR	1650429	Argument	compiler		1650403	0					
ANR	1650430	Identifier	compiler		1650403	0					
ANR	1650431	Argument	dst		1650403	1					
ANR	1650432	Identifier	dst		1650403	0					
ANR	1650433	Argument	dstw		1650403	2					
ANR	1650434	Identifier	dstw		1650403	0					
ANR	1650435	Argument	init_value		1650403	3					
ANR	1650436	Identifier	init_value		1650403	0					
ANR	1650437	ExpressionStatement	"ADJUST_LOCAL_OFFSET ( dst , dstw )"	2361:1:76691:76721	1650403	4	True				
ANR	1650438	CallExpression	"ADJUST_LOCAL_OFFSET ( dst , dstw )"		1650403	0					
ANR	1650439	Callee	ADJUST_LOCAL_OFFSET		1650403	0					
ANR	1650440	Identifier	ADJUST_LOCAL_OFFSET		1650403	0					
ANR	1650441	ArgumentList	dst		1650403	1					
ANR	1650442	Argument	dst		1650403	0					
ANR	1650443	Identifier	dst		1650403	0					
ANR	1650444	Argument	dstw		1650403	1					
ANR	1650445	Identifier	dstw		1650403	0					
ANR	1650446	ExpressionStatement	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"	2363:1:76725:76804	1650403	5	True				
ANR	1650447	AssignmentExpression	"const_ = ( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1650403	0		=			
ANR	1650448	Identifier	const_		1650403	0					
ANR	1650449	CastExpression	"( struct sljit_const * ) ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1650403	1					
ANR	1650450	CastTarget	struct sljit_const *		1650403	0					
ANR	1650451	CallExpression	"ensure_abuf ( compiler , sizeof ( struct sljit_const ) )"		1650403	1					
ANR	1650452	Callee	ensure_abuf		1650403	0					
ANR	1650453	Identifier	ensure_abuf		1650403	0					
ANR	1650454	ArgumentList	compiler		1650403	1					
ANR	1650455	Argument	compiler		1650403	0					
ANR	1650456	Identifier	compiler		1650403	0					
ANR	1650457	Argument	sizeof ( struct sljit_const )		1650403	1					
ANR	1650458	SizeofExpression	sizeof ( struct sljit_const )		1650403	0					
ANR	1650459	Sizeof	sizeof		1650403	0					
ANR	1650460	SizeofOperand	struct sljit_const		1650403	1					
ANR	1650461	ExpressionStatement	PTR_FAIL_IF ( ! const_ )	2364:1:76807:76827	1650403	6	True				
ANR	1650462	CallExpression	PTR_FAIL_IF ( ! const_ )		1650403	0					
ANR	1650463	Callee	PTR_FAIL_IF		1650403	0					
ANR	1650464	Identifier	PTR_FAIL_IF		1650403	0					
ANR	1650465	ArgumentList	! const_		1650403	1					
ANR	1650466	Argument	! const_		1650403	0					
ANR	1650467	UnaryOperationExpression	! const_		1650403	0					
ANR	1650468	UnaryOperator	!		1650403	0					
ANR	1650469	Identifier	const_		1650403	1					
ANR	1650470	ExpressionStatement	"set_const ( const_ , compiler )"	2365:1:76830:76857	1650403	7	True				
ANR	1650471	CallExpression	"set_const ( const_ , compiler )"		1650403	0					
ANR	1650472	Callee	set_const		1650403	0					
ANR	1650473	Identifier	set_const		1650403	0					
ANR	1650474	ArgumentList	const_		1650403	1					
ANR	1650475	Argument	const_		1650403	0					
ANR	1650476	Identifier	const_		1650403	0					
ANR	1650477	Argument	compiler		1650403	1					
ANR	1650478	Identifier	compiler		1650403	0					
ANR	1650479	ExpressionStatement	reg = SLOW_IS_REG ( dst ) ? dst : TMP_REG2	2367:1:76861:76900	1650403	8	True				
ANR	1650480	AssignmentExpression	reg = SLOW_IS_REG ( dst ) ? dst : TMP_REG2		1650403	0		=			
ANR	1650481	Identifier	reg		1650403	0					
ANR	1650482	ConditionalExpression	SLOW_IS_REG ( dst ) ? dst : TMP_REG2		1650403	1					
ANR	1650483	Condition	SLOW_IS_REG ( dst )		1650403	0					
ANR	1650484	CallExpression	SLOW_IS_REG ( dst )		1650403	0					
ANR	1650485	Callee	SLOW_IS_REG		1650403	0					
ANR	1650486	Identifier	SLOW_IS_REG		1650403	0					
ANR	1650487	ArgumentList	dst		1650403	1					
ANR	1650488	Argument	dst		1650403	0					
ANR	1650489	Identifier	dst		1650403	0					
ANR	1650490	Identifier	dst		1650403	1					
ANR	1650491	Identifier	TMP_REG2		1650403	2					
ANR	1650492	ExpressionStatement	"PTR_FAIL_IF ( emit_const ( compiler , reg , init_value ) )"	2369:1:76904:76954	1650403	9	True				
ANR	1650493	CallExpression	"PTR_FAIL_IF ( emit_const ( compiler , reg , init_value ) )"		1650403	0					
ANR	1650494	Callee	PTR_FAIL_IF		1650403	0					
ANR	1650495	Identifier	PTR_FAIL_IF		1650403	0					
ANR	1650496	ArgumentList	"emit_const ( compiler , reg , init_value )"		1650403	1					
ANR	1650497	Argument	"emit_const ( compiler , reg , init_value )"		1650403	0					
ANR	1650498	CallExpression	"emit_const ( compiler , reg , init_value )"		1650403	0					
ANR	1650499	Callee	emit_const		1650403	0					
ANR	1650500	Identifier	emit_const		1650403	0					
ANR	1650501	ArgumentList	compiler		1650403	1					
ANR	1650502	Argument	compiler		1650403	0					
ANR	1650503	Identifier	compiler		1650403	0					
ANR	1650504	Argument	reg		1650403	1					
ANR	1650505	Identifier	reg		1650403	0					
ANR	1650506	Argument	init_value		1650403	2					
ANR	1650507	Identifier	init_value		1650403	0					
ANR	1650508	IfStatement	if ( dst & SLJIT_MEM )		1650403	10					
ANR	1650509	Condition	dst & SLJIT_MEM	2371:5:76962:76976	1650403	0	True				
ANR	1650510	BitAndExpression	dst & SLJIT_MEM		1650403	0		&			
ANR	1650511	Identifier	dst		1650403	0					
ANR	1650512	Identifier	SLJIT_MEM		1650403	1					
ANR	1650513	ExpressionStatement	"PTR_FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 ) )"	2372:2:76981:77070	1650403	1	True				
ANR	1650514	CallExpression	"PTR_FAIL_IF ( emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 ) )"		1650403	0					
ANR	1650515	Callee	PTR_FAIL_IF		1650403	0					
ANR	1650516	Identifier	PTR_FAIL_IF		1650403	0					
ANR	1650517	ArgumentList	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 )"		1650403	1					
ANR	1650518	Argument	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 )"		1650403	0					
ANR	1650519	CallExpression	"emit_op ( compiler , SLJIT_MOV , WORD_DATA , dst , dstw , TMP_REG1 , 0 , TMP_REG2 , 0 )"		1650403	0					
ANR	1650520	Callee	emit_op		1650403	0					
ANR	1650521	Identifier	emit_op		1650403	0					
ANR	1650522	ArgumentList	compiler		1650403	1					
ANR	1650523	Argument	compiler		1650403	0					
ANR	1650524	Identifier	compiler		1650403	0					
ANR	1650525	Argument	SLJIT_MOV		1650403	1					
ANR	1650526	Identifier	SLJIT_MOV		1650403	0					
ANR	1650527	Argument	WORD_DATA		1650403	2					
ANR	1650528	Identifier	WORD_DATA		1650403	0					
ANR	1650529	Argument	dst		1650403	3					
ANR	1650530	Identifier	dst		1650403	0					
ANR	1650531	Argument	dstw		1650403	4					
ANR	1650532	Identifier	dstw		1650403	0					
ANR	1650533	Argument	TMP_REG1		1650403	5					
ANR	1650534	Identifier	TMP_REG1		1650403	0					
ANR	1650535	Argument	0		1650403	6					
ANR	1650536	PrimaryExpression	0		1650403	0					
ANR	1650537	Argument	TMP_REG2		1650403	7					
ANR	1650538	Identifier	TMP_REG2		1650403	0					
ANR	1650539	Argument	0		1650403	8					
ANR	1650540	PrimaryExpression	0		1650403	0					
ANR	1650541	ReturnStatement	return const_ ;	2373:1:77073:77086	1650403	11	True				
ANR	1650542	Identifier	const_		1650403	0					
ANR	1650543	ReturnType	struct sljit_const *		1650403	1					
ANR	1650544	Identifier	sljit_emit_const		1650403	2					
ANR	1650545	ParameterList	"struct sljit_compiler * compiler , sljit_si dst , sljit_sw dstw , sljit_sw init_value"		1650403	3					
ANR	1650546	Parameter	struct sljit_compiler * compiler	2354:62:76471:76501	1650403	0	True				
ANR	1650547	ParameterType	struct sljit_compiler *		1650403	0					
ANR	1650548	Identifier	compiler		1650403	1					
ANR	1650549	Parameter	sljit_si dst	2354:95:76504:76515	1650403	1	True				
ANR	1650550	ParameterType	sljit_si		1650403	0					
ANR	1650551	Identifier	dst		1650403	1					
ANR	1650552	Parameter	sljit_sw dstw	2354:109:76518:76530	1650403	2	True				
ANR	1650553	ParameterType	sljit_sw		1650403	0					
ANR	1650554	Identifier	dstw		1650403	1					
ANR	1650555	Parameter	sljit_sw init_value	2354:124:76533:76551	1650403	3	True				
ANR	1650556	ParameterType	sljit_sw		1650403	0					
ANR	1650557	Identifier	init_value		1650403	1					
ANR	1650558	CFGEntryNode	ENTRY		1650403		True				
ANR	1650559	CFGExitNode	EXIT		1650403		True				
ANR	1650560	Symbol	check_sljit_emit_const		1650403						
ANR	1650561	Symbol	TMP_REG2		1650403						
ANR	1650562	Symbol	TMP_REG1		1650403						
ANR	1650563	Symbol	const_		1650403						
ANR	1650564	Symbol	dst		1650403						
ANR	1650565	Symbol	SLJIT_MOV		1650403						
ANR	1650566	Symbol	SLJIT_MEM		1650403						
ANR	1650567	Symbol	SLOW_IS_REG		1650403						
ANR	1650568	Symbol	ensure_abuf		1650403						
ANR	1650569	Symbol	reg		1650403						
ANR	1650570	Symbol	emit_const		1650403						
ANR	1650571	Symbol	compiler		1650403						
ANR	1650572	Symbol	init_value		1650403						
ANR	1650573	Symbol	dstw		1650403						
ANR	1650574	Symbol	WORD_DATA		1650403						
ANR	1650575	Symbol	emit_op		1650403						
