command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	970342	File	data/converged/CVE-2015-8617_php-src/ext_intl_breakiterator_breakiterator_iterators.cpp								
ANR	970343	DeclStmt									
ANR	970344	Decl							zend_class_entry	zend_class_entry *	IntlPartsIterator_ce_ptr
ANR	970345	DeclStmt									
ANR	970346	Decl							zend_object_handlers	zend_object_handlers	IntlPartsIterator_handlers
ANR	970347	Function	_breakiter_prolog	39:0:1458:1853							
ANR	970348	FunctionDef	_breakiter_prolog (zend_object_iterator * iter)		970347	0					
ANR	970349	CompoundStatement		40:0:1526:1853	970347	0					
ANR	970350	IdentifierDeclStatement	BreakIterator_object * bio ;	41:1:1529:1554	970347	0	True				
ANR	970351	IdentifierDecl	* bio		970347	0					
ANR	970352	IdentifierDeclType	BreakIterator_object *		970347	0					
ANR	970353	Identifier	bio		970347	1					
ANR	970354	ExpressionStatement	bio = Z_INTL_BREAKITERATOR_P ( & iter -> data )	42:1:1557:1598	970347	1	True				
ANR	970355	AssignmentExpression	bio = Z_INTL_BREAKITERATOR_P ( & iter -> data )		970347	0		=			
ANR	970356	Identifier	bio		970347	0					
ANR	970357	CallExpression	Z_INTL_BREAKITERATOR_P ( & iter -> data )		970347	1					
ANR	970358	Callee	Z_INTL_BREAKITERATOR_P		970347	0					
ANR	970359	Identifier	Z_INTL_BREAKITERATOR_P		970347	0					
ANR	970360	ArgumentList	& iter -> data		970347	1					
ANR	970361	Argument	& iter -> data		970347	0					
ANR	970362	UnaryOperationExpression	& iter -> data		970347	0					
ANR	970363	UnaryOperator	&		970347	0					
ANR	970364	PtrMemberAccess	iter -> data		970347	1					
ANR	970365	Identifier	iter		970347	0					
ANR	970366	Identifier	data		970347	1					
ANR	970367	ExpressionStatement	intl_errors_reset ( BREAKITER_ERROR_P ( bio ) )	43:1:1601:1642	970347	2	True				
ANR	970368	CallExpression	intl_errors_reset ( BREAKITER_ERROR_P ( bio ) )		970347	0					
ANR	970369	Callee	intl_errors_reset		970347	0					
ANR	970370	Identifier	intl_errors_reset		970347	0					
ANR	970371	ArgumentList	BREAKITER_ERROR_P ( bio )		970347	1					
ANR	970372	Argument	BREAKITER_ERROR_P ( bio )		970347	0					
ANR	970373	CallExpression	BREAKITER_ERROR_P ( bio )		970347	0					
ANR	970374	Callee	BREAKITER_ERROR_P		970347	0					
ANR	970375	Identifier	BREAKITER_ERROR_P		970347	0					
ANR	970376	ArgumentList	bio		970347	1					
ANR	970377	Argument	bio		970347	0					
ANR	970378	Identifier	bio		970347	0					
ANR	970379	IfStatement	if ( bio -> biter == NULL )		970347	3					
ANR	970380	Condition	bio -> biter == NULL	44:5:1649:1666	970347	0	True				
ANR	970381	EqualityExpression	bio -> biter == NULL		970347	0		==			
ANR	970382	PtrMemberAccess	bio -> biter		970347	0					
ANR	970383	Identifier	bio		970347	0					
ANR	970384	Identifier	biter		970347	1					
ANR	970385	Identifier	NULL		970347	1					
ANR	970386	CompoundStatement		5:25:142:142	970347	1					
ANR	970387	Statement	intl_errors_set	45:2:1673:1687	970347	0	True				
ANR	970388	Statement	(	45:17:1688:1688	970347	1	True				
ANR	970389	Statement	BREAKITER_ERROR_P	45:18:1689:1705	970347	2	True				
ANR	970390	Statement	(	45:35:1706:1706	970347	3	True				
ANR	970391	Statement	bio	45:36:1707:1709	970347	4	True				
ANR	970392	Statement	)	45:39:1710:1710	970347	5	True				
ANR	970393	Statement	","	45:40:1711:1711	970347	6	True				
ANR	970394	Statement	U_INVALID_STATE_ERROR	45:42:1713:1733	970347	7	True				
ANR	970395	Statement	","	45:63:1734:1734	970347	8	True				
ANR	970396	Statement	"""The BreakIterator object backing the PHP iterator is not """	46:3:1739:1797	970347	9	True				
ANR	970397	Statement	"""properly constructed"""	47:3:1802:1823	970347	10	True				
ANR	970398	Statement	","	47:25:1824:1824	970347	11	True				
ANR	970399	Statement	0	47:27:1826:1826	970347	12	True				
ANR	970400	Statement	)	47:28:1827:1827	970347	13	True				
ANR	970401	ExpressionStatement		47:29:1828:1828	970347	14	True				
ANR	970402	ReturnStatement	return bio -> biter ;	49:1:1834:1851	970347	4	True				
ANR	970403	PtrMemberAccess	bio -> biter		970347	0					
ANR	970404	Identifier	bio		970347	0					
ANR	970405	Identifier	biter		970347	1					
ANR	970406	ReturnType	inline BreakIterator *		970347	1					
ANR	970407	Identifier	_breakiter_prolog		970347	2					
ANR	970408	ParameterList	zend_object_iterator * iter		970347	3					
ANR	970409	Parameter	zend_object_iterator * iter	39:40:1498:1523	970347	0	True				
ANR	970410	ParameterType	zend_object_iterator *		970347	0					
ANR	970411	Identifier	iter		970347	1					
ANR	970412	CFGEntryNode	ENTRY		970347		True				
ANR	970413	CFGExitNode	EXIT		970347		True				
ANR	970414	Symbol	Z_INTL_BREAKITERATOR_P		970347						
ANR	970415	Symbol	& iter -> data		970347						
ANR	970416	Symbol	NULL		970347						
ANR	970417	Symbol	iter		970347						
ANR	970418	Symbol	bio		970347						
ANR	970419	Symbol	BREAKITER_ERROR_P		970347						
ANR	970420	Symbol	* bio		970347						
ANR	970421	Symbol	bio -> biter		970347						
ANR	970422	Function	_breakiterator_destroy_it	52:0:1856:1953							
ANR	970423	FunctionDef	_breakiterator_destroy_it (zend_object_iterator * iter)		970422	0					
ANR	970424	CompoundStatement		53:0:1922:1953	970422	0					
ANR	970425	ExpressionStatement	zval_ptr_dtor ( & iter -> data )	54:1:1925:1951	970422	0	True				
ANR	970426	CallExpression	zval_ptr_dtor ( & iter -> data )		970422	0					
ANR	970427	Callee	zval_ptr_dtor		970422	0					
ANR	970428	Identifier	zval_ptr_dtor		970422	0					
ANR	970429	ArgumentList	& iter -> data		970422	1					
ANR	970430	Argument	& iter -> data		970422	0					
ANR	970431	UnaryOperationExpression	& iter -> data		970422	0					
ANR	970432	UnaryOperator	&		970422	0					
ANR	970433	PtrMemberAccess	iter -> data		970422	1					
ANR	970434	Identifier	iter		970422	0					
ANR	970435	Identifier	data		970422	1					
ANR	970436	ReturnType	static void		970422	1					
ANR	970437	Identifier	_breakiterator_destroy_it		970422	2					
ANR	970438	ParameterList	zend_object_iterator * iter		970422	3					
ANR	970439	Parameter	zend_object_iterator * iter	52:38:1894:1919	970422	0	True				
ANR	970440	ParameterType	zend_object_iterator *		970422	0					
ANR	970441	Identifier	iter		970422	1					
ANR	970442	CFGEntryNode	ENTRY		970422		True				
ANR	970443	CFGExitNode	EXIT		970422		True				
ANR	970444	Symbol	& iter -> data		970422						
ANR	970445	Symbol	iter		970422						
ANR	970446	Function	_breakiterator_move_forward	57:0:1956:2392							
ANR	970447	FunctionDef	_breakiterator_move_forward (zend_object_iterator * iter)		970446	0					
ANR	970448	CompoundStatement		58:0:2024:2392	970446	0					
ANR	970449	IdentifierDeclStatement	BreakIterator * biter = _breakiter_prolog ( iter ) ;	59:1:2027:2073	970446	0	True				
ANR	970450	IdentifierDecl	* biter = _breakiter_prolog ( iter )		970446	0					
ANR	970451	IdentifierDeclType	BreakIterator *		970446	0					
ANR	970452	Identifier	biter		970446	1					
ANR	970453	AssignmentExpression	* biter = _breakiter_prolog ( iter )		970446	2		=			
ANR	970454	Identifier	biter		970446	0					
ANR	970455	CallExpression	_breakiter_prolog ( iter )		970446	1					
ANR	970456	Callee	_breakiter_prolog		970446	0					
ANR	970457	Identifier	_breakiter_prolog		970446	0					
ANR	970458	ArgumentList	iter		970446	1					
ANR	970459	Argument	iter		970446	0					
ANR	970460	Identifier	iter		970446	0					
ANR	970461	IdentifierDeclStatement	zoi_with_current * zoi_iter = ( zoi_with_current * ) iter ;	60:1:2076:2128	970446	1	True				
ANR	970462	IdentifierDecl	* zoi_iter = ( zoi_with_current * ) iter		970446	0					
ANR	970463	IdentifierDeclType	zoi_with_current *		970446	0					
ANR	970464	Identifier	zoi_iter		970446	1					
ANR	970465	AssignmentExpression	* zoi_iter = ( zoi_with_current * ) iter		970446	2		=			
ANR	970466	Identifier	zoi_iter		970446	0					
ANR	970467	CastExpression	( zoi_with_current * ) iter		970446	1					
ANR	970468	CastTarget	zoi_with_current *		970446	0					
ANR	970469	Identifier	iter		970446	1					
ANR	970470	ExpressionStatement	iter -> funcs -> invalidate_current ( iter )	62:1:2132:2169	970446	2	True				
ANR	970471	CallExpression	iter -> funcs -> invalidate_current ( iter )		970446	0					
ANR	970472	Callee	iter -> funcs -> invalidate_current		970446	0					
ANR	970473	PtrMemberAccess	iter -> funcs -> invalidate_current		970446	0					
ANR	970474	PtrMemberAccess	iter -> funcs		970446	0					
ANR	970475	Identifier	iter		970446	0					
ANR	970476	Identifier	funcs		970446	1					
ANR	970477	Identifier	invalidate_current		970446	1					
ANR	970478	ArgumentList	iter		970446	1					
ANR	970479	Argument	iter		970446	0					
ANR	970480	Identifier	iter		970446	0					
ANR	970481	IfStatement	if ( biter == NULL )		970446	3					
ANR	970482	Condition	biter == NULL	64:5:2177:2189	970446	0	True				
ANR	970483	EqualityExpression	biter == NULL		970446	0		==			
ANR	970484	Identifier	biter		970446	0					
ANR	970485	Identifier	NULL		970446	1					
ANR	970486	CompoundStatement		7:20:167:167	970446	1					
ANR	970487	ReturnStatement	return ;	65:2:2196:2202	970446	0	True				
ANR	970488	IdentifierDeclStatement	int32_t pos = biter -> next ( ) ;	68:1:2209:2236	970446	4	True				
ANR	970489	IdentifierDecl	pos = biter -> next ( )		970446	0					
ANR	970490	IdentifierDeclType	int32_t		970446	0					
ANR	970491	Identifier	pos		970446	1					
ANR	970492	AssignmentExpression	pos = biter -> next ( )		970446	2		=			
ANR	970493	Identifier	pos		970446	0					
ANR	970494	CallExpression	biter -> next ( )		970446	1					
ANR	970495	Callee	biter -> next		970446	0					
ANR	970496	PtrMemberAccess	biter -> next		970446	0					
ANR	970497	Identifier	biter		970446	0					
ANR	970498	Identifier	next		970446	1					
ANR	970499	ArgumentList			970446	1					
ANR	970500	IfStatement	if ( pos != BreakIterator :: DONE )		970446	5					
ANR	970501	Condition	pos != BreakIterator :: DONE	69:5:2243:2268	970446	0	True				
ANR	970502	EqualityExpression	pos != BreakIterator :: DONE		970446	0		!=			
ANR	970503	Identifier	pos		970446	0					
ANR	970504	Identifier	BreakIterator :: DONE		970446	1					
ANR	970505	CompoundStatement		12:33:246:246	970446	1					
ANR	970506	ExpressionStatement	"ZVAL_LONG ( & zoi_iter -> current , ( zend_long ) pos )"	70:2:2275:2320	970446	0	True				
ANR	970507	CallExpression	"ZVAL_LONG ( & zoi_iter -> current , ( zend_long ) pos )"		970446	0					
ANR	970508	Callee	ZVAL_LONG		970446	0					
ANR	970509	Identifier	ZVAL_LONG		970446	0					
ANR	970510	ArgumentList	& zoi_iter -> current		970446	1					
ANR	970511	Argument	& zoi_iter -> current		970446	0					
ANR	970512	UnaryOperationExpression	& zoi_iter -> current		970446	0					
ANR	970513	UnaryOperator	&		970446	0					
ANR	970514	PtrMemberAccess	zoi_iter -> current		970446	1					
ANR	970515	Identifier	zoi_iter		970446	0					
ANR	970516	Identifier	current		970446	1					
ANR	970517	Argument	( zend_long ) pos		970446	1					
ANR	970518	CastExpression	( zend_long ) pos		970446	0					
ANR	970519	CastTarget	zend_long		970446	0					
ANR	970520	Identifier	pos		970446	1					
ANR	970521	ReturnType	static void		970446	1					
ANR	970522	Identifier	_breakiterator_move_forward		970446	2					
ANR	970523	ParameterList	zend_object_iterator * iter		970446	3					
ANR	970524	Parameter	zend_object_iterator * iter	57:40:1996:2021	970446	0	True				
ANR	970525	ParameterType	zend_object_iterator *		970446	0					
ANR	970526	Identifier	iter		970446	1					
ANR	970527	CFGEntryNode	ENTRY		970446		True				
ANR	970528	CFGExitNode	EXIT		970446		True				
ANR	970529	Symbol	_breakiter_prolog		970446						
ANR	970530	Symbol	* iter		970446						
ANR	970531	Symbol	NULL		970446						
ANR	970532	Symbol	* biter		970446						
ANR	970533	Symbol	& zoi_iter -> current		970446						
ANR	970534	Symbol	pos		970446						
ANR	970535	Symbol	BreakIterator :: DONE		970446						
ANR	970536	Symbol	biter -> next		970446						
ANR	970537	Symbol	iter -> funcs		970446						
ANR	970538	Symbol	iter		970446						
ANR	970539	Symbol	biter		970446						
ANR	970540	Symbol	zoi_iter		970446						
ANR	970541	Function	_breakiterator_rewind	74:0:2395:2643							
ANR	970542	FunctionDef	_breakiterator_rewind (zend_object_iterator * iter)		970541	0					
ANR	970543	CompoundStatement		75:0:2457:2643	970541	0					
ANR	970544	IdentifierDeclStatement	BreakIterator * biter = _breakiter_prolog ( iter ) ;	76:1:2460:2506	970541	0	True				
ANR	970545	IdentifierDecl	* biter = _breakiter_prolog ( iter )		970541	0					
ANR	970546	IdentifierDeclType	BreakIterator *		970541	0					
ANR	970547	Identifier	biter		970541	1					
ANR	970548	AssignmentExpression	* biter = _breakiter_prolog ( iter )		970541	2		=			
ANR	970549	Identifier	biter		970541	0					
ANR	970550	CallExpression	_breakiter_prolog ( iter )		970541	1					
ANR	970551	Callee	_breakiter_prolog		970541	0					
ANR	970552	Identifier	_breakiter_prolog		970541	0					
ANR	970553	ArgumentList	iter		970541	1					
ANR	970554	Argument	iter		970541	0					
ANR	970555	Identifier	iter		970541	0					
ANR	970556	IdentifierDeclStatement	zoi_with_current * zoi_iter = ( zoi_with_current * ) iter ;	77:1:2509:2561	970541	1	True				
ANR	970557	IdentifierDecl	* zoi_iter = ( zoi_with_current * ) iter		970541	0					
ANR	970558	IdentifierDeclType	zoi_with_current *		970541	0					
ANR	970559	Identifier	zoi_iter		970541	1					
ANR	970560	AssignmentExpression	* zoi_iter = ( zoi_with_current * ) iter		970541	2		=			
ANR	970561	Identifier	zoi_iter		970541	0					
ANR	970562	CastExpression	( zoi_with_current * ) iter		970541	1					
ANR	970563	CastTarget	zoi_with_current *		970541	0					
ANR	970564	Identifier	iter		970541	1					
ANR	970565	IdentifierDeclStatement	int32_t pos = biter -> first ( ) ;	79:1:2565:2593	970541	2	True				
ANR	970566	IdentifierDecl	pos = biter -> first ( )		970541	0					
ANR	970567	IdentifierDeclType	int32_t		970541	0					
ANR	970568	Identifier	pos		970541	1					
ANR	970569	AssignmentExpression	pos = biter -> first ( )		970541	2		=			
ANR	970570	Identifier	pos		970541	0					
ANR	970571	CallExpression	biter -> first ( )		970541	1					
ANR	970572	Callee	biter -> first		970541	0					
ANR	970573	PtrMemberAccess	biter -> first		970541	0					
ANR	970574	Identifier	biter		970541	0					
ANR	970575	Identifier	first		970541	1					
ANR	970576	ArgumentList			970541	1					
ANR	970577	ExpressionStatement	"ZVAL_LONG ( & zoi_iter -> current , ( zend_long ) pos )"	80:1:2596:2641	970541	3	True				
ANR	970578	CallExpression	"ZVAL_LONG ( & zoi_iter -> current , ( zend_long ) pos )"		970541	0					
ANR	970579	Callee	ZVAL_LONG		970541	0					
ANR	970580	Identifier	ZVAL_LONG		970541	0					
ANR	970581	ArgumentList	& zoi_iter -> current		970541	1					
ANR	970582	Argument	& zoi_iter -> current		970541	0					
ANR	970583	UnaryOperationExpression	& zoi_iter -> current		970541	0					
ANR	970584	UnaryOperator	&		970541	0					
ANR	970585	PtrMemberAccess	zoi_iter -> current		970541	1					
ANR	970586	Identifier	zoi_iter		970541	0					
ANR	970587	Identifier	current		970541	1					
ANR	970588	Argument	( zend_long ) pos		970541	1					
ANR	970589	CastExpression	( zend_long ) pos		970541	0					
ANR	970590	CastTarget	zend_long		970541	0					
ANR	970591	Identifier	pos		970541	1					
ANR	970592	ReturnType	static void		970541	1					
ANR	970593	Identifier	_breakiterator_rewind		970541	2					
ANR	970594	ParameterList	zend_object_iterator * iter		970541	3					
ANR	970595	Parameter	zend_object_iterator * iter	74:34:2429:2454	970541	0	True				
ANR	970596	ParameterType	zend_object_iterator *		970541	0					
ANR	970597	Identifier	iter		970541	1					
ANR	970598	CFGEntryNode	ENTRY		970541		True				
ANR	970599	CFGExitNode	EXIT		970541		True				
ANR	970600	Symbol	_breakiter_prolog		970541						
ANR	970601	Symbol	* biter		970541						
ANR	970602	Symbol	& zoi_iter -> current		970541						
ANR	970603	Symbol	pos		970541						
ANR	970604	Symbol	biter -> first		970541						
ANR	970605	Symbol	iter		970541						
ANR	970606	Symbol	biter		970541						
ANR	970607	Symbol	zoi_iter		970541						
ANR	970608	DeclStmt									
ANR	970609	Decl							zend_object_iterator_funcs	zend_object_iterator_funcs	breakiterator_iterator_funcs
ANR	970610	Function	_breakiterator_get_iterator	93:0:2900:3821							
ANR	970611	FunctionDef	"_breakiterator_get_iterator (zend_class_entry * ce , zval * object , int by_ref)"		970610	0					
ANR	970612	CompoundStatement		95:0:3008:3821	970610	0					
ANR	970613	IdentifierDeclStatement	BreakIterator_object * bio ;	96:1:3011:3036	970610	0	True				
ANR	970614	IdentifierDecl	* bio		970610	0					
ANR	970615	IdentifierDeclType	BreakIterator_object *		970610	0					
ANR	970616	Identifier	bio		970610	1					
ANR	970617	IfStatement	if ( by_ref )		970610	1					
ANR	970618	Condition	by_ref	97:5:3043:3048	970610	0	True				
ANR	970619	Identifier	by_ref		970610	0					
ANR	970620	CompoundStatement		3:13:42:42	970610	1					
ANR	970621	ExpressionStatement	"zend_throw_exception ( NULL , ""Iteration by reference is not supported"" , 0 )"	98:2:3055:3130	970610	0	True				
ANR	970622	CallExpression	"zend_throw_exception ( NULL , ""Iteration by reference is not supported"" , 0 )"		970610	0					
ANR	970623	Callee	zend_throw_exception		970610	0					
ANR	970624	Identifier	zend_throw_exception		970610	0					
ANR	970625	ArgumentList	NULL		970610	1					
ANR	970626	Argument	NULL		970610	0					
ANR	970627	Identifier	NULL		970610	0					
ANR	970628	Argument	"""Iteration by reference is not supported"""		970610	1					
ANR	970629	PrimaryExpression	"""Iteration by reference is not supported"""		970610	0					
ANR	970630	Argument	0		970610	2					
ANR	970631	PrimaryExpression	0		970610	0					
ANR	970632	ReturnStatement	return NULL ;	100:2:3134:3145	970610	1	True				
ANR	970633	Identifier	NULL		970610	0					
ANR	970634	ExpressionStatement	bio = Z_INTL_BREAKITERATOR_P ( object )	103:1:3152:3188	970610	2	True				
ANR	970635	AssignmentExpression	bio = Z_INTL_BREAKITERATOR_P ( object )		970610	0		=			
ANR	970636	Identifier	bio		970610	0					
ANR	970637	CallExpression	Z_INTL_BREAKITERATOR_P ( object )		970610	1					
ANR	970638	Callee	Z_INTL_BREAKITERATOR_P		970610	0					
ANR	970639	Identifier	Z_INTL_BREAKITERATOR_P		970610	0					
ANR	970640	ArgumentList	object		970610	1					
ANR	970641	Argument	object		970610	0					
ANR	970642	Identifier	object		970610	0					
ANR	970643	IdentifierDeclStatement	BreakIterator * biter = bio -> biter ;	104:1:3191:3224	970610	3	True				
ANR	970644	IdentifierDecl	* biter = bio -> biter		970610	0					
ANR	970645	IdentifierDeclType	BreakIterator *		970610	0					
ANR	970646	Identifier	biter		970610	1					
ANR	970647	AssignmentExpression	* biter = bio -> biter		970610	2		=			
ANR	970648	Identifier	biter		970610	0					
ANR	970649	PtrMemberAccess	bio -> biter		970610	1					
ANR	970650	Identifier	bio		970610	0					
ANR	970651	Identifier	biter		970610	1					
ANR	970652	IfStatement	if ( biter == NULL )		970610	4					
ANR	970653	Condition	biter == NULL	106:5:3232:3244	970610	0	True				
ANR	970654	EqualityExpression	biter == NULL		970610	0		==			
ANR	970655	Identifier	biter		970610	0					
ANR	970656	Identifier	NULL		970610	1					
ANR	970657	CompoundStatement		12:20:238:238	970610	1					
ANR	970658	ExpressionStatement	"zend_throw_exception ( NULL , ""The BreakIterator is not properly constructed"" , 0 )"	107:2:3251:3332	970610	0	True				
ANR	970659	CallExpression	"zend_throw_exception ( NULL , ""The BreakIterator is not properly constructed"" , 0 )"		970610	0					
ANR	970660	Callee	zend_throw_exception		970610	0					
ANR	970661	Identifier	zend_throw_exception		970610	0					
ANR	970662	ArgumentList	NULL		970610	1					
ANR	970663	Argument	NULL		970610	0					
ANR	970664	Identifier	NULL		970610	0					
ANR	970665	Argument	"""The BreakIterator is not properly constructed"""		970610	1					
ANR	970666	PrimaryExpression	"""The BreakIterator is not properly constructed"""		970610	0					
ANR	970667	Argument	0		970610	2					
ANR	970668	PrimaryExpression	0		970610	0					
ANR	970669	ReturnStatement	return NULL ;	109:2:3336:3347	970610	1	True				
ANR	970670	Identifier	NULL		970610	0					
ANR	970671	Statement	zoi_with_current	112:1:3354:3369	970610	5	True				
ANR	970672	Statement	*	112:18:3371:3371	970610	6	True				
ANR	970673	Statement	zoi_iter	112:19:3372:3379	970610	7	True				
ANR	970674	Statement	=	112:28:3381:3381	970610	8	True				
ANR	970675	Statement	static_cast	112:30:3383:3393	970610	9	True				
ANR	970676	Statement	<	112:41:3394:3394	970610	10	True				
ANR	970677	Statement	zoi_with_current	112:42:3395:3410	970610	11	True				
ANR	970678	Statement	*	112:58:3411:3411	970610	12	True				
ANR	970679	Statement	>	112:59:3412:3412	970610	13	True				
ANR	970680	ExpressionStatement	emalloc ( sizeof * zoi_iter )	112:60:3413:3440	970610	14	True				
ANR	970681	CallExpression	emalloc ( sizeof * zoi_iter )		970610	0					
ANR	970682	Callee	emalloc		970610	0					
ANR	970683	Identifier	emalloc		970610	0					
ANR	970684	ArgumentList	sizeof * zoi_iter		970610	1					
ANR	970685	Argument	sizeof * zoi_iter		970610	0					
ANR	970686	SizeofExpression	sizeof * zoi_iter		970610	0					
ANR	970687	Sizeof	sizeof		970610	0					
ANR	970688	UnaryOperationExpression	* zoi_iter		970610	1					
ANR	970689	UnaryOperator	*		970610	0					
ANR	970690	Identifier	zoi_iter		970610	1					
ANR	970691	ExpressionStatement	zend_iterator_init ( & zoi_iter -> zoi )	113:1:3443:3477	970610	15	True				
ANR	970692	CallExpression	zend_iterator_init ( & zoi_iter -> zoi )		970610	0					
ANR	970693	Callee	zend_iterator_init		970610	0					
ANR	970694	Identifier	zend_iterator_init		970610	0					
ANR	970695	ArgumentList	& zoi_iter -> zoi		970610	1					
ANR	970696	Argument	& zoi_iter -> zoi		970610	0					
ANR	970697	UnaryOperationExpression	& zoi_iter -> zoi		970610	0					
ANR	970698	UnaryOperator	&		970610	0					
ANR	970699	PtrMemberAccess	zoi_iter -> zoi		970610	1					
ANR	970700	Identifier	zoi_iter		970610	0					
ANR	970701	Identifier	zoi		970610	1					
ANR	970702	ExpressionStatement	"ZVAL_COPY ( & zoi_iter -> zoi . data , object )"	114:1:3480:3518	970610	16	True				
ANR	970703	CallExpression	"ZVAL_COPY ( & zoi_iter -> zoi . data , object )"		970610	0					
ANR	970704	Callee	ZVAL_COPY		970610	0					
ANR	970705	Identifier	ZVAL_COPY		970610	0					
ANR	970706	ArgumentList	& zoi_iter -> zoi . data		970610	1					
ANR	970707	Argument	& zoi_iter -> zoi . data		970610	0					
ANR	970708	UnaryOperationExpression	& zoi_iter -> zoi . data		970610	0					
ANR	970709	UnaryOperator	&		970610	0					
ANR	970710	MemberAccess	zoi_iter -> zoi . data		970610	1					
ANR	970711	PtrMemberAccess	zoi_iter -> zoi		970610	0					
ANR	970712	Identifier	zoi_iter		970610	0					
ANR	970713	Identifier	zoi		970610	1					
ANR	970714	Identifier	data		970610	1					
ANR	970715	Argument	object		970610	1					
ANR	970716	Identifier	object		970610	0					
ANR	970717	ExpressionStatement	zoi_iter -> zoi . funcs = & breakiterator_iterator_funcs	115:1:3521:3572	970610	17	True				
ANR	970718	AssignmentExpression	zoi_iter -> zoi . funcs = & breakiterator_iterator_funcs		970610	0		=			
ANR	970719	MemberAccess	zoi_iter -> zoi . funcs		970610	0					
ANR	970720	PtrMemberAccess	zoi_iter -> zoi		970610	0					
ANR	970721	Identifier	zoi_iter		970610	0					
ANR	970722	Identifier	zoi		970610	1					
ANR	970723	Identifier	funcs		970610	1					
ANR	970724	UnaryOperationExpression	& breakiterator_iterator_funcs		970610	1					
ANR	970725	UnaryOperator	&		970610	0					
ANR	970726	Identifier	breakiterator_iterator_funcs		970610	1					
ANR	970727	ExpressionStatement	zoi_iter -> zoi . index = 0	116:1:3575:3598	970610	18	True				
ANR	970728	AssignmentExpression	zoi_iter -> zoi . index = 0		970610	0		=			
ANR	970729	MemberAccess	zoi_iter -> zoi . index		970610	0					
ANR	970730	PtrMemberAccess	zoi_iter -> zoi		970610	0					
ANR	970731	Identifier	zoi_iter		970610	0					
ANR	970732	Identifier	zoi		970610	1					
ANR	970733	Identifier	index		970610	1					
ANR	970734	PrimaryExpression	0		970610	1					
ANR	970735	ExpressionStatement	zoi_iter -> destroy_it = _breakiterator_destroy_it	117:1:3601:3649	970610	19	True				
ANR	970736	AssignmentExpression	zoi_iter -> destroy_it = _breakiterator_destroy_it		970610	0		=			
ANR	970737	PtrMemberAccess	zoi_iter -> destroy_it		970610	0					
ANR	970738	Identifier	zoi_iter		970610	0					
ANR	970739	Identifier	destroy_it		970610	1					
ANR	970740	Identifier	_breakiterator_destroy_it		970610	1					
ANR	970741	ExpressionStatement	ZVAL_UNDEF ( & zoi_iter -> wrapping_obj )	118:1:3652:3687	970610	20	True				
ANR	970742	CallExpression	ZVAL_UNDEF ( & zoi_iter -> wrapping_obj )		970610	0					
ANR	970743	Callee	ZVAL_UNDEF		970610	0					
ANR	970744	Identifier	ZVAL_UNDEF		970610	0					
ANR	970745	ArgumentList	& zoi_iter -> wrapping_obj		970610	1					
ANR	970746	Argument	& zoi_iter -> wrapping_obj		970610	0					
ANR	970747	UnaryOperationExpression	& zoi_iter -> wrapping_obj		970610	0					
ANR	970748	UnaryOperator	&		970610	0					
ANR	970749	PtrMemberAccess	zoi_iter -> wrapping_obj		970610	1					
ANR	970750	Identifier	zoi_iter		970610	0					
ANR	970751	Identifier	wrapping_obj		970610	1					
ANR	970752	ExpressionStatement	ZVAL_UNDEF ( & zoi_iter -> current )	119:1:3728:3758	970610	21	True				
ANR	970753	CallExpression	ZVAL_UNDEF ( & zoi_iter -> current )		970610	0					
ANR	970754	Callee	ZVAL_UNDEF		970610	0					
ANR	970755	Identifier	ZVAL_UNDEF		970610	0					
ANR	970756	ArgumentList	& zoi_iter -> current		970610	1					
ANR	970757	Argument	& zoi_iter -> current		970610	0					
ANR	970758	UnaryOperationExpression	& zoi_iter -> current		970610	0					
ANR	970759	UnaryOperator	&		970610	0					
ANR	970760	PtrMemberAccess	zoi_iter -> current		970610	1					
ANR	970761	Identifier	zoi_iter		970610	0					
ANR	970762	Identifier	current		970610	1					
ANR	970763	Statement	return	121:1:3762:3767	970610	22	True				
ANR	970764	Statement	reinterpret_cast	121:8:3769:3784	970610	23	True				
ANR	970765	Statement	<	121:24:3785:3785	970610	24	True				
ANR	970766	Statement	zend_object_iterator	121:25:3786:3805	970610	25	True				
ANR	970767	Statement	*	121:46:3807:3807	970610	26	True				
ANR	970768	Statement	>	121:47:3808:3808	970610	27	True				
ANR	970769	ExpressionStatement	zoi_iter	121:48:3809:3819	970610	28	True				
ANR	970770	Identifier	zoi_iter		970610	0					
ANR	970771	ReturnType	U_CFUNC zend_object_iterator *		970610	1					
ANR	970772	Identifier	_breakiterator_get_iterator		970610	2					
ANR	970773	ParameterList	"zend_class_entry * ce , zval * object , int by_ref"		970610	3					
ANR	970774	Parameter	zend_class_entry * ce	94:1:2960:2979	970610	0	True				
ANR	970775	ParameterType	zend_class_entry *		970610	0					
ANR	970776	Identifier	ce		970610	1					
ANR	970777	Parameter	zval * object	94:23:2982:2993	970610	1	True				
ANR	970778	ParameterType	zval *		970610	0					
ANR	970779	Identifier	object		970610	1					
ANR	970780	Parameter	int by_ref	94:37:2996:3005	970610	2	True				
ANR	970781	ParameterType	int		970610	0					
ANR	970782	Identifier	by_ref		970610	1					
ANR	970783	CFGEntryNode	ENTRY		970610		True				
ANR	970784	CFGExitNode	EXIT		970610		True				
ANR	970785	Symbol	_breakiterator_destroy_it		970610						
ANR	970786	Symbol	ce		970610						
ANR	970787	Symbol	NULL		970610						
ANR	970788	Symbol	& breakiterator_iterator_funcs		970610						
ANR	970789	Symbol	& zoi_iter -> wrapping_obj		970610						
ANR	970790	Symbol	bio		970610						
ANR	970791	Symbol	zoi_iter -> zoi		970610						
ANR	970792	Symbol	zoi_iter -> zoi . funcs		970610						
ANR	970793	Symbol	biter		970610						
ANR	970794	Symbol	* bio		970610						
ANR	970795	Symbol	* zoi_iter		970610						
ANR	970796	Symbol	Z_INTL_BREAKITERATOR_P		970610						
ANR	970797	Symbol	& zoi_iter -> zoi . data		970610						
ANR	970798	Symbol	& zoi_iter -> current		970610						
ANR	970799	Symbol	& zoi_iter -> zoi		970610						
ANR	970800	Symbol	zoi_iter -> zoi . index		970610						
ANR	970801	Symbol	by_ref		970610						
ANR	970802	Symbol	bio -> biter		970610						
ANR	970803	Symbol	object		970610						
ANR	970804	Symbol	zoi_iter		970610						
ANR	970805	Symbol	zoi_iter -> destroy_it		970610						
ANR	970806	ClassDef	zoi_break_iter_parts	126:8:3868:4054							
ANR	970807	DeclStmt									
ANR	970808	Decl							zoi_with_current	zoi_with_current	zoi_cur
ANR	970809	DeclStmt									
ANR	970810	Decl							parts_iter_key_type	parts_iter_key_type	key_type
ANR	970811	DeclStmt									
ANR	970812	Decl							BreakIterator_object	BreakIterator_object *	bio
ANR	970813	DeclStmt									
ANR	970814	Decl							zoi_break_iter_parts	zoi_break_iter_parts	zoi_break_iter_parts
ANR	970815	Function	_breakiterator_parts_destroy_it	132:0:4057:4160							
ANR	970816	FunctionDef	_breakiterator_parts_destroy_it (zend_object_iterator * iter)		970815	0					
ANR	970817	CompoundStatement		133:0:4129:4160	970815	0					
ANR	970818	ExpressionStatement	zval_ptr_dtor ( & iter -> data )	134:1:4132:4158	970815	0	True				
ANR	970819	CallExpression	zval_ptr_dtor ( & iter -> data )		970815	0					
ANR	970820	Callee	zval_ptr_dtor		970815	0					
ANR	970821	Identifier	zval_ptr_dtor		970815	0					
ANR	970822	ArgumentList	& iter -> data		970815	1					
ANR	970823	Argument	& iter -> data		970815	0					
ANR	970824	UnaryOperationExpression	& iter -> data		970815	0					
ANR	970825	UnaryOperator	&		970815	0					
ANR	970826	PtrMemberAccess	iter -> data		970815	1					
ANR	970827	Identifier	iter		970815	0					
ANR	970828	Identifier	data		970815	1					
ANR	970829	ReturnType	static void		970815	1					
ANR	970830	Identifier	_breakiterator_parts_destroy_it		970815	2					
ANR	970831	ParameterList	zend_object_iterator * iter		970815	3					
ANR	970832	Parameter	zend_object_iterator * iter	132:44:4101:4126	970815	0	True				
ANR	970833	ParameterType	zend_object_iterator *		970815	0					
ANR	970834	Identifier	iter		970815	1					
ANR	970835	CFGEntryNode	ENTRY		970815		True				
ANR	970836	CFGExitNode	EXIT		970815		True				
ANR	970837	Symbol	& iter -> data		970815						
ANR	970838	Symbol	iter		970815						
ANR	970839	Function	_breakiterator_parts_get_current_key	137:0:4163:4341							
ANR	970840	FunctionDef	"_breakiterator_parts_get_current_key (zend_object_iterator * iter , zval * key)"		970839	0					
ANR	970841	CompoundStatement		138:0:4251:4341	970839	0					
ANR	970842	ExpressionStatement	"ZVAL_LONG ( key , iter -> index )"	140:1:4312:4339	970839	0	True				
ANR	970843	CallExpression	"ZVAL_LONG ( key , iter -> index )"		970839	0					
ANR	970844	Callee	ZVAL_LONG		970839	0					
ANR	970845	Identifier	ZVAL_LONG		970839	0					
ANR	970846	ArgumentList	key		970839	1					
ANR	970847	Argument	key		970839	0					
ANR	970848	Identifier	key		970839	0					
ANR	970849	Argument	iter -> index		970839	1					
ANR	970850	PtrMemberAccess	iter -> index		970839	0					
ANR	970851	Identifier	iter		970839	0					
ANR	970852	Identifier	index		970839	1					
ANR	970853	ReturnType	static void		970839	1					
ANR	970854	Identifier	_breakiterator_parts_get_current_key		970839	2					
ANR	970855	ParameterList	"zend_object_iterator * iter , zval * key"		970839	3					
ANR	970856	Parameter	zend_object_iterator * iter	137:49:4212:4237	970839	0	True				
ANR	970857	ParameterType	zend_object_iterator *		970839	0					
ANR	970858	Identifier	iter		970839	1					
ANR	970859	Parameter	zval * key	137:77:4240:4248	970839	1	True				
ANR	970860	ParameterType	zval *		970839	0					
ANR	970861	Identifier	key		970839	1					
ANR	970862	CFGEntryNode	ENTRY		970839		True				
ANR	970863	CFGExitNode	EXIT		970839		True				
ANR	970864	Symbol	* iter		970839						
ANR	970865	Symbol	iter		970839						
ANR	970866	Symbol	iter -> index		970839						
ANR	970867	Symbol	key		970839						
ANR	970868	Function	_breakiterator_parts_move_forward	143:0:4344:5397							
ANR	970869	FunctionDef	_breakiterator_parts_move_forward (zend_object_iterator * iter)		970868	0					
ANR	970870	CompoundStatement		144:0:4418:5397	970868	0					
ANR	970871	IdentifierDeclStatement	zoi_break_iter_parts * zoi_bit = ( zoi_break_iter_parts * ) iter ;	145:1:4421:4480	970868	0	True				
ANR	970872	IdentifierDecl	* zoi_bit = ( zoi_break_iter_parts * ) iter		970868	0					
ANR	970873	IdentifierDeclType	zoi_break_iter_parts *		970868	0					
ANR	970874	Identifier	zoi_bit		970868	1					
ANR	970875	AssignmentExpression	* zoi_bit = ( zoi_break_iter_parts * ) iter		970868	2		=			
ANR	970876	Identifier	zoi_bit		970868	0					
ANR	970877	CastExpression	( zoi_break_iter_parts * ) iter		970868	1					
ANR	970878	CastTarget	zoi_break_iter_parts *		970868	0					
ANR	970879	Identifier	iter		970868	1					
ANR	970880	IdentifierDeclStatement	BreakIterator_object * bio = zoi_bit -> bio ;	146:1:4483:4523	970868	1	True				
ANR	970881	IdentifierDecl	* bio = zoi_bit -> bio		970868	0					
ANR	970882	IdentifierDeclType	BreakIterator_object *		970868	0					
ANR	970883	Identifier	bio		970868	1					
ANR	970884	AssignmentExpression	* bio = zoi_bit -> bio		970868	2		=			
ANR	970885	Identifier	bio		970868	0					
ANR	970886	PtrMemberAccess	zoi_bit -> bio		970868	1					
ANR	970887	Identifier	zoi_bit		970868	0					
ANR	970888	Identifier	bio		970868	1					
ANR	970889	ExpressionStatement	iter -> funcs -> invalidate_current ( iter )	148:1:4527:4564	970868	2	True				
ANR	970890	CallExpression	iter -> funcs -> invalidate_current ( iter )		970868	0					
ANR	970891	Callee	iter -> funcs -> invalidate_current		970868	0					
ANR	970892	PtrMemberAccess	iter -> funcs -> invalidate_current		970868	0					
ANR	970893	PtrMemberAccess	iter -> funcs		970868	0					
ANR	970894	Identifier	iter		970868	0					
ANR	970895	Identifier	funcs		970868	1					
ANR	970896	Identifier	invalidate_current		970868	1					
ANR	970897	ArgumentList	iter		970868	1					
ANR	970898	Argument	iter		970868	0					
ANR	970899	Identifier	iter		970868	0					
ANR	970900	IdentifierDeclStatement	"int32_t cur , next ;"	150:1:4568:4588	970868	3	True				
ANR	970901	IdentifierDecl	cur		970868	0					
ANR	970902	IdentifierDeclType	int32_t		970868	0					
ANR	970903	Identifier	cur		970868	1					
ANR	970904	IdentifierDecl	next		970868	1					
ANR	970905	IdentifierDeclType	int32_t		970868	0					
ANR	970906	Identifier	next		970868	1					
ANR	970907	ExpressionStatement	cur = bio -> biter -> current ( )	153:1:4592:4619	970868	4	True				
ANR	970908	AssignmentExpression	cur = bio -> biter -> current ( )		970868	0		=			
ANR	970909	Identifier	cur		970868	0					
ANR	970910	CallExpression	bio -> biter -> current ( )		970868	1					
ANR	970911	Callee	bio -> biter -> current		970868	0					
ANR	970912	PtrMemberAccess	bio -> biter -> current		970868	0					
ANR	970913	PtrMemberAccess	bio -> biter		970868	0					
ANR	970914	Identifier	bio		970868	0					
ANR	970915	Identifier	biter		970868	1					
ANR	970916	Identifier	current		970868	1					
ANR	970917	ArgumentList			970868	1					
ANR	970918	IfStatement	if ( cur == BreakIterator :: DONE )		970868	5					
ANR	970919	Condition	cur == BreakIterator :: DONE	154:5:4626:4651	970868	0	True				
ANR	970920	EqualityExpression	cur == BreakIterator :: DONE		970868	0		==			
ANR	970921	Identifier	cur		970868	0					
ANR	970922	Identifier	BreakIterator :: DONE		970868	1					
ANR	970923	CompoundStatement		11:33:235:235	970868	1					
ANR	970924	ReturnStatement	return ;	155:2:4658:4664	970868	0	True				
ANR	970925	ExpressionStatement	next = bio -> biter -> next ( )	157:1:4670:4695	970868	6	True				
ANR	970926	AssignmentExpression	next = bio -> biter -> next ( )		970868	0		=			
ANR	970927	Identifier	next		970868	0					
ANR	970928	CallExpression	bio -> biter -> next ( )		970868	1					
ANR	970929	Callee	bio -> biter -> next		970868	0					
ANR	970930	PtrMemberAccess	bio -> biter -> next		970868	0					
ANR	970931	PtrMemberAccess	bio -> biter		970868	0					
ANR	970932	Identifier	bio		970868	0					
ANR	970933	Identifier	biter		970868	1					
ANR	970934	Identifier	next		970868	1					
ANR	970935	ArgumentList			970868	1					
ANR	970936	IfStatement	if ( next == BreakIterator :: DONE )		970868	7					
ANR	970937	Condition	next == BreakIterator :: DONE	158:5:4702:4728	970868	0	True				
ANR	970938	EqualityExpression	next == BreakIterator :: DONE		970868	0		==			
ANR	970939	Identifier	next		970868	0					
ANR	970940	Identifier	BreakIterator :: DONE		970868	1					
ANR	970941	CompoundStatement		15:34:312:312	970868	1					
ANR	970942	ReturnStatement	return ;	159:2:4735:4741	970868	0	True				
ANR	970943	IfStatement	if ( zoi_bit -> key_type == PARTS_ITERATOR_KEY_LEFT )		970868	8					
ANR	970944	Condition	zoi_bit -> key_type == PARTS_ITERATOR_KEY_LEFT	162:5:4752:4795	970868	0	True				
ANR	970945	EqualityExpression	zoi_bit -> key_type == PARTS_ITERATOR_KEY_LEFT		970868	0		==			
ANR	970946	PtrMemberAccess	zoi_bit -> key_type		970868	0					
ANR	970947	Identifier	zoi_bit		970868	0					
ANR	970948	Identifier	key_type		970868	1					
ANR	970949	Identifier	PARTS_ITERATOR_KEY_LEFT		970868	1					
ANR	970950	CompoundStatement		19:51:379:379	970868	1					
ANR	970951	ExpressionStatement	iter -> index = cur	163:2:4802:4819	970868	0	True				
ANR	970952	AssignmentExpression	iter -> index = cur		970868	0		=			
ANR	970953	PtrMemberAccess	iter -> index		970868	0					
ANR	970954	Identifier	iter		970868	0					
ANR	970955	Identifier	index		970868	1					
ANR	970956	Identifier	cur		970868	1					
ANR	970957	ElseStatement	else		970868	0					
ANR	970958	IfStatement	if ( zoi_bit -> key_type == PARTS_ITERATOR_KEY_RIGHT )		970868	0					
ANR	970959	Condition	zoi_bit -> key_type == PARTS_ITERATOR_KEY_RIGHT	164:12:4833:4877	970868	0	True				
ANR	970960	EqualityExpression	zoi_bit -> key_type == PARTS_ITERATOR_KEY_RIGHT		970868	0		==			
ANR	970961	PtrMemberAccess	zoi_bit -> key_type		970868	0					
ANR	970962	Identifier	zoi_bit		970868	0					
ANR	970963	Identifier	key_type		970868	1					
ANR	970964	Identifier	PARTS_ITERATOR_KEY_RIGHT		970868	1					
ANR	970965	CompoundStatement		21:59:461:461	970868	1					
ANR	970966	ExpressionStatement	iter -> index = next	165:2:4884:4902	970868	0	True				
ANR	970967	AssignmentExpression	iter -> index = next		970868	0		=			
ANR	970968	PtrMemberAccess	iter -> index		970868	0					
ANR	970969	Identifier	iter		970868	0					
ANR	970970	Identifier	index		970868	1					
ANR	970971	Identifier	next		970868	1					
ANR	970972	IdentifierDeclStatement	const char * s = Z_STRVAL ( bio -> text ) ;	170:1:5030:5065	970868	9	True				
ANR	970973	IdentifierDecl	* s = Z_STRVAL ( bio -> text )		970868	0					
ANR	970974	IdentifierDeclType	const char *		970868	0					
ANR	970975	Identifier	s		970868	1					
ANR	970976	AssignmentExpression	* s = Z_STRVAL ( bio -> text )		970868	2		=			
ANR	970977	Identifier	s		970868	0					
ANR	970978	CallExpression	Z_STRVAL ( bio -> text )		970868	1					
ANR	970979	Callee	Z_STRVAL		970868	0					
ANR	970980	Identifier	Z_STRVAL		970868	0					
ANR	970981	ArgumentList	bio -> text		970868	1					
ANR	970982	Argument	bio -> text		970868	0					
ANR	970983	PtrMemberAccess	bio -> text		970868	0					
ANR	970984	Identifier	bio		970868	0					
ANR	970985	Identifier	text		970868	1					
ANR	970986	IdentifierDeclStatement	size_t slen = Z_STRLEN ( bio -> text ) ;	171:1:5068:5102	970868	10	True				
ANR	970987	IdentifierDecl	slen = Z_STRLEN ( bio -> text )		970868	0					
ANR	970988	IdentifierDeclType	size_t		970868	0					
ANR	970989	Identifier	slen		970868	1					
ANR	970990	AssignmentExpression	slen = Z_STRLEN ( bio -> text )		970868	2		=			
ANR	970991	Identifier	slen		970868	0					
ANR	970992	CallExpression	Z_STRLEN ( bio -> text )		970868	1					
ANR	970993	Callee	Z_STRLEN		970868	0					
ANR	970994	Identifier	Z_STRLEN		970868	0					
ANR	970995	ArgumentList	bio -> text		970868	1					
ANR	970996	Argument	bio -> text		970868	0					
ANR	970997	PtrMemberAccess	bio -> text		970868	0					
ANR	970998	Identifier	bio		970868	0					
ANR	970999	Identifier	text		970868	1					
ANR	971000	IdentifierDeclStatement	zend_string * res ;	172:1:5105:5121	970868	11	True				
ANR	971001	IdentifierDecl	* res		970868	0					
ANR	971002	IdentifierDeclType	zend_string *		970868	0					
ANR	971003	Identifier	res		970868	1					
ANR	971004	IfStatement	if ( next == BreakIterator :: DONE )		970868	12					
ANR	971005	Condition	next == BreakIterator :: DONE	174:5:5129:5155	970868	0	True				
ANR	971006	EqualityExpression	next == BreakIterator :: DONE		970868	0		==			
ANR	971007	Identifier	next		970868	0					
ANR	971008	Identifier	BreakIterator :: DONE		970868	1					
ANR	971009	CompoundStatement		31:34:739:739	970868	1					
ANR	971010	ExpressionStatement	next = ( int32_t ) slen	175:2:5162:5182	970868	0	True				
ANR	971011	AssignmentExpression	next = ( int32_t ) slen		970868	0		=			
ANR	971012	Identifier	next		970868	0					
ANR	971013	CastExpression	( int32_t ) slen		970868	1					
ANR	971014	CastTarget	int32_t		970868	0					
ANR	971015	Identifier	slen		970868	1					
ANR	971016	ExpressionStatement	assert ( next <= slen && next >= cur )	177:1:5188:5223	970868	13	True				
ANR	971017	CallExpression	assert ( next <= slen && next >= cur )		970868	0					
ANR	971018	Callee	assert		970868	0					
ANR	971019	Identifier	assert		970868	0					
ANR	971020	ArgumentList	next <= slen && next >= cur		970868	1					
ANR	971021	Argument	next <= slen && next >= cur		970868	0					
ANR	971022	AndExpression	next <= slen && next >= cur		970868	0		&&			
ANR	971023	RelationalExpression	next <= slen		970868	0		<=			
ANR	971024	Identifier	next		970868	0					
ANR	971025	Identifier	slen		970868	1					
ANR	971026	RelationalExpression	next >= cur		970868	1		>=			
ANR	971027	Identifier	next		970868	0					
ANR	971028	Identifier	cur		970868	1					
ANR	971029	ExpressionStatement	"res = zend_string_alloc ( next - cur , 0 )"	178:1:5226:5264	970868	14	True				
ANR	971030	AssignmentExpression	"res = zend_string_alloc ( next - cur , 0 )"		970868	0		=			
ANR	971031	Identifier	res		970868	0					
ANR	971032	CallExpression	"zend_string_alloc ( next - cur , 0 )"		970868	1					
ANR	971033	Callee	zend_string_alloc		970868	0					
ANR	971034	Identifier	zend_string_alloc		970868	0					
ANR	971035	ArgumentList	next - cur		970868	1					
ANR	971036	Argument	next - cur		970868	0					
ANR	971037	AdditiveExpression	next - cur		970868	0		-			
ANR	971038	Identifier	next		970868	0					
ANR	971039	Identifier	cur		970868	1					
ANR	971040	Argument	0		970868	1					
ANR	971041	PrimaryExpression	0		970868	0					
ANR	971042	ExpressionStatement	"memcpy ( ZSTR_VAL ( res ) , & s [ cur ] , ZSTR_LEN ( res ) )"	180:1:5268:5313	970868	15	True				
ANR	971043	CallExpression	"memcpy ( ZSTR_VAL ( res ) , & s [ cur ] , ZSTR_LEN ( res ) )"		970868	0					
ANR	971044	Callee	memcpy		970868	0					
ANR	971045	Identifier	memcpy		970868	0					
ANR	971046	ArgumentList	ZSTR_VAL ( res )		970868	1					
ANR	971047	Argument	ZSTR_VAL ( res )		970868	0					
ANR	971048	CallExpression	ZSTR_VAL ( res )		970868	0					
ANR	971049	Callee	ZSTR_VAL		970868	0					
ANR	971050	Identifier	ZSTR_VAL		970868	0					
ANR	971051	ArgumentList	res		970868	1					
ANR	971052	Argument	res		970868	0					
ANR	971053	Identifier	res		970868	0					
ANR	971054	Argument	& s [ cur ]		970868	1					
ANR	971055	UnaryOperationExpression	& s [ cur ]		970868	0					
ANR	971056	UnaryOperator	&		970868	0					
ANR	971057	ArrayIndexing	s [ cur ]		970868	1					
ANR	971058	Identifier	s		970868	0					
ANR	971059	Identifier	cur		970868	1					
ANR	971060	Argument	ZSTR_LEN ( res )		970868	2					
ANR	971061	CallExpression	ZSTR_LEN ( res )		970868	0					
ANR	971062	Callee	ZSTR_LEN		970868	0					
ANR	971063	Identifier	ZSTR_LEN		970868	0					
ANR	971064	ArgumentList	res		970868	1					
ANR	971065	Argument	res		970868	0					
ANR	971066	Identifier	res		970868	0					
ANR	971067	ExpressionStatement	ZSTR_VAL ( res ) [ ZSTR_LEN ( res ) ] = '\\0'	181:1:5316:5351	970868	16	True				
ANR	971068	AssignmentExpression	ZSTR_VAL ( res ) [ ZSTR_LEN ( res ) ] = '\\0'		970868	0		=			
ANR	971069	ArrayIndexing	ZSTR_VAL ( res ) [ ZSTR_LEN ( res ) ]		970868	0					
ANR	971070	CallExpression	ZSTR_VAL ( res )		970868	0					
ANR	971071	Callee	ZSTR_VAL		970868	0					
ANR	971072	Identifier	ZSTR_VAL		970868	0					
ANR	971073	ArgumentList	res		970868	1					
ANR	971074	Argument	res		970868	0					
ANR	971075	Identifier	res		970868	0					
ANR	971076	CallExpression	ZSTR_LEN ( res )		970868	1					
ANR	971077	Callee	ZSTR_LEN		970868	0					
ANR	971078	Identifier	ZSTR_LEN		970868	0					
ANR	971079	ArgumentList	res		970868	1					
ANR	971080	Argument	res		970868	0					
ANR	971081	Identifier	res		970868	0					
ANR	971082	PrimaryExpression	'\\0'		970868	1					
ANR	971083	ExpressionStatement	"ZVAL_STR ( & zoi_bit -> zoi_cur . current , res )"	183:1:5355:5395	970868	17	True				
ANR	971084	CallExpression	"ZVAL_STR ( & zoi_bit -> zoi_cur . current , res )"		970868	0					
ANR	971085	Callee	ZVAL_STR		970868	0					
ANR	971086	Identifier	ZVAL_STR		970868	0					
ANR	971087	ArgumentList	& zoi_bit -> zoi_cur . current		970868	1					
ANR	971088	Argument	& zoi_bit -> zoi_cur . current		970868	0					
ANR	971089	UnaryOperationExpression	& zoi_bit -> zoi_cur . current		970868	0					
ANR	971090	UnaryOperator	&		970868	0					
ANR	971091	MemberAccess	zoi_bit -> zoi_cur . current		970868	1					
ANR	971092	PtrMemberAccess	zoi_bit -> zoi_cur		970868	0					
ANR	971093	Identifier	zoi_bit		970868	0					
ANR	971094	Identifier	zoi_cur		970868	1					
ANR	971095	Identifier	current		970868	1					
ANR	971096	Argument	res		970868	1					
ANR	971097	Identifier	res		970868	0					
ANR	971098	ReturnType	static void		970868	1					
ANR	971099	Identifier	_breakiterator_parts_move_forward		970868	2					
ANR	971100	ParameterList	zend_object_iterator * iter		970868	3					
ANR	971101	Parameter	zend_object_iterator * iter	143:46:4390:4415	970868	0	True				
ANR	971102	ParameterType	zend_object_iterator *		970868	0					
ANR	971103	Identifier	iter		970868	1					
ANR	971104	CFGEntryNode	ENTRY		970868		True				
ANR	971105	CFGExitNode	EXIT		970868		True				
ANR	971106	Symbol	next		970868						
ANR	971107	Symbol	cur		970868						
ANR	971108	Symbol	PARTS_ITERATOR_KEY_LEFT		970868						
ANR	971109	Symbol	bio		970868						
ANR	971110	Symbol	bio -> biter -> current		970868						
ANR	971111	Symbol	bio -> biter -> next		970868						
ANR	971112	Symbol	Z_STRLEN		970868						
ANR	971113	Symbol	* bio		970868						
ANR	971114	Symbol	iter -> index		970868						
ANR	971115	Symbol	& zoi_bit -> zoi_cur . current		970868						
ANR	971116	Symbol	* iter		970868						
ANR	971117	Symbol	* ZSTR_LEN		970868						
ANR	971118	Symbol	Z_STRVAL		970868						
ANR	971119	Symbol	* bio -> biter		970868						
ANR	971120	Symbol	* zoi_bit		970868						
ANR	971121	Symbol	* * bio		970868						
ANR	971122	Symbol	bio -> biter		970868						
ANR	971123	Symbol	zoi_bit -> key_type		970868						
ANR	971124	Symbol	bio -> text		970868						
ANR	971125	Symbol	* ZSTR_VAL		970868						
ANR	971126	Symbol	res		970868						
ANR	971127	Symbol	zend_string_alloc		970868						
ANR	971128	Symbol	PARTS_ITERATOR_KEY_RIGHT		970868						
ANR	971129	Symbol	BreakIterator :: DONE		970868						
ANR	971130	Symbol	zoi_bit -> bio		970868						
ANR	971131	Symbol	iter		970868						
ANR	971132	Symbol	ZSTR_VAL		970868						
ANR	971133	Symbol	& zoi_bit -> zoi_cur		970868						
ANR	971134	Symbol	s		970868						
ANR	971135	Symbol	zoi_bit		970868						
ANR	971136	Symbol	iter -> funcs		970868						
ANR	971137	Symbol	slen		970868						
ANR	971138	Symbol	ZSTR_LEN		970868						
ANR	971139	Symbol	zoi_bit -> zoi_cur		970868						
ANR	971140	Function	_breakiterator_parts_rewind	186:0:5400:5723							
ANR	971141	FunctionDef	_breakiterator_parts_rewind (zend_object_iterator * iter)		971140	0					
ANR	971142	CompoundStatement		187:0:5468:5723	971140	0					
ANR	971143	IdentifierDeclStatement	zoi_break_iter_parts * zoi_bit = ( zoi_break_iter_parts * ) iter ;	188:1:5471:5530	971140	0	True				
ANR	971144	IdentifierDecl	* zoi_bit = ( zoi_break_iter_parts * ) iter		971140	0					
ANR	971145	IdentifierDeclType	zoi_break_iter_parts *		971140	0					
ANR	971146	Identifier	zoi_bit		971140	1					
ANR	971147	AssignmentExpression	* zoi_bit = ( zoi_break_iter_parts * ) iter		971140	2		=			
ANR	971148	Identifier	zoi_bit		971140	0					
ANR	971149	CastExpression	( zoi_break_iter_parts * ) iter		971140	1					
ANR	971150	CastTarget	zoi_break_iter_parts *		971140	0					
ANR	971151	Identifier	iter		971140	1					
ANR	971152	IdentifierDeclStatement	BreakIterator_object * bio = zoi_bit -> bio ;	189:1:5533:5573	971140	1	True				
ANR	971153	IdentifierDecl	* bio = zoi_bit -> bio		971140	0					
ANR	971154	IdentifierDeclType	BreakIterator_object *		971140	0					
ANR	971155	Identifier	bio		971140	1					
ANR	971156	AssignmentExpression	* bio = zoi_bit -> bio		971140	2		=			
ANR	971157	Identifier	bio		971140	0					
ANR	971158	PtrMemberAccess	zoi_bit -> bio		971140	1					
ANR	971159	Identifier	zoi_bit		971140	0					
ANR	971160	Identifier	bio		971140	1					
ANR	971161	IfStatement	if ( ! Z_ISUNDEF ( zoi_bit -> zoi_cur . current ) )		971140	2					
ANR	971162	Condition	! Z_ISUNDEF ( zoi_bit -> zoi_cur . current )	191:5:5581:5616	971140	0	True				
ANR	971163	UnaryOperationExpression	! Z_ISUNDEF ( zoi_bit -> zoi_cur . current )		971140	0					
ANR	971164	UnaryOperator	!		971140	0					
ANR	971165	CallExpression	Z_ISUNDEF ( zoi_bit -> zoi_cur . current )		971140	1					
ANR	971166	Callee	Z_ISUNDEF		971140	0					
ANR	971167	Identifier	Z_ISUNDEF		971140	0					
ANR	971168	ArgumentList	zoi_bit -> zoi_cur . current		971140	1					
ANR	971169	Argument	zoi_bit -> zoi_cur . current		971140	0					
ANR	971170	MemberAccess	zoi_bit -> zoi_cur . current		971140	0					
ANR	971171	PtrMemberAccess	zoi_bit -> zoi_cur		971140	0					
ANR	971172	Identifier	zoi_bit		971140	0					
ANR	971173	Identifier	zoi_cur		971140	1					
ANR	971174	Identifier	current		971140	1					
ANR	971175	CompoundStatement		5:43:150:150	971140	1					
ANR	971176	ExpressionStatement	iter -> funcs -> invalidate_current ( iter )	192:2:5623:5660	971140	0	True				
ANR	971177	CallExpression	iter -> funcs -> invalidate_current ( iter )		971140	0					
ANR	971178	Callee	iter -> funcs -> invalidate_current		971140	0					
ANR	971179	PtrMemberAccess	iter -> funcs -> invalidate_current		971140	0					
ANR	971180	PtrMemberAccess	iter -> funcs		971140	0					
ANR	971181	Identifier	iter		971140	0					
ANR	971182	Identifier	funcs		971140	1					
ANR	971183	Identifier	invalidate_current		971140	1					
ANR	971184	ArgumentList	iter		971140	1					
ANR	971185	Argument	iter		971140	0					
ANR	971186	Identifier	iter		971140	0					
ANR	971187	ExpressionStatement	bio -> biter -> first ( )	195:1:5667:5686	971140	3	True				
ANR	971188	CallExpression	bio -> biter -> first ( )		971140	0					
ANR	971189	Callee	bio -> biter -> first		971140	0					
ANR	971190	PtrMemberAccess	bio -> biter -> first		971140	0					
ANR	971191	PtrMemberAccess	bio -> biter		971140	0					
ANR	971192	Identifier	bio		971140	0					
ANR	971193	Identifier	biter		971140	1					
ANR	971194	Identifier	first		971140	1					
ANR	971195	ArgumentList			971140	1					
ANR	971196	ExpressionStatement	iter -> funcs -> move_forward ( iter )	197:1:5690:5721	971140	4	True				
ANR	971197	CallExpression	iter -> funcs -> move_forward ( iter )		971140	0					
ANR	971198	Callee	iter -> funcs -> move_forward		971140	0					
ANR	971199	PtrMemberAccess	iter -> funcs -> move_forward		971140	0					
ANR	971200	PtrMemberAccess	iter -> funcs		971140	0					
ANR	971201	Identifier	iter		971140	0					
ANR	971202	Identifier	funcs		971140	1					
ANR	971203	Identifier	move_forward		971140	1					
ANR	971204	ArgumentList	iter		971140	1					
ANR	971205	Argument	iter		971140	0					
ANR	971206	Identifier	iter		971140	0					
ANR	971207	ReturnType	static void		971140	1					
ANR	971208	Identifier	_breakiterator_parts_rewind		971140	2					
ANR	971209	ParameterList	zend_object_iterator * iter		971140	3					
ANR	971210	Parameter	zend_object_iterator * iter	186:40:5440:5465	971140	0	True				
ANR	971211	ParameterType	zend_object_iterator *		971140	0					
ANR	971212	Identifier	iter		971140	1					
ANR	971213	CFGEntryNode	ENTRY		971140		True				
ANR	971214	CFGExitNode	EXIT		971140		True				
ANR	971215	Symbol	* iter		971140						
ANR	971216	Symbol	zoi_bit		971140						
ANR	971217	Symbol	Z_ISUNDEF		971140						
ANR	971218	Symbol	zoi_bit -> zoi_cur . current		971140						
ANR	971219	Symbol	iter -> funcs		971140						
ANR	971220	Symbol	zoi_bit -> bio		971140						
ANR	971221	Symbol	iter		971140						
ANR	971222	Symbol	bio		971140						
ANR	971223	Symbol	* zoi_bit		971140						
ANR	971224	Symbol	zoi_bit -> zoi_cur		971140						
ANR	971225	Symbol	* bio		971140						
ANR	971226	Symbol	bio -> biter		971140						
ANR	971227	DeclStmt									
ANR	971228	Decl							zend_object_iterator_funcs	zend_object_iterator_funcs	breakiterator_parts_it_funcs
ANR	971229	Function	IntlIterator_from_BreakIterator_parts	210:0:6024:6948							
ANR	971230	FunctionDef	"IntlIterator_from_BreakIterator_parts (zval * break_iter_zv , zval * object , parts_iter_key_type key_type)"		971229	0					
ANR	971231	CompoundStatement		213:0:6158:6948	971229	0					
ANR	971232	IdentifierDeclStatement	IntlIterator_object * ii ;	214:1:6161:6184	971229	0	True				
ANR	971233	IdentifierDecl	* ii		971229	0					
ANR	971234	IdentifierDeclType	IntlIterator_object *		971229	0					
ANR	971235	Identifier	ii		971229	1					
ANR	971236	ExpressionStatement	"object_init_ex ( object , IntlPartsIterator_ce_ptr )"	216:1:6188:6236	971229	1	True				
ANR	971237	CallExpression	"object_init_ex ( object , IntlPartsIterator_ce_ptr )"		971229	0					
ANR	971238	Callee	object_init_ex		971229	0					
ANR	971239	Identifier	object_init_ex		971229	0					
ANR	971240	ArgumentList	object		971229	1					
ANR	971241	Argument	object		971229	0					
ANR	971242	Identifier	object		971229	0					
ANR	971243	Argument	IntlPartsIterator_ce_ptr		971229	1					
ANR	971244	Identifier	IntlPartsIterator_ce_ptr		971229	0					
ANR	971245	ExpressionStatement	ii = Z_INTL_ITERATOR_P ( object )	217:1:6239:6269	971229	2	True				
ANR	971246	AssignmentExpression	ii = Z_INTL_ITERATOR_P ( object )		971229	0		=			
ANR	971247	Identifier	ii		971229	0					
ANR	971248	CallExpression	Z_INTL_ITERATOR_P ( object )		971229	1					
ANR	971249	Callee	Z_INTL_ITERATOR_P		971229	0					
ANR	971250	Identifier	Z_INTL_ITERATOR_P		971229	0					
ANR	971251	ArgumentList	object		971229	1					
ANR	971252	Argument	object		971229	0					
ANR	971253	Identifier	object		971229	0					
ANR	971254	ExpressionStatement	ii -> iterator = ( zend_object_iterator * ) emalloc ( sizeof ( zoi_break_iter_parts ) )	219:1:6273:6348	971229	3	True				
ANR	971255	AssignmentExpression	ii -> iterator = ( zend_object_iterator * ) emalloc ( sizeof ( zoi_break_iter_parts ) )		971229	0		=			
ANR	971256	PtrMemberAccess	ii -> iterator		971229	0					
ANR	971257	Identifier	ii		971229	0					
ANR	971258	Identifier	iterator		971229	1					
ANR	971259	CastExpression	( zend_object_iterator * ) emalloc ( sizeof ( zoi_break_iter_parts ) )		971229	1					
ANR	971260	CastTarget	zend_object_iterator *		971229	0					
ANR	971261	CallExpression	emalloc ( sizeof ( zoi_break_iter_parts ) )		971229	1					
ANR	971262	Callee	emalloc		971229	0					
ANR	971263	Identifier	emalloc		971229	0					
ANR	971264	ArgumentList	sizeof ( zoi_break_iter_parts )		971229	1					
ANR	971265	Argument	sizeof ( zoi_break_iter_parts )		971229	0					
ANR	971266	SizeofExpression	sizeof ( zoi_break_iter_parts )		971229	0					
ANR	971267	Sizeof	sizeof		971229	0					
ANR	971268	SizeofOperand	zoi_break_iter_parts		971229	1					
ANR	971269	ExpressionStatement	zend_iterator_init ( ii -> iterator )	220:1:6351:6383	971229	4	True				
ANR	971270	CallExpression	zend_iterator_init ( ii -> iterator )		971229	0					
ANR	971271	Callee	zend_iterator_init		971229	0					
ANR	971272	Identifier	zend_iterator_init		971229	0					
ANR	971273	ArgumentList	ii -> iterator		971229	1					
ANR	971274	Argument	ii -> iterator		971229	0					
ANR	971275	PtrMemberAccess	ii -> iterator		971229	0					
ANR	971276	Identifier	ii		971229	0					
ANR	971277	Identifier	iterator		971229	1					
ANR	971278	ExpressionStatement	"ZVAL_COPY ( & ii -> iterator -> data , break_iter_zv )"	222:1:6387:6432	971229	5	True				
ANR	971279	CallExpression	"ZVAL_COPY ( & ii -> iterator -> data , break_iter_zv )"		971229	0					
ANR	971280	Callee	ZVAL_COPY		971229	0					
ANR	971281	Identifier	ZVAL_COPY		971229	0					
ANR	971282	ArgumentList	& ii -> iterator -> data		971229	1					
ANR	971283	Argument	& ii -> iterator -> data		971229	0					
ANR	971284	UnaryOperationExpression	& ii -> iterator -> data		971229	0					
ANR	971285	UnaryOperator	&		971229	0					
ANR	971286	PtrMemberAccess	ii -> iterator -> data		971229	1					
ANR	971287	PtrMemberAccess	ii -> iterator		971229	0					
ANR	971288	Identifier	ii		971229	0					
ANR	971289	Identifier	iterator		971229	1					
ANR	971290	Identifier	data		971229	1					
ANR	971291	Argument	break_iter_zv		971229	1					
ANR	971292	Identifier	break_iter_zv		971229	0					
ANR	971293	ExpressionStatement	ii -> iterator -> funcs = & breakiterator_parts_it_funcs	223:1:6435:6486	971229	6	True				
ANR	971294	AssignmentExpression	ii -> iterator -> funcs = & breakiterator_parts_it_funcs		971229	0		=			
ANR	971295	PtrMemberAccess	ii -> iterator -> funcs		971229	0					
ANR	971296	PtrMemberAccess	ii -> iterator		971229	0					
ANR	971297	Identifier	ii		971229	0					
ANR	971298	Identifier	iterator		971229	1					
ANR	971299	Identifier	funcs		971229	1					
ANR	971300	UnaryOperationExpression	& breakiterator_parts_it_funcs		971229	1					
ANR	971301	UnaryOperator	&		971229	0					
ANR	971302	Identifier	breakiterator_parts_it_funcs		971229	1					
ANR	971303	ExpressionStatement	ii -> iterator -> index = 0	224:1:6489:6512	971229	7	True				
ANR	971304	AssignmentExpression	ii -> iterator -> index = 0		971229	0		=			
ANR	971305	PtrMemberAccess	ii -> iterator -> index		971229	0					
ANR	971306	PtrMemberAccess	ii -> iterator		971229	0					
ANR	971307	Identifier	ii		971229	0					
ANR	971308	Identifier	iterator		971229	1					
ANR	971309	Identifier	index		971229	1					
ANR	971310	PrimaryExpression	0		971229	1					
ANR	971311	ExpressionStatement	( ( zoi_with_current * ) ii -> iterator ) -> destroy_it = _breakiterator_parts_destroy_it	226:1:6516:6595	971229	8	True				
ANR	971312	AssignmentExpression	( ( zoi_with_current * ) ii -> iterator ) -> destroy_it = _breakiterator_parts_destroy_it		971229	0		=			
ANR	971313	PtrMemberAccess	( ( zoi_with_current * ) ii -> iterator ) -> destroy_it		971229	0					
ANR	971314	CastExpression	( zoi_with_current * ) ii -> iterator		971229	0					
ANR	971315	CastTarget	zoi_with_current *		971229	0					
ANR	971316	PtrMemberAccess	ii -> iterator		971229	1					
ANR	971317	Identifier	ii		971229	0					
ANR	971318	Identifier	iterator		971229	1					
ANR	971319	Identifier	destroy_it		971229	1					
ANR	971320	Identifier	_breakiterator_parts_destroy_it		971229	1					
ANR	971321	ExpressionStatement	"ZVAL_COPY_VALUE ( & ( ( zoi_with_current * ) ii -> iterator ) -> wrapping_obj , object )"	227:1:6598:6671	971229	9	True				
ANR	971322	CallExpression	"ZVAL_COPY_VALUE ( & ( ( zoi_with_current * ) ii -> iterator ) -> wrapping_obj , object )"		971229	0					
ANR	971323	Callee	ZVAL_COPY_VALUE		971229	0					
ANR	971324	Identifier	ZVAL_COPY_VALUE		971229	0					
ANR	971325	ArgumentList	& ( ( zoi_with_current * ) ii -> iterator ) -> wrapping_obj		971229	1					
ANR	971326	Argument	& ( ( zoi_with_current * ) ii -> iterator ) -> wrapping_obj		971229	0					
ANR	971327	UnaryOperationExpression	& ( ( zoi_with_current * ) ii -> iterator ) -> wrapping_obj		971229	0					
ANR	971328	UnaryOperator	&		971229	0					
ANR	971329	PtrMemberAccess	( ( zoi_with_current * ) ii -> iterator ) -> wrapping_obj		971229	1					
ANR	971330	CastExpression	( zoi_with_current * ) ii -> iterator		971229	0					
ANR	971331	CastTarget	zoi_with_current *		971229	0					
ANR	971332	PtrMemberAccess	ii -> iterator		971229	1					
ANR	971333	Identifier	ii		971229	0					
ANR	971334	Identifier	iterator		971229	1					
ANR	971335	Identifier	wrapping_obj		971229	1					
ANR	971336	Argument	object		971229	1					
ANR	971337	Identifier	object		971229	0					
ANR	971338	ExpressionStatement	ZVAL_UNDEF ( & ( ( zoi_with_current * ) ii -> iterator ) -> current )	228:1:6674:6729	971229	10	True				
ANR	971339	CallExpression	ZVAL_UNDEF ( & ( ( zoi_with_current * ) ii -> iterator ) -> current )		971229	0					
ANR	971340	Callee	ZVAL_UNDEF		971229	0					
ANR	971341	Identifier	ZVAL_UNDEF		971229	0					
ANR	971342	ArgumentList	& ( ( zoi_with_current * ) ii -> iterator ) -> current		971229	1					
ANR	971343	Argument	& ( ( zoi_with_current * ) ii -> iterator ) -> current		971229	0					
ANR	971344	UnaryOperationExpression	& ( ( zoi_with_current * ) ii -> iterator ) -> current		971229	0					
ANR	971345	UnaryOperator	&		971229	0					
ANR	971346	PtrMemberAccess	( ( zoi_with_current * ) ii -> iterator ) -> current		971229	1					
ANR	971347	CastExpression	( zoi_with_current * ) ii -> iterator		971229	0					
ANR	971348	CastTarget	zoi_with_current *		971229	0					
ANR	971349	PtrMemberAccess	ii -> iterator		971229	1					
ANR	971350	Identifier	ii		971229	0					
ANR	971351	Identifier	iterator		971229	1					
ANR	971352	Identifier	current		971229	1					
ANR	971353	ExpressionStatement	( ( zoi_break_iter_parts * ) ii -> iterator ) -> bio = Z_INTL_BREAKITERATOR_P ( break_iter_zv )	230:1:6733:6815	971229	11	True				
ANR	971354	AssignmentExpression	( ( zoi_break_iter_parts * ) ii -> iterator ) -> bio = Z_INTL_BREAKITERATOR_P ( break_iter_zv )		971229	0		=			
ANR	971355	PtrMemberAccess	( ( zoi_break_iter_parts * ) ii -> iterator ) -> bio		971229	0					
ANR	971356	CastExpression	( zoi_break_iter_parts * ) ii -> iterator		971229	0					
ANR	971357	CastTarget	zoi_break_iter_parts *		971229	0					
ANR	971358	PtrMemberAccess	ii -> iterator		971229	1					
ANR	971359	Identifier	ii		971229	0					
ANR	971360	Identifier	iterator		971229	1					
ANR	971361	Identifier	bio		971229	1					
ANR	971362	CallExpression	Z_INTL_BREAKITERATOR_P ( break_iter_zv )		971229	1					
ANR	971363	Callee	Z_INTL_BREAKITERATOR_P		971229	0					
ANR	971364	Identifier	Z_INTL_BREAKITERATOR_P		971229	0					
ANR	971365	ArgumentList	break_iter_zv		971229	1					
ANR	971366	Argument	break_iter_zv		971229	0					
ANR	971367	Identifier	break_iter_zv		971229	0					
ANR	971368	ExpressionStatement	assert ( ( ( zoi_break_iter_parts * ) ii -> iterator ) -> bio -> biter != NULL )	232:1:6819:6884	971229	12	True				
ANR	971369	CallExpression	assert ( ( ( zoi_break_iter_parts * ) ii -> iterator ) -> bio -> biter != NULL )		971229	0					
ANR	971370	Callee	assert		971229	0					
ANR	971371	Identifier	assert		971229	0					
ANR	971372	ArgumentList	( ( zoi_break_iter_parts * ) ii -> iterator ) -> bio -> biter != NULL		971229	1					
ANR	971373	Argument	( ( zoi_break_iter_parts * ) ii -> iterator ) -> bio -> biter != NULL		971229	0					
ANR	971374	EqualityExpression	( ( zoi_break_iter_parts * ) ii -> iterator ) -> bio -> biter != NULL		971229	0		!=			
ANR	971375	PtrMemberAccess	( ( zoi_break_iter_parts * ) ii -> iterator ) -> bio -> biter		971229	0					
ANR	971376	PtrMemberAccess	( ( zoi_break_iter_parts * ) ii -> iterator ) -> bio		971229	0					
ANR	971377	CastExpression	( zoi_break_iter_parts * ) ii -> iterator		971229	0					
ANR	971378	CastTarget	zoi_break_iter_parts *		971229	0					
ANR	971379	PtrMemberAccess	ii -> iterator		971229	1					
ANR	971380	Identifier	ii		971229	0					
ANR	971381	Identifier	iterator		971229	1					
ANR	971382	Identifier	bio		971229	1					
ANR	971383	Identifier	biter		971229	1					
ANR	971384	Identifier	NULL		971229	1					
ANR	971385	ExpressionStatement	( ( zoi_break_iter_parts * ) ii -> iterator ) -> key_type = key_type	234:1:6888:6946	971229	13	True				
ANR	971386	AssignmentExpression	( ( zoi_break_iter_parts * ) ii -> iterator ) -> key_type = key_type		971229	0		=			
ANR	971387	PtrMemberAccess	( ( zoi_break_iter_parts * ) ii -> iterator ) -> key_type		971229	0					
ANR	971388	CastExpression	( zoi_break_iter_parts * ) ii -> iterator		971229	0					
ANR	971389	CastTarget	zoi_break_iter_parts *		971229	0					
ANR	971390	PtrMemberAccess	ii -> iterator		971229	1					
ANR	971391	Identifier	ii		971229	0					
ANR	971392	Identifier	iterator		971229	1					
ANR	971393	Identifier	key_type		971229	1					
ANR	971394	Identifier	key_type		971229	1					
ANR	971395	ReturnType	void		971229	1					
ANR	971396	Identifier	IntlIterator_from_BreakIterator_parts		971229	2					
ANR	971397	ParameterList	"zval * break_iter_zv , zval * object , parts_iter_key_type key_type"		971229	3					
ANR	971398	Parameter	zval * break_iter_zv	210:43:6067:6085	971229	0	True				
ANR	971399	ParameterType	zval *		971229	0					
ANR	971400	Identifier	break_iter_zv		971229	1					
ANR	971401	Parameter	zval * object	211:13:6101:6112	971229	1	True				
ANR	971402	ParameterType	zval *		971229	0					
ANR	971403	Identifier	object		971229	1					
ANR	971404	Parameter	parts_iter_key_type key_type	212:13:6128:6155	971229	2	True				
ANR	971405	ParameterType	parts_iter_key_type		971229	0					
ANR	971406	Identifier	key_type		971229	1					
ANR	971407	CFGEntryNode	ENTRY		971229		True				
ANR	971408	CFGExitNode	EXIT		971229		True				
ANR	971409	Symbol	& breakiterator_parts_it_funcs		971229						
ANR	971410	Symbol	& ( ( zoi_with_current * ) ii -> iterator ) -> wrapping_obj		971229						
ANR	971411	Symbol	key_type		971229						
ANR	971412	Symbol	* ii		971229						
ANR	971413	Symbol	* ( ( zoi_break_iter_parts * ) ii -> iterator ) -> bio		971229						
ANR	971414	Symbol	IntlPartsIterator_ce_ptr		971229						
ANR	971415	Symbol	& ( ( zoi_with_current * ) ii -> iterator ) -> current		971229						
ANR	971416	Symbol	ii -> iterator		971229						
ANR	971417	Symbol	* * ii		971229						
ANR	971418	Symbol	Z_INTL_BREAKITERATOR_P		971229						
ANR	971419	Symbol	emalloc		971229						
ANR	971420	Symbol	* * ii -> iterator		971229						
ANR	971421	Symbol	ii		971229						
ANR	971422	Symbol	Z_INTL_ITERATOR_P		971229						
ANR	971423	Symbol	break_iter_zv		971229						
ANR	971424	Symbol	( ( zoi_with_current * ) ii -> iterator ) -> destroy_it		971229						
ANR	971425	Symbol	NULL		971229						
ANR	971426	Symbol	( ( zoi_break_iter_parts * ) ii -> iterator ) -> bio		971229						
ANR	971427	Symbol	& ii -> iterator -> data		971229						
ANR	971428	Symbol	_breakiterator_parts_destroy_it		971229						
ANR	971429	Symbol	ii -> iterator -> funcs		971229						
ANR	971430	Symbol	* * * ii		971229						
ANR	971431	Symbol	( ( zoi_break_iter_parts * ) ii -> iterator ) -> bio -> biter		971229						
ANR	971432	Symbol	( ( zoi_break_iter_parts * ) ii -> iterator ) -> key_type		971229						
ANR	971433	Symbol	object		971229						
ANR	971434	Symbol	* ii -> iterator		971229						
ANR	971435	Symbol	ii -> iterator -> index		971229						
ANR	971436	Function	IntlPartsIterator_object_create	237:0:6951:7157							
ANR	971437	FunctionDef	IntlPartsIterator_object_create (zend_class_entry * ce)		971436	0					
ANR	971438	CompoundStatement		238:0:7026:7157	971436	0					
ANR	971439	IdentifierDeclStatement	zend_object * retval = IntlIterator_ce_ptr -> create_object ( ce ) ;	239:1:7029:7089	971436	0	True				
ANR	971440	IdentifierDecl	* retval = IntlIterator_ce_ptr -> create_object ( ce )		971436	0					
ANR	971441	IdentifierDeclType	zend_object *		971436	0					
ANR	971442	Identifier	retval		971436	1					
ANR	971443	AssignmentExpression	* retval = IntlIterator_ce_ptr -> create_object ( ce )		971436	2		=			
ANR	971444	Identifier	retval		971436	0					
ANR	971445	CallExpression	IntlIterator_ce_ptr -> create_object ( ce )		971436	1					
ANR	971446	Callee	IntlIterator_ce_ptr -> create_object		971436	0					
ANR	971447	PtrMemberAccess	IntlIterator_ce_ptr -> create_object		971436	0					
ANR	971448	Identifier	IntlIterator_ce_ptr		971436	0					
ANR	971449	Identifier	create_object		971436	1					
ANR	971450	ArgumentList	ce		971436	1					
ANR	971451	Argument	ce		971436	0					
ANR	971452	Identifier	ce		971436	0					
ANR	971453	ExpressionStatement	retval -> handlers = & IntlPartsIterator_handlers	240:1:7092:7138	971436	1	True				
ANR	971454	AssignmentExpression	retval -> handlers = & IntlPartsIterator_handlers		971436	0		=			
ANR	971455	PtrMemberAccess	retval -> handlers		971436	0					
ANR	971456	Identifier	retval		971436	0					
ANR	971457	Identifier	handlers		971436	1					
ANR	971458	UnaryOperationExpression	& IntlPartsIterator_handlers		971436	1					
ANR	971459	UnaryOperator	&		971436	0					
ANR	971460	Identifier	IntlPartsIterator_handlers		971436	1					
ANR	971461	ReturnStatement	return retval ;	242:1:7142:7155	971436	2	True				
ANR	971462	Identifier	retval		971436	0					
ANR	971463	ReturnType	U_CFUNC zend_object *		971436	1					
ANR	971464	Identifier	IntlPartsIterator_object_create		971436	2					
ANR	971465	ParameterList	zend_class_entry * ce		971436	3					
ANR	971466	Parameter	zend_class_entry * ce	237:53:7004:7023	971436	0	True				
ANR	971467	ParameterType	zend_class_entry *		971436	0					
ANR	971468	Identifier	ce		971436	1					
ANR	971469	CFGEntryNode	ENTRY		971436		True				
ANR	971470	CFGExitNode	EXIT		971436		True				
ANR	971471	Symbol	* retval		971436						
ANR	971472	Symbol	ce		971436						
ANR	971473	Symbol	IntlIterator_ce_ptr -> create_object		971436						
ANR	971474	Symbol	IntlIterator_ce_ptr		971436						
ANR	971475	Symbol	& IntlPartsIterator_handlers		971436						
ANR	971476	Symbol	* IntlIterator_ce_ptr		971436						
ANR	971477	Symbol	retval -> handlers		971436						
ANR	971478	Symbol	retval		971436						
ANR	971479	Function	IntlPartsIterator_get_method	245:0:7160:8189							
ANR	971480	FunctionDef	"IntlPartsIterator_get_method (zend_object * * object_ptr , zend_string * method , const zval * key)"		971479	0					
ANR	971481	CompoundStatement		246:0:7276:8189	971479	0					
ANR	971482	IdentifierDeclStatement	zend_function * ret ;	247:1:7279:7297	971479	0	True				
ANR	971483	IdentifierDecl	* ret		971479	0					
ANR	971484	IdentifierDeclType	zend_function *		971479	0					
ANR	971485	Identifier	ret		971479	1					
ANR	971486	IdentifierDeclStatement	zend_string * lc_method_name ;	248:1:7300:7327	971479	1	True				
ANR	971487	IdentifierDecl	* lc_method_name		971479	0					
ANR	971488	IdentifierDeclType	zend_string *		971479	0					
ANR	971489	Identifier	lc_method_name		971479	1					
ANR	971490	ExpressionStatement	ALLOCA_FLAG ( use_heap )	249:1:7330:7351	971479	2	True				
ANR	971491	CallExpression	ALLOCA_FLAG ( use_heap )		971479	0					
ANR	971492	Callee	ALLOCA_FLAG		971479	0					
ANR	971493	Identifier	ALLOCA_FLAG		971479	0					
ANR	971494	ArgumentList	use_heap		971479	1					
ANR	971495	Argument	use_heap		971479	0					
ANR	971496	Identifier	use_heap		971479	0					
ANR	971497	IfStatement	if ( key == NULL )		971479	3					
ANR	971498	Condition	key == NULL	251:5:7359:7369	971479	0	True				
ANR	971499	EqualityExpression	key == NULL		971479	0		==			
ANR	971500	Identifier	key		971479	0					
ANR	971501	Identifier	NULL		971479	1					
ANR	971502	CompoundStatement		6:18:95:95	971479	1					
ANR	971503	ExpressionStatement	"ZSTR_ALLOCA_ALLOC ( lc_method_name , ZSTR_LEN ( method ) , use_heap )"	252:2:7376:7437	971479	0	True				
ANR	971504	CallExpression	"ZSTR_ALLOCA_ALLOC ( lc_method_name , ZSTR_LEN ( method ) , use_heap )"		971479	0					
ANR	971505	Callee	ZSTR_ALLOCA_ALLOC		971479	0					
ANR	971506	Identifier	ZSTR_ALLOCA_ALLOC		971479	0					
ANR	971507	ArgumentList	lc_method_name		971479	1					
ANR	971508	Argument	lc_method_name		971479	0					
ANR	971509	Identifier	lc_method_name		971479	0					
ANR	971510	Argument	ZSTR_LEN ( method )		971479	1					
ANR	971511	CallExpression	ZSTR_LEN ( method )		971479	0					
ANR	971512	Callee	ZSTR_LEN		971479	0					
ANR	971513	Identifier	ZSTR_LEN		971479	0					
ANR	971514	ArgumentList	method		971479	1					
ANR	971515	Argument	method		971479	0					
ANR	971516	Identifier	method		971479	0					
ANR	971517	Argument	use_heap		971479	2					
ANR	971518	Identifier	use_heap		971479	0					
ANR	971519	ExpressionStatement	"zend_str_tolower_copy ( ZSTR_VAL ( lc_method_name ) , ZSTR_VAL ( method ) , ZSTR_LEN ( method ) )"	253:2:7441:7524	971479	1	True				
ANR	971520	CallExpression	"zend_str_tolower_copy ( ZSTR_VAL ( lc_method_name ) , ZSTR_VAL ( method ) , ZSTR_LEN ( method ) )"		971479	0					
ANR	971521	Callee	zend_str_tolower_copy		971479	0					
ANR	971522	Identifier	zend_str_tolower_copy		971479	0					
ANR	971523	ArgumentList	ZSTR_VAL ( lc_method_name )		971479	1					
ANR	971524	Argument	ZSTR_VAL ( lc_method_name )		971479	0					
ANR	971525	CallExpression	ZSTR_VAL ( lc_method_name )		971479	0					
ANR	971526	Callee	ZSTR_VAL		971479	0					
ANR	971527	Identifier	ZSTR_VAL		971479	0					
ANR	971528	ArgumentList	lc_method_name		971479	1					
ANR	971529	Argument	lc_method_name		971479	0					
ANR	971530	Identifier	lc_method_name		971479	0					
ANR	971531	Argument	ZSTR_VAL ( method )		971479	1					
ANR	971532	CallExpression	ZSTR_VAL ( method )		971479	0					
ANR	971533	Callee	ZSTR_VAL		971479	0					
ANR	971534	Identifier	ZSTR_VAL		971479	0					
ANR	971535	ArgumentList	method		971479	1					
ANR	971536	Argument	method		971479	0					
ANR	971537	Identifier	method		971479	0					
ANR	971538	Argument	ZSTR_LEN ( method )		971479	2					
ANR	971539	CallExpression	ZSTR_LEN ( method )		971479	0					
ANR	971540	Callee	ZSTR_LEN		971479	0					
ANR	971541	Identifier	ZSTR_LEN		971479	0					
ANR	971542	ArgumentList	method		971479	1					
ANR	971543	Argument	method		971479	0					
ANR	971544	Identifier	method		971479	0					
ANR	971545	ElseStatement	else		971479	0					
ANR	971546	CompoundStatement		9:8:257:257	971479	0					
ANR	971547	ExpressionStatement	lc_method_name = Z_STR_P ( key )	255:2:7538:7567	971479	0	True				
ANR	971548	AssignmentExpression	lc_method_name = Z_STR_P ( key )		971479	0		=			
ANR	971549	Identifier	lc_method_name		971479	0					
ANR	971550	CallExpression	Z_STR_P ( key )		971479	1					
ANR	971551	Callee	Z_STR_P		971479	0					
ANR	971552	Identifier	Z_STR_P		971479	0					
ANR	971553	ArgumentList	key		971479	1					
ANR	971554	Argument	key		971479	0					
ANR	971555	Identifier	key		971479	0					
ANR	971556	IfStatement	"if ( ZSTR_LEN ( method ) == sizeof ( ""getrulestatus"" ) - 1 && memcmp ( ""getrulestatus"" , ZSTR_VAL ( lc_method_name ) , ZSTR_LEN ( lc_method_name ) ) == 0 )"		971479	4					
ANR	971557	Condition	"ZSTR_LEN ( method ) == sizeof ( ""getrulestatus"" ) - 1 && memcmp ( ""getrulestatus"" , ZSTR_VAL ( lc_method_name ) , ZSTR_LEN ( lc_method_name ) ) == 0"	258:5:7578:7711	971479	0	True				
ANR	971558	AndExpression	"ZSTR_LEN ( method ) == sizeof ( ""getrulestatus"" ) - 1 && memcmp ( ""getrulestatus"" , ZSTR_VAL ( lc_method_name ) , ZSTR_LEN ( lc_method_name ) ) == 0"		971479	0		&&			
ANR	971559	EqualityExpression	"ZSTR_LEN ( method ) == sizeof ( ""getrulestatus"" ) - 1"		971479	0		==			
ANR	971560	CallExpression	ZSTR_LEN ( method )		971479	0					
ANR	971561	Callee	ZSTR_LEN		971479	0					
ANR	971562	Identifier	ZSTR_LEN		971479	0					
ANR	971563	ArgumentList	method		971479	1					
ANR	971564	Argument	method		971479	0					
ANR	971565	Identifier	method		971479	0					
ANR	971566	AdditiveExpression	"sizeof ( ""getrulestatus"" ) - 1"		971479	1		-			
ANR	971567	SizeofExpression	"sizeof ( ""getrulestatus"" )"		971479	0					
ANR	971568	Sizeof	sizeof		971479	0					
ANR	971569	PrimaryExpression	"""getrulestatus"""		971479	1					
ANR	971570	PrimaryExpression	1		971479	1					
ANR	971571	EqualityExpression	"memcmp ( ""getrulestatus"" , ZSTR_VAL ( lc_method_name ) , ZSTR_LEN ( lc_method_name ) ) == 0"		971479	1		==			
ANR	971572	CallExpression	"memcmp ( ""getrulestatus"" , ZSTR_VAL ( lc_method_name ) , ZSTR_LEN ( lc_method_name ) )"		971479	0					
ANR	971573	Callee	memcmp		971479	0					
ANR	971574	Identifier	memcmp		971479	0					
ANR	971575	ArgumentList	"""getrulestatus"""		971479	1					
ANR	971576	Argument	"""getrulestatus"""		971479	0					
ANR	971577	PrimaryExpression	"""getrulestatus"""		971479	0					
ANR	971578	Argument	ZSTR_VAL ( lc_method_name )		971479	1					
ANR	971579	CallExpression	ZSTR_VAL ( lc_method_name )		971479	0					
ANR	971580	Callee	ZSTR_VAL		971479	0					
ANR	971581	Identifier	ZSTR_VAL		971479	0					
ANR	971582	ArgumentList	lc_method_name		971479	1					
ANR	971583	Argument	lc_method_name		971479	0					
ANR	971584	Identifier	lc_method_name		971479	0					
ANR	971585	Argument	ZSTR_LEN ( lc_method_name )		971479	2					
ANR	971586	CallExpression	ZSTR_LEN ( lc_method_name )		971479	0					
ANR	971587	Callee	ZSTR_LEN		971479	0					
ANR	971588	Identifier	ZSTR_LEN		971479	0					
ANR	971589	ArgumentList	lc_method_name		971479	1					
ANR	971590	Argument	lc_method_name		971479	0					
ANR	971591	Identifier	lc_method_name		971479	0					
ANR	971592	PrimaryExpression	0		971479	1					
ANR	971593	CompoundStatement		15:2:441:511	971479	1					
ANR	971594	IdentifierDeclStatement	IntlIterator_object * obj = php_intl_iterator_fetch_object ( * object_ptr ) ;	260:2:7718:7788	971479	0	True				
ANR	971595	IdentifierDecl	* obj = php_intl_iterator_fetch_object ( * object_ptr )		971479	0					
ANR	971596	IdentifierDeclType	IntlIterator_object *		971479	0					
ANR	971597	Identifier	obj		971479	1					
ANR	971598	AssignmentExpression	* obj = php_intl_iterator_fetch_object ( * object_ptr )		971479	2		=			
ANR	971599	Identifier	obj		971479	0					
ANR	971600	CallExpression	php_intl_iterator_fetch_object ( * object_ptr )		971479	1					
ANR	971601	Callee	php_intl_iterator_fetch_object		971479	0					
ANR	971602	Identifier	php_intl_iterator_fetch_object		971479	0					
ANR	971603	ArgumentList	* object_ptr		971479	1					
ANR	971604	Argument	* object_ptr		971479	0					
ANR	971605	UnaryOperationExpression	* object_ptr		971479	0					
ANR	971606	UnaryOperator	*		971479	0					
ANR	971607	Identifier	object_ptr		971479	1					
ANR	971608	IfStatement	if ( obj -> iterator && ! Z_ISUNDEF ( obj -> iterator -> data ) )		971479	1					
ANR	971609	Condition	obj -> iterator && ! Z_ISUNDEF ( obj -> iterator -> data )	261:6:7796:7843	971479	0	True				
ANR	971610	AndExpression	obj -> iterator && ! Z_ISUNDEF ( obj -> iterator -> data )		971479	0		&&			
ANR	971611	PtrMemberAccess	obj -> iterator		971479	0					
ANR	971612	Identifier	obj		971479	0					
ANR	971613	Identifier	iterator		971479	1					
ANR	971614	UnaryOperationExpression	! Z_ISUNDEF ( obj -> iterator -> data )		971479	1					
ANR	971615	UnaryOperator	!		971479	0					
ANR	971616	CallExpression	Z_ISUNDEF ( obj -> iterator -> data )		971479	1					
ANR	971617	Callee	Z_ISUNDEF		971479	0					
ANR	971618	Identifier	Z_ISUNDEF		971479	0					
ANR	971619	ArgumentList	obj -> iterator -> data		971479	1					
ANR	971620	Argument	obj -> iterator -> data		971479	0					
ANR	971621	PtrMemberAccess	obj -> iterator -> data		971479	0					
ANR	971622	PtrMemberAccess	obj -> iterator		971479	0					
ANR	971623	Identifier	obj		971479	0					
ANR	971624	Identifier	iterator		971479	1					
ANR	971625	Identifier	data		971479	1					
ANR	971626	CompoundStatement		17:3:574:616	971479	1					
ANR	971627	IdentifierDeclStatement	zval * break_iter_zv = & obj -> iterator -> data ;	262:3:7851:7893	971479	0	True				
ANR	971628	IdentifierDecl	* break_iter_zv = & obj -> iterator -> data		971479	0					
ANR	971629	IdentifierDeclType	zval *		971479	0					
ANR	971630	Identifier	break_iter_zv		971479	1					
ANR	971631	AssignmentExpression	* break_iter_zv = & obj -> iterator -> data		971479	2		=			
ANR	971632	Identifier	break_iter_zv		971479	0					
ANR	971633	UnaryOperationExpression	& obj -> iterator -> data		971479	1					
ANR	971634	UnaryOperator	&		971479	0					
ANR	971635	PtrMemberAccess	obj -> iterator -> data		971479	1					
ANR	971636	PtrMemberAccess	obj -> iterator		971479	0					
ANR	971637	Identifier	obj		971479	0					
ANR	971638	Identifier	iterator		971479	1					
ANR	971639	Identifier	data		971479	1					
ANR	971640	ExpressionStatement	* object_ptr = Z_OBJ_P ( break_iter_zv )	263:3:7898:7934	971479	1	True				
ANR	971641	AssignmentExpression	* object_ptr = Z_OBJ_P ( break_iter_zv )		971479	0		=			
ANR	971642	UnaryOperationExpression	* object_ptr		971479	0					
ANR	971643	UnaryOperator	*		971479	0					
ANR	971644	Identifier	object_ptr		971479	1					
ANR	971645	CallExpression	Z_OBJ_P ( break_iter_zv )		971479	1					
ANR	971646	Callee	Z_OBJ_P		971479	0					
ANR	971647	Identifier	Z_OBJ_P		971479	0					
ANR	971648	ArgumentList	break_iter_zv		971479	1					
ANR	971649	Argument	break_iter_zv		971479	0					
ANR	971650	Identifier	break_iter_zv		971479	0					
ANR	971651	ExpressionStatement	"ret = Z_OBJ_HANDLER_P ( break_iter_zv , get_method ) ( object_ptr , method , key )"	264:3:7939:8012	971479	2	True				
ANR	971652	AssignmentExpression	"ret = Z_OBJ_HANDLER_P ( break_iter_zv , get_method ) ( object_ptr , method , key )"		971479	0		=			
ANR	971653	Identifier	ret		971479	0					
ANR	971654	CallExpression	"Z_OBJ_HANDLER_P ( break_iter_zv , get_method ) ( object_ptr , method , key )"		971479	1					
ANR	971655	Callee	"Z_OBJ_HANDLER_P ( break_iter_zv , get_method )"		971479	0					
ANR	971656	CallExpression	"Z_OBJ_HANDLER_P ( break_iter_zv , get_method )"		971479	0					
ANR	971657	Callee	Z_OBJ_HANDLER_P		971479	0					
ANR	971658	Identifier	Z_OBJ_HANDLER_P		971479	0					
ANR	971659	ArgumentList	break_iter_zv		971479	1					
ANR	971660	Argument	break_iter_zv		971479	0					
ANR	971661	Identifier	break_iter_zv		971479	0					
ANR	971662	Argument	get_method		971479	1					
ANR	971663	Identifier	get_method		971479	0					
ANR	971664	ArgumentList	object_ptr		971479	1					
ANR	971665	Argument	object_ptr		971479	0					
ANR	971666	Identifier	object_ptr		971479	0					
ANR	971667	Argument	method		971479	1					
ANR	971668	Identifier	method		971479	0					
ANR	971669	Argument	key		971479	2					
ANR	971670	Identifier	key		971479	0					
ANR	971671	GotoStatement	goto end ;	265:3:8017:8025	971479	3	True				
ANR	971672	Identifier	end		971479	0					
ANR	971673	ExpressionStatement	"ret = std_object_handlers . get_method ( object_ptr , method , key )"	269:1:8036:8097	971479	5	True				
ANR	971674	AssignmentExpression	"ret = std_object_handlers . get_method ( object_ptr , method , key )"		971479	0		=			
ANR	971675	Identifier	ret		971479	0					
ANR	971676	CallExpression	"std_object_handlers . get_method ( object_ptr , method , key )"		971479	1					
ANR	971677	Callee	std_object_handlers . get_method		971479	0					
ANR	971678	MemberAccess	std_object_handlers . get_method		971479	0					
ANR	971679	Identifier	std_object_handlers		971479	0					
ANR	971680	Identifier	get_method		971479	1					
ANR	971681	ArgumentList	object_ptr		971479	1					
ANR	971682	Argument	object_ptr		971479	0					
ANR	971683	Identifier	object_ptr		971479	0					
ANR	971684	Argument	method		971479	1					
ANR	971685	Identifier	method		971479	0					
ANR	971686	Argument	key		971479	2					
ANR	971687	Identifier	key		971479	0					
ANR	971688	Label	end :	271:0:8100:8103	971479	6	True				
ANR	971689	Identifier	end		971479	0					
ANR	971690	IfStatement	if ( key == NULL )		971479	7					
ANR	971691	Condition	key == NULL	272:5:8110:8120	971479	0	True				
ANR	971692	EqualityExpression	key == NULL		971479	0		==			
ANR	971693	Identifier	key		971479	0					
ANR	971694	Identifier	NULL		971479	1					
ANR	971695	CompoundStatement		27:18:846:846	971479	1					
ANR	971696	ExpressionStatement	"ZSTR_ALLOCA_FREE ( lc_method_name , use_heap )"	273:3:8128:8170	971479	0	True				
ANR	971697	CallExpression	"ZSTR_ALLOCA_FREE ( lc_method_name , use_heap )"		971479	0					
ANR	971698	Callee	ZSTR_ALLOCA_FREE		971479	0					
ANR	971699	Identifier	ZSTR_ALLOCA_FREE		971479	0					
ANR	971700	ArgumentList	lc_method_name		971479	1					
ANR	971701	Argument	lc_method_name		971479	0					
ANR	971702	Identifier	lc_method_name		971479	0					
ANR	971703	Argument	use_heap		971479	1					
ANR	971704	Identifier	use_heap		971479	0					
ANR	971705	ReturnStatement	return ret ;	276:1:8177:8187	971479	8	True				
ANR	971706	Identifier	ret		971479	0					
ANR	971707	ReturnType	U_CFUNC zend_function *		971479	1					
ANR	971708	Identifier	IntlPartsIterator_get_method		971479	2					
ANR	971709	ParameterList	"zend_object * * object_ptr , zend_string * method , const zval * key"		971479	3					
ANR	971710	Parameter	zend_object * * object_ptr	245:52:7212:7235	971479	0	True				
ANR	971711	ParameterType	zend_object * *		971479	0					
ANR	971712	Identifier	object_ptr		971479	1					
ANR	971713	Parameter	zend_string * method	245:78:7238:7256	971479	1	True				
ANR	971714	ParameterType	zend_string *		971479	0					
ANR	971715	Identifier	method		971479	1					
ANR	971716	Parameter	const zval * key	245:99:7259:7273	971479	2	True				
ANR	971717	ParameterType	const zval *		971479	0					
ANR	971718	Identifier	key		971479	1					
ANR	971719	CFGEntryNode	ENTRY		971479		True				
ANR	971720	CFGExitNode	EXIT		971479		True				
ANR	971721	Symbol	std_object_handlers . get_method		971479						
ANR	971722	Symbol	lc_method_name		971479						
ANR	971723	Symbol	Z_OBJ_P		971479						
ANR	971724	Symbol	* * obj		971479						
ANR	971725	Symbol	php_intl_iterator_fetch_object		971479						
ANR	971726	Symbol	obj -> iterator -> data		971479						
ANR	971727	Symbol	obj -> iterator		971479						
ANR	971728	Symbol	memcmp		971479						
ANR	971729	Symbol	Z_OBJ_HANDLER_P		971479						
ANR	971730	Symbol	key		971479						
ANR	971731	Symbol	ret		971479						
ANR	971732	Symbol	get_method		971479						
ANR	971733	Symbol	* obj		971479						
ANR	971734	Symbol	break_iter_zv		971479						
ANR	971735	Symbol	NULL		971479						
ANR	971736	Symbol	method		971479						
ANR	971737	Symbol	Z_ISUNDEF		971479						
ANR	971738	Symbol	ZSTR_VAL		971479						
ANR	971739	Symbol	& obj -> iterator -> data		971479						
ANR	971740	Symbol	* object_ptr		971479						
ANR	971741	Symbol	std_object_handlers		971479						
ANR	971742	Symbol	object_ptr		971479						
ANR	971743	Symbol	obj		971479						
ANR	971744	Symbol	ZSTR_LEN		971479						
ANR	971745	Symbol	Z_STR_P		971479						
ANR	971746	Symbol	* obj -> iterator		971479						
ANR	971747	Symbol	use_heap		971479						
ANR	971748	DeclStmt									
ANR	971749	Decl							zval	zval *	biter_zval
ANR	971750	DeclStmt									
ANR	971751	Decl							const zend_function_entry	const zend_function_entry [ ]	IntlPartsIterator_class_functions
ANR	971752	Function	breakiterator_register_IntlPartsIterator_class	304:0:8844:9716							
ANR	971753	FunctionDef	breakiterator_register_IntlPartsIterator_class ()		971752	0					
ANR	971754	CompoundStatement		305:0:8910:9716	971752	0					
ANR	971755	IdentifierDeclStatement	zend_class_entry ce ;	306:1:8913:8932	971752	0	True				
ANR	971756	IdentifierDecl	ce		971752	0					
ANR	971757	IdentifierDeclType	zend_class_entry		971752	0					
ANR	971758	Identifier	ce		971752	1					
ANR	971759	ExpressionStatement	"INIT_CLASS_ENTRY ( ce , ""IntlPartsIterator"" , IntlPartsIterator_class_functions )"	309:1:8986:9062	971752	1	True				
ANR	971760	CallExpression	"INIT_CLASS_ENTRY ( ce , ""IntlPartsIterator"" , IntlPartsIterator_class_functions )"		971752	0					
ANR	971761	Callee	INIT_CLASS_ENTRY		971752	0					
ANR	971762	Identifier	INIT_CLASS_ENTRY		971752	0					
ANR	971763	ArgumentList	ce		971752	1					
ANR	971764	Argument	ce		971752	0					
ANR	971765	Identifier	ce		971752	0					
ANR	971766	Argument	"""IntlPartsIterator"""		971752	1					
ANR	971767	PrimaryExpression	"""IntlPartsIterator"""		971752	0					
ANR	971768	Argument	IntlPartsIterator_class_functions		971752	2					
ANR	971769	Identifier	IntlPartsIterator_class_functions		971752	0					
ANR	971770	ExpressionStatement	"IntlPartsIterator_ce_ptr = zend_register_internal_class_ex ( & ce , IntlIterator_ce_ptr )"	310:1:9065:9152	971752	2	True				
ANR	971771	AssignmentExpression	"IntlPartsIterator_ce_ptr = zend_register_internal_class_ex ( & ce , IntlIterator_ce_ptr )"		971752	0		=			
ANR	971772	Identifier	IntlPartsIterator_ce_ptr		971752	0					
ANR	971773	CallExpression	"zend_register_internal_class_ex ( & ce , IntlIterator_ce_ptr )"		971752	1					
ANR	971774	Callee	zend_register_internal_class_ex		971752	0					
ANR	971775	Identifier	zend_register_internal_class_ex		971752	0					
ANR	971776	ArgumentList	& ce		971752	1					
ANR	971777	Argument	& ce		971752	0					
ANR	971778	UnaryOperationExpression	& ce		971752	0					
ANR	971779	UnaryOperator	&		971752	0					
ANR	971780	Identifier	ce		971752	1					
ANR	971781	Argument	IntlIterator_ce_ptr		971752	1					
ANR	971782	Identifier	IntlIterator_ce_ptr		971752	0					
ANR	971783	ExpressionStatement	IntlPartsIterator_ce_ptr -> create_object = IntlPartsIterator_object_create	312:1:9155:9228	971752	3	True				
ANR	971784	AssignmentExpression	IntlPartsIterator_ce_ptr -> create_object = IntlPartsIterator_object_create		971752	0		=			
ANR	971785	PtrMemberAccess	IntlPartsIterator_ce_ptr -> create_object		971752	0					
ANR	971786	Identifier	IntlPartsIterator_ce_ptr		971752	0					
ANR	971787	Identifier	create_object		971752	1					
ANR	971788	Identifier	IntlPartsIterator_object_create		971752	1					
ANR	971789	ExpressionStatement	"memcpy ( & IntlPartsIterator_handlers , & IntlIterator_handlers , sizeof IntlPartsIterator_handlers )"	314:1:9232:9329	971752	4	True				
ANR	971790	CallExpression	"memcpy ( & IntlPartsIterator_handlers , & IntlIterator_handlers , sizeof IntlPartsIterator_handlers )"		971752	0					
ANR	971791	Callee	memcpy		971752	0					
ANR	971792	Identifier	memcpy		971752	0					
ANR	971793	ArgumentList	& IntlPartsIterator_handlers		971752	1					
ANR	971794	Argument	& IntlPartsIterator_handlers		971752	0					
ANR	971795	UnaryOperationExpression	& IntlPartsIterator_handlers		971752	0					
ANR	971796	UnaryOperator	&		971752	0					
ANR	971797	Identifier	IntlPartsIterator_handlers		971752	1					
ANR	971798	Argument	& IntlIterator_handlers		971752	1					
ANR	971799	UnaryOperationExpression	& IntlIterator_handlers		971752	0					
ANR	971800	UnaryOperator	&		971752	0					
ANR	971801	Identifier	IntlIterator_handlers		971752	1					
ANR	971802	Argument	sizeof IntlPartsIterator_handlers		971752	2					
ANR	971803	SizeofExpression	sizeof IntlPartsIterator_handlers		971752	0					
ANR	971804	Sizeof	sizeof		971752	0					
ANR	971805	Identifier	IntlPartsIterator_handlers		971752	1					
ANR	971806	ExpressionStatement	IntlPartsIterator_handlers . get_method = IntlPartsIterator_get_method	316:1:9332:9400	971752	5	True				
ANR	971807	AssignmentExpression	IntlPartsIterator_handlers . get_method = IntlPartsIterator_get_method		971752	0		=			
ANR	971808	MemberAccess	IntlPartsIterator_handlers . get_method		971752	0					
ANR	971809	Identifier	IntlPartsIterator_handlers		971752	0					
ANR	971810	Identifier	get_method		971752	1					
ANR	971811	Identifier	IntlPartsIterator_get_method		971752	1					
ANR	971812	Statement	define	318:1:9404:9409	971752	6	True				
ANR	971813	Statement	PARTSITER_DECL_LONG_CONST	318:8:9411:9435	971752	7	True				
ANR	971814	Statement	(	318:33:9436:9436	971752	8	True				
ANR	971815	Statement	name	318:34:9437:9440	971752	9	True				
ANR	971816	Statement	)	318:38:9441:9441	971752	10	True				
ANR	971817	Statement	zend_declare_class_constant_long	319:1:9446:9477	971752	11	True				
ANR	971818	Statement	(	319:33:9478:9478	971752	12	True				
ANR	971819	Statement	IntlPartsIterator_ce_ptr	319:34:9479:9502	971752	13	True				
ANR	971820	Statement	","	319:58:9503:9503	971752	14	True				
ANR	971821	Statement	name	319:61:9506:9509	971752	15	True				
ANR	971822	Statement	","	319:65:9510:9510	971752	16	True				
ANR	971823	Statement	sizeof	320:2:9516:9521	971752	17	True				
ANR	971824	Statement	(	320:8:9522:9522	971752	18	True				
ANR	971825	Statement	name	320:10:9524:9527	971752	19	True				
ANR	971826	Statement	)	320:14:9528:9528	971752	20	True				
ANR	971827	Statement	-	320:16:9530:9530	971752	21	True				
ANR	971828	Statement	1	320:18:9532:9532	971752	22	True				
ANR	971829	Statement	","	320:19:9533:9533	971752	23	True				
ANR	971830	Statement	PARTS_ITERATOR_	320:21:9535:9549	971752	24	True				
ANR	971831	Statement	name	320:40:9554:9557	971752	25	True				
ANR	971832	Statement	)	320:44:9558:9558	971752	26	True				
ANR	971833	ExpressionStatement	PARTSITER_DECL_LONG_CONST ( KEY_SEQUENTIAL )	322:1:9562:9603	971752	27	True				
ANR	971834	CallExpression	PARTSITER_DECL_LONG_CONST ( KEY_SEQUENTIAL )		971752	0					
ANR	971835	Callee	PARTSITER_DECL_LONG_CONST		971752	0					
ANR	971836	Identifier	PARTSITER_DECL_LONG_CONST		971752	0					
ANR	971837	ArgumentList	KEY_SEQUENTIAL		971752	1					
ANR	971838	Argument	KEY_SEQUENTIAL		971752	0					
ANR	971839	Identifier	KEY_SEQUENTIAL		971752	0					
ANR	971840	ExpressionStatement	PARTSITER_DECL_LONG_CONST ( KEY_LEFT )	323:1:9606:9641	971752	28	True				
ANR	971841	CallExpression	PARTSITER_DECL_LONG_CONST ( KEY_LEFT )		971752	0					
ANR	971842	Callee	PARTSITER_DECL_LONG_CONST		971752	0					
ANR	971843	Identifier	PARTSITER_DECL_LONG_CONST		971752	0					
ANR	971844	ArgumentList	KEY_LEFT		971752	1					
ANR	971845	Argument	KEY_LEFT		971752	0					
ANR	971846	Identifier	KEY_LEFT		971752	0					
ANR	971847	ExpressionStatement	PARTSITER_DECL_LONG_CONST ( KEY_RIGHT )	324:1:9644:9680	971752	29	True				
ANR	971848	CallExpression	PARTSITER_DECL_LONG_CONST ( KEY_RIGHT )		971752	0					
ANR	971849	Callee	PARTSITER_DECL_LONG_CONST		971752	0					
ANR	971850	Identifier	PARTSITER_DECL_LONG_CONST		971752	0					
ANR	971851	ArgumentList	KEY_RIGHT		971752	1					
ANR	971852	Argument	KEY_RIGHT		971752	0					
ANR	971853	Identifier	KEY_RIGHT		971752	0					
ANR	971854	Statement	undef	326:1:9684:9688	971752	30	True				
ANR	971855	Statement	PARTSITER_DECL_LONG_CONST	326:7:9690:9714	971752	31	True				
ANR	971856	ReturnType	U_CFUNC void		971752	1					
ANR	971857	Identifier	breakiterator_register_IntlPartsIterator_class		971752	2					
ANR	971858	ParameterList			971752	3					
ANR	971859	CFGEntryNode	ENTRY		971752		True				
ANR	971860	CFGExitNode	EXIT		971752		True				
ANR	971861	Symbol	ce		971752						
ANR	971862	Symbol	& IntlIterator_handlers		971752						
ANR	971863	Symbol	IntlPartsIterator_handlers . get_method		971752						
ANR	971864	Symbol	KEY_LEFT		971752						
ANR	971865	Symbol	IntlIterator_ce_ptr		971752						
ANR	971866	Symbol	& IntlPartsIterator_handlers		971752						
ANR	971867	Symbol	IntlPartsIterator_ce_ptr		971752						
ANR	971868	Symbol	& ce		971752						
ANR	971869	Symbol	* IntlPartsIterator_ce_ptr		971752						
ANR	971870	Symbol	IntlPartsIterator_class_functions		971752						
ANR	971871	Symbol	IntlPartsIterator_object_create		971752						
ANR	971872	Symbol	KEY_SEQUENTIAL		971752						
ANR	971873	Symbol	zend_register_internal_class_ex		971752						
ANR	971874	Symbol	IntlPartsIterator_ce_ptr -> create_object		971752						
ANR	971875	Symbol	KEY_RIGHT		971752						
ANR	971876	Symbol	IntlPartsIterator_handlers		971752						
ANR	971877	Symbol	IntlPartsIterator_get_method		971752						
