command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1369338	File	data/converged/CVE-2015-8617_php-src/ext_opcache_Optimizer_compact_literals.c								
ANR	1369339	ClassDef	_literal_info	56:8:2554:2725							
ANR	1369340	DeclStmt									
ANR	1369341	Decl							uint32_t	uint32_t	flags
ANR	1369342	ClassDef	<unnamed>	58:1:2630:2709							
ANR	1369343	DeclStmt									
ANR	1369344	Decl							int	int	num
ANR	1369345	DeclStmt									
ANR	1369346	Decl									u
ANR	1369347	DeclStmt									
ANR	1369348	Decl							_literal_info	_literal_info	literal_info
ANR	1369349	Function	optimizer_literal_obj_info	80:0:3457:4387							
ANR	1369350	FunctionDef	"optimizer_literal_obj_info (literal_info * info , zend_uchar op_type , znode_op op , int constant , uint32_t kind , uint32_t slots , uint32_t related , zend_op_array * op_array)"		1369349	0					
ANR	1369351	CompoundStatement		88:0:3955:4387	1369349	0					
ANR	1369352	IfStatement	if ( Z_TYPE ( op_array -> literals [ constant ] ) == IS_STRING && op_type == IS_UNUSED )		1369349	0					
ANR	1369353	Condition	Z_TYPE ( op_array -> literals [ constant ] ) == IS_STRING && op_type == IS_UNUSED	93:5:4166:4243	1369349	0	True				
ANR	1369354	AndExpression	Z_TYPE ( op_array -> literals [ constant ] ) == IS_STRING && op_type == IS_UNUSED		1369349	0		&&			
ANR	1369355	EqualityExpression	Z_TYPE ( op_array -> literals [ constant ] ) == IS_STRING		1369349	0		==			
ANR	1369356	CallExpression	Z_TYPE ( op_array -> literals [ constant ] )		1369349	0					
ANR	1369357	Callee	Z_TYPE		1369349	0					
ANR	1369358	Identifier	Z_TYPE		1369349	0					
ANR	1369359	ArgumentList	op_array -> literals [ constant ]		1369349	1					
ANR	1369360	Argument	op_array -> literals [ constant ]		1369349	0					
ANR	1369361	ArrayIndexing	op_array -> literals [ constant ]		1369349	0					
ANR	1369362	PtrMemberAccess	op_array -> literals		1369349	0					
ANR	1369363	Identifier	op_array		1369349	0					
ANR	1369364	Identifier	literals		1369349	1					
ANR	1369365	Identifier	constant		1369349	1					
ANR	1369366	Identifier	IS_STRING		1369349	1					
ANR	1369367	EqualityExpression	op_type == IS_UNUSED		1369349	1		==			
ANR	1369368	Identifier	op_type		1369349	0					
ANR	1369369	Identifier	IS_UNUSED		1369349	1					
ANR	1369370	CompoundStatement		7:27:290:290	1369349	1					
ANR	1369371	ExpressionStatement	"LITERAL_INFO_OBJ ( constant , kind , 1 , slots , related , op_array -> this_var )"	95:2:4250:4321	1369349	0	True				
ANR	1369372	CallExpression	"LITERAL_INFO_OBJ ( constant , kind , 1 , slots , related , op_array -> this_var )"		1369349	0					
ANR	1369373	Callee	LITERAL_INFO_OBJ		1369349	0					
ANR	1369374	Identifier	LITERAL_INFO_OBJ		1369349	0					
ANR	1369375	ArgumentList	constant		1369349	1					
ANR	1369376	Argument	constant		1369349	0					
ANR	1369377	Identifier	constant		1369349	0					
ANR	1369378	Argument	kind		1369349	1					
ANR	1369379	Identifier	kind		1369349	0					
ANR	1369380	Argument	1		1369349	2					
ANR	1369381	PrimaryExpression	1		1369349	0					
ANR	1369382	Argument	slots		1369349	3					
ANR	1369383	Identifier	slots		1369349	0					
ANR	1369384	Argument	related		1369349	4					
ANR	1369385	Identifier	related		1369349	0					
ANR	1369386	Argument	op_array -> this_var		1369349	5					
ANR	1369387	PtrMemberAccess	op_array -> this_var		1369349	0					
ANR	1369388	Identifier	op_array		1369349	0					
ANR	1369389	Identifier	this_var		1369349	1					
ANR	1369390	ElseStatement	else		1369349	0					
ANR	1369391	CompoundStatement		9:8:375:375	1369349	0					
ANR	1369392	ExpressionStatement	"LITERAL_INFO ( constant , kind , 0 , slots , related )"	97:2:4335:4382	1369349	0	True				
ANR	1369393	CallExpression	"LITERAL_INFO ( constant , kind , 0 , slots , related )"		1369349	0					
ANR	1369394	Callee	LITERAL_INFO		1369349	0					
ANR	1369395	Identifier	LITERAL_INFO		1369349	0					
ANR	1369396	ArgumentList	constant		1369349	1					
ANR	1369397	Argument	constant		1369349	0					
ANR	1369398	Identifier	constant		1369349	0					
ANR	1369399	Argument	kind		1369349	1					
ANR	1369400	Identifier	kind		1369349	0					
ANR	1369401	Argument	0		1369349	2					
ANR	1369402	PrimaryExpression	0		1369349	0					
ANR	1369403	Argument	slots		1369349	3					
ANR	1369404	Identifier	slots		1369349	0					
ANR	1369405	Argument	related		1369349	4					
ANR	1369406	Identifier	related		1369349	0					
ANR	1369407	ReturnType	static void		1369349	1					
ANR	1369408	Identifier	optimizer_literal_obj_info		1369349	2					
ANR	1369409	ParameterList	"literal_info * info , zend_uchar op_type , znode_op op , int constant , uint32_t kind , uint32_t slots , uint32_t related , zend_op_array * op_array"		1369349	3					
ANR	1369410	Parameter	literal_info * info	80:39:3496:3515	1369349	0	True				
ANR	1369411	ParameterType	literal_info *		1369349	0					
ANR	1369412	Identifier	info		1369349	1					
ANR	1369413	Parameter	zend_uchar op_type	81:39:3557:3579	1369349	1	True				
ANR	1369414	ParameterType	zend_uchar		1369349	0					
ANR	1369415	Identifier	op_type		1369349	1					
ANR	1369416	Parameter	znode_op op	82:39:3621:3638	1369349	2	True				
ANR	1369417	ParameterType	znode_op		1369349	0					
ANR	1369418	Identifier	op		1369349	1					
ANR	1369419	Parameter	int constant	83:39:3680:3703	1369349	3	True				
ANR	1369420	ParameterType	int		1369349	0					
ANR	1369421	Identifier	constant		1369349	1					
ANR	1369422	Parameter	uint32_t kind	84:39:3745:3763	1369349	4	True				
ANR	1369423	ParameterType	uint32_t		1369349	0					
ANR	1369424	Identifier	kind		1369349	1					
ANR	1369425	Parameter	uint32_t slots	85:39:3805:3824	1369349	5	True				
ANR	1369426	ParameterType	uint32_t		1369349	0					
ANR	1369427	Identifier	slots		1369349	1					
ANR	1369428	Parameter	uint32_t related	86:39:3866:3887	1369349	6	True				
ANR	1369429	ParameterType	uint32_t		1369349	0					
ANR	1369430	Identifier	related		1369349	1					
ANR	1369431	Parameter	zend_op_array * op_array	87:39:3929:3952	1369349	7	True				
ANR	1369432	ParameterType	zend_op_array *		1369349	0					
ANR	1369433	Identifier	op_array		1369349	1					
ANR	1369434	CFGEntryNode	ENTRY		1369349		True				
ANR	1369435	CFGExitNode	EXIT		1369349		True				
ANR	1369436	Symbol	op		1369349						
ANR	1369437	Symbol	constant		1369349						
ANR	1369438	Symbol	kind		1369349						
ANR	1369439	Symbol	op_array -> this_var		1369349						
ANR	1369440	Symbol	Z_TYPE		1369349						
ANR	1369441	Symbol	* op_array -> literals		1369349						
ANR	1369442	Symbol	* op_array		1369349						
ANR	1369443	Symbol	slots		1369349						
ANR	1369444	Symbol	related		1369349						
ANR	1369445	Symbol	op_array -> literals		1369349						
ANR	1369446	Symbol	* constant		1369349						
ANR	1369447	Symbol	op_type		1369349						
ANR	1369448	Symbol	IS_STRING		1369349						
ANR	1369449	Symbol	* * op_array		1369349						
ANR	1369450	Symbol	op_array		1369349						
ANR	1369451	Symbol	info		1369349						
ANR	1369452	Symbol	IS_UNUSED		1369349						
ANR	1369453	Function	optimizer_literal_class_info	101:0:4390:5068							
ANR	1369454	FunctionDef	"optimizer_literal_class_info (literal_info * info , zend_uchar op_type , znode_op op , int constant , uint32_t kind , uint32_t slots , uint32_t related , zend_op_array * op_array)"		1369453	0					
ANR	1369455	CompoundStatement		109:0:4904:5068	1369453	0					
ANR	1369456	IfStatement	if ( op_type == IS_CONST )		1369453	0					
ANR	1369457	Condition	op_type == IS_CONST	110:5:4911:4929	1369453	0	True				
ANR	1369458	EqualityExpression	op_type == IS_CONST		1369453	0		==			
ANR	1369459	Identifier	op_type		1369453	0					
ANR	1369460	Identifier	IS_CONST		1369453	1					
ANR	1369461	CompoundStatement		2:26:27:27	1369453	1					
ANR	1369462	ExpressionStatement	"LITERAL_INFO_CLASS ( constant , kind , 1 , slots , related , op . constant )"	111:2:4936:5002	1369453	0	True				
ANR	1369463	CallExpression	"LITERAL_INFO_CLASS ( constant , kind , 1 , slots , related , op . constant )"		1369453	0					
ANR	1369464	Callee	LITERAL_INFO_CLASS		1369453	0					
ANR	1369465	Identifier	LITERAL_INFO_CLASS		1369453	0					
ANR	1369466	ArgumentList	constant		1369453	1					
ANR	1369467	Argument	constant		1369453	0					
ANR	1369468	Identifier	constant		1369453	0					
ANR	1369469	Argument	kind		1369453	1					
ANR	1369470	Identifier	kind		1369453	0					
ANR	1369471	Argument	1		1369453	2					
ANR	1369472	PrimaryExpression	1		1369453	0					
ANR	1369473	Argument	slots		1369453	3					
ANR	1369474	Identifier	slots		1369453	0					
ANR	1369475	Argument	related		1369453	4					
ANR	1369476	Identifier	related		1369453	0					
ANR	1369477	Argument	op . constant		1369453	5					
ANR	1369478	MemberAccess	op . constant		1369453	0					
ANR	1369479	Identifier	op		1369453	0					
ANR	1369480	Identifier	constant		1369453	1					
ANR	1369481	ElseStatement	else		1369453	0					
ANR	1369482	CompoundStatement		4:8:107:107	1369453	0					
ANR	1369483	ExpressionStatement	"LITERAL_INFO ( constant , kind , 0 , slots , related )"	113:2:5016:5063	1369453	0	True				
ANR	1369484	CallExpression	"LITERAL_INFO ( constant , kind , 0 , slots , related )"		1369453	0					
ANR	1369485	Callee	LITERAL_INFO		1369453	0					
ANR	1369486	Identifier	LITERAL_INFO		1369453	0					
ANR	1369487	ArgumentList	constant		1369453	1					
ANR	1369488	Argument	constant		1369453	0					
ANR	1369489	Identifier	constant		1369453	0					
ANR	1369490	Argument	kind		1369453	1					
ANR	1369491	Identifier	kind		1369453	0					
ANR	1369492	Argument	0		1369453	2					
ANR	1369493	PrimaryExpression	0		1369453	0					
ANR	1369494	Argument	slots		1369453	3					
ANR	1369495	Identifier	slots		1369453	0					
ANR	1369496	Argument	related		1369453	4					
ANR	1369497	Identifier	related		1369453	0					
ANR	1369498	ReturnType	static void		1369453	1					
ANR	1369499	Identifier	optimizer_literal_class_info		1369453	2					
ANR	1369500	ParameterList	"literal_info * info , zend_uchar op_type , znode_op op , int constant , uint32_t kind , uint32_t slots , uint32_t related , zend_op_array * op_array"		1369453	3					
ANR	1369501	Parameter	literal_info * info	101:41:4431:4450	1369453	0	True				
ANR	1369502	ParameterType	literal_info *		1369453	0					
ANR	1369503	Identifier	info		1369453	1					
ANR	1369504	Parameter	zend_uchar op_type	102:41:4494:4516	1369453	1	True				
ANR	1369505	ParameterType	zend_uchar		1369453	0					
ANR	1369506	Identifier	op_type		1369453	1					
ANR	1369507	Parameter	znode_op op	103:41:4560:4577	1369453	2	True				
ANR	1369508	ParameterType	znode_op		1369453	0					
ANR	1369509	Identifier	op		1369453	1					
ANR	1369510	Parameter	int constant	104:41:4621:4644	1369453	3	True				
ANR	1369511	ParameterType	int		1369453	0					
ANR	1369512	Identifier	constant		1369453	1					
ANR	1369513	Parameter	uint32_t kind	105:41:4688:4706	1369453	4	True				
ANR	1369514	ParameterType	uint32_t		1369453	0					
ANR	1369515	Identifier	kind		1369453	1					
ANR	1369516	Parameter	uint32_t slots	106:41:4750:4769	1369453	5	True				
ANR	1369517	ParameterType	uint32_t		1369453	0					
ANR	1369518	Identifier	slots		1369453	1					
ANR	1369519	Parameter	uint32_t related	107:41:4813:4834	1369453	6	True				
ANR	1369520	ParameterType	uint32_t		1369453	0					
ANR	1369521	Identifier	related		1369453	1					
ANR	1369522	Parameter	zend_op_array * op_array	108:41:4878:4901	1369453	7	True				
ANR	1369523	ParameterType	zend_op_array *		1369453	0					
ANR	1369524	Identifier	op_array		1369453	1					
ANR	1369525	CFGEntryNode	ENTRY		1369453		True				
ANR	1369526	CFGExitNode	EXIT		1369453		True				
ANR	1369527	Symbol	op		1369453						
ANR	1369528	Symbol	slots		1369453						
ANR	1369529	Symbol	IS_CONST		1369453						
ANR	1369530	Symbol	constant		1369453						
ANR	1369531	Symbol	op . constant		1369453						
ANR	1369532	Symbol	related		1369453						
ANR	1369533	Symbol	kind		1369453						
ANR	1369534	Symbol	op_type		1369453						
ANR	1369535	Symbol	op_array		1369453						
ANR	1369536	Symbol	info		1369453						
ANR	1369537	Function	zend_optimizer_compact_literals	117:0:5071:17595							
ANR	1369538	FunctionDef	"zend_optimizer_compact_literals (zend_op_array * op_array , zend_optimizer_ctx * ctx)"		1369537	0					
ANR	1369539	CompoundStatement		118:0:5158:17595	1369537	0					
ANR	1369540	IdentifierDeclStatement	"zend_op * opline , * end ;"	119:1:5161:5182	1369537	0	True				
ANR	1369541	IdentifierDecl	* opline		1369537	0					
ANR	1369542	IdentifierDeclType	zend_op *		1369537	0					
ANR	1369543	Identifier	opline		1369537	1					
ANR	1369544	IdentifierDecl	* end		1369537	1					
ANR	1369545	IdentifierDeclType	zend_op *		1369537	0					
ANR	1369546	Identifier	end		1369537	1					
ANR	1369547	IdentifierDeclStatement	"int i , j , n , * map , cache_size ;"	120:1:5185:5214	1369537	1	True				
ANR	1369548	IdentifierDecl	i		1369537	0					
ANR	1369549	IdentifierDeclType	int		1369537	0					
ANR	1369550	Identifier	i		1369537	1					
ANR	1369551	IdentifierDecl	j		1369537	1					
ANR	1369552	IdentifierDeclType	int		1369537	0					
ANR	1369553	Identifier	j		1369537	1					
ANR	1369554	IdentifierDecl	n		1369537	2					
ANR	1369555	IdentifierDeclType	int		1369537	0					
ANR	1369556	Identifier	n		1369537	1					
ANR	1369557	IdentifierDecl	* map		1369537	3					
ANR	1369558	IdentifierDeclType	int *		1369537	0					
ANR	1369559	Identifier	map		1369537	1					
ANR	1369560	IdentifierDecl	cache_size		1369537	4					
ANR	1369561	IdentifierDeclType	int		1369537	0					
ANR	1369562	Identifier	cache_size		1369537	1					
ANR	1369563	IdentifierDeclStatement	"zval zv , * pos ;"	121:1:5217:5230	1369537	2	True				
ANR	1369564	IdentifierDecl	zv		1369537	0					
ANR	1369565	IdentifierDeclType	zval		1369537	0					
ANR	1369566	Identifier	zv		1369537	1					
ANR	1369567	IdentifierDecl	* pos		1369537	1					
ANR	1369568	IdentifierDeclType	zval *		1369537	0					
ANR	1369569	Identifier	pos		1369537	1					
ANR	1369570	IdentifierDeclStatement	literal_info * info ;	122:1:5233:5251	1369537	3	True				
ANR	1369571	IdentifierDecl	* info		1369537	0					
ANR	1369572	IdentifierDeclType	literal_info *		1369537	0					
ANR	1369573	Identifier	info		1369537	1					
ANR	1369574	IdentifierDeclStatement	int l_null = - 1 ;	123:1:5254:5269	1369537	4	True				
ANR	1369575	IdentifierDecl	l_null = - 1		1369537	0					
ANR	1369576	IdentifierDeclType	int		1369537	0					
ANR	1369577	Identifier	l_null		1369537	1					
ANR	1369578	AssignmentExpression	l_null = - 1		1369537	2		=			
ANR	1369579	Identifier	l_null		1369537	0					
ANR	1369580	UnaryOperationExpression	- 1		1369537	1					
ANR	1369581	UnaryOperator	-		1369537	0					
ANR	1369582	PrimaryExpression	1		1369537	1					
ANR	1369583	IdentifierDeclStatement	int l_false = - 1 ;	124:1:5272:5288	1369537	5	True				
ANR	1369584	IdentifierDecl	l_false = - 1		1369537	0					
ANR	1369585	IdentifierDeclType	int		1369537	0					
ANR	1369586	Identifier	l_false		1369537	1					
ANR	1369587	AssignmentExpression	l_false = - 1		1369537	2		=			
ANR	1369588	Identifier	l_false		1369537	0					
ANR	1369589	UnaryOperationExpression	- 1		1369537	1					
ANR	1369590	UnaryOperator	-		1369537	0					
ANR	1369591	PrimaryExpression	1		1369537	1					
ANR	1369592	IdentifierDeclStatement	int l_true = - 1 ;	125:1:5291:5306	1369537	6	True				
ANR	1369593	IdentifierDecl	l_true = - 1		1369537	0					
ANR	1369594	IdentifierDeclType	int		1369537	0					
ANR	1369595	Identifier	l_true		1369537	1					
ANR	1369596	AssignmentExpression	l_true = - 1		1369537	2		=			
ANR	1369597	Identifier	l_true		1369537	0					
ANR	1369598	UnaryOperationExpression	- 1		1369537	1					
ANR	1369599	UnaryOperator	-		1369537	0					
ANR	1369600	PrimaryExpression	1		1369537	1					
ANR	1369601	IdentifierDeclStatement	HashTable hash ;	126:1:5309:5323	1369537	7	True				
ANR	1369602	IdentifierDecl	hash		1369537	0					
ANR	1369603	IdentifierDeclType	HashTable		1369537	0					
ANR	1369604	Identifier	hash		1369537	1					
ANR	1369605	IdentifierDeclStatement	zend_string * key = NULL ;	127:1:5326:5349	1369537	8	True				
ANR	1369606	IdentifierDecl	* key = NULL		1369537	0					
ANR	1369607	IdentifierDeclType	zend_string *		1369537	0					
ANR	1369608	Identifier	key		1369537	1					
ANR	1369609	AssignmentExpression	* key = NULL		1369537	2		=			
ANR	1369610	Identifier	NULL		1369537	0					
ANR	1369611	Identifier	NULL		1369537	1					
ANR	1369612	IdentifierDeclStatement	void * checkpoint = zend_arena_checkpoint ( ctx -> arena ) ;	128:1:5352:5404	1369537	9	True				
ANR	1369613	IdentifierDecl	* checkpoint = zend_arena_checkpoint ( ctx -> arena )		1369537	0					
ANR	1369614	IdentifierDeclType	void *		1369537	0					
ANR	1369615	Identifier	checkpoint		1369537	1					
ANR	1369616	AssignmentExpression	* checkpoint = zend_arena_checkpoint ( ctx -> arena )		1369537	2		=			
ANR	1369617	Identifier	checkpoint		1369537	0					
ANR	1369618	CallExpression	zend_arena_checkpoint ( ctx -> arena )		1369537	1					
ANR	1369619	Callee	zend_arena_checkpoint		1369537	0					
ANR	1369620	Identifier	zend_arena_checkpoint		1369537	0					
ANR	1369621	ArgumentList	ctx -> arena		1369537	1					
ANR	1369622	Argument	ctx -> arena		1369537	0					
ANR	1369623	PtrMemberAccess	ctx -> arena		1369537	0					
ANR	1369624	Identifier	ctx		1369537	0					
ANR	1369625	Identifier	arena		1369537	1					
ANR	1369626	IfStatement	if ( op_array -> last_literal )		1369537	10					
ANR	1369627	Condition	op_array -> last_literal	130:5:5412:5433	1369537	0	True				
ANR	1369628	PtrMemberAccess	op_array -> last_literal		1369537	0					
ANR	1369629	Identifier	op_array		1369537	0					
ANR	1369630	Identifier	last_literal		1369537	1					
ANR	1369631	CompoundStatement		13:29:277:277	1369537	1					
ANR	1369632	ExpressionStatement	cache_size = 0	131:2:5440:5454	1369537	0	True				
ANR	1369633	AssignmentExpression	cache_size = 0		1369537	0		=			
ANR	1369634	Identifier	cache_size		1369537	0					
ANR	1369635	PrimaryExpression	0		1369537	1					
ANR	1369636	ExpressionStatement	"info = ( literal_info * ) zend_arena_calloc ( & ctx -> arena , op_array -> last_literal , sizeof ( literal_info ) )"	132:2:5458:5556	1369537	1	True				
ANR	1369637	AssignmentExpression	"info = ( literal_info * ) zend_arena_calloc ( & ctx -> arena , op_array -> last_literal , sizeof ( literal_info ) )"		1369537	0		=			
ANR	1369638	Identifier	info		1369537	0					
ANR	1369639	CastExpression	"( literal_info * ) zend_arena_calloc ( & ctx -> arena , op_array -> last_literal , sizeof ( literal_info ) )"		1369537	1					
ANR	1369640	CastTarget	literal_info *		1369537	0					
ANR	1369641	CallExpression	"zend_arena_calloc ( & ctx -> arena , op_array -> last_literal , sizeof ( literal_info ) )"		1369537	1					
ANR	1369642	Callee	zend_arena_calloc		1369537	0					
ANR	1369643	Identifier	zend_arena_calloc		1369537	0					
ANR	1369644	ArgumentList	& ctx -> arena		1369537	1					
ANR	1369645	Argument	& ctx -> arena		1369537	0					
ANR	1369646	UnaryOperationExpression	& ctx -> arena		1369537	0					
ANR	1369647	UnaryOperator	&		1369537	0					
ANR	1369648	PtrMemberAccess	ctx -> arena		1369537	1					
ANR	1369649	Identifier	ctx		1369537	0					
ANR	1369650	Identifier	arena		1369537	1					
ANR	1369651	Argument	op_array -> last_literal		1369537	1					
ANR	1369652	PtrMemberAccess	op_array -> last_literal		1369537	0					
ANR	1369653	Identifier	op_array		1369537	0					
ANR	1369654	Identifier	last_literal		1369537	1					
ANR	1369655	Argument	sizeof ( literal_info )		1369537	2					
ANR	1369656	SizeofExpression	sizeof ( literal_info )		1369537	0					
ANR	1369657	Sizeof	sizeof		1369537	0					
ANR	1369658	SizeofOperand	literal_info		1369537	1					
ANR	1369659	ExpressionStatement	opline = op_array -> opcodes	135:2:5604:5630	1369537	2	True				
ANR	1369660	AssignmentExpression	opline = op_array -> opcodes		1369537	0		=			
ANR	1369661	Identifier	opline		1369537	0					
ANR	1369662	PtrMemberAccess	op_array -> opcodes		1369537	1					
ANR	1369663	Identifier	op_array		1369537	0					
ANR	1369664	Identifier	opcodes		1369537	1					
ANR	1369665	ExpressionStatement	end = opline + op_array -> last	136:2:5634:5663	1369537	3	True				
ANR	1369666	AssignmentExpression	end = opline + op_array -> last		1369537	0		=			
ANR	1369667	Identifier	end		1369537	0					
ANR	1369668	AdditiveExpression	opline + op_array -> last		1369537	1		+			
ANR	1369669	Identifier	opline		1369537	0					
ANR	1369670	PtrMemberAccess	op_array -> last		1369537	1					
ANR	1369671	Identifier	op_array		1369537	0					
ANR	1369672	Identifier	last		1369537	1					
ANR	1369673	WhileStatement	while ( opline < end )		1369537	4					
ANR	1369674	Condition	opline < end	137:9:5674:5685	1369537	0	True				
ANR	1369675	RelationalExpression	opline < end		1369537	0		<			
ANR	1369676	Identifier	opline		1369537	0					
ANR	1369677	Identifier	end		1369537	1					
ANR	1369678	CompoundStatement		20:23:529:529	1369537	1					
ANR	1369679	SwitchStatement	switch ( opline -> opcode )		1369537	0					
ANR	1369680	Condition	opline -> opcode	138:11:5701:5714	1369537	0	True				
ANR	1369681	PtrMemberAccess	opline -> opcode		1369537	0					
ANR	1369682	Identifier	opline		1369537	0					
ANR	1369683	Identifier	opcode		1369537	1					
ANR	1369684	CompoundStatement		21:27:558:558	1369537	1					
ANR	1369685	Label	case ZEND_INIT_FCALL :	139:4:5723:5743	1369537	0	True				
ANR	1369686	Identifier	ZEND_INIT_FCALL		1369537	0					
ANR	1369687	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_FUNC , 1 , 1 , 1 )"	140:5:5750:5807	1369537	1	True				
ANR	1369688	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_FUNC , 1 , 1 , 1 )"		1369537	0					
ANR	1369689	Callee	LITERAL_INFO		1369537	0					
ANR	1369690	Identifier	LITERAL_INFO		1369537	0					
ANR	1369691	ArgumentList	opline -> op2 . constant		1369537	1					
ANR	1369692	Argument	opline -> op2 . constant		1369537	0					
ANR	1369693	MemberAccess	opline -> op2 . constant		1369537	0					
ANR	1369694	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1369695	Identifier	opline		1369537	0					
ANR	1369696	Identifier	op2		1369537	1					
ANR	1369697	Identifier	constant		1369537	1					
ANR	1369698	Argument	LITERAL_FUNC		1369537	1					
ANR	1369699	Identifier	LITERAL_FUNC		1369537	0					
ANR	1369700	Argument	1		1369537	2					
ANR	1369701	PrimaryExpression	1		1369537	0					
ANR	1369702	Argument	1		1369537	3					
ANR	1369703	PrimaryExpression	1		1369537	0					
ANR	1369704	Argument	1		1369537	4					
ANR	1369705	PrimaryExpression	1		1369537	0					
ANR	1369706	BreakStatement	break ;	141:5:5814:5819	1369537	2	True				
ANR	1369707	Label	case ZEND_INIT_FCALL_BY_NAME :	142:4:5825:5853	1369537	3	True				
ANR	1369708	Identifier	ZEND_INIT_FCALL_BY_NAME		1369537	0					
ANR	1369709	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_FUNC , 1 , 1 , 2 )"	143:5:5860:5917	1369537	4	True				
ANR	1369710	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_FUNC , 1 , 1 , 2 )"		1369537	0					
ANR	1369711	Callee	LITERAL_INFO		1369537	0					
ANR	1369712	Identifier	LITERAL_INFO		1369537	0					
ANR	1369713	ArgumentList	opline -> op2 . constant		1369537	1					
ANR	1369714	Argument	opline -> op2 . constant		1369537	0					
ANR	1369715	MemberAccess	opline -> op2 . constant		1369537	0					
ANR	1369716	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1369717	Identifier	opline		1369537	0					
ANR	1369718	Identifier	op2		1369537	1					
ANR	1369719	Identifier	constant		1369537	1					
ANR	1369720	Argument	LITERAL_FUNC		1369537	1					
ANR	1369721	Identifier	LITERAL_FUNC		1369537	0					
ANR	1369722	Argument	1		1369537	2					
ANR	1369723	PrimaryExpression	1		1369537	0					
ANR	1369724	Argument	1		1369537	3					
ANR	1369725	PrimaryExpression	1		1369537	0					
ANR	1369726	Argument	2		1369537	4					
ANR	1369727	PrimaryExpression	2		1369537	0					
ANR	1369728	BreakStatement	break ;	144:5:5924:5929	1369537	5	True				
ANR	1369729	Label	case ZEND_INIT_NS_FCALL_BY_NAME :	145:4:5935:5966	1369537	6	True				
ANR	1369730	Identifier	ZEND_INIT_NS_FCALL_BY_NAME		1369537	0					
ANR	1369731	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_FUNC , 1 , 1 , 3 )"	146:5:5973:6030	1369537	7	True				
ANR	1369732	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_FUNC , 1 , 1 , 3 )"		1369537	0					
ANR	1369733	Callee	LITERAL_INFO		1369537	0					
ANR	1369734	Identifier	LITERAL_INFO		1369537	0					
ANR	1369735	ArgumentList	opline -> op2 . constant		1369537	1					
ANR	1369736	Argument	opline -> op2 . constant		1369537	0					
ANR	1369737	MemberAccess	opline -> op2 . constant		1369537	0					
ANR	1369738	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1369739	Identifier	opline		1369537	0					
ANR	1369740	Identifier	op2		1369537	1					
ANR	1369741	Identifier	constant		1369537	1					
ANR	1369742	Argument	LITERAL_FUNC		1369537	1					
ANR	1369743	Identifier	LITERAL_FUNC		1369537	0					
ANR	1369744	Argument	1		1369537	2					
ANR	1369745	PrimaryExpression	1		1369537	0					
ANR	1369746	Argument	1		1369537	3					
ANR	1369747	PrimaryExpression	1		1369537	0					
ANR	1369748	Argument	3		1369537	4					
ANR	1369749	PrimaryExpression	3		1369537	0					
ANR	1369750	BreakStatement	break ;	147:5:6037:6042	1369537	8	True				
ANR	1369751	Label	case ZEND_INIT_METHOD_CALL :	148:4:6048:6074	1369537	9	True				
ANR	1369752	Identifier	ZEND_INIT_METHOD_CALL		1369537	0					
ANR	1369753	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_CONST )		1369537	10					
ANR	1369754	Condition	ZEND_OP2_TYPE ( opline ) == IS_CONST	149:9:6085:6117	1369537	0	True				
ANR	1369755	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		1369537	0		==			
ANR	1369756	CallExpression	ZEND_OP2_TYPE ( opline )		1369537	0					
ANR	1369757	Callee	ZEND_OP2_TYPE		1369537	0					
ANR	1369758	Identifier	ZEND_OP2_TYPE		1369537	0					
ANR	1369759	ArgumentList	opline		1369537	1					
ANR	1369760	Argument	opline		1369537	0					
ANR	1369761	Identifier	opline		1369537	0					
ANR	1369762	Identifier	IS_CONST		1369537	1					
ANR	1369763	CompoundStatement		32:44:961:961	1369537	1					
ANR	1369764	ExpressionStatement	"optimizer_literal_obj_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_METHOD , 2 , 2 , op_array )"	150:6:6128:6288	1369537	0	True				
ANR	1369765	CallExpression	"optimizer_literal_obj_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_METHOD , 2 , 2 , op_array )"		1369537	0					
ANR	1369766	Callee	optimizer_literal_obj_info		1369537	0					
ANR	1369767	Identifier	optimizer_literal_obj_info		1369537	0					
ANR	1369768	ArgumentList	info		1369537	1					
ANR	1369769	Argument	info		1369537	0					
ANR	1369770	Identifier	info		1369537	0					
ANR	1369771	Argument	opline -> op1_type		1369537	1					
ANR	1369772	PtrMemberAccess	opline -> op1_type		1369537	0					
ANR	1369773	Identifier	opline		1369537	0					
ANR	1369774	Identifier	op1_type		1369537	1					
ANR	1369775	Argument	opline -> op1		1369537	2					
ANR	1369776	PtrMemberAccess	opline -> op1		1369537	0					
ANR	1369777	Identifier	opline		1369537	0					
ANR	1369778	Identifier	op1		1369537	1					
ANR	1369779	Argument	opline -> op2 . constant		1369537	3					
ANR	1369780	MemberAccess	opline -> op2 . constant		1369537	0					
ANR	1369781	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1369782	Identifier	opline		1369537	0					
ANR	1369783	Identifier	op2		1369537	1					
ANR	1369784	Identifier	constant		1369537	1					
ANR	1369785	Argument	LITERAL_METHOD		1369537	4					
ANR	1369786	Identifier	LITERAL_METHOD		1369537	0					
ANR	1369787	Argument	2		1369537	5					
ANR	1369788	PrimaryExpression	2		1369537	0					
ANR	1369789	Argument	2		1369537	6					
ANR	1369790	PrimaryExpression	2		1369537	0					
ANR	1369791	Argument	op_array		1369537	7					
ANR	1369792	Identifier	op_array		1369537	0					
ANR	1369793	BreakStatement	break ;	158:5:6302:6307	1369537	11	True				
ANR	1369794	Label	case ZEND_INIT_STATIC_METHOD_CALL :	159:4:6313:6346	1369537	12	True				
ANR	1369795	Identifier	ZEND_INIT_STATIC_METHOD_CALL		1369537	0					
ANR	1369796	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST )		1369537	13					
ANR	1369797	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST	160:9:6357:6389	1369537	0	True				
ANR	1369798	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		1369537	0		==			
ANR	1369799	CallExpression	ZEND_OP1_TYPE ( opline )		1369537	0					
ANR	1369800	Callee	ZEND_OP1_TYPE		1369537	0					
ANR	1369801	Identifier	ZEND_OP1_TYPE		1369537	0					
ANR	1369802	ArgumentList	opline		1369537	1					
ANR	1369803	Argument	opline		1369537	0					
ANR	1369804	Identifier	opline		1369537	0					
ANR	1369805	Identifier	IS_CONST		1369537	1					
ANR	1369806	CompoundStatement		43:44:1233:1233	1369537	1					
ANR	1369807	ExpressionStatement	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CLASS , 1 , 1 , 2 )"	161:6:6400:6458	1369537	0	True				
ANR	1369808	CallExpression	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CLASS , 1 , 1 , 2 )"		1369537	0					
ANR	1369809	Callee	LITERAL_INFO		1369537	0					
ANR	1369810	Identifier	LITERAL_INFO		1369537	0					
ANR	1369811	ArgumentList	opline -> op1 . constant		1369537	1					
ANR	1369812	Argument	opline -> op1 . constant		1369537	0					
ANR	1369813	MemberAccess	opline -> op1 . constant		1369537	0					
ANR	1369814	PtrMemberAccess	opline -> op1		1369537	0					
ANR	1369815	Identifier	opline		1369537	0					
ANR	1369816	Identifier	op1		1369537	1					
ANR	1369817	Identifier	constant		1369537	1					
ANR	1369818	Argument	LITERAL_CLASS		1369537	1					
ANR	1369819	Identifier	LITERAL_CLASS		1369537	0					
ANR	1369820	Argument	1		1369537	2					
ANR	1369821	PrimaryExpression	1		1369537	0					
ANR	1369822	Argument	1		1369537	3					
ANR	1369823	PrimaryExpression	1		1369537	0					
ANR	1369824	Argument	2		1369537	4					
ANR	1369825	PrimaryExpression	2		1369537	0					
ANR	1369826	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_CONST )		1369537	14					
ANR	1369827	Condition	ZEND_OP2_TYPE ( opline ) == IS_CONST	163:9:6476:6508	1369537	0	True				
ANR	1369828	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		1369537	0		==			
ANR	1369829	CallExpression	ZEND_OP2_TYPE ( opline )		1369537	0					
ANR	1369830	Callee	ZEND_OP2_TYPE		1369537	0					
ANR	1369831	Identifier	ZEND_OP2_TYPE		1369537	0					
ANR	1369832	ArgumentList	opline		1369537	1					
ANR	1369833	Argument	opline		1369537	0					
ANR	1369834	Identifier	opline		1369537	0					
ANR	1369835	Identifier	IS_CONST		1369537	1					
ANR	1369836	CompoundStatement		46:44:1352:1352	1369537	1					
ANR	1369837	ExpressionStatement	"optimizer_literal_class_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_STATIC_METHOD , ( ZEND_OP1_TYPE ( opline ) == IS_CONST ) ? 1 : 2 , 2 , op_array )"	164:6:6519:6730	1369537	0	True				
ANR	1369838	CallExpression	"optimizer_literal_class_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_STATIC_METHOD , ( ZEND_OP1_TYPE ( opline ) == IS_CONST ) ? 1 : 2 , 2 , op_array )"		1369537	0					
ANR	1369839	Callee	optimizer_literal_class_info		1369537	0					
ANR	1369840	Identifier	optimizer_literal_class_info		1369537	0					
ANR	1369841	ArgumentList	info		1369537	1					
ANR	1369842	Argument	info		1369537	0					
ANR	1369843	Identifier	info		1369537	0					
ANR	1369844	Argument	opline -> op1_type		1369537	1					
ANR	1369845	PtrMemberAccess	opline -> op1_type		1369537	0					
ANR	1369846	Identifier	opline		1369537	0					
ANR	1369847	Identifier	op1_type		1369537	1					
ANR	1369848	Argument	opline -> op1		1369537	2					
ANR	1369849	PtrMemberAccess	opline -> op1		1369537	0					
ANR	1369850	Identifier	opline		1369537	0					
ANR	1369851	Identifier	op1		1369537	1					
ANR	1369852	Argument	opline -> op2 . constant		1369537	3					
ANR	1369853	MemberAccess	opline -> op2 . constant		1369537	0					
ANR	1369854	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1369855	Identifier	opline		1369537	0					
ANR	1369856	Identifier	op2		1369537	1					
ANR	1369857	Identifier	constant		1369537	1					
ANR	1369858	Argument	LITERAL_STATIC_METHOD		1369537	4					
ANR	1369859	Identifier	LITERAL_STATIC_METHOD		1369537	0					
ANR	1369860	Argument	( ZEND_OP1_TYPE ( opline ) == IS_CONST ) ? 1 : 2		1369537	5					
ANR	1369861	ConditionalExpression	( ZEND_OP1_TYPE ( opline ) == IS_CONST ) ? 1 : 2		1369537	0					
ANR	1369862	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST		1369537	0					
ANR	1369863	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		1369537	0		==			
ANR	1369864	CallExpression	ZEND_OP1_TYPE ( opline )		1369537	0					
ANR	1369865	Callee	ZEND_OP1_TYPE		1369537	0					
ANR	1369866	Identifier	ZEND_OP1_TYPE		1369537	0					
ANR	1369867	ArgumentList	opline		1369537	1					
ANR	1369868	Argument	opline		1369537	0					
ANR	1369869	Identifier	opline		1369537	0					
ANR	1369870	Identifier	IS_CONST		1369537	1					
ANR	1369871	PrimaryExpression	1		1369537	1					
ANR	1369872	PrimaryExpression	2		1369537	2					
ANR	1369873	Argument	2		1369537	6					
ANR	1369874	PrimaryExpression	2		1369537	0					
ANR	1369875	Argument	op_array		1369537	7					
ANR	1369876	Identifier	op_array		1369537	0					
ANR	1369877	BreakStatement	break ;	172:5:6744:6749	1369537	15	True				
ANR	1369878	Label	case ZEND_CATCH :	173:4:6755:6770	1369537	16	True				
ANR	1369879	Identifier	ZEND_CATCH		1369537	0					
ANR	1369880	ExpressionStatement	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CLASS , 1 , 1 , 2 )"	174:5:6777:6835	1369537	17	True				
ANR	1369881	CallExpression	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CLASS , 1 , 1 , 2 )"		1369537	0					
ANR	1369882	Callee	LITERAL_INFO		1369537	0					
ANR	1369883	Identifier	LITERAL_INFO		1369537	0					
ANR	1369884	ArgumentList	opline -> op1 . constant		1369537	1					
ANR	1369885	Argument	opline -> op1 . constant		1369537	0					
ANR	1369886	MemberAccess	opline -> op1 . constant		1369537	0					
ANR	1369887	PtrMemberAccess	opline -> op1		1369537	0					
ANR	1369888	Identifier	opline		1369537	0					
ANR	1369889	Identifier	op1		1369537	1					
ANR	1369890	Identifier	constant		1369537	1					
ANR	1369891	Argument	LITERAL_CLASS		1369537	1					
ANR	1369892	Identifier	LITERAL_CLASS		1369537	0					
ANR	1369893	Argument	1		1369537	2					
ANR	1369894	PrimaryExpression	1		1369537	0					
ANR	1369895	Argument	1		1369537	3					
ANR	1369896	PrimaryExpression	1		1369537	0					
ANR	1369897	Argument	2		1369537	4					
ANR	1369898	PrimaryExpression	2		1369537	0					
ANR	1369899	BreakStatement	break ;	175:5:6842:6847	1369537	18	True				
ANR	1369900	Label	case ZEND_DEFINED :	176:4:6853:6870	1369537	19	True				
ANR	1369901	Identifier	ZEND_DEFINED		1369537	0					
ANR	1369902	ExpressionStatement	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CONST , 1 , 1 , 2 )"	177:5:6877:6935	1369537	20	True				
ANR	1369903	CallExpression	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CONST , 1 , 1 , 2 )"		1369537	0					
ANR	1369904	Callee	LITERAL_INFO		1369537	0					
ANR	1369905	Identifier	LITERAL_INFO		1369537	0					
ANR	1369906	ArgumentList	opline -> op1 . constant		1369537	1					
ANR	1369907	Argument	opline -> op1 . constant		1369537	0					
ANR	1369908	MemberAccess	opline -> op1 . constant		1369537	0					
ANR	1369909	PtrMemberAccess	opline -> op1		1369537	0					
ANR	1369910	Identifier	opline		1369537	0					
ANR	1369911	Identifier	op1		1369537	1					
ANR	1369912	Identifier	constant		1369537	1					
ANR	1369913	Argument	LITERAL_CONST		1369537	1					
ANR	1369914	Identifier	LITERAL_CONST		1369537	0					
ANR	1369915	Argument	1		1369537	2					
ANR	1369916	PrimaryExpression	1		1369537	0					
ANR	1369917	Argument	1		1369537	3					
ANR	1369918	PrimaryExpression	1		1369537	0					
ANR	1369919	Argument	2		1369537	4					
ANR	1369920	PrimaryExpression	2		1369537	0					
ANR	1369921	BreakStatement	break ;	178:5:6942:6947	1369537	21	True				
ANR	1369922	Label	case ZEND_FETCH_CONSTANT :	179:4:6953:6977	1369537	22	True				
ANR	1369923	Identifier	ZEND_FETCH_CONSTANT		1369537	0					
ANR	1369924	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_UNUSED )		1369537	23					
ANR	1369925	Condition	ZEND_OP1_TYPE ( opline ) == IS_UNUSED	180:9:6988:7021	1369537	0	True				
ANR	1369926	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_UNUSED		1369537	0		==			
ANR	1369927	CallExpression	ZEND_OP1_TYPE ( opline )		1369537	0					
ANR	1369928	Callee	ZEND_OP1_TYPE		1369537	0					
ANR	1369929	Identifier	ZEND_OP1_TYPE		1369537	0					
ANR	1369930	ArgumentList	opline		1369537	1					
ANR	1369931	Argument	opline		1369537	0					
ANR	1369932	Identifier	opline		1369537	0					
ANR	1369933	Identifier	IS_UNUSED		1369537	1					
ANR	1369934	CompoundStatement		63:45:1865:1865	1369537	1					
ANR	1369935	IfStatement	if ( ( opline -> extended_value & ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED ) ) == ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED ) )		1369537	0					
ANR	1369936	Condition	( opline -> extended_value & ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED ) ) == ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED )	181:10:7036:7166	1369537	0	True				
ANR	1369937	EqualityExpression	( opline -> extended_value & ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED ) ) == ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED )		1369537	0		==			
ANR	1369938	BitAndExpression	opline -> extended_value & ( IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED )		1369537	0		&			
ANR	1369939	PtrMemberAccess	opline -> extended_value		1369537	0					
ANR	1369940	Identifier	opline		1369537	0					
ANR	1369941	Identifier	extended_value		1369537	1					
ANR	1369942	InclusiveOrExpression	IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED		1369537	1		|			
ANR	1369943	Identifier	IS_CONSTANT_IN_NAMESPACE		1369537	0					
ANR	1369944	Identifier	IS_CONSTANT_UNQUALIFIED		1369537	1					
ANR	1369945	InclusiveOrExpression	IS_CONSTANT_IN_NAMESPACE | IS_CONSTANT_UNQUALIFIED		1369537	1		|			
ANR	1369946	Identifier	IS_CONSTANT_IN_NAMESPACE		1369537	0					
ANR	1369947	Identifier	IS_CONSTANT_UNQUALIFIED		1369537	1					
ANR	1369948	CompoundStatement		64:143:2010:2010	1369537	1					
ANR	1369949	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_CONST , 1 , 1 , 5 )"	182:7:7178:7236	1369537	0	True				
ANR	1369950	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_CONST , 1 , 1 , 5 )"		1369537	0					
ANR	1369951	Callee	LITERAL_INFO		1369537	0					
ANR	1369952	Identifier	LITERAL_INFO		1369537	0					
ANR	1369953	ArgumentList	opline -> op2 . constant		1369537	1					
ANR	1369954	Argument	opline -> op2 . constant		1369537	0					
ANR	1369955	MemberAccess	opline -> op2 . constant		1369537	0					
ANR	1369956	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1369957	Identifier	opline		1369537	0					
ANR	1369958	Identifier	op2		1369537	1					
ANR	1369959	Identifier	constant		1369537	1					
ANR	1369960	Argument	LITERAL_CONST		1369537	1					
ANR	1369961	Identifier	LITERAL_CONST		1369537	0					
ANR	1369962	Argument	1		1369537	2					
ANR	1369963	PrimaryExpression	1		1369537	0					
ANR	1369964	Argument	1		1369537	3					
ANR	1369965	PrimaryExpression	1		1369537	0					
ANR	1369966	Argument	5		1369537	4					
ANR	1369967	PrimaryExpression	5		1369537	0					
ANR	1369968	ElseStatement	else		1369537	0					
ANR	1369969	CompoundStatement		66:13:2092:2092	1369537	0					
ANR	1369970	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_CONST , 1 , 1 , 3 )"	184:7:7260:7318	1369537	0	True				
ANR	1369971	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_CONST , 1 , 1 , 3 )"		1369537	0					
ANR	1369972	Callee	LITERAL_INFO		1369537	0					
ANR	1369973	Identifier	LITERAL_INFO		1369537	0					
ANR	1369974	ArgumentList	opline -> op2 . constant		1369537	1					
ANR	1369975	Argument	opline -> op2 . constant		1369537	0					
ANR	1369976	MemberAccess	opline -> op2 . constant		1369537	0					
ANR	1369977	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1369978	Identifier	opline		1369537	0					
ANR	1369979	Identifier	op2		1369537	1					
ANR	1369980	Identifier	constant		1369537	1					
ANR	1369981	Argument	LITERAL_CONST		1369537	1					
ANR	1369982	Identifier	LITERAL_CONST		1369537	0					
ANR	1369983	Argument	1		1369537	2					
ANR	1369984	PrimaryExpression	1		1369537	0					
ANR	1369985	Argument	1		1369537	3					
ANR	1369986	PrimaryExpression	1		1369537	0					
ANR	1369987	Argument	3		1369537	4					
ANR	1369988	PrimaryExpression	3		1369537	0					
ANR	1369989	ElseStatement	else		1369537	0					
ANR	1369990	CompoundStatement		69:12:2181:2181	1369537	0					
ANR	1369991	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST )		1369537	0					
ANR	1369992	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST	187:10:7352:7384	1369537	0	True				
ANR	1369993	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		1369537	0		==			
ANR	1369994	CallExpression	ZEND_OP1_TYPE ( opline )		1369537	0					
ANR	1369995	Callee	ZEND_OP1_TYPE		1369537	0					
ANR	1369996	Identifier	ZEND_OP1_TYPE		1369537	0					
ANR	1369997	ArgumentList	opline		1369537	1					
ANR	1369998	Argument	opline		1369537	0					
ANR	1369999	Identifier	opline		1369537	0					
ANR	1370000	Identifier	IS_CONST		1369537	1					
ANR	1370001	CompoundStatement		70:45:2228:2228	1369537	1					
ANR	1370002	ExpressionStatement	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CLASS , 1 , 1 , 2 )"	188:7:7396:7454	1369537	0	True				
ANR	1370003	CallExpression	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CLASS , 1 , 1 , 2 )"		1369537	0					
ANR	1370004	Callee	LITERAL_INFO		1369537	0					
ANR	1370005	Identifier	LITERAL_INFO		1369537	0					
ANR	1370006	ArgumentList	opline -> op1 . constant		1369537	1					
ANR	1370007	Argument	opline -> op1 . constant		1369537	0					
ANR	1370008	MemberAccess	opline -> op1 . constant		1369537	0					
ANR	1370009	PtrMemberAccess	opline -> op1		1369537	0					
ANR	1370010	Identifier	opline		1369537	0					
ANR	1370011	Identifier	op1		1369537	1					
ANR	1370012	Identifier	constant		1369537	1					
ANR	1370013	Argument	LITERAL_CLASS		1369537	1					
ANR	1370014	Identifier	LITERAL_CLASS		1369537	0					
ANR	1370015	Argument	1		1369537	2					
ANR	1370016	PrimaryExpression	1		1369537	0					
ANR	1370017	Argument	1		1369537	3					
ANR	1370018	PrimaryExpression	1		1369537	0					
ANR	1370019	Argument	2		1369537	4					
ANR	1370020	PrimaryExpression	2		1369537	0					
ANR	1370021	ExpressionStatement	"optimizer_literal_class_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_CLASS_CONST , ( ZEND_OP1_TYPE ( opline ) == IS_CONST ) ? 1 : 2 , 1 , op_array )"	190:6:7470:7679	1369537	1	True				
ANR	1370022	CallExpression	"optimizer_literal_class_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_CLASS_CONST , ( ZEND_OP1_TYPE ( opline ) == IS_CONST ) ? 1 : 2 , 1 , op_array )"		1369537	0					
ANR	1370023	Callee	optimizer_literal_class_info		1369537	0					
ANR	1370024	Identifier	optimizer_literal_class_info		1369537	0					
ANR	1370025	ArgumentList	info		1369537	1					
ANR	1370026	Argument	info		1369537	0					
ANR	1370027	Identifier	info		1369537	0					
ANR	1370028	Argument	opline -> op1_type		1369537	1					
ANR	1370029	PtrMemberAccess	opline -> op1_type		1369537	0					
ANR	1370030	Identifier	opline		1369537	0					
ANR	1370031	Identifier	op1_type		1369537	1					
ANR	1370032	Argument	opline -> op1		1369537	2					
ANR	1370033	PtrMemberAccess	opline -> op1		1369537	0					
ANR	1370034	Identifier	opline		1369537	0					
ANR	1370035	Identifier	op1		1369537	1					
ANR	1370036	Argument	opline -> op2 . constant		1369537	3					
ANR	1370037	MemberAccess	opline -> op2 . constant		1369537	0					
ANR	1370038	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1370039	Identifier	opline		1369537	0					
ANR	1370040	Identifier	op2		1369537	1					
ANR	1370041	Identifier	constant		1369537	1					
ANR	1370042	Argument	LITERAL_CLASS_CONST		1369537	4					
ANR	1370043	Identifier	LITERAL_CLASS_CONST		1369537	0					
ANR	1370044	Argument	( ZEND_OP1_TYPE ( opline ) == IS_CONST ) ? 1 : 2		1369537	5					
ANR	1370045	ConditionalExpression	( ZEND_OP1_TYPE ( opline ) == IS_CONST ) ? 1 : 2		1369537	0					
ANR	1370046	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST		1369537	0					
ANR	1370047	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		1369537	0		==			
ANR	1370048	CallExpression	ZEND_OP1_TYPE ( opline )		1369537	0					
ANR	1370049	Callee	ZEND_OP1_TYPE		1369537	0					
ANR	1370050	Identifier	ZEND_OP1_TYPE		1369537	0					
ANR	1370051	ArgumentList	opline		1369537	1					
ANR	1370052	Argument	opline		1369537	0					
ANR	1370053	Identifier	opline		1369537	0					
ANR	1370054	Identifier	IS_CONST		1369537	1					
ANR	1370055	PrimaryExpression	1		1369537	1					
ANR	1370056	PrimaryExpression	2		1369537	2					
ANR	1370057	Argument	1		1369537	6					
ANR	1370058	PrimaryExpression	1		1369537	0					
ANR	1370059	Argument	op_array		1369537	7					
ANR	1370060	Identifier	op_array		1369537	0					
ANR	1370061	BreakStatement	break ;	198:5:7693:7698	1369537	24	True				
ANR	1370062	Label	case ZEND_FETCH_R :	199:4:7704:7721	1369537	25	True				
ANR	1370063	Identifier	ZEND_FETCH_R		1369537	0					
ANR	1370064	Label	case ZEND_FETCH_W :	200:4:7727:7744	1369537	26	True				
ANR	1370065	Identifier	ZEND_FETCH_W		1369537	0					
ANR	1370066	Label	case ZEND_FETCH_RW :	201:4:7750:7768	1369537	27	True				
ANR	1370067	Identifier	ZEND_FETCH_RW		1369537	0					
ANR	1370068	Label	case ZEND_FETCH_IS :	202:4:7774:7792	1369537	28	True				
ANR	1370069	Identifier	ZEND_FETCH_IS		1369537	0					
ANR	1370070	Label	case ZEND_FETCH_UNSET :	203:4:7798:7819	1369537	29	True				
ANR	1370071	Identifier	ZEND_FETCH_UNSET		1369537	0					
ANR	1370072	Label	case ZEND_FETCH_FUNC_ARG :	204:4:7825:7849	1369537	30	True				
ANR	1370073	Identifier	ZEND_FETCH_FUNC_ARG		1369537	0					
ANR	1370074	Label	case ZEND_UNSET_VAR :	205:4:7855:7874	1369537	31	True				
ANR	1370075	Identifier	ZEND_UNSET_VAR		1369537	0					
ANR	1370076	Label	case ZEND_ISSET_ISEMPTY_VAR :	206:4:7880:7907	1369537	32	True				
ANR	1370077	Identifier	ZEND_ISSET_ISEMPTY_VAR		1369537	0					
ANR	1370078	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_UNUSED )		1369537	33					
ANR	1370079	Condition	ZEND_OP2_TYPE ( opline ) == IS_UNUSED	207:9:7918:7951	1369537	0	True				
ANR	1370080	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_UNUSED		1369537	0		==			
ANR	1370081	CallExpression	ZEND_OP2_TYPE ( opline )		1369537	0					
ANR	1370082	Callee	ZEND_OP2_TYPE		1369537	0					
ANR	1370083	Identifier	ZEND_OP2_TYPE		1369537	0					
ANR	1370084	ArgumentList	opline		1369537	1					
ANR	1370085	Argument	opline		1369537	0					
ANR	1370086	Identifier	opline		1369537	0					
ANR	1370087	Identifier	IS_UNUSED		1369537	1					
ANR	1370088	CompoundStatement		90:45:2795:2795	1369537	1					
ANR	1370089	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST )		1369537	0					
ANR	1370090	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST	208:10:7966:7998	1369537	0	True				
ANR	1370091	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		1369537	0		==			
ANR	1370092	CallExpression	ZEND_OP1_TYPE ( opline )		1369537	0					
ANR	1370093	Callee	ZEND_OP1_TYPE		1369537	0					
ANR	1370094	Identifier	ZEND_OP1_TYPE		1369537	0					
ANR	1370095	ArgumentList	opline		1369537	1					
ANR	1370096	Argument	opline		1369537	0					
ANR	1370097	Identifier	opline		1369537	0					
ANR	1370098	Identifier	IS_CONST		1369537	1					
ANR	1370099	CompoundStatement		91:45:2842:2842	1369537	1					
ANR	1370100	ExpressionStatement	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_VALUE , 1 , 0 , 1 )"	209:7:8010:8068	1369537	0	True				
ANR	1370101	CallExpression	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_VALUE , 1 , 0 , 1 )"		1369537	0					
ANR	1370102	Callee	LITERAL_INFO		1369537	0					
ANR	1370103	Identifier	LITERAL_INFO		1369537	0					
ANR	1370104	ArgumentList	opline -> op1 . constant		1369537	1					
ANR	1370105	Argument	opline -> op1 . constant		1369537	0					
ANR	1370106	MemberAccess	opline -> op1 . constant		1369537	0					
ANR	1370107	PtrMemberAccess	opline -> op1		1369537	0					
ANR	1370108	Identifier	opline		1369537	0					
ANR	1370109	Identifier	op1		1369537	1					
ANR	1370110	Identifier	constant		1369537	1					
ANR	1370111	Argument	LITERAL_VALUE		1369537	1					
ANR	1370112	Identifier	LITERAL_VALUE		1369537	0					
ANR	1370113	Argument	1		1369537	2					
ANR	1370114	PrimaryExpression	1		1369537	0					
ANR	1370115	Argument	0		1369537	3					
ANR	1370116	PrimaryExpression	0		1369537	0					
ANR	1370117	Argument	1		1369537	4					
ANR	1370118	PrimaryExpression	1		1369537	0					
ANR	1370119	ElseStatement	else		1369537	0					
ANR	1370120	CompoundStatement		94:12:2931:2931	1369537	0					
ANR	1370121	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_CONST )		1369537	0					
ANR	1370122	Condition	ZEND_OP2_TYPE ( opline ) == IS_CONST	212:10:8102:8134	1369537	0	True				
ANR	1370123	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		1369537	0		==			
ANR	1370124	CallExpression	ZEND_OP2_TYPE ( opline )		1369537	0					
ANR	1370125	Callee	ZEND_OP2_TYPE		1369537	0					
ANR	1370126	Identifier	ZEND_OP2_TYPE		1369537	0					
ANR	1370127	ArgumentList	opline		1369537	1					
ANR	1370128	Argument	opline		1369537	0					
ANR	1370129	Identifier	opline		1369537	0					
ANR	1370130	Identifier	IS_CONST		1369537	1					
ANR	1370131	CompoundStatement		95:45:2978:2978	1369537	1					
ANR	1370132	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_CLASS , 1 , 1 , 2 )"	213:7:8146:8204	1369537	0	True				
ANR	1370133	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_CLASS , 1 , 1 , 2 )"		1369537	0					
ANR	1370134	Callee	LITERAL_INFO		1369537	0					
ANR	1370135	Identifier	LITERAL_INFO		1369537	0					
ANR	1370136	ArgumentList	opline -> op2 . constant		1369537	1					
ANR	1370137	Argument	opline -> op2 . constant		1369537	0					
ANR	1370138	MemberAccess	opline -> op2 . constant		1369537	0					
ANR	1370139	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1370140	Identifier	opline		1369537	0					
ANR	1370141	Identifier	op2		1369537	1					
ANR	1370142	Identifier	constant		1369537	1					
ANR	1370143	Argument	LITERAL_CLASS		1369537	1					
ANR	1370144	Identifier	LITERAL_CLASS		1369537	0					
ANR	1370145	Argument	1		1369537	2					
ANR	1370146	PrimaryExpression	1		1369537	0					
ANR	1370147	Argument	1		1369537	3					
ANR	1370148	PrimaryExpression	1		1369537	0					
ANR	1370149	Argument	2		1369537	4					
ANR	1370150	PrimaryExpression	2		1369537	0					
ANR	1370151	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST )		1369537	1					
ANR	1370152	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST	215:10:8224:8256	1369537	0	True				
ANR	1370153	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		1369537	0		==			
ANR	1370154	CallExpression	ZEND_OP1_TYPE ( opline )		1369537	0					
ANR	1370155	Callee	ZEND_OP1_TYPE		1369537	0					
ANR	1370156	Identifier	ZEND_OP1_TYPE		1369537	0					
ANR	1370157	ArgumentList	opline		1369537	1					
ANR	1370158	Argument	opline		1369537	0					
ANR	1370159	Identifier	opline		1369537	0					
ANR	1370160	Identifier	IS_CONST		1369537	1					
ANR	1370161	CompoundStatement		98:45:3100:3100	1369537	1					
ANR	1370162	ExpressionStatement	"optimizer_literal_class_info ( info , opline -> op2_type , opline -> op2 , opline -> op1 . constant , LITERAL_STATIC_PROPERTY , 2 , 1 , op_array )"	216:7:8268:8445	1369537	0	True				
ANR	1370163	CallExpression	"optimizer_literal_class_info ( info , opline -> op2_type , opline -> op2 , opline -> op1 . constant , LITERAL_STATIC_PROPERTY , 2 , 1 , op_array )"		1369537	0					
ANR	1370164	Callee	optimizer_literal_class_info		1369537	0					
ANR	1370165	Identifier	optimizer_literal_class_info		1369537	0					
ANR	1370166	ArgumentList	info		1369537	1					
ANR	1370167	Argument	info		1369537	0					
ANR	1370168	Identifier	info		1369537	0					
ANR	1370169	Argument	opline -> op2_type		1369537	1					
ANR	1370170	PtrMemberAccess	opline -> op2_type		1369537	0					
ANR	1370171	Identifier	opline		1369537	0					
ANR	1370172	Identifier	op2_type		1369537	1					
ANR	1370173	Argument	opline -> op2		1369537	2					
ANR	1370174	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1370175	Identifier	opline		1369537	0					
ANR	1370176	Identifier	op2		1369537	1					
ANR	1370177	Argument	opline -> op1 . constant		1369537	3					
ANR	1370178	MemberAccess	opline -> op1 . constant		1369537	0					
ANR	1370179	PtrMemberAccess	opline -> op1		1369537	0					
ANR	1370180	Identifier	opline		1369537	0					
ANR	1370181	Identifier	op1		1369537	1					
ANR	1370182	Identifier	constant		1369537	1					
ANR	1370183	Argument	LITERAL_STATIC_PROPERTY		1369537	4					
ANR	1370184	Identifier	LITERAL_STATIC_PROPERTY		1369537	0					
ANR	1370185	Argument	2		1369537	5					
ANR	1370186	PrimaryExpression	2		1369537	0					
ANR	1370187	Argument	1		1369537	6					
ANR	1370188	PrimaryExpression	1		1369537	0					
ANR	1370189	Argument	op_array		1369537	7					
ANR	1370190	Identifier	op_array		1369537	0					
ANR	1370191	BreakStatement	break ;	225:5:8467:8472	1369537	34	True				
ANR	1370192	Label	case ZEND_FETCH_CLASS :	226:4:8478:8499	1369537	35	True				
ANR	1370193	Identifier	ZEND_FETCH_CLASS		1369537	0					
ANR	1370194	Label	case ZEND_ADD_INTERFACE :	227:4:8505:8528	1369537	36	True				
ANR	1370195	Identifier	ZEND_ADD_INTERFACE		1369537	0					
ANR	1370196	Label	case ZEND_ADD_TRAIT :	228:4:8534:8553	1369537	37	True				
ANR	1370197	Identifier	ZEND_ADD_TRAIT		1369537	0					
ANR	1370198	Label	case ZEND_INSTANCEOF :	229:4:8559:8579	1369537	38	True				
ANR	1370199	Identifier	ZEND_INSTANCEOF		1369537	0					
ANR	1370200	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_CONST )		1369537	39					
ANR	1370201	Condition	ZEND_OP2_TYPE ( opline ) == IS_CONST	230:9:8590:8622	1369537	0	True				
ANR	1370202	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		1369537	0		==			
ANR	1370203	CallExpression	ZEND_OP2_TYPE ( opline )		1369537	0					
ANR	1370204	Callee	ZEND_OP2_TYPE		1369537	0					
ANR	1370205	Identifier	ZEND_OP2_TYPE		1369537	0					
ANR	1370206	ArgumentList	opline		1369537	1					
ANR	1370207	Argument	opline		1369537	0					
ANR	1370208	Identifier	opline		1369537	0					
ANR	1370209	Identifier	IS_CONST		1369537	1					
ANR	1370210	CompoundStatement		113:44:3466:3466	1369537	1					
ANR	1370211	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_CLASS , 1 , 1 , 2 )"	231:6:8633:8691	1369537	0	True				
ANR	1370212	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_CLASS , 1 , 1 , 2 )"		1369537	0					
ANR	1370213	Callee	LITERAL_INFO		1369537	0					
ANR	1370214	Identifier	LITERAL_INFO		1369537	0					
ANR	1370215	ArgumentList	opline -> op2 . constant		1369537	1					
ANR	1370216	Argument	opline -> op2 . constant		1369537	0					
ANR	1370217	MemberAccess	opline -> op2 . constant		1369537	0					
ANR	1370218	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1370219	Identifier	opline		1369537	0					
ANR	1370220	Identifier	op2		1369537	1					
ANR	1370221	Identifier	constant		1369537	1					
ANR	1370222	Argument	LITERAL_CLASS		1369537	1					
ANR	1370223	Identifier	LITERAL_CLASS		1369537	0					
ANR	1370224	Argument	1		1369537	2					
ANR	1370225	PrimaryExpression	1		1369537	0					
ANR	1370226	Argument	1		1369537	3					
ANR	1370227	PrimaryExpression	1		1369537	0					
ANR	1370228	Argument	2		1369537	4					
ANR	1370229	PrimaryExpression	2		1369537	0					
ANR	1370230	BreakStatement	break ;	233:5:8705:8710	1369537	40	True				
ANR	1370231	Label	case ZEND_NEW :	234:4:8716:8729	1369537	41	True				
ANR	1370232	Identifier	ZEND_NEW		1369537	0					
ANR	1370233	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST )		1369537	42					
ANR	1370234	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST	235:9:8740:8772	1369537	0	True				
ANR	1370235	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		1369537	0		==			
ANR	1370236	CallExpression	ZEND_OP1_TYPE ( opline )		1369537	0					
ANR	1370237	Callee	ZEND_OP1_TYPE		1369537	0					
ANR	1370238	Identifier	ZEND_OP1_TYPE		1369537	0					
ANR	1370239	ArgumentList	opline		1369537	1					
ANR	1370240	Argument	opline		1369537	0					
ANR	1370241	Identifier	opline		1369537	0					
ANR	1370242	Identifier	IS_CONST		1369537	1					
ANR	1370243	CompoundStatement		118:44:3616:3616	1369537	1					
ANR	1370244	ExpressionStatement	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CLASS , 1 , 1 , 2 )"	236:6:8783:8841	1369537	0	True				
ANR	1370245	CallExpression	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_CLASS , 1 , 1 , 2 )"		1369537	0					
ANR	1370246	Callee	LITERAL_INFO		1369537	0					
ANR	1370247	Identifier	LITERAL_INFO		1369537	0					
ANR	1370248	ArgumentList	opline -> op1 . constant		1369537	1					
ANR	1370249	Argument	opline -> op1 . constant		1369537	0					
ANR	1370250	MemberAccess	opline -> op1 . constant		1369537	0					
ANR	1370251	PtrMemberAccess	opline -> op1		1369537	0					
ANR	1370252	Identifier	opline		1369537	0					
ANR	1370253	Identifier	op1		1369537	1					
ANR	1370254	Identifier	constant		1369537	1					
ANR	1370255	Argument	LITERAL_CLASS		1369537	1					
ANR	1370256	Identifier	LITERAL_CLASS		1369537	0					
ANR	1370257	Argument	1		1369537	2					
ANR	1370258	PrimaryExpression	1		1369537	0					
ANR	1370259	Argument	1		1369537	3					
ANR	1370260	PrimaryExpression	1		1369537	0					
ANR	1370261	Argument	2		1369537	4					
ANR	1370262	PrimaryExpression	2		1369537	0					
ANR	1370263	BreakStatement	break ;	238:5:8855:8860	1369537	43	True				
ANR	1370264	Label	case ZEND_ASSIGN_OBJ :	239:4:8866:8886	1369537	44	True				
ANR	1370265	Identifier	ZEND_ASSIGN_OBJ		1369537	0					
ANR	1370266	Label	case ZEND_FETCH_OBJ_R :	240:4:8892:8913	1369537	45	True				
ANR	1370267	Identifier	ZEND_FETCH_OBJ_R		1369537	0					
ANR	1370268	Label	case ZEND_FETCH_OBJ_W :	241:4:8919:8940	1369537	46	True				
ANR	1370269	Identifier	ZEND_FETCH_OBJ_W		1369537	0					
ANR	1370270	Label	case ZEND_FETCH_OBJ_RW :	242:4:8946:8968	1369537	47	True				
ANR	1370271	Identifier	ZEND_FETCH_OBJ_RW		1369537	0					
ANR	1370272	Label	case ZEND_FETCH_OBJ_IS :	243:4:8974:8996	1369537	48	True				
ANR	1370273	Identifier	ZEND_FETCH_OBJ_IS		1369537	0					
ANR	1370274	Label	case ZEND_FETCH_OBJ_UNSET :	244:4:9002:9027	1369537	49	True				
ANR	1370275	Identifier	ZEND_FETCH_OBJ_UNSET		1369537	0					
ANR	1370276	Label	case ZEND_FETCH_OBJ_FUNC_ARG :	245:4:9033:9061	1369537	50	True				
ANR	1370277	Identifier	ZEND_FETCH_OBJ_FUNC_ARG		1369537	0					
ANR	1370278	Label	case ZEND_UNSET_OBJ :	246:4:9067:9086	1369537	51	True				
ANR	1370279	Identifier	ZEND_UNSET_OBJ		1369537	0					
ANR	1370280	Label	case ZEND_PRE_INC_OBJ :	247:4:9092:9113	1369537	52	True				
ANR	1370281	Identifier	ZEND_PRE_INC_OBJ		1369537	0					
ANR	1370282	Label	case ZEND_PRE_DEC_OBJ :	248:4:9119:9140	1369537	53	True				
ANR	1370283	Identifier	ZEND_PRE_DEC_OBJ		1369537	0					
ANR	1370284	Label	case ZEND_POST_INC_OBJ :	249:4:9146:9168	1369537	54	True				
ANR	1370285	Identifier	ZEND_POST_INC_OBJ		1369537	0					
ANR	1370286	Label	case ZEND_POST_DEC_OBJ :	250:4:9174:9196	1369537	55	True				
ANR	1370287	Identifier	ZEND_POST_DEC_OBJ		1369537	0					
ANR	1370288	Label	case ZEND_ISSET_ISEMPTY_PROP_OBJ :	251:4:9202:9234	1369537	56	True				
ANR	1370289	Identifier	ZEND_ISSET_ISEMPTY_PROP_OBJ		1369537	0					
ANR	1370290	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_CONST )		1369537	57					
ANR	1370291	Condition	ZEND_OP2_TYPE ( opline ) == IS_CONST	252:9:9245:9277	1369537	0	True				
ANR	1370292	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		1369537	0		==			
ANR	1370293	CallExpression	ZEND_OP2_TYPE ( opline )		1369537	0					
ANR	1370294	Callee	ZEND_OP2_TYPE		1369537	0					
ANR	1370295	Identifier	ZEND_OP2_TYPE		1369537	0					
ANR	1370296	ArgumentList	opline		1369537	1					
ANR	1370297	Argument	opline		1369537	0					
ANR	1370298	Identifier	opline		1369537	0					
ANR	1370299	Identifier	IS_CONST		1369537	1					
ANR	1370300	CompoundStatement		135:44:4121:4121	1369537	1					
ANR	1370301	ExpressionStatement	"optimizer_literal_obj_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_PROPERTY , 2 , 1 , op_array )"	253:6:9288:9450	1369537	0	True				
ANR	1370302	CallExpression	"optimizer_literal_obj_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_PROPERTY , 2 , 1 , op_array )"		1369537	0					
ANR	1370303	Callee	optimizer_literal_obj_info		1369537	0					
ANR	1370304	Identifier	optimizer_literal_obj_info		1369537	0					
ANR	1370305	ArgumentList	info		1369537	1					
ANR	1370306	Argument	info		1369537	0					
ANR	1370307	Identifier	info		1369537	0					
ANR	1370308	Argument	opline -> op1_type		1369537	1					
ANR	1370309	PtrMemberAccess	opline -> op1_type		1369537	0					
ANR	1370310	Identifier	opline		1369537	0					
ANR	1370311	Identifier	op1_type		1369537	1					
ANR	1370312	Argument	opline -> op1		1369537	2					
ANR	1370313	PtrMemberAccess	opline -> op1		1369537	0					
ANR	1370314	Identifier	opline		1369537	0					
ANR	1370315	Identifier	op1		1369537	1					
ANR	1370316	Argument	opline -> op2 . constant		1369537	3					
ANR	1370317	MemberAccess	opline -> op2 . constant		1369537	0					
ANR	1370318	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1370319	Identifier	opline		1369537	0					
ANR	1370320	Identifier	op2		1369537	1					
ANR	1370321	Identifier	constant		1369537	1					
ANR	1370322	Argument	LITERAL_PROPERTY		1369537	4					
ANR	1370323	Identifier	LITERAL_PROPERTY		1369537	0					
ANR	1370324	Argument	2		1369537	5					
ANR	1370325	PrimaryExpression	2		1369537	0					
ANR	1370326	Argument	1		1369537	6					
ANR	1370327	PrimaryExpression	1		1369537	0					
ANR	1370328	Argument	op_array		1369537	7					
ANR	1370329	Identifier	op_array		1369537	0					
ANR	1370330	BreakStatement	break ;	261:5:9464:9469	1369537	58	True				
ANR	1370331	Label	case ZEND_ASSIGN_ADD :	262:4:9475:9495	1369537	59	True				
ANR	1370332	Identifier	ZEND_ASSIGN_ADD		1369537	0					
ANR	1370333	Label	case ZEND_ASSIGN_SUB :	263:4:9501:9521	1369537	60	True				
ANR	1370334	Identifier	ZEND_ASSIGN_SUB		1369537	0					
ANR	1370335	Label	case ZEND_ASSIGN_MUL :	264:4:9527:9547	1369537	61	True				
ANR	1370336	Identifier	ZEND_ASSIGN_MUL		1369537	0					
ANR	1370337	Label	case ZEND_ASSIGN_DIV :	265:4:9553:9573	1369537	62	True				
ANR	1370338	Identifier	ZEND_ASSIGN_DIV		1369537	0					
ANR	1370339	Label	case ZEND_ASSIGN_POW :	266:4:9579:9599	1369537	63	True				
ANR	1370340	Identifier	ZEND_ASSIGN_POW		1369537	0					
ANR	1370341	Label	case ZEND_ASSIGN_MOD :	267:4:9605:9625	1369537	64	True				
ANR	1370342	Identifier	ZEND_ASSIGN_MOD		1369537	0					
ANR	1370343	Label	case ZEND_ASSIGN_SL :	268:4:9631:9650	1369537	65	True				
ANR	1370344	Identifier	ZEND_ASSIGN_SL		1369537	0					
ANR	1370345	Label	case ZEND_ASSIGN_SR :	269:4:9656:9675	1369537	66	True				
ANR	1370346	Identifier	ZEND_ASSIGN_SR		1369537	0					
ANR	1370347	Label	case ZEND_ASSIGN_CONCAT :	270:4:9681:9704	1369537	67	True				
ANR	1370348	Identifier	ZEND_ASSIGN_CONCAT		1369537	0					
ANR	1370349	Label	case ZEND_ASSIGN_BW_OR :	271:4:9710:9732	1369537	68	True				
ANR	1370350	Identifier	ZEND_ASSIGN_BW_OR		1369537	0					
ANR	1370351	Label	case ZEND_ASSIGN_BW_AND :	272:4:9738:9761	1369537	69	True				
ANR	1370352	Identifier	ZEND_ASSIGN_BW_AND		1369537	0					
ANR	1370353	Label	case ZEND_ASSIGN_BW_XOR :	273:4:9767:9790	1369537	70	True				
ANR	1370354	Identifier	ZEND_ASSIGN_BW_XOR		1369537	0					
ANR	1370355	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_CONST )		1369537	71					
ANR	1370356	Condition	ZEND_OP2_TYPE ( opline ) == IS_CONST	274:9:9801:9833	1369537	0	True				
ANR	1370357	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		1369537	0		==			
ANR	1370358	CallExpression	ZEND_OP2_TYPE ( opline )		1369537	0					
ANR	1370359	Callee	ZEND_OP2_TYPE		1369537	0					
ANR	1370360	Identifier	ZEND_OP2_TYPE		1369537	0					
ANR	1370361	ArgumentList	opline		1369537	1					
ANR	1370362	Argument	opline		1369537	0					
ANR	1370363	Identifier	opline		1369537	0					
ANR	1370364	Identifier	IS_CONST		1369537	1					
ANR	1370365	CompoundStatement		157:44:4677:4677	1369537	1					
ANR	1370366	IfStatement	if ( opline -> extended_value == ZEND_ASSIGN_OBJ )		1369537	0					
ANR	1370367	Condition	opline -> extended_value == ZEND_ASSIGN_OBJ	275:10:9848:9888	1369537	0	True				
ANR	1370368	EqualityExpression	opline -> extended_value == ZEND_ASSIGN_OBJ		1369537	0		==			
ANR	1370369	PtrMemberAccess	opline -> extended_value		1369537	0					
ANR	1370370	Identifier	opline		1369537	0					
ANR	1370371	Identifier	extended_value		1369537	1					
ANR	1370372	Identifier	ZEND_ASSIGN_OBJ		1369537	1					
ANR	1370373	CompoundStatement		158:53:4732:4732	1369537	1					
ANR	1370374	ExpressionStatement	"optimizer_literal_obj_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_PROPERTY , 2 , 1 , op_array )"	276:7:9900:10068	1369537	0	True				
ANR	1370375	CallExpression	"optimizer_literal_obj_info ( info , opline -> op1_type , opline -> op1 , opline -> op2 . constant , LITERAL_PROPERTY , 2 , 1 , op_array )"		1369537	0					
ANR	1370376	Callee	optimizer_literal_obj_info		1369537	0					
ANR	1370377	Identifier	optimizer_literal_obj_info		1369537	0					
ANR	1370378	ArgumentList	info		1369537	1					
ANR	1370379	Argument	info		1369537	0					
ANR	1370380	Identifier	info		1369537	0					
ANR	1370381	Argument	opline -> op1_type		1369537	1					
ANR	1370382	PtrMemberAccess	opline -> op1_type		1369537	0					
ANR	1370383	Identifier	opline		1369537	0					
ANR	1370384	Identifier	op1_type		1369537	1					
ANR	1370385	Argument	opline -> op1		1369537	2					
ANR	1370386	PtrMemberAccess	opline -> op1		1369537	0					
ANR	1370387	Identifier	opline		1369537	0					
ANR	1370388	Identifier	op1		1369537	1					
ANR	1370389	Argument	opline -> op2 . constant		1369537	3					
ANR	1370390	MemberAccess	opline -> op2 . constant		1369537	0					
ANR	1370391	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1370392	Identifier	opline		1369537	0					
ANR	1370393	Identifier	op2		1369537	1					
ANR	1370394	Identifier	constant		1369537	1					
ANR	1370395	Argument	LITERAL_PROPERTY		1369537	4					
ANR	1370396	Identifier	LITERAL_PROPERTY		1369537	0					
ANR	1370397	Argument	2		1369537	5					
ANR	1370398	PrimaryExpression	2		1369537	0					
ANR	1370399	Argument	1		1369537	6					
ANR	1370400	PrimaryExpression	1		1369537	0					
ANR	1370401	Argument	op_array		1369537	7					
ANR	1370402	Identifier	op_array		1369537	0					
ANR	1370403	ElseStatement	else		1369537	0					
ANR	1370404	CompoundStatement		166:13:4924:4924	1369537	0					
ANR	1370405	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_VALUE , 1 , 0 , 1 )"	284:7:10092:10150	1369537	0	True				
ANR	1370406	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_VALUE , 1 , 0 , 1 )"		1369537	0					
ANR	1370407	Callee	LITERAL_INFO		1369537	0					
ANR	1370408	Identifier	LITERAL_INFO		1369537	0					
ANR	1370409	ArgumentList	opline -> op2 . constant		1369537	1					
ANR	1370410	Argument	opline -> op2 . constant		1369537	0					
ANR	1370411	MemberAccess	opline -> op2 . constant		1369537	0					
ANR	1370412	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1370413	Identifier	opline		1369537	0					
ANR	1370414	Identifier	op2		1369537	1					
ANR	1370415	Identifier	constant		1369537	1					
ANR	1370416	Argument	LITERAL_VALUE		1369537	1					
ANR	1370417	Identifier	LITERAL_VALUE		1369537	0					
ANR	1370418	Argument	1		1369537	2					
ANR	1370419	PrimaryExpression	1		1369537	0					
ANR	1370420	Argument	0		1369537	3					
ANR	1370421	PrimaryExpression	0		1369537	0					
ANR	1370422	Argument	1		1369537	4					
ANR	1370423	PrimaryExpression	1		1369537	0					
ANR	1370424	BreakStatement	break ;	287:5:10172:10177	1369537	72	True				
ANR	1370425	Label	case ZEND_BIND_GLOBAL :	288:4:10183:10204	1369537	73	True				
ANR	1370426	Identifier	ZEND_BIND_GLOBAL		1369537	0					
ANR	1370427	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_GLOBAL , 0 , 1 , 1 )"	289:5:10211:10270	1369537	74	True				
ANR	1370428	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_GLOBAL , 0 , 1 , 1 )"		1369537	0					
ANR	1370429	Callee	LITERAL_INFO		1369537	0					
ANR	1370430	Identifier	LITERAL_INFO		1369537	0					
ANR	1370431	ArgumentList	opline -> op2 . constant		1369537	1					
ANR	1370432	Argument	opline -> op2 . constant		1369537	0					
ANR	1370433	MemberAccess	opline -> op2 . constant		1369537	0					
ANR	1370434	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1370435	Identifier	opline		1369537	0					
ANR	1370436	Identifier	op2		1369537	1					
ANR	1370437	Identifier	constant		1369537	1					
ANR	1370438	Argument	LITERAL_GLOBAL		1369537	1					
ANR	1370439	Identifier	LITERAL_GLOBAL		1369537	0					
ANR	1370440	Argument	0		1369537	2					
ANR	1370441	PrimaryExpression	0		1369537	0					
ANR	1370442	Argument	1		1369537	3					
ANR	1370443	PrimaryExpression	1		1369537	0					
ANR	1370444	Argument	1		1369537	4					
ANR	1370445	PrimaryExpression	1		1369537	0					
ANR	1370446	BreakStatement	break ;	290:5:10277:10282	1369537	75	True				
ANR	1370447	Label	case ZEND_RECV_INIT :	291:4:10288:10307	1369537	76	True				
ANR	1370448	Identifier	ZEND_RECV_INIT		1369537	0					
ANR	1370449	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_VALUE , 0 , 0 , 1 )"	292:5:10314:10372	1369537	77	True				
ANR	1370450	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_VALUE , 0 , 0 , 1 )"		1369537	0					
ANR	1370451	Callee	LITERAL_INFO		1369537	0					
ANR	1370452	Identifier	LITERAL_INFO		1369537	0					
ANR	1370453	ArgumentList	opline -> op2 . constant		1369537	1					
ANR	1370454	Argument	opline -> op2 . constant		1369537	0					
ANR	1370455	MemberAccess	opline -> op2 . constant		1369537	0					
ANR	1370456	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1370457	Identifier	opline		1369537	0					
ANR	1370458	Identifier	op2		1369537	1					
ANR	1370459	Identifier	constant		1369537	1					
ANR	1370460	Argument	LITERAL_VALUE		1369537	1					
ANR	1370461	Identifier	LITERAL_VALUE		1369537	0					
ANR	1370462	Argument	0		1369537	2					
ANR	1370463	PrimaryExpression	0		1369537	0					
ANR	1370464	Argument	0		1369537	3					
ANR	1370465	PrimaryExpression	0		1369537	0					
ANR	1370466	Argument	1		1369537	4					
ANR	1370467	PrimaryExpression	1		1369537	0					
ANR	1370468	IfStatement	if ( Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] ) != - 1 )		1369537	78					
ANR	1370469	Condition	Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] ) != - 1	293:9:10383:10442	1369537	0	True				
ANR	1370470	EqualityExpression	Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] ) != - 1		1369537	0		!=			
ANR	1370471	CallExpression	Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] )		1369537	0					
ANR	1370472	Callee	Z_CACHE_SLOT		1369537	0					
ANR	1370473	Identifier	Z_CACHE_SLOT		1369537	0					
ANR	1370474	ArgumentList	op_array -> literals [ opline -> op2 . constant ]		1369537	1					
ANR	1370475	Argument	op_array -> literals [ opline -> op2 . constant ]		1369537	0					
ANR	1370476	ArrayIndexing	op_array -> literals [ opline -> op2 . constant ]		1369537	0					
ANR	1370477	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1370478	Identifier	op_array		1369537	0					
ANR	1370479	Identifier	literals		1369537	1					
ANR	1370480	MemberAccess	opline -> op2 . constant		1369537	1					
ANR	1370481	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1370482	Identifier	opline		1369537	0					
ANR	1370483	Identifier	op2		1369537	1					
ANR	1370484	Identifier	constant		1369537	1					
ANR	1370485	UnaryOperationExpression	- 1		1369537	1					
ANR	1370486	UnaryOperator	-		1369537	0					
ANR	1370487	PrimaryExpression	1		1369537	1					
ANR	1370488	CompoundStatement		176:71:5286:5286	1369537	1					
ANR	1370489	ExpressionStatement	Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] ) = cache_size	294:6:10453:10520	1369537	0	True				
ANR	1370490	AssignmentExpression	Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] ) = cache_size		1369537	0		=			
ANR	1370491	CallExpression	Z_CACHE_SLOT ( op_array -> literals [ opline -> op2 . constant ] )		1369537	0					
ANR	1370492	Callee	Z_CACHE_SLOT		1369537	0					
ANR	1370493	Identifier	Z_CACHE_SLOT		1369537	0					
ANR	1370494	ArgumentList	op_array -> literals [ opline -> op2 . constant ]		1369537	1					
ANR	1370495	Argument	op_array -> literals [ opline -> op2 . constant ]		1369537	0					
ANR	1370496	ArrayIndexing	op_array -> literals [ opline -> op2 . constant ]		1369537	0					
ANR	1370497	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1370498	Identifier	op_array		1369537	0					
ANR	1370499	Identifier	literals		1369537	1					
ANR	1370500	MemberAccess	opline -> op2 . constant		1369537	1					
ANR	1370501	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1370502	Identifier	opline		1369537	0					
ANR	1370503	Identifier	op2		1369537	1					
ANR	1370504	Identifier	constant		1369537	1					
ANR	1370505	Identifier	cache_size		1369537	1					
ANR	1370506	ExpressionStatement	cache_size += sizeof ( void * )	295:6:10528:10556	1369537	1	True				
ANR	1370507	AssignmentExpression	cache_size += sizeof ( void * )		1369537	0		+=			
ANR	1370508	Identifier	cache_size		1369537	0					
ANR	1370509	SizeofExpression	sizeof ( void * )		1369537	1					
ANR	1370510	Sizeof	sizeof		1369537	0					
ANR	1370511	SizeofOperand	void *		1369537	1					
ANR	1370512	BreakStatement	break ;	297:5:10570:10575	1369537	79	True				
ANR	1370513	Label	case ZEND_RECV :	298:4:10581:10595	1369537	80	True				
ANR	1370514	Identifier	ZEND_RECV		1369537	0					
ANR	1370515	Label	case ZEND_RECV_VARIADIC :	299:4:10601:10624	1369537	81	True				
ANR	1370516	Identifier	ZEND_RECV_VARIADIC		1369537	0					
ANR	1370517	Label	case ZEND_VERIFY_RETURN_TYPE :	300:4:10630:10658	1369537	82	True				
ANR	1370518	Identifier	ZEND_VERIFY_RETURN_TYPE		1369537	0					
ANR	1370519	IfStatement	if ( opline -> op2 . num != - 1 )		1369537	83					
ANR	1370520	Condition	opline -> op2 . num != - 1	301:9:10669:10689	1369537	0	True				
ANR	1370521	EqualityExpression	opline -> op2 . num != - 1		1369537	0		!=			
ANR	1370522	MemberAccess	opline -> op2 . num		1369537	0					
ANR	1370523	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1370524	Identifier	opline		1369537	0					
ANR	1370525	Identifier	op2		1369537	1					
ANR	1370526	Identifier	num		1369537	1					
ANR	1370527	UnaryOperationExpression	- 1		1369537	1					
ANR	1370528	UnaryOperator	-		1369537	0					
ANR	1370529	PrimaryExpression	1		1369537	1					
ANR	1370530	CompoundStatement		184:32:5533:5533	1369537	1					
ANR	1370531	ExpressionStatement	opline -> op2 . num = cache_size	302:6:10700:10728	1369537	0	True				
ANR	1370532	AssignmentExpression	opline -> op2 . num = cache_size		1369537	0		=			
ANR	1370533	MemberAccess	opline -> op2 . num		1369537	0					
ANR	1370534	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1370535	Identifier	opline		1369537	0					
ANR	1370536	Identifier	op2		1369537	1					
ANR	1370537	Identifier	num		1369537	1					
ANR	1370538	Identifier	cache_size		1369537	1					
ANR	1370539	ExpressionStatement	cache_size += sizeof ( void * )	303:6:10736:10764	1369537	1	True				
ANR	1370540	AssignmentExpression	cache_size += sizeof ( void * )		1369537	0		+=			
ANR	1370541	Identifier	cache_size		1369537	0					
ANR	1370542	SizeofExpression	sizeof ( void * )		1369537	1					
ANR	1370543	Sizeof	sizeof		1369537	0					
ANR	1370544	SizeofOperand	void *		1369537	1					
ANR	1370545	Label	default :	305:4:10777:10784	1369537	84	True				
ANR	1370546	Identifier	default		1369537	0					
ANR	1370547	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST )		1369537	85					
ANR	1370548	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST	306:9:10795:10827	1369537	0	True				
ANR	1370549	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		1369537	0		==			
ANR	1370550	CallExpression	ZEND_OP1_TYPE ( opline )		1369537	0					
ANR	1370551	Callee	ZEND_OP1_TYPE		1369537	0					
ANR	1370552	Identifier	ZEND_OP1_TYPE		1369537	0					
ANR	1370553	ArgumentList	opline		1369537	1					
ANR	1370554	Argument	opline		1369537	0					
ANR	1370555	Identifier	opline		1369537	0					
ANR	1370556	Identifier	IS_CONST		1369537	1					
ANR	1370557	CompoundStatement		189:44:5671:5671	1369537	1					
ANR	1370558	ExpressionStatement	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_VALUE , 1 , 0 , 1 )"	307:6:10838:10896	1369537	0	True				
ANR	1370559	CallExpression	"LITERAL_INFO ( opline -> op1 . constant , LITERAL_VALUE , 1 , 0 , 1 )"		1369537	0					
ANR	1370560	Callee	LITERAL_INFO		1369537	0					
ANR	1370561	Identifier	LITERAL_INFO		1369537	0					
ANR	1370562	ArgumentList	opline -> op1 . constant		1369537	1					
ANR	1370563	Argument	opline -> op1 . constant		1369537	0					
ANR	1370564	MemberAccess	opline -> op1 . constant		1369537	0					
ANR	1370565	PtrMemberAccess	opline -> op1		1369537	0					
ANR	1370566	Identifier	opline		1369537	0					
ANR	1370567	Identifier	op1		1369537	1					
ANR	1370568	Identifier	constant		1369537	1					
ANR	1370569	Argument	LITERAL_VALUE		1369537	1					
ANR	1370570	Identifier	LITERAL_VALUE		1369537	0					
ANR	1370571	Argument	1		1369537	2					
ANR	1370572	PrimaryExpression	1		1369537	0					
ANR	1370573	Argument	0		1369537	3					
ANR	1370574	PrimaryExpression	0		1369537	0					
ANR	1370575	Argument	1		1369537	4					
ANR	1370576	PrimaryExpression	1		1369537	0					
ANR	1370577	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_CONST )		1369537	86					
ANR	1370578	Condition	ZEND_OP2_TYPE ( opline ) == IS_CONST	309:9:10914:10946	1369537	0	True				
ANR	1370579	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		1369537	0		==			
ANR	1370580	CallExpression	ZEND_OP2_TYPE ( opline )		1369537	0					
ANR	1370581	Callee	ZEND_OP2_TYPE		1369537	0					
ANR	1370582	Identifier	ZEND_OP2_TYPE		1369537	0					
ANR	1370583	ArgumentList	opline		1369537	1					
ANR	1370584	Argument	opline		1369537	0					
ANR	1370585	Identifier	opline		1369537	0					
ANR	1370586	Identifier	IS_CONST		1369537	1					
ANR	1370587	CompoundStatement		192:44:5790:5790	1369537	1					
ANR	1370588	ExpressionStatement	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_VALUE , 1 , 0 , 1 )"	310:6:10957:11015	1369537	0	True				
ANR	1370589	CallExpression	"LITERAL_INFO ( opline -> op2 . constant , LITERAL_VALUE , 1 , 0 , 1 )"		1369537	0					
ANR	1370590	Callee	LITERAL_INFO		1369537	0					
ANR	1370591	Identifier	LITERAL_INFO		1369537	0					
ANR	1370592	ArgumentList	opline -> op2 . constant		1369537	1					
ANR	1370593	Argument	opline -> op2 . constant		1369537	0					
ANR	1370594	MemberAccess	opline -> op2 . constant		1369537	0					
ANR	1370595	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1370596	Identifier	opline		1369537	0					
ANR	1370597	Identifier	op2		1369537	1					
ANR	1370598	Identifier	constant		1369537	1					
ANR	1370599	Argument	LITERAL_VALUE		1369537	1					
ANR	1370600	Identifier	LITERAL_VALUE		1369537	0					
ANR	1370601	Argument	1		1369537	2					
ANR	1370602	PrimaryExpression	1		1369537	0					
ANR	1370603	Argument	0		1369537	3					
ANR	1370604	PrimaryExpression	0		1369537	0					
ANR	1370605	Argument	1		1369537	4					
ANR	1370606	PrimaryExpression	1		1369537	0					
ANR	1370607	BreakStatement	break ;	312:5:11029:11034	1369537	87	True				
ANR	1370608	ExpressionStatement	opline ++	314:3:11044:11052	1369537	1	True				
ANR	1370609	PostIncDecOperationExpression	opline ++		1369537	0					
ANR	1370610	Identifier	opline		1369537	0					
ANR	1370611	IncDec	++		1369537	1					
ANR	1370612	CompoundStatement		202:3:5934:5949	1369537	5					
ANR	1370613	IdentifierDeclStatement	"int i , use_copy ;"	319:3:11093:11108	1369537	0	True				
ANR	1370614	IdentifierDecl	i		1369537	0					
ANR	1370615	IdentifierDeclType	int		1369537	0					
ANR	1370616	Identifier	i		1369537	1					
ANR	1370617	IdentifierDecl	use_copy		1369537	1					
ANR	1370618	IdentifierDeclType	int		1369537	0					
ANR	1370619	Identifier	use_copy		1369537	1					
ANR	1370620	ExpressionStatement	"fprintf ( stderr , ""File %s func %s\\n"" , op_array -> filename -> val , op_array -> function_name ? op_array -> function_name -> val : ""main"" )"	320:3:11113:11244	1369537	1	True				
ANR	1370621	CallExpression	"fprintf ( stderr , ""File %s func %s\\n"" , op_array -> filename -> val , op_array -> function_name ? op_array -> function_name -> val : ""main"" )"		1369537	0					
ANR	1370622	Callee	fprintf		1369537	0					
ANR	1370623	Identifier	fprintf		1369537	0					
ANR	1370624	ArgumentList	stderr		1369537	1					
ANR	1370625	Argument	stderr		1369537	0					
ANR	1370626	Identifier	stderr		1369537	0					
ANR	1370627	Argument	"""File %s func %s\\n"""		1369537	1					
ANR	1370628	PrimaryExpression	"""File %s func %s\\n"""		1369537	0					
ANR	1370629	Argument	op_array -> filename -> val		1369537	2					
ANR	1370630	PtrMemberAccess	op_array -> filename -> val		1369537	0					
ANR	1370631	PtrMemberAccess	op_array -> filename		1369537	0					
ANR	1370632	Identifier	op_array		1369537	0					
ANR	1370633	Identifier	filename		1369537	1					
ANR	1370634	Identifier	val		1369537	1					
ANR	1370635	Argument	"op_array -> function_name ? op_array -> function_name -> val : ""main"""		1369537	3					
ANR	1370636	ConditionalExpression	"op_array -> function_name ? op_array -> function_name -> val : ""main"""		1369537	0					
ANR	1370637	Condition	op_array -> function_name		1369537	0					
ANR	1370638	PtrMemberAccess	op_array -> function_name		1369537	0					
ANR	1370639	Identifier	op_array		1369537	0					
ANR	1370640	Identifier	function_name		1369537	1					
ANR	1370641	PtrMemberAccess	op_array -> function_name -> val		1369537	1					
ANR	1370642	PtrMemberAccess	op_array -> function_name		1369537	0					
ANR	1370643	Identifier	op_array		1369537	0					
ANR	1370644	Identifier	function_name		1369537	1					
ANR	1370645	Identifier	val		1369537	1					
ANR	1370646	PrimaryExpression	"""main"""		1369537	2					
ANR	1370647	ExpressionStatement	"fprintf ( stderr , ""Literlas table size %d\\n"" , op_array -> last_literal )"	322:3:11249:11316	1369537	2	True				
ANR	1370648	CallExpression	"fprintf ( stderr , ""Literlas table size %d\\n"" , op_array -> last_literal )"		1369537	0					
ANR	1370649	Callee	fprintf		1369537	0					
ANR	1370650	Identifier	fprintf		1369537	0					
ANR	1370651	ArgumentList	stderr		1369537	1					
ANR	1370652	Argument	stderr		1369537	0					
ANR	1370653	Identifier	stderr		1369537	0					
ANR	1370654	Argument	"""Literlas table size %d\\n"""		1369537	1					
ANR	1370655	PrimaryExpression	"""Literlas table size %d\\n"""		1369537	0					
ANR	1370656	Argument	op_array -> last_literal		1369537	2					
ANR	1370657	PtrMemberAccess	op_array -> last_literal		1369537	0					
ANR	1370658	Identifier	op_array		1369537	0					
ANR	1370659	Identifier	last_literal		1369537	1					
ANR	1370660	ForStatement	for ( i = 0 ; i < op_array -> last_literal ; i ++ )		1369537	3					
ANR	1370661	ForInit	i = 0 ;	324:8:11327:11332	1369537	0	True				
ANR	1370662	AssignmentExpression	i = 0		1369537	0		=			
ANR	1370663	Identifier	i		1369537	0					
ANR	1370664	PrimaryExpression	0		1369537	1					
ANR	1370665	Condition	i < op_array -> last_literal	324:15:11334:11359	1369537	1	True				
ANR	1370666	RelationalExpression	i < op_array -> last_literal		1369537	0		<			
ANR	1370667	Identifier	i		1369537	0					
ANR	1370668	PtrMemberAccess	op_array -> last_literal		1369537	1					
ANR	1370669	Identifier	op_array		1369537	0					
ANR	1370670	Identifier	last_literal		1369537	1					
ANR	1370671	PostIncDecOperationExpression	i ++	324:43:11362:11364	1369537	2	True				
ANR	1370672	Identifier	i		1369537	0					
ANR	1370673	IncDec	++		1369537	1					
ANR	1370674	CompoundStatement		208:4:6214:6221	1369537	3					
ANR	1370675	IdentifierDeclStatement	zval zv ;	325:4:11373:11380	1369537	0	True				
ANR	1370676	IdentifierDecl	zv		1369537	0					
ANR	1370677	IdentifierDeclType	zval		1369537	0					
ANR	1370678	Identifier	zv		1369537	1					
ANR	1370679	ExpressionStatement	"ZVAL_COPY_VALUE ( & zv , op_array -> literals + i )"	326:4:11386:11430	1369537	1	True				
ANR	1370680	CallExpression	"ZVAL_COPY_VALUE ( & zv , op_array -> literals + i )"		1369537	0					
ANR	1370681	Callee	ZVAL_COPY_VALUE		1369537	0					
ANR	1370682	Identifier	ZVAL_COPY_VALUE		1369537	0					
ANR	1370683	ArgumentList	& zv		1369537	1					
ANR	1370684	Argument	& zv		1369537	0					
ANR	1370685	UnaryOperationExpression	& zv		1369537	0					
ANR	1370686	UnaryOperator	&		1369537	0					
ANR	1370687	Identifier	zv		1369537	1					
ANR	1370688	Argument	op_array -> literals + i		1369537	1					
ANR	1370689	AdditiveExpression	op_array -> literals + i		1369537	0		+			
ANR	1370690	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1370691	Identifier	op_array		1369537	0					
ANR	1370692	Identifier	literals		1369537	1					
ANR	1370693	Identifier	i		1369537	1					
ANR	1370694	ExpressionStatement	"use_copy = zend_make_printable_zval ( op_array -> literals + i , & zv )"	327:4:11436:11500	1369537	2	True				
ANR	1370695	AssignmentExpression	"use_copy = zend_make_printable_zval ( op_array -> literals + i , & zv )"		1369537	0		=			
ANR	1370696	Identifier	use_copy		1369537	0					
ANR	1370697	CallExpression	"zend_make_printable_zval ( op_array -> literals + i , & zv )"		1369537	1					
ANR	1370698	Callee	zend_make_printable_zval		1369537	0					
ANR	1370699	Identifier	zend_make_printable_zval		1369537	0					
ANR	1370700	ArgumentList	op_array -> literals + i		1369537	1					
ANR	1370701	Argument	op_array -> literals + i		1369537	0					
ANR	1370702	AdditiveExpression	op_array -> literals + i		1369537	0		+			
ANR	1370703	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1370704	Identifier	op_array		1369537	0					
ANR	1370705	Identifier	literals		1369537	1					
ANR	1370706	Identifier	i		1369537	1					
ANR	1370707	Argument	& zv		1369537	1					
ANR	1370708	UnaryOperationExpression	& zv		1369537	0					
ANR	1370709	UnaryOperator	&		1369537	0					
ANR	1370710	Identifier	zv		1369537	1					
ANR	1370711	ExpressionStatement	"fprintf ( stderr , ""Literal %d, val (%d):%s\\n"" , i , Z_STRLEN ( zv ) , Z_STRVAL ( zv ) )"	328:4:11506:11581	1369537	3	True				
ANR	1370712	CallExpression	"fprintf ( stderr , ""Literal %d, val (%d):%s\\n"" , i , Z_STRLEN ( zv ) , Z_STRVAL ( zv ) )"		1369537	0					
ANR	1370713	Callee	fprintf		1369537	0					
ANR	1370714	Identifier	fprintf		1369537	0					
ANR	1370715	ArgumentList	stderr		1369537	1					
ANR	1370716	Argument	stderr		1369537	0					
ANR	1370717	Identifier	stderr		1369537	0					
ANR	1370718	Argument	"""Literal %d, val (%d):%s\\n"""		1369537	1					
ANR	1370719	PrimaryExpression	"""Literal %d, val (%d):%s\\n"""		1369537	0					
ANR	1370720	Argument	i		1369537	2					
ANR	1370721	Identifier	i		1369537	0					
ANR	1370722	Argument	Z_STRLEN ( zv )		1369537	3					
ANR	1370723	CallExpression	Z_STRLEN ( zv )		1369537	0					
ANR	1370724	Callee	Z_STRLEN		1369537	0					
ANR	1370725	Identifier	Z_STRLEN		1369537	0					
ANR	1370726	ArgumentList	zv		1369537	1					
ANR	1370727	Argument	zv		1369537	0					
ANR	1370728	Identifier	zv		1369537	0					
ANR	1370729	Argument	Z_STRVAL ( zv )		1369537	4					
ANR	1370730	CallExpression	Z_STRVAL ( zv )		1369537	0					
ANR	1370731	Callee	Z_STRVAL		1369537	0					
ANR	1370732	Identifier	Z_STRVAL		1369537	0					
ANR	1370733	ArgumentList	zv		1369537	1					
ANR	1370734	Argument	zv		1369537	0					
ANR	1370735	Identifier	zv		1369537	0					
ANR	1370736	IfStatement	if ( use_copy )		1369537	4					
ANR	1370737	Condition	use_copy	329:8:11591:11598	1369537	0	True				
ANR	1370738	Identifier	use_copy		1369537	0					
ANR	1370739	CompoundStatement		212:18:6442:6442	1369537	1					
ANR	1370740	ExpressionStatement	zval_dtor ( & zv )	330:5:11608:11622	1369537	0	True				
ANR	1370741	CallExpression	zval_dtor ( & zv )		1369537	0					
ANR	1370742	Callee	zval_dtor		1369537	0					
ANR	1370743	Identifier	zval_dtor		1369537	0					
ANR	1370744	ArgumentList	& zv		1369537	1					
ANR	1370745	Argument	& zv		1369537	0					
ANR	1370746	UnaryOperationExpression	& zv		1369537	0					
ANR	1370747	UnaryOperator	&		1369537	0					
ANR	1370748	Identifier	zv		1369537	1					
ANR	1370749	ExpressionStatement	fflush ( stderr )	333:3:11638:11652	1369537	4	True				
ANR	1370750	CallExpression	fflush ( stderr )		1369537	0					
ANR	1370751	Callee	fflush		1369537	0					
ANR	1370752	Identifier	fflush		1369537	0					
ANR	1370753	ArgumentList	stderr		1369537	1					
ANR	1370754	Argument	stderr		1369537	0					
ANR	1370755	Identifier	stderr		1369537	0					
ANR	1370756	ExpressionStatement	j = 0	338:2:11698:11703	1369537	6	True				
ANR	1370757	AssignmentExpression	j = 0		1369537	0		=			
ANR	1370758	Identifier	j		1369537	0					
ANR	1370759	PrimaryExpression	0		1369537	1					
ANR	1370760	ExpressionStatement	"zend_hash_init ( & hash , op_array -> last_literal , NULL , NULL , 0 )"	339:2:11707:11767	1369537	7	True				
ANR	1370761	CallExpression	"zend_hash_init ( & hash , op_array -> last_literal , NULL , NULL , 0 )"		1369537	0					
ANR	1370762	Callee	zend_hash_init		1369537	0					
ANR	1370763	Identifier	zend_hash_init		1369537	0					
ANR	1370764	ArgumentList	& hash		1369537	1					
ANR	1370765	Argument	& hash		1369537	0					
ANR	1370766	UnaryOperationExpression	& hash		1369537	0					
ANR	1370767	UnaryOperator	&		1369537	0					
ANR	1370768	Identifier	hash		1369537	1					
ANR	1370769	Argument	op_array -> last_literal		1369537	1					
ANR	1370770	PtrMemberAccess	op_array -> last_literal		1369537	0					
ANR	1370771	Identifier	op_array		1369537	0					
ANR	1370772	Identifier	last_literal		1369537	1					
ANR	1370773	Argument	NULL		1369537	2					
ANR	1370774	Identifier	NULL		1369537	0					
ANR	1370775	Argument	NULL		1369537	3					
ANR	1370776	Identifier	NULL		1369537	0					
ANR	1370777	Argument	0		1369537	4					
ANR	1370778	PrimaryExpression	0		1369537	0					
ANR	1370779	ExpressionStatement	"map = ( int * ) zend_arena_alloc ( & ctx -> arena , op_array -> last_literal * sizeof ( int ) )"	340:2:11771:11850	1369537	8	True				
ANR	1370780	AssignmentExpression	"map = ( int * ) zend_arena_alloc ( & ctx -> arena , op_array -> last_literal * sizeof ( int ) )"		1369537	0		=			
ANR	1370781	Identifier	map		1369537	0					
ANR	1370782	CastExpression	"( int * ) zend_arena_alloc ( & ctx -> arena , op_array -> last_literal * sizeof ( int ) )"		1369537	1					
ANR	1370783	CastTarget	int *		1369537	0					
ANR	1370784	CallExpression	"zend_arena_alloc ( & ctx -> arena , op_array -> last_literal * sizeof ( int ) )"		1369537	1					
ANR	1370785	Callee	zend_arena_alloc		1369537	0					
ANR	1370786	Identifier	zend_arena_alloc		1369537	0					
ANR	1370787	ArgumentList	& ctx -> arena		1369537	1					
ANR	1370788	Argument	& ctx -> arena		1369537	0					
ANR	1370789	UnaryOperationExpression	& ctx -> arena		1369537	0					
ANR	1370790	UnaryOperator	&		1369537	0					
ANR	1370791	PtrMemberAccess	ctx -> arena		1369537	1					
ANR	1370792	Identifier	ctx		1369537	0					
ANR	1370793	Identifier	arena		1369537	1					
ANR	1370794	Argument	op_array -> last_literal * sizeof ( int )		1369537	1					
ANR	1370795	MultiplicativeExpression	op_array -> last_literal * sizeof ( int )		1369537	0		*			
ANR	1370796	PtrMemberAccess	op_array -> last_literal		1369537	0					
ANR	1370797	Identifier	op_array		1369537	0					
ANR	1370798	Identifier	last_literal		1369537	1					
ANR	1370799	SizeofExpression	sizeof ( int )		1369537	1					
ANR	1370800	Sizeof	sizeof		1369537	0					
ANR	1370801	SizeofOperand	int		1369537	1					
ANR	1370802	ExpressionStatement	"memset ( map , 0 , op_array -> last_literal * sizeof ( int ) )"	341:2:11854:11906	1369537	9	True				
ANR	1370803	CallExpression	"memset ( map , 0 , op_array -> last_literal * sizeof ( int ) )"		1369537	0					
ANR	1370804	Callee	memset		1369537	0					
ANR	1370805	Identifier	memset		1369537	0					
ANR	1370806	ArgumentList	map		1369537	1					
ANR	1370807	Argument	map		1369537	0					
ANR	1370808	Identifier	map		1369537	0					
ANR	1370809	Argument	0		1369537	1					
ANR	1370810	PrimaryExpression	0		1369537	0					
ANR	1370811	Argument	op_array -> last_literal * sizeof ( int )		1369537	2					
ANR	1370812	MultiplicativeExpression	op_array -> last_literal * sizeof ( int )		1369537	0		*			
ANR	1370813	PtrMemberAccess	op_array -> last_literal		1369537	0					
ANR	1370814	Identifier	op_array		1369537	0					
ANR	1370815	Identifier	last_literal		1369537	1					
ANR	1370816	SizeofExpression	sizeof ( int )		1369537	1					
ANR	1370817	Sizeof	sizeof		1369537	0					
ANR	1370818	SizeofOperand	int		1369537	1					
ANR	1370819	ForStatement	for ( i = 0 ; i < op_array -> last_literal ; i ++ )		1369537	10					
ANR	1370820	ForInit	i = 0 ;	342:7:11915:11920	1369537	0	True				
ANR	1370821	AssignmentExpression	i = 0		1369537	0		=			
ANR	1370822	Identifier	i		1369537	0					
ANR	1370823	PrimaryExpression	0		1369537	1					
ANR	1370824	Condition	i < op_array -> last_literal	342:14:11922:11947	1369537	1	True				
ANR	1370825	RelationalExpression	i < op_array -> last_literal		1369537	0		<			
ANR	1370826	Identifier	i		1369537	0					
ANR	1370827	PtrMemberAccess	op_array -> last_literal		1369537	1					
ANR	1370828	Identifier	op_array		1369537	0					
ANR	1370829	Identifier	last_literal		1369537	1					
ANR	1370830	PostIncDecOperationExpression	i ++	342:42:11950:11952	1369537	2	True				
ANR	1370831	Identifier	i		1369537	0					
ANR	1370832	IncDec	++		1369537	1					
ANR	1370833	CompoundStatement		225:47:6796:6796	1369537	3					
ANR	1370834	IfStatement	if ( ! info [ i ] . flags )		1369537	0					
ANR	1370835	Condition	! info [ i ] . flags	343:7:11964:11977	1369537	0	True				
ANR	1370836	UnaryOperationExpression	! info [ i ] . flags		1369537	0					
ANR	1370837	UnaryOperator	!		1369537	0					
ANR	1370838	MemberAccess	info [ i ] . flags		1369537	1					
ANR	1370839	ArrayIndexing	info [ i ]		1369537	0					
ANR	1370840	Identifier	info		1369537	0					
ANR	1370841	Identifier	i		1369537	1					
ANR	1370842	Identifier	flags		1369537	1					
ANR	1370843	CompoundStatement		226:23:6821:6821	1369537	1					
ANR	1370844	ExpressionStatement	zval_dtor ( & op_array -> literals [ i ] )	345:4:12010:12043	1369537	0	True				
ANR	1370845	CallExpression	zval_dtor ( & op_array -> literals [ i ] )		1369537	0					
ANR	1370846	Callee	zval_dtor		1369537	0					
ANR	1370847	Identifier	zval_dtor		1369537	0					
ANR	1370848	ArgumentList	& op_array -> literals [ i ]		1369537	1					
ANR	1370849	Argument	& op_array -> literals [ i ]		1369537	0					
ANR	1370850	UnaryOperationExpression	& op_array -> literals [ i ]		1369537	0					
ANR	1370851	UnaryOperator	&		1369537	0					
ANR	1370852	ArrayIndexing	op_array -> literals [ i ]		1369537	1					
ANR	1370853	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1370854	Identifier	op_array		1369537	0					
ANR	1370855	Identifier	literals		1369537	1					
ANR	1370856	Identifier	i		1369537	1					
ANR	1370857	ContinueStatement	continue ;	346:4:12049:12057	1369537	1	True				
ANR	1370858	SwitchStatement	switch ( Z_TYPE ( op_array -> literals [ i ] ) )		1369537	1					
ANR	1370859	Condition	Z_TYPE ( op_array -> literals [ i ] )	348:11:12075:12103	1369537	0	True				
ANR	1370860	CallExpression	Z_TYPE ( op_array -> literals [ i ] )		1369537	0					
ANR	1370861	Callee	Z_TYPE		1369537	0					
ANR	1370862	Identifier	Z_TYPE		1369537	0					
ANR	1370863	ArgumentList	op_array -> literals [ i ]		1369537	1					
ANR	1370864	Argument	op_array -> literals [ i ]		1369537	0					
ANR	1370865	ArrayIndexing	op_array -> literals [ i ]		1369537	0					
ANR	1370866	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1370867	Identifier	op_array		1369537	0					
ANR	1370868	Identifier	literals		1369537	1					
ANR	1370869	Identifier	i		1369537	1					
ANR	1370870	CompoundStatement		231:42:6947:6947	1369537	1					
ANR	1370871	Label	case IS_NULL :	349:4:12112:12124	1369537	0	True				
ANR	1370872	Identifier	IS_NULL		1369537	0					
ANR	1370873	IfStatement	if ( ( info [ i ] . flags & LITERAL_MAY_MERGE ) )		1369537	1					
ANR	1370874	Condition	info [ i ] . flags & LITERAL_MAY_MERGE	352:9:12276:12310	1369537	0	True				
ANR	1370875	BitAndExpression	info [ i ] . flags & LITERAL_MAY_MERGE		1369537	0		&			
ANR	1370876	MemberAccess	info [ i ] . flags		1369537	0					
ANR	1370877	ArrayIndexing	info [ i ]		1369537	0					
ANR	1370878	Identifier	info		1369537	0					
ANR	1370879	Identifier	i		1369537	1					
ANR	1370880	Identifier	flags		1369537	1					
ANR	1370881	Identifier	LITERAL_MAY_MERGE		1369537	1					
ANR	1370882	CompoundStatement		235:46:7154:7154	1369537	1					
ANR	1370883	IfStatement	if ( l_null < 0 )		1369537	0					
ANR	1370884	Condition	l_null < 0	353:10:12325:12334	1369537	0	True				
ANR	1370885	RelationalExpression	l_null < 0		1369537	0		<			
ANR	1370886	Identifier	l_null		1369537	0					
ANR	1370887	PrimaryExpression	0		1369537	1					
ANR	1370888	CompoundStatement		236:22:7178:7178	1369537	1					
ANR	1370889	ExpressionStatement	l_null = j	354:7:12346:12356	1369537	0	True				
ANR	1370890	AssignmentExpression	l_null = j		1369537	0		=			
ANR	1370891	Identifier	l_null		1369537	0					
ANR	1370892	Identifier	j		1369537	1					
ANR	1370893	IfStatement	if ( i != j )		1369537	1					
ANR	1370894	Condition	i != j	355:11:12369:12374	1369537	0	True				
ANR	1370895	EqualityExpression	i != j		1369537	0		!=			
ANR	1370896	Identifier	i		1369537	0					
ANR	1370897	Identifier	j		1369537	1					
ANR	1370898	CompoundStatement		238:19:7218:7218	1369537	1					
ANR	1370899	ExpressionStatement	op_array -> literals [ j ] = op_array -> literals [ i ]	356:8:12387:12432	1369537	0	True				
ANR	1370900	AssignmentExpression	op_array -> literals [ j ] = op_array -> literals [ i ]		1369537	0		=			
ANR	1370901	ArrayIndexing	op_array -> literals [ j ]		1369537	0					
ANR	1370902	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1370903	Identifier	op_array		1369537	0					
ANR	1370904	Identifier	literals		1369537	1					
ANR	1370905	Identifier	j		1369537	1					
ANR	1370906	ArrayIndexing	op_array -> literals [ i ]		1369537	1					
ANR	1370907	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1370908	Identifier	op_array		1369537	0					
ANR	1370909	Identifier	literals		1369537	1					
ANR	1370910	Identifier	i		1369537	1					
ANR	1370911	ExpressionStatement	info [ j ] = info [ i ]	357:8:12442:12459	1369537	1	True				
ANR	1370912	AssignmentExpression	info [ j ] = info [ i ]		1369537	0		=			
ANR	1370913	ArrayIndexing	info [ j ]		1369537	0					
ANR	1370914	Identifier	info		1369537	0					
ANR	1370915	Identifier	j		1369537	1					
ANR	1370916	ArrayIndexing	info [ i ]		1369537	1					
ANR	1370917	Identifier	info		1369537	0					
ANR	1370918	Identifier	i		1369537	1					
ANR	1370919	ExpressionStatement	j ++	359:7:12477:12480	1369537	2	True				
ANR	1370920	PostIncDecOperationExpression	j ++		1369537	0					
ANR	1370921	Identifier	j		1369537	0					
ANR	1370922	IncDec	++		1369537	1					
ANR	1370923	ExpressionStatement	map [ i ] = l_null	361:6:12496:12511	1369537	1	True				
ANR	1370924	AssignmentExpression	map [ i ] = l_null		1369537	0		=			
ANR	1370925	ArrayIndexing	map [ i ]		1369537	0					
ANR	1370926	Identifier	map		1369537	0					
ANR	1370927	Identifier	i		1369537	1					
ANR	1370928	Identifier	l_null		1369537	1					
ANR	1370929	ElseStatement	else		1369537	0					
ANR	1370930	CompoundStatement		245:12:7366:7366	1369537	0					
ANR	1370931	ExpressionStatement	map [ i ] = j	363:6:12533:12543	1369537	0	True				
ANR	1370932	AssignmentExpression	map [ i ] = j		1369537	0		=			
ANR	1370933	ArrayIndexing	map [ i ]		1369537	0					
ANR	1370934	Identifier	map		1369537	0					
ANR	1370935	Identifier	i		1369537	1					
ANR	1370936	Identifier	j		1369537	1					
ANR	1370937	IfStatement	if ( i != j )		1369537	1					
ANR	1370938	Condition	i != j	364:10:12555:12560	1369537	0	True				
ANR	1370939	EqualityExpression	i != j		1369537	0		!=			
ANR	1370940	Identifier	i		1369537	0					
ANR	1370941	Identifier	j		1369537	1					
ANR	1370942	CompoundStatement		247:18:7404:7404	1369537	1					
ANR	1370943	ExpressionStatement	op_array -> literals [ j ] = op_array -> literals [ i ]	365:7:12572:12617	1369537	0	True				
ANR	1370944	AssignmentExpression	op_array -> literals [ j ] = op_array -> literals [ i ]		1369537	0		=			
ANR	1370945	ArrayIndexing	op_array -> literals [ j ]		1369537	0					
ANR	1370946	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1370947	Identifier	op_array		1369537	0					
ANR	1370948	Identifier	literals		1369537	1					
ANR	1370949	Identifier	j		1369537	1					
ANR	1370950	ArrayIndexing	op_array -> literals [ i ]		1369537	1					
ANR	1370951	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1370952	Identifier	op_array		1369537	0					
ANR	1370953	Identifier	literals		1369537	1					
ANR	1370954	Identifier	i		1369537	1					
ANR	1370955	ExpressionStatement	info [ j ] = info [ i ]	366:7:12626:12643	1369537	1	True				
ANR	1370956	AssignmentExpression	info [ j ] = info [ i ]		1369537	0		=			
ANR	1370957	ArrayIndexing	info [ j ]		1369537	0					
ANR	1370958	Identifier	info		1369537	0					
ANR	1370959	Identifier	j		1369537	1					
ANR	1370960	ArrayIndexing	info [ i ]		1369537	1					
ANR	1370961	Identifier	info		1369537	0					
ANR	1370962	Identifier	i		1369537	1					
ANR	1370963	ExpressionStatement	j ++	368:6:12659:12662	1369537	2	True				
ANR	1370964	PostIncDecOperationExpression	j ++		1369537	0					
ANR	1370965	Identifier	j		1369537	0					
ANR	1370966	IncDec	++		1369537	1					
ANR	1370967	BreakStatement	break ;	370:5:12676:12681	1369537	2	True				
ANR	1370968	Label	case IS_FALSE :	371:4:12687:12700	1369537	3	True				
ANR	1370969	Identifier	IS_FALSE		1369537	0					
ANR	1370970	IfStatement	if ( l_false < 0 )		1369537	4					
ANR	1370971	Condition	l_false < 0	372:9:12711:12721	1369537	0	True				
ANR	1370972	RelationalExpression	l_false < 0		1369537	0		<			
ANR	1370973	Identifier	l_false		1369537	0					
ANR	1370974	PrimaryExpression	0		1369537	1					
ANR	1370975	CompoundStatement		255:22:7565:7565	1369537	1					
ANR	1370976	ExpressionStatement	l_false = j	373:6:12732:12743	1369537	0	True				
ANR	1370977	AssignmentExpression	l_false = j		1369537	0		=			
ANR	1370978	Identifier	l_false		1369537	0					
ANR	1370979	Identifier	j		1369537	1					
ANR	1370980	IfStatement	if ( i != j )		1369537	1					
ANR	1370981	Condition	i != j	374:10:12755:12760	1369537	0	True				
ANR	1370982	EqualityExpression	i != j		1369537	0		!=			
ANR	1370983	Identifier	i		1369537	0					
ANR	1370984	Identifier	j		1369537	1					
ANR	1370985	CompoundStatement		257:18:7604:7604	1369537	1					
ANR	1370986	ExpressionStatement	op_array -> literals [ j ] = op_array -> literals [ i ]	375:7:12772:12817	1369537	0	True				
ANR	1370987	AssignmentExpression	op_array -> literals [ j ] = op_array -> literals [ i ]		1369537	0		=			
ANR	1370988	ArrayIndexing	op_array -> literals [ j ]		1369537	0					
ANR	1370989	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1370990	Identifier	op_array		1369537	0					
ANR	1370991	Identifier	literals		1369537	1					
ANR	1370992	Identifier	j		1369537	1					
ANR	1370993	ArrayIndexing	op_array -> literals [ i ]		1369537	1					
ANR	1370994	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1370995	Identifier	op_array		1369537	0					
ANR	1370996	Identifier	literals		1369537	1					
ANR	1370997	Identifier	i		1369537	1					
ANR	1370998	ExpressionStatement	info [ j ] = info [ i ]	376:7:12826:12843	1369537	1	True				
ANR	1370999	AssignmentExpression	info [ j ] = info [ i ]		1369537	0		=			
ANR	1371000	ArrayIndexing	info [ j ]		1369537	0					
ANR	1371001	Identifier	info		1369537	0					
ANR	1371002	Identifier	j		1369537	1					
ANR	1371003	ArrayIndexing	info [ i ]		1369537	1					
ANR	1371004	Identifier	info		1369537	0					
ANR	1371005	Identifier	i		1369537	1					
ANR	1371006	ExpressionStatement	j ++	378:6:12859:12862	1369537	2	True				
ANR	1371007	PostIncDecOperationExpression	j ++		1369537	0					
ANR	1371008	Identifier	j		1369537	0					
ANR	1371009	IncDec	++		1369537	1					
ANR	1371010	ExpressionStatement	map [ i ] = l_false	380:5:12876:12892	1369537	5	True				
ANR	1371011	AssignmentExpression	map [ i ] = l_false		1369537	0		=			
ANR	1371012	ArrayIndexing	map [ i ]		1369537	0					
ANR	1371013	Identifier	map		1369537	0					
ANR	1371014	Identifier	i		1369537	1					
ANR	1371015	Identifier	l_false		1369537	1					
ANR	1371016	BreakStatement	break ;	381:5:12899:12904	1369537	6	True				
ANR	1371017	Label	case IS_TRUE :	382:4:12910:12922	1369537	7	True				
ANR	1371018	Identifier	IS_TRUE		1369537	0					
ANR	1371019	IfStatement	if ( l_true < 0 )		1369537	8					
ANR	1371020	Condition	l_true < 0	383:9:12933:12942	1369537	0	True				
ANR	1371021	RelationalExpression	l_true < 0		1369537	0		<			
ANR	1371022	Identifier	l_true		1369537	0					
ANR	1371023	PrimaryExpression	0		1369537	1					
ANR	1371024	CompoundStatement		266:21:7786:7786	1369537	1					
ANR	1371025	ExpressionStatement	l_true = j	384:6:12953:12963	1369537	0	True				
ANR	1371026	AssignmentExpression	l_true = j		1369537	0		=			
ANR	1371027	Identifier	l_true		1369537	0					
ANR	1371028	Identifier	j		1369537	1					
ANR	1371029	IfStatement	if ( i != j )		1369537	1					
ANR	1371030	Condition	i != j	385:10:12975:12980	1369537	0	True				
ANR	1371031	EqualityExpression	i != j		1369537	0		!=			
ANR	1371032	Identifier	i		1369537	0					
ANR	1371033	Identifier	j		1369537	1					
ANR	1371034	CompoundStatement		268:18:7824:7824	1369537	1					
ANR	1371035	ExpressionStatement	op_array -> literals [ j ] = op_array -> literals [ i ]	386:7:12992:13037	1369537	0	True				
ANR	1371036	AssignmentExpression	op_array -> literals [ j ] = op_array -> literals [ i ]		1369537	0		=			
ANR	1371037	ArrayIndexing	op_array -> literals [ j ]		1369537	0					
ANR	1371038	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371039	Identifier	op_array		1369537	0					
ANR	1371040	Identifier	literals		1369537	1					
ANR	1371041	Identifier	j		1369537	1					
ANR	1371042	ArrayIndexing	op_array -> literals [ i ]		1369537	1					
ANR	1371043	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371044	Identifier	op_array		1369537	0					
ANR	1371045	Identifier	literals		1369537	1					
ANR	1371046	Identifier	i		1369537	1					
ANR	1371047	ExpressionStatement	info [ j ] = info [ i ]	387:7:13046:13063	1369537	1	True				
ANR	1371048	AssignmentExpression	info [ j ] = info [ i ]		1369537	0		=			
ANR	1371049	ArrayIndexing	info [ j ]		1369537	0					
ANR	1371050	Identifier	info		1369537	0					
ANR	1371051	Identifier	j		1369537	1					
ANR	1371052	ArrayIndexing	info [ i ]		1369537	1					
ANR	1371053	Identifier	info		1369537	0					
ANR	1371054	Identifier	i		1369537	1					
ANR	1371055	ExpressionStatement	j ++	389:6:13079:13082	1369537	2	True				
ANR	1371056	PostIncDecOperationExpression	j ++		1369537	0					
ANR	1371057	Identifier	j		1369537	0					
ANR	1371058	IncDec	++		1369537	1					
ANR	1371059	ExpressionStatement	map [ i ] = l_true	391:5:13096:13111	1369537	9	True				
ANR	1371060	AssignmentExpression	map [ i ] = l_true		1369537	0		=			
ANR	1371061	ArrayIndexing	map [ i ]		1369537	0					
ANR	1371062	Identifier	map		1369537	0					
ANR	1371063	Identifier	i		1369537	1					
ANR	1371064	Identifier	l_true		1369537	1					
ANR	1371065	BreakStatement	break ;	392:5:13118:13123	1369537	10	True				
ANR	1371066	Label	case IS_LONG :	393:4:13129:13141	1369537	11	True				
ANR	1371067	Identifier	IS_LONG		1369537	0					
ANR	1371068	IfStatement	"if ( ( pos = zend_hash_index_find ( & hash , Z_LVAL ( op_array -> literals [ i ] ) ) ) != NULL )"		1369537	12					
ANR	1371069	Condition	"( pos = zend_hash_index_find ( & hash , Z_LVAL ( op_array -> literals [ i ] ) ) ) != NULL"	394:9:13152:13225	1369537	0	True				
ANR	1371070	EqualityExpression	"( pos = zend_hash_index_find ( & hash , Z_LVAL ( op_array -> literals [ i ] ) ) ) != NULL"		1369537	0		!=			
ANR	1371071	AssignmentExpression	"pos = zend_hash_index_find ( & hash , Z_LVAL ( op_array -> literals [ i ] ) )"		1369537	0		=			
ANR	1371072	Identifier	pos		1369537	0					
ANR	1371073	CallExpression	"zend_hash_index_find ( & hash , Z_LVAL ( op_array -> literals [ i ] ) )"		1369537	1					
ANR	1371074	Callee	zend_hash_index_find		1369537	0					
ANR	1371075	Identifier	zend_hash_index_find		1369537	0					
ANR	1371076	ArgumentList	& hash		1369537	1					
ANR	1371077	Argument	& hash		1369537	0					
ANR	1371078	UnaryOperationExpression	& hash		1369537	0					
ANR	1371079	UnaryOperator	&		1369537	0					
ANR	1371080	Identifier	hash		1369537	1					
ANR	1371081	Argument	Z_LVAL ( op_array -> literals [ i ] )		1369537	1					
ANR	1371082	CallExpression	Z_LVAL ( op_array -> literals [ i ] )		1369537	0					
ANR	1371083	Callee	Z_LVAL		1369537	0					
ANR	1371084	Identifier	Z_LVAL		1369537	0					
ANR	1371085	ArgumentList	op_array -> literals [ i ]		1369537	1					
ANR	1371086	Argument	op_array -> literals [ i ]		1369537	0					
ANR	1371087	ArrayIndexing	op_array -> literals [ i ]		1369537	0					
ANR	1371088	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371089	Identifier	op_array		1369537	0					
ANR	1371090	Identifier	literals		1369537	1					
ANR	1371091	Identifier	i		1369537	1					
ANR	1371092	Identifier	NULL		1369537	1					
ANR	1371093	CompoundStatement		277:85:8069:8069	1369537	1					
ANR	1371094	ExpressionStatement	map [ i ] = Z_LVAL_P ( pos )	395:6:13236:13258	1369537	0	True				
ANR	1371095	AssignmentExpression	map [ i ] = Z_LVAL_P ( pos )		1369537	0		=			
ANR	1371096	ArrayIndexing	map [ i ]		1369537	0					
ANR	1371097	Identifier	map		1369537	0					
ANR	1371098	Identifier	i		1369537	1					
ANR	1371099	CallExpression	Z_LVAL_P ( pos )		1369537	1					
ANR	1371100	Callee	Z_LVAL_P		1369537	0					
ANR	1371101	Identifier	Z_LVAL_P		1369537	0					
ANR	1371102	ArgumentList	pos		1369537	1					
ANR	1371103	Argument	pos		1369537	0					
ANR	1371104	Identifier	pos		1369537	0					
ANR	1371105	ElseStatement	else		1369537	0					
ANR	1371106	CompoundStatement		279:12:8113:8113	1369537	0					
ANR	1371107	ExpressionStatement	map [ i ] = j	397:6:13280:13290	1369537	0	True				
ANR	1371108	AssignmentExpression	map [ i ] = j		1369537	0		=			
ANR	1371109	ArrayIndexing	map [ i ]		1369537	0					
ANR	1371110	Identifier	map		1369537	0					
ANR	1371111	Identifier	i		1369537	1					
ANR	1371112	Identifier	j		1369537	1					
ANR	1371113	ExpressionStatement	"ZVAL_LONG ( & zv , j )"	398:6:13298:13315	1369537	1	True				
ANR	1371114	CallExpression	"ZVAL_LONG ( & zv , j )"		1369537	0					
ANR	1371115	Callee	ZVAL_LONG		1369537	0					
ANR	1371116	Identifier	ZVAL_LONG		1369537	0					
ANR	1371117	ArgumentList	& zv		1369537	1					
ANR	1371118	Argument	& zv		1369537	0					
ANR	1371119	UnaryOperationExpression	& zv		1369537	0					
ANR	1371120	UnaryOperator	&		1369537	0					
ANR	1371121	Identifier	zv		1369537	1					
ANR	1371122	Argument	j		1369537	1					
ANR	1371123	Identifier	j		1369537	0					
ANR	1371124	ExpressionStatement	"zend_hash_index_add_new ( & hash , Z_LVAL ( op_array -> literals [ i ] ) , & zv )"	399:6:13323:13389	1369537	2	True				
ANR	1371125	CallExpression	"zend_hash_index_add_new ( & hash , Z_LVAL ( op_array -> literals [ i ] ) , & zv )"		1369537	0					
ANR	1371126	Callee	zend_hash_index_add_new		1369537	0					
ANR	1371127	Identifier	zend_hash_index_add_new		1369537	0					
ANR	1371128	ArgumentList	& hash		1369537	1					
ANR	1371129	Argument	& hash		1369537	0					
ANR	1371130	UnaryOperationExpression	& hash		1369537	0					
ANR	1371131	UnaryOperator	&		1369537	0					
ANR	1371132	Identifier	hash		1369537	1					
ANR	1371133	Argument	Z_LVAL ( op_array -> literals [ i ] )		1369537	1					
ANR	1371134	CallExpression	Z_LVAL ( op_array -> literals [ i ] )		1369537	0					
ANR	1371135	Callee	Z_LVAL		1369537	0					
ANR	1371136	Identifier	Z_LVAL		1369537	0					
ANR	1371137	ArgumentList	op_array -> literals [ i ]		1369537	1					
ANR	1371138	Argument	op_array -> literals [ i ]		1369537	0					
ANR	1371139	ArrayIndexing	op_array -> literals [ i ]		1369537	0					
ANR	1371140	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371141	Identifier	op_array		1369537	0					
ANR	1371142	Identifier	literals		1369537	1					
ANR	1371143	Identifier	i		1369537	1					
ANR	1371144	Argument	& zv		1369537	2					
ANR	1371145	UnaryOperationExpression	& zv		1369537	0					
ANR	1371146	UnaryOperator	&		1369537	0					
ANR	1371147	Identifier	zv		1369537	1					
ANR	1371148	IfStatement	if ( i != j )		1369537	3					
ANR	1371149	Condition	i != j	400:10:13401:13406	1369537	0	True				
ANR	1371150	EqualityExpression	i != j		1369537	0		!=			
ANR	1371151	Identifier	i		1369537	0					
ANR	1371152	Identifier	j		1369537	1					
ANR	1371153	CompoundStatement		283:18:8250:8250	1369537	1					
ANR	1371154	ExpressionStatement	op_array -> literals [ j ] = op_array -> literals [ i ]	401:7:13418:13463	1369537	0	True				
ANR	1371155	AssignmentExpression	op_array -> literals [ j ] = op_array -> literals [ i ]		1369537	0		=			
ANR	1371156	ArrayIndexing	op_array -> literals [ j ]		1369537	0					
ANR	1371157	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371158	Identifier	op_array		1369537	0					
ANR	1371159	Identifier	literals		1369537	1					
ANR	1371160	Identifier	j		1369537	1					
ANR	1371161	ArrayIndexing	op_array -> literals [ i ]		1369537	1					
ANR	1371162	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371163	Identifier	op_array		1369537	0					
ANR	1371164	Identifier	literals		1369537	1					
ANR	1371165	Identifier	i		1369537	1					
ANR	1371166	ExpressionStatement	info [ j ] = info [ i ]	402:7:13472:13489	1369537	1	True				
ANR	1371167	AssignmentExpression	info [ j ] = info [ i ]		1369537	0		=			
ANR	1371168	ArrayIndexing	info [ j ]		1369537	0					
ANR	1371169	Identifier	info		1369537	0					
ANR	1371170	Identifier	j		1369537	1					
ANR	1371171	ArrayIndexing	info [ i ]		1369537	1					
ANR	1371172	Identifier	info		1369537	0					
ANR	1371173	Identifier	i		1369537	1					
ANR	1371174	ExpressionStatement	j ++	404:6:13505:13508	1369537	4	True				
ANR	1371175	PostIncDecOperationExpression	j ++		1369537	0					
ANR	1371176	Identifier	j		1369537	0					
ANR	1371177	IncDec	++		1369537	1					
ANR	1371178	BreakStatement	break ;	406:5:13522:13527	1369537	13	True				
ANR	1371179	Label	case IS_DOUBLE :	407:4:13533:13547	1369537	14	True				
ANR	1371180	Identifier	IS_DOUBLE		1369537	0					
ANR	1371181	IfStatement	"if ( ( pos = zend_hash_str_find ( & hash , ( char * ) & Z_DVAL ( op_array -> literals [ i ] ) , sizeof ( double ) ) ) != NULL )"		1369537	15					
ANR	1371182	Condition	"( pos = zend_hash_str_find ( & hash , ( char * ) & Z_DVAL ( op_array -> literals [ i ] ) , sizeof ( double ) ) ) != NULL"	408:9:13558:13653	1369537	0	True				
ANR	1371183	EqualityExpression	"( pos = zend_hash_str_find ( & hash , ( char * ) & Z_DVAL ( op_array -> literals [ i ] ) , sizeof ( double ) ) ) != NULL"		1369537	0		!=			
ANR	1371184	AssignmentExpression	"pos = zend_hash_str_find ( & hash , ( char * ) & Z_DVAL ( op_array -> literals [ i ] ) , sizeof ( double ) )"		1369537	0		=			
ANR	1371185	Identifier	pos		1369537	0					
ANR	1371186	CallExpression	"zend_hash_str_find ( & hash , ( char * ) & Z_DVAL ( op_array -> literals [ i ] ) , sizeof ( double ) )"		1369537	1					
ANR	1371187	Callee	zend_hash_str_find		1369537	0					
ANR	1371188	Identifier	zend_hash_str_find		1369537	0					
ANR	1371189	ArgumentList	& hash		1369537	1					
ANR	1371190	Argument	& hash		1369537	0					
ANR	1371191	UnaryOperationExpression	& hash		1369537	0					
ANR	1371192	UnaryOperator	&		1369537	0					
ANR	1371193	Identifier	hash		1369537	1					
ANR	1371194	Argument	( char * ) & Z_DVAL ( op_array -> literals [ i ] )		1369537	1					
ANR	1371195	CastExpression	( char * ) & Z_DVAL ( op_array -> literals [ i ] )		1369537	0					
ANR	1371196	CastTarget	char *		1369537	0					
ANR	1371197	UnaryOperationExpression	& Z_DVAL ( op_array -> literals [ i ] )		1369537	1					
ANR	1371198	UnaryOperator	&		1369537	0					
ANR	1371199	CallExpression	Z_DVAL ( op_array -> literals [ i ] )		1369537	1					
ANR	1371200	Callee	Z_DVAL		1369537	0					
ANR	1371201	Identifier	Z_DVAL		1369537	0					
ANR	1371202	ArgumentList	op_array -> literals [ i ]		1369537	1					
ANR	1371203	Argument	op_array -> literals [ i ]		1369537	0					
ANR	1371204	ArrayIndexing	op_array -> literals [ i ]		1369537	0					
ANR	1371205	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371206	Identifier	op_array		1369537	0					
ANR	1371207	Identifier	literals		1369537	1					
ANR	1371208	Identifier	i		1369537	1					
ANR	1371209	Argument	sizeof ( double )		1369537	2					
ANR	1371210	SizeofExpression	sizeof ( double )		1369537	0					
ANR	1371211	Sizeof	sizeof		1369537	0					
ANR	1371212	SizeofOperand	double		1369537	1					
ANR	1371213	Identifier	NULL		1369537	1					
ANR	1371214	CompoundStatement		291:107:8497:8497	1369537	1					
ANR	1371215	ExpressionStatement	map [ i ] = Z_LVAL_P ( pos )	409:6:13664:13686	1369537	0	True				
ANR	1371216	AssignmentExpression	map [ i ] = Z_LVAL_P ( pos )		1369537	0		=			
ANR	1371217	ArrayIndexing	map [ i ]		1369537	0					
ANR	1371218	Identifier	map		1369537	0					
ANR	1371219	Identifier	i		1369537	1					
ANR	1371220	CallExpression	Z_LVAL_P ( pos )		1369537	1					
ANR	1371221	Callee	Z_LVAL_P		1369537	0					
ANR	1371222	Identifier	Z_LVAL_P		1369537	0					
ANR	1371223	ArgumentList	pos		1369537	1					
ANR	1371224	Argument	pos		1369537	0					
ANR	1371225	Identifier	pos		1369537	0					
ANR	1371226	ElseStatement	else		1369537	0					
ANR	1371227	CompoundStatement		293:12:8541:8541	1369537	0					
ANR	1371228	ExpressionStatement	map [ i ] = j	411:6:13708:13718	1369537	0	True				
ANR	1371229	AssignmentExpression	map [ i ] = j		1369537	0		=			
ANR	1371230	ArrayIndexing	map [ i ]		1369537	0					
ANR	1371231	Identifier	map		1369537	0					
ANR	1371232	Identifier	i		1369537	1					
ANR	1371233	Identifier	j		1369537	1					
ANR	1371234	ExpressionStatement	"ZVAL_LONG ( & zv , j )"	412:6:13726:13743	1369537	1	True				
ANR	1371235	CallExpression	"ZVAL_LONG ( & zv , j )"		1369537	0					
ANR	1371236	Callee	ZVAL_LONG		1369537	0					
ANR	1371237	Identifier	ZVAL_LONG		1369537	0					
ANR	1371238	ArgumentList	& zv		1369537	1					
ANR	1371239	Argument	& zv		1369537	0					
ANR	1371240	UnaryOperationExpression	& zv		1369537	0					
ANR	1371241	UnaryOperator	&		1369537	0					
ANR	1371242	Identifier	zv		1369537	1					
ANR	1371243	Argument	j		1369537	1					
ANR	1371244	Identifier	j		1369537	0					
ANR	1371245	ExpressionStatement	"zend_hash_str_add ( & hash , ( char * ) & Z_DVAL ( op_array -> literals [ i ] ) , sizeof ( double ) , & zv )"	413:6:13751:13835	1369537	2	True				
ANR	1371246	CallExpression	"zend_hash_str_add ( & hash , ( char * ) & Z_DVAL ( op_array -> literals [ i ] ) , sizeof ( double ) , & zv )"		1369537	0					
ANR	1371247	Callee	zend_hash_str_add		1369537	0					
ANR	1371248	Identifier	zend_hash_str_add		1369537	0					
ANR	1371249	ArgumentList	& hash		1369537	1					
ANR	1371250	Argument	& hash		1369537	0					
ANR	1371251	UnaryOperationExpression	& hash		1369537	0					
ANR	1371252	UnaryOperator	&		1369537	0					
ANR	1371253	Identifier	hash		1369537	1					
ANR	1371254	Argument	( char * ) & Z_DVAL ( op_array -> literals [ i ] )		1369537	1					
ANR	1371255	CastExpression	( char * ) & Z_DVAL ( op_array -> literals [ i ] )		1369537	0					
ANR	1371256	CastTarget	char *		1369537	0					
ANR	1371257	UnaryOperationExpression	& Z_DVAL ( op_array -> literals [ i ] )		1369537	1					
ANR	1371258	UnaryOperator	&		1369537	0					
ANR	1371259	CallExpression	Z_DVAL ( op_array -> literals [ i ] )		1369537	1					
ANR	1371260	Callee	Z_DVAL		1369537	0					
ANR	1371261	Identifier	Z_DVAL		1369537	0					
ANR	1371262	ArgumentList	op_array -> literals [ i ]		1369537	1					
ANR	1371263	Argument	op_array -> literals [ i ]		1369537	0					
ANR	1371264	ArrayIndexing	op_array -> literals [ i ]		1369537	0					
ANR	1371265	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371266	Identifier	op_array		1369537	0					
ANR	1371267	Identifier	literals		1369537	1					
ANR	1371268	Identifier	i		1369537	1					
ANR	1371269	Argument	sizeof ( double )		1369537	2					
ANR	1371270	SizeofExpression	sizeof ( double )		1369537	0					
ANR	1371271	Sizeof	sizeof		1369537	0					
ANR	1371272	SizeofOperand	double		1369537	1					
ANR	1371273	Argument	& zv		1369537	3					
ANR	1371274	UnaryOperationExpression	& zv		1369537	0					
ANR	1371275	UnaryOperator	&		1369537	0					
ANR	1371276	Identifier	zv		1369537	1					
ANR	1371277	IfStatement	if ( i != j )		1369537	3					
ANR	1371278	Condition	i != j	414:10:13847:13852	1369537	0	True				
ANR	1371279	EqualityExpression	i != j		1369537	0		!=			
ANR	1371280	Identifier	i		1369537	0					
ANR	1371281	Identifier	j		1369537	1					
ANR	1371282	CompoundStatement		297:18:8696:8696	1369537	1					
ANR	1371283	ExpressionStatement	op_array -> literals [ j ] = op_array -> literals [ i ]	415:7:13864:13909	1369537	0	True				
ANR	1371284	AssignmentExpression	op_array -> literals [ j ] = op_array -> literals [ i ]		1369537	0		=			
ANR	1371285	ArrayIndexing	op_array -> literals [ j ]		1369537	0					
ANR	1371286	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371287	Identifier	op_array		1369537	0					
ANR	1371288	Identifier	literals		1369537	1					
ANR	1371289	Identifier	j		1369537	1					
ANR	1371290	ArrayIndexing	op_array -> literals [ i ]		1369537	1					
ANR	1371291	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371292	Identifier	op_array		1369537	0					
ANR	1371293	Identifier	literals		1369537	1					
ANR	1371294	Identifier	i		1369537	1					
ANR	1371295	ExpressionStatement	info [ j ] = info [ i ]	416:7:13918:13935	1369537	1	True				
ANR	1371296	AssignmentExpression	info [ j ] = info [ i ]		1369537	0		=			
ANR	1371297	ArrayIndexing	info [ j ]		1369537	0					
ANR	1371298	Identifier	info		1369537	0					
ANR	1371299	Identifier	j		1369537	1					
ANR	1371300	ArrayIndexing	info [ i ]		1369537	1					
ANR	1371301	Identifier	info		1369537	0					
ANR	1371302	Identifier	i		1369537	1					
ANR	1371303	ExpressionStatement	j ++	418:6:13951:13954	1369537	4	True				
ANR	1371304	PostIncDecOperationExpression	j ++		1369537	0					
ANR	1371305	Identifier	j		1369537	0					
ANR	1371306	IncDec	++		1369537	1					
ANR	1371307	BreakStatement	break ;	420:5:13968:13973	1369537	16	True				
ANR	1371308	Label	case IS_STRING :	421:4:13979:13993	1369537	17	True				
ANR	1371309	Identifier	IS_STRING		1369537	0					
ANR	1371310	Label	case IS_CONSTANT :	422:4:13999:14015	1369537	18	True				
ANR	1371311	Identifier	IS_CONSTANT		1369537	0					
ANR	1371312	IfStatement	if ( info [ i ] . flags & LITERAL_MAY_MERGE )		1369537	19					
ANR	1371313	Condition	info [ i ] . flags & LITERAL_MAY_MERGE	423:9:14026:14058	1369537	0	True				
ANR	1371314	BitAndExpression	info [ i ] . flags & LITERAL_MAY_MERGE		1369537	0		&			
ANR	1371315	MemberAccess	info [ i ] . flags		1369537	0					
ANR	1371316	ArrayIndexing	info [ i ]		1369537	0					
ANR	1371317	Identifier	info		1369537	0					
ANR	1371318	Identifier	i		1369537	1					
ANR	1371319	Identifier	flags		1369537	1					
ANR	1371320	Identifier	LITERAL_MAY_MERGE		1369537	1					
ANR	1371321	CompoundStatement		306:44:8902:8902	1369537	1					
ANR	1371322	IfStatement	if ( info [ i ] . flags & LITERAL_EX_OBJ )		1369537	0					
ANR	1371323	Condition	info [ i ] . flags & LITERAL_EX_OBJ	424:10:14073:14102	1369537	0	True				
ANR	1371324	BitAndExpression	info [ i ] . flags & LITERAL_EX_OBJ		1369537	0		&			
ANR	1371325	MemberAccess	info [ i ] . flags		1369537	0					
ANR	1371326	ArrayIndexing	info [ i ]		1369537	0					
ANR	1371327	Identifier	info		1369537	0					
ANR	1371328	Identifier	i		1369537	1					
ANR	1371329	Identifier	flags		1369537	1					
ANR	1371330	Identifier	LITERAL_EX_OBJ		1369537	1					
ANR	1371331	CompoundStatement		308:7:8955:9040	1369537	1					
ANR	1371332	IdentifierDeclStatement	"int key_len = MAX_LENGTH_OF_LONG + sizeof ( ""->"" ) - 1 + Z_STRLEN ( op_array -> literals [ i ] ) ;"	425:7:14114:14199	1369537	0	True				
ANR	1371333	IdentifierDecl	"key_len = MAX_LENGTH_OF_LONG + sizeof ( ""->"" ) - 1 + Z_STRLEN ( op_array -> literals [ i ] )"		1369537	0					
ANR	1371334	IdentifierDeclType	int		1369537	0					
ANR	1371335	Identifier	key_len		1369537	1					
ANR	1371336	AssignmentExpression	"key_len = MAX_LENGTH_OF_LONG + sizeof ( ""->"" ) - 1 + Z_STRLEN ( op_array -> literals [ i ] )"		1369537	2		=			
ANR	1371337	Identifier	key_len		1369537	0					
ANR	1371338	AdditiveExpression	"MAX_LENGTH_OF_LONG + sizeof ( ""->"" ) - 1 + Z_STRLEN ( op_array -> literals [ i ] )"		1369537	1		+			
ANR	1371339	Identifier	MAX_LENGTH_OF_LONG		1369537	0					
ANR	1371340	AdditiveExpression	"sizeof ( ""->"" ) - 1 + Z_STRLEN ( op_array -> literals [ i ] )"		1369537	1		-			
ANR	1371341	SizeofExpression	"sizeof ( ""->"" )"		1369537	0					
ANR	1371342	Sizeof	sizeof		1369537	0					
ANR	1371343	PrimaryExpression	"""->"""		1369537	1					
ANR	1371344	AdditiveExpression	1 + Z_STRLEN ( op_array -> literals [ i ] )		1369537	1		+			
ANR	1371345	PrimaryExpression	1		1369537	0					
ANR	1371346	CallExpression	Z_STRLEN ( op_array -> literals [ i ] )		1369537	1					
ANR	1371347	Callee	Z_STRLEN		1369537	0					
ANR	1371348	Identifier	Z_STRLEN		1369537	0					
ANR	1371349	ArgumentList	op_array -> literals [ i ]		1369537	1					
ANR	1371350	Argument	op_array -> literals [ i ]		1369537	0					
ANR	1371351	ArrayIndexing	op_array -> literals [ i ]		1369537	0					
ANR	1371352	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371353	Identifier	op_array		1369537	0					
ANR	1371354	Identifier	literals		1369537	1					
ANR	1371355	Identifier	i		1369537	1					
ANR	1371356	ExpressionStatement	"key = zend_string_alloc ( key_len , 0 )"	426:7:14208:14243	1369537	1	True				
ANR	1371357	AssignmentExpression	"key = zend_string_alloc ( key_len , 0 )"		1369537	0		=			
ANR	1371358	Identifier	key		1369537	0					
ANR	1371359	CallExpression	"zend_string_alloc ( key_len , 0 )"		1369537	1					
ANR	1371360	Callee	zend_string_alloc		1369537	0					
ANR	1371361	Identifier	zend_string_alloc		1369537	0					
ANR	1371362	ArgumentList	key_len		1369537	1					
ANR	1371363	Argument	key_len		1369537	0					
ANR	1371364	Identifier	key_len		1369537	0					
ANR	1371365	Argument	0		1369537	1					
ANR	1371366	PrimaryExpression	0		1369537	0					
ANR	1371367	ExpressionStatement	"ZSTR_LEN ( key ) = snprintf ( ZSTR_VAL ( key ) , ZSTR_LEN ( key ) - 1 , ""%d->%s"" , info [ i ] . u . num , Z_STRVAL ( op_array -> literals [ i ] ) )"	427:7:14252:14366	1369537	2	True				
ANR	1371368	AssignmentExpression	"ZSTR_LEN ( key ) = snprintf ( ZSTR_VAL ( key ) , ZSTR_LEN ( key ) - 1 , ""%d->%s"" , info [ i ] . u . num , Z_STRVAL ( op_array -> literals [ i ] ) )"		1369537	0		=			
ANR	1371369	CallExpression	ZSTR_LEN ( key )		1369537	0					
ANR	1371370	Callee	ZSTR_LEN		1369537	0					
ANR	1371371	Identifier	ZSTR_LEN		1369537	0					
ANR	1371372	ArgumentList	key		1369537	1					
ANR	1371373	Argument	key		1369537	0					
ANR	1371374	Identifier	key		1369537	0					
ANR	1371375	CallExpression	"snprintf ( ZSTR_VAL ( key ) , ZSTR_LEN ( key ) - 1 , ""%d->%s"" , info [ i ] . u . num , Z_STRVAL ( op_array -> literals [ i ] ) )"		1369537	1					
ANR	1371376	Callee	snprintf		1369537	0					
ANR	1371377	Identifier	snprintf		1369537	0					
ANR	1371378	ArgumentList	ZSTR_VAL ( key )		1369537	1					
ANR	1371379	Argument	ZSTR_VAL ( key )		1369537	0					
ANR	1371380	CallExpression	ZSTR_VAL ( key )		1369537	0					
ANR	1371381	Callee	ZSTR_VAL		1369537	0					
ANR	1371382	Identifier	ZSTR_VAL		1369537	0					
ANR	1371383	ArgumentList	key		1369537	1					
ANR	1371384	Argument	key		1369537	0					
ANR	1371385	Identifier	key		1369537	0					
ANR	1371386	Argument	ZSTR_LEN ( key ) - 1		1369537	1					
ANR	1371387	AdditiveExpression	ZSTR_LEN ( key ) - 1		1369537	0		-			
ANR	1371388	CallExpression	ZSTR_LEN ( key )		1369537	0					
ANR	1371389	Callee	ZSTR_LEN		1369537	0					
ANR	1371390	Identifier	ZSTR_LEN		1369537	0					
ANR	1371391	ArgumentList	key		1369537	1					
ANR	1371392	Argument	key		1369537	0					
ANR	1371393	Identifier	key		1369537	0					
ANR	1371394	PrimaryExpression	1		1369537	1					
ANR	1371395	Argument	"""%d->%s"""		1369537	2					
ANR	1371396	PrimaryExpression	"""%d->%s"""		1369537	0					
ANR	1371397	Argument	info [ i ] . u . num		1369537	3					
ANR	1371398	MemberAccess	info [ i ] . u . num		1369537	0					
ANR	1371399	MemberAccess	info [ i ] . u		1369537	0					
ANR	1371400	ArrayIndexing	info [ i ]		1369537	0					
ANR	1371401	Identifier	info		1369537	0					
ANR	1371402	Identifier	i		1369537	1					
ANR	1371403	Identifier	u		1369537	1					
ANR	1371404	Identifier	num		1369537	1					
ANR	1371405	Argument	Z_STRVAL ( op_array -> literals [ i ] )		1369537	4					
ANR	1371406	CallExpression	Z_STRVAL ( op_array -> literals [ i ] )		1369537	0					
ANR	1371407	Callee	Z_STRVAL		1369537	0					
ANR	1371408	Identifier	Z_STRVAL		1369537	0					
ANR	1371409	ArgumentList	op_array -> literals [ i ]		1369537	1					
ANR	1371410	Argument	op_array -> literals [ i ]		1369537	0					
ANR	1371411	ArrayIndexing	op_array -> literals [ i ]		1369537	0					
ANR	1371412	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371413	Identifier	op_array		1369537	0					
ANR	1371414	Identifier	literals		1369537	1					
ANR	1371415	Identifier	i		1369537	1					
ANR	1371416	ElseStatement	else		1369537	0					
ANR	1371417	IfStatement	if ( info [ i ] . flags & LITERAL_EX_CLASS )		1369537	0					
ANR	1371418	Condition	info [ i ] . flags & LITERAL_EX_CLASS	428:17:14385:14416	1369537	0	True				
ANR	1371419	BitAndExpression	info [ i ] . flags & LITERAL_EX_CLASS		1369537	0		&			
ANR	1371420	MemberAccess	info [ i ] . flags		1369537	0					
ANR	1371421	ArrayIndexing	info [ i ]		1369537	0					
ANR	1371422	Identifier	info		1369537	0					
ANR	1371423	Identifier	i		1369537	1					
ANR	1371424	Identifier	flags		1369537	1					
ANR	1371425	Identifier	LITERAL_EX_CLASS		1369537	1					
ANR	1371426	CompoundStatement		313:7:9289:9385	1369537	1					
ANR	1371427	IdentifierDeclStatement	int key_len ;	429:7:14428:14439	1369537	0	True				
ANR	1371428	IdentifierDecl	key_len		1369537	0					
ANR	1371429	IdentifierDeclType	int		1369537	0					
ANR	1371430	Identifier	key_len		1369537	1					
ANR	1371431	IdentifierDeclStatement	zval * class_name = & op_array -> literals [ ( info [ i ] . u . num < i ) ? map [ info [ i ] . u . num ] : info [ i ] . u . num ] ;	430:7:14448:14544	1369537	1	True				
ANR	1371432	IdentifierDecl	* class_name = & op_array -> literals [ ( info [ i ] . u . num < i ) ? map [ info [ i ] . u . num ] : info [ i ] . u . num ]		1369537	0					
ANR	1371433	IdentifierDeclType	zval *		1369537	0					
ANR	1371434	Identifier	class_name		1369537	1					
ANR	1371435	AssignmentExpression	* class_name = & op_array -> literals [ ( info [ i ] . u . num < i ) ? map [ info [ i ] . u . num ] : info [ i ] . u . num ]		1369537	2		=			
ANR	1371436	Identifier	class_name		1369537	0					
ANR	1371437	UnaryOperationExpression	& op_array -> literals [ ( info [ i ] . u . num < i ) ? map [ info [ i ] . u . num ] : info [ i ] . u . num ]		1369537	1					
ANR	1371438	UnaryOperator	&		1369537	0					
ANR	1371439	ArrayIndexing	op_array -> literals [ ( info [ i ] . u . num < i ) ? map [ info [ i ] . u . num ] : info [ i ] . u . num ]		1369537	1					
ANR	1371440	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371441	Identifier	op_array		1369537	0					
ANR	1371442	Identifier	literals		1369537	1					
ANR	1371443	ConditionalExpression	( info [ i ] . u . num < i ) ? map [ info [ i ] . u . num ] : info [ i ] . u . num		1369537	1					
ANR	1371444	Condition	info [ i ] . u . num < i		1369537	0					
ANR	1371445	RelationalExpression	info [ i ] . u . num < i		1369537	0		<			
ANR	1371446	MemberAccess	info [ i ] . u . num		1369537	0					
ANR	1371447	MemberAccess	info [ i ] . u		1369537	0					
ANR	1371448	ArrayIndexing	info [ i ]		1369537	0					
ANR	1371449	Identifier	info		1369537	0					
ANR	1371450	Identifier	i		1369537	1					
ANR	1371451	Identifier	u		1369537	1					
ANR	1371452	Identifier	num		1369537	1					
ANR	1371453	Identifier	i		1369537	1					
ANR	1371454	ArrayIndexing	map [ info [ i ] . u . num ]		1369537	1					
ANR	1371455	Identifier	map		1369537	0					
ANR	1371456	MemberAccess	info [ i ] . u . num		1369537	1					
ANR	1371457	MemberAccess	info [ i ] . u		1369537	0					
ANR	1371458	ArrayIndexing	info [ i ]		1369537	0					
ANR	1371459	Identifier	info		1369537	0					
ANR	1371460	Identifier	i		1369537	1					
ANR	1371461	Identifier	u		1369537	1					
ANR	1371462	Identifier	num		1369537	1					
ANR	1371463	MemberAccess	info [ i ] . u . num		1369537	2					
ANR	1371464	MemberAccess	info [ i ] . u		1369537	0					
ANR	1371465	ArrayIndexing	info [ i ]		1369537	0					
ANR	1371466	Identifier	info		1369537	0					
ANR	1371467	Identifier	i		1369537	1					
ANR	1371468	Identifier	u		1369537	1					
ANR	1371469	Identifier	num		1369537	1					
ANR	1371470	ExpressionStatement	"key_len = Z_STRLEN_P ( class_name ) + sizeof ( ""::"" ) - 1 + Z_STRLEN ( op_array -> literals [ i ] )"	431:7:14553:14638	1369537	2	True				
ANR	1371471	AssignmentExpression	"key_len = Z_STRLEN_P ( class_name ) + sizeof ( ""::"" ) - 1 + Z_STRLEN ( op_array -> literals [ i ] )"		1369537	0		=			
ANR	1371472	Identifier	key_len		1369537	0					
ANR	1371473	AdditiveExpression	"Z_STRLEN_P ( class_name ) + sizeof ( ""::"" ) - 1 + Z_STRLEN ( op_array -> literals [ i ] )"		1369537	1		+			
ANR	1371474	CallExpression	Z_STRLEN_P ( class_name )		1369537	0					
ANR	1371475	Callee	Z_STRLEN_P		1369537	0					
ANR	1371476	Identifier	Z_STRLEN_P		1369537	0					
ANR	1371477	ArgumentList	class_name		1369537	1					
ANR	1371478	Argument	class_name		1369537	0					
ANR	1371479	Identifier	class_name		1369537	0					
ANR	1371480	AdditiveExpression	"sizeof ( ""::"" ) - 1 + Z_STRLEN ( op_array -> literals [ i ] )"		1369537	1		-			
ANR	1371481	SizeofExpression	"sizeof ( ""::"" )"		1369537	0					
ANR	1371482	Sizeof	sizeof		1369537	0					
ANR	1371483	PrimaryExpression	"""::"""		1369537	1					
ANR	1371484	AdditiveExpression	1 + Z_STRLEN ( op_array -> literals [ i ] )		1369537	1		+			
ANR	1371485	PrimaryExpression	1		1369537	0					
ANR	1371486	CallExpression	Z_STRLEN ( op_array -> literals [ i ] )		1369537	1					
ANR	1371487	Callee	Z_STRLEN		1369537	0					
ANR	1371488	Identifier	Z_STRLEN		1369537	0					
ANR	1371489	ArgumentList	op_array -> literals [ i ]		1369537	1					
ANR	1371490	Argument	op_array -> literals [ i ]		1369537	0					
ANR	1371491	ArrayIndexing	op_array -> literals [ i ]		1369537	0					
ANR	1371492	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371493	Identifier	op_array		1369537	0					
ANR	1371494	Identifier	literals		1369537	1					
ANR	1371495	Identifier	i		1369537	1					
ANR	1371496	ExpressionStatement	"key = zend_string_alloc ( key_len , 0 )"	432:7:14647:14682	1369537	3	True				
ANR	1371497	AssignmentExpression	"key = zend_string_alloc ( key_len , 0 )"		1369537	0		=			
ANR	1371498	Identifier	key		1369537	0					
ANR	1371499	CallExpression	"zend_string_alloc ( key_len , 0 )"		1369537	1					
ANR	1371500	Callee	zend_string_alloc		1369537	0					
ANR	1371501	Identifier	zend_string_alloc		1369537	0					
ANR	1371502	ArgumentList	key_len		1369537	1					
ANR	1371503	Argument	key_len		1369537	0					
ANR	1371504	Identifier	key_len		1369537	0					
ANR	1371505	Argument	0		1369537	1					
ANR	1371506	PrimaryExpression	0		1369537	0					
ANR	1371507	ExpressionStatement	"memcpy ( ZSTR_VAL ( key ) , Z_STRVAL_P ( class_name ) , Z_STRLEN_P ( class_name ) )"	433:7:14691:14760	1369537	4	True				
ANR	1371508	CallExpression	"memcpy ( ZSTR_VAL ( key ) , Z_STRVAL_P ( class_name ) , Z_STRLEN_P ( class_name ) )"		1369537	0					
ANR	1371509	Callee	memcpy		1369537	0					
ANR	1371510	Identifier	memcpy		1369537	0					
ANR	1371511	ArgumentList	ZSTR_VAL ( key )		1369537	1					
ANR	1371512	Argument	ZSTR_VAL ( key )		1369537	0					
ANR	1371513	CallExpression	ZSTR_VAL ( key )		1369537	0					
ANR	1371514	Callee	ZSTR_VAL		1369537	0					
ANR	1371515	Identifier	ZSTR_VAL		1369537	0					
ANR	1371516	ArgumentList	key		1369537	1					
ANR	1371517	Argument	key		1369537	0					
ANR	1371518	Identifier	key		1369537	0					
ANR	1371519	Argument	Z_STRVAL_P ( class_name )		1369537	1					
ANR	1371520	CallExpression	Z_STRVAL_P ( class_name )		1369537	0					
ANR	1371521	Callee	Z_STRVAL_P		1369537	0					
ANR	1371522	Identifier	Z_STRVAL_P		1369537	0					
ANR	1371523	ArgumentList	class_name		1369537	1					
ANR	1371524	Argument	class_name		1369537	0					
ANR	1371525	Identifier	class_name		1369537	0					
ANR	1371526	Argument	Z_STRLEN_P ( class_name )		1369537	2					
ANR	1371527	CallExpression	Z_STRLEN_P ( class_name )		1369537	0					
ANR	1371528	Callee	Z_STRLEN_P		1369537	0					
ANR	1371529	Identifier	Z_STRLEN_P		1369537	0					
ANR	1371530	ArgumentList	class_name		1369537	1					
ANR	1371531	Argument	class_name		1369537	0					
ANR	1371532	Identifier	class_name		1369537	0					
ANR	1371533	ExpressionStatement	"memcpy ( ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name ) , ""::"" , sizeof ( ""::"" ) - 1 )"	434:7:14769:14839	1369537	5	True				
ANR	1371534	CallExpression	"memcpy ( ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name ) , ""::"" , sizeof ( ""::"" ) - 1 )"		1369537	0					
ANR	1371535	Callee	memcpy		1369537	0					
ANR	1371536	Identifier	memcpy		1369537	0					
ANR	1371537	ArgumentList	ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name )		1369537	1					
ANR	1371538	Argument	ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name )		1369537	0					
ANR	1371539	AdditiveExpression	ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name )		1369537	0		+			
ANR	1371540	CallExpression	ZSTR_VAL ( key )		1369537	0					
ANR	1371541	Callee	ZSTR_VAL		1369537	0					
ANR	1371542	Identifier	ZSTR_VAL		1369537	0					
ANR	1371543	ArgumentList	key		1369537	1					
ANR	1371544	Argument	key		1369537	0					
ANR	1371545	Identifier	key		1369537	0					
ANR	1371546	CallExpression	Z_STRLEN_P ( class_name )		1369537	1					
ANR	1371547	Callee	Z_STRLEN_P		1369537	0					
ANR	1371548	Identifier	Z_STRLEN_P		1369537	0					
ANR	1371549	ArgumentList	class_name		1369537	1					
ANR	1371550	Argument	class_name		1369537	0					
ANR	1371551	Identifier	class_name		1369537	0					
ANR	1371552	Argument	"""::"""		1369537	1					
ANR	1371553	PrimaryExpression	"""::"""		1369537	0					
ANR	1371554	Argument	"sizeof ( ""::"" ) - 1"		1369537	2					
ANR	1371555	AdditiveExpression	"sizeof ( ""::"" ) - 1"		1369537	0		-			
ANR	1371556	SizeofExpression	"sizeof ( ""::"" )"		1369537	0					
ANR	1371557	Sizeof	sizeof		1369537	0					
ANR	1371558	PrimaryExpression	"""::"""		1369537	1					
ANR	1371559	PrimaryExpression	1		1369537	1					
ANR	1371560	ExpressionStatement	"memcpy ( ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name ) + sizeof ( ""::"" ) - 1 , Z_STRVAL ( op_array -> literals [ i ] ) , Z_STRLEN ( op_array -> literals [ i ] ) + 1 )"	435:7:14848:14999	1369537	6	True				
ANR	1371561	CallExpression	"memcpy ( ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name ) + sizeof ( ""::"" ) - 1 , Z_STRVAL ( op_array -> literals [ i ] ) , Z_STRLEN ( op_array -> literals [ i ] ) + 1 )"		1369537	0					
ANR	1371562	Callee	memcpy		1369537	0					
ANR	1371563	Identifier	memcpy		1369537	0					
ANR	1371564	ArgumentList	"ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name ) + sizeof ( ""::"" ) - 1"		1369537	1					
ANR	1371565	Argument	"ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name ) + sizeof ( ""::"" ) - 1"		1369537	0					
ANR	1371566	AdditiveExpression	"ZSTR_VAL ( key ) + Z_STRLEN_P ( class_name ) + sizeof ( ""::"" ) - 1"		1369537	0		+			
ANR	1371567	CallExpression	ZSTR_VAL ( key )		1369537	0					
ANR	1371568	Callee	ZSTR_VAL		1369537	0					
ANR	1371569	Identifier	ZSTR_VAL		1369537	0					
ANR	1371570	ArgumentList	key		1369537	1					
ANR	1371571	Argument	key		1369537	0					
ANR	1371572	Identifier	key		1369537	0					
ANR	1371573	AdditiveExpression	"Z_STRLEN_P ( class_name ) + sizeof ( ""::"" ) - 1"		1369537	1		+			
ANR	1371574	CallExpression	Z_STRLEN_P ( class_name )		1369537	0					
ANR	1371575	Callee	Z_STRLEN_P		1369537	0					
ANR	1371576	Identifier	Z_STRLEN_P		1369537	0					
ANR	1371577	ArgumentList	class_name		1369537	1					
ANR	1371578	Argument	class_name		1369537	0					
ANR	1371579	Identifier	class_name		1369537	0					
ANR	1371580	AdditiveExpression	"sizeof ( ""::"" ) - 1"		1369537	1		-			
ANR	1371581	SizeofExpression	"sizeof ( ""::"" )"		1369537	0					
ANR	1371582	Sizeof	sizeof		1369537	0					
ANR	1371583	PrimaryExpression	"""::"""		1369537	1					
ANR	1371584	PrimaryExpression	1		1369537	1					
ANR	1371585	Argument	Z_STRVAL ( op_array -> literals [ i ] )		1369537	1					
ANR	1371586	CallExpression	Z_STRVAL ( op_array -> literals [ i ] )		1369537	0					
ANR	1371587	Callee	Z_STRVAL		1369537	0					
ANR	1371588	Identifier	Z_STRVAL		1369537	0					
ANR	1371589	ArgumentList	op_array -> literals [ i ]		1369537	1					
ANR	1371590	Argument	op_array -> literals [ i ]		1369537	0					
ANR	1371591	ArrayIndexing	op_array -> literals [ i ]		1369537	0					
ANR	1371592	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371593	Identifier	op_array		1369537	0					
ANR	1371594	Identifier	literals		1369537	1					
ANR	1371595	Identifier	i		1369537	1					
ANR	1371596	Argument	Z_STRLEN ( op_array -> literals [ i ] ) + 1		1369537	2					
ANR	1371597	AdditiveExpression	Z_STRLEN ( op_array -> literals [ i ] ) + 1		1369537	0		+			
ANR	1371598	CallExpression	Z_STRLEN ( op_array -> literals [ i ] )		1369537	0					
ANR	1371599	Callee	Z_STRLEN		1369537	0					
ANR	1371600	Identifier	Z_STRLEN		1369537	0					
ANR	1371601	ArgumentList	op_array -> literals [ i ]		1369537	1					
ANR	1371602	Argument	op_array -> literals [ i ]		1369537	0					
ANR	1371603	ArrayIndexing	op_array -> literals [ i ]		1369537	0					
ANR	1371604	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371605	Identifier	op_array		1369537	0					
ANR	1371606	Identifier	literals		1369537	1					
ANR	1371607	Identifier	i		1369537	1					
ANR	1371608	PrimaryExpression	1		1369537	1					
ANR	1371609	ElseStatement	else		1369537	0					
ANR	1371610	CompoundStatement		321:13:9855:9855	1369537	0					
ANR	1371611	ExpressionStatement	"key = zend_string_init ( Z_STRVAL ( op_array -> literals [ i ] ) , Z_STRLEN ( op_array -> literals [ i ] ) , 0 )"	439:7:15023:15114	1369537	0	True				
ANR	1371612	AssignmentExpression	"key = zend_string_init ( Z_STRVAL ( op_array -> literals [ i ] ) , Z_STRLEN ( op_array -> literals [ i ] ) , 0 )"		1369537	0		=			
ANR	1371613	Identifier	key		1369537	0					
ANR	1371614	CallExpression	"zend_string_init ( Z_STRVAL ( op_array -> literals [ i ] ) , Z_STRLEN ( op_array -> literals [ i ] ) , 0 )"		1369537	1					
ANR	1371615	Callee	zend_string_init		1369537	0					
ANR	1371616	Identifier	zend_string_init		1369537	0					
ANR	1371617	ArgumentList	Z_STRVAL ( op_array -> literals [ i ] )		1369537	1					
ANR	1371618	Argument	Z_STRVAL ( op_array -> literals [ i ] )		1369537	0					
ANR	1371619	CallExpression	Z_STRVAL ( op_array -> literals [ i ] )		1369537	0					
ANR	1371620	Callee	Z_STRVAL		1369537	0					
ANR	1371621	Identifier	Z_STRVAL		1369537	0					
ANR	1371622	ArgumentList	op_array -> literals [ i ]		1369537	1					
ANR	1371623	Argument	op_array -> literals [ i ]		1369537	0					
ANR	1371624	ArrayIndexing	op_array -> literals [ i ]		1369537	0					
ANR	1371625	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371626	Identifier	op_array		1369537	0					
ANR	1371627	Identifier	literals		1369537	1					
ANR	1371628	Identifier	i		1369537	1					
ANR	1371629	Argument	Z_STRLEN ( op_array -> literals [ i ] )		1369537	1					
ANR	1371630	CallExpression	Z_STRLEN ( op_array -> literals [ i ] )		1369537	0					
ANR	1371631	Callee	Z_STRLEN		1369537	0					
ANR	1371632	Identifier	Z_STRLEN		1369537	0					
ANR	1371633	ArgumentList	op_array -> literals [ i ]		1369537	1					
ANR	1371634	Argument	op_array -> literals [ i ]		1369537	0					
ANR	1371635	ArrayIndexing	op_array -> literals [ i ]		1369537	0					
ANR	1371636	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371637	Identifier	op_array		1369537	0					
ANR	1371638	Identifier	literals		1369537	1					
ANR	1371639	Identifier	i		1369537	1					
ANR	1371640	Argument	0		1369537	2					
ANR	1371641	PrimaryExpression	0		1369537	0					
ANR	1371642	ExpressionStatement	"ZSTR_H ( key ) = zend_hash_func ( ZSTR_VAL ( key ) , ZSTR_LEN ( key ) )"	441:6:15130:15188	1369537	1	True				
ANR	1371643	AssignmentExpression	"ZSTR_H ( key ) = zend_hash_func ( ZSTR_VAL ( key ) , ZSTR_LEN ( key ) )"		1369537	0		=			
ANR	1371644	CallExpression	ZSTR_H ( key )		1369537	0					
ANR	1371645	Callee	ZSTR_H		1369537	0					
ANR	1371646	Identifier	ZSTR_H		1369537	0					
ANR	1371647	ArgumentList	key		1369537	1					
ANR	1371648	Argument	key		1369537	0					
ANR	1371649	Identifier	key		1369537	0					
ANR	1371650	CallExpression	"zend_hash_func ( ZSTR_VAL ( key ) , ZSTR_LEN ( key ) )"		1369537	1					
ANR	1371651	Callee	zend_hash_func		1369537	0					
ANR	1371652	Identifier	zend_hash_func		1369537	0					
ANR	1371653	ArgumentList	ZSTR_VAL ( key )		1369537	1					
ANR	1371654	Argument	ZSTR_VAL ( key )		1369537	0					
ANR	1371655	CallExpression	ZSTR_VAL ( key )		1369537	0					
ANR	1371656	Callee	ZSTR_VAL		1369537	0					
ANR	1371657	Identifier	ZSTR_VAL		1369537	0					
ANR	1371658	ArgumentList	key		1369537	1					
ANR	1371659	Argument	key		1369537	0					
ANR	1371660	Identifier	key		1369537	0					
ANR	1371661	Argument	ZSTR_LEN ( key )		1369537	1					
ANR	1371662	CallExpression	ZSTR_LEN ( key )		1369537	0					
ANR	1371663	Callee	ZSTR_LEN		1369537	0					
ANR	1371664	Identifier	ZSTR_LEN		1369537	0					
ANR	1371665	ArgumentList	key		1369537	1					
ANR	1371666	Argument	key		1369537	0					
ANR	1371667	Identifier	key		1369537	0					
ANR	1371668	ExpressionStatement	ZSTR_H ( key ) += info [ i ] . flags	442:6:15196:15224	1369537	2	True				
ANR	1371669	AssignmentExpression	ZSTR_H ( key ) += info [ i ] . flags		1369537	0		+=			
ANR	1371670	CallExpression	ZSTR_H ( key )		1369537	0					
ANR	1371671	Callee	ZSTR_H		1369537	0					
ANR	1371672	Identifier	ZSTR_H		1369537	0					
ANR	1371673	ArgumentList	key		1369537	1					
ANR	1371674	Argument	key		1369537	0					
ANR	1371675	Identifier	key		1369537	0					
ANR	1371676	MemberAccess	info [ i ] . flags		1369537	1					
ANR	1371677	ArrayIndexing	info [ i ]		1369537	0					
ANR	1371678	Identifier	info		1369537	0					
ANR	1371679	Identifier	i		1369537	1					
ANR	1371680	Identifier	flags		1369537	1					
ANR	1371681	IfStatement	"if ( ( info [ i ] . flags & LITERAL_MAY_MERGE ) && ( pos = zend_hash_find ( & hash , key ) ) != NULL && Z_TYPE ( op_array -> literals [ i ] ) == Z_TYPE ( op_array -> literals [ Z_LVAL_P ( pos ) ] ) && info [ i ] . flags == info [ Z_LVAL_P ( pos ) ] . flags )"		1369537	20					
ANR	1371682	Condition	"( info [ i ] . flags & LITERAL_MAY_MERGE ) && ( pos = zend_hash_find ( & hash , key ) ) != NULL && Z_TYPE ( op_array -> literals [ i ] ) == Z_TYPE ( op_array -> literals [ Z_LVAL_P ( pos ) ] ) && info [ i ] . flags == info [ Z_LVAL_P ( pos ) ] . flags"	444:9:15242:15467	1369537	0	True				
ANR	1371683	AndExpression	"( info [ i ] . flags & LITERAL_MAY_MERGE ) && ( pos = zend_hash_find ( & hash , key ) ) != NULL && Z_TYPE ( op_array -> literals [ i ] ) == Z_TYPE ( op_array -> literals [ Z_LVAL_P ( pos ) ] ) && info [ i ] . flags == info [ Z_LVAL_P ( pos ) ] . flags"		1369537	0		&&			
ANR	1371684	BitAndExpression	info [ i ] . flags & LITERAL_MAY_MERGE		1369537	0		&			
ANR	1371685	MemberAccess	info [ i ] . flags		1369537	0					
ANR	1371686	ArrayIndexing	info [ i ]		1369537	0					
ANR	1371687	Identifier	info		1369537	0					
ANR	1371688	Identifier	i		1369537	1					
ANR	1371689	Identifier	flags		1369537	1					
ANR	1371690	Identifier	LITERAL_MAY_MERGE		1369537	1					
ANR	1371691	AndExpression	"( pos = zend_hash_find ( & hash , key ) ) != NULL && Z_TYPE ( op_array -> literals [ i ] ) == Z_TYPE ( op_array -> literals [ Z_LVAL_P ( pos ) ] ) && info [ i ] . flags == info [ Z_LVAL_P ( pos ) ] . flags"		1369537	1		&&			
ANR	1371692	EqualityExpression	"( pos = zend_hash_find ( & hash , key ) ) != NULL"		1369537	0		!=			
ANR	1371693	AssignmentExpression	"pos = zend_hash_find ( & hash , key )"		1369537	0		=			
ANR	1371694	Identifier	pos		1369537	0					
ANR	1371695	CallExpression	"zend_hash_find ( & hash , key )"		1369537	1					
ANR	1371696	Callee	zend_hash_find		1369537	0					
ANR	1371697	Identifier	zend_hash_find		1369537	0					
ANR	1371698	ArgumentList	& hash		1369537	1					
ANR	1371699	Argument	& hash		1369537	0					
ANR	1371700	UnaryOperationExpression	& hash		1369537	0					
ANR	1371701	UnaryOperator	&		1369537	0					
ANR	1371702	Identifier	hash		1369537	1					
ANR	1371703	Argument	key		1369537	1					
ANR	1371704	Identifier	key		1369537	0					
ANR	1371705	Identifier	NULL		1369537	1					
ANR	1371706	AndExpression	Z_TYPE ( op_array -> literals [ i ] ) == Z_TYPE ( op_array -> literals [ Z_LVAL_P ( pos ) ] ) && info [ i ] . flags == info [ Z_LVAL_P ( pos ) ] . flags		1369537	1		&&			
ANR	1371707	EqualityExpression	Z_TYPE ( op_array -> literals [ i ] ) == Z_TYPE ( op_array -> literals [ Z_LVAL_P ( pos ) ] )		1369537	0		==			
ANR	1371708	CallExpression	Z_TYPE ( op_array -> literals [ i ] )		1369537	0					
ANR	1371709	Callee	Z_TYPE		1369537	0					
ANR	1371710	Identifier	Z_TYPE		1369537	0					
ANR	1371711	ArgumentList	op_array -> literals [ i ]		1369537	1					
ANR	1371712	Argument	op_array -> literals [ i ]		1369537	0					
ANR	1371713	ArrayIndexing	op_array -> literals [ i ]		1369537	0					
ANR	1371714	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371715	Identifier	op_array		1369537	0					
ANR	1371716	Identifier	literals		1369537	1					
ANR	1371717	Identifier	i		1369537	1					
ANR	1371718	CallExpression	Z_TYPE ( op_array -> literals [ Z_LVAL_P ( pos ) ] )		1369537	1					
ANR	1371719	Callee	Z_TYPE		1369537	0					
ANR	1371720	Identifier	Z_TYPE		1369537	0					
ANR	1371721	ArgumentList	op_array -> literals [ Z_LVAL_P ( pos ) ]		1369537	1					
ANR	1371722	Argument	op_array -> literals [ Z_LVAL_P ( pos ) ]		1369537	0					
ANR	1371723	ArrayIndexing	op_array -> literals [ Z_LVAL_P ( pos ) ]		1369537	0					
ANR	1371724	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371725	Identifier	op_array		1369537	0					
ANR	1371726	Identifier	literals		1369537	1					
ANR	1371727	CallExpression	Z_LVAL_P ( pos )		1369537	1					
ANR	1371728	Callee	Z_LVAL_P		1369537	0					
ANR	1371729	Identifier	Z_LVAL_P		1369537	0					
ANR	1371730	ArgumentList	pos		1369537	1					
ANR	1371731	Argument	pos		1369537	0					
ANR	1371732	Identifier	pos		1369537	0					
ANR	1371733	EqualityExpression	info [ i ] . flags == info [ Z_LVAL_P ( pos ) ] . flags		1369537	1		==			
ANR	1371734	MemberAccess	info [ i ] . flags		1369537	0					
ANR	1371735	ArrayIndexing	info [ i ]		1369537	0					
ANR	1371736	Identifier	info		1369537	0					
ANR	1371737	Identifier	i		1369537	1					
ANR	1371738	Identifier	flags		1369537	1					
ANR	1371739	MemberAccess	info [ Z_LVAL_P ( pos ) ] . flags		1369537	1					
ANR	1371740	ArrayIndexing	info [ Z_LVAL_P ( pos ) ]		1369537	0					
ANR	1371741	Identifier	info		1369537	0					
ANR	1371742	CallExpression	Z_LVAL_P ( pos )		1369537	1					
ANR	1371743	Callee	Z_LVAL_P		1369537	0					
ANR	1371744	Identifier	Z_LVAL_P		1369537	0					
ANR	1371745	ArgumentList	pos		1369537	1					
ANR	1371746	Argument	pos		1369537	0					
ANR	1371747	Identifier	pos		1369537	0					
ANR	1371748	Identifier	flags		1369537	1					
ANR	1371749	CompoundStatement		330:50:10311:10311	1369537	1					
ANR	1371750	ExpressionStatement	zend_string_release ( key )	449:6:15479:15503	1369537	0	True				
ANR	1371751	CallExpression	zend_string_release ( key )		1369537	0					
ANR	1371752	Callee	zend_string_release		1369537	0					
ANR	1371753	Identifier	zend_string_release		1369537	0					
ANR	1371754	ArgumentList	key		1369537	1					
ANR	1371755	Argument	key		1369537	0					
ANR	1371756	Identifier	key		1369537	0					
ANR	1371757	ExpressionStatement	map [ i ] = Z_LVAL_P ( pos )	450:6:15511:15533	1369537	1	True				
ANR	1371758	AssignmentExpression	map [ i ] = Z_LVAL_P ( pos )		1369537	0		=			
ANR	1371759	ArrayIndexing	map [ i ]		1369537	0					
ANR	1371760	Identifier	map		1369537	0					
ANR	1371761	Identifier	i		1369537	1					
ANR	1371762	CallExpression	Z_LVAL_P ( pos )		1369537	1					
ANR	1371763	Callee	Z_LVAL_P		1369537	0					
ANR	1371764	Identifier	Z_LVAL_P		1369537	0					
ANR	1371765	ArgumentList	pos		1369537	1					
ANR	1371766	Argument	pos		1369537	0					
ANR	1371767	Identifier	pos		1369537	0					
ANR	1371768	ExpressionStatement	zval_dtor ( & op_array -> literals [ i ] )	451:6:15541:15574	1369537	2	True				
ANR	1371769	CallExpression	zval_dtor ( & op_array -> literals [ i ] )		1369537	0					
ANR	1371770	Callee	zval_dtor		1369537	0					
ANR	1371771	Identifier	zval_dtor		1369537	0					
ANR	1371772	ArgumentList	& op_array -> literals [ i ]		1369537	1					
ANR	1371773	Argument	& op_array -> literals [ i ]		1369537	0					
ANR	1371774	UnaryOperationExpression	& op_array -> literals [ i ]		1369537	0					
ANR	1371775	UnaryOperator	&		1369537	0					
ANR	1371776	ArrayIndexing	op_array -> literals [ i ]		1369537	1					
ANR	1371777	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371778	Identifier	op_array		1369537	0					
ANR	1371779	Identifier	literals		1369537	1					
ANR	1371780	Identifier	i		1369537	1					
ANR	1371781	ExpressionStatement	n = LITERAL_NUM_RELATED ( info [ i ] . flags )	452:6:15582:15620	1369537	3	True				
ANR	1371782	AssignmentExpression	n = LITERAL_NUM_RELATED ( info [ i ] . flags )		1369537	0		=			
ANR	1371783	Identifier	n		1369537	0					
ANR	1371784	CallExpression	LITERAL_NUM_RELATED ( info [ i ] . flags )		1369537	1					
ANR	1371785	Callee	LITERAL_NUM_RELATED		1369537	0					
ANR	1371786	Identifier	LITERAL_NUM_RELATED		1369537	0					
ANR	1371787	ArgumentList	info [ i ] . flags		1369537	1					
ANR	1371788	Argument	info [ i ] . flags		1369537	0					
ANR	1371789	MemberAccess	info [ i ] . flags		1369537	0					
ANR	1371790	ArrayIndexing	info [ i ]		1369537	0					
ANR	1371791	Identifier	info		1369537	0					
ANR	1371792	Identifier	i		1369537	1					
ANR	1371793	Identifier	flags		1369537	1					
ANR	1371794	WhileStatement	while ( n > 1 )		1369537	4					
ANR	1371795	Condition	n > 1	453:13:15635:15639	1369537	0	True				
ANR	1371796	RelationalExpression	n > 1		1369537	0		>			
ANR	1371797	Identifier	n		1369537	0					
ANR	1371798	PrimaryExpression	1		1369537	1					
ANR	1371799	CompoundStatement		336:20:10483:10483	1369537	1					
ANR	1371800	ExpressionStatement	i ++	454:7:15651:15654	1369537	0	True				
ANR	1371801	PostIncDecOperationExpression	i ++		1369537	0					
ANR	1371802	Identifier	i		1369537	0					
ANR	1371803	IncDec	++		1369537	1					
ANR	1371804	ExpressionStatement	zval_dtor ( & op_array -> literals [ i ] )	455:7:15663:15696	1369537	1	True				
ANR	1371805	CallExpression	zval_dtor ( & op_array -> literals [ i ] )		1369537	0					
ANR	1371806	Callee	zval_dtor		1369537	0					
ANR	1371807	Identifier	zval_dtor		1369537	0					
ANR	1371808	ArgumentList	& op_array -> literals [ i ]		1369537	1					
ANR	1371809	Argument	& op_array -> literals [ i ]		1369537	0					
ANR	1371810	UnaryOperationExpression	& op_array -> literals [ i ]		1369537	0					
ANR	1371811	UnaryOperator	&		1369537	0					
ANR	1371812	ArrayIndexing	op_array -> literals [ i ]		1369537	1					
ANR	1371813	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371814	Identifier	op_array		1369537	0					
ANR	1371815	Identifier	literals		1369537	1					
ANR	1371816	Identifier	i		1369537	1					
ANR	1371817	ExpressionStatement	n --	456:7:15705:15708	1369537	2	True				
ANR	1371818	PostIncDecOperationExpression	n --		1369537	0					
ANR	1371819	Identifier	n		1369537	0					
ANR	1371820	IncDec	--		1369537	1					
ANR	1371821	ElseStatement	else		1369537	0					
ANR	1371822	CompoundStatement		341:12:10571:10571	1369537	0					
ANR	1371823	ExpressionStatement	map [ i ] = j	459:6:15738:15748	1369537	0	True				
ANR	1371824	AssignmentExpression	map [ i ] = j		1369537	0		=			
ANR	1371825	ArrayIndexing	map [ i ]		1369537	0					
ANR	1371826	Identifier	map		1369537	0					
ANR	1371827	Identifier	i		1369537	1					
ANR	1371828	Identifier	j		1369537	1					
ANR	1371829	IfStatement	if ( info [ i ] . flags & LITERAL_MAY_MERGE )		1369537	1					
ANR	1371830	Condition	info [ i ] . flags & LITERAL_MAY_MERGE	460:10:15760:15792	1369537	0	True				
ANR	1371831	BitAndExpression	info [ i ] . flags & LITERAL_MAY_MERGE		1369537	0		&			
ANR	1371832	MemberAccess	info [ i ] . flags		1369537	0					
ANR	1371833	ArrayIndexing	info [ i ]		1369537	0					
ANR	1371834	Identifier	info		1369537	0					
ANR	1371835	Identifier	i		1369537	1					
ANR	1371836	Identifier	flags		1369537	1					
ANR	1371837	Identifier	LITERAL_MAY_MERGE		1369537	1					
ANR	1371838	CompoundStatement		343:45:10636:10636	1369537	1					
ANR	1371839	ExpressionStatement	"ZVAL_LONG ( & zv , j )"	461:7:15804:15821	1369537	0	True				
ANR	1371840	CallExpression	"ZVAL_LONG ( & zv , j )"		1369537	0					
ANR	1371841	Callee	ZVAL_LONG		1369537	0					
ANR	1371842	Identifier	ZVAL_LONG		1369537	0					
ANR	1371843	ArgumentList	& zv		1369537	1					
ANR	1371844	Argument	& zv		1369537	0					
ANR	1371845	UnaryOperationExpression	& zv		1369537	0					
ANR	1371846	UnaryOperator	&		1369537	0					
ANR	1371847	Identifier	zv		1369537	1					
ANR	1371848	Argument	j		1369537	1					
ANR	1371849	Identifier	j		1369537	0					
ANR	1371850	ExpressionStatement	"zend_hash_add_new ( & hash , key , & zv )"	462:7:15830:15864	1369537	1	True				
ANR	1371851	CallExpression	"zend_hash_add_new ( & hash , key , & zv )"		1369537	0					
ANR	1371852	Callee	zend_hash_add_new		1369537	0					
ANR	1371853	Identifier	zend_hash_add_new		1369537	0					
ANR	1371854	ArgumentList	& hash		1369537	1					
ANR	1371855	Argument	& hash		1369537	0					
ANR	1371856	UnaryOperationExpression	& hash		1369537	0					
ANR	1371857	UnaryOperator	&		1369537	0					
ANR	1371858	Identifier	hash		1369537	1					
ANR	1371859	Argument	key		1369537	1					
ANR	1371860	Identifier	key		1369537	0					
ANR	1371861	Argument	& zv		1369537	2					
ANR	1371862	UnaryOperationExpression	& zv		1369537	0					
ANR	1371863	UnaryOperator	&		1369537	0					
ANR	1371864	Identifier	zv		1369537	1					
ANR	1371865	ExpressionStatement	zend_string_release ( key )	463:7:15873:15897	1369537	2	True				
ANR	1371866	CallExpression	zend_string_release ( key )		1369537	0					
ANR	1371867	Callee	zend_string_release		1369537	0					
ANR	1371868	Identifier	zend_string_release		1369537	0					
ANR	1371869	ArgumentList	key		1369537	1					
ANR	1371870	Argument	key		1369537	0					
ANR	1371871	Identifier	key		1369537	0					
ANR	1371872	IfStatement	if ( i != j )		1369537	2					
ANR	1371873	Condition	i != j	465:10:15917:15922	1369537	0	True				
ANR	1371874	EqualityExpression	i != j		1369537	0		!=			
ANR	1371875	Identifier	i		1369537	0					
ANR	1371876	Identifier	j		1369537	1					
ANR	1371877	CompoundStatement		348:18:10766:10766	1369537	1					
ANR	1371878	ExpressionStatement	op_array -> literals [ j ] = op_array -> literals [ i ]	466:7:15934:15979	1369537	0	True				
ANR	1371879	AssignmentExpression	op_array -> literals [ j ] = op_array -> literals [ i ]		1369537	0		=			
ANR	1371880	ArrayIndexing	op_array -> literals [ j ]		1369537	0					
ANR	1371881	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371882	Identifier	op_array		1369537	0					
ANR	1371883	Identifier	literals		1369537	1					
ANR	1371884	Identifier	j		1369537	1					
ANR	1371885	ArrayIndexing	op_array -> literals [ i ]		1369537	1					
ANR	1371886	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371887	Identifier	op_array		1369537	0					
ANR	1371888	Identifier	literals		1369537	1					
ANR	1371889	Identifier	i		1369537	1					
ANR	1371890	ExpressionStatement	info [ j ] = info [ i ]	467:7:15988:16005	1369537	1	True				
ANR	1371891	AssignmentExpression	info [ j ] = info [ i ]		1369537	0		=			
ANR	1371892	ArrayIndexing	info [ j ]		1369537	0					
ANR	1371893	Identifier	info		1369537	0					
ANR	1371894	Identifier	j		1369537	1					
ANR	1371895	ArrayIndexing	info [ i ]		1369537	1					
ANR	1371896	Identifier	info		1369537	0					
ANR	1371897	Identifier	i		1369537	1					
ANR	1371898	IfStatement	if ( LITERAL_NUM_SLOTS ( info [ i ] . flags ) )		1369537	3					
ANR	1371899	Condition	LITERAL_NUM_SLOTS ( info [ i ] . flags )	469:10:16025:16056	1369537	0	True				
ANR	1371900	CallExpression	LITERAL_NUM_SLOTS ( info [ i ] . flags )		1369537	0					
ANR	1371901	Callee	LITERAL_NUM_SLOTS		1369537	0					
ANR	1371902	Identifier	LITERAL_NUM_SLOTS		1369537	0					
ANR	1371903	ArgumentList	info [ i ] . flags		1369537	1					
ANR	1371904	Argument	info [ i ] . flags		1369537	0					
ANR	1371905	MemberAccess	info [ i ] . flags		1369537	0					
ANR	1371906	ArrayIndexing	info [ i ]		1369537	0					
ANR	1371907	Identifier	info		1369537	0					
ANR	1371908	Identifier	i		1369537	1					
ANR	1371909	Identifier	flags		1369537	1					
ANR	1371910	CompoundStatement		352:44:10900:10900	1369537	1					
ANR	1371911	ExpressionStatement	Z_CACHE_SLOT ( op_array -> literals [ j ] ) = cache_size	470:7:16068:16116	1369537	0	True				
ANR	1371912	AssignmentExpression	Z_CACHE_SLOT ( op_array -> literals [ j ] ) = cache_size		1369537	0		=			
ANR	1371913	CallExpression	Z_CACHE_SLOT ( op_array -> literals [ j ] )		1369537	0					
ANR	1371914	Callee	Z_CACHE_SLOT		1369537	0					
ANR	1371915	Identifier	Z_CACHE_SLOT		1369537	0					
ANR	1371916	ArgumentList	op_array -> literals [ j ]		1369537	1					
ANR	1371917	Argument	op_array -> literals [ j ]		1369537	0					
ANR	1371918	ArrayIndexing	op_array -> literals [ j ]		1369537	0					
ANR	1371919	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371920	Identifier	op_array		1369537	0					
ANR	1371921	Identifier	literals		1369537	1					
ANR	1371922	Identifier	j		1369537	1					
ANR	1371923	Identifier	cache_size		1369537	1					
ANR	1371924	ExpressionStatement	cache_size += LITERAL_NUM_SLOTS ( info [ i ] . flags ) * sizeof ( void * )	471:7:16125:16187	1369537	1	True				
ANR	1371925	AssignmentExpression	cache_size += LITERAL_NUM_SLOTS ( info [ i ] . flags ) * sizeof ( void * )		1369537	0		+=			
ANR	1371926	Identifier	cache_size		1369537	0					
ANR	1371927	MultiplicativeExpression	LITERAL_NUM_SLOTS ( info [ i ] . flags ) * sizeof ( void * )		1369537	1		*			
ANR	1371928	CallExpression	LITERAL_NUM_SLOTS ( info [ i ] . flags )		1369537	0					
ANR	1371929	Callee	LITERAL_NUM_SLOTS		1369537	0					
ANR	1371930	Identifier	LITERAL_NUM_SLOTS		1369537	0					
ANR	1371931	ArgumentList	info [ i ] . flags		1369537	1					
ANR	1371932	Argument	info [ i ] . flags		1369537	0					
ANR	1371933	MemberAccess	info [ i ] . flags		1369537	0					
ANR	1371934	ArrayIndexing	info [ i ]		1369537	0					
ANR	1371935	Identifier	info		1369537	0					
ANR	1371936	Identifier	i		1369537	1					
ANR	1371937	Identifier	flags		1369537	1					
ANR	1371938	SizeofExpression	sizeof ( void * )		1369537	1					
ANR	1371939	Sizeof	sizeof		1369537	0					
ANR	1371940	SizeofOperand	void *		1369537	1					
ANR	1371941	ExpressionStatement	j ++	473:6:16203:16206	1369537	4	True				
ANR	1371942	PostIncDecOperationExpression	j ++		1369537	0					
ANR	1371943	Identifier	j		1369537	0					
ANR	1371944	IncDec	++		1369537	1					
ANR	1371945	ExpressionStatement	n = LITERAL_NUM_RELATED ( info [ i ] . flags )	474:6:16214:16252	1369537	5	True				
ANR	1371946	AssignmentExpression	n = LITERAL_NUM_RELATED ( info [ i ] . flags )		1369537	0		=			
ANR	1371947	Identifier	n		1369537	0					
ANR	1371948	CallExpression	LITERAL_NUM_RELATED ( info [ i ] . flags )		1369537	1					
ANR	1371949	Callee	LITERAL_NUM_RELATED		1369537	0					
ANR	1371950	Identifier	LITERAL_NUM_RELATED		1369537	0					
ANR	1371951	ArgumentList	info [ i ] . flags		1369537	1					
ANR	1371952	Argument	info [ i ] . flags		1369537	0					
ANR	1371953	MemberAccess	info [ i ] . flags		1369537	0					
ANR	1371954	ArrayIndexing	info [ i ]		1369537	0					
ANR	1371955	Identifier	info		1369537	0					
ANR	1371956	Identifier	i		1369537	1					
ANR	1371957	Identifier	flags		1369537	1					
ANR	1371958	WhileStatement	while ( n > 1 )		1369537	6					
ANR	1371959	Condition	n > 1	475:13:16267:16271	1369537	0	True				
ANR	1371960	RelationalExpression	n > 1		1369537	0		>			
ANR	1371961	Identifier	n		1369537	0					
ANR	1371962	PrimaryExpression	1		1369537	1					
ANR	1371963	CompoundStatement		358:20:11115:11115	1369537	1					
ANR	1371964	ExpressionStatement	i ++	476:7:16283:16286	1369537	0	True				
ANR	1371965	PostIncDecOperationExpression	i ++		1369537	0					
ANR	1371966	Identifier	i		1369537	0					
ANR	1371967	IncDec	++		1369537	1					
ANR	1371968	IfStatement	if ( i != j )		1369537	1					
ANR	1371969	Condition	i != j	477:11:16299:16304	1369537	0	True				
ANR	1371970	EqualityExpression	i != j		1369537	0		!=			
ANR	1371971	Identifier	i		1369537	0					
ANR	1371972	Identifier	j		1369537	1					
ANR	1371973	ExpressionStatement	op_array -> literals [ j ] = op_array -> literals [ i ]	477:19:16307:16352	1369537	1	True				
ANR	1371974	AssignmentExpression	op_array -> literals [ j ] = op_array -> literals [ i ]		1369537	0		=			
ANR	1371975	ArrayIndexing	op_array -> literals [ j ]		1369537	0					
ANR	1371976	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371977	Identifier	op_array		1369537	0					
ANR	1371978	Identifier	literals		1369537	1					
ANR	1371979	Identifier	j		1369537	1					
ANR	1371980	ArrayIndexing	op_array -> literals [ i ]		1369537	1					
ANR	1371981	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1371982	Identifier	op_array		1369537	0					
ANR	1371983	Identifier	literals		1369537	1					
ANR	1371984	Identifier	i		1369537	1					
ANR	1371985	ExpressionStatement	j ++	478:7:16361:16364	1369537	2	True				
ANR	1371986	PostIncDecOperationExpression	j ++		1369537	0					
ANR	1371987	Identifier	j		1369537	0					
ANR	1371988	IncDec	++		1369537	1					
ANR	1371989	ExpressionStatement	n --	479:7:16373:16376	1369537	3	True				
ANR	1371990	PostIncDecOperationExpression	n --		1369537	0					
ANR	1371991	Identifier	n		1369537	0					
ANR	1371992	IncDec	--		1369537	1					
ANR	1371993	BreakStatement	break ;	482:5:16398:16403	1369537	21	True				
ANR	1371994	Label	default :	483:4:16409:16416	1369537	22	True				
ANR	1371995	Identifier	default		1369537	0					
ANR	1371996	ExpressionStatement	map [ i ] = j	485:5:16458:16468	1369537	23	True				
ANR	1371997	AssignmentExpression	map [ i ] = j		1369537	0		=			
ANR	1371998	ArrayIndexing	map [ i ]		1369537	0					
ANR	1371999	Identifier	map		1369537	0					
ANR	1372000	Identifier	i		1369537	1					
ANR	1372001	Identifier	j		1369537	1					
ANR	1372002	IfStatement	if ( i != j )		1369537	24					
ANR	1372003	Condition	i != j	486:9:16479:16484	1369537	0	True				
ANR	1372004	EqualityExpression	i != j		1369537	0		!=			
ANR	1372005	Identifier	i		1369537	0					
ANR	1372006	Identifier	j		1369537	1					
ANR	1372007	CompoundStatement		369:17:11328:11328	1369537	1					
ANR	1372008	ExpressionStatement	op_array -> literals [ j ] = op_array -> literals [ i ]	487:6:16495:16540	1369537	0	True				
ANR	1372009	AssignmentExpression	op_array -> literals [ j ] = op_array -> literals [ i ]		1369537	0		=			
ANR	1372010	ArrayIndexing	op_array -> literals [ j ]		1369537	0					
ANR	1372011	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1372012	Identifier	op_array		1369537	0					
ANR	1372013	Identifier	literals		1369537	1					
ANR	1372014	Identifier	j		1369537	1					
ANR	1372015	ArrayIndexing	op_array -> literals [ i ]		1369537	1					
ANR	1372016	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1372017	Identifier	op_array		1369537	0					
ANR	1372018	Identifier	literals		1369537	1					
ANR	1372019	Identifier	i		1369537	1					
ANR	1372020	ExpressionStatement	info [ j ] = info [ i ]	488:6:16548:16565	1369537	1	True				
ANR	1372021	AssignmentExpression	info [ j ] = info [ i ]		1369537	0		=			
ANR	1372022	ArrayIndexing	info [ j ]		1369537	0					
ANR	1372023	Identifier	info		1369537	0					
ANR	1372024	Identifier	j		1369537	1					
ANR	1372025	ArrayIndexing	info [ i ]		1369537	1					
ANR	1372026	Identifier	info		1369537	0					
ANR	1372027	Identifier	i		1369537	1					
ANR	1372028	ExpressionStatement	j ++	490:5:16579:16582	1369537	25	True				
ANR	1372029	PostIncDecOperationExpression	j ++		1369537	0					
ANR	1372030	Identifier	j		1369537	0					
ANR	1372031	IncDec	++		1369537	1					
ANR	1372032	BreakStatement	break ;	491:5:16589:16594	1369537	26	True				
ANR	1372033	ExpressionStatement	zend_hash_destroy ( & hash )	494:2:16607:16631	1369537	11	True				
ANR	1372034	CallExpression	zend_hash_destroy ( & hash )		1369537	0					
ANR	1372035	Callee	zend_hash_destroy		1369537	0					
ANR	1372036	Identifier	zend_hash_destroy		1369537	0					
ANR	1372037	ArgumentList	& hash		1369537	1					
ANR	1372038	Argument	& hash		1369537	0					
ANR	1372039	UnaryOperationExpression	& hash		1369537	0					
ANR	1372040	UnaryOperator	&		1369537	0					
ANR	1372041	Identifier	hash		1369537	1					
ANR	1372042	ExpressionStatement	op_array -> last_literal = j	495:2:16635:16661	1369537	12	True				
ANR	1372043	AssignmentExpression	op_array -> last_literal = j		1369537	0		=			
ANR	1372044	PtrMemberAccess	op_array -> last_literal		1369537	0					
ANR	1372045	Identifier	op_array		1369537	0					
ANR	1372046	Identifier	last_literal		1369537	1					
ANR	1372047	Identifier	j		1369537	1					
ANR	1372048	ExpressionStatement	op_array -> cache_size = cache_size	496:2:16665:16698	1369537	13	True				
ANR	1372049	AssignmentExpression	op_array -> cache_size = cache_size		1369537	0		=			
ANR	1372050	PtrMemberAccess	op_array -> cache_size		1369537	0					
ANR	1372051	Identifier	op_array		1369537	0					
ANR	1372052	Identifier	cache_size		1369537	1					
ANR	1372053	Identifier	cache_size		1369537	1					
ANR	1372054	ExpressionStatement	opline = op_array -> opcodes	499:2:16755:16781	1369537	14	True				
ANR	1372055	AssignmentExpression	opline = op_array -> opcodes		1369537	0		=			
ANR	1372056	Identifier	opline		1369537	0					
ANR	1372057	PtrMemberAccess	op_array -> opcodes		1369537	1					
ANR	1372058	Identifier	op_array		1369537	0					
ANR	1372059	Identifier	opcodes		1369537	1					
ANR	1372060	ExpressionStatement	end = opline + op_array -> last	500:2:16785:16814	1369537	15	True				
ANR	1372061	AssignmentExpression	end = opline + op_array -> last		1369537	0		=			
ANR	1372062	Identifier	end		1369537	0					
ANR	1372063	AdditiveExpression	opline + op_array -> last		1369537	1		+			
ANR	1372064	Identifier	opline		1369537	0					
ANR	1372065	PtrMemberAccess	op_array -> last		1369537	1					
ANR	1372066	Identifier	op_array		1369537	0					
ANR	1372067	Identifier	last		1369537	1					
ANR	1372068	WhileStatement	while ( opline < end )		1369537	16					
ANR	1372069	Condition	opline < end	501:9:16825:16836	1369537	0	True				
ANR	1372070	RelationalExpression	opline < end		1369537	0		<			
ANR	1372071	Identifier	opline		1369537	0					
ANR	1372072	Identifier	end		1369537	1					
ANR	1372073	CompoundStatement		384:23:11680:11680	1369537	1					
ANR	1372074	IfStatement	if ( ZEND_OP1_TYPE ( opline ) == IS_CONST )		1369537	0					
ANR	1372075	Condition	ZEND_OP1_TYPE ( opline ) == IS_CONST	502:7:16848:16880	1369537	0	True				
ANR	1372076	EqualityExpression	ZEND_OP1_TYPE ( opline ) == IS_CONST		1369537	0		==			
ANR	1372077	CallExpression	ZEND_OP1_TYPE ( opline )		1369537	0					
ANR	1372078	Callee	ZEND_OP1_TYPE		1369537	0					
ANR	1372079	Identifier	ZEND_OP1_TYPE		1369537	0					
ANR	1372080	ArgumentList	opline		1369537	1					
ANR	1372081	Argument	opline		1369537	0					
ANR	1372082	Identifier	opline		1369537	0					
ANR	1372083	Identifier	IS_CONST		1369537	1					
ANR	1372084	CompoundStatement		385:42:11724:11724	1369537	1					
ANR	1372085	ExpressionStatement	opline -> op1 . constant = map [ opline -> op1 . constant ]	503:4:16889:16937	1369537	0	True				
ANR	1372086	AssignmentExpression	opline -> op1 . constant = map [ opline -> op1 . constant ]		1369537	0		=			
ANR	1372087	MemberAccess	opline -> op1 . constant		1369537	0					
ANR	1372088	PtrMemberAccess	opline -> op1		1369537	0					
ANR	1372089	Identifier	opline		1369537	0					
ANR	1372090	Identifier	op1		1369537	1					
ANR	1372091	Identifier	constant		1369537	1					
ANR	1372092	ArrayIndexing	map [ opline -> op1 . constant ]		1369537	1					
ANR	1372093	Identifier	map		1369537	0					
ANR	1372094	MemberAccess	opline -> op1 . constant		1369537	1					
ANR	1372095	PtrMemberAccess	opline -> op1		1369537	0					
ANR	1372096	Identifier	opline		1369537	0					
ANR	1372097	Identifier	op1		1369537	1					
ANR	1372098	Identifier	constant		1369537	1					
ANR	1372099	IfStatement	if ( ZEND_OP2_TYPE ( opline ) == IS_CONST )		1369537	1					
ANR	1372100	Condition	ZEND_OP2_TYPE ( opline ) == IS_CONST	505:7:16951:16983	1369537	0	True				
ANR	1372101	EqualityExpression	ZEND_OP2_TYPE ( opline ) == IS_CONST		1369537	0		==			
ANR	1372102	CallExpression	ZEND_OP2_TYPE ( opline )		1369537	0					
ANR	1372103	Callee	ZEND_OP2_TYPE		1369537	0					
ANR	1372104	Identifier	ZEND_OP2_TYPE		1369537	0					
ANR	1372105	ArgumentList	opline		1369537	1					
ANR	1372106	Argument	opline		1369537	0					
ANR	1372107	Identifier	opline		1369537	0					
ANR	1372108	Identifier	IS_CONST		1369537	1					
ANR	1372109	CompoundStatement		388:42:11827:11827	1369537	1					
ANR	1372110	ExpressionStatement	opline -> op2 . constant = map [ opline -> op2 . constant ]	506:4:16992:17040	1369537	0	True				
ANR	1372111	AssignmentExpression	opline -> op2 . constant = map [ opline -> op2 . constant ]		1369537	0		=			
ANR	1372112	MemberAccess	opline -> op2 . constant		1369537	0					
ANR	1372113	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1372114	Identifier	opline		1369537	0					
ANR	1372115	Identifier	op2		1369537	1					
ANR	1372116	Identifier	constant		1369537	1					
ANR	1372117	ArrayIndexing	map [ opline -> op2 . constant ]		1369537	1					
ANR	1372118	Identifier	map		1369537	0					
ANR	1372119	MemberAccess	opline -> op2 . constant		1369537	1					
ANR	1372120	PtrMemberAccess	opline -> op2		1369537	0					
ANR	1372121	Identifier	opline		1369537	0					
ANR	1372122	Identifier	op2		1369537	1					
ANR	1372123	Identifier	constant		1369537	1					
ANR	1372124	ExpressionStatement	opline ++	508:3:17050:17058	1369537	2	True				
ANR	1372125	PostIncDecOperationExpression	opline ++		1369537	0					
ANR	1372126	Identifier	opline		1369537	0					
ANR	1372127	IncDec	++		1369537	1					
ANR	1372128	ExpressionStatement	"zend_arena_release ( & ctx -> arena , checkpoint )"	510:2:17066:17109	1369537	17	True				
ANR	1372129	CallExpression	"zend_arena_release ( & ctx -> arena , checkpoint )"		1369537	0					
ANR	1372130	Callee	zend_arena_release		1369537	0					
ANR	1372131	Identifier	zend_arena_release		1369537	0					
ANR	1372132	ArgumentList	& ctx -> arena		1369537	1					
ANR	1372133	Argument	& ctx -> arena		1369537	0					
ANR	1372134	UnaryOperationExpression	& ctx -> arena		1369537	0					
ANR	1372135	UnaryOperator	&		1369537	0					
ANR	1372136	PtrMemberAccess	ctx -> arena		1369537	1					
ANR	1372137	Identifier	ctx		1369537	0					
ANR	1372138	Identifier	arena		1369537	1					
ANR	1372139	Argument	checkpoint		1369537	1					
ANR	1372140	Identifier	checkpoint		1369537	0					
ANR	1372141	CompoundStatement		397:3:11987:12002	1369537	18					
ANR	1372142	IdentifierDeclStatement	"int i , use_copy ;"	514:3:17146:17161	1369537	0	True				
ANR	1372143	IdentifierDecl	i		1369537	0					
ANR	1372144	IdentifierDeclType	int		1369537	0					
ANR	1372145	Identifier	i		1369537	1					
ANR	1372146	IdentifierDecl	use_copy		1369537	1					
ANR	1372147	IdentifierDeclType	int		1369537	0					
ANR	1372148	Identifier	use_copy		1369537	1					
ANR	1372149	ExpressionStatement	"fprintf ( stderr , ""Optimized literlas table size %d\\n"" , op_array -> last_literal )"	515:3:17166:17243	1369537	1	True				
ANR	1372150	CallExpression	"fprintf ( stderr , ""Optimized literlas table size %d\\n"" , op_array -> last_literal )"		1369537	0					
ANR	1372151	Callee	fprintf		1369537	0					
ANR	1372152	Identifier	fprintf		1369537	0					
ANR	1372153	ArgumentList	stderr		1369537	1					
ANR	1372154	Argument	stderr		1369537	0					
ANR	1372155	Identifier	stderr		1369537	0					
ANR	1372156	Argument	"""Optimized literlas table size %d\\n"""		1369537	1					
ANR	1372157	PrimaryExpression	"""Optimized literlas table size %d\\n"""		1369537	0					
ANR	1372158	Argument	op_array -> last_literal		1369537	2					
ANR	1372159	PtrMemberAccess	op_array -> last_literal		1369537	0					
ANR	1372160	Identifier	op_array		1369537	0					
ANR	1372161	Identifier	last_literal		1369537	1					
ANR	1372162	ForStatement	for ( i = 0 ; i < op_array -> last_literal ; i ++ )		1369537	2					
ANR	1372163	ForInit	i = 0 ;	517:8:17254:17259	1369537	0	True				
ANR	1372164	AssignmentExpression	i = 0		1369537	0		=			
ANR	1372165	Identifier	i		1369537	0					
ANR	1372166	PrimaryExpression	0		1369537	1					
ANR	1372167	Condition	i < op_array -> last_literal	517:15:17261:17286	1369537	1	True				
ANR	1372168	RelationalExpression	i < op_array -> last_literal		1369537	0		<			
ANR	1372169	Identifier	i		1369537	0					
ANR	1372170	PtrMemberAccess	op_array -> last_literal		1369537	1					
ANR	1372171	Identifier	op_array		1369537	0					
ANR	1372172	Identifier	last_literal		1369537	1					
ANR	1372173	PostIncDecOperationExpression	i ++	517:43:17289:17291	1369537	2	True				
ANR	1372174	Identifier	i		1369537	0					
ANR	1372175	IncDec	++		1369537	1					
ANR	1372176	CompoundStatement		401:4:12141:12148	1369537	3					
ANR	1372177	IdentifierDeclStatement	zval zv ;	518:4:17300:17307	1369537	0	True				
ANR	1372178	IdentifierDecl	zv		1369537	0					
ANR	1372179	IdentifierDeclType	zval		1369537	0					
ANR	1372180	Identifier	zv		1369537	1					
ANR	1372181	ExpressionStatement	"ZVAL_COPY_VALUE ( & zv , op_array -> literals + i )"	519:4:17313:17357	1369537	1	True				
ANR	1372182	CallExpression	"ZVAL_COPY_VALUE ( & zv , op_array -> literals + i )"		1369537	0					
ANR	1372183	Callee	ZVAL_COPY_VALUE		1369537	0					
ANR	1372184	Identifier	ZVAL_COPY_VALUE		1369537	0					
ANR	1372185	ArgumentList	& zv		1369537	1					
ANR	1372186	Argument	& zv		1369537	0					
ANR	1372187	UnaryOperationExpression	& zv		1369537	0					
ANR	1372188	UnaryOperator	&		1369537	0					
ANR	1372189	Identifier	zv		1369537	1					
ANR	1372190	Argument	op_array -> literals + i		1369537	1					
ANR	1372191	AdditiveExpression	op_array -> literals + i		1369537	0		+			
ANR	1372192	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1372193	Identifier	op_array		1369537	0					
ANR	1372194	Identifier	literals		1369537	1					
ANR	1372195	Identifier	i		1369537	1					
ANR	1372196	ExpressionStatement	"use_copy = zend_make_printable_zval ( op_array -> literals + i , & zv )"	520:4:17363:17427	1369537	2	True				
ANR	1372197	AssignmentExpression	"use_copy = zend_make_printable_zval ( op_array -> literals + i , & zv )"		1369537	0		=			
ANR	1372198	Identifier	use_copy		1369537	0					
ANR	1372199	CallExpression	"zend_make_printable_zval ( op_array -> literals + i , & zv )"		1369537	1					
ANR	1372200	Callee	zend_make_printable_zval		1369537	0					
ANR	1372201	Identifier	zend_make_printable_zval		1369537	0					
ANR	1372202	ArgumentList	op_array -> literals + i		1369537	1					
ANR	1372203	Argument	op_array -> literals + i		1369537	0					
ANR	1372204	AdditiveExpression	op_array -> literals + i		1369537	0		+			
ANR	1372205	PtrMemberAccess	op_array -> literals		1369537	0					
ANR	1372206	Identifier	op_array		1369537	0					
ANR	1372207	Identifier	literals		1369537	1					
ANR	1372208	Identifier	i		1369537	1					
ANR	1372209	Argument	& zv		1369537	1					
ANR	1372210	UnaryOperationExpression	& zv		1369537	0					
ANR	1372211	UnaryOperator	&		1369537	0					
ANR	1372212	Identifier	zv		1369537	1					
ANR	1372213	ExpressionStatement	"fprintf ( stderr , ""Literal %d, val (%d):%s\\n"" , i , Z_STRLEN ( zv ) , Z_STRVAL ( zv ) )"	521:4:17433:17508	1369537	3	True				
ANR	1372214	CallExpression	"fprintf ( stderr , ""Literal %d, val (%d):%s\\n"" , i , Z_STRLEN ( zv ) , Z_STRVAL ( zv ) )"		1369537	0					
ANR	1372215	Callee	fprintf		1369537	0					
ANR	1372216	Identifier	fprintf		1369537	0					
ANR	1372217	ArgumentList	stderr		1369537	1					
ANR	1372218	Argument	stderr		1369537	0					
ANR	1372219	Identifier	stderr		1369537	0					
ANR	1372220	Argument	"""Literal %d, val (%d):%s\\n"""		1369537	1					
ANR	1372221	PrimaryExpression	"""Literal %d, val (%d):%s\\n"""		1369537	0					
ANR	1372222	Argument	i		1369537	2					
ANR	1372223	Identifier	i		1369537	0					
ANR	1372224	Argument	Z_STRLEN ( zv )		1369537	3					
ANR	1372225	CallExpression	Z_STRLEN ( zv )		1369537	0					
ANR	1372226	Callee	Z_STRLEN		1369537	0					
ANR	1372227	Identifier	Z_STRLEN		1369537	0					
ANR	1372228	ArgumentList	zv		1369537	1					
ANR	1372229	Argument	zv		1369537	0					
ANR	1372230	Identifier	zv		1369537	0					
ANR	1372231	Argument	Z_STRVAL ( zv )		1369537	4					
ANR	1372232	CallExpression	Z_STRVAL ( zv )		1369537	0					
ANR	1372233	Callee	Z_STRVAL		1369537	0					
ANR	1372234	Identifier	Z_STRVAL		1369537	0					
ANR	1372235	ArgumentList	zv		1369537	1					
ANR	1372236	Argument	zv		1369537	0					
ANR	1372237	Identifier	zv		1369537	0					
ANR	1372238	IfStatement	if ( use_copy )		1369537	4					
ANR	1372239	Condition	use_copy	522:8:17518:17525	1369537	0	True				
ANR	1372240	Identifier	use_copy		1369537	0					
ANR	1372241	CompoundStatement		405:18:12369:12369	1369537	1					
ANR	1372242	ExpressionStatement	zval_dtor ( & zv )	523:5:17535:17549	1369537	0	True				
ANR	1372243	CallExpression	zval_dtor ( & zv )		1369537	0					
ANR	1372244	Callee	zval_dtor		1369537	0					
ANR	1372245	Identifier	zval_dtor		1369537	0					
ANR	1372246	ArgumentList	& zv		1369537	1					
ANR	1372247	Argument	& zv		1369537	0					
ANR	1372248	UnaryOperationExpression	& zv		1369537	0					
ANR	1372249	UnaryOperator	&		1369537	0					
ANR	1372250	Identifier	zv		1369537	1					
ANR	1372251	ExpressionStatement	fflush ( stderr )	526:3:17565:17579	1369537	3	True				
ANR	1372252	CallExpression	fflush ( stderr )		1369537	0					
ANR	1372253	Callee	fflush		1369537	0					
ANR	1372254	Identifier	fflush		1369537	0					
ANR	1372255	ArgumentList	stderr		1369537	1					
ANR	1372256	Argument	stderr		1369537	0					
ANR	1372257	Identifier	stderr		1369537	0					
ANR	1372258	ReturnType	void		1369537	1					
ANR	1372259	Identifier	zend_optimizer_compact_literals		1369537	2					
ANR	1372260	ParameterList	"zend_op_array * op_array , zend_optimizer_ctx * ctx"		1369537	3					
ANR	1372261	Parameter	zend_op_array * op_array	117:37:5108:5130	1369537	0	True				
ANR	1372262	ParameterType	zend_op_array *		1369537	0					
ANR	1372263	Identifier	op_array		1369537	1					
ANR	1372264	Parameter	zend_optimizer_ctx * ctx	117:62:5133:5155	1369537	1	True				
ANR	1372265	ParameterType	zend_optimizer_ctx *		1369537	0					
ANR	1372266	Identifier	ctx		1369537	1					
ANR	1372267	CFGEntryNode	ENTRY		1369537		True				
ANR	1372268	CFGExitNode	EXIT		1369537		True				
ANR	1372269	Symbol	& hash		1369537						
ANR	1372270	Symbol	* map		1369537						
ANR	1372271	Symbol	Z_LVAL		1369537						
ANR	1372272	Symbol	Z_TYPE		1369537						
ANR	1372273	Symbol	zend_hash_func		1369537						
ANR	1372274	Symbol	* op_array -> function_name		1369537						
ANR	1372275	Symbol	ZEND_OP2_TYPE		1369537						
ANR	1372276	Symbol	LITERAL_PROPERTY		1369537						
ANR	1372277	Symbol	zend_string_init		1369537						
ANR	1372278	Symbol	zend_hash_find		1369537						
ANR	1372279	Symbol	* opline -> op2		1369537						
ANR	1372280	Symbol	IS_CONSTANT_UNQUALIFIED		1369537						
ANR	1372281	Symbol	* opline -> op1		1369537						
ANR	1372282	Symbol	op_array -> last_literal		1369537						
ANR	1372283	Symbol	& Z_DVAL		1369537						
ANR	1372284	Symbol	IS_CONST		1369537						
ANR	1372285	Symbol	cache_size		1369537						
ANR	1372286	Symbol	LITERAL_NUM_RELATED		1369537						
ANR	1372287	Symbol	ctx		1369537						
ANR	1372288	Symbol	* info [ i ] . u		1369537						
ANR	1372289	Symbol	* op_array		1369537						
ANR	1372290	Symbol	use_copy		1369537						
ANR	1372291	Symbol	LITERAL_METHOD		1369537						
ANR	1372292	Symbol	zv		1369537						
ANR	1372293	Symbol	* * op_array		1369537						
ANR	1372294	Symbol	l_true		1369537						
ANR	1372295	Symbol	hash		1369537						
ANR	1372296	Symbol	* Z_LVAL_P		1369537						
ANR	1372297	Symbol	zend_make_printable_zval		1369537						
ANR	1372298	Symbol	LITERAL_STATIC_PROPERTY		1369537						
ANR	1372299	Symbol	* opline -> op1 . constant		1369537						
ANR	1372300	Symbol	zend_hash_str_find		1369537						
ANR	1372301	Symbol	LITERAL_FUNC		1369537						
ANR	1372302	Symbol	LITERAL_CONST		1369537						
ANR	1372303	Symbol	pos		1369537						
ANR	1372304	Symbol	opline -> op1 . constant		1369537						
ANR	1372305	Symbol	Z_STRLEN_P		1369537						
ANR	1372306	Symbol	* * opline		1369537						
ANR	1372307	Symbol	map		1369537						
ANR	1372308	Symbol	* opline -> op2 . constant		1369537						
ANR	1372309	Symbol	class_name		1369537						
ANR	1372310	Symbol	key		1369537						
ANR	1372311	Symbol	key_len		1369537						
ANR	1372312	Symbol	ZEND_ASSIGN_OBJ		1369537						
ANR	1372313	Symbol	& zv		1369537						
ANR	1372314	Symbol	i		1369537						
ANR	1372315	Symbol	j		1369537						
ANR	1372316	Symbol	LITERAL_CLASS		1369537						
ANR	1372317	Symbol	LITERAL_VALUE		1369537						
ANR	1372318	Symbol	n		1369537						
ANR	1372319	Symbol	* ctx		1369537						
ANR	1372320	Symbol	Z_LVAL_P		1369537						
ANR	1372321	Symbol	& ctx -> arena		1369537						
ANR	1372322	Symbol	* opline		1369537						
ANR	1372323	Symbol	opline -> op2 . constant		1369537						
ANR	1372324	Symbol	info [ i ] . flags		1369537						
ANR	1372325	Symbol	Z_CACHE_SLOT		1369537						
ANR	1372326	Symbol	opline -> op2_type		1369537						
ANR	1372327	Symbol	* info		1369537						
ANR	1372328	Symbol	ctx -> arena		1369537						
ANR	1372329	Symbol	* op_array -> filename		1369537						
ANR	1372330	Symbol	op_array		1369537						
ANR	1372331	Symbol	checkpoint		1369537						
ANR	1372332	Symbol	zend_arena_calloc		1369537						
ANR	1372333	Symbol	info [ i ] . u		1369537						
ANR	1372334	Symbol	opline -> extended_value		1369537						
ANR	1372335	Symbol	* op_array -> literals		1369537						
ANR	1372336	Symbol	opline		1369537						
ANR	1372337	Symbol	l_false		1369537						
ANR	1372338	Symbol	LITERAL_EX_CLASS		1369537						
ANR	1372339	Symbol	LITERAL_GLOBAL		1369537						
ANR	1372340	Symbol	info		1369537						
ANR	1372341	Symbol	zend_hash_index_find		1369537						
ANR	1372342	Symbol	zend_string_alloc		1369537						
ANR	1372343	Symbol	* * i		1369537						
ANR	1372344	Symbol	NULL		1369537						
ANR	1372345	Symbol	zend_arena_alloc		1369537						
ANR	1372346	Symbol	LITERAL_MAY_MERGE		1369537						
ANR	1372347	Symbol	IS_CONSTANT_IN_NAMESPACE		1369537						
ANR	1372348	Symbol	LITERAL_CLASS_CONST		1369537						
ANR	1372349	Symbol	stderr		1369537						
ANR	1372350	Symbol	opline -> op1_type		1369537						
ANR	1372351	Symbol	op_array -> last		1369537						
ANR	1372352	Symbol	op_array -> literals		1369537						
ANR	1372353	Symbol	op_array -> cache_size		1369537						
ANR	1372354	Symbol	op_array -> filename		1369537						
ANR	1372355	Symbol	opline -> op1		1369537						
ANR	1372356	Symbol	opline -> op2		1369537						
ANR	1372357	Symbol	* * info		1369537						
ANR	1372358	Symbol	l_null		1369537						
ANR	1372359	Symbol	op_array -> filename -> val		1369537						
ANR	1372360	Symbol	* info [ i ] . u . num		1369537						
ANR	1372361	Symbol	Z_STRLEN		1369537						
ANR	1372362	Symbol	ZSTR_H		1369537						
ANR	1372363	Symbol	op_array -> opcodes		1369537						
ANR	1372364	Symbol	Z_STRVAL		1369537						
ANR	1372365	Symbol	end		1369537						
ANR	1372366	Symbol	op_array -> function_name -> val		1369537						
ANR	1372367	Symbol	snprintf		1369537						
ANR	1372368	Symbol	opline -> op2 . num		1369537						
ANR	1372369	Symbol	info [ i ] . u . num		1369537						
ANR	1372370	Symbol	zend_arena_checkpoint		1369537						
ANR	1372371	Symbol	MAX_LENGTH_OF_LONG		1369537						
ANR	1372372	Symbol	Z_STRVAL_P		1369537						
ANR	1372373	Symbol	LITERAL_EX_OBJ		1369537						
ANR	1372374	Symbol	op_array -> function_name		1369537						
ANR	1372375	Symbol	ZSTR_VAL		1369537						
ANR	1372376	Symbol	info [ Z_LVAL_P ( pos ) ] . flags		1369537						
ANR	1372377	Symbol	ZEND_OP1_TYPE		1369537						
ANR	1372378	Symbol	* i		1369537						
ANR	1372379	Symbol	* j		1369537						
ANR	1372380	Symbol	LITERAL_STATIC_METHOD		1369537						
ANR	1372381	Symbol	opline -> opcode		1369537						
ANR	1372382	Symbol	ZSTR_LEN		1369537						
ANR	1372383	Symbol	LITERAL_NUM_SLOTS		1369537						
ANR	1372384	Symbol	IS_UNUSED		1369537						
