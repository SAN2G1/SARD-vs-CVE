command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3891802	File	data/converged/CVE-2015-8617_php-src/zend_ast.c								
ANR	3891803	DeclStmt									
ANR	3891804	Decl							ZEND_API zend_ast_process_t	ZEND_API zend_ast_process_t	zend_ast_process
ANR	3891805	Function	zend_ast_alloc	31:0:1453:1551							
ANR	3891806	FunctionDef	zend_ast_alloc (size_t size)		3891805	0					
ANR	3891807	CompoundStatement		31:48:1501:1551	3891805	0					
ANR	3891808	ReturnStatement	"return zend_arena_alloc ( & CG ( ast_arena ) , size ) ;"	32:1:1504:1549	3891805	0	True				
ANR	3891809	CallExpression	"zend_arena_alloc ( & CG ( ast_arena ) , size )"		3891805	0					
ANR	3891810	Callee	zend_arena_alloc		3891805	0					
ANR	3891811	Identifier	zend_arena_alloc		3891805	0					
ANR	3891812	ArgumentList	& CG ( ast_arena )		3891805	1					
ANR	3891813	Argument	& CG ( ast_arena )		3891805	0					
ANR	3891814	UnaryOperationExpression	& CG ( ast_arena )		3891805	0					
ANR	3891815	UnaryOperator	&		3891805	0					
ANR	3891816	CallExpression	CG ( ast_arena )		3891805	1					
ANR	3891817	Callee	CG		3891805	0					
ANR	3891818	Identifier	CG		3891805	0					
ANR	3891819	ArgumentList	ast_arena		3891805	1					
ANR	3891820	Argument	ast_arena		3891805	0					
ANR	3891821	Identifier	ast_arena		3891805	0					
ANR	3891822	Argument	size		3891805	1					
ANR	3891823	Identifier	size		3891805	0					
ANR	3891824	ReturnType	static inline void *		3891805	1					
ANR	3891825	Identifier	zend_ast_alloc		3891805	2					
ANR	3891826	ParameterList	size_t size		3891805	3					
ANR	3891827	Parameter	size_t size	31:35:1488:1498	3891805	0	True				
ANR	3891828	ParameterType	size_t		3891805	0					
ANR	3891829	Identifier	size		3891805	1					
ANR	3891830	CFGEntryNode	ENTRY		3891805		True				
ANR	3891831	CFGExitNode	EXIT		3891805		True				
ANR	3891832	Symbol	size		3891805						
ANR	3891833	Symbol	zend_arena_alloc		3891805						
ANR	3891834	Symbol	ast_arena		3891805						
ANR	3891835	Symbol	& CG		3891805						
ANR	3891836	Function	zend_ast_realloc	35:0:1554:1719							
ANR	3891837	FunctionDef	"zend_ast_realloc (void * old , size_t old_size , size_t new_size)"		3891836	0					
ANR	3891838	CompoundStatement		35:82:1636:1719	3891836	0					
ANR	3891839	Statement	void	36:1:1639:1642	3891836	0	True				
ANR	3891840	Statement	*	36:6:1644:1644	3891836	1	True				
ANR	3891841	Statement	new	36:7:1645:1647	3891836	2	True				
ANR	3891842	Statement	=	36:11:1649:1649	3891836	3	True				
ANR	3891843	ExpressionStatement	zend_ast_alloc ( new_size )	36:13:1651:1675	3891836	4	True				
ANR	3891844	CallExpression	zend_ast_alloc ( new_size )		3891836	0					
ANR	3891845	Callee	zend_ast_alloc		3891836	0					
ANR	3891846	Identifier	zend_ast_alloc		3891836	0					
ANR	3891847	ArgumentList	new_size		3891836	1					
ANR	3891848	Argument	new_size		3891836	0					
ANR	3891849	Identifier	new_size		3891836	0					
ANR	3891850	Statement	memcpy	37:1:1678:1683	3891836	5	True				
ANR	3891851	Statement	(	37:7:1684:1684	3891836	6	True				
ANR	3891852	Statement	new	37:8:1685:1687	3891836	7	True				
ANR	3891853	Statement	","	37:11:1688:1688	3891836	8	True				
ANR	3891854	Statement	old	37:13:1690:1692	3891836	9	True				
ANR	3891855	Statement	","	37:16:1693:1693	3891836	10	True				
ANR	3891856	Statement	old_size	37:18:1695:1702	3891836	11	True				
ANR	3891857	Statement	)	37:26:1703:1703	3891836	12	True				
ANR	3891858	ExpressionStatement		37:27:1704:1704	3891836	13	True				
ANR	3891859	Statement	return	38:1:1707:1712	3891836	14	True				
ANR	3891860	Statement	new	38:8:1714:1716	3891836	15	True				
ANR	3891861	ExpressionStatement		38:11:1717:1717	3891836	16	True				
ANR	3891862	ReturnType	static inline void *		3891836	1					
ANR	3891863	Identifier	zend_ast_realloc		3891836	2					
ANR	3891864	ParameterList	"void * old , size_t old_size , size_t new_size"		3891836	3					
ANR	3891865	Parameter	void * old	35:37:1591:1599	3891836	0	True				
ANR	3891866	ParameterType	void *		3891836	0					
ANR	3891867	Identifier	old		3891836	1					
ANR	3891868	Parameter	size_t old_size	35:48:1602:1616	3891836	1	True				
ANR	3891869	ParameterType	size_t		3891836	0					
ANR	3891870	Identifier	old_size		3891836	1					
ANR	3891871	Parameter	size_t new_size	35:65:1619:1633	3891836	2	True				
ANR	3891872	ParameterType	size_t		3891836	0					
ANR	3891873	Identifier	new_size		3891836	1					
ANR	3891874	CFGEntryNode	ENTRY		3891836		True				
ANR	3891875	CFGExitNode	EXIT		3891836		True				
ANR	3891876	Symbol	old_size		3891836						
ANR	3891877	Symbol	old		3891836						
ANR	3891878	Symbol	new_size		3891836						
ANR	3891879	Function	zend_ast_size	41:0:1722:1857							
ANR	3891880	FunctionDef	zend_ast_size (uint32_t children)		3891879	0					
ANR	3891881	CompoundStatement		41:54:1776:1857	3891879	0					
ANR	3891882	ReturnStatement	return sizeof ( zend_ast ) - sizeof ( zend_ast * ) + sizeof ( zend_ast * ) * children ;	42:1:1779:1855	3891879	0	True				
ANR	3891883	AdditiveExpression	sizeof ( zend_ast ) - sizeof ( zend_ast * ) + sizeof ( zend_ast * ) * children		3891879	0		-			
ANR	3891884	SizeofExpression	sizeof ( zend_ast )		3891879	0					
ANR	3891885	Sizeof	sizeof		3891879	0					
ANR	3891886	SizeofOperand	zend_ast		3891879	1					
ANR	3891887	AdditiveExpression	sizeof ( zend_ast * ) + sizeof ( zend_ast * ) * children		3891879	1		+			
ANR	3891888	SizeofExpression	sizeof ( zend_ast * )		3891879	0					
ANR	3891889	Sizeof	sizeof		3891879	0					
ANR	3891890	SizeofOperand	zend_ast *		3891879	1					
ANR	3891891	MultiplicativeExpression	sizeof ( zend_ast * ) * children		3891879	1		*			
ANR	3891892	SizeofExpression	sizeof ( zend_ast * )		3891879	0					
ANR	3891893	Sizeof	sizeof		3891879	0					
ANR	3891894	SizeofOperand	zend_ast *		3891879	1					
ANR	3891895	Identifier	children		3891879	1					
ANR	3891896	ReturnType	static inline size_t		3891879	1					
ANR	3891897	Identifier	zend_ast_size		3891879	2					
ANR	3891898	ParameterList	uint32_t children		3891879	3					
ANR	3891899	Parameter	uint32_t children	41:35:1757:1773	3891879	0	True				
ANR	3891900	ParameterType	uint32_t		3891879	0					
ANR	3891901	Identifier	children		3891879	1					
ANR	3891902	CFGEntryNode	ENTRY		3891879		True				
ANR	3891903	CFGExitNode	EXIT		3891879		True				
ANR	3891904	Symbol	children		3891879						
ANR	3891905	Function	zend_ast_list_size	45:0:1860:2005							
ANR	3891906	FunctionDef	zend_ast_list_size (uint32_t children)		3891905	0					
ANR	3891907	CompoundStatement		45:59:1919:2005	3891905	0					
ANR	3891908	ReturnStatement	return sizeof ( zend_ast_list ) - sizeof ( zend_ast * ) + sizeof ( zend_ast * ) * children ;	46:1:1922:2003	3891905	0	True				
ANR	3891909	AdditiveExpression	sizeof ( zend_ast_list ) - sizeof ( zend_ast * ) + sizeof ( zend_ast * ) * children		3891905	0		-			
ANR	3891910	SizeofExpression	sizeof ( zend_ast_list )		3891905	0					
ANR	3891911	Sizeof	sizeof		3891905	0					
ANR	3891912	SizeofOperand	zend_ast_list		3891905	1					
ANR	3891913	AdditiveExpression	sizeof ( zend_ast * ) + sizeof ( zend_ast * ) * children		3891905	1		+			
ANR	3891914	SizeofExpression	sizeof ( zend_ast * )		3891905	0					
ANR	3891915	Sizeof	sizeof		3891905	0					
ANR	3891916	SizeofOperand	zend_ast *		3891905	1					
ANR	3891917	MultiplicativeExpression	sizeof ( zend_ast * ) * children		3891905	1		*			
ANR	3891918	SizeofExpression	sizeof ( zend_ast * )		3891905	0					
ANR	3891919	Sizeof	sizeof		3891905	0					
ANR	3891920	SizeofOperand	zend_ast *		3891905	1					
ANR	3891921	Identifier	children		3891905	1					
ANR	3891922	ReturnType	static inline size_t		3891905	1					
ANR	3891923	Identifier	zend_ast_list_size		3891905	2					
ANR	3891924	ParameterList	uint32_t children		3891905	3					
ANR	3891925	Parameter	uint32_t children	45:40:1900:1916	3891905	0	True				
ANR	3891926	ParameterType	uint32_t		3891905	0					
ANR	3891927	Identifier	children		3891905	1					
ANR	3891928	CFGEntryNode	ENTRY		3891905		True				
ANR	3891929	CFGExitNode	EXIT		3891905		True				
ANR	3891930	Symbol	children		3891905						
ANR	3891931	Function	zend_ast_create_znode	49:0:2008:2257							
ANR	3891932	FunctionDef	zend_ast_create_znode (znode * node)		3891931	0					
ANR	3891933	CompoundStatement		49:54:2062:2257	3891931	0					
ANR	3891934	IdentifierDeclStatement	zend_ast_znode * ast ;	50:1:2065:2084	3891931	0	True				
ANR	3891935	IdentifierDecl	* ast		3891931	0					
ANR	3891936	IdentifierDeclType	zend_ast_znode *		3891931	0					
ANR	3891937	Identifier	ast		3891931	1					
ANR	3891938	ExpressionStatement	ast = zend_ast_alloc ( sizeof ( zend_ast_znode ) )	52:1:2088:2132	3891931	1	True				
ANR	3891939	AssignmentExpression	ast = zend_ast_alloc ( sizeof ( zend_ast_znode ) )		3891931	0		=			
ANR	3891940	Identifier	ast		3891931	0					
ANR	3891941	CallExpression	zend_ast_alloc ( sizeof ( zend_ast_znode ) )		3891931	1					
ANR	3891942	Callee	zend_ast_alloc		3891931	0					
ANR	3891943	Identifier	zend_ast_alloc		3891931	0					
ANR	3891944	ArgumentList	sizeof ( zend_ast_znode )		3891931	1					
ANR	3891945	Argument	sizeof ( zend_ast_znode )		3891931	0					
ANR	3891946	SizeofExpression	sizeof ( zend_ast_znode )		3891931	0					
ANR	3891947	Sizeof	sizeof		3891931	0					
ANR	3891948	SizeofOperand	zend_ast_znode		3891931	1					
ANR	3891949	ExpressionStatement	ast -> kind = ZEND_AST_ZNODE	53:1:2135:2161	3891931	2	True				
ANR	3891950	AssignmentExpression	ast -> kind = ZEND_AST_ZNODE		3891931	0		=			
ANR	3891951	PtrMemberAccess	ast -> kind		3891931	0					
ANR	3891952	Identifier	ast		3891931	0					
ANR	3891953	Identifier	kind		3891931	1					
ANR	3891954	Identifier	ZEND_AST_ZNODE		3891931	1					
ANR	3891955	ExpressionStatement	ast -> attr = 0	54:1:2164:2177	3891931	3	True				
ANR	3891956	AssignmentExpression	ast -> attr = 0		3891931	0		=			
ANR	3891957	PtrMemberAccess	ast -> attr		3891931	0					
ANR	3891958	Identifier	ast		3891931	0					
ANR	3891959	Identifier	attr		3891931	1					
ANR	3891960	PrimaryExpression	0		3891931	1					
ANR	3891961	ExpressionStatement	ast -> lineno = CG ( zend_lineno )	55:1:2180:2209	3891931	4	True				
ANR	3891962	AssignmentExpression	ast -> lineno = CG ( zend_lineno )		3891931	0		=			
ANR	3891963	PtrMemberAccess	ast -> lineno		3891931	0					
ANR	3891964	Identifier	ast		3891931	0					
ANR	3891965	Identifier	lineno		3891931	1					
ANR	3891966	CallExpression	CG ( zend_lineno )		3891931	1					
ANR	3891967	Callee	CG		3891931	0					
ANR	3891968	Identifier	CG		3891931	0					
ANR	3891969	ArgumentList	zend_lineno		3891931	1					
ANR	3891970	Argument	zend_lineno		3891931	0					
ANR	3891971	Identifier	zend_lineno		3891931	0					
ANR	3891972	ExpressionStatement	ast -> node = * node	56:1:2212:2229	3891931	5	True				
ANR	3891973	AssignmentExpression	ast -> node = * node		3891931	0		=			
ANR	3891974	PtrMemberAccess	ast -> node		3891931	0					
ANR	3891975	Identifier	ast		3891931	0					
ANR	3891976	Identifier	node		3891931	1					
ANR	3891977	UnaryOperationExpression	* node		3891931	1					
ANR	3891978	UnaryOperator	*		3891931	0					
ANR	3891979	Identifier	node		3891931	1					
ANR	3891980	ReturnStatement	return ( zend_ast * ) ast ;	57:1:2232:2255	3891931	6	True				
ANR	3891981	CastExpression	( zend_ast * ) ast		3891931	0					
ANR	3891982	CastTarget	zend_ast *		3891931	0					
ANR	3891983	Identifier	ast		3891931	1					
ANR	3891984	ReturnType	ZEND_API zend_ast *		3891931	1					
ANR	3891985	Identifier	zend_ast_create_znode		3891931	2					
ANR	3891986	ParameterList	znode * node		3891931	3					
ANR	3891987	Parameter	znode * node	49:41:2049:2059	3891931	0	True				
ANR	3891988	ParameterType	znode *		3891931	0					
ANR	3891989	Identifier	node		3891931	1					
ANR	3891990	CFGEntryNode	ENTRY		3891931		True				
ANR	3891991	CFGExitNode	EXIT		3891931		True				
ANR	3891992	Symbol	node		3891931						
ANR	3891993	Symbol	ast -> attr		3891931						
ANR	3891994	Symbol	ast -> kind		3891931						
ANR	3891995	Symbol	ast		3891931						
ANR	3891996	Symbol	* ast		3891931						
ANR	3891997	Symbol	CG		3891931						
ANR	3891998	Symbol	ast -> lineno		3891931						
ANR	3891999	Symbol	zend_ast_alloc		3891931						
ANR	3892000	Symbol	zend_lineno		3891931						
ANR	3892001	Symbol	* node		3891931						
ANR	3892002	Symbol	ast -> node		3891931						
ANR	3892003	Symbol	ZEND_AST_ZNODE		3891931						
ANR	3892004	Function	zend_ast_create_zval_ex	60:0:2260:2548							
ANR	3892005	FunctionDef	"zend_ast_create_zval_ex (zval * zv , zend_ast_attr attr)"		3892004	0					
ANR	3892006	CompoundStatement		60:73:2333:2548	3892004	0					
ANR	3892007	IdentifierDeclStatement	zend_ast_zval * ast ;	61:1:2336:2354	3892004	0	True				
ANR	3892008	IdentifierDecl	* ast		3892004	0					
ANR	3892009	IdentifierDeclType	zend_ast_zval *		3892004	0					
ANR	3892010	Identifier	ast		3892004	1					
ANR	3892011	ExpressionStatement	ast = zend_ast_alloc ( sizeof ( zend_ast_zval ) )	63:1:2358:2401	3892004	1	True				
ANR	3892012	AssignmentExpression	ast = zend_ast_alloc ( sizeof ( zend_ast_zval ) )		3892004	0		=			
ANR	3892013	Identifier	ast		3892004	0					
ANR	3892014	CallExpression	zend_ast_alloc ( sizeof ( zend_ast_zval ) )		3892004	1					
ANR	3892015	Callee	zend_ast_alloc		3892004	0					
ANR	3892016	Identifier	zend_ast_alloc		3892004	0					
ANR	3892017	ArgumentList	sizeof ( zend_ast_zval )		3892004	1					
ANR	3892018	Argument	sizeof ( zend_ast_zval )		3892004	0					
ANR	3892019	SizeofExpression	sizeof ( zend_ast_zval )		3892004	0					
ANR	3892020	Sizeof	sizeof		3892004	0					
ANR	3892021	SizeofOperand	zend_ast_zval		3892004	1					
ANR	3892022	ExpressionStatement	ast -> kind = ZEND_AST_ZVAL	64:1:2404:2429	3892004	2	True				
ANR	3892023	AssignmentExpression	ast -> kind = ZEND_AST_ZVAL		3892004	0		=			
ANR	3892024	PtrMemberAccess	ast -> kind		3892004	0					
ANR	3892025	Identifier	ast		3892004	0					
ANR	3892026	Identifier	kind		3892004	1					
ANR	3892027	Identifier	ZEND_AST_ZVAL		3892004	1					
ANR	3892028	ExpressionStatement	ast -> attr = attr	65:1:2432:2448	3892004	3	True				
ANR	3892029	AssignmentExpression	ast -> attr = attr		3892004	0		=			
ANR	3892030	PtrMemberAccess	ast -> attr		3892004	0					
ANR	3892031	Identifier	ast		3892004	0					
ANR	3892032	Identifier	attr		3892004	1					
ANR	3892033	Identifier	attr		3892004	1					
ANR	3892034	ExpressionStatement	"ZVAL_COPY_VALUE ( & ast -> val , zv )"	66:1:2451:2481	3892004	4	True				
ANR	3892035	CallExpression	"ZVAL_COPY_VALUE ( & ast -> val , zv )"		3892004	0					
ANR	3892036	Callee	ZVAL_COPY_VALUE		3892004	0					
ANR	3892037	Identifier	ZVAL_COPY_VALUE		3892004	0					
ANR	3892038	ArgumentList	& ast -> val		3892004	1					
ANR	3892039	Argument	& ast -> val		3892004	0					
ANR	3892040	UnaryOperationExpression	& ast -> val		3892004	0					
ANR	3892041	UnaryOperator	&		3892004	0					
ANR	3892042	PtrMemberAccess	ast -> val		3892004	1					
ANR	3892043	Identifier	ast		3892004	0					
ANR	3892044	Identifier	val		3892004	1					
ANR	3892045	Argument	zv		3892004	1					
ANR	3892046	Identifier	zv		3892004	0					
ANR	3892047	ExpressionStatement	ast -> val . u2 . lineno = CG ( zend_lineno )	67:1:2484:2520	3892004	5	True				
ANR	3892048	AssignmentExpression	ast -> val . u2 . lineno = CG ( zend_lineno )		3892004	0		=			
ANR	3892049	MemberAccess	ast -> val . u2 . lineno		3892004	0					
ANR	3892050	MemberAccess	ast -> val . u2		3892004	0					
ANR	3892051	PtrMemberAccess	ast -> val		3892004	0					
ANR	3892052	Identifier	ast		3892004	0					
ANR	3892053	Identifier	val		3892004	1					
ANR	3892054	Identifier	u2		3892004	1					
ANR	3892055	Identifier	lineno		3892004	1					
ANR	3892056	CallExpression	CG ( zend_lineno )		3892004	1					
ANR	3892057	Callee	CG		3892004	0					
ANR	3892058	Identifier	CG		3892004	0					
ANR	3892059	ArgumentList	zend_lineno		3892004	1					
ANR	3892060	Argument	zend_lineno		3892004	0					
ANR	3892061	Identifier	zend_lineno		3892004	0					
ANR	3892062	ReturnStatement	return ( zend_ast * ) ast ;	68:1:2523:2546	3892004	6	True				
ANR	3892063	CastExpression	( zend_ast * ) ast		3892004	0					
ANR	3892064	CastTarget	zend_ast *		3892004	0					
ANR	3892065	Identifier	ast		3892004	1					
ANR	3892066	ReturnType	ZEND_API zend_ast *		3892004	1					
ANR	3892067	Identifier	zend_ast_create_zval_ex		3892004	2					
ANR	3892068	ParameterList	"zval * zv , zend_ast_attr attr"		3892004	3					
ANR	3892069	Parameter	zval * zv	60:43:2303:2310	3892004	0	True				
ANR	3892070	ParameterType	zval *		3892004	0					
ANR	3892071	Identifier	zv		3892004	1					
ANR	3892072	Parameter	zend_ast_attr attr	60:53:2313:2330	3892004	1	True				
ANR	3892073	ParameterType	zend_ast_attr		3892004	0					
ANR	3892074	Identifier	attr		3892004	1					
ANR	3892075	CFGEntryNode	ENTRY		3892004		True				
ANR	3892076	CFGExitNode	EXIT		3892004		True				
ANR	3892077	Symbol	ast -> attr		3892004						
ANR	3892078	Symbol	ast -> kind		3892004						
ANR	3892079	Symbol	ast		3892004						
ANR	3892080	Symbol	CG		3892004						
ANR	3892081	Symbol	zend_ast_alloc		3892004						
ANR	3892082	Symbol	& ast -> val		3892004						
ANR	3892083	Symbol	ast -> val . u2		3892004						
ANR	3892084	Symbol	* ast		3892004						
ANR	3892085	Symbol	ast -> val		3892004						
ANR	3892086	Symbol	ZEND_AST_ZVAL		3892004						
ANR	3892087	Symbol	zend_lineno		3892004						
ANR	3892088	Symbol	ast -> val . u2 . lineno		3892004						
ANR	3892089	Symbol	zv		3892004						
ANR	3892090	Symbol	attr		3892004						
ANR	3892091	Function	zend_ast_create_decl	71:0:2551:3183							
ANR	3892092	FunctionDef	"zend_ast_create_decl (zend_ast_kind kind , uint32_t flags , uint32_t start_lineno , zend_string * doc_comment , zend_string * name , zend_ast * child0 , zend_ast * child1 , zend_ast * child2 , zend_ast * child3)"		3892091	0					
ANR	3892093	CompoundStatement		74:2:2771:3183	3892091	0					
ANR	3892094	IdentifierDeclStatement	zend_ast_decl * ast ;	75:1:2774:2792	3892091	0	True				
ANR	3892095	IdentifierDecl	* ast		3892091	0					
ANR	3892096	IdentifierDeclType	zend_ast_decl *		3892091	0					
ANR	3892097	Identifier	ast		3892091	1					
ANR	3892098	ExpressionStatement	ast = zend_ast_alloc ( sizeof ( zend_ast_decl ) )	77:1:2796:2839	3892091	1	True				
ANR	3892099	AssignmentExpression	ast = zend_ast_alloc ( sizeof ( zend_ast_decl ) )		3892091	0		=			
ANR	3892100	Identifier	ast		3892091	0					
ANR	3892101	CallExpression	zend_ast_alloc ( sizeof ( zend_ast_decl ) )		3892091	1					
ANR	3892102	Callee	zend_ast_alloc		3892091	0					
ANR	3892103	Identifier	zend_ast_alloc		3892091	0					
ANR	3892104	ArgumentList	sizeof ( zend_ast_decl )		3892091	1					
ANR	3892105	Argument	sizeof ( zend_ast_decl )		3892091	0					
ANR	3892106	SizeofExpression	sizeof ( zend_ast_decl )		3892091	0					
ANR	3892107	Sizeof	sizeof		3892091	0					
ANR	3892108	SizeofOperand	zend_ast_decl		3892091	1					
ANR	3892109	ExpressionStatement	ast -> kind = kind	78:1:2842:2858	3892091	2	True				
ANR	3892110	AssignmentExpression	ast -> kind = kind		3892091	0		=			
ANR	3892111	PtrMemberAccess	ast -> kind		3892091	0					
ANR	3892112	Identifier	ast		3892091	0					
ANR	3892113	Identifier	kind		3892091	1					
ANR	3892114	Identifier	kind		3892091	1					
ANR	3892115	ExpressionStatement	ast -> attr = 0	79:1:2861:2874	3892091	3	True				
ANR	3892116	AssignmentExpression	ast -> attr = 0		3892091	0		=			
ANR	3892117	PtrMemberAccess	ast -> attr		3892091	0					
ANR	3892118	Identifier	ast		3892091	0					
ANR	3892119	Identifier	attr		3892091	1					
ANR	3892120	PrimaryExpression	0		3892091	1					
ANR	3892121	ExpressionStatement	ast -> start_lineno = start_lineno	80:1:2877:2909	3892091	4	True				
ANR	3892122	AssignmentExpression	ast -> start_lineno = start_lineno		3892091	0		=			
ANR	3892123	PtrMemberAccess	ast -> start_lineno		3892091	0					
ANR	3892124	Identifier	ast		3892091	0					
ANR	3892125	Identifier	start_lineno		3892091	1					
ANR	3892126	Identifier	start_lineno		3892091	1					
ANR	3892127	ExpressionStatement	ast -> end_lineno = CG ( zend_lineno )	81:1:2912:2945	3892091	5	True				
ANR	3892128	AssignmentExpression	ast -> end_lineno = CG ( zend_lineno )		3892091	0		=			
ANR	3892129	PtrMemberAccess	ast -> end_lineno		3892091	0					
ANR	3892130	Identifier	ast		3892091	0					
ANR	3892131	Identifier	end_lineno		3892091	1					
ANR	3892132	CallExpression	CG ( zend_lineno )		3892091	1					
ANR	3892133	Callee	CG		3892091	0					
ANR	3892134	Identifier	CG		3892091	0					
ANR	3892135	ArgumentList	zend_lineno		3892091	1					
ANR	3892136	Argument	zend_lineno		3892091	0					
ANR	3892137	Identifier	zend_lineno		3892091	0					
ANR	3892138	ExpressionStatement	ast -> flags = flags	82:1:2948:2966	3892091	6	True				
ANR	3892139	AssignmentExpression	ast -> flags = flags		3892091	0		=			
ANR	3892140	PtrMemberAccess	ast -> flags		3892091	0					
ANR	3892141	Identifier	ast		3892091	0					
ANR	3892142	Identifier	flags		3892091	1					
ANR	3892143	Identifier	flags		3892091	1					
ANR	3892144	ExpressionStatement	ast -> lex_pos = LANG_SCNG ( yy_text )	83:1:2969:3002	3892091	7	True				
ANR	3892145	AssignmentExpression	ast -> lex_pos = LANG_SCNG ( yy_text )		3892091	0		=			
ANR	3892146	PtrMemberAccess	ast -> lex_pos		3892091	0					
ANR	3892147	Identifier	ast		3892091	0					
ANR	3892148	Identifier	lex_pos		3892091	1					
ANR	3892149	CallExpression	LANG_SCNG ( yy_text )		3892091	1					
ANR	3892150	Callee	LANG_SCNG		3892091	0					
ANR	3892151	Identifier	LANG_SCNG		3892091	0					
ANR	3892152	ArgumentList	yy_text		3892091	1					
ANR	3892153	Argument	yy_text		3892091	0					
ANR	3892154	Identifier	yy_text		3892091	0					
ANR	3892155	ExpressionStatement	ast -> doc_comment = doc_comment	84:1:3005:3035	3892091	8	True				
ANR	3892156	AssignmentExpression	ast -> doc_comment = doc_comment		3892091	0		=			
ANR	3892157	PtrMemberAccess	ast -> doc_comment		3892091	0					
ANR	3892158	Identifier	ast		3892091	0					
ANR	3892159	Identifier	doc_comment		3892091	1					
ANR	3892160	Identifier	doc_comment		3892091	1					
ANR	3892161	ExpressionStatement	ast -> name = name	85:1:3038:3054	3892091	9	True				
ANR	3892162	AssignmentExpression	ast -> name = name		3892091	0		=			
ANR	3892163	PtrMemberAccess	ast -> name		3892091	0					
ANR	3892164	Identifier	ast		3892091	0					
ANR	3892165	Identifier	name		3892091	1					
ANR	3892166	Identifier	name		3892091	1					
ANR	3892167	ExpressionStatement	ast -> child [ 0 ] = child0	86:1:3057:3079	3892091	10	True				
ANR	3892168	AssignmentExpression	ast -> child [ 0 ] = child0		3892091	0		=			
ANR	3892169	ArrayIndexing	ast -> child [ 0 ]		3892091	0					
ANR	3892170	PtrMemberAccess	ast -> child		3892091	0					
ANR	3892171	Identifier	ast		3892091	0					
ANR	3892172	Identifier	child		3892091	1					
ANR	3892173	PrimaryExpression	0		3892091	1					
ANR	3892174	Identifier	child0		3892091	1					
ANR	3892175	ExpressionStatement	ast -> child [ 1 ] = child1	87:1:3082:3104	3892091	11	True				
ANR	3892176	AssignmentExpression	ast -> child [ 1 ] = child1		3892091	0		=			
ANR	3892177	ArrayIndexing	ast -> child [ 1 ]		3892091	0					
ANR	3892178	PtrMemberAccess	ast -> child		3892091	0					
ANR	3892179	Identifier	ast		3892091	0					
ANR	3892180	Identifier	child		3892091	1					
ANR	3892181	PrimaryExpression	1		3892091	1					
ANR	3892182	Identifier	child1		3892091	1					
ANR	3892183	ExpressionStatement	ast -> child [ 2 ] = child2	88:1:3107:3129	3892091	12	True				
ANR	3892184	AssignmentExpression	ast -> child [ 2 ] = child2		3892091	0		=			
ANR	3892185	ArrayIndexing	ast -> child [ 2 ]		3892091	0					
ANR	3892186	PtrMemberAccess	ast -> child		3892091	0					
ANR	3892187	Identifier	ast		3892091	0					
ANR	3892188	Identifier	child		3892091	1					
ANR	3892189	PrimaryExpression	2		3892091	1					
ANR	3892190	Identifier	child2		3892091	1					
ANR	3892191	ExpressionStatement	ast -> child [ 3 ] = child3	89:1:3132:3154	3892091	13	True				
ANR	3892192	AssignmentExpression	ast -> child [ 3 ] = child3		3892091	0		=			
ANR	3892193	ArrayIndexing	ast -> child [ 3 ]		3892091	0					
ANR	3892194	PtrMemberAccess	ast -> child		3892091	0					
ANR	3892195	Identifier	ast		3892091	0					
ANR	3892196	Identifier	child		3892091	1					
ANR	3892197	PrimaryExpression	3		3892091	1					
ANR	3892198	Identifier	child3		3892091	1					
ANR	3892199	ReturnStatement	return ( zend_ast * ) ast ;	91:1:3158:3181	3892091	14	True				
ANR	3892200	CastExpression	( zend_ast * ) ast		3892091	0					
ANR	3892201	CastTarget	zend_ast *		3892091	0					
ANR	3892202	Identifier	ast		3892091	1					
ANR	3892203	ReturnType	ZEND_API zend_ast *		3892091	1					
ANR	3892204	Identifier	zend_ast_create_decl		3892091	2					
ANR	3892205	ParameterList	"zend_ast_kind kind , uint32_t flags , uint32_t start_lineno , zend_string * doc_comment , zend_string * name , zend_ast * child0 , zend_ast * child1 , zend_ast * child2 , zend_ast * child3"		3892091	3					
ANR	3892206	Parameter	zend_ast_kind kind	72:1:2593:2610	3892091	0	True				
ANR	3892207	ParameterType	zend_ast_kind		3892091	0					
ANR	3892208	Identifier	kind		3892091	1					
ANR	3892209	Parameter	uint32_t flags	72:21:2613:2626	3892091	1	True				
ANR	3892210	ParameterType	uint32_t		3892091	0					
ANR	3892211	Identifier	flags		3892091	1					
ANR	3892212	Parameter	uint32_t start_lineno	72:37:2629:2649	3892091	2	True				
ANR	3892213	ParameterType	uint32_t		3892091	0					
ANR	3892214	Identifier	start_lineno		3892091	1					
ANR	3892215	Parameter	zend_string * doc_comment	72:60:2652:2675	3892091	3	True				
ANR	3892216	ParameterType	zend_string *		3892091	0					
ANR	3892217	Identifier	doc_comment		3892091	1					
ANR	3892218	Parameter	zend_string * name	73:1:2679:2695	3892091	4	True				
ANR	3892219	ParameterType	zend_string *		3892091	0					
ANR	3892220	Identifier	name		3892091	1					
ANR	3892221	Parameter	zend_ast * child0	73:20:2698:2713	3892091	5	True				
ANR	3892222	ParameterType	zend_ast *		3892091	0					
ANR	3892223	Identifier	child0		3892091	1					
ANR	3892224	Parameter	zend_ast * child1	73:38:2716:2731	3892091	6	True				
ANR	3892225	ParameterType	zend_ast *		3892091	0					
ANR	3892226	Identifier	child1		3892091	1					
ANR	3892227	Parameter	zend_ast * child2	73:56:2734:2749	3892091	7	True				
ANR	3892228	ParameterType	zend_ast *		3892091	0					
ANR	3892229	Identifier	child2		3892091	1					
ANR	3892230	Parameter	zend_ast * child3	73:74:2752:2767	3892091	8	True				
ANR	3892231	ParameterType	zend_ast *		3892091	0					
ANR	3892232	Identifier	child3		3892091	1					
ANR	3892233	CFGEntryNode	ENTRY		3892091		True				
ANR	3892234	CFGExitNode	EXIT		3892091		True				
ANR	3892235	Symbol	doc_comment		3892091						
ANR	3892236	Symbol	ast -> kind		3892091						
ANR	3892237	Symbol	ast		3892091						
ANR	3892238	Symbol	zend_ast_alloc		3892091						
ANR	3892239	Symbol	flags		3892091						
ANR	3892240	Symbol	start_lineno		3892091						
ANR	3892241	Symbol	child2		3892091						
ANR	3892242	Symbol	ast -> start_lineno		3892091						
ANR	3892243	Symbol	child3		3892091						
ANR	3892244	Symbol	child0		3892091						
ANR	3892245	Symbol	child1		3892091						
ANR	3892246	Symbol	yy_text		3892091						
ANR	3892247	Symbol	* ast		3892091						
ANR	3892248	Symbol	ast -> flags		3892091						
ANR	3892249	Symbol	LANG_SCNG		3892091						
ANR	3892250	Symbol	* * ast		3892091						
ANR	3892251	Symbol	zend_lineno		3892091						
ANR	3892252	Symbol	ast -> attr		3892091						
ANR	3892253	Symbol	CG		3892091						
ANR	3892254	Symbol	ast -> doc_comment		3892091						
ANR	3892255	Symbol	kind		3892091						
ANR	3892256	Symbol	ast -> end_lineno		3892091						
ANR	3892257	Symbol	ast -> name		3892091						
ANR	3892258	Symbol	name		3892091						
ANR	3892259	Symbol	* ast -> child		3892091						
ANR	3892260	Symbol	ast -> child		3892091						
ANR	3892261	Symbol	ast -> lex_pos		3892091						
ANR	3892262	Function	zend_ast_create_from_va_list	94:0:3186:3797							
ANR	3892263	FunctionDef	"zend_ast_create_from_va_list (zend_ast_kind kind , zend_ast_attr attr , va_list va)"		3892262	0					
ANR	3892264	CompoundStatement		94:98:3284:3797	3892262	0					
ANR	3892265	IdentifierDeclStatement	"uint32_t i , children = kind >> ZEND_AST_NUM_CHILDREN_SHIFT ;"	95:1:3287:3345	3892262	0	True				
ANR	3892266	IdentifierDecl	i		3892262	0					
ANR	3892267	IdentifierDeclType	uint32_t		3892262	0					
ANR	3892268	Identifier	i		3892262	1					
ANR	3892269	IdentifierDecl	children = kind >> ZEND_AST_NUM_CHILDREN_SHIFT		3892262	1					
ANR	3892270	IdentifierDeclType	uint32_t		3892262	0					
ANR	3892271	Identifier	children		3892262	1					
ANR	3892272	AssignmentExpression	children = kind >> ZEND_AST_NUM_CHILDREN_SHIFT		3892262	2		=			
ANR	3892273	Identifier	children		3892262	0					
ANR	3892274	ShiftExpression	kind >> ZEND_AST_NUM_CHILDREN_SHIFT		3892262	1		>>			
ANR	3892275	Identifier	kind		3892262	0					
ANR	3892276	Identifier	ZEND_AST_NUM_CHILDREN_SHIFT		3892262	1					
ANR	3892277	IdentifierDeclStatement	zend_ast * ast ;	96:1:3348:3361	3892262	1	True				
ANR	3892278	IdentifierDecl	* ast		3892262	0					
ANR	3892279	IdentifierDeclType	zend_ast *		3892262	0					
ANR	3892280	Identifier	ast		3892262	1					
ANR	3892281	ExpressionStatement	ast = zend_ast_alloc ( zend_ast_size ( children ) )	98:1:3365:3410	3892262	2	True				
ANR	3892282	AssignmentExpression	ast = zend_ast_alloc ( zend_ast_size ( children ) )		3892262	0		=			
ANR	3892283	Identifier	ast		3892262	0					
ANR	3892284	CallExpression	zend_ast_alloc ( zend_ast_size ( children ) )		3892262	1					
ANR	3892285	Callee	zend_ast_alloc		3892262	0					
ANR	3892286	Identifier	zend_ast_alloc		3892262	0					
ANR	3892287	ArgumentList	zend_ast_size ( children )		3892262	1					
ANR	3892288	Argument	zend_ast_size ( children )		3892262	0					
ANR	3892289	CallExpression	zend_ast_size ( children )		3892262	0					
ANR	3892290	Callee	zend_ast_size		3892262	0					
ANR	3892291	Identifier	zend_ast_size		3892262	0					
ANR	3892292	ArgumentList	children		3892262	1					
ANR	3892293	Argument	children		3892262	0					
ANR	3892294	Identifier	children		3892262	0					
ANR	3892295	ExpressionStatement	ast -> kind = kind	99:1:3413:3429	3892262	3	True				
ANR	3892296	AssignmentExpression	ast -> kind = kind		3892262	0		=			
ANR	3892297	PtrMemberAccess	ast -> kind		3892262	0					
ANR	3892298	Identifier	ast		3892262	0					
ANR	3892299	Identifier	kind		3892262	1					
ANR	3892300	Identifier	kind		3892262	1					
ANR	3892301	ExpressionStatement	ast -> attr = attr	100:1:3432:3448	3892262	4	True				
ANR	3892302	AssignmentExpression	ast -> attr = attr		3892262	0		=			
ANR	3892303	PtrMemberAccess	ast -> attr		3892262	0					
ANR	3892304	Identifier	ast		3892262	0					
ANR	3892305	Identifier	attr		3892262	1					
ANR	3892306	Identifier	attr		3892262	1					
ANR	3892307	ExpressionStatement	ast -> lineno = ( uint32_t ) - 1	101:1:3451:3478	3892262	5	True				
ANR	3892308	AssignmentExpression	ast -> lineno = ( uint32_t ) - 1		3892262	0		=			
ANR	3892309	PtrMemberAccess	ast -> lineno		3892262	0					
ANR	3892310	Identifier	ast		3892262	0					
ANR	3892311	Identifier	lineno		3892262	1					
ANR	3892312	CastExpression	( uint32_t ) - 1		3892262	1					
ANR	3892313	CastTarget	uint32_t		3892262	0					
ANR	3892314	UnaryOperationExpression	- 1		3892262	1					
ANR	3892315	UnaryOperator	-		3892262	0					
ANR	3892316	PrimaryExpression	1		3892262	1					
ANR	3892317	ForStatement	for ( i = 0 ; i < children ; ++ i )		3892262	6					
ANR	3892318	ForInit	i = 0 ;	103:6:3487:3492	3892262	0	True				
ANR	3892319	AssignmentExpression	i = 0		3892262	0		=			
ANR	3892320	Identifier	i		3892262	0					
ANR	3892321	PrimaryExpression	0		3892262	1					
ANR	3892322	Condition	i < children	103:13:3494:3505	3892262	1	True				
ANR	3892323	RelationalExpression	i < children		3892262	0		<			
ANR	3892324	Identifier	i		3892262	0					
ANR	3892325	Identifier	children		3892262	1					
ANR	3892326	UnaryExpression	++ i	103:27:3508:3510	3892262	2	True				
ANR	3892327	IncDec	++		3892262	0					
ANR	3892328	Identifier	i		3892262	1					
ANR	3892329	CompoundStatement		10:32:228:228	3892262	3					
ANR	3892330	Statement	ast	104:2:3517:3519	3892262	0	True				
ANR	3892331	Statement	->	104:5:3520:3521	3892262	1	True				
ANR	3892332	Statement	child	104:7:3522:3526	3892262	2	True				
ANR	3892333	Statement	[	104:12:3527:3527	3892262	3	True				
ANR	3892334	Statement	i	104:13:3528:3528	3892262	4	True				
ANR	3892335	Statement	]	104:14:3529:3529	3892262	5	True				
ANR	3892336	Statement	=	104:16:3531:3531	3892262	6	True				
ANR	3892337	Statement	va_arg	104:18:3533:3538	3892262	7	True				
ANR	3892338	Statement	(	104:24:3539:3539	3892262	8	True				
ANR	3892339	Statement	va	104:25:3540:3541	3892262	9	True				
ANR	3892340	Statement	","	104:27:3542:3542	3892262	10	True				
ANR	3892341	Statement	zend_ast	104:29:3544:3551	3892262	11	True				
ANR	3892342	Statement	*	104:38:3553:3553	3892262	12	True				
ANR	3892343	Statement	)	104:39:3554:3554	3892262	13	True				
ANR	3892344	ExpressionStatement		104:40:3555:3555	3892262	14	True				
ANR	3892345	IfStatement	if ( ast -> child [ i ] != NULL )		3892262	15					
ANR	3892346	Condition	ast -> child [ i ] != NULL	105:6:3563:3583	3892262	0	True				
ANR	3892347	EqualityExpression	ast -> child [ i ] != NULL		3892262	0		!=			
ANR	3892348	ArrayIndexing	ast -> child [ i ]		3892262	0					
ANR	3892349	PtrMemberAccess	ast -> child		3892262	0					
ANR	3892350	Identifier	ast		3892262	0					
ANR	3892351	Identifier	child		3892262	1					
ANR	3892352	Identifier	i		3892262	1					
ANR	3892353	Identifier	NULL		3892262	1					
ANR	3892354	CompoundStatement		13:3:306:358	3892262	1					
ANR	3892355	IdentifierDeclStatement	uint32_t lineno = zend_ast_get_lineno ( ast -> child [ i ] ) ;	106:3:3591:3643	3892262	0	True				
ANR	3892356	IdentifierDecl	lineno = zend_ast_get_lineno ( ast -> child [ i ] )		3892262	0					
ANR	3892357	IdentifierDeclType	uint32_t		3892262	0					
ANR	3892358	Identifier	lineno		3892262	1					
ANR	3892359	AssignmentExpression	lineno = zend_ast_get_lineno ( ast -> child [ i ] )		3892262	2		=			
ANR	3892360	Identifier	lineno		3892262	0					
ANR	3892361	CallExpression	zend_ast_get_lineno ( ast -> child [ i ] )		3892262	1					
ANR	3892362	Callee	zend_ast_get_lineno		3892262	0					
ANR	3892363	Identifier	zend_ast_get_lineno		3892262	0					
ANR	3892364	ArgumentList	ast -> child [ i ]		3892262	1					
ANR	3892365	Argument	ast -> child [ i ]		3892262	0					
ANR	3892366	ArrayIndexing	ast -> child [ i ]		3892262	0					
ANR	3892367	PtrMemberAccess	ast -> child		3892262	0					
ANR	3892368	Identifier	ast		3892262	0					
ANR	3892369	Identifier	child		3892262	1					
ANR	3892370	Identifier	i		3892262	1					
ANR	3892371	IfStatement	if ( lineno < ast -> lineno )		3892262	1					
ANR	3892372	Condition	lineno < ast -> lineno	107:7:3652:3671	3892262	0	True				
ANR	3892373	RelationalExpression	lineno < ast -> lineno		3892262	0		<			
ANR	3892374	Identifier	lineno		3892262	0					
ANR	3892375	PtrMemberAccess	ast -> lineno		3892262	1					
ANR	3892376	Identifier	ast		3892262	0					
ANR	3892377	Identifier	lineno		3892262	1					
ANR	3892378	CompoundStatement		14:29:389:389	3892262	1					
ANR	3892379	ExpressionStatement	ast -> lineno = lineno	108:4:3680:3700	3892262	0	True				
ANR	3892380	AssignmentExpression	ast -> lineno = lineno		3892262	0		=			
ANR	3892381	PtrMemberAccess	ast -> lineno		3892262	0					
ANR	3892382	Identifier	ast		3892262	0					
ANR	3892383	Identifier	lineno		3892262	1					
ANR	3892384	Identifier	lineno		3892262	1					
ANR	3892385	IfStatement	if ( ast -> lineno == UINT_MAX )		3892262	7					
ANR	3892386	Condition	ast -> lineno == UINT_MAX	113:5:3720:3742	3892262	0	True				
ANR	3892387	EqualityExpression	ast -> lineno == UINT_MAX		3892262	0		==			
ANR	3892388	PtrMemberAccess	ast -> lineno		3892262	0					
ANR	3892389	Identifier	ast		3892262	0					
ANR	3892390	Identifier	lineno		3892262	1					
ANR	3892391	Identifier	UINT_MAX		3892262	1					
ANR	3892392	CompoundStatement		20:30:460:460	3892262	1					
ANR	3892393	ExpressionStatement	ast -> lineno = CG ( zend_lineno )	114:2:3749:3778	3892262	0	True				
ANR	3892394	AssignmentExpression	ast -> lineno = CG ( zend_lineno )		3892262	0		=			
ANR	3892395	PtrMemberAccess	ast -> lineno		3892262	0					
ANR	3892396	Identifier	ast		3892262	0					
ANR	3892397	Identifier	lineno		3892262	1					
ANR	3892398	CallExpression	CG ( zend_lineno )		3892262	1					
ANR	3892399	Callee	CG		3892262	0					
ANR	3892400	Identifier	CG		3892262	0					
ANR	3892401	ArgumentList	zend_lineno		3892262	1					
ANR	3892402	Argument	zend_lineno		3892262	0					
ANR	3892403	Identifier	zend_lineno		3892262	0					
ANR	3892404	ReturnStatement	return ast ;	117:1:3785:3795	3892262	8	True				
ANR	3892405	Identifier	ast		3892262	0					
ANR	3892406	ReturnType	static zend_ast *		3892262	1					
ANR	3892407	Identifier	zend_ast_create_from_va_list		3892262	2					
ANR	3892408	ParameterList	"zend_ast_kind kind , zend_ast_attr attr , va_list va"		3892262	3					
ANR	3892409	Parameter	zend_ast_kind kind	94:46:3232:3249	3892262	0	True				
ANR	3892410	ParameterType	zend_ast_kind		3892262	0					
ANR	3892411	Identifier	kind		3892262	1					
ANR	3892412	Parameter	zend_ast_attr attr	94:66:3252:3269	3892262	1	True				
ANR	3892413	ParameterType	zend_ast_attr		3892262	0					
ANR	3892414	Identifier	attr		3892262	1					
ANR	3892415	Parameter	va_list va	94:86:3272:3281	3892262	2	True				
ANR	3892416	ParameterType	va_list		3892262	0					
ANR	3892417	Identifier	va		3892262	1					
ANR	3892418	CFGEntryNode	ENTRY		3892262		True				
ANR	3892419	CFGExitNode	EXIT		3892262		True				
ANR	3892420	Symbol	ast -> attr		3892262						
ANR	3892421	Symbol	ast -> kind		3892262						
ANR	3892422	Symbol	ast		3892262						
ANR	3892423	Symbol	NULL		3892262						
ANR	3892424	Symbol	CG		3892262						
ANR	3892425	Symbol	kind		3892262						
ANR	3892426	Symbol	ast -> lineno		3892262						
ANR	3892427	Symbol	zend_ast_alloc		3892262						
ANR	3892428	Symbol	i		3892262						
ANR	3892429	Symbol	zend_ast_get_lineno		3892262						
ANR	3892430	Symbol	va		3892262						
ANR	3892431	Symbol	UINT_MAX		3892262						
ANR	3892432	Symbol	* ast		3892262						
ANR	3892433	Symbol	* i		3892262						
ANR	3892434	Symbol	lineno		3892262						
ANR	3892435	Symbol	children		3892262						
ANR	3892436	Symbol	* * ast		3892262						
ANR	3892437	Symbol	zend_lineno		3892262						
ANR	3892438	Symbol	* ast -> child		3892262						
ANR	3892439	Symbol	attr		3892262						
ANR	3892440	Symbol	ZEND_AST_NUM_CHILDREN_SHIFT		3892262						
ANR	3892441	Symbol	ast -> child		3892262						
ANR	3892442	Symbol	zend_ast_size		3892262						
ANR	3892443	Function	zend_ast_create_ex	120:0:3800:4016							
ANR	3892444	FunctionDef	"zend_ast_create_ex (zend_ast_kind kind , zend_ast_attr attr)"		3892443	0					
ANR	3892445	CompoundStatement		120:83:3883:4016	3892443	0					
ANR	3892446	IdentifierDeclStatement	va_list va ;	121:1:3886:3896	3892443	0	True				
ANR	3892447	IdentifierDecl	va		3892443	0					
ANR	3892448	IdentifierDeclType	va_list		3892443	0					
ANR	3892449	Identifier	va		3892443	1					
ANR	3892450	IdentifierDeclStatement	zend_ast * ast ;	122:1:3899:3912	3892443	1	True				
ANR	3892451	IdentifierDecl	* ast		3892443	0					
ANR	3892452	IdentifierDeclType	zend_ast *		3892443	0					
ANR	3892453	Identifier	ast		3892443	1					
ANR	3892454	ExpressionStatement	"va_start ( va , attr )"	124:1:3916:3934	3892443	2	True				
ANR	3892455	CallExpression	"va_start ( va , attr )"		3892443	0					
ANR	3892456	Callee	va_start		3892443	0					
ANR	3892457	Identifier	va_start		3892443	0					
ANR	3892458	ArgumentList	va		3892443	1					
ANR	3892459	Argument	va		3892443	0					
ANR	3892460	Identifier	va		3892443	0					
ANR	3892461	Argument	attr		3892443	1					
ANR	3892462	Identifier	attr		3892443	0					
ANR	3892463	ExpressionStatement	"ast = zend_ast_create_from_va_list ( kind , attr , va )"	125:1:3937:3987	3892443	3	True				
ANR	3892464	AssignmentExpression	"ast = zend_ast_create_from_va_list ( kind , attr , va )"		3892443	0		=			
ANR	3892465	Identifier	ast		3892443	0					
ANR	3892466	CallExpression	"zend_ast_create_from_va_list ( kind , attr , va )"		3892443	1					
ANR	3892467	Callee	zend_ast_create_from_va_list		3892443	0					
ANR	3892468	Identifier	zend_ast_create_from_va_list		3892443	0					
ANR	3892469	ArgumentList	kind		3892443	1					
ANR	3892470	Argument	kind		3892443	0					
ANR	3892471	Identifier	kind		3892443	0					
ANR	3892472	Argument	attr		3892443	1					
ANR	3892473	Identifier	attr		3892443	0					
ANR	3892474	Argument	va		3892443	2					
ANR	3892475	Identifier	va		3892443	0					
ANR	3892476	ExpressionStatement	va_end ( va )	126:1:3990:4000	3892443	4	True				
ANR	3892477	CallExpression	va_end ( va )		3892443	0					
ANR	3892478	Callee	va_end		3892443	0					
ANR	3892479	Identifier	va_end		3892443	0					
ANR	3892480	ArgumentList	va		3892443	1					
ANR	3892481	Argument	va		3892443	0					
ANR	3892482	Identifier	va		3892443	0					
ANR	3892483	ReturnStatement	return ast ;	128:1:4004:4014	3892443	5	True				
ANR	3892484	Identifier	ast		3892443	0					
ANR	3892485	ReturnType	ZEND_API zend_ast *		3892443	1					
ANR	3892486	Identifier	zend_ast_create_ex		3892443	2					
ANR	3892487	ParameterList	"zend_ast_kind kind , zend_ast_attr attr"		3892443	3					
ANR	3892488	Parameter	zend_ast_kind kind	120:38:3838:3855	3892443	0	True				
ANR	3892489	ParameterType	zend_ast_kind		3892443	0					
ANR	3892490	Identifier	kind		3892443	1					
ANR	3892491	Parameter	zend_ast_attr attr	120:58:3858:3875	3892443	1	True				
ANR	3892492	ParameterType	zend_ast_attr		3892443	0					
ANR	3892493	Identifier	attr		3892443	1					
ANR	3892494	CFGEntryNode	ENTRY		3892443		True				
ANR	3892495	CFGExitNode	EXIT		3892443		True				
ANR	3892496	Symbol	ast		3892443						
ANR	3892497	Symbol	zend_ast_create_from_va_list		3892443						
ANR	3892498	Symbol	kind		3892443						
ANR	3892499	Symbol	va		3892443						
ANR	3892500	Symbol	attr		3892443						
ANR	3892501	Function	zend_ast_create	131:0:4019:4209							
ANR	3892502	FunctionDef	zend_ast_create (zend_ast_kind kind)		3892501	0					
ANR	3892503	CompoundStatement		131:60:4079:4209	3892501	0					
ANR	3892504	IdentifierDeclStatement	va_list va ;	132:1:4082:4092	3892501	0	True				
ANR	3892505	IdentifierDecl	va		3892501	0					
ANR	3892506	IdentifierDeclType	va_list		3892501	0					
ANR	3892507	Identifier	va		3892501	1					
ANR	3892508	IdentifierDeclStatement	zend_ast * ast ;	133:1:4095:4108	3892501	1	True				
ANR	3892509	IdentifierDecl	* ast		3892501	0					
ANR	3892510	IdentifierDeclType	zend_ast *		3892501	0					
ANR	3892511	Identifier	ast		3892501	1					
ANR	3892512	ExpressionStatement	"va_start ( va , kind )"	135:1:4112:4130	3892501	2	True				
ANR	3892513	CallExpression	"va_start ( va , kind )"		3892501	0					
ANR	3892514	Callee	va_start		3892501	0					
ANR	3892515	Identifier	va_start		3892501	0					
ANR	3892516	ArgumentList	va		3892501	1					
ANR	3892517	Argument	va		3892501	0					
ANR	3892518	Identifier	va		3892501	0					
ANR	3892519	Argument	kind		3892501	1					
ANR	3892520	Identifier	kind		3892501	0					
ANR	3892521	ExpressionStatement	"ast = zend_ast_create_from_va_list ( kind , 0 , va )"	136:1:4133:4180	3892501	3	True				
ANR	3892522	AssignmentExpression	"ast = zend_ast_create_from_va_list ( kind , 0 , va )"		3892501	0		=			
ANR	3892523	Identifier	ast		3892501	0					
ANR	3892524	CallExpression	"zend_ast_create_from_va_list ( kind , 0 , va )"		3892501	1					
ANR	3892525	Callee	zend_ast_create_from_va_list		3892501	0					
ANR	3892526	Identifier	zend_ast_create_from_va_list		3892501	0					
ANR	3892527	ArgumentList	kind		3892501	1					
ANR	3892528	Argument	kind		3892501	0					
ANR	3892529	Identifier	kind		3892501	0					
ANR	3892530	Argument	0		3892501	1					
ANR	3892531	PrimaryExpression	0		3892501	0					
ANR	3892532	Argument	va		3892501	2					
ANR	3892533	Identifier	va		3892501	0					
ANR	3892534	ExpressionStatement	va_end ( va )	137:1:4183:4193	3892501	4	True				
ANR	3892535	CallExpression	va_end ( va )		3892501	0					
ANR	3892536	Callee	va_end		3892501	0					
ANR	3892537	Identifier	va_end		3892501	0					
ANR	3892538	ArgumentList	va		3892501	1					
ANR	3892539	Argument	va		3892501	0					
ANR	3892540	Identifier	va		3892501	0					
ANR	3892541	ReturnStatement	return ast ;	139:1:4197:4207	3892501	5	True				
ANR	3892542	Identifier	ast		3892501	0					
ANR	3892543	ReturnType	ZEND_API zend_ast *		3892501	1					
ANR	3892544	Identifier	zend_ast_create		3892501	2					
ANR	3892545	ParameterList	zend_ast_kind kind		3892501	3					
ANR	3892546	Parameter	zend_ast_kind kind	131:35:4054:4071	3892501	0	True				
ANR	3892547	ParameterType	zend_ast_kind		3892501	0					
ANR	3892548	Identifier	kind		3892501	1					
ANR	3892549	CFGEntryNode	ENTRY		3892501		True				
ANR	3892550	CFGExitNode	EXIT		3892501		True				
ANR	3892551	Symbol	ast		3892501						
ANR	3892552	Symbol	zend_ast_create_from_va_list		3892501						
ANR	3892553	Symbol	kind		3892501						
ANR	3892554	Symbol	va		3892501						
ANR	3892555	Function	zend_ast_create_list	142:0:4212:4696							
ANR	3892556	FunctionDef	"zend_ast_create_list (uint32_t init_children , zend_ast_kind kind)"		3892555	0					
ANR	3892557	CompoundStatement		142:89:4301:4696	3892555	0					
ANR	3892558	IdentifierDeclStatement	zend_ast * ast ;	143:1:4304:4317	3892555	0	True				
ANR	3892559	IdentifierDecl	* ast		3892555	0					
ANR	3892560	IdentifierDeclType	zend_ast *		3892555	0					
ANR	3892561	Identifier	ast		3892555	1					
ANR	3892562	IdentifierDeclStatement	zend_ast_list * list ;	144:1:4320:4339	3892555	1	True				
ANR	3892563	IdentifierDecl	* list		3892555	0					
ANR	3892564	IdentifierDeclType	zend_ast_list *		3892555	0					
ANR	3892565	Identifier	list		3892555	1					
ANR	3892566	ExpressionStatement	ast = zend_ast_alloc ( zend_ast_list_size ( 4 ) )	146:1:4343:4386	3892555	2	True				
ANR	3892567	AssignmentExpression	ast = zend_ast_alloc ( zend_ast_list_size ( 4 ) )		3892555	0		=			
ANR	3892568	Identifier	ast		3892555	0					
ANR	3892569	CallExpression	zend_ast_alloc ( zend_ast_list_size ( 4 ) )		3892555	1					
ANR	3892570	Callee	zend_ast_alloc		3892555	0					
ANR	3892571	Identifier	zend_ast_alloc		3892555	0					
ANR	3892572	ArgumentList	zend_ast_list_size ( 4 )		3892555	1					
ANR	3892573	Argument	zend_ast_list_size ( 4 )		3892555	0					
ANR	3892574	CallExpression	zend_ast_list_size ( 4 )		3892555	0					
ANR	3892575	Callee	zend_ast_list_size		3892555	0					
ANR	3892576	Identifier	zend_ast_list_size		3892555	0					
ANR	3892577	ArgumentList	4		3892555	1					
ANR	3892578	Argument	4		3892555	0					
ANR	3892579	PrimaryExpression	4		3892555	0					
ANR	3892580	ExpressionStatement	list = ( zend_ast_list * ) ast	147:1:4389:4417	3892555	3	True				
ANR	3892581	AssignmentExpression	list = ( zend_ast_list * ) ast		3892555	0		=			
ANR	3892582	Identifier	list		3892555	0					
ANR	3892583	CastExpression	( zend_ast_list * ) ast		3892555	1					
ANR	3892584	CastTarget	zend_ast_list *		3892555	0					
ANR	3892585	Identifier	ast		3892555	1					
ANR	3892586	ExpressionStatement	list -> kind = kind	148:1:4420:4437	3892555	4	True				
ANR	3892587	AssignmentExpression	list -> kind = kind		3892555	0		=			
ANR	3892588	PtrMemberAccess	list -> kind		3892555	0					
ANR	3892589	Identifier	list		3892555	0					
ANR	3892590	Identifier	kind		3892555	1					
ANR	3892591	Identifier	kind		3892555	1					
ANR	3892592	ExpressionStatement	list -> attr = 0	149:1:4440:4454	3892555	5	True				
ANR	3892593	AssignmentExpression	list -> attr = 0		3892555	0		=			
ANR	3892594	PtrMemberAccess	list -> attr		3892555	0					
ANR	3892595	Identifier	list		3892555	0					
ANR	3892596	Identifier	attr		3892555	1					
ANR	3892597	PrimaryExpression	0		3892555	1					
ANR	3892598	ExpressionStatement	list -> lineno = CG ( zend_lineno )	150:1:4457:4487	3892555	6	True				
ANR	3892599	AssignmentExpression	list -> lineno = CG ( zend_lineno )		3892555	0		=			
ANR	3892600	PtrMemberAccess	list -> lineno		3892555	0					
ANR	3892601	Identifier	list		3892555	0					
ANR	3892602	Identifier	lineno		3892555	1					
ANR	3892603	CallExpression	CG ( zend_lineno )		3892555	1					
ANR	3892604	Callee	CG		3892555	0					
ANR	3892605	Identifier	CG		3892555	0					
ANR	3892606	ArgumentList	zend_lineno		3892555	1					
ANR	3892607	Argument	zend_lineno		3892555	0					
ANR	3892608	Identifier	zend_lineno		3892555	0					
ANR	3892609	ExpressionStatement	list -> children = 0	151:1:4490:4508	3892555	7	True				
ANR	3892610	AssignmentExpression	list -> children = 0		3892555	0		=			
ANR	3892611	PtrMemberAccess	list -> children		3892555	0					
ANR	3892612	Identifier	list		3892555	0					
ANR	3892613	Identifier	children		3892555	1					
ANR	3892614	PrimaryExpression	0		3892555	1					
ANR	3892615	CompoundStatement		14:2:228:238	3892555	8					
ANR	3892616	IdentifierDeclStatement	va_list va ;	154:2:4516:4526	3892555	0	True				
ANR	3892617	IdentifierDecl	va		3892555	0					
ANR	3892618	IdentifierDeclType	va_list		3892555	0					
ANR	3892619	Identifier	va		3892555	1					
ANR	3892620	IdentifierDeclStatement	uint32_t i ;	155:2:4530:4540	3892555	1	True				
ANR	3892621	IdentifierDecl	i		3892555	0					
ANR	3892622	IdentifierDeclType	uint32_t		3892555	0					
ANR	3892623	Identifier	i		3892555	1					
ANR	3892624	ExpressionStatement	"va_start ( va , kind )"	156:2:4544:4562	3892555	2	True				
ANR	3892625	CallExpression	"va_start ( va , kind )"		3892555	0					
ANR	3892626	Callee	va_start		3892555	0					
ANR	3892627	Identifier	va_start		3892555	0					
ANR	3892628	ArgumentList	va		3892555	1					
ANR	3892629	Argument	va		3892555	0					
ANR	3892630	Identifier	va		3892555	0					
ANR	3892631	Argument	kind		3892555	1					
ANR	3892632	Identifier	kind		3892555	0					
ANR	3892633	ForStatement	for ( i = 0 ; i < init_children ; ++ i )		3892555	3					
ANR	3892634	ForInit	i = 0 ;	157:7:4571:4576	3892555	0	True				
ANR	3892635	AssignmentExpression	i = 0		3892555	0		=			
ANR	3892636	Identifier	i		3892555	0					
ANR	3892637	PrimaryExpression	0		3892555	1					
ANR	3892638	Condition	i < init_children	157:14:4578:4594	3892555	1	True				
ANR	3892639	RelationalExpression	i < init_children		3892555	0		<			
ANR	3892640	Identifier	i		3892555	0					
ANR	3892641	Identifier	init_children		3892555	1					
ANR	3892642	UnaryExpression	++ i	157:33:4597:4599	3892555	2	True				
ANR	3892643	IncDec	++		3892555	0					
ANR	3892644	Identifier	i		3892555	1					
ANR	3892645	CompoundStatement		16:38:300:300	3892555	3					
ANR	3892646	Statement	ast	158:3:4607:4609	3892555	0	True				
ANR	3892647	Statement	=	158:7:4611:4611	3892555	1	True				
ANR	3892648	Statement	zend_ast_list_add	158:9:4613:4629	3892555	2	True				
ANR	3892649	Statement	(	158:26:4630:4630	3892555	3	True				
ANR	3892650	Statement	ast	158:27:4631:4633	3892555	4	True				
ANR	3892651	Statement	","	158:30:4634:4634	3892555	5	True				
ANR	3892652	Statement	va_arg	158:32:4636:4641	3892555	6	True				
ANR	3892653	Statement	(	158:38:4642:4642	3892555	7	True				
ANR	3892654	Statement	va	158:39:4643:4644	3892555	8	True				
ANR	3892655	Statement	","	158:41:4645:4645	3892555	9	True				
ANR	3892656	Statement	zend_ast	158:43:4647:4654	3892555	10	True				
ANR	3892657	Statement	*	158:52:4656:4656	3892555	11	True				
ANR	3892658	Statement	)	158:53:4657:4657	3892555	12	True				
ANR	3892659	Statement	)	158:54:4658:4658	3892555	13	True				
ANR	3892660	ExpressionStatement		158:55:4659:4659	3892555	14	True				
ANR	3892661	ExpressionStatement	va_end ( va )	160:2:4667:4677	3892555	4	True				
ANR	3892662	CallExpression	va_end ( va )		3892555	0					
ANR	3892663	Callee	va_end		3892555	0					
ANR	3892664	Identifier	va_end		3892555	0					
ANR	3892665	ArgumentList	va		3892555	1					
ANR	3892666	Argument	va		3892555	0					
ANR	3892667	Identifier	va		3892555	0					
ANR	3892668	ReturnStatement	return ast ;	163:1:4684:4694	3892555	9	True				
ANR	3892669	Identifier	ast		3892555	0					
ANR	3892670	ReturnType	ZEND_API zend_ast *		3892555	1					
ANR	3892671	Identifier	zend_ast_create_list		3892555	2					
ANR	3892672	ParameterList	"uint32_t init_children , zend_ast_kind kind"		3892555	3					
ANR	3892673	Parameter	uint32_t init_children	142:40:4252:4273	3892555	0	True				
ANR	3892674	ParameterType	uint32_t		3892555	0					
ANR	3892675	Identifier	init_children		3892555	1					
ANR	3892676	Parameter	zend_ast_kind kind	142:64:4276:4293	3892555	1	True				
ANR	3892677	ParameterType	zend_ast_kind		3892555	0					
ANR	3892678	Identifier	kind		3892555	1					
ANR	3892679	CFGEntryNode	ENTRY		3892555		True				
ANR	3892680	CFGExitNode	EXIT		3892555		True				
ANR	3892681	Symbol	ast		3892555						
ANR	3892682	Symbol	list -> attr		3892555						
ANR	3892683	Symbol	CG		3892555						
ANR	3892684	Symbol	kind		3892555						
ANR	3892685	Symbol	zend_ast_alloc		3892555						
ANR	3892686	Symbol	i		3892555						
ANR	3892687	Symbol	list -> lineno		3892555						
ANR	3892688	Symbol	va		3892555						
ANR	3892689	Symbol	list		3892555						
ANR	3892690	Symbol	* list		3892555						
ANR	3892691	Symbol	init_children		3892555						
ANR	3892692	Symbol	zend_lineno		3892555						
ANR	3892693	Symbol	zend_ast_list_size		3892555						
ANR	3892694	Symbol	list -> children		3892555						
ANR	3892695	Symbol	list -> kind		3892555						
ANR	3892696	Function	is_power_of_two	166:0:4699:4798							
ANR	3892697	FunctionDef	is_power_of_two (uint32_t n)		3892696	0					
ANR	3892698	CompoundStatement		166:52:4751:4798	3892696	0					
ANR	3892699	ReturnStatement	return ( ( n != 0 ) && ( n == ( n & ( ~n + 1 ) ) ) ) ;	167:1:4754:4796	3892696	0	True				
ANR	3892700	AndExpression	( n != 0 ) && ( n == ( n & ( ~n + 1 ) ) )		3892696	0		&&			
ANR	3892701	EqualityExpression	n != 0		3892696	0		!=			
ANR	3892702	Identifier	n		3892696	0					
ANR	3892703	PrimaryExpression	0		3892696	1					
ANR	3892704	EqualityExpression	n == ( n & ( ~n + 1 ) )		3892696	1		==			
ANR	3892705	Identifier	n		3892696	0					
ANR	3892706	BitAndExpression	n & ( ~n + 1 )		3892696	1		&			
ANR	3892707	Identifier	n		3892696	0					
ANR	3892708	AdditiveExpression	~n + 1		3892696	1		+			
ANR	3892709	Identifier	~n		3892696	0					
ANR	3892710	PrimaryExpression	1		3892696	1					
ANR	3892711	ReturnType	static inline zend_bool		3892696	1					
ANR	3892712	Identifier	is_power_of_two		3892696	2					
ANR	3892713	ParameterList	uint32_t n		3892696	3					
ANR	3892714	Parameter	uint32_t n	166:40:4739:4748	3892696	0	True				
ANR	3892715	ParameterType	uint32_t		3892696	0					
ANR	3892716	Identifier	n		3892696	1					
ANR	3892717	CFGEntryNode	ENTRY		3892696		True				
ANR	3892718	CFGExitNode	EXIT		3892696		True				
ANR	3892719	Symbol	~n		3892696						
ANR	3892720	Symbol	n		3892696						
ANR	3892721	Function	zend_ast_list_add	170:0:4801:5159							
ANR	3892722	FunctionDef	"zend_ast_list_add (zend_ast * ast , zend_ast * op)"		3892721	0					
ANR	3892723	CompoundStatement		170:66:4867:5159	3892721	0					
ANR	3892724	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	171:1:4870:4914	3892721	0	True				
ANR	3892725	IdentifierDecl	* list = zend_ast_get_list ( ast )		3892721	0					
ANR	3892726	IdentifierDeclType	zend_ast_list *		3892721	0					
ANR	3892727	Identifier	list		3892721	1					
ANR	3892728	AssignmentExpression	* list = zend_ast_get_list ( ast )		3892721	2		=			
ANR	3892729	Identifier	list		3892721	0					
ANR	3892730	CallExpression	zend_ast_get_list ( ast )		3892721	1					
ANR	3892731	Callee	zend_ast_get_list		3892721	0					
ANR	3892732	Identifier	zend_ast_get_list		3892721	0					
ANR	3892733	ArgumentList	ast		3892721	1					
ANR	3892734	Argument	ast		3892721	0					
ANR	3892735	Identifier	ast		3892721	0					
ANR	3892736	IfStatement	if ( list -> children >= 4 && is_power_of_two ( list -> children ) )		3892721	1					
ANR	3892737	Condition	list -> children >= 4 && is_power_of_two ( list -> children )	172:5:4921:4974	3892721	0	True				
ANR	3892738	AndExpression	list -> children >= 4 && is_power_of_two ( list -> children )		3892721	0		&&			
ANR	3892739	RelationalExpression	list -> children >= 4		3892721	0		>=			
ANR	3892740	PtrMemberAccess	list -> children		3892721	0					
ANR	3892741	Identifier	list		3892721	0					
ANR	3892742	Identifier	children		3892721	1					
ANR	3892743	PrimaryExpression	4		3892721	1					
ANR	3892744	CallExpression	is_power_of_two ( list -> children )		3892721	1					
ANR	3892745	Callee	is_power_of_two		3892721	0					
ANR	3892746	Identifier	is_power_of_two		3892721	0					
ANR	3892747	ArgumentList	list -> children		3892721	1					
ANR	3892748	Argument	list -> children		3892721	0					
ANR	3892749	PtrMemberAccess	list -> children		3892721	0					
ANR	3892750	Identifier	list		3892721	0					
ANR	3892751	Identifier	children		3892721	1					
ANR	3892752	CompoundStatement		3:61:109:109	3892721	1					
ANR	3892753	ExpressionStatement	"list = zend_ast_realloc ( list , zend_ast_list_size ( list -> children ) , zend_ast_list_size ( list -> children * 2 ) )"	173:3:4982:5090	3892721	0	True				
ANR	3892754	AssignmentExpression	"list = zend_ast_realloc ( list , zend_ast_list_size ( list -> children ) , zend_ast_list_size ( list -> children * 2 ) )"		3892721	0		=			
ANR	3892755	Identifier	list		3892721	0					
ANR	3892756	CallExpression	"zend_ast_realloc ( list , zend_ast_list_size ( list -> children ) , zend_ast_list_size ( list -> children * 2 ) )"		3892721	1					
ANR	3892757	Callee	zend_ast_realloc		3892721	0					
ANR	3892758	Identifier	zend_ast_realloc		3892721	0					
ANR	3892759	ArgumentList	list		3892721	1					
ANR	3892760	Argument	list		3892721	0					
ANR	3892761	Identifier	list		3892721	0					
ANR	3892762	Argument	zend_ast_list_size ( list -> children )		3892721	1					
ANR	3892763	CallExpression	zend_ast_list_size ( list -> children )		3892721	0					
ANR	3892764	Callee	zend_ast_list_size		3892721	0					
ANR	3892765	Identifier	zend_ast_list_size		3892721	0					
ANR	3892766	ArgumentList	list -> children		3892721	1					
ANR	3892767	Argument	list -> children		3892721	0					
ANR	3892768	PtrMemberAccess	list -> children		3892721	0					
ANR	3892769	Identifier	list		3892721	0					
ANR	3892770	Identifier	children		3892721	1					
ANR	3892771	Argument	zend_ast_list_size ( list -> children * 2 )		3892721	2					
ANR	3892772	CallExpression	zend_ast_list_size ( list -> children * 2 )		3892721	0					
ANR	3892773	Callee	zend_ast_list_size		3892721	0					
ANR	3892774	Identifier	zend_ast_list_size		3892721	0					
ANR	3892775	ArgumentList	list -> children * 2		3892721	1					
ANR	3892776	Argument	list -> children * 2		3892721	0					
ANR	3892777	MultiplicativeExpression	list -> children * 2		3892721	0		*			
ANR	3892778	PtrMemberAccess	list -> children		3892721	0					
ANR	3892779	Identifier	list		3892721	0					
ANR	3892780	Identifier	children		3892721	1					
ANR	3892781	PrimaryExpression	2		3892721	1					
ANR	3892782	ExpressionStatement	list -> child [ list -> children ++ ] = op	176:1:5096:5130	3892721	2	True				
ANR	3892783	AssignmentExpression	list -> child [ list -> children ++ ] = op		3892721	0		=			
ANR	3892784	ArrayIndexing	list -> child [ list -> children ++ ]		3892721	0					
ANR	3892785	PtrMemberAccess	list -> child		3892721	0					
ANR	3892786	Identifier	list		3892721	0					
ANR	3892787	Identifier	child		3892721	1					
ANR	3892788	PostIncDecOperationExpression	list -> children ++		3892721	1					
ANR	3892789	PtrMemberAccess	list -> children		3892721	0					
ANR	3892790	Identifier	list		3892721	0					
ANR	3892791	Identifier	children		3892721	1					
ANR	3892792	IncDec	++		3892721	1					
ANR	3892793	Identifier	op		3892721	1					
ANR	3892794	ReturnStatement	return ( zend_ast * ) list ;	177:1:5133:5157	3892721	3	True				
ANR	3892795	CastExpression	( zend_ast * ) list		3892721	0					
ANR	3892796	CastTarget	zend_ast *		3892721	0					
ANR	3892797	Identifier	list		3892721	1					
ANR	3892798	ReturnType	ZEND_API zend_ast *		3892721	1					
ANR	3892799	Identifier	zend_ast_list_add		3892721	2					
ANR	3892800	ParameterList	"zend_ast * ast , zend_ast * op"		3892721	3					
ANR	3892801	Parameter	zend_ast * ast	170:37:4838:4850	3892721	0	True				
ANR	3892802	ParameterType	zend_ast *		3892721	0					
ANR	3892803	Identifier	ast		3892721	1					
ANR	3892804	Parameter	zend_ast * op	170:52:4853:4864	3892721	1	True				
ANR	3892805	ParameterType	zend_ast *		3892721	0					
ANR	3892806	Identifier	op		3892721	1					
ANR	3892807	CFGEntryNode	ENTRY		3892721		True				
ANR	3892808	CFGExitNode	EXIT		3892721		True				
ANR	3892809	Symbol	op		3892721						
ANR	3892810	Symbol	zend_ast_get_list		3892721						
ANR	3892811	Symbol	ast		3892721						
ANR	3892812	Symbol	* * list		3892721						
ANR	3892813	Symbol	list -> child		3892721						
ANR	3892814	Symbol	* list		3892721						
ANR	3892815	Symbol	zend_ast_realloc		3892721						
ANR	3892816	Symbol	* list -> child		3892721						
ANR	3892817	Symbol	list		3892721						
ANR	3892818	Symbol	is_power_of_two		3892721						
ANR	3892819	Symbol	list -> children		3892721						
ANR	3892820	Symbol	zend_ast_list_size		3892721						
ANR	3892821	Function	zend_ast_add_array_element	180:0:5162:6052							
ANR	3892822	FunctionDef	"zend_ast_add_array_element (zval * result , zval * offset , zval * expr)"		3892821	0					
ANR	3892823	CompoundStatement		181:0:5240:6052	3892821	0					
ANR	3892824	SwitchStatement	switch ( Z_TYPE_P ( offset ) )		3892821	0					
ANR	3892825	Condition	Z_TYPE_P ( offset )	182:9:5251:5266	3892821	0	True				
ANR	3892826	CallExpression	Z_TYPE_P ( offset )		3892821	0					
ANR	3892827	Callee	Z_TYPE_P		3892821	0					
ANR	3892828	Identifier	Z_TYPE_P		3892821	0					
ANR	3892829	ArgumentList	offset		3892821	1					
ANR	3892830	Argument	offset		3892821	0					
ANR	3892831	Identifier	offset		3892821	0					
ANR	3892832	CompoundStatement		2:27:28:28	3892821	1					
ANR	3892833	Label	case IS_UNDEF :	183:2:5273:5286	3892821	0	True				
ANR	3892834	Identifier	IS_UNDEF		3892821	0					
ANR	3892835	ExpressionStatement	"zend_hash_next_index_insert ( Z_ARRVAL_P ( result ) , expr )"	184:3:5291:5344	3892821	1	True				
ANR	3892836	CallExpression	"zend_hash_next_index_insert ( Z_ARRVAL_P ( result ) , expr )"		3892821	0					
ANR	3892837	Callee	zend_hash_next_index_insert		3892821	0					
ANR	3892838	Identifier	zend_hash_next_index_insert		3892821	0					
ANR	3892839	ArgumentList	Z_ARRVAL_P ( result )		3892821	1					
ANR	3892840	Argument	Z_ARRVAL_P ( result )		3892821	0					
ANR	3892841	CallExpression	Z_ARRVAL_P ( result )		3892821	0					
ANR	3892842	Callee	Z_ARRVAL_P		3892821	0					
ANR	3892843	Identifier	Z_ARRVAL_P		3892821	0					
ANR	3892844	ArgumentList	result		3892821	1					
ANR	3892845	Argument	result		3892821	0					
ANR	3892846	Identifier	result		3892821	0					
ANR	3892847	Argument	expr		3892821	1					
ANR	3892848	Identifier	expr		3892821	0					
ANR	3892849	BreakStatement	break ;	185:3:5349:5354	3892821	2	True				
ANR	3892850	Label	case IS_STRING :	186:2:5358:5372	3892821	3	True				
ANR	3892851	Identifier	IS_STRING		3892821	0					
ANR	3892852	ExpressionStatement	"zend_symtable_update ( Z_ARRVAL_P ( result ) , Z_STR_P ( offset ) , expr )"	187:3:5377:5440	3892821	4	True				
ANR	3892853	CallExpression	"zend_symtable_update ( Z_ARRVAL_P ( result ) , Z_STR_P ( offset ) , expr )"		3892821	0					
ANR	3892854	Callee	zend_symtable_update		3892821	0					
ANR	3892855	Identifier	zend_symtable_update		3892821	0					
ANR	3892856	ArgumentList	Z_ARRVAL_P ( result )		3892821	1					
ANR	3892857	Argument	Z_ARRVAL_P ( result )		3892821	0					
ANR	3892858	CallExpression	Z_ARRVAL_P ( result )		3892821	0					
ANR	3892859	Callee	Z_ARRVAL_P		3892821	0					
ANR	3892860	Identifier	Z_ARRVAL_P		3892821	0					
ANR	3892861	ArgumentList	result		3892821	1					
ANR	3892862	Argument	result		3892821	0					
ANR	3892863	Identifier	result		3892821	0					
ANR	3892864	Argument	Z_STR_P ( offset )		3892821	1					
ANR	3892865	CallExpression	Z_STR_P ( offset )		3892821	0					
ANR	3892866	Callee	Z_STR_P		3892821	0					
ANR	3892867	Identifier	Z_STR_P		3892821	0					
ANR	3892868	ArgumentList	offset		3892821	1					
ANR	3892869	Argument	offset		3892821	0					
ANR	3892870	Identifier	offset		3892821	0					
ANR	3892871	Argument	expr		3892821	2					
ANR	3892872	Identifier	expr		3892821	0					
ANR	3892873	ExpressionStatement	zval_dtor ( offset )	188:3:5445:5462	3892821	5	True				
ANR	3892874	CallExpression	zval_dtor ( offset )		3892821	0					
ANR	3892875	Callee	zval_dtor		3892821	0					
ANR	3892876	Identifier	zval_dtor		3892821	0					
ANR	3892877	ArgumentList	offset		3892821	1					
ANR	3892878	Argument	offset		3892821	0					
ANR	3892879	Identifier	offset		3892821	0					
ANR	3892880	BreakStatement	break ;	189:3:5467:5472	3892821	6	True				
ANR	3892881	Label	case IS_NULL :	190:2:5476:5488	3892821	7	True				
ANR	3892882	Identifier	IS_NULL		3892821	0					
ANR	3892883	ExpressionStatement	"zend_symtable_update ( Z_ARRVAL_P ( result ) , ZSTR_EMPTY_ALLOC ( ) , expr )"	191:3:5493:5559	3892821	8	True				
ANR	3892884	CallExpression	"zend_symtable_update ( Z_ARRVAL_P ( result ) , ZSTR_EMPTY_ALLOC ( ) , expr )"		3892821	0					
ANR	3892885	Callee	zend_symtable_update		3892821	0					
ANR	3892886	Identifier	zend_symtable_update		3892821	0					
ANR	3892887	ArgumentList	Z_ARRVAL_P ( result )		3892821	1					
ANR	3892888	Argument	Z_ARRVAL_P ( result )		3892821	0					
ANR	3892889	CallExpression	Z_ARRVAL_P ( result )		3892821	0					
ANR	3892890	Callee	Z_ARRVAL_P		3892821	0					
ANR	3892891	Identifier	Z_ARRVAL_P		3892821	0					
ANR	3892892	ArgumentList	result		3892821	1					
ANR	3892893	Argument	result		3892821	0					
ANR	3892894	Identifier	result		3892821	0					
ANR	3892895	Argument	ZSTR_EMPTY_ALLOC ( )		3892821	1					
ANR	3892896	CallExpression	ZSTR_EMPTY_ALLOC ( )		3892821	0					
ANR	3892897	Callee	ZSTR_EMPTY_ALLOC		3892821	0					
ANR	3892898	Identifier	ZSTR_EMPTY_ALLOC		3892821	0					
ANR	3892899	ArgumentList			3892821	1					
ANR	3892900	Argument	expr		3892821	2					
ANR	3892901	Identifier	expr		3892821	0					
ANR	3892902	BreakStatement	break ;	192:3:5564:5569	3892821	9	True				
ANR	3892903	Label	case IS_LONG :	193:2:5573:5585	3892821	10	True				
ANR	3892904	Identifier	IS_LONG		3892821	0					
ANR	3892905	ExpressionStatement	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , Z_LVAL_P ( offset ) , expr )"	194:3:5590:5656	3892821	11	True				
ANR	3892906	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , Z_LVAL_P ( offset ) , expr )"		3892821	0					
ANR	3892907	Callee	zend_hash_index_update		3892821	0					
ANR	3892908	Identifier	zend_hash_index_update		3892821	0					
ANR	3892909	ArgumentList	Z_ARRVAL_P ( result )		3892821	1					
ANR	3892910	Argument	Z_ARRVAL_P ( result )		3892821	0					
ANR	3892911	CallExpression	Z_ARRVAL_P ( result )		3892821	0					
ANR	3892912	Callee	Z_ARRVAL_P		3892821	0					
ANR	3892913	Identifier	Z_ARRVAL_P		3892821	0					
ANR	3892914	ArgumentList	result		3892821	1					
ANR	3892915	Argument	result		3892821	0					
ANR	3892916	Identifier	result		3892821	0					
ANR	3892917	Argument	Z_LVAL_P ( offset )		3892821	1					
ANR	3892918	CallExpression	Z_LVAL_P ( offset )		3892821	0					
ANR	3892919	Callee	Z_LVAL_P		3892821	0					
ANR	3892920	Identifier	Z_LVAL_P		3892821	0					
ANR	3892921	ArgumentList	offset		3892821	1					
ANR	3892922	Argument	offset		3892821	0					
ANR	3892923	Identifier	offset		3892821	0					
ANR	3892924	Argument	expr		3892821	2					
ANR	3892925	Identifier	expr		3892821	0					
ANR	3892926	BreakStatement	break ;	195:3:5661:5666	3892821	12	True				
ANR	3892927	Label	case IS_FALSE :	196:2:5670:5683	3892821	13	True				
ANR	3892928	Identifier	IS_FALSE		3892821	0					
ANR	3892929	ExpressionStatement	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , 0 , expr )"	197:3:5688:5739	3892821	14	True				
ANR	3892930	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , 0 , expr )"		3892821	0					
ANR	3892931	Callee	zend_hash_index_update		3892821	0					
ANR	3892932	Identifier	zend_hash_index_update		3892821	0					
ANR	3892933	ArgumentList	Z_ARRVAL_P ( result )		3892821	1					
ANR	3892934	Argument	Z_ARRVAL_P ( result )		3892821	0					
ANR	3892935	CallExpression	Z_ARRVAL_P ( result )		3892821	0					
ANR	3892936	Callee	Z_ARRVAL_P		3892821	0					
ANR	3892937	Identifier	Z_ARRVAL_P		3892821	0					
ANR	3892938	ArgumentList	result		3892821	1					
ANR	3892939	Argument	result		3892821	0					
ANR	3892940	Identifier	result		3892821	0					
ANR	3892941	Argument	0		3892821	1					
ANR	3892942	PrimaryExpression	0		3892821	0					
ANR	3892943	Argument	expr		3892821	2					
ANR	3892944	Identifier	expr		3892821	0					
ANR	3892945	BreakStatement	break ;	198:3:5744:5749	3892821	15	True				
ANR	3892946	Label	case IS_TRUE :	199:2:5753:5765	3892821	16	True				
ANR	3892947	Identifier	IS_TRUE		3892821	0					
ANR	3892948	ExpressionStatement	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , 1 , expr )"	200:3:5770:5821	3892821	17	True				
ANR	3892949	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , 1 , expr )"		3892821	0					
ANR	3892950	Callee	zend_hash_index_update		3892821	0					
ANR	3892951	Identifier	zend_hash_index_update		3892821	0					
ANR	3892952	ArgumentList	Z_ARRVAL_P ( result )		3892821	1					
ANR	3892953	Argument	Z_ARRVAL_P ( result )		3892821	0					
ANR	3892954	CallExpression	Z_ARRVAL_P ( result )		3892821	0					
ANR	3892955	Callee	Z_ARRVAL_P		3892821	0					
ANR	3892956	Identifier	Z_ARRVAL_P		3892821	0					
ANR	3892957	ArgumentList	result		3892821	1					
ANR	3892958	Argument	result		3892821	0					
ANR	3892959	Identifier	result		3892821	0					
ANR	3892960	Argument	1		3892821	1					
ANR	3892961	PrimaryExpression	1		3892821	0					
ANR	3892962	Argument	expr		3892821	2					
ANR	3892963	Identifier	expr		3892821	0					
ANR	3892964	BreakStatement	break ;	201:3:5826:5831	3892821	18	True				
ANR	3892965	Label	case IS_DOUBLE :	202:2:5835:5849	3892821	19	True				
ANR	3892966	Identifier	IS_DOUBLE		3892821	0					
ANR	3892967	ExpressionStatement	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , zend_dval_to_lval ( Z_DVAL_P ( offset ) ) , expr )"	203:3:5854:5939	3892821	20	True				
ANR	3892968	CallExpression	"zend_hash_index_update ( Z_ARRVAL_P ( result ) , zend_dval_to_lval ( Z_DVAL_P ( offset ) ) , expr )"		3892821	0					
ANR	3892969	Callee	zend_hash_index_update		3892821	0					
ANR	3892970	Identifier	zend_hash_index_update		3892821	0					
ANR	3892971	ArgumentList	Z_ARRVAL_P ( result )		3892821	1					
ANR	3892972	Argument	Z_ARRVAL_P ( result )		3892821	0					
ANR	3892973	CallExpression	Z_ARRVAL_P ( result )		3892821	0					
ANR	3892974	Callee	Z_ARRVAL_P		3892821	0					
ANR	3892975	Identifier	Z_ARRVAL_P		3892821	0					
ANR	3892976	ArgumentList	result		3892821	1					
ANR	3892977	Argument	result		3892821	0					
ANR	3892978	Identifier	result		3892821	0					
ANR	3892979	Argument	zend_dval_to_lval ( Z_DVAL_P ( offset ) )		3892821	1					
ANR	3892980	CallExpression	zend_dval_to_lval ( Z_DVAL_P ( offset ) )		3892821	0					
ANR	3892981	Callee	zend_dval_to_lval		3892821	0					
ANR	3892982	Identifier	zend_dval_to_lval		3892821	0					
ANR	3892983	ArgumentList	Z_DVAL_P ( offset )		3892821	1					
ANR	3892984	Argument	Z_DVAL_P ( offset )		3892821	0					
ANR	3892985	CallExpression	Z_DVAL_P ( offset )		3892821	0					
ANR	3892986	Callee	Z_DVAL_P		3892821	0					
ANR	3892987	Identifier	Z_DVAL_P		3892821	0					
ANR	3892988	ArgumentList	offset		3892821	1					
ANR	3892989	Argument	offset		3892821	0					
ANR	3892990	Identifier	offset		3892821	0					
ANR	3892991	Argument	expr		3892821	2					
ANR	3892992	Identifier	expr		3892821	0					
ANR	3892993	BreakStatement	break ;	204:3:5944:5949	3892821	21	True				
ANR	3892994	Label	default :	205:2:5953:5960	3892821	22	True				
ANR	3892995	Identifier	default		3892821	0					
ANR	3892996	ExpressionStatement	"zend_throw_error ( NULL , ""Illegal offset type"" )"	206:3:5965:6010	3892821	23	True				
ANR	3892997	CallExpression	"zend_throw_error ( NULL , ""Illegal offset type"" )"		3892821	0					
ANR	3892998	Callee	zend_throw_error		3892821	0					
ANR	3892999	Identifier	zend_throw_error		3892821	0					
ANR	3893000	ArgumentList	NULL		3892821	1					
ANR	3893001	Argument	NULL		3892821	0					
ANR	3893002	Identifier	NULL		3892821	0					
ANR	3893003	Argument	"""Illegal offset type"""		3892821	1					
ANR	3893004	PrimaryExpression	"""Illegal offset type"""		3892821	0					
ANR	3893005	ReturnStatement	return FAILURE ;	207:3:6015:6029	3892821	24	True				
ANR	3893006	Identifier	FAILURE		3892821	0					
ANR	3893007	ReturnStatement	return SUCCESS ;	209:1:6036:6050	3892821	1	True				
ANR	3893008	Identifier	SUCCESS		3892821	0					
ANR	3893009	ReturnType	static int		3892821	1					
ANR	3893010	Identifier	zend_ast_add_array_element		3892821	2					
ANR	3893011	ParameterList	"zval * result , zval * offset , zval * expr"		3892821	3					
ANR	3893012	Parameter	zval * result	180:38:5200:5211	3892821	0	True				
ANR	3893013	ParameterType	zval *		3892821	0					
ANR	3893014	Identifier	result		3892821	1					
ANR	3893015	Parameter	zval * offset	180:52:5214:5225	3892821	1	True				
ANR	3893016	ParameterType	zval *		3892821	0					
ANR	3893017	Identifier	offset		3892821	1					
ANR	3893018	Parameter	zval * expr	180:66:5228:5237	3892821	2	True				
ANR	3893019	ParameterType	zval *		3892821	0					
ANR	3893020	Identifier	expr		3892821	1					
ANR	3893021	CFGEntryNode	ENTRY		3892821		True				
ANR	3893022	CFGExitNode	EXIT		3892821		True				
ANR	3893023	Symbol	NULL		3892821						
ANR	3893024	Symbol	SUCCESS		3892821						
ANR	3893025	Symbol	offset		3892821						
ANR	3893026	Symbol	Z_TYPE_P		3892821						
ANR	3893027	Symbol	FAILURE		3892821						
ANR	3893028	Symbol	ZSTR_EMPTY_ALLOC		3892821						
ANR	3893029	Symbol	Z_DVAL_P		3892821						
ANR	3893030	Symbol	Z_LVAL_P		3892821						
ANR	3893031	Symbol	result		3892821						
ANR	3893032	Symbol	zend_dval_to_lval		3892821						
ANR	3893033	Symbol	expr		3892821						
ANR	3893034	Symbol	Z_STR_P		3892821						
ANR	3893035	Symbol	Z_ARRVAL_P		3892821						
ANR	3893036	Function	zend_ast_evaluate	212:0:6055:11283							
ANR	3893037	FunctionDef	"zend_ast_evaluate (zval * result , zend_ast * ast , zend_class_entry * scope)"		3893036	0					
ANR	3893038	CompoundStatement		213:0:6140:11283	3893036	0					
ANR	3893039	IdentifierDeclStatement	"zval op1 , op2 ;"	214:1:6143:6156	3893036	0	True				
ANR	3893040	IdentifierDecl	op1		3893036	0					
ANR	3893041	IdentifierDeclType	zval		3893036	0					
ANR	3893042	Identifier	op1		3893036	1					
ANR	3893043	IdentifierDecl	op2		3893036	1					
ANR	3893044	IdentifierDeclType	zval		3893036	0					
ANR	3893045	Identifier	op2		3893036	1					
ANR	3893046	IdentifierDeclStatement	int ret = SUCCESS ;	215:1:6159:6176	3893036	1	True				
ANR	3893047	IdentifierDecl	ret = SUCCESS		3893036	0					
ANR	3893048	IdentifierDeclType	int		3893036	0					
ANR	3893049	Identifier	ret		3893036	1					
ANR	3893050	AssignmentExpression	ret = SUCCESS		3893036	2		=			
ANR	3893051	Identifier	SUCCESS		3893036	0					
ANR	3893052	Identifier	SUCCESS		3893036	1					
ANR	3893053	SwitchStatement	switch ( ast -> kind )		3893036	2					
ANR	3893054	Condition	ast -> kind	217:9:6188:6196	3893036	0	True				
ANR	3893055	PtrMemberAccess	ast -> kind		3893036	0					
ANR	3893056	Identifier	ast		3893036	0					
ANR	3893057	Identifier	kind		3893036	1					
ANR	3893058	CompoundStatement		5:20:58:58	3893036	1					
ANR	3893059	Label	case ZEND_AST_BINARY_OP :	218:2:6203:6226	3893036	0	True				
ANR	3893060	Identifier	ZEND_AST_BINARY_OP		3893036	0					
ANR	3893061	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS ) )"		3893036	1					
ANR	3893062	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"	219:7:6235:6302	3893036	0	True				
ANR	3893063	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"		3893036	0					
ANR	3893064	Callee	UNEXPECTED		3893036	0					
ANR	3893065	Identifier	UNEXPECTED		3893036	0					
ANR	3893066	ArgumentList	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	1					
ANR	3893067	Argument	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	0					
ANR	3893068	EqualityExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	0		!=			
ANR	3893069	CallExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope )"		3893036	0					
ANR	3893070	Callee	zend_ast_evaluate		3893036	0					
ANR	3893071	Identifier	zend_ast_evaluate		3893036	0					
ANR	3893072	ArgumentList	& op1		3893036	1					
ANR	3893073	Argument	& op1		3893036	0					
ANR	3893074	UnaryOperationExpression	& op1		3893036	0					
ANR	3893075	UnaryOperator	&		3893036	0					
ANR	3893076	Identifier	op1		3893036	1					
ANR	3893077	Argument	ast -> child [ 0 ]		3893036	1					
ANR	3893078	ArrayIndexing	ast -> child [ 0 ]		3893036	0					
ANR	3893079	PtrMemberAccess	ast -> child		3893036	0					
ANR	3893080	Identifier	ast		3893036	0					
ANR	3893081	Identifier	child		3893036	1					
ANR	3893082	PrimaryExpression	0		3893036	1					
ANR	3893083	Argument	scope		3893036	2					
ANR	3893084	Identifier	scope		3893036	0					
ANR	3893085	Identifier	SUCCESS		3893036	1					
ANR	3893086	CompoundStatement		7:77:164:164	3893036	1					
ANR	3893087	ExpressionStatement	ret = FAILURE	220:4:6311:6324	3893036	0	True				
ANR	3893088	AssignmentExpression	ret = FAILURE		3893036	0		=			
ANR	3893089	Identifier	ret		3893036	0					
ANR	3893090	Identifier	FAILURE		3893036	1					
ANR	3893091	ElseStatement	else		3893036	0					
ANR	3893092	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS ) )"		3893036	0					
ANR	3893093	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"	221:14:6340:6407	3893036	0	True				
ANR	3893094	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"		3893036	0					
ANR	3893095	Callee	UNEXPECTED		3893036	0					
ANR	3893096	Identifier	UNEXPECTED		3893036	0					
ANR	3893097	ArgumentList	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		3893036	1					
ANR	3893098	Argument	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		3893036	0					
ANR	3893099	EqualityExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		3893036	0		!=			
ANR	3893100	CallExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope )"		3893036	0					
ANR	3893101	Callee	zend_ast_evaluate		3893036	0					
ANR	3893102	Identifier	zend_ast_evaluate		3893036	0					
ANR	3893103	ArgumentList	& op2		3893036	1					
ANR	3893104	Argument	& op2		3893036	0					
ANR	3893105	UnaryOperationExpression	& op2		3893036	0					
ANR	3893106	UnaryOperator	&		3893036	0					
ANR	3893107	Identifier	op2		3893036	1					
ANR	3893108	Argument	ast -> child [ 1 ]		3893036	1					
ANR	3893109	ArrayIndexing	ast -> child [ 1 ]		3893036	0					
ANR	3893110	PtrMemberAccess	ast -> child		3893036	0					
ANR	3893111	Identifier	ast		3893036	0					
ANR	3893112	Identifier	child		3893036	1					
ANR	3893113	PrimaryExpression	1		3893036	1					
ANR	3893114	Argument	scope		3893036	2					
ANR	3893115	Identifier	scope		3893036	0					
ANR	3893116	Identifier	SUCCESS		3893036	1					
ANR	3893117	CompoundStatement		9:84:269:269	3893036	1					
ANR	3893118	ExpressionStatement	zval_dtor ( & op1 )	222:4:6416:6431	3893036	0	True				
ANR	3893119	CallExpression	zval_dtor ( & op1 )		3893036	0					
ANR	3893120	Callee	zval_dtor		3893036	0					
ANR	3893121	Identifier	zval_dtor		3893036	0					
ANR	3893122	ArgumentList	& op1		3893036	1					
ANR	3893123	Argument	& op1		3893036	0					
ANR	3893124	UnaryOperationExpression	& op1		3893036	0					
ANR	3893125	UnaryOperator	&		3893036	0					
ANR	3893126	Identifier	op1		3893036	1					
ANR	3893127	ExpressionStatement	ret = FAILURE	223:4:6437:6450	3893036	1	True				
ANR	3893128	AssignmentExpression	ret = FAILURE		3893036	0		=			
ANR	3893129	Identifier	ret		3893036	0					
ANR	3893130	Identifier	FAILURE		3893036	1					
ANR	3893131	ElseStatement	else		3893036	0					
ANR	3893132	CompoundStatement		13:4:327:371	3893036	0					
ANR	3893133	IdentifierDeclStatement	binary_op_type op = get_binary_op ( ast -> attr ) ;	225:4:6468:6512	3893036	0	True				
ANR	3893134	IdentifierDecl	op = get_binary_op ( ast -> attr )		3893036	0					
ANR	3893135	IdentifierDeclType	binary_op_type		3893036	0					
ANR	3893136	Identifier	op		3893036	1					
ANR	3893137	AssignmentExpression	op = get_binary_op ( ast -> attr )		3893036	2		=			
ANR	3893138	Identifier	op		3893036	0					
ANR	3893139	CallExpression	get_binary_op ( ast -> attr )		3893036	1					
ANR	3893140	Callee	get_binary_op		3893036	0					
ANR	3893141	Identifier	get_binary_op		3893036	0					
ANR	3893142	ArgumentList	ast -> attr		3893036	1					
ANR	3893143	Argument	ast -> attr		3893036	0					
ANR	3893144	PtrMemberAccess	ast -> attr		3893036	0					
ANR	3893145	Identifier	ast		3893036	0					
ANR	3893146	Identifier	attr		3893036	1					
ANR	3893147	ExpressionStatement	"ret = op ( result , & op1 , & op2 )"	226:4:6518:6546	3893036	1	True				
ANR	3893148	AssignmentExpression	"ret = op ( result , & op1 , & op2 )"		3893036	0		=			
ANR	3893149	Identifier	ret		3893036	0					
ANR	3893150	CallExpression	"op ( result , & op1 , & op2 )"		3893036	1					
ANR	3893151	Callee	op		3893036	0					
ANR	3893152	Identifier	op		3893036	0					
ANR	3893153	ArgumentList	result		3893036	1					
ANR	3893154	Argument	result		3893036	0					
ANR	3893155	Identifier	result		3893036	0					
ANR	3893156	Argument	& op1		3893036	1					
ANR	3893157	UnaryOperationExpression	& op1		3893036	0					
ANR	3893158	UnaryOperator	&		3893036	0					
ANR	3893159	Identifier	op1		3893036	1					
ANR	3893160	Argument	& op2		3893036	2					
ANR	3893161	UnaryOperationExpression	& op2		3893036	0					
ANR	3893162	UnaryOperator	&		3893036	0					
ANR	3893163	Identifier	op2		3893036	1					
ANR	3893164	ExpressionStatement	zval_dtor ( & op1 )	227:4:6552:6567	3893036	2	True				
ANR	3893165	CallExpression	zval_dtor ( & op1 )		3893036	0					
ANR	3893166	Callee	zval_dtor		3893036	0					
ANR	3893167	Identifier	zval_dtor		3893036	0					
ANR	3893168	ArgumentList	& op1		3893036	1					
ANR	3893169	Argument	& op1		3893036	0					
ANR	3893170	UnaryOperationExpression	& op1		3893036	0					
ANR	3893171	UnaryOperator	&		3893036	0					
ANR	3893172	Identifier	op1		3893036	1					
ANR	3893173	ExpressionStatement	zval_dtor ( & op2 )	228:4:6573:6588	3893036	3	True				
ANR	3893174	CallExpression	zval_dtor ( & op2 )		3893036	0					
ANR	3893175	Callee	zval_dtor		3893036	0					
ANR	3893176	Identifier	zval_dtor		3893036	0					
ANR	3893177	ArgumentList	& op2		3893036	1					
ANR	3893178	Argument	& op2		3893036	0					
ANR	3893179	UnaryOperationExpression	& op2		3893036	0					
ANR	3893180	UnaryOperator	&		3893036	0					
ANR	3893181	Identifier	op2		3893036	1					
ANR	3893182	BreakStatement	break ;	230:3:6598:6603	3893036	2	True				
ANR	3893183	Label	case ZEND_AST_GREATER :	231:2:6607:6628	3893036	3	True				
ANR	3893184	Identifier	ZEND_AST_GREATER		3893036	0					
ANR	3893185	Label	case ZEND_AST_GREATER_EQUAL :	232:2:6632:6659	3893036	4	True				
ANR	3893186	Identifier	ZEND_AST_GREATER_EQUAL		3893036	0					
ANR	3893187	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS ) )"		3893036	5					
ANR	3893188	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"	233:7:6668:6735	3893036	0	True				
ANR	3893189	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"		3893036	0					
ANR	3893190	Callee	UNEXPECTED		3893036	0					
ANR	3893191	Identifier	UNEXPECTED		3893036	0					
ANR	3893192	ArgumentList	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	1					
ANR	3893193	Argument	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	0					
ANR	3893194	EqualityExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	0		!=			
ANR	3893195	CallExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope )"		3893036	0					
ANR	3893196	Callee	zend_ast_evaluate		3893036	0					
ANR	3893197	Identifier	zend_ast_evaluate		3893036	0					
ANR	3893198	ArgumentList	& op1		3893036	1					
ANR	3893199	Argument	& op1		3893036	0					
ANR	3893200	UnaryOperationExpression	& op1		3893036	0					
ANR	3893201	UnaryOperator	&		3893036	0					
ANR	3893202	Identifier	op1		3893036	1					
ANR	3893203	Argument	ast -> child [ 0 ]		3893036	1					
ANR	3893204	ArrayIndexing	ast -> child [ 0 ]		3893036	0					
ANR	3893205	PtrMemberAccess	ast -> child		3893036	0					
ANR	3893206	Identifier	ast		3893036	0					
ANR	3893207	Identifier	child		3893036	1					
ANR	3893208	PrimaryExpression	0		3893036	1					
ANR	3893209	Argument	scope		3893036	2					
ANR	3893210	Identifier	scope		3893036	0					
ANR	3893211	Identifier	SUCCESS		3893036	1					
ANR	3893212	CompoundStatement		21:77:597:597	3893036	1					
ANR	3893213	ExpressionStatement	ret = FAILURE	234:4:6744:6757	3893036	0	True				
ANR	3893214	AssignmentExpression	ret = FAILURE		3893036	0		=			
ANR	3893215	Identifier	ret		3893036	0					
ANR	3893216	Identifier	FAILURE		3893036	1					
ANR	3893217	ElseStatement	else		3893036	0					
ANR	3893218	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS ) )"		3893036	0					
ANR	3893219	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"	235:14:6773:6840	3893036	0	True				
ANR	3893220	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"		3893036	0					
ANR	3893221	Callee	UNEXPECTED		3893036	0					
ANR	3893222	Identifier	UNEXPECTED		3893036	0					
ANR	3893223	ArgumentList	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		3893036	1					
ANR	3893224	Argument	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		3893036	0					
ANR	3893225	EqualityExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		3893036	0		!=			
ANR	3893226	CallExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope )"		3893036	0					
ANR	3893227	Callee	zend_ast_evaluate		3893036	0					
ANR	3893228	Identifier	zend_ast_evaluate		3893036	0					
ANR	3893229	ArgumentList	& op2		3893036	1					
ANR	3893230	Argument	& op2		3893036	0					
ANR	3893231	UnaryOperationExpression	& op2		3893036	0					
ANR	3893232	UnaryOperator	&		3893036	0					
ANR	3893233	Identifier	op2		3893036	1					
ANR	3893234	Argument	ast -> child [ 1 ]		3893036	1					
ANR	3893235	ArrayIndexing	ast -> child [ 1 ]		3893036	0					
ANR	3893236	PtrMemberAccess	ast -> child		3893036	0					
ANR	3893237	Identifier	ast		3893036	0					
ANR	3893238	Identifier	child		3893036	1					
ANR	3893239	PrimaryExpression	1		3893036	1					
ANR	3893240	Argument	scope		3893036	2					
ANR	3893241	Identifier	scope		3893036	0					
ANR	3893242	Identifier	SUCCESS		3893036	1					
ANR	3893243	CompoundStatement		23:84:702:702	3893036	1					
ANR	3893244	ExpressionStatement	zval_dtor ( & op1 )	236:4:6849:6864	3893036	0	True				
ANR	3893245	CallExpression	zval_dtor ( & op1 )		3893036	0					
ANR	3893246	Callee	zval_dtor		3893036	0					
ANR	3893247	Identifier	zval_dtor		3893036	0					
ANR	3893248	ArgumentList	& op1		3893036	1					
ANR	3893249	Argument	& op1		3893036	0					
ANR	3893250	UnaryOperationExpression	& op1		3893036	0					
ANR	3893251	UnaryOperator	&		3893036	0					
ANR	3893252	Identifier	op1		3893036	1					
ANR	3893253	ExpressionStatement	ret = FAILURE	237:4:6870:6883	3893036	1	True				
ANR	3893254	AssignmentExpression	ret = FAILURE		3893036	0		=			
ANR	3893255	Identifier	ret		3893036	0					
ANR	3893256	Identifier	FAILURE		3893036	1					
ANR	3893257	ElseStatement	else		3893036	0					
ANR	3893258	CompoundStatement		28:4:805:912	3893036	0					
ANR	3893259	IdentifierDeclStatement	binary_op_type op = ast -> kind == ZEND_AST_GREATER ? is_smaller_function : is_smaller_or_equal_function ;	240:4:6946:7053	3893036	0	True				
ANR	3893260	IdentifierDecl	op = ast -> kind == ZEND_AST_GREATER ? is_smaller_function : is_smaller_or_equal_function		3893036	0					
ANR	3893261	IdentifierDeclType	binary_op_type		3893036	0					
ANR	3893262	Identifier	op		3893036	1					
ANR	3893263	AssignmentExpression	op = ast -> kind == ZEND_AST_GREATER ? is_smaller_function : is_smaller_or_equal_function		3893036	2		=			
ANR	3893264	Identifier	op		3893036	0					
ANR	3893265	ConditionalExpression	ast -> kind == ZEND_AST_GREATER ? is_smaller_function : is_smaller_or_equal_function		3893036	1					
ANR	3893266	Condition	ast -> kind == ZEND_AST_GREATER		3893036	0					
ANR	3893267	EqualityExpression	ast -> kind == ZEND_AST_GREATER		3893036	0		==			
ANR	3893268	PtrMemberAccess	ast -> kind		3893036	0					
ANR	3893269	Identifier	ast		3893036	0					
ANR	3893270	Identifier	kind		3893036	1					
ANR	3893271	Identifier	ZEND_AST_GREATER		3893036	1					
ANR	3893272	Identifier	is_smaller_function		3893036	1					
ANR	3893273	Identifier	is_smaller_or_equal_function		3893036	2					
ANR	3893274	ExpressionStatement	"ret = op ( result , & op2 , & op1 )"	242:4:7059:7087	3893036	1	True				
ANR	3893275	AssignmentExpression	"ret = op ( result , & op2 , & op1 )"		3893036	0		=			
ANR	3893276	Identifier	ret		3893036	0					
ANR	3893277	CallExpression	"op ( result , & op2 , & op1 )"		3893036	1					
ANR	3893278	Callee	op		3893036	0					
ANR	3893279	Identifier	op		3893036	0					
ANR	3893280	ArgumentList	result		3893036	1					
ANR	3893281	Argument	result		3893036	0					
ANR	3893282	Identifier	result		3893036	0					
ANR	3893283	Argument	& op2		3893036	1					
ANR	3893284	UnaryOperationExpression	& op2		3893036	0					
ANR	3893285	UnaryOperator	&		3893036	0					
ANR	3893286	Identifier	op2		3893036	1					
ANR	3893287	Argument	& op1		3893036	2					
ANR	3893288	UnaryOperationExpression	& op1		3893036	0					
ANR	3893289	UnaryOperator	&		3893036	0					
ANR	3893290	Identifier	op1		3893036	1					
ANR	3893291	ExpressionStatement	zval_dtor ( & op1 )	243:4:7093:7108	3893036	2	True				
ANR	3893292	CallExpression	zval_dtor ( & op1 )		3893036	0					
ANR	3893293	Callee	zval_dtor		3893036	0					
ANR	3893294	Identifier	zval_dtor		3893036	0					
ANR	3893295	ArgumentList	& op1		3893036	1					
ANR	3893296	Argument	& op1		3893036	0					
ANR	3893297	UnaryOperationExpression	& op1		3893036	0					
ANR	3893298	UnaryOperator	&		3893036	0					
ANR	3893299	Identifier	op1		3893036	1					
ANR	3893300	ExpressionStatement	zval_dtor ( & op2 )	244:4:7114:7129	3893036	3	True				
ANR	3893301	CallExpression	zval_dtor ( & op2 )		3893036	0					
ANR	3893302	Callee	zval_dtor		3893036	0					
ANR	3893303	Identifier	zval_dtor		3893036	0					
ANR	3893304	ArgumentList	& op2		3893036	1					
ANR	3893305	Argument	& op2		3893036	0					
ANR	3893306	UnaryOperationExpression	& op2		3893036	0					
ANR	3893307	UnaryOperator	&		3893036	0					
ANR	3893308	Identifier	op2		3893036	1					
ANR	3893309	BreakStatement	break ;	246:3:7139:7144	3893036	6	True				
ANR	3893310	Label	case ZEND_AST_UNARY_OP :	247:2:7148:7170	3893036	7	True				
ANR	3893311	Identifier	ZEND_AST_UNARY_OP		3893036	0					
ANR	3893312	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS ) )"		3893036	8					
ANR	3893313	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"	248:7:7179:7246	3893036	0	True				
ANR	3893314	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"		3893036	0					
ANR	3893315	Callee	UNEXPECTED		3893036	0					
ANR	3893316	Identifier	UNEXPECTED		3893036	0					
ANR	3893317	ArgumentList	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	1					
ANR	3893318	Argument	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	0					
ANR	3893319	EqualityExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	0		!=			
ANR	3893320	CallExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope )"		3893036	0					
ANR	3893321	Callee	zend_ast_evaluate		3893036	0					
ANR	3893322	Identifier	zend_ast_evaluate		3893036	0					
ANR	3893323	ArgumentList	& op1		3893036	1					
ANR	3893324	Argument	& op1		3893036	0					
ANR	3893325	UnaryOperationExpression	& op1		3893036	0					
ANR	3893326	UnaryOperator	&		3893036	0					
ANR	3893327	Identifier	op1		3893036	1					
ANR	3893328	Argument	ast -> child [ 0 ]		3893036	1					
ANR	3893329	ArrayIndexing	ast -> child [ 0 ]		3893036	0					
ANR	3893330	PtrMemberAccess	ast -> child		3893036	0					
ANR	3893331	Identifier	ast		3893036	0					
ANR	3893332	Identifier	child		3893036	1					
ANR	3893333	PrimaryExpression	0		3893036	1					
ANR	3893334	Argument	scope		3893036	2					
ANR	3893335	Identifier	scope		3893036	0					
ANR	3893336	Identifier	SUCCESS		3893036	1					
ANR	3893337	CompoundStatement		36:77:1108:1108	3893036	1					
ANR	3893338	ExpressionStatement	ret = FAILURE	249:4:7255:7268	3893036	0	True				
ANR	3893339	AssignmentExpression	ret = FAILURE		3893036	0		=			
ANR	3893340	Identifier	ret		3893036	0					
ANR	3893341	Identifier	FAILURE		3893036	1					
ANR	3893342	ElseStatement	else		3893036	0					
ANR	3893343	CompoundStatement		39:4:1145:1187	3893036	0					
ANR	3893344	IdentifierDeclStatement	unary_op_type op = get_unary_op ( ast -> attr ) ;	251:4:7286:7328	3893036	0	True				
ANR	3893345	IdentifierDecl	op = get_unary_op ( ast -> attr )		3893036	0					
ANR	3893346	IdentifierDeclType	unary_op_type		3893036	0					
ANR	3893347	Identifier	op		3893036	1					
ANR	3893348	AssignmentExpression	op = get_unary_op ( ast -> attr )		3893036	2		=			
ANR	3893349	Identifier	op		3893036	0					
ANR	3893350	CallExpression	get_unary_op ( ast -> attr )		3893036	1					
ANR	3893351	Callee	get_unary_op		3893036	0					
ANR	3893352	Identifier	get_unary_op		3893036	0					
ANR	3893353	ArgumentList	ast -> attr		3893036	1					
ANR	3893354	Argument	ast -> attr		3893036	0					
ANR	3893355	PtrMemberAccess	ast -> attr		3893036	0					
ANR	3893356	Identifier	ast		3893036	0					
ANR	3893357	Identifier	attr		3893036	1					
ANR	3893358	ExpressionStatement	"ret = op ( result , & op1 )"	252:4:7334:7356	3893036	1	True				
ANR	3893359	AssignmentExpression	"ret = op ( result , & op1 )"		3893036	0		=			
ANR	3893360	Identifier	ret		3893036	0					
ANR	3893361	CallExpression	"op ( result , & op1 )"		3893036	1					
ANR	3893362	Callee	op		3893036	0					
ANR	3893363	Identifier	op		3893036	0					
ANR	3893364	ArgumentList	result		3893036	1					
ANR	3893365	Argument	result		3893036	0					
ANR	3893366	Identifier	result		3893036	0					
ANR	3893367	Argument	& op1		3893036	1					
ANR	3893368	UnaryOperationExpression	& op1		3893036	0					
ANR	3893369	UnaryOperator	&		3893036	0					
ANR	3893370	Identifier	op1		3893036	1					
ANR	3893371	ExpressionStatement	zval_dtor ( & op1 )	253:4:7362:7377	3893036	2	True				
ANR	3893372	CallExpression	zval_dtor ( & op1 )		3893036	0					
ANR	3893373	Callee	zval_dtor		3893036	0					
ANR	3893374	Identifier	zval_dtor		3893036	0					
ANR	3893375	ArgumentList	& op1		3893036	1					
ANR	3893376	Argument	& op1		3893036	0					
ANR	3893377	UnaryOperationExpression	& op1		3893036	0					
ANR	3893378	UnaryOperator	&		3893036	0					
ANR	3893379	Identifier	op1		3893036	1					
ANR	3893380	BreakStatement	break ;	255:3:7387:7392	3893036	9	True				
ANR	3893381	Label	case ZEND_AST_ZVAL :	256:2:7396:7414	3893036	10	True				
ANR	3893382	Identifier	ZEND_AST_ZVAL		3893036	0					
ANR	3893383	CompoundStatement		46:3:1282:1315	3893036	11					
ANR	3893384	IdentifierDeclStatement	zval * zv = zend_ast_get_zval ( ast ) ;	258:3:7423:7456	3893036	0	True				
ANR	3893385	IdentifierDecl	* zv = zend_ast_get_zval ( ast )		3893036	0					
ANR	3893386	IdentifierDeclType	zval *		3893036	0					
ANR	3893387	Identifier	zv		3893036	1					
ANR	3893388	AssignmentExpression	* zv = zend_ast_get_zval ( ast )		3893036	2		=			
ANR	3893389	Identifier	zv		3893036	0					
ANR	3893390	CallExpression	zend_ast_get_zval ( ast )		3893036	1					
ANR	3893391	Callee	zend_ast_get_zval		3893036	0					
ANR	3893392	Identifier	zend_ast_get_zval		3893036	0					
ANR	3893393	ArgumentList	ast		3893036	1					
ANR	3893394	Argument	ast		3893036	0					
ANR	3893395	Identifier	ast		3893036	0					
ANR	3893396	IfStatement	if ( scope )		3893036	1					
ANR	3893397	Condition	scope	259:7:7465:7469	3893036	0	True				
ANR	3893398	Identifier	scope		3893036	0					
ANR	3893399	CompoundStatement		47:14:1331:1331	3893036	1					
ANR	3893400	IfStatement	if ( Z_OPT_CONSTANT_P ( zv ) )		3893036	0					
ANR	3893401	Condition	Z_OPT_CONSTANT_P ( zv )	261:8:7532:7551	3893036	0	True				
ANR	3893402	CallExpression	Z_OPT_CONSTANT_P ( zv )		3893036	0					
ANR	3893403	Callee	Z_OPT_CONSTANT_P		3893036	0					
ANR	3893404	Identifier	Z_OPT_CONSTANT_P		3893036	0					
ANR	3893405	ArgumentList	zv		3893036	1					
ANR	3893406	Argument	zv		3893036	0					
ANR	3893407	Identifier	zv		3893036	0					
ANR	3893408	CompoundStatement		49:30:1413:1413	3893036	1					
ANR	3893409	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( zv , 1 , scope ) != SUCCESS ) )"		3893036	0					
ANR	3893410	Condition	"UNEXPECTED ( zval_update_constant_ex ( zv , 1 , scope ) != SUCCESS )"	262:9:7565:7624	3893036	0	True				
ANR	3893411	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( zv , 1 , scope ) != SUCCESS )"		3893036	0					
ANR	3893412	Callee	UNEXPECTED		3893036	0					
ANR	3893413	Identifier	UNEXPECTED		3893036	0					
ANR	3893414	ArgumentList	"zval_update_constant_ex ( zv , 1 , scope ) != SUCCESS"		3893036	1					
ANR	3893415	Argument	"zval_update_constant_ex ( zv , 1 , scope ) != SUCCESS"		3893036	0					
ANR	3893416	EqualityExpression	"zval_update_constant_ex ( zv , 1 , scope ) != SUCCESS"		3893036	0		!=			
ANR	3893417	CallExpression	"zval_update_constant_ex ( zv , 1 , scope )"		3893036	0					
ANR	3893418	Callee	zval_update_constant_ex		3893036	0					
ANR	3893419	Identifier	zval_update_constant_ex		3893036	0					
ANR	3893420	ArgumentList	zv		3893036	1					
ANR	3893421	Argument	zv		3893036	0					
ANR	3893422	Identifier	zv		3893036	0					
ANR	3893423	Argument	1		3893036	1					
ANR	3893424	PrimaryExpression	1		3893036	0					
ANR	3893425	Argument	scope		3893036	2					
ANR	3893426	Identifier	scope		3893036	0					
ANR	3893427	Identifier	SUCCESS		3893036	1					
ANR	3893428	CompoundStatement		50:71:1486:1486	3893036	1					
ANR	3893429	ExpressionStatement	ret = FAILURE	263:6:7635:7648	3893036	0	True				
ANR	3893430	AssignmentExpression	ret = FAILURE		3893036	0		=			
ANR	3893431	Identifier	ret		3893036	0					
ANR	3893432	Identifier	FAILURE		3893036	1					
ANR	3893433	BreakStatement	break ;	264:6:7656:7661	3893036	1	True				
ANR	3893434	ExpressionStatement	"ZVAL_DUP ( result , zv )"	267:4:7680:7700	3893036	1	True				
ANR	3893435	CallExpression	"ZVAL_DUP ( result , zv )"		3893036	0					
ANR	3893436	Callee	ZVAL_DUP		3893036	0					
ANR	3893437	Identifier	ZVAL_DUP		3893036	0					
ANR	3893438	ArgumentList	result		3893036	1					
ANR	3893439	Argument	result		3893036	0					
ANR	3893440	Identifier	result		3893036	0					
ANR	3893441	Argument	zv		3893036	1					
ANR	3893442	Identifier	zv		3893036	0					
ANR	3893443	ElseStatement	else		3893036	0					
ANR	3893444	CompoundStatement		56:10:1571:1571	3893036	0					
ANR	3893445	ExpressionStatement	"ZVAL_DUP ( result , zv )"	269:4:7718:7738	3893036	0	True				
ANR	3893446	CallExpression	"ZVAL_DUP ( result , zv )"		3893036	0					
ANR	3893447	Callee	ZVAL_DUP		3893036	0					
ANR	3893448	Identifier	ZVAL_DUP		3893036	0					
ANR	3893449	ArgumentList	result		3893036	1					
ANR	3893450	Argument	result		3893036	0					
ANR	3893451	Identifier	result		3893036	0					
ANR	3893452	Argument	zv		3893036	1					
ANR	3893453	Identifier	zv		3893036	0					
ANR	3893454	IfStatement	if ( Z_OPT_CONSTANT_P ( result ) )		3893036	1					
ANR	3893455	Condition	Z_OPT_CONSTANT_P ( result )	270:8:7748:7771	3893036	0	True				
ANR	3893456	CallExpression	Z_OPT_CONSTANT_P ( result )		3893036	0					
ANR	3893457	Callee	Z_OPT_CONSTANT_P		3893036	0					
ANR	3893458	Identifier	Z_OPT_CONSTANT_P		3893036	0					
ANR	3893459	ArgumentList	result		3893036	1					
ANR	3893460	Argument	result		3893036	0					
ANR	3893461	Identifier	result		3893036	0					
ANR	3893462	CompoundStatement		58:34:1633:1633	3893036	1					
ANR	3893463	IfStatement	"if ( UNEXPECTED ( zval_update_constant_ex ( result , 1 , scope ) != SUCCESS ) )"		3893036	0					
ANR	3893464	Condition	"UNEXPECTED ( zval_update_constant_ex ( result , 1 , scope ) != SUCCESS )"	271:9:7785:7848	3893036	0	True				
ANR	3893465	CallExpression	"UNEXPECTED ( zval_update_constant_ex ( result , 1 , scope ) != SUCCESS )"		3893036	0					
ANR	3893466	Callee	UNEXPECTED		3893036	0					
ANR	3893467	Identifier	UNEXPECTED		3893036	0					
ANR	3893468	ArgumentList	"zval_update_constant_ex ( result , 1 , scope ) != SUCCESS"		3893036	1					
ANR	3893469	Argument	"zval_update_constant_ex ( result , 1 , scope ) != SUCCESS"		3893036	0					
ANR	3893470	EqualityExpression	"zval_update_constant_ex ( result , 1 , scope ) != SUCCESS"		3893036	0		!=			
ANR	3893471	CallExpression	"zval_update_constant_ex ( result , 1 , scope )"		3893036	0					
ANR	3893472	Callee	zval_update_constant_ex		3893036	0					
ANR	3893473	Identifier	zval_update_constant_ex		3893036	0					
ANR	3893474	ArgumentList	result		3893036	1					
ANR	3893475	Argument	result		3893036	0					
ANR	3893476	Identifier	result		3893036	0					
ANR	3893477	Argument	1		3893036	1					
ANR	3893478	PrimaryExpression	1		3893036	0					
ANR	3893479	Argument	scope		3893036	2					
ANR	3893480	Identifier	scope		3893036	0					
ANR	3893481	Identifier	SUCCESS		3893036	1					
ANR	3893482	CompoundStatement		59:75:1710:1710	3893036	1					
ANR	3893483	ExpressionStatement	ret = FAILURE	272:6:7859:7872	3893036	0	True				
ANR	3893484	AssignmentExpression	ret = FAILURE		3893036	0		=			
ANR	3893485	Identifier	ret		3893036	0					
ANR	3893486	Identifier	FAILURE		3893036	1					
ANR	3893487	BreakStatement	break ;	273:6:7880:7885	3893036	1	True				
ANR	3893488	BreakStatement	break ;	277:3:7908:7913	3893036	2	True				
ANR	3893489	Label	case ZEND_AST_AND :	279:2:7921:7938	3893036	12	True				
ANR	3893490	Identifier	ZEND_AST_AND		3893036	0					
ANR	3893491	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS ) )"		3893036	13					
ANR	3893492	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"	280:7:7947:8014	3893036	0	True				
ANR	3893493	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"		3893036	0					
ANR	3893494	Callee	UNEXPECTED		3893036	0					
ANR	3893495	Identifier	UNEXPECTED		3893036	0					
ANR	3893496	ArgumentList	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	1					
ANR	3893497	Argument	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	0					
ANR	3893498	EqualityExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	0		!=			
ANR	3893499	CallExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope )"		3893036	0					
ANR	3893500	Callee	zend_ast_evaluate		3893036	0					
ANR	3893501	Identifier	zend_ast_evaluate		3893036	0					
ANR	3893502	ArgumentList	& op1		3893036	1					
ANR	3893503	Argument	& op1		3893036	0					
ANR	3893504	UnaryOperationExpression	& op1		3893036	0					
ANR	3893505	UnaryOperator	&		3893036	0					
ANR	3893506	Identifier	op1		3893036	1					
ANR	3893507	Argument	ast -> child [ 0 ]		3893036	1					
ANR	3893508	ArrayIndexing	ast -> child [ 0 ]		3893036	0					
ANR	3893509	PtrMemberAccess	ast -> child		3893036	0					
ANR	3893510	Identifier	ast		3893036	0					
ANR	3893511	Identifier	child		3893036	1					
ANR	3893512	PrimaryExpression	0		3893036	1					
ANR	3893513	Argument	scope		3893036	2					
ANR	3893514	Identifier	scope		3893036	0					
ANR	3893515	Identifier	SUCCESS		3893036	1					
ANR	3893516	CompoundStatement		68:77:1876:1876	3893036	1					
ANR	3893517	ExpressionStatement	ret = FAILURE	281:4:8023:8036	3893036	0	True				
ANR	3893518	AssignmentExpression	ret = FAILURE		3893036	0		=			
ANR	3893519	Identifier	ret		3893036	0					
ANR	3893520	Identifier	FAILURE		3893036	1					
ANR	3893521	BreakStatement	break ;	282:4:8042:8047	3893036	1	True				
ANR	3893522	IfStatement	if ( zend_is_true ( & op1 ) )		3893036	14					
ANR	3893523	Condition	zend_is_true ( & op1 )	284:7:8061:8078	3893036	0	True				
ANR	3893524	CallExpression	zend_is_true ( & op1 )		3893036	0					
ANR	3893525	Callee	zend_is_true		3893036	0					
ANR	3893526	Identifier	zend_is_true		3893036	0					
ANR	3893527	ArgumentList	& op1		3893036	1					
ANR	3893528	Argument	& op1		3893036	0					
ANR	3893529	UnaryOperationExpression	& op1		3893036	0					
ANR	3893530	UnaryOperator	&		3893036	0					
ANR	3893531	Identifier	op1		3893036	1					
ANR	3893532	CompoundStatement		72:27:1940:1940	3893036	1					
ANR	3893533	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS ) )"		3893036	0					
ANR	3893534	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"	285:8:8091:8158	3893036	0	True				
ANR	3893535	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"		3893036	0					
ANR	3893536	Callee	UNEXPECTED		3893036	0					
ANR	3893537	Identifier	UNEXPECTED		3893036	0					
ANR	3893538	ArgumentList	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		3893036	1					
ANR	3893539	Argument	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		3893036	0					
ANR	3893540	EqualityExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		3893036	0		!=			
ANR	3893541	CallExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope )"		3893036	0					
ANR	3893542	Callee	zend_ast_evaluate		3893036	0					
ANR	3893543	Identifier	zend_ast_evaluate		3893036	0					
ANR	3893544	ArgumentList	& op2		3893036	1					
ANR	3893545	Argument	& op2		3893036	0					
ANR	3893546	UnaryOperationExpression	& op2		3893036	0					
ANR	3893547	UnaryOperator	&		3893036	0					
ANR	3893548	Identifier	op2		3893036	1					
ANR	3893549	Argument	ast -> child [ 1 ]		3893036	1					
ANR	3893550	ArrayIndexing	ast -> child [ 1 ]		3893036	0					
ANR	3893551	PtrMemberAccess	ast -> child		3893036	0					
ANR	3893552	Identifier	ast		3893036	0					
ANR	3893553	Identifier	child		3893036	1					
ANR	3893554	PrimaryExpression	1		3893036	1					
ANR	3893555	Argument	scope		3893036	2					
ANR	3893556	Identifier	scope		3893036	0					
ANR	3893557	Identifier	SUCCESS		3893036	1					
ANR	3893558	CompoundStatement		73:78:2020:2020	3893036	1					
ANR	3893559	ExpressionStatement	zval_dtor ( & op1 )	286:5:8168:8183	3893036	0	True				
ANR	3893560	CallExpression	zval_dtor ( & op1 )		3893036	0					
ANR	3893561	Callee	zval_dtor		3893036	0					
ANR	3893562	Identifier	zval_dtor		3893036	0					
ANR	3893563	ArgumentList	& op1		3893036	1					
ANR	3893564	Argument	& op1		3893036	0					
ANR	3893565	UnaryOperationExpression	& op1		3893036	0					
ANR	3893566	UnaryOperator	&		3893036	0					
ANR	3893567	Identifier	op1		3893036	1					
ANR	3893568	ExpressionStatement	ret = FAILURE	287:5:8190:8203	3893036	1	True				
ANR	3893569	AssignmentExpression	ret = FAILURE		3893036	0		=			
ANR	3893570	Identifier	ret		3893036	0					
ANR	3893571	Identifier	FAILURE		3893036	1					
ANR	3893572	BreakStatement	break ;	288:5:8210:8215	3893036	2	True				
ANR	3893573	ExpressionStatement	"ZVAL_BOOL ( result , zend_is_true ( & op2 ) )"	290:4:8227:8264	3893036	1	True				
ANR	3893574	CallExpression	"ZVAL_BOOL ( result , zend_is_true ( & op2 ) )"		3893036	0					
ANR	3893575	Callee	ZVAL_BOOL		3893036	0					
ANR	3893576	Identifier	ZVAL_BOOL		3893036	0					
ANR	3893577	ArgumentList	result		3893036	1					
ANR	3893578	Argument	result		3893036	0					
ANR	3893579	Identifier	result		3893036	0					
ANR	3893580	Argument	zend_is_true ( & op2 )		3893036	1					
ANR	3893581	CallExpression	zend_is_true ( & op2 )		3893036	0					
ANR	3893582	Callee	zend_is_true		3893036	0					
ANR	3893583	Identifier	zend_is_true		3893036	0					
ANR	3893584	ArgumentList	& op2		3893036	1					
ANR	3893585	Argument	& op2		3893036	0					
ANR	3893586	UnaryOperationExpression	& op2		3893036	0					
ANR	3893587	UnaryOperator	&		3893036	0					
ANR	3893588	Identifier	op2		3893036	1					
ANR	3893589	ExpressionStatement	zval_dtor ( & op2 )	291:4:8270:8285	3893036	2	True				
ANR	3893590	CallExpression	zval_dtor ( & op2 )		3893036	0					
ANR	3893591	Callee	zval_dtor		3893036	0					
ANR	3893592	Identifier	zval_dtor		3893036	0					
ANR	3893593	ArgumentList	& op2		3893036	1					
ANR	3893594	Argument	& op2		3893036	0					
ANR	3893595	UnaryOperationExpression	& op2		3893036	0					
ANR	3893596	UnaryOperator	&		3893036	0					
ANR	3893597	Identifier	op2		3893036	1					
ANR	3893598	ElseStatement	else		3893036	0					
ANR	3893599	CompoundStatement		80:10:2156:2156	3893036	0					
ANR	3893600	ExpressionStatement	ZVAL_FALSE ( result )	293:4:8303:8321	3893036	0	True				
ANR	3893601	CallExpression	ZVAL_FALSE ( result )		3893036	0					
ANR	3893602	Callee	ZVAL_FALSE		3893036	0					
ANR	3893603	Identifier	ZVAL_FALSE		3893036	0					
ANR	3893604	ArgumentList	result		3893036	1					
ANR	3893605	Argument	result		3893036	0					
ANR	3893606	Identifier	result		3893036	0					
ANR	3893607	ExpressionStatement	zval_dtor ( & op1 )	295:3:8331:8346	3893036	15	True				
ANR	3893608	CallExpression	zval_dtor ( & op1 )		3893036	0					
ANR	3893609	Callee	zval_dtor		3893036	0					
ANR	3893610	Identifier	zval_dtor		3893036	0					
ANR	3893611	ArgumentList	& op1		3893036	1					
ANR	3893612	Argument	& op1		3893036	0					
ANR	3893613	UnaryOperationExpression	& op1		3893036	0					
ANR	3893614	UnaryOperator	&		3893036	0					
ANR	3893615	Identifier	op1		3893036	1					
ANR	3893616	BreakStatement	break ;	296:3:8351:8356	3893036	16	True				
ANR	3893617	Label	case ZEND_AST_OR :	297:2:8360:8376	3893036	17	True				
ANR	3893618	Identifier	ZEND_AST_OR		3893036	0					
ANR	3893619	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS ) )"		3893036	18					
ANR	3893620	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"	298:7:8385:8452	3893036	0	True				
ANR	3893621	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"		3893036	0					
ANR	3893622	Callee	UNEXPECTED		3893036	0					
ANR	3893623	Identifier	UNEXPECTED		3893036	0					
ANR	3893624	ArgumentList	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	1					
ANR	3893625	Argument	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	0					
ANR	3893626	EqualityExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	0		!=			
ANR	3893627	CallExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope )"		3893036	0					
ANR	3893628	Callee	zend_ast_evaluate		3893036	0					
ANR	3893629	Identifier	zend_ast_evaluate		3893036	0					
ANR	3893630	ArgumentList	& op1		3893036	1					
ANR	3893631	Argument	& op1		3893036	0					
ANR	3893632	UnaryOperationExpression	& op1		3893036	0					
ANR	3893633	UnaryOperator	&		3893036	0					
ANR	3893634	Identifier	op1		3893036	1					
ANR	3893635	Argument	ast -> child [ 0 ]		3893036	1					
ANR	3893636	ArrayIndexing	ast -> child [ 0 ]		3893036	0					
ANR	3893637	PtrMemberAccess	ast -> child		3893036	0					
ANR	3893638	Identifier	ast		3893036	0					
ANR	3893639	Identifier	child		3893036	1					
ANR	3893640	PrimaryExpression	0		3893036	1					
ANR	3893641	Argument	scope		3893036	2					
ANR	3893642	Identifier	scope		3893036	0					
ANR	3893643	Identifier	SUCCESS		3893036	1					
ANR	3893644	CompoundStatement		86:77:2314:2314	3893036	1					
ANR	3893645	ExpressionStatement	ret = FAILURE	299:4:8461:8474	3893036	0	True				
ANR	3893646	AssignmentExpression	ret = FAILURE		3893036	0		=			
ANR	3893647	Identifier	ret		3893036	0					
ANR	3893648	Identifier	FAILURE		3893036	1					
ANR	3893649	BreakStatement	break ;	300:4:8480:8485	3893036	1	True				
ANR	3893650	IfStatement	if ( zend_is_true ( & op1 ) )		3893036	19					
ANR	3893651	Condition	zend_is_true ( & op1 )	302:7:8499:8516	3893036	0	True				
ANR	3893652	CallExpression	zend_is_true ( & op1 )		3893036	0					
ANR	3893653	Callee	zend_is_true		3893036	0					
ANR	3893654	Identifier	zend_is_true		3893036	0					
ANR	3893655	ArgumentList	& op1		3893036	1					
ANR	3893656	Argument	& op1		3893036	0					
ANR	3893657	UnaryOperationExpression	& op1		3893036	0					
ANR	3893658	UnaryOperator	&		3893036	0					
ANR	3893659	Identifier	op1		3893036	1					
ANR	3893660	CompoundStatement		90:27:2378:2378	3893036	1					
ANR	3893661	ExpressionStatement	ZVAL_TRUE ( result )	303:4:8525:8542	3893036	0	True				
ANR	3893662	CallExpression	ZVAL_TRUE ( result )		3893036	0					
ANR	3893663	Callee	ZVAL_TRUE		3893036	0					
ANR	3893664	Identifier	ZVAL_TRUE		3893036	0					
ANR	3893665	ArgumentList	result		3893036	1					
ANR	3893666	Argument	result		3893036	0					
ANR	3893667	Identifier	result		3893036	0					
ANR	3893668	ElseStatement	else		3893036	0					
ANR	3893669	CompoundStatement		92:10:2413:2413	3893036	0					
ANR	3893670	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS ) )"		3893036	0					
ANR	3893671	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"	305:8:8564:8631	3893036	0	True				
ANR	3893672	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"		3893036	0					
ANR	3893673	Callee	UNEXPECTED		3893036	0					
ANR	3893674	Identifier	UNEXPECTED		3893036	0					
ANR	3893675	ArgumentList	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		3893036	1					
ANR	3893676	Argument	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		3893036	0					
ANR	3893677	EqualityExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		3893036	0		!=			
ANR	3893678	CallExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope )"		3893036	0					
ANR	3893679	Callee	zend_ast_evaluate		3893036	0					
ANR	3893680	Identifier	zend_ast_evaluate		3893036	0					
ANR	3893681	ArgumentList	& op2		3893036	1					
ANR	3893682	Argument	& op2		3893036	0					
ANR	3893683	UnaryOperationExpression	& op2		3893036	0					
ANR	3893684	UnaryOperator	&		3893036	0					
ANR	3893685	Identifier	op2		3893036	1					
ANR	3893686	Argument	ast -> child [ 1 ]		3893036	1					
ANR	3893687	ArrayIndexing	ast -> child [ 1 ]		3893036	0					
ANR	3893688	PtrMemberAccess	ast -> child		3893036	0					
ANR	3893689	Identifier	ast		3893036	0					
ANR	3893690	Identifier	child		3893036	1					
ANR	3893691	PrimaryExpression	1		3893036	1					
ANR	3893692	Argument	scope		3893036	2					
ANR	3893693	Identifier	scope		3893036	0					
ANR	3893694	Identifier	SUCCESS		3893036	1					
ANR	3893695	CompoundStatement		93:78:2493:2493	3893036	1					
ANR	3893696	ExpressionStatement	zval_dtor ( & op1 )	306:5:8641:8656	3893036	0	True				
ANR	3893697	CallExpression	zval_dtor ( & op1 )		3893036	0					
ANR	3893698	Callee	zval_dtor		3893036	0					
ANR	3893699	Identifier	zval_dtor		3893036	0					
ANR	3893700	ArgumentList	& op1		3893036	1					
ANR	3893701	Argument	& op1		3893036	0					
ANR	3893702	UnaryOperationExpression	& op1		3893036	0					
ANR	3893703	UnaryOperator	&		3893036	0					
ANR	3893704	Identifier	op1		3893036	1					
ANR	3893705	ExpressionStatement	ret = FAILURE	307:5:8663:8676	3893036	1	True				
ANR	3893706	AssignmentExpression	ret = FAILURE		3893036	0		=			
ANR	3893707	Identifier	ret		3893036	0					
ANR	3893708	Identifier	FAILURE		3893036	1					
ANR	3893709	BreakStatement	break ;	308:5:8683:8688	3893036	2	True				
ANR	3893710	ExpressionStatement	"ZVAL_BOOL ( result , zend_is_true ( & op2 ) )"	310:4:8700:8737	3893036	1	True				
ANR	3893711	CallExpression	"ZVAL_BOOL ( result , zend_is_true ( & op2 ) )"		3893036	0					
ANR	3893712	Callee	ZVAL_BOOL		3893036	0					
ANR	3893713	Identifier	ZVAL_BOOL		3893036	0					
ANR	3893714	ArgumentList	result		3893036	1					
ANR	3893715	Argument	result		3893036	0					
ANR	3893716	Identifier	result		3893036	0					
ANR	3893717	Argument	zend_is_true ( & op2 )		3893036	1					
ANR	3893718	CallExpression	zend_is_true ( & op2 )		3893036	0					
ANR	3893719	Callee	zend_is_true		3893036	0					
ANR	3893720	Identifier	zend_is_true		3893036	0					
ANR	3893721	ArgumentList	& op2		3893036	1					
ANR	3893722	Argument	& op2		3893036	0					
ANR	3893723	UnaryOperationExpression	& op2		3893036	0					
ANR	3893724	UnaryOperator	&		3893036	0					
ANR	3893725	Identifier	op2		3893036	1					
ANR	3893726	ExpressionStatement	zval_dtor ( & op2 )	311:4:8743:8758	3893036	2	True				
ANR	3893727	CallExpression	zval_dtor ( & op2 )		3893036	0					
ANR	3893728	Callee	zval_dtor		3893036	0					
ANR	3893729	Identifier	zval_dtor		3893036	0					
ANR	3893730	ArgumentList	& op2		3893036	1					
ANR	3893731	Argument	& op2		3893036	0					
ANR	3893732	UnaryOperationExpression	& op2		3893036	0					
ANR	3893733	UnaryOperator	&		3893036	0					
ANR	3893734	Identifier	op2		3893036	1					
ANR	3893735	ExpressionStatement	zval_dtor ( & op1 )	313:3:8768:8783	3893036	20	True				
ANR	3893736	CallExpression	zval_dtor ( & op1 )		3893036	0					
ANR	3893737	Callee	zval_dtor		3893036	0					
ANR	3893738	Identifier	zval_dtor		3893036	0					
ANR	3893739	ArgumentList	& op1		3893036	1					
ANR	3893740	Argument	& op1		3893036	0					
ANR	3893741	UnaryOperationExpression	& op1		3893036	0					
ANR	3893742	UnaryOperator	&		3893036	0					
ANR	3893743	Identifier	op1		3893036	1					
ANR	3893744	BreakStatement	break ;	314:3:8788:8793	3893036	21	True				
ANR	3893745	Label	case ZEND_AST_CONDITIONAL :	315:2:8797:8822	3893036	22	True				
ANR	3893746	Identifier	ZEND_AST_CONDITIONAL		3893036	0					
ANR	3893747	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS ) )"		3893036	23					
ANR	3893748	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"	316:7:8831:8898	3893036	0	True				
ANR	3893749	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"		3893036	0					
ANR	3893750	Callee	UNEXPECTED		3893036	0					
ANR	3893751	Identifier	UNEXPECTED		3893036	0					
ANR	3893752	ArgumentList	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	1					
ANR	3893753	Argument	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	0					
ANR	3893754	EqualityExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	0		!=			
ANR	3893755	CallExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope )"		3893036	0					
ANR	3893756	Callee	zend_ast_evaluate		3893036	0					
ANR	3893757	Identifier	zend_ast_evaluate		3893036	0					
ANR	3893758	ArgumentList	& op1		3893036	1					
ANR	3893759	Argument	& op1		3893036	0					
ANR	3893760	UnaryOperationExpression	& op1		3893036	0					
ANR	3893761	UnaryOperator	&		3893036	0					
ANR	3893762	Identifier	op1		3893036	1					
ANR	3893763	Argument	ast -> child [ 0 ]		3893036	1					
ANR	3893764	ArrayIndexing	ast -> child [ 0 ]		3893036	0					
ANR	3893765	PtrMemberAccess	ast -> child		3893036	0					
ANR	3893766	Identifier	ast		3893036	0					
ANR	3893767	Identifier	child		3893036	1					
ANR	3893768	PrimaryExpression	0		3893036	1					
ANR	3893769	Argument	scope		3893036	2					
ANR	3893770	Identifier	scope		3893036	0					
ANR	3893771	Identifier	SUCCESS		3893036	1					
ANR	3893772	CompoundStatement		104:77:2760:2760	3893036	1					
ANR	3893773	ExpressionStatement	ret = FAILURE	317:4:8907:8920	3893036	0	True				
ANR	3893774	AssignmentExpression	ret = FAILURE		3893036	0		=			
ANR	3893775	Identifier	ret		3893036	0					
ANR	3893776	Identifier	FAILURE		3893036	1					
ANR	3893777	BreakStatement	break ;	318:4:8926:8931	3893036	1	True				
ANR	3893778	IfStatement	if ( zend_is_true ( & op1 ) )		3893036	24					
ANR	3893779	Condition	zend_is_true ( & op1 )	320:7:8945:8962	3893036	0	True				
ANR	3893780	CallExpression	zend_is_true ( & op1 )		3893036	0					
ANR	3893781	Callee	zend_is_true		3893036	0					
ANR	3893782	Identifier	zend_is_true		3893036	0					
ANR	3893783	ArgumentList	& op1		3893036	1					
ANR	3893784	Argument	& op1		3893036	0					
ANR	3893785	UnaryOperationExpression	& op1		3893036	0					
ANR	3893786	UnaryOperator	&		3893036	0					
ANR	3893787	Identifier	op1		3893036	1					
ANR	3893788	CompoundStatement		108:27:2824:2824	3893036	1					
ANR	3893789	IfStatement	if ( ! ast -> child [ 1 ] )		3893036	0					
ANR	3893790	Condition	! ast -> child [ 1 ]	321:8:8975:8988	3893036	0	True				
ANR	3893791	UnaryOperationExpression	! ast -> child [ 1 ]		3893036	0					
ANR	3893792	UnaryOperator	!		3893036	0					
ANR	3893793	ArrayIndexing	ast -> child [ 1 ]		3893036	1					
ANR	3893794	PtrMemberAccess	ast -> child		3893036	0					
ANR	3893795	Identifier	ast		3893036	0					
ANR	3893796	Identifier	child		3893036	1					
ANR	3893797	PrimaryExpression	1		3893036	1					
ANR	3893798	CompoundStatement		109:24:2850:2850	3893036	1					
ANR	3893799	ExpressionStatement	* result = op1	322:5:8998:9011	3893036	0	True				
ANR	3893800	AssignmentExpression	* result = op1		3893036	0		=			
ANR	3893801	UnaryOperationExpression	* result		3893036	0					
ANR	3893802	UnaryOperator	*		3893036	0					
ANR	3893803	Identifier	result		3893036	1					
ANR	3893804	Identifier	op1		3893036	1					
ANR	3893805	ElseStatement	else		3893036	0					
ANR	3893806	CompoundStatement		111:11:2883:2883	3893036	0					
ANR	3893807	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( result , ast -> child [ 1 ] , scope ) != SUCCESS ) )"		3893036	0					
ANR	3893808	Condition	"UNEXPECTED ( zend_ast_evaluate ( result , ast -> child [ 1 ] , scope ) != SUCCESS )"	324:9:9035:9104	3893036	0	True				
ANR	3893809	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( result , ast -> child [ 1 ] , scope ) != SUCCESS )"		3893036	0					
ANR	3893810	Callee	UNEXPECTED		3893036	0					
ANR	3893811	Identifier	UNEXPECTED		3893036	0					
ANR	3893812	ArgumentList	"zend_ast_evaluate ( result , ast -> child [ 1 ] , scope ) != SUCCESS"		3893036	1					
ANR	3893813	Argument	"zend_ast_evaluate ( result , ast -> child [ 1 ] , scope ) != SUCCESS"		3893036	0					
ANR	3893814	EqualityExpression	"zend_ast_evaluate ( result , ast -> child [ 1 ] , scope ) != SUCCESS"		3893036	0		!=			
ANR	3893815	CallExpression	"zend_ast_evaluate ( result , ast -> child [ 1 ] , scope )"		3893036	0					
ANR	3893816	Callee	zend_ast_evaluate		3893036	0					
ANR	3893817	Identifier	zend_ast_evaluate		3893036	0					
ANR	3893818	ArgumentList	result		3893036	1					
ANR	3893819	Argument	result		3893036	0					
ANR	3893820	Identifier	result		3893036	0					
ANR	3893821	Argument	ast -> child [ 1 ]		3893036	1					
ANR	3893822	ArrayIndexing	ast -> child [ 1 ]		3893036	0					
ANR	3893823	PtrMemberAccess	ast -> child		3893036	0					
ANR	3893824	Identifier	ast		3893036	0					
ANR	3893825	Identifier	child		3893036	1					
ANR	3893826	PrimaryExpression	1		3893036	1					
ANR	3893827	Argument	scope		3893036	2					
ANR	3893828	Identifier	scope		3893036	0					
ANR	3893829	Identifier	SUCCESS		3893036	1					
ANR	3893830	CompoundStatement		112:81:2966:2966	3893036	1					
ANR	3893831	ExpressionStatement	zval_dtor ( & op1 )	325:6:9115:9130	3893036	0	True				
ANR	3893832	CallExpression	zval_dtor ( & op1 )		3893036	0					
ANR	3893833	Callee	zval_dtor		3893036	0					
ANR	3893834	Identifier	zval_dtor		3893036	0					
ANR	3893835	ArgumentList	& op1		3893036	1					
ANR	3893836	Argument	& op1		3893036	0					
ANR	3893837	UnaryOperationExpression	& op1		3893036	0					
ANR	3893838	UnaryOperator	&		3893036	0					
ANR	3893839	Identifier	op1		3893036	1					
ANR	3893840	ExpressionStatement	ret = FAILURE	326:6:9138:9151	3893036	1	True				
ANR	3893841	AssignmentExpression	ret = FAILURE		3893036	0		=			
ANR	3893842	Identifier	ret		3893036	0					
ANR	3893843	Identifier	FAILURE		3893036	1					
ANR	3893844	BreakStatement	break ;	327:6:9159:9164	3893036	2	True				
ANR	3893845	ExpressionStatement	zval_dtor ( & op1 )	329:5:9178:9193	3893036	1	True				
ANR	3893846	CallExpression	zval_dtor ( & op1 )		3893036	0					
ANR	3893847	Callee	zval_dtor		3893036	0					
ANR	3893848	Identifier	zval_dtor		3893036	0					
ANR	3893849	ArgumentList	& op1		3893036	1					
ANR	3893850	Argument	& op1		3893036	0					
ANR	3893851	UnaryOperationExpression	& op1		3893036	0					
ANR	3893852	UnaryOperator	&		3893036	0					
ANR	3893853	Identifier	op1		3893036	1					
ANR	3893854	ElseStatement	else		3893036	0					
ANR	3893855	CompoundStatement		119:10:3070:3070	3893036	0					
ANR	3893856	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( result , ast -> child [ 2 ] , scope ) != SUCCESS ) )"		3893036	0					
ANR	3893857	Condition	"UNEXPECTED ( zend_ast_evaluate ( result , ast -> child [ 2 ] , scope ) != SUCCESS )"	332:8:9221:9290	3893036	0	True				
ANR	3893858	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( result , ast -> child [ 2 ] , scope ) != SUCCESS )"		3893036	0					
ANR	3893859	Callee	UNEXPECTED		3893036	0					
ANR	3893860	Identifier	UNEXPECTED		3893036	0					
ANR	3893861	ArgumentList	"zend_ast_evaluate ( result , ast -> child [ 2 ] , scope ) != SUCCESS"		3893036	1					
ANR	3893862	Argument	"zend_ast_evaluate ( result , ast -> child [ 2 ] , scope ) != SUCCESS"		3893036	0					
ANR	3893863	EqualityExpression	"zend_ast_evaluate ( result , ast -> child [ 2 ] , scope ) != SUCCESS"		3893036	0		!=			
ANR	3893864	CallExpression	"zend_ast_evaluate ( result , ast -> child [ 2 ] , scope )"		3893036	0					
ANR	3893865	Callee	zend_ast_evaluate		3893036	0					
ANR	3893866	Identifier	zend_ast_evaluate		3893036	0					
ANR	3893867	ArgumentList	result		3893036	1					
ANR	3893868	Argument	result		3893036	0					
ANR	3893869	Identifier	result		3893036	0					
ANR	3893870	Argument	ast -> child [ 2 ]		3893036	1					
ANR	3893871	ArrayIndexing	ast -> child [ 2 ]		3893036	0					
ANR	3893872	PtrMemberAccess	ast -> child		3893036	0					
ANR	3893873	Identifier	ast		3893036	0					
ANR	3893874	Identifier	child		3893036	1					
ANR	3893875	PrimaryExpression	2		3893036	1					
ANR	3893876	Argument	scope		3893036	2					
ANR	3893877	Identifier	scope		3893036	0					
ANR	3893878	Identifier	SUCCESS		3893036	1					
ANR	3893879	CompoundStatement		120:80:3152:3152	3893036	1					
ANR	3893880	ExpressionStatement	zval_dtor ( & op1 )	333:5:9300:9315	3893036	0	True				
ANR	3893881	CallExpression	zval_dtor ( & op1 )		3893036	0					
ANR	3893882	Callee	zval_dtor		3893036	0					
ANR	3893883	Identifier	zval_dtor		3893036	0					
ANR	3893884	ArgumentList	& op1		3893036	1					
ANR	3893885	Argument	& op1		3893036	0					
ANR	3893886	UnaryOperationExpression	& op1		3893036	0					
ANR	3893887	UnaryOperator	&		3893036	0					
ANR	3893888	Identifier	op1		3893036	1					
ANR	3893889	ExpressionStatement	ret = FAILURE	334:5:9322:9335	3893036	1	True				
ANR	3893890	AssignmentExpression	ret = FAILURE		3893036	0		=			
ANR	3893891	Identifier	ret		3893036	0					
ANR	3893892	Identifier	FAILURE		3893036	1					
ANR	3893893	BreakStatement	break ;	335:5:9342:9347	3893036	2	True				
ANR	3893894	ExpressionStatement	zval_dtor ( & op1 )	337:4:9359:9374	3893036	1	True				
ANR	3893895	CallExpression	zval_dtor ( & op1 )		3893036	0					
ANR	3893896	Callee	zval_dtor		3893036	0					
ANR	3893897	Identifier	zval_dtor		3893036	0					
ANR	3893898	ArgumentList	& op1		3893036	1					
ANR	3893899	Argument	& op1		3893036	0					
ANR	3893900	UnaryOperationExpression	& op1		3893036	0					
ANR	3893901	UnaryOperator	&		3893036	0					
ANR	3893902	Identifier	op1		3893036	1					
ANR	3893903	BreakStatement	break ;	339:3:9384:9389	3893036	25	True				
ANR	3893904	Label	case ZEND_AST_UNARY_PLUS :	340:2:9393:9417	3893036	26	True				
ANR	3893905	Identifier	ZEND_AST_UNARY_PLUS		3893036	0					
ANR	3893906	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS ) )"		3893036	27					
ANR	3893907	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS )"	341:7:9426:9493	3893036	0	True				
ANR	3893908	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS )"		3893036	0					
ANR	3893909	Callee	UNEXPECTED		3893036	0					
ANR	3893910	Identifier	UNEXPECTED		3893036	0					
ANR	3893911	ArgumentList	"zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	1					
ANR	3893912	Argument	"zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	0					
ANR	3893913	EqualityExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	0		!=			
ANR	3893914	CallExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope )"		3893036	0					
ANR	3893915	Callee	zend_ast_evaluate		3893036	0					
ANR	3893916	Identifier	zend_ast_evaluate		3893036	0					
ANR	3893917	ArgumentList	& op2		3893036	1					
ANR	3893918	Argument	& op2		3893036	0					
ANR	3893919	UnaryOperationExpression	& op2		3893036	0					
ANR	3893920	UnaryOperator	&		3893036	0					
ANR	3893921	Identifier	op2		3893036	1					
ANR	3893922	Argument	ast -> child [ 0 ]		3893036	1					
ANR	3893923	ArrayIndexing	ast -> child [ 0 ]		3893036	0					
ANR	3893924	PtrMemberAccess	ast -> child		3893036	0					
ANR	3893925	Identifier	ast		3893036	0					
ANR	3893926	Identifier	child		3893036	1					
ANR	3893927	PrimaryExpression	0		3893036	1					
ANR	3893928	Argument	scope		3893036	2					
ANR	3893929	Identifier	scope		3893036	0					
ANR	3893930	Identifier	SUCCESS		3893036	1					
ANR	3893931	CompoundStatement		129:77:3355:3355	3893036	1					
ANR	3893932	ExpressionStatement	ret = FAILURE	342:4:9502:9515	3893036	0	True				
ANR	3893933	AssignmentExpression	ret = FAILURE		3893036	0		=			
ANR	3893934	Identifier	ret		3893036	0					
ANR	3893935	Identifier	FAILURE		3893036	1					
ANR	3893936	ElseStatement	else		3893036	0					
ANR	3893937	CompoundStatement		131:10:3386:3386	3893036	0					
ANR	3893938	ExpressionStatement	"ZVAL_LONG ( & op1 , 0 )"	344:4:9533:9551	3893036	0	True				
ANR	3893939	CallExpression	"ZVAL_LONG ( & op1 , 0 )"		3893036	0					
ANR	3893940	Callee	ZVAL_LONG		3893036	0					
ANR	3893941	Identifier	ZVAL_LONG		3893036	0					
ANR	3893942	ArgumentList	& op1		3893036	1					
ANR	3893943	Argument	& op1		3893036	0					
ANR	3893944	UnaryOperationExpression	& op1		3893036	0					
ANR	3893945	UnaryOperator	&		3893036	0					
ANR	3893946	Identifier	op1		3893036	1					
ANR	3893947	Argument	0		3893036	1					
ANR	3893948	PrimaryExpression	0		3893036	0					
ANR	3893949	ExpressionStatement	"ret = add_function ( result , & op1 , & op2 )"	345:4:9557:9595	3893036	1	True				
ANR	3893950	AssignmentExpression	"ret = add_function ( result , & op1 , & op2 )"		3893036	0		=			
ANR	3893951	Identifier	ret		3893036	0					
ANR	3893952	CallExpression	"add_function ( result , & op1 , & op2 )"		3893036	1					
ANR	3893953	Callee	add_function		3893036	0					
ANR	3893954	Identifier	add_function		3893036	0					
ANR	3893955	ArgumentList	result		3893036	1					
ANR	3893956	Argument	result		3893036	0					
ANR	3893957	Identifier	result		3893036	0					
ANR	3893958	Argument	& op1		3893036	1					
ANR	3893959	UnaryOperationExpression	& op1		3893036	0					
ANR	3893960	UnaryOperator	&		3893036	0					
ANR	3893961	Identifier	op1		3893036	1					
ANR	3893962	Argument	& op2		3893036	2					
ANR	3893963	UnaryOperationExpression	& op2		3893036	0					
ANR	3893964	UnaryOperator	&		3893036	0					
ANR	3893965	Identifier	op2		3893036	1					
ANR	3893966	ExpressionStatement	zval_dtor ( & op2 )	346:4:9601:9616	3893036	2	True				
ANR	3893967	CallExpression	zval_dtor ( & op2 )		3893036	0					
ANR	3893968	Callee	zval_dtor		3893036	0					
ANR	3893969	Identifier	zval_dtor		3893036	0					
ANR	3893970	ArgumentList	& op2		3893036	1					
ANR	3893971	Argument	& op2		3893036	0					
ANR	3893972	UnaryOperationExpression	& op2		3893036	0					
ANR	3893973	UnaryOperator	&		3893036	0					
ANR	3893974	Identifier	op2		3893036	1					
ANR	3893975	BreakStatement	break ;	348:3:9626:9631	3893036	28	True				
ANR	3893976	Label	case ZEND_AST_UNARY_MINUS :	349:2:9635:9660	3893036	29	True				
ANR	3893977	Identifier	ZEND_AST_UNARY_MINUS		3893036	0					
ANR	3893978	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS ) )"		3893036	30					
ANR	3893979	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS )"	350:7:9669:9736	3893036	0	True				
ANR	3893980	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS )"		3893036	0					
ANR	3893981	Callee	UNEXPECTED		3893036	0					
ANR	3893982	Identifier	UNEXPECTED		3893036	0					
ANR	3893983	ArgumentList	"zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	1					
ANR	3893984	Argument	"zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	0					
ANR	3893985	EqualityExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	0		!=			
ANR	3893986	CallExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 0 ] , scope )"		3893036	0					
ANR	3893987	Callee	zend_ast_evaluate		3893036	0					
ANR	3893988	Identifier	zend_ast_evaluate		3893036	0					
ANR	3893989	ArgumentList	& op2		3893036	1					
ANR	3893990	Argument	& op2		3893036	0					
ANR	3893991	UnaryOperationExpression	& op2		3893036	0					
ANR	3893992	UnaryOperator	&		3893036	0					
ANR	3893993	Identifier	op2		3893036	1					
ANR	3893994	Argument	ast -> child [ 0 ]		3893036	1					
ANR	3893995	ArrayIndexing	ast -> child [ 0 ]		3893036	0					
ANR	3893996	PtrMemberAccess	ast -> child		3893036	0					
ANR	3893997	Identifier	ast		3893036	0					
ANR	3893998	Identifier	child		3893036	1					
ANR	3893999	PrimaryExpression	0		3893036	1					
ANR	3894000	Argument	scope		3893036	2					
ANR	3894001	Identifier	scope		3893036	0					
ANR	3894002	Identifier	SUCCESS		3893036	1					
ANR	3894003	CompoundStatement		138:77:3598:3598	3893036	1					
ANR	3894004	ExpressionStatement	ret = FAILURE	351:4:9745:9758	3893036	0	True				
ANR	3894005	AssignmentExpression	ret = FAILURE		3893036	0		=			
ANR	3894006	Identifier	ret		3893036	0					
ANR	3894007	Identifier	FAILURE		3893036	1					
ANR	3894008	ElseStatement	else		3893036	0					
ANR	3894009	CompoundStatement		140:10:3629:3629	3893036	0					
ANR	3894010	ExpressionStatement	"ZVAL_LONG ( & op1 , 0 )"	353:4:9776:9794	3893036	0	True				
ANR	3894011	CallExpression	"ZVAL_LONG ( & op1 , 0 )"		3893036	0					
ANR	3894012	Callee	ZVAL_LONG		3893036	0					
ANR	3894013	Identifier	ZVAL_LONG		3893036	0					
ANR	3894014	ArgumentList	& op1		3893036	1					
ANR	3894015	Argument	& op1		3893036	0					
ANR	3894016	UnaryOperationExpression	& op1		3893036	0					
ANR	3894017	UnaryOperator	&		3893036	0					
ANR	3894018	Identifier	op1		3893036	1					
ANR	3894019	Argument	0		3893036	1					
ANR	3894020	PrimaryExpression	0		3893036	0					
ANR	3894021	ExpressionStatement	"ret = sub_function ( result , & op1 , & op2 )"	354:4:9800:9838	3893036	1	True				
ANR	3894022	AssignmentExpression	"ret = sub_function ( result , & op1 , & op2 )"		3893036	0		=			
ANR	3894023	Identifier	ret		3893036	0					
ANR	3894024	CallExpression	"sub_function ( result , & op1 , & op2 )"		3893036	1					
ANR	3894025	Callee	sub_function		3893036	0					
ANR	3894026	Identifier	sub_function		3893036	0					
ANR	3894027	ArgumentList	result		3893036	1					
ANR	3894028	Argument	result		3893036	0					
ANR	3894029	Identifier	result		3893036	0					
ANR	3894030	Argument	& op1		3893036	1					
ANR	3894031	UnaryOperationExpression	& op1		3893036	0					
ANR	3894032	UnaryOperator	&		3893036	0					
ANR	3894033	Identifier	op1		3893036	1					
ANR	3894034	Argument	& op2		3893036	2					
ANR	3894035	UnaryOperationExpression	& op2		3893036	0					
ANR	3894036	UnaryOperator	&		3893036	0					
ANR	3894037	Identifier	op2		3893036	1					
ANR	3894038	ExpressionStatement	zval_dtor ( & op2 )	355:4:9844:9859	3893036	2	True				
ANR	3894039	CallExpression	zval_dtor ( & op2 )		3893036	0					
ANR	3894040	Callee	zval_dtor		3893036	0					
ANR	3894041	Identifier	zval_dtor		3893036	0					
ANR	3894042	ArgumentList	& op2		3893036	1					
ANR	3894043	Argument	& op2		3893036	0					
ANR	3894044	UnaryOperationExpression	& op2		3893036	0					
ANR	3894045	UnaryOperator	&		3893036	0					
ANR	3894046	Identifier	op2		3893036	1					
ANR	3894047	BreakStatement	break ;	357:3:9869:9874	3893036	31	True				
ANR	3894048	Label	case ZEND_AST_ARRAY :	358:2:9878:9897	3893036	32	True				
ANR	3894049	Identifier	ZEND_AST_ARRAY		3893036	0					
ANR	3894050	ExpressionStatement	array_init ( result )	359:3:9902:9920	3893036	33	True				
ANR	3894051	CallExpression	array_init ( result )		3893036	0					
ANR	3894052	Callee	array_init		3893036	0					
ANR	3894053	Identifier	array_init		3893036	0					
ANR	3894054	ArgumentList	result		3893036	1					
ANR	3894055	Argument	result		3893036	0					
ANR	3894056	Identifier	result		3893036	0					
ANR	3894057	CompoundStatement		150:4:3806:3850	3893036	34					
ANR	3894058	IdentifierDeclStatement	uint32_t i ;	361:4:9931:9941	3893036	0	True				
ANR	3894059	IdentifierDecl	i		3893036	0					
ANR	3894060	IdentifierDeclType	uint32_t		3893036	0					
ANR	3894061	Identifier	i		3893036	1					
ANR	3894062	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	362:4:9947:9991	3893036	1	True				
ANR	3894063	IdentifierDecl	* list = zend_ast_get_list ( ast )		3893036	0					
ANR	3894064	IdentifierDeclType	zend_ast_list *		3893036	0					
ANR	3894065	Identifier	list		3893036	1					
ANR	3894066	AssignmentExpression	* list = zend_ast_get_list ( ast )		3893036	2		=			
ANR	3894067	Identifier	list		3893036	0					
ANR	3894068	CallExpression	zend_ast_get_list ( ast )		3893036	1					
ANR	3894069	Callee	zend_ast_get_list		3893036	0					
ANR	3894070	Identifier	zend_ast_get_list		3893036	0					
ANR	3894071	ArgumentList	ast		3893036	1					
ANR	3894072	Argument	ast		3893036	0					
ANR	3894073	Identifier	ast		3893036	0					
ANR	3894074	ForStatement	for ( i = 0 ; i < list -> children ; i ++ )		3893036	2					
ANR	3894075	ForInit	i = 0 ;	363:9:10002:10007	3893036	0	True				
ANR	3894076	AssignmentExpression	i = 0		3893036	0		=			
ANR	3894077	Identifier	i		3893036	0					
ANR	3894078	PrimaryExpression	0		3893036	1					
ANR	3894079	Condition	i < list -> children	363:16:10009:10026	3893036	1	True				
ANR	3894080	RelationalExpression	i < list -> children		3893036	0		<			
ANR	3894081	Identifier	i		3893036	0					
ANR	3894082	PtrMemberAccess	list -> children		3893036	1					
ANR	3894083	Identifier	list		3893036	0					
ANR	3894084	Identifier	children		3893036	1					
ANR	3894085	PostIncDecOperationExpression	i ++	363:36:10029:10031	3893036	2	True				
ANR	3894086	Identifier	i		3893036	0					
ANR	3894087	IncDec	++		3893036	1					
ANR	3894088	CompoundStatement		152:5:3900:3931	3893036	3					
ANR	3894089	IdentifierDeclStatement	zend_ast * elem = list -> child [ i ] ;	364:5:10041:10072	3893036	0	True				
ANR	3894090	IdentifierDecl	* elem = list -> child [ i ]		3893036	0					
ANR	3894091	IdentifierDeclType	zend_ast *		3893036	0					
ANR	3894092	Identifier	elem		3893036	1					
ANR	3894093	AssignmentExpression	* elem = list -> child [ i ]		3893036	2		=			
ANR	3894094	Identifier	elem		3893036	0					
ANR	3894095	ArrayIndexing	list -> child [ i ]		3893036	1					
ANR	3894096	PtrMemberAccess	list -> child		3893036	0					
ANR	3894097	Identifier	list		3893036	0					
ANR	3894098	Identifier	child		3893036	1					
ANR	3894099	Identifier	i		3893036	1					
ANR	3894100	IfStatement	if ( elem -> child [ 1 ] )		3893036	1					
ANR	3894101	Condition	elem -> child [ 1 ]	365:9:10083:10096	3893036	0	True				
ANR	3894102	ArrayIndexing	elem -> child [ 1 ]		3893036	0					
ANR	3894103	PtrMemberAccess	elem -> child		3893036	0					
ANR	3894104	Identifier	elem		3893036	0					
ANR	3894105	Identifier	child		3893036	1					
ANR	3894106	PrimaryExpression	1		3893036	1					
ANR	3894107	CompoundStatement		153:25:3958:3958	3893036	1					
ANR	3894108	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op1 , elem -> child [ 1 ] , scope ) != SUCCESS ) )"		3893036	0					
ANR	3894109	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op1 , elem -> child [ 1 ] , scope ) != SUCCESS )"	366:10:10111:10179	3893036	0	True				
ANR	3894110	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op1 , elem -> child [ 1 ] , scope ) != SUCCESS )"		3893036	0					
ANR	3894111	Callee	UNEXPECTED		3893036	0					
ANR	3894112	Identifier	UNEXPECTED		3893036	0					
ANR	3894113	ArgumentList	"zend_ast_evaluate ( & op1 , elem -> child [ 1 ] , scope ) != SUCCESS"		3893036	1					
ANR	3894114	Argument	"zend_ast_evaluate ( & op1 , elem -> child [ 1 ] , scope ) != SUCCESS"		3893036	0					
ANR	3894115	EqualityExpression	"zend_ast_evaluate ( & op1 , elem -> child [ 1 ] , scope ) != SUCCESS"		3893036	0		!=			
ANR	3894116	CallExpression	"zend_ast_evaluate ( & op1 , elem -> child [ 1 ] , scope )"		3893036	0					
ANR	3894117	Callee	zend_ast_evaluate		3893036	0					
ANR	3894118	Identifier	zend_ast_evaluate		3893036	0					
ANR	3894119	ArgumentList	& op1		3893036	1					
ANR	3894120	Argument	& op1		3893036	0					
ANR	3894121	UnaryOperationExpression	& op1		3893036	0					
ANR	3894122	UnaryOperator	&		3893036	0					
ANR	3894123	Identifier	op1		3893036	1					
ANR	3894124	Argument	elem -> child [ 1 ]		3893036	1					
ANR	3894125	ArrayIndexing	elem -> child [ 1 ]		3893036	0					
ANR	3894126	PtrMemberAccess	elem -> child		3893036	0					
ANR	3894127	Identifier	elem		3893036	0					
ANR	3894128	Identifier	child		3893036	1					
ANR	3894129	PrimaryExpression	1		3893036	1					
ANR	3894130	Argument	scope		3893036	2					
ANR	3894131	Identifier	scope		3893036	0					
ANR	3894132	Identifier	SUCCESS		3893036	1					
ANR	3894133	CompoundStatement		154:81:4041:4041	3893036	1					
ANR	3894134	ExpressionStatement	zval_dtor ( result )	367:7:10191:10208	3893036	0	True				
ANR	3894135	CallExpression	zval_dtor ( result )		3893036	0					
ANR	3894136	Callee	zval_dtor		3893036	0					
ANR	3894137	Identifier	zval_dtor		3893036	0					
ANR	3894138	ArgumentList	result		3893036	1					
ANR	3894139	Argument	result		3893036	0					
ANR	3894140	Identifier	result		3893036	0					
ANR	3894141	ReturnStatement	return FAILURE ;	368:7:10217:10231	3893036	1	True				
ANR	3894142	Identifier	FAILURE		3893036	0					
ANR	3894143	ElseStatement	else		3893036	0					
ANR	3894144	CompoundStatement		158:12:4112:4112	3893036	0					
ANR	3894145	ExpressionStatement	ZVAL_UNDEF ( & op1 )	371:6:10261:10277	3893036	0	True				
ANR	3894146	CallExpression	ZVAL_UNDEF ( & op1 )		3893036	0					
ANR	3894147	Callee	ZVAL_UNDEF		3893036	0					
ANR	3894148	Identifier	ZVAL_UNDEF		3893036	0					
ANR	3894149	ArgumentList	& op1		3893036	1					
ANR	3894150	Argument	& op1		3893036	0					
ANR	3894151	UnaryOperationExpression	& op1		3893036	0					
ANR	3894152	UnaryOperator	&		3893036	0					
ANR	3894153	Identifier	op1		3893036	1					
ANR	3894154	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op2 , elem -> child [ 0 ] , scope ) != SUCCESS ) )"		3893036	2					
ANR	3894155	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op2 , elem -> child [ 0 ] , scope ) != SUCCESS )"	373:9:10295:10363	3893036	0	True				
ANR	3894156	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op2 , elem -> child [ 0 ] , scope ) != SUCCESS )"		3893036	0					
ANR	3894157	Callee	UNEXPECTED		3893036	0					
ANR	3894158	Identifier	UNEXPECTED		3893036	0					
ANR	3894159	ArgumentList	"zend_ast_evaluate ( & op2 , elem -> child [ 0 ] , scope ) != SUCCESS"		3893036	1					
ANR	3894160	Argument	"zend_ast_evaluate ( & op2 , elem -> child [ 0 ] , scope ) != SUCCESS"		3893036	0					
ANR	3894161	EqualityExpression	"zend_ast_evaluate ( & op2 , elem -> child [ 0 ] , scope ) != SUCCESS"		3893036	0		!=			
ANR	3894162	CallExpression	"zend_ast_evaluate ( & op2 , elem -> child [ 0 ] , scope )"		3893036	0					
ANR	3894163	Callee	zend_ast_evaluate		3893036	0					
ANR	3894164	Identifier	zend_ast_evaluate		3893036	0					
ANR	3894165	ArgumentList	& op2		3893036	1					
ANR	3894166	Argument	& op2		3893036	0					
ANR	3894167	UnaryOperationExpression	& op2		3893036	0					
ANR	3894168	UnaryOperator	&		3893036	0					
ANR	3894169	Identifier	op2		3893036	1					
ANR	3894170	Argument	elem -> child [ 0 ]		3893036	1					
ANR	3894171	ArrayIndexing	elem -> child [ 0 ]		3893036	0					
ANR	3894172	PtrMemberAccess	elem -> child		3893036	0					
ANR	3894173	Identifier	elem		3893036	0					
ANR	3894174	Identifier	child		3893036	1					
ANR	3894175	PrimaryExpression	0		3893036	1					
ANR	3894176	Argument	scope		3893036	2					
ANR	3894177	Identifier	scope		3893036	0					
ANR	3894178	Identifier	SUCCESS		3893036	1					
ANR	3894179	CompoundStatement		161:80:4225:4225	3893036	1					
ANR	3894180	ExpressionStatement	zval_dtor ( & op1 )	374:6:10374:10389	3893036	0	True				
ANR	3894181	CallExpression	zval_dtor ( & op1 )		3893036	0					
ANR	3894182	Callee	zval_dtor		3893036	0					
ANR	3894183	Identifier	zval_dtor		3893036	0					
ANR	3894184	ArgumentList	& op1		3893036	1					
ANR	3894185	Argument	& op1		3893036	0					
ANR	3894186	UnaryOperationExpression	& op1		3893036	0					
ANR	3894187	UnaryOperator	&		3893036	0					
ANR	3894188	Identifier	op1		3893036	1					
ANR	3894189	ExpressionStatement	zval_dtor ( result )	375:6:10397:10414	3893036	1	True				
ANR	3894190	CallExpression	zval_dtor ( result )		3893036	0					
ANR	3894191	Callee	zval_dtor		3893036	0					
ANR	3894192	Identifier	zval_dtor		3893036	0					
ANR	3894193	ArgumentList	result		3893036	1					
ANR	3894194	Argument	result		3893036	0					
ANR	3894195	Identifier	result		3893036	0					
ANR	3894196	ReturnStatement	return FAILURE ;	376:6:10422:10436	3893036	2	True				
ANR	3894197	Identifier	FAILURE		3893036	0					
ANR	3894198	IfStatement	"if ( UNEXPECTED ( zend_ast_add_array_element ( result , & op1 , & op2 ) != SUCCESS ) )"		3893036	3					
ANR	3894199	Condition	"UNEXPECTED ( zend_ast_add_array_element ( result , & op1 , & op2 ) != SUCCESS )"	378:9:10454:10522	3893036	0	True				
ANR	3894200	CallExpression	"UNEXPECTED ( zend_ast_add_array_element ( result , & op1 , & op2 ) != SUCCESS )"		3893036	0					
ANR	3894201	Callee	UNEXPECTED		3893036	0					
ANR	3894202	Identifier	UNEXPECTED		3893036	0					
ANR	3894203	ArgumentList	"zend_ast_add_array_element ( result , & op1 , & op2 ) != SUCCESS"		3893036	1					
ANR	3894204	Argument	"zend_ast_add_array_element ( result , & op1 , & op2 ) != SUCCESS"		3893036	0					
ANR	3894205	EqualityExpression	"zend_ast_add_array_element ( result , & op1 , & op2 ) != SUCCESS"		3893036	0		!=			
ANR	3894206	CallExpression	"zend_ast_add_array_element ( result , & op1 , & op2 )"		3893036	0					
ANR	3894207	Callee	zend_ast_add_array_element		3893036	0					
ANR	3894208	Identifier	zend_ast_add_array_element		3893036	0					
ANR	3894209	ArgumentList	result		3893036	1					
ANR	3894210	Argument	result		3893036	0					
ANR	3894211	Identifier	result		3893036	0					
ANR	3894212	Argument	& op1		3893036	1					
ANR	3894213	UnaryOperationExpression	& op1		3893036	0					
ANR	3894214	UnaryOperator	&		3893036	0					
ANR	3894215	Identifier	op1		3893036	1					
ANR	3894216	Argument	& op2		3893036	2					
ANR	3894217	UnaryOperationExpression	& op2		3893036	0					
ANR	3894218	UnaryOperator	&		3893036	0					
ANR	3894219	Identifier	op2		3893036	1					
ANR	3894220	Identifier	SUCCESS		3893036	1					
ANR	3894221	CompoundStatement		166:80:4384:4384	3893036	1					
ANR	3894222	ExpressionStatement	zval_dtor ( & op1 )	379:6:10533:10548	3893036	0	True				
ANR	3894223	CallExpression	zval_dtor ( & op1 )		3893036	0					
ANR	3894224	Callee	zval_dtor		3893036	0					
ANR	3894225	Identifier	zval_dtor		3893036	0					
ANR	3894226	ArgumentList	& op1		3893036	1					
ANR	3894227	Argument	& op1		3893036	0					
ANR	3894228	UnaryOperationExpression	& op1		3893036	0					
ANR	3894229	UnaryOperator	&		3893036	0					
ANR	3894230	Identifier	op1		3893036	1					
ANR	3894231	ExpressionStatement	zval_dtor ( & op2 )	380:6:10556:10571	3893036	1	True				
ANR	3894232	CallExpression	zval_dtor ( & op2 )		3893036	0					
ANR	3894233	Callee	zval_dtor		3893036	0					
ANR	3894234	Identifier	zval_dtor		3893036	0					
ANR	3894235	ArgumentList	& op2		3893036	1					
ANR	3894236	Argument	& op2		3893036	0					
ANR	3894237	UnaryOperationExpression	& op2		3893036	0					
ANR	3894238	UnaryOperator	&		3893036	0					
ANR	3894239	Identifier	op2		3893036	1					
ANR	3894240	ExpressionStatement	zval_dtor ( result )	381:6:10579:10596	3893036	2	True				
ANR	3894241	CallExpression	zval_dtor ( result )		3893036	0					
ANR	3894242	Callee	zval_dtor		3893036	0					
ANR	3894243	Identifier	zval_dtor		3893036	0					
ANR	3894244	ArgumentList	result		3893036	1					
ANR	3894245	Argument	result		3893036	0					
ANR	3894246	Identifier	result		3893036	0					
ANR	3894247	ReturnStatement	return FAILURE ;	382:6:10604:10618	3893036	3	True				
ANR	3894248	Identifier	FAILURE		3893036	0					
ANR	3894249	BreakStatement	break ;	386:3:10641:10646	3893036	35	True				
ANR	3894250	Label	case ZEND_AST_DIM :	387:2:10650:10667	3893036	36	True				
ANR	3894251	Identifier	ZEND_AST_DIM		3893036	0					
ANR	3894252	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS ) )"		3893036	37					
ANR	3894253	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"	388:7:10676:10743	3893036	0	True				
ANR	3894254	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS )"		3893036	0					
ANR	3894255	Callee	UNEXPECTED		3893036	0					
ANR	3894256	Identifier	UNEXPECTED		3893036	0					
ANR	3894257	ArgumentList	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	1					
ANR	3894258	Argument	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	0					
ANR	3894259	EqualityExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope ) != SUCCESS"		3893036	0		!=			
ANR	3894260	CallExpression	"zend_ast_evaluate ( & op1 , ast -> child [ 0 ] , scope )"		3893036	0					
ANR	3894261	Callee	zend_ast_evaluate		3893036	0					
ANR	3894262	Identifier	zend_ast_evaluate		3893036	0					
ANR	3894263	ArgumentList	& op1		3893036	1					
ANR	3894264	Argument	& op1		3893036	0					
ANR	3894265	UnaryOperationExpression	& op1		3893036	0					
ANR	3894266	UnaryOperator	&		3893036	0					
ANR	3894267	Identifier	op1		3893036	1					
ANR	3894268	Argument	ast -> child [ 0 ]		3893036	1					
ANR	3894269	ArrayIndexing	ast -> child [ 0 ]		3893036	0					
ANR	3894270	PtrMemberAccess	ast -> child		3893036	0					
ANR	3894271	Identifier	ast		3893036	0					
ANR	3894272	Identifier	child		3893036	1					
ANR	3894273	PrimaryExpression	0		3893036	1					
ANR	3894274	Argument	scope		3893036	2					
ANR	3894275	Identifier	scope		3893036	0					
ANR	3894276	Identifier	SUCCESS		3893036	1					
ANR	3894277	CompoundStatement		176:77:4605:4605	3893036	1					
ANR	3894278	ExpressionStatement	ret = FAILURE	389:4:10752:10765	3893036	0	True				
ANR	3894279	AssignmentExpression	ret = FAILURE		3893036	0		=			
ANR	3894280	Identifier	ret		3893036	0					
ANR	3894281	Identifier	FAILURE		3893036	1					
ANR	3894282	ElseStatement	else		3893036	0					
ANR	3894283	IfStatement	"if ( UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS ) )"		3893036	0					
ANR	3894284	Condition	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"	390:14:10781:10848	3893036	0	True				
ANR	3894285	CallExpression	"UNEXPECTED ( zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS )"		3893036	0					
ANR	3894286	Callee	UNEXPECTED		3893036	0					
ANR	3894287	Identifier	UNEXPECTED		3893036	0					
ANR	3894288	ArgumentList	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		3893036	1					
ANR	3894289	Argument	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		3893036	0					
ANR	3894290	EqualityExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope ) != SUCCESS"		3893036	0		!=			
ANR	3894291	CallExpression	"zend_ast_evaluate ( & op2 , ast -> child [ 1 ] , scope )"		3893036	0					
ANR	3894292	Callee	zend_ast_evaluate		3893036	0					
ANR	3894293	Identifier	zend_ast_evaluate		3893036	0					
ANR	3894294	ArgumentList	& op2		3893036	1					
ANR	3894295	Argument	& op2		3893036	0					
ANR	3894296	UnaryOperationExpression	& op2		3893036	0					
ANR	3894297	UnaryOperator	&		3893036	0					
ANR	3894298	Identifier	op2		3893036	1					
ANR	3894299	Argument	ast -> child [ 1 ]		3893036	1					
ANR	3894300	ArrayIndexing	ast -> child [ 1 ]		3893036	0					
ANR	3894301	PtrMemberAccess	ast -> child		3893036	0					
ANR	3894302	Identifier	ast		3893036	0					
ANR	3894303	Identifier	child		3893036	1					
ANR	3894304	PrimaryExpression	1		3893036	1					
ANR	3894305	Argument	scope		3893036	2					
ANR	3894306	Identifier	scope		3893036	0					
ANR	3894307	Identifier	SUCCESS		3893036	1					
ANR	3894308	CompoundStatement		178:84:4710:4710	3893036	1					
ANR	3894309	ExpressionStatement	zval_dtor ( & op1 )	391:4:10857:10872	3893036	0	True				
ANR	3894310	CallExpression	zval_dtor ( & op1 )		3893036	0					
ANR	3894311	Callee	zval_dtor		3893036	0					
ANR	3894312	Identifier	zval_dtor		3893036	0					
ANR	3894313	ArgumentList	& op1		3893036	1					
ANR	3894314	Argument	& op1		3893036	0					
ANR	3894315	UnaryOperationExpression	& op1		3893036	0					
ANR	3894316	UnaryOperator	&		3893036	0					
ANR	3894317	Identifier	op1		3893036	1					
ANR	3894318	ExpressionStatement	ret = FAILURE	392:4:10878:10891	3893036	1	True				
ANR	3894319	AssignmentExpression	ret = FAILURE		3893036	0		=			
ANR	3894320	Identifier	ret		3893036	0					
ANR	3894321	Identifier	FAILURE		3893036	1					
ANR	3894322	ElseStatement	else		3893036	0					
ANR	3894323	CompoundStatement		182:4:4768:4776	3893036	0					
ANR	3894324	IdentifierDeclStatement	zval tmp ;	394:4:10909:10917	3893036	0	True				
ANR	3894325	IdentifierDecl	tmp		3893036	0					
ANR	3894326	IdentifierDeclType	zval		3893036	0					
ANR	3894327	Identifier	tmp		3893036	1					
ANR	3894328	ExpressionStatement	"zend_fetch_dimension_by_zval ( & tmp , & op1 , & op2 )"	396:4:10924:10970	3893036	1	True				
ANR	3894329	CallExpression	"zend_fetch_dimension_by_zval ( & tmp , & op1 , & op2 )"		3893036	0					
ANR	3894330	Callee	zend_fetch_dimension_by_zval		3893036	0					
ANR	3894331	Identifier	zend_fetch_dimension_by_zval		3893036	0					
ANR	3894332	ArgumentList	& tmp		3893036	1					
ANR	3894333	Argument	& tmp		3893036	0					
ANR	3894334	UnaryOperationExpression	& tmp		3893036	0					
ANR	3894335	UnaryOperator	&		3893036	0					
ANR	3894336	Identifier	tmp		3893036	1					
ANR	3894337	Argument	& op1		3893036	1					
ANR	3894338	UnaryOperationExpression	& op1		3893036	0					
ANR	3894339	UnaryOperator	&		3893036	0					
ANR	3894340	Identifier	op1		3893036	1					
ANR	3894341	Argument	& op2		3893036	2					
ANR	3894342	UnaryOperationExpression	& op2		3893036	0					
ANR	3894343	UnaryOperator	&		3893036	0					
ANR	3894344	Identifier	op2		3893036	1					
ANR	3894345	IfStatement	if ( UNEXPECTED ( Z_ISREF ( tmp ) ) )		3893036	2					
ANR	3894346	Condition	UNEXPECTED ( Z_ISREF ( tmp ) )	397:8:10980:11003	3893036	0	True				
ANR	3894347	CallExpression	UNEXPECTED ( Z_ISREF ( tmp ) )		3893036	0					
ANR	3894348	Callee	UNEXPECTED		3893036	0					
ANR	3894349	Identifier	UNEXPECTED		3893036	0					
ANR	3894350	ArgumentList	Z_ISREF ( tmp )		3893036	1					
ANR	3894351	Argument	Z_ISREF ( tmp )		3893036	0					
ANR	3894352	CallExpression	Z_ISREF ( tmp )		3893036	0					
ANR	3894353	Callee	Z_ISREF		3893036	0					
ANR	3894354	Identifier	Z_ISREF		3893036	0					
ANR	3894355	ArgumentList	tmp		3893036	1					
ANR	3894356	Argument	tmp		3893036	0					
ANR	3894357	Identifier	tmp		3893036	0					
ANR	3894358	CompoundStatement		185:34:4865:4865	3893036	1					
ANR	3894359	ExpressionStatement	"ZVAL_DUP ( result , Z_REFVAL ( tmp ) )"	398:5:11013:11044	3893036	0	True				
ANR	3894360	CallExpression	"ZVAL_DUP ( result , Z_REFVAL ( tmp ) )"		3893036	0					
ANR	3894361	Callee	ZVAL_DUP		3893036	0					
ANR	3894362	Identifier	ZVAL_DUP		3893036	0					
ANR	3894363	ArgumentList	result		3893036	1					
ANR	3894364	Argument	result		3893036	0					
ANR	3894365	Identifier	result		3893036	0					
ANR	3894366	Argument	Z_REFVAL ( tmp )		3893036	1					
ANR	3894367	CallExpression	Z_REFVAL ( tmp )		3893036	0					
ANR	3894368	Callee	Z_REFVAL		3893036	0					
ANR	3894369	Identifier	Z_REFVAL		3893036	0					
ANR	3894370	ArgumentList	tmp		3893036	1					
ANR	3894371	Argument	tmp		3893036	0					
ANR	3894372	Identifier	tmp		3893036	0					
ANR	3894373	ElseStatement	else		3893036	0					
ANR	3894374	CompoundStatement		187:11:4916:4916	3893036	0					
ANR	3894375	ExpressionStatement	"ZVAL_DUP ( result , & tmp )"	400:5:11064:11086	3893036	0	True				
ANR	3894376	CallExpression	"ZVAL_DUP ( result , & tmp )"		3893036	0					
ANR	3894377	Callee	ZVAL_DUP		3893036	0					
ANR	3894378	Identifier	ZVAL_DUP		3893036	0					
ANR	3894379	ArgumentList	result		3893036	1					
ANR	3894380	Argument	result		3893036	0					
ANR	3894381	Identifier	result		3893036	0					
ANR	3894382	Argument	& tmp		3893036	1					
ANR	3894383	UnaryOperationExpression	& tmp		3893036	0					
ANR	3894384	UnaryOperator	&		3893036	0					
ANR	3894385	Identifier	tmp		3893036	1					
ANR	3894386	ExpressionStatement	zval_ptr_dtor ( & tmp )	402:4:11098:11117	3893036	3	True				
ANR	3894387	CallExpression	zval_ptr_dtor ( & tmp )		3893036	0					
ANR	3894388	Callee	zval_ptr_dtor		3893036	0					
ANR	3894389	Identifier	zval_ptr_dtor		3893036	0					
ANR	3894390	ArgumentList	& tmp		3893036	1					
ANR	3894391	Argument	& tmp		3893036	0					
ANR	3894392	UnaryOperationExpression	& tmp		3893036	0					
ANR	3894393	UnaryOperator	&		3893036	0					
ANR	3894394	Identifier	tmp		3893036	1					
ANR	3894395	ExpressionStatement	zval_dtor ( & op1 )	403:4:11123:11138	3893036	4	True				
ANR	3894396	CallExpression	zval_dtor ( & op1 )		3893036	0					
ANR	3894397	Callee	zval_dtor		3893036	0					
ANR	3894398	Identifier	zval_dtor		3893036	0					
ANR	3894399	ArgumentList	& op1		3893036	1					
ANR	3894400	Argument	& op1		3893036	0					
ANR	3894401	UnaryOperationExpression	& op1		3893036	0					
ANR	3894402	UnaryOperator	&		3893036	0					
ANR	3894403	Identifier	op1		3893036	1					
ANR	3894404	ExpressionStatement	zval_dtor ( & op2 )	404:4:11144:11159	3893036	5	True				
ANR	3894405	CallExpression	zval_dtor ( & op2 )		3893036	0					
ANR	3894406	Callee	zval_dtor		3893036	0					
ANR	3894407	Identifier	zval_dtor		3893036	0					
ANR	3894408	ArgumentList	& op2		3893036	1					
ANR	3894409	Argument	& op2		3893036	0					
ANR	3894410	UnaryOperationExpression	& op2		3893036	0					
ANR	3894411	UnaryOperator	&		3893036	0					
ANR	3894412	Identifier	op2		3893036	1					
ANR	3894413	BreakStatement	break ;	406:3:11169:11174	3893036	38	True				
ANR	3894414	Label	default :	407:2:11178:11185	3893036	39	True				
ANR	3894415	Identifier	default		3893036	0					
ANR	3894416	ExpressionStatement	"zend_throw_error ( NULL , ""Unsupported constant expression"" )"	408:3:11190:11247	3893036	40	True				
ANR	3894417	CallExpression	"zend_throw_error ( NULL , ""Unsupported constant expression"" )"		3893036	0					
ANR	3894418	Callee	zend_throw_error		3893036	0					
ANR	3894419	Identifier	zend_throw_error		3893036	0					
ANR	3894420	ArgumentList	NULL		3893036	1					
ANR	3894421	Argument	NULL		3893036	0					
ANR	3894422	Identifier	NULL		3893036	0					
ANR	3894423	Argument	"""Unsupported constant expression"""		3893036	1					
ANR	3894424	PrimaryExpression	"""Unsupported constant expression"""		3893036	0					
ANR	3894425	ExpressionStatement	ret = FAILURE	409:3:11252:11265	3893036	41	True				
ANR	3894426	AssignmentExpression	ret = FAILURE		3893036	0		=			
ANR	3894427	Identifier	ret		3893036	0					
ANR	3894428	Identifier	FAILURE		3893036	1					
ANR	3894429	ReturnStatement	return ret ;	411:1:11271:11281	3893036	3	True				
ANR	3894430	Identifier	ret		3893036	0					
ANR	3894431	ReturnType	ZEND_API int		3893036	1					
ANR	3894432	Identifier	zend_ast_evaluate		3893036	2					
ANR	3894433	ParameterList	"zval * result , zend_ast * ast , zend_class_entry * scope"		3893036	3					
ANR	3894434	Parameter	zval * result	212:31:6086:6097	3893036	0	True				
ANR	3894435	ParameterType	zval *		3893036	0					
ANR	3894436	Identifier	result		3893036	1					
ANR	3894437	Parameter	zend_ast * ast	212:45:6100:6112	3893036	1	True				
ANR	3894438	ParameterType	zend_ast *		3893036	0					
ANR	3894439	Identifier	ast		3893036	1					
ANR	3894440	Parameter	zend_class_entry * scope	212:60:6115:6137	3893036	2	True				
ANR	3894441	ParameterType	zend_class_entry *		3893036	0					
ANR	3894442	Identifier	scope		3893036	1					
ANR	3894443	CFGEntryNode	ENTRY		3893036		True				
ANR	3894444	CFGExitNode	EXIT		3893036		True				
ANR	3894445	Symbol	zend_ast_add_array_element		3893036						
ANR	3894446	Symbol	ast -> kind		3893036						
ANR	3894447	Symbol	ast		3893036						
ANR	3894448	Symbol	get_binary_op		3893036						
ANR	3894449	Symbol	get_unary_op		3893036						
ANR	3894450	Symbol	ZEND_AST_GREATER		3893036						
ANR	3894451	Symbol	tmp		3893036						
ANR	3894452	Symbol	* elem -> child		3893036						
ANR	3894453	Symbol	elem -> child		3893036						
ANR	3894454	Symbol	ret		3893036						
ANR	3894455	Symbol	elem		3893036						
ANR	3894456	Symbol	NULL		3893036						
ANR	3894457	Symbol	list		3893036						
ANR	3894458	Symbol	* * elem		3893036						
ANR	3894459	Symbol	* ast -> child		3893036						
ANR	3894460	Symbol	* list -> child		3893036						
ANR	3894461	Symbol	& tmp		3893036						
ANR	3894462	Symbol	ast -> child		3893036						
ANR	3894463	Symbol	zend_ast_get_zval		3893036						
ANR	3894464	Symbol	zv		3893036						
ANR	3894465	Symbol	zend_is_true		3893036						
ANR	3894466	Symbol	add_function		3893036						
ANR	3894467	Symbol	list -> children		3893036						
ANR	3894468	Symbol	Z_OPT_CONSTANT_P		3893036						
ANR	3894469	Symbol	Z_REFVAL		3893036						
ANR	3894470	Symbol	result		3893036						
ANR	3894471	Symbol	UNEXPECTED		3893036						
ANR	3894472	Symbol	& op2		3893036						
ANR	3894473	Symbol	& op1		3893036						
ANR	3894474	Symbol	* ast		3893036						
ANR	3894475	Symbol	sub_function		3893036						
ANR	3894476	Symbol	* * list		3893036						
ANR	3894477	Symbol	* result		3893036						
ANR	3894478	Symbol	* * ast		3893036						
ANR	3894479	Symbol	is_smaller_or_equal_function		3893036						
ANR	3894480	Symbol	scope		3893036						
ANR	3894481	Symbol	* elem		3893036						
ANR	3894482	Symbol	Z_ISREF		3893036						
ANR	3894483	Symbol	op		3893036						
ANR	3894484	Symbol	ast -> attr		3893036						
ANR	3894485	Symbol	SUCCESS		3893036						
ANR	3894486	Symbol	list -> child		3893036						
ANR	3894487	Symbol	i		3893036						
ANR	3894488	Symbol	FAILURE		3893036						
ANR	3894489	Symbol	op2		3893036						
ANR	3894490	Symbol	op1		3893036						
ANR	3894491	Symbol	zend_ast_get_list		3893036						
ANR	3894492	Symbol	zend_ast_evaluate		3893036						
ANR	3894493	Symbol	* i		3893036						
ANR	3894494	Symbol	is_smaller_function		3893036						
ANR	3894495	Symbol	* list		3893036						
ANR	3894496	Symbol	zval_update_constant_ex		3893036						
ANR	3894497	Function	zend_ast_copy	414:0:11286:12246							
ANR	3894498	FunctionDef	zend_ast_copy (zend_ast * ast)		3894497	0					
ANR	3894499	CompoundStatement		415:0:11334:12246	3894497	0					
ANR	3894500	IfStatement	if ( ast == NULL )		3894497	0					
ANR	3894501	Condition	ast == NULL	416:5:11341:11351	3894497	0	True				
ANR	3894502	EqualityExpression	ast == NULL		3894497	0		==			
ANR	3894503	Identifier	ast		3894497	0					
ANR	3894504	Identifier	NULL		3894497	1					
ANR	3894505	CompoundStatement		2:18:19:19	3894497	1					
ANR	3894506	ReturnStatement	return NULL ;	417:2:11358:11369	3894497	0	True				
ANR	3894507	Identifier	NULL		3894497	0					
ANR	3894508	ElseStatement	else		3894497	0					
ANR	3894509	IfStatement	if ( ast -> kind == ZEND_AST_ZVAL )		3894497	0					
ANR	3894510	Condition	ast -> kind == ZEND_AST_ZVAL	418:12:11383:11408	3894497	0	True				
ANR	3894511	EqualityExpression	ast -> kind == ZEND_AST_ZVAL		3894497	0		==			
ANR	3894512	PtrMemberAccess	ast -> kind		3894497	0					
ANR	3894513	Identifier	ast		3894497	0					
ANR	3894514	Identifier	kind		3894497	1					
ANR	3894515	Identifier	ZEND_AST_ZVAL		3894497	1					
ANR	3894516	CompoundStatement		4:40:76:76	3894497	1					
ANR	3894517	Statement	zend_ast_zval	419:2:11415:11427	3894497	0	True				
ANR	3894518	Statement	*	419:16:11429:11429	3894497	1	True				
ANR	3894519	Statement	new	419:17:11430:11432	3894497	2	True				
ANR	3894520	Statement	=	419:21:11434:11434	3894497	3	True				
ANR	3894521	ExpressionStatement	emalloc ( sizeof ( zend_ast_zval ) )	419:23:11436:11466	3894497	4	True				
ANR	3894522	CallExpression	emalloc ( sizeof ( zend_ast_zval ) )		3894497	0					
ANR	3894523	Callee	emalloc		3894497	0					
ANR	3894524	Identifier	emalloc		3894497	0					
ANR	3894525	ArgumentList	sizeof ( zend_ast_zval )		3894497	1					
ANR	3894526	Argument	sizeof ( zend_ast_zval )		3894497	0					
ANR	3894527	SizeofExpression	sizeof ( zend_ast_zval )		3894497	0					
ANR	3894528	Sizeof	sizeof		3894497	0					
ANR	3894529	SizeofOperand	zend_ast_zval		3894497	1					
ANR	3894530	Statement	new	420:2:11470:11472	3894497	5	True				
ANR	3894531	Statement	->	420:5:11473:11474	3894497	6	True				
ANR	3894532	ExpressionStatement	kind = ZEND_AST_ZVAL	420:7:11475:11495	3894497	7	True				
ANR	3894533	AssignmentExpression	kind = ZEND_AST_ZVAL		3894497	0		=			
ANR	3894534	Identifier	kind		3894497	0					
ANR	3894535	Identifier	ZEND_AST_ZVAL		3894497	1					
ANR	3894536	Statement	new	421:2:11499:11501	3894497	8	True				
ANR	3894537	Statement	->	421:5:11502:11503	3894497	9	True				
ANR	3894538	ExpressionStatement	attr = ast -> attr	421:7:11504:11520	3894497	10	True				
ANR	3894539	AssignmentExpression	attr = ast -> attr		3894497	0		=			
ANR	3894540	Identifier	attr		3894497	0					
ANR	3894541	PtrMemberAccess	ast -> attr		3894497	1					
ANR	3894542	Identifier	ast		3894497	0					
ANR	3894543	Identifier	attr		3894497	1					
ANR	3894544	Statement	ZVAL_COPY	422:2:11524:11532	3894497	11	True				
ANR	3894545	Statement	(	422:11:11533:11533	3894497	12	True				
ANR	3894546	Statement	&	422:12:11534:11534	3894497	13	True				
ANR	3894547	Statement	new	422:13:11535:11537	3894497	14	True				
ANR	3894548	Statement	->	422:16:11538:11539	3894497	15	True				
ANR	3894549	Statement	val	422:18:11540:11542	3894497	16	True				
ANR	3894550	Statement	","	422:21:11543:11543	3894497	17	True				
ANR	3894551	Statement	zend_ast_get_zval	422:23:11545:11561	3894497	18	True				
ANR	3894552	Statement	(	422:40:11562:11562	3894497	19	True				
ANR	3894553	Statement	ast	422:41:11563:11565	3894497	20	True				
ANR	3894554	Statement	)	422:44:11566:11566	3894497	21	True				
ANR	3894555	Statement	)	422:45:11567:11567	3894497	22	True				
ANR	3894556	ExpressionStatement		422:46:11568:11568	3894497	23	True				
ANR	3894557	Statement	return	423:2:11572:11577	3894497	24	True				
ANR	3894558	Statement	(	423:9:11579:11579	3894497	25	True				
ANR	3894559	Statement	zend_ast	423:10:11580:11587	3894497	26	True				
ANR	3894560	Statement	*	423:19:11589:11589	3894497	27	True				
ANR	3894561	Statement	)	423:20:11590:11590	3894497	28	True				
ANR	3894562	Statement	new	423:22:11592:11594	3894497	29	True				
ANR	3894563	ExpressionStatement		423:25:11595:11595	3894497	30	True				
ANR	3894564	ElseStatement	else		3894497	0					
ANR	3894565	IfStatement	if ( zend_ast_is_list ( ast ) )		3894497	0					
ANR	3894566	Condition	zend_ast_is_list ( ast )	424:12:11609:11629	3894497	0	True				
ANR	3894567	CallExpression	zend_ast_is_list ( ast )		3894497	0					
ANR	3894568	Callee	zend_ast_is_list		3894497	0					
ANR	3894569	Identifier	zend_ast_is_list		3894497	0					
ANR	3894570	ArgumentList	ast		3894497	1					
ANR	3894571	Argument	ast		3894497	0					
ANR	3894572	Identifier	ast		3894497	0					
ANR	3894573	CompoundStatement		13:2:417:427	3894497	1					
ANR	3894574	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	425:2:11636:11680	3894497	0	True				
ANR	3894575	IdentifierDecl	* list = zend_ast_get_list ( ast )		3894497	0					
ANR	3894576	IdentifierDeclType	zend_ast_list *		3894497	0					
ANR	3894577	Identifier	list		3894497	1					
ANR	3894578	AssignmentExpression	* list = zend_ast_get_list ( ast )		3894497	2		=			
ANR	3894579	Identifier	list		3894497	0					
ANR	3894580	CallExpression	zend_ast_get_list ( ast )		3894497	1					
ANR	3894581	Callee	zend_ast_get_list		3894497	0					
ANR	3894582	Identifier	zend_ast_get_list		3894497	0					
ANR	3894583	ArgumentList	ast		3894497	1					
ANR	3894584	Argument	ast		3894497	0					
ANR	3894585	Identifier	ast		3894497	0					
ANR	3894586	Statement	zend_ast_list	426:2:11684:11696	3894497	1	True				
ANR	3894587	Statement	*	426:16:11698:11698	3894497	2	True				
ANR	3894588	Statement	new	426:17:11699:11701	3894497	3	True				
ANR	3894589	Statement	=	426:21:11703:11703	3894497	4	True				
ANR	3894590	ExpressionStatement	emalloc ( zend_ast_list_size ( list -> children ) )	426:23:11705:11748	3894497	5	True				
ANR	3894591	CallExpression	emalloc ( zend_ast_list_size ( list -> children ) )		3894497	0					
ANR	3894592	Callee	emalloc		3894497	0					
ANR	3894593	Identifier	emalloc		3894497	0					
ANR	3894594	ArgumentList	zend_ast_list_size ( list -> children )		3894497	1					
ANR	3894595	Argument	zend_ast_list_size ( list -> children )		3894497	0					
ANR	3894596	CallExpression	zend_ast_list_size ( list -> children )		3894497	0					
ANR	3894597	Callee	zend_ast_list_size		3894497	0					
ANR	3894598	Identifier	zend_ast_list_size		3894497	0					
ANR	3894599	ArgumentList	list -> children		3894497	1					
ANR	3894600	Argument	list -> children		3894497	0					
ANR	3894601	PtrMemberAccess	list -> children		3894497	0					
ANR	3894602	Identifier	list		3894497	0					
ANR	3894603	Identifier	children		3894497	1					
ANR	3894604	IdentifierDeclStatement	uint32_t i ;	427:2:11752:11762	3894497	6	True				
ANR	3894605	IdentifierDecl	i		3894497	0					
ANR	3894606	IdentifierDeclType	uint32_t		3894497	0					
ANR	3894607	Identifier	i		3894497	1					
ANR	3894608	Statement	new	428:2:11766:11768	3894497	7	True				
ANR	3894609	Statement	->	428:5:11769:11770	3894497	8	True				
ANR	3894610	ExpressionStatement	kind = list -> kind	428:7:11771:11788	3894497	9	True				
ANR	3894611	AssignmentExpression	kind = list -> kind		3894497	0		=			
ANR	3894612	Identifier	kind		3894497	0					
ANR	3894613	PtrMemberAccess	list -> kind		3894497	1					
ANR	3894614	Identifier	list		3894497	0					
ANR	3894615	Identifier	kind		3894497	1					
ANR	3894616	Statement	new	429:2:11792:11794	3894497	10	True				
ANR	3894617	Statement	->	429:5:11795:11796	3894497	11	True				
ANR	3894618	ExpressionStatement	attr = list -> attr	429:7:11797:11814	3894497	12	True				
ANR	3894619	AssignmentExpression	attr = list -> attr		3894497	0		=			
ANR	3894620	Identifier	attr		3894497	0					
ANR	3894621	PtrMemberAccess	list -> attr		3894497	1					
ANR	3894622	Identifier	list		3894497	0					
ANR	3894623	Identifier	attr		3894497	1					
ANR	3894624	Statement	new	430:2:11818:11820	3894497	13	True				
ANR	3894625	Statement	->	430:5:11821:11822	3894497	14	True				
ANR	3894626	ExpressionStatement	children = list -> children	430:7:11823:11848	3894497	15	True				
ANR	3894627	AssignmentExpression	children = list -> children		3894497	0		=			
ANR	3894628	Identifier	children		3894497	0					
ANR	3894629	PtrMemberAccess	list -> children		3894497	1					
ANR	3894630	Identifier	list		3894497	0					
ANR	3894631	Identifier	children		3894497	1					
ANR	3894632	ForStatement	for ( i = 0 ; i < list -> children ; i ++ )		3894497	16					
ANR	3894633	ForInit	i = 0 ;	431:7:11857:11862	3894497	0	True				
ANR	3894634	AssignmentExpression	i = 0		3894497	0		=			
ANR	3894635	Identifier	i		3894497	0					
ANR	3894636	PrimaryExpression	0		3894497	1					
ANR	3894637	Condition	i < list -> children	431:14:11864:11881	3894497	1	True				
ANR	3894638	RelationalExpression	i < list -> children		3894497	0		<			
ANR	3894639	Identifier	i		3894497	0					
ANR	3894640	PtrMemberAccess	list -> children		3894497	1					
ANR	3894641	Identifier	list		3894497	0					
ANR	3894642	Identifier	children		3894497	1					
ANR	3894643	PostIncDecOperationExpression	i ++	431:34:11884:11886	3894497	2	True				
ANR	3894644	Identifier	i		3894497	0					
ANR	3894645	IncDec	++		3894497	1					
ANR	3894646	CompoundStatement		17:39:554:554	3894497	3					
ANR	3894647	Statement	new	432:3:11894:11896	3894497	0	True				
ANR	3894648	Statement	->	432:6:11897:11898	3894497	1	True				
ANR	3894649	ExpressionStatement	child [ i ] = zend_ast_copy ( list -> child [ i ] )	432:8:11899:11939	3894497	2	True				
ANR	3894650	AssignmentExpression	child [ i ] = zend_ast_copy ( list -> child [ i ] )		3894497	0		=			
ANR	3894651	ArrayIndexing	child [ i ]		3894497	0					
ANR	3894652	Identifier	child		3894497	0					
ANR	3894653	Identifier	i		3894497	1					
ANR	3894654	CallExpression	zend_ast_copy ( list -> child [ i ] )		3894497	1					
ANR	3894655	Callee	zend_ast_copy		3894497	0					
ANR	3894656	Identifier	zend_ast_copy		3894497	0					
ANR	3894657	ArgumentList	list -> child [ i ]		3894497	1					
ANR	3894658	Argument	list -> child [ i ]		3894497	0					
ANR	3894659	ArrayIndexing	list -> child [ i ]		3894497	0					
ANR	3894660	PtrMemberAccess	list -> child		3894497	0					
ANR	3894661	Identifier	list		3894497	0					
ANR	3894662	Identifier	child		3894497	1					
ANR	3894663	Identifier	i		3894497	1					
ANR	3894664	Statement	return	434:2:11947:11952	3894497	17	True				
ANR	3894665	Statement	(	434:9:11954:11954	3894497	18	True				
ANR	3894666	Statement	zend_ast	434:10:11955:11962	3894497	19	True				
ANR	3894667	Statement	*	434:19:11964:11964	3894497	20	True				
ANR	3894668	Statement	)	434:20:11965:11965	3894497	21	True				
ANR	3894669	Statement	new	434:22:11967:11969	3894497	22	True				
ANR	3894670	ExpressionStatement		434:25:11970:11970	3894497	23	True				
ANR	3894671	ElseStatement	else		3894497	0					
ANR	3894672	CompoundStatement		22:2:649:702	3894497	0					
ANR	3894673	IdentifierDeclStatement	"uint32_t i , children = zend_ast_get_num_children ( ast ) ;"	436:2:11984:12037	3894497	0	True				
ANR	3894674	IdentifierDecl	i		3894497	0					
ANR	3894675	IdentifierDeclType	uint32_t		3894497	0					
ANR	3894676	Identifier	i		3894497	1					
ANR	3894677	IdentifierDecl	children = zend_ast_get_num_children ( ast )		3894497	1					
ANR	3894678	IdentifierDeclType	uint32_t		3894497	0					
ANR	3894679	Identifier	children		3894497	1					
ANR	3894680	AssignmentExpression	children = zend_ast_get_num_children ( ast )		3894497	2		=			
ANR	3894681	Identifier	children		3894497	0					
ANR	3894682	CallExpression	zend_ast_get_num_children ( ast )		3894497	1					
ANR	3894683	Callee	zend_ast_get_num_children		3894497	0					
ANR	3894684	Identifier	zend_ast_get_num_children		3894497	0					
ANR	3894685	ArgumentList	ast		3894497	1					
ANR	3894686	Argument	ast		3894497	0					
ANR	3894687	Identifier	ast		3894497	0					
ANR	3894688	Statement	zend_ast	437:2:12041:12048	3894497	1	True				
ANR	3894689	Statement	*	437:11:12050:12050	3894497	2	True				
ANR	3894690	Statement	new	437:12:12051:12053	3894497	3	True				
ANR	3894691	Statement	=	437:16:12055:12055	3894497	4	True				
ANR	3894692	ExpressionStatement	emalloc ( zend_ast_size ( children ) )	437:18:12057:12089	3894497	5	True				
ANR	3894693	CallExpression	emalloc ( zend_ast_size ( children ) )		3894497	0					
ANR	3894694	Callee	emalloc		3894497	0					
ANR	3894695	Identifier	emalloc		3894497	0					
ANR	3894696	ArgumentList	zend_ast_size ( children )		3894497	1					
ANR	3894697	Argument	zend_ast_size ( children )		3894497	0					
ANR	3894698	CallExpression	zend_ast_size ( children )		3894497	0					
ANR	3894699	Callee	zend_ast_size		3894497	0					
ANR	3894700	Identifier	zend_ast_size		3894497	0					
ANR	3894701	ArgumentList	children		3894497	1					
ANR	3894702	Argument	children		3894497	0					
ANR	3894703	Identifier	children		3894497	0					
ANR	3894704	Statement	new	438:2:12093:12095	3894497	6	True				
ANR	3894705	Statement	->	438:5:12096:12097	3894497	7	True				
ANR	3894706	ExpressionStatement	kind = ast -> kind	438:7:12098:12114	3894497	8	True				
ANR	3894707	AssignmentExpression	kind = ast -> kind		3894497	0		=			
ANR	3894708	Identifier	kind		3894497	0					
ANR	3894709	PtrMemberAccess	ast -> kind		3894497	1					
ANR	3894710	Identifier	ast		3894497	0					
ANR	3894711	Identifier	kind		3894497	1					
ANR	3894712	Statement	new	439:2:12118:12120	3894497	9	True				
ANR	3894713	Statement	->	439:5:12121:12122	3894497	10	True				
ANR	3894714	ExpressionStatement	attr = ast -> attr	439:7:12123:12139	3894497	11	True				
ANR	3894715	AssignmentExpression	attr = ast -> attr		3894497	0		=			
ANR	3894716	Identifier	attr		3894497	0					
ANR	3894717	PtrMemberAccess	ast -> attr		3894497	1					
ANR	3894718	Identifier	ast		3894497	0					
ANR	3894719	Identifier	attr		3894497	1					
ANR	3894720	ForStatement	for ( i = 0 ; i < children ; i ++ )		3894497	12					
ANR	3894721	ForInit	i = 0 ;	440:7:12148:12153	3894497	0	True				
ANR	3894722	AssignmentExpression	i = 0		3894497	0		=			
ANR	3894723	Identifier	i		3894497	0					
ANR	3894724	PrimaryExpression	0		3894497	1					
ANR	3894725	Condition	i < children	440:14:12155:12166	3894497	1	True				
ANR	3894726	RelationalExpression	i < children		3894497	0		<			
ANR	3894727	Identifier	i		3894497	0					
ANR	3894728	Identifier	children		3894497	1					
ANR	3894729	PostIncDecOperationExpression	i ++	440:28:12169:12171	3894497	2	True				
ANR	3894730	Identifier	i		3894497	0					
ANR	3894731	IncDec	++		3894497	1					
ANR	3894732	CompoundStatement		26:33:839:839	3894497	3					
ANR	3894733	Statement	new	441:3:12179:12181	3894497	0	True				
ANR	3894734	Statement	->	441:6:12182:12183	3894497	1	True				
ANR	3894735	ExpressionStatement	child [ i ] = zend_ast_copy ( ast -> child [ i ] )	441:8:12184:12223	3894497	2	True				
ANR	3894736	AssignmentExpression	child [ i ] = zend_ast_copy ( ast -> child [ i ] )		3894497	0		=			
ANR	3894737	ArrayIndexing	child [ i ]		3894497	0					
ANR	3894738	Identifier	child		3894497	0					
ANR	3894739	Identifier	i		3894497	1					
ANR	3894740	CallExpression	zend_ast_copy ( ast -> child [ i ] )		3894497	1					
ANR	3894741	Callee	zend_ast_copy		3894497	0					
ANR	3894742	Identifier	zend_ast_copy		3894497	0					
ANR	3894743	ArgumentList	ast -> child [ i ]		3894497	1					
ANR	3894744	Argument	ast -> child [ i ]		3894497	0					
ANR	3894745	ArrayIndexing	ast -> child [ i ]		3894497	0					
ANR	3894746	PtrMemberAccess	ast -> child		3894497	0					
ANR	3894747	Identifier	ast		3894497	0					
ANR	3894748	Identifier	child		3894497	1					
ANR	3894749	Identifier	i		3894497	1					
ANR	3894750	Statement	return	443:2:12231:12236	3894497	13	True				
ANR	3894751	Statement	new	443:9:12238:12240	3894497	14	True				
ANR	3894752	ExpressionStatement		443:12:12241:12241	3894497	15	True				
ANR	3894753	ReturnType	ZEND_API zend_ast *		3894497	1					
ANR	3894754	Identifier	zend_ast_copy		3894497	2					
ANR	3894755	ParameterList	zend_ast * ast		3894497	3					
ANR	3894756	Parameter	zend_ast * ast	414:33:11319:11331	3894497	0	True				
ANR	3894757	ParameterType	zend_ast *		3894497	0					
ANR	3894758	Identifier	ast		3894497	1					
ANR	3894759	CFGEntryNode	ENTRY		3894497		True				
ANR	3894760	CFGExitNode	EXIT		3894497		True				
ANR	3894761	Symbol	ast -> kind		3894497						
ANR	3894762	Symbol	ast		3894497						
ANR	3894763	Symbol	zend_ast_copy		3894497						
ANR	3894764	Symbol	* ast		3894497						
ANR	3894765	Symbol	* * list		3894497						
ANR	3894766	Symbol	children		3894497						
ANR	3894767	Symbol	* * ast		3894497						
ANR	3894768	Symbol	ZEND_AST_ZVAL		3894497						
ANR	3894769	Symbol	attr		3894497						
ANR	3894770	Symbol	zend_ast_get_num_children		3894497						
ANR	3894771	Symbol	ast -> attr		3894497						
ANR	3894772	Symbol	* child		3894497						
ANR	3894773	Symbol	NULL		3894497						
ANR	3894774	Symbol	list -> attr		3894497						
ANR	3894775	Symbol	list -> child		3894497						
ANR	3894776	Symbol	kind		3894497						
ANR	3894777	Symbol	i		3894497						
ANR	3894778	Symbol	list		3894497						
ANR	3894779	Symbol	zend_ast_get_list		3894497						
ANR	3894780	Symbol	* i		3894497						
ANR	3894781	Symbol	zend_ast_is_list		3894497						
ANR	3894782	Symbol	* list		3894497						
ANR	3894783	Symbol	* list -> child		3894497						
ANR	3894784	Symbol	* ast -> child		3894497						
ANR	3894785	Symbol	ast -> child		3894497						
ANR	3894786	Symbol	list -> children		3894497						
ANR	3894787	Symbol	zend_ast_list_size		3894497						
ANR	3894788	Symbol	zend_ast_size		3894497						
ANR	3894789	Symbol	list -> kind		3894497						
ANR	3894790	Symbol	child		3894497						
ANR	3894791	Function	zend_ast_destroy_ex	447:0:12249:13581							
ANR	3894792	FunctionDef	"zend_ast_destroy_ex (zend_ast * ast , zend_bool free)"		3894791	0					
ANR	3894793	CompoundStatement		447:63:12312:13581	3894791	0					
ANR	3894794	IfStatement	if ( ! ast )		3894791	0					
ANR	3894795	Condition	! ast	448:5:12319:12322	3894791	0	True				
ANR	3894796	UnaryOperationExpression	! ast		3894791	0					
ANR	3894797	UnaryOperator	!		3894791	0					
ANR	3894798	Identifier	ast		3894791	1					
ANR	3894799	CompoundStatement		2:11:12:12	3894791	1					
ANR	3894800	ReturnStatement	return ;	449:2:12329:12335	3894791	0	True				
ANR	3894801	SwitchStatement	switch ( ast -> kind )		3894791	1					
ANR	3894802	Condition	ast -> kind	452:9:12350:12358	3894791	0	True				
ANR	3894803	PtrMemberAccess	ast -> kind		3894791	0					
ANR	3894804	Identifier	ast		3894791	0					
ANR	3894805	Identifier	kind		3894791	1					
ANR	3894806	CompoundStatement		6:20:48:48	3894791	1					
ANR	3894807	Label	case ZEND_AST_ZVAL :	453:2:12365:12383	3894791	0	True				
ANR	3894808	Identifier	ZEND_AST_ZVAL		3894791	0					
ANR	3894809	ExpressionStatement	zval_ptr_dtor_nogc ( zend_ast_get_zval ( ast ) )	457:3:12629:12671	3894791	1	True				
ANR	3894810	CallExpression	zval_ptr_dtor_nogc ( zend_ast_get_zval ( ast ) )		3894791	0					
ANR	3894811	Callee	zval_ptr_dtor_nogc		3894791	0					
ANR	3894812	Identifier	zval_ptr_dtor_nogc		3894791	0					
ANR	3894813	ArgumentList	zend_ast_get_zval ( ast )		3894791	1					
ANR	3894814	Argument	zend_ast_get_zval ( ast )		3894791	0					
ANR	3894815	CallExpression	zend_ast_get_zval ( ast )		3894791	0					
ANR	3894816	Callee	zend_ast_get_zval		3894791	0					
ANR	3894817	Identifier	zend_ast_get_zval		3894791	0					
ANR	3894818	ArgumentList	ast		3894791	1					
ANR	3894819	Argument	ast		3894791	0					
ANR	3894820	Identifier	ast		3894791	0					
ANR	3894821	BreakStatement	break ;	458:3:12676:12681	3894791	2	True				
ANR	3894822	Label	case ZEND_AST_FUNC_DECL :	459:2:12685:12708	3894791	3	True				
ANR	3894823	Identifier	ZEND_AST_FUNC_DECL		3894791	0					
ANR	3894824	Label	case ZEND_AST_CLOSURE :	460:2:12712:12733	3894791	4	True				
ANR	3894825	Identifier	ZEND_AST_CLOSURE		3894791	0					
ANR	3894826	Label	case ZEND_AST_METHOD :	461:2:12737:12757	3894791	5	True				
ANR	3894827	Identifier	ZEND_AST_METHOD		3894791	0					
ANR	3894828	Label	case ZEND_AST_CLASS :	462:2:12761:12780	3894791	6	True				
ANR	3894829	Identifier	ZEND_AST_CLASS		3894791	0					
ANR	3894830	CompoundStatement		18:3:476:519	3894791	7					
ANR	3894831	IdentifierDeclStatement	zend_ast_decl * decl = ( zend_ast_decl * ) ast ;	464:3:12789:12832	3894791	0	True				
ANR	3894832	IdentifierDecl	* decl = ( zend_ast_decl * ) ast		3894791	0					
ANR	3894833	IdentifierDeclType	zend_ast_decl *		3894791	0					
ANR	3894834	Identifier	decl		3894791	1					
ANR	3894835	AssignmentExpression	* decl = ( zend_ast_decl * ) ast		3894791	2		=			
ANR	3894836	Identifier	decl		3894791	0					
ANR	3894837	CastExpression	( zend_ast_decl * ) ast		3894791	1					
ANR	3894838	CastTarget	zend_ast_decl *		3894791	0					
ANR	3894839	Identifier	ast		3894791	1					
ANR	3894840	IfStatement	if ( decl -> name )		3894791	1					
ANR	3894841	Condition	decl -> name	465:7:12841:12850	3894791	0	True				
ANR	3894842	PtrMemberAccess	decl -> name		3894791	0					
ANR	3894843	Identifier	decl		3894791	0					
ANR	3894844	Identifier	name		3894791	1					
ANR	3894845	CompoundStatement		19:19:540:540	3894791	1					
ANR	3894846	ExpressionStatement	zend_string_release ( decl -> name )	466:7:12862:12893	3894791	0	True				
ANR	3894847	CallExpression	zend_string_release ( decl -> name )		3894791	0					
ANR	3894848	Callee	zend_string_release		3894791	0					
ANR	3894849	Identifier	zend_string_release		3894791	0					
ANR	3894850	ArgumentList	decl -> name		3894791	1					
ANR	3894851	Argument	decl -> name		3894791	0					
ANR	3894852	PtrMemberAccess	decl -> name		3894791	0					
ANR	3894853	Identifier	decl		3894791	0					
ANR	3894854	Identifier	name		3894791	1					
ANR	3894855	IfStatement	if ( decl -> doc_comment )		3894791	2					
ANR	3894856	Condition	decl -> doc_comment	468:7:12907:12923	3894791	0	True				
ANR	3894857	PtrMemberAccess	decl -> doc_comment		3894791	0					
ANR	3894858	Identifier	decl		3894791	0					
ANR	3894859	Identifier	doc_comment		3894791	1					
ANR	3894860	CompoundStatement		22:26:613:613	3894791	1					
ANR	3894861	ExpressionStatement	zend_string_release ( decl -> doc_comment )	469:4:12932:12970	3894791	0	True				
ANR	3894862	CallExpression	zend_string_release ( decl -> doc_comment )		3894791	0					
ANR	3894863	Callee	zend_string_release		3894791	0					
ANR	3894864	Identifier	zend_string_release		3894791	0					
ANR	3894865	ArgumentList	decl -> doc_comment		3894791	1					
ANR	3894866	Argument	decl -> doc_comment		3894791	0					
ANR	3894867	PtrMemberAccess	decl -> doc_comment		3894791	0					
ANR	3894868	Identifier	decl		3894791	0					
ANR	3894869	Identifier	doc_comment		3894791	1					
ANR	3894870	ExpressionStatement	"zend_ast_destroy_ex ( decl -> child [ 0 ] , free )"	471:3:12980:13021	3894791	3	True				
ANR	3894871	CallExpression	"zend_ast_destroy_ex ( decl -> child [ 0 ] , free )"		3894791	0					
ANR	3894872	Callee	zend_ast_destroy_ex		3894791	0					
ANR	3894873	Identifier	zend_ast_destroy_ex		3894791	0					
ANR	3894874	ArgumentList	decl -> child [ 0 ]		3894791	1					
ANR	3894875	Argument	decl -> child [ 0 ]		3894791	0					
ANR	3894876	ArrayIndexing	decl -> child [ 0 ]		3894791	0					
ANR	3894877	PtrMemberAccess	decl -> child		3894791	0					
ANR	3894878	Identifier	decl		3894791	0					
ANR	3894879	Identifier	child		3894791	1					
ANR	3894880	PrimaryExpression	0		3894791	1					
ANR	3894881	Argument	free		3894791	1					
ANR	3894882	Identifier	free		3894791	0					
ANR	3894883	ExpressionStatement	"zend_ast_destroy_ex ( decl -> child [ 1 ] , free )"	472:3:13026:13067	3894791	4	True				
ANR	3894884	CallExpression	"zend_ast_destroy_ex ( decl -> child [ 1 ] , free )"		3894791	0					
ANR	3894885	Callee	zend_ast_destroy_ex		3894791	0					
ANR	3894886	Identifier	zend_ast_destroy_ex		3894791	0					
ANR	3894887	ArgumentList	decl -> child [ 1 ]		3894791	1					
ANR	3894888	Argument	decl -> child [ 1 ]		3894791	0					
ANR	3894889	ArrayIndexing	decl -> child [ 1 ]		3894791	0					
ANR	3894890	PtrMemberAccess	decl -> child		3894791	0					
ANR	3894891	Identifier	decl		3894791	0					
ANR	3894892	Identifier	child		3894791	1					
ANR	3894893	PrimaryExpression	1		3894791	1					
ANR	3894894	Argument	free		3894791	1					
ANR	3894895	Identifier	free		3894791	0					
ANR	3894896	ExpressionStatement	"zend_ast_destroy_ex ( decl -> child [ 2 ] , free )"	473:3:13072:13113	3894791	5	True				
ANR	3894897	CallExpression	"zend_ast_destroy_ex ( decl -> child [ 2 ] , free )"		3894791	0					
ANR	3894898	Callee	zend_ast_destroy_ex		3894791	0					
ANR	3894899	Identifier	zend_ast_destroy_ex		3894791	0					
ANR	3894900	ArgumentList	decl -> child [ 2 ]		3894791	1					
ANR	3894901	Argument	decl -> child [ 2 ]		3894791	0					
ANR	3894902	ArrayIndexing	decl -> child [ 2 ]		3894791	0					
ANR	3894903	PtrMemberAccess	decl -> child		3894791	0					
ANR	3894904	Identifier	decl		3894791	0					
ANR	3894905	Identifier	child		3894791	1					
ANR	3894906	PrimaryExpression	2		3894791	1					
ANR	3894907	Argument	free		3894791	1					
ANR	3894908	Identifier	free		3894791	0					
ANR	3894909	ExpressionStatement	"zend_ast_destroy_ex ( decl -> child [ 3 ] , free )"	474:3:13118:13159	3894791	6	True				
ANR	3894910	CallExpression	"zend_ast_destroy_ex ( decl -> child [ 3 ] , free )"		3894791	0					
ANR	3894911	Callee	zend_ast_destroy_ex		3894791	0					
ANR	3894912	Identifier	zend_ast_destroy_ex		3894791	0					
ANR	3894913	ArgumentList	decl -> child [ 3 ]		3894791	1					
ANR	3894914	Argument	decl -> child [ 3 ]		3894791	0					
ANR	3894915	ArrayIndexing	decl -> child [ 3 ]		3894791	0					
ANR	3894916	PtrMemberAccess	decl -> child		3894791	0					
ANR	3894917	Identifier	decl		3894791	0					
ANR	3894918	Identifier	child		3894791	1					
ANR	3894919	PrimaryExpression	3		3894791	1					
ANR	3894920	Argument	free		3894791	1					
ANR	3894921	Identifier	free		3894791	0					
ANR	3894922	BreakStatement	break ;	475:3:13164:13169	3894791	7	True				
ANR	3894923	Label	default :	477:2:13177:13184	3894791	8	True				
ANR	3894924	Identifier	default		3894791	0					
ANR	3894925	IfStatement	if ( zend_ast_is_list ( ast ) )		3894791	9					
ANR	3894926	Condition	zend_ast_is_list ( ast )	478:7:13193:13213	3894791	0	True				
ANR	3894927	CallExpression	zend_ast_is_list ( ast )		3894791	0					
ANR	3894928	Callee	zend_ast_is_list		3894791	0					
ANR	3894929	Identifier	zend_ast_is_list		3894791	0					
ANR	3894930	ArgumentList	ast		3894791	1					
ANR	3894931	Argument	ast		3894791	0					
ANR	3894932	Identifier	ast		3894791	0					
ANR	3894933	CompoundStatement		34:4:959:969	3894791	1					
ANR	3894934	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	479:4:13222:13266	3894791	0	True				
ANR	3894935	IdentifierDecl	* list = zend_ast_get_list ( ast )		3894791	0					
ANR	3894936	IdentifierDeclType	zend_ast_list *		3894791	0					
ANR	3894937	Identifier	list		3894791	1					
ANR	3894938	AssignmentExpression	* list = zend_ast_get_list ( ast )		3894791	2		=			
ANR	3894939	Identifier	list		3894791	0					
ANR	3894940	CallExpression	zend_ast_get_list ( ast )		3894791	1					
ANR	3894941	Callee	zend_ast_get_list		3894791	0					
ANR	3894942	Identifier	zend_ast_get_list		3894791	0					
ANR	3894943	ArgumentList	ast		3894791	1					
ANR	3894944	Argument	ast		3894791	0					
ANR	3894945	Identifier	ast		3894791	0					
ANR	3894946	IdentifierDeclStatement	uint32_t i ;	480:4:13272:13282	3894791	1	True				
ANR	3894947	IdentifierDecl	i		3894791	0					
ANR	3894948	IdentifierDeclType	uint32_t		3894791	0					
ANR	3894949	Identifier	i		3894791	1					
ANR	3894950	ForStatement	for ( i = 0 ; i < list -> children ; i ++ )		3894791	2					
ANR	3894951	ForInit	i = 0 ;	481:9:13293:13298	3894791	0	True				
ANR	3894952	AssignmentExpression	i = 0		3894791	0		=			
ANR	3894953	Identifier	i		3894791	0					
ANR	3894954	PrimaryExpression	0		3894791	1					
ANR	3894955	Condition	i < list -> children	481:16:13300:13317	3894791	1	True				
ANR	3894956	RelationalExpression	i < list -> children		3894791	0		<			
ANR	3894957	Identifier	i		3894791	0					
ANR	3894958	PtrMemberAccess	list -> children		3894791	1					
ANR	3894959	Identifier	list		3894791	0					
ANR	3894960	Identifier	children		3894791	1					
ANR	3894961	PostIncDecOperationExpression	i ++	481:36:13320:13322	3894791	2	True				
ANR	3894962	Identifier	i		3894791	0					
ANR	3894963	IncDec	++		3894791	1					
ANR	3894964	CompoundStatement		35:41:1012:1012	3894791	3					
ANR	3894965	ExpressionStatement	"zend_ast_destroy_ex ( list -> child [ i ] , free )"	482:5:13332:13373	3894791	0	True				
ANR	3894966	CallExpression	"zend_ast_destroy_ex ( list -> child [ i ] , free )"		3894791	0					
ANR	3894967	Callee	zend_ast_destroy_ex		3894791	0					
ANR	3894968	Identifier	zend_ast_destroy_ex		3894791	0					
ANR	3894969	ArgumentList	list -> child [ i ]		3894791	1					
ANR	3894970	Argument	list -> child [ i ]		3894791	0					
ANR	3894971	ArrayIndexing	list -> child [ i ]		3894791	0					
ANR	3894972	PtrMemberAccess	list -> child		3894791	0					
ANR	3894973	Identifier	list		3894791	0					
ANR	3894974	Identifier	child		3894791	1					
ANR	3894975	Identifier	i		3894791	1					
ANR	3894976	Argument	free		3894791	1					
ANR	3894977	Identifier	free		3894791	0					
ANR	3894978	ElseStatement	else		3894791	0					
ANR	3894979	CompoundStatement		39:4:1084:1137	3894791	0					
ANR	3894980	IdentifierDeclStatement	"uint32_t i , children = zend_ast_get_num_children ( ast ) ;"	485:4:13397:13450	3894791	0	True				
ANR	3894981	IdentifierDecl	i		3894791	0					
ANR	3894982	IdentifierDeclType	uint32_t		3894791	0					
ANR	3894983	Identifier	i		3894791	1					
ANR	3894984	IdentifierDecl	children = zend_ast_get_num_children ( ast )		3894791	1					
ANR	3894985	IdentifierDeclType	uint32_t		3894791	0					
ANR	3894986	Identifier	children		3894791	1					
ANR	3894987	AssignmentExpression	children = zend_ast_get_num_children ( ast )		3894791	2		=			
ANR	3894988	Identifier	children		3894791	0					
ANR	3894989	CallExpression	zend_ast_get_num_children ( ast )		3894791	1					
ANR	3894990	Callee	zend_ast_get_num_children		3894791	0					
ANR	3894991	Identifier	zend_ast_get_num_children		3894791	0					
ANR	3894992	ArgumentList	ast		3894791	1					
ANR	3894993	Argument	ast		3894791	0					
ANR	3894994	Identifier	ast		3894791	0					
ANR	3894995	ForStatement	for ( i = 0 ; i < children ; i ++ )		3894791	1					
ANR	3894996	ForInit	i = 0 ;	486:9:13461:13466	3894791	0	True				
ANR	3894997	AssignmentExpression	i = 0		3894791	0		=			
ANR	3894998	Identifier	i		3894791	0					
ANR	3894999	PrimaryExpression	0		3894791	1					
ANR	3895000	Condition	i < children	486:16:13468:13479	3894791	1	True				
ANR	3895001	RelationalExpression	i < children		3894791	0		<			
ANR	3895002	Identifier	i		3894791	0					
ANR	3895003	Identifier	children		3894791	1					
ANR	3895004	PostIncDecOperationExpression	i ++	486:30:13482:13484	3894791	2	True				
ANR	3895005	Identifier	i		3894791	0					
ANR	3895006	IncDec	++		3894791	1					
ANR	3895007	CompoundStatement		40:35:1174:1174	3894791	3					
ANR	3895008	ExpressionStatement	"zend_ast_destroy_ex ( ast -> child [ i ] , free )"	487:5:13494:13534	3894791	0	True				
ANR	3895009	CallExpression	"zend_ast_destroy_ex ( ast -> child [ i ] , free )"		3894791	0					
ANR	3895010	Callee	zend_ast_destroy_ex		3894791	0					
ANR	3895011	Identifier	zend_ast_destroy_ex		3894791	0					
ANR	3895012	ArgumentList	ast -> child [ i ]		3894791	1					
ANR	3895013	Argument	ast -> child [ i ]		3894791	0					
ANR	3895014	ArrayIndexing	ast -> child [ i ]		3894791	0					
ANR	3895015	PtrMemberAccess	ast -> child		3894791	0					
ANR	3895016	Identifier	ast		3894791	0					
ANR	3895017	Identifier	child		3894791	1					
ANR	3895018	Identifier	i		3894791	1					
ANR	3895019	Argument	free		3894791	1					
ANR	3895020	Identifier	free		3894791	0					
ANR	3895021	IfStatement	if ( free )		3894791	2					
ANR	3895022	Condition	free	492:5:13556:13559	3894791	0	True				
ANR	3895023	Identifier	free		3894791	0					
ANR	3895024	CompoundStatement		46:11:1249:1249	3894791	1					
ANR	3895025	ExpressionStatement	efree ( ast )	493:2:13566:13576	3894791	0	True				
ANR	3895026	CallExpression	efree ( ast )		3894791	0					
ANR	3895027	Callee	efree		3894791	0					
ANR	3895028	Identifier	efree		3894791	0					
ANR	3895029	ArgumentList	ast		3894791	1					
ANR	3895030	Argument	ast		3894791	0					
ANR	3895031	Identifier	ast		3894791	0					
ANR	3895032	ReturnType	static void		3894791	1					
ANR	3895033	Identifier	zend_ast_destroy_ex		3894791	2					
ANR	3895034	ParameterList	"zend_ast * ast , zend_bool free"		3894791	3					
ANR	3895035	Parameter	zend_ast * ast	447:32:12281:12293	3894791	0	True				
ANR	3895036	ParameterType	zend_ast *		3894791	0					
ANR	3895037	Identifier	ast		3894791	1					
ANR	3895038	Parameter	zend_bool free	447:47:12296:12309	3894791	1	True				
ANR	3895039	ParameterType	zend_bool		3894791	0					
ANR	3895040	Identifier	free		3894791	1					
ANR	3895041	CFGEntryNode	ENTRY		3894791		True				
ANR	3895042	CFGExitNode	EXIT		3894791		True				
ANR	3895043	Symbol	* * decl		3894791						
ANR	3895044	Symbol	ast -> kind		3894791						
ANR	3895045	Symbol	ast		3894791						
ANR	3895046	Symbol	decl		3894791						
ANR	3895047	Symbol	* ast		3894791						
ANR	3895048	Symbol	* * list		3894791						
ANR	3895049	Symbol	decl -> doc_comment		3894791						
ANR	3895050	Symbol	children		3894791						
ANR	3895051	Symbol	* * ast		3894791						
ANR	3895052	Symbol	free		3894791						
ANR	3895053	Symbol	zend_ast_get_num_children		3894791						
ANR	3895054	Symbol	decl -> name		3894791						
ANR	3895055	Symbol	* decl -> child		3894791						
ANR	3895056	Symbol	list -> child		3894791						
ANR	3895057	Symbol	i		3894791						
ANR	3895058	Symbol	list		3894791						
ANR	3895059	Symbol	zend_ast_get_list		3894791						
ANR	3895060	Symbol	* i		3894791						
ANR	3895061	Symbol	zend_ast_is_list		3894791						
ANR	3895062	Symbol	* list		3894791						
ANR	3895063	Symbol	decl -> child		3894791						
ANR	3895064	Symbol	* list -> child		3894791						
ANR	3895065	Symbol	* ast -> child		3894791						
ANR	3895066	Symbol	zend_ast_get_zval		3894791						
ANR	3895067	Symbol	ast -> child		3894791						
ANR	3895068	Symbol	* decl		3894791						
ANR	3895069	Symbol	list -> children		3894791						
ANR	3895070	Function	zend_ast_destroy	497:0:13584:13662							
ANR	3895071	FunctionDef	zend_ast_destroy (zend_ast * ast)		3895070	0					
ANR	3895072	CompoundStatement		497:46:13630:13662	3895070	0					
ANR	3895073	ExpressionStatement	"zend_ast_destroy_ex ( ast , 0 )"	498:1:13633:13660	3895070	0	True				
ANR	3895074	CallExpression	"zend_ast_destroy_ex ( ast , 0 )"		3895070	0					
ANR	3895075	Callee	zend_ast_destroy_ex		3895070	0					
ANR	3895076	Identifier	zend_ast_destroy_ex		3895070	0					
ANR	3895077	ArgumentList	ast		3895070	1					
ANR	3895078	Argument	ast		3895070	0					
ANR	3895079	Identifier	ast		3895070	0					
ANR	3895080	Argument	0		3895070	1					
ANR	3895081	PrimaryExpression	0		3895070	0					
ANR	3895082	ReturnType	ZEND_API void		3895070	1					
ANR	3895083	Identifier	zend_ast_destroy		3895070	2					
ANR	3895084	ParameterList	zend_ast * ast		3895070	3					
ANR	3895085	Parameter	zend_ast * ast	497:31:13615:13627	3895070	0	True				
ANR	3895086	ParameterType	zend_ast *		3895070	0					
ANR	3895087	Identifier	ast		3895070	1					
ANR	3895088	CFGEntryNode	ENTRY		3895070		True				
ANR	3895089	CFGExitNode	EXIT		3895070		True				
ANR	3895090	Symbol	ast		3895070						
ANR	3895091	Function	zend_ast_destroy_and_free	500:0:13664:13751							
ANR	3895092	FunctionDef	zend_ast_destroy_and_free (zend_ast * ast)		3895091	0					
ANR	3895093	CompoundStatement		500:55:13719:13751	3895091	0					
ANR	3895094	ExpressionStatement	"zend_ast_destroy_ex ( ast , 1 )"	501:1:13722:13749	3895091	0	True				
ANR	3895095	CallExpression	"zend_ast_destroy_ex ( ast , 1 )"		3895091	0					
ANR	3895096	Callee	zend_ast_destroy_ex		3895091	0					
ANR	3895097	Identifier	zend_ast_destroy_ex		3895091	0					
ANR	3895098	ArgumentList	ast		3895091	1					
ANR	3895099	Argument	ast		3895091	0					
ANR	3895100	Identifier	ast		3895091	0					
ANR	3895101	Argument	1		3895091	1					
ANR	3895102	PrimaryExpression	1		3895091	0					
ANR	3895103	ReturnType	ZEND_API void		3895091	1					
ANR	3895104	Identifier	zend_ast_destroy_and_free		3895091	2					
ANR	3895105	ParameterList	zend_ast * ast		3895091	3					
ANR	3895106	Parameter	zend_ast * ast	500:40:13704:13716	3895091	0	True				
ANR	3895107	ParameterType	zend_ast *		3895091	0					
ANR	3895108	Identifier	ast		3895091	1					
ANR	3895109	CFGEntryNode	ENTRY		3895091		True				
ANR	3895110	CFGExitNode	EXIT		3895091		True				
ANR	3895111	Symbol	ast		3895091						
ANR	3895112	Function	zend_ast_apply	504:0:13754:14117							
ANR	3895113	FunctionDef	"zend_ast_apply (zend_ast * ast , zend_ast_apply_func fn)"		3895112	0					
ANR	3895114	CompoundStatement		504:68:13822:14117	3895112	0					
ANR	3895115	IfStatement	if ( zend_ast_is_list ( ast ) )		3895112	0					
ANR	3895116	Condition	zend_ast_is_list ( ast )	505:5:13829:13849	3895112	0	True				
ANR	3895117	CallExpression	zend_ast_is_list ( ast )		3895112	0					
ANR	3895118	Callee	zend_ast_is_list		3895112	0					
ANR	3895119	Identifier	zend_ast_is_list		3895112	0					
ANR	3895120	ArgumentList	ast		3895112	1					
ANR	3895121	Argument	ast		3895112	0					
ANR	3895122	Identifier	ast		3895112	0					
ANR	3895123	CompoundStatement		4:2:81:91	3895112	1					
ANR	3895124	IdentifierDeclStatement	zend_ast_list * list = zend_ast_get_list ( ast ) ;	506:2:13856:13900	3895112	0	True				
ANR	3895125	IdentifierDecl	* list = zend_ast_get_list ( ast )		3895112	0					
ANR	3895126	IdentifierDeclType	zend_ast_list *		3895112	0					
ANR	3895127	Identifier	list		3895112	1					
ANR	3895128	AssignmentExpression	* list = zend_ast_get_list ( ast )		3895112	2		=			
ANR	3895129	Identifier	list		3895112	0					
ANR	3895130	CallExpression	zend_ast_get_list ( ast )		3895112	1					
ANR	3895131	Callee	zend_ast_get_list		3895112	0					
ANR	3895132	Identifier	zend_ast_get_list		3895112	0					
ANR	3895133	ArgumentList	ast		3895112	1					
ANR	3895134	Argument	ast		3895112	0					
ANR	3895135	Identifier	ast		3895112	0					
ANR	3895136	IdentifierDeclStatement	uint32_t i ;	507:2:13904:13914	3895112	1	True				
ANR	3895137	IdentifierDecl	i		3895112	0					
ANR	3895138	IdentifierDeclType	uint32_t		3895112	0					
ANR	3895139	Identifier	i		3895112	1					
ANR	3895140	ForStatement	for ( i = 0 ; i < list -> children ; ++ i )		3895112	2					
ANR	3895141	ForInit	i = 0 ;	508:7:13923:13928	3895112	0	True				
ANR	3895142	AssignmentExpression	i = 0		3895112	0		=			
ANR	3895143	Identifier	i		3895112	0					
ANR	3895144	PrimaryExpression	0		3895112	1					
ANR	3895145	Condition	i < list -> children	508:14:13930:13947	3895112	1	True				
ANR	3895146	RelationalExpression	i < list -> children		3895112	0		<			
ANR	3895147	Identifier	i		3895112	0					
ANR	3895148	PtrMemberAccess	list -> children		3895112	1					
ANR	3895149	Identifier	list		3895112	0					
ANR	3895150	Identifier	children		3895112	1					
ANR	3895151	UnaryExpression	++ i	508:34:13950:13952	3895112	2	True				
ANR	3895152	IncDec	++		3895112	0					
ANR	3895153	Identifier	i		3895112	1					
ANR	3895154	CompoundStatement		5:39:132:132	3895112	3					
ANR	3895155	ExpressionStatement	fn ( & list -> child [ i ] )	509:3:13960:13979	3895112	0	True				
ANR	3895156	CallExpression	fn ( & list -> child [ i ] )		3895112	0					
ANR	3895157	Callee	fn		3895112	0					
ANR	3895158	Identifier	fn		3895112	0					
ANR	3895159	ArgumentList	& list -> child [ i ]		3895112	1					
ANR	3895160	Argument	& list -> child [ i ]		3895112	0					
ANR	3895161	UnaryOperationExpression	& list -> child [ i ]		3895112	0					
ANR	3895162	UnaryOperator	&		3895112	0					
ANR	3895163	ArrayIndexing	list -> child [ i ]		3895112	1					
ANR	3895164	PtrMemberAccess	list -> child		3895112	0					
ANR	3895165	Identifier	list		3895112	0					
ANR	3895166	Identifier	child		3895112	1					
ANR	3895167	Identifier	i		3895112	1					
ANR	3895168	ElseStatement	else		3895112	0					
ANR	3895169	CompoundStatement		9:2:174:227	3895112	0					
ANR	3895170	IdentifierDeclStatement	"uint32_t i , children = zend_ast_get_num_children ( ast ) ;"	512:2:13997:14050	3895112	0	True				
ANR	3895171	IdentifierDecl	i		3895112	0					
ANR	3895172	IdentifierDeclType	uint32_t		3895112	0					
ANR	3895173	Identifier	i		3895112	1					
ANR	3895174	IdentifierDecl	children = zend_ast_get_num_children ( ast )		3895112	1					
ANR	3895175	IdentifierDeclType	uint32_t		3895112	0					
ANR	3895176	Identifier	children		3895112	1					
ANR	3895177	AssignmentExpression	children = zend_ast_get_num_children ( ast )		3895112	2		=			
ANR	3895178	Identifier	children		3895112	0					
ANR	3895179	CallExpression	zend_ast_get_num_children ( ast )		3895112	1					
ANR	3895180	Callee	zend_ast_get_num_children		3895112	0					
ANR	3895181	Identifier	zend_ast_get_num_children		3895112	0					
ANR	3895182	ArgumentList	ast		3895112	1					
ANR	3895183	Argument	ast		3895112	0					
ANR	3895184	Identifier	ast		3895112	0					
ANR	3895185	ForStatement	for ( i = 0 ; i < children ; ++ i )		3895112	1					
ANR	3895186	ForInit	i = 0 ;	513:7:14059:14064	3895112	0	True				
ANR	3895187	AssignmentExpression	i = 0		3895112	0		=			
ANR	3895188	Identifier	i		3895112	0					
ANR	3895189	PrimaryExpression	0		3895112	1					
ANR	3895190	Condition	i < children	513:14:14066:14077	3895112	1	True				
ANR	3895191	RelationalExpression	i < children		3895112	0		<			
ANR	3895192	Identifier	i		3895112	0					
ANR	3895193	Identifier	children		3895112	1					
ANR	3895194	UnaryExpression	++ i	513:28:14080:14082	3895112	2	True				
ANR	3895195	IncDec	++		3895112	0					
ANR	3895196	Identifier	i		3895112	1					
ANR	3895197	CompoundStatement		10:33:262:262	3895112	3					
ANR	3895198	ExpressionStatement	fn ( & ast -> child [ i ] )	514:3:14090:14108	3895112	0	True				
ANR	3895199	CallExpression	fn ( & ast -> child [ i ] )		3895112	0					
ANR	3895200	Callee	fn		3895112	0					
ANR	3895201	Identifier	fn		3895112	0					
ANR	3895202	ArgumentList	& ast -> child [ i ]		3895112	1					
ANR	3895203	Argument	& ast -> child [ i ]		3895112	0					
ANR	3895204	UnaryOperationExpression	& ast -> child [ i ]		3895112	0					
ANR	3895205	UnaryOperator	&		3895112	0					
ANR	3895206	ArrayIndexing	ast -> child [ i ]		3895112	1					
ANR	3895207	PtrMemberAccess	ast -> child		3895112	0					
ANR	3895208	Identifier	ast		3895112	0					
ANR	3895209	Identifier	child		3895112	1					
ANR	3895210	Identifier	i		3895112	1					
ANR	3895211	ReturnType	ZEND_API void		3895112	1					
ANR	3895212	Identifier	zend_ast_apply		3895112	2					
ANR	3895213	ParameterList	"zend_ast * ast , zend_ast_apply_func fn"		3895112	3					
ANR	3895214	Parameter	zend_ast * ast	504:29:13783:13795	3895112	0	True				
ANR	3895215	ParameterType	zend_ast *		3895112	0					
ANR	3895216	Identifier	ast		3895112	1					
ANR	3895217	Parameter	zend_ast_apply_func fn	504:44:13798:13819	3895112	1	True				
ANR	3895218	ParameterType	zend_ast_apply_func		3895112	0					
ANR	3895219	Identifier	fn		3895112	1					
ANR	3895220	CFGEntryNode	ENTRY		3895112		True				
ANR	3895221	CFGExitNode	EXIT		3895112		True				
ANR	3895222	Symbol	ast		3895112						
ANR	3895223	Symbol	list -> child		3895112						
ANR	3895224	Symbol	fn		3895112						
ANR	3895225	Symbol	i		3895112						
ANR	3895226	Symbol	list		3895112						
ANR	3895227	Symbol	zend_ast_get_list		3895112						
ANR	3895228	Symbol	* ast		3895112						
ANR	3895229	Symbol	zend_ast_is_list		3895112						
ANR	3895230	Symbol	* list		3895112						
ANR	3895231	Symbol	children		3895112						
ANR	3895232	Symbol	ast -> child		3895112						
ANR	3895233	Symbol	zend_ast_get_num_children		3895112						
ANR	3895234	Symbol	list -> children		3895112						
ANR	3895235	DeclStmt									
ANR	3895236	Decl							void	"void ( smart_str * str , zend_ast * ast , int priority , int indent )"	zend_ast_export_ex
ANR	3895237	Function	zend_ast_export_str	556:0:15371:15665							
ANR	3895238	FunctionDef	"zend_ast_export_str (smart_str * str , zend_string * s)"		3895237	0					
ANR	3895239	CompoundStatement		557:0:15435:15665	3895237	0					
ANR	3895240	IdentifierDeclStatement	size_t i ;	558:1:15438:15446	3895237	0	True				
ANR	3895241	IdentifierDecl	i		3895237	0					
ANR	3895242	IdentifierDeclType	size_t		3895237	0					
ANR	3895243	Identifier	i		3895237	1					
ANR	3895244	ForStatement	for ( i = 0 ; i < ZSTR_LEN ( s ) ; i ++ )		3895237	1					
ANR	3895245	ForInit	i = 0 ;	560:6:15455:15460	3895237	0	True				
ANR	3895246	AssignmentExpression	i = 0		3895237	0		=			
ANR	3895247	Identifier	i		3895237	0					
ANR	3895248	PrimaryExpression	0		3895237	1					
ANR	3895249	Condition	i < ZSTR_LEN ( s )	560:13:15462:15476	3895237	1	True				
ANR	3895250	RelationalExpression	i < ZSTR_LEN ( s )		3895237	0		<			
ANR	3895251	Identifier	i		3895237	0					
ANR	3895252	CallExpression	ZSTR_LEN ( s )		3895237	1					
ANR	3895253	Callee	ZSTR_LEN		3895237	0					
ANR	3895254	Identifier	ZSTR_LEN		3895237	0					
ANR	3895255	ArgumentList	s		3895237	1					
ANR	3895256	Argument	s		3895237	0					
ANR	3895257	Identifier	s		3895237	0					
ANR	3895258	PostIncDecOperationExpression	i ++	560:30:15479:15481	3895237	2	True				
ANR	3895259	Identifier	i		3895237	0					
ANR	3895260	IncDec	++		3895237	1					
ANR	3895261	CompoundStatement		5:2:52:84	3895237	3					
ANR	3895262	IdentifierDeclStatement	unsigned char c = ZSTR_VAL ( s ) [ i ] ;	561:2:15488:15520	3895237	0	True				
ANR	3895263	IdentifierDecl	c = ZSTR_VAL ( s ) [ i ]		3895237	0					
ANR	3895264	IdentifierDeclType	unsigned char		3895237	0					
ANR	3895265	Identifier	c		3895237	1					
ANR	3895266	AssignmentExpression	c = ZSTR_VAL ( s ) [ i ]		3895237	2		=			
ANR	3895267	Identifier	c		3895237	0					
ANR	3895268	ArrayIndexing	ZSTR_VAL ( s ) [ i ]		3895237	1					
ANR	3895269	CallExpression	ZSTR_VAL ( s )		3895237	0					
ANR	3895270	Callee	ZSTR_VAL		3895237	0					
ANR	3895271	Identifier	ZSTR_VAL		3895237	0					
ANR	3895272	ArgumentList	s		3895237	1					
ANR	3895273	Argument	s		3895237	0					
ANR	3895274	Identifier	s		3895237	0					
ANR	3895275	Identifier	i		3895237	1					
ANR	3895276	IfStatement	if ( c == '\\'' || c == '\\\\' )		3895237	1					
ANR	3895277	Condition	c == '\\'' || c == '\\\\'	562:6:15528:15549	3895237	0	True				
ANR	3895278	OrExpression	c == '\\'' || c == '\\\\'		3895237	0		||			
ANR	3895279	EqualityExpression	c == '\\''		3895237	0		==			
ANR	3895280	Identifier	c		3895237	0					
ANR	3895281	PrimaryExpression	'\\''		3895237	1					
ANR	3895282	EqualityExpression	c == '\\\\'		3895237	1		==			
ANR	3895283	Identifier	c		3895237	0					
ANR	3895284	PrimaryExpression	'\\\\'		3895237	1					
ANR	3895285	CompoundStatement		6:30:116:116	3895237	1					
ANR	3895286	ExpressionStatement	"smart_str_appendc ( str , '\\\\' )"	563:3:15557:15585	3895237	0	True				
ANR	3895287	CallExpression	"smart_str_appendc ( str , '\\\\' )"		3895237	0					
ANR	3895288	Callee	smart_str_appendc		3895237	0					
ANR	3895289	Identifier	smart_str_appendc		3895237	0					
ANR	3895290	ArgumentList	str		3895237	1					
ANR	3895291	Argument	str		3895237	0					
ANR	3895292	Identifier	str		3895237	0					
ANR	3895293	Argument	'\\\\'		3895237	1					
ANR	3895294	PrimaryExpression	'\\\\'		3895237	0					
ANR	3895295	ExpressionStatement	"smart_str_appendc ( str , c )"	564:3:15590:15615	3895237	1	True				
ANR	3895296	CallExpression	"smart_str_appendc ( str , c )"		3895237	0					
ANR	3895297	Callee	smart_str_appendc		3895237	0					
ANR	3895298	Identifier	smart_str_appendc		3895237	0					
ANR	3895299	ArgumentList	str		3895237	1					
ANR	3895300	Argument	str		3895237	0					
ANR	3895301	Identifier	str		3895237	0					
ANR	3895302	Argument	c		3895237	1					
ANR	3895303	Identifier	c		3895237	0					
ANR	3895304	ElseStatement	else		3895237	0					
ANR	3895305	CompoundStatement		9:9:190:190	3895237	0					
ANR	3895306	ExpressionStatement	"smart_str_appendc ( str , c )"	566:3:15631:15656	3895237	0	True				
ANR	3895307	CallExpression	"smart_str_appendc ( str , c )"		3895237	0					
ANR	3895308	Callee	smart_str_appendc		3895237	0					
ANR	3895309	Identifier	smart_str_appendc		3895237	0					
ANR	3895310	ArgumentList	str		3895237	1					
ANR	3895311	Argument	str		3895237	0					
ANR	3895312	Identifier	str		3895237	0					
ANR	3895313	Argument	c		3895237	1					
ANR	3895314	Identifier	c		3895237	0					
ANR	3895315	ReturnType	static void		3895237	1					
ANR	3895316	Identifier	zend_ast_export_str		3895237	2					
ANR	3895317	ParameterList	"smart_str * str , zend_string * s"		3895237	3					
ANR	3895318	Parameter	smart_str * str	556:32:15403:15416	3895237	0	True				
ANR	3895319	ParameterType	smart_str *		3895237	0					
ANR	3895320	Identifier	str		3895237	1					
ANR	3895321	Parameter	zend_string * s	556:48:15419:15432	3895237	1	True				
ANR	3895322	ParameterType	zend_string *		3895237	0					
ANR	3895323	Identifier	s		3895237	1					
ANR	3895324	CFGEntryNode	ENTRY		3895237		True				
ANR	3895325	CFGExitNode	EXIT		3895237		True				
ANR	3895326	Symbol	str		3895237						
ANR	3895327	Symbol	s		3895237						
ANR	3895328	Symbol	c		3895237						
ANR	3895329	Symbol	* i		3895237						
ANR	3895330	Symbol	ZSTR_LEN		3895237						
ANR	3895331	Symbol	i		3895237						
ANR	3895332	Symbol	ZSTR_VAL		3895237						
ANR	3895333	Symbol	* ZSTR_VAL		3895237						
ANR	3895334	Function	zend_ast_export_qstr	571:0:15668:16581							
ANR	3895335	FunctionDef	"zend_ast_export_qstr (smart_str * str , char quote , zend_string * s)"		3895334	0					
ANR	3895336	CompoundStatement		572:0:15745:16581	3895334	0					
ANR	3895337	IdentifierDeclStatement	size_t i ;	573:1:15748:15756	3895334	0	True				
ANR	3895338	IdentifierDecl	i		3895334	0					
ANR	3895339	IdentifierDeclType	size_t		3895334	0					
ANR	3895340	Identifier	i		3895334	1					
ANR	3895341	ForStatement	for ( i = 0 ; i < ZSTR_LEN ( s ) ; i ++ )		3895334	1					
ANR	3895342	ForInit	i = 0 ;	575:6:15765:15770	3895334	0	True				
ANR	3895343	AssignmentExpression	i = 0		3895334	0		=			
ANR	3895344	Identifier	i		3895334	0					
ANR	3895345	PrimaryExpression	0		3895334	1					
ANR	3895346	Condition	i < ZSTR_LEN ( s )	575:13:15772:15786	3895334	1	True				
ANR	3895347	RelationalExpression	i < ZSTR_LEN ( s )		3895334	0		<			
ANR	3895348	Identifier	i		3895334	0					
ANR	3895349	CallExpression	ZSTR_LEN ( s )		3895334	1					
ANR	3895350	Callee	ZSTR_LEN		3895334	0					
ANR	3895351	Identifier	ZSTR_LEN		3895334	0					
ANR	3895352	ArgumentList	s		3895334	1					
ANR	3895353	Argument	s		3895334	0					
ANR	3895354	Identifier	s		3895334	0					
ANR	3895355	PostIncDecOperationExpression	i ++	575:30:15789:15791	3895334	2	True				
ANR	3895356	Identifier	i		3895334	0					
ANR	3895357	IncDec	++		3895334	1					
ANR	3895358	CompoundStatement		5:2:52:84	3895334	3					
ANR	3895359	IdentifierDeclStatement	unsigned char c = ZSTR_VAL ( s ) [ i ] ;	576:2:15798:15830	3895334	0	True				
ANR	3895360	IdentifierDecl	c = ZSTR_VAL ( s ) [ i ]		3895334	0					
ANR	3895361	IdentifierDeclType	unsigned char		3895334	0					
ANR	3895362	Identifier	c		3895334	1					
ANR	3895363	AssignmentExpression	c = ZSTR_VAL ( s ) [ i ]		3895334	2		=			
ANR	3895364	Identifier	c		3895334	0					
ANR	3895365	ArrayIndexing	ZSTR_VAL ( s ) [ i ]		3895334	1					
ANR	3895366	CallExpression	ZSTR_VAL ( s )		3895334	0					
ANR	3895367	Callee	ZSTR_VAL		3895334	0					
ANR	3895368	Identifier	ZSTR_VAL		3895334	0					
ANR	3895369	ArgumentList	s		3895334	1					
ANR	3895370	Argument	s		3895334	0					
ANR	3895371	Identifier	s		3895334	0					
ANR	3895372	Identifier	i		3895334	1					
ANR	3895373	IfStatement	if ( c < ' ' )		3895334	1					
ANR	3895374	Condition	c < ' '	577:6:15838:15844	3895334	0	True				
ANR	3895375	RelationalExpression	c < ' '		3895334	0		<			
ANR	3895376	Identifier	c		3895334	0					
ANR	3895377	PrimaryExpression	' '		3895334	1					
ANR	3895378	CompoundStatement		6:15:101:101	3895334	1					
ANR	3895379	SwitchStatement	switch ( c )		3895334	0					
ANR	3895380	Condition	c	578:11:15860:15860	3895334	0	True				
ANR	3895381	Identifier	c		3895334	0					
ANR	3895382	CompoundStatement		7:14:117:117	3895334	1					
ANR	3895383	Label	case '\\n' :	579:4:15869:15878	3895334	0	True				
ANR	3895384	ExpressionStatement	"smart_str_appends ( str , ""\\\\n"" )"	580:5:15885:15914	3895334	1	True				
ANR	3895385	CallExpression	"smart_str_appends ( str , ""\\\\n"" )"		3895334	0					
ANR	3895386	Callee	smart_str_appends		3895334	0					
ANR	3895387	Identifier	smart_str_appends		3895334	0					
ANR	3895388	ArgumentList	str		3895334	1					
ANR	3895389	Argument	str		3895334	0					
ANR	3895390	Identifier	str		3895334	0					
ANR	3895391	Argument	"""\\\\n"""		3895334	1					
ANR	3895392	PrimaryExpression	"""\\\\n"""		3895334	0					
ANR	3895393	BreakStatement	break ;	581:5:15921:15926	3895334	2	True				
ANR	3895394	Label	case '\\r' :	582:4:15932:15941	3895334	3	True				
ANR	3895395	ExpressionStatement	"smart_str_appends ( str , ""\\\\r"" )"	583:5:15948:15977	3895334	4	True				
ANR	3895396	CallExpression	"smart_str_appends ( str , ""\\\\r"" )"		3895334	0					
ANR	3895397	Callee	smart_str_appends		3895334	0					
ANR	3895398	Identifier	smart_str_appends		3895334	0					
ANR	3895399	ArgumentList	str		3895334	1					
ANR	3895400	Argument	str		3895334	0					
ANR	3895401	Identifier	str		3895334	0					
ANR	3895402	Argument	"""\\\\r"""		3895334	1					
ANR	3895403	PrimaryExpression	"""\\\\r"""		3895334	0					
ANR	3895404	BreakStatement	break ;	584:5:15984:15989	3895334	5	True				
ANR	3895405	Label	case '\\t' :	585:4:15995:16004	3895334	6	True				
ANR	3895406	ExpressionStatement	"smart_str_appends ( str , ""\\\\t"" )"	586:5:16011:16040	3895334	7	True				
ANR	3895407	CallExpression	"smart_str_appends ( str , ""\\\\t"" )"		3895334	0					
ANR	3895408	Callee	smart_str_appends		3895334	0					
ANR	3895409	Identifier	smart_str_appends		3895334	0					
ANR	3895410	ArgumentList	str		3895334	1					
ANR	3895411	Argument	str		3895334	0					
ANR	3895412	Identifier	str		3895334	0					
ANR	3895413	Argument	"""\\\\t"""		3895334	1					
ANR	3895414	PrimaryExpression	"""\\\\t"""		3895334	0					
ANR	3895415	BreakStatement	break ;	587:5:16047:16052	3895334	8	True				
ANR	3895416	Label	case '\\f' :	588:4:16058:16067	3895334	9	True				
ANR	3895417	ExpressionStatement	"smart_str_appends ( str , ""\\\\f"" )"	589:5:16074:16103	3895334	10	True				
ANR	3895418	CallExpression	"smart_str_appends ( str , ""\\\\f"" )"		3895334	0					
ANR	3895419	Callee	smart_str_appends		3895334	0					
ANR	3895420	Identifier	smart_str_appends		3895334	0					
ANR	3895421	ArgumentList	str		3895334	1					
ANR	3895422	Argument	str		3895334	0					
ANR	3895423	Identifier	str		3895334	0					
ANR	3895424	Argument	"""\\\\f"""		3895334	1					
ANR	3895425	PrimaryExpression	"""\\\\f"""		3895334	0					
ANR	3895426	BreakStatement	break ;	590:5:16110:16115	3895334	11	True				
ANR	3895427	Label	case '\\v' :	591:4:16121:16130	3895334	12	True				
ANR	3895428	ExpressionStatement	"smart_str_appends ( str , ""\\\\v"" )"	592:5:16137:16166	3895334	13	True				
ANR	3895429	CallExpression	"smart_str_appends ( str , ""\\\\v"" )"		3895334	0					
ANR	3895430	Callee	smart_str_appends		3895334	0					
ANR	3895431	Identifier	smart_str_appends		3895334	0					
ANR	3895432	ArgumentList	str		3895334	1					
ANR	3895433	Argument	str		3895334	0					
ANR	3895434	Identifier	str		3895334	0					
ANR	3895435	Argument	"""\\\\v"""		3895334	1					
ANR	3895436	PrimaryExpression	"""\\\\v"""		3895334	0					
ANR	3895437	BreakStatement	break ;	593:5:16173:16178	3895334	14	True				
ANR	3895438	Label	case VK_ESCAPE :	595:4:16202:16216	3895334	15	True				
ANR	3895439	Identifier	VK_ESCAPE		3895334	0					
ANR	3895440	ExpressionStatement	"smart_str_appends ( str , ""\\\\e"" )"	599:5:16251:16280	3895334	16	True				
ANR	3895441	CallExpression	"smart_str_appends ( str , ""\\\\e"" )"		3895334	0					
ANR	3895442	Callee	smart_str_appends		3895334	0					
ANR	3895443	Identifier	smart_str_appends		3895334	0					
ANR	3895444	ArgumentList	str		3895334	1					
ANR	3895445	Argument	str		3895334	0					
ANR	3895446	Identifier	str		3895334	0					
ANR	3895447	Argument	"""\\\\e"""		3895334	1					
ANR	3895448	PrimaryExpression	"""\\\\e"""		3895334	0					
ANR	3895449	BreakStatement	break ;	600:5:16287:16292	3895334	17	True				
ANR	3895450	Label	default :	601:4:16298:16305	3895334	18	True				
ANR	3895451	Identifier	default		3895334	0					
ANR	3895452	ExpressionStatement	"smart_str_appends ( str , ""\\\\0"" )"	602:5:16312:16341	3895334	19	True				
ANR	3895453	CallExpression	"smart_str_appends ( str , ""\\\\0"" )"		3895334	0					
ANR	3895454	Callee	smart_str_appends		3895334	0					
ANR	3895455	Identifier	smart_str_appends		3895334	0					
ANR	3895456	ArgumentList	str		3895334	1					
ANR	3895457	Argument	str		3895334	0					
ANR	3895458	Identifier	str		3895334	0					
ANR	3895459	Argument	"""\\\\0"""		3895334	1					
ANR	3895460	PrimaryExpression	"""\\\\0"""		3895334	0					
ANR	3895461	ExpressionStatement	"smart_str_appendc ( str , '0' + ( c / 8 ) )"	603:5:16348:16385	3895334	20	True				
ANR	3895462	CallExpression	"smart_str_appendc ( str , '0' + ( c / 8 ) )"		3895334	0					
ANR	3895463	Callee	smart_str_appendc		3895334	0					
ANR	3895464	Identifier	smart_str_appendc		3895334	0					
ANR	3895465	ArgumentList	str		3895334	1					
ANR	3895466	Argument	str		3895334	0					
ANR	3895467	Identifier	str		3895334	0					
ANR	3895468	Argument	'0' + ( c / 8 )		3895334	1					
ANR	3895469	AdditiveExpression	'0' + ( c / 8 )		3895334	0		+			
ANR	3895470	PrimaryExpression	'0'		3895334	0					
ANR	3895471	MultiplicativeExpression	c / 8		3895334	1		/			
ANR	3895472	Identifier	c		3895334	0					
ANR	3895473	PrimaryExpression	8		3895334	1					
ANR	3895474	ExpressionStatement	"smart_str_appendc ( str , '0' + ( c % 8 ) )"	604:5:16392:16429	3895334	21	True				
ANR	3895475	CallExpression	"smart_str_appendc ( str , '0' + ( c % 8 ) )"		3895334	0					
ANR	3895476	Callee	smart_str_appendc		3895334	0					
ANR	3895477	Identifier	smart_str_appendc		3895334	0					
ANR	3895478	ArgumentList	str		3895334	1					
ANR	3895479	Argument	str		3895334	0					
ANR	3895480	Identifier	str		3895334	0					
ANR	3895481	Argument	'0' + ( c % 8 )		3895334	1					
ANR	3895482	AdditiveExpression	'0' + ( c % 8 )		3895334	0		+			
ANR	3895483	PrimaryExpression	'0'		3895334	0					
ANR	3895484	MultiplicativeExpression	c % 8		3895334	1		%			
ANR	3895485	Identifier	c		3895334	0					
ANR	3895486	PrimaryExpression	8		3895334	1					
ANR	3895487	BreakStatement	break ;	605:5:16436:16441	3895334	22	True				
ANR	3895488	ElseStatement	else		3895334	0					
ANR	3895489	CompoundStatement		36:9:711:711	3895334	0					
ANR	3895490	IfStatement	if ( c == quote || c == '$' || c == '\\\\' )		3895334	0					
ANR	3895491	Condition	c == quote || c == '$' || c == '\\\\'	608:7:16466:16500	3895334	0	True				
ANR	3895492	OrExpression	c == quote || c == '$' || c == '\\\\'		3895334	0		||			
ANR	3895493	EqualityExpression	c == quote		3895334	0		==			
ANR	3895494	Identifier	c		3895334	0					
ANR	3895495	Identifier	quote		3895334	1					
ANR	3895496	OrExpression	c == '$' || c == '\\\\'		3895334	1		||			
ANR	3895497	EqualityExpression	c == '$'		3895334	0		==			
ANR	3895498	Identifier	c		3895334	0					
ANR	3895499	PrimaryExpression	'$'		3895334	1					
ANR	3895500	EqualityExpression	c == '\\\\'		3895334	1		==			
ANR	3895501	Identifier	c		3895334	0					
ANR	3895502	PrimaryExpression	'\\\\'		3895334	1					
ANR	3895503	CompoundStatement		37:44:757:757	3895334	1					
ANR	3895504	ExpressionStatement	"smart_str_appendc ( str , '\\\\' )"	609:4:16509:16537	3895334	0	True				
ANR	3895505	CallExpression	"smart_str_appendc ( str , '\\\\' )"		3895334	0					
ANR	3895506	Callee	smart_str_appendc		3895334	0					
ANR	3895507	Identifier	smart_str_appendc		3895334	0					
ANR	3895508	ArgumentList	str		3895334	1					
ANR	3895509	Argument	str		3895334	0					
ANR	3895510	Identifier	str		3895334	0					
ANR	3895511	Argument	'\\\\'		3895334	1					
ANR	3895512	PrimaryExpression	'\\\\'		3895334	0					
ANR	3895513	ExpressionStatement	"smart_str_appendc ( str , c )"	611:3:16547:16572	3895334	1	True				
ANR	3895514	CallExpression	"smart_str_appendc ( str , c )"		3895334	0					
ANR	3895515	Callee	smart_str_appendc		3895334	0					
ANR	3895516	Identifier	smart_str_appendc		3895334	0					
ANR	3895517	ArgumentList	str		3895334	1					
ANR	3895518	Argument	str		3895334	0					
ANR	3895519	Identifier	str		3895334	0					
ANR	3895520	Argument	c		3895334	1					
ANR	3895521	Identifier	c		3895334	0					
ANR	3895522	ReturnType	static void		3895334	1					
ANR	3895523	Identifier	zend_ast_export_qstr		3895334	2					
ANR	3895524	ParameterList	"smart_str * str , char quote , zend_string * s"		3895334	3					
ANR	3895525	Parameter	smart_str * str	571:33:15701:15714	3895334	0	True				
ANR	3895526	ParameterType	smart_str *		3895334	0					
ANR	3895527	Identifier	str		3895334	1					
ANR	3895528	Parameter	char quote	571:49:15717:15726	3895334	1	True				
ANR	3895529	ParameterType	char		3895334	0					
ANR	3895530	Identifier	quote		3895334	1					
ANR	3895531	Parameter	zend_string * s	571:61:15729:15742	3895334	2	True				
ANR	3895532	ParameterType	zend_string *		3895334	0					
ANR	3895533	Identifier	s		3895334	1					
ANR	3895534	CFGEntryNode	ENTRY		3895334		True				
ANR	3895535	CFGExitNode	EXIT		3895334		True				
ANR	3895536	Symbol	str		3895334						
ANR	3895537	Symbol	quote		3895334						
ANR	3895538	Symbol	s		3895334						
ANR	3895539	Symbol	c		3895334						
ANR	3895540	Symbol	* i		3895334						
ANR	3895541	Symbol	ZSTR_LEN		3895334						
ANR	3895542	Symbol	i		3895334						
ANR	3895543	Symbol	ZSTR_VAL		3895334						
ANR	3895544	Symbol	* ZSTR_VAL		3895334						
ANR	3895545	Function	zend_ast_export_indent	616:0:16584:16720							
ANR	3895546	FunctionDef	"zend_ast_export_indent (smart_str * str , int indent)"		3895545	0					
ANR	3895547	CompoundStatement		617:0:16647:16720	3895545	0					
ANR	3895548	WhileStatement	while ( indent > 0 )		3895545	0					
ANR	3895549	Condition	indent > 0	618:8:16657:16666	3895545	0	True				
ANR	3895550	RelationalExpression	indent > 0		3895545	0		>			
ANR	3895551	Identifier	indent		3895545	0					
ANR	3895552	PrimaryExpression	0		3895545	1					
ANR	3895553	CompoundStatement		2:20:21:21	3895545	1					
ANR	3895554	ExpressionStatement	"smart_str_appends ( str , ""    "" )"	619:2:16673:16703	3895545	0	True				
ANR	3895555	CallExpression	"smart_str_appends ( str , ""    "" )"		3895545	0					
ANR	3895556	Callee	smart_str_appends		3895545	0					
ANR	3895557	Identifier	smart_str_appends		3895545	0					
ANR	3895558	ArgumentList	str		3895545	1					
ANR	3895559	Argument	str		3895545	0					
ANR	3895560	Identifier	str		3895545	0					
ANR	3895561	Argument	"""    """		3895545	1					
ANR	3895562	PrimaryExpression	"""    """		3895545	0					
ANR	3895563	ExpressionStatement	indent --	620:2:16707:16715	3895545	1	True				
ANR	3895564	PostIncDecOperationExpression	indent --		3895545	0					
ANR	3895565	Identifier	indent		3895545	0					
ANR	3895566	IncDec	--		3895545	1					
ANR	3895567	ReturnType	static void		3895545	1					
ANR	3895568	Identifier	zend_ast_export_indent		3895545	2					
ANR	3895569	ParameterList	"smart_str * str , int indent"		3895545	3					
ANR	3895570	Parameter	smart_str * str	616:35:16619:16632	3895545	0	True				
ANR	3895571	ParameterType	smart_str *		3895545	0					
ANR	3895572	Identifier	str		3895545	1					
ANR	3895573	Parameter	int indent	616:51:16635:16644	3895545	1	True				
ANR	3895574	ParameterType	int		3895545	0					
ANR	3895575	Identifier	indent		3895545	1					
ANR	3895576	CFGEntryNode	ENTRY		3895545		True				
ANR	3895577	CFGExitNode	EXIT		3895545		True				
ANR	3895578	Symbol	str		3895545						
ANR	3895579	Symbol	indent		3895545						
ANR	3895580	Function	zend_ast_export_name	624:0:16723:17029							
ANR	3895581	FunctionDef	"zend_ast_export_name (smart_str * str , zend_ast * ast , int priority , int indent)"		3895580	0					
ANR	3895582	CompoundStatement		625:0:16813:17029	3895580	0					
ANR	3895583	IfStatement	if ( ast -> kind == ZEND_AST_ZVAL )		3895580	0					
ANR	3895584	Condition	ast -> kind == ZEND_AST_ZVAL	626:5:16820:16845	3895580	0	True				
ANR	3895585	EqualityExpression	ast -> kind == ZEND_AST_ZVAL		3895580	0		==			
ANR	3895586	PtrMemberAccess	ast -> kind		3895580	0					
ANR	3895587	Identifier	ast		3895580	0					
ANR	3895588	Identifier	kind		3895580	1					
ANR	3895589	Identifier	ZEND_AST_ZVAL		3895580	1					
ANR	3895590	CompoundStatement		3:2:38:71	3895580	1					
ANR	3895591	IdentifierDeclStatement	zval * zv = zend_ast_get_zval ( ast ) ;	627:2:16852:16885	3895580	0	True				
ANR	3895592	IdentifierDecl	* zv = zend_ast_get_zval ( ast )		3895580	0					
ANR	3895593	IdentifierDeclType	zval *		3895580	0					
ANR	3895594	Identifier	zv		3895580	1					
ANR	3895595	AssignmentExpression	* zv = zend_ast_get_zval ( ast )		3895580	2		=			
ANR	3895596	Identifier	zv		3895580	0					
ANR	3895597	CallExpression	zend_ast_get_zval ( ast )		3895580	1					
ANR	3895598	Callee	zend_ast_get_zval		3895580	0					
ANR	3895599	Identifier	zend_ast_get_zval		3895580	0					
ANR	3895600	ArgumentList	ast		3895580	1					
ANR	3895601	Argument	ast		3895580	0					
ANR	3895602	Identifier	ast		3895580	0					
ANR	3895603	IfStatement	if ( Z_TYPE_P ( zv ) == IS_STRING )		3895580	1					
ANR	3895604	Condition	Z_TYPE_P ( zv ) == IS_STRING	629:6:16894:16918	3895580	0	True				
ANR	3895605	EqualityExpression	Z_TYPE_P ( zv ) == IS_STRING		3895580	0		==			
ANR	3895606	CallExpression	Z_TYPE_P ( zv )		3895580	0					
ANR	3895607	Callee	Z_TYPE_P		3895580	0					
ANR	3895608	Identifier	Z_TYPE_P		3895580	0					
ANR	3895609	ArgumentList	zv		3895580	1					
ANR	3895610	Argument	zv		3895580	0					
ANR	3895611	Identifier	zv		3895580	0					
ANR	3895612	Identifier	IS_STRING		3895580	1					
ANR	3895613	CompoundStatement		5:33:107:107	3895580	1					
ANR	3895614	ExpressionStatement	"smart_str_append ( str , Z_STR_P ( zv ) )"	630:3:16926:16960	3895580	0	True				
ANR	3895615	CallExpression	"smart_str_append ( str , Z_STR_P ( zv ) )"		3895580	0					
ANR	3895616	Callee	smart_str_append		3895580	0					
ANR	3895617	Identifier	smart_str_append		3895580	0					
ANR	3895618	ArgumentList	str		3895580	1					
ANR	3895619	Argument	str		3895580	0					
ANR	3895620	Identifier	str		3895580	0					
ANR	3895621	Argument	Z_STR_P ( zv )		3895580	1					
ANR	3895622	CallExpression	Z_STR_P ( zv )		3895580	0					
ANR	3895623	Callee	Z_STR_P		3895580	0					
ANR	3895624	Identifier	Z_STR_P		3895580	0					
ANR	3895625	ArgumentList	zv		3895580	1					
ANR	3895626	Argument	zv		3895580	0					
ANR	3895627	Identifier	zv		3895580	0					
ANR	3895628	ReturnStatement	return ;	631:3:16965:16971	3895580	1	True				
ANR	3895629	ExpressionStatement	"zend_ast_export_ex ( str , ast , priority , indent )"	634:1:16981:17027	3895580	1	True				
ANR	3895630	CallExpression	"zend_ast_export_ex ( str , ast , priority , indent )"		3895580	0					
ANR	3895631	Callee	zend_ast_export_ex		3895580	0					
ANR	3895632	Identifier	zend_ast_export_ex		3895580	0					
ANR	3895633	ArgumentList	str		3895580	1					
ANR	3895634	Argument	str		3895580	0					
ANR	3895635	Identifier	str		3895580	0					
ANR	3895636	Argument	ast		3895580	1					
ANR	3895637	Identifier	ast		3895580	0					
ANR	3895638	Argument	priority		3895580	2					
ANR	3895639	Identifier	priority		3895580	0					
ANR	3895640	Argument	indent		3895580	3					
ANR	3895641	Identifier	indent		3895580	0					
ANR	3895642	ReturnType	static void		3895580	1					
ANR	3895643	Identifier	zend_ast_export_name		3895580	2					
ANR	3895644	ParameterList	"smart_str * str , zend_ast * ast , int priority , int indent"		3895580	3					
ANR	3895645	Parameter	smart_str * str	624:33:16756:16769	3895580	0	True				
ANR	3895646	ParameterType	smart_str *		3895580	0					
ANR	3895647	Identifier	str		3895580	1					
ANR	3895648	Parameter	zend_ast * ast	624:49:16772:16784	3895580	1	True				
ANR	3895649	ParameterType	zend_ast *		3895580	0					
ANR	3895650	Identifier	ast		3895580	1					
ANR	3895651	Parameter	int priority	624:64:16787:16798	3895580	2	True				
ANR	3895652	ParameterType	int		3895580	0					
ANR	3895653	Identifier	priority		3895580	1					
ANR	3895654	Parameter	int indent	624:78:16801:16810	3895580	3	True				
ANR	3895655	ParameterType	int		3895580	0					
ANR	3895656	Identifier	indent		3895580	1					
ANR	3895657	CFGEntryNode	ENTRY		3895580		True				
ANR	3895658	CFGExitNode	EXIT		3895580		True				
ANR	3895659	Symbol	str		3895580						
ANR	3895660	Symbol	ast -> kind		3895580						
ANR	3895661	Symbol	ast		3895580						
ANR	3895662	Symbol	* ast		3895580						
ANR	3895663	Symbol	indent		3895580						
ANR	3895664	Symbol	ZEND_AST_ZVAL		3895580						
ANR	3895665	Symbol	IS_STRING		3895580						
ANR	3895666	Symbol	Z_STR_P		3895580						
ANR	3895667	Symbol	priority		3895580						
ANR	3895668	Symbol	zv		3895580						
ANR	3895669	Symbol	zend_ast_get_zval		3895580						
ANR	3895670	Symbol	Z_TYPE_P		3895580						
ANR	3895671	Function	zend_ast_export_ns_name	637:0:17032:17517							
ANR	3895672	FunctionDef	"zend_ast_export_ns_name (smart_str * str , zend_ast * ast , int priority , int indent)"		3895671	0					
ANR	3895673	CompoundStatement		638:0:17125:17517	3895671	0					
ANR	3895674	IfStatement	if ( ast -> kind == ZEND_AST_ZVAL )		3895671	0					
ANR	3895675	Condition	ast -> kind == ZEND_AST_ZVAL	639:5:17132:17157	3895671	0	True				
ANR	3895676	EqualityExpression	ast -> kind == ZEND_AST_ZVAL		3895671	0		==			
ANR	3895677	PtrMemberAccess	ast -> kind		3895671	0					
ANR	3895678	Identifier	ast		3895671	0					
ANR	3895679	Identifier	kind		3895671	1					
ANR	3895680	Identifier	ZEND_AST_ZVAL		3895671	1					
ANR	3895681	CompoundStatement		3:2:38:71	3895671	1					
ANR	3895682	IdentifierDeclStatement	zval * zv = zend_ast_get_zval ( ast ) ;	640:2:17164:17197	3895671	0	True				
ANR	3895683	IdentifierDecl	* zv = zend_ast_get_zval ( ast )		3895671	0					
ANR	3895684	IdentifierDeclType	zval *		3895671	0					
ANR	3895685	Identifier	zv		3895671	1					
ANR	3895686	AssignmentExpression	* zv = zend_ast_get_zval ( ast )		3895671	2		=			
ANR	3895687	Identifier	zv		3895671	0					
ANR	3895688	CallExpression	zend_ast_get_zval ( ast )		3895671	1					
ANR	3895689	Callee	zend_ast_get_zval		3895671	0					
ANR	3895690	Identifier	zend_ast_get_zval		3895671	0					
ANR	3895691	ArgumentList	ast		3895671	1					
ANR	3895692	Argument	ast		3895671	0					
ANR	3895693	Identifier	ast		3895671	0					
ANR	3895694	IfStatement	if ( Z_TYPE_P ( zv ) == IS_STRING )		3895671	1					
ANR	3895695	Condition	Z_TYPE_P ( zv ) == IS_STRING	642:6:17206:17230	3895671	0	True				
ANR	3895696	EqualityExpression	Z_TYPE_P ( zv ) == IS_STRING		3895671	0		==			
ANR	3895697	CallExpression	Z_TYPE_P ( zv )		3895671	0					
ANR	3895698	Callee	Z_TYPE_P		3895671	0					
ANR	3895699	Identifier	Z_TYPE_P		3895671	0					
ANR	3895700	ArgumentList	zv		3895671	1					
ANR	3895701	Argument	zv		3895671	0					
ANR	3895702	Identifier	zv		3895671	0					
ANR	3895703	Identifier	IS_STRING		3895671	1					
ANR	3895704	CompoundStatement		5:33:107:107	3895671	1					
ANR	3895705	IfStatement	if ( ast -> attr == ZEND_NAME_FQ )		3895671	0					
ANR	3895706	Condition	ast -> attr == ZEND_NAME_FQ	643:10:17245:17269	3895671	0	True				
ANR	3895707	EqualityExpression	ast -> attr == ZEND_NAME_FQ		3895671	0		==			
ANR	3895708	PtrMemberAccess	ast -> attr		3895671	0					
ANR	3895709	Identifier	ast		3895671	0					
ANR	3895710	Identifier	attr		3895671	1					
ANR	3895711	Identifier	ZEND_NAME_FQ		3895671	1					
ANR	3895712	CompoundStatement		6:37:146:146	3895671	1					
ANR	3895713	ExpressionStatement	"smart_str_appendc ( str , '\\\\' )"	644:4:17278:17306	3895671	0	True				
ANR	3895714	CallExpression	"smart_str_appendc ( str , '\\\\' )"		3895671	0					
ANR	3895715	Callee	smart_str_appendc		3895671	0					
ANR	3895716	Identifier	smart_str_appendc		3895671	0					
ANR	3895717	ArgumentList	str		3895671	1					
ANR	3895718	Argument	str		3895671	0					
ANR	3895719	Identifier	str		3895671	0					
ANR	3895720	Argument	'\\\\'		3895671	1					
ANR	3895721	PrimaryExpression	'\\\\'		3895671	0					
ANR	3895722	ElseStatement	else		3895671	0					
ANR	3895723	IfStatement	if ( ast -> attr == ZEND_NAME_RELATIVE )		3895671	0					
ANR	3895724	Condition	ast -> attr == ZEND_NAME_RELATIVE	645:17:17325:17355	3895671	0	True				
ANR	3895725	EqualityExpression	ast -> attr == ZEND_NAME_RELATIVE		3895671	0		==			
ANR	3895726	PtrMemberAccess	ast -> attr		3895671	0					
ANR	3895727	Identifier	ast		3895671	0					
ANR	3895728	Identifier	attr		3895671	1					
ANR	3895729	Identifier	ZEND_NAME_RELATIVE		3895671	1					
ANR	3895730	CompoundStatement		8:50:232:232	3895671	1					
ANR	3895731	ExpressionStatement	"smart_str_appends ( str , ""namespace\\\\"" )"	646:4:17364:17401	3895671	0	True				
ANR	3895732	CallExpression	"smart_str_appends ( str , ""namespace\\\\"" )"		3895671	0					
ANR	3895733	Callee	smart_str_appends		3895671	0					
ANR	3895734	Identifier	smart_str_appends		3895671	0					
ANR	3895735	ArgumentList	str		3895671	1					
ANR	3895736	Argument	str		3895671	0					
ANR	3895737	Identifier	str		3895671	0					
ANR	3895738	Argument	"""namespace\\\\"""		3895671	1					
ANR	3895739	PrimaryExpression	"""namespace\\\\"""		3895671	0					
ANR	3895740	ExpressionStatement	"smart_str_append ( str , Z_STR_P ( zv ) )"	648:3:17414:17448	3895671	1	True				
ANR	3895741	CallExpression	"smart_str_append ( str , Z_STR_P ( zv ) )"		3895671	0					
ANR	3895742	Callee	smart_str_append		3895671	0					
ANR	3895743	Identifier	smart_str_append		3895671	0					
ANR	3895744	ArgumentList	str		3895671	1					
ANR	3895745	Argument	str		3895671	0					
ANR	3895746	Identifier	str		3895671	0					
ANR	3895747	Argument	Z_STR_P ( zv )		3895671	1					
ANR	3895748	CallExpression	Z_STR_P ( zv )		3895671	0					
ANR	3895749	Callee	Z_STR_P		3895671	0					
ANR	3895750	Identifier	Z_STR_P		3895671	0					
ANR	3895751	ArgumentList	zv		3895671	1					
ANR	3895752	Argument	zv		3895671	0					
ANR	3895753	Identifier	zv		3895671	0					
ANR	3895754	ReturnStatement	return ;	649:3:17453:17459	3895671	2	True				
ANR	3895755	ExpressionStatement	"zend_ast_export_ex ( str , ast , priority , indent )"	652:1:17469:17515	3895671	1	True				
ANR	3895756	CallExpression	"zend_ast_export_ex ( str , ast , priority , indent )"		3895671	0					
ANR	3895757	Callee	zend_ast_export_ex		3895671	0					
ANR	3895758	Identifier	zend_ast_export_ex		3895671	0					
ANR	3895759	ArgumentList	str		3895671	1					
ANR	3895760	Argument	str		3895671	0					
ANR	3895761	Identifier	str		3895671	0					
ANR	3895762	Argument	ast		3895671	1					
ANR	3895763	Identifier	ast		3895671	0					
ANR	3895764	Argument	priority		3895671	2					
ANR	3895765	Identifier	priority		3895671	0					
ANR	3895766	Argument	indent		3895671	3					
ANR	3895767	Identifier	indent		3895671	0					
ANR	3895768	ReturnType	static void		3895671	1					
ANR	3895769	Identifier	zend_ast_export_ns_name		3895671	2					
ANR	3895770	ParameterList	"smart_str * str , zend_ast * ast , int priority , int indent"		3895671	3					
ANR	3895771	Parameter	smart_str * str	637:36:17068:17081	3895671	0	True				
ANR	3895772	ParameterType	smart_str *		3895671	0					
ANR	3895773	Identifier	str		3895671	1					
ANR	3895774	Parameter	zend_ast * ast	637:52:17084:17096	3895671	1	True				
ANR	3895775	ParameterType	zend_ast *		3895671	0					
ANR	3895776	Identifier	ast		3895671	1					
ANR	3895777	Parameter	int priority	637:67:17099:17110	3895671	2	True				
ANR	3895778	ParameterType	int		3895671	0					
ANR	3895779	Identifier	priority		3895671	1					
ANR	3895780	Parameter	int indent	637:81:17113:17122	3895671	3	True				
ANR	3895781	ParameterType	int		3895671	0					
ANR	3895782	Identifier	indent		3895671	1					
ANR	3895783	CFGEntryNode	ENTRY		3895671		True				
ANR	3895784	CFGExitNode	EXIT		3895671		True				
ANR	3895785	Symbol	ast -> attr		3895671						
ANR	3895786	Symbol	ast -> kind		3895671						
ANR	3895787	Symbol	ast		3895671						
ANR	3895788	Symbol	indent		3895671						
ANR	3895789	Symbol	ZEND_NAME_FQ		3895671						
ANR	3895790	Symbol	priority		3895671						
ANR	3895791	Symbol	Z_TYPE_P		3895671						
ANR	3895792	Symbol	str		3895671						
ANR	3895793	Symbol	* ast		3895671						
ANR	3895794	Symbol	ZEND_AST_ZVAL		3895671						
ANR	3895795	Symbol	ZEND_NAME_RELATIVE		3895671						
ANR	3895796	Symbol	IS_STRING		3895671						
ANR	3895797	Symbol	Z_STR_P		3895671						
ANR	3895798	Symbol	zv		3895671						
ANR	3895799	Symbol	zend_ast_get_zval		3895671						
ANR	3895800	Function	zend_ast_valid_var_char	655:0:17520:17746							
ANR	3895801	FunctionDef	zend_ast_valid_var_char (char ch)		3895800	0					
ANR	3895802	CompoundStatement		656:0:17564:17746	3895800	0					
ANR	3895803	IdentifierDeclStatement	unsigned char c = ( unsigned char ) ch ;	657:1:17567:17602	3895800	0	True				
ANR	3895804	IdentifierDecl	c = ( unsigned char ) ch		3895800	0					
ANR	3895805	IdentifierDeclType	unsigned char		3895800	0					
ANR	3895806	Identifier	c		3895800	1					
ANR	3895807	AssignmentExpression	c = ( unsigned char ) ch		3895800	2		=			
ANR	3895808	Identifier	c		3895800	0					
ANR	3895809	CastExpression	( unsigned char ) ch		3895800	1					
ANR	3895810	CastTarget	unsigned char		3895800	0					
ANR	3895811	Identifier	ch		3895800	1					
ANR	3895812	IfStatement	if ( c != '_' && c < 127 && ( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' ) )		3895800	1					
ANR	3895813	Condition	c != '_' && c < 127 && ( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )	659:5:17610:17715	3895800	0	True				
ANR	3895814	AndExpression	c != '_' && c < 127 && ( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		3895800	0		&&			
ANR	3895815	EqualityExpression	c != '_'		3895800	0		!=			
ANR	3895816	Identifier	c		3895800	0					
ANR	3895817	PrimaryExpression	'_'		3895800	1					
ANR	3895818	AndExpression	c < 127 && ( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		3895800	1		&&			
ANR	3895819	RelationalExpression	c < 127		3895800	0		<			
ANR	3895820	Identifier	c		3895800	0					
ANR	3895821	PrimaryExpression	127		3895800	1					
ANR	3895822	AndExpression	( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		3895800	1		&&			
ANR	3895823	OrExpression	c < '0' || c > '9'		3895800	0		||			
ANR	3895824	RelationalExpression	c < '0'		3895800	0		<			
ANR	3895825	Identifier	c		3895800	0					
ANR	3895826	PrimaryExpression	'0'		3895800	1					
ANR	3895827	RelationalExpression	c > '9'		3895800	1		>			
ANR	3895828	Identifier	c		3895800	0					
ANR	3895829	PrimaryExpression	'9'		3895800	1					
ANR	3895830	AndExpression	( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		3895800	1		&&			
ANR	3895831	OrExpression	c < 'A' || c > 'Z'		3895800	0		||			
ANR	3895832	RelationalExpression	c < 'A'		3895800	0		<			
ANR	3895833	Identifier	c		3895800	0					
ANR	3895834	PrimaryExpression	'A'		3895800	1					
ANR	3895835	RelationalExpression	c > 'Z'		3895800	1		>			
ANR	3895836	Identifier	c		3895800	0					
ANR	3895837	PrimaryExpression	'Z'		3895800	1					
ANR	3895838	OrExpression	c < 'a' || c > 'z'		3895800	1		||			
ANR	3895839	RelationalExpression	c < 'a'		3895800	0		<			
ANR	3895840	Identifier	c		3895800	0					
ANR	3895841	PrimaryExpression	'a'		3895800	1					
ANR	3895842	RelationalExpression	c > 'z'		3895800	1		>			
ANR	3895843	Identifier	c		3895800	0					
ANR	3895844	PrimaryExpression	'z'		3895800	1					
ANR	3895845	CompoundStatement		7:27:153:153	3895800	1					
ANR	3895846	ReturnStatement	return 0 ;	663:2:17722:17730	3895800	0	True				
ANR	3895847	PrimaryExpression	0		3895800	0					
ANR	3895848	ReturnStatement	return 1 ;	665:1:17736:17744	3895800	2	True				
ANR	3895849	PrimaryExpression	1		3895800	0					
ANR	3895850	ReturnType	static int		3895800	1					
ANR	3895851	Identifier	zend_ast_valid_var_char		3895800	2					
ANR	3895852	ParameterList	char ch		3895800	3					
ANR	3895853	Parameter	char ch	655:35:17555:17561	3895800	0	True				
ANR	3895854	ParameterType	char		3895800	0					
ANR	3895855	Identifier	ch		3895800	1					
ANR	3895856	CFGEntryNode	ENTRY		3895800		True				
ANR	3895857	CFGExitNode	EXIT		3895800		True				
ANR	3895858	Symbol	c		3895800						
ANR	3895859	Symbol	ch		3895800						
ANR	3895860	Function	zend_ast_valid_var_name	668:0:17749:18208							
ANR	3895861	FunctionDef	"zend_ast_valid_var_name (const char * s , size_t len)"		3895860	0					
ANR	3895862	CompoundStatement		669:0:17811:18208	3895860	0					
ANR	3895863	IdentifierDeclStatement	unsigned char c ;	670:1:17814:17829	3895860	0	True				
ANR	3895864	IdentifierDecl	c		3895860	0					
ANR	3895865	IdentifierDeclType	unsigned char		3895860	0					
ANR	3895866	Identifier	c		3895860	1					
ANR	3895867	IdentifierDeclStatement	size_t i ;	671:1:17832:17840	3895860	1	True				
ANR	3895868	IdentifierDecl	i		3895860	0					
ANR	3895869	IdentifierDeclType	size_t		3895860	0					
ANR	3895870	Identifier	i		3895860	1					
ANR	3895871	IfStatement	if ( len == 0 )		3895860	2					
ANR	3895872	Condition	len == 0	673:5:17848:17855	3895860	0	True				
ANR	3895873	EqualityExpression	len == 0		3895860	0		==			
ANR	3895874	Identifier	len		3895860	0					
ANR	3895875	PrimaryExpression	0		3895860	1					
ANR	3895876	CompoundStatement		5:15:46:46	3895860	1					
ANR	3895877	ReturnStatement	return 0 ;	674:2:17862:17870	3895860	0	True				
ANR	3895878	PrimaryExpression	0		3895860	0					
ANR	3895879	ExpressionStatement	c = ( unsigned char ) s [ 0 ]	676:1:17876:17899	3895860	3	True				
ANR	3895880	AssignmentExpression	c = ( unsigned char ) s [ 0 ]		3895860	0		=			
ANR	3895881	Identifier	c		3895860	0					
ANR	3895882	CastExpression	( unsigned char ) s [ 0 ]		3895860	1					
ANR	3895883	CastTarget	unsigned char		3895860	0					
ANR	3895884	ArrayIndexing	s [ 0 ]		3895860	1					
ANR	3895885	Identifier	s		3895860	0					
ANR	3895886	PrimaryExpression	0		3895860	1					
ANR	3895887	IfStatement	if ( c != '_' && c < 127 && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' ) )		3895860	4					
ANR	3895888	Condition	c != '_' && c < 127 && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )	677:5:17906:17982	3895860	0	True				
ANR	3895889	AndExpression	c != '_' && c < 127 && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		3895860	0		&&			
ANR	3895890	EqualityExpression	c != '_'		3895860	0		!=			
ANR	3895891	Identifier	c		3895860	0					
ANR	3895892	PrimaryExpression	'_'		3895860	1					
ANR	3895893	AndExpression	c < 127 && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		3895860	1		&&			
ANR	3895894	RelationalExpression	c < 127		3895860	0		<			
ANR	3895895	Identifier	c		3895860	0					
ANR	3895896	PrimaryExpression	127		3895860	1					
ANR	3895897	AndExpression	( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		3895860	1		&&			
ANR	3895898	OrExpression	c < 'A' || c > 'Z'		3895860	0		||			
ANR	3895899	RelationalExpression	c < 'A'		3895860	0		<			
ANR	3895900	Identifier	c		3895860	0					
ANR	3895901	PrimaryExpression	'A'		3895860	1					
ANR	3895902	RelationalExpression	c > 'Z'		3895860	1		>			
ANR	3895903	Identifier	c		3895860	0					
ANR	3895904	PrimaryExpression	'Z'		3895860	1					
ANR	3895905	OrExpression	c < 'a' || c > 'z'		3895860	1		||			
ANR	3895906	RelationalExpression	c < 'a'		3895860	0		<			
ANR	3895907	Identifier	c		3895860	0					
ANR	3895908	PrimaryExpression	'a'		3895860	1					
ANR	3895909	RelationalExpression	c > 'z'		3895860	1		>			
ANR	3895910	Identifier	c		3895860	0					
ANR	3895911	PrimaryExpression	'z'		3895860	1					
ANR	3895912	CompoundStatement		11:27:173:173	3895860	1					
ANR	3895913	ReturnStatement	return 0 ;	680:2:17989:17997	3895860	0	True				
ANR	3895914	PrimaryExpression	0		3895860	0					
ANR	3895915	ForStatement	for ( i = 1 ; i < len ; i ++ )		3895860	5					
ANR	3895916	ForInit	i = 1 ;	682:6:18008:18013	3895860	0	True				
ANR	3895917	AssignmentExpression	i = 1		3895860	0		=			
ANR	3895918	Identifier	i		3895860	0					
ANR	3895919	PrimaryExpression	1		3895860	1					
ANR	3895920	Condition	i < len	682:13:18015:18021	3895860	1	True				
ANR	3895921	RelationalExpression	i < len		3895860	0		<			
ANR	3895922	Identifier	i		3895860	0					
ANR	3895923	Identifier	len		3895860	1					
ANR	3895924	PostIncDecOperationExpression	i ++	682:22:18024:18026	3895860	2	True				
ANR	3895925	Identifier	i		3895860	0					
ANR	3895926	IncDec	++		3895860	1					
ANR	3895927	CompoundStatement		14:27:217:217	3895860	3					
ANR	3895928	ExpressionStatement	c = ( unsigned char ) s [ i ]	683:2:18033:18056	3895860	0	True				
ANR	3895929	AssignmentExpression	c = ( unsigned char ) s [ i ]		3895860	0		=			
ANR	3895930	Identifier	c		3895860	0					
ANR	3895931	CastExpression	( unsigned char ) s [ i ]		3895860	1					
ANR	3895932	CastTarget	unsigned char		3895860	0					
ANR	3895933	ArrayIndexing	s [ i ]		3895860	1					
ANR	3895934	Identifier	s		3895860	0					
ANR	3895935	Identifier	i		3895860	1					
ANR	3895936	IfStatement	if ( c != '_' && c < 127 && ( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' ) )		3895860	1					
ANR	3895937	Condition	c != '_' && c < 127 && ( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )	684:6:18064:18172	3895860	0	True				
ANR	3895938	AndExpression	c != '_' && c < 127 && ( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		3895860	0		&&			
ANR	3895939	EqualityExpression	c != '_'		3895860	0		!=			
ANR	3895940	Identifier	c		3895860	0					
ANR	3895941	PrimaryExpression	'_'		3895860	1					
ANR	3895942	AndExpression	c < 127 && ( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		3895860	1		&&			
ANR	3895943	RelationalExpression	c < 127		3895860	0		<			
ANR	3895944	Identifier	c		3895860	0					
ANR	3895945	PrimaryExpression	127		3895860	1					
ANR	3895946	AndExpression	( c < '0' || c > '9' ) && ( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		3895860	1		&&			
ANR	3895947	OrExpression	c < '0' || c > '9'		3895860	0		||			
ANR	3895948	RelationalExpression	c < '0'		3895860	0		<			
ANR	3895949	Identifier	c		3895860	0					
ANR	3895950	PrimaryExpression	'0'		3895860	1					
ANR	3895951	RelationalExpression	c > '9'		3895860	1		>			
ANR	3895952	Identifier	c		3895860	0					
ANR	3895953	PrimaryExpression	'9'		3895860	1					
ANR	3895954	AndExpression	( c < 'A' || c > 'Z' ) && ( c < 'a' || c > 'z' )		3895860	1		&&			
ANR	3895955	OrExpression	c < 'A' || c > 'Z'		3895860	0		||			
ANR	3895956	RelationalExpression	c < 'A'		3895860	0		<			
ANR	3895957	Identifier	c		3895860	0					
ANR	3895958	PrimaryExpression	'A'		3895860	1					
ANR	3895959	RelationalExpression	c > 'Z'		3895860	1		>			
ANR	3895960	Identifier	c		3895860	0					
ANR	3895961	PrimaryExpression	'Z'		3895860	1					
ANR	3895962	OrExpression	c < 'a' || c > 'z'		3895860	1		||			
ANR	3895963	RelationalExpression	c < 'a'		3895860	0		<			
ANR	3895964	Identifier	c		3895860	0					
ANR	3895965	PrimaryExpression	'a'		3895860	1					
ANR	3895966	RelationalExpression	c > 'z'		3895860	1		>			
ANR	3895967	Identifier	c		3895860	0					
ANR	3895968	PrimaryExpression	'z'		3895860	1					
ANR	3895969	CompoundStatement		19:28:363:363	3895860	1					
ANR	3895970	ReturnStatement	return 0 ;	688:3:18180:18188	3895860	0	True				
ANR	3895971	PrimaryExpression	0		3895860	0					
ANR	3895972	ReturnStatement	return 1 ;	691:1:18198:18206	3895860	6	True				
ANR	3895973	PrimaryExpression	1		3895860	0					
ANR	3895974	ReturnType	static int		3895860	1					
ANR	3895975	Identifier	zend_ast_valid_var_name		3895860	2					
ANR	3895976	ParameterList	"const char * s , size_t len"		3895860	3					
ANR	3895977	Parameter	const char * s	668:35:17784:17796	3895860	0	True				
ANR	3895978	ParameterType	const char *		3895860	0					
ANR	3895979	Identifier	s		3895860	1					
ANR	3895980	Parameter	size_t len	668:50:17799:17808	3895860	1	True				
ANR	3895981	ParameterType	size_t		3895860	0					
ANR	3895982	Identifier	len		3895860	1					
ANR	3895983	CFGEntryNode	ENTRY		3895860		True				
ANR	3895984	CFGExitNode	EXIT		3895860		True				
ANR	3895985	Symbol	s		3895860						
ANR	3895986	Symbol	c		3895860						
ANR	3895987	Symbol	* i		3895860						
ANR	3895988	Symbol	len		3895860						
ANR	3895989	Symbol	i		3895860						
ANR	3895990	Symbol	* s		3895860						
ANR	3895991	Function	zend_ast_export_var	694:0:18211:18729							
ANR	3895992	FunctionDef	"zend_ast_export_var (smart_str * str , zend_ast * ast , int priority , int indent)"		3895991	0					
ANR	3895993	CompoundStatement		695:0:18300:18729	3895991	0					
ANR	3895994	IfStatement	if ( ast -> kind == ZEND_AST_ZVAL )		3895991	0					
ANR	3895995	Condition	ast -> kind == ZEND_AST_ZVAL	696:5:18307:18332	3895991	0	True				
ANR	3895996	EqualityExpression	ast -> kind == ZEND_AST_ZVAL		3895991	0		==			
ANR	3895997	PtrMemberAccess	ast -> kind		3895991	0					
ANR	3895998	Identifier	ast		3895991	0					
ANR	3895999	Identifier	kind		3895991	1					
ANR	3896000	Identifier	ZEND_AST_ZVAL		3895991	1					
ANR	3896001	CompoundStatement		3:2:38:71	3895991	1					
ANR	3896002	IdentifierDeclStatement	zval * zv = zend_ast_get_zval ( ast ) ;	697:2:18339:18372	3895991	0	True				
ANR	3896003	IdentifierDecl	* zv = zend_ast_get_zval ( ast )		3895991	0					
ANR	3896004	IdentifierDeclType	zval *		3895991	0					
ANR	3896005	Identifier	zv		3895991	1					
ANR	3896006	AssignmentExpression	* zv = zend_ast_get_zval ( ast )		3895991	2		=			
ANR	3896007	Identifier	zv		3895991	0					
ANR	3896008	CallExpression	zend_ast_get_zval ( ast )		3895991	1					
ANR	3896009	Callee	zend_ast_get_zval		3895991	0					
ANR	3896010	Identifier	zend_ast_get_zval		3895991	0					
ANR	3896011	ArgumentList	ast		3895991	1					
ANR	3896012	Argument	ast		3895991	0					
ANR	3896013	Identifier	ast		3895991	0					
ANR	3896014	IfStatement	"if ( Z_TYPE_P ( zv ) == IS_STRING && zend_ast_valid_var_name ( Z_STRVAL_P ( zv ) , Z_STRLEN_P ( zv ) ) )"		3895991	1					
ANR	3896015	Condition	"Z_TYPE_P ( zv ) == IS_STRING && zend_ast_valid_var_name ( Z_STRVAL_P ( zv ) , Z_STRLEN_P ( zv ) )"	698:6:18380:18469	3895991	0	True				
ANR	3896016	AndExpression	"Z_TYPE_P ( zv ) == IS_STRING && zend_ast_valid_var_name ( Z_STRVAL_P ( zv ) , Z_STRLEN_P ( zv ) )"		3895991	0		&&			
ANR	3896017	EqualityExpression	Z_TYPE_P ( zv ) == IS_STRING		3895991	0		==			
ANR	3896018	CallExpression	Z_TYPE_P ( zv )		3895991	0					
ANR	3896019	Callee	Z_TYPE_P		3895991	0					
ANR	3896020	Identifier	Z_TYPE_P		3895991	0					
ANR	3896021	ArgumentList	zv		3895991	1					
ANR	3896022	Argument	zv		3895991	0					
ANR	3896023	Identifier	zv		3895991	0					
ANR	3896024	Identifier	IS_STRING		3895991	1					
ANR	3896025	CallExpression	"zend_ast_valid_var_name ( Z_STRVAL_P ( zv ) , Z_STRLEN_P ( zv ) )"		3895991	1					
ANR	3896026	Callee	zend_ast_valid_var_name		3895991	0					
ANR	3896027	Identifier	zend_ast_valid_var_name		3895991	0					
ANR	3896028	ArgumentList	Z_STRVAL_P ( zv )		3895991	1					
ANR	3896029	Argument	Z_STRVAL_P ( zv )		3895991	0					
ANR	3896030	CallExpression	Z_STRVAL_P ( zv )		3895991	0					
ANR	3896031	Callee	Z_STRVAL_P		3895991	0					
ANR	3896032	Identifier	Z_STRVAL_P		3895991	0					
ANR	3896033	ArgumentList	zv		3895991	1					
ANR	3896034	Argument	zv		3895991	0					
ANR	3896035	Identifier	zv		3895991	0					
ANR	3896036	Argument	Z_STRLEN_P ( zv )		3895991	1					
ANR	3896037	CallExpression	Z_STRLEN_P ( zv )		3895991	0					
ANR	3896038	Callee	Z_STRLEN_P		3895991	0					
ANR	3896039	Identifier	Z_STRLEN_P		3895991	0					
ANR	3896040	ArgumentList	zv		3895991	1					
ANR	3896041	Argument	zv		3895991	0					
ANR	3896042	Identifier	zv		3895991	0					
ANR	3896043	CompoundStatement		5:63:171:171	3895991	1					
ANR	3896044	ExpressionStatement	"smart_str_append ( str , Z_STR_P ( zv ) )"	700:3:18477:18511	3895991	0	True				
ANR	3896045	CallExpression	"smart_str_append ( str , Z_STR_P ( zv ) )"		3895991	0					
ANR	3896046	Callee	smart_str_append		3895991	0					
ANR	3896047	Identifier	smart_str_append		3895991	0					
ANR	3896048	ArgumentList	str		3895991	1					
ANR	3896049	Argument	str		3895991	0					
ANR	3896050	Identifier	str		3895991	0					
ANR	3896051	Argument	Z_STR_P ( zv )		3895991	1					
ANR	3896052	CallExpression	Z_STR_P ( zv )		3895991	0					
ANR	3896053	Callee	Z_STR_P		3895991	0					
ANR	3896054	Identifier	Z_STR_P		3895991	0					
ANR	3896055	ArgumentList	zv		3895991	1					
ANR	3896056	Argument	zv		3895991	0					
ANR	3896057	Identifier	zv		3895991	0					
ANR	3896058	ReturnStatement	return ;	701:3:18516:18522	3895991	1	True				
ANR	3896059	ElseStatement	else		3895991	0					
ANR	3896060	IfStatement	if ( ast -> kind == ZEND_AST_VAR )		3895991	0					
ANR	3896061	Condition	ast -> kind == ZEND_AST_VAR	703:12:18540:18564	3895991	0	True				
ANR	3896062	EqualityExpression	ast -> kind == ZEND_AST_VAR		3895991	0		==			
ANR	3896063	PtrMemberAccess	ast -> kind		3895991	0					
ANR	3896064	Identifier	ast		3895991	0					
ANR	3896065	Identifier	kind		3895991	1					
ANR	3896066	Identifier	ZEND_AST_VAR		3895991	1					
ANR	3896067	CompoundStatement		9:39:266:266	3895991	1					
ANR	3896068	ExpressionStatement	"zend_ast_export_ex ( str , ast , 0 , indent )"	704:2:18571:18610	3895991	0	True				
ANR	3896069	CallExpression	"zend_ast_export_ex ( str , ast , 0 , indent )"		3895991	0					
ANR	3896070	Callee	zend_ast_export_ex		3895991	0					
ANR	3896071	Identifier	zend_ast_export_ex		3895991	0					
ANR	3896072	ArgumentList	str		3895991	1					
ANR	3896073	Argument	str		3895991	0					
ANR	3896074	Identifier	str		3895991	0					
ANR	3896075	Argument	ast		3895991	1					
ANR	3896076	Identifier	ast		3895991	0					
ANR	3896077	Argument	0		3895991	2					
ANR	3896078	PrimaryExpression	0		3895991	0					
ANR	3896079	Argument	indent		3895991	3					
ANR	3896080	Identifier	indent		3895991	0					
ANR	3896081	ReturnStatement	return ;	705:2:18614:18620	3895991	1	True				
ANR	3896082	ExpressionStatement	"smart_str_appendc ( str , '{' )"	707:1:18626:18653	3895991	1	True				
ANR	3896083	CallExpression	"smart_str_appendc ( str , '{' )"		3895991	0					
ANR	3896084	Callee	smart_str_appendc		3895991	0					
ANR	3896085	Identifier	smart_str_appendc		3895991	0					
ANR	3896086	ArgumentList	str		3895991	1					
ANR	3896087	Argument	str		3895991	0					
ANR	3896088	Identifier	str		3895991	0					
ANR	3896089	Argument	'{'		3895991	1					
ANR	3896090	PrimaryExpression	'{'		3895991	0					
ANR	3896091	ExpressionStatement	"zend_ast_export_name ( str , ast , 0 , indent )"	708:1:18656:18697	3895991	2	True				
ANR	3896092	CallExpression	"zend_ast_export_name ( str , ast , 0 , indent )"		3895991	0					
ANR	3896093	Callee	zend_ast_export_name		3895991	0					
ANR	3896094	Identifier	zend_ast_export_name		3895991	0					
ANR	3896095	ArgumentList	str		3895991	1					
ANR	3896096	Argument	str		3895991	0					
ANR	3896097	Identifier	str		3895991	0					
ANR	3896098	Argument	ast		3895991	1					
ANR	3896099	Identifier	ast		3895991	0					
ANR	3896100	Argument	0		3895991	2					
ANR	3896101	PrimaryExpression	0		3895991	0					
ANR	3896102	Argument	indent		3895991	3					
ANR	3896103	Identifier	indent		3895991	0					
ANR	3896104	ExpressionStatement	"smart_str_appendc ( str , '}' )"	709:1:18700:18727	3895991	3	True				
ANR	3896105	CallExpression	"smart_str_appendc ( str , '}' )"		3895991	0					
ANR	3896106	Callee	smart_str_appendc		3895991	0					
ANR	3896107	Identifier	smart_str_appendc		3895991	0					
ANR	3896108	ArgumentList	str		3895991	1					
ANR	3896109	Argument	str		3895991	0					
ANR	3896110	Identifier	str		3895991	0					
ANR	3896111	Argument	'}'		3895991	1					
ANR	3896112	PrimaryExpression	'}'		3895991	0					
ANR	3896113	ReturnType	static void		3895991	1					
ANR	3896114	Identifier	zend_ast_export_var		3895991	2					
ANR	3896115	ParameterList	"smart_str * str , zend_ast * ast , int priority , int indent"		3895991	3					
ANR	3896116	Parameter	smart_str * str	694:32:18243:18256	3895991	0	True				
ANR	3896117	ParameterType	smart_str *		3895991	0					
ANR	3896118	Identifier	str		3895991	1					
ANR	3896119	Parameter	zend_ast * ast	694:48:18259:18271	3895991	1	True				
ANR	3896120	ParameterType	zend_ast *		3895991	0					
ANR	3896121	Identifier	ast		3895991	1					
ANR	3896122	Parameter	int priority	694:63:18274:18285	3895991	2	True				
ANR	3896123	ParameterType	int		3895991	0					
ANR	3896124	Identifier	priority		3895991	1					
ANR	3896125	Parameter	int indent	694:77:18288:18297	3895991	3	True				
ANR	3896126	ParameterType	int		3895991	0					
ANR	3896127	Identifier	indent		3895991	1					
ANR	3896128	CFGEntryNode	ENTRY		3895991		True				
ANR	3896129	CFGExitNode	EXIT		3895991		True				
ANR	3896130	Symbol	ast -> kind		3895991						
ANR	3896131	Symbol	ast		3895991						
ANR	3896132	Symbol	indent		3895991						
ANR	3896133	Symbol	priority		3895991						
ANR	3896134	Symbol	Z_TYPE_P		3895991						
ANR	3896135	Symbol	Z_STRVAL_P		3895991						
ANR	3896136	Symbol	str		3895991						
ANR	3896137	Symbol	* ast		3895991						
ANR	3896138	Symbol	ZEND_AST_VAR		3895991						
ANR	3896139	Symbol	ZEND_AST_ZVAL		3895991						
ANR	3896140	Symbol	Z_STRLEN_P		3895991						
ANR	3896141	Symbol	IS_STRING		3895991						
ANR	3896142	Symbol	Z_STR_P		3895991						
ANR	3896143	Symbol	zv		3895991						
ANR	3896144	Symbol	zend_ast_get_zval		3895991						
ANR	3896145	Symbol	zend_ast_valid_var_name		3895991						
ANR	3896146	Function	zend_ast_export_list	712:0:18732:19030							
ANR	3896147	FunctionDef	"zend_ast_export_list (smart_str * str , zend_ast_list * list , int separator , int priority , int indent)"		3896146	0					
ANR	3896148	CompoundStatement		713:0:18843:19030	3896146	0					
ANR	3896149	IdentifierDeclStatement	uint32_t i = 0 ;	714:1:18846:18860	3896146	0	True				
ANR	3896150	IdentifierDecl	i = 0		3896146	0					
ANR	3896151	IdentifierDeclType	uint32_t		3896146	0					
ANR	3896152	Identifier	i		3896146	1					
ANR	3896153	AssignmentExpression	i = 0		3896146	2		=			
ANR	3896154	Identifier	i		3896146	0					
ANR	3896155	PrimaryExpression	0		3896146	1					
ANR	3896156	WhileStatement	while ( i < list -> children )		3896146	1					
ANR	3896157	Condition	i < list -> children	716:8:18871:18888	3896146	0	True				
ANR	3896158	RelationalExpression	i < list -> children		3896146	0		<			
ANR	3896159	Identifier	i		3896146	0					
ANR	3896160	PtrMemberAccess	list -> children		3896146	1					
ANR	3896161	Identifier	list		3896146	0					
ANR	3896162	Identifier	children		3896146	1					
ANR	3896163	CompoundStatement		4:28:47:47	3896146	1					
ANR	3896164	IfStatement	if ( i != 0 && separator )		3896146	0					
ANR	3896165	Condition	i != 0 && separator	717:6:18899:18917	3896146	0	True				
ANR	3896166	AndExpression	i != 0 && separator		3896146	0		&&			
ANR	3896167	EqualityExpression	i != 0		3896146	0		!=			
ANR	3896168	Identifier	i		3896146	0					
ANR	3896169	PrimaryExpression	0		3896146	1					
ANR	3896170	Identifier	separator		3896146	1					
ANR	3896171	CompoundStatement		5:27:76:76	3896146	1					
ANR	3896172	ExpressionStatement	"smart_str_appends ( str , "", "" )"	718:3:18925:18953	3896146	0	True				
ANR	3896173	CallExpression	"smart_str_appends ( str , "", "" )"		3896146	0					
ANR	3896174	Callee	smart_str_appends		3896146	0					
ANR	3896175	Identifier	smart_str_appends		3896146	0					
ANR	3896176	ArgumentList	str		3896146	1					
ANR	3896177	Argument	str		3896146	0					
ANR	3896178	Identifier	str		3896146	0					
ANR	3896179	Argument	""", """		3896146	1					
ANR	3896180	PrimaryExpression	""", """		3896146	0					
ANR	3896181	ExpressionStatement	"zend_ast_export_ex ( str , list -> child [ i ] , priority , indent )"	720:2:18961:19018	3896146	1	True				
ANR	3896182	CallExpression	"zend_ast_export_ex ( str , list -> child [ i ] , priority , indent )"		3896146	0					
ANR	3896183	Callee	zend_ast_export_ex		3896146	0					
ANR	3896184	Identifier	zend_ast_export_ex		3896146	0					
ANR	3896185	ArgumentList	str		3896146	1					
ANR	3896186	Argument	str		3896146	0					
ANR	3896187	Identifier	str		3896146	0					
ANR	3896188	Argument	list -> child [ i ]		3896146	1					
ANR	3896189	ArrayIndexing	list -> child [ i ]		3896146	0					
ANR	3896190	PtrMemberAccess	list -> child		3896146	0					
ANR	3896191	Identifier	list		3896146	0					
ANR	3896192	Identifier	child		3896146	1					
ANR	3896193	Identifier	i		3896146	1					
ANR	3896194	Argument	priority		3896146	2					
ANR	3896195	Identifier	priority		3896146	0					
ANR	3896196	Argument	indent		3896146	3					
ANR	3896197	Identifier	indent		3896146	0					
ANR	3896198	ExpressionStatement	i ++	721:2:19022:19025	3896146	2	True				
ANR	3896199	PostIncDecOperationExpression	i ++		3896146	0					
ANR	3896200	Identifier	i		3896146	0					
ANR	3896201	IncDec	++		3896146	1					
ANR	3896202	ReturnType	static void		3896146	1					
ANR	3896203	Identifier	zend_ast_export_list		3896146	2					
ANR	3896204	ParameterList	"smart_str * str , zend_ast_list * list , int separator , int priority , int indent"		3896146	3					
ANR	3896205	Parameter	smart_str * str	712:33:18765:18778	3896146	0	True				
ANR	3896206	ParameterType	smart_str *		3896146	0					
ANR	3896207	Identifier	str		3896146	1					
ANR	3896208	Parameter	zend_ast_list * list	712:49:18781:18799	3896146	1	True				
ANR	3896209	ParameterType	zend_ast_list *		3896146	0					
ANR	3896210	Identifier	list		3896146	1					
ANR	3896211	Parameter	int separator	712:70:18802:18814	3896146	2	True				
ANR	3896212	ParameterType	int		3896146	0					
ANR	3896213	Identifier	separator		3896146	1					
ANR	3896214	Parameter	int priority	712:85:18817:18828	3896146	3	True				
ANR	3896215	ParameterType	int		3896146	0					
ANR	3896216	Identifier	priority		3896146	1					
ANR	3896217	Parameter	int indent	712:99:18831:18840	3896146	4	True				
ANR	3896218	ParameterType	int		3896146	0					
ANR	3896219	Identifier	indent		3896146	1					
ANR	3896220	CFGEntryNode	ENTRY		3896146		True				
ANR	3896221	CFGExitNode	EXIT		3896146		True				
ANR	3896222	Symbol	str		3896146						
ANR	3896223	Symbol	* * list		3896146						
ANR	3896224	Symbol	* i		3896146						
ANR	3896225	Symbol	list -> child		3896146						
ANR	3896226	Symbol	indent		3896146						
ANR	3896227	Symbol	* list		3896146						
ANR	3896228	Symbol	i		3896146						
ANR	3896229	Symbol	* list -> child		3896146						
ANR	3896230	Symbol	list		3896146						
ANR	3896231	Symbol	priority		3896146						
ANR	3896232	Symbol	separator		3896146						
ANR	3896233	Symbol	list -> children		3896146						
ANR	3896234	Function	zend_ast_export_encaps_list	725:0:19033:19901							
ANR	3896235	FunctionDef	"zend_ast_export_encaps_list (smart_str * str , char quote , zend_ast_list * list , int indent)"		3896234	0					
ANR	3896236	CompoundStatement		726:0:19134:19901	3896234	0					
ANR	3896237	IdentifierDeclStatement	uint32_t i = 0 ;	727:1:19137:19151	3896234	0	True				
ANR	3896238	IdentifierDecl	i = 0		3896234	0					
ANR	3896239	IdentifierDeclType	uint32_t		3896234	0					
ANR	3896240	Identifier	i		3896234	1					
ANR	3896241	AssignmentExpression	i = 0		3896234	2		=			
ANR	3896242	Identifier	i		3896234	0					
ANR	3896243	PrimaryExpression	0		3896234	1					
ANR	3896244	IdentifierDeclStatement	zend_ast * ast ;	728:1:19154:19167	3896234	1	True				
ANR	3896245	IdentifierDecl	* ast		3896234	0					
ANR	3896246	IdentifierDeclType	zend_ast *		3896234	0					
ANR	3896247	Identifier	ast		3896234	1					
ANR	3896248	WhileStatement	while ( i < list -> children )		3896234	2					
ANR	3896249	Condition	i < list -> children	730:8:19178:19195	3896234	0	True				
ANR	3896250	RelationalExpression	i < list -> children		3896234	0		<			
ANR	3896251	Identifier	i		3896234	0					
ANR	3896252	PtrMemberAccess	list -> children		3896234	1					
ANR	3896253	Identifier	list		3896234	0					
ANR	3896254	Identifier	children		3896234	1					
ANR	3896255	CompoundStatement		5:28:63:63	3896234	1					
ANR	3896256	ExpressionStatement	ast = list -> child [ i ]	731:2:19202:19222	3896234	0	True				
ANR	3896257	AssignmentExpression	ast = list -> child [ i ]		3896234	0		=			
ANR	3896258	Identifier	ast		3896234	0					
ANR	3896259	ArrayIndexing	list -> child [ i ]		3896234	1					
ANR	3896260	PtrMemberAccess	list -> child		3896234	0					
ANR	3896261	Identifier	list		3896234	0					
ANR	3896262	Identifier	child		3896234	1					
ANR	3896263	Identifier	i		3896234	1					
ANR	3896264	IfStatement	if ( ast -> kind == ZEND_AST_ZVAL )		3896234	1					
ANR	3896265	Condition	ast -> kind == ZEND_AST_ZVAL	732:6:19230:19255	3896234	0	True				
ANR	3896266	EqualityExpression	ast -> kind == ZEND_AST_ZVAL		3896234	0		==			
ANR	3896267	PtrMemberAccess	ast -> kind		3896234	0					
ANR	3896268	Identifier	ast		3896234	0					
ANR	3896269	Identifier	kind		3896234	1					
ANR	3896270	Identifier	ZEND_AST_ZVAL		3896234	1					
ANR	3896271	CompoundStatement		8:3:128:161	3896234	1					
ANR	3896272	IdentifierDeclStatement	zval * zv = zend_ast_get_zval ( ast ) ;	733:3:19263:19296	3896234	0	True				
ANR	3896273	IdentifierDecl	* zv = zend_ast_get_zval ( ast )		3896234	0					
ANR	3896274	IdentifierDeclType	zval *		3896234	0					
ANR	3896275	Identifier	zv		3896234	1					
ANR	3896276	AssignmentExpression	* zv = zend_ast_get_zval ( ast )		3896234	2		=			
ANR	3896277	Identifier	zv		3896234	0					
ANR	3896278	CallExpression	zend_ast_get_zval ( ast )		3896234	1					
ANR	3896279	Callee	zend_ast_get_zval		3896234	0					
ANR	3896280	Identifier	zend_ast_get_zval		3896234	0					
ANR	3896281	ArgumentList	ast		3896234	1					
ANR	3896282	Argument	ast		3896234	0					
ANR	3896283	Identifier	ast		3896234	0					
ANR	3896284	ExpressionStatement	ZEND_ASSERT ( Z_TYPE_P ( zv ) == IS_STRING )	735:3:19302:19340	3896234	1	True				
ANR	3896285	CallExpression	ZEND_ASSERT ( Z_TYPE_P ( zv ) == IS_STRING )		3896234	0					
ANR	3896286	Callee	ZEND_ASSERT		3896234	0					
ANR	3896287	Identifier	ZEND_ASSERT		3896234	0					
ANR	3896288	ArgumentList	Z_TYPE_P ( zv ) == IS_STRING		3896234	1					
ANR	3896289	Argument	Z_TYPE_P ( zv ) == IS_STRING		3896234	0					
ANR	3896290	EqualityExpression	Z_TYPE_P ( zv ) == IS_STRING		3896234	0		==			
ANR	3896291	CallExpression	Z_TYPE_P ( zv )		3896234	0					
ANR	3896292	Callee	Z_TYPE_P		3896234	0					
ANR	3896293	Identifier	Z_TYPE_P		3896234	0					
ANR	3896294	ArgumentList	zv		3896234	1					
ANR	3896295	Argument	zv		3896234	0					
ANR	3896296	Identifier	zv		3896234	0					
ANR	3896297	Identifier	IS_STRING		3896234	1					
ANR	3896298	ExpressionStatement	"zend_ast_export_qstr ( str , quote , Z_STR_P ( zv ) )"	736:3:19345:19390	3896234	2	True				
ANR	3896299	CallExpression	"zend_ast_export_qstr ( str , quote , Z_STR_P ( zv ) )"		3896234	0					
ANR	3896300	Callee	zend_ast_export_qstr		3896234	0					
ANR	3896301	Identifier	zend_ast_export_qstr		3896234	0					
ANR	3896302	ArgumentList	str		3896234	1					
ANR	3896303	Argument	str		3896234	0					
ANR	3896304	Identifier	str		3896234	0					
ANR	3896305	Argument	quote		3896234	1					
ANR	3896306	Identifier	quote		3896234	0					
ANR	3896307	Argument	Z_STR_P ( zv )		3896234	2					
ANR	3896308	CallExpression	Z_STR_P ( zv )		3896234	0					
ANR	3896309	Callee	Z_STR_P		3896234	0					
ANR	3896310	Identifier	Z_STR_P		3896234	0					
ANR	3896311	ArgumentList	zv		3896234	1					
ANR	3896312	Argument	zv		3896234	0					
ANR	3896313	Identifier	zv		3896234	0					
ANR	3896314	ElseStatement	else		3896234	0					
ANR	3896315	IfStatement	if ( ast -> kind == ZEND_AST_VAR && ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL && ( i + 1 == list -> children || list -> child [ i + 1 ] -> kind != ZEND_AST_ZVAL || ! zend_ast_valid_var_char ( * Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) ) ) ) )		3896234	0					
ANR	3896316	Condition	ast -> kind == ZEND_AST_VAR && ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL && ( i + 1 == list -> children || list -> child [ i + 1 ] -> kind != ZEND_AST_ZVAL || ! zend_ast_valid_var_char ( * Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) ) ) )	737:13:19405:19719	3896234	0	True				
ANR	3896317	AndExpression	ast -> kind == ZEND_AST_VAR && ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL && ( i + 1 == list -> children || list -> child [ i + 1 ] -> kind != ZEND_AST_ZVAL || ! zend_ast_valid_var_char ( * Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) ) ) )		3896234	0		&&			
ANR	3896318	EqualityExpression	ast -> kind == ZEND_AST_VAR		3896234	0		==			
ANR	3896319	PtrMemberAccess	ast -> kind		3896234	0					
ANR	3896320	Identifier	ast		3896234	0					
ANR	3896321	Identifier	kind		3896234	1					
ANR	3896322	Identifier	ZEND_AST_VAR		3896234	1					
ANR	3896323	AndExpression	ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL && ( i + 1 == list -> children || list -> child [ i + 1 ] -> kind != ZEND_AST_ZVAL || ! zend_ast_valid_var_char ( * Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) ) ) )		3896234	1		&&			
ANR	3896324	EqualityExpression	ast -> child [ 0 ] -> kind == ZEND_AST_ZVAL		3896234	0		==			
ANR	3896325	PtrMemberAccess	ast -> child [ 0 ] -> kind		3896234	0					
ANR	3896326	ArrayIndexing	ast -> child [ 0 ]		3896234	0					
ANR	3896327	PtrMemberAccess	ast -> child		3896234	0					
ANR	3896328	Identifier	ast		3896234	0					
ANR	3896329	Identifier	child		3896234	1					
ANR	3896330	PrimaryExpression	0		3896234	1					
ANR	3896331	Identifier	kind		3896234	1					
ANR	3896332	Identifier	ZEND_AST_ZVAL		3896234	1					
ANR	3896333	OrExpression	i + 1 == list -> children || list -> child [ i + 1 ] -> kind != ZEND_AST_ZVAL || ! zend_ast_valid_var_char ( * Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) ) )		3896234	1		||			
ANR	3896334	EqualityExpression	i + 1 == list -> children		3896234	0		==			
ANR	3896335	AdditiveExpression	i + 1		3896234	0		+			
ANR	3896336	Identifier	i		3896234	0					
ANR	3896337	PrimaryExpression	1		3896234	1					
ANR	3896338	PtrMemberAccess	list -> children		3896234	1					
ANR	3896339	Identifier	list		3896234	0					
ANR	3896340	Identifier	children		3896234	1					
ANR	3896341	OrExpression	list -> child [ i + 1 ] -> kind != ZEND_AST_ZVAL || ! zend_ast_valid_var_char ( * Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) ) )		3896234	1		||			
ANR	3896342	EqualityExpression	list -> child [ i + 1 ] -> kind != ZEND_AST_ZVAL		3896234	0		!=			
ANR	3896343	PtrMemberAccess	list -> child [ i + 1 ] -> kind		3896234	0					
ANR	3896344	ArrayIndexing	list -> child [ i + 1 ]		3896234	0					
ANR	3896345	PtrMemberAccess	list -> child		3896234	0					
ANR	3896346	Identifier	list		3896234	0					
ANR	3896347	Identifier	child		3896234	1					
ANR	3896348	AdditiveExpression	i + 1		3896234	1		+			
ANR	3896349	Identifier	i		3896234	0					
ANR	3896350	PrimaryExpression	1		3896234	1					
ANR	3896351	Identifier	kind		3896234	1					
ANR	3896352	Identifier	ZEND_AST_ZVAL		3896234	1					
ANR	3896353	UnaryOperationExpression	! zend_ast_valid_var_char ( * Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) ) )		3896234	1					
ANR	3896354	UnaryOperator	!		3896234	0					
ANR	3896355	CallExpression	zend_ast_valid_var_char ( * Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) ) )		3896234	1					
ANR	3896356	Callee	zend_ast_valid_var_char		3896234	0					
ANR	3896357	Identifier	zend_ast_valid_var_char		3896234	0					
ANR	3896358	ArgumentList	* Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) )		3896234	1					
ANR	3896359	Argument	* Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) )		3896234	0					
ANR	3896360	UnaryOperationExpression	* Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) )		3896234	0					
ANR	3896361	UnaryOperator	*		3896234	0					
ANR	3896362	CallExpression	Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) )		3896234	1					
ANR	3896363	Callee	Z_STRVAL_P		3896234	0					
ANR	3896364	Identifier	Z_STRVAL_P		3896234	0					
ANR	3896365	ArgumentList	zend_ast_get_zval ( list -> child [ i + 1 ] )		3896234	1					
ANR	3896366	Argument	zend_ast_get_zval ( list -> child [ i + 1 ] )		3896234	0					
ANR	3896367	CallExpression	zend_ast_get_zval ( list -> child [ i + 1 ] )		3896234	0					
ANR	3896368	Callee	zend_ast_get_zval		3896234	0					
ANR	3896369	Identifier	zend_ast_get_zval		3896234	0					
ANR	3896370	ArgumentList	list -> child [ i + 1 ]		3896234	1					
ANR	3896371	Argument	list -> child [ i + 1 ]		3896234	0					
ANR	3896372	ArrayIndexing	list -> child [ i + 1 ]		3896234	0					
ANR	3896373	PtrMemberAccess	list -> child		3896234	0					
ANR	3896374	Identifier	list		3896234	0					
ANR	3896375	Identifier	child		3896234	1					
ANR	3896376	AdditiveExpression	i + 1		3896234	1		+			
ANR	3896377	Identifier	i		3896234	0					
ANR	3896378	PrimaryExpression	1		3896234	1					
ANR	3896379	CompoundStatement		18:64:587:587	3896234	1					
ANR	3896380	ExpressionStatement	"zend_ast_export_ex ( str , ast , 0 , indent )"	744:3:19727:19766	3896234	0	True				
ANR	3896381	CallExpression	"zend_ast_export_ex ( str , ast , 0 , indent )"		3896234	0					
ANR	3896382	Callee	zend_ast_export_ex		3896234	0					
ANR	3896383	Identifier	zend_ast_export_ex		3896234	0					
ANR	3896384	ArgumentList	str		3896234	1					
ANR	3896385	Argument	str		3896234	0					
ANR	3896386	Identifier	str		3896234	0					
ANR	3896387	Argument	ast		3896234	1					
ANR	3896388	Identifier	ast		3896234	0					
ANR	3896389	Argument	0		3896234	2					
ANR	3896390	PrimaryExpression	0		3896234	0					
ANR	3896391	Argument	indent		3896234	3					
ANR	3896392	Identifier	indent		3896234	0					
ANR	3896393	ElseStatement	else		3896234	0					
ANR	3896394	CompoundStatement		20:9:642:642	3896234	0					
ANR	3896395	ExpressionStatement	"smart_str_appendc ( str , '{' )"	746:3:19782:19809	3896234	0	True				
ANR	3896396	CallExpression	"smart_str_appendc ( str , '{' )"		3896234	0					
ANR	3896397	Callee	smart_str_appendc		3896234	0					
ANR	3896398	Identifier	smart_str_appendc		3896234	0					
ANR	3896399	ArgumentList	str		3896234	1					
ANR	3896400	Argument	str		3896234	0					
ANR	3896401	Identifier	str		3896234	0					
ANR	3896402	Argument	'{'		3896234	1					
ANR	3896403	PrimaryExpression	'{'		3896234	0					
ANR	3896404	ExpressionStatement	"zend_ast_export_ex ( str , ast , 0 , indent )"	747:3:19814:19853	3896234	1	True				
ANR	3896405	CallExpression	"zend_ast_export_ex ( str , ast , 0 , indent )"		3896234	0					
ANR	3896406	Callee	zend_ast_export_ex		3896234	0					
ANR	3896407	Identifier	zend_ast_export_ex		3896234	0					
ANR	3896408	ArgumentList	str		3896234	1					
ANR	3896409	Argument	str		3896234	0					
ANR	3896410	Identifier	str		3896234	0					
ANR	3896411	Argument	ast		3896234	1					
ANR	3896412	Identifier	ast		3896234	0					
ANR	3896413	Argument	0		3896234	2					
ANR	3896414	PrimaryExpression	0		3896234	0					
ANR	3896415	Argument	indent		3896234	3					
ANR	3896416	Identifier	indent		3896234	0					
ANR	3896417	ExpressionStatement	"smart_str_appendc ( str , '}' )"	748:3:19858:19885	3896234	2	True				
ANR	3896418	CallExpression	"smart_str_appendc ( str , '}' )"		3896234	0					
ANR	3896419	Callee	smart_str_appendc		3896234	0					
ANR	3896420	Identifier	smart_str_appendc		3896234	0					
ANR	3896421	ArgumentList	str		3896234	1					
ANR	3896422	Argument	str		3896234	0					
ANR	3896423	Identifier	str		3896234	0					
ANR	3896424	Argument	'}'		3896234	1					
ANR	3896425	PrimaryExpression	'}'		3896234	0					
ANR	3896426	ExpressionStatement	i ++	750:2:19893:19896	3896234	2	True				
ANR	3896427	PostIncDecOperationExpression	i ++		3896234	0					
ANR	3896428	Identifier	i		3896234	0					
ANR	3896429	IncDec	++		3896234	1					
ANR	3896430	ReturnType	static void		3896234	1					
ANR	3896431	Identifier	zend_ast_export_encaps_list		3896234	2					
ANR	3896432	ParameterList	"smart_str * str , char quote , zend_ast_list * list , int indent"		3896234	3					
ANR	3896433	Parameter	smart_str * str	725:40:19073:19086	3896234	0	True				
ANR	3896434	ParameterType	smart_str *		3896234	0					
ANR	3896435	Identifier	str		3896234	1					
ANR	3896436	Parameter	char quote	725:56:19089:19098	3896234	1	True				
ANR	3896437	ParameterType	char		3896234	0					
ANR	3896438	Identifier	quote		3896234	1					
ANR	3896439	Parameter	zend_ast_list * list	725:68:19101:19119	3896234	2	True				
ANR	3896440	ParameterType	zend_ast_list *		3896234	0					
ANR	3896441	Identifier	list		3896234	1					
ANR	3896442	Parameter	int indent	725:89:19122:19131	3896234	3	True				
ANR	3896443	ParameterType	int		3896234	0					
ANR	3896444	Identifier	indent		3896234	1					
ANR	3896445	CFGEntryNode	ENTRY		3896234		True				
ANR	3896446	CFGExitNode	EXIT		3896234		True				
ANR	3896447	Symbol	* * * ast		3896234						
ANR	3896448	Symbol	ast -> kind		3896234						
ANR	3896449	Symbol	ast		3896234						
ANR	3896450	Symbol	indent		3896234						
ANR	3896451	Symbol	ast -> child [ 0 ] -> kind		3896234						
ANR	3896452	Symbol	quote		3896234						
ANR	3896453	Symbol	* * list		3896234						
ANR	3896454	Symbol	* ast		3896234						
ANR	3896455	Symbol	zend_ast_valid_var_char		3896234						
ANR	3896456	Symbol	ZEND_AST_VAR		3896234						
ANR	3896457	Symbol	* * ast		3896234						
ANR	3896458	Symbol	ZEND_AST_ZVAL		3896234						
ANR	3896459	Symbol	IS_STRING		3896234						
ANR	3896460	Symbol	* Z_STRVAL_P		3896234						
ANR	3896461	Symbol	* * list -> child		3896234						
ANR	3896462	Symbol	* * ast -> child		3896234						
ANR	3896463	Symbol	* Z_STRVAL_P ( zend_ast_get_zval ( list -> child [ i + 1 ] ) )		3896234						
ANR	3896464	Symbol	* * i		3896234						
ANR	3896465	Symbol	list -> child		3896234						
ANR	3896466	Symbol	list -> child [ i + 1 ] -> kind		3896234						
ANR	3896467	Symbol	i		3896234						
ANR	3896468	Symbol	list		3896234						
ANR	3896469	Symbol	Z_TYPE_P		3896234						
ANR	3896470	Symbol	Z_STRVAL_P		3896234						
ANR	3896471	Symbol	str		3896234						
ANR	3896472	Symbol	* i		3896234						
ANR	3896473	Symbol	* * * list		3896234						
ANR	3896474	Symbol	* list		3896234						
ANR	3896475	Symbol	* list -> child		3896234						
ANR	3896476	Symbol	* ast -> child		3896234						
ANR	3896477	Symbol	Z_STR_P		3896234						
ANR	3896478	Symbol	zend_ast_get_zval		3896234						
ANR	3896479	Symbol	zv		3896234						
ANR	3896480	Symbol	ast -> child		3896234						
ANR	3896481	Symbol	list -> children		3896234						
ANR	3896482	Function	zend_ast_export_name_list	754:0:19904:20160							
ANR	3896483	FunctionDef	"zend_ast_export_name_list (smart_str * str , zend_ast_list * list , int indent)"		3896482	0					
ANR	3896484	CompoundStatement		755:0:19991:20160	3896482	0					
ANR	3896485	IdentifierDeclStatement	uint32_t i = 0 ;	756:1:19994:20008	3896482	0	True				
ANR	3896486	IdentifierDecl	i = 0		3896482	0					
ANR	3896487	IdentifierDeclType	uint32_t		3896482	0					
ANR	3896488	Identifier	i		3896482	1					
ANR	3896489	AssignmentExpression	i = 0		3896482	2		=			
ANR	3896490	Identifier	i		3896482	0					
ANR	3896491	PrimaryExpression	0		3896482	1					
ANR	3896492	WhileStatement	while ( i < list -> children )		3896482	1					
ANR	3896493	Condition	i < list -> children	758:8:20019:20036	3896482	0	True				
ANR	3896494	RelationalExpression	i < list -> children		3896482	0		<			
ANR	3896495	Identifier	i		3896482	0					
ANR	3896496	PtrMemberAccess	list -> children		3896482	1					
ANR	3896497	Identifier	list		3896482	0					
ANR	3896498	Identifier	children		3896482	1					
ANR	3896499	CompoundStatement		4:28:47:47	3896482	1					
ANR	3896500	IfStatement	if ( i != 0 )		3896482	0					
ANR	3896501	Condition	i != 0	759:6:20047:20052	3896482	0	True				
ANR	3896502	EqualityExpression	i != 0		3896482	0		!=			
ANR	3896503	Identifier	i		3896482	0					
ANR	3896504	PrimaryExpression	0		3896482	1					
ANR	3896505	CompoundStatement		5:14:63:63	3896482	1					
ANR	3896506	ExpressionStatement	"smart_str_appends ( str , "", "" )"	760:3:20060:20088	3896482	0	True				
ANR	3896507	CallExpression	"smart_str_appends ( str , "", "" )"		3896482	0					
ANR	3896508	Callee	smart_str_appends		3896482	0					
ANR	3896509	Identifier	smart_str_appends		3896482	0					
ANR	3896510	ArgumentList	str		3896482	1					
ANR	3896511	Argument	str		3896482	0					
ANR	3896512	Identifier	str		3896482	0					
ANR	3896513	Argument	""", """		3896482	1					
ANR	3896514	PrimaryExpression	""", """		3896482	0					
ANR	3896515	ExpressionStatement	"zend_ast_export_name ( str , list -> child [ i ] , 0 , indent )"	762:2:20096:20148	3896482	1	True				
ANR	3896516	CallExpression	"zend_ast_export_name ( str , list -> child [ i ] , 0 , indent )"		3896482	0					
ANR	3896517	Callee	zend_ast_export_name		3896482	0					
ANR	3896518	Identifier	zend_ast_export_name		3896482	0					
ANR	3896519	ArgumentList	str		3896482	1					
ANR	3896520	Argument	str		3896482	0					
ANR	3896521	Identifier	str		3896482	0					
ANR	3896522	Argument	list -> child [ i ]		3896482	1					
ANR	3896523	ArrayIndexing	list -> child [ i ]		3896482	0					
ANR	3896524	PtrMemberAccess	list -> child		3896482	0					
ANR	3896525	Identifier	list		3896482	0					
ANR	3896526	Identifier	child		3896482	1					
ANR	3896527	Identifier	i		3896482	1					
ANR	3896528	Argument	0		3896482	2					
ANR	3896529	PrimaryExpression	0		3896482	0					
ANR	3896530	Argument	indent		3896482	3					
ANR	3896531	Identifier	indent		3896482	0					
ANR	3896532	ExpressionStatement	i ++	763:2:20152:20155	3896482	2	True				
ANR	3896533	PostIncDecOperationExpression	i ++		3896482	0					
ANR	3896534	Identifier	i		3896482	0					
ANR	3896535	IncDec	++		3896482	1					
ANR	3896536	ReturnType	static void		3896482	1					
ANR	3896537	Identifier	zend_ast_export_name_list		3896482	2					
ANR	3896538	ParameterList	"smart_str * str , zend_ast_list * list , int indent"		3896482	3					
ANR	3896539	Parameter	smart_str * str	754:38:19942:19955	3896482	0	True				
ANR	3896540	ParameterType	smart_str *		3896482	0					
ANR	3896541	Identifier	str		3896482	1					
ANR	3896542	Parameter	zend_ast_list * list	754:54:19958:19976	3896482	1	True				
ANR	3896543	ParameterType	zend_ast_list *		3896482	0					
ANR	3896544	Identifier	list		3896482	1					
ANR	3896545	Parameter	int indent	754:75:19979:19988	3896482	2	True				
ANR	3896546	ParameterType	int		3896482	0					
ANR	3896547	Identifier	indent		3896482	1					
ANR	3896548	CFGEntryNode	ENTRY		3896482		True				
ANR	3896549	CFGExitNode	EXIT		3896482		True				
ANR	3896550	Symbol	str		3896482						
ANR	3896551	Symbol	* * list		3896482						
ANR	3896552	Symbol	* i		3896482						
ANR	3896553	Symbol	list -> child		3896482						
ANR	3896554	Symbol	indent		3896482						
ANR	3896555	Symbol	* list		3896482						
ANR	3896556	Symbol	i		3896482						
ANR	3896557	Symbol	* list -> child		3896482						
ANR	3896558	Symbol	list		3896482						
ANR	3896559	Symbol	list -> children		3896482						
ANR	3896560	Function	zend_ast_export_var_list	767:0:20163:20516							
ANR	3896561	FunctionDef	"zend_ast_export_var_list (smart_str * str , zend_ast_list * list , int indent)"		3896560	0					
ANR	3896562	CompoundStatement		768:0:20249:20516	3896560	0					
ANR	3896563	IdentifierDeclStatement	uint32_t i = 0 ;	769:1:20252:20266	3896560	0	True				
ANR	3896564	IdentifierDecl	i = 0		3896560	0					
ANR	3896565	IdentifierDeclType	uint32_t		3896560	0					
ANR	3896566	Identifier	i		3896560	1					
ANR	3896567	AssignmentExpression	i = 0		3896560	2		=			
ANR	3896568	Identifier	i		3896560	0					
ANR	3896569	PrimaryExpression	0		3896560	1					
ANR	3896570	WhileStatement	while ( i < list -> children )		3896560	1					
ANR	3896571	Condition	i < list -> children	771:8:20277:20294	3896560	0	True				
ANR	3896572	RelationalExpression	i < list -> children		3896560	0		<			
ANR	3896573	Identifier	i		3896560	0					
ANR	3896574	PtrMemberAccess	list -> children		3896560	1					
ANR	3896575	Identifier	list		3896560	0					
ANR	3896576	Identifier	children		3896560	1					
ANR	3896577	CompoundStatement		4:28:47:47	3896560	1					
ANR	3896578	IfStatement	if ( i != 0 )		3896560	0					
ANR	3896579	Condition	i != 0	772:6:20305:20310	3896560	0	True				
ANR	3896580	EqualityExpression	i != 0		3896560	0		!=			
ANR	3896581	Identifier	i		3896560	0					
ANR	3896582	PrimaryExpression	0		3896560	1					
ANR	3896583	CompoundStatement		5:14:63:63	3896560	1					
ANR	3896584	ExpressionStatement	"smart_str_appends ( str , "", "" )"	773:3:20318:20346	3896560	0	True				
ANR	3896585	CallExpression	"smart_str_appends ( str , "", "" )"		3896560	0					
ANR	3896586	Callee	smart_str_appends		3896560	0					
ANR	3896587	Identifier	smart_str_appends		3896560	0					
ANR	3896588	ArgumentList	str		3896560	1					
ANR	3896589	Argument	str		3896560	0					
ANR	3896590	Identifier	str		3896560	0					
ANR	3896591	Argument	""", """		3896560	1					
ANR	3896592	PrimaryExpression	""", """		3896560	0					
ANR	3896593	IfStatement	if ( list -> child [ i ] -> attr )		3896560	1					
ANR	3896594	Condition	list -> child [ i ] -> attr	775:6:20358:20377	3896560	0	True				
ANR	3896595	PtrMemberAccess	list -> child [ i ] -> attr		3896560	0					
ANR	3896596	ArrayIndexing	list -> child [ i ]		3896560	0					
ANR	3896597	PtrMemberAccess	list -> child		3896560	0					
ANR	3896598	Identifier	list		3896560	0					
ANR	3896599	Identifier	child		3896560	1					
ANR	3896600	Identifier	i		3896560	1					
ANR	3896601	Identifier	attr		3896560	1					
ANR	3896602	CompoundStatement		8:28:130:130	3896560	1					
ANR	3896603	ExpressionStatement	"smart_str_appendc ( str , '&' )"	776:3:20385:20412	3896560	0	True				
ANR	3896604	CallExpression	"smart_str_appendc ( str , '&' )"		3896560	0					
ANR	3896605	Callee	smart_str_appendc		3896560	0					
ANR	3896606	Identifier	smart_str_appendc		3896560	0					
ANR	3896607	ArgumentList	str		3896560	1					
ANR	3896608	Argument	str		3896560	0					
ANR	3896609	Identifier	str		3896560	0					
ANR	3896610	Argument	'&'		3896560	1					
ANR	3896611	PrimaryExpression	'&'		3896560	0					
ANR	3896612	ExpressionStatement	"smart_str_appendc ( str , '$' )"	778:2:20420:20447	3896560	2	True				
ANR	3896613	CallExpression	"smart_str_appendc ( str , '$' )"		3896560	0					
ANR	3896614	Callee	smart_str_appendc		3896560	0					
ANR	3896615	Identifier	smart_str_appendc		3896560	0					
ANR	3896616	ArgumentList	str		3896560	1					
ANR	3896617	Argument	str		3896560	0					
ANR	3896618	Identifier	str		3896560	0					
ANR	3896619	Argument	'$'		3896560	1					
ANR	3896620	PrimaryExpression	'$'		3896560	0					
ANR	3896621	ExpressionStatement	"zend_ast_export_name ( str , list -> child [ i ] , 20 , indent )"	779:2:20451:20504	3896560	3	True				
ANR	3896622	CallExpression	"zend_ast_export_name ( str , list -> child [ i ] , 20 , indent )"		3896560	0					
ANR	3896623	Callee	zend_ast_export_name		3896560	0					
ANR	3896624	Identifier	zend_ast_export_name		3896560	0					
ANR	3896625	ArgumentList	str		3896560	1					
ANR	3896626	Argument	str		3896560	0					
ANR	3896627	Identifier	str		3896560	0					
ANR	3896628	Argument	list -> child [ i ]		3896560	1					
ANR	3896629	ArrayIndexing	list -> child [ i ]		3896560	0					
ANR	3896630	PtrMemberAccess	list -> child		3896560	0					
ANR	3896631	Identifier	list		3896560	0					
ANR	3896632	Identifier	child		3896560	1					
ANR	3896633	Identifier	i		3896560	1					
ANR	3896634	Argument	20		3896560	2					
ANR	3896635	PrimaryExpression	20		3896560	0					
ANR	3896636	Argument	indent		3896560	3					
ANR	3896637	Identifier	indent		3896560	0					
ANR	3896638	ExpressionStatement	i ++	780:2:20508:20511	3896560	4	True				
ANR	3896639	PostIncDecOperationExpression	i ++		3896560	0					
ANR	3896640	Identifier	i		3896560	0					
ANR	3896641	IncDec	++		3896560	1					
ANR	3896642	ReturnType	static void		3896560	1					
ANR	3896643	Identifier	zend_ast_export_var_list		3896560	2					
ANR	3896644	ParameterList	"smart_str * str , zend_ast_list * list , int indent"		3896560	3					
ANR	3896645	Parameter	smart_str * str	767:37:20200:20213	3896560	0	True				
ANR	3896646	ParameterType	smart_str *		3896560	0					
ANR	3896647	Identifier	str		3896560	1					
ANR	3896648	Parameter	zend_ast_list * list	767:53:20216:20234	3896560	1	True				
ANR	3896649	ParameterType	zend_ast_list *		3896560	0					
ANR	3896650	Identifier	list		3896560	1					
ANR	3896651	Parameter	int indent	767:74:20237:20246	3896560	2	True				
ANR	3896652	ParameterType	int		3896560	0					
ANR	3896653	Identifier	indent		3896560	1					
ANR	3896654	CFGEntryNode	ENTRY		3896560		True				
ANR	3896655	CFGExitNode	EXIT		3896560		True				
ANR	3896656	Symbol	* * i		3896560						
ANR	3896657	Symbol	list -> child		3896560						
ANR	3896658	Symbol	indent		3896560						
ANR	3896659	Symbol	i		3896560						
ANR	3896660	Symbol	list		3896560						
ANR	3896661	Symbol	list -> child [ i ] -> attr		3896560						
ANR	3896662	Symbol	str		3896560						
ANR	3896663	Symbol	* i		3896560						
ANR	3896664	Symbol	* * list		3896560						
ANR	3896665	Symbol	* * * list		3896560						
ANR	3896666	Symbol	* list		3896560						
ANR	3896667	Symbol	* list -> child		3896560						
ANR	3896668	Symbol	* * list -> child		3896560						
ANR	3896669	Symbol	list -> children		3896560						
ANR	3896670	Function	zend_ast_export_stmt	784:0:20519:21431							
ANR	3896671	FunctionDef	"zend_ast_export_stmt (smart_str * str , zend_ast * ast , int indent)"		3896670	0					
ANR	3896672	CompoundStatement		785:0:20595:21431	3896670	0					
ANR	3896673	IfStatement	if ( ! ast )		3896670	0					
ANR	3896674	Condition	! ast	786:5:20602:20605	3896670	0	True				
ANR	3896675	UnaryOperationExpression	! ast		3896670	0					
ANR	3896676	UnaryOperator	!		3896670	0					
ANR	3896677	Identifier	ast		3896670	1					
ANR	3896678	CompoundStatement		2:11:12:12	3896670	1					
ANR	3896679	ReturnStatement	return ;	787:2:20612:20618	3896670	0	True				
ANR	3896680	IfStatement	if ( ast -> kind == ZEND_AST_STMT_LIST || ast -> kind == ZEND_AST_TRAIT_ADAPTATIONS )		3896670	1					
ANR	3896681	Condition	ast -> kind == ZEND_AST_STMT_LIST || ast -> kind == ZEND_AST_TRAIT_ADAPTATIONS	790:5:20629:20707	3896670	0	True				
ANR	3896682	OrExpression	ast -> kind == ZEND_AST_STMT_LIST || ast -> kind == ZEND_AST_TRAIT_ADAPTATIONS		3896670	0		||			
ANR	3896683	EqualityExpression	ast -> kind == ZEND_AST_STMT_LIST		3896670	0		==			
ANR	3896684	PtrMemberAccess	ast -> kind		3896670	0					
ANR	3896685	Identifier	ast		3896670	0					
ANR	3896686	Identifier	kind		3896670	1					
ANR	3896687	Identifier	ZEND_AST_STMT_LIST		3896670	1					
ANR	3896688	EqualityExpression	ast -> kind == ZEND_AST_TRAIT_ADAPTATIONS		3896670	1		==			
ANR	3896689	PtrMemberAccess	ast -> kind		3896670	0					
ANR	3896690	Identifier	ast		3896670	0					
ANR	3896691	Identifier	kind		3896670	1					
ANR	3896692	Identifier	ZEND_AST_TRAIT_ADAPTATIONS		3896670	1					
ANR	3896693	CompoundStatement		9:2:163:177	3896670	1					
ANR	3896694	IdentifierDeclStatement	zend_ast_list * list = ( zend_ast_list * ) ast ;	792:2:20714:20755	3896670	0	True				
ANR	3896695	IdentifierDecl	* list = ( zend_ast_list * ) ast		3896670	0					
ANR	3896696	IdentifierDeclType	zend_ast_list *		3896670	0					
ANR	3896697	Identifier	list		3896670	1					
ANR	3896698	AssignmentExpression	* list = ( zend_ast_list * ) ast		3896670	2		=			
ANR	3896699	Identifier	list		3896670	0					
ANR	3896700	CastExpression	( zend_ast_list * ) ast		3896670	1					
ANR	3896701	CastTarget	zend_ast_list *		3896670	0					
ANR	3896702	Identifier	ast		3896670	1					
ANR	3896703	IdentifierDeclStatement	uint32_t i = 0 ;	793:2:20759:20773	3896670	1	True				
ANR	3896704	IdentifierDecl	i = 0		3896670	0					
ANR	3896705	IdentifierDeclType	uint32_t		3896670	0					
ANR	3896706	Identifier	i		3896670	1					
ANR	3896707	AssignmentExpression	i = 0		3896670	2		=			
ANR	3896708	Identifier	i		3896670	0					
ANR	3896709	PrimaryExpression	0		3896670	1					
ANR	3896710	WhileStatement	while ( i < list -> children )		3896670	2					
ANR	3896711	Condition	i < list -> children	795:9:20785:20802	3896670	0	True				
ANR	3896712	RelationalExpression	i < list -> children		3896670	0		<			
ANR	3896713	Identifier	i		3896670	0					
ANR	3896714	PtrMemberAccess	list -> children		3896670	1					
ANR	3896715	Identifier	list		3896670	0					
ANR	3896716	Identifier	children		3896670	1					
ANR	3896717	CompoundStatement		11:29:209:209	3896670	1					
ANR	3896718	ExpressionStatement	ast = list -> child [ i ]	796:3:20810:20830	3896670	0	True				
ANR	3896719	AssignmentExpression	ast = list -> child [ i ]		3896670	0		=			
ANR	3896720	Identifier	ast		3896670	0					
ANR	3896721	ArrayIndexing	list -> child [ i ]		3896670	1					
ANR	3896722	PtrMemberAccess	list -> child		3896670	0					
ANR	3896723	Identifier	list		3896670	0					
ANR	3896724	Identifier	child		3896670	1					
ANR	3896725	Identifier	i		3896670	1					
ANR	3896726	ExpressionStatement	"zend_ast_export_stmt ( str , ast , indent )"	797:3:20835:20873	3896670	1	True				
ANR	3896727	CallExpression	"zend_ast_export_stmt ( str , ast , indent )"		3896670	0					
ANR	3896728	Callee	zend_ast_export_stmt		3896670	0					
ANR	3896729	Identifier	zend_ast_export_stmt		3896670	0					
ANR	3896730	ArgumentList	str		3896670	1					
ANR	3896731	Argument	str		3896670	0					
ANR	3896732	Identifier	str		3896670	0					
ANR	3896733	Argument	ast		3896670	1					
ANR	3896734	Identifier	ast		3896670	0					
ANR	3896735	Argument	indent		3896670	2					
ANR	3896736	Identifier	indent		3896670	0					
ANR	3896737	ExpressionStatement	i ++	798:3:20878:20881	3896670	2	True				
ANR	3896738	PostIncDecOperationExpression	i ++		3896670	0					
ANR	3896739	Identifier	i		3896670	0					
ANR	3896740	IncDec	++		3896670	1					
ANR	3896741	ElseStatement	else		3896670	0					
ANR	3896742	CompoundStatement		16:8:299:299	3896670	0					
ANR	3896743	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	801:2:20899:20934	3896670	0	True				
ANR	3896744	CallExpression	"zend_ast_export_indent ( str , indent )"		3896670	0					
ANR	3896745	Callee	zend_ast_export_indent		3896670	0					
ANR	3896746	Identifier	zend_ast_export_indent		3896670	0					
ANR	3896747	ArgumentList	str		3896670	1					
ANR	3896748	Argument	str		3896670	0					
ANR	3896749	Identifier	str		3896670	0					
ANR	3896750	Argument	indent		3896670	1					
ANR	3896751	Identifier	indent		3896670	0					
ANR	3896752	ExpressionStatement	"zend_ast_export_ex ( str , ast , 0 , indent )"	802:2:20938:20977	3896670	1	True				
ANR	3896753	CallExpression	"zend_ast_export_ex ( str , ast , 0 , indent )"		3896670	0					
ANR	3896754	Callee	zend_ast_export_ex		3896670	0					
ANR	3896755	Identifier	zend_ast_export_ex		3896670	0					
ANR	3896756	ArgumentList	str		3896670	1					
ANR	3896757	Argument	str		3896670	0					
ANR	3896758	Identifier	str		3896670	0					
ANR	3896759	Argument	ast		3896670	1					
ANR	3896760	Identifier	ast		3896670	0					
ANR	3896761	Argument	0		3896670	2					
ANR	3896762	PrimaryExpression	0		3896670	0					
ANR	3896763	Argument	indent		3896670	3					
ANR	3896764	Identifier	indent		3896670	0					
ANR	3896765	SwitchStatement	switch ( ast -> kind )		3896670	2					
ANR	3896766	Condition	ast -> kind	803:10:20989:20997	3896670	0	True				
ANR	3896767	PtrMemberAccess	ast -> kind		3896670	0					
ANR	3896768	Identifier	ast		3896670	0					
ANR	3896769	Identifier	kind		3896670	1					
ANR	3896770	CompoundStatement		19:21:404:404	3896670	1					
ANR	3896771	Label	case ZEND_AST_LABEL :	804:3:21005:21024	3896670	0	True				
ANR	3896772	Identifier	ZEND_AST_LABEL		3896670	0					
ANR	3896773	Label	case ZEND_AST_IF :	805:3:21029:21045	3896670	1	True				
ANR	3896774	Identifier	ZEND_AST_IF		3896670	0					
ANR	3896775	Label	case ZEND_AST_SWITCH :	806:3:21050:21070	3896670	2	True				
ANR	3896776	Identifier	ZEND_AST_SWITCH		3896670	0					
ANR	3896777	Label	case ZEND_AST_WHILE :	807:3:21075:21094	3896670	3	True				
ANR	3896778	Identifier	ZEND_AST_WHILE		3896670	0					
ANR	3896779	Label	case ZEND_AST_TRY :	808:3:21099:21116	3896670	4	True				
ANR	3896780	Identifier	ZEND_AST_TRY		3896670	0					
ANR	3896781	Label	case ZEND_AST_FOR :	809:3:21121:21138	3896670	5	True				
ANR	3896782	Identifier	ZEND_AST_FOR		3896670	0					
ANR	3896783	Label	case ZEND_AST_FOREACH :	810:3:21143:21164	3896670	6	True				
ANR	3896784	Identifier	ZEND_AST_FOREACH		3896670	0					
ANR	3896785	Label	case ZEND_AST_FUNC_DECL :	811:3:21169:21192	3896670	7	True				
ANR	3896786	Identifier	ZEND_AST_FUNC_DECL		3896670	0					
ANR	3896787	Label	case ZEND_AST_METHOD :	812:3:21197:21217	3896670	8	True				
ANR	3896788	Identifier	ZEND_AST_METHOD		3896670	0					
ANR	3896789	Label	case ZEND_AST_CLASS :	813:3:21222:21241	3896670	9	True				
ANR	3896790	Identifier	ZEND_AST_CLASS		3896670	0					
ANR	3896791	Label	case ZEND_AST_USE_TRAIT :	814:3:21246:21269	3896670	10	True				
ANR	3896792	Identifier	ZEND_AST_USE_TRAIT		3896670	0					
ANR	3896793	Label	case ZEND_AST_NAMESPACE :	815:3:21274:21297	3896670	11	True				
ANR	3896794	Identifier	ZEND_AST_NAMESPACE		3896670	0					
ANR	3896795	Label	case ZEND_AST_DECLARE :	816:3:21302:21323	3896670	12	True				
ANR	3896796	Identifier	ZEND_AST_DECLARE		3896670	0					
ANR	3896797	BreakStatement	break ;	817:4:21329:21334	3896670	13	True				
ANR	3896798	Label	default :	818:3:21339:21346	3896670	14	True				
ANR	3896799	Identifier	default		3896670	0					
ANR	3896800	ExpressionStatement	"smart_str_appendc ( str , ';' )"	819:4:21352:21379	3896670	15	True				
ANR	3896801	CallExpression	"smart_str_appendc ( str , ';' )"		3896670	0					
ANR	3896802	Callee	smart_str_appendc		3896670	0					
ANR	3896803	Identifier	smart_str_appendc		3896670	0					
ANR	3896804	ArgumentList	str		3896670	1					
ANR	3896805	Argument	str		3896670	0					
ANR	3896806	Identifier	str		3896670	0					
ANR	3896807	Argument	';'		3896670	1					
ANR	3896808	PrimaryExpression	';'		3896670	0					
ANR	3896809	BreakStatement	break ;	820:4:21385:21390	3896670	16	True				
ANR	3896810	ExpressionStatement	"smart_str_appendc ( str , '\\n' )"	822:2:21398:21426	3896670	3	True				
ANR	3896811	CallExpression	"smart_str_appendc ( str , '\\n' )"		3896670	0					
ANR	3896812	Callee	smart_str_appendc		3896670	0					
ANR	3896813	Identifier	smart_str_appendc		3896670	0					
ANR	3896814	ArgumentList	str		3896670	1					
ANR	3896815	Argument	str		3896670	0					
ANR	3896816	Identifier	str		3896670	0					
ANR	3896817	Argument	'\\n'		3896670	1					
ANR	3896818	PrimaryExpression	'\\n'		3896670	0					
ANR	3896819	ReturnType	static void		3896670	1					
ANR	3896820	Identifier	zend_ast_export_stmt		3896670	2					
ANR	3896821	ParameterList	"smart_str * str , zend_ast * ast , int indent"		3896670	3					
ANR	3896822	Parameter	smart_str * str	784:33:20552:20565	3896670	0	True				
ANR	3896823	ParameterType	smart_str *		3896670	0					
ANR	3896824	Identifier	str		3896670	1					
ANR	3896825	Parameter	zend_ast * ast	784:49:20568:20580	3896670	1	True				
ANR	3896826	ParameterType	zend_ast *		3896670	0					
ANR	3896827	Identifier	ast		3896670	1					
ANR	3896828	Parameter	int indent	784:64:20583:20592	3896670	2	True				
ANR	3896829	ParameterType	int		3896670	0					
ANR	3896830	Identifier	indent		3896670	1					
ANR	3896831	CFGEntryNode	ENTRY		3896670		True				
ANR	3896832	CFGExitNode	EXIT		3896670		True				
ANR	3896833	Symbol	ast -> kind		3896670						
ANR	3896834	Symbol	ast		3896670						
ANR	3896835	Symbol	list -> child		3896670						
ANR	3896836	Symbol	indent		3896670						
ANR	3896837	Symbol	i		3896670						
ANR	3896838	Symbol	list		3896670						
ANR	3896839	Symbol	str		3896670						
ANR	3896840	Symbol	ZEND_AST_STMT_LIST		3896670						
ANR	3896841	Symbol	* ast		3896670						
ANR	3896842	Symbol	* * list		3896670						
ANR	3896843	Symbol	* i		3896670						
ANR	3896844	Symbol	* list		3896670						
ANR	3896845	Symbol	* list -> child		3896670						
ANR	3896846	Symbol	list -> children		3896670						
ANR	3896847	Symbol	ZEND_AST_TRAIT_ADAPTATIONS		3896670						
ANR	3896848	Function	zend_ast_export_if_stmt	826:0:21434:22381							
ANR	3896849	FunctionDef	"zend_ast_export_if_stmt (smart_str * str , zend_ast_list * list , int indent)"		3896848	0					
ANR	3896850	CompoundStatement		827:0:21519:22381	3896848	0					
ANR	3896851	IdentifierDeclStatement	uint32_t i ;	828:1:21522:21532	3896848	0	True				
ANR	3896852	IdentifierDecl	i		3896848	0					
ANR	3896853	IdentifierDeclType	uint32_t		3896848	0					
ANR	3896854	Identifier	i		3896848	1					
ANR	3896855	IdentifierDeclStatement	zend_ast * ast ;	829:1:21535:21548	3896848	1	True				
ANR	3896856	IdentifierDecl	* ast		3896848	0					
ANR	3896857	IdentifierDeclType	zend_ast *		3896848	0					
ANR	3896858	Identifier	ast		3896848	1					
ANR	3896859	Label	tail_call :	831:0:21551:21560	3896848	2	True				
ANR	3896860	Identifier	tail_call		3896848	0					
ANR	3896861	ExpressionStatement	i = 0	832:1:21563:21568	3896848	3	True				
ANR	3896862	AssignmentExpression	i = 0		3896848	0		=			
ANR	3896863	Identifier	i		3896848	0					
ANR	3896864	PrimaryExpression	0		3896848	1					
ANR	3896865	WhileStatement	while ( i < list -> children )		3896848	4					
ANR	3896866	Condition	i < list -> children	833:8:21578:21595	3896848	0	True				
ANR	3896867	RelationalExpression	i < list -> children		3896848	0		<			
ANR	3896868	Identifier	i		3896848	0					
ANR	3896869	PtrMemberAccess	list -> children		3896848	1					
ANR	3896870	Identifier	list		3896848	0					
ANR	3896871	Identifier	children		3896848	1					
ANR	3896872	CompoundStatement		7:28:78:78	3896848	1					
ANR	3896873	ExpressionStatement	ast = list -> child [ i ]	834:2:21602:21622	3896848	0	True				
ANR	3896874	AssignmentExpression	ast = list -> child [ i ]		3896848	0		=			
ANR	3896875	Identifier	ast		3896848	0					
ANR	3896876	ArrayIndexing	list -> child [ i ]		3896848	1					
ANR	3896877	PtrMemberAccess	list -> child		3896848	0					
ANR	3896878	Identifier	list		3896848	0					
ANR	3896879	Identifier	child		3896848	1					
ANR	3896880	Identifier	i		3896848	1					
ANR	3896881	ExpressionStatement	ZEND_ASSERT ( ast -> kind == ZEND_AST_IF_ELEM )	835:2:21626:21668	3896848	1	True				
ANR	3896882	CallExpression	ZEND_ASSERT ( ast -> kind == ZEND_AST_IF_ELEM )		3896848	0					
ANR	3896883	Callee	ZEND_ASSERT		3896848	0					
ANR	3896884	Identifier	ZEND_ASSERT		3896848	0					
ANR	3896885	ArgumentList	ast -> kind == ZEND_AST_IF_ELEM		3896848	1					
ANR	3896886	Argument	ast -> kind == ZEND_AST_IF_ELEM		3896848	0					
ANR	3896887	EqualityExpression	ast -> kind == ZEND_AST_IF_ELEM		3896848	0		==			
ANR	3896888	PtrMemberAccess	ast -> kind		3896848	0					
ANR	3896889	Identifier	ast		3896848	0					
ANR	3896890	Identifier	kind		3896848	1					
ANR	3896891	Identifier	ZEND_AST_IF_ELEM		3896848	1					
ANR	3896892	IfStatement	if ( ast -> child [ 0 ] )		3896848	2					
ANR	3896893	Condition	ast -> child [ 0 ]	836:6:21676:21688	3896848	0	True				
ANR	3896894	ArrayIndexing	ast -> child [ 0 ]		3896848	0					
ANR	3896895	PtrMemberAccess	ast -> child		3896848	0					
ANR	3896896	Identifier	ast		3896848	0					
ANR	3896897	Identifier	child		3896848	1					
ANR	3896898	PrimaryExpression	0		3896848	1					
ANR	3896899	CompoundStatement		10:21:171:171	3896848	1					
ANR	3896900	IfStatement	if ( i == 0 )		3896848	0					
ANR	3896901	Condition	i == 0	837:7:21700:21705	3896848	0	True				
ANR	3896902	EqualityExpression	i == 0		3896848	0		==			
ANR	3896903	Identifier	i		3896848	0					
ANR	3896904	PrimaryExpression	0		3896848	1					
ANR	3896905	CompoundStatement		11:15:188:188	3896848	1					
ANR	3896906	ExpressionStatement	"smart_str_appends ( str , ""if ("" )"	838:4:21714:21744	3896848	0	True				
ANR	3896907	CallExpression	"smart_str_appends ( str , ""if ("" )"		3896848	0					
ANR	3896908	Callee	smart_str_appends		3896848	0					
ANR	3896909	Identifier	smart_str_appends		3896848	0					
ANR	3896910	ArgumentList	str		3896848	1					
ANR	3896911	Argument	str		3896848	0					
ANR	3896912	Identifier	str		3896848	0					
ANR	3896913	Argument	"""if ("""		3896848	1					
ANR	3896914	PrimaryExpression	"""if ("""		3896848	0					
ANR	3896915	ElseStatement	else		3896848	0					
ANR	3896916	CompoundStatement		13:10:236:236	3896848	0					
ANR	3896917	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	840:4:21762:21797	3896848	0	True				
ANR	3896918	CallExpression	"zend_ast_export_indent ( str , indent )"		3896848	0					
ANR	3896919	Callee	zend_ast_export_indent		3896848	0					
ANR	3896920	Identifier	zend_ast_export_indent		3896848	0					
ANR	3896921	ArgumentList	str		3896848	1					
ANR	3896922	Argument	str		3896848	0					
ANR	3896923	Identifier	str		3896848	0					
ANR	3896924	Argument	indent		3896848	1					
ANR	3896925	Identifier	indent		3896848	0					
ANR	3896926	ExpressionStatement	"smart_str_appends ( str , ""} elseif ("" )"	841:4:21803:21839	3896848	1	True				
ANR	3896927	CallExpression	"smart_str_appends ( str , ""} elseif ("" )"		3896848	0					
ANR	3896928	Callee	smart_str_appends		3896848	0					
ANR	3896929	Identifier	smart_str_appends		3896848	0					
ANR	3896930	ArgumentList	str		3896848	1					
ANR	3896931	Argument	str		3896848	0					
ANR	3896932	Identifier	str		3896848	0					
ANR	3896933	Argument	"""} elseif ("""		3896848	1					
ANR	3896934	PrimaryExpression	"""} elseif ("""		3896848	0					
ANR	3896935	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	843:3:21849:21898	3896848	1	True				
ANR	3896936	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		3896848	0					
ANR	3896937	Callee	zend_ast_export_ex		3896848	0					
ANR	3896938	Identifier	zend_ast_export_ex		3896848	0					
ANR	3896939	ArgumentList	str		3896848	1					
ANR	3896940	Argument	str		3896848	0					
ANR	3896941	Identifier	str		3896848	0					
ANR	3896942	Argument	ast -> child [ 0 ]		3896848	1					
ANR	3896943	ArrayIndexing	ast -> child [ 0 ]		3896848	0					
ANR	3896944	PtrMemberAccess	ast -> child		3896848	0					
ANR	3896945	Identifier	ast		3896848	0					
ANR	3896946	Identifier	child		3896848	1					
ANR	3896947	PrimaryExpression	0		3896848	1					
ANR	3896948	Argument	0		3896848	2					
ANR	3896949	PrimaryExpression	0		3896848	0					
ANR	3896950	Argument	indent		3896848	3					
ANR	3896951	Identifier	indent		3896848	0					
ANR	3896952	ExpressionStatement	"smart_str_appends ( str , "") {\\n"" )"	844:3:21903:21934	3896848	2	True				
ANR	3896953	CallExpression	"smart_str_appends ( str , "") {\\n"" )"		3896848	0					
ANR	3896954	Callee	smart_str_appends		3896848	0					
ANR	3896955	Identifier	smart_str_appends		3896848	0					
ANR	3896956	ArgumentList	str		3896848	1					
ANR	3896957	Argument	str		3896848	0					
ANR	3896958	Identifier	str		3896848	0					
ANR	3896959	Argument	""") {\\n"""		3896848	1					
ANR	3896960	PrimaryExpression	""") {\\n"""		3896848	0					
ANR	3896961	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"	845:3:21939:21991	3896848	3	True				
ANR	3896962	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"		3896848	0					
ANR	3896963	Callee	zend_ast_export_stmt		3896848	0					
ANR	3896964	Identifier	zend_ast_export_stmt		3896848	0					
ANR	3896965	ArgumentList	str		3896848	1					
ANR	3896966	Argument	str		3896848	0					
ANR	3896967	Identifier	str		3896848	0					
ANR	3896968	Argument	ast -> child [ 1 ]		3896848	1					
ANR	3896969	ArrayIndexing	ast -> child [ 1 ]		3896848	0					
ANR	3896970	PtrMemberAccess	ast -> child		3896848	0					
ANR	3896971	Identifier	ast		3896848	0					
ANR	3896972	Identifier	child		3896848	1					
ANR	3896973	PrimaryExpression	1		3896848	1					
ANR	3896974	Argument	indent + 1		3896848	2					
ANR	3896975	AdditiveExpression	indent + 1		3896848	0		+			
ANR	3896976	Identifier	indent		3896848	0					
ANR	3896977	PrimaryExpression	1		3896848	1					
ANR	3896978	ElseStatement	else		3896848	0					
ANR	3896979	CompoundStatement		20:9:482:482	3896848	0					
ANR	3896980	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	847:3:22007:22042	3896848	0	True				
ANR	3896981	CallExpression	"zend_ast_export_indent ( str , indent )"		3896848	0					
ANR	3896982	Callee	zend_ast_export_indent		3896848	0					
ANR	3896983	Identifier	zend_ast_export_indent		3896848	0					
ANR	3896984	ArgumentList	str		3896848	1					
ANR	3896985	Argument	str		3896848	0					
ANR	3896986	Identifier	str		3896848	0					
ANR	3896987	Argument	indent		3896848	1					
ANR	3896988	Identifier	indent		3896848	0					
ANR	3896989	ExpressionStatement	"smart_str_appends ( str , ""} else "" )"	848:3:22047:22080	3896848	1	True				
ANR	3896990	CallExpression	"smart_str_appends ( str , ""} else "" )"		3896848	0					
ANR	3896991	Callee	smart_str_appends		3896848	0					
ANR	3896992	Identifier	smart_str_appends		3896848	0					
ANR	3896993	ArgumentList	str		3896848	1					
ANR	3896994	Argument	str		3896848	0					
ANR	3896995	Identifier	str		3896848	0					
ANR	3896996	Argument	"""} else """		3896848	1					
ANR	3896997	PrimaryExpression	"""} else """		3896848	0					
ANR	3896998	IfStatement	if ( ast -> child [ 1 ] -> kind == ZEND_AST_IF )		3896848	2					
ANR	3896999	Condition	ast -> child [ 1 ] -> kind == ZEND_AST_IF	849:7:22089:22122	3896848	0	True				
ANR	3897000	EqualityExpression	ast -> child [ 1 ] -> kind == ZEND_AST_IF		3896848	0		==			
ANR	3897001	PtrMemberAccess	ast -> child [ 1 ] -> kind		3896848	0					
ANR	3897002	ArrayIndexing	ast -> child [ 1 ]		3896848	0					
ANR	3897003	PtrMemberAccess	ast -> child		3896848	0					
ANR	3897004	Identifier	ast		3896848	0					
ANR	3897005	Identifier	child		3896848	1					
ANR	3897006	PrimaryExpression	1		3896848	1					
ANR	3897007	Identifier	kind		3896848	1					
ANR	3897008	Identifier	ZEND_AST_IF		3896848	1					
ANR	3897009	CompoundStatement		23:43:605:605	3896848	1					
ANR	3897010	ExpressionStatement	list = ( zend_ast_list * ) ast -> child [ 1 ]	850:4:22131:22167	3896848	0	True				
ANR	3897011	AssignmentExpression	list = ( zend_ast_list * ) ast -> child [ 1 ]		3896848	0		=			
ANR	3897012	Identifier	list		3896848	0					
ANR	3897013	CastExpression	( zend_ast_list * ) ast -> child [ 1 ]		3896848	1					
ANR	3897014	CastTarget	zend_ast_list *		3896848	0					
ANR	3897015	ArrayIndexing	ast -> child [ 1 ]		3896848	1					
ANR	3897016	PtrMemberAccess	ast -> child		3896848	0					
ANR	3897017	Identifier	ast		3896848	0					
ANR	3897018	Identifier	child		3896848	1					
ANR	3897019	PrimaryExpression	1		3896848	1					
ANR	3897020	GotoStatement	goto tail_call ;	851:4:22173:22187	3896848	1	True				
ANR	3897021	Identifier	tail_call		3896848	0					
ANR	3897022	ElseStatement	else		3896848	0					
ANR	3897023	CompoundStatement		26:10:679:679	3896848	0					
ANR	3897024	ExpressionStatement	"smart_str_appends ( str , ""{\\n"" )"	853:4:22205:22234	3896848	0	True				
ANR	3897025	CallExpression	"smart_str_appends ( str , ""{\\n"" )"		3896848	0					
ANR	3897026	Callee	smart_str_appends		3896848	0					
ANR	3897027	Identifier	smart_str_appends		3896848	0					
ANR	3897028	ArgumentList	str		3896848	1					
ANR	3897029	Argument	str		3896848	0					
ANR	3897030	Identifier	str		3896848	0					
ANR	3897031	Argument	"""{\\n"""		3896848	1					
ANR	3897032	PrimaryExpression	"""{\\n"""		3896848	0					
ANR	3897033	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"	854:4:22240:22292	3896848	1	True				
ANR	3897034	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"		3896848	0					
ANR	3897035	Callee	zend_ast_export_stmt		3896848	0					
ANR	3897036	Identifier	zend_ast_export_stmt		3896848	0					
ANR	3897037	ArgumentList	str		3896848	1					
ANR	3897038	Argument	str		3896848	0					
ANR	3897039	Identifier	str		3896848	0					
ANR	3897040	Argument	ast -> child [ 1 ]		3896848	1					
ANR	3897041	ArrayIndexing	ast -> child [ 1 ]		3896848	0					
ANR	3897042	PtrMemberAccess	ast -> child		3896848	0					
ANR	3897043	Identifier	ast		3896848	0					
ANR	3897044	Identifier	child		3896848	1					
ANR	3897045	PrimaryExpression	1		3896848	1					
ANR	3897046	Argument	indent + 1		3896848	2					
ANR	3897047	AdditiveExpression	indent + 1		3896848	0		+			
ANR	3897048	Identifier	indent		3896848	0					
ANR	3897049	PrimaryExpression	1		3896848	1					
ANR	3897050	ExpressionStatement	i ++	857:2:22305:22308	3896848	3	True				
ANR	3897051	PostIncDecOperationExpression	i ++		3896848	0					
ANR	3897052	Identifier	i		3896848	0					
ANR	3897053	IncDec	++		3896848	1					
ANR	3897054	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	859:1:22314:22349	3896848	5	True				
ANR	3897055	CallExpression	"zend_ast_export_indent ( str , indent )"		3896848	0					
ANR	3897056	Callee	zend_ast_export_indent		3896848	0					
ANR	3897057	Identifier	zend_ast_export_indent		3896848	0					
ANR	3897058	ArgumentList	str		3896848	1					
ANR	3897059	Argument	str		3896848	0					
ANR	3897060	Identifier	str		3896848	0					
ANR	3897061	Argument	indent		3896848	1					
ANR	3897062	Identifier	indent		3896848	0					
ANR	3897063	ExpressionStatement	"smart_str_appendc ( str , '}' )"	860:1:22352:22379	3896848	6	True				
ANR	3897064	CallExpression	"smart_str_appendc ( str , '}' )"		3896848	0					
ANR	3897065	Callee	smart_str_appendc		3896848	0					
ANR	3897066	Identifier	smart_str_appendc		3896848	0					
ANR	3897067	ArgumentList	str		3896848	1					
ANR	3897068	Argument	str		3896848	0					
ANR	3897069	Identifier	str		3896848	0					
ANR	3897070	Argument	'}'		3896848	1					
ANR	3897071	PrimaryExpression	'}'		3896848	0					
ANR	3897072	ReturnType	static void		3896848	1					
ANR	3897073	Identifier	zend_ast_export_if_stmt		3896848	2					
ANR	3897074	ParameterList	"smart_str * str , zend_ast_list * list , int indent"		3896848	3					
ANR	3897075	Parameter	smart_str * str	826:36:21470:21483	3896848	0	True				
ANR	3897076	ParameterType	smart_str *		3896848	0					
ANR	3897077	Identifier	str		3896848	1					
ANR	3897078	Parameter	zend_ast_list * list	826:52:21486:21504	3896848	1	True				
ANR	3897079	ParameterType	zend_ast_list *		3896848	0					
ANR	3897080	Identifier	list		3896848	1					
ANR	3897081	Parameter	int indent	826:73:21507:21516	3896848	2	True				
ANR	3897082	ParameterType	int		3896848	0					
ANR	3897083	Identifier	indent		3896848	1					
ANR	3897084	CFGEntryNode	ENTRY		3896848		True				
ANR	3897085	CFGExitNode	EXIT		3896848		True				
ANR	3897086	Symbol	* * * ast		3896848						
ANR	3897087	Symbol	* * ast -> child		3896848						
ANR	3897088	Symbol	ast -> kind		3896848						
ANR	3897089	Symbol	ast		3896848						
ANR	3897090	Symbol	list -> child		3896848						
ANR	3897091	Symbol	indent		3896848						
ANR	3897092	Symbol	ZEND_AST_IF_ELEM		3896848						
ANR	3897093	Symbol	ast -> child [ 1 ] -> kind		3896848						
ANR	3897094	Symbol	ZEND_AST_IF		3896848						
ANR	3897095	Symbol	i		3896848						
ANR	3897096	Symbol	list		3896848						
ANR	3897097	Symbol	str		3896848						
ANR	3897098	Symbol	* * list		3896848						
ANR	3897099	Symbol	* i		3896848						
ANR	3897100	Symbol	* ast		3896848						
ANR	3897101	Symbol	* list		3896848						
ANR	3897102	Symbol	* * ast		3896848						
ANR	3897103	Symbol	* list -> child		3896848						
ANR	3897104	Symbol	* ast -> child		3896848						
ANR	3897105	Symbol	ast -> child		3896848						
ANR	3897106	Symbol	list -> children		3896848						
ANR	3897107	Function	zend_ast_export_zval	863:0:22384:23919							
ANR	3897108	FunctionDef	"zend_ast_export_zval (smart_str * str , zval * zv , int priority , int indent)"		3897107	0					
ANR	3897109	CompoundStatement		864:0:22469:23919	3897107	0					
ANR	3897110	IdentifierDeclStatement	zend_long idx ;	865:1:22472:22485	3897107	0	True				
ANR	3897111	IdentifierDecl	idx		3897107	0					
ANR	3897112	IdentifierDeclType	zend_long		3897107	0					
ANR	3897113	Identifier	idx		3897107	1					
ANR	3897114	IdentifierDeclStatement	zend_string * key ;	866:1:22488:22504	3897107	1	True				
ANR	3897115	IdentifierDecl	* key		3897107	0					
ANR	3897116	IdentifierDeclType	zend_string *		3897107	0					
ANR	3897117	Identifier	key		3897107	1					
ANR	3897118	IdentifierDeclStatement	zval * val ;	867:1:22507:22516	3897107	2	True				
ANR	3897119	IdentifierDecl	* val		3897107	0					
ANR	3897120	IdentifierDeclType	zval *		3897107	0					
ANR	3897121	Identifier	val		3897107	1					
ANR	3897122	IdentifierDeclStatement	int first ;	868:1:22519:22528	3897107	3	True				
ANR	3897123	IdentifierDecl	first		3897107	0					
ANR	3897124	IdentifierDeclType	int		3897107	0					
ANR	3897125	Identifier	first		3897107	1					
ANR	3897126	ExpressionStatement	ZVAL_DEREF ( zv )	870:1:22532:22546	3897107	4	True				
ANR	3897127	CallExpression	ZVAL_DEREF ( zv )		3897107	0					
ANR	3897128	Callee	ZVAL_DEREF		3897107	0					
ANR	3897129	Identifier	ZVAL_DEREF		3897107	0					
ANR	3897130	ArgumentList	zv		3897107	1					
ANR	3897131	Argument	zv		3897107	0					
ANR	3897132	Identifier	zv		3897107	0					
ANR	3897133	SwitchStatement	switch ( Z_TYPE_P ( zv ) )		3897107	5					
ANR	3897134	Condition	Z_TYPE_P ( zv )	871:9:22557:22568	3897107	0	True				
ANR	3897135	CallExpression	Z_TYPE_P ( zv )		3897107	0					
ANR	3897136	Callee	Z_TYPE_P		3897107	0					
ANR	3897137	Identifier	Z_TYPE_P		3897107	0					
ANR	3897138	ArgumentList	zv		3897107	1					
ANR	3897139	Argument	zv		3897107	0					
ANR	3897140	Identifier	zv		3897107	0					
ANR	3897141	CompoundStatement		8:23:101:101	3897107	1					
ANR	3897142	Label	case IS_NULL :	872:2:22575:22587	3897107	0	True				
ANR	3897143	Identifier	IS_NULL		3897107	0					
ANR	3897144	ExpressionStatement	"smart_str_appends ( str , ""null"" )"	873:3:22592:22622	3897107	1	True				
ANR	3897145	CallExpression	"smart_str_appends ( str , ""null"" )"		3897107	0					
ANR	3897146	Callee	smart_str_appends		3897107	0					
ANR	3897147	Identifier	smart_str_appends		3897107	0					
ANR	3897148	ArgumentList	str		3897107	1					
ANR	3897149	Argument	str		3897107	0					
ANR	3897150	Identifier	str		3897107	0					
ANR	3897151	Argument	"""null"""		3897107	1					
ANR	3897152	PrimaryExpression	"""null"""		3897107	0					
ANR	3897153	BreakStatement	break ;	874:3:22627:22632	3897107	2	True				
ANR	3897154	Label	case IS_FALSE :	875:2:22636:22649	3897107	3	True				
ANR	3897155	Identifier	IS_FALSE		3897107	0					
ANR	3897156	ExpressionStatement	"smart_str_appends ( str , ""false"" )"	876:3:22654:22685	3897107	4	True				
ANR	3897157	CallExpression	"smart_str_appends ( str , ""false"" )"		3897107	0					
ANR	3897158	Callee	smart_str_appends		3897107	0					
ANR	3897159	Identifier	smart_str_appends		3897107	0					
ANR	3897160	ArgumentList	str		3897107	1					
ANR	3897161	Argument	str		3897107	0					
ANR	3897162	Identifier	str		3897107	0					
ANR	3897163	Argument	"""false"""		3897107	1					
ANR	3897164	PrimaryExpression	"""false"""		3897107	0					
ANR	3897165	BreakStatement	break ;	877:3:22690:22695	3897107	5	True				
ANR	3897166	Label	case IS_TRUE :	878:2:22699:22711	3897107	6	True				
ANR	3897167	Identifier	IS_TRUE		3897107	0					
ANR	3897168	ExpressionStatement	"smart_str_appends ( str , ""true"" )"	879:3:22716:22746	3897107	7	True				
ANR	3897169	CallExpression	"smart_str_appends ( str , ""true"" )"		3897107	0					
ANR	3897170	Callee	smart_str_appends		3897107	0					
ANR	3897171	Identifier	smart_str_appends		3897107	0					
ANR	3897172	ArgumentList	str		3897107	1					
ANR	3897173	Argument	str		3897107	0					
ANR	3897174	Identifier	str		3897107	0					
ANR	3897175	Argument	"""true"""		3897107	1					
ANR	3897176	PrimaryExpression	"""true"""		3897107	0					
ANR	3897177	BreakStatement	break ;	880:3:22751:22756	3897107	8	True				
ANR	3897178	Label	case IS_LONG :	881:2:22760:22772	3897107	9	True				
ANR	3897179	Identifier	IS_LONG		3897107	0					
ANR	3897180	ExpressionStatement	"smart_str_append_long ( str , Z_LVAL_P ( zv ) )"	882:3:22777:22817	3897107	10	True				
ANR	3897181	CallExpression	"smart_str_append_long ( str , Z_LVAL_P ( zv ) )"		3897107	0					
ANR	3897182	Callee	smart_str_append_long		3897107	0					
ANR	3897183	Identifier	smart_str_append_long		3897107	0					
ANR	3897184	ArgumentList	str		3897107	1					
ANR	3897185	Argument	str		3897107	0					
ANR	3897186	Identifier	str		3897107	0					
ANR	3897187	Argument	Z_LVAL_P ( zv )		3897107	1					
ANR	3897188	CallExpression	Z_LVAL_P ( zv )		3897107	0					
ANR	3897189	Callee	Z_LVAL_P		3897107	0					
ANR	3897190	Identifier	Z_LVAL_P		3897107	0					
ANR	3897191	ArgumentList	zv		3897107	1					
ANR	3897192	Argument	zv		3897107	0					
ANR	3897193	Identifier	zv		3897107	0					
ANR	3897194	BreakStatement	break ;	883:3:22822:22827	3897107	11	True				
ANR	3897195	Label	case IS_DOUBLE :	884:2:22831:22845	3897107	12	True				
ANR	3897196	Identifier	IS_DOUBLE		3897107	0					
ANR	3897197	ExpressionStatement	"key = zend_strpprintf ( 0 , ""%.*G"" , ( int ) EG ( precision ) , Z_DVAL_P ( zv ) )"	885:3:22850:22917	3897107	13	True				
ANR	3897198	AssignmentExpression	"key = zend_strpprintf ( 0 , ""%.*G"" , ( int ) EG ( precision ) , Z_DVAL_P ( zv ) )"		3897107	0		=			
ANR	3897199	Identifier	key		3897107	0					
ANR	3897200	CallExpression	"zend_strpprintf ( 0 , ""%.*G"" , ( int ) EG ( precision ) , Z_DVAL_P ( zv ) )"		3897107	1					
ANR	3897201	Callee	zend_strpprintf		3897107	0					
ANR	3897202	Identifier	zend_strpprintf		3897107	0					
ANR	3897203	ArgumentList	0		3897107	1					
ANR	3897204	Argument	0		3897107	0					
ANR	3897205	PrimaryExpression	0		3897107	0					
ANR	3897206	Argument	"""%.*G"""		3897107	1					
ANR	3897207	PrimaryExpression	"""%.*G"""		3897107	0					
ANR	3897208	Argument	( int ) EG ( precision )		3897107	2					
ANR	3897209	CastExpression	( int ) EG ( precision )		3897107	0					
ANR	3897210	CastTarget	int		3897107	0					
ANR	3897211	CallExpression	EG ( precision )		3897107	1					
ANR	3897212	Callee	EG		3897107	0					
ANR	3897213	Identifier	EG		3897107	0					
ANR	3897214	ArgumentList	precision		3897107	1					
ANR	3897215	Argument	precision		3897107	0					
ANR	3897216	Identifier	precision		3897107	0					
ANR	3897217	Argument	Z_DVAL_P ( zv )		3897107	3					
ANR	3897218	CallExpression	Z_DVAL_P ( zv )		3897107	0					
ANR	3897219	Callee	Z_DVAL_P		3897107	0					
ANR	3897220	Identifier	Z_DVAL_P		3897107	0					
ANR	3897221	ArgumentList	zv		3897107	1					
ANR	3897222	Argument	zv		3897107	0					
ANR	3897223	Identifier	zv		3897107	0					
ANR	3897224	ExpressionStatement	"smart_str_appendl ( str , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) )"	886:3:22922:22974	3897107	14	True				
ANR	3897225	CallExpression	"smart_str_appendl ( str , ZSTR_VAL ( key ) , ZSTR_LEN ( key ) )"		3897107	0					
ANR	3897226	Callee	smart_str_appendl		3897107	0					
ANR	3897227	Identifier	smart_str_appendl		3897107	0					
ANR	3897228	ArgumentList	str		3897107	1					
ANR	3897229	Argument	str		3897107	0					
ANR	3897230	Identifier	str		3897107	0					
ANR	3897231	Argument	ZSTR_VAL ( key )		3897107	1					
ANR	3897232	CallExpression	ZSTR_VAL ( key )		3897107	0					
ANR	3897233	Callee	ZSTR_VAL		3897107	0					
ANR	3897234	Identifier	ZSTR_VAL		3897107	0					
ANR	3897235	ArgumentList	key		3897107	1					
ANR	3897236	Argument	key		3897107	0					
ANR	3897237	Identifier	key		3897107	0					
ANR	3897238	Argument	ZSTR_LEN ( key )		3897107	2					
ANR	3897239	CallExpression	ZSTR_LEN ( key )		3897107	0					
ANR	3897240	Callee	ZSTR_LEN		3897107	0					
ANR	3897241	Identifier	ZSTR_LEN		3897107	0					
ANR	3897242	ArgumentList	key		3897107	1					
ANR	3897243	Argument	key		3897107	0					
ANR	3897244	Identifier	key		3897107	0					
ANR	3897245	ExpressionStatement	zend_string_release ( key )	887:3:22979:23003	3897107	15	True				
ANR	3897246	CallExpression	zend_string_release ( key )		3897107	0					
ANR	3897247	Callee	zend_string_release		3897107	0					
ANR	3897248	Identifier	zend_string_release		3897107	0					
ANR	3897249	ArgumentList	key		3897107	1					
ANR	3897250	Argument	key		3897107	0					
ANR	3897251	Identifier	key		3897107	0					
ANR	3897252	BreakStatement	break ;	888:3:23008:23013	3897107	16	True				
ANR	3897253	Label	case IS_STRING :	889:2:23017:23031	3897107	17	True				
ANR	3897254	Identifier	IS_STRING		3897107	0					
ANR	3897255	ExpressionStatement	"smart_str_appendc ( str , '\\'' )"	890:3:23036:23064	3897107	18	True				
ANR	3897256	CallExpression	"smart_str_appendc ( str , '\\'' )"		3897107	0					
ANR	3897257	Callee	smart_str_appendc		3897107	0					
ANR	3897258	Identifier	smart_str_appendc		3897107	0					
ANR	3897259	ArgumentList	str		3897107	1					
ANR	3897260	Argument	str		3897107	0					
ANR	3897261	Identifier	str		3897107	0					
ANR	3897262	Argument	'\\''		3897107	1					
ANR	3897263	PrimaryExpression	'\\''		3897107	0					
ANR	3897264	ExpressionStatement	"zend_ast_export_str ( str , Z_STR_P ( zv ) )"	891:3:23069:23106	3897107	19	True				
ANR	3897265	CallExpression	"zend_ast_export_str ( str , Z_STR_P ( zv ) )"		3897107	0					
ANR	3897266	Callee	zend_ast_export_str		3897107	0					
ANR	3897267	Identifier	zend_ast_export_str		3897107	0					
ANR	3897268	ArgumentList	str		3897107	1					
ANR	3897269	Argument	str		3897107	0					
ANR	3897270	Identifier	str		3897107	0					
ANR	3897271	Argument	Z_STR_P ( zv )		3897107	1					
ANR	3897272	CallExpression	Z_STR_P ( zv )		3897107	0					
ANR	3897273	Callee	Z_STR_P		3897107	0					
ANR	3897274	Identifier	Z_STR_P		3897107	0					
ANR	3897275	ArgumentList	zv		3897107	1					
ANR	3897276	Argument	zv		3897107	0					
ANR	3897277	Identifier	zv		3897107	0					
ANR	3897278	ExpressionStatement	"smart_str_appendc ( str , '\\'' )"	892:3:23111:23139	3897107	20	True				
ANR	3897279	CallExpression	"smart_str_appendc ( str , '\\'' )"		3897107	0					
ANR	3897280	Callee	smart_str_appendc		3897107	0					
ANR	3897281	Identifier	smart_str_appendc		3897107	0					
ANR	3897282	ArgumentList	str		3897107	1					
ANR	3897283	Argument	str		3897107	0					
ANR	3897284	Identifier	str		3897107	0					
ANR	3897285	Argument	'\\''		3897107	1					
ANR	3897286	PrimaryExpression	'\\''		3897107	0					
ANR	3897287	BreakStatement	break ;	893:3:23144:23149	3897107	21	True				
ANR	3897288	Label	case IS_ARRAY :	894:2:23153:23166	3897107	22	True				
ANR	3897289	Identifier	IS_ARRAY		3897107	0					
ANR	3897290	ExpressionStatement	"smart_str_appendc ( str , '[' )"	895:3:23171:23198	3897107	23	True				
ANR	3897291	CallExpression	"smart_str_appendc ( str , '[' )"		3897107	0					
ANR	3897292	Callee	smart_str_appendc		3897107	0					
ANR	3897293	Identifier	smart_str_appendc		3897107	0					
ANR	3897294	ArgumentList	str		3897107	1					
ANR	3897295	Argument	str		3897107	0					
ANR	3897296	Identifier	str		3897107	0					
ANR	3897297	Argument	'['		3897107	1					
ANR	3897298	PrimaryExpression	'['		3897107	0					
ANR	3897299	ExpressionStatement	first = 1	896:3:23203:23212	3897107	24	True				
ANR	3897300	AssignmentExpression	first = 1		3897107	0		=			
ANR	3897301	Identifier	first		3897107	0					
ANR	3897302	PrimaryExpression	1		3897107	1					
ANR	3897303	Statement	ZEND_HASH_FOREACH_KEY_VAL	897:3:23217:23241	3897107	25	True				
ANR	3897304	Statement	(	897:28:23242:23242	3897107	26	True				
ANR	3897305	Statement	Z_ARRVAL_P	897:29:23243:23252	3897107	27	True				
ANR	3897306	Statement	(	897:39:23253:23253	3897107	28	True				
ANR	3897307	Statement	zv	897:40:23254:23255	3897107	29	True				
ANR	3897308	Statement	)	897:42:23256:23256	3897107	30	True				
ANR	3897309	Statement	","	897:43:23257:23257	3897107	31	True				
ANR	3897310	Statement	idx	897:45:23259:23261	3897107	32	True				
ANR	3897311	Statement	","	897:48:23262:23262	3897107	33	True				
ANR	3897312	Statement	key	897:50:23264:23266	3897107	34	True				
ANR	3897313	Statement	","	897:53:23267:23267	3897107	35	True				
ANR	3897314	Statement	val	897:55:23269:23271	3897107	36	True				
ANR	3897315	Statement	)	897:58:23272:23272	3897107	37	True				
ANR	3897316	CompoundStatement		34:60:804:804	3897107	38					
ANR	3897317	IfStatement	if ( first )		3897107	0					
ANR	3897318	Condition	first	898:8:23284:23288	3897107	0	True				
ANR	3897319	Identifier	first		3897107	0					
ANR	3897320	CompoundStatement		35:15:821:821	3897107	1					
ANR	3897321	ExpressionStatement	first = 0	899:5:23298:23307	3897107	0	True				
ANR	3897322	AssignmentExpression	first = 0		3897107	0		=			
ANR	3897323	Identifier	first		3897107	0					
ANR	3897324	PrimaryExpression	0		3897107	1					
ANR	3897325	ElseStatement	else		3897107	0					
ANR	3897326	CompoundStatement		37:11:850:850	3897107	0					
ANR	3897327	ExpressionStatement	"smart_str_appends ( str , "", "" )"	901:5:23327:23355	3897107	0	True				
ANR	3897328	CallExpression	"smart_str_appends ( str , "", "" )"		3897107	0					
ANR	3897329	Callee	smart_str_appends		3897107	0					
ANR	3897330	Identifier	smart_str_appends		3897107	0					
ANR	3897331	ArgumentList	str		3897107	1					
ANR	3897332	Argument	str		3897107	0					
ANR	3897333	Identifier	str		3897107	0					
ANR	3897334	Argument	""", """		3897107	1					
ANR	3897335	PrimaryExpression	""", """		3897107	0					
ANR	3897336	IfStatement	if ( key )		3897107	1					
ANR	3897337	Condition	key	903:8:23371:23373	3897107	0	True				
ANR	3897338	Identifier	key		3897107	0					
ANR	3897339	CompoundStatement		40:13:906:906	3897107	1					
ANR	3897340	ExpressionStatement	"smart_str_appendc ( str , '\\'' )"	904:5:23383:23411	3897107	0	True				
ANR	3897341	CallExpression	"smart_str_appendc ( str , '\\'' )"		3897107	0					
ANR	3897342	Callee	smart_str_appendc		3897107	0					
ANR	3897343	Identifier	smart_str_appendc		3897107	0					
ANR	3897344	ArgumentList	str		3897107	1					
ANR	3897345	Argument	str		3897107	0					
ANR	3897346	Identifier	str		3897107	0					
ANR	3897347	Argument	'\\''		3897107	1					
ANR	3897348	PrimaryExpression	'\\''		3897107	0					
ANR	3897349	ExpressionStatement	"zend_ast_export_str ( str , key )"	905:5:23418:23447	3897107	1	True				
ANR	3897350	CallExpression	"zend_ast_export_str ( str , key )"		3897107	0					
ANR	3897351	Callee	zend_ast_export_str		3897107	0					
ANR	3897352	Identifier	zend_ast_export_str		3897107	0					
ANR	3897353	ArgumentList	str		3897107	1					
ANR	3897354	Argument	str		3897107	0					
ANR	3897355	Identifier	str		3897107	0					
ANR	3897356	Argument	key		3897107	1					
ANR	3897357	Identifier	key		3897107	0					
ANR	3897358	ExpressionStatement	"smart_str_appends ( str , ""' => "" )"	906:5:23454:23485	3897107	2	True				
ANR	3897359	CallExpression	"smart_str_appends ( str , ""' => "" )"		3897107	0					
ANR	3897360	Callee	smart_str_appends		3897107	0					
ANR	3897361	Identifier	smart_str_appends		3897107	0					
ANR	3897362	ArgumentList	str		3897107	1					
ANR	3897363	Argument	str		3897107	0					
ANR	3897364	Identifier	str		3897107	0					
ANR	3897365	Argument	"""' => """		3897107	1					
ANR	3897366	PrimaryExpression	"""' => """		3897107	0					
ANR	3897367	ElseStatement	else		3897107	0					
ANR	3897368	CompoundStatement		44:11:1028:1028	3897107	0					
ANR	3897369	ExpressionStatement	"smart_str_append_long ( str , idx )"	908:5:23505:23536	3897107	0	True				
ANR	3897370	CallExpression	"smart_str_append_long ( str , idx )"		3897107	0					
ANR	3897371	Callee	smart_str_append_long		3897107	0					
ANR	3897372	Identifier	smart_str_append_long		3897107	0					
ANR	3897373	ArgumentList	str		3897107	1					
ANR	3897374	Argument	str		3897107	0					
ANR	3897375	Identifier	str		3897107	0					
ANR	3897376	Argument	idx		3897107	1					
ANR	3897377	Identifier	idx		3897107	0					
ANR	3897378	ExpressionStatement	"smart_str_appends ( str , "" => "" )"	909:5:23543:23573	3897107	1	True				
ANR	3897379	CallExpression	"smart_str_appends ( str , "" => "" )"		3897107	0					
ANR	3897380	Callee	smart_str_appends		3897107	0					
ANR	3897381	Identifier	smart_str_appends		3897107	0					
ANR	3897382	ArgumentList	str		3897107	1					
ANR	3897383	Argument	str		3897107	0					
ANR	3897384	Identifier	str		3897107	0					
ANR	3897385	Argument	""" => """		3897107	1					
ANR	3897386	PrimaryExpression	""" => """		3897107	0					
ANR	3897387	ExpressionStatement	"zend_ast_export_zval ( str , val , 0 , indent )"	911:4:23585:23626	3897107	2	True				
ANR	3897388	CallExpression	"zend_ast_export_zval ( str , val , 0 , indent )"		3897107	0					
ANR	3897389	Callee	zend_ast_export_zval		3897107	0					
ANR	3897390	Identifier	zend_ast_export_zval		3897107	0					
ANR	3897391	ArgumentList	str		3897107	1					
ANR	3897392	Argument	str		3897107	0					
ANR	3897393	Identifier	str		3897107	0					
ANR	3897394	Argument	val		3897107	1					
ANR	3897395	Identifier	val		3897107	0					
ANR	3897396	Argument	0		3897107	2					
ANR	3897397	PrimaryExpression	0		3897107	0					
ANR	3897398	Argument	indent		3897107	3					
ANR	3897399	Identifier	indent		3897107	0					
ANR	3897400	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	912:5:23633:23656	3897107	39	True				
ANR	3897401	CallExpression	ZEND_HASH_FOREACH_END ( )		3897107	0					
ANR	3897402	Callee	ZEND_HASH_FOREACH_END		3897107	0					
ANR	3897403	Identifier	ZEND_HASH_FOREACH_END		3897107	0					
ANR	3897404	ArgumentList			3897107	1					
ANR	3897405	ExpressionStatement	"smart_str_appendc ( str , ']' )"	913:3:23661:23688	3897107	40	True				
ANR	3897406	CallExpression	"smart_str_appendc ( str , ']' )"		3897107	0					
ANR	3897407	Callee	smart_str_appendc		3897107	0					
ANR	3897408	Identifier	smart_str_appendc		3897107	0					
ANR	3897409	ArgumentList	str		3897107	1					
ANR	3897410	Argument	str		3897107	0					
ANR	3897411	Identifier	str		3897107	0					
ANR	3897412	Argument	']'		3897107	1					
ANR	3897413	PrimaryExpression	']'		3897107	0					
ANR	3897414	BreakStatement	break ;	914:3:23693:23698	3897107	41	True				
ANR	3897415	Label	case IS_CONSTANT :	915:2:23702:23718	3897107	42	True				
ANR	3897416	Identifier	IS_CONSTANT		3897107	0					
ANR	3897417	ExpressionStatement	"smart_str_appendl ( str , Z_STRVAL_P ( zv ) , Z_STRLEN_P ( zv ) )"	916:3:23723:23777	3897107	43	True				
ANR	3897418	CallExpression	"smart_str_appendl ( str , Z_STRVAL_P ( zv ) , Z_STRLEN_P ( zv ) )"		3897107	0					
ANR	3897419	Callee	smart_str_appendl		3897107	0					
ANR	3897420	Identifier	smart_str_appendl		3897107	0					
ANR	3897421	ArgumentList	str		3897107	1					
ANR	3897422	Argument	str		3897107	0					
ANR	3897423	Identifier	str		3897107	0					
ANR	3897424	Argument	Z_STRVAL_P ( zv )		3897107	1					
ANR	3897425	CallExpression	Z_STRVAL_P ( zv )		3897107	0					
ANR	3897426	Callee	Z_STRVAL_P		3897107	0					
ANR	3897427	Identifier	Z_STRVAL_P		3897107	0					
ANR	3897428	ArgumentList	zv		3897107	1					
ANR	3897429	Argument	zv		3897107	0					
ANR	3897430	Identifier	zv		3897107	0					
ANR	3897431	Argument	Z_STRLEN_P ( zv )		3897107	2					
ANR	3897432	CallExpression	Z_STRLEN_P ( zv )		3897107	0					
ANR	3897433	Callee	Z_STRLEN_P		3897107	0					
ANR	3897434	Identifier	Z_STRLEN_P		3897107	0					
ANR	3897435	ArgumentList	zv		3897107	1					
ANR	3897436	Argument	zv		3897107	0					
ANR	3897437	Identifier	zv		3897107	0					
ANR	3897438	BreakStatement	break ;	917:3:23782:23787	3897107	44	True				
ANR	3897439	Label	case IS_CONSTANT_AST :	918:2:23791:23811	3897107	45	True				
ANR	3897440	Identifier	IS_CONSTANT_AST		3897107	0					
ANR	3897441	ExpressionStatement	"zend_ast_export_ex ( str , Z_ASTVAL_P ( zv ) , priority , indent )"	919:3:23816:23873	3897107	46	True				
ANR	3897442	CallExpression	"zend_ast_export_ex ( str , Z_ASTVAL_P ( zv ) , priority , indent )"		3897107	0					
ANR	3897443	Callee	zend_ast_export_ex		3897107	0					
ANR	3897444	Identifier	zend_ast_export_ex		3897107	0					
ANR	3897445	ArgumentList	str		3897107	1					
ANR	3897446	Argument	str		3897107	0					
ANR	3897447	Identifier	str		3897107	0					
ANR	3897448	Argument	Z_ASTVAL_P ( zv )		3897107	1					
ANR	3897449	CallExpression	Z_ASTVAL_P ( zv )		3897107	0					
ANR	3897450	Callee	Z_ASTVAL_P		3897107	0					
ANR	3897451	Identifier	Z_ASTVAL_P		3897107	0					
ANR	3897452	ArgumentList	zv		3897107	1					
ANR	3897453	Argument	zv		3897107	0					
ANR	3897454	Identifier	zv		3897107	0					
ANR	3897455	Argument	priority		3897107	2					
ANR	3897456	Identifier	priority		3897107	0					
ANR	3897457	Argument	indent		3897107	3					
ANR	3897458	Identifier	indent		3897107	0					
ANR	3897459	BreakStatement	break ;	920:3:23878:23883	3897107	47	True				
ANR	3897460	ExpressionStatement	EMPTY_SWITCH_DEFAULT_CASE ( )	921:2:23887:23914	3897107	48	True				
ANR	3897461	CallExpression	EMPTY_SWITCH_DEFAULT_CASE ( )		3897107	0					
ANR	3897462	Callee	EMPTY_SWITCH_DEFAULT_CASE		3897107	0					
ANR	3897463	Identifier	EMPTY_SWITCH_DEFAULT_CASE		3897107	0					
ANR	3897464	ArgumentList			3897107	1					
ANR	3897465	ReturnType	static void		3897107	1					
ANR	3897466	Identifier	zend_ast_export_zval		3897107	2					
ANR	3897467	ParameterList	"smart_str * str , zval * zv , int priority , int indent"		3897107	3					
ANR	3897468	Parameter	smart_str * str	863:33:22417:22430	3897107	0	True				
ANR	3897469	ParameterType	smart_str *		3897107	0					
ANR	3897470	Identifier	str		3897107	1					
ANR	3897471	Parameter	zval * zv	863:49:22433:22440	3897107	1	True				
ANR	3897472	ParameterType	zval *		3897107	0					
ANR	3897473	Identifier	zv		3897107	1					
ANR	3897474	Parameter	int priority	863:59:22443:22454	3897107	2	True				
ANR	3897475	ParameterType	int		3897107	0					
ANR	3897476	Identifier	priority		3897107	1					
ANR	3897477	Parameter	int indent	863:73:22457:22466	3897107	3	True				
ANR	3897478	ParameterType	int		3897107	0					
ANR	3897479	Identifier	indent		3897107	1					
ANR	3897480	CFGEntryNode	ENTRY		3897107		True				
ANR	3897481	CFGExitNode	EXIT		3897107		True				
ANR	3897482	Symbol	val		3897107						
ANR	3897483	Symbol	zend_strpprintf		3897107						
ANR	3897484	Symbol	EG		3897107						
ANR	3897485	Symbol	indent		3897107						
ANR	3897486	Symbol	precision		3897107						
ANR	3897487	Symbol	priority		3897107						
ANR	3897488	Symbol	Z_TYPE_P		3897107						
ANR	3897489	Symbol	Z_STRVAL_P		3897107						
ANR	3897490	Symbol	Z_DVAL_P		3897107						
ANR	3897491	Symbol	Z_LVAL_P		3897107						
ANR	3897492	Symbol	ZSTR_VAL		3897107						
ANR	3897493	Symbol	Z_ASTVAL_P		3897107						
ANR	3897494	Symbol	str		3897107						
ANR	3897495	Symbol	ZSTR_LEN		3897107						
ANR	3897496	Symbol	Z_STRLEN_P		3897107						
ANR	3897497	Symbol	Z_STR_P		3897107						
ANR	3897498	Symbol	zv		3897107						
ANR	3897499	Symbol	idx		3897107						
ANR	3897500	Symbol	key		3897107						
ANR	3897501	Symbol	first		3897107						
ANR	3897502	Function	zend_ast_export_ex	967:0:24617:47274							
ANR	3897503	FunctionDef	"zend_ast_export_ex (smart_str * str , zend_ast * ast , int priority , int indent)"		3897502	0					
ANR	3897504	CompoundStatement		968:0:24705:47274	3897502	0					
ANR	3897505	IdentifierDeclStatement	zend_ast_decl * decl ;	969:1:24708:24727	3897502	0	True				
ANR	3897506	IdentifierDecl	* decl		3897502	0					
ANR	3897507	IdentifierDeclType	zend_ast_decl *		3897502	0					
ANR	3897508	Identifier	decl		3897502	1					
ANR	3897509	IdentifierDeclStatement	"int p , pl , pr ;"	970:1:24730:24743	3897502	1	True				
ANR	3897510	IdentifierDecl	p		3897502	0					
ANR	3897511	IdentifierDeclType	int		3897502	0					
ANR	3897512	Identifier	p		3897502	1					
ANR	3897513	IdentifierDecl	pl		3897502	1					
ANR	3897514	IdentifierDeclType	int		3897502	0					
ANR	3897515	Identifier	pl		3897502	1					
ANR	3897516	IdentifierDecl	pr		3897502	2					
ANR	3897517	IdentifierDeclType	int		3897502	0					
ANR	3897518	Identifier	pr		3897502	1					
ANR	3897519	IdentifierDeclStatement	const char * op ;	971:1:24746:24760	3897502	2	True				
ANR	3897520	IdentifierDecl	* op		3897502	0					
ANR	3897521	IdentifierDeclType	const char *		3897502	0					
ANR	3897522	Identifier	op		3897502	1					
ANR	3897523	Label	tail_call :	973:0:24763:24772	3897502	3	True				
ANR	3897524	Identifier	tail_call		3897502	0					
ANR	3897525	IfStatement	if ( ! ast )		3897502	4					
ANR	3897526	Condition	! ast	974:5:24779:24782	3897502	0	True				
ANR	3897527	UnaryOperationExpression	! ast		3897502	0					
ANR	3897528	UnaryOperator	!		3897502	0					
ANR	3897529	Identifier	ast		3897502	1					
ANR	3897530	CompoundStatement		7:11:79:79	3897502	1					
ANR	3897531	ReturnStatement	return ;	975:2:24789:24795	3897502	0	True				
ANR	3897532	SwitchStatement	switch ( ast -> kind )		3897502	5					
ANR	3897533	Condition	ast -> kind	977:9:24809:24817	3897502	0	True				
ANR	3897534	PtrMemberAccess	ast -> kind		3897502	0					
ANR	3897535	Identifier	ast		3897502	0					
ANR	3897536	Identifier	kind		3897502	1					
ANR	3897537	CompoundStatement		10:20:114:114	3897502	1					
ANR	3897538	Label	case ZEND_AST_ZVAL :	979:2:24846:24864	3897502	0	True				
ANR	3897539	Identifier	ZEND_AST_ZVAL		3897502	0					
ANR	3897540	ExpressionStatement	"zend_ast_export_zval ( str , zend_ast_get_zval ( ast ) , priority , indent )"	980:3:24869:24936	3897502	1	True				
ANR	3897541	CallExpression	"zend_ast_export_zval ( str , zend_ast_get_zval ( ast ) , priority , indent )"		3897502	0					
ANR	3897542	Callee	zend_ast_export_zval		3897502	0					
ANR	3897543	Identifier	zend_ast_export_zval		3897502	0					
ANR	3897544	ArgumentList	str		3897502	1					
ANR	3897545	Argument	str		3897502	0					
ANR	3897546	Identifier	str		3897502	0					
ANR	3897547	Argument	zend_ast_get_zval ( ast )		3897502	1					
ANR	3897548	CallExpression	zend_ast_get_zval ( ast )		3897502	0					
ANR	3897549	Callee	zend_ast_get_zval		3897502	0					
ANR	3897550	Identifier	zend_ast_get_zval		3897502	0					
ANR	3897551	ArgumentList	ast		3897502	1					
ANR	3897552	Argument	ast		3897502	0					
ANR	3897553	Identifier	ast		3897502	0					
ANR	3897554	Argument	priority		3897502	2					
ANR	3897555	Identifier	priority		3897502	0					
ANR	3897556	Argument	indent		3897502	3					
ANR	3897557	Identifier	indent		3897502	0					
ANR	3897558	BreakStatement	break ;	981:3:24941:24946	3897502	2	True				
ANR	3897559	Label	case ZEND_AST_ZNODE :	982:2:24950:24969	3897502	3	True				
ANR	3897560	Identifier	ZEND_AST_ZNODE		3897502	0					
ANR	3897561	ExpressionStatement	ZEND_ASSERT ( 0 )	984:3:25049:25063	3897502	4	True				
ANR	3897562	CallExpression	ZEND_ASSERT ( 0 )		3897502	0					
ANR	3897563	Callee	ZEND_ASSERT		3897502	0					
ANR	3897564	Identifier	ZEND_ASSERT		3897502	0					
ANR	3897565	ArgumentList	0		3897502	1					
ANR	3897566	Argument	0		3897502	0					
ANR	3897567	PrimaryExpression	0		3897502	0					
ANR	3897568	BreakStatement	break ;	985:3:25068:25073	3897502	5	True				
ANR	3897569	Label	case ZEND_AST_FUNC_DECL :	988:2:25104:25127	3897502	6	True				
ANR	3897570	Identifier	ZEND_AST_FUNC_DECL		3897502	0					
ANR	3897571	Label	case ZEND_AST_CLOSURE :	989:2:25131:25152	3897502	7	True				
ANR	3897572	Identifier	ZEND_AST_CLOSURE		3897502	0					
ANR	3897573	Label	case ZEND_AST_METHOD :	990:2:25156:25176	3897502	8	True				
ANR	3897574	Identifier	ZEND_AST_METHOD		3897502	0					
ANR	3897575	ExpressionStatement	decl = ( zend_ast_decl * ) ast	991:3:25181:25209	3897502	9	True				
ANR	3897576	AssignmentExpression	decl = ( zend_ast_decl * ) ast		3897502	0		=			
ANR	3897577	Identifier	decl		3897502	0					
ANR	3897578	CastExpression	( zend_ast_decl * ) ast		3897502	1					
ANR	3897579	CastTarget	zend_ast_decl *		3897502	0					
ANR	3897580	Identifier	ast		3897502	1					
ANR	3897581	IfStatement	if ( decl -> flags & ZEND_ACC_PUBLIC )		3897502	10					
ANR	3897582	Condition	decl -> flags & ZEND_ACC_PUBLIC	992:7:25218:25246	3897502	0	True				
ANR	3897583	BitAndExpression	decl -> flags & ZEND_ACC_PUBLIC		3897502	0		&			
ANR	3897584	PtrMemberAccess	decl -> flags		3897502	0					
ANR	3897585	Identifier	decl		3897502	0					
ANR	3897586	Identifier	flags		3897502	1					
ANR	3897587	Identifier	ZEND_ACC_PUBLIC		3897502	1					
ANR	3897588	CompoundStatement		25:38:543:543	3897502	1					
ANR	3897589	ExpressionStatement	"smart_str_appends ( str , ""public "" )"	993:4:25255:25288	3897502	0	True				
ANR	3897590	CallExpression	"smart_str_appends ( str , ""public "" )"		3897502	0					
ANR	3897591	Callee	smart_str_appends		3897502	0					
ANR	3897592	Identifier	smart_str_appends		3897502	0					
ANR	3897593	ArgumentList	str		3897502	1					
ANR	3897594	Argument	str		3897502	0					
ANR	3897595	Identifier	str		3897502	0					
ANR	3897596	Argument	"""public """		3897502	1					
ANR	3897597	PrimaryExpression	"""public """		3897502	0					
ANR	3897598	ElseStatement	else		3897502	0					
ANR	3897599	IfStatement	if ( decl -> flags & ZEND_ACC_PROTECTED )		3897502	0					
ANR	3897600	Condition	decl -> flags & ZEND_ACC_PROTECTED	994:14:25304:25335	3897502	0	True				
ANR	3897601	BitAndExpression	decl -> flags & ZEND_ACC_PROTECTED		3897502	0		&			
ANR	3897602	PtrMemberAccess	decl -> flags		3897502	0					
ANR	3897603	Identifier	decl		3897502	0					
ANR	3897604	Identifier	flags		3897502	1					
ANR	3897605	Identifier	ZEND_ACC_PROTECTED		3897502	1					
ANR	3897606	CompoundStatement		27:48:632:632	3897502	1					
ANR	3897607	ExpressionStatement	"smart_str_appends ( str , ""protected "" )"	995:4:25344:25380	3897502	0	True				
ANR	3897608	CallExpression	"smart_str_appends ( str , ""protected "" )"		3897502	0					
ANR	3897609	Callee	smart_str_appends		3897502	0					
ANR	3897610	Identifier	smart_str_appends		3897502	0					
ANR	3897611	ArgumentList	str		3897502	1					
ANR	3897612	Argument	str		3897502	0					
ANR	3897613	Identifier	str		3897502	0					
ANR	3897614	Argument	"""protected """		3897502	1					
ANR	3897615	PrimaryExpression	"""protected """		3897502	0					
ANR	3897616	ElseStatement	else		3897502	0					
ANR	3897617	IfStatement	if ( decl -> flags & ZEND_ACC_PRIVATE )		3897502	0					
ANR	3897618	Condition	decl -> flags & ZEND_ACC_PRIVATE	996:14:25396:25425	3897502	0	True				
ANR	3897619	BitAndExpression	decl -> flags & ZEND_ACC_PRIVATE		3897502	0		&			
ANR	3897620	PtrMemberAccess	decl -> flags		3897502	0					
ANR	3897621	Identifier	decl		3897502	0					
ANR	3897622	Identifier	flags		3897502	1					
ANR	3897623	Identifier	ZEND_ACC_PRIVATE		3897502	1					
ANR	3897624	CompoundStatement		29:46:722:722	3897502	1					
ANR	3897625	ExpressionStatement	"smart_str_appends ( str , ""private "" )"	997:4:25434:25468	3897502	0	True				
ANR	3897626	CallExpression	"smart_str_appends ( str , ""private "" )"		3897502	0					
ANR	3897627	Callee	smart_str_appends		3897502	0					
ANR	3897628	Identifier	smart_str_appends		3897502	0					
ANR	3897629	ArgumentList	str		3897502	1					
ANR	3897630	Argument	str		3897502	0					
ANR	3897631	Identifier	str		3897502	0					
ANR	3897632	Argument	"""private """		3897502	1					
ANR	3897633	PrimaryExpression	"""private """		3897502	0					
ANR	3897634	IfStatement	if ( decl -> flags & ZEND_ACC_STATIC )		3897502	11					
ANR	3897635	Condition	decl -> flags & ZEND_ACC_STATIC	999:7:25482:25510	3897502	0	True				
ANR	3897636	BitAndExpression	decl -> flags & ZEND_ACC_STATIC		3897502	0		&			
ANR	3897637	PtrMemberAccess	decl -> flags		3897502	0					
ANR	3897638	Identifier	decl		3897502	0					
ANR	3897639	Identifier	flags		3897502	1					
ANR	3897640	Identifier	ZEND_ACC_STATIC		3897502	1					
ANR	3897641	CompoundStatement		32:38:807:807	3897502	1					
ANR	3897642	ExpressionStatement	"smart_str_appends ( str , ""static "" )"	1000:4:25519:25552	3897502	0	True				
ANR	3897643	CallExpression	"smart_str_appends ( str , ""static "" )"		3897502	0					
ANR	3897644	Callee	smart_str_appends		3897502	0					
ANR	3897645	Identifier	smart_str_appends		3897502	0					
ANR	3897646	ArgumentList	str		3897502	1					
ANR	3897647	Argument	str		3897502	0					
ANR	3897648	Identifier	str		3897502	0					
ANR	3897649	Argument	"""static """		3897502	1					
ANR	3897650	PrimaryExpression	"""static """		3897502	0					
ANR	3897651	IfStatement	if ( decl -> flags & ZEND_ACC_ABSTRACT )		3897502	12					
ANR	3897652	Condition	decl -> flags & ZEND_ACC_ABSTRACT	1002:7:25566:25596	3897502	0	True				
ANR	3897653	BitAndExpression	decl -> flags & ZEND_ACC_ABSTRACT		3897502	0		&			
ANR	3897654	PtrMemberAccess	decl -> flags		3897502	0					
ANR	3897655	Identifier	decl		3897502	0					
ANR	3897656	Identifier	flags		3897502	1					
ANR	3897657	Identifier	ZEND_ACC_ABSTRACT		3897502	1					
ANR	3897658	CompoundStatement		35:40:893:893	3897502	1					
ANR	3897659	ExpressionStatement	"smart_str_appends ( str , ""abstract "" )"	1003:4:25605:25640	3897502	0	True				
ANR	3897660	CallExpression	"smart_str_appends ( str , ""abstract "" )"		3897502	0					
ANR	3897661	Callee	smart_str_appends		3897502	0					
ANR	3897662	Identifier	smart_str_appends		3897502	0					
ANR	3897663	ArgumentList	str		3897502	1					
ANR	3897664	Argument	str		3897502	0					
ANR	3897665	Identifier	str		3897502	0					
ANR	3897666	Argument	"""abstract """		3897502	1					
ANR	3897667	PrimaryExpression	"""abstract """		3897502	0					
ANR	3897668	IfStatement	if ( decl -> flags & ZEND_ACC_FINAL )		3897502	13					
ANR	3897669	Condition	decl -> flags & ZEND_ACC_FINAL	1005:7:25654:25681	3897502	0	True				
ANR	3897670	BitAndExpression	decl -> flags & ZEND_ACC_FINAL		3897502	0		&			
ANR	3897671	PtrMemberAccess	decl -> flags		3897502	0					
ANR	3897672	Identifier	decl		3897502	0					
ANR	3897673	Identifier	flags		3897502	1					
ANR	3897674	Identifier	ZEND_ACC_FINAL		3897502	1					
ANR	3897675	CompoundStatement		38:37:978:978	3897502	1					
ANR	3897676	ExpressionStatement	"smart_str_appends ( str , ""final "" )"	1006:4:25690:25722	3897502	0	True				
ANR	3897677	CallExpression	"smart_str_appends ( str , ""final "" )"		3897502	0					
ANR	3897678	Callee	smart_str_appends		3897502	0					
ANR	3897679	Identifier	smart_str_appends		3897502	0					
ANR	3897680	ArgumentList	str		3897502	1					
ANR	3897681	Argument	str		3897502	0					
ANR	3897682	Identifier	str		3897502	0					
ANR	3897683	Argument	"""final """		3897502	1					
ANR	3897684	PrimaryExpression	"""final """		3897502	0					
ANR	3897685	ExpressionStatement	"smart_str_appends ( str , ""function "" )"	1008:3:25732:25767	3897502	14	True				
ANR	3897686	CallExpression	"smart_str_appends ( str , ""function "" )"		3897502	0					
ANR	3897687	Callee	smart_str_appends		3897502	0					
ANR	3897688	Identifier	smart_str_appends		3897502	0					
ANR	3897689	ArgumentList	str		3897502	1					
ANR	3897690	Argument	str		3897502	0					
ANR	3897691	Identifier	str		3897502	0					
ANR	3897692	Argument	"""function """		3897502	1					
ANR	3897693	PrimaryExpression	"""function """		3897502	0					
ANR	3897694	IfStatement	if ( decl -> flags & ZEND_ACC_RETURN_REFERENCE )		3897502	15					
ANR	3897695	Condition	decl -> flags & ZEND_ACC_RETURN_REFERENCE	1009:7:25776:25814	3897502	0	True				
ANR	3897696	BitAndExpression	decl -> flags & ZEND_ACC_RETURN_REFERENCE		3897502	0		&			
ANR	3897697	PtrMemberAccess	decl -> flags		3897502	0					
ANR	3897698	Identifier	decl		3897502	0					
ANR	3897699	Identifier	flags		3897502	1					
ANR	3897700	Identifier	ZEND_ACC_RETURN_REFERENCE		3897502	1					
ANR	3897701	CompoundStatement		42:48:1111:1111	3897502	1					
ANR	3897702	ExpressionStatement	"smart_str_appendc ( str , '&' )"	1010:4:25823:25850	3897502	0	True				
ANR	3897703	CallExpression	"smart_str_appendc ( str , '&' )"		3897502	0					
ANR	3897704	Callee	smart_str_appendc		3897502	0					
ANR	3897705	Identifier	smart_str_appendc		3897502	0					
ANR	3897706	ArgumentList	str		3897502	1					
ANR	3897707	Argument	str		3897502	0					
ANR	3897708	Identifier	str		3897502	0					
ANR	3897709	Argument	'&'		3897502	1					
ANR	3897710	PrimaryExpression	'&'		3897502	0					
ANR	3897711	IfStatement	if ( ast -> kind != ZEND_AST_CLOSURE )		3897502	16					
ANR	3897712	Condition	ast -> kind != ZEND_AST_CLOSURE	1012:7:25864:25892	3897502	0	True				
ANR	3897713	EqualityExpression	ast -> kind != ZEND_AST_CLOSURE		3897502	0		!=			
ANR	3897714	PtrMemberAccess	ast -> kind		3897502	0					
ANR	3897715	Identifier	ast		3897502	0					
ANR	3897716	Identifier	kind		3897502	1					
ANR	3897717	Identifier	ZEND_AST_CLOSURE		3897502	1					
ANR	3897718	CompoundStatement		45:38:1189:1189	3897502	1					
ANR	3897719	ExpressionStatement	"smart_str_appendl ( str , ZSTR_VAL ( decl -> name ) , ZSTR_LEN ( decl -> name ) )"	1013:4:25901:25967	3897502	0	True				
ANR	3897720	CallExpression	"smart_str_appendl ( str , ZSTR_VAL ( decl -> name ) , ZSTR_LEN ( decl -> name ) )"		3897502	0					
ANR	3897721	Callee	smart_str_appendl		3897502	0					
ANR	3897722	Identifier	smart_str_appendl		3897502	0					
ANR	3897723	ArgumentList	str		3897502	1					
ANR	3897724	Argument	str		3897502	0					
ANR	3897725	Identifier	str		3897502	0					
ANR	3897726	Argument	ZSTR_VAL ( decl -> name )		3897502	1					
ANR	3897727	CallExpression	ZSTR_VAL ( decl -> name )		3897502	0					
ANR	3897728	Callee	ZSTR_VAL		3897502	0					
ANR	3897729	Identifier	ZSTR_VAL		3897502	0					
ANR	3897730	ArgumentList	decl -> name		3897502	1					
ANR	3897731	Argument	decl -> name		3897502	0					
ANR	3897732	PtrMemberAccess	decl -> name		3897502	0					
ANR	3897733	Identifier	decl		3897502	0					
ANR	3897734	Identifier	name		3897502	1					
ANR	3897735	Argument	ZSTR_LEN ( decl -> name )		3897502	2					
ANR	3897736	CallExpression	ZSTR_LEN ( decl -> name )		3897502	0					
ANR	3897737	Callee	ZSTR_LEN		3897502	0					
ANR	3897738	Identifier	ZSTR_LEN		3897502	0					
ANR	3897739	ArgumentList	decl -> name		3897502	1					
ANR	3897740	Argument	decl -> name		3897502	0					
ANR	3897741	PtrMemberAccess	decl -> name		3897502	0					
ANR	3897742	Identifier	decl		3897502	0					
ANR	3897743	Identifier	name		3897502	1					
ANR	3897744	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1015:3:25977:26004	3897502	17	True				
ANR	3897745	CallExpression	"smart_str_appendc ( str , '(' )"		3897502	0					
ANR	3897746	Callee	smart_str_appendc		3897502	0					
ANR	3897747	Identifier	smart_str_appendc		3897502	0					
ANR	3897748	ArgumentList	str		3897502	1					
ANR	3897749	Argument	str		3897502	0					
ANR	3897750	Identifier	str		3897502	0					
ANR	3897751	Argument	'('		3897502	1					
ANR	3897752	PrimaryExpression	'('		3897502	0					
ANR	3897753	ExpressionStatement	"zend_ast_export_ex ( str , decl -> child [ 0 ] , 0 , indent )"	1016:3:26009:26059	3897502	18	True				
ANR	3897754	CallExpression	"zend_ast_export_ex ( str , decl -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3897755	Callee	zend_ast_export_ex		3897502	0					
ANR	3897756	Identifier	zend_ast_export_ex		3897502	0					
ANR	3897757	ArgumentList	str		3897502	1					
ANR	3897758	Argument	str		3897502	0					
ANR	3897759	Identifier	str		3897502	0					
ANR	3897760	Argument	decl -> child [ 0 ]		3897502	1					
ANR	3897761	ArrayIndexing	decl -> child [ 0 ]		3897502	0					
ANR	3897762	PtrMemberAccess	decl -> child		3897502	0					
ANR	3897763	Identifier	decl		3897502	0					
ANR	3897764	Identifier	child		3897502	1					
ANR	3897765	PrimaryExpression	0		3897502	1					
ANR	3897766	Argument	0		3897502	2					
ANR	3897767	PrimaryExpression	0		3897502	0					
ANR	3897768	Argument	indent		3897502	3					
ANR	3897769	Identifier	indent		3897502	0					
ANR	3897770	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1017:3:26064:26091	3897502	19	True				
ANR	3897771	CallExpression	"smart_str_appendc ( str , ')' )"		3897502	0					
ANR	3897772	Callee	smart_str_appendc		3897502	0					
ANR	3897773	Identifier	smart_str_appendc		3897502	0					
ANR	3897774	ArgumentList	str		3897502	1					
ANR	3897775	Argument	str		3897502	0					
ANR	3897776	Identifier	str		3897502	0					
ANR	3897777	Argument	')'		3897502	1					
ANR	3897778	PrimaryExpression	')'		3897502	0					
ANR	3897779	ExpressionStatement	"zend_ast_export_ex ( str , decl -> child [ 1 ] , 0 , indent )"	1018:3:26096:26146	3897502	20	True				
ANR	3897780	CallExpression	"zend_ast_export_ex ( str , decl -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3897781	Callee	zend_ast_export_ex		3897502	0					
ANR	3897782	Identifier	zend_ast_export_ex		3897502	0					
ANR	3897783	ArgumentList	str		3897502	1					
ANR	3897784	Argument	str		3897502	0					
ANR	3897785	Identifier	str		3897502	0					
ANR	3897786	Argument	decl -> child [ 1 ]		3897502	1					
ANR	3897787	ArrayIndexing	decl -> child [ 1 ]		3897502	0					
ANR	3897788	PtrMemberAccess	decl -> child		3897502	0					
ANR	3897789	Identifier	decl		3897502	0					
ANR	3897790	Identifier	child		3897502	1					
ANR	3897791	PrimaryExpression	1		3897502	1					
ANR	3897792	Argument	0		3897502	2					
ANR	3897793	PrimaryExpression	0		3897502	0					
ANR	3897794	Argument	indent		3897502	3					
ANR	3897795	Identifier	indent		3897502	0					
ANR	3897796	IfStatement	if ( decl -> child [ 3 ] )		3897502	21					
ANR	3897797	Condition	decl -> child [ 3 ]	1019:7:26155:26168	3897502	0	True				
ANR	3897798	ArrayIndexing	decl -> child [ 3 ]		3897502	0					
ANR	3897799	PtrMemberAccess	decl -> child		3897502	0					
ANR	3897800	Identifier	decl		3897502	0					
ANR	3897801	Identifier	child		3897502	1					
ANR	3897802	PrimaryExpression	3		3897502	1					
ANR	3897803	CompoundStatement		52:23:1465:1465	3897502	1					
ANR	3897804	ExpressionStatement	"smart_str_appends ( str , "": "" )"	1020:4:26177:26205	3897502	0	True				
ANR	3897805	CallExpression	"smart_str_appends ( str , "": "" )"		3897502	0					
ANR	3897806	Callee	smart_str_appends		3897502	0					
ANR	3897807	Identifier	smart_str_appends		3897502	0					
ANR	3897808	ArgumentList	str		3897502	1					
ANR	3897809	Argument	str		3897502	0					
ANR	3897810	Identifier	str		3897502	0					
ANR	3897811	Argument	""": """		3897502	1					
ANR	3897812	PrimaryExpression	""": """		3897502	0					
ANR	3897813	ExpressionStatement	"zend_ast_export_ns_name ( str , decl -> child [ 3 ] , 0 , indent )"	1021:4:26211:26266	3897502	1	True				
ANR	3897814	CallExpression	"zend_ast_export_ns_name ( str , decl -> child [ 3 ] , 0 , indent )"		3897502	0					
ANR	3897815	Callee	zend_ast_export_ns_name		3897502	0					
ANR	3897816	Identifier	zend_ast_export_ns_name		3897502	0					
ANR	3897817	ArgumentList	str		3897502	1					
ANR	3897818	Argument	str		3897502	0					
ANR	3897819	Identifier	str		3897502	0					
ANR	3897820	Argument	decl -> child [ 3 ]		3897502	1					
ANR	3897821	ArrayIndexing	decl -> child [ 3 ]		3897502	0					
ANR	3897822	PtrMemberAccess	decl -> child		3897502	0					
ANR	3897823	Identifier	decl		3897502	0					
ANR	3897824	Identifier	child		3897502	1					
ANR	3897825	PrimaryExpression	3		3897502	1					
ANR	3897826	Argument	0		3897502	2					
ANR	3897827	PrimaryExpression	0		3897502	0					
ANR	3897828	Argument	indent		3897502	3					
ANR	3897829	Identifier	indent		3897502	0					
ANR	3897830	IfStatement	if ( decl -> child [ 2 ] )		3897502	22					
ANR	3897831	Condition	decl -> child [ 2 ]	1023:7:26280:26293	3897502	0	True				
ANR	3897832	ArrayIndexing	decl -> child [ 2 ]		3897502	0					
ANR	3897833	PtrMemberAccess	decl -> child		3897502	0					
ANR	3897834	Identifier	decl		3897502	0					
ANR	3897835	Identifier	child		3897502	1					
ANR	3897836	PrimaryExpression	2		3897502	1					
ANR	3897837	CompoundStatement		56:23:1590:1590	3897502	1					
ANR	3897838	ExpressionStatement	"smart_str_appends ( str , "" {\\n"" )"	1024:4:26302:26332	3897502	0	True				
ANR	3897839	CallExpression	"smart_str_appends ( str , "" {\\n"" )"		3897502	0					
ANR	3897840	Callee	smart_str_appends		3897502	0					
ANR	3897841	Identifier	smart_str_appends		3897502	0					
ANR	3897842	ArgumentList	str		3897502	1					
ANR	3897843	Argument	str		3897502	0					
ANR	3897844	Identifier	str		3897502	0					
ANR	3897845	Argument	""" {\\n"""		3897502	1					
ANR	3897846	PrimaryExpression	""" {\\n"""		3897502	0					
ANR	3897847	ExpressionStatement	"zend_ast_export_stmt ( str , decl -> child [ 2 ] , indent + 1 )"	1025:4:26338:26391	3897502	1	True				
ANR	3897848	CallExpression	"zend_ast_export_stmt ( str , decl -> child [ 2 ] , indent + 1 )"		3897502	0					
ANR	3897849	Callee	zend_ast_export_stmt		3897502	0					
ANR	3897850	Identifier	zend_ast_export_stmt		3897502	0					
ANR	3897851	ArgumentList	str		3897502	1					
ANR	3897852	Argument	str		3897502	0					
ANR	3897853	Identifier	str		3897502	0					
ANR	3897854	Argument	decl -> child [ 2 ]		3897502	1					
ANR	3897855	ArrayIndexing	decl -> child [ 2 ]		3897502	0					
ANR	3897856	PtrMemberAccess	decl -> child		3897502	0					
ANR	3897857	Identifier	decl		3897502	0					
ANR	3897858	Identifier	child		3897502	1					
ANR	3897859	PrimaryExpression	2		3897502	1					
ANR	3897860	Argument	indent + 1		3897502	2					
ANR	3897861	AdditiveExpression	indent + 1		3897502	0		+			
ANR	3897862	Identifier	indent		3897502	0					
ANR	3897863	PrimaryExpression	1		3897502	1					
ANR	3897864	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1026:4:26397:26432	3897502	2	True				
ANR	3897865	CallExpression	"zend_ast_export_indent ( str , indent )"		3897502	0					
ANR	3897866	Callee	zend_ast_export_indent		3897502	0					
ANR	3897867	Identifier	zend_ast_export_indent		3897502	0					
ANR	3897868	ArgumentList	str		3897502	1					
ANR	3897869	Argument	str		3897502	0					
ANR	3897870	Identifier	str		3897502	0					
ANR	3897871	Argument	indent		3897502	1					
ANR	3897872	Identifier	indent		3897502	0					
ANR	3897873	ExpressionStatement	"smart_str_appendc ( str , '}' )"	1027:4:26438:26465	3897502	3	True				
ANR	3897874	CallExpression	"smart_str_appendc ( str , '}' )"		3897502	0					
ANR	3897875	Callee	smart_str_appendc		3897502	0					
ANR	3897876	Identifier	smart_str_appendc		3897502	0					
ANR	3897877	ArgumentList	str		3897502	1					
ANR	3897878	Argument	str		3897502	0					
ANR	3897879	Identifier	str		3897502	0					
ANR	3897880	Argument	'}'		3897502	1					
ANR	3897881	PrimaryExpression	'}'		3897502	0					
ANR	3897882	IfStatement	if ( ast -> kind != ZEND_AST_CLOSURE )		3897502	4					
ANR	3897883	Condition	ast -> kind != ZEND_AST_CLOSURE	1028:8:26475:26503	3897502	0	True				
ANR	3897884	EqualityExpression	ast -> kind != ZEND_AST_CLOSURE		3897502	0		!=			
ANR	3897885	PtrMemberAccess	ast -> kind		3897502	0					
ANR	3897886	Identifier	ast		3897502	0					
ANR	3897887	Identifier	kind		3897502	1					
ANR	3897888	Identifier	ZEND_AST_CLOSURE		3897502	1					
ANR	3897889	CompoundStatement		61:39:1800:1800	3897502	1					
ANR	3897890	ExpressionStatement	"smart_str_appendc ( str , '\\n' )"	1029:5:26513:26541	3897502	0	True				
ANR	3897891	CallExpression	"smart_str_appendc ( str , '\\n' )"		3897502	0					
ANR	3897892	Callee	smart_str_appendc		3897502	0					
ANR	3897893	Identifier	smart_str_appendc		3897502	0					
ANR	3897894	ArgumentList	str		3897502	1					
ANR	3897895	Argument	str		3897502	0					
ANR	3897896	Identifier	str		3897502	0					
ANR	3897897	Argument	'\\n'		3897502	1					
ANR	3897898	PrimaryExpression	'\\n'		3897502	0					
ANR	3897899	ElseStatement	else		3897502	0					
ANR	3897900	CompoundStatement		64:10:1853:1853	3897502	0					
ANR	3897901	ExpressionStatement	"smart_str_appends ( str , "";\\n"" )"	1032:4:26565:26594	3897502	0	True				
ANR	3897902	CallExpression	"smart_str_appends ( str , "";\\n"" )"		3897502	0					
ANR	3897903	Callee	smart_str_appends		3897502	0					
ANR	3897904	Identifier	smart_str_appends		3897502	0					
ANR	3897905	ArgumentList	str		3897502	1					
ANR	3897906	Argument	str		3897502	0					
ANR	3897907	Identifier	str		3897502	0					
ANR	3897908	Argument	""";\\n"""		3897502	1					
ANR	3897909	PrimaryExpression	""";\\n"""		3897502	0					
ANR	3897910	BreakStatement	break ;	1034:3:26604:26609	3897502	23	True				
ANR	3897911	Label	case ZEND_AST_CLASS :	1035:2:26613:26632	3897502	24	True				
ANR	3897912	Identifier	ZEND_AST_CLASS		3897502	0					
ANR	3897913	ExpressionStatement	decl = ( zend_ast_decl * ) ast	1036:3:26637:26665	3897502	25	True				
ANR	3897914	AssignmentExpression	decl = ( zend_ast_decl * ) ast		3897502	0		=			
ANR	3897915	Identifier	decl		3897502	0					
ANR	3897916	CastExpression	( zend_ast_decl * ) ast		3897502	1					
ANR	3897917	CastTarget	zend_ast_decl *		3897502	0					
ANR	3897918	Identifier	ast		3897502	1					
ANR	3897919	IfStatement	if ( decl -> flags & ZEND_ACC_INTERFACE )		3897502	26					
ANR	3897920	Condition	decl -> flags & ZEND_ACC_INTERFACE	1037:7:26674:26705	3897502	0	True				
ANR	3897921	BitAndExpression	decl -> flags & ZEND_ACC_INTERFACE		3897502	0		&			
ANR	3897922	PtrMemberAccess	decl -> flags		3897502	0					
ANR	3897923	Identifier	decl		3897502	0					
ANR	3897924	Identifier	flags		3897502	1					
ANR	3897925	Identifier	ZEND_ACC_INTERFACE		3897502	1					
ANR	3897926	CompoundStatement		70:41:2002:2002	3897502	1					
ANR	3897927	ExpressionStatement	"smart_str_appends ( str , ""interface "" )"	1038:4:26714:26750	3897502	0	True				
ANR	3897928	CallExpression	"smart_str_appends ( str , ""interface "" )"		3897502	0					
ANR	3897929	Callee	smart_str_appends		3897502	0					
ANR	3897930	Identifier	smart_str_appends		3897502	0					
ANR	3897931	ArgumentList	str		3897502	1					
ANR	3897932	Argument	str		3897502	0					
ANR	3897933	Identifier	str		3897502	0					
ANR	3897934	Argument	"""interface """		3897502	1					
ANR	3897935	PrimaryExpression	"""interface """		3897502	0					
ANR	3897936	ElseStatement	else		3897502	0					
ANR	3897937	IfStatement	if ( decl -> flags & ZEND_ACC_TRAIT )		3897502	0					
ANR	3897938	Condition	decl -> flags & ZEND_ACC_TRAIT	1039:14:26766:26793	3897502	0	True				
ANR	3897939	BitAndExpression	decl -> flags & ZEND_ACC_TRAIT		3897502	0		&			
ANR	3897940	PtrMemberAccess	decl -> flags		3897502	0					
ANR	3897941	Identifier	decl		3897502	0					
ANR	3897942	Identifier	flags		3897502	1					
ANR	3897943	Identifier	ZEND_ACC_TRAIT		3897502	1					
ANR	3897944	CompoundStatement		72:44:2090:2090	3897502	1					
ANR	3897945	ExpressionStatement	"smart_str_appends ( str , ""trait "" )"	1040:4:26802:26834	3897502	0	True				
ANR	3897946	CallExpression	"smart_str_appends ( str , ""trait "" )"		3897502	0					
ANR	3897947	Callee	smart_str_appends		3897502	0					
ANR	3897948	Identifier	smart_str_appends		3897502	0					
ANR	3897949	ArgumentList	str		3897502	1					
ANR	3897950	Argument	str		3897502	0					
ANR	3897951	Identifier	str		3897502	0					
ANR	3897952	Argument	"""trait """		3897502	1					
ANR	3897953	PrimaryExpression	"""trait """		3897502	0					
ANR	3897954	ElseStatement	else		3897502	0					
ANR	3897955	CompoundStatement		74:10:2140:2140	3897502	0					
ANR	3897956	IfStatement	if ( decl -> flags & ZEND_ACC_EXPLICIT_ABSTRACT_CLASS )		3897502	0					
ANR	3897957	Condition	decl -> flags & ZEND_ACC_EXPLICIT_ABSTRACT_CLASS	1042:8:26856:26901	3897502	0	True				
ANR	3897958	BitAndExpression	decl -> flags & ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		3897502	0		&			
ANR	3897959	PtrMemberAccess	decl -> flags		3897502	0					
ANR	3897960	Identifier	decl		3897502	0					
ANR	3897961	Identifier	flags		3897502	1					
ANR	3897962	Identifier	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		3897502	1					
ANR	3897963	CompoundStatement		75:56:2198:2198	3897502	1					
ANR	3897964	ExpressionStatement	"smart_str_appends ( str , ""abstract "" )"	1043:5:26911:26946	3897502	0	True				
ANR	3897965	CallExpression	"smart_str_appends ( str , ""abstract "" )"		3897502	0					
ANR	3897966	Callee	smart_str_appends		3897502	0					
ANR	3897967	Identifier	smart_str_appends		3897502	0					
ANR	3897968	ArgumentList	str		3897502	1					
ANR	3897969	Argument	str		3897502	0					
ANR	3897970	Identifier	str		3897502	0					
ANR	3897971	Argument	"""abstract """		3897502	1					
ANR	3897972	PrimaryExpression	"""abstract """		3897502	0					
ANR	3897973	IfStatement	if ( decl -> flags & ZEND_ACC_FINAL )		3897502	1					
ANR	3897974	Condition	decl -> flags & ZEND_ACC_FINAL	1045:8:26962:26989	3897502	0	True				
ANR	3897975	BitAndExpression	decl -> flags & ZEND_ACC_FINAL		3897502	0		&			
ANR	3897976	PtrMemberAccess	decl -> flags		3897502	0					
ANR	3897977	Identifier	decl		3897502	0					
ANR	3897978	Identifier	flags		3897502	1					
ANR	3897979	Identifier	ZEND_ACC_FINAL		3897502	1					
ANR	3897980	CompoundStatement		78:38:2286:2286	3897502	1					
ANR	3897981	ExpressionStatement	"smart_str_appends ( str , ""final "" )"	1046:5:26999:27031	3897502	0	True				
ANR	3897982	CallExpression	"smart_str_appends ( str , ""final "" )"		3897502	0					
ANR	3897983	Callee	smart_str_appends		3897502	0					
ANR	3897984	Identifier	smart_str_appends		3897502	0					
ANR	3897985	ArgumentList	str		3897502	1					
ANR	3897986	Argument	str		3897502	0					
ANR	3897987	Identifier	str		3897502	0					
ANR	3897988	Argument	"""final """		3897502	1					
ANR	3897989	PrimaryExpression	"""final """		3897502	0					
ANR	3897990	ExpressionStatement	"smart_str_appends ( str , ""class "" )"	1048:4:27043:27075	3897502	2	True				
ANR	3897991	CallExpression	"smart_str_appends ( str , ""class "" )"		3897502	0					
ANR	3897992	Callee	smart_str_appends		3897502	0					
ANR	3897993	Identifier	smart_str_appends		3897502	0					
ANR	3897994	ArgumentList	str		3897502	1					
ANR	3897995	Argument	str		3897502	0					
ANR	3897996	Identifier	str		3897502	0					
ANR	3897997	Argument	"""class """		3897502	1					
ANR	3897998	PrimaryExpression	"""class """		3897502	0					
ANR	3897999	ExpressionStatement	"smart_str_appendl ( str , ZSTR_VAL ( decl -> name ) , ZSTR_LEN ( decl -> name ) )"	1050:3:27085:27151	3897502	27	True				
ANR	3898000	CallExpression	"smart_str_appendl ( str , ZSTR_VAL ( decl -> name ) , ZSTR_LEN ( decl -> name ) )"		3897502	0					
ANR	3898001	Callee	smart_str_appendl		3897502	0					
ANR	3898002	Identifier	smart_str_appendl		3897502	0					
ANR	3898003	ArgumentList	str		3897502	1					
ANR	3898004	Argument	str		3897502	0					
ANR	3898005	Identifier	str		3897502	0					
ANR	3898006	Argument	ZSTR_VAL ( decl -> name )		3897502	1					
ANR	3898007	CallExpression	ZSTR_VAL ( decl -> name )		3897502	0					
ANR	3898008	Callee	ZSTR_VAL		3897502	0					
ANR	3898009	Identifier	ZSTR_VAL		3897502	0					
ANR	3898010	ArgumentList	decl -> name		3897502	1					
ANR	3898011	Argument	decl -> name		3897502	0					
ANR	3898012	PtrMemberAccess	decl -> name		3897502	0					
ANR	3898013	Identifier	decl		3897502	0					
ANR	3898014	Identifier	name		3897502	1					
ANR	3898015	Argument	ZSTR_LEN ( decl -> name )		3897502	2					
ANR	3898016	CallExpression	ZSTR_LEN ( decl -> name )		3897502	0					
ANR	3898017	Callee	ZSTR_LEN		3897502	0					
ANR	3898018	Identifier	ZSTR_LEN		3897502	0					
ANR	3898019	ArgumentList	decl -> name		3897502	1					
ANR	3898020	Argument	decl -> name		3897502	0					
ANR	3898021	PtrMemberAccess	decl -> name		3897502	0					
ANR	3898022	Identifier	decl		3897502	0					
ANR	3898023	Identifier	name		3897502	1					
ANR	3898024	IfStatement	if ( decl -> child [ 0 ] )		3897502	28					
ANR	3898025	Condition	decl -> child [ 0 ]	1051:7:27160:27173	3897502	0	True				
ANR	3898026	ArrayIndexing	decl -> child [ 0 ]		3897502	0					
ANR	3898027	PtrMemberAccess	decl -> child		3897502	0					
ANR	3898028	Identifier	decl		3897502	0					
ANR	3898029	Identifier	child		3897502	1					
ANR	3898030	PrimaryExpression	0		3897502	1					
ANR	3898031	CompoundStatement		84:23:2470:2470	3897502	1					
ANR	3898032	ExpressionStatement	"smart_str_appends ( str , "" extends "" )"	1052:4:27182:27217	3897502	0	True				
ANR	3898033	CallExpression	"smart_str_appends ( str , "" extends "" )"		3897502	0					
ANR	3898034	Callee	smart_str_appends		3897502	0					
ANR	3898035	Identifier	smart_str_appends		3897502	0					
ANR	3898036	ArgumentList	str		3897502	1					
ANR	3898037	Argument	str		3897502	0					
ANR	3898038	Identifier	str		3897502	0					
ANR	3898039	Argument	""" extends """		3897502	1					
ANR	3898040	PrimaryExpression	""" extends """		3897502	0					
ANR	3898041	ExpressionStatement	"zend_ast_export_ns_name ( str , decl -> child [ 0 ] , 0 , indent )"	1053:4:27223:27278	3897502	1	True				
ANR	3898042	CallExpression	"zend_ast_export_ns_name ( str , decl -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3898043	Callee	zend_ast_export_ns_name		3897502	0					
ANR	3898044	Identifier	zend_ast_export_ns_name		3897502	0					
ANR	3898045	ArgumentList	str		3897502	1					
ANR	3898046	Argument	str		3897502	0					
ANR	3898047	Identifier	str		3897502	0					
ANR	3898048	Argument	decl -> child [ 0 ]		3897502	1					
ANR	3898049	ArrayIndexing	decl -> child [ 0 ]		3897502	0					
ANR	3898050	PtrMemberAccess	decl -> child		3897502	0					
ANR	3898051	Identifier	decl		3897502	0					
ANR	3898052	Identifier	child		3897502	1					
ANR	3898053	PrimaryExpression	0		3897502	1					
ANR	3898054	Argument	0		3897502	2					
ANR	3898055	PrimaryExpression	0		3897502	0					
ANR	3898056	Argument	indent		3897502	3					
ANR	3898057	Identifier	indent		3897502	0					
ANR	3898058	IfStatement	if ( decl -> child [ 1 ] )		3897502	29					
ANR	3898059	Condition	decl -> child [ 1 ]	1055:7:27292:27305	3897502	0	True				
ANR	3898060	ArrayIndexing	decl -> child [ 1 ]		3897502	0					
ANR	3898061	PtrMemberAccess	decl -> child		3897502	0					
ANR	3898062	Identifier	decl		3897502	0					
ANR	3898063	Identifier	child		3897502	1					
ANR	3898064	PrimaryExpression	1		3897502	1					
ANR	3898065	CompoundStatement		88:23:2602:2602	3897502	1					
ANR	3898066	ExpressionStatement	"smart_str_appends ( str , "" implements "" )"	1056:4:27314:27352	3897502	0	True				
ANR	3898067	CallExpression	"smart_str_appends ( str , "" implements "" )"		3897502	0					
ANR	3898068	Callee	smart_str_appends		3897502	0					
ANR	3898069	Identifier	smart_str_appends		3897502	0					
ANR	3898070	ArgumentList	str		3897502	1					
ANR	3898071	Argument	str		3897502	0					
ANR	3898072	Identifier	str		3897502	0					
ANR	3898073	Argument	""" implements """		3897502	1					
ANR	3898074	PrimaryExpression	""" implements """		3897502	0					
ANR	3898075	ExpressionStatement	"zend_ast_export_ex ( str , decl -> child [ 1 ] , 0 , indent )"	1057:4:27358:27408	3897502	1	True				
ANR	3898076	CallExpression	"zend_ast_export_ex ( str , decl -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3898077	Callee	zend_ast_export_ex		3897502	0					
ANR	3898078	Identifier	zend_ast_export_ex		3897502	0					
ANR	3898079	ArgumentList	str		3897502	1					
ANR	3898080	Argument	str		3897502	0					
ANR	3898081	Identifier	str		3897502	0					
ANR	3898082	Argument	decl -> child [ 1 ]		3897502	1					
ANR	3898083	ArrayIndexing	decl -> child [ 1 ]		3897502	0					
ANR	3898084	PtrMemberAccess	decl -> child		3897502	0					
ANR	3898085	Identifier	decl		3897502	0					
ANR	3898086	Identifier	child		3897502	1					
ANR	3898087	PrimaryExpression	1		3897502	1					
ANR	3898088	Argument	0		3897502	2					
ANR	3898089	PrimaryExpression	0		3897502	0					
ANR	3898090	Argument	indent		3897502	3					
ANR	3898091	Identifier	indent		3897502	0					
ANR	3898092	ExpressionStatement	"smart_str_appends ( str , "" {\\n"" )"	1059:3:27418:27448	3897502	30	True				
ANR	3898093	CallExpression	"smart_str_appends ( str , "" {\\n"" )"		3897502	0					
ANR	3898094	Callee	smart_str_appends		3897502	0					
ANR	3898095	Identifier	smart_str_appends		3897502	0					
ANR	3898096	ArgumentList	str		3897502	1					
ANR	3898097	Argument	str		3897502	0					
ANR	3898098	Identifier	str		3897502	0					
ANR	3898099	Argument	""" {\\n"""		3897502	1					
ANR	3898100	PrimaryExpression	""" {\\n"""		3897502	0					
ANR	3898101	ExpressionStatement	"zend_ast_export_stmt ( str , decl -> child [ 2 ] , indent + 1 )"	1060:3:27453:27506	3897502	31	True				
ANR	3898102	CallExpression	"zend_ast_export_stmt ( str , decl -> child [ 2 ] , indent + 1 )"		3897502	0					
ANR	3898103	Callee	zend_ast_export_stmt		3897502	0					
ANR	3898104	Identifier	zend_ast_export_stmt		3897502	0					
ANR	3898105	ArgumentList	str		3897502	1					
ANR	3898106	Argument	str		3897502	0					
ANR	3898107	Identifier	str		3897502	0					
ANR	3898108	Argument	decl -> child [ 2 ]		3897502	1					
ANR	3898109	ArrayIndexing	decl -> child [ 2 ]		3897502	0					
ANR	3898110	PtrMemberAccess	decl -> child		3897502	0					
ANR	3898111	Identifier	decl		3897502	0					
ANR	3898112	Identifier	child		3897502	1					
ANR	3898113	PrimaryExpression	2		3897502	1					
ANR	3898114	Argument	indent + 1		3897502	2					
ANR	3898115	AdditiveExpression	indent + 1		3897502	0		+			
ANR	3898116	Identifier	indent		3897502	0					
ANR	3898117	PrimaryExpression	1		3897502	1					
ANR	3898118	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1061:3:27511:27546	3897502	32	True				
ANR	3898119	CallExpression	"zend_ast_export_indent ( str , indent )"		3897502	0					
ANR	3898120	Callee	zend_ast_export_indent		3897502	0					
ANR	3898121	Identifier	zend_ast_export_indent		3897502	0					
ANR	3898122	ArgumentList	str		3897502	1					
ANR	3898123	Argument	str		3897502	0					
ANR	3898124	Identifier	str		3897502	0					
ANR	3898125	Argument	indent		3897502	1					
ANR	3898126	Identifier	indent		3897502	0					
ANR	3898127	ExpressionStatement	"smart_str_appends ( str , ""}\\n"" )"	1062:3:27551:27580	3897502	33	True				
ANR	3898128	CallExpression	"smart_str_appends ( str , ""}\\n"" )"		3897502	0					
ANR	3898129	Callee	smart_str_appends		3897502	0					
ANR	3898130	Identifier	smart_str_appends		3897502	0					
ANR	3898131	ArgumentList	str		3897502	1					
ANR	3898132	Argument	str		3897502	0					
ANR	3898133	Identifier	str		3897502	0					
ANR	3898134	Argument	"""}\\n"""		3897502	1					
ANR	3898135	PrimaryExpression	"""}\\n"""		3897502	0					
ANR	3898136	BreakStatement	break ;	1063:3:27585:27590	3897502	34	True				
ANR	3898137	Label	case ZEND_AST_ARG_LIST :	1066:2:27614:27636	3897502	35	True				
ANR	3898138	Identifier	ZEND_AST_ARG_LIST		3897502	0					
ANR	3898139	Label	case ZEND_AST_EXPR_LIST :	1067:2:27640:27663	3897502	36	True				
ANR	3898140	Identifier	ZEND_AST_EXPR_LIST		3897502	0					
ANR	3898141	Label	case ZEND_AST_PARAM_LIST :	1068:2:27667:27691	3897502	37	True				
ANR	3898142	Identifier	ZEND_AST_PARAM_LIST		3897502	0					
ANR	3898143	Label	simple_list :	1069:0:27693:27704	3897502	38	True				
ANR	3898144	Identifier	simple_list		3897502	0					
ANR	3898145	ExpressionStatement	"zend_ast_export_list ( str , ( zend_ast_list * ) ast , 1 , 20 , indent )"	1070:3:27709:27770	3897502	39	True				
ANR	3898146	CallExpression	"zend_ast_export_list ( str , ( zend_ast_list * ) ast , 1 , 20 , indent )"		3897502	0					
ANR	3898147	Callee	zend_ast_export_list		3897502	0					
ANR	3898148	Identifier	zend_ast_export_list		3897502	0					
ANR	3898149	ArgumentList	str		3897502	1					
ANR	3898150	Argument	str		3897502	0					
ANR	3898151	Identifier	str		3897502	0					
ANR	3898152	Argument	( zend_ast_list * ) ast		3897502	1					
ANR	3898153	CastExpression	( zend_ast_list * ) ast		3897502	0					
ANR	3898154	CastTarget	zend_ast_list *		3897502	0					
ANR	3898155	Identifier	ast		3897502	1					
ANR	3898156	Argument	1		3897502	2					
ANR	3898157	PrimaryExpression	1		3897502	0					
ANR	3898158	Argument	20		3897502	3					
ANR	3898159	PrimaryExpression	20		3897502	0					
ANR	3898160	Argument	indent		3897502	4					
ANR	3898161	Identifier	indent		3897502	0					
ANR	3898162	BreakStatement	break ;	1071:3:27775:27780	3897502	40	True				
ANR	3898163	Label	case ZEND_AST_LIST :	1072:2:27784:27802	3897502	41	True				
ANR	3898164	Identifier	ZEND_AST_LIST		3897502	0					
ANR	3898165	ExpressionStatement	"smart_str_appends ( str , ""list("" )"	1073:3:27807:27838	3897502	42	True				
ANR	3898166	CallExpression	"smart_str_appends ( str , ""list("" )"		3897502	0					
ANR	3898167	Callee	smart_str_appends		3897502	0					
ANR	3898168	Identifier	smart_str_appends		3897502	0					
ANR	3898169	ArgumentList	str		3897502	1					
ANR	3898170	Argument	str		3897502	0					
ANR	3898171	Identifier	str		3897502	0					
ANR	3898172	Argument	"""list("""		3897502	1					
ANR	3898173	PrimaryExpression	"""list("""		3897502	0					
ANR	3898174	ExpressionStatement	"zend_ast_export_list ( str , ( zend_ast_list * ) ast , 1 , 20 , indent )"	1074:3:27843:27904	3897502	43	True				
ANR	3898175	CallExpression	"zend_ast_export_list ( str , ( zend_ast_list * ) ast , 1 , 20 , indent )"		3897502	0					
ANR	3898176	Callee	zend_ast_export_list		3897502	0					
ANR	3898177	Identifier	zend_ast_export_list		3897502	0					
ANR	3898178	ArgumentList	str		3897502	1					
ANR	3898179	Argument	str		3897502	0					
ANR	3898180	Identifier	str		3897502	0					
ANR	3898181	Argument	( zend_ast_list * ) ast		3897502	1					
ANR	3898182	CastExpression	( zend_ast_list * ) ast		3897502	0					
ANR	3898183	CastTarget	zend_ast_list *		3897502	0					
ANR	3898184	Identifier	ast		3897502	1					
ANR	3898185	Argument	1		3897502	2					
ANR	3898186	PrimaryExpression	1		3897502	0					
ANR	3898187	Argument	20		3897502	3					
ANR	3898188	PrimaryExpression	20		3897502	0					
ANR	3898189	Argument	indent		3897502	4					
ANR	3898190	Identifier	indent		3897502	0					
ANR	3898191	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1075:3:27909:27936	3897502	44	True				
ANR	3898192	CallExpression	"smart_str_appendc ( str , ')' )"		3897502	0					
ANR	3898193	Callee	smart_str_appendc		3897502	0					
ANR	3898194	Identifier	smart_str_appendc		3897502	0					
ANR	3898195	ArgumentList	str		3897502	1					
ANR	3898196	Argument	str		3897502	0					
ANR	3898197	Identifier	str		3897502	0					
ANR	3898198	Argument	')'		3897502	1					
ANR	3898199	PrimaryExpression	')'		3897502	0					
ANR	3898200	BreakStatement	break ;	1076:3:27941:27946	3897502	45	True				
ANR	3898201	Label	case ZEND_AST_ARRAY :	1077:2:27950:27969	3897502	46	True				
ANR	3898202	Identifier	ZEND_AST_ARRAY		3897502	0					
ANR	3898203	ExpressionStatement	"smart_str_appendc ( str , '[' )"	1078:3:27974:28001	3897502	47	True				
ANR	3898204	CallExpression	"smart_str_appendc ( str , '[' )"		3897502	0					
ANR	3898205	Callee	smart_str_appendc		3897502	0					
ANR	3898206	Identifier	smart_str_appendc		3897502	0					
ANR	3898207	ArgumentList	str		3897502	1					
ANR	3898208	Argument	str		3897502	0					
ANR	3898209	Identifier	str		3897502	0					
ANR	3898210	Argument	'['		3897502	1					
ANR	3898211	PrimaryExpression	'['		3897502	0					
ANR	3898212	ExpressionStatement	"zend_ast_export_list ( str , ( zend_ast_list * ) ast , 1 , 20 , indent )"	1079:3:28006:28067	3897502	48	True				
ANR	3898213	CallExpression	"zend_ast_export_list ( str , ( zend_ast_list * ) ast , 1 , 20 , indent )"		3897502	0					
ANR	3898214	Callee	zend_ast_export_list		3897502	0					
ANR	3898215	Identifier	zend_ast_export_list		3897502	0					
ANR	3898216	ArgumentList	str		3897502	1					
ANR	3898217	Argument	str		3897502	0					
ANR	3898218	Identifier	str		3897502	0					
ANR	3898219	Argument	( zend_ast_list * ) ast		3897502	1					
ANR	3898220	CastExpression	( zend_ast_list * ) ast		3897502	0					
ANR	3898221	CastTarget	zend_ast_list *		3897502	0					
ANR	3898222	Identifier	ast		3897502	1					
ANR	3898223	Argument	1		3897502	2					
ANR	3898224	PrimaryExpression	1		3897502	0					
ANR	3898225	Argument	20		3897502	3					
ANR	3898226	PrimaryExpression	20		3897502	0					
ANR	3898227	Argument	indent		3897502	4					
ANR	3898228	Identifier	indent		3897502	0					
ANR	3898229	ExpressionStatement	"smart_str_appendc ( str , ']' )"	1080:3:28072:28099	3897502	49	True				
ANR	3898230	CallExpression	"smart_str_appendc ( str , ']' )"		3897502	0					
ANR	3898231	Callee	smart_str_appendc		3897502	0					
ANR	3898232	Identifier	smart_str_appendc		3897502	0					
ANR	3898233	ArgumentList	str		3897502	1					
ANR	3898234	Argument	str		3897502	0					
ANR	3898235	Identifier	str		3897502	0					
ANR	3898236	Argument	']'		3897502	1					
ANR	3898237	PrimaryExpression	']'		3897502	0					
ANR	3898238	BreakStatement	break ;	1081:3:28104:28109	3897502	50	True				
ANR	3898239	Label	case ZEND_AST_ENCAPS_LIST :	1082:2:28113:28138	3897502	51	True				
ANR	3898240	Identifier	ZEND_AST_ENCAPS_LIST		3897502	0					
ANR	3898241	ExpressionStatement	"smart_str_appendc ( str , '""' )"	1083:3:28143:28170	3897502	52	True				
ANR	3898242	CallExpression	"smart_str_appendc ( str , '""' )"		3897502	0					
ANR	3898243	Callee	smart_str_appendc		3897502	0					
ANR	3898244	Identifier	smart_str_appendc		3897502	0					
ANR	3898245	ArgumentList	str		3897502	1					
ANR	3898246	Argument	str		3897502	0					
ANR	3898247	Identifier	str		3897502	0					
ANR	3898248	Argument	"'""'"		3897502	1					
ANR	3898249	PrimaryExpression	"'""'"		3897502	0					
ANR	3898250	ExpressionStatement	"zend_ast_export_encaps_list ( str , '""' , ( zend_ast_list * ) ast , indent )"	1084:3:28175:28241	3897502	53	True				
ANR	3898251	CallExpression	"zend_ast_export_encaps_list ( str , '""' , ( zend_ast_list * ) ast , indent )"		3897502	0					
ANR	3898252	Callee	zend_ast_export_encaps_list		3897502	0					
ANR	3898253	Identifier	zend_ast_export_encaps_list		3897502	0					
ANR	3898254	ArgumentList	str		3897502	1					
ANR	3898255	Argument	str		3897502	0					
ANR	3898256	Identifier	str		3897502	0					
ANR	3898257	Argument	"'""'"		3897502	1					
ANR	3898258	PrimaryExpression	"'""'"		3897502	0					
ANR	3898259	Argument	( zend_ast_list * ) ast		3897502	2					
ANR	3898260	CastExpression	( zend_ast_list * ) ast		3897502	0					
ANR	3898261	CastTarget	zend_ast_list *		3897502	0					
ANR	3898262	Identifier	ast		3897502	1					
ANR	3898263	Argument	indent		3897502	3					
ANR	3898264	Identifier	indent		3897502	0					
ANR	3898265	ExpressionStatement	"smart_str_appendc ( str , '""' )"	1085:3:28246:28273	3897502	54	True				
ANR	3898266	CallExpression	"smart_str_appendc ( str , '""' )"		3897502	0					
ANR	3898267	Callee	smart_str_appendc		3897502	0					
ANR	3898268	Identifier	smart_str_appendc		3897502	0					
ANR	3898269	ArgumentList	str		3897502	1					
ANR	3898270	Argument	str		3897502	0					
ANR	3898271	Identifier	str		3897502	0					
ANR	3898272	Argument	"'""'"		3897502	1					
ANR	3898273	PrimaryExpression	"'""'"		3897502	0					
ANR	3898274	BreakStatement	break ;	1086:3:28278:28283	3897502	55	True				
ANR	3898275	Label	case ZEND_AST_STMT_LIST :	1087:2:28287:28310	3897502	56	True				
ANR	3898276	Identifier	ZEND_AST_STMT_LIST		3897502	0					
ANR	3898277	Label	case ZEND_AST_TRAIT_ADAPTATIONS :	1088:2:28314:28345	3897502	57	True				
ANR	3898278	Identifier	ZEND_AST_TRAIT_ADAPTATIONS		3897502	0					
ANR	3898279	ExpressionStatement	"zend_ast_export_stmt ( str , ast , indent )"	1089:3:28350:28388	3897502	58	True				
ANR	3898280	CallExpression	"zend_ast_export_stmt ( str , ast , indent )"		3897502	0					
ANR	3898281	Callee	zend_ast_export_stmt		3897502	0					
ANR	3898282	Identifier	zend_ast_export_stmt		3897502	0					
ANR	3898283	ArgumentList	str		3897502	1					
ANR	3898284	Argument	str		3897502	0					
ANR	3898285	Identifier	str		3897502	0					
ANR	3898286	Argument	ast		3897502	1					
ANR	3898287	Identifier	ast		3897502	0					
ANR	3898288	Argument	indent		3897502	2					
ANR	3898289	Identifier	indent		3897502	0					
ANR	3898290	BreakStatement	break ;	1090:3:28393:28398	3897502	59	True				
ANR	3898291	Label	case ZEND_AST_IF :	1091:2:28402:28418	3897502	60	True				
ANR	3898292	Identifier	ZEND_AST_IF		3897502	0					
ANR	3898293	ExpressionStatement	"zend_ast_export_if_stmt ( str , ( zend_ast_list * ) ast , indent )"	1092:3:28423:28480	3897502	61	True				
ANR	3898294	CallExpression	"zend_ast_export_if_stmt ( str , ( zend_ast_list * ) ast , indent )"		3897502	0					
ANR	3898295	Callee	zend_ast_export_if_stmt		3897502	0					
ANR	3898296	Identifier	zend_ast_export_if_stmt		3897502	0					
ANR	3898297	ArgumentList	str		3897502	1					
ANR	3898298	Argument	str		3897502	0					
ANR	3898299	Identifier	str		3897502	0					
ANR	3898300	Argument	( zend_ast_list * ) ast		3897502	1					
ANR	3898301	CastExpression	( zend_ast_list * ) ast		3897502	0					
ANR	3898302	CastTarget	zend_ast_list *		3897502	0					
ANR	3898303	Identifier	ast		3897502	1					
ANR	3898304	Argument	indent		3897502	2					
ANR	3898305	Identifier	indent		3897502	0					
ANR	3898306	BreakStatement	break ;	1093:3:28485:28490	3897502	62	True				
ANR	3898307	Label	case ZEND_AST_SWITCH_LIST :	1094:2:28494:28519	3897502	63	True				
ANR	3898308	Identifier	ZEND_AST_SWITCH_LIST		3897502	0					
ANR	3898309	Label	case ZEND_AST_CATCH_LIST :	1095:2:28523:28547	3897502	64	True				
ANR	3898310	Identifier	ZEND_AST_CATCH_LIST		3897502	0					
ANR	3898311	ExpressionStatement	"zend_ast_export_list ( str , ( zend_ast_list * ) ast , 0 , 0 , indent )"	1096:3:28552:28612	3897502	65	True				
ANR	3898312	CallExpression	"zend_ast_export_list ( str , ( zend_ast_list * ) ast , 0 , 0 , indent )"		3897502	0					
ANR	3898313	Callee	zend_ast_export_list		3897502	0					
ANR	3898314	Identifier	zend_ast_export_list		3897502	0					
ANR	3898315	ArgumentList	str		3897502	1					
ANR	3898316	Argument	str		3897502	0					
ANR	3898317	Identifier	str		3897502	0					
ANR	3898318	Argument	( zend_ast_list * ) ast		3897502	1					
ANR	3898319	CastExpression	( zend_ast_list * ) ast		3897502	0					
ANR	3898320	CastTarget	zend_ast_list *		3897502	0					
ANR	3898321	Identifier	ast		3897502	1					
ANR	3898322	Argument	0		3897502	2					
ANR	3898323	PrimaryExpression	0		3897502	0					
ANR	3898324	Argument	0		3897502	3					
ANR	3898325	PrimaryExpression	0		3897502	0					
ANR	3898326	Argument	indent		3897502	4					
ANR	3898327	Identifier	indent		3897502	0					
ANR	3898328	BreakStatement	break ;	1097:3:28617:28622	3897502	66	True				
ANR	3898329	Label	case ZEND_AST_CLOSURE_USES :	1098:2:28626:28652	3897502	67	True				
ANR	3898330	Identifier	ZEND_AST_CLOSURE_USES		3897502	0					
ANR	3898331	ExpressionStatement	"smart_str_appends ( str , "" use("" )"	1099:3:28657:28688	3897502	68	True				
ANR	3898332	CallExpression	"smart_str_appends ( str , "" use("" )"		3897502	0					
ANR	3898333	Callee	smart_str_appends		3897502	0					
ANR	3898334	Identifier	smart_str_appends		3897502	0					
ANR	3898335	ArgumentList	str		3897502	1					
ANR	3898336	Argument	str		3897502	0					
ANR	3898337	Identifier	str		3897502	0					
ANR	3898338	Argument	""" use("""		3897502	1					
ANR	3898339	PrimaryExpression	""" use("""		3897502	0					
ANR	3898340	ExpressionStatement	"zend_ast_export_var_list ( str , ( zend_ast_list * ) ast , indent )"	1100:3:28693:28751	3897502	69	True				
ANR	3898341	CallExpression	"zend_ast_export_var_list ( str , ( zend_ast_list * ) ast , indent )"		3897502	0					
ANR	3898342	Callee	zend_ast_export_var_list		3897502	0					
ANR	3898343	Identifier	zend_ast_export_var_list		3897502	0					
ANR	3898344	ArgumentList	str		3897502	1					
ANR	3898345	Argument	str		3897502	0					
ANR	3898346	Identifier	str		3897502	0					
ANR	3898347	Argument	( zend_ast_list * ) ast		3897502	1					
ANR	3898348	CastExpression	( zend_ast_list * ) ast		3897502	0					
ANR	3898349	CastTarget	zend_ast_list *		3897502	0					
ANR	3898350	Identifier	ast		3897502	1					
ANR	3898351	Argument	indent		3897502	2					
ANR	3898352	Identifier	indent		3897502	0					
ANR	3898353	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1101:3:28756:28783	3897502	70	True				
ANR	3898354	CallExpression	"smart_str_appendc ( str , ')' )"		3897502	0					
ANR	3898355	Callee	smart_str_appendc		3897502	0					
ANR	3898356	Identifier	smart_str_appendc		3897502	0					
ANR	3898357	ArgumentList	str		3897502	1					
ANR	3898358	Argument	str		3897502	0					
ANR	3898359	Identifier	str		3897502	0					
ANR	3898360	Argument	')'		3897502	1					
ANR	3898361	PrimaryExpression	')'		3897502	0					
ANR	3898362	BreakStatement	break ;	1102:3:28788:28793	3897502	71	True				
ANR	3898363	Label	case ZEND_AST_PROP_DECL :	1103:2:28797:28820	3897502	72	True				
ANR	3898364	Identifier	ZEND_AST_PROP_DECL		3897502	0					
ANR	3898365	IfStatement	if ( ast -> attr & ZEND_ACC_PUBLIC )		3897502	73					
ANR	3898366	Condition	ast -> attr & ZEND_ACC_PUBLIC	1104:7:28829:28855	3897502	0	True				
ANR	3898367	BitAndExpression	ast -> attr & ZEND_ACC_PUBLIC		3897502	0		&			
ANR	3898368	PtrMemberAccess	ast -> attr		3897502	0					
ANR	3898369	Identifier	ast		3897502	0					
ANR	3898370	Identifier	attr		3897502	1					
ANR	3898371	Identifier	ZEND_ACC_PUBLIC		3897502	1					
ANR	3898372	CompoundStatement		137:36:4152:4152	3897502	1					
ANR	3898373	ExpressionStatement	"smart_str_appends ( str , ""public "" )"	1105:4:28864:28897	3897502	0	True				
ANR	3898374	CallExpression	"smart_str_appends ( str , ""public "" )"		3897502	0					
ANR	3898375	Callee	smart_str_appends		3897502	0					
ANR	3898376	Identifier	smart_str_appends		3897502	0					
ANR	3898377	ArgumentList	str		3897502	1					
ANR	3898378	Argument	str		3897502	0					
ANR	3898379	Identifier	str		3897502	0					
ANR	3898380	Argument	"""public """		3897502	1					
ANR	3898381	PrimaryExpression	"""public """		3897502	0					
ANR	3898382	ElseStatement	else		3897502	0					
ANR	3898383	IfStatement	if ( ast -> attr & ZEND_ACC_PROTECTED )		3897502	0					
ANR	3898384	Condition	ast -> attr & ZEND_ACC_PROTECTED	1106:14:28913:28942	3897502	0	True				
ANR	3898385	BitAndExpression	ast -> attr & ZEND_ACC_PROTECTED		3897502	0		&			
ANR	3898386	PtrMemberAccess	ast -> attr		3897502	0					
ANR	3898387	Identifier	ast		3897502	0					
ANR	3898388	Identifier	attr		3897502	1					
ANR	3898389	Identifier	ZEND_ACC_PROTECTED		3897502	1					
ANR	3898390	CompoundStatement		139:46:4239:4239	3897502	1					
ANR	3898391	ExpressionStatement	"smart_str_appends ( str , ""protected "" )"	1107:4:28951:28987	3897502	0	True				
ANR	3898392	CallExpression	"smart_str_appends ( str , ""protected "" )"		3897502	0					
ANR	3898393	Callee	smart_str_appends		3897502	0					
ANR	3898394	Identifier	smart_str_appends		3897502	0					
ANR	3898395	ArgumentList	str		3897502	1					
ANR	3898396	Argument	str		3897502	0					
ANR	3898397	Identifier	str		3897502	0					
ANR	3898398	Argument	"""protected """		3897502	1					
ANR	3898399	PrimaryExpression	"""protected """		3897502	0					
ANR	3898400	ElseStatement	else		3897502	0					
ANR	3898401	IfStatement	if ( ast -> attr & ZEND_ACC_PRIVATE )		3897502	0					
ANR	3898402	Condition	ast -> attr & ZEND_ACC_PRIVATE	1108:14:29003:29030	3897502	0	True				
ANR	3898403	BitAndExpression	ast -> attr & ZEND_ACC_PRIVATE		3897502	0		&			
ANR	3898404	PtrMemberAccess	ast -> attr		3897502	0					
ANR	3898405	Identifier	ast		3897502	0					
ANR	3898406	Identifier	attr		3897502	1					
ANR	3898407	Identifier	ZEND_ACC_PRIVATE		3897502	1					
ANR	3898408	CompoundStatement		141:44:4327:4327	3897502	1					
ANR	3898409	ExpressionStatement	"smart_str_appends ( str , ""private "" )"	1109:4:29039:29073	3897502	0	True				
ANR	3898410	CallExpression	"smart_str_appends ( str , ""private "" )"		3897502	0					
ANR	3898411	Callee	smart_str_appends		3897502	0					
ANR	3898412	Identifier	smart_str_appends		3897502	0					
ANR	3898413	ArgumentList	str		3897502	1					
ANR	3898414	Argument	str		3897502	0					
ANR	3898415	Identifier	str		3897502	0					
ANR	3898416	Argument	"""private """		3897502	1					
ANR	3898417	PrimaryExpression	"""private """		3897502	0					
ANR	3898418	IfStatement	if ( ast -> attr & ZEND_ACC_STATIC )		3897502	74					
ANR	3898419	Condition	ast -> attr & ZEND_ACC_STATIC	1111:7:29087:29113	3897502	0	True				
ANR	3898420	BitAndExpression	ast -> attr & ZEND_ACC_STATIC		3897502	0		&			
ANR	3898421	PtrMemberAccess	ast -> attr		3897502	0					
ANR	3898422	Identifier	ast		3897502	0					
ANR	3898423	Identifier	attr		3897502	1					
ANR	3898424	Identifier	ZEND_ACC_STATIC		3897502	1					
ANR	3898425	CompoundStatement		144:36:4410:4410	3897502	1					
ANR	3898426	ExpressionStatement	"smart_str_appends ( str , ""static "" )"	1112:4:29122:29155	3897502	0	True				
ANR	3898427	CallExpression	"smart_str_appends ( str , ""static "" )"		3897502	0					
ANR	3898428	Callee	smart_str_appends		3897502	0					
ANR	3898429	Identifier	smart_str_appends		3897502	0					
ANR	3898430	ArgumentList	str		3897502	1					
ANR	3898431	Argument	str		3897502	0					
ANR	3898432	Identifier	str		3897502	0					
ANR	3898433	Argument	"""static """		3897502	1					
ANR	3898434	PrimaryExpression	"""static """		3897502	0					
ANR	3898435	GotoStatement	goto simple_list ;	1114:3:29165:29181	3897502	75	True				
ANR	3898436	Identifier	simple_list		3897502	0					
ANR	3898437	Label	case ZEND_AST_CONST_DECL :	1115:2:29185:29209	3897502	76	True				
ANR	3898438	Identifier	ZEND_AST_CONST_DECL		3897502	0					
ANR	3898439	Label	case ZEND_AST_CLASS_CONST_DECL :	1116:2:29213:29243	3897502	77	True				
ANR	3898440	Identifier	ZEND_AST_CLASS_CONST_DECL		3897502	0					
ANR	3898441	ExpressionStatement	"smart_str_appends ( str , ""const "" )"	1117:3:29248:29280	3897502	78	True				
ANR	3898442	CallExpression	"smart_str_appends ( str , ""const "" )"		3897502	0					
ANR	3898443	Callee	smart_str_appends		3897502	0					
ANR	3898444	Identifier	smart_str_appends		3897502	0					
ANR	3898445	ArgumentList	str		3897502	1					
ANR	3898446	Argument	str		3897502	0					
ANR	3898447	Identifier	str		3897502	0					
ANR	3898448	Argument	"""const """		3897502	1					
ANR	3898449	PrimaryExpression	"""const """		3897502	0					
ANR	3898450	GotoStatement	goto simple_list ;	1118:3:29285:29301	3897502	79	True				
ANR	3898451	Identifier	simple_list		3897502	0					
ANR	3898452	Label	case ZEND_AST_NAME_LIST :	1119:2:29305:29328	3897502	80	True				
ANR	3898453	Identifier	ZEND_AST_NAME_LIST		3897502	0					
ANR	3898454	ExpressionStatement	"zend_ast_export_name_list ( str , ( zend_ast_list * ) ast , indent )"	1120:3:29333:29392	3897502	81	True				
ANR	3898455	CallExpression	"zend_ast_export_name_list ( str , ( zend_ast_list * ) ast , indent )"		3897502	0					
ANR	3898456	Callee	zend_ast_export_name_list		3897502	0					
ANR	3898457	Identifier	zend_ast_export_name_list		3897502	0					
ANR	3898458	ArgumentList	str		3897502	1					
ANR	3898459	Argument	str		3897502	0					
ANR	3898460	Identifier	str		3897502	0					
ANR	3898461	Argument	( zend_ast_list * ) ast		3897502	1					
ANR	3898462	CastExpression	( zend_ast_list * ) ast		3897502	0					
ANR	3898463	CastTarget	zend_ast_list *		3897502	0					
ANR	3898464	Identifier	ast		3897502	1					
ANR	3898465	Argument	indent		3897502	2					
ANR	3898466	Identifier	indent		3897502	0					
ANR	3898467	BreakStatement	break ;	1121:3:29397:29402	3897502	82	True				
ANR	3898468	Label	case ZEND_AST_USE :	1122:2:29406:29423	3897502	83	True				
ANR	3898469	Identifier	ZEND_AST_USE		3897502	0					
ANR	3898470	ExpressionStatement	"smart_str_appends ( str , ""use "" )"	1123:3:29428:29458	3897502	84	True				
ANR	3898471	CallExpression	"smart_str_appends ( str , ""use "" )"		3897502	0					
ANR	3898472	Callee	smart_str_appends		3897502	0					
ANR	3898473	Identifier	smart_str_appends		3897502	0					
ANR	3898474	ArgumentList	str		3897502	1					
ANR	3898475	Argument	str		3897502	0					
ANR	3898476	Identifier	str		3897502	0					
ANR	3898477	Argument	"""use """		3897502	1					
ANR	3898478	PrimaryExpression	"""use """		3897502	0					
ANR	3898479	IfStatement	if ( ast -> attr == T_FUNCTION )		3897502	85					
ANR	3898480	Condition	ast -> attr == T_FUNCTION	1124:7:29467:29489	3897502	0	True				
ANR	3898481	EqualityExpression	ast -> attr == T_FUNCTION		3897502	0		==			
ANR	3898482	PtrMemberAccess	ast -> attr		3897502	0					
ANR	3898483	Identifier	ast		3897502	0					
ANR	3898484	Identifier	attr		3897502	1					
ANR	3898485	Identifier	T_FUNCTION		3897502	1					
ANR	3898486	CompoundStatement		157:32:4786:4786	3897502	1					
ANR	3898487	ExpressionStatement	"smart_str_appends ( str , ""function "" )"	1125:4:29498:29533	3897502	0	True				
ANR	3898488	CallExpression	"smart_str_appends ( str , ""function "" )"		3897502	0					
ANR	3898489	Callee	smart_str_appends		3897502	0					
ANR	3898490	Identifier	smart_str_appends		3897502	0					
ANR	3898491	ArgumentList	str		3897502	1					
ANR	3898492	Argument	str		3897502	0					
ANR	3898493	Identifier	str		3897502	0					
ANR	3898494	Argument	"""function """		3897502	1					
ANR	3898495	PrimaryExpression	"""function """		3897502	0					
ANR	3898496	ElseStatement	else		3897502	0					
ANR	3898497	IfStatement	if ( ast -> attr == T_CONST )		3897502	0					
ANR	3898498	Condition	ast -> attr == T_CONST	1126:14:29549:29568	3897502	0	True				
ANR	3898499	EqualityExpression	ast -> attr == T_CONST		3897502	0		==			
ANR	3898500	PtrMemberAccess	ast -> attr		3897502	0					
ANR	3898501	Identifier	ast		3897502	0					
ANR	3898502	Identifier	attr		3897502	1					
ANR	3898503	Identifier	T_CONST		3897502	1					
ANR	3898504	CompoundStatement		159:36:4865:4865	3897502	1					
ANR	3898505	ExpressionStatement	"smart_str_appends ( str , ""const "" )"	1127:4:29577:29609	3897502	0	True				
ANR	3898506	CallExpression	"smart_str_appends ( str , ""const "" )"		3897502	0					
ANR	3898507	Callee	smart_str_appends		3897502	0					
ANR	3898508	Identifier	smart_str_appends		3897502	0					
ANR	3898509	ArgumentList	str		3897502	1					
ANR	3898510	Argument	str		3897502	0					
ANR	3898511	Identifier	str		3897502	0					
ANR	3898512	Argument	"""const """		3897502	1					
ANR	3898513	PrimaryExpression	"""const """		3897502	0					
ANR	3898514	GotoStatement	goto simple_list ;	1129:3:29619:29635	3897502	86	True				
ANR	3898515	Identifier	simple_list		3897502	0					
ANR	3898516	Label	case ZEND_AST_MAGIC_CONST :	1132:2:29662:29687	3897502	87	True				
ANR	3898517	Identifier	ZEND_AST_MAGIC_CONST		3897502	0					
ANR	3898518	SwitchStatement	switch ( ast -> attr )		3897502	88					
ANR	3898519	Condition	ast -> attr	1133:11:29700:29708	3897502	0	True				
ANR	3898520	PtrMemberAccess	ast -> attr		3897502	0					
ANR	3898521	Identifier	ast		3897502	0					
ANR	3898522	Identifier	attr		3897502	1					
ANR	3898523	CompoundStatement		166:22:5005:5005	3897502	1					
ANR	3898524	Label	case T_LINE :	1134:4:29717:29728	3897502	0	True				
ANR	3898525	Identifier	T_LINE		3897502	0					
ANR	3898526	ExpressionStatement	"APPEND_STR ( ""__LINE__"" )"	1134:21:29734:29756	3897502	1	True				
ANR	3898527	CallExpression	"APPEND_STR ( ""__LINE__"" )"		3897502	0					
ANR	3898528	Callee	APPEND_STR		3897502	0					
ANR	3898529	Identifier	APPEND_STR		3897502	0					
ANR	3898530	ArgumentList	"""__LINE__"""		3897502	1					
ANR	3898531	Argument	"""__LINE__"""		3897502	0					
ANR	3898532	PrimaryExpression	"""__LINE__"""		3897502	0					
ANR	3898533	Label	case T_FILE :	1135:4:29762:29773	3897502	2	True				
ANR	3898534	Identifier	T_FILE		3897502	0					
ANR	3898535	ExpressionStatement	"APPEND_STR ( ""__FILE__"" )"	1135:21:29779:29801	3897502	3	True				
ANR	3898536	CallExpression	"APPEND_STR ( ""__FILE__"" )"		3897502	0					
ANR	3898537	Callee	APPEND_STR		3897502	0					
ANR	3898538	Identifier	APPEND_STR		3897502	0					
ANR	3898539	ArgumentList	"""__FILE__"""		3897502	1					
ANR	3898540	Argument	"""__FILE__"""		3897502	0					
ANR	3898541	PrimaryExpression	"""__FILE__"""		3897502	0					
ANR	3898542	Label	case T_DIR :	1136:4:29807:29817	3897502	4	True				
ANR	3898543	Identifier	T_DIR		3897502	0					
ANR	3898544	ExpressionStatement	"APPEND_STR ( ""__DIR__"" )"	1136:21:29824:29845	3897502	5	True				
ANR	3898545	CallExpression	"APPEND_STR ( ""__DIR__"" )"		3897502	0					
ANR	3898546	Callee	APPEND_STR		3897502	0					
ANR	3898547	Identifier	APPEND_STR		3897502	0					
ANR	3898548	ArgumentList	"""__DIR__"""		3897502	1					
ANR	3898549	Argument	"""__DIR__"""		3897502	0					
ANR	3898550	PrimaryExpression	"""__DIR__"""		3897502	0					
ANR	3898551	Label	case T_TRAIT_C :	1137:4:29851:29865	3897502	6	True				
ANR	3898552	Identifier	T_TRAIT_C		3897502	0					
ANR	3898553	ExpressionStatement	"APPEND_STR ( ""__TRAIT__"" )"	1137:21:29868:29891	3897502	7	True				
ANR	3898554	CallExpression	"APPEND_STR ( ""__TRAIT__"" )"		3897502	0					
ANR	3898555	Callee	APPEND_STR		3897502	0					
ANR	3898556	Identifier	APPEND_STR		3897502	0					
ANR	3898557	ArgumentList	"""__TRAIT__"""		3897502	1					
ANR	3898558	Argument	"""__TRAIT__"""		3897502	0					
ANR	3898559	PrimaryExpression	"""__TRAIT__"""		3897502	0					
ANR	3898560	Label	case T_METHOD_C :	1138:4:29897:29912	3897502	8	True				
ANR	3898561	Identifier	T_METHOD_C		3897502	0					
ANR	3898562	ExpressionStatement	"APPEND_STR ( ""__METHOD__"" )"	1138:21:29914:29938	3897502	9	True				
ANR	3898563	CallExpression	"APPEND_STR ( ""__METHOD__"" )"		3897502	0					
ANR	3898564	Callee	APPEND_STR		3897502	0					
ANR	3898565	Identifier	APPEND_STR		3897502	0					
ANR	3898566	ArgumentList	"""__METHOD__"""		3897502	1					
ANR	3898567	Argument	"""__METHOD__"""		3897502	0					
ANR	3898568	PrimaryExpression	"""__METHOD__"""		3897502	0					
ANR	3898569	Label	case T_FUNC_C :	1139:4:29944:29957	3897502	10	True				
ANR	3898570	Identifier	T_FUNC_C		3897502	0					
ANR	3898571	ExpressionStatement	"APPEND_STR ( ""__FUNCTION__"" )"	1139:21:29961:29987	3897502	11	True				
ANR	3898572	CallExpression	"APPEND_STR ( ""__FUNCTION__"" )"		3897502	0					
ANR	3898573	Callee	APPEND_STR		3897502	0					
ANR	3898574	Identifier	APPEND_STR		3897502	0					
ANR	3898575	ArgumentList	"""__FUNCTION__"""		3897502	1					
ANR	3898576	Argument	"""__FUNCTION__"""		3897502	0					
ANR	3898577	PrimaryExpression	"""__FUNCTION__"""		3897502	0					
ANR	3898578	Label	case T_NS_C :	1140:4:29993:30004	3897502	12	True				
ANR	3898579	Identifier	T_NS_C		3897502	0					
ANR	3898580	ExpressionStatement	"APPEND_STR ( ""__NAMESPACE__"" )"	1140:21:30010:30037	3897502	13	True				
ANR	3898581	CallExpression	"APPEND_STR ( ""__NAMESPACE__"" )"		3897502	0					
ANR	3898582	Callee	APPEND_STR		3897502	0					
ANR	3898583	Identifier	APPEND_STR		3897502	0					
ANR	3898584	ArgumentList	"""__NAMESPACE__"""		3897502	1					
ANR	3898585	Argument	"""__NAMESPACE__"""		3897502	0					
ANR	3898586	PrimaryExpression	"""__NAMESPACE__"""		3897502	0					
ANR	3898587	Label	case T_CLASS_C :	1141:4:30043:30057	3897502	14	True				
ANR	3898588	Identifier	T_CLASS_C		3897502	0					
ANR	3898589	ExpressionStatement	"APPEND_STR ( ""__CLASS__"" )"	1141:21:30060:30083	3897502	15	True				
ANR	3898590	CallExpression	"APPEND_STR ( ""__CLASS__"" )"		3897502	0					
ANR	3898591	Callee	APPEND_STR		3897502	0					
ANR	3898592	Identifier	APPEND_STR		3897502	0					
ANR	3898593	ArgumentList	"""__CLASS__"""		3897502	1					
ANR	3898594	Argument	"""__CLASS__"""		3897502	0					
ANR	3898595	PrimaryExpression	"""__CLASS__"""		3897502	0					
ANR	3898596	ExpressionStatement	EMPTY_SWITCH_DEFAULT_CASE ( )	1142:4:30089:30116	3897502	16	True				
ANR	3898597	CallExpression	EMPTY_SWITCH_DEFAULT_CASE ( )		3897502	0					
ANR	3898598	Callee	EMPTY_SWITCH_DEFAULT_CASE		3897502	0					
ANR	3898599	Identifier	EMPTY_SWITCH_DEFAULT_CASE		3897502	0					
ANR	3898600	ArgumentList			3897502	1					
ANR	3898601	BreakStatement	break ;	1144:3:30126:30131	3897502	89	True				
ANR	3898602	Label	case ZEND_AST_TYPE :	1145:2:30135:30153	3897502	90	True				
ANR	3898603	Identifier	ZEND_AST_TYPE		3897502	0					
ANR	3898604	SwitchStatement	switch ( ast -> attr )		3897502	91					
ANR	3898605	Condition	ast -> attr	1146:11:30166:30174	3897502	0	True				
ANR	3898606	PtrMemberAccess	ast -> attr		3897502	0					
ANR	3898607	Identifier	ast		3897502	0					
ANR	3898608	Identifier	attr		3897502	1					
ANR	3898609	CompoundStatement		179:22:5471:5471	3897502	1					
ANR	3898610	Label	case IS_ARRAY :	1147:4:30183:30196	3897502	0	True				
ANR	3898611	Identifier	IS_ARRAY		3897502	0					
ANR	3898612	ExpressionStatement	"APPEND_STR ( ""array"" )"	1147:22:30201:30220	3897502	1	True				
ANR	3898613	CallExpression	"APPEND_STR ( ""array"" )"		3897502	0					
ANR	3898614	Callee	APPEND_STR		3897502	0					
ANR	3898615	Identifier	APPEND_STR		3897502	0					
ANR	3898616	ArgumentList	"""array"""		3897502	1					
ANR	3898617	Argument	"""array"""		3897502	0					
ANR	3898618	PrimaryExpression	"""array"""		3897502	0					
ANR	3898619	Label	case IS_CALLABLE :	1148:4:30226:30242	3897502	2	True				
ANR	3898620	Identifier	IS_CALLABLE		3897502	0					
ANR	3898621	ExpressionStatement	"APPEND_STR ( ""callable"" )"	1148:22:30244:30266	3897502	3	True				
ANR	3898622	CallExpression	"APPEND_STR ( ""callable"" )"		3897502	0					
ANR	3898623	Callee	APPEND_STR		3897502	0					
ANR	3898624	Identifier	APPEND_STR		3897502	0					
ANR	3898625	ArgumentList	"""callable"""		3897502	1					
ANR	3898626	Argument	"""callable"""		3897502	0					
ANR	3898627	PrimaryExpression	"""callable"""		3897502	0					
ANR	3898628	ExpressionStatement	EMPTY_SWITCH_DEFAULT_CASE ( )	1149:4:30272:30299	3897502	4	True				
ANR	3898629	CallExpression	EMPTY_SWITCH_DEFAULT_CASE ( )		3897502	0					
ANR	3898630	Callee	EMPTY_SWITCH_DEFAULT_CASE		3897502	0					
ANR	3898631	Identifier	EMPTY_SWITCH_DEFAULT_CASE		3897502	0					
ANR	3898632	ArgumentList			3897502	1					
ANR	3898633	BreakStatement	break ;	1151:3:30309:30314	3897502	92	True				
ANR	3898634	Label	case ZEND_AST_VAR :	1154:2:30340:30357	3897502	93	True				
ANR	3898635	Identifier	ZEND_AST_VAR		3897502	0					
ANR	3898636	ExpressionStatement	"smart_str_appendc ( str , '$' )"	1155:3:30362:30389	3897502	94	True				
ANR	3898637	CallExpression	"smart_str_appendc ( str , '$' )"		3897502	0					
ANR	3898638	Callee	smart_str_appendc		3897502	0					
ANR	3898639	Identifier	smart_str_appendc		3897502	0					
ANR	3898640	ArgumentList	str		3897502	1					
ANR	3898641	Argument	str		3897502	0					
ANR	3898642	Identifier	str		3897502	0					
ANR	3898643	Argument	'$'		3897502	1					
ANR	3898644	PrimaryExpression	'$'		3897502	0					
ANR	3898645	ExpressionStatement	"zend_ast_export_var ( str , ast -> child [ 0 ] , 0 , indent )"	1156:3:30394:30444	3897502	95	True				
ANR	3898646	CallExpression	"zend_ast_export_var ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3898647	Callee	zend_ast_export_var		3897502	0					
ANR	3898648	Identifier	zend_ast_export_var		3897502	0					
ANR	3898649	ArgumentList	str		3897502	1					
ANR	3898650	Argument	str		3897502	0					
ANR	3898651	Identifier	str		3897502	0					
ANR	3898652	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3898653	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3898654	PtrMemberAccess	ast -> child		3897502	0					
ANR	3898655	Identifier	ast		3897502	0					
ANR	3898656	Identifier	child		3897502	1					
ANR	3898657	PrimaryExpression	0		3897502	1					
ANR	3898658	Argument	0		3897502	2					
ANR	3898659	PrimaryExpression	0		3897502	0					
ANR	3898660	Argument	indent		3897502	3					
ANR	3898661	Identifier	indent		3897502	0					
ANR	3898662	BreakStatement	break ;	1157:3:30449:30454	3897502	96	True				
ANR	3898663	Label	case ZEND_AST_CONST :	1158:2:30458:30477	3897502	97	True				
ANR	3898664	Identifier	ZEND_AST_CONST		3897502	0					
ANR	3898665	ExpressionStatement	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"	1159:3:30482:30536	3897502	98	True				
ANR	3898666	CallExpression	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3898667	Callee	zend_ast_export_ns_name		3897502	0					
ANR	3898668	Identifier	zend_ast_export_ns_name		3897502	0					
ANR	3898669	ArgumentList	str		3897502	1					
ANR	3898670	Argument	str		3897502	0					
ANR	3898671	Identifier	str		3897502	0					
ANR	3898672	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3898673	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3898674	PtrMemberAccess	ast -> child		3897502	0					
ANR	3898675	Identifier	ast		3897502	0					
ANR	3898676	Identifier	child		3897502	1					
ANR	3898677	PrimaryExpression	0		3897502	1					
ANR	3898678	Argument	0		3897502	2					
ANR	3898679	PrimaryExpression	0		3897502	0					
ANR	3898680	Argument	indent		3897502	3					
ANR	3898681	Identifier	indent		3897502	0					
ANR	3898682	BreakStatement	break ;	1160:3:30541:30546	3897502	99	True				
ANR	3898683	Label	case ZEND_AST_UNPACK :	1161:2:30550:30570	3897502	100	True				
ANR	3898684	Identifier	ZEND_AST_UNPACK		3897502	0					
ANR	3898685	ExpressionStatement	"smart_str_appends ( str , ""..."" )"	1162:3:30575:30604	3897502	101	True				
ANR	3898686	CallExpression	"smart_str_appends ( str , ""..."" )"		3897502	0					
ANR	3898687	Callee	smart_str_appends		3897502	0					
ANR	3898688	Identifier	smart_str_appends		3897502	0					
ANR	3898689	ArgumentList	str		3897502	1					
ANR	3898690	Argument	str		3897502	0					
ANR	3898691	Identifier	str		3897502	0					
ANR	3898692	Argument	"""..."""		3897502	1					
ANR	3898693	PrimaryExpression	"""..."""		3897502	0					
ANR	3898694	ExpressionStatement	ast = ast -> child [ 0 ]	1163:3:30609:30628	3897502	102	True				
ANR	3898695	AssignmentExpression	ast = ast -> child [ 0 ]		3897502	0		=			
ANR	3898696	Identifier	ast		3897502	0					
ANR	3898697	ArrayIndexing	ast -> child [ 0 ]		3897502	1					
ANR	3898698	PtrMemberAccess	ast -> child		3897502	0					
ANR	3898699	Identifier	ast		3897502	0					
ANR	3898700	Identifier	child		3897502	1					
ANR	3898701	PrimaryExpression	0		3897502	1					
ANR	3898702	GotoStatement	goto tail_call ;	1164:3:30633:30647	3897502	103	True				
ANR	3898703	Identifier	tail_call		3897502	0					
ANR	3898704	Label	case ZEND_AST_UNARY_PLUS :	1165:2:30651:30675	3897502	104	True				
ANR	3898705	Identifier	ZEND_AST_UNARY_PLUS		3897502	0					
ANR	3898706	ExpressionStatement	"PREFIX_OP ( ""+"" , 240 , 241 )"	1165:29:30678:30702	3897502	105	True				
ANR	3898707	CallExpression	"PREFIX_OP ( ""+"" , 240 , 241 )"		3897502	0					
ANR	3898708	Callee	PREFIX_OP		3897502	0					
ANR	3898709	Identifier	PREFIX_OP		3897502	0					
ANR	3898710	ArgumentList	"""+"""		3897502	1					
ANR	3898711	Argument	"""+"""		3897502	0					
ANR	3898712	PrimaryExpression	"""+"""		3897502	0					
ANR	3898713	Argument	240		3897502	1					
ANR	3898714	PrimaryExpression	240		3897502	0					
ANR	3898715	Argument	241		3897502	2					
ANR	3898716	PrimaryExpression	241		3897502	0					
ANR	3898717	Label	case ZEND_AST_UNARY_MINUS :	1166:2:30706:30731	3897502	106	True				
ANR	3898718	Identifier	ZEND_AST_UNARY_MINUS		3897502	0					
ANR	3898719	ExpressionStatement	"PREFIX_OP ( ""-"" , 240 , 241 )"	1166:29:30733:30757	3897502	107	True				
ANR	3898720	CallExpression	"PREFIX_OP ( ""-"" , 240 , 241 )"		3897502	0					
ANR	3898721	Callee	PREFIX_OP		3897502	0					
ANR	3898722	Identifier	PREFIX_OP		3897502	0					
ANR	3898723	ArgumentList	"""-"""		3897502	1					
ANR	3898724	Argument	"""-"""		3897502	0					
ANR	3898725	PrimaryExpression	"""-"""		3897502	0					
ANR	3898726	Argument	240		3897502	1					
ANR	3898727	PrimaryExpression	240		3897502	0					
ANR	3898728	Argument	241		3897502	2					
ANR	3898729	PrimaryExpression	241		3897502	0					
ANR	3898730	Label	case ZEND_AST_CAST :	1167:2:30761:30779	3897502	108	True				
ANR	3898731	Identifier	ZEND_AST_CAST		3897502	0					
ANR	3898732	SwitchStatement	switch ( ast -> attr )		3897502	109					
ANR	3898733	Condition	ast -> attr	1168:11:30792:30800	3897502	0	True				
ANR	3898734	PtrMemberAccess	ast -> attr		3897502	0					
ANR	3898735	Identifier	ast		3897502	0					
ANR	3898736	Identifier	attr		3897502	1					
ANR	3898737	CompoundStatement		201:22:6097:6097	3897502	1					
ANR	3898738	Label	case IS_NULL :	1169:4:30809:30821	3897502	0	True				
ANR	3898739	Identifier	IS_NULL		3897502	0					
ANR	3898740	ExpressionStatement	"PREFIX_OP ( ""(unset)"" , 240 , 241 )"	1169:23:30828:30859	3897502	1	True				
ANR	3898741	CallExpression	"PREFIX_OP ( ""(unset)"" , 240 , 241 )"		3897502	0					
ANR	3898742	Callee	PREFIX_OP		3897502	0					
ANR	3898743	Identifier	PREFIX_OP		3897502	0					
ANR	3898744	ArgumentList	"""(unset)"""		3897502	1					
ANR	3898745	Argument	"""(unset)"""		3897502	0					
ANR	3898746	PrimaryExpression	"""(unset)"""		3897502	0					
ANR	3898747	Argument	240		3897502	1					
ANR	3898748	PrimaryExpression	240		3897502	0					
ANR	3898749	Argument	241		3897502	2					
ANR	3898750	PrimaryExpression	241		3897502	0					
ANR	3898751	Label	case _IS_BOOL :	1170:4:30865:30878	3897502	2	True				
ANR	3898752	Identifier	_IS_BOOL		3897502	0					
ANR	3898753	ExpressionStatement	"PREFIX_OP ( ""(bool)"" , 240 , 241 )"	1170:23:30884:30915	3897502	3	True				
ANR	3898754	CallExpression	"PREFIX_OP ( ""(bool)"" , 240 , 241 )"		3897502	0					
ANR	3898755	Callee	PREFIX_OP		3897502	0					
ANR	3898756	Identifier	PREFIX_OP		3897502	0					
ANR	3898757	ArgumentList	"""(bool)"""		3897502	1					
ANR	3898758	Argument	"""(bool)"""		3897502	0					
ANR	3898759	PrimaryExpression	"""(bool)"""		3897502	0					
ANR	3898760	Argument	240		3897502	1					
ANR	3898761	PrimaryExpression	240		3897502	0					
ANR	3898762	Argument	241		3897502	2					
ANR	3898763	PrimaryExpression	241		3897502	0					
ANR	3898764	Label	case IS_LONG :	1171:4:30921:30933	3897502	4	True				
ANR	3898765	Identifier	IS_LONG		3897502	0					
ANR	3898766	ExpressionStatement	"PREFIX_OP ( ""(int)"" , 240 , 241 )"	1171:23:30940:30971	3897502	5	True				
ANR	3898767	CallExpression	"PREFIX_OP ( ""(int)"" , 240 , 241 )"		3897502	0					
ANR	3898768	Callee	PREFIX_OP		3897502	0					
ANR	3898769	Identifier	PREFIX_OP		3897502	0					
ANR	3898770	ArgumentList	"""(int)"""		3897502	1					
ANR	3898771	Argument	"""(int)"""		3897502	0					
ANR	3898772	PrimaryExpression	"""(int)"""		3897502	0					
ANR	3898773	Argument	240		3897502	1					
ANR	3898774	PrimaryExpression	240		3897502	0					
ANR	3898775	Argument	241		3897502	2					
ANR	3898776	PrimaryExpression	241		3897502	0					
ANR	3898777	Label	case IS_DOUBLE :	1172:4:30977:30991	3897502	6	True				
ANR	3898778	Identifier	IS_DOUBLE		3897502	0					
ANR	3898779	ExpressionStatement	"PREFIX_OP ( ""(double)"" , 240 , 241 )"	1172:23:30996:31027	3897502	7	True				
ANR	3898780	CallExpression	"PREFIX_OP ( ""(double)"" , 240 , 241 )"		3897502	0					
ANR	3898781	Callee	PREFIX_OP		3897502	0					
ANR	3898782	Identifier	PREFIX_OP		3897502	0					
ANR	3898783	ArgumentList	"""(double)"""		3897502	1					
ANR	3898784	Argument	"""(double)"""		3897502	0					
ANR	3898785	PrimaryExpression	"""(double)"""		3897502	0					
ANR	3898786	Argument	240		3897502	1					
ANR	3898787	PrimaryExpression	240		3897502	0					
ANR	3898788	Argument	241		3897502	2					
ANR	3898789	PrimaryExpression	241		3897502	0					
ANR	3898790	Label	case IS_STRING :	1173:4:31033:31047	3897502	8	True				
ANR	3898791	Identifier	IS_STRING		3897502	0					
ANR	3898792	ExpressionStatement	"PREFIX_OP ( ""(string)"" , 240 , 241 )"	1173:23:31052:31083	3897502	9	True				
ANR	3898793	CallExpression	"PREFIX_OP ( ""(string)"" , 240 , 241 )"		3897502	0					
ANR	3898794	Callee	PREFIX_OP		3897502	0					
ANR	3898795	Identifier	PREFIX_OP		3897502	0					
ANR	3898796	ArgumentList	"""(string)"""		3897502	1					
ANR	3898797	Argument	"""(string)"""		3897502	0					
ANR	3898798	PrimaryExpression	"""(string)"""		3897502	0					
ANR	3898799	Argument	240		3897502	1					
ANR	3898800	PrimaryExpression	240		3897502	0					
ANR	3898801	Argument	241		3897502	2					
ANR	3898802	PrimaryExpression	241		3897502	0					
ANR	3898803	Label	case IS_ARRAY :	1174:4:31089:31102	3897502	10	True				
ANR	3898804	Identifier	IS_ARRAY		3897502	0					
ANR	3898805	ExpressionStatement	"PREFIX_OP ( ""(array)"" , 240 , 241 )"	1174:23:31108:31139	3897502	11	True				
ANR	3898806	CallExpression	"PREFIX_OP ( ""(array)"" , 240 , 241 )"		3897502	0					
ANR	3898807	Callee	PREFIX_OP		3897502	0					
ANR	3898808	Identifier	PREFIX_OP		3897502	0					
ANR	3898809	ArgumentList	"""(array)"""		3897502	1					
ANR	3898810	Argument	"""(array)"""		3897502	0					
ANR	3898811	PrimaryExpression	"""(array)"""		3897502	0					
ANR	3898812	Argument	240		3897502	1					
ANR	3898813	PrimaryExpression	240		3897502	0					
ANR	3898814	Argument	241		3897502	2					
ANR	3898815	PrimaryExpression	241		3897502	0					
ANR	3898816	Label	case IS_OBJECT :	1175:4:31145:31159	3897502	12	True				
ANR	3898817	Identifier	IS_OBJECT		3897502	0					
ANR	3898818	ExpressionStatement	"PREFIX_OP ( ""(object)"" , 240 , 241 )"	1175:23:31164:31195	3897502	13	True				
ANR	3898819	CallExpression	"PREFIX_OP ( ""(object)"" , 240 , 241 )"		3897502	0					
ANR	3898820	Callee	PREFIX_OP		3897502	0					
ANR	3898821	Identifier	PREFIX_OP		3897502	0					
ANR	3898822	ArgumentList	"""(object)"""		3897502	1					
ANR	3898823	Argument	"""(object)"""		3897502	0					
ANR	3898824	PrimaryExpression	"""(object)"""		3897502	0					
ANR	3898825	Argument	240		3897502	1					
ANR	3898826	PrimaryExpression	240		3897502	0					
ANR	3898827	Argument	241		3897502	2					
ANR	3898828	PrimaryExpression	241		3897502	0					
ANR	3898829	ExpressionStatement	EMPTY_SWITCH_DEFAULT_CASE ( )	1176:4:31201:31228	3897502	14	True				
ANR	3898830	CallExpression	EMPTY_SWITCH_DEFAULT_CASE ( )		3897502	0					
ANR	3898831	Callee	EMPTY_SWITCH_DEFAULT_CASE		3897502	0					
ANR	3898832	Identifier	EMPTY_SWITCH_DEFAULT_CASE		3897502	0					
ANR	3898833	ArgumentList			3897502	1					
ANR	3898834	BreakStatement	break ;	1178:3:31238:31243	3897502	110	True				
ANR	3898835	Label	case ZEND_AST_EMPTY :	1179:2:31247:31266	3897502	111	True				
ANR	3898836	Identifier	ZEND_AST_EMPTY		3897502	0					
ANR	3898837	ExpressionStatement	"FUNC_OP ( ""empty"" )"	1180:3:31271:31287	3897502	112	True				
ANR	3898838	CallExpression	"FUNC_OP ( ""empty"" )"		3897502	0					
ANR	3898839	Callee	FUNC_OP		3897502	0					
ANR	3898840	Identifier	FUNC_OP		3897502	0					
ANR	3898841	ArgumentList	"""empty"""		3897502	1					
ANR	3898842	Argument	"""empty"""		3897502	0					
ANR	3898843	PrimaryExpression	"""empty"""		3897502	0					
ANR	3898844	Label	case ZEND_AST_ISSET :	1181:2:31291:31310	3897502	113	True				
ANR	3898845	Identifier	ZEND_AST_ISSET		3897502	0					
ANR	3898846	ExpressionStatement	"FUNC_OP ( ""isset"" )"	1182:3:31315:31331	3897502	114	True				
ANR	3898847	CallExpression	"FUNC_OP ( ""isset"" )"		3897502	0					
ANR	3898848	Callee	FUNC_OP		3897502	0					
ANR	3898849	Identifier	FUNC_OP		3897502	0					
ANR	3898850	ArgumentList	"""isset"""		3897502	1					
ANR	3898851	Argument	"""isset"""		3897502	0					
ANR	3898852	PrimaryExpression	"""isset"""		3897502	0					
ANR	3898853	Label	case ZEND_AST_SILENCE :	1183:2:31335:31356	3897502	115	True				
ANR	3898854	Identifier	ZEND_AST_SILENCE		3897502	0					
ANR	3898855	ExpressionStatement	"PREFIX_OP ( ""@"" , 240 , 241 )"	1184:3:31361:31385	3897502	116	True				
ANR	3898856	CallExpression	"PREFIX_OP ( ""@"" , 240 , 241 )"		3897502	0					
ANR	3898857	Callee	PREFIX_OP		3897502	0					
ANR	3898858	Identifier	PREFIX_OP		3897502	0					
ANR	3898859	ArgumentList	"""@"""		3897502	1					
ANR	3898860	Argument	"""@"""		3897502	0					
ANR	3898861	PrimaryExpression	"""@"""		3897502	0					
ANR	3898862	Argument	240		3897502	1					
ANR	3898863	PrimaryExpression	240		3897502	0					
ANR	3898864	Argument	241		3897502	2					
ANR	3898865	PrimaryExpression	241		3897502	0					
ANR	3898866	Label	case ZEND_AST_SHELL_EXEC :	1185:2:31389:31413	3897502	117	True				
ANR	3898867	Identifier	ZEND_AST_SHELL_EXEC		3897502	0					
ANR	3898868	ExpressionStatement	"smart_str_appendc ( str , '`' )"	1186:3:31418:31445	3897502	118	True				
ANR	3898869	CallExpression	"smart_str_appendc ( str , '`' )"		3897502	0					
ANR	3898870	Callee	smart_str_appendc		3897502	0					
ANR	3898871	Identifier	smart_str_appendc		3897502	0					
ANR	3898872	ArgumentList	str		3897502	1					
ANR	3898873	Argument	str		3897502	0					
ANR	3898874	Identifier	str		3897502	0					
ANR	3898875	Argument	'`'		3897502	1					
ANR	3898876	PrimaryExpression	'`'		3897502	0					
ANR	3898877	IfStatement	if ( ast -> child [ 0 ] -> kind == ZEND_AST_ENCAPS_LIST )		3897502	119					
ANR	3898878	Condition	ast -> child [ 0 ] -> kind == ZEND_AST_ENCAPS_LIST	1187:7:31454:31496	3897502	0	True				
ANR	3898879	EqualityExpression	ast -> child [ 0 ] -> kind == ZEND_AST_ENCAPS_LIST		3897502	0		==			
ANR	3898880	PtrMemberAccess	ast -> child [ 0 ] -> kind		3897502	0					
ANR	3898881	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3898882	PtrMemberAccess	ast -> child		3897502	0					
ANR	3898883	Identifier	ast		3897502	0					
ANR	3898884	Identifier	child		3897502	1					
ANR	3898885	PrimaryExpression	0		3897502	1					
ANR	3898886	Identifier	kind		3897502	1					
ANR	3898887	Identifier	ZEND_AST_ENCAPS_LIST		3897502	1					
ANR	3898888	CompoundStatement		220:52:6793:6793	3897502	1					
ANR	3898889	ExpressionStatement	"zend_ast_export_encaps_list ( str , '`' , ( zend_ast_list * ) ast -> child [ 0 ] , indent )"	1188:4:31505:31581	3897502	0	True				
ANR	3898890	CallExpression	"zend_ast_export_encaps_list ( str , '`' , ( zend_ast_list * ) ast -> child [ 0 ] , indent )"		3897502	0					
ANR	3898891	Callee	zend_ast_export_encaps_list		3897502	0					
ANR	3898892	Identifier	zend_ast_export_encaps_list		3897502	0					
ANR	3898893	ArgumentList	str		3897502	1					
ANR	3898894	Argument	str		3897502	0					
ANR	3898895	Identifier	str		3897502	0					
ANR	3898896	Argument	'`'		3897502	1					
ANR	3898897	PrimaryExpression	'`'		3897502	0					
ANR	3898898	Argument	( zend_ast_list * ) ast -> child [ 0 ]		3897502	2					
ANR	3898899	CastExpression	( zend_ast_list * ) ast -> child [ 0 ]		3897502	0					
ANR	3898900	CastTarget	zend_ast_list *		3897502	0					
ANR	3898901	ArrayIndexing	ast -> child [ 0 ]		3897502	1					
ANR	3898902	PtrMemberAccess	ast -> child		3897502	0					
ANR	3898903	Identifier	ast		3897502	0					
ANR	3898904	Identifier	child		3897502	1					
ANR	3898905	PrimaryExpression	0		3897502	1					
ANR	3898906	Argument	indent		3897502	3					
ANR	3898907	Identifier	indent		3897502	0					
ANR	3898908	ElseStatement	else		3897502	0					
ANR	3898909	CompoundStatement		222:10:6887:6887	3897502	0					
ANR	3898910	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1190:4:31599:31648	3897502	0	True				
ANR	3898911	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3898912	Callee	zend_ast_export_ex		3897502	0					
ANR	3898913	Identifier	zend_ast_export_ex		3897502	0					
ANR	3898914	ArgumentList	str		3897502	1					
ANR	3898915	Argument	str		3897502	0					
ANR	3898916	Identifier	str		3897502	0					
ANR	3898917	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3898918	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3898919	PtrMemberAccess	ast -> child		3897502	0					
ANR	3898920	Identifier	ast		3897502	0					
ANR	3898921	Identifier	child		3897502	1					
ANR	3898922	PrimaryExpression	0		3897502	1					
ANR	3898923	Argument	0		3897502	2					
ANR	3898924	PrimaryExpression	0		3897502	0					
ANR	3898925	Argument	indent		3897502	3					
ANR	3898926	Identifier	indent		3897502	0					
ANR	3898927	ExpressionStatement	"smart_str_appendc ( str , '`' )"	1192:3:31658:31685	3897502	120	True				
ANR	3898928	CallExpression	"smart_str_appendc ( str , '`' )"		3897502	0					
ANR	3898929	Callee	smart_str_appendc		3897502	0					
ANR	3898930	Identifier	smart_str_appendc		3897502	0					
ANR	3898931	ArgumentList	str		3897502	1					
ANR	3898932	Argument	str		3897502	0					
ANR	3898933	Identifier	str		3897502	0					
ANR	3898934	Argument	'`'		3897502	1					
ANR	3898935	PrimaryExpression	'`'		3897502	0					
ANR	3898936	BreakStatement	break ;	1193:3:31690:31695	3897502	121	True				
ANR	3898937	Label	case ZEND_AST_CLONE :	1194:2:31699:31718	3897502	122	True				
ANR	3898938	Identifier	ZEND_AST_CLONE		3897502	0					
ANR	3898939	ExpressionStatement	"PREFIX_OP ( ""clone "" , 270 , 271 )"	1195:3:31723:31752	3897502	123	True				
ANR	3898940	CallExpression	"PREFIX_OP ( ""clone "" , 270 , 271 )"		3897502	0					
ANR	3898941	Callee	PREFIX_OP		3897502	0					
ANR	3898942	Identifier	PREFIX_OP		3897502	0					
ANR	3898943	ArgumentList	"""clone """		3897502	1					
ANR	3898944	Argument	"""clone """		3897502	0					
ANR	3898945	PrimaryExpression	"""clone """		3897502	0					
ANR	3898946	Argument	270		3897502	1					
ANR	3898947	PrimaryExpression	270		3897502	0					
ANR	3898948	Argument	271		3897502	2					
ANR	3898949	PrimaryExpression	271		3897502	0					
ANR	3898950	Label	case ZEND_AST_EXIT :	1196:2:31756:31774	3897502	124	True				
ANR	3898951	Identifier	ZEND_AST_EXIT		3897502	0					
ANR	3898952	IfStatement	if ( ast -> child [ 0 ] )		3897502	125					
ANR	3898953	Condition	ast -> child [ 0 ]	1197:7:31783:31795	3897502	0	True				
ANR	3898954	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3898955	PtrMemberAccess	ast -> child		3897502	0					
ANR	3898956	Identifier	ast		3897502	0					
ANR	3898957	Identifier	child		3897502	1					
ANR	3898958	PrimaryExpression	0		3897502	1					
ANR	3898959	CompoundStatement		230:22:7092:7092	3897502	1					
ANR	3898960	ExpressionStatement	"FUNC_OP ( ""exit"" )"	1198:4:31804:31819	3897502	0	True				
ANR	3898961	CallExpression	"FUNC_OP ( ""exit"" )"		3897502	0					
ANR	3898962	Callee	FUNC_OP		3897502	0					
ANR	3898963	Identifier	FUNC_OP		3897502	0					
ANR	3898964	ArgumentList	"""exit"""		3897502	1					
ANR	3898965	Argument	"""exit"""		3897502	0					
ANR	3898966	PrimaryExpression	"""exit"""		3897502	0					
ANR	3898967	ElseStatement	else		3897502	0					
ANR	3898968	CompoundStatement		232:10:7125:7125	3897502	0					
ANR	3898969	ExpressionStatement	"APPEND_STR ( ""exit"" )"	1200:4:31837:31855	3897502	0	True				
ANR	3898970	CallExpression	"APPEND_STR ( ""exit"" )"		3897502	0					
ANR	3898971	Callee	APPEND_STR		3897502	0					
ANR	3898972	Identifier	APPEND_STR		3897502	0					
ANR	3898973	ArgumentList	"""exit"""		3897502	1					
ANR	3898974	Argument	"""exit"""		3897502	0					
ANR	3898975	PrimaryExpression	"""exit"""		3897502	0					
ANR	3898976	BreakStatement	break ;	1202:3:31865:31870	3897502	126	True				
ANR	3898977	Label	case ZEND_AST_PRINT :	1203:2:31874:31893	3897502	127	True				
ANR	3898978	Identifier	ZEND_AST_PRINT		3897502	0					
ANR	3898979	ExpressionStatement	"PREFIX_OP ( ""print "" , 60 , 61 )"	1204:3:31898:31925	3897502	128	True				
ANR	3898980	CallExpression	"PREFIX_OP ( ""print "" , 60 , 61 )"		3897502	0					
ANR	3898981	Callee	PREFIX_OP		3897502	0					
ANR	3898982	Identifier	PREFIX_OP		3897502	0					
ANR	3898983	ArgumentList	"""print """		3897502	1					
ANR	3898984	Argument	"""print """		3897502	0					
ANR	3898985	PrimaryExpression	"""print """		3897502	0					
ANR	3898986	Argument	60		3897502	1					
ANR	3898987	PrimaryExpression	60		3897502	0					
ANR	3898988	Argument	61		3897502	2					
ANR	3898989	PrimaryExpression	61		3897502	0					
ANR	3898990	Label	case ZEND_AST_INCLUDE_OR_EVAL :	1205:2:31929:31958	3897502	129	True				
ANR	3898991	Identifier	ZEND_AST_INCLUDE_OR_EVAL		3897502	0					
ANR	3898992	SwitchStatement	switch ( ast -> attr )		3897502	130					
ANR	3898993	Condition	ast -> attr	1206:11:31971:31979	3897502	0	True				
ANR	3898994	PtrMemberAccess	ast -> attr		3897502	0					
ANR	3898995	Identifier	ast		3897502	0					
ANR	3898996	Identifier	attr		3897502	1					
ANR	3898997	CompoundStatement		239:22:7276:7276	3897502	1					
ANR	3898998	Label	case ZEND_INCLUDE_ONCE :	1207:4:31988:32010	3897502	0	True				
ANR	3898999	Identifier	ZEND_INCLUDE_ONCE		3897502	0					
ANR	3899000	ExpressionStatement	"FUNC_OP ( ""include_once"" )"	1207:28:32012:32035	3897502	1	True				
ANR	3899001	CallExpression	"FUNC_OP ( ""include_once"" )"		3897502	0					
ANR	3899002	Callee	FUNC_OP		3897502	0					
ANR	3899003	Identifier	FUNC_OP		3897502	0					
ANR	3899004	ArgumentList	"""include_once"""		3897502	1					
ANR	3899005	Argument	"""include_once"""		3897502	0					
ANR	3899006	PrimaryExpression	"""include_once"""		3897502	0					
ANR	3899007	Label	case ZEND_INCLUDE :	1208:4:32041:32058	3897502	2	True				
ANR	3899008	Identifier	ZEND_INCLUDE		3897502	0					
ANR	3899009	ExpressionStatement	"FUNC_OP ( ""include"" )"	1208:28:32065:32083	3897502	3	True				
ANR	3899010	CallExpression	"FUNC_OP ( ""include"" )"		3897502	0					
ANR	3899011	Callee	FUNC_OP		3897502	0					
ANR	3899012	Identifier	FUNC_OP		3897502	0					
ANR	3899013	ArgumentList	"""include"""		3897502	1					
ANR	3899014	Argument	"""include"""		3897502	0					
ANR	3899015	PrimaryExpression	"""include"""		3897502	0					
ANR	3899016	Label	case ZEND_REQUIRE_ONCE :	1209:4:32089:32111	3897502	4	True				
ANR	3899017	Identifier	ZEND_REQUIRE_ONCE		3897502	0					
ANR	3899018	ExpressionStatement	"FUNC_OP ( ""require_once"" )"	1209:28:32113:32136	3897502	5	True				
ANR	3899019	CallExpression	"FUNC_OP ( ""require_once"" )"		3897502	0					
ANR	3899020	Callee	FUNC_OP		3897502	0					
ANR	3899021	Identifier	FUNC_OP		3897502	0					
ANR	3899022	ArgumentList	"""require_once"""		3897502	1					
ANR	3899023	Argument	"""require_once"""		3897502	0					
ANR	3899024	PrimaryExpression	"""require_once"""		3897502	0					
ANR	3899025	Label	case ZEND_REQUIRE :	1210:4:32142:32159	3897502	6	True				
ANR	3899026	Identifier	ZEND_REQUIRE		3897502	0					
ANR	3899027	ExpressionStatement	"FUNC_OP ( ""require"" )"	1210:28:32166:32184	3897502	7	True				
ANR	3899028	CallExpression	"FUNC_OP ( ""require"" )"		3897502	0					
ANR	3899029	Callee	FUNC_OP		3897502	0					
ANR	3899030	Identifier	FUNC_OP		3897502	0					
ANR	3899031	ArgumentList	"""require"""		3897502	1					
ANR	3899032	Argument	"""require"""		3897502	0					
ANR	3899033	PrimaryExpression	"""require"""		3897502	0					
ANR	3899034	Label	case ZEND_EVAL :	1211:4:32190:32204	3897502	8	True				
ANR	3899035	Identifier	ZEND_EVAL		3897502	0					
ANR	3899036	ExpressionStatement	"FUNC_OP ( ""eval"" )"	1211:28:32214:32229	3897502	9	True				
ANR	3899037	CallExpression	"FUNC_OP ( ""eval"" )"		3897502	0					
ANR	3899038	Callee	FUNC_OP		3897502	0					
ANR	3899039	Identifier	FUNC_OP		3897502	0					
ANR	3899040	ArgumentList	"""eval"""		3897502	1					
ANR	3899041	Argument	"""eval"""		3897502	0					
ANR	3899042	PrimaryExpression	"""eval"""		3897502	0					
ANR	3899043	ExpressionStatement	EMPTY_SWITCH_DEFAULT_CASE ( )	1212:4:32235:32262	3897502	10	True				
ANR	3899044	CallExpression	EMPTY_SWITCH_DEFAULT_CASE ( )		3897502	0					
ANR	3899045	Callee	EMPTY_SWITCH_DEFAULT_CASE		3897502	0					
ANR	3899046	Identifier	EMPTY_SWITCH_DEFAULT_CASE		3897502	0					
ANR	3899047	ArgumentList			3897502	1					
ANR	3899048	BreakStatement	break ;	1214:3:32272:32277	3897502	131	True				
ANR	3899049	Label	case ZEND_AST_UNARY_OP :	1215:2:32281:32303	3897502	132	True				
ANR	3899050	Identifier	ZEND_AST_UNARY_OP		3897502	0					
ANR	3899051	SwitchStatement	switch ( ast -> attr )		3897502	133					
ANR	3899052	Condition	ast -> attr	1216:11:32316:32324	3897502	0	True				
ANR	3899053	PtrMemberAccess	ast -> attr		3897502	0					
ANR	3899054	Identifier	ast		3897502	0					
ANR	3899055	Identifier	attr		3897502	1					
ANR	3899056	CompoundStatement		249:22:7621:7621	3897502	1					
ANR	3899057	Label	case ZEND_BW_NOT :	1217:4:32333:32349	3897502	0	True				
ANR	3899058	Identifier	ZEND_BW_NOT		3897502	0					
ANR	3899059	ExpressionStatement	"PREFIX_OP ( ""~"" , 240 , 241 )"	1217:24:32353:32377	3897502	1	True				
ANR	3899060	CallExpression	"PREFIX_OP ( ""~"" , 240 , 241 )"		3897502	0					
ANR	3899061	Callee	PREFIX_OP		3897502	0					
ANR	3899062	Identifier	PREFIX_OP		3897502	0					
ANR	3899063	ArgumentList	"""~"""		3897502	1					
ANR	3899064	Argument	"""~"""		3897502	0					
ANR	3899065	PrimaryExpression	"""~"""		3897502	0					
ANR	3899066	Argument	240		3897502	1					
ANR	3899067	PrimaryExpression	240		3897502	0					
ANR	3899068	Argument	241		3897502	2					
ANR	3899069	PrimaryExpression	241		3897502	0					
ANR	3899070	Label	case ZEND_BOOL_NOT :	1218:4:32383:32401	3897502	2	True				
ANR	3899071	Identifier	ZEND_BOOL_NOT		3897502	0					
ANR	3899072	ExpressionStatement	"PREFIX_OP ( ""!"" , 240 , 241 )"	1218:24:32403:32427	3897502	3	True				
ANR	3899073	CallExpression	"PREFIX_OP ( ""!"" , 240 , 241 )"		3897502	0					
ANR	3899074	Callee	PREFIX_OP		3897502	0					
ANR	3899075	Identifier	PREFIX_OP		3897502	0					
ANR	3899076	ArgumentList	"""!"""		3897502	1					
ANR	3899077	Argument	"""!"""		3897502	0					
ANR	3899078	PrimaryExpression	"""!"""		3897502	0					
ANR	3899079	Argument	240		3897502	1					
ANR	3899080	PrimaryExpression	240		3897502	0					
ANR	3899081	Argument	241		3897502	2					
ANR	3899082	PrimaryExpression	241		3897502	0					
ANR	3899083	ExpressionStatement	EMPTY_SWITCH_DEFAULT_CASE ( )	1219:4:32433:32460	3897502	4	True				
ANR	3899084	CallExpression	EMPTY_SWITCH_DEFAULT_CASE ( )		3897502	0					
ANR	3899085	Callee	EMPTY_SWITCH_DEFAULT_CASE		3897502	0					
ANR	3899086	Identifier	EMPTY_SWITCH_DEFAULT_CASE		3897502	0					
ANR	3899087	ArgumentList			3897502	1					
ANR	3899088	BreakStatement	break ;	1221:3:32470:32475	3897502	134	True				
ANR	3899089	Label	case ZEND_AST_PRE_INC :	1222:2:32479:32500	3897502	135	True				
ANR	3899090	Identifier	ZEND_AST_PRE_INC		3897502	0					
ANR	3899091	ExpressionStatement	"PREFIX_OP ( ""++"" , 240 , 241 )"	1223:3:32505:32530	3897502	136	True				
ANR	3899092	CallExpression	"PREFIX_OP ( ""++"" , 240 , 241 )"		3897502	0					
ANR	3899093	Callee	PREFIX_OP		3897502	0					
ANR	3899094	Identifier	PREFIX_OP		3897502	0					
ANR	3899095	ArgumentList	"""++"""		3897502	1					
ANR	3899096	Argument	"""++"""		3897502	0					
ANR	3899097	PrimaryExpression	"""++"""		3897502	0					
ANR	3899098	Argument	240		3897502	1					
ANR	3899099	PrimaryExpression	240		3897502	0					
ANR	3899100	Argument	241		3897502	2					
ANR	3899101	PrimaryExpression	241		3897502	0					
ANR	3899102	Label	case ZEND_AST_PRE_DEC :	1224:2:32534:32555	3897502	137	True				
ANR	3899103	Identifier	ZEND_AST_PRE_DEC		3897502	0					
ANR	3899104	ExpressionStatement	"PREFIX_OP ( ""--"" , 240 , 241 )"	1225:3:32560:32585	3897502	138	True				
ANR	3899105	CallExpression	"PREFIX_OP ( ""--"" , 240 , 241 )"		3897502	0					
ANR	3899106	Callee	PREFIX_OP		3897502	0					
ANR	3899107	Identifier	PREFIX_OP		3897502	0					
ANR	3899108	ArgumentList	"""--"""		3897502	1					
ANR	3899109	Argument	"""--"""		3897502	0					
ANR	3899110	PrimaryExpression	"""--"""		3897502	0					
ANR	3899111	Argument	240		3897502	1					
ANR	3899112	PrimaryExpression	240		3897502	0					
ANR	3899113	Argument	241		3897502	2					
ANR	3899114	PrimaryExpression	241		3897502	0					
ANR	3899115	Label	case ZEND_AST_POST_INC :	1226:2:32589:32611	3897502	139	True				
ANR	3899116	Identifier	ZEND_AST_POST_INC		3897502	0					
ANR	3899117	ExpressionStatement	"POSTFIX_OP ( ""++"" , 240 , 241 )"	1227:3:32616:32642	3897502	140	True				
ANR	3899118	CallExpression	"POSTFIX_OP ( ""++"" , 240 , 241 )"		3897502	0					
ANR	3899119	Callee	POSTFIX_OP		3897502	0					
ANR	3899120	Identifier	POSTFIX_OP		3897502	0					
ANR	3899121	ArgumentList	"""++"""		3897502	1					
ANR	3899122	Argument	"""++"""		3897502	0					
ANR	3899123	PrimaryExpression	"""++"""		3897502	0					
ANR	3899124	Argument	240		3897502	1					
ANR	3899125	PrimaryExpression	240		3897502	0					
ANR	3899126	Argument	241		3897502	2					
ANR	3899127	PrimaryExpression	241		3897502	0					
ANR	3899128	Label	case ZEND_AST_POST_DEC :	1228:2:32646:32668	3897502	141	True				
ANR	3899129	Identifier	ZEND_AST_POST_DEC		3897502	0					
ANR	3899130	ExpressionStatement	"POSTFIX_OP ( ""--"" , 240 , 241 )"	1229:3:32673:32699	3897502	142	True				
ANR	3899131	CallExpression	"POSTFIX_OP ( ""--"" , 240 , 241 )"		3897502	0					
ANR	3899132	Callee	POSTFIX_OP		3897502	0					
ANR	3899133	Identifier	POSTFIX_OP		3897502	0					
ANR	3899134	ArgumentList	"""--"""		3897502	1					
ANR	3899135	Argument	"""--"""		3897502	0					
ANR	3899136	PrimaryExpression	"""--"""		3897502	0					
ANR	3899137	Argument	240		3897502	1					
ANR	3899138	PrimaryExpression	240		3897502	0					
ANR	3899139	Argument	241		3897502	2					
ANR	3899140	PrimaryExpression	241		3897502	0					
ANR	3899141	Label	case ZEND_AST_GLOBAL :	1231:2:32704:32724	3897502	143	True				
ANR	3899142	Identifier	ZEND_AST_GLOBAL		3897502	0					
ANR	3899143	ExpressionStatement	"APPEND_NODE_1 ( ""global"" )"	1232:3:32729:32752	3897502	144	True				
ANR	3899144	CallExpression	"APPEND_NODE_1 ( ""global"" )"		3897502	0					
ANR	3899145	Callee	APPEND_NODE_1		3897502	0					
ANR	3899146	Identifier	APPEND_NODE_1		3897502	0					
ANR	3899147	ArgumentList	"""global"""		3897502	1					
ANR	3899148	Argument	"""global"""		3897502	0					
ANR	3899149	PrimaryExpression	"""global"""		3897502	0					
ANR	3899150	Label	case ZEND_AST_UNSET :	1233:2:32756:32775	3897502	145	True				
ANR	3899151	Identifier	ZEND_AST_UNSET		3897502	0					
ANR	3899152	ExpressionStatement	"FUNC_OP ( ""unset"" )"	1234:3:32780:32796	3897502	146	True				
ANR	3899153	CallExpression	"FUNC_OP ( ""unset"" )"		3897502	0					
ANR	3899154	Callee	FUNC_OP		3897502	0					
ANR	3899155	Identifier	FUNC_OP		3897502	0					
ANR	3899156	ArgumentList	"""unset"""		3897502	1					
ANR	3899157	Argument	"""unset"""		3897502	0					
ANR	3899158	PrimaryExpression	"""unset"""		3897502	0					
ANR	3899159	Label	case ZEND_AST_RETURN :	1235:2:32800:32820	3897502	147	True				
ANR	3899160	Identifier	ZEND_AST_RETURN		3897502	0					
ANR	3899161	ExpressionStatement	"APPEND_NODE_1 ( ""return"" )"	1236:3:32825:32848	3897502	148	True				
ANR	3899162	CallExpression	"APPEND_NODE_1 ( ""return"" )"		3897502	0					
ANR	3899163	Callee	APPEND_NODE_1		3897502	0					
ANR	3899164	Identifier	APPEND_NODE_1		3897502	0					
ANR	3899165	ArgumentList	"""return"""		3897502	1					
ANR	3899166	Argument	"""return"""		3897502	0					
ANR	3899167	PrimaryExpression	"""return"""		3897502	0					
ANR	3899168	Label	case ZEND_AST_LABEL :	1237:2:32852:32871	3897502	149	True				
ANR	3899169	Identifier	ZEND_AST_LABEL		3897502	0					
ANR	3899170	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"	1238:3:32876:32927	3897502	150	True				
ANR	3899171	CallExpression	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3899172	Callee	zend_ast_export_name		3897502	0					
ANR	3899173	Identifier	zend_ast_export_name		3897502	0					
ANR	3899174	ArgumentList	str		3897502	1					
ANR	3899175	Argument	str		3897502	0					
ANR	3899176	Identifier	str		3897502	0					
ANR	3899177	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3899178	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3899179	PtrMemberAccess	ast -> child		3897502	0					
ANR	3899180	Identifier	ast		3897502	0					
ANR	3899181	Identifier	child		3897502	1					
ANR	3899182	PrimaryExpression	0		3897502	1					
ANR	3899183	Argument	0		3897502	2					
ANR	3899184	PrimaryExpression	0		3897502	0					
ANR	3899185	Argument	indent		3897502	3					
ANR	3899186	Identifier	indent		3897502	0					
ANR	3899187	ExpressionStatement	"smart_str_appendc ( str , ':' )"	1239:3:32932:32959	3897502	151	True				
ANR	3899188	CallExpression	"smart_str_appendc ( str , ':' )"		3897502	0					
ANR	3899189	Callee	smart_str_appendc		3897502	0					
ANR	3899190	Identifier	smart_str_appendc		3897502	0					
ANR	3899191	ArgumentList	str		3897502	1					
ANR	3899192	Argument	str		3897502	0					
ANR	3899193	Identifier	str		3897502	0					
ANR	3899194	Argument	':'		3897502	1					
ANR	3899195	PrimaryExpression	':'		3897502	0					
ANR	3899196	BreakStatement	break ;	1240:3:32964:32969	3897502	152	True				
ANR	3899197	Label	case ZEND_AST_REF :	1241:2:32973:32990	3897502	153	True				
ANR	3899198	Identifier	ZEND_AST_REF		3897502	0					
ANR	3899199	ExpressionStatement	"smart_str_appendc ( str , '&' )"	1242:3:32995:33022	3897502	154	True				
ANR	3899200	CallExpression	"smart_str_appendc ( str , '&' )"		3897502	0					
ANR	3899201	Callee	smart_str_appendc		3897502	0					
ANR	3899202	Identifier	smart_str_appendc		3897502	0					
ANR	3899203	ArgumentList	str		3897502	1					
ANR	3899204	Argument	str		3897502	0					
ANR	3899205	Identifier	str		3897502	0					
ANR	3899206	Argument	'&'		3897502	1					
ANR	3899207	PrimaryExpression	'&'		3897502	0					
ANR	3899208	ExpressionStatement	ast = ast -> child [ 0 ]	1243:3:33027:33046	3897502	155	True				
ANR	3899209	AssignmentExpression	ast = ast -> child [ 0 ]		3897502	0		=			
ANR	3899210	Identifier	ast		3897502	0					
ANR	3899211	ArrayIndexing	ast -> child [ 0 ]		3897502	1					
ANR	3899212	PtrMemberAccess	ast -> child		3897502	0					
ANR	3899213	Identifier	ast		3897502	0					
ANR	3899214	Identifier	child		3897502	1					
ANR	3899215	PrimaryExpression	0		3897502	1					
ANR	3899216	GotoStatement	goto tail_call ;	1244:3:33051:33065	3897502	156	True				
ANR	3899217	Identifier	tail_call		3897502	0					
ANR	3899218	Label	case ZEND_AST_HALT_COMPILER :	1245:2:33069:33096	3897502	157	True				
ANR	3899219	Identifier	ZEND_AST_HALT_COMPILER		3897502	0					
ANR	3899220	ExpressionStatement	"APPEND_STR ( ""__HALT_COMPILER()"" )"	1246:3:33101:33132	3897502	158	True				
ANR	3899221	CallExpression	"APPEND_STR ( ""__HALT_COMPILER()"" )"		3897502	0					
ANR	3899222	Callee	APPEND_STR		3897502	0					
ANR	3899223	Identifier	APPEND_STR		3897502	0					
ANR	3899224	ArgumentList	"""__HALT_COMPILER()"""		3897502	1					
ANR	3899225	Argument	"""__HALT_COMPILER()"""		3897502	0					
ANR	3899226	PrimaryExpression	"""__HALT_COMPILER()"""		3897502	0					
ANR	3899227	Label	case ZEND_AST_ECHO :	1247:2:33136:33154	3897502	159	True				
ANR	3899228	Identifier	ZEND_AST_ECHO		3897502	0					
ANR	3899229	ExpressionStatement	"APPEND_NODE_1 ( ""echo"" )"	1248:3:33159:33180	3897502	160	True				
ANR	3899230	CallExpression	"APPEND_NODE_1 ( ""echo"" )"		3897502	0					
ANR	3899231	Callee	APPEND_NODE_1		3897502	0					
ANR	3899232	Identifier	APPEND_NODE_1		3897502	0					
ANR	3899233	ArgumentList	"""echo"""		3897502	1					
ANR	3899234	Argument	"""echo"""		3897502	0					
ANR	3899235	PrimaryExpression	"""echo"""		3897502	0					
ANR	3899236	Label	case ZEND_AST_THROW :	1249:2:33184:33203	3897502	161	True				
ANR	3899237	Identifier	ZEND_AST_THROW		3897502	0					
ANR	3899238	ExpressionStatement	"APPEND_NODE_1 ( ""throw"" )"	1250:3:33208:33230	3897502	162	True				
ANR	3899239	CallExpression	"APPEND_NODE_1 ( ""throw"" )"		3897502	0					
ANR	3899240	Callee	APPEND_NODE_1		3897502	0					
ANR	3899241	Identifier	APPEND_NODE_1		3897502	0					
ANR	3899242	ArgumentList	"""throw"""		3897502	1					
ANR	3899243	Argument	"""throw"""		3897502	0					
ANR	3899244	PrimaryExpression	"""throw"""		3897502	0					
ANR	3899245	Label	case ZEND_AST_GOTO :	1251:2:33234:33252	3897502	163	True				
ANR	3899246	Identifier	ZEND_AST_GOTO		3897502	0					
ANR	3899247	ExpressionStatement	"smart_str_appends ( str , ""goto "" )"	1252:3:33257:33288	3897502	164	True				
ANR	3899248	CallExpression	"smart_str_appends ( str , ""goto "" )"		3897502	0					
ANR	3899249	Callee	smart_str_appends		3897502	0					
ANR	3899250	Identifier	smart_str_appends		3897502	0					
ANR	3899251	ArgumentList	str		3897502	1					
ANR	3899252	Argument	str		3897502	0					
ANR	3899253	Identifier	str		3897502	0					
ANR	3899254	Argument	"""goto """		3897502	1					
ANR	3899255	PrimaryExpression	"""goto """		3897502	0					
ANR	3899256	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"	1253:3:33293:33344	3897502	165	True				
ANR	3899257	CallExpression	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3899258	Callee	zend_ast_export_name		3897502	0					
ANR	3899259	Identifier	zend_ast_export_name		3897502	0					
ANR	3899260	ArgumentList	str		3897502	1					
ANR	3899261	Argument	str		3897502	0					
ANR	3899262	Identifier	str		3897502	0					
ANR	3899263	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3899264	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3899265	PtrMemberAccess	ast -> child		3897502	0					
ANR	3899266	Identifier	ast		3897502	0					
ANR	3899267	Identifier	child		3897502	1					
ANR	3899268	PrimaryExpression	0		3897502	1					
ANR	3899269	Argument	0		3897502	2					
ANR	3899270	PrimaryExpression	0		3897502	0					
ANR	3899271	Argument	indent		3897502	3					
ANR	3899272	Identifier	indent		3897502	0					
ANR	3899273	BreakStatement	break ;	1254:3:33349:33354	3897502	166	True				
ANR	3899274	Label	case ZEND_AST_BREAK :	1255:2:33358:33377	3897502	167	True				
ANR	3899275	Identifier	ZEND_AST_BREAK		3897502	0					
ANR	3899276	ExpressionStatement	"APPEND_NODE_1 ( ""break"" )"	1256:3:33382:33404	3897502	168	True				
ANR	3899277	CallExpression	"APPEND_NODE_1 ( ""break"" )"		3897502	0					
ANR	3899278	Callee	APPEND_NODE_1		3897502	0					
ANR	3899279	Identifier	APPEND_NODE_1		3897502	0					
ANR	3899280	ArgumentList	"""break"""		3897502	1					
ANR	3899281	Argument	"""break"""		3897502	0					
ANR	3899282	PrimaryExpression	"""break"""		3897502	0					
ANR	3899283	Label	case ZEND_AST_CONTINUE :	1257:2:33408:33430	3897502	169	True				
ANR	3899284	Identifier	ZEND_AST_CONTINUE		3897502	0					
ANR	3899285	ExpressionStatement	"APPEND_NODE_1 ( ""continue"" )"	1258:3:33435:33460	3897502	170	True				
ANR	3899286	CallExpression	"APPEND_NODE_1 ( ""continue"" )"		3897502	0					
ANR	3899287	Callee	APPEND_NODE_1		3897502	0					
ANR	3899288	Identifier	APPEND_NODE_1		3897502	0					
ANR	3899289	ArgumentList	"""continue"""		3897502	1					
ANR	3899290	Argument	"""continue"""		3897502	0					
ANR	3899291	PrimaryExpression	"""continue"""		3897502	0					
ANR	3899292	Label	case ZEND_AST_DIM :	1261:2:33487:33504	3897502	171	True				
ANR	3899293	Identifier	ZEND_AST_DIM		3897502	0					
ANR	3899294	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 260 , indent )"	1262:3:33509:33560	3897502	172	True				
ANR	3899295	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 260 , indent )"		3897502	0					
ANR	3899296	Callee	zend_ast_export_ex		3897502	0					
ANR	3899297	Identifier	zend_ast_export_ex		3897502	0					
ANR	3899298	ArgumentList	str		3897502	1					
ANR	3899299	Argument	str		3897502	0					
ANR	3899300	Identifier	str		3897502	0					
ANR	3899301	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3899302	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3899303	PtrMemberAccess	ast -> child		3897502	0					
ANR	3899304	Identifier	ast		3897502	0					
ANR	3899305	Identifier	child		3897502	1					
ANR	3899306	PrimaryExpression	0		3897502	1					
ANR	3899307	Argument	260		3897502	2					
ANR	3899308	PrimaryExpression	260		3897502	0					
ANR	3899309	Argument	indent		3897502	3					
ANR	3899310	Identifier	indent		3897502	0					
ANR	3899311	ExpressionStatement	"smart_str_appendc ( str , '[' )"	1263:3:33565:33592	3897502	173	True				
ANR	3899312	CallExpression	"smart_str_appendc ( str , '[' )"		3897502	0					
ANR	3899313	Callee	smart_str_appendc		3897502	0					
ANR	3899314	Identifier	smart_str_appendc		3897502	0					
ANR	3899315	ArgumentList	str		3897502	1					
ANR	3899316	Argument	str		3897502	0					
ANR	3899317	Identifier	str		3897502	0					
ANR	3899318	Argument	'['		3897502	1					
ANR	3899319	PrimaryExpression	'['		3897502	0					
ANR	3899320	IfStatement	if ( ast -> child [ 1 ] )		3897502	174					
ANR	3899321	Condition	ast -> child [ 1 ]	1264:7:33601:33613	3897502	0	True				
ANR	3899322	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3899323	PtrMemberAccess	ast -> child		3897502	0					
ANR	3899324	Identifier	ast		3897502	0					
ANR	3899325	Identifier	child		3897502	1					
ANR	3899326	PrimaryExpression	1		3897502	1					
ANR	3899327	CompoundStatement		297:22:8910:8910	3897502	1					
ANR	3899328	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"	1265:4:33622:33671	3897502	0	True				
ANR	3899329	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3899330	Callee	zend_ast_export_ex		3897502	0					
ANR	3899331	Identifier	zend_ast_export_ex		3897502	0					
ANR	3899332	ArgumentList	str		3897502	1					
ANR	3899333	Argument	str		3897502	0					
ANR	3899334	Identifier	str		3897502	0					
ANR	3899335	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3899336	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3899337	PtrMemberAccess	ast -> child		3897502	0					
ANR	3899338	Identifier	ast		3897502	0					
ANR	3899339	Identifier	child		3897502	1					
ANR	3899340	PrimaryExpression	1		3897502	1					
ANR	3899341	Argument	0		3897502	2					
ANR	3899342	PrimaryExpression	0		3897502	0					
ANR	3899343	Argument	indent		3897502	3					
ANR	3899344	Identifier	indent		3897502	0					
ANR	3899345	ExpressionStatement	"smart_str_appendc ( str , ']' )"	1267:3:33681:33708	3897502	175	True				
ANR	3899346	CallExpression	"smart_str_appendc ( str , ']' )"		3897502	0					
ANR	3899347	Callee	smart_str_appendc		3897502	0					
ANR	3899348	Identifier	smart_str_appendc		3897502	0					
ANR	3899349	ArgumentList	str		3897502	1					
ANR	3899350	Argument	str		3897502	0					
ANR	3899351	Identifier	str		3897502	0					
ANR	3899352	Argument	']'		3897502	1					
ANR	3899353	PrimaryExpression	']'		3897502	0					
ANR	3899354	BreakStatement	break ;	1268:3:33713:33718	3897502	176	True				
ANR	3899355	Label	case ZEND_AST_PROP :	1269:2:33722:33740	3897502	177	True				
ANR	3899356	Identifier	ZEND_AST_PROP		3897502	0					
ANR	3899357	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1270:3:33745:33794	3897502	178	True				
ANR	3899358	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3899359	Callee	zend_ast_export_ex		3897502	0					
ANR	3899360	Identifier	zend_ast_export_ex		3897502	0					
ANR	3899361	ArgumentList	str		3897502	1					
ANR	3899362	Argument	str		3897502	0					
ANR	3899363	Identifier	str		3897502	0					
ANR	3899364	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3899365	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3899366	PtrMemberAccess	ast -> child		3897502	0					
ANR	3899367	Identifier	ast		3897502	0					
ANR	3899368	Identifier	child		3897502	1					
ANR	3899369	PrimaryExpression	0		3897502	1					
ANR	3899370	Argument	0		3897502	2					
ANR	3899371	PrimaryExpression	0		3897502	0					
ANR	3899372	Argument	indent		3897502	3					
ANR	3899373	Identifier	indent		3897502	0					
ANR	3899374	ExpressionStatement	"smart_str_appends ( str , ""->"" )"	1271:3:33799:33827	3897502	179	True				
ANR	3899375	CallExpression	"smart_str_appends ( str , ""->"" )"		3897502	0					
ANR	3899376	Callee	smart_str_appends		3897502	0					
ANR	3899377	Identifier	smart_str_appends		3897502	0					
ANR	3899378	ArgumentList	str		3897502	1					
ANR	3899379	Argument	str		3897502	0					
ANR	3899380	Identifier	str		3897502	0					
ANR	3899381	Argument	"""->"""		3897502	1					
ANR	3899382	PrimaryExpression	"""->"""		3897502	0					
ANR	3899383	ExpressionStatement	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"	1272:3:33832:33882	3897502	180	True				
ANR	3899384	CallExpression	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3899385	Callee	zend_ast_export_var		3897502	0					
ANR	3899386	Identifier	zend_ast_export_var		3897502	0					
ANR	3899387	ArgumentList	str		3897502	1					
ANR	3899388	Argument	str		3897502	0					
ANR	3899389	Identifier	str		3897502	0					
ANR	3899390	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3899391	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3899392	PtrMemberAccess	ast -> child		3897502	0					
ANR	3899393	Identifier	ast		3897502	0					
ANR	3899394	Identifier	child		3897502	1					
ANR	3899395	PrimaryExpression	1		3897502	1					
ANR	3899396	Argument	0		3897502	2					
ANR	3899397	PrimaryExpression	0		3897502	0					
ANR	3899398	Argument	indent		3897502	3					
ANR	3899399	Identifier	indent		3897502	0					
ANR	3899400	BreakStatement	break ;	1273:3:33887:33892	3897502	181	True				
ANR	3899401	Label	case ZEND_AST_STATIC_PROP :	1274:2:33896:33921	3897502	182	True				
ANR	3899402	Identifier	ZEND_AST_STATIC_PROP		3897502	0					
ANR	3899403	ExpressionStatement	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"	1275:3:33926:33980	3897502	183	True				
ANR	3899404	CallExpression	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3899405	Callee	zend_ast_export_ns_name		3897502	0					
ANR	3899406	Identifier	zend_ast_export_ns_name		3897502	0					
ANR	3899407	ArgumentList	str		3897502	1					
ANR	3899408	Argument	str		3897502	0					
ANR	3899409	Identifier	str		3897502	0					
ANR	3899410	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3899411	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3899412	PtrMemberAccess	ast -> child		3897502	0					
ANR	3899413	Identifier	ast		3897502	0					
ANR	3899414	Identifier	child		3897502	1					
ANR	3899415	PrimaryExpression	0		3897502	1					
ANR	3899416	Argument	0		3897502	2					
ANR	3899417	PrimaryExpression	0		3897502	0					
ANR	3899418	Argument	indent		3897502	3					
ANR	3899419	Identifier	indent		3897502	0					
ANR	3899420	ExpressionStatement	"smart_str_appends ( str , ""::$"" )"	1276:3:33985:34014	3897502	184	True				
ANR	3899421	CallExpression	"smart_str_appends ( str , ""::$"" )"		3897502	0					
ANR	3899422	Callee	smart_str_appends		3897502	0					
ANR	3899423	Identifier	smart_str_appends		3897502	0					
ANR	3899424	ArgumentList	str		3897502	1					
ANR	3899425	Argument	str		3897502	0					
ANR	3899426	Identifier	str		3897502	0					
ANR	3899427	Argument	"""::$"""		3897502	1					
ANR	3899428	PrimaryExpression	"""::$"""		3897502	0					
ANR	3899429	ExpressionStatement	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"	1277:3:34019:34069	3897502	185	True				
ANR	3899430	CallExpression	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3899431	Callee	zend_ast_export_var		3897502	0					
ANR	3899432	Identifier	zend_ast_export_var		3897502	0					
ANR	3899433	ArgumentList	str		3897502	1					
ANR	3899434	Argument	str		3897502	0					
ANR	3899435	Identifier	str		3897502	0					
ANR	3899436	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3899437	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3899438	PtrMemberAccess	ast -> child		3897502	0					
ANR	3899439	Identifier	ast		3897502	0					
ANR	3899440	Identifier	child		3897502	1					
ANR	3899441	PrimaryExpression	1		3897502	1					
ANR	3899442	Argument	0		3897502	2					
ANR	3899443	PrimaryExpression	0		3897502	0					
ANR	3899444	Argument	indent		3897502	3					
ANR	3899445	Identifier	indent		3897502	0					
ANR	3899446	BreakStatement	break ;	1278:3:34074:34079	3897502	186	True				
ANR	3899447	Label	case ZEND_AST_CALL :	1279:2:34083:34101	3897502	187	True				
ANR	3899448	Identifier	ZEND_AST_CALL		3897502	0					
ANR	3899449	ExpressionStatement	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"	1280:3:34106:34160	3897502	188	True				
ANR	3899450	CallExpression	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3899451	Callee	zend_ast_export_ns_name		3897502	0					
ANR	3899452	Identifier	zend_ast_export_ns_name		3897502	0					
ANR	3899453	ArgumentList	str		3897502	1					
ANR	3899454	Argument	str		3897502	0					
ANR	3899455	Identifier	str		3897502	0					
ANR	3899456	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3899457	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3899458	PtrMemberAccess	ast -> child		3897502	0					
ANR	3899459	Identifier	ast		3897502	0					
ANR	3899460	Identifier	child		3897502	1					
ANR	3899461	PrimaryExpression	0		3897502	1					
ANR	3899462	Argument	0		3897502	2					
ANR	3899463	PrimaryExpression	0		3897502	0					
ANR	3899464	Argument	indent		3897502	3					
ANR	3899465	Identifier	indent		3897502	0					
ANR	3899466	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1281:3:34165:34192	3897502	189	True				
ANR	3899467	CallExpression	"smart_str_appendc ( str , '(' )"		3897502	0					
ANR	3899468	Callee	smart_str_appendc		3897502	0					
ANR	3899469	Identifier	smart_str_appendc		3897502	0					
ANR	3899470	ArgumentList	str		3897502	1					
ANR	3899471	Argument	str		3897502	0					
ANR	3899472	Identifier	str		3897502	0					
ANR	3899473	Argument	'('		3897502	1					
ANR	3899474	PrimaryExpression	'('		3897502	0					
ANR	3899475	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"	1282:3:34197:34246	3897502	190	True				
ANR	3899476	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3899477	Callee	zend_ast_export_ex		3897502	0					
ANR	3899478	Identifier	zend_ast_export_ex		3897502	0					
ANR	3899479	ArgumentList	str		3897502	1					
ANR	3899480	Argument	str		3897502	0					
ANR	3899481	Identifier	str		3897502	0					
ANR	3899482	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3899483	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3899484	PtrMemberAccess	ast -> child		3897502	0					
ANR	3899485	Identifier	ast		3897502	0					
ANR	3899486	Identifier	child		3897502	1					
ANR	3899487	PrimaryExpression	1		3897502	1					
ANR	3899488	Argument	0		3897502	2					
ANR	3899489	PrimaryExpression	0		3897502	0					
ANR	3899490	Argument	indent		3897502	3					
ANR	3899491	Identifier	indent		3897502	0					
ANR	3899492	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1283:3:34251:34278	3897502	191	True				
ANR	3899493	CallExpression	"smart_str_appendc ( str , ')' )"		3897502	0					
ANR	3899494	Callee	smart_str_appendc		3897502	0					
ANR	3899495	Identifier	smart_str_appendc		3897502	0					
ANR	3899496	ArgumentList	str		3897502	1					
ANR	3899497	Argument	str		3897502	0					
ANR	3899498	Identifier	str		3897502	0					
ANR	3899499	Argument	')'		3897502	1					
ANR	3899500	PrimaryExpression	')'		3897502	0					
ANR	3899501	BreakStatement	break ;	1284:3:34283:34288	3897502	192	True				
ANR	3899502	Label	case ZEND_AST_CLASS_CONST :	1285:2:34292:34317	3897502	193	True				
ANR	3899503	Identifier	ZEND_AST_CLASS_CONST		3897502	0					
ANR	3899504	ExpressionStatement	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"	1286:3:34322:34376	3897502	194	True				
ANR	3899505	CallExpression	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3899506	Callee	zend_ast_export_ns_name		3897502	0					
ANR	3899507	Identifier	zend_ast_export_ns_name		3897502	0					
ANR	3899508	ArgumentList	str		3897502	1					
ANR	3899509	Argument	str		3897502	0					
ANR	3899510	Identifier	str		3897502	0					
ANR	3899511	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3899512	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3899513	PtrMemberAccess	ast -> child		3897502	0					
ANR	3899514	Identifier	ast		3897502	0					
ANR	3899515	Identifier	child		3897502	1					
ANR	3899516	PrimaryExpression	0		3897502	1					
ANR	3899517	Argument	0		3897502	2					
ANR	3899518	PrimaryExpression	0		3897502	0					
ANR	3899519	Argument	indent		3897502	3					
ANR	3899520	Identifier	indent		3897502	0					
ANR	3899521	ExpressionStatement	"smart_str_appends ( str , ""::"" )"	1287:3:34381:34409	3897502	195	True				
ANR	3899522	CallExpression	"smart_str_appends ( str , ""::"" )"		3897502	0					
ANR	3899523	Callee	smart_str_appends		3897502	0					
ANR	3899524	Identifier	smart_str_appends		3897502	0					
ANR	3899525	ArgumentList	str		3897502	1					
ANR	3899526	Argument	str		3897502	0					
ANR	3899527	Identifier	str		3897502	0					
ANR	3899528	Argument	"""::"""		3897502	1					
ANR	3899529	PrimaryExpression	"""::"""		3897502	0					
ANR	3899530	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 1 ] , 0 , indent )"	1288:3:34414:34465	3897502	196	True				
ANR	3899531	CallExpression	"zend_ast_export_name ( str , ast -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3899532	Callee	zend_ast_export_name		3897502	0					
ANR	3899533	Identifier	zend_ast_export_name		3897502	0					
ANR	3899534	ArgumentList	str		3897502	1					
ANR	3899535	Argument	str		3897502	0					
ANR	3899536	Identifier	str		3897502	0					
ANR	3899537	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3899538	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3899539	PtrMemberAccess	ast -> child		3897502	0					
ANR	3899540	Identifier	ast		3897502	0					
ANR	3899541	Identifier	child		3897502	1					
ANR	3899542	PrimaryExpression	1		3897502	1					
ANR	3899543	Argument	0		3897502	2					
ANR	3899544	PrimaryExpression	0		3897502	0					
ANR	3899545	Argument	indent		3897502	3					
ANR	3899546	Identifier	indent		3897502	0					
ANR	3899547	BreakStatement	break ;	1289:3:34470:34475	3897502	197	True				
ANR	3899548	Label	case ZEND_AST_ASSIGN :	1290:2:34479:34499	3897502	198	True				
ANR	3899549	Identifier	ZEND_AST_ASSIGN		3897502	0					
ANR	3899550	ExpressionStatement	"BINARY_OP ( "" = "" , 90 , 91 , 90 )"	1290:35:34512:34542	3897502	199	True				
ANR	3899551	CallExpression	"BINARY_OP ( "" = "" , 90 , 91 , 90 )"		3897502	0					
ANR	3899552	Callee	BINARY_OP		3897502	0					
ANR	3899553	Identifier	BINARY_OP		3897502	0					
ANR	3899554	ArgumentList	""" = """		3897502	1					
ANR	3899555	Argument	""" = """		3897502	0					
ANR	3899556	PrimaryExpression	""" = """		3897502	0					
ANR	3899557	Argument	90		3897502	1					
ANR	3899558	PrimaryExpression	90		3897502	0					
ANR	3899559	Argument	91		3897502	2					
ANR	3899560	PrimaryExpression	91		3897502	0					
ANR	3899561	Argument	90		3897502	3					
ANR	3899562	PrimaryExpression	90		3897502	0					
ANR	3899563	Label	case ZEND_AST_ASSIGN_REF :	1291:2:34546:34570	3897502	200	True				
ANR	3899564	Identifier	ZEND_AST_ASSIGN_REF		3897502	0					
ANR	3899565	ExpressionStatement	"BINARY_OP ( "" =& "" , 90 , 91 , 90 )"	1291:35:34579:34609	3897502	201	True				
ANR	3899566	CallExpression	"BINARY_OP ( "" =& "" , 90 , 91 , 90 )"		3897502	0					
ANR	3899567	Callee	BINARY_OP		3897502	0					
ANR	3899568	Identifier	BINARY_OP		3897502	0					
ANR	3899569	ArgumentList	""" =& """		3897502	1					
ANR	3899570	Argument	""" =& """		3897502	0					
ANR	3899571	PrimaryExpression	""" =& """		3897502	0					
ANR	3899572	Argument	90		3897502	1					
ANR	3899573	PrimaryExpression	90		3897502	0					
ANR	3899574	Argument	91		3897502	2					
ANR	3899575	PrimaryExpression	91		3897502	0					
ANR	3899576	Argument	90		3897502	3					
ANR	3899577	PrimaryExpression	90		3897502	0					
ANR	3899578	Label	case ZEND_AST_ASSIGN_OP :	1292:2:34613:34636	3897502	202	True				
ANR	3899579	Identifier	ZEND_AST_ASSIGN_OP		3897502	0					
ANR	3899580	SwitchStatement	switch ( ast -> attr )		3897502	203					
ANR	3899581	Condition	ast -> attr	1293:11:34649:34657	3897502	0	True				
ANR	3899582	PtrMemberAccess	ast -> attr		3897502	0					
ANR	3899583	Identifier	ast		3897502	0					
ANR	3899584	Identifier	attr		3897502	1					
ANR	3899585	CompoundStatement		326:22:9954:9954	3897502	1					
ANR	3899586	Label	case ZEND_ASSIGN_ADD :	1294:4:34666:34686	3897502	0	True				
ANR	3899587	Identifier	ZEND_ASSIGN_ADD		3897502	0					
ANR	3899588	ExpressionStatement	"BINARY_OP ( "" += "" , 90 , 91 , 90 )"	1294:29:34691:34721	3897502	1	True				
ANR	3899589	CallExpression	"BINARY_OP ( "" += "" , 90 , 91 , 90 )"		3897502	0					
ANR	3899590	Callee	BINARY_OP		3897502	0					
ANR	3899591	Identifier	BINARY_OP		3897502	0					
ANR	3899592	ArgumentList	""" += """		3897502	1					
ANR	3899593	Argument	""" += """		3897502	0					
ANR	3899594	PrimaryExpression	""" += """		3897502	0					
ANR	3899595	Argument	90		3897502	1					
ANR	3899596	PrimaryExpression	90		3897502	0					
ANR	3899597	Argument	91		3897502	2					
ANR	3899598	PrimaryExpression	91		3897502	0					
ANR	3899599	Argument	90		3897502	3					
ANR	3899600	PrimaryExpression	90		3897502	0					
ANR	3899601	Label	case ZEND_ASSIGN_SUB :	1295:4:34727:34747	3897502	2	True				
ANR	3899602	Identifier	ZEND_ASSIGN_SUB		3897502	0					
ANR	3899603	ExpressionStatement	"BINARY_OP ( "" -= "" , 90 , 91 , 90 )"	1295:29:34752:34782	3897502	3	True				
ANR	3899604	CallExpression	"BINARY_OP ( "" -= "" , 90 , 91 , 90 )"		3897502	0					
ANR	3899605	Callee	BINARY_OP		3897502	0					
ANR	3899606	Identifier	BINARY_OP		3897502	0					
ANR	3899607	ArgumentList	""" -= """		3897502	1					
ANR	3899608	Argument	""" -= """		3897502	0					
ANR	3899609	PrimaryExpression	""" -= """		3897502	0					
ANR	3899610	Argument	90		3897502	1					
ANR	3899611	PrimaryExpression	90		3897502	0					
ANR	3899612	Argument	91		3897502	2					
ANR	3899613	PrimaryExpression	91		3897502	0					
ANR	3899614	Argument	90		3897502	3					
ANR	3899615	PrimaryExpression	90		3897502	0					
ANR	3899616	Label	case ZEND_ASSIGN_MUL :	1296:4:34788:34808	3897502	4	True				
ANR	3899617	Identifier	ZEND_ASSIGN_MUL		3897502	0					
ANR	3899618	ExpressionStatement	"BINARY_OP ( "" *= "" , 90 , 91 , 90 )"	1296:29:34813:34843	3897502	5	True				
ANR	3899619	CallExpression	"BINARY_OP ( "" *= "" , 90 , 91 , 90 )"		3897502	0					
ANR	3899620	Callee	BINARY_OP		3897502	0					
ANR	3899621	Identifier	BINARY_OP		3897502	0					
ANR	3899622	ArgumentList	""" *= """		3897502	1					
ANR	3899623	Argument	""" *= """		3897502	0					
ANR	3899624	PrimaryExpression	""" *= """		3897502	0					
ANR	3899625	Argument	90		3897502	1					
ANR	3899626	PrimaryExpression	90		3897502	0					
ANR	3899627	Argument	91		3897502	2					
ANR	3899628	PrimaryExpression	91		3897502	0					
ANR	3899629	Argument	90		3897502	3					
ANR	3899630	PrimaryExpression	90		3897502	0					
ANR	3899631	Label	case ZEND_ASSIGN_DIV :	1297:4:34849:34869	3897502	6	True				
ANR	3899632	Identifier	ZEND_ASSIGN_DIV		3897502	0					
ANR	3899633	ExpressionStatement	"BINARY_OP ( "" /= "" , 90 , 91 , 90 )"	1297:29:34874:34904	3897502	7	True				
ANR	3899634	CallExpression	"BINARY_OP ( "" /= "" , 90 , 91 , 90 )"		3897502	0					
ANR	3899635	Callee	BINARY_OP		3897502	0					
ANR	3899636	Identifier	BINARY_OP		3897502	0					
ANR	3899637	ArgumentList	""" /= """		3897502	1					
ANR	3899638	Argument	""" /= """		3897502	0					
ANR	3899639	PrimaryExpression	""" /= """		3897502	0					
ANR	3899640	Argument	90		3897502	1					
ANR	3899641	PrimaryExpression	90		3897502	0					
ANR	3899642	Argument	91		3897502	2					
ANR	3899643	PrimaryExpression	91		3897502	0					
ANR	3899644	Argument	90		3897502	3					
ANR	3899645	PrimaryExpression	90		3897502	0					
ANR	3899646	Label	case ZEND_ASSIGN_MOD :	1298:4:34910:34930	3897502	8	True				
ANR	3899647	Identifier	ZEND_ASSIGN_MOD		3897502	0					
ANR	3899648	ExpressionStatement	"BINARY_OP ( "" %= "" , 90 , 91 , 90 )"	1298:29:34935:34965	3897502	9	True				
ANR	3899649	CallExpression	"BINARY_OP ( "" %= "" , 90 , 91 , 90 )"		3897502	0					
ANR	3899650	Callee	BINARY_OP		3897502	0					
ANR	3899651	Identifier	BINARY_OP		3897502	0					
ANR	3899652	ArgumentList	""" %= """		3897502	1					
ANR	3899653	Argument	""" %= """		3897502	0					
ANR	3899654	PrimaryExpression	""" %= """		3897502	0					
ANR	3899655	Argument	90		3897502	1					
ANR	3899656	PrimaryExpression	90		3897502	0					
ANR	3899657	Argument	91		3897502	2					
ANR	3899658	PrimaryExpression	91		3897502	0					
ANR	3899659	Argument	90		3897502	3					
ANR	3899660	PrimaryExpression	90		3897502	0					
ANR	3899661	Label	case ZEND_ASSIGN_SL :	1299:4:34971:34990	3897502	10	True				
ANR	3899662	Identifier	ZEND_ASSIGN_SL		3897502	0					
ANR	3899663	ExpressionStatement	"BINARY_OP ( "" <<= "" , 90 , 91 , 90 )"	1299:29:34996:35026	3897502	11	True				
ANR	3899664	CallExpression	"BINARY_OP ( "" <<= "" , 90 , 91 , 90 )"		3897502	0					
ANR	3899665	Callee	BINARY_OP		3897502	0					
ANR	3899666	Identifier	BINARY_OP		3897502	0					
ANR	3899667	ArgumentList	""" <<= """		3897502	1					
ANR	3899668	Argument	""" <<= """		3897502	0					
ANR	3899669	PrimaryExpression	""" <<= """		3897502	0					
ANR	3899670	Argument	90		3897502	1					
ANR	3899671	PrimaryExpression	90		3897502	0					
ANR	3899672	Argument	91		3897502	2					
ANR	3899673	PrimaryExpression	91		3897502	0					
ANR	3899674	Argument	90		3897502	3					
ANR	3899675	PrimaryExpression	90		3897502	0					
ANR	3899676	Label	case ZEND_ASSIGN_SR :	1300:4:35032:35051	3897502	12	True				
ANR	3899677	Identifier	ZEND_ASSIGN_SR		3897502	0					
ANR	3899678	ExpressionStatement	"BINARY_OP ( "" >>= "" , 90 , 91 , 90 )"	1300:29:35057:35087	3897502	13	True				
ANR	3899679	CallExpression	"BINARY_OP ( "" >>= "" , 90 , 91 , 90 )"		3897502	0					
ANR	3899680	Callee	BINARY_OP		3897502	0					
ANR	3899681	Identifier	BINARY_OP		3897502	0					
ANR	3899682	ArgumentList	""" >>= """		3897502	1					
ANR	3899683	Argument	""" >>= """		3897502	0					
ANR	3899684	PrimaryExpression	""" >>= """		3897502	0					
ANR	3899685	Argument	90		3897502	1					
ANR	3899686	PrimaryExpression	90		3897502	0					
ANR	3899687	Argument	91		3897502	2					
ANR	3899688	PrimaryExpression	91		3897502	0					
ANR	3899689	Argument	90		3897502	3					
ANR	3899690	PrimaryExpression	90		3897502	0					
ANR	3899691	Label	case ZEND_ASSIGN_CONCAT :	1301:4:35093:35116	3897502	14	True				
ANR	3899692	Identifier	ZEND_ASSIGN_CONCAT		3897502	0					
ANR	3899693	ExpressionStatement	"BINARY_OP ( "" .= "" , 90 , 91 , 90 )"	1301:29:35118:35148	3897502	15	True				
ANR	3899694	CallExpression	"BINARY_OP ( "" .= "" , 90 , 91 , 90 )"		3897502	0					
ANR	3899695	Callee	BINARY_OP		3897502	0					
ANR	3899696	Identifier	BINARY_OP		3897502	0					
ANR	3899697	ArgumentList	""" .= """		3897502	1					
ANR	3899698	Argument	""" .= """		3897502	0					
ANR	3899699	PrimaryExpression	""" .= """		3897502	0					
ANR	3899700	Argument	90		3897502	1					
ANR	3899701	PrimaryExpression	90		3897502	0					
ANR	3899702	Argument	91		3897502	2					
ANR	3899703	PrimaryExpression	91		3897502	0					
ANR	3899704	Argument	90		3897502	3					
ANR	3899705	PrimaryExpression	90		3897502	0					
ANR	3899706	Label	case ZEND_ASSIGN_BW_OR :	1302:4:35154:35176	3897502	16	True				
ANR	3899707	Identifier	ZEND_ASSIGN_BW_OR		3897502	0					
ANR	3899708	ExpressionStatement	"BINARY_OP ( "" |= "" , 90 , 91 , 90 )"	1302:29:35179:35209	3897502	17	True				
ANR	3899709	CallExpression	"BINARY_OP ( "" |= "" , 90 , 91 , 90 )"		3897502	0					
ANR	3899710	Callee	BINARY_OP		3897502	0					
ANR	3899711	Identifier	BINARY_OP		3897502	0					
ANR	3899712	ArgumentList	""" |= """		3897502	1					
ANR	3899713	Argument	""" |= """		3897502	0					
ANR	3899714	PrimaryExpression	""" |= """		3897502	0					
ANR	3899715	Argument	90		3897502	1					
ANR	3899716	PrimaryExpression	90		3897502	0					
ANR	3899717	Argument	91		3897502	2					
ANR	3899718	PrimaryExpression	91		3897502	0					
ANR	3899719	Argument	90		3897502	3					
ANR	3899720	PrimaryExpression	90		3897502	0					
ANR	3899721	Label	case ZEND_ASSIGN_BW_AND :	1303:4:35215:35238	3897502	18	True				
ANR	3899722	Identifier	ZEND_ASSIGN_BW_AND		3897502	0					
ANR	3899723	ExpressionStatement	"BINARY_OP ( "" &= "" , 90 , 91 , 90 )"	1303:29:35240:35270	3897502	19	True				
ANR	3899724	CallExpression	"BINARY_OP ( "" &= "" , 90 , 91 , 90 )"		3897502	0					
ANR	3899725	Callee	BINARY_OP		3897502	0					
ANR	3899726	Identifier	BINARY_OP		3897502	0					
ANR	3899727	ArgumentList	""" &= """		3897502	1					
ANR	3899728	Argument	""" &= """		3897502	0					
ANR	3899729	PrimaryExpression	""" &= """		3897502	0					
ANR	3899730	Argument	90		3897502	1					
ANR	3899731	PrimaryExpression	90		3897502	0					
ANR	3899732	Argument	91		3897502	2					
ANR	3899733	PrimaryExpression	91		3897502	0					
ANR	3899734	Argument	90		3897502	3					
ANR	3899735	PrimaryExpression	90		3897502	0					
ANR	3899736	Label	case ZEND_ASSIGN_BW_XOR :	1304:4:35276:35299	3897502	20	True				
ANR	3899737	Identifier	ZEND_ASSIGN_BW_XOR		3897502	0					
ANR	3899738	ExpressionStatement	"BINARY_OP ( "" ^= "" , 90 , 91 , 90 )"	1304:29:35301:35331	3897502	21	True				
ANR	3899739	CallExpression	"BINARY_OP ( "" ^= "" , 90 , 91 , 90 )"		3897502	0					
ANR	3899740	Callee	BINARY_OP		3897502	0					
ANR	3899741	Identifier	BINARY_OP		3897502	0					
ANR	3899742	ArgumentList	""" ^= """		3897502	1					
ANR	3899743	Argument	""" ^= """		3897502	0					
ANR	3899744	PrimaryExpression	""" ^= """		3897502	0					
ANR	3899745	Argument	90		3897502	1					
ANR	3899746	PrimaryExpression	90		3897502	0					
ANR	3899747	Argument	91		3897502	2					
ANR	3899748	PrimaryExpression	91		3897502	0					
ANR	3899749	Argument	90		3897502	3					
ANR	3899750	PrimaryExpression	90		3897502	0					
ANR	3899751	Label	case ZEND_POW :	1305:4:35337:35350	3897502	22	True				
ANR	3899752	Identifier	ZEND_POW		3897502	0					
ANR	3899753	ExpressionStatement	"BINARY_OP ( "" **= "" , 90 , 91 , 90 )"	1305:29:35362:35392	3897502	23	True				
ANR	3899754	CallExpression	"BINARY_OP ( "" **= "" , 90 , 91 , 90 )"		3897502	0					
ANR	3899755	Callee	BINARY_OP		3897502	0					
ANR	3899756	Identifier	BINARY_OP		3897502	0					
ANR	3899757	ArgumentList	""" **= """		3897502	1					
ANR	3899758	Argument	""" **= """		3897502	0					
ANR	3899759	PrimaryExpression	""" **= """		3897502	0					
ANR	3899760	Argument	90		3897502	1					
ANR	3899761	PrimaryExpression	90		3897502	0					
ANR	3899762	Argument	91		3897502	2					
ANR	3899763	PrimaryExpression	91		3897502	0					
ANR	3899764	Argument	90		3897502	3					
ANR	3899765	PrimaryExpression	90		3897502	0					
ANR	3899766	ExpressionStatement	EMPTY_SWITCH_DEFAULT_CASE ( )	1306:4:35398:35425	3897502	24	True				
ANR	3899767	CallExpression	EMPTY_SWITCH_DEFAULT_CASE ( )		3897502	0					
ANR	3899768	Callee	EMPTY_SWITCH_DEFAULT_CASE		3897502	0					
ANR	3899769	Identifier	EMPTY_SWITCH_DEFAULT_CASE		3897502	0					
ANR	3899770	ArgumentList			3897502	1					
ANR	3899771	BreakStatement	break ;	1308:3:35435:35440	3897502	204	True				
ANR	3899772	Label	case ZEND_AST_BINARY_OP :	1309:2:35444:35467	3897502	205	True				
ANR	3899773	Identifier	ZEND_AST_BINARY_OP		3897502	0					
ANR	3899774	SwitchStatement	switch ( ast -> attr )		3897502	206					
ANR	3899775	Condition	ast -> attr	1310:11:35480:35488	3897502	0	True				
ANR	3899776	PtrMemberAccess	ast -> attr		3897502	0					
ANR	3899777	Identifier	ast		3897502	0					
ANR	3899778	Identifier	attr		3897502	1					
ANR	3899779	CompoundStatement		343:22:10785:10785	3897502	1					
ANR	3899780	Label	case ZEND_ADD :	1311:4:35497:35510	3897502	0	True				
ANR	3899781	Identifier	ZEND_ADD		3897502	0					
ANR	3899782	ExpressionStatement	"BINARY_OP ( "" + "" , 200 , 200 , 201 )"	1311:35:35528:35561	3897502	1	True				
ANR	3899783	CallExpression	"BINARY_OP ( "" + "" , 200 , 200 , 201 )"		3897502	0					
ANR	3899784	Callee	BINARY_OP		3897502	0					
ANR	3899785	Identifier	BINARY_OP		3897502	0					
ANR	3899786	ArgumentList	""" + """		3897502	1					
ANR	3899787	Argument	""" + """		3897502	0					
ANR	3899788	PrimaryExpression	""" + """		3897502	0					
ANR	3899789	Argument	200		3897502	1					
ANR	3899790	PrimaryExpression	200		3897502	0					
ANR	3899791	Argument	200		3897502	2					
ANR	3899792	PrimaryExpression	200		3897502	0					
ANR	3899793	Argument	201		3897502	3					
ANR	3899794	PrimaryExpression	201		3897502	0					
ANR	3899795	Label	case ZEND_SUB :	1312:4:35567:35580	3897502	2	True				
ANR	3899796	Identifier	ZEND_SUB		3897502	0					
ANR	3899797	ExpressionStatement	"BINARY_OP ( "" - "" , 200 , 200 , 201 )"	1312:35:35598:35631	3897502	3	True				
ANR	3899798	CallExpression	"BINARY_OP ( "" - "" , 200 , 200 , 201 )"		3897502	0					
ANR	3899799	Callee	BINARY_OP		3897502	0					
ANR	3899800	Identifier	BINARY_OP		3897502	0					
ANR	3899801	ArgumentList	""" - """		3897502	1					
ANR	3899802	Argument	""" - """		3897502	0					
ANR	3899803	PrimaryExpression	""" - """		3897502	0					
ANR	3899804	Argument	200		3897502	1					
ANR	3899805	PrimaryExpression	200		3897502	0					
ANR	3899806	Argument	200		3897502	2					
ANR	3899807	PrimaryExpression	200		3897502	0					
ANR	3899808	Argument	201		3897502	3					
ANR	3899809	PrimaryExpression	201		3897502	0					
ANR	3899810	Label	case ZEND_MUL :	1313:4:35637:35650	3897502	4	True				
ANR	3899811	Identifier	ZEND_MUL		3897502	0					
ANR	3899812	ExpressionStatement	"BINARY_OP ( "" * "" , 210 , 210 , 211 )"	1313:35:35668:35701	3897502	5	True				
ANR	3899813	CallExpression	"BINARY_OP ( "" * "" , 210 , 210 , 211 )"		3897502	0					
ANR	3899814	Callee	BINARY_OP		3897502	0					
ANR	3899815	Identifier	BINARY_OP		3897502	0					
ANR	3899816	ArgumentList	""" * """		3897502	1					
ANR	3899817	Argument	""" * """		3897502	0					
ANR	3899818	PrimaryExpression	""" * """		3897502	0					
ANR	3899819	Argument	210		3897502	1					
ANR	3899820	PrimaryExpression	210		3897502	0					
ANR	3899821	Argument	210		3897502	2					
ANR	3899822	PrimaryExpression	210		3897502	0					
ANR	3899823	Argument	211		3897502	3					
ANR	3899824	PrimaryExpression	211		3897502	0					
ANR	3899825	Label	case ZEND_DIV :	1314:4:35707:35720	3897502	6	True				
ANR	3899826	Identifier	ZEND_DIV		3897502	0					
ANR	3899827	ExpressionStatement	"BINARY_OP ( "" / "" , 210 , 210 , 211 )"	1314:35:35738:35771	3897502	7	True				
ANR	3899828	CallExpression	"BINARY_OP ( "" / "" , 210 , 210 , 211 )"		3897502	0					
ANR	3899829	Callee	BINARY_OP		3897502	0					
ANR	3899830	Identifier	BINARY_OP		3897502	0					
ANR	3899831	ArgumentList	""" / """		3897502	1					
ANR	3899832	Argument	""" / """		3897502	0					
ANR	3899833	PrimaryExpression	""" / """		3897502	0					
ANR	3899834	Argument	210		3897502	1					
ANR	3899835	PrimaryExpression	210		3897502	0					
ANR	3899836	Argument	210		3897502	2					
ANR	3899837	PrimaryExpression	210		3897502	0					
ANR	3899838	Argument	211		3897502	3					
ANR	3899839	PrimaryExpression	211		3897502	0					
ANR	3899840	Label	case ZEND_MOD :	1315:4:35777:35790	3897502	8	True				
ANR	3899841	Identifier	ZEND_MOD		3897502	0					
ANR	3899842	ExpressionStatement	"BINARY_OP ( "" % "" , 210 , 210 , 211 )"	1315:35:35808:35841	3897502	9	True				
ANR	3899843	CallExpression	"BINARY_OP ( "" % "" , 210 , 210 , 211 )"		3897502	0					
ANR	3899844	Callee	BINARY_OP		3897502	0					
ANR	3899845	Identifier	BINARY_OP		3897502	0					
ANR	3899846	ArgumentList	""" % """		3897502	1					
ANR	3899847	Argument	""" % """		3897502	0					
ANR	3899848	PrimaryExpression	""" % """		3897502	0					
ANR	3899849	Argument	210		3897502	1					
ANR	3899850	PrimaryExpression	210		3897502	0					
ANR	3899851	Argument	210		3897502	2					
ANR	3899852	PrimaryExpression	210		3897502	0					
ANR	3899853	Argument	211		3897502	3					
ANR	3899854	PrimaryExpression	211		3897502	0					
ANR	3899855	Label	case ZEND_SL :	1316:4:35847:35859	3897502	10	True				
ANR	3899856	Identifier	ZEND_SL		3897502	0					
ANR	3899857	ExpressionStatement	"BINARY_OP ( "" << "" , 190 , 190 , 191 )"	1316:35:35878:35911	3897502	11	True				
ANR	3899858	CallExpression	"BINARY_OP ( "" << "" , 190 , 190 , 191 )"		3897502	0					
ANR	3899859	Callee	BINARY_OP		3897502	0					
ANR	3899860	Identifier	BINARY_OP		3897502	0					
ANR	3899861	ArgumentList	""" << """		3897502	1					
ANR	3899862	Argument	""" << """		3897502	0					
ANR	3899863	PrimaryExpression	""" << """		3897502	0					
ANR	3899864	Argument	190		3897502	1					
ANR	3899865	PrimaryExpression	190		3897502	0					
ANR	3899866	Argument	190		3897502	2					
ANR	3899867	PrimaryExpression	190		3897502	0					
ANR	3899868	Argument	191		3897502	3					
ANR	3899869	PrimaryExpression	191		3897502	0					
ANR	3899870	Label	case ZEND_SR :	1317:4:35917:35929	3897502	12	True				
ANR	3899871	Identifier	ZEND_SR		3897502	0					
ANR	3899872	ExpressionStatement	"BINARY_OP ( "" >> "" , 190 , 190 , 191 )"	1317:35:35948:35981	3897502	13	True				
ANR	3899873	CallExpression	"BINARY_OP ( "" >> "" , 190 , 190 , 191 )"		3897502	0					
ANR	3899874	Callee	BINARY_OP		3897502	0					
ANR	3899875	Identifier	BINARY_OP		3897502	0					
ANR	3899876	ArgumentList	""" >> """		3897502	1					
ANR	3899877	Argument	""" >> """		3897502	0					
ANR	3899878	PrimaryExpression	""" >> """		3897502	0					
ANR	3899879	Argument	190		3897502	1					
ANR	3899880	PrimaryExpression	190		3897502	0					
ANR	3899881	Argument	190		3897502	2					
ANR	3899882	PrimaryExpression	190		3897502	0					
ANR	3899883	Argument	191		3897502	3					
ANR	3899884	PrimaryExpression	191		3897502	0					
ANR	3899885	Label	case ZEND_CONCAT :	1318:4:35987:36003	3897502	14	True				
ANR	3899886	Identifier	ZEND_CONCAT		3897502	0					
ANR	3899887	ExpressionStatement	"BINARY_OP ( "" . "" , 200 , 200 , 201 )"	1318:35:36018:36051	3897502	15	True				
ANR	3899888	CallExpression	"BINARY_OP ( "" . "" , 200 , 200 , 201 )"		3897502	0					
ANR	3899889	Callee	BINARY_OP		3897502	0					
ANR	3899890	Identifier	BINARY_OP		3897502	0					
ANR	3899891	ArgumentList	""" . """		3897502	1					
ANR	3899892	Argument	""" . """		3897502	0					
ANR	3899893	PrimaryExpression	""" . """		3897502	0					
ANR	3899894	Argument	200		3897502	1					
ANR	3899895	PrimaryExpression	200		3897502	0					
ANR	3899896	Argument	200		3897502	2					
ANR	3899897	PrimaryExpression	200		3897502	0					
ANR	3899898	Argument	201		3897502	3					
ANR	3899899	PrimaryExpression	201		3897502	0					
ANR	3899900	Label	case ZEND_BW_OR :	1319:4:36057:36072	3897502	16	True				
ANR	3899901	Identifier	ZEND_BW_OR		3897502	0					
ANR	3899902	ExpressionStatement	"BINARY_OP ( "" | "" , 140 , 140 , 141 )"	1319:35:36088:36121	3897502	17	True				
ANR	3899903	CallExpression	"BINARY_OP ( "" | "" , 140 , 140 , 141 )"		3897502	0					
ANR	3899904	Callee	BINARY_OP		3897502	0					
ANR	3899905	Identifier	BINARY_OP		3897502	0					
ANR	3899906	ArgumentList	""" | """		3897502	1					
ANR	3899907	Argument	""" | """		3897502	0					
ANR	3899908	PrimaryExpression	""" | """		3897502	0					
ANR	3899909	Argument	140		3897502	1					
ANR	3899910	PrimaryExpression	140		3897502	0					
ANR	3899911	Argument	140		3897502	2					
ANR	3899912	PrimaryExpression	140		3897502	0					
ANR	3899913	Argument	141		3897502	3					
ANR	3899914	PrimaryExpression	141		3897502	0					
ANR	3899915	Label	case ZEND_BW_AND :	1320:4:36127:36143	3897502	18	True				
ANR	3899916	Identifier	ZEND_BW_AND		3897502	0					
ANR	3899917	ExpressionStatement	"BINARY_OP ( "" & "" , 160 , 160 , 161 )"	1320:35:36158:36191	3897502	19	True				
ANR	3899918	CallExpression	"BINARY_OP ( "" & "" , 160 , 160 , 161 )"		3897502	0					
ANR	3899919	Callee	BINARY_OP		3897502	0					
ANR	3899920	Identifier	BINARY_OP		3897502	0					
ANR	3899921	ArgumentList	""" & """		3897502	1					
ANR	3899922	Argument	""" & """		3897502	0					
ANR	3899923	PrimaryExpression	""" & """		3897502	0					
ANR	3899924	Argument	160		3897502	1					
ANR	3899925	PrimaryExpression	160		3897502	0					
ANR	3899926	Argument	160		3897502	2					
ANR	3899927	PrimaryExpression	160		3897502	0					
ANR	3899928	Argument	161		3897502	3					
ANR	3899929	PrimaryExpression	161		3897502	0					
ANR	3899930	Label	case ZEND_BW_XOR :	1321:4:36197:36213	3897502	20	True				
ANR	3899931	Identifier	ZEND_BW_XOR		3897502	0					
ANR	3899932	ExpressionStatement	"BINARY_OP ( "" ^ "" , 150 , 150 , 151 )"	1321:35:36228:36261	3897502	21	True				
ANR	3899933	CallExpression	"BINARY_OP ( "" ^ "" , 150 , 150 , 151 )"		3897502	0					
ANR	3899934	Callee	BINARY_OP		3897502	0					
ANR	3899935	Identifier	BINARY_OP		3897502	0					
ANR	3899936	ArgumentList	""" ^ """		3897502	1					
ANR	3899937	Argument	""" ^ """		3897502	0					
ANR	3899938	PrimaryExpression	""" ^ """		3897502	0					
ANR	3899939	Argument	150		3897502	1					
ANR	3899940	PrimaryExpression	150		3897502	0					
ANR	3899941	Argument	150		3897502	2					
ANR	3899942	PrimaryExpression	150		3897502	0					
ANR	3899943	Argument	151		3897502	3					
ANR	3899944	PrimaryExpression	151		3897502	0					
ANR	3899945	Label	case ZEND_IS_IDENTICAL :	1322:4:36267:36289	3897502	22	True				
ANR	3899946	Identifier	ZEND_IS_IDENTICAL		3897502	0					
ANR	3899947	ExpressionStatement	"BINARY_OP ( "" === "" , 170 , 171 , 171 )"	1322:35:36298:36331	3897502	23	True				
ANR	3899948	CallExpression	"BINARY_OP ( "" === "" , 170 , 171 , 171 )"		3897502	0					
ANR	3899949	Callee	BINARY_OP		3897502	0					
ANR	3899950	Identifier	BINARY_OP		3897502	0					
ANR	3899951	ArgumentList	""" === """		3897502	1					
ANR	3899952	Argument	""" === """		3897502	0					
ANR	3899953	PrimaryExpression	""" === """		3897502	0					
ANR	3899954	Argument	170		3897502	1					
ANR	3899955	PrimaryExpression	170		3897502	0					
ANR	3899956	Argument	171		3897502	2					
ANR	3899957	PrimaryExpression	171		3897502	0					
ANR	3899958	Argument	171		3897502	3					
ANR	3899959	PrimaryExpression	171		3897502	0					
ANR	3899960	Label	case ZEND_IS_NOT_IDENTICAL :	1323:4:36337:36363	3897502	24	True				
ANR	3899961	Identifier	ZEND_IS_NOT_IDENTICAL		3897502	0					
ANR	3899962	ExpressionStatement	"BINARY_OP ( "" !== "" , 170 , 171 , 171 )"	1323:35:36368:36401	3897502	25	True				
ANR	3899963	CallExpression	"BINARY_OP ( "" !== "" , 170 , 171 , 171 )"		3897502	0					
ANR	3899964	Callee	BINARY_OP		3897502	0					
ANR	3899965	Identifier	BINARY_OP		3897502	0					
ANR	3899966	ArgumentList	""" !== """		3897502	1					
ANR	3899967	Argument	""" !== """		3897502	0					
ANR	3899968	PrimaryExpression	""" !== """		3897502	0					
ANR	3899969	Argument	170		3897502	1					
ANR	3899970	PrimaryExpression	170		3897502	0					
ANR	3899971	Argument	171		3897502	2					
ANR	3899972	PrimaryExpression	171		3897502	0					
ANR	3899973	Argument	171		3897502	3					
ANR	3899974	PrimaryExpression	171		3897502	0					
ANR	3899975	Label	case ZEND_IS_EQUAL :	1324:4:36407:36425	3897502	26	True				
ANR	3899976	Identifier	ZEND_IS_EQUAL		3897502	0					
ANR	3899977	ExpressionStatement	"BINARY_OP ( "" == "" , 170 , 171 , 171 )"	1324:35:36438:36471	3897502	27	True				
ANR	3899978	CallExpression	"BINARY_OP ( "" == "" , 170 , 171 , 171 )"		3897502	0					
ANR	3899979	Callee	BINARY_OP		3897502	0					
ANR	3899980	Identifier	BINARY_OP		3897502	0					
ANR	3899981	ArgumentList	""" == """		3897502	1					
ANR	3899982	Argument	""" == """		3897502	0					
ANR	3899983	PrimaryExpression	""" == """		3897502	0					
ANR	3899984	Argument	170		3897502	1					
ANR	3899985	PrimaryExpression	170		3897502	0					
ANR	3899986	Argument	171		3897502	2					
ANR	3899987	PrimaryExpression	171		3897502	0					
ANR	3899988	Argument	171		3897502	3					
ANR	3899989	PrimaryExpression	171		3897502	0					
ANR	3899990	Label	case ZEND_IS_NOT_EQUAL :	1325:4:36477:36499	3897502	28	True				
ANR	3899991	Identifier	ZEND_IS_NOT_EQUAL		3897502	0					
ANR	3899992	ExpressionStatement	"BINARY_OP ( "" != "" , 170 , 171 , 171 )"	1325:35:36508:36541	3897502	29	True				
ANR	3899993	CallExpression	"BINARY_OP ( "" != "" , 170 , 171 , 171 )"		3897502	0					
ANR	3899994	Callee	BINARY_OP		3897502	0					
ANR	3899995	Identifier	BINARY_OP		3897502	0					
ANR	3899996	ArgumentList	""" != """		3897502	1					
ANR	3899997	Argument	""" != """		3897502	0					
ANR	3899998	PrimaryExpression	""" != """		3897502	0					
ANR	3899999	Argument	170		3897502	1					
ANR	3900000	PrimaryExpression	170		3897502	0					
ANR	3900001	Argument	171		3897502	2					
ANR	3900002	PrimaryExpression	171		3897502	0					
ANR	3900003	Argument	171		3897502	3					
ANR	3900004	PrimaryExpression	171		3897502	0					
ANR	3900005	Label	case ZEND_IS_SMALLER :	1326:4:36547:36567	3897502	30	True				
ANR	3900006	Identifier	ZEND_IS_SMALLER		3897502	0					
ANR	3900007	ExpressionStatement	"BINARY_OP ( "" < "" , 180 , 181 , 181 )"	1326:35:36578:36611	3897502	31	True				
ANR	3900008	CallExpression	"BINARY_OP ( "" < "" , 180 , 181 , 181 )"		3897502	0					
ANR	3900009	Callee	BINARY_OP		3897502	0					
ANR	3900010	Identifier	BINARY_OP		3897502	0					
ANR	3900011	ArgumentList	""" < """		3897502	1					
ANR	3900012	Argument	""" < """		3897502	0					
ANR	3900013	PrimaryExpression	""" < """		3897502	0					
ANR	3900014	Argument	180		3897502	1					
ANR	3900015	PrimaryExpression	180		3897502	0					
ANR	3900016	Argument	181		3897502	2					
ANR	3900017	PrimaryExpression	181		3897502	0					
ANR	3900018	Argument	181		3897502	3					
ANR	3900019	PrimaryExpression	181		3897502	0					
ANR	3900020	Label	case ZEND_IS_SMALLER_OR_EQUAL :	1327:4:36617:36646	3897502	32	True				
ANR	3900021	Identifier	ZEND_IS_SMALLER_OR_EQUAL		3897502	0					
ANR	3900022	ExpressionStatement	"BINARY_OP ( "" <= "" , 180 , 181 , 181 )"	1327:35:36648:36681	3897502	33	True				
ANR	3900023	CallExpression	"BINARY_OP ( "" <= "" , 180 , 181 , 181 )"		3897502	0					
ANR	3900024	Callee	BINARY_OP		3897502	0					
ANR	3900025	Identifier	BINARY_OP		3897502	0					
ANR	3900026	ArgumentList	""" <= """		3897502	1					
ANR	3900027	Argument	""" <= """		3897502	0					
ANR	3900028	PrimaryExpression	""" <= """		3897502	0					
ANR	3900029	Argument	180		3897502	1					
ANR	3900030	PrimaryExpression	180		3897502	0					
ANR	3900031	Argument	181		3897502	2					
ANR	3900032	PrimaryExpression	181		3897502	0					
ANR	3900033	Argument	181		3897502	3					
ANR	3900034	PrimaryExpression	181		3897502	0					
ANR	3900035	Label	case ZEND_POW :	1328:4:36687:36700	3897502	34	True				
ANR	3900036	Identifier	ZEND_POW		3897502	0					
ANR	3900037	ExpressionStatement	"BINARY_OP ( "" ** "" , 250 , 251 , 250 )"	1328:35:36718:36751	3897502	35	True				
ANR	3900038	CallExpression	"BINARY_OP ( "" ** "" , 250 , 251 , 250 )"		3897502	0					
ANR	3900039	Callee	BINARY_OP		3897502	0					
ANR	3900040	Identifier	BINARY_OP		3897502	0					
ANR	3900041	ArgumentList	""" ** """		3897502	1					
ANR	3900042	Argument	""" ** """		3897502	0					
ANR	3900043	PrimaryExpression	""" ** """		3897502	0					
ANR	3900044	Argument	250		3897502	1					
ANR	3900045	PrimaryExpression	250		3897502	0					
ANR	3900046	Argument	251		3897502	2					
ANR	3900047	PrimaryExpression	251		3897502	0					
ANR	3900048	Argument	250		3897502	3					
ANR	3900049	PrimaryExpression	250		3897502	0					
ANR	3900050	Label	case ZEND_BOOL_XOR :	1329:4:36757:36775	3897502	36	True				
ANR	3900051	Identifier	ZEND_BOOL_XOR		3897502	0					
ANR	3900052	ExpressionStatement	"BINARY_OP ( "" xor "" , 40 , 40 , 41 )"	1329:35:36788:36821	3897502	37	True				
ANR	3900053	CallExpression	"BINARY_OP ( "" xor "" , 40 , 40 , 41 )"		3897502	0					
ANR	3900054	Callee	BINARY_OP		3897502	0					
ANR	3900055	Identifier	BINARY_OP		3897502	0					
ANR	3900056	ArgumentList	""" xor """		3897502	1					
ANR	3900057	Argument	""" xor """		3897502	0					
ANR	3900058	PrimaryExpression	""" xor """		3897502	0					
ANR	3900059	Argument	40		3897502	1					
ANR	3900060	PrimaryExpression	40		3897502	0					
ANR	3900061	Argument	40		3897502	2					
ANR	3900062	PrimaryExpression	40		3897502	0					
ANR	3900063	Argument	41		3897502	3					
ANR	3900064	PrimaryExpression	41		3897502	0					
ANR	3900065	Label	case ZEND_SPACESHIP :	1330:4:36827:36846	3897502	38	True				
ANR	3900066	Identifier	ZEND_SPACESHIP		3897502	0					
ANR	3900067	ExpressionStatement	"BINARY_OP ( "" <=> "" , 180 , 181 , 181 )"	1330:35:36858:36891	3897502	39	True				
ANR	3900068	CallExpression	"BINARY_OP ( "" <=> "" , 180 , 181 , 181 )"		3897502	0					
ANR	3900069	Callee	BINARY_OP		3897502	0					
ANR	3900070	Identifier	BINARY_OP		3897502	0					
ANR	3900071	ArgumentList	""" <=> """		3897502	1					
ANR	3900072	Argument	""" <=> """		3897502	0					
ANR	3900073	PrimaryExpression	""" <=> """		3897502	0					
ANR	3900074	Argument	180		3897502	1					
ANR	3900075	PrimaryExpression	180		3897502	0					
ANR	3900076	Argument	181		3897502	2					
ANR	3900077	PrimaryExpression	181		3897502	0					
ANR	3900078	Argument	181		3897502	3					
ANR	3900079	PrimaryExpression	181		3897502	0					
ANR	3900080	ExpressionStatement	EMPTY_SWITCH_DEFAULT_CASE ( )	1331:4:36897:36924	3897502	40	True				
ANR	3900081	CallExpression	EMPTY_SWITCH_DEFAULT_CASE ( )		3897502	0					
ANR	3900082	Callee	EMPTY_SWITCH_DEFAULT_CASE		3897502	0					
ANR	3900083	Identifier	EMPTY_SWITCH_DEFAULT_CASE		3897502	0					
ANR	3900084	ArgumentList			3897502	1					
ANR	3900085	BreakStatement	break ;	1333:3:36934:36939	3897502	207	True				
ANR	3900086	Label	case ZEND_AST_GREATER :	1334:2:36943:36964	3897502	208	True				
ANR	3900087	Identifier	ZEND_AST_GREATER		3897502	0					
ANR	3900088	ExpressionStatement	"BINARY_OP ( "" > "" , 180 , 181 , 181 )"	1334:41:36982:37015	3897502	209	True				
ANR	3900089	CallExpression	"BINARY_OP ( "" > "" , 180 , 181 , 181 )"		3897502	0					
ANR	3900090	Callee	BINARY_OP		3897502	0					
ANR	3900091	Identifier	BINARY_OP		3897502	0					
ANR	3900092	ArgumentList	""" > """		3897502	1					
ANR	3900093	Argument	""" > """		3897502	0					
ANR	3900094	PrimaryExpression	""" > """		3897502	0					
ANR	3900095	Argument	180		3897502	1					
ANR	3900096	PrimaryExpression	180		3897502	0					
ANR	3900097	Argument	181		3897502	2					
ANR	3900098	PrimaryExpression	181		3897502	0					
ANR	3900099	Argument	181		3897502	3					
ANR	3900100	PrimaryExpression	181		3897502	0					
ANR	3900101	Label	case ZEND_AST_GREATER_EQUAL :	1335:2:37019:37046	3897502	210	True				
ANR	3900102	Identifier	ZEND_AST_GREATER_EQUAL		3897502	0					
ANR	3900103	ExpressionStatement	"BINARY_OP ( "" >= "" , 180 , 181 , 181 )"	1335:41:37058:37091	3897502	211	True				
ANR	3900104	CallExpression	"BINARY_OP ( "" >= "" , 180 , 181 , 181 )"		3897502	0					
ANR	3900105	Callee	BINARY_OP		3897502	0					
ANR	3900106	Identifier	BINARY_OP		3897502	0					
ANR	3900107	ArgumentList	""" >= """		3897502	1					
ANR	3900108	Argument	""" >= """		3897502	0					
ANR	3900109	PrimaryExpression	""" >= """		3897502	0					
ANR	3900110	Argument	180		3897502	1					
ANR	3900111	PrimaryExpression	180		3897502	0					
ANR	3900112	Argument	181		3897502	2					
ANR	3900113	PrimaryExpression	181		3897502	0					
ANR	3900114	Argument	181		3897502	3					
ANR	3900115	PrimaryExpression	181		3897502	0					
ANR	3900116	Label	case ZEND_AST_AND :	1336:2:37095:37112	3897502	212	True				
ANR	3900117	Identifier	ZEND_AST_AND		3897502	0					
ANR	3900118	ExpressionStatement	"BINARY_OP ( "" && "" , 130 , 130 , 131 )"	1336:41:37134:37167	3897502	213	True				
ANR	3900119	CallExpression	"BINARY_OP ( "" && "" , 130 , 130 , 131 )"		3897502	0					
ANR	3900120	Callee	BINARY_OP		3897502	0					
ANR	3900121	Identifier	BINARY_OP		3897502	0					
ANR	3900122	ArgumentList	""" && """		3897502	1					
ANR	3900123	Argument	""" && """		3897502	0					
ANR	3900124	PrimaryExpression	""" && """		3897502	0					
ANR	3900125	Argument	130		3897502	1					
ANR	3900126	PrimaryExpression	130		3897502	0					
ANR	3900127	Argument	130		3897502	2					
ANR	3900128	PrimaryExpression	130		3897502	0					
ANR	3900129	Argument	131		3897502	3					
ANR	3900130	PrimaryExpression	131		3897502	0					
ANR	3900131	Label	case ZEND_AST_OR :	1337:2:37171:37187	3897502	214	True				
ANR	3900132	Identifier	ZEND_AST_OR		3897502	0					
ANR	3900133	ExpressionStatement	"BINARY_OP ( "" || "" , 120 , 120 , 121 )"	1337:41:37210:37243	3897502	215	True				
ANR	3900134	CallExpression	"BINARY_OP ( "" || "" , 120 , 120 , 121 )"		3897502	0					
ANR	3900135	Callee	BINARY_OP		3897502	0					
ANR	3900136	Identifier	BINARY_OP		3897502	0					
ANR	3900137	ArgumentList	""" || """		3897502	1					
ANR	3900138	Argument	""" || """		3897502	0					
ANR	3900139	PrimaryExpression	""" || """		3897502	0					
ANR	3900140	Argument	120		3897502	1					
ANR	3900141	PrimaryExpression	120		3897502	0					
ANR	3900142	Argument	120		3897502	2					
ANR	3900143	PrimaryExpression	120		3897502	0					
ANR	3900144	Argument	121		3897502	3					
ANR	3900145	PrimaryExpression	121		3897502	0					
ANR	3900146	Label	case ZEND_AST_ARRAY_ELEM :	1338:2:37247:37271	3897502	216	True				
ANR	3900147	Identifier	ZEND_AST_ARRAY_ELEM		3897502	0					
ANR	3900148	IfStatement	if ( ast -> child [ 1 ] )		3897502	217					
ANR	3900149	Condition	ast -> child [ 1 ]	1339:7:37280:37292	3897502	0	True				
ANR	3900150	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3900151	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900152	Identifier	ast		3897502	0					
ANR	3900153	Identifier	child		3897502	1					
ANR	3900154	PrimaryExpression	1		3897502	1					
ANR	3900155	CompoundStatement		372:22:12589:12589	3897502	1					
ANR	3900156	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 80 , indent )"	1340:4:37301:37351	3897502	0	True				
ANR	3900157	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 80 , indent )"		3897502	0					
ANR	3900158	Callee	zend_ast_export_ex		3897502	0					
ANR	3900159	Identifier	zend_ast_export_ex		3897502	0					
ANR	3900160	ArgumentList	str		3897502	1					
ANR	3900161	Argument	str		3897502	0					
ANR	3900162	Identifier	str		3897502	0					
ANR	3900163	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3900164	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3900165	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900166	Identifier	ast		3897502	0					
ANR	3900167	Identifier	child		3897502	1					
ANR	3900168	PrimaryExpression	1		3897502	1					
ANR	3900169	Argument	80		3897502	2					
ANR	3900170	PrimaryExpression	80		3897502	0					
ANR	3900171	Argument	indent		3897502	3					
ANR	3900172	Identifier	indent		3897502	0					
ANR	3900173	ExpressionStatement	"smart_str_appends ( str , "" => "" )"	1341:4:37357:37387	3897502	1	True				
ANR	3900174	CallExpression	"smart_str_appends ( str , "" => "" )"		3897502	0					
ANR	3900175	Callee	smart_str_appends		3897502	0					
ANR	3900176	Identifier	smart_str_appends		3897502	0					
ANR	3900177	ArgumentList	str		3897502	1					
ANR	3900178	Argument	str		3897502	0					
ANR	3900179	Identifier	str		3897502	0					
ANR	3900180	Argument	""" => """		3897502	1					
ANR	3900181	PrimaryExpression	""" => """		3897502	0					
ANR	3900182	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 80 , indent )"	1343:3:37397:37447	3897502	218	True				
ANR	3900183	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 80 , indent )"		3897502	0					
ANR	3900184	Callee	zend_ast_export_ex		3897502	0					
ANR	3900185	Identifier	zend_ast_export_ex		3897502	0					
ANR	3900186	ArgumentList	str		3897502	1					
ANR	3900187	Argument	str		3897502	0					
ANR	3900188	Identifier	str		3897502	0					
ANR	3900189	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3900190	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3900191	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900192	Identifier	ast		3897502	0					
ANR	3900193	Identifier	child		3897502	1					
ANR	3900194	PrimaryExpression	0		3897502	1					
ANR	3900195	Argument	80		3897502	2					
ANR	3900196	PrimaryExpression	80		3897502	0					
ANR	3900197	Argument	indent		3897502	3					
ANR	3900198	Identifier	indent		3897502	0					
ANR	3900199	BreakStatement	break ;	1344:3:37452:37457	3897502	219	True				
ANR	3900200	Label	case ZEND_AST_NEW :	1345:2:37461:37478	3897502	220	True				
ANR	3900201	Identifier	ZEND_AST_NEW		3897502	0					
ANR	3900202	ExpressionStatement	"smart_str_appends ( str , ""new "" )"	1346:3:37483:37513	3897502	221	True				
ANR	3900203	CallExpression	"smart_str_appends ( str , ""new "" )"		3897502	0					
ANR	3900204	Callee	smart_str_appends		3897502	0					
ANR	3900205	Identifier	smart_str_appends		3897502	0					
ANR	3900206	ArgumentList	str		3897502	1					
ANR	3900207	Argument	str		3897502	0					
ANR	3900208	Identifier	str		3897502	0					
ANR	3900209	Argument	"""new """		3897502	1					
ANR	3900210	PrimaryExpression	"""new """		3897502	0					
ANR	3900211	ExpressionStatement	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"	1347:3:37518:37572	3897502	222	True				
ANR	3900212	CallExpression	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3900213	Callee	zend_ast_export_ns_name		3897502	0					
ANR	3900214	Identifier	zend_ast_export_ns_name		3897502	0					
ANR	3900215	ArgumentList	str		3897502	1					
ANR	3900216	Argument	str		3897502	0					
ANR	3900217	Identifier	str		3897502	0					
ANR	3900218	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3900219	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3900220	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900221	Identifier	ast		3897502	0					
ANR	3900222	Identifier	child		3897502	1					
ANR	3900223	PrimaryExpression	0		3897502	1					
ANR	3900224	Argument	0		3897502	2					
ANR	3900225	PrimaryExpression	0		3897502	0					
ANR	3900226	Argument	indent		3897502	3					
ANR	3900227	Identifier	indent		3897502	0					
ANR	3900228	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1348:3:37577:37604	3897502	223	True				
ANR	3900229	CallExpression	"smart_str_appendc ( str , '(' )"		3897502	0					
ANR	3900230	Callee	smart_str_appendc		3897502	0					
ANR	3900231	Identifier	smart_str_appendc		3897502	0					
ANR	3900232	ArgumentList	str		3897502	1					
ANR	3900233	Argument	str		3897502	0					
ANR	3900234	Identifier	str		3897502	0					
ANR	3900235	Argument	'('		3897502	1					
ANR	3900236	PrimaryExpression	'('		3897502	0					
ANR	3900237	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"	1349:3:37609:37658	3897502	224	True				
ANR	3900238	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3900239	Callee	zend_ast_export_ex		3897502	0					
ANR	3900240	Identifier	zend_ast_export_ex		3897502	0					
ANR	3900241	ArgumentList	str		3897502	1					
ANR	3900242	Argument	str		3897502	0					
ANR	3900243	Identifier	str		3897502	0					
ANR	3900244	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3900245	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3900246	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900247	Identifier	ast		3897502	0					
ANR	3900248	Identifier	child		3897502	1					
ANR	3900249	PrimaryExpression	1		3897502	1					
ANR	3900250	Argument	0		3897502	2					
ANR	3900251	PrimaryExpression	0		3897502	0					
ANR	3900252	Argument	indent		3897502	3					
ANR	3900253	Identifier	indent		3897502	0					
ANR	3900254	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1350:3:37663:37690	3897502	225	True				
ANR	3900255	CallExpression	"smart_str_appendc ( str , ')' )"		3897502	0					
ANR	3900256	Callee	smart_str_appendc		3897502	0					
ANR	3900257	Identifier	smart_str_appendc		3897502	0					
ANR	3900258	ArgumentList	str		3897502	1					
ANR	3900259	Argument	str		3897502	0					
ANR	3900260	Identifier	str		3897502	0					
ANR	3900261	Argument	')'		3897502	1					
ANR	3900262	PrimaryExpression	')'		3897502	0					
ANR	3900263	BreakStatement	break ;	1351:3:37695:37700	3897502	226	True				
ANR	3900264	Label	case ZEND_AST_INSTANCEOF :	1352:2:37704:37728	3897502	227	True				
ANR	3900265	Identifier	ZEND_AST_INSTANCEOF		3897502	0					
ANR	3900266	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1353:3:37733:37782	3897502	228	True				
ANR	3900267	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3900268	Callee	zend_ast_export_ex		3897502	0					
ANR	3900269	Identifier	zend_ast_export_ex		3897502	0					
ANR	3900270	ArgumentList	str		3897502	1					
ANR	3900271	Argument	str		3897502	0					
ANR	3900272	Identifier	str		3897502	0					
ANR	3900273	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3900274	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3900275	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900276	Identifier	ast		3897502	0					
ANR	3900277	Identifier	child		3897502	1					
ANR	3900278	PrimaryExpression	0		3897502	1					
ANR	3900279	Argument	0		3897502	2					
ANR	3900280	PrimaryExpression	0		3897502	0					
ANR	3900281	Argument	indent		3897502	3					
ANR	3900282	Identifier	indent		3897502	0					
ANR	3900283	ExpressionStatement	"smart_str_appends ( str , "" instanceof "" )"	1354:3:37787:37825	3897502	229	True				
ANR	3900284	CallExpression	"smart_str_appends ( str , "" instanceof "" )"		3897502	0					
ANR	3900285	Callee	smart_str_appends		3897502	0					
ANR	3900286	Identifier	smart_str_appends		3897502	0					
ANR	3900287	ArgumentList	str		3897502	1					
ANR	3900288	Argument	str		3897502	0					
ANR	3900289	Identifier	str		3897502	0					
ANR	3900290	Argument	""" instanceof """		3897502	1					
ANR	3900291	PrimaryExpression	""" instanceof """		3897502	0					
ANR	3900292	ExpressionStatement	"zend_ast_export_ns_name ( str , ast -> child [ 1 ] , 0 , indent )"	1355:3:37830:37884	3897502	230	True				
ANR	3900293	CallExpression	"zend_ast_export_ns_name ( str , ast -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3900294	Callee	zend_ast_export_ns_name		3897502	0					
ANR	3900295	Identifier	zend_ast_export_ns_name		3897502	0					
ANR	3900296	ArgumentList	str		3897502	1					
ANR	3900297	Argument	str		3897502	0					
ANR	3900298	Identifier	str		3897502	0					
ANR	3900299	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3900300	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3900301	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900302	Identifier	ast		3897502	0					
ANR	3900303	Identifier	child		3897502	1					
ANR	3900304	PrimaryExpression	1		3897502	1					
ANR	3900305	Argument	0		3897502	2					
ANR	3900306	PrimaryExpression	0		3897502	0					
ANR	3900307	Argument	indent		3897502	3					
ANR	3900308	Identifier	indent		3897502	0					
ANR	3900309	BreakStatement	break ;	1356:3:37889:37894	3897502	231	True				
ANR	3900310	Label	case ZEND_AST_YIELD :	1357:2:37898:37917	3897502	232	True				
ANR	3900311	Identifier	ZEND_AST_YIELD		3897502	0					
ANR	3900312	IfStatement	if ( priority > 70 )		3897502	233					
ANR	3900313	Condition	priority > 70	1358:7:37926:37938	3897502	0	True				
ANR	3900314	RelationalExpression	priority > 70		3897502	0		>			
ANR	3900315	Identifier	priority		3897502	0					
ANR	3900316	PrimaryExpression	70		3897502	1					
ANR	3900317	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1358:22:37941:37968	3897502	1	True				
ANR	3900318	CallExpression	"smart_str_appendc ( str , '(' )"		3897502	0					
ANR	3900319	Callee	smart_str_appendc		3897502	0					
ANR	3900320	Identifier	smart_str_appendc		3897502	0					
ANR	3900321	ArgumentList	str		3897502	1					
ANR	3900322	Argument	str		3897502	0					
ANR	3900323	Identifier	str		3897502	0					
ANR	3900324	Argument	'('		3897502	1					
ANR	3900325	PrimaryExpression	'('		3897502	0					
ANR	3900326	ExpressionStatement	"smart_str_appends ( str , ""yield "" )"	1359:3:37973:38005	3897502	234	True				
ANR	3900327	CallExpression	"smart_str_appends ( str , ""yield "" )"		3897502	0					
ANR	3900328	Callee	smart_str_appends		3897502	0					
ANR	3900329	Identifier	smart_str_appends		3897502	0					
ANR	3900330	ArgumentList	str		3897502	1					
ANR	3900331	Argument	str		3897502	0					
ANR	3900332	Identifier	str		3897502	0					
ANR	3900333	Argument	"""yield """		3897502	1					
ANR	3900334	PrimaryExpression	"""yield """		3897502	0					
ANR	3900335	IfStatement	if ( ast -> child [ 0 ] )		3897502	235					
ANR	3900336	Condition	ast -> child [ 0 ]	1360:7:38014:38026	3897502	0	True				
ANR	3900337	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3900338	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900339	Identifier	ast		3897502	0					
ANR	3900340	Identifier	child		3897502	1					
ANR	3900341	PrimaryExpression	0		3897502	1					
ANR	3900342	CompoundStatement		393:22:13323:13323	3897502	1					
ANR	3900343	IfStatement	if ( ast -> child [ 1 ] )		3897502	0					
ANR	3900344	Condition	ast -> child [ 1 ]	1361:8:38039:38051	3897502	0	True				
ANR	3900345	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3900346	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900347	Identifier	ast		3897502	0					
ANR	3900348	Identifier	child		3897502	1					
ANR	3900349	PrimaryExpression	1		3897502	1					
ANR	3900350	CompoundStatement		394:23:13348:13348	3897502	1					
ANR	3900351	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 70 , indent )"	1362:5:38061:38111	3897502	0	True				
ANR	3900352	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 70 , indent )"		3897502	0					
ANR	3900353	Callee	zend_ast_export_ex		3897502	0					
ANR	3900354	Identifier	zend_ast_export_ex		3897502	0					
ANR	3900355	ArgumentList	str		3897502	1					
ANR	3900356	Argument	str		3897502	0					
ANR	3900357	Identifier	str		3897502	0					
ANR	3900358	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3900359	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3900360	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900361	Identifier	ast		3897502	0					
ANR	3900362	Identifier	child		3897502	1					
ANR	3900363	PrimaryExpression	1		3897502	1					
ANR	3900364	Argument	70		3897502	2					
ANR	3900365	PrimaryExpression	70		3897502	0					
ANR	3900366	Argument	indent		3897502	3					
ANR	3900367	Identifier	indent		3897502	0					
ANR	3900368	ExpressionStatement	"smart_str_appends ( str , "" => "" )"	1363:5:38118:38148	3897502	1	True				
ANR	3900369	CallExpression	"smart_str_appends ( str , "" => "" )"		3897502	0					
ANR	3900370	Callee	smart_str_appends		3897502	0					
ANR	3900371	Identifier	smart_str_appends		3897502	0					
ANR	3900372	ArgumentList	str		3897502	1					
ANR	3900373	Argument	str		3897502	0					
ANR	3900374	Identifier	str		3897502	0					
ANR	3900375	Argument	""" => """		3897502	1					
ANR	3900376	PrimaryExpression	""" => """		3897502	0					
ANR	3900377	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 70 , indent )"	1365:4:38160:38210	3897502	1	True				
ANR	3900378	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 70 , indent )"		3897502	0					
ANR	3900379	Callee	zend_ast_export_ex		3897502	0					
ANR	3900380	Identifier	zend_ast_export_ex		3897502	0					
ANR	3900381	ArgumentList	str		3897502	1					
ANR	3900382	Argument	str		3897502	0					
ANR	3900383	Identifier	str		3897502	0					
ANR	3900384	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3900385	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3900386	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900387	Identifier	ast		3897502	0					
ANR	3900388	Identifier	child		3897502	1					
ANR	3900389	PrimaryExpression	0		3897502	1					
ANR	3900390	Argument	70		3897502	2					
ANR	3900391	PrimaryExpression	70		3897502	0					
ANR	3900392	Argument	indent		3897502	3					
ANR	3900393	Identifier	indent		3897502	0					
ANR	3900394	IfStatement	if ( priority > 70 )		3897502	236					
ANR	3900395	Condition	priority > 70	1367:7:38224:38236	3897502	0	True				
ANR	3900396	RelationalExpression	priority > 70		3897502	0		>			
ANR	3900397	Identifier	priority		3897502	0					
ANR	3900398	PrimaryExpression	70		3897502	1					
ANR	3900399	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1367:22:38239:38266	3897502	1	True				
ANR	3900400	CallExpression	"smart_str_appendc ( str , ')' )"		3897502	0					
ANR	3900401	Callee	smart_str_appendc		3897502	0					
ANR	3900402	Identifier	smart_str_appendc		3897502	0					
ANR	3900403	ArgumentList	str		3897502	1					
ANR	3900404	Argument	str		3897502	0					
ANR	3900405	Identifier	str		3897502	0					
ANR	3900406	Argument	')'		3897502	1					
ANR	3900407	PrimaryExpression	')'		3897502	0					
ANR	3900408	BreakStatement	break ;	1368:3:38271:38276	3897502	237	True				
ANR	3900409	Label	case ZEND_AST_YIELD_FROM :	1369:2:38280:38304	3897502	238	True				
ANR	3900410	Identifier	ZEND_AST_YIELD_FROM		3897502	0					
ANR	3900411	ExpressionStatement	"PREFIX_OP ( ""yield from "" , 85 , 86 )"	1370:3:38309:38341	3897502	239	True				
ANR	3900412	CallExpression	"PREFIX_OP ( ""yield from "" , 85 , 86 )"		3897502	0					
ANR	3900413	Callee	PREFIX_OP		3897502	0					
ANR	3900414	Identifier	PREFIX_OP		3897502	0					
ANR	3900415	ArgumentList	"""yield from """		3897502	1					
ANR	3900416	Argument	"""yield from """		3897502	0					
ANR	3900417	PrimaryExpression	"""yield from """		3897502	0					
ANR	3900418	Argument	85		3897502	1					
ANR	3900419	PrimaryExpression	85		3897502	0					
ANR	3900420	Argument	86		3897502	2					
ANR	3900421	PrimaryExpression	86		3897502	0					
ANR	3900422	Label	case ZEND_AST_COALESCE :	1371:2:38345:38367	3897502	240	True				
ANR	3900423	Identifier	ZEND_AST_COALESCE		3897502	0					
ANR	3900424	ExpressionStatement	"BINARY_OP ( "" ?? "" , 110 , 111 , 110 )"	1371:26:38369:38401	3897502	241	True				
ANR	3900425	CallExpression	"BINARY_OP ( "" ?? "" , 110 , 111 , 110 )"		3897502	0					
ANR	3900426	Callee	BINARY_OP		3897502	0					
ANR	3900427	Identifier	BINARY_OP		3897502	0					
ANR	3900428	ArgumentList	""" ?? """		3897502	1					
ANR	3900429	Argument	""" ?? """		3897502	0					
ANR	3900430	PrimaryExpression	""" ?? """		3897502	0					
ANR	3900431	Argument	110		3897502	1					
ANR	3900432	PrimaryExpression	110		3897502	0					
ANR	3900433	Argument	111		3897502	2					
ANR	3900434	PrimaryExpression	111		3897502	0					
ANR	3900435	Argument	110		3897502	3					
ANR	3900436	PrimaryExpression	110		3897502	0					
ANR	3900437	Label	case ZEND_AST_STATIC :	1372:2:38405:38425	3897502	242	True				
ANR	3900438	Identifier	ZEND_AST_STATIC		3897502	0					
ANR	3900439	ExpressionStatement	"smart_str_appends ( str , ""static $"" )"	1373:3:38430:38464	3897502	243	True				
ANR	3900440	CallExpression	"smart_str_appends ( str , ""static $"" )"		3897502	0					
ANR	3900441	Callee	smart_str_appends		3897502	0					
ANR	3900442	Identifier	smart_str_appends		3897502	0					
ANR	3900443	ArgumentList	str		3897502	1					
ANR	3900444	Argument	str		3897502	0					
ANR	3900445	Identifier	str		3897502	0					
ANR	3900446	Argument	"""static $"""		3897502	1					
ANR	3900447	PrimaryExpression	"""static $"""		3897502	0					
ANR	3900448	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"	1374:3:38469:38520	3897502	244	True				
ANR	3900449	CallExpression	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3900450	Callee	zend_ast_export_name		3897502	0					
ANR	3900451	Identifier	zend_ast_export_name		3897502	0					
ANR	3900452	ArgumentList	str		3897502	1					
ANR	3900453	Argument	str		3897502	0					
ANR	3900454	Identifier	str		3897502	0					
ANR	3900455	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3900456	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3900457	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900458	Identifier	ast		3897502	0					
ANR	3900459	Identifier	child		3897502	1					
ANR	3900460	PrimaryExpression	0		3897502	1					
ANR	3900461	Argument	0		3897502	2					
ANR	3900462	PrimaryExpression	0		3897502	0					
ANR	3900463	Argument	indent		3897502	3					
ANR	3900464	Identifier	indent		3897502	0					
ANR	3900465	ExpressionStatement	APPEND_DEFAULT_VALUE ( 1 )	1375:3:38525:38548	3897502	245	True				
ANR	3900466	CallExpression	APPEND_DEFAULT_VALUE ( 1 )		3897502	0					
ANR	3900467	Callee	APPEND_DEFAULT_VALUE		3897502	0					
ANR	3900468	Identifier	APPEND_DEFAULT_VALUE		3897502	0					
ANR	3900469	ArgumentList	1		3897502	1					
ANR	3900470	Argument	1		3897502	0					
ANR	3900471	PrimaryExpression	1		3897502	0					
ANR	3900472	Label	case ZEND_AST_WHILE :	1376:2:38552:38571	3897502	246	True				
ANR	3900473	Identifier	ZEND_AST_WHILE		3897502	0					
ANR	3900474	ExpressionStatement	"smart_str_appends ( str , ""while ("" )"	1377:3:38576:38609	3897502	247	True				
ANR	3900475	CallExpression	"smart_str_appends ( str , ""while ("" )"		3897502	0					
ANR	3900476	Callee	smart_str_appends		3897502	0					
ANR	3900477	Identifier	smart_str_appends		3897502	0					
ANR	3900478	ArgumentList	str		3897502	1					
ANR	3900479	Argument	str		3897502	0					
ANR	3900480	Identifier	str		3897502	0					
ANR	3900481	Argument	"""while ("""		3897502	1					
ANR	3900482	PrimaryExpression	"""while ("""		3897502	0					
ANR	3900483	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1378:3:38614:38663	3897502	248	True				
ANR	3900484	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3900485	Callee	zend_ast_export_ex		3897502	0					
ANR	3900486	Identifier	zend_ast_export_ex		3897502	0					
ANR	3900487	ArgumentList	str		3897502	1					
ANR	3900488	Argument	str		3897502	0					
ANR	3900489	Identifier	str		3897502	0					
ANR	3900490	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3900491	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3900492	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900493	Identifier	ast		3897502	0					
ANR	3900494	Identifier	child		3897502	1					
ANR	3900495	PrimaryExpression	0		3897502	1					
ANR	3900496	Argument	0		3897502	2					
ANR	3900497	PrimaryExpression	0		3897502	0					
ANR	3900498	Argument	indent		3897502	3					
ANR	3900499	Identifier	indent		3897502	0					
ANR	3900500	ExpressionStatement	"smart_str_appends ( str , "") {\\n"" )"	1379:3:38668:38699	3897502	249	True				
ANR	3900501	CallExpression	"smart_str_appends ( str , "") {\\n"" )"		3897502	0					
ANR	3900502	Callee	smart_str_appends		3897502	0					
ANR	3900503	Identifier	smart_str_appends		3897502	0					
ANR	3900504	ArgumentList	str		3897502	1					
ANR	3900505	Argument	str		3897502	0					
ANR	3900506	Identifier	str		3897502	0					
ANR	3900507	Argument	""") {\\n"""		3897502	1					
ANR	3900508	PrimaryExpression	""") {\\n"""		3897502	0					
ANR	3900509	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"	1380:3:38704:38756	3897502	250	True				
ANR	3900510	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"		3897502	0					
ANR	3900511	Callee	zend_ast_export_stmt		3897502	0					
ANR	3900512	Identifier	zend_ast_export_stmt		3897502	0					
ANR	3900513	ArgumentList	str		3897502	1					
ANR	3900514	Argument	str		3897502	0					
ANR	3900515	Identifier	str		3897502	0					
ANR	3900516	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3900517	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3900518	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900519	Identifier	ast		3897502	0					
ANR	3900520	Identifier	child		3897502	1					
ANR	3900521	PrimaryExpression	1		3897502	1					
ANR	3900522	Argument	indent + 1		3897502	2					
ANR	3900523	AdditiveExpression	indent + 1		3897502	0		+			
ANR	3900524	Identifier	indent		3897502	0					
ANR	3900525	PrimaryExpression	1		3897502	1					
ANR	3900526	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1381:3:38761:38796	3897502	251	True				
ANR	3900527	CallExpression	"zend_ast_export_indent ( str , indent )"		3897502	0					
ANR	3900528	Callee	zend_ast_export_indent		3897502	0					
ANR	3900529	Identifier	zend_ast_export_indent		3897502	0					
ANR	3900530	ArgumentList	str		3897502	1					
ANR	3900531	Argument	str		3897502	0					
ANR	3900532	Identifier	str		3897502	0					
ANR	3900533	Argument	indent		3897502	1					
ANR	3900534	Identifier	indent		3897502	0					
ANR	3900535	ExpressionStatement	"smart_str_appendc ( str , '}' )"	1382:3:38801:38828	3897502	252	True				
ANR	3900536	CallExpression	"smart_str_appendc ( str , '}' )"		3897502	0					
ANR	3900537	Callee	smart_str_appendc		3897502	0					
ANR	3900538	Identifier	smart_str_appendc		3897502	0					
ANR	3900539	ArgumentList	str		3897502	1					
ANR	3900540	Argument	str		3897502	0					
ANR	3900541	Identifier	str		3897502	0					
ANR	3900542	Argument	'}'		3897502	1					
ANR	3900543	PrimaryExpression	'}'		3897502	0					
ANR	3900544	BreakStatement	break ;	1383:3:38833:38838	3897502	253	True				
ANR	3900545	Label	case ZEND_AST_DO_WHILE :	1384:2:38842:38864	3897502	254	True				
ANR	3900546	Identifier	ZEND_AST_DO_WHILE		3897502	0					
ANR	3900547	ExpressionStatement	"smart_str_appends ( str , ""do {\\n"" )"	1385:3:38869:38901	3897502	255	True				
ANR	3900548	CallExpression	"smart_str_appends ( str , ""do {\\n"" )"		3897502	0					
ANR	3900549	Callee	smart_str_appends		3897502	0					
ANR	3900550	Identifier	smart_str_appends		3897502	0					
ANR	3900551	ArgumentList	str		3897502	1					
ANR	3900552	Argument	str		3897502	0					
ANR	3900553	Identifier	str		3897502	0					
ANR	3900554	Argument	"""do {\\n"""		3897502	1					
ANR	3900555	PrimaryExpression	"""do {\\n"""		3897502	0					
ANR	3900556	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 0 ] , indent + 1 )"	1386:3:38906:38958	3897502	256	True				
ANR	3900557	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 0 ] , indent + 1 )"		3897502	0					
ANR	3900558	Callee	zend_ast_export_stmt		3897502	0					
ANR	3900559	Identifier	zend_ast_export_stmt		3897502	0					
ANR	3900560	ArgumentList	str		3897502	1					
ANR	3900561	Argument	str		3897502	0					
ANR	3900562	Identifier	str		3897502	0					
ANR	3900563	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3900564	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3900565	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900566	Identifier	ast		3897502	0					
ANR	3900567	Identifier	child		3897502	1					
ANR	3900568	PrimaryExpression	0		3897502	1					
ANR	3900569	Argument	indent + 1		3897502	2					
ANR	3900570	AdditiveExpression	indent + 1		3897502	0		+			
ANR	3900571	Identifier	indent		3897502	0					
ANR	3900572	PrimaryExpression	1		3897502	1					
ANR	3900573	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1387:3:38963:38998	3897502	257	True				
ANR	3900574	CallExpression	"zend_ast_export_indent ( str , indent )"		3897502	0					
ANR	3900575	Callee	zend_ast_export_indent		3897502	0					
ANR	3900576	Identifier	zend_ast_export_indent		3897502	0					
ANR	3900577	ArgumentList	str		3897502	1					
ANR	3900578	Argument	str		3897502	0					
ANR	3900579	Identifier	str		3897502	0					
ANR	3900580	Argument	indent		3897502	1					
ANR	3900581	Identifier	indent		3897502	0					
ANR	3900582	ExpressionStatement	"smart_str_appends ( str , ""} while ("" )"	1388:3:39003:39038	3897502	258	True				
ANR	3900583	CallExpression	"smart_str_appends ( str , ""} while ("" )"		3897502	0					
ANR	3900584	Callee	smart_str_appends		3897502	0					
ANR	3900585	Identifier	smart_str_appends		3897502	0					
ANR	3900586	ArgumentList	str		3897502	1					
ANR	3900587	Argument	str		3897502	0					
ANR	3900588	Identifier	str		3897502	0					
ANR	3900589	Argument	"""} while ("""		3897502	1					
ANR	3900590	PrimaryExpression	"""} while ("""		3897502	0					
ANR	3900591	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"	1389:3:39043:39092	3897502	259	True				
ANR	3900592	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3900593	Callee	zend_ast_export_ex		3897502	0					
ANR	3900594	Identifier	zend_ast_export_ex		3897502	0					
ANR	3900595	ArgumentList	str		3897502	1					
ANR	3900596	Argument	str		3897502	0					
ANR	3900597	Identifier	str		3897502	0					
ANR	3900598	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3900599	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3900600	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900601	Identifier	ast		3897502	0					
ANR	3900602	Identifier	child		3897502	1					
ANR	3900603	PrimaryExpression	1		3897502	1					
ANR	3900604	Argument	0		3897502	2					
ANR	3900605	PrimaryExpression	0		3897502	0					
ANR	3900606	Argument	indent		3897502	3					
ANR	3900607	Identifier	indent		3897502	0					
ANR	3900608	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1390:3:39097:39124	3897502	260	True				
ANR	3900609	CallExpression	"smart_str_appendc ( str , ')' )"		3897502	0					
ANR	3900610	Callee	smart_str_appendc		3897502	0					
ANR	3900611	Identifier	smart_str_appendc		3897502	0					
ANR	3900612	ArgumentList	str		3897502	1					
ANR	3900613	Argument	str		3897502	0					
ANR	3900614	Identifier	str		3897502	0					
ANR	3900615	Argument	')'		3897502	1					
ANR	3900616	PrimaryExpression	')'		3897502	0					
ANR	3900617	BreakStatement	break ;	1391:3:39129:39134	3897502	261	True				
ANR	3900618	Label	case ZEND_AST_IF_ELEM :	1393:2:39139:39160	3897502	262	True				
ANR	3900619	Identifier	ZEND_AST_IF_ELEM		3897502	0					
ANR	3900620	IfStatement	if ( ast -> child [ 0 ] )		3897502	263					
ANR	3900621	Condition	ast -> child [ 0 ]	1394:7:39169:39181	3897502	0	True				
ANR	3900622	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3900623	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900624	Identifier	ast		3897502	0					
ANR	3900625	Identifier	child		3897502	1					
ANR	3900626	PrimaryExpression	0		3897502	1					
ANR	3900627	CompoundStatement		427:22:14478:14478	3897502	1					
ANR	3900628	ExpressionStatement	"smart_str_appends ( str , ""if ("" )"	1395:4:39190:39220	3897502	0	True				
ANR	3900629	CallExpression	"smart_str_appends ( str , ""if ("" )"		3897502	0					
ANR	3900630	Callee	smart_str_appends		3897502	0					
ANR	3900631	Identifier	smart_str_appends		3897502	0					
ANR	3900632	ArgumentList	str		3897502	1					
ANR	3900633	Argument	str		3897502	0					
ANR	3900634	Identifier	str		3897502	0					
ANR	3900635	Argument	"""if ("""		3897502	1					
ANR	3900636	PrimaryExpression	"""if ("""		3897502	0					
ANR	3900637	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1396:4:39226:39275	3897502	1	True				
ANR	3900638	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3900639	Callee	zend_ast_export_ex		3897502	0					
ANR	3900640	Identifier	zend_ast_export_ex		3897502	0					
ANR	3900641	ArgumentList	str		3897502	1					
ANR	3900642	Argument	str		3897502	0					
ANR	3900643	Identifier	str		3897502	0					
ANR	3900644	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3900645	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3900646	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900647	Identifier	ast		3897502	0					
ANR	3900648	Identifier	child		3897502	1					
ANR	3900649	PrimaryExpression	0		3897502	1					
ANR	3900650	Argument	0		3897502	2					
ANR	3900651	PrimaryExpression	0		3897502	0					
ANR	3900652	Argument	indent		3897502	3					
ANR	3900653	Identifier	indent		3897502	0					
ANR	3900654	ExpressionStatement	"smart_str_appends ( str , "") {\\n"" )"	1397:4:39281:39312	3897502	2	True				
ANR	3900655	CallExpression	"smart_str_appends ( str , "") {\\n"" )"		3897502	0					
ANR	3900656	Callee	smart_str_appends		3897502	0					
ANR	3900657	Identifier	smart_str_appends		3897502	0					
ANR	3900658	ArgumentList	str		3897502	1					
ANR	3900659	Argument	str		3897502	0					
ANR	3900660	Identifier	str		3897502	0					
ANR	3900661	Argument	""") {\\n"""		3897502	1					
ANR	3900662	PrimaryExpression	""") {\\n"""		3897502	0					
ANR	3900663	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"	1398:4:39318:39370	3897502	3	True				
ANR	3900664	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"		3897502	0					
ANR	3900665	Callee	zend_ast_export_stmt		3897502	0					
ANR	3900666	Identifier	zend_ast_export_stmt		3897502	0					
ANR	3900667	ArgumentList	str		3897502	1					
ANR	3900668	Argument	str		3897502	0					
ANR	3900669	Identifier	str		3897502	0					
ANR	3900670	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3900671	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3900672	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900673	Identifier	ast		3897502	0					
ANR	3900674	Identifier	child		3897502	1					
ANR	3900675	PrimaryExpression	1		3897502	1					
ANR	3900676	Argument	indent + 1		3897502	2					
ANR	3900677	AdditiveExpression	indent + 1		3897502	0		+			
ANR	3900678	Identifier	indent		3897502	0					
ANR	3900679	PrimaryExpression	1		3897502	1					
ANR	3900680	ElseStatement	else		3897502	0					
ANR	3900681	CompoundStatement		432:10:14676:14676	3897502	0					
ANR	3900682	ExpressionStatement	"smart_str_appends ( str , ""else {\\n"" )"	1400:4:39388:39422	3897502	0	True				
ANR	3900683	CallExpression	"smart_str_appends ( str , ""else {\\n"" )"		3897502	0					
ANR	3900684	Callee	smart_str_appends		3897502	0					
ANR	3900685	Identifier	smart_str_appends		3897502	0					
ANR	3900686	ArgumentList	str		3897502	1					
ANR	3900687	Argument	str		3897502	0					
ANR	3900688	Identifier	str		3897502	0					
ANR	3900689	Argument	"""else {\\n"""		3897502	1					
ANR	3900690	PrimaryExpression	"""else {\\n"""		3897502	0					
ANR	3900691	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"	1401:4:39428:39480	3897502	1	True				
ANR	3900692	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"		3897502	0					
ANR	3900693	Callee	zend_ast_export_stmt		3897502	0					
ANR	3900694	Identifier	zend_ast_export_stmt		3897502	0					
ANR	3900695	ArgumentList	str		3897502	1					
ANR	3900696	Argument	str		3897502	0					
ANR	3900697	Identifier	str		3897502	0					
ANR	3900698	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3900699	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3900700	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900701	Identifier	ast		3897502	0					
ANR	3900702	Identifier	child		3897502	1					
ANR	3900703	PrimaryExpression	1		3897502	1					
ANR	3900704	Argument	indent + 1		3897502	2					
ANR	3900705	AdditiveExpression	indent + 1		3897502	0		+			
ANR	3900706	Identifier	indent		3897502	0					
ANR	3900707	PrimaryExpression	1		3897502	1					
ANR	3900708	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1403:3:39490:39525	3897502	264	True				
ANR	3900709	CallExpression	"zend_ast_export_indent ( str , indent )"		3897502	0					
ANR	3900710	Callee	zend_ast_export_indent		3897502	0					
ANR	3900711	Identifier	zend_ast_export_indent		3897502	0					
ANR	3900712	ArgumentList	str		3897502	1					
ANR	3900713	Argument	str		3897502	0					
ANR	3900714	Identifier	str		3897502	0					
ANR	3900715	Argument	indent		3897502	1					
ANR	3900716	Identifier	indent		3897502	0					
ANR	3900717	ExpressionStatement	"smart_str_appendc ( str , '}' )"	1404:3:39530:39557	3897502	265	True				
ANR	3900718	CallExpression	"smart_str_appendc ( str , '}' )"		3897502	0					
ANR	3900719	Callee	smart_str_appendc		3897502	0					
ANR	3900720	Identifier	smart_str_appendc		3897502	0					
ANR	3900721	ArgumentList	str		3897502	1					
ANR	3900722	Argument	str		3897502	0					
ANR	3900723	Identifier	str		3897502	0					
ANR	3900724	Argument	'}'		3897502	1					
ANR	3900725	PrimaryExpression	'}'		3897502	0					
ANR	3900726	BreakStatement	break ;	1405:3:39562:39567	3897502	266	True				
ANR	3900727	Label	case ZEND_AST_SWITCH :	1406:2:39571:39591	3897502	267	True				
ANR	3900728	Identifier	ZEND_AST_SWITCH		3897502	0					
ANR	3900729	ExpressionStatement	"smart_str_appends ( str , ""switch ("" )"	1407:3:39596:39630	3897502	268	True				
ANR	3900730	CallExpression	"smart_str_appends ( str , ""switch ("" )"		3897502	0					
ANR	3900731	Callee	smart_str_appends		3897502	0					
ANR	3900732	Identifier	smart_str_appends		3897502	0					
ANR	3900733	ArgumentList	str		3897502	1					
ANR	3900734	Argument	str		3897502	0					
ANR	3900735	Identifier	str		3897502	0					
ANR	3900736	Argument	"""switch ("""		3897502	1					
ANR	3900737	PrimaryExpression	"""switch ("""		3897502	0					
ANR	3900738	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1408:3:39635:39684	3897502	269	True				
ANR	3900739	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3900740	Callee	zend_ast_export_ex		3897502	0					
ANR	3900741	Identifier	zend_ast_export_ex		3897502	0					
ANR	3900742	ArgumentList	str		3897502	1					
ANR	3900743	Argument	str		3897502	0					
ANR	3900744	Identifier	str		3897502	0					
ANR	3900745	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3900746	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3900747	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900748	Identifier	ast		3897502	0					
ANR	3900749	Identifier	child		3897502	1					
ANR	3900750	PrimaryExpression	0		3897502	1					
ANR	3900751	Argument	0		3897502	2					
ANR	3900752	PrimaryExpression	0		3897502	0					
ANR	3900753	Argument	indent		3897502	3					
ANR	3900754	Identifier	indent		3897502	0					
ANR	3900755	ExpressionStatement	"smart_str_appends ( str , "") {\\n"" )"	1409:3:39689:39720	3897502	270	True				
ANR	3900756	CallExpression	"smart_str_appends ( str , "") {\\n"" )"		3897502	0					
ANR	3900757	Callee	smart_str_appends		3897502	0					
ANR	3900758	Identifier	smart_str_appends		3897502	0					
ANR	3900759	ArgumentList	str		3897502	1					
ANR	3900760	Argument	str		3897502	0					
ANR	3900761	Identifier	str		3897502	0					
ANR	3900762	Argument	""") {\\n"""		3897502	1					
ANR	3900763	PrimaryExpression	""") {\\n"""		3897502	0					
ANR	3900764	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent + 1 )"	1410:3:39725:39778	3897502	271	True				
ANR	3900765	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent + 1 )"		3897502	0					
ANR	3900766	Callee	zend_ast_export_ex		3897502	0					
ANR	3900767	Identifier	zend_ast_export_ex		3897502	0					
ANR	3900768	ArgumentList	str		3897502	1					
ANR	3900769	Argument	str		3897502	0					
ANR	3900770	Identifier	str		3897502	0					
ANR	3900771	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3900772	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3900773	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900774	Identifier	ast		3897502	0					
ANR	3900775	Identifier	child		3897502	1					
ANR	3900776	PrimaryExpression	1		3897502	1					
ANR	3900777	Argument	0		3897502	2					
ANR	3900778	PrimaryExpression	0		3897502	0					
ANR	3900779	Argument	indent + 1		3897502	3					
ANR	3900780	AdditiveExpression	indent + 1		3897502	0		+			
ANR	3900781	Identifier	indent		3897502	0					
ANR	3900782	PrimaryExpression	1		3897502	1					
ANR	3900783	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1411:3:39783:39818	3897502	272	True				
ANR	3900784	CallExpression	"zend_ast_export_indent ( str , indent )"		3897502	0					
ANR	3900785	Callee	zend_ast_export_indent		3897502	0					
ANR	3900786	Identifier	zend_ast_export_indent		3897502	0					
ANR	3900787	ArgumentList	str		3897502	1					
ANR	3900788	Argument	str		3897502	0					
ANR	3900789	Identifier	str		3897502	0					
ANR	3900790	Argument	indent		3897502	1					
ANR	3900791	Identifier	indent		3897502	0					
ANR	3900792	ExpressionStatement	"smart_str_appendc ( str , '}' )"	1412:3:39823:39850	3897502	273	True				
ANR	3900793	CallExpression	"smart_str_appendc ( str , '}' )"		3897502	0					
ANR	3900794	Callee	smart_str_appendc		3897502	0					
ANR	3900795	Identifier	smart_str_appendc		3897502	0					
ANR	3900796	ArgumentList	str		3897502	1					
ANR	3900797	Argument	str		3897502	0					
ANR	3900798	Identifier	str		3897502	0					
ANR	3900799	Argument	'}'		3897502	1					
ANR	3900800	PrimaryExpression	'}'		3897502	0					
ANR	3900801	BreakStatement	break ;	1413:3:39855:39860	3897502	274	True				
ANR	3900802	Label	case ZEND_AST_SWITCH_CASE :	1414:2:39864:39889	3897502	275	True				
ANR	3900803	Identifier	ZEND_AST_SWITCH_CASE		3897502	0					
ANR	3900804	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1415:3:39894:39929	3897502	276	True				
ANR	3900805	CallExpression	"zend_ast_export_indent ( str , indent )"		3897502	0					
ANR	3900806	Callee	zend_ast_export_indent		3897502	0					
ANR	3900807	Identifier	zend_ast_export_indent		3897502	0					
ANR	3900808	ArgumentList	str		3897502	1					
ANR	3900809	Argument	str		3897502	0					
ANR	3900810	Identifier	str		3897502	0					
ANR	3900811	Argument	indent		3897502	1					
ANR	3900812	Identifier	indent		3897502	0					
ANR	3900813	IfStatement	if ( ast -> child [ 0 ] )		3897502	277					
ANR	3900814	Condition	ast -> child [ 0 ]	1416:7:39938:39950	3897502	0	True				
ANR	3900815	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3900816	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900817	Identifier	ast		3897502	0					
ANR	3900818	Identifier	child		3897502	1					
ANR	3900819	PrimaryExpression	0		3897502	1					
ANR	3900820	CompoundStatement		449:22:15247:15247	3897502	1					
ANR	3900821	ExpressionStatement	"smart_str_appends ( str , ""case "" )"	1417:4:39959:39990	3897502	0	True				
ANR	3900822	CallExpression	"smart_str_appends ( str , ""case "" )"		3897502	0					
ANR	3900823	Callee	smart_str_appends		3897502	0					
ANR	3900824	Identifier	smart_str_appends		3897502	0					
ANR	3900825	ArgumentList	str		3897502	1					
ANR	3900826	Argument	str		3897502	0					
ANR	3900827	Identifier	str		3897502	0					
ANR	3900828	Argument	"""case """		3897502	1					
ANR	3900829	PrimaryExpression	"""case """		3897502	0					
ANR	3900830	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1418:4:39996:40045	3897502	1	True				
ANR	3900831	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3900832	Callee	zend_ast_export_ex		3897502	0					
ANR	3900833	Identifier	zend_ast_export_ex		3897502	0					
ANR	3900834	ArgumentList	str		3897502	1					
ANR	3900835	Argument	str		3897502	0					
ANR	3900836	Identifier	str		3897502	0					
ANR	3900837	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3900838	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3900839	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900840	Identifier	ast		3897502	0					
ANR	3900841	Identifier	child		3897502	1					
ANR	3900842	PrimaryExpression	0		3897502	1					
ANR	3900843	Argument	0		3897502	2					
ANR	3900844	PrimaryExpression	0		3897502	0					
ANR	3900845	Argument	indent		3897502	3					
ANR	3900846	Identifier	indent		3897502	0					
ANR	3900847	ExpressionStatement	"smart_str_appends ( str , "":\\n"" )"	1419:4:40051:40080	3897502	2	True				
ANR	3900848	CallExpression	"smart_str_appends ( str , "":\\n"" )"		3897502	0					
ANR	3900849	Callee	smart_str_appends		3897502	0					
ANR	3900850	Identifier	smart_str_appends		3897502	0					
ANR	3900851	ArgumentList	str		3897502	1					
ANR	3900852	Argument	str		3897502	0					
ANR	3900853	Identifier	str		3897502	0					
ANR	3900854	Argument	""":\\n"""		3897502	1					
ANR	3900855	PrimaryExpression	""":\\n"""		3897502	0					
ANR	3900856	ElseStatement	else		3897502	0					
ANR	3900857	CompoundStatement		453:10:15386:15386	3897502	0					
ANR	3900858	ExpressionStatement	"smart_str_appends ( str , ""default:\\n"" )"	1421:4:40098:40134	3897502	0	True				
ANR	3900859	CallExpression	"smart_str_appends ( str , ""default:\\n"" )"		3897502	0					
ANR	3900860	Callee	smart_str_appends		3897502	0					
ANR	3900861	Identifier	smart_str_appends		3897502	0					
ANR	3900862	ArgumentList	str		3897502	1					
ANR	3900863	Argument	str		3897502	0					
ANR	3900864	Identifier	str		3897502	0					
ANR	3900865	Argument	"""default:\\n"""		3897502	1					
ANR	3900866	PrimaryExpression	"""default:\\n"""		3897502	0					
ANR	3900867	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"	1423:3:40144:40196	3897502	278	True				
ANR	3900868	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"		3897502	0					
ANR	3900869	Callee	zend_ast_export_stmt		3897502	0					
ANR	3900870	Identifier	zend_ast_export_stmt		3897502	0					
ANR	3900871	ArgumentList	str		3897502	1					
ANR	3900872	Argument	str		3897502	0					
ANR	3900873	Identifier	str		3897502	0					
ANR	3900874	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3900875	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3900876	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900877	Identifier	ast		3897502	0					
ANR	3900878	Identifier	child		3897502	1					
ANR	3900879	PrimaryExpression	1		3897502	1					
ANR	3900880	Argument	indent + 1		3897502	2					
ANR	3900881	AdditiveExpression	indent + 1		3897502	0		+			
ANR	3900882	Identifier	indent		3897502	0					
ANR	3900883	PrimaryExpression	1		3897502	1					
ANR	3900884	BreakStatement	break ;	1424:3:40201:40206	3897502	279	True				
ANR	3900885	Label	case ZEND_AST_DECLARE :	1425:2:40210:40231	3897502	280	True				
ANR	3900886	Identifier	ZEND_AST_DECLARE		3897502	0					
ANR	3900887	ExpressionStatement	"smart_str_appends ( str , ""declare("" )"	1426:3:40236:40270	3897502	281	True				
ANR	3900888	CallExpression	"smart_str_appends ( str , ""declare("" )"		3897502	0					
ANR	3900889	Callee	smart_str_appends		3897502	0					
ANR	3900890	Identifier	smart_str_appends		3897502	0					
ANR	3900891	ArgumentList	str		3897502	1					
ANR	3900892	Argument	str		3897502	0					
ANR	3900893	Identifier	str		3897502	0					
ANR	3900894	Argument	"""declare("""		3897502	1					
ANR	3900895	PrimaryExpression	"""declare("""		3897502	0					
ANR	3900896	ExpressionStatement	ZEND_ASSERT ( ast -> child [ 0 ] -> kind == ZEND_AST_CONST_DECL )	1427:3:40275:40330	3897502	282	True				
ANR	3900897	CallExpression	ZEND_ASSERT ( ast -> child [ 0 ] -> kind == ZEND_AST_CONST_DECL )		3897502	0					
ANR	3900898	Callee	ZEND_ASSERT		3897502	0					
ANR	3900899	Identifier	ZEND_ASSERT		3897502	0					
ANR	3900900	ArgumentList	ast -> child [ 0 ] -> kind == ZEND_AST_CONST_DECL		3897502	1					
ANR	3900901	Argument	ast -> child [ 0 ] -> kind == ZEND_AST_CONST_DECL		3897502	0					
ANR	3900902	EqualityExpression	ast -> child [ 0 ] -> kind == ZEND_AST_CONST_DECL		3897502	0		==			
ANR	3900903	PtrMemberAccess	ast -> child [ 0 ] -> kind		3897502	0					
ANR	3900904	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3900905	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900906	Identifier	ast		3897502	0					
ANR	3900907	Identifier	child		3897502	1					
ANR	3900908	PrimaryExpression	0		3897502	1					
ANR	3900909	Identifier	kind		3897502	1					
ANR	3900910	Identifier	ZEND_AST_CONST_DECL		3897502	1					
ANR	3900911	ExpressionStatement	"zend_ast_export_list ( str , ( zend_ast_list * ) ast -> child [ 0 ] , 1 , 0 , indent )"	1428:3:40335:40405	3897502	283	True				
ANR	3900912	CallExpression	"zend_ast_export_list ( str , ( zend_ast_list * ) ast -> child [ 0 ] , 1 , 0 , indent )"		3897502	0					
ANR	3900913	Callee	zend_ast_export_list		3897502	0					
ANR	3900914	Identifier	zend_ast_export_list		3897502	0					
ANR	3900915	ArgumentList	str		3897502	1					
ANR	3900916	Argument	str		3897502	0					
ANR	3900917	Identifier	str		3897502	0					
ANR	3900918	Argument	( zend_ast_list * ) ast -> child [ 0 ]		3897502	1					
ANR	3900919	CastExpression	( zend_ast_list * ) ast -> child [ 0 ]		3897502	0					
ANR	3900920	CastTarget	zend_ast_list *		3897502	0					
ANR	3900921	ArrayIndexing	ast -> child [ 0 ]		3897502	1					
ANR	3900922	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900923	Identifier	ast		3897502	0					
ANR	3900924	Identifier	child		3897502	1					
ANR	3900925	PrimaryExpression	0		3897502	1					
ANR	3900926	Argument	1		3897502	2					
ANR	3900927	PrimaryExpression	1		3897502	0					
ANR	3900928	Argument	0		3897502	3					
ANR	3900929	PrimaryExpression	0		3897502	0					
ANR	3900930	Argument	indent		3897502	4					
ANR	3900931	Identifier	indent		3897502	0					
ANR	3900932	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1429:3:40410:40437	3897502	284	True				
ANR	3900933	CallExpression	"smart_str_appendc ( str , ')' )"		3897502	0					
ANR	3900934	Callee	smart_str_appendc		3897502	0					
ANR	3900935	Identifier	smart_str_appendc		3897502	0					
ANR	3900936	ArgumentList	str		3897502	1					
ANR	3900937	Argument	str		3897502	0					
ANR	3900938	Identifier	str		3897502	0					
ANR	3900939	Argument	')'		3897502	1					
ANR	3900940	PrimaryExpression	')'		3897502	0					
ANR	3900941	IfStatement	if ( ast -> child [ 1 ] )		3897502	285					
ANR	3900942	Condition	ast -> child [ 1 ]	1430:7:40446:40458	3897502	0	True				
ANR	3900943	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3900944	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900945	Identifier	ast		3897502	0					
ANR	3900946	Identifier	child		3897502	1					
ANR	3900947	PrimaryExpression	1		3897502	1					
ANR	3900948	CompoundStatement		463:22:15755:15755	3897502	1					
ANR	3900949	ExpressionStatement	"smart_str_appends ( str , "" {\\n"" )"	1431:4:40467:40497	3897502	0	True				
ANR	3900950	CallExpression	"smart_str_appends ( str , "" {\\n"" )"		3897502	0					
ANR	3900951	Callee	smart_str_appends		3897502	0					
ANR	3900952	Identifier	smart_str_appends		3897502	0					
ANR	3900953	ArgumentList	str		3897502	1					
ANR	3900954	Argument	str		3897502	0					
ANR	3900955	Identifier	str		3897502	0					
ANR	3900956	Argument	""" {\\n"""		3897502	1					
ANR	3900957	PrimaryExpression	""" {\\n"""		3897502	0					
ANR	3900958	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"	1432:4:40503:40555	3897502	1	True				
ANR	3900959	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"		3897502	0					
ANR	3900960	Callee	zend_ast_export_stmt		3897502	0					
ANR	3900961	Identifier	zend_ast_export_stmt		3897502	0					
ANR	3900962	ArgumentList	str		3897502	1					
ANR	3900963	Argument	str		3897502	0					
ANR	3900964	Identifier	str		3897502	0					
ANR	3900965	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3900966	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3900967	PtrMemberAccess	ast -> child		3897502	0					
ANR	3900968	Identifier	ast		3897502	0					
ANR	3900969	Identifier	child		3897502	1					
ANR	3900970	PrimaryExpression	1		3897502	1					
ANR	3900971	Argument	indent + 1		3897502	2					
ANR	3900972	AdditiveExpression	indent + 1		3897502	0		+			
ANR	3900973	Identifier	indent		3897502	0					
ANR	3900974	PrimaryExpression	1		3897502	1					
ANR	3900975	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1433:4:40561:40596	3897502	2	True				
ANR	3900976	CallExpression	"zend_ast_export_indent ( str , indent )"		3897502	0					
ANR	3900977	Callee	zend_ast_export_indent		3897502	0					
ANR	3900978	Identifier	zend_ast_export_indent		3897502	0					
ANR	3900979	ArgumentList	str		3897502	1					
ANR	3900980	Argument	str		3897502	0					
ANR	3900981	Identifier	str		3897502	0					
ANR	3900982	Argument	indent		3897502	1					
ANR	3900983	Identifier	indent		3897502	0					
ANR	3900984	ExpressionStatement	"smart_str_appendc ( str , '}' )"	1434:4:40602:40629	3897502	3	True				
ANR	3900985	CallExpression	"smart_str_appendc ( str , '}' )"		3897502	0					
ANR	3900986	Callee	smart_str_appendc		3897502	0					
ANR	3900987	Identifier	smart_str_appendc		3897502	0					
ANR	3900988	ArgumentList	str		3897502	1					
ANR	3900989	Argument	str		3897502	0					
ANR	3900990	Identifier	str		3897502	0					
ANR	3900991	Argument	'}'		3897502	1					
ANR	3900992	PrimaryExpression	'}'		3897502	0					
ANR	3900993	ElseStatement	else		3897502	0					
ANR	3900994	CompoundStatement		468:10:15935:15935	3897502	0					
ANR	3900995	ExpressionStatement	"smart_str_appendc ( str , ';' )"	1436:4:40647:40674	3897502	0	True				
ANR	3900996	CallExpression	"smart_str_appendc ( str , ';' )"		3897502	0					
ANR	3900997	Callee	smart_str_appendc		3897502	0					
ANR	3900998	Identifier	smart_str_appendc		3897502	0					
ANR	3900999	ArgumentList	str		3897502	1					
ANR	3901000	Argument	str		3897502	0					
ANR	3901001	Identifier	str		3897502	0					
ANR	3901002	Argument	';'		3897502	1					
ANR	3901003	PrimaryExpression	';'		3897502	0					
ANR	3901004	BreakStatement	break ;	1438:3:40684:40689	3897502	286	True				
ANR	3901005	Label	case ZEND_AST_PROP_ELEM :	1439:2:40693:40716	3897502	287	True				
ANR	3901006	Identifier	ZEND_AST_PROP_ELEM		3897502	0					
ANR	3901007	ExpressionStatement	"smart_str_appendc ( str , '$' )"	1440:3:40721:40748	3897502	288	True				
ANR	3901008	CallExpression	"smart_str_appendc ( str , '$' )"		3897502	0					
ANR	3901009	Callee	smart_str_appendc		3897502	0					
ANR	3901010	Identifier	smart_str_appendc		3897502	0					
ANR	3901011	ArgumentList	str		3897502	1					
ANR	3901012	Argument	str		3897502	0					
ANR	3901013	Identifier	str		3897502	0					
ANR	3901014	Argument	'$'		3897502	1					
ANR	3901015	PrimaryExpression	'$'		3897502	0					
ANR	3901016	Label	case ZEND_AST_CONST_ELEM :	1442:2:40789:40813	3897502	289	True				
ANR	3901017	Identifier	ZEND_AST_CONST_ELEM		3897502	0					
ANR	3901018	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"	1443:3:40818:40869	3897502	290	True				
ANR	3901019	CallExpression	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3901020	Callee	zend_ast_export_name		3897502	0					
ANR	3901021	Identifier	zend_ast_export_name		3897502	0					
ANR	3901022	ArgumentList	str		3897502	1					
ANR	3901023	Argument	str		3897502	0					
ANR	3901024	Identifier	str		3897502	0					
ANR	3901025	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3901026	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3901027	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901028	Identifier	ast		3897502	0					
ANR	3901029	Identifier	child		3897502	1					
ANR	3901030	PrimaryExpression	0		3897502	1					
ANR	3901031	Argument	0		3897502	2					
ANR	3901032	PrimaryExpression	0		3897502	0					
ANR	3901033	Argument	indent		3897502	3					
ANR	3901034	Identifier	indent		3897502	0					
ANR	3901035	ExpressionStatement	APPEND_DEFAULT_VALUE ( 1 )	1444:3:40874:40897	3897502	291	True				
ANR	3901036	CallExpression	APPEND_DEFAULT_VALUE ( 1 )		3897502	0					
ANR	3901037	Callee	APPEND_DEFAULT_VALUE		3897502	0					
ANR	3901038	Identifier	APPEND_DEFAULT_VALUE		3897502	0					
ANR	3901039	ArgumentList	1		3897502	1					
ANR	3901040	Argument	1		3897502	0					
ANR	3901041	PrimaryExpression	1		3897502	0					
ANR	3901042	Label	case ZEND_AST_USE_TRAIT :	1445:2:40901:40924	3897502	292	True				
ANR	3901043	Identifier	ZEND_AST_USE_TRAIT		3897502	0					
ANR	3901044	ExpressionStatement	"smart_str_appends ( str , ""use "" )"	1446:3:40929:40959	3897502	293	True				
ANR	3901045	CallExpression	"smart_str_appends ( str , ""use "" )"		3897502	0					
ANR	3901046	Callee	smart_str_appends		3897502	0					
ANR	3901047	Identifier	smart_str_appends		3897502	0					
ANR	3901048	ArgumentList	str		3897502	1					
ANR	3901049	Argument	str		3897502	0					
ANR	3901050	Identifier	str		3897502	0					
ANR	3901051	Argument	"""use """		3897502	1					
ANR	3901052	PrimaryExpression	"""use """		3897502	0					
ANR	3901053	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1447:3:40964:41013	3897502	294	True				
ANR	3901054	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3901055	Callee	zend_ast_export_ex		3897502	0					
ANR	3901056	Identifier	zend_ast_export_ex		3897502	0					
ANR	3901057	ArgumentList	str		3897502	1					
ANR	3901058	Argument	str		3897502	0					
ANR	3901059	Identifier	str		3897502	0					
ANR	3901060	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3901061	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3901062	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901063	Identifier	ast		3897502	0					
ANR	3901064	Identifier	child		3897502	1					
ANR	3901065	PrimaryExpression	0		3897502	1					
ANR	3901066	Argument	0		3897502	2					
ANR	3901067	PrimaryExpression	0		3897502	0					
ANR	3901068	Argument	indent		3897502	3					
ANR	3901069	Identifier	indent		3897502	0					
ANR	3901070	IfStatement	if ( ast -> child [ 1 ] )		3897502	295					
ANR	3901071	Condition	ast -> child [ 1 ]	1448:7:41022:41034	3897502	0	True				
ANR	3901072	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3901073	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901074	Identifier	ast		3897502	0					
ANR	3901075	Identifier	child		3897502	1					
ANR	3901076	PrimaryExpression	1		3897502	1					
ANR	3901077	CompoundStatement		481:22:16331:16331	3897502	1					
ANR	3901078	ExpressionStatement	"smart_str_appends ( str , "" {\\n"" )"	1449:4:41043:41073	3897502	0	True				
ANR	3901079	CallExpression	"smart_str_appends ( str , "" {\\n"" )"		3897502	0					
ANR	3901080	Callee	smart_str_appends		3897502	0					
ANR	3901081	Identifier	smart_str_appends		3897502	0					
ANR	3901082	ArgumentList	str		3897502	1					
ANR	3901083	Argument	str		3897502	0					
ANR	3901084	Identifier	str		3897502	0					
ANR	3901085	Argument	""" {\\n"""		3897502	1					
ANR	3901086	PrimaryExpression	""" {\\n"""		3897502	0					
ANR	3901087	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent + 1 )"	1450:4:41079:41132	3897502	1	True				
ANR	3901088	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent + 1 )"		3897502	0					
ANR	3901089	Callee	zend_ast_export_ex		3897502	0					
ANR	3901090	Identifier	zend_ast_export_ex		3897502	0					
ANR	3901091	ArgumentList	str		3897502	1					
ANR	3901092	Argument	str		3897502	0					
ANR	3901093	Identifier	str		3897502	0					
ANR	3901094	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3901095	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3901096	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901097	Identifier	ast		3897502	0					
ANR	3901098	Identifier	child		3897502	1					
ANR	3901099	PrimaryExpression	1		3897502	1					
ANR	3901100	Argument	0		3897502	2					
ANR	3901101	PrimaryExpression	0		3897502	0					
ANR	3901102	Argument	indent + 1		3897502	3					
ANR	3901103	AdditiveExpression	indent + 1		3897502	0		+			
ANR	3901104	Identifier	indent		3897502	0					
ANR	3901105	PrimaryExpression	1		3897502	1					
ANR	3901106	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1451:4:41138:41173	3897502	2	True				
ANR	3901107	CallExpression	"zend_ast_export_indent ( str , indent )"		3897502	0					
ANR	3901108	Callee	zend_ast_export_indent		3897502	0					
ANR	3901109	Identifier	zend_ast_export_indent		3897502	0					
ANR	3901110	ArgumentList	str		3897502	1					
ANR	3901111	Argument	str		3897502	0					
ANR	3901112	Identifier	str		3897502	0					
ANR	3901113	Argument	indent		3897502	1					
ANR	3901114	Identifier	indent		3897502	0					
ANR	3901115	ExpressionStatement	"smart_str_appends ( str , ""}"" )"	1452:4:41179:41206	3897502	3	True				
ANR	3901116	CallExpression	"smart_str_appends ( str , ""}"" )"		3897502	0					
ANR	3901117	Callee	smart_str_appends		3897502	0					
ANR	3901118	Identifier	smart_str_appends		3897502	0					
ANR	3901119	ArgumentList	str		3897502	1					
ANR	3901120	Argument	str		3897502	0					
ANR	3901121	Identifier	str		3897502	0					
ANR	3901122	Argument	"""}"""		3897502	1					
ANR	3901123	PrimaryExpression	"""}"""		3897502	0					
ANR	3901124	ElseStatement	else		3897502	0					
ANR	3901125	CompoundStatement		486:10:16512:16512	3897502	0					
ANR	3901126	ExpressionStatement	"smart_str_appends ( str , "";"" )"	1454:4:41224:41251	3897502	0	True				
ANR	3901127	CallExpression	"smart_str_appends ( str , "";"" )"		3897502	0					
ANR	3901128	Callee	smart_str_appends		3897502	0					
ANR	3901129	Identifier	smart_str_appends		3897502	0					
ANR	3901130	ArgumentList	str		3897502	1					
ANR	3901131	Argument	str		3897502	0					
ANR	3901132	Identifier	str		3897502	0					
ANR	3901133	Argument	""";"""		3897502	1					
ANR	3901134	PrimaryExpression	""";"""		3897502	0					
ANR	3901135	BreakStatement	break ;	1456:3:41261:41266	3897502	296	True				
ANR	3901136	Label	case ZEND_AST_TRAIT_PRECEDENCE :	1457:2:41270:41300	3897502	297	True				
ANR	3901137	Identifier	ZEND_AST_TRAIT_PRECEDENCE		3897502	0					
ANR	3901138	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1458:3:41305:41354	3897502	298	True				
ANR	3901139	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3901140	Callee	zend_ast_export_ex		3897502	0					
ANR	3901141	Identifier	zend_ast_export_ex		3897502	0					
ANR	3901142	ArgumentList	str		3897502	1					
ANR	3901143	Argument	str		3897502	0					
ANR	3901144	Identifier	str		3897502	0					
ANR	3901145	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3901146	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3901147	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901148	Identifier	ast		3897502	0					
ANR	3901149	Identifier	child		3897502	1					
ANR	3901150	PrimaryExpression	0		3897502	1					
ANR	3901151	Argument	0		3897502	2					
ANR	3901152	PrimaryExpression	0		3897502	0					
ANR	3901153	Argument	indent		3897502	3					
ANR	3901154	Identifier	indent		3897502	0					
ANR	3901155	ExpressionStatement	"smart_str_appends ( str , "" insteadof "" )"	1459:3:41359:41396	3897502	299	True				
ANR	3901156	CallExpression	"smart_str_appends ( str , "" insteadof "" )"		3897502	0					
ANR	3901157	Callee	smart_str_appends		3897502	0					
ANR	3901158	Identifier	smart_str_appends		3897502	0					
ANR	3901159	ArgumentList	str		3897502	1					
ANR	3901160	Argument	str		3897502	0					
ANR	3901161	Identifier	str		3897502	0					
ANR	3901162	Argument	""" insteadof """		3897502	1					
ANR	3901163	PrimaryExpression	""" insteadof """		3897502	0					
ANR	3901164	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"	1460:3:41401:41450	3897502	300	True				
ANR	3901165	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3901166	Callee	zend_ast_export_ex		3897502	0					
ANR	3901167	Identifier	zend_ast_export_ex		3897502	0					
ANR	3901168	ArgumentList	str		3897502	1					
ANR	3901169	Argument	str		3897502	0					
ANR	3901170	Identifier	str		3897502	0					
ANR	3901171	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3901172	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3901173	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901174	Identifier	ast		3897502	0					
ANR	3901175	Identifier	child		3897502	1					
ANR	3901176	PrimaryExpression	1		3897502	1					
ANR	3901177	Argument	0		3897502	2					
ANR	3901178	PrimaryExpression	0		3897502	0					
ANR	3901179	Argument	indent		3897502	3					
ANR	3901180	Identifier	indent		3897502	0					
ANR	3901181	BreakStatement	break ;	1461:3:41455:41460	3897502	301	True				
ANR	3901182	Label	case ZEND_AST_METHOD_REFERENCE :	1462:2:41464:41494	3897502	302	True				
ANR	3901183	Identifier	ZEND_AST_METHOD_REFERENCE		3897502	0					
ANR	3901184	IfStatement	if ( ast -> child [ 0 ] )		3897502	303					
ANR	3901185	Condition	ast -> child [ 0 ]	1463:7:41503:41515	3897502	0	True				
ANR	3901186	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3901187	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901188	Identifier	ast		3897502	0					
ANR	3901189	Identifier	child		3897502	1					
ANR	3901190	PrimaryExpression	0		3897502	1					
ANR	3901191	CompoundStatement		496:22:16812:16812	3897502	1					
ANR	3901192	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"	1464:4:41524:41575	3897502	0	True				
ANR	3901193	CallExpression	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3901194	Callee	zend_ast_export_name		3897502	0					
ANR	3901195	Identifier	zend_ast_export_name		3897502	0					
ANR	3901196	ArgumentList	str		3897502	1					
ANR	3901197	Argument	str		3897502	0					
ANR	3901198	Identifier	str		3897502	0					
ANR	3901199	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3901200	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3901201	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901202	Identifier	ast		3897502	0					
ANR	3901203	Identifier	child		3897502	1					
ANR	3901204	PrimaryExpression	0		3897502	1					
ANR	3901205	Argument	0		3897502	2					
ANR	3901206	PrimaryExpression	0		3897502	0					
ANR	3901207	Argument	indent		3897502	3					
ANR	3901208	Identifier	indent		3897502	0					
ANR	3901209	ExpressionStatement	"smart_str_appends ( str , ""::"" )"	1465:4:41581:41609	3897502	1	True				
ANR	3901210	CallExpression	"smart_str_appends ( str , ""::"" )"		3897502	0					
ANR	3901211	Callee	smart_str_appends		3897502	0					
ANR	3901212	Identifier	smart_str_appends		3897502	0					
ANR	3901213	ArgumentList	str		3897502	1					
ANR	3901214	Argument	str		3897502	0					
ANR	3901215	Identifier	str		3897502	0					
ANR	3901216	Argument	"""::"""		3897502	1					
ANR	3901217	PrimaryExpression	"""::"""		3897502	0					
ANR	3901218	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 1 ] , 0 , indent )"	1467:3:41619:41670	3897502	304	True				
ANR	3901219	CallExpression	"zend_ast_export_name ( str , ast -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3901220	Callee	zend_ast_export_name		3897502	0					
ANR	3901221	Identifier	zend_ast_export_name		3897502	0					
ANR	3901222	ArgumentList	str		3897502	1					
ANR	3901223	Argument	str		3897502	0					
ANR	3901224	Identifier	str		3897502	0					
ANR	3901225	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3901226	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3901227	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901228	Identifier	ast		3897502	0					
ANR	3901229	Identifier	child		3897502	1					
ANR	3901230	PrimaryExpression	1		3897502	1					
ANR	3901231	Argument	0		3897502	2					
ANR	3901232	PrimaryExpression	0		3897502	0					
ANR	3901233	Argument	indent		3897502	3					
ANR	3901234	Identifier	indent		3897502	0					
ANR	3901235	BreakStatement	break ;	1468:3:41675:41680	3897502	305	True				
ANR	3901236	Label	case ZEND_AST_NAMESPACE :	1469:2:41684:41707	3897502	306	True				
ANR	3901237	Identifier	ZEND_AST_NAMESPACE		3897502	0					
ANR	3901238	ExpressionStatement	"smart_str_appends ( str , ""namespace"" )"	1470:3:41712:41747	3897502	307	True				
ANR	3901239	CallExpression	"smart_str_appends ( str , ""namespace"" )"		3897502	0					
ANR	3901240	Callee	smart_str_appends		3897502	0					
ANR	3901241	Identifier	smart_str_appends		3897502	0					
ANR	3901242	ArgumentList	str		3897502	1					
ANR	3901243	Argument	str		3897502	0					
ANR	3901244	Identifier	str		3897502	0					
ANR	3901245	Argument	"""namespace"""		3897502	1					
ANR	3901246	PrimaryExpression	"""namespace"""		3897502	0					
ANR	3901247	IfStatement	if ( ast -> child [ 0 ] )		3897502	308					
ANR	3901248	Condition	ast -> child [ 0 ]	1471:7:41756:41768	3897502	0	True				
ANR	3901249	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3901250	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901251	Identifier	ast		3897502	0					
ANR	3901252	Identifier	child		3897502	1					
ANR	3901253	PrimaryExpression	0		3897502	1					
ANR	3901254	CompoundStatement		504:22:17065:17065	3897502	1					
ANR	3901255	ExpressionStatement	"smart_str_appendc ( str , ' ' )"	1472:4:41777:41804	3897502	0	True				
ANR	3901256	CallExpression	"smart_str_appendc ( str , ' ' )"		3897502	0					
ANR	3901257	Callee	smart_str_appendc		3897502	0					
ANR	3901258	Identifier	smart_str_appendc		3897502	0					
ANR	3901259	ArgumentList	str		3897502	1					
ANR	3901260	Argument	str		3897502	0					
ANR	3901261	Identifier	str		3897502	0					
ANR	3901262	Argument	' '		3897502	1					
ANR	3901263	PrimaryExpression	' '		3897502	0					
ANR	3901264	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"	1473:4:41810:41861	3897502	1	True				
ANR	3901265	CallExpression	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3901266	Callee	zend_ast_export_name		3897502	0					
ANR	3901267	Identifier	zend_ast_export_name		3897502	0					
ANR	3901268	ArgumentList	str		3897502	1					
ANR	3901269	Argument	str		3897502	0					
ANR	3901270	Identifier	str		3897502	0					
ANR	3901271	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3901272	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3901273	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901274	Identifier	ast		3897502	0					
ANR	3901275	Identifier	child		3897502	1					
ANR	3901276	PrimaryExpression	0		3897502	1					
ANR	3901277	Argument	0		3897502	2					
ANR	3901278	PrimaryExpression	0		3897502	0					
ANR	3901279	Argument	indent		3897502	3					
ANR	3901280	Identifier	indent		3897502	0					
ANR	3901281	IfStatement	if ( ast -> child [ 1 ] )		3897502	309					
ANR	3901282	Condition	ast -> child [ 1 ]	1475:7:41875:41887	3897502	0	True				
ANR	3901283	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3901284	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901285	Identifier	ast		3897502	0					
ANR	3901286	Identifier	child		3897502	1					
ANR	3901287	PrimaryExpression	1		3897502	1					
ANR	3901288	CompoundStatement		508:22:17184:17184	3897502	1					
ANR	3901289	ExpressionStatement	"smart_str_appends ( str , "" {\\n"" )"	1476:4:41896:41926	3897502	0	True				
ANR	3901290	CallExpression	"smart_str_appends ( str , "" {\\n"" )"		3897502	0					
ANR	3901291	Callee	smart_str_appends		3897502	0					
ANR	3901292	Identifier	smart_str_appends		3897502	0					
ANR	3901293	ArgumentList	str		3897502	1					
ANR	3901294	Argument	str		3897502	0					
ANR	3901295	Identifier	str		3897502	0					
ANR	3901296	Argument	""" {\\n"""		3897502	1					
ANR	3901297	PrimaryExpression	""" {\\n"""		3897502	0					
ANR	3901298	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"	1477:4:41932:41984	3897502	1	True				
ANR	3901299	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 1 ] , indent + 1 )"		3897502	0					
ANR	3901300	Callee	zend_ast_export_stmt		3897502	0					
ANR	3901301	Identifier	zend_ast_export_stmt		3897502	0					
ANR	3901302	ArgumentList	str		3897502	1					
ANR	3901303	Argument	str		3897502	0					
ANR	3901304	Identifier	str		3897502	0					
ANR	3901305	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3901306	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3901307	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901308	Identifier	ast		3897502	0					
ANR	3901309	Identifier	child		3897502	1					
ANR	3901310	PrimaryExpression	1		3897502	1					
ANR	3901311	Argument	indent + 1		3897502	2					
ANR	3901312	AdditiveExpression	indent + 1		3897502	0		+			
ANR	3901313	Identifier	indent		3897502	0					
ANR	3901314	PrimaryExpression	1		3897502	1					
ANR	3901315	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1478:4:41990:42025	3897502	2	True				
ANR	3901316	CallExpression	"zend_ast_export_indent ( str , indent )"		3897502	0					
ANR	3901317	Callee	zend_ast_export_indent		3897502	0					
ANR	3901318	Identifier	zend_ast_export_indent		3897502	0					
ANR	3901319	ArgumentList	str		3897502	1					
ANR	3901320	Argument	str		3897502	0					
ANR	3901321	Identifier	str		3897502	0					
ANR	3901322	Argument	indent		3897502	1					
ANR	3901323	Identifier	indent		3897502	0					
ANR	3901324	ExpressionStatement	"smart_str_appends ( str , ""}\\n"" )"	1479:4:42031:42060	3897502	3	True				
ANR	3901325	CallExpression	"smart_str_appends ( str , ""}\\n"" )"		3897502	0					
ANR	3901326	Callee	smart_str_appends		3897502	0					
ANR	3901327	Identifier	smart_str_appends		3897502	0					
ANR	3901328	ArgumentList	str		3897502	1					
ANR	3901329	Argument	str		3897502	0					
ANR	3901330	Identifier	str		3897502	0					
ANR	3901331	Argument	"""}\\n"""		3897502	1					
ANR	3901332	PrimaryExpression	"""}\\n"""		3897502	0					
ANR	3901333	ElseStatement	else		3897502	0					
ANR	3901334	CompoundStatement		513:10:17366:17366	3897502	0					
ANR	3901335	ExpressionStatement	"smart_str_appendc ( str , ';' )"	1481:4:42078:42105	3897502	0	True				
ANR	3901336	CallExpression	"smart_str_appendc ( str , ';' )"		3897502	0					
ANR	3901337	Callee	smart_str_appendc		3897502	0					
ANR	3901338	Identifier	smart_str_appendc		3897502	0					
ANR	3901339	ArgumentList	str		3897502	1					
ANR	3901340	Argument	str		3897502	0					
ANR	3901341	Identifier	str		3897502	0					
ANR	3901342	Argument	';'		3897502	1					
ANR	3901343	PrimaryExpression	';'		3897502	0					
ANR	3901344	BreakStatement	break ;	1483:3:42115:42120	3897502	310	True				
ANR	3901345	Label	case ZEND_AST_USE_ELEM :	1484:2:42124:42146	3897502	311	True				
ANR	3901346	Identifier	ZEND_AST_USE_ELEM		3897502	0					
ANR	3901347	Label	case ZEND_AST_TRAIT_ALIAS :	1485:2:42150:42175	3897502	312	True				
ANR	3901348	Identifier	ZEND_AST_TRAIT_ALIAS		3897502	0					
ANR	3901349	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"	1486:3:42180:42231	3897502	313	True				
ANR	3901350	CallExpression	"zend_ast_export_name ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3901351	Callee	zend_ast_export_name		3897502	0					
ANR	3901352	Identifier	zend_ast_export_name		3897502	0					
ANR	3901353	ArgumentList	str		3897502	1					
ANR	3901354	Argument	str		3897502	0					
ANR	3901355	Identifier	str		3897502	0					
ANR	3901356	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3901357	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3901358	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901359	Identifier	ast		3897502	0					
ANR	3901360	Identifier	child		3897502	1					
ANR	3901361	PrimaryExpression	0		3897502	1					
ANR	3901362	Argument	0		3897502	2					
ANR	3901363	PrimaryExpression	0		3897502	0					
ANR	3901364	Argument	indent		3897502	3					
ANR	3901365	Identifier	indent		3897502	0					
ANR	3901366	IfStatement	if ( ast -> attr & ZEND_ACC_PUBLIC )		3897502	314					
ANR	3901367	Condition	ast -> attr & ZEND_ACC_PUBLIC	1487:7:42240:42266	3897502	0	True				
ANR	3901368	BitAndExpression	ast -> attr & ZEND_ACC_PUBLIC		3897502	0		&			
ANR	3901369	PtrMemberAccess	ast -> attr		3897502	0					
ANR	3901370	Identifier	ast		3897502	0					
ANR	3901371	Identifier	attr		3897502	1					
ANR	3901372	Identifier	ZEND_ACC_PUBLIC		3897502	1					
ANR	3901373	CompoundStatement		520:36:17563:17563	3897502	1					
ANR	3901374	ExpressionStatement	"smart_str_appends ( str , "" as public"" )"	1488:4:42275:42311	3897502	0	True				
ANR	3901375	CallExpression	"smart_str_appends ( str , "" as public"" )"		3897502	0					
ANR	3901376	Callee	smart_str_appends		3897502	0					
ANR	3901377	Identifier	smart_str_appends		3897502	0					
ANR	3901378	ArgumentList	str		3897502	1					
ANR	3901379	Argument	str		3897502	0					
ANR	3901380	Identifier	str		3897502	0					
ANR	3901381	Argument	""" as public"""		3897502	1					
ANR	3901382	PrimaryExpression	""" as public"""		3897502	0					
ANR	3901383	ElseStatement	else		3897502	0					
ANR	3901384	IfStatement	if ( ast -> attr & ZEND_ACC_PROTECTED )		3897502	0					
ANR	3901385	Condition	ast -> attr & ZEND_ACC_PROTECTED	1489:14:42327:42356	3897502	0	True				
ANR	3901386	BitAndExpression	ast -> attr & ZEND_ACC_PROTECTED		3897502	0		&			
ANR	3901387	PtrMemberAccess	ast -> attr		3897502	0					
ANR	3901388	Identifier	ast		3897502	0					
ANR	3901389	Identifier	attr		3897502	1					
ANR	3901390	Identifier	ZEND_ACC_PROTECTED		3897502	1					
ANR	3901391	CompoundStatement		522:46:17653:17653	3897502	1					
ANR	3901392	ExpressionStatement	"smart_str_appends ( str , "" as protected"" )"	1490:4:42365:42404	3897502	0	True				
ANR	3901393	CallExpression	"smart_str_appends ( str , "" as protected"" )"		3897502	0					
ANR	3901394	Callee	smart_str_appends		3897502	0					
ANR	3901395	Identifier	smart_str_appends		3897502	0					
ANR	3901396	ArgumentList	str		3897502	1					
ANR	3901397	Argument	str		3897502	0					
ANR	3901398	Identifier	str		3897502	0					
ANR	3901399	Argument	""" as protected"""		3897502	1					
ANR	3901400	PrimaryExpression	""" as protected"""		3897502	0					
ANR	3901401	ElseStatement	else		3897502	0					
ANR	3901402	IfStatement	if ( ast -> attr & ZEND_ACC_PRIVATE )		3897502	0					
ANR	3901403	Condition	ast -> attr & ZEND_ACC_PRIVATE	1491:14:42420:42447	3897502	0	True				
ANR	3901404	BitAndExpression	ast -> attr & ZEND_ACC_PRIVATE		3897502	0		&			
ANR	3901405	PtrMemberAccess	ast -> attr		3897502	0					
ANR	3901406	Identifier	ast		3897502	0					
ANR	3901407	Identifier	attr		3897502	1					
ANR	3901408	Identifier	ZEND_ACC_PRIVATE		3897502	1					
ANR	3901409	CompoundStatement		524:44:17744:17744	3897502	1					
ANR	3901410	ExpressionStatement	"smart_str_appends ( str , "" as private"" )"	1492:4:42456:42493	3897502	0	True				
ANR	3901411	CallExpression	"smart_str_appends ( str , "" as private"" )"		3897502	0					
ANR	3901412	Callee	smart_str_appends		3897502	0					
ANR	3901413	Identifier	smart_str_appends		3897502	0					
ANR	3901414	ArgumentList	str		3897502	1					
ANR	3901415	Argument	str		3897502	0					
ANR	3901416	Identifier	str		3897502	0					
ANR	3901417	Argument	""" as private"""		3897502	1					
ANR	3901418	PrimaryExpression	""" as private"""		3897502	0					
ANR	3901419	ElseStatement	else		3897502	0					
ANR	3901420	IfStatement	if ( ast -> child [ 1 ] )		3897502	0					
ANR	3901421	Condition	ast -> child [ 1 ]	1493:14:42509:42521	3897502	0	True				
ANR	3901422	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3901423	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901424	Identifier	ast		3897502	0					
ANR	3901425	Identifier	child		3897502	1					
ANR	3901426	PrimaryExpression	1		3897502	1					
ANR	3901427	CompoundStatement		526:29:17818:17818	3897502	1					
ANR	3901428	ExpressionStatement	"smart_str_appends ( str , "" as"" )"	1494:4:42530:42559	3897502	0	True				
ANR	3901429	CallExpression	"smart_str_appends ( str , "" as"" )"		3897502	0					
ANR	3901430	Callee	smart_str_appends		3897502	0					
ANR	3901431	Identifier	smart_str_appends		3897502	0					
ANR	3901432	ArgumentList	str		3897502	1					
ANR	3901433	Argument	str		3897502	0					
ANR	3901434	Identifier	str		3897502	0					
ANR	3901435	Argument	""" as"""		3897502	1					
ANR	3901436	PrimaryExpression	""" as"""		3897502	0					
ANR	3901437	IfStatement	if ( ast -> child [ 1 ] )		3897502	315					
ANR	3901438	Condition	ast -> child [ 1 ]	1496:7:42573:42585	3897502	0	True				
ANR	3901439	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3901440	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901441	Identifier	ast		3897502	0					
ANR	3901442	Identifier	child		3897502	1					
ANR	3901443	PrimaryExpression	1		3897502	1					
ANR	3901444	CompoundStatement		529:22:17882:17882	3897502	1					
ANR	3901445	ExpressionStatement	"smart_str_appendc ( str , ' ' )"	1497:4:42594:42621	3897502	0	True				
ANR	3901446	CallExpression	"smart_str_appendc ( str , ' ' )"		3897502	0					
ANR	3901447	Callee	smart_str_appendc		3897502	0					
ANR	3901448	Identifier	smart_str_appendc		3897502	0					
ANR	3901449	ArgumentList	str		3897502	1					
ANR	3901450	Argument	str		3897502	0					
ANR	3901451	Identifier	str		3897502	0					
ANR	3901452	Argument	' '		3897502	1					
ANR	3901453	PrimaryExpression	' '		3897502	0					
ANR	3901454	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 1 ] , 0 , indent )"	1498:4:42627:42678	3897502	1	True				
ANR	3901455	CallExpression	"zend_ast_export_name ( str , ast -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3901456	Callee	zend_ast_export_name		3897502	0					
ANR	3901457	Identifier	zend_ast_export_name		3897502	0					
ANR	3901458	ArgumentList	str		3897502	1					
ANR	3901459	Argument	str		3897502	0					
ANR	3901460	Identifier	str		3897502	0					
ANR	3901461	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3901462	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3901463	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901464	Identifier	ast		3897502	0					
ANR	3901465	Identifier	child		3897502	1					
ANR	3901466	PrimaryExpression	1		3897502	1					
ANR	3901467	Argument	0		3897502	2					
ANR	3901468	PrimaryExpression	0		3897502	0					
ANR	3901469	Argument	indent		3897502	3					
ANR	3901470	Identifier	indent		3897502	0					
ANR	3901471	BreakStatement	break ;	1500:3:42688:42693	3897502	316	True				
ANR	3901472	Label	case ZEND_AST_METHOD_CALL :	1503:2:42720:42745	3897502	317	True				
ANR	3901473	Identifier	ZEND_AST_METHOD_CALL		3897502	0					
ANR	3901474	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1504:3:42750:42799	3897502	318	True				
ANR	3901475	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3901476	Callee	zend_ast_export_ex		3897502	0					
ANR	3901477	Identifier	zend_ast_export_ex		3897502	0					
ANR	3901478	ArgumentList	str		3897502	1					
ANR	3901479	Argument	str		3897502	0					
ANR	3901480	Identifier	str		3897502	0					
ANR	3901481	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3901482	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3901483	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901484	Identifier	ast		3897502	0					
ANR	3901485	Identifier	child		3897502	1					
ANR	3901486	PrimaryExpression	0		3897502	1					
ANR	3901487	Argument	0		3897502	2					
ANR	3901488	PrimaryExpression	0		3897502	0					
ANR	3901489	Argument	indent		3897502	3					
ANR	3901490	Identifier	indent		3897502	0					
ANR	3901491	ExpressionStatement	"smart_str_appends ( str , ""->"" )"	1505:3:42804:42832	3897502	319	True				
ANR	3901492	CallExpression	"smart_str_appends ( str , ""->"" )"		3897502	0					
ANR	3901493	Callee	smart_str_appends		3897502	0					
ANR	3901494	Identifier	smart_str_appends		3897502	0					
ANR	3901495	ArgumentList	str		3897502	1					
ANR	3901496	Argument	str		3897502	0					
ANR	3901497	Identifier	str		3897502	0					
ANR	3901498	Argument	"""->"""		3897502	1					
ANR	3901499	PrimaryExpression	"""->"""		3897502	0					
ANR	3901500	ExpressionStatement	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"	1506:3:42837:42887	3897502	320	True				
ANR	3901501	CallExpression	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3901502	Callee	zend_ast_export_var		3897502	0					
ANR	3901503	Identifier	zend_ast_export_var		3897502	0					
ANR	3901504	ArgumentList	str		3897502	1					
ANR	3901505	Argument	str		3897502	0					
ANR	3901506	Identifier	str		3897502	0					
ANR	3901507	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3901508	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3901509	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901510	Identifier	ast		3897502	0					
ANR	3901511	Identifier	child		3897502	1					
ANR	3901512	PrimaryExpression	1		3897502	1					
ANR	3901513	Argument	0		3897502	2					
ANR	3901514	PrimaryExpression	0		3897502	0					
ANR	3901515	Argument	indent		3897502	3					
ANR	3901516	Identifier	indent		3897502	0					
ANR	3901517	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1507:3:42892:42919	3897502	321	True				
ANR	3901518	CallExpression	"smart_str_appendc ( str , '(' )"		3897502	0					
ANR	3901519	Callee	smart_str_appendc		3897502	0					
ANR	3901520	Identifier	smart_str_appendc		3897502	0					
ANR	3901521	ArgumentList	str		3897502	1					
ANR	3901522	Argument	str		3897502	0					
ANR	3901523	Identifier	str		3897502	0					
ANR	3901524	Argument	'('		3897502	1					
ANR	3901525	PrimaryExpression	'('		3897502	0					
ANR	3901526	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 0 , indent )"	1508:3:42924:42973	3897502	322	True				
ANR	3901527	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 0 , indent )"		3897502	0					
ANR	3901528	Callee	zend_ast_export_ex		3897502	0					
ANR	3901529	Identifier	zend_ast_export_ex		3897502	0					
ANR	3901530	ArgumentList	str		3897502	1					
ANR	3901531	Argument	str		3897502	0					
ANR	3901532	Identifier	str		3897502	0					
ANR	3901533	Argument	ast -> child [ 2 ]		3897502	1					
ANR	3901534	ArrayIndexing	ast -> child [ 2 ]		3897502	0					
ANR	3901535	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901536	Identifier	ast		3897502	0					
ANR	3901537	Identifier	child		3897502	1					
ANR	3901538	PrimaryExpression	2		3897502	1					
ANR	3901539	Argument	0		3897502	2					
ANR	3901540	PrimaryExpression	0		3897502	0					
ANR	3901541	Argument	indent		3897502	3					
ANR	3901542	Identifier	indent		3897502	0					
ANR	3901543	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1509:3:42978:43005	3897502	323	True				
ANR	3901544	CallExpression	"smart_str_appendc ( str , ')' )"		3897502	0					
ANR	3901545	Callee	smart_str_appendc		3897502	0					
ANR	3901546	Identifier	smart_str_appendc		3897502	0					
ANR	3901547	ArgumentList	str		3897502	1					
ANR	3901548	Argument	str		3897502	0					
ANR	3901549	Identifier	str		3897502	0					
ANR	3901550	Argument	')'		3897502	1					
ANR	3901551	PrimaryExpression	')'		3897502	0					
ANR	3901552	BreakStatement	break ;	1510:3:43010:43015	3897502	324	True				
ANR	3901553	Label	case ZEND_AST_STATIC_CALL :	1511:2:43019:43044	3897502	325	True				
ANR	3901554	Identifier	ZEND_AST_STATIC_CALL		3897502	0					
ANR	3901555	ExpressionStatement	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"	1512:3:43049:43103	3897502	326	True				
ANR	3901556	CallExpression	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3901557	Callee	zend_ast_export_ns_name		3897502	0					
ANR	3901558	Identifier	zend_ast_export_ns_name		3897502	0					
ANR	3901559	ArgumentList	str		3897502	1					
ANR	3901560	Argument	str		3897502	0					
ANR	3901561	Identifier	str		3897502	0					
ANR	3901562	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3901563	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3901564	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901565	Identifier	ast		3897502	0					
ANR	3901566	Identifier	child		3897502	1					
ANR	3901567	PrimaryExpression	0		3897502	1					
ANR	3901568	Argument	0		3897502	2					
ANR	3901569	PrimaryExpression	0		3897502	0					
ANR	3901570	Argument	indent		3897502	3					
ANR	3901571	Identifier	indent		3897502	0					
ANR	3901572	ExpressionStatement	"smart_str_appends ( str , ""::"" )"	1513:3:43108:43136	3897502	327	True				
ANR	3901573	CallExpression	"smart_str_appends ( str , ""::"" )"		3897502	0					
ANR	3901574	Callee	smart_str_appends		3897502	0					
ANR	3901575	Identifier	smart_str_appends		3897502	0					
ANR	3901576	ArgumentList	str		3897502	1					
ANR	3901577	Argument	str		3897502	0					
ANR	3901578	Identifier	str		3897502	0					
ANR	3901579	Argument	"""::"""		3897502	1					
ANR	3901580	PrimaryExpression	"""::"""		3897502	0					
ANR	3901581	ExpressionStatement	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"	1514:3:43141:43191	3897502	328	True				
ANR	3901582	CallExpression	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3901583	Callee	zend_ast_export_var		3897502	0					
ANR	3901584	Identifier	zend_ast_export_var		3897502	0					
ANR	3901585	ArgumentList	str		3897502	1					
ANR	3901586	Argument	str		3897502	0					
ANR	3901587	Identifier	str		3897502	0					
ANR	3901588	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3901589	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3901590	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901591	Identifier	ast		3897502	0					
ANR	3901592	Identifier	child		3897502	1					
ANR	3901593	PrimaryExpression	1		3897502	1					
ANR	3901594	Argument	0		3897502	2					
ANR	3901595	PrimaryExpression	0		3897502	0					
ANR	3901596	Argument	indent		3897502	3					
ANR	3901597	Identifier	indent		3897502	0					
ANR	3901598	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1515:3:43196:43223	3897502	329	True				
ANR	3901599	CallExpression	"smart_str_appendc ( str , '(' )"		3897502	0					
ANR	3901600	Callee	smart_str_appendc		3897502	0					
ANR	3901601	Identifier	smart_str_appendc		3897502	0					
ANR	3901602	ArgumentList	str		3897502	1					
ANR	3901603	Argument	str		3897502	0					
ANR	3901604	Identifier	str		3897502	0					
ANR	3901605	Argument	'('		3897502	1					
ANR	3901606	PrimaryExpression	'('		3897502	0					
ANR	3901607	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 0 , indent )"	1516:3:43228:43277	3897502	330	True				
ANR	3901608	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 0 , indent )"		3897502	0					
ANR	3901609	Callee	zend_ast_export_ex		3897502	0					
ANR	3901610	Identifier	zend_ast_export_ex		3897502	0					
ANR	3901611	ArgumentList	str		3897502	1					
ANR	3901612	Argument	str		3897502	0					
ANR	3901613	Identifier	str		3897502	0					
ANR	3901614	Argument	ast -> child [ 2 ]		3897502	1					
ANR	3901615	ArrayIndexing	ast -> child [ 2 ]		3897502	0					
ANR	3901616	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901617	Identifier	ast		3897502	0					
ANR	3901618	Identifier	child		3897502	1					
ANR	3901619	PrimaryExpression	2		3897502	1					
ANR	3901620	Argument	0		3897502	2					
ANR	3901621	PrimaryExpression	0		3897502	0					
ANR	3901622	Argument	indent		3897502	3					
ANR	3901623	Identifier	indent		3897502	0					
ANR	3901624	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1517:3:43282:43309	3897502	331	True				
ANR	3901625	CallExpression	"smart_str_appendc ( str , ')' )"		3897502	0					
ANR	3901626	Callee	smart_str_appendc		3897502	0					
ANR	3901627	Identifier	smart_str_appendc		3897502	0					
ANR	3901628	ArgumentList	str		3897502	1					
ANR	3901629	Argument	str		3897502	0					
ANR	3901630	Identifier	str		3897502	0					
ANR	3901631	Argument	')'		3897502	1					
ANR	3901632	PrimaryExpression	')'		3897502	0					
ANR	3901633	BreakStatement	break ;	1518:3:43314:43319	3897502	332	True				
ANR	3901634	Label	case ZEND_AST_CONDITIONAL :	1519:2:43323:43348	3897502	333	True				
ANR	3901635	Identifier	ZEND_AST_CONDITIONAL		3897502	0					
ANR	3901636	IfStatement	if ( priority > 100 )		3897502	334					
ANR	3901637	Condition	priority > 100	1520:7:43357:43370	3897502	0	True				
ANR	3901638	RelationalExpression	priority > 100		3897502	0		>			
ANR	3901639	Identifier	priority		3897502	0					
ANR	3901640	PrimaryExpression	100		3897502	1					
ANR	3901641	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1520:23:43373:43400	3897502	1	True				
ANR	3901642	CallExpression	"smart_str_appendc ( str , '(' )"		3897502	0					
ANR	3901643	Callee	smart_str_appendc		3897502	0					
ANR	3901644	Identifier	smart_str_appendc		3897502	0					
ANR	3901645	ArgumentList	str		3897502	1					
ANR	3901646	Argument	str		3897502	0					
ANR	3901647	Identifier	str		3897502	0					
ANR	3901648	Argument	'('		3897502	1					
ANR	3901649	PrimaryExpression	'('		3897502	0					
ANR	3901650	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 100 , indent )"	1521:3:43405:43456	3897502	335	True				
ANR	3901651	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 100 , indent )"		3897502	0					
ANR	3901652	Callee	zend_ast_export_ex		3897502	0					
ANR	3901653	Identifier	zend_ast_export_ex		3897502	0					
ANR	3901654	ArgumentList	str		3897502	1					
ANR	3901655	Argument	str		3897502	0					
ANR	3901656	Identifier	str		3897502	0					
ANR	3901657	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3901658	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3901659	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901660	Identifier	ast		3897502	0					
ANR	3901661	Identifier	child		3897502	1					
ANR	3901662	PrimaryExpression	0		3897502	1					
ANR	3901663	Argument	100		3897502	2					
ANR	3901664	PrimaryExpression	100		3897502	0					
ANR	3901665	Argument	indent		3897502	3					
ANR	3901666	Identifier	indent		3897502	0					
ANR	3901667	IfStatement	if ( ast -> child [ 1 ] )		3897502	336					
ANR	3901668	Condition	ast -> child [ 1 ]	1522:7:43465:43477	3897502	0	True				
ANR	3901669	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3901670	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901671	Identifier	ast		3897502	0					
ANR	3901672	Identifier	child		3897502	1					
ANR	3901673	PrimaryExpression	1		3897502	1					
ANR	3901674	CompoundStatement		555:22:18774:18774	3897502	1					
ANR	3901675	ExpressionStatement	"smart_str_appends ( str , "" ? "" )"	1523:4:43486:43515	3897502	0	True				
ANR	3901676	CallExpression	"smart_str_appends ( str , "" ? "" )"		3897502	0					
ANR	3901677	Callee	smart_str_appends		3897502	0					
ANR	3901678	Identifier	smart_str_appends		3897502	0					
ANR	3901679	ArgumentList	str		3897502	1					
ANR	3901680	Argument	str		3897502	0					
ANR	3901681	Identifier	str		3897502	0					
ANR	3901682	Argument	""" ? """		3897502	1					
ANR	3901683	PrimaryExpression	""" ? """		3897502	0					
ANR	3901684	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 101 , indent )"	1524:4:43521:43572	3897502	1	True				
ANR	3901685	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 101 , indent )"		3897502	0					
ANR	3901686	Callee	zend_ast_export_ex		3897502	0					
ANR	3901687	Identifier	zend_ast_export_ex		3897502	0					
ANR	3901688	ArgumentList	str		3897502	1					
ANR	3901689	Argument	str		3897502	0					
ANR	3901690	Identifier	str		3897502	0					
ANR	3901691	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3901692	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3901693	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901694	Identifier	ast		3897502	0					
ANR	3901695	Identifier	child		3897502	1					
ANR	3901696	PrimaryExpression	1		3897502	1					
ANR	3901697	Argument	101		3897502	2					
ANR	3901698	PrimaryExpression	101		3897502	0					
ANR	3901699	Argument	indent		3897502	3					
ANR	3901700	Identifier	indent		3897502	0					
ANR	3901701	ExpressionStatement	"smart_str_appends ( str , "" : "" )"	1525:4:43578:43607	3897502	2	True				
ANR	3901702	CallExpression	"smart_str_appends ( str , "" : "" )"		3897502	0					
ANR	3901703	Callee	smart_str_appends		3897502	0					
ANR	3901704	Identifier	smart_str_appends		3897502	0					
ANR	3901705	ArgumentList	str		3897502	1					
ANR	3901706	Argument	str		3897502	0					
ANR	3901707	Identifier	str		3897502	0					
ANR	3901708	Argument	""" : """		3897502	1					
ANR	3901709	PrimaryExpression	""" : """		3897502	0					
ANR	3901710	ElseStatement	else		3897502	0					
ANR	3901711	CompoundStatement		559:10:18913:18913	3897502	0					
ANR	3901712	ExpressionStatement	"smart_str_appends ( str , "" ?: "" )"	1527:4:43625:43655	3897502	0	True				
ANR	3901713	CallExpression	"smart_str_appends ( str , "" ?: "" )"		3897502	0					
ANR	3901714	Callee	smart_str_appends		3897502	0					
ANR	3901715	Identifier	smart_str_appends		3897502	0					
ANR	3901716	ArgumentList	str		3897502	1					
ANR	3901717	Argument	str		3897502	0					
ANR	3901718	Identifier	str		3897502	0					
ANR	3901719	Argument	""" ?: """		3897502	1					
ANR	3901720	PrimaryExpression	""" ?: """		3897502	0					
ANR	3901721	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 101 , indent )"	1529:3:43665:43716	3897502	337	True				
ANR	3901722	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 101 , indent )"		3897502	0					
ANR	3901723	Callee	zend_ast_export_ex		3897502	0					
ANR	3901724	Identifier	zend_ast_export_ex		3897502	0					
ANR	3901725	ArgumentList	str		3897502	1					
ANR	3901726	Argument	str		3897502	0					
ANR	3901727	Identifier	str		3897502	0					
ANR	3901728	Argument	ast -> child [ 2 ]		3897502	1					
ANR	3901729	ArrayIndexing	ast -> child [ 2 ]		3897502	0					
ANR	3901730	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901731	Identifier	ast		3897502	0					
ANR	3901732	Identifier	child		3897502	1					
ANR	3901733	PrimaryExpression	2		3897502	1					
ANR	3901734	Argument	101		3897502	2					
ANR	3901735	PrimaryExpression	101		3897502	0					
ANR	3901736	Argument	indent		3897502	3					
ANR	3901737	Identifier	indent		3897502	0					
ANR	3901738	IfStatement	if ( priority > 100 )		3897502	338					
ANR	3901739	Condition	priority > 100	1530:7:43725:43738	3897502	0	True				
ANR	3901740	RelationalExpression	priority > 100		3897502	0		>			
ANR	3901741	Identifier	priority		3897502	0					
ANR	3901742	PrimaryExpression	100		3897502	1					
ANR	3901743	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1530:23:43741:43768	3897502	1	True				
ANR	3901744	CallExpression	"smart_str_appendc ( str , ')' )"		3897502	0					
ANR	3901745	Callee	smart_str_appendc		3897502	0					
ANR	3901746	Identifier	smart_str_appendc		3897502	0					
ANR	3901747	ArgumentList	str		3897502	1					
ANR	3901748	Argument	str		3897502	0					
ANR	3901749	Identifier	str		3897502	0					
ANR	3901750	Argument	')'		3897502	1					
ANR	3901751	PrimaryExpression	')'		3897502	0					
ANR	3901752	BreakStatement	break ;	1531:3:43773:43778	3897502	339	True				
ANR	3901753	Label	case ZEND_AST_TRY :	1533:2:43783:43800	3897502	340	True				
ANR	3901754	Identifier	ZEND_AST_TRY		3897502	0					
ANR	3901755	ExpressionStatement	"smart_str_appends ( str , ""try {\\n"" )"	1534:3:43805:43838	3897502	341	True				
ANR	3901756	CallExpression	"smart_str_appends ( str , ""try {\\n"" )"		3897502	0					
ANR	3901757	Callee	smart_str_appends		3897502	0					
ANR	3901758	Identifier	smart_str_appends		3897502	0					
ANR	3901759	ArgumentList	str		3897502	1					
ANR	3901760	Argument	str		3897502	0					
ANR	3901761	Identifier	str		3897502	0					
ANR	3901762	Argument	"""try {\\n"""		3897502	1					
ANR	3901763	PrimaryExpression	"""try {\\n"""		3897502	0					
ANR	3901764	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 0 ] , indent + 1 )"	1535:3:43843:43895	3897502	342	True				
ANR	3901765	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 0 ] , indent + 1 )"		3897502	0					
ANR	3901766	Callee	zend_ast_export_stmt		3897502	0					
ANR	3901767	Identifier	zend_ast_export_stmt		3897502	0					
ANR	3901768	ArgumentList	str		3897502	1					
ANR	3901769	Argument	str		3897502	0					
ANR	3901770	Identifier	str		3897502	0					
ANR	3901771	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3901772	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3901773	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901774	Identifier	ast		3897502	0					
ANR	3901775	Identifier	child		3897502	1					
ANR	3901776	PrimaryExpression	0		3897502	1					
ANR	3901777	Argument	indent + 1		3897502	2					
ANR	3901778	AdditiveExpression	indent + 1		3897502	0		+			
ANR	3901779	Identifier	indent		3897502	0					
ANR	3901780	PrimaryExpression	1		3897502	1					
ANR	3901781	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1536:3:43900:43935	3897502	343	True				
ANR	3901782	CallExpression	"zend_ast_export_indent ( str , indent )"		3897502	0					
ANR	3901783	Callee	zend_ast_export_indent		3897502	0					
ANR	3901784	Identifier	zend_ast_export_indent		3897502	0					
ANR	3901785	ArgumentList	str		3897502	1					
ANR	3901786	Argument	str		3897502	0					
ANR	3901787	Identifier	str		3897502	0					
ANR	3901788	Argument	indent		3897502	1					
ANR	3901789	Identifier	indent		3897502	0					
ANR	3901790	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"	1537:3:43940:43989	3897502	344	True				
ANR	3901791	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3901792	Callee	zend_ast_export_ex		3897502	0					
ANR	3901793	Identifier	zend_ast_export_ex		3897502	0					
ANR	3901794	ArgumentList	str		3897502	1					
ANR	3901795	Argument	str		3897502	0					
ANR	3901796	Identifier	str		3897502	0					
ANR	3901797	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3901798	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3901799	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901800	Identifier	ast		3897502	0					
ANR	3901801	Identifier	child		3897502	1					
ANR	3901802	PrimaryExpression	1		3897502	1					
ANR	3901803	Argument	0		3897502	2					
ANR	3901804	PrimaryExpression	0		3897502	0					
ANR	3901805	Argument	indent		3897502	3					
ANR	3901806	Identifier	indent		3897502	0					
ANR	3901807	IfStatement	if ( ast -> child [ 2 ] )		3897502	345					
ANR	3901808	Condition	ast -> child [ 2 ]	1538:7:43998:44010	3897502	0	True				
ANR	3901809	ArrayIndexing	ast -> child [ 2 ]		3897502	0					
ANR	3901810	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901811	Identifier	ast		3897502	0					
ANR	3901812	Identifier	child		3897502	1					
ANR	3901813	PrimaryExpression	2		3897502	1					
ANR	3901814	CompoundStatement		571:22:19307:19307	3897502	1					
ANR	3901815	ExpressionStatement	"smart_str_appends ( str , ""} finally {\\n"" )"	1539:4:44019:44058	3897502	0	True				
ANR	3901816	CallExpression	"smart_str_appends ( str , ""} finally {\\n"" )"		3897502	0					
ANR	3901817	Callee	smart_str_appends		3897502	0					
ANR	3901818	Identifier	smart_str_appends		3897502	0					
ANR	3901819	ArgumentList	str		3897502	1					
ANR	3901820	Argument	str		3897502	0					
ANR	3901821	Identifier	str		3897502	0					
ANR	3901822	Argument	"""} finally {\\n"""		3897502	1					
ANR	3901823	PrimaryExpression	"""} finally {\\n"""		3897502	0					
ANR	3901824	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 2 ] , indent + 1 )"	1540:4:44064:44116	3897502	1	True				
ANR	3901825	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 2 ] , indent + 1 )"		3897502	0					
ANR	3901826	Callee	zend_ast_export_stmt		3897502	0					
ANR	3901827	Identifier	zend_ast_export_stmt		3897502	0					
ANR	3901828	ArgumentList	str		3897502	1					
ANR	3901829	Argument	str		3897502	0					
ANR	3901830	Identifier	str		3897502	0					
ANR	3901831	Argument	ast -> child [ 2 ]		3897502	1					
ANR	3901832	ArrayIndexing	ast -> child [ 2 ]		3897502	0					
ANR	3901833	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901834	Identifier	ast		3897502	0					
ANR	3901835	Identifier	child		3897502	1					
ANR	3901836	PrimaryExpression	2		3897502	1					
ANR	3901837	Argument	indent + 1		3897502	2					
ANR	3901838	AdditiveExpression	indent + 1		3897502	0		+			
ANR	3901839	Identifier	indent		3897502	0					
ANR	3901840	PrimaryExpression	1		3897502	1					
ANR	3901841	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1541:4:44122:44157	3897502	2	True				
ANR	3901842	CallExpression	"zend_ast_export_indent ( str , indent )"		3897502	0					
ANR	3901843	Callee	zend_ast_export_indent		3897502	0					
ANR	3901844	Identifier	zend_ast_export_indent		3897502	0					
ANR	3901845	ArgumentList	str		3897502	1					
ANR	3901846	Argument	str		3897502	0					
ANR	3901847	Identifier	str		3897502	0					
ANR	3901848	Argument	indent		3897502	1					
ANR	3901849	Identifier	indent		3897502	0					
ANR	3901850	ExpressionStatement	"smart_str_appendc ( str , '}' )"	1543:3:44167:44194	3897502	346	True				
ANR	3901851	CallExpression	"smart_str_appendc ( str , '}' )"		3897502	0					
ANR	3901852	Callee	smart_str_appendc		3897502	0					
ANR	3901853	Identifier	smart_str_appendc		3897502	0					
ANR	3901854	ArgumentList	str		3897502	1					
ANR	3901855	Argument	str		3897502	0					
ANR	3901856	Identifier	str		3897502	0					
ANR	3901857	Argument	'}'		3897502	1					
ANR	3901858	PrimaryExpression	'}'		3897502	0					
ANR	3901859	BreakStatement	break ;	1544:3:44199:44204	3897502	347	True				
ANR	3901860	Label	case ZEND_AST_CATCH :	1545:2:44208:44227	3897502	348	True				
ANR	3901861	Identifier	ZEND_AST_CATCH		3897502	0					
ANR	3901862	ExpressionStatement	"smart_str_appends ( str , ""} catch ("" )"	1546:3:44232:44267	3897502	349	True				
ANR	3901863	CallExpression	"smart_str_appends ( str , ""} catch ("" )"		3897502	0					
ANR	3901864	Callee	smart_str_appends		3897502	0					
ANR	3901865	Identifier	smart_str_appends		3897502	0					
ANR	3901866	ArgumentList	str		3897502	1					
ANR	3901867	Argument	str		3897502	0					
ANR	3901868	Identifier	str		3897502	0					
ANR	3901869	Argument	"""} catch ("""		3897502	1					
ANR	3901870	PrimaryExpression	"""} catch ("""		3897502	0					
ANR	3901871	ExpressionStatement	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"	1547:3:44272:44326	3897502	350	True				
ANR	3901872	CallExpression	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3901873	Callee	zend_ast_export_ns_name		3897502	0					
ANR	3901874	Identifier	zend_ast_export_ns_name		3897502	0					
ANR	3901875	ArgumentList	str		3897502	1					
ANR	3901876	Argument	str		3897502	0					
ANR	3901877	Identifier	str		3897502	0					
ANR	3901878	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3901879	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3901880	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901881	Identifier	ast		3897502	0					
ANR	3901882	Identifier	child		3897502	1					
ANR	3901883	PrimaryExpression	0		3897502	1					
ANR	3901884	Argument	0		3897502	2					
ANR	3901885	PrimaryExpression	0		3897502	0					
ANR	3901886	Argument	indent		3897502	3					
ANR	3901887	Identifier	indent		3897502	0					
ANR	3901888	ExpressionStatement	"smart_str_appends ( str , "" $"" )"	1548:3:44331:44359	3897502	351	True				
ANR	3901889	CallExpression	"smart_str_appends ( str , "" $"" )"		3897502	0					
ANR	3901890	Callee	smart_str_appends		3897502	0					
ANR	3901891	Identifier	smart_str_appends		3897502	0					
ANR	3901892	ArgumentList	str		3897502	1					
ANR	3901893	Argument	str		3897502	0					
ANR	3901894	Identifier	str		3897502	0					
ANR	3901895	Argument	""" $"""		3897502	1					
ANR	3901896	PrimaryExpression	""" $"""		3897502	0					
ANR	3901897	ExpressionStatement	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"	1549:3:44364:44414	3897502	352	True				
ANR	3901898	CallExpression	"zend_ast_export_var ( str , ast -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3901899	Callee	zend_ast_export_var		3897502	0					
ANR	3901900	Identifier	zend_ast_export_var		3897502	0					
ANR	3901901	ArgumentList	str		3897502	1					
ANR	3901902	Argument	str		3897502	0					
ANR	3901903	Identifier	str		3897502	0					
ANR	3901904	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3901905	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3901906	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901907	Identifier	ast		3897502	0					
ANR	3901908	Identifier	child		3897502	1					
ANR	3901909	PrimaryExpression	1		3897502	1					
ANR	3901910	Argument	0		3897502	2					
ANR	3901911	PrimaryExpression	0		3897502	0					
ANR	3901912	Argument	indent		3897502	3					
ANR	3901913	Identifier	indent		3897502	0					
ANR	3901914	ExpressionStatement	"smart_str_appends ( str , "") {\\n"" )"	1550:3:44419:44450	3897502	353	True				
ANR	3901915	CallExpression	"smart_str_appends ( str , "") {\\n"" )"		3897502	0					
ANR	3901916	Callee	smart_str_appends		3897502	0					
ANR	3901917	Identifier	smart_str_appends		3897502	0					
ANR	3901918	ArgumentList	str		3897502	1					
ANR	3901919	Argument	str		3897502	0					
ANR	3901920	Identifier	str		3897502	0					
ANR	3901921	Argument	""") {\\n"""		3897502	1					
ANR	3901922	PrimaryExpression	""") {\\n"""		3897502	0					
ANR	3901923	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 2 ] , indent + 1 )"	1551:3:44455:44507	3897502	354	True				
ANR	3901924	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 2 ] , indent + 1 )"		3897502	0					
ANR	3901925	Callee	zend_ast_export_stmt		3897502	0					
ANR	3901926	Identifier	zend_ast_export_stmt		3897502	0					
ANR	3901927	ArgumentList	str		3897502	1					
ANR	3901928	Argument	str		3897502	0					
ANR	3901929	Identifier	str		3897502	0					
ANR	3901930	Argument	ast -> child [ 2 ]		3897502	1					
ANR	3901931	ArrayIndexing	ast -> child [ 2 ]		3897502	0					
ANR	3901932	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901933	Identifier	ast		3897502	0					
ANR	3901934	Identifier	child		3897502	1					
ANR	3901935	PrimaryExpression	2		3897502	1					
ANR	3901936	Argument	indent + 1		3897502	2					
ANR	3901937	AdditiveExpression	indent + 1		3897502	0		+			
ANR	3901938	Identifier	indent		3897502	0					
ANR	3901939	PrimaryExpression	1		3897502	1					
ANR	3901940	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1552:3:44512:44547	3897502	355	True				
ANR	3901941	CallExpression	"zend_ast_export_indent ( str , indent )"		3897502	0					
ANR	3901942	Callee	zend_ast_export_indent		3897502	0					
ANR	3901943	Identifier	zend_ast_export_indent		3897502	0					
ANR	3901944	ArgumentList	str		3897502	1					
ANR	3901945	Argument	str		3897502	0					
ANR	3901946	Identifier	str		3897502	0					
ANR	3901947	Argument	indent		3897502	1					
ANR	3901948	Identifier	indent		3897502	0					
ANR	3901949	BreakStatement	break ;	1553:3:44552:44557	3897502	356	True				
ANR	3901950	Label	case ZEND_AST_PARAM :	1554:2:44561:44580	3897502	357	True				
ANR	3901951	Identifier	ZEND_AST_PARAM		3897502	0					
ANR	3901952	IfStatement	if ( ast -> child [ 0 ] )		3897502	358					
ANR	3901953	Condition	ast -> child [ 0 ]	1555:7:44589:44601	3897502	0	True				
ANR	3901954	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3901955	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901956	Identifier	ast		3897502	0					
ANR	3901957	Identifier	child		3897502	1					
ANR	3901958	PrimaryExpression	0		3897502	1					
ANR	3901959	CompoundStatement		588:22:19898:19898	3897502	1					
ANR	3901960	ExpressionStatement	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"	1556:4:44610:44664	3897502	0	True				
ANR	3901961	CallExpression	"zend_ast_export_ns_name ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3901962	Callee	zend_ast_export_ns_name		3897502	0					
ANR	3901963	Identifier	zend_ast_export_ns_name		3897502	0					
ANR	3901964	ArgumentList	str		3897502	1					
ANR	3901965	Argument	str		3897502	0					
ANR	3901966	Identifier	str		3897502	0					
ANR	3901967	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3901968	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3901969	PtrMemberAccess	ast -> child		3897502	0					
ANR	3901970	Identifier	ast		3897502	0					
ANR	3901971	Identifier	child		3897502	1					
ANR	3901972	PrimaryExpression	0		3897502	1					
ANR	3901973	Argument	0		3897502	2					
ANR	3901974	PrimaryExpression	0		3897502	0					
ANR	3901975	Argument	indent		3897502	3					
ANR	3901976	Identifier	indent		3897502	0					
ANR	3901977	ExpressionStatement	"smart_str_appendc ( str , ' ' )"	1557:4:44670:44697	3897502	1	True				
ANR	3901978	CallExpression	"smart_str_appendc ( str , ' ' )"		3897502	0					
ANR	3901979	Callee	smart_str_appendc		3897502	0					
ANR	3901980	Identifier	smart_str_appendc		3897502	0					
ANR	3901981	ArgumentList	str		3897502	1					
ANR	3901982	Argument	str		3897502	0					
ANR	3901983	Identifier	str		3897502	0					
ANR	3901984	Argument	' '		3897502	1					
ANR	3901985	PrimaryExpression	' '		3897502	0					
ANR	3901986	IfStatement	if ( ast -> attr & ZEND_PARAM_REF )		3897502	359					
ANR	3901987	Condition	ast -> attr & ZEND_PARAM_REF	1559:7:44711:44736	3897502	0	True				
ANR	3901988	BitAndExpression	ast -> attr & ZEND_PARAM_REF		3897502	0		&			
ANR	3901989	PtrMemberAccess	ast -> attr		3897502	0					
ANR	3901990	Identifier	ast		3897502	0					
ANR	3901991	Identifier	attr		3897502	1					
ANR	3901992	Identifier	ZEND_PARAM_REF		3897502	1					
ANR	3901993	CompoundStatement		592:35:20033:20033	3897502	1					
ANR	3901994	ExpressionStatement	"smart_str_appendc ( str , '&' )"	1560:4:44745:44772	3897502	0	True				
ANR	3901995	CallExpression	"smart_str_appendc ( str , '&' )"		3897502	0					
ANR	3901996	Callee	smart_str_appendc		3897502	0					
ANR	3901997	Identifier	smart_str_appendc		3897502	0					
ANR	3901998	ArgumentList	str		3897502	1					
ANR	3901999	Argument	str		3897502	0					
ANR	3902000	Identifier	str		3897502	0					
ANR	3902001	Argument	'&'		3897502	1					
ANR	3902002	PrimaryExpression	'&'		3897502	0					
ANR	3902003	IfStatement	if ( ast -> attr & ZEND_PARAM_VARIADIC )		3897502	360					
ANR	3902004	Condition	ast -> attr & ZEND_PARAM_VARIADIC	1562:7:44786:44816	3897502	0	True				
ANR	3902005	BitAndExpression	ast -> attr & ZEND_PARAM_VARIADIC		3897502	0		&			
ANR	3902006	PtrMemberAccess	ast -> attr		3897502	0					
ANR	3902007	Identifier	ast		3897502	0					
ANR	3902008	Identifier	attr		3897502	1					
ANR	3902009	Identifier	ZEND_PARAM_VARIADIC		3897502	1					
ANR	3902010	CompoundStatement		595:40:20113:20113	3897502	1					
ANR	3902011	ExpressionStatement	"smart_str_appends ( str , ""..."" )"	1563:4:44825:44854	3897502	0	True				
ANR	3902012	CallExpression	"smart_str_appends ( str , ""..."" )"		3897502	0					
ANR	3902013	Callee	smart_str_appends		3897502	0					
ANR	3902014	Identifier	smart_str_appends		3897502	0					
ANR	3902015	ArgumentList	str		3897502	1					
ANR	3902016	Argument	str		3897502	0					
ANR	3902017	Identifier	str		3897502	0					
ANR	3902018	Argument	"""..."""		3897502	1					
ANR	3902019	PrimaryExpression	"""..."""		3897502	0					
ANR	3902020	ExpressionStatement	"smart_str_appendc ( str , '$' )"	1565:3:44864:44891	3897502	361	True				
ANR	3902021	CallExpression	"smart_str_appendc ( str , '$' )"		3897502	0					
ANR	3902022	Callee	smart_str_appendc		3897502	0					
ANR	3902023	Identifier	smart_str_appendc		3897502	0					
ANR	3902024	ArgumentList	str		3897502	1					
ANR	3902025	Argument	str		3897502	0					
ANR	3902026	Identifier	str		3897502	0					
ANR	3902027	Argument	'$'		3897502	1					
ANR	3902028	PrimaryExpression	'$'		3897502	0					
ANR	3902029	ExpressionStatement	"zend_ast_export_name ( str , ast -> child [ 1 ] , 0 , indent )"	1566:3:44896:44947	3897502	362	True				
ANR	3902030	CallExpression	"zend_ast_export_name ( str , ast -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3902031	Callee	zend_ast_export_name		3897502	0					
ANR	3902032	Identifier	zend_ast_export_name		3897502	0					
ANR	3902033	ArgumentList	str		3897502	1					
ANR	3902034	Argument	str		3897502	0					
ANR	3902035	Identifier	str		3897502	0					
ANR	3902036	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3902037	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3902038	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902039	Identifier	ast		3897502	0					
ANR	3902040	Identifier	child		3897502	1					
ANR	3902041	PrimaryExpression	1		3897502	1					
ANR	3902042	Argument	0		3897502	2					
ANR	3902043	PrimaryExpression	0		3897502	0					
ANR	3902044	Argument	indent		3897502	3					
ANR	3902045	Identifier	indent		3897502	0					
ANR	3902046	ExpressionStatement	APPEND_DEFAULT_VALUE ( 2 )	1567:3:44952:44975	3897502	363	True				
ANR	3902047	CallExpression	APPEND_DEFAULT_VALUE ( 2 )		3897502	0					
ANR	3902048	Callee	APPEND_DEFAULT_VALUE		3897502	0					
ANR	3902049	Identifier	APPEND_DEFAULT_VALUE		3897502	0					
ANR	3902050	ArgumentList	2		3897502	1					
ANR	3902051	Argument	2		3897502	0					
ANR	3902052	PrimaryExpression	2		3897502	0					
ANR	3902053	Label	case ZEND_AST_FOR :	1570:2:45002:45019	3897502	364	True				
ANR	3902054	Identifier	ZEND_AST_FOR		3897502	0					
ANR	3902055	ExpressionStatement	"smart_str_appends ( str , ""for ("" )"	1571:3:45024:45055	3897502	365	True				
ANR	3902056	CallExpression	"smart_str_appends ( str , ""for ("" )"		3897502	0					
ANR	3902057	Callee	smart_str_appends		3897502	0					
ANR	3902058	Identifier	smart_str_appends		3897502	0					
ANR	3902059	ArgumentList	str		3897502	1					
ANR	3902060	Argument	str		3897502	0					
ANR	3902061	Identifier	str		3897502	0					
ANR	3902062	Argument	"""for ("""		3897502	1					
ANR	3902063	PrimaryExpression	"""for ("""		3897502	0					
ANR	3902064	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1572:3:45060:45109	3897502	366	True				
ANR	3902065	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3902066	Callee	zend_ast_export_ex		3897502	0					
ANR	3902067	Identifier	zend_ast_export_ex		3897502	0					
ANR	3902068	ArgumentList	str		3897502	1					
ANR	3902069	Argument	str		3897502	0					
ANR	3902070	Identifier	str		3897502	0					
ANR	3902071	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3902072	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3902073	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902074	Identifier	ast		3897502	0					
ANR	3902075	Identifier	child		3897502	1					
ANR	3902076	PrimaryExpression	0		3897502	1					
ANR	3902077	Argument	0		3897502	2					
ANR	3902078	PrimaryExpression	0		3897502	0					
ANR	3902079	Argument	indent		3897502	3					
ANR	3902080	Identifier	indent		3897502	0					
ANR	3902081	ExpressionStatement	"smart_str_appendc ( str , ';' )"	1573:3:45114:45141	3897502	367	True				
ANR	3902082	CallExpression	"smart_str_appendc ( str , ';' )"		3897502	0					
ANR	3902083	Callee	smart_str_appendc		3897502	0					
ANR	3902084	Identifier	smart_str_appendc		3897502	0					
ANR	3902085	ArgumentList	str		3897502	1					
ANR	3902086	Argument	str		3897502	0					
ANR	3902087	Identifier	str		3897502	0					
ANR	3902088	Argument	';'		3897502	1					
ANR	3902089	PrimaryExpression	';'		3897502	0					
ANR	3902090	IfStatement	if ( ast -> child [ 1 ] )		3897502	368					
ANR	3902091	Condition	ast -> child [ 1 ]	1574:7:45150:45162	3897502	0	True				
ANR	3902092	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3902093	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902094	Identifier	ast		3897502	0					
ANR	3902095	Identifier	child		3897502	1					
ANR	3902096	PrimaryExpression	1		3897502	1					
ANR	3902097	CompoundStatement		607:22:20459:20459	3897502	1					
ANR	3902098	ExpressionStatement	"smart_str_appendc ( str , ' ' )"	1575:4:45171:45198	3897502	0	True				
ANR	3902099	CallExpression	"smart_str_appendc ( str , ' ' )"		3897502	0					
ANR	3902100	Callee	smart_str_appendc		3897502	0					
ANR	3902101	Identifier	smart_str_appendc		3897502	0					
ANR	3902102	ArgumentList	str		3897502	1					
ANR	3902103	Argument	str		3897502	0					
ANR	3902104	Identifier	str		3897502	0					
ANR	3902105	Argument	' '		3897502	1					
ANR	3902106	PrimaryExpression	' '		3897502	0					
ANR	3902107	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"	1576:4:45204:45253	3897502	1	True				
ANR	3902108	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3902109	Callee	zend_ast_export_ex		3897502	0					
ANR	3902110	Identifier	zend_ast_export_ex		3897502	0					
ANR	3902111	ArgumentList	str		3897502	1					
ANR	3902112	Argument	str		3897502	0					
ANR	3902113	Identifier	str		3897502	0					
ANR	3902114	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3902115	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3902116	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902117	Identifier	ast		3897502	0					
ANR	3902118	Identifier	child		3897502	1					
ANR	3902119	PrimaryExpression	1		3897502	1					
ANR	3902120	Argument	0		3897502	2					
ANR	3902121	PrimaryExpression	0		3897502	0					
ANR	3902122	Argument	indent		3897502	3					
ANR	3902123	Identifier	indent		3897502	0					
ANR	3902124	ExpressionStatement	"smart_str_appendc ( str , ';' )"	1578:3:45263:45290	3897502	369	True				
ANR	3902125	CallExpression	"smart_str_appendc ( str , ';' )"		3897502	0					
ANR	3902126	Callee	smart_str_appendc		3897502	0					
ANR	3902127	Identifier	smart_str_appendc		3897502	0					
ANR	3902128	ArgumentList	str		3897502	1					
ANR	3902129	Argument	str		3897502	0					
ANR	3902130	Identifier	str		3897502	0					
ANR	3902131	Argument	';'		3897502	1					
ANR	3902132	PrimaryExpression	';'		3897502	0					
ANR	3902133	IfStatement	if ( ast -> child [ 2 ] )		3897502	370					
ANR	3902134	Condition	ast -> child [ 2 ]	1579:7:45299:45311	3897502	0	True				
ANR	3902135	ArrayIndexing	ast -> child [ 2 ]		3897502	0					
ANR	3902136	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902137	Identifier	ast		3897502	0					
ANR	3902138	Identifier	child		3897502	1					
ANR	3902139	PrimaryExpression	2		3897502	1					
ANR	3902140	CompoundStatement		612:22:20608:20608	3897502	1					
ANR	3902141	ExpressionStatement	"smart_str_appendc ( str , ' ' )"	1580:4:45320:45347	3897502	0	True				
ANR	3902142	CallExpression	"smart_str_appendc ( str , ' ' )"		3897502	0					
ANR	3902143	Callee	smart_str_appendc		3897502	0					
ANR	3902144	Identifier	smart_str_appendc		3897502	0					
ANR	3902145	ArgumentList	str		3897502	1					
ANR	3902146	Argument	str		3897502	0					
ANR	3902147	Identifier	str		3897502	0					
ANR	3902148	Argument	' '		3897502	1					
ANR	3902149	PrimaryExpression	' '		3897502	0					
ANR	3902150	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 0 , indent )"	1581:4:45353:45402	3897502	1	True				
ANR	3902151	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 0 , indent )"		3897502	0					
ANR	3902152	Callee	zend_ast_export_ex		3897502	0					
ANR	3902153	Identifier	zend_ast_export_ex		3897502	0					
ANR	3902154	ArgumentList	str		3897502	1					
ANR	3902155	Argument	str		3897502	0					
ANR	3902156	Identifier	str		3897502	0					
ANR	3902157	Argument	ast -> child [ 2 ]		3897502	1					
ANR	3902158	ArrayIndexing	ast -> child [ 2 ]		3897502	0					
ANR	3902159	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902160	Identifier	ast		3897502	0					
ANR	3902161	Identifier	child		3897502	1					
ANR	3902162	PrimaryExpression	2		3897502	1					
ANR	3902163	Argument	0		3897502	2					
ANR	3902164	PrimaryExpression	0		3897502	0					
ANR	3902165	Argument	indent		3897502	3					
ANR	3902166	Identifier	indent		3897502	0					
ANR	3902167	ExpressionStatement	"smart_str_appends ( str , "") {\\n"" )"	1583:3:45412:45443	3897502	371	True				
ANR	3902168	CallExpression	"smart_str_appends ( str , "") {\\n"" )"		3897502	0					
ANR	3902169	Callee	smart_str_appends		3897502	0					
ANR	3902170	Identifier	smart_str_appends		3897502	0					
ANR	3902171	ArgumentList	str		3897502	1					
ANR	3902172	Argument	str		3897502	0					
ANR	3902173	Identifier	str		3897502	0					
ANR	3902174	Argument	""") {\\n"""		3897502	1					
ANR	3902175	PrimaryExpression	""") {\\n"""		3897502	0					
ANR	3902176	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 3 ] , indent + 1 )"	1584:3:45448:45500	3897502	372	True				
ANR	3902177	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 3 ] , indent + 1 )"		3897502	0					
ANR	3902178	Callee	zend_ast_export_stmt		3897502	0					
ANR	3902179	Identifier	zend_ast_export_stmt		3897502	0					
ANR	3902180	ArgumentList	str		3897502	1					
ANR	3902181	Argument	str		3897502	0					
ANR	3902182	Identifier	str		3897502	0					
ANR	3902183	Argument	ast -> child [ 3 ]		3897502	1					
ANR	3902184	ArrayIndexing	ast -> child [ 3 ]		3897502	0					
ANR	3902185	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902186	Identifier	ast		3897502	0					
ANR	3902187	Identifier	child		3897502	1					
ANR	3902188	PrimaryExpression	3		3897502	1					
ANR	3902189	Argument	indent + 1		3897502	2					
ANR	3902190	AdditiveExpression	indent + 1		3897502	0		+			
ANR	3902191	Identifier	indent		3897502	0					
ANR	3902192	PrimaryExpression	1		3897502	1					
ANR	3902193	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1585:3:45505:45540	3897502	373	True				
ANR	3902194	CallExpression	"zend_ast_export_indent ( str , indent )"		3897502	0					
ANR	3902195	Callee	zend_ast_export_indent		3897502	0					
ANR	3902196	Identifier	zend_ast_export_indent		3897502	0					
ANR	3902197	ArgumentList	str		3897502	1					
ANR	3902198	Argument	str		3897502	0					
ANR	3902199	Identifier	str		3897502	0					
ANR	3902200	Argument	indent		3897502	1					
ANR	3902201	Identifier	indent		3897502	0					
ANR	3902202	ExpressionStatement	"smart_str_appendc ( str , '}' )"	1586:3:45545:45572	3897502	374	True				
ANR	3902203	CallExpression	"smart_str_appendc ( str , '}' )"		3897502	0					
ANR	3902204	Callee	smart_str_appendc		3897502	0					
ANR	3902205	Identifier	smart_str_appendc		3897502	0					
ANR	3902206	ArgumentList	str		3897502	1					
ANR	3902207	Argument	str		3897502	0					
ANR	3902208	Identifier	str		3897502	0					
ANR	3902209	Argument	'}'		3897502	1					
ANR	3902210	PrimaryExpression	'}'		3897502	0					
ANR	3902211	BreakStatement	break ;	1587:3:45577:45582	3897502	375	True				
ANR	3902212	Label	case ZEND_AST_FOREACH :	1588:2:45586:45607	3897502	376	True				
ANR	3902213	Identifier	ZEND_AST_FOREACH		3897502	0					
ANR	3902214	ExpressionStatement	"smart_str_appends ( str , ""foreach ("" )"	1589:3:45612:45647	3897502	377	True				
ANR	3902215	CallExpression	"smart_str_appends ( str , ""foreach ("" )"		3897502	0					
ANR	3902216	Callee	smart_str_appends		3897502	0					
ANR	3902217	Identifier	smart_str_appends		3897502	0					
ANR	3902218	ArgumentList	str		3897502	1					
ANR	3902219	Argument	str		3897502	0					
ANR	3902220	Identifier	str		3897502	0					
ANR	3902221	Argument	"""foreach ("""		3897502	1					
ANR	3902222	PrimaryExpression	"""foreach ("""		3897502	0					
ANR	3902223	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1590:3:45652:45701	3897502	378	True				
ANR	3902224	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3902225	Callee	zend_ast_export_ex		3897502	0					
ANR	3902226	Identifier	zend_ast_export_ex		3897502	0					
ANR	3902227	ArgumentList	str		3897502	1					
ANR	3902228	Argument	str		3897502	0					
ANR	3902229	Identifier	str		3897502	0					
ANR	3902230	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3902231	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3902232	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902233	Identifier	ast		3897502	0					
ANR	3902234	Identifier	child		3897502	1					
ANR	3902235	PrimaryExpression	0		3897502	1					
ANR	3902236	Argument	0		3897502	2					
ANR	3902237	PrimaryExpression	0		3897502	0					
ANR	3902238	Argument	indent		3897502	3					
ANR	3902239	Identifier	indent		3897502	0					
ANR	3902240	ExpressionStatement	"smart_str_appends ( str , "" as "" )"	1591:3:45706:45736	3897502	379	True				
ANR	3902241	CallExpression	"smart_str_appends ( str , "" as "" )"		3897502	0					
ANR	3902242	Callee	smart_str_appends		3897502	0					
ANR	3902243	Identifier	smart_str_appends		3897502	0					
ANR	3902244	ArgumentList	str		3897502	1					
ANR	3902245	Argument	str		3897502	0					
ANR	3902246	Identifier	str		3897502	0					
ANR	3902247	Argument	""" as """		3897502	1					
ANR	3902248	PrimaryExpression	""" as """		3897502	0					
ANR	3902249	IfStatement	if ( ast -> child [ 2 ] )		3897502	380					
ANR	3902250	Condition	ast -> child [ 2 ]	1592:7:45745:45757	3897502	0	True				
ANR	3902251	ArrayIndexing	ast -> child [ 2 ]		3897502	0					
ANR	3902252	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902253	Identifier	ast		3897502	0					
ANR	3902254	Identifier	child		3897502	1					
ANR	3902255	PrimaryExpression	2		3897502	1					
ANR	3902256	CompoundStatement		625:22:21054:21054	3897502	1					
ANR	3902257	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 0 , indent )"	1593:4:45766:45815	3897502	0	True				
ANR	3902258	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 2 ] , 0 , indent )"		3897502	0					
ANR	3902259	Callee	zend_ast_export_ex		3897502	0					
ANR	3902260	Identifier	zend_ast_export_ex		3897502	0					
ANR	3902261	ArgumentList	str		3897502	1					
ANR	3902262	Argument	str		3897502	0					
ANR	3902263	Identifier	str		3897502	0					
ANR	3902264	Argument	ast -> child [ 2 ]		3897502	1					
ANR	3902265	ArrayIndexing	ast -> child [ 2 ]		3897502	0					
ANR	3902266	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902267	Identifier	ast		3897502	0					
ANR	3902268	Identifier	child		3897502	1					
ANR	3902269	PrimaryExpression	2		3897502	1					
ANR	3902270	Argument	0		3897502	2					
ANR	3902271	PrimaryExpression	0		3897502	0					
ANR	3902272	Argument	indent		3897502	3					
ANR	3902273	Identifier	indent		3897502	0					
ANR	3902274	ExpressionStatement	"smart_str_appends ( str , "" => "" )"	1594:4:45821:45851	3897502	1	True				
ANR	3902275	CallExpression	"smart_str_appends ( str , "" => "" )"		3897502	0					
ANR	3902276	Callee	smart_str_appends		3897502	0					
ANR	3902277	Identifier	smart_str_appends		3897502	0					
ANR	3902278	ArgumentList	str		3897502	1					
ANR	3902279	Argument	str		3897502	0					
ANR	3902280	Identifier	str		3897502	0					
ANR	3902281	Argument	""" => """		3897502	1					
ANR	3902282	PrimaryExpression	""" => """		3897502	0					
ANR	3902283	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"	1596:3:45861:45910	3897502	381	True				
ANR	3902284	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , 0 , indent )"		3897502	0					
ANR	3902285	Callee	zend_ast_export_ex		3897502	0					
ANR	3902286	Identifier	zend_ast_export_ex		3897502	0					
ANR	3902287	ArgumentList	str		3897502	1					
ANR	3902288	Argument	str		3897502	0					
ANR	3902289	Identifier	str		3897502	0					
ANR	3902290	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3902291	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3902292	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902293	Identifier	ast		3897502	0					
ANR	3902294	Identifier	child		3897502	1					
ANR	3902295	PrimaryExpression	1		3897502	1					
ANR	3902296	Argument	0		3897502	2					
ANR	3902297	PrimaryExpression	0		3897502	0					
ANR	3902298	Argument	indent		3897502	3					
ANR	3902299	Identifier	indent		3897502	0					
ANR	3902300	ExpressionStatement	"smart_str_appends ( str , "") {\\n"" )"	1597:3:45915:45946	3897502	382	True				
ANR	3902301	CallExpression	"smart_str_appends ( str , "") {\\n"" )"		3897502	0					
ANR	3902302	Callee	smart_str_appends		3897502	0					
ANR	3902303	Identifier	smart_str_appends		3897502	0					
ANR	3902304	ArgumentList	str		3897502	1					
ANR	3902305	Argument	str		3897502	0					
ANR	3902306	Identifier	str		3897502	0					
ANR	3902307	Argument	""") {\\n"""		3897502	1					
ANR	3902308	PrimaryExpression	""") {\\n"""		3897502	0					
ANR	3902309	ExpressionStatement	"zend_ast_export_stmt ( str , ast -> child [ 3 ] , indent + 1 )"	1598:3:45951:46003	3897502	383	True				
ANR	3902310	CallExpression	"zend_ast_export_stmt ( str , ast -> child [ 3 ] , indent + 1 )"		3897502	0					
ANR	3902311	Callee	zend_ast_export_stmt		3897502	0					
ANR	3902312	Identifier	zend_ast_export_stmt		3897502	0					
ANR	3902313	ArgumentList	str		3897502	1					
ANR	3902314	Argument	str		3897502	0					
ANR	3902315	Identifier	str		3897502	0					
ANR	3902316	Argument	ast -> child [ 3 ]		3897502	1					
ANR	3902317	ArrayIndexing	ast -> child [ 3 ]		3897502	0					
ANR	3902318	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902319	Identifier	ast		3897502	0					
ANR	3902320	Identifier	child		3897502	1					
ANR	3902321	PrimaryExpression	3		3897502	1					
ANR	3902322	Argument	indent + 1		3897502	2					
ANR	3902323	AdditiveExpression	indent + 1		3897502	0		+			
ANR	3902324	Identifier	indent		3897502	0					
ANR	3902325	PrimaryExpression	1		3897502	1					
ANR	3902326	ExpressionStatement	"zend_ast_export_indent ( str , indent )"	1599:3:46008:46043	3897502	384	True				
ANR	3902327	CallExpression	"zend_ast_export_indent ( str , indent )"		3897502	0					
ANR	3902328	Callee	zend_ast_export_indent		3897502	0					
ANR	3902329	Identifier	zend_ast_export_indent		3897502	0					
ANR	3902330	ArgumentList	str		3897502	1					
ANR	3902331	Argument	str		3897502	0					
ANR	3902332	Identifier	str		3897502	0					
ANR	3902333	Argument	indent		3897502	1					
ANR	3902334	Identifier	indent		3897502	0					
ANR	3902335	ExpressionStatement	"smart_str_appendc ( str , '}' )"	1600:3:46048:46075	3897502	385	True				
ANR	3902336	CallExpression	"smart_str_appendc ( str , '}' )"		3897502	0					
ANR	3902337	Callee	smart_str_appendc		3897502	0					
ANR	3902338	Identifier	smart_str_appendc		3897502	0					
ANR	3902339	ArgumentList	str		3897502	1					
ANR	3902340	Argument	str		3897502	0					
ANR	3902341	Identifier	str		3897502	0					
ANR	3902342	Argument	'}'		3897502	1					
ANR	3902343	PrimaryExpression	'}'		3897502	0					
ANR	3902344	BreakStatement	break ;	1601:3:46080:46085	3897502	386	True				
ANR	3902345	ExpressionStatement	EMPTY_SWITCH_DEFAULT_CASE ( )	1602:2:46089:46116	3897502	387	True				
ANR	3902346	CallExpression	EMPTY_SWITCH_DEFAULT_CASE ( )		3897502	0					
ANR	3902347	Callee	EMPTY_SWITCH_DEFAULT_CASE		3897502	0					
ANR	3902348	Identifier	EMPTY_SWITCH_DEFAULT_CASE		3897502	0					
ANR	3902349	ArgumentList			3897502	1					
ANR	3902350	ReturnStatement	return ;	1604:1:46122:46128	3897502	6	True				
ANR	3902351	Label	binary_op :	1606:0:46131:46140	3897502	7	True				
ANR	3902352	Identifier	binary_op		3897502	0					
ANR	3902353	IfStatement	if ( priority > p )		3897502	8					
ANR	3902354	Condition	priority > p	1607:5:46147:46158	3897502	0	True				
ANR	3902355	RelationalExpression	priority > p		3897502	0		>			
ANR	3902356	Identifier	priority		3897502	0					
ANR	3902357	Identifier	p		3897502	1					
ANR	3902358	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1607:19:46161:46188	3897502	1	True				
ANR	3902359	CallExpression	"smart_str_appendc ( str , '(' )"		3897502	0					
ANR	3902360	Callee	smart_str_appendc		3897502	0					
ANR	3902361	Identifier	smart_str_appendc		3897502	0					
ANR	3902362	ArgumentList	str		3897502	1					
ANR	3902363	Argument	str		3897502	0					
ANR	3902364	Identifier	str		3897502	0					
ANR	3902365	Argument	'('		3897502	1					
ANR	3902366	PrimaryExpression	'('		3897502	0					
ANR	3902367	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , pl , indent )"	1608:1:46191:46241	3897502	9	True				
ANR	3902368	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , pl , indent )"		3897502	0					
ANR	3902369	Callee	zend_ast_export_ex		3897502	0					
ANR	3902370	Identifier	zend_ast_export_ex		3897502	0					
ANR	3902371	ArgumentList	str		3897502	1					
ANR	3902372	Argument	str		3897502	0					
ANR	3902373	Identifier	str		3897502	0					
ANR	3902374	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3902375	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3902376	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902377	Identifier	ast		3897502	0					
ANR	3902378	Identifier	child		3897502	1					
ANR	3902379	PrimaryExpression	0		3897502	1					
ANR	3902380	Argument	pl		3897502	2					
ANR	3902381	Identifier	pl		3897502	0					
ANR	3902382	Argument	indent		3897502	3					
ANR	3902383	Identifier	indent		3897502	0					
ANR	3902384	ExpressionStatement	"smart_str_appends ( str , op )"	1609:1:46244:46270	3897502	10	True				
ANR	3902385	CallExpression	"smart_str_appends ( str , op )"		3897502	0					
ANR	3902386	Callee	smart_str_appends		3897502	0					
ANR	3902387	Identifier	smart_str_appends		3897502	0					
ANR	3902388	ArgumentList	str		3897502	1					
ANR	3902389	Argument	str		3897502	0					
ANR	3902390	Identifier	str		3897502	0					
ANR	3902391	Argument	op		3897502	1					
ANR	3902392	Identifier	op		3897502	0					
ANR	3902393	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 1 ] , pr , indent )"	1610:1:46273:46323	3897502	11	True				
ANR	3902394	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 1 ] , pr , indent )"		3897502	0					
ANR	3902395	Callee	zend_ast_export_ex		3897502	0					
ANR	3902396	Identifier	zend_ast_export_ex		3897502	0					
ANR	3902397	ArgumentList	str		3897502	1					
ANR	3902398	Argument	str		3897502	0					
ANR	3902399	Identifier	str		3897502	0					
ANR	3902400	Argument	ast -> child [ 1 ]		3897502	1					
ANR	3902401	ArrayIndexing	ast -> child [ 1 ]		3897502	0					
ANR	3902402	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902403	Identifier	ast		3897502	0					
ANR	3902404	Identifier	child		3897502	1					
ANR	3902405	PrimaryExpression	1		3897502	1					
ANR	3902406	Argument	pr		3897502	2					
ANR	3902407	Identifier	pr		3897502	0					
ANR	3902408	Argument	indent		3897502	3					
ANR	3902409	Identifier	indent		3897502	0					
ANR	3902410	IfStatement	if ( priority > p )		3897502	12					
ANR	3902411	Condition	priority > p	1611:5:46330:46341	3897502	0	True				
ANR	3902412	RelationalExpression	priority > p		3897502	0		>			
ANR	3902413	Identifier	priority		3897502	0					
ANR	3902414	Identifier	p		3897502	1					
ANR	3902415	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1611:19:46344:46371	3897502	1	True				
ANR	3902416	CallExpression	"smart_str_appendc ( str , ')' )"		3897502	0					
ANR	3902417	Callee	smart_str_appendc		3897502	0					
ANR	3902418	Identifier	smart_str_appendc		3897502	0					
ANR	3902419	ArgumentList	str		3897502	1					
ANR	3902420	Argument	str		3897502	0					
ANR	3902421	Identifier	str		3897502	0					
ANR	3902422	Argument	')'		3897502	1					
ANR	3902423	PrimaryExpression	')'		3897502	0					
ANR	3902424	ReturnStatement	return ;	1612:1:46374:46380	3897502	13	True				
ANR	3902425	Label	prefix_op :	1614:0:46383:46392	3897502	14	True				
ANR	3902426	Identifier	prefix_op		3897502	0					
ANR	3902427	IfStatement	if ( priority > p )		3897502	15					
ANR	3902428	Condition	priority > p	1615:5:46399:46410	3897502	0	True				
ANR	3902429	RelationalExpression	priority > p		3897502	0		>			
ANR	3902430	Identifier	priority		3897502	0					
ANR	3902431	Identifier	p		3897502	1					
ANR	3902432	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1615:19:46413:46440	3897502	1	True				
ANR	3902433	CallExpression	"smart_str_appendc ( str , '(' )"		3897502	0					
ANR	3902434	Callee	smart_str_appendc		3897502	0					
ANR	3902435	Identifier	smart_str_appendc		3897502	0					
ANR	3902436	ArgumentList	str		3897502	1					
ANR	3902437	Argument	str		3897502	0					
ANR	3902438	Identifier	str		3897502	0					
ANR	3902439	Argument	'('		3897502	1					
ANR	3902440	PrimaryExpression	'('		3897502	0					
ANR	3902441	ExpressionStatement	"smart_str_appends ( str , op )"	1616:1:46443:46469	3897502	16	True				
ANR	3902442	CallExpression	"smart_str_appends ( str , op )"		3897502	0					
ANR	3902443	Callee	smart_str_appends		3897502	0					
ANR	3902444	Identifier	smart_str_appends		3897502	0					
ANR	3902445	ArgumentList	str		3897502	1					
ANR	3902446	Argument	str		3897502	0					
ANR	3902447	Identifier	str		3897502	0					
ANR	3902448	Argument	op		3897502	1					
ANR	3902449	Identifier	op		3897502	0					
ANR	3902450	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , pl , indent )"	1617:1:46472:46522	3897502	17	True				
ANR	3902451	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , pl , indent )"		3897502	0					
ANR	3902452	Callee	zend_ast_export_ex		3897502	0					
ANR	3902453	Identifier	zend_ast_export_ex		3897502	0					
ANR	3902454	ArgumentList	str		3897502	1					
ANR	3902455	Argument	str		3897502	0					
ANR	3902456	Identifier	str		3897502	0					
ANR	3902457	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3902458	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3902459	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902460	Identifier	ast		3897502	0					
ANR	3902461	Identifier	child		3897502	1					
ANR	3902462	PrimaryExpression	0		3897502	1					
ANR	3902463	Argument	pl		3897502	2					
ANR	3902464	Identifier	pl		3897502	0					
ANR	3902465	Argument	indent		3897502	3					
ANR	3902466	Identifier	indent		3897502	0					
ANR	3902467	IfStatement	if ( priority > p )		3897502	18					
ANR	3902468	Condition	priority > p	1618:5:46529:46540	3897502	0	True				
ANR	3902469	RelationalExpression	priority > p		3897502	0		>			
ANR	3902470	Identifier	priority		3897502	0					
ANR	3902471	Identifier	p		3897502	1					
ANR	3902472	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1618:19:46543:46570	3897502	1	True				
ANR	3902473	CallExpression	"smart_str_appendc ( str , ')' )"		3897502	0					
ANR	3902474	Callee	smart_str_appendc		3897502	0					
ANR	3902475	Identifier	smart_str_appendc		3897502	0					
ANR	3902476	ArgumentList	str		3897502	1					
ANR	3902477	Argument	str		3897502	0					
ANR	3902478	Identifier	str		3897502	0					
ANR	3902479	Argument	')'		3897502	1					
ANR	3902480	PrimaryExpression	')'		3897502	0					
ANR	3902481	ReturnStatement	return ;	1619:1:46573:46579	3897502	19	True				
ANR	3902482	Label	postfix_op :	1621:0:46582:46592	3897502	20	True				
ANR	3902483	Identifier	postfix_op		3897502	0					
ANR	3902484	IfStatement	if ( priority > p )		3897502	21					
ANR	3902485	Condition	priority > p	1622:5:46599:46610	3897502	0	True				
ANR	3902486	RelationalExpression	priority > p		3897502	0		>			
ANR	3902487	Identifier	priority		3897502	0					
ANR	3902488	Identifier	p		3897502	1					
ANR	3902489	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1622:19:46613:46640	3897502	1	True				
ANR	3902490	CallExpression	"smart_str_appendc ( str , '(' )"		3897502	0					
ANR	3902491	Callee	smart_str_appendc		3897502	0					
ANR	3902492	Identifier	smart_str_appendc		3897502	0					
ANR	3902493	ArgumentList	str		3897502	1					
ANR	3902494	Argument	str		3897502	0					
ANR	3902495	Identifier	str		3897502	0					
ANR	3902496	Argument	'('		3897502	1					
ANR	3902497	PrimaryExpression	'('		3897502	0					
ANR	3902498	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , pl , indent )"	1623:1:46643:46693	3897502	22	True				
ANR	3902499	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , pl , indent )"		3897502	0					
ANR	3902500	Callee	zend_ast_export_ex		3897502	0					
ANR	3902501	Identifier	zend_ast_export_ex		3897502	0					
ANR	3902502	ArgumentList	str		3897502	1					
ANR	3902503	Argument	str		3897502	0					
ANR	3902504	Identifier	str		3897502	0					
ANR	3902505	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3902506	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3902507	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902508	Identifier	ast		3897502	0					
ANR	3902509	Identifier	child		3897502	1					
ANR	3902510	PrimaryExpression	0		3897502	1					
ANR	3902511	Argument	pl		3897502	2					
ANR	3902512	Identifier	pl		3897502	0					
ANR	3902513	Argument	indent		3897502	3					
ANR	3902514	Identifier	indent		3897502	0					
ANR	3902515	ExpressionStatement	"smart_str_appends ( str , op )"	1624:1:46696:46722	3897502	23	True				
ANR	3902516	CallExpression	"smart_str_appends ( str , op )"		3897502	0					
ANR	3902517	Callee	smart_str_appends		3897502	0					
ANR	3902518	Identifier	smart_str_appends		3897502	0					
ANR	3902519	ArgumentList	str		3897502	1					
ANR	3902520	Argument	str		3897502	0					
ANR	3902521	Identifier	str		3897502	0					
ANR	3902522	Argument	op		3897502	1					
ANR	3902523	Identifier	op		3897502	0					
ANR	3902524	IfStatement	if ( priority > p )		3897502	24					
ANR	3902525	Condition	priority > p	1625:5:46729:46740	3897502	0	True				
ANR	3902526	RelationalExpression	priority > p		3897502	0		>			
ANR	3902527	Identifier	priority		3897502	0					
ANR	3902528	Identifier	p		3897502	1					
ANR	3902529	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1625:19:46743:46770	3897502	1	True				
ANR	3902530	CallExpression	"smart_str_appendc ( str , ')' )"		3897502	0					
ANR	3902531	Callee	smart_str_appendc		3897502	0					
ANR	3902532	Identifier	smart_str_appendc		3897502	0					
ANR	3902533	ArgumentList	str		3897502	1					
ANR	3902534	Argument	str		3897502	0					
ANR	3902535	Identifier	str		3897502	0					
ANR	3902536	Argument	')'		3897502	1					
ANR	3902537	PrimaryExpression	')'		3897502	0					
ANR	3902538	ReturnStatement	return ;	1626:1:46773:46779	3897502	25	True				
ANR	3902539	Label	func_op :	1628:0:46782:46789	3897502	26	True				
ANR	3902540	Identifier	func_op		3897502	0					
ANR	3902541	ExpressionStatement	"smart_str_appends ( str , op )"	1629:1:46792:46818	3897502	27	True				
ANR	3902542	CallExpression	"smart_str_appends ( str , op )"		3897502	0					
ANR	3902543	Callee	smart_str_appends		3897502	0					
ANR	3902544	Identifier	smart_str_appends		3897502	0					
ANR	3902545	ArgumentList	str		3897502	1					
ANR	3902546	Argument	str		3897502	0					
ANR	3902547	Identifier	str		3897502	0					
ANR	3902548	Argument	op		3897502	1					
ANR	3902549	Identifier	op		3897502	0					
ANR	3902550	ExpressionStatement	"smart_str_appendc ( str , '(' )"	1630:1:46821:46848	3897502	28	True				
ANR	3902551	CallExpression	"smart_str_appendc ( str , '(' )"		3897502	0					
ANR	3902552	Callee	smart_str_appendc		3897502	0					
ANR	3902553	Identifier	smart_str_appendc		3897502	0					
ANR	3902554	ArgumentList	str		3897502	1					
ANR	3902555	Argument	str		3897502	0					
ANR	3902556	Identifier	str		3897502	0					
ANR	3902557	Argument	'('		3897502	1					
ANR	3902558	PrimaryExpression	'('		3897502	0					
ANR	3902559	ExpressionStatement	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"	1631:1:46851:46900	3897502	29	True				
ANR	3902560	CallExpression	"zend_ast_export_ex ( str , ast -> child [ 0 ] , 0 , indent )"		3897502	0					
ANR	3902561	Callee	zend_ast_export_ex		3897502	0					
ANR	3902562	Identifier	zend_ast_export_ex		3897502	0					
ANR	3902563	ArgumentList	str		3897502	1					
ANR	3902564	Argument	str		3897502	0					
ANR	3902565	Identifier	str		3897502	0					
ANR	3902566	Argument	ast -> child [ 0 ]		3897502	1					
ANR	3902567	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3902568	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902569	Identifier	ast		3897502	0					
ANR	3902570	Identifier	child		3897502	1					
ANR	3902571	PrimaryExpression	0		3897502	1					
ANR	3902572	Argument	0		3897502	2					
ANR	3902573	PrimaryExpression	0		3897502	0					
ANR	3902574	Argument	indent		3897502	3					
ANR	3902575	Identifier	indent		3897502	0					
ANR	3902576	ExpressionStatement	"smart_str_appendc ( str , ')' )"	1632:1:46903:46930	3897502	30	True				
ANR	3902577	CallExpression	"smart_str_appendc ( str , ')' )"		3897502	0					
ANR	3902578	Callee	smart_str_appendc		3897502	0					
ANR	3902579	Identifier	smart_str_appendc		3897502	0					
ANR	3902580	ArgumentList	str		3897502	1					
ANR	3902581	Argument	str		3897502	0					
ANR	3902582	Identifier	str		3897502	0					
ANR	3902583	Argument	')'		3897502	1					
ANR	3902584	PrimaryExpression	')'		3897502	0					
ANR	3902585	ReturnStatement	return ;	1633:1:46933:46939	3897502	31	True				
ANR	3902586	Label	append_node_1 :	1635:0:46942:46955	3897502	32	True				
ANR	3902587	Identifier	append_node_1		3897502	0					
ANR	3902588	ExpressionStatement	"smart_str_appends ( str , op )"	1636:1:46958:46984	3897502	33	True				
ANR	3902589	CallExpression	"smart_str_appends ( str , op )"		3897502	0					
ANR	3902590	Callee	smart_str_appends		3897502	0					
ANR	3902591	Identifier	smart_str_appends		3897502	0					
ANR	3902592	ArgumentList	str		3897502	1					
ANR	3902593	Argument	str		3897502	0					
ANR	3902594	Identifier	str		3897502	0					
ANR	3902595	Argument	op		3897502	1					
ANR	3902596	Identifier	op		3897502	0					
ANR	3902597	IfStatement	if ( ast -> child [ 0 ] )		3897502	34					
ANR	3902598	Condition	ast -> child [ 0 ]	1637:5:46991:47003	3897502	0	True				
ANR	3902599	ArrayIndexing	ast -> child [ 0 ]		3897502	0					
ANR	3902600	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902601	Identifier	ast		3897502	0					
ANR	3902602	Identifier	child		3897502	1					
ANR	3902603	PrimaryExpression	0		3897502	1					
ANR	3902604	CompoundStatement		670:20:22300:22300	3897502	1					
ANR	3902605	ExpressionStatement	"smart_str_appendc ( str , ' ' )"	1638:2:47010:47037	3897502	0	True				
ANR	3902606	CallExpression	"smart_str_appendc ( str , ' ' )"		3897502	0					
ANR	3902607	Callee	smart_str_appendc		3897502	0					
ANR	3902608	Identifier	smart_str_appendc		3897502	0					
ANR	3902609	ArgumentList	str		3897502	1					
ANR	3902610	Argument	str		3897502	0					
ANR	3902611	Identifier	str		3897502	0					
ANR	3902612	Argument	' '		3897502	1					
ANR	3902613	PrimaryExpression	' '		3897502	0					
ANR	3902614	ExpressionStatement	ast = ast -> child [ 0 ]	1639:2:47041:47060	3897502	1	True				
ANR	3902615	AssignmentExpression	ast = ast -> child [ 0 ]		3897502	0		=			
ANR	3902616	Identifier	ast		3897502	0					
ANR	3902617	ArrayIndexing	ast -> child [ 0 ]		3897502	1					
ANR	3902618	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902619	Identifier	ast		3897502	0					
ANR	3902620	Identifier	child		3897502	1					
ANR	3902621	PrimaryExpression	0		3897502	1					
ANR	3902622	GotoStatement	goto tail_call ;	1640:2:47064:47078	3897502	2	True				
ANR	3902623	Identifier	tail_call		3897502	0					
ANR	3902624	ReturnStatement	return ;	1642:1:47084:47090	3897502	35	True				
ANR	3902625	Label	append_str :	1644:0:47093:47103	3897502	36	True				
ANR	3902626	Identifier	append_str		3897502	0					
ANR	3902627	ExpressionStatement	"smart_str_appends ( str , op )"	1645:1:47106:47132	3897502	37	True				
ANR	3902628	CallExpression	"smart_str_appends ( str , op )"		3897502	0					
ANR	3902629	Callee	smart_str_appends		3897502	0					
ANR	3902630	Identifier	smart_str_appends		3897502	0					
ANR	3902631	ArgumentList	str		3897502	1					
ANR	3902632	Argument	str		3897502	0					
ANR	3902633	Identifier	str		3897502	0					
ANR	3902634	Argument	op		3897502	1					
ANR	3902635	Identifier	op		3897502	0					
ANR	3902636	ReturnStatement	return ;	1646:1:47135:47141	3897502	38	True				
ANR	3902637	Label	append_default_value :	1648:0:47144:47164	3897502	39	True				
ANR	3902638	Identifier	append_default_value		3897502	0					
ANR	3902639	IfStatement	if ( ast -> child [ p ] )		3897502	40					
ANR	3902640	Condition	ast -> child [ p ]	1649:5:47171:47183	3897502	0	True				
ANR	3902641	ArrayIndexing	ast -> child [ p ]		3897502	0					
ANR	3902642	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902643	Identifier	ast		3897502	0					
ANR	3902644	Identifier	child		3897502	1					
ANR	3902645	Identifier	p		3897502	1					
ANR	3902646	CompoundStatement		682:20:22480:22480	3897502	1					
ANR	3902647	ExpressionStatement	"smart_str_appends ( str , "" = "" )"	1650:2:47190:47219	3897502	0	True				
ANR	3902648	CallExpression	"smart_str_appends ( str , "" = "" )"		3897502	0					
ANR	3902649	Callee	smart_str_appends		3897502	0					
ANR	3902650	Identifier	smart_str_appends		3897502	0					
ANR	3902651	ArgumentList	str		3897502	1					
ANR	3902652	Argument	str		3897502	0					
ANR	3902653	Identifier	str		3897502	0					
ANR	3902654	Argument	""" = """		3897502	1					
ANR	3902655	PrimaryExpression	""" = """		3897502	0					
ANR	3902656	ExpressionStatement	ast = ast -> child [ p ]	1651:2:47223:47242	3897502	1	True				
ANR	3902657	AssignmentExpression	ast = ast -> child [ p ]		3897502	0		=			
ANR	3902658	Identifier	ast		3897502	0					
ANR	3902659	ArrayIndexing	ast -> child [ p ]		3897502	1					
ANR	3902660	PtrMemberAccess	ast -> child		3897502	0					
ANR	3902661	Identifier	ast		3897502	0					
ANR	3902662	Identifier	child		3897502	1					
ANR	3902663	Identifier	p		3897502	1					
ANR	3902664	GotoStatement	goto tail_call ;	1652:2:47246:47260	3897502	2	True				
ANR	3902665	Identifier	tail_call		3897502	0					
ANR	3902666	ReturnStatement	return ;	1654:1:47266:47272	3897502	41	True				
ANR	3902667	ReturnType	static void		3897502	1					
ANR	3902668	Identifier	zend_ast_export_ex		3897502	2					
ANR	3902669	ParameterList	"smart_str * str , zend_ast * ast , int priority , int indent"		3897502	3					
ANR	3902670	Parameter	smart_str * str	967:31:24648:24661	3897502	0	True				
ANR	3902671	ParameterType	smart_str *		3897502	0					
ANR	3902672	Identifier	str		3897502	1					
ANR	3902673	Parameter	zend_ast * ast	967:47:24664:24676	3897502	1	True				
ANR	3902674	ParameterType	zend_ast *		3897502	0					
ANR	3902675	Identifier	ast		3897502	1					
ANR	3902676	Parameter	int priority	967:62:24679:24690	3897502	2	True				
ANR	3902677	ParameterType	int		3897502	0					
ANR	3902678	Identifier	priority		3897502	1					
ANR	3902679	Parameter	int indent	967:76:24693:24702	3897502	3	True				
ANR	3902680	ParameterType	int		3897502	0					
ANR	3902681	Identifier	indent		3897502	1					
ANR	3902682	CFGEntryNode	ENTRY		3897502		True				
ANR	3902683	CFGExitNode	EXIT		3897502		True				
ANR	3902684	Symbol	* * decl		3897502						
ANR	3902685	Symbol	* * * ast		3897502						
ANR	3902686	Symbol	pr		3897502						
ANR	3902687	Symbol	ast -> kind		3897502						
ANR	3902688	Symbol	ast		3897502						
ANR	3902689	Symbol	decl		3897502						
ANR	3902690	Symbol	indent		3897502						
ANR	3902691	Symbol	ZEND_ACC_PUBLIC		3897502						
ANR	3902692	Symbol	ast -> child [ 0 ] -> kind		3897502						
ANR	3902693	Symbol	ZEND_ACC_FINAL		3897502						
ANR	3902694	Symbol	ZEND_PARAM_REF		3897502						
ANR	3902695	Symbol	decl -> flags		3897502						
ANR	3902696	Symbol	T_FUNCTION		3897502						
ANR	3902697	Symbol	* ast		3897502						
ANR	3902698	Symbol	* * ast		3897502						
ANR	3902699	Symbol	ZEND_PARAM_VARIADIC		3897502						
ANR	3902700	Symbol	ZEND_ACC_PROTECTED		3897502						
ANR	3902701	Symbol	ZEND_ACC_STATIC		3897502						
ANR	3902702	Symbol	ZEND_ACC_INTERFACE		3897502						
ANR	3902703	Symbol	op		3897502						
ANR	3902704	Symbol	decl -> name		3897502						
ANR	3902705	Symbol	ast -> attr		3897502						
ANR	3902706	Symbol	* * ast -> child		3897502						
ANR	3902707	Symbol	ZEND_AST_ENCAPS_LIST		3897502						
ANR	3902708	Symbol	* decl -> child		3897502						
ANR	3902709	Symbol	ZEND_AST_CONST_DECL		3897502						
ANR	3902710	Symbol	T_CONST		3897502						
ANR	3902711	Symbol	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		3897502						
ANR	3902712	Symbol	priority		3897502						
ANR	3902713	Symbol	ZEND_ACC_PRIVATE		3897502						
ANR	3902714	Symbol	ZSTR_VAL		3897502						
ANR	3902715	Symbol	ZEND_ACC_TRAIT		3897502						
ANR	3902716	Symbol	str		3897502						
ANR	3902717	Symbol	p		3897502						
ANR	3902718	Symbol	ZEND_AST_CLOSURE		3897502						
ANR	3902719	Symbol	ZEND_ACC_ABSTRACT		3897502						
ANR	3902720	Symbol	decl -> child		3897502						
ANR	3902721	Symbol	ZEND_ACC_RETURN_REFERENCE		3897502						
ANR	3902722	Symbol	ZSTR_LEN		3897502						
ANR	3902723	Symbol	* ast -> child		3897502						
ANR	3902724	Symbol	* p		3897502						
ANR	3902725	Symbol	pl		3897502						
ANR	3902726	Symbol	zend_ast_get_zval		3897502						
ANR	3902727	Symbol	ast -> child		3897502						
ANR	3902728	Symbol	* decl		3897502						
ANR	3902729	Function	zend_ast_export	1657:0:47277:47536							
ANR	3902730	FunctionDef	"zend_ast_export (const char * prefix , zend_ast * ast , const char * suffix)"		3902729	0					
ANR	3902731	CompoundStatement		1658:0:47370:47536	3902729	0					
ANR	3902732	IdentifierDeclStatement	smart_str str = { 0 } ;	1659:1:47373:47392	3902729	0	True				
ANR	3902733	IdentifierDecl	str = { 0 }		3902729	0					
ANR	3902734	IdentifierDeclType	smart_str		3902729	0					
ANR	3902735	Identifier	str		3902729	1					
ANR	3902736	AssignmentExpression	str = { 0 }		3902729	2		=			
ANR	3902737	Identifier	str		3902729	0					
ANR	3902738	InitializerList	0		3902729	1					
ANR	3902739	PrimaryExpression	0		3902729	0					
ANR	3902740	ExpressionStatement	"smart_str_appends ( & str , prefix )"	1661:1:47396:47427	3902729	1	True				
ANR	3902741	CallExpression	"smart_str_appends ( & str , prefix )"		3902729	0					
ANR	3902742	Callee	smart_str_appends		3902729	0					
ANR	3902743	Identifier	smart_str_appends		3902729	0					
ANR	3902744	ArgumentList	& str		3902729	1					
ANR	3902745	Argument	& str		3902729	0					
ANR	3902746	UnaryOperationExpression	& str		3902729	0					
ANR	3902747	UnaryOperator	&		3902729	0					
ANR	3902748	Identifier	str		3902729	1					
ANR	3902749	Argument	prefix		3902729	1					
ANR	3902750	Identifier	prefix		3902729	0					
ANR	3902751	ExpressionStatement	"zend_ast_export_ex ( & str , ast , 0 , 0 )"	1662:1:47430:47465	3902729	2	True				
ANR	3902752	CallExpression	"zend_ast_export_ex ( & str , ast , 0 , 0 )"		3902729	0					
ANR	3902753	Callee	zend_ast_export_ex		3902729	0					
ANR	3902754	Identifier	zend_ast_export_ex		3902729	0					
ANR	3902755	ArgumentList	& str		3902729	1					
ANR	3902756	Argument	& str		3902729	0					
ANR	3902757	UnaryOperationExpression	& str		3902729	0					
ANR	3902758	UnaryOperator	&		3902729	0					
ANR	3902759	Identifier	str		3902729	1					
ANR	3902760	Argument	ast		3902729	1					
ANR	3902761	Identifier	ast		3902729	0					
ANR	3902762	Argument	0		3902729	2					
ANR	3902763	PrimaryExpression	0		3902729	0					
ANR	3902764	Argument	0		3902729	3					
ANR	3902765	PrimaryExpression	0		3902729	0					
ANR	3902766	ExpressionStatement	"smart_str_appends ( & str , suffix )"	1663:1:47468:47499	3902729	3	True				
ANR	3902767	CallExpression	"smart_str_appends ( & str , suffix )"		3902729	0					
ANR	3902768	Callee	smart_str_appends		3902729	0					
ANR	3902769	Identifier	smart_str_appends		3902729	0					
ANR	3902770	ArgumentList	& str		3902729	1					
ANR	3902771	Argument	& str		3902729	0					
ANR	3902772	UnaryOperationExpression	& str		3902729	0					
ANR	3902773	UnaryOperator	&		3902729	0					
ANR	3902774	Identifier	str		3902729	1					
ANR	3902775	Argument	suffix		3902729	1					
ANR	3902776	Identifier	suffix		3902729	0					
ANR	3902777	ExpressionStatement	smart_str_0 ( & str )	1664:1:47502:47519	3902729	4	True				
ANR	3902778	CallExpression	smart_str_0 ( & str )		3902729	0					
ANR	3902779	Callee	smart_str_0		3902729	0					
ANR	3902780	Identifier	smart_str_0		3902729	0					
ANR	3902781	ArgumentList	& str		3902729	1					
ANR	3902782	Argument	& str		3902729	0					
ANR	3902783	UnaryOperationExpression	& str		3902729	0					
ANR	3902784	UnaryOperator	&		3902729	0					
ANR	3902785	Identifier	str		3902729	1					
ANR	3902786	ReturnStatement	return str . s ;	1665:1:47522:47534	3902729	5	True				
ANR	3902787	MemberAccess	str . s		3902729	0					
ANR	3902788	Identifier	str		3902729	0					
ANR	3902789	Identifier	s		3902729	1					
ANR	3902790	ReturnType	ZEND_API zend_string *		3902729	1					
ANR	3902791	Identifier	zend_ast_export		3902729	2					
ANR	3902792	ParameterList	"const char * prefix , zend_ast * ast , const char * suffix"		3902729	3					
ANR	3902793	Parameter	const char * prefix	1657:38:47315:47332	3902729	0	True				
ANR	3902794	ParameterType	const char *		3902729	0					
ANR	3902795	Identifier	prefix		3902729	1					
ANR	3902796	Parameter	zend_ast * ast	1657:58:47335:47347	3902729	1	True				
ANR	3902797	ParameterType	zend_ast *		3902729	0					
ANR	3902798	Identifier	ast		3902729	1					
ANR	3902799	Parameter	const char * suffix	1657:73:47350:47367	3902729	2	True				
ANR	3902800	ParameterType	const char *		3902729	0					
ANR	3902801	Identifier	suffix		3902729	1					
ANR	3902802	CFGEntryNode	ENTRY		3902729		True				
ANR	3902803	CFGExitNode	EXIT		3902729		True				
ANR	3902804	Symbol	str		3902729						
ANR	3902805	Symbol	& str		3902729						
ANR	3902806	Symbol	ast		3902729						
ANR	3902807	Symbol	prefix		3902729						
ANR	3902808	Symbol	str . s		3902729						
ANR	3902809	Symbol	suffix		3902729						
