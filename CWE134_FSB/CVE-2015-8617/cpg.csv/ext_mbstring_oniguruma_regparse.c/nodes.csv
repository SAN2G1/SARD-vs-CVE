command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1208494	File	data/converged/CVE-2015-8617_php-src/ext_mbstring_oniguruma_regparse.c								
ANR	1208495	DeclStmt									
ANR	1208496	Decl							define CASE_FOLD_IS_APPLIED_INSIDE_NEGATIVE_CCLASS OnigSyntaxType	define CASE_FOLD_IS_APPLIED_INSIDE_NEGATIVE_CCLASS OnigSyntaxType	OnigSyntaxRuby
ANR	1208497	DeclStmt									
ANR	1208498	Decl							OnigSyntaxType	OnigSyntaxType *	OnigDefaultSyntax
ANR	1208499	DeclStmt									
ANR	1208500	Decl							OnigWarnFunc	OnigWarnFunc	onig_warn
ANR	1208501	DeclStmt									
ANR	1208502	Decl							OnigWarnFunc	OnigWarnFunc	onig_warn
ANR	1208503	DeclStmt									
ANR	1208504	Decl							OnigWarnFunc	OnigWarnFunc	onig_verb_warn
ANR	1208505	DeclStmt									
ANR	1208506	Decl							OnigWarnFunc	OnigWarnFunc	onig_verb_warn
ANR	1208507	Function	onig_set_warn_func	90:0:3760:3826							
ANR	1208508	FunctionDef	onig_set_warn_func (OnigWarnFunc f)		1208507	0					
ANR	1208509	CompoundStatement		91:0:3807:3826	1208507	0					
ANR	1208510	ExpressionStatement	onig_warn = f	92:2:3811:3824	1208507	0	True				
ANR	1208511	AssignmentExpression	onig_warn = f		1208507	0		=			
ANR	1208512	Identifier	onig_warn		1208507	0					
ANR	1208513	Identifier	f		1208507	1					
ANR	1208514	ReturnType	extern void		1208507	1					
ANR	1208515	Identifier	onig_set_warn_func		1208507	2					
ANR	1208516	ParameterList	OnigWarnFunc f		1208507	3					
ANR	1208517	Parameter	OnigWarnFunc f	90:31:3791:3804	1208507	0	True				
ANR	1208518	ParameterType	OnigWarnFunc		1208507	0					
ANR	1208519	Identifier	f		1208507	1					
ANR	1208520	CFGEntryNode	ENTRY		1208507		True				
ANR	1208521	CFGExitNode	EXIT		1208507		True				
ANR	1208522	Symbol	f		1208507						
ANR	1208523	Symbol	onig_warn		1208507						
ANR	1208524	Function	onig_set_verb_warn_func	95:0:3829:3905							
ANR	1208525	FunctionDef	onig_set_verb_warn_func (OnigWarnFunc f)		1208524	0					
ANR	1208526	CompoundStatement		96:0:3881:3905	1208524	0					
ANR	1208527	ExpressionStatement	onig_verb_warn = f	97:2:3885:3903	1208524	0	True				
ANR	1208528	AssignmentExpression	onig_verb_warn = f		1208524	0		=			
ANR	1208529	Identifier	onig_verb_warn		1208524	0					
ANR	1208530	Identifier	f		1208524	1					
ANR	1208531	ReturnType	extern void		1208524	1					
ANR	1208532	Identifier	onig_set_verb_warn_func		1208524	2					
ANR	1208533	ParameterList	OnigWarnFunc f		1208524	3					
ANR	1208534	Parameter	OnigWarnFunc f	95:36:3865:3878	1208524	0	True				
ANR	1208535	ParameterType	OnigWarnFunc		1208524	0					
ANR	1208536	Identifier	f		1208524	1					
ANR	1208537	CFGEntryNode	ENTRY		1208524		True				
ANR	1208538	CFGExitNode	EXIT		1208524		True				
ANR	1208539	Symbol	f		1208524						
ANR	1208540	Symbol	onig_verb_warn		1208524						
ANR	1208541	Function	bbuf_free	100:0:3908:4038							
ANR	1208542	FunctionDef	bbuf_free (BBuf * bbuf)		1208541	0					
ANR	1208543	CompoundStatement		102:0:3942:4038	1208541	0					
ANR	1208544	IfStatement	if ( IS_NOT_NULL ( bbuf ) )		1208541	0					
ANR	1208545	Condition	IS_NOT_NULL ( bbuf )	103:6:3950:3966	1208541	0	True				
ANR	1208546	CallExpression	IS_NOT_NULL ( bbuf )		1208541	0					
ANR	1208547	Callee	IS_NOT_NULL		1208541	0					
ANR	1208548	Identifier	IS_NOT_NULL		1208541	0					
ANR	1208549	ArgumentList	bbuf		1208541	1					
ANR	1208550	Argument	bbuf		1208541	0					
ANR	1208551	Identifier	bbuf		1208541	0					
ANR	1208552	CompoundStatement		2:25:26:26	1208541	1					
ANR	1208553	IfStatement	if ( IS_NOT_NULL ( bbuf -> p ) )		1208541	0					
ANR	1208554	Condition	IS_NOT_NULL ( bbuf -> p )	104:8:3979:3998	1208541	0	True				
ANR	1208555	CallExpression	IS_NOT_NULL ( bbuf -> p )		1208541	0					
ANR	1208556	Callee	IS_NOT_NULL		1208541	0					
ANR	1208557	Identifier	IS_NOT_NULL		1208541	0					
ANR	1208558	ArgumentList	bbuf -> p		1208541	1					
ANR	1208559	Argument	bbuf -> p		1208541	0					
ANR	1208560	PtrMemberAccess	bbuf -> p		1208541	0					
ANR	1208561	Identifier	bbuf		1208541	0					
ANR	1208562	Identifier	p		1208541	1					
ANR	1208563	ExpressionStatement	xfree ( bbuf -> p )	104:30:4001:4015	1208541	1	True				
ANR	1208564	CallExpression	xfree ( bbuf -> p )		1208541	0					
ANR	1208565	Callee	xfree		1208541	0					
ANR	1208566	Identifier	xfree		1208541	0					
ANR	1208567	ArgumentList	bbuf -> p		1208541	1					
ANR	1208568	Argument	bbuf -> p		1208541	0					
ANR	1208569	PtrMemberAccess	bbuf -> p		1208541	0					
ANR	1208570	Identifier	bbuf		1208541	0					
ANR	1208571	Identifier	p		1208541	1					
ANR	1208572	ExpressionStatement	xfree ( bbuf )	105:4:4021:4032	1208541	1	True				
ANR	1208573	CallExpression	xfree ( bbuf )		1208541	0					
ANR	1208574	Callee	xfree		1208541	0					
ANR	1208575	Identifier	xfree		1208541	0					
ANR	1208576	ArgumentList	bbuf		1208541	1					
ANR	1208577	Argument	bbuf		1208541	0					
ANR	1208578	Identifier	bbuf		1208541	0					
ANR	1208579	ReturnType	static void		1208541	1					
ANR	1208580	Identifier	bbuf_free		1208541	2					
ANR	1208581	ParameterList	BBuf * bbuf		1208541	3					
ANR	1208582	Parameter	BBuf * bbuf	101:10:3930:3939	1208541	0	True				
ANR	1208583	ParameterType	BBuf *		1208541	0					
ANR	1208584	Identifier	bbuf		1208541	1					
ANR	1208585	CFGEntryNode	ENTRY		1208541		True				
ANR	1208586	CFGExitNode	EXIT		1208541		True				
ANR	1208587	Symbol	IS_NOT_NULL		1208541						
ANR	1208588	Symbol	bbuf -> p		1208541						
ANR	1208589	Symbol	* bbuf		1208541						
ANR	1208590	Symbol	bbuf		1208541						
ANR	1208591	Function	bbuf_clone	109:0:4041:4322							
ANR	1208592	FunctionDef	"bbuf_clone (BBuf * * rto , BBuf * from)"		1208591	0					
ANR	1208593	CompoundStatement		111:0:4087:4322	1208591	0					
ANR	1208594	IdentifierDeclStatement	int r ;	112:2:4091:4096	1208591	0	True				
ANR	1208595	IdentifierDecl	r		1208591	0					
ANR	1208596	IdentifierDeclType	int		1208591	0					
ANR	1208597	Identifier	r		1208591	1					
ANR	1208598	IdentifierDeclStatement	BBuf * to ;	113:2:4100:4108	1208591	1	True				
ANR	1208599	IdentifierDecl	* to		1208591	0					
ANR	1208600	IdentifierDeclType	BBuf *		1208591	0					
ANR	1208601	Identifier	to		1208591	1					
ANR	1208602	ExpressionStatement	* rto = to = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )	115:2:4113:4154	1208591	2	True				
ANR	1208603	AssignmentExpression	* rto = to = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )		1208591	0		=			
ANR	1208604	UnaryOperationExpression	* rto		1208591	0					
ANR	1208605	UnaryOperator	*		1208591	0					
ANR	1208606	Identifier	rto		1208591	1					
ANR	1208607	AssignmentExpression	to = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )		1208591	1		=			
ANR	1208608	Identifier	to		1208591	0					
ANR	1208609	CastExpression	( BBuf * ) xmalloc ( sizeof ( BBuf ) )		1208591	1					
ANR	1208610	CastTarget	BBuf *		1208591	0					
ANR	1208611	CallExpression	xmalloc ( sizeof ( BBuf ) )		1208591	1					
ANR	1208612	Callee	xmalloc		1208591	0					
ANR	1208613	Identifier	xmalloc		1208591	0					
ANR	1208614	ArgumentList	sizeof ( BBuf )		1208591	1					
ANR	1208615	Argument	sizeof ( BBuf )		1208591	0					
ANR	1208616	SizeofExpression	sizeof ( BBuf )		1208591	0					
ANR	1208617	Sizeof	sizeof		1208591	0					
ANR	1208618	SizeofOperand	BBuf		1208591	1					
ANR	1208619	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( to )	116:2:4158:4186	1208591	3	True				
ANR	1208620	CallExpression	CHECK_NULL_RETURN_MEMERR ( to )		1208591	0					
ANR	1208621	Callee	CHECK_NULL_RETURN_MEMERR		1208591	0					
ANR	1208622	Identifier	CHECK_NULL_RETURN_MEMERR		1208591	0					
ANR	1208623	ArgumentList	to		1208591	1					
ANR	1208624	Argument	to		1208591	0					
ANR	1208625	Identifier	to		1208591	0					
ANR	1208626	ExpressionStatement	"r = BBUF_INIT ( to , from -> alloc )"	117:2:4190:4220	1208591	4	True				
ANR	1208627	AssignmentExpression	"r = BBUF_INIT ( to , from -> alloc )"		1208591	0		=			
ANR	1208628	Identifier	r		1208591	0					
ANR	1208629	CallExpression	"BBUF_INIT ( to , from -> alloc )"		1208591	1					
ANR	1208630	Callee	BBUF_INIT		1208591	0					
ANR	1208631	Identifier	BBUF_INIT		1208591	0					
ANR	1208632	ArgumentList	to		1208591	1					
ANR	1208633	Argument	to		1208591	0					
ANR	1208634	Identifier	to		1208591	0					
ANR	1208635	Argument	from -> alloc		1208591	1					
ANR	1208636	PtrMemberAccess	from -> alloc		1208591	0					
ANR	1208637	Identifier	from		1208591	0					
ANR	1208638	Identifier	alloc		1208591	1					
ANR	1208639	IfStatement	if ( r != 0 )		1208591	5					
ANR	1208640	Condition	r != 0	118:6:4228:4233	1208591	0	True				
ANR	1208641	EqualityExpression	r != 0		1208591	0		!=			
ANR	1208642	Identifier	r		1208591	0					
ANR	1208643	PrimaryExpression	0		1208591	1					
ANR	1208644	ReturnStatement	return r ;	118:14:4236:4244	1208591	1	True				
ANR	1208645	Identifier	r		1208591	0					
ANR	1208646	ExpressionStatement	to -> used = from -> used	119:2:4248:4269	1208591	6	True				
ANR	1208647	AssignmentExpression	to -> used = from -> used		1208591	0		=			
ANR	1208648	PtrMemberAccess	to -> used		1208591	0					
ANR	1208649	Identifier	to		1208591	0					
ANR	1208650	Identifier	used		1208591	1					
ANR	1208651	PtrMemberAccess	from -> used		1208591	1					
ANR	1208652	Identifier	from		1208591	0					
ANR	1208653	Identifier	used		1208591	1					
ANR	1208654	ExpressionStatement	"xmemcpy ( to -> p , from -> p , from -> used )"	120:2:4273:4308	1208591	7	True				
ANR	1208655	CallExpression	"xmemcpy ( to -> p , from -> p , from -> used )"		1208591	0					
ANR	1208656	Callee	xmemcpy		1208591	0					
ANR	1208657	Identifier	xmemcpy		1208591	0					
ANR	1208658	ArgumentList	to -> p		1208591	1					
ANR	1208659	Argument	to -> p		1208591	0					
ANR	1208660	PtrMemberAccess	to -> p		1208591	0					
ANR	1208661	Identifier	to		1208591	0					
ANR	1208662	Identifier	p		1208591	1					
ANR	1208663	Argument	from -> p		1208591	1					
ANR	1208664	PtrMemberAccess	from -> p		1208591	0					
ANR	1208665	Identifier	from		1208591	0					
ANR	1208666	Identifier	p		1208591	1					
ANR	1208667	Argument	from -> used		1208591	2					
ANR	1208668	PtrMemberAccess	from -> used		1208591	0					
ANR	1208669	Identifier	from		1208591	0					
ANR	1208670	Identifier	used		1208591	1					
ANR	1208671	ReturnStatement	return 0 ;	121:2:4312:4320	1208591	8	True				
ANR	1208672	PrimaryExpression	0		1208591	0					
ANR	1208673	ReturnType	static int		1208591	1					
ANR	1208674	Identifier	bbuf_clone		1208591	2					
ANR	1208675	ParameterList	"BBuf * * rto , BBuf * from"		1208591	3					
ANR	1208676	Parameter	BBuf * * rto	110:11:4063:4072	1208591	0	True				
ANR	1208677	ParameterType	BBuf * *		1208591	0					
ANR	1208678	Identifier	rto		1208591	1					
ANR	1208679	Parameter	BBuf * from	110:23:4075:4084	1208591	1	True				
ANR	1208680	ParameterType	BBuf *		1208591	0					
ANR	1208681	Identifier	from		1208591	1					
ANR	1208682	CFGEntryNode	ENTRY		1208591		True				
ANR	1208683	CFGExitNode	EXIT		1208591		True				
ANR	1208684	Symbol	from -> p		1208591						
ANR	1208685	Symbol	* to		1208591						
ANR	1208686	Symbol	from -> used		1208591						
ANR	1208687	Symbol	BBUF_INIT		1208591						
ANR	1208688	Symbol	rto		1208591						
ANR	1208689	Symbol	to -> used		1208591						
ANR	1208690	Symbol	r		1208591						
ANR	1208691	Symbol	to -> p		1208591						
ANR	1208692	Symbol	from -> alloc		1208591						
ANR	1208693	Symbol	xmalloc		1208591						
ANR	1208694	Symbol	* rto		1208591						
ANR	1208695	Symbol	from		1208591						
ANR	1208696	Symbol	to		1208591						
ANR	1208697	Symbol	* from		1208591						
ANR	1208698	DeclStmt									
ANR	1208699	Decl							int	int	i
ANR	1208700	Function	bitset_set_range	153:0:5053:5213							
ANR	1208701	FunctionDef	"bitset_set_range (BitSetRef bs , int from , int to)"		1208700	0					
ANR	1208702	CompoundStatement		155:0:5114:5213	1208700	0					
ANR	1208703	IdentifierDeclStatement	int i ;	156:2:5118:5123	1208700	0	True				
ANR	1208704	IdentifierDecl	i		1208700	0					
ANR	1208705	IdentifierDeclType	int		1208700	0					
ANR	1208706	Identifier	i		1208700	1					
ANR	1208707	ForStatement	for ( i = from ; i <= to && i < SINGLE_BYTE_SIZE ; i ++ )		1208700	1					
ANR	1208708	ForInit	i = from ;	157:7:5132:5140	1208700	0	True				
ANR	1208709	AssignmentExpression	i = from		1208700	0		=			
ANR	1208710	Identifier	i		1208700	0					
ANR	1208711	Identifier	from		1208700	1					
ANR	1208712	Condition	i <= to && i < SINGLE_BYTE_SIZE	157:17:5142:5172	1208700	1	True				
ANR	1208713	AndExpression	i <= to && i < SINGLE_BYTE_SIZE		1208700	0		&&			
ANR	1208714	RelationalExpression	i <= to		1208700	0		<=			
ANR	1208715	Identifier	i		1208700	0					
ANR	1208716	Identifier	to		1208700	1					
ANR	1208717	RelationalExpression	i < SINGLE_BYTE_SIZE		1208700	1		<			
ANR	1208718	Identifier	i		1208700	0					
ANR	1208719	Identifier	SINGLE_BYTE_SIZE		1208700	1					
ANR	1208720	PostIncDecOperationExpression	i ++	157:50:5175:5177	1208700	2	True				
ANR	1208721	Identifier	i		1208700	0					
ANR	1208722	IncDec	++		1208700	1					
ANR	1208723	CompoundStatement		3:55:65:65	1208700	3					
ANR	1208724	ExpressionStatement	"BITSET_SET_BIT ( bs , i )"	158:4:5186:5207	1208700	0	True				
ANR	1208725	CallExpression	"BITSET_SET_BIT ( bs , i )"		1208700	0					
ANR	1208726	Callee	BITSET_SET_BIT		1208700	0					
ANR	1208727	Identifier	BITSET_SET_BIT		1208700	0					
ANR	1208728	ArgumentList	bs		1208700	1					
ANR	1208729	Argument	bs		1208700	0					
ANR	1208730	Identifier	bs		1208700	0					
ANR	1208731	Argument	i		1208700	1					
ANR	1208732	Identifier	i		1208700	0					
ANR	1208733	ReturnType	static void		1208700	1					
ANR	1208734	Identifier	bitset_set_range		1208700	2					
ANR	1208735	ParameterList	"BitSetRef bs , int from , int to"		1208700	3					
ANR	1208736	Parameter	BitSetRef bs	154:17:5082:5093	1208700	0	True				
ANR	1208737	ParameterType	BitSetRef		1208700	0					
ANR	1208738	Identifier	bs		1208700	1					
ANR	1208739	Parameter	int from	154:31:5096:5103	1208700	1	True				
ANR	1208740	ParameterType	int		1208700	0					
ANR	1208741	Identifier	from		1208700	1					
ANR	1208742	Parameter	int to	154:41:5106:5111	1208700	2	True				
ANR	1208743	ParameterType	int		1208700	0					
ANR	1208744	Identifier	to		1208700	1					
ANR	1208745	CFGEntryNode	ENTRY		1208700		True				
ANR	1208746	CFGExitNode	EXIT		1208700		True				
ANR	1208747	Symbol	SINGLE_BYTE_SIZE		1208700						
ANR	1208748	Symbol	bs		1208700						
ANR	1208749	Symbol	i		1208700						
ANR	1208750	Symbol	from		1208700						
ANR	1208751	Symbol	to		1208700						
ANR	1208752	Function	bitset_set_all	163:0:5222:5335							
ANR	1208753	FunctionDef	bitset_set_all (BitSetRef bs)		1208752	0					
ANR	1208754	CompoundStatement		165:0:5263:5335	1208752	0					
ANR	1208755	IdentifierDeclStatement	int i ;	166:2:5267:5272	1208752	0	True				
ANR	1208756	IdentifierDecl	i		1208752	0					
ANR	1208757	IdentifierDeclType	int		1208752	0					
ANR	1208758	Identifier	i		1208752	1					
ANR	1208759	ForStatement	for ( i = 0 ; i < BITSET_SIZE ; i ++ )		1208752	1					
ANR	1208760	ForInit	i = 0 ;	167:7:5281:5286	1208752	0	True				
ANR	1208761	AssignmentExpression	i = 0		1208752	0		=			
ANR	1208762	Identifier	i		1208752	0					
ANR	1208763	PrimaryExpression	0		1208752	1					
ANR	1208764	Condition	i < BITSET_SIZE	167:14:5288:5302	1208752	1	True				
ANR	1208765	RelationalExpression	i < BITSET_SIZE		1208752	0		<			
ANR	1208766	Identifier	i		1208752	0					
ANR	1208767	Identifier	BITSET_SIZE		1208752	1					
ANR	1208768	PostIncDecOperationExpression	i ++	167:31:5305:5307	1208752	2	True				
ANR	1208769	Identifier	i		1208752	0					
ANR	1208770	IncDec	++		1208752	1					
ANR	1208771	CompoundStatement		3:36:46:46	1208752	3					
ANR	1208772	ExpressionStatement	bs [ i ] = ~ ( ( Bits ) 0 )	167:38:5312:5331	1208752	0	True				
ANR	1208773	AssignmentExpression	bs [ i ] = ~ ( ( Bits ) 0 )		1208752	0		=			
ANR	1208774	ArrayIndexing	bs [ i ]		1208752	0					
ANR	1208775	Identifier	bs		1208752	0					
ANR	1208776	Identifier	i		1208752	1					
ANR	1208777	UnaryOperationExpression	~ ( ( Bits ) 0 )		1208752	1					
ANR	1208778	UnaryOperator	~		1208752	0					
ANR	1208779	CastExpression	( Bits ) 0		1208752	1					
ANR	1208780	CastTarget	Bits		1208752	0					
ANR	1208781	PrimaryExpression	0		1208752	1					
ANR	1208782	ReturnType	static void		1208752	1					
ANR	1208783	Identifier	bitset_set_all		1208752	2					
ANR	1208784	ParameterList	BitSetRef bs		1208752	3					
ANR	1208785	Parameter	BitSetRef bs	164:15:5249:5260	1208752	0	True				
ANR	1208786	ParameterType	BitSetRef		1208752	0					
ANR	1208787	Identifier	bs		1208752	1					
ANR	1208788	CFGEntryNode	ENTRY		1208752		True				
ANR	1208789	CFGExitNode	EXIT		1208752		True				
ANR	1208790	Symbol	bs		1208752						
ANR	1208791	Symbol	* i		1208752						
ANR	1208792	Symbol	* bs		1208752						
ANR	1208793	Symbol	BITSET_SIZE		1208752						
ANR	1208794	Symbol	i		1208752						
ANR	1208795	Function	bitset_invert	171:0:5345:5460							
ANR	1208796	FunctionDef	bitset_invert (BitSetRef bs)		1208795	0					
ANR	1208797	CompoundStatement		173:0:5385:5460	1208795	0					
ANR	1208798	IdentifierDeclStatement	int i ;	174:2:5389:5394	1208795	0	True				
ANR	1208799	IdentifierDecl	i		1208795	0					
ANR	1208800	IdentifierDeclType	int		1208795	0					
ANR	1208801	Identifier	i		1208795	1					
ANR	1208802	ForStatement	for ( i = 0 ; i < ( int ) BITSET_SIZE ; i ++ )		1208795	1					
ANR	1208803	ForInit	i = 0 ;	175:7:5403:5408	1208795	0	True				
ANR	1208804	AssignmentExpression	i = 0		1208795	0		=			
ANR	1208805	Identifier	i		1208795	0					
ANR	1208806	PrimaryExpression	0		1208795	1					
ANR	1208807	Condition	i < ( int ) BITSET_SIZE	175:14:5410:5430	1208795	1	True				
ANR	1208808	RelationalExpression	i < ( int ) BITSET_SIZE		1208795	0		<			
ANR	1208809	Identifier	i		1208795	0					
ANR	1208810	CastExpression	( int ) BITSET_SIZE		1208795	1					
ANR	1208811	CastTarget	int		1208795	0					
ANR	1208812	Identifier	BITSET_SIZE		1208795	1					
ANR	1208813	PostIncDecOperationExpression	i ++	175:37:5433:5435	1208795	2	True				
ANR	1208814	Identifier	i		1208795	0					
ANR	1208815	IncDec	++		1208795	1					
ANR	1208816	CompoundStatement		3:42:52:52	1208795	3					
ANR	1208817	ExpressionStatement	bs [ i ] = ~ ( bs [ i ] )	175:44:5440:5456	1208795	0	True				
ANR	1208818	AssignmentExpression	bs [ i ] = ~ ( bs [ i ] )		1208795	0		=			
ANR	1208819	ArrayIndexing	bs [ i ]		1208795	0					
ANR	1208820	Identifier	bs		1208795	0					
ANR	1208821	Identifier	i		1208795	1					
ANR	1208822	UnaryOperationExpression	~ ( bs [ i ] )		1208795	1					
ANR	1208823	UnaryOperator	~		1208795	0					
ANR	1208824	ArrayIndexing	bs [ i ]		1208795	1					
ANR	1208825	Identifier	bs		1208795	0					
ANR	1208826	Identifier	i		1208795	1					
ANR	1208827	ReturnType	static void		1208795	1					
ANR	1208828	Identifier	bitset_invert		1208795	2					
ANR	1208829	ParameterList	BitSetRef bs		1208795	3					
ANR	1208830	Parameter	BitSetRef bs	172:14:5371:5382	1208795	0	True				
ANR	1208831	ParameterType	BitSetRef		1208795	0					
ANR	1208832	Identifier	bs		1208795	1					
ANR	1208833	CFGEntryNode	ENTRY		1208795		True				
ANR	1208834	CFGExitNode	EXIT		1208795		True				
ANR	1208835	Symbol	bs		1208795						
ANR	1208836	Symbol	* i		1208795						
ANR	1208837	Symbol	* bs		1208795						
ANR	1208838	Symbol	BITSET_SIZE		1208795						
ANR	1208839	Symbol	i		1208795						
ANR	1208840	Function	bitset_invert_to	178:0:5463:5599							
ANR	1208841	FunctionDef	"bitset_invert_to (BitSetRef from , BitSetRef to)"		1208840	0					
ANR	1208842	CompoundStatement		180:0:5522:5599	1208840	0					
ANR	1208843	IdentifierDeclStatement	int i ;	181:2:5526:5531	1208840	0	True				
ANR	1208844	IdentifierDecl	i		1208840	0					
ANR	1208845	IdentifierDeclType	int		1208840	0					
ANR	1208846	Identifier	i		1208840	1					
ANR	1208847	ForStatement	for ( i = 0 ; i < ( int ) BITSET_SIZE ; i ++ )		1208840	1					
ANR	1208848	ForInit	i = 0 ;	182:7:5540:5545	1208840	0	True				
ANR	1208849	AssignmentExpression	i = 0		1208840	0		=			
ANR	1208850	Identifier	i		1208840	0					
ANR	1208851	PrimaryExpression	0		1208840	1					
ANR	1208852	Condition	i < ( int ) BITSET_SIZE	182:14:5547:5567	1208840	1	True				
ANR	1208853	RelationalExpression	i < ( int ) BITSET_SIZE		1208840	0		<			
ANR	1208854	Identifier	i		1208840	0					
ANR	1208855	CastExpression	( int ) BITSET_SIZE		1208840	1					
ANR	1208856	CastTarget	int		1208840	0					
ANR	1208857	Identifier	BITSET_SIZE		1208840	1					
ANR	1208858	PostIncDecOperationExpression	i ++	182:37:5570:5572	1208840	2	True				
ANR	1208859	Identifier	i		1208840	0					
ANR	1208860	IncDec	++		1208840	1					
ANR	1208861	CompoundStatement		3:42:52:52	1208840	3					
ANR	1208862	ExpressionStatement	to [ i ] = ~ ( from [ i ] )	182:44:5577:5595	1208840	0	True				
ANR	1208863	AssignmentExpression	to [ i ] = ~ ( from [ i ] )		1208840	0		=			
ANR	1208864	ArrayIndexing	to [ i ]		1208840	0					
ANR	1208865	Identifier	to		1208840	0					
ANR	1208866	Identifier	i		1208840	1					
ANR	1208867	UnaryOperationExpression	~ ( from [ i ] )		1208840	1					
ANR	1208868	UnaryOperator	~		1208840	0					
ANR	1208869	ArrayIndexing	from [ i ]		1208840	1					
ANR	1208870	Identifier	from		1208840	0					
ANR	1208871	Identifier	i		1208840	1					
ANR	1208872	ReturnType	static void		1208840	1					
ANR	1208873	Identifier	bitset_invert_to		1208840	2					
ANR	1208874	ParameterList	"BitSetRef from , BitSetRef to"		1208840	3					
ANR	1208875	Parameter	BitSetRef from	179:17:5492:5505	1208840	0	True				
ANR	1208876	ParameterType	BitSetRef		1208840	0					
ANR	1208877	Identifier	from		1208840	1					
ANR	1208878	Parameter	BitSetRef to	179:33:5508:5519	1208840	1	True				
ANR	1208879	ParameterType	BitSetRef		1208840	0					
ANR	1208880	Identifier	to		1208840	1					
ANR	1208881	CFGEntryNode	ENTRY		1208840		True				
ANR	1208882	CFGExitNode	EXIT		1208840		True				
ANR	1208883	Symbol	* to		1208840						
ANR	1208884	Symbol	* i		1208840						
ANR	1208885	Symbol	BITSET_SIZE		1208840						
ANR	1208886	Symbol	i		1208840						
ANR	1208887	Symbol	from		1208840						
ANR	1208888	Symbol	to		1208840						
ANR	1208889	Symbol	* from		1208840						
ANR	1208890	Function	bitset_and	185:0:5602:5730							
ANR	1208891	FunctionDef	"bitset_and (BitSetRef dest , BitSetRef bs)"		1208890	0					
ANR	1208892	CompoundStatement		187:0:5655:5730	1208890	0					
ANR	1208893	IdentifierDeclStatement	int i ;	188:2:5659:5664	1208890	0	True				
ANR	1208894	IdentifierDecl	i		1208890	0					
ANR	1208895	IdentifierDeclType	int		1208890	0					
ANR	1208896	Identifier	i		1208890	1					
ANR	1208897	ForStatement	for ( i = 0 ; i < ( int ) BITSET_SIZE ; i ++ )		1208890	1					
ANR	1208898	ForInit	i = 0 ;	189:7:5673:5678	1208890	0	True				
ANR	1208899	AssignmentExpression	i = 0		1208890	0		=			
ANR	1208900	Identifier	i		1208890	0					
ANR	1208901	PrimaryExpression	0		1208890	1					
ANR	1208902	Condition	i < ( int ) BITSET_SIZE	189:14:5680:5700	1208890	1	True				
ANR	1208903	RelationalExpression	i < ( int ) BITSET_SIZE		1208890	0		<			
ANR	1208904	Identifier	i		1208890	0					
ANR	1208905	CastExpression	( int ) BITSET_SIZE		1208890	1					
ANR	1208906	CastTarget	int		1208890	0					
ANR	1208907	Identifier	BITSET_SIZE		1208890	1					
ANR	1208908	PostIncDecOperationExpression	i ++	189:37:5703:5705	1208890	2	True				
ANR	1208909	Identifier	i		1208890	0					
ANR	1208910	IncDec	++		1208890	1					
ANR	1208911	CompoundStatement		3:42:52:52	1208890	3					
ANR	1208912	ExpressionStatement	dest [ i ] &= bs [ i ]	189:44:5710:5726	1208890	0	True				
ANR	1208913	AssignmentExpression	dest [ i ] &= bs [ i ]		1208890	0		&=			
ANR	1208914	ArrayIndexing	dest [ i ]		1208890	0					
ANR	1208915	Identifier	dest		1208890	0					
ANR	1208916	Identifier	i		1208890	1					
ANR	1208917	ArrayIndexing	bs [ i ]		1208890	1					
ANR	1208918	Identifier	bs		1208890	0					
ANR	1208919	Identifier	i		1208890	1					
ANR	1208920	ReturnType	static void		1208890	1					
ANR	1208921	Identifier	bitset_and		1208890	2					
ANR	1208922	ParameterList	"BitSetRef dest , BitSetRef bs"		1208890	3					
ANR	1208923	Parameter	BitSetRef dest	186:11:5625:5638	1208890	0	True				
ANR	1208924	ParameterType	BitSetRef		1208890	0					
ANR	1208925	Identifier	dest		1208890	1					
ANR	1208926	Parameter	BitSetRef bs	186:27:5641:5652	1208890	1	True				
ANR	1208927	ParameterType	BitSetRef		1208890	0					
ANR	1208928	Identifier	bs		1208890	1					
ANR	1208929	CFGEntryNode	ENTRY		1208890		True				
ANR	1208930	CFGExitNode	EXIT		1208890		True				
ANR	1208931	Symbol	bs		1208890						
ANR	1208932	Symbol	* i		1208890						
ANR	1208933	Symbol	* bs		1208890						
ANR	1208934	Symbol	* dest		1208890						
ANR	1208935	Symbol	BITSET_SIZE		1208890						
ANR	1208936	Symbol	i		1208890						
ANR	1208937	Symbol	dest		1208890						
ANR	1208938	Function	bitset_or	192:0:5733:5860							
ANR	1208939	FunctionDef	"bitset_or (BitSetRef dest , BitSetRef bs)"		1208938	0					
ANR	1208940	CompoundStatement		194:0:5785:5860	1208938	0					
ANR	1208941	IdentifierDeclStatement	int i ;	195:2:5789:5794	1208938	0	True				
ANR	1208942	IdentifierDecl	i		1208938	0					
ANR	1208943	IdentifierDeclType	int		1208938	0					
ANR	1208944	Identifier	i		1208938	1					
ANR	1208945	ForStatement	for ( i = 0 ; i < ( int ) BITSET_SIZE ; i ++ )		1208938	1					
ANR	1208946	ForInit	i = 0 ;	196:7:5803:5808	1208938	0	True				
ANR	1208947	AssignmentExpression	i = 0		1208938	0		=			
ANR	1208948	Identifier	i		1208938	0					
ANR	1208949	PrimaryExpression	0		1208938	1					
ANR	1208950	Condition	i < ( int ) BITSET_SIZE	196:14:5810:5830	1208938	1	True				
ANR	1208951	RelationalExpression	i < ( int ) BITSET_SIZE		1208938	0		<			
ANR	1208952	Identifier	i		1208938	0					
ANR	1208953	CastExpression	( int ) BITSET_SIZE		1208938	1					
ANR	1208954	CastTarget	int		1208938	0					
ANR	1208955	Identifier	BITSET_SIZE		1208938	1					
ANR	1208956	PostIncDecOperationExpression	i ++	196:37:5833:5835	1208938	2	True				
ANR	1208957	Identifier	i		1208938	0					
ANR	1208958	IncDec	++		1208938	1					
ANR	1208959	CompoundStatement		3:42:52:52	1208938	3					
ANR	1208960	ExpressionStatement	dest [ i ] |= bs [ i ]	196:44:5840:5856	1208938	0	True				
ANR	1208961	AssignmentExpression	dest [ i ] |= bs [ i ]		1208938	0		|=			
ANR	1208962	ArrayIndexing	dest [ i ]		1208938	0					
ANR	1208963	Identifier	dest		1208938	0					
ANR	1208964	Identifier	i		1208938	1					
ANR	1208965	ArrayIndexing	bs [ i ]		1208938	1					
ANR	1208966	Identifier	bs		1208938	0					
ANR	1208967	Identifier	i		1208938	1					
ANR	1208968	ReturnType	static void		1208938	1					
ANR	1208969	Identifier	bitset_or		1208938	2					
ANR	1208970	ParameterList	"BitSetRef dest , BitSetRef bs"		1208938	3					
ANR	1208971	Parameter	BitSetRef dest	193:10:5755:5768	1208938	0	True				
ANR	1208972	ParameterType	BitSetRef		1208938	0					
ANR	1208973	Identifier	dest		1208938	1					
ANR	1208974	Parameter	BitSetRef bs	193:26:5771:5782	1208938	1	True				
ANR	1208975	ParameterType	BitSetRef		1208938	0					
ANR	1208976	Identifier	bs		1208938	1					
ANR	1208977	CFGEntryNode	ENTRY		1208938		True				
ANR	1208978	CFGExitNode	EXIT		1208938		True				
ANR	1208979	Symbol	bs		1208938						
ANR	1208980	Symbol	* i		1208938						
ANR	1208981	Symbol	* bs		1208938						
ANR	1208982	Symbol	* dest		1208938						
ANR	1208983	Symbol	BITSET_SIZE		1208938						
ANR	1208984	Symbol	i		1208938						
ANR	1208985	Symbol	dest		1208938						
ANR	1208986	Function	bitset_copy	199:0:5863:5991							
ANR	1208987	FunctionDef	"bitset_copy (BitSetRef dest , BitSetRef bs)"		1208986	0					
ANR	1208988	CompoundStatement		201:0:5917:5991	1208986	0					
ANR	1208989	IdentifierDeclStatement	int i ;	202:2:5921:5926	1208986	0	True				
ANR	1208990	IdentifierDecl	i		1208986	0					
ANR	1208991	IdentifierDeclType	int		1208986	0					
ANR	1208992	Identifier	i		1208986	1					
ANR	1208993	ForStatement	for ( i = 0 ; i < ( int ) BITSET_SIZE ; i ++ )		1208986	1					
ANR	1208994	ForInit	i = 0 ;	203:7:5935:5940	1208986	0	True				
ANR	1208995	AssignmentExpression	i = 0		1208986	0		=			
ANR	1208996	Identifier	i		1208986	0					
ANR	1208997	PrimaryExpression	0		1208986	1					
ANR	1208998	Condition	i < ( int ) BITSET_SIZE	203:14:5942:5962	1208986	1	True				
ANR	1208999	RelationalExpression	i < ( int ) BITSET_SIZE		1208986	0		<			
ANR	1209000	Identifier	i		1208986	0					
ANR	1209001	CastExpression	( int ) BITSET_SIZE		1208986	1					
ANR	1209002	CastTarget	int		1208986	0					
ANR	1209003	Identifier	BITSET_SIZE		1208986	1					
ANR	1209004	PostIncDecOperationExpression	i ++	203:37:5965:5967	1208986	2	True				
ANR	1209005	Identifier	i		1208986	0					
ANR	1209006	IncDec	++		1208986	1					
ANR	1209007	CompoundStatement		3:42:52:52	1208986	3					
ANR	1209008	ExpressionStatement	dest [ i ] = bs [ i ]	203:44:5972:5987	1208986	0	True				
ANR	1209009	AssignmentExpression	dest [ i ] = bs [ i ]		1208986	0		=			
ANR	1209010	ArrayIndexing	dest [ i ]		1208986	0					
ANR	1209011	Identifier	dest		1208986	0					
ANR	1209012	Identifier	i		1208986	1					
ANR	1209013	ArrayIndexing	bs [ i ]		1208986	1					
ANR	1209014	Identifier	bs		1208986	0					
ANR	1209015	Identifier	i		1208986	1					
ANR	1209016	ReturnType	static void		1208986	1					
ANR	1209017	Identifier	bitset_copy		1208986	2					
ANR	1209018	ParameterList	"BitSetRef dest , BitSetRef bs"		1208986	3					
ANR	1209019	Parameter	BitSetRef dest	200:12:5887:5900	1208986	0	True				
ANR	1209020	ParameterType	BitSetRef		1208986	0					
ANR	1209021	Identifier	dest		1208986	1					
ANR	1209022	Parameter	BitSetRef bs	200:28:5903:5914	1208986	1	True				
ANR	1209023	ParameterType	BitSetRef		1208986	0					
ANR	1209024	Identifier	bs		1208986	1					
ANR	1209025	CFGEntryNode	ENTRY		1208986		True				
ANR	1209026	CFGExitNode	EXIT		1208986		True				
ANR	1209027	Symbol	bs		1208986						
ANR	1209028	Symbol	* i		1208986						
ANR	1209029	Symbol	* bs		1208986						
ANR	1209030	Symbol	* dest		1208986						
ANR	1209031	Symbol	BITSET_SIZE		1208986						
ANR	1209032	Symbol	i		1208986						
ANR	1209033	Symbol	dest		1208986						
ANR	1209034	Function	onig_strncmp	206:0:5994:6151							
ANR	1209035	FunctionDef	"onig_strncmp (const UChar * s1 , const UChar * s2 , int n)"		1209034	0					
ANR	1209036	CompoundStatement		208:0:6059:6151	1209034	0					
ANR	1209037	IdentifierDeclStatement	int x ;	209:2:6063:6068	1209034	0	True				
ANR	1209038	IdentifierDecl	x		1209034	0					
ANR	1209039	IdentifierDeclType	int		1209034	0					
ANR	1209040	Identifier	x		1209034	1					
ANR	1209041	WhileStatement	while ( n -- > 0 )		1209034	1					
ANR	1209042	Condition	n -- > 0	211:9:6080:6086	1209034	0	True				
ANR	1209043	RelationalExpression	n -- > 0		1209034	0		>			
ANR	1209044	PostIncDecOperationExpression	n --		1209034	0					
ANR	1209045	Identifier	n		1209034	0					
ANR	1209046	IncDec	--		1209034	1					
ANR	1209047	PrimaryExpression	0		1209034	1					
ANR	1209048	CompoundStatement		4:18:29:29	1209034	1					
ANR	1209049	ExpressionStatement	x = * s2 ++ - * s1 ++	212:4:6095:6112	1209034	0	True				
ANR	1209050	AssignmentExpression	x = * s2 ++ - * s1 ++		1209034	0		=			
ANR	1209051	Identifier	x		1209034	0					
ANR	1209052	AdditiveExpression	* s2 ++ - * s1 ++		1209034	1		-			
ANR	1209053	UnaryOperationExpression	* s2 ++		1209034	0					
ANR	1209054	UnaryOperator	*		1209034	0					
ANR	1209055	PostIncDecOperationExpression	s2 ++		1209034	1					
ANR	1209056	Identifier	s2		1209034	0					
ANR	1209057	IncDec	++		1209034	1					
ANR	1209058	UnaryOperationExpression	* s1 ++		1209034	1					
ANR	1209059	UnaryOperator	*		1209034	0					
ANR	1209060	PostIncDecOperationExpression	s1 ++		1209034	1					
ANR	1209061	Identifier	s1		1209034	0					
ANR	1209062	IncDec	++		1209034	1					
ANR	1209063	IfStatement	if ( x )		1209034	1					
ANR	1209064	Condition	x	213:8:6122:6122	1209034	0	True				
ANR	1209065	Identifier	x		1209034	0					
ANR	1209066	ReturnStatement	return x ;	213:11:6125:6133	1209034	1	True				
ANR	1209067	Identifier	x		1209034	0					
ANR	1209068	ReturnStatement	return 0 ;	215:2:6141:6149	1209034	2	True				
ANR	1209069	PrimaryExpression	0		1209034	0					
ANR	1209070	ReturnType	extern int		1209034	1					
ANR	1209071	Identifier	onig_strncmp		1209034	2					
ANR	1209072	ParameterList	"const UChar * s1 , const UChar * s2 , int n"		1209034	3					
ANR	1209073	Parameter	const UChar * s1	207:13:6018:6032	1209034	0	True				
ANR	1209074	ParameterType	const UChar *		1209034	0					
ANR	1209075	Identifier	s1		1209034	1					
ANR	1209076	Parameter	const UChar * s2	207:30:6035:6049	1209034	1	True				
ANR	1209077	ParameterType	const UChar *		1209034	0					
ANR	1209078	Identifier	s2		1209034	1					
ANR	1209079	Parameter	int n	207:47:6052:6056	1209034	2	True				
ANR	1209080	ParameterType	int		1209034	0					
ANR	1209081	Identifier	n		1209034	1					
ANR	1209082	CFGEntryNode	ENTRY		1209034		True				
ANR	1209083	CFGExitNode	EXIT		1209034		True				
ANR	1209084	Symbol	* s1 ++		1209034						
ANR	1209085	Symbol	* s2 ++		1209034						
ANR	1209086	Symbol	x		1209034						
ANR	1209087	Symbol	s1		1209034						
ANR	1209088	Symbol	n		1209034						
ANR	1209089	Symbol	s2		1209034						
ANR	1209090	Function	onig_strcpy	218:0:6154:6329							
ANR	1209091	FunctionDef	"onig_strcpy (UChar * dest , const UChar * src , const UChar * end)"		1209090	0					
ANR	1209092	CompoundStatement		220:0:6227:6329	1209090	0					
ANR	1209093	IdentifierDeclStatement	int len = end - src ;	221:2:6231:6250	1209090	0	True				
ANR	1209094	IdentifierDecl	len = end - src		1209090	0					
ANR	1209095	IdentifierDeclType	int		1209090	0					
ANR	1209096	Identifier	len		1209090	1					
ANR	1209097	AssignmentExpression	len = end - src		1209090	2		=			
ANR	1209098	Identifier	len		1209090	0					
ANR	1209099	AdditiveExpression	end - src		1209090	1		-			
ANR	1209100	Identifier	end		1209090	0					
ANR	1209101	Identifier	src		1209090	1					
ANR	1209102	IfStatement	if ( len > 0 )		1209090	1					
ANR	1209103	Condition	len > 0	222:6:6258:6264	1209090	0	True				
ANR	1209104	RelationalExpression	len > 0		1209090	0		>			
ANR	1209105	Identifier	len		1209090	0					
ANR	1209106	PrimaryExpression	0		1209090	1					
ANR	1209107	CompoundStatement		3:15:39:39	1209090	1					
ANR	1209108	ExpressionStatement	"xmemcpy ( dest , src , len )"	223:4:6273:6296	1209090	0	True				
ANR	1209109	CallExpression	"xmemcpy ( dest , src , len )"		1209090	0					
ANR	1209110	Callee	xmemcpy		1209090	0					
ANR	1209111	Identifier	xmemcpy		1209090	0					
ANR	1209112	ArgumentList	dest		1209090	1					
ANR	1209113	Argument	dest		1209090	0					
ANR	1209114	Identifier	dest		1209090	0					
ANR	1209115	Argument	src		1209090	1					
ANR	1209116	Identifier	src		1209090	0					
ANR	1209117	Argument	len		1209090	2					
ANR	1209118	Identifier	len		1209090	0					
ANR	1209119	ExpressionStatement	dest [ len ] = ( UChar ) 0	224:4:6302:6323	1209090	1	True				
ANR	1209120	AssignmentExpression	dest [ len ] = ( UChar ) 0		1209090	0		=			
ANR	1209121	ArrayIndexing	dest [ len ]		1209090	0					
ANR	1209122	Identifier	dest		1209090	0					
ANR	1209123	Identifier	len		1209090	1					
ANR	1209124	CastExpression	( UChar ) 0		1209090	1					
ANR	1209125	CastTarget	UChar		1209090	0					
ANR	1209126	PrimaryExpression	0		1209090	1					
ANR	1209127	ReturnType	extern void		1209090	1					
ANR	1209128	Identifier	onig_strcpy		1209090	2					
ANR	1209129	ParameterList	"UChar * dest , const UChar * src , const UChar * end"		1209090	3					
ANR	1209130	Parameter	UChar * dest	219:12:6178:6188	1209090	0	True				
ANR	1209131	ParameterType	UChar *		1209090	0					
ANR	1209132	Identifier	dest		1209090	1					
ANR	1209133	Parameter	const UChar * src	219:25:6191:6206	1209090	1	True				
ANR	1209134	ParameterType	const UChar *		1209090	0					
ANR	1209135	Identifier	src		1209090	1					
ANR	1209136	Parameter	const UChar * end	219:43:6209:6224	1209090	2	True				
ANR	1209137	ParameterType	const UChar *		1209090	0					
ANR	1209138	Identifier	end		1209090	1					
ANR	1209139	CFGEntryNode	ENTRY		1209090		True				
ANR	1209140	CFGExitNode	EXIT		1209090		True				
ANR	1209141	Symbol	len		1209090						
ANR	1209142	Symbol	src		1209090						
ANR	1209143	Symbol	* dest		1209090						
ANR	1209144	Symbol	end		1209090						
ANR	1209145	Symbol	dest		1209090						
ANR	1209146	Symbol	* len		1209090						
ANR	1209147	Function	strdup_with_null	229:0:6355:6687							
ANR	1209148	FunctionDef	"strdup_with_null (OnigEncoding enc , UChar * s , UChar * end)"		1209147	0					
ANR	1209149	CompoundStatement		231:0:6426:6687	1209147	0					
ANR	1209150	IdentifierDeclStatement	"int slen , term_len , i ;"	232:2:6430:6451	1209147	0	True				
ANR	1209151	IdentifierDecl	slen		1209147	0					
ANR	1209152	IdentifierDeclType	int		1209147	0					
ANR	1209153	Identifier	slen		1209147	1					
ANR	1209154	IdentifierDecl	term_len		1209147	1					
ANR	1209155	IdentifierDeclType	int		1209147	0					
ANR	1209156	Identifier	term_len		1209147	1					
ANR	1209157	IdentifierDecl	i		1209147	2					
ANR	1209158	IdentifierDeclType	int		1209147	0					
ANR	1209159	Identifier	i		1209147	1					
ANR	1209160	IdentifierDeclStatement	UChar * r ;	233:2:6455:6463	1209147	1	True				
ANR	1209161	IdentifierDecl	* r		1209147	0					
ANR	1209162	IdentifierDeclType	UChar *		1209147	0					
ANR	1209163	Identifier	r		1209147	1					
ANR	1209164	ExpressionStatement	slen = end - s	235:2:6468:6482	1209147	2	True				
ANR	1209165	AssignmentExpression	slen = end - s		1209147	0		=			
ANR	1209166	Identifier	slen		1209147	0					
ANR	1209167	AdditiveExpression	end - s		1209147	1		-			
ANR	1209168	Identifier	end		1209147	0					
ANR	1209169	Identifier	s		1209147	1					
ANR	1209170	ExpressionStatement	term_len = ONIGENC_MBC_MINLEN ( enc )	236:2:6486:6520	1209147	3	True				
ANR	1209171	AssignmentExpression	term_len = ONIGENC_MBC_MINLEN ( enc )		1209147	0		=			
ANR	1209172	Identifier	term_len		1209147	0					
ANR	1209173	CallExpression	ONIGENC_MBC_MINLEN ( enc )		1209147	1					
ANR	1209174	Callee	ONIGENC_MBC_MINLEN		1209147	0					
ANR	1209175	Identifier	ONIGENC_MBC_MINLEN		1209147	0					
ANR	1209176	ArgumentList	enc		1209147	1					
ANR	1209177	Argument	enc		1209147	0					
ANR	1209178	Identifier	enc		1209147	0					
ANR	1209179	ExpressionStatement	r = ( UChar * ) xmalloc ( slen + term_len )	238:2:6525:6562	1209147	4	True				
ANR	1209180	AssignmentExpression	r = ( UChar * ) xmalloc ( slen + term_len )		1209147	0		=			
ANR	1209181	Identifier	r		1209147	0					
ANR	1209182	CastExpression	( UChar * ) xmalloc ( slen + term_len )		1209147	1					
ANR	1209183	CastTarget	UChar *		1209147	0					
ANR	1209184	CallExpression	xmalloc ( slen + term_len )		1209147	1					
ANR	1209185	Callee	xmalloc		1209147	0					
ANR	1209186	Identifier	xmalloc		1209147	0					
ANR	1209187	ArgumentList	slen + term_len		1209147	1					
ANR	1209188	Argument	slen + term_len		1209147	0					
ANR	1209189	AdditiveExpression	slen + term_len		1209147	0		+			
ANR	1209190	Identifier	slen		1209147	0					
ANR	1209191	Identifier	term_len		1209147	1					
ANR	1209192	ExpressionStatement	CHECK_NULL_RETURN ( r )	239:2:6566:6586	1209147	5	True				
ANR	1209193	CallExpression	CHECK_NULL_RETURN ( r )		1209147	0					
ANR	1209194	Callee	CHECK_NULL_RETURN		1209147	0					
ANR	1209195	Identifier	CHECK_NULL_RETURN		1209147	0					
ANR	1209196	ArgumentList	r		1209147	1					
ANR	1209197	Argument	r		1209147	0					
ANR	1209198	Identifier	r		1209147	0					
ANR	1209199	ExpressionStatement	"xmemcpy ( r , s , slen )"	240:2:6590:6609	1209147	6	True				
ANR	1209200	CallExpression	"xmemcpy ( r , s , slen )"		1209147	0					
ANR	1209201	Callee	xmemcpy		1209147	0					
ANR	1209202	Identifier	xmemcpy		1209147	0					
ANR	1209203	ArgumentList	r		1209147	1					
ANR	1209204	Argument	r		1209147	0					
ANR	1209205	Identifier	r		1209147	0					
ANR	1209206	Argument	s		1209147	1					
ANR	1209207	Identifier	s		1209147	0					
ANR	1209208	Argument	slen		1209147	2					
ANR	1209209	Identifier	slen		1209147	0					
ANR	1209210	ForStatement	for ( i = 0 ; i < term_len ; i ++ )		1209147	7					
ANR	1209211	ForInit	i = 0 ;	242:7:6619:6624	1209147	0	True				
ANR	1209212	AssignmentExpression	i = 0		1209147	0		=			
ANR	1209213	Identifier	i		1209147	0					
ANR	1209214	PrimaryExpression	0		1209147	1					
ANR	1209215	Condition	i < term_len	242:14:6626:6637	1209147	1	True				
ANR	1209216	RelationalExpression	i < term_len		1209147	0		<			
ANR	1209217	Identifier	i		1209147	0					
ANR	1209218	Identifier	term_len		1209147	1					
ANR	1209219	PostIncDecOperationExpression	i ++	242:28:6640:6642	1209147	2	True				
ANR	1209220	Identifier	i		1209147	0					
ANR	1209221	IncDec	++		1209147	1					
ANR	1209222	ExpressionStatement	r [ slen + i ] = ( UChar ) 0	243:4:6649:6672	1209147	3	True				
ANR	1209223	AssignmentExpression	r [ slen + i ] = ( UChar ) 0		1209147	0		=			
ANR	1209224	ArrayIndexing	r [ slen + i ]		1209147	0					
ANR	1209225	Identifier	r		1209147	0					
ANR	1209226	AdditiveExpression	slen + i		1209147	1		+			
ANR	1209227	Identifier	slen		1209147	0					
ANR	1209228	Identifier	i		1209147	1					
ANR	1209229	CastExpression	( UChar ) 0		1209147	1					
ANR	1209230	CastTarget	UChar		1209147	0					
ANR	1209231	PrimaryExpression	0		1209147	1					
ANR	1209232	ReturnStatement	return r ;	245:2:6677:6685	1209147	8	True				
ANR	1209233	Identifier	r		1209147	0					
ANR	1209234	ReturnType	static UChar *		1209147	1					
ANR	1209235	Identifier	strdup_with_null		1209147	2					
ANR	1209236	ParameterList	"OnigEncoding enc , UChar * s , UChar * end"		1209147	3					
ANR	1209237	Parameter	OnigEncoding enc	230:17:6386:6401	1209147	0	True				
ANR	1209238	ParameterType	OnigEncoding		1209147	0					
ANR	1209239	Identifier	enc		1209147	1					
ANR	1209240	Parameter	UChar * s	230:35:6404:6411	1209147	1	True				
ANR	1209241	ParameterType	UChar *		1209147	0					
ANR	1209242	Identifier	s		1209147	1					
ANR	1209243	Parameter	UChar * end	230:45:6414:6423	1209147	2	True				
ANR	1209244	ParameterType	UChar *		1209147	0					
ANR	1209245	Identifier	end		1209147	1					
ANR	1209246	CFGEntryNode	ENTRY		1209147		True				
ANR	1209247	CFGExitNode	EXIT		1209147		True				
ANR	1209248	Symbol	term_len		1209147						
ANR	1209249	Symbol	r		1209147						
ANR	1209250	Symbol	s		1209147						
ANR	1209251	Symbol	* i		1209147						
ANR	1209252	Symbol	xmalloc		1209147						
ANR	1209253	Symbol	slen		1209147						
ANR	1209254	Symbol	ONIGENC_MBC_MINLEN		1209147						
ANR	1209255	Symbol	i		1209147						
ANR	1209256	Symbol	end		1209147						
ANR	1209257	Symbol	enc		1209147						
ANR	1209258	Symbol	* r		1209147						
ANR	1209259	Symbol	* slen		1209147						
ANR	1209260	DeclStmt									
ANR	1209261	Decl							define PUNFETCH	define PUNFETCH	p
ANR	1209262	Function	str_end_cmp	314:0:8154:8434							
ANR	1209263	FunctionDef	"str_end_cmp (st_str_end_key * x , st_str_end_key * y)"		1209262	0					
ANR	1209264	CompoundStatement		316:0:8215:8434	1209262	0					
ANR	1209265	IdentifierDeclStatement	"UChar * p , * q ;"	317:2:8219:8231	1209262	0	True				
ANR	1209266	IdentifierDecl	* p		1209262	0					
ANR	1209267	IdentifierDeclType	UChar *		1209262	0					
ANR	1209268	Identifier	p		1209262	1					
ANR	1209269	IdentifierDecl	* q		1209262	1					
ANR	1209270	IdentifierDeclType	UChar *		1209262	0					
ANR	1209271	Identifier	q		1209262	1					
ANR	1209272	IdentifierDeclStatement	int c ;	318:2:8235:8240	1209262	1	True				
ANR	1209273	IdentifierDecl	c		1209262	0					
ANR	1209274	IdentifierDeclType	int		1209262	0					
ANR	1209275	Identifier	c		1209262	1					
ANR	1209276	IfStatement	if ( ( x -> end - x -> s ) != ( y -> end - y -> s ) )		1209262	2					
ANR	1209277	Condition	( x -> end - x -> s ) != ( y -> end - y -> s )	320:6:8249:8282	1209262	0	True				
ANR	1209278	EqualityExpression	( x -> end - x -> s ) != ( y -> end - y -> s )		1209262	0		!=			
ANR	1209279	AdditiveExpression	x -> end - x -> s		1209262	0		-			
ANR	1209280	PtrMemberAccess	x -> end		1209262	0					
ANR	1209281	Identifier	x		1209262	0					
ANR	1209282	Identifier	end		1209262	1					
ANR	1209283	PtrMemberAccess	x -> s		1209262	1					
ANR	1209284	Identifier	x		1209262	0					
ANR	1209285	Identifier	s		1209262	1					
ANR	1209286	AdditiveExpression	y -> end - y -> s		1209262	1		-			
ANR	1209287	PtrMemberAccess	y -> end		1209262	0					
ANR	1209288	Identifier	y		1209262	0					
ANR	1209289	Identifier	end		1209262	1					
ANR	1209290	PtrMemberAccess	y -> s		1209262	1					
ANR	1209291	Identifier	y		1209262	0					
ANR	1209292	Identifier	s		1209262	1					
ANR	1209293	ReturnStatement	return 1 ;	321:4:8289:8297	1209262	1	True				
ANR	1209294	PrimaryExpression	1		1209262	0					
ANR	1209295	ExpressionStatement	p = x -> s	323:2:8302:8310	1209262	3	True				
ANR	1209296	AssignmentExpression	p = x -> s		1209262	0		=			
ANR	1209297	Identifier	p		1209262	0					
ANR	1209298	PtrMemberAccess	x -> s		1209262	1					
ANR	1209299	Identifier	x		1209262	0					
ANR	1209300	Identifier	s		1209262	1					
ANR	1209301	ExpressionStatement	q = y -> s	324:2:8314:8322	1209262	4	True				
ANR	1209302	AssignmentExpression	q = y -> s		1209262	0		=			
ANR	1209303	Identifier	q		1209262	0					
ANR	1209304	PtrMemberAccess	y -> s		1209262	1					
ANR	1209305	Identifier	y		1209262	0					
ANR	1209306	Identifier	s		1209262	1					
ANR	1209307	WhileStatement	while ( p < x -> end )		1209262	5					
ANR	1209308	Condition	p < x -> end	325:9:8333:8342	1209262	0	True				
ANR	1209309	RelationalExpression	p < x -> end		1209262	0		<			
ANR	1209310	Identifier	p		1209262	0					
ANR	1209311	PtrMemberAccess	x -> end		1209262	1					
ANR	1209312	Identifier	x		1209262	0					
ANR	1209313	Identifier	end		1209262	1					
ANR	1209314	CompoundStatement		10:21:129:129	1209262	1					
ANR	1209315	ExpressionStatement	c = ( int ) * p - ( int ) * q	326:4:8351:8374	1209262	0	True				
ANR	1209316	AssignmentExpression	c = ( int ) * p - ( int ) * q		1209262	0		=			
ANR	1209317	Identifier	c		1209262	0					
ANR	1209318	AdditiveExpression	( int ) * p - ( int ) * q		1209262	1		-			
ANR	1209319	CastExpression	( int ) * p		1209262	0					
ANR	1209320	CastTarget	int		1209262	0					
ANR	1209321	UnaryOperationExpression	* p		1209262	1					
ANR	1209322	UnaryOperator	*		1209262	0					
ANR	1209323	Identifier	p		1209262	1					
ANR	1209324	CastExpression	( int ) * q		1209262	1					
ANR	1209325	CastTarget	int		1209262	0					
ANR	1209326	UnaryOperationExpression	* q		1209262	1					
ANR	1209327	UnaryOperator	*		1209262	0					
ANR	1209328	Identifier	q		1209262	1					
ANR	1209329	IfStatement	if ( c != 0 )		1209262	1					
ANR	1209330	Condition	c != 0	327:8:8384:8389	1209262	0	True				
ANR	1209331	EqualityExpression	c != 0		1209262	0		!=			
ANR	1209332	Identifier	c		1209262	0					
ANR	1209333	PrimaryExpression	0		1209262	1					
ANR	1209334	ReturnStatement	return c ;	327:16:8392:8400	1209262	1	True				
ANR	1209335	Identifier	c		1209262	0					
ANR	1209336	ExpressionStatement	p ++	329:4:8407:8410	1209262	2	True				
ANR	1209337	PostIncDecOperationExpression	p ++		1209262	0					
ANR	1209338	Identifier	p		1209262	0					
ANR	1209339	IncDec	++		1209262	1					
ANR	1209340	ExpressionStatement	q ++	329:9:8412:8415	1209262	3	True				
ANR	1209341	PostIncDecOperationExpression	q ++		1209262	0					
ANR	1209342	Identifier	q		1209262	0					
ANR	1209343	IncDec	++		1209262	1					
ANR	1209344	ReturnStatement	return 0 ;	332:2:8424:8432	1209262	6	True				
ANR	1209345	PrimaryExpression	0		1209262	0					
ANR	1209346	ReturnType	static int		1209262	1					
ANR	1209347	Identifier	str_end_cmp		1209262	2					
ANR	1209348	ParameterList	"st_str_end_key * x , st_str_end_key * y"		1209262	3					
ANR	1209349	Parameter	st_str_end_key * x	315:12:8177:8193	1209262	0	True				
ANR	1209350	ParameterType	st_str_end_key *		1209262	0					
ANR	1209351	Identifier	x		1209262	1					
ANR	1209352	Parameter	st_str_end_key * y	315:31:8196:8212	1209262	1	True				
ANR	1209353	ParameterType	st_str_end_key *		1209262	0					
ANR	1209354	Identifier	y		1209262	1					
ANR	1209355	CFGEntryNode	ENTRY		1209262		True				
ANR	1209356	CFGExitNode	EXIT		1209262		True				
ANR	1209357	Symbol	* x		1209262						
ANR	1209358	Symbol	c		1209262						
ANR	1209359	Symbol	* y		1209262						
ANR	1209360	Symbol	y -> end		1209262						
ANR	1209361	Symbol	x -> end		1209262						
ANR	1209362	Symbol	p		1209262						
ANR	1209363	Symbol	q		1209262						
ANR	1209364	Symbol	x -> s		1209262						
ANR	1209365	Symbol	x		1209262						
ANR	1209366	Symbol	y		1209262						
ANR	1209367	Symbol	y -> s		1209262						
ANR	1209368	Symbol	* p		1209262						
ANR	1209369	Symbol	* q		1209262						
ANR	1209370	Function	str_end_hash	335:0:8437:8611							
ANR	1209371	FunctionDef	str_end_hash (st_str_end_key * x)		1209370	0					
ANR	1209372	CompoundStatement		337:0:8480:8611	1209370	0					
ANR	1209373	IdentifierDeclStatement	UChar * p ;	338:2:8484:8492	1209370	0	True				
ANR	1209374	IdentifierDecl	* p		1209370	0					
ANR	1209375	IdentifierDeclType	UChar *		1209370	0					
ANR	1209376	Identifier	p		1209370	1					
ANR	1209377	IdentifierDeclStatement	int val = 0 ;	339:2:8496:8507	1209370	1	True				
ANR	1209378	IdentifierDecl	val = 0		1209370	0					
ANR	1209379	IdentifierDeclType	int		1209370	0					
ANR	1209380	Identifier	val		1209370	1					
ANR	1209381	AssignmentExpression	val = 0		1209370	2		=			
ANR	1209382	Identifier	val		1209370	0					
ANR	1209383	PrimaryExpression	0		1209370	1					
ANR	1209384	ExpressionStatement	p = x -> s	341:2:8512:8520	1209370	2	True				
ANR	1209385	AssignmentExpression	p = x -> s		1209370	0		=			
ANR	1209386	Identifier	p		1209370	0					
ANR	1209387	PtrMemberAccess	x -> s		1209370	1					
ANR	1209388	Identifier	x		1209370	0					
ANR	1209389	Identifier	s		1209370	1					
ANR	1209390	WhileStatement	while ( p < x -> end )		1209370	3					
ANR	1209391	Condition	p < x -> end	342:9:8531:8540	1209370	0	True				
ANR	1209392	RelationalExpression	p < x -> end		1209370	0		<			
ANR	1209393	Identifier	p		1209370	0					
ANR	1209394	PtrMemberAccess	x -> end		1209370	1					
ANR	1209395	Identifier	x		1209370	0					
ANR	1209396	Identifier	end		1209370	1					
ANR	1209397	CompoundStatement		6:21:62:62	1209370	1					
ANR	1209398	ExpressionStatement	val = val * 997 + ( int ) * p ++	343:4:8549:8577	1209370	0	True				
ANR	1209399	AssignmentExpression	val = val * 997 + ( int ) * p ++		1209370	0		=			
ANR	1209400	Identifier	val		1209370	0					
ANR	1209401	AdditiveExpression	val * 997 + ( int ) * p ++		1209370	1		+			
ANR	1209402	MultiplicativeExpression	val * 997		1209370	0		*			
ANR	1209403	Identifier	val		1209370	0					
ANR	1209404	PrimaryExpression	997		1209370	1					
ANR	1209405	CastExpression	( int ) * p ++		1209370	1					
ANR	1209406	CastTarget	int		1209370	0					
ANR	1209407	UnaryOperationExpression	* p ++		1209370	1					
ANR	1209408	UnaryOperator	*		1209370	0					
ANR	1209409	PostIncDecOperationExpression	p ++		1209370	1					
ANR	1209410	Identifier	p		1209370	0					
ANR	1209411	IncDec	++		1209370	1					
ANR	1209412	ReturnStatement	return val + ( val >> 5 ) ;	346:2:8586:8609	1209370	4	True				
ANR	1209413	AdditiveExpression	val + ( val >> 5 )		1209370	0		+			
ANR	1209414	Identifier	val		1209370	0					
ANR	1209415	ShiftExpression	val >> 5		1209370	1		>>			
ANR	1209416	Identifier	val		1209370	0					
ANR	1209417	PrimaryExpression	5		1209370	1					
ANR	1209418	ReturnType	static int		1209370	1					
ANR	1209419	Identifier	str_end_hash		1209370	2					
ANR	1209420	ParameterList	st_str_end_key * x		1209370	3					
ANR	1209421	Parameter	st_str_end_key * x	336:13:8461:8477	1209370	0	True				
ANR	1209422	ParameterType	st_str_end_key *		1209370	0					
ANR	1209423	Identifier	x		1209370	1					
ANR	1209424	CFGEntryNode	ENTRY		1209370		True				
ANR	1209425	CFGExitNode	EXIT		1209370		True				
ANR	1209426	Symbol	p		1209370						
ANR	1209427	Symbol	val		1209370						
ANR	1209428	Symbol	x -> s		1209370						
ANR	1209429	Symbol	* x		1209370						
ANR	1209430	Symbol	* p ++		1209370						
ANR	1209431	Symbol	x		1209370						
ANR	1209432	Symbol	x -> end		1209370						
ANR	1209433	Function	onig_st_init_strend_table_with_size	349:0:8614:8856							
ANR	1209434	FunctionDef	onig_st_init_strend_table_with_size (int size)		1209433	0					
ANR	1209435	CompoundStatement		351:0:8684:8856	1209433	0					
ANR	1209436	Statement	static	352:2:8688:8693	1209433	0	True				
ANR	1209437	Statement	struct	352:9:8695:8700	1209433	1	True				
ANR	1209438	Statement	st_hash_type	352:16:8702:8713	1209433	2	True				
ANR	1209439	Statement	hashType	352:29:8715:8722	1209433	3	True				
ANR	1209440	Statement	=	352:38:8724:8724	1209433	4	True				
ANR	1209441	CompoundStatement		2:40:41:41	1209433	5					
ANR	1209442	Statement	str_end_cmp	353:4:8732:8742	1209433	0	True				
ANR	1209443	Statement	","	353:15:8743:8743	1209433	1	True				
ANR	1209444	Statement	str_end_hash	354:4:8749:8760	1209433	2	True				
ANR	1209445	Statement	","	354:16:8761:8761	1209433	3	True				
ANR	1209446	ExpressionStatement		355:3:8766:8766	1209433	6	True				
ANR	1209447	ReturnStatement	"return ( hash_table_type * ) onig_st_init_table_with_size ( & hashType , size ) ;"	357:2:8771:8854	1209433	7	True				
ANR	1209448	CastExpression	"( hash_table_type * ) onig_st_init_table_with_size ( & hashType , size )"		1209433	0					
ANR	1209449	CastTarget	hash_table_type *		1209433	0					
ANR	1209450	CallExpression	"onig_st_init_table_with_size ( & hashType , size )"		1209433	1					
ANR	1209451	Callee	onig_st_init_table_with_size		1209433	0					
ANR	1209452	Identifier	onig_st_init_table_with_size		1209433	0					
ANR	1209453	ArgumentList	& hashType		1209433	1					
ANR	1209454	Argument	& hashType		1209433	0					
ANR	1209455	UnaryOperationExpression	& hashType		1209433	0					
ANR	1209456	UnaryOperator	&		1209433	0					
ANR	1209457	Identifier	hashType		1209433	1					
ANR	1209458	Argument	size		1209433	1					
ANR	1209459	Identifier	size		1209433	0					
ANR	1209460	ReturnType	extern hash_table_type *		1209433	1					
ANR	1209461	Identifier	onig_st_init_strend_table_with_size		1209433	2					
ANR	1209462	ParameterList	int size		1209433	3					
ANR	1209463	Parameter	int size	350:36:8674:8681	1209433	0	True				
ANR	1209464	ParameterType	int		1209433	0					
ANR	1209465	Identifier	size		1209433	1					
ANR	1209466	CFGEntryNode	ENTRY		1209433		True				
ANR	1209467	CFGExitNode	EXIT		1209433		True				
ANR	1209468	Symbol	size		1209433						
ANR	1209469	Symbol	& hashType		1209433						
ANR	1209470	Symbol	onig_st_init_table_with_size		1209433						
ANR	1209471	Function	onig_st_lookup_strend	361:0:8859:9136							
ANR	1209472	FunctionDef	"onig_st_lookup_strend (hash_table_type * table , const UChar * str_key , const UChar * end_key , hash_data_type * value)"		1209471	0					
ANR	1209473	CompoundStatement		364:0:8991:9136	1209471	0					
ANR	1209474	IdentifierDeclStatement	st_str_end_key key ;	365:2:8995:9013	1209471	0	True				
ANR	1209475	IdentifierDecl	key		1209471	0					
ANR	1209476	IdentifierDeclType	st_str_end_key		1209471	0					
ANR	1209477	Identifier	key		1209471	1					
ANR	1209478	ExpressionStatement	key . s = ( UChar * ) str_key	367:2:9018:9044	1209471	1	True				
ANR	1209479	AssignmentExpression	key . s = ( UChar * ) str_key		1209471	0		=			
ANR	1209480	MemberAccess	key . s		1209471	0					
ANR	1209481	Identifier	key		1209471	0					
ANR	1209482	Identifier	s		1209471	1					
ANR	1209483	CastExpression	( UChar * ) str_key		1209471	1					
ANR	1209484	CastTarget	UChar *		1209471	0					
ANR	1209485	Identifier	str_key		1209471	1					
ANR	1209486	ExpressionStatement	key . end = ( UChar * ) end_key	368:2:9048:9074	1209471	2	True				
ANR	1209487	AssignmentExpression	key . end = ( UChar * ) end_key		1209471	0		=			
ANR	1209488	MemberAccess	key . end		1209471	0					
ANR	1209489	Identifier	key		1209471	0					
ANR	1209490	Identifier	end		1209471	1					
ANR	1209491	CastExpression	( UChar * ) end_key		1209471	1					
ANR	1209492	CastTarget	UChar *		1209471	0					
ANR	1209493	Identifier	end_key		1209471	1					
ANR	1209494	ReturnStatement	"return onig_st_lookup ( table , ( st_data_t ) ( & key ) , value ) ;"	370:2:9079:9134	1209471	3	True				
ANR	1209495	CallExpression	"onig_st_lookup ( table , ( st_data_t ) ( & key ) , value )"		1209471	0					
ANR	1209496	Callee	onig_st_lookup		1209471	0					
ANR	1209497	Identifier	onig_st_lookup		1209471	0					
ANR	1209498	ArgumentList	table		1209471	1					
ANR	1209499	Argument	table		1209471	0					
ANR	1209500	Identifier	table		1209471	0					
ANR	1209501	Argument	( st_data_t ) ( & key )		1209471	1					
ANR	1209502	CastExpression	( st_data_t ) ( & key )		1209471	0					
ANR	1209503	CastTarget	st_data_t		1209471	0					
ANR	1209504	UnaryOperationExpression	& key		1209471	1					
ANR	1209505	UnaryOperator	&		1209471	0					
ANR	1209506	Identifier	key		1209471	1					
ANR	1209507	Argument	value		1209471	2					
ANR	1209508	Identifier	value		1209471	0					
ANR	1209509	ReturnType	extern int		1209471	1					
ANR	1209510	Identifier	onig_st_lookup_strend		1209471	2					
ANR	1209511	ParameterList	"hash_table_type * table , const UChar * str_key , const UChar * end_key , hash_data_type * value"		1209471	3					
ANR	1209512	Parameter	hash_table_type * table	362:22:8892:8913	1209471	0	True				
ANR	1209513	ParameterType	hash_table_type *		1209471	0					
ANR	1209514	Identifier	table		1209471	1					
ANR	1209515	Parameter	const UChar * str_key	362:46:8916:8935	1209471	1	True				
ANR	1209516	ParameterType	const UChar *		1209471	0					
ANR	1209517	Identifier	str_key		1209471	1					
ANR	1209518	Parameter	const UChar * end_key	363:8:8946:8965	1209471	2	True				
ANR	1209519	ParameterType	const UChar *		1209471	0					
ANR	1209520	Identifier	end_key		1209471	1					
ANR	1209521	Parameter	hash_data_type * value	363:30:8968:8988	1209471	3	True				
ANR	1209522	ParameterType	hash_data_type *		1209471	0					
ANR	1209523	Identifier	value		1209471	1					
ANR	1209524	CFGEntryNode	ENTRY		1209471		True				
ANR	1209525	CFGExitNode	EXIT		1209471		True				
ANR	1209526	Symbol	& key		1209471						
ANR	1209527	Symbol	str_key		1209471						
ANR	1209528	Symbol	end_key		1209471						
ANR	1209529	Symbol	key . s		1209471						
ANR	1209530	Symbol	onig_st_lookup		1209471						
ANR	1209531	Symbol	value		1209471						
ANR	1209532	Symbol	table		1209471						
ANR	1209533	Symbol	key		1209471						
ANR	1209534	Symbol	key . end		1209471						
ANR	1209535	Function	onig_st_insert_strend	373:0:9139:9542							
ANR	1209536	FunctionDef	"onig_st_insert_strend (hash_table_type * table , const UChar * str_key , const UChar * end_key , hash_data_type value)"		1209535	0					
ANR	1209537	CompoundStatement		376:0:9270:9542	1209535	0					
ANR	1209538	IdentifierDeclStatement	st_str_end_key * key ;	377:2:9274:9293	1209535	0	True				
ANR	1209539	IdentifierDecl	* key		1209535	0					
ANR	1209540	IdentifierDeclType	st_str_end_key *		1209535	0					
ANR	1209541	Identifier	key		1209535	1					
ANR	1209542	IdentifierDeclStatement	int result ;	378:2:9297:9307	1209535	1	True				
ANR	1209543	IdentifierDecl	result		1209535	0					
ANR	1209544	IdentifierDeclType	int		1209535	0					
ANR	1209545	Identifier	result		1209535	1					
ANR	1209546	ExpressionStatement	key = ( st_str_end_key * ) xmalloc ( sizeof ( st_str_end_key ) )	380:2:9312:9367	1209535	2	True				
ANR	1209547	AssignmentExpression	key = ( st_str_end_key * ) xmalloc ( sizeof ( st_str_end_key ) )		1209535	0		=			
ANR	1209548	Identifier	key		1209535	0					
ANR	1209549	CastExpression	( st_str_end_key * ) xmalloc ( sizeof ( st_str_end_key ) )		1209535	1					
ANR	1209550	CastTarget	st_str_end_key *		1209535	0					
ANR	1209551	CallExpression	xmalloc ( sizeof ( st_str_end_key ) )		1209535	1					
ANR	1209552	Callee	xmalloc		1209535	0					
ANR	1209553	Identifier	xmalloc		1209535	0					
ANR	1209554	ArgumentList	sizeof ( st_str_end_key )		1209535	1					
ANR	1209555	Argument	sizeof ( st_str_end_key )		1209535	0					
ANR	1209556	SizeofExpression	sizeof ( st_str_end_key )		1209535	0					
ANR	1209557	Sizeof	sizeof		1209535	0					
ANR	1209558	SizeofOperand	st_str_end_key		1209535	1					
ANR	1209559	ExpressionStatement	key -> s = ( UChar * ) str_key	381:2:9371:9398	1209535	3	True				
ANR	1209560	AssignmentExpression	key -> s = ( UChar * ) str_key		1209535	0		=			
ANR	1209561	PtrMemberAccess	key -> s		1209535	0					
ANR	1209562	Identifier	key		1209535	0					
ANR	1209563	Identifier	s		1209535	1					
ANR	1209564	CastExpression	( UChar * ) str_key		1209535	1					
ANR	1209565	CastTarget	UChar *		1209535	0					
ANR	1209566	Identifier	str_key		1209535	1					
ANR	1209567	ExpressionStatement	key -> end = ( UChar * ) end_key	382:2:9402:9429	1209535	4	True				
ANR	1209568	AssignmentExpression	key -> end = ( UChar * ) end_key		1209535	0		=			
ANR	1209569	PtrMemberAccess	key -> end		1209535	0					
ANR	1209570	Identifier	key		1209535	0					
ANR	1209571	Identifier	end		1209535	1					
ANR	1209572	CastExpression	( UChar * ) end_key		1209535	1					
ANR	1209573	CastTarget	UChar *		1209535	0					
ANR	1209574	Identifier	end_key		1209535	1					
ANR	1209575	ExpressionStatement	"result = onig_st_insert ( table , ( st_data_t ) key , value )"	383:2:9433:9487	1209535	5	True				
ANR	1209576	AssignmentExpression	"result = onig_st_insert ( table , ( st_data_t ) key , value )"		1209535	0		=			
ANR	1209577	Identifier	result		1209535	0					
ANR	1209578	CallExpression	"onig_st_insert ( table , ( st_data_t ) key , value )"		1209535	1					
ANR	1209579	Callee	onig_st_insert		1209535	0					
ANR	1209580	Identifier	onig_st_insert		1209535	0					
ANR	1209581	ArgumentList	table		1209535	1					
ANR	1209582	Argument	table		1209535	0					
ANR	1209583	Identifier	table		1209535	0					
ANR	1209584	Argument	( st_data_t ) key		1209535	1					
ANR	1209585	CastExpression	( st_data_t ) key		1209535	0					
ANR	1209586	CastTarget	st_data_t		1209535	0					
ANR	1209587	Identifier	key		1209535	1					
ANR	1209588	Argument	value		1209535	2					
ANR	1209589	Identifier	value		1209535	0					
ANR	1209590	IfStatement	if ( result )		1209535	6					
ANR	1209591	Condition	result	384:6:9495:9500	1209535	0	True				
ANR	1209592	Identifier	result		1209535	0					
ANR	1209593	CompoundStatement		9:14:232:232	1209535	1					
ANR	1209594	ExpressionStatement	xfree ( key )	385:4:9509:9519	1209535	0	True				
ANR	1209595	CallExpression	xfree ( key )		1209535	0					
ANR	1209596	Callee	xfree		1209535	0					
ANR	1209597	Identifier	xfree		1209535	0					
ANR	1209598	ArgumentList	key		1209535	1					
ANR	1209599	Argument	key		1209535	0					
ANR	1209600	Identifier	key		1209535	0					
ANR	1209601	ReturnStatement	return result ;	387:2:9527:9540	1209535	7	True				
ANR	1209602	Identifier	result		1209535	0					
ANR	1209603	ReturnType	extern int		1209535	1					
ANR	1209604	Identifier	onig_st_insert_strend		1209535	2					
ANR	1209605	ParameterList	"hash_table_type * table , const UChar * str_key , const UChar * end_key , hash_data_type value"		1209535	3					
ANR	1209606	Parameter	hash_table_type * table	374:22:9172:9193	1209535	0	True				
ANR	1209607	ParameterType	hash_table_type *		1209535	0					
ANR	1209608	Identifier	table		1209535	1					
ANR	1209609	Parameter	const UChar * str_key	374:46:9196:9215	1209535	1	True				
ANR	1209610	ParameterType	const UChar *		1209535	0					
ANR	1209611	Identifier	str_key		1209535	1					
ANR	1209612	Parameter	const UChar * end_key	375:8:9226:9245	1209535	2	True				
ANR	1209613	ParameterType	const UChar *		1209535	0					
ANR	1209614	Identifier	end_key		1209535	1					
ANR	1209615	Parameter	hash_data_type value	375:30:9248:9267	1209535	3	True				
ANR	1209616	ParameterType	hash_data_type		1209535	0					
ANR	1209617	Identifier	value		1209535	1					
ANR	1209618	CFGEntryNode	ENTRY		1209535		True				
ANR	1209619	CFGExitNode	EXIT		1209535		True				
ANR	1209620	Symbol	result		1209535						
ANR	1209621	Symbol	key -> s		1209535						
ANR	1209622	Symbol	str_key		1209535						
ANR	1209623	Symbol	end_key		1209535						
ANR	1209624	Symbol	xmalloc		1209535						
ANR	1209625	Symbol	key -> end		1209535						
ANR	1209626	Symbol	* key		1209535						
ANR	1209627	Symbol	onig_st_insert		1209535						
ANR	1209628	Symbol	value		1209535						
ANR	1209629	Symbol	table		1209535						
ANR	1209630	Symbol	key		1209535						
ANR	1209631	ClassDef	<unnamed>	397:8:9649:9830							
ANR	1209632	DeclStmt									
ANR	1209633	Decl							UChar	UChar *	name
ANR	1209634	DeclStmt									
ANR	1209635	Decl							int	int	name_len
ANR	1209636	DeclStmt									
ANR	1209637	Decl							int	int	back_num
ANR	1209638	DeclStmt									
ANR	1209639	Decl							int	int	back_alloc
ANR	1209640	DeclStmt									
ANR	1209641	Decl							int	int	back_ref1
ANR	1209642	DeclStmt									
ANR	1209643	Decl							int	int *	back_refs
ANR	1209644	DeclStmt									
ANR	1209645	Decl									NameEntry
ANR	1209646	DeclStmt									
ANR	1209647	Decl							st_table	st_table	NameTable
ANR	1209648	DeclStmt									
ANR	1209649	Decl							st_data_t	st_data_t	HashDataType
ANR	1209650	Function	i_print_name_entry	415:0:10038:10463							
ANR	1209651	FunctionDef	"i_print_name_entry (UChar * key , NameEntry * e , void * arg)"		1209650	0					
ANR	1209652	CompoundStatement		417:0:10105:10463	1209650	0					
ANR	1209653	IdentifierDeclStatement	int i ;	418:2:10109:10114	1209650	0	True				
ANR	1209654	IdentifierDecl	i		1209650	0					
ANR	1209655	IdentifierDeclType	int		1209650	0					
ANR	1209656	Identifier	i		1209650	1					
ANR	1209657	IdentifierDeclStatement	FILE * fp = ( FILE * ) arg ;	419:2:10118:10140	1209650	1	True				
ANR	1209658	IdentifierDecl	* fp = ( FILE * ) arg		1209650	0					
ANR	1209659	IdentifierDeclType	FILE *		1209650	0					
ANR	1209660	Identifier	fp		1209650	1					
ANR	1209661	AssignmentExpression	* fp = ( FILE * ) arg		1209650	2		=			
ANR	1209662	Identifier	fp		1209650	0					
ANR	1209663	CastExpression	( FILE * ) arg		1209650	1					
ANR	1209664	CastTarget	FILE *		1209650	0					
ANR	1209665	Identifier	arg		1209650	1					
ANR	1209666	ExpressionStatement	"fprintf ( fp , ""%s: "" , e -> name )"	421:2:10145:10173	1209650	2	True				
ANR	1209667	CallExpression	"fprintf ( fp , ""%s: "" , e -> name )"		1209650	0					
ANR	1209668	Callee	fprintf		1209650	0					
ANR	1209669	Identifier	fprintf		1209650	0					
ANR	1209670	ArgumentList	fp		1209650	1					
ANR	1209671	Argument	fp		1209650	0					
ANR	1209672	Identifier	fp		1209650	0					
ANR	1209673	Argument	"""%s: """		1209650	1					
ANR	1209674	PrimaryExpression	"""%s: """		1209650	0					
ANR	1209675	Argument	e -> name		1209650	2					
ANR	1209676	PtrMemberAccess	e -> name		1209650	0					
ANR	1209677	Identifier	e		1209650	0					
ANR	1209678	Identifier	name		1209650	1					
ANR	1209679	IfStatement	if ( e -> back_num == 0 )		1209650	3					
ANR	1209680	Condition	e -> back_num == 0	422:6:10181:10196	1209650	0	True				
ANR	1209681	EqualityExpression	e -> back_num == 0		1209650	0		==			
ANR	1209682	PtrMemberAccess	e -> back_num		1209650	0					
ANR	1209683	Identifier	e		1209650	0					
ANR	1209684	Identifier	back_num		1209650	1					
ANR	1209685	PrimaryExpression	0		1209650	1					
ANR	1209686	ExpressionStatement	"fputs ( ""-"" , fp )"	423:4:10203:10217	1209650	1	True				
ANR	1209687	CallExpression	"fputs ( ""-"" , fp )"		1209650	0					
ANR	1209688	Callee	fputs		1209650	0					
ANR	1209689	Identifier	fputs		1209650	0					
ANR	1209690	ArgumentList	"""-"""		1209650	1					
ANR	1209691	Argument	"""-"""		1209650	0					
ANR	1209692	PrimaryExpression	"""-"""		1209650	0					
ANR	1209693	Argument	fp		1209650	1					
ANR	1209694	Identifier	fp		1209650	0					
ANR	1209695	ElseStatement	else		1209650	0					
ANR	1209696	IfStatement	if ( e -> back_num == 1 )		1209650	0					
ANR	1209697	Condition	e -> back_num == 1	424:11:10230:10245	1209650	0	True				
ANR	1209698	EqualityExpression	e -> back_num == 1		1209650	0		==			
ANR	1209699	PtrMemberAccess	e -> back_num		1209650	0					
ANR	1209700	Identifier	e		1209650	0					
ANR	1209701	Identifier	back_num		1209650	1					
ANR	1209702	PrimaryExpression	1		1209650	1					
ANR	1209703	ExpressionStatement	"fprintf ( fp , ""%d"" , e -> back_ref1 )"	425:4:10252:10283	1209650	1	True				
ANR	1209704	CallExpression	"fprintf ( fp , ""%d"" , e -> back_ref1 )"		1209650	0					
ANR	1209705	Callee	fprintf		1209650	0					
ANR	1209706	Identifier	fprintf		1209650	0					
ANR	1209707	ArgumentList	fp		1209650	1					
ANR	1209708	Argument	fp		1209650	0					
ANR	1209709	Identifier	fp		1209650	0					
ANR	1209710	Argument	"""%d"""		1209650	1					
ANR	1209711	PrimaryExpression	"""%d"""		1209650	0					
ANR	1209712	Argument	e -> back_ref1		1209650	2					
ANR	1209713	PtrMemberAccess	e -> back_ref1		1209650	0					
ANR	1209714	Identifier	e		1209650	0					
ANR	1209715	Identifier	back_ref1		1209650	1					
ANR	1209716	ElseStatement	else		1209650	0					
ANR	1209717	CompoundStatement		10:7:186:186	1209650	0					
ANR	1209718	ForStatement	for ( i = 0 ; i < e -> back_num ; i ++ )		1209650	0					
ANR	1209719	ForInit	i = 0 ;	427:9:10303:10308	1209650	0	True				
ANR	1209720	AssignmentExpression	i = 0		1209650	0		=			
ANR	1209721	Identifier	i		1209650	0					
ANR	1209722	PrimaryExpression	0		1209650	1					
ANR	1209723	Condition	i < e -> back_num	427:16:10310:10324	1209650	1	True				
ANR	1209724	RelationalExpression	i < e -> back_num		1209650	0		<			
ANR	1209725	Identifier	i		1209650	0					
ANR	1209726	PtrMemberAccess	e -> back_num		1209650	1					
ANR	1209727	Identifier	e		1209650	0					
ANR	1209728	Identifier	back_num		1209650	1					
ANR	1209729	PostIncDecOperationExpression	i ++	427:33:10327:10329	1209650	2	True				
ANR	1209730	Identifier	i		1209650	0					
ANR	1209731	IncDec	++		1209650	1					
ANR	1209732	CompoundStatement		11:38:226:226	1209650	3					
ANR	1209733	IfStatement	if ( i > 0 )		1209650	0					
ANR	1209734	Condition	i > 0	428:10:10344:10348	1209650	0	True				
ANR	1209735	RelationalExpression	i > 0		1209650	0		>			
ANR	1209736	Identifier	i		1209650	0					
ANR	1209737	PrimaryExpression	0		1209650	1					
ANR	1209738	ExpressionStatement	"fprintf ( fp , "", "" )"	428:17:10351:10368	1209650	1	True				
ANR	1209739	CallExpression	"fprintf ( fp , "", "" )"		1209650	0					
ANR	1209740	Callee	fprintf		1209650	0					
ANR	1209741	Identifier	fprintf		1209650	0					
ANR	1209742	ArgumentList	fp		1209650	1					
ANR	1209743	Argument	fp		1209650	0					
ANR	1209744	Identifier	fp		1209650	0					
ANR	1209745	Argument	""", """		1209650	1					
ANR	1209746	PrimaryExpression	""", """		1209650	0					
ANR	1209747	ExpressionStatement	"fprintf ( fp , ""%d"" , e -> back_refs [ i ] )"	429:6:10376:10410	1209650	1	True				
ANR	1209748	CallExpression	"fprintf ( fp , ""%d"" , e -> back_refs [ i ] )"		1209650	0					
ANR	1209749	Callee	fprintf		1209650	0					
ANR	1209750	Identifier	fprintf		1209650	0					
ANR	1209751	ArgumentList	fp		1209650	1					
ANR	1209752	Argument	fp		1209650	0					
ANR	1209753	Identifier	fp		1209650	0					
ANR	1209754	Argument	"""%d"""		1209650	1					
ANR	1209755	PrimaryExpression	"""%d"""		1209650	0					
ANR	1209756	Argument	e -> back_refs [ i ]		1209650	2					
ANR	1209757	ArrayIndexing	e -> back_refs [ i ]		1209650	0					
ANR	1209758	PtrMemberAccess	e -> back_refs		1209650	0					
ANR	1209759	Identifier	e		1209650	0					
ANR	1209760	Identifier	back_refs		1209650	1					
ANR	1209761	Identifier	i		1209650	1					
ANR	1209762	ExpressionStatement	"fputs ( ""\\n"" , fp )"	432:2:10424:10439	1209650	4	True				
ANR	1209763	CallExpression	"fputs ( ""\\n"" , fp )"		1209650	0					
ANR	1209764	Callee	fputs		1209650	0					
ANR	1209765	Identifier	fputs		1209650	0					
ANR	1209766	ArgumentList	"""\\n"""		1209650	1					
ANR	1209767	Argument	"""\\n"""		1209650	0					
ANR	1209768	PrimaryExpression	"""\\n"""		1209650	0					
ANR	1209769	Argument	fp		1209650	1					
ANR	1209770	Identifier	fp		1209650	0					
ANR	1209771	ReturnStatement	return ST_CONTINUE ;	433:2:10443:10461	1209650	5	True				
ANR	1209772	Identifier	ST_CONTINUE		1209650	0					
ANR	1209773	ReturnType	static int		1209650	1					
ANR	1209774	Identifier	i_print_name_entry		1209650	2					
ANR	1209775	ParameterList	"UChar * key , NameEntry * e , void * arg"		1209650	3					
ANR	1209776	Parameter	UChar * key	416:19:10068:10077	1209650	0	True				
ANR	1209777	ParameterType	UChar *		1209650	0					
ANR	1209778	Identifier	key		1209650	1					
ANR	1209779	Parameter	NameEntry * e	416:31:10080:10091	1209650	1	True				
ANR	1209780	ParameterType	NameEntry *		1209650	0					
ANR	1209781	Identifier	e		1209650	1					
ANR	1209782	Parameter	void * arg	416:45:10094:10102	1209650	2	True				
ANR	1209783	ParameterType	void *		1209650	0					
ANR	1209784	Identifier	arg		1209650	1					
ANR	1209785	CFGEntryNode	ENTRY		1209650		True				
ANR	1209786	CFGExitNode	EXIT		1209650		True				
ANR	1209787	Symbol	e -> back_ref1		1209650						
ANR	1209788	Symbol	e -> back_num		1209650						
ANR	1209789	Symbol	e -> back_refs		1209650						
ANR	1209790	Symbol	e		1209650						
ANR	1209791	Symbol	* * e		1209650						
ANR	1209792	Symbol	* e -> back_refs		1209650						
ANR	1209793	Symbol	i		1209650						
ANR	1209794	Symbol	fp		1209650						
ANR	1209795	Symbol	* e		1209650						
ANR	1209796	Symbol	* i		1209650						
ANR	1209797	Symbol	arg		1209650						
ANR	1209798	Symbol	key		1209650						
ANR	1209799	Symbol	ST_CONTINUE		1209650						
ANR	1209800	Symbol	e -> name		1209650						
ANR	1209801	Function	onig_print_names	436:0:10466:10725							
ANR	1209802	FunctionDef	"onig_print_names (FILE * fp , regex_t * reg)"		1209801	0					
ANR	1209803	CompoundStatement		438:0:10518:10725	1209801	0					
ANR	1209804	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	439:2:10522:10565	1209801	0	True				
ANR	1209805	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		1209801	0					
ANR	1209806	IdentifierDeclType	NameTable *		1209801	0					
ANR	1209807	Identifier	t		1209801	1					
ANR	1209808	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		1209801	2		=			
ANR	1209809	Identifier	t		1209801	0					
ANR	1209810	CastExpression	( NameTable * ) reg -> name_table		1209801	1					
ANR	1209811	CastTarget	NameTable *		1209801	0					
ANR	1209812	PtrMemberAccess	reg -> name_table		1209801	1					
ANR	1209813	Identifier	reg		1209801	0					
ANR	1209814	Identifier	name_table		1209801	1					
ANR	1209815	IfStatement	if ( IS_NOT_NULL ( t ) )		1209801	1					
ANR	1209816	Condition	IS_NOT_NULL ( t )	441:6:10574:10587	1209801	0	True				
ANR	1209817	CallExpression	IS_NOT_NULL ( t )		1209801	0					
ANR	1209818	Callee	IS_NOT_NULL		1209801	0					
ANR	1209819	Identifier	IS_NOT_NULL		1209801	0					
ANR	1209820	ArgumentList	t		1209801	1					
ANR	1209821	Argument	t		1209801	0					
ANR	1209822	Identifier	t		1209801	0					
ANR	1209823	CompoundStatement		4:22:71:71	1209801	1					
ANR	1209824	ExpressionStatement	"fprintf ( fp , ""name table\\n"" )"	442:4:10596:10623	1209801	0	True				
ANR	1209825	CallExpression	"fprintf ( fp , ""name table\\n"" )"		1209801	0					
ANR	1209826	Callee	fprintf		1209801	0					
ANR	1209827	Identifier	fprintf		1209801	0					
ANR	1209828	ArgumentList	fp		1209801	1					
ANR	1209829	Argument	fp		1209801	0					
ANR	1209830	Identifier	fp		1209801	0					
ANR	1209831	Argument	"""name table\\n"""		1209801	1					
ANR	1209832	PrimaryExpression	"""name table\\n"""		1209801	0					
ANR	1209833	ExpressionStatement	"onig_st_foreach ( t , i_print_name_entry , ( HashDataType ) fp )"	443:4:10629:10686	1209801	1	True				
ANR	1209834	CallExpression	"onig_st_foreach ( t , i_print_name_entry , ( HashDataType ) fp )"		1209801	0					
ANR	1209835	Callee	onig_st_foreach		1209801	0					
ANR	1209836	Identifier	onig_st_foreach		1209801	0					
ANR	1209837	ArgumentList	t		1209801	1					
ANR	1209838	Argument	t		1209801	0					
ANR	1209839	Identifier	t		1209801	0					
ANR	1209840	Argument	i_print_name_entry		1209801	1					
ANR	1209841	Identifier	i_print_name_entry		1209801	0					
ANR	1209842	Argument	( HashDataType ) fp		1209801	2					
ANR	1209843	CastExpression	( HashDataType ) fp		1209801	0					
ANR	1209844	CastTarget	HashDataType		1209801	0					
ANR	1209845	Identifier	fp		1209801	1					
ANR	1209846	ExpressionStatement	"fputs ( ""\\n"" , fp )"	444:4:10692:10707	1209801	2	True				
ANR	1209847	CallExpression	"fputs ( ""\\n"" , fp )"		1209801	0					
ANR	1209848	Callee	fputs		1209801	0					
ANR	1209849	Identifier	fputs		1209801	0					
ANR	1209850	ArgumentList	"""\\n"""		1209801	1					
ANR	1209851	Argument	"""\\n"""		1209801	0					
ANR	1209852	PrimaryExpression	"""\\n"""		1209801	0					
ANR	1209853	Argument	fp		1209801	1					
ANR	1209854	Identifier	fp		1209801	0					
ANR	1209855	ReturnStatement	return 0 ;	446:2:10715:10723	1209801	2	True				
ANR	1209856	PrimaryExpression	0		1209801	0					
ANR	1209857	ReturnType	extern int		1209801	1					
ANR	1209858	Identifier	onig_print_names		1209801	2					
ANR	1209859	ParameterList	"FILE * fp , regex_t * reg"		1209801	3					
ANR	1209860	Parameter	FILE * fp	437:17:10494:10501	1209801	0	True				
ANR	1209861	ParameterType	FILE *		1209801	0					
ANR	1209862	Identifier	fp		1209801	1					
ANR	1209863	Parameter	regex_t * reg	437:27:10504:10515	1209801	1	True				
ANR	1209864	ParameterType	regex_t *		1209801	0					
ANR	1209865	Identifier	reg		1209801	1					
ANR	1209866	CFGEntryNode	ENTRY		1209801		True				
ANR	1209867	CFGExitNode	EXIT		1209801		True				
ANR	1209868	Symbol	IS_NOT_NULL		1209801						
ANR	1209869	Symbol	t		1209801						
ANR	1209870	Symbol	reg		1209801						
ANR	1209871	Symbol	reg -> name_table		1209801						
ANR	1209872	Symbol	fp		1209801						
ANR	1209873	Symbol	* reg		1209801						
ANR	1209874	Symbol	i_print_name_entry		1209801						
ANR	1209875	Function	names_clear	460:0:10952:11125							
ANR	1209876	FunctionDef	names_clear (regex_t * reg)		1209875	0					
ANR	1209877	CompoundStatement		462:0:10989:11125	1209875	0					
ANR	1209878	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	463:2:10993:11036	1209875	0	True				
ANR	1209879	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		1209875	0					
ANR	1209880	IdentifierDeclType	NameTable *		1209875	0					
ANR	1209881	Identifier	t		1209875	1					
ANR	1209882	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		1209875	2		=			
ANR	1209883	Identifier	t		1209875	0					
ANR	1209884	CastExpression	( NameTable * ) reg -> name_table		1209875	1					
ANR	1209885	CastTarget	NameTable *		1209875	0					
ANR	1209886	PtrMemberAccess	reg -> name_table		1209875	1					
ANR	1209887	Identifier	reg		1209875	0					
ANR	1209888	Identifier	name_table		1209875	1					
ANR	1209889	IfStatement	if ( IS_NOT_NULL ( t ) )		1209875	1					
ANR	1209890	Condition	IS_NOT_NULL ( t )	465:6:11045:11058	1209875	0	True				
ANR	1209891	CallExpression	IS_NOT_NULL ( t )		1209875	0					
ANR	1209892	Callee	IS_NOT_NULL		1209875	0					
ANR	1209893	Identifier	IS_NOT_NULL		1209875	0					
ANR	1209894	ArgumentList	t		1209875	1					
ANR	1209895	Argument	t		1209875	0					
ANR	1209896	Identifier	t		1209875	0					
ANR	1209897	CompoundStatement		4:22:71:71	1209875	1					
ANR	1209898	ExpressionStatement	"onig_st_foreach ( t , i_free_name_entry , 0 )"	466:4:11067:11107	1209875	0	True				
ANR	1209899	CallExpression	"onig_st_foreach ( t , i_free_name_entry , 0 )"		1209875	0					
ANR	1209900	Callee	onig_st_foreach		1209875	0					
ANR	1209901	Identifier	onig_st_foreach		1209875	0					
ANR	1209902	ArgumentList	t		1209875	1					
ANR	1209903	Argument	t		1209875	0					
ANR	1209904	Identifier	t		1209875	0					
ANR	1209905	Argument	i_free_name_entry		1209875	1					
ANR	1209906	Identifier	i_free_name_entry		1209875	0					
ANR	1209907	Argument	0		1209875	2					
ANR	1209908	PrimaryExpression	0		1209875	0					
ANR	1209909	ReturnStatement	return 0 ;	468:2:11115:11123	1209875	2	True				
ANR	1209910	PrimaryExpression	0		1209875	0					
ANR	1209911	ReturnType	static int		1209875	1					
ANR	1209912	Identifier	names_clear		1209875	2					
ANR	1209913	ParameterList	regex_t * reg		1209875	3					
ANR	1209914	Parameter	regex_t * reg	461:12:10975:10986	1209875	0	True				
ANR	1209915	ParameterType	regex_t *		1209875	0					
ANR	1209916	Identifier	reg		1209875	1					
ANR	1209917	CFGEntryNode	ENTRY		1209875		True				
ANR	1209918	CFGExitNode	EXIT		1209875		True				
ANR	1209919	Symbol	IS_NOT_NULL		1209875						
ANR	1209920	Symbol	t		1209875						
ANR	1209921	Symbol	reg		1209875						
ANR	1209922	Symbol	reg -> name_table		1209875						
ANR	1209923	Symbol	* reg		1209875						
ANR	1209924	Symbol	i_free_name_entry		1209875						
ANR	1209925	Function	onig_names_free	471:0:11128:11368							
ANR	1209926	FunctionDef	onig_names_free (regex_t * reg)		1209925	0					
ANR	1209927	CompoundStatement		473:0:11169:11368	1209925	0					
ANR	1209928	IdentifierDeclStatement	int r ;	474:2:11173:11178	1209925	0	True				
ANR	1209929	IdentifierDecl	r		1209925	0					
ANR	1209930	IdentifierDeclType	int		1209925	0					
ANR	1209931	Identifier	r		1209925	1					
ANR	1209932	IdentifierDeclStatement	NameTable * t ;	475:2:11182:11194	1209925	1	True				
ANR	1209933	IdentifierDecl	* t		1209925	0					
ANR	1209934	IdentifierDeclType	NameTable *		1209925	0					
ANR	1209935	Identifier	t		1209925	1					
ANR	1209936	ExpressionStatement	r = names_clear ( reg )	477:2:11199:11219	1209925	2	True				
ANR	1209937	AssignmentExpression	r = names_clear ( reg )		1209925	0		=			
ANR	1209938	Identifier	r		1209925	0					
ANR	1209939	CallExpression	names_clear ( reg )		1209925	1					
ANR	1209940	Callee	names_clear		1209925	0					
ANR	1209941	Identifier	names_clear		1209925	0					
ANR	1209942	ArgumentList	reg		1209925	1					
ANR	1209943	Argument	reg		1209925	0					
ANR	1209944	Identifier	reg		1209925	0					
ANR	1209945	IfStatement	if ( r )		1209925	3					
ANR	1209946	Condition	r	478:6:11227:11227	1209925	0	True				
ANR	1209947	Identifier	r		1209925	0					
ANR	1209948	ReturnStatement	return r ;	478:9:11230:11238	1209925	1	True				
ANR	1209949	Identifier	r		1209925	0					
ANR	1209950	ExpressionStatement	t = ( NameTable * ) reg -> name_table	480:2:11243:11275	1209925	4	True				
ANR	1209951	AssignmentExpression	t = ( NameTable * ) reg -> name_table		1209925	0		=			
ANR	1209952	Identifier	t		1209925	0					
ANR	1209953	CastExpression	( NameTable * ) reg -> name_table		1209925	1					
ANR	1209954	CastTarget	NameTable *		1209925	0					
ANR	1209955	PtrMemberAccess	reg -> name_table		1209925	1					
ANR	1209956	Identifier	reg		1209925	0					
ANR	1209957	Identifier	name_table		1209925	1					
ANR	1209958	IfStatement	if ( IS_NOT_NULL ( t ) )		1209925	5					
ANR	1209959	Condition	IS_NOT_NULL ( t )	481:6:11283:11296	1209925	0	True				
ANR	1209960	CallExpression	IS_NOT_NULL ( t )		1209925	0					
ANR	1209961	Callee	IS_NOT_NULL		1209925	0					
ANR	1209962	Identifier	IS_NOT_NULL		1209925	0					
ANR	1209963	ArgumentList	t		1209925	1					
ANR	1209964	Argument	t		1209925	0					
ANR	1209965	Identifier	t		1209925	0					
ANR	1209966	ExpressionStatement	onig_st_free_table ( t )	481:22:11299:11320	1209925	1	True				
ANR	1209967	CallExpression	onig_st_free_table ( t )		1209925	0					
ANR	1209968	Callee	onig_st_free_table		1209925	0					
ANR	1209969	Identifier	onig_st_free_table		1209925	0					
ANR	1209970	ArgumentList	t		1209925	1					
ANR	1209971	Argument	t		1209925	0					
ANR	1209972	Identifier	t		1209925	0					
ANR	1209973	ExpressionStatement	reg -> name_table = ( void * ) NULL	482:2:11324:11354	1209925	6	True				
ANR	1209974	AssignmentExpression	reg -> name_table = ( void * ) NULL		1209925	0		=			
ANR	1209975	PtrMemberAccess	reg -> name_table		1209925	0					
ANR	1209976	Identifier	reg		1209925	0					
ANR	1209977	Identifier	name_table		1209925	1					
ANR	1209978	CastExpression	( void * ) NULL		1209925	1					
ANR	1209979	CastTarget	void *		1209925	0					
ANR	1209980	Identifier	NULL		1209925	1					
ANR	1209981	ReturnStatement	return 0 ;	483:2:11358:11366	1209925	7	True				
ANR	1209982	PrimaryExpression	0		1209925	0					
ANR	1209983	ReturnType	extern int		1209925	1					
ANR	1209984	Identifier	onig_names_free		1209925	2					
ANR	1209985	ParameterList	regex_t * reg		1209925	3					
ANR	1209986	Parameter	regex_t * reg	472:16:11155:11166	1209925	0	True				
ANR	1209987	ParameterType	regex_t *		1209925	0					
ANR	1209988	Identifier	reg		1209925	1					
ANR	1209989	CFGEntryNode	ENTRY		1209925		True				
ANR	1209990	CFGExitNode	EXIT		1209925		True				
ANR	1209991	Symbol	r		1209925						
ANR	1209992	Symbol	IS_NOT_NULL		1209925						
ANR	1209993	Symbol	NULL		1209925						
ANR	1209994	Symbol	t		1209925						
ANR	1209995	Symbol	reg		1209925						
ANR	1209996	Symbol	names_clear		1209925						
ANR	1209997	Symbol	reg -> name_table		1209925						
ANR	1209998	Symbol	* reg		1209925						
ANR	1209999	Function	name_find	486:0:11371:11664							
ANR	1210000	FunctionDef	"name_find (regex_t * reg , const UChar * name , const UChar * name_end)"		1209999	0					
ANR	1210001	CompoundStatement		488:0:11455:11664	1209999	0					
ANR	1210002	IdentifierDeclStatement	NameEntry * e ;	489:2:11459:11471	1209999	0	True				
ANR	1210003	IdentifierDecl	* e		1209999	0					
ANR	1210004	IdentifierDeclType	NameEntry *		1209999	0					
ANR	1210005	Identifier	e		1209999	1					
ANR	1210006	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	490:2:11475:11518	1209999	1	True				
ANR	1210007	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		1209999	0					
ANR	1210008	IdentifierDeclType	NameTable *		1209999	0					
ANR	1210009	Identifier	t		1209999	1					
ANR	1210010	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		1209999	2		=			
ANR	1210011	Identifier	t		1209999	0					
ANR	1210012	CastExpression	( NameTable * ) reg -> name_table		1209999	1					
ANR	1210013	CastTarget	NameTable *		1209999	0					
ANR	1210014	PtrMemberAccess	reg -> name_table		1209999	1					
ANR	1210015	Identifier	reg		1209999	0					
ANR	1210016	Identifier	name_table		1209999	1					
ANR	1210017	ExpressionStatement	e = ( NameEntry * ) NULL	492:2:11523:11544	1209999	2	True				
ANR	1210018	AssignmentExpression	e = ( NameEntry * ) NULL		1209999	0		=			
ANR	1210019	Identifier	e		1209999	0					
ANR	1210020	CastExpression	( NameEntry * ) NULL		1209999	1					
ANR	1210021	CastTarget	NameEntry *		1209999	0					
ANR	1210022	Identifier	NULL		1209999	1					
ANR	1210023	IfStatement	if ( IS_NOT_NULL ( t ) )		1209999	3					
ANR	1210024	Condition	IS_NOT_NULL ( t )	493:6:11552:11565	1209999	0	True				
ANR	1210025	CallExpression	IS_NOT_NULL ( t )		1209999	0					
ANR	1210026	Callee	IS_NOT_NULL		1209999	0					
ANR	1210027	Identifier	IS_NOT_NULL		1209999	0					
ANR	1210028	ArgumentList	t		1209999	1					
ANR	1210029	Argument	t		1209999	0					
ANR	1210030	Identifier	t		1209999	0					
ANR	1210031	CompoundStatement		6:22:112:112	1209999	1					
ANR	1210032	ExpressionStatement	"onig_st_lookup_strend ( t , name , name_end , ( HashDataType * ) ( ( void * ) ( & e ) ) )"	494:4:11574:11646	1209999	0	True				
ANR	1210033	CallExpression	"onig_st_lookup_strend ( t , name , name_end , ( HashDataType * ) ( ( void * ) ( & e ) ) )"		1209999	0					
ANR	1210034	Callee	onig_st_lookup_strend		1209999	0					
ANR	1210035	Identifier	onig_st_lookup_strend		1209999	0					
ANR	1210036	ArgumentList	t		1209999	1					
ANR	1210037	Argument	t		1209999	0					
ANR	1210038	Identifier	t		1209999	0					
ANR	1210039	Argument	name		1209999	1					
ANR	1210040	Identifier	name		1209999	0					
ANR	1210041	Argument	name_end		1209999	2					
ANR	1210042	Identifier	name_end		1209999	0					
ANR	1210043	Argument	( HashDataType * ) ( ( void * ) ( & e ) )		1209999	3					
ANR	1210044	CastExpression	( HashDataType * ) ( ( void * ) ( & e ) )		1209999	0					
ANR	1210045	CastTarget	HashDataType *		1209999	0					
ANR	1210046	CastExpression	( void * ) ( & e )		1209999	1					
ANR	1210047	CastTarget	void *		1209999	0					
ANR	1210048	UnaryOperationExpression	& e		1209999	1					
ANR	1210049	UnaryOperator	&		1209999	0					
ANR	1210050	Identifier	e		1209999	1					
ANR	1210051	ReturnStatement	return e ;	496:2:11654:11662	1209999	4	True				
ANR	1210052	Identifier	e		1209999	0					
ANR	1210053	ReturnType	static NameEntry *		1209999	1					
ANR	1210054	Identifier	name_find		1209999	2					
ANR	1210055	ParameterList	"regex_t * reg , const UChar * name , const UChar * name_end"		1209999	3					
ANR	1210056	Parameter	regex_t * reg	487:10:11399:11410	1209999	0	True				
ANR	1210057	ParameterType	regex_t *		1209999	0					
ANR	1210058	Identifier	reg		1209999	1					
ANR	1210059	Parameter	const UChar * name	487:24:11413:11429	1209999	1	True				
ANR	1210060	ParameterType	const UChar *		1209999	0					
ANR	1210061	Identifier	name		1209999	1					
ANR	1210062	Parameter	const UChar * name_end	487:43:11432:11452	1209999	2	True				
ANR	1210063	ParameterType	const UChar *		1209999	0					
ANR	1210064	Identifier	name_end		1209999	1					
ANR	1210065	CFGEntryNode	ENTRY		1209999		True				
ANR	1210066	CFGExitNode	EXIT		1209999		True				
ANR	1210067	Symbol	IS_NOT_NULL		1209999						
ANR	1210068	Symbol	NULL		1209999						
ANR	1210069	Symbol	t		1209999						
ANR	1210070	Symbol	reg		1209999						
ANR	1210071	Symbol	e		1209999						
ANR	1210072	Symbol	name		1209999						
ANR	1210073	Symbol	reg -> name_table		1209999						
ANR	1210074	Symbol	& e		1209999						
ANR	1210075	Symbol	name_end		1209999						
ANR	1210076	Symbol	* reg		1209999						
ANR	1210077	ClassDef	<unnamed>	499:8:11675:11822							
ANR	1210078	DeclStmt									
ANR	1210079	Decl							"int ( * ) ( const UChar * , const UChar * , int , int * , regex_t * , void * )"	"int ( * ) ( const UChar * , const UChar * , int , int * , regex_t * , void * )"	func
ANR	1210080	DeclStmt									
ANR	1210081	Decl							regex_t	regex_t *	reg
ANR	1210082	DeclStmt									
ANR	1210083	Decl							void	void *	arg
ANR	1210084	DeclStmt									
ANR	1210085	Decl							int	int	ret
ANR	1210086	DeclStmt									
ANR	1210087	Decl							OnigEncoding	OnigEncoding	enc
ANR	1210088	DeclStmt									
ANR	1210089	Decl									INamesArg
ANR	1210090	DeclStmt									
ANR	1210091	Decl							int	int	r
ANR	1210092	Function	onig_foreach_name	522:0:12183:12614							
ANR	1210093	FunctionDef	"onig_foreach_name (regex_t * reg , int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * ) , void * arg)"		1210092	0					
ANR	1210094	CompoundStatement		525:0:12304:12614	1210092	0					
ANR	1210095	IdentifierDeclStatement	INamesArg narg ;	526:2:12308:12322	1210092	0	True				
ANR	1210096	IdentifierDecl	narg		1210092	0					
ANR	1210097	IdentifierDeclType	INamesArg		1210092	0					
ANR	1210098	Identifier	narg		1210092	1					
ANR	1210099	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	527:2:12326:12369	1210092	1	True				
ANR	1210100	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		1210092	0					
ANR	1210101	IdentifierDeclType	NameTable *		1210092	0					
ANR	1210102	Identifier	t		1210092	1					
ANR	1210103	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		1210092	2		=			
ANR	1210104	Identifier	t		1210092	0					
ANR	1210105	CastExpression	( NameTable * ) reg -> name_table		1210092	1					
ANR	1210106	CastTarget	NameTable *		1210092	0					
ANR	1210107	PtrMemberAccess	reg -> name_table		1210092	1					
ANR	1210108	Identifier	reg		1210092	0					
ANR	1210109	Identifier	name_table		1210092	1					
ANR	1210110	ExpressionStatement	narg . ret = 0	529:2:12374:12386	1210092	2	True				
ANR	1210111	AssignmentExpression	narg . ret = 0		1210092	0		=			
ANR	1210112	MemberAccess	narg . ret		1210092	0					
ANR	1210113	Identifier	narg		1210092	0					
ANR	1210114	Identifier	ret		1210092	1					
ANR	1210115	PrimaryExpression	0		1210092	1					
ANR	1210116	IfStatement	if ( IS_NOT_NULL ( t ) )		1210092	3					
ANR	1210117	Condition	IS_NOT_NULL ( t )	530:6:12394:12407	1210092	0	True				
ANR	1210118	CallExpression	IS_NOT_NULL ( t )		1210092	0					
ANR	1210119	Callee	IS_NOT_NULL		1210092	0					
ANR	1210120	Identifier	IS_NOT_NULL		1210092	0					
ANR	1210121	ArgumentList	t		1210092	1					
ANR	1210122	Argument	t		1210092	0					
ANR	1210123	Identifier	t		1210092	0					
ANR	1210124	CompoundStatement		6:22:105:105	1210092	1					
ANR	1210125	ExpressionStatement	narg . func = func	531:4:12416:12432	1210092	0	True				
ANR	1210126	AssignmentExpression	narg . func = func		1210092	0		=			
ANR	1210127	MemberAccess	narg . func		1210092	0					
ANR	1210128	Identifier	narg		1210092	0					
ANR	1210129	Identifier	func		1210092	1					
ANR	1210130	Identifier	func		1210092	1					
ANR	1210131	ExpressionStatement	narg . reg = reg	532:4:12438:12453	1210092	1	True				
ANR	1210132	AssignmentExpression	narg . reg = reg		1210092	0		=			
ANR	1210133	MemberAccess	narg . reg		1210092	0					
ANR	1210134	Identifier	narg		1210092	0					
ANR	1210135	Identifier	reg		1210092	1					
ANR	1210136	Identifier	reg		1210092	1					
ANR	1210137	ExpressionStatement	narg . arg = arg	533:4:12459:12474	1210092	2	True				
ANR	1210138	AssignmentExpression	narg . arg = arg		1210092	0		=			
ANR	1210139	MemberAccess	narg . arg		1210092	0					
ANR	1210140	Identifier	narg		1210092	0					
ANR	1210141	Identifier	arg		1210092	1					
ANR	1210142	Identifier	arg		1210092	1					
ANR	1210143	ExpressionStatement	narg . enc = reg -> enc	534:4:12480:12500	1210092	3	True				
ANR	1210144	AssignmentExpression	narg . enc = reg -> enc		1210092	0		=			
ANR	1210145	MemberAccess	narg . enc		1210092	0					
ANR	1210146	Identifier	narg		1210092	0					
ANR	1210147	Identifier	enc		1210092	1					
ANR	1210148	PtrMemberAccess	reg -> enc		1210092	1					
ANR	1210149	Identifier	reg		1210092	0					
ANR	1210150	Identifier	enc		1210092	1					
ANR	1210151	ExpressionStatement	"onig_st_foreach ( t , i_names , ( HashDataType ) & narg )"	535:4:12540:12589	1210092	4	True				
ANR	1210152	CallExpression	"onig_st_foreach ( t , i_names , ( HashDataType ) & narg )"		1210092	0					
ANR	1210153	Callee	onig_st_foreach		1210092	0					
ANR	1210154	Identifier	onig_st_foreach		1210092	0					
ANR	1210155	ArgumentList	t		1210092	1					
ANR	1210156	Argument	t		1210092	0					
ANR	1210157	Identifier	t		1210092	0					
ANR	1210158	Argument	i_names		1210092	1					
ANR	1210159	Identifier	i_names		1210092	0					
ANR	1210160	Argument	( HashDataType ) & narg		1210092	2					
ANR	1210161	CastExpression	( HashDataType ) & narg		1210092	0					
ANR	1210162	CastTarget	HashDataType		1210092	0					
ANR	1210163	UnaryOperationExpression	& narg		1210092	1					
ANR	1210164	UnaryOperator	&		1210092	0					
ANR	1210165	Identifier	narg		1210092	1					
ANR	1210166	ReturnStatement	return narg . ret ;	537:2:12597:12612	1210092	4	True				
ANR	1210167	MemberAccess	narg . ret		1210092	0					
ANR	1210168	Identifier	narg		1210092	0					
ANR	1210169	Identifier	ret		1210092	1					
ANR	1210170	ReturnType	extern int		1210092	1					
ANR	1210171	Identifier	onig_foreach_name		1210092	2					
ANR	1210172	ParameterList	"regex_t * reg , int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * ) , void * arg"		1210092	3					
ANR	1210173	Parameter	regex_t * reg	523:18:12212:12223	1210092	0	True				
ANR	1210174	ParameterType	regex_t *		1210092	0					
ANR	1210175	Identifier	reg		1210092	1					
ANR	1210176	Parameter	"int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * )"	524:2:12228:12290	1210092	1	True				
ANR	1210177	ParameterType	"(( const UChar * , const UChar * , int , int * , regex_t * , void * ) int) *"		1210092	0					
ANR	1210178	Identifier	func		1210092	1					
ANR	1210179	Parameter	void * arg	524:67:12293:12301	1210092	2	True				
ANR	1210180	ParameterType	void *		1210092	0					
ANR	1210181	Identifier	arg		1210092	1					
ANR	1210182	CFGEntryNode	ENTRY		1210092		True				
ANR	1210183	CFGExitNode	EXIT		1210092		True				
ANR	1210184	Symbol	IS_NOT_NULL		1210092						
ANR	1210185	Symbol	narg . enc		1210092						
ANR	1210186	Symbol	reg -> name_table		1210092						
ANR	1210187	Symbol	narg . func		1210092						
ANR	1210188	Symbol	& narg		1210092						
ANR	1210189	Symbol	narg . ret		1210092						
ANR	1210190	Symbol	reg -> enc		1210092						
ANR	1210191	Symbol	narg . reg		1210092						
ANR	1210192	Symbol	func		1210092						
ANR	1210193	Symbol	t		1210092						
ANR	1210194	Symbol	i_names		1210092						
ANR	1210195	Symbol	reg		1210092						
ANR	1210196	Symbol	arg		1210092						
ANR	1210197	Symbol	narg		1210092						
ANR	1210198	Symbol	narg . arg		1210092						
ANR	1210199	Symbol	* reg		1210092						
ANR	1210200	DeclStmt									
ANR	1210201	Decl							int	int	i
ANR	1210202	Function	onig_renumber_name_table	557:0:12949:13170							
ANR	1210203	FunctionDef	"onig_renumber_name_table (regex_t * reg , GroupNumRemap * map)"		1210202	0					
ANR	1210204	CompoundStatement		559:0:13019:13170	1210202	0					
ANR	1210205	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	560:2:13023:13066	1210202	0	True				
ANR	1210206	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		1210202	0					
ANR	1210207	IdentifierDeclType	NameTable *		1210202	0					
ANR	1210208	Identifier	t		1210202	1					
ANR	1210209	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		1210202	2		=			
ANR	1210210	Identifier	t		1210202	0					
ANR	1210211	CastExpression	( NameTable * ) reg -> name_table		1210202	1					
ANR	1210212	CastTarget	NameTable *		1210202	0					
ANR	1210213	PtrMemberAccess	reg -> name_table		1210202	1					
ANR	1210214	Identifier	reg		1210202	0					
ANR	1210215	Identifier	name_table		1210202	1					
ANR	1210216	IfStatement	if ( IS_NOT_NULL ( t ) )		1210202	1					
ANR	1210217	Condition	IS_NOT_NULL ( t )	562:6:13075:13088	1210202	0	True				
ANR	1210218	CallExpression	IS_NOT_NULL ( t )		1210202	0					
ANR	1210219	Callee	IS_NOT_NULL		1210202	0					
ANR	1210220	Identifier	IS_NOT_NULL		1210202	0					
ANR	1210221	ArgumentList	t		1210202	1					
ANR	1210222	Argument	t		1210202	0					
ANR	1210223	Identifier	t		1210202	0					
ANR	1210224	CompoundStatement		4:22:71:71	1210202	1					
ANR	1210225	ExpressionStatement	"onig_st_foreach ( t , i_renumber_name , ( HashDataType ) map )"	563:4:13097:13152	1210202	0	True				
ANR	1210226	CallExpression	"onig_st_foreach ( t , i_renumber_name , ( HashDataType ) map )"		1210202	0					
ANR	1210227	Callee	onig_st_foreach		1210202	0					
ANR	1210228	Identifier	onig_st_foreach		1210202	0					
ANR	1210229	ArgumentList	t		1210202	1					
ANR	1210230	Argument	t		1210202	0					
ANR	1210231	Identifier	t		1210202	0					
ANR	1210232	Argument	i_renumber_name		1210202	1					
ANR	1210233	Identifier	i_renumber_name		1210202	0					
ANR	1210234	Argument	( HashDataType ) map		1210202	2					
ANR	1210235	CastExpression	( HashDataType ) map		1210202	0					
ANR	1210236	CastTarget	HashDataType		1210202	0					
ANR	1210237	Identifier	map		1210202	1					
ANR	1210238	ReturnStatement	return 0 ;	565:2:13160:13168	1210202	2	True				
ANR	1210239	PrimaryExpression	0		1210202	0					
ANR	1210240	ReturnType	extern int		1210202	1					
ANR	1210241	Identifier	onig_renumber_name_table		1210202	2					
ANR	1210242	ParameterList	"regex_t * reg , GroupNumRemap * map"		1210202	3					
ANR	1210243	Parameter	regex_t * reg	558:25:12985:12996	1210202	0	True				
ANR	1210244	ParameterType	regex_t *		1210202	0					
ANR	1210245	Identifier	reg		1210202	1					
ANR	1210246	Parameter	GroupNumRemap * map	558:39:12999:13016	1210202	1	True				
ANR	1210247	ParameterType	GroupNumRemap *		1210202	0					
ANR	1210248	Identifier	map		1210202	1					
ANR	1210249	CFGEntryNode	ENTRY		1210202		True				
ANR	1210250	CFGExitNode	EXIT		1210202		True				
ANR	1210251	Symbol	IS_NOT_NULL		1210202						
ANR	1210252	Symbol	t		1210202						
ANR	1210253	Symbol	reg		1210202						
ANR	1210254	Symbol	reg -> name_table		1210202						
ANR	1210255	Symbol	i_renumber_name		1210202						
ANR	1210256	Symbol	map		1210202						
ANR	1210257	Symbol	* reg		1210202						
ANR	1210258	Function	onig_number_of_names	569:0:13174:13340							
ANR	1210259	FunctionDef	onig_number_of_names (regex_t * reg)		1210258	0					
ANR	1210260	CompoundStatement		571:0:13220:13340	1210258	0					
ANR	1210261	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	572:2:13224:13267	1210258	0	True				
ANR	1210262	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		1210258	0					
ANR	1210263	IdentifierDeclType	NameTable *		1210258	0					
ANR	1210264	Identifier	t		1210258	1					
ANR	1210265	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		1210258	2		=			
ANR	1210266	Identifier	t		1210258	0					
ANR	1210267	CastExpression	( NameTable * ) reg -> name_table		1210258	1					
ANR	1210268	CastTarget	NameTable *		1210258	0					
ANR	1210269	PtrMemberAccess	reg -> name_table		1210258	1					
ANR	1210270	Identifier	reg		1210258	0					
ANR	1210271	Identifier	name_table		1210258	1					
ANR	1210272	IfStatement	if ( IS_NOT_NULL ( t ) )		1210258	1					
ANR	1210273	Condition	IS_NOT_NULL ( t )	574:6:13276:13289	1210258	0	True				
ANR	1210274	CallExpression	IS_NOT_NULL ( t )		1210258	0					
ANR	1210275	Callee	IS_NOT_NULL		1210258	0					
ANR	1210276	Identifier	IS_NOT_NULL		1210258	0					
ANR	1210277	ArgumentList	t		1210258	1					
ANR	1210278	Argument	t		1210258	0					
ANR	1210279	Identifier	t		1210258	0					
ANR	1210280	ReturnStatement	return t -> num_entries ;	575:4:13296:13317	1210258	1	True				
ANR	1210281	PtrMemberAccess	t -> num_entries		1210258	0					
ANR	1210282	Identifier	t		1210258	0					
ANR	1210283	Identifier	num_entries		1210258	1					
ANR	1210284	ElseStatement	else		1210258	0					
ANR	1210285	ReturnStatement	return 0 ;	577:4:13330:13338	1210258	0	True				
ANR	1210286	PrimaryExpression	0		1210258	0					
ANR	1210287	ReturnType	extern int		1210258	1					
ANR	1210288	Identifier	onig_number_of_names		1210258	2					
ANR	1210289	ParameterList	regex_t * reg		1210258	3					
ANR	1210290	Parameter	regex_t * reg	570:21:13206:13217	1210258	0	True				
ANR	1210291	ParameterType	regex_t *		1210258	0					
ANR	1210292	Identifier	reg		1210258	1					
ANR	1210293	CFGEntryNode	ENTRY		1210258		True				
ANR	1210294	CFGExitNode	EXIT		1210258		True				
ANR	1210295	Symbol	IS_NOT_NULL		1210258						
ANR	1210296	Symbol	t		1210258						
ANR	1210297	Symbol	reg		1210258						
ANR	1210298	Symbol	reg -> name_table		1210258						
ANR	1210299	Symbol	t -> num_entries		1210258						
ANR	1210300	Symbol	* reg		1210258						
ANR	1210301	Symbol	* t		1210258						
ANR	1210302	ClassDef	<unnamed>	584:8:13415:13489							
ANR	1210303	DeclStmt									
ANR	1210304	Decl							NameEntry	NameEntry *	e
ANR	1210305	DeclStmt									
ANR	1210306	Decl							int	int	num
ANR	1210307	DeclStmt									
ANR	1210308	Decl							int	int	alloc
ANR	1210309	DeclStmt									
ANR	1210310	Decl									NameTable
ANR	1210311	Function	onig_print_names	591:0:13510:14135							
ANR	1210312	FunctionDef	"onig_print_names (FILE * fp , regex_t * reg)"		1210311	0					
ANR	1210313	CompoundStatement		593:0:13562:14135	1210311	0					
ANR	1210314	IdentifierDeclStatement	"int i , j ;"	594:2:13566:13574	1210311	0	True				
ANR	1210315	IdentifierDecl	i		1210311	0					
ANR	1210316	IdentifierDeclType	int		1210311	0					
ANR	1210317	Identifier	i		1210311	1					
ANR	1210318	IdentifierDecl	j		1210311	1					
ANR	1210319	IdentifierDeclType	int		1210311	0					
ANR	1210320	Identifier	j		1210311	1					
ANR	1210321	IdentifierDeclStatement	NameEntry * e ;	595:2:13578:13590	1210311	1	True				
ANR	1210322	IdentifierDecl	* e		1210311	0					
ANR	1210323	IdentifierDeclType	NameEntry *		1210311	0					
ANR	1210324	Identifier	e		1210311	1					
ANR	1210325	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	596:2:13594:13637	1210311	2	True				
ANR	1210326	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		1210311	0					
ANR	1210327	IdentifierDeclType	NameTable *		1210311	0					
ANR	1210328	Identifier	t		1210311	1					
ANR	1210329	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		1210311	2		=			
ANR	1210330	Identifier	t		1210311	0					
ANR	1210331	CastExpression	( NameTable * ) reg -> name_table		1210311	1					
ANR	1210332	CastTarget	NameTable *		1210311	0					
ANR	1210333	PtrMemberAccess	reg -> name_table		1210311	1					
ANR	1210334	Identifier	reg		1210311	0					
ANR	1210335	Identifier	name_table		1210311	1					
ANR	1210336	IfStatement	if ( IS_NOT_NULL ( t ) && t -> num > 0 )		1210311	3					
ANR	1210337	Condition	IS_NOT_NULL ( t ) && t -> num > 0	598:6:13646:13673	1210311	0	True				
ANR	1210338	AndExpression	IS_NOT_NULL ( t ) && t -> num > 0		1210311	0		&&			
ANR	1210339	CallExpression	IS_NOT_NULL ( t )		1210311	0					
ANR	1210340	Callee	IS_NOT_NULL		1210311	0					
ANR	1210341	Identifier	IS_NOT_NULL		1210311	0					
ANR	1210342	ArgumentList	t		1210311	1					
ANR	1210343	Argument	t		1210311	0					
ANR	1210344	Identifier	t		1210311	0					
ANR	1210345	RelationalExpression	t -> num > 0		1210311	1		>			
ANR	1210346	PtrMemberAccess	t -> num		1210311	0					
ANR	1210347	Identifier	t		1210311	0					
ANR	1210348	Identifier	num		1210311	1					
ANR	1210349	PrimaryExpression	0		1210311	1					
ANR	1210350	CompoundStatement		6:36:113:113	1210311	1					
ANR	1210351	ExpressionStatement	"fprintf ( fp , ""name table\\n"" )"	599:4:13682:13709	1210311	0	True				
ANR	1210352	CallExpression	"fprintf ( fp , ""name table\\n"" )"		1210311	0					
ANR	1210353	Callee	fprintf		1210311	0					
ANR	1210354	Identifier	fprintf		1210311	0					
ANR	1210355	ArgumentList	fp		1210311	1					
ANR	1210356	Argument	fp		1210311	0					
ANR	1210357	Identifier	fp		1210311	0					
ANR	1210358	Argument	"""name table\\n"""		1210311	1					
ANR	1210359	PrimaryExpression	"""name table\\n"""		1210311	0					
ANR	1210360	ForStatement	for ( i = 0 ; i < t -> num ; i ++ )		1210311	1					
ANR	1210361	ForInit	i = 0 ;	600:9:13720:13725	1210311	0	True				
ANR	1210362	AssignmentExpression	i = 0		1210311	0		=			
ANR	1210363	Identifier	i		1210311	0					
ANR	1210364	PrimaryExpression	0		1210311	1					
ANR	1210365	Condition	i < t -> num	600:16:13727:13736	1210311	1	True				
ANR	1210366	RelationalExpression	i < t -> num		1210311	0		<			
ANR	1210367	Identifier	i		1210311	0					
ANR	1210368	PtrMemberAccess	t -> num		1210311	1					
ANR	1210369	Identifier	t		1210311	0					
ANR	1210370	Identifier	num		1210311	1					
ANR	1210371	PostIncDecOperationExpression	i ++	600:28:13739:13741	1210311	2	True				
ANR	1210372	Identifier	i		1210311	0					
ANR	1210373	IncDec	++		1210311	1					
ANR	1210374	CompoundStatement		8:33:181:181	1210311	3					
ANR	1210375	ExpressionStatement	e = & ( t -> e [ i ] )	601:6:13752:13766	1210311	0	True				
ANR	1210376	AssignmentExpression	e = & ( t -> e [ i ] )		1210311	0		=			
ANR	1210377	Identifier	e		1210311	0					
ANR	1210378	UnaryOperationExpression	& ( t -> e [ i ] )		1210311	1					
ANR	1210379	UnaryOperator	&		1210311	0					
ANR	1210380	ArrayIndexing	t -> e [ i ]		1210311	1					
ANR	1210381	PtrMemberAccess	t -> e		1210311	0					
ANR	1210382	Identifier	t		1210311	0					
ANR	1210383	Identifier	e		1210311	1					
ANR	1210384	Identifier	i		1210311	1					
ANR	1210385	ExpressionStatement	"fprintf ( fp , ""%s: "" , e -> name )"	602:6:13774:13802	1210311	1	True				
ANR	1210386	CallExpression	"fprintf ( fp , ""%s: "" , e -> name )"		1210311	0					
ANR	1210387	Callee	fprintf		1210311	0					
ANR	1210388	Identifier	fprintf		1210311	0					
ANR	1210389	ArgumentList	fp		1210311	1					
ANR	1210390	Argument	fp		1210311	0					
ANR	1210391	Identifier	fp		1210311	0					
ANR	1210392	Argument	"""%s: """		1210311	1					
ANR	1210393	PrimaryExpression	"""%s: """		1210311	0					
ANR	1210394	Argument	e -> name		1210311	2					
ANR	1210395	PtrMemberAccess	e -> name		1210311	0					
ANR	1210396	Identifier	e		1210311	0					
ANR	1210397	Identifier	name		1210311	1					
ANR	1210398	IfStatement	if ( e -> back_num == 0 )		1210311	2					
ANR	1210399	Condition	e -> back_num == 0	603:10:13814:13829	1210311	0	True				
ANR	1210400	EqualityExpression	e -> back_num == 0		1210311	0		==			
ANR	1210401	PtrMemberAccess	e -> back_num		1210311	0					
ANR	1210402	Identifier	e		1210311	0					
ANR	1210403	Identifier	back_num		1210311	1					
ANR	1210404	PrimaryExpression	0		1210311	1					
ANR	1210405	CompoundStatement		11:28:269:269	1210311	1					
ANR	1210406	ExpressionStatement	"fputs ( ""-"" , fp )"	604:1:13835:13849	1210311	0	True				
ANR	1210407	CallExpression	"fputs ( ""-"" , fp )"		1210311	0					
ANR	1210408	Callee	fputs		1210311	0					
ANR	1210409	Identifier	fputs		1210311	0					
ANR	1210410	ArgumentList	"""-"""		1210311	1					
ANR	1210411	Argument	"""-"""		1210311	0					
ANR	1210412	PrimaryExpression	"""-"""		1210311	0					
ANR	1210413	Argument	fp		1210311	1					
ANR	1210414	Identifier	fp		1210311	0					
ANR	1210415	ElseStatement	else		1210311	0					
ANR	1210416	IfStatement	if ( e -> back_num == 1 )		1210311	0					
ANR	1210417	Condition	e -> back_num == 1	606:15:13874:13889	1210311	0	True				
ANR	1210418	EqualityExpression	e -> back_num == 1		1210311	0		==			
ANR	1210419	PtrMemberAccess	e -> back_num		1210311	0					
ANR	1210420	Identifier	e		1210311	0					
ANR	1210421	Identifier	back_num		1210311	1					
ANR	1210422	PrimaryExpression	1		1210311	1					
ANR	1210423	CompoundStatement		14:33:329:329	1210311	1					
ANR	1210424	ExpressionStatement	"fprintf ( fp , ""%d"" , e -> back_ref1 )"	607:1:13895:13926	1210311	0	True				
ANR	1210425	CallExpression	"fprintf ( fp , ""%d"" , e -> back_ref1 )"		1210311	0					
ANR	1210426	Callee	fprintf		1210311	0					
ANR	1210427	Identifier	fprintf		1210311	0					
ANR	1210428	ArgumentList	fp		1210311	1					
ANR	1210429	Argument	fp		1210311	0					
ANR	1210430	Identifier	fp		1210311	0					
ANR	1210431	Argument	"""%d"""		1210311	1					
ANR	1210432	PrimaryExpression	"""%d"""		1210311	0					
ANR	1210433	Argument	e -> back_ref1		1210311	2					
ANR	1210434	PtrMemberAccess	e -> back_ref1		1210311	0					
ANR	1210435	Identifier	e		1210311	0					
ANR	1210436	Identifier	back_ref1		1210311	1					
ANR	1210437	ElseStatement	else		1210311	0					
ANR	1210438	CompoundStatement		17:11:384:384	1210311	0					
ANR	1210439	ForStatement	for ( j = 0 ; j < e -> back_num ; j ++ )		1210311	0					
ANR	1210440	ForInit	j = 0 ;	610:6:13955:13960	1210311	0	True				
ANR	1210441	AssignmentExpression	j = 0		1210311	0		=			
ANR	1210442	Identifier	j		1210311	0					
ANR	1210443	PrimaryExpression	0		1210311	1					
ANR	1210444	Condition	j < e -> back_num	610:13:13962:13976	1210311	1	True				
ANR	1210445	RelationalExpression	j < e -> back_num		1210311	0		<			
ANR	1210446	Identifier	j		1210311	0					
ANR	1210447	PtrMemberAccess	e -> back_num		1210311	1					
ANR	1210448	Identifier	e		1210311	0					
ANR	1210449	Identifier	back_num		1210311	1					
ANR	1210450	PostIncDecOperationExpression	j ++	610:30:13979:13981	1210311	2	True				
ANR	1210451	Identifier	j		1210311	0					
ANR	1210452	IncDec	++		1210311	1					
ANR	1210453	CompoundStatement		18:35:421:421	1210311	3					
ANR	1210454	IfStatement	if ( j > 0 )		1210311	0					
ANR	1210455	Condition	j > 0	611:7:13993:13997	1210311	0	True				
ANR	1210456	RelationalExpression	j > 0		1210311	0		>			
ANR	1210457	Identifier	j		1210311	0					
ANR	1210458	PrimaryExpression	0		1210311	1					
ANR	1210459	ExpressionStatement	"fprintf ( fp , "", "" )"	611:14:14000:14017	1210311	1	True				
ANR	1210460	CallExpression	"fprintf ( fp , "", "" )"		1210311	0					
ANR	1210461	Callee	fprintf		1210311	0					
ANR	1210462	Identifier	fprintf		1210311	0					
ANR	1210463	ArgumentList	fp		1210311	1					
ANR	1210464	Argument	fp		1210311	0					
ANR	1210465	Identifier	fp		1210311	0					
ANR	1210466	Argument	""", """		1210311	1					
ANR	1210467	PrimaryExpression	""", """		1210311	0					
ANR	1210468	ExpressionStatement	"fprintf ( fp , ""%d"" , e -> back_refs [ j ] )"	612:3:14022:14056	1210311	1	True				
ANR	1210469	CallExpression	"fprintf ( fp , ""%d"" , e -> back_refs [ j ] )"		1210311	0					
ANR	1210470	Callee	fprintf		1210311	0					
ANR	1210471	Identifier	fprintf		1210311	0					
ANR	1210472	ArgumentList	fp		1210311	1					
ANR	1210473	Argument	fp		1210311	0					
ANR	1210474	Identifier	fp		1210311	0					
ANR	1210475	Argument	"""%d"""		1210311	1					
ANR	1210476	PrimaryExpression	"""%d"""		1210311	0					
ANR	1210477	Argument	e -> back_refs [ j ]		1210311	2					
ANR	1210478	ArrayIndexing	e -> back_refs [ j ]		1210311	0					
ANR	1210479	PtrMemberAccess	e -> back_refs		1210311	0					
ANR	1210480	Identifier	e		1210311	0					
ANR	1210481	Identifier	back_refs		1210311	1					
ANR	1210482	Identifier	j		1210311	1					
ANR	1210483	ExpressionStatement	"fputs ( ""\\n"" , fp )"	615:6:14075:14090	1210311	3	True				
ANR	1210484	CallExpression	"fputs ( ""\\n"" , fp )"		1210311	0					
ANR	1210485	Callee	fputs		1210311	0					
ANR	1210486	Identifier	fputs		1210311	0					
ANR	1210487	ArgumentList	"""\\n"""		1210311	1					
ANR	1210488	Argument	"""\\n"""		1210311	0					
ANR	1210489	PrimaryExpression	"""\\n"""		1210311	0					
ANR	1210490	Argument	fp		1210311	1					
ANR	1210491	Identifier	fp		1210311	0					
ANR	1210492	ExpressionStatement	"fputs ( ""\\n"" , fp )"	617:4:14102:14117	1210311	2	True				
ANR	1210493	CallExpression	"fputs ( ""\\n"" , fp )"		1210311	0					
ANR	1210494	Callee	fputs		1210311	0					
ANR	1210495	Identifier	fputs		1210311	0					
ANR	1210496	ArgumentList	"""\\n"""		1210311	1					
ANR	1210497	Argument	"""\\n"""		1210311	0					
ANR	1210498	PrimaryExpression	"""\\n"""		1210311	0					
ANR	1210499	Argument	fp		1210311	1					
ANR	1210500	Identifier	fp		1210311	0					
ANR	1210501	ReturnStatement	return 0 ;	619:2:14125:14133	1210311	4	True				
ANR	1210502	PrimaryExpression	0		1210311	0					
ANR	1210503	ReturnType	extern int		1210311	1					
ANR	1210504	Identifier	onig_print_names		1210311	2					
ANR	1210505	ParameterList	"FILE * fp , regex_t * reg"		1210311	3					
ANR	1210506	Parameter	FILE * fp	592:17:13538:13545	1210311	0	True				
ANR	1210507	ParameterType	FILE *		1210311	0					
ANR	1210508	Identifier	fp		1210311	1					
ANR	1210509	Parameter	regex_t * reg	592:27:13548:13559	1210311	1	True				
ANR	1210510	ParameterType	regex_t *		1210311	0					
ANR	1210511	Identifier	reg		1210311	1					
ANR	1210512	CFGEntryNode	ENTRY		1210311		True				
ANR	1210513	CFGExitNode	EXIT		1210311		True				
ANR	1210514	Symbol	IS_NOT_NULL		1210311						
ANR	1210515	Symbol	e -> back_ref1		1210311						
ANR	1210516	Symbol	e -> back_num		1210311						
ANR	1210517	Symbol	e -> back_refs		1210311						
ANR	1210518	Symbol	e		1210311						
ANR	1210519	Symbol	* e -> back_refs		1210311						
ANR	1210520	Symbol	* * e		1210311						
ANR	1210521	Symbol	reg -> name_table		1210311						
ANR	1210522	Symbol	t -> e		1210311						
ANR	1210523	Symbol	i		1210311						
ANR	1210524	Symbol	fp		1210311						
ANR	1210525	Symbol	j		1210311						
ANR	1210526	Symbol	* e		1210311						
ANR	1210527	Symbol	t -> num		1210311						
ANR	1210528	Symbol	t		1210311						
ANR	1210529	Symbol	* j		1210311						
ANR	1210530	Symbol	reg		1210311						
ANR	1210531	Symbol	* reg		1210311						
ANR	1210532	Symbol	* t		1210311						
ANR	1210533	Symbol	e -> name		1210311						
ANR	1210534	Function	names_clear	623:0:14145:14673							
ANR	1210535	FunctionDef	names_clear (regex_t * reg)		1210534	0					
ANR	1210536	CompoundStatement		625:0:14182:14673	1210534	0					
ANR	1210537	IdentifierDeclStatement	int i ;	626:2:14186:14191	1210534	0	True				
ANR	1210538	IdentifierDecl	i		1210534	0					
ANR	1210539	IdentifierDeclType	int		1210534	0					
ANR	1210540	Identifier	i		1210534	1					
ANR	1210541	IdentifierDeclStatement	NameEntry * e ;	627:2:14195:14207	1210534	1	True				
ANR	1210542	IdentifierDecl	* e		1210534	0					
ANR	1210543	IdentifierDeclType	NameEntry *		1210534	0					
ANR	1210544	Identifier	e		1210534	1					
ANR	1210545	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	628:2:14211:14254	1210534	2	True				
ANR	1210546	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		1210534	0					
ANR	1210547	IdentifierDeclType	NameTable *		1210534	0					
ANR	1210548	Identifier	t		1210534	1					
ANR	1210549	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		1210534	2		=			
ANR	1210550	Identifier	t		1210534	0					
ANR	1210551	CastExpression	( NameTable * ) reg -> name_table		1210534	1					
ANR	1210552	CastTarget	NameTable *		1210534	0					
ANR	1210553	PtrMemberAccess	reg -> name_table		1210534	1					
ANR	1210554	Identifier	reg		1210534	0					
ANR	1210555	Identifier	name_table		1210534	1					
ANR	1210556	IfStatement	if ( IS_NOT_NULL ( t ) )		1210534	3					
ANR	1210557	Condition	IS_NOT_NULL ( t )	630:6:14263:14276	1210534	0	True				
ANR	1210558	CallExpression	IS_NOT_NULL ( t )		1210534	0					
ANR	1210559	Callee	IS_NOT_NULL		1210534	0					
ANR	1210560	Identifier	IS_NOT_NULL		1210534	0					
ANR	1210561	ArgumentList	t		1210534	1					
ANR	1210562	Argument	t		1210534	0					
ANR	1210563	Identifier	t		1210534	0					
ANR	1210564	CompoundStatement		6:22:96:96	1210534	1					
ANR	1210565	ForStatement	for ( i = 0 ; i < t -> num ; i ++ )		1210534	0					
ANR	1210566	ForInit	i = 0 ;	631:9:14290:14295	1210534	0	True				
ANR	1210567	AssignmentExpression	i = 0		1210534	0		=			
ANR	1210568	Identifier	i		1210534	0					
ANR	1210569	PrimaryExpression	0		1210534	1					
ANR	1210570	Condition	i < t -> num	631:16:14297:14306	1210534	1	True				
ANR	1210571	RelationalExpression	i < t -> num		1210534	0		<			
ANR	1210572	Identifier	i		1210534	0					
ANR	1210573	PtrMemberAccess	t -> num		1210534	1					
ANR	1210574	Identifier	t		1210534	0					
ANR	1210575	Identifier	num		1210534	1					
ANR	1210576	PostIncDecOperationExpression	i ++	631:28:14309:14311	1210534	2	True				
ANR	1210577	Identifier	i		1210534	0					
ANR	1210578	IncDec	++		1210534	1					
ANR	1210579	CompoundStatement		7:33:131:131	1210534	3					
ANR	1210580	ExpressionStatement	e = & ( t -> e [ i ] )	632:6:14322:14336	1210534	0	True				
ANR	1210581	AssignmentExpression	e = & ( t -> e [ i ] )		1210534	0		=			
ANR	1210582	Identifier	e		1210534	0					
ANR	1210583	UnaryOperationExpression	& ( t -> e [ i ] )		1210534	1					
ANR	1210584	UnaryOperator	&		1210534	0					
ANR	1210585	ArrayIndexing	t -> e [ i ]		1210534	1					
ANR	1210586	PtrMemberAccess	t -> e		1210534	0					
ANR	1210587	Identifier	t		1210534	0					
ANR	1210588	Identifier	e		1210534	1					
ANR	1210589	Identifier	i		1210534	1					
ANR	1210590	IfStatement	if ( IS_NOT_NULL ( e -> name ) )		1210534	1					
ANR	1210591	Condition	IS_NOT_NULL ( e -> name )	633:10:14348:14367	1210534	0	True				
ANR	1210592	CallExpression	IS_NOT_NULL ( e -> name )		1210534	0					
ANR	1210593	Callee	IS_NOT_NULL		1210534	0					
ANR	1210594	Identifier	IS_NOT_NULL		1210534	0					
ANR	1210595	ArgumentList	e -> name		1210534	1					
ANR	1210596	Argument	e -> name		1210534	0					
ANR	1210597	PtrMemberAccess	e -> name		1210534	0					
ANR	1210598	Identifier	e		1210534	0					
ANR	1210599	Identifier	name		1210534	1					
ANR	1210600	CompoundStatement		9:32:187:187	1210534	1					
ANR	1210601	ExpressionStatement	xfree ( e -> name )	634:1:14373:14387	1210534	0	True				
ANR	1210602	CallExpression	xfree ( e -> name )		1210534	0					
ANR	1210603	Callee	xfree		1210534	0					
ANR	1210604	Identifier	xfree		1210534	0					
ANR	1210605	ArgumentList	e -> name		1210534	1					
ANR	1210606	Argument	e -> name		1210534	0					
ANR	1210607	PtrMemberAccess	e -> name		1210534	0					
ANR	1210608	Identifier	e		1210534	0					
ANR	1210609	Identifier	name		1210534	1					
ANR	1210610	ExpressionStatement	e -> name = NULL	635:1:14390:14410	1210534	1	True				
ANR	1210611	AssignmentExpression	e -> name = NULL		1210534	0		=			
ANR	1210612	PtrMemberAccess	e -> name		1210534	0					
ANR	1210613	Identifier	e		1210534	0					
ANR	1210614	Identifier	name		1210534	1					
ANR	1210615	Identifier	NULL		1210534	1					
ANR	1210616	ExpressionStatement	e -> name_len = 0	636:1:14413:14430	1210534	2	True				
ANR	1210617	AssignmentExpression	e -> name_len = 0		1210534	0		=			
ANR	1210618	PtrMemberAccess	e -> name_len		1210534	0					
ANR	1210619	Identifier	e		1210534	0					
ANR	1210620	Identifier	name_len		1210534	1					
ANR	1210621	PrimaryExpression	0		1210534	1					
ANR	1210622	ExpressionStatement	e -> back_num = 0	637:1:14433:14450	1210534	3	True				
ANR	1210623	AssignmentExpression	e -> back_num = 0		1210534	0		=			
ANR	1210624	PtrMemberAccess	e -> back_num		1210534	0					
ANR	1210625	Identifier	e		1210534	0					
ANR	1210626	Identifier	back_num		1210534	1					
ANR	1210627	PrimaryExpression	0		1210534	1					
ANR	1210628	ExpressionStatement	e -> back_alloc = 0	638:1:14453:14470	1210534	4	True				
ANR	1210629	AssignmentExpression	e -> back_alloc = 0		1210534	0		=			
ANR	1210630	PtrMemberAccess	e -> back_alloc		1210534	0					
ANR	1210631	Identifier	e		1210534	0					
ANR	1210632	Identifier	back_alloc		1210534	1					
ANR	1210633	PrimaryExpression	0		1210534	1					
ANR	1210634	IfStatement	if ( IS_NOT_NULL ( e -> back_refs ) )		1210534	5					
ANR	1210635	Condition	IS_NOT_NULL ( e -> back_refs )	639:5:14477:14501	1210534	0	True				
ANR	1210636	CallExpression	IS_NOT_NULL ( e -> back_refs )		1210534	0					
ANR	1210637	Callee	IS_NOT_NULL		1210534	0					
ANR	1210638	Identifier	IS_NOT_NULL		1210534	0					
ANR	1210639	ArgumentList	e -> back_refs		1210534	1					
ANR	1210640	Argument	e -> back_refs		1210534	0					
ANR	1210641	PtrMemberAccess	e -> back_refs		1210534	0					
ANR	1210642	Identifier	e		1210534	0					
ANR	1210643	Identifier	back_refs		1210534	1					
ANR	1210644	ExpressionStatement	xfree ( e -> back_refs )	639:32:14504:14523	1210534	1	True				
ANR	1210645	CallExpression	xfree ( e -> back_refs )		1210534	0					
ANR	1210646	Callee	xfree		1210534	0					
ANR	1210647	Identifier	xfree		1210534	0					
ANR	1210648	ArgumentList	e -> back_refs		1210534	1					
ANR	1210649	Argument	e -> back_refs		1210534	0					
ANR	1210650	PtrMemberAccess	e -> back_refs		1210534	0					
ANR	1210651	Identifier	e		1210534	0					
ANR	1210652	Identifier	back_refs		1210534	1					
ANR	1210653	ExpressionStatement	e -> back_refs = ( int * ) NULL	640:1:14526:14552	1210534	6	True				
ANR	1210654	AssignmentExpression	e -> back_refs = ( int * ) NULL		1210534	0		=			
ANR	1210655	PtrMemberAccess	e -> back_refs		1210534	0					
ANR	1210656	Identifier	e		1210534	0					
ANR	1210657	Identifier	back_refs		1210534	1					
ANR	1210658	CastExpression	( int * ) NULL		1210534	1					
ANR	1210659	CastTarget	int *		1210534	0					
ANR	1210660	Identifier	NULL		1210534	1					
ANR	1210661	IfStatement	if ( IS_NOT_NULL ( t -> e ) )		1210534	1					
ANR	1210662	Condition	IS_NOT_NULL ( t -> e )	643:8:14576:14592	1210534	0	True				
ANR	1210663	CallExpression	IS_NOT_NULL ( t -> e )		1210534	0					
ANR	1210664	Callee	IS_NOT_NULL		1210534	0					
ANR	1210665	Identifier	IS_NOT_NULL		1210534	0					
ANR	1210666	ArgumentList	t -> e		1210534	1					
ANR	1210667	Argument	t -> e		1210534	0					
ANR	1210668	PtrMemberAccess	t -> e		1210534	0					
ANR	1210669	Identifier	t		1210534	0					
ANR	1210670	Identifier	e		1210534	1					
ANR	1210671	CompoundStatement		19:27:412:412	1210534	1					
ANR	1210672	ExpressionStatement	xfree ( t -> e )	644:6:14603:14614	1210534	0	True				
ANR	1210673	CallExpression	xfree ( t -> e )		1210534	0					
ANR	1210674	Callee	xfree		1210534	0					
ANR	1210675	Identifier	xfree		1210534	0					
ANR	1210676	ArgumentList	t -> e		1210534	1					
ANR	1210677	Argument	t -> e		1210534	0					
ANR	1210678	PtrMemberAccess	t -> e		1210534	0					
ANR	1210679	Identifier	t		1210534	0					
ANR	1210680	Identifier	e		1210534	1					
ANR	1210681	ExpressionStatement	t -> e = NULL	645:6:14622:14633	1210534	1	True				
ANR	1210682	AssignmentExpression	t -> e = NULL		1210534	0		=			
ANR	1210683	PtrMemberAccess	t -> e		1210534	0					
ANR	1210684	Identifier	t		1210534	0					
ANR	1210685	Identifier	e		1210534	1					
ANR	1210686	Identifier	NULL		1210534	1					
ANR	1210687	ExpressionStatement	t -> num = 0	647:4:14645:14655	1210534	2	True				
ANR	1210688	AssignmentExpression	t -> num = 0		1210534	0		=			
ANR	1210689	PtrMemberAccess	t -> num		1210534	0					
ANR	1210690	Identifier	t		1210534	0					
ANR	1210691	Identifier	num		1210534	1					
ANR	1210692	PrimaryExpression	0		1210534	1					
ANR	1210693	ReturnStatement	return 0 ;	649:2:14663:14671	1210534	4	True				
ANR	1210694	PrimaryExpression	0		1210534	0					
ANR	1210695	ReturnType	static int		1210534	1					
ANR	1210696	Identifier	names_clear		1210534	2					
ANR	1210697	ParameterList	regex_t * reg		1210534	3					
ANR	1210698	Parameter	regex_t * reg	624:12:14168:14179	1210534	0	True				
ANR	1210699	ParameterType	regex_t *		1210534	0					
ANR	1210700	Identifier	reg		1210534	1					
ANR	1210701	CFGEntryNode	ENTRY		1210534		True				
ANR	1210702	CFGExitNode	EXIT		1210534		True				
ANR	1210703	Symbol	IS_NOT_NULL		1210534						
ANR	1210704	Symbol	NULL		1210534						
ANR	1210705	Symbol	e -> back_num		1210534						
ANR	1210706	Symbol	e -> back_refs		1210534						
ANR	1210707	Symbol	e		1210534						
ANR	1210708	Symbol	reg -> name_table		1210534						
ANR	1210709	Symbol	t -> e		1210534						
ANR	1210710	Symbol	i		1210534						
ANR	1210711	Symbol	* e		1210534						
ANR	1210712	Symbol	t -> num		1210534						
ANR	1210713	Symbol	t		1210534						
ANR	1210714	Symbol	reg		1210534						
ANR	1210715	Symbol	* reg		1210534						
ANR	1210716	Symbol	* t		1210534						
ANR	1210717	Symbol	e -> back_alloc		1210534						
ANR	1210718	Symbol	e -> name		1210534						
ANR	1210719	Symbol	e -> name_len		1210534						
ANR	1210720	Function	onig_names_free	652:0:14676:14895							
ANR	1210721	FunctionDef	onig_names_free (regex_t * reg)		1210720	0					
ANR	1210722	CompoundStatement		654:0:14717:14895	1210720	0					
ANR	1210723	IdentifierDeclStatement	int r ;	655:2:14721:14726	1210720	0	True				
ANR	1210724	IdentifierDecl	r		1210720	0					
ANR	1210725	IdentifierDeclType	int		1210720	0					
ANR	1210726	Identifier	r		1210720	1					
ANR	1210727	IdentifierDeclStatement	NameTable * t ;	656:2:14730:14742	1210720	1	True				
ANR	1210728	IdentifierDecl	* t		1210720	0					
ANR	1210729	IdentifierDeclType	NameTable *		1210720	0					
ANR	1210730	Identifier	t		1210720	1					
ANR	1210731	ExpressionStatement	r = names_clear ( reg )	658:2:14747:14767	1210720	2	True				
ANR	1210732	AssignmentExpression	r = names_clear ( reg )		1210720	0		=			
ANR	1210733	Identifier	r		1210720	0					
ANR	1210734	CallExpression	names_clear ( reg )		1210720	1					
ANR	1210735	Callee	names_clear		1210720	0					
ANR	1210736	Identifier	names_clear		1210720	0					
ANR	1210737	ArgumentList	reg		1210720	1					
ANR	1210738	Argument	reg		1210720	0					
ANR	1210739	Identifier	reg		1210720	0					
ANR	1210740	IfStatement	if ( r )		1210720	3					
ANR	1210741	Condition	r	659:6:14775:14775	1210720	0	True				
ANR	1210742	Identifier	r		1210720	0					
ANR	1210743	ReturnStatement	return r ;	659:9:14778:14786	1210720	1	True				
ANR	1210744	Identifier	r		1210720	0					
ANR	1210745	ExpressionStatement	t = ( NameTable * ) reg -> name_table	661:2:14791:14823	1210720	4	True				
ANR	1210746	AssignmentExpression	t = ( NameTable * ) reg -> name_table		1210720	0		=			
ANR	1210747	Identifier	t		1210720	0					
ANR	1210748	CastExpression	( NameTable * ) reg -> name_table		1210720	1					
ANR	1210749	CastTarget	NameTable *		1210720	0					
ANR	1210750	PtrMemberAccess	reg -> name_table		1210720	1					
ANR	1210751	Identifier	reg		1210720	0					
ANR	1210752	Identifier	name_table		1210720	1					
ANR	1210753	IfStatement	if ( IS_NOT_NULL ( t ) )		1210720	5					
ANR	1210754	Condition	IS_NOT_NULL ( t )	662:6:14831:14844	1210720	0	True				
ANR	1210755	CallExpression	IS_NOT_NULL ( t )		1210720	0					
ANR	1210756	Callee	IS_NOT_NULL		1210720	0					
ANR	1210757	Identifier	IS_NOT_NULL		1210720	0					
ANR	1210758	ArgumentList	t		1210720	1					
ANR	1210759	Argument	t		1210720	0					
ANR	1210760	Identifier	t		1210720	0					
ANR	1210761	ExpressionStatement	xfree ( t )	662:22:14847:14855	1210720	1	True				
ANR	1210762	CallExpression	xfree ( t )		1210720	0					
ANR	1210763	Callee	xfree		1210720	0					
ANR	1210764	Identifier	xfree		1210720	0					
ANR	1210765	ArgumentList	t		1210720	1					
ANR	1210766	Argument	t		1210720	0					
ANR	1210767	Identifier	t		1210720	0					
ANR	1210768	ExpressionStatement	reg -> name_table = NULL	663:2:14859:14881	1210720	6	True				
ANR	1210769	AssignmentExpression	reg -> name_table = NULL		1210720	0		=			
ANR	1210770	PtrMemberAccess	reg -> name_table		1210720	0					
ANR	1210771	Identifier	reg		1210720	0					
ANR	1210772	Identifier	name_table		1210720	1					
ANR	1210773	Identifier	NULL		1210720	1					
ANR	1210774	ReturnStatement	return 0 ;	664:2:14885:14893	1210720	7	True				
ANR	1210775	PrimaryExpression	0		1210720	0					
ANR	1210776	ReturnType	extern int		1210720	1					
ANR	1210777	Identifier	onig_names_free		1210720	2					
ANR	1210778	ParameterList	regex_t * reg		1210720	3					
ANR	1210779	Parameter	regex_t * reg	653:16:14703:14714	1210720	0	True				
ANR	1210780	ParameterType	regex_t *		1210720	0					
ANR	1210781	Identifier	reg		1210720	1					
ANR	1210782	CFGEntryNode	ENTRY		1210720		True				
ANR	1210783	CFGExitNode	EXIT		1210720		True				
ANR	1210784	Symbol	r		1210720						
ANR	1210785	Symbol	IS_NOT_NULL		1210720						
ANR	1210786	Symbol	NULL		1210720						
ANR	1210787	Symbol	t		1210720						
ANR	1210788	Symbol	reg		1210720						
ANR	1210789	Symbol	names_clear		1210720						
ANR	1210790	Symbol	reg -> name_table		1210720						
ANR	1210791	Symbol	* reg		1210720						
ANR	1210792	Function	name_find	667:0:14898:15278							
ANR	1210793	FunctionDef	"name_find (regex_t * reg , UChar * name , UChar * name_end)"		1210792	0					
ANR	1210794	CompoundStatement		669:0:14970:15278	1210792	0					
ANR	1210795	IdentifierDeclStatement	"int i , len ;"	670:2:14974:14984	1210792	0	True				
ANR	1210796	IdentifierDecl	i		1210792	0					
ANR	1210797	IdentifierDeclType	int		1210792	0					
ANR	1210798	Identifier	i		1210792	1					
ANR	1210799	IdentifierDecl	len		1210792	1					
ANR	1210800	IdentifierDeclType	int		1210792	0					
ANR	1210801	Identifier	len		1210792	1					
ANR	1210802	IdentifierDeclStatement	NameEntry * e ;	671:2:14988:15000	1210792	1	True				
ANR	1210803	IdentifierDecl	* e		1210792	0					
ANR	1210804	IdentifierDeclType	NameEntry *		1210792	0					
ANR	1210805	Identifier	e		1210792	1					
ANR	1210806	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	672:2:15004:15047	1210792	2	True				
ANR	1210807	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		1210792	0					
ANR	1210808	IdentifierDeclType	NameTable *		1210792	0					
ANR	1210809	Identifier	t		1210792	1					
ANR	1210810	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		1210792	2		=			
ANR	1210811	Identifier	t		1210792	0					
ANR	1210812	CastExpression	( NameTable * ) reg -> name_table		1210792	1					
ANR	1210813	CastTarget	NameTable *		1210792	0					
ANR	1210814	PtrMemberAccess	reg -> name_table		1210792	1					
ANR	1210815	Identifier	reg		1210792	0					
ANR	1210816	Identifier	name_table		1210792	1					
ANR	1210817	IfStatement	if ( IS_NOT_NULL ( t ) )		1210792	3					
ANR	1210818	Condition	IS_NOT_NULL ( t )	674:6:15056:15069	1210792	0	True				
ANR	1210819	CallExpression	IS_NOT_NULL ( t )		1210792	0					
ANR	1210820	Callee	IS_NOT_NULL		1210792	0					
ANR	1210821	Identifier	IS_NOT_NULL		1210792	0					
ANR	1210822	ArgumentList	t		1210792	1					
ANR	1210823	Argument	t		1210792	0					
ANR	1210824	Identifier	t		1210792	0					
ANR	1210825	CompoundStatement		6:22:101:101	1210792	1					
ANR	1210826	ExpressionStatement	len = name_end - name	675:4:15078:15099	1210792	0	True				
ANR	1210827	AssignmentExpression	len = name_end - name		1210792	0		=			
ANR	1210828	Identifier	len		1210792	0					
ANR	1210829	AdditiveExpression	name_end - name		1210792	1		-			
ANR	1210830	Identifier	name_end		1210792	0					
ANR	1210831	Identifier	name		1210792	1					
ANR	1210832	ForStatement	for ( i = 0 ; i < t -> num ; i ++ )		1210792	1					
ANR	1210833	ForInit	i = 0 ;	676:9:15110:15115	1210792	0	True				
ANR	1210834	AssignmentExpression	i = 0		1210792	0		=			
ANR	1210835	Identifier	i		1210792	0					
ANR	1210836	PrimaryExpression	0		1210792	1					
ANR	1210837	Condition	i < t -> num	676:16:15117:15126	1210792	1	True				
ANR	1210838	RelationalExpression	i < t -> num		1210792	0		<			
ANR	1210839	Identifier	i		1210792	0					
ANR	1210840	PtrMemberAccess	t -> num		1210792	1					
ANR	1210841	Identifier	t		1210792	0					
ANR	1210842	Identifier	num		1210792	1					
ANR	1210843	PostIncDecOperationExpression	i ++	676:28:15129:15131	1210792	2	True				
ANR	1210844	Identifier	i		1210792	0					
ANR	1210845	IncDec	++		1210792	1					
ANR	1210846	CompoundStatement		8:33:163:163	1210792	3					
ANR	1210847	ExpressionStatement	e = & ( t -> e [ i ] )	677:6:15142:15156	1210792	0	True				
ANR	1210848	AssignmentExpression	e = & ( t -> e [ i ] )		1210792	0		=			
ANR	1210849	Identifier	e		1210792	0					
ANR	1210850	UnaryOperationExpression	& ( t -> e [ i ] )		1210792	1					
ANR	1210851	UnaryOperator	&		1210792	0					
ANR	1210852	ArrayIndexing	t -> e [ i ]		1210792	1					
ANR	1210853	PtrMemberAccess	t -> e		1210792	0					
ANR	1210854	Identifier	t		1210792	0					
ANR	1210855	Identifier	e		1210792	1					
ANR	1210856	Identifier	i		1210792	1					
ANR	1210857	IfStatement	"if ( len == e -> name_len && onig_strncmp ( name , e -> name , len ) == 0 )"		1210792	1					
ANR	1210858	Condition	"len == e -> name_len && onig_strncmp ( name , e -> name , len ) == 0"	678:10:15168:15226	1210792	0	True				
ANR	1210859	AndExpression	"len == e -> name_len && onig_strncmp ( name , e -> name , len ) == 0"		1210792	0		&&			
ANR	1210860	EqualityExpression	len == e -> name_len		1210792	0		==			
ANR	1210861	Identifier	len		1210792	0					
ANR	1210862	PtrMemberAccess	e -> name_len		1210792	1					
ANR	1210863	Identifier	e		1210792	0					
ANR	1210864	Identifier	name_len		1210792	1					
ANR	1210865	EqualityExpression	"onig_strncmp ( name , e -> name , len ) == 0"		1210792	1		==			
ANR	1210866	CallExpression	"onig_strncmp ( name , e -> name , len )"		1210792	0					
ANR	1210867	Callee	onig_strncmp		1210792	0					
ANR	1210868	Identifier	onig_strncmp		1210792	0					
ANR	1210869	ArgumentList	name		1210792	1					
ANR	1210870	Argument	name		1210792	0					
ANR	1210871	Identifier	name		1210792	0					
ANR	1210872	Argument	e -> name		1210792	1					
ANR	1210873	PtrMemberAccess	e -> name		1210792	0					
ANR	1210874	Identifier	e		1210792	0					
ANR	1210875	Identifier	name		1210792	1					
ANR	1210876	Argument	len		1210792	2					
ANR	1210877	Identifier	len		1210792	0					
ANR	1210878	PrimaryExpression	0		1210792	1					
ANR	1210879	ReturnStatement	return e ;	679:1:15230:15238	1210792	1	True				
ANR	1210880	Identifier	e		1210792	0					
ANR	1210881	ReturnStatement	return ( NameEntry * ) NULL ;	682:2:15252:15276	1210792	4	True				
ANR	1210882	CastExpression	( NameEntry * ) NULL		1210792	0					
ANR	1210883	CastTarget	NameEntry *		1210792	0					
ANR	1210884	Identifier	NULL		1210792	1					
ANR	1210885	ReturnType	static NameEntry *		1210792	1					
ANR	1210886	Identifier	name_find		1210792	2					
ANR	1210887	ParameterList	"regex_t * reg , UChar * name , UChar * name_end"		1210792	3					
ANR	1210888	Parameter	regex_t * reg	668:10:14926:14937	1210792	0	True				
ANR	1210889	ParameterType	regex_t *		1210792	0					
ANR	1210890	Identifier	reg		1210792	1					
ANR	1210891	Parameter	UChar * name	668:24:14940:14950	1210792	1	True				
ANR	1210892	ParameterType	UChar *		1210792	0					
ANR	1210893	Identifier	name		1210792	1					
ANR	1210894	Parameter	UChar * name_end	668:37:14953:14967	1210792	2	True				
ANR	1210895	ParameterType	UChar *		1210792	0					
ANR	1210896	Identifier	name_end		1210792	1					
ANR	1210897	CFGEntryNode	ENTRY		1210792		True				
ANR	1210898	CFGExitNode	EXIT		1210792		True				
ANR	1210899	Symbol	IS_NOT_NULL		1210792						
ANR	1210900	Symbol	NULL		1210792						
ANR	1210901	Symbol	e		1210792						
ANR	1210902	Symbol	reg -> name_table		1210792						
ANR	1210903	Symbol	t -> e		1210792						
ANR	1210904	Symbol	i		1210792						
ANR	1210905	Symbol	* e		1210792						
ANR	1210906	Symbol	t -> num		1210792						
ANR	1210907	Symbol	len		1210792						
ANR	1210908	Symbol	t		1210792						
ANR	1210909	Symbol	reg		1210792						
ANR	1210910	Symbol	name		1210792						
ANR	1210911	Symbol	onig_strncmp		1210792						
ANR	1210912	Symbol	name_end		1210792						
ANR	1210913	Symbol	* reg		1210792						
ANR	1210914	Symbol	* t		1210792						
ANR	1210915	Symbol	e -> name		1210792						
ANR	1210916	Symbol	e -> name_len		1210792						
ANR	1210917	Function	onig_foreach_name	685:0:15281:15745							
ANR	1210918	FunctionDef	"onig_foreach_name (regex_t * reg , int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * ) , void * arg)"		1210917	0					
ANR	1210919	CompoundStatement		688:0:15402:15745	1210917	0					
ANR	1210920	IdentifierDeclStatement	"int i , r ;"	689:2:15406:15414	1210917	0	True				
ANR	1210921	IdentifierDecl	i		1210917	0					
ANR	1210922	IdentifierDeclType	int		1210917	0					
ANR	1210923	Identifier	i		1210917	1					
ANR	1210924	IdentifierDecl	r		1210917	1					
ANR	1210925	IdentifierDeclType	int		1210917	0					
ANR	1210926	Identifier	r		1210917	1					
ANR	1210927	IdentifierDeclStatement	NameEntry * e ;	690:2:15418:15430	1210917	1	True				
ANR	1210928	IdentifierDecl	* e		1210917	0					
ANR	1210929	IdentifierDeclType	NameEntry *		1210917	0					
ANR	1210930	Identifier	e		1210917	1					
ANR	1210931	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	691:2:15434:15477	1210917	2	True				
ANR	1210932	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		1210917	0					
ANR	1210933	IdentifierDeclType	NameTable *		1210917	0					
ANR	1210934	Identifier	t		1210917	1					
ANR	1210935	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		1210917	2		=			
ANR	1210936	Identifier	t		1210917	0					
ANR	1210937	CastExpression	( NameTable * ) reg -> name_table		1210917	1					
ANR	1210938	CastTarget	NameTable *		1210917	0					
ANR	1210939	PtrMemberAccess	reg -> name_table		1210917	1					
ANR	1210940	Identifier	reg		1210917	0					
ANR	1210941	Identifier	name_table		1210917	1					
ANR	1210942	IfStatement	if ( IS_NOT_NULL ( t ) )		1210917	3					
ANR	1210943	Condition	IS_NOT_NULL ( t )	693:6:15486:15499	1210917	0	True				
ANR	1210944	CallExpression	IS_NOT_NULL ( t )		1210917	0					
ANR	1210945	Callee	IS_NOT_NULL		1210917	0					
ANR	1210946	Identifier	IS_NOT_NULL		1210917	0					
ANR	1210947	ArgumentList	t		1210917	1					
ANR	1210948	Argument	t		1210917	0					
ANR	1210949	Identifier	t		1210917	0					
ANR	1210950	CompoundStatement		6:22:99:99	1210917	1					
ANR	1210951	ForStatement	for ( i = 0 ; i < t -> num ; i ++ )		1210917	0					
ANR	1210952	ForInit	i = 0 ;	694:9:15513:15518	1210917	0	True				
ANR	1210953	AssignmentExpression	i = 0		1210917	0		=			
ANR	1210954	Identifier	i		1210917	0					
ANR	1210955	PrimaryExpression	0		1210917	1					
ANR	1210956	Condition	i < t -> num	694:16:15520:15529	1210917	1	True				
ANR	1210957	RelationalExpression	i < t -> num		1210917	0		<			
ANR	1210958	Identifier	i		1210917	0					
ANR	1210959	PtrMemberAccess	t -> num		1210917	1					
ANR	1210960	Identifier	t		1210917	0					
ANR	1210961	Identifier	num		1210917	1					
ANR	1210962	PostIncDecOperationExpression	i ++	694:28:15532:15534	1210917	2	True				
ANR	1210963	Identifier	i		1210917	0					
ANR	1210964	IncDec	++		1210917	1					
ANR	1210965	CompoundStatement		7:33:134:134	1210917	3					
ANR	1210966	ExpressionStatement	e = & ( t -> e [ i ] )	695:6:15545:15559	1210917	0	True				
ANR	1210967	AssignmentExpression	e = & ( t -> e [ i ] )		1210917	0		=			
ANR	1210968	Identifier	e		1210917	0					
ANR	1210969	UnaryOperationExpression	& ( t -> e [ i ] )		1210917	1					
ANR	1210970	UnaryOperator	&		1210917	0					
ANR	1210971	ArrayIndexing	t -> e [ i ]		1210917	1					
ANR	1210972	PtrMemberAccess	t -> e		1210917	0					
ANR	1210973	Identifier	t		1210917	0					
ANR	1210974	Identifier	e		1210917	1					
ANR	1210975	Identifier	i		1210917	1					
ANR	1210976	ExpressionStatement	"r = ( * func ) ( e -> name , e -> name + e -> name_len , e -> back_num , ( e -> back_num > 1 ? e -> back_refs : & ( e -> back_ref1 ) ) , reg , arg )"	696:6:15567:15693	1210917	1	True				
ANR	1210977	AssignmentExpression	"r = ( * func ) ( e -> name , e -> name + e -> name_len , e -> back_num , ( e -> back_num > 1 ? e -> back_refs : & ( e -> back_ref1 ) ) , reg , arg )"		1210917	0		=			
ANR	1210978	Identifier	r		1210917	0					
ANR	1210979	CallExpression	"( * func ) ( e -> name , e -> name + e -> name_len , e -> back_num , ( e -> back_num > 1 ? e -> back_refs : & ( e -> back_ref1 ) ) , reg , arg )"		1210917	1					
ANR	1210980	Callee	* func		1210917	0					
ANR	1210981	UnaryOperationExpression	* func		1210917	0					
ANR	1210982	UnaryOperator	*		1210917	0					
ANR	1210983	Identifier	func		1210917	1					
ANR	1210984	ArgumentList	e -> name		1210917	1					
ANR	1210985	Argument	e -> name		1210917	0					
ANR	1210986	PtrMemberAccess	e -> name		1210917	0					
ANR	1210987	Identifier	e		1210917	0					
ANR	1210988	Identifier	name		1210917	1					
ANR	1210989	Argument	e -> name + e -> name_len		1210917	1					
ANR	1210990	AdditiveExpression	e -> name + e -> name_len		1210917	0		+			
ANR	1210991	PtrMemberAccess	e -> name		1210917	0					
ANR	1210992	Identifier	e		1210917	0					
ANR	1210993	Identifier	name		1210917	1					
ANR	1210994	PtrMemberAccess	e -> name_len		1210917	1					
ANR	1210995	Identifier	e		1210917	0					
ANR	1210996	Identifier	name_len		1210917	1					
ANR	1210997	Argument	e -> back_num		1210917	2					
ANR	1210998	PtrMemberAccess	e -> back_num		1210917	0					
ANR	1210999	Identifier	e		1210917	0					
ANR	1211000	Identifier	back_num		1210917	1					
ANR	1211001	Argument	e -> back_num > 1 ? e -> back_refs : & ( e -> back_ref1 )		1210917	3					
ANR	1211002	ConditionalExpression	e -> back_num > 1 ? e -> back_refs : & ( e -> back_ref1 )		1210917	0					
ANR	1211003	Condition	e -> back_num > 1		1210917	0					
ANR	1211004	RelationalExpression	e -> back_num > 1		1210917	0		>			
ANR	1211005	PtrMemberAccess	e -> back_num		1210917	0					
ANR	1211006	Identifier	e		1210917	0					
ANR	1211007	Identifier	back_num		1210917	1					
ANR	1211008	PrimaryExpression	1		1210917	1					
ANR	1211009	PtrMemberAccess	e -> back_refs		1210917	1					
ANR	1211010	Identifier	e		1210917	0					
ANR	1211011	Identifier	back_refs		1210917	1					
ANR	1211012	UnaryOperationExpression	& ( e -> back_ref1 )		1210917	2					
ANR	1211013	UnaryOperator	&		1210917	0					
ANR	1211014	PtrMemberAccess	e -> back_ref1		1210917	1					
ANR	1211015	Identifier	e		1210917	0					
ANR	1211016	Identifier	back_ref1		1210917	1					
ANR	1211017	Argument	reg		1210917	4					
ANR	1211018	Identifier	reg		1210917	0					
ANR	1211019	Argument	arg		1210917	5					
ANR	1211020	Identifier	arg		1210917	0					
ANR	1211021	IfStatement	if ( r != 0 )		1210917	2					
ANR	1211022	Condition	r != 0	699:10:15705:15710	1210917	0	True				
ANR	1211023	EqualityExpression	r != 0		1210917	0		!=			
ANR	1211024	Identifier	r		1210917	0					
ANR	1211025	PrimaryExpression	0		1210917	1					
ANR	1211026	ReturnStatement	return r ;	699:18:15713:15721	1210917	1	True				
ANR	1211027	Identifier	r		1210917	0					
ANR	1211028	ReturnStatement	return 0 ;	702:2:15735:15743	1210917	4	True				
ANR	1211029	PrimaryExpression	0		1210917	0					
ANR	1211030	ReturnType	extern int		1210917	1					
ANR	1211031	Identifier	onig_foreach_name		1210917	2					
ANR	1211032	ParameterList	"regex_t * reg , int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * ) , void * arg"		1210917	3					
ANR	1211033	Parameter	regex_t * reg	686:18:15310:15321	1210917	0	True				
ANR	1211034	ParameterType	regex_t *		1210917	0					
ANR	1211035	Identifier	reg		1210917	1					
ANR	1211036	Parameter	"int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * )"	687:2:15326:15388	1210917	1	True				
ANR	1211037	ParameterType	"(( const UChar * , const UChar * , int , int * , regex_t * , void * ) int) *"		1210917	0					
ANR	1211038	Identifier	func		1210917	1					
ANR	1211039	Parameter	void * arg	687:67:15391:15399	1210917	2	True				
ANR	1211040	ParameterType	void *		1210917	0					
ANR	1211041	Identifier	arg		1210917	1					
ANR	1211042	CFGEntryNode	ENTRY		1210917		True				
ANR	1211043	CFGExitNode	EXIT		1210917		True				
ANR	1211044	Symbol	IS_NOT_NULL		1210917						
ANR	1211045	Symbol	e -> back_num		1210917						
ANR	1211046	Symbol	e -> back_refs		1210917						
ANR	1211047	Symbol	* func		1210917						
ANR	1211048	Symbol	e		1210917						
ANR	1211049	Symbol	reg -> name_table		1210917						
ANR	1211050	Symbol	t -> e		1210917						
ANR	1211051	Symbol	i		1210917						
ANR	1211052	Symbol	& e -> back_ref1		1210917						
ANR	1211053	Symbol	* e		1210917						
ANR	1211054	Symbol	t -> num		1210917						
ANR	1211055	Symbol	r		1210917						
ANR	1211056	Symbol	func		1210917						
ANR	1211057	Symbol	t		1210917						
ANR	1211058	Symbol	reg		1210917						
ANR	1211059	Symbol	arg		1210917						
ANR	1211060	Symbol	* reg		1210917						
ANR	1211061	Symbol	* t		1210917						
ANR	1211062	Symbol	e -> name		1210917						
ANR	1211063	Symbol	e -> name_len		1210917						
ANR	1211064	Function	onig_number_of_names	705:0:15748:15906							
ANR	1211065	FunctionDef	onig_number_of_names (regex_t * reg)		1211064	0					
ANR	1211066	CompoundStatement		707:0:15794:15906	1211064	0					
ANR	1211067	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	708:2:15798:15841	1211064	0	True				
ANR	1211068	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		1211064	0					
ANR	1211069	IdentifierDeclType	NameTable *		1211064	0					
ANR	1211070	Identifier	t		1211064	1					
ANR	1211071	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		1211064	2		=			
ANR	1211072	Identifier	t		1211064	0					
ANR	1211073	CastExpression	( NameTable * ) reg -> name_table		1211064	1					
ANR	1211074	CastTarget	NameTable *		1211064	0					
ANR	1211075	PtrMemberAccess	reg -> name_table		1211064	1					
ANR	1211076	Identifier	reg		1211064	0					
ANR	1211077	Identifier	name_table		1211064	1					
ANR	1211078	IfStatement	if ( IS_NOT_NULL ( t ) )		1211064	1					
ANR	1211079	Condition	IS_NOT_NULL ( t )	710:6:15850:15863	1211064	0	True				
ANR	1211080	CallExpression	IS_NOT_NULL ( t )		1211064	0					
ANR	1211081	Callee	IS_NOT_NULL		1211064	0					
ANR	1211082	Identifier	IS_NOT_NULL		1211064	0					
ANR	1211083	ArgumentList	t		1211064	1					
ANR	1211084	Argument	t		1211064	0					
ANR	1211085	Identifier	t		1211064	0					
ANR	1211086	ReturnStatement	return t -> num ;	711:4:15870:15883	1211064	1	True				
ANR	1211087	PtrMemberAccess	t -> num		1211064	0					
ANR	1211088	Identifier	t		1211064	0					
ANR	1211089	Identifier	num		1211064	1					
ANR	1211090	ElseStatement	else		1211064	0					
ANR	1211091	ReturnStatement	return 0 ;	713:4:15896:15904	1211064	0	True				
ANR	1211092	PrimaryExpression	0		1211064	0					
ANR	1211093	ReturnType	extern int		1211064	1					
ANR	1211094	Identifier	onig_number_of_names		1211064	2					
ANR	1211095	ParameterList	regex_t * reg		1211064	3					
ANR	1211096	Parameter	regex_t * reg	706:21:15780:15791	1211064	0	True				
ANR	1211097	ParameterType	regex_t *		1211064	0					
ANR	1211098	Identifier	reg		1211064	1					
ANR	1211099	CFGEntryNode	ENTRY		1211064		True				
ANR	1211100	CFGExitNode	EXIT		1211064		True				
ANR	1211101	Symbol	t -> num		1211064						
ANR	1211102	Symbol	IS_NOT_NULL		1211064						
ANR	1211103	Symbol	t		1211064						
ANR	1211104	Symbol	reg		1211064						
ANR	1211105	Symbol	reg -> name_table		1211064						
ANR	1211106	Symbol	* reg		1211064						
ANR	1211107	Symbol	* t		1211064						
ANR	1211108	Function	name_add	718:0:15943:18757							
ANR	1211109	FunctionDef	"name_add (regex_t * reg , UChar * name , UChar * name_end , int backref , ScanEnv * env)"		1211108	0					
ANR	1211110	CompoundStatement		720:0:16034:18757	1211108	0					
ANR	1211111	IdentifierDeclStatement	int alloc ;	721:2:16038:16047	1211108	0	True				
ANR	1211112	IdentifierDecl	alloc		1211108	0					
ANR	1211113	IdentifierDeclType	int		1211108	0					
ANR	1211114	Identifier	alloc		1211108	1					
ANR	1211115	IdentifierDeclStatement	NameEntry * e ;	722:2:16051:16063	1211108	1	True				
ANR	1211116	IdentifierDecl	* e		1211108	0					
ANR	1211117	IdentifierDeclType	NameEntry *		1211108	0					
ANR	1211118	Identifier	e		1211108	1					
ANR	1211119	IdentifierDeclStatement	NameTable * t = ( NameTable * ) reg -> name_table ;	723:2:16067:16110	1211108	2	True				
ANR	1211120	IdentifierDecl	* t = ( NameTable * ) reg -> name_table		1211108	0					
ANR	1211121	IdentifierDeclType	NameTable *		1211108	0					
ANR	1211122	Identifier	t		1211108	1					
ANR	1211123	AssignmentExpression	* t = ( NameTable * ) reg -> name_table		1211108	2		=			
ANR	1211124	Identifier	t		1211108	0					
ANR	1211125	CastExpression	( NameTable * ) reg -> name_table		1211108	1					
ANR	1211126	CastTarget	NameTable *		1211108	0					
ANR	1211127	PtrMemberAccess	reg -> name_table		1211108	1					
ANR	1211128	Identifier	reg		1211108	0					
ANR	1211129	Identifier	name_table		1211108	1					
ANR	1211130	IfStatement	if ( name_end - name <= 0 )		1211108	3					
ANR	1211131	Condition	name_end - name <= 0	725:6:16119:16138	1211108	0	True				
ANR	1211132	RelationalExpression	name_end - name <= 0		1211108	0		<=			
ANR	1211133	AdditiveExpression	name_end - name		1211108	0		-			
ANR	1211134	Identifier	name_end		1211108	0					
ANR	1211135	Identifier	name		1211108	1					
ANR	1211136	PrimaryExpression	0		1211108	1					
ANR	1211137	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	726:4:16145:16176	1211108	1	True				
ANR	1211138	Identifier	ONIGERR_EMPTY_GROUP_NAME		1211108	0					
ANR	1211139	ExpressionStatement	"e = name_find ( reg , name , name_end )"	728:2:16181:16215	1211108	4	True				
ANR	1211140	AssignmentExpression	"e = name_find ( reg , name , name_end )"		1211108	0		=			
ANR	1211141	Identifier	e		1211108	0					
ANR	1211142	CallExpression	"name_find ( reg , name , name_end )"		1211108	1					
ANR	1211143	Callee	name_find		1211108	0					
ANR	1211144	Identifier	name_find		1211108	0					
ANR	1211145	ArgumentList	reg		1211108	1					
ANR	1211146	Argument	reg		1211108	0					
ANR	1211147	Identifier	reg		1211108	0					
ANR	1211148	Argument	name		1211108	1					
ANR	1211149	Identifier	name		1211108	0					
ANR	1211150	Argument	name_end		1211108	2					
ANR	1211151	Identifier	name_end		1211108	0					
ANR	1211152	IfStatement	if ( IS_NULL ( e ) )		1211108	5					
ANR	1211153	Condition	IS_NULL ( e )	729:6:16223:16232	1211108	0	True				
ANR	1211154	CallExpression	IS_NULL ( e )		1211108	0					
ANR	1211155	Callee	IS_NULL		1211108	0					
ANR	1211156	Identifier	IS_NULL		1211108	0					
ANR	1211157	ArgumentList	e		1211108	1					
ANR	1211158	Argument	e		1211108	0					
ANR	1211159	Identifier	e		1211108	0					
ANR	1211160	CompoundStatement		10:18:200:200	1211108	1					
ANR	1211161	IfStatement	if ( IS_NULL ( t ) )		1211108	0					
ANR	1211162	Condition	IS_NULL ( t )	731:8:16267:16276	1211108	0	True				
ANR	1211163	CallExpression	IS_NULL ( t )		1211108	0					
ANR	1211164	Callee	IS_NULL		1211108	0					
ANR	1211165	Identifier	IS_NULL		1211108	0					
ANR	1211166	ArgumentList	t		1211108	1					
ANR	1211167	Argument	t		1211108	0					
ANR	1211168	Identifier	t		1211108	0					
ANR	1211169	CompoundStatement		12:20:244:244	1211108	1					
ANR	1211170	ExpressionStatement	t = onig_st_init_strend_table_with_size ( 5 )	732:6:16287:16329	1211108	0	True				
ANR	1211171	AssignmentExpression	t = onig_st_init_strend_table_with_size ( 5 )		1211108	0		=			
ANR	1211172	Identifier	t		1211108	0					
ANR	1211173	CallExpression	onig_st_init_strend_table_with_size ( 5 )		1211108	1					
ANR	1211174	Callee	onig_st_init_strend_table_with_size		1211108	0					
ANR	1211175	Identifier	onig_st_init_strend_table_with_size		1211108	0					
ANR	1211176	ArgumentList	5		1211108	1					
ANR	1211177	Argument	5		1211108	0					
ANR	1211178	PrimaryExpression	5		1211108	0					
ANR	1211179	ExpressionStatement	reg -> name_table = ( void * ) t	733:6:16337:16364	1211108	1	True				
ANR	1211180	AssignmentExpression	reg -> name_table = ( void * ) t		1211108	0		=			
ANR	1211181	PtrMemberAccess	reg -> name_table		1211108	0					
ANR	1211182	Identifier	reg		1211108	0					
ANR	1211183	Identifier	name_table		1211108	1					
ANR	1211184	CastExpression	( void * ) t		1211108	1					
ANR	1211185	CastTarget	void *		1211108	0					
ANR	1211186	Identifier	t		1211108	1					
ANR	1211187	ExpressionStatement	e = ( NameEntry * ) xmalloc ( sizeof ( NameEntry ) )	735:4:16376:16419	1211108	1	True				
ANR	1211188	AssignmentExpression	e = ( NameEntry * ) xmalloc ( sizeof ( NameEntry ) )		1211108	0		=			
ANR	1211189	Identifier	e		1211108	0					
ANR	1211190	CastExpression	( NameEntry * ) xmalloc ( sizeof ( NameEntry ) )		1211108	1					
ANR	1211191	CastTarget	NameEntry *		1211108	0					
ANR	1211192	CallExpression	xmalloc ( sizeof ( NameEntry ) )		1211108	1					
ANR	1211193	Callee	xmalloc		1211108	0					
ANR	1211194	Identifier	xmalloc		1211108	0					
ANR	1211195	ArgumentList	sizeof ( NameEntry )		1211108	1					
ANR	1211196	Argument	sizeof ( NameEntry )		1211108	0					
ANR	1211197	SizeofExpression	sizeof ( NameEntry )		1211108	0					
ANR	1211198	Sizeof	sizeof		1211108	0					
ANR	1211199	SizeofOperand	NameEntry		1211108	1					
ANR	1211200	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( e )	736:4:16425:16452	1211108	2	True				
ANR	1211201	CallExpression	CHECK_NULL_RETURN_MEMERR ( e )		1211108	0					
ANR	1211202	Callee	CHECK_NULL_RETURN_MEMERR		1211108	0					
ANR	1211203	Identifier	CHECK_NULL_RETURN_MEMERR		1211108	0					
ANR	1211204	ArgumentList	e		1211108	1					
ANR	1211205	Argument	e		1211108	0					
ANR	1211206	Identifier	e		1211108	0					
ANR	1211207	ExpressionStatement	"e -> name = strdup_with_null ( reg -> enc , name , name_end )"	738:4:16459:16511	1211108	3	True				
ANR	1211208	AssignmentExpression	"e -> name = strdup_with_null ( reg -> enc , name , name_end )"		1211108	0		=			
ANR	1211209	PtrMemberAccess	e -> name		1211108	0					
ANR	1211210	Identifier	e		1211108	0					
ANR	1211211	Identifier	name		1211108	1					
ANR	1211212	CallExpression	"strdup_with_null ( reg -> enc , name , name_end )"		1211108	1					
ANR	1211213	Callee	strdup_with_null		1211108	0					
ANR	1211214	Identifier	strdup_with_null		1211108	0					
ANR	1211215	ArgumentList	reg -> enc		1211108	1					
ANR	1211216	Argument	reg -> enc		1211108	0					
ANR	1211217	PtrMemberAccess	reg -> enc		1211108	0					
ANR	1211218	Identifier	reg		1211108	0					
ANR	1211219	Identifier	enc		1211108	1					
ANR	1211220	Argument	name		1211108	1					
ANR	1211221	Identifier	name		1211108	0					
ANR	1211222	Argument	name_end		1211108	2					
ANR	1211223	Identifier	name_end		1211108	0					
ANR	1211224	IfStatement	if ( IS_NULL ( e -> name ) )		1211108	4					
ANR	1211225	Condition	IS_NULL ( e -> name )	739:8:16521:16536	1211108	0	True				
ANR	1211226	CallExpression	IS_NULL ( e -> name )		1211108	0					
ANR	1211227	Callee	IS_NULL		1211108	0					
ANR	1211228	Identifier	IS_NULL		1211108	0					
ANR	1211229	ArgumentList	e -> name		1211108	1					
ANR	1211230	Argument	e -> name		1211108	0					
ANR	1211231	PtrMemberAccess	e -> name		1211108	0					
ANR	1211232	Identifier	e		1211108	0					
ANR	1211233	Identifier	name		1211108	1					
ANR	1211234	CompoundStatement		20:26:504:504	1211108	1					
ANR	1211235	ExpressionStatement	xfree ( e )	740:6:16547:16555	1211108	0	True				
ANR	1211236	CallExpression	xfree ( e )		1211108	0					
ANR	1211237	Callee	xfree		1211108	0					
ANR	1211238	Identifier	xfree		1211108	0					
ANR	1211239	ArgumentList	e		1211108	1					
ANR	1211240	Argument	e		1211108	0					
ANR	1211241	Identifier	e		1211108	0					
ANR	1211242	ReturnStatement	return ONIGERR_MEMORY ;	740:17:16558:16579	1211108	1	True				
ANR	1211243	Identifier	ONIGERR_MEMORY		1211108	0					
ANR	1211244	ExpressionStatement	"onig_st_insert_strend ( t , e -> name , ( e -> name + ( name_end - name ) ) , ( HashDataType ) e )"	742:4:16591:16699	1211108	5	True				
ANR	1211245	CallExpression	"onig_st_insert_strend ( t , e -> name , ( e -> name + ( name_end - name ) ) , ( HashDataType ) e )"		1211108	0					
ANR	1211246	Callee	onig_st_insert_strend		1211108	0					
ANR	1211247	Identifier	onig_st_insert_strend		1211108	0					
ANR	1211248	ArgumentList	t		1211108	1					
ANR	1211249	Argument	t		1211108	0					
ANR	1211250	Identifier	t		1211108	0					
ANR	1211251	Argument	e -> name		1211108	1					
ANR	1211252	PtrMemberAccess	e -> name		1211108	0					
ANR	1211253	Identifier	e		1211108	0					
ANR	1211254	Identifier	name		1211108	1					
ANR	1211255	Argument	e -> name + ( name_end - name )		1211108	2					
ANR	1211256	AdditiveExpression	e -> name + ( name_end - name )		1211108	0		+			
ANR	1211257	PtrMemberAccess	e -> name		1211108	0					
ANR	1211258	Identifier	e		1211108	0					
ANR	1211259	Identifier	name		1211108	1					
ANR	1211260	AdditiveExpression	name_end - name		1211108	1		-			
ANR	1211261	Identifier	name_end		1211108	0					
ANR	1211262	Identifier	name		1211108	1					
ANR	1211263	Argument	( HashDataType ) e		1211108	3					
ANR	1211264	CastExpression	( HashDataType ) e		1211108	0					
ANR	1211265	CastTarget	HashDataType		1211108	0					
ANR	1211266	Identifier	e		1211108	1					
ANR	1211267	ExpressionStatement	e -> name_len = name_end - name	745:4:16706:16737	1211108	6	True				
ANR	1211268	AssignmentExpression	e -> name_len = name_end - name		1211108	0		=			
ANR	1211269	PtrMemberAccess	e -> name_len		1211108	0					
ANR	1211270	Identifier	e		1211108	0					
ANR	1211271	Identifier	name_len		1211108	1					
ANR	1211272	AdditiveExpression	name_end - name		1211108	1		-			
ANR	1211273	Identifier	name_end		1211108	0					
ANR	1211274	Identifier	name		1211108	1					
ANR	1211275	ExpressionStatement	e -> back_num = 0	746:4:16743:16760	1211108	7	True				
ANR	1211276	AssignmentExpression	e -> back_num = 0		1211108	0		=			
ANR	1211277	PtrMemberAccess	e -> back_num		1211108	0					
ANR	1211278	Identifier	e		1211108	0					
ANR	1211279	Identifier	back_num		1211108	1					
ANR	1211280	PrimaryExpression	0		1211108	1					
ANR	1211281	ExpressionStatement	e -> back_alloc = 0	747:4:16766:16783	1211108	8	True				
ANR	1211282	AssignmentExpression	e -> back_alloc = 0		1211108	0		=			
ANR	1211283	PtrMemberAccess	e -> back_alloc		1211108	0					
ANR	1211284	Identifier	e		1211108	0					
ANR	1211285	Identifier	back_alloc		1211108	1					
ANR	1211286	PrimaryExpression	0		1211108	1					
ANR	1211287	ExpressionStatement	e -> back_refs = ( int * ) NULL	748:4:16789:16816	1211108	9	True				
ANR	1211288	AssignmentExpression	e -> back_refs = ( int * ) NULL		1211108	0		=			
ANR	1211289	PtrMemberAccess	e -> back_refs		1211108	0					
ANR	1211290	Identifier	e		1211108	0					
ANR	1211291	Identifier	back_refs		1211108	1					
ANR	1211292	CastExpression	( int * ) NULL		1211108	1					
ANR	1211293	CastTarget	int *		1211108	0					
ANR	1211294	Identifier	NULL		1211108	1					
ANR	1211295	IfStatement	"if ( e -> back_num >= 1 && ! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME ) )"		1211108	6					
ANR	1211296	Condition	"e -> back_num >= 1 && ! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME )"	794:6:17856:17950	1211108	0	True				
ANR	1211297	AndExpression	"e -> back_num >= 1 && ! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME )"		1211108	0		&&			
ANR	1211298	RelationalExpression	e -> back_num >= 1		1211108	0		>=			
ANR	1211299	PtrMemberAccess	e -> back_num		1211108	0					
ANR	1211300	Identifier	e		1211108	0					
ANR	1211301	Identifier	back_num		1211108	1					
ANR	1211302	PrimaryExpression	1		1211108	1					
ANR	1211303	UnaryOperationExpression	"! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME )"		1211108	1					
ANR	1211304	UnaryOperator	!		1211108	0					
ANR	1211305	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME )"		1211108	1					
ANR	1211306	Callee	IS_SYNTAX_BV		1211108	0					
ANR	1211307	Identifier	IS_SYNTAX_BV		1211108	0					
ANR	1211308	ArgumentList	env -> syntax		1211108	1					
ANR	1211309	Argument	env -> syntax		1211108	0					
ANR	1211310	PtrMemberAccess	env -> syntax		1211108	0					
ANR	1211311	Identifier	env		1211108	0					
ANR	1211312	Identifier	syntax		1211108	1					
ANR	1211313	Argument	ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME		1211108	1					
ANR	1211314	Identifier	ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME		1211108	0					
ANR	1211315	CompoundStatement		76:77:1918:1918	1211108	1					
ANR	1211316	ExpressionStatement	"onig_scan_env_set_error_string ( env , ONIGERR_MULTIPLEX_DEFINED_NAME , name , name_end )"	796:4:17959:18050	1211108	0	True				
ANR	1211317	CallExpression	"onig_scan_env_set_error_string ( env , ONIGERR_MULTIPLEX_DEFINED_NAME , name , name_end )"		1211108	0					
ANR	1211318	Callee	onig_scan_env_set_error_string		1211108	0					
ANR	1211319	Identifier	onig_scan_env_set_error_string		1211108	0					
ANR	1211320	ArgumentList	env		1211108	1					
ANR	1211321	Argument	env		1211108	0					
ANR	1211322	Identifier	env		1211108	0					
ANR	1211323	Argument	ONIGERR_MULTIPLEX_DEFINED_NAME		1211108	1					
ANR	1211324	Identifier	ONIGERR_MULTIPLEX_DEFINED_NAME		1211108	0					
ANR	1211325	Argument	name		1211108	2					
ANR	1211326	Identifier	name		1211108	0					
ANR	1211327	Argument	name_end		1211108	3					
ANR	1211328	Identifier	name_end		1211108	0					
ANR	1211329	ReturnStatement	return ONIGERR_MULTIPLEX_DEFINED_NAME ;	798:4:18056:18093	1211108	1	True				
ANR	1211330	Identifier	ONIGERR_MULTIPLEX_DEFINED_NAME		1211108	0					
ANR	1211331	ExpressionStatement	e -> back_num ++	801:2:18102:18115	1211108	7	True				
ANR	1211332	PostIncDecOperationExpression	e -> back_num ++		1211108	0					
ANR	1211333	PtrMemberAccess	e -> back_num		1211108	0					
ANR	1211334	Identifier	e		1211108	0					
ANR	1211335	Identifier	back_num		1211108	1					
ANR	1211336	IncDec	++		1211108	1					
ANR	1211337	IfStatement	if ( e -> back_num == 1 )		1211108	8					
ANR	1211338	Condition	e -> back_num == 1	802:6:18123:18138	1211108	0	True				
ANR	1211339	EqualityExpression	e -> back_num == 1		1211108	0		==			
ANR	1211340	PtrMemberAccess	e -> back_num		1211108	0					
ANR	1211341	Identifier	e		1211108	0					
ANR	1211342	Identifier	back_num		1211108	1					
ANR	1211343	PrimaryExpression	1		1211108	1					
ANR	1211344	CompoundStatement		83:24:2106:2106	1211108	1					
ANR	1211345	ExpressionStatement	e -> back_ref1 = backref	803:4:18147:18169	1211108	0	True				
ANR	1211346	AssignmentExpression	e -> back_ref1 = backref		1211108	0		=			
ANR	1211347	PtrMemberAccess	e -> back_ref1		1211108	0					
ANR	1211348	Identifier	e		1211108	0					
ANR	1211349	Identifier	back_ref1		1211108	1					
ANR	1211350	Identifier	backref		1211108	1					
ANR	1211351	ElseStatement	else		1211108	0					
ANR	1211352	CompoundStatement		86:7:2147:2147	1211108	0					
ANR	1211353	IfStatement	if ( e -> back_num == 2 )		1211108	0					
ANR	1211354	Condition	e -> back_num == 2	806:8:18192:18207	1211108	0	True				
ANR	1211355	EqualityExpression	e -> back_num == 2		1211108	0		==			
ANR	1211356	PtrMemberAccess	e -> back_num		1211108	0					
ANR	1211357	Identifier	e		1211108	0					
ANR	1211358	Identifier	back_num		1211108	1					
ANR	1211359	PrimaryExpression	2		1211108	1					
ANR	1211360	CompoundStatement		87:26:2175:2175	1211108	1					
ANR	1211361	ExpressionStatement	alloc = INIT_NAME_BACKREFS_ALLOC_NUM	807:6:18218:18254	1211108	0	True				
ANR	1211362	AssignmentExpression	alloc = INIT_NAME_BACKREFS_ALLOC_NUM		1211108	0		=			
ANR	1211363	Identifier	alloc		1211108	0					
ANR	1211364	Identifier	INIT_NAME_BACKREFS_ALLOC_NUM		1211108	1					
ANR	1211365	ExpressionStatement	e -> back_refs = ( int * ) xmalloc ( sizeof ( int ) * alloc )	808:6:18262:18312	1211108	1	True				
ANR	1211366	AssignmentExpression	e -> back_refs = ( int * ) xmalloc ( sizeof ( int ) * alloc )		1211108	0		=			
ANR	1211367	PtrMemberAccess	e -> back_refs		1211108	0					
ANR	1211368	Identifier	e		1211108	0					
ANR	1211369	Identifier	back_refs		1211108	1					
ANR	1211370	CastExpression	( int * ) xmalloc ( sizeof ( int ) * alloc )		1211108	1					
ANR	1211371	CastTarget	int *		1211108	0					
ANR	1211372	CallExpression	xmalloc ( sizeof ( int ) * alloc )		1211108	1					
ANR	1211373	Callee	xmalloc		1211108	0					
ANR	1211374	Identifier	xmalloc		1211108	0					
ANR	1211375	ArgumentList	sizeof ( int ) * alloc		1211108	1					
ANR	1211376	Argument	sizeof ( int ) * alloc		1211108	0					
ANR	1211377	MultiplicativeExpression	sizeof ( int ) * alloc		1211108	0		*			
ANR	1211378	SizeofExpression	sizeof ( int )		1211108	0					
ANR	1211379	Sizeof	sizeof		1211108	0					
ANR	1211380	SizeofOperand	int		1211108	1					
ANR	1211381	Identifier	alloc		1211108	1					
ANR	1211382	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( e -> back_refs )	809:6:18320:18358	1211108	2	True				
ANR	1211383	CallExpression	CHECK_NULL_RETURN_MEMERR ( e -> back_refs )		1211108	0					
ANR	1211384	Callee	CHECK_NULL_RETURN_MEMERR		1211108	0					
ANR	1211385	Identifier	CHECK_NULL_RETURN_MEMERR		1211108	0					
ANR	1211386	ArgumentList	e -> back_refs		1211108	1					
ANR	1211387	Argument	e -> back_refs		1211108	0					
ANR	1211388	PtrMemberAccess	e -> back_refs		1211108	0					
ANR	1211389	Identifier	e		1211108	0					
ANR	1211390	Identifier	back_refs		1211108	1					
ANR	1211391	ExpressionStatement	e -> back_alloc = alloc	810:6:18366:18387	1211108	3	True				
ANR	1211392	AssignmentExpression	e -> back_alloc = alloc		1211108	0		=			
ANR	1211393	PtrMemberAccess	e -> back_alloc		1211108	0					
ANR	1211394	Identifier	e		1211108	0					
ANR	1211395	Identifier	back_alloc		1211108	1					
ANR	1211396	Identifier	alloc		1211108	1					
ANR	1211397	ExpressionStatement	e -> back_refs [ 0 ] = e -> back_ref1	811:6:18395:18425	1211108	4	True				
ANR	1211398	AssignmentExpression	e -> back_refs [ 0 ] = e -> back_ref1		1211108	0		=			
ANR	1211399	ArrayIndexing	e -> back_refs [ 0 ]		1211108	0					
ANR	1211400	PtrMemberAccess	e -> back_refs		1211108	0					
ANR	1211401	Identifier	e		1211108	0					
ANR	1211402	Identifier	back_refs		1211108	1					
ANR	1211403	PrimaryExpression	0		1211108	1					
ANR	1211404	PtrMemberAccess	e -> back_ref1		1211108	1					
ANR	1211405	Identifier	e		1211108	0					
ANR	1211406	Identifier	back_ref1		1211108	1					
ANR	1211407	ExpressionStatement	e -> back_refs [ 1 ] = backref	812:6:18433:18458	1211108	5	True				
ANR	1211408	AssignmentExpression	e -> back_refs [ 1 ] = backref		1211108	0		=			
ANR	1211409	ArrayIndexing	e -> back_refs [ 1 ]		1211108	0					
ANR	1211410	PtrMemberAccess	e -> back_refs		1211108	0					
ANR	1211411	Identifier	e		1211108	0					
ANR	1211412	Identifier	back_refs		1211108	1					
ANR	1211413	PrimaryExpression	1		1211108	1					
ANR	1211414	Identifier	backref		1211108	1					
ANR	1211415	ElseStatement	else		1211108	0					
ANR	1211416	CompoundStatement		95:9:2440:2440	1211108	0					
ANR	1211417	IfStatement	if ( e -> back_num > e -> back_alloc )		1211108	0					
ANR	1211418	Condition	e -> back_num > e -> back_alloc	815:10:18487:18513	1211108	0	True				
ANR	1211419	RelationalExpression	e -> back_num > e -> back_alloc		1211108	0		>			
ANR	1211420	PtrMemberAccess	e -> back_num		1211108	0					
ANR	1211421	Identifier	e		1211108	0					
ANR	1211422	Identifier	back_num		1211108	1					
ANR	1211423	PtrMemberAccess	e -> back_alloc		1211108	1					
ANR	1211424	Identifier	e		1211108	0					
ANR	1211425	Identifier	back_alloc		1211108	1					
ANR	1211426	CompoundStatement		96:39:2481:2481	1211108	1					
ANR	1211427	ExpressionStatement	alloc = e -> back_alloc * 2	816:1:18519:18544	1211108	0	True				
ANR	1211428	AssignmentExpression	alloc = e -> back_alloc * 2		1211108	0		=			
ANR	1211429	Identifier	alloc		1211108	0					
ANR	1211430	MultiplicativeExpression	e -> back_alloc * 2		1211108	1		*			
ANR	1211431	PtrMemberAccess	e -> back_alloc		1211108	0					
ANR	1211432	Identifier	e		1211108	0					
ANR	1211433	Identifier	back_alloc		1211108	1					
ANR	1211434	PrimaryExpression	2		1211108	1					
ANR	1211435	ExpressionStatement	"e -> back_refs = ( int * ) xrealloc ( e -> back_refs , sizeof ( int ) * alloc )"	817:1:18547:18612	1211108	1	True				
ANR	1211436	AssignmentExpression	"e -> back_refs = ( int * ) xrealloc ( e -> back_refs , sizeof ( int ) * alloc )"		1211108	0		=			
ANR	1211437	PtrMemberAccess	e -> back_refs		1211108	0					
ANR	1211438	Identifier	e		1211108	0					
ANR	1211439	Identifier	back_refs		1211108	1					
ANR	1211440	CastExpression	"( int * ) xrealloc ( e -> back_refs , sizeof ( int ) * alloc )"		1211108	1					
ANR	1211441	CastTarget	int *		1211108	0					
ANR	1211442	CallExpression	"xrealloc ( e -> back_refs , sizeof ( int ) * alloc )"		1211108	1					
ANR	1211443	Callee	xrealloc		1211108	0					
ANR	1211444	Identifier	xrealloc		1211108	0					
ANR	1211445	ArgumentList	e -> back_refs		1211108	1					
ANR	1211446	Argument	e -> back_refs		1211108	0					
ANR	1211447	PtrMemberAccess	e -> back_refs		1211108	0					
ANR	1211448	Identifier	e		1211108	0					
ANR	1211449	Identifier	back_refs		1211108	1					
ANR	1211450	Argument	sizeof ( int ) * alloc		1211108	1					
ANR	1211451	MultiplicativeExpression	sizeof ( int ) * alloc		1211108	0		*			
ANR	1211452	SizeofExpression	sizeof ( int )		1211108	0					
ANR	1211453	Sizeof	sizeof		1211108	0					
ANR	1211454	SizeofOperand	int		1211108	1					
ANR	1211455	Identifier	alloc		1211108	1					
ANR	1211456	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( e -> back_refs )	818:1:18615:18653	1211108	2	True				
ANR	1211457	CallExpression	CHECK_NULL_RETURN_MEMERR ( e -> back_refs )		1211108	0					
ANR	1211458	Callee	CHECK_NULL_RETURN_MEMERR		1211108	0					
ANR	1211459	Identifier	CHECK_NULL_RETURN_MEMERR		1211108	0					
ANR	1211460	ArgumentList	e -> back_refs		1211108	1					
ANR	1211461	Argument	e -> back_refs		1211108	0					
ANR	1211462	PtrMemberAccess	e -> back_refs		1211108	0					
ANR	1211463	Identifier	e		1211108	0					
ANR	1211464	Identifier	back_refs		1211108	1					
ANR	1211465	ExpressionStatement	e -> back_alloc = alloc	819:1:18656:18677	1211108	3	True				
ANR	1211466	AssignmentExpression	e -> back_alloc = alloc		1211108	0		=			
ANR	1211467	PtrMemberAccess	e -> back_alloc		1211108	0					
ANR	1211468	Identifier	e		1211108	0					
ANR	1211469	Identifier	back_alloc		1211108	1					
ANR	1211470	Identifier	alloc		1211108	1					
ANR	1211471	ExpressionStatement	e -> back_refs [ e -> back_num - 1 ] = backref	821:6:18693:18732	1211108	1	True				
ANR	1211472	AssignmentExpression	e -> back_refs [ e -> back_num - 1 ] = backref		1211108	0		=			
ANR	1211473	ArrayIndexing	e -> back_refs [ e -> back_num - 1 ]		1211108	0					
ANR	1211474	PtrMemberAccess	e -> back_refs		1211108	0					
ANR	1211475	Identifier	e		1211108	0					
ANR	1211476	Identifier	back_refs		1211108	1					
ANR	1211477	AdditiveExpression	e -> back_num - 1		1211108	1		-			
ANR	1211478	PtrMemberAccess	e -> back_num		1211108	0					
ANR	1211479	Identifier	e		1211108	0					
ANR	1211480	Identifier	back_num		1211108	1					
ANR	1211481	PrimaryExpression	1		1211108	1					
ANR	1211482	Identifier	backref		1211108	1					
ANR	1211483	ReturnStatement	return 0 ;	825:2:18747:18755	1211108	9	True				
ANR	1211484	PrimaryExpression	0		1211108	0					
ANR	1211485	ReturnType	static int		1211108	1					
ANR	1211486	Identifier	name_add		1211108	2					
ANR	1211487	ParameterList	"regex_t * reg , UChar * name , UChar * name_end , int backref , ScanEnv * env"		1211108	3					
ANR	1211488	Parameter	regex_t * reg	719:9:15963:15974	1211108	0	True				
ANR	1211489	ParameterType	regex_t *		1211108	0					
ANR	1211490	Identifier	reg		1211108	1					
ANR	1211491	Parameter	UChar * name	719:23:15977:15987	1211108	1	True				
ANR	1211492	ParameterType	UChar *		1211108	0					
ANR	1211493	Identifier	name		1211108	1					
ANR	1211494	Parameter	UChar * name_end	719:36:15990:16004	1211108	2	True				
ANR	1211495	ParameterType	UChar *		1211108	0					
ANR	1211496	Identifier	name_end		1211108	1					
ANR	1211497	Parameter	int backref	719:53:16007:16017	1211108	3	True				
ANR	1211498	ParameterType	int		1211108	0					
ANR	1211499	Identifier	backref		1211108	1					
ANR	1211500	Parameter	ScanEnv * env	719:66:16020:16031	1211108	4	True				
ANR	1211501	ParameterType	ScanEnv *		1211108	0					
ANR	1211502	Identifier	env		1211108	1					
ANR	1211503	CFGEntryNode	ENTRY		1211108		True				
ANR	1211504	CFGExitNode	EXIT		1211108		True				
ANR	1211505	Symbol	ONIGERR_EMPTY_GROUP_NAME		1211108						
ANR	1211506	Symbol	backref		1211108						
ANR	1211507	Symbol	e -> back_ref1		1211108						
ANR	1211508	Symbol	e -> back_refs		1211108						
ANR	1211509	Symbol	strdup_with_null		1211108						
ANR	1211510	Symbol	INIT_NAME_BACKREFS_ALLOC_NUM		1211108						
ANR	1211511	Symbol	IS_NULL		1211108						
ANR	1211512	Symbol	reg		1211108						
ANR	1211513	Symbol	xmalloc		1211108						
ANR	1211514	Symbol	* e -> back_num		1211108						
ANR	1211515	Symbol	IS_SYNTAX_BV		1211108						
ANR	1211516	Symbol	xrealloc		1211108						
ANR	1211517	Symbol	name_end		1211108						
ANR	1211518	Symbol	e -> back_alloc		1211108						
ANR	1211519	Symbol	e -> name_len		1211108						
ANR	1211520	Symbol	e -> back_num		1211108						
ANR	1211521	Symbol	NULL		1211108						
ANR	1211522	Symbol	ONIG_SYN_ALLOW_MULTIPLEX_DEFINITION_NAME		1211108						
ANR	1211523	Symbol	e		1211108						
ANR	1211524	Symbol	* * e		1211108						
ANR	1211525	Symbol	* e -> back_refs		1211108						
ANR	1211526	Symbol	reg -> name_table		1211108						
ANR	1211527	Symbol	name_find		1211108						
ANR	1211528	Symbol	ONIGERR_MEMORY		1211108						
ANR	1211529	Symbol	* env		1211108						
ANR	1211530	Symbol	env		1211108						
ANR	1211531	Symbol	env -> syntax		1211108						
ANR	1211532	Symbol	reg -> enc		1211108						
ANR	1211533	Symbol	* e		1211108						
ANR	1211534	Symbol	onig_st_init_strend_table_with_size		1211108						
ANR	1211535	Symbol	ONIGERR_MULTIPLEX_DEFINED_NAME		1211108						
ANR	1211536	Symbol	t		1211108						
ANR	1211537	Symbol	name		1211108						
ANR	1211538	Symbol	alloc		1211108						
ANR	1211539	Symbol	* reg		1211108						
ANR	1211540	Symbol	e -> name		1211108						
ANR	1211541	Function	onig_name_to_group_numbers	828:0:18760:19154							
ANR	1211542	FunctionDef	"onig_name_to_group_numbers (regex_t * reg , const UChar * name , const UChar * name_end , int * * nums)"		1211541	0					
ANR	1211543	CompoundStatement		831:0:18872:19154	1211541	0					
ANR	1211544	IdentifierDeclStatement	"NameEntry * e = name_find ( reg , name , name_end ) ;"	832:2:18876:18921	1211541	0	True				
ANR	1211545	IdentifierDecl	"* e = name_find ( reg , name , name_end )"		1211541	0					
ANR	1211546	IdentifierDeclType	NameEntry *		1211541	0					
ANR	1211547	Identifier	e		1211541	1					
ANR	1211548	AssignmentExpression	"* e = name_find ( reg , name , name_end )"		1211541	2		=			
ANR	1211549	Identifier	e		1211541	0					
ANR	1211550	CallExpression	"name_find ( reg , name , name_end )"		1211541	1					
ANR	1211551	Callee	name_find		1211541	0					
ANR	1211552	Identifier	name_find		1211541	0					
ANR	1211553	ArgumentList	reg		1211541	1					
ANR	1211554	Argument	reg		1211541	0					
ANR	1211555	Identifier	reg		1211541	0					
ANR	1211556	Argument	name		1211541	1					
ANR	1211557	Identifier	name		1211541	0					
ANR	1211558	Argument	name_end		1211541	2					
ANR	1211559	Identifier	name_end		1211541	0					
ANR	1211560	IfStatement	if ( IS_NULL ( e ) )		1211541	1					
ANR	1211561	Condition	IS_NULL ( e )	834:6:18930:18939	1211541	0	True				
ANR	1211562	CallExpression	IS_NULL ( e )		1211541	0					
ANR	1211563	Callee	IS_NULL		1211541	0					
ANR	1211564	Identifier	IS_NULL		1211541	0					
ANR	1211565	ArgumentList	e		1211541	1					
ANR	1211566	Argument	e		1211541	0					
ANR	1211567	Identifier	e		1211541	0					
ANR	1211568	ReturnStatement	return ONIGERR_UNDEFINED_NAME_REFERENCE ;	834:18:18942:18981	1211541	1	True				
ANR	1211569	Identifier	ONIGERR_UNDEFINED_NAME_REFERENCE		1211541	0					
ANR	1211570	SwitchStatement	switch ( e -> back_num )		1211541	2					
ANR	1211571	Condition	e -> back_num	836:10:18994:19004	1211541	0	True				
ANR	1211572	PtrMemberAccess	e -> back_num		1211541	0					
ANR	1211573	Identifier	e		1211541	0					
ANR	1211574	Identifier	back_num		1211541	1					
ANR	1211575	CompoundStatement		6:23:134:134	1211541	1					
ANR	1211576	Label	case 0 :	837:2:19011:19017	1211541	0	True				
ANR	1211577	BreakStatement	break ;	838:4:19023:19028	1211541	1	True				
ANR	1211578	Label	case 1 :	839:2:19032:19038	1211541	2	True				
ANR	1211579	ExpressionStatement	* nums = & ( e -> back_ref1 )	840:4:19044:19067	1211541	3	True				
ANR	1211580	AssignmentExpression	* nums = & ( e -> back_ref1 )		1211541	0		=			
ANR	1211581	UnaryOperationExpression	* nums		1211541	0					
ANR	1211582	UnaryOperator	*		1211541	0					
ANR	1211583	Identifier	nums		1211541	1					
ANR	1211584	UnaryOperationExpression	& ( e -> back_ref1 )		1211541	1					
ANR	1211585	UnaryOperator	&		1211541	0					
ANR	1211586	PtrMemberAccess	e -> back_ref1		1211541	1					
ANR	1211587	Identifier	e		1211541	0					
ANR	1211588	Identifier	back_ref1		1211541	1					
ANR	1211589	BreakStatement	break ;	841:4:19073:19078	1211541	4	True				
ANR	1211590	Label	default :	842:2:19082:19089	1211541	5	True				
ANR	1211591	Identifier	default		1211541	0					
ANR	1211592	ExpressionStatement	* nums = e -> back_refs	843:4:19095:19115	1211541	6	True				
ANR	1211593	AssignmentExpression	* nums = e -> back_refs		1211541	0		=			
ANR	1211594	UnaryOperationExpression	* nums		1211541	0					
ANR	1211595	UnaryOperator	*		1211541	0					
ANR	1211596	Identifier	nums		1211541	1					
ANR	1211597	PtrMemberAccess	e -> back_refs		1211541	1					
ANR	1211598	Identifier	e		1211541	0					
ANR	1211599	Identifier	back_refs		1211541	1					
ANR	1211600	BreakStatement	break ;	844:4:19121:19126	1211541	7	True				
ANR	1211601	ReturnStatement	return e -> back_num ;	846:2:19134:19152	1211541	3	True				
ANR	1211602	PtrMemberAccess	e -> back_num		1211541	0					
ANR	1211603	Identifier	e		1211541	0					
ANR	1211604	Identifier	back_num		1211541	1					
ANR	1211605	ReturnType	extern int		1211541	1					
ANR	1211606	Identifier	onig_name_to_group_numbers		1211541	2					
ANR	1211607	ParameterList	"regex_t * reg , const UChar * name , const UChar * name_end , int * * nums"		1211541	3					
ANR	1211608	Parameter	regex_t * reg	829:27:18798:18809	1211541	0	True				
ANR	1211609	ParameterType	regex_t *		1211541	0					
ANR	1211610	Identifier	reg		1211541	1					
ANR	1211611	Parameter	const UChar * name	829:41:18812:18828	1211541	1	True				
ANR	1211612	ParameterType	const UChar *		1211541	0					
ANR	1211613	Identifier	name		1211541	1					
ANR	1211614	Parameter	const UChar * name_end	830:6:18837:18857	1211541	2	True				
ANR	1211615	ParameterType	const UChar *		1211541	0					
ANR	1211616	Identifier	name_end		1211541	1					
ANR	1211617	Parameter	int * * nums	830:29:18860:18869	1211541	3	True				
ANR	1211618	ParameterType	int * *		1211541	0					
ANR	1211619	Identifier	nums		1211541	1					
ANR	1211620	CFGEntryNode	ENTRY		1211541		True				
ANR	1211621	CFGExitNode	EXIT		1211541		True				
ANR	1211622	Symbol	* nums		1211541						
ANR	1211623	Symbol	e -> back_num		1211541						
ANR	1211624	Symbol	e -> back_refs		1211541						
ANR	1211625	Symbol	e		1211541						
ANR	1211626	Symbol	name_find		1211541						
ANR	1211627	Symbol	& e -> back_ref1		1211541						
ANR	1211628	Symbol	* e		1211541						
ANR	1211629	Symbol	IS_NULL		1211541						
ANR	1211630	Symbol	reg		1211541						
ANR	1211631	Symbol	ONIGERR_UNDEFINED_NAME_REFERENCE		1211541						
ANR	1211632	Symbol	name		1211541						
ANR	1211633	Symbol	name_end		1211541						
ANR	1211634	Symbol	nums		1211541						
ANR	1211635	Function	onig_name_to_backref_number	849:0:19157:19666							
ANR	1211636	FunctionDef	"onig_name_to_backref_number (regex_t * reg , const UChar * name , const UChar * name_end , OnigRegion * region)"		1211635	0					
ANR	1211637	CompoundStatement		852:0:19279:19666	1211635	0					
ANR	1211638	IdentifierDeclStatement	"int i , n , * nums ;"	853:2:19283:19298	1211635	0	True				
ANR	1211639	IdentifierDecl	i		1211635	0					
ANR	1211640	IdentifierDeclType	int		1211635	0					
ANR	1211641	Identifier	i		1211635	1					
ANR	1211642	IdentifierDecl	n		1211635	1					
ANR	1211643	IdentifierDeclType	int		1211635	0					
ANR	1211644	Identifier	n		1211635	1					
ANR	1211645	IdentifierDecl	* nums		1211635	2					
ANR	1211646	IdentifierDeclType	int *		1211635	0					
ANR	1211647	Identifier	nums		1211635	1					
ANR	1211648	ExpressionStatement	"n = onig_name_to_group_numbers ( reg , name , name_end , & nums )"	855:2:19303:19361	1211635	1	True				
ANR	1211649	AssignmentExpression	"n = onig_name_to_group_numbers ( reg , name , name_end , & nums )"		1211635	0		=			
ANR	1211650	Identifier	n		1211635	0					
ANR	1211651	CallExpression	"onig_name_to_group_numbers ( reg , name , name_end , & nums )"		1211635	1					
ANR	1211652	Callee	onig_name_to_group_numbers		1211635	0					
ANR	1211653	Identifier	onig_name_to_group_numbers		1211635	0					
ANR	1211654	ArgumentList	reg		1211635	1					
ANR	1211655	Argument	reg		1211635	0					
ANR	1211656	Identifier	reg		1211635	0					
ANR	1211657	Argument	name		1211635	1					
ANR	1211658	Identifier	name		1211635	0					
ANR	1211659	Argument	name_end		1211635	2					
ANR	1211660	Identifier	name_end		1211635	0					
ANR	1211661	Argument	& nums		1211635	3					
ANR	1211662	UnaryOperationExpression	& nums		1211635	0					
ANR	1211663	UnaryOperator	&		1211635	0					
ANR	1211664	Identifier	nums		1211635	1					
ANR	1211665	IfStatement	if ( n < 0 )		1211635	2					
ANR	1211666	Condition	n < 0	856:6:19369:19373	1211635	0	True				
ANR	1211667	RelationalExpression	n < 0		1211635	0		<			
ANR	1211668	Identifier	n		1211635	0					
ANR	1211669	PrimaryExpression	0		1211635	1					
ANR	1211670	ReturnStatement	return n ;	857:4:19380:19388	1211635	1	True				
ANR	1211671	Identifier	n		1211635	0					
ANR	1211672	ElseStatement	else		1211635	0					
ANR	1211673	IfStatement	if ( n == 0 )		1211635	0					
ANR	1211674	Condition	n == 0	858:11:19401:19406	1211635	0	True				
ANR	1211675	EqualityExpression	n == 0		1211635	0		==			
ANR	1211676	Identifier	n		1211635	0					
ANR	1211677	PrimaryExpression	0		1211635	1					
ANR	1211678	ReturnStatement	return ONIGERR_PARSER_BUG ;	859:4:19413:19438	1211635	1	True				
ANR	1211679	Identifier	ONIGERR_PARSER_BUG		1211635	0					
ANR	1211680	ElseStatement	else		1211635	0					
ANR	1211681	IfStatement	if ( n == 1 )		1211635	0					
ANR	1211682	Condition	n == 1	860:11:19451:19456	1211635	0	True				
ANR	1211683	EqualityExpression	n == 1		1211635	0		==			
ANR	1211684	Identifier	n		1211635	0					
ANR	1211685	PrimaryExpression	1		1211635	1					
ANR	1211686	ReturnStatement	return nums [ 0 ] ;	861:4:19463:19477	1211635	1	True				
ANR	1211687	ArrayIndexing	nums [ 0 ]		1211635	0					
ANR	1211688	Identifier	nums		1211635	0					
ANR	1211689	PrimaryExpression	0		1211635	1					
ANR	1211690	ElseStatement	else		1211635	0					
ANR	1211691	CompoundStatement		11:7:206:206	1211635	0					
ANR	1211692	IfStatement	if ( IS_NOT_NULL ( region ) )		1211635	0					
ANR	1211693	Condition	IS_NOT_NULL ( region )	863:8:19496:19514	1211635	0	True				
ANR	1211694	CallExpression	IS_NOT_NULL ( region )		1211635	0					
ANR	1211695	Callee	IS_NOT_NULL		1211635	0					
ANR	1211696	Identifier	IS_NOT_NULL		1211635	0					
ANR	1211697	ArgumentList	region		1211635	1					
ANR	1211698	Argument	region		1211635	0					
ANR	1211699	Identifier	region		1211635	0					
ANR	1211700	CompoundStatement		12:29:237:237	1211635	1					
ANR	1211701	ForStatement	for ( i = n - 1 ; i >= 0 ; i -- )		1211635	0					
ANR	1211702	ForInit	i = n - 1 ;	864:11:19530:19539	1211635	0	True				
ANR	1211703	AssignmentExpression	i = n - 1		1211635	0		=			
ANR	1211704	Identifier	i		1211635	0					
ANR	1211705	AdditiveExpression	n - 1		1211635	1		-			
ANR	1211706	Identifier	n		1211635	0					
ANR	1211707	PrimaryExpression	1		1211635	1					
ANR	1211708	Condition	i >= 0	864:22:19541:19546	1211635	1	True				
ANR	1211709	RelationalExpression	i >= 0		1211635	0		>=			
ANR	1211710	Identifier	i		1211635	0					
ANR	1211711	PrimaryExpression	0		1211635	1					
ANR	1211712	PostIncDecOperationExpression	i --	864:30:19549:19551	1211635	2	True				
ANR	1211713	Identifier	i		1211635	0					
ANR	1211714	IncDec	--		1211635	1					
ANR	1211715	CompoundStatement		13:35:274:274	1211635	3					
ANR	1211716	IfStatement	if ( region -> beg [ nums [ i ] ] != ONIG_REGION_NOTPOS )		1211635	0					
ANR	1211717	Condition	region -> beg [ nums [ i ] ] != ONIG_REGION_NOTPOS	865:5:19561:19602	1211635	0	True				
ANR	1211718	EqualityExpression	region -> beg [ nums [ i ] ] != ONIG_REGION_NOTPOS		1211635	0		!=			
ANR	1211719	ArrayIndexing	region -> beg [ nums [ i ] ]		1211635	0					
ANR	1211720	PtrMemberAccess	region -> beg		1211635	0					
ANR	1211721	Identifier	region		1211635	0					
ANR	1211722	Identifier	beg		1211635	1					
ANR	1211723	ArrayIndexing	nums [ i ]		1211635	1					
ANR	1211724	Identifier	nums		1211635	0					
ANR	1211725	Identifier	i		1211635	1					
ANR	1211726	Identifier	ONIG_REGION_NOTPOS		1211635	1					
ANR	1211727	ReturnStatement	return nums [ i ] ;	866:3:19608:19622	1211635	1	True				
ANR	1211728	ArrayIndexing	nums [ i ]		1211635	0					
ANR	1211729	Identifier	nums		1211635	0					
ANR	1211730	Identifier	i		1211635	1					
ANR	1211731	ReturnStatement	return nums [ n - 1 ] ;	869:4:19642:19660	1211635	1	True				
ANR	1211732	ArrayIndexing	nums [ n - 1 ]		1211635	0					
ANR	1211733	Identifier	nums		1211635	0					
ANR	1211734	AdditiveExpression	n - 1		1211635	1		-			
ANR	1211735	Identifier	n		1211635	0					
ANR	1211736	PrimaryExpression	1		1211635	1					
ANR	1211737	ReturnType	extern int		1211635	1					
ANR	1211738	Identifier	onig_name_to_backref_number		1211635	2					
ANR	1211739	ParameterList	"regex_t * reg , const UChar * name , const UChar * name_end , OnigRegion * region"		1211635	3					
ANR	1211740	Parameter	regex_t * reg	850:28:19196:19207	1211635	0	True				
ANR	1211741	ParameterType	regex_t *		1211635	0					
ANR	1211742	Identifier	reg		1211635	1					
ANR	1211743	Parameter	const UChar * name	850:42:19210:19226	1211635	1	True				
ANR	1211744	ParameterType	const UChar *		1211635	0					
ANR	1211745	Identifier	name		1211635	1					
ANR	1211746	Parameter	const UChar * name_end	851:7:19236:19256	1211635	2	True				
ANR	1211747	ParameterType	const UChar *		1211635	0					
ANR	1211748	Identifier	name_end		1211635	1					
ANR	1211749	Parameter	OnigRegion * region	851:30:19259:19276	1211635	3	True				
ANR	1211750	ParameterType	OnigRegion *		1211635	0					
ANR	1211751	Identifier	region		1211635	1					
ANR	1211752	CFGEntryNode	ENTRY		1211635		True				
ANR	1211753	CFGExitNode	EXIT		1211635		True				
ANR	1211754	Symbol	* nums		1211635						
ANR	1211755	Symbol	IS_NOT_NULL		1211635						
ANR	1211756	Symbol	* * i		1211635						
ANR	1211757	Symbol	* * nums		1211635						
ANR	1211758	Symbol	onig_name_to_group_numbers		1211635						
ANR	1211759	Symbol	* region -> beg		1211635						
ANR	1211760	Symbol	i		1211635						
ANR	1211761	Symbol	& nums		1211635						
ANR	1211762	Symbol	region -> beg		1211635						
ANR	1211763	Symbol	* region		1211635						
ANR	1211764	Symbol	n		1211635						
ANR	1211765	Symbol	ONIGERR_PARSER_BUG		1211635						
ANR	1211766	Symbol	ONIG_REGION_NOTPOS		1211635						
ANR	1211767	Symbol	* i		1211635						
ANR	1211768	Symbol	reg		1211635						
ANR	1211769	Symbol	name		1211635						
ANR	1211770	Symbol	* n		1211635						
ANR	1211771	Symbol	* * region		1211635						
ANR	1211772	Symbol	region		1211635						
ANR	1211773	Symbol	name_end		1211635						
ANR	1211774	Symbol	nums		1211635						
ANR	1211775	Function	onig_name_to_group_numbers	875:0:19698:19845							
ANR	1211776	FunctionDef	"onig_name_to_group_numbers (regex_t * reg , const UChar * name , const UChar * name_end , int * * nums)"		1211775	0					
ANR	1211777	CompoundStatement		878:0:19810:19845	1211775	0					
ANR	1211778	ReturnStatement	return ONIG_NO_SUPPORT_CONFIG ;	879:2:19814:19843	1211775	0	True				
ANR	1211779	Identifier	ONIG_NO_SUPPORT_CONFIG		1211775	0					
ANR	1211780	ReturnType	extern int		1211775	1					
ANR	1211781	Identifier	onig_name_to_group_numbers		1211775	2					
ANR	1211782	ParameterList	"regex_t * reg , const UChar * name , const UChar * name_end , int * * nums"		1211775	3					
ANR	1211783	Parameter	regex_t * reg	876:27:19736:19747	1211775	0	True				
ANR	1211784	ParameterType	regex_t *		1211775	0					
ANR	1211785	Identifier	reg		1211775	1					
ANR	1211786	Parameter	const UChar * name	876:41:19750:19766	1211775	1	True				
ANR	1211787	ParameterType	const UChar *		1211775	0					
ANR	1211788	Identifier	name		1211775	1					
ANR	1211789	Parameter	const UChar * name_end	877:6:19775:19795	1211775	2	True				
ANR	1211790	ParameterType	const UChar *		1211775	0					
ANR	1211791	Identifier	name_end		1211775	1					
ANR	1211792	Parameter	int * * nums	877:29:19798:19807	1211775	3	True				
ANR	1211793	ParameterType	int * *		1211775	0					
ANR	1211794	Identifier	nums		1211775	1					
ANR	1211795	CFGEntryNode	ENTRY		1211775		True				
ANR	1211796	CFGExitNode	EXIT		1211775		True				
ANR	1211797	Symbol	ONIG_NO_SUPPORT_CONFIG		1211775						
ANR	1211798	Symbol	reg		1211775						
ANR	1211799	Symbol	name		1211775						
ANR	1211800	Symbol	name_end		1211775						
ANR	1211801	Symbol	nums		1211775						
ANR	1211802	Function	onig_name_to_backref_number	882:0:19848:20005							
ANR	1211803	FunctionDef	"onig_name_to_backref_number (regex_t * reg , const UChar * name , const UChar * name_end , OnigRegion * region)"		1211802	0					
ANR	1211804	CompoundStatement		885:0:19970:20005	1211802	0					
ANR	1211805	ReturnStatement	return ONIG_NO_SUPPORT_CONFIG ;	886:2:19974:20003	1211802	0	True				
ANR	1211806	Identifier	ONIG_NO_SUPPORT_CONFIG		1211802	0					
ANR	1211807	ReturnType	extern int		1211802	1					
ANR	1211808	Identifier	onig_name_to_backref_number		1211802	2					
ANR	1211809	ParameterList	"regex_t * reg , const UChar * name , const UChar * name_end , OnigRegion * region"		1211802	3					
ANR	1211810	Parameter	regex_t * reg	883:28:19887:19898	1211802	0	True				
ANR	1211811	ParameterType	regex_t *		1211802	0					
ANR	1211812	Identifier	reg		1211802	1					
ANR	1211813	Parameter	const UChar * name	883:42:19901:19917	1211802	1	True				
ANR	1211814	ParameterType	const UChar *		1211802	0					
ANR	1211815	Identifier	name		1211802	1					
ANR	1211816	Parameter	const UChar * name_end	884:7:19927:19947	1211802	2	True				
ANR	1211817	ParameterType	const UChar *		1211802	0					
ANR	1211818	Identifier	name_end		1211802	1					
ANR	1211819	Parameter	OnigRegion * region	884:30:19950:19967	1211802	3	True				
ANR	1211820	ParameterType	OnigRegion *		1211802	0					
ANR	1211821	Identifier	region		1211802	1					
ANR	1211822	CFGEntryNode	ENTRY		1211802		True				
ANR	1211823	CFGExitNode	EXIT		1211802		True				
ANR	1211824	Symbol	ONIG_NO_SUPPORT_CONFIG		1211802						
ANR	1211825	Symbol	reg		1211802						
ANR	1211826	Symbol	name		1211802						
ANR	1211827	Symbol	region		1211802						
ANR	1211828	Symbol	name_end		1211802						
ANR	1211829	Function	onig_foreach_name	889:0:20008:20164							
ANR	1211830	FunctionDef	"onig_foreach_name (regex_t * reg , int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * ) , void * arg)"		1211829	0					
ANR	1211831	CompoundStatement		892:0:20129:20164	1211829	0					
ANR	1211832	ReturnStatement	return ONIG_NO_SUPPORT_CONFIG ;	893:2:20133:20162	1211829	0	True				
ANR	1211833	Identifier	ONIG_NO_SUPPORT_CONFIG		1211829	0					
ANR	1211834	ReturnType	extern int		1211829	1					
ANR	1211835	Identifier	onig_foreach_name		1211829	2					
ANR	1211836	ParameterList	"regex_t * reg , int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * ) , void * arg"		1211829	3					
ANR	1211837	Parameter	regex_t * reg	890:18:20037:20048	1211829	0	True				
ANR	1211838	ParameterType	regex_t *		1211829	0					
ANR	1211839	Identifier	reg		1211829	1					
ANR	1211840	Parameter	"int ( * func ) ( const UChar * , const UChar * , int , int * , regex_t * , void * )"	891:2:20053:20115	1211829	1	True				
ANR	1211841	ParameterType	"(( const UChar * , const UChar * , int , int * , regex_t * , void * ) int) *"		1211829	0					
ANR	1211842	Identifier	func		1211829	1					
ANR	1211843	Parameter	void * arg	891:67:20118:20126	1211829	2	True				
ANR	1211844	ParameterType	void *		1211829	0					
ANR	1211845	Identifier	arg		1211829	1					
ANR	1211846	CFGEntryNode	ENTRY		1211829		True				
ANR	1211847	CFGExitNode	EXIT		1211829		True				
ANR	1211848	Symbol	func		1211829						
ANR	1211849	Symbol	ONIG_NO_SUPPORT_CONFIG		1211829						
ANR	1211850	Symbol	reg		1211829						
ANR	1211851	Symbol	arg		1211829						
ANR	1211852	Function	onig_number_of_names	896:0:20167:20227							
ANR	1211853	FunctionDef	onig_number_of_names (regex_t * reg)		1211852	0					
ANR	1211854	CompoundStatement		898:0:20213:20227	1211852	0					
ANR	1211855	ReturnStatement	return 0 ;	899:2:20217:20225	1211852	0	True				
ANR	1211856	PrimaryExpression	0		1211852	0					
ANR	1211857	ReturnType	extern int		1211852	1					
ANR	1211858	Identifier	onig_number_of_names		1211852	2					
ANR	1211859	ParameterList	regex_t * reg		1211852	3					
ANR	1211860	Parameter	regex_t * reg	897:21:20199:20210	1211852	0	True				
ANR	1211861	ParameterType	regex_t *		1211852	0					
ANR	1211862	Identifier	reg		1211852	1					
ANR	1211863	CFGEntryNode	ENTRY		1211852		True				
ANR	1211864	CFGExitNode	EXIT		1211852		True				
ANR	1211865	Symbol	reg		1211852						
ANR	1211866	Function	onig_noname_group_capture_is_active	903:0:20264:20652							
ANR	1211867	FunctionDef	onig_noname_group_capture_is_active (regex_t * reg)		1211866	0					
ANR	1211868	CompoundStatement		905:0:20325:20652	1211866	0					
ANR	1211869	IfStatement	"if ( ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_DONT_CAPTURE_GROUP ) )"		1211866	0					
ANR	1211870	Condition	"ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_DONT_CAPTURE_GROUP )"	906:6:20333:20395	1211866	0	True				
ANR	1211871	CallExpression	"ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_DONT_CAPTURE_GROUP )"		1211866	0					
ANR	1211872	Callee	ONIG_IS_OPTION_ON		1211866	0					
ANR	1211873	Identifier	ONIG_IS_OPTION_ON		1211866	0					
ANR	1211874	ArgumentList	reg -> options		1211866	1					
ANR	1211875	Argument	reg -> options		1211866	0					
ANR	1211876	PtrMemberAccess	reg -> options		1211866	0					
ANR	1211877	Identifier	reg		1211866	0					
ANR	1211878	Identifier	options		1211866	1					
ANR	1211879	Argument	ONIG_OPTION_DONT_CAPTURE_GROUP		1211866	1					
ANR	1211880	Identifier	ONIG_OPTION_DONT_CAPTURE_GROUP		1211866	0					
ANR	1211881	ReturnStatement	return 0 ;	907:4:20402:20410	1211866	1	True				
ANR	1211882	PrimaryExpression	0		1211866	0					
ANR	1211883	IfStatement	"if ( onig_number_of_names ( reg ) > 0 && IS_SYNTAX_BV ( reg -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP ) )"		1211866	1					
ANR	1211884	Condition	"onig_number_of_names ( reg ) > 0 && IS_SYNTAX_BV ( reg -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"	910:6:20442:20609	1211866	0	True				
ANR	1211885	AndExpression	"onig_number_of_names ( reg ) > 0 && IS_SYNTAX_BV ( reg -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		1211866	0		&&			
ANR	1211886	RelationalExpression	onig_number_of_names ( reg ) > 0		1211866	0		>			
ANR	1211887	CallExpression	onig_number_of_names ( reg )		1211866	0					
ANR	1211888	Callee	onig_number_of_names		1211866	0					
ANR	1211889	Identifier	onig_number_of_names		1211866	0					
ANR	1211890	ArgumentList	reg		1211866	1					
ANR	1211891	Argument	reg		1211866	0					
ANR	1211892	Identifier	reg		1211866	0					
ANR	1211893	PrimaryExpression	0		1211866	1					
ANR	1211894	AndExpression	"IS_SYNTAX_BV ( reg -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP ) && ! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		1211866	1		&&			
ANR	1211895	CallExpression	"IS_SYNTAX_BV ( reg -> syntax , ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP )"		1211866	0					
ANR	1211896	Callee	IS_SYNTAX_BV		1211866	0					
ANR	1211897	Identifier	IS_SYNTAX_BV		1211866	0					
ANR	1211898	ArgumentList	reg -> syntax		1211866	1					
ANR	1211899	Argument	reg -> syntax		1211866	0					
ANR	1211900	PtrMemberAccess	reg -> syntax		1211866	0					
ANR	1211901	Identifier	reg		1211866	0					
ANR	1211902	Identifier	syntax		1211866	1					
ANR	1211903	Argument	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		1211866	1					
ANR	1211904	Identifier	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		1211866	0					
ANR	1211905	UnaryOperationExpression	"! ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		1211866	1					
ANR	1211906	UnaryOperator	!		1211866	0					
ANR	1211907	CallExpression	"ONIG_IS_OPTION_ON ( reg -> options , ONIG_OPTION_CAPTURE_GROUP )"		1211866	1					
ANR	1211908	Callee	ONIG_IS_OPTION_ON		1211866	0					
ANR	1211909	Identifier	ONIG_IS_OPTION_ON		1211866	0					
ANR	1211910	ArgumentList	reg -> options		1211866	1					
ANR	1211911	Argument	reg -> options		1211866	0					
ANR	1211912	PtrMemberAccess	reg -> options		1211866	0					
ANR	1211913	Identifier	reg		1211866	0					
ANR	1211914	Identifier	options		1211866	1					
ANR	1211915	Argument	ONIG_OPTION_CAPTURE_GROUP		1211866	1					
ANR	1211916	Identifier	ONIG_OPTION_CAPTURE_GROUP		1211866	0					
ANR	1211917	CompoundStatement		8:67:286:286	1211866	1					
ANR	1211918	ReturnStatement	return 0 ;	913:4:20618:20626	1211866	0	True				
ANR	1211919	PrimaryExpression	0		1211866	0					
ANR	1211920	ReturnStatement	return 1 ;	917:2:20642:20650	1211866	2	True				
ANR	1211921	PrimaryExpression	1		1211866	0					
ANR	1211922	ReturnType	extern int		1211866	1					
ANR	1211923	Identifier	onig_noname_group_capture_is_active		1211866	2					
ANR	1211924	ParameterList	regex_t * reg		1211866	3					
ANR	1211925	Parameter	regex_t * reg	904:36:20311:20322	1211866	0	True				
ANR	1211926	ParameterType	regex_t *		1211866	0					
ANR	1211927	Identifier	reg		1211866	1					
ANR	1211928	CFGEntryNode	ENTRY		1211866		True				
ANR	1211929	CFGExitNode	EXIT		1211866		True				
ANR	1211930	Symbol	ONIG_IS_OPTION_ON		1211866						
ANR	1211931	Symbol	ONIG_SYN_CAPTURE_ONLY_NAMED_GROUP		1211866						
ANR	1211932	Symbol	reg		1211866						
ANR	1211933	Symbol	reg -> syntax		1211866						
ANR	1211934	Symbol	reg -> options		1211866						
ANR	1211935	Symbol	IS_SYNTAX_BV		1211866						
ANR	1211936	Symbol	ONIG_OPTION_DONT_CAPTURE_GROUP		1211866						
ANR	1211937	Symbol	ONIG_OPTION_CAPTURE_GROUP		1211866						
ANR	1211938	Symbol	* reg		1211866						
ANR	1211939	Symbol	onig_number_of_names		1211866						
ANR	1211940	Function	scan_env_clear	923:0:20703:21419							
ANR	1211941	FunctionDef	scan_env_clear (ScanEnv * env)		1211940	0					
ANR	1211942	CompoundStatement		925:0:20744:21419	1211940	0					
ANR	1211943	IdentifierDeclStatement	int i ;	926:2:20748:20753	1211940	0	True				
ANR	1211944	IdentifierDecl	i		1211940	0					
ANR	1211945	IdentifierDeclType	int		1211940	0					
ANR	1211946	Identifier	i		1211940	1					
ANR	1211947	ExpressionStatement	BIT_STATUS_CLEAR ( env -> capture_history )	928:2:20758:20796	1211940	1	True				
ANR	1211948	CallExpression	BIT_STATUS_CLEAR ( env -> capture_history )		1211940	0					
ANR	1211949	Callee	BIT_STATUS_CLEAR		1211940	0					
ANR	1211950	Identifier	BIT_STATUS_CLEAR		1211940	0					
ANR	1211951	ArgumentList	env -> capture_history		1211940	1					
ANR	1211952	Argument	env -> capture_history		1211940	0					
ANR	1211953	PtrMemberAccess	env -> capture_history		1211940	0					
ANR	1211954	Identifier	env		1211940	0					
ANR	1211955	Identifier	capture_history		1211940	1					
ANR	1211956	ExpressionStatement	BIT_STATUS_CLEAR ( env -> bt_mem_start )	929:2:20800:20835	1211940	2	True				
ANR	1211957	CallExpression	BIT_STATUS_CLEAR ( env -> bt_mem_start )		1211940	0					
ANR	1211958	Callee	BIT_STATUS_CLEAR		1211940	0					
ANR	1211959	Identifier	BIT_STATUS_CLEAR		1211940	0					
ANR	1211960	ArgumentList	env -> bt_mem_start		1211940	1					
ANR	1211961	Argument	env -> bt_mem_start		1211940	0					
ANR	1211962	PtrMemberAccess	env -> bt_mem_start		1211940	0					
ANR	1211963	Identifier	env		1211940	0					
ANR	1211964	Identifier	bt_mem_start		1211940	1					
ANR	1211965	ExpressionStatement	BIT_STATUS_CLEAR ( env -> bt_mem_end )	930:2:20839:20872	1211940	3	True				
ANR	1211966	CallExpression	BIT_STATUS_CLEAR ( env -> bt_mem_end )		1211940	0					
ANR	1211967	Callee	BIT_STATUS_CLEAR		1211940	0					
ANR	1211968	Identifier	BIT_STATUS_CLEAR		1211940	0					
ANR	1211969	ArgumentList	env -> bt_mem_end		1211940	1					
ANR	1211970	Argument	env -> bt_mem_end		1211940	0					
ANR	1211971	PtrMemberAccess	env -> bt_mem_end		1211940	0					
ANR	1211972	Identifier	env		1211940	0					
ANR	1211973	Identifier	bt_mem_end		1211940	1					
ANR	1211974	ExpressionStatement	BIT_STATUS_CLEAR ( env -> backrefed_mem )	931:2:20876:20912	1211940	4	True				
ANR	1211975	CallExpression	BIT_STATUS_CLEAR ( env -> backrefed_mem )		1211940	0					
ANR	1211976	Callee	BIT_STATUS_CLEAR		1211940	0					
ANR	1211977	Identifier	BIT_STATUS_CLEAR		1211940	0					
ANR	1211978	ArgumentList	env -> backrefed_mem		1211940	1					
ANR	1211979	Argument	env -> backrefed_mem		1211940	0					
ANR	1211980	PtrMemberAccess	env -> backrefed_mem		1211940	0					
ANR	1211981	Identifier	env		1211940	0					
ANR	1211982	Identifier	backrefed_mem		1211940	1					
ANR	1211983	ExpressionStatement	env -> error = ( UChar * ) NULL	932:2:20916:20947	1211940	5	True				
ANR	1211984	AssignmentExpression	env -> error = ( UChar * ) NULL		1211940	0		=			
ANR	1211985	PtrMemberAccess	env -> error		1211940	0					
ANR	1211986	Identifier	env		1211940	0					
ANR	1211987	Identifier	error		1211940	1					
ANR	1211988	CastExpression	( UChar * ) NULL		1211940	1					
ANR	1211989	CastTarget	UChar *		1211940	0					
ANR	1211990	Identifier	NULL		1211940	1					
ANR	1211991	ExpressionStatement	env -> error_end = ( UChar * ) NULL	933:2:20951:20982	1211940	6	True				
ANR	1211992	AssignmentExpression	env -> error_end = ( UChar * ) NULL		1211940	0		=			
ANR	1211993	PtrMemberAccess	env -> error_end		1211940	0					
ANR	1211994	Identifier	env		1211940	0					
ANR	1211995	Identifier	error_end		1211940	1					
ANR	1211996	CastExpression	( UChar * ) NULL		1211940	1					
ANR	1211997	CastTarget	UChar *		1211940	0					
ANR	1211998	Identifier	NULL		1211940	1					
ANR	1211999	ExpressionStatement	env -> num_call = 0	934:2:20986:21005	1211940	7	True				
ANR	1212000	AssignmentExpression	env -> num_call = 0		1211940	0		=			
ANR	1212001	PtrMemberAccess	env -> num_call		1211940	0					
ANR	1212002	Identifier	env		1211940	0					
ANR	1212003	Identifier	num_call		1211940	1					
ANR	1212004	PrimaryExpression	0		1211940	1					
ANR	1212005	ExpressionStatement	env -> num_mem = 0	935:2:21009:21028	1211940	8	True				
ANR	1212006	AssignmentExpression	env -> num_mem = 0		1211940	0		=			
ANR	1212007	PtrMemberAccess	env -> num_mem		1211940	0					
ANR	1212008	Identifier	env		1211940	0					
ANR	1212009	Identifier	num_mem		1211940	1					
ANR	1212010	PrimaryExpression	0		1211940	1					
ANR	1212011	ExpressionStatement	env -> num_named = 0	937:2:21055:21074	1211940	9	True				
ANR	1212012	AssignmentExpression	env -> num_named = 0		1211940	0		=			
ANR	1212013	PtrMemberAccess	env -> num_named		1211940	0					
ANR	1212014	Identifier	env		1211940	0					
ANR	1212015	Identifier	num_named		1211940	1					
ANR	1212016	PrimaryExpression	0		1211940	1					
ANR	1212017	ExpressionStatement	env -> mem_alloc = 0	939:2:21085:21111	1211940	10	True				
ANR	1212018	AssignmentExpression	env -> mem_alloc = 0		1211940	0		=			
ANR	1212019	PtrMemberAccess	env -> mem_alloc		1211940	0					
ANR	1212020	Identifier	env		1211940	0					
ANR	1212021	Identifier	mem_alloc		1211940	1					
ANR	1212022	PrimaryExpression	0		1211940	1					
ANR	1212023	ExpressionStatement	env -> mem_nodes_dynamic = ( Node * * ) NULL	940:2:21115:21153	1211940	11	True				
ANR	1212024	AssignmentExpression	env -> mem_nodes_dynamic = ( Node * * ) NULL		1211940	0		=			
ANR	1212025	PtrMemberAccess	env -> mem_nodes_dynamic		1211940	0					
ANR	1212026	Identifier	env		1211940	0					
ANR	1212027	Identifier	mem_nodes_dynamic		1211940	1					
ANR	1212028	CastExpression	( Node * * ) NULL		1211940	1					
ANR	1212029	CastTarget	Node * *		1211940	0					
ANR	1212030	Identifier	NULL		1211940	1					
ANR	1212031	ForStatement	for ( i = 0 ; i < SCANENV_MEMNODES_SIZE ; i ++ )		1211940	12					
ANR	1212032	ForInit	i = 0 ;	942:7:21163:21168	1211940	0	True				
ANR	1212033	AssignmentExpression	i = 0		1211940	0		=			
ANR	1212034	Identifier	i		1211940	0					
ANR	1212035	PrimaryExpression	0		1211940	1					
ANR	1212036	Condition	i < SCANENV_MEMNODES_SIZE	942:14:21170:21194	1211940	1	True				
ANR	1212037	RelationalExpression	i < SCANENV_MEMNODES_SIZE		1211940	0		<			
ANR	1212038	Identifier	i		1211940	0					
ANR	1212039	Identifier	SCANENV_MEMNODES_SIZE		1211940	1					
ANR	1212040	PostIncDecOperationExpression	i ++	942:41:21197:21199	1211940	2	True				
ANR	1212041	Identifier	i		1211940	0					
ANR	1212042	IncDec	++		1211940	1					
ANR	1212043	ExpressionStatement	env -> mem_nodes_static [ i ] = NULL_NODE	943:4:21206:21242	1211940	3	True				
ANR	1212044	AssignmentExpression	env -> mem_nodes_static [ i ] = NULL_NODE		1211940	0		=			
ANR	1212045	ArrayIndexing	env -> mem_nodes_static [ i ]		1211940	0					
ANR	1212046	PtrMemberAccess	env -> mem_nodes_static		1211940	0					
ANR	1212047	Identifier	env		1211940	0					
ANR	1212048	Identifier	mem_nodes_static		1211940	1					
ANR	1212049	Identifier	i		1211940	1					
ANR	1212050	Identifier	NULL_NODE		1211940	1					
ANR	1212051	ExpressionStatement	env -> num_comb_exp_check = 0	946:2:21286:21314	1211940	13	True				
ANR	1212052	AssignmentExpression	env -> num_comb_exp_check = 0		1211940	0		=			
ANR	1212053	PtrMemberAccess	env -> num_comb_exp_check		1211940	0					
ANR	1212054	Identifier	env		1211940	0					
ANR	1212055	Identifier	num_comb_exp_check		1211940	1					
ANR	1212056	PrimaryExpression	0		1211940	1					
ANR	1212057	ExpressionStatement	env -> comb_exp_max_regnum = 0	947:2:21318:21346	1211940	14	True				
ANR	1212058	AssignmentExpression	env -> comb_exp_max_regnum = 0		1211940	0		=			
ANR	1212059	PtrMemberAccess	env -> comb_exp_max_regnum		1211940	0					
ANR	1212060	Identifier	env		1211940	0					
ANR	1212061	Identifier	comb_exp_max_regnum		1211940	1					
ANR	1212062	PrimaryExpression	0		1211940	1					
ANR	1212063	ExpressionStatement	env -> curr_max_regnum = 0	948:2:21350:21378	1211940	15	True				
ANR	1212064	AssignmentExpression	env -> curr_max_regnum = 0		1211940	0		=			
ANR	1212065	PtrMemberAccess	env -> curr_max_regnum		1211940	0					
ANR	1212066	Identifier	env		1211940	0					
ANR	1212067	Identifier	curr_max_regnum		1211940	1					
ANR	1212068	PrimaryExpression	0		1211940	1					
ANR	1212069	ExpressionStatement	env -> has_recursion = 0	949:2:21382:21410	1211940	16	True				
ANR	1212070	AssignmentExpression	env -> has_recursion = 0		1211940	0		=			
ANR	1212071	PtrMemberAccess	env -> has_recursion		1211940	0					
ANR	1212072	Identifier	env		1211940	0					
ANR	1212073	Identifier	has_recursion		1211940	1					
ANR	1212074	PrimaryExpression	0		1211940	1					
ANR	1212075	ReturnType	static void		1211940	1					
ANR	1212076	Identifier	scan_env_clear		1211940	2					
ANR	1212077	ParameterList	ScanEnv * env		1211940	3					
ANR	1212078	Parameter	ScanEnv * env	924:15:20730:20741	1211940	0	True				
ANR	1212079	ParameterType	ScanEnv *		1211940	0					
ANR	1212080	Identifier	env		1211940	1					
ANR	1212081	CFGEntryNode	ENTRY		1211940		True				
ANR	1212082	CFGExitNode	EXIT		1211940		True				
ANR	1212083	Symbol	* * env		1211940						
ANR	1212084	Symbol	env -> bt_mem_start		1211940						
ANR	1212085	Symbol	env -> num_named		1211940						
ANR	1212086	Symbol	env -> num_comb_exp_check		1211940						
ANR	1212087	Symbol	env -> mem_alloc		1211940						
ANR	1212088	Symbol	SCANENV_MEMNODES_SIZE		1211940						
ANR	1212089	Symbol	env -> bt_mem_end		1211940						
ANR	1212090	Symbol	env -> error		1211940						
ANR	1212091	Symbol	env -> mem_nodes_static		1211940						
ANR	1212092	Symbol	env -> comb_exp_max_regnum		1211940						
ANR	1212093	Symbol	env -> curr_max_regnum		1211940						
ANR	1212094	Symbol	env -> capture_history		1211940						
ANR	1212095	Symbol	env -> backrefed_mem		1211940						
ANR	1212096	Symbol	NULL		1211940						
ANR	1212097	Symbol	* env		1211940						
ANR	1212098	Symbol	env -> num_mem		1211940						
ANR	1212099	Symbol	i		1211940						
ANR	1212100	Symbol	env		1211940						
ANR	1212101	Symbol	env -> error_end		1211940						
ANR	1212102	Symbol	env -> has_recursion		1211940						
ANR	1212103	Symbol	* i		1211940						
ANR	1212104	Symbol	env -> num_call		1211940						
ANR	1212105	Symbol	env -> mem_nodes_dynamic		1211940						
ANR	1212106	Symbol	NULL_NODE		1211940						
ANR	1212107	Symbol	* env -> mem_nodes_static		1211940						
ANR	1212108	Function	scan_env_add_mem_entry	953:0:21422:22168							
ANR	1212109	FunctionDef	scan_env_add_mem_entry (ScanEnv * env)		1212108	0					
ANR	1212110	CompoundStatement		955:0:21470:22168	1212108	0					
ANR	1212111	IdentifierDeclStatement	"int i , need , alloc ;"	956:2:21474:21492	1212108	0	True				
ANR	1212112	IdentifierDecl	i		1212108	0					
ANR	1212113	IdentifierDeclType	int		1212108	0					
ANR	1212114	Identifier	i		1212108	1					
ANR	1212115	IdentifierDecl	need		1212108	1					
ANR	1212116	IdentifierDeclType	int		1212108	0					
ANR	1212117	Identifier	need		1212108	1					
ANR	1212118	IdentifierDecl	alloc		1212108	2					
ANR	1212119	IdentifierDeclType	int		1212108	0					
ANR	1212120	Identifier	alloc		1212108	1					
ANR	1212121	IdentifierDeclStatement	Node * * p ;	957:2:21496:21504	1212108	1	True				
ANR	1212122	IdentifierDecl	* * p		1212108	0					
ANR	1212123	IdentifierDeclType	Node * *		1212108	0					
ANR	1212124	Identifier	p		1212108	1					
ANR	1212125	ExpressionStatement	need = env -> num_mem + 1	959:2:21509:21532	1212108	2	True				
ANR	1212126	AssignmentExpression	need = env -> num_mem + 1		1212108	0		=			
ANR	1212127	Identifier	need		1212108	0					
ANR	1212128	AdditiveExpression	env -> num_mem + 1		1212108	1		+			
ANR	1212129	PtrMemberAccess	env -> num_mem		1212108	0					
ANR	1212130	Identifier	env		1212108	0					
ANR	1212131	Identifier	num_mem		1212108	1					
ANR	1212132	PrimaryExpression	1		1212108	1					
ANR	1212133	IfStatement	if ( need >= SCANENV_MEMNODES_SIZE )		1212108	3					
ANR	1212134	Condition	need >= SCANENV_MEMNODES_SIZE	960:6:21540:21568	1212108	0	True				
ANR	1212135	RelationalExpression	need >= SCANENV_MEMNODES_SIZE		1212108	0		>=			
ANR	1212136	Identifier	need		1212108	0					
ANR	1212137	Identifier	SCANENV_MEMNODES_SIZE		1212108	1					
ANR	1212138	CompoundStatement		6:37:100:100	1212108	1					
ANR	1212139	IfStatement	if ( env -> mem_alloc <= need )		1212108	0					
ANR	1212140	Condition	env -> mem_alloc <= need	961:8:21581:21602	1212108	0	True				
ANR	1212141	RelationalExpression	env -> mem_alloc <= need		1212108	0		<=			
ANR	1212142	PtrMemberAccess	env -> mem_alloc		1212108	0					
ANR	1212143	Identifier	env		1212108	0					
ANR	1212144	Identifier	mem_alloc		1212108	1					
ANR	1212145	Identifier	need		1212108	1					
ANR	1212146	CompoundStatement		7:32:134:134	1212108	1					
ANR	1212147	IfStatement	if ( IS_NULL ( env -> mem_nodes_dynamic ) )		1212108	0					
ANR	1212148	Condition	IS_NULL ( env -> mem_nodes_dynamic )	962:10:21617:21647	1212108	0	True				
ANR	1212149	CallExpression	IS_NULL ( env -> mem_nodes_dynamic )		1212108	0					
ANR	1212150	Callee	IS_NULL		1212108	0					
ANR	1212151	Identifier	IS_NULL		1212108	0					
ANR	1212152	ArgumentList	env -> mem_nodes_dynamic		1212108	1					
ANR	1212153	Argument	env -> mem_nodes_dynamic		1212108	0					
ANR	1212154	PtrMemberAccess	env -> mem_nodes_dynamic		1212108	0					
ANR	1212155	Identifier	env		1212108	0					
ANR	1212156	Identifier	mem_nodes_dynamic		1212108	1					
ANR	1212157	CompoundStatement		8:43:179:179	1212108	1					
ANR	1212158	ExpressionStatement	alloc = INIT_SCANENV_MEMNODES_ALLOC_SIZE	963:1:21653:21693	1212108	0	True				
ANR	1212159	AssignmentExpression	alloc = INIT_SCANENV_MEMNODES_ALLOC_SIZE		1212108	0		=			
ANR	1212160	Identifier	alloc		1212108	0					
ANR	1212161	Identifier	INIT_SCANENV_MEMNODES_ALLOC_SIZE		1212108	1					
ANR	1212162	ExpressionStatement	p = ( Node * * ) xmalloc ( sizeof ( Node * ) * alloc )	964:1:21696:21739	1212108	1	True				
ANR	1212163	AssignmentExpression	p = ( Node * * ) xmalloc ( sizeof ( Node * ) * alloc )		1212108	0		=			
ANR	1212164	Identifier	p		1212108	0					
ANR	1212165	CastExpression	( Node * * ) xmalloc ( sizeof ( Node * ) * alloc )		1212108	1					
ANR	1212166	CastTarget	Node * *		1212108	0					
ANR	1212167	CallExpression	xmalloc ( sizeof ( Node * ) * alloc )		1212108	1					
ANR	1212168	Callee	xmalloc		1212108	0					
ANR	1212169	Identifier	xmalloc		1212108	0					
ANR	1212170	ArgumentList	sizeof ( Node * ) * alloc		1212108	1					
ANR	1212171	Argument	sizeof ( Node * ) * alloc		1212108	0					
ANR	1212172	MultiplicativeExpression	sizeof ( Node * ) * alloc		1212108	0		*			
ANR	1212173	SizeofExpression	sizeof ( Node * )		1212108	0					
ANR	1212174	Sizeof	sizeof		1212108	0					
ANR	1212175	SizeofOperand	Node *		1212108	1					
ANR	1212176	Identifier	alloc		1212108	1					
ANR	1212177	ExpressionStatement	"xmemcpy ( p , env -> mem_nodes_static , sizeof ( Node * ) * SCANENV_MEMNODES_SIZE )"	965:1:21742:21816	1212108	2	True				
ANR	1212178	CallExpression	"xmemcpy ( p , env -> mem_nodes_static , sizeof ( Node * ) * SCANENV_MEMNODES_SIZE )"		1212108	0					
ANR	1212179	Callee	xmemcpy		1212108	0					
ANR	1212180	Identifier	xmemcpy		1212108	0					
ANR	1212181	ArgumentList	p		1212108	1					
ANR	1212182	Argument	p		1212108	0					
ANR	1212183	Identifier	p		1212108	0					
ANR	1212184	Argument	env -> mem_nodes_static		1212108	1					
ANR	1212185	PtrMemberAccess	env -> mem_nodes_static		1212108	0					
ANR	1212186	Identifier	env		1212108	0					
ANR	1212187	Identifier	mem_nodes_static		1212108	1					
ANR	1212188	Argument	sizeof ( Node * ) * SCANENV_MEMNODES_SIZE		1212108	2					
ANR	1212189	MultiplicativeExpression	sizeof ( Node * ) * SCANENV_MEMNODES_SIZE		1212108	0		*			
ANR	1212190	SizeofExpression	sizeof ( Node * )		1212108	0					
ANR	1212191	Sizeof	sizeof		1212108	0					
ANR	1212192	SizeofOperand	Node *		1212108	1					
ANR	1212193	Identifier	SCANENV_MEMNODES_SIZE		1212108	1					
ANR	1212194	ElseStatement	else		1212108	0					
ANR	1212195	CompoundStatement		14:11:366:366	1212108	0					
ANR	1212196	ExpressionStatement	alloc = env -> mem_alloc * 2	969:1:21840:21866	1212108	0	True				
ANR	1212197	AssignmentExpression	alloc = env -> mem_alloc * 2		1212108	0		=			
ANR	1212198	Identifier	alloc		1212108	0					
ANR	1212199	MultiplicativeExpression	env -> mem_alloc * 2		1212108	1		*			
ANR	1212200	PtrMemberAccess	env -> mem_alloc		1212108	0					
ANR	1212201	Identifier	env		1212108	0					
ANR	1212202	Identifier	mem_alloc		1212108	1					
ANR	1212203	PrimaryExpression	2		1212108	1					
ANR	1212204	ExpressionStatement	"p = ( Node * * ) xrealloc ( env -> mem_nodes_dynamic , sizeof ( Node * ) * alloc )"	970:1:21869:21937	1212108	1	True				
ANR	1212205	AssignmentExpression	"p = ( Node * * ) xrealloc ( env -> mem_nodes_dynamic , sizeof ( Node * ) * alloc )"		1212108	0		=			
ANR	1212206	Identifier	p		1212108	0					
ANR	1212207	CastExpression	"( Node * * ) xrealloc ( env -> mem_nodes_dynamic , sizeof ( Node * ) * alloc )"		1212108	1					
ANR	1212208	CastTarget	Node * *		1212108	0					
ANR	1212209	CallExpression	"xrealloc ( env -> mem_nodes_dynamic , sizeof ( Node * ) * alloc )"		1212108	1					
ANR	1212210	Callee	xrealloc		1212108	0					
ANR	1212211	Identifier	xrealloc		1212108	0					
ANR	1212212	ArgumentList	env -> mem_nodes_dynamic		1212108	1					
ANR	1212213	Argument	env -> mem_nodes_dynamic		1212108	0					
ANR	1212214	PtrMemberAccess	env -> mem_nodes_dynamic		1212108	0					
ANR	1212215	Identifier	env		1212108	0					
ANR	1212216	Identifier	mem_nodes_dynamic		1212108	1					
ANR	1212217	Argument	sizeof ( Node * ) * alloc		1212108	1					
ANR	1212218	MultiplicativeExpression	sizeof ( Node * ) * alloc		1212108	0		*			
ANR	1212219	SizeofExpression	sizeof ( Node * )		1212108	0					
ANR	1212220	Sizeof	sizeof		1212108	0					
ANR	1212221	SizeofOperand	Node *		1212108	1					
ANR	1212222	Identifier	alloc		1212108	1					
ANR	1212223	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( p )	972:6:21953:21980	1212108	1	True				
ANR	1212224	CallExpression	CHECK_NULL_RETURN_MEMERR ( p )		1212108	0					
ANR	1212225	Callee	CHECK_NULL_RETURN_MEMERR		1212108	0					
ANR	1212226	Identifier	CHECK_NULL_RETURN_MEMERR		1212108	0					
ANR	1212227	ArgumentList	p		1212108	1					
ANR	1212228	Argument	p		1212108	0					
ANR	1212229	Identifier	p		1212108	0					
ANR	1212230	ForStatement	for ( i = env -> num_mem + 1 ; i < alloc ; i ++ )		1212108	2					
ANR	1212231	ForInit	i = env -> num_mem + 1 ;	974:11:21994:22014	1212108	0	True				
ANR	1212232	AssignmentExpression	i = env -> num_mem + 1		1212108	0		=			
ANR	1212233	Identifier	i		1212108	0					
ANR	1212234	AdditiveExpression	env -> num_mem + 1		1212108	1		+			
ANR	1212235	PtrMemberAccess	env -> num_mem		1212108	0					
ANR	1212236	Identifier	env		1212108	0					
ANR	1212237	Identifier	num_mem		1212108	1					
ANR	1212238	PrimaryExpression	1		1212108	1					
ANR	1212239	Condition	i < alloc	974:33:22016:22024	1212108	1	True				
ANR	1212240	RelationalExpression	i < alloc		1212108	0		<			
ANR	1212241	Identifier	i		1212108	0					
ANR	1212242	Identifier	alloc		1212108	1					
ANR	1212243	PostIncDecOperationExpression	i ++	974:44:22027:22029	1212108	2	True				
ANR	1212244	Identifier	i		1212108	0					
ANR	1212245	IncDec	++		1212108	1					
ANR	1212246	ExpressionStatement	p [ i ] = NULL_NODE	975:1:22033:22049	1212108	3	True				
ANR	1212247	AssignmentExpression	p [ i ] = NULL_NODE		1212108	0		=			
ANR	1212248	ArrayIndexing	p [ i ]		1212108	0					
ANR	1212249	Identifier	p		1212108	0					
ANR	1212250	Identifier	i		1212108	1					
ANR	1212251	Identifier	NULL_NODE		1212108	1					
ANR	1212252	ExpressionStatement	env -> mem_nodes_dynamic = p	977:6:22058:22084	1212108	3	True				
ANR	1212253	AssignmentExpression	env -> mem_nodes_dynamic = p		1212108	0		=			
ANR	1212254	PtrMemberAccess	env -> mem_nodes_dynamic		1212108	0					
ANR	1212255	Identifier	env		1212108	0					
ANR	1212256	Identifier	mem_nodes_dynamic		1212108	1					
ANR	1212257	Identifier	p		1212108	1					
ANR	1212258	ExpressionStatement	env -> mem_alloc = alloc	978:6:22092:22114	1212108	4	True				
ANR	1212259	AssignmentExpression	env -> mem_alloc = alloc		1212108	0		=			
ANR	1212260	PtrMemberAccess	env -> mem_alloc		1212108	0					
ANR	1212261	Identifier	env		1212108	0					
ANR	1212262	Identifier	mem_alloc		1212108	1					
ANR	1212263	Identifier	alloc		1212108	1					
ANR	1212264	ExpressionStatement	env -> num_mem ++	982:2:22129:22143	1212108	4	True				
ANR	1212265	PostIncDecOperationExpression	env -> num_mem ++		1212108	0					
ANR	1212266	PtrMemberAccess	env -> num_mem		1212108	0					
ANR	1212267	Identifier	env		1212108	0					
ANR	1212268	Identifier	num_mem		1212108	1					
ANR	1212269	IncDec	++		1212108	1					
ANR	1212270	ReturnStatement	return env -> num_mem ;	983:2:22147:22166	1212108	5	True				
ANR	1212271	PtrMemberAccess	env -> num_mem		1212108	0					
ANR	1212272	Identifier	env		1212108	0					
ANR	1212273	Identifier	num_mem		1212108	1					
ANR	1212274	ReturnType	static int		1212108	1					
ANR	1212275	Identifier	scan_env_add_mem_entry		1212108	2					
ANR	1212276	ParameterList	ScanEnv * env		1212108	3					
ANR	1212277	Parameter	ScanEnv * env	954:23:21456:21467	1212108	0	True				
ANR	1212278	ParameterType	ScanEnv *		1212108	0					
ANR	1212279	Identifier	env		1212108	1					
ANR	1212280	CFGEntryNode	ENTRY		1212108		True				
ANR	1212281	CFGExitNode	EXIT		1212108		True				
ANR	1212282	Symbol	need		1212108						
ANR	1212283	Symbol	env -> num_mem		1212108						
ANR	1212284	Symbol	* env		1212108						
ANR	1212285	Symbol	i		1212108						
ANR	1212286	Symbol	env		1212108						
ANR	1212287	Symbol	env -> mem_alloc		1212108						
ANR	1212288	Symbol	INIT_SCANENV_MEMNODES_ALLOC_SIZE		1212108						
ANR	1212289	Symbol	SCANENV_MEMNODES_SIZE		1212108						
ANR	1212290	Symbol	p		1212108						
ANR	1212291	Symbol	* i		1212108						
ANR	1212292	Symbol	IS_NULL		1212108						
ANR	1212293	Symbol	xmalloc		1212108						
ANR	1212294	Symbol	env -> mem_nodes_static		1212108						
ANR	1212295	Symbol	env -> mem_nodes_dynamic		1212108						
ANR	1212296	Symbol	* p		1212108						
ANR	1212297	Symbol	alloc		1212108						
ANR	1212298	Symbol	xrealloc		1212108						
ANR	1212299	Symbol	NULL_NODE		1212108						
ANR	1212300	Function	scan_env_set_mem_node	986:0:22171:22358							
ANR	1212301	FunctionDef	"scan_env_set_mem_node (ScanEnv * env , int num , Node * node)"		1212300	0					
ANR	1212302	CompoundStatement		988:0:22239:22358	1212300	0					
ANR	1212303	IfStatement	if ( env -> num_mem >= num )		1212300	0					
ANR	1212304	Condition	env -> num_mem >= num	989:6:22247:22265	1212300	0	True				
ANR	1212305	RelationalExpression	env -> num_mem >= num		1212300	0		>=			
ANR	1212306	PtrMemberAccess	env -> num_mem		1212300	0					
ANR	1212307	Identifier	env		1212300	0					
ANR	1212308	Identifier	num_mem		1212300	1					
ANR	1212309	Identifier	num		1212300	1					
ANR	1212310	ExpressionStatement	SCANENV_MEM_NODES ( env ) [ num ] = node	990:4:22272:22306	1212300	1	True				
ANR	1212311	AssignmentExpression	SCANENV_MEM_NODES ( env ) [ num ] = node		1212300	0		=			
ANR	1212312	ArrayIndexing	SCANENV_MEM_NODES ( env ) [ num ]		1212300	0					
ANR	1212313	CallExpression	SCANENV_MEM_NODES ( env )		1212300	0					
ANR	1212314	Callee	SCANENV_MEM_NODES		1212300	0					
ANR	1212315	Identifier	SCANENV_MEM_NODES		1212300	0					
ANR	1212316	ArgumentList	env		1212300	1					
ANR	1212317	Argument	env		1212300	0					
ANR	1212318	Identifier	env		1212300	0					
ANR	1212319	Identifier	num		1212300	1					
ANR	1212320	Identifier	node		1212300	1					
ANR	1212321	ElseStatement	else		1212300	0					
ANR	1212322	ReturnStatement	return ONIGERR_PARSER_BUG ;	992:4:22319:22344	1212300	0	True				
ANR	1212323	Identifier	ONIGERR_PARSER_BUG		1212300	0					
ANR	1212324	ReturnStatement	return 0 ;	993:2:22348:22356	1212300	1	True				
ANR	1212325	PrimaryExpression	0		1212300	0					
ANR	1212326	ReturnType	static int		1212300	1					
ANR	1212327	Identifier	scan_env_set_mem_node		1212300	2					
ANR	1212328	ParameterList	"ScanEnv * env , int num , Node * node"		1212300	3					
ANR	1212329	Parameter	ScanEnv * env	987:22:22204:22215	1212300	0	True				
ANR	1212330	ParameterType	ScanEnv *		1212300	0					
ANR	1212331	Identifier	env		1212300	1					
ANR	1212332	Parameter	int num	987:36:22218:22224	1212300	1	True				
ANR	1212333	ParameterType	int		1212300	0					
ANR	1212334	Identifier	num		1212300	1					
ANR	1212335	Parameter	Node * node	987:45:22227:22236	1212300	2	True				
ANR	1212336	ParameterType	Node *		1212300	0					
ANR	1212337	Identifier	node		1212300	1					
ANR	1212338	CFGEntryNode	ENTRY		1212300		True				
ANR	1212339	CFGExitNode	EXIT		1212300		True				
ANR	1212340	Symbol	* num		1212300						
ANR	1212341	Symbol	* SCANENV_MEM_NODES		1212300						
ANR	1212342	Symbol	node		1212300						
ANR	1212343	Symbol	num		1212300						
ANR	1212344	Symbol	env -> num_mem		1212300						
ANR	1212345	Symbol	* env		1212300						
ANR	1212346	Symbol	SCANENV_MEM_NODES		1212300						
ANR	1212347	Symbol	env		1212300						
ANR	1212348	Symbol	ONIGERR_PARSER_BUG		1212300						
ANR	1212349	ClassDef	_FreeNode	998:8:22405:22460							
ANR	1212350	DeclStmt									
ANR	1212351	Decl							struct _FreeNode	struct _FreeNode *	next
ANR	1212352	DeclStmt									
ANR	1212353	Decl							_FreeNode	_FreeNode	FreeNode
ANR	1212354	DeclStmt									
ANR	1212355	Decl							FreeNode	FreeNode *	FreeNodeList
ANR	1212356	Function	onig_node_free	1005:0:22521:23982							
ANR	1212357	FunctionDef	onig_node_free (Node * node)		1212356	0					
ANR	1212358	CompoundStatement		1007:0:22560:23982	1212356	0					
ANR	1212359	Label	start :	1008:1:22563:22568	1212356	0	True				
ANR	1212360	Identifier	start		1212356	0					
ANR	1212361	IfStatement	if ( IS_NULL ( node ) )		1212356	1					
ANR	1212362	Condition	IS_NULL ( node )	1009:6:22576:22588	1212356	0	True				
ANR	1212363	CallExpression	IS_NULL ( node )		1212356	0					
ANR	1212364	Callee	IS_NULL		1212356	0					
ANR	1212365	Identifier	IS_NULL		1212356	0					
ANR	1212366	ArgumentList	node		1212356	1					
ANR	1212367	Argument	node		1212356	0					
ANR	1212368	Identifier	node		1212356	0					
ANR	1212369	ReturnStatement	return ;	1009:21:22591:22598	1212356	1	True				
ANR	1212370	SwitchStatement	switch ( NTYPE ( node ) )		1212356	2					
ANR	1212371	Condition	NTYPE ( node )	1011:10:22611:22621	1212356	0	True				
ANR	1212372	CallExpression	NTYPE ( node )		1212356	0					
ANR	1212373	Callee	NTYPE		1212356	0					
ANR	1212374	Identifier	NTYPE		1212356	0					
ANR	1212375	ArgumentList	node		1212356	1					
ANR	1212376	Argument	node		1212356	0					
ANR	1212377	Identifier	node		1212356	0					
ANR	1212378	CompoundStatement		5:23:63:63	1212356	1					
ANR	1212379	Label	case NT_STR :	1012:2:22628:22639	1212356	0	True				
ANR	1212380	Identifier	NT_STR		1212356	0					
ANR	1212381	IfStatement	if ( NSTR ( node ) -> capa != 0 && IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf )		1212356	1					
ANR	1212382	Condition	NSTR ( node ) -> capa != 0 && IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf	1013:8:22649:22736	1212356	0	True				
ANR	1212383	AndExpression	NSTR ( node ) -> capa != 0 && IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf		1212356	0		&&			
ANR	1212384	EqualityExpression	NSTR ( node ) -> capa != 0		1212356	0		!=			
ANR	1212385	PtrMemberAccess	NSTR ( node ) -> capa		1212356	0					
ANR	1212386	CallExpression	NSTR ( node )		1212356	0					
ANR	1212387	Callee	NSTR		1212356	0					
ANR	1212388	Identifier	NSTR		1212356	0					
ANR	1212389	ArgumentList	node		1212356	1					
ANR	1212390	Argument	node		1212356	0					
ANR	1212391	Identifier	node		1212356	0					
ANR	1212392	Identifier	capa		1212356	1					
ANR	1212393	PrimaryExpression	0		1212356	1					
ANR	1212394	AndExpression	IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf		1212356	1		&&			
ANR	1212395	CallExpression	IS_NOT_NULL ( NSTR ( node ) -> s )		1212356	0					
ANR	1212396	Callee	IS_NOT_NULL		1212356	0					
ANR	1212397	Identifier	IS_NOT_NULL		1212356	0					
ANR	1212398	ArgumentList	NSTR ( node ) -> s		1212356	1					
ANR	1212399	Argument	NSTR ( node ) -> s		1212356	0					
ANR	1212400	PtrMemberAccess	NSTR ( node ) -> s		1212356	0					
ANR	1212401	CallExpression	NSTR ( node )		1212356	0					
ANR	1212402	Callee	NSTR		1212356	0					
ANR	1212403	Identifier	NSTR		1212356	0					
ANR	1212404	ArgumentList	node		1212356	1					
ANR	1212405	Argument	node		1212356	0					
ANR	1212406	Identifier	node		1212356	0					
ANR	1212407	Identifier	s		1212356	1					
ANR	1212408	EqualityExpression	NSTR ( node ) -> s != NSTR ( node ) -> buf		1212356	1		!=			
ANR	1212409	PtrMemberAccess	NSTR ( node ) -> s		1212356	0					
ANR	1212410	CallExpression	NSTR ( node )		1212356	0					
ANR	1212411	Callee	NSTR		1212356	0					
ANR	1212412	Identifier	NSTR		1212356	0					
ANR	1212413	ArgumentList	node		1212356	1					
ANR	1212414	Argument	node		1212356	0					
ANR	1212415	Identifier	node		1212356	0					
ANR	1212416	Identifier	s		1212356	1					
ANR	1212417	PtrMemberAccess	NSTR ( node ) -> buf		1212356	1					
ANR	1212418	CallExpression	NSTR ( node )		1212356	0					
ANR	1212419	Callee	NSTR		1212356	0					
ANR	1212420	Identifier	NSTR		1212356	0					
ANR	1212421	ArgumentList	node		1212356	1					
ANR	1212422	Argument	node		1212356	0					
ANR	1212423	Identifier	node		1212356	0					
ANR	1212424	Identifier	buf		1212356	1					
ANR	1212425	CompoundStatement		8:65:178:178	1212356	1					
ANR	1212426	ExpressionStatement	xfree ( NSTR ( node ) -> s )	1015:6:22747:22767	1212356	0	True				
ANR	1212427	CallExpression	xfree ( NSTR ( node ) -> s )		1212356	0					
ANR	1212428	Callee	xfree		1212356	0					
ANR	1212429	Identifier	xfree		1212356	0					
ANR	1212430	ArgumentList	NSTR ( node ) -> s		1212356	1					
ANR	1212431	Argument	NSTR ( node ) -> s		1212356	0					
ANR	1212432	PtrMemberAccess	NSTR ( node ) -> s		1212356	0					
ANR	1212433	CallExpression	NSTR ( node )		1212356	0					
ANR	1212434	Callee	NSTR		1212356	0					
ANR	1212435	Identifier	NSTR		1212356	0					
ANR	1212436	ArgumentList	node		1212356	1					
ANR	1212437	Argument	node		1212356	0					
ANR	1212438	Identifier	node		1212356	0					
ANR	1212439	Identifier	s		1212356	1					
ANR	1212440	BreakStatement	break ;	1017:4:22779:22784	1212356	2	True				
ANR	1212441	Label	case NT_LIST :	1019:2:22789:22801	1212356	3	True				
ANR	1212442	Identifier	NT_LIST		1212356	0					
ANR	1212443	Label	case NT_ALT :	1020:2:22805:22816	1212356	4	True				
ANR	1212444	Identifier	NT_ALT		1212356	0					
ANR	1212445	ExpressionStatement	onig_node_free ( NCAR ( node ) )	1021:4:22822:22848	1212356	5	True				
ANR	1212446	CallExpression	onig_node_free ( NCAR ( node ) )		1212356	0					
ANR	1212447	Callee	onig_node_free		1212356	0					
ANR	1212448	Identifier	onig_node_free		1212356	0					
ANR	1212449	ArgumentList	NCAR ( node )		1212356	1					
ANR	1212450	Argument	NCAR ( node )		1212356	0					
ANR	1212451	CallExpression	NCAR ( node )		1212356	0					
ANR	1212452	Callee	NCAR		1212356	0					
ANR	1212453	Identifier	NCAR		1212356	0					
ANR	1212454	ArgumentList	node		1212356	1					
ANR	1212455	Argument	node		1212356	0					
ANR	1212456	Identifier	node		1212356	0					
ANR	1212457	CompoundStatement		17:6:301:329	1212356	6					
ANR	1212458	IdentifierDeclStatement	Node * next_node = NCDR ( node ) ;	1023:6:22862:22890	1212356	0	True				
ANR	1212459	IdentifierDecl	* next_node = NCDR ( node )		1212356	0					
ANR	1212460	IdentifierDeclType	Node *		1212356	0					
ANR	1212461	Identifier	next_node		1212356	1					
ANR	1212462	AssignmentExpression	* next_node = NCDR ( node )		1212356	2		=			
ANR	1212463	Identifier	next_node		1212356	0					
ANR	1212464	CallExpression	NCDR ( node )		1212356	1					
ANR	1212465	Callee	NCDR		1212356	0					
ANR	1212466	Identifier	NCDR		1212356	0					
ANR	1212467	ArgumentList	node		1212356	1					
ANR	1212468	Argument	node		1212356	0					
ANR	1212469	Identifier	node		1212356	0					
ANR	1212470	CompoundStatement		21:1:376:406	1212356	1					
ANR	1212471	IdentifierDeclStatement	FreeNode * n = ( FreeNode * ) node ;	1027:1:22937:22967	1212356	0	True				
ANR	1212472	IdentifierDecl	* n = ( FreeNode * ) node		1212356	0					
ANR	1212473	IdentifierDeclType	FreeNode *		1212356	0					
ANR	1212474	Identifier	n		1212356	1					
ANR	1212475	AssignmentExpression	* n = ( FreeNode * ) node		1212356	2		=			
ANR	1212476	Identifier	n		1212356	0					
ANR	1212477	CastExpression	( FreeNode * ) node		1212356	1					
ANR	1212478	CastTarget	FreeNode *		1212356	0					
ANR	1212479	Identifier	node		1212356	1					
ANR	1212480	ExpressionStatement	THREAD_ATOMIC_START	1029:8:22978:22997	1212356	1	True				
ANR	1212481	Identifier	THREAD_ATOMIC_START		1212356	0					
ANR	1212482	ExpressionStatement	n -> next = FreeNodeList	1030:1:23000:23022	1212356	2	True				
ANR	1212483	AssignmentExpression	n -> next = FreeNodeList		1212356	0		=			
ANR	1212484	PtrMemberAccess	n -> next		1212356	0					
ANR	1212485	Identifier	n		1212356	0					
ANR	1212486	Identifier	next		1212356	1					
ANR	1212487	Identifier	FreeNodeList		1212356	1					
ANR	1212488	ExpressionStatement	FreeNodeList = n	1031:1:23025:23041	1212356	3	True				
ANR	1212489	AssignmentExpression	FreeNodeList = n		1212356	0		=			
ANR	1212490	Identifier	FreeNodeList		1212356	0					
ANR	1212491	Identifier	n		1212356	1					
ANR	1212492	ExpressionStatement	THREAD_ATOMIC_END	1032:8:23051:23068	1212356	4	True				
ANR	1212493	Identifier	THREAD_ATOMIC_END		1212356	0					
ANR	1212494	ExpressionStatement	node = next_node	1037:6:23116:23132	1212356	2	True				
ANR	1212495	AssignmentExpression	node = next_node		1212356	0		=			
ANR	1212496	Identifier	node		1212356	0					
ANR	1212497	Identifier	next_node		1212356	1					
ANR	1212498	GotoStatement	goto start ;	1038:6:23140:23150	1212356	3	True				
ANR	1212499	Identifier	start		1212356	0					
ANR	1212500	BreakStatement	break ;	1040:4:23162:23167	1212356	7	True				
ANR	1212501	Label	case NT_CCLASS :	1042:2:23172:23186	1212356	8	True				
ANR	1212502	Identifier	NT_CCLASS		1212356	0					
ANR	1212503	CompoundStatement		38:6:639:669	1212356	9					
ANR	1212504	IdentifierDeclStatement	CClassNode * cc = NCCLASS ( node ) ;	1044:6:23200:23230	1212356	0	True				
ANR	1212505	IdentifierDecl	* cc = NCCLASS ( node )		1212356	0					
ANR	1212506	IdentifierDeclType	CClassNode *		1212356	0					
ANR	1212507	Identifier	cc		1212356	1					
ANR	1212508	AssignmentExpression	* cc = NCCLASS ( node )		1212356	2		=			
ANR	1212509	Identifier	cc		1212356	0					
ANR	1212510	CallExpression	NCCLASS ( node )		1212356	1					
ANR	1212511	Callee	NCCLASS		1212356	0					
ANR	1212512	Identifier	NCCLASS		1212356	0					
ANR	1212513	ArgumentList	node		1212356	1					
ANR	1212514	Argument	node		1212356	0					
ANR	1212515	Identifier	node		1212356	0					
ANR	1212516	IfStatement	if ( IS_NCCLASS_SHARE ( cc ) )		1212356	1					
ANR	1212517	Condition	IS_NCCLASS_SHARE ( cc )	1046:10:23243:23262	1212356	0	True				
ANR	1212518	CallExpression	IS_NCCLASS_SHARE ( cc )		1212356	0					
ANR	1212519	Callee	IS_NCCLASS_SHARE		1212356	0					
ANR	1212520	Identifier	IS_NCCLASS_SHARE		1212356	0					
ANR	1212521	ArgumentList	cc		1212356	1					
ANR	1212522	Argument	cc		1212356	0					
ANR	1212523	Identifier	cc		1212356	0					
ANR	1212524	ReturnStatement	return ;	1046:32:23265:23272	1212356	1	True				
ANR	1212525	IfStatement	if ( cc -> mbuf )		1212356	2					
ANR	1212526	Condition	cc -> mbuf	1047:10:23284:23291	1212356	0	True				
ANR	1212527	PtrMemberAccess	cc -> mbuf		1212356	0					
ANR	1212528	Identifier	cc		1212356	0					
ANR	1212529	Identifier	mbuf		1212356	1					
ANR	1212530	ExpressionStatement	bbuf_free ( cc -> mbuf )	1048:8:23302:23321	1212356	1	True				
ANR	1212531	CallExpression	bbuf_free ( cc -> mbuf )		1212356	0					
ANR	1212532	Callee	bbuf_free		1212356	0					
ANR	1212533	Identifier	bbuf_free		1212356	0					
ANR	1212534	ArgumentList	cc -> mbuf		1212356	1					
ANR	1212535	Argument	cc -> mbuf		1212356	0					
ANR	1212536	PtrMemberAccess	cc -> mbuf		1212356	0					
ANR	1212537	Identifier	cc		1212356	0					
ANR	1212538	Identifier	mbuf		1212356	1					
ANR	1212539	BreakStatement	break ;	1050:4:23333:23338	1212356	10	True				
ANR	1212540	Label	case NT_QTFR :	1052:2:23343:23355	1212356	11	True				
ANR	1212541	Identifier	NT_QTFR		1212356	0					
ANR	1212542	IfStatement	if ( NQTFR ( node ) -> target )		1212356	12					
ANR	1212543	Condition	NQTFR ( node ) -> target	1053:8:23365:23383	1212356	0	True				
ANR	1212544	PtrMemberAccess	NQTFR ( node ) -> target		1212356	0					
ANR	1212545	CallExpression	NQTFR ( node )		1212356	0					
ANR	1212546	Callee	NQTFR		1212356	0					
ANR	1212547	Identifier	NQTFR		1212356	0					
ANR	1212548	ArgumentList	node		1212356	1					
ANR	1212549	Argument	node		1212356	0					
ANR	1212550	Identifier	node		1212356	0					
ANR	1212551	Identifier	target		1212356	1					
ANR	1212552	ExpressionStatement	onig_node_free ( NQTFR ( node ) -> target )	1054:6:23392:23427	1212356	1	True				
ANR	1212553	CallExpression	onig_node_free ( NQTFR ( node ) -> target )		1212356	0					
ANR	1212554	Callee	onig_node_free		1212356	0					
ANR	1212555	Identifier	onig_node_free		1212356	0					
ANR	1212556	ArgumentList	NQTFR ( node ) -> target		1212356	1					
ANR	1212557	Argument	NQTFR ( node ) -> target		1212356	0					
ANR	1212558	PtrMemberAccess	NQTFR ( node ) -> target		1212356	0					
ANR	1212559	CallExpression	NQTFR ( node )		1212356	0					
ANR	1212560	Callee	NQTFR		1212356	0					
ANR	1212561	Identifier	NQTFR		1212356	0					
ANR	1212562	ArgumentList	node		1212356	1					
ANR	1212563	Argument	node		1212356	0					
ANR	1212564	Identifier	node		1212356	0					
ANR	1212565	Identifier	target		1212356	1					
ANR	1212566	BreakStatement	break ;	1055:4:23433:23438	1212356	13	True				
ANR	1212567	Label	case NT_ENCLOSE :	1057:2:23443:23458	1212356	14	True				
ANR	1212568	Identifier	NT_ENCLOSE		1212356	0					
ANR	1212569	IfStatement	if ( NENCLOSE ( node ) -> target )		1212356	15					
ANR	1212570	Condition	NENCLOSE ( node ) -> target	1058:8:23468:23489	1212356	0	True				
ANR	1212571	PtrMemberAccess	NENCLOSE ( node ) -> target		1212356	0					
ANR	1212572	CallExpression	NENCLOSE ( node )		1212356	0					
ANR	1212573	Callee	NENCLOSE		1212356	0					
ANR	1212574	Identifier	NENCLOSE		1212356	0					
ANR	1212575	ArgumentList	node		1212356	1					
ANR	1212576	Argument	node		1212356	0					
ANR	1212577	Identifier	node		1212356	0					
ANR	1212578	Identifier	target		1212356	1					
ANR	1212579	ExpressionStatement	onig_node_free ( NENCLOSE ( node ) -> target )	1059:6:23498:23536	1212356	1	True				
ANR	1212580	CallExpression	onig_node_free ( NENCLOSE ( node ) -> target )		1212356	0					
ANR	1212581	Callee	onig_node_free		1212356	0					
ANR	1212582	Identifier	onig_node_free		1212356	0					
ANR	1212583	ArgumentList	NENCLOSE ( node ) -> target		1212356	1					
ANR	1212584	Argument	NENCLOSE ( node ) -> target		1212356	0					
ANR	1212585	PtrMemberAccess	NENCLOSE ( node ) -> target		1212356	0					
ANR	1212586	CallExpression	NENCLOSE ( node )		1212356	0					
ANR	1212587	Callee	NENCLOSE		1212356	0					
ANR	1212588	Identifier	NENCLOSE		1212356	0					
ANR	1212589	ArgumentList	node		1212356	1					
ANR	1212590	Argument	node		1212356	0					
ANR	1212591	Identifier	node		1212356	0					
ANR	1212592	Identifier	target		1212356	1					
ANR	1212593	BreakStatement	break ;	1060:4:23542:23547	1212356	16	True				
ANR	1212594	Label	case NT_BREF :	1062:2:23552:23564	1212356	17	True				
ANR	1212595	Identifier	NT_BREF		1212356	0					
ANR	1212596	IfStatement	if ( IS_NOT_NULL ( NBREF ( node ) -> back_dynamic ) )		1212356	18					
ANR	1212597	Condition	IS_NOT_NULL ( NBREF ( node ) -> back_dynamic )	1063:8:23574:23611	1212356	0	True				
ANR	1212598	CallExpression	IS_NOT_NULL ( NBREF ( node ) -> back_dynamic )		1212356	0					
ANR	1212599	Callee	IS_NOT_NULL		1212356	0					
ANR	1212600	Identifier	IS_NOT_NULL		1212356	0					
ANR	1212601	ArgumentList	NBREF ( node ) -> back_dynamic		1212356	1					
ANR	1212602	Argument	NBREF ( node ) -> back_dynamic		1212356	0					
ANR	1212603	PtrMemberAccess	NBREF ( node ) -> back_dynamic		1212356	0					
ANR	1212604	CallExpression	NBREF ( node )		1212356	0					
ANR	1212605	Callee	NBREF		1212356	0					
ANR	1212606	Identifier	NBREF		1212356	0					
ANR	1212607	ArgumentList	node		1212356	1					
ANR	1212608	Argument	node		1212356	0					
ANR	1212609	Identifier	node		1212356	0					
ANR	1212610	Identifier	back_dynamic		1212356	1					
ANR	1212611	ExpressionStatement	xfree ( NBREF ( node ) -> back_dynamic )	1064:6:23620:23652	1212356	1	True				
ANR	1212612	CallExpression	xfree ( NBREF ( node ) -> back_dynamic )		1212356	0					
ANR	1212613	Callee	xfree		1212356	0					
ANR	1212614	Identifier	xfree		1212356	0					
ANR	1212615	ArgumentList	NBREF ( node ) -> back_dynamic		1212356	1					
ANR	1212616	Argument	NBREF ( node ) -> back_dynamic		1212356	0					
ANR	1212617	PtrMemberAccess	NBREF ( node ) -> back_dynamic		1212356	0					
ANR	1212618	CallExpression	NBREF ( node )		1212356	0					
ANR	1212619	Callee	NBREF		1212356	0					
ANR	1212620	Identifier	NBREF		1212356	0					
ANR	1212621	ArgumentList	node		1212356	1					
ANR	1212622	Argument	node		1212356	0					
ANR	1212623	Identifier	node		1212356	0					
ANR	1212624	Identifier	back_dynamic		1212356	1					
ANR	1212625	BreakStatement	break ;	1065:4:23658:23663	1212356	19	True				
ANR	1212626	Label	case NT_ANCHOR :	1067:2:23668:23682	1212356	20	True				
ANR	1212627	Identifier	NT_ANCHOR		1212356	0					
ANR	1212628	IfStatement	if ( NANCHOR ( node ) -> target )		1212356	21					
ANR	1212629	Condition	NANCHOR ( node ) -> target	1068:8:23692:23712	1212356	0	True				
ANR	1212630	PtrMemberAccess	NANCHOR ( node ) -> target		1212356	0					
ANR	1212631	CallExpression	NANCHOR ( node )		1212356	0					
ANR	1212632	Callee	NANCHOR		1212356	0					
ANR	1212633	Identifier	NANCHOR		1212356	0					
ANR	1212634	ArgumentList	node		1212356	1					
ANR	1212635	Argument	node		1212356	0					
ANR	1212636	Identifier	node		1212356	0					
ANR	1212637	Identifier	target		1212356	1					
ANR	1212638	ExpressionStatement	onig_node_free ( NANCHOR ( node ) -> target )	1069:6:23721:23758	1212356	1	True				
ANR	1212639	CallExpression	onig_node_free ( NANCHOR ( node ) -> target )		1212356	0					
ANR	1212640	Callee	onig_node_free		1212356	0					
ANR	1212641	Identifier	onig_node_free		1212356	0					
ANR	1212642	ArgumentList	NANCHOR ( node ) -> target		1212356	1					
ANR	1212643	Argument	NANCHOR ( node ) -> target		1212356	0					
ANR	1212644	PtrMemberAccess	NANCHOR ( node ) -> target		1212356	0					
ANR	1212645	CallExpression	NANCHOR ( node )		1212356	0					
ANR	1212646	Callee	NANCHOR		1212356	0					
ANR	1212647	Identifier	NANCHOR		1212356	0					
ANR	1212648	ArgumentList	node		1212356	1					
ANR	1212649	Argument	node		1212356	0					
ANR	1212650	Identifier	node		1212356	0					
ANR	1212651	Identifier	target		1212356	1					
ANR	1212652	BreakStatement	break ;	1070:4:23764:23769	1212356	22	True				
ANR	1212653	CompoundStatement		69:4:1258:1288	1212356	3					
ANR	1212654	IdentifierDeclStatement	FreeNode * n = ( FreeNode * ) node ;	1075:4:23819:23849	1212356	0	True				
ANR	1212655	IdentifierDecl	* n = ( FreeNode * ) node		1212356	0					
ANR	1212656	IdentifierDeclType	FreeNode *		1212356	0					
ANR	1212657	Identifier	n		1212356	1					
ANR	1212658	AssignmentExpression	* n = ( FreeNode * ) node		1212356	2		=			
ANR	1212659	Identifier	n		1212356	0					
ANR	1212660	CastExpression	( FreeNode * ) node		1212356	1					
ANR	1212661	CastTarget	FreeNode *		1212356	0					
ANR	1212662	Identifier	node		1212356	1					
ANR	1212663	ExpressionStatement	THREAD_ATOMIC_START	1077:4:23856:23875	1212356	1	True				
ANR	1212664	Identifier	THREAD_ATOMIC_START		1212356	0					
ANR	1212665	ExpressionStatement	n -> next = FreeNodeList	1078:4:23881:23903	1212356	2	True				
ANR	1212666	AssignmentExpression	n -> next = FreeNodeList		1212356	0		=			
ANR	1212667	PtrMemberAccess	n -> next		1212356	0					
ANR	1212668	Identifier	n		1212356	0					
ANR	1212669	Identifier	next		1212356	1					
ANR	1212670	Identifier	FreeNodeList		1212356	1					
ANR	1212671	ExpressionStatement	FreeNodeList = n	1079:4:23909:23925	1212356	3	True				
ANR	1212672	AssignmentExpression	FreeNodeList = n		1212356	0		=			
ANR	1212673	Identifier	FreeNodeList		1212356	0					
ANR	1212674	Identifier	n		1212356	1					
ANR	1212675	ExpressionStatement	THREAD_ATOMIC_END	1080:4:23931:23948	1212356	4	True				
ANR	1212676	Identifier	THREAD_ATOMIC_END		1212356	0					
ANR	1212677	ReturnType	extern void		1212356	1					
ANR	1212678	Identifier	onig_node_free		1212356	2					
ANR	1212679	ParameterList	Node * node		1212356	3					
ANR	1212680	Parameter	Node * node	1006:15:22548:22557	1212356	0	True				
ANR	1212681	ParameterType	Node *		1212356	0					
ANR	1212682	Identifier	node		1212356	1					
ANR	1212683	CFGEntryNode	ENTRY		1212356		True				
ANR	1212684	CFGExitNode	EXIT		1212356		True				
ANR	1212685	Symbol	NQTFR ( node ) -> target		1212356						
ANR	1212686	Symbol	IS_NOT_NULL		1212356						
ANR	1212687	Symbol	NCAR		1212356						
ANR	1212688	Symbol	* NBREF		1212356						
ANR	1212689	Symbol	NBREF ( node ) -> back_dynamic		1212356						
ANR	1212690	Symbol	next_node		1212356						
ANR	1212691	Symbol	* cc		1212356						
ANR	1212692	Symbol	* NENCLOSE		1212356						
ANR	1212693	Symbol	FreeNodeList		1212356						
ANR	1212694	Symbol	cc -> mbuf		1212356						
ANR	1212695	Symbol	NQTFR		1212356						
ANR	1212696	Symbol	NCCLASS		1212356						
ANR	1212697	Symbol	IS_NULL		1212356						
ANR	1212698	Symbol	* NQTFR		1212356						
ANR	1212699	Symbol	NBREF		1212356						
ANR	1212700	Symbol	NENCLOSE		1212356						
ANR	1212701	Symbol	* NANCHOR		1212356						
ANR	1212702	Symbol	n -> next		1212356						
ANR	1212703	Symbol	NSTR ( node ) -> capa		1212356						
ANR	1212704	Symbol	IS_NCCLASS_SHARE		1212356						
ANR	1212705	Symbol	cc		1212356						
ANR	1212706	Symbol	NSTR		1212356						
ANR	1212707	Symbol	NCDR		1212356						
ANR	1212708	Symbol	NANCHOR ( node ) -> target		1212356						
ANR	1212709	Symbol	* NSTR		1212356						
ANR	1212710	Symbol	n		1212356						
ANR	1212711	Symbol	NENCLOSE ( node ) -> target		1212356						
ANR	1212712	Symbol	node		1212356						
ANR	1212713	Symbol	NSTR ( node ) -> s		1212356						
ANR	1212714	Symbol	* n		1212356						
ANR	1212715	Symbol	NANCHOR		1212356						
ANR	1212716	Symbol	NTYPE		1212356						
ANR	1212717	Symbol	NSTR ( node ) -> buf		1212356						
ANR	1212718	Function	onig_free_node_list	1088:0:24020:24260							
ANR	1212719	FunctionDef	onig_free_node_list ()		1212718	0					
ANR	1212720	CompoundStatement		1090:0:24057:24260	1212718	0					
ANR	1212721	IdentifierDeclStatement	FreeNode * n ;	1091:2:24061:24072	1212718	0	True				
ANR	1212722	IdentifierDecl	* n		1212718	0					
ANR	1212723	IdentifierDeclType	FreeNode *		1212718	0					
ANR	1212724	Identifier	n		1212718	1					
ANR	1212725	WhileStatement	while ( IS_NOT_NULL ( FreeNodeList ) )		1212718	1					
ANR	1212726	Condition	IS_NOT_NULL ( FreeNodeList )	1094:9:24113:24137	1212718	0	True				
ANR	1212727	CallExpression	IS_NOT_NULL ( FreeNodeList )		1212718	0					
ANR	1212728	Callee	IS_NOT_NULL		1212718	0					
ANR	1212729	Identifier	IS_NOT_NULL		1212718	0					
ANR	1212730	ArgumentList	FreeNodeList		1212718	1					
ANR	1212731	Argument	FreeNodeList		1212718	0					
ANR	1212732	Identifier	FreeNodeList		1212718	0					
ANR	1212733	CompoundStatement		5:36:82:82	1212718	1					
ANR	1212734	ExpressionStatement	n = FreeNodeList	1095:4:24146:24162	1212718	0	True				
ANR	1212735	AssignmentExpression	n = FreeNodeList		1212718	0		=			
ANR	1212736	Identifier	n		1212718	0					
ANR	1212737	Identifier	FreeNodeList		1212718	1					
ANR	1212738	ExpressionStatement	FreeNodeList = FreeNodeList -> next	1096:4:24168:24201	1212718	1	True				
ANR	1212739	AssignmentExpression	FreeNodeList = FreeNodeList -> next		1212718	0		=			
ANR	1212740	Identifier	FreeNodeList		1212718	0					
ANR	1212741	PtrMemberAccess	FreeNodeList -> next		1212718	1					
ANR	1212742	Identifier	FreeNodeList		1212718	0					
ANR	1212743	Identifier	next		1212718	1					
ANR	1212744	ExpressionStatement	xfree ( n )	1097:4:24207:24215	1212718	2	True				
ANR	1212745	CallExpression	xfree ( n )		1212718	0					
ANR	1212746	Callee	xfree		1212718	0					
ANR	1212747	Identifier	xfree		1212718	0					
ANR	1212748	ArgumentList	n		1212718	1					
ANR	1212749	Argument	n		1212718	0					
ANR	1212750	Identifier	n		1212718	0					
ANR	1212751	ReturnStatement	return 0 ;	1100:2:24250:24258	1212718	2	True				
ANR	1212752	PrimaryExpression	0		1212718	0					
ANR	1212753	ReturnType	extern int		1212718	1					
ANR	1212754	Identifier	onig_free_node_list		1212718	2					
ANR	1212755	ParameterList			1212718	3					
ANR	1212756	CFGEntryNode	ENTRY		1212718		True				
ANR	1212757	CFGExitNode	EXIT		1212718		True				
ANR	1212758	Symbol	IS_NOT_NULL		1212718						
ANR	1212759	Symbol	FreeNodeList		1212718						
ANR	1212760	Symbol	FreeNodeList -> next		1212718						
ANR	1212761	Symbol	* FreeNodeList		1212718						
ANR	1212762	Symbol	n		1212718						
ANR	1212763	Function	node_new	1104:0:24270:24648							
ANR	1212764	FunctionDef	node_new ()		1212763	0					
ANR	1212765	CompoundStatement		1106:0:24298:24648	1212763	0					
ANR	1212766	IdentifierDeclStatement	Node * node ;	1107:2:24302:24312	1212763	0	True				
ANR	1212767	IdentifierDecl	* node		1212763	0					
ANR	1212768	IdentifierDeclType	Node *		1212763	0					
ANR	1212769	Identifier	node		1212763	1					
ANR	1212770	ExpressionStatement	THREAD_ATOMIC_START	1110:2:24352:24371	1212763	1	True				
ANR	1212771	Identifier	THREAD_ATOMIC_START		1212763	0					
ANR	1212772	IfStatement	if ( IS_NOT_NULL ( FreeNodeList ) )		1212763	2					
ANR	1212773	Condition	IS_NOT_NULL ( FreeNodeList )	1111:6:24379:24403	1212763	0	True				
ANR	1212774	CallExpression	IS_NOT_NULL ( FreeNodeList )		1212763	0					
ANR	1212775	Callee	IS_NOT_NULL		1212763	0					
ANR	1212776	Identifier	IS_NOT_NULL		1212763	0					
ANR	1212777	ArgumentList	FreeNodeList		1212763	1					
ANR	1212778	Argument	FreeNodeList		1212763	0					
ANR	1212779	Identifier	FreeNodeList		1212763	0					
ANR	1212780	CompoundStatement		6:33:107:107	1212763	1					
ANR	1212781	ExpressionStatement	node = ( Node * ) FreeNodeList	1112:4:24412:24439	1212763	0	True				
ANR	1212782	AssignmentExpression	node = ( Node * ) FreeNodeList		1212763	0		=			
ANR	1212783	Identifier	node		1212763	0					
ANR	1212784	CastExpression	( Node * ) FreeNodeList		1212763	1					
ANR	1212785	CastTarget	Node *		1212763	0					
ANR	1212786	Identifier	FreeNodeList		1212763	1					
ANR	1212787	ExpressionStatement	FreeNodeList = FreeNodeList -> next	1113:4:24445:24478	1212763	1	True				
ANR	1212788	AssignmentExpression	FreeNodeList = FreeNodeList -> next		1212763	0		=			
ANR	1212789	Identifier	FreeNodeList		1212763	0					
ANR	1212790	PtrMemberAccess	FreeNodeList -> next		1212763	1					
ANR	1212791	Identifier	FreeNodeList		1212763	0					
ANR	1212792	Identifier	next		1212763	1					
ANR	1212793	ExpressionStatement	THREAD_ATOMIC_END	1114:4:24484:24501	1212763	2	True				
ANR	1212794	Identifier	THREAD_ATOMIC_END		1212763	0					
ANR	1212795	ReturnStatement	return node ;	1115:4:24507:24518	1212763	3	True				
ANR	1212796	Identifier	node		1212763	0					
ANR	1212797	ExpressionStatement	THREAD_ATOMIC_END	1117:2:24526:24543	1212763	3	True				
ANR	1212798	Identifier	THREAD_ATOMIC_END		1212763	0					
ANR	1212799	ExpressionStatement	node = ( Node * ) xmalloc ( sizeof ( Node ) )	1120:2:24555:24591	1212763	4	True				
ANR	1212800	AssignmentExpression	node = ( Node * ) xmalloc ( sizeof ( Node ) )		1212763	0		=			
ANR	1212801	Identifier	node		1212763	0					
ANR	1212802	CastExpression	( Node * ) xmalloc ( sizeof ( Node ) )		1212763	1					
ANR	1212803	CastTarget	Node *		1212763	0					
ANR	1212804	CallExpression	xmalloc ( sizeof ( Node ) )		1212763	1					
ANR	1212805	Callee	xmalloc		1212763	0					
ANR	1212806	Identifier	xmalloc		1212763	0					
ANR	1212807	ArgumentList	sizeof ( Node )		1212763	1					
ANR	1212808	Argument	sizeof ( Node )		1212763	0					
ANR	1212809	SizeofExpression	sizeof ( Node )		1212763	0					
ANR	1212810	Sizeof	sizeof		1212763	0					
ANR	1212811	SizeofOperand	Node		1212763	1					
ANR	1212812	ReturnStatement	return node ;	1122:2:24635:24646	1212763	5	True				
ANR	1212813	Identifier	node		1212763	0					
ANR	1212814	ReturnType	static Node *		1212763	1					
ANR	1212815	Identifier	node_new		1212763	2					
ANR	1212816	ParameterList			1212763	3					
ANR	1212817	CFGEntryNode	ENTRY		1212763		True				
ANR	1212818	CFGExitNode	EXIT		1212763		True				
ANR	1212819	Symbol	node		1212763						
ANR	1212820	Symbol	IS_NOT_NULL		1212763						
ANR	1212821	Symbol	xmalloc		1212763						
ANR	1212822	Symbol	FreeNodeList		1212763						
ANR	1212823	Symbol	FreeNodeList -> next		1212763						
ANR	1212824	Symbol	* FreeNodeList		1212763						
ANR	1212825	Function	initialize_cclass	1126:0:24652:24789							
ANR	1212826	FunctionDef	initialize_cclass (CClassNode * cc)		1212825	0					
ANR	1212827	CompoundStatement		1128:0:24698:24789	1212825	0					
ANR	1212828	ExpressionStatement	BITSET_CLEAR ( cc -> bs )	1129:2:24702:24722	1212825	0	True				
ANR	1212829	CallExpression	BITSET_CLEAR ( cc -> bs )		1212825	0					
ANR	1212830	Callee	BITSET_CLEAR		1212825	0					
ANR	1212831	Identifier	BITSET_CLEAR		1212825	0					
ANR	1212832	ArgumentList	cc -> bs		1212825	1					
ANR	1212833	Argument	cc -> bs		1212825	0					
ANR	1212834	PtrMemberAccess	cc -> bs		1212825	0					
ANR	1212835	Identifier	cc		1212825	0					
ANR	1212836	Identifier	bs		1212825	1					
ANR	1212837	ExpressionStatement	cc -> flags = 0	1131:2:24754:24767	1212825	1	True				
ANR	1212838	AssignmentExpression	cc -> flags = 0		1212825	0		=			
ANR	1212839	PtrMemberAccess	cc -> flags		1212825	0					
ANR	1212840	Identifier	cc		1212825	0					
ANR	1212841	Identifier	flags		1212825	1					
ANR	1212842	PrimaryExpression	0		1212825	1					
ANR	1212843	ExpressionStatement	cc -> mbuf = NULL	1132:2:24771:24787	1212825	2	True				
ANR	1212844	AssignmentExpression	cc -> mbuf = NULL		1212825	0		=			
ANR	1212845	PtrMemberAccess	cc -> mbuf		1212825	0					
ANR	1212846	Identifier	cc		1212825	0					
ANR	1212847	Identifier	mbuf		1212825	1					
ANR	1212848	Identifier	NULL		1212825	1					
ANR	1212849	ReturnType	static void		1212825	1					
ANR	1212850	Identifier	initialize_cclass		1212825	2					
ANR	1212851	ParameterList	CClassNode * cc		1212825	3					
ANR	1212852	Parameter	CClassNode * cc	1127:18:24682:24695	1212825	0	True				
ANR	1212853	ParameterType	CClassNode *		1212825	0					
ANR	1212854	Identifier	cc		1212825	1					
ANR	1212855	CFGEntryNode	ENTRY		1212825		True				
ANR	1212856	CFGExitNode	EXIT		1212825		True				
ANR	1212857	Symbol	cc		1212825						
ANR	1212858	Symbol	NULL		1212825						
ANR	1212859	Symbol	* cc		1212825						
ANR	1212860	Symbol	cc -> mbuf		1212825						
ANR	1212861	Symbol	cc -> bs		1212825						
ANR	1212862	Symbol	cc -> flags		1212825						
ANR	1212863	Function	node_new_cclass	1135:0:24792:24965							
ANR	1212864	FunctionDef	node_new_cclass ()		1212863	0					
ANR	1212865	CompoundStatement		1137:0:24827:24965	1212863	0					
ANR	1212866	IdentifierDeclStatement	Node * node = node_new ( ) ;	1138:2:24831:24854	1212863	0	True				
ANR	1212867	IdentifierDecl	* node = node_new ( )		1212863	0					
ANR	1212868	IdentifierDeclType	Node *		1212863	0					
ANR	1212869	Identifier	node		1212863	1					
ANR	1212870	AssignmentExpression	* node = node_new ( )		1212863	2		=			
ANR	1212871	Identifier	node		1212863	0					
ANR	1212872	CallExpression	node_new ( )		1212863	1					
ANR	1212873	Callee	node_new		1212863	0					
ANR	1212874	Identifier	node_new		1212863	0					
ANR	1212875	ArgumentList			1212863	1					
ANR	1212876	ExpressionStatement	CHECK_NULL_RETURN ( node )	1139:2:24858:24881	1212863	1	True				
ANR	1212877	CallExpression	CHECK_NULL_RETURN ( node )		1212863	0					
ANR	1212878	Callee	CHECK_NULL_RETURN		1212863	0					
ANR	1212879	Identifier	CHECK_NULL_RETURN		1212863	0					
ANR	1212880	ArgumentList	node		1212863	1					
ANR	1212881	Argument	node		1212863	0					
ANR	1212882	Identifier	node		1212863	0					
ANR	1212883	ExpressionStatement	"SET_NTYPE ( node , NT_CCLASS )"	1141:2:24886:24912	1212863	2	True				
ANR	1212884	CallExpression	"SET_NTYPE ( node , NT_CCLASS )"		1212863	0					
ANR	1212885	Callee	SET_NTYPE		1212863	0					
ANR	1212886	Identifier	SET_NTYPE		1212863	0					
ANR	1212887	ArgumentList	node		1212863	1					
ANR	1212888	Argument	node		1212863	0					
ANR	1212889	Identifier	node		1212863	0					
ANR	1212890	Argument	NT_CCLASS		1212863	1					
ANR	1212891	Identifier	NT_CCLASS		1212863	0					
ANR	1212892	ExpressionStatement	initialize_cclass ( NCCLASS ( node ) )	1142:2:24916:24948	1212863	3	True				
ANR	1212893	CallExpression	initialize_cclass ( NCCLASS ( node ) )		1212863	0					
ANR	1212894	Callee	initialize_cclass		1212863	0					
ANR	1212895	Identifier	initialize_cclass		1212863	0					
ANR	1212896	ArgumentList	NCCLASS ( node )		1212863	1					
ANR	1212897	Argument	NCCLASS ( node )		1212863	0					
ANR	1212898	CallExpression	NCCLASS ( node )		1212863	0					
ANR	1212899	Callee	NCCLASS		1212863	0					
ANR	1212900	Identifier	NCCLASS		1212863	0					
ANR	1212901	ArgumentList	node		1212863	1					
ANR	1212902	Argument	node		1212863	0					
ANR	1212903	Identifier	node		1212863	0					
ANR	1212904	ReturnStatement	return node ;	1143:2:24952:24963	1212863	4	True				
ANR	1212905	Identifier	node		1212863	0					
ANR	1212906	ReturnType	static Node *		1212863	1					
ANR	1212907	Identifier	node_new_cclass		1212863	2					
ANR	1212908	ParameterList			1212863	3					
ANR	1212909	CFGEntryNode	ENTRY		1212863		True				
ANR	1212910	CFGExitNode	EXIT		1212863		True				
ANR	1212911	Symbol	node		1212863						
ANR	1212912	Symbol	node_new		1212863						
ANR	1212913	Symbol	NT_CCLASS		1212863						
ANR	1212914	Symbol	NCCLASS		1212863						
ANR	1212915	Function	node_new_cclass_by_codepoint_range	1146:0:24968:25981							
ANR	1212916	FunctionDef	"node_new_cclass_by_codepoint_range (int not , OnigCodePoint sb_out , const OnigCodePoint ranges [ ])"		1212915	0					
ANR	1212917	CompoundStatement		1149:0:25084:25981	1212915	0					
ANR	1212918	IdentifierDeclStatement	"int n , i ;"	1150:2:25088:25096	1212915	0	True				
ANR	1212919	IdentifierDecl	n		1212915	0					
ANR	1212920	IdentifierDeclType	int		1212915	0					
ANR	1212921	Identifier	n		1212915	1					
ANR	1212922	IdentifierDecl	i		1212915	1					
ANR	1212923	IdentifierDeclType	int		1212915	0					
ANR	1212924	Identifier	i		1212915	1					
ANR	1212925	IdentifierDeclStatement	CClassNode * cc ;	1151:2:25100:25114	1212915	1	True				
ANR	1212926	IdentifierDecl	* cc		1212915	0					
ANR	1212927	IdentifierDeclType	CClassNode *		1212915	0					
ANR	1212928	Identifier	cc		1212915	1					
ANR	1212929	IdentifierDeclStatement	OnigCodePoint j ;	1152:2:25118:25133	1212915	2	True				
ANR	1212930	IdentifierDecl	j		1212915	0					
ANR	1212931	IdentifierDeclType	OnigCodePoint		1212915	0					
ANR	1212932	Identifier	j		1212915	1					
ANR	1212933	IdentifierDeclStatement	Node * node = node_new_cclass ( ) ;	1154:2:25138:25168	1212915	3	True				
ANR	1212934	IdentifierDecl	* node = node_new_cclass ( )		1212915	0					
ANR	1212935	IdentifierDeclType	Node *		1212915	0					
ANR	1212936	Identifier	node		1212915	1					
ANR	1212937	AssignmentExpression	* node = node_new_cclass ( )		1212915	2		=			
ANR	1212938	Identifier	node		1212915	0					
ANR	1212939	CallExpression	node_new_cclass ( )		1212915	1					
ANR	1212940	Callee	node_new_cclass		1212915	0					
ANR	1212941	Identifier	node_new_cclass		1212915	0					
ANR	1212942	ArgumentList			1212915	1					
ANR	1212943	ExpressionStatement	CHECK_NULL_RETURN ( node )	1155:2:25172:25195	1212915	4	True				
ANR	1212944	CallExpression	CHECK_NULL_RETURN ( node )		1212915	0					
ANR	1212945	Callee	CHECK_NULL_RETURN		1212915	0					
ANR	1212946	Identifier	CHECK_NULL_RETURN		1212915	0					
ANR	1212947	ArgumentList	node		1212915	1					
ANR	1212948	Argument	node		1212915	0					
ANR	1212949	Identifier	node		1212915	0					
ANR	1212950	ExpressionStatement	cc = NCCLASS ( node )	1157:2:25200:25218	1212915	5	True				
ANR	1212951	AssignmentExpression	cc = NCCLASS ( node )		1212915	0		=			
ANR	1212952	Identifier	cc		1212915	0					
ANR	1212953	CallExpression	NCCLASS ( node )		1212915	1					
ANR	1212954	Callee	NCCLASS		1212915	0					
ANR	1212955	Identifier	NCCLASS		1212915	0					
ANR	1212956	ArgumentList	node		1212915	1					
ANR	1212957	Argument	node		1212915	0					
ANR	1212958	Identifier	node		1212915	0					
ANR	1212959	IfStatement	if ( not != 0 )		1212915	6					
ANR	1212960	Condition	not != 0	1158:6:25226:25233	1212915	0	True				
ANR	1212961	EqualityExpression	not != 0		1212915	0		!=			
ANR	1212962	Identifier	not		1212915	0					
ANR	1212963	PrimaryExpression	0		1212915	1					
ANR	1212964	ExpressionStatement	NCCLASS_SET_NOT ( cc )	1158:16:25236:25255	1212915	1	True				
ANR	1212965	CallExpression	NCCLASS_SET_NOT ( cc )		1212915	0					
ANR	1212966	Callee	NCCLASS_SET_NOT		1212915	0					
ANR	1212967	Identifier	NCCLASS_SET_NOT		1212915	0					
ANR	1212968	ArgumentList	cc		1212915	1					
ANR	1212969	Argument	cc		1212915	0					
ANR	1212970	Identifier	cc		1212915	0					
ANR	1212971	ExpressionStatement	BITSET_CLEAR ( cc -> bs )	1160:2:25260:25280	1212915	7	True				
ANR	1212972	CallExpression	BITSET_CLEAR ( cc -> bs )		1212915	0					
ANR	1212973	Callee	BITSET_CLEAR		1212915	0					
ANR	1212974	Identifier	BITSET_CLEAR		1212915	0					
ANR	1212975	ArgumentList	cc -> bs		1212915	1					
ANR	1212976	Argument	cc -> bs		1212915	0					
ANR	1212977	PtrMemberAccess	cc -> bs		1212915	0					
ANR	1212978	Identifier	cc		1212915	0					
ANR	1212979	Identifier	bs		1212915	1					
ANR	1212980	IfStatement	if ( sb_out > 0 && IS_NOT_NULL ( ranges ) )		1212915	8					
ANR	1212981	Condition	sb_out > 0 && IS_NOT_NULL ( ranges )	1161:6:25288:25320	1212915	0	True				
ANR	1212982	AndExpression	sb_out > 0 && IS_NOT_NULL ( ranges )		1212915	0		&&			
ANR	1212983	RelationalExpression	sb_out > 0		1212915	0		>			
ANR	1212984	Identifier	sb_out		1212915	0					
ANR	1212985	PrimaryExpression	0		1212915	1					
ANR	1212986	CallExpression	IS_NOT_NULL ( ranges )		1212915	1					
ANR	1212987	Callee	IS_NOT_NULL		1212915	0					
ANR	1212988	Identifier	IS_NOT_NULL		1212915	0					
ANR	1212989	ArgumentList	ranges		1212915	1					
ANR	1212990	Argument	ranges		1212915	0					
ANR	1212991	Identifier	ranges		1212915	0					
ANR	1212992	CompoundStatement		13:41:238:238	1212915	1					
ANR	1212993	ExpressionStatement	n = ONIGENC_CODE_RANGE_NUM ( ranges )	1162:4:25329:25363	1212915	0	True				
ANR	1212994	AssignmentExpression	n = ONIGENC_CODE_RANGE_NUM ( ranges )		1212915	0		=			
ANR	1212995	Identifier	n		1212915	0					
ANR	1212996	CallExpression	ONIGENC_CODE_RANGE_NUM ( ranges )		1212915	1					
ANR	1212997	Callee	ONIGENC_CODE_RANGE_NUM		1212915	0					
ANR	1212998	Identifier	ONIGENC_CODE_RANGE_NUM		1212915	0					
ANR	1212999	ArgumentList	ranges		1212915	1					
ANR	1213000	Argument	ranges		1212915	0					
ANR	1213001	Identifier	ranges		1212915	0					
ANR	1213002	ForStatement	for ( i = 0 ; i < n ; i ++ )		1212915	1					
ANR	1213003	ForInit	i = 0 ;	1163:9:25374:25379	1212915	0	True				
ANR	1213004	AssignmentExpression	i = 0		1212915	0		=			
ANR	1213005	Identifier	i		1212915	0					
ANR	1213006	PrimaryExpression	0		1212915	1					
ANR	1213007	Condition	i < n	1163:16:25381:25385	1212915	1	True				
ANR	1213008	RelationalExpression	i < n		1212915	0		<			
ANR	1213009	Identifier	i		1212915	0					
ANR	1213010	Identifier	n		1212915	1					
ANR	1213011	PostIncDecOperationExpression	i ++	1163:23:25388:25390	1212915	2	True				
ANR	1213012	Identifier	i		1212915	0					
ANR	1213013	IncDec	++		1212915	1					
ANR	1213014	CompoundStatement		15:28:308:308	1212915	3					
ANR	1213015	ForStatement	"for ( j = ONIGENC_CODE_RANGE_FROM ( ranges , i ) ; j <= ( OnigCodePoint ) ONIGENC_CODE_RANGE_TO ( ranges , i ) ; j ++ )"		1212915	0					
ANR	1213016	ForInit	"j = ONIGENC_CODE_RANGE_FROM ( ranges , i ) ;"	1164:11:25406:25445	1212915	0	True				
ANR	1213017	AssignmentExpression	"j = ONIGENC_CODE_RANGE_FROM ( ranges , i )"		1212915	0		=			
ANR	1213018	Identifier	j		1212915	0					
ANR	1213019	CallExpression	"ONIGENC_CODE_RANGE_FROM ( ranges , i )"		1212915	1					
ANR	1213020	Callee	ONIGENC_CODE_RANGE_FROM		1212915	0					
ANR	1213021	Identifier	ONIGENC_CODE_RANGE_FROM		1212915	0					
ANR	1213022	ArgumentList	ranges		1212915	1					
ANR	1213023	Argument	ranges		1212915	0					
ANR	1213024	Identifier	ranges		1212915	0					
ANR	1213025	Argument	i		1212915	1					
ANR	1213026	Identifier	i		1212915	0					
ANR	1213027	Condition	"j <= ( OnigCodePoint ) ONIGENC_CODE_RANGE_TO ( ranges , i )"	1165:11:25458:25510	1212915	1	True				
ANR	1213028	RelationalExpression	"j <= ( OnigCodePoint ) ONIGENC_CODE_RANGE_TO ( ranges , i )"		1212915	0		<=			
ANR	1213029	Identifier	j		1212915	0					
ANR	1213030	CastExpression	"( OnigCodePoint ) ONIGENC_CODE_RANGE_TO ( ranges , i )"		1212915	1					
ANR	1213031	CastTarget	OnigCodePoint		1212915	0					
ANR	1213032	CallExpression	"ONIGENC_CODE_RANGE_TO ( ranges , i )"		1212915	1					
ANR	1213033	Callee	ONIGENC_CODE_RANGE_TO		1212915	0					
ANR	1213034	Identifier	ONIGENC_CODE_RANGE_TO		1212915	0					
ANR	1213035	ArgumentList	ranges		1212915	1					
ANR	1213036	Argument	ranges		1212915	0					
ANR	1213037	Identifier	ranges		1212915	0					
ANR	1213038	Argument	i		1212915	1					
ANR	1213039	Identifier	i		1212915	0					
ANR	1213040	PostIncDecOperationExpression	j ++	1165:66:25513:25515	1212915	2	True				
ANR	1213041	Identifier	j		1212915	0					
ANR	1213042	IncDec	++		1212915	1					
ANR	1213043	CompoundStatement		17:71:433:433	1212915	3					
ANR	1213044	IfStatement	if ( j >= sb_out )		1212915	0					
ANR	1213045	Condition	j >= sb_out	1166:5:25525:25535	1212915	0	True				
ANR	1213046	RelationalExpression	j >= sb_out		1212915	0		>=			
ANR	1213047	Identifier	j		1212915	0					
ANR	1213048	Identifier	sb_out		1212915	1					
ANR	1213049	GotoStatement	goto sb_end ;	1166:18:25538:25549	1212915	1	True				
ANR	1213050	Identifier	sb_end		1212915	0					
ANR	1213051	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , j )"	1168:8:25560:25585	1212915	1	True				
ANR	1213052	CallExpression	"BITSET_SET_BIT ( cc -> bs , j )"		1212915	0					
ANR	1213053	Callee	BITSET_SET_BIT		1212915	0					
ANR	1213054	Identifier	BITSET_SET_BIT		1212915	0					
ANR	1213055	ArgumentList	cc -> bs		1212915	1					
ANR	1213056	Argument	cc -> bs		1212915	0					
ANR	1213057	PtrMemberAccess	cc -> bs		1212915	0					
ANR	1213058	Identifier	cc		1212915	0					
ANR	1213059	Identifier	bs		1212915	1					
ANR	1213060	Argument	j		1212915	1					
ANR	1213061	Identifier	j		1212915	0					
ANR	1213062	Label	sb_end :	1173:1:25607:25613	1212915	9	True				
ANR	1213063	Identifier	sb_end		1212915	0					
ANR	1213064	IfStatement	if ( IS_NULL ( ranges ) )		1212915	10					
ANR	1213065	Condition	IS_NULL ( ranges )	1174:6:25621:25635	1212915	0	True				
ANR	1213066	CallExpression	IS_NULL ( ranges )		1212915	0					
ANR	1213067	Callee	IS_NULL		1212915	0					
ANR	1213068	Identifier	IS_NULL		1212915	0					
ANR	1213069	ArgumentList	ranges		1212915	1					
ANR	1213070	Argument	ranges		1212915	0					
ANR	1213071	Identifier	ranges		1212915	0					
ANR	1213072	CompoundStatement		26:23:553:553	1212915	1					
ANR	1213073	Label	is_null :	1175:2:25642:25649	1212915	0	True				
ANR	1213074	Identifier	is_null		1212915	0					
ANR	1213075	ExpressionStatement	cc -> mbuf = NULL	1176:4:25655:25670	1212915	1	True				
ANR	1213076	AssignmentExpression	cc -> mbuf = NULL		1212915	0		=			
ANR	1213077	PtrMemberAccess	cc -> mbuf		1212915	0					
ANR	1213078	Identifier	cc		1212915	0					
ANR	1213079	Identifier	mbuf		1212915	1					
ANR	1213080	Identifier	NULL		1212915	1					
ANR	1213081	ElseStatement	else		1212915	0					
ANR	1213082	CompoundStatement		31:4:604:614	1212915	0					
ANR	1213083	IdentifierDeclStatement	BBuf * bbuf ;	1179:4:25689:25699	1212915	0	True				
ANR	1213084	IdentifierDecl	* bbuf		1212915	0					
ANR	1213085	IdentifierDeclType	BBuf *		1212915	0					
ANR	1213086	Identifier	bbuf		1212915	1					
ANR	1213087	ExpressionStatement	n = ONIGENC_CODE_RANGE_NUM ( ranges )	1181:4:25706:25740	1212915	1	True				
ANR	1213088	AssignmentExpression	n = ONIGENC_CODE_RANGE_NUM ( ranges )		1212915	0		=			
ANR	1213089	Identifier	n		1212915	0					
ANR	1213090	CallExpression	ONIGENC_CODE_RANGE_NUM ( ranges )		1212915	1					
ANR	1213091	Callee	ONIGENC_CODE_RANGE_NUM		1212915	0					
ANR	1213092	Identifier	ONIGENC_CODE_RANGE_NUM		1212915	0					
ANR	1213093	ArgumentList	ranges		1212915	1					
ANR	1213094	Argument	ranges		1212915	0					
ANR	1213095	Identifier	ranges		1212915	0					
ANR	1213096	IfStatement	if ( n == 0 )		1212915	2					
ANR	1213097	Condition	n == 0	1182:8:25750:25755	1212915	0	True				
ANR	1213098	EqualityExpression	n == 0		1212915	0		==			
ANR	1213099	Identifier	n		1212915	0					
ANR	1213100	PrimaryExpression	0		1212915	1					
ANR	1213101	GotoStatement	goto is_null ;	1182:16:25758:25770	1212915	1	True				
ANR	1213102	Identifier	is_null		1212915	0					
ANR	1213103	ExpressionStatement	bbuf = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )	1184:4:25777:25813	1212915	3	True				
ANR	1213104	AssignmentExpression	bbuf = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )		1212915	0		=			
ANR	1213105	Identifier	bbuf		1212915	0					
ANR	1213106	CastExpression	( BBuf * ) xmalloc ( sizeof ( BBuf ) )		1212915	1					
ANR	1213107	CastTarget	BBuf *		1212915	0					
ANR	1213108	CallExpression	xmalloc ( sizeof ( BBuf ) )		1212915	1					
ANR	1213109	Callee	xmalloc		1212915	0					
ANR	1213110	Identifier	xmalloc		1212915	0					
ANR	1213111	ArgumentList	sizeof ( BBuf )		1212915	1					
ANR	1213112	Argument	sizeof ( BBuf )		1212915	0					
ANR	1213113	SizeofExpression	sizeof ( BBuf )		1212915	0					
ANR	1213114	Sizeof	sizeof		1212915	0					
ANR	1213115	SizeofOperand	BBuf		1212915	1					
ANR	1213116	ExpressionStatement	CHECK_NULL_RETURN ( bbuf )	1185:4:25819:25842	1212915	4	True				
ANR	1213117	CallExpression	CHECK_NULL_RETURN ( bbuf )		1212915	0					
ANR	1213118	Callee	CHECK_NULL_RETURN		1212915	0					
ANR	1213119	Identifier	CHECK_NULL_RETURN		1212915	0					
ANR	1213120	ArgumentList	bbuf		1212915	1					
ANR	1213121	Argument	bbuf		1212915	0					
ANR	1213122	Identifier	bbuf		1212915	0					
ANR	1213123	ExpressionStatement	bbuf -> alloc = n + 1	1186:4:25848:25867	1212915	5	True				
ANR	1213124	AssignmentExpression	bbuf -> alloc = n + 1		1212915	0		=			
ANR	1213125	PtrMemberAccess	bbuf -> alloc		1212915	0					
ANR	1213126	Identifier	bbuf		1212915	0					
ANR	1213127	Identifier	alloc		1212915	1					
ANR	1213128	AdditiveExpression	n + 1		1212915	1		+			
ANR	1213129	Identifier	n		1212915	0					
ANR	1213130	PrimaryExpression	1		1212915	1					
ANR	1213131	ExpressionStatement	bbuf -> used = n + 1	1187:4:25873:25892	1212915	6	True				
ANR	1213132	AssignmentExpression	bbuf -> used = n + 1		1212915	0		=			
ANR	1213133	PtrMemberAccess	bbuf -> used		1212915	0					
ANR	1213134	Identifier	bbuf		1212915	0					
ANR	1213135	Identifier	used		1212915	1					
ANR	1213136	AdditiveExpression	n + 1		1212915	1		+			
ANR	1213137	Identifier	n		1212915	0					
ANR	1213138	PrimaryExpression	1		1212915	1					
ANR	1213139	ExpressionStatement	bbuf -> p = ( UChar * ) ( ( void * ) ranges )	1188:4:25898:25937	1212915	7	True				
ANR	1213140	AssignmentExpression	bbuf -> p = ( UChar * ) ( ( void * ) ranges )		1212915	0		=			
ANR	1213141	PtrMemberAccess	bbuf -> p		1212915	0					
ANR	1213142	Identifier	bbuf		1212915	0					
ANR	1213143	Identifier	p		1212915	1					
ANR	1213144	CastExpression	( UChar * ) ( ( void * ) ranges )		1212915	1					
ANR	1213145	CastTarget	UChar *		1212915	0					
ANR	1213146	CastExpression	( void * ) ranges		1212915	1					
ANR	1213147	CastTarget	void *		1212915	0					
ANR	1213148	Identifier	ranges		1212915	1					
ANR	1213149	ExpressionStatement	cc -> mbuf = bbuf	1190:4:25944:25959	1212915	8	True				
ANR	1213150	AssignmentExpression	cc -> mbuf = bbuf		1212915	0		=			
ANR	1213151	PtrMemberAccess	cc -> mbuf		1212915	0					
ANR	1213152	Identifier	cc		1212915	0					
ANR	1213153	Identifier	mbuf		1212915	1					
ANR	1213154	Identifier	bbuf		1212915	1					
ANR	1213155	ReturnStatement	return node ;	1193:2:25968:25979	1212915	11	True				
ANR	1213156	Identifier	node		1212915	0					
ANR	1213157	ReturnType	static Node *		1212915	1					
ANR	1213158	Identifier	node_new_cclass_by_codepoint_range		1212915	2					
ANR	1213159	ParameterList	"int not , OnigCodePoint sb_out , const OnigCodePoint ranges [ ]"		1212915	3					
ANR	1213160	Parameter	int not	1147:35:25016:25022	1212915	0	True				
ANR	1213161	ParameterType	int		1212915	0					
ANR	1213162	Identifier	not		1212915	1					
ANR	1213163	Parameter	OnigCodePoint sb_out	1147:44:25025:25044	1212915	1	True				
ANR	1213164	ParameterType	OnigCodePoint		1212915	0					
ANR	1213165	Identifier	sb_out		1212915	1					
ANR	1213166	Parameter	const OnigCodePoint ranges [ ]	1148:7:25054:25081	1212915	2	True				
ANR	1213167	ParameterType	const OnigCodePoint [ ]		1212915	0					
ANR	1213168	Identifier	ranges		1212915	1					
ANR	1213169	CFGEntryNode	ENTRY		1212915		True				
ANR	1213170	CFGExitNode	EXIT		1212915		True				
ANR	1213171	Symbol	IS_NOT_NULL		1212915						
ANR	1213172	Symbol	ranges		1212915						
ANR	1213173	Symbol	ONIGENC_CODE_RANGE_TO		1212915						
ANR	1213174	Symbol	node_new_cclass		1212915						
ANR	1213175	Symbol	* cc		1212915						
ANR	1213176	Symbol	bbuf -> alloc		1212915						
ANR	1213177	Symbol	cc -> mbuf		1212915						
ANR	1213178	Symbol	NCCLASS		1212915						
ANR	1213179	Symbol	sb_out		1212915						
ANR	1213180	Symbol	not		1212915						
ANR	1213181	Symbol	IS_NULL		1212915						
ANR	1213182	Symbol	xmalloc		1212915						
ANR	1213183	Symbol	ONIGENC_CODE_RANGE_FROM		1212915						
ANR	1213184	Symbol	* bbuf		1212915						
ANR	1213185	Symbol	cc		1212915						
ANR	1213186	Symbol	NULL		1212915						
ANR	1213187	Symbol	i		1212915						
ANR	1213188	Symbol	j		1212915						
ANR	1213189	Symbol	n		1212915						
ANR	1213190	Symbol	cc -> bs		1212915						
ANR	1213191	Symbol	node		1212915						
ANR	1213192	Symbol	bbuf -> p		1212915						
ANR	1213193	Symbol	ONIGENC_CODE_RANGE_NUM		1212915						
ANR	1213194	Symbol	bbuf -> used		1212915						
ANR	1213195	Symbol	bbuf		1212915						
ANR	1213196	Function	node_new_ctype	1196:0:25984:26191							
ANR	1213197	FunctionDef	"node_new_ctype (int type , int not)"		1213196	0					
ANR	1213198	CompoundStatement		1198:0:26031:26191	1213196	0					
ANR	1213199	IdentifierDeclStatement	Node * node = node_new ( ) ;	1199:2:26035:26058	1213196	0	True				
ANR	1213200	IdentifierDecl	* node = node_new ( )		1213196	0					
ANR	1213201	IdentifierDeclType	Node *		1213196	0					
ANR	1213202	Identifier	node		1213196	1					
ANR	1213203	AssignmentExpression	* node = node_new ( )		1213196	2		=			
ANR	1213204	Identifier	node		1213196	0					
ANR	1213205	CallExpression	node_new ( )		1213196	1					
ANR	1213206	Callee	node_new		1213196	0					
ANR	1213207	Identifier	node_new		1213196	0					
ANR	1213208	ArgumentList			1213196	1					
ANR	1213209	ExpressionStatement	CHECK_NULL_RETURN ( node )	1200:2:26062:26085	1213196	1	True				
ANR	1213210	CallExpression	CHECK_NULL_RETURN ( node )		1213196	0					
ANR	1213211	Callee	CHECK_NULL_RETURN		1213196	0					
ANR	1213212	Identifier	CHECK_NULL_RETURN		1213196	0					
ANR	1213213	ArgumentList	node		1213196	1					
ANR	1213214	Argument	node		1213196	0					
ANR	1213215	Identifier	node		1213196	0					
ANR	1213216	ExpressionStatement	"SET_NTYPE ( node , NT_CTYPE )"	1202:2:26090:26115	1213196	2	True				
ANR	1213217	CallExpression	"SET_NTYPE ( node , NT_CTYPE )"		1213196	0					
ANR	1213218	Callee	SET_NTYPE		1213196	0					
ANR	1213219	Identifier	SET_NTYPE		1213196	0					
ANR	1213220	ArgumentList	node		1213196	1					
ANR	1213221	Argument	node		1213196	0					
ANR	1213222	Identifier	node		1213196	0					
ANR	1213223	Argument	NT_CTYPE		1213196	1					
ANR	1213224	Identifier	NT_CTYPE		1213196	0					
ANR	1213225	ExpressionStatement	NCTYPE ( node ) -> ctype = type	1203:2:26119:26145	1213196	3	True				
ANR	1213226	AssignmentExpression	NCTYPE ( node ) -> ctype = type		1213196	0		=			
ANR	1213227	PtrMemberAccess	NCTYPE ( node ) -> ctype		1213196	0					
ANR	1213228	CallExpression	NCTYPE ( node )		1213196	0					
ANR	1213229	Callee	NCTYPE		1213196	0					
ANR	1213230	Identifier	NCTYPE		1213196	0					
ANR	1213231	ArgumentList	node		1213196	1					
ANR	1213232	Argument	node		1213196	0					
ANR	1213233	Identifier	node		1213196	0					
ANR	1213234	Identifier	ctype		1213196	1					
ANR	1213235	Identifier	type		1213196	1					
ANR	1213236	ExpressionStatement	NCTYPE ( node ) -> not = not	1204:2:26149:26174	1213196	4	True				
ANR	1213237	AssignmentExpression	NCTYPE ( node ) -> not = not		1213196	0		=			
ANR	1213238	PtrMemberAccess	NCTYPE ( node ) -> not		1213196	0					
ANR	1213239	CallExpression	NCTYPE ( node )		1213196	0					
ANR	1213240	Callee	NCTYPE		1213196	0					
ANR	1213241	Identifier	NCTYPE		1213196	0					
ANR	1213242	ArgumentList	node		1213196	1					
ANR	1213243	Argument	node		1213196	0					
ANR	1213244	Identifier	node		1213196	0					
ANR	1213245	Identifier	not		1213196	1					
ANR	1213246	Identifier	not		1213196	1					
ANR	1213247	ReturnStatement	return node ;	1205:2:26178:26189	1213196	5	True				
ANR	1213248	Identifier	node		1213196	0					
ANR	1213249	ReturnType	static Node *		1213196	1					
ANR	1213250	Identifier	node_new_ctype		1213196	2					
ANR	1213251	ParameterList	"int type , int not"		1213196	3					
ANR	1213252	Parameter	int type	1197:15:26012:26019	1213196	0	True				
ANR	1213253	ParameterType	int		1213196	0					
ANR	1213254	Identifier	type		1213196	1					
ANR	1213255	Parameter	int not	1197:25:26022:26028	1213196	1	True				
ANR	1213256	ParameterType	int		1213196	0					
ANR	1213257	Identifier	not		1213196	1					
ANR	1213258	CFGEntryNode	ENTRY		1213196		True				
ANR	1213259	CFGExitNode	EXIT		1213196		True				
ANR	1213260	Symbol	node		1213196						
ANR	1213261	Symbol	not		1213196						
ANR	1213262	Symbol	NCTYPE ( node ) -> ctype		1213196						
ANR	1213263	Symbol	node_new		1213196						
ANR	1213264	Symbol	NCTYPE ( node ) -> not		1213196						
ANR	1213265	Symbol	type		1213196						
ANR	1213266	Symbol	NCTYPE		1213196						
ANR	1213267	Symbol	NT_CTYPE		1213196						
ANR	1213268	Symbol	* NCTYPE		1213196						
ANR	1213269	Function	node_new_anychar	1208:0:26194:26330							
ANR	1213270	FunctionDef	node_new_anychar ()		1213269	0					
ANR	1213271	CompoundStatement		1210:0:26230:26330	1213269	0					
ANR	1213272	IdentifierDeclStatement	Node * node = node_new ( ) ;	1211:2:26234:26257	1213269	0	True				
ANR	1213273	IdentifierDecl	* node = node_new ( )		1213269	0					
ANR	1213274	IdentifierDeclType	Node *		1213269	0					
ANR	1213275	Identifier	node		1213269	1					
ANR	1213276	AssignmentExpression	* node = node_new ( )		1213269	2		=			
ANR	1213277	Identifier	node		1213269	0					
ANR	1213278	CallExpression	node_new ( )		1213269	1					
ANR	1213279	Callee	node_new		1213269	0					
ANR	1213280	Identifier	node_new		1213269	0					
ANR	1213281	ArgumentList			1213269	1					
ANR	1213282	ExpressionStatement	CHECK_NULL_RETURN ( node )	1212:2:26261:26284	1213269	1	True				
ANR	1213283	CallExpression	CHECK_NULL_RETURN ( node )		1213269	0					
ANR	1213284	Callee	CHECK_NULL_RETURN		1213269	0					
ANR	1213285	Identifier	CHECK_NULL_RETURN		1213269	0					
ANR	1213286	ArgumentList	node		1213269	1					
ANR	1213287	Argument	node		1213269	0					
ANR	1213288	Identifier	node		1213269	0					
ANR	1213289	ExpressionStatement	"SET_NTYPE ( node , NT_CANY )"	1214:2:26289:26313	1213269	2	True				
ANR	1213290	CallExpression	"SET_NTYPE ( node , NT_CANY )"		1213269	0					
ANR	1213291	Callee	SET_NTYPE		1213269	0					
ANR	1213292	Identifier	SET_NTYPE		1213269	0					
ANR	1213293	ArgumentList	node		1213269	1					
ANR	1213294	Argument	node		1213269	0					
ANR	1213295	Identifier	node		1213269	0					
ANR	1213296	Argument	NT_CANY		1213269	1					
ANR	1213297	Identifier	NT_CANY		1213269	0					
ANR	1213298	ReturnStatement	return node ;	1215:2:26317:26328	1213269	3	True				
ANR	1213299	Identifier	node		1213269	0					
ANR	1213300	ReturnType	static Node *		1213269	1					
ANR	1213301	Identifier	node_new_anychar		1213269	2					
ANR	1213302	ParameterList			1213269	3					
ANR	1213303	CFGEntryNode	ENTRY		1213269		True				
ANR	1213304	CFGExitNode	EXIT		1213269		True				
ANR	1213305	Symbol	node		1213269						
ANR	1213306	Symbol	NT_CANY		1213269						
ANR	1213307	Symbol	node_new		1213269						
ANR	1213308	Function	node_new_list	1218:0:26333:26529							
ANR	1213309	FunctionDef	"node_new_list (Node * left , Node * right)"		1213308	0					
ANR	1213310	CompoundStatement		1220:0:26385:26529	1213308	0					
ANR	1213311	IdentifierDeclStatement	Node * node = node_new ( ) ;	1221:2:26389:26412	1213308	0	True				
ANR	1213312	IdentifierDecl	* node = node_new ( )		1213308	0					
ANR	1213313	IdentifierDeclType	Node *		1213308	0					
ANR	1213314	Identifier	node		1213308	1					
ANR	1213315	AssignmentExpression	* node = node_new ( )		1213308	2		=			
ANR	1213316	Identifier	node		1213308	0					
ANR	1213317	CallExpression	node_new ( )		1213308	1					
ANR	1213318	Callee	node_new		1213308	0					
ANR	1213319	Identifier	node_new		1213308	0					
ANR	1213320	ArgumentList			1213308	1					
ANR	1213321	ExpressionStatement	CHECK_NULL_RETURN ( node )	1222:2:26416:26439	1213308	1	True				
ANR	1213322	CallExpression	CHECK_NULL_RETURN ( node )		1213308	0					
ANR	1213323	Callee	CHECK_NULL_RETURN		1213308	0					
ANR	1213324	Identifier	CHECK_NULL_RETURN		1213308	0					
ANR	1213325	ArgumentList	node		1213308	1					
ANR	1213326	Argument	node		1213308	0					
ANR	1213327	Identifier	node		1213308	0					
ANR	1213328	ExpressionStatement	"SET_NTYPE ( node , NT_LIST )"	1224:2:26444:26468	1213308	2	True				
ANR	1213329	CallExpression	"SET_NTYPE ( node , NT_LIST )"		1213308	0					
ANR	1213330	Callee	SET_NTYPE		1213308	0					
ANR	1213331	Identifier	SET_NTYPE		1213308	0					
ANR	1213332	ArgumentList	node		1213308	1					
ANR	1213333	Argument	node		1213308	0					
ANR	1213334	Identifier	node		1213308	0					
ANR	1213335	Argument	NT_LIST		1213308	1					
ANR	1213336	Identifier	NT_LIST		1213308	0					
ANR	1213337	ExpressionStatement	NCAR ( node ) = left	1225:2:26472:26490	1213308	3	True				
ANR	1213338	AssignmentExpression	NCAR ( node ) = left		1213308	0		=			
ANR	1213339	CallExpression	NCAR ( node )		1213308	0					
ANR	1213340	Callee	NCAR		1213308	0					
ANR	1213341	Identifier	NCAR		1213308	0					
ANR	1213342	ArgumentList	node		1213308	1					
ANR	1213343	Argument	node		1213308	0					
ANR	1213344	Identifier	node		1213308	0					
ANR	1213345	Identifier	left		1213308	1					
ANR	1213346	ExpressionStatement	NCDR ( node ) = right	1226:2:26494:26512	1213308	4	True				
ANR	1213347	AssignmentExpression	NCDR ( node ) = right		1213308	0		=			
ANR	1213348	CallExpression	NCDR ( node )		1213308	0					
ANR	1213349	Callee	NCDR		1213308	0					
ANR	1213350	Identifier	NCDR		1213308	0					
ANR	1213351	ArgumentList	node		1213308	1					
ANR	1213352	Argument	node		1213308	0					
ANR	1213353	Identifier	node		1213308	0					
ANR	1213354	Identifier	right		1213308	1					
ANR	1213355	ReturnStatement	return node ;	1227:2:26516:26527	1213308	5	True				
ANR	1213356	Identifier	node		1213308	0					
ANR	1213357	ReturnType	static Node *		1213308	1					
ANR	1213358	Identifier	node_new_list		1213308	2					
ANR	1213359	ParameterList	"Node * left , Node * right"		1213308	3					
ANR	1213360	Parameter	Node * left	1219:14:26360:26369	1213308	0	True				
ANR	1213361	ParameterType	Node *		1213308	0					
ANR	1213362	Identifier	left		1213308	1					
ANR	1213363	Parameter	Node * right	1219:26:26372:26382	1213308	1	True				
ANR	1213364	ParameterType	Node *		1213308	0					
ANR	1213365	Identifier	right		1213308	1					
ANR	1213366	CFGEntryNode	ENTRY		1213308		True				
ANR	1213367	CFGExitNode	EXIT		1213308		True				
ANR	1213368	Symbol	node		1213308						
ANR	1213369	Symbol	NCAR		1213308						
ANR	1213370	Symbol	left		1213308						
ANR	1213371	Symbol	node_new		1213308						
ANR	1213372	Symbol	NCDR		1213308						
ANR	1213373	Symbol	right		1213308						
ANR	1213374	Symbol	NT_LIST		1213308						
ANR	1213375	Function	onig_node_new_list	1230:0:26532:26628							
ANR	1213376	FunctionDef	"onig_node_new_list (Node * left , Node * right)"		1213375	0					
ANR	1213377	CompoundStatement		1232:0:26589:26628	1213375	0					
ANR	1213378	ReturnStatement	"return node_new_list ( left , right ) ;"	1233:2:26593:26626	1213375	0	True				
ANR	1213379	CallExpression	"node_new_list ( left , right )"		1213375	0					
ANR	1213380	Callee	node_new_list		1213375	0					
ANR	1213381	Identifier	node_new_list		1213375	0					
ANR	1213382	ArgumentList	left		1213375	1					
ANR	1213383	Argument	left		1213375	0					
ANR	1213384	Identifier	left		1213375	0					
ANR	1213385	Argument	right		1213375	1					
ANR	1213386	Identifier	right		1213375	0					
ANR	1213387	ReturnType	extern Node *		1213375	1					
ANR	1213388	Identifier	onig_node_new_list		1213375	2					
ANR	1213389	ParameterList	"Node * left , Node * right"		1213375	3					
ANR	1213390	Parameter	Node * left	1231:19:26564:26573	1213375	0	True				
ANR	1213391	ParameterType	Node *		1213375	0					
ANR	1213392	Identifier	left		1213375	1					
ANR	1213393	Parameter	Node * right	1231:31:26576:26586	1213375	1	True				
ANR	1213394	ParameterType	Node *		1213375	0					
ANR	1213395	Identifier	right		1213375	1					
ANR	1213396	CFGEntryNode	ENTRY		1213375		True				
ANR	1213397	CFGExitNode	EXIT		1213375		True				
ANR	1213398	Symbol	left		1213375						
ANR	1213399	Symbol	node_new_list		1213375						
ANR	1213400	Symbol	right		1213375						
ANR	1213401	Function	onig_node_list_add	1236:0:26631:26896							
ANR	1213402	FunctionDef	"onig_node_list_add (Node * list , Node * x)"		1213401	0					
ANR	1213403	CompoundStatement		1238:0:26684:26896	1213401	0					
ANR	1213404	IdentifierDeclStatement	Node * n ;	1239:2:26688:26695	1213401	0	True				
ANR	1213405	IdentifierDecl	* n		1213401	0					
ANR	1213406	IdentifierDeclType	Node *		1213401	0					
ANR	1213407	Identifier	n		1213401	1					
ANR	1213408	ExpressionStatement	"n = onig_node_new_list ( x , NULL )"	1241:2:26700:26731	1213401	1	True				
ANR	1213409	AssignmentExpression	"n = onig_node_new_list ( x , NULL )"		1213401	0		=			
ANR	1213410	Identifier	n		1213401	0					
ANR	1213411	CallExpression	"onig_node_new_list ( x , NULL )"		1213401	1					
ANR	1213412	Callee	onig_node_new_list		1213401	0					
ANR	1213413	Identifier	onig_node_new_list		1213401	0					
ANR	1213414	ArgumentList	x		1213401	1					
ANR	1213415	Argument	x		1213401	0					
ANR	1213416	Identifier	x		1213401	0					
ANR	1213417	Argument	NULL		1213401	1					
ANR	1213418	Identifier	NULL		1213401	0					
ANR	1213419	IfStatement	if ( IS_NULL ( n ) )		1213401	2					
ANR	1213420	Condition	IS_NULL ( n )	1242:6:26739:26748	1213401	0	True				
ANR	1213421	CallExpression	IS_NULL ( n )		1213401	0					
ANR	1213422	Callee	IS_NULL		1213401	0					
ANR	1213423	Identifier	IS_NULL		1213401	0					
ANR	1213424	ArgumentList	n		1213401	1					
ANR	1213425	Argument	n		1213401	0					
ANR	1213426	Identifier	n		1213401	0					
ANR	1213427	ReturnStatement	return NULL_NODE ;	1242:18:26751:26767	1213401	1	True				
ANR	1213428	Identifier	NULL_NODE		1213401	0					
ANR	1213429	IfStatement	if ( IS_NOT_NULL ( list ) )		1213401	3					
ANR	1213430	Condition	IS_NOT_NULL ( list )	1244:6:26776:26792	1213401	0	True				
ANR	1213431	CallExpression	IS_NOT_NULL ( list )		1213401	0					
ANR	1213432	Callee	IS_NOT_NULL		1213401	0					
ANR	1213433	Identifier	IS_NOT_NULL		1213401	0					
ANR	1213434	ArgumentList	list		1213401	1					
ANR	1213435	Argument	list		1213401	0					
ANR	1213436	Identifier	list		1213401	0					
ANR	1213437	CompoundStatement		7:25:110:110	1213401	1					
ANR	1213438	WhileStatement	while ( IS_NOT_NULL ( NCDR ( list ) ) )		1213401	0					
ANR	1213439	Condition	IS_NOT_NULL ( NCDR ( list ) )	1245:11:26808:26830	1213401	0	True				
ANR	1213440	CallExpression	IS_NOT_NULL ( NCDR ( list ) )		1213401	0					
ANR	1213441	Callee	IS_NOT_NULL		1213401	0					
ANR	1213442	Identifier	IS_NOT_NULL		1213401	0					
ANR	1213443	ArgumentList	NCDR ( list )		1213401	1					
ANR	1213444	Argument	NCDR ( list )		1213401	0					
ANR	1213445	CallExpression	NCDR ( list )		1213401	0					
ANR	1213446	Callee	NCDR		1213401	0					
ANR	1213447	Identifier	NCDR		1213401	0					
ANR	1213448	ArgumentList	list		1213401	1					
ANR	1213449	Argument	list		1213401	0					
ANR	1213450	Identifier	list		1213401	0					
ANR	1213451	ExpressionStatement	list = NCDR ( list )	1246:6:26839:26856	1213401	1	True				
ANR	1213452	AssignmentExpression	list = NCDR ( list )		1213401	0		=			
ANR	1213453	Identifier	list		1213401	0					
ANR	1213454	CallExpression	NCDR ( list )		1213401	1					
ANR	1213455	Callee	NCDR		1213401	0					
ANR	1213456	Identifier	NCDR		1213401	0					
ANR	1213457	ArgumentList	list		1213401	1					
ANR	1213458	Argument	list		1213401	0					
ANR	1213459	Identifier	list		1213401	0					
ANR	1213460	ExpressionStatement	NCDR ( list ) = n	1248:4:26863:26877	1213401	1	True				
ANR	1213461	AssignmentExpression	NCDR ( list ) = n		1213401	0		=			
ANR	1213462	CallExpression	NCDR ( list )		1213401	0					
ANR	1213463	Callee	NCDR		1213401	0					
ANR	1213464	Identifier	NCDR		1213401	0					
ANR	1213465	ArgumentList	list		1213401	1					
ANR	1213466	Argument	list		1213401	0					
ANR	1213467	Identifier	list		1213401	0					
ANR	1213468	Identifier	n		1213401	1					
ANR	1213469	ReturnStatement	return n ;	1251:2:26886:26894	1213401	4	True				
ANR	1213470	Identifier	n		1213401	0					
ANR	1213471	ReturnType	extern Node *		1213401	1					
ANR	1213472	Identifier	onig_node_list_add		1213401	2					
ANR	1213473	ParameterList	"Node * list , Node * x"		1213401	3					
ANR	1213474	Parameter	Node * list	1237:19:26663:26672	1213401	0	True				
ANR	1213475	ParameterType	Node *		1213401	0					
ANR	1213476	Identifier	list		1213401	1					
ANR	1213477	Parameter	Node * x	1237:31:26675:26681	1213401	1	True				
ANR	1213478	ParameterType	Node *		1213401	0					
ANR	1213479	Identifier	x		1213401	1					
ANR	1213480	CFGEntryNode	ENTRY		1213401		True				
ANR	1213481	CFGExitNode	EXIT		1213401		True				
ANR	1213482	Symbol	IS_NOT_NULL		1213401						
ANR	1213483	Symbol	NULL		1213401						
ANR	1213484	Symbol	IS_NULL		1213401						
ANR	1213485	Symbol	NCDR		1213401						
ANR	1213486	Symbol	x		1213401						
ANR	1213487	Symbol	list		1213401						
ANR	1213488	Symbol	onig_node_new_list		1213401						
ANR	1213489	Symbol	NULL_NODE		1213401						
ANR	1213490	Symbol	n		1213401						
ANR	1213491	Function	onig_node_new_alt	1254:0:26899:27098							
ANR	1213492	FunctionDef	"onig_node_new_alt (Node * left , Node * right)"		1213491	0					
ANR	1213493	CompoundStatement		1256:0:26955:27098	1213491	0					
ANR	1213494	IdentifierDeclStatement	Node * node = node_new ( ) ;	1257:2:26959:26982	1213491	0	True				
ANR	1213495	IdentifierDecl	* node = node_new ( )		1213491	0					
ANR	1213496	IdentifierDeclType	Node *		1213491	0					
ANR	1213497	Identifier	node		1213491	1					
ANR	1213498	AssignmentExpression	* node = node_new ( )		1213491	2		=			
ANR	1213499	Identifier	node		1213491	0					
ANR	1213500	CallExpression	node_new ( )		1213491	1					
ANR	1213501	Callee	node_new		1213491	0					
ANR	1213502	Identifier	node_new		1213491	0					
ANR	1213503	ArgumentList			1213491	1					
ANR	1213504	ExpressionStatement	CHECK_NULL_RETURN ( node )	1258:2:26986:27009	1213491	1	True				
ANR	1213505	CallExpression	CHECK_NULL_RETURN ( node )		1213491	0					
ANR	1213506	Callee	CHECK_NULL_RETURN		1213491	0					
ANR	1213507	Identifier	CHECK_NULL_RETURN		1213491	0					
ANR	1213508	ArgumentList	node		1213491	1					
ANR	1213509	Argument	node		1213491	0					
ANR	1213510	Identifier	node		1213491	0					
ANR	1213511	ExpressionStatement	"SET_NTYPE ( node , NT_ALT )"	1260:2:27014:27037	1213491	2	True				
ANR	1213512	CallExpression	"SET_NTYPE ( node , NT_ALT )"		1213491	0					
ANR	1213513	Callee	SET_NTYPE		1213491	0					
ANR	1213514	Identifier	SET_NTYPE		1213491	0					
ANR	1213515	ArgumentList	node		1213491	1					
ANR	1213516	Argument	node		1213491	0					
ANR	1213517	Identifier	node		1213491	0					
ANR	1213518	Argument	NT_ALT		1213491	1					
ANR	1213519	Identifier	NT_ALT		1213491	0					
ANR	1213520	ExpressionStatement	NCAR ( node ) = left	1261:2:27041:27059	1213491	3	True				
ANR	1213521	AssignmentExpression	NCAR ( node ) = left		1213491	0		=			
ANR	1213522	CallExpression	NCAR ( node )		1213491	0					
ANR	1213523	Callee	NCAR		1213491	0					
ANR	1213524	Identifier	NCAR		1213491	0					
ANR	1213525	ArgumentList	node		1213491	1					
ANR	1213526	Argument	node		1213491	0					
ANR	1213527	Identifier	node		1213491	0					
ANR	1213528	Identifier	left		1213491	1					
ANR	1213529	ExpressionStatement	NCDR ( node ) = right	1262:2:27063:27081	1213491	4	True				
ANR	1213530	AssignmentExpression	NCDR ( node ) = right		1213491	0		=			
ANR	1213531	CallExpression	NCDR ( node )		1213491	0					
ANR	1213532	Callee	NCDR		1213491	0					
ANR	1213533	Identifier	NCDR		1213491	0					
ANR	1213534	ArgumentList	node		1213491	1					
ANR	1213535	Argument	node		1213491	0					
ANR	1213536	Identifier	node		1213491	0					
ANR	1213537	Identifier	right		1213491	1					
ANR	1213538	ReturnStatement	return node ;	1263:2:27085:27096	1213491	5	True				
ANR	1213539	Identifier	node		1213491	0					
ANR	1213540	ReturnType	extern Node *		1213491	1					
ANR	1213541	Identifier	onig_node_new_alt		1213491	2					
ANR	1213542	ParameterList	"Node * left , Node * right"		1213491	3					
ANR	1213543	Parameter	Node * left	1255:18:26930:26939	1213491	0	True				
ANR	1213544	ParameterType	Node *		1213491	0					
ANR	1213545	Identifier	left		1213491	1					
ANR	1213546	Parameter	Node * right	1255:30:26942:26952	1213491	1	True				
ANR	1213547	ParameterType	Node *		1213491	0					
ANR	1213548	Identifier	right		1213491	1					
ANR	1213549	CFGEntryNode	ENTRY		1213491		True				
ANR	1213550	CFGExitNode	EXIT		1213491		True				
ANR	1213551	Symbol	node		1213491						
ANR	1213552	Symbol	NCAR		1213491						
ANR	1213553	Symbol	left		1213491						
ANR	1213554	Symbol	NT_ALT		1213491						
ANR	1213555	Symbol	node_new		1213491						
ANR	1213556	Symbol	NCDR		1213491						
ANR	1213557	Symbol	right		1213491						
ANR	1213558	Function	onig_node_new_anchor	1266:0:27101:27347							
ANR	1213559	FunctionDef	onig_node_new_anchor (int type)		1213558	0					
ANR	1213560	CompoundStatement		1268:0:27145:27347	1213558	0					
ANR	1213561	IdentifierDeclStatement	Node * node = node_new ( ) ;	1269:2:27149:27172	1213558	0	True				
ANR	1213562	IdentifierDecl	* node = node_new ( )		1213558	0					
ANR	1213563	IdentifierDeclType	Node *		1213558	0					
ANR	1213564	Identifier	node		1213558	1					
ANR	1213565	AssignmentExpression	* node = node_new ( )		1213558	2		=			
ANR	1213566	Identifier	node		1213558	0					
ANR	1213567	CallExpression	node_new ( )		1213558	1					
ANR	1213568	Callee	node_new		1213558	0					
ANR	1213569	Identifier	node_new		1213558	0					
ANR	1213570	ArgumentList			1213558	1					
ANR	1213571	ExpressionStatement	CHECK_NULL_RETURN ( node )	1270:2:27176:27199	1213558	1	True				
ANR	1213572	CallExpression	CHECK_NULL_RETURN ( node )		1213558	0					
ANR	1213573	Callee	CHECK_NULL_RETURN		1213558	0					
ANR	1213574	Identifier	CHECK_NULL_RETURN		1213558	0					
ANR	1213575	ArgumentList	node		1213558	1					
ANR	1213576	Argument	node		1213558	0					
ANR	1213577	Identifier	node		1213558	0					
ANR	1213578	ExpressionStatement	"SET_NTYPE ( node , NT_ANCHOR )"	1272:2:27204:27230	1213558	2	True				
ANR	1213579	CallExpression	"SET_NTYPE ( node , NT_ANCHOR )"		1213558	0					
ANR	1213580	Callee	SET_NTYPE		1213558	0					
ANR	1213581	Identifier	SET_NTYPE		1213558	0					
ANR	1213582	ArgumentList	node		1213558	1					
ANR	1213583	Argument	node		1213558	0					
ANR	1213584	Identifier	node		1213558	0					
ANR	1213585	Argument	NT_ANCHOR		1213558	1					
ANR	1213586	Identifier	NT_ANCHOR		1213558	0					
ANR	1213587	ExpressionStatement	NANCHOR ( node ) -> type = type	1273:2:27234:27264	1213558	3	True				
ANR	1213588	AssignmentExpression	NANCHOR ( node ) -> type = type		1213558	0		=			
ANR	1213589	PtrMemberAccess	NANCHOR ( node ) -> type		1213558	0					
ANR	1213590	CallExpression	NANCHOR ( node )		1213558	0					
ANR	1213591	Callee	NANCHOR		1213558	0					
ANR	1213592	Identifier	NANCHOR		1213558	0					
ANR	1213593	ArgumentList	node		1213558	1					
ANR	1213594	Argument	node		1213558	0					
ANR	1213595	Identifier	node		1213558	0					
ANR	1213596	Identifier	type		1213558	1					
ANR	1213597	Identifier	type		1213558	1					
ANR	1213598	ExpressionStatement	NANCHOR ( node ) -> target = NULL	1274:2:27268:27298	1213558	4	True				
ANR	1213599	AssignmentExpression	NANCHOR ( node ) -> target = NULL		1213558	0		=			
ANR	1213600	PtrMemberAccess	NANCHOR ( node ) -> target		1213558	0					
ANR	1213601	CallExpression	NANCHOR ( node )		1213558	0					
ANR	1213602	Callee	NANCHOR		1213558	0					
ANR	1213603	Identifier	NANCHOR		1213558	0					
ANR	1213604	ArgumentList	node		1213558	1					
ANR	1213605	Argument	node		1213558	0					
ANR	1213606	Identifier	node		1213558	0					
ANR	1213607	Identifier	target		1213558	1					
ANR	1213608	Identifier	NULL		1213558	1					
ANR	1213609	ExpressionStatement	NANCHOR ( node ) -> char_len = - 1	1275:2:27302:27330	1213558	5	True				
ANR	1213610	AssignmentExpression	NANCHOR ( node ) -> char_len = - 1		1213558	0		=			
ANR	1213611	PtrMemberAccess	NANCHOR ( node ) -> char_len		1213558	0					
ANR	1213612	CallExpression	NANCHOR ( node )		1213558	0					
ANR	1213613	Callee	NANCHOR		1213558	0					
ANR	1213614	Identifier	NANCHOR		1213558	0					
ANR	1213615	ArgumentList	node		1213558	1					
ANR	1213616	Argument	node		1213558	0					
ANR	1213617	Identifier	node		1213558	0					
ANR	1213618	Identifier	char_len		1213558	1					
ANR	1213619	UnaryOperationExpression	- 1		1213558	1					
ANR	1213620	UnaryOperator	-		1213558	0					
ANR	1213621	PrimaryExpression	1		1213558	1					
ANR	1213622	ReturnStatement	return node ;	1276:2:27334:27345	1213558	6	True				
ANR	1213623	Identifier	node		1213558	0					
ANR	1213624	ReturnType	extern Node *		1213558	1					
ANR	1213625	Identifier	onig_node_new_anchor		1213558	2					
ANR	1213626	ParameterList	int type		1213558	3					
ANR	1213627	Parameter	int type	1267:21:27135:27142	1213558	0	True				
ANR	1213628	ParameterType	int		1213558	0					
ANR	1213629	Identifier	type		1213558	1					
ANR	1213630	CFGEntryNode	ENTRY		1213558		True				
ANR	1213631	CFGExitNode	EXIT		1213558		True				
ANR	1213632	Symbol	node		1213558						
ANR	1213633	Symbol	NULL		1213558						
ANR	1213634	Symbol	node_new		1213558						
ANR	1213635	Symbol	* NANCHOR		1213558						
ANR	1213636	Symbol	NANCHOR		1213558						
ANR	1213637	Symbol	NANCHOR ( node ) -> target		1213558						
ANR	1213638	Symbol	NANCHOR ( node ) -> type		1213558						
ANR	1213639	Symbol	type		1213558						
ANR	1213640	Symbol	NT_ANCHOR		1213558						
ANR	1213641	Symbol	NANCHOR ( node ) -> char_len		1213558						
ANR	1213642	DeclStmt									
ANR	1213643	Decl							int	int	i
ANR	1213644	DeclStmt									
ANR	1213645	Decl							Node	Node *	node
ANR	1213646	DeclStmt									
ANR	1213647	Decl							int	int *	p
ANR	1213648	Function	node_new_call	1331:0:28546:28919							
ANR	1213649	FunctionDef	"node_new_call (UChar * name , UChar * name_end , int gnum)"		1213648	0					
ANR	1213650	CompoundStatement		1333:0:28613:28919	1213648	0					
ANR	1213651	IdentifierDeclStatement	Node * node = node_new ( ) ;	1334:2:28617:28640	1213648	0	True				
ANR	1213652	IdentifierDecl	* node = node_new ( )		1213648	0					
ANR	1213653	IdentifierDeclType	Node *		1213648	0					
ANR	1213654	Identifier	node		1213648	1					
ANR	1213655	AssignmentExpression	* node = node_new ( )		1213648	2		=			
ANR	1213656	Identifier	node		1213648	0					
ANR	1213657	CallExpression	node_new ( )		1213648	1					
ANR	1213658	Callee	node_new		1213648	0					
ANR	1213659	Identifier	node_new		1213648	0					
ANR	1213660	ArgumentList			1213648	1					
ANR	1213661	ExpressionStatement	CHECK_NULL_RETURN ( node )	1335:2:28644:28667	1213648	1	True				
ANR	1213662	CallExpression	CHECK_NULL_RETURN ( node )		1213648	0					
ANR	1213663	Callee	CHECK_NULL_RETURN		1213648	0					
ANR	1213664	Identifier	CHECK_NULL_RETURN		1213648	0					
ANR	1213665	ArgumentList	node		1213648	1					
ANR	1213666	Argument	node		1213648	0					
ANR	1213667	Identifier	node		1213648	0					
ANR	1213668	ExpressionStatement	"SET_NTYPE ( node , NT_CALL )"	1337:2:28672:28696	1213648	2	True				
ANR	1213669	CallExpression	"SET_NTYPE ( node , NT_CALL )"		1213648	0					
ANR	1213670	Callee	SET_NTYPE		1213648	0					
ANR	1213671	Identifier	SET_NTYPE		1213648	0					
ANR	1213672	ArgumentList	node		1213648	1					
ANR	1213673	Argument	node		1213648	0					
ANR	1213674	Identifier	node		1213648	0					
ANR	1213675	Argument	NT_CALL		1213648	1					
ANR	1213676	Identifier	NT_CALL		1213648	0					
ANR	1213677	ExpressionStatement	NCALL ( node ) -> state = 0	1338:2:28700:28726	1213648	3	True				
ANR	1213678	AssignmentExpression	NCALL ( node ) -> state = 0		1213648	0		=			
ANR	1213679	PtrMemberAccess	NCALL ( node ) -> state		1213648	0					
ANR	1213680	CallExpression	NCALL ( node )		1213648	0					
ANR	1213681	Callee	NCALL		1213648	0					
ANR	1213682	Identifier	NCALL		1213648	0					
ANR	1213683	ArgumentList	node		1213648	1					
ANR	1213684	Argument	node		1213648	0					
ANR	1213685	Identifier	node		1213648	0					
ANR	1213686	Identifier	state		1213648	1					
ANR	1213687	PrimaryExpression	0		1213648	1					
ANR	1213688	ExpressionStatement	NCALL ( node ) -> target = NULL_NODE	1339:2:28730:28764	1213648	4	True				
ANR	1213689	AssignmentExpression	NCALL ( node ) -> target = NULL_NODE		1213648	0		=			
ANR	1213690	PtrMemberAccess	NCALL ( node ) -> target		1213648	0					
ANR	1213691	CallExpression	NCALL ( node )		1213648	0					
ANR	1213692	Callee	NCALL		1213648	0					
ANR	1213693	Identifier	NCALL		1213648	0					
ANR	1213694	ArgumentList	node		1213648	1					
ANR	1213695	Argument	node		1213648	0					
ANR	1213696	Identifier	node		1213648	0					
ANR	1213697	Identifier	target		1213648	1					
ANR	1213698	Identifier	NULL_NODE		1213648	1					
ANR	1213699	ExpressionStatement	NCALL ( node ) -> name = name	1340:2:28768:28797	1213648	5	True				
ANR	1213700	AssignmentExpression	NCALL ( node ) -> name = name		1213648	0		=			
ANR	1213701	PtrMemberAccess	NCALL ( node ) -> name		1213648	0					
ANR	1213702	CallExpression	NCALL ( node )		1213648	0					
ANR	1213703	Callee	NCALL		1213648	0					
ANR	1213704	Identifier	NCALL		1213648	0					
ANR	1213705	ArgumentList	node		1213648	1					
ANR	1213706	Argument	node		1213648	0					
ANR	1213707	Identifier	node		1213648	0					
ANR	1213708	Identifier	name		1213648	1					
ANR	1213709	Identifier	name		1213648	1					
ANR	1213710	ExpressionStatement	NCALL ( node ) -> name_end = name_end	1341:2:28801:28834	1213648	6	True				
ANR	1213711	AssignmentExpression	NCALL ( node ) -> name_end = name_end		1213648	0		=			
ANR	1213712	PtrMemberAccess	NCALL ( node ) -> name_end		1213648	0					
ANR	1213713	CallExpression	NCALL ( node )		1213648	0					
ANR	1213714	Callee	NCALL		1213648	0					
ANR	1213715	Identifier	NCALL		1213648	0					
ANR	1213716	ArgumentList	node		1213648	1					
ANR	1213717	Argument	node		1213648	0					
ANR	1213718	Identifier	node		1213648	0					
ANR	1213719	Identifier	name_end		1213648	1					
ANR	1213720	Identifier	name_end		1213648	1					
ANR	1213721	ExpressionStatement	NCALL ( node ) -> group_num = gnum	1342:2:28838:28867	1213648	7	True				
ANR	1213722	AssignmentExpression	NCALL ( node ) -> group_num = gnum		1213648	0		=			
ANR	1213723	PtrMemberAccess	NCALL ( node ) -> group_num		1213648	0					
ANR	1213724	CallExpression	NCALL ( node )		1213648	0					
ANR	1213725	Callee	NCALL		1213648	0					
ANR	1213726	Identifier	NCALL		1213648	0					
ANR	1213727	ArgumentList	node		1213648	1					
ANR	1213728	Argument	node		1213648	0					
ANR	1213729	Identifier	node		1213648	0					
ANR	1213730	Identifier	group_num		1213648	1					
ANR	1213731	Identifier	gnum		1213648	1					
ANR	1213732	ReturnStatement	return node ;	1343:2:28906:28917	1213648	8	True				
ANR	1213733	Identifier	node		1213648	0					
ANR	1213734	ReturnType	static Node *		1213648	1					
ANR	1213735	Identifier	node_new_call		1213648	2					
ANR	1213736	ParameterList	"UChar * name , UChar * name_end , int gnum"		1213648	3					
ANR	1213737	Parameter	UChar * name	1332:14:28573:28583	1213648	0	True				
ANR	1213738	ParameterType	UChar *		1213648	0					
ANR	1213739	Identifier	name		1213648	1					
ANR	1213740	Parameter	UChar * name_end	1332:27:28586:28600	1213648	1	True				
ANR	1213741	ParameterType	UChar *		1213648	0					
ANR	1213742	Identifier	name_end		1213648	1					
ANR	1213743	Parameter	int gnum	1332:44:28603:28610	1213648	2	True				
ANR	1213744	ParameterType	int		1213648	0					
ANR	1213745	Identifier	gnum		1213648	1					
ANR	1213746	CFGEntryNode	ENTRY		1213648		True				
ANR	1213747	CFGExitNode	EXIT		1213648		True				
ANR	1213748	Symbol	NT_CALL		1213648						
ANR	1213749	Symbol	NCALL		1213648						
ANR	1213750	Symbol	NCALL ( node ) -> name		1213648						
ANR	1213751	Symbol	gnum		1213648						
ANR	1213752	Symbol	node		1213648						
ANR	1213753	Symbol	node_new		1213648						
ANR	1213754	Symbol	name		1213648						
ANR	1213755	Symbol	NCALL ( node ) -> target		1213648						
ANR	1213756	Symbol	NCALL ( node ) -> state		1213648						
ANR	1213757	Symbol	NULL_NODE		1213648						
ANR	1213758	Symbol	* NCALL		1213648						
ANR	1213759	Symbol	NCALL ( node ) -> group_num		1213648						
ANR	1213760	Symbol	name_end		1213648						
ANR	1213761	Symbol	NCALL ( node ) -> name_end		1213648						
ANR	1213762	Function	node_new_quantifier	1347:0:28929:29583							
ANR	1213763	FunctionDef	"node_new_quantifier (int lower , int upper , int by_number)"		1213762	0					
ANR	1213764	CompoundStatement		1349:0:28999:29583	1213762	0					
ANR	1213765	IdentifierDeclStatement	Node * node = node_new ( ) ;	1350:2:29003:29026	1213762	0	True				
ANR	1213766	IdentifierDecl	* node = node_new ( )		1213762	0					
ANR	1213767	IdentifierDeclType	Node *		1213762	0					
ANR	1213768	Identifier	node		1213762	1					
ANR	1213769	AssignmentExpression	* node = node_new ( )		1213762	2		=			
ANR	1213770	Identifier	node		1213762	0					
ANR	1213771	CallExpression	node_new ( )		1213762	1					
ANR	1213772	Callee	node_new		1213762	0					
ANR	1213773	Identifier	node_new		1213762	0					
ANR	1213774	ArgumentList			1213762	1					
ANR	1213775	ExpressionStatement	CHECK_NULL_RETURN ( node )	1351:2:29030:29053	1213762	1	True				
ANR	1213776	CallExpression	CHECK_NULL_RETURN ( node )		1213762	0					
ANR	1213777	Callee	CHECK_NULL_RETURN		1213762	0					
ANR	1213778	Identifier	CHECK_NULL_RETURN		1213762	0					
ANR	1213779	ArgumentList	node		1213762	1					
ANR	1213780	Argument	node		1213762	0					
ANR	1213781	Identifier	node		1213762	0					
ANR	1213782	ExpressionStatement	"SET_NTYPE ( node , NT_QTFR )"	1353:2:29058:29082	1213762	2	True				
ANR	1213783	CallExpression	"SET_NTYPE ( node , NT_QTFR )"		1213762	0					
ANR	1213784	Callee	SET_NTYPE		1213762	0					
ANR	1213785	Identifier	SET_NTYPE		1213762	0					
ANR	1213786	ArgumentList	node		1213762	1					
ANR	1213787	Argument	node		1213762	0					
ANR	1213788	Identifier	node		1213762	0					
ANR	1213789	Argument	NT_QTFR		1213762	1					
ANR	1213790	Identifier	NT_QTFR		1213762	0					
ANR	1213791	ExpressionStatement	NQTFR ( node ) -> state = 0	1354:2:29086:29109	1213762	3	True				
ANR	1213792	AssignmentExpression	NQTFR ( node ) -> state = 0		1213762	0		=			
ANR	1213793	PtrMemberAccess	NQTFR ( node ) -> state		1213762	0					
ANR	1213794	CallExpression	NQTFR ( node )		1213762	0					
ANR	1213795	Callee	NQTFR		1213762	0					
ANR	1213796	Identifier	NQTFR		1213762	0					
ANR	1213797	ArgumentList	node		1213762	1					
ANR	1213798	Argument	node		1213762	0					
ANR	1213799	Identifier	node		1213762	0					
ANR	1213800	Identifier	state		1213762	1					
ANR	1213801	PrimaryExpression	0		1213762	1					
ANR	1213802	ExpressionStatement	NQTFR ( node ) -> target = NULL	1355:2:29113:29139	1213762	4	True				
ANR	1213803	AssignmentExpression	NQTFR ( node ) -> target = NULL		1213762	0		=			
ANR	1213804	PtrMemberAccess	NQTFR ( node ) -> target		1213762	0					
ANR	1213805	CallExpression	NQTFR ( node )		1213762	0					
ANR	1213806	Callee	NQTFR		1213762	0					
ANR	1213807	Identifier	NQTFR		1213762	0					
ANR	1213808	ArgumentList	node		1213762	1					
ANR	1213809	Argument	node		1213762	0					
ANR	1213810	Identifier	node		1213762	0					
ANR	1213811	Identifier	target		1213762	1					
ANR	1213812	Identifier	NULL		1213762	1					
ANR	1213813	ExpressionStatement	NQTFR ( node ) -> lower = lower	1356:2:29143:29170	1213762	5	True				
ANR	1213814	AssignmentExpression	NQTFR ( node ) -> lower = lower		1213762	0		=			
ANR	1213815	PtrMemberAccess	NQTFR ( node ) -> lower		1213762	0					
ANR	1213816	CallExpression	NQTFR ( node )		1213762	0					
ANR	1213817	Callee	NQTFR		1213762	0					
ANR	1213818	Identifier	NQTFR		1213762	0					
ANR	1213819	ArgumentList	node		1213762	1					
ANR	1213820	Argument	node		1213762	0					
ANR	1213821	Identifier	node		1213762	0					
ANR	1213822	Identifier	lower		1213762	1					
ANR	1213823	Identifier	lower		1213762	1					
ANR	1213824	ExpressionStatement	NQTFR ( node ) -> upper = upper	1357:2:29174:29201	1213762	6	True				
ANR	1213825	AssignmentExpression	NQTFR ( node ) -> upper = upper		1213762	0		=			
ANR	1213826	PtrMemberAccess	NQTFR ( node ) -> upper		1213762	0					
ANR	1213827	CallExpression	NQTFR ( node )		1213762	0					
ANR	1213828	Callee	NQTFR		1213762	0					
ANR	1213829	Identifier	NQTFR		1213762	0					
ANR	1213830	ArgumentList	node		1213762	1					
ANR	1213831	Argument	node		1213762	0					
ANR	1213832	Identifier	node		1213762	0					
ANR	1213833	Identifier	upper		1213762	1					
ANR	1213834	Identifier	upper		1213762	1					
ANR	1213835	ExpressionStatement	NQTFR ( node ) -> greedy = 1	1358:2:29205:29228	1213762	7	True				
ANR	1213836	AssignmentExpression	NQTFR ( node ) -> greedy = 1		1213762	0		=			
ANR	1213837	PtrMemberAccess	NQTFR ( node ) -> greedy		1213762	0					
ANR	1213838	CallExpression	NQTFR ( node )		1213762	0					
ANR	1213839	Callee	NQTFR		1213762	0					
ANR	1213840	Identifier	NQTFR		1213762	0					
ANR	1213841	ArgumentList	node		1213762	1					
ANR	1213842	Argument	node		1213762	0					
ANR	1213843	Identifier	node		1213762	0					
ANR	1213844	Identifier	greedy		1213762	1					
ANR	1213845	PrimaryExpression	1		1213762	1					
ANR	1213846	ExpressionStatement	NQTFR ( node ) -> target_empty_info = NQ_TARGET_ISNOT_EMPTY	1359:2:29232:29286	1213762	8	True				
ANR	1213847	AssignmentExpression	NQTFR ( node ) -> target_empty_info = NQ_TARGET_ISNOT_EMPTY		1213762	0		=			
ANR	1213848	PtrMemberAccess	NQTFR ( node ) -> target_empty_info		1213762	0					
ANR	1213849	CallExpression	NQTFR ( node )		1213762	0					
ANR	1213850	Callee	NQTFR		1213762	0					
ANR	1213851	Identifier	NQTFR		1213762	0					
ANR	1213852	ArgumentList	node		1213762	1					
ANR	1213853	Argument	node		1213762	0					
ANR	1213854	Identifier	node		1213762	0					
ANR	1213855	Identifier	target_empty_info		1213762	1					
ANR	1213856	Identifier	NQ_TARGET_ISNOT_EMPTY		1213762	1					
ANR	1213857	ExpressionStatement	NQTFR ( node ) -> head_exact = NULL_NODE	1360:2:29290:29332	1213762	9	True				
ANR	1213858	AssignmentExpression	NQTFR ( node ) -> head_exact = NULL_NODE		1213762	0		=			
ANR	1213859	PtrMemberAccess	NQTFR ( node ) -> head_exact		1213762	0					
ANR	1213860	CallExpression	NQTFR ( node )		1213762	0					
ANR	1213861	Callee	NQTFR		1213762	0					
ANR	1213862	Identifier	NQTFR		1213762	0					
ANR	1213863	ArgumentList	node		1213762	1					
ANR	1213864	Argument	node		1213762	0					
ANR	1213865	Identifier	node		1213762	0					
ANR	1213866	Identifier	head_exact		1213762	1					
ANR	1213867	Identifier	NULL_NODE		1213762	1					
ANR	1213868	ExpressionStatement	NQTFR ( node ) -> next_head_exact = NULL_NODE	1361:2:29336:29378	1213762	10	True				
ANR	1213869	AssignmentExpression	NQTFR ( node ) -> next_head_exact = NULL_NODE		1213762	0		=			
ANR	1213870	PtrMemberAccess	NQTFR ( node ) -> next_head_exact		1213762	0					
ANR	1213871	CallExpression	NQTFR ( node )		1213762	0					
ANR	1213872	Callee	NQTFR		1213762	0					
ANR	1213873	Identifier	NQTFR		1213762	0					
ANR	1213874	ArgumentList	node		1213762	1					
ANR	1213875	Argument	node		1213762	0					
ANR	1213876	Identifier	node		1213762	0					
ANR	1213877	Identifier	next_head_exact		1213762	1					
ANR	1213878	Identifier	NULL_NODE		1213762	1					
ANR	1213879	ExpressionStatement	NQTFR ( node ) -> is_refered = 0	1362:2:29382:29416	1213762	11	True				
ANR	1213880	AssignmentExpression	NQTFR ( node ) -> is_refered = 0		1213762	0		=			
ANR	1213881	PtrMemberAccess	NQTFR ( node ) -> is_refered		1213762	0					
ANR	1213882	CallExpression	NQTFR ( node )		1213762	0					
ANR	1213883	Callee	NQTFR		1213762	0					
ANR	1213884	Identifier	NQTFR		1213762	0					
ANR	1213885	ArgumentList	node		1213762	1					
ANR	1213886	Argument	node		1213762	0					
ANR	1213887	Identifier	node		1213762	0					
ANR	1213888	Identifier	is_refered		1213762	1					
ANR	1213889	PrimaryExpression	0		1213762	1					
ANR	1213890	IfStatement	if ( by_number != 0 )		1213762	12					
ANR	1213891	Condition	by_number != 0	1363:6:29424:29437	1213762	0	True				
ANR	1213892	EqualityExpression	by_number != 0		1213762	0		!=			
ANR	1213893	Identifier	by_number		1213762	0					
ANR	1213894	PrimaryExpression	0		1213762	1					
ANR	1213895	ExpressionStatement	NQTFR ( node ) -> state |= NST_BY_NUMBER	1364:4:29444:29479	1213762	1	True				
ANR	1213896	AssignmentExpression	NQTFR ( node ) -> state |= NST_BY_NUMBER		1213762	0		|=			
ANR	1213897	PtrMemberAccess	NQTFR ( node ) -> state		1213762	0					
ANR	1213898	CallExpression	NQTFR ( node )		1213762	0					
ANR	1213899	Callee	NQTFR		1213762	0					
ANR	1213900	Identifier	NQTFR		1213762	0					
ANR	1213901	ArgumentList	node		1213762	1					
ANR	1213902	Argument	node		1213762	0					
ANR	1213903	Identifier	node		1213762	0					
ANR	1213904	Identifier	state		1213762	1					
ANR	1213905	Identifier	NST_BY_NUMBER		1213762	1					
ANR	1213906	ExpressionStatement	NQTFR ( node ) -> comb_exp_check_num = 0	1367:2:29523:29558	1213762	13	True				
ANR	1213907	AssignmentExpression	NQTFR ( node ) -> comb_exp_check_num = 0		1213762	0		=			
ANR	1213908	PtrMemberAccess	NQTFR ( node ) -> comb_exp_check_num		1213762	0					
ANR	1213909	CallExpression	NQTFR ( node )		1213762	0					
ANR	1213910	Callee	NQTFR		1213762	0					
ANR	1213911	Identifier	NQTFR		1213762	0					
ANR	1213912	ArgumentList	node		1213762	1					
ANR	1213913	Argument	node		1213762	0					
ANR	1213914	Identifier	node		1213762	0					
ANR	1213915	Identifier	comb_exp_check_num		1213762	1					
ANR	1213916	PrimaryExpression	0		1213762	1					
ANR	1213917	ReturnStatement	return node ;	1370:2:29570:29581	1213762	14	True				
ANR	1213918	Identifier	node		1213762	0					
ANR	1213919	ReturnType	static Node *		1213762	1					
ANR	1213920	Identifier	node_new_quantifier		1213762	2					
ANR	1213921	ParameterList	"int lower , int upper , int by_number"		1213762	3					
ANR	1213922	Parameter	int lower	1348:20:28962:28970	1213762	0	True				
ANR	1213923	ParameterType	int		1213762	0					
ANR	1213924	Identifier	lower		1213762	1					
ANR	1213925	Parameter	int upper	1348:31:28973:28981	1213762	1	True				
ANR	1213926	ParameterType	int		1213762	0					
ANR	1213927	Identifier	upper		1213762	1					
ANR	1213928	Parameter	int by_number	1348:42:28984:28996	1213762	2	True				
ANR	1213929	ParameterType	int		1213762	0					
ANR	1213930	Identifier	by_number		1213762	1					
ANR	1213931	CFGEntryNode	ENTRY		1213762		True				
ANR	1213932	CFGExitNode	EXIT		1213762		True				
ANR	1213933	Symbol	NQTFR ( node ) -> head_exact		1213762						
ANR	1213934	Symbol	NQTFR ( node ) -> target		1213762						
ANR	1213935	Symbol	NQ_TARGET_ISNOT_EMPTY		1213762						
ANR	1213936	Symbol	NULL		1213762						
ANR	1213937	Symbol	NQTFR ( node ) -> upper		1213762						
ANR	1213938	Symbol	NQTFR ( node ) -> lower		1213762						
ANR	1213939	Symbol	lower		1213762						
ANR	1213940	Symbol	upper		1213762						
ANR	1213941	Symbol	NQTFR ( node ) -> is_refered		1213762						
ANR	1213942	Symbol	NQTFR		1213762						
ANR	1213943	Symbol	NQTFR ( node ) -> next_head_exact		1213762						
ANR	1213944	Symbol	node		1213762						
ANR	1213945	Symbol	NQTFR ( node ) -> state		1213762						
ANR	1213946	Symbol	NT_QTFR		1213762						
ANR	1213947	Symbol	* NQTFR		1213762						
ANR	1213948	Symbol	node_new		1213762						
ANR	1213949	Symbol	NQTFR ( node ) -> greedy		1213762						
ANR	1213950	Symbol	NQTFR ( node ) -> comb_exp_check_num		1213762						
ANR	1213951	Symbol	by_number		1213762						
ANR	1213952	Symbol	NST_BY_NUMBER		1213762						
ANR	1213953	Symbol	NULL_NODE		1213762						
ANR	1213954	Symbol	NQTFR ( node ) -> target_empty_info		1213762						
ANR	1213955	Function	node_new_enclose	1373:0:29586:29971							
ANR	1213956	FunctionDef	node_new_enclose (int type)		1213955	0					
ANR	1213957	CompoundStatement		1375:0:29626:29971	1213955	0					
ANR	1213958	IdentifierDeclStatement	Node * node = node_new ( ) ;	1376:2:29630:29653	1213955	0	True				
ANR	1213959	IdentifierDecl	* node = node_new ( )		1213955	0					
ANR	1213960	IdentifierDeclType	Node *		1213955	0					
ANR	1213961	Identifier	node		1213955	1					
ANR	1213962	AssignmentExpression	* node = node_new ( )		1213955	2		=			
ANR	1213963	Identifier	node		1213955	0					
ANR	1213964	CallExpression	node_new ( )		1213955	1					
ANR	1213965	Callee	node_new		1213955	0					
ANR	1213966	Identifier	node_new		1213955	0					
ANR	1213967	ArgumentList			1213955	1					
ANR	1213968	ExpressionStatement	CHECK_NULL_RETURN ( node )	1377:2:29657:29680	1213955	1	True				
ANR	1213969	CallExpression	CHECK_NULL_RETURN ( node )		1213955	0					
ANR	1213970	Callee	CHECK_NULL_RETURN		1213955	0					
ANR	1213971	Identifier	CHECK_NULL_RETURN		1213955	0					
ANR	1213972	ArgumentList	node		1213955	1					
ANR	1213973	Argument	node		1213955	0					
ANR	1213974	Identifier	node		1213955	0					
ANR	1213975	ExpressionStatement	"SET_NTYPE ( node , NT_ENCLOSE )"	1379:2:29685:29712	1213955	2	True				
ANR	1213976	CallExpression	"SET_NTYPE ( node , NT_ENCLOSE )"		1213955	0					
ANR	1213977	Callee	SET_NTYPE		1213955	0					
ANR	1213978	Identifier	SET_NTYPE		1213955	0					
ANR	1213979	ArgumentList	node		1213955	1					
ANR	1213980	Argument	node		1213955	0					
ANR	1213981	Identifier	node		1213955	0					
ANR	1213982	Argument	NT_ENCLOSE		1213955	1					
ANR	1213983	Identifier	NT_ENCLOSE		1213955	0					
ANR	1213984	ExpressionStatement	NENCLOSE ( node ) -> type = type	1380:2:29716:29748	1213955	3	True				
ANR	1213985	AssignmentExpression	NENCLOSE ( node ) -> type = type		1213955	0		=			
ANR	1213986	PtrMemberAccess	NENCLOSE ( node ) -> type		1213955	0					
ANR	1213987	CallExpression	NENCLOSE ( node )		1213955	0					
ANR	1213988	Callee	NENCLOSE		1213955	0					
ANR	1213989	Identifier	NENCLOSE		1213955	0					
ANR	1213990	ArgumentList	node		1213955	1					
ANR	1213991	Argument	node		1213955	0					
ANR	1213992	Identifier	node		1213955	0					
ANR	1213993	Identifier	type		1213955	1					
ANR	1213994	Identifier	type		1213955	1					
ANR	1213995	ExpressionStatement	NENCLOSE ( node ) -> state = 0	1381:2:29752:29782	1213955	4	True				
ANR	1213996	AssignmentExpression	NENCLOSE ( node ) -> state = 0		1213955	0		=			
ANR	1213997	PtrMemberAccess	NENCLOSE ( node ) -> state		1213955	0					
ANR	1213998	CallExpression	NENCLOSE ( node )		1213955	0					
ANR	1213999	Callee	NENCLOSE		1213955	0					
ANR	1214000	Identifier	NENCLOSE		1213955	0					
ANR	1214001	ArgumentList	node		1213955	1					
ANR	1214002	Argument	node		1213955	0					
ANR	1214003	Identifier	node		1213955	0					
ANR	1214004	Identifier	state		1213955	1					
ANR	1214005	PrimaryExpression	0		1213955	1					
ANR	1214006	ExpressionStatement	NENCLOSE ( node ) -> regnum = 0	1382:2:29786:29816	1213955	5	True				
ANR	1214007	AssignmentExpression	NENCLOSE ( node ) -> regnum = 0		1213955	0		=			
ANR	1214008	PtrMemberAccess	NENCLOSE ( node ) -> regnum		1213955	0					
ANR	1214009	CallExpression	NENCLOSE ( node )		1213955	0					
ANR	1214010	Callee	NENCLOSE		1213955	0					
ANR	1214011	Identifier	NENCLOSE		1213955	0					
ANR	1214012	ArgumentList	node		1213955	1					
ANR	1214013	Argument	node		1213955	0					
ANR	1214014	Identifier	node		1213955	0					
ANR	1214015	Identifier	regnum		1213955	1					
ANR	1214016	PrimaryExpression	0		1213955	1					
ANR	1214017	ExpressionStatement	NENCLOSE ( node ) -> option = 0	1383:2:29820:29850	1213955	6	True				
ANR	1214018	AssignmentExpression	NENCLOSE ( node ) -> option = 0		1213955	0		=			
ANR	1214019	PtrMemberAccess	NENCLOSE ( node ) -> option		1213955	0					
ANR	1214020	CallExpression	NENCLOSE ( node )		1213955	0					
ANR	1214021	Callee	NENCLOSE		1213955	0					
ANR	1214022	Identifier	NENCLOSE		1213955	0					
ANR	1214023	ArgumentList	node		1213955	1					
ANR	1214024	Argument	node		1213955	0					
ANR	1214025	Identifier	node		1213955	0					
ANR	1214026	Identifier	option		1213955	1					
ANR	1214027	PrimaryExpression	0		1213955	1					
ANR	1214028	ExpressionStatement	NENCLOSE ( node ) -> target = NULL	1384:2:29854:29886	1213955	7	True				
ANR	1214029	AssignmentExpression	NENCLOSE ( node ) -> target = NULL		1213955	0		=			
ANR	1214030	PtrMemberAccess	NENCLOSE ( node ) -> target		1213955	0					
ANR	1214031	CallExpression	NENCLOSE ( node )		1213955	0					
ANR	1214032	Callee	NENCLOSE		1213955	0					
ANR	1214033	Identifier	NENCLOSE		1213955	0					
ANR	1214034	ArgumentList	node		1213955	1					
ANR	1214035	Argument	node		1213955	0					
ANR	1214036	Identifier	node		1213955	0					
ANR	1214037	Identifier	target		1213955	1					
ANR	1214038	Identifier	NULL		1213955	1					
ANR	1214039	ExpressionStatement	NENCLOSE ( node ) -> call_addr = - 1	1385:2:29890:29920	1213955	8	True				
ANR	1214040	AssignmentExpression	NENCLOSE ( node ) -> call_addr = - 1		1213955	0		=			
ANR	1214041	PtrMemberAccess	NENCLOSE ( node ) -> call_addr		1213955	0					
ANR	1214042	CallExpression	NENCLOSE ( node )		1213955	0					
ANR	1214043	Callee	NENCLOSE		1213955	0					
ANR	1214044	Identifier	NENCLOSE		1213955	0					
ANR	1214045	ArgumentList	node		1213955	1					
ANR	1214046	Argument	node		1213955	0					
ANR	1214047	Identifier	node		1213955	0					
ANR	1214048	Identifier	call_addr		1213955	1					
ANR	1214049	UnaryOperationExpression	- 1		1213955	1					
ANR	1214050	UnaryOperator	-		1213955	0					
ANR	1214051	PrimaryExpression	1		1213955	1					
ANR	1214052	ExpressionStatement	NENCLOSE ( node ) -> opt_count = 0	1386:2:29924:29954	1213955	9	True				
ANR	1214053	AssignmentExpression	NENCLOSE ( node ) -> opt_count = 0		1213955	0		=			
ANR	1214054	PtrMemberAccess	NENCLOSE ( node ) -> opt_count		1213955	0					
ANR	1214055	CallExpression	NENCLOSE ( node )		1213955	0					
ANR	1214056	Callee	NENCLOSE		1213955	0					
ANR	1214057	Identifier	NENCLOSE		1213955	0					
ANR	1214058	ArgumentList	node		1213955	1					
ANR	1214059	Argument	node		1213955	0					
ANR	1214060	Identifier	node		1213955	0					
ANR	1214061	Identifier	opt_count		1213955	1					
ANR	1214062	PrimaryExpression	0		1213955	1					
ANR	1214063	ReturnStatement	return node ;	1387:2:29958:29969	1213955	10	True				
ANR	1214064	Identifier	node		1213955	0					
ANR	1214065	ReturnType	static Node *		1213955	1					
ANR	1214066	Identifier	node_new_enclose		1213955	2					
ANR	1214067	ParameterList	int type		1213955	3					
ANR	1214068	Parameter	int type	1374:17:29616:29623	1213955	0	True				
ANR	1214069	ParameterType	int		1213955	0					
ANR	1214070	Identifier	type		1213955	1					
ANR	1214071	CFGEntryNode	ENTRY		1213955		True				
ANR	1214072	CFGExitNode	EXIT		1213955		True				
ANR	1214073	Symbol	NULL		1213955						
ANR	1214074	Symbol	* NENCLOSE		1213955						
ANR	1214075	Symbol	NENCLOSE ( node ) -> opt_count		1213955						
ANR	1214076	Symbol	NENCLOSE ( node ) -> call_addr		1213955						
ANR	1214077	Symbol	NENCLOSE ( node ) -> type		1213955						
ANR	1214078	Symbol	type		1213955						
ANR	1214079	Symbol	NENCLOSE ( node ) -> target		1213955						
ANR	1214080	Symbol	node		1213955						
ANR	1214081	Symbol	NENCLOSE ( node ) -> regnum		1213955						
ANR	1214082	Symbol	node_new		1213955						
ANR	1214083	Symbol	NT_ENCLOSE		1213955						
ANR	1214084	Symbol	NENCLOSE		1213955						
ANR	1214085	Symbol	NENCLOSE ( node ) -> state		1213955						
ANR	1214086	Symbol	NENCLOSE ( node ) -> option		1213955						
ANR	1214087	Function	onig_node_new_enclose	1390:0:29974:30054							
ANR	1214088	FunctionDef	onig_node_new_enclose (int type)		1214087	0					
ANR	1214089	CompoundStatement		1392:0:30019:30054	1214087	0					
ANR	1214090	ReturnStatement	return node_new_enclose ( type ) ;	1393:2:30023:30052	1214087	0	True				
ANR	1214091	CallExpression	node_new_enclose ( type )		1214087	0					
ANR	1214092	Callee	node_new_enclose		1214087	0					
ANR	1214093	Identifier	node_new_enclose		1214087	0					
ANR	1214094	ArgumentList	type		1214087	1					
ANR	1214095	Argument	type		1214087	0					
ANR	1214096	Identifier	type		1214087	0					
ANR	1214097	ReturnType	extern Node *		1214087	1					
ANR	1214098	Identifier	onig_node_new_enclose		1214087	2					
ANR	1214099	ParameterList	int type		1214087	3					
ANR	1214100	Parameter	int type	1391:22:30009:30016	1214087	0	True				
ANR	1214101	ParameterType	int		1214087	0					
ANR	1214102	Identifier	type		1214087	1					
ANR	1214103	CFGEntryNode	ENTRY		1214087		True				
ANR	1214104	CFGExitNode	EXIT		1214087		True				
ANR	1214105	Symbol	type		1214087						
ANR	1214106	Symbol	node_new_enclose		1214087						
ANR	1214107	Function	node_new_enclose_memory	1396:0:30057:30358							
ANR	1214108	FunctionDef	"node_new_enclose_memory (OnigOptionType option , int is_named)"		1214107	0					
ANR	1214109	CompoundStatement		1398:0:30131:30358	1214107	0					
ANR	1214110	IdentifierDeclStatement	Node * node = node_new_enclose ( ENCLOSE_MEMORY ) ;	1399:2:30135:30180	1214107	0	True				
ANR	1214111	IdentifierDecl	* node = node_new_enclose ( ENCLOSE_MEMORY )		1214107	0					
ANR	1214112	IdentifierDeclType	Node *		1214107	0					
ANR	1214113	Identifier	node		1214107	1					
ANR	1214114	AssignmentExpression	* node = node_new_enclose ( ENCLOSE_MEMORY )		1214107	2		=			
ANR	1214115	Identifier	node		1214107	0					
ANR	1214116	CallExpression	node_new_enclose ( ENCLOSE_MEMORY )		1214107	1					
ANR	1214117	Callee	node_new_enclose		1214107	0					
ANR	1214118	Identifier	node_new_enclose		1214107	0					
ANR	1214119	ArgumentList	ENCLOSE_MEMORY		1214107	1					
ANR	1214120	Argument	ENCLOSE_MEMORY		1214107	0					
ANR	1214121	Identifier	ENCLOSE_MEMORY		1214107	0					
ANR	1214122	ExpressionStatement	CHECK_NULL_RETURN ( node )	1400:2:30184:30207	1214107	1	True				
ANR	1214123	CallExpression	CHECK_NULL_RETURN ( node )		1214107	0					
ANR	1214124	Callee	CHECK_NULL_RETURN		1214107	0					
ANR	1214125	Identifier	CHECK_NULL_RETURN		1214107	0					
ANR	1214126	ArgumentList	node		1214107	1					
ANR	1214127	Argument	node		1214107	0					
ANR	1214128	Identifier	node		1214107	0					
ANR	1214129	IfStatement	if ( is_named != 0 )		1214107	2					
ANR	1214130	Condition	is_named != 0	1401:6:30215:30227	1214107	0	True				
ANR	1214131	EqualityExpression	is_named != 0		1214107	0		!=			
ANR	1214132	Identifier	is_named		1214107	0					
ANR	1214133	PrimaryExpression	0		1214107	1					
ANR	1214134	ExpressionStatement	"SET_ENCLOSE_STATUS ( node , NST_NAMED_GROUP )"	1402:4:30234:30275	1214107	1	True				
ANR	1214135	CallExpression	"SET_ENCLOSE_STATUS ( node , NST_NAMED_GROUP )"		1214107	0					
ANR	1214136	Callee	SET_ENCLOSE_STATUS		1214107	0					
ANR	1214137	Identifier	SET_ENCLOSE_STATUS		1214107	0					
ANR	1214138	ArgumentList	node		1214107	1					
ANR	1214139	Argument	node		1214107	0					
ANR	1214140	Identifier	node		1214107	0					
ANR	1214141	Argument	NST_NAMED_GROUP		1214107	1					
ANR	1214142	Identifier	NST_NAMED_GROUP		1214107	0					
ANR	1214143	ExpressionStatement	NENCLOSE ( node ) -> option = option	1405:2:30303:30334	1214107	3	True				
ANR	1214144	AssignmentExpression	NENCLOSE ( node ) -> option = option		1214107	0		=			
ANR	1214145	PtrMemberAccess	NENCLOSE ( node ) -> option		1214107	0					
ANR	1214146	CallExpression	NENCLOSE ( node )		1214107	0					
ANR	1214147	Callee	NENCLOSE		1214107	0					
ANR	1214148	Identifier	NENCLOSE		1214107	0					
ANR	1214149	ArgumentList	node		1214107	1					
ANR	1214150	Argument	node		1214107	0					
ANR	1214151	Identifier	node		1214107	0					
ANR	1214152	Identifier	option		1214107	1					
ANR	1214153	Identifier	option		1214107	1					
ANR	1214154	ReturnStatement	return node ;	1407:2:30345:30356	1214107	4	True				
ANR	1214155	Identifier	node		1214107	0					
ANR	1214156	ReturnType	static Node *		1214107	1					
ANR	1214157	Identifier	node_new_enclose_memory		1214107	2					
ANR	1214158	ParameterList	"OnigOptionType option , int is_named"		1214107	3					
ANR	1214159	Parameter	OnigOptionType option	1397:24:30094:30114	1214107	0	True				
ANR	1214160	ParameterType	OnigOptionType		1214107	0					
ANR	1214161	Identifier	option		1214107	1					
ANR	1214162	Parameter	int is_named	1397:47:30117:30128	1214107	1	True				
ANR	1214163	ParameterType	int		1214107	0					
ANR	1214164	Identifier	is_named		1214107	1					
ANR	1214165	CFGEntryNode	ENTRY		1214107		True				
ANR	1214166	CFGExitNode	EXIT		1214107		True				
ANR	1214167	Symbol	node		1214107						
ANR	1214168	Symbol	NST_NAMED_GROUP		1214107						
ANR	1214169	Symbol	is_named		1214107						
ANR	1214170	Symbol	ENCLOSE_MEMORY		1214107						
ANR	1214171	Symbol	* NENCLOSE		1214107						
ANR	1214172	Symbol	NENCLOSE		1214107						
ANR	1214173	Symbol	node_new_enclose		1214107						
ANR	1214174	Symbol	NENCLOSE ( node ) -> option		1214107						
ANR	1214175	Symbol	option		1214107						
ANR	1214176	Function	node_new_option	1410:0:30361:30541							
ANR	1214177	FunctionDef	node_new_option (OnigOptionType option)		1214176	0					
ANR	1214178	CompoundStatement		1412:0:30413:30541	1214176	0					
ANR	1214179	IdentifierDeclStatement	Node * node = node_new_enclose ( ENCLOSE_OPTION ) ;	1413:2:30417:30462	1214176	0	True				
ANR	1214180	IdentifierDecl	* node = node_new_enclose ( ENCLOSE_OPTION )		1214176	0					
ANR	1214181	IdentifierDeclType	Node *		1214176	0					
ANR	1214182	Identifier	node		1214176	1					
ANR	1214183	AssignmentExpression	* node = node_new_enclose ( ENCLOSE_OPTION )		1214176	2		=			
ANR	1214184	Identifier	node		1214176	0					
ANR	1214185	CallExpression	node_new_enclose ( ENCLOSE_OPTION )		1214176	1					
ANR	1214186	Callee	node_new_enclose		1214176	0					
ANR	1214187	Identifier	node_new_enclose		1214176	0					
ANR	1214188	ArgumentList	ENCLOSE_OPTION		1214176	1					
ANR	1214189	Argument	ENCLOSE_OPTION		1214176	0					
ANR	1214190	Identifier	ENCLOSE_OPTION		1214176	0					
ANR	1214191	ExpressionStatement	CHECK_NULL_RETURN ( node )	1414:2:30466:30489	1214176	1	True				
ANR	1214192	CallExpression	CHECK_NULL_RETURN ( node )		1214176	0					
ANR	1214193	Callee	CHECK_NULL_RETURN		1214176	0					
ANR	1214194	Identifier	CHECK_NULL_RETURN		1214176	0					
ANR	1214195	ArgumentList	node		1214176	1					
ANR	1214196	Argument	node		1214176	0					
ANR	1214197	Identifier	node		1214176	0					
ANR	1214198	ExpressionStatement	NENCLOSE ( node ) -> option = option	1415:2:30493:30524	1214176	2	True				
ANR	1214199	AssignmentExpression	NENCLOSE ( node ) -> option = option		1214176	0		=			
ANR	1214200	PtrMemberAccess	NENCLOSE ( node ) -> option		1214176	0					
ANR	1214201	CallExpression	NENCLOSE ( node )		1214176	0					
ANR	1214202	Callee	NENCLOSE		1214176	0					
ANR	1214203	Identifier	NENCLOSE		1214176	0					
ANR	1214204	ArgumentList	node		1214176	1					
ANR	1214205	Argument	node		1214176	0					
ANR	1214206	Identifier	node		1214176	0					
ANR	1214207	Identifier	option		1214176	1					
ANR	1214208	Identifier	option		1214176	1					
ANR	1214209	ReturnStatement	return node ;	1416:2:30528:30539	1214176	3	True				
ANR	1214210	Identifier	node		1214176	0					
ANR	1214211	ReturnType	static Node *		1214176	1					
ANR	1214212	Identifier	node_new_option		1214176	2					
ANR	1214213	ParameterList	OnigOptionType option		1214176	3					
ANR	1214214	Parameter	OnigOptionType option	1411:16:30390:30410	1214176	0	True				
ANR	1214215	ParameterType	OnigOptionType		1214176	0					
ANR	1214216	Identifier	option		1214176	1					
ANR	1214217	CFGEntryNode	ENTRY		1214176		True				
ANR	1214218	CFGExitNode	EXIT		1214176		True				
ANR	1214219	Symbol	node		1214176						
ANR	1214220	Symbol	NENCLOSE		1214176						
ANR	1214221	Symbol	* NENCLOSE		1214176						
ANR	1214222	Symbol	ENCLOSE_OPTION		1214176						
ANR	1214223	Symbol	node_new_enclose		1214176						
ANR	1214224	Symbol	NENCLOSE ( node ) -> option		1214176						
ANR	1214225	Symbol	option		1214176						
ANR	1214226	Function	onig_node_str_cat	1419:0:30544:31384							
ANR	1214227	FunctionDef	"onig_node_str_cat (Node * node , const UChar * s , const UChar * end)"		1214226	0					
ANR	1214228	CompoundStatement		1421:0:30619:31384	1214226	0					
ANR	1214229	IdentifierDeclStatement	int addlen = end - s ;	1422:2:30623:30643	1214226	0	True				
ANR	1214230	IdentifierDecl	addlen = end - s		1214226	0					
ANR	1214231	IdentifierDeclType	int		1214226	0					
ANR	1214232	Identifier	addlen		1214226	1					
ANR	1214233	AssignmentExpression	addlen = end - s		1214226	2		=			
ANR	1214234	Identifier	addlen		1214226	0					
ANR	1214235	AdditiveExpression	end - s		1214226	1		-			
ANR	1214236	Identifier	end		1214226	0					
ANR	1214237	Identifier	s		1214226	1					
ANR	1214238	IfStatement	if ( addlen > 0 )		1214226	1					
ANR	1214239	Condition	addlen > 0	1424:6:30652:30661	1214226	0	True				
ANR	1214240	RelationalExpression	addlen > 0		1214226	0		>			
ANR	1214241	Identifier	addlen		1214226	0					
ANR	1214242	PrimaryExpression	0		1214226	1					
ANR	1214243	CompoundStatement		5:4:50:92	1214226	1					
ANR	1214244	IdentifierDeclStatement	int len = NSTR ( node ) -> end - NSTR ( node ) -> s ;	1425:4:30670:30712	1214226	0	True				
ANR	1214245	IdentifierDecl	len = NSTR ( node ) -> end - NSTR ( node ) -> s		1214226	0					
ANR	1214246	IdentifierDeclType	int		1214226	0					
ANR	1214247	Identifier	len		1214226	1					
ANR	1214248	AssignmentExpression	len = NSTR ( node ) -> end - NSTR ( node ) -> s		1214226	2		=			
ANR	1214249	Identifier	len		1214226	0					
ANR	1214250	AdditiveExpression	NSTR ( node ) -> end - NSTR ( node ) -> s		1214226	1		-			
ANR	1214251	PtrMemberAccess	NSTR ( node ) -> end		1214226	0					
ANR	1214252	CallExpression	NSTR ( node )		1214226	0					
ANR	1214253	Callee	NSTR		1214226	0					
ANR	1214254	Identifier	NSTR		1214226	0					
ANR	1214255	ArgumentList	node		1214226	1					
ANR	1214256	Argument	node		1214226	0					
ANR	1214257	Identifier	node		1214226	0					
ANR	1214258	Identifier	end		1214226	1					
ANR	1214259	PtrMemberAccess	NSTR ( node ) -> s		1214226	1					
ANR	1214260	CallExpression	NSTR ( node )		1214226	0					
ANR	1214261	Callee	NSTR		1214226	0					
ANR	1214262	Identifier	NSTR		1214226	0					
ANR	1214263	ArgumentList	node		1214226	1					
ANR	1214264	Argument	node		1214226	0					
ANR	1214265	Identifier	node		1214226	0					
ANR	1214266	Identifier	s		1214226	1					
ANR	1214267	IfStatement	if ( NSTR ( node ) -> capa > 0 || ( len + addlen > NODE_STR_BUF_SIZE - 1 ) )		1214226	1					
ANR	1214268	Condition	NSTR ( node ) -> capa > 0 || ( len + addlen > NODE_STR_BUF_SIZE - 1 )	1427:8:30723:30784	1214226	0	True				
ANR	1214269	OrExpression	NSTR ( node ) -> capa > 0 || ( len + addlen > NODE_STR_BUF_SIZE - 1 )		1214226	0		||			
ANR	1214270	RelationalExpression	NSTR ( node ) -> capa > 0		1214226	0		>			
ANR	1214271	PtrMemberAccess	NSTR ( node ) -> capa		1214226	0					
ANR	1214272	CallExpression	NSTR ( node )		1214226	0					
ANR	1214273	Callee	NSTR		1214226	0					
ANR	1214274	Identifier	NSTR		1214226	0					
ANR	1214275	ArgumentList	node		1214226	1					
ANR	1214276	Argument	node		1214226	0					
ANR	1214277	Identifier	node		1214226	0					
ANR	1214278	Identifier	capa		1214226	1					
ANR	1214279	PrimaryExpression	0		1214226	1					
ANR	1214280	RelationalExpression	len + addlen > NODE_STR_BUF_SIZE - 1		1214226	1		>			
ANR	1214281	AdditiveExpression	len + addlen		1214226	0		+			
ANR	1214282	Identifier	len		1214226	0					
ANR	1214283	Identifier	addlen		1214226	1					
ANR	1214284	AdditiveExpression	NODE_STR_BUF_SIZE - 1		1214226	1		-			
ANR	1214285	Identifier	NODE_STR_BUF_SIZE		1214226	0					
ANR	1214286	PrimaryExpression	1		1214226	1					
ANR	1214287	CompoundStatement		9:6:191:232	1214226	1					
ANR	1214288	IdentifierDeclStatement	UChar * p ;	1428:6:30795:30803	1214226	0	True				
ANR	1214289	IdentifierDecl	* p		1214226	0					
ANR	1214290	IdentifierDeclType	UChar *		1214226	0					
ANR	1214291	Identifier	p		1214226	1					
ANR	1214292	IdentifierDeclStatement	int capa = len + addlen + NODE_STR_MARGIN ;	1429:6:30811:30852	1214226	1	True				
ANR	1214293	IdentifierDecl	capa = len + addlen + NODE_STR_MARGIN		1214226	0					
ANR	1214294	IdentifierDeclType	int		1214226	0					
ANR	1214295	Identifier	capa		1214226	1					
ANR	1214296	AssignmentExpression	capa = len + addlen + NODE_STR_MARGIN		1214226	2		=			
ANR	1214297	Identifier	capa		1214226	0					
ANR	1214298	AdditiveExpression	len + addlen + NODE_STR_MARGIN		1214226	1		+			
ANR	1214299	Identifier	len		1214226	0					
ANR	1214300	AdditiveExpression	addlen + NODE_STR_MARGIN		1214226	1		+			
ANR	1214301	Identifier	addlen		1214226	0					
ANR	1214302	Identifier	NODE_STR_MARGIN		1214226	1					
ANR	1214303	IfStatement	if ( capa <= NSTR ( node ) -> capa )		1214226	2					
ANR	1214304	Condition	capa <= NSTR ( node ) -> capa	1431:10:30865:30888	1214226	0	True				
ANR	1214305	RelationalExpression	capa <= NSTR ( node ) -> capa		1214226	0		<=			
ANR	1214306	Identifier	capa		1214226	0					
ANR	1214307	PtrMemberAccess	NSTR ( node ) -> capa		1214226	1					
ANR	1214308	CallExpression	NSTR ( node )		1214226	0					
ANR	1214309	Callee	NSTR		1214226	0					
ANR	1214310	Identifier	NSTR		1214226	0					
ANR	1214311	ArgumentList	node		1214226	1					
ANR	1214312	Argument	node		1214226	0					
ANR	1214313	Identifier	node		1214226	0					
ANR	1214314	Identifier	capa		1214226	1					
ANR	1214315	CompoundStatement		11:36:271:271	1214226	1					
ANR	1214316	ExpressionStatement	"onig_strcpy ( NSTR ( node ) -> s + len , s , end )"	1432:1:30894:30934	1214226	0	True				
ANR	1214317	CallExpression	"onig_strcpy ( NSTR ( node ) -> s + len , s , end )"		1214226	0					
ANR	1214318	Callee	onig_strcpy		1214226	0					
ANR	1214319	Identifier	onig_strcpy		1214226	0					
ANR	1214320	ArgumentList	NSTR ( node ) -> s + len		1214226	1					
ANR	1214321	Argument	NSTR ( node ) -> s + len		1214226	0					
ANR	1214322	AdditiveExpression	NSTR ( node ) -> s + len		1214226	0		+			
ANR	1214323	PtrMemberAccess	NSTR ( node ) -> s		1214226	0					
ANR	1214324	CallExpression	NSTR ( node )		1214226	0					
ANR	1214325	Callee	NSTR		1214226	0					
ANR	1214326	Identifier	NSTR		1214226	0					
ANR	1214327	ArgumentList	node		1214226	1					
ANR	1214328	Argument	node		1214226	0					
ANR	1214329	Identifier	node		1214226	0					
ANR	1214330	Identifier	s		1214226	1					
ANR	1214331	Identifier	len		1214226	1					
ANR	1214332	Argument	s		1214226	1					
ANR	1214333	Identifier	s		1214226	0					
ANR	1214334	Argument	end		1214226	2					
ANR	1214335	Identifier	end		1214226	0					
ANR	1214336	ElseStatement	else		1214226	0					
ANR	1214337	CompoundStatement		14:11:335:335	1214226	0					
ANR	1214338	IfStatement	if ( NSTR ( node ) -> s == NSTR ( node ) -> buf )		1214226	0					
ANR	1214339	Condition	NSTR ( node ) -> s == NSTR ( node ) -> buf	1435:5:30962:30993	1214226	0	True				
ANR	1214340	EqualityExpression	NSTR ( node ) -> s == NSTR ( node ) -> buf		1214226	0		==			
ANR	1214341	PtrMemberAccess	NSTR ( node ) -> s		1214226	0					
ANR	1214342	CallExpression	NSTR ( node )		1214226	0					
ANR	1214343	Callee	NSTR		1214226	0					
ANR	1214344	Identifier	NSTR		1214226	0					
ANR	1214345	ArgumentList	node		1214226	1					
ANR	1214346	Argument	node		1214226	0					
ANR	1214347	Identifier	node		1214226	0					
ANR	1214348	Identifier	s		1214226	1					
ANR	1214349	PtrMemberAccess	NSTR ( node ) -> buf		1214226	1					
ANR	1214350	CallExpression	NSTR ( node )		1214226	0					
ANR	1214351	Callee	NSTR		1214226	0					
ANR	1214352	Identifier	NSTR		1214226	0					
ANR	1214353	ArgumentList	node		1214226	1					
ANR	1214354	Argument	node		1214226	0					
ANR	1214355	Identifier	node		1214226	0					
ANR	1214356	Identifier	buf		1214226	1					
ANR	1214357	ExpressionStatement	"p = strcat_capa_from_static ( NSTR ( node ) -> s , NSTR ( node ) -> end , s , end , capa )"	1436:3:30999:31082	1214226	1	True				
ANR	1214358	AssignmentExpression	"p = strcat_capa_from_static ( NSTR ( node ) -> s , NSTR ( node ) -> end , s , end , capa )"		1214226	0		=			
ANR	1214359	Identifier	p		1214226	0					
ANR	1214360	CallExpression	"strcat_capa_from_static ( NSTR ( node ) -> s , NSTR ( node ) -> end , s , end , capa )"		1214226	1					
ANR	1214361	Callee	strcat_capa_from_static		1214226	0					
ANR	1214362	Identifier	strcat_capa_from_static		1214226	0					
ANR	1214363	ArgumentList	NSTR ( node ) -> s		1214226	1					
ANR	1214364	Argument	NSTR ( node ) -> s		1214226	0					
ANR	1214365	PtrMemberAccess	NSTR ( node ) -> s		1214226	0					
ANR	1214366	CallExpression	NSTR ( node )		1214226	0					
ANR	1214367	Callee	NSTR		1214226	0					
ANR	1214368	Identifier	NSTR		1214226	0					
ANR	1214369	ArgumentList	node		1214226	1					
ANR	1214370	Argument	node		1214226	0					
ANR	1214371	Identifier	node		1214226	0					
ANR	1214372	Identifier	s		1214226	1					
ANR	1214373	Argument	NSTR ( node ) -> end		1214226	1					
ANR	1214374	PtrMemberAccess	NSTR ( node ) -> end		1214226	0					
ANR	1214375	CallExpression	NSTR ( node )		1214226	0					
ANR	1214376	Callee	NSTR		1214226	0					
ANR	1214377	Identifier	NSTR		1214226	0					
ANR	1214378	ArgumentList	node		1214226	1					
ANR	1214379	Argument	node		1214226	0					
ANR	1214380	Identifier	node		1214226	0					
ANR	1214381	Identifier	end		1214226	1					
ANR	1214382	Argument	s		1214226	2					
ANR	1214383	Identifier	s		1214226	0					
ANR	1214384	Argument	end		1214226	3					
ANR	1214385	Identifier	end		1214226	0					
ANR	1214386	Argument	capa		1214226	4					
ANR	1214387	Identifier	capa		1214226	0					
ANR	1214388	ElseStatement	else		1214226	0					
ANR	1214389	ExpressionStatement	"p = strcat_capa ( NSTR ( node ) -> s , NSTR ( node ) -> end , s , end , capa )"	1439:3:31093:31154	1214226	0	True				
ANR	1214390	AssignmentExpression	"p = strcat_capa ( NSTR ( node ) -> s , NSTR ( node ) -> end , s , end , capa )"		1214226	0		=			
ANR	1214391	Identifier	p		1214226	0					
ANR	1214392	CallExpression	"strcat_capa ( NSTR ( node ) -> s , NSTR ( node ) -> end , s , end , capa )"		1214226	1					
ANR	1214393	Callee	strcat_capa		1214226	0					
ANR	1214394	Identifier	strcat_capa		1214226	0					
ANR	1214395	ArgumentList	NSTR ( node ) -> s		1214226	1					
ANR	1214396	Argument	NSTR ( node ) -> s		1214226	0					
ANR	1214397	PtrMemberAccess	NSTR ( node ) -> s		1214226	0					
ANR	1214398	CallExpression	NSTR ( node )		1214226	0					
ANR	1214399	Callee	NSTR		1214226	0					
ANR	1214400	Identifier	NSTR		1214226	0					
ANR	1214401	ArgumentList	node		1214226	1					
ANR	1214402	Argument	node		1214226	0					
ANR	1214403	Identifier	node		1214226	0					
ANR	1214404	Identifier	s		1214226	1					
ANR	1214405	Argument	NSTR ( node ) -> end		1214226	1					
ANR	1214406	PtrMemberAccess	NSTR ( node ) -> end		1214226	0					
ANR	1214407	CallExpression	NSTR ( node )		1214226	0					
ANR	1214408	Callee	NSTR		1214226	0					
ANR	1214409	Identifier	NSTR		1214226	0					
ANR	1214410	ArgumentList	node		1214226	1					
ANR	1214411	Argument	node		1214226	0					
ANR	1214412	Identifier	node		1214226	0					
ANR	1214413	Identifier	end		1214226	1					
ANR	1214414	Argument	s		1214226	2					
ANR	1214415	Identifier	s		1214226	0					
ANR	1214416	Argument	end		1214226	3					
ANR	1214417	Identifier	end		1214226	0					
ANR	1214418	Argument	capa		1214226	4					
ANR	1214419	Identifier	capa		1214226	0					
ANR	1214420	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( p )	1441:1:31158:31185	1214226	1	True				
ANR	1214421	CallExpression	CHECK_NULL_RETURN_MEMERR ( p )		1214226	0					
ANR	1214422	Callee	CHECK_NULL_RETURN_MEMERR		1214226	0					
ANR	1214423	Identifier	CHECK_NULL_RETURN_MEMERR		1214226	0					
ANR	1214424	ArgumentList	p		1214226	1					
ANR	1214425	Argument	p		1214226	0					
ANR	1214426	Identifier	p		1214226	0					
ANR	1214427	ExpressionStatement	NSTR ( node ) -> s = p	1442:1:31188:31208	1214226	2	True				
ANR	1214428	AssignmentExpression	NSTR ( node ) -> s = p		1214226	0		=			
ANR	1214429	PtrMemberAccess	NSTR ( node ) -> s		1214226	0					
ANR	1214430	CallExpression	NSTR ( node )		1214226	0					
ANR	1214431	Callee	NSTR		1214226	0					
ANR	1214432	Identifier	NSTR		1214226	0					
ANR	1214433	ArgumentList	node		1214226	1					
ANR	1214434	Argument	node		1214226	0					
ANR	1214435	Identifier	node		1214226	0					
ANR	1214436	Identifier	s		1214226	1					
ANR	1214437	Identifier	p		1214226	1					
ANR	1214438	ExpressionStatement	NSTR ( node ) -> capa = capa	1443:1:31211:31234	1214226	3	True				
ANR	1214439	AssignmentExpression	NSTR ( node ) -> capa = capa		1214226	0		=			
ANR	1214440	PtrMemberAccess	NSTR ( node ) -> capa		1214226	0					
ANR	1214441	CallExpression	NSTR ( node )		1214226	0					
ANR	1214442	Callee	NSTR		1214226	0					
ANR	1214443	Identifier	NSTR		1214226	0					
ANR	1214444	ArgumentList	node		1214226	1					
ANR	1214445	Argument	node		1214226	0					
ANR	1214446	Identifier	node		1214226	0					
ANR	1214447	Identifier	capa		1214226	1					
ANR	1214448	Identifier	capa		1214226	1					
ANR	1214449	ElseStatement	else		1214226	0					
ANR	1214450	CompoundStatement		26:9:639:639	1214226	0					
ANR	1214451	ExpressionStatement	"onig_strcpy ( NSTR ( node ) -> s + len , s , end )"	1447:6:31267:31307	1214226	0	True				
ANR	1214452	CallExpression	"onig_strcpy ( NSTR ( node ) -> s + len , s , end )"		1214226	0					
ANR	1214453	Callee	onig_strcpy		1214226	0					
ANR	1214454	Identifier	onig_strcpy		1214226	0					
ANR	1214455	ArgumentList	NSTR ( node ) -> s + len		1214226	1					
ANR	1214456	Argument	NSTR ( node ) -> s + len		1214226	0					
ANR	1214457	AdditiveExpression	NSTR ( node ) -> s + len		1214226	0		+			
ANR	1214458	PtrMemberAccess	NSTR ( node ) -> s		1214226	0					
ANR	1214459	CallExpression	NSTR ( node )		1214226	0					
ANR	1214460	Callee	NSTR		1214226	0					
ANR	1214461	Identifier	NSTR		1214226	0					
ANR	1214462	ArgumentList	node		1214226	1					
ANR	1214463	Argument	node		1214226	0					
ANR	1214464	Identifier	node		1214226	0					
ANR	1214465	Identifier	s		1214226	1					
ANR	1214466	Identifier	len		1214226	1					
ANR	1214467	Argument	s		1214226	1					
ANR	1214468	Identifier	s		1214226	0					
ANR	1214469	Argument	end		1214226	2					
ANR	1214470	Identifier	end		1214226	0					
ANR	1214471	ExpressionStatement	NSTR ( node ) -> end = NSTR ( node ) -> s + len + addlen	1449:4:31319:31365	1214226	2	True				
ANR	1214472	AssignmentExpression	NSTR ( node ) -> end = NSTR ( node ) -> s + len + addlen		1214226	0		=			
ANR	1214473	PtrMemberAccess	NSTR ( node ) -> end		1214226	0					
ANR	1214474	CallExpression	NSTR ( node )		1214226	0					
ANR	1214475	Callee	NSTR		1214226	0					
ANR	1214476	Identifier	NSTR		1214226	0					
ANR	1214477	ArgumentList	node		1214226	1					
ANR	1214478	Argument	node		1214226	0					
ANR	1214479	Identifier	node		1214226	0					
ANR	1214480	Identifier	end		1214226	1					
ANR	1214481	AdditiveExpression	NSTR ( node ) -> s + len + addlen		1214226	1		+			
ANR	1214482	PtrMemberAccess	NSTR ( node ) -> s		1214226	0					
ANR	1214483	CallExpression	NSTR ( node )		1214226	0					
ANR	1214484	Callee	NSTR		1214226	0					
ANR	1214485	Identifier	NSTR		1214226	0					
ANR	1214486	ArgumentList	node		1214226	1					
ANR	1214487	Argument	node		1214226	0					
ANR	1214488	Identifier	node		1214226	0					
ANR	1214489	Identifier	s		1214226	1					
ANR	1214490	AdditiveExpression	len + addlen		1214226	1		+			
ANR	1214491	Identifier	len		1214226	0					
ANR	1214492	Identifier	addlen		1214226	1					
ANR	1214493	ReturnStatement	return 0 ;	1452:2:31374:31382	1214226	2	True				
ANR	1214494	PrimaryExpression	0		1214226	0					
ANR	1214495	ReturnType	extern int		1214226	1					
ANR	1214496	Identifier	onig_node_str_cat		1214226	2					
ANR	1214497	ParameterList	"Node * node , const UChar * s , const UChar * end"		1214226	3					
ANR	1214498	Parameter	Node * node	1420:18:30573:30582	1214226	0	True				
ANR	1214499	ParameterType	Node *		1214226	0					
ANR	1214500	Identifier	node		1214226	1					
ANR	1214501	Parameter	const UChar * s	1420:30:30585:30598	1214226	1	True				
ANR	1214502	ParameterType	const UChar *		1214226	0					
ANR	1214503	Identifier	s		1214226	1					
ANR	1214504	Parameter	const UChar * end	1420:46:30601:30616	1214226	2	True				
ANR	1214505	ParameterType	const UChar *		1214226	0					
ANR	1214506	Identifier	end		1214226	1					
ANR	1214507	CFGEntryNode	ENTRY		1214226		True				
ANR	1214508	CFGExitNode	EXIT		1214226		True				
ANR	1214509	Symbol	strcat_capa		1214226						
ANR	1214510	Symbol	capa		1214226						
ANR	1214511	Symbol	addlen		1214226						
ANR	1214512	Symbol	NSTR		1214226						
ANR	1214513	Symbol	strcat_capa_from_static		1214226						
ANR	1214514	Symbol	* NSTR		1214226						
ANR	1214515	Symbol	NODE_STR_BUF_SIZE		1214226						
ANR	1214516	Symbol	p		1214226						
ANR	1214517	Symbol	node		1214226						
ANR	1214518	Symbol	NSTR ( node ) -> end		1214226						
ANR	1214519	Symbol	NSTR ( node ) -> s		1214226						
ANR	1214520	Symbol	s		1214226						
ANR	1214521	Symbol	len		1214226						
ANR	1214522	Symbol	NODE_STR_MARGIN		1214226						
ANR	1214523	Symbol	end		1214226						
ANR	1214524	Symbol	NSTR ( node ) -> capa		1214226						
ANR	1214525	Symbol	NSTR ( node ) -> buf		1214226						
ANR	1214526	Function	onig_node_str_set	1455:0:31387:31535							
ANR	1214527	FunctionDef	"onig_node_str_set (Node * node , const UChar * s , const UChar * end)"		1214526	0					
ANR	1214528	CompoundStatement		1457:0:31462:31535	1214526	0					
ANR	1214529	ExpressionStatement	onig_node_str_clear ( node )	1458:2:31466:31491	1214526	0	True				
ANR	1214530	CallExpression	onig_node_str_clear ( node )		1214526	0					
ANR	1214531	Callee	onig_node_str_clear		1214526	0					
ANR	1214532	Identifier	onig_node_str_clear		1214526	0					
ANR	1214533	ArgumentList	node		1214526	1					
ANR	1214534	Argument	node		1214526	0					
ANR	1214535	Identifier	node		1214526	0					
ANR	1214536	ReturnStatement	"return onig_node_str_cat ( node , s , end ) ;"	1459:2:31495:31533	1214526	1	True				
ANR	1214537	CallExpression	"onig_node_str_cat ( node , s , end )"		1214526	0					
ANR	1214538	Callee	onig_node_str_cat		1214526	0					
ANR	1214539	Identifier	onig_node_str_cat		1214526	0					
ANR	1214540	ArgumentList	node		1214526	1					
ANR	1214541	Argument	node		1214526	0					
ANR	1214542	Identifier	node		1214526	0					
ANR	1214543	Argument	s		1214526	1					
ANR	1214544	Identifier	s		1214526	0					
ANR	1214545	Argument	end		1214526	2					
ANR	1214546	Identifier	end		1214526	0					
ANR	1214547	ReturnType	extern int		1214526	1					
ANR	1214548	Identifier	onig_node_str_set		1214526	2					
ANR	1214549	ParameterList	"Node * node , const UChar * s , const UChar * end"		1214526	3					
ANR	1214550	Parameter	Node * node	1456:18:31416:31425	1214526	0	True				
ANR	1214551	ParameterType	Node *		1214526	0					
ANR	1214552	Identifier	node		1214526	1					
ANR	1214553	Parameter	const UChar * s	1456:30:31428:31441	1214526	1	True				
ANR	1214554	ParameterType	const UChar *		1214526	0					
ANR	1214555	Identifier	s		1214526	1					
ANR	1214556	Parameter	const UChar * end	1456:46:31444:31459	1214526	2	True				
ANR	1214557	ParameterType	const UChar *		1214526	0					
ANR	1214558	Identifier	end		1214526	1					
ANR	1214559	CFGEntryNode	ENTRY		1214526		True				
ANR	1214560	CFGExitNode	EXIT		1214526		True				
ANR	1214561	Symbol	node		1214526						
ANR	1214562	Symbol	s		1214526						
ANR	1214563	Symbol	onig_node_str_cat		1214526						
ANR	1214564	Symbol	end		1214526						
ANR	1214565	Function	node_str_cat_char	1462:0:31538:31661							
ANR	1214566	FunctionDef	"node_str_cat_char (Node * node , UChar c)"		1214565	0					
ANR	1214567	CompoundStatement		1464:0:31588:31661	1214565	0					
ANR	1214568	IdentifierDeclStatement	UChar s [ 1 ] ;	1465:2:31592:31602	1214565	0	True				
ANR	1214569	IdentifierDecl	s [ 1 ]		1214565	0					
ANR	1214570	IdentifierDeclType	UChar [ 1 ]		1214565	0					
ANR	1214571	Identifier	s		1214565	1					
ANR	1214572	PrimaryExpression	1		1214565	2					
ANR	1214573	ExpressionStatement	s [ 0 ] = c	1467:2:31607:31615	1214565	1	True				
ANR	1214574	AssignmentExpression	s [ 0 ] = c		1214565	0		=			
ANR	1214575	ArrayIndexing	s [ 0 ]		1214565	0					
ANR	1214576	Identifier	s		1214565	0					
ANR	1214577	PrimaryExpression	0		1214565	1					
ANR	1214578	Identifier	c		1214565	1					
ANR	1214579	ReturnStatement	"return onig_node_str_cat ( node , s , s + 1 ) ;"	1468:2:31619:31659	1214565	2	True				
ANR	1214580	CallExpression	"onig_node_str_cat ( node , s , s + 1 )"		1214565	0					
ANR	1214581	Callee	onig_node_str_cat		1214565	0					
ANR	1214582	Identifier	onig_node_str_cat		1214565	0					
ANR	1214583	ArgumentList	node		1214565	1					
ANR	1214584	Argument	node		1214565	0					
ANR	1214585	Identifier	node		1214565	0					
ANR	1214586	Argument	s		1214565	1					
ANR	1214587	Identifier	s		1214565	0					
ANR	1214588	Argument	s + 1		1214565	2					
ANR	1214589	AdditiveExpression	s + 1		1214565	0		+			
ANR	1214590	Identifier	s		1214565	0					
ANR	1214591	PrimaryExpression	1		1214565	1					
ANR	1214592	ReturnType	static int		1214565	1					
ANR	1214593	Identifier	node_str_cat_char		1214565	2					
ANR	1214594	ParameterList	"Node * node , UChar c"		1214565	3					
ANR	1214595	Parameter	Node * node	1463:18:31567:31576	1214565	0	True				
ANR	1214596	ParameterType	Node *		1214565	0					
ANR	1214597	Identifier	node		1214565	1					
ANR	1214598	Parameter	UChar c	1463:30:31579:31585	1214565	1	True				
ANR	1214599	ParameterType	UChar		1214565	0					
ANR	1214600	Identifier	c		1214565	1					
ANR	1214601	CFGEntryNode	ENTRY		1214565		True				
ANR	1214602	CFGExitNode	EXIT		1214565		True				
ANR	1214603	Symbol	node		1214565						
ANR	1214604	Symbol	c		1214565						
ANR	1214605	Symbol	s		1214565						
ANR	1214606	Symbol	onig_node_str_cat		1214565						
ANR	1214607	Symbol	* s		1214565						
ANR	1214608	Function	onig_node_conv_to_str_node	1471:0:31664:31881							
ANR	1214609	FunctionDef	"onig_node_conv_to_str_node (Node * node , int flag)"		1214608	0					
ANR	1214610	CompoundStatement		1473:0:31725:31881	1214608	0					
ANR	1214611	ExpressionStatement	"SET_NTYPE ( node , NT_STR )"	1474:2:31729:31752	1214608	0	True				
ANR	1214612	CallExpression	"SET_NTYPE ( node , NT_STR )"		1214608	0					
ANR	1214613	Callee	SET_NTYPE		1214608	0					
ANR	1214614	Identifier	SET_NTYPE		1214608	0					
ANR	1214615	ArgumentList	node		1214608	1					
ANR	1214616	Argument	node		1214608	0					
ANR	1214617	Identifier	node		1214608	0					
ANR	1214618	Argument	NT_STR		1214608	1					
ANR	1214619	Identifier	NT_STR		1214608	0					
ANR	1214620	ExpressionStatement	NSTR ( node ) -> flag = flag	1475:2:31756:31779	1214608	1	True				
ANR	1214621	AssignmentExpression	NSTR ( node ) -> flag = flag		1214608	0		=			
ANR	1214622	PtrMemberAccess	NSTR ( node ) -> flag		1214608	0					
ANR	1214623	CallExpression	NSTR ( node )		1214608	0					
ANR	1214624	Callee	NSTR		1214608	0					
ANR	1214625	Identifier	NSTR		1214608	0					
ANR	1214626	ArgumentList	node		1214608	1					
ANR	1214627	Argument	node		1214608	0					
ANR	1214628	Identifier	node		1214608	0					
ANR	1214629	Identifier	flag		1214608	1					
ANR	1214630	Identifier	flag		1214608	1					
ANR	1214631	ExpressionStatement	NSTR ( node ) -> capa = 0	1476:2:31783:31803	1214608	2	True				
ANR	1214632	AssignmentExpression	NSTR ( node ) -> capa = 0		1214608	0		=			
ANR	1214633	PtrMemberAccess	NSTR ( node ) -> capa		1214608	0					
ANR	1214634	CallExpression	NSTR ( node )		1214608	0					
ANR	1214635	Callee	NSTR		1214608	0					
ANR	1214636	Identifier	NSTR		1214608	0					
ANR	1214637	ArgumentList	node		1214608	1					
ANR	1214638	Argument	node		1214608	0					
ANR	1214639	Identifier	node		1214608	0					
ANR	1214640	Identifier	capa		1214608	1					
ANR	1214641	PrimaryExpression	0		1214608	1					
ANR	1214642	ExpressionStatement	NSTR ( node ) -> s = NSTR ( node ) -> buf	1477:2:31807:31841	1214608	3	True				
ANR	1214643	AssignmentExpression	NSTR ( node ) -> s = NSTR ( node ) -> buf		1214608	0		=			
ANR	1214644	PtrMemberAccess	NSTR ( node ) -> s		1214608	0					
ANR	1214645	CallExpression	NSTR ( node )		1214608	0					
ANR	1214646	Callee	NSTR		1214608	0					
ANR	1214647	Identifier	NSTR		1214608	0					
ANR	1214648	ArgumentList	node		1214608	1					
ANR	1214649	Argument	node		1214608	0					
ANR	1214650	Identifier	node		1214608	0					
ANR	1214651	Identifier	s		1214608	1					
ANR	1214652	PtrMemberAccess	NSTR ( node ) -> buf		1214608	1					
ANR	1214653	CallExpression	NSTR ( node )		1214608	0					
ANR	1214654	Callee	NSTR		1214608	0					
ANR	1214655	Identifier	NSTR		1214608	0					
ANR	1214656	ArgumentList	node		1214608	1					
ANR	1214657	Argument	node		1214608	0					
ANR	1214658	Identifier	node		1214608	0					
ANR	1214659	Identifier	buf		1214608	1					
ANR	1214660	ExpressionStatement	NSTR ( node ) -> end = NSTR ( node ) -> buf	1478:2:31845:31879	1214608	4	True				
ANR	1214661	AssignmentExpression	NSTR ( node ) -> end = NSTR ( node ) -> buf		1214608	0		=			
ANR	1214662	PtrMemberAccess	NSTR ( node ) -> end		1214608	0					
ANR	1214663	CallExpression	NSTR ( node )		1214608	0					
ANR	1214664	Callee	NSTR		1214608	0					
ANR	1214665	Identifier	NSTR		1214608	0					
ANR	1214666	ArgumentList	node		1214608	1					
ANR	1214667	Argument	node		1214608	0					
ANR	1214668	Identifier	node		1214608	0					
ANR	1214669	Identifier	end		1214608	1					
ANR	1214670	PtrMemberAccess	NSTR ( node ) -> buf		1214608	1					
ANR	1214671	CallExpression	NSTR ( node )		1214608	0					
ANR	1214672	Callee	NSTR		1214608	0					
ANR	1214673	Identifier	NSTR		1214608	0					
ANR	1214674	ArgumentList	node		1214608	1					
ANR	1214675	Argument	node		1214608	0					
ANR	1214676	Identifier	node		1214608	0					
ANR	1214677	Identifier	buf		1214608	1					
ANR	1214678	ReturnType	extern void		1214608	1					
ANR	1214679	Identifier	onig_node_conv_to_str_node		1214608	2					
ANR	1214680	ParameterList	"Node * node , int flag"		1214608	3					
ANR	1214681	Parameter	Node * node	1472:27:31703:31712	1214608	0	True				
ANR	1214682	ParameterType	Node *		1214608	0					
ANR	1214683	Identifier	node		1214608	1					
ANR	1214684	Parameter	int flag	1472:39:31715:31722	1214608	1	True				
ANR	1214685	ParameterType	int		1214608	0					
ANR	1214686	Identifier	flag		1214608	1					
ANR	1214687	CFGEntryNode	ENTRY		1214608		True				
ANR	1214688	CFGExitNode	EXIT		1214608		True				
ANR	1214689	Symbol	node		1214608						
ANR	1214690	Symbol	NSTR ( node ) -> s		1214608						
ANR	1214691	Symbol	NSTR ( node ) -> end		1214608						
ANR	1214692	Symbol	flag		1214608						
ANR	1214693	Symbol	NSTR		1214608						
ANR	1214694	Symbol	* NSTR		1214608						
ANR	1214695	Symbol	NSTR ( node ) -> capa		1214608						
ANR	1214696	Symbol	NSTR ( node ) -> buf		1214608						
ANR	1214697	Symbol	NSTR ( node ) -> flag		1214608						
ANR	1214698	Symbol	NT_STR		1214608						
ANR	1214699	Function	onig_node_str_clear	1481:0:31884:32188							
ANR	1214700	FunctionDef	onig_node_str_clear (Node * node)		1214699	0					
ANR	1214701	CompoundStatement		1483:0:31928:32188	1214699	0					
ANR	1214702	IfStatement	if ( NSTR ( node ) -> capa != 0 && IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf )		1214699	0					
ANR	1214703	Condition	NSTR ( node ) -> capa != 0 && IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf	1484:6:31936:32028	1214699	0	True				
ANR	1214704	AndExpression	NSTR ( node ) -> capa != 0 && IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf		1214699	0		&&			
ANR	1214705	EqualityExpression	NSTR ( node ) -> capa != 0		1214699	0		!=			
ANR	1214706	PtrMemberAccess	NSTR ( node ) -> capa		1214699	0					
ANR	1214707	CallExpression	NSTR ( node )		1214699	0					
ANR	1214708	Callee	NSTR		1214699	0					
ANR	1214709	Identifier	NSTR		1214699	0					
ANR	1214710	ArgumentList	node		1214699	1					
ANR	1214711	Argument	node		1214699	0					
ANR	1214712	Identifier	node		1214699	0					
ANR	1214713	Identifier	capa		1214699	1					
ANR	1214714	PrimaryExpression	0		1214699	1					
ANR	1214715	AndExpression	IS_NOT_NULL ( NSTR ( node ) -> s ) && NSTR ( node ) -> s != NSTR ( node ) -> buf		1214699	1		&&			
ANR	1214716	CallExpression	IS_NOT_NULL ( NSTR ( node ) -> s )		1214699	0					
ANR	1214717	Callee	IS_NOT_NULL		1214699	0					
ANR	1214718	Identifier	IS_NOT_NULL		1214699	0					
ANR	1214719	ArgumentList	NSTR ( node ) -> s		1214699	1					
ANR	1214720	Argument	NSTR ( node ) -> s		1214699	0					
ANR	1214721	PtrMemberAccess	NSTR ( node ) -> s		1214699	0					
ANR	1214722	CallExpression	NSTR ( node )		1214699	0					
ANR	1214723	Callee	NSTR		1214699	0					
ANR	1214724	Identifier	NSTR		1214699	0					
ANR	1214725	ArgumentList	node		1214699	1					
ANR	1214726	Argument	node		1214699	0					
ANR	1214727	Identifier	node		1214699	0					
ANR	1214728	Identifier	s		1214699	1					
ANR	1214729	EqualityExpression	NSTR ( node ) -> s != NSTR ( node ) -> buf		1214699	1		!=			
ANR	1214730	PtrMemberAccess	NSTR ( node ) -> s		1214699	0					
ANR	1214731	CallExpression	NSTR ( node )		1214699	0					
ANR	1214732	Callee	NSTR		1214699	0					
ANR	1214733	Identifier	NSTR		1214699	0					
ANR	1214734	ArgumentList	node		1214699	1					
ANR	1214735	Argument	node		1214699	0					
ANR	1214736	Identifier	node		1214699	0					
ANR	1214737	Identifier	s		1214699	1					
ANR	1214738	PtrMemberAccess	NSTR ( node ) -> buf		1214699	1					
ANR	1214739	CallExpression	NSTR ( node )		1214699	0					
ANR	1214740	Callee	NSTR		1214699	0					
ANR	1214741	Identifier	NSTR		1214699	0					
ANR	1214742	ArgumentList	node		1214699	1					
ANR	1214743	Argument	node		1214699	0					
ANR	1214744	Identifier	node		1214699	0					
ANR	1214745	Identifier	buf		1214699	1					
ANR	1214746	CompoundStatement		3:70:102:102	1214699	1					
ANR	1214747	ExpressionStatement	xfree ( NSTR ( node ) -> s )	1486:4:32037:32057	1214699	0	True				
ANR	1214748	CallExpression	xfree ( NSTR ( node ) -> s )		1214699	0					
ANR	1214749	Callee	xfree		1214699	0					
ANR	1214750	Identifier	xfree		1214699	0					
ANR	1214751	ArgumentList	NSTR ( node ) -> s		1214699	1					
ANR	1214752	Argument	NSTR ( node ) -> s		1214699	0					
ANR	1214753	PtrMemberAccess	NSTR ( node ) -> s		1214699	0					
ANR	1214754	CallExpression	NSTR ( node )		1214699	0					
ANR	1214755	Callee	NSTR		1214699	0					
ANR	1214756	Identifier	NSTR		1214699	0					
ANR	1214757	ArgumentList	node		1214699	1					
ANR	1214758	Argument	node		1214699	0					
ANR	1214759	Identifier	node		1214699	0					
ANR	1214760	Identifier	s		1214699	1					
ANR	1214761	ExpressionStatement	NSTR ( node ) -> capa = 0	1489:2:32066:32086	1214699	1	True				
ANR	1214762	AssignmentExpression	NSTR ( node ) -> capa = 0		1214699	0		=			
ANR	1214763	PtrMemberAccess	NSTR ( node ) -> capa		1214699	0					
ANR	1214764	CallExpression	NSTR ( node )		1214699	0					
ANR	1214765	Callee	NSTR		1214699	0					
ANR	1214766	Identifier	NSTR		1214699	0					
ANR	1214767	ArgumentList	node		1214699	1					
ANR	1214768	Argument	node		1214699	0					
ANR	1214769	Identifier	node		1214699	0					
ANR	1214770	Identifier	capa		1214699	1					
ANR	1214771	PrimaryExpression	0		1214699	1					
ANR	1214772	ExpressionStatement	NSTR ( node ) -> flag = 0	1490:2:32090:32110	1214699	2	True				
ANR	1214773	AssignmentExpression	NSTR ( node ) -> flag = 0		1214699	0		=			
ANR	1214774	PtrMemberAccess	NSTR ( node ) -> flag		1214699	0					
ANR	1214775	CallExpression	NSTR ( node )		1214699	0					
ANR	1214776	Callee	NSTR		1214699	0					
ANR	1214777	Identifier	NSTR		1214699	0					
ANR	1214778	ArgumentList	node		1214699	1					
ANR	1214779	Argument	node		1214699	0					
ANR	1214780	Identifier	node		1214699	0					
ANR	1214781	Identifier	flag		1214699	1					
ANR	1214782	PrimaryExpression	0		1214699	1					
ANR	1214783	ExpressionStatement	NSTR ( node ) -> s = NSTR ( node ) -> buf	1491:2:32114:32148	1214699	3	True				
ANR	1214784	AssignmentExpression	NSTR ( node ) -> s = NSTR ( node ) -> buf		1214699	0		=			
ANR	1214785	PtrMemberAccess	NSTR ( node ) -> s		1214699	0					
ANR	1214786	CallExpression	NSTR ( node )		1214699	0					
ANR	1214787	Callee	NSTR		1214699	0					
ANR	1214788	Identifier	NSTR		1214699	0					
ANR	1214789	ArgumentList	node		1214699	1					
ANR	1214790	Argument	node		1214699	0					
ANR	1214791	Identifier	node		1214699	0					
ANR	1214792	Identifier	s		1214699	1					
ANR	1214793	PtrMemberAccess	NSTR ( node ) -> buf		1214699	1					
ANR	1214794	CallExpression	NSTR ( node )		1214699	0					
ANR	1214795	Callee	NSTR		1214699	0					
ANR	1214796	Identifier	NSTR		1214699	0					
ANR	1214797	ArgumentList	node		1214699	1					
ANR	1214798	Argument	node		1214699	0					
ANR	1214799	Identifier	node		1214699	0					
ANR	1214800	Identifier	buf		1214699	1					
ANR	1214801	ExpressionStatement	NSTR ( node ) -> end = NSTR ( node ) -> buf	1492:2:32152:32186	1214699	4	True				
ANR	1214802	AssignmentExpression	NSTR ( node ) -> end = NSTR ( node ) -> buf		1214699	0		=			
ANR	1214803	PtrMemberAccess	NSTR ( node ) -> end		1214699	0					
ANR	1214804	CallExpression	NSTR ( node )		1214699	0					
ANR	1214805	Callee	NSTR		1214699	0					
ANR	1214806	Identifier	NSTR		1214699	0					
ANR	1214807	ArgumentList	node		1214699	1					
ANR	1214808	Argument	node		1214699	0					
ANR	1214809	Identifier	node		1214699	0					
ANR	1214810	Identifier	end		1214699	1					
ANR	1214811	PtrMemberAccess	NSTR ( node ) -> buf		1214699	1					
ANR	1214812	CallExpression	NSTR ( node )		1214699	0					
ANR	1214813	Callee	NSTR		1214699	0					
ANR	1214814	Identifier	NSTR		1214699	0					
ANR	1214815	ArgumentList	node		1214699	1					
ANR	1214816	Argument	node		1214699	0					
ANR	1214817	Identifier	node		1214699	0					
ANR	1214818	Identifier	buf		1214699	1					
ANR	1214819	ReturnType	extern void		1214699	1					
ANR	1214820	Identifier	onig_node_str_clear		1214699	2					
ANR	1214821	ParameterList	Node * node		1214699	3					
ANR	1214822	Parameter	Node * node	1482:20:31916:31925	1214699	0	True				
ANR	1214823	ParameterType	Node *		1214699	0					
ANR	1214824	Identifier	node		1214699	1					
ANR	1214825	CFGEntryNode	ENTRY		1214699		True				
ANR	1214826	CFGExitNode	EXIT		1214699		True				
ANR	1214827	Symbol	node		1214699						
ANR	1214828	Symbol	NSTR ( node ) -> s		1214699						
ANR	1214829	Symbol	IS_NOT_NULL		1214699						
ANR	1214830	Symbol	NSTR ( node ) -> end		1214699						
ANR	1214831	Symbol	NSTR		1214699						
ANR	1214832	Symbol	* NSTR		1214699						
ANR	1214833	Symbol	NSTR ( node ) -> buf		1214699						
ANR	1214834	Symbol	NSTR ( node ) -> capa		1214699						
ANR	1214835	Symbol	NSTR ( node ) -> flag		1214699						
ANR	1214836	Function	node_new_str	1495:0:32191:32562							
ANR	1214837	FunctionDef	"node_new_str (const UChar * s , const UChar * end)"		1214836	0					
ANR	1214838	CompoundStatement		1497:0:32251:32562	1214836	0					
ANR	1214839	IdentifierDeclStatement	Node * node = node_new ( ) ;	1498:2:32255:32278	1214836	0	True				
ANR	1214840	IdentifierDecl	* node = node_new ( )		1214836	0					
ANR	1214841	IdentifierDeclType	Node *		1214836	0					
ANR	1214842	Identifier	node		1214836	1					
ANR	1214843	AssignmentExpression	* node = node_new ( )		1214836	2		=			
ANR	1214844	Identifier	node		1214836	0					
ANR	1214845	CallExpression	node_new ( )		1214836	1					
ANR	1214846	Callee	node_new		1214836	0					
ANR	1214847	Identifier	node_new		1214836	0					
ANR	1214848	ArgumentList			1214836	1					
ANR	1214849	ExpressionStatement	CHECK_NULL_RETURN ( node )	1499:2:32282:32305	1214836	1	True				
ANR	1214850	CallExpression	CHECK_NULL_RETURN ( node )		1214836	0					
ANR	1214851	Callee	CHECK_NULL_RETURN		1214836	0					
ANR	1214852	Identifier	CHECK_NULL_RETURN		1214836	0					
ANR	1214853	ArgumentList	node		1214836	1					
ANR	1214854	Argument	node		1214836	0					
ANR	1214855	Identifier	node		1214836	0					
ANR	1214856	ExpressionStatement	"SET_NTYPE ( node , NT_STR )"	1501:2:32310:32333	1214836	2	True				
ANR	1214857	CallExpression	"SET_NTYPE ( node , NT_STR )"		1214836	0					
ANR	1214858	Callee	SET_NTYPE		1214836	0					
ANR	1214859	Identifier	SET_NTYPE		1214836	0					
ANR	1214860	ArgumentList	node		1214836	1					
ANR	1214861	Argument	node		1214836	0					
ANR	1214862	Identifier	node		1214836	0					
ANR	1214863	Argument	NT_STR		1214836	1					
ANR	1214864	Identifier	NT_STR		1214836	0					
ANR	1214865	ExpressionStatement	NSTR ( node ) -> capa = 0	1502:2:32337:32357	1214836	3	True				
ANR	1214866	AssignmentExpression	NSTR ( node ) -> capa = 0		1214836	0		=			
ANR	1214867	PtrMemberAccess	NSTR ( node ) -> capa		1214836	0					
ANR	1214868	CallExpression	NSTR ( node )		1214836	0					
ANR	1214869	Callee	NSTR		1214836	0					
ANR	1214870	Identifier	NSTR		1214836	0					
ANR	1214871	ArgumentList	node		1214836	1					
ANR	1214872	Argument	node		1214836	0					
ANR	1214873	Identifier	node		1214836	0					
ANR	1214874	Identifier	capa		1214836	1					
ANR	1214875	PrimaryExpression	0		1214836	1					
ANR	1214876	ExpressionStatement	NSTR ( node ) -> flag = 0	1503:2:32361:32381	1214836	4	True				
ANR	1214877	AssignmentExpression	NSTR ( node ) -> flag = 0		1214836	0		=			
ANR	1214878	PtrMemberAccess	NSTR ( node ) -> flag		1214836	0					
ANR	1214879	CallExpression	NSTR ( node )		1214836	0					
ANR	1214880	Callee	NSTR		1214836	0					
ANR	1214881	Identifier	NSTR		1214836	0					
ANR	1214882	ArgumentList	node		1214836	1					
ANR	1214883	Argument	node		1214836	0					
ANR	1214884	Identifier	node		1214836	0					
ANR	1214885	Identifier	flag		1214836	1					
ANR	1214886	PrimaryExpression	0		1214836	1					
ANR	1214887	ExpressionStatement	NSTR ( node ) -> s = NSTR ( node ) -> buf	1504:2:32385:32419	1214836	5	True				
ANR	1214888	AssignmentExpression	NSTR ( node ) -> s = NSTR ( node ) -> buf		1214836	0		=			
ANR	1214889	PtrMemberAccess	NSTR ( node ) -> s		1214836	0					
ANR	1214890	CallExpression	NSTR ( node )		1214836	0					
ANR	1214891	Callee	NSTR		1214836	0					
ANR	1214892	Identifier	NSTR		1214836	0					
ANR	1214893	ArgumentList	node		1214836	1					
ANR	1214894	Argument	node		1214836	0					
ANR	1214895	Identifier	node		1214836	0					
ANR	1214896	Identifier	s		1214836	1					
ANR	1214897	PtrMemberAccess	NSTR ( node ) -> buf		1214836	1					
ANR	1214898	CallExpression	NSTR ( node )		1214836	0					
ANR	1214899	Callee	NSTR		1214836	0					
ANR	1214900	Identifier	NSTR		1214836	0					
ANR	1214901	ArgumentList	node		1214836	1					
ANR	1214902	Argument	node		1214836	0					
ANR	1214903	Identifier	node		1214836	0					
ANR	1214904	Identifier	buf		1214836	1					
ANR	1214905	ExpressionStatement	NSTR ( node ) -> end = NSTR ( node ) -> buf	1505:2:32423:32457	1214836	6	True				
ANR	1214906	AssignmentExpression	NSTR ( node ) -> end = NSTR ( node ) -> buf		1214836	0		=			
ANR	1214907	PtrMemberAccess	NSTR ( node ) -> end		1214836	0					
ANR	1214908	CallExpression	NSTR ( node )		1214836	0					
ANR	1214909	Callee	NSTR		1214836	0					
ANR	1214910	Identifier	NSTR		1214836	0					
ANR	1214911	ArgumentList	node		1214836	1					
ANR	1214912	Argument	node		1214836	0					
ANR	1214913	Identifier	node		1214836	0					
ANR	1214914	Identifier	end		1214836	1					
ANR	1214915	PtrMemberAccess	NSTR ( node ) -> buf		1214836	1					
ANR	1214916	CallExpression	NSTR ( node )		1214836	0					
ANR	1214917	Callee	NSTR		1214836	0					
ANR	1214918	Identifier	NSTR		1214836	0					
ANR	1214919	ArgumentList	node		1214836	1					
ANR	1214920	Argument	node		1214836	0					
ANR	1214921	Identifier	node		1214836	0					
ANR	1214922	Identifier	buf		1214836	1					
ANR	1214923	IfStatement	"if ( onig_node_str_cat ( node , s , end ) )"		1214836	7					
ANR	1214924	Condition	"onig_node_str_cat ( node , s , end )"	1506:6:32465:32495	1214836	0	True				
ANR	1214925	CallExpression	"onig_node_str_cat ( node , s , end )"		1214836	0					
ANR	1214926	Callee	onig_node_str_cat		1214836	0					
ANR	1214927	Identifier	onig_node_str_cat		1214836	0					
ANR	1214928	ArgumentList	node		1214836	1					
ANR	1214929	Argument	node		1214836	0					
ANR	1214930	Identifier	node		1214836	0					
ANR	1214931	Argument	s		1214836	1					
ANR	1214932	Identifier	s		1214836	0					
ANR	1214933	Argument	end		1214836	2					
ANR	1214934	Identifier	end		1214836	0					
ANR	1214935	CompoundStatement		10:39:246:246	1214836	1					
ANR	1214936	ExpressionStatement	onig_node_free ( node )	1507:4:32504:32524	1214836	0	True				
ANR	1214937	CallExpression	onig_node_free ( node )		1214836	0					
ANR	1214938	Callee	onig_node_free		1214836	0					
ANR	1214939	Identifier	onig_node_free		1214836	0					
ANR	1214940	ArgumentList	node		1214836	1					
ANR	1214941	Argument	node		1214836	0					
ANR	1214942	Identifier	node		1214836	0					
ANR	1214943	ReturnStatement	return NULL ;	1508:4:32530:32541	1214836	1	True				
ANR	1214944	Identifier	NULL		1214836	0					
ANR	1214945	ReturnStatement	return node ;	1510:2:32549:32560	1214836	8	True				
ANR	1214946	Identifier	node		1214836	0					
ANR	1214947	ReturnType	static Node *		1214836	1					
ANR	1214948	Identifier	node_new_str		1214836	2					
ANR	1214949	ParameterList	"const UChar * s , const UChar * end"		1214836	3					
ANR	1214950	Parameter	const UChar * s	1496:13:32217:32230	1214836	0	True				
ANR	1214951	ParameterType	const UChar *		1214836	0					
ANR	1214952	Identifier	s		1214836	1					
ANR	1214953	Parameter	const UChar * end	1496:29:32233:32248	1214836	1	True				
ANR	1214954	ParameterType	const UChar *		1214836	0					
ANR	1214955	Identifier	end		1214836	1					
ANR	1214956	CFGEntryNode	ENTRY		1214836		True				
ANR	1214957	CFGExitNode	EXIT		1214836		True				
ANR	1214958	Symbol	NULL		1214836						
ANR	1214959	Symbol	NSTR		1214836						
ANR	1214960	Symbol	* NSTR		1214836						
ANR	1214961	Symbol	node		1214836						
ANR	1214962	Symbol	NSTR ( node ) -> s		1214836						
ANR	1214963	Symbol	NSTR ( node ) -> end		1214836						
ANR	1214964	Symbol	s		1214836						
ANR	1214965	Symbol	onig_node_str_cat		1214836						
ANR	1214966	Symbol	node_new		1214836						
ANR	1214967	Symbol	end		1214836						
ANR	1214968	Symbol	NSTR ( node ) -> capa		1214836						
ANR	1214969	Symbol	NSTR ( node ) -> buf		1214836						
ANR	1214970	Symbol	NSTR ( node ) -> flag		1214836						
ANR	1214971	Symbol	NT_STR		1214836						
ANR	1214972	Function	onig_node_new_str	1513:0:32565:32663							
ANR	1214973	FunctionDef	"onig_node_new_str (const UChar * s , const UChar * end)"		1214972	0					
ANR	1214974	CompoundStatement		1515:0:32630:32663	1214972	0					
ANR	1214975	ReturnStatement	"return node_new_str ( s , end ) ;"	1516:2:32634:32661	1214972	0	True				
ANR	1214976	CallExpression	"node_new_str ( s , end )"		1214972	0					
ANR	1214977	Callee	node_new_str		1214972	0					
ANR	1214978	Identifier	node_new_str		1214972	0					
ANR	1214979	ArgumentList	s		1214972	1					
ANR	1214980	Argument	s		1214972	0					
ANR	1214981	Identifier	s		1214972	0					
ANR	1214982	Argument	end		1214972	1					
ANR	1214983	Identifier	end		1214972	0					
ANR	1214984	ReturnType	extern Node *		1214972	1					
ANR	1214985	Identifier	onig_node_new_str		1214972	2					
ANR	1214986	ParameterList	"const UChar * s , const UChar * end"		1214972	3					
ANR	1214987	Parameter	const UChar * s	1514:18:32596:32609	1214972	0	True				
ANR	1214988	ParameterType	const UChar *		1214972	0					
ANR	1214989	Identifier	s		1214972	1					
ANR	1214990	Parameter	const UChar * end	1514:34:32612:32627	1214972	1	True				
ANR	1214991	ParameterType	const UChar *		1214972	0					
ANR	1214992	Identifier	end		1214972	1					
ANR	1214993	CFGEntryNode	ENTRY		1214972		True				
ANR	1214994	CFGExitNode	EXIT		1214972		True				
ANR	1214995	Symbol	s		1214972						
ANR	1214996	Symbol	end		1214972						
ANR	1214997	Symbol	node_new_str		1214972						
ANR	1214998	Function	node_new_str_raw	1519:0:32666:32797							
ANR	1214999	FunctionDef	"node_new_str_raw (UChar * s , UChar * end)"		1214998	0					
ANR	1215000	CompoundStatement		1521:0:32718:32797	1214998	0					
ANR	1215001	IdentifierDeclStatement	"Node * node = node_new_str ( s , end ) ;"	1522:2:32722:32755	1214998	0	True				
ANR	1215002	IdentifierDecl	"* node = node_new_str ( s , end )"		1214998	0					
ANR	1215003	IdentifierDeclType	Node *		1214998	0					
ANR	1215004	Identifier	node		1214998	1					
ANR	1215005	AssignmentExpression	"* node = node_new_str ( s , end )"		1214998	2		=			
ANR	1215006	Identifier	node		1214998	0					
ANR	1215007	CallExpression	"node_new_str ( s , end )"		1214998	1					
ANR	1215008	Callee	node_new_str		1214998	0					
ANR	1215009	Identifier	node_new_str		1214998	0					
ANR	1215010	ArgumentList	s		1214998	1					
ANR	1215011	Argument	s		1214998	0					
ANR	1215012	Identifier	s		1214998	0					
ANR	1215013	Argument	end		1214998	1					
ANR	1215014	Identifier	end		1214998	0					
ANR	1215015	ExpressionStatement	NSTRING_SET_RAW ( node )	1523:2:32759:32780	1214998	1	True				
ANR	1215016	CallExpression	NSTRING_SET_RAW ( node )		1214998	0					
ANR	1215017	Callee	NSTRING_SET_RAW		1214998	0					
ANR	1215018	Identifier	NSTRING_SET_RAW		1214998	0					
ANR	1215019	ArgumentList	node		1214998	1					
ANR	1215020	Argument	node		1214998	0					
ANR	1215021	Identifier	node		1214998	0					
ANR	1215022	ReturnStatement	return node ;	1524:2:32784:32795	1214998	2	True				
ANR	1215023	Identifier	node		1214998	0					
ANR	1215024	ReturnType	static Node *		1214998	1					
ANR	1215025	Identifier	node_new_str_raw		1214998	2					
ANR	1215026	ParameterList	"UChar * s , UChar * end"		1214998	3					
ANR	1215027	Parameter	UChar * s	1520:17:32696:32703	1214998	0	True				
ANR	1215028	ParameterType	UChar *		1214998	0					
ANR	1215029	Identifier	s		1214998	1					
ANR	1215030	Parameter	UChar * end	1520:27:32706:32715	1214998	1	True				
ANR	1215031	ParameterType	UChar *		1214998	0					
ANR	1215032	Identifier	end		1214998	1					
ANR	1215033	CFGEntryNode	ENTRY		1214998		True				
ANR	1215034	CFGExitNode	EXIT		1214998		True				
ANR	1215035	Symbol	node		1214998						
ANR	1215036	Symbol	s		1214998						
ANR	1215037	Symbol	end		1214998						
ANR	1215038	Symbol	node_new_str		1214998						
ANR	1215039	Function	node_new_empty	1527:0:32800:32871							
ANR	1215040	FunctionDef	node_new_empty ()		1215039	0					
ANR	1215041	CompoundStatement		1529:0:32834:32871	1215039	0					
ANR	1215042	ReturnStatement	"return node_new_str ( NULL , NULL ) ;"	1530:2:32838:32869	1215039	0	True				
ANR	1215043	CallExpression	"node_new_str ( NULL , NULL )"		1215039	0					
ANR	1215044	Callee	node_new_str		1215039	0					
ANR	1215045	Identifier	node_new_str		1215039	0					
ANR	1215046	ArgumentList	NULL		1215039	1					
ANR	1215047	Argument	NULL		1215039	0					
ANR	1215048	Identifier	NULL		1215039	0					
ANR	1215049	Argument	NULL		1215039	1					
ANR	1215050	Identifier	NULL		1215039	0					
ANR	1215051	ReturnType	static Node *		1215039	1					
ANR	1215052	Identifier	node_new_empty		1215039	2					
ANR	1215053	ParameterList			1215039	3					
ANR	1215054	CFGEntryNode	ENTRY		1215039		True				
ANR	1215055	CFGExitNode	EXIT		1215039		True				
ANR	1215056	Symbol	NULL		1215039						
ANR	1215057	Symbol	node_new_str		1215039						
ANR	1215058	Function	node_new_str_raw_char	1533:0:32874:32984							
ANR	1215059	FunctionDef	node_new_str_raw_char (UChar c)		1215058	0					
ANR	1215060	CompoundStatement		1535:0:32918:32984	1215058	0					
ANR	1215061	IdentifierDeclStatement	UChar p [ 1 ] ;	1536:2:32922:32932	1215058	0	True				
ANR	1215062	IdentifierDecl	p [ 1 ]		1215058	0					
ANR	1215063	IdentifierDeclType	UChar [ 1 ]		1215058	0					
ANR	1215064	Identifier	p		1215058	1					
ANR	1215065	PrimaryExpression	1		1215058	2					
ANR	1215066	ExpressionStatement	p [ 0 ] = c	1538:2:32937:32945	1215058	1	True				
ANR	1215067	AssignmentExpression	p [ 0 ] = c		1215058	0		=			
ANR	1215068	ArrayIndexing	p [ 0 ]		1215058	0					
ANR	1215069	Identifier	p		1215058	0					
ANR	1215070	PrimaryExpression	0		1215058	1					
ANR	1215071	Identifier	c		1215058	1					
ANR	1215072	ReturnStatement	"return node_new_str_raw ( p , p + 1 ) ;"	1539:2:32949:32982	1215058	2	True				
ANR	1215073	CallExpression	"node_new_str_raw ( p , p + 1 )"		1215058	0					
ANR	1215074	Callee	node_new_str_raw		1215058	0					
ANR	1215075	Identifier	node_new_str_raw		1215058	0					
ANR	1215076	ArgumentList	p		1215058	1					
ANR	1215077	Argument	p		1215058	0					
ANR	1215078	Identifier	p		1215058	0					
ANR	1215079	Argument	p + 1		1215058	1					
ANR	1215080	AdditiveExpression	p + 1		1215058	0		+			
ANR	1215081	Identifier	p		1215058	0					
ANR	1215082	PrimaryExpression	1		1215058	1					
ANR	1215083	ReturnType	static Node *		1215058	1					
ANR	1215084	Identifier	node_new_str_raw_char		1215058	2					
ANR	1215085	ParameterList	UChar c		1215058	3					
ANR	1215086	Parameter	UChar c	1534:22:32909:32915	1215058	0	True				
ANR	1215087	ParameterType	UChar		1215058	0					
ANR	1215088	Identifier	c		1215058	1					
ANR	1215089	CFGEntryNode	ENTRY		1215058		True				
ANR	1215090	CFGExitNode	EXIT		1215058		True				
ANR	1215091	Symbol	p		1215058						
ANR	1215092	Symbol	c		1215058						
ANR	1215093	Symbol	* p		1215058						
ANR	1215094	Symbol	node_new_str_raw		1215058						
ANR	1215095	Function	str_node_split_last_char	1542:0:32987:33376							
ANR	1215096	FunctionDef	"str_node_split_last_char (StrNode * sn , OnigEncoding enc)"		1215095	0					
ANR	1215097	CompoundStatement		1544:0:33056:33376	1215095	0					
ANR	1215098	IdentifierDeclStatement	const UChar * p ;	1545:2:33060:33074	1215095	0	True				
ANR	1215099	IdentifierDecl	* p		1215095	0					
ANR	1215100	IdentifierDeclType	const UChar *		1215095	0					
ANR	1215101	Identifier	p		1215095	1					
ANR	1215102	IdentifierDeclStatement	Node * n = NULL_NODE ;	1546:2:33078:33097	1215095	1	True				
ANR	1215103	IdentifierDecl	* n = NULL_NODE		1215095	0					
ANR	1215104	IdentifierDeclType	Node *		1215095	0					
ANR	1215105	Identifier	n		1215095	1					
ANR	1215106	AssignmentExpression	* n = NULL_NODE		1215095	2		=			
ANR	1215107	Identifier	NULL_NODE		1215095	0					
ANR	1215108	Identifier	NULL_NODE		1215095	1					
ANR	1215109	IfStatement	if ( sn -> end > sn -> s )		1215095	2					
ANR	1215110	Condition	sn -> end > sn -> s	1548:6:33106:33120	1215095	0	True				
ANR	1215111	RelationalExpression	sn -> end > sn -> s		1215095	0		>			
ANR	1215112	PtrMemberAccess	sn -> end		1215095	0					
ANR	1215113	Identifier	sn		1215095	0					
ANR	1215114	Identifier	end		1215095	1					
ANR	1215115	PtrMemberAccess	sn -> s		1215095	1					
ANR	1215116	Identifier	sn		1215095	0					
ANR	1215117	Identifier	s		1215095	1					
ANR	1215118	CompoundStatement		5:23:66:66	1215095	1					
ANR	1215119	ExpressionStatement	"p = onigenc_get_prev_char_head ( enc , sn -> s , sn -> end )"	1549:4:33129:33180	1215095	0	True				
ANR	1215120	AssignmentExpression	"p = onigenc_get_prev_char_head ( enc , sn -> s , sn -> end )"		1215095	0		=			
ANR	1215121	Identifier	p		1215095	0					
ANR	1215122	CallExpression	"onigenc_get_prev_char_head ( enc , sn -> s , sn -> end )"		1215095	1					
ANR	1215123	Callee	onigenc_get_prev_char_head		1215095	0					
ANR	1215124	Identifier	onigenc_get_prev_char_head		1215095	0					
ANR	1215125	ArgumentList	enc		1215095	1					
ANR	1215126	Argument	enc		1215095	0					
ANR	1215127	Identifier	enc		1215095	0					
ANR	1215128	Argument	sn -> s		1215095	1					
ANR	1215129	PtrMemberAccess	sn -> s		1215095	0					
ANR	1215130	Identifier	sn		1215095	0					
ANR	1215131	Identifier	s		1215095	1					
ANR	1215132	Argument	sn -> end		1215095	2					
ANR	1215133	PtrMemberAccess	sn -> end		1215095	0					
ANR	1215134	Identifier	sn		1215095	0					
ANR	1215135	Identifier	end		1215095	1					
ANR	1215136	IfStatement	if ( p && p > sn -> s )		1215095	1					
ANR	1215137	Condition	p && p > sn -> s	1550:8:33190:33203	1215095	0	True				
ANR	1215138	AndExpression	p && p > sn -> s		1215095	0		&&			
ANR	1215139	Identifier	p		1215095	0					
ANR	1215140	RelationalExpression	p > sn -> s		1215095	1		>			
ANR	1215141	Identifier	p		1215095	0					
ANR	1215142	PtrMemberAccess	sn -> s		1215095	1					
ANR	1215143	Identifier	sn		1215095	0					
ANR	1215144	Identifier	s		1215095	1					
ANR	1215145	CompoundStatement		7:24:149:149	1215095	1					
ANR	1215146	ExpressionStatement	"n = node_new_str ( p , sn -> end )"	1551:6:33237:33265	1215095	0	True				
ANR	1215147	AssignmentExpression	"n = node_new_str ( p , sn -> end )"		1215095	0		=			
ANR	1215148	Identifier	n		1215095	0					
ANR	1215149	CallExpression	"node_new_str ( p , sn -> end )"		1215095	1					
ANR	1215150	Callee	node_new_str		1215095	0					
ANR	1215151	Identifier	node_new_str		1215095	0					
ANR	1215152	ArgumentList	p		1215095	1					
ANR	1215153	Argument	p		1215095	0					
ANR	1215154	Identifier	p		1215095	0					
ANR	1215155	Argument	sn -> end		1215095	1					
ANR	1215156	PtrMemberAccess	sn -> end		1215095	0					
ANR	1215157	Identifier	sn		1215095	0					
ANR	1215158	Identifier	end		1215095	1					
ANR	1215159	IfStatement	if ( ( sn -> flag & NSTR_RAW ) != 0 )		1215095	1					
ANR	1215160	Condition	( sn -> flag & NSTR_RAW ) != 0	1552:10:33277:33302	1215095	0	True				
ANR	1215161	EqualityExpression	( sn -> flag & NSTR_RAW ) != 0		1215095	0		!=			
ANR	1215162	BitAndExpression	sn -> flag & NSTR_RAW		1215095	0		&			
ANR	1215163	PtrMemberAccess	sn -> flag		1215095	0					
ANR	1215164	Identifier	sn		1215095	0					
ANR	1215165	Identifier	flag		1215095	1					
ANR	1215166	Identifier	NSTR_RAW		1215095	1					
ANR	1215167	PrimaryExpression	0		1215095	1					
ANR	1215168	ExpressionStatement	NSTRING_SET_RAW ( n )	1553:1:33306:33324	1215095	1	True				
ANR	1215169	CallExpression	NSTRING_SET_RAW ( n )		1215095	0					
ANR	1215170	Callee	NSTRING_SET_RAW		1215095	0					
ANR	1215171	Identifier	NSTRING_SET_RAW		1215095	0					
ANR	1215172	ArgumentList	n		1215095	1					
ANR	1215173	Argument	n		1215095	0					
ANR	1215174	Identifier	n		1215095	0					
ANR	1215175	ExpressionStatement	sn -> end = ( UChar * ) p	1554:6:33332:33352	1215095	2	True				
ANR	1215176	AssignmentExpression	sn -> end = ( UChar * ) p		1215095	0		=			
ANR	1215177	PtrMemberAccess	sn -> end		1215095	0					
ANR	1215178	Identifier	sn		1215095	0					
ANR	1215179	Identifier	end		1215095	1					
ANR	1215180	CastExpression	( UChar * ) p		1215095	1					
ANR	1215181	CastTarget	UChar *		1215095	0					
ANR	1215182	Identifier	p		1215095	1					
ANR	1215183	ReturnStatement	return n ;	1557:2:33366:33374	1215095	3	True				
ANR	1215184	Identifier	n		1215095	0					
ANR	1215185	ReturnType	static Node *		1215095	1					
ANR	1215186	Identifier	str_node_split_last_char		1215095	2					
ANR	1215187	ParameterList	"StrNode * sn , OnigEncoding enc"		1215095	3					
ANR	1215188	Parameter	StrNode * sn	1543:25:33025:33035	1215095	0	True				
ANR	1215189	ParameterType	StrNode *		1215095	0					
ANR	1215190	Identifier	sn		1215095	1					
ANR	1215191	Parameter	OnigEncoding enc	1543:38:33038:33053	1215095	1	True				
ANR	1215192	ParameterType	OnigEncoding		1215095	0					
ANR	1215193	Identifier	enc		1215095	1					
ANR	1215194	CFGEntryNode	ENTRY		1215095		True				
ANR	1215195	CFGExitNode	EXIT		1215095		True				
ANR	1215196	Symbol	p		1215095						
ANR	1215197	Symbol	* sn		1215095						
ANR	1215198	Symbol	sn -> s		1215095						
ANR	1215199	Symbol	sn -> flag		1215095						
ANR	1215200	Symbol	onigenc_get_prev_char_head		1215095						
ANR	1215201	Symbol	sn		1215095						
ANR	1215202	Symbol	enc		1215095						
ANR	1215203	Symbol	sn -> end		1215095						
ANR	1215204	Symbol	node_new_str		1215095						
ANR	1215205	Symbol	NSTR_RAW		1215095						
ANR	1215206	Symbol	NULL_NODE		1215095						
ANR	1215207	Symbol	n		1215095						
ANR	1215208	Function	str_node_can_be_split	1560:0:33379:33549							
ANR	1215209	FunctionDef	"str_node_can_be_split (StrNode * sn , OnigEncoding enc)"		1215208	0					
ANR	1215210	CompoundStatement		1562:0:33443:33549	1215208	0					
ANR	1215211	IfStatement	if ( sn -> end > sn -> s )		1215208	0					
ANR	1215212	Condition	sn -> end > sn -> s	1563:6:33451:33465	1215208	0	True				
ANR	1215213	RelationalExpression	sn -> end > sn -> s		1215208	0		>			
ANR	1215214	PtrMemberAccess	sn -> end		1215208	0					
ANR	1215215	Identifier	sn		1215208	0					
ANR	1215216	Identifier	end		1215208	1					
ANR	1215217	PtrMemberAccess	sn -> s		1215208	1					
ANR	1215218	Identifier	sn		1215208	0					
ANR	1215219	Identifier	s		1215208	1					
ANR	1215220	CompoundStatement		2:23:24:24	1215208	1					
ANR	1215221	ReturnStatement	"return ( ( enclen ( enc , sn -> s ) < sn -> end - sn -> s ) ? 1 : 0 ) ;"	1564:4:33474:33531	1215208	0	True				
ANR	1215222	ConditionalExpression	"( enclen ( enc , sn -> s ) < sn -> end - sn -> s ) ? 1 : 0"		1215208	0					
ANR	1215223	Condition	"enclen ( enc , sn -> s ) < sn -> end - sn -> s"		1215208	0					
ANR	1215224	RelationalExpression	"enclen ( enc , sn -> s ) < sn -> end - sn -> s"		1215208	0		<			
ANR	1215225	CallExpression	"enclen ( enc , sn -> s )"		1215208	0					
ANR	1215226	Callee	enclen		1215208	0					
ANR	1215227	Identifier	enclen		1215208	0					
ANR	1215228	ArgumentList	enc		1215208	1					
ANR	1215229	Argument	enc		1215208	0					
ANR	1215230	Identifier	enc		1215208	0					
ANR	1215231	Argument	sn -> s		1215208	1					
ANR	1215232	PtrMemberAccess	sn -> s		1215208	0					
ANR	1215233	Identifier	sn		1215208	0					
ANR	1215234	Identifier	s		1215208	1					
ANR	1215235	AdditiveExpression	sn -> end - sn -> s		1215208	1		-			
ANR	1215236	PtrMemberAccess	sn -> end		1215208	0					
ANR	1215237	Identifier	sn		1215208	0					
ANR	1215238	Identifier	end		1215208	1					
ANR	1215239	PtrMemberAccess	sn -> s		1215208	1					
ANR	1215240	Identifier	sn		1215208	0					
ANR	1215241	Identifier	s		1215208	1					
ANR	1215242	PrimaryExpression	1		1215208	1					
ANR	1215243	PrimaryExpression	0		1215208	2					
ANR	1215244	ReturnStatement	return 0 ;	1566:2:33539:33547	1215208	1	True				
ANR	1215245	PrimaryExpression	0		1215208	0					
ANR	1215246	ReturnType	static int		1215208	1					
ANR	1215247	Identifier	str_node_can_be_split		1215208	2					
ANR	1215248	ParameterList	"StrNode * sn , OnigEncoding enc"		1215208	3					
ANR	1215249	Parameter	StrNode * sn	1561:22:33412:33422	1215208	0	True				
ANR	1215250	ParameterType	StrNode *		1215208	0					
ANR	1215251	Identifier	sn		1215208	1					
ANR	1215252	Parameter	OnigEncoding enc	1561:35:33425:33440	1215208	1	True				
ANR	1215253	ParameterType	OnigEncoding		1215208	0					
ANR	1215254	Identifier	enc		1215208	1					
ANR	1215255	CFGEntryNode	ENTRY		1215208		True				
ANR	1215256	CFGExitNode	EXIT		1215208		True				
ANR	1215257	Symbol	* sn		1215208						
ANR	1215258	Symbol	sn -> s		1215208						
ANR	1215259	Symbol	sn		1215208						
ANR	1215260	Symbol	enc		1215208						
ANR	1215261	Symbol	sn -> end		1215208						
ANR	1215262	Symbol	enclen		1215208						
ANR	1215263	Function	node_str_head_pad	1570:0:33586:33877							
ANR	1215264	FunctionDef	"node_str_head_pad (StrNode * sn , int num , UChar val)"		1215263	0					
ANR	1215265	CompoundStatement		1572:0:33648:33877	1215263	0					
ANR	1215266	IdentifierDeclStatement	UChar buf [ NODE_STR_BUF_SIZE ] ;	1573:2:33652:33680	1215263	0	True				
ANR	1215267	IdentifierDecl	buf [ NODE_STR_BUF_SIZE ]		1215263	0					
ANR	1215268	IdentifierDeclType	UChar [ NODE_STR_BUF_SIZE ]		1215263	0					
ANR	1215269	Identifier	buf		1215263	1					
ANR	1215270	Identifier	NODE_STR_BUF_SIZE		1215263	2					
ANR	1215271	IdentifierDeclStatement	"int i , len ;"	1574:2:33684:33694	1215263	1	True				
ANR	1215272	IdentifierDecl	i		1215263	0					
ANR	1215273	IdentifierDeclType	int		1215263	0					
ANR	1215274	Identifier	i		1215263	1					
ANR	1215275	IdentifierDecl	len		1215263	1					
ANR	1215276	IdentifierDeclType	int		1215263	0					
ANR	1215277	Identifier	len		1215263	1					
ANR	1215278	ExpressionStatement	len = sn -> end - sn -> s	1576:2:33699:33720	1215263	2	True				
ANR	1215279	AssignmentExpression	len = sn -> end - sn -> s		1215263	0		=			
ANR	1215280	Identifier	len		1215263	0					
ANR	1215281	AdditiveExpression	sn -> end - sn -> s		1215263	1		-			
ANR	1215282	PtrMemberAccess	sn -> end		1215263	0					
ANR	1215283	Identifier	sn		1215263	0					
ANR	1215284	Identifier	end		1215263	1					
ANR	1215285	PtrMemberAccess	sn -> s		1215263	1					
ANR	1215286	Identifier	sn		1215263	0					
ANR	1215287	Identifier	s		1215263	1					
ANR	1215288	ExpressionStatement	"onig_strcpy ( buf , sn -> s , sn -> end )"	1577:2:33724:33756	1215263	3	True				
ANR	1215289	CallExpression	"onig_strcpy ( buf , sn -> s , sn -> end )"		1215263	0					
ANR	1215290	Callee	onig_strcpy		1215263	0					
ANR	1215291	Identifier	onig_strcpy		1215263	0					
ANR	1215292	ArgumentList	buf		1215263	1					
ANR	1215293	Argument	buf		1215263	0					
ANR	1215294	Identifier	buf		1215263	0					
ANR	1215295	Argument	sn -> s		1215263	1					
ANR	1215296	PtrMemberAccess	sn -> s		1215263	0					
ANR	1215297	Identifier	sn		1215263	0					
ANR	1215298	Identifier	s		1215263	1					
ANR	1215299	Argument	sn -> end		1215263	2					
ANR	1215300	PtrMemberAccess	sn -> end		1215263	0					
ANR	1215301	Identifier	sn		1215263	0					
ANR	1215302	Identifier	end		1215263	1					
ANR	1215303	ExpressionStatement	"onig_strcpy ( & ( sn -> s [ num ] ) , buf , buf + len )"	1578:2:33760:33802	1215263	4	True				
ANR	1215304	CallExpression	"onig_strcpy ( & ( sn -> s [ num ] ) , buf , buf + len )"		1215263	0					
ANR	1215305	Callee	onig_strcpy		1215263	0					
ANR	1215306	Identifier	onig_strcpy		1215263	0					
ANR	1215307	ArgumentList	& ( sn -> s [ num ] )		1215263	1					
ANR	1215308	Argument	& ( sn -> s [ num ] )		1215263	0					
ANR	1215309	UnaryOperationExpression	& ( sn -> s [ num ] )		1215263	0					
ANR	1215310	UnaryOperator	&		1215263	0					
ANR	1215311	ArrayIndexing	sn -> s [ num ]		1215263	1					
ANR	1215312	PtrMemberAccess	sn -> s		1215263	0					
ANR	1215313	Identifier	sn		1215263	0					
ANR	1215314	Identifier	s		1215263	1					
ANR	1215315	Identifier	num		1215263	1					
ANR	1215316	Argument	buf		1215263	1					
ANR	1215317	Identifier	buf		1215263	0					
ANR	1215318	Argument	buf + len		1215263	2					
ANR	1215319	AdditiveExpression	buf + len		1215263	0		+			
ANR	1215320	Identifier	buf		1215263	0					
ANR	1215321	Identifier	len		1215263	1					
ANR	1215322	ExpressionStatement	sn -> end += num	1579:2:33806:33820	1215263	5	True				
ANR	1215323	AssignmentExpression	sn -> end += num		1215263	0		+=			
ANR	1215324	PtrMemberAccess	sn -> end		1215263	0					
ANR	1215325	Identifier	sn		1215263	0					
ANR	1215326	Identifier	end		1215263	1					
ANR	1215327	Identifier	num		1215263	1					
ANR	1215328	ForStatement	for ( i = 0 ; i < num ; i ++ )		1215263	6					
ANR	1215329	ForInit	i = 0 ;	1581:7:33830:33835	1215263	0	True				
ANR	1215330	AssignmentExpression	i = 0		1215263	0		=			
ANR	1215331	Identifier	i		1215263	0					
ANR	1215332	PrimaryExpression	0		1215263	1					
ANR	1215333	Condition	i < num	1581:14:33837:33843	1215263	1	True				
ANR	1215334	RelationalExpression	i < num		1215263	0		<			
ANR	1215335	Identifier	i		1215263	0					
ANR	1215336	Identifier	num		1215263	1					
ANR	1215337	PostIncDecOperationExpression	i ++	1581:23:33846:33848	1215263	2	True				
ANR	1215338	Identifier	i		1215263	0					
ANR	1215339	IncDec	++		1215263	1					
ANR	1215340	CompoundStatement		10:28:202:202	1215263	3					
ANR	1215341	ExpressionStatement	sn -> s [ i ] = val	1582:4:33857:33871	1215263	0	True				
ANR	1215342	AssignmentExpression	sn -> s [ i ] = val		1215263	0		=			
ANR	1215343	ArrayIndexing	sn -> s [ i ]		1215263	0					
ANR	1215344	PtrMemberAccess	sn -> s		1215263	0					
ANR	1215345	Identifier	sn		1215263	0					
ANR	1215346	Identifier	s		1215263	1					
ANR	1215347	Identifier	i		1215263	1					
ANR	1215348	Identifier	val		1215263	1					
ANR	1215349	ReturnType	static int		1215263	1					
ANR	1215350	Identifier	node_str_head_pad		1215263	2					
ANR	1215351	ParameterList	"StrNode * sn , int num , UChar val"		1215263	3					
ANR	1215352	Parameter	StrNode * sn	1571:18:33615:33625	1215263	0	True				
ANR	1215353	ParameterType	StrNode *		1215263	0					
ANR	1215354	Identifier	sn		1215263	1					
ANR	1215355	Parameter	int num	1571:31:33628:33634	1215263	1	True				
ANR	1215356	ParameterType	int		1215263	0					
ANR	1215357	Identifier	num		1215263	1					
ANR	1215358	Parameter	UChar val	1571:40:33637:33645	1215263	2	True				
ANR	1215359	ParameterType	UChar		1215263	0					
ANR	1215360	Identifier	val		1215263	1					
ANR	1215361	CFGEntryNode	ENTRY		1215263		True				
ANR	1215362	CFGExitNode	EXIT		1215263		True				
ANR	1215363	Symbol	val		1215263						
ANR	1215364	Symbol	buf		1215263						
ANR	1215365	Symbol	* sn		1215263						
ANR	1215366	Symbol	sn -> s		1215263						
ANR	1215367	Symbol	* i		1215263						
ANR	1215368	Symbol	len		1215263						
ANR	1215369	Symbol	* * sn		1215263						
ANR	1215370	Symbol	num		1215263						
ANR	1215371	Symbol	i		1215263						
ANR	1215372	Symbol	* sn -> s		1215263						
ANR	1215373	Symbol	sn		1215263						
ANR	1215374	Symbol	sn -> end		1215263						
ANR	1215375	Function	onig_scan_unsigned_number	1587:0:33887:34365							
ANR	1215376	FunctionDef	"onig_scan_unsigned_number (UChar * * src , const UChar * end , OnigEncoding enc)"		1215375	0					
ANR	1215377	CompoundStatement		1589:0:33973:34365	1215375	0					
ANR	1215378	IdentifierDeclStatement	"unsigned int num , val ;"	1590:2:33977:33998	1215375	0	True				
ANR	1215379	IdentifierDecl	num		1215375	0					
ANR	1215380	IdentifierDeclType	unsigned int		1215375	0					
ANR	1215381	Identifier	num		1215375	1					
ANR	1215382	IdentifierDecl	val		1215375	1					
ANR	1215383	IdentifierDeclType	unsigned int		1215375	0					
ANR	1215384	Identifier	val		1215375	1					
ANR	1215385	IdentifierDeclStatement	OnigCodePoint c ;	1591:2:34002:34017	1215375	1	True				
ANR	1215386	IdentifierDecl	c		1215375	0					
ANR	1215387	IdentifierDeclType	OnigCodePoint		1215375	0					
ANR	1215388	Identifier	c		1215375	1					
ANR	1215389	IdentifierDeclStatement	UChar * p = * src ;	1592:2:34021:34036	1215375	2	True				
ANR	1215390	IdentifierDecl	* p = * src		1215375	0					
ANR	1215391	IdentifierDeclType	UChar *		1215375	0					
ANR	1215392	Identifier	p		1215375	1					
ANR	1215393	AssignmentExpression	* p = * src		1215375	2		=			
ANR	1215394	Identifier	p		1215375	0					
ANR	1215395	UnaryOperationExpression	* src		1215375	1					
ANR	1215396	UnaryOperator	*		1215375	0					
ANR	1215397	Identifier	src		1215375	1					
ANR	1215398	ExpressionStatement	PFETCH_READY	1593:2:34040:34052	1215375	3	True				
ANR	1215399	Identifier	PFETCH_READY		1215375	0					
ANR	1215400	ExpressionStatement	num = 0	1595:2:34057:34064	1215375	4	True				
ANR	1215401	AssignmentExpression	num = 0		1215375	0		=			
ANR	1215402	Identifier	num		1215375	0					
ANR	1215403	PrimaryExpression	0		1215375	1					
ANR	1215404	WhileStatement	while ( ! PEND )		1215375	5					
ANR	1215405	Condition	! PEND	1596:9:34075:34079	1215375	0	True				
ANR	1215406	UnaryOperationExpression	! PEND		1215375	0					
ANR	1215407	UnaryOperator	!		1215375	0					
ANR	1215408	Identifier	PEND		1215375	1					
ANR	1215409	CompoundStatement		8:16:108:108	1215375	1					
ANR	1215410	ExpressionStatement	PFETCH ( c )	1597:4:34088:34097	1215375	0	True				
ANR	1215411	CallExpression	PFETCH ( c )		1215375	0					
ANR	1215412	Callee	PFETCH		1215375	0					
ANR	1215413	Identifier	PFETCH		1215375	0					
ANR	1215414	ArgumentList	c		1215375	1					
ANR	1215415	Argument	c		1215375	0					
ANR	1215416	Identifier	c		1215375	0					
ANR	1215417	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		1215375	1					
ANR	1215418	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c )"	1598:8:34107:34135	1215375	0	True				
ANR	1215419	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		1215375	0					
ANR	1215420	Callee	ONIGENC_IS_CODE_DIGIT		1215375	0					
ANR	1215421	Identifier	ONIGENC_IS_CODE_DIGIT		1215375	0					
ANR	1215422	ArgumentList	enc		1215375	1					
ANR	1215423	Argument	enc		1215375	0					
ANR	1215424	Identifier	enc		1215375	0					
ANR	1215425	Argument	c		1215375	1					
ANR	1215426	Identifier	c		1215375	0					
ANR	1215427	CompoundStatement		10:39:164:164	1215375	1					
ANR	1215428	ExpressionStatement	val = ( unsigned int ) DIGITVAL ( c )	1599:6:34146:34178	1215375	0	True				
ANR	1215429	AssignmentExpression	val = ( unsigned int ) DIGITVAL ( c )		1215375	0		=			
ANR	1215430	Identifier	val		1215375	0					
ANR	1215431	CastExpression	( unsigned int ) DIGITVAL ( c )		1215375	1					
ANR	1215432	CastTarget	unsigned int		1215375	0					
ANR	1215433	CallExpression	DIGITVAL ( c )		1215375	1					
ANR	1215434	Callee	DIGITVAL		1215375	0					
ANR	1215435	Identifier	DIGITVAL		1215375	0					
ANR	1215436	ArgumentList	c		1215375	1					
ANR	1215437	Argument	c		1215375	0					
ANR	1215438	Identifier	c		1215375	0					
ANR	1215439	IfStatement	if ( ( INT_MAX_LIMIT - val ) / 10UL < num )		1215375	1					
ANR	1215440	Condition	( INT_MAX_LIMIT - val ) / 10UL < num	1600:10:34190:34223	1215375	0	True				
ANR	1215441	RelationalExpression	( INT_MAX_LIMIT - val ) / 10UL < num		1215375	0		<			
ANR	1215442	MultiplicativeExpression	( INT_MAX_LIMIT - val ) / 10UL		1215375	0		/			
ANR	1215443	AdditiveExpression	INT_MAX_LIMIT - val		1215375	0		-			
ANR	1215444	Identifier	INT_MAX_LIMIT		1215375	0					
ANR	1215445	Identifier	val		1215375	1					
ANR	1215446	PrimaryExpression	10UL		1215375	1					
ANR	1215447	Identifier	num		1215375	1					
ANR	1215448	ReturnStatement	return - 1 ;	1601:1:34227:34236	1215375	1	True				
ANR	1215449	UnaryOperationExpression	- 1		1215375	0					
ANR	1215450	UnaryOperator	-		1215375	0					
ANR	1215451	PrimaryExpression	1		1215375	1					
ANR	1215452	ExpressionStatement	num = num * 10 + val	1603:6:34261:34281	1215375	2	True				
ANR	1215453	AssignmentExpression	num = num * 10 + val		1215375	0		=			
ANR	1215454	Identifier	num		1215375	0					
ANR	1215455	AdditiveExpression	num * 10 + val		1215375	1		+			
ANR	1215456	MultiplicativeExpression	num * 10		1215375	0		*			
ANR	1215457	Identifier	num		1215375	0					
ANR	1215458	PrimaryExpression	10		1215375	1					
ANR	1215459	Identifier	val		1215375	1					
ANR	1215460	ElseStatement	else		1215375	0					
ANR	1215461	CompoundStatement		17:9:324:324	1215375	0					
ANR	1215462	ExpressionStatement	PUNFETCH	1606:6:34306:34314	1215375	0	True				
ANR	1215463	Identifier	PUNFETCH		1215375	0					
ANR	1215464	BreakStatement	break ;	1607:6:34322:34327	1215375	1	True				
ANR	1215465	ExpressionStatement	* src = p	1610:2:34341:34349	1215375	6	True				
ANR	1215466	AssignmentExpression	* src = p		1215375	0		=			
ANR	1215467	UnaryOperationExpression	* src		1215375	0					
ANR	1215468	UnaryOperator	*		1215375	0					
ANR	1215469	Identifier	src		1215375	1					
ANR	1215470	Identifier	p		1215375	1					
ANR	1215471	ReturnStatement	return num ;	1611:2:34353:34363	1215375	7	True				
ANR	1215472	Identifier	num		1215375	0					
ANR	1215473	ReturnType	extern int		1215375	1					
ANR	1215474	Identifier	onig_scan_unsigned_number		1215375	2					
ANR	1215475	ParameterList	"UChar * * src , const UChar * end , OnigEncoding enc"		1215375	3					
ANR	1215476	Parameter	UChar * * src	1588:26:33924:33934	1215375	0	True				
ANR	1215477	ParameterType	UChar * *		1215375	0					
ANR	1215478	Identifier	src		1215375	1					
ANR	1215479	Parameter	const UChar * end	1588:39:33937:33952	1215375	1	True				
ANR	1215480	ParameterType	const UChar *		1215375	0					
ANR	1215481	Identifier	end		1215375	1					
ANR	1215482	Parameter	OnigEncoding enc	1588:57:33955:33970	1215375	2	True				
ANR	1215483	ParameterType	OnigEncoding		1215375	0					
ANR	1215484	Identifier	enc		1215375	1					
ANR	1215485	CFGEntryNode	ENTRY		1215375		True				
ANR	1215486	CFGExitNode	EXIT		1215375		True				
ANR	1215487	Symbol	val		1215375						
ANR	1215488	Symbol	p		1215375						
ANR	1215489	Symbol	c		1215375						
ANR	1215490	Symbol	src		1215375						
ANR	1215491	Symbol	num		1215375						
ANR	1215492	Symbol	ONIGENC_IS_CODE_DIGIT		1215375						
ANR	1215493	Symbol	end		1215375						
ANR	1215494	Symbol	enc		1215375						
ANR	1215495	Symbol	INT_MAX_LIMIT		1215375						
ANR	1215496	Symbol	* src		1215375						
ANR	1215497	Symbol	PEND		1215375						
ANR	1215498	Symbol	DIGITVAL		1215375						
ANR	1215499	Function	scan_unsigned_hexadecimal_number	1614:0:34368:34902							
ANR	1215500	FunctionDef	"scan_unsigned_hexadecimal_number (UChar * * src , UChar * end , int maxlen , OnigEncoding enc)"		1215499	0					
ANR	1215501	CompoundStatement		1617:0:34472:34902	1215499	0					
ANR	1215502	IdentifierDeclStatement	OnigCodePoint c ;	1618:2:34476:34491	1215499	0	True				
ANR	1215503	IdentifierDecl	c		1215499	0					
ANR	1215504	IdentifierDeclType	OnigCodePoint		1215499	0					
ANR	1215505	Identifier	c		1215499	1					
ANR	1215506	IdentifierDeclStatement	"unsigned int num , val ;"	1619:2:34495:34516	1215499	1	True				
ANR	1215507	IdentifierDecl	num		1215499	0					
ANR	1215508	IdentifierDeclType	unsigned int		1215499	0					
ANR	1215509	Identifier	num		1215499	1					
ANR	1215510	IdentifierDecl	val		1215499	1					
ANR	1215511	IdentifierDeclType	unsigned int		1215499	0					
ANR	1215512	Identifier	val		1215499	1					
ANR	1215513	IdentifierDeclStatement	UChar * p = * src ;	1620:2:34520:34535	1215499	2	True				
ANR	1215514	IdentifierDecl	* p = * src		1215499	0					
ANR	1215515	IdentifierDeclType	UChar *		1215499	0					
ANR	1215516	Identifier	p		1215499	1					
ANR	1215517	AssignmentExpression	* p = * src		1215499	2		=			
ANR	1215518	Identifier	p		1215499	0					
ANR	1215519	UnaryOperationExpression	* src		1215499	1					
ANR	1215520	UnaryOperator	*		1215499	0					
ANR	1215521	Identifier	src		1215499	1					
ANR	1215522	ExpressionStatement	PFETCH_READY	1621:2:34539:34551	1215499	3	True				
ANR	1215523	Identifier	PFETCH_READY		1215499	0					
ANR	1215524	ExpressionStatement	num = 0	1623:2:34556:34563	1215499	4	True				
ANR	1215525	AssignmentExpression	num = 0		1215499	0		=			
ANR	1215526	Identifier	num		1215499	0					
ANR	1215527	PrimaryExpression	0		1215499	1					
ANR	1215528	WhileStatement	while ( ! PEND && maxlen -- != 0 )		1215499	5					
ANR	1215529	Condition	! PEND && maxlen -- != 0	1624:9:34574:34595	1215499	0	True				
ANR	1215530	AndExpression	! PEND && maxlen -- != 0		1215499	0		&&			
ANR	1215531	UnaryOperationExpression	! PEND		1215499	0					
ANR	1215532	UnaryOperator	!		1215499	0					
ANR	1215533	Identifier	PEND		1215499	1					
ANR	1215534	EqualityExpression	maxlen -- != 0		1215499	1		!=			
ANR	1215535	PostIncDecOperationExpression	maxlen --		1215499	0					
ANR	1215536	Identifier	maxlen		1215499	0					
ANR	1215537	IncDec	--		1215499	1					
ANR	1215538	PrimaryExpression	0		1215499	1					
ANR	1215539	CompoundStatement		8:33:125:125	1215499	1					
ANR	1215540	ExpressionStatement	PFETCH ( c )	1625:4:34604:34613	1215499	0	True				
ANR	1215541	CallExpression	PFETCH ( c )		1215499	0					
ANR	1215542	Callee	PFETCH		1215499	0					
ANR	1215543	Identifier	PFETCH		1215499	0					
ANR	1215544	ArgumentList	c		1215499	1					
ANR	1215545	Argument	c		1215499	0					
ANR	1215546	Identifier	c		1215499	0					
ANR	1215547	IfStatement	"if ( ONIGENC_IS_CODE_XDIGIT ( enc , c ) )"		1215499	1					
ANR	1215548	Condition	"ONIGENC_IS_CODE_XDIGIT ( enc , c )"	1626:8:34623:34652	1215499	0	True				
ANR	1215549	CallExpression	"ONIGENC_IS_CODE_XDIGIT ( enc , c )"		1215499	0					
ANR	1215550	Callee	ONIGENC_IS_CODE_XDIGIT		1215499	0					
ANR	1215551	Identifier	ONIGENC_IS_CODE_XDIGIT		1215499	0					
ANR	1215552	ArgumentList	enc		1215499	1					
ANR	1215553	Argument	enc		1215499	0					
ANR	1215554	Identifier	enc		1215499	0					
ANR	1215555	Argument	c		1215499	1					
ANR	1215556	Identifier	c		1215499	0					
ANR	1215557	CompoundStatement		10:40:182:182	1215499	1					
ANR	1215558	ExpressionStatement	"val = ( unsigned int ) XDIGITVAL ( enc , c )"	1627:6:34663:34700	1215499	0	True				
ANR	1215559	AssignmentExpression	"val = ( unsigned int ) XDIGITVAL ( enc , c )"		1215499	0		=			
ANR	1215560	Identifier	val		1215499	0					
ANR	1215561	CastExpression	"( unsigned int ) XDIGITVAL ( enc , c )"		1215499	1					
ANR	1215562	CastTarget	unsigned int		1215499	0					
ANR	1215563	CallExpression	"XDIGITVAL ( enc , c )"		1215499	1					
ANR	1215564	Callee	XDIGITVAL		1215499	0					
ANR	1215565	Identifier	XDIGITVAL		1215499	0					
ANR	1215566	ArgumentList	enc		1215499	1					
ANR	1215567	Argument	enc		1215499	0					
ANR	1215568	Identifier	enc		1215499	0					
ANR	1215569	Argument	c		1215499	1					
ANR	1215570	Identifier	c		1215499	0					
ANR	1215571	IfStatement	if ( ( INT_MAX_LIMIT - val ) / 16UL < num )		1215499	1					
ANR	1215572	Condition	( INT_MAX_LIMIT - val ) / 16UL < num	1628:10:34712:34745	1215499	0	True				
ANR	1215573	RelationalExpression	( INT_MAX_LIMIT - val ) / 16UL < num		1215499	0		<			
ANR	1215574	MultiplicativeExpression	( INT_MAX_LIMIT - val ) / 16UL		1215499	0		/			
ANR	1215575	AdditiveExpression	INT_MAX_LIMIT - val		1215499	0		-			
ANR	1215576	Identifier	INT_MAX_LIMIT		1215499	0					
ANR	1215577	Identifier	val		1215499	1					
ANR	1215578	PrimaryExpression	16UL		1215499	1					
ANR	1215579	Identifier	num		1215499	1					
ANR	1215580	ReturnStatement	return - 1 ;	1629:1:34749:34758	1215499	1	True				
ANR	1215581	UnaryOperationExpression	- 1		1215499	0					
ANR	1215582	UnaryOperator	-		1215499	0					
ANR	1215583	PrimaryExpression	1		1215499	1					
ANR	1215584	ExpressionStatement	"num = ( num << 4 ) + XDIGITVAL ( enc , c )"	1631:6:34783:34818	1215499	2	True				
ANR	1215585	AssignmentExpression	"num = ( num << 4 ) + XDIGITVAL ( enc , c )"		1215499	0		=			
ANR	1215586	Identifier	num		1215499	0					
ANR	1215587	AdditiveExpression	"( num << 4 ) + XDIGITVAL ( enc , c )"		1215499	1		+			
ANR	1215588	ShiftExpression	num << 4		1215499	0		<<			
ANR	1215589	Identifier	num		1215499	0					
ANR	1215590	PrimaryExpression	4		1215499	1					
ANR	1215591	CallExpression	"XDIGITVAL ( enc , c )"		1215499	1					
ANR	1215592	Callee	XDIGITVAL		1215499	0					
ANR	1215593	Identifier	XDIGITVAL		1215499	0					
ANR	1215594	ArgumentList	enc		1215499	1					
ANR	1215595	Argument	enc		1215499	0					
ANR	1215596	Identifier	enc		1215499	0					
ANR	1215597	Argument	c		1215499	1					
ANR	1215598	Identifier	c		1215499	0					
ANR	1215599	ElseStatement	else		1215499	0					
ANR	1215600	CompoundStatement		17:9:362:362	1215499	0					
ANR	1215601	ExpressionStatement	PUNFETCH	1634:6:34843:34851	1215499	0	True				
ANR	1215602	Identifier	PUNFETCH		1215499	0					
ANR	1215603	BreakStatement	break ;	1635:6:34859:34864	1215499	1	True				
ANR	1215604	ExpressionStatement	* src = p	1638:2:34878:34886	1215499	6	True				
ANR	1215605	AssignmentExpression	* src = p		1215499	0		=			
ANR	1215606	UnaryOperationExpression	* src		1215499	0					
ANR	1215607	UnaryOperator	*		1215499	0					
ANR	1215608	Identifier	src		1215499	1					
ANR	1215609	Identifier	p		1215499	1					
ANR	1215610	ReturnStatement	return num ;	1639:2:34890:34900	1215499	7	True				
ANR	1215611	Identifier	num		1215499	0					
ANR	1215612	ReturnType	static int		1215499	1					
ANR	1215613	Identifier	scan_unsigned_hexadecimal_number		1215499	2					
ANR	1215614	ParameterList	"UChar * * src , UChar * end , int maxlen , OnigEncoding enc"		1215499	3					
ANR	1215615	Parameter	UChar * * src	1615:33:34412:34422	1215499	0	True				
ANR	1215616	ParameterType	UChar * *		1215499	0					
ANR	1215617	Identifier	src		1215499	1					
ANR	1215618	Parameter	UChar * end	1615:46:34425:34434	1215499	1	True				
ANR	1215619	ParameterType	UChar *		1215499	0					
ANR	1215620	Identifier	end		1215499	1					
ANR	1215621	Parameter	int maxlen	1615:58:34437:34446	1215499	2	True				
ANR	1215622	ParameterType	int		1215499	0					
ANR	1215623	Identifier	maxlen		1215499	1					
ANR	1215624	Parameter	OnigEncoding enc	1616:5:34454:34469	1215499	3	True				
ANR	1215625	ParameterType	OnigEncoding		1215499	0					
ANR	1215626	Identifier	enc		1215499	1					
ANR	1215627	CFGEntryNode	ENTRY		1215499		True				
ANR	1215628	CFGExitNode	EXIT		1215499		True				
ANR	1215629	Symbol	val		1215499						
ANR	1215630	Symbol	c		1215499						
ANR	1215631	Symbol	ONIGENC_IS_CODE_XDIGIT		1215499						
ANR	1215632	Symbol	src		1215499						
ANR	1215633	Symbol	num		1215499						
ANR	1215634	Symbol	INT_MAX_LIMIT		1215499						
ANR	1215635	Symbol	* src		1215499						
ANR	1215636	Symbol	PEND		1215499						
ANR	1215637	Symbol	p		1215499						
ANR	1215638	Symbol	end		1215499						
ANR	1215639	Symbol	enc		1215499						
ANR	1215640	Symbol	XDIGITVAL		1215499						
ANR	1215641	Symbol	maxlen		1215499						
ANR	1215642	Function	scan_unsigned_octal_number	1642:0:34905:35411							
ANR	1215643	FunctionDef	"scan_unsigned_octal_number (UChar * * src , UChar * end , int maxlen , OnigEncoding enc)"		1215642	0					
ANR	1215644	CompoundStatement		1645:0:35004:35411	1215642	0					
ANR	1215645	IdentifierDeclStatement	OnigCodePoint c ;	1646:2:35008:35023	1215642	0	True				
ANR	1215646	IdentifierDecl	c		1215642	0					
ANR	1215647	IdentifierDeclType	OnigCodePoint		1215642	0					
ANR	1215648	Identifier	c		1215642	1					
ANR	1215649	IdentifierDeclStatement	"unsigned int num , val ;"	1647:2:35027:35048	1215642	1	True				
ANR	1215650	IdentifierDecl	num		1215642	0					
ANR	1215651	IdentifierDeclType	unsigned int		1215642	0					
ANR	1215652	Identifier	num		1215642	1					
ANR	1215653	IdentifierDecl	val		1215642	1					
ANR	1215654	IdentifierDeclType	unsigned int		1215642	0					
ANR	1215655	Identifier	val		1215642	1					
ANR	1215656	IdentifierDeclStatement	UChar * p = * src ;	1648:2:35052:35067	1215642	2	True				
ANR	1215657	IdentifierDecl	* p = * src		1215642	0					
ANR	1215658	IdentifierDeclType	UChar *		1215642	0					
ANR	1215659	Identifier	p		1215642	1					
ANR	1215660	AssignmentExpression	* p = * src		1215642	2		=			
ANR	1215661	Identifier	p		1215642	0					
ANR	1215662	UnaryOperationExpression	* src		1215642	1					
ANR	1215663	UnaryOperator	*		1215642	0					
ANR	1215664	Identifier	src		1215642	1					
ANR	1215665	ExpressionStatement	PFETCH_READY	1649:2:35071:35083	1215642	3	True				
ANR	1215666	Identifier	PFETCH_READY		1215642	0					
ANR	1215667	ExpressionStatement	num = 0	1651:2:35088:35095	1215642	4	True				
ANR	1215668	AssignmentExpression	num = 0		1215642	0		=			
ANR	1215669	Identifier	num		1215642	0					
ANR	1215670	PrimaryExpression	0		1215642	1					
ANR	1215671	WhileStatement	while ( ! PEND && maxlen -- != 0 )		1215642	5					
ANR	1215672	Condition	! PEND && maxlen -- != 0	1652:9:35106:35127	1215642	0	True				
ANR	1215673	AndExpression	! PEND && maxlen -- != 0		1215642	0		&&			
ANR	1215674	UnaryOperationExpression	! PEND		1215642	0					
ANR	1215675	UnaryOperator	!		1215642	0					
ANR	1215676	Identifier	PEND		1215642	1					
ANR	1215677	EqualityExpression	maxlen -- != 0		1215642	1		!=			
ANR	1215678	PostIncDecOperationExpression	maxlen --		1215642	0					
ANR	1215679	Identifier	maxlen		1215642	0					
ANR	1215680	IncDec	--		1215642	1					
ANR	1215681	PrimaryExpression	0		1215642	1					
ANR	1215682	CompoundStatement		8:33:125:125	1215642	1					
ANR	1215683	ExpressionStatement	PFETCH ( c )	1653:4:35136:35145	1215642	0	True				
ANR	1215684	CallExpression	PFETCH ( c )		1215642	0					
ANR	1215685	Callee	PFETCH		1215642	0					
ANR	1215686	Identifier	PFETCH		1215642	0					
ANR	1215687	ArgumentList	c		1215642	1					
ANR	1215688	Argument	c		1215642	0					
ANR	1215689	Identifier	c		1215642	0					
ANR	1215690	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) && c < '8' )"		1215642	1					
ANR	1215691	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c ) && c < '8'"	1654:8:35155:35194	1215642	0	True				
ANR	1215692	AndExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c ) && c < '8'"		1215642	0		&&			
ANR	1215693	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		1215642	0					
ANR	1215694	Callee	ONIGENC_IS_CODE_DIGIT		1215642	0					
ANR	1215695	Identifier	ONIGENC_IS_CODE_DIGIT		1215642	0					
ANR	1215696	ArgumentList	enc		1215642	1					
ANR	1215697	Argument	enc		1215642	0					
ANR	1215698	Identifier	enc		1215642	0					
ANR	1215699	Argument	c		1215642	1					
ANR	1215700	Identifier	c		1215642	0					
ANR	1215701	RelationalExpression	c < '8'		1215642	1		<			
ANR	1215702	Identifier	c		1215642	0					
ANR	1215703	PrimaryExpression	'8'		1215642	1					
ANR	1215704	CompoundStatement		10:50:192:192	1215642	1					
ANR	1215705	ExpressionStatement	val = ODIGITVAL ( c )	1655:6:35205:35223	1215642	0	True				
ANR	1215706	AssignmentExpression	val = ODIGITVAL ( c )		1215642	0		=			
ANR	1215707	Identifier	val		1215642	0					
ANR	1215708	CallExpression	ODIGITVAL ( c )		1215642	1					
ANR	1215709	Callee	ODIGITVAL		1215642	0					
ANR	1215710	Identifier	ODIGITVAL		1215642	0					
ANR	1215711	ArgumentList	c		1215642	1					
ANR	1215712	Argument	c		1215642	0					
ANR	1215713	Identifier	c		1215642	0					
ANR	1215714	IfStatement	if ( ( INT_MAX_LIMIT - val ) / 8UL < num )		1215642	1					
ANR	1215715	Condition	( INT_MAX_LIMIT - val ) / 8UL < num	1656:10:35235:35267	1215642	0	True				
ANR	1215716	RelationalExpression	( INT_MAX_LIMIT - val ) / 8UL < num		1215642	0		<			
ANR	1215717	MultiplicativeExpression	( INT_MAX_LIMIT - val ) / 8UL		1215642	0		/			
ANR	1215718	AdditiveExpression	INT_MAX_LIMIT - val		1215642	0		-			
ANR	1215719	Identifier	INT_MAX_LIMIT		1215642	0					
ANR	1215720	Identifier	val		1215642	1					
ANR	1215721	PrimaryExpression	8UL		1215642	1					
ANR	1215722	Identifier	num		1215642	1					
ANR	1215723	ReturnStatement	return - 1 ;	1657:1:35271:35280	1215642	1	True				
ANR	1215724	UnaryOperationExpression	- 1		1215642	0					
ANR	1215725	UnaryOperator	-		1215642	0					
ANR	1215726	PrimaryExpression	1		1215642	1					
ANR	1215727	ExpressionStatement	num = ( num << 3 ) + val	1659:6:35305:35327	1215642	2	True				
ANR	1215728	AssignmentExpression	num = ( num << 3 ) + val		1215642	0		=			
ANR	1215729	Identifier	num		1215642	0					
ANR	1215730	AdditiveExpression	( num << 3 ) + val		1215642	1		+			
ANR	1215731	ShiftExpression	num << 3		1215642	0		<<			
ANR	1215732	Identifier	num		1215642	0					
ANR	1215733	PrimaryExpression	3		1215642	1					
ANR	1215734	Identifier	val		1215642	1					
ANR	1215735	ElseStatement	else		1215642	0					
ANR	1215736	CompoundStatement		17:9:339:339	1215642	0					
ANR	1215737	ExpressionStatement	PUNFETCH	1662:6:35352:35360	1215642	0	True				
ANR	1215738	Identifier	PUNFETCH		1215642	0					
ANR	1215739	BreakStatement	break ;	1663:6:35368:35373	1215642	1	True				
ANR	1215740	ExpressionStatement	* src = p	1666:2:35387:35395	1215642	6	True				
ANR	1215741	AssignmentExpression	* src = p		1215642	0		=			
ANR	1215742	UnaryOperationExpression	* src		1215642	0					
ANR	1215743	UnaryOperator	*		1215642	0					
ANR	1215744	Identifier	src		1215642	1					
ANR	1215745	Identifier	p		1215642	1					
ANR	1215746	ReturnStatement	return num ;	1667:2:35399:35409	1215642	7	True				
ANR	1215747	Identifier	num		1215642	0					
ANR	1215748	ReturnType	static int		1215642	1					
ANR	1215749	Identifier	scan_unsigned_octal_number		1215642	2					
ANR	1215750	ParameterList	"UChar * * src , UChar * end , int maxlen , OnigEncoding enc"		1215642	3					
ANR	1215751	Parameter	UChar * * src	1643:27:34943:34953	1215642	0	True				
ANR	1215752	ParameterType	UChar * *		1215642	0					
ANR	1215753	Identifier	src		1215642	1					
ANR	1215754	Parameter	UChar * end	1643:40:34956:34965	1215642	1	True				
ANR	1215755	ParameterType	UChar *		1215642	0					
ANR	1215756	Identifier	end		1215642	1					
ANR	1215757	Parameter	int maxlen	1643:52:34968:34977	1215642	2	True				
ANR	1215758	ParameterType	int		1215642	0					
ANR	1215759	Identifier	maxlen		1215642	1					
ANR	1215760	Parameter	OnigEncoding enc	1644:6:34986:35001	1215642	3	True				
ANR	1215761	ParameterType	OnigEncoding		1215642	0					
ANR	1215762	Identifier	enc		1215642	1					
ANR	1215763	CFGEntryNode	ENTRY		1215642		True				
ANR	1215764	CFGExitNode	EXIT		1215642		True				
ANR	1215765	Symbol	val		1215642						
ANR	1215766	Symbol	c		1215642						
ANR	1215767	Symbol	src		1215642						
ANR	1215768	Symbol	num		1215642						
ANR	1215769	Symbol	ONIGENC_IS_CODE_DIGIT		1215642						
ANR	1215770	Symbol	ODIGITVAL		1215642						
ANR	1215771	Symbol	INT_MAX_LIMIT		1215642						
ANR	1215772	Symbol	* src		1215642						
ANR	1215773	Symbol	PEND		1215642						
ANR	1215774	Symbol	p		1215642						
ANR	1215775	Symbol	end		1215642						
ANR	1215776	Symbol	enc		1215642						
ANR	1215777	Symbol	maxlen		1215642						
ANR	1215778	Function	new_code_range	1678:0:35629:35984							
ANR	1215779	FunctionDef	new_code_range (BBuf * * pbuf)		1215778	0					
ANR	1215780	CompoundStatement		1680:0:35668:35984	1215778	0					
ANR	1215781	Statement	define	1681:1:35671:35676	1215778	0	True				
ANR	1215782	Statement	INIT_MULTI_BYTE_RANGE_SIZE	1681:8:35678:35703	1215778	1	True				
ANR	1215783	Statement	(	1681:36:35706:35706	1215778	2	True				
ANR	1215784	Statement	SIZE_CODE_POINT	1681:37:35707:35721	1215778	3	True				
ANR	1215785	Statement	*	1681:53:35723:35723	1215778	4	True				
ANR	1215786	Statement	5	1681:55:35725:35725	1215778	5	True				
ANR	1215787	Statement	)	1681:56:35726:35726	1215778	6	True				
ANR	1215788	IdentifierDeclStatement	int r ;	1682:2:35730:35735	1215778	7	True				
ANR	1215789	IdentifierDecl	r		1215778	0					
ANR	1215790	IdentifierDeclType	int		1215778	0					
ANR	1215791	Identifier	r		1215778	1					
ANR	1215792	IdentifierDeclStatement	OnigCodePoint n ;	1683:2:35739:35754	1215778	8	True				
ANR	1215793	IdentifierDecl	n		1215778	0					
ANR	1215794	IdentifierDeclType	OnigCodePoint		1215778	0					
ANR	1215795	Identifier	n		1215778	1					
ANR	1215796	IdentifierDeclStatement	BBuf * bbuf ;	1684:2:35758:35768	1215778	9	True				
ANR	1215797	IdentifierDecl	* bbuf		1215778	0					
ANR	1215798	IdentifierDeclType	BBuf *		1215778	0					
ANR	1215799	Identifier	bbuf		1215778	1					
ANR	1215800	ExpressionStatement	bbuf = * pbuf = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )	1686:2:35773:35817	1215778	10	True				
ANR	1215801	AssignmentExpression	bbuf = * pbuf = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )		1215778	0		=			
ANR	1215802	Identifier	bbuf		1215778	0					
ANR	1215803	AssignmentExpression	* pbuf = ( BBuf * ) xmalloc ( sizeof ( BBuf ) )		1215778	1		=			
ANR	1215804	UnaryOperationExpression	* pbuf		1215778	0					
ANR	1215805	UnaryOperator	*		1215778	0					
ANR	1215806	Identifier	pbuf		1215778	1					
ANR	1215807	CastExpression	( BBuf * ) xmalloc ( sizeof ( BBuf ) )		1215778	1					
ANR	1215808	CastTarget	BBuf *		1215778	0					
ANR	1215809	CallExpression	xmalloc ( sizeof ( BBuf ) )		1215778	1					
ANR	1215810	Callee	xmalloc		1215778	0					
ANR	1215811	Identifier	xmalloc		1215778	0					
ANR	1215812	ArgumentList	sizeof ( BBuf )		1215778	1					
ANR	1215813	Argument	sizeof ( BBuf )		1215778	0					
ANR	1215814	SizeofExpression	sizeof ( BBuf )		1215778	0					
ANR	1215815	Sizeof	sizeof		1215778	0					
ANR	1215816	SizeofOperand	BBuf		1215778	1					
ANR	1215817	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * pbuf )	1687:2:35821:35852	1215778	11	True				
ANR	1215818	CallExpression	CHECK_NULL_RETURN_MEMERR ( * pbuf )		1215778	0					
ANR	1215819	Callee	CHECK_NULL_RETURN_MEMERR		1215778	0					
ANR	1215820	Identifier	CHECK_NULL_RETURN_MEMERR		1215778	0					
ANR	1215821	ArgumentList	* pbuf		1215778	1					
ANR	1215822	Argument	* pbuf		1215778	0					
ANR	1215823	UnaryOperationExpression	* pbuf		1215778	0					
ANR	1215824	UnaryOperator	*		1215778	0					
ANR	1215825	Identifier	pbuf		1215778	1					
ANR	1215826	ExpressionStatement	"r = BBUF_INIT ( * pbuf , INIT_MULTI_BYTE_RANGE_SIZE )"	1688:2:35856:35904	1215778	12	True				
ANR	1215827	AssignmentExpression	"r = BBUF_INIT ( * pbuf , INIT_MULTI_BYTE_RANGE_SIZE )"		1215778	0		=			
ANR	1215828	Identifier	r		1215778	0					
ANR	1215829	CallExpression	"BBUF_INIT ( * pbuf , INIT_MULTI_BYTE_RANGE_SIZE )"		1215778	1					
ANR	1215830	Callee	BBUF_INIT		1215778	0					
ANR	1215831	Identifier	BBUF_INIT		1215778	0					
ANR	1215832	ArgumentList	* pbuf		1215778	1					
ANR	1215833	Argument	* pbuf		1215778	0					
ANR	1215834	UnaryOperationExpression	* pbuf		1215778	0					
ANR	1215835	UnaryOperator	*		1215778	0					
ANR	1215836	Identifier	pbuf		1215778	1					
ANR	1215837	Argument	INIT_MULTI_BYTE_RANGE_SIZE		1215778	1					
ANR	1215838	Identifier	INIT_MULTI_BYTE_RANGE_SIZE		1215778	0					
ANR	1215839	IfStatement	if ( r )		1215778	13					
ANR	1215840	Condition	r	1689:6:35912:35912	1215778	0	True				
ANR	1215841	Identifier	r		1215778	0					
ANR	1215842	ReturnStatement	return r ;	1689:9:35915:35923	1215778	1	True				
ANR	1215843	Identifier	r		1215778	0					
ANR	1215844	ExpressionStatement	n = 0	1691:2:35928:35933	1215778	14	True				
ANR	1215845	AssignmentExpression	n = 0		1215778	0		=			
ANR	1215846	Identifier	n		1215778	0					
ANR	1215847	PrimaryExpression	0		1215778	1					
ANR	1215848	ExpressionStatement	"BBUF_WRITE_CODE_POINT ( bbuf , 0 , n )"	1692:2:35937:35970	1215778	15	True				
ANR	1215849	CallExpression	"BBUF_WRITE_CODE_POINT ( bbuf , 0 , n )"		1215778	0					
ANR	1215850	Callee	BBUF_WRITE_CODE_POINT		1215778	0					
ANR	1215851	Identifier	BBUF_WRITE_CODE_POINT		1215778	0					
ANR	1215852	ArgumentList	bbuf		1215778	1					
ANR	1215853	Argument	bbuf		1215778	0					
ANR	1215854	Identifier	bbuf		1215778	0					
ANR	1215855	Argument	0		1215778	1					
ANR	1215856	PrimaryExpression	0		1215778	0					
ANR	1215857	Argument	n		1215778	2					
ANR	1215858	Identifier	n		1215778	0					
ANR	1215859	ReturnStatement	return 0 ;	1693:2:35974:35982	1215778	16	True				
ANR	1215860	PrimaryExpression	0		1215778	0					
ANR	1215861	ReturnType	static int		1215778	1					
ANR	1215862	Identifier	new_code_range		1215778	2					
ANR	1215863	ParameterList	BBuf * * pbuf		1215778	3					
ANR	1215864	Parameter	BBuf * * pbuf	1679:15:35655:35665	1215778	0	True				
ANR	1215865	ParameterType	BBuf * *		1215778	0					
ANR	1215866	Identifier	pbuf		1215778	1					
ANR	1215867	CFGEntryNode	ENTRY		1215778		True				
ANR	1215868	CFGExitNode	EXIT		1215778		True				
ANR	1215869	Symbol	r		1215778						
ANR	1215870	Symbol	xmalloc		1215778						
ANR	1215871	Symbol	pbuf		1215778						
ANR	1215872	Symbol	INIT_MULTI_BYTE_RANGE_SIZE		1215778						
ANR	1215873	Symbol	BBUF_INIT		1215778						
ANR	1215874	Symbol	* pbuf		1215778						
ANR	1215875	Symbol	n		1215778						
ANR	1215876	Symbol	bbuf		1215778						
ANR	1215877	Function	add_code_range_to_buf	1696:0:35987:37644							
ANR	1215878	FunctionDef	"add_code_range_to_buf (BBuf * * pbuf , OnigCodePoint from , OnigCodePoint to)"		1215877	0					
ANR	1215879	CompoundStatement		1698:0:36071:37644	1215877	0					
ANR	1215880	IdentifierDeclStatement	"int r , inc_n , pos ;"	1699:2:36075:36092	1215877	0	True				
ANR	1215881	IdentifierDecl	r		1215877	0					
ANR	1215882	IdentifierDeclType	int		1215877	0					
ANR	1215883	Identifier	r		1215877	1					
ANR	1215884	IdentifierDecl	inc_n		1215877	1					
ANR	1215885	IdentifierDeclType	int		1215877	0					
ANR	1215886	Identifier	inc_n		1215877	1					
ANR	1215887	IdentifierDecl	pos		1215877	2					
ANR	1215888	IdentifierDeclType	int		1215877	0					
ANR	1215889	Identifier	pos		1215877	1					
ANR	1215890	IdentifierDeclStatement	"int low , high , bound , x ;"	1700:2:36096:36119	1215877	1	True				
ANR	1215891	IdentifierDecl	low		1215877	0					
ANR	1215892	IdentifierDeclType	int		1215877	0					
ANR	1215893	Identifier	low		1215877	1					
ANR	1215894	IdentifierDecl	high		1215877	1					
ANR	1215895	IdentifierDeclType	int		1215877	0					
ANR	1215896	Identifier	high		1215877	1					
ANR	1215897	IdentifierDecl	bound		1215877	2					
ANR	1215898	IdentifierDeclType	int		1215877	0					
ANR	1215899	Identifier	bound		1215877	1					
ANR	1215900	IdentifierDecl	x		1215877	3					
ANR	1215901	IdentifierDeclType	int		1215877	0					
ANR	1215902	Identifier	x		1215877	1					
ANR	1215903	IdentifierDeclStatement	"OnigCodePoint n , * data ;"	1701:2:36123:36145	1215877	2	True				
ANR	1215904	IdentifierDecl	n		1215877	0					
ANR	1215905	IdentifierDeclType	OnigCodePoint		1215877	0					
ANR	1215906	Identifier	n		1215877	1					
ANR	1215907	IdentifierDecl	* data		1215877	1					
ANR	1215908	IdentifierDeclType	OnigCodePoint *		1215877	0					
ANR	1215909	Identifier	data		1215877	1					
ANR	1215910	IdentifierDeclStatement	BBuf * bbuf ;	1702:2:36149:36159	1215877	3	True				
ANR	1215911	IdentifierDecl	* bbuf		1215877	0					
ANR	1215912	IdentifierDeclType	BBuf *		1215877	0					
ANR	1215913	Identifier	bbuf		1215877	1					
ANR	1215914	IfStatement	if ( from > to )		1215877	4					
ANR	1215915	Condition	from > to	1704:6:36168:36176	1215877	0	True				
ANR	1215916	RelationalExpression	from > to		1215877	0		>			
ANR	1215917	Identifier	from		1215877	0					
ANR	1215918	Identifier	to		1215877	1					
ANR	1215919	CompoundStatement		7:17:107:107	1215877	1					
ANR	1215920	ExpressionStatement	n = from	1705:4:36185:36193	1215877	0	True				
ANR	1215921	AssignmentExpression	n = from		1215877	0		=			
ANR	1215922	Identifier	n		1215877	0					
ANR	1215923	Identifier	from		1215877	1					
ANR	1215924	ExpressionStatement	from = to	1705:14:36195:36204	1215877	1	True				
ANR	1215925	AssignmentExpression	from = to		1215877	0		=			
ANR	1215926	Identifier	from		1215877	0					
ANR	1215927	Identifier	to		1215877	1					
ANR	1215928	ExpressionStatement	to = n	1705:25:36206:36212	1215877	2	True				
ANR	1215929	AssignmentExpression	to = n		1215877	0		=			
ANR	1215930	Identifier	to		1215877	0					
ANR	1215931	Identifier	n		1215877	1					
ANR	1215932	IfStatement	if ( IS_NULL ( * pbuf ) )		1215877	5					
ANR	1215933	Condition	IS_NULL ( * pbuf )	1708:6:36225:36238	1215877	0	True				
ANR	1215934	CallExpression	IS_NULL ( * pbuf )		1215877	0					
ANR	1215935	Callee	IS_NULL		1215877	0					
ANR	1215936	Identifier	IS_NULL		1215877	0					
ANR	1215937	ArgumentList	* pbuf		1215877	1					
ANR	1215938	Argument	* pbuf		1215877	0					
ANR	1215939	UnaryOperationExpression	* pbuf		1215877	0					
ANR	1215940	UnaryOperator	*		1215877	0					
ANR	1215941	Identifier	pbuf		1215877	1					
ANR	1215942	CompoundStatement		11:22:169:169	1215877	1					
ANR	1215943	ExpressionStatement	r = new_code_range ( pbuf )	1709:4:36247:36271	1215877	0	True				
ANR	1215944	AssignmentExpression	r = new_code_range ( pbuf )		1215877	0		=			
ANR	1215945	Identifier	r		1215877	0					
ANR	1215946	CallExpression	new_code_range ( pbuf )		1215877	1					
ANR	1215947	Callee	new_code_range		1215877	0					
ANR	1215948	Identifier	new_code_range		1215877	0					
ANR	1215949	ArgumentList	pbuf		1215877	1					
ANR	1215950	Argument	pbuf		1215877	0					
ANR	1215951	Identifier	pbuf		1215877	0					
ANR	1215952	IfStatement	if ( r )		1215877	1					
ANR	1215953	Condition	r	1710:8:36281:36281	1215877	0	True				
ANR	1215954	Identifier	r		1215877	0					
ANR	1215955	ReturnStatement	return r ;	1710:11:36284:36292	1215877	1	True				
ANR	1215956	Identifier	r		1215877	0					
ANR	1215957	ExpressionStatement	bbuf = * pbuf	1711:4:36298:36310	1215877	2	True				
ANR	1215958	AssignmentExpression	bbuf = * pbuf		1215877	0		=			
ANR	1215959	Identifier	bbuf		1215877	0					
ANR	1215960	UnaryOperationExpression	* pbuf		1215877	1					
ANR	1215961	UnaryOperator	*		1215877	0					
ANR	1215962	Identifier	pbuf		1215877	1					
ANR	1215963	ExpressionStatement	n = 0	1712:4:36316:36321	1215877	3	True				
ANR	1215964	AssignmentExpression	n = 0		1215877	0		=			
ANR	1215965	Identifier	n		1215877	0					
ANR	1215966	PrimaryExpression	0		1215877	1					
ANR	1215967	ElseStatement	else		1215877	0					
ANR	1215968	CompoundStatement		17:7:262:262	1215877	0					
ANR	1215969	ExpressionStatement	bbuf = * pbuf	1715:4:36340:36352	1215877	0	True				
ANR	1215970	AssignmentExpression	bbuf = * pbuf		1215877	0		=			
ANR	1215971	Identifier	bbuf		1215877	0					
ANR	1215972	UnaryOperationExpression	* pbuf		1215877	1					
ANR	1215973	UnaryOperator	*		1215877	0					
ANR	1215974	Identifier	pbuf		1215877	1					
ANR	1215975	ExpressionStatement	"GET_CODE_POINT ( n , bbuf -> p )"	1716:4:36358:36384	1215877	1	True				
ANR	1215976	CallExpression	"GET_CODE_POINT ( n , bbuf -> p )"		1215877	0					
ANR	1215977	Callee	GET_CODE_POINT		1215877	0					
ANR	1215978	Identifier	GET_CODE_POINT		1215877	0					
ANR	1215979	ArgumentList	n		1215877	1					
ANR	1215980	Argument	n		1215877	0					
ANR	1215981	Identifier	n		1215877	0					
ANR	1215982	Argument	bbuf -> p		1215877	1					
ANR	1215983	PtrMemberAccess	bbuf -> p		1215877	0					
ANR	1215984	Identifier	bbuf		1215877	0					
ANR	1215985	Identifier	p		1215877	1					
ANR	1215986	ExpressionStatement	data = ( OnigCodePoint * ) ( bbuf -> p )	1718:2:36392:36425	1215877	6	True				
ANR	1215987	AssignmentExpression	data = ( OnigCodePoint * ) ( bbuf -> p )		1215877	0		=			
ANR	1215988	Identifier	data		1215877	0					
ANR	1215989	CastExpression	( OnigCodePoint * ) ( bbuf -> p )		1215877	1					
ANR	1215990	CastTarget	OnigCodePoint *		1215877	0					
ANR	1215991	PtrMemberAccess	bbuf -> p		1215877	1					
ANR	1215992	Identifier	bbuf		1215877	0					
ANR	1215993	Identifier	p		1215877	1					
ANR	1215994	ExpressionStatement	data ++	1719:2:36429:36435	1215877	7	True				
ANR	1215995	PostIncDecOperationExpression	data ++		1215877	0					
ANR	1215996	Identifier	data		1215877	0					
ANR	1215997	IncDec	++		1215877	1					
ANR	1215998	ForStatement	"for ( low = 0 , bound = n ; low < bound ; )"		1215877	8					
ANR	1215999	ForInit	"low = 0 , bound = n ;"	1721:7:36445:36463	1215877	0	True				
ANR	1216000	Expression	"low = 0 , bound = n"		1215877	0					
ANR	1216001	AssignmentExpression	low = 0		1215877	0		=			
ANR	1216002	Identifier	low		1215877	0					
ANR	1216003	PrimaryExpression	0		1215877	1					
ANR	1216004	AssignmentExpression	bound = n		1215877	1		=			
ANR	1216005	Identifier	bound		1215877	0					
ANR	1216006	Identifier	n		1215877	1					
ANR	1216007	Condition	low < bound	1721:27:36465:36475	1215877	1	True				
ANR	1216008	RelationalExpression	low < bound		1215877	0		<			
ANR	1216009	Identifier	low		1215877	0					
ANR	1216010	Identifier	bound		1215877	1					
ANR	1216011	CompoundStatement		24:42:408:408	1215877	2					
ANR	1216012	ExpressionStatement	x = ( low + bound ) >> 1	1722:4:36486:36508	1215877	0	True				
ANR	1216013	AssignmentExpression	x = ( low + bound ) >> 1		1215877	0		=			
ANR	1216014	Identifier	x		1215877	0					
ANR	1216015	ShiftExpression	( low + bound ) >> 1		1215877	1		>>			
ANR	1216016	AdditiveExpression	low + bound		1215877	0		+			
ANR	1216017	Identifier	low		1215877	0					
ANR	1216018	Identifier	bound		1215877	1					
ANR	1216019	PrimaryExpression	1		1215877	1					
ANR	1216020	IfStatement	if ( from > data [ x * 2 + 1 ] )		1215877	1					
ANR	1216021	Condition	from > data [ x * 2 + 1 ]	1723:8:36518:36537	1215877	0	True				
ANR	1216022	RelationalExpression	from > data [ x * 2 + 1 ]		1215877	0		>			
ANR	1216023	Identifier	from		1215877	0					
ANR	1216024	ArrayIndexing	data [ x * 2 + 1 ]		1215877	1					
ANR	1216025	Identifier	data		1215877	0					
ANR	1216026	AdditiveExpression	x * 2 + 1		1215877	1		+			
ANR	1216027	MultiplicativeExpression	x * 2		1215877	0		*			
ANR	1216028	Identifier	x		1215877	0					
ANR	1216029	PrimaryExpression	2		1215877	1					
ANR	1216030	PrimaryExpression	1		1215877	1					
ANR	1216031	ExpressionStatement	low = x + 1	1724:6:36546:36557	1215877	1	True				
ANR	1216032	AssignmentExpression	low = x + 1		1215877	0		=			
ANR	1216033	Identifier	low		1215877	0					
ANR	1216034	AdditiveExpression	x + 1		1215877	1		+			
ANR	1216035	Identifier	x		1215877	0					
ANR	1216036	PrimaryExpression	1		1215877	1					
ANR	1216037	ElseStatement	else		1215877	0					
ANR	1216038	ExpressionStatement	bound = x	1726:6:36574:36583	1215877	0	True				
ANR	1216039	AssignmentExpression	bound = x		1215877	0		=			
ANR	1216040	Identifier	bound		1215877	0					
ANR	1216041	Identifier	x		1215877	1					
ANR	1216042	ForStatement	"for ( high = low , bound = n ; high < bound ; )"		1215877	9					
ANR	1216043	ForInit	"high = low , bound = n ;"	1729:7:36597:36618	1215877	0	True				
ANR	1216044	Expression	"high = low , bound = n"		1215877	0					
ANR	1216045	AssignmentExpression	high = low		1215877	0		=			
ANR	1216046	Identifier	high		1215877	0					
ANR	1216047	Identifier	low		1215877	1					
ANR	1216048	AssignmentExpression	bound = n		1215877	1		=			
ANR	1216049	Identifier	bound		1215877	0					
ANR	1216050	Identifier	n		1215877	1					
ANR	1216051	Condition	high < bound	1729:30:36620:36631	1215877	1	True				
ANR	1216052	RelationalExpression	high < bound		1215877	0		<			
ANR	1216053	Identifier	high		1215877	0					
ANR	1216054	Identifier	bound		1215877	1					
ANR	1216055	CompoundStatement		32:46:564:564	1215877	2					
ANR	1216056	ExpressionStatement	x = ( high + bound ) >> 1	1730:4:36642:36665	1215877	0	True				
ANR	1216057	AssignmentExpression	x = ( high + bound ) >> 1		1215877	0		=			
ANR	1216058	Identifier	x		1215877	0					
ANR	1216059	ShiftExpression	( high + bound ) >> 1		1215877	1		>>			
ANR	1216060	AdditiveExpression	high + bound		1215877	0		+			
ANR	1216061	Identifier	high		1215877	0					
ANR	1216062	Identifier	bound		1215877	1					
ANR	1216063	PrimaryExpression	1		1215877	1					
ANR	1216064	IfStatement	if ( to >= data [ x * 2 ] - 1 )		1215877	1					
ANR	1216065	Condition	to >= data [ x * 2 ] - 1	1731:8:36675:36693	1215877	0	True				
ANR	1216066	RelationalExpression	to >= data [ x * 2 ] - 1		1215877	0		>=			
ANR	1216067	Identifier	to		1215877	0					
ANR	1216068	AdditiveExpression	data [ x * 2 ] - 1		1215877	1		-			
ANR	1216069	ArrayIndexing	data [ x * 2 ]		1215877	0					
ANR	1216070	Identifier	data		1215877	0					
ANR	1216071	MultiplicativeExpression	x * 2		1215877	1		*			
ANR	1216072	Identifier	x		1215877	0					
ANR	1216073	PrimaryExpression	2		1215877	1					
ANR	1216074	PrimaryExpression	1		1215877	1					
ANR	1216075	ExpressionStatement	high = x + 1	1732:6:36702:36714	1215877	1	True				
ANR	1216076	AssignmentExpression	high = x + 1		1215877	0		=			
ANR	1216077	Identifier	high		1215877	0					
ANR	1216078	AdditiveExpression	x + 1		1215877	1		+			
ANR	1216079	Identifier	x		1215877	0					
ANR	1216080	PrimaryExpression	1		1215877	1					
ANR	1216081	ElseStatement	else		1215877	0					
ANR	1216082	ExpressionStatement	bound = x	1734:6:36731:36740	1215877	0	True				
ANR	1216083	AssignmentExpression	bound = x		1215877	0		=			
ANR	1216084	Identifier	bound		1215877	0					
ANR	1216085	Identifier	x		1215877	1					
ANR	1216086	ExpressionStatement	inc_n = low + 1 - high	1737:2:36749:36771	1215877	10	True				
ANR	1216087	AssignmentExpression	inc_n = low + 1 - high		1215877	0		=			
ANR	1216088	Identifier	inc_n		1215877	0					
ANR	1216089	AdditiveExpression	low + 1 - high		1215877	1		+			
ANR	1216090	Identifier	low		1215877	0					
ANR	1216091	AdditiveExpression	1 - high		1215877	1		-			
ANR	1216092	PrimaryExpression	1		1215877	0					
ANR	1216093	Identifier	high		1215877	1					
ANR	1216094	IfStatement	if ( n + inc_n > ONIG_MAX_MULTI_BYTE_RANGES_NUM )		1215877	11					
ANR	1216095	Condition	n + inc_n > ONIG_MAX_MULTI_BYTE_RANGES_NUM	1738:6:36779:36820	1215877	0	True				
ANR	1216096	RelationalExpression	n + inc_n > ONIG_MAX_MULTI_BYTE_RANGES_NUM		1215877	0		>			
ANR	1216097	AdditiveExpression	n + inc_n		1215877	0		+			
ANR	1216098	Identifier	n		1215877	0					
ANR	1216099	Identifier	inc_n		1215877	1					
ANR	1216100	Identifier	ONIG_MAX_MULTI_BYTE_RANGES_NUM		1215877	1					
ANR	1216101	ReturnStatement	return ONIGERR_TOO_MANY_MULTI_BYTE_RANGES ;	1739:4:36827:36868	1215877	1	True				
ANR	1216102	Identifier	ONIGERR_TOO_MANY_MULTI_BYTE_RANGES		1215877	0					
ANR	1216103	IfStatement	if ( inc_n != 1 )		1215877	12					
ANR	1216104	Condition	inc_n != 1	1741:6:36877:36886	1215877	0	True				
ANR	1216105	EqualityExpression	inc_n != 1		1215877	0		!=			
ANR	1216106	Identifier	inc_n		1215877	0					
ANR	1216107	PrimaryExpression	1		1215877	1					
ANR	1216108	CompoundStatement		44:18:817:817	1215877	1					
ANR	1216109	IfStatement	if ( from > data [ low * 2 ] )		1215877	0					
ANR	1216110	Condition	from > data [ low * 2 ]	1742:8:36899:36916	1215877	0	True				
ANR	1216111	RelationalExpression	from > data [ low * 2 ]		1215877	0		>			
ANR	1216112	Identifier	from		1215877	0					
ANR	1216113	ArrayIndexing	data [ low * 2 ]		1215877	1					
ANR	1216114	Identifier	data		1215877	0					
ANR	1216115	MultiplicativeExpression	low * 2		1215877	1		*			
ANR	1216116	Identifier	low		1215877	0					
ANR	1216117	PrimaryExpression	2		1215877	1					
ANR	1216118	ExpressionStatement	from = data [ low * 2 ]	1743:6:36925:36943	1215877	1	True				
ANR	1216119	AssignmentExpression	from = data [ low * 2 ]		1215877	0		=			
ANR	1216120	Identifier	from		1215877	0					
ANR	1216121	ArrayIndexing	data [ low * 2 ]		1215877	1					
ANR	1216122	Identifier	data		1215877	0					
ANR	1216123	MultiplicativeExpression	low * 2		1215877	1		*			
ANR	1216124	Identifier	low		1215877	0					
ANR	1216125	PrimaryExpression	2		1215877	1					
ANR	1216126	IfStatement	if ( to < data [ ( high - 1 ) * 2 + 1 ] )		1215877	1					
ANR	1216127	Condition	to < data [ ( high - 1 ) * 2 + 1 ]	1744:8:36953:36979	1215877	0	True				
ANR	1216128	RelationalExpression	to < data [ ( high - 1 ) * 2 + 1 ]		1215877	0		<			
ANR	1216129	Identifier	to		1215877	0					
ANR	1216130	ArrayIndexing	data [ ( high - 1 ) * 2 + 1 ]		1215877	1					
ANR	1216131	Identifier	data		1215877	0					
ANR	1216132	AdditiveExpression	( high - 1 ) * 2 + 1		1215877	1		+			
ANR	1216133	MultiplicativeExpression	( high - 1 ) * 2		1215877	0		*			
ANR	1216134	AdditiveExpression	high - 1		1215877	0		-			
ANR	1216135	Identifier	high		1215877	0					
ANR	1216136	PrimaryExpression	1		1215877	1					
ANR	1216137	PrimaryExpression	2		1215877	1					
ANR	1216138	PrimaryExpression	1		1215877	1					
ANR	1216139	ExpressionStatement	to = data [ ( high - 1 ) * 2 + 1 ]	1745:6:36988:37015	1215877	1	True				
ANR	1216140	AssignmentExpression	to = data [ ( high - 1 ) * 2 + 1 ]		1215877	0		=			
ANR	1216141	Identifier	to		1215877	0					
ANR	1216142	ArrayIndexing	data [ ( high - 1 ) * 2 + 1 ]		1215877	1					
ANR	1216143	Identifier	data		1215877	0					
ANR	1216144	AdditiveExpression	( high - 1 ) * 2 + 1		1215877	1		+			
ANR	1216145	MultiplicativeExpression	( high - 1 ) * 2		1215877	0		*			
ANR	1216146	AdditiveExpression	high - 1		1215877	0		-			
ANR	1216147	Identifier	high		1215877	0					
ANR	1216148	PrimaryExpression	1		1215877	1					
ANR	1216149	PrimaryExpression	2		1215877	1					
ANR	1216150	PrimaryExpression	1		1215877	1					
ANR	1216151	IfStatement	if ( inc_n != 0 && ( OnigCodePoint ) high < n )		1215877	13					
ANR	1216152	Condition	inc_n != 0 && ( OnigCodePoint ) high < n	1748:6:37028:37065	1215877	0	True				
ANR	1216153	AndExpression	inc_n != 0 && ( OnigCodePoint ) high < n		1215877	0		&&			
ANR	1216154	EqualityExpression	inc_n != 0		1215877	0		!=			
ANR	1216155	Identifier	inc_n		1215877	0					
ANR	1216156	PrimaryExpression	0		1215877	1					
ANR	1216157	RelationalExpression	( OnigCodePoint ) high < n		1215877	1		<			
ANR	1216158	CastExpression	( OnigCodePoint ) high		1215877	0					
ANR	1216159	CastTarget	OnigCodePoint		1215877	0					
ANR	1216160	Identifier	high		1215877	1					
ANR	1216161	Identifier	n		1215877	1					
ANR	1216162	CompoundStatement		54:4:1113:1156	1215877	1					
ANR	1216163	IdentifierDeclStatement	int from_pos = SIZE_CODE_POINT * ( 1 + high * 2 ) ;	1749:4:37074:37121	1215877	0	True				
ANR	1216164	IdentifierDecl	from_pos = SIZE_CODE_POINT * ( 1 + high * 2 )		1215877	0					
ANR	1216165	IdentifierDeclType	int		1215877	0					
ANR	1216166	Identifier	from_pos		1215877	1					
ANR	1216167	AssignmentExpression	from_pos = SIZE_CODE_POINT * ( 1 + high * 2 )		1215877	2		=			
ANR	1216168	Identifier	from_pos		1215877	0					
ANR	1216169	MultiplicativeExpression	SIZE_CODE_POINT * ( 1 + high * 2 )		1215877	1		*			
ANR	1216170	Identifier	SIZE_CODE_POINT		1215877	0					
ANR	1216171	AdditiveExpression	1 + high * 2		1215877	1		+			
ANR	1216172	PrimaryExpression	1		1215877	0					
ANR	1216173	MultiplicativeExpression	high * 2		1215877	1		*			
ANR	1216174	Identifier	high		1215877	0					
ANR	1216175	PrimaryExpression	2		1215877	1					
ANR	1216176	IdentifierDeclStatement	int to_pos = SIZE_CODE_POINT * ( 1 + ( low + 1 ) * 2 ) ;	1750:4:37127:37179	1215877	1	True				
ANR	1216177	IdentifierDecl	to_pos = SIZE_CODE_POINT * ( 1 + ( low + 1 ) * 2 )		1215877	0					
ANR	1216178	IdentifierDeclType	int		1215877	0					
ANR	1216179	Identifier	to_pos		1215877	1					
ANR	1216180	AssignmentExpression	to_pos = SIZE_CODE_POINT * ( 1 + ( low + 1 ) * 2 )		1215877	2		=			
ANR	1216181	Identifier	to_pos		1215877	0					
ANR	1216182	MultiplicativeExpression	SIZE_CODE_POINT * ( 1 + ( low + 1 ) * 2 )		1215877	1		*			
ANR	1216183	Identifier	SIZE_CODE_POINT		1215877	0					
ANR	1216184	AdditiveExpression	1 + ( low + 1 ) * 2		1215877	1		+			
ANR	1216185	PrimaryExpression	1		1215877	0					
ANR	1216186	MultiplicativeExpression	( low + 1 ) * 2		1215877	1		*			
ANR	1216187	AdditiveExpression	low + 1		1215877	0		+			
ANR	1216188	Identifier	low		1215877	0					
ANR	1216189	PrimaryExpression	1		1215877	1					
ANR	1216190	PrimaryExpression	2		1215877	1					
ANR	1216191	IdentifierDeclStatement	int size = ( n - high ) * 2 * SIZE_CODE_POINT ;	1751:4:37185:37228	1215877	2	True				
ANR	1216192	IdentifierDecl	size = ( n - high ) * 2 * SIZE_CODE_POINT		1215877	0					
ANR	1216193	IdentifierDeclType	int		1215877	0					
ANR	1216194	Identifier	size		1215877	1					
ANR	1216195	AssignmentExpression	size = ( n - high ) * 2 * SIZE_CODE_POINT		1215877	2		=			
ANR	1216196	Identifier	size		1215877	0					
ANR	1216197	MultiplicativeExpression	( n - high ) * 2 * SIZE_CODE_POINT		1215877	1		*			
ANR	1216198	AdditiveExpression	n - high		1215877	0		-			
ANR	1216199	Identifier	n		1215877	0					
ANR	1216200	Identifier	high		1215877	1					
ANR	1216201	MultiplicativeExpression	2 * SIZE_CODE_POINT		1215877	1		*			
ANR	1216202	PrimaryExpression	2		1215877	0					
ANR	1216203	Identifier	SIZE_CODE_POINT		1215877	1					
ANR	1216204	IfStatement	if ( inc_n > 0 )		1215877	3					
ANR	1216205	Condition	inc_n > 0	1753:8:37239:37247	1215877	0	True				
ANR	1216206	RelationalExpression	inc_n > 0		1215877	0		>			
ANR	1216207	Identifier	inc_n		1215877	0					
ANR	1216208	PrimaryExpression	0		1215877	1					
ANR	1216209	CompoundStatement		56:19:1178:1178	1215877	1					
ANR	1216210	ExpressionStatement	"BBUF_MOVE_RIGHT ( bbuf , from_pos , to_pos , size )"	1754:6:37258:37303	1215877	0	True				
ANR	1216211	CallExpression	"BBUF_MOVE_RIGHT ( bbuf , from_pos , to_pos , size )"		1215877	0					
ANR	1216212	Callee	BBUF_MOVE_RIGHT		1215877	0					
ANR	1216213	Identifier	BBUF_MOVE_RIGHT		1215877	0					
ANR	1216214	ArgumentList	bbuf		1215877	1					
ANR	1216215	Argument	bbuf		1215877	0					
ANR	1216216	Identifier	bbuf		1215877	0					
ANR	1216217	Argument	from_pos		1215877	1					
ANR	1216218	Identifier	from_pos		1215877	0					
ANR	1216219	Argument	to_pos		1215877	2					
ANR	1216220	Identifier	to_pos		1215877	0					
ANR	1216221	Argument	size		1215877	3					
ANR	1216222	Identifier	size		1215877	0					
ANR	1216223	ElseStatement	else		1215877	0					
ANR	1216224	CompoundStatement		59:9:1248:1248	1215877	0					
ANR	1216225	ExpressionStatement	"BBUF_MOVE_LEFT_REDUCE ( bbuf , from_pos , to_pos )"	1757:6:37328:37373	1215877	0	True				
ANR	1216226	CallExpression	"BBUF_MOVE_LEFT_REDUCE ( bbuf , from_pos , to_pos )"		1215877	0					
ANR	1216227	Callee	BBUF_MOVE_LEFT_REDUCE		1215877	0					
ANR	1216228	Identifier	BBUF_MOVE_LEFT_REDUCE		1215877	0					
ANR	1216229	ArgumentList	bbuf		1215877	1					
ANR	1216230	Argument	bbuf		1215877	0					
ANR	1216231	Identifier	bbuf		1215877	0					
ANR	1216232	Argument	from_pos		1215877	1					
ANR	1216233	Identifier	from_pos		1215877	0					
ANR	1216234	Argument	to_pos		1215877	2					
ANR	1216235	Identifier	to_pos		1215877	0					
ANR	1216236	ExpressionStatement	pos = SIZE_CODE_POINT * ( 1 + low * 2 )	1761:2:37388:37425	1215877	14	True				
ANR	1216237	AssignmentExpression	pos = SIZE_CODE_POINT * ( 1 + low * 2 )		1215877	0		=			
ANR	1216238	Identifier	pos		1215877	0					
ANR	1216239	MultiplicativeExpression	SIZE_CODE_POINT * ( 1 + low * 2 )		1215877	1		*			
ANR	1216240	Identifier	SIZE_CODE_POINT		1215877	0					
ANR	1216241	AdditiveExpression	1 + low * 2		1215877	1		+			
ANR	1216242	PrimaryExpression	1		1215877	0					
ANR	1216243	MultiplicativeExpression	low * 2		1215877	1		*			
ANR	1216244	Identifier	low		1215877	0					
ANR	1216245	PrimaryExpression	2		1215877	1					
ANR	1216246	ExpressionStatement	"BBUF_ENSURE_SIZE ( bbuf , pos + SIZE_CODE_POINT * 2 )"	1762:2:37429:37478	1215877	15	True				
ANR	1216247	CallExpression	"BBUF_ENSURE_SIZE ( bbuf , pos + SIZE_CODE_POINT * 2 )"		1215877	0					
ANR	1216248	Callee	BBUF_ENSURE_SIZE		1215877	0					
ANR	1216249	Identifier	BBUF_ENSURE_SIZE		1215877	0					
ANR	1216250	ArgumentList	bbuf		1215877	1					
ANR	1216251	Argument	bbuf		1215877	0					
ANR	1216252	Identifier	bbuf		1215877	0					
ANR	1216253	Argument	pos + SIZE_CODE_POINT * 2		1215877	1					
ANR	1216254	AdditiveExpression	pos + SIZE_CODE_POINT * 2		1215877	0		+			
ANR	1216255	Identifier	pos		1215877	0					
ANR	1216256	MultiplicativeExpression	SIZE_CODE_POINT * 2		1215877	1		*			
ANR	1216257	Identifier	SIZE_CODE_POINT		1215877	0					
ANR	1216258	PrimaryExpression	2		1215877	1					
ANR	1216259	ExpressionStatement	"BBUF_WRITE_CODE_POINT ( bbuf , pos , from )"	1763:2:37482:37520	1215877	16	True				
ANR	1216260	CallExpression	"BBUF_WRITE_CODE_POINT ( bbuf , pos , from )"		1215877	0					
ANR	1216261	Callee	BBUF_WRITE_CODE_POINT		1215877	0					
ANR	1216262	Identifier	BBUF_WRITE_CODE_POINT		1215877	0					
ANR	1216263	ArgumentList	bbuf		1215877	1					
ANR	1216264	Argument	bbuf		1215877	0					
ANR	1216265	Identifier	bbuf		1215877	0					
ANR	1216266	Argument	pos		1215877	1					
ANR	1216267	Identifier	pos		1215877	0					
ANR	1216268	Argument	from		1215877	2					
ANR	1216269	Identifier	from		1215877	0					
ANR	1216270	ExpressionStatement	"BBUF_WRITE_CODE_POINT ( bbuf , pos + SIZE_CODE_POINT , to )"	1764:2:37524:37578	1215877	17	True				
ANR	1216271	CallExpression	"BBUF_WRITE_CODE_POINT ( bbuf , pos + SIZE_CODE_POINT , to )"		1215877	0					
ANR	1216272	Callee	BBUF_WRITE_CODE_POINT		1215877	0					
ANR	1216273	Identifier	BBUF_WRITE_CODE_POINT		1215877	0					
ANR	1216274	ArgumentList	bbuf		1215877	1					
ANR	1216275	Argument	bbuf		1215877	0					
ANR	1216276	Identifier	bbuf		1215877	0					
ANR	1216277	Argument	pos + SIZE_CODE_POINT		1215877	1					
ANR	1216278	AdditiveExpression	pos + SIZE_CODE_POINT		1215877	0		+			
ANR	1216279	Identifier	pos		1215877	0					
ANR	1216280	Identifier	SIZE_CODE_POINT		1215877	1					
ANR	1216281	Argument	to		1215877	2					
ANR	1216282	Identifier	to		1215877	0					
ANR	1216283	ExpressionStatement	n += inc_n	1765:2:37582:37592	1215877	18	True				
ANR	1216284	AssignmentExpression	n += inc_n		1215877	0		+=			
ANR	1216285	Identifier	n		1215877	0					
ANR	1216286	Identifier	inc_n		1215877	1					
ANR	1216287	ExpressionStatement	"BBUF_WRITE_CODE_POINT ( bbuf , 0 , n )"	1766:2:37596:37629	1215877	19	True				
ANR	1216288	CallExpression	"BBUF_WRITE_CODE_POINT ( bbuf , 0 , n )"		1215877	0					
ANR	1216289	Callee	BBUF_WRITE_CODE_POINT		1215877	0					
ANR	1216290	Identifier	BBUF_WRITE_CODE_POINT		1215877	0					
ANR	1216291	ArgumentList	bbuf		1215877	1					
ANR	1216292	Argument	bbuf		1215877	0					
ANR	1216293	Identifier	bbuf		1215877	0					
ANR	1216294	Argument	0		1215877	1					
ANR	1216295	PrimaryExpression	0		1215877	0					
ANR	1216296	Argument	n		1215877	2					
ANR	1216297	Identifier	n		1215877	0					
ANR	1216298	ReturnStatement	return 0 ;	1768:2:37634:37642	1215877	20	True				
ANR	1216299	PrimaryExpression	0		1215877	0					
ANR	1216300	ReturnType	static int		1215877	1					
ANR	1216301	Identifier	add_code_range_to_buf		1215877	2					
ANR	1216302	ParameterList	"BBuf * * pbuf , OnigCodePoint from , OnigCodePoint to"		1215877	3					
ANR	1216303	Parameter	BBuf * * pbuf	1697:22:36020:36030	1215877	0	True				
ANR	1216304	ParameterType	BBuf * *		1215877	0					
ANR	1216305	Identifier	pbuf		1215877	1					
ANR	1216306	Parameter	OnigCodePoint from	1697:35:36033:36050	1215877	1	True				
ANR	1216307	ParameterType	OnigCodePoint		1215877	0					
ANR	1216308	Identifier	from		1215877	1					
ANR	1216309	Parameter	OnigCodePoint to	1697:55:36053:36068	1215877	2	True				
ANR	1216310	ParameterType	OnigCodePoint		1215877	0					
ANR	1216311	Identifier	to		1215877	1					
ANR	1216312	CFGEntryNode	ENTRY		1215877		True				
ANR	1216313	CFGExitNode	EXIT		1215877		True				
ANR	1216314	Symbol	* x		1215877						
ANR	1216315	Symbol	data		1215877						
ANR	1216316	Symbol	* high		1215877						
ANR	1216317	Symbol	ONIG_MAX_MULTI_BYTE_RANGES_NUM		1215877						
ANR	1216318	Symbol	high		1215877						
ANR	1216319	Symbol	SIZE_CODE_POINT		1215877						
ANR	1216320	Symbol	IS_NULL		1215877						
ANR	1216321	Symbol	pos		1215877						
ANR	1216322	Symbol	low		1215877						
ANR	1216323	Symbol	ONIGERR_TOO_MANY_MULTI_BYTE_RANGES		1215877						
ANR	1216324	Symbol	from		1215877						
ANR	1216325	Symbol	* pbuf		1215877						
ANR	1216326	Symbol	* bbuf		1215877						
ANR	1216327	Symbol	bound		1215877						
ANR	1216328	Symbol	from_pos		1215877						
ANR	1216329	Symbol	to_pos		1215877						
ANR	1216330	Symbol	n		1215877						
ANR	1216331	Symbol	r		1215877						
ANR	1216332	Symbol	new_code_range		1215877						
ANR	1216333	Symbol	size		1215877						
ANR	1216334	Symbol	bbuf -> p		1215877						
ANR	1216335	Symbol	inc_n		1215877						
ANR	1216336	Symbol	pbuf		1215877						
ANR	1216337	Symbol	x		1215877						
ANR	1216338	Symbol	to		1215877						
ANR	1216339	Symbol	* data		1215877						
ANR	1216340	Symbol	* low		1215877						
ANR	1216341	Symbol	bbuf		1215877						
ANR	1216342	Function	add_code_range	1771:0:37647:37954							
ANR	1216343	FunctionDef	"add_code_range (BBuf * * pbuf , ScanEnv * env , OnigCodePoint from , OnigCodePoint to)"		1216342	0					
ANR	1216344	CompoundStatement		1773:0:37738:37954	1216342	0					
ANR	1216345	IfStatement	if ( from > to )		1216342	0					
ANR	1216346	Condition	from > to	1774:6:37746:37754	1216342	0	True				
ANR	1216347	RelationalExpression	from > to		1216342	0		>			
ANR	1216348	Identifier	from		1216342	0					
ANR	1216349	Identifier	to		1216342	1					
ANR	1216350	CompoundStatement		2:17:18:18	1216342	1					
ANR	1216351	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC ) )"		1216342	0					
ANR	1216352	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC )"	1775:8:37767:37825	1216342	0	True				
ANR	1216353	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC )"		1216342	0					
ANR	1216354	Callee	IS_SYNTAX_BV		1216342	0					
ANR	1216355	Identifier	IS_SYNTAX_BV		1216342	0					
ANR	1216356	ArgumentList	env -> syntax		1216342	1					
ANR	1216357	Argument	env -> syntax		1216342	0					
ANR	1216358	PtrMemberAccess	env -> syntax		1216342	0					
ANR	1216359	Identifier	env		1216342	0					
ANR	1216360	Identifier	syntax		1216342	1					
ANR	1216361	Argument	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		1216342	1					
ANR	1216362	Identifier	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		1216342	0					
ANR	1216363	ReturnStatement	return 0 ;	1776:6:37834:37842	1216342	1	True				
ANR	1216364	PrimaryExpression	0		1216342	0					
ANR	1216365	ElseStatement	else		1216342	0					
ANR	1216366	ReturnStatement	return ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS ;	1778:6:37859:37899	1216342	0	True				
ANR	1216367	Identifier	ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS		1216342	0					
ANR	1216368	ReturnStatement	"return add_code_range_to_buf ( pbuf , from , to ) ;"	1781:2:37908:37952	1216342	1	True				
ANR	1216369	CallExpression	"add_code_range_to_buf ( pbuf , from , to )"		1216342	0					
ANR	1216370	Callee	add_code_range_to_buf		1216342	0					
ANR	1216371	Identifier	add_code_range_to_buf		1216342	0					
ANR	1216372	ArgumentList	pbuf		1216342	1					
ANR	1216373	Argument	pbuf		1216342	0					
ANR	1216374	Identifier	pbuf		1216342	0					
ANR	1216375	Argument	from		1216342	1					
ANR	1216376	Identifier	from		1216342	0					
ANR	1216377	Argument	to		1216342	2					
ANR	1216378	Identifier	to		1216342	0					
ANR	1216379	ReturnType	static int		1216342	1					
ANR	1216380	Identifier	add_code_range		1216342	2					
ANR	1216381	ParameterList	"BBuf * * pbuf , ScanEnv * env , OnigCodePoint from , OnigCodePoint to"		1216342	3					
ANR	1216382	Parameter	BBuf * * pbuf	1772:15:37673:37683	1216342	0	True				
ANR	1216383	ParameterType	BBuf * *		1216342	0					
ANR	1216384	Identifier	pbuf		1216342	1					
ANR	1216385	Parameter	ScanEnv * env	1772:28:37686:37697	1216342	1	True				
ANR	1216386	ParameterType	ScanEnv *		1216342	0					
ANR	1216387	Identifier	env		1216342	1					
ANR	1216388	Parameter	OnigCodePoint from	1772:42:37700:37717	1216342	2	True				
ANR	1216389	ParameterType	OnigCodePoint		1216342	0					
ANR	1216390	Identifier	from		1216342	1					
ANR	1216391	Parameter	OnigCodePoint to	1772:62:37720:37735	1216342	3	True				
ANR	1216392	ParameterType	OnigCodePoint		1216342	0					
ANR	1216393	Identifier	to		1216342	1					
ANR	1216394	CFGEntryNode	ENTRY		1216342		True				
ANR	1216395	CFGExitNode	EXIT		1216342		True				
ANR	1216396	Symbol	pbuf		1216342						
ANR	1216397	Symbol	* env		1216342						
ANR	1216398	Symbol	IS_SYNTAX_BV		1216342						
ANR	1216399	Symbol	from		1216342						
ANR	1216400	Symbol	add_code_range_to_buf		1216342						
ANR	1216401	Symbol	to		1216342						
ANR	1216402	Symbol	env		1216342						
ANR	1216403	Symbol	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		1216342						
ANR	1216404	Symbol	ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS		1216342						
ANR	1216405	Symbol	env -> syntax		1216342						
ANR	1216406	Function	not_code_range_buf	1784:0:37957:38716							
ANR	1216407	FunctionDef	"not_code_range_buf (OnigEncoding enc , BBuf * bbuf , BBuf * * pbuf)"		1216406	0					
ANR	1216408	CompoundStatement		1786:0:38030:38716	1216406	0					
ANR	1216409	IdentifierDeclStatement	"int r , i , n ;"	1787:2:38034:38045	1216406	0	True				
ANR	1216410	IdentifierDecl	r		1216406	0					
ANR	1216411	IdentifierDeclType	int		1216406	0					
ANR	1216412	Identifier	r		1216406	1					
ANR	1216413	IdentifierDecl	i		1216406	1					
ANR	1216414	IdentifierDeclType	int		1216406	0					
ANR	1216415	Identifier	i		1216406	1					
ANR	1216416	IdentifierDecl	n		1216406	2					
ANR	1216417	IdentifierDeclType	int		1216406	0					
ANR	1216418	Identifier	n		1216406	1					
ANR	1216419	IdentifierDeclStatement	"OnigCodePoint pre , from , * data , to = 0 ;"	1788:2:38049:38087	1216406	1	True				
ANR	1216420	IdentifierDecl	pre		1216406	0					
ANR	1216421	IdentifierDeclType	OnigCodePoint		1216406	0					
ANR	1216422	Identifier	pre		1216406	1					
ANR	1216423	IdentifierDecl	from		1216406	1					
ANR	1216424	IdentifierDeclType	OnigCodePoint		1216406	0					
ANR	1216425	Identifier	from		1216406	1					
ANR	1216426	IdentifierDecl	* data		1216406	2					
ANR	1216427	IdentifierDeclType	OnigCodePoint *		1216406	0					
ANR	1216428	Identifier	data		1216406	1					
ANR	1216429	IdentifierDecl	to = 0		1216406	3					
ANR	1216430	IdentifierDeclType	OnigCodePoint		1216406	0					
ANR	1216431	Identifier	to		1216406	1					
ANR	1216432	AssignmentExpression	to = 0		1216406	2		=			
ANR	1216433	Identifier	to		1216406	0					
ANR	1216434	PrimaryExpression	0		1216406	1					
ANR	1216435	ExpressionStatement	* pbuf = ( BBuf * ) NULL	1790:2:38092:38112	1216406	2	True				
ANR	1216436	AssignmentExpression	* pbuf = ( BBuf * ) NULL		1216406	0		=			
ANR	1216437	UnaryOperationExpression	* pbuf		1216406	0					
ANR	1216438	UnaryOperator	*		1216406	0					
ANR	1216439	Identifier	pbuf		1216406	1					
ANR	1216440	CastExpression	( BBuf * ) NULL		1216406	1					
ANR	1216441	CastTarget	BBuf *		1216406	0					
ANR	1216442	Identifier	NULL		1216406	1					
ANR	1216443	IfStatement	if ( IS_NULL ( bbuf ) )		1216406	3					
ANR	1216444	Condition	IS_NULL ( bbuf )	1791:6:38120:38132	1216406	0	True				
ANR	1216445	CallExpression	IS_NULL ( bbuf )		1216406	0					
ANR	1216446	Callee	IS_NULL		1216406	0					
ANR	1216447	Identifier	IS_NULL		1216406	0					
ANR	1216448	ArgumentList	bbuf		1216406	1					
ANR	1216449	Argument	bbuf		1216406	0					
ANR	1216450	Identifier	bbuf		1216406	0					
ANR	1216451	CompoundStatement		6:21:104:104	1216406	1					
ANR	1216452	Label	set_all :	1792:2:38139:38146	1216406	0	True				
ANR	1216453	Identifier	set_all		1216406	0					
ANR	1216454	ReturnStatement	"return SET_ALL_MULTI_BYTE_RANGE ( enc , pbuf ) ;"	1793:4:38152:38194	1216406	1	True				
ANR	1216455	CallExpression	"SET_ALL_MULTI_BYTE_RANGE ( enc , pbuf )"		1216406	0					
ANR	1216456	Callee	SET_ALL_MULTI_BYTE_RANGE		1216406	0					
ANR	1216457	Identifier	SET_ALL_MULTI_BYTE_RANGE		1216406	0					
ANR	1216458	ArgumentList	enc		1216406	1					
ANR	1216459	Argument	enc		1216406	0					
ANR	1216460	Identifier	enc		1216406	0					
ANR	1216461	Argument	pbuf		1216406	1					
ANR	1216462	Identifier	pbuf		1216406	0					
ANR	1216463	ExpressionStatement	data = ( OnigCodePoint * ) ( bbuf -> p )	1796:2:38203:38236	1216406	4	True				
ANR	1216464	AssignmentExpression	data = ( OnigCodePoint * ) ( bbuf -> p )		1216406	0		=			
ANR	1216465	Identifier	data		1216406	0					
ANR	1216466	CastExpression	( OnigCodePoint * ) ( bbuf -> p )		1216406	1					
ANR	1216467	CastTarget	OnigCodePoint *		1216406	0					
ANR	1216468	PtrMemberAccess	bbuf -> p		1216406	1					
ANR	1216469	Identifier	bbuf		1216406	0					
ANR	1216470	Identifier	p		1216406	1					
ANR	1216471	ExpressionStatement	"GET_CODE_POINT ( n , data )"	1797:2:38240:38263	1216406	5	True				
ANR	1216472	CallExpression	"GET_CODE_POINT ( n , data )"		1216406	0					
ANR	1216473	Callee	GET_CODE_POINT		1216406	0					
ANR	1216474	Identifier	GET_CODE_POINT		1216406	0					
ANR	1216475	ArgumentList	n		1216406	1					
ANR	1216476	Argument	n		1216406	0					
ANR	1216477	Identifier	n		1216406	0					
ANR	1216478	Argument	data		1216406	1					
ANR	1216479	Identifier	data		1216406	0					
ANR	1216480	ExpressionStatement	data ++	1798:2:38267:38273	1216406	6	True				
ANR	1216481	PostIncDecOperationExpression	data ++		1216406	0					
ANR	1216482	Identifier	data		1216406	0					
ANR	1216483	IncDec	++		1216406	1					
ANR	1216484	IfStatement	if ( n <= 0 )		1216406	7					
ANR	1216485	Condition	n <= 0	1799:6:38281:38286	1216406	0	True				
ANR	1216486	RelationalExpression	n <= 0		1216406	0		<=			
ANR	1216487	Identifier	n		1216406	0					
ANR	1216488	PrimaryExpression	0		1216406	1					
ANR	1216489	GotoStatement	goto set_all ;	1799:14:38289:38301	1216406	1	True				
ANR	1216490	Identifier	set_all		1216406	0					
ANR	1216491	ExpressionStatement	r = 0	1801:2:38306:38311	1216406	8	True				
ANR	1216492	AssignmentExpression	r = 0		1216406	0		=			
ANR	1216493	Identifier	r		1216406	0					
ANR	1216494	PrimaryExpression	0		1216406	1					
ANR	1216495	ExpressionStatement	pre = MBCODE_START_POS ( enc )	1802:2:38315:38342	1216406	9	True				
ANR	1216496	AssignmentExpression	pre = MBCODE_START_POS ( enc )		1216406	0		=			
ANR	1216497	Identifier	pre		1216406	0					
ANR	1216498	CallExpression	MBCODE_START_POS ( enc )		1216406	1					
ANR	1216499	Callee	MBCODE_START_POS		1216406	0					
ANR	1216500	Identifier	MBCODE_START_POS		1216406	0					
ANR	1216501	ArgumentList	enc		1216406	1					
ANR	1216502	Argument	enc		1216406	0					
ANR	1216503	Identifier	enc		1216406	0					
ANR	1216504	ForStatement	for ( i = 0 ; i < n ; i ++ )		1216406	10					
ANR	1216505	ForInit	i = 0 ;	1803:7:38351:38356	1216406	0	True				
ANR	1216506	AssignmentExpression	i = 0		1216406	0		=			
ANR	1216507	Identifier	i		1216406	0					
ANR	1216508	PrimaryExpression	0		1216406	1					
ANR	1216509	Condition	i < n	1803:14:38358:38362	1216406	1	True				
ANR	1216510	RelationalExpression	i < n		1216406	0		<			
ANR	1216511	Identifier	i		1216406	0					
ANR	1216512	Identifier	n		1216406	1					
ANR	1216513	PostIncDecOperationExpression	i ++	1803:21:38365:38367	1216406	2	True				
ANR	1216514	Identifier	i		1216406	0					
ANR	1216515	IncDec	++		1216406	1					
ANR	1216516	CompoundStatement		18:26:339:339	1216406	3					
ANR	1216517	ExpressionStatement	from = data [ i * 2 ]	1804:4:38376:38392	1216406	0	True				
ANR	1216518	AssignmentExpression	from = data [ i * 2 ]		1216406	0		=			
ANR	1216519	Identifier	from		1216406	0					
ANR	1216520	ArrayIndexing	data [ i * 2 ]		1216406	1					
ANR	1216521	Identifier	data		1216406	0					
ANR	1216522	MultiplicativeExpression	i * 2		1216406	1		*			
ANR	1216523	Identifier	i		1216406	0					
ANR	1216524	PrimaryExpression	2		1216406	1					
ANR	1216525	ExpressionStatement	to = data [ i * 2 + 1 ]	1805:4:38398:38416	1216406	1	True				
ANR	1216526	AssignmentExpression	to = data [ i * 2 + 1 ]		1216406	0		=			
ANR	1216527	Identifier	to		1216406	0					
ANR	1216528	ArrayIndexing	data [ i * 2 + 1 ]		1216406	1					
ANR	1216529	Identifier	data		1216406	0					
ANR	1216530	AdditiveExpression	i * 2 + 1		1216406	1		+			
ANR	1216531	MultiplicativeExpression	i * 2		1216406	0		*			
ANR	1216532	Identifier	i		1216406	0					
ANR	1216533	PrimaryExpression	2		1216406	1					
ANR	1216534	PrimaryExpression	1		1216406	1					
ANR	1216535	IfStatement	if ( pre <= from - 1 )		1216406	2					
ANR	1216536	Condition	pre <= from - 1	1806:8:38426:38440	1216406	0	True				
ANR	1216537	RelationalExpression	pre <= from - 1		1216406	0		<=			
ANR	1216538	Identifier	pre		1216406	0					
ANR	1216539	AdditiveExpression	from - 1		1216406	1		-			
ANR	1216540	Identifier	from		1216406	0					
ANR	1216541	PrimaryExpression	1		1216406	1					
ANR	1216542	CompoundStatement		21:25:412:412	1216406	1					
ANR	1216543	ExpressionStatement	"r = add_code_range_to_buf ( pbuf , pre , from - 1 )"	1807:6:38451:38497	1216406	0	True				
ANR	1216544	AssignmentExpression	"r = add_code_range_to_buf ( pbuf , pre , from - 1 )"		1216406	0		=			
ANR	1216545	Identifier	r		1216406	0					
ANR	1216546	CallExpression	"add_code_range_to_buf ( pbuf , pre , from - 1 )"		1216406	1					
ANR	1216547	Callee	add_code_range_to_buf		1216406	0					
ANR	1216548	Identifier	add_code_range_to_buf		1216406	0					
ANR	1216549	ArgumentList	pbuf		1216406	1					
ANR	1216550	Argument	pbuf		1216406	0					
ANR	1216551	Identifier	pbuf		1216406	0					
ANR	1216552	Argument	pre		1216406	1					
ANR	1216553	Identifier	pre		1216406	0					
ANR	1216554	Argument	from - 1		1216406	2					
ANR	1216555	AdditiveExpression	from - 1		1216406	0		-			
ANR	1216556	Identifier	from		1216406	0					
ANR	1216557	PrimaryExpression	1		1216406	1					
ANR	1216558	IfStatement	if ( r != 0 )		1216406	1					
ANR	1216559	Condition	r != 0	1808:10:38509:38514	1216406	0	True				
ANR	1216560	EqualityExpression	r != 0		1216406	0		!=			
ANR	1216561	Identifier	r		1216406	0					
ANR	1216562	PrimaryExpression	0		1216406	1					
ANR	1216563	ReturnStatement	return r ;	1808:18:38517:38525	1216406	1	True				
ANR	1216564	Identifier	r		1216406	0					
ANR	1216565	IfStatement	if ( to == ~ ( ( OnigCodePoint ) 0 ) )		1216406	3					
ANR	1216566	Condition	to == ~ ( ( OnigCodePoint ) 0 )	1810:8:38541:38566	1216406	0	True				
ANR	1216567	EqualityExpression	to == ~ ( ( OnigCodePoint ) 0 )		1216406	0		==			
ANR	1216568	Identifier	to		1216406	0					
ANR	1216569	UnaryOperationExpression	~ ( ( OnigCodePoint ) 0 )		1216406	1					
ANR	1216570	UnaryOperator	~		1216406	0					
ANR	1216571	CastExpression	( OnigCodePoint ) 0		1216406	1					
ANR	1216572	CastTarget	OnigCodePoint		1216406	0					
ANR	1216573	PrimaryExpression	0		1216406	1					
ANR	1216574	BreakStatement	break ;	1810:36:38569:38574	1216406	1	True				
ANR	1216575	ExpressionStatement	pre = to + 1	1811:4:38580:38592	1216406	4	True				
ANR	1216576	AssignmentExpression	pre = to + 1		1216406	0		=			
ANR	1216577	Identifier	pre		1216406	0					
ANR	1216578	AdditiveExpression	to + 1		1216406	1		+			
ANR	1216579	Identifier	to		1216406	0					
ANR	1216580	PrimaryExpression	1		1216406	1					
ANR	1216581	IfStatement	if ( to < ~ ( ( OnigCodePoint ) 0 ) )		1216406	11					
ANR	1216582	Condition	to < ~ ( ( OnigCodePoint ) 0 )	1813:6:38604:38628	1216406	0	True				
ANR	1216583	RelationalExpression	to < ~ ( ( OnigCodePoint ) 0 )		1216406	0		<			
ANR	1216584	Identifier	to		1216406	0					
ANR	1216585	UnaryOperationExpression	~ ( ( OnigCodePoint ) 0 )		1216406	1					
ANR	1216586	UnaryOperator	~		1216406	0					
ANR	1216587	CastExpression	( OnigCodePoint ) 0		1216406	1					
ANR	1216588	CastTarget	OnigCodePoint		1216406	0					
ANR	1216589	PrimaryExpression	0		1216406	1					
ANR	1216590	CompoundStatement		28:33:600:600	1216406	1					
ANR	1216591	ExpressionStatement	"r = add_code_range_to_buf ( pbuf , to + 1 , ~ ( ( OnigCodePoint ) 0 ) )"	1814:4:38637:38698	1216406	0	True				
ANR	1216592	AssignmentExpression	"r = add_code_range_to_buf ( pbuf , to + 1 , ~ ( ( OnigCodePoint ) 0 ) )"		1216406	0		=			
ANR	1216593	Identifier	r		1216406	0					
ANR	1216594	CallExpression	"add_code_range_to_buf ( pbuf , to + 1 , ~ ( ( OnigCodePoint ) 0 ) )"		1216406	1					
ANR	1216595	Callee	add_code_range_to_buf		1216406	0					
ANR	1216596	Identifier	add_code_range_to_buf		1216406	0					
ANR	1216597	ArgumentList	pbuf		1216406	1					
ANR	1216598	Argument	pbuf		1216406	0					
ANR	1216599	Identifier	pbuf		1216406	0					
ANR	1216600	Argument	to + 1		1216406	1					
ANR	1216601	AdditiveExpression	to + 1		1216406	0		+			
ANR	1216602	Identifier	to		1216406	0					
ANR	1216603	PrimaryExpression	1		1216406	1					
ANR	1216604	Argument	~ ( ( OnigCodePoint ) 0 )		1216406	2					
ANR	1216605	UnaryOperationExpression	~ ( ( OnigCodePoint ) 0 )		1216406	0					
ANR	1216606	UnaryOperator	~		1216406	0					
ANR	1216607	CastExpression	( OnigCodePoint ) 0		1216406	1					
ANR	1216608	CastTarget	OnigCodePoint		1216406	0					
ANR	1216609	PrimaryExpression	0		1216406	1					
ANR	1216610	ReturnStatement	return r ;	1816:2:38706:38714	1216406	12	True				
ANR	1216611	Identifier	r		1216406	0					
ANR	1216612	ReturnType	static int		1216406	1					
ANR	1216613	Identifier	not_code_range_buf		1216406	2					
ANR	1216614	ParameterList	"OnigEncoding enc , BBuf * bbuf , BBuf * * pbuf"		1216406	3					
ANR	1216615	Parameter	OnigEncoding enc	1785:19:37987:38002	1216406	0	True				
ANR	1216616	ParameterType	OnigEncoding		1216406	0					
ANR	1216617	Identifier	enc		1216406	1					
ANR	1216618	Parameter	BBuf * bbuf	1785:37:38005:38014	1216406	1	True				
ANR	1216619	ParameterType	BBuf *		1216406	0					
ANR	1216620	Identifier	bbuf		1216406	1					
ANR	1216621	Parameter	BBuf * * pbuf	1785:49:38017:38027	1216406	2	True				
ANR	1216622	ParameterType	BBuf * *		1216406	0					
ANR	1216623	Identifier	pbuf		1216406	1					
ANR	1216624	CFGEntryNode	ENTRY		1216406		True				
ANR	1216625	CFGExitNode	EXIT		1216406		True				
ANR	1216626	Symbol	pre		1216406						
ANR	1216627	Symbol	NULL		1216406						
ANR	1216628	Symbol	data		1216406						
ANR	1216629	Symbol	i		1216406						
ANR	1216630	Symbol	n		1216406						
ANR	1216631	Symbol	SET_ALL_MULTI_BYTE_RANGE		1216406						
ANR	1216632	Symbol	r		1216406						
ANR	1216633	Symbol	* i		1216406						
ANR	1216634	Symbol	IS_NULL		1216406						
ANR	1216635	Symbol	bbuf -> p		1216406						
ANR	1216636	Symbol	pbuf		1216406						
ANR	1216637	Symbol	MBCODE_START_POS		1216406						
ANR	1216638	Symbol	from		1216406						
ANR	1216639	Symbol	add_code_range_to_buf		1216406						
ANR	1216640	Symbol	enc		1216406						
ANR	1216641	Symbol	to		1216406						
ANR	1216642	Symbol	* pbuf		1216406						
ANR	1216643	Symbol	* bbuf		1216406						
ANR	1216644	Symbol	* data		1216406						
ANR	1216645	Symbol	bbuf		1216406						
ANR	1216646	DeclStmt									
ANR	1216647	Decl							BBuf	BBuf *	tbuf
ANR	1216648	DeclStmt									
ANR	1216649	Decl							int	int	tnot
ANR	1216650	Function	or_code_range_buf	1826:0:38911:40111							
ANR	1216651	FunctionDef	"or_code_range_buf (OnigEncoding enc , BBuf * bbuf1 , int not1 , BBuf * bbuf2 , int not2 , BBuf * * pbuf)"		1216650	0					
ANR	1216652	CompoundStatement		1829:0:39035:40111	1216650	0					
ANR	1216653	IdentifierDeclStatement	int r ;	1830:2:39039:39044	1216650	0	True				
ANR	1216654	IdentifierDecl	r		1216650	0					
ANR	1216655	IdentifierDeclType	int		1216650	0					
ANR	1216656	Identifier	r		1216650	1					
ANR	1216657	IdentifierDeclStatement	"OnigCodePoint i , n1 , * data1 ;"	1831:2:39048:39075	1216650	1	True				
ANR	1216658	IdentifierDecl	i		1216650	0					
ANR	1216659	IdentifierDeclType	OnigCodePoint		1216650	0					
ANR	1216660	Identifier	i		1216650	1					
ANR	1216661	IdentifierDecl	n1		1216650	1					
ANR	1216662	IdentifierDeclType	OnigCodePoint		1216650	0					
ANR	1216663	Identifier	n1		1216650	1					
ANR	1216664	IdentifierDecl	* data1		1216650	2					
ANR	1216665	IdentifierDeclType	OnigCodePoint *		1216650	0					
ANR	1216666	Identifier	data1		1216650	1					
ANR	1216667	IdentifierDeclStatement	"OnigCodePoint from , to ;"	1832:2:39079:39101	1216650	2	True				
ANR	1216668	IdentifierDecl	from		1216650	0					
ANR	1216669	IdentifierDeclType	OnigCodePoint		1216650	0					
ANR	1216670	Identifier	from		1216650	1					
ANR	1216671	IdentifierDecl	to		1216650	1					
ANR	1216672	IdentifierDeclType	OnigCodePoint		1216650	0					
ANR	1216673	Identifier	to		1216650	1					
ANR	1216674	ExpressionStatement	* pbuf = ( BBuf * ) NULL	1834:2:39106:39126	1216650	3	True				
ANR	1216675	AssignmentExpression	* pbuf = ( BBuf * ) NULL		1216650	0		=			
ANR	1216676	UnaryOperationExpression	* pbuf		1216650	0					
ANR	1216677	UnaryOperator	*		1216650	0					
ANR	1216678	Identifier	pbuf		1216650	1					
ANR	1216679	CastExpression	( BBuf * ) NULL		1216650	1					
ANR	1216680	CastTarget	BBuf *		1216650	0					
ANR	1216681	Identifier	NULL		1216650	1					
ANR	1216682	IfStatement	if ( IS_NULL ( bbuf1 ) && IS_NULL ( bbuf2 ) )		1216650	4					
ANR	1216683	Condition	IS_NULL ( bbuf1 ) && IS_NULL ( bbuf2 )	1835:6:39134:39165	1216650	0	True				
ANR	1216684	AndExpression	IS_NULL ( bbuf1 ) && IS_NULL ( bbuf2 )		1216650	0		&&			
ANR	1216685	CallExpression	IS_NULL ( bbuf1 )		1216650	0					
ANR	1216686	Callee	IS_NULL		1216650	0					
ANR	1216687	Identifier	IS_NULL		1216650	0					
ANR	1216688	ArgumentList	bbuf1		1216650	1					
ANR	1216689	Argument	bbuf1		1216650	0					
ANR	1216690	Identifier	bbuf1		1216650	0					
ANR	1216691	CallExpression	IS_NULL ( bbuf2 )		1216650	1					
ANR	1216692	Callee	IS_NULL		1216650	0					
ANR	1216693	Identifier	IS_NULL		1216650	0					
ANR	1216694	ArgumentList	bbuf2		1216650	1					
ANR	1216695	Argument	bbuf2		1216650	0					
ANR	1216696	Identifier	bbuf2		1216650	0					
ANR	1216697	CompoundStatement		7:40:132:132	1216650	1					
ANR	1216698	IfStatement	if ( not1 != 0 || not2 != 0 )		1216650	0					
ANR	1216699	Condition	not1 != 0 || not2 != 0	1836:8:39178:39199	1216650	0	True				
ANR	1216700	OrExpression	not1 != 0 || not2 != 0		1216650	0		||			
ANR	1216701	EqualityExpression	not1 != 0		1216650	0		!=			
ANR	1216702	Identifier	not1		1216650	0					
ANR	1216703	PrimaryExpression	0		1216650	1					
ANR	1216704	EqualityExpression	not2 != 0		1216650	1		!=			
ANR	1216705	Identifier	not2		1216650	0					
ANR	1216706	PrimaryExpression	0		1216650	1					
ANR	1216707	ReturnStatement	"return SET_ALL_MULTI_BYTE_RANGE ( enc , pbuf ) ;"	1837:6:39208:39250	1216650	1	True				
ANR	1216708	CallExpression	"SET_ALL_MULTI_BYTE_RANGE ( enc , pbuf )"		1216650	0					
ANR	1216709	Callee	SET_ALL_MULTI_BYTE_RANGE		1216650	0					
ANR	1216710	Identifier	SET_ALL_MULTI_BYTE_RANGE		1216650	0					
ANR	1216711	ArgumentList	enc		1216650	1					
ANR	1216712	Argument	enc		1216650	0					
ANR	1216713	Identifier	enc		1216650	0					
ANR	1216714	Argument	pbuf		1216650	1					
ANR	1216715	Identifier	pbuf		1216650	0					
ANR	1216716	ReturnStatement	return 0 ;	1838:4:39256:39264	1216650	1	True				
ANR	1216717	PrimaryExpression	0		1216650	0					
ANR	1216718	ExpressionStatement	r = 0	1841:2:39273:39278	1216650	5	True				
ANR	1216719	AssignmentExpression	r = 0		1216650	0		=			
ANR	1216720	Identifier	r		1216650	0					
ANR	1216721	PrimaryExpression	0		1216650	1					
ANR	1216722	IfStatement	if ( IS_NULL ( bbuf2 ) )		1216650	6					
ANR	1216723	Condition	IS_NULL ( bbuf2 )	1842:6:39286:39299	1216650	0	True				
ANR	1216724	CallExpression	IS_NULL ( bbuf2 )		1216650	0					
ANR	1216725	Callee	IS_NULL		1216650	0					
ANR	1216726	Identifier	IS_NULL		1216650	0					
ANR	1216727	ArgumentList	bbuf2		1216650	1					
ANR	1216728	Argument	bbuf2		1216650	0					
ANR	1216729	Identifier	bbuf2		1216650	0					
ANR	1216730	ExpressionStatement	"SWAP_BBUF_NOT ( bbuf1 , not1 , bbuf2 , not2 )"	1843:4:39306:39345	1216650	1	True				
ANR	1216731	CallExpression	"SWAP_BBUF_NOT ( bbuf1 , not1 , bbuf2 , not2 )"		1216650	0					
ANR	1216732	Callee	SWAP_BBUF_NOT		1216650	0					
ANR	1216733	Identifier	SWAP_BBUF_NOT		1216650	0					
ANR	1216734	ArgumentList	bbuf1		1216650	1					
ANR	1216735	Argument	bbuf1		1216650	0					
ANR	1216736	Identifier	bbuf1		1216650	0					
ANR	1216737	Argument	not1		1216650	1					
ANR	1216738	Identifier	not1		1216650	0					
ANR	1216739	Argument	bbuf2		1216650	2					
ANR	1216740	Identifier	bbuf2		1216650	0					
ANR	1216741	Argument	not2		1216650	3					
ANR	1216742	Identifier	not2		1216650	0					
ANR	1216743	IfStatement	if ( IS_NULL ( bbuf1 ) )		1216650	7					
ANR	1216744	Condition	IS_NULL ( bbuf1 )	1845:6:39354:39367	1216650	0	True				
ANR	1216745	CallExpression	IS_NULL ( bbuf1 )		1216650	0					
ANR	1216746	Callee	IS_NULL		1216650	0					
ANR	1216747	Identifier	IS_NULL		1216650	0					
ANR	1216748	ArgumentList	bbuf1		1216650	1					
ANR	1216749	Argument	bbuf1		1216650	0					
ANR	1216750	Identifier	bbuf1		1216650	0					
ANR	1216751	CompoundStatement		17:22:334:334	1216650	1					
ANR	1216752	IfStatement	if ( not1 != 0 )		1216650	0					
ANR	1216753	Condition	not1 != 0	1846:8:39380:39388	1216650	0	True				
ANR	1216754	EqualityExpression	not1 != 0		1216650	0		!=			
ANR	1216755	Identifier	not1		1216650	0					
ANR	1216756	PrimaryExpression	0		1216650	1					
ANR	1216757	CompoundStatement		18:19:355:355	1216650	1					
ANR	1216758	ReturnStatement	"return SET_ALL_MULTI_BYTE_RANGE ( enc , pbuf ) ;"	1847:6:39399:39441	1216650	0	True				
ANR	1216759	CallExpression	"SET_ALL_MULTI_BYTE_RANGE ( enc , pbuf )"		1216650	0					
ANR	1216760	Callee	SET_ALL_MULTI_BYTE_RANGE		1216650	0					
ANR	1216761	Identifier	SET_ALL_MULTI_BYTE_RANGE		1216650	0					
ANR	1216762	ArgumentList	enc		1216650	1					
ANR	1216763	Argument	enc		1216650	0					
ANR	1216764	Identifier	enc		1216650	0					
ANR	1216765	Argument	pbuf		1216650	1					
ANR	1216766	Identifier	pbuf		1216650	0					
ANR	1216767	ElseStatement	else		1216650	0					
ANR	1216768	CompoundStatement		21:9:422:422	1216650	0					
ANR	1216769	IfStatement	if ( not2 == 0 )		1216650	0					
ANR	1216770	Condition	not2 == 0	1850:10:39470:39478	1216650	0	True				
ANR	1216771	EqualityExpression	not2 == 0		1216650	0		==			
ANR	1216772	Identifier	not2		1216650	0					
ANR	1216773	PrimaryExpression	0		1216650	1					
ANR	1216774	CompoundStatement		22:21:445:445	1216650	1					
ANR	1216775	ReturnStatement	"return bbuf_clone ( pbuf , bbuf2 ) ;"	1851:1:39484:39514	1216650	0	True				
ANR	1216776	CallExpression	"bbuf_clone ( pbuf , bbuf2 )"		1216650	0					
ANR	1216777	Callee	bbuf_clone		1216650	0					
ANR	1216778	Identifier	bbuf_clone		1216650	0					
ANR	1216779	ArgumentList	pbuf		1216650	1					
ANR	1216780	Argument	pbuf		1216650	0					
ANR	1216781	Identifier	pbuf		1216650	0					
ANR	1216782	Argument	bbuf2		1216650	1					
ANR	1216783	Identifier	bbuf2		1216650	0					
ANR	1216784	ElseStatement	else		1216650	0					
ANR	1216785	CompoundStatement		25:11:499:499	1216650	0					
ANR	1216786	ReturnStatement	"return not_code_range_buf ( enc , bbuf2 , pbuf ) ;"	1854:1:39538:39581	1216650	0	True				
ANR	1216787	CallExpression	"not_code_range_buf ( enc , bbuf2 , pbuf )"		1216650	0					
ANR	1216788	Callee	not_code_range_buf		1216650	0					
ANR	1216789	Identifier	not_code_range_buf		1216650	0					
ANR	1216790	ArgumentList	enc		1216650	1					
ANR	1216791	Argument	enc		1216650	0					
ANR	1216792	Identifier	enc		1216650	0					
ANR	1216793	Argument	bbuf2		1216650	1					
ANR	1216794	Identifier	bbuf2		1216650	0					
ANR	1216795	Argument	pbuf		1216650	2					
ANR	1216796	Identifier	pbuf		1216650	0					
ANR	1216797	IfStatement	if ( not1 != 0 )		1216650	8					
ANR	1216798	Condition	not1 != 0	1859:6:39608:39616	1216650	0	True				
ANR	1216799	EqualityExpression	not1 != 0		1216650	0		!=			
ANR	1216800	Identifier	not1		1216650	0					
ANR	1216801	PrimaryExpression	0		1216650	1					
ANR	1216802	ExpressionStatement	"SWAP_BBUF_NOT ( bbuf1 , not1 , bbuf2 , not2 )"	1860:4:39623:39662	1216650	1	True				
ANR	1216803	CallExpression	"SWAP_BBUF_NOT ( bbuf1 , not1 , bbuf2 , not2 )"		1216650	0					
ANR	1216804	Callee	SWAP_BBUF_NOT		1216650	0					
ANR	1216805	Identifier	SWAP_BBUF_NOT		1216650	0					
ANR	1216806	ArgumentList	bbuf1		1216650	1					
ANR	1216807	Argument	bbuf1		1216650	0					
ANR	1216808	Identifier	bbuf1		1216650	0					
ANR	1216809	Argument	not1		1216650	1					
ANR	1216810	Identifier	not1		1216650	0					
ANR	1216811	Argument	bbuf2		1216650	2					
ANR	1216812	Identifier	bbuf2		1216650	0					
ANR	1216813	Argument	not2		1216650	3					
ANR	1216814	Identifier	not2		1216650	0					
ANR	1216815	ExpressionStatement	data1 = ( OnigCodePoint * ) ( bbuf1 -> p )	1862:2:39667:39702	1216650	9	True				
ANR	1216816	AssignmentExpression	data1 = ( OnigCodePoint * ) ( bbuf1 -> p )		1216650	0		=			
ANR	1216817	Identifier	data1		1216650	0					
ANR	1216818	CastExpression	( OnigCodePoint * ) ( bbuf1 -> p )		1216650	1					
ANR	1216819	CastTarget	OnigCodePoint *		1216650	0					
ANR	1216820	PtrMemberAccess	bbuf1 -> p		1216650	1					
ANR	1216821	Identifier	bbuf1		1216650	0					
ANR	1216822	Identifier	p		1216650	1					
ANR	1216823	ExpressionStatement	"GET_CODE_POINT ( n1 , data1 )"	1863:2:39706:39731	1216650	10	True				
ANR	1216824	CallExpression	"GET_CODE_POINT ( n1 , data1 )"		1216650	0					
ANR	1216825	Callee	GET_CODE_POINT		1216650	0					
ANR	1216826	Identifier	GET_CODE_POINT		1216650	0					
ANR	1216827	ArgumentList	n1		1216650	1					
ANR	1216828	Argument	n1		1216650	0					
ANR	1216829	Identifier	n1		1216650	0					
ANR	1216830	Argument	data1		1216650	1					
ANR	1216831	Identifier	data1		1216650	0					
ANR	1216832	ExpressionStatement	data1 ++	1864:2:39735:39742	1216650	11	True				
ANR	1216833	PostIncDecOperationExpression	data1 ++		1216650	0					
ANR	1216834	Identifier	data1		1216650	0					
ANR	1216835	IncDec	++		1216650	1					
ANR	1216836	IfStatement	if ( not2 == 0 && not1 == 0 )		1216650	12					
ANR	1216837	Condition	not2 == 0 && not1 == 0	1866:6:39751:39772	1216650	0	True				
ANR	1216838	AndExpression	not2 == 0 && not1 == 0		1216650	0		&&			
ANR	1216839	EqualityExpression	not2 == 0		1216650	0		==			
ANR	1216840	Identifier	not2		1216650	0					
ANR	1216841	PrimaryExpression	0		1216650	1					
ANR	1216842	EqualityExpression	not1 == 0		1216650	1		==			
ANR	1216843	Identifier	not1		1216650	0					
ANR	1216844	PrimaryExpression	0		1216650	1					
ANR	1216845	CompoundStatement		38:30:739:739	1216650	1					
ANR	1216846	ExpressionStatement	"r = bbuf_clone ( pbuf , bbuf2 )"	1867:4:39794:39821	1216650	0	True				
ANR	1216847	AssignmentExpression	"r = bbuf_clone ( pbuf , bbuf2 )"		1216650	0		=			
ANR	1216848	Identifier	r		1216650	0					
ANR	1216849	CallExpression	"bbuf_clone ( pbuf , bbuf2 )"		1216650	1					
ANR	1216850	Callee	bbuf_clone		1216650	0					
ANR	1216851	Identifier	bbuf_clone		1216650	0					
ANR	1216852	ArgumentList	pbuf		1216650	1					
ANR	1216853	Argument	pbuf		1216650	0					
ANR	1216854	Identifier	pbuf		1216650	0					
ANR	1216855	Argument	bbuf2		1216650	1					
ANR	1216856	Identifier	bbuf2		1216650	0					
ANR	1216857	ElseStatement	else		1216650	0					
ANR	1216858	IfStatement	if ( not1 == 0 )		1216650	0					
ANR	1216859	Condition	not1 == 0	1869:11:39838:39846	1216650	0	True				
ANR	1216860	EqualityExpression	not1 == 0		1216650	0		==			
ANR	1216861	Identifier	not1		1216650	0					
ANR	1216862	PrimaryExpression	0		1216650	1					
ANR	1216863	CompoundStatement		41:22:813:813	1216650	1					
ANR	1216864	ExpressionStatement	"r = not_code_range_buf ( enc , bbuf2 , pbuf )"	1870:4:39874:39914	1216650	0	True				
ANR	1216865	AssignmentExpression	"r = not_code_range_buf ( enc , bbuf2 , pbuf )"		1216650	0		=			
ANR	1216866	Identifier	r		1216650	0					
ANR	1216867	CallExpression	"not_code_range_buf ( enc , bbuf2 , pbuf )"		1216650	1					
ANR	1216868	Callee	not_code_range_buf		1216650	0					
ANR	1216869	Identifier	not_code_range_buf		1216650	0					
ANR	1216870	ArgumentList	enc		1216650	1					
ANR	1216871	Argument	enc		1216650	0					
ANR	1216872	Identifier	enc		1216650	0					
ANR	1216873	Argument	bbuf2		1216650	1					
ANR	1216874	Identifier	bbuf2		1216650	0					
ANR	1216875	Argument	pbuf		1216650	2					
ANR	1216876	Identifier	pbuf		1216650	0					
ANR	1216877	IfStatement	if ( r != 0 )		1216650	13					
ANR	1216878	Condition	r != 0	1872:6:39926:39931	1216650	0	True				
ANR	1216879	EqualityExpression	r != 0		1216650	0		!=			
ANR	1216880	Identifier	r		1216650	0					
ANR	1216881	PrimaryExpression	0		1216650	1					
ANR	1216882	ReturnStatement	return r ;	1872:14:39934:39942	1216650	1	True				
ANR	1216883	Identifier	r		1216650	0					
ANR	1216884	ForStatement	for ( i = 0 ; i < n1 ; i ++ )		1216650	14					
ANR	1216885	ForInit	i = 0 ;	1874:7:39952:39957	1216650	0	True				
ANR	1216886	AssignmentExpression	i = 0		1216650	0		=			
ANR	1216887	Identifier	i		1216650	0					
ANR	1216888	PrimaryExpression	0		1216650	1					
ANR	1216889	Condition	i < n1	1874:14:39959:39964	1216650	1	True				
ANR	1216890	RelationalExpression	i < n1		1216650	0		<			
ANR	1216891	Identifier	i		1216650	0					
ANR	1216892	Identifier	n1		1216650	1					
ANR	1216893	PostIncDecOperationExpression	i ++	1874:22:39967:39969	1216650	2	True				
ANR	1216894	Identifier	i		1216650	0					
ANR	1216895	IncDec	++		1216650	1					
ANR	1216896	CompoundStatement		46:27:936:936	1216650	3					
ANR	1216897	ExpressionStatement	from = data1 [ i * 2 ]	1875:4:39978:39995	1216650	0	True				
ANR	1216898	AssignmentExpression	from = data1 [ i * 2 ]		1216650	0		=			
ANR	1216899	Identifier	from		1216650	0					
ANR	1216900	ArrayIndexing	data1 [ i * 2 ]		1216650	1					
ANR	1216901	Identifier	data1		1216650	0					
ANR	1216902	MultiplicativeExpression	i * 2		1216650	1		*			
ANR	1216903	Identifier	i		1216650	0					
ANR	1216904	PrimaryExpression	2		1216650	1					
ANR	1216905	ExpressionStatement	to = data1 [ i * 2 + 1 ]	1876:4:40001:40020	1216650	1	True				
ANR	1216906	AssignmentExpression	to = data1 [ i * 2 + 1 ]		1216650	0		=			
ANR	1216907	Identifier	to		1216650	0					
ANR	1216908	ArrayIndexing	data1 [ i * 2 + 1 ]		1216650	1					
ANR	1216909	Identifier	data1		1216650	0					
ANR	1216910	AdditiveExpression	i * 2 + 1		1216650	1		+			
ANR	1216911	MultiplicativeExpression	i * 2		1216650	0		*			
ANR	1216912	Identifier	i		1216650	0					
ANR	1216913	PrimaryExpression	2		1216650	1					
ANR	1216914	PrimaryExpression	1		1216650	1					
ANR	1216915	ExpressionStatement	"r = add_code_range_to_buf ( pbuf , from , to )"	1877:4:40026:40067	1216650	2	True				
ANR	1216916	AssignmentExpression	"r = add_code_range_to_buf ( pbuf , from , to )"		1216650	0		=			
ANR	1216917	Identifier	r		1216650	0					
ANR	1216918	CallExpression	"add_code_range_to_buf ( pbuf , from , to )"		1216650	1					
ANR	1216919	Callee	add_code_range_to_buf		1216650	0					
ANR	1216920	Identifier	add_code_range_to_buf		1216650	0					
ANR	1216921	ArgumentList	pbuf		1216650	1					
ANR	1216922	Argument	pbuf		1216650	0					
ANR	1216923	Identifier	pbuf		1216650	0					
ANR	1216924	Argument	from		1216650	1					
ANR	1216925	Identifier	from		1216650	0					
ANR	1216926	Argument	to		1216650	2					
ANR	1216927	Identifier	to		1216650	0					
ANR	1216928	IfStatement	if ( r != 0 )		1216650	3					
ANR	1216929	Condition	r != 0	1878:8:40077:40082	1216650	0	True				
ANR	1216930	EqualityExpression	r != 0		1216650	0		!=			
ANR	1216931	Identifier	r		1216650	0					
ANR	1216932	PrimaryExpression	0		1216650	1					
ANR	1216933	ReturnStatement	return r ;	1878:16:40085:40093	1216650	1	True				
ANR	1216934	Identifier	r		1216650	0					
ANR	1216935	ReturnStatement	return 0 ;	1880:2:40101:40109	1216650	15	True				
ANR	1216936	PrimaryExpression	0		1216650	0					
ANR	1216937	ReturnType	static int		1216650	1					
ANR	1216938	Identifier	or_code_range_buf		1216650	2					
ANR	1216939	ParameterList	"OnigEncoding enc , BBuf * bbuf1 , int not1 , BBuf * bbuf2 , int not2 , BBuf * * pbuf"		1216650	3					
ANR	1216940	Parameter	OnigEncoding enc	1827:18:38940:38955	1216650	0	True				
ANR	1216941	ParameterType	OnigEncoding		1216650	0					
ANR	1216942	Identifier	enc		1216650	1					
ANR	1216943	Parameter	BBuf * bbuf1	1827:36:38958:38968	1216650	1	True				
ANR	1216944	ParameterType	BBuf *		1216650	0					
ANR	1216945	Identifier	bbuf1		1216650	1					
ANR	1216946	Parameter	int not1	1827:49:38971:38978	1216650	2	True				
ANR	1216947	ParameterType	int		1216650	0					
ANR	1216948	Identifier	not1		1216650	1					
ANR	1216949	Parameter	BBuf * bbuf2	1828:18:38999:39009	1216650	3	True				
ANR	1216950	ParameterType	BBuf *		1216650	0					
ANR	1216951	Identifier	bbuf2		1216650	1					
ANR	1216952	Parameter	int not2	1828:31:39012:39019	1216650	4	True				
ANR	1216953	ParameterType	int		1216650	0					
ANR	1216954	Identifier	not2		1216650	1					
ANR	1216955	Parameter	BBuf * * pbuf	1828:41:39022:39032	1216650	5	True				
ANR	1216956	ParameterType	BBuf * *		1216650	0					
ANR	1216957	Identifier	pbuf		1216650	1					
ANR	1216958	CFGEntryNode	ENTRY		1216650		True				
ANR	1216959	CFGExitNode	EXIT		1216650		True				
ANR	1216960	Symbol	n1		1216650						
ANR	1216961	Symbol	NULL		1216650						
ANR	1216962	Symbol	not_code_range_buf		1216650						
ANR	1216963	Symbol	data1		1216650						
ANR	1216964	Symbol	i		1216650						
ANR	1216965	Symbol	bbuf1 -> p		1216650						
ANR	1216966	Symbol	not2		1216650						
ANR	1216967	Symbol	not1		1216650						
ANR	1216968	Symbol	SET_ALL_MULTI_BYTE_RANGE		1216650						
ANR	1216969	Symbol	bbuf2		1216650						
ANR	1216970	Symbol	r		1216650						
ANR	1216971	Symbol	bbuf1		1216650						
ANR	1216972	Symbol	* i		1216650						
ANR	1216973	Symbol	IS_NULL		1216650						
ANR	1216974	Symbol	pbuf		1216650						
ANR	1216975	Symbol	bbuf_clone		1216650						
ANR	1216976	Symbol	from		1216650						
ANR	1216977	Symbol	add_code_range_to_buf		1216650						
ANR	1216978	Symbol	enc		1216650						
ANR	1216979	Symbol	to		1216650						
ANR	1216980	Symbol	* pbuf		1216650						
ANR	1216981	Symbol	* bbuf1		1216650						
ANR	1216982	Symbol	* data1		1216650						
ANR	1216983	Function	and_code_range1	1883:0:40114:40866							
ANR	1216984	FunctionDef	"and_code_range1 (BBuf * * pbuf , OnigCodePoint from1 , OnigCodePoint to1 , OnigCodePoint * data , int n)"		1216983	0					
ANR	1216985	CompoundStatement		1886:0:40231:40866	1216983	0					
ANR	1216986	IdentifierDeclStatement	"int i , r ;"	1887:2:40235:40243	1216983	0	True				
ANR	1216987	IdentifierDecl	i		1216983	0					
ANR	1216988	IdentifierDeclType	int		1216983	0					
ANR	1216989	Identifier	i		1216983	1					
ANR	1216990	IdentifierDecl	r		1216983	1					
ANR	1216991	IdentifierDeclType	int		1216983	0					
ANR	1216992	Identifier	r		1216983	1					
ANR	1216993	IdentifierDeclStatement	"OnigCodePoint from2 , to2 ;"	1888:2:40247:40271	1216983	1	True				
ANR	1216994	IdentifierDecl	from2		1216983	0					
ANR	1216995	IdentifierDeclType	OnigCodePoint		1216983	0					
ANR	1216996	Identifier	from2		1216983	1					
ANR	1216997	IdentifierDecl	to2		1216983	1					
ANR	1216998	IdentifierDeclType	OnigCodePoint		1216983	0					
ANR	1216999	Identifier	to2		1216983	1					
ANR	1217000	ForStatement	for ( i = 0 ; i < n ; i ++ )		1216983	2					
ANR	1217001	ForInit	i = 0 ;	1890:7:40281:40286	1216983	0	True				
ANR	1217002	AssignmentExpression	i = 0		1216983	0		=			
ANR	1217003	Identifier	i		1216983	0					
ANR	1217004	PrimaryExpression	0		1216983	1					
ANR	1217005	Condition	i < n	1890:14:40288:40292	1216983	1	True				
ANR	1217006	RelationalExpression	i < n		1216983	0		<			
ANR	1217007	Identifier	i		1216983	0					
ANR	1217008	Identifier	n		1216983	1					
ANR	1217009	PostIncDecOperationExpression	i ++	1890:21:40295:40297	1216983	2	True				
ANR	1217010	Identifier	i		1216983	0					
ANR	1217011	IncDec	++		1216983	1					
ANR	1217012	CompoundStatement		5:26:68:68	1216983	3					
ANR	1217013	ExpressionStatement	from2 = data [ i * 2 ]	1891:4:40306:40323	1216983	0	True				
ANR	1217014	AssignmentExpression	from2 = data [ i * 2 ]		1216983	0		=			
ANR	1217015	Identifier	from2		1216983	0					
ANR	1217016	ArrayIndexing	data [ i * 2 ]		1216983	1					
ANR	1217017	Identifier	data		1216983	0					
ANR	1217018	MultiplicativeExpression	i * 2		1216983	1		*			
ANR	1217019	Identifier	i		1216983	0					
ANR	1217020	PrimaryExpression	2		1216983	1					
ANR	1217021	ExpressionStatement	to2 = data [ i * 2 + 1 ]	1892:4:40329:40348	1216983	1	True				
ANR	1217022	AssignmentExpression	to2 = data [ i * 2 + 1 ]		1216983	0		=			
ANR	1217023	Identifier	to2		1216983	0					
ANR	1217024	ArrayIndexing	data [ i * 2 + 1 ]		1216983	1					
ANR	1217025	Identifier	data		1216983	0					
ANR	1217026	AdditiveExpression	i * 2 + 1		1216983	1		+			
ANR	1217027	MultiplicativeExpression	i * 2		1216983	0		*			
ANR	1217028	Identifier	i		1216983	0					
ANR	1217029	PrimaryExpression	2		1216983	1					
ANR	1217030	PrimaryExpression	1		1216983	1					
ANR	1217031	IfStatement	if ( from2 < from1 )		1216983	2					
ANR	1217032	Condition	from2 < from1	1893:8:40358:40370	1216983	0	True				
ANR	1217033	RelationalExpression	from2 < from1		1216983	0		<			
ANR	1217034	Identifier	from2		1216983	0					
ANR	1217035	Identifier	from1		1216983	1					
ANR	1217036	CompoundStatement		8:23:141:141	1216983	1					
ANR	1217037	IfStatement	if ( to2 < from1 )		1216983	0					
ANR	1217038	Condition	to2 < from1	1894:10:40385:40395	1216983	0	True				
ANR	1217039	RelationalExpression	to2 < from1		1216983	0		<			
ANR	1217040	Identifier	to2		1216983	0					
ANR	1217041	Identifier	from1		1216983	1					
ANR	1217042	ContinueStatement	continue ;	1894:23:40398:40406	1216983	1	True				
ANR	1217043	ElseStatement	else		1216983	0					
ANR	1217044	CompoundStatement		10:11:187:187	1216983	0					
ANR	1217045	ExpressionStatement	from1 = to2 + 1	1896:1:40422:40437	1216983	0	True				
ANR	1217046	AssignmentExpression	from1 = to2 + 1		1216983	0		=			
ANR	1217047	Identifier	from1		1216983	0					
ANR	1217048	AdditiveExpression	to2 + 1		1216983	1		+			
ANR	1217049	Identifier	to2		1216983	0					
ANR	1217050	PrimaryExpression	1		1216983	1					
ANR	1217051	ElseStatement	else		1216983	0					
ANR	1217052	IfStatement	if ( from2 <= to1 )		1216983	0					
ANR	1217053	Condition	from2 <= to1	1899:13:40466:40477	1216983	0	True				
ANR	1217054	RelationalExpression	from2 <= to1		1216983	0		<=			
ANR	1217055	Identifier	from2		1216983	0					
ANR	1217056	Identifier	to1		1216983	1					
ANR	1217057	CompoundStatement		14:27:248:248	1216983	1					
ANR	1217058	IfStatement	if ( to2 < to1 )		1216983	0					
ANR	1217059	Condition	to2 < to1	1900:10:40492:40500	1216983	0	True				
ANR	1217060	RelationalExpression	to2 < to1		1216983	0		<			
ANR	1217061	Identifier	to2		1216983	0					
ANR	1217062	Identifier	to1		1216983	1					
ANR	1217063	CompoundStatement		15:21:271:271	1216983	1					
ANR	1217064	IfStatement	if ( from1 <= from2 - 1 )		1216983	0					
ANR	1217065	Condition	from1 <= from2 - 1	1901:5:40510:40527	1216983	0	True				
ANR	1217066	RelationalExpression	from1 <= from2 - 1		1216983	0		<=			
ANR	1217067	Identifier	from1		1216983	0					
ANR	1217068	AdditiveExpression	from2 - 1		1216983	1		-			
ANR	1217069	Identifier	from2		1216983	0					
ANR	1217070	PrimaryExpression	1		1216983	1					
ANR	1217071	CompoundStatement		16:25:298:298	1216983	1					
ANR	1217072	ExpressionStatement	"r = add_code_range_to_buf ( pbuf , from1 , from2 - 1 )"	1902:3:40535:40582	1216983	0	True				
ANR	1217073	AssignmentExpression	"r = add_code_range_to_buf ( pbuf , from1 , from2 - 1 )"		1216983	0		=			
ANR	1217074	Identifier	r		1216983	0					
ANR	1217075	CallExpression	"add_code_range_to_buf ( pbuf , from1 , from2 - 1 )"		1216983	1					
ANR	1217076	Callee	add_code_range_to_buf		1216983	0					
ANR	1217077	Identifier	add_code_range_to_buf		1216983	0					
ANR	1217078	ArgumentList	pbuf		1216983	1					
ANR	1217079	Argument	pbuf		1216983	0					
ANR	1217080	Identifier	pbuf		1216983	0					
ANR	1217081	Argument	from1		1216983	1					
ANR	1217082	Identifier	from1		1216983	0					
ANR	1217083	Argument	from2 - 1		1216983	2					
ANR	1217084	AdditiveExpression	from2 - 1		1216983	0		-			
ANR	1217085	Identifier	from2		1216983	0					
ANR	1217086	PrimaryExpression	1		1216983	1					
ANR	1217087	IfStatement	if ( r != 0 )		1216983	1					
ANR	1217088	Condition	r != 0	1903:7:40591:40596	1216983	0	True				
ANR	1217089	EqualityExpression	r != 0		1216983	0		!=			
ANR	1217090	Identifier	r		1216983	0					
ANR	1217091	PrimaryExpression	0		1216983	1					
ANR	1217092	ReturnStatement	return r ;	1903:15:40599:40607	1216983	1	True				
ANR	1217093	Identifier	r		1216983	0					
ANR	1217094	ExpressionStatement	from1 = to2 + 1	1905:1:40613:40628	1216983	1	True				
ANR	1217095	AssignmentExpression	from1 = to2 + 1		1216983	0		=			
ANR	1217096	Identifier	from1		1216983	0					
ANR	1217097	AdditiveExpression	to2 + 1		1216983	1		+			
ANR	1217098	Identifier	to2		1216983	0					
ANR	1217099	PrimaryExpression	1		1216983	1					
ANR	1217100	ElseStatement	else		1216983	0					
ANR	1217101	CompoundStatement		22:11:417:417	1216983	0					
ANR	1217102	ExpressionStatement	to1 = from2 - 1	1908:1:40652:40667	1216983	0	True				
ANR	1217103	AssignmentExpression	to1 = from2 - 1		1216983	0		=			
ANR	1217104	Identifier	to1		1216983	0					
ANR	1217105	AdditiveExpression	from2 - 1		1216983	1		-			
ANR	1217106	Identifier	from2		1216983	0					
ANR	1217107	PrimaryExpression	1		1216983	1					
ANR	1217108	ElseStatement	else		1216983	0					
ANR	1217109	CompoundStatement		26:9:460:460	1216983	0					
ANR	1217110	ExpressionStatement	from1 = from2	1912:6:40700:40713	1216983	0	True				
ANR	1217111	AssignmentExpression	from1 = from2		1216983	0		=			
ANR	1217112	Identifier	from1		1216983	0					
ANR	1217113	Identifier	from2		1216983	1					
ANR	1217114	IfStatement	if ( from1 > to1 )		1216983	3					
ANR	1217115	Condition	from1 > to1	1914:8:40729:40739	1216983	0	True				
ANR	1217116	RelationalExpression	from1 > to1		1216983	0		>			
ANR	1217117	Identifier	from1		1216983	0					
ANR	1217118	Identifier	to1		1216983	1					
ANR	1217119	BreakStatement	break ;	1914:21:40742:40747	1216983	1	True				
ANR	1217120	IfStatement	if ( from1 <= to1 )		1216983	3					
ANR	1217121	Condition	from1 <= to1	1916:6:40759:40770	1216983	0	True				
ANR	1217122	RelationalExpression	from1 <= to1		1216983	0		<=			
ANR	1217123	Identifier	from1		1216983	0					
ANR	1217124	Identifier	to1		1216983	1					
ANR	1217125	CompoundStatement		31:20:541:541	1216983	1					
ANR	1217126	ExpressionStatement	"r = add_code_range_to_buf ( pbuf , from1 , to1 )"	1917:4:40779:40822	1216983	0	True				
ANR	1217127	AssignmentExpression	"r = add_code_range_to_buf ( pbuf , from1 , to1 )"		1216983	0		=			
ANR	1217128	Identifier	r		1216983	0					
ANR	1217129	CallExpression	"add_code_range_to_buf ( pbuf , from1 , to1 )"		1216983	1					
ANR	1217130	Callee	add_code_range_to_buf		1216983	0					
ANR	1217131	Identifier	add_code_range_to_buf		1216983	0					
ANR	1217132	ArgumentList	pbuf		1216983	1					
ANR	1217133	Argument	pbuf		1216983	0					
ANR	1217134	Identifier	pbuf		1216983	0					
ANR	1217135	Argument	from1		1216983	1					
ANR	1217136	Identifier	from1		1216983	0					
ANR	1217137	Argument	to1		1216983	2					
ANR	1217138	Identifier	to1		1216983	0					
ANR	1217139	IfStatement	if ( r != 0 )		1216983	1					
ANR	1217140	Condition	r != 0	1918:8:40832:40837	1216983	0	True				
ANR	1217141	EqualityExpression	r != 0		1216983	0		!=			
ANR	1217142	Identifier	r		1216983	0					
ANR	1217143	PrimaryExpression	0		1216983	1					
ANR	1217144	ReturnStatement	return r ;	1918:16:40840:40848	1216983	1	True				
ANR	1217145	Identifier	r		1216983	0					
ANR	1217146	ReturnStatement	return 0 ;	1920:2:40856:40864	1216983	4	True				
ANR	1217147	PrimaryExpression	0		1216983	0					
ANR	1217148	ReturnType	static int		1216983	1					
ANR	1217149	Identifier	and_code_range1		1216983	2					
ANR	1217150	ParameterList	"BBuf * * pbuf , OnigCodePoint from1 , OnigCodePoint to1 , OnigCodePoint * data , int n"		1216983	3					
ANR	1217151	Parameter	BBuf * * pbuf	1884:16:40141:40151	1216983	0	True				
ANR	1217152	ParameterType	BBuf * *		1216983	0					
ANR	1217153	Identifier	pbuf		1216983	1					
ANR	1217154	Parameter	OnigCodePoint from1	1884:29:40154:40172	1216983	1	True				
ANR	1217155	ParameterType	OnigCodePoint		1216983	0					
ANR	1217156	Identifier	from1		1216983	1					
ANR	1217157	Parameter	OnigCodePoint to1	1884:50:40175:40191	1216983	2	True				
ANR	1217158	ParameterType	OnigCodePoint		1216983	0					
ANR	1217159	Identifier	to1		1216983	1					
ANR	1217160	Parameter	OnigCodePoint * data	1885:9:40203:40221	1216983	3	True				
ANR	1217161	ParameterType	OnigCodePoint *		1216983	0					
ANR	1217162	Identifier	data		1216983	1					
ANR	1217163	Parameter	int n	1885:30:40224:40228	1216983	4	True				
ANR	1217164	ParameterType	int		1216983	0					
ANR	1217165	Identifier	n		1216983	1					
ANR	1217166	CFGEntryNode	ENTRY		1216983		True				
ANR	1217167	CFGExitNode	EXIT		1216983		True				
ANR	1217168	Symbol	r		1216983						
ANR	1217169	Symbol	* i		1216983						
ANR	1217170	Symbol	data		1216983						
ANR	1217171	Symbol	from1		1216983						
ANR	1217172	Symbol	to2		1216983						
ANR	1217173	Symbol	pbuf		1216983						
ANR	1217174	Symbol	to1		1216983						
ANR	1217175	Symbol	i		1216983						
ANR	1217176	Symbol	from2		1216983						
ANR	1217177	Symbol	add_code_range_to_buf		1216983						
ANR	1217178	Symbol	* data		1216983						
ANR	1217179	Symbol	n		1216983						
ANR	1217180	Function	and_code_range_buf	1923:0:40869:42199							
ANR	1217181	FunctionDef	"and_code_range_buf (BBuf * bbuf1 , int not1 , BBuf * bbuf2 , int not2 , BBuf * * pbuf)"		1217180	0					
ANR	1217182	CompoundStatement		1925:0:40958:42199	1217180	0					
ANR	1217183	IdentifierDeclStatement	int r ;	1926:2:40962:40967	1217180	0	True				
ANR	1217184	IdentifierDecl	r		1217180	0					
ANR	1217185	IdentifierDeclType	int		1217180	0					
ANR	1217186	Identifier	r		1217180	1					
ANR	1217187	IdentifierDeclStatement	"OnigCodePoint i , j , n1 , n2 , * data1 , * data2 ;"	1927:2:40971:41013	1217180	1	True				
ANR	1217188	IdentifierDecl	i		1217180	0					
ANR	1217189	IdentifierDeclType	OnigCodePoint		1217180	0					
ANR	1217190	Identifier	i		1217180	1					
ANR	1217191	IdentifierDecl	j		1217180	1					
ANR	1217192	IdentifierDeclType	OnigCodePoint		1217180	0					
ANR	1217193	Identifier	j		1217180	1					
ANR	1217194	IdentifierDecl	n1		1217180	2					
ANR	1217195	IdentifierDeclType	OnigCodePoint		1217180	0					
ANR	1217196	Identifier	n1		1217180	1					
ANR	1217197	IdentifierDecl	n2		1217180	3					
ANR	1217198	IdentifierDeclType	OnigCodePoint		1217180	0					
ANR	1217199	Identifier	n2		1217180	1					
ANR	1217200	IdentifierDecl	* data1		1217180	4					
ANR	1217201	IdentifierDeclType	OnigCodePoint *		1217180	0					
ANR	1217202	Identifier	data1		1217180	1					
ANR	1217203	IdentifierDecl	* data2		1217180	5					
ANR	1217204	IdentifierDeclType	OnigCodePoint *		1217180	0					
ANR	1217205	Identifier	data2		1217180	1					
ANR	1217206	IdentifierDeclStatement	"OnigCodePoint from , to , from1 , to1 , from2 , to2 ;"	1928:2:41017:41063	1217180	2	True				
ANR	1217207	IdentifierDecl	from		1217180	0					
ANR	1217208	IdentifierDeclType	OnigCodePoint		1217180	0					
ANR	1217209	Identifier	from		1217180	1					
ANR	1217210	IdentifierDecl	to		1217180	1					
ANR	1217211	IdentifierDeclType	OnigCodePoint		1217180	0					
ANR	1217212	Identifier	to		1217180	1					
ANR	1217213	IdentifierDecl	from1		1217180	2					
ANR	1217214	IdentifierDeclType	OnigCodePoint		1217180	0					
ANR	1217215	Identifier	from1		1217180	1					
ANR	1217216	IdentifierDecl	to1		1217180	3					
ANR	1217217	IdentifierDeclType	OnigCodePoint		1217180	0					
ANR	1217218	Identifier	to1		1217180	1					
ANR	1217219	IdentifierDecl	from2		1217180	4					
ANR	1217220	IdentifierDeclType	OnigCodePoint		1217180	0					
ANR	1217221	Identifier	from2		1217180	1					
ANR	1217222	IdentifierDecl	to2		1217180	5					
ANR	1217223	IdentifierDeclType	OnigCodePoint		1217180	0					
ANR	1217224	Identifier	to2		1217180	1					
ANR	1217225	ExpressionStatement	* pbuf = ( BBuf * ) NULL	1930:2:41068:41088	1217180	3	True				
ANR	1217226	AssignmentExpression	* pbuf = ( BBuf * ) NULL		1217180	0		=			
ANR	1217227	UnaryOperationExpression	* pbuf		1217180	0					
ANR	1217228	UnaryOperator	*		1217180	0					
ANR	1217229	Identifier	pbuf		1217180	1					
ANR	1217230	CastExpression	( BBuf * ) NULL		1217180	1					
ANR	1217231	CastTarget	BBuf *		1217180	0					
ANR	1217232	Identifier	NULL		1217180	1					
ANR	1217233	IfStatement	if ( IS_NULL ( bbuf1 ) )		1217180	4					
ANR	1217234	Condition	IS_NULL ( bbuf1 )	1931:6:41096:41109	1217180	0	True				
ANR	1217235	CallExpression	IS_NULL ( bbuf1 )		1217180	0					
ANR	1217236	Callee	IS_NULL		1217180	0					
ANR	1217237	Identifier	IS_NULL		1217180	0					
ANR	1217238	ArgumentList	bbuf1		1217180	1					
ANR	1217239	Argument	bbuf1		1217180	0					
ANR	1217240	Identifier	bbuf1		1217180	0					
ANR	1217241	CompoundStatement		7:22:153:153	1217180	1					
ANR	1217242	IfStatement	if ( not1 != 0 && IS_NOT_NULL ( bbuf2 ) )		1217180	0					
ANR	1217243	Condition	not1 != 0 && IS_NOT_NULL ( bbuf2 )	1932:8:41122:41152	1217180	0	True				
ANR	1217244	AndExpression	not1 != 0 && IS_NOT_NULL ( bbuf2 )		1217180	0		&&			
ANR	1217245	EqualityExpression	not1 != 0		1217180	0		!=			
ANR	1217246	Identifier	not1		1217180	0					
ANR	1217247	PrimaryExpression	0		1217180	1					
ANR	1217248	CallExpression	IS_NOT_NULL ( bbuf2 )		1217180	1					
ANR	1217249	Callee	IS_NOT_NULL		1217180	0					
ANR	1217250	Identifier	IS_NOT_NULL		1217180	0					
ANR	1217251	ArgumentList	bbuf2		1217180	1					
ANR	1217252	Argument	bbuf2		1217180	0					
ANR	1217253	Identifier	bbuf2		1217180	0					
ANR	1217254	ReturnStatement	"return bbuf_clone ( pbuf , bbuf2 ) ;"	1933:6:41190:41220	1217180	1	True				
ANR	1217255	CallExpression	"bbuf_clone ( pbuf , bbuf2 )"		1217180	0					
ANR	1217256	Callee	bbuf_clone		1217180	0					
ANR	1217257	Identifier	bbuf_clone		1217180	0					
ANR	1217258	ArgumentList	pbuf		1217180	1					
ANR	1217259	Argument	pbuf		1217180	0					
ANR	1217260	Identifier	pbuf		1217180	0					
ANR	1217261	Argument	bbuf2		1217180	1					
ANR	1217262	Identifier	bbuf2		1217180	0					
ANR	1217263	ReturnStatement	return 0 ;	1934:4:41226:41234	1217180	1	True				
ANR	1217264	PrimaryExpression	0		1217180	0					
ANR	1217265	ElseStatement	else		1217180	0					
ANR	1217266	IfStatement	if ( IS_NULL ( bbuf2 ) )		1217180	0					
ANR	1217267	Condition	IS_NULL ( bbuf2 )	1936:11:41251:41264	1217180	0	True				
ANR	1217268	CallExpression	IS_NULL ( bbuf2 )		1217180	0					
ANR	1217269	Callee	IS_NULL		1217180	0					
ANR	1217270	Identifier	IS_NULL		1217180	0					
ANR	1217271	ArgumentList	bbuf2		1217180	1					
ANR	1217272	Argument	bbuf2		1217180	0					
ANR	1217273	Identifier	bbuf2		1217180	0					
ANR	1217274	CompoundStatement		12:27:308:308	1217180	1					
ANR	1217275	IfStatement	if ( not2 != 0 )		1217180	0					
ANR	1217276	Condition	not2 != 0	1937:8:41277:41285	1217180	0	True				
ANR	1217277	EqualityExpression	not2 != 0		1217180	0		!=			
ANR	1217278	Identifier	not2		1217180	0					
ANR	1217279	PrimaryExpression	0		1217180	1					
ANR	1217280	ReturnStatement	"return bbuf_clone ( pbuf , bbuf1 ) ;"	1938:6:41294:41324	1217180	1	True				
ANR	1217281	CallExpression	"bbuf_clone ( pbuf , bbuf1 )"		1217180	0					
ANR	1217282	Callee	bbuf_clone		1217180	0					
ANR	1217283	Identifier	bbuf_clone		1217180	0					
ANR	1217284	ArgumentList	pbuf		1217180	1					
ANR	1217285	Argument	pbuf		1217180	0					
ANR	1217286	Identifier	pbuf		1217180	0					
ANR	1217287	Argument	bbuf1		1217180	1					
ANR	1217288	Identifier	bbuf1		1217180	0					
ANR	1217289	ReturnStatement	return 0 ;	1939:4:41330:41338	1217180	1	True				
ANR	1217290	PrimaryExpression	0		1217180	0					
ANR	1217291	IfStatement	if ( not1 != 0 )		1217180	5					
ANR	1217292	Condition	not1 != 0	1942:6:41351:41359	1217180	0	True				
ANR	1217293	EqualityExpression	not1 != 0		1217180	0		!=			
ANR	1217294	Identifier	not1		1217180	0					
ANR	1217295	PrimaryExpression	0		1217180	1					
ANR	1217296	ExpressionStatement	"SWAP_BBUF_NOT ( bbuf1 , not1 , bbuf2 , not2 )"	1943:4:41366:41405	1217180	1	True				
ANR	1217297	CallExpression	"SWAP_BBUF_NOT ( bbuf1 , not1 , bbuf2 , not2 )"		1217180	0					
ANR	1217298	Callee	SWAP_BBUF_NOT		1217180	0					
ANR	1217299	Identifier	SWAP_BBUF_NOT		1217180	0					
ANR	1217300	ArgumentList	bbuf1		1217180	1					
ANR	1217301	Argument	bbuf1		1217180	0					
ANR	1217302	Identifier	bbuf1		1217180	0					
ANR	1217303	Argument	not1		1217180	1					
ANR	1217304	Identifier	not1		1217180	0					
ANR	1217305	Argument	bbuf2		1217180	2					
ANR	1217306	Identifier	bbuf2		1217180	0					
ANR	1217307	Argument	not2		1217180	3					
ANR	1217308	Identifier	not2		1217180	0					
ANR	1217309	ExpressionStatement	data1 = ( OnigCodePoint * ) ( bbuf1 -> p )	1945:2:41410:41445	1217180	6	True				
ANR	1217310	AssignmentExpression	data1 = ( OnigCodePoint * ) ( bbuf1 -> p )		1217180	0		=			
ANR	1217311	Identifier	data1		1217180	0					
ANR	1217312	CastExpression	( OnigCodePoint * ) ( bbuf1 -> p )		1217180	1					
ANR	1217313	CastTarget	OnigCodePoint *		1217180	0					
ANR	1217314	PtrMemberAccess	bbuf1 -> p		1217180	1					
ANR	1217315	Identifier	bbuf1		1217180	0					
ANR	1217316	Identifier	p		1217180	1					
ANR	1217317	ExpressionStatement	data2 = ( OnigCodePoint * ) ( bbuf2 -> p )	1946:2:41449:41484	1217180	7	True				
ANR	1217318	AssignmentExpression	data2 = ( OnigCodePoint * ) ( bbuf2 -> p )		1217180	0		=			
ANR	1217319	Identifier	data2		1217180	0					
ANR	1217320	CastExpression	( OnigCodePoint * ) ( bbuf2 -> p )		1217180	1					
ANR	1217321	CastTarget	OnigCodePoint *		1217180	0					
ANR	1217322	PtrMemberAccess	bbuf2 -> p		1217180	1					
ANR	1217323	Identifier	bbuf2		1217180	0					
ANR	1217324	Identifier	p		1217180	1					
ANR	1217325	ExpressionStatement	"GET_CODE_POINT ( n1 , data1 )"	1947:2:41488:41513	1217180	8	True				
ANR	1217326	CallExpression	"GET_CODE_POINT ( n1 , data1 )"		1217180	0					
ANR	1217327	Callee	GET_CODE_POINT		1217180	0					
ANR	1217328	Identifier	GET_CODE_POINT		1217180	0					
ANR	1217329	ArgumentList	n1		1217180	1					
ANR	1217330	Argument	n1		1217180	0					
ANR	1217331	Identifier	n1		1217180	0					
ANR	1217332	Argument	data1		1217180	1					
ANR	1217333	Identifier	data1		1217180	0					
ANR	1217334	ExpressionStatement	"GET_CODE_POINT ( n2 , data2 )"	1948:2:41517:41542	1217180	9	True				
ANR	1217335	CallExpression	"GET_CODE_POINT ( n2 , data2 )"		1217180	0					
ANR	1217336	Callee	GET_CODE_POINT		1217180	0					
ANR	1217337	Identifier	GET_CODE_POINT		1217180	0					
ANR	1217338	ArgumentList	n2		1217180	1					
ANR	1217339	Argument	n2		1217180	0					
ANR	1217340	Identifier	n2		1217180	0					
ANR	1217341	Argument	data2		1217180	1					
ANR	1217342	Identifier	data2		1217180	0					
ANR	1217343	ExpressionStatement	data1 ++	1949:2:41546:41553	1217180	10	True				
ANR	1217344	PostIncDecOperationExpression	data1 ++		1217180	0					
ANR	1217345	Identifier	data1		1217180	0					
ANR	1217346	IncDec	++		1217180	1					
ANR	1217347	ExpressionStatement	data2 ++	1950:2:41557:41564	1217180	11	True				
ANR	1217348	PostIncDecOperationExpression	data2 ++		1217180	0					
ANR	1217349	Identifier	data2		1217180	0					
ANR	1217350	IncDec	++		1217180	1					
ANR	1217351	IfStatement	if ( not2 == 0 && not1 == 0 )		1217180	12					
ANR	1217352	Condition	not2 == 0 && not1 == 0	1952:6:41573:41594	1217180	0	True				
ANR	1217353	AndExpression	not2 == 0 && not1 == 0		1217180	0		&&			
ANR	1217354	EqualityExpression	not2 == 0		1217180	0		==			
ANR	1217355	Identifier	not2		1217180	0					
ANR	1217356	PrimaryExpression	0		1217180	1					
ANR	1217357	EqualityExpression	not1 == 0		1217180	1		==			
ANR	1217358	Identifier	not1		1217180	0					
ANR	1217359	PrimaryExpression	0		1217180	1					
ANR	1217360	CompoundStatement		28:30:638:638	1217180	1					
ANR	1217361	ForStatement	for ( i = 0 ; i < n1 ; i ++ )		1217180	0					
ANR	1217362	ForInit	i = 0 ;	1953:9:41622:41627	1217180	0	True				
ANR	1217363	AssignmentExpression	i = 0		1217180	0		=			
ANR	1217364	Identifier	i		1217180	0					
ANR	1217365	PrimaryExpression	0		1217180	1					
ANR	1217366	Condition	i < n1	1953:16:41629:41634	1217180	1	True				
ANR	1217367	RelationalExpression	i < n1		1217180	0		<			
ANR	1217368	Identifier	i		1217180	0					
ANR	1217369	Identifier	n1		1217180	1					
ANR	1217370	PostIncDecOperationExpression	i ++	1953:24:41637:41639	1217180	2	True				
ANR	1217371	Identifier	i		1217180	0					
ANR	1217372	IncDec	++		1217180	1					
ANR	1217373	CompoundStatement		29:29:683:683	1217180	3					
ANR	1217374	ExpressionStatement	from1 = data1 [ i * 2 ]	1954:6:41650:41668	1217180	0	True				
ANR	1217375	AssignmentExpression	from1 = data1 [ i * 2 ]		1217180	0		=			
ANR	1217376	Identifier	from1		1217180	0					
ANR	1217377	ArrayIndexing	data1 [ i * 2 ]		1217180	1					
ANR	1217378	Identifier	data1		1217180	0					
ANR	1217379	MultiplicativeExpression	i * 2		1217180	1		*			
ANR	1217380	Identifier	i		1217180	0					
ANR	1217381	PrimaryExpression	2		1217180	1					
ANR	1217382	ExpressionStatement	to1 = data1 [ i * 2 + 1 ]	1955:6:41676:41696	1217180	1	True				
ANR	1217383	AssignmentExpression	to1 = data1 [ i * 2 + 1 ]		1217180	0		=			
ANR	1217384	Identifier	to1		1217180	0					
ANR	1217385	ArrayIndexing	data1 [ i * 2 + 1 ]		1217180	1					
ANR	1217386	Identifier	data1		1217180	0					
ANR	1217387	AdditiveExpression	i * 2 + 1		1217180	1		+			
ANR	1217388	MultiplicativeExpression	i * 2		1217180	0		*			
ANR	1217389	Identifier	i		1217180	0					
ANR	1217390	PrimaryExpression	2		1217180	1					
ANR	1217391	PrimaryExpression	1		1217180	1					
ANR	1217392	ForStatement	for ( j = 0 ; j < n2 ; j ++ )		1217180	2					
ANR	1217393	ForInit	j = 0 ;	1956:11:41709:41714	1217180	0	True				
ANR	1217394	AssignmentExpression	j = 0		1217180	0		=			
ANR	1217395	Identifier	j		1217180	0					
ANR	1217396	PrimaryExpression	0		1217180	1					
ANR	1217397	Condition	j < n2	1956:18:41716:41721	1217180	1	True				
ANR	1217398	RelationalExpression	j < n2		1217180	0		<			
ANR	1217399	Identifier	j		1217180	0					
ANR	1217400	Identifier	n2		1217180	1					
ANR	1217401	PostIncDecOperationExpression	j ++	1956:26:41724:41726	1217180	2	True				
ANR	1217402	Identifier	j		1217180	0					
ANR	1217403	IncDec	++		1217180	1					
ANR	1217404	CompoundStatement		32:31:770:770	1217180	3					
ANR	1217405	ExpressionStatement	from2 = data2 [ j * 2 ]	1957:1:41732:41750	1217180	0	True				
ANR	1217406	AssignmentExpression	from2 = data2 [ j * 2 ]		1217180	0		=			
ANR	1217407	Identifier	from2		1217180	0					
ANR	1217408	ArrayIndexing	data2 [ j * 2 ]		1217180	1					
ANR	1217409	Identifier	data2		1217180	0					
ANR	1217410	MultiplicativeExpression	j * 2		1217180	1		*			
ANR	1217411	Identifier	j		1217180	0					
ANR	1217412	PrimaryExpression	2		1217180	1					
ANR	1217413	ExpressionStatement	to2 = data2 [ j * 2 + 1 ]	1958:1:41753:41773	1217180	1	True				
ANR	1217414	AssignmentExpression	to2 = data2 [ j * 2 + 1 ]		1217180	0		=			
ANR	1217415	Identifier	to2		1217180	0					
ANR	1217416	ArrayIndexing	data2 [ j * 2 + 1 ]		1217180	1					
ANR	1217417	Identifier	data2		1217180	0					
ANR	1217418	AdditiveExpression	j * 2 + 1		1217180	1		+			
ANR	1217419	MultiplicativeExpression	j * 2		1217180	0		*			
ANR	1217420	Identifier	j		1217180	0					
ANR	1217421	PrimaryExpression	2		1217180	1					
ANR	1217422	PrimaryExpression	1		1217180	1					
ANR	1217423	IfStatement	if ( from2 > to1 )		1217180	2					
ANR	1217424	Condition	from2 > to1	1959:5:41780:41790	1217180	0	True				
ANR	1217425	RelationalExpression	from2 > to1		1217180	0		>			
ANR	1217426	Identifier	from2		1217180	0					
ANR	1217427	Identifier	to1		1217180	1					
ANR	1217428	BreakStatement	break ;	1959:18:41793:41798	1217180	1	True				
ANR	1217429	IfStatement	if ( to2 < from1 )		1217180	3					
ANR	1217430	Condition	to2 < from1	1960:5:41805:41815	1217180	0	True				
ANR	1217431	RelationalExpression	to2 < from1		1217180	0		<			
ANR	1217432	Identifier	to2		1217180	0					
ANR	1217433	Identifier	from1		1217180	1					
ANR	1217434	ContinueStatement	continue ;	1960:18:41818:41826	1217180	1	True				
ANR	1217435	ExpressionStatement	"from = MAX ( from1 , from2 )"	1961:1:41829:41853	1217180	4	True				
ANR	1217436	AssignmentExpression	"from = MAX ( from1 , from2 )"		1217180	0		=			
ANR	1217437	Identifier	from		1217180	0					
ANR	1217438	CallExpression	"MAX ( from1 , from2 )"		1217180	1					
ANR	1217439	Callee	MAX		1217180	0					
ANR	1217440	Identifier	MAX		1217180	0					
ANR	1217441	ArgumentList	from1		1217180	1					
ANR	1217442	Argument	from1		1217180	0					
ANR	1217443	Identifier	from1		1217180	0					
ANR	1217444	Argument	from2		1217180	1					
ANR	1217445	Identifier	from2		1217180	0					
ANR	1217446	ExpressionStatement	"to = MIN ( to1 , to2 )"	1962:1:41856:41876	1217180	5	True				
ANR	1217447	AssignmentExpression	"to = MIN ( to1 , to2 )"		1217180	0		=			
ANR	1217448	Identifier	to		1217180	0					
ANR	1217449	CallExpression	"MIN ( to1 , to2 )"		1217180	1					
ANR	1217450	Callee	MIN		1217180	0					
ANR	1217451	Identifier	MIN		1217180	0					
ANR	1217452	ArgumentList	to1		1217180	1					
ANR	1217453	Argument	to1		1217180	0					
ANR	1217454	Identifier	to1		1217180	0					
ANR	1217455	Argument	to2		1217180	1					
ANR	1217456	Identifier	to2		1217180	0					
ANR	1217457	ExpressionStatement	"r = add_code_range_to_buf ( pbuf , from , to )"	1963:1:41879:41920	1217180	6	True				
ANR	1217458	AssignmentExpression	"r = add_code_range_to_buf ( pbuf , from , to )"		1217180	0		=			
ANR	1217459	Identifier	r		1217180	0					
ANR	1217460	CallExpression	"add_code_range_to_buf ( pbuf , from , to )"		1217180	1					
ANR	1217461	Callee	add_code_range_to_buf		1217180	0					
ANR	1217462	Identifier	add_code_range_to_buf		1217180	0					
ANR	1217463	ArgumentList	pbuf		1217180	1					
ANR	1217464	Argument	pbuf		1217180	0					
ANR	1217465	Identifier	pbuf		1217180	0					
ANR	1217466	Argument	from		1217180	1					
ANR	1217467	Identifier	from		1217180	0					
ANR	1217468	Argument	to		1217180	2					
ANR	1217469	Identifier	to		1217180	0					
ANR	1217470	IfStatement	if ( r != 0 )		1217180	7					
ANR	1217471	Condition	r != 0	1964:5:41927:41932	1217180	0	True				
ANR	1217472	EqualityExpression	r != 0		1217180	0		!=			
ANR	1217473	Identifier	r		1217180	0					
ANR	1217474	PrimaryExpression	0		1217180	1					
ANR	1217475	ReturnStatement	return r ;	1964:13:41935:41943	1217180	1	True				
ANR	1217476	Identifier	r		1217180	0					
ANR	1217477	ElseStatement	else		1217180	0					
ANR	1217478	IfStatement	if ( not1 == 0 )		1217180	0					
ANR	1217479	Condition	not1 == 0	1968:11:41974:41982	1217180	0	True				
ANR	1217480	EqualityExpression	not1 == 0		1217180	0		==			
ANR	1217481	Identifier	not1		1217180	0					
ANR	1217482	PrimaryExpression	0		1217180	1					
ANR	1217483	CompoundStatement		44:22:1026:1026	1217180	1					
ANR	1217484	ForStatement	for ( i = 0 ; i < n1 ; i ++ )		1217180	0					
ANR	1217485	ForInit	i = 0 ;	1969:9:42016:42021	1217180	0	True				
ANR	1217486	AssignmentExpression	i = 0		1217180	0		=			
ANR	1217487	Identifier	i		1217180	0					
ANR	1217488	PrimaryExpression	0		1217180	1					
ANR	1217489	Condition	i < n1	1969:16:42023:42028	1217180	1	True				
ANR	1217490	RelationalExpression	i < n1		1217180	0		<			
ANR	1217491	Identifier	i		1217180	0					
ANR	1217492	Identifier	n1		1217180	1					
ANR	1217493	PostIncDecOperationExpression	i ++	1969:24:42031:42033	1217180	2	True				
ANR	1217494	Identifier	i		1217180	0					
ANR	1217495	IncDec	++		1217180	1					
ANR	1217496	CompoundStatement		45:29:1077:1077	1217180	3					
ANR	1217497	ExpressionStatement	from1 = data1 [ i * 2 ]	1970:6:42044:42062	1217180	0	True				
ANR	1217498	AssignmentExpression	from1 = data1 [ i * 2 ]		1217180	0		=			
ANR	1217499	Identifier	from1		1217180	0					
ANR	1217500	ArrayIndexing	data1 [ i * 2 ]		1217180	1					
ANR	1217501	Identifier	data1		1217180	0					
ANR	1217502	MultiplicativeExpression	i * 2		1217180	1		*			
ANR	1217503	Identifier	i		1217180	0					
ANR	1217504	PrimaryExpression	2		1217180	1					
ANR	1217505	ExpressionStatement	to1 = data1 [ i * 2 + 1 ]	1971:6:42070:42090	1217180	1	True				
ANR	1217506	AssignmentExpression	to1 = data1 [ i * 2 + 1 ]		1217180	0		=			
ANR	1217507	Identifier	to1		1217180	0					
ANR	1217508	ArrayIndexing	data1 [ i * 2 + 1 ]		1217180	1					
ANR	1217509	Identifier	data1		1217180	0					
ANR	1217510	AdditiveExpression	i * 2 + 1		1217180	1		+			
ANR	1217511	MultiplicativeExpression	i * 2		1217180	0		*			
ANR	1217512	Identifier	i		1217180	0					
ANR	1217513	PrimaryExpression	2		1217180	1					
ANR	1217514	PrimaryExpression	1		1217180	1					
ANR	1217515	ExpressionStatement	"r = and_code_range1 ( pbuf , from1 , to1 , data2 , n2 )"	1972:6:42098:42146	1217180	2	True				
ANR	1217516	AssignmentExpression	"r = and_code_range1 ( pbuf , from1 , to1 , data2 , n2 )"		1217180	0		=			
ANR	1217517	Identifier	r		1217180	0					
ANR	1217518	CallExpression	"and_code_range1 ( pbuf , from1 , to1 , data2 , n2 )"		1217180	1					
ANR	1217519	Callee	and_code_range1		1217180	0					
ANR	1217520	Identifier	and_code_range1		1217180	0					
ANR	1217521	ArgumentList	pbuf		1217180	1					
ANR	1217522	Argument	pbuf		1217180	0					
ANR	1217523	Identifier	pbuf		1217180	0					
ANR	1217524	Argument	from1		1217180	1					
ANR	1217525	Identifier	from1		1217180	0					
ANR	1217526	Argument	to1		1217180	2					
ANR	1217527	Identifier	to1		1217180	0					
ANR	1217528	Argument	data2		1217180	3					
ANR	1217529	Identifier	data2		1217180	0					
ANR	1217530	Argument	n2		1217180	4					
ANR	1217531	Identifier	n2		1217180	0					
ANR	1217532	IfStatement	if ( r != 0 )		1217180	3					
ANR	1217533	Condition	r != 0	1973:10:42158:42163	1217180	0	True				
ANR	1217534	EqualityExpression	r != 0		1217180	0		!=			
ANR	1217535	Identifier	r		1217180	0					
ANR	1217536	PrimaryExpression	0		1217180	1					
ANR	1217537	ReturnStatement	return r ;	1973:18:42166:42174	1217180	1	True				
ANR	1217538	Identifier	r		1217180	0					
ANR	1217539	ReturnStatement	return 0 ;	1977:2:42189:42197	1217180	13	True				
ANR	1217540	PrimaryExpression	0		1217180	0					
ANR	1217541	ReturnType	static int		1217180	1					
ANR	1217542	Identifier	and_code_range_buf		1217180	2					
ANR	1217543	ParameterList	"BBuf * bbuf1 , int not1 , BBuf * bbuf2 , int not2 , BBuf * * pbuf"		1217180	3					
ANR	1217544	Parameter	BBuf * bbuf1	1924:19:40899:40909	1217180	0	True				
ANR	1217545	ParameterType	BBuf *		1217180	0					
ANR	1217546	Identifier	bbuf1		1217180	1					
ANR	1217547	Parameter	int not1	1924:32:40912:40919	1217180	1	True				
ANR	1217548	ParameterType	int		1217180	0					
ANR	1217549	Identifier	not1		1217180	1					
ANR	1217550	Parameter	BBuf * bbuf2	1924:42:40922:40932	1217180	2	True				
ANR	1217551	ParameterType	BBuf *		1217180	0					
ANR	1217552	Identifier	bbuf2		1217180	1					
ANR	1217553	Parameter	int not2	1924:55:40935:40942	1217180	3	True				
ANR	1217554	ParameterType	int		1217180	0					
ANR	1217555	Identifier	not2		1217180	1					
ANR	1217556	Parameter	BBuf * * pbuf	1924:65:40945:40955	1217180	4	True				
ANR	1217557	ParameterType	BBuf * *		1217180	0					
ANR	1217558	Identifier	pbuf		1217180	1					
ANR	1217559	CFGEntryNode	ENTRY		1217180		True				
ANR	1217560	CFGExitNode	EXIT		1217180		True				
ANR	1217561	Symbol	IS_NOT_NULL		1217180						
ANR	1217562	Symbol	n1		1217180						
ANR	1217563	Symbol	n2		1217180						
ANR	1217564	Symbol	MAX		1217180						
ANR	1217565	Symbol	bbuf1 -> p		1217180						
ANR	1217566	Symbol	not2		1217180						
ANR	1217567	Symbol	not1		1217180						
ANR	1217568	Symbol	bbuf2		1217180						
ANR	1217569	Symbol	bbuf1		1217180						
ANR	1217570	Symbol	IS_NULL		1217180						
ANR	1217571	Symbol	from1		1217180						
ANR	1217572	Symbol	to2		1217180						
ANR	1217573	Symbol	and_code_range1		1217180						
ANR	1217574	Symbol	to1		1217180						
ANR	1217575	Symbol	bbuf_clone		1217180						
ANR	1217576	Symbol	from		1217180						
ANR	1217577	Symbol	from2		1217180						
ANR	1217578	Symbol	add_code_range_to_buf		1217180						
ANR	1217579	Symbol	* pbuf		1217180						
ANR	1217580	Symbol	* data2		1217180						
ANR	1217581	Symbol	* data1		1217180						
ANR	1217582	Symbol	bbuf2 -> p		1217180						
ANR	1217583	Symbol	NULL		1217180						
ANR	1217584	Symbol	data2		1217180						
ANR	1217585	Symbol	data1		1217180						
ANR	1217586	Symbol	i		1217180						
ANR	1217587	Symbol	j		1217180						
ANR	1217588	Symbol	r		1217180						
ANR	1217589	Symbol	* i		1217180						
ANR	1217590	Symbol	MIN		1217180						
ANR	1217591	Symbol	* j		1217180						
ANR	1217592	Symbol	pbuf		1217180						
ANR	1217593	Symbol	to		1217180						
ANR	1217594	Symbol	* bbuf1		1217180						
ANR	1217595	Symbol	* bbuf2		1217180						
ANR	1217596	Function	and_cclass	1980:0:42202:43311							
ANR	1217597	FunctionDef	"and_cclass (CClassNode * dest , CClassNode * cc , OnigEncoding enc)"		1217596	0					
ANR	1217598	CompoundStatement		1982:0:42276:43311	1217596	0					
ANR	1217599	IdentifierDeclStatement	"int r , not1 , not2 ;"	1983:2:42280:42297	1217596	0	True				
ANR	1217600	IdentifierDecl	r		1217596	0					
ANR	1217601	IdentifierDeclType	int		1217596	0					
ANR	1217602	Identifier	r		1217596	1					
ANR	1217603	IdentifierDecl	not1		1217596	1					
ANR	1217604	IdentifierDeclType	int		1217596	0					
ANR	1217605	Identifier	not1		1217596	1					
ANR	1217606	IdentifierDecl	not2		1217596	2					
ANR	1217607	IdentifierDeclType	int		1217596	0					
ANR	1217608	Identifier	not2		1217596	1					
ANR	1217609	IdentifierDeclStatement	"BBuf * buf1 , * buf2 , * pbuf ;"	1984:2:42301:42325	1217596	1	True				
ANR	1217610	IdentifierDecl	* buf1		1217596	0					
ANR	1217611	IdentifierDeclType	BBuf *		1217596	0					
ANR	1217612	Identifier	buf1		1217596	1					
ANR	1217613	IdentifierDecl	* buf2		1217596	1					
ANR	1217614	IdentifierDeclType	BBuf *		1217596	0					
ANR	1217615	Identifier	buf2		1217596	1					
ANR	1217616	IdentifierDecl	* pbuf		1217596	2					
ANR	1217617	IdentifierDeclType	BBuf *		1217596	0					
ANR	1217618	Identifier	pbuf		1217596	1					
ANR	1217619	IdentifierDeclStatement	"BitSetRef bsr1 , bsr2 ;"	1985:2:42329:42349	1217596	2	True				
ANR	1217620	IdentifierDecl	bsr1		1217596	0					
ANR	1217621	IdentifierDeclType	BitSetRef		1217596	0					
ANR	1217622	Identifier	bsr1		1217596	1					
ANR	1217623	IdentifierDecl	bsr2		1217596	1					
ANR	1217624	IdentifierDeclType	BitSetRef		1217596	0					
ANR	1217625	Identifier	bsr2		1217596	1					
ANR	1217626	IdentifierDeclStatement	"BitSet bs1 , bs2 ;"	1986:2:42353:42368	1217596	3	True				
ANR	1217627	IdentifierDecl	bs1		1217596	0					
ANR	1217628	IdentifierDeclType	BitSet		1217596	0					
ANR	1217629	Identifier	bs1		1217596	1					
ANR	1217630	IdentifierDecl	bs2		1217596	1					
ANR	1217631	IdentifierDeclType	BitSet		1217596	0					
ANR	1217632	Identifier	bs2		1217596	1					
ANR	1217633	ExpressionStatement	not1 = IS_NCCLASS_NOT ( dest )	1988:2:42373:42400	1217596	4	True				
ANR	1217634	AssignmentExpression	not1 = IS_NCCLASS_NOT ( dest )		1217596	0		=			
ANR	1217635	Identifier	not1		1217596	0					
ANR	1217636	CallExpression	IS_NCCLASS_NOT ( dest )		1217596	1					
ANR	1217637	Callee	IS_NCCLASS_NOT		1217596	0					
ANR	1217638	Identifier	IS_NCCLASS_NOT		1217596	0					
ANR	1217639	ArgumentList	dest		1217596	1					
ANR	1217640	Argument	dest		1217596	0					
ANR	1217641	Identifier	dest		1217596	0					
ANR	1217642	ExpressionStatement	bsr1 = dest -> bs	1989:2:42404:42419	1217596	5	True				
ANR	1217643	AssignmentExpression	bsr1 = dest -> bs		1217596	0		=			
ANR	1217644	Identifier	bsr1		1217596	0					
ANR	1217645	PtrMemberAccess	dest -> bs		1217596	1					
ANR	1217646	Identifier	dest		1217596	0					
ANR	1217647	Identifier	bs		1217596	1					
ANR	1217648	ExpressionStatement	buf1 = dest -> mbuf	1990:2:42423:42440	1217596	6	True				
ANR	1217649	AssignmentExpression	buf1 = dest -> mbuf		1217596	0		=			
ANR	1217650	Identifier	buf1		1217596	0					
ANR	1217651	PtrMemberAccess	dest -> mbuf		1217596	1					
ANR	1217652	Identifier	dest		1217596	0					
ANR	1217653	Identifier	mbuf		1217596	1					
ANR	1217654	ExpressionStatement	not2 = IS_NCCLASS_NOT ( cc )	1991:2:42444:42469	1217596	7	True				
ANR	1217655	AssignmentExpression	not2 = IS_NCCLASS_NOT ( cc )		1217596	0		=			
ANR	1217656	Identifier	not2		1217596	0					
ANR	1217657	CallExpression	IS_NCCLASS_NOT ( cc )		1217596	1					
ANR	1217658	Callee	IS_NCCLASS_NOT		1217596	0					
ANR	1217659	Identifier	IS_NCCLASS_NOT		1217596	0					
ANR	1217660	ArgumentList	cc		1217596	1					
ANR	1217661	Argument	cc		1217596	0					
ANR	1217662	Identifier	cc		1217596	0					
ANR	1217663	ExpressionStatement	bsr2 = cc -> bs	1992:2:42473:42486	1217596	8	True				
ANR	1217664	AssignmentExpression	bsr2 = cc -> bs		1217596	0		=			
ANR	1217665	Identifier	bsr2		1217596	0					
ANR	1217666	PtrMemberAccess	cc -> bs		1217596	1					
ANR	1217667	Identifier	cc		1217596	0					
ANR	1217668	Identifier	bs		1217596	1					
ANR	1217669	ExpressionStatement	buf2 = cc -> mbuf	1993:2:42490:42505	1217596	9	True				
ANR	1217670	AssignmentExpression	buf2 = cc -> mbuf		1217596	0		=			
ANR	1217671	Identifier	buf2		1217596	0					
ANR	1217672	PtrMemberAccess	cc -> mbuf		1217596	1					
ANR	1217673	Identifier	cc		1217596	0					
ANR	1217674	Identifier	mbuf		1217596	1					
ANR	1217675	IfStatement	if ( not1 != 0 )		1217596	10					
ANR	1217676	Condition	not1 != 0	1995:6:42514:42522	1217596	0	True				
ANR	1217677	EqualityExpression	not1 != 0		1217596	0		!=			
ANR	1217678	Identifier	not1		1217596	0					
ANR	1217679	PrimaryExpression	0		1217596	1					
ANR	1217680	CompoundStatement		14:17:248:248	1217596	1					
ANR	1217681	ExpressionStatement	"bitset_invert_to ( bsr1 , bs1 )"	1996:4:42531:42558	1217596	0	True				
ANR	1217682	CallExpression	"bitset_invert_to ( bsr1 , bs1 )"		1217596	0					
ANR	1217683	Callee	bitset_invert_to		1217596	0					
ANR	1217684	Identifier	bitset_invert_to		1217596	0					
ANR	1217685	ArgumentList	bsr1		1217596	1					
ANR	1217686	Argument	bsr1		1217596	0					
ANR	1217687	Identifier	bsr1		1217596	0					
ANR	1217688	Argument	bs1		1217596	1					
ANR	1217689	Identifier	bs1		1217596	0					
ANR	1217690	ExpressionStatement	bsr1 = bs1	1997:4:42564:42574	1217596	1	True				
ANR	1217691	AssignmentExpression	bsr1 = bs1		1217596	0		=			
ANR	1217692	Identifier	bsr1		1217596	0					
ANR	1217693	Identifier	bs1		1217596	1					
ANR	1217694	IfStatement	if ( not2 != 0 )		1217596	11					
ANR	1217695	Condition	not2 != 0	1999:6:42586:42594	1217596	0	True				
ANR	1217696	EqualityExpression	not2 != 0		1217596	0		!=			
ANR	1217697	Identifier	not2		1217596	0					
ANR	1217698	PrimaryExpression	0		1217596	1					
ANR	1217699	CompoundStatement		18:17:320:320	1217596	1					
ANR	1217700	ExpressionStatement	"bitset_invert_to ( bsr2 , bs2 )"	2000:4:42603:42630	1217596	0	True				
ANR	1217701	CallExpression	"bitset_invert_to ( bsr2 , bs2 )"		1217596	0					
ANR	1217702	Callee	bitset_invert_to		1217596	0					
ANR	1217703	Identifier	bitset_invert_to		1217596	0					
ANR	1217704	ArgumentList	bsr2		1217596	1					
ANR	1217705	Argument	bsr2		1217596	0					
ANR	1217706	Identifier	bsr2		1217596	0					
ANR	1217707	Argument	bs2		1217596	1					
ANR	1217708	Identifier	bs2		1217596	0					
ANR	1217709	ExpressionStatement	bsr2 = bs2	2001:4:42636:42646	1217596	1	True				
ANR	1217710	AssignmentExpression	bsr2 = bs2		1217596	0		=			
ANR	1217711	Identifier	bsr2		1217596	0					
ANR	1217712	Identifier	bs2		1217596	1					
ANR	1217713	ExpressionStatement	"bitset_and ( bsr1 , bsr2 )"	2003:2:42654:42676	1217596	12	True				
ANR	1217714	CallExpression	"bitset_and ( bsr1 , bsr2 )"		1217596	0					
ANR	1217715	Callee	bitset_and		1217596	0					
ANR	1217716	Identifier	bitset_and		1217596	0					
ANR	1217717	ArgumentList	bsr1		1217596	1					
ANR	1217718	Argument	bsr1		1217596	0					
ANR	1217719	Identifier	bsr1		1217596	0					
ANR	1217720	Argument	bsr2		1217596	1					
ANR	1217721	Identifier	bsr2		1217596	0					
ANR	1217722	IfStatement	if ( bsr1 != dest -> bs )		1217596	13					
ANR	1217723	Condition	bsr1 != dest -> bs	2004:6:42684:42699	1217596	0	True				
ANR	1217724	EqualityExpression	bsr1 != dest -> bs		1217596	0		!=			
ANR	1217725	Identifier	bsr1		1217596	0					
ANR	1217726	PtrMemberAccess	dest -> bs		1217596	1					
ANR	1217727	Identifier	dest		1217596	0					
ANR	1217728	Identifier	bs		1217596	1					
ANR	1217729	CompoundStatement		23:24:425:425	1217596	1					
ANR	1217730	ExpressionStatement	"bitset_copy ( dest -> bs , bsr1 )"	2005:4:42708:42735	1217596	0	True				
ANR	1217731	CallExpression	"bitset_copy ( dest -> bs , bsr1 )"		1217596	0					
ANR	1217732	Callee	bitset_copy		1217596	0					
ANR	1217733	Identifier	bitset_copy		1217596	0					
ANR	1217734	ArgumentList	dest -> bs		1217596	1					
ANR	1217735	Argument	dest -> bs		1217596	0					
ANR	1217736	PtrMemberAccess	dest -> bs		1217596	0					
ANR	1217737	Identifier	dest		1217596	0					
ANR	1217738	Identifier	bs		1217596	1					
ANR	1217739	Argument	bsr1		1217596	1					
ANR	1217740	Identifier	bsr1		1217596	0					
ANR	1217741	ExpressionStatement	bsr1 = dest -> bs	2006:4:42741:42756	1217596	1	True				
ANR	1217742	AssignmentExpression	bsr1 = dest -> bs		1217596	0		=			
ANR	1217743	Identifier	bsr1		1217596	0					
ANR	1217744	PtrMemberAccess	dest -> bs		1217596	1					
ANR	1217745	Identifier	dest		1217596	0					
ANR	1217746	Identifier	bs		1217596	1					
ANR	1217747	IfStatement	if ( not1 != 0 )		1217596	14					
ANR	1217748	Condition	not1 != 0	2008:6:42768:42776	1217596	0	True				
ANR	1217749	EqualityExpression	not1 != 0		1217596	0		!=			
ANR	1217750	Identifier	not1		1217596	0					
ANR	1217751	PrimaryExpression	0		1217596	1					
ANR	1217752	CompoundStatement		27:17:502:502	1217596	1					
ANR	1217753	ExpressionStatement	bitset_invert ( dest -> bs )	2009:4:42785:42808	1217596	0	True				
ANR	1217754	CallExpression	bitset_invert ( dest -> bs )		1217596	0					
ANR	1217755	Callee	bitset_invert		1217596	0					
ANR	1217756	Identifier	bitset_invert		1217596	0					
ANR	1217757	ArgumentList	dest -> bs		1217596	1					
ANR	1217758	Argument	dest -> bs		1217596	0					
ANR	1217759	PtrMemberAccess	dest -> bs		1217596	0					
ANR	1217760	Identifier	dest		1217596	0					
ANR	1217761	Identifier	bs		1217596	1					
ANR	1217762	IfStatement	if ( ! ONIGENC_IS_SINGLEBYTE ( enc ) )		1217596	15					
ANR	1217763	Condition	! ONIGENC_IS_SINGLEBYTE ( enc )	2012:6:42821:42848	1217596	0	True				
ANR	1217764	UnaryOperationExpression	! ONIGENC_IS_SINGLEBYTE ( enc )		1217596	0					
ANR	1217765	UnaryOperator	!		1217596	0					
ANR	1217766	CallExpression	ONIGENC_IS_SINGLEBYTE ( enc )		1217596	1					
ANR	1217767	Callee	ONIGENC_IS_SINGLEBYTE		1217596	0					
ANR	1217768	Identifier	ONIGENC_IS_SINGLEBYTE		1217596	0					
ANR	1217769	ArgumentList	enc		1217596	1					
ANR	1217770	Argument	enc		1217596	0					
ANR	1217771	Identifier	enc		1217596	0					
ANR	1217772	CompoundStatement		31:36:574:574	1217596	1					
ANR	1217773	IfStatement	if ( not1 != 0 && not2 != 0 )		1217596	0					
ANR	1217774	Condition	not1 != 0 && not2 != 0	2013:8:42861:42882	1217596	0	True				
ANR	1217775	AndExpression	not1 != 0 && not2 != 0		1217596	0		&&			
ANR	1217776	EqualityExpression	not1 != 0		1217596	0		!=			
ANR	1217777	Identifier	not1		1217596	0					
ANR	1217778	PrimaryExpression	0		1217596	1					
ANR	1217779	EqualityExpression	not2 != 0		1217596	1		!=			
ANR	1217780	Identifier	not2		1217596	0					
ANR	1217781	PrimaryExpression	0		1217596	1					
ANR	1217782	CompoundStatement		32:32:608:608	1217596	1					
ANR	1217783	ExpressionStatement	"r = or_code_range_buf ( enc , buf1 , 0 , buf2 , 0 , & pbuf )"	2014:6:42893:42944	1217596	0	True				
ANR	1217784	AssignmentExpression	"r = or_code_range_buf ( enc , buf1 , 0 , buf2 , 0 , & pbuf )"		1217596	0		=			
ANR	1217785	Identifier	r		1217596	0					
ANR	1217786	CallExpression	"or_code_range_buf ( enc , buf1 , 0 , buf2 , 0 , & pbuf )"		1217596	1					
ANR	1217787	Callee	or_code_range_buf		1217596	0					
ANR	1217788	Identifier	or_code_range_buf		1217596	0					
ANR	1217789	ArgumentList	enc		1217596	1					
ANR	1217790	Argument	enc		1217596	0					
ANR	1217791	Identifier	enc		1217596	0					
ANR	1217792	Argument	buf1		1217596	1					
ANR	1217793	Identifier	buf1		1217596	0					
ANR	1217794	Argument	0		1217596	2					
ANR	1217795	PrimaryExpression	0		1217596	0					
ANR	1217796	Argument	buf2		1217596	3					
ANR	1217797	Identifier	buf2		1217596	0					
ANR	1217798	Argument	0		1217596	4					
ANR	1217799	PrimaryExpression	0		1217596	0					
ANR	1217800	Argument	& pbuf		1217596	5					
ANR	1217801	UnaryOperationExpression	& pbuf		1217596	0					
ANR	1217802	UnaryOperator	&		1217596	0					
ANR	1217803	Identifier	pbuf		1217596	1					
ANR	1217804	ElseStatement	else		1217596	0					
ANR	1217805	CompoundStatement		35:9:684:684	1217596	0					
ANR	1217806	ExpressionStatement	"r = and_code_range_buf ( buf1 , not1 , buf2 , not2 , & pbuf )"	2017:6:42969:43022	1217596	0	True				
ANR	1217807	AssignmentExpression	"r = and_code_range_buf ( buf1 , not1 , buf2 , not2 , & pbuf )"		1217596	0		=			
ANR	1217808	Identifier	r		1217596	0					
ANR	1217809	CallExpression	"and_code_range_buf ( buf1 , not1 , buf2 , not2 , & pbuf )"		1217596	1					
ANR	1217810	Callee	and_code_range_buf		1217596	0					
ANR	1217811	Identifier	and_code_range_buf		1217596	0					
ANR	1217812	ArgumentList	buf1		1217596	1					
ANR	1217813	Argument	buf1		1217596	0					
ANR	1217814	Identifier	buf1		1217596	0					
ANR	1217815	Argument	not1		1217596	1					
ANR	1217816	Identifier	not1		1217596	0					
ANR	1217817	Argument	buf2		1217596	2					
ANR	1217818	Identifier	buf2		1217596	0					
ANR	1217819	Argument	not2		1217596	3					
ANR	1217820	Identifier	not2		1217596	0					
ANR	1217821	Argument	& pbuf		1217596	4					
ANR	1217822	UnaryOperationExpression	& pbuf		1217596	0					
ANR	1217823	UnaryOperator	&		1217596	0					
ANR	1217824	Identifier	pbuf		1217596	1					
ANR	1217825	IfStatement	if ( r == 0 && not1 != 0 )		1217596	1					
ANR	1217826	Condition	r == 0 && not1 != 0	2018:10:43034:43052	1217596	0	True				
ANR	1217827	AndExpression	r == 0 && not1 != 0		1217596	0		&&			
ANR	1217828	EqualityExpression	r == 0		1217596	0		==			
ANR	1217829	Identifier	r		1217596	0					
ANR	1217830	PrimaryExpression	0		1217596	1					
ANR	1217831	EqualityExpression	not1 != 0		1217596	1		!=			
ANR	1217832	Identifier	not1		1217596	0					
ANR	1217833	PrimaryExpression	0		1217596	1					
ANR	1217834	CompoundStatement		38:1:781:791	1217596	1					
ANR	1217835	IdentifierDeclStatement	BBuf * tbuf ;	2019:1:43058:43068	1217596	0	True				
ANR	1217836	IdentifierDecl	* tbuf		1217596	0					
ANR	1217837	IdentifierDeclType	BBuf *		1217596	0					
ANR	1217838	Identifier	tbuf		1217596	1					
ANR	1217839	ExpressionStatement	"r = not_code_range_buf ( enc , pbuf , & tbuf )"	2020:1:43071:43111	1217596	1	True				
ANR	1217840	AssignmentExpression	"r = not_code_range_buf ( enc , pbuf , & tbuf )"		1217596	0		=			
ANR	1217841	Identifier	r		1217596	0					
ANR	1217842	CallExpression	"not_code_range_buf ( enc , pbuf , & tbuf )"		1217596	1					
ANR	1217843	Callee	not_code_range_buf		1217596	0					
ANR	1217844	Identifier	not_code_range_buf		1217596	0					
ANR	1217845	ArgumentList	enc		1217596	1					
ANR	1217846	Argument	enc		1217596	0					
ANR	1217847	Identifier	enc		1217596	0					
ANR	1217848	Argument	pbuf		1217596	1					
ANR	1217849	Identifier	pbuf		1217596	0					
ANR	1217850	Argument	& tbuf		1217596	2					
ANR	1217851	UnaryOperationExpression	& tbuf		1217596	0					
ANR	1217852	UnaryOperator	&		1217596	0					
ANR	1217853	Identifier	tbuf		1217596	1					
ANR	1217854	IfStatement	if ( r != 0 )		1217596	2					
ANR	1217855	Condition	r != 0	2021:5:43118:43123	1217596	0	True				
ANR	1217856	EqualityExpression	r != 0		1217596	0		!=			
ANR	1217857	Identifier	r		1217596	0					
ANR	1217858	PrimaryExpression	0		1217596	1					
ANR	1217859	CompoundStatement		40:13:849:849	1217596	1					
ANR	1217860	ExpressionStatement	bbuf_free ( pbuf )	2022:3:43131:43146	1217596	0	True				
ANR	1217861	CallExpression	bbuf_free ( pbuf )		1217596	0					
ANR	1217862	Callee	bbuf_free		1217596	0					
ANR	1217863	Identifier	bbuf_free		1217596	0					
ANR	1217864	ArgumentList	pbuf		1217596	1					
ANR	1217865	Argument	pbuf		1217596	0					
ANR	1217866	Identifier	pbuf		1217596	0					
ANR	1217867	ReturnStatement	return r ;	2023:3:43151:43159	1217596	1	True				
ANR	1217868	Identifier	r		1217596	0					
ANR	1217869	ExpressionStatement	bbuf_free ( pbuf )	2025:1:43165:43180	1217596	3	True				
ANR	1217870	CallExpression	bbuf_free ( pbuf )		1217596	0					
ANR	1217871	Callee	bbuf_free		1217596	0					
ANR	1217872	Identifier	bbuf_free		1217596	0					
ANR	1217873	ArgumentList	pbuf		1217596	1					
ANR	1217874	Argument	pbuf		1217596	0					
ANR	1217875	Identifier	pbuf		1217596	0					
ANR	1217876	ExpressionStatement	pbuf = tbuf	2026:1:43183:43194	1217596	4	True				
ANR	1217877	AssignmentExpression	pbuf = tbuf		1217596	0		=			
ANR	1217878	Identifier	pbuf		1217596	0					
ANR	1217879	Identifier	tbuf		1217596	1					
ANR	1217880	IfStatement	if ( r != 0 )		1217596	1					
ANR	1217881	Condition	r != 0	2029:8:43218:43223	1217596	0	True				
ANR	1217882	EqualityExpression	r != 0		1217596	0		!=			
ANR	1217883	Identifier	r		1217596	0					
ANR	1217884	PrimaryExpression	0		1217596	1					
ANR	1217885	ReturnStatement	return r ;	2029:16:43226:43234	1217596	1	True				
ANR	1217886	Identifier	r		1217596	0					
ANR	1217887	ExpressionStatement	dest -> mbuf = pbuf	2031:4:43241:43258	1217596	2	True				
ANR	1217888	AssignmentExpression	dest -> mbuf = pbuf		1217596	0		=			
ANR	1217889	PtrMemberAccess	dest -> mbuf		1217596	0					
ANR	1217890	Identifier	dest		1217596	0					
ANR	1217891	Identifier	mbuf		1217596	1					
ANR	1217892	Identifier	pbuf		1217596	1					
ANR	1217893	ExpressionStatement	bbuf_free ( buf1 )	2032:4:43264:43279	1217596	3	True				
ANR	1217894	CallExpression	bbuf_free ( buf1 )		1217596	0					
ANR	1217895	Callee	bbuf_free		1217596	0					
ANR	1217896	Identifier	bbuf_free		1217596	0					
ANR	1217897	ArgumentList	buf1		1217596	1					
ANR	1217898	Argument	buf1		1217596	0					
ANR	1217899	Identifier	buf1		1217596	0					
ANR	1217900	ReturnStatement	return r ;	2033:4:43285:43293	1217596	4	True				
ANR	1217901	Identifier	r		1217596	0					
ANR	1217902	ReturnStatement	return 0 ;	2035:2:43301:43309	1217596	16	True				
ANR	1217903	PrimaryExpression	0		1217596	0					
ANR	1217904	ReturnType	static int		1217596	1					
ANR	1217905	Identifier	and_cclass		1217596	2					
ANR	1217906	ParameterList	"CClassNode * dest , CClassNode * cc , OnigEncoding enc"		1217596	3					
ANR	1217907	Parameter	CClassNode * dest	1981:11:42224:42239	1217596	0	True				
ANR	1217908	ParameterType	CClassNode *		1217596	0					
ANR	1217909	Identifier	dest		1217596	1					
ANR	1217910	Parameter	CClassNode * cc	1981:29:42242:42255	1217596	1	True				
ANR	1217911	ParameterType	CClassNode *		1217596	0					
ANR	1217912	Identifier	cc		1217596	1					
ANR	1217913	Parameter	OnigEncoding enc	1981:45:42258:42273	1217596	2	True				
ANR	1217914	ParameterType	OnigEncoding		1217596	0					
ANR	1217915	Identifier	enc		1217596	1					
ANR	1217916	CFGEntryNode	ENTRY		1217596		True				
ANR	1217917	CFGExitNode	EXIT		1217596		True				
ANR	1217918	Symbol	bs2		1217596						
ANR	1217919	Symbol	bs1		1217596						
ANR	1217920	Symbol	not_code_range_buf		1217596						
ANR	1217921	Symbol	* dest		1217596						
ANR	1217922	Symbol	* cc		1217596						
ANR	1217923	Symbol	IS_NCCLASS_NOT		1217596						
ANR	1217924	Symbol	dest -> mbuf		1217596						
ANR	1217925	Symbol	tbuf		1217596						
ANR	1217926	Symbol	cc -> mbuf		1217596						
ANR	1217927	Symbol	dest		1217596						
ANR	1217928	Symbol	not2		1217596						
ANR	1217929	Symbol	not1		1217596						
ANR	1217930	Symbol	or_code_range_buf		1217596						
ANR	1217931	Symbol	enc		1217596						
ANR	1217932	Symbol	ONIGENC_IS_SINGLEBYTE		1217596						
ANR	1217933	Symbol	and_code_range_buf		1217596						
ANR	1217934	Symbol	cc		1217596						
ANR	1217935	Symbol	& tbuf		1217596						
ANR	1217936	Symbol	cc -> bs		1217596						
ANR	1217937	Symbol	buf1		1217596						
ANR	1217938	Symbol	buf2		1217596						
ANR	1217939	Symbol	r		1217596						
ANR	1217940	Symbol	& pbuf		1217596						
ANR	1217941	Symbol	pbuf		1217596						
ANR	1217942	Symbol	dest -> bs		1217596						
ANR	1217943	Symbol	bsr1		1217596						
ANR	1217944	Symbol	bsr2		1217596						
ANR	1217945	Function	or_cclass	2038:0:43314:44430							
ANR	1217946	FunctionDef	"or_cclass (CClassNode * dest , CClassNode * cc , OnigEncoding enc)"		1217945	0					
ANR	1217947	CompoundStatement		2040:0:43387:44430	1217945	0					
ANR	1217948	IdentifierDeclStatement	"int r , not1 , not2 ;"	2041:2:43391:43408	1217945	0	True				
ANR	1217949	IdentifierDecl	r		1217945	0					
ANR	1217950	IdentifierDeclType	int		1217945	0					
ANR	1217951	Identifier	r		1217945	1					
ANR	1217952	IdentifierDecl	not1		1217945	1					
ANR	1217953	IdentifierDeclType	int		1217945	0					
ANR	1217954	Identifier	not1		1217945	1					
ANR	1217955	IdentifierDecl	not2		1217945	2					
ANR	1217956	IdentifierDeclType	int		1217945	0					
ANR	1217957	Identifier	not2		1217945	1					
ANR	1217958	IdentifierDeclStatement	"BBuf * buf1 , * buf2 , * pbuf ;"	2042:2:43412:43436	1217945	1	True				
ANR	1217959	IdentifierDecl	* buf1		1217945	0					
ANR	1217960	IdentifierDeclType	BBuf *		1217945	0					
ANR	1217961	Identifier	buf1		1217945	1					
ANR	1217962	IdentifierDecl	* buf2		1217945	1					
ANR	1217963	IdentifierDeclType	BBuf *		1217945	0					
ANR	1217964	Identifier	buf2		1217945	1					
ANR	1217965	IdentifierDecl	* pbuf		1217945	2					
ANR	1217966	IdentifierDeclType	BBuf *		1217945	0					
ANR	1217967	Identifier	pbuf		1217945	1					
ANR	1217968	IdentifierDeclStatement	"BitSetRef bsr1 , bsr2 ;"	2043:2:43440:43460	1217945	2	True				
ANR	1217969	IdentifierDecl	bsr1		1217945	0					
ANR	1217970	IdentifierDeclType	BitSetRef		1217945	0					
ANR	1217971	Identifier	bsr1		1217945	1					
ANR	1217972	IdentifierDecl	bsr2		1217945	1					
ANR	1217973	IdentifierDeclType	BitSetRef		1217945	0					
ANR	1217974	Identifier	bsr2		1217945	1					
ANR	1217975	IdentifierDeclStatement	"BitSet bs1 , bs2 ;"	2044:2:43464:43479	1217945	3	True				
ANR	1217976	IdentifierDecl	bs1		1217945	0					
ANR	1217977	IdentifierDeclType	BitSet		1217945	0					
ANR	1217978	Identifier	bs1		1217945	1					
ANR	1217979	IdentifierDecl	bs2		1217945	1					
ANR	1217980	IdentifierDeclType	BitSet		1217945	0					
ANR	1217981	Identifier	bs2		1217945	1					
ANR	1217982	ExpressionStatement	not1 = IS_NCCLASS_NOT ( dest )	2046:2:43484:43511	1217945	4	True				
ANR	1217983	AssignmentExpression	not1 = IS_NCCLASS_NOT ( dest )		1217945	0		=			
ANR	1217984	Identifier	not1		1217945	0					
ANR	1217985	CallExpression	IS_NCCLASS_NOT ( dest )		1217945	1					
ANR	1217986	Callee	IS_NCCLASS_NOT		1217945	0					
ANR	1217987	Identifier	IS_NCCLASS_NOT		1217945	0					
ANR	1217988	ArgumentList	dest		1217945	1					
ANR	1217989	Argument	dest		1217945	0					
ANR	1217990	Identifier	dest		1217945	0					
ANR	1217991	ExpressionStatement	bsr1 = dest -> bs	2047:2:43515:43530	1217945	5	True				
ANR	1217992	AssignmentExpression	bsr1 = dest -> bs		1217945	0		=			
ANR	1217993	Identifier	bsr1		1217945	0					
ANR	1217994	PtrMemberAccess	dest -> bs		1217945	1					
ANR	1217995	Identifier	dest		1217945	0					
ANR	1217996	Identifier	bs		1217945	1					
ANR	1217997	ExpressionStatement	buf1 = dest -> mbuf	2048:2:43534:43551	1217945	6	True				
ANR	1217998	AssignmentExpression	buf1 = dest -> mbuf		1217945	0		=			
ANR	1217999	Identifier	buf1		1217945	0					
ANR	1218000	PtrMemberAccess	dest -> mbuf		1217945	1					
ANR	1218001	Identifier	dest		1217945	0					
ANR	1218002	Identifier	mbuf		1217945	1					
ANR	1218003	ExpressionStatement	not2 = IS_NCCLASS_NOT ( cc )	2049:2:43555:43580	1217945	7	True				
ANR	1218004	AssignmentExpression	not2 = IS_NCCLASS_NOT ( cc )		1217945	0		=			
ANR	1218005	Identifier	not2		1217945	0					
ANR	1218006	CallExpression	IS_NCCLASS_NOT ( cc )		1217945	1					
ANR	1218007	Callee	IS_NCCLASS_NOT		1217945	0					
ANR	1218008	Identifier	IS_NCCLASS_NOT		1217945	0					
ANR	1218009	ArgumentList	cc		1217945	1					
ANR	1218010	Argument	cc		1217945	0					
ANR	1218011	Identifier	cc		1217945	0					
ANR	1218012	ExpressionStatement	bsr2 = cc -> bs	2050:2:43584:43597	1217945	8	True				
ANR	1218013	AssignmentExpression	bsr2 = cc -> bs		1217945	0		=			
ANR	1218014	Identifier	bsr2		1217945	0					
ANR	1218015	PtrMemberAccess	cc -> bs		1217945	1					
ANR	1218016	Identifier	cc		1217945	0					
ANR	1218017	Identifier	bs		1217945	1					
ANR	1218018	ExpressionStatement	buf2 = cc -> mbuf	2051:2:43601:43616	1217945	9	True				
ANR	1218019	AssignmentExpression	buf2 = cc -> mbuf		1217945	0		=			
ANR	1218020	Identifier	buf2		1217945	0					
ANR	1218021	PtrMemberAccess	cc -> mbuf		1217945	1					
ANR	1218022	Identifier	cc		1217945	0					
ANR	1218023	Identifier	mbuf		1217945	1					
ANR	1218024	IfStatement	if ( not1 != 0 )		1217945	10					
ANR	1218025	Condition	not1 != 0	2053:6:43625:43633	1217945	0	True				
ANR	1218026	EqualityExpression	not1 != 0		1217945	0		!=			
ANR	1218027	Identifier	not1		1217945	0					
ANR	1218028	PrimaryExpression	0		1217945	1					
ANR	1218029	CompoundStatement		14:17:248:248	1217945	1					
ANR	1218030	ExpressionStatement	"bitset_invert_to ( bsr1 , bs1 )"	2054:4:43642:43669	1217945	0	True				
ANR	1218031	CallExpression	"bitset_invert_to ( bsr1 , bs1 )"		1217945	0					
ANR	1218032	Callee	bitset_invert_to		1217945	0					
ANR	1218033	Identifier	bitset_invert_to		1217945	0					
ANR	1218034	ArgumentList	bsr1		1217945	1					
ANR	1218035	Argument	bsr1		1217945	0					
ANR	1218036	Identifier	bsr1		1217945	0					
ANR	1218037	Argument	bs1		1217945	1					
ANR	1218038	Identifier	bs1		1217945	0					
ANR	1218039	ExpressionStatement	bsr1 = bs1	2055:4:43675:43685	1217945	1	True				
ANR	1218040	AssignmentExpression	bsr1 = bs1		1217945	0		=			
ANR	1218041	Identifier	bsr1		1217945	0					
ANR	1218042	Identifier	bs1		1217945	1					
ANR	1218043	IfStatement	if ( not2 != 0 )		1217945	11					
ANR	1218044	Condition	not2 != 0	2057:6:43697:43705	1217945	0	True				
ANR	1218045	EqualityExpression	not2 != 0		1217945	0		!=			
ANR	1218046	Identifier	not2		1217945	0					
ANR	1218047	PrimaryExpression	0		1217945	1					
ANR	1218048	CompoundStatement		18:17:320:320	1217945	1					
ANR	1218049	ExpressionStatement	"bitset_invert_to ( bsr2 , bs2 )"	2058:4:43714:43741	1217945	0	True				
ANR	1218050	CallExpression	"bitset_invert_to ( bsr2 , bs2 )"		1217945	0					
ANR	1218051	Callee	bitset_invert_to		1217945	0					
ANR	1218052	Identifier	bitset_invert_to		1217945	0					
ANR	1218053	ArgumentList	bsr2		1217945	1					
ANR	1218054	Argument	bsr2		1217945	0					
ANR	1218055	Identifier	bsr2		1217945	0					
ANR	1218056	Argument	bs2		1217945	1					
ANR	1218057	Identifier	bs2		1217945	0					
ANR	1218058	ExpressionStatement	bsr2 = bs2	2059:4:43747:43757	1217945	1	True				
ANR	1218059	AssignmentExpression	bsr2 = bs2		1217945	0		=			
ANR	1218060	Identifier	bsr2		1217945	0					
ANR	1218061	Identifier	bs2		1217945	1					
ANR	1218062	ExpressionStatement	"bitset_or ( bsr1 , bsr2 )"	2061:2:43765:43786	1217945	12	True				
ANR	1218063	CallExpression	"bitset_or ( bsr1 , bsr2 )"		1217945	0					
ANR	1218064	Callee	bitset_or		1217945	0					
ANR	1218065	Identifier	bitset_or		1217945	0					
ANR	1218066	ArgumentList	bsr1		1217945	1					
ANR	1218067	Argument	bsr1		1217945	0					
ANR	1218068	Identifier	bsr1		1217945	0					
ANR	1218069	Argument	bsr2		1217945	1					
ANR	1218070	Identifier	bsr2		1217945	0					
ANR	1218071	IfStatement	if ( bsr1 != dest -> bs )		1217945	13					
ANR	1218072	Condition	bsr1 != dest -> bs	2062:6:43794:43809	1217945	0	True				
ANR	1218073	EqualityExpression	bsr1 != dest -> bs		1217945	0		!=			
ANR	1218074	Identifier	bsr1		1217945	0					
ANR	1218075	PtrMemberAccess	dest -> bs		1217945	1					
ANR	1218076	Identifier	dest		1217945	0					
ANR	1218077	Identifier	bs		1217945	1					
ANR	1218078	CompoundStatement		23:24:424:424	1217945	1					
ANR	1218079	ExpressionStatement	"bitset_copy ( dest -> bs , bsr1 )"	2063:4:43818:43845	1217945	0	True				
ANR	1218080	CallExpression	"bitset_copy ( dest -> bs , bsr1 )"		1217945	0					
ANR	1218081	Callee	bitset_copy		1217945	0					
ANR	1218082	Identifier	bitset_copy		1217945	0					
ANR	1218083	ArgumentList	dest -> bs		1217945	1					
ANR	1218084	Argument	dest -> bs		1217945	0					
ANR	1218085	PtrMemberAccess	dest -> bs		1217945	0					
ANR	1218086	Identifier	dest		1217945	0					
ANR	1218087	Identifier	bs		1217945	1					
ANR	1218088	Argument	bsr1		1217945	1					
ANR	1218089	Identifier	bsr1		1217945	0					
ANR	1218090	ExpressionStatement	bsr1 = dest -> bs	2064:4:43851:43866	1217945	1	True				
ANR	1218091	AssignmentExpression	bsr1 = dest -> bs		1217945	0		=			
ANR	1218092	Identifier	bsr1		1217945	0					
ANR	1218093	PtrMemberAccess	dest -> bs		1217945	1					
ANR	1218094	Identifier	dest		1217945	0					
ANR	1218095	Identifier	bs		1217945	1					
ANR	1218096	IfStatement	if ( not1 != 0 )		1217945	14					
ANR	1218097	Condition	not1 != 0	2066:6:43878:43886	1217945	0	True				
ANR	1218098	EqualityExpression	not1 != 0		1217945	0		!=			
ANR	1218099	Identifier	not1		1217945	0					
ANR	1218100	PrimaryExpression	0		1217945	1					
ANR	1218101	CompoundStatement		27:17:501:501	1217945	1					
ANR	1218102	ExpressionStatement	bitset_invert ( dest -> bs )	2067:4:43895:43918	1217945	0	True				
ANR	1218103	CallExpression	bitset_invert ( dest -> bs )		1217945	0					
ANR	1218104	Callee	bitset_invert		1217945	0					
ANR	1218105	Identifier	bitset_invert		1217945	0					
ANR	1218106	ArgumentList	dest -> bs		1217945	1					
ANR	1218107	Argument	dest -> bs		1217945	0					
ANR	1218108	PtrMemberAccess	dest -> bs		1217945	0					
ANR	1218109	Identifier	dest		1217945	0					
ANR	1218110	Identifier	bs		1217945	1					
ANR	1218111	IfStatement	if ( ! ONIGENC_IS_SINGLEBYTE ( enc ) )		1217945	15					
ANR	1218112	Condition	! ONIGENC_IS_SINGLEBYTE ( enc )	2070:6:43931:43958	1217945	0	True				
ANR	1218113	UnaryOperationExpression	! ONIGENC_IS_SINGLEBYTE ( enc )		1217945	0					
ANR	1218114	UnaryOperator	!		1217945	0					
ANR	1218115	CallExpression	ONIGENC_IS_SINGLEBYTE ( enc )		1217945	1					
ANR	1218116	Callee	ONIGENC_IS_SINGLEBYTE		1217945	0					
ANR	1218117	Identifier	ONIGENC_IS_SINGLEBYTE		1217945	0					
ANR	1218118	ArgumentList	enc		1217945	1					
ANR	1218119	Argument	enc		1217945	0					
ANR	1218120	Identifier	enc		1217945	0					
ANR	1218121	CompoundStatement		31:36:573:573	1217945	1					
ANR	1218122	IfStatement	if ( not1 != 0 && not2 != 0 )		1217945	0					
ANR	1218123	Condition	not1 != 0 && not2 != 0	2071:8:43971:43992	1217945	0	True				
ANR	1218124	AndExpression	not1 != 0 && not2 != 0		1217945	0		&&			
ANR	1218125	EqualityExpression	not1 != 0		1217945	0		!=			
ANR	1218126	Identifier	not1		1217945	0					
ANR	1218127	PrimaryExpression	0		1217945	1					
ANR	1218128	EqualityExpression	not2 != 0		1217945	1		!=			
ANR	1218129	Identifier	not2		1217945	0					
ANR	1218130	PrimaryExpression	0		1217945	1					
ANR	1218131	CompoundStatement		32:32:607:607	1217945	1					
ANR	1218132	ExpressionStatement	"r = and_code_range_buf ( buf1 , 0 , buf2 , 0 , & pbuf )"	2072:6:44003:44050	1217945	0	True				
ANR	1218133	AssignmentExpression	"r = and_code_range_buf ( buf1 , 0 , buf2 , 0 , & pbuf )"		1217945	0		=			
ANR	1218134	Identifier	r		1217945	0					
ANR	1218135	CallExpression	"and_code_range_buf ( buf1 , 0 , buf2 , 0 , & pbuf )"		1217945	1					
ANR	1218136	Callee	and_code_range_buf		1217945	0					
ANR	1218137	Identifier	and_code_range_buf		1217945	0					
ANR	1218138	ArgumentList	buf1		1217945	1					
ANR	1218139	Argument	buf1		1217945	0					
ANR	1218140	Identifier	buf1		1217945	0					
ANR	1218141	Argument	0		1217945	1					
ANR	1218142	PrimaryExpression	0		1217945	0					
ANR	1218143	Argument	buf2		1217945	2					
ANR	1218144	Identifier	buf2		1217945	0					
ANR	1218145	Argument	0		1217945	3					
ANR	1218146	PrimaryExpression	0		1217945	0					
ANR	1218147	Argument	& pbuf		1217945	4					
ANR	1218148	UnaryOperationExpression	& pbuf		1217945	0					
ANR	1218149	UnaryOperator	&		1217945	0					
ANR	1218150	Identifier	pbuf		1217945	1					
ANR	1218151	ElseStatement	else		1217945	0					
ANR	1218152	CompoundStatement		35:9:679:679	1217945	0					
ANR	1218153	ExpressionStatement	"r = or_code_range_buf ( enc , buf1 , not1 , buf2 , not2 , & pbuf )"	2075:6:44075:44132	1217945	0	True				
ANR	1218154	AssignmentExpression	"r = or_code_range_buf ( enc , buf1 , not1 , buf2 , not2 , & pbuf )"		1217945	0		=			
ANR	1218155	Identifier	r		1217945	0					
ANR	1218156	CallExpression	"or_code_range_buf ( enc , buf1 , not1 , buf2 , not2 , & pbuf )"		1217945	1					
ANR	1218157	Callee	or_code_range_buf		1217945	0					
ANR	1218158	Identifier	or_code_range_buf		1217945	0					
ANR	1218159	ArgumentList	enc		1217945	1					
ANR	1218160	Argument	enc		1217945	0					
ANR	1218161	Identifier	enc		1217945	0					
ANR	1218162	Argument	buf1		1217945	1					
ANR	1218163	Identifier	buf1		1217945	0					
ANR	1218164	Argument	not1		1217945	2					
ANR	1218165	Identifier	not1		1217945	0					
ANR	1218166	Argument	buf2		1217945	3					
ANR	1218167	Identifier	buf2		1217945	0					
ANR	1218168	Argument	not2		1217945	4					
ANR	1218169	Identifier	not2		1217945	0					
ANR	1218170	Argument	& pbuf		1217945	5					
ANR	1218171	UnaryOperationExpression	& pbuf		1217945	0					
ANR	1218172	UnaryOperator	&		1217945	0					
ANR	1218173	Identifier	pbuf		1217945	1					
ANR	1218174	IfStatement	if ( r == 0 && not1 != 0 )		1217945	1					
ANR	1218175	Condition	r == 0 && not1 != 0	2076:10:44144:44162	1217945	0	True				
ANR	1218176	AndExpression	r == 0 && not1 != 0		1217945	0		&&			
ANR	1218177	EqualityExpression	r == 0		1217945	0		==			
ANR	1218178	Identifier	r		1217945	0					
ANR	1218179	PrimaryExpression	0		1217945	1					
ANR	1218180	EqualityExpression	not1 != 0		1217945	1		!=			
ANR	1218181	Identifier	not1		1217945	0					
ANR	1218182	PrimaryExpression	0		1217945	1					
ANR	1218183	CompoundStatement		38:1:780:790	1217945	1					
ANR	1218184	IdentifierDeclStatement	BBuf * tbuf ;	2077:1:44168:44178	1217945	0	True				
ANR	1218185	IdentifierDecl	* tbuf		1217945	0					
ANR	1218186	IdentifierDeclType	BBuf *		1217945	0					
ANR	1218187	Identifier	tbuf		1217945	1					
ANR	1218188	ExpressionStatement	"r = not_code_range_buf ( enc , pbuf , & tbuf )"	2078:1:44181:44221	1217945	1	True				
ANR	1218189	AssignmentExpression	"r = not_code_range_buf ( enc , pbuf , & tbuf )"		1217945	0		=			
ANR	1218190	Identifier	r		1217945	0					
ANR	1218191	CallExpression	"not_code_range_buf ( enc , pbuf , & tbuf )"		1217945	1					
ANR	1218192	Callee	not_code_range_buf		1217945	0					
ANR	1218193	Identifier	not_code_range_buf		1217945	0					
ANR	1218194	ArgumentList	enc		1217945	1					
ANR	1218195	Argument	enc		1217945	0					
ANR	1218196	Identifier	enc		1217945	0					
ANR	1218197	Argument	pbuf		1217945	1					
ANR	1218198	Identifier	pbuf		1217945	0					
ANR	1218199	Argument	& tbuf		1217945	2					
ANR	1218200	UnaryOperationExpression	& tbuf		1217945	0					
ANR	1218201	UnaryOperator	&		1217945	0					
ANR	1218202	Identifier	tbuf		1217945	1					
ANR	1218203	IfStatement	if ( r != 0 )		1217945	2					
ANR	1218204	Condition	r != 0	2079:5:44228:44233	1217945	0	True				
ANR	1218205	EqualityExpression	r != 0		1217945	0		!=			
ANR	1218206	Identifier	r		1217945	0					
ANR	1218207	PrimaryExpression	0		1217945	1					
ANR	1218208	CompoundStatement		40:13:848:848	1217945	1					
ANR	1218209	ExpressionStatement	bbuf_free ( pbuf )	2080:3:44241:44256	1217945	0	True				
ANR	1218210	CallExpression	bbuf_free ( pbuf )		1217945	0					
ANR	1218211	Callee	bbuf_free		1217945	0					
ANR	1218212	Identifier	bbuf_free		1217945	0					
ANR	1218213	ArgumentList	pbuf		1217945	1					
ANR	1218214	Argument	pbuf		1217945	0					
ANR	1218215	Identifier	pbuf		1217945	0					
ANR	1218216	ReturnStatement	return r ;	2081:3:44261:44269	1217945	1	True				
ANR	1218217	Identifier	r		1217945	0					
ANR	1218218	ExpressionStatement	bbuf_free ( pbuf )	2083:1:44275:44290	1217945	3	True				
ANR	1218219	CallExpression	bbuf_free ( pbuf )		1217945	0					
ANR	1218220	Callee	bbuf_free		1217945	0					
ANR	1218221	Identifier	bbuf_free		1217945	0					
ANR	1218222	ArgumentList	pbuf		1217945	1					
ANR	1218223	Argument	pbuf		1217945	0					
ANR	1218224	Identifier	pbuf		1217945	0					
ANR	1218225	ExpressionStatement	pbuf = tbuf	2084:1:44293:44304	1217945	4	True				
ANR	1218226	AssignmentExpression	pbuf = tbuf		1217945	0		=			
ANR	1218227	Identifier	pbuf		1217945	0					
ANR	1218228	Identifier	tbuf		1217945	1					
ANR	1218229	IfStatement	if ( r != 0 )		1217945	1					
ANR	1218230	Condition	r != 0	2087:8:44328:44333	1217945	0	True				
ANR	1218231	EqualityExpression	r != 0		1217945	0		!=			
ANR	1218232	Identifier	r		1217945	0					
ANR	1218233	PrimaryExpression	0		1217945	1					
ANR	1218234	ReturnStatement	return r ;	2087:16:44336:44344	1217945	1	True				
ANR	1218235	Identifier	r		1217945	0					
ANR	1218236	ExpressionStatement	dest -> mbuf = pbuf	2089:4:44351:44368	1217945	2	True				
ANR	1218237	AssignmentExpression	dest -> mbuf = pbuf		1217945	0		=			
ANR	1218238	PtrMemberAccess	dest -> mbuf		1217945	0					
ANR	1218239	Identifier	dest		1217945	0					
ANR	1218240	Identifier	mbuf		1217945	1					
ANR	1218241	Identifier	pbuf		1217945	1					
ANR	1218242	ExpressionStatement	bbuf_free ( buf1 )	2090:4:44374:44389	1217945	3	True				
ANR	1218243	CallExpression	bbuf_free ( buf1 )		1217945	0					
ANR	1218244	Callee	bbuf_free		1217945	0					
ANR	1218245	Identifier	bbuf_free		1217945	0					
ANR	1218246	ArgumentList	buf1		1217945	1					
ANR	1218247	Argument	buf1		1217945	0					
ANR	1218248	Identifier	buf1		1217945	0					
ANR	1218249	ReturnStatement	return r ;	2091:4:44395:44403	1217945	4	True				
ANR	1218250	Identifier	r		1217945	0					
ANR	1218251	ElseStatement	else		1217945	0					
ANR	1218252	ReturnStatement	return 0 ;	2094:4:44420:44428	1217945	0	True				
ANR	1218253	PrimaryExpression	0		1217945	0					
ANR	1218254	ReturnType	static int		1217945	1					
ANR	1218255	Identifier	or_cclass		1217945	2					
ANR	1218256	ParameterList	"CClassNode * dest , CClassNode * cc , OnigEncoding enc"		1217945	3					
ANR	1218257	Parameter	CClassNode * dest	2039:10:43335:43350	1217945	0	True				
ANR	1218258	ParameterType	CClassNode *		1217945	0					
ANR	1218259	Identifier	dest		1217945	1					
ANR	1218260	Parameter	CClassNode * cc	2039:28:43353:43366	1217945	1	True				
ANR	1218261	ParameterType	CClassNode *		1217945	0					
ANR	1218262	Identifier	cc		1217945	1					
ANR	1218263	Parameter	OnigEncoding enc	2039:44:43369:43384	1217945	2	True				
ANR	1218264	ParameterType	OnigEncoding		1217945	0					
ANR	1218265	Identifier	enc		1217945	1					
ANR	1218266	CFGEntryNode	ENTRY		1217945		True				
ANR	1218267	CFGExitNode	EXIT		1217945		True				
ANR	1218268	Symbol	bs2		1217945						
ANR	1218269	Symbol	bs1		1217945						
ANR	1218270	Symbol	not_code_range_buf		1217945						
ANR	1218271	Symbol	* dest		1217945						
ANR	1218272	Symbol	* cc		1217945						
ANR	1218273	Symbol	IS_NCCLASS_NOT		1217945						
ANR	1218274	Symbol	dest -> mbuf		1217945						
ANR	1218275	Symbol	tbuf		1217945						
ANR	1218276	Symbol	cc -> mbuf		1217945						
ANR	1218277	Symbol	dest		1217945						
ANR	1218278	Symbol	not2		1217945						
ANR	1218279	Symbol	not1		1217945						
ANR	1218280	Symbol	or_code_range_buf		1217945						
ANR	1218281	Symbol	enc		1217945						
ANR	1218282	Symbol	ONIGENC_IS_SINGLEBYTE		1217945						
ANR	1218283	Symbol	and_code_range_buf		1217945						
ANR	1218284	Symbol	cc		1217945						
ANR	1218285	Symbol	& tbuf		1217945						
ANR	1218286	Symbol	cc -> bs		1217945						
ANR	1218287	Symbol	buf1		1217945						
ANR	1218288	Symbol	buf2		1217945						
ANR	1218289	Symbol	r		1217945						
ANR	1218290	Symbol	& pbuf		1217945						
ANR	1218291	Symbol	pbuf		1217945						
ANR	1218292	Symbol	dest -> bs		1217945						
ANR	1218293	Symbol	bsr1		1217945						
ANR	1218294	Symbol	bsr2		1217945						
ANR	1218295	Function	conv_backslash_value	2097:0:44433:44919							
ANR	1218296	FunctionDef	"conv_backslash_value (int c , ScanEnv * env)"		1218295	0					
ANR	1218297	CompoundStatement		2099:0:44486:44919	1218295	0					
ANR	1218298	IfStatement	"if ( IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_CONTROL_CHARS ) )"		1218295	0					
ANR	1218299	Condition	"IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_CONTROL_CHARS )"	2100:6:44494:44549	1218295	0	True				
ANR	1218300	CallExpression	"IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_CONTROL_CHARS )"		1218295	0					
ANR	1218301	Callee	IS_SYNTAX_OP		1218295	0					
ANR	1218302	Identifier	IS_SYNTAX_OP		1218295	0					
ANR	1218303	ArgumentList	env -> syntax		1218295	1					
ANR	1218304	Argument	env -> syntax		1218295	0					
ANR	1218305	PtrMemberAccess	env -> syntax		1218295	0					
ANR	1218306	Identifier	env		1218295	0					
ANR	1218307	Identifier	syntax		1218295	1					
ANR	1218308	Argument	ONIG_SYN_OP_ESC_CONTROL_CHARS		1218295	1					
ANR	1218309	Identifier	ONIG_SYN_OP_ESC_CONTROL_CHARS		1218295	0					
ANR	1218310	CompoundStatement		2:64:65:65	1218295	1					
ANR	1218311	SwitchStatement	switch ( c )		1218295	0					
ANR	1218312	Condition	c	2101:12:44566:44566	1218295	0	True				
ANR	1218313	Identifier	c		1218295	0					
ANR	1218314	CompoundStatement		3:15:82:82	1218295	1					
ANR	1218315	Label	case 'n' :	2102:4:44575:44583	1218295	0	True				
ANR	1218316	ReturnStatement	return '\\n' ;	2102:14:44585:44596	1218295	1	True				
ANR	1218317	PrimaryExpression	'\\n'		1218295	0					
ANR	1218318	Label	case 't' :	2103:4:44602:44610	1218295	2	True				
ANR	1218319	ReturnStatement	return '\\t' ;	2103:14:44612:44623	1218295	3	True				
ANR	1218320	PrimaryExpression	'\\t'		1218295	0					
ANR	1218321	Label	case 'r' :	2104:4:44629:44637	1218295	4	True				
ANR	1218322	ReturnStatement	return '\\r' ;	2104:14:44639:44650	1218295	5	True				
ANR	1218323	PrimaryExpression	'\\r'		1218295	0					
ANR	1218324	Label	case 'f' :	2105:4:44656:44664	1218295	6	True				
ANR	1218325	ReturnStatement	return '\\f' ;	2105:14:44666:44677	1218295	7	True				
ANR	1218326	PrimaryExpression	'\\f'		1218295	0					
ANR	1218327	Label	case 'a' :	2106:4:44683:44691	1218295	8	True				
ANR	1218328	ReturnStatement	return '\\007' ;	2106:14:44693:44706	1218295	9	True				
ANR	1218329	PrimaryExpression	'\\007'		1218295	0					
ANR	1218330	Label	case 'b' :	2107:4:44712:44720	1218295	10	True				
ANR	1218331	ReturnStatement	return '\\010' ;	2107:14:44722:44735	1218295	11	True				
ANR	1218332	PrimaryExpression	'\\010'		1218295	0					
ANR	1218333	Label	case 'e' :	2108:4:44741:44749	1218295	12	True				
ANR	1218334	ReturnStatement	return '\\033' ;	2108:14:44751:44764	1218295	13	True				
ANR	1218335	PrimaryExpression	'\\033'		1218295	0					
ANR	1218336	Label	case 'v' :	2109:4:44770:44778	1218295	14	True				
ANR	1218337	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_V_VTAB ) )"		1218295	15					
ANR	1218338	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_V_VTAB )"	2110:10:44790:44840	1218295	0	True				
ANR	1218339	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_V_VTAB )"		1218295	0					
ANR	1218340	Callee	IS_SYNTAX_OP2		1218295	0					
ANR	1218341	Identifier	IS_SYNTAX_OP2		1218295	0					
ANR	1218342	ArgumentList	env -> syntax		1218295	1					
ANR	1218343	Argument	env -> syntax		1218295	0					
ANR	1218344	PtrMemberAccess	env -> syntax		1218295	0					
ANR	1218345	Identifier	env		1218295	0					
ANR	1218346	Identifier	syntax		1218295	1					
ANR	1218347	Argument	ONIG_SYN_OP2_ESC_V_VTAB		1218295	1					
ANR	1218348	Identifier	ONIG_SYN_OP2_ESC_V_VTAB		1218295	0					
ANR	1218349	ReturnStatement	return '\\v' ;	2111:1:44844:44855	1218295	1	True				
ANR	1218350	PrimaryExpression	'\\v'		1218295	0					
ANR	1218351	BreakStatement	break ;	2112:6:44863:44868	1218295	16	True				
ANR	1218352	Label	default :	2114:4:44875:44882	1218295	17	True				
ANR	1218353	Identifier	default		1218295	0					
ANR	1218354	BreakStatement	break ;	2115:6:44890:44895	1218295	18	True				
ANR	1218355	ReturnStatement	return c ;	2118:2:44909:44917	1218295	1	True				
ANR	1218356	Identifier	c		1218295	0					
ANR	1218357	ReturnType	static int		1218295	1					
ANR	1218358	Identifier	conv_backslash_value		1218295	2					
ANR	1218359	ParameterList	"int c , ScanEnv * env"		1218295	3					
ANR	1218360	Parameter	int c	2098:21:44465:44469	1218295	0	True				
ANR	1218361	ParameterType	int		1218295	0					
ANR	1218362	Identifier	c		1218295	1					
ANR	1218363	Parameter	ScanEnv * env	2098:28:44472:44483	1218295	1	True				
ANR	1218364	ParameterType	ScanEnv *		1218295	0					
ANR	1218365	Identifier	env		1218295	1					
ANR	1218366	CFGEntryNode	ENTRY		1218295		True				
ANR	1218367	CFGExitNode	EXIT		1218295		True				
ANR	1218368	Symbol	c		1218295						
ANR	1218369	Symbol	ONIG_SYN_OP_ESC_CONTROL_CHARS		1218295						
ANR	1218370	Symbol	* env		1218295						
ANR	1218371	Symbol	IS_SYNTAX_OP		1218295						
ANR	1218372	Symbol	ONIG_SYN_OP2_ESC_V_VTAB		1218295						
ANR	1218373	Symbol	env		1218295						
ANR	1218374	Symbol	env -> syntax		1218295						
ANR	1218375	Symbol	IS_SYNTAX_OP2		1218295						
ANR	1218376	Function	is_invalid_quantifier_target	2121:0:44922:45524							
ANR	1218377	FunctionDef	is_invalid_quantifier_target (Node * node)		1218376	0					
ANR	1218378	CompoundStatement		2123:0:44974:45524	1218376	0					
ANR	1218379	SwitchStatement	switch ( NTYPE ( node ) )		1218376	0					
ANR	1218380	Condition	NTYPE ( node )	2124:10:44986:44996	1218376	0	True				
ANR	1218381	CallExpression	NTYPE ( node )		1218376	0					
ANR	1218382	Callee	NTYPE		1218376	0					
ANR	1218383	Identifier	NTYPE		1218376	0					
ANR	1218384	ArgumentList	node		1218376	1					
ANR	1218385	Argument	node		1218376	0					
ANR	1218386	Identifier	node		1218376	0					
ANR	1218387	CompoundStatement		2:23:24:24	1218376	1					
ANR	1218388	Label	case NT_ANCHOR :	2125:2:45003:45017	1218376	0	True				
ANR	1218389	Identifier	NT_ANCHOR		1218376	0					
ANR	1218390	ReturnStatement	return 1 ;	2126:4:45023:45031	1218376	1	True				
ANR	1218391	PrimaryExpression	1		1218376	0					
ANR	1218392	BreakStatement	break ;	2127:4:45037:45042	1218376	2	True				
ANR	1218393	Label	case NT_ENCLOSE :	2129:2:45047:45062	1218376	3	True				
ANR	1218394	Identifier	NT_ENCLOSE		1218376	0					
ANR	1218395	BreakStatement	break ;	2132:4:45173:45178	1218376	4	True				
ANR	1218396	Label	case NT_LIST :	2134:2:45183:45195	1218376	5	True				
ANR	1218397	Identifier	NT_LIST		1218376	0					
ANR	1218398	DoStatement	do		1218376	6					
ANR	1218399	CompoundStatement		13:7:229:229	1218376	0					
ANR	1218400	IfStatement	if ( ! is_invalid_quantifier_target ( NCAR ( node ) ) )		1218376	0					
ANR	1218401	Condition	! is_invalid_quantifier_target ( NCAR ( node ) )	2136:10:45216:45257	1218376	0	True				
ANR	1218402	UnaryOperationExpression	! is_invalid_quantifier_target ( NCAR ( node ) )		1218376	0					
ANR	1218403	UnaryOperator	!		1218376	0					
ANR	1218404	CallExpression	is_invalid_quantifier_target ( NCAR ( node ) )		1218376	1					
ANR	1218405	Callee	is_invalid_quantifier_target		1218376	0					
ANR	1218406	Identifier	is_invalid_quantifier_target		1218376	0					
ANR	1218407	ArgumentList	NCAR ( node )		1218376	1					
ANR	1218408	Argument	NCAR ( node )		1218376	0					
ANR	1218409	CallExpression	NCAR ( node )		1218376	0					
ANR	1218410	Callee	NCAR		1218376	0					
ANR	1218411	Identifier	NCAR		1218376	0					
ANR	1218412	ArgumentList	node		1218376	1					
ANR	1218413	Argument	node		1218376	0					
ANR	1218414	Identifier	node		1218376	0					
ANR	1218415	ReturnStatement	return 0 ;	2136:54:45260:45268	1218376	1	True				
ANR	1218416	PrimaryExpression	0		1218376	0					
ANR	1218417	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	2137:13:45283:45312	1218376	1	True				
ANR	1218418	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1218376	0					
ANR	1218419	Callee	IS_NOT_NULL		1218376	0					
ANR	1218420	Identifier	IS_NOT_NULL		1218376	0					
ANR	1218421	ArgumentList	node = NCDR ( node )		1218376	1					
ANR	1218422	Argument	node = NCDR ( node )		1218376	0					
ANR	1218423	AssignmentExpression	node = NCDR ( node )		1218376	0		=			
ANR	1218424	Identifier	node		1218376	0					
ANR	1218425	CallExpression	NCDR ( node )		1218376	1					
ANR	1218426	Callee	NCDR		1218376	0					
ANR	1218427	Identifier	NCDR		1218376	0					
ANR	1218428	ArgumentList	node		1218376	1					
ANR	1218429	Argument	node		1218376	0					
ANR	1218430	Identifier	node		1218376	0					
ANR	1218431	ReturnStatement	return 0 ;	2138:4:45320:45328	1218376	7	True				
ANR	1218432	PrimaryExpression	0		1218376	0					
ANR	1218433	BreakStatement	break ;	2139:4:45334:45339	1218376	8	True				
ANR	1218434	Label	case NT_ALT :	2141:2:45344:45355	1218376	9	True				
ANR	1218435	Identifier	NT_ALT		1218376	0					
ANR	1218436	DoStatement	do		1218376	10					
ANR	1218437	CompoundStatement		20:7:389:389	1218376	0					
ANR	1218438	IfStatement	if ( is_invalid_quantifier_target ( NCAR ( node ) ) )		1218376	0					
ANR	1218439	Condition	is_invalid_quantifier_target ( NCAR ( node ) )	2143:10:45376:45415	1218376	0	True				
ANR	1218440	CallExpression	is_invalid_quantifier_target ( NCAR ( node ) )		1218376	0					
ANR	1218441	Callee	is_invalid_quantifier_target		1218376	0					
ANR	1218442	Identifier	is_invalid_quantifier_target		1218376	0					
ANR	1218443	ArgumentList	NCAR ( node )		1218376	1					
ANR	1218444	Argument	NCAR ( node )		1218376	0					
ANR	1218445	CallExpression	NCAR ( node )		1218376	0					
ANR	1218446	Callee	NCAR		1218376	0					
ANR	1218447	Identifier	NCAR		1218376	0					
ANR	1218448	ArgumentList	node		1218376	1					
ANR	1218449	Argument	node		1218376	0					
ANR	1218450	Identifier	node		1218376	0					
ANR	1218451	ReturnStatement	return 1 ;	2143:52:45418:45426	1218376	1	True				
ANR	1218452	PrimaryExpression	1		1218376	0					
ANR	1218453	Condition	IS_NOT_NULL ( node = NCDR ( node ) )	2144:13:45441:45470	1218376	1	True				
ANR	1218454	CallExpression	IS_NOT_NULL ( node = NCDR ( node ) )		1218376	0					
ANR	1218455	Callee	IS_NOT_NULL		1218376	0					
ANR	1218456	Identifier	IS_NOT_NULL		1218376	0					
ANR	1218457	ArgumentList	node = NCDR ( node )		1218376	1					
ANR	1218458	Argument	node = NCDR ( node )		1218376	0					
ANR	1218459	AssignmentExpression	node = NCDR ( node )		1218376	0		=			
ANR	1218460	Identifier	node		1218376	0					
ANR	1218461	CallExpression	NCDR ( node )		1218376	1					
ANR	1218462	Callee	NCDR		1218376	0					
ANR	1218463	Identifier	NCDR		1218376	0					
ANR	1218464	ArgumentList	node		1218376	1					
ANR	1218465	Argument	node		1218376	0					
ANR	1218466	Identifier	node		1218376	0					
ANR	1218467	BreakStatement	break ;	2145:4:45478:45483	1218376	11	True				
ANR	1218468	Label	default :	2147:2:45488:45495	1218376	12	True				
ANR	1218469	Identifier	default		1218376	0					
ANR	1218470	BreakStatement	break ;	2148:4:45501:45506	1218376	13	True				
ANR	1218471	ReturnStatement	return 0 ;	2150:2:45514:45522	1218376	1	True				
ANR	1218472	PrimaryExpression	0		1218376	0					
ANR	1218473	ReturnType	static int		1218376	1					
ANR	1218474	Identifier	is_invalid_quantifier_target		1218376	2					
ANR	1218475	ParameterList	Node * node		1218376	3					
ANR	1218476	Parameter	Node * node	2122:29:44962:44971	1218376	0	True				
ANR	1218477	ParameterType	Node *		1218376	0					
ANR	1218478	Identifier	node		1218376	1					
ANR	1218479	CFGEntryNode	ENTRY		1218376		True				
ANR	1218480	CFGExitNode	EXIT		1218376		True				
ANR	1218481	Symbol	is_invalid_quantifier_target		1218376						
ANR	1218482	Symbol	node		1218376						
ANR	1218483	Symbol	IS_NOT_NULL		1218376						
ANR	1218484	Symbol	NCAR		1218376						
ANR	1218485	Symbol	NCDR		1218376						
ANR	1218486	Symbol	NTYPE		1218376						
ANR	1218487	Function	popular_quantifier_num	2154:0:45565:46077							
ANR	1218488	FunctionDef	popular_quantifier_num (QtfrNode * q)		1218487	0					
ANR	1218489	CompoundStatement		2156:0:45612:46077	1218487	0					
ANR	1218490	IfStatement	if ( q -> greedy )		1218487	0					
ANR	1218491	Condition	q -> greedy	2157:6:45620:45628	1218487	0	True				
ANR	1218492	PtrMemberAccess	q -> greedy		1218487	0					
ANR	1218493	Identifier	q		1218487	0					
ANR	1218494	Identifier	greedy		1218487	1					
ANR	1218495	CompoundStatement		2:17:18:18	1218487	1					
ANR	1218496	IfStatement	if ( q -> lower == 0 )		1218487	0					
ANR	1218497	Condition	q -> lower == 0	2158:8:45641:45653	1218487	0	True				
ANR	1218498	EqualityExpression	q -> lower == 0		1218487	0		==			
ANR	1218499	PtrMemberAccess	q -> lower		1218487	0					
ANR	1218500	Identifier	q		1218487	0					
ANR	1218501	Identifier	lower		1218487	1					
ANR	1218502	PrimaryExpression	0		1218487	1					
ANR	1218503	CompoundStatement		3:23:43:43	1218487	1					
ANR	1218504	IfStatement	if ( q -> upper == 1 )		1218487	0					
ANR	1218505	Condition	q -> upper == 1	2159:10:45668:45680	1218487	0	True				
ANR	1218506	EqualityExpression	q -> upper == 1		1218487	0		==			
ANR	1218507	PtrMemberAccess	q -> upper		1218487	0					
ANR	1218508	Identifier	q		1218487	0					
ANR	1218509	Identifier	upper		1218487	1					
ANR	1218510	PrimaryExpression	1		1218487	1					
ANR	1218511	ReturnStatement	return 0 ;	2159:25:45683:45691	1218487	1	True				
ANR	1218512	PrimaryExpression	0		1218487	0					
ANR	1218513	ElseStatement	else		1218487	0					
ANR	1218514	IfStatement	if ( IS_REPEAT_INFINITE ( q -> upper ) )		1218487	0					
ANR	1218515	Condition	IS_REPEAT_INFINITE ( q -> upper )	2160:15:45708:45735	1218487	0	True				
ANR	1218516	CallExpression	IS_REPEAT_INFINITE ( q -> upper )		1218487	0					
ANR	1218517	Callee	IS_REPEAT_INFINITE		1218487	0					
ANR	1218518	Identifier	IS_REPEAT_INFINITE		1218487	0					
ANR	1218519	ArgumentList	q -> upper		1218487	1					
ANR	1218520	Argument	q -> upper		1218487	0					
ANR	1218521	PtrMemberAccess	q -> upper		1218487	0					
ANR	1218522	Identifier	q		1218487	0					
ANR	1218523	Identifier	upper		1218487	1					
ANR	1218524	ReturnStatement	return 1 ;	2160:45:45738:45746	1218487	1	True				
ANR	1218525	PrimaryExpression	1		1218487	0					
ANR	1218526	ElseStatement	else		1218487	0					
ANR	1218527	IfStatement	if ( q -> lower == 1 )		1218487	0					
ANR	1218528	Condition	q -> lower == 1	2162:13:45767:45779	1218487	0	True				
ANR	1218529	EqualityExpression	q -> lower == 1		1218487	0		==			
ANR	1218530	PtrMemberAccess	q -> lower		1218487	0					
ANR	1218531	Identifier	q		1218487	0					
ANR	1218532	Identifier	lower		1218487	1					
ANR	1218533	PrimaryExpression	1		1218487	1					
ANR	1218534	CompoundStatement		7:28:169:169	1218487	1					
ANR	1218535	IfStatement	if ( IS_REPEAT_INFINITE ( q -> upper ) )		1218487	0					
ANR	1218536	Condition	IS_REPEAT_INFINITE ( q -> upper )	2163:10:45794:45821	1218487	0	True				
ANR	1218537	CallExpression	IS_REPEAT_INFINITE ( q -> upper )		1218487	0					
ANR	1218538	Callee	IS_REPEAT_INFINITE		1218487	0					
ANR	1218539	Identifier	IS_REPEAT_INFINITE		1218487	0					
ANR	1218540	ArgumentList	q -> upper		1218487	1					
ANR	1218541	Argument	q -> upper		1218487	0					
ANR	1218542	PtrMemberAccess	q -> upper		1218487	0					
ANR	1218543	Identifier	q		1218487	0					
ANR	1218544	Identifier	upper		1218487	1					
ANR	1218545	ReturnStatement	return 2 ;	2163:40:45824:45832	1218487	1	True				
ANR	1218546	PrimaryExpression	2		1218487	0					
ANR	1218547	ElseStatement	else		1218487	0					
ANR	1218548	CompoundStatement		11:7:238:238	1218487	0					
ANR	1218549	IfStatement	if ( q -> lower == 0 )		1218487	0					
ANR	1218550	Condition	q -> lower == 0	2167:8:45861:45873	1218487	0	True				
ANR	1218551	EqualityExpression	q -> lower == 0		1218487	0		==			
ANR	1218552	PtrMemberAccess	q -> lower		1218487	0					
ANR	1218553	Identifier	q		1218487	0					
ANR	1218554	Identifier	lower		1218487	1					
ANR	1218555	PrimaryExpression	0		1218487	1					
ANR	1218556	CompoundStatement		12:23:263:263	1218487	1					
ANR	1218557	IfStatement	if ( q -> upper == 1 )		1218487	0					
ANR	1218558	Condition	q -> upper == 1	2168:10:45888:45900	1218487	0	True				
ANR	1218559	EqualityExpression	q -> upper == 1		1218487	0		==			
ANR	1218560	PtrMemberAccess	q -> upper		1218487	0					
ANR	1218561	Identifier	q		1218487	0					
ANR	1218562	Identifier	upper		1218487	1					
ANR	1218563	PrimaryExpression	1		1218487	1					
ANR	1218564	ReturnStatement	return 3 ;	2168:25:45903:45911	1218487	1	True				
ANR	1218565	PrimaryExpression	3		1218487	0					
ANR	1218566	ElseStatement	else		1218487	0					
ANR	1218567	IfStatement	if ( IS_REPEAT_INFINITE ( q -> upper ) )		1218487	0					
ANR	1218568	Condition	IS_REPEAT_INFINITE ( q -> upper )	2169:15:45928:45955	1218487	0	True				
ANR	1218569	CallExpression	IS_REPEAT_INFINITE ( q -> upper )		1218487	0					
ANR	1218570	Callee	IS_REPEAT_INFINITE		1218487	0					
ANR	1218571	Identifier	IS_REPEAT_INFINITE		1218487	0					
ANR	1218572	ArgumentList	q -> upper		1218487	1					
ANR	1218573	Argument	q -> upper		1218487	0					
ANR	1218574	PtrMemberAccess	q -> upper		1218487	0					
ANR	1218575	Identifier	q		1218487	0					
ANR	1218576	Identifier	upper		1218487	1					
ANR	1218577	ReturnStatement	return 4 ;	2169:45:45958:45966	1218487	1	True				
ANR	1218578	PrimaryExpression	4		1218487	0					
ANR	1218579	ElseStatement	else		1218487	0					
ANR	1218580	IfStatement	if ( q -> lower == 1 )		1218487	0					
ANR	1218581	Condition	q -> lower == 1	2171:13:45987:45999	1218487	0	True				
ANR	1218582	EqualityExpression	q -> lower == 1		1218487	0		==			
ANR	1218583	PtrMemberAccess	q -> lower		1218487	0					
ANR	1218584	Identifier	q		1218487	0					
ANR	1218585	Identifier	lower		1218487	1					
ANR	1218586	PrimaryExpression	1		1218487	1					
ANR	1218587	CompoundStatement		16:28:389:389	1218487	1					
ANR	1218588	IfStatement	if ( IS_REPEAT_INFINITE ( q -> upper ) )		1218487	0					
ANR	1218589	Condition	IS_REPEAT_INFINITE ( q -> upper )	2172:10:46014:46041	1218487	0	True				
ANR	1218590	CallExpression	IS_REPEAT_INFINITE ( q -> upper )		1218487	0					
ANR	1218591	Callee	IS_REPEAT_INFINITE		1218487	0					
ANR	1218592	Identifier	IS_REPEAT_INFINITE		1218487	0					
ANR	1218593	ArgumentList	q -> upper		1218487	1					
ANR	1218594	Argument	q -> upper		1218487	0					
ANR	1218595	PtrMemberAccess	q -> upper		1218487	0					
ANR	1218596	Identifier	q		1218487	0					
ANR	1218597	Identifier	upper		1218487	1					
ANR	1218598	ReturnStatement	return 5 ;	2172:40:46044:46052	1218487	1	True				
ANR	1218599	PrimaryExpression	5		1218487	0					
ANR	1218600	ReturnStatement	return - 1 ;	2175:2:46066:46075	1218487	1	True				
ANR	1218601	UnaryOperationExpression	- 1		1218487	0					
ANR	1218602	UnaryOperator	-		1218487	0					
ANR	1218603	PrimaryExpression	1		1218487	1					
ANR	1218604	ReturnType	static int		1218487	1					
ANR	1218605	Identifier	popular_quantifier_num		1218487	2					
ANR	1218606	ParameterList	QtfrNode * q		1218487	3					
ANR	1218607	Parameter	QtfrNode * q	2155:23:45599:45609	1218487	0	True				
ANR	1218608	ParameterType	QtfrNode *		1218487	0					
ANR	1218609	Identifier	q		1218487	1					
ANR	1218610	CFGEntryNode	ENTRY		1218487		True				
ANR	1218611	CFGExitNode	EXIT		1218487		True				
ANR	1218612	Symbol	q -> lower		1218487						
ANR	1218613	Symbol	q		1218487						
ANR	1218614	Symbol	q -> greedy		1218487						
ANR	1218615	Symbol	q -> upper		1218487						
ANR	1218616	Symbol	* q		1218487						
ANR	1218617	Symbol	IS_REPEAT_INFINITE		1218487						
ANR	1218618	ClassDef	ReduceType	2179:0:46081:46316							
ANR	1218619	Function	onig_reduce_nested_quantifier	2198:0:46781:47931							
ANR	1218620	FunctionDef	"onig_reduce_nested_quantifier (Node * pnode , Node * cnode)"		1218619	0					
ANR	1218621	CompoundStatement		2200:0:46849:47931	1218619	0					
ANR	1218622	IdentifierDeclStatement	"int pnum , cnum ;"	2201:2:46853:46867	1218619	0	True				
ANR	1218623	IdentifierDecl	pnum		1218619	0					
ANR	1218624	IdentifierDeclType	int		1218619	0					
ANR	1218625	Identifier	pnum		1218619	1					
ANR	1218626	IdentifierDecl	cnum		1218619	1					
ANR	1218627	IdentifierDeclType	int		1218619	0					
ANR	1218628	Identifier	cnum		1218619	1					
ANR	1218629	IdentifierDeclStatement	"QtfrNode * p , * c ;"	2202:2:46871:46886	1218619	1	True				
ANR	1218630	IdentifierDecl	* p		1218619	0					
ANR	1218631	IdentifierDeclType	QtfrNode *		1218619	0					
ANR	1218632	Identifier	p		1218619	1					
ANR	1218633	IdentifierDecl	* c		1218619	1					
ANR	1218634	IdentifierDeclType	QtfrNode *		1218619	0					
ANR	1218635	Identifier	c		1218619	1					
ANR	1218636	ExpressionStatement	p = NQTFR ( pnode )	2204:2:46891:46907	1218619	2	True				
ANR	1218637	AssignmentExpression	p = NQTFR ( pnode )		1218619	0		=			
ANR	1218638	Identifier	p		1218619	0					
ANR	1218639	CallExpression	NQTFR ( pnode )		1218619	1					
ANR	1218640	Callee	NQTFR		1218619	0					
ANR	1218641	Identifier	NQTFR		1218619	0					
ANR	1218642	ArgumentList	pnode		1218619	1					
ANR	1218643	Argument	pnode		1218619	0					
ANR	1218644	Identifier	pnode		1218619	0					
ANR	1218645	ExpressionStatement	c = NQTFR ( cnode )	2205:2:46911:46927	1218619	3	True				
ANR	1218646	AssignmentExpression	c = NQTFR ( cnode )		1218619	0		=			
ANR	1218647	Identifier	c		1218619	0					
ANR	1218648	CallExpression	NQTFR ( cnode )		1218619	1					
ANR	1218649	Callee	NQTFR		1218619	0					
ANR	1218650	Identifier	NQTFR		1218619	0					
ANR	1218651	ArgumentList	cnode		1218619	1					
ANR	1218652	Argument	cnode		1218619	0					
ANR	1218653	Identifier	cnode		1218619	0					
ANR	1218654	ExpressionStatement	pnum = popular_quantifier_num ( p )	2206:2:46931:46963	1218619	4	True				
ANR	1218655	AssignmentExpression	pnum = popular_quantifier_num ( p )		1218619	0		=			
ANR	1218656	Identifier	pnum		1218619	0					
ANR	1218657	CallExpression	popular_quantifier_num ( p )		1218619	1					
ANR	1218658	Callee	popular_quantifier_num		1218619	0					
ANR	1218659	Identifier	popular_quantifier_num		1218619	0					
ANR	1218660	ArgumentList	p		1218619	1					
ANR	1218661	Argument	p		1218619	0					
ANR	1218662	Identifier	p		1218619	0					
ANR	1218663	ExpressionStatement	cnum = popular_quantifier_num ( c )	2207:2:46967:46999	1218619	5	True				
ANR	1218664	AssignmentExpression	cnum = popular_quantifier_num ( c )		1218619	0		=			
ANR	1218665	Identifier	cnum		1218619	0					
ANR	1218666	CallExpression	popular_quantifier_num ( c )		1218619	1					
ANR	1218667	Callee	popular_quantifier_num		1218619	0					
ANR	1218668	Identifier	popular_quantifier_num		1218619	0					
ANR	1218669	ArgumentList	c		1218619	1					
ANR	1218670	Argument	c		1218619	0					
ANR	1218671	Identifier	c		1218619	0					
ANR	1218672	IfStatement	if ( pnum < 0 || cnum < 0 )		1218619	6					
ANR	1218673	Condition	pnum < 0 || cnum < 0	2208:6:47007:47026	1218619	0	True				
ANR	1218674	OrExpression	pnum < 0 || cnum < 0		1218619	0		||			
ANR	1218675	RelationalExpression	pnum < 0		1218619	0		<			
ANR	1218676	Identifier	pnum		1218619	0					
ANR	1218677	PrimaryExpression	0		1218619	1					
ANR	1218678	RelationalExpression	cnum < 0		1218619	1		<			
ANR	1218679	Identifier	cnum		1218619	0					
ANR	1218680	PrimaryExpression	0		1218619	1					
ANR	1218681	ReturnStatement	return ;	2208:28:47029:47036	1218619	1	True				
ANR	1218682	SwitchStatement	switch ( ReduceTypeTable [ cnum ] [ pnum ] )		1218619	7					
ANR	1218683	Condition	ReduceTypeTable [ cnum ] [ pnum ]	2210:9:47048:47074	1218619	0	True				
ANR	1218684	ArrayIndexing	ReduceTypeTable [ cnum ] [ pnum ]		1218619	0					
ANR	1218685	ArrayIndexing	ReduceTypeTable [ cnum ]		1218619	0					
ANR	1218686	Identifier	ReduceTypeTable		1218619	0					
ANR	1218687	Identifier	cnum		1218619	1					
ANR	1218688	Identifier	pnum		1218619	1					
ANR	1218689	CompoundStatement		11:38:227:227	1218619	1					
ANR	1218690	Label	case RQ_DEL :	2211:2:47081:47092	1218619	0	True				
ANR	1218691	Identifier	RQ_DEL		1218619	0					
ANR	1218692	ExpressionStatement	* pnode = * cnode	2212:4:47098:47113	1218619	1	True				
ANR	1218693	AssignmentExpression	* pnode = * cnode		1218619	0		=			
ANR	1218694	UnaryOperationExpression	* pnode		1218619	0					
ANR	1218695	UnaryOperator	*		1218619	0					
ANR	1218696	Identifier	pnode		1218619	1					
ANR	1218697	UnaryOperationExpression	* cnode		1218619	1					
ANR	1218698	UnaryOperator	*		1218619	0					
ANR	1218699	Identifier	cnode		1218619	1					
ANR	1218700	BreakStatement	break ;	2213:4:47119:47124	1218619	2	True				
ANR	1218701	Label	case RQ_A :	2214:2:47128:47137	1218619	3	True				
ANR	1218702	Identifier	RQ_A		1218619	0					
ANR	1218703	ExpressionStatement	p -> target = c -> target	2215:4:47143:47164	1218619	4	True				
ANR	1218704	AssignmentExpression	p -> target = c -> target		1218619	0		=			
ANR	1218705	PtrMemberAccess	p -> target		1218619	0					
ANR	1218706	Identifier	p		1218619	0					
ANR	1218707	Identifier	target		1218619	1					
ANR	1218708	PtrMemberAccess	c -> target		1218619	1					
ANR	1218709	Identifier	c		1218619	0					
ANR	1218710	Identifier	target		1218619	1					
ANR	1218711	ExpressionStatement	p -> lower = 0	2216:4:47170:47183	1218619	5	True				
ANR	1218712	AssignmentExpression	p -> lower = 0		1218619	0		=			
ANR	1218713	PtrMemberAccess	p -> lower		1218619	0					
ANR	1218714	Identifier	p		1218619	0					
ANR	1218715	Identifier	lower		1218619	1					
ANR	1218716	PrimaryExpression	0		1218619	1					
ANR	1218717	ExpressionStatement	p -> upper = REPEAT_INFINITE	2216:20:47186:47212	1218619	6	True				
ANR	1218718	AssignmentExpression	p -> upper = REPEAT_INFINITE		1218619	0		=			
ANR	1218719	PtrMemberAccess	p -> upper		1218619	0					
ANR	1218720	Identifier	p		1218619	0					
ANR	1218721	Identifier	upper		1218619	1					
ANR	1218722	Identifier	REPEAT_INFINITE		1218619	1					
ANR	1218723	ExpressionStatement	p -> greedy = 1	2216:49:47215:47228	1218619	7	True				
ANR	1218724	AssignmentExpression	p -> greedy = 1		1218619	0		=			
ANR	1218725	PtrMemberAccess	p -> greedy		1218619	0					
ANR	1218726	Identifier	p		1218619	0					
ANR	1218727	Identifier	greedy		1218619	1					
ANR	1218728	PrimaryExpression	1		1218619	1					
ANR	1218729	BreakStatement	break ;	2217:4:47234:47239	1218619	8	True				
ANR	1218730	Label	case RQ_AQ :	2218:2:47243:47253	1218619	9	True				
ANR	1218731	Identifier	RQ_AQ		1218619	0					
ANR	1218732	ExpressionStatement	p -> target = c -> target	2219:4:47259:47280	1218619	10	True				
ANR	1218733	AssignmentExpression	p -> target = c -> target		1218619	0		=			
ANR	1218734	PtrMemberAccess	p -> target		1218619	0					
ANR	1218735	Identifier	p		1218619	0					
ANR	1218736	Identifier	target		1218619	1					
ANR	1218737	PtrMemberAccess	c -> target		1218619	1					
ANR	1218738	Identifier	c		1218619	0					
ANR	1218739	Identifier	target		1218619	1					
ANR	1218740	ExpressionStatement	p -> lower = 0	2220:4:47286:47299	1218619	11	True				
ANR	1218741	AssignmentExpression	p -> lower = 0		1218619	0		=			
ANR	1218742	PtrMemberAccess	p -> lower		1218619	0					
ANR	1218743	Identifier	p		1218619	0					
ANR	1218744	Identifier	lower		1218619	1					
ANR	1218745	PrimaryExpression	0		1218619	1					
ANR	1218746	ExpressionStatement	p -> upper = REPEAT_INFINITE	2220:20:47302:47328	1218619	12	True				
ANR	1218747	AssignmentExpression	p -> upper = REPEAT_INFINITE		1218619	0		=			
ANR	1218748	PtrMemberAccess	p -> upper		1218619	0					
ANR	1218749	Identifier	p		1218619	0					
ANR	1218750	Identifier	upper		1218619	1					
ANR	1218751	Identifier	REPEAT_INFINITE		1218619	1					
ANR	1218752	ExpressionStatement	p -> greedy = 0	2220:49:47331:47344	1218619	13	True				
ANR	1218753	AssignmentExpression	p -> greedy = 0		1218619	0		=			
ANR	1218754	PtrMemberAccess	p -> greedy		1218619	0					
ANR	1218755	Identifier	p		1218619	0					
ANR	1218756	Identifier	greedy		1218619	1					
ANR	1218757	PrimaryExpression	0		1218619	1					
ANR	1218758	BreakStatement	break ;	2221:4:47350:47355	1218619	14	True				
ANR	1218759	Label	case RQ_QQ :	2222:2:47359:47369	1218619	15	True				
ANR	1218760	Identifier	RQ_QQ		1218619	0					
ANR	1218761	ExpressionStatement	p -> target = c -> target	2223:4:47375:47396	1218619	16	True				
ANR	1218762	AssignmentExpression	p -> target = c -> target		1218619	0		=			
ANR	1218763	PtrMemberAccess	p -> target		1218619	0					
ANR	1218764	Identifier	p		1218619	0					
ANR	1218765	Identifier	target		1218619	1					
ANR	1218766	PtrMemberAccess	c -> target		1218619	1					
ANR	1218767	Identifier	c		1218619	0					
ANR	1218768	Identifier	target		1218619	1					
ANR	1218769	ExpressionStatement	p -> lower = 0	2224:4:47402:47415	1218619	17	True				
ANR	1218770	AssignmentExpression	p -> lower = 0		1218619	0		=			
ANR	1218771	PtrMemberAccess	p -> lower		1218619	0					
ANR	1218772	Identifier	p		1218619	0					
ANR	1218773	Identifier	lower		1218619	1					
ANR	1218774	PrimaryExpression	0		1218619	1					
ANR	1218775	ExpressionStatement	p -> upper = 1	2224:20:47418:47430	1218619	18	True				
ANR	1218776	AssignmentExpression	p -> upper = 1		1218619	0		=			
ANR	1218777	PtrMemberAccess	p -> upper		1218619	0					
ANR	1218778	Identifier	p		1218619	0					
ANR	1218779	Identifier	upper		1218619	1					
ANR	1218780	PrimaryExpression	1		1218619	1					
ANR	1218781	ExpressionStatement	p -> greedy = 0	2224:35:47433:47446	1218619	19	True				
ANR	1218782	AssignmentExpression	p -> greedy = 0		1218619	0		=			
ANR	1218783	PtrMemberAccess	p -> greedy		1218619	0					
ANR	1218784	Identifier	p		1218619	0					
ANR	1218785	Identifier	greedy		1218619	1					
ANR	1218786	PrimaryExpression	0		1218619	1					
ANR	1218787	BreakStatement	break ;	2225:4:47452:47457	1218619	20	True				
ANR	1218788	Label	case RQ_P_QQ :	2226:2:47461:47473	1218619	21	True				
ANR	1218789	Identifier	RQ_P_QQ		1218619	0					
ANR	1218790	ExpressionStatement	p -> target = cnode	2227:4:47479:47496	1218619	22	True				
ANR	1218791	AssignmentExpression	p -> target = cnode		1218619	0		=			
ANR	1218792	PtrMemberAccess	p -> target		1218619	0					
ANR	1218793	Identifier	p		1218619	0					
ANR	1218794	Identifier	target		1218619	1					
ANR	1218795	Identifier	cnode		1218619	1					
ANR	1218796	ExpressionStatement	p -> lower = 0	2228:4:47502:47515	1218619	23	True				
ANR	1218797	AssignmentExpression	p -> lower = 0		1218619	0		=			
ANR	1218798	PtrMemberAccess	p -> lower		1218619	0					
ANR	1218799	Identifier	p		1218619	0					
ANR	1218800	Identifier	lower		1218619	1					
ANR	1218801	PrimaryExpression	0		1218619	1					
ANR	1218802	ExpressionStatement	p -> upper = 1	2228:20:47518:47530	1218619	24	True				
ANR	1218803	AssignmentExpression	p -> upper = 1		1218619	0		=			
ANR	1218804	PtrMemberAccess	p -> upper		1218619	0					
ANR	1218805	Identifier	p		1218619	0					
ANR	1218806	Identifier	upper		1218619	1					
ANR	1218807	PrimaryExpression	1		1218619	1					
ANR	1218808	ExpressionStatement	p -> greedy = 0	2228:35:47533:47546	1218619	25	True				
ANR	1218809	AssignmentExpression	p -> greedy = 0		1218619	0		=			
ANR	1218810	PtrMemberAccess	p -> greedy		1218619	0					
ANR	1218811	Identifier	p		1218619	0					
ANR	1218812	Identifier	greedy		1218619	1					
ANR	1218813	PrimaryExpression	0		1218619	1					
ANR	1218814	ExpressionStatement	c -> lower = 1	2229:4:47552:47565	1218619	26	True				
ANR	1218815	AssignmentExpression	c -> lower = 1		1218619	0		=			
ANR	1218816	PtrMemberAccess	c -> lower		1218619	0					
ANR	1218817	Identifier	c		1218619	0					
ANR	1218818	Identifier	lower		1218619	1					
ANR	1218819	PrimaryExpression	1		1218619	1					
ANR	1218820	ExpressionStatement	c -> upper = REPEAT_INFINITE	2229:20:47568:47594	1218619	27	True				
ANR	1218821	AssignmentExpression	c -> upper = REPEAT_INFINITE		1218619	0		=			
ANR	1218822	PtrMemberAccess	c -> upper		1218619	0					
ANR	1218823	Identifier	c		1218619	0					
ANR	1218824	Identifier	upper		1218619	1					
ANR	1218825	Identifier	REPEAT_INFINITE		1218619	1					
ANR	1218826	ExpressionStatement	c -> greedy = 1	2229:49:47597:47610	1218619	28	True				
ANR	1218827	AssignmentExpression	c -> greedy = 1		1218619	0		=			
ANR	1218828	PtrMemberAccess	c -> greedy		1218619	0					
ANR	1218829	Identifier	c		1218619	0					
ANR	1218830	Identifier	greedy		1218619	1					
ANR	1218831	PrimaryExpression	1		1218619	1					
ANR	1218832	ReturnStatement	return ;	2230:4:47616:47623	1218619	29	True				
ANR	1218833	BreakStatement	break ;	2231:4:47629:47634	1218619	30	True				
ANR	1218834	Label	case RQ_PQ_Q :	2232:2:47638:47650	1218619	31	True				
ANR	1218835	Identifier	RQ_PQ_Q		1218619	0					
ANR	1218836	ExpressionStatement	p -> target = cnode	2233:4:47656:47673	1218619	32	True				
ANR	1218837	AssignmentExpression	p -> target = cnode		1218619	0		=			
ANR	1218838	PtrMemberAccess	p -> target		1218619	0					
ANR	1218839	Identifier	p		1218619	0					
ANR	1218840	Identifier	target		1218619	1					
ANR	1218841	Identifier	cnode		1218619	1					
ANR	1218842	ExpressionStatement	p -> lower = 0	2234:4:47679:47692	1218619	33	True				
ANR	1218843	AssignmentExpression	p -> lower = 0		1218619	0		=			
ANR	1218844	PtrMemberAccess	p -> lower		1218619	0					
ANR	1218845	Identifier	p		1218619	0					
ANR	1218846	Identifier	lower		1218619	1					
ANR	1218847	PrimaryExpression	0		1218619	1					
ANR	1218848	ExpressionStatement	p -> upper = 1	2234:20:47695:47707	1218619	34	True				
ANR	1218849	AssignmentExpression	p -> upper = 1		1218619	0		=			
ANR	1218850	PtrMemberAccess	p -> upper		1218619	0					
ANR	1218851	Identifier	p		1218619	0					
ANR	1218852	Identifier	upper		1218619	1					
ANR	1218853	PrimaryExpression	1		1218619	1					
ANR	1218854	ExpressionStatement	p -> greedy = 1	2234:35:47710:47723	1218619	35	True				
ANR	1218855	AssignmentExpression	p -> greedy = 1		1218619	0		=			
ANR	1218856	PtrMemberAccess	p -> greedy		1218619	0					
ANR	1218857	Identifier	p		1218619	0					
ANR	1218858	Identifier	greedy		1218619	1					
ANR	1218859	PrimaryExpression	1		1218619	1					
ANR	1218860	ExpressionStatement	c -> lower = 1	2235:4:47729:47742	1218619	36	True				
ANR	1218861	AssignmentExpression	c -> lower = 1		1218619	0		=			
ANR	1218862	PtrMemberAccess	c -> lower		1218619	0					
ANR	1218863	Identifier	c		1218619	0					
ANR	1218864	Identifier	lower		1218619	1					
ANR	1218865	PrimaryExpression	1		1218619	1					
ANR	1218866	ExpressionStatement	c -> upper = REPEAT_INFINITE	2235:20:47745:47771	1218619	37	True				
ANR	1218867	AssignmentExpression	c -> upper = REPEAT_INFINITE		1218619	0		=			
ANR	1218868	PtrMemberAccess	c -> upper		1218619	0					
ANR	1218869	Identifier	c		1218619	0					
ANR	1218870	Identifier	upper		1218619	1					
ANR	1218871	Identifier	REPEAT_INFINITE		1218619	1					
ANR	1218872	ExpressionStatement	c -> greedy = 0	2235:49:47774:47787	1218619	38	True				
ANR	1218873	AssignmentExpression	c -> greedy = 0		1218619	0		=			
ANR	1218874	PtrMemberAccess	c -> greedy		1218619	0					
ANR	1218875	Identifier	c		1218619	0					
ANR	1218876	Identifier	greedy		1218619	1					
ANR	1218877	PrimaryExpression	0		1218619	1					
ANR	1218878	ReturnStatement	return ;	2236:4:47793:47800	1218619	39	True				
ANR	1218879	BreakStatement	break ;	2237:4:47806:47811	1218619	40	True				
ANR	1218880	Label	case RQ_ASIS :	2238:2:47815:47827	1218619	41	True				
ANR	1218881	Identifier	RQ_ASIS		1218619	0					
ANR	1218882	ExpressionStatement	p -> target = cnode	2239:4:47833:47850	1218619	42	True				
ANR	1218883	AssignmentExpression	p -> target = cnode		1218619	0		=			
ANR	1218884	PtrMemberAccess	p -> target		1218619	0					
ANR	1218885	Identifier	p		1218619	0					
ANR	1218886	Identifier	target		1218619	1					
ANR	1218887	Identifier	cnode		1218619	1					
ANR	1218888	ReturnStatement	return ;	2240:4:47856:47863	1218619	43	True				
ANR	1218889	BreakStatement	break ;	2241:4:47869:47874	1218619	44	True				
ANR	1218890	ExpressionStatement	c -> target = NULL_NODE	2244:2:47883:47904	1218619	8	True				
ANR	1218891	AssignmentExpression	c -> target = NULL_NODE		1218619	0		=			
ANR	1218892	PtrMemberAccess	c -> target		1218619	0					
ANR	1218893	Identifier	c		1218619	0					
ANR	1218894	Identifier	target		1218619	1					
ANR	1218895	Identifier	NULL_NODE		1218619	1					
ANR	1218896	ExpressionStatement	onig_node_free ( cnode )	2245:2:47908:47929	1218619	9	True				
ANR	1218897	CallExpression	onig_node_free ( cnode )		1218619	0					
ANR	1218898	Callee	onig_node_free		1218619	0					
ANR	1218899	Identifier	onig_node_free		1218619	0					
ANR	1218900	ArgumentList	cnode		1218619	1					
ANR	1218901	Argument	cnode		1218619	0					
ANR	1218902	Identifier	cnode		1218619	0					
ANR	1218903	ReturnType	extern void		1218619	1					
ANR	1218904	Identifier	onig_reduce_nested_quantifier		1218619	2					
ANR	1218905	ParameterList	"Node * pnode , Node * cnode"		1218619	3					
ANR	1218906	Parameter	Node * pnode	2199:30:46823:46833	1218619	0	True				
ANR	1218907	ParameterType	Node *		1218619	0					
ANR	1218908	Identifier	pnode		1218619	1					
ANR	1218909	Parameter	Node * cnode	2199:43:46836:46846	1218619	1	True				
ANR	1218910	ParameterType	Node *		1218619	0					
ANR	1218911	Identifier	cnode		1218619	1					
ANR	1218912	CFGEntryNode	ENTRY		1218619		True				
ANR	1218913	CFGExitNode	EXIT		1218619		True				
ANR	1218914	Symbol	* * ReduceTypeTable		1218619						
ANR	1218915	Symbol	* pnode		1218619						
ANR	1218916	Symbol	c -> greedy		1218619						
ANR	1218917	Symbol	cnode		1218619						
ANR	1218918	Symbol	p -> lower		1218619						
ANR	1218919	Symbol	NQTFR		1218619						
ANR	1218920	Symbol	popular_quantifier_num		1218619						
ANR	1218921	Symbol	REPEAT_INFINITE		1218619						
ANR	1218922	Symbol	c -> target		1218619						
ANR	1218923	Symbol	ReduceTypeTable		1218619						
ANR	1218924	Symbol	c -> upper		1218619						
ANR	1218925	Symbol	pnum		1218619						
ANR	1218926	Symbol	p -> target		1218619						
ANR	1218927	Symbol	c -> lower		1218619						
ANR	1218928	Symbol	c		1218619						
ANR	1218929	Symbol	* cnum		1218619						
ANR	1218930	Symbol	p -> upper		1218619						
ANR	1218931	Symbol	* cnode		1218619						
ANR	1218932	Symbol	cnum		1218619						
ANR	1218933	Symbol	* c		1218619						
ANR	1218934	Symbol	pnode		1218619						
ANR	1218935	Symbol	* pnum		1218619						
ANR	1218936	Symbol	p		1218619						
ANR	1218937	Symbol	p -> greedy		1218619						
ANR	1218938	Symbol	* ReduceTypeTable		1218619						
ANR	1218939	Symbol	* * cnum		1218619						
ANR	1218940	Symbol	* p		1218619						
ANR	1218941	Symbol	NULL_NODE		1218619						
ANR	1218942	ClassDef	TokenSyms	2249:0:47935:48454							
ANR	1218943	ClassDef	<unnamed>	2277:8:48466:49139							
ANR	1218944	DeclStmt									
ANR	1218945	Decl							enum TokenSyms	enum TokenSyms	type
ANR	1218946	DeclStmt									
ANR	1218947	Decl							int	int	escaped
ANR	1218948	DeclStmt									
ANR	1218949	Decl							int	int	base
ANR	1218950	DeclStmt									
ANR	1218951	Decl							UChar	UChar *	backp
ANR	1218952	ClassDef	<unnamed>	2282:2:48585:49126							
ANR	1218953	DeclStmt									
ANR	1218954	Decl							UChar	UChar *	s
ANR	1218955	DeclStmt									
ANR	1218956	Decl							int	int	c
ANR	1218957	DeclStmt									
ANR	1218958	Decl							OnigCodePoint	OnigCodePoint	code
ANR	1218959	DeclStmt									
ANR	1218960	Decl							int	int	anchor
ANR	1218961	DeclStmt									
ANR	1218962	Decl							int	int	subtype
ANR	1218963	ClassDef	<unnamed>	2288:4:48685:48780							
ANR	1218964	DeclStmt									
ANR	1218965	Decl							int	int	lower
ANR	1218966	DeclStmt									
ANR	1218967	Decl							int	int	upper
ANR	1218968	DeclStmt									
ANR	1218969	Decl							int	int	greedy
ANR	1218970	DeclStmt									
ANR	1218971	Decl							int	int	possessive
ANR	1218972	DeclStmt									
ANR	1218973	Decl									repeat
ANR	1218974	ClassDef	<unnamed>	2294:4:48786:48976							
ANR	1218975	DeclStmt									
ANR	1218976	Decl							int	int	num
ANR	1218977	DeclStmt									
ANR	1218978	Decl							int	int	ref1
ANR	1218979	DeclStmt									
ANR	1218980	Decl							int	int *	refs
ANR	1218981	DeclStmt									
ANR	1218982	Decl							int	int	by_name
ANR	1218983	DeclStmt									
ANR	1218984	Decl							int	int	exist_level
ANR	1218985	DeclStmt									
ANR	1218986	Decl							int	int	level
ANR	1218987	DeclStmt									
ANR	1218988	Decl									backref
ANR	1218989	ClassDef	<unnamed>	2304:4:48982:49062							
ANR	1218990	DeclStmt									
ANR	1218991	Decl							UChar	UChar *	name
ANR	1218992	DeclStmt									
ANR	1218993	Decl							UChar	UChar *	name_end
ANR	1218994	DeclStmt									
ANR	1218995	Decl							int	int	gnum
ANR	1218996	DeclStmt									
ANR	1218997	Decl									call
ANR	1218998	ClassDef	<unnamed>	2309:4:49068:49119							
ANR	1218999	DeclStmt									
ANR	1219000	Decl							int	int	ctype
ANR	1219001	DeclStmt									
ANR	1219002	Decl							int	int	not
ANR	1219003	DeclStmt									
ANR	1219004	Decl									prop
ANR	1219005	DeclStmt									
ANR	1219006	Decl									u
ANR	1219007	DeclStmt									
ANR	1219008	Decl									OnigToken
ANR	1219009	Function	fetch_range_quantifier	2317:0:49143:51285							
ANR	1219010	FunctionDef	"fetch_range_quantifier (UChar * * src , UChar * end , OnigToken * tok , ScanEnv * env)"		1219009	0					
ANR	1219011	CompoundStatement		2319:0:49232:51285	1219009	0					
ANR	1219012	IdentifierDeclStatement	"int low , up , syn_allow , non_low = 0 ;"	2320:2:49236:49271	1219009	0	True				
ANR	1219013	IdentifierDecl	low		1219009	0					
ANR	1219014	IdentifierDeclType	int		1219009	0					
ANR	1219015	Identifier	low		1219009	1					
ANR	1219016	IdentifierDecl	up		1219009	1					
ANR	1219017	IdentifierDeclType	int		1219009	0					
ANR	1219018	Identifier	up		1219009	1					
ANR	1219019	IdentifierDecl	syn_allow		1219009	2					
ANR	1219020	IdentifierDeclType	int		1219009	0					
ANR	1219021	Identifier	syn_allow		1219009	1					
ANR	1219022	IdentifierDecl	non_low = 0		1219009	3					
ANR	1219023	IdentifierDeclType	int		1219009	0					
ANR	1219024	Identifier	non_low		1219009	1					
ANR	1219025	AssignmentExpression	non_low = 0		1219009	2		=			
ANR	1219026	Identifier	non_low		1219009	0					
ANR	1219027	PrimaryExpression	0		1219009	1					
ANR	1219028	IdentifierDeclStatement	int r = 0 ;	2321:2:49275:49284	1219009	1	True				
ANR	1219029	IdentifierDecl	r = 0		1219009	0					
ANR	1219030	IdentifierDeclType	int		1219009	0					
ANR	1219031	Identifier	r		1219009	1					
ANR	1219032	AssignmentExpression	r = 0		1219009	2		=			
ANR	1219033	Identifier	r		1219009	0					
ANR	1219034	PrimaryExpression	0		1219009	1					
ANR	1219035	IdentifierDeclStatement	OnigCodePoint c ;	2322:2:49288:49303	1219009	2	True				
ANR	1219036	IdentifierDecl	c		1219009	0					
ANR	1219037	IdentifierDeclType	OnigCodePoint		1219009	0					
ANR	1219038	Identifier	c		1219009	1					
ANR	1219039	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	2323:2:49307:49334	1219009	3	True				
ANR	1219040	IdentifierDecl	enc = env -> enc		1219009	0					
ANR	1219041	IdentifierDeclType	OnigEncoding		1219009	0					
ANR	1219042	Identifier	enc		1219009	1					
ANR	1219043	AssignmentExpression	enc = env -> enc		1219009	2		=			
ANR	1219044	Identifier	enc		1219009	0					
ANR	1219045	PtrMemberAccess	env -> enc		1219009	1					
ANR	1219046	Identifier	env		1219009	0					
ANR	1219047	Identifier	enc		1219009	1					
ANR	1219048	IdentifierDeclStatement	UChar * p = * src ;	2324:2:49338:49353	1219009	4	True				
ANR	1219049	IdentifierDecl	* p = * src		1219009	0					
ANR	1219050	IdentifierDeclType	UChar *		1219009	0					
ANR	1219051	Identifier	p		1219009	1					
ANR	1219052	AssignmentExpression	* p = * src		1219009	2		=			
ANR	1219053	Identifier	p		1219009	0					
ANR	1219054	UnaryOperationExpression	* src		1219009	1					
ANR	1219055	UnaryOperator	*		1219009	0					
ANR	1219056	Identifier	src		1219009	1					
ANR	1219057	ExpressionStatement	PFETCH_READY	2325:2:49357:49369	1219009	5	True				
ANR	1219058	Identifier	PFETCH_READY		1219009	0					
ANR	1219059	ExpressionStatement	"syn_allow = IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_INVALID_INTERVAL )"	2327:2:49374:49444	1219009	6	True				
ANR	1219060	AssignmentExpression	"syn_allow = IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_INVALID_INTERVAL )"		1219009	0		=			
ANR	1219061	Identifier	syn_allow		1219009	0					
ANR	1219062	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_INVALID_INTERVAL )"		1219009	1					
ANR	1219063	Callee	IS_SYNTAX_BV		1219009	0					
ANR	1219064	Identifier	IS_SYNTAX_BV		1219009	0					
ANR	1219065	ArgumentList	env -> syntax		1219009	1					
ANR	1219066	Argument	env -> syntax		1219009	0					
ANR	1219067	PtrMemberAccess	env -> syntax		1219009	0					
ANR	1219068	Identifier	env		1219009	0					
ANR	1219069	Identifier	syntax		1219009	1					
ANR	1219070	Argument	ONIG_SYN_ALLOW_INVALID_INTERVAL		1219009	1					
ANR	1219071	Identifier	ONIG_SYN_ALLOW_INVALID_INTERVAL		1219009	0					
ANR	1219072	IfStatement	if ( PEND )		1219009	7					
ANR	1219073	Condition	PEND	2329:6:49453:49456	1219009	0	True				
ANR	1219074	Identifier	PEND		1219009	0					
ANR	1219075	CompoundStatement		11:12:226:226	1219009	1					
ANR	1219076	IfStatement	if ( syn_allow )		1219009	0					
ANR	1219077	Condition	syn_allow	2330:8:49469:49477	1219009	0	True				
ANR	1219078	Identifier	syn_allow		1219009	0					
ANR	1219079	ReturnStatement	return 1 ;	2331:6:49486:49494	1219009	1	True				
ANR	1219080	PrimaryExpression	1		1219009	0					
ANR	1219081	ElseStatement	else		1219009	0					
ANR	1219082	ReturnStatement	return ONIGERR_END_PATTERN_AT_LEFT_BRACE ;	2333:6:49532:49572	1219009	0	True				
ANR	1219083	Identifier	ONIGERR_END_PATTERN_AT_LEFT_BRACE		1219009	0					
ANR	1219084	IfStatement	if ( ! syn_allow )		1219009	8					
ANR	1219085	Condition	! syn_allow	2336:6:49613:49623	1219009	0	True				
ANR	1219086	UnaryOperationExpression	! syn_allow		1219009	0					
ANR	1219087	UnaryOperator	!		1219009	0					
ANR	1219088	Identifier	syn_allow		1219009	1					
ANR	1219089	CompoundStatement		18:19:393:393	1219009	1					
ANR	1219090	ExpressionStatement	c = PPEEK	2337:4:49632:49641	1219009	0	True				
ANR	1219091	AssignmentExpression	c = PPEEK		1219009	0		=			
ANR	1219092	Identifier	c		1219009	0					
ANR	1219093	Identifier	PPEEK		1219009	1					
ANR	1219094	IfStatement	if ( c == ')' || c == '(' || c == '|' )		1219009	1					
ANR	1219095	Condition	c == ')' || c == '(' || c == '|'	2338:8:49651:49682	1219009	0	True				
ANR	1219096	OrExpression	c == ')' || c == '(' || c == '|'		1219009	0		||			
ANR	1219097	EqualityExpression	c == ')'		1219009	0		==			
ANR	1219098	Identifier	c		1219009	0					
ANR	1219099	PrimaryExpression	')'		1219009	1					
ANR	1219100	OrExpression	c == '(' || c == '|'		1219009	1		||			
ANR	1219101	EqualityExpression	c == '('		1219009	0		==			
ANR	1219102	Identifier	c		1219009	0					
ANR	1219103	PrimaryExpression	'('		1219009	1					
ANR	1219104	EqualityExpression	c == '|'		1219009	1		==			
ANR	1219105	Identifier	c		1219009	0					
ANR	1219106	PrimaryExpression	'|'		1219009	1					
ANR	1219107	CompoundStatement		20:42:452:452	1219009	1					
ANR	1219108	ReturnStatement	return ONIGERR_END_PATTERN_AT_LEFT_BRACE ;	2339:6:49693:49733	1219009	0	True				
ANR	1219109	Identifier	ONIGERR_END_PATTERN_AT_LEFT_BRACE		1219009	0					
ANR	1219110	ExpressionStatement	"low = onig_scan_unsigned_number ( & p , end , env -> enc )"	2343:2:49748:49798	1219009	9	True				
ANR	1219111	AssignmentExpression	"low = onig_scan_unsigned_number ( & p , end , env -> enc )"		1219009	0		=			
ANR	1219112	Identifier	low		1219009	0					
ANR	1219113	CallExpression	"onig_scan_unsigned_number ( & p , end , env -> enc )"		1219009	1					
ANR	1219114	Callee	onig_scan_unsigned_number		1219009	0					
ANR	1219115	Identifier	onig_scan_unsigned_number		1219009	0					
ANR	1219116	ArgumentList	& p		1219009	1					
ANR	1219117	Argument	& p		1219009	0					
ANR	1219118	UnaryOperationExpression	& p		1219009	0					
ANR	1219119	UnaryOperator	&		1219009	0					
ANR	1219120	Identifier	p		1219009	1					
ANR	1219121	Argument	end		1219009	1					
ANR	1219122	Identifier	end		1219009	0					
ANR	1219123	Argument	env -> enc		1219009	2					
ANR	1219124	PtrMemberAccess	env -> enc		1219009	0					
ANR	1219125	Identifier	env		1219009	0					
ANR	1219126	Identifier	enc		1219009	1					
ANR	1219127	IfStatement	if ( low < 0 )		1219009	10					
ANR	1219128	Condition	low < 0	2344:6:49806:49812	1219009	0	True				
ANR	1219129	RelationalExpression	low < 0		1219009	0		<			
ANR	1219130	Identifier	low		1219009	0					
ANR	1219131	PrimaryExpression	0		1219009	1					
ANR	1219132	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE ;	2344:15:49815:49861	1219009	1	True				
ANR	1219133	Identifier	ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE		1219009	0					
ANR	1219134	IfStatement	if ( low > ONIG_MAX_REPEAT_NUM )		1219009	11					
ANR	1219135	Condition	low > ONIG_MAX_REPEAT_NUM	2345:6:49869:49893	1219009	0	True				
ANR	1219136	RelationalExpression	low > ONIG_MAX_REPEAT_NUM		1219009	0		>			
ANR	1219137	Identifier	low		1219009	0					
ANR	1219138	Identifier	ONIG_MAX_REPEAT_NUM		1219009	1					
ANR	1219139	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE ;	2346:4:49900:49946	1219009	1	True				
ANR	1219140	Identifier	ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE		1219009	0					
ANR	1219141	IfStatement	if ( p == * src )		1219009	12					
ANR	1219142	Condition	p == * src	2348:6:49955:49963	1219009	0	True				
ANR	1219143	EqualityExpression	p == * src		1219009	0		==			
ANR	1219144	Identifier	p		1219009	0					
ANR	1219145	UnaryOperationExpression	* src		1219009	1					
ANR	1219146	UnaryOperator	*		1219009	0					
ANR	1219147	Identifier	src		1219009	1					
ANR	1219148	CompoundStatement		30:17:733:733	1219009	1					
ANR	1219149	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV ) )"		1219009	0					
ANR	1219150	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV )"	2349:8:49997:50057	1219009	0	True				
ANR	1219151	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV )"		1219009	0					
ANR	1219152	Callee	IS_SYNTAX_BV		1219009	0					
ANR	1219153	Identifier	IS_SYNTAX_BV		1219009	0					
ANR	1219154	ArgumentList	env -> syntax		1219009	1					
ANR	1219155	Argument	env -> syntax		1219009	0					
ANR	1219156	PtrMemberAccess	env -> syntax		1219009	0					
ANR	1219157	Identifier	env		1219009	0					
ANR	1219158	Identifier	syntax		1219009	1					
ANR	1219159	Argument	ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV		1219009	1					
ANR	1219160	Identifier	ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV		1219009	0					
ANR	1219161	CompoundStatement		31:71:827:827	1219009	1					
ANR	1219162	ExpressionStatement	low = 0	2351:6:50100:50107	1219009	0	True				
ANR	1219163	AssignmentExpression	low = 0		1219009	0		=			
ANR	1219164	Identifier	low		1219009	0					
ANR	1219165	PrimaryExpression	0		1219009	1					
ANR	1219166	ExpressionStatement	non_low = 1	2352:6:50115:50126	1219009	1	True				
ANR	1219167	AssignmentExpression	non_low = 1		1219009	0		=			
ANR	1219168	Identifier	non_low		1219009	0					
ANR	1219169	PrimaryExpression	1		1219009	1					
ANR	1219170	ElseStatement	else		1219009	0					
ANR	1219171	GotoStatement	goto invalid ;	2355:6:50149:50161	1219009	0	True				
ANR	1219172	Identifier	invalid		1219009	0					
ANR	1219173	IfStatement	if ( PEND )		1219009	13					
ANR	1219174	Condition	PEND	2358:6:50174:50177	1219009	0	True				
ANR	1219175	Identifier	PEND		1219009	0					
ANR	1219176	GotoStatement	goto invalid ;	2358:12:50180:50192	1219009	1	True				
ANR	1219177	Identifier	invalid		1219009	0					
ANR	1219178	ExpressionStatement	PFETCH ( c )	2359:2:50196:50205	1219009	14	True				
ANR	1219179	CallExpression	PFETCH ( c )		1219009	0					
ANR	1219180	Callee	PFETCH		1219009	0					
ANR	1219181	Identifier	PFETCH		1219009	0					
ANR	1219182	ArgumentList	c		1219009	1					
ANR	1219183	Argument	c		1219009	0					
ANR	1219184	Identifier	c		1219009	0					
ANR	1219185	IfStatement	"if ( c == ',' )"		1219009	15					
ANR	1219186	Condition	"c == ','"	2360:6:50213:50220	1219009	0	True				
ANR	1219187	EqualityExpression	"c == ','"		1219009	0		==			
ANR	1219188	Identifier	c		1219009	0					
ANR	1219189	PrimaryExpression	"','"		1219009	1					
ANR	1219190	CompoundStatement		43:4:996:1011	1219009	1					
ANR	1219191	IdentifierDeclStatement	UChar * prev = p ;	2361:4:50229:50244	1219009	0	True				
ANR	1219192	IdentifierDecl	* prev = p		1219009	0					
ANR	1219193	IdentifierDeclType	UChar *		1219009	0					
ANR	1219194	Identifier	prev		1219009	1					
ANR	1219195	AssignmentExpression	* prev = p		1219009	2		=			
ANR	1219196	Identifier	p		1219009	0					
ANR	1219197	Identifier	p		1219009	1					
ANR	1219198	ExpressionStatement	"up = onig_scan_unsigned_number ( & p , end , env -> enc )"	2362:4:50250:50299	1219009	1	True				
ANR	1219199	AssignmentExpression	"up = onig_scan_unsigned_number ( & p , end , env -> enc )"		1219009	0		=			
ANR	1219200	Identifier	up		1219009	0					
ANR	1219201	CallExpression	"onig_scan_unsigned_number ( & p , end , env -> enc )"		1219009	1					
ANR	1219202	Callee	onig_scan_unsigned_number		1219009	0					
ANR	1219203	Identifier	onig_scan_unsigned_number		1219009	0					
ANR	1219204	ArgumentList	& p		1219009	1					
ANR	1219205	Argument	& p		1219009	0					
ANR	1219206	UnaryOperationExpression	& p		1219009	0					
ANR	1219207	UnaryOperator	&		1219009	0					
ANR	1219208	Identifier	p		1219009	1					
ANR	1219209	Argument	end		1219009	1					
ANR	1219210	Identifier	end		1219009	0					
ANR	1219211	Argument	env -> enc		1219009	2					
ANR	1219212	PtrMemberAccess	env -> enc		1219009	0					
ANR	1219213	Identifier	env		1219009	0					
ANR	1219214	Identifier	enc		1219009	1					
ANR	1219215	IfStatement	if ( up < 0 )		1219009	2					
ANR	1219216	Condition	up < 0	2363:8:50309:50314	1219009	0	True				
ANR	1219217	RelationalExpression	up < 0		1219009	0		<			
ANR	1219218	Identifier	up		1219009	0					
ANR	1219219	PrimaryExpression	0		1219009	1					
ANR	1219220	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE ;	2363:16:50317:50363	1219009	1	True				
ANR	1219221	Identifier	ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE		1219009	0					
ANR	1219222	IfStatement	if ( up > ONIG_MAX_REPEAT_NUM )		1219009	3					
ANR	1219223	Condition	up > ONIG_MAX_REPEAT_NUM	2364:8:50373:50396	1219009	0	True				
ANR	1219224	RelationalExpression	up > ONIG_MAX_REPEAT_NUM		1219009	0		>			
ANR	1219225	Identifier	up		1219009	0					
ANR	1219226	Identifier	ONIG_MAX_REPEAT_NUM		1219009	1					
ANR	1219227	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE ;	2365:6:50405:50451	1219009	1	True				
ANR	1219228	Identifier	ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE		1219009	0					
ANR	1219229	IfStatement	if ( p == prev )		1219009	4					
ANR	1219230	Condition	p == prev	2367:8:50462:50470	1219009	0	True				
ANR	1219231	EqualityExpression	p == prev		1219009	0		==			
ANR	1219232	Identifier	p		1219009	0					
ANR	1219233	Identifier	prev		1219009	1					
ANR	1219234	CompoundStatement		49:19:1240:1240	1219009	1					
ANR	1219235	IfStatement	if ( non_low != 0 )		1219009	0					
ANR	1219236	Condition	non_low != 0	2368:10:50485:50496	1219009	0	True				
ANR	1219237	EqualityExpression	non_low != 0		1219009	0		!=			
ANR	1219238	Identifier	non_low		1219009	0					
ANR	1219239	PrimaryExpression	0		1219009	1					
ANR	1219240	GotoStatement	goto invalid ;	2369:1:50500:50512	1219009	1	True				
ANR	1219241	Identifier	invalid		1219009	0					
ANR	1219242	ExpressionStatement	up = REPEAT_INFINITE	2370:6:50520:50540	1219009	1	True				
ANR	1219243	AssignmentExpression	up = REPEAT_INFINITE		1219009	0		=			
ANR	1219244	Identifier	up		1219009	0					
ANR	1219245	Identifier	REPEAT_INFINITE		1219009	1					
ANR	1219246	ElseStatement	else		1219009	0					
ANR	1219247	CompoundStatement		55:7:1353:1353	1219009	0					
ANR	1219248	IfStatement	if ( non_low != 0 )		1219009	0					
ANR	1219249	Condition	non_low != 0	2374:8:50596:50607	1219009	0	True				
ANR	1219250	EqualityExpression	non_low != 0		1219009	0		!=			
ANR	1219251	Identifier	non_low		1219009	0					
ANR	1219252	PrimaryExpression	0		1219009	1					
ANR	1219253	GotoStatement	goto invalid ;	2375:6:50616:50628	1219009	1	True				
ANR	1219254	Identifier	invalid		1219009	0					
ANR	1219255	ExpressionStatement	PUNFETCH	2377:4:50635:50643	1219009	1	True				
ANR	1219256	Identifier	PUNFETCH		1219009	0					
ANR	1219257	ExpressionStatement	up = low	2378:4:50649:50657	1219009	2	True				
ANR	1219258	AssignmentExpression	up = low		1219009	0		=			
ANR	1219259	Identifier	up		1219009	0					
ANR	1219260	Identifier	low		1219009	1					
ANR	1219261	ExpressionStatement	r = 2	2379:4:50690:50695	1219009	3	True				
ANR	1219262	AssignmentExpression	r = 2		1219009	0		=			
ANR	1219263	Identifier	r		1219009	0					
ANR	1219264	PrimaryExpression	2		1219009	1					
ANR	1219265	IfStatement	if ( PEND )		1219009	16					
ANR	1219266	Condition	PEND	2382:6:50724:50727	1219009	0	True				
ANR	1219267	Identifier	PEND		1219009	0					
ANR	1219268	GotoStatement	goto invalid ;	2382:12:50730:50742	1219009	1	True				
ANR	1219269	Identifier	invalid		1219009	0					
ANR	1219270	ExpressionStatement	PFETCH ( c )	2383:2:50746:50755	1219009	17	True				
ANR	1219271	CallExpression	PFETCH ( c )		1219009	0					
ANR	1219272	Callee	PFETCH		1219009	0					
ANR	1219273	Identifier	PFETCH		1219009	0					
ANR	1219274	ArgumentList	c		1219009	1					
ANR	1219275	Argument	c		1219009	0					
ANR	1219276	Identifier	c		1219009	0					
ANR	1219277	IfStatement	"if ( IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_BRACE_INTERVAL ) )"		1219009	18					
ANR	1219278	Condition	"IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_BRACE_INTERVAL )"	2384:6:50763:50819	1219009	0	True				
ANR	1219279	CallExpression	"IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_BRACE_INTERVAL )"		1219009	0					
ANR	1219280	Callee	IS_SYNTAX_OP		1219009	0					
ANR	1219281	Identifier	IS_SYNTAX_OP		1219009	0					
ANR	1219282	ArgumentList	env -> syntax		1219009	1					
ANR	1219283	Argument	env -> syntax		1219009	0					
ANR	1219284	PtrMemberAccess	env -> syntax		1219009	0					
ANR	1219285	Identifier	env		1219009	0					
ANR	1219286	Identifier	syntax		1219009	1					
ANR	1219287	Argument	ONIG_SYN_OP_ESC_BRACE_INTERVAL		1219009	1					
ANR	1219288	Identifier	ONIG_SYN_OP_ESC_BRACE_INTERVAL		1219009	0					
ANR	1219289	CompoundStatement		66:65:1589:1589	1219009	1					
ANR	1219290	IfStatement	if ( c != MC_ESC ( env -> syntax ) )		1219009	0					
ANR	1219291	Condition	c != MC_ESC ( env -> syntax )	2385:8:50832:50855	1219009	0	True				
ANR	1219292	EqualityExpression	c != MC_ESC ( env -> syntax )		1219009	0		!=			
ANR	1219293	Identifier	c		1219009	0					
ANR	1219294	CallExpression	MC_ESC ( env -> syntax )		1219009	1					
ANR	1219295	Callee	MC_ESC		1219009	0					
ANR	1219296	Identifier	MC_ESC		1219009	0					
ANR	1219297	ArgumentList	env -> syntax		1219009	1					
ANR	1219298	Argument	env -> syntax		1219009	0					
ANR	1219299	PtrMemberAccess	env -> syntax		1219009	0					
ANR	1219300	Identifier	env		1219009	0					
ANR	1219301	Identifier	syntax		1219009	1					
ANR	1219302	GotoStatement	goto invalid ;	2385:34:50858:50870	1219009	1	True				
ANR	1219303	Identifier	invalid		1219009	0					
ANR	1219304	ExpressionStatement	PFETCH ( c )	2386:4:50876:50885	1219009	1	True				
ANR	1219305	CallExpression	PFETCH ( c )		1219009	0					
ANR	1219306	Callee	PFETCH		1219009	0					
ANR	1219307	Identifier	PFETCH		1219009	0					
ANR	1219308	ArgumentList	c		1219009	1					
ANR	1219309	Argument	c		1219009	0					
ANR	1219310	Identifier	c		1219009	0					
ANR	1219311	IfStatement	if ( c != '}' )		1219009	19					
ANR	1219312	Condition	c != '}'	2388:6:50897:50904	1219009	0	True				
ANR	1219313	EqualityExpression	c != '}'		1219009	0		!=			
ANR	1219314	Identifier	c		1219009	0					
ANR	1219315	PrimaryExpression	'}'		1219009	1					
ANR	1219316	GotoStatement	goto invalid ;	2388:16:50907:50919	1219009	1	True				
ANR	1219317	Identifier	invalid		1219009	0					
ANR	1219318	IfStatement	if ( ! IS_REPEAT_INFINITE ( up ) && low > up )		1219009	20					
ANR	1219319	Condition	! IS_REPEAT_INFINITE ( up ) && low > up	2390:6:50928:50962	1219009	0	True				
ANR	1219320	AndExpression	! IS_REPEAT_INFINITE ( up ) && low > up		1219009	0		&&			
ANR	1219321	UnaryOperationExpression	! IS_REPEAT_INFINITE ( up )		1219009	0					
ANR	1219322	UnaryOperator	!		1219009	0					
ANR	1219323	CallExpression	IS_REPEAT_INFINITE ( up )		1219009	1					
ANR	1219324	Callee	IS_REPEAT_INFINITE		1219009	0					
ANR	1219325	Identifier	IS_REPEAT_INFINITE		1219009	0					
ANR	1219326	ArgumentList	up		1219009	1					
ANR	1219327	Argument	up		1219009	0					
ANR	1219328	Identifier	up		1219009	0					
ANR	1219329	RelationalExpression	low > up		1219009	1		>			
ANR	1219330	Identifier	low		1219009	0					
ANR	1219331	Identifier	up		1219009	1					
ANR	1219332	CompoundStatement		72:43:1732:1732	1219009	1					
ANR	1219333	ReturnStatement	return ONIGERR_UPPER_SMALLER_THAN_LOWER_IN_REPEAT_RANGE ;	2391:4:50971:51026	1219009	0	True				
ANR	1219334	Identifier	ONIGERR_UPPER_SMALLER_THAN_LOWER_IN_REPEAT_RANGE		1219009	0					
ANR	1219335	ExpressionStatement	tok -> type = TK_INTERVAL	2394:2:51035:51058	1219009	21	True				
ANR	1219336	AssignmentExpression	tok -> type = TK_INTERVAL		1219009	0		=			
ANR	1219337	PtrMemberAccess	tok -> type		1219009	0					
ANR	1219338	Identifier	tok		1219009	0					
ANR	1219339	Identifier	type		1219009	1					
ANR	1219340	Identifier	TK_INTERVAL		1219009	1					
ANR	1219341	ExpressionStatement	tok -> u . repeat . lower = low	2395:2:51062:51087	1219009	22	True				
ANR	1219342	AssignmentExpression	tok -> u . repeat . lower = low		1219009	0		=			
ANR	1219343	MemberAccess	tok -> u . repeat . lower		1219009	0					
ANR	1219344	MemberAccess	tok -> u . repeat		1219009	0					
ANR	1219345	PtrMemberAccess	tok -> u		1219009	0					
ANR	1219346	Identifier	tok		1219009	0					
ANR	1219347	Identifier	u		1219009	1					
ANR	1219348	Identifier	repeat		1219009	1					
ANR	1219349	Identifier	lower		1219009	1					
ANR	1219350	Identifier	low		1219009	1					
ANR	1219351	ExpressionStatement	tok -> u . repeat . upper = up	2396:2:51091:51115	1219009	23	True				
ANR	1219352	AssignmentExpression	tok -> u . repeat . upper = up		1219009	0		=			
ANR	1219353	MemberAccess	tok -> u . repeat . upper		1219009	0					
ANR	1219354	MemberAccess	tok -> u . repeat		1219009	0					
ANR	1219355	PtrMemberAccess	tok -> u		1219009	0					
ANR	1219356	Identifier	tok		1219009	0					
ANR	1219357	Identifier	u		1219009	1					
ANR	1219358	Identifier	repeat		1219009	1					
ANR	1219359	Identifier	upper		1219009	1					
ANR	1219360	Identifier	up		1219009	1					
ANR	1219361	ExpressionStatement	* src = p	2397:2:51119:51127	1219009	24	True				
ANR	1219362	AssignmentExpression	* src = p		1219009	0		=			
ANR	1219363	UnaryOperationExpression	* src		1219009	0					
ANR	1219364	UnaryOperator	*		1219009	0					
ANR	1219365	Identifier	src		1219009	1					
ANR	1219366	Identifier	p		1219009	1					
ANR	1219367	ReturnStatement	return r ;	2398:2:51131:51139	1219009	25	True				
ANR	1219368	Identifier	r		1219009	0					
ANR	1219369	Label	invalid :	2400:1:51179:51186	1219009	26	True				
ANR	1219370	Identifier	invalid		1219009	0					
ANR	1219371	IfStatement	if ( syn_allow )		1219009	27					
ANR	1219372	Condition	syn_allow	2401:6:51194:51202	1219009	0	True				
ANR	1219373	Identifier	syn_allow		1219009	0					
ANR	1219374	ReturnStatement	return 1 ;	2402:4:51209:51217	1219009	1	True				
ANR	1219375	PrimaryExpression	1		1219009	0					
ANR	1219376	ElseStatement	else		1219009	0					
ANR	1219377	ReturnStatement	return ONIGERR_INVALID_REPEAT_RANGE_PATTERN ;	2404:4:51240:51283	1219009	0	True				
ANR	1219378	Identifier	ONIGERR_INVALID_REPEAT_RANGE_PATTERN		1219009	0					
ANR	1219379	ReturnType	static int		1219009	1					
ANR	1219380	Identifier	fetch_range_quantifier		1219009	2					
ANR	1219381	ParameterList	"UChar * * src , UChar * end , OnigToken * tok , ScanEnv * env"		1219009	3					
ANR	1219382	Parameter	UChar * * src	2318:23:49177:49187	1219009	0	True				
ANR	1219383	ParameterType	UChar * *		1219009	0					
ANR	1219384	Identifier	src		1219009	1					
ANR	1219385	Parameter	UChar * end	2318:36:49190:49199	1219009	1	True				
ANR	1219386	ParameterType	UChar *		1219009	0					
ANR	1219387	Identifier	end		1219009	1					
ANR	1219388	Parameter	OnigToken * tok	2318:48:49202:49215	1219009	2	True				
ANR	1219389	ParameterType	OnigToken *		1219009	0					
ANR	1219390	Identifier	tok		1219009	1					
ANR	1219391	Parameter	ScanEnv * env	2318:64:49218:49229	1219009	3	True				
ANR	1219392	ParameterType	ScanEnv *		1219009	0					
ANR	1219393	Identifier	env		1219009	1					
ANR	1219394	CFGEntryNode	ENTRY		1219009		True				
ANR	1219395	CFGExitNode	EXIT		1219009		True				
ANR	1219396	Symbol	ONIG_MAX_REPEAT_NUM		1219009						
ANR	1219397	Symbol	ONIG_SYN_ALLOW_INVALID_INTERVAL		1219009						
ANR	1219398	Symbol	prev		1219009						
ANR	1219399	Symbol	env -> enc		1219009						
ANR	1219400	Symbol	ONIGERR_END_PATTERN_AT_LEFT_BRACE		1219009						
ANR	1219401	Symbol	onig_scan_unsigned_number		1219009						
ANR	1219402	Symbol	* src		1219009						
ANR	1219403	Symbol	PEND		1219009						
ANR	1219404	Symbol	ONIGERR_TOO_BIG_NUMBER_FOR_REPEAT_RANGE		1219009						
ANR	1219405	Symbol	tok -> type		1219009						
ANR	1219406	Symbol	tok		1219009						
ANR	1219407	Symbol	REPEAT_INFINITE		1219009						
ANR	1219408	Symbol	TK_INTERVAL		1219009						
ANR	1219409	Symbol	low		1219009						
ANR	1219410	Symbol	ONIGERR_UPPER_SMALLER_THAN_LOWER_IN_REPEAT_RANGE		1219009						
ANR	1219411	Symbol	tok -> u . repeat . upper		1219009						
ANR	1219412	Symbol	IS_SYNTAX_BV		1219009						
ANR	1219413	Symbol	end		1219009						
ANR	1219414	Symbol	up		1219009						
ANR	1219415	Symbol	enc		1219009						
ANR	1219416	Symbol	IS_REPEAT_INFINITE		1219009						
ANR	1219417	Symbol	tok -> u		1219009						
ANR	1219418	Symbol	ONIG_SYN_OP_ESC_BRACE_INTERVAL		1219009						
ANR	1219419	Symbol	c		1219009						
ANR	1219420	Symbol	tok -> u . repeat		1219009						
ANR	1219421	Symbol	src		1219009						
ANR	1219422	Symbol	ONIGERR_INVALID_REPEAT_RANGE_PATTERN		1219009						
ANR	1219423	Symbol	PPEEK		1219009						
ANR	1219424	Symbol	* env		1219009						
ANR	1219425	Symbol	IS_SYNTAX_OP		1219009						
ANR	1219426	Symbol	env		1219009						
ANR	1219427	Symbol	syn_allow		1219009						
ANR	1219428	Symbol	MC_ESC		1219009						
ANR	1219429	Symbol	env -> syntax		1219009						
ANR	1219430	Symbol	non_low		1219009						
ANR	1219431	Symbol	p		1219009						
ANR	1219432	Symbol	r		1219009						
ANR	1219433	Symbol	ONIG_SYN_ALLOW_INTERVAL_LOW_ABBREV		1219009						
ANR	1219434	Symbol	tok -> u . repeat . lower		1219009						
ANR	1219435	Symbol	& p		1219009						
ANR	1219436	Symbol	* tok		1219009						
ANR	1219437	Function	fetch_escaped_value	2408:0:51316:52916							
ANR	1219438	FunctionDef	"fetch_escaped_value (UChar * * src , UChar * end , ScanEnv * env)"		1219437	0					
ANR	1219439	CompoundStatement		2410:0:51386:52916	1219437	0					
ANR	1219440	IdentifierDeclStatement	int v ;	2411:2:51390:51395	1219437	0	True				
ANR	1219441	IdentifierDecl	v		1219437	0					
ANR	1219442	IdentifierDeclType	int		1219437	0					
ANR	1219443	Identifier	v		1219437	1					
ANR	1219444	IdentifierDeclStatement	OnigCodePoint c ;	2412:2:51399:51414	1219437	1	True				
ANR	1219445	IdentifierDecl	c		1219437	0					
ANR	1219446	IdentifierDeclType	OnigCodePoint		1219437	0					
ANR	1219447	Identifier	c		1219437	1					
ANR	1219448	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	2413:2:51418:51445	1219437	2	True				
ANR	1219449	IdentifierDecl	enc = env -> enc		1219437	0					
ANR	1219450	IdentifierDeclType	OnigEncoding		1219437	0					
ANR	1219451	Identifier	enc		1219437	1					
ANR	1219452	AssignmentExpression	enc = env -> enc		1219437	2		=			
ANR	1219453	Identifier	enc		1219437	0					
ANR	1219454	PtrMemberAccess	env -> enc		1219437	1					
ANR	1219455	Identifier	env		1219437	0					
ANR	1219456	Identifier	enc		1219437	1					
ANR	1219457	IdentifierDeclStatement	UChar * p = * src ;	2414:2:51449:51464	1219437	3	True				
ANR	1219458	IdentifierDecl	* p = * src		1219437	0					
ANR	1219459	IdentifierDeclType	UChar *		1219437	0					
ANR	1219460	Identifier	p		1219437	1					
ANR	1219461	AssignmentExpression	* p = * src		1219437	2		=			
ANR	1219462	Identifier	p		1219437	0					
ANR	1219463	UnaryOperationExpression	* src		1219437	1					
ANR	1219464	UnaryOperator	*		1219437	0					
ANR	1219465	Identifier	src		1219437	1					
ANR	1219466	IfStatement	if ( PEND )		1219437	4					
ANR	1219467	Condition	PEND	2416:6:51473:51476	1219437	0	True				
ANR	1219468	Identifier	PEND		1219437	0					
ANR	1219469	ReturnStatement	return ONIGERR_END_PATTERN_AT_ESCAPE ;	2416:12:51479:51515	1219437	1	True				
ANR	1219470	Identifier	ONIGERR_END_PATTERN_AT_ESCAPE		1219437	0					
ANR	1219471	ExpressionStatement	PFETCH_S ( c )	2418:2:51520:51531	1219437	5	True				
ANR	1219472	CallExpression	PFETCH_S ( c )		1219437	0					
ANR	1219473	Callee	PFETCH_S		1219437	0					
ANR	1219474	Identifier	PFETCH_S		1219437	0					
ANR	1219475	ArgumentList	c		1219437	1					
ANR	1219476	Argument	c		1219437	0					
ANR	1219477	Identifier	c		1219437	0					
ANR	1219478	SwitchStatement	switch ( c )		1219437	6					
ANR	1219479	Condition	c	2419:10:51543:51543	1219437	0	True				
ANR	1219480	Identifier	c		1219437	0					
ANR	1219481	CompoundStatement		10:13:159:159	1219437	1					
ANR	1219482	Label	case 'M' :	2420:2:51550:51558	1219437	0	True				
ANR	1219483	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META ) )"		1219437	1					
ANR	1219484	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META )"	2421:8:51568:51630	1219437	0	True				
ANR	1219485	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META )"		1219437	0					
ANR	1219486	Callee	IS_SYNTAX_OP2		1219437	0					
ANR	1219487	Identifier	IS_SYNTAX_OP2		1219437	0					
ANR	1219488	ArgumentList	env -> syntax		1219437	1					
ANR	1219489	Argument	env -> syntax		1219437	0					
ANR	1219490	PtrMemberAccess	env -> syntax		1219437	0					
ANR	1219491	Identifier	env		1219437	0					
ANR	1219492	Identifier	syntax		1219437	1					
ANR	1219493	Argument	ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META		1219437	1					
ANR	1219494	Identifier	ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META		1219437	0					
ANR	1219495	CompoundStatement		12:73:246:246	1219437	1					
ANR	1219496	IfStatement	if ( PEND )		1219437	0					
ANR	1219497	Condition	PEND	2422:10:51645:51648	1219437	0	True				
ANR	1219498	Identifier	PEND		1219437	0					
ANR	1219499	ReturnStatement	return ONIGERR_END_PATTERN_AT_META ;	2422:16:51651:51685	1219437	1	True				
ANR	1219500	Identifier	ONIGERR_END_PATTERN_AT_META		1219437	0					
ANR	1219501	ExpressionStatement	PFETCH_S ( c )	2423:6:51693:51704	1219437	1	True				
ANR	1219502	CallExpression	PFETCH_S ( c )		1219437	0					
ANR	1219503	Callee	PFETCH_S		1219437	0					
ANR	1219504	Identifier	PFETCH_S		1219437	0					
ANR	1219505	ArgumentList	c		1219437	1					
ANR	1219506	Argument	c		1219437	0					
ANR	1219507	Identifier	c		1219437	0					
ANR	1219508	IfStatement	if ( c != '-' )		1219437	2					
ANR	1219509	Condition	c != '-'	2424:10:51716:51723	1219437	0	True				
ANR	1219510	EqualityExpression	c != '-'		1219437	0		!=			
ANR	1219511	Identifier	c		1219437	0					
ANR	1219512	PrimaryExpression	'-'		1219437	1					
ANR	1219513	ReturnStatement	return ONIGERR_META_CODE_SYNTAX ;	2424:20:51726:51757	1219437	1	True				
ANR	1219514	Identifier	ONIGERR_META_CODE_SYNTAX		1219437	0					
ANR	1219515	IfStatement	if ( PEND )		1219437	3					
ANR	1219516	Condition	PEND	2425:10:51769:51772	1219437	0	True				
ANR	1219517	Identifier	PEND		1219437	0					
ANR	1219518	ReturnStatement	return ONIGERR_END_PATTERN_AT_META ;	2425:16:51775:51809	1219437	1	True				
ANR	1219519	Identifier	ONIGERR_END_PATTERN_AT_META		1219437	0					
ANR	1219520	ExpressionStatement	PFETCH_S ( c )	2426:6:51817:51828	1219437	4	True				
ANR	1219521	CallExpression	PFETCH_S ( c )		1219437	0					
ANR	1219522	Callee	PFETCH_S		1219437	0					
ANR	1219523	Identifier	PFETCH_S		1219437	0					
ANR	1219524	ArgumentList	c		1219437	1					
ANR	1219525	Argument	c		1219437	0					
ANR	1219526	Identifier	c		1219437	0					
ANR	1219527	IfStatement	if ( c == MC_ESC ( env -> syntax ) )		1219437	5					
ANR	1219528	Condition	c == MC_ESC ( env -> syntax )	2427:10:51840:51863	1219437	0	True				
ANR	1219529	EqualityExpression	c == MC_ESC ( env -> syntax )		1219437	0		==			
ANR	1219530	Identifier	c		1219437	0					
ANR	1219531	CallExpression	MC_ESC ( env -> syntax )		1219437	1					
ANR	1219532	Callee	MC_ESC		1219437	0					
ANR	1219533	Identifier	MC_ESC		1219437	0					
ANR	1219534	ArgumentList	env -> syntax		1219437	1					
ANR	1219535	Argument	env -> syntax		1219437	0					
ANR	1219536	PtrMemberAccess	env -> syntax		1219437	0					
ANR	1219537	Identifier	env		1219437	0					
ANR	1219538	Identifier	syntax		1219437	1					
ANR	1219539	CompoundStatement		18:36:479:479	1219437	1					
ANR	1219540	ExpressionStatement	"v = fetch_escaped_value ( & p , end , env )"	2428:8:51876:51913	1219437	0	True				
ANR	1219541	AssignmentExpression	"v = fetch_escaped_value ( & p , end , env )"		1219437	0		=			
ANR	1219542	Identifier	v		1219437	0					
ANR	1219543	CallExpression	"fetch_escaped_value ( & p , end , env )"		1219437	1					
ANR	1219544	Callee	fetch_escaped_value		1219437	0					
ANR	1219545	Identifier	fetch_escaped_value		1219437	0					
ANR	1219546	ArgumentList	& p		1219437	1					
ANR	1219547	Argument	& p		1219437	0					
ANR	1219548	UnaryOperationExpression	& p		1219437	0					
ANR	1219549	UnaryOperator	&		1219437	0					
ANR	1219550	Identifier	p		1219437	1					
ANR	1219551	Argument	end		1219437	1					
ANR	1219552	Identifier	end		1219437	0					
ANR	1219553	Argument	env		1219437	2					
ANR	1219554	Identifier	env		1219437	0					
ANR	1219555	IfStatement	if ( v < 0 )		1219437	1					
ANR	1219556	Condition	v < 0	2429:12:51927:51931	1219437	0	True				
ANR	1219557	RelationalExpression	v < 0		1219437	0		<			
ANR	1219558	Identifier	v		1219437	0					
ANR	1219559	PrimaryExpression	0		1219437	1					
ANR	1219560	ReturnStatement	return v ;	2429:19:51934:51942	1219437	1	True				
ANR	1219561	Identifier	v		1219437	0					
ANR	1219562	ExpressionStatement	c = ( OnigCodePoint ) v	2430:8:51952:51973	1219437	2	True				
ANR	1219563	AssignmentExpression	c = ( OnigCodePoint ) v		1219437	0		=			
ANR	1219564	Identifier	c		1219437	0					
ANR	1219565	CastExpression	( OnigCodePoint ) v		1219437	1					
ANR	1219566	CastTarget	OnigCodePoint		1219437	0					
ANR	1219567	Identifier	v		1219437	1					
ANR	1219568	ExpressionStatement	c = ( ( c & 0xff ) | 0x80 )	2432:6:51989:52012	1219437	6	True				
ANR	1219569	AssignmentExpression	c = ( ( c & 0xff ) | 0x80 )		1219437	0		=			
ANR	1219570	Identifier	c		1219437	0					
ANR	1219571	InclusiveOrExpression	( c & 0xff ) | 0x80		1219437	1		|			
ANR	1219572	BitAndExpression	c & 0xff		1219437	0		&			
ANR	1219573	Identifier	c		1219437	0					
ANR	1219574	PrimaryExpression	0xff		1219437	1					
ANR	1219575	PrimaryExpression	0x80		1219437	1					
ANR	1219576	ElseStatement	else		1219437	0					
ANR	1219577	GotoStatement	goto backslash ;	2435:6:52035:52049	1219437	0	True				
ANR	1219578	Identifier	backslash		1219437	0					
ANR	1219579	BreakStatement	break ;	2436:4:52055:52060	1219437	2	True				
ANR	1219580	Label	case 'C' :	2438:2:52065:52073	1219437	3	True				
ANR	1219581	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL ) )"		1219437	4					
ANR	1219582	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL )"	2439:8:52083:52148	1219437	0	True				
ANR	1219583	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL )"		1219437	0					
ANR	1219584	Callee	IS_SYNTAX_OP2		1219437	0					
ANR	1219585	Identifier	IS_SYNTAX_OP2		1219437	0					
ANR	1219586	ArgumentList	env -> syntax		1219437	1					
ANR	1219587	Argument	env -> syntax		1219437	0					
ANR	1219588	PtrMemberAccess	env -> syntax		1219437	0					
ANR	1219589	Identifier	env		1219437	0					
ANR	1219590	Identifier	syntax		1219437	1					
ANR	1219591	Argument	ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL		1219437	1					
ANR	1219592	Identifier	ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL		1219437	0					
ANR	1219593	CompoundStatement		30:76:764:764	1219437	1					
ANR	1219594	IfStatement	if ( PEND )		1219437	0					
ANR	1219595	Condition	PEND	2440:10:52163:52166	1219437	0	True				
ANR	1219596	Identifier	PEND		1219437	0					
ANR	1219597	ReturnStatement	return ONIGERR_END_PATTERN_AT_CONTROL ;	2440:16:52169:52206	1219437	1	True				
ANR	1219598	Identifier	ONIGERR_END_PATTERN_AT_CONTROL		1219437	0					
ANR	1219599	ExpressionStatement	PFETCH_S ( c )	2441:6:52214:52225	1219437	1	True				
ANR	1219600	CallExpression	PFETCH_S ( c )		1219437	0					
ANR	1219601	Callee	PFETCH_S		1219437	0					
ANR	1219602	Identifier	PFETCH_S		1219437	0					
ANR	1219603	ArgumentList	c		1219437	1					
ANR	1219604	Argument	c		1219437	0					
ANR	1219605	Identifier	c		1219437	0					
ANR	1219606	IfStatement	if ( c != '-' )		1219437	2					
ANR	1219607	Condition	c != '-'	2442:10:52237:52244	1219437	0	True				
ANR	1219608	EqualityExpression	c != '-'		1219437	0		!=			
ANR	1219609	Identifier	c		1219437	0					
ANR	1219610	PrimaryExpression	'-'		1219437	1					
ANR	1219611	ReturnStatement	return ONIGERR_CONTROL_CODE_SYNTAX ;	2442:20:52247:52281	1219437	1	True				
ANR	1219612	Identifier	ONIGERR_CONTROL_CODE_SYNTAX		1219437	0					
ANR	1219613	GotoStatement	goto control ;	2443:6:52289:52301	1219437	3	True				
ANR	1219614	Identifier	control		1219437	0					
ANR	1219615	ElseStatement	else		1219437	0					
ANR	1219616	GotoStatement	goto backslash ;	2446:6:52324:52338	1219437	0	True				
ANR	1219617	Identifier	backslash		1219437	0					
ANR	1219618	Label	case 'c' :	2448:2:52343:52351	1219437	5	True				
ANR	1219619	IfStatement	"if ( IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_C_CONTROL ) )"		1219437	6					
ANR	1219620	Condition	"IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_C_CONTROL )"	2449:8:52361:52412	1219437	0	True				
ANR	1219621	CallExpression	"IS_SYNTAX_OP ( env -> syntax , ONIG_SYN_OP_ESC_C_CONTROL )"		1219437	0					
ANR	1219622	Callee	IS_SYNTAX_OP		1219437	0					
ANR	1219623	Identifier	IS_SYNTAX_OP		1219437	0					
ANR	1219624	ArgumentList	env -> syntax		1219437	1					
ANR	1219625	Argument	env -> syntax		1219437	0					
ANR	1219626	PtrMemberAccess	env -> syntax		1219437	0					
ANR	1219627	Identifier	env		1219437	0					
ANR	1219628	Identifier	syntax		1219437	1					
ANR	1219629	Argument	ONIG_SYN_OP_ESC_C_CONTROL		1219437	1					
ANR	1219630	Identifier	ONIG_SYN_OP_ESC_C_CONTROL		1219437	0					
ANR	1219631	CompoundStatement		40:62:1028:1028	1219437	1					
ANR	1219632	Label	control :	2450:4:52421:52428	1219437	0	True				
ANR	1219633	Identifier	control		1219437	0					
ANR	1219634	IfStatement	if ( PEND )		1219437	1					
ANR	1219635	Condition	PEND	2451:10:52440:52443	1219437	0	True				
ANR	1219636	Identifier	PEND		1219437	0					
ANR	1219637	ReturnStatement	return ONIGERR_END_PATTERN_AT_CONTROL ;	2451:16:52446:52483	1219437	1	True				
ANR	1219638	Identifier	ONIGERR_END_PATTERN_AT_CONTROL		1219437	0					
ANR	1219639	ExpressionStatement	PFETCH_S ( c )	2452:6:52491:52502	1219437	2	True				
ANR	1219640	CallExpression	PFETCH_S ( c )		1219437	0					
ANR	1219641	Callee	PFETCH_S		1219437	0					
ANR	1219642	Identifier	PFETCH_S		1219437	0					
ANR	1219643	ArgumentList	c		1219437	1					
ANR	1219644	Argument	c		1219437	0					
ANR	1219645	Identifier	c		1219437	0					
ANR	1219646	IfStatement	if ( c == '?' )		1219437	3					
ANR	1219647	Condition	c == '?'	2453:10:52514:52521	1219437	0	True				
ANR	1219648	EqualityExpression	c == '?'		1219437	0		==			
ANR	1219649	Identifier	c		1219437	0					
ANR	1219650	PrimaryExpression	'?'		1219437	1					
ANR	1219651	CompoundStatement		44:20:1137:1137	1219437	1					
ANR	1219652	ExpressionStatement	c = 0177	2454:8:52534:52542	1219437	0	True				
ANR	1219653	AssignmentExpression	c = 0177		1219437	0		=			
ANR	1219654	Identifier	c		1219437	0					
ANR	1219655	PrimaryExpression	0177		1219437	1					
ANR	1219656	ElseStatement	else		1219437	0					
ANR	1219657	CompoundStatement		47:11:1176:1176	1219437	0					
ANR	1219658	IfStatement	if ( c == MC_ESC ( env -> syntax ) )		1219437	0					
ANR	1219659	Condition	c == MC_ESC ( env -> syntax )	2457:12:52577:52600	1219437	0	True				
ANR	1219660	EqualityExpression	c == MC_ESC ( env -> syntax )		1219437	0		==			
ANR	1219661	Identifier	c		1219437	0					
ANR	1219662	CallExpression	MC_ESC ( env -> syntax )		1219437	1					
ANR	1219663	Callee	MC_ESC		1219437	0					
ANR	1219664	Identifier	MC_ESC		1219437	0					
ANR	1219665	ArgumentList	env -> syntax		1219437	1					
ANR	1219666	Argument	env -> syntax		1219437	0					
ANR	1219667	PtrMemberAccess	env -> syntax		1219437	0					
ANR	1219668	Identifier	env		1219437	0					
ANR	1219669	Identifier	syntax		1219437	1					
ANR	1219670	CompoundStatement		48:38:1216:1216	1219437	1					
ANR	1219671	ExpressionStatement	"v = fetch_escaped_value ( & p , end , env )"	2458:10:52615:52652	1219437	0	True				
ANR	1219672	AssignmentExpression	"v = fetch_escaped_value ( & p , end , env )"		1219437	0		=			
ANR	1219673	Identifier	v		1219437	0					
ANR	1219674	CallExpression	"fetch_escaped_value ( & p , end , env )"		1219437	1					
ANR	1219675	Callee	fetch_escaped_value		1219437	0					
ANR	1219676	Identifier	fetch_escaped_value		1219437	0					
ANR	1219677	ArgumentList	& p		1219437	1					
ANR	1219678	Argument	& p		1219437	0					
ANR	1219679	UnaryOperationExpression	& p		1219437	0					
ANR	1219680	UnaryOperator	&		1219437	0					
ANR	1219681	Identifier	p		1219437	1					
ANR	1219682	Argument	end		1219437	1					
ANR	1219683	Identifier	end		1219437	0					
ANR	1219684	Argument	env		1219437	2					
ANR	1219685	Identifier	env		1219437	0					
ANR	1219686	IfStatement	if ( v < 0 )		1219437	1					
ANR	1219687	Condition	v < 0	2459:14:52668:52672	1219437	0	True				
ANR	1219688	RelationalExpression	v < 0		1219437	0		<			
ANR	1219689	Identifier	v		1219437	0					
ANR	1219690	PrimaryExpression	0		1219437	1					
ANR	1219691	ReturnStatement	return v ;	2459:21:52675:52683	1219437	1	True				
ANR	1219692	Identifier	v		1219437	0					
ANR	1219693	ExpressionStatement	c = ( OnigCodePoint ) v	2460:10:52695:52716	1219437	2	True				
ANR	1219694	AssignmentExpression	c = ( OnigCodePoint ) v		1219437	0		=			
ANR	1219695	Identifier	c		1219437	0					
ANR	1219696	CastExpression	( OnigCodePoint ) v		1219437	1					
ANR	1219697	CastTarget	OnigCodePoint		1219437	0					
ANR	1219698	Identifier	v		1219437	1					
ANR	1219699	ExpressionStatement	c &= 0x9f	2462:8:52736:52745	1219437	1	True				
ANR	1219700	AssignmentExpression	c &= 0x9f		1219437	0		&=			
ANR	1219701	Identifier	c		1219437	0					
ANR	1219702	PrimaryExpression	0x9f		1219437	1					
ANR	1219703	BreakStatement	break ;	2464:6:52761:52766	1219437	4	True				
ANR	1219704	Label	default :	2468:2:52800:52807	1219437	7	True				
ANR	1219705	Identifier	default		1219437	0					
ANR	1219706	CompoundStatement		60:4:1426:1426	1219437	8					
ANR	1219707	Label	backslash :	2470:4:52819:52828	1219437	0	True				
ANR	1219708	Identifier	backslash		1219437	0					
ANR	1219709	ExpressionStatement	"c = conv_backslash_value ( c , env )"	2471:6:52836:52868	1219437	1	True				
ANR	1219710	AssignmentExpression	"c = conv_backslash_value ( c , env )"		1219437	0		=			
ANR	1219711	Identifier	c		1219437	0					
ANR	1219712	CallExpression	"conv_backslash_value ( c , env )"		1219437	1					
ANR	1219713	Callee	conv_backslash_value		1219437	0					
ANR	1219714	Identifier	conv_backslash_value		1219437	0					
ANR	1219715	ArgumentList	c		1219437	1					
ANR	1219716	Argument	c		1219437	0					
ANR	1219717	Identifier	c		1219437	0					
ANR	1219718	Argument	env		1219437	1					
ANR	1219719	Identifier	env		1219437	0					
ANR	1219720	BreakStatement	break ;	2473:4:52880:52885	1219437	9	True				
ANR	1219721	ExpressionStatement	* src = p	2476:2:52894:52902	1219437	7	True				
ANR	1219722	AssignmentExpression	* src = p		1219437	0		=			
ANR	1219723	UnaryOperationExpression	* src		1219437	0					
ANR	1219724	UnaryOperator	*		1219437	0					
ANR	1219725	Identifier	src		1219437	1					
ANR	1219726	Identifier	p		1219437	1					
ANR	1219727	ReturnStatement	return c ;	2477:2:52906:52914	1219437	8	True				
ANR	1219728	Identifier	c		1219437	0					
ANR	1219729	ReturnType	static int		1219437	1					
ANR	1219730	Identifier	fetch_escaped_value		1219437	2					
ANR	1219731	ParameterList	"UChar * * src , UChar * end , ScanEnv * env"		1219437	3					
ANR	1219732	Parameter	UChar * * src	2409:20:51347:51357	1219437	0	True				
ANR	1219733	ParameterType	UChar * *		1219437	0					
ANR	1219734	Identifier	src		1219437	1					
ANR	1219735	Parameter	UChar * end	2409:33:51360:51369	1219437	1	True				
ANR	1219736	ParameterType	UChar *		1219437	0					
ANR	1219737	Identifier	end		1219437	1					
ANR	1219738	Parameter	ScanEnv * env	2409:45:51372:51383	1219437	2	True				
ANR	1219739	ParameterType	ScanEnv *		1219437	0					
ANR	1219740	Identifier	env		1219437	1					
ANR	1219741	CFGEntryNode	ENTRY		1219437		True				
ANR	1219742	CFGExitNode	EXIT		1219437		True				
ANR	1219743	Symbol	ONIG_SYN_OP_ESC_C_CONTROL		1219437						
ANR	1219744	Symbol	env -> enc		1219437						
ANR	1219745	Symbol	* src		1219437						
ANR	1219746	Symbol	PEND		1219437						
ANR	1219747	Symbol	IS_SYNTAX_OP2		1219437						
ANR	1219748	Symbol	ONIG_SYN_OP2_ESC_CAPITAL_M_BAR_META		1219437						
ANR	1219749	Symbol	end		1219437						
ANR	1219750	Symbol	enc		1219437						
ANR	1219751	Symbol	ONIGERR_END_PATTERN_AT_CONTROL		1219437						
ANR	1219752	Symbol	ONIGERR_END_PATTERN_AT_META		1219437						
ANR	1219753	Symbol	c		1219437						
ANR	1219754	Symbol	ONIGERR_META_CODE_SYNTAX		1219437						
ANR	1219755	Symbol	ONIGERR_CONTROL_CODE_SYNTAX		1219437						
ANR	1219756	Symbol	src		1219437						
ANR	1219757	Symbol	* env		1219437						
ANR	1219758	Symbol	IS_SYNTAX_OP		1219437						
ANR	1219759	Symbol	env		1219437						
ANR	1219760	Symbol	MC_ESC		1219437						
ANR	1219761	Symbol	env -> syntax		1219437						
ANR	1219762	Symbol	p		1219437						
ANR	1219763	Symbol	ONIG_SYN_OP2_ESC_CAPITAL_C_BAR_CONTROL		1219437						
ANR	1219764	Symbol	v		1219437						
ANR	1219765	Symbol	fetch_escaped_value		1219437						
ANR	1219766	Symbol	& p		1219437						
ANR	1219767	Symbol	conv_backslash_value		1219437						
ANR	1219768	Symbol	ONIGERR_END_PATTERN_AT_ESCAPE		1219437						
ANR	1219769	DeclStmt									
ANR	1219770	Decl							int	"int ( OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env )"	fetch_token
ANR	1219771	Function	get_name_end_code_point	2482:0:52999:53238							
ANR	1219772	FunctionDef	get_name_end_code_point (OnigCodePoint start)		1219771	0					
ANR	1219773	CompoundStatement		2484:0:53065:53238	1219771	0					
ANR	1219774	SwitchStatement	switch ( start )		1219771	0					
ANR	1219775	Condition	start	2485:10:53077:53081	1219771	0	True				
ANR	1219776	Identifier	start		1219771	0					
ANR	1219777	CompoundStatement		2:17:18:18	1219771	1					
ANR	1219778	Label	case '<' :	2486:2:53088:53096	1219771	0	True				
ANR	1219779	ReturnStatement	return ( OnigCodePoint ) '>' ;	2486:13:53099:53125	1219771	1	True				
ANR	1219780	CastExpression	( OnigCodePoint ) '>'		1219771	0					
ANR	1219781	CastTarget	OnigCodePoint		1219771	0					
ANR	1219782	PrimaryExpression	'>'		1219771	1					
ANR	1219783	BreakStatement	break ;	2486:41:53127:53132	1219771	2	True				
ANR	1219784	Label	case '\\'' :	2487:2:53136:53145	1219771	3	True				
ANR	1219785	ReturnStatement	return ( OnigCodePoint ) '\\'' ;	2487:13:53147:53174	1219771	4	True				
ANR	1219786	CastExpression	( OnigCodePoint ) '\\''		1219771	0					
ANR	1219787	CastTarget	OnigCodePoint		1219771	0					
ANR	1219788	PrimaryExpression	'\\''		1219771	1					
ANR	1219789	BreakStatement	break ;	2487:42:53176:53181	1219771	5	True				
ANR	1219790	Label	default :	2488:2:53185:53192	1219771	6	True				
ANR	1219791	Identifier	default		1219771	0					
ANR	1219792	BreakStatement	break ;	2489:4:53198:53203	1219771	7	True				
ANR	1219793	ReturnStatement	return ( OnigCodePoint ) 0 ;	2492:2:53212:53236	1219771	1	True				
ANR	1219794	CastExpression	( OnigCodePoint ) 0		1219771	0					
ANR	1219795	CastTarget	OnigCodePoint		1219771	0					
ANR	1219796	PrimaryExpression	0		1219771	1					
ANR	1219797	ReturnType	static OnigCodePoint		1219771	1					
ANR	1219798	Identifier	get_name_end_code_point		1219771	2					
ANR	1219799	ParameterList	OnigCodePoint start		1219771	3					
ANR	1219800	Parameter	OnigCodePoint start	2483:24:53044:53062	1219771	0	True				
ANR	1219801	ParameterType	OnigCodePoint		1219771	0					
ANR	1219802	Identifier	start		1219771	1					
ANR	1219803	CFGEntryNode	ENTRY		1219771		True				
ANR	1219804	CFGExitNode	EXIT		1219771		True				
ANR	1219805	Symbol	start		1219771						
ANR	1219806	Function	fetch_name_with_level	2502:0:53377:55673							
ANR	1219807	FunctionDef	"fetch_name_with_level (OnigCodePoint start_code , UChar * * src , UChar * end , UChar * * rname_end , ScanEnv * env , int * rback_num , int * rlevel)"		1219806	0					
ANR	1219808	CompoundStatement		2506:0:53539:55673	1219806	0					
ANR	1219809	IdentifierDeclStatement	"int r , sign , is_num , exist_level ;"	2507:2:53543:53575	1219806	0	True				
ANR	1219810	IdentifierDecl	r		1219806	0					
ANR	1219811	IdentifierDeclType	int		1219806	0					
ANR	1219812	Identifier	r		1219806	1					
ANR	1219813	IdentifierDecl	sign		1219806	1					
ANR	1219814	IdentifierDeclType	int		1219806	0					
ANR	1219815	Identifier	sign		1219806	1					
ANR	1219816	IdentifierDecl	is_num		1219806	2					
ANR	1219817	IdentifierDeclType	int		1219806	0					
ANR	1219818	Identifier	is_num		1219806	1					
ANR	1219819	IdentifierDecl	exist_level		1219806	3					
ANR	1219820	IdentifierDeclType	int		1219806	0					
ANR	1219821	Identifier	exist_level		1219806	1					
ANR	1219822	IdentifierDeclStatement	OnigCodePoint end_code ;	2508:2:53579:53601	1219806	1	True				
ANR	1219823	IdentifierDecl	end_code		1219806	0					
ANR	1219824	IdentifierDeclType	OnigCodePoint		1219806	0					
ANR	1219825	Identifier	end_code		1219806	1					
ANR	1219826	IdentifierDeclStatement	OnigCodePoint c = 0 ;	2509:2:53605:53624	1219806	2	True				
ANR	1219827	IdentifierDecl	c = 0		1219806	0					
ANR	1219828	IdentifierDeclType	OnigCodePoint		1219806	0					
ANR	1219829	Identifier	c		1219806	1					
ANR	1219830	AssignmentExpression	c = 0		1219806	2		=			
ANR	1219831	Identifier	c		1219806	0					
ANR	1219832	PrimaryExpression	0		1219806	1					
ANR	1219833	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	2510:2:53628:53655	1219806	3	True				
ANR	1219834	IdentifierDecl	enc = env -> enc		1219806	0					
ANR	1219835	IdentifierDeclType	OnigEncoding		1219806	0					
ANR	1219836	Identifier	enc		1219806	1					
ANR	1219837	AssignmentExpression	enc = env -> enc		1219806	2		=			
ANR	1219838	Identifier	enc		1219806	0					
ANR	1219839	PtrMemberAccess	env -> enc		1219806	1					
ANR	1219840	Identifier	env		1219806	0					
ANR	1219841	Identifier	enc		1219806	1					
ANR	1219842	IdentifierDeclStatement	UChar * name_end ;	2511:2:53659:53674	1219806	4	True				
ANR	1219843	IdentifierDecl	* name_end		1219806	0					
ANR	1219844	IdentifierDeclType	UChar *		1219806	0					
ANR	1219845	Identifier	name_end		1219806	1					
ANR	1219846	IdentifierDeclStatement	UChar * pnum_head ;	2512:2:53678:53694	1219806	5	True				
ANR	1219847	IdentifierDecl	* pnum_head		1219806	0					
ANR	1219848	IdentifierDeclType	UChar *		1219806	0					
ANR	1219849	Identifier	pnum_head		1219806	1					
ANR	1219850	IdentifierDeclStatement	UChar * p = * src ;	2513:2:53698:53713	1219806	6	True				
ANR	1219851	IdentifierDecl	* p = * src		1219806	0					
ANR	1219852	IdentifierDeclType	UChar *		1219806	0					
ANR	1219853	Identifier	p		1219806	1					
ANR	1219854	AssignmentExpression	* p = * src		1219806	2		=			
ANR	1219855	Identifier	p		1219806	0					
ANR	1219856	UnaryOperationExpression	* src		1219806	1					
ANR	1219857	UnaryOperator	*		1219806	0					
ANR	1219858	Identifier	src		1219806	1					
ANR	1219859	ExpressionStatement	PFETCH_READY	2514:2:53717:53729	1219806	7	True				
ANR	1219860	Identifier	PFETCH_READY		1219806	0					
ANR	1219861	ExpressionStatement	* rback_num = 0	2516:2:53734:53748	1219806	8	True				
ANR	1219862	AssignmentExpression	* rback_num = 0		1219806	0		=			
ANR	1219863	UnaryOperationExpression	* rback_num		1219806	0					
ANR	1219864	UnaryOperator	*		1219806	0					
ANR	1219865	Identifier	rback_num		1219806	1					
ANR	1219866	PrimaryExpression	0		1219806	1					
ANR	1219867	ExpressionStatement	is_num = exist_level = 0	2517:2:53752:53776	1219806	9	True				
ANR	1219868	AssignmentExpression	is_num = exist_level = 0		1219806	0		=			
ANR	1219869	Identifier	is_num		1219806	0					
ANR	1219870	AssignmentExpression	exist_level = 0		1219806	1		=			
ANR	1219871	Identifier	exist_level		1219806	0					
ANR	1219872	PrimaryExpression	0		1219806	1					
ANR	1219873	ExpressionStatement	sign = 1	2518:2:53780:53788	1219806	10	True				
ANR	1219874	AssignmentExpression	sign = 1		1219806	0		=			
ANR	1219875	Identifier	sign		1219806	0					
ANR	1219876	PrimaryExpression	1		1219806	1					
ANR	1219877	ExpressionStatement	pnum_head = * src	2519:2:53792:53808	1219806	11	True				
ANR	1219878	AssignmentExpression	pnum_head = * src		1219806	0		=			
ANR	1219879	Identifier	pnum_head		1219806	0					
ANR	1219880	UnaryOperationExpression	* src		1219806	1					
ANR	1219881	UnaryOperator	*		1219806	0					
ANR	1219882	Identifier	src		1219806	1					
ANR	1219883	ExpressionStatement	end_code = get_name_end_code_point ( start_code )	2521:2:53813:53859	1219806	12	True				
ANR	1219884	AssignmentExpression	end_code = get_name_end_code_point ( start_code )		1219806	0		=			
ANR	1219885	Identifier	end_code		1219806	0					
ANR	1219886	CallExpression	get_name_end_code_point ( start_code )		1219806	1					
ANR	1219887	Callee	get_name_end_code_point		1219806	0					
ANR	1219888	Identifier	get_name_end_code_point		1219806	0					
ANR	1219889	ArgumentList	start_code		1219806	1					
ANR	1219890	Argument	start_code		1219806	0					
ANR	1219891	Identifier	start_code		1219806	0					
ANR	1219892	ExpressionStatement	name_end = end	2523:2:53864:53878	1219806	13	True				
ANR	1219893	AssignmentExpression	name_end = end		1219806	0		=			
ANR	1219894	Identifier	name_end		1219806	0					
ANR	1219895	Identifier	end		1219806	1					
ANR	1219896	ExpressionStatement	r = 0	2524:2:53882:53887	1219806	14	True				
ANR	1219897	AssignmentExpression	r = 0		1219806	0		=			
ANR	1219898	Identifier	r		1219806	0					
ANR	1219899	PrimaryExpression	0		1219806	1					
ANR	1219900	IfStatement	if ( PEND )		1219806	15					
ANR	1219901	Condition	PEND	2525:6:53895:53898	1219806	0	True				
ANR	1219902	Identifier	PEND		1219806	0					
ANR	1219903	CompoundStatement		20:12:361:361	1219806	1					
ANR	1219904	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	2526:4:53907:53938	1219806	0	True				
ANR	1219905	Identifier	ONIGERR_EMPTY_GROUP_NAME		1219806	0					
ANR	1219906	ElseStatement	else		1219806	0					
ANR	1219907	CompoundStatement		23:7:411:411	1219806	0					
ANR	1219908	ExpressionStatement	PFETCH ( c )	2529:4:53957:53966	1219806	0	True				
ANR	1219909	CallExpression	PFETCH ( c )		1219806	0					
ANR	1219910	Callee	PFETCH		1219806	0					
ANR	1219911	Identifier	PFETCH		1219806	0					
ANR	1219912	ArgumentList	c		1219806	1					
ANR	1219913	Argument	c		1219806	0					
ANR	1219914	Identifier	c		1219806	0					
ANR	1219915	IfStatement	if ( c == end_code )		1219806	1					
ANR	1219916	Condition	c == end_code	2530:8:53976:53988	1219806	0	True				
ANR	1219917	EqualityExpression	c == end_code		1219806	0		==			
ANR	1219918	Identifier	c		1219806	0					
ANR	1219919	Identifier	end_code		1219806	1					
ANR	1219920	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	2531:6:53997:54028	1219806	1	True				
ANR	1219921	Identifier	ONIGERR_EMPTY_GROUP_NAME		1219806	0					
ANR	1219922	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		1219806	2					
ANR	1219923	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c )"	2533:8:54039:54067	1219806	0	True				
ANR	1219924	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		1219806	0					
ANR	1219925	Callee	ONIGENC_IS_CODE_DIGIT		1219806	0					
ANR	1219926	Identifier	ONIGENC_IS_CODE_DIGIT		1219806	0					
ANR	1219927	ArgumentList	enc		1219806	1					
ANR	1219928	Argument	enc		1219806	0					
ANR	1219929	Identifier	enc		1219806	0					
ANR	1219930	Argument	c		1219806	1					
ANR	1219931	Identifier	c		1219806	0					
ANR	1219932	CompoundStatement		28:39:530:530	1219806	1					
ANR	1219933	ExpressionStatement	is_num = 1	2534:6:54078:54088	1219806	0	True				
ANR	1219934	AssignmentExpression	is_num = 1		1219806	0		=			
ANR	1219935	Identifier	is_num		1219806	0					
ANR	1219936	PrimaryExpression	1		1219806	1					
ANR	1219937	ElseStatement	else		1219806	0					
ANR	1219938	IfStatement	if ( c == '-' )		1219806	0					
ANR	1219939	Condition	c == '-'	2536:13:54109:54116	1219806	0	True				
ANR	1219940	EqualityExpression	c == '-'		1219806	0		==			
ANR	1219941	Identifier	c		1219806	0					
ANR	1219942	PrimaryExpression	'-'		1219806	1					
ANR	1219943	CompoundStatement		31:23:579:579	1219806	1					
ANR	1219944	ExpressionStatement	is_num = 2	2537:6:54127:54137	1219806	0	True				
ANR	1219945	AssignmentExpression	is_num = 2		1219806	0		=			
ANR	1219946	Identifier	is_num		1219806	0					
ANR	1219947	PrimaryExpression	2		1219806	1					
ANR	1219948	ExpressionStatement	sign = - 1	2538:6:54145:54154	1219806	1	True				
ANR	1219949	AssignmentExpression	sign = - 1		1219806	0		=			
ANR	1219950	Identifier	sign		1219806	0					
ANR	1219951	UnaryOperationExpression	- 1		1219806	1					
ANR	1219952	UnaryOperator	-		1219806	0					
ANR	1219953	PrimaryExpression	1		1219806	1					
ANR	1219954	ExpressionStatement	pnum_head = p	2539:6:54162:54175	1219806	2	True				
ANR	1219955	AssignmentExpression	pnum_head = p		1219806	0		=			
ANR	1219956	Identifier	pnum_head		1219806	0					
ANR	1219957	Identifier	p		1219806	1					
ANR	1219958	ElseStatement	else		1219806	0					
ANR	1219959	IfStatement	"if ( ! ONIGENC_IS_CODE_WORD ( enc , c ) )"		1219806	0					
ANR	1219960	Condition	"! ONIGENC_IS_CODE_WORD ( enc , c )"	2541:13:54196:54224	1219806	0	True				
ANR	1219961	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( enc , c )"		1219806	0					
ANR	1219962	UnaryOperator	!		1219806	0					
ANR	1219963	CallExpression	"ONIGENC_IS_CODE_WORD ( enc , c )"		1219806	1					
ANR	1219964	Callee	ONIGENC_IS_CODE_WORD		1219806	0					
ANR	1219965	Identifier	ONIGENC_IS_CODE_WORD		1219806	0					
ANR	1219966	ArgumentList	enc		1219806	1					
ANR	1219967	Argument	enc		1219806	0					
ANR	1219968	Identifier	enc		1219806	0					
ANR	1219969	Argument	c		1219806	1					
ANR	1219970	Identifier	c		1219806	0					
ANR	1219971	CompoundStatement		36:44:687:687	1219806	1					
ANR	1219972	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2542:6:54235:54273	1219806	0	True				
ANR	1219973	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		1219806	0		=			
ANR	1219974	Identifier	r		1219806	0					
ANR	1219975	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		1219806	1					
ANR	1219976	WhileStatement	while ( ! PEND )		1219806	16					
ANR	1219977	Condition	! PEND	2546:9:54295:54299	1219806	0	True				
ANR	1219978	UnaryOperationExpression	! PEND		1219806	0					
ANR	1219979	UnaryOperator	!		1219806	0					
ANR	1219980	Identifier	PEND		1219806	1					
ANR	1219981	CompoundStatement		41:16:762:762	1219806	1					
ANR	1219982	ExpressionStatement	name_end = p	2547:4:54308:54320	1219806	0	True				
ANR	1219983	AssignmentExpression	name_end = p		1219806	0		=			
ANR	1219984	Identifier	name_end		1219806	0					
ANR	1219985	Identifier	p		1219806	1					
ANR	1219986	ExpressionStatement	PFETCH ( c )	2548:4:54326:54335	1219806	1	True				
ANR	1219987	CallExpression	PFETCH ( c )		1219806	0					
ANR	1219988	Callee	PFETCH		1219806	0					
ANR	1219989	Identifier	PFETCH		1219806	0					
ANR	1219990	ArgumentList	c		1219806	1					
ANR	1219991	Argument	c		1219806	0					
ANR	1219992	Identifier	c		1219806	0					
ANR	1219993	IfStatement	if ( c == end_code || c == ')' || c == '+' || c == '-' )		1219806	2					
ANR	1219994	Condition	c == end_code || c == ')' || c == '+' || c == '-'	2549:8:54345:54393	1219806	0	True				
ANR	1219995	OrExpression	c == end_code || c == ')' || c == '+' || c == '-'		1219806	0		||			
ANR	1219996	EqualityExpression	c == end_code		1219806	0		==			
ANR	1219997	Identifier	c		1219806	0					
ANR	1219998	Identifier	end_code		1219806	1					
ANR	1219999	OrExpression	c == ')' || c == '+' || c == '-'		1219806	1		||			
ANR	1220000	EqualityExpression	c == ')'		1219806	0		==			
ANR	1220001	Identifier	c		1219806	0					
ANR	1220002	PrimaryExpression	')'		1219806	1					
ANR	1220003	OrExpression	c == '+' || c == '-'		1219806	1		||			
ANR	1220004	EqualityExpression	c == '+'		1219806	0		==			
ANR	1220005	Identifier	c		1219806	0					
ANR	1220006	PrimaryExpression	'+'		1219806	1					
ANR	1220007	EqualityExpression	c == '-'		1219806	1		==			
ANR	1220008	Identifier	c		1219806	0					
ANR	1220009	PrimaryExpression	'-'		1219806	1					
ANR	1220010	CompoundStatement		44:59:856:856	1219806	1					
ANR	1220011	IfStatement	if ( is_num == 2 )		1219806	0					
ANR	1220012	Condition	is_num == 2	2550:10:54408:54418	1219806	0	True				
ANR	1220013	EqualityExpression	is_num == 2		1219806	0		==			
ANR	1220014	Identifier	is_num		1219806	0					
ANR	1220015	PrimaryExpression	2		1219806	1					
ANR	1220016	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2550:24:54422:54452	1219806	1	True				
ANR	1220017	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		1219806	0		=			
ANR	1220018	Identifier	r		1219806	0					
ANR	1220019	Identifier	ONIGERR_INVALID_GROUP_NAME		1219806	1					
ANR	1220020	BreakStatement	break ;	2551:6:54460:54465	1219806	1	True				
ANR	1220021	IfStatement	if ( is_num != 0 )		1219806	3					
ANR	1220022	Condition	is_num != 0	2554:8:54482:54492	1219806	0	True				
ANR	1220023	EqualityExpression	is_num != 0		1219806	0		!=			
ANR	1220024	Identifier	is_num		1219806	0					
ANR	1220025	PrimaryExpression	0		1219806	1					
ANR	1220026	CompoundStatement		49:21:955:955	1219806	1					
ANR	1220027	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		1219806	0					
ANR	1220028	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c )"	2555:10:54507:54535	1219806	0	True				
ANR	1220029	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		1219806	0					
ANR	1220030	Callee	ONIGENC_IS_CODE_DIGIT		1219806	0					
ANR	1220031	Identifier	ONIGENC_IS_CODE_DIGIT		1219806	0					
ANR	1220032	ArgumentList	enc		1219806	1					
ANR	1220033	Argument	enc		1219806	0					
ANR	1220034	Identifier	enc		1219806	0					
ANR	1220035	Argument	c		1219806	1					
ANR	1220036	Identifier	c		1219806	0					
ANR	1220037	CompoundStatement		50:41:998:998	1219806	1					
ANR	1220038	ExpressionStatement	is_num = 1	2556:8:54548:54558	1219806	0	True				
ANR	1220039	AssignmentExpression	is_num = 1		1219806	0		=			
ANR	1220040	Identifier	is_num		1219806	0					
ANR	1220041	PrimaryExpression	1		1219806	1					
ANR	1220042	ElseStatement	else		1219806	0					
ANR	1220043	CompoundStatement		53:11:1039:1039	1219806	0					
ANR	1220044	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2559:8:54589:54619	1219806	0	True				
ANR	1220045	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		1219806	0		=			
ANR	1220046	Identifier	r		1219806	0					
ANR	1220047	Identifier	ONIGERR_INVALID_GROUP_NAME		1219806	1					
ANR	1220048	ExpressionStatement	is_num = 0	2560:8:54629:54639	1219806	1	True				
ANR	1220049	AssignmentExpression	is_num = 0		1219806	0		=			
ANR	1220050	Identifier	is_num		1219806	0					
ANR	1220051	PrimaryExpression	0		1219806	1					
ANR	1220052	ElseStatement	else		1219806	0					
ANR	1220053	IfStatement	"if ( ! ONIGENC_IS_CODE_WORD ( enc , c ) )"		1219806	0					
ANR	1220054	Condition	"! ONIGENC_IS_CODE_WORD ( enc , c )"	2563:13:54668:54696	1219806	0	True				
ANR	1220055	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( enc , c )"		1219806	0					
ANR	1220056	UnaryOperator	!		1219806	0					
ANR	1220057	CallExpression	"ONIGENC_IS_CODE_WORD ( enc , c )"		1219806	1					
ANR	1220058	Callee	ONIGENC_IS_CODE_WORD		1219806	0					
ANR	1220059	Identifier	ONIGENC_IS_CODE_WORD		1219806	0					
ANR	1220060	ArgumentList	enc		1219806	1					
ANR	1220061	Argument	enc		1219806	0					
ANR	1220062	Identifier	enc		1219806	0					
ANR	1220063	Argument	c		1219806	1					
ANR	1220064	Identifier	c		1219806	0					
ANR	1220065	CompoundStatement		58:44:1159:1159	1219806	1					
ANR	1220066	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2564:6:54707:54745	1219806	0	True				
ANR	1220067	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		1219806	0		=			
ANR	1220068	Identifier	r		1219806	0					
ANR	1220069	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		1219806	1					
ANR	1220070	IfStatement	if ( r == 0 && c != end_code )		1219806	17					
ANR	1220071	Condition	r == 0 && c != end_code	2568:6:54764:54786	1219806	0	True				
ANR	1220072	AndExpression	r == 0 && c != end_code		1219806	0		&&			
ANR	1220073	EqualityExpression	r == 0		1219806	0		==			
ANR	1220074	Identifier	r		1219806	0					
ANR	1220075	PrimaryExpression	0		1219806	1					
ANR	1220076	EqualityExpression	c != end_code		1219806	1		!=			
ANR	1220077	Identifier	c		1219806	0					
ANR	1220078	Identifier	end_code		1219806	1					
ANR	1220079	CompoundStatement		63:31:1249:1249	1219806	1					
ANR	1220080	IfStatement	if ( c == '+' || c == '-' )		1219806	0					
ANR	1220081	Condition	c == '+' || c == '-'	2569:8:54799:54818	1219806	0	True				
ANR	1220082	OrExpression	c == '+' || c == '-'		1219806	0		||			
ANR	1220083	EqualityExpression	c == '+'		1219806	0		==			
ANR	1220084	Identifier	c		1219806	0					
ANR	1220085	PrimaryExpression	'+'		1219806	1					
ANR	1220086	EqualityExpression	c == '-'		1219806	1		==			
ANR	1220087	Identifier	c		1219806	0					
ANR	1220088	PrimaryExpression	'-'		1219806	1					
ANR	1220089	CompoundStatement		66:6:1306:1336	1219806	1					
ANR	1220090	IdentifierDeclStatement	int level ;	2570:6:54829:54838	1219806	0	True				
ANR	1220091	IdentifierDecl	level		1219806	0					
ANR	1220092	IdentifierDeclType	int		1219806	0					
ANR	1220093	Identifier	level		1219806	1					
ANR	1220094	IdentifierDeclStatement	int flag = ( c == '-' ? - 1 : 1 ) ;	2571:6:54846:54876	1219806	1	True				
ANR	1220095	IdentifierDecl	flag = ( c == '-' ? - 1 : 1 )		1219806	0					
ANR	1220096	IdentifierDeclType	int		1219806	0					
ANR	1220097	Identifier	flag		1219806	1					
ANR	1220098	AssignmentExpression	flag = ( c == '-' ? - 1 : 1 )		1219806	2		=			
ANR	1220099	Identifier	flag		1219806	0					
ANR	1220100	ConditionalExpression	c == '-' ? - 1 : 1		1219806	1					
ANR	1220101	Condition	c == '-'		1219806	0					
ANR	1220102	EqualityExpression	c == '-'		1219806	0		==			
ANR	1220103	Identifier	c		1219806	0					
ANR	1220104	PrimaryExpression	'-'		1219806	1					
ANR	1220105	UnaryOperationExpression	- 1		1219806	1					
ANR	1220106	UnaryOperator	-		1219806	0					
ANR	1220107	PrimaryExpression	1		1219806	1					
ANR	1220108	PrimaryExpression	1		1219806	2					
ANR	1220109	ExpressionStatement	PFETCH ( c )	2573:6:54885:54894	1219806	2	True				
ANR	1220110	CallExpression	PFETCH ( c )		1219806	0					
ANR	1220111	Callee	PFETCH		1219806	0					
ANR	1220112	Identifier	PFETCH		1219806	0					
ANR	1220113	ArgumentList	c		1219806	1					
ANR	1220114	Argument	c		1219806	0					
ANR	1220115	Identifier	c		1219806	0					
ANR	1220116	IfStatement	"if ( ! ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		1219806	3					
ANR	1220117	Condition	"! ONIGENC_IS_CODE_DIGIT ( enc , c )"	2574:10:54906:54936	1219806	0	True				
ANR	1220118	UnaryOperationExpression	"! ONIGENC_IS_CODE_DIGIT ( enc , c )"		1219806	0					
ANR	1220119	UnaryOperator	!		1219806	0					
ANR	1220120	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		1219806	1					
ANR	1220121	Callee	ONIGENC_IS_CODE_DIGIT		1219806	0					
ANR	1220122	Identifier	ONIGENC_IS_CODE_DIGIT		1219806	0					
ANR	1220123	ArgumentList	enc		1219806	1					
ANR	1220124	Argument	enc		1219806	0					
ANR	1220125	Identifier	enc		1219806	0					
ANR	1220126	Argument	c		1219806	1					
ANR	1220127	Identifier	c		1219806	0					
ANR	1220128	GotoStatement	goto err ;	2574:43:54939:54947	1219806	1	True				
ANR	1220129	Identifier	err		1219806	0					
ANR	1220130	ExpressionStatement	PUNFETCH	2575:6:54955:54963	1219806	4	True				
ANR	1220131	Identifier	PUNFETCH		1219806	0					
ANR	1220132	ExpressionStatement	"level = onig_scan_unsigned_number ( & p , end , enc )"	2576:6:54971:55018	1219806	5	True				
ANR	1220133	AssignmentExpression	"level = onig_scan_unsigned_number ( & p , end , enc )"		1219806	0		=			
ANR	1220134	Identifier	level		1219806	0					
ANR	1220135	CallExpression	"onig_scan_unsigned_number ( & p , end , enc )"		1219806	1					
ANR	1220136	Callee	onig_scan_unsigned_number		1219806	0					
ANR	1220137	Identifier	onig_scan_unsigned_number		1219806	0					
ANR	1220138	ArgumentList	& p		1219806	1					
ANR	1220139	Argument	& p		1219806	0					
ANR	1220140	UnaryOperationExpression	& p		1219806	0					
ANR	1220141	UnaryOperator	&		1219806	0					
ANR	1220142	Identifier	p		1219806	1					
ANR	1220143	Argument	end		1219806	1					
ANR	1220144	Identifier	end		1219806	0					
ANR	1220145	Argument	enc		1219806	2					
ANR	1220146	Identifier	enc		1219806	0					
ANR	1220147	IfStatement	if ( level < 0 )		1219806	6					
ANR	1220148	Condition	level < 0	2577:10:55030:55038	1219806	0	True				
ANR	1220149	RelationalExpression	level < 0		1219806	0		<			
ANR	1220150	Identifier	level		1219806	0					
ANR	1220151	PrimaryExpression	0		1219806	1					
ANR	1220152	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	2577:21:55041:55070	1219806	1	True				
ANR	1220153	Identifier	ONIGERR_TOO_BIG_NUMBER		1219806	0					
ANR	1220154	ExpressionStatement	* rlevel = ( level * flag )	2578:6:55078:55102	1219806	7	True				
ANR	1220155	AssignmentExpression	* rlevel = ( level * flag )		1219806	0		=			
ANR	1220156	UnaryOperationExpression	* rlevel		1219806	0					
ANR	1220157	UnaryOperator	*		1219806	0					
ANR	1220158	Identifier	rlevel		1219806	1					
ANR	1220159	MultiplicativeExpression	level * flag		1219806	1		*			
ANR	1220160	Identifier	level		1219806	0					
ANR	1220161	Identifier	flag		1219806	1					
ANR	1220162	ExpressionStatement	exist_level = 1	2579:6:55110:55125	1219806	8	True				
ANR	1220163	AssignmentExpression	exist_level = 1		1219806	0		=			
ANR	1220164	Identifier	exist_level		1219806	0					
ANR	1220165	PrimaryExpression	1		1219806	1					
ANR	1220166	ExpressionStatement	PFETCH ( c )	2581:6:55134:55143	1219806	9	True				
ANR	1220167	CallExpression	PFETCH ( c )		1219806	0					
ANR	1220168	Callee	PFETCH		1219806	0					
ANR	1220169	Identifier	PFETCH		1219806	0					
ANR	1220170	ArgumentList	c		1219806	1					
ANR	1220171	Argument	c		1219806	0					
ANR	1220172	Identifier	c		1219806	0					
ANR	1220173	IfStatement	if ( c == end_code )		1219806	10					
ANR	1220174	Condition	c == end_code	2582:10:55155:55167	1219806	0	True				
ANR	1220175	EqualityExpression	c == end_code		1219806	0		==			
ANR	1220176	Identifier	c		1219806	0					
ANR	1220177	Identifier	end_code		1219806	1					
ANR	1220178	GotoStatement	goto end ;	2583:1:55171:55179	1219806	1	True				
ANR	1220179	Identifier	end		1219806	0					
ANR	1220180	Label	err :	2586:2:55190:55193	1219806	1	True				
ANR	1220181	Identifier	err		1219806	0					
ANR	1220182	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2587:4:55199:55229	1219806	2	True				
ANR	1220183	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		1219806	0		=			
ANR	1220184	Identifier	r		1219806	0					
ANR	1220185	Identifier	ONIGERR_INVALID_GROUP_NAME		1219806	1					
ANR	1220186	ExpressionStatement	name_end = end	2588:4:55235:55249	1219806	3	True				
ANR	1220187	AssignmentExpression	name_end = end		1219806	0		=			
ANR	1220188	Identifier	name_end		1219806	0					
ANR	1220189	Identifier	end		1219806	1					
ANR	1220190	Label	end :	2591:1:55257:55260	1219806	18	True				
ANR	1220191	Identifier	end		1219806	0					
ANR	1220192	IfStatement	if ( r == 0 )		1219806	19					
ANR	1220193	Condition	r == 0	2592:6:55268:55273	1219806	0	True				
ANR	1220194	EqualityExpression	r == 0		1219806	0		==			
ANR	1220195	Identifier	r		1219806	0					
ANR	1220196	PrimaryExpression	0		1219806	1					
ANR	1220197	CompoundStatement		87:14:1736:1736	1219806	1					
ANR	1220198	IfStatement	if ( is_num != 0 )		1219806	0					
ANR	1220199	Condition	is_num != 0	2593:8:55286:55296	1219806	0	True				
ANR	1220200	EqualityExpression	is_num != 0		1219806	0		!=			
ANR	1220201	Identifier	is_num		1219806	0					
ANR	1220202	PrimaryExpression	0		1219806	1					
ANR	1220203	CompoundStatement		88:21:1759:1759	1219806	1					
ANR	1220204	ExpressionStatement	"* rback_num = onig_scan_unsigned_number ( & pnum_head , name_end , enc )"	2594:6:55307:55372	1219806	0	True				
ANR	1220205	AssignmentExpression	"* rback_num = onig_scan_unsigned_number ( & pnum_head , name_end , enc )"		1219806	0		=			
ANR	1220206	UnaryOperationExpression	* rback_num		1219806	0					
ANR	1220207	UnaryOperator	*		1219806	0					
ANR	1220208	Identifier	rback_num		1219806	1					
ANR	1220209	CallExpression	"onig_scan_unsigned_number ( & pnum_head , name_end , enc )"		1219806	1					
ANR	1220210	Callee	onig_scan_unsigned_number		1219806	0					
ANR	1220211	Identifier	onig_scan_unsigned_number		1219806	0					
ANR	1220212	ArgumentList	& pnum_head		1219806	1					
ANR	1220213	Argument	& pnum_head		1219806	0					
ANR	1220214	UnaryOperationExpression	& pnum_head		1219806	0					
ANR	1220215	UnaryOperator	&		1219806	0					
ANR	1220216	Identifier	pnum_head		1219806	1					
ANR	1220217	Argument	name_end		1219806	1					
ANR	1220218	Identifier	name_end		1219806	0					
ANR	1220219	Argument	enc		1219806	2					
ANR	1220220	Identifier	enc		1219806	0					
ANR	1220221	IfStatement	if ( * rback_num < 0 )		1219806	1					
ANR	1220222	Condition	* rback_num < 0	2595:10:55384:55397	1219806	0	True				
ANR	1220223	RelationalExpression	* rback_num < 0		1219806	0		<			
ANR	1220224	UnaryOperationExpression	* rback_num		1219806	0					
ANR	1220225	UnaryOperator	*		1219806	0					
ANR	1220226	Identifier	rback_num		1219806	1					
ANR	1220227	PrimaryExpression	0		1219806	1					
ANR	1220228	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	2595:26:55400:55429	1219806	1	True				
ANR	1220229	Identifier	ONIGERR_TOO_BIG_NUMBER		1219806	0					
ANR	1220230	ElseStatement	else		1219806	0					
ANR	1220231	IfStatement	if ( * rback_num == 0 )		1219806	0					
ANR	1220232	Condition	* rback_num == 0	2596:15:55446:55460	1219806	0	True				
ANR	1220233	EqualityExpression	* rback_num == 0		1219806	0		==			
ANR	1220234	UnaryOperationExpression	* rback_num		1219806	0					
ANR	1220235	UnaryOperator	*		1219806	0					
ANR	1220236	Identifier	rback_num		1219806	1					
ANR	1220237	PrimaryExpression	0		1219806	1					
ANR	1220238	GotoStatement	goto err ;	2596:32:55463:55471	1219806	1	True				
ANR	1220239	Identifier	err		1219806	0					
ANR	1220240	ExpressionStatement	* rback_num *= sign	2598:6:55480:55498	1219806	2	True				
ANR	1220241	AssignmentExpression	* rback_num *= sign		1219806	0		*=			
ANR	1220242	UnaryOperationExpression	* rback_num		1219806	0					
ANR	1220243	UnaryOperator	*		1219806	0					
ANR	1220244	Identifier	rback_num		1219806	1					
ANR	1220245	Identifier	sign		1219806	1					
ANR	1220246	ExpressionStatement	* rname_end = name_end	2601:4:55511:55532	1219806	1	True				
ANR	1220247	AssignmentExpression	* rname_end = name_end		1219806	0		=			
ANR	1220248	UnaryOperationExpression	* rname_end		1219806	0					
ANR	1220249	UnaryOperator	*		1219806	0					
ANR	1220250	Identifier	rname_end		1219806	1					
ANR	1220251	Identifier	name_end		1219806	1					
ANR	1220252	ExpressionStatement	* src = p	2602:4:55538:55546	1219806	2	True				
ANR	1220253	AssignmentExpression	* src = p		1219806	0		=			
ANR	1220254	UnaryOperationExpression	* src		1219806	0					
ANR	1220255	UnaryOperator	*		1219806	0					
ANR	1220256	Identifier	src		1219806	1					
ANR	1220257	Identifier	p		1219806	1					
ANR	1220258	ReturnStatement	return ( exist_level ? 1 : 0 ) ;	2603:4:55552:55580	1219806	3	True				
ANR	1220259	ConditionalExpression	exist_level ? 1 : 0		1219806	0					
ANR	1220260	Condition	exist_level		1219806	0					
ANR	1220261	Identifier	exist_level		1219806	0					
ANR	1220262	PrimaryExpression	1		1219806	1					
ANR	1220263	PrimaryExpression	0		1219806	2					
ANR	1220264	ElseStatement	else		1219806	0					
ANR	1220265	CompoundStatement		100:7:2053:2053	1219806	0					
ANR	1220266	ExpressionStatement	"onig_scan_env_set_error_string ( env , r , * src , name_end )"	2606:4:55599:55653	1219806	0	True				
ANR	1220267	CallExpression	"onig_scan_env_set_error_string ( env , r , * src , name_end )"		1219806	0					
ANR	1220268	Callee	onig_scan_env_set_error_string		1219806	0					
ANR	1220269	Identifier	onig_scan_env_set_error_string		1219806	0					
ANR	1220270	ArgumentList	env		1219806	1					
ANR	1220271	Argument	env		1219806	0					
ANR	1220272	Identifier	env		1219806	0					
ANR	1220273	Argument	r		1219806	1					
ANR	1220274	Identifier	r		1219806	0					
ANR	1220275	Argument	* src		1219806	2					
ANR	1220276	UnaryOperationExpression	* src		1219806	0					
ANR	1220277	UnaryOperator	*		1219806	0					
ANR	1220278	Identifier	src		1219806	1					
ANR	1220279	Argument	name_end		1219806	3					
ANR	1220280	Identifier	name_end		1219806	0					
ANR	1220281	ReturnStatement	return r ;	2607:4:55659:55667	1219806	1	True				
ANR	1220282	Identifier	r		1219806	0					
ANR	1220283	ReturnType	static int		1219806	1					
ANR	1220284	Identifier	fetch_name_with_level		1219806	2					
ANR	1220285	ParameterList	"OnigCodePoint start_code , UChar * * src , UChar * end , UChar * * rname_end , ScanEnv * env , int * rback_num , int * rlevel"		1219806	3					
ANR	1220286	Parameter	OnigCodePoint start_code	2503:22:53410:53433	1219806	0	True				
ANR	1220287	ParameterType	OnigCodePoint		1219806	0					
ANR	1220288	Identifier	start_code		1219806	1					
ANR	1220289	Parameter	UChar * * src	2503:48:53436:53446	1219806	1	True				
ANR	1220290	ParameterType	UChar * *		1219806	0					
ANR	1220291	Identifier	src		1219806	1					
ANR	1220292	Parameter	UChar * end	2503:61:53449:53458	1219806	2	True				
ANR	1220293	ParameterType	UChar *		1219806	0					
ANR	1220294	Identifier	end		1219806	1					
ANR	1220295	Parameter	UChar * * rname_end	2504:8:53469:53485	1219806	3	True				
ANR	1220296	ParameterType	UChar * *		1219806	0					
ANR	1220297	Identifier	rname_end		1219806	1					
ANR	1220298	Parameter	ScanEnv * env	2504:27:53488:53499	1219806	4	True				
ANR	1220299	ParameterType	ScanEnv *		1219806	0					
ANR	1220300	Identifier	env		1219806	1					
ANR	1220301	Parameter	int * rback_num	2505:8:53510:53523	1219806	5	True				
ANR	1220302	ParameterType	int *		1219806	0					
ANR	1220303	Identifier	rback_num		1219806	1					
ANR	1220304	Parameter	int * rlevel	2505:24:53526:53536	1219806	6	True				
ANR	1220305	ParameterType	int *		1219806	0					
ANR	1220306	Identifier	rlevel		1219806	1					
ANR	1220307	CFGEntryNode	ENTRY		1219806		True				
ANR	1220308	CFGExitNode	EXIT		1219806		True				
ANR	1220309	Symbol	ONIGERR_EMPTY_GROUP_NAME		1219806						
ANR	1220310	Symbol	end_code		1219806						
ANR	1220311	Symbol	flag		1219806						
ANR	1220312	Symbol	* rname_end		1219806						
ANR	1220313	Symbol	ONIGENC_IS_CODE_DIGIT		1219806						
ANR	1220314	Symbol	sign		1219806						
ANR	1220315	Symbol	rback_num		1219806						
ANR	1220316	Symbol	env -> enc		1219806						
ANR	1220317	Symbol	ONIGENC_IS_CODE_WORD		1219806						
ANR	1220318	Symbol	ONIGERR_INVALID_GROUP_NAME		1219806						
ANR	1220319	Symbol	onig_scan_unsigned_number		1219806						
ANR	1220320	Symbol	exist_level		1219806						
ANR	1220321	Symbol	* src		1219806						
ANR	1220322	Symbol	PEND		1219806						
ANR	1220323	Symbol	& pnum_head		1219806						
ANR	1220324	Symbol	end		1219806						
ANR	1220325	Symbol	enc		1219806						
ANR	1220326	Symbol	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		1219806						
ANR	1220327	Symbol	start_code		1219806						
ANR	1220328	Symbol	name_end		1219806						
ANR	1220329	Symbol	is_num		1219806						
ANR	1220330	Symbol	c		1219806						
ANR	1220331	Symbol	ONIGERR_TOO_BIG_NUMBER		1219806						
ANR	1220332	Symbol	src		1219806						
ANR	1220333	Symbol	level		1219806						
ANR	1220334	Symbol	* env		1219806						
ANR	1220335	Symbol	rname_end		1219806						
ANR	1220336	Symbol	get_name_end_code_point		1219806						
ANR	1220337	Symbol	* rlevel		1219806						
ANR	1220338	Symbol	env		1219806						
ANR	1220339	Symbol	p		1219806						
ANR	1220340	Symbol	r		1219806						
ANR	1220341	Symbol	* rback_num		1219806						
ANR	1220342	Symbol	& p		1219806						
ANR	1220343	Symbol	rlevel		1219806						
ANR	1220344	Symbol	pnum_head		1219806						
ANR	1220345	Function	fetch_name	2616:0:55818:58207							
ANR	1220346	FunctionDef	"fetch_name (OnigCodePoint start_code , UChar * * src , UChar * end , UChar * * rname_end , ScanEnv * env , int * rback_num , int ref)"		1220345	0					
ANR	1220347	CompoundStatement		2619:0:55953:58207	1220345	0					
ANR	1220348	IdentifierDeclStatement	"int r , is_num , sign ;"	2620:2:55957:55976	1220345	0	True				
ANR	1220349	IdentifierDecl	r		1220345	0					
ANR	1220350	IdentifierDeclType	int		1220345	0					
ANR	1220351	Identifier	r		1220345	1					
ANR	1220352	IdentifierDecl	is_num		1220345	1					
ANR	1220353	IdentifierDeclType	int		1220345	0					
ANR	1220354	Identifier	is_num		1220345	1					
ANR	1220355	IdentifierDecl	sign		1220345	2					
ANR	1220356	IdentifierDeclType	int		1220345	0					
ANR	1220357	Identifier	sign		1220345	1					
ANR	1220358	IdentifierDeclStatement	OnigCodePoint end_code ;	2621:2:55980:56002	1220345	1	True				
ANR	1220359	IdentifierDecl	end_code		1220345	0					
ANR	1220360	IdentifierDeclType	OnigCodePoint		1220345	0					
ANR	1220361	Identifier	end_code		1220345	1					
ANR	1220362	IdentifierDeclStatement	OnigCodePoint c = 0 ;	2622:2:56006:56025	1220345	2	True				
ANR	1220363	IdentifierDecl	c = 0		1220345	0					
ANR	1220364	IdentifierDeclType	OnigCodePoint		1220345	0					
ANR	1220365	Identifier	c		1220345	1					
ANR	1220366	AssignmentExpression	c = 0		1220345	2		=			
ANR	1220367	Identifier	c		1220345	0					
ANR	1220368	PrimaryExpression	0		1220345	1					
ANR	1220369	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	2623:2:56029:56056	1220345	3	True				
ANR	1220370	IdentifierDecl	enc = env -> enc		1220345	0					
ANR	1220371	IdentifierDeclType	OnigEncoding		1220345	0					
ANR	1220372	Identifier	enc		1220345	1					
ANR	1220373	AssignmentExpression	enc = env -> enc		1220345	2		=			
ANR	1220374	Identifier	enc		1220345	0					
ANR	1220375	PtrMemberAccess	env -> enc		1220345	1					
ANR	1220376	Identifier	env		1220345	0					
ANR	1220377	Identifier	enc		1220345	1					
ANR	1220378	IdentifierDeclStatement	UChar * name_end ;	2624:2:56060:56075	1220345	4	True				
ANR	1220379	IdentifierDecl	* name_end		1220345	0					
ANR	1220380	IdentifierDeclType	UChar *		1220345	0					
ANR	1220381	Identifier	name_end		1220345	1					
ANR	1220382	IdentifierDeclStatement	UChar * pnum_head ;	2625:2:56079:56095	1220345	5	True				
ANR	1220383	IdentifierDecl	* pnum_head		1220345	0					
ANR	1220384	IdentifierDeclType	UChar *		1220345	0					
ANR	1220385	Identifier	pnum_head		1220345	1					
ANR	1220386	IdentifierDeclStatement	UChar * p = * src ;	2626:2:56099:56114	1220345	6	True				
ANR	1220387	IdentifierDecl	* p = * src		1220345	0					
ANR	1220388	IdentifierDeclType	UChar *		1220345	0					
ANR	1220389	Identifier	p		1220345	1					
ANR	1220390	AssignmentExpression	* p = * src		1220345	2		=			
ANR	1220391	Identifier	p		1220345	0					
ANR	1220392	UnaryOperationExpression	* src		1220345	1					
ANR	1220393	UnaryOperator	*		1220345	0					
ANR	1220394	Identifier	src		1220345	1					
ANR	1220395	ExpressionStatement	* rback_num = 0	2628:2:56119:56133	1220345	7	True				
ANR	1220396	AssignmentExpression	* rback_num = 0		1220345	0		=			
ANR	1220397	UnaryOperationExpression	* rback_num		1220345	0					
ANR	1220398	UnaryOperator	*		1220345	0					
ANR	1220399	Identifier	rback_num		1220345	1					
ANR	1220400	PrimaryExpression	0		1220345	1					
ANR	1220401	ExpressionStatement	end_code = get_name_end_code_point ( start_code )	2630:2:56138:56184	1220345	8	True				
ANR	1220402	AssignmentExpression	end_code = get_name_end_code_point ( start_code )		1220345	0		=			
ANR	1220403	Identifier	end_code		1220345	0					
ANR	1220404	CallExpression	get_name_end_code_point ( start_code )		1220345	1					
ANR	1220405	Callee	get_name_end_code_point		1220345	0					
ANR	1220406	Identifier	get_name_end_code_point		1220345	0					
ANR	1220407	ArgumentList	start_code		1220345	1					
ANR	1220408	Argument	start_code		1220345	0					
ANR	1220409	Identifier	start_code		1220345	0					
ANR	1220410	ExpressionStatement	name_end = end	2632:2:56189:56203	1220345	9	True				
ANR	1220411	AssignmentExpression	name_end = end		1220345	0		=			
ANR	1220412	Identifier	name_end		1220345	0					
ANR	1220413	Identifier	end		1220345	1					
ANR	1220414	ExpressionStatement	pnum_head = * src	2633:2:56207:56223	1220345	10	True				
ANR	1220415	AssignmentExpression	pnum_head = * src		1220345	0		=			
ANR	1220416	Identifier	pnum_head		1220345	0					
ANR	1220417	UnaryOperationExpression	* src		1220345	1					
ANR	1220418	UnaryOperator	*		1220345	0					
ANR	1220419	Identifier	src		1220345	1					
ANR	1220420	ExpressionStatement	r = 0	2634:2:56227:56232	1220345	11	True				
ANR	1220421	AssignmentExpression	r = 0		1220345	0		=			
ANR	1220422	Identifier	r		1220345	0					
ANR	1220423	PrimaryExpression	0		1220345	1					
ANR	1220424	ExpressionStatement	is_num = 0	2635:2:56236:56246	1220345	12	True				
ANR	1220425	AssignmentExpression	is_num = 0		1220345	0		=			
ANR	1220426	Identifier	is_num		1220345	0					
ANR	1220427	PrimaryExpression	0		1220345	1					
ANR	1220428	ExpressionStatement	sign = 1	2636:2:56250:56258	1220345	13	True				
ANR	1220429	AssignmentExpression	sign = 1		1220345	0		=			
ANR	1220430	Identifier	sign		1220345	0					
ANR	1220431	PrimaryExpression	1		1220345	1					
ANR	1220432	IfStatement	if ( PEND )		1220345	14					
ANR	1220433	Condition	PEND	2637:6:56266:56269	1220345	0	True				
ANR	1220434	Identifier	PEND		1220345	0					
ANR	1220435	CompoundStatement		19:12:318:318	1220345	1					
ANR	1220436	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	2638:4:56278:56309	1220345	0	True				
ANR	1220437	Identifier	ONIGERR_EMPTY_GROUP_NAME		1220345	0					
ANR	1220438	ElseStatement	else		1220345	0					
ANR	1220439	CompoundStatement		22:7:368:368	1220345	0					
ANR	1220440	ExpressionStatement	PFETCH_S ( c )	2641:4:56328:56339	1220345	0	True				
ANR	1220441	CallExpression	PFETCH_S ( c )		1220345	0					
ANR	1220442	Callee	PFETCH_S		1220345	0					
ANR	1220443	Identifier	PFETCH_S		1220345	0					
ANR	1220444	ArgumentList	c		1220345	1					
ANR	1220445	Argument	c		1220345	0					
ANR	1220446	Identifier	c		1220345	0					
ANR	1220447	IfStatement	if ( c == end_code )		1220345	1					
ANR	1220448	Condition	c == end_code	2642:8:56349:56361	1220345	0	True				
ANR	1220449	EqualityExpression	c == end_code		1220345	0		==			
ANR	1220450	Identifier	c		1220345	0					
ANR	1220451	Identifier	end_code		1220345	1					
ANR	1220452	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	2643:6:56370:56401	1220345	1	True				
ANR	1220453	Identifier	ONIGERR_EMPTY_GROUP_NAME		1220345	0					
ANR	1220454	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		1220345	2					
ANR	1220455	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c )"	2645:8:56412:56440	1220345	0	True				
ANR	1220456	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		1220345	0					
ANR	1220457	Callee	ONIGENC_IS_CODE_DIGIT		1220345	0					
ANR	1220458	Identifier	ONIGENC_IS_CODE_DIGIT		1220345	0					
ANR	1220459	ArgumentList	enc		1220345	1					
ANR	1220460	Argument	enc		1220345	0					
ANR	1220461	Identifier	enc		1220345	0					
ANR	1220462	Argument	c		1220345	1					
ANR	1220463	Identifier	c		1220345	0					
ANR	1220464	CompoundStatement		27:39:489:489	1220345	1					
ANR	1220465	IfStatement	if ( ref == 1 )		1220345	0					
ANR	1220466	Condition	ref == 1	2646:10:56455:56462	1220345	0	True				
ANR	1220467	EqualityExpression	ref == 1		1220345	0		==			
ANR	1220468	Identifier	ref		1220345	0					
ANR	1220469	PrimaryExpression	1		1220345	1					
ANR	1220470	ExpressionStatement	is_num = 1	2647:8:56473:56483	1220345	1	True				
ANR	1220471	AssignmentExpression	is_num = 1		1220345	0		=			
ANR	1220472	Identifier	is_num		1220345	0					
ANR	1220473	PrimaryExpression	1		1220345	1					
ANR	1220474	ElseStatement	else		1220345	0					
ANR	1220475	CompoundStatement		30:11:542:542	1220345	0					
ANR	1220476	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2649:8:56506:56536	1220345	0	True				
ANR	1220477	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		1220345	0		=			
ANR	1220478	Identifier	r		1220345	0					
ANR	1220479	Identifier	ONIGERR_INVALID_GROUP_NAME		1220345	1					
ANR	1220480	ExpressionStatement	is_num = 0	2650:8:56546:56556	1220345	1	True				
ANR	1220481	AssignmentExpression	is_num = 0		1220345	0		=			
ANR	1220482	Identifier	is_num		1220345	0					
ANR	1220483	PrimaryExpression	0		1220345	1					
ANR	1220484	ElseStatement	else		1220345	0					
ANR	1220485	IfStatement	if ( c == '-' )		1220345	0					
ANR	1220486	Condition	c == '-'	2653:13:56585:56592	1220345	0	True				
ANR	1220487	EqualityExpression	c == '-'		1220345	0		==			
ANR	1220488	Identifier	c		1220345	0					
ANR	1220489	PrimaryExpression	'-'		1220345	1					
ANR	1220490	CompoundStatement		35:23:641:641	1220345	1					
ANR	1220491	IfStatement	if ( ref == 1 )		1220345	0					
ANR	1220492	Condition	ref == 1	2654:10:56607:56614	1220345	0	True				
ANR	1220493	EqualityExpression	ref == 1		1220345	0		==			
ANR	1220494	Identifier	ref		1220345	0					
ANR	1220495	PrimaryExpression	1		1220345	1					
ANR	1220496	CompoundStatement		36:20:663:663	1220345	1					
ANR	1220497	ExpressionStatement	is_num = 2	2655:8:56627:56637	1220345	0	True				
ANR	1220498	AssignmentExpression	is_num = 2		1220345	0		=			
ANR	1220499	Identifier	is_num		1220345	0					
ANR	1220500	PrimaryExpression	2		1220345	1					
ANR	1220501	ExpressionStatement	sign = - 1	2656:8:56647:56656	1220345	1	True				
ANR	1220502	AssignmentExpression	sign = - 1		1220345	0		=			
ANR	1220503	Identifier	sign		1220345	0					
ANR	1220504	UnaryOperationExpression	- 1		1220345	1					
ANR	1220505	UnaryOperator	-		1220345	0					
ANR	1220506	PrimaryExpression	1		1220345	1					
ANR	1220507	ExpressionStatement	pnum_head = p	2657:8:56666:56679	1220345	2	True				
ANR	1220508	AssignmentExpression	pnum_head = p		1220345	0		=			
ANR	1220509	Identifier	pnum_head		1220345	0					
ANR	1220510	Identifier	p		1220345	1					
ANR	1220511	ElseStatement	else		1220345	0					
ANR	1220512	CompoundStatement		41:11:746:746	1220345	0					
ANR	1220513	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2660:8:56710:56740	1220345	0	True				
ANR	1220514	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		1220345	0		=			
ANR	1220515	Identifier	r		1220345	0					
ANR	1220516	Identifier	ONIGERR_INVALID_GROUP_NAME		1220345	1					
ANR	1220517	ExpressionStatement	is_num = 0	2661:8:56750:56760	1220345	1	True				
ANR	1220518	AssignmentExpression	is_num = 0		1220345	0		=			
ANR	1220519	Identifier	is_num		1220345	0					
ANR	1220520	PrimaryExpression	0		1220345	1					
ANR	1220521	ElseStatement	else		1220345	0					
ANR	1220522	IfStatement	"if ( ! ONIGENC_IS_CODE_WORD ( enc , c ) )"		1220345	0					
ANR	1220523	Condition	"! ONIGENC_IS_CODE_WORD ( enc , c )"	2664:13:56789:56817	1220345	0	True				
ANR	1220524	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( enc , c )"		1220345	0					
ANR	1220525	UnaryOperator	!		1220345	0					
ANR	1220526	CallExpression	"ONIGENC_IS_CODE_WORD ( enc , c )"		1220345	1					
ANR	1220527	Callee	ONIGENC_IS_CODE_WORD		1220345	0					
ANR	1220528	Identifier	ONIGENC_IS_CODE_WORD		1220345	0					
ANR	1220529	ArgumentList	enc		1220345	1					
ANR	1220530	Argument	enc		1220345	0					
ANR	1220531	Identifier	enc		1220345	0					
ANR	1220532	Argument	c		1220345	1					
ANR	1220533	Identifier	c		1220345	0					
ANR	1220534	CompoundStatement		46:44:866:866	1220345	1					
ANR	1220535	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2665:6:56828:56866	1220345	0	True				
ANR	1220536	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		1220345	0		=			
ANR	1220537	Identifier	r		1220345	0					
ANR	1220538	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		1220345	1					
ANR	1220539	IfStatement	if ( r == 0 )		1220345	15					
ANR	1220540	Condition	r == 0	2669:6:56885:56890	1220345	0	True				
ANR	1220541	EqualityExpression	r == 0		1220345	0		==			
ANR	1220542	Identifier	r		1220345	0					
ANR	1220543	PrimaryExpression	0		1220345	1					
ANR	1220544	CompoundStatement		51:14:939:939	1220345	1					
ANR	1220545	WhileStatement	while ( ! PEND )		1220345	0					
ANR	1220546	Condition	! PEND	2670:11:56906:56910	1220345	0	True				
ANR	1220547	UnaryOperationExpression	! PEND		1220345	0					
ANR	1220548	UnaryOperator	!		1220345	0					
ANR	1220549	Identifier	PEND		1220345	1					
ANR	1220550	CompoundStatement		52:18:959:959	1220345	1					
ANR	1220551	ExpressionStatement	name_end = p	2671:6:56921:56933	1220345	0	True				
ANR	1220552	AssignmentExpression	name_end = p		1220345	0		=			
ANR	1220553	Identifier	name_end		1220345	0					
ANR	1220554	Identifier	p		1220345	1					
ANR	1220555	ExpressionStatement	PFETCH_S ( c )	2672:6:56941:56952	1220345	1	True				
ANR	1220556	CallExpression	PFETCH_S ( c )		1220345	0					
ANR	1220557	Callee	PFETCH_S		1220345	0					
ANR	1220558	Identifier	PFETCH_S		1220345	0					
ANR	1220559	ArgumentList	c		1220345	1					
ANR	1220560	Argument	c		1220345	0					
ANR	1220561	Identifier	c		1220345	0					
ANR	1220562	IfStatement	if ( c == end_code || c == ')' )		1220345	2					
ANR	1220563	Condition	c == end_code || c == ')'	2673:10:56964:56988	1220345	0	True				
ANR	1220564	OrExpression	c == end_code || c == ')'		1220345	0		||			
ANR	1220565	EqualityExpression	c == end_code		1220345	0		==			
ANR	1220566	Identifier	c		1220345	0					
ANR	1220567	Identifier	end_code		1220345	1					
ANR	1220568	EqualityExpression	c == ')'		1220345	1		==			
ANR	1220569	Identifier	c		1220345	0					
ANR	1220570	PrimaryExpression	')'		1220345	1					
ANR	1220571	CompoundStatement		55:37:1037:1037	1220345	1					
ANR	1220572	IfStatement	if ( is_num == 2 )		1220345	0					
ANR	1220573	Condition	is_num == 2	2674:12:57005:57015	1220345	0	True				
ANR	1220574	EqualityExpression	is_num == 2		1220345	0		==			
ANR	1220575	Identifier	is_num		1220345	0					
ANR	1220576	PrimaryExpression	2		1220345	1					
ANR	1220577	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2674:26:57019:57049	1220345	1	True				
ANR	1220578	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		1220345	0		=			
ANR	1220579	Identifier	r		1220345	0					
ANR	1220580	Identifier	ONIGERR_INVALID_GROUP_NAME		1220345	1					
ANR	1220581	BreakStatement	break ;	2675:8:57059:57064	1220345	1	True				
ANR	1220582	IfStatement	if ( is_num != 0 )		1220345	3					
ANR	1220583	Condition	is_num != 0	2678:10:57085:57095	1220345	0	True				
ANR	1220584	EqualityExpression	is_num != 0		1220345	0		!=			
ANR	1220585	Identifier	is_num		1220345	0					
ANR	1220586	PrimaryExpression	0		1220345	1					
ANR	1220587	CompoundStatement		60:23:1144:1144	1220345	1					
ANR	1220588	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		1220345	0					
ANR	1220589	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c )"	2679:12:57112:57140	1220345	0	True				
ANR	1220590	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		1220345	0					
ANR	1220591	Callee	ONIGENC_IS_CODE_DIGIT		1220345	0					
ANR	1220592	Identifier	ONIGENC_IS_CODE_DIGIT		1220345	0					
ANR	1220593	ArgumentList	enc		1220345	1					
ANR	1220594	Argument	enc		1220345	0					
ANR	1220595	Identifier	enc		1220345	0					
ANR	1220596	Argument	c		1220345	1					
ANR	1220597	Identifier	c		1220345	0					
ANR	1220598	CompoundStatement		61:43:1189:1189	1220345	1					
ANR	1220599	ExpressionStatement	is_num = 1	2680:10:57155:57165	1220345	0	True				
ANR	1220600	AssignmentExpression	is_num = 1		1220345	0		=			
ANR	1220601	Identifier	is_num		1220345	0					
ANR	1220602	PrimaryExpression	1		1220345	1					
ANR	1220603	ElseStatement	else		1220345	0					
ANR	1220604	CompoundStatement		64:13:1236:1236	1220345	0					
ANR	1220605	IfStatement	"if ( ! ONIGENC_IS_CODE_WORD ( enc , c ) )"		1220345	0					
ANR	1220606	Condition	"! ONIGENC_IS_CODE_WORD ( enc , c )"	2683:14:57206:57234	1220345	0	True				
ANR	1220607	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( enc , c )"		1220345	0					
ANR	1220608	UnaryOperator	!		1220345	0					
ANR	1220609	CallExpression	"ONIGENC_IS_CODE_WORD ( enc , c )"		1220345	1					
ANR	1220610	Callee	ONIGENC_IS_CODE_WORD		1220345	0					
ANR	1220611	Identifier	ONIGENC_IS_CODE_WORD		1220345	0					
ANR	1220612	ArgumentList	enc		1220345	1					
ANR	1220613	Argument	enc		1220345	0					
ANR	1220614	Identifier	enc		1220345	0					
ANR	1220615	Argument	c		1220345	1					
ANR	1220616	Identifier	c		1220345	0					
ANR	1220617	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2684:12:57249:57287	1220345	1	True				
ANR	1220618	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		1220345	0		=			
ANR	1220619	Identifier	r		1220345	0					
ANR	1220620	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		1220345	1					
ANR	1220621	ElseStatement	else		1220345	0					
ANR	1220622	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2686:12:57316:57346	1220345	0	True				
ANR	1220623	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		1220345	0		=			
ANR	1220624	Identifier	r		1220345	0					
ANR	1220625	Identifier	ONIGERR_INVALID_GROUP_NAME		1220345	1					
ANR	1220626	ExpressionStatement	is_num = 0	2687:10:57358:57368	1220345	1	True				
ANR	1220627	AssignmentExpression	is_num = 0		1220345	0		=			
ANR	1220628	Identifier	is_num		1220345	0					
ANR	1220629	PrimaryExpression	0		1220345	1					
ANR	1220630	ElseStatement	else		1220345	0					
ANR	1220631	CompoundStatement		72:11:1445:1445	1220345	0					
ANR	1220632	IfStatement	"if ( ! ONIGENC_IS_CODE_WORD ( enc , c ) )"		1220345	0					
ANR	1220633	Condition	"! ONIGENC_IS_CODE_WORD ( enc , c )"	2691:12:57413:57441	1220345	0	True				
ANR	1220634	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( enc , c )"		1220345	0					
ANR	1220635	UnaryOperator	!		1220345	0					
ANR	1220636	CallExpression	"ONIGENC_IS_CODE_WORD ( enc , c )"		1220345	1					
ANR	1220637	Callee	ONIGENC_IS_CODE_WORD		1220345	0					
ANR	1220638	Identifier	ONIGENC_IS_CODE_WORD		1220345	0					
ANR	1220639	ArgumentList	enc		1220345	1					
ANR	1220640	Argument	enc		1220345	0					
ANR	1220641	Identifier	enc		1220345	0					
ANR	1220642	Argument	c		1220345	1					
ANR	1220643	Identifier	c		1220345	0					
ANR	1220644	CompoundStatement		73:43:1490:1490	1220345	1					
ANR	1220645	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2692:10:57456:57494	1220345	0	True				
ANR	1220646	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		1220345	0		=			
ANR	1220647	Identifier	r		1220345	0					
ANR	1220648	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		1220345	1					
ANR	1220649	IfStatement	if ( c != end_code )		1220345	1					
ANR	1220650	Condition	c != end_code	2697:8:57529:57541	1220345	0	True				
ANR	1220651	EqualityExpression	c != end_code		1220345	0		!=			
ANR	1220652	Identifier	c		1220345	0					
ANR	1220653	Identifier	end_code		1220345	1					
ANR	1220654	CompoundStatement		79:23:1590:1590	1220345	1					
ANR	1220655	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2698:6:57552:57582	1220345	0	True				
ANR	1220656	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		1220345	0		=			
ANR	1220657	Identifier	r		1220345	0					
ANR	1220658	Identifier	ONIGERR_INVALID_GROUP_NAME		1220345	1					
ANR	1220659	ExpressionStatement	name_end = end	2699:6:57590:57604	1220345	1	True				
ANR	1220660	AssignmentExpression	name_end = end		1220345	0		=			
ANR	1220661	Identifier	name_end		1220345	0					
ANR	1220662	Identifier	end		1220345	1					
ANR	1220663	IfStatement	if ( is_num != 0 )		1220345	2					
ANR	1220664	Condition	is_num != 0	2702:8:57621:57631	1220345	0	True				
ANR	1220665	EqualityExpression	is_num != 0		1220345	0		!=			
ANR	1220666	Identifier	is_num		1220345	0					
ANR	1220667	PrimaryExpression	0		1220345	1					
ANR	1220668	CompoundStatement		84:21:1680:1680	1220345	1					
ANR	1220669	ExpressionStatement	"* rback_num = onig_scan_unsigned_number ( & pnum_head , name_end , enc )"	2703:6:57642:57707	1220345	0	True				
ANR	1220670	AssignmentExpression	"* rback_num = onig_scan_unsigned_number ( & pnum_head , name_end , enc )"		1220345	0		=			
ANR	1220671	UnaryOperationExpression	* rback_num		1220345	0					
ANR	1220672	UnaryOperator	*		1220345	0					
ANR	1220673	Identifier	rback_num		1220345	1					
ANR	1220674	CallExpression	"onig_scan_unsigned_number ( & pnum_head , name_end , enc )"		1220345	1					
ANR	1220675	Callee	onig_scan_unsigned_number		1220345	0					
ANR	1220676	Identifier	onig_scan_unsigned_number		1220345	0					
ANR	1220677	ArgumentList	& pnum_head		1220345	1					
ANR	1220678	Argument	& pnum_head		1220345	0					
ANR	1220679	UnaryOperationExpression	& pnum_head		1220345	0					
ANR	1220680	UnaryOperator	&		1220345	0					
ANR	1220681	Identifier	pnum_head		1220345	1					
ANR	1220682	Argument	name_end		1220345	1					
ANR	1220683	Identifier	name_end		1220345	0					
ANR	1220684	Argument	enc		1220345	2					
ANR	1220685	Identifier	enc		1220345	0					
ANR	1220686	IfStatement	if ( * rback_num < 0 )		1220345	1					
ANR	1220687	Condition	* rback_num < 0	2704:10:57719:57732	1220345	0	True				
ANR	1220688	RelationalExpression	* rback_num < 0		1220345	0		<			
ANR	1220689	UnaryOperationExpression	* rback_num		1220345	0					
ANR	1220690	UnaryOperator	*		1220345	0					
ANR	1220691	Identifier	rback_num		1220345	1					
ANR	1220692	PrimaryExpression	0		1220345	1					
ANR	1220693	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	2704:26:57735:57764	1220345	1	True				
ANR	1220694	Identifier	ONIGERR_TOO_BIG_NUMBER		1220345	0					
ANR	1220695	ElseStatement	else		1220345	0					
ANR	1220696	IfStatement	if ( * rback_num == 0 )		1220345	0					
ANR	1220697	Condition	* rback_num == 0	2705:15:57781:57795	1220345	0	True				
ANR	1220698	EqualityExpression	* rback_num == 0		1220345	0		==			
ANR	1220699	UnaryOperationExpression	* rback_num		1220345	0					
ANR	1220700	UnaryOperator	*		1220345	0					
ANR	1220701	Identifier	rback_num		1220345	1					
ANR	1220702	PrimaryExpression	0		1220345	1					
ANR	1220703	CompoundStatement		87:32:1844:1844	1220345	1					
ANR	1220704	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2706:8:57808:57838	1220345	0	True				
ANR	1220705	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		1220345	0		=			
ANR	1220706	Identifier	r		1220345	0					
ANR	1220707	Identifier	ONIGERR_INVALID_GROUP_NAME		1220345	1					
ANR	1220708	GotoStatement	goto err ;	2707:8:57848:57856	1220345	1	True				
ANR	1220709	Identifier	err		1220345	0					
ANR	1220710	ExpressionStatement	* rback_num *= sign	2710:6:57873:57891	1220345	2	True				
ANR	1220711	AssignmentExpression	* rback_num *= sign		1220345	0		*=			
ANR	1220712	UnaryOperationExpression	* rback_num		1220345	0					
ANR	1220713	UnaryOperator	*		1220345	0					
ANR	1220714	Identifier	rback_num		1220345	1					
ANR	1220715	Identifier	sign		1220345	1					
ANR	1220716	ExpressionStatement	* rname_end = name_end	2713:4:57904:57925	1220345	3	True				
ANR	1220717	AssignmentExpression	* rname_end = name_end		1220345	0		=			
ANR	1220718	UnaryOperationExpression	* rname_end		1220345	0					
ANR	1220719	UnaryOperator	*		1220345	0					
ANR	1220720	Identifier	rname_end		1220345	1					
ANR	1220721	Identifier	name_end		1220345	1					
ANR	1220722	ExpressionStatement	* src = p	2714:4:57931:57939	1220345	4	True				
ANR	1220723	AssignmentExpression	* src = p		1220345	0		=			
ANR	1220724	UnaryOperationExpression	* src		1220345	0					
ANR	1220725	UnaryOperator	*		1220345	0					
ANR	1220726	Identifier	src		1220345	1					
ANR	1220727	Identifier	p		1220345	1					
ANR	1220728	ReturnStatement	return 0 ;	2715:4:57945:57953	1220345	5	True				
ANR	1220729	PrimaryExpression	0		1220345	0					
ANR	1220730	ElseStatement	else		1220345	0					
ANR	1220731	CompoundStatement		99:7:2012:2012	1220345	0					
ANR	1220732	WhileStatement	while ( ! PEND )		1220345	0					
ANR	1220733	Condition	! PEND	2718:11:57979:57983	1220345	0	True				
ANR	1220734	UnaryOperationExpression	! PEND		1220345	0					
ANR	1220735	UnaryOperator	!		1220345	0					
ANR	1220736	Identifier	PEND		1220345	1					
ANR	1220737	CompoundStatement		100:18:2032:2032	1220345	1					
ANR	1220738	ExpressionStatement	name_end = p	2719:6:57994:58006	1220345	0	True				
ANR	1220739	AssignmentExpression	name_end = p		1220345	0		=			
ANR	1220740	Identifier	name_end		1220345	0					
ANR	1220741	Identifier	p		1220345	1					
ANR	1220742	ExpressionStatement	PFETCH_S ( c )	2720:6:58014:58025	1220345	1	True				
ANR	1220743	CallExpression	PFETCH_S ( c )		1220345	0					
ANR	1220744	Callee	PFETCH_S		1220345	0					
ANR	1220745	Identifier	PFETCH_S		1220345	0					
ANR	1220746	ArgumentList	c		1220345	1					
ANR	1220747	Argument	c		1220345	0					
ANR	1220748	Identifier	c		1220345	0					
ANR	1220749	IfStatement	if ( c == end_code || c == ')' )		1220345	2					
ANR	1220750	Condition	c == end_code || c == ')'	2721:10:58037:58061	1220345	0	True				
ANR	1220751	OrExpression	c == end_code || c == ')'		1220345	0		||			
ANR	1220752	EqualityExpression	c == end_code		1220345	0		==			
ANR	1220753	Identifier	c		1220345	0					
ANR	1220754	Identifier	end_code		1220345	1					
ANR	1220755	EqualityExpression	c == ')'		1220345	1		==			
ANR	1220756	Identifier	c		1220345	0					
ANR	1220757	PrimaryExpression	')'		1220345	1					
ANR	1220758	BreakStatement	break ;	2722:8:58072:58077	1220345	1	True				
ANR	1220759	IfStatement	if ( PEND )		1220345	1					
ANR	1220760	Condition	PEND	2724:8:58093:58096	1220345	0	True				
ANR	1220761	Identifier	PEND		1220345	0					
ANR	1220762	ExpressionStatement	name_end = end	2725:6:58105:58119	1220345	1	True				
ANR	1220763	AssignmentExpression	name_end = end		1220345	0		=			
ANR	1220764	Identifier	name_end		1220345	0					
ANR	1220765	Identifier	end		1220345	1					
ANR	1220766	Label	err :	2727:2:58124:58127	1220345	2	True				
ANR	1220767	Identifier	err		1220345	0					
ANR	1220768	ExpressionStatement	"onig_scan_env_set_error_string ( env , r , * src , name_end )"	2728:4:58133:58187	1220345	3	True				
ANR	1220769	CallExpression	"onig_scan_env_set_error_string ( env , r , * src , name_end )"		1220345	0					
ANR	1220770	Callee	onig_scan_env_set_error_string		1220345	0					
ANR	1220771	Identifier	onig_scan_env_set_error_string		1220345	0					
ANR	1220772	ArgumentList	env		1220345	1					
ANR	1220773	Argument	env		1220345	0					
ANR	1220774	Identifier	env		1220345	0					
ANR	1220775	Argument	r		1220345	1					
ANR	1220776	Identifier	r		1220345	0					
ANR	1220777	Argument	* src		1220345	2					
ANR	1220778	UnaryOperationExpression	* src		1220345	0					
ANR	1220779	UnaryOperator	*		1220345	0					
ANR	1220780	Identifier	src		1220345	1					
ANR	1220781	Argument	name_end		1220345	3					
ANR	1220782	Identifier	name_end		1220345	0					
ANR	1220783	ReturnStatement	return r ;	2729:4:58193:58201	1220345	4	True				
ANR	1220784	Identifier	r		1220345	0					
ANR	1220785	ReturnType	static int		1220345	1					
ANR	1220786	Identifier	fetch_name		1220345	2					
ANR	1220787	ParameterList	"OnigCodePoint start_code , UChar * * src , UChar * end , UChar * * rname_end , ScanEnv * env , int * rback_num , int ref"		1220345	3					
ANR	1220788	Parameter	OnigCodePoint start_code	2617:11:55840:55863	1220345	0	True				
ANR	1220789	ParameterType	OnigCodePoint		1220345	0					
ANR	1220790	Identifier	start_code		1220345	1					
ANR	1220791	Parameter	UChar * * src	2617:37:55866:55876	1220345	1	True				
ANR	1220792	ParameterType	UChar * *		1220345	0					
ANR	1220793	Identifier	src		1220345	1					
ANR	1220794	Parameter	UChar * end	2617:50:55879:55888	1220345	2	True				
ANR	1220795	ParameterType	UChar *		1220345	0					
ANR	1220796	Identifier	end		1220345	1					
ANR	1220797	Parameter	UChar * * rname_end	2618:4:55895:55911	1220345	3	True				
ANR	1220798	ParameterType	UChar * *		1220345	0					
ANR	1220799	Identifier	rname_end		1220345	1					
ANR	1220800	Parameter	ScanEnv * env	2618:23:55914:55925	1220345	4	True				
ANR	1220801	ParameterType	ScanEnv *		1220345	0					
ANR	1220802	Identifier	env		1220345	1					
ANR	1220803	Parameter	int * rback_num	2618:37:55928:55941	1220345	5	True				
ANR	1220804	ParameterType	int *		1220345	0					
ANR	1220805	Identifier	rback_num		1220345	1					
ANR	1220806	Parameter	int ref	2618:53:55944:55950	1220345	6	True				
ANR	1220807	ParameterType	int		1220345	0					
ANR	1220808	Identifier	ref		1220345	1					
ANR	1220809	CFGEntryNode	ENTRY		1220345		True				
ANR	1220810	CFGExitNode	EXIT		1220345		True				
ANR	1220811	Symbol	ONIGERR_EMPTY_GROUP_NAME		1220345						
ANR	1220812	Symbol	end_code		1220345						
ANR	1220813	Symbol	* rname_end		1220345						
ANR	1220814	Symbol	ONIGENC_IS_CODE_DIGIT		1220345						
ANR	1220815	Symbol	sign		1220345						
ANR	1220816	Symbol	rback_num		1220345						
ANR	1220817	Symbol	env -> enc		1220345						
ANR	1220818	Symbol	ONIGERR_INVALID_GROUP_NAME		1220345						
ANR	1220819	Symbol	ONIGENC_IS_CODE_WORD		1220345						
ANR	1220820	Symbol	onig_scan_unsigned_number		1220345						
ANR	1220821	Symbol	* src		1220345						
ANR	1220822	Symbol	PEND		1220345						
ANR	1220823	Symbol	ref		1220345						
ANR	1220824	Symbol	& pnum_head		1220345						
ANR	1220825	Symbol	end		1220345						
ANR	1220826	Symbol	enc		1220345						
ANR	1220827	Symbol	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		1220345						
ANR	1220828	Symbol	start_code		1220345						
ANR	1220829	Symbol	name_end		1220345						
ANR	1220830	Symbol	is_num		1220345						
ANR	1220831	Symbol	c		1220345						
ANR	1220832	Symbol	ONIGERR_TOO_BIG_NUMBER		1220345						
ANR	1220833	Symbol	src		1220345						
ANR	1220834	Symbol	* env		1220345						
ANR	1220835	Symbol	rname_end		1220345						
ANR	1220836	Symbol	get_name_end_code_point		1220345						
ANR	1220837	Symbol	env		1220345						
ANR	1220838	Symbol	p		1220345						
ANR	1220839	Symbol	r		1220345						
ANR	1220840	Symbol	* rback_num		1220345						
ANR	1220841	Symbol	pnum_head		1220345						
ANR	1220842	Function	fetch_name	2733:0:58215:59740							
ANR	1220843	FunctionDef	"fetch_name (OnigCodePoint start_code , UChar * * src , UChar * end , UChar * * rname_end , ScanEnv * env , int * rback_num , int ref)"		1220842	0					
ANR	1220844	CompoundStatement		2736:0:58350:59740	1220842	0					
ANR	1220845	IdentifierDeclStatement	"int r , is_num , sign ;"	2737:2:58354:58373	1220842	0	True				
ANR	1220846	IdentifierDecl	r		1220842	0					
ANR	1220847	IdentifierDeclType	int		1220842	0					
ANR	1220848	Identifier	r		1220842	1					
ANR	1220849	IdentifierDecl	is_num		1220842	1					
ANR	1220850	IdentifierDeclType	int		1220842	0					
ANR	1220851	Identifier	is_num		1220842	1					
ANR	1220852	IdentifierDecl	sign		1220842	2					
ANR	1220853	IdentifierDeclType	int		1220842	0					
ANR	1220854	Identifier	sign		1220842	1					
ANR	1220855	IdentifierDeclStatement	OnigCodePoint end_code ;	2738:2:58377:58399	1220842	1	True				
ANR	1220856	IdentifierDecl	end_code		1220842	0					
ANR	1220857	IdentifierDeclType	OnigCodePoint		1220842	0					
ANR	1220858	Identifier	end_code		1220842	1					
ANR	1220859	IdentifierDeclStatement	OnigCodePoint c = 0 ;	2739:2:58403:58422	1220842	2	True				
ANR	1220860	IdentifierDecl	c = 0		1220842	0					
ANR	1220861	IdentifierDeclType	OnigCodePoint		1220842	0					
ANR	1220862	Identifier	c		1220842	1					
ANR	1220863	AssignmentExpression	c = 0		1220842	2		=			
ANR	1220864	Identifier	c		1220842	0					
ANR	1220865	PrimaryExpression	0		1220842	1					
ANR	1220866	IdentifierDeclStatement	UChar * name_end ;	2740:2:58426:58441	1220842	3	True				
ANR	1220867	IdentifierDecl	* name_end		1220842	0					
ANR	1220868	IdentifierDeclType	UChar *		1220842	0					
ANR	1220869	Identifier	name_end		1220842	1					
ANR	1220870	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	2741:2:58445:58472	1220842	4	True				
ANR	1220871	IdentifierDecl	enc = env -> enc		1220842	0					
ANR	1220872	IdentifierDeclType	OnigEncoding		1220842	0					
ANR	1220873	Identifier	enc		1220842	1					
ANR	1220874	AssignmentExpression	enc = env -> enc		1220842	2		=			
ANR	1220875	Identifier	enc		1220842	0					
ANR	1220876	PtrMemberAccess	env -> enc		1220842	1					
ANR	1220877	Identifier	env		1220842	0					
ANR	1220878	Identifier	enc		1220842	1					
ANR	1220879	IdentifierDeclStatement	UChar * pnum_head ;	2742:2:58476:58492	1220842	5	True				
ANR	1220880	IdentifierDecl	* pnum_head		1220842	0					
ANR	1220881	IdentifierDeclType	UChar *		1220842	0					
ANR	1220882	Identifier	pnum_head		1220842	1					
ANR	1220883	IdentifierDeclStatement	UChar * p = * src ;	2743:2:58496:58511	1220842	6	True				
ANR	1220884	IdentifierDecl	* p = * src		1220842	0					
ANR	1220885	IdentifierDeclType	UChar *		1220842	0					
ANR	1220886	Identifier	p		1220842	1					
ANR	1220887	AssignmentExpression	* p = * src		1220842	2		=			
ANR	1220888	Identifier	p		1220842	0					
ANR	1220889	UnaryOperationExpression	* src		1220842	1					
ANR	1220890	UnaryOperator	*		1220842	0					
ANR	1220891	Identifier	src		1220842	1					
ANR	1220892	ExpressionStatement	PFETCH_READY	2744:2:58515:58527	1220842	7	True				
ANR	1220893	Identifier	PFETCH_READY		1220842	0					
ANR	1220894	ExpressionStatement	* rback_num = 0	2746:2:58532:58546	1220842	8	True				
ANR	1220895	AssignmentExpression	* rback_num = 0		1220842	0		=			
ANR	1220896	UnaryOperationExpression	* rback_num		1220842	0					
ANR	1220897	UnaryOperator	*		1220842	0					
ANR	1220898	Identifier	rback_num		1220842	1					
ANR	1220899	PrimaryExpression	0		1220842	1					
ANR	1220900	ExpressionStatement	end_code = get_name_end_code_point ( start_code )	2748:2:58551:58597	1220842	9	True				
ANR	1220901	AssignmentExpression	end_code = get_name_end_code_point ( start_code )		1220842	0		=			
ANR	1220902	Identifier	end_code		1220842	0					
ANR	1220903	CallExpression	get_name_end_code_point ( start_code )		1220842	1					
ANR	1220904	Callee	get_name_end_code_point		1220842	0					
ANR	1220905	Identifier	get_name_end_code_point		1220842	0					
ANR	1220906	ArgumentList	start_code		1220842	1					
ANR	1220907	Argument	start_code		1220842	0					
ANR	1220908	Identifier	start_code		1220842	0					
ANR	1220909	ExpressionStatement	* rname_end = name_end = end	2750:2:58602:58629	1220842	10	True				
ANR	1220910	AssignmentExpression	* rname_end = name_end = end		1220842	0		=			
ANR	1220911	UnaryOperationExpression	* rname_end		1220842	0					
ANR	1220912	UnaryOperator	*		1220842	0					
ANR	1220913	Identifier	rname_end		1220842	1					
ANR	1220914	AssignmentExpression	name_end = end		1220842	1		=			
ANR	1220915	Identifier	name_end		1220842	0					
ANR	1220916	Identifier	end		1220842	1					
ANR	1220917	ExpressionStatement	r = 0	2751:2:58633:58638	1220842	11	True				
ANR	1220918	AssignmentExpression	r = 0		1220842	0		=			
ANR	1220919	Identifier	r		1220842	0					
ANR	1220920	PrimaryExpression	0		1220842	1					
ANR	1220921	ExpressionStatement	pnum_head = * src	2752:2:58642:58658	1220842	12	True				
ANR	1220922	AssignmentExpression	pnum_head = * src		1220842	0		=			
ANR	1220923	Identifier	pnum_head		1220842	0					
ANR	1220924	UnaryOperationExpression	* src		1220842	1					
ANR	1220925	UnaryOperator	*		1220842	0					
ANR	1220926	Identifier	src		1220842	1					
ANR	1220927	ExpressionStatement	is_num = 0	2753:2:58662:58672	1220842	13	True				
ANR	1220928	AssignmentExpression	is_num = 0		1220842	0		=			
ANR	1220929	Identifier	is_num		1220842	0					
ANR	1220930	PrimaryExpression	0		1220842	1					
ANR	1220931	ExpressionStatement	sign = 1	2754:2:58676:58684	1220842	14	True				
ANR	1220932	AssignmentExpression	sign = 1		1220842	0		=			
ANR	1220933	Identifier	sign		1220842	0					
ANR	1220934	PrimaryExpression	1		1220842	1					
ANR	1220935	IfStatement	if ( PEND )		1220842	15					
ANR	1220936	Condition	PEND	2756:6:58693:58696	1220842	0	True				
ANR	1220937	Identifier	PEND		1220842	0					
ANR	1220938	CompoundStatement		21:12:348:348	1220842	1					
ANR	1220939	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	2757:4:58705:58736	1220842	0	True				
ANR	1220940	Identifier	ONIGERR_EMPTY_GROUP_NAME		1220842	0					
ANR	1220941	ElseStatement	else		1220842	0					
ANR	1220942	CompoundStatement		24:7:398:398	1220842	0					
ANR	1220943	ExpressionStatement	PFETCH ( c )	2760:4:58755:58764	1220842	0	True				
ANR	1220944	CallExpression	PFETCH ( c )		1220842	0					
ANR	1220945	Callee	PFETCH		1220842	0					
ANR	1220946	Identifier	PFETCH		1220842	0					
ANR	1220947	ArgumentList	c		1220842	1					
ANR	1220948	Argument	c		1220842	0					
ANR	1220949	Identifier	c		1220842	0					
ANR	1220950	IfStatement	if ( c == end_code )		1220842	1					
ANR	1220951	Condition	c == end_code	2761:8:58774:58786	1220842	0	True				
ANR	1220952	EqualityExpression	c == end_code		1220842	0		==			
ANR	1220953	Identifier	c		1220842	0					
ANR	1220954	Identifier	end_code		1220842	1					
ANR	1220955	ReturnStatement	return ONIGERR_EMPTY_GROUP_NAME ;	2762:6:58795:58826	1220842	1	True				
ANR	1220956	Identifier	ONIGERR_EMPTY_GROUP_NAME		1220842	0					
ANR	1220957	IfStatement	"if ( ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		1220842	2					
ANR	1220958	Condition	"ONIGENC_IS_CODE_DIGIT ( enc , c )"	2764:8:58837:58865	1220842	0	True				
ANR	1220959	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		1220842	0					
ANR	1220960	Callee	ONIGENC_IS_CODE_DIGIT		1220842	0					
ANR	1220961	Identifier	ONIGENC_IS_CODE_DIGIT		1220842	0					
ANR	1220962	ArgumentList	enc		1220842	1					
ANR	1220963	Argument	enc		1220842	0					
ANR	1220964	Identifier	enc		1220842	0					
ANR	1220965	Argument	c		1220842	1					
ANR	1220966	Identifier	c		1220842	0					
ANR	1220967	CompoundStatement		29:39:517:517	1220842	1					
ANR	1220968	ExpressionStatement	is_num = 1	2765:6:58876:58886	1220842	0	True				
ANR	1220969	AssignmentExpression	is_num = 1		1220842	0		=			
ANR	1220970	Identifier	is_num		1220842	0					
ANR	1220971	PrimaryExpression	1		1220842	1					
ANR	1220972	ElseStatement	else		1220842	0					
ANR	1220973	IfStatement	if ( c == '-' )		1220842	0					
ANR	1220974	Condition	c == '-'	2767:13:58907:58914	1220842	0	True				
ANR	1220975	EqualityExpression	c == '-'		1220842	0		==			
ANR	1220976	Identifier	c		1220842	0					
ANR	1220977	PrimaryExpression	'-'		1220842	1					
ANR	1220978	CompoundStatement		32:23:566:566	1220842	1					
ANR	1220979	ExpressionStatement	is_num = 2	2768:6:58925:58935	1220842	0	True				
ANR	1220980	AssignmentExpression	is_num = 2		1220842	0		=			
ANR	1220981	Identifier	is_num		1220842	0					
ANR	1220982	PrimaryExpression	2		1220842	1					
ANR	1220983	ExpressionStatement	sign = - 1	2769:6:58943:58952	1220842	1	True				
ANR	1220984	AssignmentExpression	sign = - 1		1220842	0		=			
ANR	1220985	Identifier	sign		1220842	0					
ANR	1220986	UnaryOperationExpression	- 1		1220842	1					
ANR	1220987	UnaryOperator	-		1220842	0					
ANR	1220988	PrimaryExpression	1		1220842	1					
ANR	1220989	ExpressionStatement	pnum_head = p	2770:6:58960:58973	1220842	2	True				
ANR	1220990	AssignmentExpression	pnum_head = p		1220842	0		=			
ANR	1220991	Identifier	pnum_head		1220842	0					
ANR	1220992	Identifier	p		1220842	1					
ANR	1220993	ElseStatement	else		1220842	0					
ANR	1220994	CompoundStatement		37:9:639:639	1220842	0					
ANR	1220995	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2773:6:58998:59036	1220842	0	True				
ANR	1220996	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		1220842	0		=			
ANR	1220997	Identifier	r		1220842	0					
ANR	1220998	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		1220842	1					
ANR	1220999	WhileStatement	while ( ! PEND )		1220842	16					
ANR	1221000	Condition	! PEND	2777:9:59058:59062	1220842	0	True				
ANR	1221001	UnaryOperationExpression	! PEND		1220842	0					
ANR	1221002	UnaryOperator	!		1220842	0					
ANR	1221003	Identifier	PEND		1220842	1					
ANR	1221004	CompoundStatement		42:16:714:714	1220842	1					
ANR	1221005	ExpressionStatement	name_end = p	2778:4:59071:59083	1220842	0	True				
ANR	1221006	AssignmentExpression	name_end = p		1220842	0		=			
ANR	1221007	Identifier	name_end		1220842	0					
ANR	1221008	Identifier	p		1220842	1					
ANR	1221009	ExpressionStatement	PFETCH ( c )	2780:4:59090:59099	1220842	1	True				
ANR	1221010	CallExpression	PFETCH ( c )		1220842	0					
ANR	1221011	Callee	PFETCH		1220842	0					
ANR	1221012	Identifier	PFETCH		1220842	0					
ANR	1221013	ArgumentList	c		1220842	1					
ANR	1221014	Argument	c		1220842	0					
ANR	1221015	Identifier	c		1220842	0					
ANR	1221016	IfStatement	if ( c == end_code || c == ')' )		1220842	2					
ANR	1221017	Condition	c == end_code || c == ')'	2781:8:59109:59133	1220842	0	True				
ANR	1221018	OrExpression	c == end_code || c == ')'		1220842	0		||			
ANR	1221019	EqualityExpression	c == end_code		1220842	0		==			
ANR	1221020	Identifier	c		1220842	0					
ANR	1221021	Identifier	end_code		1220842	1					
ANR	1221022	EqualityExpression	c == ')'		1220842	1		==			
ANR	1221023	Identifier	c		1220842	0					
ANR	1221024	PrimaryExpression	')'		1220842	1					
ANR	1221025	BreakStatement	break ;	2781:35:59136:59141	1220842	1	True				
ANR	1221026	IfStatement	"if ( ! ONIGENC_IS_CODE_DIGIT ( enc , c ) )"		1220842	3					
ANR	1221027	Condition	"! ONIGENC_IS_CODE_DIGIT ( enc , c )"	2782:8:59151:59181	1220842	0	True				
ANR	1221028	UnaryOperationExpression	"! ONIGENC_IS_CODE_DIGIT ( enc , c )"		1220842	0					
ANR	1221029	UnaryOperator	!		1220842	0					
ANR	1221030	CallExpression	"ONIGENC_IS_CODE_DIGIT ( enc , c )"		1220842	1					
ANR	1221031	Callee	ONIGENC_IS_CODE_DIGIT		1220842	0					
ANR	1221032	Identifier	ONIGENC_IS_CODE_DIGIT		1220842	0					
ANR	1221033	ArgumentList	enc		1220842	1					
ANR	1221034	Argument	enc		1220842	0					
ANR	1221035	Identifier	enc		1220842	0					
ANR	1221036	Argument	c		1220842	1					
ANR	1221037	Identifier	c		1220842	0					
ANR	1221038	ExpressionStatement	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME	2783:6:59190:59228	1220842	1	True				
ANR	1221039	AssignmentExpression	r = ONIGERR_INVALID_CHAR_IN_GROUP_NAME		1220842	0		=			
ANR	1221040	Identifier	r		1220842	0					
ANR	1221041	Identifier	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		1220842	1					
ANR	1221042	IfStatement	if ( r == 0 && c != end_code )		1220842	17					
ANR	1221043	Condition	r == 0 && c != end_code	2785:6:59240:59262	1220842	0	True				
ANR	1221044	AndExpression	r == 0 && c != end_code		1220842	0		&&			
ANR	1221045	EqualityExpression	r == 0		1220842	0		==			
ANR	1221046	Identifier	r		1220842	0					
ANR	1221047	PrimaryExpression	0		1220842	1					
ANR	1221048	EqualityExpression	c != end_code		1220842	1		!=			
ANR	1221049	Identifier	c		1220842	0					
ANR	1221050	Identifier	end_code		1220842	1					
ANR	1221051	CompoundStatement		50:31:914:914	1220842	1					
ANR	1221052	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2786:4:59271:59301	1220842	0	True				
ANR	1221053	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		1220842	0		=			
ANR	1221054	Identifier	r		1220842	0					
ANR	1221055	Identifier	ONIGERR_INVALID_GROUP_NAME		1220842	1					
ANR	1221056	ExpressionStatement	name_end = end	2787:4:59307:59321	1220842	1	True				
ANR	1221057	AssignmentExpression	name_end = end		1220842	0		=			
ANR	1221058	Identifier	name_end		1220842	0					
ANR	1221059	Identifier	end		1220842	1					
ANR	1221060	IfStatement	if ( r == 0 )		1220842	18					
ANR	1221061	Condition	r == 0	2790:6:59334:59339	1220842	0	True				
ANR	1221062	EqualityExpression	r == 0		1220842	0		==			
ANR	1221063	Identifier	r		1220842	0					
ANR	1221064	PrimaryExpression	0		1220842	1					
ANR	1221065	CompoundStatement		55:14:991:991	1220842	1					
ANR	1221066	ExpressionStatement	"* rback_num = onig_scan_unsigned_number ( & pnum_head , name_end , enc )"	2791:4:59348:59413	1220842	0	True				
ANR	1221067	AssignmentExpression	"* rback_num = onig_scan_unsigned_number ( & pnum_head , name_end , enc )"		1220842	0		=			
ANR	1221068	UnaryOperationExpression	* rback_num		1220842	0					
ANR	1221069	UnaryOperator	*		1220842	0					
ANR	1221070	Identifier	rback_num		1220842	1					
ANR	1221071	CallExpression	"onig_scan_unsigned_number ( & pnum_head , name_end , enc )"		1220842	1					
ANR	1221072	Callee	onig_scan_unsigned_number		1220842	0					
ANR	1221073	Identifier	onig_scan_unsigned_number		1220842	0					
ANR	1221074	ArgumentList	& pnum_head		1220842	1					
ANR	1221075	Argument	& pnum_head		1220842	0					
ANR	1221076	UnaryOperationExpression	& pnum_head		1220842	0					
ANR	1221077	UnaryOperator	&		1220842	0					
ANR	1221078	Identifier	pnum_head		1220842	1					
ANR	1221079	Argument	name_end		1220842	1					
ANR	1221080	Identifier	name_end		1220842	0					
ANR	1221081	Argument	enc		1220842	2					
ANR	1221082	Identifier	enc		1220842	0					
ANR	1221083	IfStatement	if ( * rback_num < 0 )		1220842	1					
ANR	1221084	Condition	* rback_num < 0	2792:8:59423:59436	1220842	0	True				
ANR	1221085	RelationalExpression	* rback_num < 0		1220842	0		<			
ANR	1221086	UnaryOperationExpression	* rback_num		1220842	0					
ANR	1221087	UnaryOperator	*		1220842	0					
ANR	1221088	Identifier	rback_num		1220842	1					
ANR	1221089	PrimaryExpression	0		1220842	1					
ANR	1221090	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	2792:24:59439:59468	1220842	1	True				
ANR	1221091	Identifier	ONIGERR_TOO_BIG_NUMBER		1220842	0					
ANR	1221092	ElseStatement	else		1220842	0					
ANR	1221093	IfStatement	if ( * rback_num == 0 )		1220842	0					
ANR	1221094	Condition	* rback_num == 0	2793:13:59483:59497	1220842	0	True				
ANR	1221095	EqualityExpression	* rback_num == 0		1220842	0		==			
ANR	1221096	UnaryOperationExpression	* rback_num		1220842	0					
ANR	1221097	UnaryOperator	*		1220842	0					
ANR	1221098	Identifier	rback_num		1220842	1					
ANR	1221099	PrimaryExpression	0		1220842	1					
ANR	1221100	CompoundStatement		58:30:1149:1149	1220842	1					
ANR	1221101	ExpressionStatement	r = ONIGERR_INVALID_GROUP_NAME	2794:6:59508:59538	1220842	0	True				
ANR	1221102	AssignmentExpression	r = ONIGERR_INVALID_GROUP_NAME		1220842	0		=			
ANR	1221103	Identifier	r		1220842	0					
ANR	1221104	Identifier	ONIGERR_INVALID_GROUP_NAME		1220842	1					
ANR	1221105	GotoStatement	goto err ;	2795:6:59546:59554	1220842	1	True				
ANR	1221106	Identifier	err		1220842	0					
ANR	1221107	ExpressionStatement	* rback_num *= sign	2797:4:59566:59584	1220842	2	True				
ANR	1221108	AssignmentExpression	* rback_num *= sign		1220842	0		*=			
ANR	1221109	UnaryOperationExpression	* rback_num		1220842	0					
ANR	1221110	UnaryOperator	*		1220842	0					
ANR	1221111	Identifier	rback_num		1220842	1					
ANR	1221112	Identifier	sign		1220842	1					
ANR	1221113	ExpressionStatement	* rname_end = name_end	2799:4:59591:59612	1220842	3	True				
ANR	1221114	AssignmentExpression	* rname_end = name_end		1220842	0		=			
ANR	1221115	UnaryOperationExpression	* rname_end		1220842	0					
ANR	1221116	UnaryOperator	*		1220842	0					
ANR	1221117	Identifier	rname_end		1220842	1					
ANR	1221118	Identifier	name_end		1220842	1					
ANR	1221119	ExpressionStatement	* src = p	2800:4:59618:59626	1220842	4	True				
ANR	1221120	AssignmentExpression	* src = p		1220842	0		=			
ANR	1221121	UnaryOperationExpression	* src		1220842	0					
ANR	1221122	UnaryOperator	*		1220842	0					
ANR	1221123	Identifier	src		1220842	1					
ANR	1221124	Identifier	p		1220842	1					
ANR	1221125	ReturnStatement	return 0 ;	2801:4:59632:59640	1220842	5	True				
ANR	1221126	PrimaryExpression	0		1220842	0					
ANR	1221127	ElseStatement	else		1220842	0					
ANR	1221128	CompoundStatement		68:7:1302:1302	1220842	0					
ANR	1221129	Label	err :	2804:2:59657:59660	1220842	0	True				
ANR	1221130	Identifier	err		1220842	0					
ANR	1221131	ExpressionStatement	"onig_scan_env_set_error_string ( env , r , * src , name_end )"	2805:4:59666:59720	1220842	1	True				
ANR	1221132	CallExpression	"onig_scan_env_set_error_string ( env , r , * src , name_end )"		1220842	0					
ANR	1221133	Callee	onig_scan_env_set_error_string		1220842	0					
ANR	1221134	Identifier	onig_scan_env_set_error_string		1220842	0					
ANR	1221135	ArgumentList	env		1220842	1					
ANR	1221136	Argument	env		1220842	0					
ANR	1221137	Identifier	env		1220842	0					
ANR	1221138	Argument	r		1220842	1					
ANR	1221139	Identifier	r		1220842	0					
ANR	1221140	Argument	* src		1220842	2					
ANR	1221141	UnaryOperationExpression	* src		1220842	0					
ANR	1221142	UnaryOperator	*		1220842	0					
ANR	1221143	Identifier	src		1220842	1					
ANR	1221144	Argument	name_end		1220842	3					
ANR	1221145	Identifier	name_end		1220842	0					
ANR	1221146	ReturnStatement	return r ;	2806:4:59726:59734	1220842	2	True				
ANR	1221147	Identifier	r		1220842	0					
ANR	1221148	ReturnType	static int		1220842	1					
ANR	1221149	Identifier	fetch_name		1220842	2					
ANR	1221150	ParameterList	"OnigCodePoint start_code , UChar * * src , UChar * end , UChar * * rname_end , ScanEnv * env , int * rback_num , int ref"		1220842	3					
ANR	1221151	Parameter	OnigCodePoint start_code	2734:11:58237:58260	1220842	0	True				
ANR	1221152	ParameterType	OnigCodePoint		1220842	0					
ANR	1221153	Identifier	start_code		1220842	1					
ANR	1221154	Parameter	UChar * * src	2734:37:58263:58273	1220842	1	True				
ANR	1221155	ParameterType	UChar * *		1220842	0					
ANR	1221156	Identifier	src		1220842	1					
ANR	1221157	Parameter	UChar * end	2734:50:58276:58285	1220842	2	True				
ANR	1221158	ParameterType	UChar *		1220842	0					
ANR	1221159	Identifier	end		1220842	1					
ANR	1221160	Parameter	UChar * * rname_end	2735:4:58292:58308	1220842	3	True				
ANR	1221161	ParameterType	UChar * *		1220842	0					
ANR	1221162	Identifier	rname_end		1220842	1					
ANR	1221163	Parameter	ScanEnv * env	2735:23:58311:58322	1220842	4	True				
ANR	1221164	ParameterType	ScanEnv *		1220842	0					
ANR	1221165	Identifier	env		1220842	1					
ANR	1221166	Parameter	int * rback_num	2735:37:58325:58338	1220842	5	True				
ANR	1221167	ParameterType	int *		1220842	0					
ANR	1221168	Identifier	rback_num		1220842	1					
ANR	1221169	Parameter	int ref	2735:53:58341:58347	1220842	6	True				
ANR	1221170	ParameterType	int		1220842	0					
ANR	1221171	Identifier	ref		1220842	1					
ANR	1221172	CFGEntryNode	ENTRY		1220842		True				
ANR	1221173	CFGExitNode	EXIT		1220842		True				
ANR	1221174	Symbol	ONIGERR_EMPTY_GROUP_NAME		1220842						
ANR	1221175	Symbol	end_code		1220842						
ANR	1221176	Symbol	* rname_end		1220842						
ANR	1221177	Symbol	ONIGENC_IS_CODE_DIGIT		1220842						
ANR	1221178	Symbol	sign		1220842						
ANR	1221179	Symbol	rback_num		1220842						
ANR	1221180	Symbol	env -> enc		1220842						
ANR	1221181	Symbol	ONIGERR_INVALID_GROUP_NAME		1220842						
ANR	1221182	Symbol	onig_scan_unsigned_number		1220842						
ANR	1221183	Symbol	* src		1220842						
ANR	1221184	Symbol	PEND		1220842						
ANR	1221185	Symbol	ref		1220842						
ANR	1221186	Symbol	& pnum_head		1220842						
ANR	1221187	Symbol	end		1220842						
ANR	1221188	Symbol	enc		1220842						
ANR	1221189	Symbol	ONIGERR_INVALID_CHAR_IN_GROUP_NAME		1220842						
ANR	1221190	Symbol	start_code		1220842						
ANR	1221191	Symbol	name_end		1220842						
ANR	1221192	Symbol	is_num		1220842						
ANR	1221193	Symbol	c		1220842						
ANR	1221194	Symbol	ONIGERR_TOO_BIG_NUMBER		1220842						
ANR	1221195	Symbol	src		1220842						
ANR	1221196	Symbol	* env		1220842						
ANR	1221197	Symbol	rname_end		1220842						
ANR	1221198	Symbol	get_name_end_code_point		1220842						
ANR	1221199	Symbol	env		1220842						
ANR	1221200	Symbol	p		1220842						
ANR	1221201	Symbol	r		1220842						
ANR	1221202	Symbol	* rback_num		1220842						
ANR	1221203	Symbol	pnum_head		1220842						
ANR	1221204	Function	CC_ESC_WARN	2811:0:59772:60233							
ANR	1221205	FunctionDef	"CC_ESC_WARN (ScanEnv * env , UChar * c)"		1221204	0					
ANR	1221206	CompoundStatement		2813:0:59820:60233	1221204	0					
ANR	1221207	IfStatement	if ( onig_warn == onig_null_warn )		1221204	0					
ANR	1221208	Condition	onig_warn == onig_null_warn	2814:6:59828:59854	1221204	0	True				
ANR	1221209	EqualityExpression	onig_warn == onig_null_warn		1221204	0		==			
ANR	1221210	Identifier	onig_warn		1221204	0					
ANR	1221211	Identifier	onig_null_warn		1221204	1					
ANR	1221212	ReturnStatement	return ;	2814:35:59857:59864	1221204	1	True				
ANR	1221213	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC ) )"		1221204	1					
ANR	1221214	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC )"	2816:6:59873:59998	1221204	0	True				
ANR	1221215	AndExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC )"		1221204	0		&&			
ANR	1221216	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED )"		1221204	0					
ANR	1221217	Callee	IS_SYNTAX_BV		1221204	0					
ANR	1221218	Identifier	IS_SYNTAX_BV		1221204	0					
ANR	1221219	ArgumentList	env -> syntax		1221204	1					
ANR	1221220	Argument	env -> syntax		1221204	0					
ANR	1221221	PtrMemberAccess	env -> syntax		1221204	0					
ANR	1221222	Identifier	env		1221204	0					
ANR	1221223	Identifier	syntax		1221204	1					
ANR	1221224	Argument	ONIG_SYN_WARN_CC_OP_NOT_ESCAPED		1221204	1					
ANR	1221225	Identifier	ONIG_SYN_WARN_CC_OP_NOT_ESCAPED		1221204	0					
ANR	1221226	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC )"		1221204	1					
ANR	1221227	Callee	IS_SYNTAX_BV		1221204	0					
ANR	1221228	Identifier	IS_SYNTAX_BV		1221204	0					
ANR	1221229	ArgumentList	env -> syntax		1221204	1					
ANR	1221230	Argument	env -> syntax		1221204	0					
ANR	1221231	PtrMemberAccess	env -> syntax		1221204	0					
ANR	1221232	Identifier	env		1221204	0					
ANR	1221233	Identifier	syntax		1221204	1					
ANR	1221234	Argument	ONIG_SYN_BACKSLASH_ESCAPE_IN_CC		1221204	1					
ANR	1221235	Identifier	ONIG_SYN_BACKSLASH_ESCAPE_IN_CC		1221204	0					
ANR	1221236	CompoundStatement		6:4:186:209	1221204	1					
ANR	1221237	IdentifierDeclStatement	UChar buf [ WARN_BUFSIZE ] ;	2818:4:60007:60030	1221204	0	True				
ANR	1221238	IdentifierDecl	buf [ WARN_BUFSIZE ]		1221204	0					
ANR	1221239	IdentifierDeclType	UChar [ WARN_BUFSIZE ]		1221204	0					
ANR	1221240	Identifier	buf		1221204	1					
ANR	1221241	Identifier	WARN_BUFSIZE		1221204	2					
ANR	1221242	ExpressionStatement	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , env -> enc , env -> pattern , env -> pattern_end , ( UChar * ) ""character class has '%s' without escape"" , c )"	2819:4:60036:60196	1221204	1	True				
ANR	1221243	CallExpression	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , env -> enc , env -> pattern , env -> pattern_end , ( UChar * ) ""character class has '%s' without escape"" , c )"		1221204	0					
ANR	1221244	Callee	onig_snprintf_with_pattern		1221204	0					
ANR	1221245	Identifier	onig_snprintf_with_pattern		1221204	0					
ANR	1221246	ArgumentList	buf		1221204	1					
ANR	1221247	Argument	buf		1221204	0					
ANR	1221248	Identifier	buf		1221204	0					
ANR	1221249	Argument	WARN_BUFSIZE		1221204	1					
ANR	1221250	Identifier	WARN_BUFSIZE		1221204	0					
ANR	1221251	Argument	env -> enc		1221204	2					
ANR	1221252	PtrMemberAccess	env -> enc		1221204	0					
ANR	1221253	Identifier	env		1221204	0					
ANR	1221254	Identifier	enc		1221204	1					
ANR	1221255	Argument	env -> pattern		1221204	3					
ANR	1221256	PtrMemberAccess	env -> pattern		1221204	0					
ANR	1221257	Identifier	env		1221204	0					
ANR	1221258	Identifier	pattern		1221204	1					
ANR	1221259	Argument	env -> pattern_end		1221204	4					
ANR	1221260	PtrMemberAccess	env -> pattern_end		1221204	0					
ANR	1221261	Identifier	env		1221204	0					
ANR	1221262	Identifier	pattern_end		1221204	1					
ANR	1221263	Argument	"( UChar * ) ""character class has '%s' without escape"""		1221204	5					
ANR	1221264	CastExpression	"( UChar * ) ""character class has '%s' without escape"""		1221204	0					
ANR	1221265	CastTarget	UChar *		1221204	0					
ANR	1221266	PrimaryExpression	"""character class has '%s' without escape"""		1221204	1					
ANR	1221267	Argument	c		1221204	6					
ANR	1221268	Identifier	c		1221204	0					
ANR	1221269	ExpressionStatement	( * onig_warn ) ( ( char * ) buf )	2822:4:60202:60227	1221204	2	True				
ANR	1221270	CallExpression	( * onig_warn ) ( ( char * ) buf )		1221204	0					
ANR	1221271	Callee	* onig_warn		1221204	0					
ANR	1221272	UnaryOperationExpression	* onig_warn		1221204	0					
ANR	1221273	UnaryOperator	*		1221204	0					
ANR	1221274	Identifier	onig_warn		1221204	1					
ANR	1221275	ArgumentList	( char * ) buf		1221204	1					
ANR	1221276	Argument	( char * ) buf		1221204	0					
ANR	1221277	CastExpression	( char * ) buf		1221204	0					
ANR	1221278	CastTarget	char *		1221204	0					
ANR	1221279	Identifier	buf		1221204	1					
ANR	1221280	ReturnType	static void		1221204	1					
ANR	1221281	Identifier	CC_ESC_WARN		1221204	2					
ANR	1221282	ParameterList	"ScanEnv * env , UChar * c"		1221204	3					
ANR	1221283	Parameter	ScanEnv * env	2812:12:59796:59807	1221204	0	True				
ANR	1221284	ParameterType	ScanEnv *		1221204	0					
ANR	1221285	Identifier	env		1221204	1					
ANR	1221286	Parameter	UChar * c	2812:26:59810:59817	1221204	1	True				
ANR	1221287	ParameterType	UChar *		1221204	0					
ANR	1221288	Identifier	c		1221204	1					
ANR	1221289	CFGEntryNode	ENTRY		1221204		True				
ANR	1221290	CFGExitNode	EXIT		1221204		True				
ANR	1221291	Symbol	c		1221204						
ANR	1221292	Symbol	ONIG_SYN_BACKSLASH_ESCAPE_IN_CC		1221204						
ANR	1221293	Symbol	* env		1221204						
ANR	1221294	Symbol	ONIG_SYN_WARN_CC_OP_NOT_ESCAPED		1221204						
ANR	1221295	Symbol	env -> enc		1221204						
ANR	1221296	Symbol	env		1221204						
ANR	1221297	Symbol	env -> syntax		1221204						
ANR	1221298	Symbol	buf		1221204						
ANR	1221299	Symbol	WARN_BUFSIZE		1221204						
ANR	1221300	Symbol	onig_null_warn		1221204						
ANR	1221301	Symbol	env -> pattern		1221204						
ANR	1221302	Symbol	env -> pattern_end		1221204						
ANR	1221303	Symbol	onig_warn		1221204						
ANR	1221304	Symbol	IS_SYNTAX_BV		1221204						
ANR	1221305	Function	CLOSE_BRACKET_WITHOUT_ESC_WARN	2826:0:60236:60645							
ANR	1221306	FunctionDef	"CLOSE_BRACKET_WITHOUT_ESC_WARN (ScanEnv * env , UChar * c)"		1221305	0					
ANR	1221307	CompoundStatement		2828:0:60303:60645	1221305	0					
ANR	1221308	IfStatement	if ( onig_warn == onig_null_warn )		1221305	0					
ANR	1221309	Condition	onig_warn == onig_null_warn	2829:6:60311:60337	1221305	0	True				
ANR	1221310	EqualityExpression	onig_warn == onig_null_warn		1221305	0		==			
ANR	1221311	Identifier	onig_warn		1221305	0					
ANR	1221312	Identifier	onig_null_warn		1221305	1					
ANR	1221313	ReturnStatement	return ;	2829:35:60340:60347	1221305	1	True				
ANR	1221314	IfStatement	"if ( IS_SYNTAX_BV ( ( env ) -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED ) )"		1221305	1					
ANR	1221315	Condition	"IS_SYNTAX_BV ( ( env ) -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED )"	2831:6:60356:60415	1221305	0	True				
ANR	1221316	CallExpression	"IS_SYNTAX_BV ( ( env ) -> syntax , ONIG_SYN_WARN_CC_OP_NOT_ESCAPED )"		1221305	0					
ANR	1221317	Callee	IS_SYNTAX_BV		1221305	0					
ANR	1221318	Identifier	IS_SYNTAX_BV		1221305	0					
ANR	1221319	ArgumentList	( env ) -> syntax		1221305	1					
ANR	1221320	Argument	( env ) -> syntax		1221305	0					
ANR	1221321	PtrMemberAccess	( env ) -> syntax		1221305	0					
ANR	1221322	Identifier	env		1221305	0					
ANR	1221323	Identifier	syntax		1221305	1					
ANR	1221324	Argument	ONIG_SYN_WARN_CC_OP_NOT_ESCAPED		1221305	1					
ANR	1221325	Identifier	ONIG_SYN_WARN_CC_OP_NOT_ESCAPED		1221305	0					
ANR	1221326	CompoundStatement		5:4:120:143	1221305	1					
ANR	1221327	IdentifierDeclStatement	UChar buf [ WARN_BUFSIZE ] ;	2832:4:60424:60447	1221305	0	True				
ANR	1221328	IdentifierDecl	buf [ WARN_BUFSIZE ]		1221305	0					
ANR	1221329	IdentifierDeclType	UChar [ WARN_BUFSIZE ]		1221305	0					
ANR	1221330	Identifier	buf		1221305	1					
ANR	1221331	Identifier	WARN_BUFSIZE		1221305	2					
ANR	1221332	ExpressionStatement	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , ( env ) -> enc , ( env ) -> pattern , ( env ) -> pattern_end , ( UChar * ) ""regular expression has '%s' without escape"" , c )"	2833:4:60453:60608	1221305	1	True				
ANR	1221333	CallExpression	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , ( env ) -> enc , ( env ) -> pattern , ( env ) -> pattern_end , ( UChar * ) ""regular expression has '%s' without escape"" , c )"		1221305	0					
ANR	1221334	Callee	onig_snprintf_with_pattern		1221305	0					
ANR	1221335	Identifier	onig_snprintf_with_pattern		1221305	0					
ANR	1221336	ArgumentList	buf		1221305	1					
ANR	1221337	Argument	buf		1221305	0					
ANR	1221338	Identifier	buf		1221305	0					
ANR	1221339	Argument	WARN_BUFSIZE		1221305	1					
ANR	1221340	Identifier	WARN_BUFSIZE		1221305	0					
ANR	1221341	Argument	( env ) -> enc		1221305	2					
ANR	1221342	PtrMemberAccess	( env ) -> enc		1221305	0					
ANR	1221343	Identifier	env		1221305	0					
ANR	1221344	Identifier	enc		1221305	1					
ANR	1221345	Argument	( env ) -> pattern		1221305	3					
ANR	1221346	PtrMemberAccess	( env ) -> pattern		1221305	0					
ANR	1221347	Identifier	env		1221305	0					
ANR	1221348	Identifier	pattern		1221305	1					
ANR	1221349	Argument	( env ) -> pattern_end		1221305	4					
ANR	1221350	PtrMemberAccess	( env ) -> pattern_end		1221305	0					
ANR	1221351	Identifier	env		1221305	0					
ANR	1221352	Identifier	pattern_end		1221305	1					
ANR	1221353	Argument	"( UChar * ) ""regular expression has '%s' without escape"""		1221305	5					
ANR	1221354	CastExpression	"( UChar * ) ""regular expression has '%s' without escape"""		1221305	0					
ANR	1221355	CastTarget	UChar *		1221305	0					
ANR	1221356	PrimaryExpression	"""regular expression has '%s' without escape"""		1221305	1					
ANR	1221357	Argument	c		1221305	6					
ANR	1221358	Identifier	c		1221305	0					
ANR	1221359	ExpressionStatement	( * onig_warn ) ( ( char * ) buf )	2836:4:60614:60639	1221305	2	True				
ANR	1221360	CallExpression	( * onig_warn ) ( ( char * ) buf )		1221305	0					
ANR	1221361	Callee	* onig_warn		1221305	0					
ANR	1221362	UnaryOperationExpression	* onig_warn		1221305	0					
ANR	1221363	UnaryOperator	*		1221305	0					
ANR	1221364	Identifier	onig_warn		1221305	1					
ANR	1221365	ArgumentList	( char * ) buf		1221305	1					
ANR	1221366	Argument	( char * ) buf		1221305	0					
ANR	1221367	CastExpression	( char * ) buf		1221305	0					
ANR	1221368	CastTarget	char *		1221305	0					
ANR	1221369	Identifier	buf		1221305	1					
ANR	1221370	ReturnType	static void		1221305	1					
ANR	1221371	Identifier	CLOSE_BRACKET_WITHOUT_ESC_WARN		1221305	2					
ANR	1221372	ParameterList	"ScanEnv * env , UChar * c"		1221305	3					
ANR	1221373	Parameter	ScanEnv * env	2827:31:60279:60290	1221305	0	True				
ANR	1221374	ParameterType	ScanEnv *		1221305	0					
ANR	1221375	Identifier	env		1221305	1					
ANR	1221376	Parameter	UChar * c	2827:45:60293:60300	1221305	1	True				
ANR	1221377	ParameterType	UChar *		1221305	0					
ANR	1221378	Identifier	c		1221305	1					
ANR	1221379	CFGEntryNode	ENTRY		1221305		True				
ANR	1221380	CFGExitNode	EXIT		1221305		True				
ANR	1221381	Symbol	c		1221305						
ANR	1221382	Symbol	ONIG_SYN_WARN_CC_OP_NOT_ESCAPED		1221305						
ANR	1221383	Symbol	* env		1221305						
ANR	1221384	Symbol	( env ) -> enc		1221305						
ANR	1221385	Symbol	env		1221305						
ANR	1221386	Symbol	( env ) -> syntax		1221305						
ANR	1221387	Symbol	buf		1221305						
ANR	1221388	Symbol	WARN_BUFSIZE		1221305						
ANR	1221389	Symbol	onig_null_warn		1221305						
ANR	1221390	Symbol	( env ) -> pattern_end		1221305						
ANR	1221391	Symbol	( env ) -> pattern		1221305						
ANR	1221392	Symbol	onig_warn		1221305						
ANR	1221393	Symbol	IS_SYNTAX_BV		1221305						
ANR	1221394	Function	find_str_position	2840:0:60648:61192							
ANR	1221395	FunctionDef	"find_str_position (OnigCodePoint s [ ] , int n , UChar * from , UChar * to , UChar * * next , OnigEncoding enc)"		1221394	0					
ANR	1221396	CompoundStatement		2843:0:60766:61192	1221394	0					
ANR	1221397	IdentifierDeclStatement	int i ;	2844:2:60770:60775	1221394	0	True				
ANR	1221398	IdentifierDecl	i		1221394	0					
ANR	1221399	IdentifierDeclType	int		1221394	0					
ANR	1221400	Identifier	i		1221394	1					
ANR	1221401	IdentifierDeclStatement	OnigCodePoint x ;	2845:2:60779:60794	1221394	1	True				
ANR	1221402	IdentifierDecl	x		1221394	0					
ANR	1221403	IdentifierDeclType	OnigCodePoint		1221394	0					
ANR	1221404	Identifier	x		1221394	1					
ANR	1221405	IdentifierDeclStatement	UChar * q ;	2846:2:60798:60806	1221394	2	True				
ANR	1221406	IdentifierDecl	* q		1221394	0					
ANR	1221407	IdentifierDeclType	UChar *		1221394	0					
ANR	1221408	Identifier	q		1221394	1					
ANR	1221409	IdentifierDeclStatement	UChar * p = from ;	2847:2:60810:60825	1221394	3	True				
ANR	1221410	IdentifierDecl	* p = from		1221394	0					
ANR	1221411	IdentifierDeclType	UChar *		1221394	0					
ANR	1221412	Identifier	p		1221394	1					
ANR	1221413	AssignmentExpression	* p = from		1221394	2		=			
ANR	1221414	Identifier	from		1221394	0					
ANR	1221415	Identifier	from		1221394	1					
ANR	1221416	WhileStatement	while ( p < to )		1221394	4					
ANR	1221417	Condition	p < to	2849:9:60839:60844	1221394	0	True				
ANR	1221418	RelationalExpression	p < to		1221394	0		<			
ANR	1221419	Identifier	p		1221394	0					
ANR	1221420	Identifier	to		1221394	1					
ANR	1221421	CompoundStatement		7:17:80:80	1221394	1					
ANR	1221422	ExpressionStatement	"x = ONIGENC_MBC_TO_CODE ( enc , p , to )"	2850:4:60853:60888	1221394	0	True				
ANR	1221423	AssignmentExpression	"x = ONIGENC_MBC_TO_CODE ( enc , p , to )"		1221394	0		=			
ANR	1221424	Identifier	x		1221394	0					
ANR	1221425	CallExpression	"ONIGENC_MBC_TO_CODE ( enc , p , to )"		1221394	1					
ANR	1221426	Callee	ONIGENC_MBC_TO_CODE		1221394	0					
ANR	1221427	Identifier	ONIGENC_MBC_TO_CODE		1221394	0					
ANR	1221428	ArgumentList	enc		1221394	1					
ANR	1221429	Argument	enc		1221394	0					
ANR	1221430	Identifier	enc		1221394	0					
ANR	1221431	Argument	p		1221394	1					
ANR	1221432	Identifier	p		1221394	0					
ANR	1221433	Argument	to		1221394	2					
ANR	1221434	Identifier	to		1221394	0					
ANR	1221435	ExpressionStatement	"q = p + enclen ( enc , p )"	2851:4:60894:60916	1221394	1	True				
ANR	1221436	AssignmentExpression	"q = p + enclen ( enc , p )"		1221394	0		=			
ANR	1221437	Identifier	q		1221394	0					
ANR	1221438	AdditiveExpression	"p + enclen ( enc , p )"		1221394	1		+			
ANR	1221439	Identifier	p		1221394	0					
ANR	1221440	CallExpression	"enclen ( enc , p )"		1221394	1					
ANR	1221441	Callee	enclen		1221394	0					
ANR	1221442	Identifier	enclen		1221394	0					
ANR	1221443	ArgumentList	enc		1221394	1					
ANR	1221444	Argument	enc		1221394	0					
ANR	1221445	Identifier	enc		1221394	0					
ANR	1221446	Argument	p		1221394	1					
ANR	1221447	Identifier	p		1221394	0					
ANR	1221448	IfStatement	if ( x == s [ 0 ] )		1221394	2					
ANR	1221449	Condition	x == s [ 0 ]	2852:8:60926:60934	1221394	0	True				
ANR	1221450	EqualityExpression	x == s [ 0 ]		1221394	0		==			
ANR	1221451	Identifier	x		1221394	0					
ANR	1221452	ArrayIndexing	s [ 0 ]		1221394	1					
ANR	1221453	Identifier	s		1221394	0					
ANR	1221454	PrimaryExpression	0		1221394	1					
ANR	1221455	CompoundStatement		10:19:170:170	1221394	1					
ANR	1221456	ForStatement	for ( i = 1 ; i < n && q < to ; i ++ )		1221394	0					
ANR	1221457	ForInit	i = 1 ;	2853:11:60950:60955	1221394	0	True				
ANR	1221458	AssignmentExpression	i = 1		1221394	0		=			
ANR	1221459	Identifier	i		1221394	0					
ANR	1221460	PrimaryExpression	1		1221394	1					
ANR	1221461	Condition	i < n && q < to	2853:18:60957:60971	1221394	1	True				
ANR	1221462	AndExpression	i < n && q < to		1221394	0		&&			
ANR	1221463	RelationalExpression	i < n		1221394	0		<			
ANR	1221464	Identifier	i		1221394	0					
ANR	1221465	Identifier	n		1221394	1					
ANR	1221466	RelationalExpression	q < to		1221394	1		<			
ANR	1221467	Identifier	q		1221394	0					
ANR	1221468	Identifier	to		1221394	1					
ANR	1221469	PostIncDecOperationExpression	i ++	2853:35:60974:60976	1221394	2	True				
ANR	1221470	Identifier	i		1221394	0					
ANR	1221471	IncDec	++		1221394	1					
ANR	1221472	CompoundStatement		11:40:212:212	1221394	3					
ANR	1221473	ExpressionStatement	"x = ONIGENC_MBC_TO_CODE ( enc , q , to )"	2854:1:60982:61017	1221394	0	True				
ANR	1221474	AssignmentExpression	"x = ONIGENC_MBC_TO_CODE ( enc , q , to )"		1221394	0		=			
ANR	1221475	Identifier	x		1221394	0					
ANR	1221476	CallExpression	"ONIGENC_MBC_TO_CODE ( enc , q , to )"		1221394	1					
ANR	1221477	Callee	ONIGENC_MBC_TO_CODE		1221394	0					
ANR	1221478	Identifier	ONIGENC_MBC_TO_CODE		1221394	0					
ANR	1221479	ArgumentList	enc		1221394	1					
ANR	1221480	Argument	enc		1221394	0					
ANR	1221481	Identifier	enc		1221394	0					
ANR	1221482	Argument	q		1221394	1					
ANR	1221483	Identifier	q		1221394	0					
ANR	1221484	Argument	to		1221394	2					
ANR	1221485	Identifier	to		1221394	0					
ANR	1221486	IfStatement	if ( x != s [ i ] )		1221394	1					
ANR	1221487	Condition	x != s [ i ]	2855:5:61024:61032	1221394	0	True				
ANR	1221488	EqualityExpression	x != s [ i ]		1221394	0		!=			
ANR	1221489	Identifier	x		1221394	0					
ANR	1221490	ArrayIndexing	s [ i ]		1221394	1					
ANR	1221491	Identifier	s		1221394	0					
ANR	1221492	Identifier	i		1221394	1					
ANR	1221493	BreakStatement	break ;	2855:16:61035:61040	1221394	1	True				
ANR	1221494	ExpressionStatement	"q += enclen ( enc , q )"	2856:1:61043:61062	1221394	2	True				
ANR	1221495	AssignmentExpression	"q += enclen ( enc , q )"		1221394	0		+=			
ANR	1221496	Identifier	q		1221394	0					
ANR	1221497	CallExpression	"enclen ( enc , q )"		1221394	1					
ANR	1221498	Callee	enclen		1221394	0					
ANR	1221499	Identifier	enclen		1221394	0					
ANR	1221500	ArgumentList	enc		1221394	1					
ANR	1221501	Argument	enc		1221394	0					
ANR	1221502	Identifier	enc		1221394	0					
ANR	1221503	Argument	q		1221394	1					
ANR	1221504	Identifier	q		1221394	0					
ANR	1221505	IfStatement	if ( i >= n )		1221394	1					
ANR	1221506	Condition	i >= n	2858:10:61082:61087	1221394	0	True				
ANR	1221507	RelationalExpression	i >= n		1221394	0		>=			
ANR	1221508	Identifier	i		1221394	0					
ANR	1221509	Identifier	n		1221394	1					
ANR	1221510	CompoundStatement		16:18:323:323	1221394	1					
ANR	1221511	IfStatement	if ( IS_NOT_NULL ( next ) )		1221394	0					
ANR	1221512	Condition	IS_NOT_NULL ( next )	2859:5:61097:61113	1221394	0	True				
ANR	1221513	CallExpression	IS_NOT_NULL ( next )		1221394	0					
ANR	1221514	Callee	IS_NOT_NULL		1221394	0					
ANR	1221515	Identifier	IS_NOT_NULL		1221394	0					
ANR	1221516	ArgumentList	next		1221394	1					
ANR	1221517	Argument	next		1221394	0					
ANR	1221518	Identifier	next		1221394	0					
ANR	1221519	ExpressionStatement	* next = q	2860:3:61119:61128	1221394	1	True				
ANR	1221520	AssignmentExpression	* next = q		1221394	0		=			
ANR	1221521	UnaryOperationExpression	* next		1221394	0					
ANR	1221522	UnaryOperator	*		1221394	0					
ANR	1221523	Identifier	next		1221394	1					
ANR	1221524	Identifier	q		1221394	1					
ANR	1221525	ReturnStatement	return p ;	2861:1:61131:61139	1221394	1	True				
ANR	1221526	Identifier	p		1221394	0					
ANR	1221527	ExpressionStatement	p = q	2864:4:61159:61164	1221394	3	True				
ANR	1221528	AssignmentExpression	p = q		1221394	0		=			
ANR	1221529	Identifier	p		1221394	0					
ANR	1221530	Identifier	q		1221394	1					
ANR	1221531	ReturnStatement	return NULL_UCHARP ;	2866:2:61172:61190	1221394	5	True				
ANR	1221532	Identifier	NULL_UCHARP		1221394	0					
ANR	1221533	ReturnType	static UChar *		1221394	1					
ANR	1221534	Identifier	find_str_position		1221394	2					
ANR	1221535	ParameterList	"OnigCodePoint s [ ] , int n , UChar * from , UChar * to , UChar * * next , OnigEncoding enc"		1221394	3					
ANR	1221536	Parameter	OnigCodePoint s [ ]	2841:18:60680:60696	1221394	0	True				
ANR	1221537	ParameterType	OnigCodePoint [ ]		1221394	0					
ANR	1221538	Identifier	s		1221394	1					
ANR	1221539	Parameter	int n	2841:37:60699:60703	1221394	1	True				
ANR	1221540	ParameterType	int		1221394	0					
ANR	1221541	Identifier	n		1221394	1					
ANR	1221542	Parameter	UChar * from	2841:44:60706:60716	1221394	2	True				
ANR	1221543	ParameterType	UChar *		1221394	0					
ANR	1221544	Identifier	from		1221394	1					
ANR	1221545	Parameter	UChar * to	2841:57:60719:60727	1221394	3	True				
ANR	1221546	ParameterType	UChar *		1221394	0					
ANR	1221547	Identifier	to		1221394	1					
ANR	1221548	Parameter	UChar * * next	2842:4:60734:60745	1221394	4	True				
ANR	1221549	ParameterType	UChar * *		1221394	0					
ANR	1221550	Identifier	next		1221394	1					
ANR	1221551	Parameter	OnigEncoding enc	2842:18:60748:60763	1221394	5	True				
ANR	1221552	ParameterType	OnigEncoding		1221394	0					
ANR	1221553	Identifier	enc		1221394	1					
ANR	1221554	CFGEntryNode	ENTRY		1221394		True				
ANR	1221555	CFGExitNode	EXIT		1221394		True				
ANR	1221556	Symbol	next		1221394						
ANR	1221557	Symbol	IS_NOT_NULL		1221394						
ANR	1221558	Symbol	i		1221394						
ANR	1221559	Symbol	* next		1221394						
ANR	1221560	Symbol	enclen		1221394						
ANR	1221561	Symbol	n		1221394						
ANR	1221562	Symbol	p		1221394						
ANR	1221563	Symbol	q		1221394						
ANR	1221564	Symbol	s		1221394						
ANR	1221565	Symbol	* i		1221394						
ANR	1221566	Symbol	NULL_UCHARP		1221394						
ANR	1221567	Symbol	x		1221394						
ANR	1221568	Symbol	from		1221394						
ANR	1221569	Symbol	to		1221394						
ANR	1221570	Symbol	enc		1221394						
ANR	1221571	Symbol	* s		1221394						
ANR	1221572	Symbol	ONIGENC_MBC_TO_CODE		1221394						
ANR	1221573	Function	str_exist_check_with_esc	2869:0:61195:61957							
ANR	1221574	FunctionDef	"str_exist_check_with_esc (OnigCodePoint s [ ] , int n , UChar * from , UChar * to , OnigCodePoint bad , OnigEncoding enc , OnigSyntaxType * syn)"		1221573	0					
ANR	1221575	CompoundStatement		2872:0:61342:61957	1221573	0					
ANR	1221576	IdentifierDeclStatement	"int i , in_esc ;"	2873:2:61346:61359	1221573	0	True				
ANR	1221577	IdentifierDecl	i		1221573	0					
ANR	1221578	IdentifierDeclType	int		1221573	0					
ANR	1221579	Identifier	i		1221573	1					
ANR	1221580	IdentifierDecl	in_esc		1221573	1					
ANR	1221581	IdentifierDeclType	int		1221573	0					
ANR	1221582	Identifier	in_esc		1221573	1					
ANR	1221583	IdentifierDeclStatement	OnigCodePoint x ;	2874:2:61363:61378	1221573	1	True				
ANR	1221584	IdentifierDecl	x		1221573	0					
ANR	1221585	IdentifierDeclType	OnigCodePoint		1221573	0					
ANR	1221586	Identifier	x		1221573	1					
ANR	1221587	IdentifierDeclStatement	UChar * q ;	2875:2:61382:61390	1221573	2	True				
ANR	1221588	IdentifierDecl	* q		1221573	0					
ANR	1221589	IdentifierDeclType	UChar *		1221573	0					
ANR	1221590	Identifier	q		1221573	1					
ANR	1221591	IdentifierDeclStatement	UChar * p = from ;	2876:2:61394:61409	1221573	3	True				
ANR	1221592	IdentifierDecl	* p = from		1221573	0					
ANR	1221593	IdentifierDeclType	UChar *		1221573	0					
ANR	1221594	Identifier	p		1221573	1					
ANR	1221595	AssignmentExpression	* p = from		1221573	2		=			
ANR	1221596	Identifier	from		1221573	0					
ANR	1221597	Identifier	from		1221573	1					
ANR	1221598	ExpressionStatement	in_esc = 0	2878:2:61414:61424	1221573	4	True				
ANR	1221599	AssignmentExpression	in_esc = 0		1221573	0		=			
ANR	1221600	Identifier	in_esc		1221573	0					
ANR	1221601	PrimaryExpression	0		1221573	1					
ANR	1221602	WhileStatement	while ( p < to )		1221573	5					
ANR	1221603	Condition	p < to	2879:9:61435:61440	1221573	0	True				
ANR	1221604	RelationalExpression	p < to		1221573	0		<			
ANR	1221605	Identifier	p		1221573	0					
ANR	1221606	Identifier	to		1221573	1					
ANR	1221607	CompoundStatement		8:17:100:100	1221573	1					
ANR	1221608	IfStatement	if ( in_esc )		1221573	0					
ANR	1221609	Condition	in_esc	2880:8:61453:61458	1221573	0	True				
ANR	1221610	Identifier	in_esc		1221573	0					
ANR	1221611	CompoundStatement		9:16:118:118	1221573	1					
ANR	1221612	ExpressionStatement	in_esc = 0	2881:6:61469:61479	1221573	0	True				
ANR	1221613	AssignmentExpression	in_esc = 0		1221573	0		=			
ANR	1221614	Identifier	in_esc		1221573	0					
ANR	1221615	PrimaryExpression	0		1221573	1					
ANR	1221616	ExpressionStatement	"p += enclen ( enc , p )"	2882:6:61487:61506	1221573	1	True				
ANR	1221617	AssignmentExpression	"p += enclen ( enc , p )"		1221573	0		+=			
ANR	1221618	Identifier	p		1221573	0					
ANR	1221619	CallExpression	"enclen ( enc , p )"		1221573	1					
ANR	1221620	Callee	enclen		1221573	0					
ANR	1221621	Identifier	enclen		1221573	0					
ANR	1221622	ArgumentList	enc		1221573	1					
ANR	1221623	Argument	enc		1221573	0					
ANR	1221624	Identifier	enc		1221573	0					
ANR	1221625	Argument	p		1221573	1					
ANR	1221626	Identifier	p		1221573	0					
ANR	1221627	ElseStatement	else		1221573	0					
ANR	1221628	CompoundStatement		13:9:180:180	1221573	0					
ANR	1221629	ExpressionStatement	"x = ONIGENC_MBC_TO_CODE ( enc , p , to )"	2885:6:61531:61566	1221573	0	True				
ANR	1221630	AssignmentExpression	"x = ONIGENC_MBC_TO_CODE ( enc , p , to )"		1221573	0		=			
ANR	1221631	Identifier	x		1221573	0					
ANR	1221632	CallExpression	"ONIGENC_MBC_TO_CODE ( enc , p , to )"		1221573	1					
ANR	1221633	Callee	ONIGENC_MBC_TO_CODE		1221573	0					
ANR	1221634	Identifier	ONIGENC_MBC_TO_CODE		1221573	0					
ANR	1221635	ArgumentList	enc		1221573	1					
ANR	1221636	Argument	enc		1221573	0					
ANR	1221637	Identifier	enc		1221573	0					
ANR	1221638	Argument	p		1221573	1					
ANR	1221639	Identifier	p		1221573	0					
ANR	1221640	Argument	to		1221573	2					
ANR	1221641	Identifier	to		1221573	0					
ANR	1221642	ExpressionStatement	"q = p + enclen ( enc , p )"	2886:6:61574:61596	1221573	1	True				
ANR	1221643	AssignmentExpression	"q = p + enclen ( enc , p )"		1221573	0		=			
ANR	1221644	Identifier	q		1221573	0					
ANR	1221645	AdditiveExpression	"p + enclen ( enc , p )"		1221573	1		+			
ANR	1221646	Identifier	p		1221573	0					
ANR	1221647	CallExpression	"enclen ( enc , p )"		1221573	1					
ANR	1221648	Callee	enclen		1221573	0					
ANR	1221649	Identifier	enclen		1221573	0					
ANR	1221650	ArgumentList	enc		1221573	1					
ANR	1221651	Argument	enc		1221573	0					
ANR	1221652	Identifier	enc		1221573	0					
ANR	1221653	Argument	p		1221573	1					
ANR	1221654	Identifier	p		1221573	0					
ANR	1221655	IfStatement	if ( x == s [ 0 ] )		1221573	2					
ANR	1221656	Condition	x == s [ 0 ]	2887:10:61608:61616	1221573	0	True				
ANR	1221657	EqualityExpression	x == s [ 0 ]		1221573	0		==			
ANR	1221658	Identifier	x		1221573	0					
ANR	1221659	ArrayIndexing	s [ 0 ]		1221573	1					
ANR	1221660	Identifier	s		1221573	0					
ANR	1221661	PrimaryExpression	0		1221573	1					
ANR	1221662	CompoundStatement		16:21:276:276	1221573	1					
ANR	1221663	ForStatement	for ( i = 1 ; i < n && q < to ; i ++ )		1221573	0					
ANR	1221664	ForInit	i = 1 ;	2888:6:61627:61632	1221573	0	True				
ANR	1221665	AssignmentExpression	i = 1		1221573	0		=			
ANR	1221666	Identifier	i		1221573	0					
ANR	1221667	PrimaryExpression	1		1221573	1					
ANR	1221668	Condition	i < n && q < to	2888:13:61634:61648	1221573	1	True				
ANR	1221669	AndExpression	i < n && q < to		1221573	0		&&			
ANR	1221670	RelationalExpression	i < n		1221573	0		<			
ANR	1221671	Identifier	i		1221573	0					
ANR	1221672	Identifier	n		1221573	1					
ANR	1221673	RelationalExpression	q < to		1221573	1		<			
ANR	1221674	Identifier	q		1221573	0					
ANR	1221675	Identifier	to		1221573	1					
ANR	1221676	PostIncDecOperationExpression	i ++	2888:30:61651:61653	1221573	2	True				
ANR	1221677	Identifier	i		1221573	0					
ANR	1221678	IncDec	++		1221573	1					
ANR	1221679	CompoundStatement		17:35:313:313	1221573	3					
ANR	1221680	ExpressionStatement	"x = ONIGENC_MBC_TO_CODE ( enc , q , to )"	2889:3:61661:61696	1221573	0	True				
ANR	1221681	AssignmentExpression	"x = ONIGENC_MBC_TO_CODE ( enc , q , to )"		1221573	0		=			
ANR	1221682	Identifier	x		1221573	0					
ANR	1221683	CallExpression	"ONIGENC_MBC_TO_CODE ( enc , q , to )"		1221573	1					
ANR	1221684	Callee	ONIGENC_MBC_TO_CODE		1221573	0					
ANR	1221685	Identifier	ONIGENC_MBC_TO_CODE		1221573	0					
ANR	1221686	ArgumentList	enc		1221573	1					
ANR	1221687	Argument	enc		1221573	0					
ANR	1221688	Identifier	enc		1221573	0					
ANR	1221689	Argument	q		1221573	1					
ANR	1221690	Identifier	q		1221573	0					
ANR	1221691	Argument	to		1221573	2					
ANR	1221692	Identifier	to		1221573	0					
ANR	1221693	IfStatement	if ( x != s [ i ] )		1221573	1					
ANR	1221694	Condition	x != s [ i ]	2890:7:61705:61713	1221573	0	True				
ANR	1221695	EqualityExpression	x != s [ i ]		1221573	0		!=			
ANR	1221696	Identifier	x		1221573	0					
ANR	1221697	ArrayIndexing	s [ i ]		1221573	1					
ANR	1221698	Identifier	s		1221573	0					
ANR	1221699	Identifier	i		1221573	1					
ANR	1221700	BreakStatement	break ;	2890:18:61716:61721	1221573	1	True				
ANR	1221701	ExpressionStatement	"q += enclen ( enc , q )"	2891:3:61726:61745	1221573	2	True				
ANR	1221702	AssignmentExpression	"q += enclen ( enc , q )"		1221573	0		+=			
ANR	1221703	Identifier	q		1221573	0					
ANR	1221704	CallExpression	"enclen ( enc , q )"		1221573	1					
ANR	1221705	Callee	enclen		1221573	0					
ANR	1221706	Identifier	enclen		1221573	0					
ANR	1221707	ArgumentList	enc		1221573	1					
ANR	1221708	Argument	enc		1221573	0					
ANR	1221709	Identifier	enc		1221573	0					
ANR	1221710	Argument	q		1221573	1					
ANR	1221711	Identifier	q		1221573	0					
ANR	1221712	IfStatement	if ( i >= n )		1221573	1					
ANR	1221713	Condition	i >= n	2893:5:61755:61760	1221573	0	True				
ANR	1221714	RelationalExpression	i >= n		1221573	0		>=			
ANR	1221715	Identifier	i		1221573	0					
ANR	1221716	Identifier	n		1221573	1					
ANR	1221717	ReturnStatement	return 1 ;	2893:13:61763:61771	1221573	1	True				
ANR	1221718	PrimaryExpression	1		1221573	0					
ANR	1221719	ExpressionStatement	"p += enclen ( enc , p )"	2894:1:61774:61793	1221573	2	True				
ANR	1221720	AssignmentExpression	"p += enclen ( enc , p )"		1221573	0		+=			
ANR	1221721	Identifier	p		1221573	0					
ANR	1221722	CallExpression	"enclen ( enc , p )"		1221573	1					
ANR	1221723	Callee	enclen		1221573	0					
ANR	1221724	Identifier	enclen		1221573	0					
ANR	1221725	ArgumentList	enc		1221573	1					
ANR	1221726	Argument	enc		1221573	0					
ANR	1221727	Identifier	enc		1221573	0					
ANR	1221728	Argument	p		1221573	1					
ANR	1221729	Identifier	p		1221573	0					
ANR	1221730	ElseStatement	else		1221573	0					
ANR	1221731	CompoundStatement		25:11:471:471	1221573	0					
ANR	1221732	ExpressionStatement	"x = ONIGENC_MBC_TO_CODE ( enc , p , to )"	2897:1:61817:61852	1221573	0	True				
ANR	1221733	AssignmentExpression	"x = ONIGENC_MBC_TO_CODE ( enc , p , to )"		1221573	0		=			
ANR	1221734	Identifier	x		1221573	0					
ANR	1221735	CallExpression	"ONIGENC_MBC_TO_CODE ( enc , p , to )"		1221573	1					
ANR	1221736	Callee	ONIGENC_MBC_TO_CODE		1221573	0					
ANR	1221737	Identifier	ONIGENC_MBC_TO_CODE		1221573	0					
ANR	1221738	ArgumentList	enc		1221573	1					
ANR	1221739	Argument	enc		1221573	0					
ANR	1221740	Identifier	enc		1221573	0					
ANR	1221741	Argument	p		1221573	1					
ANR	1221742	Identifier	p		1221573	0					
ANR	1221743	Argument	to		1221573	2					
ANR	1221744	Identifier	to		1221573	0					
ANR	1221745	IfStatement	if ( x == bad )		1221573	1					
ANR	1221746	Condition	x == bad	2898:5:61859:61866	1221573	0	True				
ANR	1221747	EqualityExpression	x == bad		1221573	0		==			
ANR	1221748	Identifier	x		1221573	0					
ANR	1221749	Identifier	bad		1221573	1					
ANR	1221750	ReturnStatement	return 0 ;	2898:15:61869:61877	1221573	1	True				
ANR	1221751	PrimaryExpression	0		1221573	0					
ANR	1221752	ElseStatement	else		1221573	0					
ANR	1221753	IfStatement	if ( x == MC_ESC ( syn ) )		1221573	0					
ANR	1221754	Condition	x == MC_ESC ( syn )	2899:10:61889:61904	1221573	0	True				
ANR	1221755	EqualityExpression	x == MC_ESC ( syn )		1221573	0		==			
ANR	1221756	Identifier	x		1221573	0					
ANR	1221757	CallExpression	MC_ESC ( syn )		1221573	1					
ANR	1221758	Callee	MC_ESC		1221573	0					
ANR	1221759	Identifier	MC_ESC		1221573	0					
ANR	1221760	ArgumentList	syn		1221573	1					
ANR	1221761	Argument	syn		1221573	0					
ANR	1221762	Identifier	syn		1221573	0					
ANR	1221763	ExpressionStatement	in_esc = 1	2899:28:61907:61917	1221573	1	True				
ANR	1221764	AssignmentExpression	in_esc = 1		1221573	0		=			
ANR	1221765	Identifier	in_esc		1221573	0					
ANR	1221766	PrimaryExpression	1		1221573	1					
ANR	1221767	ExpressionStatement	p = q	2900:1:61920:61925	1221573	2	True				
ANR	1221768	AssignmentExpression	p = q		1221573	0		=			
ANR	1221769	Identifier	p		1221573	0					
ANR	1221770	Identifier	q		1221573	1					
ANR	1221771	ReturnStatement	return 0 ;	2904:2:61947:61955	1221573	6	True				
ANR	1221772	PrimaryExpression	0		1221573	0					
ANR	1221773	ReturnType	static int		1221573	1					
ANR	1221774	Identifier	str_exist_check_with_esc		1221573	2					
ANR	1221775	ParameterList	"OnigCodePoint s [ ] , int n , UChar * from , UChar * to , OnigCodePoint bad , OnigEncoding enc , OnigSyntaxType * syn"		1221573	3					
ANR	1221776	Parameter	OnigCodePoint s [ ]	2870:25:61231:61247	1221573	0	True				
ANR	1221777	ParameterType	OnigCodePoint [ ]		1221573	0					
ANR	1221778	Identifier	s		1221573	1					
ANR	1221779	Parameter	int n	2870:44:61250:61254	1221573	1	True				
ANR	1221780	ParameterType	int		1221573	0					
ANR	1221781	Identifier	n		1221573	1					
ANR	1221782	Parameter	UChar * from	2870:51:61257:61267	1221573	2	True				
ANR	1221783	ParameterType	UChar *		1221573	0					
ANR	1221784	Identifier	from		1221573	1					
ANR	1221785	Parameter	UChar * to	2870:64:61270:61278	1221573	3	True				
ANR	1221786	ParameterType	UChar *		1221573	0					
ANR	1221787	Identifier	to		1221573	1					
ANR	1221788	Parameter	OnigCodePoint bad	2871:3:61284:61300	1221573	4	True				
ANR	1221789	ParameterType	OnigCodePoint		1221573	0					
ANR	1221790	Identifier	bad		1221573	1					
ANR	1221791	Parameter	OnigEncoding enc	2871:22:61303:61318	1221573	5	True				
ANR	1221792	ParameterType	OnigEncoding		1221573	0					
ANR	1221793	Identifier	enc		1221573	1					
ANR	1221794	Parameter	OnigSyntaxType * syn	2871:40:61321:61339	1221573	6	True				
ANR	1221795	ParameterType	OnigSyntaxType *		1221573	0					
ANR	1221796	Identifier	syn		1221573	1					
ANR	1221797	CFGEntryNode	ENTRY		1221573		True				
ANR	1221798	CFGExitNode	EXIT		1221573		True				
ANR	1221799	Symbol	bad		1221573						
ANR	1221800	Symbol	syn		1221573						
ANR	1221801	Symbol	i		1221573						
ANR	1221802	Symbol	enclen		1221573						
ANR	1221803	Symbol	MC_ESC		1221573						
ANR	1221804	Symbol	n		1221573						
ANR	1221805	Symbol	p		1221573						
ANR	1221806	Symbol	q		1221573						
ANR	1221807	Symbol	s		1221573						
ANR	1221808	Symbol	* i		1221573						
ANR	1221809	Symbol	x		1221573						
ANR	1221810	Symbol	from		1221573						
ANR	1221811	Symbol	to		1221573						
ANR	1221812	Symbol	enc		1221573						
ANR	1221813	Symbol	in_esc		1221573						
ANR	1221814	Symbol	* s		1221573						
ANR	1221815	Symbol	ONIGENC_MBC_TO_CODE		1221573						
ANR	1221816	Function	fetch_token_in_cc	2907:0:61960:67219							
ANR	1221817	FunctionDef	"fetch_token_in_cc (OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env)"		1221816	0					
ANR	1221818	CompoundStatement		2909:0:62044:67219	1221816	0					
ANR	1221819	IdentifierDeclStatement	int num ;	2910:2:62048:62055	1221816	0	True				
ANR	1221820	IdentifierDecl	num		1221816	0					
ANR	1221821	IdentifierDeclType	int		1221816	0					
ANR	1221822	Identifier	num		1221816	1					
ANR	1221823	IdentifierDeclStatement	"OnigCodePoint c , c2 ;"	2911:2:62059:62078	1221816	1	True				
ANR	1221824	IdentifierDecl	c		1221816	0					
ANR	1221825	IdentifierDeclType	OnigCodePoint		1221816	0					
ANR	1221826	Identifier	c		1221816	1					
ANR	1221827	IdentifierDecl	c2		1221816	1					
ANR	1221828	IdentifierDeclType	OnigCodePoint		1221816	0					
ANR	1221829	Identifier	c2		1221816	1					
ANR	1221830	IdentifierDeclStatement	OnigSyntaxType * syn = env -> syntax ;	2912:2:62082:62115	1221816	2	True				
ANR	1221831	IdentifierDecl	* syn = env -> syntax		1221816	0					
ANR	1221832	IdentifierDeclType	OnigSyntaxType *		1221816	0					
ANR	1221833	Identifier	syn		1221816	1					
ANR	1221834	AssignmentExpression	* syn = env -> syntax		1221816	2		=			
ANR	1221835	Identifier	syn		1221816	0					
ANR	1221836	PtrMemberAccess	env -> syntax		1221816	1					
ANR	1221837	Identifier	env		1221816	0					
ANR	1221838	Identifier	syntax		1221816	1					
ANR	1221839	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	2913:2:62119:62146	1221816	3	True				
ANR	1221840	IdentifierDecl	enc = env -> enc		1221816	0					
ANR	1221841	IdentifierDeclType	OnigEncoding		1221816	0					
ANR	1221842	Identifier	enc		1221816	1					
ANR	1221843	AssignmentExpression	enc = env -> enc		1221816	2		=			
ANR	1221844	Identifier	enc		1221816	0					
ANR	1221845	PtrMemberAccess	env -> enc		1221816	1					
ANR	1221846	Identifier	env		1221816	0					
ANR	1221847	Identifier	enc		1221816	1					
ANR	1221848	IdentifierDeclStatement	UChar * prev ;	2914:2:62150:62161	1221816	4	True				
ANR	1221849	IdentifierDecl	* prev		1221816	0					
ANR	1221850	IdentifierDeclType	UChar *		1221816	0					
ANR	1221851	Identifier	prev		1221816	1					
ANR	1221852	IdentifierDeclStatement	UChar * p = * src ;	2915:2:62165:62180	1221816	5	True				
ANR	1221853	IdentifierDecl	* p = * src		1221816	0					
ANR	1221854	IdentifierDeclType	UChar *		1221816	0					
ANR	1221855	Identifier	p		1221816	1					
ANR	1221856	AssignmentExpression	* p = * src		1221816	2		=			
ANR	1221857	Identifier	p		1221816	0					
ANR	1221858	UnaryOperationExpression	* src		1221816	1					
ANR	1221859	UnaryOperator	*		1221816	0					
ANR	1221860	Identifier	src		1221816	1					
ANR	1221861	ExpressionStatement	PFETCH_READY	2916:2:62184:62196	1221816	6	True				
ANR	1221862	Identifier	PFETCH_READY		1221816	0					
ANR	1221863	IfStatement	if ( PEND )		1221816	7					
ANR	1221864	Condition	PEND	2918:6:62205:62208	1221816	0	True				
ANR	1221865	Identifier	PEND		1221816	0					
ANR	1221866	CompoundStatement		10:12:166:166	1221816	1					
ANR	1221867	ExpressionStatement	tok -> type = TK_EOT	2919:4:62217:62235	1221816	0	True				
ANR	1221868	AssignmentExpression	tok -> type = TK_EOT		1221816	0		=			
ANR	1221869	PtrMemberAccess	tok -> type		1221816	0					
ANR	1221870	Identifier	tok		1221816	0					
ANR	1221871	Identifier	type		1221816	1					
ANR	1221872	Identifier	TK_EOT		1221816	1					
ANR	1221873	ReturnStatement	return tok -> type ;	2920:4:62241:62257	1221816	1	True				
ANR	1221874	PtrMemberAccess	tok -> type		1221816	0					
ANR	1221875	Identifier	tok		1221816	0					
ANR	1221876	Identifier	type		1221816	1					
ANR	1221877	ExpressionStatement	PFETCH ( c )	2923:2:62266:62275	1221816	8	True				
ANR	1221878	CallExpression	PFETCH ( c )		1221816	0					
ANR	1221879	Callee	PFETCH		1221816	0					
ANR	1221880	Identifier	PFETCH		1221816	0					
ANR	1221881	ArgumentList	c		1221816	1					
ANR	1221882	Argument	c		1221816	0					
ANR	1221883	Identifier	c		1221816	0					
ANR	1221884	ExpressionStatement	tok -> type = TK_CHAR	2924:2:62279:62298	1221816	9	True				
ANR	1221885	AssignmentExpression	tok -> type = TK_CHAR		1221816	0		=			
ANR	1221886	PtrMemberAccess	tok -> type		1221816	0					
ANR	1221887	Identifier	tok		1221816	0					
ANR	1221888	Identifier	type		1221816	1					
ANR	1221889	Identifier	TK_CHAR		1221816	1					
ANR	1221890	ExpressionStatement	tok -> base = 0	2925:2:62302:62315	1221816	10	True				
ANR	1221891	AssignmentExpression	tok -> base = 0		1221816	0		=			
ANR	1221892	PtrMemberAccess	tok -> base		1221816	0					
ANR	1221893	Identifier	tok		1221816	0					
ANR	1221894	Identifier	base		1221816	1					
ANR	1221895	PrimaryExpression	0		1221816	1					
ANR	1221896	ExpressionStatement	tok -> u . c = c	2926:2:62319:62332	1221816	11	True				
ANR	1221897	AssignmentExpression	tok -> u . c = c		1221816	0		=			
ANR	1221898	MemberAccess	tok -> u . c		1221816	0					
ANR	1221899	PtrMemberAccess	tok -> u		1221816	0					
ANR	1221900	Identifier	tok		1221816	0					
ANR	1221901	Identifier	u		1221816	1					
ANR	1221902	Identifier	c		1221816	1					
ANR	1221903	Identifier	c		1221816	1					
ANR	1221904	ExpressionStatement	tok -> escaped = 0	2927:2:62336:62352	1221816	12	True				
ANR	1221905	AssignmentExpression	tok -> escaped = 0		1221816	0		=			
ANR	1221906	PtrMemberAccess	tok -> escaped		1221816	0					
ANR	1221907	Identifier	tok		1221816	0					
ANR	1221908	Identifier	escaped		1221816	1					
ANR	1221909	PrimaryExpression	0		1221816	1					
ANR	1221910	IfStatement	if ( c == ']' )		1221816	13					
ANR	1221911	Condition	c == ']'	2929:6:62361:62368	1221816	0	True				
ANR	1221912	EqualityExpression	c == ']'		1221816	0		==			
ANR	1221913	Identifier	c		1221816	0					
ANR	1221914	PrimaryExpression	']'		1221816	1					
ANR	1221915	CompoundStatement		21:16:326:326	1221816	1					
ANR	1221916	ExpressionStatement	tok -> type = TK_CC_CLOSE	2930:4:62377:62400	1221816	0	True				
ANR	1221917	AssignmentExpression	tok -> type = TK_CC_CLOSE		1221816	0		=			
ANR	1221918	PtrMemberAccess	tok -> type		1221816	0					
ANR	1221919	Identifier	tok		1221816	0					
ANR	1221920	Identifier	type		1221816	1					
ANR	1221921	Identifier	TK_CC_CLOSE		1221816	1					
ANR	1221922	ElseStatement	else		1221816	0					
ANR	1221923	IfStatement	if ( c == '-' )		1221816	0					
ANR	1221924	Condition	c == '-'	2932:11:62417:62424	1221816	0	True				
ANR	1221925	EqualityExpression	c == '-'		1221816	0		==			
ANR	1221926	Identifier	c		1221816	0					
ANR	1221927	PrimaryExpression	'-'		1221816	1					
ANR	1221928	CompoundStatement		24:21:382:382	1221816	1					
ANR	1221929	ExpressionStatement	tok -> type = TK_CC_RANGE	2933:4:62433:62456	1221816	0	True				
ANR	1221930	AssignmentExpression	tok -> type = TK_CC_RANGE		1221816	0		=			
ANR	1221931	PtrMemberAccess	tok -> type		1221816	0					
ANR	1221932	Identifier	tok		1221816	0					
ANR	1221933	Identifier	type		1221816	1					
ANR	1221934	Identifier	TK_CC_RANGE		1221816	1					
ANR	1221935	ElseStatement	else		1221816	0					
ANR	1221936	IfStatement	if ( c == MC_ESC ( syn ) )		1221816	0					
ANR	1221937	Condition	c == MC_ESC ( syn )	2935:11:62473:62488	1221816	0	True				
ANR	1221938	EqualityExpression	c == MC_ESC ( syn )		1221816	0		==			
ANR	1221939	Identifier	c		1221816	0					
ANR	1221940	CallExpression	MC_ESC ( syn )		1221816	1					
ANR	1221941	Callee	MC_ESC		1221816	0					
ANR	1221942	Identifier	MC_ESC		1221816	0					
ANR	1221943	ArgumentList	syn		1221816	1					
ANR	1221944	Argument	syn		1221816	0					
ANR	1221945	Identifier	syn		1221816	0					
ANR	1221946	CompoundStatement		27:29:446:446	1221816	1					
ANR	1221947	IfStatement	"if ( ! IS_SYNTAX_BV ( syn , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC ) )"		1221816	0					
ANR	1221948	Condition	"! IS_SYNTAX_BV ( syn , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC )"	2936:8:62501:62552	1221816	0	True				
ANR	1221949	UnaryOperationExpression	"! IS_SYNTAX_BV ( syn , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC )"		1221816	0					
ANR	1221950	UnaryOperator	!		1221816	0					
ANR	1221951	CallExpression	"IS_SYNTAX_BV ( syn , ONIG_SYN_BACKSLASH_ESCAPE_IN_CC )"		1221816	1					
ANR	1221952	Callee	IS_SYNTAX_BV		1221816	0					
ANR	1221953	Identifier	IS_SYNTAX_BV		1221816	0					
ANR	1221954	ArgumentList	syn		1221816	1					
ANR	1221955	Argument	syn		1221816	0					
ANR	1221956	Identifier	syn		1221816	0					
ANR	1221957	Argument	ONIG_SYN_BACKSLASH_ESCAPE_IN_CC		1221816	1					
ANR	1221958	Identifier	ONIG_SYN_BACKSLASH_ESCAPE_IN_CC		1221816	0					
ANR	1221959	GotoStatement	goto end ;	2937:6:62561:62569	1221816	1	True				
ANR	1221960	Identifier	end		1221816	0					
ANR	1221961	IfStatement	if ( PEND )		1221816	1					
ANR	1221962	Condition	PEND	2939:8:62580:62583	1221816	0	True				
ANR	1221963	Identifier	PEND		1221816	0					
ANR	1221964	ReturnStatement	return ONIGERR_END_PATTERN_AT_ESCAPE ;	2939:14:62586:62622	1221816	1	True				
ANR	1221965	Identifier	ONIGERR_END_PATTERN_AT_ESCAPE		1221816	0					
ANR	1221966	ExpressionStatement	PFETCH ( c )	2941:4:62629:62638	1221816	2	True				
ANR	1221967	CallExpression	PFETCH ( c )		1221816	0					
ANR	1221968	Callee	PFETCH		1221816	0					
ANR	1221969	Identifier	PFETCH		1221816	0					
ANR	1221970	ArgumentList	c		1221816	1					
ANR	1221971	Argument	c		1221816	0					
ANR	1221972	Identifier	c		1221816	0					
ANR	1221973	ExpressionStatement	tok -> escaped = 1	2942:4:62644:62660	1221816	3	True				
ANR	1221974	AssignmentExpression	tok -> escaped = 1		1221816	0		=			
ANR	1221975	PtrMemberAccess	tok -> escaped		1221816	0					
ANR	1221976	Identifier	tok		1221816	0					
ANR	1221977	Identifier	escaped		1221816	1					
ANR	1221978	PrimaryExpression	1		1221816	1					
ANR	1221979	ExpressionStatement	tok -> u . c = c	2943:4:62666:62678	1221816	4	True				
ANR	1221980	AssignmentExpression	tok -> u . c = c		1221816	0		=			
ANR	1221981	MemberAccess	tok -> u . c		1221816	0					
ANR	1221982	PtrMemberAccess	tok -> u		1221816	0					
ANR	1221983	Identifier	tok		1221816	0					
ANR	1221984	Identifier	u		1221816	1					
ANR	1221985	Identifier	c		1221816	1					
ANR	1221986	Identifier	c		1221816	1					
ANR	1221987	SwitchStatement	switch ( c )		1221816	5					
ANR	1221988	Condition	c	2944:12:62692:62692	1221816	0	True				
ANR	1221989	Identifier	c		1221816	0					
ANR	1221990	CompoundStatement		36:15:650:650	1221816	1					
ANR	1221991	Label	case 'w' :	2945:4:62701:62709	1221816	0	True				
ANR	1221992	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2946:6:62717:62741	1221816	1	True				
ANR	1221993	AssignmentExpression	tok -> type = TK_CHAR_TYPE		1221816	0		=			
ANR	1221994	PtrMemberAccess	tok -> type		1221816	0					
ANR	1221995	Identifier	tok		1221816	0					
ANR	1221996	Identifier	type		1221816	1					
ANR	1221997	Identifier	TK_CHAR_TYPE		1221816	1					
ANR	1221998	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD	2947:6:62749:62787	1221816	2	True				
ANR	1221999	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD		1221816	0		=			
ANR	1222000	MemberAccess	tok -> u . prop . ctype		1221816	0					
ANR	1222001	MemberAccess	tok -> u . prop		1221816	0					
ANR	1222002	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222003	Identifier	tok		1221816	0					
ANR	1222004	Identifier	u		1221816	1					
ANR	1222005	Identifier	prop		1221816	1					
ANR	1222006	Identifier	ctype		1221816	1					
ANR	1222007	Identifier	ONIGENC_CTYPE_WORD		1221816	1					
ANR	1222008	ExpressionStatement	tok -> u . prop . not = 0	2948:6:62795:62816	1221816	3	True				
ANR	1222009	AssignmentExpression	tok -> u . prop . not = 0		1221816	0		=			
ANR	1222010	MemberAccess	tok -> u . prop . not		1221816	0					
ANR	1222011	MemberAccess	tok -> u . prop		1221816	0					
ANR	1222012	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222013	Identifier	tok		1221816	0					
ANR	1222014	Identifier	u		1221816	1					
ANR	1222015	Identifier	prop		1221816	1					
ANR	1222016	Identifier	not		1221816	1					
ANR	1222017	PrimaryExpression	0		1221816	1					
ANR	1222018	BreakStatement	break ;	2949:6:62824:62829	1221816	4	True				
ANR	1222019	Label	case 'W' :	2950:4:62835:62843	1221816	5	True				
ANR	1222020	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2951:6:62851:62875	1221816	6	True				
ANR	1222021	AssignmentExpression	tok -> type = TK_CHAR_TYPE		1221816	0		=			
ANR	1222022	PtrMemberAccess	tok -> type		1221816	0					
ANR	1222023	Identifier	tok		1221816	0					
ANR	1222024	Identifier	type		1221816	1					
ANR	1222025	Identifier	TK_CHAR_TYPE		1221816	1					
ANR	1222026	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD	2952:6:62883:62921	1221816	7	True				
ANR	1222027	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD		1221816	0		=			
ANR	1222028	MemberAccess	tok -> u . prop . ctype		1221816	0					
ANR	1222029	MemberAccess	tok -> u . prop		1221816	0					
ANR	1222030	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222031	Identifier	tok		1221816	0					
ANR	1222032	Identifier	u		1221816	1					
ANR	1222033	Identifier	prop		1221816	1					
ANR	1222034	Identifier	ctype		1221816	1					
ANR	1222035	Identifier	ONIGENC_CTYPE_WORD		1221816	1					
ANR	1222036	ExpressionStatement	tok -> u . prop . not = 1	2953:6:62929:62950	1221816	8	True				
ANR	1222037	AssignmentExpression	tok -> u . prop . not = 1		1221816	0		=			
ANR	1222038	MemberAccess	tok -> u . prop . not		1221816	0					
ANR	1222039	MemberAccess	tok -> u . prop		1221816	0					
ANR	1222040	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222041	Identifier	tok		1221816	0					
ANR	1222042	Identifier	u		1221816	1					
ANR	1222043	Identifier	prop		1221816	1					
ANR	1222044	Identifier	not		1221816	1					
ANR	1222045	PrimaryExpression	1		1221816	1					
ANR	1222046	BreakStatement	break ;	2954:6:62958:62963	1221816	9	True				
ANR	1222047	Label	case 'd' :	2955:4:62969:62977	1221816	10	True				
ANR	1222048	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2956:6:62985:63009	1221816	11	True				
ANR	1222049	AssignmentExpression	tok -> type = TK_CHAR_TYPE		1221816	0		=			
ANR	1222050	PtrMemberAccess	tok -> type		1221816	0					
ANR	1222051	Identifier	tok		1221816	0					
ANR	1222052	Identifier	type		1221816	1					
ANR	1222053	Identifier	TK_CHAR_TYPE		1221816	1					
ANR	1222054	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT	2957:6:63017:63056	1221816	12	True				
ANR	1222055	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT		1221816	0		=			
ANR	1222056	MemberAccess	tok -> u . prop . ctype		1221816	0					
ANR	1222057	MemberAccess	tok -> u . prop		1221816	0					
ANR	1222058	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222059	Identifier	tok		1221816	0					
ANR	1222060	Identifier	u		1221816	1					
ANR	1222061	Identifier	prop		1221816	1					
ANR	1222062	Identifier	ctype		1221816	1					
ANR	1222063	Identifier	ONIGENC_CTYPE_DIGIT		1221816	1					
ANR	1222064	ExpressionStatement	tok -> u . prop . not = 0	2958:6:63064:63085	1221816	13	True				
ANR	1222065	AssignmentExpression	tok -> u . prop . not = 0		1221816	0		=			
ANR	1222066	MemberAccess	tok -> u . prop . not		1221816	0					
ANR	1222067	MemberAccess	tok -> u . prop		1221816	0					
ANR	1222068	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222069	Identifier	tok		1221816	0					
ANR	1222070	Identifier	u		1221816	1					
ANR	1222071	Identifier	prop		1221816	1					
ANR	1222072	Identifier	not		1221816	1					
ANR	1222073	PrimaryExpression	0		1221816	1					
ANR	1222074	BreakStatement	break ;	2959:6:63093:63098	1221816	14	True				
ANR	1222075	Label	case 'D' :	2960:4:63104:63112	1221816	15	True				
ANR	1222076	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2961:6:63120:63144	1221816	16	True				
ANR	1222077	AssignmentExpression	tok -> type = TK_CHAR_TYPE		1221816	0		=			
ANR	1222078	PtrMemberAccess	tok -> type		1221816	0					
ANR	1222079	Identifier	tok		1221816	0					
ANR	1222080	Identifier	type		1221816	1					
ANR	1222081	Identifier	TK_CHAR_TYPE		1221816	1					
ANR	1222082	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT	2962:6:63152:63191	1221816	17	True				
ANR	1222083	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT		1221816	0		=			
ANR	1222084	MemberAccess	tok -> u . prop . ctype		1221816	0					
ANR	1222085	MemberAccess	tok -> u . prop		1221816	0					
ANR	1222086	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222087	Identifier	tok		1221816	0					
ANR	1222088	Identifier	u		1221816	1					
ANR	1222089	Identifier	prop		1221816	1					
ANR	1222090	Identifier	ctype		1221816	1					
ANR	1222091	Identifier	ONIGENC_CTYPE_DIGIT		1221816	1					
ANR	1222092	ExpressionStatement	tok -> u . prop . not = 1	2963:6:63199:63220	1221816	18	True				
ANR	1222093	AssignmentExpression	tok -> u . prop . not = 1		1221816	0		=			
ANR	1222094	MemberAccess	tok -> u . prop . not		1221816	0					
ANR	1222095	MemberAccess	tok -> u . prop		1221816	0					
ANR	1222096	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222097	Identifier	tok		1221816	0					
ANR	1222098	Identifier	u		1221816	1					
ANR	1222099	Identifier	prop		1221816	1					
ANR	1222100	Identifier	not		1221816	1					
ANR	1222101	PrimaryExpression	1		1221816	1					
ANR	1222102	BreakStatement	break ;	2964:6:63228:63233	1221816	19	True				
ANR	1222103	Label	case 's' :	2965:4:63239:63247	1221816	20	True				
ANR	1222104	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2966:6:63255:63279	1221816	21	True				
ANR	1222105	AssignmentExpression	tok -> type = TK_CHAR_TYPE		1221816	0		=			
ANR	1222106	PtrMemberAccess	tok -> type		1221816	0					
ANR	1222107	Identifier	tok		1221816	0					
ANR	1222108	Identifier	type		1221816	1					
ANR	1222109	Identifier	TK_CHAR_TYPE		1221816	1					
ANR	1222110	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE	2967:6:63287:63326	1221816	22	True				
ANR	1222111	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE		1221816	0		=			
ANR	1222112	MemberAccess	tok -> u . prop . ctype		1221816	0					
ANR	1222113	MemberAccess	tok -> u . prop		1221816	0					
ANR	1222114	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222115	Identifier	tok		1221816	0					
ANR	1222116	Identifier	u		1221816	1					
ANR	1222117	Identifier	prop		1221816	1					
ANR	1222118	Identifier	ctype		1221816	1					
ANR	1222119	Identifier	ONIGENC_CTYPE_SPACE		1221816	1					
ANR	1222120	ExpressionStatement	tok -> u . prop . not = 0	2968:6:63334:63355	1221816	23	True				
ANR	1222121	AssignmentExpression	tok -> u . prop . not = 0		1221816	0		=			
ANR	1222122	MemberAccess	tok -> u . prop . not		1221816	0					
ANR	1222123	MemberAccess	tok -> u . prop		1221816	0					
ANR	1222124	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222125	Identifier	tok		1221816	0					
ANR	1222126	Identifier	u		1221816	1					
ANR	1222127	Identifier	prop		1221816	1					
ANR	1222128	Identifier	not		1221816	1					
ANR	1222129	PrimaryExpression	0		1221816	1					
ANR	1222130	BreakStatement	break ;	2969:6:63363:63368	1221816	24	True				
ANR	1222131	Label	case 'S' :	2970:4:63374:63382	1221816	25	True				
ANR	1222132	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2971:6:63390:63414	1221816	26	True				
ANR	1222133	AssignmentExpression	tok -> type = TK_CHAR_TYPE		1221816	0		=			
ANR	1222134	PtrMemberAccess	tok -> type		1221816	0					
ANR	1222135	Identifier	tok		1221816	0					
ANR	1222136	Identifier	type		1221816	1					
ANR	1222137	Identifier	TK_CHAR_TYPE		1221816	1					
ANR	1222138	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE	2972:6:63422:63461	1221816	27	True				
ANR	1222139	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE		1221816	0		=			
ANR	1222140	MemberAccess	tok -> u . prop . ctype		1221816	0					
ANR	1222141	MemberAccess	tok -> u . prop		1221816	0					
ANR	1222142	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222143	Identifier	tok		1221816	0					
ANR	1222144	Identifier	u		1221816	1					
ANR	1222145	Identifier	prop		1221816	1					
ANR	1222146	Identifier	ctype		1221816	1					
ANR	1222147	Identifier	ONIGENC_CTYPE_SPACE		1221816	1					
ANR	1222148	ExpressionStatement	tok -> u . prop . not = 1	2973:6:63469:63490	1221816	28	True				
ANR	1222149	AssignmentExpression	tok -> u . prop . not = 1		1221816	0		=			
ANR	1222150	MemberAccess	tok -> u . prop . not		1221816	0					
ANR	1222151	MemberAccess	tok -> u . prop		1221816	0					
ANR	1222152	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222153	Identifier	tok		1221816	0					
ANR	1222154	Identifier	u		1221816	1					
ANR	1222155	Identifier	prop		1221816	1					
ANR	1222156	Identifier	not		1221816	1					
ANR	1222157	PrimaryExpression	1		1221816	1					
ANR	1222158	BreakStatement	break ;	2974:6:63498:63503	1221816	29	True				
ANR	1222159	Label	case 'h' :	2975:4:63509:63517	1221816	30	True				
ANR	1222160	IfStatement	"if ( ! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT ) )"		1221816	31					
ANR	1222161	Condition	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"	2976:10:63529:63575	1221816	0	True				
ANR	1222162	UnaryOperationExpression	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		1221816	0					
ANR	1222163	UnaryOperator	!		1221816	0					
ANR	1222164	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		1221816	1					
ANR	1222165	Callee	IS_SYNTAX_OP2		1221816	0					
ANR	1222166	Identifier	IS_SYNTAX_OP2		1221816	0					
ANR	1222167	ArgumentList	syn		1221816	1					
ANR	1222168	Argument	syn		1221816	0					
ANR	1222169	Identifier	syn		1221816	0					
ANR	1222170	Argument	ONIG_SYN_OP2_ESC_H_XDIGIT		1221816	1					
ANR	1222171	Identifier	ONIG_SYN_OP2_ESC_H_XDIGIT		1221816	0					
ANR	1222172	BreakStatement	break ;	2976:59:63578:63583	1221816	1	True				
ANR	1222173	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2977:6:63591:63615	1221816	32	True				
ANR	1222174	AssignmentExpression	tok -> type = TK_CHAR_TYPE		1221816	0		=			
ANR	1222175	PtrMemberAccess	tok -> type		1221816	0					
ANR	1222176	Identifier	tok		1221816	0					
ANR	1222177	Identifier	type		1221816	1					
ANR	1222178	Identifier	TK_CHAR_TYPE		1221816	1					
ANR	1222179	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT	2978:6:63623:63663	1221816	33	True				
ANR	1222180	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT		1221816	0		=			
ANR	1222181	MemberAccess	tok -> u . prop . ctype		1221816	0					
ANR	1222182	MemberAccess	tok -> u . prop		1221816	0					
ANR	1222183	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222184	Identifier	tok		1221816	0					
ANR	1222185	Identifier	u		1221816	1					
ANR	1222186	Identifier	prop		1221816	1					
ANR	1222187	Identifier	ctype		1221816	1					
ANR	1222188	Identifier	ONIGENC_CTYPE_XDIGIT		1221816	1					
ANR	1222189	ExpressionStatement	tok -> u . prop . not = 0	2979:6:63671:63692	1221816	34	True				
ANR	1222190	AssignmentExpression	tok -> u . prop . not = 0		1221816	0		=			
ANR	1222191	MemberAccess	tok -> u . prop . not		1221816	0					
ANR	1222192	MemberAccess	tok -> u . prop		1221816	0					
ANR	1222193	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222194	Identifier	tok		1221816	0					
ANR	1222195	Identifier	u		1221816	1					
ANR	1222196	Identifier	prop		1221816	1					
ANR	1222197	Identifier	not		1221816	1					
ANR	1222198	PrimaryExpression	0		1221816	1					
ANR	1222199	BreakStatement	break ;	2980:6:63700:63705	1221816	35	True				
ANR	1222200	Label	case 'H' :	2981:4:63711:63719	1221816	36	True				
ANR	1222201	IfStatement	"if ( ! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT ) )"		1221816	37					
ANR	1222202	Condition	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"	2982:10:63731:63777	1221816	0	True				
ANR	1222203	UnaryOperationExpression	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		1221816	0					
ANR	1222204	UnaryOperator	!		1221816	0					
ANR	1222205	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		1221816	1					
ANR	1222206	Callee	IS_SYNTAX_OP2		1221816	0					
ANR	1222207	Identifier	IS_SYNTAX_OP2		1221816	0					
ANR	1222208	ArgumentList	syn		1221816	1					
ANR	1222209	Argument	syn		1221816	0					
ANR	1222210	Identifier	syn		1221816	0					
ANR	1222211	Argument	ONIG_SYN_OP2_ESC_H_XDIGIT		1221816	1					
ANR	1222212	Identifier	ONIG_SYN_OP2_ESC_H_XDIGIT		1221816	0					
ANR	1222213	BreakStatement	break ;	2982:59:63780:63785	1221816	1	True				
ANR	1222214	ExpressionStatement	tok -> type = TK_CHAR_TYPE	2983:6:63793:63817	1221816	38	True				
ANR	1222215	AssignmentExpression	tok -> type = TK_CHAR_TYPE		1221816	0		=			
ANR	1222216	PtrMemberAccess	tok -> type		1221816	0					
ANR	1222217	Identifier	tok		1221816	0					
ANR	1222218	Identifier	type		1221816	1					
ANR	1222219	Identifier	TK_CHAR_TYPE		1221816	1					
ANR	1222220	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT	2984:6:63825:63865	1221816	39	True				
ANR	1222221	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT		1221816	0		=			
ANR	1222222	MemberAccess	tok -> u . prop . ctype		1221816	0					
ANR	1222223	MemberAccess	tok -> u . prop		1221816	0					
ANR	1222224	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222225	Identifier	tok		1221816	0					
ANR	1222226	Identifier	u		1221816	1					
ANR	1222227	Identifier	prop		1221816	1					
ANR	1222228	Identifier	ctype		1221816	1					
ANR	1222229	Identifier	ONIGENC_CTYPE_XDIGIT		1221816	1					
ANR	1222230	ExpressionStatement	tok -> u . prop . not = 1	2985:6:63873:63894	1221816	40	True				
ANR	1222231	AssignmentExpression	tok -> u . prop . not = 1		1221816	0		=			
ANR	1222232	MemberAccess	tok -> u . prop . not		1221816	0					
ANR	1222233	MemberAccess	tok -> u . prop		1221816	0					
ANR	1222234	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222235	Identifier	tok		1221816	0					
ANR	1222236	Identifier	u		1221816	1					
ANR	1222237	Identifier	prop		1221816	1					
ANR	1222238	Identifier	not		1221816	1					
ANR	1222239	PrimaryExpression	1		1221816	1					
ANR	1222240	BreakStatement	break ;	2986:6:63902:63907	1221816	41	True				
ANR	1222241	Label	case 'p' :	2988:4:63914:63922	1221816	42	True				
ANR	1222242	Label	case 'P' :	2989:4:63928:63936	1221816	43	True				
ANR	1222243	ExpressionStatement	c2 = PPEEK	2990:6:63944:63954	1221816	44	True				
ANR	1222244	AssignmentExpression	c2 = PPEEK		1221816	0		=			
ANR	1222245	Identifier	c2		1221816	0					
ANR	1222246	Identifier	PPEEK		1221816	1					
ANR	1222247	IfStatement	"if ( c2 == '{' && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY ) )"		1221816	45					
ANR	1222248	Condition	"c2 == '{' && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY )"	2991:10:63966:64039	1221816	0	True				
ANR	1222249	AndExpression	"c2 == '{' && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY )"		1221816	0		&&			
ANR	1222250	EqualityExpression	c2 == '{'		1221816	0		==			
ANR	1222251	Identifier	c2		1221816	0					
ANR	1222252	PrimaryExpression	'{'		1221816	1					
ANR	1222253	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY )"		1221816	1					
ANR	1222254	Callee	IS_SYNTAX_OP2		1221816	0					
ANR	1222255	Identifier	IS_SYNTAX_OP2		1221816	0					
ANR	1222256	ArgumentList	syn		1221816	1					
ANR	1222257	Argument	syn		1221816	0					
ANR	1222258	Identifier	syn		1221816	0					
ANR	1222259	Argument	ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY		1221816	1					
ANR	1222260	Identifier	ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY		1221816	0					
ANR	1222261	CompoundStatement		84:63:1997:1997	1221816	1					
ANR	1222262	ExpressionStatement	PINC	2993:1:64045:64049	1221816	0	True				
ANR	1222263	Identifier	PINC		1221816	0					
ANR	1222264	ExpressionStatement	tok -> type = TK_CHAR_PROPERTY	2994:1:64052:64080	1221816	1	True				
ANR	1222265	AssignmentExpression	tok -> type = TK_CHAR_PROPERTY		1221816	0		=			
ANR	1222266	PtrMemberAccess	tok -> type		1221816	0					
ANR	1222267	Identifier	tok		1221816	0					
ANR	1222268	Identifier	type		1221816	1					
ANR	1222269	Identifier	TK_CHAR_PROPERTY		1221816	1					
ANR	1222270	ExpressionStatement	tok -> u . prop . not = ( c == 'P' ? 1 : 0 )	2995:1:64083:64119	1221816	2	True				
ANR	1222271	AssignmentExpression	tok -> u . prop . not = ( c == 'P' ? 1 : 0 )		1221816	0		=			
ANR	1222272	MemberAccess	tok -> u . prop . not		1221816	0					
ANR	1222273	MemberAccess	tok -> u . prop		1221816	0					
ANR	1222274	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222275	Identifier	tok		1221816	0					
ANR	1222276	Identifier	u		1221816	1					
ANR	1222277	Identifier	prop		1221816	1					
ANR	1222278	Identifier	not		1221816	1					
ANR	1222279	ConditionalExpression	c == 'P' ? 1 : 0		1221816	1					
ANR	1222280	Condition	c == 'P'		1221816	0					
ANR	1222281	EqualityExpression	c == 'P'		1221816	0		==			
ANR	1222282	Identifier	c		1221816	0					
ANR	1222283	PrimaryExpression	'P'		1221816	1					
ANR	1222284	PrimaryExpression	1		1221816	1					
ANR	1222285	PrimaryExpression	0		1221816	2					
ANR	1222286	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT ) )"		1221816	3					
ANR	1222287	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT )"	2997:5:64127:64185	1221816	0	True				
ANR	1222288	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT )"		1221816	0					
ANR	1222289	Callee	IS_SYNTAX_OP2		1221816	0					
ANR	1222290	Identifier	IS_SYNTAX_OP2		1221816	0					
ANR	1222291	ArgumentList	syn		1221816	1					
ANR	1222292	Argument	syn		1221816	0					
ANR	1222293	Identifier	syn		1221816	0					
ANR	1222294	Argument	ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT		1221816	1					
ANR	1222295	Identifier	ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT		1221816	0					
ANR	1222296	CompoundStatement		89:66:2143:2143	1221816	1					
ANR	1222297	ExpressionStatement	PFETCH ( c2 )	2998:3:64193:64203	1221816	0	True				
ANR	1222298	CallExpression	PFETCH ( c2 )		1221816	0					
ANR	1222299	Callee	PFETCH		1221816	0					
ANR	1222300	Identifier	PFETCH		1221816	0					
ANR	1222301	ArgumentList	c2		1221816	1					
ANR	1222302	Argument	c2		1221816	0					
ANR	1222303	Identifier	c2		1221816	0					
ANR	1222304	IfStatement	if ( c2 == '^' )		1221816	1					
ANR	1222305	Condition	c2 == '^'	2999:7:64212:64220	1221816	0	True				
ANR	1222306	EqualityExpression	c2 == '^'		1221816	0		==			
ANR	1222307	Identifier	c2		1221816	0					
ANR	1222308	PrimaryExpression	'^'		1221816	1					
ANR	1222309	CompoundStatement		91:18:2178:2178	1221816	1					
ANR	1222310	ExpressionStatement	tok -> u . prop . not = ( tok -> u . prop . not == 0 ? 1 : 0 )	3000:5:64230:64278	1221816	0	True				
ANR	1222311	AssignmentExpression	tok -> u . prop . not = ( tok -> u . prop . not == 0 ? 1 : 0 )		1221816	0		=			
ANR	1222312	MemberAccess	tok -> u . prop . not		1221816	0					
ANR	1222313	MemberAccess	tok -> u . prop		1221816	0					
ANR	1222314	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222315	Identifier	tok		1221816	0					
ANR	1222316	Identifier	u		1221816	1					
ANR	1222317	Identifier	prop		1221816	1					
ANR	1222318	Identifier	not		1221816	1					
ANR	1222319	ConditionalExpression	tok -> u . prop . not == 0 ? 1 : 0		1221816	1					
ANR	1222320	Condition	tok -> u . prop . not == 0		1221816	0					
ANR	1222321	EqualityExpression	tok -> u . prop . not == 0		1221816	0		==			
ANR	1222322	MemberAccess	tok -> u . prop . not		1221816	0					
ANR	1222323	MemberAccess	tok -> u . prop		1221816	0					
ANR	1222324	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222325	Identifier	tok		1221816	0					
ANR	1222326	Identifier	u		1221816	1					
ANR	1222327	Identifier	prop		1221816	1					
ANR	1222328	Identifier	not		1221816	1					
ANR	1222329	PrimaryExpression	0		1221816	1					
ANR	1222330	PrimaryExpression	1		1221816	1					
ANR	1222331	PrimaryExpression	0		1221816	2					
ANR	1222332	ElseStatement	else		1221816	0					
ANR	1222333	ExpressionStatement	PUNFETCH	3003:5:64298:64306	1221816	0	True				
ANR	1222334	Identifier	PUNFETCH		1221816	0					
ANR	1222335	BreakStatement	break ;	3006:6:64325:64330	1221816	46	True				
ANR	1222336	Label	case 'x' :	3008:4:64337:64345	1221816	47	True				
ANR	1222337	IfStatement	if ( PEND )		1221816	48					
ANR	1222338	Condition	PEND	3009:10:64357:64360	1221816	0	True				
ANR	1222339	Identifier	PEND		1221816	0					
ANR	1222340	BreakStatement	break ;	3009:16:64363:64368	1221816	1	True				
ANR	1222341	ExpressionStatement	prev = p	3011:6:64377:64385	1221816	49	True				
ANR	1222342	AssignmentExpression	prev = p		1221816	0		=			
ANR	1222343	Identifier	prev		1221816	0					
ANR	1222344	Identifier	p		1221816	1					
ANR	1222345	IfStatement	"if ( PPEEK_IS ( '{' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 ) )"		1221816	50					
ANR	1222346	Condition	"PPEEK_IS ( '{' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 )"	3012:10:64397:64460	1221816	0	True				
ANR	1222347	AndExpression	"PPEEK_IS ( '{' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 )"		1221816	0		&&			
ANR	1222348	CallExpression	PPEEK_IS ( '{' )		1221816	0					
ANR	1222349	Callee	PPEEK_IS		1221816	0					
ANR	1222350	Identifier	PPEEK_IS		1221816	0					
ANR	1222351	ArgumentList	'{'		1221816	1					
ANR	1222352	Argument	'{'		1221816	0					
ANR	1222353	PrimaryExpression	'{'		1221816	0					
ANR	1222354	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 )"		1221816	1					
ANR	1222355	Callee	IS_SYNTAX_OP		1221816	0					
ANR	1222356	Identifier	IS_SYNTAX_OP		1221816	0					
ANR	1222357	ArgumentList	syn		1221816	1					
ANR	1222358	Argument	syn		1221816	0					
ANR	1222359	Identifier	syn		1221816	0					
ANR	1222360	Argument	ONIG_SYN_OP_ESC_X_BRACE_HEX8		1221816	1					
ANR	1222361	Identifier	ONIG_SYN_OP_ESC_X_BRACE_HEX8		1221816	0					
ANR	1222362	CompoundStatement		104:76:2418:2418	1221816	1					
ANR	1222363	ExpressionStatement	PINC	3013:1:64466:64470	1221816	0	True				
ANR	1222364	Identifier	PINC		1221816	0					
ANR	1222365	ExpressionStatement	"num = scan_unsigned_hexadecimal_number ( & p , end , 8 , enc )"	3014:1:64473:64528	1221816	1	True				
ANR	1222366	AssignmentExpression	"num = scan_unsigned_hexadecimal_number ( & p , end , 8 , enc )"		1221816	0		=			
ANR	1222367	Identifier	num		1221816	0					
ANR	1222368	CallExpression	"scan_unsigned_hexadecimal_number ( & p , end , 8 , enc )"		1221816	1					
ANR	1222369	Callee	scan_unsigned_hexadecimal_number		1221816	0					
ANR	1222370	Identifier	scan_unsigned_hexadecimal_number		1221816	0					
ANR	1222371	ArgumentList	& p		1221816	1					
ANR	1222372	Argument	& p		1221816	0					
ANR	1222373	UnaryOperationExpression	& p		1221816	0					
ANR	1222374	UnaryOperator	&		1221816	0					
ANR	1222375	Identifier	p		1221816	1					
ANR	1222376	Argument	end		1221816	1					
ANR	1222377	Identifier	end		1221816	0					
ANR	1222378	Argument	8		1221816	2					
ANR	1222379	PrimaryExpression	8		1221816	0					
ANR	1222380	Argument	enc		1221816	3					
ANR	1222381	Identifier	enc		1221816	0					
ANR	1222382	IfStatement	if ( num < 0 )		1221816	2					
ANR	1222383	Condition	num < 0	3015:5:64535:64541	1221816	0	True				
ANR	1222384	RelationalExpression	num < 0		1221816	0		<			
ANR	1222385	Identifier	num		1221816	0					
ANR	1222386	PrimaryExpression	0		1221816	1					
ANR	1222387	ReturnStatement	return ONIGERR_TOO_BIG_WIDE_CHAR_VALUE ;	3015:14:64544:64582	1221816	1	True				
ANR	1222388	Identifier	ONIGERR_TOO_BIG_WIDE_CHAR_VALUE		1221816	0					
ANR	1222389	IfStatement	if ( ! PEND )		1221816	3					
ANR	1222390	Condition	! PEND	3016:5:64589:64593	1221816	0	True				
ANR	1222391	UnaryOperationExpression	! PEND		1221816	0					
ANR	1222392	UnaryOperator	!		1221816	0					
ANR	1222393	Identifier	PEND		1221816	1					
ANR	1222394	CompoundStatement		108:12:2551:2551	1221816	1					
ANR	1222395	ExpressionStatement	c2 = PPEEK	3017:10:64608:64618	1221816	0	True				
ANR	1222396	AssignmentExpression	c2 = PPEEK		1221816	0		=			
ANR	1222397	Identifier	c2		1221816	0					
ANR	1222398	Identifier	PPEEK		1221816	1					
ANR	1222399	IfStatement	"if ( ONIGENC_IS_CODE_XDIGIT ( enc , c2 ) )"		1221816	1					
ANR	1222400	Condition	"ONIGENC_IS_CODE_XDIGIT ( enc , c2 )"	3018:14:64634:64664	1221816	0	True				
ANR	1222401	CallExpression	"ONIGENC_IS_CODE_XDIGIT ( enc , c2 )"		1221816	0					
ANR	1222402	Callee	ONIGENC_IS_CODE_XDIGIT		1221816	0					
ANR	1222403	Identifier	ONIGENC_IS_CODE_XDIGIT		1221816	0					
ANR	1222404	ArgumentList	enc		1221816	1					
ANR	1222405	Argument	enc		1221816	0					
ANR	1222406	Identifier	enc		1221816	0					
ANR	1222407	Argument	c2		1221816	1					
ANR	1222408	Identifier	c2		1221816	0					
ANR	1222409	ReturnStatement	return ONIGERR_TOO_LONG_WIDE_CHAR_VALUE ;	3019:12:64679:64718	1221816	1	True				
ANR	1222410	Identifier	ONIGERR_TOO_LONG_WIDE_CHAR_VALUE		1221816	0					
ANR	1222411	IfStatement	"if ( p > prev + enclen ( enc , prev ) && ! PEND && ( PPEEK_IS ( '}' ) ) )"		1221816	4					
ANR	1222412	Condition	"p > prev + enclen ( enc , prev ) && ! PEND && ( PPEEK_IS ( '}' ) )"	3022:5:64736:64791	1221816	0	True				
ANR	1222413	AndExpression	"p > prev + enclen ( enc , prev ) && ! PEND && ( PPEEK_IS ( '}' ) )"		1221816	0		&&			
ANR	1222414	RelationalExpression	"p > prev + enclen ( enc , prev )"		1221816	0		>			
ANR	1222415	Identifier	p		1221816	0					
ANR	1222416	AdditiveExpression	"prev + enclen ( enc , prev )"		1221816	1		+			
ANR	1222417	Identifier	prev		1221816	0					
ANR	1222418	CallExpression	"enclen ( enc , prev )"		1221816	1					
ANR	1222419	Callee	enclen		1221816	0					
ANR	1222420	Identifier	enclen		1221816	0					
ANR	1222421	ArgumentList	enc		1221816	1					
ANR	1222422	Argument	enc		1221816	0					
ANR	1222423	Identifier	enc		1221816	0					
ANR	1222424	Argument	prev		1221816	1					
ANR	1222425	Identifier	prev		1221816	0					
ANR	1222426	AndExpression	! PEND && ( PPEEK_IS ( '}' ) )		1221816	1		&&			
ANR	1222427	UnaryOperationExpression	! PEND		1221816	0					
ANR	1222428	UnaryOperator	!		1221816	0					
ANR	1222429	Identifier	PEND		1221816	1					
ANR	1222430	CallExpression	PPEEK_IS ( '}' )		1221816	1					
ANR	1222431	Callee	PPEEK_IS		1221816	0					
ANR	1222432	Identifier	PPEEK_IS		1221816	0					
ANR	1222433	ArgumentList	'}'		1221816	1					
ANR	1222434	Argument	'}'		1221816	0					
ANR	1222435	PrimaryExpression	'}'		1221816	0					
ANR	1222436	CompoundStatement		114:63:2749:2749	1221816	1					
ANR	1222437	ExpressionStatement	PINC	3023:3:64799:64803	1221816	0	True				
ANR	1222438	Identifier	PINC		1221816	0					
ANR	1222439	ExpressionStatement	tok -> type = TK_CODE_POINT	3024:3:64808:64835	1221816	1	True				
ANR	1222440	AssignmentExpression	tok -> type = TK_CODE_POINT		1221816	0		=			
ANR	1222441	PtrMemberAccess	tok -> type		1221816	0					
ANR	1222442	Identifier	tok		1221816	0					
ANR	1222443	Identifier	type		1221816	1					
ANR	1222444	Identifier	TK_CODE_POINT		1221816	1					
ANR	1222445	ExpressionStatement	tok -> base = 16	3025:3:64840:64856	1221816	2	True				
ANR	1222446	AssignmentExpression	tok -> base = 16		1221816	0		=			
ANR	1222447	PtrMemberAccess	tok -> base		1221816	0					
ANR	1222448	Identifier	tok		1221816	0					
ANR	1222449	Identifier	base		1221816	1					
ANR	1222450	PrimaryExpression	16		1221816	1					
ANR	1222451	ExpressionStatement	tok -> u . code = ( OnigCodePoint ) num	3026:3:64861:64894	1221816	3	True				
ANR	1222452	AssignmentExpression	tok -> u . code = ( OnigCodePoint ) num		1221816	0		=			
ANR	1222453	MemberAccess	tok -> u . code		1221816	0					
ANR	1222454	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222455	Identifier	tok		1221816	0					
ANR	1222456	Identifier	u		1221816	1					
ANR	1222457	Identifier	code		1221816	1					
ANR	1222458	CastExpression	( OnigCodePoint ) num		1221816	1					
ANR	1222459	CastTarget	OnigCodePoint		1221816	0					
ANR	1222460	Identifier	num		1221816	1					
ANR	1222461	ElseStatement	else		1221816	0					
ANR	1222462	CompoundStatement		120:6:2860:2860	1221816	0					
ANR	1222463	ExpressionStatement	p = prev	3030:3:64956:64964	1221816	0	True				
ANR	1222464	AssignmentExpression	p = prev		1221816	0		=			
ANR	1222465	Identifier	p		1221816	0					
ANR	1222466	Identifier	prev		1221816	1					
ANR	1222467	ElseStatement	else		1221816	0					
ANR	1222468	IfStatement	"if ( IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_HEX2 ) )"		1221816	0					
ANR	1222469	Condition	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_HEX2 )"	3033:15:64992:65032	1221816	0	True				
ANR	1222470	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_HEX2 )"		1221816	0					
ANR	1222471	Callee	IS_SYNTAX_OP		1221816	0					
ANR	1222472	Identifier	IS_SYNTAX_OP		1221816	0					
ANR	1222473	ArgumentList	syn		1221816	1					
ANR	1222474	Argument	syn		1221816	0					
ANR	1222475	Identifier	syn		1221816	0					
ANR	1222476	Argument	ONIG_SYN_OP_ESC_X_HEX2		1221816	1					
ANR	1222477	Identifier	ONIG_SYN_OP_ESC_X_HEX2		1221816	0					
ANR	1222478	CompoundStatement		125:58:2990:2990	1221816	1					
ANR	1222479	ExpressionStatement	"num = scan_unsigned_hexadecimal_number ( & p , end , 2 , enc )"	3034:1:65038:65093	1221816	0	True				
ANR	1222480	AssignmentExpression	"num = scan_unsigned_hexadecimal_number ( & p , end , 2 , enc )"		1221816	0		=			
ANR	1222481	Identifier	num		1221816	0					
ANR	1222482	CallExpression	"scan_unsigned_hexadecimal_number ( & p , end , 2 , enc )"		1221816	1					
ANR	1222483	Callee	scan_unsigned_hexadecimal_number		1221816	0					
ANR	1222484	Identifier	scan_unsigned_hexadecimal_number		1221816	0					
ANR	1222485	ArgumentList	& p		1221816	1					
ANR	1222486	Argument	& p		1221816	0					
ANR	1222487	UnaryOperationExpression	& p		1221816	0					
ANR	1222488	UnaryOperator	&		1221816	0					
ANR	1222489	Identifier	p		1221816	1					
ANR	1222490	Argument	end		1221816	1					
ANR	1222491	Identifier	end		1221816	0					
ANR	1222492	Argument	2		1221816	2					
ANR	1222493	PrimaryExpression	2		1221816	0					
ANR	1222494	Argument	enc		1221816	3					
ANR	1222495	Identifier	enc		1221816	0					
ANR	1222496	IfStatement	if ( num < 0 )		1221816	1					
ANR	1222497	Condition	num < 0	3035:5:65100:65106	1221816	0	True				
ANR	1222498	RelationalExpression	num < 0		1221816	0		<			
ANR	1222499	Identifier	num		1221816	0					
ANR	1222500	PrimaryExpression	0		1221816	1					
ANR	1222501	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	3035:14:65109:65138	1221816	1	True				
ANR	1222502	Identifier	ONIGERR_TOO_BIG_NUMBER		1221816	0					
ANR	1222503	IfStatement	if ( p == prev )		1221816	2					
ANR	1222504	Condition	p == prev	3036:5:65145:65153	1221816	0	True				
ANR	1222505	EqualityExpression	p == prev		1221816	0		==			
ANR	1222506	Identifier	p		1221816	0					
ANR	1222507	Identifier	prev		1221816	1					
ANR	1222508	CompoundStatement		128:16:3111:3111	1221816	1					
ANR	1222509	ExpressionStatement	num = 0	3037:3:65188:65195	1221816	0	True				
ANR	1222510	AssignmentExpression	num = 0		1221816	0		=			
ANR	1222511	Identifier	num		1221816	0					
ANR	1222512	PrimaryExpression	0		1221816	1					
ANR	1222513	ExpressionStatement	tok -> type = TK_RAW_BYTE	3039:1:65227:65250	1221816	3	True				
ANR	1222514	AssignmentExpression	tok -> type = TK_RAW_BYTE		1221816	0		=			
ANR	1222515	PtrMemberAccess	tok -> type		1221816	0					
ANR	1222516	Identifier	tok		1221816	0					
ANR	1222517	Identifier	type		1221816	1					
ANR	1222518	Identifier	TK_RAW_BYTE		1221816	1					
ANR	1222519	ExpressionStatement	tok -> base = 16	3040:1:65253:65267	1221816	4	True				
ANR	1222520	AssignmentExpression	tok -> base = 16		1221816	0		=			
ANR	1222521	PtrMemberAccess	tok -> base		1221816	0					
ANR	1222522	Identifier	tok		1221816	0					
ANR	1222523	Identifier	base		1221816	1					
ANR	1222524	PrimaryExpression	16		1221816	1					
ANR	1222525	ExpressionStatement	tok -> u . c = num	3041:1:65270:65285	1221816	5	True				
ANR	1222526	AssignmentExpression	tok -> u . c = num		1221816	0		=			
ANR	1222527	MemberAccess	tok -> u . c		1221816	0					
ANR	1222528	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222529	Identifier	tok		1221816	0					
ANR	1222530	Identifier	u		1221816	1					
ANR	1222531	Identifier	c		1221816	1					
ANR	1222532	Identifier	num		1221816	1					
ANR	1222533	BreakStatement	break ;	3043:6:65301:65306	1221816	51	True				
ANR	1222534	Label	case 'u' :	3045:4:65313:65321	1221816	52	True				
ANR	1222535	IfStatement	if ( PEND )		1221816	53					
ANR	1222536	Condition	PEND	3046:10:65333:65336	1221816	0	True				
ANR	1222537	Identifier	PEND		1221816	0					
ANR	1222538	BreakStatement	break ;	3046:16:65339:65344	1221816	1	True				
ANR	1222539	ExpressionStatement	prev = p	3048:6:65353:65361	1221816	54	True				
ANR	1222540	AssignmentExpression	prev = p		1221816	0		=			
ANR	1222541	Identifier	prev		1221816	0					
ANR	1222542	Identifier	p		1221816	1					
ANR	1222543	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_U_HEX4 ) )"		1221816	55					
ANR	1222544	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_U_HEX4 )"	3049:10:65373:65415	1221816	0	True				
ANR	1222545	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_U_HEX4 )"		1221816	0					
ANR	1222546	Callee	IS_SYNTAX_OP2		1221816	0					
ANR	1222547	Identifier	IS_SYNTAX_OP2		1221816	0					
ANR	1222548	ArgumentList	syn		1221816	1					
ANR	1222549	Argument	syn		1221816	0					
ANR	1222550	Identifier	syn		1221816	0					
ANR	1222551	Argument	ONIG_SYN_OP2_ESC_U_HEX4		1221816	1					
ANR	1222552	Identifier	ONIG_SYN_OP2_ESC_U_HEX4		1221816	0					
ANR	1222553	CompoundStatement		141:55:3373:3373	1221816	1					
ANR	1222554	ExpressionStatement	"num = scan_unsigned_hexadecimal_number ( & p , end , 4 , enc )"	3050:1:65421:65476	1221816	0	True				
ANR	1222555	AssignmentExpression	"num = scan_unsigned_hexadecimal_number ( & p , end , 4 , enc )"		1221816	0		=			
ANR	1222556	Identifier	num		1221816	0					
ANR	1222557	CallExpression	"scan_unsigned_hexadecimal_number ( & p , end , 4 , enc )"		1221816	1					
ANR	1222558	Callee	scan_unsigned_hexadecimal_number		1221816	0					
ANR	1222559	Identifier	scan_unsigned_hexadecimal_number		1221816	0					
ANR	1222560	ArgumentList	& p		1221816	1					
ANR	1222561	Argument	& p		1221816	0					
ANR	1222562	UnaryOperationExpression	& p		1221816	0					
ANR	1222563	UnaryOperator	&		1221816	0					
ANR	1222564	Identifier	p		1221816	1					
ANR	1222565	Argument	end		1221816	1					
ANR	1222566	Identifier	end		1221816	0					
ANR	1222567	Argument	4		1221816	2					
ANR	1222568	PrimaryExpression	4		1221816	0					
ANR	1222569	Argument	enc		1221816	3					
ANR	1222570	Identifier	enc		1221816	0					
ANR	1222571	IfStatement	if ( num < 0 )		1221816	1					
ANR	1222572	Condition	num < 0	3051:5:65483:65489	1221816	0	True				
ANR	1222573	RelationalExpression	num < 0		1221816	0		<			
ANR	1222574	Identifier	num		1221816	0					
ANR	1222575	PrimaryExpression	0		1221816	1					
ANR	1222576	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	3051:14:65492:65521	1221816	1	True				
ANR	1222577	Identifier	ONIGERR_TOO_BIG_NUMBER		1221816	0					
ANR	1222578	IfStatement	if ( p == prev )		1221816	2					
ANR	1222579	Condition	p == prev	3052:5:65528:65536	1221816	0	True				
ANR	1222580	EqualityExpression	p == prev		1221816	0		==			
ANR	1222581	Identifier	p		1221816	0					
ANR	1222582	Identifier	prev		1221816	1					
ANR	1222583	CompoundStatement		144:16:3494:3494	1221816	1					
ANR	1222584	ExpressionStatement	num = 0	3053:3:65571:65578	1221816	0	True				
ANR	1222585	AssignmentExpression	num = 0		1221816	0		=			
ANR	1222586	Identifier	num		1221816	0					
ANR	1222587	PrimaryExpression	0		1221816	1					
ANR	1222588	ExpressionStatement	tok -> type = TK_CODE_POINT	3055:1:65610:65637	1221816	3	True				
ANR	1222589	AssignmentExpression	tok -> type = TK_CODE_POINT		1221816	0		=			
ANR	1222590	PtrMemberAccess	tok -> type		1221816	0					
ANR	1222591	Identifier	tok		1221816	0					
ANR	1222592	Identifier	type		1221816	1					
ANR	1222593	Identifier	TK_CODE_POINT		1221816	1					
ANR	1222594	ExpressionStatement	tok -> base = 16	3056:1:65640:65656	1221816	4	True				
ANR	1222595	AssignmentExpression	tok -> base = 16		1221816	0		=			
ANR	1222596	PtrMemberAccess	tok -> base		1221816	0					
ANR	1222597	Identifier	tok		1221816	0					
ANR	1222598	Identifier	base		1221816	1					
ANR	1222599	PrimaryExpression	16		1221816	1					
ANR	1222600	ExpressionStatement	tok -> u . code = ( OnigCodePoint ) num	3057:1:65659:65692	1221816	5	True				
ANR	1222601	AssignmentExpression	tok -> u . code = ( OnigCodePoint ) num		1221816	0		=			
ANR	1222602	MemberAccess	tok -> u . code		1221816	0					
ANR	1222603	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222604	Identifier	tok		1221816	0					
ANR	1222605	Identifier	u		1221816	1					
ANR	1222606	Identifier	code		1221816	1					
ANR	1222607	CastExpression	( OnigCodePoint ) num		1221816	1					
ANR	1222608	CastTarget	OnigCodePoint		1221816	0					
ANR	1222609	Identifier	num		1221816	1					
ANR	1222610	BreakStatement	break ;	3059:6:65708:65713	1221816	56	True				
ANR	1222611	Label	case '0' :	3061:4:65720:65728	1221816	57	True				
ANR	1222612	Label	case '1' :	3062:4:65734:65742	1221816	58	True				
ANR	1222613	Label	case '2' :	3062:14:65744:65752	1221816	59	True				
ANR	1222614	Label	case '3' :	3062:24:65754:65762	1221816	60	True				
ANR	1222615	Label	case '4' :	3062:34:65764:65772	1221816	61	True				
ANR	1222616	Label	case '5' :	3062:44:65774:65782	1221816	62	True				
ANR	1222617	Label	case '6' :	3062:54:65784:65792	1221816	63	True				
ANR	1222618	Label	case '7' :	3062:64:65794:65802	1221816	64	True				
ANR	1222619	IfStatement	"if ( IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_OCTAL3 ) )"		1221816	65					
ANR	1222620	Condition	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_OCTAL3 )"	3063:10:65814:65854	1221816	0	True				
ANR	1222621	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_OCTAL3 )"		1221816	0					
ANR	1222622	Callee	IS_SYNTAX_OP		1221816	0					
ANR	1222623	Identifier	IS_SYNTAX_OP		1221816	0					
ANR	1222624	ArgumentList	syn		1221816	1					
ANR	1222625	Argument	syn		1221816	0					
ANR	1222626	Identifier	syn		1221816	0					
ANR	1222627	Argument	ONIG_SYN_OP_ESC_OCTAL3		1221816	1					
ANR	1222628	Identifier	ONIG_SYN_OP_ESC_OCTAL3		1221816	0					
ANR	1222629	CompoundStatement		155:53:3812:3812	1221816	1					
ANR	1222630	ExpressionStatement	PUNFETCH	3064:1:65860:65868	1221816	0	True				
ANR	1222631	Identifier	PUNFETCH		1221816	0					
ANR	1222632	ExpressionStatement	prev = p	3065:1:65871:65879	1221816	1	True				
ANR	1222633	AssignmentExpression	prev = p		1221816	0		=			
ANR	1222634	Identifier	prev		1221816	0					
ANR	1222635	Identifier	p		1221816	1					
ANR	1222636	ExpressionStatement	"num = scan_unsigned_octal_number ( & p , end , 3 , enc )"	3066:1:65882:65931	1221816	2	True				
ANR	1222637	AssignmentExpression	"num = scan_unsigned_octal_number ( & p , end , 3 , enc )"		1221816	0		=			
ANR	1222638	Identifier	num		1221816	0					
ANR	1222639	CallExpression	"scan_unsigned_octal_number ( & p , end , 3 , enc )"		1221816	1					
ANR	1222640	Callee	scan_unsigned_octal_number		1221816	0					
ANR	1222641	Identifier	scan_unsigned_octal_number		1221816	0					
ANR	1222642	ArgumentList	& p		1221816	1					
ANR	1222643	Argument	& p		1221816	0					
ANR	1222644	UnaryOperationExpression	& p		1221816	0					
ANR	1222645	UnaryOperator	&		1221816	0					
ANR	1222646	Identifier	p		1221816	1					
ANR	1222647	Argument	end		1221816	1					
ANR	1222648	Identifier	end		1221816	0					
ANR	1222649	Argument	3		1221816	2					
ANR	1222650	PrimaryExpression	3		1221816	0					
ANR	1222651	Argument	enc		1221816	3					
ANR	1222652	Identifier	enc		1221816	0					
ANR	1222653	IfStatement	if ( num < 0 )		1221816	3					
ANR	1222654	Condition	num < 0	3067:5:65938:65944	1221816	0	True				
ANR	1222655	RelationalExpression	num < 0		1221816	0		<			
ANR	1222656	Identifier	num		1221816	0					
ANR	1222657	PrimaryExpression	0		1221816	1					
ANR	1222658	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	3067:14:65947:65976	1221816	1	True				
ANR	1222659	Identifier	ONIGERR_TOO_BIG_NUMBER		1221816	0					
ANR	1222660	IfStatement	if ( p == prev )		1221816	4					
ANR	1222661	Condition	p == prev	3068:5:65983:65991	1221816	0	True				
ANR	1222662	EqualityExpression	p == prev		1221816	0		==			
ANR	1222663	Identifier	p		1221816	0					
ANR	1222664	Identifier	prev		1221816	1					
ANR	1222665	CompoundStatement		160:16:3949:3949	1221816	1					
ANR	1222666	ExpressionStatement	num = 0	3069:3:66026:66033	1221816	0	True				
ANR	1222667	AssignmentExpression	num = 0		1221816	0		=			
ANR	1222668	Identifier	num		1221816	0					
ANR	1222669	PrimaryExpression	0		1221816	1					
ANR	1222670	ExpressionStatement	tok -> type = TK_RAW_BYTE	3071:1:66065:66088	1221816	5	True				
ANR	1222671	AssignmentExpression	tok -> type = TK_RAW_BYTE		1221816	0		=			
ANR	1222672	PtrMemberAccess	tok -> type		1221816	0					
ANR	1222673	Identifier	tok		1221816	0					
ANR	1222674	Identifier	type		1221816	1					
ANR	1222675	Identifier	TK_RAW_BYTE		1221816	1					
ANR	1222676	ExpressionStatement	tok -> base = 8	3072:1:66091:66104	1221816	6	True				
ANR	1222677	AssignmentExpression	tok -> base = 8		1221816	0		=			
ANR	1222678	PtrMemberAccess	tok -> base		1221816	0					
ANR	1222679	Identifier	tok		1221816	0					
ANR	1222680	Identifier	base		1221816	1					
ANR	1222681	PrimaryExpression	8		1221816	1					
ANR	1222682	ExpressionStatement	tok -> u . c = num	3073:1:66107:66122	1221816	7	True				
ANR	1222683	AssignmentExpression	tok -> u . c = num		1221816	0		=			
ANR	1222684	MemberAccess	tok -> u . c		1221816	0					
ANR	1222685	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222686	Identifier	tok		1221816	0					
ANR	1222687	Identifier	u		1221816	1					
ANR	1222688	Identifier	c		1221816	1					
ANR	1222689	Identifier	num		1221816	1					
ANR	1222690	BreakStatement	break ;	3075:6:66138:66143	1221816	66	True				
ANR	1222691	Label	default :	3077:4:66150:66157	1221816	67	True				
ANR	1222692	Identifier	default		1221816	0					
ANR	1222693	ExpressionStatement	PUNFETCH	3078:6:66165:66173	1221816	68	True				
ANR	1222694	Identifier	PUNFETCH		1221816	0					
ANR	1222695	ExpressionStatement	"num = fetch_escaped_value ( & p , end , env )"	3079:6:66181:66220	1221816	69	True				
ANR	1222696	AssignmentExpression	"num = fetch_escaped_value ( & p , end , env )"		1221816	0		=			
ANR	1222697	Identifier	num		1221816	0					
ANR	1222698	CallExpression	"fetch_escaped_value ( & p , end , env )"		1221816	1					
ANR	1222699	Callee	fetch_escaped_value		1221816	0					
ANR	1222700	Identifier	fetch_escaped_value		1221816	0					
ANR	1222701	ArgumentList	& p		1221816	1					
ANR	1222702	Argument	& p		1221816	0					
ANR	1222703	UnaryOperationExpression	& p		1221816	0					
ANR	1222704	UnaryOperator	&		1221816	0					
ANR	1222705	Identifier	p		1221816	1					
ANR	1222706	Argument	end		1221816	1					
ANR	1222707	Identifier	end		1221816	0					
ANR	1222708	Argument	env		1221816	2					
ANR	1222709	Identifier	env		1221816	0					
ANR	1222710	IfStatement	if ( num < 0 )		1221816	70					
ANR	1222711	Condition	num < 0	3080:10:66232:66238	1221816	0	True				
ANR	1222712	RelationalExpression	num < 0		1221816	0		<			
ANR	1222713	Identifier	num		1221816	0					
ANR	1222714	PrimaryExpression	0		1221816	1					
ANR	1222715	ReturnStatement	return num ;	3080:19:66241:66251	1221816	1	True				
ANR	1222716	Identifier	num		1221816	0					
ANR	1222717	IfStatement	if ( tok -> u . c != num )		1221816	71					
ANR	1222718	Condition	tok -> u . c != num	3081:10:66263:66277	1221816	0	True				
ANR	1222719	EqualityExpression	tok -> u . c != num		1221816	0		!=			
ANR	1222720	MemberAccess	tok -> u . c		1221816	0					
ANR	1222721	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222722	Identifier	tok		1221816	0					
ANR	1222723	Identifier	u		1221816	1					
ANR	1222724	Identifier	c		1221816	1					
ANR	1222725	Identifier	num		1221816	1					
ANR	1222726	CompoundStatement		173:27:4235:4235	1221816	1					
ANR	1222727	ExpressionStatement	tok -> u . code = ( OnigCodePoint ) num	3082:1:66283:66316	1221816	0	True				
ANR	1222728	AssignmentExpression	tok -> u . code = ( OnigCodePoint ) num		1221816	0		=			
ANR	1222729	MemberAccess	tok -> u . code		1221816	0					
ANR	1222730	PtrMemberAccess	tok -> u		1221816	0					
ANR	1222731	Identifier	tok		1221816	0					
ANR	1222732	Identifier	u		1221816	1					
ANR	1222733	Identifier	code		1221816	1					
ANR	1222734	CastExpression	( OnigCodePoint ) num		1221816	1					
ANR	1222735	CastTarget	OnigCodePoint		1221816	0					
ANR	1222736	Identifier	num		1221816	1					
ANR	1222737	ExpressionStatement	tok -> type = TK_CODE_POINT	3083:1:66319:66346	1221816	1	True				
ANR	1222738	AssignmentExpression	tok -> type = TK_CODE_POINT		1221816	0		=			
ANR	1222739	PtrMemberAccess	tok -> type		1221816	0					
ANR	1222740	Identifier	tok		1221816	0					
ANR	1222741	Identifier	type		1221816	1					
ANR	1222742	Identifier	TK_CODE_POINT		1221816	1					
ANR	1222743	BreakStatement	break ;	3085:6:66362:66367	1221816	72	True				
ANR	1222744	ElseStatement	else		1221816	0					
ANR	1222745	IfStatement	if ( c == '[' )		1221816	0					
ANR	1222746	Condition	c == '['	3088:11:66390:66397	1221816	0	True				
ANR	1222747	EqualityExpression	c == '['		1221816	0		==			
ANR	1222748	Identifier	c		1221816	0					
ANR	1222749	PrimaryExpression	'['		1221816	1					
ANR	1222750	CompoundStatement		180:21:4355:4355	1221816	1					
ANR	1222751	IfStatement	"if ( IS_SYNTAX_OP ( syn , ONIG_SYN_OP_POSIX_BRACKET ) && ( PPEEK_IS ( ':' ) ) )"		1221816	0					
ANR	1222752	Condition	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_POSIX_BRACKET ) && ( PPEEK_IS ( ':' ) )"	3089:8:66410:66472	1221816	0	True				
ANR	1222753	AndExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_POSIX_BRACKET ) && ( PPEEK_IS ( ':' ) )"		1221816	0		&&			
ANR	1222754	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_POSIX_BRACKET )"		1221816	0					
ANR	1222755	Callee	IS_SYNTAX_OP		1221816	0					
ANR	1222756	Identifier	IS_SYNTAX_OP		1221816	0					
ANR	1222757	ArgumentList	syn		1221816	1					
ANR	1222758	Argument	syn		1221816	0					
ANR	1222759	Identifier	syn		1221816	0					
ANR	1222760	Argument	ONIG_SYN_OP_POSIX_BRACKET		1221816	1					
ANR	1222761	Identifier	ONIG_SYN_OP_POSIX_BRACKET		1221816	0					
ANR	1222762	CallExpression	PPEEK_IS ( ':' )		1221816	1					
ANR	1222763	Callee	PPEEK_IS		1221816	0					
ANR	1222764	Identifier	PPEEK_IS		1221816	0					
ANR	1222765	ArgumentList	':'		1221816	1					
ANR	1222766	Argument	':'		1221816	0					
ANR	1222767	PrimaryExpression	':'		1221816	0					
ANR	1222768	CompoundStatement		182:6:4438:4505	1221816	1					
ANR	1222769	IdentifierDeclStatement	"OnigCodePoint send [ ] = { ( OnigCodePoint ) ':' , ( OnigCodePoint ) ']' } ;"	3090:6:66483:66550	1221816	0	True				
ANR	1222770	IdentifierDecl	"send [ ] = { ( OnigCodePoint ) ':' , ( OnigCodePoint ) ']' }"		1221816	0					
ANR	1222771	IdentifierDeclType	OnigCodePoint [ ]		1221816	0					
ANR	1222772	Identifier	send		1221816	1					
ANR	1222773	AssignmentExpression	"send [ ] = { ( OnigCodePoint ) ':' , ( OnigCodePoint ) ']' }"		1221816	2		=			
ANR	1222774	Identifier	send		1221816	0					
ANR	1222775	InitializerList	( OnigCodePoint ) ':'		1221816	1					
ANR	1222776	CastExpression	( OnigCodePoint ) ':'		1221816	0					
ANR	1222777	CastTarget	OnigCodePoint		1221816	0					
ANR	1222778	PrimaryExpression	':'		1221816	1					
ANR	1222779	CastExpression	( OnigCodePoint ) ']'		1221816	1					
ANR	1222780	CastTarget	OnigCodePoint		1221816	0					
ANR	1222781	PrimaryExpression	']'		1221816	1					
ANR	1222782	ExpressionStatement	tok -> backp = p	3091:6:66558:66572	1221816	1	True				
ANR	1222783	AssignmentExpression	tok -> backp = p		1221816	0		=			
ANR	1222784	PtrMemberAccess	tok -> backp		1221816	0					
ANR	1222785	Identifier	tok		1221816	0					
ANR	1222786	Identifier	backp		1221816	1					
ANR	1222787	Identifier	p		1221816	1					
ANR	1222788	ExpressionStatement	PINC	3092:6:66609:66613	1221816	2	True				
ANR	1222789	Identifier	PINC		1221816	0					
ANR	1222790	IfStatement	"if ( str_exist_check_with_esc ( send , 2 , p , end , ( OnigCodePoint ) ']' , enc , syn ) )"		1221816	3					
ANR	1222791	Condition	"str_exist_check_with_esc ( send , 2 , p , end , ( OnigCodePoint ) ']' , enc , syn )"	3093:10:66625:66731	1221816	0	True				
ANR	1222792	CallExpression	"str_exist_check_with_esc ( send , 2 , p , end , ( OnigCodePoint ) ']' , enc , syn )"		1221816	0					
ANR	1222793	Callee	str_exist_check_with_esc		1221816	0					
ANR	1222794	Identifier	str_exist_check_with_esc		1221816	0					
ANR	1222795	ArgumentList	send		1221816	1					
ANR	1222796	Argument	send		1221816	0					
ANR	1222797	Identifier	send		1221816	0					
ANR	1222798	Argument	2		1221816	1					
ANR	1222799	PrimaryExpression	2		1221816	0					
ANR	1222800	Argument	p		1221816	2					
ANR	1222801	Identifier	p		1221816	0					
ANR	1222802	Argument	end		1221816	3					
ANR	1222803	Identifier	end		1221816	0					
ANR	1222804	Argument	( OnigCodePoint ) ']'		1221816	4					
ANR	1222805	CastExpression	( OnigCodePoint ) ']'		1221816	0					
ANR	1222806	CastTarget	OnigCodePoint		1221816	0					
ANR	1222807	PrimaryExpression	']'		1221816	1					
ANR	1222808	Argument	enc		1221816	5					
ANR	1222809	Identifier	enc		1221816	0					
ANR	1222810	Argument	syn		1221816	6					
ANR	1222811	Identifier	syn		1221816	0					
ANR	1222812	CompoundStatement		186:67:4689:4689	1221816	1					
ANR	1222813	ExpressionStatement	tok -> type = TK_POSIX_BRACKET_OPEN	3095:1:66737:66770	1221816	0	True				
ANR	1222814	AssignmentExpression	tok -> type = TK_POSIX_BRACKET_OPEN		1221816	0		=			
ANR	1222815	PtrMemberAccess	tok -> type		1221816	0					
ANR	1222816	Identifier	tok		1221816	0					
ANR	1222817	Identifier	type		1221816	1					
ANR	1222818	Identifier	TK_POSIX_BRACKET_OPEN		1221816	1					
ANR	1222819	ElseStatement	else		1221816	0					
ANR	1222820	CompoundStatement		189:11:4746:4746	1221816	0					
ANR	1222821	ExpressionStatement	PUNFETCH	3098:1:66794:66802	1221816	0	True				
ANR	1222822	Identifier	PUNFETCH		1221816	0					
ANR	1222823	GotoStatement	goto cc_in_cc ;	3099:1:66805:66818	1221816	1	True				
ANR	1222824	Identifier	cc_in_cc		1221816	0					
ANR	1222825	ElseStatement	else		1221816	0					
ANR	1222826	CompoundStatement		194:9:4798:4798	1221816	0					
ANR	1222827	Label	cc_in_cc :	3103:4:66849:66857	1221816	0	True				
ANR	1222828	Identifier	cc_in_cc		1221816	0					
ANR	1222829	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP ) )"		1221816	1					
ANR	1222830	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP )"	3104:10:66869:66914	1221816	0	True				
ANR	1222831	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP )"		1221816	0					
ANR	1222832	Callee	IS_SYNTAX_OP2		1221816	0					
ANR	1222833	Identifier	IS_SYNTAX_OP2		1221816	0					
ANR	1222834	ArgumentList	syn		1221816	1					
ANR	1222835	Argument	syn		1221816	0					
ANR	1222836	Identifier	syn		1221816	0					
ANR	1222837	Argument	ONIG_SYN_OP2_CCLASS_SET_OP		1221816	1					
ANR	1222838	Identifier	ONIG_SYN_OP2_CCLASS_SET_OP		1221816	0					
ANR	1222839	CompoundStatement		196:58:4872:4872	1221816	1					
ANR	1222840	ExpressionStatement	tok -> type = TK_CC_CC_OPEN	3105:1:66920:66945	1221816	0	True				
ANR	1222841	AssignmentExpression	tok -> type = TK_CC_CC_OPEN		1221816	0		=			
ANR	1222842	PtrMemberAccess	tok -> type		1221816	0					
ANR	1222843	Identifier	tok		1221816	0					
ANR	1222844	Identifier	type		1221816	1					
ANR	1222845	Identifier	TK_CC_CC_OPEN		1221816	1					
ANR	1222846	ElseStatement	else		1221816	0					
ANR	1222847	CompoundStatement		199:11:4921:4921	1221816	0					
ANR	1222848	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""["" )"	3108:1:66969:66999	1221816	0	True				
ANR	1222849	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""["" )"		1221816	0					
ANR	1222850	Callee	CC_ESC_WARN		1221816	0					
ANR	1222851	Identifier	CC_ESC_WARN		1221816	0					
ANR	1222852	ArgumentList	env		1221816	1					
ANR	1222853	Argument	env		1221816	0					
ANR	1222854	Identifier	env		1221816	0					
ANR	1222855	Argument	"( UChar * ) ""["""		1221816	1					
ANR	1222856	CastExpression	"( UChar * ) ""["""		1221816	0					
ANR	1222857	CastTarget	UChar *		1221816	0					
ANR	1222858	PrimaryExpression	"""["""		1221816	1					
ANR	1222859	ElseStatement	else		1221816	0					
ANR	1222860	IfStatement	if ( c == '&' )		1221816	0					
ANR	1222861	Condition	c == '&'	3112:11:67030:67037	1221816	0	True				
ANR	1222862	EqualityExpression	c == '&'		1221816	0		==			
ANR	1222863	Identifier	c		1221816	0					
ANR	1222864	PrimaryExpression	'&'		1221816	1					
ANR	1222865	CompoundStatement		204:21:4995:4995	1221816	1					
ANR	1222866	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP ) && ! PEND && ( PPEEK_IS ( '&' ) ) )"		1221816	0					
ANR	1222867	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP ) && ! PEND && ( PPEEK_IS ( '&' ) )"	3113:8:67050:67124	1221816	0	True				
ANR	1222868	AndExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP ) && ! PEND && ( PPEEK_IS ( '&' ) )"		1221816	0		&&			
ANR	1222869	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_CCLASS_SET_OP )"		1221816	0					
ANR	1222870	Callee	IS_SYNTAX_OP2		1221816	0					
ANR	1222871	Identifier	IS_SYNTAX_OP2		1221816	0					
ANR	1222872	ArgumentList	syn		1221816	1					
ANR	1222873	Argument	syn		1221816	0					
ANR	1222874	Identifier	syn		1221816	0					
ANR	1222875	Argument	ONIG_SYN_OP2_CCLASS_SET_OP		1221816	1					
ANR	1222876	Identifier	ONIG_SYN_OP2_CCLASS_SET_OP		1221816	0					
ANR	1222877	AndExpression	! PEND && ( PPEEK_IS ( '&' ) )		1221816	1		&&			
ANR	1222878	UnaryOperationExpression	! PEND		1221816	0					
ANR	1222879	UnaryOperator	!		1221816	0					
ANR	1222880	Identifier	PEND		1221816	1					
ANR	1222881	CallExpression	PPEEK_IS ( '&' )		1221816	1					
ANR	1222882	Callee	PPEEK_IS		1221816	0					
ANR	1222883	Identifier	PPEEK_IS		1221816	0					
ANR	1222884	ArgumentList	'&'		1221816	1					
ANR	1222885	Argument	'&'		1221816	0					
ANR	1222886	PrimaryExpression	'&'		1221816	0					
ANR	1222887	CompoundStatement		206:27:5082:5082	1221816	1					
ANR	1222888	ExpressionStatement	PINC	3115:6:67135:67139	1221816	0	True				
ANR	1222889	Identifier	PINC		1221816	0					
ANR	1222890	ExpressionStatement	tok -> type = TK_CC_AND	3116:6:67147:67168	1221816	1	True				
ANR	1222891	AssignmentExpression	tok -> type = TK_CC_AND		1221816	0		=			
ANR	1222892	PtrMemberAccess	tok -> type		1221816	0					
ANR	1222893	Identifier	tok		1221816	0					
ANR	1222894	Identifier	type		1221816	1					
ANR	1222895	Identifier	TK_CC_AND		1221816	1					
ANR	1222896	Label	end :	3120:1:67182:67185	1221816	14	True				
ANR	1222897	Identifier	end		1221816	0					
ANR	1222898	ExpressionStatement	* src = p	3121:2:67189:67197	1221816	15	True				
ANR	1222899	AssignmentExpression	* src = p		1221816	0		=			
ANR	1222900	UnaryOperationExpression	* src		1221816	0					
ANR	1222901	UnaryOperator	*		1221816	0					
ANR	1222902	Identifier	src		1221816	1					
ANR	1222903	Identifier	p		1221816	1					
ANR	1222904	ReturnStatement	return tok -> type ;	3122:2:67201:67217	1221816	16	True				
ANR	1222905	PtrMemberAccess	tok -> type		1221816	0					
ANR	1222906	Identifier	tok		1221816	0					
ANR	1222907	Identifier	type		1221816	1					
ANR	1222908	ReturnType	static int		1221816	1					
ANR	1222909	Identifier	fetch_token_in_cc		1221816	2					
ANR	1222910	ParameterList	"OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env"		1221816	3					
ANR	1222911	Parameter	OnigToken * tok	2908:18:61989:62002	1221816	0	True				
ANR	1222912	ParameterType	OnigToken *		1221816	0					
ANR	1222913	Identifier	tok		1221816	1					
ANR	1222914	Parameter	UChar * * src	2908:34:62005:62015	1221816	1	True				
ANR	1222915	ParameterType	UChar * *		1221816	0					
ANR	1222916	Identifier	src		1221816	1					
ANR	1222917	Parameter	UChar * end	2908:47:62018:62027	1221816	2	True				
ANR	1222918	ParameterType	UChar *		1221816	0					
ANR	1222919	Identifier	end		1221816	1					
ANR	1222920	Parameter	ScanEnv * env	2908:59:62030:62041	1221816	3	True				
ANR	1222921	ParameterType	ScanEnv *		1221816	0					
ANR	1222922	Identifier	env		1221816	1					
ANR	1222923	CFGEntryNode	ENTRY		1221816		True				
ANR	1222924	CFGExitNode	EXIT		1221816		True				
ANR	1222925	Symbol	ONIG_SYN_OP_ESC_X_HEX2		1221816						
ANR	1222926	Symbol	ONIG_SYN_OP2_ESC_U_HEX4		1221816						
ANR	1222927	Symbol	TK_EOT		1221816						
ANR	1222928	Symbol	num		1221816						
ANR	1222929	Symbol	prev		1221816						
ANR	1222930	Symbol	str_exist_check_with_esc		1221816						
ANR	1222931	Symbol	* src		1221816						
ANR	1222932	Symbol	tok -> type		1221816						
ANR	1222933	Symbol	TK_CC_CLOSE		1221816						
ANR	1222934	Symbol	ONIGENC_CTYPE_SPACE		1221816						
ANR	1222935	Symbol	tok -> u . prop . not		1221816						
ANR	1222936	Symbol	IS_SYNTAX_BV		1221816						
ANR	1222937	Symbol	ONIGERR_TOO_LONG_WIDE_CHAR_VALUE		1221816						
ANR	1222938	Symbol	tok -> escaped		1221816						
ANR	1222939	Symbol	tok -> u . prop		1221816						
ANR	1222940	Symbol	ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY		1221816						
ANR	1222941	Symbol	ONIGENC_IS_CODE_XDIGIT		1221816						
ANR	1222942	Symbol	TK_CODE_POINT		1221816						
ANR	1222943	Symbol	TK_CC_RANGE		1221816						
ANR	1222944	Symbol	PPEEK		1221816						
ANR	1222945	Symbol	ONIG_SYN_OP_POSIX_BRACKET		1221816						
ANR	1222946	Symbol	* env		1221816						
ANR	1222947	Symbol	IS_SYNTAX_OP		1221816						
ANR	1222948	Symbol	ONIGERR_TOO_BIG_WIDE_CHAR_VALUE		1221816						
ANR	1222949	Symbol	TK_POSIX_BRACKET_OPEN		1221816						
ANR	1222950	Symbol	TK_CC_AND		1221816						
ANR	1222951	Symbol	env -> syntax		1221816						
ANR	1222952	Symbol	c2		1221816						
ANR	1222953	Symbol	TK_CHAR_TYPE		1221816						
ANR	1222954	Symbol	ONIG_SYN_OP2_ESC_H_XDIGIT		1221816						
ANR	1222955	Symbol	ONIG_SYN_OP_ESC_X_BRACE_HEX8		1221816						
ANR	1222956	Symbol	* tok		1221816						
ANR	1222957	Symbol	ONIGERR_END_PATTERN_AT_ESCAPE		1221816						
ANR	1222958	Symbol	tok -> u . c		1221816						
ANR	1222959	Symbol	send		1221816						
ANR	1222960	Symbol	TK_CC_CC_OPEN		1221816						
ANR	1222961	Symbol	PPEEK_IS		1221816						
ANR	1222962	Symbol	ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT		1221816						
ANR	1222963	Symbol	ONIG_SYN_BACKSLASH_ESCAPE_IN_CC		1221816						
ANR	1222964	Symbol	syn		1221816						
ANR	1222965	Symbol	env -> enc		1221816						
ANR	1222966	Symbol	PEND		1221816						
ANR	1222967	Symbol	IS_SYNTAX_OP2		1221816						
ANR	1222968	Symbol	tok		1221816						
ANR	1222969	Symbol	tok -> u . code		1221816						
ANR	1222970	Symbol	ONIG_SYN_OP2_CCLASS_SET_OP		1221816						
ANR	1222971	Symbol	end		1221816						
ANR	1222972	Symbol	enc		1221816						
ANR	1222973	Symbol	tok -> u		1221816						
ANR	1222974	Symbol	ONIGENC_CTYPE_XDIGIT		1221816						
ANR	1222975	Symbol	c		1221816						
ANR	1222976	Symbol	ONIGERR_TOO_BIG_NUMBER		1221816						
ANR	1222977	Symbol	src		1221816						
ANR	1222978	Symbol	tok -> backp		1221816						
ANR	1222979	Symbol	ONIGENC_CTYPE_DIGIT		1221816						
ANR	1222980	Symbol	env		1221816						
ANR	1222981	Symbol	MC_ESC		1221816						
ANR	1222982	Symbol	enclen		1221816						
ANR	1222983	Symbol	p		1221816						
ANR	1222984	Symbol	scan_unsigned_octal_number		1221816						
ANR	1222985	Symbol	TK_CHAR_PROPERTY		1221816						
ANR	1222986	Symbol	& p		1221816						
ANR	1222987	Symbol	fetch_escaped_value		1221816						
ANR	1222988	Symbol	ONIG_SYN_OP_ESC_OCTAL3		1221816						
ANR	1222989	Symbol	tok -> u . prop . ctype		1221816						
ANR	1222990	Symbol	ONIGENC_CTYPE_WORD		1221816						
ANR	1222991	Symbol	tok -> base		1221816						
ANR	1222992	Symbol	TK_RAW_BYTE		1221816						
ANR	1222993	Symbol	TK_CHAR		1221816						
ANR	1222994	Symbol	scan_unsigned_hexadecimal_number		1221816						
ANR	1222995	Function	fetch_token	3125:0:67222:82995							
ANR	1222996	FunctionDef	"fetch_token (OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env)"		1222995	0					
ANR	1222997	CompoundStatement		3127:0:67300:82995	1222995	0					
ANR	1222998	IdentifierDeclStatement	"int r , num ;"	3128:2:67304:67314	1222995	0	True				
ANR	1222999	IdentifierDecl	r		1222995	0					
ANR	1223000	IdentifierDeclType	int		1222995	0					
ANR	1223001	Identifier	r		1222995	1					
ANR	1223002	IdentifierDecl	num		1222995	1					
ANR	1223003	IdentifierDeclType	int		1222995	0					
ANR	1223004	Identifier	num		1222995	1					
ANR	1223005	IdentifierDeclStatement	OnigCodePoint c ;	3129:2:67318:67333	1222995	1	True				
ANR	1223006	IdentifierDecl	c		1222995	0					
ANR	1223007	IdentifierDeclType	OnigCodePoint		1222995	0					
ANR	1223008	Identifier	c		1222995	1					
ANR	1223009	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	3130:2:67337:67364	1222995	2	True				
ANR	1223010	IdentifierDecl	enc = env -> enc		1222995	0					
ANR	1223011	IdentifierDeclType	OnigEncoding		1222995	0					
ANR	1223012	Identifier	enc		1222995	1					
ANR	1223013	AssignmentExpression	enc = env -> enc		1222995	2		=			
ANR	1223014	Identifier	enc		1222995	0					
ANR	1223015	PtrMemberAccess	env -> enc		1222995	1					
ANR	1223016	Identifier	env		1222995	0					
ANR	1223017	Identifier	enc		1222995	1					
ANR	1223018	IdentifierDeclStatement	OnigSyntaxType * syn = env -> syntax ;	3131:2:67368:67401	1222995	3	True				
ANR	1223019	IdentifierDecl	* syn = env -> syntax		1222995	0					
ANR	1223020	IdentifierDeclType	OnigSyntaxType *		1222995	0					
ANR	1223021	Identifier	syn		1222995	1					
ANR	1223022	AssignmentExpression	* syn = env -> syntax		1222995	2		=			
ANR	1223023	Identifier	syn		1222995	0					
ANR	1223024	PtrMemberAccess	env -> syntax		1222995	1					
ANR	1223025	Identifier	env		1222995	0					
ANR	1223026	Identifier	syntax		1222995	1					
ANR	1223027	IdentifierDeclStatement	UChar * prev ;	3132:2:67405:67416	1222995	4	True				
ANR	1223028	IdentifierDecl	* prev		1222995	0					
ANR	1223029	IdentifierDeclType	UChar *		1222995	0					
ANR	1223030	Identifier	prev		1222995	1					
ANR	1223031	IdentifierDeclStatement	UChar * p = * src ;	3133:2:67420:67435	1222995	5	True				
ANR	1223032	IdentifierDecl	* p = * src		1222995	0					
ANR	1223033	IdentifierDeclType	UChar *		1222995	0					
ANR	1223034	Identifier	p		1222995	1					
ANR	1223035	AssignmentExpression	* p = * src		1222995	2		=			
ANR	1223036	Identifier	p		1222995	0					
ANR	1223037	UnaryOperationExpression	* src		1222995	1					
ANR	1223038	UnaryOperator	*		1222995	0					
ANR	1223039	Identifier	src		1222995	1					
ANR	1223040	ExpressionStatement	PFETCH_READY	3134:2:67439:67451	1222995	6	True				
ANR	1223041	Identifier	PFETCH_READY		1222995	0					
ANR	1223042	Label	start :	3136:1:67455:67460	1222995	7	True				
ANR	1223043	Identifier	start		1222995	0					
ANR	1223044	IfStatement	if ( PEND )		1222995	8					
ANR	1223045	Condition	PEND	3137:6:67468:67471	1222995	0	True				
ANR	1223046	Identifier	PEND		1222995	0					
ANR	1223047	CompoundStatement		11:12:173:173	1222995	1					
ANR	1223048	ExpressionStatement	tok -> type = TK_EOT	3138:4:67480:67498	1222995	0	True				
ANR	1223049	AssignmentExpression	tok -> type = TK_EOT		1222995	0		=			
ANR	1223050	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223051	Identifier	tok		1222995	0					
ANR	1223052	Identifier	type		1222995	1					
ANR	1223053	Identifier	TK_EOT		1222995	1					
ANR	1223054	ReturnStatement	return tok -> type ;	3139:4:67504:67520	1222995	1	True				
ANR	1223055	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223056	Identifier	tok		1222995	0					
ANR	1223057	Identifier	type		1222995	1					
ANR	1223058	ExpressionStatement	tok -> type = TK_STRING	3142:2:67529:67551	1222995	9	True				
ANR	1223059	AssignmentExpression	tok -> type = TK_STRING		1222995	0		=			
ANR	1223060	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223061	Identifier	tok		1222995	0					
ANR	1223062	Identifier	type		1222995	1					
ANR	1223063	Identifier	TK_STRING		1222995	1					
ANR	1223064	ExpressionStatement	tok -> base = 0	3143:2:67555:67569	1222995	10	True				
ANR	1223065	AssignmentExpression	tok -> base = 0		1222995	0		=			
ANR	1223066	PtrMemberAccess	tok -> base		1222995	0					
ANR	1223067	Identifier	tok		1222995	0					
ANR	1223068	Identifier	base		1222995	1					
ANR	1223069	PrimaryExpression	0		1222995	1					
ANR	1223070	ExpressionStatement	tok -> backp = p	3144:2:67573:67587	1222995	11	True				
ANR	1223071	AssignmentExpression	tok -> backp = p		1222995	0		=			
ANR	1223072	PtrMemberAccess	tok -> backp		1222995	0					
ANR	1223073	Identifier	tok		1222995	0					
ANR	1223074	Identifier	backp		1222995	1					
ANR	1223075	Identifier	p		1222995	1					
ANR	1223076	ExpressionStatement	PFETCH ( c )	3146:2:67592:67601	1222995	12	True				
ANR	1223077	CallExpression	PFETCH ( c )		1222995	0					
ANR	1223078	Callee	PFETCH		1222995	0					
ANR	1223079	Identifier	PFETCH		1222995	0					
ANR	1223080	ArgumentList	c		1222995	1					
ANR	1223081	Argument	c		1222995	0					
ANR	1223082	Identifier	c		1222995	0					
ANR	1223083	IfStatement	"if ( IS_MC_ESC_CODE ( c , syn ) )"		1222995	13					
ANR	1223084	Condition	"IS_MC_ESC_CODE ( c , syn )"	3147:6:67609:67630	1222995	0	True				
ANR	1223085	CallExpression	"IS_MC_ESC_CODE ( c , syn )"		1222995	0					
ANR	1223086	Callee	IS_MC_ESC_CODE		1222995	0					
ANR	1223087	Identifier	IS_MC_ESC_CODE		1222995	0					
ANR	1223088	ArgumentList	c		1222995	1					
ANR	1223089	Argument	c		1222995	0					
ANR	1223090	Identifier	c		1222995	0					
ANR	1223091	Argument	syn		1222995	1					
ANR	1223092	Identifier	syn		1222995	0					
ANR	1223093	CompoundStatement		21:30:332:332	1222995	1					
ANR	1223094	IfStatement	if ( PEND )		1222995	0					
ANR	1223095	Condition	PEND	3148:8:67643:67646	1222995	0	True				
ANR	1223096	Identifier	PEND		1222995	0					
ANR	1223097	ReturnStatement	return ONIGERR_END_PATTERN_AT_ESCAPE ;	3148:14:67649:67685	1222995	1	True				
ANR	1223098	Identifier	ONIGERR_END_PATTERN_AT_ESCAPE		1222995	0					
ANR	1223099	ExpressionStatement	tok -> backp = p	3150:4:67692:67706	1222995	1	True				
ANR	1223100	AssignmentExpression	tok -> backp = p		1222995	0		=			
ANR	1223101	PtrMemberAccess	tok -> backp		1222995	0					
ANR	1223102	Identifier	tok		1222995	0					
ANR	1223103	Identifier	backp		1222995	1					
ANR	1223104	Identifier	p		1222995	1					
ANR	1223105	ExpressionStatement	PFETCH ( c )	3151:4:67712:67721	1222995	2	True				
ANR	1223106	CallExpression	PFETCH ( c )		1222995	0					
ANR	1223107	Callee	PFETCH		1222995	0					
ANR	1223108	Identifier	PFETCH		1222995	0					
ANR	1223109	ArgumentList	c		1222995	1					
ANR	1223110	Argument	c		1222995	0					
ANR	1223111	Identifier	c		1222995	0					
ANR	1223112	ExpressionStatement	tok -> u . c = c	3153:4:67728:67740	1222995	3	True				
ANR	1223113	AssignmentExpression	tok -> u . c = c		1222995	0		=			
ANR	1223114	MemberAccess	tok -> u . c		1222995	0					
ANR	1223115	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223116	Identifier	tok		1222995	0					
ANR	1223117	Identifier	u		1222995	1					
ANR	1223118	Identifier	c		1222995	1					
ANR	1223119	Identifier	c		1222995	1					
ANR	1223120	ExpressionStatement	tok -> escaped = 1	3154:4:67746:67762	1222995	4	True				
ANR	1223121	AssignmentExpression	tok -> escaped = 1		1222995	0		=			
ANR	1223122	PtrMemberAccess	tok -> escaped		1222995	0					
ANR	1223123	Identifier	tok		1222995	0					
ANR	1223124	Identifier	escaped		1222995	1					
ANR	1223125	PrimaryExpression	1		1222995	1					
ANR	1223126	SwitchStatement	switch ( c )		1222995	5					
ANR	1223127	Condition	c	3155:12:67776:67776	1222995	0	True				
ANR	1223128	Identifier	c		1222995	0					
ANR	1223129	CompoundStatement		29:15:478:478	1222995	1					
ANR	1223130	Label	case '*' :	3156:4:67785:67793	1222995	0	True				
ANR	1223131	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF ) )"		1222995	1					
ANR	1223132	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF )"	3157:10:67805:67858	1222995	0	True				
ANR	1223133	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF )"		1222995	0					
ANR	1223134	UnaryOperator	!		1222995	0					
ANR	1223135	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF )"		1222995	1					
ANR	1223136	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1223137	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1223138	ArgumentList	syn		1222995	1					
ANR	1223139	Argument	syn		1222995	0					
ANR	1223140	Identifier	syn		1222995	0					
ANR	1223141	Argument	ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF		1222995	1					
ANR	1223142	Identifier	ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF		1222995	0					
ANR	1223143	BreakStatement	break ;	3157:66:67861:67866	1222995	1	True				
ANR	1223144	ExpressionStatement	tok -> type = TK_OP_REPEAT	3158:6:67874:67898	1222995	2	True				
ANR	1223145	AssignmentExpression	tok -> type = TK_OP_REPEAT		1222995	0		=			
ANR	1223146	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223147	Identifier	tok		1222995	0					
ANR	1223148	Identifier	type		1222995	1					
ANR	1223149	Identifier	TK_OP_REPEAT		1222995	1					
ANR	1223150	ExpressionStatement	tok -> u . repeat . lower = 0	3159:6:67906:67929	1222995	3	True				
ANR	1223151	AssignmentExpression	tok -> u . repeat . lower = 0		1222995	0		=			
ANR	1223152	MemberAccess	tok -> u . repeat . lower		1222995	0					
ANR	1223153	MemberAccess	tok -> u . repeat		1222995	0					
ANR	1223154	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223155	Identifier	tok		1222995	0					
ANR	1223156	Identifier	u		1222995	1					
ANR	1223157	Identifier	repeat		1222995	1					
ANR	1223158	Identifier	lower		1222995	1					
ANR	1223159	PrimaryExpression	0		1222995	1					
ANR	1223160	ExpressionStatement	tok -> u . repeat . upper = REPEAT_INFINITE	3160:6:67937:67974	1222995	4	True				
ANR	1223161	AssignmentExpression	tok -> u . repeat . upper = REPEAT_INFINITE		1222995	0		=			
ANR	1223162	MemberAccess	tok -> u . repeat . upper		1222995	0					
ANR	1223163	MemberAccess	tok -> u . repeat		1222995	0					
ANR	1223164	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223165	Identifier	tok		1222995	0					
ANR	1223166	Identifier	u		1222995	1					
ANR	1223167	Identifier	repeat		1222995	1					
ANR	1223168	Identifier	upper		1222995	1					
ANR	1223169	Identifier	REPEAT_INFINITE		1222995	1					
ANR	1223170	GotoStatement	goto greedy_check ;	3161:6:67982:67999	1222995	5	True				
ANR	1223171	Identifier	greedy_check		1222995	0					
ANR	1223172	BreakStatement	break ;	3162:6:68007:68012	1222995	6	True				
ANR	1223173	Label	case '+' :	3164:4:68019:68027	1222995	7	True				
ANR	1223174	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_PLUS_ONE_INF ) )"		1222995	8					
ANR	1223175	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_PLUS_ONE_INF )"	3165:10:68039:68087	1222995	0	True				
ANR	1223176	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_PLUS_ONE_INF )"		1222995	0					
ANR	1223177	UnaryOperator	!		1222995	0					
ANR	1223178	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_PLUS_ONE_INF )"		1222995	1					
ANR	1223179	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1223180	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1223181	ArgumentList	syn		1222995	1					
ANR	1223182	Argument	syn		1222995	0					
ANR	1223183	Identifier	syn		1222995	0					
ANR	1223184	Argument	ONIG_SYN_OP_ESC_PLUS_ONE_INF		1222995	1					
ANR	1223185	Identifier	ONIG_SYN_OP_ESC_PLUS_ONE_INF		1222995	0					
ANR	1223186	BreakStatement	break ;	3165:61:68090:68095	1222995	1	True				
ANR	1223187	ExpressionStatement	tok -> type = TK_OP_REPEAT	3166:6:68103:68127	1222995	9	True				
ANR	1223188	AssignmentExpression	tok -> type = TK_OP_REPEAT		1222995	0		=			
ANR	1223189	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223190	Identifier	tok		1222995	0					
ANR	1223191	Identifier	type		1222995	1					
ANR	1223192	Identifier	TK_OP_REPEAT		1222995	1					
ANR	1223193	ExpressionStatement	tok -> u . repeat . lower = 1	3167:6:68135:68158	1222995	10	True				
ANR	1223194	AssignmentExpression	tok -> u . repeat . lower = 1		1222995	0		=			
ANR	1223195	MemberAccess	tok -> u . repeat . lower		1222995	0					
ANR	1223196	MemberAccess	tok -> u . repeat		1222995	0					
ANR	1223197	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223198	Identifier	tok		1222995	0					
ANR	1223199	Identifier	u		1222995	1					
ANR	1223200	Identifier	repeat		1222995	1					
ANR	1223201	Identifier	lower		1222995	1					
ANR	1223202	PrimaryExpression	1		1222995	1					
ANR	1223203	ExpressionStatement	tok -> u . repeat . upper = REPEAT_INFINITE	3168:6:68166:68203	1222995	11	True				
ANR	1223204	AssignmentExpression	tok -> u . repeat . upper = REPEAT_INFINITE		1222995	0		=			
ANR	1223205	MemberAccess	tok -> u . repeat . upper		1222995	0					
ANR	1223206	MemberAccess	tok -> u . repeat		1222995	0					
ANR	1223207	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223208	Identifier	tok		1222995	0					
ANR	1223209	Identifier	u		1222995	1					
ANR	1223210	Identifier	repeat		1222995	1					
ANR	1223211	Identifier	upper		1222995	1					
ANR	1223212	Identifier	REPEAT_INFINITE		1222995	1					
ANR	1223213	GotoStatement	goto greedy_check ;	3169:6:68211:68228	1222995	12	True				
ANR	1223214	Identifier	greedy_check		1222995	0					
ANR	1223215	BreakStatement	break ;	3170:6:68236:68241	1222995	13	True				
ANR	1223216	Label	case '?' :	3172:4:68248:68256	1222995	14	True				
ANR	1223217	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_QMARK_ZERO_ONE ) )"		1222995	15					
ANR	1223218	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_QMARK_ZERO_ONE )"	3173:10:68268:68318	1222995	0	True				
ANR	1223219	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_QMARK_ZERO_ONE )"		1222995	0					
ANR	1223220	UnaryOperator	!		1222995	0					
ANR	1223221	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_QMARK_ZERO_ONE )"		1222995	1					
ANR	1223222	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1223223	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1223224	ArgumentList	syn		1222995	1					
ANR	1223225	Argument	syn		1222995	0					
ANR	1223226	Identifier	syn		1222995	0					
ANR	1223227	Argument	ONIG_SYN_OP_ESC_QMARK_ZERO_ONE		1222995	1					
ANR	1223228	Identifier	ONIG_SYN_OP_ESC_QMARK_ZERO_ONE		1222995	0					
ANR	1223229	BreakStatement	break ;	3173:63:68321:68326	1222995	1	True				
ANR	1223230	ExpressionStatement	tok -> type = TK_OP_REPEAT	3174:6:68334:68358	1222995	16	True				
ANR	1223231	AssignmentExpression	tok -> type = TK_OP_REPEAT		1222995	0		=			
ANR	1223232	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223233	Identifier	tok		1222995	0					
ANR	1223234	Identifier	type		1222995	1					
ANR	1223235	Identifier	TK_OP_REPEAT		1222995	1					
ANR	1223236	ExpressionStatement	tok -> u . repeat . lower = 0	3175:6:68366:68389	1222995	17	True				
ANR	1223237	AssignmentExpression	tok -> u . repeat . lower = 0		1222995	0		=			
ANR	1223238	MemberAccess	tok -> u . repeat . lower		1222995	0					
ANR	1223239	MemberAccess	tok -> u . repeat		1222995	0					
ANR	1223240	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223241	Identifier	tok		1222995	0					
ANR	1223242	Identifier	u		1222995	1					
ANR	1223243	Identifier	repeat		1222995	1					
ANR	1223244	Identifier	lower		1222995	1					
ANR	1223245	PrimaryExpression	0		1222995	1					
ANR	1223246	ExpressionStatement	tok -> u . repeat . upper = 1	3176:6:68397:68420	1222995	18	True				
ANR	1223247	AssignmentExpression	tok -> u . repeat . upper = 1		1222995	0		=			
ANR	1223248	MemberAccess	tok -> u . repeat . upper		1222995	0					
ANR	1223249	MemberAccess	tok -> u . repeat		1222995	0					
ANR	1223250	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223251	Identifier	tok		1222995	0					
ANR	1223252	Identifier	u		1222995	1					
ANR	1223253	Identifier	repeat		1222995	1					
ANR	1223254	Identifier	upper		1222995	1					
ANR	1223255	PrimaryExpression	1		1222995	1					
ANR	1223256	Label	greedy_check :	3177:4:68426:68438	1222995	19	True				
ANR	1223257	Identifier	greedy_check		1222995	0					
ANR	1223258	IfStatement	"if ( ! PEND && PPEEK_IS ( '?' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_NON_GREEDY ) )"		1222995	20					
ANR	1223259	Condition	"! PEND && PPEEK_IS ( '?' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_NON_GREEDY )"	3178:10:68450:68525	1222995	0	True				
ANR	1223260	AndExpression	"! PEND && PPEEK_IS ( '?' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_NON_GREEDY )"		1222995	0		&&			
ANR	1223261	UnaryOperationExpression	! PEND		1222995	0					
ANR	1223262	UnaryOperator	!		1222995	0					
ANR	1223263	Identifier	PEND		1222995	1					
ANR	1223264	AndExpression	"PPEEK_IS ( '?' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_NON_GREEDY )"		1222995	1		&&			
ANR	1223265	CallExpression	PPEEK_IS ( '?' )		1222995	0					
ANR	1223266	Callee	PPEEK_IS		1222995	0					
ANR	1223267	Identifier	PPEEK_IS		1222995	0					
ANR	1223268	ArgumentList	'?'		1222995	1					
ANR	1223269	Argument	'?'		1222995	0					
ANR	1223270	PrimaryExpression	'?'		1222995	0					
ANR	1223271	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_NON_GREEDY )"		1222995	1					
ANR	1223272	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1223273	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1223274	ArgumentList	syn		1222995	1					
ANR	1223275	Argument	syn		1222995	0					
ANR	1223276	Identifier	syn		1222995	0					
ANR	1223277	Argument	ONIG_SYN_OP_QMARK_NON_GREEDY		1222995	1					
ANR	1223278	Identifier	ONIG_SYN_OP_QMARK_NON_GREEDY		1222995	0					
ANR	1223279	CompoundStatement		53:52:1227:1227	1222995	1					
ANR	1223280	ExpressionStatement	PFETCH ( c )	3180:1:68531:68540	1222995	0	True				
ANR	1223281	CallExpression	PFETCH ( c )		1222995	0					
ANR	1223282	Callee	PFETCH		1222995	0					
ANR	1223283	Identifier	PFETCH		1222995	0					
ANR	1223284	ArgumentList	c		1222995	1					
ANR	1223285	Argument	c		1222995	0					
ANR	1223286	Identifier	c		1222995	0					
ANR	1223287	ExpressionStatement	tok -> u . repeat . greedy = 0	3181:1:68543:68571	1222995	1	True				
ANR	1223288	AssignmentExpression	tok -> u . repeat . greedy = 0		1222995	0		=			
ANR	1223289	MemberAccess	tok -> u . repeat . greedy		1222995	0					
ANR	1223290	MemberAccess	tok -> u . repeat		1222995	0					
ANR	1223291	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223292	Identifier	tok		1222995	0					
ANR	1223293	Identifier	u		1222995	1					
ANR	1223294	Identifier	repeat		1222995	1					
ANR	1223295	Identifier	greedy		1222995	1					
ANR	1223296	PrimaryExpression	0		1222995	1					
ANR	1223297	ExpressionStatement	tok -> u . repeat . possessive = 0	3182:1:68574:68602	1222995	2	True				
ANR	1223298	AssignmentExpression	tok -> u . repeat . possessive = 0		1222995	0		=			
ANR	1223299	MemberAccess	tok -> u . repeat . possessive		1222995	0					
ANR	1223300	MemberAccess	tok -> u . repeat		1222995	0					
ANR	1223301	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223302	Identifier	tok		1222995	0					
ANR	1223303	Identifier	u		1222995	1					
ANR	1223304	Identifier	repeat		1222995	1					
ANR	1223305	Identifier	possessive		1222995	1					
ANR	1223306	PrimaryExpression	0		1222995	1					
ANR	1223307	ElseStatement	else		1222995	0					
ANR	1223308	CompoundStatement		58:11:1322:1322	1222995	0					
ANR	1223309	Label	possessive_check :	3185:6:68631:68647	1222995	0	True				
ANR	1223310	Identifier	possessive_check		1222995	0					
ANR	1223311	IfStatement	"if ( ! PEND && PPEEK_IS ( '+' ) && ( ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT ) && tok -> type != TK_INTERVAL ) || ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL ) && tok -> type == TK_INTERVAL ) ) )"		1222995	1					
ANR	1223312	Condition	"! PEND && PPEEK_IS ( '+' ) && ( ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT ) && tok -> type != TK_INTERVAL ) || ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL ) && tok -> type == TK_INTERVAL ) )"	3186:5:68654:68883	1222995	0	True				
ANR	1223313	AndExpression	"! PEND && PPEEK_IS ( '+' ) && ( ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT ) && tok -> type != TK_INTERVAL ) || ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL ) && tok -> type == TK_INTERVAL ) )"		1222995	0		&&			
ANR	1223314	UnaryOperationExpression	! PEND		1222995	0					
ANR	1223315	UnaryOperator	!		1222995	0					
ANR	1223316	Identifier	PEND		1222995	1					
ANR	1223317	AndExpression	"PPEEK_IS ( '+' ) && ( ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT ) && tok -> type != TK_INTERVAL ) || ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL ) && tok -> type == TK_INTERVAL ) )"		1222995	1		&&			
ANR	1223318	CallExpression	PPEEK_IS ( '+' )		1222995	0					
ANR	1223319	Callee	PPEEK_IS		1222995	0					
ANR	1223320	Identifier	PPEEK_IS		1222995	0					
ANR	1223321	ArgumentList	'+'		1222995	1					
ANR	1223322	Argument	'+'		1222995	0					
ANR	1223323	PrimaryExpression	'+'		1222995	0					
ANR	1223324	OrExpression	"( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT ) && tok -> type != TK_INTERVAL ) || ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL ) && tok -> type == TK_INTERVAL )"		1222995	1		||			
ANR	1223325	AndExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT ) && tok -> type != TK_INTERVAL"		1222995	0		&&			
ANR	1223326	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT )"		1222995	0					
ANR	1223327	Callee	IS_SYNTAX_OP2		1222995	0					
ANR	1223328	Identifier	IS_SYNTAX_OP2		1222995	0					
ANR	1223329	ArgumentList	syn		1222995	1					
ANR	1223330	Argument	syn		1222995	0					
ANR	1223331	Identifier	syn		1222995	0					
ANR	1223332	Argument	ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT		1222995	1					
ANR	1223333	Identifier	ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT		1222995	0					
ANR	1223334	EqualityExpression	tok -> type != TK_INTERVAL		1222995	1		!=			
ANR	1223335	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223336	Identifier	tok		1222995	0					
ANR	1223337	Identifier	type		1222995	1					
ANR	1223338	Identifier	TK_INTERVAL		1222995	1					
ANR	1223339	AndExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL ) && tok -> type == TK_INTERVAL"		1222995	1		&&			
ANR	1223340	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL )"		1222995	0					
ANR	1223341	Callee	IS_SYNTAX_OP2		1222995	0					
ANR	1223342	Identifier	IS_SYNTAX_OP2		1222995	0					
ANR	1223343	ArgumentList	syn		1222995	1					
ANR	1223344	Argument	syn		1222995	0					
ANR	1223345	Identifier	syn		1222995	0					
ANR	1223346	Argument	ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL		1222995	1					
ANR	1223347	Identifier	ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL		1222995	0					
ANR	1223348	EqualityExpression	tok -> type == TK_INTERVAL		1222995	1		==			
ANR	1223349	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223350	Identifier	tok		1222995	0					
ANR	1223351	Identifier	type		1222995	1					
ANR	1223352	Identifier	TK_INTERVAL		1222995	1					
ANR	1223353	CompoundStatement		64:35:1585:1585	1222995	1					
ANR	1223354	ExpressionStatement	PFETCH ( c )	3191:3:68891:68900	1222995	0	True				
ANR	1223355	CallExpression	PFETCH ( c )		1222995	0					
ANR	1223356	Callee	PFETCH		1222995	0					
ANR	1223357	Identifier	PFETCH		1222995	0					
ANR	1223358	ArgumentList	c		1222995	1					
ANR	1223359	Argument	c		1222995	0					
ANR	1223360	Identifier	c		1222995	0					
ANR	1223361	ExpressionStatement	tok -> u . repeat . greedy = 1	3192:3:68905:68933	1222995	1	True				
ANR	1223362	AssignmentExpression	tok -> u . repeat . greedy = 1		1222995	0		=			
ANR	1223363	MemberAccess	tok -> u . repeat . greedy		1222995	0					
ANR	1223364	MemberAccess	tok -> u . repeat		1222995	0					
ANR	1223365	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223366	Identifier	tok		1222995	0					
ANR	1223367	Identifier	u		1222995	1					
ANR	1223368	Identifier	repeat		1222995	1					
ANR	1223369	Identifier	greedy		1222995	1					
ANR	1223370	PrimaryExpression	1		1222995	1					
ANR	1223371	ExpressionStatement	tok -> u . repeat . possessive = 1	3193:3:68938:68966	1222995	2	True				
ANR	1223372	AssignmentExpression	tok -> u . repeat . possessive = 1		1222995	0		=			
ANR	1223373	MemberAccess	tok -> u . repeat . possessive		1222995	0					
ANR	1223374	MemberAccess	tok -> u . repeat		1222995	0					
ANR	1223375	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223376	Identifier	tok		1222995	0					
ANR	1223377	Identifier	u		1222995	1					
ANR	1223378	Identifier	repeat		1222995	1					
ANR	1223379	Identifier	possessive		1222995	1					
ANR	1223380	PrimaryExpression	1		1222995	1					
ANR	1223381	ElseStatement	else		1222995	0					
ANR	1223382	CompoundStatement		69:6:1676:1676	1222995	0					
ANR	1223383	ExpressionStatement	tok -> u . repeat . greedy = 1	3196:3:68982:69010	1222995	0	True				
ANR	1223384	AssignmentExpression	tok -> u . repeat . greedy = 1		1222995	0		=			
ANR	1223385	MemberAccess	tok -> u . repeat . greedy		1222995	0					
ANR	1223386	MemberAccess	tok -> u . repeat		1222995	0					
ANR	1223387	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223388	Identifier	tok		1222995	0					
ANR	1223389	Identifier	u		1222995	1					
ANR	1223390	Identifier	repeat		1222995	1					
ANR	1223391	Identifier	greedy		1222995	1					
ANR	1223392	PrimaryExpression	1		1222995	1					
ANR	1223393	ExpressionStatement	tok -> u . repeat . possessive = 0	3197:3:69015:69043	1222995	1	True				
ANR	1223394	AssignmentExpression	tok -> u . repeat . possessive = 0		1222995	0		=			
ANR	1223395	MemberAccess	tok -> u . repeat . possessive		1222995	0					
ANR	1223396	MemberAccess	tok -> u . repeat		1222995	0					
ANR	1223397	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223398	Identifier	tok		1222995	0					
ANR	1223399	Identifier	u		1222995	1					
ANR	1223400	Identifier	repeat		1222995	1					
ANR	1223401	Identifier	possessive		1222995	1					
ANR	1223402	PrimaryExpression	0		1222995	1					
ANR	1223403	BreakStatement	break ;	3200:6:69062:69067	1222995	21	True				
ANR	1223404	Label	case '{' :	3202:4:69074:69082	1222995	22	True				
ANR	1223405	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_BRACE_INTERVAL ) )"		1222995	23					
ANR	1223406	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_BRACE_INTERVAL )"	3203:10:69094:69144	1222995	0	True				
ANR	1223407	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_BRACE_INTERVAL )"		1222995	0					
ANR	1223408	UnaryOperator	!		1222995	0					
ANR	1223409	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_BRACE_INTERVAL )"		1222995	1					
ANR	1223410	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1223411	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1223412	ArgumentList	syn		1222995	1					
ANR	1223413	Argument	syn		1222995	0					
ANR	1223414	Identifier	syn		1222995	0					
ANR	1223415	Argument	ONIG_SYN_OP_ESC_BRACE_INTERVAL		1222995	1					
ANR	1223416	Identifier	ONIG_SYN_OP_ESC_BRACE_INTERVAL		1222995	0					
ANR	1223417	BreakStatement	break ;	3203:63:69147:69152	1222995	1	True				
ANR	1223418	ExpressionStatement	"r = fetch_range_quantifier ( & p , end , tok , env )"	3204:6:69160:69205	1222995	24	True				
ANR	1223419	AssignmentExpression	"r = fetch_range_quantifier ( & p , end , tok , env )"		1222995	0		=			
ANR	1223420	Identifier	r		1222995	0					
ANR	1223421	CallExpression	"fetch_range_quantifier ( & p , end , tok , env )"		1222995	1					
ANR	1223422	Callee	fetch_range_quantifier		1222995	0					
ANR	1223423	Identifier	fetch_range_quantifier		1222995	0					
ANR	1223424	ArgumentList	& p		1222995	1					
ANR	1223425	Argument	& p		1222995	0					
ANR	1223426	UnaryOperationExpression	& p		1222995	0					
ANR	1223427	UnaryOperator	&		1222995	0					
ANR	1223428	Identifier	p		1222995	1					
ANR	1223429	Argument	end		1222995	1					
ANR	1223430	Identifier	end		1222995	0					
ANR	1223431	Argument	tok		1222995	2					
ANR	1223432	Identifier	tok		1222995	0					
ANR	1223433	Argument	env		1222995	3					
ANR	1223434	Identifier	env		1222995	0					
ANR	1223435	IfStatement	if ( r < 0 )		1222995	25					
ANR	1223436	Condition	r < 0	3205:10:69217:69221	1222995	0	True				
ANR	1223437	RelationalExpression	r < 0		1222995	0		<			
ANR	1223438	Identifier	r		1222995	0					
ANR	1223439	PrimaryExpression	0		1222995	1					
ANR	1223440	ReturnStatement	return r ;	3205:17:69224:69232	1222995	1	True				
ANR	1223441	Identifier	r		1222995	0					
ANR	1223442	IfStatement	if ( r == 0 )		1222995	26					
ANR	1223443	Condition	r == 0	3206:10:69257:69262	1222995	0	True				
ANR	1223444	EqualityExpression	r == 0		1222995	0		==			
ANR	1223445	Identifier	r		1222995	0					
ANR	1223446	PrimaryExpression	0		1222995	1					
ANR	1223447	GotoStatement	goto greedy_check ;	3206:18:69265:69282	1222995	1	True				
ANR	1223448	Identifier	greedy_check		1222995	0					
ANR	1223449	ElseStatement	else		1222995	0					
ANR	1223450	IfStatement	if ( r == 2 )		1222995	0					
ANR	1223451	Condition	r == 2	3207:15:69299:69304	1222995	0	True				
ANR	1223452	EqualityExpression	r == 2		1222995	0		==			
ANR	1223453	Identifier	r		1222995	0					
ANR	1223454	PrimaryExpression	2		1222995	1					
ANR	1223455	CompoundStatement		81:23:2006:2006	1222995	1					
ANR	1223456	IfStatement	"if ( IS_SYNTAX_BV ( syn , ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY ) )"		1222995	0					
ANR	1223457	Condition	"IS_SYNTAX_BV ( syn , ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY )"	3208:5:69324:69380	1222995	0	True				
ANR	1223458	CallExpression	"IS_SYNTAX_BV ( syn , ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY )"		1222995	0					
ANR	1223459	Callee	IS_SYNTAX_BV		1222995	0					
ANR	1223460	Identifier	IS_SYNTAX_BV		1222995	0					
ANR	1223461	ArgumentList	syn		1222995	1					
ANR	1223462	Argument	syn		1222995	0					
ANR	1223463	Identifier	syn		1222995	0					
ANR	1223464	Argument	ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY		1222995	1					
ANR	1223465	Identifier	ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY		1222995	0					
ANR	1223466	GotoStatement	goto possessive_check ;	3209:3:69386:69407	1222995	1	True				
ANR	1223467	Identifier	possessive_check		1222995	0					
ANR	1223468	GotoStatement	goto greedy_check ;	3211:1:69411:69428	1222995	1	True				
ANR	1223469	Identifier	greedy_check		1222995	0					
ANR	1223470	BreakStatement	break ;	3214:6:69477:69482	1222995	27	True				
ANR	1223471	Label	case '|' :	3216:4:69489:69497	1222995	28	True				
ANR	1223472	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_VBAR_ALT ) )"		1222995	29					
ANR	1223473	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_VBAR_ALT )"	3217:10:69509:69553	1222995	0	True				
ANR	1223474	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_VBAR_ALT )"		1222995	0					
ANR	1223475	UnaryOperator	!		1222995	0					
ANR	1223476	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_VBAR_ALT )"		1222995	1					
ANR	1223477	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1223478	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1223479	ArgumentList	syn		1222995	1					
ANR	1223480	Argument	syn		1222995	0					
ANR	1223481	Identifier	syn		1222995	0					
ANR	1223482	Argument	ONIG_SYN_OP_ESC_VBAR_ALT		1222995	1					
ANR	1223483	Identifier	ONIG_SYN_OP_ESC_VBAR_ALT		1222995	0					
ANR	1223484	BreakStatement	break ;	3217:57:69556:69561	1222995	1	True				
ANR	1223485	ExpressionStatement	tok -> type = TK_ALT	3218:6:69569:69587	1222995	30	True				
ANR	1223486	AssignmentExpression	tok -> type = TK_ALT		1222995	0		=			
ANR	1223487	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223488	Identifier	tok		1222995	0					
ANR	1223489	Identifier	type		1222995	1					
ANR	1223490	Identifier	TK_ALT		1222995	1					
ANR	1223491	BreakStatement	break ;	3219:6:69595:69600	1222995	31	True				
ANR	1223492	Label	case '(' :	3221:4:69607:69615	1222995	32	True				
ANR	1223493	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP ) )"		1222995	33					
ANR	1223494	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP )"	3222:10:69627:69676	1222995	0	True				
ANR	1223495	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP )"		1222995	0					
ANR	1223496	UnaryOperator	!		1222995	0					
ANR	1223497	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP )"		1222995	1					
ANR	1223498	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1223499	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1223500	ArgumentList	syn		1222995	1					
ANR	1223501	Argument	syn		1222995	0					
ANR	1223502	Identifier	syn		1222995	0					
ANR	1223503	Argument	ONIG_SYN_OP_ESC_LPAREN_SUBEXP		1222995	1					
ANR	1223504	Identifier	ONIG_SYN_OP_ESC_LPAREN_SUBEXP		1222995	0					
ANR	1223505	BreakStatement	break ;	3222:62:69679:69684	1222995	1	True				
ANR	1223506	ExpressionStatement	tok -> type = TK_SUBEXP_OPEN	3223:6:69692:69718	1222995	34	True				
ANR	1223507	AssignmentExpression	tok -> type = TK_SUBEXP_OPEN		1222995	0		=			
ANR	1223508	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223509	Identifier	tok		1222995	0					
ANR	1223510	Identifier	type		1222995	1					
ANR	1223511	Identifier	TK_SUBEXP_OPEN		1222995	1					
ANR	1223512	BreakStatement	break ;	3224:6:69726:69731	1222995	35	True				
ANR	1223513	Label	case ')' :	3226:4:69738:69746	1222995	36	True				
ANR	1223514	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP ) )"		1222995	37					
ANR	1223515	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP )"	3227:10:69758:69807	1222995	0	True				
ANR	1223516	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP )"		1222995	0					
ANR	1223517	UnaryOperator	!		1222995	0					
ANR	1223518	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LPAREN_SUBEXP )"		1222995	1					
ANR	1223519	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1223520	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1223521	ArgumentList	syn		1222995	1					
ANR	1223522	Argument	syn		1222995	0					
ANR	1223523	Identifier	syn		1222995	0					
ANR	1223524	Argument	ONIG_SYN_OP_ESC_LPAREN_SUBEXP		1222995	1					
ANR	1223525	Identifier	ONIG_SYN_OP_ESC_LPAREN_SUBEXP		1222995	0					
ANR	1223526	BreakStatement	break ;	3227:62:69810:69815	1222995	1	True				
ANR	1223527	ExpressionStatement	tok -> type = TK_SUBEXP_CLOSE	3228:6:69823:69850	1222995	38	True				
ANR	1223528	AssignmentExpression	tok -> type = TK_SUBEXP_CLOSE		1222995	0		=			
ANR	1223529	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223530	Identifier	tok		1222995	0					
ANR	1223531	Identifier	type		1222995	1					
ANR	1223532	Identifier	TK_SUBEXP_CLOSE		1222995	1					
ANR	1223533	BreakStatement	break ;	3229:6:69858:69863	1222995	39	True				
ANR	1223534	Label	case 'w' :	3231:4:69870:69878	1222995	40	True				
ANR	1223535	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD ) )"		1222995	41					
ANR	1223536	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD )"	3232:10:69890:69932	1222995	0	True				
ANR	1223537	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD )"		1222995	0					
ANR	1223538	UnaryOperator	!		1222995	0					
ANR	1223539	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD )"		1222995	1					
ANR	1223540	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1223541	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1223542	ArgumentList	syn		1222995	1					
ANR	1223543	Argument	syn		1222995	0					
ANR	1223544	Identifier	syn		1222995	0					
ANR	1223545	Argument	ONIG_SYN_OP_ESC_W_WORD		1222995	1					
ANR	1223546	Identifier	ONIG_SYN_OP_ESC_W_WORD		1222995	0					
ANR	1223547	BreakStatement	break ;	3232:55:69935:69940	1222995	1	True				
ANR	1223548	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3233:6:69948:69972	1222995	42	True				
ANR	1223549	AssignmentExpression	tok -> type = TK_CHAR_TYPE		1222995	0		=			
ANR	1223550	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223551	Identifier	tok		1222995	0					
ANR	1223552	Identifier	type		1222995	1					
ANR	1223553	Identifier	TK_CHAR_TYPE		1222995	1					
ANR	1223554	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD	3234:6:69980:70018	1222995	43	True				
ANR	1223555	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD		1222995	0		=			
ANR	1223556	MemberAccess	tok -> u . prop . ctype		1222995	0					
ANR	1223557	MemberAccess	tok -> u . prop		1222995	0					
ANR	1223558	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223559	Identifier	tok		1222995	0					
ANR	1223560	Identifier	u		1222995	1					
ANR	1223561	Identifier	prop		1222995	1					
ANR	1223562	Identifier	ctype		1222995	1					
ANR	1223563	Identifier	ONIGENC_CTYPE_WORD		1222995	1					
ANR	1223564	ExpressionStatement	tok -> u . prop . not = 0	3235:6:70026:70047	1222995	44	True				
ANR	1223565	AssignmentExpression	tok -> u . prop . not = 0		1222995	0		=			
ANR	1223566	MemberAccess	tok -> u . prop . not		1222995	0					
ANR	1223567	MemberAccess	tok -> u . prop		1222995	0					
ANR	1223568	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223569	Identifier	tok		1222995	0					
ANR	1223570	Identifier	u		1222995	1					
ANR	1223571	Identifier	prop		1222995	1					
ANR	1223572	Identifier	not		1222995	1					
ANR	1223573	PrimaryExpression	0		1222995	1					
ANR	1223574	BreakStatement	break ;	3236:6:70055:70060	1222995	45	True				
ANR	1223575	Label	case 'W' :	3238:4:70067:70075	1222995	46	True				
ANR	1223576	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD ) )"		1222995	47					
ANR	1223577	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD )"	3239:10:70087:70129	1222995	0	True				
ANR	1223578	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD )"		1222995	0					
ANR	1223579	UnaryOperator	!		1222995	0					
ANR	1223580	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_W_WORD )"		1222995	1					
ANR	1223581	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1223582	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1223583	ArgumentList	syn		1222995	1					
ANR	1223584	Argument	syn		1222995	0					
ANR	1223585	Identifier	syn		1222995	0					
ANR	1223586	Argument	ONIG_SYN_OP_ESC_W_WORD		1222995	1					
ANR	1223587	Identifier	ONIG_SYN_OP_ESC_W_WORD		1222995	0					
ANR	1223588	BreakStatement	break ;	3239:55:70132:70137	1222995	1	True				
ANR	1223589	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3240:6:70145:70169	1222995	48	True				
ANR	1223590	AssignmentExpression	tok -> type = TK_CHAR_TYPE		1222995	0		=			
ANR	1223591	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223592	Identifier	tok		1222995	0					
ANR	1223593	Identifier	type		1222995	1					
ANR	1223594	Identifier	TK_CHAR_TYPE		1222995	1					
ANR	1223595	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD	3241:6:70177:70215	1222995	49	True				
ANR	1223596	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_WORD		1222995	0		=			
ANR	1223597	MemberAccess	tok -> u . prop . ctype		1222995	0					
ANR	1223598	MemberAccess	tok -> u . prop		1222995	0					
ANR	1223599	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223600	Identifier	tok		1222995	0					
ANR	1223601	Identifier	u		1222995	1					
ANR	1223602	Identifier	prop		1222995	1					
ANR	1223603	Identifier	ctype		1222995	1					
ANR	1223604	Identifier	ONIGENC_CTYPE_WORD		1222995	1					
ANR	1223605	ExpressionStatement	tok -> u . prop . not = 1	3242:6:70223:70244	1222995	50	True				
ANR	1223606	AssignmentExpression	tok -> u . prop . not = 1		1222995	0		=			
ANR	1223607	MemberAccess	tok -> u . prop . not		1222995	0					
ANR	1223608	MemberAccess	tok -> u . prop		1222995	0					
ANR	1223609	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223610	Identifier	tok		1222995	0					
ANR	1223611	Identifier	u		1222995	1					
ANR	1223612	Identifier	prop		1222995	1					
ANR	1223613	Identifier	not		1222995	1					
ANR	1223614	PrimaryExpression	1		1222995	1					
ANR	1223615	BreakStatement	break ;	3243:6:70252:70257	1222995	51	True				
ANR	1223616	Label	case 'b' :	3245:4:70264:70272	1222995	52	True				
ANR	1223617	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND ) )"		1222995	53					
ANR	1223618	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND )"	3246:10:70284:70332	1222995	0	True				
ANR	1223619	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND )"		1222995	0					
ANR	1223620	UnaryOperator	!		1222995	0					
ANR	1223621	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND )"		1222995	1					
ANR	1223622	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1223623	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1223624	ArgumentList	syn		1222995	1					
ANR	1223625	Argument	syn		1222995	0					
ANR	1223626	Identifier	syn		1222995	0					
ANR	1223627	Argument	ONIG_SYN_OP_ESC_B_WORD_BOUND		1222995	1					
ANR	1223628	Identifier	ONIG_SYN_OP_ESC_B_WORD_BOUND		1222995	0					
ANR	1223629	BreakStatement	break ;	3246:61:70335:70340	1222995	1	True				
ANR	1223630	ExpressionStatement	tok -> type = TK_ANCHOR	3247:6:70348:70369	1222995	54	True				
ANR	1223631	AssignmentExpression	tok -> type = TK_ANCHOR		1222995	0		=			
ANR	1223632	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223633	Identifier	tok		1222995	0					
ANR	1223634	Identifier	type		1222995	1					
ANR	1223635	Identifier	TK_ANCHOR		1222995	1					
ANR	1223636	ExpressionStatement	tok -> u . anchor = ANCHOR_WORD_BOUND	3248:6:70377:70410	1222995	55	True				
ANR	1223637	AssignmentExpression	tok -> u . anchor = ANCHOR_WORD_BOUND		1222995	0		=			
ANR	1223638	MemberAccess	tok -> u . anchor		1222995	0					
ANR	1223639	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223640	Identifier	tok		1222995	0					
ANR	1223641	Identifier	u		1222995	1					
ANR	1223642	Identifier	anchor		1222995	1					
ANR	1223643	Identifier	ANCHOR_WORD_BOUND		1222995	1					
ANR	1223644	BreakStatement	break ;	3249:6:70418:70423	1222995	56	True				
ANR	1223645	Label	case 'B' :	3251:4:70430:70438	1222995	57	True				
ANR	1223646	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND ) )"		1222995	58					
ANR	1223647	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND )"	3252:10:70450:70498	1222995	0	True				
ANR	1223648	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND )"		1222995	0					
ANR	1223649	UnaryOperator	!		1222995	0					
ANR	1223650	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_B_WORD_BOUND )"		1222995	1					
ANR	1223651	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1223652	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1223653	ArgumentList	syn		1222995	1					
ANR	1223654	Argument	syn		1222995	0					
ANR	1223655	Identifier	syn		1222995	0					
ANR	1223656	Argument	ONIG_SYN_OP_ESC_B_WORD_BOUND		1222995	1					
ANR	1223657	Identifier	ONIG_SYN_OP_ESC_B_WORD_BOUND		1222995	0					
ANR	1223658	BreakStatement	break ;	3252:61:70501:70506	1222995	1	True				
ANR	1223659	ExpressionStatement	tok -> type = TK_ANCHOR	3253:6:70514:70535	1222995	59	True				
ANR	1223660	AssignmentExpression	tok -> type = TK_ANCHOR		1222995	0		=			
ANR	1223661	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223662	Identifier	tok		1222995	0					
ANR	1223663	Identifier	type		1222995	1					
ANR	1223664	Identifier	TK_ANCHOR		1222995	1					
ANR	1223665	ExpressionStatement	tok -> u . anchor = ANCHOR_NOT_WORD_BOUND	3254:6:70543:70580	1222995	60	True				
ANR	1223666	AssignmentExpression	tok -> u . anchor = ANCHOR_NOT_WORD_BOUND		1222995	0		=			
ANR	1223667	MemberAccess	tok -> u . anchor		1222995	0					
ANR	1223668	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223669	Identifier	tok		1222995	0					
ANR	1223670	Identifier	u		1222995	1					
ANR	1223671	Identifier	anchor		1222995	1					
ANR	1223672	Identifier	ANCHOR_NOT_WORD_BOUND		1222995	1					
ANR	1223673	BreakStatement	break ;	3255:6:70588:70593	1222995	61	True				
ANR	1223674	Label	case '<' :	3258:4:70626:70634	1222995	62	True				
ANR	1223675	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END ) )"		1222995	63					
ANR	1223676	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END )"	3259:10:70646:70701	1222995	0	True				
ANR	1223677	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END )"		1222995	0					
ANR	1223678	UnaryOperator	!		1222995	0					
ANR	1223679	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END )"		1222995	1					
ANR	1223680	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1223681	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1223682	ArgumentList	syn		1222995	1					
ANR	1223683	Argument	syn		1222995	0					
ANR	1223684	Identifier	syn		1222995	0					
ANR	1223685	Argument	ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END		1222995	1					
ANR	1223686	Identifier	ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END		1222995	0					
ANR	1223687	BreakStatement	break ;	3259:68:70704:70709	1222995	1	True				
ANR	1223688	ExpressionStatement	tok -> type = TK_ANCHOR	3260:6:70717:70738	1222995	64	True				
ANR	1223689	AssignmentExpression	tok -> type = TK_ANCHOR		1222995	0		=			
ANR	1223690	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223691	Identifier	tok		1222995	0					
ANR	1223692	Identifier	type		1222995	1					
ANR	1223693	Identifier	TK_ANCHOR		1222995	1					
ANR	1223694	ExpressionStatement	tok -> u . anchor = ANCHOR_WORD_BEGIN	3261:6:70746:70779	1222995	65	True				
ANR	1223695	AssignmentExpression	tok -> u . anchor = ANCHOR_WORD_BEGIN		1222995	0		=			
ANR	1223696	MemberAccess	tok -> u . anchor		1222995	0					
ANR	1223697	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223698	Identifier	tok		1222995	0					
ANR	1223699	Identifier	u		1222995	1					
ANR	1223700	Identifier	anchor		1222995	1					
ANR	1223701	Identifier	ANCHOR_WORD_BEGIN		1222995	1					
ANR	1223702	BreakStatement	break ;	3262:6:70787:70792	1222995	66	True				
ANR	1223703	Label	case '>' :	3264:4:70799:70807	1222995	67	True				
ANR	1223704	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END ) )"		1222995	68					
ANR	1223705	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END )"	3265:10:70819:70874	1222995	0	True				
ANR	1223706	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END )"		1222995	0					
ANR	1223707	UnaryOperator	!		1222995	0					
ANR	1223708	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END )"		1222995	1					
ANR	1223709	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1223710	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1223711	ArgumentList	syn		1222995	1					
ANR	1223712	Argument	syn		1222995	0					
ANR	1223713	Identifier	syn		1222995	0					
ANR	1223714	Argument	ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END		1222995	1					
ANR	1223715	Identifier	ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END		1222995	0					
ANR	1223716	BreakStatement	break ;	3265:68:70877:70882	1222995	1	True				
ANR	1223717	ExpressionStatement	tok -> type = TK_ANCHOR	3266:6:70890:70911	1222995	69	True				
ANR	1223718	AssignmentExpression	tok -> type = TK_ANCHOR		1222995	0		=			
ANR	1223719	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223720	Identifier	tok		1222995	0					
ANR	1223721	Identifier	type		1222995	1					
ANR	1223722	Identifier	TK_ANCHOR		1222995	1					
ANR	1223723	ExpressionStatement	tok -> u . anchor = ANCHOR_WORD_END	3267:6:70919:70950	1222995	70	True				
ANR	1223724	AssignmentExpression	tok -> u . anchor = ANCHOR_WORD_END		1222995	0		=			
ANR	1223725	MemberAccess	tok -> u . anchor		1222995	0					
ANR	1223726	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223727	Identifier	tok		1222995	0					
ANR	1223728	Identifier	u		1222995	1					
ANR	1223729	Identifier	anchor		1222995	1					
ANR	1223730	Identifier	ANCHOR_WORD_END		1222995	1					
ANR	1223731	BreakStatement	break ;	3268:6:70958:70963	1222995	71	True				
ANR	1223732	Label	case 's' :	3271:4:70977:70985	1222995	72	True				
ANR	1223733	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE ) )"		1222995	73					
ANR	1223734	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE )"	3272:10:70997:71046	1222995	0	True				
ANR	1223735	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE )"		1222995	0					
ANR	1223736	UnaryOperator	!		1222995	0					
ANR	1223737	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE )"		1222995	1					
ANR	1223738	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1223739	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1223740	ArgumentList	syn		1222995	1					
ANR	1223741	Argument	syn		1222995	0					
ANR	1223742	Identifier	syn		1222995	0					
ANR	1223743	Argument	ONIG_SYN_OP_ESC_S_WHITE_SPACE		1222995	1					
ANR	1223744	Identifier	ONIG_SYN_OP_ESC_S_WHITE_SPACE		1222995	0					
ANR	1223745	BreakStatement	break ;	3272:62:71049:71054	1222995	1	True				
ANR	1223746	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3273:6:71062:71086	1222995	74	True				
ANR	1223747	AssignmentExpression	tok -> type = TK_CHAR_TYPE		1222995	0		=			
ANR	1223748	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223749	Identifier	tok		1222995	0					
ANR	1223750	Identifier	type		1222995	1					
ANR	1223751	Identifier	TK_CHAR_TYPE		1222995	1					
ANR	1223752	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE	3274:6:71094:71133	1222995	75	True				
ANR	1223753	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE		1222995	0		=			
ANR	1223754	MemberAccess	tok -> u . prop . ctype		1222995	0					
ANR	1223755	MemberAccess	tok -> u . prop		1222995	0					
ANR	1223756	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223757	Identifier	tok		1222995	0					
ANR	1223758	Identifier	u		1222995	1					
ANR	1223759	Identifier	prop		1222995	1					
ANR	1223760	Identifier	ctype		1222995	1					
ANR	1223761	Identifier	ONIGENC_CTYPE_SPACE		1222995	1					
ANR	1223762	ExpressionStatement	tok -> u . prop . not = 0	3275:6:71141:71162	1222995	76	True				
ANR	1223763	AssignmentExpression	tok -> u . prop . not = 0		1222995	0		=			
ANR	1223764	MemberAccess	tok -> u . prop . not		1222995	0					
ANR	1223765	MemberAccess	tok -> u . prop		1222995	0					
ANR	1223766	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223767	Identifier	tok		1222995	0					
ANR	1223768	Identifier	u		1222995	1					
ANR	1223769	Identifier	prop		1222995	1					
ANR	1223770	Identifier	not		1222995	1					
ANR	1223771	PrimaryExpression	0		1222995	1					
ANR	1223772	BreakStatement	break ;	3276:6:71170:71175	1222995	77	True				
ANR	1223773	Label	case 'S' :	3278:4:71182:71190	1222995	78	True				
ANR	1223774	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE ) )"		1222995	79					
ANR	1223775	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE )"	3279:10:71202:71251	1222995	0	True				
ANR	1223776	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE )"		1222995	0					
ANR	1223777	UnaryOperator	!		1222995	0					
ANR	1223778	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_S_WHITE_SPACE )"		1222995	1					
ANR	1223779	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1223780	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1223781	ArgumentList	syn		1222995	1					
ANR	1223782	Argument	syn		1222995	0					
ANR	1223783	Identifier	syn		1222995	0					
ANR	1223784	Argument	ONIG_SYN_OP_ESC_S_WHITE_SPACE		1222995	1					
ANR	1223785	Identifier	ONIG_SYN_OP_ESC_S_WHITE_SPACE		1222995	0					
ANR	1223786	BreakStatement	break ;	3279:62:71254:71259	1222995	1	True				
ANR	1223787	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3280:6:71267:71291	1222995	80	True				
ANR	1223788	AssignmentExpression	tok -> type = TK_CHAR_TYPE		1222995	0		=			
ANR	1223789	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223790	Identifier	tok		1222995	0					
ANR	1223791	Identifier	type		1222995	1					
ANR	1223792	Identifier	TK_CHAR_TYPE		1222995	1					
ANR	1223793	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE	3281:6:71299:71338	1222995	81	True				
ANR	1223794	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_SPACE		1222995	0		=			
ANR	1223795	MemberAccess	tok -> u . prop . ctype		1222995	0					
ANR	1223796	MemberAccess	tok -> u . prop		1222995	0					
ANR	1223797	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223798	Identifier	tok		1222995	0					
ANR	1223799	Identifier	u		1222995	1					
ANR	1223800	Identifier	prop		1222995	1					
ANR	1223801	Identifier	ctype		1222995	1					
ANR	1223802	Identifier	ONIGENC_CTYPE_SPACE		1222995	1					
ANR	1223803	ExpressionStatement	tok -> u . prop . not = 1	3282:6:71346:71367	1222995	82	True				
ANR	1223804	AssignmentExpression	tok -> u . prop . not = 1		1222995	0		=			
ANR	1223805	MemberAccess	tok -> u . prop . not		1222995	0					
ANR	1223806	MemberAccess	tok -> u . prop		1222995	0					
ANR	1223807	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223808	Identifier	tok		1222995	0					
ANR	1223809	Identifier	u		1222995	1					
ANR	1223810	Identifier	prop		1222995	1					
ANR	1223811	Identifier	not		1222995	1					
ANR	1223812	PrimaryExpression	1		1222995	1					
ANR	1223813	BreakStatement	break ;	3283:6:71375:71380	1222995	83	True				
ANR	1223814	Label	case 'd' :	3285:4:71387:71395	1222995	84	True				
ANR	1223815	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT ) )"		1222995	85					
ANR	1223816	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT )"	3286:10:71407:71450	1222995	0	True				
ANR	1223817	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT )"		1222995	0					
ANR	1223818	UnaryOperator	!		1222995	0					
ANR	1223819	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT )"		1222995	1					
ANR	1223820	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1223821	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1223822	ArgumentList	syn		1222995	1					
ANR	1223823	Argument	syn		1222995	0					
ANR	1223824	Identifier	syn		1222995	0					
ANR	1223825	Argument	ONIG_SYN_OP_ESC_D_DIGIT		1222995	1					
ANR	1223826	Identifier	ONIG_SYN_OP_ESC_D_DIGIT		1222995	0					
ANR	1223827	BreakStatement	break ;	3286:56:71453:71458	1222995	1	True				
ANR	1223828	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3287:6:71466:71490	1222995	86	True				
ANR	1223829	AssignmentExpression	tok -> type = TK_CHAR_TYPE		1222995	0		=			
ANR	1223830	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223831	Identifier	tok		1222995	0					
ANR	1223832	Identifier	type		1222995	1					
ANR	1223833	Identifier	TK_CHAR_TYPE		1222995	1					
ANR	1223834	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT	3288:6:71498:71537	1222995	87	True				
ANR	1223835	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT		1222995	0		=			
ANR	1223836	MemberAccess	tok -> u . prop . ctype		1222995	0					
ANR	1223837	MemberAccess	tok -> u . prop		1222995	0					
ANR	1223838	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223839	Identifier	tok		1222995	0					
ANR	1223840	Identifier	u		1222995	1					
ANR	1223841	Identifier	prop		1222995	1					
ANR	1223842	Identifier	ctype		1222995	1					
ANR	1223843	Identifier	ONIGENC_CTYPE_DIGIT		1222995	1					
ANR	1223844	ExpressionStatement	tok -> u . prop . not = 0	3289:6:71545:71566	1222995	88	True				
ANR	1223845	AssignmentExpression	tok -> u . prop . not = 0		1222995	0		=			
ANR	1223846	MemberAccess	tok -> u . prop . not		1222995	0					
ANR	1223847	MemberAccess	tok -> u . prop		1222995	0					
ANR	1223848	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223849	Identifier	tok		1222995	0					
ANR	1223850	Identifier	u		1222995	1					
ANR	1223851	Identifier	prop		1222995	1					
ANR	1223852	Identifier	not		1222995	1					
ANR	1223853	PrimaryExpression	0		1222995	1					
ANR	1223854	BreakStatement	break ;	3290:6:71574:71579	1222995	89	True				
ANR	1223855	Label	case 'D' :	3292:4:71586:71594	1222995	90	True				
ANR	1223856	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT ) )"		1222995	91					
ANR	1223857	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT )"	3293:10:71606:71649	1222995	0	True				
ANR	1223858	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT )"		1222995	0					
ANR	1223859	UnaryOperator	!		1222995	0					
ANR	1223860	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_D_DIGIT )"		1222995	1					
ANR	1223861	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1223862	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1223863	ArgumentList	syn		1222995	1					
ANR	1223864	Argument	syn		1222995	0					
ANR	1223865	Identifier	syn		1222995	0					
ANR	1223866	Argument	ONIG_SYN_OP_ESC_D_DIGIT		1222995	1					
ANR	1223867	Identifier	ONIG_SYN_OP_ESC_D_DIGIT		1222995	0					
ANR	1223868	BreakStatement	break ;	3293:56:71652:71657	1222995	1	True				
ANR	1223869	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3294:6:71665:71689	1222995	92	True				
ANR	1223870	AssignmentExpression	tok -> type = TK_CHAR_TYPE		1222995	0		=			
ANR	1223871	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223872	Identifier	tok		1222995	0					
ANR	1223873	Identifier	type		1222995	1					
ANR	1223874	Identifier	TK_CHAR_TYPE		1222995	1					
ANR	1223875	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT	3295:6:71697:71736	1222995	93	True				
ANR	1223876	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_DIGIT		1222995	0		=			
ANR	1223877	MemberAccess	tok -> u . prop . ctype		1222995	0					
ANR	1223878	MemberAccess	tok -> u . prop		1222995	0					
ANR	1223879	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223880	Identifier	tok		1222995	0					
ANR	1223881	Identifier	u		1222995	1					
ANR	1223882	Identifier	prop		1222995	1					
ANR	1223883	Identifier	ctype		1222995	1					
ANR	1223884	Identifier	ONIGENC_CTYPE_DIGIT		1222995	1					
ANR	1223885	ExpressionStatement	tok -> u . prop . not = 1	3296:6:71744:71765	1222995	94	True				
ANR	1223886	AssignmentExpression	tok -> u . prop . not = 1		1222995	0		=			
ANR	1223887	MemberAccess	tok -> u . prop . not		1222995	0					
ANR	1223888	MemberAccess	tok -> u . prop		1222995	0					
ANR	1223889	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223890	Identifier	tok		1222995	0					
ANR	1223891	Identifier	u		1222995	1					
ANR	1223892	Identifier	prop		1222995	1					
ANR	1223893	Identifier	not		1222995	1					
ANR	1223894	PrimaryExpression	1		1222995	1					
ANR	1223895	BreakStatement	break ;	3297:6:71773:71778	1222995	95	True				
ANR	1223896	Label	case 'h' :	3299:4:71785:71793	1222995	96	True				
ANR	1223897	IfStatement	"if ( ! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT ) )"		1222995	97					
ANR	1223898	Condition	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"	3300:10:71805:71851	1222995	0	True				
ANR	1223899	UnaryOperationExpression	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		1222995	0					
ANR	1223900	UnaryOperator	!		1222995	0					
ANR	1223901	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		1222995	1					
ANR	1223902	Callee	IS_SYNTAX_OP2		1222995	0					
ANR	1223903	Identifier	IS_SYNTAX_OP2		1222995	0					
ANR	1223904	ArgumentList	syn		1222995	1					
ANR	1223905	Argument	syn		1222995	0					
ANR	1223906	Identifier	syn		1222995	0					
ANR	1223907	Argument	ONIG_SYN_OP2_ESC_H_XDIGIT		1222995	1					
ANR	1223908	Identifier	ONIG_SYN_OP2_ESC_H_XDIGIT		1222995	0					
ANR	1223909	BreakStatement	break ;	3300:59:71854:71859	1222995	1	True				
ANR	1223910	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3301:6:71867:71891	1222995	98	True				
ANR	1223911	AssignmentExpression	tok -> type = TK_CHAR_TYPE		1222995	0		=			
ANR	1223912	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223913	Identifier	tok		1222995	0					
ANR	1223914	Identifier	type		1222995	1					
ANR	1223915	Identifier	TK_CHAR_TYPE		1222995	1					
ANR	1223916	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT	3302:6:71899:71939	1222995	99	True				
ANR	1223917	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT		1222995	0		=			
ANR	1223918	MemberAccess	tok -> u . prop . ctype		1222995	0					
ANR	1223919	MemberAccess	tok -> u . prop		1222995	0					
ANR	1223920	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223921	Identifier	tok		1222995	0					
ANR	1223922	Identifier	u		1222995	1					
ANR	1223923	Identifier	prop		1222995	1					
ANR	1223924	Identifier	ctype		1222995	1					
ANR	1223925	Identifier	ONIGENC_CTYPE_XDIGIT		1222995	1					
ANR	1223926	ExpressionStatement	tok -> u . prop . not = 0	3303:6:71947:71968	1222995	100	True				
ANR	1223927	AssignmentExpression	tok -> u . prop . not = 0		1222995	0		=			
ANR	1223928	MemberAccess	tok -> u . prop . not		1222995	0					
ANR	1223929	MemberAccess	tok -> u . prop		1222995	0					
ANR	1223930	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223931	Identifier	tok		1222995	0					
ANR	1223932	Identifier	u		1222995	1					
ANR	1223933	Identifier	prop		1222995	1					
ANR	1223934	Identifier	not		1222995	1					
ANR	1223935	PrimaryExpression	0		1222995	1					
ANR	1223936	BreakStatement	break ;	3304:6:71976:71981	1222995	101	True				
ANR	1223937	Label	case 'H' :	3306:4:71988:71996	1222995	102	True				
ANR	1223938	IfStatement	"if ( ! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT ) )"		1222995	103					
ANR	1223939	Condition	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"	3307:10:72008:72054	1222995	0	True				
ANR	1223940	UnaryOperationExpression	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		1222995	0					
ANR	1223941	UnaryOperator	!		1222995	0					
ANR	1223942	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_H_XDIGIT )"		1222995	1					
ANR	1223943	Callee	IS_SYNTAX_OP2		1222995	0					
ANR	1223944	Identifier	IS_SYNTAX_OP2		1222995	0					
ANR	1223945	ArgumentList	syn		1222995	1					
ANR	1223946	Argument	syn		1222995	0					
ANR	1223947	Identifier	syn		1222995	0					
ANR	1223948	Argument	ONIG_SYN_OP2_ESC_H_XDIGIT		1222995	1					
ANR	1223949	Identifier	ONIG_SYN_OP2_ESC_H_XDIGIT		1222995	0					
ANR	1223950	BreakStatement	break ;	3307:59:72057:72062	1222995	1	True				
ANR	1223951	ExpressionStatement	tok -> type = TK_CHAR_TYPE	3308:6:72070:72094	1222995	104	True				
ANR	1223952	AssignmentExpression	tok -> type = TK_CHAR_TYPE		1222995	0		=			
ANR	1223953	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223954	Identifier	tok		1222995	0					
ANR	1223955	Identifier	type		1222995	1					
ANR	1223956	Identifier	TK_CHAR_TYPE		1222995	1					
ANR	1223957	ExpressionStatement	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT	3309:6:72102:72142	1222995	105	True				
ANR	1223958	AssignmentExpression	tok -> u . prop . ctype = ONIGENC_CTYPE_XDIGIT		1222995	0		=			
ANR	1223959	MemberAccess	tok -> u . prop . ctype		1222995	0					
ANR	1223960	MemberAccess	tok -> u . prop		1222995	0					
ANR	1223961	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223962	Identifier	tok		1222995	0					
ANR	1223963	Identifier	u		1222995	1					
ANR	1223964	Identifier	prop		1222995	1					
ANR	1223965	Identifier	ctype		1222995	1					
ANR	1223966	Identifier	ONIGENC_CTYPE_XDIGIT		1222995	1					
ANR	1223967	ExpressionStatement	tok -> u . prop . not = 1	3310:6:72150:72171	1222995	106	True				
ANR	1223968	AssignmentExpression	tok -> u . prop . not = 1		1222995	0		=			
ANR	1223969	MemberAccess	tok -> u . prop . not		1222995	0					
ANR	1223970	MemberAccess	tok -> u . prop		1222995	0					
ANR	1223971	PtrMemberAccess	tok -> u		1222995	0					
ANR	1223972	Identifier	tok		1222995	0					
ANR	1223973	Identifier	u		1222995	1					
ANR	1223974	Identifier	prop		1222995	1					
ANR	1223975	Identifier	not		1222995	1					
ANR	1223976	PrimaryExpression	1		1222995	1					
ANR	1223977	BreakStatement	break ;	3311:6:72179:72184	1222995	107	True				
ANR	1223978	Label	case 'A' :	3313:4:72191:72199	1222995	108	True				
ANR	1223979	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR ) )"		1222995	109					
ANR	1223980	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"	3314:10:72211:72260	1222995	0	True				
ANR	1223981	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"		1222995	0					
ANR	1223982	UnaryOperator	!		1222995	0					
ANR	1223983	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"		1222995	1					
ANR	1223984	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1223985	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1223986	ArgumentList	syn		1222995	1					
ANR	1223987	Argument	syn		1222995	0					
ANR	1223988	Identifier	syn		1222995	0					
ANR	1223989	Argument	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		1222995	1					
ANR	1223990	Identifier	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		1222995	0					
ANR	1223991	BreakStatement	break ;	3314:62:72263:72268	1222995	1	True				
ANR	1223992	Label	begin_buf :	3315:4:72274:72283	1222995	110	True				
ANR	1223993	Identifier	begin_buf		1222995	0					
ANR	1223994	ExpressionStatement	tok -> type = TK_ANCHOR	3316:6:72291:72312	1222995	111	True				
ANR	1223995	AssignmentExpression	tok -> type = TK_ANCHOR		1222995	0		=			
ANR	1223996	PtrMemberAccess	tok -> type		1222995	0					
ANR	1223997	Identifier	tok		1222995	0					
ANR	1223998	Identifier	type		1222995	1					
ANR	1223999	Identifier	TK_ANCHOR		1222995	1					
ANR	1224000	ExpressionStatement	tok -> u . subtype = ANCHOR_BEGIN_BUF	3317:6:72320:72353	1222995	112	True				
ANR	1224001	AssignmentExpression	tok -> u . subtype = ANCHOR_BEGIN_BUF		1222995	0		=			
ANR	1224002	MemberAccess	tok -> u . subtype		1222995	0					
ANR	1224003	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224004	Identifier	tok		1222995	0					
ANR	1224005	Identifier	u		1222995	1					
ANR	1224006	Identifier	subtype		1222995	1					
ANR	1224007	Identifier	ANCHOR_BEGIN_BUF		1222995	1					
ANR	1224008	BreakStatement	break ;	3318:6:72361:72366	1222995	113	True				
ANR	1224009	Label	case 'Z' :	3320:4:72373:72381	1222995	114	True				
ANR	1224010	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR ) )"		1222995	115					
ANR	1224011	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"	3321:10:72393:72442	1222995	0	True				
ANR	1224012	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"		1222995	0					
ANR	1224013	UnaryOperator	!		1222995	0					
ANR	1224014	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"		1222995	1					
ANR	1224015	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1224016	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1224017	ArgumentList	syn		1222995	1					
ANR	1224018	Argument	syn		1222995	0					
ANR	1224019	Identifier	syn		1222995	0					
ANR	1224020	Argument	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		1222995	1					
ANR	1224021	Identifier	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		1222995	0					
ANR	1224022	BreakStatement	break ;	3321:62:72445:72450	1222995	1	True				
ANR	1224023	ExpressionStatement	tok -> type = TK_ANCHOR	3322:6:72458:72479	1222995	116	True				
ANR	1224024	AssignmentExpression	tok -> type = TK_ANCHOR		1222995	0		=			
ANR	1224025	PtrMemberAccess	tok -> type		1222995	0					
ANR	1224026	Identifier	tok		1222995	0					
ANR	1224027	Identifier	type		1222995	1					
ANR	1224028	Identifier	TK_ANCHOR		1222995	1					
ANR	1224029	ExpressionStatement	tok -> u . subtype = ANCHOR_SEMI_END_BUF	3323:6:72487:72523	1222995	117	True				
ANR	1224030	AssignmentExpression	tok -> u . subtype = ANCHOR_SEMI_END_BUF		1222995	0		=			
ANR	1224031	MemberAccess	tok -> u . subtype		1222995	0					
ANR	1224032	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224033	Identifier	tok		1222995	0					
ANR	1224034	Identifier	u		1222995	1					
ANR	1224035	Identifier	subtype		1222995	1					
ANR	1224036	Identifier	ANCHOR_SEMI_END_BUF		1222995	1					
ANR	1224037	BreakStatement	break ;	3324:6:72531:72536	1222995	118	True				
ANR	1224038	Label	case 'z' :	3326:4:72543:72551	1222995	119	True				
ANR	1224039	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR ) )"		1222995	120					
ANR	1224040	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"	3327:10:72563:72612	1222995	0	True				
ANR	1224041	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"		1222995	0					
ANR	1224042	UnaryOperator	!		1222995	0					
ANR	1224043	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR )"		1222995	1					
ANR	1224044	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1224045	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1224046	ArgumentList	syn		1222995	1					
ANR	1224047	Argument	syn		1222995	0					
ANR	1224048	Identifier	syn		1222995	0					
ANR	1224049	Argument	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		1222995	1					
ANR	1224050	Identifier	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		1222995	0					
ANR	1224051	BreakStatement	break ;	3327:62:72615:72620	1222995	1	True				
ANR	1224052	Label	end_buf :	3328:4:72626:72633	1222995	121	True				
ANR	1224053	Identifier	end_buf		1222995	0					
ANR	1224054	ExpressionStatement	tok -> type = TK_ANCHOR	3329:6:72641:72662	1222995	122	True				
ANR	1224055	AssignmentExpression	tok -> type = TK_ANCHOR		1222995	0		=			
ANR	1224056	PtrMemberAccess	tok -> type		1222995	0					
ANR	1224057	Identifier	tok		1222995	0					
ANR	1224058	Identifier	type		1222995	1					
ANR	1224059	Identifier	TK_ANCHOR		1222995	1					
ANR	1224060	ExpressionStatement	tok -> u . subtype = ANCHOR_END_BUF	3330:6:72670:72701	1222995	123	True				
ANR	1224061	AssignmentExpression	tok -> u . subtype = ANCHOR_END_BUF		1222995	0		=			
ANR	1224062	MemberAccess	tok -> u . subtype		1222995	0					
ANR	1224063	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224064	Identifier	tok		1222995	0					
ANR	1224065	Identifier	u		1222995	1					
ANR	1224066	Identifier	subtype		1222995	1					
ANR	1224067	Identifier	ANCHOR_END_BUF		1222995	1					
ANR	1224068	BreakStatement	break ;	3331:6:72709:72714	1222995	124	True				
ANR	1224069	Label	case 'G' :	3333:4:72721:72729	1222995	125	True				
ANR	1224070	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR ) )"		1222995	126					
ANR	1224071	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR )"	3334:10:72741:72799	1222995	0	True				
ANR	1224072	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR )"		1222995	0					
ANR	1224073	UnaryOperator	!		1222995	0					
ANR	1224074	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR )"		1222995	1					
ANR	1224075	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1224076	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1224077	ArgumentList	syn		1222995	1					
ANR	1224078	Argument	syn		1222995	0					
ANR	1224079	Identifier	syn		1222995	0					
ANR	1224080	Argument	ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR		1222995	1					
ANR	1224081	Identifier	ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR		1222995	0					
ANR	1224082	BreakStatement	break ;	3334:71:72802:72807	1222995	1	True				
ANR	1224083	ExpressionStatement	tok -> type = TK_ANCHOR	3335:6:72815:72836	1222995	127	True				
ANR	1224084	AssignmentExpression	tok -> type = TK_ANCHOR		1222995	0		=			
ANR	1224085	PtrMemberAccess	tok -> type		1222995	0					
ANR	1224086	Identifier	tok		1222995	0					
ANR	1224087	Identifier	type		1222995	1					
ANR	1224088	Identifier	TK_ANCHOR		1222995	1					
ANR	1224089	ExpressionStatement	tok -> u . subtype = ANCHOR_BEGIN_POSITION	3336:6:72844:72882	1222995	128	True				
ANR	1224090	AssignmentExpression	tok -> u . subtype = ANCHOR_BEGIN_POSITION		1222995	0		=			
ANR	1224091	MemberAccess	tok -> u . subtype		1222995	0					
ANR	1224092	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224093	Identifier	tok		1222995	0					
ANR	1224094	Identifier	u		1222995	1					
ANR	1224095	Identifier	subtype		1222995	1					
ANR	1224096	Identifier	ANCHOR_BEGIN_POSITION		1222995	1					
ANR	1224097	BreakStatement	break ;	3337:6:72890:72895	1222995	129	True				
ANR	1224098	Label	case '`' :	3339:4:72902:72910	1222995	130	True				
ANR	1224099	IfStatement	"if ( ! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR ) )"		1222995	131					
ANR	1224100	Condition	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR )"	3340:10:72922:72974	1222995	0	True				
ANR	1224101	UnaryOperationExpression	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR )"		1222995	0					
ANR	1224102	UnaryOperator	!		1222995	0					
ANR	1224103	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR )"		1222995	1					
ANR	1224104	Callee	IS_SYNTAX_OP2		1222995	0					
ANR	1224105	Identifier	IS_SYNTAX_OP2		1222995	0					
ANR	1224106	ArgumentList	syn		1222995	1					
ANR	1224107	Argument	syn		1222995	0					
ANR	1224108	Identifier	syn		1222995	0					
ANR	1224109	Argument	ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR		1222995	1					
ANR	1224110	Identifier	ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR		1222995	0					
ANR	1224111	BreakStatement	break ;	3340:65:72977:72982	1222995	1	True				
ANR	1224112	GotoStatement	goto begin_buf ;	3341:6:72990:73004	1222995	132	True				
ANR	1224113	Identifier	begin_buf		1222995	0					
ANR	1224114	BreakStatement	break ;	3342:6:73012:73017	1222995	133	True				
ANR	1224115	Label	case '\\'' :	3344:4:73024:73033	1222995	134	True				
ANR	1224116	IfStatement	"if ( ! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR ) )"		1222995	135					
ANR	1224117	Condition	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR )"	3345:10:73045:73097	1222995	0	True				
ANR	1224118	UnaryOperationExpression	"! IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR )"		1222995	0					
ANR	1224119	UnaryOperator	!		1222995	0					
ANR	1224120	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR )"		1222995	1					
ANR	1224121	Callee	IS_SYNTAX_OP2		1222995	0					
ANR	1224122	Identifier	IS_SYNTAX_OP2		1222995	0					
ANR	1224123	ArgumentList	syn		1222995	1					
ANR	1224124	Argument	syn		1222995	0					
ANR	1224125	Identifier	syn		1222995	0					
ANR	1224126	Argument	ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR		1222995	1					
ANR	1224127	Identifier	ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR		1222995	0					
ANR	1224128	BreakStatement	break ;	3345:65:73100:73105	1222995	1	True				
ANR	1224129	GotoStatement	goto end_buf ;	3346:6:73113:73125	1222995	136	True				
ANR	1224130	Identifier	end_buf		1222995	0					
ANR	1224131	BreakStatement	break ;	3347:6:73133:73138	1222995	137	True				
ANR	1224132	Label	case 'x' :	3349:4:73145:73153	1222995	138	True				
ANR	1224133	IfStatement	if ( PEND )		1222995	139					
ANR	1224134	Condition	PEND	3350:10:73165:73168	1222995	0	True				
ANR	1224135	Identifier	PEND		1222995	0					
ANR	1224136	BreakStatement	break ;	3350:16:73171:73176	1222995	1	True				
ANR	1224137	ExpressionStatement	prev = p	3352:6:73185:73193	1222995	140	True				
ANR	1224138	AssignmentExpression	prev = p		1222995	0		=			
ANR	1224139	Identifier	prev		1222995	0					
ANR	1224140	Identifier	p		1222995	1					
ANR	1224141	IfStatement	"if ( PPEEK_IS ( '{' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 ) )"		1222995	141					
ANR	1224142	Condition	"PPEEK_IS ( '{' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 )"	3353:10:73205:73268	1222995	0	True				
ANR	1224143	AndExpression	"PPEEK_IS ( '{' ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 )"		1222995	0		&&			
ANR	1224144	CallExpression	PPEEK_IS ( '{' )		1222995	0					
ANR	1224145	Callee	PPEEK_IS		1222995	0					
ANR	1224146	Identifier	PPEEK_IS		1222995	0					
ANR	1224147	ArgumentList	'{'		1222995	1					
ANR	1224148	Argument	'{'		1222995	0					
ANR	1224149	PrimaryExpression	'{'		1222995	0					
ANR	1224150	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_BRACE_HEX8 )"		1222995	1					
ANR	1224151	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1224152	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1224153	ArgumentList	syn		1222995	1					
ANR	1224154	Argument	syn		1222995	0					
ANR	1224155	Identifier	syn		1222995	0					
ANR	1224156	Argument	ONIG_SYN_OP_ESC_X_BRACE_HEX8		1222995	1					
ANR	1224157	Identifier	ONIG_SYN_OP_ESC_X_BRACE_HEX8		1222995	0					
ANR	1224158	CompoundStatement		227:76:5970:5970	1222995	1					
ANR	1224159	ExpressionStatement	PINC	3354:1:73274:73278	1222995	0	True				
ANR	1224160	Identifier	PINC		1222995	0					
ANR	1224161	ExpressionStatement	"num = scan_unsigned_hexadecimal_number ( & p , end , 8 , enc )"	3355:1:73281:73336	1222995	1	True				
ANR	1224162	AssignmentExpression	"num = scan_unsigned_hexadecimal_number ( & p , end , 8 , enc )"		1222995	0		=			
ANR	1224163	Identifier	num		1222995	0					
ANR	1224164	CallExpression	"scan_unsigned_hexadecimal_number ( & p , end , 8 , enc )"		1222995	1					
ANR	1224165	Callee	scan_unsigned_hexadecimal_number		1222995	0					
ANR	1224166	Identifier	scan_unsigned_hexadecimal_number		1222995	0					
ANR	1224167	ArgumentList	& p		1222995	1					
ANR	1224168	Argument	& p		1222995	0					
ANR	1224169	UnaryOperationExpression	& p		1222995	0					
ANR	1224170	UnaryOperator	&		1222995	0					
ANR	1224171	Identifier	p		1222995	1					
ANR	1224172	Argument	end		1222995	1					
ANR	1224173	Identifier	end		1222995	0					
ANR	1224174	Argument	8		1222995	2					
ANR	1224175	PrimaryExpression	8		1222995	0					
ANR	1224176	Argument	enc		1222995	3					
ANR	1224177	Identifier	enc		1222995	0					
ANR	1224178	IfStatement	if ( num < 0 )		1222995	2					
ANR	1224179	Condition	num < 0	3356:5:73343:73349	1222995	0	True				
ANR	1224180	RelationalExpression	num < 0		1222995	0		<			
ANR	1224181	Identifier	num		1222995	0					
ANR	1224182	PrimaryExpression	0		1222995	1					
ANR	1224183	ReturnStatement	return ONIGERR_TOO_BIG_WIDE_CHAR_VALUE ;	3356:14:73352:73390	1222995	1	True				
ANR	1224184	Identifier	ONIGERR_TOO_BIG_WIDE_CHAR_VALUE		1222995	0					
ANR	1224185	IfStatement	if ( ! PEND )		1222995	3					
ANR	1224186	Condition	! PEND	3357:5:73397:73401	1222995	0	True				
ANR	1224187	UnaryOperationExpression	! PEND		1222995	0					
ANR	1224188	UnaryOperator	!		1222995	0					
ANR	1224189	Identifier	PEND		1222995	1					
ANR	1224190	CompoundStatement		231:12:6103:6103	1222995	1					
ANR	1224191	IfStatement	"if ( ONIGENC_IS_CODE_XDIGIT ( enc , PPEEK ) )"		1222995	0					
ANR	1224192	Condition	"ONIGENC_IS_CODE_XDIGIT ( enc , PPEEK )"	3358:14:73420:73453	1222995	0	True				
ANR	1224193	CallExpression	"ONIGENC_IS_CODE_XDIGIT ( enc , PPEEK )"		1222995	0					
ANR	1224194	Callee	ONIGENC_IS_CODE_XDIGIT		1222995	0					
ANR	1224195	Identifier	ONIGENC_IS_CODE_XDIGIT		1222995	0					
ANR	1224196	ArgumentList	enc		1222995	1					
ANR	1224197	Argument	enc		1222995	0					
ANR	1224198	Identifier	enc		1222995	0					
ANR	1224199	Argument	PPEEK		1222995	1					
ANR	1224200	Identifier	PPEEK		1222995	0					
ANR	1224201	ReturnStatement	return ONIGERR_TOO_LONG_WIDE_CHAR_VALUE ;	3359:12:73468:73507	1222995	1	True				
ANR	1224202	Identifier	ONIGERR_TOO_LONG_WIDE_CHAR_VALUE		1222995	0					
ANR	1224203	IfStatement	"if ( ( p > prev + enclen ( enc , prev ) ) && ! PEND && PPEEK_IS ( '}' ) )"		1222995	4					
ANR	1224204	Condition	"( p > prev + enclen ( enc , prev ) ) && ! PEND && PPEEK_IS ( '}' )"	3362:5:73525:73580	1222995	0	True				
ANR	1224205	AndExpression	"( p > prev + enclen ( enc , prev ) ) && ! PEND && PPEEK_IS ( '}' )"		1222995	0		&&			
ANR	1224206	RelationalExpression	"p > prev + enclen ( enc , prev )"		1222995	0		>			
ANR	1224207	Identifier	p		1222995	0					
ANR	1224208	AdditiveExpression	"prev + enclen ( enc , prev )"		1222995	1		+			
ANR	1224209	Identifier	prev		1222995	0					
ANR	1224210	CallExpression	"enclen ( enc , prev )"		1222995	1					
ANR	1224211	Callee	enclen		1222995	0					
ANR	1224212	Identifier	enclen		1222995	0					
ANR	1224213	ArgumentList	enc		1222995	1					
ANR	1224214	Argument	enc		1222995	0					
ANR	1224215	Identifier	enc		1222995	0					
ANR	1224216	Argument	prev		1222995	1					
ANR	1224217	Identifier	prev		1222995	0					
ANR	1224218	AndExpression	! PEND && PPEEK_IS ( '}' )		1222995	1		&&			
ANR	1224219	UnaryOperationExpression	! PEND		1222995	0					
ANR	1224220	UnaryOperator	!		1222995	0					
ANR	1224221	Identifier	PEND		1222995	1					
ANR	1224222	CallExpression	PPEEK_IS ( '}' )		1222995	1					
ANR	1224223	Callee	PPEEK_IS		1222995	0					
ANR	1224224	Identifier	PPEEK_IS		1222995	0					
ANR	1224225	ArgumentList	'}'		1222995	1					
ANR	1224226	Argument	'}'		1222995	0					
ANR	1224227	PrimaryExpression	'}'		1222995	0					
ANR	1224228	CompoundStatement		236:63:6282:6282	1222995	1					
ANR	1224229	ExpressionStatement	PINC	3363:3:73588:73592	1222995	0	True				
ANR	1224230	Identifier	PINC		1222995	0					
ANR	1224231	ExpressionStatement	tok -> type = TK_CODE_POINT	3364:3:73597:73624	1222995	1	True				
ANR	1224232	AssignmentExpression	tok -> type = TK_CODE_POINT		1222995	0		=			
ANR	1224233	PtrMemberAccess	tok -> type		1222995	0					
ANR	1224234	Identifier	tok		1222995	0					
ANR	1224235	Identifier	type		1222995	1					
ANR	1224236	Identifier	TK_CODE_POINT		1222995	1					
ANR	1224237	ExpressionStatement	tok -> u . code = ( OnigCodePoint ) num	3365:3:73629:73662	1222995	2	True				
ANR	1224238	AssignmentExpression	tok -> u . code = ( OnigCodePoint ) num		1222995	0		=			
ANR	1224239	MemberAccess	tok -> u . code		1222995	0					
ANR	1224240	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224241	Identifier	tok		1222995	0					
ANR	1224242	Identifier	u		1222995	1					
ANR	1224243	Identifier	code		1222995	1					
ANR	1224244	CastExpression	( OnigCodePoint ) num		1222995	1					
ANR	1224245	CastTarget	OnigCodePoint		1222995	0					
ANR	1224246	Identifier	num		1222995	1					
ANR	1224247	ElseStatement	else		1222995	0					
ANR	1224248	CompoundStatement		241:6:6372:6372	1222995	0					
ANR	1224249	ExpressionStatement	p = prev	3369:3:73724:73732	1222995	0	True				
ANR	1224250	AssignmentExpression	p = prev		1222995	0		=			
ANR	1224251	Identifier	p		1222995	0					
ANR	1224252	Identifier	prev		1222995	1					
ANR	1224253	ElseStatement	else		1222995	0					
ANR	1224254	IfStatement	"if ( IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_HEX2 ) )"		1222995	0					
ANR	1224255	Condition	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_HEX2 )"	3372:15:73760:73800	1222995	0	True				
ANR	1224256	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_X_HEX2 )"		1222995	0					
ANR	1224257	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1224258	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1224259	ArgumentList	syn		1222995	1					
ANR	1224260	Argument	syn		1222995	0					
ANR	1224261	Identifier	syn		1222995	0					
ANR	1224262	Argument	ONIG_SYN_OP_ESC_X_HEX2		1222995	1					
ANR	1224263	Identifier	ONIG_SYN_OP_ESC_X_HEX2		1222995	0					
ANR	1224264	CompoundStatement		246:58:6502:6502	1222995	1					
ANR	1224265	ExpressionStatement	"num = scan_unsigned_hexadecimal_number ( & p , end , 2 , enc )"	3373:1:73806:73861	1222995	0	True				
ANR	1224266	AssignmentExpression	"num = scan_unsigned_hexadecimal_number ( & p , end , 2 , enc )"		1222995	0		=			
ANR	1224267	Identifier	num		1222995	0					
ANR	1224268	CallExpression	"scan_unsigned_hexadecimal_number ( & p , end , 2 , enc )"		1222995	1					
ANR	1224269	Callee	scan_unsigned_hexadecimal_number		1222995	0					
ANR	1224270	Identifier	scan_unsigned_hexadecimal_number		1222995	0					
ANR	1224271	ArgumentList	& p		1222995	1					
ANR	1224272	Argument	& p		1222995	0					
ANR	1224273	UnaryOperationExpression	& p		1222995	0					
ANR	1224274	UnaryOperator	&		1222995	0					
ANR	1224275	Identifier	p		1222995	1					
ANR	1224276	Argument	end		1222995	1					
ANR	1224277	Identifier	end		1222995	0					
ANR	1224278	Argument	2		1222995	2					
ANR	1224279	PrimaryExpression	2		1222995	0					
ANR	1224280	Argument	enc		1222995	3					
ANR	1224281	Identifier	enc		1222995	0					
ANR	1224282	IfStatement	if ( num < 0 )		1222995	1					
ANR	1224283	Condition	num < 0	3374:5:73868:73874	1222995	0	True				
ANR	1224284	RelationalExpression	num < 0		1222995	0		<			
ANR	1224285	Identifier	num		1222995	0					
ANR	1224286	PrimaryExpression	0		1222995	1					
ANR	1224287	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	3374:14:73877:73906	1222995	1	True				
ANR	1224288	Identifier	ONIGERR_TOO_BIG_NUMBER		1222995	0					
ANR	1224289	IfStatement	if ( p == prev )		1222995	2					
ANR	1224290	Condition	p == prev	3375:5:73913:73921	1222995	0	True				
ANR	1224291	EqualityExpression	p == prev		1222995	0		==			
ANR	1224292	Identifier	p		1222995	0					
ANR	1224293	Identifier	prev		1222995	1					
ANR	1224294	CompoundStatement		249:16:6623:6623	1222995	1					
ANR	1224295	ExpressionStatement	num = 0	3376:3:73956:73963	1222995	0	True				
ANR	1224296	AssignmentExpression	num = 0		1222995	0		=			
ANR	1224297	Identifier	num		1222995	0					
ANR	1224298	PrimaryExpression	0		1222995	1					
ANR	1224299	ExpressionStatement	tok -> type = TK_RAW_BYTE	3378:1:73995:74018	1222995	3	True				
ANR	1224300	AssignmentExpression	tok -> type = TK_RAW_BYTE		1222995	0		=			
ANR	1224301	PtrMemberAccess	tok -> type		1222995	0					
ANR	1224302	Identifier	tok		1222995	0					
ANR	1224303	Identifier	type		1222995	1					
ANR	1224304	Identifier	TK_RAW_BYTE		1222995	1					
ANR	1224305	ExpressionStatement	tok -> base = 16	3379:1:74021:74035	1222995	4	True				
ANR	1224306	AssignmentExpression	tok -> base = 16		1222995	0		=			
ANR	1224307	PtrMemberAccess	tok -> base		1222995	0					
ANR	1224308	Identifier	tok		1222995	0					
ANR	1224309	Identifier	base		1222995	1					
ANR	1224310	PrimaryExpression	16		1222995	1					
ANR	1224311	ExpressionStatement	tok -> u . c = num	3380:1:74038:74053	1222995	5	True				
ANR	1224312	AssignmentExpression	tok -> u . c = num		1222995	0		=			
ANR	1224313	MemberAccess	tok -> u . c		1222995	0					
ANR	1224314	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224315	Identifier	tok		1222995	0					
ANR	1224316	Identifier	u		1222995	1					
ANR	1224317	Identifier	c		1222995	1					
ANR	1224318	Identifier	num		1222995	1					
ANR	1224319	BreakStatement	break ;	3382:6:74069:74074	1222995	142	True				
ANR	1224320	Label	case 'u' :	3384:4:74081:74089	1222995	143	True				
ANR	1224321	IfStatement	if ( PEND )		1222995	144					
ANR	1224322	Condition	PEND	3385:10:74101:74104	1222995	0	True				
ANR	1224323	Identifier	PEND		1222995	0					
ANR	1224324	BreakStatement	break ;	3385:16:74107:74112	1222995	1	True				
ANR	1224325	ExpressionStatement	prev = p	3387:6:74121:74129	1222995	145	True				
ANR	1224326	AssignmentExpression	prev = p		1222995	0		=			
ANR	1224327	Identifier	prev		1222995	0					
ANR	1224328	Identifier	p		1222995	1					
ANR	1224329	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_U_HEX4 ) )"		1222995	146					
ANR	1224330	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_U_HEX4 )"	3388:10:74141:74183	1222995	0	True				
ANR	1224331	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_U_HEX4 )"		1222995	0					
ANR	1224332	Callee	IS_SYNTAX_OP2		1222995	0					
ANR	1224333	Identifier	IS_SYNTAX_OP2		1222995	0					
ANR	1224334	ArgumentList	syn		1222995	1					
ANR	1224335	Argument	syn		1222995	0					
ANR	1224336	Identifier	syn		1222995	0					
ANR	1224337	Argument	ONIG_SYN_OP2_ESC_U_HEX4		1222995	1					
ANR	1224338	Identifier	ONIG_SYN_OP2_ESC_U_HEX4		1222995	0					
ANR	1224339	CompoundStatement		262:55:6885:6885	1222995	1					
ANR	1224340	ExpressionStatement	"num = scan_unsigned_hexadecimal_number ( & p , end , 4 , enc )"	3389:1:74189:74244	1222995	0	True				
ANR	1224341	AssignmentExpression	"num = scan_unsigned_hexadecimal_number ( & p , end , 4 , enc )"		1222995	0		=			
ANR	1224342	Identifier	num		1222995	0					
ANR	1224343	CallExpression	"scan_unsigned_hexadecimal_number ( & p , end , 4 , enc )"		1222995	1					
ANR	1224344	Callee	scan_unsigned_hexadecimal_number		1222995	0					
ANR	1224345	Identifier	scan_unsigned_hexadecimal_number		1222995	0					
ANR	1224346	ArgumentList	& p		1222995	1					
ANR	1224347	Argument	& p		1222995	0					
ANR	1224348	UnaryOperationExpression	& p		1222995	0					
ANR	1224349	UnaryOperator	&		1222995	0					
ANR	1224350	Identifier	p		1222995	1					
ANR	1224351	Argument	end		1222995	1					
ANR	1224352	Identifier	end		1222995	0					
ANR	1224353	Argument	4		1222995	2					
ANR	1224354	PrimaryExpression	4		1222995	0					
ANR	1224355	Argument	enc		1222995	3					
ANR	1224356	Identifier	enc		1222995	0					
ANR	1224357	IfStatement	if ( num < 0 )		1222995	1					
ANR	1224358	Condition	num < 0	3390:5:74251:74257	1222995	0	True				
ANR	1224359	RelationalExpression	num < 0		1222995	0		<			
ANR	1224360	Identifier	num		1222995	0					
ANR	1224361	PrimaryExpression	0		1222995	1					
ANR	1224362	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	3390:14:74260:74289	1222995	1	True				
ANR	1224363	Identifier	ONIGERR_TOO_BIG_NUMBER		1222995	0					
ANR	1224364	IfStatement	if ( p == prev )		1222995	2					
ANR	1224365	Condition	p == prev	3391:5:74296:74304	1222995	0	True				
ANR	1224366	EqualityExpression	p == prev		1222995	0		==			
ANR	1224367	Identifier	p		1222995	0					
ANR	1224368	Identifier	prev		1222995	1					
ANR	1224369	CompoundStatement		265:16:7006:7006	1222995	1					
ANR	1224370	ExpressionStatement	num = 0	3392:3:74339:74346	1222995	0	True				
ANR	1224371	AssignmentExpression	num = 0		1222995	0		=			
ANR	1224372	Identifier	num		1222995	0					
ANR	1224373	PrimaryExpression	0		1222995	1					
ANR	1224374	ExpressionStatement	tok -> type = TK_CODE_POINT	3394:1:74378:74405	1222995	3	True				
ANR	1224375	AssignmentExpression	tok -> type = TK_CODE_POINT		1222995	0		=			
ANR	1224376	PtrMemberAccess	tok -> type		1222995	0					
ANR	1224377	Identifier	tok		1222995	0					
ANR	1224378	Identifier	type		1222995	1					
ANR	1224379	Identifier	TK_CODE_POINT		1222995	1					
ANR	1224380	ExpressionStatement	tok -> base = 16	3395:1:74408:74424	1222995	4	True				
ANR	1224381	AssignmentExpression	tok -> base = 16		1222995	0		=			
ANR	1224382	PtrMemberAccess	tok -> base		1222995	0					
ANR	1224383	Identifier	tok		1222995	0					
ANR	1224384	Identifier	base		1222995	1					
ANR	1224385	PrimaryExpression	16		1222995	1					
ANR	1224386	ExpressionStatement	tok -> u . code = ( OnigCodePoint ) num	3396:1:74427:74460	1222995	5	True				
ANR	1224387	AssignmentExpression	tok -> u . code = ( OnigCodePoint ) num		1222995	0		=			
ANR	1224388	MemberAccess	tok -> u . code		1222995	0					
ANR	1224389	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224390	Identifier	tok		1222995	0					
ANR	1224391	Identifier	u		1222995	1					
ANR	1224392	Identifier	code		1222995	1					
ANR	1224393	CastExpression	( OnigCodePoint ) num		1222995	1					
ANR	1224394	CastTarget	OnigCodePoint		1222995	0					
ANR	1224395	Identifier	num		1222995	1					
ANR	1224396	BreakStatement	break ;	3398:6:74476:74481	1222995	147	True				
ANR	1224397	Label	case '1' :	3400:4:74488:74496	1222995	148	True				
ANR	1224398	Label	case '2' :	3400:14:74498:74506	1222995	149	True				
ANR	1224399	Label	case '3' :	3400:24:74508:74516	1222995	150	True				
ANR	1224400	Label	case '4' :	3400:34:74518:74526	1222995	151	True				
ANR	1224401	Label	case '5' :	3401:4:74532:74540	1222995	152	True				
ANR	1224402	Label	case '6' :	3401:14:74542:74550	1222995	153	True				
ANR	1224403	Label	case '7' :	3401:24:74552:74560	1222995	154	True				
ANR	1224404	Label	case '8' :	3401:34:74562:74570	1222995	155	True				
ANR	1224405	Label	case '9' :	3401:44:74572:74580	1222995	156	True				
ANR	1224406	ExpressionStatement	PUNFETCH	3402:6:74588:74596	1222995	157	True				
ANR	1224407	Identifier	PUNFETCH		1222995	0					
ANR	1224408	ExpressionStatement	prev = p	3403:6:74604:74612	1222995	158	True				
ANR	1224409	AssignmentExpression	prev = p		1222995	0		=			
ANR	1224410	Identifier	prev		1222995	0					
ANR	1224411	Identifier	p		1222995	1					
ANR	1224412	ExpressionStatement	"num = onig_scan_unsigned_number ( & p , end , enc )"	3404:6:74620:74665	1222995	159	True				
ANR	1224413	AssignmentExpression	"num = onig_scan_unsigned_number ( & p , end , enc )"		1222995	0		=			
ANR	1224414	Identifier	num		1222995	0					
ANR	1224415	CallExpression	"onig_scan_unsigned_number ( & p , end , enc )"		1222995	1					
ANR	1224416	Callee	onig_scan_unsigned_number		1222995	0					
ANR	1224417	Identifier	onig_scan_unsigned_number		1222995	0					
ANR	1224418	ArgumentList	& p		1222995	1					
ANR	1224419	Argument	& p		1222995	0					
ANR	1224420	UnaryOperationExpression	& p		1222995	0					
ANR	1224421	UnaryOperator	&		1222995	0					
ANR	1224422	Identifier	p		1222995	1					
ANR	1224423	Argument	end		1222995	1					
ANR	1224424	Identifier	end		1222995	0					
ANR	1224425	Argument	enc		1222995	2					
ANR	1224426	Identifier	enc		1222995	0					
ANR	1224427	IfStatement	if ( num < 0 || num > ONIG_MAX_BACKREF_NUM )		1222995	160					
ANR	1224428	Condition	num < 0 || num > ONIG_MAX_BACKREF_NUM	3405:10:74677:74713	1222995	0	True				
ANR	1224429	OrExpression	num < 0 || num > ONIG_MAX_BACKREF_NUM		1222995	0		||			
ANR	1224430	RelationalExpression	num < 0		1222995	0		<			
ANR	1224431	Identifier	num		1222995	0					
ANR	1224432	PrimaryExpression	0		1222995	1					
ANR	1224433	RelationalExpression	num > ONIG_MAX_BACKREF_NUM		1222995	1		>			
ANR	1224434	Identifier	num		1222995	0					
ANR	1224435	Identifier	ONIG_MAX_BACKREF_NUM		1222995	1					
ANR	1224436	CompoundStatement		279:49:7415:7415	1222995	1					
ANR	1224437	GotoStatement	goto skip_backref ;	3406:8:74726:74743	1222995	0	True				
ANR	1224438	Identifier	skip_backref		1222995	0					
ANR	1224439	IfStatement	"if ( IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DECIMAL_BACKREF ) && ( num <= env -> num_mem || num <= 9 ) )"		1222995	161					
ANR	1224440	Condition	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DECIMAL_BACKREF ) && ( num <= env -> num_mem || num <= 9 )"	3409:10:74764:74850	1222995	0	True				
ANR	1224441	AndExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DECIMAL_BACKREF ) && ( num <= env -> num_mem || num <= 9 )"		1222995	0		&&			
ANR	1224442	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DECIMAL_BACKREF )"		1222995	0					
ANR	1224443	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1224444	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1224445	ArgumentList	syn		1222995	1					
ANR	1224446	Argument	syn		1222995	0					
ANR	1224447	Identifier	syn		1222995	0					
ANR	1224448	Argument	ONIG_SYN_OP_DECIMAL_BACKREF		1222995	1					
ANR	1224449	Identifier	ONIG_SYN_OP_DECIMAL_BACKREF		1222995	0					
ANR	1224450	OrExpression	num <= env -> num_mem || num <= 9		1222995	1		||			
ANR	1224451	RelationalExpression	num <= env -> num_mem		1222995	0		<=			
ANR	1224452	Identifier	num		1222995	0					
ANR	1224453	PtrMemberAccess	env -> num_mem		1222995	1					
ANR	1224454	Identifier	env		1222995	0					
ANR	1224455	Identifier	num_mem		1222995	1					
ANR	1224456	RelationalExpression	num <= 9		1222995	1		<=			
ANR	1224457	Identifier	num		1222995	0					
ANR	1224458	PrimaryExpression	9		1222995	1					
ANR	1224459	CompoundStatement		284:38:7552:7552	1222995	1					
ANR	1224460	IfStatement	"if ( IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF ) )"		1222995	0					
ANR	1224461	Condition	"IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF )"	3411:5:74892:74939	1222995	0	True				
ANR	1224462	CallExpression	"IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF )"		1222995	0					
ANR	1224463	Callee	IS_SYNTAX_BV		1222995	0					
ANR	1224464	Identifier	IS_SYNTAX_BV		1222995	0					
ANR	1224465	ArgumentList	syn		1222995	1					
ANR	1224466	Argument	syn		1222995	0					
ANR	1224467	Identifier	syn		1222995	0					
ANR	1224468	Argument	ONIG_SYN_STRICT_CHECK_BACKREF		1222995	1					
ANR	1224469	Identifier	ONIG_SYN_STRICT_CHECK_BACKREF		1222995	0					
ANR	1224470	CompoundStatement		285:55:7641:7641	1222995	1					
ANR	1224471	IfStatement	if ( num > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ num ] ) )		1222995	0					
ANR	1224472	Condition	num > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ num ] )	3412:7:74951:75008	1222995	0	True				
ANR	1224473	OrExpression	num > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ num ] )		1222995	0		||			
ANR	1224474	RelationalExpression	num > env -> num_mem		1222995	0		>			
ANR	1224475	Identifier	num		1222995	0					
ANR	1224476	PtrMemberAccess	env -> num_mem		1222995	1					
ANR	1224477	Identifier	env		1222995	0					
ANR	1224478	Identifier	num_mem		1222995	1					
ANR	1224479	CallExpression	IS_NULL ( SCANENV_MEM_NODES ( env ) [ num ] )		1222995	1					
ANR	1224480	Callee	IS_NULL		1222995	0					
ANR	1224481	Identifier	IS_NULL		1222995	0					
ANR	1224482	ArgumentList	SCANENV_MEM_NODES ( env ) [ num ]		1222995	1					
ANR	1224483	Argument	SCANENV_MEM_NODES ( env ) [ num ]		1222995	0					
ANR	1224484	ArrayIndexing	SCANENV_MEM_NODES ( env ) [ num ]		1222995	0					
ANR	1224485	CallExpression	SCANENV_MEM_NODES ( env )		1222995	0					
ANR	1224486	Callee	SCANENV_MEM_NODES		1222995	0					
ANR	1224487	Identifier	SCANENV_MEM_NODES		1222995	0					
ANR	1224488	ArgumentList	env		1222995	1					
ANR	1224489	Argument	env		1222995	0					
ANR	1224490	Identifier	env		1222995	0					
ANR	1224491	Identifier	num		1222995	1					
ANR	1224492	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	3413:5:75016:75046	1222995	1	True				
ANR	1224493	Identifier	ONIGERR_INVALID_BACKREF		1222995	0					
ANR	1224494	ExpressionStatement	tok -> type = TK_BACKREF	3416:1:75053:75075	1222995	1	True				
ANR	1224495	AssignmentExpression	tok -> type = TK_BACKREF		1222995	0		=			
ANR	1224496	PtrMemberAccess	tok -> type		1222995	0					
ANR	1224497	Identifier	tok		1222995	0					
ANR	1224498	Identifier	type		1222995	1					
ANR	1224499	Identifier	TK_BACKREF		1222995	1					
ANR	1224500	ExpressionStatement	tok -> u . backref . num = 1	3417:1:75078:75104	1222995	2	True				
ANR	1224501	AssignmentExpression	tok -> u . backref . num = 1		1222995	0		=			
ANR	1224502	MemberAccess	tok -> u . backref . num		1222995	0					
ANR	1224503	MemberAccess	tok -> u . backref		1222995	0					
ANR	1224504	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224505	Identifier	tok		1222995	0					
ANR	1224506	Identifier	u		1222995	1					
ANR	1224507	Identifier	backref		1222995	1					
ANR	1224508	Identifier	num		1222995	1					
ANR	1224509	PrimaryExpression	1		1222995	1					
ANR	1224510	ExpressionStatement	tok -> u . backref . ref1 = num	3418:1:75107:75135	1222995	3	True				
ANR	1224511	AssignmentExpression	tok -> u . backref . ref1 = num		1222995	0		=			
ANR	1224512	MemberAccess	tok -> u . backref . ref1		1222995	0					
ANR	1224513	MemberAccess	tok -> u . backref		1222995	0					
ANR	1224514	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224515	Identifier	tok		1222995	0					
ANR	1224516	Identifier	u		1222995	1					
ANR	1224517	Identifier	backref		1222995	1					
ANR	1224518	Identifier	ref1		1222995	1					
ANR	1224519	Identifier	num		1222995	1					
ANR	1224520	ExpressionStatement	tok -> u . backref . by_name = 0	3419:1:75138:75164	1222995	4	True				
ANR	1224521	AssignmentExpression	tok -> u . backref . by_name = 0		1222995	0		=			
ANR	1224522	MemberAccess	tok -> u . backref . by_name		1222995	0					
ANR	1224523	MemberAccess	tok -> u . backref		1222995	0					
ANR	1224524	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224525	Identifier	tok		1222995	0					
ANR	1224526	Identifier	u		1222995	1					
ANR	1224527	Identifier	backref		1222995	1					
ANR	1224528	Identifier	by_name		1222995	1					
ANR	1224529	PrimaryExpression	0		1222995	1					
ANR	1224530	ExpressionStatement	tok -> u . backref . exist_level = 0	3421:1:75197:75227	1222995	5	True				
ANR	1224531	AssignmentExpression	tok -> u . backref . exist_level = 0		1222995	0		=			
ANR	1224532	MemberAccess	tok -> u . backref . exist_level		1222995	0					
ANR	1224533	MemberAccess	tok -> u . backref		1222995	0					
ANR	1224534	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224535	Identifier	tok		1222995	0					
ANR	1224536	Identifier	u		1222995	1					
ANR	1224537	Identifier	backref		1222995	1					
ANR	1224538	Identifier	exist_level		1222995	1					
ANR	1224539	PrimaryExpression	0		1222995	1					
ANR	1224540	BreakStatement	break ;	3423:1:75237:75242	1222995	6	True				
ANR	1224541	Label	skip_backref :	3426:4:75257:75269	1222995	162	True				
ANR	1224542	Identifier	skip_backref		1222995	0					
ANR	1224543	IfStatement	if ( c == '8' || c == '9' )		1222995	163					
ANR	1224544	Condition	c == '8' || c == '9'	3427:10:75281:75300	1222995	0	True				
ANR	1224545	OrExpression	c == '8' || c == '9'		1222995	0		||			
ANR	1224546	EqualityExpression	c == '8'		1222995	0		==			
ANR	1224547	Identifier	c		1222995	0					
ANR	1224548	PrimaryExpression	'8'		1222995	1					
ANR	1224549	EqualityExpression	c == '9'		1222995	1		==			
ANR	1224550	Identifier	c		1222995	0					
ANR	1224551	PrimaryExpression	'9'		1222995	1					
ANR	1224552	CompoundStatement		301:32:8002:8002	1222995	1					
ANR	1224553	ExpressionStatement	p = prev	3429:1:75325:75333	1222995	0	True				
ANR	1224554	AssignmentExpression	p = prev		1222995	0		=			
ANR	1224555	Identifier	p		1222995	0					
ANR	1224556	Identifier	prev		1222995	1					
ANR	1224557	ExpressionStatement	PINC	3429:11:75335:75339	1222995	1	True				
ANR	1224558	Identifier	PINC		1222995	0					
ANR	1224559	BreakStatement	break ;	3430:1:75342:75347	1222995	2	True				
ANR	1224560	ExpressionStatement	p = prev	3433:6:75364:75372	1222995	164	True				
ANR	1224561	AssignmentExpression	p = prev		1222995	0		=			
ANR	1224562	Identifier	p		1222995	0					
ANR	1224563	Identifier	prev		1222995	1					
ANR	1224564	Label	case '0' :	3435:4:75403:75411	1222995	165	True				
ANR	1224565	IfStatement	"if ( IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_OCTAL3 ) )"		1222995	166					
ANR	1224566	Condition	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_OCTAL3 )"	3436:10:75423:75463	1222995	0	True				
ANR	1224567	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ESC_OCTAL3 )"		1222995	0					
ANR	1224568	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1224569	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1224570	ArgumentList	syn		1222995	1					
ANR	1224571	Argument	syn		1222995	0					
ANR	1224572	Identifier	syn		1222995	0					
ANR	1224573	Argument	ONIG_SYN_OP_ESC_OCTAL3		1222995	1					
ANR	1224574	Identifier	ONIG_SYN_OP_ESC_OCTAL3		1222995	0					
ANR	1224575	CompoundStatement		310:53:8165:8165	1222995	1					
ANR	1224576	ExpressionStatement	prev = p	3437:1:75469:75477	1222995	0	True				
ANR	1224577	AssignmentExpression	prev = p		1222995	0		=			
ANR	1224578	Identifier	prev		1222995	0					
ANR	1224579	Identifier	p		1222995	1					
ANR	1224580	ExpressionStatement	"num = scan_unsigned_octal_number ( & p , end , ( c == '0' ? 2 : 3 ) , enc )"	3438:1:75480:75544	1222995	1	True				
ANR	1224581	AssignmentExpression	"num = scan_unsigned_octal_number ( & p , end , ( c == '0' ? 2 : 3 ) , enc )"		1222995	0		=			
ANR	1224582	Identifier	num		1222995	0					
ANR	1224583	CallExpression	"scan_unsigned_octal_number ( & p , end , ( c == '0' ? 2 : 3 ) , enc )"		1222995	1					
ANR	1224584	Callee	scan_unsigned_octal_number		1222995	0					
ANR	1224585	Identifier	scan_unsigned_octal_number		1222995	0					
ANR	1224586	ArgumentList	& p		1222995	1					
ANR	1224587	Argument	& p		1222995	0					
ANR	1224588	UnaryOperationExpression	& p		1222995	0					
ANR	1224589	UnaryOperator	&		1222995	0					
ANR	1224590	Identifier	p		1222995	1					
ANR	1224591	Argument	end		1222995	1					
ANR	1224592	Identifier	end		1222995	0					
ANR	1224593	Argument	c == '0' ? 2 : 3		1222995	2					
ANR	1224594	ConditionalExpression	c == '0' ? 2 : 3		1222995	0					
ANR	1224595	Condition	c == '0'		1222995	0					
ANR	1224596	EqualityExpression	c == '0'		1222995	0		==			
ANR	1224597	Identifier	c		1222995	0					
ANR	1224598	PrimaryExpression	'0'		1222995	1					
ANR	1224599	PrimaryExpression	2		1222995	1					
ANR	1224600	PrimaryExpression	3		1222995	2					
ANR	1224601	Argument	enc		1222995	3					
ANR	1224602	Identifier	enc		1222995	0					
ANR	1224603	IfStatement	if ( num < 0 )		1222995	2					
ANR	1224604	Condition	num < 0	3439:5:75551:75557	1222995	0	True				
ANR	1224605	RelationalExpression	num < 0		1222995	0		<			
ANR	1224606	Identifier	num		1222995	0					
ANR	1224607	PrimaryExpression	0		1222995	1					
ANR	1224608	ReturnStatement	return ONIGERR_TOO_BIG_NUMBER ;	3439:14:75560:75589	1222995	1	True				
ANR	1224609	Identifier	ONIGERR_TOO_BIG_NUMBER		1222995	0					
ANR	1224610	IfStatement	if ( p == prev )		1222995	3					
ANR	1224611	Condition	p == prev	3440:5:75596:75604	1222995	0	True				
ANR	1224612	EqualityExpression	p == prev		1222995	0		==			
ANR	1224613	Identifier	p		1222995	0					
ANR	1224614	Identifier	prev		1222995	1					
ANR	1224615	CompoundStatement		314:16:8306:8306	1222995	1					
ANR	1224616	ExpressionStatement	num = 0	3441:3:75639:75646	1222995	0	True				
ANR	1224617	AssignmentExpression	num = 0		1222995	0		=			
ANR	1224618	Identifier	num		1222995	0					
ANR	1224619	PrimaryExpression	0		1222995	1					
ANR	1224620	ExpressionStatement	tok -> type = TK_RAW_BYTE	3443:1:75678:75701	1222995	4	True				
ANR	1224621	AssignmentExpression	tok -> type = TK_RAW_BYTE		1222995	0		=			
ANR	1224622	PtrMemberAccess	tok -> type		1222995	0					
ANR	1224623	Identifier	tok		1222995	0					
ANR	1224624	Identifier	type		1222995	1					
ANR	1224625	Identifier	TK_RAW_BYTE		1222995	1					
ANR	1224626	ExpressionStatement	tok -> base = 8	3444:1:75704:75717	1222995	5	True				
ANR	1224627	AssignmentExpression	tok -> base = 8		1222995	0		=			
ANR	1224628	PtrMemberAccess	tok -> base		1222995	0					
ANR	1224629	Identifier	tok		1222995	0					
ANR	1224630	Identifier	base		1222995	1					
ANR	1224631	PrimaryExpression	8		1222995	1					
ANR	1224632	ExpressionStatement	tok -> u . c = num	3445:1:75720:75735	1222995	6	True				
ANR	1224633	AssignmentExpression	tok -> u . c = num		1222995	0		=			
ANR	1224634	MemberAccess	tok -> u . c		1222995	0					
ANR	1224635	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224636	Identifier	tok		1222995	0					
ANR	1224637	Identifier	u		1222995	1					
ANR	1224638	Identifier	c		1222995	1					
ANR	1224639	Identifier	num		1222995	1					
ANR	1224640	ElseStatement	else		1222995	0					
ANR	1224641	IfStatement	if ( c != '0' )		1222995	0					
ANR	1224642	Condition	c != '0'	3447:15:75760:75767	1222995	0	True				
ANR	1224643	EqualityExpression	c != '0'		1222995	0		!=			
ANR	1224644	Identifier	c		1222995	0					
ANR	1224645	PrimaryExpression	'0'		1222995	1					
ANR	1224646	CompoundStatement		321:25:8469:8469	1222995	1					
ANR	1224647	ExpressionStatement	PINC	3448:1:75773:75777	1222995	0	True				
ANR	1224648	Identifier	PINC		1222995	0					
ANR	1224649	BreakStatement	break ;	3450:6:75793:75798	1222995	167	True				
ANR	1224650	Label	case 'k' :	3453:4:75828:75836	1222995	168	True				
ANR	1224651	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_K_NAMED_BACKREF ) )"		1222995	169					
ANR	1224652	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_K_NAMED_BACKREF )"	3454:10:75848:75899	1222995	0	True				
ANR	1224653	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_K_NAMED_BACKREF )"		1222995	0					
ANR	1224654	Callee	IS_SYNTAX_OP2		1222995	0					
ANR	1224655	Identifier	IS_SYNTAX_OP2		1222995	0					
ANR	1224656	ArgumentList	syn		1222995	1					
ANR	1224657	Argument	syn		1222995	0					
ANR	1224658	Identifier	syn		1222995	0					
ANR	1224659	Argument	ONIG_SYN_OP2_ESC_K_NAMED_BACKREF		1222995	1					
ANR	1224660	Identifier	ONIG_SYN_OP2_ESC_K_NAMED_BACKREF		1222995	0					
ANR	1224661	CompoundStatement		328:64:8601:8601	1222995	1					
ANR	1224662	ExpressionStatement	PFETCH ( c )	3455:1:75905:75914	1222995	0	True				
ANR	1224663	CallExpression	PFETCH ( c )		1222995	0					
ANR	1224664	Callee	PFETCH		1222995	0					
ANR	1224665	Identifier	PFETCH		1222995	0					
ANR	1224666	ArgumentList	c		1222995	1					
ANR	1224667	Argument	c		1222995	0					
ANR	1224668	Identifier	c		1222995	0					
ANR	1224669	IfStatement	if ( c == '<' || c == '\\'' )		1222995	1					
ANR	1224670	Condition	c == '<' || c == '\\''	3456:5:75921:75941	1222995	0	True				
ANR	1224671	OrExpression	c == '<' || c == '\\''		1222995	0		||			
ANR	1224672	EqualityExpression	c == '<'		1222995	0		==			
ANR	1224673	Identifier	c		1222995	0					
ANR	1224674	PrimaryExpression	'<'		1222995	1					
ANR	1224675	EqualityExpression	c == '\\''		1222995	1		==			
ANR	1224676	Identifier	c		1222995	0					
ANR	1224677	PrimaryExpression	'\\''		1222995	1					
ANR	1224678	CompoundStatement		333:3:8683:8695	1222995	1					
ANR	1224679	IdentifierDeclStatement	UChar * name_end ;	3457:3:75949:75964	1222995	0	True				
ANR	1224680	IdentifierDecl	* name_end		1222995	0					
ANR	1224681	IdentifierDeclType	UChar *		1222995	0					
ANR	1224682	Identifier	name_end		1222995	1					
ANR	1224683	IdentifierDeclStatement	int * backs ;	3458:3:75969:75979	1222995	1	True				
ANR	1224684	IdentifierDecl	* backs		1222995	0					
ANR	1224685	IdentifierDeclType	int *		1222995	0					
ANR	1224686	Identifier	backs		1222995	1					
ANR	1224687	IdentifierDeclStatement	int back_num ;	3459:3:75984:75996	1222995	2	True				
ANR	1224688	IdentifierDecl	back_num		1222995	0					
ANR	1224689	IdentifierDeclType	int		1222995	0					
ANR	1224690	Identifier	back_num		1222995	1					
ANR	1224691	ExpressionStatement	prev = p	3461:3:76002:76010	1222995	3	True				
ANR	1224692	AssignmentExpression	prev = p		1222995	0		=			
ANR	1224693	Identifier	prev		1222995	0					
ANR	1224694	Identifier	p		1222995	1					
ANR	1224695	ExpressionStatement	name_end = NULL_UCHARP	3464:3:76046:76068	1222995	4	True				
ANR	1224696	AssignmentExpression	name_end = NULL_UCHARP		1222995	0		=			
ANR	1224697	Identifier	name_end		1222995	0					
ANR	1224698	Identifier	NULL_UCHARP		1222995	1					
ANR	1224699	ExpressionStatement	"r = fetch_name_with_level ( ( OnigCodePoint ) c , & p , end , & name_end , env , & back_num , & tok -> u . backref . level )"	3465:3:76108:76219	1222995	5	True				
ANR	1224700	AssignmentExpression	"r = fetch_name_with_level ( ( OnigCodePoint ) c , & p , end , & name_end , env , & back_num , & tok -> u . backref . level )"		1222995	0		=			
ANR	1224701	Identifier	r		1222995	0					
ANR	1224702	CallExpression	"fetch_name_with_level ( ( OnigCodePoint ) c , & p , end , & name_end , env , & back_num , & tok -> u . backref . level )"		1222995	1					
ANR	1224703	Callee	fetch_name_with_level		1222995	0					
ANR	1224704	Identifier	fetch_name_with_level		1222995	0					
ANR	1224705	ArgumentList	( OnigCodePoint ) c		1222995	1					
ANR	1224706	Argument	( OnigCodePoint ) c		1222995	0					
ANR	1224707	CastExpression	( OnigCodePoint ) c		1222995	0					
ANR	1224708	CastTarget	OnigCodePoint		1222995	0					
ANR	1224709	Identifier	c		1222995	1					
ANR	1224710	Argument	& p		1222995	1					
ANR	1224711	UnaryOperationExpression	& p		1222995	0					
ANR	1224712	UnaryOperator	&		1222995	0					
ANR	1224713	Identifier	p		1222995	1					
ANR	1224714	Argument	end		1222995	2					
ANR	1224715	Identifier	end		1222995	0					
ANR	1224716	Argument	& name_end		1222995	3					
ANR	1224717	UnaryOperationExpression	& name_end		1222995	0					
ANR	1224718	UnaryOperator	&		1222995	0					
ANR	1224719	Identifier	name_end		1222995	1					
ANR	1224720	Argument	env		1222995	4					
ANR	1224721	Identifier	env		1222995	0					
ANR	1224722	Argument	& back_num		1222995	5					
ANR	1224723	UnaryOperationExpression	& back_num		1222995	0					
ANR	1224724	UnaryOperator	&		1222995	0					
ANR	1224725	Identifier	back_num		1222995	1					
ANR	1224726	Argument	& tok -> u . backref . level		1222995	6					
ANR	1224727	UnaryOperationExpression	& tok -> u . backref . level		1222995	0					
ANR	1224728	UnaryOperator	&		1222995	0					
ANR	1224729	MemberAccess	tok -> u . backref . level		1222995	1					
ANR	1224730	MemberAccess	tok -> u . backref		1222995	0					
ANR	1224731	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224732	Identifier	tok		1222995	0					
ANR	1224733	Identifier	u		1222995	1					
ANR	1224734	Identifier	backref		1222995	1					
ANR	1224735	Identifier	level		1222995	1					
ANR	1224736	IfStatement	if ( r == 1 )		1222995	6					
ANR	1224737	Condition	r == 1	3467:7:76228:76233	1222995	0	True				
ANR	1224738	EqualityExpression	r == 1		1222995	0		==			
ANR	1224739	Identifier	r		1222995	0					
ANR	1224740	PrimaryExpression	1		1222995	1					
ANR	1224741	ExpressionStatement	tok -> u . backref . exist_level = 1	3467:15:76236:76266	1222995	1	True				
ANR	1224742	AssignmentExpression	tok -> u . backref . exist_level = 1		1222995	0		=			
ANR	1224743	MemberAccess	tok -> u . backref . exist_level		1222995	0					
ANR	1224744	MemberAccess	tok -> u . backref		1222995	0					
ANR	1224745	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224746	Identifier	tok		1222995	0					
ANR	1224747	Identifier	u		1222995	1					
ANR	1224748	Identifier	backref		1222995	1					
ANR	1224749	Identifier	exist_level		1222995	1					
ANR	1224750	PrimaryExpression	1		1222995	1					
ANR	1224751	ElseStatement	else		1222995	0					
ANR	1224752	ExpressionStatement	tok -> u . backref . exist_level = 0	3468:15:76283:76313	1222995	0	True				
ANR	1224753	AssignmentExpression	tok -> u . backref . exist_level = 0		1222995	0		=			
ANR	1224754	MemberAccess	tok -> u . backref . exist_level		1222995	0					
ANR	1224755	MemberAccess	tok -> u . backref		1222995	0					
ANR	1224756	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224757	Identifier	tok		1222995	0					
ANR	1224758	Identifier	u		1222995	1					
ANR	1224759	Identifier	backref		1222995	1					
ANR	1224760	Identifier	exist_level		1222995	1					
ANR	1224761	PrimaryExpression	0		1222995	1					
ANR	1224762	IfStatement	if ( r < 0 )		1222995	7					
ANR	1224763	Condition	r < 0	3472:7:76393:76397	1222995	0	True				
ANR	1224764	RelationalExpression	r < 0		1222995	0		<			
ANR	1224765	Identifier	r		1222995	0					
ANR	1224766	PrimaryExpression	0		1222995	1					
ANR	1224767	ReturnStatement	return r ;	3472:14:76400:76408	1222995	1	True				
ANR	1224768	Identifier	r		1222995	0					
ANR	1224769	IfStatement	if ( back_num != 0 )		1222995	8					
ANR	1224770	Condition	back_num != 0	3474:7:76418:76430	1222995	0	True				
ANR	1224771	EqualityExpression	back_num != 0		1222995	0		!=			
ANR	1224772	Identifier	back_num		1222995	0					
ANR	1224773	PrimaryExpression	0		1222995	1					
ANR	1224774	CompoundStatement		348:22:9132:9132	1222995	1					
ANR	1224775	IfStatement	if ( back_num < 0 )		1222995	0					
ANR	1224776	Condition	back_num < 0	3475:9:76444:76455	1222995	0	True				
ANR	1224777	RelationalExpression	back_num < 0		1222995	0		<			
ANR	1224778	Identifier	back_num		1222995	0					
ANR	1224779	PrimaryExpression	0		1222995	1					
ANR	1224780	CompoundStatement		349:23:9157:9157	1222995	1					
ANR	1224781	ExpressionStatement	"back_num = BACKREF_REL_TO_ABS ( back_num , env )"	3476:7:76467:76511	1222995	0	True				
ANR	1224782	AssignmentExpression	"back_num = BACKREF_REL_TO_ABS ( back_num , env )"		1222995	0		=			
ANR	1224783	Identifier	back_num		1222995	0					
ANR	1224784	CallExpression	"BACKREF_REL_TO_ABS ( back_num , env )"		1222995	1					
ANR	1224785	Callee	BACKREF_REL_TO_ABS		1222995	0					
ANR	1224786	Identifier	BACKREF_REL_TO_ABS		1222995	0					
ANR	1224787	ArgumentList	back_num		1222995	1					
ANR	1224788	Argument	back_num		1222995	0					
ANR	1224789	Identifier	back_num		1222995	0					
ANR	1224790	Argument	env		1222995	1					
ANR	1224791	Identifier	env		1222995	0					
ANR	1224792	IfStatement	if ( back_num <= 0 )		1222995	1					
ANR	1224793	Condition	back_num <= 0	3477:11:76524:76536	1222995	0	True				
ANR	1224794	RelationalExpression	back_num <= 0		1222995	0		<=			
ANR	1224795	Identifier	back_num		1222995	0					
ANR	1224796	PrimaryExpression	0		1222995	1					
ANR	1224797	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	3478:2:76541:76571	1222995	1	True				
ANR	1224798	Identifier	ONIGERR_INVALID_BACKREF		1222995	0					
ANR	1224799	IfStatement	"if ( IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF ) )"		1222995	1					
ANR	1224800	Condition	"IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF )"	3481:9:76590:76637	1222995	0	True				
ANR	1224801	CallExpression	"IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF )"		1222995	0					
ANR	1224802	Callee	IS_SYNTAX_BV		1222995	0					
ANR	1224803	Identifier	IS_SYNTAX_BV		1222995	0					
ANR	1224804	ArgumentList	syn		1222995	1					
ANR	1224805	Argument	syn		1222995	0					
ANR	1224806	Identifier	syn		1222995	0					
ANR	1224807	Argument	ONIG_SYN_STRICT_CHECK_BACKREF		1222995	1					
ANR	1224808	Identifier	ONIG_SYN_STRICT_CHECK_BACKREF		1222995	0					
ANR	1224809	CompoundStatement		355:59:9339:9339	1222995	1					
ANR	1224810	IfStatement	if ( back_num > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ back_num ] ) )		1222995	0					
ANR	1224811	Condition	back_num > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ back_num ] )	3482:11:76653:76724	1222995	0	True				
ANR	1224812	OrExpression	back_num > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ back_num ] )		1222995	0		||			
ANR	1224813	RelationalExpression	back_num > env -> num_mem		1222995	0		>			
ANR	1224814	Identifier	back_num		1222995	0					
ANR	1224815	PtrMemberAccess	env -> num_mem		1222995	1					
ANR	1224816	Identifier	env		1222995	0					
ANR	1224817	Identifier	num_mem		1222995	1					
ANR	1224818	CallExpression	IS_NULL ( SCANENV_MEM_NODES ( env ) [ back_num ] )		1222995	1					
ANR	1224819	Callee	IS_NULL		1222995	0					
ANR	1224820	Identifier	IS_NULL		1222995	0					
ANR	1224821	ArgumentList	SCANENV_MEM_NODES ( env ) [ back_num ]		1222995	1					
ANR	1224822	Argument	SCANENV_MEM_NODES ( env ) [ back_num ]		1222995	0					
ANR	1224823	ArrayIndexing	SCANENV_MEM_NODES ( env ) [ back_num ]		1222995	0					
ANR	1224824	CallExpression	SCANENV_MEM_NODES ( env )		1222995	0					
ANR	1224825	Callee	SCANENV_MEM_NODES		1222995	0					
ANR	1224826	Identifier	SCANENV_MEM_NODES		1222995	0					
ANR	1224827	ArgumentList	env		1222995	1					
ANR	1224828	Argument	env		1222995	0					
ANR	1224829	Identifier	env		1222995	0					
ANR	1224830	Identifier	back_num		1222995	1					
ANR	1224831	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	3484:2:76729:76759	1222995	1	True				
ANR	1224832	Identifier	ONIGERR_INVALID_BACKREF		1222995	0					
ANR	1224833	ExpressionStatement	tok -> type = TK_BACKREF	3486:5:76773:76795	1222995	2	True				
ANR	1224834	AssignmentExpression	tok -> type = TK_BACKREF		1222995	0		=			
ANR	1224835	PtrMemberAccess	tok -> type		1222995	0					
ANR	1224836	Identifier	tok		1222995	0					
ANR	1224837	Identifier	type		1222995	1					
ANR	1224838	Identifier	TK_BACKREF		1222995	1					
ANR	1224839	ExpressionStatement	tok -> u . backref . by_name = 0	3487:5:76802:76828	1222995	3	True				
ANR	1224840	AssignmentExpression	tok -> u . backref . by_name = 0		1222995	0		=			
ANR	1224841	MemberAccess	tok -> u . backref . by_name		1222995	0					
ANR	1224842	MemberAccess	tok -> u . backref		1222995	0					
ANR	1224843	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224844	Identifier	tok		1222995	0					
ANR	1224845	Identifier	u		1222995	1					
ANR	1224846	Identifier	backref		1222995	1					
ANR	1224847	Identifier	by_name		1222995	1					
ANR	1224848	PrimaryExpression	0		1222995	1					
ANR	1224849	ExpressionStatement	tok -> u . backref . num = 1	3488:5:76835:76858	1222995	4	True				
ANR	1224850	AssignmentExpression	tok -> u . backref . num = 1		1222995	0		=			
ANR	1224851	MemberAccess	tok -> u . backref . num		1222995	0					
ANR	1224852	MemberAccess	tok -> u . backref		1222995	0					
ANR	1224853	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224854	Identifier	tok		1222995	0					
ANR	1224855	Identifier	u		1222995	1					
ANR	1224856	Identifier	backref		1222995	1					
ANR	1224857	Identifier	num		1222995	1					
ANR	1224858	PrimaryExpression	1		1222995	1					
ANR	1224859	ExpressionStatement	tok -> u . backref . ref1 = back_num	3489:5:76865:76895	1222995	5	True				
ANR	1224860	AssignmentExpression	tok -> u . backref . ref1 = back_num		1222995	0		=			
ANR	1224861	MemberAccess	tok -> u . backref . ref1		1222995	0					
ANR	1224862	MemberAccess	tok -> u . backref		1222995	0					
ANR	1224863	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224864	Identifier	tok		1222995	0					
ANR	1224865	Identifier	u		1222995	1					
ANR	1224866	Identifier	backref		1222995	1					
ANR	1224867	Identifier	ref1		1222995	1					
ANR	1224868	Identifier	back_num		1222995	1					
ANR	1224869	ElseStatement	else		1222995	0					
ANR	1224870	CompoundStatement		365:8:9609:9609	1222995	0					
ANR	1224871	ExpressionStatement	"num = onig_name_to_group_numbers ( env -> reg , prev , name_end , & backs )"	3492:5:76917:76983	1222995	0	True				
ANR	1224872	AssignmentExpression	"num = onig_name_to_group_numbers ( env -> reg , prev , name_end , & backs )"		1222995	0		=			
ANR	1224873	Identifier	num		1222995	0					
ANR	1224874	CallExpression	"onig_name_to_group_numbers ( env -> reg , prev , name_end , & backs )"		1222995	1					
ANR	1224875	Callee	onig_name_to_group_numbers		1222995	0					
ANR	1224876	Identifier	onig_name_to_group_numbers		1222995	0					
ANR	1224877	ArgumentList	env -> reg		1222995	1					
ANR	1224878	Argument	env -> reg		1222995	0					
ANR	1224879	PtrMemberAccess	env -> reg		1222995	0					
ANR	1224880	Identifier	env		1222995	0					
ANR	1224881	Identifier	reg		1222995	1					
ANR	1224882	Argument	prev		1222995	1					
ANR	1224883	Identifier	prev		1222995	0					
ANR	1224884	Argument	name_end		1222995	2					
ANR	1224885	Identifier	name_end		1222995	0					
ANR	1224886	Argument	& backs		1222995	3					
ANR	1224887	UnaryOperationExpression	& backs		1222995	0					
ANR	1224888	UnaryOperator	&		1222995	0					
ANR	1224889	Identifier	backs		1222995	1					
ANR	1224890	IfStatement	if ( num <= 0 )		1222995	1					
ANR	1224891	Condition	num <= 0	3493:9:76994:77001	1222995	0	True				
ANR	1224892	RelationalExpression	num <= 0		1222995	0		<=			
ANR	1224893	Identifier	num		1222995	0					
ANR	1224894	PrimaryExpression	0		1222995	1					
ANR	1224895	CompoundStatement		367:19:9703:9703	1222995	1					
ANR	1224896	ExpressionStatement	"onig_scan_env_set_error_string ( env , ONIGERR_UNDEFINED_NAME_REFERENCE , prev , name_end )"	3494:7:77013:77106	1222995	0	True				
ANR	1224897	CallExpression	"onig_scan_env_set_error_string ( env , ONIGERR_UNDEFINED_NAME_REFERENCE , prev , name_end )"		1222995	0					
ANR	1224898	Callee	onig_scan_env_set_error_string		1222995	0					
ANR	1224899	Identifier	onig_scan_env_set_error_string		1222995	0					
ANR	1224900	ArgumentList	env		1222995	1					
ANR	1224901	Argument	env		1222995	0					
ANR	1224902	Identifier	env		1222995	0					
ANR	1224903	Argument	ONIGERR_UNDEFINED_NAME_REFERENCE		1222995	1					
ANR	1224904	Identifier	ONIGERR_UNDEFINED_NAME_REFERENCE		1222995	0					
ANR	1224905	Argument	prev		1222995	2					
ANR	1224906	Identifier	prev		1222995	0					
ANR	1224907	Argument	name_end		1222995	3					
ANR	1224908	Identifier	name_end		1222995	0					
ANR	1224909	ReturnStatement	return ONIGERR_UNDEFINED_NAME_REFERENCE ;	3496:7:77115:77154	1222995	1	True				
ANR	1224910	Identifier	ONIGERR_UNDEFINED_NAME_REFERENCE		1222995	0					
ANR	1224911	IfStatement	"if ( IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF ) )"		1222995	2					
ANR	1224912	Condition	"IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF )"	3498:9:77172:77219	1222995	0	True				
ANR	1224913	CallExpression	"IS_SYNTAX_BV ( syn , ONIG_SYN_STRICT_CHECK_BACKREF )"		1222995	0					
ANR	1224914	Callee	IS_SYNTAX_BV		1222995	0					
ANR	1224915	Identifier	IS_SYNTAX_BV		1222995	0					
ANR	1224916	ArgumentList	syn		1222995	1					
ANR	1224917	Argument	syn		1222995	0					
ANR	1224918	Identifier	syn		1222995	0					
ANR	1224919	Argument	ONIG_SYN_STRICT_CHECK_BACKREF		1222995	1					
ANR	1224920	Identifier	ONIG_SYN_STRICT_CHECK_BACKREF		1222995	0					
ANR	1224921	CompoundStatement		373:7:9930:9935	1222995	1					
ANR	1224922	IdentifierDeclStatement	int i ;	3499:7:77231:77236	1222995	0	True				
ANR	1224923	IdentifierDecl	i		1222995	0					
ANR	1224924	IdentifierDeclType	int		1222995	0					
ANR	1224925	Identifier	i		1222995	1					
ANR	1224926	ForStatement	for ( i = 0 ; i < num ; i ++ )		1222995	1					
ANR	1224927	ForInit	i = 0 ;	3500:12:77250:77255	1222995	0	True				
ANR	1224928	AssignmentExpression	i = 0		1222995	0		=			
ANR	1224929	Identifier	i		1222995	0					
ANR	1224930	PrimaryExpression	0		1222995	1					
ANR	1224931	Condition	i < num	3500:19:77257:77263	1222995	1	True				
ANR	1224932	RelationalExpression	i < num		1222995	0		<			
ANR	1224933	Identifier	i		1222995	0					
ANR	1224934	Identifier	num		1222995	1					
ANR	1224935	PostIncDecOperationExpression	i ++	3500:28:77266:77268	1222995	2	True				
ANR	1224936	Identifier	i		1222995	0					
ANR	1224937	IncDec	++		1222995	1					
ANR	1224938	CompoundStatement		374:33:9970:9970	1222995	3					
ANR	1224939	IfStatement	if ( backs [ i ] > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ backs [ i ] ] ) )		1222995	0					
ANR	1224940	Condition	backs [ i ] > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ backs [ i ] ] )	3501:6:77279:77352	1222995	0	True				
ANR	1224941	OrExpression	backs [ i ] > env -> num_mem || IS_NULL ( SCANENV_MEM_NODES ( env ) [ backs [ i ] ] )		1222995	0		||			
ANR	1224942	RelationalExpression	backs [ i ] > env -> num_mem		1222995	0		>			
ANR	1224943	ArrayIndexing	backs [ i ]		1222995	0					
ANR	1224944	Identifier	backs		1222995	0					
ANR	1224945	Identifier	i		1222995	1					
ANR	1224946	PtrMemberAccess	env -> num_mem		1222995	1					
ANR	1224947	Identifier	env		1222995	0					
ANR	1224948	Identifier	num_mem		1222995	1					
ANR	1224949	CallExpression	IS_NULL ( SCANENV_MEM_NODES ( env ) [ backs [ i ] ] )		1222995	1					
ANR	1224950	Callee	IS_NULL		1222995	0					
ANR	1224951	Identifier	IS_NULL		1222995	0					
ANR	1224952	ArgumentList	SCANENV_MEM_NODES ( env ) [ backs [ i ] ]		1222995	1					
ANR	1224953	Argument	SCANENV_MEM_NODES ( env ) [ backs [ i ] ]		1222995	0					
ANR	1224954	ArrayIndexing	SCANENV_MEM_NODES ( env ) [ backs [ i ] ]		1222995	0					
ANR	1224955	CallExpression	SCANENV_MEM_NODES ( env )		1222995	0					
ANR	1224956	Callee	SCANENV_MEM_NODES		1222995	0					
ANR	1224957	Identifier	SCANENV_MEM_NODES		1222995	0					
ANR	1224958	ArgumentList	env		1222995	1					
ANR	1224959	Argument	env		1222995	0					
ANR	1224960	Identifier	env		1222995	0					
ANR	1224961	ArrayIndexing	backs [ i ]		1222995	1					
ANR	1224962	Identifier	backs		1222995	0					
ANR	1224963	Identifier	i		1222995	1					
ANR	1224964	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	3503:4:77359:77389	1222995	1	True				
ANR	1224965	Identifier	ONIGERR_INVALID_BACKREF		1222995	0					
ANR	1224966	ExpressionStatement	tok -> type = TK_BACKREF	3507:5:77413:77435	1222995	3	True				
ANR	1224967	AssignmentExpression	tok -> type = TK_BACKREF		1222995	0		=			
ANR	1224968	PtrMemberAccess	tok -> type		1222995	0					
ANR	1224969	Identifier	tok		1222995	0					
ANR	1224970	Identifier	type		1222995	1					
ANR	1224971	Identifier	TK_BACKREF		1222995	1					
ANR	1224972	ExpressionStatement	tok -> u . backref . by_name = 1	3508:5:77442:77468	1222995	4	True				
ANR	1224973	AssignmentExpression	tok -> u . backref . by_name = 1		1222995	0		=			
ANR	1224974	MemberAccess	tok -> u . backref . by_name		1222995	0					
ANR	1224975	MemberAccess	tok -> u . backref		1222995	0					
ANR	1224976	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224977	Identifier	tok		1222995	0					
ANR	1224978	Identifier	u		1222995	1					
ANR	1224979	Identifier	backref		1222995	1					
ANR	1224980	Identifier	by_name		1222995	1					
ANR	1224981	PrimaryExpression	1		1222995	1					
ANR	1224982	IfStatement	if ( num == 1 )		1222995	5					
ANR	1224983	Condition	num == 1	3509:9:77479:77486	1222995	0	True				
ANR	1224984	EqualityExpression	num == 1		1222995	0		==			
ANR	1224985	Identifier	num		1222995	0					
ANR	1224986	PrimaryExpression	1		1222995	1					
ANR	1224987	CompoundStatement		383:19:10188:10188	1222995	1					
ANR	1224988	ExpressionStatement	tok -> u . backref . num = 1	3510:7:77498:77521	1222995	0	True				
ANR	1224989	AssignmentExpression	tok -> u . backref . num = 1		1222995	0		=			
ANR	1224990	MemberAccess	tok -> u . backref . num		1222995	0					
ANR	1224991	MemberAccess	tok -> u . backref		1222995	0					
ANR	1224992	PtrMemberAccess	tok -> u		1222995	0					
ANR	1224993	Identifier	tok		1222995	0					
ANR	1224994	Identifier	u		1222995	1					
ANR	1224995	Identifier	backref		1222995	1					
ANR	1224996	Identifier	num		1222995	1					
ANR	1224997	PrimaryExpression	1		1222995	1					
ANR	1224998	ExpressionStatement	tok -> u . backref . ref1 = backs [ 0 ]	3511:7:77530:77560	1222995	1	True				
ANR	1224999	AssignmentExpression	tok -> u . backref . ref1 = backs [ 0 ]		1222995	0		=			
ANR	1225000	MemberAccess	tok -> u . backref . ref1		1222995	0					
ANR	1225001	MemberAccess	tok -> u . backref		1222995	0					
ANR	1225002	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225003	Identifier	tok		1222995	0					
ANR	1225004	Identifier	u		1222995	1					
ANR	1225005	Identifier	backref		1222995	1					
ANR	1225006	Identifier	ref1		1222995	1					
ANR	1225007	ArrayIndexing	backs [ 0 ]		1222995	1					
ANR	1225008	Identifier	backs		1222995	0					
ANR	1225009	PrimaryExpression	0		1222995	1					
ANR	1225010	ElseStatement	else		1222995	0					
ANR	1225011	CompoundStatement		387:10:10278:10278	1222995	0					
ANR	1225012	ExpressionStatement	tok -> u . backref . num = num	3514:7:77588:77613	1222995	0	True				
ANR	1225013	AssignmentExpression	tok -> u . backref . num = num		1222995	0		=			
ANR	1225014	MemberAccess	tok -> u . backref . num		1222995	0					
ANR	1225015	MemberAccess	tok -> u . backref		1222995	0					
ANR	1225016	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225017	Identifier	tok		1222995	0					
ANR	1225018	Identifier	u		1222995	1					
ANR	1225019	Identifier	backref		1222995	1					
ANR	1225020	Identifier	num		1222995	1					
ANR	1225021	Identifier	num		1222995	1					
ANR	1225022	ExpressionStatement	tok -> u . backref . refs = backs	3515:7:77622:77649	1222995	1	True				
ANR	1225023	AssignmentExpression	tok -> u . backref . refs = backs		1222995	0		=			
ANR	1225024	MemberAccess	tok -> u . backref . refs		1222995	0					
ANR	1225025	MemberAccess	tok -> u . backref		1222995	0					
ANR	1225026	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225027	Identifier	tok		1222995	0					
ANR	1225028	Identifier	u		1222995	1					
ANR	1225029	Identifier	backref		1222995	1					
ANR	1225030	Identifier	refs		1222995	1					
ANR	1225031	Identifier	backs		1222995	1					
ANR	1225032	ElseStatement	else		1222995	0					
ANR	1225033	ExpressionStatement	PUNFETCH	3520:3:77675:77683	1222995	0	True				
ANR	1225034	Identifier	PUNFETCH		1222995	0					
ANR	1225035	BreakStatement	break ;	3522:6:77699:77704	1222995	170	True				
ANR	1225036	Label	case 'g' :	3526:4:77741:77749	1222995	171	True				
ANR	1225037	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_G_SUBEXP_CALL ) )"		1222995	172					
ANR	1225038	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_G_SUBEXP_CALL )"	3527:10:77761:77810	1222995	0	True				
ANR	1225039	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_G_SUBEXP_CALL )"		1222995	0					
ANR	1225040	Callee	IS_SYNTAX_OP2		1222995	0					
ANR	1225041	Identifier	IS_SYNTAX_OP2		1222995	0					
ANR	1225042	ArgumentList	syn		1222995	1					
ANR	1225043	Argument	syn		1222995	0					
ANR	1225044	Identifier	syn		1222995	0					
ANR	1225045	Argument	ONIG_SYN_OP2_ESC_G_SUBEXP_CALL		1222995	1					
ANR	1225046	Identifier	ONIG_SYN_OP2_ESC_G_SUBEXP_CALL		1222995	0					
ANR	1225047	CompoundStatement		401:62:10512:10512	1222995	1					
ANR	1225048	ExpressionStatement	PFETCH ( c )	3528:1:77816:77825	1222995	0	True				
ANR	1225049	CallExpression	PFETCH ( c )		1222995	0					
ANR	1225050	Callee	PFETCH		1222995	0					
ANR	1225051	Identifier	PFETCH		1222995	0					
ANR	1225052	ArgumentList	c		1222995	1					
ANR	1225053	Argument	c		1222995	0					
ANR	1225054	Identifier	c		1222995	0					
ANR	1225055	IfStatement	if ( c == '<' || c == '\\'' )		1222995	1					
ANR	1225056	Condition	c == '<' || c == '\\''	3529:5:77832:77852	1222995	0	True				
ANR	1225057	OrExpression	c == '<' || c == '\\''		1222995	0		||			
ANR	1225058	EqualityExpression	c == '<'		1222995	0		==			
ANR	1225059	Identifier	c		1222995	0					
ANR	1225060	PrimaryExpression	'<'		1222995	1					
ANR	1225061	EqualityExpression	c == '\\''		1222995	1		==			
ANR	1225062	Identifier	c		1222995	0					
ANR	1225063	PrimaryExpression	'\\''		1222995	1					
ANR	1225064	CompoundStatement		405:3:10572:10587	1222995	1					
ANR	1225065	IdentifierDeclStatement	int gnum ;	3530:3:77860:77868	1222995	0	True				
ANR	1225066	IdentifierDecl	gnum		1222995	0					
ANR	1225067	IdentifierDeclType	int		1222995	0					
ANR	1225068	Identifier	gnum		1222995	1					
ANR	1225069	IdentifierDeclStatement	UChar * name_end ;	3531:3:77873:77888	1222995	1	True				
ANR	1225070	IdentifierDecl	* name_end		1222995	0					
ANR	1225071	IdentifierDeclType	UChar *		1222995	0					
ANR	1225072	Identifier	name_end		1222995	1					
ANR	1225073	ExpressionStatement	prev = p	3533:3:77894:77902	1222995	2	True				
ANR	1225074	AssignmentExpression	prev = p		1222995	0		=			
ANR	1225075	Identifier	prev		1222995	0					
ANR	1225076	Identifier	p		1222995	1					
ANR	1225077	ExpressionStatement	"r = fetch_name ( ( OnigCodePoint ) c , & p , end , & name_end , env , & gnum , 1 )"	3534:3:77907:77975	1222995	3	True				
ANR	1225078	AssignmentExpression	"r = fetch_name ( ( OnigCodePoint ) c , & p , end , & name_end , env , & gnum , 1 )"		1222995	0		=			
ANR	1225079	Identifier	r		1222995	0					
ANR	1225080	CallExpression	"fetch_name ( ( OnigCodePoint ) c , & p , end , & name_end , env , & gnum , 1 )"		1222995	1					
ANR	1225081	Callee	fetch_name		1222995	0					
ANR	1225082	Identifier	fetch_name		1222995	0					
ANR	1225083	ArgumentList	( OnigCodePoint ) c		1222995	1					
ANR	1225084	Argument	( OnigCodePoint ) c		1222995	0					
ANR	1225085	CastExpression	( OnigCodePoint ) c		1222995	0					
ANR	1225086	CastTarget	OnigCodePoint		1222995	0					
ANR	1225087	Identifier	c		1222995	1					
ANR	1225088	Argument	& p		1222995	1					
ANR	1225089	UnaryOperationExpression	& p		1222995	0					
ANR	1225090	UnaryOperator	&		1222995	0					
ANR	1225091	Identifier	p		1222995	1					
ANR	1225092	Argument	end		1222995	2					
ANR	1225093	Identifier	end		1222995	0					
ANR	1225094	Argument	& name_end		1222995	3					
ANR	1225095	UnaryOperationExpression	& name_end		1222995	0					
ANR	1225096	UnaryOperator	&		1222995	0					
ANR	1225097	Identifier	name_end		1222995	1					
ANR	1225098	Argument	env		1222995	4					
ANR	1225099	Identifier	env		1222995	0					
ANR	1225100	Argument	& gnum		1222995	5					
ANR	1225101	UnaryOperationExpression	& gnum		1222995	0					
ANR	1225102	UnaryOperator	&		1222995	0					
ANR	1225103	Identifier	gnum		1222995	1					
ANR	1225104	Argument	1		1222995	6					
ANR	1225105	PrimaryExpression	1		1222995	0					
ANR	1225106	IfStatement	if ( r < 0 )		1222995	4					
ANR	1225107	Condition	r < 0	3535:7:77984:77988	1222995	0	True				
ANR	1225108	RelationalExpression	r < 0		1222995	0		<			
ANR	1225109	Identifier	r		1222995	0					
ANR	1225110	PrimaryExpression	0		1222995	1					
ANR	1225111	ReturnStatement	return r ;	3535:14:77991:77999	1222995	1	True				
ANR	1225112	Identifier	r		1222995	0					
ANR	1225113	ExpressionStatement	tok -> type = TK_CALL	3537:3:78005:78024	1222995	5	True				
ANR	1225114	AssignmentExpression	tok -> type = TK_CALL		1222995	0		=			
ANR	1225115	PtrMemberAccess	tok -> type		1222995	0					
ANR	1225116	Identifier	tok		1222995	0					
ANR	1225117	Identifier	type		1222995	1					
ANR	1225118	Identifier	TK_CALL		1222995	1					
ANR	1225119	ExpressionStatement	tok -> u . call . name = prev	3538:3:78029:78056	1222995	6	True				
ANR	1225120	AssignmentExpression	tok -> u . call . name = prev		1222995	0		=			
ANR	1225121	MemberAccess	tok -> u . call . name		1222995	0					
ANR	1225122	MemberAccess	tok -> u . call		1222995	0					
ANR	1225123	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225124	Identifier	tok		1222995	0					
ANR	1225125	Identifier	u		1222995	1					
ANR	1225126	Identifier	call		1222995	1					
ANR	1225127	Identifier	name		1222995	1					
ANR	1225128	Identifier	prev		1222995	1					
ANR	1225129	ExpressionStatement	tok -> u . call . name_end = name_end	3539:3:78061:78092	1222995	7	True				
ANR	1225130	AssignmentExpression	tok -> u . call . name_end = name_end		1222995	0		=			
ANR	1225131	MemberAccess	tok -> u . call . name_end		1222995	0					
ANR	1225132	MemberAccess	tok -> u . call		1222995	0					
ANR	1225133	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225134	Identifier	tok		1222995	0					
ANR	1225135	Identifier	u		1222995	1					
ANR	1225136	Identifier	call		1222995	1					
ANR	1225137	Identifier	name_end		1222995	1					
ANR	1225138	Identifier	name_end		1222995	1					
ANR	1225139	ExpressionStatement	tok -> u . call . gnum = gnum	3540:3:78097:78124	1222995	8	True				
ANR	1225140	AssignmentExpression	tok -> u . call . gnum = gnum		1222995	0		=			
ANR	1225141	MemberAccess	tok -> u . call . gnum		1222995	0					
ANR	1225142	MemberAccess	tok -> u . call		1222995	0					
ANR	1225143	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225144	Identifier	tok		1222995	0					
ANR	1225145	Identifier	u		1222995	1					
ANR	1225146	Identifier	call		1222995	1					
ANR	1225147	Identifier	gnum		1222995	1					
ANR	1225148	Identifier	gnum		1222995	1					
ANR	1225149	ElseStatement	else		1222995	0					
ANR	1225150	ExpressionStatement	PUNFETCH	3543:3:78138:78146	1222995	0	True				
ANR	1225151	Identifier	PUNFETCH		1222995	0					
ANR	1225152	BreakStatement	break ;	3545:6:78162:78167	1222995	173	True				
ANR	1225153	Label	case 'Q' :	3548:4:78181:78189	1222995	174	True				
ANR	1225154	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE ) )"		1222995	175					
ANR	1225155	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE )"	3549:10:78201:78252	1222995	0	True				
ANR	1225156	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE )"		1222995	0					
ANR	1225157	Callee	IS_SYNTAX_OP2		1222995	0					
ANR	1225158	Identifier	IS_SYNTAX_OP2		1222995	0					
ANR	1225159	ArgumentList	syn		1222995	1					
ANR	1225160	Argument	syn		1222995	0					
ANR	1225161	Identifier	syn		1222995	0					
ANR	1225162	Argument	ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE		1222995	1					
ANR	1225163	Identifier	ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE		1222995	0					
ANR	1225164	CompoundStatement		423:64:10954:10954	1222995	1					
ANR	1225165	ExpressionStatement	tok -> type = TK_QUOTE_OPEN	3550:1:78258:78283	1222995	0	True				
ANR	1225166	AssignmentExpression	tok -> type = TK_QUOTE_OPEN		1222995	0		=			
ANR	1225167	PtrMemberAccess	tok -> type		1222995	0					
ANR	1225168	Identifier	tok		1222995	0					
ANR	1225169	Identifier	type		1222995	1					
ANR	1225170	Identifier	TK_QUOTE_OPEN		1222995	1					
ANR	1225171	BreakStatement	break ;	3552:6:78299:78304	1222995	176	True				
ANR	1225172	Label	case 'p' :	3554:4:78311:78319	1222995	177	True				
ANR	1225173	Label	case 'P' :	3555:4:78325:78333	1222995	178	True				
ANR	1225174	IfStatement	"if ( PPEEK_IS ( '{' ) && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY ) )"		1222995	179					
ANR	1225175	Condition	"PPEEK_IS ( '{' ) && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY )"	3556:10:78345:78422	1222995	0	True				
ANR	1225176	AndExpression	"PPEEK_IS ( '{' ) && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY )"		1222995	0		&&			
ANR	1225177	CallExpression	PPEEK_IS ( '{' )		1222995	0					
ANR	1225178	Callee	PPEEK_IS		1222995	0					
ANR	1225179	Identifier	PPEEK_IS		1222995	0					
ANR	1225180	ArgumentList	'{'		1222995	1					
ANR	1225181	Argument	'{'		1222995	0					
ANR	1225182	PrimaryExpression	'{'		1222995	0					
ANR	1225183	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY )"		1222995	1					
ANR	1225184	Callee	IS_SYNTAX_OP2		1222995	0					
ANR	1225185	Identifier	IS_SYNTAX_OP2		1222995	0					
ANR	1225186	ArgumentList	syn		1222995	1					
ANR	1225187	Argument	syn		1222995	0					
ANR	1225188	Identifier	syn		1222995	0					
ANR	1225189	Argument	ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY		1222995	1					
ANR	1225190	Identifier	ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY		1222995	0					
ANR	1225191	CompoundStatement		431:63:11124:11124	1222995	1					
ANR	1225192	ExpressionStatement	PINC	3558:1:78428:78432	1222995	0	True				
ANR	1225193	Identifier	PINC		1222995	0					
ANR	1225194	ExpressionStatement	tok -> type = TK_CHAR_PROPERTY	3559:1:78435:78463	1222995	1	True				
ANR	1225195	AssignmentExpression	tok -> type = TK_CHAR_PROPERTY		1222995	0		=			
ANR	1225196	PtrMemberAccess	tok -> type		1222995	0					
ANR	1225197	Identifier	tok		1222995	0					
ANR	1225198	Identifier	type		1222995	1					
ANR	1225199	Identifier	TK_CHAR_PROPERTY		1222995	1					
ANR	1225200	ExpressionStatement	tok -> u . prop . not = ( c == 'P' ? 1 : 0 )	3560:1:78466:78502	1222995	2	True				
ANR	1225201	AssignmentExpression	tok -> u . prop . not = ( c == 'P' ? 1 : 0 )		1222995	0		=			
ANR	1225202	MemberAccess	tok -> u . prop . not		1222995	0					
ANR	1225203	MemberAccess	tok -> u . prop		1222995	0					
ANR	1225204	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225205	Identifier	tok		1222995	0					
ANR	1225206	Identifier	u		1222995	1					
ANR	1225207	Identifier	prop		1222995	1					
ANR	1225208	Identifier	not		1222995	1					
ANR	1225209	ConditionalExpression	c == 'P' ? 1 : 0		1222995	1					
ANR	1225210	Condition	c == 'P'		1222995	0					
ANR	1225211	EqualityExpression	c == 'P'		1222995	0		==			
ANR	1225212	Identifier	c		1222995	0					
ANR	1225213	PrimaryExpression	'P'		1222995	1					
ANR	1225214	PrimaryExpression	1		1222995	1					
ANR	1225215	PrimaryExpression	0		1222995	2					
ANR	1225216	IfStatement	"if ( IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT ) )"		1222995	3					
ANR	1225217	Condition	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT )"	3562:5:78510:78568	1222995	0	True				
ANR	1225218	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT )"		1222995	0					
ANR	1225219	Callee	IS_SYNTAX_OP2		1222995	0					
ANR	1225220	Identifier	IS_SYNTAX_OP2		1222995	0					
ANR	1225221	ArgumentList	syn		1222995	1					
ANR	1225222	Argument	syn		1222995	0					
ANR	1225223	Identifier	syn		1222995	0					
ANR	1225224	Argument	ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT		1222995	1					
ANR	1225225	Identifier	ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT		1222995	0					
ANR	1225226	CompoundStatement		436:66:11270:11270	1222995	1					
ANR	1225227	ExpressionStatement	PFETCH ( c )	3563:3:78576:78585	1222995	0	True				
ANR	1225228	CallExpression	PFETCH ( c )		1222995	0					
ANR	1225229	Callee	PFETCH		1222995	0					
ANR	1225230	Identifier	PFETCH		1222995	0					
ANR	1225231	ArgumentList	c		1222995	1					
ANR	1225232	Argument	c		1222995	0					
ANR	1225233	Identifier	c		1222995	0					
ANR	1225234	IfStatement	if ( c == '^' )		1222995	1					
ANR	1225235	Condition	c == '^'	3564:7:78594:78601	1222995	0	True				
ANR	1225236	EqualityExpression	c == '^'		1222995	0		==			
ANR	1225237	Identifier	c		1222995	0					
ANR	1225238	PrimaryExpression	'^'		1222995	1					
ANR	1225239	CompoundStatement		438:17:11303:11303	1222995	1					
ANR	1225240	ExpressionStatement	tok -> u . prop . not = ( tok -> u . prop . not == 0 ? 1 : 0 )	3565:5:78611:78659	1222995	0	True				
ANR	1225241	AssignmentExpression	tok -> u . prop . not = ( tok -> u . prop . not == 0 ? 1 : 0 )		1222995	0		=			
ANR	1225242	MemberAccess	tok -> u . prop . not		1222995	0					
ANR	1225243	MemberAccess	tok -> u . prop		1222995	0					
ANR	1225244	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225245	Identifier	tok		1222995	0					
ANR	1225246	Identifier	u		1222995	1					
ANR	1225247	Identifier	prop		1222995	1					
ANR	1225248	Identifier	not		1222995	1					
ANR	1225249	ConditionalExpression	tok -> u . prop . not == 0 ? 1 : 0		1222995	1					
ANR	1225250	Condition	tok -> u . prop . not == 0		1222995	0					
ANR	1225251	EqualityExpression	tok -> u . prop . not == 0		1222995	0		==			
ANR	1225252	MemberAccess	tok -> u . prop . not		1222995	0					
ANR	1225253	MemberAccess	tok -> u . prop		1222995	0					
ANR	1225254	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225255	Identifier	tok		1222995	0					
ANR	1225256	Identifier	u		1222995	1					
ANR	1225257	Identifier	prop		1222995	1					
ANR	1225258	Identifier	not		1222995	1					
ANR	1225259	PrimaryExpression	0		1222995	1					
ANR	1225260	PrimaryExpression	1		1222995	1					
ANR	1225261	PrimaryExpression	0		1222995	2					
ANR	1225262	ElseStatement	else		1222995	0					
ANR	1225263	ExpressionStatement	PUNFETCH	3568:5:78679:78687	1222995	0	True				
ANR	1225264	Identifier	PUNFETCH		1222995	0					
ANR	1225265	BreakStatement	break ;	3571:6:78706:78711	1222995	180	True				
ANR	1225266	Label	default :	3573:4:78718:78725	1222995	181	True				
ANR	1225267	Identifier	default		1222995	0					
ANR	1225268	ExpressionStatement	PUNFETCH	3574:6:78733:78741	1222995	182	True				
ANR	1225269	Identifier	PUNFETCH		1222995	0					
ANR	1225270	ExpressionStatement	"num = fetch_escaped_value ( & p , end , env )"	3575:6:78749:78788	1222995	183	True				
ANR	1225271	AssignmentExpression	"num = fetch_escaped_value ( & p , end , env )"		1222995	0		=			
ANR	1225272	Identifier	num		1222995	0					
ANR	1225273	CallExpression	"fetch_escaped_value ( & p , end , env )"		1222995	1					
ANR	1225274	Callee	fetch_escaped_value		1222995	0					
ANR	1225275	Identifier	fetch_escaped_value		1222995	0					
ANR	1225276	ArgumentList	& p		1222995	1					
ANR	1225277	Argument	& p		1222995	0					
ANR	1225278	UnaryOperationExpression	& p		1222995	0					
ANR	1225279	UnaryOperator	&		1222995	0					
ANR	1225280	Identifier	p		1222995	1					
ANR	1225281	Argument	end		1222995	1					
ANR	1225282	Identifier	end		1222995	0					
ANR	1225283	Argument	env		1222995	2					
ANR	1225284	Identifier	env		1222995	0					
ANR	1225285	IfStatement	if ( num < 0 )		1222995	184					
ANR	1225286	Condition	num < 0	3576:10:78800:78806	1222995	0	True				
ANR	1225287	RelationalExpression	num < 0		1222995	0		<			
ANR	1225288	Identifier	num		1222995	0					
ANR	1225289	PrimaryExpression	0		1222995	1					
ANR	1225290	ReturnStatement	return num ;	3576:19:78809:78819	1222995	1	True				
ANR	1225291	Identifier	num		1222995	0					
ANR	1225292	IfStatement	if ( tok -> u . c != num )		1222995	185					
ANR	1225293	Condition	tok -> u . c != num	3578:10:78852:78866	1222995	0	True				
ANR	1225294	EqualityExpression	tok -> u . c != num		1222995	0		!=			
ANR	1225295	MemberAccess	tok -> u . c		1222995	0					
ANR	1225296	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225297	Identifier	tok		1222995	0					
ANR	1225298	Identifier	u		1222995	1					
ANR	1225299	Identifier	c		1222995	1					
ANR	1225300	Identifier	num		1222995	1					
ANR	1225301	CompoundStatement		452:27:11568:11568	1222995	1					
ANR	1225302	ExpressionStatement	tok -> type = TK_CODE_POINT	3579:1:78872:78897	1222995	0	True				
ANR	1225303	AssignmentExpression	tok -> type = TK_CODE_POINT		1222995	0		=			
ANR	1225304	PtrMemberAccess	tok -> type		1222995	0					
ANR	1225305	Identifier	tok		1222995	0					
ANR	1225306	Identifier	type		1222995	1					
ANR	1225307	Identifier	TK_CODE_POINT		1222995	1					
ANR	1225308	ExpressionStatement	tok -> u . code = ( OnigCodePoint ) num	3580:1:78900:78933	1222995	1	True				
ANR	1225309	AssignmentExpression	tok -> u . code = ( OnigCodePoint ) num		1222995	0		=			
ANR	1225310	MemberAccess	tok -> u . code		1222995	0					
ANR	1225311	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225312	Identifier	tok		1222995	0					
ANR	1225313	Identifier	u		1222995	1					
ANR	1225314	Identifier	code		1222995	1					
ANR	1225315	CastExpression	( OnigCodePoint ) num		1222995	1					
ANR	1225316	CastTarget	OnigCodePoint		1222995	0					
ANR	1225317	Identifier	num		1222995	1					
ANR	1225318	ElseStatement	else		1222995	0					
ANR	1225319	CompoundStatement		456:11:11653:11653	1222995	0					
ANR	1225320	ExpressionStatement	"p = tok -> backp + enclen ( enc , tok -> backp )"	3583:1:78970:79010	1222995	0	True				
ANR	1225321	AssignmentExpression	"p = tok -> backp + enclen ( enc , tok -> backp )"		1222995	0		=			
ANR	1225322	Identifier	p		1222995	0					
ANR	1225323	AdditiveExpression	"tok -> backp + enclen ( enc , tok -> backp )"		1222995	1		+			
ANR	1225324	PtrMemberAccess	tok -> backp		1222995	0					
ANR	1225325	Identifier	tok		1222995	0					
ANR	1225326	Identifier	backp		1222995	1					
ANR	1225327	CallExpression	"enclen ( enc , tok -> backp )"		1222995	1					
ANR	1225328	Callee	enclen		1222995	0					
ANR	1225329	Identifier	enclen		1222995	0					
ANR	1225330	ArgumentList	enc		1222995	1					
ANR	1225331	Argument	enc		1222995	0					
ANR	1225332	Identifier	enc		1222995	0					
ANR	1225333	Argument	tok -> backp		1222995	1					
ANR	1225334	PtrMemberAccess	tok -> backp		1222995	0					
ANR	1225335	Identifier	tok		1222995	0					
ANR	1225336	Identifier	backp		1222995	1					
ANR	1225337	BreakStatement	break ;	3585:6:79026:79031	1222995	186	True				
ANR	1225338	ElseStatement	else		1222995	0					
ANR	1225339	CompoundStatement		462:7:11749:11749	1222995	0					
ANR	1225340	ExpressionStatement	tok -> u . c = c	3589:4:79056:79068	1222995	0	True				
ANR	1225341	AssignmentExpression	tok -> u . c = c		1222995	0		=			
ANR	1225342	MemberAccess	tok -> u . c		1222995	0					
ANR	1225343	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225344	Identifier	tok		1222995	0					
ANR	1225345	Identifier	u		1222995	1					
ANR	1225346	Identifier	c		1222995	1					
ANR	1225347	Identifier	c		1222995	1					
ANR	1225348	ExpressionStatement	tok -> escaped = 0	3590:4:79074:79090	1222995	1	True				
ANR	1225349	AssignmentExpression	tok -> escaped = 0		1222995	0		=			
ANR	1225350	PtrMemberAccess	tok -> escaped		1222995	0					
ANR	1225351	Identifier	tok		1222995	0					
ANR	1225352	Identifier	escaped		1222995	1					
ANR	1225353	PrimaryExpression	0		1222995	1					
ANR	1225354	IfStatement	"if ( ( c != ONIG_INEFFECTIVE_META_CHAR ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VARIABLE_META_CHARACTERS ) )"		1222995	2					
ANR	1225355	Condition	"( c != ONIG_INEFFECTIVE_META_CHAR ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VARIABLE_META_CHARACTERS )"	3593:8:79132:79224	1222995	0	True				
ANR	1225356	AndExpression	"( c != ONIG_INEFFECTIVE_META_CHAR ) && IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VARIABLE_META_CHARACTERS )"		1222995	0		&&			
ANR	1225357	EqualityExpression	c != ONIG_INEFFECTIVE_META_CHAR		1222995	0		!=			
ANR	1225358	Identifier	c		1222995	0					
ANR	1225359	Identifier	ONIG_INEFFECTIVE_META_CHAR		1222995	1					
ANR	1225360	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VARIABLE_META_CHARACTERS )"		1222995	1					
ANR	1225361	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1225362	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1225363	ArgumentList	syn		1222995	1					
ANR	1225364	Argument	syn		1222995	0					
ANR	1225365	Identifier	syn		1222995	0					
ANR	1225366	Argument	ONIG_SYN_OP_VARIABLE_META_CHARACTERS		1222995	1					
ANR	1225367	Identifier	ONIG_SYN_OP_VARIABLE_META_CHARACTERS		1222995	0					
ANR	1225368	CompoundStatement		468:58:11926:11926	1222995	1					
ANR	1225369	IfStatement	if ( c == MC_ANYCHAR ( syn ) )		1222995	0					
ANR	1225370	Condition	c == MC_ANYCHAR ( syn )	3595:10:79239:79258	1222995	0	True				
ANR	1225371	EqualityExpression	c == MC_ANYCHAR ( syn )		1222995	0		==			
ANR	1225372	Identifier	c		1222995	0					
ANR	1225373	CallExpression	MC_ANYCHAR ( syn )		1222995	1					
ANR	1225374	Callee	MC_ANYCHAR		1222995	0					
ANR	1225375	Identifier	MC_ANYCHAR		1222995	0					
ANR	1225376	ArgumentList	syn		1222995	1					
ANR	1225377	Argument	syn		1222995	0					
ANR	1225378	Identifier	syn		1222995	0					
ANR	1225379	GotoStatement	goto any_char ;	3596:1:79262:79275	1222995	1	True				
ANR	1225380	Identifier	any_char		1222995	0					
ANR	1225381	ElseStatement	else		1222995	0					
ANR	1225382	IfStatement	if ( c == MC_ANYTIME ( syn ) )		1222995	0					
ANR	1225383	Condition	c == MC_ANYTIME ( syn )	3597:15:79292:79311	1222995	0	True				
ANR	1225384	EqualityExpression	c == MC_ANYTIME ( syn )		1222995	0		==			
ANR	1225385	Identifier	c		1222995	0					
ANR	1225386	CallExpression	MC_ANYTIME ( syn )		1222995	1					
ANR	1225387	Callee	MC_ANYTIME		1222995	0					
ANR	1225388	Identifier	MC_ANYTIME		1222995	0					
ANR	1225389	ArgumentList	syn		1222995	1					
ANR	1225390	Argument	syn		1222995	0					
ANR	1225391	Identifier	syn		1222995	0					
ANR	1225392	GotoStatement	goto anytime ;	3598:1:79315:79327	1222995	1	True				
ANR	1225393	Identifier	anytime		1222995	0					
ANR	1225394	ElseStatement	else		1222995	0					
ANR	1225395	IfStatement	if ( c == MC_ZERO_OR_ONE_TIME ( syn ) )		1222995	0					
ANR	1225396	Condition	c == MC_ZERO_OR_ONE_TIME ( syn )	3599:15:79344:79372	1222995	0	True				
ANR	1225397	EqualityExpression	c == MC_ZERO_OR_ONE_TIME ( syn )		1222995	0		==			
ANR	1225398	Identifier	c		1222995	0					
ANR	1225399	CallExpression	MC_ZERO_OR_ONE_TIME ( syn )		1222995	1					
ANR	1225400	Callee	MC_ZERO_OR_ONE_TIME		1222995	0					
ANR	1225401	Identifier	MC_ZERO_OR_ONE_TIME		1222995	0					
ANR	1225402	ArgumentList	syn		1222995	1					
ANR	1225403	Argument	syn		1222995	0					
ANR	1225404	Identifier	syn		1222995	0					
ANR	1225405	GotoStatement	goto zero_or_one_time ;	3600:1:79376:79397	1222995	1	True				
ANR	1225406	Identifier	zero_or_one_time		1222995	0					
ANR	1225407	ElseStatement	else		1222995	0					
ANR	1225408	IfStatement	if ( c == MC_ONE_OR_MORE_TIME ( syn ) )		1222995	0					
ANR	1225409	Condition	c == MC_ONE_OR_MORE_TIME ( syn )	3601:15:79414:79442	1222995	0	True				
ANR	1225410	EqualityExpression	c == MC_ONE_OR_MORE_TIME ( syn )		1222995	0		==			
ANR	1225411	Identifier	c		1222995	0					
ANR	1225412	CallExpression	MC_ONE_OR_MORE_TIME ( syn )		1222995	1					
ANR	1225413	Callee	MC_ONE_OR_MORE_TIME		1222995	0					
ANR	1225414	Identifier	MC_ONE_OR_MORE_TIME		1222995	0					
ANR	1225415	ArgumentList	syn		1222995	1					
ANR	1225416	Argument	syn		1222995	0					
ANR	1225417	Identifier	syn		1222995	0					
ANR	1225418	GotoStatement	goto one_or_more_time ;	3602:1:79446:79467	1222995	1	True				
ANR	1225419	Identifier	one_or_more_time		1222995	0					
ANR	1225420	ElseStatement	else		1222995	0					
ANR	1225421	IfStatement	if ( c == MC_ANYCHAR_ANYTIME ( syn ) )		1222995	0					
ANR	1225422	Condition	c == MC_ANYCHAR_ANYTIME ( syn )	3603:15:79484:79511	1222995	0	True				
ANR	1225423	EqualityExpression	c == MC_ANYCHAR_ANYTIME ( syn )		1222995	0		==			
ANR	1225424	Identifier	c		1222995	0					
ANR	1225425	CallExpression	MC_ANYCHAR_ANYTIME ( syn )		1222995	1					
ANR	1225426	Callee	MC_ANYCHAR_ANYTIME		1222995	0					
ANR	1225427	Identifier	MC_ANYCHAR_ANYTIME		1222995	0					
ANR	1225428	ArgumentList	syn		1222995	1					
ANR	1225429	Argument	syn		1222995	0					
ANR	1225430	Identifier	syn		1222995	0					
ANR	1225431	CompoundStatement		477:45:12213:12213	1222995	1					
ANR	1225432	ExpressionStatement	tok -> type = TK_ANYCHAR_ANYTIME	3604:1:79517:79547	1222995	0	True				
ANR	1225433	AssignmentExpression	tok -> type = TK_ANYCHAR_ANYTIME		1222995	0		=			
ANR	1225434	PtrMemberAccess	tok -> type		1222995	0					
ANR	1225435	Identifier	tok		1222995	0					
ANR	1225436	Identifier	type		1222995	1					
ANR	1225437	Identifier	TK_ANYCHAR_ANYTIME		1222995	1					
ANR	1225438	GotoStatement	goto out ;	3605:1:79550:79558	1222995	1	True				
ANR	1225439	Identifier	out		1222995	0					
ANR	1225440	SwitchStatement	switch ( c )		1222995	3					
ANR	1225441	Condition	c	3610:12:79594:79594	1222995	0	True				
ANR	1225442	Identifier	c		1222995	0					
ANR	1225443	CompoundStatement		484:15:12296:12296	1222995	1					
ANR	1225444	Label	case '.' :	3611:4:79603:79611	1222995	0	True				
ANR	1225445	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DOT_ANYCHAR ) )"		1222995	1					
ANR	1225446	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DOT_ANYCHAR )"	3612:10:79623:79666	1222995	0	True				
ANR	1225447	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DOT_ANYCHAR )"		1222995	0					
ANR	1225448	UnaryOperator	!		1222995	0					
ANR	1225449	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_DOT_ANYCHAR )"		1222995	1					
ANR	1225450	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1225451	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1225452	ArgumentList	syn		1222995	1					
ANR	1225453	Argument	syn		1222995	0					
ANR	1225454	Identifier	syn		1222995	0					
ANR	1225455	Argument	ONIG_SYN_OP_DOT_ANYCHAR		1222995	1					
ANR	1225456	Identifier	ONIG_SYN_OP_DOT_ANYCHAR		1222995	0					
ANR	1225457	BreakStatement	break ;	3612:56:79669:79674	1222995	1	True				
ANR	1225458	Label	any_char :	3614:4:79711:79719	1222995	2	True				
ANR	1225459	Identifier	any_char		1222995	0					
ANR	1225460	ExpressionStatement	tok -> type = TK_ANYCHAR	3616:6:79734:79756	1222995	3	True				
ANR	1225461	AssignmentExpression	tok -> type = TK_ANYCHAR		1222995	0		=			
ANR	1225462	PtrMemberAccess	tok -> type		1222995	0					
ANR	1225463	Identifier	tok		1222995	0					
ANR	1225464	Identifier	type		1222995	1					
ANR	1225465	Identifier	TK_ANYCHAR		1222995	1					
ANR	1225466	BreakStatement	break ;	3617:6:79764:79769	1222995	4	True				
ANR	1225467	Label	case '*' :	3619:4:79776:79784	1222995	5	True				
ANR	1225468	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ASTERISK_ZERO_INF ) )"		1222995	6					
ANR	1225469	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ASTERISK_ZERO_INF )"	3620:10:79796:79845	1222995	0	True				
ANR	1225470	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ASTERISK_ZERO_INF )"		1222995	0					
ANR	1225471	UnaryOperator	!		1222995	0					
ANR	1225472	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_ASTERISK_ZERO_INF )"		1222995	1					
ANR	1225473	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1225474	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1225475	ArgumentList	syn		1222995	1					
ANR	1225476	Argument	syn		1222995	0					
ANR	1225477	Identifier	syn		1222995	0					
ANR	1225478	Argument	ONIG_SYN_OP_ASTERISK_ZERO_INF		1222995	1					
ANR	1225479	Identifier	ONIG_SYN_OP_ASTERISK_ZERO_INF		1222995	0					
ANR	1225480	BreakStatement	break ;	3620:62:79848:79853	1222995	1	True				
ANR	1225481	Label	anytime :	3622:4:79890:79897	1222995	7	True				
ANR	1225482	Identifier	anytime		1222995	0					
ANR	1225483	ExpressionStatement	tok -> type = TK_OP_REPEAT	3624:6:79912:79936	1222995	8	True				
ANR	1225484	AssignmentExpression	tok -> type = TK_OP_REPEAT		1222995	0		=			
ANR	1225485	PtrMemberAccess	tok -> type		1222995	0					
ANR	1225486	Identifier	tok		1222995	0					
ANR	1225487	Identifier	type		1222995	1					
ANR	1225488	Identifier	TK_OP_REPEAT		1222995	1					
ANR	1225489	ExpressionStatement	tok -> u . repeat . lower = 0	3625:6:79944:79967	1222995	9	True				
ANR	1225490	AssignmentExpression	tok -> u . repeat . lower = 0		1222995	0		=			
ANR	1225491	MemberAccess	tok -> u . repeat . lower		1222995	0					
ANR	1225492	MemberAccess	tok -> u . repeat		1222995	0					
ANR	1225493	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225494	Identifier	tok		1222995	0					
ANR	1225495	Identifier	u		1222995	1					
ANR	1225496	Identifier	repeat		1222995	1					
ANR	1225497	Identifier	lower		1222995	1					
ANR	1225498	PrimaryExpression	0		1222995	1					
ANR	1225499	ExpressionStatement	tok -> u . repeat . upper = REPEAT_INFINITE	3626:6:79975:80012	1222995	10	True				
ANR	1225500	AssignmentExpression	tok -> u . repeat . upper = REPEAT_INFINITE		1222995	0		=			
ANR	1225501	MemberAccess	tok -> u . repeat . upper		1222995	0					
ANR	1225502	MemberAccess	tok -> u . repeat		1222995	0					
ANR	1225503	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225504	Identifier	tok		1222995	0					
ANR	1225505	Identifier	u		1222995	1					
ANR	1225506	Identifier	repeat		1222995	1					
ANR	1225507	Identifier	upper		1222995	1					
ANR	1225508	Identifier	REPEAT_INFINITE		1222995	1					
ANR	1225509	GotoStatement	goto greedy_check ;	3627:6:80020:80037	1222995	11	True				
ANR	1225510	Identifier	greedy_check		1222995	0					
ANR	1225511	BreakStatement	break ;	3628:6:80045:80050	1222995	12	True				
ANR	1225512	Label	case '+' :	3630:4:80057:80065	1222995	13	True				
ANR	1225513	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_PLUS_ONE_INF ) )"		1222995	14					
ANR	1225514	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_PLUS_ONE_INF )"	3631:10:80077:80121	1222995	0	True				
ANR	1225515	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_PLUS_ONE_INF )"		1222995	0					
ANR	1225516	UnaryOperator	!		1222995	0					
ANR	1225517	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_PLUS_ONE_INF )"		1222995	1					
ANR	1225518	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1225519	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1225520	ArgumentList	syn		1222995	1					
ANR	1225521	Argument	syn		1222995	0					
ANR	1225522	Identifier	syn		1222995	0					
ANR	1225523	Argument	ONIG_SYN_OP_PLUS_ONE_INF		1222995	1					
ANR	1225524	Identifier	ONIG_SYN_OP_PLUS_ONE_INF		1222995	0					
ANR	1225525	BreakStatement	break ;	3631:57:80124:80129	1222995	1	True				
ANR	1225526	Label	one_or_more_time :	3633:4:80166:80182	1222995	15	True				
ANR	1225527	Identifier	one_or_more_time		1222995	0					
ANR	1225528	ExpressionStatement	tok -> type = TK_OP_REPEAT	3635:6:80197:80221	1222995	16	True				
ANR	1225529	AssignmentExpression	tok -> type = TK_OP_REPEAT		1222995	0		=			
ANR	1225530	PtrMemberAccess	tok -> type		1222995	0					
ANR	1225531	Identifier	tok		1222995	0					
ANR	1225532	Identifier	type		1222995	1					
ANR	1225533	Identifier	TK_OP_REPEAT		1222995	1					
ANR	1225534	ExpressionStatement	tok -> u . repeat . lower = 1	3636:6:80229:80252	1222995	17	True				
ANR	1225535	AssignmentExpression	tok -> u . repeat . lower = 1		1222995	0		=			
ANR	1225536	MemberAccess	tok -> u . repeat . lower		1222995	0					
ANR	1225537	MemberAccess	tok -> u . repeat		1222995	0					
ANR	1225538	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225539	Identifier	tok		1222995	0					
ANR	1225540	Identifier	u		1222995	1					
ANR	1225541	Identifier	repeat		1222995	1					
ANR	1225542	Identifier	lower		1222995	1					
ANR	1225543	PrimaryExpression	1		1222995	1					
ANR	1225544	ExpressionStatement	tok -> u . repeat . upper = REPEAT_INFINITE	3637:6:80260:80297	1222995	18	True				
ANR	1225545	AssignmentExpression	tok -> u . repeat . upper = REPEAT_INFINITE		1222995	0		=			
ANR	1225546	MemberAccess	tok -> u . repeat . upper		1222995	0					
ANR	1225547	MemberAccess	tok -> u . repeat		1222995	0					
ANR	1225548	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225549	Identifier	tok		1222995	0					
ANR	1225550	Identifier	u		1222995	1					
ANR	1225551	Identifier	repeat		1222995	1					
ANR	1225552	Identifier	upper		1222995	1					
ANR	1225553	Identifier	REPEAT_INFINITE		1222995	1					
ANR	1225554	GotoStatement	goto greedy_check ;	3638:6:80305:80322	1222995	19	True				
ANR	1225555	Identifier	greedy_check		1222995	0					
ANR	1225556	BreakStatement	break ;	3639:6:80330:80335	1222995	20	True				
ANR	1225557	Label	case '?' :	3641:4:80342:80350	1222995	21	True				
ANR	1225558	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_ZERO_ONE ) )"		1222995	22					
ANR	1225559	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_ZERO_ONE )"	3642:10:80362:80408	1222995	0	True				
ANR	1225560	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_ZERO_ONE )"		1222995	0					
ANR	1225561	UnaryOperator	!		1222995	0					
ANR	1225562	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_QMARK_ZERO_ONE )"		1222995	1					
ANR	1225563	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1225564	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1225565	ArgumentList	syn		1222995	1					
ANR	1225566	Argument	syn		1222995	0					
ANR	1225567	Identifier	syn		1222995	0					
ANR	1225568	Argument	ONIG_SYN_OP_QMARK_ZERO_ONE		1222995	1					
ANR	1225569	Identifier	ONIG_SYN_OP_QMARK_ZERO_ONE		1222995	0					
ANR	1225570	BreakStatement	break ;	3642:59:80411:80416	1222995	1	True				
ANR	1225571	Label	zero_or_one_time :	3644:4:80453:80469	1222995	23	True				
ANR	1225572	Identifier	zero_or_one_time		1222995	0					
ANR	1225573	ExpressionStatement	tok -> type = TK_OP_REPEAT	3646:6:80484:80508	1222995	24	True				
ANR	1225574	AssignmentExpression	tok -> type = TK_OP_REPEAT		1222995	0		=			
ANR	1225575	PtrMemberAccess	tok -> type		1222995	0					
ANR	1225576	Identifier	tok		1222995	0					
ANR	1225577	Identifier	type		1222995	1					
ANR	1225578	Identifier	TK_OP_REPEAT		1222995	1					
ANR	1225579	ExpressionStatement	tok -> u . repeat . lower = 0	3647:6:80516:80539	1222995	25	True				
ANR	1225580	AssignmentExpression	tok -> u . repeat . lower = 0		1222995	0		=			
ANR	1225581	MemberAccess	tok -> u . repeat . lower		1222995	0					
ANR	1225582	MemberAccess	tok -> u . repeat		1222995	0					
ANR	1225583	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225584	Identifier	tok		1222995	0					
ANR	1225585	Identifier	u		1222995	1					
ANR	1225586	Identifier	repeat		1222995	1					
ANR	1225587	Identifier	lower		1222995	1					
ANR	1225588	PrimaryExpression	0		1222995	1					
ANR	1225589	ExpressionStatement	tok -> u . repeat . upper = 1	3648:6:80547:80570	1222995	26	True				
ANR	1225590	AssignmentExpression	tok -> u . repeat . upper = 1		1222995	0		=			
ANR	1225591	MemberAccess	tok -> u . repeat . upper		1222995	0					
ANR	1225592	MemberAccess	tok -> u . repeat		1222995	0					
ANR	1225593	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225594	Identifier	tok		1222995	0					
ANR	1225595	Identifier	u		1222995	1					
ANR	1225596	Identifier	repeat		1222995	1					
ANR	1225597	Identifier	upper		1222995	1					
ANR	1225598	PrimaryExpression	1		1222995	1					
ANR	1225599	GotoStatement	goto greedy_check ;	3649:6:80578:80595	1222995	27	True				
ANR	1225600	Identifier	greedy_check		1222995	0					
ANR	1225601	BreakStatement	break ;	3650:6:80603:80608	1222995	28	True				
ANR	1225602	Label	case '{' :	3652:4:80615:80623	1222995	29	True				
ANR	1225603	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACE_INTERVAL ) )"		1222995	30					
ANR	1225604	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACE_INTERVAL )"	3653:10:80635:80681	1222995	0	True				
ANR	1225605	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACE_INTERVAL )"		1222995	0					
ANR	1225606	UnaryOperator	!		1222995	0					
ANR	1225607	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACE_INTERVAL )"		1222995	1					
ANR	1225608	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1225609	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1225610	ArgumentList	syn		1222995	1					
ANR	1225611	Argument	syn		1222995	0					
ANR	1225612	Identifier	syn		1222995	0					
ANR	1225613	Argument	ONIG_SYN_OP_BRACE_INTERVAL		1222995	1					
ANR	1225614	Identifier	ONIG_SYN_OP_BRACE_INTERVAL		1222995	0					
ANR	1225615	BreakStatement	break ;	3653:59:80684:80689	1222995	1	True				
ANR	1225616	ExpressionStatement	"r = fetch_range_quantifier ( & p , end , tok , env )"	3654:6:80697:80742	1222995	31	True				
ANR	1225617	AssignmentExpression	"r = fetch_range_quantifier ( & p , end , tok , env )"		1222995	0		=			
ANR	1225618	Identifier	r		1222995	0					
ANR	1225619	CallExpression	"fetch_range_quantifier ( & p , end , tok , env )"		1222995	1					
ANR	1225620	Callee	fetch_range_quantifier		1222995	0					
ANR	1225621	Identifier	fetch_range_quantifier		1222995	0					
ANR	1225622	ArgumentList	& p		1222995	1					
ANR	1225623	Argument	& p		1222995	0					
ANR	1225624	UnaryOperationExpression	& p		1222995	0					
ANR	1225625	UnaryOperator	&		1222995	0					
ANR	1225626	Identifier	p		1222995	1					
ANR	1225627	Argument	end		1222995	1					
ANR	1225628	Identifier	end		1222995	0					
ANR	1225629	Argument	tok		1222995	2					
ANR	1225630	Identifier	tok		1222995	0					
ANR	1225631	Argument	env		1222995	3					
ANR	1225632	Identifier	env		1222995	0					
ANR	1225633	IfStatement	if ( r < 0 )		1222995	32					
ANR	1225634	Condition	r < 0	3655:10:80754:80758	1222995	0	True				
ANR	1225635	RelationalExpression	r < 0		1222995	0		<			
ANR	1225636	Identifier	r		1222995	0					
ANR	1225637	PrimaryExpression	0		1222995	1					
ANR	1225638	ReturnStatement	return r ;	3655:17:80761:80769	1222995	1	True				
ANR	1225639	Identifier	r		1222995	0					
ANR	1225640	IfStatement	if ( r == 0 )		1222995	33					
ANR	1225641	Condition	r == 0	3656:10:80794:80799	1222995	0	True				
ANR	1225642	EqualityExpression	r == 0		1222995	0		==			
ANR	1225643	Identifier	r		1222995	0					
ANR	1225644	PrimaryExpression	0		1222995	1					
ANR	1225645	GotoStatement	goto greedy_check ;	3656:18:80802:80819	1222995	1	True				
ANR	1225646	Identifier	greedy_check		1222995	0					
ANR	1225647	ElseStatement	else		1222995	0					
ANR	1225648	IfStatement	if ( r == 2 )		1222995	0					
ANR	1225649	Condition	r == 2	3657:15:80836:80841	1222995	0	True				
ANR	1225650	EqualityExpression	r == 2		1222995	0		==			
ANR	1225651	Identifier	r		1222995	0					
ANR	1225652	PrimaryExpression	2		1222995	1					
ANR	1225653	CompoundStatement		531:23:13543:13543	1222995	1					
ANR	1225654	IfStatement	"if ( IS_SYNTAX_BV ( syn , ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY ) )"		1222995	0					
ANR	1225655	Condition	"IS_SYNTAX_BV ( syn , ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY )"	3658:5:80861:80917	1222995	0	True				
ANR	1225656	CallExpression	"IS_SYNTAX_BV ( syn , ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY )"		1222995	0					
ANR	1225657	Callee	IS_SYNTAX_BV		1222995	0					
ANR	1225658	Identifier	IS_SYNTAX_BV		1222995	0					
ANR	1225659	ArgumentList	syn		1222995	1					
ANR	1225660	Argument	syn		1222995	0					
ANR	1225661	Identifier	syn		1222995	0					
ANR	1225662	Argument	ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY		1222995	1					
ANR	1225663	Identifier	ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY		1222995	0					
ANR	1225664	GotoStatement	goto possessive_check ;	3659:3:80923:80944	1222995	1	True				
ANR	1225665	Identifier	possessive_check		1222995	0					
ANR	1225666	GotoStatement	goto greedy_check ;	3661:1:80948:80965	1222995	1	True				
ANR	1225667	Identifier	greedy_check		1222995	0					
ANR	1225668	BreakStatement	break ;	3664:6:81014:81019	1222995	34	True				
ANR	1225669	Label	case '|' :	3666:4:81026:81034	1222995	35	True				
ANR	1225670	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VBAR_ALT ) )"		1222995	36					
ANR	1225671	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VBAR_ALT )"	3667:10:81046:81086	1222995	0	True				
ANR	1225672	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VBAR_ALT )"		1222995	0					
ANR	1225673	UnaryOperator	!		1222995	0					
ANR	1225674	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_VBAR_ALT )"		1222995	1					
ANR	1225675	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1225676	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1225677	ArgumentList	syn		1222995	1					
ANR	1225678	Argument	syn		1222995	0					
ANR	1225679	Identifier	syn		1222995	0					
ANR	1225680	Argument	ONIG_SYN_OP_VBAR_ALT		1222995	1					
ANR	1225681	Identifier	ONIG_SYN_OP_VBAR_ALT		1222995	0					
ANR	1225682	BreakStatement	break ;	3667:53:81089:81094	1222995	1	True				
ANR	1225683	ExpressionStatement	tok -> type = TK_ALT	3668:6:81102:81120	1222995	37	True				
ANR	1225684	AssignmentExpression	tok -> type = TK_ALT		1222995	0		=			
ANR	1225685	PtrMemberAccess	tok -> type		1222995	0					
ANR	1225686	Identifier	tok		1222995	0					
ANR	1225687	Identifier	type		1222995	1					
ANR	1225688	Identifier	TK_ALT		1222995	1					
ANR	1225689	BreakStatement	break ;	3669:6:81128:81133	1222995	38	True				
ANR	1225690	Label	case '(' :	3671:4:81140:81148	1222995	39	True				
ANR	1225691	IfStatement	"if ( PPEEK_IS ( '?' ) && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_QMARK_GROUP_EFFECT ) )"		1222995	40					
ANR	1225692	Condition	"PPEEK_IS ( '?' ) && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_QMARK_GROUP_EFFECT )"	3672:10:81160:81237	1222995	0	True				
ANR	1225693	AndExpression	"PPEEK_IS ( '?' ) && IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_QMARK_GROUP_EFFECT )"		1222995	0		&&			
ANR	1225694	CallExpression	PPEEK_IS ( '?' )		1222995	0					
ANR	1225695	Callee	PPEEK_IS		1222995	0					
ANR	1225696	Identifier	PPEEK_IS		1222995	0					
ANR	1225697	ArgumentList	'?'		1222995	1					
ANR	1225698	Argument	'?'		1222995	0					
ANR	1225699	PrimaryExpression	'?'		1222995	0					
ANR	1225700	CallExpression	"IS_SYNTAX_OP2 ( syn , ONIG_SYN_OP2_QMARK_GROUP_EFFECT )"		1222995	1					
ANR	1225701	Callee	IS_SYNTAX_OP2		1222995	0					
ANR	1225702	Identifier	IS_SYNTAX_OP2		1222995	0					
ANR	1225703	ArgumentList	syn		1222995	1					
ANR	1225704	Argument	syn		1222995	0					
ANR	1225705	Identifier	syn		1222995	0					
ANR	1225706	Argument	ONIG_SYN_OP2_QMARK_GROUP_EFFECT		1222995	1					
ANR	1225707	Identifier	ONIG_SYN_OP2_QMARK_GROUP_EFFECT		1222995	0					
ANR	1225708	CompoundStatement		547:63:13939:13939	1222995	1					
ANR	1225709	ExpressionStatement	PINC	3674:8:81250:81254	1222995	0	True				
ANR	1225710	Identifier	PINC		1222995	0					
ANR	1225711	IfStatement	if ( PPEEK_IS ( '#' ) )		1222995	1					
ANR	1225712	Condition	PPEEK_IS ( '#' )	3675:12:81268:81280	1222995	0	True				
ANR	1225713	CallExpression	PPEEK_IS ( '#' )		1222995	0					
ANR	1225714	Callee	PPEEK_IS		1222995	0					
ANR	1225715	Identifier	PPEEK_IS		1222995	0					
ANR	1225716	ArgumentList	'#'		1222995	1					
ANR	1225717	Argument	'#'		1222995	0					
ANR	1225718	PrimaryExpression	'#'		1222995	0					
ANR	1225719	CompoundStatement		549:27:13982:13982	1222995	1					
ANR	1225720	ExpressionStatement	PFETCH ( c )	3676:10:81295:81304	1222995	0	True				
ANR	1225721	CallExpression	PFETCH ( c )		1222995	0					
ANR	1225722	Callee	PFETCH		1222995	0					
ANR	1225723	Identifier	PFETCH		1222995	0					
ANR	1225724	ArgumentList	c		1222995	1					
ANR	1225725	Argument	c		1222995	0					
ANR	1225726	Identifier	c		1222995	0					
ANR	1225727	WhileStatement	while ( 1 )		1222995	1					
ANR	1225728	Condition	1	3677:17:81323:81323	1222995	0	True				
ANR	1225729	PrimaryExpression	1		1222995	0					
ANR	1225730	CompoundStatement		551:20:14025:14025	1222995	1					
ANR	1225731	IfStatement	if ( PEND )		1222995	0					
ANR	1225732	Condition	PEND	3678:16:81344:81347	1222995	0	True				
ANR	1225733	Identifier	PEND		1222995	0					
ANR	1225734	ReturnStatement	return ONIGERR_END_PATTERN_IN_GROUP ;	3678:22:81350:81385	1222995	1	True				
ANR	1225735	Identifier	ONIGERR_END_PATTERN_IN_GROUP		1222995	0					
ANR	1225736	ExpressionStatement	PFETCH ( c )	3679:12:81399:81408	1222995	1	True				
ANR	1225737	CallExpression	PFETCH ( c )		1222995	0					
ANR	1225738	Callee	PFETCH		1222995	0					
ANR	1225739	Identifier	PFETCH		1222995	0					
ANR	1225740	ArgumentList	c		1222995	1					
ANR	1225741	Argument	c		1222995	0					
ANR	1225742	Identifier	c		1222995	0					
ANR	1225743	IfStatement	if ( c == MC_ESC ( syn ) )		1222995	2					
ANR	1225744	Condition	c == MC_ESC ( syn )	3680:16:81426:81441	1222995	0	True				
ANR	1225745	EqualityExpression	c == MC_ESC ( syn )		1222995	0		==			
ANR	1225746	Identifier	c		1222995	0					
ANR	1225747	CallExpression	MC_ESC ( syn )		1222995	1					
ANR	1225748	Callee	MC_ESC		1222995	0					
ANR	1225749	Identifier	MC_ESC		1222995	0					
ANR	1225750	ArgumentList	syn		1222995	1					
ANR	1225751	Argument	syn		1222995	0					
ANR	1225752	Identifier	syn		1222995	0					
ANR	1225753	CompoundStatement		554:34:14143:14143	1222995	1					
ANR	1225754	IfStatement	if ( ! PEND )		1222995	0					
ANR	1225755	Condition	! PEND	3681:18:81464:81468	1222995	0	True				
ANR	1225756	UnaryOperationExpression	! PEND		1222995	0					
ANR	1225757	UnaryOperator	!		1222995	0					
ANR	1225758	Identifier	PEND		1222995	1					
ANR	1225759	ExpressionStatement	PFETCH ( c )	3681:25:81471:81480	1222995	1	True				
ANR	1225760	CallExpression	PFETCH ( c )		1222995	0					
ANR	1225761	Callee	PFETCH		1222995	0					
ANR	1225762	Identifier	PFETCH		1222995	0					
ANR	1225763	ArgumentList	c		1222995	1					
ANR	1225764	Argument	c		1222995	0					
ANR	1225765	Identifier	c		1222995	0					
ANR	1225766	ElseStatement	else		1222995	0					
ANR	1225767	CompoundStatement		557:17:14212:14212	1222995	0					
ANR	1225768	IfStatement	if ( c == ')' )		1222995	0					
ANR	1225769	Condition	c == ')'	3684:18:81533:81540	1222995	0	True				
ANR	1225770	EqualityExpression	c == ')'		1222995	0		==			
ANR	1225771	Identifier	c		1222995	0					
ANR	1225772	PrimaryExpression	')'		1222995	1					
ANR	1225773	BreakStatement	break ;	3684:28:81543:81548	1222995	1	True				
ANR	1225774	GotoStatement	goto start ;	3687:10:81586:81596	1222995	2	True				
ANR	1225775	Identifier	start		1222995	0					
ANR	1225776	ExpressionStatement	PUNFETCH	3689:8:81616:81624	1222995	2	True				
ANR	1225777	Identifier	PUNFETCH		1222995	0					
ANR	1225778	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP ) )"		1222995	41					
ANR	1225779	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP )"	3692:10:81645:81690	1222995	0	True				
ANR	1225780	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP )"		1222995	0					
ANR	1225781	UnaryOperator	!		1222995	0					
ANR	1225782	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP )"		1222995	1					
ANR	1225783	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1225784	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1225785	ArgumentList	syn		1222995	1					
ANR	1225786	Argument	syn		1222995	0					
ANR	1225787	Identifier	syn		1222995	0					
ANR	1225788	Argument	ONIG_SYN_OP_LPAREN_SUBEXP		1222995	1					
ANR	1225789	Identifier	ONIG_SYN_OP_LPAREN_SUBEXP		1222995	0					
ANR	1225790	BreakStatement	break ;	3692:58:81693:81698	1222995	1	True				
ANR	1225791	ExpressionStatement	tok -> type = TK_SUBEXP_OPEN	3693:6:81706:81732	1222995	42	True				
ANR	1225792	AssignmentExpression	tok -> type = TK_SUBEXP_OPEN		1222995	0		=			
ANR	1225793	PtrMemberAccess	tok -> type		1222995	0					
ANR	1225794	Identifier	tok		1222995	0					
ANR	1225795	Identifier	type		1222995	1					
ANR	1225796	Identifier	TK_SUBEXP_OPEN		1222995	1					
ANR	1225797	BreakStatement	break ;	3694:6:81740:81745	1222995	43	True				
ANR	1225798	Label	case ')' :	3696:4:81752:81760	1222995	44	True				
ANR	1225799	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP ) )"		1222995	45					
ANR	1225800	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP )"	3697:10:81772:81817	1222995	0	True				
ANR	1225801	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP )"		1222995	0					
ANR	1225802	UnaryOperator	!		1222995	0					
ANR	1225803	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LPAREN_SUBEXP )"		1222995	1					
ANR	1225804	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1225805	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1225806	ArgumentList	syn		1222995	1					
ANR	1225807	Argument	syn		1222995	0					
ANR	1225808	Identifier	syn		1222995	0					
ANR	1225809	Argument	ONIG_SYN_OP_LPAREN_SUBEXP		1222995	1					
ANR	1225810	Identifier	ONIG_SYN_OP_LPAREN_SUBEXP		1222995	0					
ANR	1225811	BreakStatement	break ;	3697:58:81820:81825	1222995	1	True				
ANR	1225812	ExpressionStatement	tok -> type = TK_SUBEXP_CLOSE	3698:6:81833:81860	1222995	46	True				
ANR	1225813	AssignmentExpression	tok -> type = TK_SUBEXP_CLOSE		1222995	0		=			
ANR	1225814	PtrMemberAccess	tok -> type		1222995	0					
ANR	1225815	Identifier	tok		1222995	0					
ANR	1225816	Identifier	type		1222995	1					
ANR	1225817	Identifier	TK_SUBEXP_CLOSE		1222995	1					
ANR	1225818	BreakStatement	break ;	3699:6:81868:81873	1222995	47	True				
ANR	1225819	Label	case '^' :	3701:4:81880:81888	1222995	48	True				
ANR	1225820	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR ) )"		1222995	49					
ANR	1225821	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR )"	3702:10:81900:81943	1222995	0	True				
ANR	1225822	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR )"		1222995	0					
ANR	1225823	UnaryOperator	!		1222995	0					
ANR	1225824	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR )"		1222995	1					
ANR	1225825	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1225826	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1225827	ArgumentList	syn		1222995	1					
ANR	1225828	Argument	syn		1222995	0					
ANR	1225829	Identifier	syn		1222995	0					
ANR	1225830	Argument	ONIG_SYN_OP_LINE_ANCHOR		1222995	1					
ANR	1225831	Identifier	ONIG_SYN_OP_LINE_ANCHOR		1222995	0					
ANR	1225832	BreakStatement	break ;	3702:56:81946:81951	1222995	1	True				
ANR	1225833	ExpressionStatement	tok -> type = TK_ANCHOR	3703:6:81959:81980	1222995	50	True				
ANR	1225834	AssignmentExpression	tok -> type = TK_ANCHOR		1222995	0		=			
ANR	1225835	PtrMemberAccess	tok -> type		1222995	0					
ANR	1225836	Identifier	tok		1222995	0					
ANR	1225837	Identifier	type		1222995	1					
ANR	1225838	Identifier	TK_ANCHOR		1222995	1					
ANR	1225839	ExpressionStatement	tok -> u . subtype = ( IS_SINGLELINE ( env -> option ) ? ANCHOR_BEGIN_BUF : ANCHOR_BEGIN_LINE )	3704:6:81988:82075	1222995	51	True				
ANR	1225840	AssignmentExpression	tok -> u . subtype = ( IS_SINGLELINE ( env -> option ) ? ANCHOR_BEGIN_BUF : ANCHOR_BEGIN_LINE )		1222995	0		=			
ANR	1225841	MemberAccess	tok -> u . subtype		1222995	0					
ANR	1225842	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225843	Identifier	tok		1222995	0					
ANR	1225844	Identifier	u		1222995	1					
ANR	1225845	Identifier	subtype		1222995	1					
ANR	1225846	ConditionalExpression	IS_SINGLELINE ( env -> option ) ? ANCHOR_BEGIN_BUF : ANCHOR_BEGIN_LINE		1222995	1					
ANR	1225847	Condition	IS_SINGLELINE ( env -> option )		1222995	0					
ANR	1225848	CallExpression	IS_SINGLELINE ( env -> option )		1222995	0					
ANR	1225849	Callee	IS_SINGLELINE		1222995	0					
ANR	1225850	Identifier	IS_SINGLELINE		1222995	0					
ANR	1225851	ArgumentList	env -> option		1222995	1					
ANR	1225852	Argument	env -> option		1222995	0					
ANR	1225853	PtrMemberAccess	env -> option		1222995	0					
ANR	1225854	Identifier	env		1222995	0					
ANR	1225855	Identifier	option		1222995	1					
ANR	1225856	Identifier	ANCHOR_BEGIN_BUF		1222995	1					
ANR	1225857	Identifier	ANCHOR_BEGIN_LINE		1222995	2					
ANR	1225858	BreakStatement	break ;	3706:6:82083:82088	1222995	52	True				
ANR	1225859	Label	case '$' :	3708:4:82095:82103	1222995	53	True				
ANR	1225860	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR ) )"		1222995	54					
ANR	1225861	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR )"	3709:10:82115:82158	1222995	0	True				
ANR	1225862	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR )"		1222995	0					
ANR	1225863	UnaryOperator	!		1222995	0					
ANR	1225864	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_LINE_ANCHOR )"		1222995	1					
ANR	1225865	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1225866	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1225867	ArgumentList	syn		1222995	1					
ANR	1225868	Argument	syn		1222995	0					
ANR	1225869	Identifier	syn		1222995	0					
ANR	1225870	Argument	ONIG_SYN_OP_LINE_ANCHOR		1222995	1					
ANR	1225871	Identifier	ONIG_SYN_OP_LINE_ANCHOR		1222995	0					
ANR	1225872	BreakStatement	break ;	3709:56:82161:82166	1222995	1	True				
ANR	1225873	ExpressionStatement	tok -> type = TK_ANCHOR	3710:6:82174:82195	1222995	55	True				
ANR	1225874	AssignmentExpression	tok -> type = TK_ANCHOR		1222995	0		=			
ANR	1225875	PtrMemberAccess	tok -> type		1222995	0					
ANR	1225876	Identifier	tok		1222995	0					
ANR	1225877	Identifier	type		1222995	1					
ANR	1225878	Identifier	TK_ANCHOR		1222995	1					
ANR	1225879	ExpressionStatement	tok -> u . subtype = ( IS_SINGLELINE ( env -> option ) ? ANCHOR_SEMI_END_BUF : ANCHOR_END_LINE )	3711:6:82203:82291	1222995	56	True				
ANR	1225880	AssignmentExpression	tok -> u . subtype = ( IS_SINGLELINE ( env -> option ) ? ANCHOR_SEMI_END_BUF : ANCHOR_END_LINE )		1222995	0		=			
ANR	1225881	MemberAccess	tok -> u . subtype		1222995	0					
ANR	1225882	PtrMemberAccess	tok -> u		1222995	0					
ANR	1225883	Identifier	tok		1222995	0					
ANR	1225884	Identifier	u		1222995	1					
ANR	1225885	Identifier	subtype		1222995	1					
ANR	1225886	ConditionalExpression	IS_SINGLELINE ( env -> option ) ? ANCHOR_SEMI_END_BUF : ANCHOR_END_LINE		1222995	1					
ANR	1225887	Condition	IS_SINGLELINE ( env -> option )		1222995	0					
ANR	1225888	CallExpression	IS_SINGLELINE ( env -> option )		1222995	0					
ANR	1225889	Callee	IS_SINGLELINE		1222995	0					
ANR	1225890	Identifier	IS_SINGLELINE		1222995	0					
ANR	1225891	ArgumentList	env -> option		1222995	1					
ANR	1225892	Argument	env -> option		1222995	0					
ANR	1225893	PtrMemberAccess	env -> option		1222995	0					
ANR	1225894	Identifier	env		1222995	0					
ANR	1225895	Identifier	option		1222995	1					
ANR	1225896	Identifier	ANCHOR_SEMI_END_BUF		1222995	1					
ANR	1225897	Identifier	ANCHOR_END_LINE		1222995	2					
ANR	1225898	BreakStatement	break ;	3713:6:82299:82304	1222995	57	True				
ANR	1225899	Label	case '[' :	3715:4:82311:82319	1222995	58	True				
ANR	1225900	IfStatement	"if ( ! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACKET_CC ) )"		1222995	59					
ANR	1225901	Condition	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACKET_CC )"	3716:10:82331:82373	1222995	0	True				
ANR	1225902	UnaryOperationExpression	"! IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACKET_CC )"		1222995	0					
ANR	1225903	UnaryOperator	!		1222995	0					
ANR	1225904	CallExpression	"IS_SYNTAX_OP ( syn , ONIG_SYN_OP_BRACKET_CC )"		1222995	1					
ANR	1225905	Callee	IS_SYNTAX_OP		1222995	0					
ANR	1225906	Identifier	IS_SYNTAX_OP		1222995	0					
ANR	1225907	ArgumentList	syn		1222995	1					
ANR	1225908	Argument	syn		1222995	0					
ANR	1225909	Identifier	syn		1222995	0					
ANR	1225910	Argument	ONIG_SYN_OP_BRACKET_CC		1222995	1					
ANR	1225911	Identifier	ONIG_SYN_OP_BRACKET_CC		1222995	0					
ANR	1225912	BreakStatement	break ;	3716:55:82376:82381	1222995	1	True				
ANR	1225913	ExpressionStatement	tok -> type = TK_CC_OPEN	3717:6:82389:82411	1222995	60	True				
ANR	1225914	AssignmentExpression	tok -> type = TK_CC_OPEN		1222995	0		=			
ANR	1225915	PtrMemberAccess	tok -> type		1222995	0					
ANR	1225916	Identifier	tok		1222995	0					
ANR	1225917	Identifier	type		1222995	1					
ANR	1225918	Identifier	TK_CC_OPEN		1222995	1					
ANR	1225919	BreakStatement	break ;	3718:6:82419:82424	1222995	61	True				
ANR	1225920	Label	case ']' :	3720:4:82431:82439	1222995	62	True				
ANR	1225921	IfStatement	if ( * src > env -> pattern )		1222995	63					
ANR	1225922	Condition	* src > env -> pattern	3721:10:82451:82469	1222995	0	True				
ANR	1225923	RelationalExpression	* src > env -> pattern		1222995	0		>			
ANR	1225924	UnaryOperationExpression	* src		1222995	0					
ANR	1225925	UnaryOperator	*		1222995	0					
ANR	1225926	Identifier	src		1222995	1					
ANR	1225927	PtrMemberAccess	env -> pattern		1222995	1					
ANR	1225928	Identifier	env		1222995	0					
ANR	1225929	Identifier	pattern		1222995	1					
ANR	1225930	ExpressionStatement	"CLOSE_BRACKET_WITHOUT_ESC_WARN ( env , ( UChar * ) ""]"" )"	3722:1:82500:82549	1222995	1	True				
ANR	1225931	CallExpression	"CLOSE_BRACKET_WITHOUT_ESC_WARN ( env , ( UChar * ) ""]"" )"		1222995	0					
ANR	1225932	Callee	CLOSE_BRACKET_WITHOUT_ESC_WARN		1222995	0					
ANR	1225933	Identifier	CLOSE_BRACKET_WITHOUT_ESC_WARN		1222995	0					
ANR	1225934	ArgumentList	env		1222995	1					
ANR	1225935	Argument	env		1222995	0					
ANR	1225936	Identifier	env		1222995	0					
ANR	1225937	Argument	"( UChar * ) ""]"""		1222995	1					
ANR	1225938	CastExpression	"( UChar * ) ""]"""		1222995	0					
ANR	1225939	CastTarget	UChar *		1222995	0					
ANR	1225940	PrimaryExpression	"""]"""		1222995	1					
ANR	1225941	BreakStatement	break ;	3723:6:82557:82562	1222995	64	True				
ANR	1225942	Label	case '#' :	3725:4:82569:82577	1222995	65	True				
ANR	1225943	IfStatement	if ( IS_EXTEND ( env -> option ) )		1222995	66					
ANR	1225944	Condition	IS_EXTEND ( env -> option )	3726:10:82589:82610	1222995	0	True				
ANR	1225945	CallExpression	IS_EXTEND ( env -> option )		1222995	0					
ANR	1225946	Callee	IS_EXTEND		1222995	0					
ANR	1225947	Identifier	IS_EXTEND		1222995	0					
ANR	1225948	ArgumentList	env -> option		1222995	1					
ANR	1225949	Argument	env -> option		1222995	0					
ANR	1225950	PtrMemberAccess	env -> option		1222995	0					
ANR	1225951	Identifier	env		1222995	0					
ANR	1225952	Identifier	option		1222995	1					
ANR	1225953	CompoundStatement		600:34:15312:15312	1222995	1					
ANR	1225954	WhileStatement	while ( ! PEND )		1222995	0					
ANR	1225955	Condition	! PEND	3727:8:82623:82627	1222995	0	True				
ANR	1225956	UnaryOperationExpression	! PEND		1222995	0					
ANR	1225957	UnaryOperator	!		1222995	0					
ANR	1225958	Identifier	PEND		1222995	1					
ANR	1225959	CompoundStatement		601:15:15329:15329	1222995	1					
ANR	1225960	ExpressionStatement	PFETCH ( c )	3728:3:82635:82644	1222995	0	True				
ANR	1225961	CallExpression	PFETCH ( c )		1222995	0					
ANR	1225962	Callee	PFETCH		1222995	0					
ANR	1225963	Identifier	PFETCH		1222995	0					
ANR	1225964	ArgumentList	c		1222995	1					
ANR	1225965	Argument	c		1222995	0					
ANR	1225966	Identifier	c		1222995	0					
ANR	1225967	IfStatement	"if ( ONIGENC_IS_CODE_NEWLINE ( enc , c ) )"		1222995	1					
ANR	1225968	Condition	"ONIGENC_IS_CODE_NEWLINE ( enc , c )"	3729:7:82653:82683	1222995	0	True				
ANR	1225969	CallExpression	"ONIGENC_IS_CODE_NEWLINE ( enc , c )"		1222995	0					
ANR	1225970	Callee	ONIGENC_IS_CODE_NEWLINE		1222995	0					
ANR	1225971	Identifier	ONIGENC_IS_CODE_NEWLINE		1222995	0					
ANR	1225972	ArgumentList	enc		1222995	1					
ANR	1225973	Argument	enc		1222995	0					
ANR	1225974	Identifier	enc		1222995	0					
ANR	1225975	Argument	c		1222995	1					
ANR	1225976	Identifier	c		1222995	0					
ANR	1225977	BreakStatement	break ;	3730:5:82691:82696	1222995	1	True				
ANR	1225978	GotoStatement	goto start ;	3732:1:82702:82712	1222995	1	True				
ANR	1225979	Identifier	start		1222995	0					
ANR	1225980	BreakStatement	break ;	3733:1:82715:82720	1222995	2	True				
ANR	1225981	BreakStatement	break ;	3735:6:82736:82741	1222995	67	True				
ANR	1225982	Label	case ' ' :	3737:4:82748:82756	1222995	68	True				
ANR	1225983	Label	case '\\t' :	3737:14:82758:82767	1222995	69	True				
ANR	1225984	Label	case '\\n' :	3737:25:82769:82778	1222995	70	True				
ANR	1225985	Label	case '\\r' :	3737:36:82780:82789	1222995	71	True				
ANR	1225986	Label	case '\\f' :	3737:47:82791:82800	1222995	72	True				
ANR	1225987	IfStatement	if ( IS_EXTEND ( env -> option ) )		1222995	73					
ANR	1225988	Condition	IS_EXTEND ( env -> option )	3738:10:82812:82833	1222995	0	True				
ANR	1225989	CallExpression	IS_EXTEND ( env -> option )		1222995	0					
ANR	1225990	Callee	IS_EXTEND		1222995	0					
ANR	1225991	Identifier	IS_EXTEND		1222995	0					
ANR	1225992	ArgumentList	env -> option		1222995	1					
ANR	1225993	Argument	env -> option		1222995	0					
ANR	1225994	PtrMemberAccess	env -> option		1222995	0					
ANR	1225995	Identifier	env		1222995	0					
ANR	1225996	Identifier	option		1222995	1					
ANR	1225997	GotoStatement	goto start ;	3739:1:82837:82847	1222995	1	True				
ANR	1225998	Identifier	start		1222995	0					
ANR	1225999	BreakStatement	break ;	3740:6:82855:82860	1222995	74	True				
ANR	1226000	Label	default :	3742:4:82867:82874	1222995	75	True				
ANR	1226001	Identifier	default		1222995	0					
ANR	1226002	BreakStatement	break ;	3744:6:82901:82906	1222995	76	True				
ANR	1226003	Label	out :	3749:1:82951:82954	1222995	14	True				
ANR	1226004	Identifier	out		1222995	0					
ANR	1226005	ExpressionStatement	* src = p	3751:2:82965:82973	1222995	15	True				
ANR	1226006	AssignmentExpression	* src = p		1222995	0		=			
ANR	1226007	UnaryOperationExpression	* src		1222995	0					
ANR	1226008	UnaryOperator	*		1222995	0					
ANR	1226009	Identifier	src		1222995	1					
ANR	1226010	Identifier	p		1222995	1					
ANR	1226011	ReturnStatement	return tok -> type ;	3752:2:82977:82993	1222995	16	True				
ANR	1226012	PtrMemberAccess	tok -> type		1222995	0					
ANR	1226013	Identifier	tok		1222995	0					
ANR	1226014	Identifier	type		1222995	1					
ANR	1226015	ReturnType	static int		1222995	1					
ANR	1226016	Identifier	fetch_token		1222995	2					
ANR	1226017	ParameterList	"OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env"		1222995	3					
ANR	1226018	Parameter	OnigToken * tok	3126:12:67245:67258	1222995	0	True				
ANR	1226019	ParameterType	OnigToken *		1222995	0					
ANR	1226020	Identifier	tok		1222995	1					
ANR	1226021	Parameter	UChar * * src	3126:28:67261:67271	1222995	1	True				
ANR	1226022	ParameterType	UChar * *		1222995	0					
ANR	1226023	Identifier	src		1222995	1					
ANR	1226024	Parameter	UChar * end	3126:41:67274:67283	1222995	2	True				
ANR	1226025	ParameterType	UChar *		1222995	0					
ANR	1226026	Identifier	end		1222995	1					
ANR	1226027	Parameter	ScanEnv * env	3126:53:67286:67297	1222995	3	True				
ANR	1226028	ParameterType	ScanEnv *		1222995	0					
ANR	1226029	Identifier	env		1222995	1					
ANR	1226030	CFGEntryNode	ENTRY		1222995		True				
ANR	1226031	CFGExitNode	EXIT		1222995		True				
ANR	1226032	Symbol	ANCHOR_END_BUF		1222995						
ANR	1226033	Symbol	ONIG_SYN_OP2_ESC_U_HEX4		1222995						
ANR	1226034	Symbol	ONIG_SYN_OP_QMARK_ZERO_ONE		1222995						
ANR	1226035	Symbol	* backs		1222995						
ANR	1226036	Symbol	prev		1222995						
ANR	1226037	Symbol	ONIG_SYN_OP2_ESC_K_NAMED_BACKREF		1222995						
ANR	1226038	Symbol	ANCHOR_END_LINE		1222995						
ANR	1226039	Symbol	& back_num		1222995						
ANR	1226040	Symbol	tok -> type		1222995						
ANR	1226041	Symbol	env -> reg		1222995						
ANR	1226042	Symbol	MC_ANYCHAR_ANYTIME		1222995						
ANR	1226043	Symbol	TK_ANYCHAR		1222995						
ANR	1226044	Symbol	ANCHOR_WORD_BEGIN		1222995						
ANR	1226045	Symbol	TK_QUOTE_OPEN		1222995						
ANR	1226046	Symbol	TK_INTERVAL		1222995						
ANR	1226047	Symbol	ONIGERR_UNDEFINED_NAME_REFERENCE		1222995						
ANR	1226048	Symbol	ONIG_SYN_STRICT_CHECK_BACKREF		1222995						
ANR	1226049	Symbol	SCANENV_MEM_NODES		1222995						
ANR	1226050	Symbol	BACKREF_REL_TO_ABS		1222995						
ANR	1226051	Symbol	ONIGERR_TOO_LONG_WIDE_CHAR_VALUE		1222995						
ANR	1226052	Symbol	tok -> escaped		1222995						
ANR	1226053	Symbol	& tok -> u . backref . level		1222995						
ANR	1226054	Symbol	ANCHOR_WORD_END		1222995						
ANR	1226055	Symbol	ONIG_SYN_OP_ESC_VBAR_ALT		1222995						
ANR	1226056	Symbol	PPEEK		1222995						
ANR	1226057	Symbol	IS_SYNTAX_OP		1222995						
ANR	1226058	Symbol	ONIGERR_TOO_BIG_WIDE_CHAR_VALUE		1222995						
ANR	1226059	Symbol	ONIG_SYN_OP_DOT_ANYCHAR		1222995						
ANR	1226060	Symbol	ONIG_SYN_OP2_PLUS_POSSESSIVE_INTERVAL		1222995						
ANR	1226061	Symbol	TK_CHAR_TYPE		1222995						
ANR	1226062	Symbol	ONIGENC_IS_CODE_NEWLINE		1222995						
ANR	1226063	Symbol	ONIG_SYN_OP_ESC_LPAREN_SUBEXP		1222995						
ANR	1226064	Symbol	ONIG_SYN_OP2_ESC_H_XDIGIT		1222995						
ANR	1226065	Symbol	ONIG_SYN_OP_ESC_AZ_BUF_ANCHOR		1222995						
ANR	1226066	Symbol	* tok		1222995						
ANR	1226067	Symbol	ONIG_SYN_OP_ASTERISK_ZERO_INF		1222995						
ANR	1226068	Symbol	ANCHOR_BEGIN_LINE		1222995						
ANR	1226069	Symbol	tok -> u . c		1222995						
ANR	1226070	Symbol	ONIG_SYN_OP_ESC_W_WORD		1222995						
ANR	1226071	Symbol	ANCHOR_SEMI_END_BUF		1222995						
ANR	1226072	Symbol	tok -> u . call . name		1222995						
ANR	1226073	Symbol	env -> enc		1222995						
ANR	1226074	Symbol	IS_SINGLELINE		1222995						
ANR	1226075	Symbol	PEND		1222995						
ANR	1226076	Symbol	fetch_range_quantifier		1222995						
ANR	1226077	Symbol	TK_ANCHOR		1222995						
ANR	1226078	Symbol	tok		1222995						
ANR	1226079	Symbol	tok -> u . code		1222995						
ANR	1226080	Symbol	REPEAT_INFINITE		1222995						
ANR	1226081	Symbol	& tok -> u . backref		1222995						
ANR	1226082	Symbol	* * backs		1222995						
ANR	1226083	Symbol	ONIG_SYN_OP2_QMARK_GROUP_EFFECT		1222995						
ANR	1226084	Symbol	tok -> u . anchor		1222995						
ANR	1226085	Symbol	MC_ANYCHAR		1222995						
ANR	1226086	Symbol	back_num		1222995						
ANR	1226087	Symbol	TK_SUBEXP_OPEN		1222995						
ANR	1226088	Symbol	c		1222995						
ANR	1226089	Symbol	TK_ALT		1222995						
ANR	1226090	Symbol	tok -> backp		1222995						
ANR	1226091	Symbol	ANCHOR_WORD_BOUND		1222995						
ANR	1226092	Symbol	ONIGENC_CTYPE_DIGIT		1222995						
ANR	1226093	Symbol	i		1222995						
ANR	1226094	Symbol	ONIG_SYN_OP_DECIMAL_BACKREF		1222995						
ANR	1226095	Symbol	enclen		1222995						
ANR	1226096	Symbol	MC_ESC		1222995						
ANR	1226097	Symbol	* back_num		1222995						
ANR	1226098	Symbol	p		1222995						
ANR	1226099	Symbol	scan_unsigned_octal_number		1222995						
ANR	1226100	Symbol	r		1222995						
ANR	1226101	Symbol	TK_SUBEXP_CLOSE		1222995						
ANR	1226102	Symbol	tok -> u . backref . by_name		1222995						
ANR	1226103	Symbol	ONIG_SYN_OP_QMARK_NON_GREEDY		1222995						
ANR	1226104	Symbol	ONIGENC_CTYPE_WORD		1222995						
ANR	1226105	Symbol	IS_EXTEND		1222995						
ANR	1226106	Symbol	tok -> base		1222995						
ANR	1226107	Symbol	ANCHOR_NOT_WORD_BOUND		1222995						
ANR	1226108	Symbol	scan_unsigned_hexadecimal_number		1222995						
ANR	1226109	Symbol	ONIG_SYN_OP_ESC_X_HEX2		1222995						
ANR	1226110	Symbol	tok -> u . repeat . possessive		1222995						
ANR	1226111	Symbol	TK_EOT		1222995						
ANR	1226112	Symbol	num		1222995						
ANR	1226113	Symbol	ONIG_SYN_OP2_ESC_G_SUBEXP_CALL		1222995						
ANR	1226114	Symbol	ONIG_INEFFECTIVE_META_CHAR		1222995						
ANR	1226115	Symbol	tok -> u . call . gnum		1222995						
ANR	1226116	Symbol	ONIG_SYN_OP_ESC_PLUS_ONE_INF		1222995						
ANR	1226117	Symbol	* src		1222995						
ANR	1226118	Symbol	gnum		1222995						
ANR	1226119	Symbol	ONIG_SYN_FIXED_INTERVAL_IS_GREEDY_ONLY		1222995						
ANR	1226120	Symbol	* SCANENV_MEM_NODES		1222995						
ANR	1226121	Symbol	env -> option		1222995						
ANR	1226122	Symbol	ONIG_SYN_OP_ESC_B_WORD_BOUND		1222995						
ANR	1226123	Symbol	ONIGENC_CTYPE_SPACE		1222995						
ANR	1226124	Symbol	tok -> u . prop . not		1222995						
ANR	1226125	Symbol	IS_MC_ESC_CODE		1222995						
ANR	1226126	Symbol	IS_SYNTAX_BV		1222995						
ANR	1226127	Symbol	tok -> u . subtype		1222995						
ANR	1226128	Symbol	ONIG_SYN_OP_ESC_CAPITAL_G_BEGIN_ANCHOR		1222995						
ANR	1226129	Symbol	ONIG_SYN_OP2_ESC_CAPITAL_Q_QUOTE		1222995						
ANR	1226130	Symbol	TK_ANYCHAR_ANYTIME		1222995						
ANR	1226131	Symbol	TK_STRING		1222995						
ANR	1226132	Symbol	tok -> u . prop		1222995						
ANR	1226133	Symbol	name_end		1222995						
ANR	1226134	Symbol	ONIG_SYN_OP2_ESC_P_BRACE_CHAR_PROPERTY		1222995						
ANR	1226135	Symbol	ONIG_SYN_OP_ESC_D_DIGIT		1222995						
ANR	1226136	Symbol	* * i		1222995						
ANR	1226137	Symbol	ONIGENC_IS_CODE_XDIGIT		1222995						
ANR	1226138	Symbol	TK_CODE_POINT		1222995						
ANR	1226139	Symbol	TK_OP_REPEAT		1222995						
ANR	1226140	Symbol	ANCHOR_BEGIN_POSITION		1222995						
ANR	1226141	Symbol	* env		1222995						
ANR	1226142	Symbol	& backs		1222995						
ANR	1226143	Symbol	TK_CC_OPEN		1222995						
ANR	1226144	Symbol	TK_BACKREF		1222995						
ANR	1226145	Symbol	tok -> u . backref . refs		1222995						
ANR	1226146	Symbol	env -> syntax		1222995						
ANR	1226147	Symbol	ONIG_MAX_BACKREF_NUM		1222995						
ANR	1226148	Symbol	& gnum		1222995						
ANR	1226149	Symbol	NULL_UCHARP		1222995						
ANR	1226150	Symbol	ONIG_SYN_OP_ESC_X_BRACE_HEX8		1222995						
ANR	1226151	Symbol	ONIG_SYN_OP2_ESC_GNU_BUF_ANCHOR		1222995						
ANR	1226152	Symbol	ONIGERR_END_PATTERN_AT_ESCAPE		1222995						
ANR	1226153	Symbol	ONIG_SYN_OP_ESC_LTGT_WORD_BEGIN_END		1222995						
ANR	1226154	Symbol	PPEEK_IS		1222995						
ANR	1226155	Symbol	tok -> u . repeat . greedy		1222995						
ANR	1226156	Symbol	ONIGERR_INVALID_BACKREF		1222995						
ANR	1226157	Symbol	ONIG_SYN_OP2_ESC_P_BRACE_CIRCUMFLEX_NOT		1222995						
ANR	1226158	Symbol	ANCHOR_BEGIN_BUF		1222995						
ANR	1226159	Symbol	onig_name_to_group_numbers		1222995						
ANR	1226160	Symbol	TK_CALL		1222995						
ANR	1226161	Symbol	syn		1222995						
ANR	1226162	Symbol	tok -> u . call . name_end		1222995						
ANR	1226163	Symbol	fetch_name		1222995						
ANR	1226164	Symbol	ONIG_SYN_OP_ESC_QMARK_ZERO_ONE		1222995						
ANR	1226165	Symbol	onig_scan_unsigned_number		1222995						
ANR	1226166	Symbol	ONIG_SYN_OP_LINE_ANCHOR		1222995						
ANR	1226167	Symbol	IS_SYNTAX_OP2		1222995						
ANR	1226168	Symbol	tok -> u . backref . num		1222995						
ANR	1226169	Symbol	& name_end		1222995						
ANR	1226170	Symbol	tok -> u . backref . exist_level		1222995						
ANR	1226171	Symbol	IS_NULL		1222995						
ANR	1226172	Symbol	ONIG_SYN_OP_BRACE_INTERVAL		1222995						
ANR	1226173	Symbol	ONIG_SYN_OP_ESC_ASTERISK_ZERO_INF		1222995						
ANR	1226174	Symbol	tok -> u . repeat . upper		1222995						
ANR	1226175	Symbol	tok -> u . backref		1222995						
ANR	1226176	Symbol	ONIG_SYN_OP_LPAREN_SUBEXP		1222995						
ANR	1226177	Symbol	end		1222995						
ANR	1226178	Symbol	fetch_name_with_level		1222995						
ANR	1226179	Symbol	enc		1222995						
ANR	1226180	Symbol	tok -> u		1222995						
ANR	1226181	Symbol	MC_ANYTIME		1222995						
ANR	1226182	Symbol	ONIGENC_CTYPE_XDIGIT		1222995						
ANR	1226183	Symbol	ONIG_SYN_OP_ESC_BRACE_INTERVAL		1222995						
ANR	1226184	Symbol	ONIG_SYN_OP_BRACKET_CC		1222995						
ANR	1226185	Symbol	tok -> u . call		1222995						
ANR	1226186	Symbol	ONIG_SYN_OP_VBAR_ALT		1222995						
ANR	1226187	Symbol	tok -> u . repeat		1222995						
ANR	1226188	Symbol	ONIGERR_TOO_BIG_NUMBER		1222995						
ANR	1226189	Symbol	ONIGERR_END_PATTERN_IN_GROUP		1222995						
ANR	1226190	Symbol	src		1222995						
ANR	1226191	Symbol	env -> num_mem		1222995						
ANR	1226192	Symbol	env		1222995						
ANR	1226193	Symbol	ONIG_SYN_OP_ESC_S_WHITE_SPACE		1222995						
ANR	1226194	Symbol	tok -> u . backref . ref1		1222995						
ANR	1226195	Symbol	& tok -> u		1222995						
ANR	1226196	Symbol	* num		1222995						
ANR	1226197	Symbol	TK_CHAR_PROPERTY		1222995						
ANR	1226198	Symbol	ONIG_SYN_OP_PLUS_ONE_INF		1222995						
ANR	1226199	Symbol	* i		1222995						
ANR	1226200	Symbol	tok -> u . repeat . lower		1222995						
ANR	1226201	Symbol	env -> pattern		1222995						
ANR	1226202	Symbol	& p		1222995						
ANR	1226203	Symbol	fetch_escaped_value		1222995						
ANR	1226204	Symbol	ONIG_SYN_OP_VARIABLE_META_CHARACTERS		1222995						
ANR	1226205	Symbol	ONIG_SYN_OP2_PLUS_POSSESSIVE_REPEAT		1222995						
ANR	1226206	Symbol	ONIG_SYN_OP_ESC_OCTAL3		1222995						
ANR	1226207	Symbol	tok -> u . prop . ctype		1222995						
ANR	1226208	Symbol	MC_ONE_OR_MORE_TIME		1222995						
ANR	1226209	Symbol	TK_RAW_BYTE		1222995						
ANR	1226210	Symbol	backs		1222995						
ANR	1226211	Symbol	MC_ZERO_OR_ONE_TIME		1222995						
ANR	1226212	Function	add_ctype_to_cc_by_range	3755:0:82998:84786							
ANR	1226213	FunctionDef	"add_ctype_to_cc_by_range (CClassNode * cc , int ctype ARG_UNUSED , int not , OnigEncoding enc ARG_UNUSED , OnigCodePoint sb_out , const OnigCodePoint mbr [ ])"		1226212	0					
ANR	1226214	CompoundStatement		3759:0:83188:84786	1226212	0					
ANR	1226215	IdentifierDeclStatement	"int i , r ;"	3760:2:83192:83200	1226212	0	True				
ANR	1226216	IdentifierDecl	i		1226212	0					
ANR	1226217	IdentifierDeclType	int		1226212	0					
ANR	1226218	Identifier	i		1226212	1					
ANR	1226219	IdentifierDecl	r		1226212	1					
ANR	1226220	IdentifierDeclType	int		1226212	0					
ANR	1226221	Identifier	r		1226212	1					
ANR	1226222	IdentifierDeclStatement	OnigCodePoint j ;	3761:2:83204:83219	1226212	1	True				
ANR	1226223	IdentifierDecl	j		1226212	0					
ANR	1226224	IdentifierDeclType	OnigCodePoint		1226212	0					
ANR	1226225	Identifier	j		1226212	1					
ANR	1226226	IdentifierDeclStatement	int n = ONIGENC_CODE_RANGE_NUM ( mbr ) ;	3763:2:83224:83259	1226212	2	True				
ANR	1226227	IdentifierDecl	n = ONIGENC_CODE_RANGE_NUM ( mbr )		1226212	0					
ANR	1226228	IdentifierDeclType	int		1226212	0					
ANR	1226229	Identifier	n		1226212	1					
ANR	1226230	AssignmentExpression	n = ONIGENC_CODE_RANGE_NUM ( mbr )		1226212	2		=			
ANR	1226231	Identifier	n		1226212	0					
ANR	1226232	CallExpression	ONIGENC_CODE_RANGE_NUM ( mbr )		1226212	1					
ANR	1226233	Callee	ONIGENC_CODE_RANGE_NUM		1226212	0					
ANR	1226234	Identifier	ONIGENC_CODE_RANGE_NUM		1226212	0					
ANR	1226235	ArgumentList	mbr		1226212	1					
ANR	1226236	Argument	mbr		1226212	0					
ANR	1226237	Identifier	mbr		1226212	0					
ANR	1226238	IfStatement	if ( not == 0 )		1226212	3					
ANR	1226239	Condition	not == 0	3765:6:83268:83275	1226212	0	True				
ANR	1226240	EqualityExpression	not == 0		1226212	0		==			
ANR	1226241	Identifier	not		1226212	0					
ANR	1226242	PrimaryExpression	0		1226212	1					
ANR	1226243	CompoundStatement		7:16:89:89	1226212	1					
ANR	1226244	ForStatement	for ( i = 0 ; i < n ; i ++ )		1226212	0					
ANR	1226245	ForInit	i = 0 ;	3766:9:83289:83294	1226212	0	True				
ANR	1226246	AssignmentExpression	i = 0		1226212	0		=			
ANR	1226247	Identifier	i		1226212	0					
ANR	1226248	PrimaryExpression	0		1226212	1					
ANR	1226249	Condition	i < n	3766:16:83296:83300	1226212	1	True				
ANR	1226250	RelationalExpression	i < n		1226212	0		<			
ANR	1226251	Identifier	i		1226212	0					
ANR	1226252	Identifier	n		1226212	1					
ANR	1226253	PostIncDecOperationExpression	i ++	3766:23:83303:83305	1226212	2	True				
ANR	1226254	Identifier	i		1226212	0					
ANR	1226255	IncDec	++		1226212	1					
ANR	1226256	CompoundStatement		8:28:119:119	1226212	3					
ANR	1226257	ForStatement	"for ( j = ONIGENC_CODE_RANGE_FROM ( mbr , i ) ; j <= ONIGENC_CODE_RANGE_TO ( mbr , i ) ; j ++ )"		1226212	0					
ANR	1226258	ForInit	"j = ONIGENC_CODE_RANGE_FROM ( mbr , i ) ;"	3767:11:83321:83357	1226212	0	True				
ANR	1226259	AssignmentExpression	"j = ONIGENC_CODE_RANGE_FROM ( mbr , i )"		1226212	0		=			
ANR	1226260	Identifier	j		1226212	0					
ANR	1226261	CallExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		1226212	1					
ANR	1226262	Callee	ONIGENC_CODE_RANGE_FROM		1226212	0					
ANR	1226263	Identifier	ONIGENC_CODE_RANGE_FROM		1226212	0					
ANR	1226264	ArgumentList	mbr		1226212	1					
ANR	1226265	Argument	mbr		1226212	0					
ANR	1226266	Identifier	mbr		1226212	0					
ANR	1226267	Argument	i		1226212	1					
ANR	1226268	Identifier	i		1226212	0					
ANR	1226269	Condition	"j <= ONIGENC_CODE_RANGE_TO ( mbr , i )"	3768:11:83370:83403	1226212	1	True				
ANR	1226270	RelationalExpression	"j <= ONIGENC_CODE_RANGE_TO ( mbr , i )"		1226212	0		<=			
ANR	1226271	Identifier	j		1226212	0					
ANR	1226272	CallExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		1226212	1					
ANR	1226273	Callee	ONIGENC_CODE_RANGE_TO		1226212	0					
ANR	1226274	Identifier	ONIGENC_CODE_RANGE_TO		1226212	0					
ANR	1226275	ArgumentList	mbr		1226212	1					
ANR	1226276	Argument	mbr		1226212	0					
ANR	1226277	Identifier	mbr		1226212	0					
ANR	1226278	Argument	i		1226212	1					
ANR	1226279	Identifier	i		1226212	0					
ANR	1226280	PostIncDecOperationExpression	j ++	3768:47:83406:83408	1226212	2	True				
ANR	1226281	Identifier	j		1226212	0					
ANR	1226282	IncDec	++		1226212	1					
ANR	1226283	CompoundStatement		10:52:222:222	1226212	3					
ANR	1226284	IfStatement	if ( j >= sb_out )		1226212	0					
ANR	1226285	Condition	j >= sb_out	3769:5:83418:83428	1226212	0	True				
ANR	1226286	RelationalExpression	j >= sb_out		1226212	0		>=			
ANR	1226287	Identifier	j		1226212	0					
ANR	1226288	Identifier	sb_out		1226212	1					
ANR	1226289	CompoundStatement		11:18:242:242	1226212	1					
ANR	1226290	IfStatement	"if ( j == ONIGENC_CODE_RANGE_TO ( mbr , i ) )"		1226212	0					
ANR	1226291	Condition	"j == ONIGENC_CODE_RANGE_TO ( mbr , i )"	3770:7:83440:83473	1226212	0	True				
ANR	1226292	EqualityExpression	"j == ONIGENC_CODE_RANGE_TO ( mbr , i )"		1226212	0		==			
ANR	1226293	Identifier	j		1226212	0					
ANR	1226294	CallExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		1226212	1					
ANR	1226295	Callee	ONIGENC_CODE_RANGE_TO		1226212	0					
ANR	1226296	Identifier	ONIGENC_CODE_RANGE_TO		1226212	0					
ANR	1226297	ArgumentList	mbr		1226212	1					
ANR	1226298	Argument	mbr		1226212	0					
ANR	1226299	Identifier	mbr		1226212	0					
ANR	1226300	Argument	i		1226212	1					
ANR	1226301	Identifier	i		1226212	0					
ANR	1226302	ExpressionStatement	i ++	3770:43:83476:83479	1226212	1	True				
ANR	1226303	PostIncDecOperationExpression	i ++		1226212	0					
ANR	1226304	Identifier	i		1226212	0					
ANR	1226305	IncDec	++		1226212	1					
ANR	1226306	ElseStatement	else		1226212	0					
ANR	1226307	IfStatement	"if ( j > ONIGENC_CODE_RANGE_FROM ( mbr , i ) )"		1226212	0					
ANR	1226308	Condition	"j > ONIGENC_CODE_RANGE_FROM ( mbr , i )"	3771:12:83493:83527	1226212	0	True				
ANR	1226309	RelationalExpression	"j > ONIGENC_CODE_RANGE_FROM ( mbr , i )"		1226212	0		>			
ANR	1226310	Identifier	j		1226212	0					
ANR	1226311	CallExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		1226212	1					
ANR	1226312	Callee	ONIGENC_CODE_RANGE_FROM		1226212	0					
ANR	1226313	Identifier	ONIGENC_CODE_RANGE_FROM		1226212	0					
ANR	1226314	ArgumentList	mbr		1226212	1					
ANR	1226315	Argument	mbr		1226212	0					
ANR	1226316	Identifier	mbr		1226212	0					
ANR	1226317	Argument	i		1226212	1					
ANR	1226318	Identifier	i		1226212	0					
ANR	1226319	CompoundStatement		13:49:341:341	1226212	1					
ANR	1226320	ExpressionStatement	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , j , ONIGENC_CODE_RANGE_TO ( mbr , i ) )"	3772:5:83537:83619	1226212	0	True				
ANR	1226321	AssignmentExpression	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , j , ONIGENC_CODE_RANGE_TO ( mbr , i ) )"		1226212	0		=			
ANR	1226322	Identifier	r		1226212	0					
ANR	1226323	CallExpression	"add_code_range_to_buf ( & ( cc -> mbuf ) , j , ONIGENC_CODE_RANGE_TO ( mbr , i ) )"		1226212	1					
ANR	1226324	Callee	add_code_range_to_buf		1226212	0					
ANR	1226325	Identifier	add_code_range_to_buf		1226212	0					
ANR	1226326	ArgumentList	& ( cc -> mbuf )		1226212	1					
ANR	1226327	Argument	& ( cc -> mbuf )		1226212	0					
ANR	1226328	UnaryOperationExpression	& ( cc -> mbuf )		1226212	0					
ANR	1226329	UnaryOperator	&		1226212	0					
ANR	1226330	PtrMemberAccess	cc -> mbuf		1226212	1					
ANR	1226331	Identifier	cc		1226212	0					
ANR	1226332	Identifier	mbuf		1226212	1					
ANR	1226333	Argument	j		1226212	1					
ANR	1226334	Identifier	j		1226212	0					
ANR	1226335	Argument	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		1226212	2					
ANR	1226336	CallExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		1226212	0					
ANR	1226337	Callee	ONIGENC_CODE_RANGE_TO		1226212	0					
ANR	1226338	Identifier	ONIGENC_CODE_RANGE_TO		1226212	0					
ANR	1226339	ArgumentList	mbr		1226212	1					
ANR	1226340	Argument	mbr		1226212	0					
ANR	1226341	Identifier	mbr		1226212	0					
ANR	1226342	Argument	i		1226212	1					
ANR	1226343	Identifier	i		1226212	0					
ANR	1226344	IfStatement	if ( r != 0 )		1226212	1					
ANR	1226345	Condition	r != 0	3774:9:83630:83635	1226212	0	True				
ANR	1226346	EqualityExpression	r != 0		1226212	0		!=			
ANR	1226347	Identifier	r		1226212	0					
ANR	1226348	PrimaryExpression	0		1226212	1					
ANR	1226349	ReturnStatement	return r ;	3774:17:83638:83646	1226212	1	True				
ANR	1226350	Identifier	r		1226212	0					
ANR	1226351	ExpressionStatement	i ++	3775:5:83653:83656	1226212	2	True				
ANR	1226352	PostIncDecOperationExpression	i ++		1226212	0					
ANR	1226353	Identifier	i		1226212	0					
ANR	1226354	IncDec	++		1226212	1					
ANR	1226355	GotoStatement	goto sb_end ;	3778:3:83667:83678	1226212	1	True				
ANR	1226356	Identifier	sb_end		1226212	0					
ANR	1226357	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , j )"	3780:8:83691:83716	1226212	1	True				
ANR	1226358	CallExpression	"BITSET_SET_BIT ( cc -> bs , j )"		1226212	0					
ANR	1226359	Callee	BITSET_SET_BIT		1226212	0					
ANR	1226360	Identifier	BITSET_SET_BIT		1226212	0					
ANR	1226361	ArgumentList	cc -> bs		1226212	1					
ANR	1226362	Argument	cc -> bs		1226212	0					
ANR	1226363	PtrMemberAccess	cc -> bs		1226212	0					
ANR	1226364	Identifier	cc		1226212	0					
ANR	1226365	Identifier	bs		1226212	1					
ANR	1226366	Argument	j		1226212	1					
ANR	1226367	Identifier	j		1226212	0					
ANR	1226368	Label	sb_end :	3784:2:83735:83741	1226212	1	True				
ANR	1226369	Identifier	sb_end		1226212	0					
ANR	1226370	ForStatement	for ( ; i < n ; i ++ )		1226212	2					
ANR	1226371	Condition	i < n	3785:12:83755:83759	1226212	0	True				
ANR	1226372	RelationalExpression	i < n		1226212	0		<			
ANR	1226373	Identifier	i		1226212	0					
ANR	1226374	Identifier	n		1226212	1					
ANR	1226375	PostIncDecOperationExpression	i ++	3785:19:83762:83764	1226212	1	True				
ANR	1226376	Identifier	i		1226212	0					
ANR	1226377	IncDec	++		1226212	1					
ANR	1226378	CompoundStatement		27:24:578:578	1226212	2					
ANR	1226379	ExpressionStatement	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , ONIGENC_CODE_RANGE_FROM ( mbr , i ) , ONIGENC_CODE_RANGE_TO ( mbr , i ) )"	3786:6:83775:83941	1226212	0	True				
ANR	1226380	AssignmentExpression	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , ONIGENC_CODE_RANGE_FROM ( mbr , i ) , ONIGENC_CODE_RANGE_TO ( mbr , i ) )"		1226212	0		=			
ANR	1226381	Identifier	r		1226212	0					
ANR	1226382	CallExpression	"add_code_range_to_buf ( & ( cc -> mbuf ) , ONIGENC_CODE_RANGE_FROM ( mbr , i ) , ONIGENC_CODE_RANGE_TO ( mbr , i ) )"		1226212	1					
ANR	1226383	Callee	add_code_range_to_buf		1226212	0					
ANR	1226384	Identifier	add_code_range_to_buf		1226212	0					
ANR	1226385	ArgumentList	& ( cc -> mbuf )		1226212	1					
ANR	1226386	Argument	& ( cc -> mbuf )		1226212	0					
ANR	1226387	UnaryOperationExpression	& ( cc -> mbuf )		1226212	0					
ANR	1226388	UnaryOperator	&		1226212	0					
ANR	1226389	PtrMemberAccess	cc -> mbuf		1226212	1					
ANR	1226390	Identifier	cc		1226212	0					
ANR	1226391	Identifier	mbuf		1226212	1					
ANR	1226392	Argument	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		1226212	1					
ANR	1226393	CallExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		1226212	0					
ANR	1226394	Callee	ONIGENC_CODE_RANGE_FROM		1226212	0					
ANR	1226395	Identifier	ONIGENC_CODE_RANGE_FROM		1226212	0					
ANR	1226396	ArgumentList	mbr		1226212	1					
ANR	1226397	Argument	mbr		1226212	0					
ANR	1226398	Identifier	mbr		1226212	0					
ANR	1226399	Argument	i		1226212	1					
ANR	1226400	Identifier	i		1226212	0					
ANR	1226401	Argument	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		1226212	2					
ANR	1226402	CallExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		1226212	0					
ANR	1226403	Callee	ONIGENC_CODE_RANGE_TO		1226212	0					
ANR	1226404	Identifier	ONIGENC_CODE_RANGE_TO		1226212	0					
ANR	1226405	ArgumentList	mbr		1226212	1					
ANR	1226406	Argument	mbr		1226212	0					
ANR	1226407	Identifier	mbr		1226212	0					
ANR	1226408	Argument	i		1226212	1					
ANR	1226409	Identifier	i		1226212	0					
ANR	1226410	IfStatement	if ( r != 0 )		1226212	1					
ANR	1226411	Condition	r != 0	3789:10:83953:83958	1226212	0	True				
ANR	1226412	EqualityExpression	r != 0		1226212	0		!=			
ANR	1226413	Identifier	r		1226212	0					
ANR	1226414	PrimaryExpression	0		1226212	1					
ANR	1226415	ReturnStatement	return r ;	3789:18:83961:83969	1226212	1	True				
ANR	1226416	Identifier	r		1226212	0					
ANR	1226417	ElseStatement	else		1226212	0					
ANR	1226418	CompoundStatement		35:4:805:827	1226212	0					
ANR	1226419	IdentifierDeclStatement	OnigCodePoint prev = 0 ;	3793:4:83994:84016	1226212	0	True				
ANR	1226420	IdentifierDecl	prev = 0		1226212	0					
ANR	1226421	IdentifierDeclType	OnigCodePoint		1226212	0					
ANR	1226422	Identifier	prev		1226212	1					
ANR	1226423	AssignmentExpression	prev = 0		1226212	2		=			
ANR	1226424	Identifier	prev		1226212	0					
ANR	1226425	PrimaryExpression	0		1226212	1					
ANR	1226426	ForStatement	for ( i = 0 ; i < n ; i ++ )		1226212	1					
ANR	1226427	ForInit	i = 0 ;	3795:9:84028:84033	1226212	0	True				
ANR	1226428	AssignmentExpression	i = 0		1226212	0		=			
ANR	1226429	Identifier	i		1226212	0					
ANR	1226430	PrimaryExpression	0		1226212	1					
ANR	1226431	Condition	i < n	3795:16:84035:84039	1226212	1	True				
ANR	1226432	RelationalExpression	i < n		1226212	0		<			
ANR	1226433	Identifier	i		1226212	0					
ANR	1226434	Identifier	n		1226212	1					
ANR	1226435	PostIncDecOperationExpression	i ++	3795:23:84042:84044	1226212	2	True				
ANR	1226436	Identifier	i		1226212	0					
ANR	1226437	IncDec	++		1226212	1					
ANR	1226438	CompoundStatement		37:28:858:858	1226212	3					
ANR	1226439	ForStatement	"for ( j = prev ; j < ONIGENC_CODE_RANGE_FROM ( mbr , i ) ; j ++ )"		1226212	0					
ANR	1226440	ForInit	j = prev ;	3796:11:84060:84068	1226212	0	True				
ANR	1226441	AssignmentExpression	j = prev		1226212	0		=			
ANR	1226442	Identifier	j		1226212	0					
ANR	1226443	Identifier	prev		1226212	1					
ANR	1226444	Condition	"j < ONIGENC_CODE_RANGE_FROM ( mbr , i )"	3797:4:84074:84108	1226212	1	True				
ANR	1226445	RelationalExpression	"j < ONIGENC_CODE_RANGE_FROM ( mbr , i )"		1226212	0		<			
ANR	1226446	Identifier	j		1226212	0					
ANR	1226447	CallExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		1226212	1					
ANR	1226448	Callee	ONIGENC_CODE_RANGE_FROM		1226212	0					
ANR	1226449	Identifier	ONIGENC_CODE_RANGE_FROM		1226212	0					
ANR	1226450	ArgumentList	mbr		1226212	1					
ANR	1226451	Argument	mbr		1226212	0					
ANR	1226452	Identifier	mbr		1226212	0					
ANR	1226453	Argument	i		1226212	1					
ANR	1226454	Identifier	i		1226212	0					
ANR	1226455	PostIncDecOperationExpression	j ++	3797:41:84111:84113	1226212	2	True				
ANR	1226456	Identifier	j		1226212	0					
ANR	1226457	IncDec	++		1226212	1					
ANR	1226458	CompoundStatement		39:46:927:927	1226212	3					
ANR	1226459	IfStatement	if ( j >= sb_out )		1226212	0					
ANR	1226460	Condition	j >= sb_out	3798:5:84123:84133	1226212	0	True				
ANR	1226461	RelationalExpression	j >= sb_out		1226212	0		>=			
ANR	1226462	Identifier	j		1226212	0					
ANR	1226463	Identifier	sb_out		1226212	1					
ANR	1226464	CompoundStatement		40:18:947:947	1226212	1					
ANR	1226465	GotoStatement	goto sb_end2 ;	3799:3:84141:84153	1226212	0	True				
ANR	1226466	Identifier	sb_end2		1226212	0					
ANR	1226467	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , j )"	3801:1:84159:84184	1226212	1	True				
ANR	1226468	CallExpression	"BITSET_SET_BIT ( cc -> bs , j )"		1226212	0					
ANR	1226469	Callee	BITSET_SET_BIT		1226212	0					
ANR	1226470	Identifier	BITSET_SET_BIT		1226212	0					
ANR	1226471	ArgumentList	cc -> bs		1226212	1					
ANR	1226472	Argument	cc -> bs		1226212	0					
ANR	1226473	PtrMemberAccess	cc -> bs		1226212	0					
ANR	1226474	Identifier	cc		1226212	0					
ANR	1226475	Identifier	bs		1226212	1					
ANR	1226476	Argument	j		1226212	1					
ANR	1226477	Identifier	j		1226212	0					
ANR	1226478	ExpressionStatement	"prev = ONIGENC_CODE_RANGE_TO ( mbr , i ) + 1"	3803:6:84200:84240	1226212	1	True				
ANR	1226479	AssignmentExpression	"prev = ONIGENC_CODE_RANGE_TO ( mbr , i ) + 1"		1226212	0		=			
ANR	1226480	Identifier	prev		1226212	0					
ANR	1226481	AdditiveExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i ) + 1"		1226212	1		+			
ANR	1226482	CallExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		1226212	0					
ANR	1226483	Callee	ONIGENC_CODE_RANGE_TO		1226212	0					
ANR	1226484	Identifier	ONIGENC_CODE_RANGE_TO		1226212	0					
ANR	1226485	ArgumentList	mbr		1226212	1					
ANR	1226486	Argument	mbr		1226212	0					
ANR	1226487	Identifier	mbr		1226212	0					
ANR	1226488	Argument	i		1226212	1					
ANR	1226489	Identifier	i		1226212	0					
ANR	1226490	PrimaryExpression	1		1226212	1					
ANR	1226491	ForStatement	for ( j = prev ; j < sb_out ; j ++ )		1226212	2					
ANR	1226492	ForInit	j = prev ;	3805:9:84257:84265	1226212	0	True				
ANR	1226493	AssignmentExpression	j = prev		1226212	0		=			
ANR	1226494	Identifier	j		1226212	0					
ANR	1226495	Identifier	prev		1226212	1					
ANR	1226496	Condition	j < sb_out	3805:19:84267:84276	1226212	1	True				
ANR	1226497	RelationalExpression	j < sb_out		1226212	0		<			
ANR	1226498	Identifier	j		1226212	0					
ANR	1226499	Identifier	sb_out		1226212	1					
ANR	1226500	PostIncDecOperationExpression	j ++	3805:31:84279:84281	1226212	2	True				
ANR	1226501	Identifier	j		1226212	0					
ANR	1226502	IncDec	++		1226212	1					
ANR	1226503	CompoundStatement		47:36:1095:1095	1226212	3					
ANR	1226504	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , j )"	3806:6:84292:84317	1226212	0	True				
ANR	1226505	CallExpression	"BITSET_SET_BIT ( cc -> bs , j )"		1226212	0					
ANR	1226506	Callee	BITSET_SET_BIT		1226212	0					
ANR	1226507	Identifier	BITSET_SET_BIT		1226212	0					
ANR	1226508	ArgumentList	cc -> bs		1226212	1					
ANR	1226509	Argument	cc -> bs		1226212	0					
ANR	1226510	PtrMemberAccess	cc -> bs		1226212	0					
ANR	1226511	Identifier	cc		1226212	0					
ANR	1226512	Identifier	bs		1226212	1					
ANR	1226513	Argument	j		1226212	1					
ANR	1226514	Identifier	j		1226212	0					
ANR	1226515	Label	sb_end2 :	3809:2:84328:84335	1226212	3	True				
ANR	1226516	Identifier	sb_end2		1226212	0					
ANR	1226517	ExpressionStatement	prev = sb_out	3810:4:84341:84354	1226212	4	True				
ANR	1226518	AssignmentExpression	prev = sb_out		1226212	0		=			
ANR	1226519	Identifier	prev		1226212	0					
ANR	1226520	Identifier	sb_out		1226212	1					
ANR	1226521	ForStatement	for ( i = 0 ; i < n ; i ++ )		1226212	5					
ANR	1226522	ForInit	i = 0 ;	3812:9:84366:84371	1226212	0	True				
ANR	1226523	AssignmentExpression	i = 0		1226212	0		=			
ANR	1226524	Identifier	i		1226212	0					
ANR	1226525	PrimaryExpression	0		1226212	1					
ANR	1226526	Condition	i < n	3812:16:84373:84377	1226212	1	True				
ANR	1226527	RelationalExpression	i < n		1226212	0		<			
ANR	1226528	Identifier	i		1226212	0					
ANR	1226529	Identifier	n		1226212	1					
ANR	1226530	PostIncDecOperationExpression	i ++	3812:23:84380:84382	1226212	2	True				
ANR	1226531	Identifier	i		1226212	0					
ANR	1226532	IncDec	++		1226212	1					
ANR	1226533	CompoundStatement		54:28:1196:1196	1226212	3					
ANR	1226534	IfStatement	"if ( prev < ONIGENC_CODE_RANGE_FROM ( mbr , i ) )"		1226212	0					
ANR	1226535	Condition	"prev < ONIGENC_CODE_RANGE_FROM ( mbr , i )"	3813:10:84397:84434	1226212	0	True				
ANR	1226536	RelationalExpression	"prev < ONIGENC_CODE_RANGE_FROM ( mbr , i )"		1226212	0		<			
ANR	1226537	Identifier	prev		1226212	0					
ANR	1226538	CallExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		1226212	1					
ANR	1226539	Callee	ONIGENC_CODE_RANGE_FROM		1226212	0					
ANR	1226540	Identifier	ONIGENC_CODE_RANGE_FROM		1226212	0					
ANR	1226541	ArgumentList	mbr		1226212	1					
ANR	1226542	Argument	mbr		1226212	0					
ANR	1226543	Identifier	mbr		1226212	0					
ANR	1226544	Argument	i		1226212	1					
ANR	1226545	Identifier	i		1226212	0					
ANR	1226546	CompoundStatement		55:50:1248:1248	1226212	1					
ANR	1226547	ExpressionStatement	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , prev , ONIGENC_CODE_RANGE_FROM ( mbr , i ) - 1 )"	3814:1:84440:84555	1226212	0	True				
ANR	1226548	AssignmentExpression	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , prev , ONIGENC_CODE_RANGE_FROM ( mbr , i ) - 1 )"		1226212	0		=			
ANR	1226549	Identifier	r		1226212	0					
ANR	1226550	CallExpression	"add_code_range_to_buf ( & ( cc -> mbuf ) , prev , ONIGENC_CODE_RANGE_FROM ( mbr , i ) - 1 )"		1226212	1					
ANR	1226551	Callee	add_code_range_to_buf		1226212	0					
ANR	1226552	Identifier	add_code_range_to_buf		1226212	0					
ANR	1226553	ArgumentList	& ( cc -> mbuf )		1226212	1					
ANR	1226554	Argument	& ( cc -> mbuf )		1226212	0					
ANR	1226555	UnaryOperationExpression	& ( cc -> mbuf )		1226212	0					
ANR	1226556	UnaryOperator	&		1226212	0					
ANR	1226557	PtrMemberAccess	cc -> mbuf		1226212	1					
ANR	1226558	Identifier	cc		1226212	0					
ANR	1226559	Identifier	mbuf		1226212	1					
ANR	1226560	Argument	prev		1226212	1					
ANR	1226561	Identifier	prev		1226212	0					
ANR	1226562	Argument	"ONIGENC_CODE_RANGE_FROM ( mbr , i ) - 1"		1226212	2					
ANR	1226563	AdditiveExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i ) - 1"		1226212	0		-			
ANR	1226564	CallExpression	"ONIGENC_CODE_RANGE_FROM ( mbr , i )"		1226212	0					
ANR	1226565	Callee	ONIGENC_CODE_RANGE_FROM		1226212	0					
ANR	1226566	Identifier	ONIGENC_CODE_RANGE_FROM		1226212	0					
ANR	1226567	ArgumentList	mbr		1226212	1					
ANR	1226568	Argument	mbr		1226212	0					
ANR	1226569	Identifier	mbr		1226212	0					
ANR	1226570	Argument	i		1226212	1					
ANR	1226571	Identifier	i		1226212	0					
ANR	1226572	PrimaryExpression	1		1226212	1					
ANR	1226573	IfStatement	if ( r != 0 )		1226212	1					
ANR	1226574	Condition	r != 0	3816:5:84562:84567	1226212	0	True				
ANR	1226575	EqualityExpression	r != 0		1226212	0		!=			
ANR	1226576	Identifier	r		1226212	0					
ANR	1226577	PrimaryExpression	0		1226212	1					
ANR	1226578	ReturnStatement	return r ;	3816:13:84570:84578	1226212	1	True				
ANR	1226579	Identifier	r		1226212	0					
ANR	1226580	ExpressionStatement	"prev = ONIGENC_CODE_RANGE_TO ( mbr , i ) + 1"	3818:6:84594:84634	1226212	1	True				
ANR	1226581	AssignmentExpression	"prev = ONIGENC_CODE_RANGE_TO ( mbr , i ) + 1"		1226212	0		=			
ANR	1226582	Identifier	prev		1226212	0					
ANR	1226583	AdditiveExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i ) + 1"		1226212	1		+			
ANR	1226584	CallExpression	"ONIGENC_CODE_RANGE_TO ( mbr , i )"		1226212	0					
ANR	1226585	Callee	ONIGENC_CODE_RANGE_TO		1226212	0					
ANR	1226586	Identifier	ONIGENC_CODE_RANGE_TO		1226212	0					
ANR	1226587	ArgumentList	mbr		1226212	1					
ANR	1226588	Argument	mbr		1226212	0					
ANR	1226589	Identifier	mbr		1226212	0					
ANR	1226590	Argument	i		1226212	1					
ANR	1226591	Identifier	i		1226212	0					
ANR	1226592	PrimaryExpression	1		1226212	1					
ANR	1226593	IfStatement	if ( prev < 0x7fffffff )		1226212	6					
ANR	1226594	Condition	prev < 0x7fffffff	3820:8:84650:84666	1226212	0	True				
ANR	1226595	RelationalExpression	prev < 0x7fffffff		1226212	0		<			
ANR	1226596	Identifier	prev		1226212	0					
ANR	1226597	PrimaryExpression	0x7fffffff		1226212	1					
ANR	1226598	CompoundStatement		62:27:1480:1480	1226212	1					
ANR	1226599	ExpressionStatement	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , prev , 0x7fffffff )"	3821:6:84677:84733	1226212	0	True				
ANR	1226600	AssignmentExpression	"r = add_code_range_to_buf ( & ( cc -> mbuf ) , prev , 0x7fffffff )"		1226212	0		=			
ANR	1226601	Identifier	r		1226212	0					
ANR	1226602	CallExpression	"add_code_range_to_buf ( & ( cc -> mbuf ) , prev , 0x7fffffff )"		1226212	1					
ANR	1226603	Callee	add_code_range_to_buf		1226212	0					
ANR	1226604	Identifier	add_code_range_to_buf		1226212	0					
ANR	1226605	ArgumentList	& ( cc -> mbuf )		1226212	1					
ANR	1226606	Argument	& ( cc -> mbuf )		1226212	0					
ANR	1226607	UnaryOperationExpression	& ( cc -> mbuf )		1226212	0					
ANR	1226608	UnaryOperator	&		1226212	0					
ANR	1226609	PtrMemberAccess	cc -> mbuf		1226212	1					
ANR	1226610	Identifier	cc		1226212	0					
ANR	1226611	Identifier	mbuf		1226212	1					
ANR	1226612	Argument	prev		1226212	1					
ANR	1226613	Identifier	prev		1226212	0					
ANR	1226614	Argument	0x7fffffff		1226212	2					
ANR	1226615	PrimaryExpression	0x7fffffff		1226212	0					
ANR	1226616	IfStatement	if ( r != 0 )		1226212	1					
ANR	1226617	Condition	r != 0	3822:10:84745:84750	1226212	0	True				
ANR	1226618	EqualityExpression	r != 0		1226212	0		!=			
ANR	1226619	Identifier	r		1226212	0					
ANR	1226620	PrimaryExpression	0		1226212	1					
ANR	1226621	ReturnStatement	return r ;	3822:18:84753:84761	1226212	1	True				
ANR	1226622	Identifier	r		1226212	0					
ANR	1226623	ReturnStatement	return 0 ;	3826:2:84776:84784	1226212	4	True				
ANR	1226624	PrimaryExpression	0		1226212	0					
ANR	1226625	ReturnType	static int		1226212	1					
ANR	1226626	Identifier	add_ctype_to_cc_by_range		1226212	2					
ANR	1226627	ParameterList	"CClassNode * cc , int ctype ARG_UNUSED , int not , OnigEncoding enc ARG_UNUSED , OnigCodePoint sb_out , const OnigCodePoint mbr [ ]"		1226212	3					
ANR	1226628	Parameter	CClassNode * cc	3756:25:83034:83047	1226212	0	True				
ANR	1226629	ParameterType	CClassNode *		1226212	0					
ANR	1226630	Identifier	cc		1226212	1					
ANR	1226631	Parameter	int ctype ARG_UNUSED	3756:41:83050:83069	1226212	1	True				
ANR	1226632	ParameterType	int ctype		1226212	0					
ANR	1226633	Identifier	ARG_UNUSED		1226212	1					
ANR	1226634	Parameter	int not	3756:63:83072:83078	1226212	2	True				
ANR	1226635	ParameterType	int		1226212	0					
ANR	1226636	Identifier	not		1226212	1					
ANR	1226637	Parameter	OnigEncoding enc ARG_UNUSED	3757:4:83085:83111	1226212	3	True				
ANR	1226638	ParameterType	OnigEncoding enc		1226212	0					
ANR	1226639	Identifier	ARG_UNUSED		1226212	1					
ANR	1226640	Parameter	OnigCodePoint sb_out	3758:25:83139:83158	1226212	4	True				
ANR	1226641	ParameterType	OnigCodePoint		1226212	0					
ANR	1226642	Identifier	sb_out		1226212	1					
ANR	1226643	Parameter	const OnigCodePoint mbr [ ]	3758:47:83161:83185	1226212	5	True				
ANR	1226644	ParameterType	const OnigCodePoint [ ]		1226212	0					
ANR	1226645	Identifier	mbr		1226212	1					
ANR	1226646	CFGEntryNode	ENTRY		1226212		True				
ANR	1226647	CFGExitNode	EXIT		1226212		True				
ANR	1226648	Symbol	cc		1226212						
ANR	1226649	Symbol	ONIGENC_CODE_RANGE_TO		1226212						
ANR	1226650	Symbol	* cc		1226212						
ANR	1226651	Symbol	prev		1226212						
ANR	1226652	Symbol	i		1226212						
ANR	1226653	Symbol	j		1226212						
ANR	1226654	Symbol	ARG_UNUSED		1226212						
ANR	1226655	Symbol	n		1226212						
ANR	1226656	Symbol	cc -> bs		1226212						
ANR	1226657	Symbol	sb_out		1226212						
ANR	1226658	Symbol	not		1226212						
ANR	1226659	Symbol	r		1226212						
ANR	1226660	Symbol	ONIGENC_CODE_RANGE_NUM		1226212						
ANR	1226661	Symbol	ONIGENC_CODE_RANGE_FROM		1226212						
ANR	1226662	Symbol	add_code_range_to_buf		1226212						
ANR	1226663	Symbol	mbr		1226212						
ANR	1226664	Symbol	& cc -> mbuf		1226212						
ANR	1226665	Function	add_ctype_to_cc	3829:0:84789:86886							
ANR	1226666	FunctionDef	"add_ctype_to_cc (CClassNode * cc , int ctype , int not , ScanEnv * env)"		1226665	0					
ANR	1226667	CompoundStatement		3831:0:84866:86886	1226665	0					
ANR	1226668	IdentifierDeclStatement	"int c , r ;"	3832:2:84870:84878	1226665	0	True				
ANR	1226669	IdentifierDecl	c		1226665	0					
ANR	1226670	IdentifierDeclType	int		1226665	0					
ANR	1226671	Identifier	c		1226665	1					
ANR	1226672	IdentifierDecl	r		1226665	1					
ANR	1226673	IdentifierDeclType	int		1226665	0					
ANR	1226674	Identifier	r		1226665	1					
ANR	1226675	IdentifierDeclStatement	const OnigCodePoint * ranges ;	3833:2:84882:84909	1226665	1	True				
ANR	1226676	IdentifierDecl	* ranges		1226665	0					
ANR	1226677	IdentifierDeclType	const OnigCodePoint *		1226665	0					
ANR	1226678	Identifier	ranges		1226665	1					
ANR	1226679	IdentifierDeclStatement	OnigCodePoint sb_out ;	3834:2:84913:84933	1226665	2	True				
ANR	1226680	IdentifierDecl	sb_out		1226665	0					
ANR	1226681	IdentifierDeclType	OnigCodePoint		1226665	0					
ANR	1226682	Identifier	sb_out		1226665	1					
ANR	1226683	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	3835:2:84937:84964	1226665	3	True				
ANR	1226684	IdentifierDecl	enc = env -> enc		1226665	0					
ANR	1226685	IdentifierDeclType	OnigEncoding		1226665	0					
ANR	1226686	Identifier	enc		1226665	1					
ANR	1226687	AssignmentExpression	enc = env -> enc		1226665	2		=			
ANR	1226688	Identifier	enc		1226665	0					
ANR	1226689	PtrMemberAccess	env -> enc		1226665	1					
ANR	1226690	Identifier	env		1226665	0					
ANR	1226691	Identifier	enc		1226665	1					
ANR	1226692	ExpressionStatement	"r = ONIGENC_GET_CTYPE_CODE_RANGE ( enc , ctype , & sb_out , & ranges )"	3837:2:84969:85031	1226665	4	True				
ANR	1226693	AssignmentExpression	"r = ONIGENC_GET_CTYPE_CODE_RANGE ( enc , ctype , & sb_out , & ranges )"		1226665	0		=			
ANR	1226694	Identifier	r		1226665	0					
ANR	1226695	CallExpression	"ONIGENC_GET_CTYPE_CODE_RANGE ( enc , ctype , & sb_out , & ranges )"		1226665	1					
ANR	1226696	Callee	ONIGENC_GET_CTYPE_CODE_RANGE		1226665	0					
ANR	1226697	Identifier	ONIGENC_GET_CTYPE_CODE_RANGE		1226665	0					
ANR	1226698	ArgumentList	enc		1226665	1					
ANR	1226699	Argument	enc		1226665	0					
ANR	1226700	Identifier	enc		1226665	0					
ANR	1226701	Argument	ctype		1226665	1					
ANR	1226702	Identifier	ctype		1226665	0					
ANR	1226703	Argument	& sb_out		1226665	2					
ANR	1226704	UnaryOperationExpression	& sb_out		1226665	0					
ANR	1226705	UnaryOperator	&		1226665	0					
ANR	1226706	Identifier	sb_out		1226665	1					
ANR	1226707	Argument	& ranges		1226665	3					
ANR	1226708	UnaryOperationExpression	& ranges		1226665	0					
ANR	1226709	UnaryOperator	&		1226665	0					
ANR	1226710	Identifier	ranges		1226665	1					
ANR	1226711	IfStatement	if ( r == 0 )		1226665	5					
ANR	1226712	Condition	r == 0	3838:6:85039:85044	1226665	0	True				
ANR	1226713	EqualityExpression	r == 0		1226665	0		==			
ANR	1226714	Identifier	r		1226665	0					
ANR	1226715	PrimaryExpression	0		1226665	1					
ANR	1226716	CompoundStatement		8:14:180:180	1226665	1					
ANR	1226717	ReturnStatement	"return add_ctype_to_cc_by_range ( cc , ctype , not , env -> enc , sb_out , ranges ) ;"	3839:4:85053:85126	1226665	0	True				
ANR	1226718	CallExpression	"add_ctype_to_cc_by_range ( cc , ctype , not , env -> enc , sb_out , ranges )"		1226665	0					
ANR	1226719	Callee	add_ctype_to_cc_by_range		1226665	0					
ANR	1226720	Identifier	add_ctype_to_cc_by_range		1226665	0					
ANR	1226721	ArgumentList	cc		1226665	1					
ANR	1226722	Argument	cc		1226665	0					
ANR	1226723	Identifier	cc		1226665	0					
ANR	1226724	Argument	ctype		1226665	1					
ANR	1226725	Identifier	ctype		1226665	0					
ANR	1226726	Argument	not		1226665	2					
ANR	1226727	Identifier	not		1226665	0					
ANR	1226728	Argument	env -> enc		1226665	3					
ANR	1226729	PtrMemberAccess	env -> enc		1226665	0					
ANR	1226730	Identifier	env		1226665	0					
ANR	1226731	Identifier	enc		1226665	1					
ANR	1226732	Argument	sb_out		1226665	4					
ANR	1226733	Identifier	sb_out		1226665	0					
ANR	1226734	Argument	ranges		1226665	5					
ANR	1226735	Identifier	ranges		1226665	0					
ANR	1226736	ElseStatement	else		1226665	0					
ANR	1226737	IfStatement	if ( r != ONIG_NO_SUPPORT_CONFIG )		1226665	0					
ANR	1226738	Condition	r != ONIG_NO_SUPPORT_CONFIG	3841:11:85143:85169	1226665	0	True				
ANR	1226739	EqualityExpression	r != ONIG_NO_SUPPORT_CONFIG		1226665	0		!=			
ANR	1226740	Identifier	r		1226665	0					
ANR	1226741	Identifier	ONIG_NO_SUPPORT_CONFIG		1226665	1					
ANR	1226742	CompoundStatement		11:40:305:305	1226665	1					
ANR	1226743	ReturnStatement	return r ;	3842:4:85178:85186	1226665	0	True				
ANR	1226744	Identifier	r		1226665	0					
ANR	1226745	ExpressionStatement	r = 0	3845:2:85195:85200	1226665	6	True				
ANR	1226746	AssignmentExpression	r = 0		1226665	0		=			
ANR	1226747	Identifier	r		1226665	0					
ANR	1226748	PrimaryExpression	0		1226665	1					
ANR	1226749	SwitchStatement	switch ( ctype )		1226665	7					
ANR	1226750	Condition	ctype	3846:10:85212:85216	1226665	0	True				
ANR	1226751	Identifier	ctype		1226665	0					
ANR	1226752	CompoundStatement		16:17:352:352	1226665	1					
ANR	1226753	Label	case ONIGENC_CTYPE_ALPHA :	3847:2:85223:85247	1226665	0	True				
ANR	1226754	Identifier	ONIGENC_CTYPE_ALPHA		1226665	0					
ANR	1226755	Label	case ONIGENC_CTYPE_BLANK :	3848:2:85251:85275	1226665	1	True				
ANR	1226756	Identifier	ONIGENC_CTYPE_BLANK		1226665	0					
ANR	1226757	Label	case ONIGENC_CTYPE_CNTRL :	3849:2:85279:85303	1226665	2	True				
ANR	1226758	Identifier	ONIGENC_CTYPE_CNTRL		1226665	0					
ANR	1226759	Label	case ONIGENC_CTYPE_DIGIT :	3850:2:85307:85331	1226665	3	True				
ANR	1226760	Identifier	ONIGENC_CTYPE_DIGIT		1226665	0					
ANR	1226761	Label	case ONIGENC_CTYPE_LOWER :	3851:2:85335:85359	1226665	4	True				
ANR	1226762	Identifier	ONIGENC_CTYPE_LOWER		1226665	0					
ANR	1226763	Label	case ONIGENC_CTYPE_PUNCT :	3852:2:85363:85387	1226665	5	True				
ANR	1226764	Identifier	ONIGENC_CTYPE_PUNCT		1226665	0					
ANR	1226765	Label	case ONIGENC_CTYPE_SPACE :	3853:2:85391:85415	1226665	6	True				
ANR	1226766	Identifier	ONIGENC_CTYPE_SPACE		1226665	0					
ANR	1226767	Label	case ONIGENC_CTYPE_UPPER :	3854:2:85419:85443	1226665	7	True				
ANR	1226768	Identifier	ONIGENC_CTYPE_UPPER		1226665	0					
ANR	1226769	Label	case ONIGENC_CTYPE_XDIGIT :	3855:2:85447:85472	1226665	8	True				
ANR	1226770	Identifier	ONIGENC_CTYPE_XDIGIT		1226665	0					
ANR	1226771	Label	case ONIGENC_CTYPE_ASCII :	3856:2:85476:85500	1226665	9	True				
ANR	1226772	Identifier	ONIGENC_CTYPE_ASCII		1226665	0					
ANR	1226773	Label	case ONIGENC_CTYPE_ALNUM :	3857:2:85504:85528	1226665	10	True				
ANR	1226774	Identifier	ONIGENC_CTYPE_ALNUM		1226665	0					
ANR	1226775	IfStatement	if ( not != 0 )		1226665	11					
ANR	1226776	Condition	not != 0	3858:8:85538:85545	1226665	0	True				
ANR	1226777	EqualityExpression	not != 0		1226665	0		!=			
ANR	1226778	Identifier	not		1226665	0					
ANR	1226779	PrimaryExpression	0		1226665	1					
ANR	1226780	CompoundStatement		28:18:681:681	1226665	1					
ANR	1226781	ForStatement	for ( c = 0 ; c < SINGLE_BYTE_SIZE ; c ++ )		1226665	0					
ANR	1226782	ForInit	c = 0 ;	3859:11:85561:85566	1226665	0	True				
ANR	1226783	AssignmentExpression	c = 0		1226665	0		=			
ANR	1226784	Identifier	c		1226665	0					
ANR	1226785	PrimaryExpression	0		1226665	1					
ANR	1226786	Condition	c < SINGLE_BYTE_SIZE	3859:18:85568:85587	1226665	1	True				
ANR	1226787	RelationalExpression	c < SINGLE_BYTE_SIZE		1226665	0		<			
ANR	1226788	Identifier	c		1226665	0					
ANR	1226789	Identifier	SINGLE_BYTE_SIZE		1226665	1					
ANR	1226790	PostIncDecOperationExpression	c ++	3859:40:85590:85592	1226665	2	True				
ANR	1226791	Identifier	c		1226665	0					
ANR	1226792	IncDec	++		1226665	1					
ANR	1226793	CompoundStatement		29:45:728:728	1226665	3					
ANR	1226794	IfStatement	"if ( ! ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype ) )"		1226665	0					
ANR	1226795	Condition	"! ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"	3860:5:85602:85655	1226665	0	True				
ANR	1226796	UnaryOperationExpression	"! ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"		1226665	0					
ANR	1226797	UnaryOperator	!		1226665	0					
ANR	1226798	CallExpression	"ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"		1226665	1					
ANR	1226799	Callee	ONIGENC_IS_CODE_CTYPE		1226665	0					
ANR	1226800	Identifier	ONIGENC_IS_CODE_CTYPE		1226665	0					
ANR	1226801	ArgumentList	enc		1226665	1					
ANR	1226802	Argument	enc		1226665	0					
ANR	1226803	Identifier	enc		1226665	0					
ANR	1226804	Argument	( OnigCodePoint ) c		1226665	1					
ANR	1226805	CastExpression	( OnigCodePoint ) c		1226665	0					
ANR	1226806	CastTarget	OnigCodePoint		1226665	0					
ANR	1226807	Identifier	c		1226665	1					
ANR	1226808	Argument	ctype		1226665	2					
ANR	1226809	Identifier	ctype		1226665	0					
ANR	1226810	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , c )"	3861:3:85661:85686	1226665	1	True				
ANR	1226811	CallExpression	"BITSET_SET_BIT ( cc -> bs , c )"		1226665	0					
ANR	1226812	Callee	BITSET_SET_BIT		1226665	0					
ANR	1226813	Identifier	BITSET_SET_BIT		1226665	0					
ANR	1226814	ArgumentList	cc -> bs		1226665	1					
ANR	1226815	Argument	cc -> bs		1226665	0					
ANR	1226816	PtrMemberAccess	cc -> bs		1226665	0					
ANR	1226817	Identifier	cc		1226665	0					
ANR	1226818	Identifier	bs		1226665	1					
ANR	1226819	Argument	c		1226665	1					
ANR	1226820	Identifier	c		1226665	0					
ANR	1226821	ExpressionStatement	"ADD_ALL_MULTI_BYTE_RANGE ( enc , cc -> mbuf )"	3863:6:85702:85741	1226665	1	True				
ANR	1226822	CallExpression	"ADD_ALL_MULTI_BYTE_RANGE ( enc , cc -> mbuf )"		1226665	0					
ANR	1226823	Callee	ADD_ALL_MULTI_BYTE_RANGE		1226665	0					
ANR	1226824	Identifier	ADD_ALL_MULTI_BYTE_RANGE		1226665	0					
ANR	1226825	ArgumentList	enc		1226665	1					
ANR	1226826	Argument	enc		1226665	0					
ANR	1226827	Identifier	enc		1226665	0					
ANR	1226828	Argument	cc -> mbuf		1226665	1					
ANR	1226829	PtrMemberAccess	cc -> mbuf		1226665	0					
ANR	1226830	Identifier	cc		1226665	0					
ANR	1226831	Identifier	mbuf		1226665	1					
ANR	1226832	ElseStatement	else		1226665	0					
ANR	1226833	CompoundStatement		35:9:891:891	1226665	0					
ANR	1226834	ForStatement	for ( c = 0 ; c < SINGLE_BYTE_SIZE ; c ++ )		1226665	0					
ANR	1226835	ForInit	c = 0 ;	3866:11:85771:85776	1226665	0	True				
ANR	1226836	AssignmentExpression	c = 0		1226665	0		=			
ANR	1226837	Identifier	c		1226665	0					
ANR	1226838	PrimaryExpression	0		1226665	1					
ANR	1226839	Condition	c < SINGLE_BYTE_SIZE	3866:18:85778:85797	1226665	1	True				
ANR	1226840	RelationalExpression	c < SINGLE_BYTE_SIZE		1226665	0		<			
ANR	1226841	Identifier	c		1226665	0					
ANR	1226842	Identifier	SINGLE_BYTE_SIZE		1226665	1					
ANR	1226843	PostIncDecOperationExpression	c ++	3866:40:85800:85802	1226665	2	True				
ANR	1226844	Identifier	c		1226665	0					
ANR	1226845	IncDec	++		1226665	1					
ANR	1226846	CompoundStatement		36:45:938:938	1226665	3					
ANR	1226847	IfStatement	"if ( ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype ) )"		1226665	0					
ANR	1226848	Condition	"ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"	3867:5:85812:85863	1226665	0	True				
ANR	1226849	CallExpression	"ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"		1226665	0					
ANR	1226850	Callee	ONIGENC_IS_CODE_CTYPE		1226665	0					
ANR	1226851	Identifier	ONIGENC_IS_CODE_CTYPE		1226665	0					
ANR	1226852	ArgumentList	enc		1226665	1					
ANR	1226853	Argument	enc		1226665	0					
ANR	1226854	Identifier	enc		1226665	0					
ANR	1226855	Argument	( OnigCodePoint ) c		1226665	1					
ANR	1226856	CastExpression	( OnigCodePoint ) c		1226665	0					
ANR	1226857	CastTarget	OnigCodePoint		1226665	0					
ANR	1226858	Identifier	c		1226665	1					
ANR	1226859	Argument	ctype		1226665	2					
ANR	1226860	Identifier	ctype		1226665	0					
ANR	1226861	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , c )"	3868:3:85869:85894	1226665	1	True				
ANR	1226862	CallExpression	"BITSET_SET_BIT ( cc -> bs , c )"		1226665	0					
ANR	1226863	Callee	BITSET_SET_BIT		1226665	0					
ANR	1226864	Identifier	BITSET_SET_BIT		1226665	0					
ANR	1226865	ArgumentList	cc -> bs		1226665	1					
ANR	1226866	Argument	cc -> bs		1226665	0					
ANR	1226867	PtrMemberAccess	cc -> bs		1226665	0					
ANR	1226868	Identifier	cc		1226665	0					
ANR	1226869	Identifier	bs		1226665	1					
ANR	1226870	Argument	c		1226665	1					
ANR	1226871	Identifier	c		1226665	0					
ANR	1226872	BreakStatement	break ;	3871:4:85914:85919	1226665	12	True				
ANR	1226873	Label	case ONIGENC_CTYPE_GRAPH :	3873:2:85924:85948	1226665	13	True				
ANR	1226874	Identifier	ONIGENC_CTYPE_GRAPH		1226665	0					
ANR	1226875	Label	case ONIGENC_CTYPE_PRINT :	3874:2:85952:85976	1226665	14	True				
ANR	1226876	Identifier	ONIGENC_CTYPE_PRINT		1226665	0					
ANR	1226877	IfStatement	if ( not != 0 )		1226665	15					
ANR	1226878	Condition	not != 0	3875:8:85986:85993	1226665	0	True				
ANR	1226879	EqualityExpression	not != 0		1226665	0		!=			
ANR	1226880	Identifier	not		1226665	0					
ANR	1226881	PrimaryExpression	0		1226665	1					
ANR	1226882	CompoundStatement		45:18:1129:1129	1226665	1					
ANR	1226883	ForStatement	for ( c = 0 ; c < SINGLE_BYTE_SIZE ; c ++ )		1226665	0					
ANR	1226884	ForInit	c = 0 ;	3876:11:86009:86014	1226665	0	True				
ANR	1226885	AssignmentExpression	c = 0		1226665	0		=			
ANR	1226886	Identifier	c		1226665	0					
ANR	1226887	PrimaryExpression	0		1226665	1					
ANR	1226888	Condition	c < SINGLE_BYTE_SIZE	3876:18:86016:86035	1226665	1	True				
ANR	1226889	RelationalExpression	c < SINGLE_BYTE_SIZE		1226665	0		<			
ANR	1226890	Identifier	c		1226665	0					
ANR	1226891	Identifier	SINGLE_BYTE_SIZE		1226665	1					
ANR	1226892	PostIncDecOperationExpression	c ++	3876:40:86038:86040	1226665	2	True				
ANR	1226893	Identifier	c		1226665	0					
ANR	1226894	IncDec	++		1226665	1					
ANR	1226895	CompoundStatement		46:45:1176:1176	1226665	3					
ANR	1226896	IfStatement	"if ( ! ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype ) )"		1226665	0					
ANR	1226897	Condition	"! ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"	3877:5:86050:86103	1226665	0	True				
ANR	1226898	UnaryOperationExpression	"! ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"		1226665	0					
ANR	1226899	UnaryOperator	!		1226665	0					
ANR	1226900	CallExpression	"ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"		1226665	1					
ANR	1226901	Callee	ONIGENC_IS_CODE_CTYPE		1226665	0					
ANR	1226902	Identifier	ONIGENC_IS_CODE_CTYPE		1226665	0					
ANR	1226903	ArgumentList	enc		1226665	1					
ANR	1226904	Argument	enc		1226665	0					
ANR	1226905	Identifier	enc		1226665	0					
ANR	1226906	Argument	( OnigCodePoint ) c		1226665	1					
ANR	1226907	CastExpression	( OnigCodePoint ) c		1226665	0					
ANR	1226908	CastTarget	OnigCodePoint		1226665	0					
ANR	1226909	Identifier	c		1226665	1					
ANR	1226910	Argument	ctype		1226665	2					
ANR	1226911	Identifier	ctype		1226665	0					
ANR	1226912	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , c )"	3878:3:86109:86134	1226665	1	True				
ANR	1226913	CallExpression	"BITSET_SET_BIT ( cc -> bs , c )"		1226665	0					
ANR	1226914	Callee	BITSET_SET_BIT		1226665	0					
ANR	1226915	Identifier	BITSET_SET_BIT		1226665	0					
ANR	1226916	ArgumentList	cc -> bs		1226665	1					
ANR	1226917	Argument	cc -> bs		1226665	0					
ANR	1226918	PtrMemberAccess	cc -> bs		1226665	0					
ANR	1226919	Identifier	cc		1226665	0					
ANR	1226920	Identifier	bs		1226665	1					
ANR	1226921	Argument	c		1226665	1					
ANR	1226922	Identifier	c		1226665	0					
ANR	1226923	ElseStatement	else		1226665	0					
ANR	1226924	CompoundStatement		51:9:1292:1292	1226665	0					
ANR	1226925	ForStatement	for ( c = 0 ; c < SINGLE_BYTE_SIZE ; c ++ )		1226665	0					
ANR	1226926	ForInit	c = 0 ;	3882:11:86172:86177	1226665	0	True				
ANR	1226927	AssignmentExpression	c = 0		1226665	0		=			
ANR	1226928	Identifier	c		1226665	0					
ANR	1226929	PrimaryExpression	0		1226665	1					
ANR	1226930	Condition	c < SINGLE_BYTE_SIZE	3882:18:86179:86198	1226665	1	True				
ANR	1226931	RelationalExpression	c < SINGLE_BYTE_SIZE		1226665	0		<			
ANR	1226932	Identifier	c		1226665	0					
ANR	1226933	Identifier	SINGLE_BYTE_SIZE		1226665	1					
ANR	1226934	PostIncDecOperationExpression	c ++	3882:40:86201:86203	1226665	2	True				
ANR	1226935	Identifier	c		1226665	0					
ANR	1226936	IncDec	++		1226665	1					
ANR	1226937	CompoundStatement		52:45:1339:1339	1226665	3					
ANR	1226938	IfStatement	"if ( ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype ) )"		1226665	0					
ANR	1226939	Condition	"ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"	3883:5:86213:86264	1226665	0	True				
ANR	1226940	CallExpression	"ONIGENC_IS_CODE_CTYPE ( enc , ( OnigCodePoint ) c , ctype )"		1226665	0					
ANR	1226941	Callee	ONIGENC_IS_CODE_CTYPE		1226665	0					
ANR	1226942	Identifier	ONIGENC_IS_CODE_CTYPE		1226665	0					
ANR	1226943	ArgumentList	enc		1226665	1					
ANR	1226944	Argument	enc		1226665	0					
ANR	1226945	Identifier	enc		1226665	0					
ANR	1226946	Argument	( OnigCodePoint ) c		1226665	1					
ANR	1226947	CastExpression	( OnigCodePoint ) c		1226665	0					
ANR	1226948	CastTarget	OnigCodePoint		1226665	0					
ANR	1226949	Identifier	c		1226665	1					
ANR	1226950	Argument	ctype		1226665	2					
ANR	1226951	Identifier	ctype		1226665	0					
ANR	1226952	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , c )"	3884:3:86270:86295	1226665	1	True				
ANR	1226953	CallExpression	"BITSET_SET_BIT ( cc -> bs , c )"		1226665	0					
ANR	1226954	Callee	BITSET_SET_BIT		1226665	0					
ANR	1226955	Identifier	BITSET_SET_BIT		1226665	0					
ANR	1226956	ArgumentList	cc -> bs		1226665	1					
ANR	1226957	Argument	cc -> bs		1226665	0					
ANR	1226958	PtrMemberAccess	cc -> bs		1226665	0					
ANR	1226959	Identifier	cc		1226665	0					
ANR	1226960	Identifier	bs		1226665	1					
ANR	1226961	Argument	c		1226665	1					
ANR	1226962	Identifier	c		1226665	0					
ANR	1226963	ExpressionStatement	"ADD_ALL_MULTI_BYTE_RANGE ( enc , cc -> mbuf )"	3886:6:86311:86350	1226665	1	True				
ANR	1226964	CallExpression	"ADD_ALL_MULTI_BYTE_RANGE ( enc , cc -> mbuf )"		1226665	0					
ANR	1226965	Callee	ADD_ALL_MULTI_BYTE_RANGE		1226665	0					
ANR	1226966	Identifier	ADD_ALL_MULTI_BYTE_RANGE		1226665	0					
ANR	1226967	ArgumentList	enc		1226665	1					
ANR	1226968	Argument	enc		1226665	0					
ANR	1226969	Identifier	enc		1226665	0					
ANR	1226970	Argument	cc -> mbuf		1226665	1					
ANR	1226971	PtrMemberAccess	cc -> mbuf		1226665	0					
ANR	1226972	Identifier	cc		1226665	0					
ANR	1226973	Identifier	mbuf		1226665	1					
ANR	1226974	BreakStatement	break ;	3888:4:86362:86367	1226665	16	True				
ANR	1226975	Label	case ONIGENC_CTYPE_WORD :	3890:2:86372:86395	1226665	17	True				
ANR	1226976	Identifier	ONIGENC_CTYPE_WORD		1226665	0					
ANR	1226977	IfStatement	if ( not == 0 )		1226665	18					
ANR	1226978	Condition	not == 0	3891:8:86405:86412	1226665	0	True				
ANR	1226979	EqualityExpression	not == 0		1226665	0		==			
ANR	1226980	Identifier	not		1226665	0					
ANR	1226981	PrimaryExpression	0		1226665	1					
ANR	1226982	CompoundStatement		61:18:1548:1548	1226665	1					
ANR	1226983	ForStatement	for ( c = 0 ; c < SINGLE_BYTE_SIZE ; c ++ )		1226665	0					
ANR	1226984	ForInit	c = 0 ;	3892:11:86428:86433	1226665	0	True				
ANR	1226985	AssignmentExpression	c = 0		1226665	0		=			
ANR	1226986	Identifier	c		1226665	0					
ANR	1226987	PrimaryExpression	0		1226665	1					
ANR	1226988	Condition	c < SINGLE_BYTE_SIZE	3892:18:86435:86454	1226665	1	True				
ANR	1226989	RelationalExpression	c < SINGLE_BYTE_SIZE		1226665	0		<			
ANR	1226990	Identifier	c		1226665	0					
ANR	1226991	Identifier	SINGLE_BYTE_SIZE		1226665	1					
ANR	1226992	PostIncDecOperationExpression	c ++	3892:40:86457:86459	1226665	2	True				
ANR	1226993	Identifier	c		1226665	0					
ANR	1226994	IncDec	++		1226665	1					
ANR	1226995	CompoundStatement		62:45:1595:1595	1226665	3					
ANR	1226996	IfStatement	"if ( IS_CODE_SB_WORD ( enc , c ) )"		1226665	0					
ANR	1226997	Condition	"IS_CODE_SB_WORD ( enc , c )"	3893:5:86469:86491	1226665	0	True				
ANR	1226998	CallExpression	"IS_CODE_SB_WORD ( enc , c )"		1226665	0					
ANR	1226999	Callee	IS_CODE_SB_WORD		1226665	0					
ANR	1227000	Identifier	IS_CODE_SB_WORD		1226665	0					
ANR	1227001	ArgumentList	enc		1226665	1					
ANR	1227002	Argument	enc		1226665	0					
ANR	1227003	Identifier	enc		1226665	0					
ANR	1227004	Argument	c		1226665	1					
ANR	1227005	Identifier	c		1226665	0					
ANR	1227006	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , c )"	3893:30:86494:86519	1226665	1	True				
ANR	1227007	CallExpression	"BITSET_SET_BIT ( cc -> bs , c )"		1226665	0					
ANR	1227008	Callee	BITSET_SET_BIT		1226665	0					
ANR	1227009	Identifier	BITSET_SET_BIT		1226665	0					
ANR	1227010	ArgumentList	cc -> bs		1226665	1					
ANR	1227011	Argument	cc -> bs		1226665	0					
ANR	1227012	PtrMemberAccess	cc -> bs		1226665	0					
ANR	1227013	Identifier	cc		1226665	0					
ANR	1227014	Identifier	bs		1226665	1					
ANR	1227015	Argument	c		1226665	1					
ANR	1227016	Identifier	c		1226665	0					
ANR	1227017	ExpressionStatement	"ADD_ALL_MULTI_BYTE_RANGE ( enc , cc -> mbuf )"	3895:6:86535:86574	1226665	1	True				
ANR	1227018	CallExpression	"ADD_ALL_MULTI_BYTE_RANGE ( enc , cc -> mbuf )"		1226665	0					
ANR	1227019	Callee	ADD_ALL_MULTI_BYTE_RANGE		1226665	0					
ANR	1227020	Identifier	ADD_ALL_MULTI_BYTE_RANGE		1226665	0					
ANR	1227021	ArgumentList	enc		1226665	1					
ANR	1227022	Argument	enc		1226665	0					
ANR	1227023	Identifier	enc		1226665	0					
ANR	1227024	Argument	cc -> mbuf		1226665	1					
ANR	1227025	PtrMemberAccess	cc -> mbuf		1226665	0					
ANR	1227026	Identifier	cc		1226665	0					
ANR	1227027	Identifier	mbuf		1226665	1					
ANR	1227028	ElseStatement	else		1226665	0					
ANR	1227029	CompoundStatement		67:9:1724:1724	1226665	0					
ANR	1227030	ForStatement	for ( c = 0 ; c < SINGLE_BYTE_SIZE ; c ++ )		1226665	0					
ANR	1227031	ForInit	c = 0 ;	3898:11:86604:86609	1226665	0	True				
ANR	1227032	AssignmentExpression	c = 0		1226665	0		=			
ANR	1227033	Identifier	c		1226665	0					
ANR	1227034	PrimaryExpression	0		1226665	1					
ANR	1227035	Condition	c < SINGLE_BYTE_SIZE	3898:18:86611:86630	1226665	1	True				
ANR	1227036	RelationalExpression	c < SINGLE_BYTE_SIZE		1226665	0		<			
ANR	1227037	Identifier	c		1226665	0					
ANR	1227038	Identifier	SINGLE_BYTE_SIZE		1226665	1					
ANR	1227039	PostIncDecOperationExpression	c ++	3898:40:86633:86635	1226665	2	True				
ANR	1227040	Identifier	c		1226665	0					
ANR	1227041	IncDec	++		1226665	1					
ANR	1227042	CompoundStatement		68:45:1771:1771	1226665	3					
ANR	1227043	IfStatement	"if ( ( ONIGENC_CODE_TO_MBCLEN ( enc , c ) > 0 ) && ! ONIGENC_IS_CODE_WORD ( enc , c ) )"		1226665	0					
ANR	1227044	Condition	"( ONIGENC_CODE_TO_MBCLEN ( enc , c ) > 0 ) && ! ONIGENC_IS_CODE_WORD ( enc , c )"	3899:12:86652:86757	1226665	0	True				
ANR	1227045	AndExpression	"( ONIGENC_CODE_TO_MBCLEN ( enc , c ) > 0 ) && ! ONIGENC_IS_CODE_WORD ( enc , c )"		1226665	0		&&			
ANR	1227046	RelationalExpression	"ONIGENC_CODE_TO_MBCLEN ( enc , c ) > 0"		1226665	0		>			
ANR	1227047	CallExpression	"ONIGENC_CODE_TO_MBCLEN ( enc , c )"		1226665	0					
ANR	1227048	Callee	ONIGENC_CODE_TO_MBCLEN		1226665	0					
ANR	1227049	Identifier	ONIGENC_CODE_TO_MBCLEN		1226665	0					
ANR	1227050	ArgumentList	enc		1226665	1					
ANR	1227051	Argument	enc		1226665	0					
ANR	1227052	Identifier	enc		1226665	0					
ANR	1227053	Argument	c		1226665	1					
ANR	1227054	Identifier	c		1226665	0					
ANR	1227055	PrimaryExpression	0		1226665	1					
ANR	1227056	UnaryOperationExpression	"! ONIGENC_IS_CODE_WORD ( enc , c )"		1226665	1					
ANR	1227057	UnaryOperator	!		1226665	0					
ANR	1227058	CallExpression	"ONIGENC_IS_CODE_WORD ( enc , c )"		1226665	1					
ANR	1227059	Callee	ONIGENC_IS_CODE_WORD		1226665	0					
ANR	1227060	Identifier	ONIGENC_IS_CODE_WORD		1226665	0					
ANR	1227061	ArgumentList	enc		1226665	1					
ANR	1227062	Argument	enc		1226665	0					
ANR	1227063	Identifier	enc		1226665	0					
ANR	1227064	Argument	c		1226665	1					
ANR	1227065	Identifier	c		1226665	0					
ANR	1227066	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , c )"	3901:3:86763:86788	1226665	1	True				
ANR	1227067	CallExpression	"BITSET_SET_BIT ( cc -> bs , c )"		1226665	0					
ANR	1227068	Callee	BITSET_SET_BIT		1226665	0					
ANR	1227069	Identifier	BITSET_SET_BIT		1226665	0					
ANR	1227070	ArgumentList	cc -> bs		1226665	1					
ANR	1227071	Argument	cc -> bs		1226665	0					
ANR	1227072	PtrMemberAccess	cc -> bs		1226665	0					
ANR	1227073	Identifier	cc		1226665	0					
ANR	1227074	Identifier	bs		1226665	1					
ANR	1227075	Argument	c		1226665	1					
ANR	1227076	Identifier	c		1226665	0					
ANR	1227077	BreakStatement	break ;	3904:4:86808:86813	1226665	19	True				
ANR	1227078	Label	default :	3906:2:86818:86825	1226665	20	True				
ANR	1227079	Identifier	default		1226665	0					
ANR	1227080	ReturnStatement	return ONIGERR_PARSER_BUG ;	3907:4:86831:86856	1226665	21	True				
ANR	1227081	Identifier	ONIGERR_PARSER_BUG		1226665	0					
ANR	1227082	BreakStatement	break ;	3908:4:86862:86867	1226665	22	True				
ANR	1227083	ReturnStatement	return r ;	3911:2:86876:86884	1226665	8	True				
ANR	1227084	Identifier	r		1226665	0					
ANR	1227085	ReturnType	static int		1226665	1					
ANR	1227086	Identifier	add_ctype_to_cc		1226665	2					
ANR	1227087	ParameterList	"CClassNode * cc , int ctype , int not , ScanEnv * env"		1226665	3					
ANR	1227088	Parameter	CClassNode * cc	3830:16:84816:84829	1226665	0	True				
ANR	1227089	ParameterType	CClassNode *		1226665	0					
ANR	1227090	Identifier	cc		1226665	1					
ANR	1227091	Parameter	int ctype	3830:32:84832:84840	1226665	1	True				
ANR	1227092	ParameterType	int		1226665	0					
ANR	1227093	Identifier	ctype		1226665	1					
ANR	1227094	Parameter	int not	3830:43:84843:84849	1226665	2	True				
ANR	1227095	ParameterType	int		1226665	0					
ANR	1227096	Identifier	not		1226665	1					
ANR	1227097	Parameter	ScanEnv * env	3830:52:84852:84863	1226665	3	True				
ANR	1227098	ParameterType	ScanEnv *		1226665	0					
ANR	1227099	Identifier	env		1226665	1					
ANR	1227100	CFGEntryNode	ENTRY		1226665		True				
ANR	1227101	CFGExitNode	EXIT		1226665		True				
ANR	1227102	Symbol	ranges		1226665						
ANR	1227103	Symbol	* cc		1226665						
ANR	1227104	Symbol	env -> enc		1226665						
ANR	1227105	Symbol	cc -> mbuf		1226665						
ANR	1227106	Symbol	IS_CODE_SB_WORD		1226665						
ANR	1227107	Symbol	ONIGENC_IS_CODE_WORD		1226665						
ANR	1227108	Symbol	sb_out		1226665						
ANR	1227109	Symbol	not		1226665						
ANR	1227110	Symbol	& ranges		1226665						
ANR	1227111	Symbol	ONIGENC_GET_CTYPE_CODE_RANGE		1226665						
ANR	1227112	Symbol	enc		1226665						
ANR	1227113	Symbol	& sb_out		1226665						
ANR	1227114	Symbol	add_ctype_to_cc_by_range		1226665						
ANR	1227115	Symbol	cc		1226665						
ANR	1227116	Symbol	SINGLE_BYTE_SIZE		1226665						
ANR	1227117	Symbol	c		1226665						
ANR	1227118	Symbol	* env		1226665						
ANR	1227119	Symbol	env		1226665						
ANR	1227120	Symbol	ONIGERR_PARSER_BUG		1226665						
ANR	1227121	Symbol	cc -> bs		1226665						
ANR	1227122	Symbol	ONIGENC_CODE_TO_MBCLEN		1226665						
ANR	1227123	Symbol	r		1226665						
ANR	1227124	Symbol	ctype		1226665						
ANR	1227125	Symbol	ONIG_NO_SUPPORT_CONFIG		1226665						
ANR	1227126	Symbol	ONIGENC_IS_CODE_CTYPE		1226665						
ANR	1227127	Function	parse_posix_bracket	3914:0:86889:88992							
ANR	1227128	FunctionDef	"parse_posix_bracket (CClassNode * cc , UChar * * src , UChar * end , ScanEnv * env)"		1227127	0					
ANR	1227129	CompoundStatement		3916:0:86975:88992	1227127	0					
ANR	1227130	Statement	define	3917:1:86978:86983	1227127	0	True				
ANR	1227131	Statement	POSIX_BRACKET_CHECK_LIMIT_LENGTH	3917:8:86985:87016	1227127	1	True				
ANR	1227132	Statement	20	3917:42:87019:87020	1227127	2	True				
ANR	1227133	Statement	define	3918:1:87023:87028	1227127	3	True				
ANR	1227134	Statement	POSIX_BRACKET_NAME_MIN_LEN	3918:8:87030:87055	1227127	4	True				
ANR	1227135	Statement	4	3918:43:87065:87065	1227127	5	True				
ANR	1227136	Statement	static	3920:2:87070:87075	1227127	6	True				
ANR	1227137	IdentifierDeclStatement	"PosixBracketEntryType PBS [ ] = { { ( UChar * ) ""alnum"" , ONIGENC_CTYPE_ALNUM , 5 } , { ( UChar * ) ""alpha"" , ONIGENC_CTYPE_ALPHA , 5 } , { ( UChar * ) ""blank"" , ONIGENC_CTYPE_BLANK , 5 } , { ( UChar * ) ""cntrl"" , ONIGENC_CTYPE_CNTRL , 5 } , { ( UChar * ) ""digit"" , ONIGENC_CTYPE_DIGIT , 5 } , { ( UChar * ) ""graph"" , ONIGENC_CTYPE_GRAPH , 5 } , { ( UChar * ) ""lower"" , ONIGENC_CTYPE_LOWER , 5 } , { ( UChar * ) ""print"" , ONIGENC_CTYPE_PRINT , 5 } , { ( UChar * ) ""punct"" , ONIGENC_CTYPE_PUNCT , 5 } , { ( UChar * ) ""space"" , ONIGENC_CTYPE_SPACE , 5 } , { ( UChar * ) ""upper"" , ONIGENC_CTYPE_UPPER , 5 } , { ( UChar * ) ""xdigit"" , ONIGENC_CTYPE_XDIGIT , 6 } , { ( UChar * ) ""ascii"" , ONIGENC_CTYPE_ASCII , 5 } , { ( UChar * ) ""word"" , ONIGENC_CTYPE_WORD , 4 } , { ( UChar * ) NULL , - 1 , 0 } } ;"	3920:9:87077:87873	1227127	7	True				
ANR	1227138	IdentifierDecl	"PBS [ ] = { { ( UChar * ) ""alnum"" , ONIGENC_CTYPE_ALNUM , 5 } , { ( UChar * ) ""alpha"" , ONIGENC_CTYPE_ALPHA , 5 } , { ( UChar * ) ""blank"" , ONIGENC_CTYPE_BLANK , 5 } , { ( UChar * ) ""cntrl"" , ONIGENC_CTYPE_CNTRL , 5 } , { ( UChar * ) ""digit"" , ONIGENC_CTYPE_DIGIT , 5 } , { ( UChar * ) ""graph"" , ONIGENC_CTYPE_GRAPH , 5 } , { ( UChar * ) ""lower"" , ONIGENC_CTYPE_LOWER , 5 } , { ( UChar * ) ""print"" , ONIGENC_CTYPE_PRINT , 5 } , { ( UChar * ) ""punct"" , ONIGENC_CTYPE_PUNCT , 5 } , { ( UChar * ) ""space"" , ONIGENC_CTYPE_SPACE , 5 } , { ( UChar * ) ""upper"" , ONIGENC_CTYPE_UPPER , 5 } , { ( UChar * ) ""xdigit"" , ONIGENC_CTYPE_XDIGIT , 6 } , { ( UChar * ) ""ascii"" , ONIGENC_CTYPE_ASCII , 5 } , { ( UChar * ) ""word"" , ONIGENC_CTYPE_WORD , 4 } , { ( UChar * ) NULL , - 1 , 0 } }"		1227127	0					
ANR	1227139	IdentifierDeclType	PosixBracketEntryType [ ]		1227127	0					
ANR	1227140	Identifier	PBS		1227127	1					
ANR	1227141	AssignmentExpression	"PBS [ ] = { { ( UChar * ) ""alnum"" , ONIGENC_CTYPE_ALNUM , 5 } , { ( UChar * ) ""alpha"" , ONIGENC_CTYPE_ALPHA , 5 } , { ( UChar * ) ""blank"" , ONIGENC_CTYPE_BLANK , 5 } , { ( UChar * ) ""cntrl"" , ONIGENC_CTYPE_CNTRL , 5 } , { ( UChar * ) ""digit"" , ONIGENC_CTYPE_DIGIT , 5 } , { ( UChar * ) ""graph"" , ONIGENC_CTYPE_GRAPH , 5 } , { ( UChar * ) ""lower"" , ONIGENC_CTYPE_LOWER , 5 } , { ( UChar * ) ""print"" , ONIGENC_CTYPE_PRINT , 5 } , { ( UChar * ) ""punct"" , ONIGENC_CTYPE_PUNCT , 5 } , { ( UChar * ) ""space"" , ONIGENC_CTYPE_SPACE , 5 } , { ( UChar * ) ""upper"" , ONIGENC_CTYPE_UPPER , 5 } , { ( UChar * ) ""xdigit"" , ONIGENC_CTYPE_XDIGIT , 6 } , { ( UChar * ) ""ascii"" , ONIGENC_CTYPE_ASCII , 5 } , { ( UChar * ) ""word"" , ONIGENC_CTYPE_WORD , 4 } , { ( UChar * ) NULL , - 1 , 0 } }"		1227127	2		=			
ANR	1227142	Identifier	PBS		1227127	0					
ANR	1227143	InitializerList	"( UChar * ) ""alnum"""		1227127	1					
ANR	1227144	InitializerList	"( UChar * ) ""alnum"""		1227127	0					
ANR	1227145	CastExpression	"( UChar * ) ""alnum"""		1227127	0					
ANR	1227146	CastTarget	UChar *		1227127	0					
ANR	1227147	PrimaryExpression	"""alnum"""		1227127	1					
ANR	1227148	Identifier	ONIGENC_CTYPE_ALNUM		1227127	1					
ANR	1227149	PrimaryExpression	5		1227127	2					
ANR	1227150	InitializerList	"( UChar * ) ""alpha"""		1227127	1					
ANR	1227151	CastExpression	"( UChar * ) ""alpha"""		1227127	0					
ANR	1227152	CastTarget	UChar *		1227127	0					
ANR	1227153	PrimaryExpression	"""alpha"""		1227127	1					
ANR	1227154	Identifier	ONIGENC_CTYPE_ALPHA		1227127	1					
ANR	1227155	PrimaryExpression	5		1227127	2					
ANR	1227156	InitializerList	"( UChar * ) ""blank"""		1227127	2					
ANR	1227157	CastExpression	"( UChar * ) ""blank"""		1227127	0					
ANR	1227158	CastTarget	UChar *		1227127	0					
ANR	1227159	PrimaryExpression	"""blank"""		1227127	1					
ANR	1227160	Identifier	ONIGENC_CTYPE_BLANK		1227127	1					
ANR	1227161	PrimaryExpression	5		1227127	2					
ANR	1227162	InitializerList	"( UChar * ) ""cntrl"""		1227127	3					
ANR	1227163	CastExpression	"( UChar * ) ""cntrl"""		1227127	0					
ANR	1227164	CastTarget	UChar *		1227127	0					
ANR	1227165	PrimaryExpression	"""cntrl"""		1227127	1					
ANR	1227166	Identifier	ONIGENC_CTYPE_CNTRL		1227127	1					
ANR	1227167	PrimaryExpression	5		1227127	2					
ANR	1227168	InitializerList	"( UChar * ) ""digit"""		1227127	4					
ANR	1227169	CastExpression	"( UChar * ) ""digit"""		1227127	0					
ANR	1227170	CastTarget	UChar *		1227127	0					
ANR	1227171	PrimaryExpression	"""digit"""		1227127	1					
ANR	1227172	Identifier	ONIGENC_CTYPE_DIGIT		1227127	1					
ANR	1227173	PrimaryExpression	5		1227127	2					
ANR	1227174	InitializerList	"( UChar * ) ""graph"""		1227127	5					
ANR	1227175	CastExpression	"( UChar * ) ""graph"""		1227127	0					
ANR	1227176	CastTarget	UChar *		1227127	0					
ANR	1227177	PrimaryExpression	"""graph"""		1227127	1					
ANR	1227178	Identifier	ONIGENC_CTYPE_GRAPH		1227127	1					
ANR	1227179	PrimaryExpression	5		1227127	2					
ANR	1227180	InitializerList	"( UChar * ) ""lower"""		1227127	6					
ANR	1227181	CastExpression	"( UChar * ) ""lower"""		1227127	0					
ANR	1227182	CastTarget	UChar *		1227127	0					
ANR	1227183	PrimaryExpression	"""lower"""		1227127	1					
ANR	1227184	Identifier	ONIGENC_CTYPE_LOWER		1227127	1					
ANR	1227185	PrimaryExpression	5		1227127	2					
ANR	1227186	InitializerList	"( UChar * ) ""print"""		1227127	7					
ANR	1227187	CastExpression	"( UChar * ) ""print"""		1227127	0					
ANR	1227188	CastTarget	UChar *		1227127	0					
ANR	1227189	PrimaryExpression	"""print"""		1227127	1					
ANR	1227190	Identifier	ONIGENC_CTYPE_PRINT		1227127	1					
ANR	1227191	PrimaryExpression	5		1227127	2					
ANR	1227192	InitializerList	"( UChar * ) ""punct"""		1227127	8					
ANR	1227193	CastExpression	"( UChar * ) ""punct"""		1227127	0					
ANR	1227194	CastTarget	UChar *		1227127	0					
ANR	1227195	PrimaryExpression	"""punct"""		1227127	1					
ANR	1227196	Identifier	ONIGENC_CTYPE_PUNCT		1227127	1					
ANR	1227197	PrimaryExpression	5		1227127	2					
ANR	1227198	InitializerList	"( UChar * ) ""space"""		1227127	9					
ANR	1227199	CastExpression	"( UChar * ) ""space"""		1227127	0					
ANR	1227200	CastTarget	UChar *		1227127	0					
ANR	1227201	PrimaryExpression	"""space"""		1227127	1					
ANR	1227202	Identifier	ONIGENC_CTYPE_SPACE		1227127	1					
ANR	1227203	PrimaryExpression	5		1227127	2					
ANR	1227204	InitializerList	"( UChar * ) ""upper"""		1227127	10					
ANR	1227205	CastExpression	"( UChar * ) ""upper"""		1227127	0					
ANR	1227206	CastTarget	UChar *		1227127	0					
ANR	1227207	PrimaryExpression	"""upper"""		1227127	1					
ANR	1227208	Identifier	ONIGENC_CTYPE_UPPER		1227127	1					
ANR	1227209	PrimaryExpression	5		1227127	2					
ANR	1227210	InitializerList	"( UChar * ) ""xdigit"""		1227127	11					
ANR	1227211	CastExpression	"( UChar * ) ""xdigit"""		1227127	0					
ANR	1227212	CastTarget	UChar *		1227127	0					
ANR	1227213	PrimaryExpression	"""xdigit"""		1227127	1					
ANR	1227214	Identifier	ONIGENC_CTYPE_XDIGIT		1227127	1					
ANR	1227215	PrimaryExpression	6		1227127	2					
ANR	1227216	InitializerList	"( UChar * ) ""ascii"""		1227127	12					
ANR	1227217	CastExpression	"( UChar * ) ""ascii"""		1227127	0					
ANR	1227218	CastTarget	UChar *		1227127	0					
ANR	1227219	PrimaryExpression	"""ascii"""		1227127	1					
ANR	1227220	Identifier	ONIGENC_CTYPE_ASCII		1227127	1					
ANR	1227221	PrimaryExpression	5		1227127	2					
ANR	1227222	InitializerList	"( UChar * ) ""word"""		1227127	13					
ANR	1227223	CastExpression	"( UChar * ) ""word"""		1227127	0					
ANR	1227224	CastTarget	UChar *		1227127	0					
ANR	1227225	PrimaryExpression	"""word"""		1227127	1					
ANR	1227226	Identifier	ONIGENC_CTYPE_WORD		1227127	1					
ANR	1227227	PrimaryExpression	4		1227127	2					
ANR	1227228	InitializerList	( UChar * ) NULL		1227127	14					
ANR	1227229	CastExpression	( UChar * ) NULL		1227127	0					
ANR	1227230	CastTarget	UChar *		1227127	0					
ANR	1227231	Identifier	NULL		1227127	1					
ANR	1227232	UnaryOperationExpression	- 1		1227127	1					
ANR	1227233	UnaryOperator	-		1227127	0					
ANR	1227234	PrimaryExpression	1		1227127	1					
ANR	1227235	PrimaryExpression	0		1227127	2					
ANR	1227236	IdentifierDeclStatement	PosixBracketEntryType * pb ;	3938:2:87878:87903	1227127	8	True				
ANR	1227237	IdentifierDecl	* pb		1227127	0					
ANR	1227238	IdentifierDeclType	PosixBracketEntryType *		1227127	0					
ANR	1227239	Identifier	pb		1227127	1					
ANR	1227240	IdentifierDeclStatement	"int not , i , r ;"	3939:2:87907:87920	1227127	9	True				
ANR	1227241	IdentifierDecl	not		1227127	0					
ANR	1227242	IdentifierDeclType	int		1227127	0					
ANR	1227243	Identifier	not		1227127	1					
ANR	1227244	IdentifierDecl	i		1227127	1					
ANR	1227245	IdentifierDeclType	int		1227127	0					
ANR	1227246	Identifier	i		1227127	1					
ANR	1227247	IdentifierDecl	r		1227127	2					
ANR	1227248	IdentifierDeclType	int		1227127	0					
ANR	1227249	Identifier	r		1227127	1					
ANR	1227250	IdentifierDeclStatement	OnigCodePoint c ;	3940:2:87924:87939	1227127	10	True				
ANR	1227251	IdentifierDecl	c		1227127	0					
ANR	1227252	IdentifierDeclType	OnigCodePoint		1227127	0					
ANR	1227253	Identifier	c		1227127	1					
ANR	1227254	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	3941:2:87943:87970	1227127	11	True				
ANR	1227255	IdentifierDecl	enc = env -> enc		1227127	0					
ANR	1227256	IdentifierDeclType	OnigEncoding		1227127	0					
ANR	1227257	Identifier	enc		1227127	1					
ANR	1227258	AssignmentExpression	enc = env -> enc		1227127	2		=			
ANR	1227259	Identifier	enc		1227127	0					
ANR	1227260	PtrMemberAccess	env -> enc		1227127	1					
ANR	1227261	Identifier	env		1227127	0					
ANR	1227262	Identifier	enc		1227127	1					
ANR	1227263	IdentifierDeclStatement	UChar * p = * src ;	3942:2:87974:87989	1227127	12	True				
ANR	1227264	IdentifierDecl	* p = * src		1227127	0					
ANR	1227265	IdentifierDeclType	UChar *		1227127	0					
ANR	1227266	Identifier	p		1227127	1					
ANR	1227267	AssignmentExpression	* p = * src		1227127	2		=			
ANR	1227268	Identifier	p		1227127	0					
ANR	1227269	UnaryOperationExpression	* src		1227127	1					
ANR	1227270	UnaryOperator	*		1227127	0					
ANR	1227271	Identifier	src		1227127	1					
ANR	1227272	IfStatement	if ( PPEEK_IS ( '^' ) )		1227127	13					
ANR	1227273	Condition	PPEEK_IS ( '^' )	3944:6:87998:88010	1227127	0	True				
ANR	1227274	CallExpression	PPEEK_IS ( '^' )		1227127	0					
ANR	1227275	Callee	PPEEK_IS		1227127	0					
ANR	1227276	Identifier	PPEEK_IS		1227127	0					
ANR	1227277	ArgumentList	'^'		1227127	1					
ANR	1227278	Argument	'^'		1227127	0					
ANR	1227279	PrimaryExpression	'^'		1227127	0					
ANR	1227280	CompoundStatement		29:21:1037:1037	1227127	1					
ANR	1227281	ExpressionStatement	PINC_S	3945:4:88019:88025	1227127	0	True				
ANR	1227282	Identifier	PINC_S		1227127	0					
ANR	1227283	ExpressionStatement	not = 1	3946:4:88031:88038	1227127	1	True				
ANR	1227284	AssignmentExpression	not = 1		1227127	0		=			
ANR	1227285	Identifier	not		1227127	0					
ANR	1227286	PrimaryExpression	1		1227127	1					
ANR	1227287	ElseStatement	else		1227127	0					
ANR	1227288	ExpressionStatement	not = 0	3949:4:88055:88062	1227127	0	True				
ANR	1227289	AssignmentExpression	not = 0		1227127	0		=			
ANR	1227290	Identifier	not		1227127	0					
ANR	1227291	PrimaryExpression	0		1227127	1					
ANR	1227292	IfStatement	"if ( onigenc_strlen ( enc , p , end ) < POSIX_BRACKET_NAME_MIN_LEN + 3 )"		1227127	14					
ANR	1227293	Condition	"onigenc_strlen ( enc , p , end ) < POSIX_BRACKET_NAME_MIN_LEN + 3"	3951:6:88071:88130	1227127	0	True				
ANR	1227294	RelationalExpression	"onigenc_strlen ( enc , p , end ) < POSIX_BRACKET_NAME_MIN_LEN + 3"		1227127	0		<			
ANR	1227295	CallExpression	"onigenc_strlen ( enc , p , end )"		1227127	0					
ANR	1227296	Callee	onigenc_strlen		1227127	0					
ANR	1227297	Identifier	onigenc_strlen		1227127	0					
ANR	1227298	ArgumentList	enc		1227127	1					
ANR	1227299	Argument	enc		1227127	0					
ANR	1227300	Identifier	enc		1227127	0					
ANR	1227301	Argument	p		1227127	1					
ANR	1227302	Identifier	p		1227127	0					
ANR	1227303	Argument	end		1227127	2					
ANR	1227304	Identifier	end		1227127	0					
ANR	1227305	AdditiveExpression	POSIX_BRACKET_NAME_MIN_LEN + 3		1227127	1		+			
ANR	1227306	Identifier	POSIX_BRACKET_NAME_MIN_LEN		1227127	0					
ANR	1227307	PrimaryExpression	3		1227127	1					
ANR	1227308	GotoStatement	goto not_posix_bracket ;	3952:4:88137:88159	1227127	1	True				
ANR	1227309	Identifier	not_posix_bracket		1227127	0					
ANR	1227310	ForStatement	for ( pb = PBS ; IS_NOT_NULL ( pb -> name ) ; pb ++ )		1227127	15					
ANR	1227311	ForInit	pb = PBS ;	3954:7:88169:88177	1227127	0	True				
ANR	1227312	AssignmentExpression	pb = PBS		1227127	0		=			
ANR	1227313	Identifier	pb		1227127	0					
ANR	1227314	Identifier	PBS		1227127	1					
ANR	1227315	Condition	IS_NOT_NULL ( pb -> name )	3954:17:88179:88199	1227127	1	True				
ANR	1227316	CallExpression	IS_NOT_NULL ( pb -> name )		1227127	0					
ANR	1227317	Callee	IS_NOT_NULL		1227127	0					
ANR	1227318	Identifier	IS_NOT_NULL		1227127	0					
ANR	1227319	ArgumentList	pb -> name		1227127	1					
ANR	1227320	Argument	pb -> name		1227127	0					
ANR	1227321	PtrMemberAccess	pb -> name		1227127	0					
ANR	1227322	Identifier	pb		1227127	0					
ANR	1227323	Identifier	name		1227127	1					
ANR	1227324	PostIncDecOperationExpression	pb ++	3954:40:88202:88205	1227127	2	True				
ANR	1227325	Identifier	pb		1227127	0					
ANR	1227326	IncDec	++		1227127	1					
ANR	1227327	CompoundStatement		39:46:1232:1232	1227127	3					
ANR	1227328	IfStatement	"if ( onigenc_with_ascii_strncmp ( enc , p , end , pb -> name , pb -> len ) == 0 )"		1227127	0					
ANR	1227329	Condition	"onigenc_with_ascii_strncmp ( enc , p , end , pb -> name , pb -> len ) == 0"	3955:8:88218:88280	1227127	0	True				
ANR	1227330	EqualityExpression	"onigenc_with_ascii_strncmp ( enc , p , end , pb -> name , pb -> len ) == 0"		1227127	0		==			
ANR	1227331	CallExpression	"onigenc_with_ascii_strncmp ( enc , p , end , pb -> name , pb -> len )"		1227127	0					
ANR	1227332	Callee	onigenc_with_ascii_strncmp		1227127	0					
ANR	1227333	Identifier	onigenc_with_ascii_strncmp		1227127	0					
ANR	1227334	ArgumentList	enc		1227127	1					
ANR	1227335	Argument	enc		1227127	0					
ANR	1227336	Identifier	enc		1227127	0					
ANR	1227337	Argument	p		1227127	1					
ANR	1227338	Identifier	p		1227127	0					
ANR	1227339	Argument	end		1227127	2					
ANR	1227340	Identifier	end		1227127	0					
ANR	1227341	Argument	pb -> name		1227127	3					
ANR	1227342	PtrMemberAccess	pb -> name		1227127	0					
ANR	1227343	Identifier	pb		1227127	0					
ANR	1227344	Identifier	name		1227127	1					
ANR	1227345	Argument	pb -> len		1227127	4					
ANR	1227346	PtrMemberAccess	pb -> len		1227127	0					
ANR	1227347	Identifier	pb		1227127	0					
ANR	1227348	Identifier	len		1227127	1					
ANR	1227349	PrimaryExpression	0		1227127	1					
ANR	1227350	CompoundStatement		40:73:1307:1307	1227127	1					
ANR	1227351	ExpressionStatement	"p = ( UChar * ) onigenc_step ( enc , p , end , pb -> len )"	3956:6:88291:88338	1227127	0	True				
ANR	1227352	AssignmentExpression	"p = ( UChar * ) onigenc_step ( enc , p , end , pb -> len )"		1227127	0		=			
ANR	1227353	Identifier	p		1227127	0					
ANR	1227354	CastExpression	"( UChar * ) onigenc_step ( enc , p , end , pb -> len )"		1227127	1					
ANR	1227355	CastTarget	UChar *		1227127	0					
ANR	1227356	CallExpression	"onigenc_step ( enc , p , end , pb -> len )"		1227127	1					
ANR	1227357	Callee	onigenc_step		1227127	0					
ANR	1227358	Identifier	onigenc_step		1227127	0					
ANR	1227359	ArgumentList	enc		1227127	1					
ANR	1227360	Argument	enc		1227127	0					
ANR	1227361	Identifier	enc		1227127	0					
ANR	1227362	Argument	p		1227127	1					
ANR	1227363	Identifier	p		1227127	0					
ANR	1227364	Argument	end		1227127	2					
ANR	1227365	Identifier	end		1227127	0					
ANR	1227366	Argument	pb -> len		1227127	3					
ANR	1227367	PtrMemberAccess	pb -> len		1227127	0					
ANR	1227368	Identifier	pb		1227127	0					
ANR	1227369	Identifier	len		1227127	1					
ANR	1227370	IfStatement	"if ( onigenc_with_ascii_strncmp ( enc , p , end , ( UChar * ) "":]"" , 2 ) != 0 )"		1227127	1					
ANR	1227371	Condition	"onigenc_with_ascii_strncmp ( enc , p , end , ( UChar * ) "":]"" , 2 ) != 0"	3957:10:88350:88411	1227127	0	True				
ANR	1227372	EqualityExpression	"onigenc_with_ascii_strncmp ( enc , p , end , ( UChar * ) "":]"" , 2 ) != 0"		1227127	0		!=			
ANR	1227373	CallExpression	"onigenc_with_ascii_strncmp ( enc , p , end , ( UChar * ) "":]"" , 2 )"		1227127	0					
ANR	1227374	Callee	onigenc_with_ascii_strncmp		1227127	0					
ANR	1227375	Identifier	onigenc_with_ascii_strncmp		1227127	0					
ANR	1227376	ArgumentList	enc		1227127	1					
ANR	1227377	Argument	enc		1227127	0					
ANR	1227378	Identifier	enc		1227127	0					
ANR	1227379	Argument	p		1227127	1					
ANR	1227380	Identifier	p		1227127	0					
ANR	1227381	Argument	end		1227127	2					
ANR	1227382	Identifier	end		1227127	0					
ANR	1227383	Argument	"( UChar * ) "":]"""		1227127	3					
ANR	1227384	CastExpression	"( UChar * ) "":]"""		1227127	0					
ANR	1227385	CastTarget	UChar *		1227127	0					
ANR	1227386	PrimaryExpression	""":]"""		1227127	1					
ANR	1227387	Argument	2		1227127	4					
ANR	1227388	PrimaryExpression	2		1227127	0					
ANR	1227389	PrimaryExpression	0		1227127	1					
ANR	1227390	ReturnStatement	return ONIGERR_INVALID_POSIX_BRACKET_TYPE ;	3958:8:88422:88463	1227127	1	True				
ANR	1227391	Identifier	ONIGERR_INVALID_POSIX_BRACKET_TYPE		1227127	0					
ANR	1227392	ExpressionStatement	"r = add_ctype_to_cc ( cc , pb -> ctype , not , env )"	3960:6:88472:88516	1227127	2	True				
ANR	1227393	AssignmentExpression	"r = add_ctype_to_cc ( cc , pb -> ctype , not , env )"		1227127	0		=			
ANR	1227394	Identifier	r		1227127	0					
ANR	1227395	CallExpression	"add_ctype_to_cc ( cc , pb -> ctype , not , env )"		1227127	1					
ANR	1227396	Callee	add_ctype_to_cc		1227127	0					
ANR	1227397	Identifier	add_ctype_to_cc		1227127	0					
ANR	1227398	ArgumentList	cc		1227127	1					
ANR	1227399	Argument	cc		1227127	0					
ANR	1227400	Identifier	cc		1227127	0					
ANR	1227401	Argument	pb -> ctype		1227127	1					
ANR	1227402	PtrMemberAccess	pb -> ctype		1227127	0					
ANR	1227403	Identifier	pb		1227127	0					
ANR	1227404	Identifier	ctype		1227127	1					
ANR	1227405	Argument	not		1227127	2					
ANR	1227406	Identifier	not		1227127	0					
ANR	1227407	Argument	env		1227127	3					
ANR	1227408	Identifier	env		1227127	0					
ANR	1227409	IfStatement	if ( r != 0 )		1227127	3					
ANR	1227410	Condition	r != 0	3961:10:88528:88533	1227127	0	True				
ANR	1227411	EqualityExpression	r != 0		1227127	0		!=			
ANR	1227412	Identifier	r		1227127	0					
ANR	1227413	PrimaryExpression	0		1227127	1					
ANR	1227414	ReturnStatement	return r ;	3961:18:88536:88544	1227127	1	True				
ANR	1227415	Identifier	r		1227127	0					
ANR	1227416	ExpressionStatement	PINC_S	3963:6:88553:88559	1227127	4	True				
ANR	1227417	Identifier	PINC_S		1227127	0					
ANR	1227418	ExpressionStatement	PINC_S	3963:14:88561:88567	1227127	5	True				
ANR	1227419	Identifier	PINC_S		1227127	0					
ANR	1227420	ExpressionStatement	* src = p	3964:6:88575:88583	1227127	6	True				
ANR	1227421	AssignmentExpression	* src = p		1227127	0		=			
ANR	1227422	UnaryOperationExpression	* src		1227127	0					
ANR	1227423	UnaryOperator	*		1227127	0					
ANR	1227424	Identifier	src		1227127	1					
ANR	1227425	Identifier	p		1227127	1					
ANR	1227426	ReturnStatement	return 0 ;	3965:6:88591:88599	1227127	7	True				
ANR	1227427	PrimaryExpression	0		1227127	0					
ANR	1227428	Label	not_posix_bracket :	3969:1:88613:88630	1227127	16	True				
ANR	1227429	Identifier	not_posix_bracket		1227127	0					
ANR	1227430	ExpressionStatement	c = 0	3970:2:88634:88639	1227127	17	True				
ANR	1227431	AssignmentExpression	c = 0		1227127	0		=			
ANR	1227432	Identifier	c		1227127	0					
ANR	1227433	PrimaryExpression	0		1227127	1					
ANR	1227434	ExpressionStatement	i = 0	3971:2:88643:88648	1227127	18	True				
ANR	1227435	AssignmentExpression	i = 0		1227127	0		=			
ANR	1227436	Identifier	i		1227127	0					
ANR	1227437	PrimaryExpression	0		1227127	1					
ANR	1227438	WhileStatement	while ( ! PEND && ( ( c = PPEEK ) != ':' ) && c != ']' )		1227127	19					
ANR	1227439	Condition	! PEND && ( ( c = PPEEK ) != ':' ) && c != ']'	3972:9:88659:88699	1227127	0	True				
ANR	1227440	AndExpression	! PEND && ( ( c = PPEEK ) != ':' ) && c != ']'		1227127	0		&&			
ANR	1227441	UnaryOperationExpression	! PEND		1227127	0					
ANR	1227442	UnaryOperator	!		1227127	0					
ANR	1227443	Identifier	PEND		1227127	1					
ANR	1227444	AndExpression	( ( c = PPEEK ) != ':' ) && c != ']'		1227127	1		&&			
ANR	1227445	EqualityExpression	( c = PPEEK ) != ':'		1227127	0		!=			
ANR	1227446	AssignmentExpression	c = PPEEK		1227127	0		=			
ANR	1227447	Identifier	c		1227127	0					
ANR	1227448	Identifier	PPEEK		1227127	1					
ANR	1227449	PrimaryExpression	':'		1227127	1					
ANR	1227450	EqualityExpression	c != ']'		1227127	1		!=			
ANR	1227451	Identifier	c		1227127	0					
ANR	1227452	PrimaryExpression	']'		1227127	1					
ANR	1227453	CompoundStatement		57:52:1726:1726	1227127	1					
ANR	1227454	ExpressionStatement	PINC_S	3973:4:88708:88714	1227127	0	True				
ANR	1227455	Identifier	PINC_S		1227127	0					
ANR	1227456	IfStatement	if ( ++ i > POSIX_BRACKET_CHECK_LIMIT_LENGTH )		1227127	1					
ANR	1227457	Condition	++ i > POSIX_BRACKET_CHECK_LIMIT_LENGTH	3974:8:88724:88761	1227127	0	True				
ANR	1227458	RelationalExpression	++ i > POSIX_BRACKET_CHECK_LIMIT_LENGTH		1227127	0		>			
ANR	1227459	UnaryExpression	++ i		1227127	0					
ANR	1227460	IncDec	++		1227127	0					
ANR	1227461	Identifier	i		1227127	1					
ANR	1227462	Identifier	POSIX_BRACKET_CHECK_LIMIT_LENGTH		1227127	1					
ANR	1227463	BreakStatement	break ;	3974:48:88764:88769	1227127	1	True				
ANR	1227464	IfStatement	if ( c == ':' && ! PEND )		1227127	20					
ANR	1227465	Condition	c == ':' && ! PEND	3976:6:88781:88798	1227127	0	True				
ANR	1227466	AndExpression	c == ':' && ! PEND		1227127	0		&&			
ANR	1227467	EqualityExpression	c == ':'		1227127	0		==			
ANR	1227468	Identifier	c		1227127	0					
ANR	1227469	PrimaryExpression	':'		1227127	1					
ANR	1227470	UnaryOperationExpression	! PEND		1227127	1					
ANR	1227471	UnaryOperator	!		1227127	0					
ANR	1227472	Identifier	PEND		1227127	1					
ANR	1227473	CompoundStatement		61:26:1825:1825	1227127	1					
ANR	1227474	ExpressionStatement	PINC_S	3977:4:88807:88813	1227127	0	True				
ANR	1227475	Identifier	PINC_S		1227127	0					
ANR	1227476	IfStatement	if ( ! PEND )		1227127	1					
ANR	1227477	Condition	! PEND	3978:8:88823:88828	1227127	0	True				
ANR	1227478	UnaryOperationExpression	! PEND		1227127	0					
ANR	1227479	UnaryOperator	!		1227127	0					
ANR	1227480	Identifier	PEND		1227127	1					
ANR	1227481	CompoundStatement		63:16:1855:1855	1227127	1					
ANR	1227482	ExpressionStatement	PFETCH_S ( c )	3979:6:88839:88850	1227127	0	True				
ANR	1227483	CallExpression	PFETCH_S ( c )		1227127	0					
ANR	1227484	Callee	PFETCH_S		1227127	0					
ANR	1227485	Identifier	PFETCH_S		1227127	0					
ANR	1227486	ArgumentList	c		1227127	1					
ANR	1227487	Argument	c		1227127	0					
ANR	1227488	Identifier	c		1227127	0					
ANR	1227489	IfStatement	if ( c == ']' )		1227127	1					
ANR	1227490	Condition	c == ']'	3980:10:88862:88869	1227127	0	True				
ANR	1227491	EqualityExpression	c == ']'		1227127	0		==			
ANR	1227492	Identifier	c		1227127	0					
ANR	1227493	PrimaryExpression	']'		1227127	1					
ANR	1227494	ReturnStatement	return ONIGERR_INVALID_POSIX_BRACKET_TYPE ;	3981:8:88880:88921	1227127	1	True				
ANR	1227495	Identifier	ONIGERR_INVALID_POSIX_BRACKET_TYPE		1227127	0					
ANR	1227496	ReturnStatement	return 1 ;	3985:2:88936:88944	1227127	21	True				
ANR	1227497	PrimaryExpression	1		1227127	0					
ANR	1227498	ReturnType	static int		1227127	1					
ANR	1227499	Identifier	parse_posix_bracket		1227127	2					
ANR	1227500	ParameterList	"CClassNode * cc , UChar * * src , UChar * end , ScanEnv * env"		1227127	3					
ANR	1227501	Parameter	CClassNode * cc	3915:20:86920:86933	1227127	0	True				
ANR	1227502	ParameterType	CClassNode *		1227127	0					
ANR	1227503	Identifier	cc		1227127	1					
ANR	1227504	Parameter	UChar * * src	3915:36:86936:86946	1227127	1	True				
ANR	1227505	ParameterType	UChar * *		1227127	0					
ANR	1227506	Identifier	src		1227127	1					
ANR	1227507	Parameter	UChar * end	3915:49:86949:86958	1227127	2	True				
ANR	1227508	ParameterType	UChar *		1227127	0					
ANR	1227509	Identifier	end		1227127	1					
ANR	1227510	Parameter	ScanEnv * env	3915:61:86961:86972	1227127	3	True				
ANR	1227511	ParameterType	ScanEnv *		1227127	0					
ANR	1227512	Identifier	env		1227127	1					
ANR	1227513	CFGEntryNode	ENTRY		1227127		True				
ANR	1227514	CFGExitNode	EXIT		1227127		True				
ANR	1227515	Symbol	PPEEK_IS		1227127						
ANR	1227516	Symbol	ONIGENC_CTYPE_ALPHA		1227127						
ANR	1227517	Symbol	IS_NOT_NULL		1227127						
ANR	1227518	Symbol	ONIGENC_CTYPE_PUNCT		1227127						
ANR	1227519	Symbol	ONIGENC_CTYPE_PRINT		1227127						
ANR	1227520	Symbol	onigenc_with_ascii_strncmp		1227127						
ANR	1227521	Symbol	ONIGENC_CTYPE_LOWER		1227127						
ANR	1227522	Symbol	env -> enc		1227127						
ANR	1227523	Symbol	pb -> ctype		1227127						
ANR	1227524	Symbol	* src		1227127						
ANR	1227525	Symbol	PEND		1227127						
ANR	1227526	Symbol	not		1227127						
ANR	1227527	Symbol	ONIGENC_CTYPE_SPACE		1227127						
ANR	1227528	Symbol	onigenc_strlen		1227127						
ANR	1227529	Symbol	ONIGENC_CTYPE_ASCII		1227127						
ANR	1227530	Symbol	onigenc_step		1227127						
ANR	1227531	Symbol	pb -> name		1227127						
ANR	1227532	Symbol	add_ctype_to_cc		1227127						
ANR	1227533	Symbol	end		1227127						
ANR	1227534	Symbol	enc		1227127						
ANR	1227535	Symbol	ONIGENC_CTYPE_XDIGIT		1227127						
ANR	1227536	Symbol	cc		1227127						
ANR	1227537	Symbol	PBS		1227127						
ANR	1227538	Symbol	NULL		1227127						
ANR	1227539	Symbol	c		1227127						
ANR	1227540	Symbol	src		1227127						
ANR	1227541	Symbol	ONIGENC_CTYPE_GRAPH		1227127						
ANR	1227542	Symbol	PPEEK		1227127						
ANR	1227543	Symbol	ONIGENC_CTYPE_DIGIT		1227127						
ANR	1227544	Symbol	* env		1227127						
ANR	1227545	Symbol	i		1227127						
ANR	1227546	Symbol	ONIGENC_CTYPE_UPPER		1227127						
ANR	1227547	Symbol	ONIGENC_CTYPE_CNTRL		1227127						
ANR	1227548	Symbol	env		1227127						
ANR	1227549	Symbol	ONIGENC_CTYPE_ALNUM		1227127						
ANR	1227550	Symbol	p		1227127						
ANR	1227551	Symbol	POSIX_BRACKET_NAME_MIN_LEN		1227127						
ANR	1227552	Symbol	pb		1227127						
ANR	1227553	Symbol	r		1227127						
ANR	1227554	Symbol	ONIGENC_CTYPE_BLANK		1227127						
ANR	1227555	Symbol	* pb		1227127						
ANR	1227556	Symbol	pb -> len		1227127						
ANR	1227557	Symbol	POSIX_BRACKET_CHECK_LIMIT_LENGTH		1227127						
ANR	1227558	Symbol	ONIGENC_CTYPE_WORD		1227127						
ANR	1227559	Symbol	ONIGERR_INVALID_POSIX_BRACKET_TYPE		1227127						
ANR	1227560	Function	fetch_char_property_to_ctype	3988:0:88995:89589							
ANR	1227561	FunctionDef	"fetch_char_property_to_ctype (UChar * * src , UChar * end , ScanEnv * env)"		1227560	0					
ANR	1227562	CompoundStatement		3990:0:89074:89589	1227560	0					
ANR	1227563	IdentifierDeclStatement	int r ;	3991:2:89078:89083	1227560	0	True				
ANR	1227564	IdentifierDecl	r		1227560	0					
ANR	1227565	IdentifierDeclType	int		1227560	0					
ANR	1227566	Identifier	r		1227560	1					
ANR	1227567	IdentifierDeclStatement	OnigCodePoint c ;	3992:2:89087:89102	1227560	1	True				
ANR	1227568	IdentifierDecl	c		1227560	0					
ANR	1227569	IdentifierDeclType	OnigCodePoint		1227560	0					
ANR	1227570	Identifier	c		1227560	1					
ANR	1227571	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	3993:2:89106:89133	1227560	2	True				
ANR	1227572	IdentifierDecl	enc = env -> enc		1227560	0					
ANR	1227573	IdentifierDeclType	OnigEncoding		1227560	0					
ANR	1227574	Identifier	enc		1227560	1					
ANR	1227575	AssignmentExpression	enc = env -> enc		1227560	2		=			
ANR	1227576	Identifier	enc		1227560	0					
ANR	1227577	PtrMemberAccess	env -> enc		1227560	1					
ANR	1227578	Identifier	env		1227560	0					
ANR	1227579	Identifier	enc		1227560	1					
ANR	1227580	IdentifierDeclStatement	"UChar * prev , * start , * p = * src ;"	3994:2:89137:89167	1227560	3	True				
ANR	1227581	IdentifierDecl	* prev		1227560	0					
ANR	1227582	IdentifierDeclType	UChar *		1227560	0					
ANR	1227583	Identifier	prev		1227560	1					
ANR	1227584	IdentifierDecl	* start		1227560	1					
ANR	1227585	IdentifierDeclType	UChar *		1227560	0					
ANR	1227586	Identifier	start		1227560	1					
ANR	1227587	IdentifierDecl	* p = * src		1227560	2					
ANR	1227588	IdentifierDeclType	UChar *		1227560	0					
ANR	1227589	Identifier	p		1227560	1					
ANR	1227590	AssignmentExpression	* p = * src		1227560	2		=			
ANR	1227591	Identifier	p		1227560	0					
ANR	1227592	UnaryOperationExpression	* src		1227560	1					
ANR	1227593	UnaryOperator	*		1227560	0					
ANR	1227594	Identifier	src		1227560	1					
ANR	1227595	ExpressionStatement	r = 0	3996:2:89172:89177	1227560	4	True				
ANR	1227596	AssignmentExpression	r = 0		1227560	0		=			
ANR	1227597	Identifier	r		1227560	0					
ANR	1227598	PrimaryExpression	0		1227560	1					
ANR	1227599	ExpressionStatement	start = prev = p	3997:2:89181:89197	1227560	5	True				
ANR	1227600	AssignmentExpression	start = prev = p		1227560	0		=			
ANR	1227601	Identifier	start		1227560	0					
ANR	1227602	AssignmentExpression	prev = p		1227560	1		=			
ANR	1227603	Identifier	prev		1227560	0					
ANR	1227604	Identifier	p		1227560	1					
ANR	1227605	WhileStatement	while ( ! PEND )		1227560	6					
ANR	1227606	Condition	! PEND	3999:9:89209:89213	1227560	0	True				
ANR	1227607	UnaryOperationExpression	! PEND		1227560	0					
ANR	1227608	UnaryOperator	!		1227560	0					
ANR	1227609	Identifier	PEND		1227560	1					
ANR	1227610	CompoundStatement		10:16:141:141	1227560	1					
ANR	1227611	ExpressionStatement	prev = p	4000:4:89222:89230	1227560	0	True				
ANR	1227612	AssignmentExpression	prev = p		1227560	0		=			
ANR	1227613	Identifier	prev		1227560	0					
ANR	1227614	Identifier	p		1227560	1					
ANR	1227615	ExpressionStatement	PFETCH_S ( c )	4001:4:89236:89247	1227560	1	True				
ANR	1227616	CallExpression	PFETCH_S ( c )		1227560	0					
ANR	1227617	Callee	PFETCH_S		1227560	0					
ANR	1227618	Identifier	PFETCH_S		1227560	0					
ANR	1227619	ArgumentList	c		1227560	1					
ANR	1227620	Argument	c		1227560	0					
ANR	1227621	Identifier	c		1227560	0					
ANR	1227622	IfStatement	if ( c == '}' )		1227560	2					
ANR	1227623	Condition	c == '}'	4002:8:89257:89264	1227560	0	True				
ANR	1227624	EqualityExpression	c == '}'		1227560	0		==			
ANR	1227625	Identifier	c		1227560	0					
ANR	1227626	PrimaryExpression	'}'		1227560	1					
ANR	1227627	CompoundStatement		13:18:192:192	1227560	1					
ANR	1227628	ExpressionStatement	"r = ONIGENC_PROPERTY_NAME_TO_CTYPE ( enc , start , prev )"	4003:6:89275:89327	1227560	0	True				
ANR	1227629	AssignmentExpression	"r = ONIGENC_PROPERTY_NAME_TO_CTYPE ( enc , start , prev )"		1227560	0		=			
ANR	1227630	Identifier	r		1227560	0					
ANR	1227631	CallExpression	"ONIGENC_PROPERTY_NAME_TO_CTYPE ( enc , start , prev )"		1227560	1					
ANR	1227632	Callee	ONIGENC_PROPERTY_NAME_TO_CTYPE		1227560	0					
ANR	1227633	Identifier	ONIGENC_PROPERTY_NAME_TO_CTYPE		1227560	0					
ANR	1227634	ArgumentList	enc		1227560	1					
ANR	1227635	Argument	enc		1227560	0					
ANR	1227636	Identifier	enc		1227560	0					
ANR	1227637	Argument	start		1227560	1					
ANR	1227638	Identifier	start		1227560	0					
ANR	1227639	Argument	prev		1227560	2					
ANR	1227640	Identifier	prev		1227560	0					
ANR	1227641	IfStatement	if ( r < 0 )		1227560	1					
ANR	1227642	Condition	r < 0	4004:10:89339:89343	1227560	0	True				
ANR	1227643	RelationalExpression	r < 0		1227560	0		<			
ANR	1227644	Identifier	r		1227560	0					
ANR	1227645	PrimaryExpression	0		1227560	1					
ANR	1227646	BreakStatement	break ;	4004:17:89346:89351	1227560	1	True				
ANR	1227647	ExpressionStatement	* src = p	4006:6:89360:89368	1227560	2	True				
ANR	1227648	AssignmentExpression	* src = p		1227560	0		=			
ANR	1227649	UnaryOperationExpression	* src		1227560	0					
ANR	1227650	UnaryOperator	*		1227560	0					
ANR	1227651	Identifier	src		1227560	1					
ANR	1227652	Identifier	p		1227560	1					
ANR	1227653	ReturnStatement	return r ;	4007:6:89376:89384	1227560	3	True				
ANR	1227654	Identifier	r		1227560	0					
ANR	1227655	ElseStatement	else		1227560	0					
ANR	1227656	IfStatement	if ( c == '(' || c == ')' || c == '{' || c == '|' )		1227560	0					
ANR	1227657	Condition	c == '(' || c == ')' || c == '{' || c == '|'	4009:13:89405:89448	1227560	0	True				
ANR	1227658	OrExpression	c == '(' || c == ')' || c == '{' || c == '|'		1227560	0		||			
ANR	1227659	EqualityExpression	c == '('		1227560	0		==			
ANR	1227660	Identifier	c		1227560	0					
ANR	1227661	PrimaryExpression	'('		1227560	1					
ANR	1227662	OrExpression	c == ')' || c == '{' || c == '|'		1227560	1		||			
ANR	1227663	EqualityExpression	c == ')'		1227560	0		==			
ANR	1227664	Identifier	c		1227560	0					
ANR	1227665	PrimaryExpression	')'		1227560	1					
ANR	1227666	OrExpression	c == '{' || c == '|'		1227560	1		||			
ANR	1227667	EqualityExpression	c == '{'		1227560	0		==			
ANR	1227668	Identifier	c		1227560	0					
ANR	1227669	PrimaryExpression	'{'		1227560	1					
ANR	1227670	EqualityExpression	c == '|'		1227560	1		==			
ANR	1227671	Identifier	c		1227560	0					
ANR	1227672	PrimaryExpression	'|'		1227560	1					
ANR	1227673	CompoundStatement		20:59:376:376	1227560	1					
ANR	1227674	ExpressionStatement	r = ONIGERR_INVALID_CHAR_PROPERTY_NAME	4010:6:89459:89497	1227560	0	True				
ANR	1227675	AssignmentExpression	r = ONIGERR_INVALID_CHAR_PROPERTY_NAME		1227560	0		=			
ANR	1227676	Identifier	r		1227560	0					
ANR	1227677	Identifier	ONIGERR_INVALID_CHAR_PROPERTY_NAME		1227560	1					
ANR	1227678	BreakStatement	break ;	4011:6:89505:89510	1227560	1	True				
ANR	1227679	ExpressionStatement	"onig_scan_env_set_error_string ( env , r , * src , prev )"	4015:2:89525:89575	1227560	7	True				
ANR	1227680	CallExpression	"onig_scan_env_set_error_string ( env , r , * src , prev )"		1227560	0					
ANR	1227681	Callee	onig_scan_env_set_error_string		1227560	0					
ANR	1227682	Identifier	onig_scan_env_set_error_string		1227560	0					
ANR	1227683	ArgumentList	env		1227560	1					
ANR	1227684	Argument	env		1227560	0					
ANR	1227685	Identifier	env		1227560	0					
ANR	1227686	Argument	r		1227560	1					
ANR	1227687	Identifier	r		1227560	0					
ANR	1227688	Argument	* src		1227560	2					
ANR	1227689	UnaryOperationExpression	* src		1227560	0					
ANR	1227690	UnaryOperator	*		1227560	0					
ANR	1227691	Identifier	src		1227560	1					
ANR	1227692	Argument	prev		1227560	3					
ANR	1227693	Identifier	prev		1227560	0					
ANR	1227694	ReturnStatement	return r ;	4016:2:89579:89587	1227560	8	True				
ANR	1227695	Identifier	r		1227560	0					
ANR	1227696	ReturnType	static int		1227560	1					
ANR	1227697	Identifier	fetch_char_property_to_ctype		1227560	2					
ANR	1227698	ParameterList	"UChar * * src , UChar * end , ScanEnv * env"		1227560	3					
ANR	1227699	Parameter	UChar * * src	3989:29:89035:89045	1227560	0	True				
ANR	1227700	ParameterType	UChar * *		1227560	0					
ANR	1227701	Identifier	src		1227560	1					
ANR	1227702	Parameter	UChar * end	3989:42:89048:89057	1227560	1	True				
ANR	1227703	ParameterType	UChar *		1227560	0					
ANR	1227704	Identifier	end		1227560	1					
ANR	1227705	Parameter	ScanEnv * env	3989:54:89060:89071	1227560	2	True				
ANR	1227706	ParameterType	ScanEnv *		1227560	0					
ANR	1227707	Identifier	env		1227560	1					
ANR	1227708	CFGEntryNode	ENTRY		1227560		True				
ANR	1227709	CFGExitNode	EXIT		1227560		True				
ANR	1227710	Symbol	ONIGERR_INVALID_CHAR_PROPERTY_NAME		1227560						
ANR	1227711	Symbol	c		1227560						
ANR	1227712	Symbol	src		1227560						
ANR	1227713	Symbol	prev		1227560						
ANR	1227714	Symbol	* env		1227560						
ANR	1227715	Symbol	start		1227560						
ANR	1227716	Symbol	env -> enc		1227560						
ANR	1227717	Symbol	env		1227560						
ANR	1227718	Symbol	* src		1227560						
ANR	1227719	Symbol	PEND		1227560						
ANR	1227720	Symbol	p		1227560						
ANR	1227721	Symbol	r		1227560						
ANR	1227722	Symbol	ONIGENC_PROPERTY_NAME_TO_CTYPE		1227560						
ANR	1227723	Symbol	end		1227560						
ANR	1227724	Symbol	enc		1227560						
ANR	1227725	Function	parse_char_property	4019:0:89592:90028							
ANR	1227726	FunctionDef	"parse_char_property (Node * * np , OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env)"		1227725	0					
ANR	1227727	CompoundStatement		4022:0:89695:90028	1227725	0					
ANR	1227728	IdentifierDeclStatement	"int r , ctype ;"	4023:2:89699:89711	1227725	0	True				
ANR	1227729	IdentifierDecl	r		1227725	0					
ANR	1227730	IdentifierDeclType	int		1227725	0					
ANR	1227731	Identifier	r		1227725	1					
ANR	1227732	IdentifierDecl	ctype		1227725	1					
ANR	1227733	IdentifierDeclType	int		1227725	0					
ANR	1227734	Identifier	ctype		1227725	1					
ANR	1227735	IdentifierDeclStatement	CClassNode * cc ;	4024:2:89715:89729	1227725	1	True				
ANR	1227736	IdentifierDecl	* cc		1227725	0					
ANR	1227737	IdentifierDeclType	CClassNode *		1227725	0					
ANR	1227738	Identifier	cc		1227725	1					
ANR	1227739	ExpressionStatement	"ctype = fetch_char_property_to_ctype ( src , end , env )"	4026:2:89734:89785	1227725	2	True				
ANR	1227740	AssignmentExpression	"ctype = fetch_char_property_to_ctype ( src , end , env )"		1227725	0		=			
ANR	1227741	Identifier	ctype		1227725	0					
ANR	1227742	CallExpression	"fetch_char_property_to_ctype ( src , end , env )"		1227725	1					
ANR	1227743	Callee	fetch_char_property_to_ctype		1227725	0					
ANR	1227744	Identifier	fetch_char_property_to_ctype		1227725	0					
ANR	1227745	ArgumentList	src		1227725	1					
ANR	1227746	Argument	src		1227725	0					
ANR	1227747	Identifier	src		1227725	0					
ANR	1227748	Argument	end		1227725	1					
ANR	1227749	Identifier	end		1227725	0					
ANR	1227750	Argument	env		1227725	2					
ANR	1227751	Identifier	env		1227725	0					
ANR	1227752	IfStatement	if ( ctype < 0 )		1227725	3					
ANR	1227753	Condition	ctype < 0	4027:6:89793:89801	1227725	0	True				
ANR	1227754	RelationalExpression	ctype < 0		1227725	0		<			
ANR	1227755	Identifier	ctype		1227725	0					
ANR	1227756	PrimaryExpression	0		1227725	1					
ANR	1227757	ReturnStatement	return ctype ;	4027:17:89804:89816	1227725	1	True				
ANR	1227758	Identifier	ctype		1227725	0					
ANR	1227759	ExpressionStatement	* np = node_new_cclass ( )	4029:2:89821:89844	1227725	4	True				
ANR	1227760	AssignmentExpression	* np = node_new_cclass ( )		1227725	0		=			
ANR	1227761	UnaryOperationExpression	* np		1227725	0					
ANR	1227762	UnaryOperator	*		1227725	0					
ANR	1227763	Identifier	np		1227725	1					
ANR	1227764	CallExpression	node_new_cclass ( )		1227725	1					
ANR	1227765	Callee	node_new_cclass		1227725	0					
ANR	1227766	Identifier	node_new_cclass		1227725	0					
ANR	1227767	ArgumentList			1227725	1					
ANR	1227768	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4030:2:89848:89877	1227725	5	True				
ANR	1227769	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		1227725	0					
ANR	1227770	Callee	CHECK_NULL_RETURN_MEMERR		1227725	0					
ANR	1227771	Identifier	CHECK_NULL_RETURN_MEMERR		1227725	0					
ANR	1227772	ArgumentList	* np		1227725	1					
ANR	1227773	Argument	* np		1227725	0					
ANR	1227774	UnaryOperationExpression	* np		1227725	0					
ANR	1227775	UnaryOperator	*		1227725	0					
ANR	1227776	Identifier	np		1227725	1					
ANR	1227777	ExpressionStatement	cc = NCCLASS ( * np )	4031:2:89881:89898	1227725	6	True				
ANR	1227778	AssignmentExpression	cc = NCCLASS ( * np )		1227725	0		=			
ANR	1227779	Identifier	cc		1227725	0					
ANR	1227780	CallExpression	NCCLASS ( * np )		1227725	1					
ANR	1227781	Callee	NCCLASS		1227725	0					
ANR	1227782	Identifier	NCCLASS		1227725	0					
ANR	1227783	ArgumentList	* np		1227725	1					
ANR	1227784	Argument	* np		1227725	0					
ANR	1227785	UnaryOperationExpression	* np		1227725	0					
ANR	1227786	UnaryOperator	*		1227725	0					
ANR	1227787	Identifier	np		1227725	1					
ANR	1227788	ExpressionStatement	"r = add_ctype_to_cc ( cc , ctype , 0 , env )"	4032:2:89902:89940	1227725	7	True				
ANR	1227789	AssignmentExpression	"r = add_ctype_to_cc ( cc , ctype , 0 , env )"		1227725	0		=			
ANR	1227790	Identifier	r		1227725	0					
ANR	1227791	CallExpression	"add_ctype_to_cc ( cc , ctype , 0 , env )"		1227725	1					
ANR	1227792	Callee	add_ctype_to_cc		1227725	0					
ANR	1227793	Identifier	add_ctype_to_cc		1227725	0					
ANR	1227794	ArgumentList	cc		1227725	1					
ANR	1227795	Argument	cc		1227725	0					
ANR	1227796	Identifier	cc		1227725	0					
ANR	1227797	Argument	ctype		1227725	1					
ANR	1227798	Identifier	ctype		1227725	0					
ANR	1227799	Argument	0		1227725	2					
ANR	1227800	PrimaryExpression	0		1227725	0					
ANR	1227801	Argument	env		1227725	3					
ANR	1227802	Identifier	env		1227725	0					
ANR	1227803	IfStatement	if ( r != 0 )		1227725	8					
ANR	1227804	Condition	r != 0	4033:6:89948:89953	1227725	0	True				
ANR	1227805	EqualityExpression	r != 0		1227725	0		!=			
ANR	1227806	Identifier	r		1227725	0					
ANR	1227807	PrimaryExpression	0		1227725	1					
ANR	1227808	ReturnStatement	return r ;	4033:14:89956:89964	1227725	1	True				
ANR	1227809	Identifier	r		1227725	0					
ANR	1227810	IfStatement	if ( tok -> u . prop . not != 0 )		1227725	9					
ANR	1227811	Condition	tok -> u . prop . not != 0	4034:6:89972:89991	1227725	0	True				
ANR	1227812	EqualityExpression	tok -> u . prop . not != 0		1227725	0		!=			
ANR	1227813	MemberAccess	tok -> u . prop . not		1227725	0					
ANR	1227814	MemberAccess	tok -> u . prop		1227725	0					
ANR	1227815	PtrMemberAccess	tok -> u		1227725	0					
ANR	1227816	Identifier	tok		1227725	0					
ANR	1227817	Identifier	u		1227725	1					
ANR	1227818	Identifier	prop		1227725	1					
ANR	1227819	Identifier	not		1227725	1					
ANR	1227820	PrimaryExpression	0		1227725	1					
ANR	1227821	ExpressionStatement	NCCLASS_SET_NOT ( cc )	4034:28:89994:90013	1227725	1	True				
ANR	1227822	CallExpression	NCCLASS_SET_NOT ( cc )		1227725	0					
ANR	1227823	Callee	NCCLASS_SET_NOT		1227725	0					
ANR	1227824	Identifier	NCCLASS_SET_NOT		1227725	0					
ANR	1227825	ArgumentList	cc		1227725	1					
ANR	1227826	Argument	cc		1227725	0					
ANR	1227827	Identifier	cc		1227725	0					
ANR	1227828	ReturnStatement	return 0 ;	4036:2:90018:90026	1227725	10	True				
ANR	1227829	PrimaryExpression	0		1227725	0					
ANR	1227830	ReturnType	static int		1227725	1					
ANR	1227831	Identifier	parse_char_property		1227725	2					
ANR	1227832	ParameterList	"Node * * np , OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env"		1227725	3					
ANR	1227833	Parameter	Node * * np	4020:20:89623:89631	1227725	0	True				
ANR	1227834	ParameterType	Node * *		1227725	0					
ANR	1227835	Identifier	np		1227725	1					
ANR	1227836	Parameter	OnigToken * tok	4020:31:89634:89647	1227725	1	True				
ANR	1227837	ParameterType	OnigToken *		1227725	0					
ANR	1227838	Identifier	tok		1227725	1					
ANR	1227839	Parameter	UChar * * src	4020:47:89650:89660	1227725	2	True				
ANR	1227840	ParameterType	UChar * *		1227725	0					
ANR	1227841	Identifier	src		1227725	1					
ANR	1227842	Parameter	UChar * end	4020:60:89663:89672	1227725	3	True				
ANR	1227843	ParameterType	UChar *		1227725	0					
ANR	1227844	Identifier	end		1227725	1					
ANR	1227845	Parameter	ScanEnv * env	4021:6:89681:89692	1227725	4	True				
ANR	1227846	ParameterType	ScanEnv *		1227725	0					
ANR	1227847	Identifier	env		1227725	1					
ANR	1227848	CFGEntryNode	ENTRY		1227725		True				
ANR	1227849	CFGExitNode	EXIT		1227725		True				
ANR	1227850	Symbol	cc		1227725						
ANR	1227851	Symbol	np		1227725						
ANR	1227852	Symbol	src		1227725						
ANR	1227853	Symbol	node_new_cclass		1227725						
ANR	1227854	Symbol	* np		1227725						
ANR	1227855	Symbol	env		1227725						
ANR	1227856	Symbol	NCCLASS		1227725						
ANR	1227857	Symbol	tok		1227725						
ANR	1227858	Symbol	r		1227725						
ANR	1227859	Symbol	ctype		1227725						
ANR	1227860	Symbol	tok -> u . prop . not		1227725						
ANR	1227861	Symbol	add_ctype_to_cc		1227725						
ANR	1227862	Symbol	end		1227725						
ANR	1227863	Symbol	* tok		1227725						
ANR	1227864	Symbol	tok -> u		1227725						
ANR	1227865	Symbol	fetch_char_property_to_ctype		1227725						
ANR	1227866	Symbol	tok -> u . prop		1227725						
ANR	1227867	ClassDef	CCSTATE	4040:0:90032:90101							
ANR	1227868	ClassDef	CCVALTYPE	4047:0:90105:90162							
ANR	1227869	Function	next_state_class	4053:0:90166:90689							
ANR	1227870	FunctionDef	"next_state_class (CClassNode * cc , OnigCodePoint * vs , enum CCVALTYPE * type , enum CCSTATE * state , ScanEnv * env)"		1227869	0					
ANR	1227871	CompoundStatement		4056:0:90289:90689	1227869	0					
ANR	1227872	IdentifierDeclStatement	int r ;	4057:2:90293:90298	1227869	0	True				
ANR	1227873	IdentifierDecl	r		1227869	0					
ANR	1227874	IdentifierDeclType	int		1227869	0					
ANR	1227875	Identifier	r		1227869	1					
ANR	1227876	IfStatement	if ( * state == CCS_RANGE )		1227869	1					
ANR	1227877	Condition	* state == CCS_RANGE	4059:6:90307:90325	1227869	0	True				
ANR	1227878	EqualityExpression	* state == CCS_RANGE		1227869	0		==			
ANR	1227879	UnaryOperationExpression	* state		1227869	0					
ANR	1227880	UnaryOperator	*		1227869	0					
ANR	1227881	Identifier	state		1227869	1					
ANR	1227882	Identifier	CCS_RANGE		1227869	1					
ANR	1227883	ReturnStatement	return ONIGERR_CHAR_CLASS_VALUE_AT_END_OF_RANGE ;	4060:4:90332:90379	1227869	1	True				
ANR	1227884	Identifier	ONIGERR_CHAR_CLASS_VALUE_AT_END_OF_RANGE		1227869	0					
ANR	1227885	IfStatement	if ( * state == CCS_VALUE && * type != CCV_CLASS )		1227869	2					
ANR	1227886	Condition	* state == CCS_VALUE && * type != CCV_CLASS	4062:6:90388:90428	1227869	0	True				
ANR	1227887	AndExpression	* state == CCS_VALUE && * type != CCV_CLASS		1227869	0		&&			
ANR	1227888	EqualityExpression	* state == CCS_VALUE		1227869	0		==			
ANR	1227889	UnaryOperationExpression	* state		1227869	0					
ANR	1227890	UnaryOperator	*		1227869	0					
ANR	1227891	Identifier	state		1227869	1					
ANR	1227892	Identifier	CCS_VALUE		1227869	1					
ANR	1227893	EqualityExpression	* type != CCV_CLASS		1227869	1		!=			
ANR	1227894	UnaryOperationExpression	* type		1227869	0					
ANR	1227895	UnaryOperator	*		1227869	0					
ANR	1227896	Identifier	type		1227869	1					
ANR	1227897	Identifier	CCV_CLASS		1227869	1					
ANR	1227898	CompoundStatement		7:49:141:141	1227869	1					
ANR	1227899	IfStatement	if ( * type == CCV_SB )		1227869	0					
ANR	1227900	Condition	* type == CCV_SB	4063:8:90441:90455	1227869	0	True				
ANR	1227901	EqualityExpression	* type == CCV_SB		1227869	0		==			
ANR	1227902	UnaryOperationExpression	* type		1227869	0					
ANR	1227903	UnaryOperator	*		1227869	0					
ANR	1227904	Identifier	type		1227869	1					
ANR	1227905	Identifier	CCV_SB		1227869	1					
ANR	1227906	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , ( int ) ( * vs ) )"	4064:6:90464:90499	1227869	1	True				
ANR	1227907	CallExpression	"BITSET_SET_BIT ( cc -> bs , ( int ) ( * vs ) )"		1227869	0					
ANR	1227908	Callee	BITSET_SET_BIT		1227869	0					
ANR	1227909	Identifier	BITSET_SET_BIT		1227869	0					
ANR	1227910	ArgumentList	cc -> bs		1227869	1					
ANR	1227911	Argument	cc -> bs		1227869	0					
ANR	1227912	PtrMemberAccess	cc -> bs		1227869	0					
ANR	1227913	Identifier	cc		1227869	0					
ANR	1227914	Identifier	bs		1227869	1					
ANR	1227915	Argument	( int ) ( * vs )		1227869	1					
ANR	1227916	CastExpression	( int ) ( * vs )		1227869	0					
ANR	1227917	CastTarget	int		1227869	0					
ANR	1227918	UnaryOperationExpression	* vs		1227869	1					
ANR	1227919	UnaryOperator	*		1227869	0					
ANR	1227920	Identifier	vs		1227869	1					
ANR	1227921	ElseStatement	else		1227869	0					
ANR	1227922	IfStatement	if ( * type == CCV_CODE_POINT )		1227869	0					
ANR	1227923	Condition	* type == CCV_CODE_POINT	4065:13:90514:90536	1227869	0	True				
ANR	1227924	EqualityExpression	* type == CCV_CODE_POINT		1227869	0		==			
ANR	1227925	UnaryOperationExpression	* type		1227869	0					
ANR	1227926	UnaryOperator	*		1227869	0					
ANR	1227927	Identifier	type		1227869	1					
ANR	1227928	Identifier	CCV_CODE_POINT		1227869	1					
ANR	1227929	CompoundStatement		10:38:249:249	1227869	1					
ANR	1227930	ExpressionStatement	"r = add_code_range ( & ( cc -> mbuf ) , env , * vs , * vs )"	4066:6:90547:90593	1227869	0	True				
ANR	1227931	AssignmentExpression	"r = add_code_range ( & ( cc -> mbuf ) , env , * vs , * vs )"		1227869	0		=			
ANR	1227932	Identifier	r		1227869	0					
ANR	1227933	CallExpression	"add_code_range ( & ( cc -> mbuf ) , env , * vs , * vs )"		1227869	1					
ANR	1227934	Callee	add_code_range		1227869	0					
ANR	1227935	Identifier	add_code_range		1227869	0					
ANR	1227936	ArgumentList	& ( cc -> mbuf )		1227869	1					
ANR	1227937	Argument	& ( cc -> mbuf )		1227869	0					
ANR	1227938	UnaryOperationExpression	& ( cc -> mbuf )		1227869	0					
ANR	1227939	UnaryOperator	&		1227869	0					
ANR	1227940	PtrMemberAccess	cc -> mbuf		1227869	1					
ANR	1227941	Identifier	cc		1227869	0					
ANR	1227942	Identifier	mbuf		1227869	1					
ANR	1227943	Argument	env		1227869	1					
ANR	1227944	Identifier	env		1227869	0					
ANR	1227945	Argument	* vs		1227869	2					
ANR	1227946	UnaryOperationExpression	* vs		1227869	0					
ANR	1227947	UnaryOperator	*		1227869	0					
ANR	1227948	Identifier	vs		1227869	1					
ANR	1227949	Argument	* vs		1227869	3					
ANR	1227950	UnaryOperationExpression	* vs		1227869	0					
ANR	1227951	UnaryOperator	*		1227869	0					
ANR	1227952	Identifier	vs		1227869	1					
ANR	1227953	IfStatement	if ( r < 0 )		1227869	1					
ANR	1227954	Condition	r < 0	4067:10:90605:90609	1227869	0	True				
ANR	1227955	RelationalExpression	r < 0		1227869	0		<			
ANR	1227956	Identifier	r		1227869	0					
ANR	1227957	PrimaryExpression	0		1227869	1					
ANR	1227958	ReturnStatement	return r ;	4067:17:90612:90620	1227869	1	True				
ANR	1227959	Identifier	r		1227869	0					
ANR	1227960	ExpressionStatement	* state = CCS_VALUE	4071:2:90635:90653	1227869	3	True				
ANR	1227961	AssignmentExpression	* state = CCS_VALUE		1227869	0		=			
ANR	1227962	UnaryOperationExpression	* state		1227869	0					
ANR	1227963	UnaryOperator	*		1227869	0					
ANR	1227964	Identifier	state		1227869	1					
ANR	1227965	Identifier	CCS_VALUE		1227869	1					
ANR	1227966	ExpressionStatement	* type = CCV_CLASS	4072:2:90657:90675	1227869	4	True				
ANR	1227967	AssignmentExpression	* type = CCV_CLASS		1227869	0		=			
ANR	1227968	UnaryOperationExpression	* type		1227869	0					
ANR	1227969	UnaryOperator	*		1227869	0					
ANR	1227970	Identifier	type		1227869	1					
ANR	1227971	Identifier	CCV_CLASS		1227869	1					
ANR	1227972	ReturnStatement	return 0 ;	4073:2:90679:90687	1227869	5	True				
ANR	1227973	PrimaryExpression	0		1227869	0					
ANR	1227974	ReturnType	static int		1227869	1					
ANR	1227975	Identifier	next_state_class		1227869	2					
ANR	1227976	ParameterList	"CClassNode * cc , OnigCodePoint * vs , enum CCVALTYPE * type , enum CCSTATE * state , ScanEnv * env"		1227869	3					
ANR	1227977	Parameter	CClassNode * cc	4054:17:90194:90207	1227869	0	True				
ANR	1227978	ParameterType	CClassNode *		1227869	0					
ANR	1227979	Identifier	cc		1227869	1					
ANR	1227980	Parameter	OnigCodePoint * vs	4054:33:90210:90226	1227869	1	True				
ANR	1227981	ParameterType	OnigCodePoint *		1227869	0					
ANR	1227982	Identifier	vs		1227869	1					
ANR	1227983	Parameter	enum CCVALTYPE * type	4054:52:90229:90248	1227869	2	True				
ANR	1227984	ParameterType	enum CCVALTYPE *		1227869	0					
ANR	1227985	Identifier	type		1227869	1					
ANR	1227986	Parameter	enum CCSTATE * state	4055:3:90254:90272	1227869	3	True				
ANR	1227987	ParameterType	enum CCSTATE *		1227869	0					
ANR	1227988	Identifier	state		1227869	1					
ANR	1227989	Parameter	ScanEnv * env	4055:24:90275:90286	1227869	4	True				
ANR	1227990	ParameterType	ScanEnv *		1227869	0					
ANR	1227991	Identifier	env		1227869	1					
ANR	1227992	CFGEntryNode	ENTRY		1227869		True				
ANR	1227993	CFGExitNode	EXIT		1227869		True				
ANR	1227994	Symbol	cc		1227869						
ANR	1227995	Symbol	* vs		1227869						
ANR	1227996	Symbol	add_code_range		1227869						
ANR	1227997	Symbol	* cc		1227869						
ANR	1227998	Symbol	CCS_RANGE		1227869						
ANR	1227999	Symbol	type		1227869						
ANR	1228000	Symbol	env		1227869						
ANR	1228001	Symbol	ONIGERR_CHAR_CLASS_VALUE_AT_END_OF_RANGE		1227869						
ANR	1228002	Symbol	cc -> bs		1227869						
ANR	1228003	Symbol	* state		1227869						
ANR	1228004	Symbol	CCV_CLASS		1227869						
ANR	1228005	Symbol	r		1227869						
ANR	1228006	Symbol	* type		1227869						
ANR	1228007	Symbol	CCV_SB		1227869						
ANR	1228008	Symbol	CCS_VALUE		1227869						
ANR	1228009	Symbol	CCV_CODE_POINT		1227869						
ANR	1228010	Symbol	state		1227869						
ANR	1228011	Symbol	& cc -> mbuf		1227869						
ANR	1228012	Symbol	vs		1227869						
ANR	1228013	Function	next_state_val	4076:0:90692:92363							
ANR	1228014	FunctionDef	"next_state_val (CClassNode * cc , OnigCodePoint * vs , OnigCodePoint v , int * vs_israw , int v_israw , enum CCVALTYPE intype , enum CCVALTYPE * type , enum CCSTATE * state , ScanEnv * env)"		1228013	0					
ANR	1228015	CompoundStatement		4081:0:90902:92363	1228013	0					
ANR	1228016	IdentifierDeclStatement	int r ;	4082:2:90906:90911	1228013	0	True				
ANR	1228017	IdentifierDecl	r		1228013	0					
ANR	1228018	IdentifierDeclType	int		1228013	0					
ANR	1228019	Identifier	r		1228013	1					
ANR	1228020	SwitchStatement	switch ( * state )		1228013	1					
ANR	1228021	Condition	* state	4084:10:90924:90929	1228013	0	True				
ANR	1228022	UnaryOperationExpression	* state		1228013	0					
ANR	1228023	UnaryOperator	*		1228013	0					
ANR	1228024	Identifier	state		1228013	1					
ANR	1228025	CompoundStatement		4:18:29:29	1228013	1					
ANR	1228026	Label	case CCS_VALUE :	4085:2:90936:90950	1228013	0	True				
ANR	1228027	Identifier	CCS_VALUE		1228013	0					
ANR	1228028	IfStatement	if ( * type == CCV_SB )		1228013	1					
ANR	1228029	Condition	* type == CCV_SB	4086:8:90960:90974	1228013	0	True				
ANR	1228030	EqualityExpression	* type == CCV_SB		1228013	0		==			
ANR	1228031	UnaryOperationExpression	* type		1228013	0					
ANR	1228032	UnaryOperator	*		1228013	0					
ANR	1228033	Identifier	type		1228013	1					
ANR	1228034	Identifier	CCV_SB		1228013	1					
ANR	1228035	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , ( int ) ( * vs ) )"	4087:6:90983:91018	1228013	1	True				
ANR	1228036	CallExpression	"BITSET_SET_BIT ( cc -> bs , ( int ) ( * vs ) )"		1228013	0					
ANR	1228037	Callee	BITSET_SET_BIT		1228013	0					
ANR	1228038	Identifier	BITSET_SET_BIT		1228013	0					
ANR	1228039	ArgumentList	cc -> bs		1228013	1					
ANR	1228040	Argument	cc -> bs		1228013	0					
ANR	1228041	PtrMemberAccess	cc -> bs		1228013	0					
ANR	1228042	Identifier	cc		1228013	0					
ANR	1228043	Identifier	bs		1228013	1					
ANR	1228044	Argument	( int ) ( * vs )		1228013	1					
ANR	1228045	CastExpression	( int ) ( * vs )		1228013	0					
ANR	1228046	CastTarget	int		1228013	0					
ANR	1228047	UnaryOperationExpression	* vs		1228013	1					
ANR	1228048	UnaryOperator	*		1228013	0					
ANR	1228049	Identifier	vs		1228013	1					
ANR	1228050	ElseStatement	else		1228013	0					
ANR	1228051	IfStatement	if ( * type == CCV_CODE_POINT )		1228013	0					
ANR	1228052	Condition	* type == CCV_CODE_POINT	4088:13:91033:91055	1228013	0	True				
ANR	1228053	EqualityExpression	* type == CCV_CODE_POINT		1228013	0		==			
ANR	1228054	UnaryOperationExpression	* type		1228013	0					
ANR	1228055	UnaryOperator	*		1228013	0					
ANR	1228056	Identifier	type		1228013	1					
ANR	1228057	Identifier	CCV_CODE_POINT		1228013	1					
ANR	1228058	CompoundStatement		8:38:155:155	1228013	1					
ANR	1228059	ExpressionStatement	"r = add_code_range ( & ( cc -> mbuf ) , env , * vs , * vs )"	4089:6:91066:91112	1228013	0	True				
ANR	1228060	AssignmentExpression	"r = add_code_range ( & ( cc -> mbuf ) , env , * vs , * vs )"		1228013	0		=			
ANR	1228061	Identifier	r		1228013	0					
ANR	1228062	CallExpression	"add_code_range ( & ( cc -> mbuf ) , env , * vs , * vs )"		1228013	1					
ANR	1228063	Callee	add_code_range		1228013	0					
ANR	1228064	Identifier	add_code_range		1228013	0					
ANR	1228065	ArgumentList	& ( cc -> mbuf )		1228013	1					
ANR	1228066	Argument	& ( cc -> mbuf )		1228013	0					
ANR	1228067	UnaryOperationExpression	& ( cc -> mbuf )		1228013	0					
ANR	1228068	UnaryOperator	&		1228013	0					
ANR	1228069	PtrMemberAccess	cc -> mbuf		1228013	1					
ANR	1228070	Identifier	cc		1228013	0					
ANR	1228071	Identifier	mbuf		1228013	1					
ANR	1228072	Argument	env		1228013	1					
ANR	1228073	Identifier	env		1228013	0					
ANR	1228074	Argument	* vs		1228013	2					
ANR	1228075	UnaryOperationExpression	* vs		1228013	0					
ANR	1228076	UnaryOperator	*		1228013	0					
ANR	1228077	Identifier	vs		1228013	1					
ANR	1228078	Argument	* vs		1228013	3					
ANR	1228079	UnaryOperationExpression	* vs		1228013	0					
ANR	1228080	UnaryOperator	*		1228013	0					
ANR	1228081	Identifier	vs		1228013	1					
ANR	1228082	IfStatement	if ( r < 0 )		1228013	1					
ANR	1228083	Condition	r < 0	4090:10:91124:91128	1228013	0	True				
ANR	1228084	RelationalExpression	r < 0		1228013	0		<			
ANR	1228085	Identifier	r		1228013	0					
ANR	1228086	PrimaryExpression	0		1228013	1					
ANR	1228087	ReturnStatement	return r ;	4090:17:91131:91139	1228013	1	True				
ANR	1228088	Identifier	r		1228013	0					
ANR	1228089	BreakStatement	break ;	4092:4:91151:91156	1228013	2	True				
ANR	1228090	Label	case CCS_RANGE :	4094:2:91161:91175	1228013	3	True				
ANR	1228091	Identifier	CCS_RANGE		1228013	0					
ANR	1228092	IfStatement	if ( intype == * type )		1228013	4					
ANR	1228093	Condition	intype == * type	4095:8:91185:91199	1228013	0	True				
ANR	1228094	EqualityExpression	intype == * type		1228013	0		==			
ANR	1228095	Identifier	intype		1228013	0					
ANR	1228096	UnaryOperationExpression	* type		1228013	1					
ANR	1228097	UnaryOperator	*		1228013	0					
ANR	1228098	Identifier	type		1228013	1					
ANR	1228099	CompoundStatement		15:25:299:299	1228013	1					
ANR	1228100	IfStatement	if ( intype == CCV_SB )		1228013	0					
ANR	1228101	Condition	intype == CCV_SB	4096:10:91214:91229	1228013	0	True				
ANR	1228102	EqualityExpression	intype == CCV_SB		1228013	0		==			
ANR	1228103	Identifier	intype		1228013	0					
ANR	1228104	Identifier	CCV_SB		1228013	1					
ANR	1228105	CompoundStatement		16:28:329:329	1228013	1					
ANR	1228106	IfStatement	if ( * vs > 0xff || v > 0xff )		1228013	0					
ANR	1228107	Condition	* vs > 0xff || v > 0xff	4097:12:91246:91267	1228013	0	True				
ANR	1228108	OrExpression	* vs > 0xff || v > 0xff		1228013	0		||			
ANR	1228109	RelationalExpression	* vs > 0xff		1228013	0		>			
ANR	1228110	UnaryOperationExpression	* vs		1228013	0					
ANR	1228111	UnaryOperator	*		1228013	0					
ANR	1228112	Identifier	vs		1228013	1					
ANR	1228113	PrimaryExpression	0xff		1228013	1					
ANR	1228114	RelationalExpression	v > 0xff		1228013	1		>			
ANR	1228115	Identifier	v		1228013	0					
ANR	1228116	PrimaryExpression	0xff		1228013	1					
ANR	1228117	ReturnStatement	return ONIGERR_INVALID_CODE_POINT_VALUE ;	4098:10:91280:91319	1228013	1	True				
ANR	1228118	Identifier	ONIGERR_INVALID_CODE_POINT_VALUE		1228013	0					
ANR	1228119	IfStatement	if ( * vs > v )		1228013	1					
ANR	1228120	Condition	* vs > v	4100:5:91327:91333	1228013	0	True				
ANR	1228121	RelationalExpression	* vs > v		1228013	0		>			
ANR	1228122	UnaryOperationExpression	* vs		1228013	0					
ANR	1228123	UnaryOperator	*		1228013	0					
ANR	1228124	Identifier	vs		1228013	1					
ANR	1228125	Identifier	v		1228013	1					
ANR	1228126	CompoundStatement		20:14:433:433	1228013	1					
ANR	1228127	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC ) )"		1228013	0					
ANR	1228128	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC )"	4101:7:91345:91403	1228013	0	True				
ANR	1228129	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC )"		1228013	0					
ANR	1228130	Callee	IS_SYNTAX_BV		1228013	0					
ANR	1228131	Identifier	IS_SYNTAX_BV		1228013	0					
ANR	1228132	ArgumentList	env -> syntax		1228013	1					
ANR	1228133	Argument	env -> syntax		1228013	0					
ANR	1228134	PtrMemberAccess	env -> syntax		1228013	0					
ANR	1228135	Identifier	env		1228013	0					
ANR	1228136	Identifier	syntax		1228013	1					
ANR	1228137	Argument	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		1228013	1					
ANR	1228138	Identifier	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		1228013	0					
ANR	1228139	GotoStatement	goto ccs_range_end ;	4102:5:91411:91429	1228013	1	True				
ANR	1228140	Identifier	ccs_range_end		1228013	0					
ANR	1228141	ElseStatement	else		1228013	0					
ANR	1228142	ReturnStatement	return ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS ;	4104:5:91444:91484	1228013	0	True				
ANR	1228143	Identifier	ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS		1228013	0					
ANR	1228144	ExpressionStatement	"bitset_set_range ( cc -> bs , ( int ) * vs , ( int ) v )"	4106:1:91490:91534	1228013	2	True				
ANR	1228145	CallExpression	"bitset_set_range ( cc -> bs , ( int ) * vs , ( int ) v )"		1228013	0					
ANR	1228146	Callee	bitset_set_range		1228013	0					
ANR	1228147	Identifier	bitset_set_range		1228013	0					
ANR	1228148	ArgumentList	cc -> bs		1228013	1					
ANR	1228149	Argument	cc -> bs		1228013	0					
ANR	1228150	PtrMemberAccess	cc -> bs		1228013	0					
ANR	1228151	Identifier	cc		1228013	0					
ANR	1228152	Identifier	bs		1228013	1					
ANR	1228153	Argument	( int ) * vs		1228013	1					
ANR	1228154	CastExpression	( int ) * vs		1228013	0					
ANR	1228155	CastTarget	int		1228013	0					
ANR	1228156	UnaryOperationExpression	* vs		1228013	1					
ANR	1228157	UnaryOperator	*		1228013	0					
ANR	1228158	Identifier	vs		1228013	1					
ANR	1228159	Argument	( int ) v		1228013	2					
ANR	1228160	CastExpression	( int ) v		1228013	0					
ANR	1228161	CastTarget	int		1228013	0					
ANR	1228162	Identifier	v		1228013	1					
ANR	1228163	ElseStatement	else		1228013	0					
ANR	1228164	CompoundStatement		28:11:652:652	1228013	0					
ANR	1228165	ExpressionStatement	"r = add_code_range ( & ( cc -> mbuf ) , env , * vs , v )"	4109:1:91558:91602	1228013	0	True				
ANR	1228166	AssignmentExpression	"r = add_code_range ( & ( cc -> mbuf ) , env , * vs , v )"		1228013	0		=			
ANR	1228167	Identifier	r		1228013	0					
ANR	1228168	CallExpression	"add_code_range ( & ( cc -> mbuf ) , env , * vs , v )"		1228013	1					
ANR	1228169	Callee	add_code_range		1228013	0					
ANR	1228170	Identifier	add_code_range		1228013	0					
ANR	1228171	ArgumentList	& ( cc -> mbuf )		1228013	1					
ANR	1228172	Argument	& ( cc -> mbuf )		1228013	0					
ANR	1228173	UnaryOperationExpression	& ( cc -> mbuf )		1228013	0					
ANR	1228174	UnaryOperator	&		1228013	0					
ANR	1228175	PtrMemberAccess	cc -> mbuf		1228013	1					
ANR	1228176	Identifier	cc		1228013	0					
ANR	1228177	Identifier	mbuf		1228013	1					
ANR	1228178	Argument	env		1228013	1					
ANR	1228179	Identifier	env		1228013	0					
ANR	1228180	Argument	* vs		1228013	2					
ANR	1228181	UnaryOperationExpression	* vs		1228013	0					
ANR	1228182	UnaryOperator	*		1228013	0					
ANR	1228183	Identifier	vs		1228013	1					
ANR	1228184	Argument	v		1228013	3					
ANR	1228185	Identifier	v		1228013	0					
ANR	1228186	IfStatement	if ( r < 0 )		1228013	1					
ANR	1228187	Condition	r < 0	4110:5:91609:91613	1228013	0	True				
ANR	1228188	RelationalExpression	r < 0		1228013	0		<			
ANR	1228189	Identifier	r		1228013	0					
ANR	1228190	PrimaryExpression	0		1228013	1					
ANR	1228191	ReturnStatement	return r ;	4110:12:91616:91624	1228013	1	True				
ANR	1228192	Identifier	r		1228013	0					
ANR	1228193	ElseStatement	else		1228013	0					
ANR	1228194	CompoundStatement		33:9:746:746	1228013	0					
ANR	1228195	IfStatement	if ( intype == CCV_CODE_POINT && * type == CCV_SB )		1228013	0					
ANR	1228196	Condition	intype == CCV_CODE_POINT && * type == CCV_SB	4115:10:91667:91709	1228013	0	True				
ANR	1228197	AndExpression	intype == CCV_CODE_POINT && * type == CCV_SB		1228013	0		&&			
ANR	1228198	EqualityExpression	intype == CCV_CODE_POINT		1228013	0		==			
ANR	1228199	Identifier	intype		1228013	0					
ANR	1228200	Identifier	CCV_CODE_POINT		1228013	1					
ANR	1228201	EqualityExpression	* type == CCV_SB		1228013	1		==			
ANR	1228202	UnaryOperationExpression	* type		1228013	0					
ANR	1228203	UnaryOperator	*		1228013	0					
ANR	1228204	Identifier	type		1228013	1					
ANR	1228205	Identifier	CCV_SB		1228013	1					
ANR	1228206	CompoundStatement		35:55:809:809	1228013	1					
ANR	1228207	IfStatement	if ( * vs > v )		1228013	0					
ANR	1228208	Condition	* vs > v	4117:5:91726:91732	1228013	0	True				
ANR	1228209	RelationalExpression	* vs > v		1228013	0		>			
ANR	1228210	UnaryOperationExpression	* vs		1228013	0					
ANR	1228211	UnaryOperator	*		1228013	0					
ANR	1228212	Identifier	vs		1228013	1					
ANR	1228213	Identifier	v		1228013	1					
ANR	1228214	CompoundStatement		37:14:832:832	1228013	1					
ANR	1228215	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC ) )"		1228013	0					
ANR	1228216	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC )"	4118:7:91744:91802	1228013	0	True				
ANR	1228217	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC )"		1228013	0					
ANR	1228218	Callee	IS_SYNTAX_BV		1228013	0					
ANR	1228219	Identifier	IS_SYNTAX_BV		1228013	0					
ANR	1228220	ArgumentList	env -> syntax		1228013	1					
ANR	1228221	Argument	env -> syntax		1228013	0					
ANR	1228222	PtrMemberAccess	env -> syntax		1228013	0					
ANR	1228223	Identifier	env		1228013	0					
ANR	1228224	Identifier	syntax		1228013	1					
ANR	1228225	Argument	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		1228013	1					
ANR	1228226	Identifier	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		1228013	0					
ANR	1228227	GotoStatement	goto ccs_range_end ;	4119:5:91810:91828	1228013	1	True				
ANR	1228228	Identifier	ccs_range_end		1228013	0					
ANR	1228229	ElseStatement	else		1228013	0					
ANR	1228230	ReturnStatement	return ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS ;	4121:5:91843:91883	1228013	0	True				
ANR	1228231	Identifier	ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS		1228013	0					
ANR	1228232	ExpressionStatement	"bitset_set_range ( cc -> bs , ( int ) * vs , ( int ) ( v < 0xff ? v : 0xff ) )"	4123:1:91889:91953	1228013	1	True				
ANR	1228233	CallExpression	"bitset_set_range ( cc -> bs , ( int ) * vs , ( int ) ( v < 0xff ? v : 0xff ) )"		1228013	0					
ANR	1228234	Callee	bitset_set_range		1228013	0					
ANR	1228235	Identifier	bitset_set_range		1228013	0					
ANR	1228236	ArgumentList	cc -> bs		1228013	1					
ANR	1228237	Argument	cc -> bs		1228013	0					
ANR	1228238	PtrMemberAccess	cc -> bs		1228013	0					
ANR	1228239	Identifier	cc		1228013	0					
ANR	1228240	Identifier	bs		1228013	1					
ANR	1228241	Argument	( int ) * vs		1228013	1					
ANR	1228242	CastExpression	( int ) * vs		1228013	0					
ANR	1228243	CastTarget	int		1228013	0					
ANR	1228244	UnaryOperationExpression	* vs		1228013	1					
ANR	1228245	UnaryOperator	*		1228013	0					
ANR	1228246	Identifier	vs		1228013	1					
ANR	1228247	Argument	( int ) ( v < 0xff ? v : 0xff )		1228013	2					
ANR	1228248	CastExpression	( int ) ( v < 0xff ? v : 0xff )		1228013	0					
ANR	1228249	CastTarget	int		1228013	0					
ANR	1228250	ConditionalExpression	v < 0xff ? v : 0xff		1228013	1					
ANR	1228251	Condition	v < 0xff		1228013	0					
ANR	1228252	RelationalExpression	v < 0xff		1228013	0		<			
ANR	1228253	Identifier	v		1228013	0					
ANR	1228254	PrimaryExpression	0xff		1228013	1					
ANR	1228255	Identifier	v		1228013	1					
ANR	1228256	PrimaryExpression	0xff		1228013	2					
ANR	1228257	ExpressionStatement	"r = add_code_range ( & ( cc -> mbuf ) , env , ( OnigCodePoint ) * vs , v )"	4124:1:91956:92016	1228013	2	True				
ANR	1228258	AssignmentExpression	"r = add_code_range ( & ( cc -> mbuf ) , env , ( OnigCodePoint ) * vs , v )"		1228013	0		=			
ANR	1228259	Identifier	r		1228013	0					
ANR	1228260	CallExpression	"add_code_range ( & ( cc -> mbuf ) , env , ( OnigCodePoint ) * vs , v )"		1228013	1					
ANR	1228261	Callee	add_code_range		1228013	0					
ANR	1228262	Identifier	add_code_range		1228013	0					
ANR	1228263	ArgumentList	& ( cc -> mbuf )		1228013	1					
ANR	1228264	Argument	& ( cc -> mbuf )		1228013	0					
ANR	1228265	UnaryOperationExpression	& ( cc -> mbuf )		1228013	0					
ANR	1228266	UnaryOperator	&		1228013	0					
ANR	1228267	PtrMemberAccess	cc -> mbuf		1228013	1					
ANR	1228268	Identifier	cc		1228013	0					
ANR	1228269	Identifier	mbuf		1228013	1					
ANR	1228270	Argument	env		1228013	1					
ANR	1228271	Identifier	env		1228013	0					
ANR	1228272	Argument	( OnigCodePoint ) * vs		1228013	2					
ANR	1228273	CastExpression	( OnigCodePoint ) * vs		1228013	0					
ANR	1228274	CastTarget	OnigCodePoint		1228013	0					
ANR	1228275	UnaryOperationExpression	* vs		1228013	1					
ANR	1228276	UnaryOperator	*		1228013	0					
ANR	1228277	Identifier	vs		1228013	1					
ANR	1228278	Argument	v		1228013	3					
ANR	1228279	Identifier	v		1228013	0					
ANR	1228280	IfStatement	if ( r < 0 )		1228013	3					
ANR	1228281	Condition	r < 0	4125:5:92023:92027	1228013	0	True				
ANR	1228282	RelationalExpression	r < 0		1228013	0		<			
ANR	1228283	Identifier	r		1228013	0					
ANR	1228284	PrimaryExpression	0		1228013	1					
ANR	1228285	ReturnStatement	return r ;	4125:12:92030:92038	1228013	1	True				
ANR	1228286	Identifier	r		1228013	0					
ANR	1228287	ElseStatement	else		1228013	0					
ANR	1228288	ReturnStatement	return ONIGERR_MISMATCH_CODE_LENGTH_IN_CLASS_RANGE ;	4129:1:92066:92116	1228013	0	True				
ANR	1228289	Identifier	ONIGERR_MISMATCH_CODE_LENGTH_IN_CLASS_RANGE		1228013	0					
ANR	1228290	Label	ccs_range_end :	4132:2:92133:92146	1228013	5	True				
ANR	1228291	Identifier	ccs_range_end		1228013	0					
ANR	1228292	ExpressionStatement	* state = CCS_COMPLETE	4133:4:92152:92173	1228013	6	True				
ANR	1228293	AssignmentExpression	* state = CCS_COMPLETE		1228013	0		=			
ANR	1228294	UnaryOperationExpression	* state		1228013	0					
ANR	1228295	UnaryOperator	*		1228013	0					
ANR	1228296	Identifier	state		1228013	1					
ANR	1228297	Identifier	CCS_COMPLETE		1228013	1					
ANR	1228298	BreakStatement	break ;	4134:4:92179:92184	1228013	7	True				
ANR	1228299	Label	case CCS_COMPLETE :	4136:2:92189:92206	1228013	8	True				
ANR	1228300	Identifier	CCS_COMPLETE		1228013	0					
ANR	1228301	Label	case CCS_START :	4137:2:92210:92224	1228013	9	True				
ANR	1228302	Identifier	CCS_START		1228013	0					
ANR	1228303	ExpressionStatement	* state = CCS_VALUE	4138:4:92230:92248	1228013	10	True				
ANR	1228304	AssignmentExpression	* state = CCS_VALUE		1228013	0		=			
ANR	1228305	UnaryOperationExpression	* state		1228013	0					
ANR	1228306	UnaryOperator	*		1228013	0					
ANR	1228307	Identifier	state		1228013	1					
ANR	1228308	Identifier	CCS_VALUE		1228013	1					
ANR	1228309	BreakStatement	break ;	4139:4:92254:92259	1228013	11	True				
ANR	1228310	Label	default :	4141:2:92264:92271	1228013	12	True				
ANR	1228311	Identifier	default		1228013	0					
ANR	1228312	BreakStatement	break ;	4142:4:92277:92282	1228013	13	True				
ANR	1228313	ExpressionStatement	* vs_israw = v_israw	4145:2:92291:92310	1228013	2	True				
ANR	1228314	AssignmentExpression	* vs_israw = v_israw		1228013	0		=			
ANR	1228315	UnaryOperationExpression	* vs_israw		1228013	0					
ANR	1228316	UnaryOperator	*		1228013	0					
ANR	1228317	Identifier	vs_israw		1228013	1					
ANR	1228318	Identifier	v_israw		1228013	1					
ANR	1228319	ExpressionStatement	* vs = v	4146:2:92314:92327	1228013	3	True				
ANR	1228320	AssignmentExpression	* vs = v		1228013	0		=			
ANR	1228321	UnaryOperationExpression	* vs		1228013	0					
ANR	1228322	UnaryOperator	*		1228013	0					
ANR	1228323	Identifier	vs		1228013	1					
ANR	1228324	Identifier	v		1228013	1					
ANR	1228325	ExpressionStatement	* type = intype	4147:2:92331:92349	1228013	4	True				
ANR	1228326	AssignmentExpression	* type = intype		1228013	0		=			
ANR	1228327	UnaryOperationExpression	* type		1228013	0					
ANR	1228328	UnaryOperator	*		1228013	0					
ANR	1228329	Identifier	type		1228013	1					
ANR	1228330	Identifier	intype		1228013	1					
ANR	1228331	ReturnStatement	return 0 ;	4148:2:92353:92361	1228013	5	True				
ANR	1228332	PrimaryExpression	0		1228013	0					
ANR	1228333	ReturnType	static int		1228013	1					
ANR	1228334	Identifier	next_state_val		1228013	2					
ANR	1228335	ParameterList	"CClassNode * cc , OnigCodePoint * vs , OnigCodePoint v , int * vs_israw , int v_israw , enum CCVALTYPE intype , enum CCVALTYPE * type , enum CCSTATE * state , ScanEnv * env"		1228013	3					
ANR	1228336	Parameter	CClassNode * cc	4077:15:90718:90731	1228013	0	True				
ANR	1228337	ParameterType	CClassNode *		1228013	0					
ANR	1228338	Identifier	cc		1228013	1					
ANR	1228339	Parameter	OnigCodePoint * vs	4077:31:90734:90750	1228013	1	True				
ANR	1228340	ParameterType	OnigCodePoint *		1228013	0					
ANR	1228341	Identifier	vs		1228013	1					
ANR	1228342	Parameter	OnigCodePoint v	4077:50:90753:90767	1228013	2	True				
ANR	1228343	ParameterType	OnigCodePoint		1228013	0					
ANR	1228344	Identifier	v		1228013	1					
ANR	1228345	Parameter	int * vs_israw	4078:8:90778:90790	1228013	3	True				
ANR	1228346	ParameterType	int *		1228013	0					
ANR	1228347	Identifier	vs_israw		1228013	1					
ANR	1228348	Parameter	int v_israw	4078:23:90793:90803	1228013	4	True				
ANR	1228349	ParameterType	int		1228013	0					
ANR	1228350	Identifier	v_israw		1228013	1					
ANR	1228351	Parameter	enum CCVALTYPE intype	4079:8:90814:90834	1228013	5	True				
ANR	1228352	ParameterType	enum CCVALTYPE		1228013	0					
ANR	1228353	Identifier	intype		1228013	1					
ANR	1228354	Parameter	enum CCVALTYPE * type	4079:31:90837:90856	1228013	6	True				
ANR	1228355	ParameterType	enum CCVALTYPE *		1228013	0					
ANR	1228356	Identifier	type		1228013	1					
ANR	1228357	Parameter	enum CCSTATE * state	4080:8:90867:90885	1228013	7	True				
ANR	1228358	ParameterType	enum CCSTATE *		1228013	0					
ANR	1228359	Identifier	state		1228013	1					
ANR	1228360	Parameter	ScanEnv * env	4080:29:90888:90899	1228013	8	True				
ANR	1228361	ParameterType	ScanEnv *		1228013	0					
ANR	1228362	Identifier	env		1228013	1					
ANR	1228363	CFGEntryNode	ENTRY		1228013		True				
ANR	1228364	CFGExitNode	EXIT		1228013		True				
ANR	1228365	Symbol	ONIGERR_MISMATCH_CODE_LENGTH_IN_CLASS_RANGE		1228013						
ANR	1228366	Symbol	* cc		1228013						
ANR	1228367	Symbol	v_israw		1228013						
ANR	1228368	Symbol	type		1228013						
ANR	1228369	Symbol	ONIG_SYN_ALLOW_EMPTY_RANGE_IN_CC		1228013						
ANR	1228370	Symbol	ONIGERR_EMPTY_RANGE_IN_CHAR_CLASS		1228013						
ANR	1228371	Symbol	* type		1228013						
ANR	1228372	Symbol	CCV_SB		1228013						
ANR	1228373	Symbol	ONIGERR_INVALID_CODE_POINT_VALUE		1228013						
ANR	1228374	Symbol	IS_SYNTAX_BV		1228013						
ANR	1228375	Symbol	* vs_israw		1228013						
ANR	1228376	Symbol	state		1228013						
ANR	1228377	Symbol	& cc -> mbuf		1228013						
ANR	1228378	Symbol	cc		1228013						
ANR	1228379	Symbol	* vs		1228013						
ANR	1228380	Symbol	add_code_range		1228013						
ANR	1228381	Symbol	* env		1228013						
ANR	1228382	Symbol	env		1228013						
ANR	1228383	Symbol	vs_israw		1228013						
ANR	1228384	Symbol	intype		1228013						
ANR	1228385	Symbol	env -> syntax		1228013						
ANR	1228386	Symbol	cc -> bs		1228013						
ANR	1228387	Symbol	* state		1228013						
ANR	1228388	Symbol	r		1228013						
ANR	1228389	Symbol	v		1228013						
ANR	1228390	Symbol	CCS_VALUE		1228013						
ANR	1228391	Symbol	CCV_CODE_POINT		1228013						
ANR	1228392	Symbol	CCS_COMPLETE		1228013						
ANR	1228393	Symbol	vs		1228013						
ANR	1228394	Function	code_exist_check	4151:0:92366:92792							
ANR	1228395	FunctionDef	"code_exist_check (OnigCodePoint c , UChar * from , UChar * end , int ignore_escaped , ScanEnv * env)"		1228394	0					
ANR	1228396	CompoundStatement		4154:0:92473:92792	1228394	0					
ANR	1228397	IdentifierDeclStatement	int in_esc ;	4155:2:92477:92487	1228394	0	True				
ANR	1228398	IdentifierDecl	in_esc		1228394	0					
ANR	1228399	IdentifierDeclType	int		1228394	0					
ANR	1228400	Identifier	in_esc		1228394	1					
ANR	1228401	IdentifierDeclStatement	OnigCodePoint code ;	4156:2:92491:92509	1228394	1	True				
ANR	1228402	IdentifierDecl	code		1228394	0					
ANR	1228403	IdentifierDeclType	OnigCodePoint		1228394	0					
ANR	1228404	Identifier	code		1228394	1					
ANR	1228405	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	4157:2:92513:92540	1228394	2	True				
ANR	1228406	IdentifierDecl	enc = env -> enc		1228394	0					
ANR	1228407	IdentifierDeclType	OnigEncoding		1228394	0					
ANR	1228408	Identifier	enc		1228394	1					
ANR	1228409	AssignmentExpression	enc = env -> enc		1228394	2		=			
ANR	1228410	Identifier	enc		1228394	0					
ANR	1228411	PtrMemberAccess	env -> enc		1228394	1					
ANR	1228412	Identifier	env		1228394	0					
ANR	1228413	Identifier	enc		1228394	1					
ANR	1228414	IdentifierDeclStatement	UChar * p = from ;	4158:2:92544:92559	1228394	3	True				
ANR	1228415	IdentifierDecl	* p = from		1228394	0					
ANR	1228416	IdentifierDeclType	UChar *		1228394	0					
ANR	1228417	Identifier	p		1228394	1					
ANR	1228418	AssignmentExpression	* p = from		1228394	2		=			
ANR	1228419	Identifier	from		1228394	0					
ANR	1228420	Identifier	from		1228394	1					
ANR	1228421	ExpressionStatement	in_esc = 0	4160:2:92564:92574	1228394	4	True				
ANR	1228422	AssignmentExpression	in_esc = 0		1228394	0		=			
ANR	1228423	Identifier	in_esc		1228394	0					
ANR	1228424	PrimaryExpression	0		1228394	1					
ANR	1228425	WhileStatement	while ( ! PEND )		1228394	5					
ANR	1228426	Condition	! PEND	4161:9:92585:92590	1228394	0	True				
ANR	1228427	UnaryOperationExpression	! PEND		1228394	0					
ANR	1228428	UnaryOperator	!		1228394	0					
ANR	1228429	Identifier	PEND		1228394	1					
ANR	1228430	CompoundStatement		8:17:119:119	1228394	1					
ANR	1228431	IfStatement	if ( ignore_escaped && in_esc )		1228394	0					
ANR	1228432	Condition	ignore_escaped && in_esc	4162:8:92603:92626	1228394	0	True				
ANR	1228433	AndExpression	ignore_escaped && in_esc		1228394	0		&&			
ANR	1228434	Identifier	ignore_escaped		1228394	0					
ANR	1228435	Identifier	in_esc		1228394	1					
ANR	1228436	CompoundStatement		9:34:155:155	1228394	1					
ANR	1228437	ExpressionStatement	in_esc = 0	4163:6:92637:92647	1228394	0	True				
ANR	1228438	AssignmentExpression	in_esc = 0		1228394	0		=			
ANR	1228439	Identifier	in_esc		1228394	0					
ANR	1228440	PrimaryExpression	0		1228394	1					
ANR	1228441	ElseStatement	else		1228394	0					
ANR	1228442	CompoundStatement		12:9:190:190	1228394	0					
ANR	1228443	ExpressionStatement	PFETCH_S ( code )	4166:6:92672:92686	1228394	0	True				
ANR	1228444	CallExpression	PFETCH_S ( code )		1228394	0					
ANR	1228445	Callee	PFETCH_S		1228394	0					
ANR	1228446	Identifier	PFETCH_S		1228394	0					
ANR	1228447	ArgumentList	code		1228394	1					
ANR	1228448	Argument	code		1228394	0					
ANR	1228449	Identifier	code		1228394	0					
ANR	1228450	IfStatement	if ( code == c )		1228394	1					
ANR	1228451	Condition	code == c	4167:10:92698:92706	1228394	0	True				
ANR	1228452	EqualityExpression	code == c		1228394	0		==			
ANR	1228453	Identifier	code		1228394	0					
ANR	1228454	Identifier	c		1228394	1					
ANR	1228455	ReturnStatement	return 1 ;	4167:21:92709:92717	1228394	1	True				
ANR	1228456	PrimaryExpression	1		1228394	0					
ANR	1228457	IfStatement	if ( code == MC_ESC ( env -> syntax ) )		1228394	2					
ANR	1228458	Condition	code == MC_ESC ( env -> syntax )	4168:10:92729:92755	1228394	0	True				
ANR	1228459	EqualityExpression	code == MC_ESC ( env -> syntax )		1228394	0		==			
ANR	1228460	Identifier	code		1228394	0					
ANR	1228461	CallExpression	MC_ESC ( env -> syntax )		1228394	1					
ANR	1228462	Callee	MC_ESC		1228394	0					
ANR	1228463	Identifier	MC_ESC		1228394	0					
ANR	1228464	ArgumentList	env -> syntax		1228394	1					
ANR	1228465	Argument	env -> syntax		1228394	0					
ANR	1228466	PtrMemberAccess	env -> syntax		1228394	0					
ANR	1228467	Identifier	env		1228394	0					
ANR	1228468	Identifier	syntax		1228394	1					
ANR	1228469	ExpressionStatement	in_esc = 1	4168:39:92758:92768	1228394	1	True				
ANR	1228470	AssignmentExpression	in_esc = 1		1228394	0		=			
ANR	1228471	Identifier	in_esc		1228394	0					
ANR	1228472	PrimaryExpression	1		1228394	1					
ANR	1228473	ReturnStatement	return 0 ;	4171:2:92782:92790	1228394	6	True				
ANR	1228474	PrimaryExpression	0		1228394	0					
ANR	1228475	ReturnType	static int		1228394	1					
ANR	1228476	Identifier	code_exist_check		1228394	2					
ANR	1228477	ParameterList	"OnigCodePoint c , UChar * from , UChar * end , int ignore_escaped , ScanEnv * env"		1228394	3					
ANR	1228478	Parameter	OnigCodePoint c	4152:17:92394:92408	1228394	0	True				
ANR	1228479	ParameterType	OnigCodePoint		1228394	0					
ANR	1228480	Identifier	c		1228394	1					
ANR	1228481	Parameter	UChar * from	4152:34:92411:92421	1228394	1	True				
ANR	1228482	ParameterType	UChar *		1228394	0					
ANR	1228483	Identifier	from		1228394	1					
ANR	1228484	Parameter	UChar * end	4152:47:92424:92433	1228394	2	True				
ANR	1228485	ParameterType	UChar *		1228394	0					
ANR	1228486	Identifier	end		1228394	1					
ANR	1228487	Parameter	int ignore_escaped	4152:59:92436:92453	1228394	3	True				
ANR	1228488	ParameterType	int		1228394	0					
ANR	1228489	Identifier	ignore_escaped		1228394	1					
ANR	1228490	Parameter	ScanEnv * env	4153:3:92459:92470	1228394	4	True				
ANR	1228491	ParameterType	ScanEnv *		1228394	0					
ANR	1228492	Identifier	env		1228394	1					
ANR	1228493	CFGEntryNode	ENTRY		1228394		True				
ANR	1228494	CFGExitNode	EXIT		1228394		True				
ANR	1228495	Symbol	c		1228394						
ANR	1228496	Symbol	code		1228394						
ANR	1228497	Symbol	* env		1228394						
ANR	1228498	Symbol	env -> enc		1228394						
ANR	1228499	Symbol	env		1228394						
ANR	1228500	Symbol	MC_ESC		1228394						
ANR	1228501	Symbol	PEND		1228394						
ANR	1228502	Symbol	env -> syntax		1228394						
ANR	1228503	Symbol	p		1228394						
ANR	1228504	Symbol	ignore_escaped		1228394						
ANR	1228505	Symbol	from		1228394						
ANR	1228506	Symbol	end		1228394						
ANR	1228507	Symbol	enc		1228394						
ANR	1228508	Symbol	in_esc		1228394						
ANR	1228509	Function	parse_char_class	4174:0:92795:100048							
ANR	1228510	FunctionDef	"parse_char_class (Node * * np , OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env)"		1228509	0					
ANR	1228511	CompoundStatement		4177:0:92892:100048	1228509	0					
ANR	1228512	IdentifierDeclStatement	"int r , neg , len , fetched , and_start ;"	4178:2:92896:92931	1228509	0	True				
ANR	1228513	IdentifierDecl	r		1228509	0					
ANR	1228514	IdentifierDeclType	int		1228509	0					
ANR	1228515	Identifier	r		1228509	1					
ANR	1228516	IdentifierDecl	neg		1228509	1					
ANR	1228517	IdentifierDeclType	int		1228509	0					
ANR	1228518	Identifier	neg		1228509	1					
ANR	1228519	IdentifierDecl	len		1228509	2					
ANR	1228520	IdentifierDeclType	int		1228509	0					
ANR	1228521	Identifier	len		1228509	1					
ANR	1228522	IdentifierDecl	fetched		1228509	3					
ANR	1228523	IdentifierDeclType	int		1228509	0					
ANR	1228524	Identifier	fetched		1228509	1					
ANR	1228525	IdentifierDecl	and_start		1228509	4					
ANR	1228526	IdentifierDeclType	int		1228509	0					
ANR	1228527	Identifier	and_start		1228509	1					
ANR	1228528	IdentifierDeclStatement	"OnigCodePoint v , vs ;"	4179:2:92935:92954	1228509	1	True				
ANR	1228529	IdentifierDecl	v		1228509	0					
ANR	1228530	IdentifierDeclType	OnigCodePoint		1228509	0					
ANR	1228531	Identifier	v		1228509	1					
ANR	1228532	IdentifierDecl	vs		1228509	1					
ANR	1228533	IdentifierDeclType	OnigCodePoint		1228509	0					
ANR	1228534	Identifier	vs		1228509	1					
ANR	1228535	IdentifierDeclStatement	UChar * p ;	4180:2:92958:92966	1228509	2	True				
ANR	1228536	IdentifierDecl	* p		1228509	0					
ANR	1228537	IdentifierDeclType	UChar *		1228509	0					
ANR	1228538	Identifier	p		1228509	1					
ANR	1228539	IdentifierDeclStatement	Node * node ;	4181:2:92970:92980	1228509	3	True				
ANR	1228540	IdentifierDecl	* node		1228509	0					
ANR	1228541	IdentifierDeclType	Node *		1228509	0					
ANR	1228542	Identifier	node		1228509	1					
ANR	1228543	IdentifierDeclStatement	"CClassNode * cc , * prev_cc ;"	4182:2:92984:93008	1228509	4	True				
ANR	1228544	IdentifierDecl	* cc		1228509	0					
ANR	1228545	IdentifierDeclType	CClassNode *		1228509	0					
ANR	1228546	Identifier	cc		1228509	1					
ANR	1228547	IdentifierDecl	* prev_cc		1228509	1					
ANR	1228548	IdentifierDeclType	CClassNode *		1228509	0					
ANR	1228549	Identifier	prev_cc		1228509	1					
ANR	1228550	IdentifierDeclStatement	CClassNode work_cc ;	4183:2:93012:93030	1228509	5	True				
ANR	1228551	IdentifierDecl	work_cc		1228509	0					
ANR	1228552	IdentifierDeclType	CClassNode		1228509	0					
ANR	1228553	Identifier	work_cc		1228509	1					
ANR	1228554	IdentifierDeclStatement	enum CCSTATE state ;	4185:2:93035:93053	1228509	6	True				
ANR	1228555	IdentifierDecl	state		1228509	0					
ANR	1228556	IdentifierDeclType	enum CCSTATE		1228509	0					
ANR	1228557	Identifier	state		1228509	1					
ANR	1228558	IdentifierDeclStatement	"enum CCVALTYPE val_type , in_type ;"	4186:2:93057:93089	1228509	7	True				
ANR	1228559	IdentifierDecl	val_type		1228509	0					
ANR	1228560	IdentifierDeclType	enum CCVALTYPE		1228509	0					
ANR	1228561	Identifier	val_type		1228509	1					
ANR	1228562	IdentifierDecl	in_type		1228509	1					
ANR	1228563	IdentifierDeclType	enum CCVALTYPE		1228509	0					
ANR	1228564	Identifier	in_type		1228509	1					
ANR	1228565	IdentifierDeclStatement	"int val_israw , in_israw ;"	4187:2:93093:93116	1228509	8	True				
ANR	1228566	IdentifierDecl	val_israw		1228509	0					
ANR	1228567	IdentifierDeclType	int		1228509	0					
ANR	1228568	Identifier	val_israw		1228509	1					
ANR	1228569	IdentifierDecl	in_israw		1228509	1					
ANR	1228570	IdentifierDeclType	int		1228509	0					
ANR	1228571	Identifier	in_israw		1228509	1					
ANR	1228572	ExpressionStatement	prev_cc = ( CClassNode * ) NULL	4189:2:93121:93149	1228509	9	True				
ANR	1228573	AssignmentExpression	prev_cc = ( CClassNode * ) NULL		1228509	0		=			
ANR	1228574	Identifier	prev_cc		1228509	0					
ANR	1228575	CastExpression	( CClassNode * ) NULL		1228509	1					
ANR	1228576	CastTarget	CClassNode *		1228509	0					
ANR	1228577	Identifier	NULL		1228509	1					
ANR	1228578	ExpressionStatement	* np = NULL_NODE	4190:2:93153:93168	1228509	10	True				
ANR	1228579	AssignmentExpression	* np = NULL_NODE		1228509	0		=			
ANR	1228580	UnaryOperationExpression	* np		1228509	0					
ANR	1228581	UnaryOperator	*		1228509	0					
ANR	1228582	Identifier	np		1228509	1					
ANR	1228583	Identifier	NULL_NODE		1228509	1					
ANR	1228584	ExpressionStatement	"r = fetch_token_in_cc ( tok , src , end , env )"	4191:2:93172:93213	1228509	11	True				
ANR	1228585	AssignmentExpression	"r = fetch_token_in_cc ( tok , src , end , env )"		1228509	0		=			
ANR	1228586	Identifier	r		1228509	0					
ANR	1228587	CallExpression	"fetch_token_in_cc ( tok , src , end , env )"		1228509	1					
ANR	1228588	Callee	fetch_token_in_cc		1228509	0					
ANR	1228589	Identifier	fetch_token_in_cc		1228509	0					
ANR	1228590	ArgumentList	tok		1228509	1					
ANR	1228591	Argument	tok		1228509	0					
ANR	1228592	Identifier	tok		1228509	0					
ANR	1228593	Argument	src		1228509	1					
ANR	1228594	Identifier	src		1228509	0					
ANR	1228595	Argument	end		1228509	2					
ANR	1228596	Identifier	end		1228509	0					
ANR	1228597	Argument	env		1228509	3					
ANR	1228598	Identifier	env		1228509	0					
ANR	1228599	IfStatement	if ( r == TK_CHAR && tok -> u . c == '^' && tok -> escaped == 0 )		1228509	12					
ANR	1228600	Condition	r == TK_CHAR && tok -> u . c == '^' && tok -> escaped == 0	4192:6:93221:93272	1228509	0	True				
ANR	1228601	AndExpression	r == TK_CHAR && tok -> u . c == '^' && tok -> escaped == 0		1228509	0		&&			
ANR	1228602	EqualityExpression	r == TK_CHAR		1228509	0		==			
ANR	1228603	Identifier	r		1228509	0					
ANR	1228604	Identifier	TK_CHAR		1228509	1					
ANR	1228605	AndExpression	tok -> u . c == '^' && tok -> escaped == 0		1228509	1		&&			
ANR	1228606	EqualityExpression	tok -> u . c == '^'		1228509	0		==			
ANR	1228607	MemberAccess	tok -> u . c		1228509	0					
ANR	1228608	PtrMemberAccess	tok -> u		1228509	0					
ANR	1228609	Identifier	tok		1228509	0					
ANR	1228610	Identifier	u		1228509	1					
ANR	1228611	Identifier	c		1228509	1					
ANR	1228612	PrimaryExpression	'^'		1228509	1					
ANR	1228613	EqualityExpression	tok -> escaped == 0		1228509	1		==			
ANR	1228614	PtrMemberAccess	tok -> escaped		1228509	0					
ANR	1228615	Identifier	tok		1228509	0					
ANR	1228616	Identifier	escaped		1228509	1					
ANR	1228617	PrimaryExpression	0		1228509	1					
ANR	1228618	CompoundStatement		16:60:382:382	1228509	1					
ANR	1228619	ExpressionStatement	neg = 1	4193:4:93281:93288	1228509	0	True				
ANR	1228620	AssignmentExpression	neg = 1		1228509	0		=			
ANR	1228621	Identifier	neg		1228509	0					
ANR	1228622	PrimaryExpression	1		1228509	1					
ANR	1228623	ExpressionStatement	"r = fetch_token_in_cc ( tok , src , end , env )"	4194:4:93294:93335	1228509	1	True				
ANR	1228624	AssignmentExpression	"r = fetch_token_in_cc ( tok , src , end , env )"		1228509	0		=			
ANR	1228625	Identifier	r		1228509	0					
ANR	1228626	CallExpression	"fetch_token_in_cc ( tok , src , end , env )"		1228509	1					
ANR	1228627	Callee	fetch_token_in_cc		1228509	0					
ANR	1228628	Identifier	fetch_token_in_cc		1228509	0					
ANR	1228629	ArgumentList	tok		1228509	1					
ANR	1228630	Argument	tok		1228509	0					
ANR	1228631	Identifier	tok		1228509	0					
ANR	1228632	Argument	src		1228509	1					
ANR	1228633	Identifier	src		1228509	0					
ANR	1228634	Argument	end		1228509	2					
ANR	1228635	Identifier	end		1228509	0					
ANR	1228636	Argument	env		1228509	3					
ANR	1228637	Identifier	env		1228509	0					
ANR	1228638	ElseStatement	else		1228509	0					
ANR	1228639	CompoundStatement		20:7:455:455	1228509	0					
ANR	1228640	ExpressionStatement	neg = 0	4197:4:93354:93361	1228509	0	True				
ANR	1228641	AssignmentExpression	neg = 0		1228509	0		=			
ANR	1228642	Identifier	neg		1228509	0					
ANR	1228643	PrimaryExpression	0		1228509	1					
ANR	1228644	IfStatement	if ( r < 0 )		1228509	13					
ANR	1228645	Condition	r < 0	4200:6:93374:93378	1228509	0	True				
ANR	1228646	RelationalExpression	r < 0		1228509	0		<			
ANR	1228647	Identifier	r		1228509	0					
ANR	1228648	PrimaryExpression	0		1228509	1					
ANR	1228649	ReturnStatement	return r ;	4200:13:93381:93389	1228509	1	True				
ANR	1228650	Identifier	r		1228509	0					
ANR	1228651	IfStatement	if ( r == TK_CC_CLOSE )		1228509	14					
ANR	1228652	Condition	r == TK_CC_CLOSE	4201:6:93397:93412	1228509	0	True				
ANR	1228653	EqualityExpression	r == TK_CC_CLOSE		1228509	0		==			
ANR	1228654	Identifier	r		1228509	0					
ANR	1228655	Identifier	TK_CC_CLOSE		1228509	1					
ANR	1228656	CompoundStatement		25:24:522:522	1228509	1					
ANR	1228657	IfStatement	"if ( ! code_exist_check ( ( OnigCodePoint ) ']' , * src , env -> pattern_end , 1 , env ) )"		1228509	0					
ANR	1228658	Condition	"! code_exist_check ( ( OnigCodePoint ) ']' , * src , env -> pattern_end , 1 , env )"	4202:8:93425:93522	1228509	0	True				
ANR	1228659	UnaryOperationExpression	"! code_exist_check ( ( OnigCodePoint ) ']' , * src , env -> pattern_end , 1 , env )"		1228509	0					
ANR	1228660	UnaryOperator	!		1228509	0					
ANR	1228661	CallExpression	"code_exist_check ( ( OnigCodePoint ) ']' , * src , env -> pattern_end , 1 , env )"		1228509	1					
ANR	1228662	Callee	code_exist_check		1228509	0					
ANR	1228663	Identifier	code_exist_check		1228509	0					
ANR	1228664	ArgumentList	( OnigCodePoint ) ']'		1228509	1					
ANR	1228665	Argument	( OnigCodePoint ) ']'		1228509	0					
ANR	1228666	CastExpression	( OnigCodePoint ) ']'		1228509	0					
ANR	1228667	CastTarget	OnigCodePoint		1228509	0					
ANR	1228668	PrimaryExpression	']'		1228509	1					
ANR	1228669	Argument	* src		1228509	1					
ANR	1228670	UnaryOperationExpression	* src		1228509	0					
ANR	1228671	UnaryOperator	*		1228509	0					
ANR	1228672	Identifier	src		1228509	1					
ANR	1228673	Argument	env -> pattern_end		1228509	2					
ANR	1228674	PtrMemberAccess	env -> pattern_end		1228509	0					
ANR	1228675	Identifier	env		1228509	0					
ANR	1228676	Identifier	pattern_end		1228509	1					
ANR	1228677	Argument	1		1228509	3					
ANR	1228678	PrimaryExpression	1		1228509	0					
ANR	1228679	Argument	env		1228509	4					
ANR	1228680	Identifier	env		1228509	0					
ANR	1228681	ReturnStatement	return ONIGERR_EMPTY_CHAR_CLASS ;	4204:6:93531:93562	1228509	1	True				
ANR	1228682	Identifier	ONIGERR_EMPTY_CHAR_CLASS		1228509	0					
ANR	1228683	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""]"" )"	4206:4:93569:93599	1228509	1	True				
ANR	1228684	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""]"" )"		1228509	0					
ANR	1228685	Callee	CC_ESC_WARN		1228509	0					
ANR	1228686	Identifier	CC_ESC_WARN		1228509	0					
ANR	1228687	ArgumentList	env		1228509	1					
ANR	1228688	Argument	env		1228509	0					
ANR	1228689	Identifier	env		1228509	0					
ANR	1228690	Argument	"( UChar * ) ""]"""		1228509	1					
ANR	1228691	CastExpression	"( UChar * ) ""]"""		1228509	0					
ANR	1228692	CastTarget	UChar *		1228509	0					
ANR	1228693	PrimaryExpression	"""]"""		1228509	1					
ANR	1228694	ExpressionStatement	r = tok -> type = TK_CHAR	4207:4:93605:93628	1228509	2	True				
ANR	1228695	AssignmentExpression	r = tok -> type = TK_CHAR		1228509	0		=			
ANR	1228696	Identifier	r		1228509	0					
ANR	1228697	AssignmentExpression	tok -> type = TK_CHAR		1228509	1		=			
ANR	1228698	PtrMemberAccess	tok -> type		1228509	0					
ANR	1228699	Identifier	tok		1228509	0					
ANR	1228700	Identifier	type		1228509	1					
ANR	1228701	Identifier	TK_CHAR		1228509	1					
ANR	1228702	ExpressionStatement	* np = node = node_new_cclass ( )	4210:2:93657:93687	1228509	15	True				
ANR	1228703	AssignmentExpression	* np = node = node_new_cclass ( )		1228509	0		=			
ANR	1228704	UnaryOperationExpression	* np		1228509	0					
ANR	1228705	UnaryOperator	*		1228509	0					
ANR	1228706	Identifier	np		1228509	1					
ANR	1228707	AssignmentExpression	node = node_new_cclass ( )		1228509	1		=			
ANR	1228708	Identifier	node		1228509	0					
ANR	1228709	CallExpression	node_new_cclass ( )		1228509	1					
ANR	1228710	Callee	node_new_cclass		1228509	0					
ANR	1228711	Identifier	node_new_cclass		1228509	0					
ANR	1228712	ArgumentList			1228509	1					
ANR	1228713	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( node )	4211:2:93691:93721	1228509	16	True				
ANR	1228714	CallExpression	CHECK_NULL_RETURN_MEMERR ( node )		1228509	0					
ANR	1228715	Callee	CHECK_NULL_RETURN_MEMERR		1228509	0					
ANR	1228716	Identifier	CHECK_NULL_RETURN_MEMERR		1228509	0					
ANR	1228717	ArgumentList	node		1228509	1					
ANR	1228718	Argument	node		1228509	0					
ANR	1228719	Identifier	node		1228509	0					
ANR	1228720	ExpressionStatement	cc = NCCLASS ( node )	4212:2:93725:93743	1228509	17	True				
ANR	1228721	AssignmentExpression	cc = NCCLASS ( node )		1228509	0		=			
ANR	1228722	Identifier	cc		1228509	0					
ANR	1228723	CallExpression	NCCLASS ( node )		1228509	1					
ANR	1228724	Callee	NCCLASS		1228509	0					
ANR	1228725	Identifier	NCCLASS		1228509	0					
ANR	1228726	ArgumentList	node		1228509	1					
ANR	1228727	Argument	node		1228509	0					
ANR	1228728	Identifier	node		1228509	0					
ANR	1228729	ExpressionStatement	and_start = 0	4214:2:93748:93761	1228509	18	True				
ANR	1228730	AssignmentExpression	and_start = 0		1228509	0		=			
ANR	1228731	Identifier	and_start		1228509	0					
ANR	1228732	PrimaryExpression	0		1228509	1					
ANR	1228733	ExpressionStatement	state = CCS_START	4215:2:93765:93782	1228509	19	True				
ANR	1228734	AssignmentExpression	state = CCS_START		1228509	0		=			
ANR	1228735	Identifier	state		1228509	0					
ANR	1228736	Identifier	CCS_START		1228509	1					
ANR	1228737	ExpressionStatement	p = * src	4216:2:93786:93794	1228509	20	True				
ANR	1228738	AssignmentExpression	p = * src		1228509	0		=			
ANR	1228739	Identifier	p		1228509	0					
ANR	1228740	UnaryOperationExpression	* src		1228509	1					
ANR	1228741	UnaryOperator	*		1228509	0					
ANR	1228742	Identifier	src		1228509	1					
ANR	1228743	WhileStatement	while ( r != TK_CC_CLOSE )		1228509	21					
ANR	1228744	Condition	r != TK_CC_CLOSE	4217:9:93805:93820	1228509	0	True				
ANR	1228745	EqualityExpression	r != TK_CC_CLOSE		1228509	0		!=			
ANR	1228746	Identifier	r		1228509	0					
ANR	1228747	Identifier	TK_CC_CLOSE		1228509	1					
ANR	1228748	CompoundStatement		41:27:930:930	1228509	1					
ANR	1228749	ExpressionStatement	fetched = 0	4218:4:93829:93840	1228509	0	True				
ANR	1228750	AssignmentExpression	fetched = 0		1228509	0		=			
ANR	1228751	Identifier	fetched		1228509	0					
ANR	1228752	PrimaryExpression	0		1228509	1					
ANR	1228753	SwitchStatement	switch ( r )		1228509	1					
ANR	1228754	Condition	r	4219:12:93854:93854	1228509	0	True				
ANR	1228755	Identifier	r		1228509	0					
ANR	1228756	CompoundStatement		43:15:964:964	1228509	1					
ANR	1228757	Label	case TK_CHAR :	4220:4:93863:93875	1228509	0	True				
ANR	1228758	Identifier	TK_CHAR		1228509	0					
ANR	1228759	ExpressionStatement	"len = ONIGENC_CODE_TO_MBCLEN ( env -> enc , tok -> u . c )"	4221:6:93883:93931	1228509	1	True				
ANR	1228760	AssignmentExpression	"len = ONIGENC_CODE_TO_MBCLEN ( env -> enc , tok -> u . c )"		1228509	0		=			
ANR	1228761	Identifier	len		1228509	0					
ANR	1228762	CallExpression	"ONIGENC_CODE_TO_MBCLEN ( env -> enc , tok -> u . c )"		1228509	1					
ANR	1228763	Callee	ONIGENC_CODE_TO_MBCLEN		1228509	0					
ANR	1228764	Identifier	ONIGENC_CODE_TO_MBCLEN		1228509	0					
ANR	1228765	ArgumentList	env -> enc		1228509	1					
ANR	1228766	Argument	env -> enc		1228509	0					
ANR	1228767	PtrMemberAccess	env -> enc		1228509	0					
ANR	1228768	Identifier	env		1228509	0					
ANR	1228769	Identifier	enc		1228509	1					
ANR	1228770	Argument	tok -> u . c		1228509	1					
ANR	1228771	MemberAccess	tok -> u . c		1228509	0					
ANR	1228772	PtrMemberAccess	tok -> u		1228509	0					
ANR	1228773	Identifier	tok		1228509	0					
ANR	1228774	Identifier	u		1228509	1					
ANR	1228775	Identifier	c		1228509	1					
ANR	1228776	IfStatement	if ( len > 1 )		1228509	2					
ANR	1228777	Condition	len > 1	4222:10:93943:93949	1228509	0	True				
ANR	1228778	RelationalExpression	len > 1		1228509	0		>			
ANR	1228779	Identifier	len		1228509	0					
ANR	1228780	PrimaryExpression	1		1228509	1					
ANR	1228781	CompoundStatement		46:19:1059:1059	1228509	1					
ANR	1228782	ExpressionStatement	in_type = CCV_CODE_POINT	4223:1:93955:93979	1228509	0	True				
ANR	1228783	AssignmentExpression	in_type = CCV_CODE_POINT		1228509	0		=			
ANR	1228784	Identifier	in_type		1228509	0					
ANR	1228785	Identifier	CCV_CODE_POINT		1228509	1					
ANR	1228786	ElseStatement	else		1228509	0					
ANR	1228787	IfStatement	if ( len < 0 )		1228509	0					
ANR	1228788	Condition	len < 0	4225:15:94004:94010	1228509	0	True				
ANR	1228789	RelationalExpression	len < 0		1228509	0		<			
ANR	1228790	Identifier	len		1228509	0					
ANR	1228791	PrimaryExpression	0		1228509	1					
ANR	1228792	CompoundStatement		49:24:1120:1120	1228509	1					
ANR	1228793	ExpressionStatement	r = len	4226:1:94016:94023	1228509	0	True				
ANR	1228794	AssignmentExpression	r = len		1228509	0		=			
ANR	1228795	Identifier	r		1228509	0					
ANR	1228796	Identifier	len		1228509	1					
ANR	1228797	GotoStatement	goto err ;	4227:1:94026:94034	1228509	1	True				
ANR	1228798	Identifier	err		1228509	0					
ANR	1228799	ElseStatement	else		1228509	0					
ANR	1228800	CompoundStatement		53:11:1162:1162	1228509	0					
ANR	1228801	Label	sb_char :	4230:6:94063:94070	1228509	0	True				
ANR	1228802	Identifier	sb_char		1228509	0					
ANR	1228803	ExpressionStatement	in_type = CCV_SB	4231:1:94073:94089	1228509	1	True				
ANR	1228804	AssignmentExpression	in_type = CCV_SB		1228509	0		=			
ANR	1228805	Identifier	in_type		1228509	0					
ANR	1228806	Identifier	CCV_SB		1228509	1					
ANR	1228807	ExpressionStatement	v = ( OnigCodePoint ) tok -> u . c	4233:6:94105:94133	1228509	3	True				
ANR	1228808	AssignmentExpression	v = ( OnigCodePoint ) tok -> u . c		1228509	0		=			
ANR	1228809	Identifier	v		1228509	0					
ANR	1228810	CastExpression	( OnigCodePoint ) tok -> u . c		1228509	1					
ANR	1228811	CastTarget	OnigCodePoint		1228509	0					
ANR	1228812	MemberAccess	tok -> u . c		1228509	1					
ANR	1228813	PtrMemberAccess	tok -> u		1228509	0					
ANR	1228814	Identifier	tok		1228509	0					
ANR	1228815	Identifier	u		1228509	1					
ANR	1228816	Identifier	c		1228509	1					
ANR	1228817	ExpressionStatement	in_israw = 0	4234:6:94141:94153	1228509	4	True				
ANR	1228818	AssignmentExpression	in_israw = 0		1228509	0		=			
ANR	1228819	Identifier	in_israw		1228509	0					
ANR	1228820	PrimaryExpression	0		1228509	1					
ANR	1228821	GotoStatement	goto val_entry2 ;	4235:6:94161:94176	1228509	5	True				
ANR	1228822	Identifier	val_entry2		1228509	0					
ANR	1228823	BreakStatement	break ;	4236:6:94184:94189	1228509	6	True				
ANR	1228824	Label	case TK_RAW_BYTE :	4238:4:94196:94212	1228509	7	True				
ANR	1228825	Identifier	TK_RAW_BYTE		1228509	0					
ANR	1228826	IfStatement	if ( ! ONIGENC_IS_SINGLEBYTE ( env -> enc ) && tok -> base != 0 )		1228509	8					
ANR	1228827	Condition	! ONIGENC_IS_SINGLEBYTE ( env -> enc ) && tok -> base != 0	4240:10:94271:94321	1228509	0	True				
ANR	1228828	AndExpression	! ONIGENC_IS_SINGLEBYTE ( env -> enc ) && tok -> base != 0		1228509	0		&&			
ANR	1228829	UnaryOperationExpression	! ONIGENC_IS_SINGLEBYTE ( env -> enc )		1228509	0					
ANR	1228830	UnaryOperator	!		1228509	0					
ANR	1228831	CallExpression	ONIGENC_IS_SINGLEBYTE ( env -> enc )		1228509	1					
ANR	1228832	Callee	ONIGENC_IS_SINGLEBYTE		1228509	0					
ANR	1228833	Identifier	ONIGENC_IS_SINGLEBYTE		1228509	0					
ANR	1228834	ArgumentList	env -> enc		1228509	1					
ANR	1228835	Argument	env -> enc		1228509	0					
ANR	1228836	PtrMemberAccess	env -> enc		1228509	0					
ANR	1228837	Identifier	env		1228509	0					
ANR	1228838	Identifier	enc		1228509	1					
ANR	1228839	EqualityExpression	tok -> base != 0		1228509	1		!=			
ANR	1228840	PtrMemberAccess	tok -> base		1228509	0					
ANR	1228841	Identifier	tok		1228509	0					
ANR	1228842	Identifier	base		1228509	1					
ANR	1228843	PrimaryExpression	0		1228509	1					
ANR	1228844	CompoundStatement		68:1:1542:1565	1228509	1					
ANR	1228845	IdentifierDeclStatement	UChar buf [ ONIGENC_CODE_TO_MBC_MAXLEN ] ;	4241:1:94327:94364	1228509	0	True				
ANR	1228846	IdentifierDecl	buf [ ONIGENC_CODE_TO_MBC_MAXLEN ]		1228509	0					
ANR	1228847	IdentifierDeclType	UChar [ ONIGENC_CODE_TO_MBC_MAXLEN ]		1228509	0					
ANR	1228848	Identifier	buf		1228509	1					
ANR	1228849	Identifier	ONIGENC_CODE_TO_MBC_MAXLEN		1228509	2					
ANR	1228850	IdentifierDeclStatement	UChar * bufe = buf + ONIGENC_CODE_TO_MBC_MAXLEN ;	4242:1:94367:94413	1228509	1	True				
ANR	1228851	IdentifierDecl	* bufe = buf + ONIGENC_CODE_TO_MBC_MAXLEN		1228509	0					
ANR	1228852	IdentifierDeclType	UChar *		1228509	0					
ANR	1228853	Identifier	bufe		1228509	1					
ANR	1228854	AssignmentExpression	* bufe = buf + ONIGENC_CODE_TO_MBC_MAXLEN		1228509	2		=			
ANR	1228855	Identifier	bufe		1228509	0					
ANR	1228856	AdditiveExpression	buf + ONIGENC_CODE_TO_MBC_MAXLEN		1228509	1		+			
ANR	1228857	Identifier	buf		1228509	0					
ANR	1228858	Identifier	ONIGENC_CODE_TO_MBC_MAXLEN		1228509	1					
ANR	1228859	IdentifierDeclStatement	UChar * psave = p ;	4243:1:94416:94432	1228509	2	True				
ANR	1228860	IdentifierDecl	* psave = p		1228509	0					
ANR	1228861	IdentifierDeclType	UChar *		1228509	0					
ANR	1228862	Identifier	psave		1228509	1					
ANR	1228863	AssignmentExpression	* psave = p		1228509	2		=			
ANR	1228864	Identifier	p		1228509	0					
ANR	1228865	Identifier	p		1228509	1					
ANR	1228866	IdentifierDeclStatement	"int i , base = tok -> base ;"	4244:1:94435:94458	1228509	3	True				
ANR	1228867	IdentifierDecl	i		1228509	0					
ANR	1228868	IdentifierDeclType	int		1228509	0					
ANR	1228869	Identifier	i		1228509	1					
ANR	1228870	IdentifierDecl	base = tok -> base		1228509	1					
ANR	1228871	IdentifierDeclType	int		1228509	0					
ANR	1228872	Identifier	base		1228509	1					
ANR	1228873	AssignmentExpression	base = tok -> base		1228509	2		=			
ANR	1228874	Identifier	base		1228509	0					
ANR	1228875	PtrMemberAccess	tok -> base		1228509	1					
ANR	1228876	Identifier	tok		1228509	0					
ANR	1228877	Identifier	base		1228509	1					
ANR	1228878	ExpressionStatement	buf [ 0 ] = tok -> u . c	4246:1:94462:94479	1228509	4	True				
ANR	1228879	AssignmentExpression	buf [ 0 ] = tok -> u . c		1228509	0		=			
ANR	1228880	ArrayIndexing	buf [ 0 ]		1228509	0					
ANR	1228881	Identifier	buf		1228509	0					
ANR	1228882	PrimaryExpression	0		1228509	1					
ANR	1228883	MemberAccess	tok -> u . c		1228509	1					
ANR	1228884	PtrMemberAccess	tok -> u		1228509	0					
ANR	1228885	Identifier	tok		1228509	0					
ANR	1228886	Identifier	u		1228509	1					
ANR	1228887	Identifier	c		1228509	1					
ANR	1228888	ForStatement	for ( i = 1 ; i < ONIGENC_MBC_MAXLEN ( env -> enc ) ; i ++ )		1228509	5					
ANR	1228889	ForInit	i = 1 ;	4247:6:94487:94492	1228509	0	True				
ANR	1228890	AssignmentExpression	i = 1		1228509	0		=			
ANR	1228891	Identifier	i		1228509	0					
ANR	1228892	PrimaryExpression	1		1228509	1					
ANR	1228893	Condition	i < ONIGENC_MBC_MAXLEN ( env -> enc )	4247:13:94494:94525	1228509	1	True				
ANR	1228894	RelationalExpression	i < ONIGENC_MBC_MAXLEN ( env -> enc )		1228509	0		<			
ANR	1228895	Identifier	i		1228509	0					
ANR	1228896	CallExpression	ONIGENC_MBC_MAXLEN ( env -> enc )		1228509	1					
ANR	1228897	Callee	ONIGENC_MBC_MAXLEN		1228509	0					
ANR	1228898	Identifier	ONIGENC_MBC_MAXLEN		1228509	0					
ANR	1228899	ArgumentList	env -> enc		1228509	1					
ANR	1228900	Argument	env -> enc		1228509	0					
ANR	1228901	PtrMemberAccess	env -> enc		1228509	0					
ANR	1228902	Identifier	env		1228509	0					
ANR	1228903	Identifier	enc		1228509	1					
ANR	1228904	PostIncDecOperationExpression	i ++	4247:47:94528:94530	1228509	2	True				
ANR	1228905	Identifier	i		1228509	0					
ANR	1228906	IncDec	++		1228509	1					
ANR	1228907	CompoundStatement		71:52:1640:1640	1228509	3					
ANR	1228908	ExpressionStatement	"r = fetch_token_in_cc ( tok , & p , end , env )"	4248:3:94538:94578	1228509	0	True				
ANR	1228909	AssignmentExpression	"r = fetch_token_in_cc ( tok , & p , end , env )"		1228509	0		=			
ANR	1228910	Identifier	r		1228509	0					
ANR	1228911	CallExpression	"fetch_token_in_cc ( tok , & p , end , env )"		1228509	1					
ANR	1228912	Callee	fetch_token_in_cc		1228509	0					
ANR	1228913	Identifier	fetch_token_in_cc		1228509	0					
ANR	1228914	ArgumentList	tok		1228509	1					
ANR	1228915	Argument	tok		1228509	0					
ANR	1228916	Identifier	tok		1228509	0					
ANR	1228917	Argument	& p		1228509	1					
ANR	1228918	UnaryOperationExpression	& p		1228509	0					
ANR	1228919	UnaryOperator	&		1228509	0					
ANR	1228920	Identifier	p		1228509	1					
ANR	1228921	Argument	end		1228509	2					
ANR	1228922	Identifier	end		1228509	0					
ANR	1228923	Argument	env		1228509	3					
ANR	1228924	Identifier	env		1228509	0					
ANR	1228925	IfStatement	if ( r < 0 )		1228509	1					
ANR	1228926	Condition	r < 0	4249:7:94587:94591	1228509	0	True				
ANR	1228927	RelationalExpression	r < 0		1228509	0		<			
ANR	1228928	Identifier	r		1228509	0					
ANR	1228929	PrimaryExpression	0		1228509	1					
ANR	1228930	GotoStatement	goto err ;	4249:14:94594:94602	1228509	1	True				
ANR	1228931	Identifier	err		1228509	0					
ANR	1228932	IfStatement	if ( r != TK_RAW_BYTE || tok -> base != base )		1228509	2					
ANR	1228933	Condition	r != TK_RAW_BYTE || tok -> base != base	4250:7:94611:94647	1228509	0	True				
ANR	1228934	OrExpression	r != TK_RAW_BYTE || tok -> base != base		1228509	0		||			
ANR	1228935	EqualityExpression	r != TK_RAW_BYTE		1228509	0		!=			
ANR	1228936	Identifier	r		1228509	0					
ANR	1228937	Identifier	TK_RAW_BYTE		1228509	1					
ANR	1228938	EqualityExpression	tok -> base != base		1228509	1		!=			
ANR	1228939	PtrMemberAccess	tok -> base		1228509	0					
ANR	1228940	Identifier	tok		1228509	0					
ANR	1228941	Identifier	base		1228509	1					
ANR	1228942	Identifier	base		1228509	1					
ANR	1228943	CompoundStatement		74:46:1757:1757	1228509	1					
ANR	1228944	ExpressionStatement	fetched = 1	4251:5:94657:94668	1228509	0	True				
ANR	1228945	AssignmentExpression	fetched = 1		1228509	0		=			
ANR	1228946	Identifier	fetched		1228509	0					
ANR	1228947	PrimaryExpression	1		1228509	1					
ANR	1228948	BreakStatement	break ;	4252:5:94675:94680	1228509	1	True				
ANR	1228949	ExpressionStatement	buf [ i ] = tok -> u . c	4254:3:94690:94707	1228509	3	True				
ANR	1228950	AssignmentExpression	buf [ i ] = tok -> u . c		1228509	0		=			
ANR	1228951	ArrayIndexing	buf [ i ]		1228509	0					
ANR	1228952	Identifier	buf		1228509	0					
ANR	1228953	Identifier	i		1228509	1					
ANR	1228954	MemberAccess	tok -> u . c		1228509	1					
ANR	1228955	PtrMemberAccess	tok -> u		1228509	0					
ANR	1228956	Identifier	tok		1228509	0					
ANR	1228957	Identifier	u		1228509	1					
ANR	1228958	Identifier	c		1228509	1					
ANR	1228959	IfStatement	if ( i < ONIGENC_MBC_MINLEN ( env -> enc ) )		1228509	6					
ANR	1228960	Condition	i < ONIGENC_MBC_MINLEN ( env -> enc )	4257:5:94718:94749	1228509	0	True				
ANR	1228961	RelationalExpression	i < ONIGENC_MBC_MINLEN ( env -> enc )		1228509	0		<			
ANR	1228962	Identifier	i		1228509	0					
ANR	1228963	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		1228509	1					
ANR	1228964	Callee	ONIGENC_MBC_MINLEN		1228509	0					
ANR	1228965	Identifier	ONIGENC_MBC_MINLEN		1228509	0					
ANR	1228966	ArgumentList	env -> enc		1228509	1					
ANR	1228967	Argument	env -> enc		1228509	0					
ANR	1228968	PtrMemberAccess	env -> enc		1228509	0					
ANR	1228969	Identifier	env		1228509	0					
ANR	1228970	Identifier	enc		1228509	1					
ANR	1228971	CompoundStatement		81:39:1859:1859	1228509	1					
ANR	1228972	ExpressionStatement	r = ONIGERR_TOO_SHORT_MULTI_BYTE_STRING	4258:3:94757:94796	1228509	0	True				
ANR	1228973	AssignmentExpression	r = ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		1228509	0		=			
ANR	1228974	Identifier	r		1228509	0					
ANR	1228975	Identifier	ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		1228509	1					
ANR	1228976	GotoStatement	goto err ;	4259:3:94801:94809	1228509	1	True				
ANR	1228977	Identifier	err		1228509	0					
ANR	1228978	ExpressionStatement	"len = enclen ( env -> enc , buf )"	4262:1:94816:94843	1228509	7	True				
ANR	1228979	AssignmentExpression	"len = enclen ( env -> enc , buf )"		1228509	0		=			
ANR	1228980	Identifier	len		1228509	0					
ANR	1228981	CallExpression	"enclen ( env -> enc , buf )"		1228509	1					
ANR	1228982	Callee	enclen		1228509	0					
ANR	1228983	Identifier	enclen		1228509	0					
ANR	1228984	ArgumentList	env -> enc		1228509	1					
ANR	1228985	Argument	env -> enc		1228509	0					
ANR	1228986	PtrMemberAccess	env -> enc		1228509	0					
ANR	1228987	Identifier	env		1228509	0					
ANR	1228988	Identifier	enc		1228509	1					
ANR	1228989	Argument	buf		1228509	1					
ANR	1228990	Identifier	buf		1228509	0					
ANR	1228991	IfStatement	if ( i < len )		1228509	8					
ANR	1228992	Condition	i < len	4263:5:94850:94856	1228509	0	True				
ANR	1228993	RelationalExpression	i < len		1228509	0		<			
ANR	1228994	Identifier	i		1228509	0					
ANR	1228995	Identifier	len		1228509	1					
ANR	1228996	CompoundStatement		87:14:1966:1966	1228509	1					
ANR	1228997	ExpressionStatement	r = ONIGERR_TOO_SHORT_MULTI_BYTE_STRING	4264:3:94864:94903	1228509	0	True				
ANR	1228998	AssignmentExpression	r = ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		1228509	0		=			
ANR	1228999	Identifier	r		1228509	0					
ANR	1229000	Identifier	ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		1228509	1					
ANR	1229001	GotoStatement	goto err ;	4265:3:94908:94916	1228509	1	True				
ANR	1229002	Identifier	err		1228509	0					
ANR	1229003	ElseStatement	else		1228509	0					
ANR	1229004	IfStatement	if ( i > len )		1228509	0					
ANR	1229005	Condition	i > len	4267:10:94931:94937	1228509	0	True				
ANR	1229006	RelationalExpression	i > len		1228509	0		>			
ANR	1229007	Identifier	i		1228509	0					
ANR	1229008	Identifier	len		1228509	1					
ANR	1229009	CompoundStatement		91:19:2047:2047	1228509	1					
ANR	1229010	ExpressionStatement	p = psave	4268:3:94962:94971	1228509	0	True				
ANR	1229011	AssignmentExpression	p = psave		1228509	0		=			
ANR	1229012	Identifier	p		1228509	0					
ANR	1229013	Identifier	psave		1228509	1					
ANR	1229014	ForStatement	for ( i = 1 ; i < len ; i ++ )		1228509	1					
ANR	1229015	ForInit	i = 1 ;	4269:8:94981:94986	1228509	0	True				
ANR	1229016	AssignmentExpression	i = 1		1228509	0		=			
ANR	1229017	Identifier	i		1228509	0					
ANR	1229018	PrimaryExpression	1		1228509	1					
ANR	1229019	Condition	i < len	4269:15:94988:94994	1228509	1	True				
ANR	1229020	RelationalExpression	i < len		1228509	0		<			
ANR	1229021	Identifier	i		1228509	0					
ANR	1229022	Identifier	len		1228509	1					
ANR	1229023	PostIncDecOperationExpression	i ++	4269:24:94997:94999	1228509	2	True				
ANR	1229024	Identifier	i		1228509	0					
ANR	1229025	IncDec	++		1228509	1					
ANR	1229026	CompoundStatement		93:29:2109:2109	1228509	3					
ANR	1229027	ExpressionStatement	"r = fetch_token_in_cc ( tok , & p , end , env )"	4270:5:95009:95049	1228509	0	True				
ANR	1229028	AssignmentExpression	"r = fetch_token_in_cc ( tok , & p , end , env )"		1228509	0		=			
ANR	1229029	Identifier	r		1228509	0					
ANR	1229030	CallExpression	"fetch_token_in_cc ( tok , & p , end , env )"		1228509	1					
ANR	1229031	Callee	fetch_token_in_cc		1228509	0					
ANR	1229032	Identifier	fetch_token_in_cc		1228509	0					
ANR	1229033	ArgumentList	tok		1228509	1					
ANR	1229034	Argument	tok		1228509	0					
ANR	1229035	Identifier	tok		1228509	0					
ANR	1229036	Argument	& p		1228509	1					
ANR	1229037	UnaryOperationExpression	& p		1228509	0					
ANR	1229038	UnaryOperator	&		1228509	0					
ANR	1229039	Identifier	p		1228509	1					
ANR	1229040	Argument	end		1228509	2					
ANR	1229041	Identifier	end		1228509	0					
ANR	1229042	Argument	env		1228509	3					
ANR	1229043	Identifier	env		1228509	0					
ANR	1229044	ExpressionStatement	fetched = 0	4272:3:95059:95070	1228509	2	True				
ANR	1229045	AssignmentExpression	fetched = 0		1228509	0		=			
ANR	1229046	Identifier	fetched		1228509	0					
ANR	1229047	PrimaryExpression	0		1228509	1					
ANR	1229048	IfStatement	if ( i == 1 )		1228509	9					
ANR	1229049	Condition	i == 1	4275:5:95081:95086	1228509	0	True				
ANR	1229050	EqualityExpression	i == 1		1228509	0		==			
ANR	1229051	Identifier	i		1228509	0					
ANR	1229052	PrimaryExpression	1		1228509	1					
ANR	1229053	CompoundStatement		99:13:2196:2196	1228509	1					
ANR	1229054	ExpressionStatement	v = ( OnigCodePoint ) buf [ 0 ]	4276:3:95094:95120	1228509	0	True				
ANR	1229055	AssignmentExpression	v = ( OnigCodePoint ) buf [ 0 ]		1228509	0		=			
ANR	1229056	Identifier	v		1228509	0					
ANR	1229057	CastExpression	( OnigCodePoint ) buf [ 0 ]		1228509	1					
ANR	1229058	CastTarget	OnigCodePoint		1228509	0					
ANR	1229059	ArrayIndexing	buf [ 0 ]		1228509	1					
ANR	1229060	Identifier	buf		1228509	0					
ANR	1229061	PrimaryExpression	0		1228509	1					
ANR	1229062	GotoStatement	goto raw_single ;	4277:3:95125:95140	1228509	1	True				
ANR	1229063	Identifier	raw_single		1228509	0					
ANR	1229064	ElseStatement	else		1228509	0					
ANR	1229065	CompoundStatement		103:6:2258:2258	1228509	0					
ANR	1229066	ExpressionStatement	"v = ONIGENC_MBC_TO_CODE ( env -> enc , buf , bufe )"	4280:3:95156:95200	1228509	0	True				
ANR	1229067	AssignmentExpression	"v = ONIGENC_MBC_TO_CODE ( env -> enc , buf , bufe )"		1228509	0		=			
ANR	1229068	Identifier	v		1228509	0					
ANR	1229069	CallExpression	"ONIGENC_MBC_TO_CODE ( env -> enc , buf , bufe )"		1228509	1					
ANR	1229070	Callee	ONIGENC_MBC_TO_CODE		1228509	0					
ANR	1229071	Identifier	ONIGENC_MBC_TO_CODE		1228509	0					
ANR	1229072	ArgumentList	env -> enc		1228509	1					
ANR	1229073	Argument	env -> enc		1228509	0					
ANR	1229074	PtrMemberAccess	env -> enc		1228509	0					
ANR	1229075	Identifier	env		1228509	0					
ANR	1229076	Identifier	enc		1228509	1					
ANR	1229077	Argument	buf		1228509	1					
ANR	1229078	Identifier	buf		1228509	0					
ANR	1229079	Argument	bufe		1228509	2					
ANR	1229080	Identifier	bufe		1228509	0					
ANR	1229081	ExpressionStatement	in_type = CCV_CODE_POINT	4281:3:95205:95229	1228509	1	True				
ANR	1229082	AssignmentExpression	in_type = CCV_CODE_POINT		1228509	0		=			
ANR	1229083	Identifier	in_type		1228509	0					
ANR	1229084	Identifier	CCV_CODE_POINT		1228509	1					
ANR	1229085	ElseStatement	else		1228509	0					
ANR	1229086	CompoundStatement		108:11:2360:2360	1228509	0					
ANR	1229087	ExpressionStatement	v = ( OnigCodePoint ) tok -> u . c	4285:1:95256:95284	1228509	0	True				
ANR	1229088	AssignmentExpression	v = ( OnigCodePoint ) tok -> u . c		1228509	0		=			
ANR	1229089	Identifier	v		1228509	0					
ANR	1229090	CastExpression	( OnigCodePoint ) tok -> u . c		1228509	1					
ANR	1229091	CastTarget	OnigCodePoint		1228509	0					
ANR	1229092	MemberAccess	tok -> u . c		1228509	1					
ANR	1229093	PtrMemberAccess	tok -> u		1228509	0					
ANR	1229094	Identifier	tok		1228509	0					
ANR	1229095	Identifier	u		1228509	1					
ANR	1229096	Identifier	c		1228509	1					
ANR	1229097	Label	raw_single :	4286:6:95292:95302	1228509	1	True				
ANR	1229098	Identifier	raw_single		1228509	0					
ANR	1229099	ExpressionStatement	in_type = CCV_SB	4287:1:95305:95321	1228509	2	True				
ANR	1229100	AssignmentExpression	in_type = CCV_SB		1228509	0		=			
ANR	1229101	Identifier	in_type		1228509	0					
ANR	1229102	Identifier	CCV_SB		1228509	1					
ANR	1229103	ExpressionStatement	in_israw = 1	4289:6:95337:95349	1228509	9	True				
ANR	1229104	AssignmentExpression	in_israw = 1		1228509	0		=			
ANR	1229105	Identifier	in_israw		1228509	0					
ANR	1229106	PrimaryExpression	1		1228509	1					
ANR	1229107	GotoStatement	goto val_entry2 ;	4290:6:95357:95372	1228509	10	True				
ANR	1229108	Identifier	val_entry2		1228509	0					
ANR	1229109	BreakStatement	break ;	4291:6:95380:95385	1228509	11	True				
ANR	1229110	Label	case TK_CODE_POINT :	4293:4:95392:95410	1228509	12	True				
ANR	1229111	Identifier	TK_CODE_POINT		1228509	0					
ANR	1229112	ExpressionStatement	v = tok -> u . code	4294:6:95418:95433	1228509	13	True				
ANR	1229113	AssignmentExpression	v = tok -> u . code		1228509	0		=			
ANR	1229114	Identifier	v		1228509	0					
ANR	1229115	MemberAccess	tok -> u . code		1228509	1					
ANR	1229116	PtrMemberAccess	tok -> u		1228509	0					
ANR	1229117	Identifier	tok		1228509	0					
ANR	1229118	Identifier	u		1228509	1					
ANR	1229119	Identifier	code		1228509	1					
ANR	1229120	ExpressionStatement	in_israw = 1	4295:6:95441:95453	1228509	14	True				
ANR	1229121	AssignmentExpression	in_israw = 1		1228509	0		=			
ANR	1229122	Identifier	in_israw		1228509	0					
ANR	1229123	PrimaryExpression	1		1228509	1					
ANR	1229124	Label	val_entry :	4296:4:95459:95468	1228509	15	True				
ANR	1229125	Identifier	val_entry		1228509	0					
ANR	1229126	ExpressionStatement	"len = ONIGENC_CODE_TO_MBCLEN ( env -> enc , v )"	4297:6:95476:95517	1228509	16	True				
ANR	1229127	AssignmentExpression	"len = ONIGENC_CODE_TO_MBCLEN ( env -> enc , v )"		1228509	0		=			
ANR	1229128	Identifier	len		1228509	0					
ANR	1229129	CallExpression	"ONIGENC_CODE_TO_MBCLEN ( env -> enc , v )"		1228509	1					
ANR	1229130	Callee	ONIGENC_CODE_TO_MBCLEN		1228509	0					
ANR	1229131	Identifier	ONIGENC_CODE_TO_MBCLEN		1228509	0					
ANR	1229132	ArgumentList	env -> enc		1228509	1					
ANR	1229133	Argument	env -> enc		1228509	0					
ANR	1229134	PtrMemberAccess	env -> enc		1228509	0					
ANR	1229135	Identifier	env		1228509	0					
ANR	1229136	Identifier	enc		1228509	1					
ANR	1229137	Argument	v		1228509	1					
ANR	1229138	Identifier	v		1228509	0					
ANR	1229139	IfStatement	if ( len < 0 )		1228509	17					
ANR	1229140	Condition	len < 0	4298:10:95529:95535	1228509	0	True				
ANR	1229141	RelationalExpression	len < 0		1228509	0		<			
ANR	1229142	Identifier	len		1228509	0					
ANR	1229143	PrimaryExpression	0		1228509	1					
ANR	1229144	CompoundStatement		122:19:2645:2645	1228509	1					
ANR	1229145	ExpressionStatement	r = len	4299:1:95541:95548	1228509	0	True				
ANR	1229146	AssignmentExpression	r = len		1228509	0		=			
ANR	1229147	Identifier	r		1228509	0					
ANR	1229148	Identifier	len		1228509	1					
ANR	1229149	GotoStatement	goto err ;	4300:1:95551:95559	1228509	1	True				
ANR	1229150	Identifier	err		1228509	0					
ANR	1229151	ExpressionStatement	in_type = ( len == 1 ? CCV_SB : CCV_CODE_POINT )	4302:6:95575:95621	1228509	18	True				
ANR	1229152	AssignmentExpression	in_type = ( len == 1 ? CCV_SB : CCV_CODE_POINT )		1228509	0		=			
ANR	1229153	Identifier	in_type		1228509	0					
ANR	1229154	ConditionalExpression	len == 1 ? CCV_SB : CCV_CODE_POINT		1228509	1					
ANR	1229155	Condition	len == 1		1228509	0					
ANR	1229156	EqualityExpression	len == 1		1228509	0		==			
ANR	1229157	Identifier	len		1228509	0					
ANR	1229158	PrimaryExpression	1		1228509	1					
ANR	1229159	Identifier	CCV_SB		1228509	1					
ANR	1229160	Identifier	CCV_CODE_POINT		1228509	2					
ANR	1229161	Label	val_entry2 :	4303:4:95627:95637	1228509	19	True				
ANR	1229162	Identifier	val_entry2		1228509	0					
ANR	1229163	ExpressionStatement	"r = next_state_val ( cc , & vs , v , & val_israw , in_israw , in_type , & val_type , & state , env )"	4304:6:95645:95734	1228509	20	True				
ANR	1229164	AssignmentExpression	"r = next_state_val ( cc , & vs , v , & val_israw , in_israw , in_type , & val_type , & state , env )"		1228509	0		=			
ANR	1229165	Identifier	r		1228509	0					
ANR	1229166	CallExpression	"next_state_val ( cc , & vs , v , & val_israw , in_israw , in_type , & val_type , & state , env )"		1228509	1					
ANR	1229167	Callee	next_state_val		1228509	0					
ANR	1229168	Identifier	next_state_val		1228509	0					
ANR	1229169	ArgumentList	cc		1228509	1					
ANR	1229170	Argument	cc		1228509	0					
ANR	1229171	Identifier	cc		1228509	0					
ANR	1229172	Argument	& vs		1228509	1					
ANR	1229173	UnaryOperationExpression	& vs		1228509	0					
ANR	1229174	UnaryOperator	&		1228509	0					
ANR	1229175	Identifier	vs		1228509	1					
ANR	1229176	Argument	v		1228509	2					
ANR	1229177	Identifier	v		1228509	0					
ANR	1229178	Argument	& val_israw		1228509	3					
ANR	1229179	UnaryOperationExpression	& val_israw		1228509	0					
ANR	1229180	UnaryOperator	&		1228509	0					
ANR	1229181	Identifier	val_israw		1228509	1					
ANR	1229182	Argument	in_israw		1228509	4					
ANR	1229183	Identifier	in_israw		1228509	0					
ANR	1229184	Argument	in_type		1228509	5					
ANR	1229185	Identifier	in_type		1228509	0					
ANR	1229186	Argument	& val_type		1228509	6					
ANR	1229187	UnaryOperationExpression	& val_type		1228509	0					
ANR	1229188	UnaryOperator	&		1228509	0					
ANR	1229189	Identifier	val_type		1228509	1					
ANR	1229190	Argument	& state		1228509	7					
ANR	1229191	UnaryOperationExpression	& state		1228509	0					
ANR	1229192	UnaryOperator	&		1228509	0					
ANR	1229193	Identifier	state		1228509	1					
ANR	1229194	Argument	env		1228509	8					
ANR	1229195	Identifier	env		1228509	0					
ANR	1229196	IfStatement	if ( r != 0 )		1228509	21					
ANR	1229197	Condition	r != 0	4306:10:95746:95751	1228509	0	True				
ANR	1229198	EqualityExpression	r != 0		1228509	0		!=			
ANR	1229199	Identifier	r		1228509	0					
ANR	1229200	PrimaryExpression	0		1228509	1					
ANR	1229201	GotoStatement	goto err ;	4306:18:95754:95762	1228509	1	True				
ANR	1229202	Identifier	err		1228509	0					
ANR	1229203	BreakStatement	break ;	4307:6:95770:95775	1228509	22	True				
ANR	1229204	Label	case TK_POSIX_BRACKET_OPEN :	4309:4:95782:95808	1228509	23	True				
ANR	1229205	Identifier	TK_POSIX_BRACKET_OPEN		1228509	0					
ANR	1229206	ExpressionStatement	"r = parse_posix_bracket ( cc , & p , end , env )"	4310:6:95816:95857	1228509	24	True				
ANR	1229207	AssignmentExpression	"r = parse_posix_bracket ( cc , & p , end , env )"		1228509	0		=			
ANR	1229208	Identifier	r		1228509	0					
ANR	1229209	CallExpression	"parse_posix_bracket ( cc , & p , end , env )"		1228509	1					
ANR	1229210	Callee	parse_posix_bracket		1228509	0					
ANR	1229211	Identifier	parse_posix_bracket		1228509	0					
ANR	1229212	ArgumentList	cc		1228509	1					
ANR	1229213	Argument	cc		1228509	0					
ANR	1229214	Identifier	cc		1228509	0					
ANR	1229215	Argument	& p		1228509	1					
ANR	1229216	UnaryOperationExpression	& p		1228509	0					
ANR	1229217	UnaryOperator	&		1228509	0					
ANR	1229218	Identifier	p		1228509	1					
ANR	1229219	Argument	end		1228509	2					
ANR	1229220	Identifier	end		1228509	0					
ANR	1229221	Argument	env		1228509	3					
ANR	1229222	Identifier	env		1228509	0					
ANR	1229223	IfStatement	if ( r < 0 )		1228509	25					
ANR	1229224	Condition	r < 0	4311:10:95869:95873	1228509	0	True				
ANR	1229225	RelationalExpression	r < 0		1228509	0		<			
ANR	1229226	Identifier	r		1228509	0					
ANR	1229227	PrimaryExpression	0		1228509	1					
ANR	1229228	GotoStatement	goto err ;	4311:17:95876:95884	1228509	1	True				
ANR	1229229	Identifier	err		1228509	0					
ANR	1229230	IfStatement	if ( r == 1 )		1228509	26					
ANR	1229231	Condition	r == 1	4312:10:95896:95901	1228509	0	True				
ANR	1229232	EqualityExpression	r == 1		1228509	0		==			
ANR	1229233	Identifier	r		1228509	0					
ANR	1229234	PrimaryExpression	1		1228509	1					
ANR	1229235	CompoundStatement		136:18:3011:3011	1228509	1					
ANR	1229236	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""["" )"	4313:1:95935:95965	1228509	0	True				
ANR	1229237	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""["" )"		1228509	0					
ANR	1229238	Callee	CC_ESC_WARN		1228509	0					
ANR	1229239	Identifier	CC_ESC_WARN		1228509	0					
ANR	1229240	ArgumentList	env		1228509	1					
ANR	1229241	Argument	env		1228509	0					
ANR	1229242	Identifier	env		1228509	0					
ANR	1229243	Argument	"( UChar * ) ""["""		1228509	1					
ANR	1229244	CastExpression	"( UChar * ) ""["""		1228509	0					
ANR	1229245	CastTarget	UChar *		1228509	0					
ANR	1229246	PrimaryExpression	"""["""		1228509	1					
ANR	1229247	ExpressionStatement	p = tok -> backp	4314:1:95968:95982	1228509	1	True				
ANR	1229248	AssignmentExpression	p = tok -> backp		1228509	0		=			
ANR	1229249	Identifier	p		1228509	0					
ANR	1229250	PtrMemberAccess	tok -> backp		1228509	1					
ANR	1229251	Identifier	tok		1228509	0					
ANR	1229252	Identifier	backp		1228509	1					
ANR	1229253	ExpressionStatement	v = ( OnigCodePoint ) tok -> u . c	4315:1:95985:96013	1228509	2	True				
ANR	1229254	AssignmentExpression	v = ( OnigCodePoint ) tok -> u . c		1228509	0		=			
ANR	1229255	Identifier	v		1228509	0					
ANR	1229256	CastExpression	( OnigCodePoint ) tok -> u . c		1228509	1					
ANR	1229257	CastTarget	OnigCodePoint		1228509	0					
ANR	1229258	MemberAccess	tok -> u . c		1228509	1					
ANR	1229259	PtrMemberAccess	tok -> u		1228509	0					
ANR	1229260	Identifier	tok		1228509	0					
ANR	1229261	Identifier	u		1228509	1					
ANR	1229262	Identifier	c		1228509	1					
ANR	1229263	ExpressionStatement	in_israw = 0	4316:1:96016:96028	1228509	3	True				
ANR	1229264	AssignmentExpression	in_israw = 0		1228509	0		=			
ANR	1229265	Identifier	in_israw		1228509	0					
ANR	1229266	PrimaryExpression	0		1228509	1					
ANR	1229267	GotoStatement	goto val_entry ;	4317:1:96031:96045	1228509	4	True				
ANR	1229268	Identifier	val_entry		1228509	0					
ANR	1229269	GotoStatement	goto next_class ;	4319:6:96061:96076	1228509	27	True				
ANR	1229270	Identifier	next_class		1228509	0					
ANR	1229271	BreakStatement	break ;	4320:6:96084:96089	1228509	28	True				
ANR	1229272	Label	case TK_CHAR_TYPE :	4322:4:96096:96113	1228509	29	True				
ANR	1229273	Identifier	TK_CHAR_TYPE		1228509	0					
ANR	1229274	ExpressionStatement	"r = add_ctype_to_cc ( cc , tok -> u . prop . ctype , tok -> u . prop . not , env )"	4323:6:96121:96185	1228509	30	True				
ANR	1229275	AssignmentExpression	"r = add_ctype_to_cc ( cc , tok -> u . prop . ctype , tok -> u . prop . not , env )"		1228509	0		=			
ANR	1229276	Identifier	r		1228509	0					
ANR	1229277	CallExpression	"add_ctype_to_cc ( cc , tok -> u . prop . ctype , tok -> u . prop . not , env )"		1228509	1					
ANR	1229278	Callee	add_ctype_to_cc		1228509	0					
ANR	1229279	Identifier	add_ctype_to_cc		1228509	0					
ANR	1229280	ArgumentList	cc		1228509	1					
ANR	1229281	Argument	cc		1228509	0					
ANR	1229282	Identifier	cc		1228509	0					
ANR	1229283	Argument	tok -> u . prop . ctype		1228509	1					
ANR	1229284	MemberAccess	tok -> u . prop . ctype		1228509	0					
ANR	1229285	MemberAccess	tok -> u . prop		1228509	0					
ANR	1229286	PtrMemberAccess	tok -> u		1228509	0					
ANR	1229287	Identifier	tok		1228509	0					
ANR	1229288	Identifier	u		1228509	1					
ANR	1229289	Identifier	prop		1228509	1					
ANR	1229290	Identifier	ctype		1228509	1					
ANR	1229291	Argument	tok -> u . prop . not		1228509	2					
ANR	1229292	MemberAccess	tok -> u . prop . not		1228509	0					
ANR	1229293	MemberAccess	tok -> u . prop		1228509	0					
ANR	1229294	PtrMemberAccess	tok -> u		1228509	0					
ANR	1229295	Identifier	tok		1228509	0					
ANR	1229296	Identifier	u		1228509	1					
ANR	1229297	Identifier	prop		1228509	1					
ANR	1229298	Identifier	not		1228509	1					
ANR	1229299	Argument	env		1228509	3					
ANR	1229300	Identifier	env		1228509	0					
ANR	1229301	IfStatement	if ( r != 0 )		1228509	31					
ANR	1229302	Condition	r != 0	4324:10:96197:96202	1228509	0	True				
ANR	1229303	EqualityExpression	r != 0		1228509	0		!=			
ANR	1229304	Identifier	r		1228509	0					
ANR	1229305	PrimaryExpression	0		1228509	1					
ANR	1229306	ReturnStatement	return r ;	4324:18:96205:96213	1228509	1	True				
ANR	1229307	Identifier	r		1228509	0					
ANR	1229308	Label	next_class :	4326:4:96220:96230	1228509	32	True				
ANR	1229309	Identifier	next_class		1228509	0					
ANR	1229310	ExpressionStatement	"r = next_state_class ( cc , & vs , & val_type , & state , env )"	4327:6:96238:96291	1228509	33	True				
ANR	1229311	AssignmentExpression	"r = next_state_class ( cc , & vs , & val_type , & state , env )"		1228509	0		=			
ANR	1229312	Identifier	r		1228509	0					
ANR	1229313	CallExpression	"next_state_class ( cc , & vs , & val_type , & state , env )"		1228509	1					
ANR	1229314	Callee	next_state_class		1228509	0					
ANR	1229315	Identifier	next_state_class		1228509	0					
ANR	1229316	ArgumentList	cc		1228509	1					
ANR	1229317	Argument	cc		1228509	0					
ANR	1229318	Identifier	cc		1228509	0					
ANR	1229319	Argument	& vs		1228509	1					
ANR	1229320	UnaryOperationExpression	& vs		1228509	0					
ANR	1229321	UnaryOperator	&		1228509	0					
ANR	1229322	Identifier	vs		1228509	1					
ANR	1229323	Argument	& val_type		1228509	2					
ANR	1229324	UnaryOperationExpression	& val_type		1228509	0					
ANR	1229325	UnaryOperator	&		1228509	0					
ANR	1229326	Identifier	val_type		1228509	1					
ANR	1229327	Argument	& state		1228509	3					
ANR	1229328	UnaryOperationExpression	& state		1228509	0					
ANR	1229329	UnaryOperator	&		1228509	0					
ANR	1229330	Identifier	state		1228509	1					
ANR	1229331	Argument	env		1228509	4					
ANR	1229332	Identifier	env		1228509	0					
ANR	1229333	IfStatement	if ( r != 0 )		1228509	34					
ANR	1229334	Condition	r != 0	4328:10:96303:96308	1228509	0	True				
ANR	1229335	EqualityExpression	r != 0		1228509	0		!=			
ANR	1229336	Identifier	r		1228509	0					
ANR	1229337	PrimaryExpression	0		1228509	1					
ANR	1229338	GotoStatement	goto err ;	4328:18:96311:96319	1228509	1	True				
ANR	1229339	Identifier	err		1228509	0					
ANR	1229340	BreakStatement	break ;	4329:6:96327:96332	1228509	35	True				
ANR	1229341	Label	case TK_CHAR_PROPERTY :	4331:4:96339:96360	1228509	36	True				
ANR	1229342	Identifier	TK_CHAR_PROPERTY		1228509	0					
ANR	1229343	CompoundStatement		157:1:3478:3487	1228509	37					
ANR	1229344	IdentifierDeclStatement	int ctype ;	4333:1:96371:96380	1228509	0	True				
ANR	1229345	IdentifierDecl	ctype		1228509	0					
ANR	1229346	IdentifierDeclType	int		1228509	0					
ANR	1229347	Identifier	ctype		1228509	1					
ANR	1229348	ExpressionStatement	"ctype = fetch_char_property_to_ctype ( & p , end , env )"	4335:1:96384:96434	1228509	1	True				
ANR	1229349	AssignmentExpression	"ctype = fetch_char_property_to_ctype ( & p , end , env )"		1228509	0		=			
ANR	1229350	Identifier	ctype		1228509	0					
ANR	1229351	CallExpression	"fetch_char_property_to_ctype ( & p , end , env )"		1228509	1					
ANR	1229352	Callee	fetch_char_property_to_ctype		1228509	0					
ANR	1229353	Identifier	fetch_char_property_to_ctype		1228509	0					
ANR	1229354	ArgumentList	& p		1228509	1					
ANR	1229355	Argument	& p		1228509	0					
ANR	1229356	UnaryOperationExpression	& p		1228509	0					
ANR	1229357	UnaryOperator	&		1228509	0					
ANR	1229358	Identifier	p		1228509	1					
ANR	1229359	Argument	end		1228509	1					
ANR	1229360	Identifier	end		1228509	0					
ANR	1229361	Argument	env		1228509	2					
ANR	1229362	Identifier	env		1228509	0					
ANR	1229363	IfStatement	if ( ctype < 0 )		1228509	2					
ANR	1229364	Condition	ctype < 0	4336:5:96441:96449	1228509	0	True				
ANR	1229365	RelationalExpression	ctype < 0		1228509	0		<			
ANR	1229366	Identifier	ctype		1228509	0					
ANR	1229367	PrimaryExpression	0		1228509	1					
ANR	1229368	ReturnStatement	return ctype ;	4336:16:96452:96464	1228509	1	True				
ANR	1229369	Identifier	ctype		1228509	0					
ANR	1229370	ExpressionStatement	"r = add_ctype_to_cc ( cc , ctype , tok -> u . prop . not , env )"	4337:1:96467:96519	1228509	3	True				
ANR	1229371	AssignmentExpression	"r = add_ctype_to_cc ( cc , ctype , tok -> u . prop . not , env )"		1228509	0		=			
ANR	1229372	Identifier	r		1228509	0					
ANR	1229373	CallExpression	"add_ctype_to_cc ( cc , ctype , tok -> u . prop . not , env )"		1228509	1					
ANR	1229374	Callee	add_ctype_to_cc		1228509	0					
ANR	1229375	Identifier	add_ctype_to_cc		1228509	0					
ANR	1229376	ArgumentList	cc		1228509	1					
ANR	1229377	Argument	cc		1228509	0					
ANR	1229378	Identifier	cc		1228509	0					
ANR	1229379	Argument	ctype		1228509	1					
ANR	1229380	Identifier	ctype		1228509	0					
ANR	1229381	Argument	tok -> u . prop . not		1228509	2					
ANR	1229382	MemberAccess	tok -> u . prop . not		1228509	0					
ANR	1229383	MemberAccess	tok -> u . prop		1228509	0					
ANR	1229384	PtrMemberAccess	tok -> u		1228509	0					
ANR	1229385	Identifier	tok		1228509	0					
ANR	1229386	Identifier	u		1228509	1					
ANR	1229387	Identifier	prop		1228509	1					
ANR	1229388	Identifier	not		1228509	1					
ANR	1229389	Argument	env		1228509	3					
ANR	1229390	Identifier	env		1228509	0					
ANR	1229391	IfStatement	if ( r != 0 )		1228509	4					
ANR	1229392	Condition	r != 0	4338:5:96526:96531	1228509	0	True				
ANR	1229393	EqualityExpression	r != 0		1228509	0		!=			
ANR	1229394	Identifier	r		1228509	0					
ANR	1229395	PrimaryExpression	0		1228509	1					
ANR	1229396	ReturnStatement	return r ;	4338:13:96534:96542	1228509	1	True				
ANR	1229397	Identifier	r		1228509	0					
ANR	1229398	GotoStatement	goto next_class ;	4339:1:96545:96560	1228509	5	True				
ANR	1229399	Identifier	next_class		1228509	0					
ANR	1229400	BreakStatement	break ;	4341:6:96576:96581	1228509	38	True				
ANR	1229401	Label	case TK_CC_RANGE :	4343:4:96588:96604	1228509	39	True				
ANR	1229402	Identifier	TK_CC_RANGE		1228509	0					
ANR	1229403	IfStatement	if ( state == CCS_VALUE )		1228509	40					
ANR	1229404	Condition	state == CCS_VALUE	4344:10:96616:96633	1228509	0	True				
ANR	1229405	EqualityExpression	state == CCS_VALUE		1228509	0		==			
ANR	1229406	Identifier	state		1228509	0					
ANR	1229407	Identifier	CCS_VALUE		1228509	1					
ANR	1229408	CompoundStatement		168:30:3743:3743	1228509	1					
ANR	1229409	ExpressionStatement	"r = fetch_token_in_cc ( tok , & p , end , env )"	4345:1:96639:96679	1228509	0	True				
ANR	1229410	AssignmentExpression	"r = fetch_token_in_cc ( tok , & p , end , env )"		1228509	0		=			
ANR	1229411	Identifier	r		1228509	0					
ANR	1229412	CallExpression	"fetch_token_in_cc ( tok , & p , end , env )"		1228509	1					
ANR	1229413	Callee	fetch_token_in_cc		1228509	0					
ANR	1229414	Identifier	fetch_token_in_cc		1228509	0					
ANR	1229415	ArgumentList	tok		1228509	1					
ANR	1229416	Argument	tok		1228509	0					
ANR	1229417	Identifier	tok		1228509	0					
ANR	1229418	Argument	& p		1228509	1					
ANR	1229419	UnaryOperationExpression	& p		1228509	0					
ANR	1229420	UnaryOperator	&		1228509	0					
ANR	1229421	Identifier	p		1228509	1					
ANR	1229422	Argument	end		1228509	2					
ANR	1229423	Identifier	end		1228509	0					
ANR	1229424	Argument	env		1228509	3					
ANR	1229425	Identifier	env		1228509	0					
ANR	1229426	IfStatement	if ( r < 0 )		1228509	1					
ANR	1229427	Condition	r < 0	4346:5:96686:96690	1228509	0	True				
ANR	1229428	RelationalExpression	r < 0		1228509	0		<			
ANR	1229429	Identifier	r		1228509	0					
ANR	1229430	PrimaryExpression	0		1228509	1					
ANR	1229431	GotoStatement	goto err ;	4346:12:96693:96701	1228509	1	True				
ANR	1229432	Identifier	err		1228509	0					
ANR	1229433	ExpressionStatement	fetched = 1	4347:1:96704:96715	1228509	2	True				
ANR	1229434	AssignmentExpression	fetched = 1		1228509	0		=			
ANR	1229435	Identifier	fetched		1228509	0					
ANR	1229436	PrimaryExpression	1		1228509	1					
ANR	1229437	IfStatement	if ( r == TK_CC_CLOSE )		1228509	3					
ANR	1229438	Condition	r == TK_CC_CLOSE	4348:5:96722:96737	1228509	0	True				
ANR	1229439	EqualityExpression	r == TK_CC_CLOSE		1228509	0		==			
ANR	1229440	Identifier	r		1228509	0					
ANR	1229441	Identifier	TK_CC_CLOSE		1228509	1					
ANR	1229442	CompoundStatement		172:23:3847:3847	1228509	1					
ANR	1229443	Label	range_end_val :	4349:1:96760:96773	1228509	0	True				
ANR	1229444	Identifier	range_end_val		1228509	0					
ANR	1229445	ExpressionStatement	v = ( OnigCodePoint ) '-'	4350:3:96778:96801	1228509	1	True				
ANR	1229446	AssignmentExpression	v = ( OnigCodePoint ) '-'		1228509	0		=			
ANR	1229447	Identifier	v		1228509	0					
ANR	1229448	CastExpression	( OnigCodePoint ) '-'		1228509	1					
ANR	1229449	CastTarget	OnigCodePoint		1228509	0					
ANR	1229450	PrimaryExpression	'-'		1228509	1					
ANR	1229451	ExpressionStatement	in_israw = 0	4351:3:96806:96818	1228509	2	True				
ANR	1229452	AssignmentExpression	in_israw = 0		1228509	0		=			
ANR	1229453	Identifier	in_israw		1228509	0					
ANR	1229454	PrimaryExpression	0		1228509	1					
ANR	1229455	GotoStatement	goto val_entry ;	4352:3:96823:96837	1228509	3	True				
ANR	1229456	Identifier	val_entry		1228509	0					
ANR	1229457	ElseStatement	else		1228509	0					
ANR	1229458	IfStatement	if ( r == TK_CC_AND )		1228509	0					
ANR	1229459	Condition	r == TK_CC_AND	4354:10:96852:96865	1228509	0	True				
ANR	1229460	EqualityExpression	r == TK_CC_AND		1228509	0		==			
ANR	1229461	Identifier	r		1228509	0					
ANR	1229462	Identifier	TK_CC_AND		1228509	1					
ANR	1229463	CompoundStatement		178:26:3975:3975	1228509	1					
ANR	1229464	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"	4355:3:96873:96903	1228509	0	True				
ANR	1229465	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"		1228509	0					
ANR	1229466	Callee	CC_ESC_WARN		1228509	0					
ANR	1229467	Identifier	CC_ESC_WARN		1228509	0					
ANR	1229468	ArgumentList	env		1228509	1					
ANR	1229469	Argument	env		1228509	0					
ANR	1229470	Identifier	env		1228509	0					
ANR	1229471	Argument	"( UChar * ) ""-"""		1228509	1					
ANR	1229472	CastExpression	"( UChar * ) ""-"""		1228509	0					
ANR	1229473	CastTarget	UChar *		1228509	0					
ANR	1229474	PrimaryExpression	"""-"""		1228509	1					
ANR	1229475	GotoStatement	goto range_end_val ;	4356:3:96908:96926	1228509	1	True				
ANR	1229476	Identifier	range_end_val		1228509	0					
ANR	1229477	ExpressionStatement	state = CCS_RANGE	4358:1:96932:96949	1228509	4	True				
ANR	1229478	AssignmentExpression	state = CCS_RANGE		1228509	0		=			
ANR	1229479	Identifier	state		1228509	0					
ANR	1229480	Identifier	CCS_RANGE		1228509	1					
ANR	1229481	ElseStatement	else		1228509	0					
ANR	1229482	IfStatement	if ( state == CCS_START )		1228509	0					
ANR	1229483	Condition	state == CCS_START	4360:15:96974:96991	1228509	0	True				
ANR	1229484	EqualityExpression	state == CCS_START		1228509	0		==			
ANR	1229485	Identifier	state		1228509	0					
ANR	1229486	Identifier	CCS_START		1228509	1					
ANR	1229487	CompoundStatement		184:35:4101:4101	1228509	1					
ANR	1229488	ExpressionStatement	v = ( OnigCodePoint ) tok -> u . c	4362:1:97021:97049	1228509	0	True				
ANR	1229489	AssignmentExpression	v = ( OnigCodePoint ) tok -> u . c		1228509	0		=			
ANR	1229490	Identifier	v		1228509	0					
ANR	1229491	CastExpression	( OnigCodePoint ) tok -> u . c		1228509	1					
ANR	1229492	CastTarget	OnigCodePoint		1228509	0					
ANR	1229493	MemberAccess	tok -> u . c		1228509	1					
ANR	1229494	PtrMemberAccess	tok -> u		1228509	0					
ANR	1229495	Identifier	tok		1228509	0					
ANR	1229496	Identifier	u		1228509	1					
ANR	1229497	Identifier	c		1228509	1					
ANR	1229498	ExpressionStatement	in_israw = 0	4363:1:97052:97064	1228509	1	True				
ANR	1229499	AssignmentExpression	in_israw = 0		1228509	0		=			
ANR	1229500	Identifier	in_israw		1228509	0					
ANR	1229501	PrimaryExpression	0		1228509	1					
ANR	1229502	ExpressionStatement	"r = fetch_token_in_cc ( tok , & p , end , env )"	4365:1:97068:97108	1228509	2	True				
ANR	1229503	AssignmentExpression	"r = fetch_token_in_cc ( tok , & p , end , env )"		1228509	0		=			
ANR	1229504	Identifier	r		1228509	0					
ANR	1229505	CallExpression	"fetch_token_in_cc ( tok , & p , end , env )"		1228509	1					
ANR	1229506	Callee	fetch_token_in_cc		1228509	0					
ANR	1229507	Identifier	fetch_token_in_cc		1228509	0					
ANR	1229508	ArgumentList	tok		1228509	1					
ANR	1229509	Argument	tok		1228509	0					
ANR	1229510	Identifier	tok		1228509	0					
ANR	1229511	Argument	& p		1228509	1					
ANR	1229512	UnaryOperationExpression	& p		1228509	0					
ANR	1229513	UnaryOperator	&		1228509	0					
ANR	1229514	Identifier	p		1228509	1					
ANR	1229515	Argument	end		1228509	2					
ANR	1229516	Identifier	end		1228509	0					
ANR	1229517	Argument	env		1228509	3					
ANR	1229518	Identifier	env		1228509	0					
ANR	1229519	IfStatement	if ( r < 0 )		1228509	3					
ANR	1229520	Condition	r < 0	4366:5:97115:97119	1228509	0	True				
ANR	1229521	RelationalExpression	r < 0		1228509	0		<			
ANR	1229522	Identifier	r		1228509	0					
ANR	1229523	PrimaryExpression	0		1228509	1					
ANR	1229524	GotoStatement	goto err ;	4366:12:97122:97130	1228509	1	True				
ANR	1229525	Identifier	err		1228509	0					
ANR	1229526	ExpressionStatement	fetched = 1	4367:1:97133:97144	1228509	4	True				
ANR	1229527	AssignmentExpression	fetched = 1		1228509	0		=			
ANR	1229528	Identifier	fetched		1228509	0					
ANR	1229529	PrimaryExpression	1		1228509	1					
ANR	1229530	IfStatement	if ( r == TK_CC_RANGE || and_start != 0 )		1228509	5					
ANR	1229531	Condition	r == TK_CC_RANGE || and_start != 0	4369:5:97186:97219	1228509	0	True				
ANR	1229532	OrExpression	r == TK_CC_RANGE || and_start != 0		1228509	0		||			
ANR	1229533	EqualityExpression	r == TK_CC_RANGE		1228509	0		==			
ANR	1229534	Identifier	r		1228509	0					
ANR	1229535	Identifier	TK_CC_RANGE		1228509	1					
ANR	1229536	EqualityExpression	and_start != 0		1228509	1		!=			
ANR	1229537	Identifier	and_start		1228509	0					
ANR	1229538	PrimaryExpression	0		1228509	1					
ANR	1229539	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"	4370:3:97225:97255	1228509	1	True				
ANR	1229540	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"		1228509	0					
ANR	1229541	Callee	CC_ESC_WARN		1228509	0					
ANR	1229542	Identifier	CC_ESC_WARN		1228509	0					
ANR	1229543	ArgumentList	env		1228509	1					
ANR	1229544	Argument	env		1228509	0					
ANR	1229545	Identifier	env		1228509	0					
ANR	1229546	Argument	"( UChar * ) ""-"""		1228509	1					
ANR	1229547	CastExpression	"( UChar * ) ""-"""		1228509	0					
ANR	1229548	CastTarget	UChar *		1228509	0					
ANR	1229549	PrimaryExpression	"""-"""		1228509	1					
ANR	1229550	GotoStatement	goto val_entry ;	4372:1:97259:97273	1228509	6	True				
ANR	1229551	Identifier	val_entry		1228509	0					
ANR	1229552	ElseStatement	else		1228509	0					
ANR	1229553	IfStatement	if ( state == CCS_RANGE )		1228509	0					
ANR	1229554	Condition	state == CCS_RANGE	4374:15:97298:97315	1228509	0	True				
ANR	1229555	EqualityExpression	state == CCS_RANGE		1228509	0		==			
ANR	1229556	Identifier	state		1228509	0					
ANR	1229557	Identifier	CCS_RANGE		1228509	1					
ANR	1229558	CompoundStatement		198:35:4425:4425	1228509	1					
ANR	1229559	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"	4375:1:97321:97351	1228509	0	True				
ANR	1229560	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"		1228509	0					
ANR	1229561	Callee	CC_ESC_WARN		1228509	0					
ANR	1229562	Identifier	CC_ESC_WARN		1228509	0					
ANR	1229563	ArgumentList	env		1228509	1					
ANR	1229564	Argument	env		1228509	0					
ANR	1229565	Identifier	env		1228509	0					
ANR	1229566	Argument	"( UChar * ) ""-"""		1228509	1					
ANR	1229567	CastExpression	"( UChar * ) ""-"""		1228509	0					
ANR	1229568	CastTarget	UChar *		1228509	0					
ANR	1229569	PrimaryExpression	"""-"""		1228509	1					
ANR	1229570	GotoStatement	goto sb_char ;	4376:1:97354:97366	1228509	1	True				
ANR	1229571	Identifier	sb_char		1228509	0					
ANR	1229572	ElseStatement	else		1228509	0					
ANR	1229573	CompoundStatement		202:11:4519:4519	1228509	0					
ANR	1229574	ExpressionStatement	"r = fetch_token_in_cc ( tok , & p , end , env )"	4379:1:97434:97474	1228509	0	True				
ANR	1229575	AssignmentExpression	"r = fetch_token_in_cc ( tok , & p , end , env )"		1228509	0		=			
ANR	1229576	Identifier	r		1228509	0					
ANR	1229577	CallExpression	"fetch_token_in_cc ( tok , & p , end , env )"		1228509	1					
ANR	1229578	Callee	fetch_token_in_cc		1228509	0					
ANR	1229579	Identifier	fetch_token_in_cc		1228509	0					
ANR	1229580	ArgumentList	tok		1228509	1					
ANR	1229581	Argument	tok		1228509	0					
ANR	1229582	Identifier	tok		1228509	0					
ANR	1229583	Argument	& p		1228509	1					
ANR	1229584	UnaryOperationExpression	& p		1228509	0					
ANR	1229585	UnaryOperator	&		1228509	0					
ANR	1229586	Identifier	p		1228509	1					
ANR	1229587	Argument	end		1228509	2					
ANR	1229588	Identifier	end		1228509	0					
ANR	1229589	Argument	env		1228509	3					
ANR	1229590	Identifier	env		1228509	0					
ANR	1229591	IfStatement	if ( r < 0 )		1228509	1					
ANR	1229592	Condition	r < 0	4380:5:97481:97485	1228509	0	True				
ANR	1229593	RelationalExpression	r < 0		1228509	0		<			
ANR	1229594	Identifier	r		1228509	0					
ANR	1229595	PrimaryExpression	0		1228509	1					
ANR	1229596	GotoStatement	goto err ;	4380:12:97488:97496	1228509	1	True				
ANR	1229597	Identifier	err		1228509	0					
ANR	1229598	ExpressionStatement	fetched = 1	4381:1:97499:97510	1228509	2	True				
ANR	1229599	AssignmentExpression	fetched = 1		1228509	0		=			
ANR	1229600	Identifier	fetched		1228509	0					
ANR	1229601	PrimaryExpression	1		1228509	1					
ANR	1229602	IfStatement	if ( r == TK_CC_CLOSE )		1228509	3					
ANR	1229603	Condition	r == TK_CC_CLOSE	4382:5:97517:97532	1228509	0	True				
ANR	1229604	EqualityExpression	r == TK_CC_CLOSE		1228509	0		==			
ANR	1229605	Identifier	r		1228509	0					
ANR	1229606	Identifier	TK_CC_CLOSE		1228509	1					
ANR	1229607	GotoStatement	goto range_end_val ;	4382:23:97535:97553	1228509	1	True				
ANR	1229608	Identifier	range_end_val		1228509	0					
ANR	1229609	ElseStatement	else		1228509	0					
ANR	1229610	IfStatement	if ( r == TK_CC_AND )		1228509	0					
ANR	1229611	Condition	r == TK_CC_AND	4383:10:97584:97597	1228509	0	True				
ANR	1229612	EqualityExpression	r == TK_CC_AND		1228509	0		==			
ANR	1229613	Identifier	r		1228509	0					
ANR	1229614	Identifier	TK_CC_AND		1228509	1					
ANR	1229615	CompoundStatement		207:26:4707:4707	1228509	1					
ANR	1229616	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"	4384:3:97605:97635	1228509	0	True				
ANR	1229617	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"		1228509	0					
ANR	1229618	Callee	CC_ESC_WARN		1228509	0					
ANR	1229619	Identifier	CC_ESC_WARN		1228509	0					
ANR	1229620	ArgumentList	env		1228509	1					
ANR	1229621	Argument	env		1228509	0					
ANR	1229622	Identifier	env		1228509	0					
ANR	1229623	Argument	"( UChar * ) ""-"""		1228509	1					
ANR	1229624	CastExpression	"( UChar * ) ""-"""		1228509	0					
ANR	1229625	CastTarget	UChar *		1228509	0					
ANR	1229626	PrimaryExpression	"""-"""		1228509	1					
ANR	1229627	GotoStatement	goto range_end_val ;	4385:3:97640:97658	1228509	1	True				
ANR	1229628	Identifier	range_end_val		1228509	0					
ANR	1229629	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC ) )"		1228509	4					
ANR	1229630	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC )"	4388:5:97670:97732	1228509	0	True				
ANR	1229631	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC )"		1228509	0					
ANR	1229632	Callee	IS_SYNTAX_BV		1228509	0					
ANR	1229633	Identifier	IS_SYNTAX_BV		1228509	0					
ANR	1229634	ArgumentList	env -> syntax		1228509	1					
ANR	1229635	Argument	env -> syntax		1228509	0					
ANR	1229636	PtrMemberAccess	env -> syntax		1228509	0					
ANR	1229637	Identifier	env		1228509	0					
ANR	1229638	Identifier	syntax		1228509	1					
ANR	1229639	Argument	ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC		1228509	1					
ANR	1229640	Identifier	ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC		1228509	0					
ANR	1229641	CompoundStatement		212:70:4842:4842	1228509	1					
ANR	1229642	ExpressionStatement	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"	4389:3:97740:97770	1228509	0	True				
ANR	1229643	CallExpression	"CC_ESC_WARN ( env , ( UChar * ) ""-"" )"		1228509	0					
ANR	1229644	Callee	CC_ESC_WARN		1228509	0					
ANR	1229645	Identifier	CC_ESC_WARN		1228509	0					
ANR	1229646	ArgumentList	env		1228509	1					
ANR	1229647	Argument	env		1228509	0					
ANR	1229648	Identifier	env		1228509	0					
ANR	1229649	Argument	"( UChar * ) ""-"""		1228509	1					
ANR	1229650	CastExpression	"( UChar * ) ""-"""		1228509	0					
ANR	1229651	CastTarget	UChar *		1228509	0					
ANR	1229652	PrimaryExpression	"""-"""		1228509	1					
ANR	1229653	GotoStatement	goto sb_char ;	4390:3:97775:97787	1228509	1	True				
ANR	1229654	Identifier	sb_char		1228509	0					
ANR	1229655	ExpressionStatement	r = ONIGERR_UNMATCHED_RANGE_SPECIFIER_IN_CHAR_CLASS	4392:1:97832:97883	1228509	5	True				
ANR	1229656	AssignmentExpression	r = ONIGERR_UNMATCHED_RANGE_SPECIFIER_IN_CHAR_CLASS		1228509	0		=			
ANR	1229657	Identifier	r		1228509	0					
ANR	1229658	Identifier	ONIGERR_UNMATCHED_RANGE_SPECIFIER_IN_CHAR_CLASS		1228509	1					
ANR	1229659	GotoStatement	goto err ;	4393:1:97886:97894	1228509	6	True				
ANR	1229660	Identifier	err		1228509	0					
ANR	1229661	BreakStatement	break ;	4395:6:97910:97915	1228509	41	True				
ANR	1229662	Label	case TK_CC_CC_OPEN :	4397:4:97922:97940	1228509	42	True				
ANR	1229663	Identifier	TK_CC_CC_OPEN		1228509	0					
ANR	1229664	CompoundStatement		224:1:5080:5095	1228509	43					
ANR	1229665	IdentifierDeclStatement	Node * anode ;	4399:1:97959:97970	1228509	0	True				
ANR	1229666	IdentifierDecl	* anode		1228509	0					
ANR	1229667	IdentifierDeclType	Node *		1228509	0					
ANR	1229668	Identifier	anode		1228509	1					
ANR	1229669	IdentifierDeclStatement	CClassNode * acc ;	4400:1:97973:97988	1228509	1	True				
ANR	1229670	IdentifierDecl	* acc		1228509	0					
ANR	1229671	IdentifierDeclType	CClassNode *		1228509	0					
ANR	1229672	Identifier	acc		1228509	1					
ANR	1229673	ExpressionStatement	"r = parse_char_class ( & anode , tok , & p , end , env )"	4402:1:97992:98039	1228509	2	True				
ANR	1229674	AssignmentExpression	"r = parse_char_class ( & anode , tok , & p , end , env )"		1228509	0		=			
ANR	1229675	Identifier	r		1228509	0					
ANR	1229676	CallExpression	"parse_char_class ( & anode , tok , & p , end , env )"		1228509	1					
ANR	1229677	Callee	parse_char_class		1228509	0					
ANR	1229678	Identifier	parse_char_class		1228509	0					
ANR	1229679	ArgumentList	& anode		1228509	1					
ANR	1229680	Argument	& anode		1228509	0					
ANR	1229681	UnaryOperationExpression	& anode		1228509	0					
ANR	1229682	UnaryOperator	&		1228509	0					
ANR	1229683	Identifier	anode		1228509	1					
ANR	1229684	Argument	tok		1228509	1					
ANR	1229685	Identifier	tok		1228509	0					
ANR	1229686	Argument	& p		1228509	2					
ANR	1229687	UnaryOperationExpression	& p		1228509	0					
ANR	1229688	UnaryOperator	&		1228509	0					
ANR	1229689	Identifier	p		1228509	1					
ANR	1229690	Argument	end		1228509	3					
ANR	1229691	Identifier	end		1228509	0					
ANR	1229692	Argument	env		1228509	4					
ANR	1229693	Identifier	env		1228509	0					
ANR	1229694	IfStatement	if ( r != 0 )		1228509	3					
ANR	1229695	Condition	r != 0	4403:5:98046:98051	1228509	0	True				
ANR	1229696	EqualityExpression	r != 0		1228509	0		!=			
ANR	1229697	Identifier	r		1228509	0					
ANR	1229698	PrimaryExpression	0		1228509	1					
ANR	1229699	GotoStatement	goto cc_open_err ;	4403:13:98054:98070	1228509	1	True				
ANR	1229700	Identifier	cc_open_err		1228509	0					
ANR	1229701	ExpressionStatement	acc = NCCLASS ( anode )	4404:1:98073:98093	1228509	4	True				
ANR	1229702	AssignmentExpression	acc = NCCLASS ( anode )		1228509	0		=			
ANR	1229703	Identifier	acc		1228509	0					
ANR	1229704	CallExpression	NCCLASS ( anode )		1228509	1					
ANR	1229705	Callee	NCCLASS		1228509	0					
ANR	1229706	Identifier	NCCLASS		1228509	0					
ANR	1229707	ArgumentList	anode		1228509	1					
ANR	1229708	Argument	anode		1228509	0					
ANR	1229709	Identifier	anode		1228509	0					
ANR	1229710	ExpressionStatement	"r = or_cclass ( cc , acc , env -> enc )"	4405:1:98096:98128	1228509	5	True				
ANR	1229711	AssignmentExpression	"r = or_cclass ( cc , acc , env -> enc )"		1228509	0		=			
ANR	1229712	Identifier	r		1228509	0					
ANR	1229713	CallExpression	"or_cclass ( cc , acc , env -> enc )"		1228509	1					
ANR	1229714	Callee	or_cclass		1228509	0					
ANR	1229715	Identifier	or_cclass		1228509	0					
ANR	1229716	ArgumentList	cc		1228509	1					
ANR	1229717	Argument	cc		1228509	0					
ANR	1229718	Identifier	cc		1228509	0					
ANR	1229719	Argument	acc		1228509	1					
ANR	1229720	Identifier	acc		1228509	0					
ANR	1229721	Argument	env -> enc		1228509	2					
ANR	1229722	PtrMemberAccess	env -> enc		1228509	0					
ANR	1229723	Identifier	env		1228509	0					
ANR	1229724	Identifier	enc		1228509	1					
ANR	1229725	ExpressionStatement	onig_node_free ( anode )	4407:1:98132:98153	1228509	6	True				
ANR	1229726	CallExpression	onig_node_free ( anode )		1228509	0					
ANR	1229727	Callee	onig_node_free		1228509	0					
ANR	1229728	Identifier	onig_node_free		1228509	0					
ANR	1229729	ArgumentList	anode		1228509	1					
ANR	1229730	Argument	anode		1228509	0					
ANR	1229731	Identifier	anode		1228509	0					
ANR	1229732	Label	cc_open_err :	4408:6:98161:98172	1228509	7	True				
ANR	1229733	Identifier	cc_open_err		1228509	0					
ANR	1229734	IfStatement	if ( r != 0 )		1228509	8					
ANR	1229735	Condition	r != 0	4409:5:98179:98184	1228509	0	True				
ANR	1229736	EqualityExpression	r != 0		1228509	0		!=			
ANR	1229737	Identifier	r		1228509	0					
ANR	1229738	PrimaryExpression	0		1228509	1					
ANR	1229739	GotoStatement	goto err ;	4409:13:98187:98195	1228509	1	True				
ANR	1229740	Identifier	err		1228509	0					
ANR	1229741	BreakStatement	break ;	4411:6:98211:98216	1228509	44	True				
ANR	1229742	Label	case TK_CC_AND :	4413:4:98223:98237	1228509	45	True				
ANR	1229743	Identifier	TK_CC_AND		1228509	0					
ANR	1229744	CompoundStatement		238:6:5361:5361	1228509	46					
ANR	1229745	IfStatement	if ( state == CCS_VALUE )		1228509	0					
ANR	1229746	Condition	state == CCS_VALUE	4415:5:98261:98278	1228509	0	True				
ANR	1229747	EqualityExpression	state == CCS_VALUE		1228509	0		==			
ANR	1229748	Identifier	state		1228509	0					
ANR	1229749	Identifier	CCS_VALUE		1228509	1					
ANR	1229750	CompoundStatement		239:25:5388:5388	1228509	1					
ANR	1229751	ExpressionStatement	"r = next_state_val ( cc , & vs , 0 , & val_israw , 0 , val_type , & val_type , & state , env )"	4416:3:98286:98373	1228509	0	True				
ANR	1229752	AssignmentExpression	"r = next_state_val ( cc , & vs , 0 , & val_israw , 0 , val_type , & val_type , & state , env )"		1228509	0		=			
ANR	1229753	Identifier	r		1228509	0					
ANR	1229754	CallExpression	"next_state_val ( cc , & vs , 0 , & val_israw , 0 , val_type , & val_type , & state , env )"		1228509	1					
ANR	1229755	Callee	next_state_val		1228509	0					
ANR	1229756	Identifier	next_state_val		1228509	0					
ANR	1229757	ArgumentList	cc		1228509	1					
ANR	1229758	Argument	cc		1228509	0					
ANR	1229759	Identifier	cc		1228509	0					
ANR	1229760	Argument	& vs		1228509	1					
ANR	1229761	UnaryOperationExpression	& vs		1228509	0					
ANR	1229762	UnaryOperator	&		1228509	0					
ANR	1229763	Identifier	vs		1228509	1					
ANR	1229764	Argument	0		1228509	2					
ANR	1229765	PrimaryExpression	0		1228509	0					
ANR	1229766	Argument	& val_israw		1228509	3					
ANR	1229767	UnaryOperationExpression	& val_israw		1228509	0					
ANR	1229768	UnaryOperator	&		1228509	0					
ANR	1229769	Identifier	val_israw		1228509	1					
ANR	1229770	Argument	0		1228509	4					
ANR	1229771	PrimaryExpression	0		1228509	0					
ANR	1229772	Argument	val_type		1228509	5					
ANR	1229773	Identifier	val_type		1228509	0					
ANR	1229774	Argument	& val_type		1228509	6					
ANR	1229775	UnaryOperationExpression	& val_type		1228509	0					
ANR	1229776	UnaryOperator	&		1228509	0					
ANR	1229777	Identifier	val_type		1228509	1					
ANR	1229778	Argument	& state		1228509	7					
ANR	1229779	UnaryOperationExpression	& state		1228509	0					
ANR	1229780	UnaryOperator	&		1228509	0					
ANR	1229781	Identifier	state		1228509	1					
ANR	1229782	Argument	env		1228509	8					
ANR	1229783	Identifier	env		1228509	0					
ANR	1229784	IfStatement	if ( r != 0 )		1228509	1					
ANR	1229785	Condition	r != 0	4418:7:98382:98387	1228509	0	True				
ANR	1229786	EqualityExpression	r != 0		1228509	0		!=			
ANR	1229787	Identifier	r		1228509	0					
ANR	1229788	PrimaryExpression	0		1228509	1					
ANR	1229789	GotoStatement	goto err ;	4418:15:98390:98398	1228509	1	True				
ANR	1229790	Identifier	err		1228509	0					
ANR	1229791	ExpressionStatement	and_start = 1	4421:1:98438:98451	1228509	1	True				
ANR	1229792	AssignmentExpression	and_start = 1		1228509	0		=			
ANR	1229793	Identifier	and_start		1228509	0					
ANR	1229794	PrimaryExpression	1		1228509	1					
ANR	1229795	ExpressionStatement	state = CCS_START	4422:1:98454:98471	1228509	2	True				
ANR	1229796	AssignmentExpression	state = CCS_START		1228509	0		=			
ANR	1229797	Identifier	state		1228509	0					
ANR	1229798	Identifier	CCS_START		1228509	1					
ANR	1229799	IfStatement	if ( IS_NOT_NULL ( prev_cc ) )		1228509	3					
ANR	1229800	Condition	IS_NOT_NULL ( prev_cc )	4424:5:98479:98498	1228509	0	True				
ANR	1229801	CallExpression	IS_NOT_NULL ( prev_cc )		1228509	0					
ANR	1229802	Callee	IS_NOT_NULL		1228509	0					
ANR	1229803	Identifier	IS_NOT_NULL		1228509	0					
ANR	1229804	ArgumentList	prev_cc		1228509	1					
ANR	1229805	Argument	prev_cc		1228509	0					
ANR	1229806	Identifier	prev_cc		1228509	0					
ANR	1229807	CompoundStatement		248:27:5608:5608	1228509	1					
ANR	1229808	ExpressionStatement	"r = and_cclass ( prev_cc , cc , env -> enc )"	4425:3:98506:98543	1228509	0	True				
ANR	1229809	AssignmentExpression	"r = and_cclass ( prev_cc , cc , env -> enc )"		1228509	0		=			
ANR	1229810	Identifier	r		1228509	0					
ANR	1229811	CallExpression	"and_cclass ( prev_cc , cc , env -> enc )"		1228509	1					
ANR	1229812	Callee	and_cclass		1228509	0					
ANR	1229813	Identifier	and_cclass		1228509	0					
ANR	1229814	ArgumentList	prev_cc		1228509	1					
ANR	1229815	Argument	prev_cc		1228509	0					
ANR	1229816	Identifier	prev_cc		1228509	0					
ANR	1229817	Argument	cc		1228509	1					
ANR	1229818	Identifier	cc		1228509	0					
ANR	1229819	Argument	env -> enc		1228509	2					
ANR	1229820	PtrMemberAccess	env -> enc		1228509	0					
ANR	1229821	Identifier	env		1228509	0					
ANR	1229822	Identifier	enc		1228509	1					
ANR	1229823	IfStatement	if ( r != 0 )		1228509	1					
ANR	1229824	Condition	r != 0	4426:7:98552:98557	1228509	0	True				
ANR	1229825	EqualityExpression	r != 0		1228509	0		!=			
ANR	1229826	Identifier	r		1228509	0					
ANR	1229827	PrimaryExpression	0		1228509	1					
ANR	1229828	GotoStatement	goto err ;	4426:15:98560:98568	1228509	1	True				
ANR	1229829	Identifier	err		1228509	0					
ANR	1229830	ExpressionStatement	bbuf_free ( cc -> mbuf )	4427:3:98573:98592	1228509	2	True				
ANR	1229831	CallExpression	bbuf_free ( cc -> mbuf )		1228509	0					
ANR	1229832	Callee	bbuf_free		1228509	0					
ANR	1229833	Identifier	bbuf_free		1228509	0					
ANR	1229834	ArgumentList	cc -> mbuf		1228509	1					
ANR	1229835	Argument	cc -> mbuf		1228509	0					
ANR	1229836	PtrMemberAccess	cc -> mbuf		1228509	0					
ANR	1229837	Identifier	cc		1228509	0					
ANR	1229838	Identifier	mbuf		1228509	1					
ANR	1229839	ElseStatement	else		1228509	0					
ANR	1229840	CompoundStatement		253:6:5710:5710	1228509	0					
ANR	1229841	ExpressionStatement	prev_cc = cc	4430:3:98608:98620	1228509	0	True				
ANR	1229842	AssignmentExpression	prev_cc = cc		1228509	0		=			
ANR	1229843	Identifier	prev_cc		1228509	0					
ANR	1229844	Identifier	cc		1228509	1					
ANR	1229845	ExpressionStatement	cc = & work_cc	4431:3:98625:98638	1228509	1	True				
ANR	1229846	AssignmentExpression	cc = & work_cc		1228509	0		=			
ANR	1229847	Identifier	cc		1228509	0					
ANR	1229848	UnaryOperationExpression	& work_cc		1228509	1					
ANR	1229849	UnaryOperator	&		1228509	0					
ANR	1229850	Identifier	work_cc		1228509	1					
ANR	1229851	ExpressionStatement	initialize_cclass ( cc )	4433:1:98644:98665	1228509	4	True				
ANR	1229852	CallExpression	initialize_cclass ( cc )		1228509	0					
ANR	1229853	Callee	initialize_cclass		1228509	0					
ANR	1229854	Identifier	initialize_cclass		1228509	0					
ANR	1229855	ArgumentList	cc		1228509	1					
ANR	1229856	Argument	cc		1228509	0					
ANR	1229857	Identifier	cc		1228509	0					
ANR	1229858	BreakStatement	break ;	4435:6:98681:98686	1228509	47	True				
ANR	1229859	Label	case TK_EOT :	4437:4:98693:98704	1228509	48	True				
ANR	1229860	Identifier	TK_EOT		1228509	0					
ANR	1229861	ExpressionStatement	r = ONIGERR_PREMATURE_END_OF_CHAR_CLASS	4438:6:98712:98751	1228509	49	True				
ANR	1229862	AssignmentExpression	r = ONIGERR_PREMATURE_END_OF_CHAR_CLASS		1228509	0		=			
ANR	1229863	Identifier	r		1228509	0					
ANR	1229864	Identifier	ONIGERR_PREMATURE_END_OF_CHAR_CLASS		1228509	1					
ANR	1229865	GotoStatement	goto err ;	4439:6:98759:98767	1228509	50	True				
ANR	1229866	Identifier	err		1228509	0					
ANR	1229867	BreakStatement	break ;	4440:6:98775:98780	1228509	51	True				
ANR	1229868	Label	default :	4441:4:98786:98793	1228509	52	True				
ANR	1229869	Identifier	default		1228509	0					
ANR	1229870	ExpressionStatement	r = ONIGERR_PARSER_BUG	4442:6:98801:98823	1228509	53	True				
ANR	1229871	AssignmentExpression	r = ONIGERR_PARSER_BUG		1228509	0		=			
ANR	1229872	Identifier	r		1228509	0					
ANR	1229873	Identifier	ONIGERR_PARSER_BUG		1228509	1					
ANR	1229874	GotoStatement	goto err ;	4443:6:98831:98839	1228509	54	True				
ANR	1229875	Identifier	err		1228509	0					
ANR	1229876	BreakStatement	break ;	4444:6:98847:98852	1228509	55	True				
ANR	1229877	IfStatement	if ( fetched )		1228509	2					
ANR	1229878	Condition	fetched	4447:8:98869:98875	1228509	0	True				
ANR	1229879	Identifier	fetched		1228509	0					
ANR	1229880	ExpressionStatement	r = tok -> type	4448:6:98884:98897	1228509	1	True				
ANR	1229881	AssignmentExpression	r = tok -> type		1228509	0		=			
ANR	1229882	Identifier	r		1228509	0					
ANR	1229883	PtrMemberAccess	tok -> type		1228509	1					
ANR	1229884	Identifier	tok		1228509	0					
ANR	1229885	Identifier	type		1228509	1					
ANR	1229886	ElseStatement	else		1228509	0					
ANR	1229887	CompoundStatement		273:9:6015:6015	1228509	0					
ANR	1229888	ExpressionStatement	"r = fetch_token_in_cc ( tok , & p , end , env )"	4450:6:98916:98956	1228509	0	True				
ANR	1229889	AssignmentExpression	"r = fetch_token_in_cc ( tok , & p , end , env )"		1228509	0		=			
ANR	1229890	Identifier	r		1228509	0					
ANR	1229891	CallExpression	"fetch_token_in_cc ( tok , & p , end , env )"		1228509	1					
ANR	1229892	Callee	fetch_token_in_cc		1228509	0					
ANR	1229893	Identifier	fetch_token_in_cc		1228509	0					
ANR	1229894	ArgumentList	tok		1228509	1					
ANR	1229895	Argument	tok		1228509	0					
ANR	1229896	Identifier	tok		1228509	0					
ANR	1229897	Argument	& p		1228509	1					
ANR	1229898	UnaryOperationExpression	& p		1228509	0					
ANR	1229899	UnaryOperator	&		1228509	0					
ANR	1229900	Identifier	p		1228509	1					
ANR	1229901	Argument	end		1228509	2					
ANR	1229902	Identifier	end		1228509	0					
ANR	1229903	Argument	env		1228509	3					
ANR	1229904	Identifier	env		1228509	0					
ANR	1229905	IfStatement	if ( r < 0 )		1228509	1					
ANR	1229906	Condition	r < 0	4451:10:98968:98972	1228509	0	True				
ANR	1229907	RelationalExpression	r < 0		1228509	0		<			
ANR	1229908	Identifier	r		1228509	0					
ANR	1229909	PrimaryExpression	0		1228509	1					
ANR	1229910	GotoStatement	goto err ;	4451:17:98975:98983	1228509	1	True				
ANR	1229911	Identifier	err		1228509	0					
ANR	1229912	IfStatement	if ( state == CCS_VALUE )		1228509	22					
ANR	1229913	Condition	state == CCS_VALUE	4455:6:99002:99019	1228509	0	True				
ANR	1229914	EqualityExpression	state == CCS_VALUE		1228509	0		==			
ANR	1229915	Identifier	state		1228509	0					
ANR	1229916	Identifier	CCS_VALUE		1228509	1					
ANR	1229917	CompoundStatement		279:26:6129:6129	1228509	1					
ANR	1229918	ExpressionStatement	"r = next_state_val ( cc , & vs , 0 , & val_israw , 0 , val_type , & val_type , & state , env )"	4456:4:99028:99116	1228509	0	True				
ANR	1229919	AssignmentExpression	"r = next_state_val ( cc , & vs , 0 , & val_israw , 0 , val_type , & val_type , & state , env )"		1228509	0		=			
ANR	1229920	Identifier	r		1228509	0					
ANR	1229921	CallExpression	"next_state_val ( cc , & vs , 0 , & val_israw , 0 , val_type , & val_type , & state , env )"		1228509	1					
ANR	1229922	Callee	next_state_val		1228509	0					
ANR	1229923	Identifier	next_state_val		1228509	0					
ANR	1229924	ArgumentList	cc		1228509	1					
ANR	1229925	Argument	cc		1228509	0					
ANR	1229926	Identifier	cc		1228509	0					
ANR	1229927	Argument	& vs		1228509	1					
ANR	1229928	UnaryOperationExpression	& vs		1228509	0					
ANR	1229929	UnaryOperator	&		1228509	0					
ANR	1229930	Identifier	vs		1228509	1					
ANR	1229931	Argument	0		1228509	2					
ANR	1229932	PrimaryExpression	0		1228509	0					
ANR	1229933	Argument	& val_israw		1228509	3					
ANR	1229934	UnaryOperationExpression	& val_israw		1228509	0					
ANR	1229935	UnaryOperator	&		1228509	0					
ANR	1229936	Identifier	val_israw		1228509	1					
ANR	1229937	Argument	0		1228509	4					
ANR	1229938	PrimaryExpression	0		1228509	0					
ANR	1229939	Argument	val_type		1228509	5					
ANR	1229940	Identifier	val_type		1228509	0					
ANR	1229941	Argument	& val_type		1228509	6					
ANR	1229942	UnaryOperationExpression	& val_type		1228509	0					
ANR	1229943	UnaryOperator	&		1228509	0					
ANR	1229944	Identifier	val_type		1228509	1					
ANR	1229945	Argument	& state		1228509	7					
ANR	1229946	UnaryOperationExpression	& state		1228509	0					
ANR	1229947	UnaryOperator	&		1228509	0					
ANR	1229948	Identifier	state		1228509	1					
ANR	1229949	Argument	env		1228509	8					
ANR	1229950	Identifier	env		1228509	0					
ANR	1229951	IfStatement	if ( r != 0 )		1228509	1					
ANR	1229952	Condition	r != 0	4458:8:99126:99131	1228509	0	True				
ANR	1229953	EqualityExpression	r != 0		1228509	0		!=			
ANR	1229954	Identifier	r		1228509	0					
ANR	1229955	PrimaryExpression	0		1228509	1					
ANR	1229956	GotoStatement	goto err ;	4458:16:99134:99142	1228509	1	True				
ANR	1229957	Identifier	err		1228509	0					
ANR	1229958	IfStatement	if ( IS_NOT_NULL ( prev_cc ) )		1228509	23					
ANR	1229959	Condition	IS_NOT_NULL ( prev_cc )	4461:6:99155:99174	1228509	0	True				
ANR	1229960	CallExpression	IS_NOT_NULL ( prev_cc )		1228509	0					
ANR	1229961	Callee	IS_NOT_NULL		1228509	0					
ANR	1229962	Identifier	IS_NOT_NULL		1228509	0					
ANR	1229963	ArgumentList	prev_cc		1228509	1					
ANR	1229964	Argument	prev_cc		1228509	0					
ANR	1229965	Identifier	prev_cc		1228509	0					
ANR	1229966	CompoundStatement		285:28:6284:6284	1228509	1					
ANR	1229967	ExpressionStatement	"r = and_cclass ( prev_cc , cc , env -> enc )"	4462:4:99183:99220	1228509	0	True				
ANR	1229968	AssignmentExpression	"r = and_cclass ( prev_cc , cc , env -> enc )"		1228509	0		=			
ANR	1229969	Identifier	r		1228509	0					
ANR	1229970	CallExpression	"and_cclass ( prev_cc , cc , env -> enc )"		1228509	1					
ANR	1229971	Callee	and_cclass		1228509	0					
ANR	1229972	Identifier	and_cclass		1228509	0					
ANR	1229973	ArgumentList	prev_cc		1228509	1					
ANR	1229974	Argument	prev_cc		1228509	0					
ANR	1229975	Identifier	prev_cc		1228509	0					
ANR	1229976	Argument	cc		1228509	1					
ANR	1229977	Identifier	cc		1228509	0					
ANR	1229978	Argument	env -> enc		1228509	2					
ANR	1229979	PtrMemberAccess	env -> enc		1228509	0					
ANR	1229980	Identifier	env		1228509	0					
ANR	1229981	Identifier	enc		1228509	1					
ANR	1229982	IfStatement	if ( r != 0 )		1228509	1					
ANR	1229983	Condition	r != 0	4463:8:99230:99235	1228509	0	True				
ANR	1229984	EqualityExpression	r != 0		1228509	0		!=			
ANR	1229985	Identifier	r		1228509	0					
ANR	1229986	PrimaryExpression	0		1228509	1					
ANR	1229987	GotoStatement	goto err ;	4463:16:99238:99246	1228509	1	True				
ANR	1229988	Identifier	err		1228509	0					
ANR	1229989	ExpressionStatement	bbuf_free ( cc -> mbuf )	4464:4:99252:99271	1228509	2	True				
ANR	1229990	CallExpression	bbuf_free ( cc -> mbuf )		1228509	0					
ANR	1229991	Callee	bbuf_free		1228509	0					
ANR	1229992	Identifier	bbuf_free		1228509	0					
ANR	1229993	ArgumentList	cc -> mbuf		1228509	1					
ANR	1229994	Argument	cc -> mbuf		1228509	0					
ANR	1229995	PtrMemberAccess	cc -> mbuf		1228509	0					
ANR	1229996	Identifier	cc		1228509	0					
ANR	1229997	Identifier	mbuf		1228509	1					
ANR	1229998	ExpressionStatement	cc = prev_cc	4465:4:99277:99289	1228509	3	True				
ANR	1229999	AssignmentExpression	cc = prev_cc		1228509	0		=			
ANR	1230000	Identifier	cc		1228509	0					
ANR	1230001	Identifier	prev_cc		1228509	1					
ANR	1230002	IfStatement	if ( neg != 0 )		1228509	24					
ANR	1230003	Condition	neg != 0	4468:6:99302:99309	1228509	0	True				
ANR	1230004	EqualityExpression	neg != 0		1228509	0		!=			
ANR	1230005	Identifier	neg		1228509	0					
ANR	1230006	PrimaryExpression	0		1228509	1					
ANR	1230007	ExpressionStatement	NCCLASS_SET_NOT ( cc )	4469:4:99316:99335	1228509	1	True				
ANR	1230008	CallExpression	NCCLASS_SET_NOT ( cc )		1228509	0					
ANR	1230009	Callee	NCCLASS_SET_NOT		1228509	0					
ANR	1230010	Identifier	NCCLASS_SET_NOT		1228509	0					
ANR	1230011	ArgumentList	cc		1228509	1					
ANR	1230012	Argument	cc		1228509	0					
ANR	1230013	Identifier	cc		1228509	0					
ANR	1230014	ElseStatement	else		1228509	0					
ANR	1230015	ExpressionStatement	NCCLASS_CLEAR_NOT ( cc )	4471:4:99348:99369	1228509	0	True				
ANR	1230016	CallExpression	NCCLASS_CLEAR_NOT ( cc )		1228509	0					
ANR	1230017	Callee	NCCLASS_CLEAR_NOT		1228509	0					
ANR	1230018	Identifier	NCCLASS_CLEAR_NOT		1228509	0					
ANR	1230019	ArgumentList	cc		1228509	1					
ANR	1230020	Argument	cc		1228509	0					
ANR	1230021	Identifier	cc		1228509	0					
ANR	1230022	IfStatement	"if ( IS_NCCLASS_NOT ( cc ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC ) )"		1228509	25					
ANR	1230023	Condition	"IS_NCCLASS_NOT ( cc ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC )"	4472:6:99377:99466	1228509	0	True				
ANR	1230024	AndExpression	"IS_NCCLASS_NOT ( cc ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC )"		1228509	0		&&			
ANR	1230025	CallExpression	IS_NCCLASS_NOT ( cc )		1228509	0					
ANR	1230026	Callee	IS_NCCLASS_NOT		1228509	0					
ANR	1230027	Identifier	IS_NCCLASS_NOT		1228509	0					
ANR	1230028	ArgumentList	cc		1228509	1					
ANR	1230029	Argument	cc		1228509	0					
ANR	1230030	Identifier	cc		1228509	0					
ANR	1230031	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC )"		1228509	1					
ANR	1230032	Callee	IS_SYNTAX_BV		1228509	0					
ANR	1230033	Identifier	IS_SYNTAX_BV		1228509	0					
ANR	1230034	ArgumentList	env -> syntax		1228509	1					
ANR	1230035	Argument	env -> syntax		1228509	0					
ANR	1230036	PtrMemberAccess	env -> syntax		1228509	0					
ANR	1230037	Identifier	env		1228509	0					
ANR	1230038	Identifier	syntax		1228509	1					
ANR	1230039	Argument	ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC		1228509	1					
ANR	1230040	Identifier	ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC		1228509	0					
ANR	1230041	CompoundStatement		298:4:6582:6594	1228509	1					
ANR	1230042	IdentifierDeclStatement	int is_empty ;	4474:4:99475:99487	1228509	0	True				
ANR	1230043	IdentifierDecl	is_empty		1228509	0					
ANR	1230044	IdentifierDeclType	int		1228509	0					
ANR	1230045	Identifier	is_empty		1228509	1					
ANR	1230046	ExpressionStatement	is_empty = ( IS_NULL ( cc -> mbuf ) ? 1 : 0 )	4476:4:99494:99532	1228509	1	True				
ANR	1230047	AssignmentExpression	is_empty = ( IS_NULL ( cc -> mbuf ) ? 1 : 0 )		1228509	0		=			
ANR	1230048	Identifier	is_empty		1228509	0					
ANR	1230049	ConditionalExpression	IS_NULL ( cc -> mbuf ) ? 1 : 0		1228509	1					
ANR	1230050	Condition	IS_NULL ( cc -> mbuf )		1228509	0					
ANR	1230051	CallExpression	IS_NULL ( cc -> mbuf )		1228509	0					
ANR	1230052	Callee	IS_NULL		1228509	0					
ANR	1230053	Identifier	IS_NULL		1228509	0					
ANR	1230054	ArgumentList	cc -> mbuf		1228509	1					
ANR	1230055	Argument	cc -> mbuf		1228509	0					
ANR	1230056	PtrMemberAccess	cc -> mbuf		1228509	0					
ANR	1230057	Identifier	cc		1228509	0					
ANR	1230058	Identifier	mbuf		1228509	1					
ANR	1230059	PrimaryExpression	1		1228509	1					
ANR	1230060	PrimaryExpression	0		1228509	2					
ANR	1230061	IfStatement	if ( is_empty != 0 )		1228509	2					
ANR	1230062	Condition	is_empty != 0	4477:8:99542:99554	1228509	0	True				
ANR	1230063	EqualityExpression	is_empty != 0		1228509	0		!=			
ANR	1230064	Identifier	is_empty		1228509	0					
ANR	1230065	PrimaryExpression	0		1228509	1					
ANR	1230066	ExpressionStatement	"BITSET_IS_EMPTY ( cc -> bs , is_empty )"	4478:6:99563:99596	1228509	1	True				
ANR	1230067	CallExpression	"BITSET_IS_EMPTY ( cc -> bs , is_empty )"		1228509	0					
ANR	1230068	Callee	BITSET_IS_EMPTY		1228509	0					
ANR	1230069	Identifier	BITSET_IS_EMPTY		1228509	0					
ANR	1230070	ArgumentList	cc -> bs		1228509	1					
ANR	1230071	Argument	cc -> bs		1228509	0					
ANR	1230072	PtrMemberAccess	cc -> bs		1228509	0					
ANR	1230073	Identifier	cc		1228509	0					
ANR	1230074	Identifier	bs		1228509	1					
ANR	1230075	Argument	is_empty		1228509	1					
ANR	1230076	Identifier	is_empty		1228509	0					
ANR	1230077	IfStatement	if ( is_empty == 0 )		1228509	3					
ANR	1230078	Condition	is_empty == 0	4480:8:99607:99619	1228509	0	True				
ANR	1230079	EqualityExpression	is_empty == 0		1228509	0		==			
ANR	1230080	Identifier	is_empty		1228509	0					
ANR	1230081	PrimaryExpression	0		1228509	1					
ANR	1230082	CompoundStatement		304:23:6729:6729	1228509	1					
ANR	1230083	Statement	define	4481:1:99625:99630	1228509	0	True				
ANR	1230084	Statement	NEWLINE_CODE	4481:8:99632:99643	1228509	1	True				
ANR	1230085	Statement	0x0a	4481:24:99648:99651	1228509	2	True				
ANR	1230086	IfStatement	"if ( ONIGENC_IS_CODE_NEWLINE ( env -> enc , NEWLINE_CODE ) )"		1228509	3					
ANR	1230087	Condition	"ONIGENC_IS_CODE_NEWLINE ( env -> enc , NEWLINE_CODE )"	4483:10:99664:99710	1228509	0	True				
ANR	1230088	CallExpression	"ONIGENC_IS_CODE_NEWLINE ( env -> enc , NEWLINE_CODE )"		1228509	0					
ANR	1230089	Callee	ONIGENC_IS_CODE_NEWLINE		1228509	0					
ANR	1230090	Identifier	ONIGENC_IS_CODE_NEWLINE		1228509	0					
ANR	1230091	ArgumentList	env -> enc		1228509	1					
ANR	1230092	Argument	env -> enc		1228509	0					
ANR	1230093	PtrMemberAccess	env -> enc		1228509	0					
ANR	1230094	Identifier	env		1228509	0					
ANR	1230095	Identifier	enc		1228509	1					
ANR	1230096	Argument	NEWLINE_CODE		1228509	1					
ANR	1230097	Identifier	NEWLINE_CODE		1228509	0					
ANR	1230098	CompoundStatement		307:59:6820:6820	1228509	1					
ANR	1230099	IfStatement	"if ( ONIGENC_CODE_TO_MBCLEN ( env -> enc , NEWLINE_CODE ) == 1 )"		1228509	0					
ANR	1230100	Condition	"ONIGENC_CODE_TO_MBCLEN ( env -> enc , NEWLINE_CODE ) == 1"	4484:12:99727:99777	1228509	0	True				
ANR	1230101	EqualityExpression	"ONIGENC_CODE_TO_MBCLEN ( env -> enc , NEWLINE_CODE ) == 1"		1228509	0		==			
ANR	1230102	CallExpression	"ONIGENC_CODE_TO_MBCLEN ( env -> enc , NEWLINE_CODE )"		1228509	0					
ANR	1230103	Callee	ONIGENC_CODE_TO_MBCLEN		1228509	0					
ANR	1230104	Identifier	ONIGENC_CODE_TO_MBCLEN		1228509	0					
ANR	1230105	ArgumentList	env -> enc		1228509	1					
ANR	1230106	Argument	env -> enc		1228509	0					
ANR	1230107	PtrMemberAccess	env -> enc		1228509	0					
ANR	1230108	Identifier	env		1228509	0					
ANR	1230109	Identifier	enc		1228509	1					
ANR	1230110	Argument	NEWLINE_CODE		1228509	1					
ANR	1230111	Identifier	NEWLINE_CODE		1228509	0					
ANR	1230112	PrimaryExpression	1		1228509	1					
ANR	1230113	ExpressionStatement	"BITSET_SET_BIT ( cc -> bs , NEWLINE_CODE )"	4485:10:99790:99826	1228509	1	True				
ANR	1230114	CallExpression	"BITSET_SET_BIT ( cc -> bs , NEWLINE_CODE )"		1228509	0					
ANR	1230115	Callee	BITSET_SET_BIT		1228509	0					
ANR	1230116	Identifier	BITSET_SET_BIT		1228509	0					
ANR	1230117	ArgumentList	cc -> bs		1228509	1					
ANR	1230118	Argument	cc -> bs		1228509	0					
ANR	1230119	PtrMemberAccess	cc -> bs		1228509	0					
ANR	1230120	Identifier	cc		1228509	0					
ANR	1230121	Identifier	bs		1228509	1					
ANR	1230122	Argument	NEWLINE_CODE		1228509	1					
ANR	1230123	Identifier	NEWLINE_CODE		1228509	0					
ANR	1230124	ElseStatement	else		1228509	0					
ANR	1230125	ExpressionStatement	"add_code_range ( & ( cc -> mbuf ) , env , NEWLINE_CODE , NEWLINE_CODE )"	4487:10:99851:99911	1228509	0	True				
ANR	1230126	CallExpression	"add_code_range ( & ( cc -> mbuf ) , env , NEWLINE_CODE , NEWLINE_CODE )"		1228509	0					
ANR	1230127	Callee	add_code_range		1228509	0					
ANR	1230128	Identifier	add_code_range		1228509	0					
ANR	1230129	ArgumentList	& ( cc -> mbuf )		1228509	1					
ANR	1230130	Argument	& ( cc -> mbuf )		1228509	0					
ANR	1230131	UnaryOperationExpression	& ( cc -> mbuf )		1228509	0					
ANR	1230132	UnaryOperator	&		1228509	0					
ANR	1230133	PtrMemberAccess	cc -> mbuf		1228509	1					
ANR	1230134	Identifier	cc		1228509	0					
ANR	1230135	Identifier	mbuf		1228509	1					
ANR	1230136	Argument	env		1228509	1					
ANR	1230137	Identifier	env		1228509	0					
ANR	1230138	Argument	NEWLINE_CODE		1228509	2					
ANR	1230139	Identifier	NEWLINE_CODE		1228509	0					
ANR	1230140	Argument	NEWLINE_CODE		1228509	3					
ANR	1230141	Identifier	NEWLINE_CODE		1228509	0					
ANR	1230142	ExpressionStatement	* src = p	4491:2:99933:99941	1228509	26	True				
ANR	1230143	AssignmentExpression	* src = p		1228509	0		=			
ANR	1230144	UnaryOperationExpression	* src		1228509	0					
ANR	1230145	UnaryOperator	*		1228509	0					
ANR	1230146	Identifier	src		1228509	1					
ANR	1230147	Identifier	p		1228509	1					
ANR	1230148	ReturnStatement	return 0 ;	4492:2:99945:99953	1228509	27	True				
ANR	1230149	PrimaryExpression	0		1228509	0					
ANR	1230150	Label	err :	4494:1:99957:99960	1228509	28	True				
ANR	1230151	Identifier	err		1228509	0					
ANR	1230152	IfStatement	if ( cc != NCCLASS ( * np ) )		1228509	29					
ANR	1230153	Condition	cc != NCCLASS ( * np )	4495:6:99968:99985	1228509	0	True				
ANR	1230154	EqualityExpression	cc != NCCLASS ( * np )		1228509	0		!=			
ANR	1230155	Identifier	cc		1228509	0					
ANR	1230156	CallExpression	NCCLASS ( * np )		1228509	1					
ANR	1230157	Callee	NCCLASS		1228509	0					
ANR	1230158	Identifier	NCCLASS		1228509	0					
ANR	1230159	ArgumentList	* np		1228509	1					
ANR	1230160	Argument	* np		1228509	0					
ANR	1230161	UnaryOperationExpression	* np		1228509	0					
ANR	1230162	UnaryOperator	*		1228509	0					
ANR	1230163	Identifier	np		1228509	1					
ANR	1230164	ExpressionStatement	bbuf_free ( cc -> mbuf )	4496:4:99992:100011	1228509	1	True				
ANR	1230165	CallExpression	bbuf_free ( cc -> mbuf )		1228509	0					
ANR	1230166	Callee	bbuf_free		1228509	0					
ANR	1230167	Identifier	bbuf_free		1228509	0					
ANR	1230168	ArgumentList	cc -> mbuf		1228509	1					
ANR	1230169	Argument	cc -> mbuf		1228509	0					
ANR	1230170	PtrMemberAccess	cc -> mbuf		1228509	0					
ANR	1230171	Identifier	cc		1228509	0					
ANR	1230172	Identifier	mbuf		1228509	1					
ANR	1230173	ExpressionStatement	onig_node_free ( * np )	4497:2:100015:100034	1228509	30	True				
ANR	1230174	CallExpression	onig_node_free ( * np )		1228509	0					
ANR	1230175	Callee	onig_node_free		1228509	0					
ANR	1230176	Identifier	onig_node_free		1228509	0					
ANR	1230177	ArgumentList	* np		1228509	1					
ANR	1230178	Argument	* np		1228509	0					
ANR	1230179	UnaryOperationExpression	* np		1228509	0					
ANR	1230180	UnaryOperator	*		1228509	0					
ANR	1230181	Identifier	np		1228509	1					
ANR	1230182	ReturnStatement	return r ;	4498:2:100038:100046	1228509	31	True				
ANR	1230183	Identifier	r		1228509	0					
ANR	1230184	ReturnType	static int		1228509	1					
ANR	1230185	Identifier	parse_char_class		1228509	2					
ANR	1230186	ParameterList	"Node * * np , OnigToken * tok , UChar * * src , UChar * end , ScanEnv * env"		1228509	3					
ANR	1230187	Parameter	Node * * np	4175:17:92823:92831	1228509	0	True				
ANR	1230188	ParameterType	Node * *		1228509	0					
ANR	1230189	Identifier	np		1228509	1					
ANR	1230190	Parameter	OnigToken * tok	4175:28:92834:92847	1228509	1	True				
ANR	1230191	ParameterType	OnigToken *		1228509	0					
ANR	1230192	Identifier	tok		1228509	1					
ANR	1230193	Parameter	UChar * * src	4175:44:92850:92860	1228509	2	True				
ANR	1230194	ParameterType	UChar * *		1228509	0					
ANR	1230195	Identifier	src		1228509	1					
ANR	1230196	Parameter	UChar * end	4175:57:92863:92872	1228509	3	True				
ANR	1230197	ParameterType	UChar *		1228509	0					
ANR	1230198	Identifier	end		1228509	1					
ANR	1230199	Parameter	ScanEnv * env	4176:3:92878:92889	1228509	4	True				
ANR	1230200	ParameterType	ScanEnv *		1228509	0					
ANR	1230201	Identifier	env		1228509	1					
ANR	1230202	CFGEntryNode	ENTRY		1228509		True				
ANR	1230203	CFGExitNode	EXIT		1228509		True				
ANR	1230204	Symbol	ONIGERR_UNMATCHED_RANGE_SPECIFIER_IN_CHAR_CLASS		1228509						
ANR	1230205	Symbol	ONIGERR_PREMATURE_END_OF_CHAR_CLASS		1228509						
ANR	1230206	Symbol	node_new_cclass		1228509						
ANR	1230207	Symbol	* cc		1228509						
ANR	1230208	Symbol	cc -> mbuf		1228509						
ANR	1230209	Symbol	parse_char_class		1228509						
ANR	1230210	Symbol	tok -> type		1228509						
ANR	1230211	Symbol	len		1228509						
ANR	1230212	Symbol	TK_CC_CLOSE		1228509						
ANR	1230213	Symbol	CCV_SB		1228509						
ANR	1230214	Symbol	state		1228509						
ANR	1230215	Symbol	tok -> escaped		1228509						
ANR	1230216	Symbol	* buf		1228509						
ANR	1230217	Symbol	or_cclass		1228509						
ANR	1230218	Symbol	TK_CC_AND		1228509						
ANR	1230219	Symbol	cc -> bs		1228509						
ANR	1230220	Symbol	node		1228509						
ANR	1230221	Symbol	ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		1228509						
ANR	1230222	Symbol	ONIGENC_IS_CODE_NEWLINE		1228509						
ANR	1230223	Symbol	val_israw		1228509						
ANR	1230224	Symbol	CCV_CODE_POINT		1228509						
ANR	1230225	Symbol	* tok		1228509						
ANR	1230226	Symbol	ONIGENC_CODE_TO_MBC_MAXLEN		1228509						
ANR	1230227	Symbol	& anode		1228509						
ANR	1230228	Symbol	tok -> u . c		1228509						
ANR	1230229	Symbol	& state		1228509						
ANR	1230230	Symbol	in_israw		1228509						
ANR	1230231	Symbol	ONIGENC_MBC_MINLEN		1228509						
ANR	1230232	Symbol	env -> enc		1228509						
ANR	1230233	Symbol	tok		1228509						
ANR	1230234	Symbol	tok -> u . code		1228509						
ANR	1230235	Symbol	ONIGERR_EMPTY_CHAR_CLASS		1228509						
ANR	1230236	Symbol	val_type		1228509						
ANR	1230237	Symbol	& cc -> mbuf		1228509						
ANR	1230238	Symbol	is_empty		1228509						
ANR	1230239	Symbol	cc		1228509						
ANR	1230240	Symbol	& work_cc		1228509						
ANR	1230241	Symbol	tok -> backp		1228509						
ANR	1230242	Symbol	i		1228509						
ANR	1230243	Symbol	anode		1228509						
ANR	1230244	Symbol	& val_type		1228509						
ANR	1230245	Symbol	* np		1228509						
ANR	1230246	Symbol	and_cclass		1228509						
ANR	1230247	Symbol	fetch_token_in_cc		1228509						
ANR	1230248	Symbol	enclen		1228509						
ANR	1230249	Symbol	p		1228509						
ANR	1230250	Symbol	ONIGENC_CODE_TO_MBCLEN		1228509						
ANR	1230251	Symbol	r		1228509						
ANR	1230252	Symbol	buf		1228509						
ANR	1230253	Symbol	v		1228509						
ANR	1230254	Symbol	CCS_VALUE		1228509						
ANR	1230255	Symbol	bufe		1228509						
ANR	1230256	Symbol	tok -> base		1228509						
ANR	1230257	Symbol	fetched		1228509						
ANR	1230258	Symbol	in_type		1228509						
ANR	1230259	Symbol	acc		1228509						
ANR	1230260	Symbol	parse_posix_bracket		1228509						
ANR	1230261	Symbol	IS_NCCLASS_NOT		1228509						
ANR	1230262	Symbol	NCCLASS		1228509						
ANR	1230263	Symbol	psave		1228509						
ANR	1230264	Symbol	* src		1228509						
ANR	1230265	Symbol	neg		1228509						
ANR	1230266	Symbol	tok -> u . prop . not		1228509						
ANR	1230267	Symbol	add_ctype_to_cc		1228509						
ANR	1230268	Symbol	IS_SYNTAX_BV		1228509						
ANR	1230269	Symbol	ONIGENC_MBC_TO_CODE		1228509						
ANR	1230270	Symbol	& val_israw		1228509						
ANR	1230271	Symbol	tok -> u . prop		1228509						
ANR	1230272	Symbol	ONIGENC_IS_SINGLEBYTE		1228509						
ANR	1230273	Symbol	NULL		1228509						
ANR	1230274	Symbol	CCS_START		1228509						
ANR	1230275	Symbol	TK_CC_RANGE		1228509						
ANR	1230276	Symbol	work_cc		1228509						
ANR	1230277	Symbol	NEWLINE_CODE		1228509						
ANR	1230278	Symbol	* env		1228509						
ANR	1230279	Symbol	env -> syntax		1228509						
ANR	1230280	Symbol	ONIGERR_PARSER_BUG		1228509						
ANR	1230281	Symbol	ctype		1228509						
ANR	1230282	Symbol	NULL_NODE		1228509						
ANR	1230283	Symbol	vs		1228509						
ANR	1230284	Symbol	fetch_char_property_to_ctype		1228509						
ANR	1230285	Symbol	and_start		1228509						
ANR	1230286	Symbol	np		1228509						
ANR	1230287	Symbol	IS_NOT_NULL		1228509						
ANR	1230288	Symbol	ONIG_SYN_NOT_NEWLINE_IN_NEGATIVE_CC		1228509						
ANR	1230289	Symbol	code_exist_check		1228509						
ANR	1230290	Symbol	IS_NULL		1228509						
ANR	1230291	Symbol	end		1228509						
ANR	1230292	Symbol	tok -> u		1228509						
ANR	1230293	Symbol	ONIGENC_MBC_MAXLEN		1228509						
ANR	1230294	Symbol	prev_cc		1228509						
ANR	1230295	Symbol	ONIG_SYN_ALLOW_DOUBLE_RANGE_OP_IN_CC		1228509						
ANR	1230296	Symbol	src		1228509						
ANR	1230297	Symbol	& vs		1228509						
ANR	1230298	Symbol	CCS_RANGE		1228509						
ANR	1230299	Symbol	env		1228509						
ANR	1230300	Symbol	next_state_class		1228509						
ANR	1230301	Symbol	next_state_val		1228509						
ANR	1230302	Symbol	* i		1228509						
ANR	1230303	Symbol	& p		1228509						
ANR	1230304	Symbol	env -> pattern_end		1228509						
ANR	1230305	Symbol	tok -> u . prop . ctype		1228509						
ANR	1230306	Symbol	TK_RAW_BYTE		1228509						
ANR	1230307	Symbol	TK_CHAR		1228509						
ANR	1230308	Symbol	base		1228509						
ANR	1230309	DeclStmt									
ANR	1230310	Decl							int	"int ( Node * * top , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env )"	parse_subexp
ANR	1230311	Function	parse_enclose	4504:0:100157:106147							
ANR	1230312	FunctionDef	"parse_enclose (Node * * np , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env)"		1230311	0					
ANR	1230313	CompoundStatement		4507:0:100265:106147	1230311	0					
ANR	1230314	IdentifierDeclStatement	"int r , num ;"	4508:2:100269:100279	1230311	0	True				
ANR	1230315	IdentifierDecl	r		1230311	0					
ANR	1230316	IdentifierDeclType	int		1230311	0					
ANR	1230317	Identifier	r		1230311	1					
ANR	1230318	IdentifierDecl	num		1230311	1					
ANR	1230319	IdentifierDeclType	int		1230311	0					
ANR	1230320	Identifier	num		1230311	1					
ANR	1230321	IdentifierDeclStatement	Node * target ;	4509:2:100283:100295	1230311	1	True				
ANR	1230322	IdentifierDecl	* target		1230311	0					
ANR	1230323	IdentifierDeclType	Node *		1230311	0					
ANR	1230324	Identifier	target		1230311	1					
ANR	1230325	IdentifierDeclStatement	OnigOptionType option ;	4510:2:100299:100320	1230311	2	True				
ANR	1230326	IdentifierDecl	option		1230311	0					
ANR	1230327	IdentifierDeclType	OnigOptionType		1230311	0					
ANR	1230328	Identifier	option		1230311	1					
ANR	1230329	IdentifierDeclStatement	OnigCodePoint c ;	4511:2:100324:100339	1230311	3	True				
ANR	1230330	IdentifierDecl	c		1230311	0					
ANR	1230331	IdentifierDeclType	OnigCodePoint		1230311	0					
ANR	1230332	Identifier	c		1230311	1					
ANR	1230333	IdentifierDeclStatement	OnigEncoding enc = env -> enc ;	4512:2:100343:100370	1230311	4	True				
ANR	1230334	IdentifierDecl	enc = env -> enc		1230311	0					
ANR	1230335	IdentifierDeclType	OnigEncoding		1230311	0					
ANR	1230336	Identifier	enc		1230311	1					
ANR	1230337	AssignmentExpression	enc = env -> enc		1230311	2		=			
ANR	1230338	Identifier	enc		1230311	0					
ANR	1230339	PtrMemberAccess	env -> enc		1230311	1					
ANR	1230340	Identifier	env		1230311	0					
ANR	1230341	Identifier	enc		1230311	1					
ANR	1230342	IdentifierDeclStatement	int list_capture ;	4515:2:100398:100414	1230311	5	True				
ANR	1230343	IdentifierDecl	list_capture		1230311	0					
ANR	1230344	IdentifierDeclType	int		1230311	0					
ANR	1230345	Identifier	list_capture		1230311	1					
ANR	1230346	IdentifierDeclStatement	UChar * p = * src ;	4518:2:100426:100441	1230311	6	True				
ANR	1230347	IdentifierDecl	* p = * src		1230311	0					
ANR	1230348	IdentifierDeclType	UChar *		1230311	0					
ANR	1230349	Identifier	p		1230311	1					
ANR	1230350	AssignmentExpression	* p = * src		1230311	2		=			
ANR	1230351	Identifier	p		1230311	0					
ANR	1230352	UnaryOperationExpression	* src		1230311	1					
ANR	1230353	UnaryOperator	*		1230311	0					
ANR	1230354	Identifier	src		1230311	1					
ANR	1230355	ExpressionStatement	PFETCH_READY	4519:2:100445:100457	1230311	7	True				
ANR	1230356	Identifier	PFETCH_READY		1230311	0					
ANR	1230357	ExpressionStatement	* np = NULL	4521:2:100462:100472	1230311	8	True				
ANR	1230358	AssignmentExpression	* np = NULL		1230311	0		=			
ANR	1230359	UnaryOperationExpression	* np		1230311	0					
ANR	1230360	UnaryOperator	*		1230311	0					
ANR	1230361	Identifier	np		1230311	1					
ANR	1230362	Identifier	NULL		1230311	1					
ANR	1230363	IfStatement	if ( PEND )		1230311	9					
ANR	1230364	Condition	PEND	4522:6:100480:100483	1230311	0	True				
ANR	1230365	Identifier	PEND		1230311	0					
ANR	1230366	ReturnStatement	return ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS ;	4522:12:100486:100539	1230311	1	True				
ANR	1230367	Identifier	ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS		1230311	0					
ANR	1230368	ExpressionStatement	option = env -> option	4524:2:100544:100564	1230311	10	True				
ANR	1230369	AssignmentExpression	option = env -> option		1230311	0		=			
ANR	1230370	Identifier	option		1230311	0					
ANR	1230371	PtrMemberAccess	env -> option		1230311	1					
ANR	1230372	Identifier	env		1230311	0					
ANR	1230373	Identifier	option		1230311	1					
ANR	1230374	IfStatement	"if ( PPEEK_IS ( '?' ) && IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_GROUP_EFFECT ) )"		1230311	11					
ANR	1230375	Condition	"PPEEK_IS ( '?' ) && IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_GROUP_EFFECT )"	4525:6:100572:100653	1230311	0	True				
ANR	1230376	AndExpression	"PPEEK_IS ( '?' ) && IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_GROUP_EFFECT )"		1230311	0		&&			
ANR	1230377	CallExpression	PPEEK_IS ( '?' )		1230311	0					
ANR	1230378	Callee	PPEEK_IS		1230311	0					
ANR	1230379	Identifier	PPEEK_IS		1230311	0					
ANR	1230380	ArgumentList	'?'		1230311	1					
ANR	1230381	Argument	'?'		1230311	0					
ANR	1230382	PrimaryExpression	'?'		1230311	0					
ANR	1230383	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_GROUP_EFFECT )"		1230311	1					
ANR	1230384	Callee	IS_SYNTAX_OP2		1230311	0					
ANR	1230385	Identifier	IS_SYNTAX_OP2		1230311	0					
ANR	1230386	ArgumentList	env -> syntax		1230311	1					
ANR	1230387	Argument	env -> syntax		1230311	0					
ANR	1230388	PtrMemberAccess	env -> syntax		1230311	0					
ANR	1230389	Identifier	env		1230311	0					
ANR	1230390	Identifier	syntax		1230311	1					
ANR	1230391	Argument	ONIG_SYN_OP2_QMARK_GROUP_EFFECT		1230311	1					
ANR	1230392	Identifier	ONIG_SYN_OP2_QMARK_GROUP_EFFECT		1230311	0					
ANR	1230393	CompoundStatement		20:67:390:390	1230311	1					
ANR	1230394	ExpressionStatement	PINC	4527:4:100662:100666	1230311	0	True				
ANR	1230395	Identifier	PINC		1230311	0					
ANR	1230396	IfStatement	if ( PEND )		1230311	1					
ANR	1230397	Condition	PEND	4528:8:100676:100679	1230311	0	True				
ANR	1230398	Identifier	PEND		1230311	0					
ANR	1230399	ReturnStatement	return ONIGERR_END_PATTERN_IN_GROUP ;	4528:14:100682:100717	1230311	1	True				
ANR	1230400	Identifier	ONIGERR_END_PATTERN_IN_GROUP		1230311	0					
ANR	1230401	ExpressionStatement	PFETCH ( c )	4530:4:100724:100733	1230311	2	True				
ANR	1230402	CallExpression	PFETCH ( c )		1230311	0					
ANR	1230403	Callee	PFETCH		1230311	0					
ANR	1230404	Identifier	PFETCH		1230311	0					
ANR	1230405	ArgumentList	c		1230311	1					
ANR	1230406	Argument	c		1230311	0					
ANR	1230407	Identifier	c		1230311	0					
ANR	1230408	SwitchStatement	switch ( c )		1230311	3					
ANR	1230409	Condition	c	4531:12:100747:100747	1230311	0	True				
ANR	1230410	Identifier	c		1230311	0					
ANR	1230411	CompoundStatement		25:15:484:484	1230311	1					
ANR	1230412	Label	case ':' :	4532:4:100756:100764	1230311	0	True				
ANR	1230413	Label	group :	4533:4:100800:100805	1230311	1	True				
ANR	1230414	Identifier	group		1230311	0					
ANR	1230415	ExpressionStatement	"r = fetch_token ( tok , & p , end , env )"	4534:6:100813:100847	1230311	2	True				
ANR	1230416	AssignmentExpression	"r = fetch_token ( tok , & p , end , env )"		1230311	0		=			
ANR	1230417	Identifier	r		1230311	0					
ANR	1230418	CallExpression	"fetch_token ( tok , & p , end , env )"		1230311	1					
ANR	1230419	Callee	fetch_token		1230311	0					
ANR	1230420	Identifier	fetch_token		1230311	0					
ANR	1230421	ArgumentList	tok		1230311	1					
ANR	1230422	Argument	tok		1230311	0					
ANR	1230423	Identifier	tok		1230311	0					
ANR	1230424	Argument	& p		1230311	1					
ANR	1230425	UnaryOperationExpression	& p		1230311	0					
ANR	1230426	UnaryOperator	&		1230311	0					
ANR	1230427	Identifier	p		1230311	1					
ANR	1230428	Argument	end		1230311	2					
ANR	1230429	Identifier	end		1230311	0					
ANR	1230430	Argument	env		1230311	3					
ANR	1230431	Identifier	env		1230311	0					
ANR	1230432	IfStatement	if ( r < 0 )		1230311	3					
ANR	1230433	Condition	r < 0	4535:10:100859:100863	1230311	0	True				
ANR	1230434	RelationalExpression	r < 0		1230311	0		<			
ANR	1230435	Identifier	r		1230311	0					
ANR	1230436	PrimaryExpression	0		1230311	1					
ANR	1230437	ReturnStatement	return r ;	4535:17:100866:100874	1230311	1	True				
ANR	1230438	Identifier	r		1230311	0					
ANR	1230439	ExpressionStatement	"r = parse_subexp ( np , tok , term , & p , end , env )"	4536:6:100882:100927	1230311	4	True				
ANR	1230440	AssignmentExpression	"r = parse_subexp ( np , tok , term , & p , end , env )"		1230311	0		=			
ANR	1230441	Identifier	r		1230311	0					
ANR	1230442	CallExpression	"parse_subexp ( np , tok , term , & p , end , env )"		1230311	1					
ANR	1230443	Callee	parse_subexp		1230311	0					
ANR	1230444	Identifier	parse_subexp		1230311	0					
ANR	1230445	ArgumentList	np		1230311	1					
ANR	1230446	Argument	np		1230311	0					
ANR	1230447	Identifier	np		1230311	0					
ANR	1230448	Argument	tok		1230311	1					
ANR	1230449	Identifier	tok		1230311	0					
ANR	1230450	Argument	term		1230311	2					
ANR	1230451	Identifier	term		1230311	0					
ANR	1230452	Argument	& p		1230311	3					
ANR	1230453	UnaryOperationExpression	& p		1230311	0					
ANR	1230454	UnaryOperator	&		1230311	0					
ANR	1230455	Identifier	p		1230311	1					
ANR	1230456	Argument	end		1230311	4					
ANR	1230457	Identifier	end		1230311	0					
ANR	1230458	Argument	env		1230311	5					
ANR	1230459	Identifier	env		1230311	0					
ANR	1230460	IfStatement	if ( r < 0 )		1230311	5					
ANR	1230461	Condition	r < 0	4537:10:100939:100943	1230311	0	True				
ANR	1230462	RelationalExpression	r < 0		1230311	0		<			
ANR	1230463	Identifier	r		1230311	0					
ANR	1230464	PrimaryExpression	0		1230311	1					
ANR	1230465	ReturnStatement	return r ;	4537:17:100946:100954	1230311	1	True				
ANR	1230466	Identifier	r		1230311	0					
ANR	1230467	ExpressionStatement	* src = p	4538:6:100962:100970	1230311	6	True				
ANR	1230468	AssignmentExpression	* src = p		1230311	0		=			
ANR	1230469	UnaryOperationExpression	* src		1230311	0					
ANR	1230470	UnaryOperator	*		1230311	0					
ANR	1230471	Identifier	src		1230311	1					
ANR	1230472	Identifier	p		1230311	1					
ANR	1230473	ReturnStatement	return 1 ;	4539:6:100978:100986	1230311	7	True				
ANR	1230474	PrimaryExpression	1		1230311	0					
ANR	1230475	BreakStatement	break ;	4540:6:101006:101011	1230311	8	True				
ANR	1230476	Label	case '=' :	4542:4:101018:101026	1230311	9	True				
ANR	1230477	ExpressionStatement	* np = onig_node_new_anchor ( ANCHOR_PREC_READ )	4543:6:101034:101078	1230311	10	True				
ANR	1230478	AssignmentExpression	* np = onig_node_new_anchor ( ANCHOR_PREC_READ )		1230311	0		=			
ANR	1230479	UnaryOperationExpression	* np		1230311	0					
ANR	1230480	UnaryOperator	*		1230311	0					
ANR	1230481	Identifier	np		1230311	1					
ANR	1230482	CallExpression	onig_node_new_anchor ( ANCHOR_PREC_READ )		1230311	1					
ANR	1230483	Callee	onig_node_new_anchor		1230311	0					
ANR	1230484	Identifier	onig_node_new_anchor		1230311	0					
ANR	1230485	ArgumentList	ANCHOR_PREC_READ		1230311	1					
ANR	1230486	Argument	ANCHOR_PREC_READ		1230311	0					
ANR	1230487	Identifier	ANCHOR_PREC_READ		1230311	0					
ANR	1230488	BreakStatement	break ;	4544:6:101086:101091	1230311	11	True				
ANR	1230489	Label	case '!' :	4545:4:101097:101105	1230311	12	True				
ANR	1230490	ExpressionStatement	* np = onig_node_new_anchor ( ANCHOR_PREC_READ_NOT )	4546:6:101143:101191	1230311	13	True				
ANR	1230491	AssignmentExpression	* np = onig_node_new_anchor ( ANCHOR_PREC_READ_NOT )		1230311	0		=			
ANR	1230492	UnaryOperationExpression	* np		1230311	0					
ANR	1230493	UnaryOperator	*		1230311	0					
ANR	1230494	Identifier	np		1230311	1					
ANR	1230495	CallExpression	onig_node_new_anchor ( ANCHOR_PREC_READ_NOT )		1230311	1					
ANR	1230496	Callee	onig_node_new_anchor		1230311	0					
ANR	1230497	Identifier	onig_node_new_anchor		1230311	0					
ANR	1230498	ArgumentList	ANCHOR_PREC_READ_NOT		1230311	1					
ANR	1230499	Argument	ANCHOR_PREC_READ_NOT		1230311	0					
ANR	1230500	Identifier	ANCHOR_PREC_READ_NOT		1230311	0					
ANR	1230501	BreakStatement	break ;	4547:6:101199:101204	1230311	14	True				
ANR	1230502	Label	case '>' :	4548:4:101210:101218	1230311	15	True				
ANR	1230503	ExpressionStatement	* np = node_new_enclose ( ENCLOSE_STOP_BACKTRACK )	4549:6:101266:101312	1230311	16	True				
ANR	1230504	AssignmentExpression	* np = node_new_enclose ( ENCLOSE_STOP_BACKTRACK )		1230311	0		=			
ANR	1230505	UnaryOperationExpression	* np		1230311	0					
ANR	1230506	UnaryOperator	*		1230311	0					
ANR	1230507	Identifier	np		1230311	1					
ANR	1230508	CallExpression	node_new_enclose ( ENCLOSE_STOP_BACKTRACK )		1230311	1					
ANR	1230509	Callee	node_new_enclose		1230311	0					
ANR	1230510	Identifier	node_new_enclose		1230311	0					
ANR	1230511	ArgumentList	ENCLOSE_STOP_BACKTRACK		1230311	1					
ANR	1230512	Argument	ENCLOSE_STOP_BACKTRACK		1230311	0					
ANR	1230513	Identifier	ENCLOSE_STOP_BACKTRACK		1230311	0					
ANR	1230514	BreakStatement	break ;	4550:6:101320:101325	1230311	17	True				
ANR	1230515	Label	case '\\'' :	4553:4:101355:101364	1230311	18	True				
ANR	1230516	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP ) )"		1230311	19					
ANR	1230517	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP )"	4554:10:101376:101436	1230311	0	True				
ANR	1230518	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP )"		1230311	0					
ANR	1230519	Callee	IS_SYNTAX_OP2		1230311	0					
ANR	1230520	Identifier	IS_SYNTAX_OP2		1230311	0					
ANR	1230521	ArgumentList	env -> syntax		1230311	1					
ANR	1230522	Argument	env -> syntax		1230311	0					
ANR	1230523	PtrMemberAccess	env -> syntax		1230311	0					
ANR	1230524	Identifier	env		1230311	0					
ANR	1230525	Identifier	syntax		1230311	1					
ANR	1230526	Argument	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		1230311	1					
ANR	1230527	Identifier	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		1230311	0					
ANR	1230528	CompoundStatement		48:73:1173:1173	1230311	1					
ANR	1230529	GotoStatement	goto named_group1 ;	4555:1:101442:101459	1230311	0	True				
ANR	1230530	Identifier	named_group1		1230311	0					
ANR	1230531	ElseStatement	else		1230311	0					
ANR	1230532	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4558:1:101481:101518	1230311	0	True				
ANR	1230533	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		1230311	0					
ANR	1230534	BreakStatement	break ;	4559:6:101526:101531	1230311	20	True				
ANR	1230535	Label	case '<' :	4562:4:101545:101553	1230311	21	True				
ANR	1230536	ExpressionStatement	PFETCH ( c )	4563:6:101600:101609	1230311	22	True				
ANR	1230537	CallExpression	PFETCH ( c )		1230311	0					
ANR	1230538	Callee	PFETCH		1230311	0					
ANR	1230539	Identifier	PFETCH		1230311	0					
ANR	1230540	ArgumentList	c		1230311	1					
ANR	1230541	Argument	c		1230311	0					
ANR	1230542	Identifier	c		1230311	0					
ANR	1230543	IfStatement	if ( c == '=' )		1230311	23					
ANR	1230544	Condition	c == '='	4564:10:101621:101628	1230311	0	True				
ANR	1230545	EqualityExpression	c == '='		1230311	0		==			
ANR	1230546	Identifier	c		1230311	0					
ANR	1230547	PrimaryExpression	'='		1230311	1					
ANR	1230548	ExpressionStatement	* np = onig_node_new_anchor ( ANCHOR_LOOK_BEHIND )	4565:1:101632:101678	1230311	1	True				
ANR	1230549	AssignmentExpression	* np = onig_node_new_anchor ( ANCHOR_LOOK_BEHIND )		1230311	0		=			
ANR	1230550	UnaryOperationExpression	* np		1230311	0					
ANR	1230551	UnaryOperator	*		1230311	0					
ANR	1230552	Identifier	np		1230311	1					
ANR	1230553	CallExpression	onig_node_new_anchor ( ANCHOR_LOOK_BEHIND )		1230311	1					
ANR	1230554	Callee	onig_node_new_anchor		1230311	0					
ANR	1230555	Identifier	onig_node_new_anchor		1230311	0					
ANR	1230556	ArgumentList	ANCHOR_LOOK_BEHIND		1230311	1					
ANR	1230557	Argument	ANCHOR_LOOK_BEHIND		1230311	0					
ANR	1230558	Identifier	ANCHOR_LOOK_BEHIND		1230311	0					
ANR	1230559	ElseStatement	else		1230311	0					
ANR	1230560	IfStatement	if ( c == '!' )		1230311	0					
ANR	1230561	Condition	c == '!'	4566:15:101695:101702	1230311	0	True				
ANR	1230562	EqualityExpression	c == '!'		1230311	0		==			
ANR	1230563	Identifier	c		1230311	0					
ANR	1230564	PrimaryExpression	'!'		1230311	1					
ANR	1230565	ExpressionStatement	* np = onig_node_new_anchor ( ANCHOR_LOOK_BEHIND_NOT )	4567:1:101706:101756	1230311	1	True				
ANR	1230566	AssignmentExpression	* np = onig_node_new_anchor ( ANCHOR_LOOK_BEHIND_NOT )		1230311	0		=			
ANR	1230567	UnaryOperationExpression	* np		1230311	0					
ANR	1230568	UnaryOperator	*		1230311	0					
ANR	1230569	Identifier	np		1230311	1					
ANR	1230570	CallExpression	onig_node_new_anchor ( ANCHOR_LOOK_BEHIND_NOT )		1230311	1					
ANR	1230571	Callee	onig_node_new_anchor		1230311	0					
ANR	1230572	Identifier	onig_node_new_anchor		1230311	0					
ANR	1230573	ArgumentList	ANCHOR_LOOK_BEHIND_NOT		1230311	1					
ANR	1230574	Argument	ANCHOR_LOOK_BEHIND_NOT		1230311	0					
ANR	1230575	Identifier	ANCHOR_LOOK_BEHIND_NOT		1230311	0					
ANR	1230576	ElseStatement	else		1230311	0					
ANR	1230577	CompoundStatement		63:11:1526:1526	1230311	0					
ANR	1230578	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP ) )"		1230311	0					
ANR	1230579	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP )"	4570:5:101799:101859	1230311	0	True				
ANR	1230580	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP )"		1230311	0					
ANR	1230581	Callee	IS_SYNTAX_OP2		1230311	0					
ANR	1230582	Identifier	IS_SYNTAX_OP2		1230311	0					
ANR	1230583	ArgumentList	env -> syntax		1230311	1					
ANR	1230584	Argument	env -> syntax		1230311	0					
ANR	1230585	PtrMemberAccess	env -> syntax		1230311	0					
ANR	1230586	Identifier	env		1230311	0					
ANR	1230587	Identifier	syntax		1230311	1					
ANR	1230588	Argument	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		1230311	1					
ANR	1230589	Identifier	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		1230311	0					
ANR	1230590	CompoundStatement		66:3:1617:1632	1230311	1					
ANR	1230591	IdentifierDeclStatement	UChar * name ;	4571:3:101867:101878	1230311	0	True				
ANR	1230592	IdentifierDecl	* name		1230311	0					
ANR	1230593	IdentifierDeclType	UChar *		1230311	0					
ANR	1230594	Identifier	name		1230311	1					
ANR	1230595	IdentifierDeclStatement	UChar * name_end ;	4572:3:101883:101898	1230311	1	True				
ANR	1230596	IdentifierDecl	* name_end		1230311	0					
ANR	1230597	IdentifierDeclType	UChar *		1230311	0					
ANR	1230598	Identifier	name_end		1230311	1					
ANR	1230599	ExpressionStatement	PUNFETCH	4574:3:101904:101912	1230311	2	True				
ANR	1230600	Identifier	PUNFETCH		1230311	0					
ANR	1230601	ExpressionStatement	c = '<'	4575:3:101917:101924	1230311	3	True				
ANR	1230602	AssignmentExpression	c = '<'		1230311	0		=			
ANR	1230603	Identifier	c		1230311	0					
ANR	1230604	PrimaryExpression	'<'		1230311	1					
ANR	1230605	Label	named_group1 :	4577:1:101928:101940	1230311	4	True				
ANR	1230606	Identifier	named_group1		1230311	0					
ANR	1230607	ExpressionStatement	list_capture = 0	4578:3:101945:101961	1230311	5	True				
ANR	1230608	AssignmentExpression	list_capture = 0		1230311	0		=			
ANR	1230609	Identifier	list_capture		1230311	0					
ANR	1230610	PrimaryExpression	0		1230311	1					
ANR	1230611	Label	named_group2 :	4580:1:101965:101977	1230311	6	True				
ANR	1230612	Identifier	named_group2		1230311	0					
ANR	1230613	ExpressionStatement	name = p	4581:3:101982:101990	1230311	7	True				
ANR	1230614	AssignmentExpression	name = p		1230311	0		=			
ANR	1230615	Identifier	name		1230311	0					
ANR	1230616	Identifier	p		1230311	1					
ANR	1230617	ExpressionStatement	"r = fetch_name ( ( OnigCodePoint ) c , & p , end , & name_end , env , & num , 0 )"	4582:3:101995:102062	1230311	8	True				
ANR	1230618	AssignmentExpression	"r = fetch_name ( ( OnigCodePoint ) c , & p , end , & name_end , env , & num , 0 )"		1230311	0		=			
ANR	1230619	Identifier	r		1230311	0					
ANR	1230620	CallExpression	"fetch_name ( ( OnigCodePoint ) c , & p , end , & name_end , env , & num , 0 )"		1230311	1					
ANR	1230621	Callee	fetch_name		1230311	0					
ANR	1230622	Identifier	fetch_name		1230311	0					
ANR	1230623	ArgumentList	( OnigCodePoint ) c		1230311	1					
ANR	1230624	Argument	( OnigCodePoint ) c		1230311	0					
ANR	1230625	CastExpression	( OnigCodePoint ) c		1230311	0					
ANR	1230626	CastTarget	OnigCodePoint		1230311	0					
ANR	1230627	Identifier	c		1230311	1					
ANR	1230628	Argument	& p		1230311	1					
ANR	1230629	UnaryOperationExpression	& p		1230311	0					
ANR	1230630	UnaryOperator	&		1230311	0					
ANR	1230631	Identifier	p		1230311	1					
ANR	1230632	Argument	end		1230311	2					
ANR	1230633	Identifier	end		1230311	0					
ANR	1230634	Argument	& name_end		1230311	3					
ANR	1230635	UnaryOperationExpression	& name_end		1230311	0					
ANR	1230636	UnaryOperator	&		1230311	0					
ANR	1230637	Identifier	name_end		1230311	1					
ANR	1230638	Argument	env		1230311	4					
ANR	1230639	Identifier	env		1230311	0					
ANR	1230640	Argument	& num		1230311	5					
ANR	1230641	UnaryOperationExpression	& num		1230311	0					
ANR	1230642	UnaryOperator	&		1230311	0					
ANR	1230643	Identifier	num		1230311	1					
ANR	1230644	Argument	0		1230311	6					
ANR	1230645	PrimaryExpression	0		1230311	0					
ANR	1230646	IfStatement	if ( r < 0 )		1230311	9					
ANR	1230647	Condition	r < 0	4583:7:102071:102075	1230311	0	True				
ANR	1230648	RelationalExpression	r < 0		1230311	0		<			
ANR	1230649	Identifier	r		1230311	0					
ANR	1230650	PrimaryExpression	0		1230311	1					
ANR	1230651	ReturnStatement	return r ;	4583:14:102078:102086	1230311	1	True				
ANR	1230652	Identifier	r		1230311	0					
ANR	1230653	ExpressionStatement	num = scan_env_add_mem_entry ( env )	4585:3:102092:102125	1230311	10	True				
ANR	1230654	AssignmentExpression	num = scan_env_add_mem_entry ( env )		1230311	0		=			
ANR	1230655	Identifier	num		1230311	0					
ANR	1230656	CallExpression	scan_env_add_mem_entry ( env )		1230311	1					
ANR	1230657	Callee	scan_env_add_mem_entry		1230311	0					
ANR	1230658	Identifier	scan_env_add_mem_entry		1230311	0					
ANR	1230659	ArgumentList	env		1230311	1					
ANR	1230660	Argument	env		1230311	0					
ANR	1230661	Identifier	env		1230311	0					
ANR	1230662	IfStatement	if ( num < 0 )		1230311	11					
ANR	1230663	Condition	num < 0	4586:7:102134:102140	1230311	0	True				
ANR	1230664	RelationalExpression	num < 0		1230311	0		<			
ANR	1230665	Identifier	num		1230311	0					
ANR	1230666	PrimaryExpression	0		1230311	1					
ANR	1230667	ReturnStatement	return num ;	4586:16:102143:102153	1230311	1	True				
ANR	1230668	Identifier	num		1230311	0					
ANR	1230669	IfStatement	if ( list_capture != 0 && num >= ( int ) BIT_STATUS_BITS_NUM )		1230311	12					
ANR	1230670	Condition	list_capture != 0 && num >= ( int ) BIT_STATUS_BITS_NUM	4587:7:102162:102214	1230311	0	True				
ANR	1230671	AndExpression	list_capture != 0 && num >= ( int ) BIT_STATUS_BITS_NUM		1230311	0		&&			
ANR	1230672	EqualityExpression	list_capture != 0		1230311	0		!=			
ANR	1230673	Identifier	list_capture		1230311	0					
ANR	1230674	PrimaryExpression	0		1230311	1					
ANR	1230675	RelationalExpression	num >= ( int ) BIT_STATUS_BITS_NUM		1230311	1		>=			
ANR	1230676	Identifier	num		1230311	0					
ANR	1230677	CastExpression	( int ) BIT_STATUS_BITS_NUM		1230311	1					
ANR	1230678	CastTarget	int		1230311	0					
ANR	1230679	Identifier	BIT_STATUS_BITS_NUM		1230311	1					
ANR	1230680	ReturnStatement	return ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY ;	4588:5:102222:102274	1230311	1	True				
ANR	1230681	Identifier	ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY		1230311	0					
ANR	1230682	ExpressionStatement	"r = name_add ( env -> reg , name , name_end , num , env )"	4590:3:102280:102328	1230311	13	True				
ANR	1230683	AssignmentExpression	"r = name_add ( env -> reg , name , name_end , num , env )"		1230311	0		=			
ANR	1230684	Identifier	r		1230311	0					
ANR	1230685	CallExpression	"name_add ( env -> reg , name , name_end , num , env )"		1230311	1					
ANR	1230686	Callee	name_add		1230311	0					
ANR	1230687	Identifier	name_add		1230311	0					
ANR	1230688	ArgumentList	env -> reg		1230311	1					
ANR	1230689	Argument	env -> reg		1230311	0					
ANR	1230690	PtrMemberAccess	env -> reg		1230311	0					
ANR	1230691	Identifier	env		1230311	0					
ANR	1230692	Identifier	reg		1230311	1					
ANR	1230693	Argument	name		1230311	1					
ANR	1230694	Identifier	name		1230311	0					
ANR	1230695	Argument	name_end		1230311	2					
ANR	1230696	Identifier	name_end		1230311	0					
ANR	1230697	Argument	num		1230311	3					
ANR	1230698	Identifier	num		1230311	0					
ANR	1230699	Argument	env		1230311	4					
ANR	1230700	Identifier	env		1230311	0					
ANR	1230701	IfStatement	if ( r != 0 )		1230311	14					
ANR	1230702	Condition	r != 0	4591:7:102337:102342	1230311	0	True				
ANR	1230703	EqualityExpression	r != 0		1230311	0		!=			
ANR	1230704	Identifier	r		1230311	0					
ANR	1230705	PrimaryExpression	0		1230311	1					
ANR	1230706	ReturnStatement	return r ;	4591:15:102345:102353	1230311	1	True				
ANR	1230707	Identifier	r		1230311	0					
ANR	1230708	ExpressionStatement	"* np = node_new_enclose_memory ( env -> option , 1 )"	4592:3:102358:102403	1230311	15	True				
ANR	1230709	AssignmentExpression	"* np = node_new_enclose_memory ( env -> option , 1 )"		1230311	0		=			
ANR	1230710	UnaryOperationExpression	* np		1230311	0					
ANR	1230711	UnaryOperator	*		1230311	0					
ANR	1230712	Identifier	np		1230311	1					
ANR	1230713	CallExpression	"node_new_enclose_memory ( env -> option , 1 )"		1230311	1					
ANR	1230714	Callee	node_new_enclose_memory		1230311	0					
ANR	1230715	Identifier	node_new_enclose_memory		1230311	0					
ANR	1230716	ArgumentList	env -> option		1230311	1					
ANR	1230717	Argument	env -> option		1230311	0					
ANR	1230718	PtrMemberAccess	env -> option		1230311	0					
ANR	1230719	Identifier	env		1230311	0					
ANR	1230720	Identifier	option		1230311	1					
ANR	1230721	Argument	1		1230311	1					
ANR	1230722	PrimaryExpression	1		1230311	0					
ANR	1230723	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4593:3:102408:102437	1230311	16	True				
ANR	1230724	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		1230311	0					
ANR	1230725	Callee	CHECK_NULL_RETURN_MEMERR		1230311	0					
ANR	1230726	Identifier	CHECK_NULL_RETURN_MEMERR		1230311	0					
ANR	1230727	ArgumentList	* np		1230311	1					
ANR	1230728	Argument	* np		1230311	0					
ANR	1230729	UnaryOperationExpression	* np		1230311	0					
ANR	1230730	UnaryOperator	*		1230311	0					
ANR	1230731	Identifier	np		1230311	1					
ANR	1230732	ExpressionStatement	NENCLOSE ( * np ) -> regnum = num	4594:3:102442:102469	1230311	17	True				
ANR	1230733	AssignmentExpression	NENCLOSE ( * np ) -> regnum = num		1230311	0		=			
ANR	1230734	PtrMemberAccess	NENCLOSE ( * np ) -> regnum		1230311	0					
ANR	1230735	CallExpression	NENCLOSE ( * np )		1230311	0					
ANR	1230736	Callee	NENCLOSE		1230311	0					
ANR	1230737	Identifier	NENCLOSE		1230311	0					
ANR	1230738	ArgumentList	* np		1230311	1					
ANR	1230739	Argument	* np		1230311	0					
ANR	1230740	UnaryOperationExpression	* np		1230311	0					
ANR	1230741	UnaryOperator	*		1230311	0					
ANR	1230742	Identifier	np		1230311	1					
ANR	1230743	Identifier	regnum		1230311	1					
ANR	1230744	Identifier	num		1230311	1					
ANR	1230745	IfStatement	if ( list_capture != 0 )		1230311	18					
ANR	1230746	Condition	list_capture != 0	4595:7:102478:102494	1230311	0	True				
ANR	1230747	EqualityExpression	list_capture != 0		1230311	0		!=			
ANR	1230748	Identifier	list_capture		1230311	0					
ANR	1230749	PrimaryExpression	0		1230311	1					
ANR	1230750	ExpressionStatement	"BIT_STATUS_ON_AT_SIMPLE ( env -> capture_history , num )"	4596:5:102502:102552	1230311	1	True				
ANR	1230751	CallExpression	"BIT_STATUS_ON_AT_SIMPLE ( env -> capture_history , num )"		1230311	0					
ANR	1230752	Callee	BIT_STATUS_ON_AT_SIMPLE		1230311	0					
ANR	1230753	Identifier	BIT_STATUS_ON_AT_SIMPLE		1230311	0					
ANR	1230754	ArgumentList	env -> capture_history		1230311	1					
ANR	1230755	Argument	env -> capture_history		1230311	0					
ANR	1230756	PtrMemberAccess	env -> capture_history		1230311	0					
ANR	1230757	Identifier	env		1230311	0					
ANR	1230758	Identifier	capture_history		1230311	1					
ANR	1230759	Argument	num		1230311	1					
ANR	1230760	Identifier	num		1230311	0					
ANR	1230761	ExpressionStatement	env -> num_named ++	4597:3:102557:102573	1230311	19	True				
ANR	1230762	PostIncDecOperationExpression	env -> num_named ++		1230311	0					
ANR	1230763	PtrMemberAccess	env -> num_named		1230311	0					
ANR	1230764	Identifier	env		1230311	0					
ANR	1230765	Identifier	num_named		1230311	1					
ANR	1230766	IncDec	++		1230311	1					
ANR	1230767	ElseStatement	else		1230311	0					
ANR	1230768	CompoundStatement		93:6:2318:2318	1230311	0					
ANR	1230769	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4600:3:102589:102626	1230311	0	True				
ANR	1230770	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		1230311	0					
ANR	1230771	BreakStatement	break ;	4608:6:102719:102724	1230311	24	True				
ANR	1230772	Label	case '@' :	4610:4:102731:102739	1230311	25	True				
ANR	1230773	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY ) )"		1230311	26					
ANR	1230774	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY )"	4611:10:102751:102813	1230311	0	True				
ANR	1230775	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY )"		1230311	0					
ANR	1230776	Callee	IS_SYNTAX_OP2		1230311	0					
ANR	1230777	Identifier	IS_SYNTAX_OP2		1230311	0					
ANR	1230778	ArgumentList	env -> syntax		1230311	1					
ANR	1230779	Argument	env -> syntax		1230311	0					
ANR	1230780	PtrMemberAccess	env -> syntax		1230311	0					
ANR	1230781	Identifier	env		1230311	0					
ANR	1230782	Identifier	syntax		1230311	1					
ANR	1230783	Argument	ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY		1230311	1					
ANR	1230784	Identifier	ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY		1230311	0					
ANR	1230785	CompoundStatement		105:75:2550:2550	1230311	1					
ANR	1230786	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP ) )"		1230311	0					
ANR	1230787	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP )"	4613:5:102846:102906	1230311	0	True				
ANR	1230788	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP )"		1230311	0					
ANR	1230789	Callee	IS_SYNTAX_OP2		1230311	0					
ANR	1230790	Identifier	IS_SYNTAX_OP2		1230311	0					
ANR	1230791	ArgumentList	env -> syntax		1230311	1					
ANR	1230792	Argument	env -> syntax		1230311	0					
ANR	1230793	PtrMemberAccess	env -> syntax		1230311	0					
ANR	1230794	Identifier	env		1230311	0					
ANR	1230795	Identifier	syntax		1230311	1					
ANR	1230796	Argument	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		1230311	1					
ANR	1230797	Identifier	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		1230311	0					
ANR	1230798	CompoundStatement		107:68:2643:2643	1230311	1					
ANR	1230799	ExpressionStatement	PFETCH ( c )	4614:3:102914:102923	1230311	0	True				
ANR	1230800	CallExpression	PFETCH ( c )		1230311	0					
ANR	1230801	Callee	PFETCH		1230311	0					
ANR	1230802	Identifier	PFETCH		1230311	0					
ANR	1230803	ArgumentList	c		1230311	1					
ANR	1230804	Argument	c		1230311	0					
ANR	1230805	Identifier	c		1230311	0					
ANR	1230806	IfStatement	if ( c == '<' || c == '\\'' )		1230311	1					
ANR	1230807	Condition	c == '<' || c == '\\''	4615:7:102932:102952	1230311	0	True				
ANR	1230808	OrExpression	c == '<' || c == '\\''		1230311	0		||			
ANR	1230809	EqualityExpression	c == '<'		1230311	0		==			
ANR	1230810	Identifier	c		1230311	0					
ANR	1230811	PrimaryExpression	'<'		1230311	1					
ANR	1230812	EqualityExpression	c == '\\''		1230311	1		==			
ANR	1230813	Identifier	c		1230311	0					
ANR	1230814	PrimaryExpression	'\\''		1230311	1					
ANR	1230815	CompoundStatement		109:30:2689:2689	1230311	1					
ANR	1230816	ExpressionStatement	list_capture = 1	4616:5:102962:102978	1230311	0	True				
ANR	1230817	AssignmentExpression	list_capture = 1		1230311	0		=			
ANR	1230818	Identifier	list_capture		1230311	0					
ANR	1230819	PrimaryExpression	1		1230311	1					
ANR	1230820	GotoStatement	goto named_group2 ;	4617:5:102985:103002	1230311	1	True				
ANR	1230821	Identifier	named_group2		1230311	0					
ANR	1230822	ExpressionStatement	PUNFETCH	4619:3:103032:103040	1230311	2	True				
ANR	1230823	Identifier	PUNFETCH		1230311	0					
ANR	1230824	ExpressionStatement	"* np = node_new_enclose_memory ( env -> option , 0 )"	4622:1:103053:103098	1230311	1	True				
ANR	1230825	AssignmentExpression	"* np = node_new_enclose_memory ( env -> option , 0 )"		1230311	0		=			
ANR	1230826	UnaryOperationExpression	* np		1230311	0					
ANR	1230827	UnaryOperator	*		1230311	0					
ANR	1230828	Identifier	np		1230311	1					
ANR	1230829	CallExpression	"node_new_enclose_memory ( env -> option , 0 )"		1230311	1					
ANR	1230830	Callee	node_new_enclose_memory		1230311	0					
ANR	1230831	Identifier	node_new_enclose_memory		1230311	0					
ANR	1230832	ArgumentList	env -> option		1230311	1					
ANR	1230833	Argument	env -> option		1230311	0					
ANR	1230834	PtrMemberAccess	env -> option		1230311	0					
ANR	1230835	Identifier	env		1230311	0					
ANR	1230836	Identifier	option		1230311	1					
ANR	1230837	Argument	0		1230311	1					
ANR	1230838	PrimaryExpression	0		1230311	0					
ANR	1230839	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4623:1:103101:103130	1230311	2	True				
ANR	1230840	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		1230311	0					
ANR	1230841	Callee	CHECK_NULL_RETURN_MEMERR		1230311	0					
ANR	1230842	Identifier	CHECK_NULL_RETURN_MEMERR		1230311	0					
ANR	1230843	ArgumentList	* np		1230311	1					
ANR	1230844	Argument	* np		1230311	0					
ANR	1230845	UnaryOperationExpression	* np		1230311	0					
ANR	1230846	UnaryOperator	*		1230311	0					
ANR	1230847	Identifier	np		1230311	1					
ANR	1230848	ExpressionStatement	num = scan_env_add_mem_entry ( env )	4624:1:103133:103166	1230311	3	True				
ANR	1230849	AssignmentExpression	num = scan_env_add_mem_entry ( env )		1230311	0		=			
ANR	1230850	Identifier	num		1230311	0					
ANR	1230851	CallExpression	scan_env_add_mem_entry ( env )		1230311	1					
ANR	1230852	Callee	scan_env_add_mem_entry		1230311	0					
ANR	1230853	Identifier	scan_env_add_mem_entry		1230311	0					
ANR	1230854	ArgumentList	env		1230311	1					
ANR	1230855	Argument	env		1230311	0					
ANR	1230856	Identifier	env		1230311	0					
ANR	1230857	IfStatement	if ( num < 0 )		1230311	4					
ANR	1230858	Condition	num < 0	4625:5:103173:103179	1230311	0	True				
ANR	1230859	RelationalExpression	num < 0		1230311	0		<			
ANR	1230860	Identifier	num		1230311	0					
ANR	1230861	PrimaryExpression	0		1230311	1					
ANR	1230862	CompoundStatement		119:14:2916:2916	1230311	1					
ANR	1230863	ExpressionStatement	onig_node_free ( * np )	4626:3:103187:103206	1230311	0	True				
ANR	1230864	CallExpression	onig_node_free ( * np )		1230311	0					
ANR	1230865	Callee	onig_node_free		1230311	0					
ANR	1230866	Identifier	onig_node_free		1230311	0					
ANR	1230867	ArgumentList	* np		1230311	1					
ANR	1230868	Argument	* np		1230311	0					
ANR	1230869	UnaryOperationExpression	* np		1230311	0					
ANR	1230870	UnaryOperator	*		1230311	0					
ANR	1230871	Identifier	np		1230311	1					
ANR	1230872	ReturnStatement	return num ;	4627:3:103211:103221	1230311	1	True				
ANR	1230873	Identifier	num		1230311	0					
ANR	1230874	ElseStatement	else		1230311	0					
ANR	1230875	IfStatement	if ( num >= ( int ) BIT_STATUS_BITS_NUM )		1230311	0					
ANR	1230876	Condition	num >= ( int ) BIT_STATUS_BITS_NUM	4629:10:103236:103267	1230311	0	True				
ANR	1230877	RelationalExpression	num >= ( int ) BIT_STATUS_BITS_NUM		1230311	0		>=			
ANR	1230878	Identifier	num		1230311	0					
ANR	1230879	CastExpression	( int ) BIT_STATUS_BITS_NUM		1230311	1					
ANR	1230880	CastTarget	int		1230311	0					
ANR	1230881	Identifier	BIT_STATUS_BITS_NUM		1230311	1					
ANR	1230882	CompoundStatement		123:44:3004:3004	1230311	1					
ANR	1230883	ExpressionStatement	onig_node_free ( * np )	4630:3:103275:103294	1230311	0	True				
ANR	1230884	CallExpression	onig_node_free ( * np )		1230311	0					
ANR	1230885	Callee	onig_node_free		1230311	0					
ANR	1230886	Identifier	onig_node_free		1230311	0					
ANR	1230887	ArgumentList	* np		1230311	1					
ANR	1230888	Argument	* np		1230311	0					
ANR	1230889	UnaryOperationExpression	* np		1230311	0					
ANR	1230890	UnaryOperator	*		1230311	0					
ANR	1230891	Identifier	np		1230311	1					
ANR	1230892	ReturnStatement	return ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY ;	4631:3:103299:103351	1230311	1	True				
ANR	1230893	Identifier	ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY		1230311	0					
ANR	1230894	ExpressionStatement	NENCLOSE ( * np ) -> regnum = num	4633:1:103357:103384	1230311	5	True				
ANR	1230895	AssignmentExpression	NENCLOSE ( * np ) -> regnum = num		1230311	0		=			
ANR	1230896	PtrMemberAccess	NENCLOSE ( * np ) -> regnum		1230311	0					
ANR	1230897	CallExpression	NENCLOSE ( * np )		1230311	0					
ANR	1230898	Callee	NENCLOSE		1230311	0					
ANR	1230899	Identifier	NENCLOSE		1230311	0					
ANR	1230900	ArgumentList	* np		1230311	1					
ANR	1230901	Argument	* np		1230311	0					
ANR	1230902	UnaryOperationExpression	* np		1230311	0					
ANR	1230903	UnaryOperator	*		1230311	0					
ANR	1230904	Identifier	np		1230311	1					
ANR	1230905	Identifier	regnum		1230311	1					
ANR	1230906	Identifier	num		1230311	1					
ANR	1230907	ExpressionStatement	"BIT_STATUS_ON_AT_SIMPLE ( env -> capture_history , num )"	4634:1:103387:103437	1230311	6	True				
ANR	1230908	CallExpression	"BIT_STATUS_ON_AT_SIMPLE ( env -> capture_history , num )"		1230311	0					
ANR	1230909	Callee	BIT_STATUS_ON_AT_SIMPLE		1230311	0					
ANR	1230910	Identifier	BIT_STATUS_ON_AT_SIMPLE		1230311	0					
ANR	1230911	ArgumentList	env -> capture_history		1230311	1					
ANR	1230912	Argument	env -> capture_history		1230311	0					
ANR	1230913	PtrMemberAccess	env -> capture_history		1230311	0					
ANR	1230914	Identifier	env		1230311	0					
ANR	1230915	Identifier	capture_history		1230311	1					
ANR	1230916	Argument	num		1230311	1					
ANR	1230917	Identifier	num		1230311	0					
ANR	1230918	ElseStatement	else		1230311	0					
ANR	1230919	CompoundStatement		130:11:3192:3192	1230311	0					
ANR	1230920	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4637:1:103461:103498	1230311	0	True				
ANR	1230921	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		1230311	0					
ANR	1230922	BreakStatement	break ;	4639:6:103514:103519	1230311	27	True				
ANR	1230923	Label	case 'p' :	4642:4:103554:103562	1230311	28	True				
ANR	1230924	Label	case '-' :	4644:4:103575:103583	1230311	29	True				
ANR	1230925	Label	case 'i' :	4644:14:103585:103593	1230311	30	True				
ANR	1230926	Label	case 'm' :	4644:24:103595:103603	1230311	31	True				
ANR	1230927	Label	case 's' :	4644:34:103605:103613	1230311	32	True				
ANR	1230928	Label	case 'x' :	4644:44:103615:103623	1230311	33	True				
ANR	1230929	CompoundStatement		140:1:3368:3379	1230311	34					
ANR	1230930	IdentifierDeclStatement	int neg = 0 ;	4646:1:103634:103645	1230311	0	True				
ANR	1230931	IdentifierDecl	neg = 0		1230311	0					
ANR	1230932	IdentifierDeclType	int		1230311	0					
ANR	1230933	Identifier	neg		1230311	1					
ANR	1230934	AssignmentExpression	neg = 0		1230311	2		=			
ANR	1230935	Identifier	neg		1230311	0					
ANR	1230936	PrimaryExpression	0		1230311	1					
ANR	1230937	WhileStatement	while ( 1 )		1230311	1					
ANR	1230938	Condition	1	4648:8:103656:103656	1230311	0	True				
ANR	1230939	PrimaryExpression	1		1230311	0					
ANR	1230940	CompoundStatement		142:11:3393:3393	1230311	1					
ANR	1230941	SwitchStatement	switch ( c )		1230311	0					
ANR	1230942	Condition	c	4649:11:103672:103672	1230311	0	True				
ANR	1230943	Identifier	c		1230311	0					
ANR	1230944	CompoundStatement		143:14:3409:3409	1230311	1					
ANR	1230945	Label	case ':' :	4650:3:103680:103688	1230311	0	True				
ANR	1230946	Label	case ')' :	4651:3:103693:103701	1230311	1	True				
ANR	1230947	BreakStatement	break ;	4652:3:103706:103711	1230311	2	True				
ANR	1230948	Label	case '-' :	4654:3:103717:103725	1230311	3	True				
ANR	1230949	ExpressionStatement	neg = 1	4654:14:103728:103735	1230311	4	True				
ANR	1230950	AssignmentExpression	neg = 1		1230311	0		=			
ANR	1230951	Identifier	neg		1230311	0					
ANR	1230952	PrimaryExpression	1		1230311	1					
ANR	1230953	BreakStatement	break ;	4654:23:103737:103742	1230311	5	True				
ANR	1230954	Label	case 'x' :	4655:3:103747:103755	1230311	6	True				
ANR	1230955	ExpressionStatement	"ONOFF ( option , ONIG_OPTION_EXTEND , neg )"	4655:14:103758:103800	1230311	7	True				
ANR	1230956	CallExpression	"ONOFF ( option , ONIG_OPTION_EXTEND , neg )"		1230311	0					
ANR	1230957	Callee	ONOFF		1230311	0					
ANR	1230958	Identifier	ONOFF		1230311	0					
ANR	1230959	ArgumentList	option		1230311	1					
ANR	1230960	Argument	option		1230311	0					
ANR	1230961	Identifier	option		1230311	0					
ANR	1230962	Argument	ONIG_OPTION_EXTEND		1230311	1					
ANR	1230963	Identifier	ONIG_OPTION_EXTEND		1230311	0					
ANR	1230964	Argument	neg		1230311	2					
ANR	1230965	Identifier	neg		1230311	0					
ANR	1230966	BreakStatement	break ;	4655:58:103802:103807	1230311	8	True				
ANR	1230967	Label	case 'i' :	4656:3:103812:103820	1230311	9	True				
ANR	1230968	ExpressionStatement	"ONOFF ( option , ONIG_OPTION_IGNORECASE , neg )"	4656:14:103823:103865	1230311	10	True				
ANR	1230969	CallExpression	"ONOFF ( option , ONIG_OPTION_IGNORECASE , neg )"		1230311	0					
ANR	1230970	Callee	ONOFF		1230311	0					
ANR	1230971	Identifier	ONOFF		1230311	0					
ANR	1230972	ArgumentList	option		1230311	1					
ANR	1230973	Argument	option		1230311	0					
ANR	1230974	Identifier	option		1230311	0					
ANR	1230975	Argument	ONIG_OPTION_IGNORECASE		1230311	1					
ANR	1230976	Identifier	ONIG_OPTION_IGNORECASE		1230311	0					
ANR	1230977	Argument	neg		1230311	2					
ANR	1230978	Identifier	neg		1230311	0					
ANR	1230979	BreakStatement	break ;	4656:58:103867:103872	1230311	11	True				
ANR	1230980	Label	case 's' :	4657:3:103877:103885	1230311	12	True				
ANR	1230981	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_PERL ) )"		1230311	13					
ANR	1230982	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_PERL )"	4658:9:103896:103947	1230311	0	True				
ANR	1230983	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_PERL )"		1230311	0					
ANR	1230984	Callee	IS_SYNTAX_OP2		1230311	0					
ANR	1230985	Identifier	IS_SYNTAX_OP2		1230311	0					
ANR	1230986	ArgumentList	env -> syntax		1230311	1					
ANR	1230987	Argument	env -> syntax		1230311	0					
ANR	1230988	PtrMemberAccess	env -> syntax		1230311	0					
ANR	1230989	Identifier	env		1230311	0					
ANR	1230990	Identifier	syntax		1230311	1					
ANR	1230991	Argument	ONIG_SYN_OP2_OPTION_PERL		1230311	1					
ANR	1230992	Identifier	ONIG_SYN_OP2_OPTION_PERL		1230311	0					
ANR	1230993	CompoundStatement		152:63:3684:3684	1230311	1					
ANR	1230994	ExpressionStatement	"ONOFF ( option , ONIG_OPTION_MULTILINE , neg )"	4659:7:103959:104001	1230311	0	True				
ANR	1230995	CallExpression	"ONOFF ( option , ONIG_OPTION_MULTILINE , neg )"		1230311	0					
ANR	1230996	Callee	ONOFF		1230311	0					
ANR	1230997	Identifier	ONOFF		1230311	0					
ANR	1230998	ArgumentList	option		1230311	1					
ANR	1230999	Argument	option		1230311	0					
ANR	1231000	Identifier	option		1230311	0					
ANR	1231001	Argument	ONIG_OPTION_MULTILINE		1230311	1					
ANR	1231002	Identifier	ONIG_OPTION_MULTILINE		1230311	0					
ANR	1231003	Argument	neg		1230311	2					
ANR	1231004	Identifier	neg		1230311	0					
ANR	1231005	ElseStatement	else		1230311	0					
ANR	1231006	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4662:7:104027:104064	1230311	0	True				
ANR	1231007	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		1230311	0					
ANR	1231008	BreakStatement	break ;	4663:5:104071:104076	1230311	14	True				
ANR	1231009	Label	case 'm' :	4665:3:104082:104090	1230311	15	True				
ANR	1231010	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_PERL ) )"		1230311	16					
ANR	1231011	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_PERL )"	4666:9:104101:104152	1230311	0	True				
ANR	1231012	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_PERL )"		1230311	0					
ANR	1231013	Callee	IS_SYNTAX_OP2		1230311	0					
ANR	1231014	Identifier	IS_SYNTAX_OP2		1230311	0					
ANR	1231015	ArgumentList	env -> syntax		1230311	1					
ANR	1231016	Argument	env -> syntax		1230311	0					
ANR	1231017	PtrMemberAccess	env -> syntax		1230311	0					
ANR	1231018	Identifier	env		1230311	0					
ANR	1231019	Identifier	syntax		1230311	1					
ANR	1231020	Argument	ONIG_SYN_OP2_OPTION_PERL		1230311	1					
ANR	1231021	Identifier	ONIG_SYN_OP2_OPTION_PERL		1230311	0					
ANR	1231022	CompoundStatement		160:63:3889:3889	1230311	1					
ANR	1231023	ExpressionStatement	"ONOFF ( option , ONIG_OPTION_SINGLELINE , ( neg == 0 ? 1 : 0 ) )"	4667:7:104164:104221	1230311	0	True				
ANR	1231024	CallExpression	"ONOFF ( option , ONIG_OPTION_SINGLELINE , ( neg == 0 ? 1 : 0 ) )"		1230311	0					
ANR	1231025	Callee	ONOFF		1230311	0					
ANR	1231026	Identifier	ONOFF		1230311	0					
ANR	1231027	ArgumentList	option		1230311	1					
ANR	1231028	Argument	option		1230311	0					
ANR	1231029	Identifier	option		1230311	0					
ANR	1231030	Argument	ONIG_OPTION_SINGLELINE		1230311	1					
ANR	1231031	Identifier	ONIG_OPTION_SINGLELINE		1230311	0					
ANR	1231032	Argument	neg == 0 ? 1 : 0		1230311	2					
ANR	1231033	ConditionalExpression	neg == 0 ? 1 : 0		1230311	0					
ANR	1231034	Condition	neg == 0		1230311	0					
ANR	1231035	EqualityExpression	neg == 0		1230311	0		==			
ANR	1231036	Identifier	neg		1230311	0					
ANR	1231037	PrimaryExpression	0		1230311	1					
ANR	1231038	PrimaryExpression	1		1230311	1					
ANR	1231039	PrimaryExpression	0		1230311	2					
ANR	1231040	ElseStatement	else		1230311	0					
ANR	1231041	IfStatement	"if ( IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_RUBY ) )"		1230311	0					
ANR	1231042	Condition	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_RUBY )"	4669:14:104244:104295	1230311	0	True				
ANR	1231043	CallExpression	"IS_SYNTAX_OP2 ( env -> syntax , ONIG_SYN_OP2_OPTION_RUBY )"		1230311	0					
ANR	1231044	Callee	IS_SYNTAX_OP2		1230311	0					
ANR	1231045	Identifier	IS_SYNTAX_OP2		1230311	0					
ANR	1231046	ArgumentList	env -> syntax		1230311	1					
ANR	1231047	Argument	env -> syntax		1230311	0					
ANR	1231048	PtrMemberAccess	env -> syntax		1230311	0					
ANR	1231049	Identifier	env		1230311	0					
ANR	1231050	Identifier	syntax		1230311	1					
ANR	1231051	Argument	ONIG_SYN_OP2_OPTION_RUBY		1230311	1					
ANR	1231052	Identifier	ONIG_SYN_OP2_OPTION_RUBY		1230311	0					
ANR	1231053	CompoundStatement		163:68:4032:4032	1230311	1					
ANR	1231054	ExpressionStatement	"ONOFF ( option , ONIG_OPTION_MULTILINE , neg )"	4670:7:104307:104349	1230311	0	True				
ANR	1231055	CallExpression	"ONOFF ( option , ONIG_OPTION_MULTILINE , neg )"		1230311	0					
ANR	1231056	Callee	ONOFF		1230311	0					
ANR	1231057	Identifier	ONOFF		1230311	0					
ANR	1231058	ArgumentList	option		1230311	1					
ANR	1231059	Argument	option		1230311	0					
ANR	1231060	Identifier	option		1230311	0					
ANR	1231061	Argument	ONIG_OPTION_MULTILINE		1230311	1					
ANR	1231062	Identifier	ONIG_OPTION_MULTILINE		1230311	0					
ANR	1231063	Argument	neg		1230311	2					
ANR	1231064	Identifier	neg		1230311	0					
ANR	1231065	ElseStatement	else		1230311	0					
ANR	1231066	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4673:7:104375:104412	1230311	0	True				
ANR	1231067	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		1230311	0					
ANR	1231068	BreakStatement	break ;	4674:5:104419:104424	1230311	17	True				
ANR	1231069	Label	case 'p' :	4676:3:104457:104465	1230311	18	True				
ANR	1231070	ExpressionStatement	"ONOFF ( option , ONIG_OPTION_MULTILINE | ONIG_OPTION_SINGLELINE , neg )"	4677:5:104472:104536	1230311	19	True				
ANR	1231071	CallExpression	"ONOFF ( option , ONIG_OPTION_MULTILINE | ONIG_OPTION_SINGLELINE , neg )"		1230311	0					
ANR	1231072	Callee	ONOFF		1230311	0					
ANR	1231073	Identifier	ONOFF		1230311	0					
ANR	1231074	ArgumentList	option		1230311	1					
ANR	1231075	Argument	option		1230311	0					
ANR	1231076	Identifier	option		1230311	0					
ANR	1231077	Argument	ONIG_OPTION_MULTILINE | ONIG_OPTION_SINGLELINE		1230311	1					
ANR	1231078	InclusiveOrExpression	ONIG_OPTION_MULTILINE | ONIG_OPTION_SINGLELINE		1230311	0		|			
ANR	1231079	Identifier	ONIG_OPTION_MULTILINE		1230311	0					
ANR	1231080	Identifier	ONIG_OPTION_SINGLELINE		1230311	1					
ANR	1231081	Argument	neg		1230311	2					
ANR	1231082	Identifier	neg		1230311	0					
ANR	1231083	BreakStatement	break ;	4678:5:104543:104548	1230311	20	True				
ANR	1231084	Label	default :	4680:3:104560:104567	1230311	21	True				
ANR	1231085	Identifier	default		1230311	0					
ANR	1231086	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4681:5:104574:104611	1230311	22	True				
ANR	1231087	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		1230311	0					
ANR	1231088	IfStatement	if ( c == ')' )		1230311	1					
ANR	1231089	Condition	c == ')'	4684:7:104626:104633	1230311	0	True				
ANR	1231090	EqualityExpression	c == ')'		1230311	0		==			
ANR	1231091	Identifier	c		1230311	0					
ANR	1231092	PrimaryExpression	')'		1230311	1					
ANR	1231093	CompoundStatement		178:17:4370:4370	1230311	1					
ANR	1231094	ExpressionStatement	* np = node_new_option ( option )	4685:5:104643:104672	1230311	0	True				
ANR	1231095	AssignmentExpression	* np = node_new_option ( option )		1230311	0		=			
ANR	1231096	UnaryOperationExpression	* np		1230311	0					
ANR	1231097	UnaryOperator	*		1230311	0					
ANR	1231098	Identifier	np		1230311	1					
ANR	1231099	CallExpression	node_new_option ( option )		1230311	1					
ANR	1231100	Callee	node_new_option		1230311	0					
ANR	1231101	Identifier	node_new_option		1230311	0					
ANR	1231102	ArgumentList	option		1230311	1					
ANR	1231103	Argument	option		1230311	0					
ANR	1231104	Identifier	option		1230311	0					
ANR	1231105	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4686:5:104679:104708	1230311	1	True				
ANR	1231106	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		1230311	0					
ANR	1231107	Callee	CHECK_NULL_RETURN_MEMERR		1230311	0					
ANR	1231108	Identifier	CHECK_NULL_RETURN_MEMERR		1230311	0					
ANR	1231109	ArgumentList	* np		1230311	1					
ANR	1231110	Argument	* np		1230311	0					
ANR	1231111	UnaryOperationExpression	* np		1230311	0					
ANR	1231112	UnaryOperator	*		1230311	0					
ANR	1231113	Identifier	np		1230311	1					
ANR	1231114	ExpressionStatement	* src = p	4687:5:104715:104723	1230311	2	True				
ANR	1231115	AssignmentExpression	* src = p		1230311	0		=			
ANR	1231116	UnaryOperationExpression	* src		1230311	0					
ANR	1231117	UnaryOperator	*		1230311	0					
ANR	1231118	Identifier	src		1230311	1					
ANR	1231119	Identifier	p		1230311	1					
ANR	1231120	ReturnStatement	return 2 ;	4688:5:104730:104738	1230311	3	True				
ANR	1231121	PrimaryExpression	2		1230311	0					
ANR	1231122	ElseStatement	else		1230311	0					
ANR	1231123	IfStatement	if ( c == ':' )		1230311	0					
ANR	1231124	Condition	c == ':'	4690:12:104775:104782	1230311	0	True				
ANR	1231125	EqualityExpression	c == ':'		1230311	0		==			
ANR	1231126	Identifier	c		1230311	0					
ANR	1231127	PrimaryExpression	':'		1230311	1					
ANR	1231128	CompoundStatement		185:5:4526:4559	1230311	1					
ANR	1231129	IdentifierDeclStatement	OnigOptionType prev = env -> option ;	4691:5:104792:104825	1230311	0	True				
ANR	1231130	IdentifierDecl	prev = env -> option		1230311	0					
ANR	1231131	IdentifierDeclType	OnigOptionType		1230311	0					
ANR	1231132	Identifier	prev		1230311	1					
ANR	1231133	AssignmentExpression	prev = env -> option		1230311	2		=			
ANR	1231134	Identifier	prev		1230311	0					
ANR	1231135	PtrMemberAccess	env -> option		1230311	1					
ANR	1231136	Identifier	env		1230311	0					
ANR	1231137	Identifier	option		1230311	1					
ANR	1231138	ExpressionStatement	env -> option = option	4693:5:104833:104857	1230311	1	True				
ANR	1231139	AssignmentExpression	env -> option = option		1230311	0		=			
ANR	1231140	PtrMemberAccess	env -> option		1230311	0					
ANR	1231141	Identifier	env		1230311	0					
ANR	1231142	Identifier	option		1230311	1					
ANR	1231143	Identifier	option		1230311	1					
ANR	1231144	ExpressionStatement	"r = fetch_token ( tok , & p , end , env )"	4694:5:104864:104898	1230311	2	True				
ANR	1231145	AssignmentExpression	"r = fetch_token ( tok , & p , end , env )"		1230311	0		=			
ANR	1231146	Identifier	r		1230311	0					
ANR	1231147	CallExpression	"fetch_token ( tok , & p , end , env )"		1230311	1					
ANR	1231148	Callee	fetch_token		1230311	0					
ANR	1231149	Identifier	fetch_token		1230311	0					
ANR	1231150	ArgumentList	tok		1230311	1					
ANR	1231151	Argument	tok		1230311	0					
ANR	1231152	Identifier	tok		1230311	0					
ANR	1231153	Argument	& p		1230311	1					
ANR	1231154	UnaryOperationExpression	& p		1230311	0					
ANR	1231155	UnaryOperator	&		1230311	0					
ANR	1231156	Identifier	p		1230311	1					
ANR	1231157	Argument	end		1230311	2					
ANR	1231158	Identifier	end		1230311	0					
ANR	1231159	Argument	env		1230311	3					
ANR	1231160	Identifier	env		1230311	0					
ANR	1231161	IfStatement	if ( r < 0 )		1230311	3					
ANR	1231162	Condition	r < 0	4695:9:104909:104913	1230311	0	True				
ANR	1231163	RelationalExpression	r < 0		1230311	0		<			
ANR	1231164	Identifier	r		1230311	0					
ANR	1231165	PrimaryExpression	0		1230311	1					
ANR	1231166	ReturnStatement	return r ;	4695:16:104916:104924	1230311	1	True				
ANR	1231167	Identifier	r		1230311	0					
ANR	1231168	ExpressionStatement	"r = parse_subexp ( & target , tok , term , & p , end , env )"	4696:5:104931:104981	1230311	4	True				
ANR	1231169	AssignmentExpression	"r = parse_subexp ( & target , tok , term , & p , end , env )"		1230311	0		=			
ANR	1231170	Identifier	r		1230311	0					
ANR	1231171	CallExpression	"parse_subexp ( & target , tok , term , & p , end , env )"		1230311	1					
ANR	1231172	Callee	parse_subexp		1230311	0					
ANR	1231173	Identifier	parse_subexp		1230311	0					
ANR	1231174	ArgumentList	& target		1230311	1					
ANR	1231175	Argument	& target		1230311	0					
ANR	1231176	UnaryOperationExpression	& target		1230311	0					
ANR	1231177	UnaryOperator	&		1230311	0					
ANR	1231178	Identifier	target		1230311	1					
ANR	1231179	Argument	tok		1230311	1					
ANR	1231180	Identifier	tok		1230311	0					
ANR	1231181	Argument	term		1230311	2					
ANR	1231182	Identifier	term		1230311	0					
ANR	1231183	Argument	& p		1230311	3					
ANR	1231184	UnaryOperationExpression	& p		1230311	0					
ANR	1231185	UnaryOperator	&		1230311	0					
ANR	1231186	Identifier	p		1230311	1					
ANR	1231187	Argument	end		1230311	4					
ANR	1231188	Identifier	end		1230311	0					
ANR	1231189	Argument	env		1230311	5					
ANR	1231190	Identifier	env		1230311	0					
ANR	1231191	ExpressionStatement	env -> option = prev	4697:5:104988:105006	1230311	5	True				
ANR	1231192	AssignmentExpression	env -> option = prev		1230311	0		=			
ANR	1231193	PtrMemberAccess	env -> option		1230311	0					
ANR	1231194	Identifier	env		1230311	0					
ANR	1231195	Identifier	option		1230311	1					
ANR	1231196	Identifier	prev		1230311	1					
ANR	1231197	IfStatement	if ( r < 0 )		1230311	6					
ANR	1231198	Condition	r < 0	4698:9:105017:105021	1230311	0	True				
ANR	1231199	RelationalExpression	r < 0		1230311	0		<			
ANR	1231200	Identifier	r		1230311	0					
ANR	1231201	PrimaryExpression	0		1230311	1					
ANR	1231202	ReturnStatement	return r ;	4698:16:105024:105032	1230311	1	True				
ANR	1231203	Identifier	r		1230311	0					
ANR	1231204	ExpressionStatement	* np = node_new_option ( option )	4699:5:105039:105068	1230311	7	True				
ANR	1231205	AssignmentExpression	* np = node_new_option ( option )		1230311	0		=			
ANR	1231206	UnaryOperationExpression	* np		1230311	0					
ANR	1231207	UnaryOperator	*		1230311	0					
ANR	1231208	Identifier	np		1230311	1					
ANR	1231209	CallExpression	node_new_option ( option )		1230311	1					
ANR	1231210	Callee	node_new_option		1230311	0					
ANR	1231211	Identifier	node_new_option		1230311	0					
ANR	1231212	ArgumentList	option		1230311	1					
ANR	1231213	Argument	option		1230311	0					
ANR	1231214	Identifier	option		1230311	0					
ANR	1231215	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4700:5:105075:105104	1230311	8	True				
ANR	1231216	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		1230311	0					
ANR	1231217	Callee	CHECK_NULL_RETURN_MEMERR		1230311	0					
ANR	1231218	Identifier	CHECK_NULL_RETURN_MEMERR		1230311	0					
ANR	1231219	ArgumentList	* np		1230311	1					
ANR	1231220	Argument	* np		1230311	0					
ANR	1231221	UnaryOperationExpression	* np		1230311	0					
ANR	1231222	UnaryOperator	*		1230311	0					
ANR	1231223	Identifier	np		1230311	1					
ANR	1231224	ExpressionStatement	NENCLOSE ( * np ) -> target = target	4701:5:105111:105141	1230311	9	True				
ANR	1231225	AssignmentExpression	NENCLOSE ( * np ) -> target = target		1230311	0		=			
ANR	1231226	PtrMemberAccess	NENCLOSE ( * np ) -> target		1230311	0					
ANR	1231227	CallExpression	NENCLOSE ( * np )		1230311	0					
ANR	1231228	Callee	NENCLOSE		1230311	0					
ANR	1231229	Identifier	NENCLOSE		1230311	0					
ANR	1231230	ArgumentList	* np		1230311	1					
ANR	1231231	Argument	* np		1230311	0					
ANR	1231232	UnaryOperationExpression	* np		1230311	0					
ANR	1231233	UnaryOperator	*		1230311	0					
ANR	1231234	Identifier	np		1230311	1					
ANR	1231235	Identifier	target		1230311	1					
ANR	1231236	Identifier	target		1230311	1					
ANR	1231237	ExpressionStatement	* src = p	4702:5:105148:105156	1230311	10	True				
ANR	1231238	AssignmentExpression	* src = p		1230311	0		=			
ANR	1231239	UnaryOperationExpression	* src		1230311	0					
ANR	1231240	UnaryOperator	*		1230311	0					
ANR	1231241	Identifier	src		1230311	1					
ANR	1231242	Identifier	p		1230311	1					
ANR	1231243	ReturnStatement	return 0 ;	4703:5:105163:105171	1230311	11	True				
ANR	1231244	PrimaryExpression	0		1230311	0					
ANR	1231245	IfStatement	if ( PEND )		1230311	2					
ANR	1231246	Condition	PEND	4706:7:105186:105189	1230311	0	True				
ANR	1231247	Identifier	PEND		1230311	0					
ANR	1231248	ReturnStatement	return ONIGERR_END_PATTERN_IN_GROUP ;	4706:13:105192:105227	1230311	1	True				
ANR	1231249	Identifier	ONIGERR_END_PATTERN_IN_GROUP		1230311	0					
ANR	1231250	ExpressionStatement	PFETCH ( c )	4707:3:105232:105241	1230311	3	True				
ANR	1231251	CallExpression	PFETCH ( c )		1230311	0					
ANR	1231252	Callee	PFETCH		1230311	0					
ANR	1231253	Identifier	PFETCH		1230311	0					
ANR	1231254	ArgumentList	c		1230311	1					
ANR	1231255	Argument	c		1230311	0					
ANR	1231256	Identifier	c		1230311	0					
ANR	1231257	BreakStatement	break ;	4710:6:105260:105265	1230311	35	True				
ANR	1231258	Label	default :	4712:4:105272:105279	1230311	36	True				
ANR	1231259	Identifier	default		1230311	0					
ANR	1231260	ReturnStatement	return ONIGERR_UNDEFINED_GROUP_OPTION ;	4713:6:105287:105324	1230311	37	True				
ANR	1231261	Identifier	ONIGERR_UNDEFINED_GROUP_OPTION		1230311	0					
ANR	1231262	ElseStatement	else		1230311	0					
ANR	1231263	CompoundStatement		210:7:5077:5077	1230311	0					
ANR	1231264	IfStatement	"if ( ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_DONT_CAPTURE_GROUP ) )"		1230311	0					
ANR	1231265	Condition	"ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_DONT_CAPTURE_GROUP )"	4717:8:105353:105414	1230311	0	True				
ANR	1231266	CallExpression	"ONIG_IS_OPTION_ON ( env -> option , ONIG_OPTION_DONT_CAPTURE_GROUP )"		1230311	0					
ANR	1231267	Callee	ONIG_IS_OPTION_ON		1230311	0					
ANR	1231268	Identifier	ONIG_IS_OPTION_ON		1230311	0					
ANR	1231269	ArgumentList	env -> option		1230311	1					
ANR	1231270	Argument	env -> option		1230311	0					
ANR	1231271	PtrMemberAccess	env -> option		1230311	0					
ANR	1231272	Identifier	env		1230311	0					
ANR	1231273	Identifier	option		1230311	1					
ANR	1231274	Argument	ONIG_OPTION_DONT_CAPTURE_GROUP		1230311	1					
ANR	1231275	Identifier	ONIG_OPTION_DONT_CAPTURE_GROUP		1230311	0					
ANR	1231276	GotoStatement	goto group ;	4718:6:105423:105433	1230311	1	True				
ANR	1231277	Identifier	group		1230311	0					
ANR	1231278	ExpressionStatement	"* np = node_new_enclose_memory ( env -> option , 0 )"	4720:4:105440:105485	1230311	1	True				
ANR	1231279	AssignmentExpression	"* np = node_new_enclose_memory ( env -> option , 0 )"		1230311	0		=			
ANR	1231280	UnaryOperationExpression	* np		1230311	0					
ANR	1231281	UnaryOperator	*		1230311	0					
ANR	1231282	Identifier	np		1230311	1					
ANR	1231283	CallExpression	"node_new_enclose_memory ( env -> option , 0 )"		1230311	1					
ANR	1231284	Callee	node_new_enclose_memory		1230311	0					
ANR	1231285	Identifier	node_new_enclose_memory		1230311	0					
ANR	1231286	ArgumentList	env -> option		1230311	1					
ANR	1231287	Argument	env -> option		1230311	0					
ANR	1231288	PtrMemberAccess	env -> option		1230311	0					
ANR	1231289	Identifier	env		1230311	0					
ANR	1231290	Identifier	option		1230311	1					
ANR	1231291	Argument	0		1230311	1					
ANR	1231292	PrimaryExpression	0		1230311	0					
ANR	1231293	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4721:4:105491:105520	1230311	2	True				
ANR	1231294	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		1230311	0					
ANR	1231295	Callee	CHECK_NULL_RETURN_MEMERR		1230311	0					
ANR	1231296	Identifier	CHECK_NULL_RETURN_MEMERR		1230311	0					
ANR	1231297	ArgumentList	* np		1230311	1					
ANR	1231298	Argument	* np		1230311	0					
ANR	1231299	UnaryOperationExpression	* np		1230311	0					
ANR	1231300	UnaryOperator	*		1230311	0					
ANR	1231301	Identifier	np		1230311	1					
ANR	1231302	ExpressionStatement	num = scan_env_add_mem_entry ( env )	4722:4:105526:105559	1230311	3	True				
ANR	1231303	AssignmentExpression	num = scan_env_add_mem_entry ( env )		1230311	0		=			
ANR	1231304	Identifier	num		1230311	0					
ANR	1231305	CallExpression	scan_env_add_mem_entry ( env )		1230311	1					
ANR	1231306	Callee	scan_env_add_mem_entry		1230311	0					
ANR	1231307	Identifier	scan_env_add_mem_entry		1230311	0					
ANR	1231308	ArgumentList	env		1230311	1					
ANR	1231309	Argument	env		1230311	0					
ANR	1231310	Identifier	env		1230311	0					
ANR	1231311	IfStatement	if ( num < 0 )		1230311	4					
ANR	1231312	Condition	num < 0	4723:8:105569:105575	1230311	0	True				
ANR	1231313	RelationalExpression	num < 0		1230311	0		<			
ANR	1231314	Identifier	num		1230311	0					
ANR	1231315	PrimaryExpression	0		1230311	1					
ANR	1231316	ReturnStatement	return num ;	4723:17:105578:105588	1230311	1	True				
ANR	1231317	Identifier	num		1230311	0					
ANR	1231318	ExpressionStatement	NENCLOSE ( * np ) -> regnum = num	4724:4:105594:105621	1230311	5	True				
ANR	1231319	AssignmentExpression	NENCLOSE ( * np ) -> regnum = num		1230311	0		=			
ANR	1231320	PtrMemberAccess	NENCLOSE ( * np ) -> regnum		1230311	0					
ANR	1231321	CallExpression	NENCLOSE ( * np )		1230311	0					
ANR	1231322	Callee	NENCLOSE		1230311	0					
ANR	1231323	Identifier	NENCLOSE		1230311	0					
ANR	1231324	ArgumentList	* np		1230311	1					
ANR	1231325	Argument	* np		1230311	0					
ANR	1231326	UnaryOperationExpression	* np		1230311	0					
ANR	1231327	UnaryOperator	*		1230311	0					
ANR	1231328	Identifier	np		1230311	1					
ANR	1231329	Identifier	regnum		1230311	1					
ANR	1231330	Identifier	num		1230311	1					
ANR	1231331	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	4727:2:105630:105659	1230311	12	True				
ANR	1231332	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		1230311	0					
ANR	1231333	Callee	CHECK_NULL_RETURN_MEMERR		1230311	0					
ANR	1231334	Identifier	CHECK_NULL_RETURN_MEMERR		1230311	0					
ANR	1231335	ArgumentList	* np		1230311	1					
ANR	1231336	Argument	* np		1230311	0					
ANR	1231337	UnaryOperationExpression	* np		1230311	0					
ANR	1231338	UnaryOperator	*		1230311	0					
ANR	1231339	Identifier	np		1230311	1					
ANR	1231340	ExpressionStatement	"r = fetch_token ( tok , & p , end , env )"	4728:2:105663:105697	1230311	13	True				
ANR	1231341	AssignmentExpression	"r = fetch_token ( tok , & p , end , env )"		1230311	0		=			
ANR	1231342	Identifier	r		1230311	0					
ANR	1231343	CallExpression	"fetch_token ( tok , & p , end , env )"		1230311	1					
ANR	1231344	Callee	fetch_token		1230311	0					
ANR	1231345	Identifier	fetch_token		1230311	0					
ANR	1231346	ArgumentList	tok		1230311	1					
ANR	1231347	Argument	tok		1230311	0					
ANR	1231348	Identifier	tok		1230311	0					
ANR	1231349	Argument	& p		1230311	1					
ANR	1231350	UnaryOperationExpression	& p		1230311	0					
ANR	1231351	UnaryOperator	&		1230311	0					
ANR	1231352	Identifier	p		1230311	1					
ANR	1231353	Argument	end		1230311	2					
ANR	1231354	Identifier	end		1230311	0					
ANR	1231355	Argument	env		1230311	3					
ANR	1231356	Identifier	env		1230311	0					
ANR	1231357	IfStatement	if ( r < 0 )		1230311	14					
ANR	1231358	Condition	r < 0	4729:6:105705:105709	1230311	0	True				
ANR	1231359	RelationalExpression	r < 0		1230311	0		<			
ANR	1231360	Identifier	r		1230311	0					
ANR	1231361	PrimaryExpression	0		1230311	1					
ANR	1231362	ReturnStatement	return r ;	4729:13:105712:105720	1230311	1	True				
ANR	1231363	Identifier	r		1230311	0					
ANR	1231364	ExpressionStatement	"r = parse_subexp ( & target , tok , term , & p , end , env )"	4730:2:105724:105774	1230311	15	True				
ANR	1231365	AssignmentExpression	"r = parse_subexp ( & target , tok , term , & p , end , env )"		1230311	0		=			
ANR	1231366	Identifier	r		1230311	0					
ANR	1231367	CallExpression	"parse_subexp ( & target , tok , term , & p , end , env )"		1230311	1					
ANR	1231368	Callee	parse_subexp		1230311	0					
ANR	1231369	Identifier	parse_subexp		1230311	0					
ANR	1231370	ArgumentList	& target		1230311	1					
ANR	1231371	Argument	& target		1230311	0					
ANR	1231372	UnaryOperationExpression	& target		1230311	0					
ANR	1231373	UnaryOperator	&		1230311	0					
ANR	1231374	Identifier	target		1230311	1					
ANR	1231375	Argument	tok		1230311	1					
ANR	1231376	Identifier	tok		1230311	0					
ANR	1231377	Argument	term		1230311	2					
ANR	1231378	Identifier	term		1230311	0					
ANR	1231379	Argument	& p		1230311	3					
ANR	1231380	UnaryOperationExpression	& p		1230311	0					
ANR	1231381	UnaryOperator	&		1230311	0					
ANR	1231382	Identifier	p		1230311	1					
ANR	1231383	Argument	end		1230311	4					
ANR	1231384	Identifier	end		1230311	0					
ANR	1231385	Argument	env		1230311	5					
ANR	1231386	Identifier	env		1230311	0					
ANR	1231387	IfStatement	if ( r < 0 )		1230311	16					
ANR	1231388	Condition	r < 0	4731:6:105782:105786	1230311	0	True				
ANR	1231389	RelationalExpression	r < 0		1230311	0		<			
ANR	1231390	Identifier	r		1230311	0					
ANR	1231391	PrimaryExpression	0		1230311	1					
ANR	1231392	ReturnStatement	return r ;	4731:13:105789:105797	1230311	1	True				
ANR	1231393	Identifier	r		1230311	0					
ANR	1231394	IfStatement	if ( NTYPE ( * np ) == NT_ANCHOR )		1230311	17					
ANR	1231395	Condition	NTYPE ( * np ) == NT_ANCHOR	4733:6:105806:105828	1230311	0	True				
ANR	1231396	EqualityExpression	NTYPE ( * np ) == NT_ANCHOR		1230311	0		==			
ANR	1231397	CallExpression	NTYPE ( * np )		1230311	0					
ANR	1231398	Callee	NTYPE		1230311	0					
ANR	1231399	Identifier	NTYPE		1230311	0					
ANR	1231400	ArgumentList	* np		1230311	1					
ANR	1231401	Argument	* np		1230311	0					
ANR	1231402	UnaryOperationExpression	* np		1230311	0					
ANR	1231403	UnaryOperator	*		1230311	0					
ANR	1231404	Identifier	np		1230311	1					
ANR	1231405	Identifier	NT_ANCHOR		1230311	1					
ANR	1231406	ExpressionStatement	NANCHOR ( * np ) -> target = target	4734:4:105835:105864	1230311	1	True				
ANR	1231407	AssignmentExpression	NANCHOR ( * np ) -> target = target		1230311	0		=			
ANR	1231408	PtrMemberAccess	NANCHOR ( * np ) -> target		1230311	0					
ANR	1231409	CallExpression	NANCHOR ( * np )		1230311	0					
ANR	1231410	Callee	NANCHOR		1230311	0					
ANR	1231411	Identifier	NANCHOR		1230311	0					
ANR	1231412	ArgumentList	* np		1230311	1					
ANR	1231413	Argument	* np		1230311	0					
ANR	1231414	UnaryOperationExpression	* np		1230311	0					
ANR	1231415	UnaryOperator	*		1230311	0					
ANR	1231416	Identifier	np		1230311	1					
ANR	1231417	Identifier	target		1230311	1					
ANR	1231418	Identifier	target		1230311	1					
ANR	1231419	ElseStatement	else		1230311	0					
ANR	1231420	CompoundStatement		229:7:5607:5607	1230311	0					
ANR	1231421	ExpressionStatement	NENCLOSE ( * np ) -> target = target	4736:4:105879:105909	1230311	0	True				
ANR	1231422	AssignmentExpression	NENCLOSE ( * np ) -> target = target		1230311	0		=			
ANR	1231423	PtrMemberAccess	NENCLOSE ( * np ) -> target		1230311	0					
ANR	1231424	CallExpression	NENCLOSE ( * np )		1230311	0					
ANR	1231425	Callee	NENCLOSE		1230311	0					
ANR	1231426	Identifier	NENCLOSE		1230311	0					
ANR	1231427	ArgumentList	* np		1230311	1					
ANR	1231428	Argument	* np		1230311	0					
ANR	1231429	UnaryOperationExpression	* np		1230311	0					
ANR	1231430	UnaryOperator	*		1230311	0					
ANR	1231431	Identifier	np		1230311	1					
ANR	1231432	Identifier	target		1230311	1					
ANR	1231433	Identifier	target		1230311	1					
ANR	1231434	IfStatement	if ( NENCLOSE ( * np ) -> type == ENCLOSE_MEMORY )		1230311	1					
ANR	1231435	Condition	NENCLOSE ( * np ) -> type == ENCLOSE_MEMORY	4737:8:105919:105955	1230311	0	True				
ANR	1231436	EqualityExpression	NENCLOSE ( * np ) -> type == ENCLOSE_MEMORY		1230311	0		==			
ANR	1231437	PtrMemberAccess	NENCLOSE ( * np ) -> type		1230311	0					
ANR	1231438	CallExpression	NENCLOSE ( * np )		1230311	0					
ANR	1231439	Callee	NENCLOSE		1230311	0					
ANR	1231440	Identifier	NENCLOSE		1230311	0					
ANR	1231441	ArgumentList	* np		1230311	1					
ANR	1231442	Argument	* np		1230311	0					
ANR	1231443	UnaryOperationExpression	* np		1230311	0					
ANR	1231444	UnaryOperator	*		1230311	0					
ANR	1231445	Identifier	np		1230311	1					
ANR	1231446	Identifier	type		1230311	1					
ANR	1231447	Identifier	ENCLOSE_MEMORY		1230311	1					
ANR	1231448	CompoundStatement		231:47:5692:5692	1230311	1					
ANR	1231449	ExpressionStatement	"r = scan_env_set_mem_node ( env , NENCLOSE ( * np ) -> regnum , * np )"	4739:6:106024:106082	1230311	0	True				
ANR	1231450	AssignmentExpression	"r = scan_env_set_mem_node ( env , NENCLOSE ( * np ) -> regnum , * np )"		1230311	0		=			
ANR	1231451	Identifier	r		1230311	0					
ANR	1231452	CallExpression	"scan_env_set_mem_node ( env , NENCLOSE ( * np ) -> regnum , * np )"		1230311	1					
ANR	1231453	Callee	scan_env_set_mem_node		1230311	0					
ANR	1231454	Identifier	scan_env_set_mem_node		1230311	0					
ANR	1231455	ArgumentList	env		1230311	1					
ANR	1231456	Argument	env		1230311	0					
ANR	1231457	Identifier	env		1230311	0					
ANR	1231458	Argument	NENCLOSE ( * np ) -> regnum		1230311	1					
ANR	1231459	PtrMemberAccess	NENCLOSE ( * np ) -> regnum		1230311	0					
ANR	1231460	CallExpression	NENCLOSE ( * np )		1230311	0					
ANR	1231461	Callee	NENCLOSE		1230311	0					
ANR	1231462	Identifier	NENCLOSE		1230311	0					
ANR	1231463	ArgumentList	* np		1230311	1					
ANR	1231464	Argument	* np		1230311	0					
ANR	1231465	UnaryOperationExpression	* np		1230311	0					
ANR	1231466	UnaryOperator	*		1230311	0					
ANR	1231467	Identifier	np		1230311	1					
ANR	1231468	Identifier	regnum		1230311	1					
ANR	1231469	Argument	* np		1230311	2					
ANR	1231470	UnaryOperationExpression	* np		1230311	0					
ANR	1231471	UnaryOperator	*		1230311	0					
ANR	1231472	Identifier	np		1230311	1					
ANR	1231473	IfStatement	if ( r != 0 )		1230311	1					
ANR	1231474	Condition	r != 0	4740:10:106094:106099	1230311	0	True				
ANR	1231475	EqualityExpression	r != 0		1230311	0		!=			
ANR	1231476	Identifier	r		1230311	0					
ANR	1231477	PrimaryExpression	0		1230311	1					
ANR	1231478	ReturnStatement	return r ;	4740:18:106102:106110	1230311	1	True				
ANR	1231479	Identifier	r		1230311	0					
ANR	1231480	ExpressionStatement	* src = p	4744:2:106125:106133	1230311	18	True				
ANR	1231481	AssignmentExpression	* src = p		1230311	0		=			
ANR	1231482	UnaryOperationExpression	* src		1230311	0					
ANR	1231483	UnaryOperator	*		1230311	0					
ANR	1231484	Identifier	src		1230311	1					
ANR	1231485	Identifier	p		1230311	1					
ANR	1231486	ReturnStatement	return 0 ;	4745:2:106137:106145	1230311	19	True				
ANR	1231487	PrimaryExpression	0		1230311	0					
ANR	1231488	ReturnType	static int		1230311	1					
ANR	1231489	Identifier	parse_enclose		1230311	2					
ANR	1231490	ParameterList	"Node * * np , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env"		1230311	3					
ANR	1231491	Parameter	Node * * np	4505:14:100182:100190	1230311	0	True				
ANR	1231492	ParameterType	Node * *		1230311	0					
ANR	1231493	Identifier	np		1230311	1					
ANR	1231494	Parameter	OnigToken * tok	4505:25:100193:100206	1230311	1	True				
ANR	1231495	ParameterType	OnigToken *		1230311	0					
ANR	1231496	Identifier	tok		1230311	1					
ANR	1231497	Parameter	int term	4505:41:100209:100216	1230311	2	True				
ANR	1231498	ParameterType	int		1230311	0					
ANR	1231499	Identifier	term		1230311	1					
ANR	1231500	Parameter	UChar * * src	4505:51:100219:100229	1230311	3	True				
ANR	1231501	ParameterType	UChar * *		1230311	0					
ANR	1231502	Identifier	src		1230311	1					
ANR	1231503	Parameter	UChar * end	4505:64:100232:100241	1230311	4	True				
ANR	1231504	ParameterType	UChar *		1230311	0					
ANR	1231505	Identifier	end		1230311	1					
ANR	1231506	Parameter	ScanEnv * env	4506:7:100251:100262	1230311	5	True				
ANR	1231507	ParameterType	ScanEnv *		1230311	0					
ANR	1231508	Identifier	env		1230311	1					
ANR	1231509	CFGEntryNode	ENTRY		1230311		True				
ANR	1231510	CFGExitNode	EXIT		1230311		True				
ANR	1231511	Symbol	node_new_enclose_memory		1230311						
ANR	1231512	Symbol	num		1230311						
ANR	1231513	Symbol	ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS		1230311						
ANR	1231514	Symbol	prev		1230311						
ANR	1231515	Symbol	env -> num_named		1230311						
ANR	1231516	Symbol	ONIG_OPTION_IGNORECASE		1230311						
ANR	1231517	Symbol	NANCHOR ( * np ) -> target		1230311						
ANR	1231518	Symbol	ONIGERR_GROUP_NUMBER_OVER_FOR_CAPTURE_HISTORY		1230311						
ANR	1231519	Symbol	* src		1230311						
ANR	1231520	Symbol	env -> reg		1230311						
ANR	1231521	Symbol	env -> option		1230311						
ANR	1231522	Symbol	ANCHOR_PREC_READ_NOT		1230311						
ANR	1231523	Symbol	neg		1230311						
ANR	1231524	Symbol	ONIG_SYN_OP2_ATMARK_CAPTURE_HISTORY		1230311						
ANR	1231525	Symbol	NENCLOSE ( * np ) -> regnum		1230311						
ANR	1231526	Symbol	ENCLOSE_MEMORY		1230311						
ANR	1231527	Symbol	list_capture		1230311						
ANR	1231528	Symbol	env -> capture_history		1230311						
ANR	1231529	Symbol	parse_subexp		1230311						
ANR	1231530	Symbol	name_end		1230311						
ANR	1231531	Symbol	NULL		1230311						
ANR	1231532	Symbol	ENCLOSE_STOP_BACKTRACK		1230311						
ANR	1231533	Symbol	ONIGERR_UNDEFINED_GROUP_OPTION		1230311						
ANR	1231534	Symbol	* env		1230311						
ANR	1231535	Symbol	& num		1230311						
ANR	1231536	Symbol	env -> syntax		1230311						
ANR	1231537	Symbol	ANCHOR_PREC_READ		1230311						
ANR	1231538	Symbol	ONIG_SYN_OP2_QMARK_LT_NAMED_GROUP		1230311						
ANR	1231539	Symbol	ONIG_SYN_OP2_OPTION_RUBY		1230311						
ANR	1231540	Symbol	name		1230311						
ANR	1231541	Symbol	ONIG_OPTION_DONT_CAPTURE_GROUP		1230311						
ANR	1231542	Symbol	ONIG_OPTION_SINGLELINE		1230311						
ANR	1231543	Symbol	onig_node_new_anchor		1230311						
ANR	1231544	Symbol	option		1230311						
ANR	1231545	Symbol	PPEEK_IS		1230311						
ANR	1231546	Symbol	np		1230311						
ANR	1231547	Symbol	BIT_STATUS_BITS_NUM		1230311						
ANR	1231548	Symbol	* NENCLOSE		1230311						
ANR	1231549	Symbol	ONIG_OPTION_MULTILINE		1230311						
ANR	1231550	Symbol	env -> enc		1230311						
ANR	1231551	Symbol	fetch_name		1230311						
ANR	1231552	Symbol	node_new_enclose		1230311						
ANR	1231553	Symbol	NT_ANCHOR		1230311						
ANR	1231554	Symbol	PEND		1230311						
ANR	1231555	Symbol	IS_SYNTAX_OP2		1230311						
ANR	1231556	Symbol	& name_end		1230311						
ANR	1231557	Symbol	tok		1230311						
ANR	1231558	Symbol	ONIG_SYN_OP2_QMARK_GROUP_EFFECT		1230311						
ANR	1231559	Symbol	name_add		1230311						
ANR	1231560	Symbol	NENCLOSE		1230311						
ANR	1231561	Symbol	* NANCHOR		1230311						
ANR	1231562	Symbol	node_new_option		1230311						
ANR	1231563	Symbol	term		1230311						
ANR	1231564	Symbol	end		1230311						
ANR	1231565	Symbol	enc		1230311						
ANR	1231566	Symbol	fetch_token		1230311						
ANR	1231567	Symbol	ONIG_SYN_OP2_OPTION_PERL		1230311						
ANR	1231568	Symbol	scan_env_add_mem_entry		1230311						
ANR	1231569	Symbol	ONIG_IS_OPTION_ON		1230311						
ANR	1231570	Symbol	c		1230311						
ANR	1231571	Symbol	ONIGERR_END_PATTERN_IN_GROUP		1230311						
ANR	1231572	Symbol	src		1230311						
ANR	1231573	Symbol	scan_env_set_mem_node		1230311						
ANR	1231574	Symbol	NENCLOSE ( * np ) -> type		1230311						
ANR	1231575	Symbol	* np		1230311						
ANR	1231576	Symbol	env		1230311						
ANR	1231577	Symbol	target		1230311						
ANR	1231578	Symbol	p		1230311						
ANR	1231579	Symbol	r		1230311						
ANR	1231580	Symbol	& p		1230311						
ANR	1231581	Symbol	ANCHOR_LOOK_BEHIND_NOT		1230311						
ANR	1231582	Symbol	ANCHOR_LOOK_BEHIND		1230311						
ANR	1231583	Symbol	NANCHOR		1230311						
ANR	1231584	Symbol	& target		1230311						
ANR	1231585	Symbol	NENCLOSE ( * np ) -> target		1230311						
ANR	1231586	Symbol	NTYPE		1230311						
ANR	1231587	Symbol	ONIG_OPTION_EXTEND		1230311						
ANR	1231588	DeclStmt									
ANR	1231589	Decl							const char	const char * [ ]	PopularQStr
ANR	1231590	DeclStmt									
ANR	1231591	Decl							const char	const char * [ ]	ReduceQStr
ANR	1231592	Function	set_quantifier	4756:0:106315:108785							
ANR	1231593	FunctionDef	"set_quantifier (Node * qnode , Node * target , int group , ScanEnv * env)"		1231592	0					
ANR	1231594	CompoundStatement		4758:0:106393:108785	1231592	0					
ANR	1231595	IdentifierDeclStatement	QtfrNode * qn ;	4759:2:106397:106409	1231592	0	True				
ANR	1231596	IdentifierDecl	* qn		1231592	0					
ANR	1231597	IdentifierDeclType	QtfrNode *		1231592	0					
ANR	1231598	Identifier	qn		1231592	1					
ANR	1231599	ExpressionStatement	qn = NQTFR ( qnode )	4761:2:106414:106431	1231592	1	True				
ANR	1231600	AssignmentExpression	qn = NQTFR ( qnode )		1231592	0		=			
ANR	1231601	Identifier	qn		1231592	0					
ANR	1231602	CallExpression	NQTFR ( qnode )		1231592	1					
ANR	1231603	Callee	NQTFR		1231592	0					
ANR	1231604	Identifier	NQTFR		1231592	0					
ANR	1231605	ArgumentList	qnode		1231592	1					
ANR	1231606	Argument	qnode		1231592	0					
ANR	1231607	Identifier	qnode		1231592	0					
ANR	1231608	IfStatement	if ( qn -> lower == 1 && qn -> upper == 1 )		1231592	2					
ANR	1231609	Condition	qn -> lower == 1 && qn -> upper == 1	4762:6:106439:106470	1231592	0	True				
ANR	1231610	AndExpression	qn -> lower == 1 && qn -> upper == 1		1231592	0		&&			
ANR	1231611	EqualityExpression	qn -> lower == 1		1231592	0		==			
ANR	1231612	PtrMemberAccess	qn -> lower		1231592	0					
ANR	1231613	Identifier	qn		1231592	0					
ANR	1231614	Identifier	lower		1231592	1					
ANR	1231615	PrimaryExpression	1		1231592	1					
ANR	1231616	EqualityExpression	qn -> upper == 1		1231592	1		==			
ANR	1231617	PtrMemberAccess	qn -> upper		1231592	0					
ANR	1231618	Identifier	qn		1231592	0					
ANR	1231619	Identifier	upper		1231592	1					
ANR	1231620	PrimaryExpression	1		1231592	1					
ANR	1231621	CompoundStatement		5:40:79:79	1231592	1					
ANR	1231622	ReturnStatement	return 1 ;	4763:4:106479:106487	1231592	0	True				
ANR	1231623	PrimaryExpression	1		1231592	0					
ANR	1231624	SwitchStatement	switch ( NTYPE ( target ) )		1231592	3					
ANR	1231625	Condition	NTYPE ( target )	4766:10:106504:106516	1231592	0	True				
ANR	1231626	CallExpression	NTYPE ( target )		1231592	0					
ANR	1231627	Callee	NTYPE		1231592	0					
ANR	1231628	Identifier	NTYPE		1231592	0					
ANR	1231629	ArgumentList	target		1231592	1					
ANR	1231630	Argument	target		1231592	0					
ANR	1231631	Identifier	target		1231592	0					
ANR	1231632	CompoundStatement		9:25:125:125	1231592	1					
ANR	1231633	Label	case NT_STR :	4767:2:106523:106534	1231592	0	True				
ANR	1231634	Identifier	NT_STR		1231592	0					
ANR	1231635	IfStatement	if ( ! group )		1231592	1					
ANR	1231636	Condition	! group	4768:8:106544:106550	1231592	0	True				
ANR	1231637	UnaryOperationExpression	! group		1231592	0					
ANR	1231638	UnaryOperator	!		1231592	0					
ANR	1231639	Identifier	group		1231592	1					
ANR	1231640	CompoundStatement		12:6:167:193	1231592	1					
ANR	1231641	IdentifierDeclStatement	StrNode * sn = NSTR ( target ) ;	4769:6:106561:106587	1231592	0	True				
ANR	1231642	IdentifierDecl	* sn = NSTR ( target )		1231592	0					
ANR	1231643	IdentifierDeclType	StrNode *		1231592	0					
ANR	1231644	Identifier	sn		1231592	1					
ANR	1231645	AssignmentExpression	* sn = NSTR ( target )		1231592	2		=			
ANR	1231646	Identifier	sn		1231592	0					
ANR	1231647	CallExpression	NSTR ( target )		1231592	1					
ANR	1231648	Callee	NSTR		1231592	0					
ANR	1231649	Identifier	NSTR		1231592	0					
ANR	1231650	ArgumentList	target		1231592	1					
ANR	1231651	Argument	target		1231592	0					
ANR	1231652	Identifier	target		1231592	0					
ANR	1231653	IfStatement	"if ( str_node_can_be_split ( sn , env -> enc ) )"		1231592	1					
ANR	1231654	Condition	"str_node_can_be_split ( sn , env -> enc )"	4770:10:106599:106633	1231592	0	True				
ANR	1231655	CallExpression	"str_node_can_be_split ( sn , env -> enc )"		1231592	0					
ANR	1231656	Callee	str_node_can_be_split		1231592	0					
ANR	1231657	Identifier	str_node_can_be_split		1231592	0					
ANR	1231658	ArgumentList	sn		1231592	1					
ANR	1231659	Argument	sn		1231592	0					
ANR	1231660	Identifier	sn		1231592	0					
ANR	1231661	Argument	env -> enc		1231592	1					
ANR	1231662	PtrMemberAccess	env -> enc		1231592	0					
ANR	1231663	Identifier	env		1231592	0					
ANR	1231664	Identifier	enc		1231592	1					
ANR	1231665	CompoundStatement		14:1:245:293	1231592	1					
ANR	1231666	IdentifierDeclStatement	"Node * n = str_node_split_last_char ( sn , env -> enc ) ;"	4771:1:106639:106687	1231592	0	True				
ANR	1231667	IdentifierDecl	"* n = str_node_split_last_char ( sn , env -> enc )"		1231592	0					
ANR	1231668	IdentifierDeclType	Node *		1231592	0					
ANR	1231669	Identifier	n		1231592	1					
ANR	1231670	AssignmentExpression	"* n = str_node_split_last_char ( sn , env -> enc )"		1231592	2		=			
ANR	1231671	Identifier	n		1231592	0					
ANR	1231672	CallExpression	"str_node_split_last_char ( sn , env -> enc )"		1231592	1					
ANR	1231673	Callee	str_node_split_last_char		1231592	0					
ANR	1231674	Identifier	str_node_split_last_char		1231592	0					
ANR	1231675	ArgumentList	sn		1231592	1					
ANR	1231676	Argument	sn		1231592	0					
ANR	1231677	Identifier	sn		1231592	0					
ANR	1231678	Argument	env -> enc		1231592	1					
ANR	1231679	PtrMemberAccess	env -> enc		1231592	0					
ANR	1231680	Identifier	env		1231592	0					
ANR	1231681	Identifier	enc		1231592	1					
ANR	1231682	IfStatement	if ( IS_NOT_NULL ( n ) )		1231592	1					
ANR	1231683	Condition	IS_NOT_NULL ( n )	4772:5:106694:106707	1231592	0	True				
ANR	1231684	CallExpression	IS_NOT_NULL ( n )		1231592	0					
ANR	1231685	Callee	IS_NOT_NULL		1231592	0					
ANR	1231686	Identifier	IS_NOT_NULL		1231592	0					
ANR	1231687	ArgumentList	n		1231592	1					
ANR	1231688	Argument	n		1231592	0					
ANR	1231689	Identifier	n		1231592	0					
ANR	1231690	CompoundStatement		15:21:316:316	1231592	1					
ANR	1231691	ExpressionStatement	qn -> target = n	4773:3:106715:106729	1231592	0	True				
ANR	1231692	AssignmentExpression	qn -> target = n		1231592	0		=			
ANR	1231693	PtrMemberAccess	qn -> target		1231592	0					
ANR	1231694	Identifier	qn		1231592	0					
ANR	1231695	Identifier	target		1231592	1					
ANR	1231696	Identifier	n		1231592	1					
ANR	1231697	ReturnStatement	return 2 ;	4774:3:106734:106742	1231592	1	True				
ANR	1231698	PrimaryExpression	2		1231592	0					
ANR	1231699	BreakStatement	break ;	4778:4:106765:106770	1231592	2	True				
ANR	1231700	Label	case NT_QTFR :	4780:2:106775:106787	1231592	3	True				
ANR	1231701	Identifier	NT_QTFR		1231592	0					
ANR	1231702	CompoundStatement		28:6:601:646	1231592	4					
ANR	1231703	IdentifierDeclStatement	QtfrNode * qnt = NQTFR ( target ) ;	4783:6:106904:106935	1231592	0	True				
ANR	1231704	IdentifierDecl	* qnt = NQTFR ( target )		1231592	0					
ANR	1231705	IdentifierDeclType	QtfrNode *		1231592	0					
ANR	1231706	Identifier	qnt		1231592	1					
ANR	1231707	AssignmentExpression	* qnt = NQTFR ( target )		1231592	2		=			
ANR	1231708	Identifier	qnt		1231592	0					
ANR	1231709	CallExpression	NQTFR ( target )		1231592	1					
ANR	1231710	Callee	NQTFR		1231592	0					
ANR	1231711	Identifier	NQTFR		1231592	0					
ANR	1231712	ArgumentList	target		1231592	1					
ANR	1231713	Argument	target		1231592	0					
ANR	1231714	Identifier	target		1231592	0					
ANR	1231715	IdentifierDeclStatement	int nestq_num = popular_quantifier_num ( qn ) ;	4784:6:106943:106987	1231592	1	True				
ANR	1231716	IdentifierDecl	nestq_num = popular_quantifier_num ( qn )		1231592	0					
ANR	1231717	IdentifierDeclType	int		1231592	0					
ANR	1231718	Identifier	nestq_num		1231592	1					
ANR	1231719	AssignmentExpression	nestq_num = popular_quantifier_num ( qn )		1231592	2		=			
ANR	1231720	Identifier	nestq_num		1231592	0					
ANR	1231721	CallExpression	popular_quantifier_num ( qn )		1231592	1					
ANR	1231722	Callee	popular_quantifier_num		1231592	0					
ANR	1231723	Identifier	popular_quantifier_num		1231592	0					
ANR	1231724	ArgumentList	qn		1231592	1					
ANR	1231725	Argument	qn		1231592	0					
ANR	1231726	Identifier	qn		1231592	0					
ANR	1231727	IdentifierDeclStatement	int targetq_num = popular_quantifier_num ( qnt ) ;	4785:6:106995:107040	1231592	2	True				
ANR	1231728	IdentifierDecl	targetq_num = popular_quantifier_num ( qnt )		1231592	0					
ANR	1231729	IdentifierDeclType	int		1231592	0					
ANR	1231730	Identifier	targetq_num		1231592	1					
ANR	1231731	AssignmentExpression	targetq_num = popular_quantifier_num ( qnt )		1231592	2		=			
ANR	1231732	Identifier	targetq_num		1231592	0					
ANR	1231733	CallExpression	popular_quantifier_num ( qnt )		1231592	1					
ANR	1231734	Callee	popular_quantifier_num		1231592	0					
ANR	1231735	Identifier	popular_quantifier_num		1231592	0					
ANR	1231736	ArgumentList	qnt		1231592	1					
ANR	1231737	Argument	qnt		1231592	0					
ANR	1231738	Identifier	qnt		1231592	0					
ANR	1231739	IfStatement	"if ( ! IS_QUANTIFIER_BY_NUMBER ( qn ) && ! IS_QUANTIFIER_BY_NUMBER ( qnt ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT ) )"		1231592	3					
ANR	1231740	Condition	"! IS_QUANTIFIER_BY_NUMBER ( qn ) && ! IS_QUANTIFIER_BY_NUMBER ( qnt ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT )"	4788:10:107105:107236	1231592	0	True				
ANR	1231741	AndExpression	"! IS_QUANTIFIER_BY_NUMBER ( qn ) && ! IS_QUANTIFIER_BY_NUMBER ( qnt ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT )"		1231592	0		&&			
ANR	1231742	UnaryOperationExpression	! IS_QUANTIFIER_BY_NUMBER ( qn )		1231592	0					
ANR	1231743	UnaryOperator	!		1231592	0					
ANR	1231744	CallExpression	IS_QUANTIFIER_BY_NUMBER ( qn )		1231592	1					
ANR	1231745	Callee	IS_QUANTIFIER_BY_NUMBER		1231592	0					
ANR	1231746	Identifier	IS_QUANTIFIER_BY_NUMBER		1231592	0					
ANR	1231747	ArgumentList	qn		1231592	1					
ANR	1231748	Argument	qn		1231592	0					
ANR	1231749	Identifier	qn		1231592	0					
ANR	1231750	AndExpression	"! IS_QUANTIFIER_BY_NUMBER ( qnt ) && IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT )"		1231592	1		&&			
ANR	1231751	UnaryOperationExpression	! IS_QUANTIFIER_BY_NUMBER ( qnt )		1231592	0					
ANR	1231752	UnaryOperator	!		1231592	0					
ANR	1231753	CallExpression	IS_QUANTIFIER_BY_NUMBER ( qnt )		1231592	1					
ANR	1231754	Callee	IS_QUANTIFIER_BY_NUMBER		1231592	0					
ANR	1231755	Identifier	IS_QUANTIFIER_BY_NUMBER		1231592	0					
ANR	1231756	ArgumentList	qnt		1231592	1					
ANR	1231757	Argument	qnt		1231592	0					
ANR	1231758	Identifier	qnt		1231592	0					
ANR	1231759	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT )"		1231592	1					
ANR	1231760	Callee	IS_SYNTAX_BV		1231592	0					
ANR	1231761	Identifier	IS_SYNTAX_BV		1231592	0					
ANR	1231762	ArgumentList	env -> syntax		1231592	1					
ANR	1231763	Argument	env -> syntax		1231592	0					
ANR	1231764	PtrMemberAccess	env -> syntax		1231592	0					
ANR	1231765	Identifier	env		1231592	0					
ANR	1231766	Identifier	syntax		1231592	1					
ANR	1231767	Argument	ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT		1231592	1					
ANR	1231768	Identifier	ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT		1231592	0					
ANR	1231769	CompoundStatement		33:8:855:878	1231592	1					
ANR	1231770	IdentifierDeclStatement	UChar buf [ WARN_BUFSIZE ] ;	4790:8:107249:107272	1231592	0	True				
ANR	1231771	IdentifierDecl	buf [ WARN_BUFSIZE ]		1231592	0					
ANR	1231772	IdentifierDeclType	UChar [ WARN_BUFSIZE ]		1231592	0					
ANR	1231773	Identifier	buf		1231592	1					
ANR	1231774	Identifier	WARN_BUFSIZE		1231592	2					
ANR	1231775	SwitchStatement	switch ( ReduceTypeTable [ targetq_num ] [ nestq_num ] )		1231592	1					
ANR	1231776	Condition	ReduceTypeTable [ targetq_num ] [ nestq_num ]	4792:15:107290:107328	1231592	0	True				
ANR	1231777	ArrayIndexing	ReduceTypeTable [ targetq_num ] [ nestq_num ]		1231592	0					
ANR	1231778	ArrayIndexing	ReduceTypeTable [ targetq_num ]		1231592	0					
ANR	1231779	Identifier	ReduceTypeTable		1231592	0					
ANR	1231780	Identifier	targetq_num		1231592	1					
ANR	1231781	Identifier	nestq_num		1231592	1					
ANR	1231782	CompoundStatement		35:56:937:937	1231592	1					
ANR	1231783	Label	case RQ_ASIS :	4793:8:107341:107353	1231592	0	True				
ANR	1231784	Identifier	RQ_ASIS		1231592	0					
ANR	1231785	BreakStatement	break ;	4794:10:107365:107370	1231592	1	True				
ANR	1231786	Label	case RQ_DEL :	4796:8:107381:107392	1231592	2	True				
ANR	1231787	Identifier	RQ_DEL		1231592	0					
ANR	1231788	IfStatement	if ( onig_verb_warn != onig_null_warn )		1231592	3					
ANR	1231789	Condition	onig_verb_warn != onig_null_warn	4797:14:107408:107439	1231592	0	True				
ANR	1231790	EqualityExpression	onig_verb_warn != onig_null_warn		1231592	0		!=			
ANR	1231791	Identifier	onig_verb_warn		1231592	0					
ANR	1231792	Identifier	onig_null_warn		1231592	1					
ANR	1231793	CompoundStatement		40:48:1048:1048	1231592	1					
ANR	1231794	ExpressionStatement	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , env -> enc , env -> pattern , env -> pattern_end , ( UChar * ) ""redundant nested repeat operator"" )"	4798:12:107456:107654	1231592	0	True				
ANR	1231795	CallExpression	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , env -> enc , env -> pattern , env -> pattern_end , ( UChar * ) ""redundant nested repeat operator"" )"		1231592	0					
ANR	1231796	Callee	onig_snprintf_with_pattern		1231592	0					
ANR	1231797	Identifier	onig_snprintf_with_pattern		1231592	0					
ANR	1231798	ArgumentList	buf		1231592	1					
ANR	1231799	Argument	buf		1231592	0					
ANR	1231800	Identifier	buf		1231592	0					
ANR	1231801	Argument	WARN_BUFSIZE		1231592	1					
ANR	1231802	Identifier	WARN_BUFSIZE		1231592	0					
ANR	1231803	Argument	env -> enc		1231592	2					
ANR	1231804	PtrMemberAccess	env -> enc		1231592	0					
ANR	1231805	Identifier	env		1231592	0					
ANR	1231806	Identifier	enc		1231592	1					
ANR	1231807	Argument	env -> pattern		1231592	3					
ANR	1231808	PtrMemberAccess	env -> pattern		1231592	0					
ANR	1231809	Identifier	env		1231592	0					
ANR	1231810	Identifier	pattern		1231592	1					
ANR	1231811	Argument	env -> pattern_end		1231592	4					
ANR	1231812	PtrMemberAccess	env -> pattern_end		1231592	0					
ANR	1231813	Identifier	env		1231592	0					
ANR	1231814	Identifier	pattern_end		1231592	1					
ANR	1231815	Argument	"( UChar * ) ""redundant nested repeat operator"""		1231592	5					
ANR	1231816	CastExpression	"( UChar * ) ""redundant nested repeat operator"""		1231592	0					
ANR	1231817	CastTarget	UChar *		1231592	0					
ANR	1231818	PrimaryExpression	"""redundant nested repeat operator"""		1231592	1					
ANR	1231819	ExpressionStatement	( * onig_verb_warn ) ( ( char * ) buf )	4801:12:107668:107698	1231592	1	True				
ANR	1231820	CallExpression	( * onig_verb_warn ) ( ( char * ) buf )		1231592	0					
ANR	1231821	Callee	* onig_verb_warn		1231592	0					
ANR	1231822	UnaryOperationExpression	* onig_verb_warn		1231592	0					
ANR	1231823	UnaryOperator	*		1231592	0					
ANR	1231824	Identifier	onig_verb_warn		1231592	1					
ANR	1231825	ArgumentList	( char * ) buf		1231592	1					
ANR	1231826	Argument	( char * ) buf		1231592	0					
ANR	1231827	CastExpression	( char * ) buf		1231592	0					
ANR	1231828	CastTarget	char *		1231592	0					
ANR	1231829	Identifier	buf		1231592	1					
ANR	1231830	GotoStatement	goto warn_exit ;	4803:10:107722:107736	1231592	4	True				
ANR	1231831	Identifier	warn_exit		1231592	0					
ANR	1231832	BreakStatement	break ;	4804:10:107748:107753	1231592	5	True				
ANR	1231833	Label	default :	4806:8:107764:107771	1231592	6	True				
ANR	1231834	Identifier	default		1231592	0					
ANR	1231835	IfStatement	if ( onig_verb_warn != onig_null_warn )		1231592	7					
ANR	1231836	Condition	onig_verb_warn != onig_null_warn	4807:14:107787:107818	1231592	0	True				
ANR	1231837	EqualityExpression	onig_verb_warn != onig_null_warn		1231592	0		!=			
ANR	1231838	Identifier	onig_verb_warn		1231592	0					
ANR	1231839	Identifier	onig_null_warn		1231592	1					
ANR	1231840	CompoundStatement		50:48:1427:1427	1231592	1					
ANR	1231841	ExpressionStatement	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , env -> enc , env -> pattern , env -> pattern_end , ( UChar * ) ""nested repeat operator %s and %s was replaced with '%s'"" , PopularQStr [ targetq_num ] , PopularQStr [ nestq_num ] , ReduceQStr [ ReduceTypeTable [ targetq_num ] [ nestq_num ] ] )"	4808:12:107835:108168	1231592	0	True				
ANR	1231842	CallExpression	"onig_snprintf_with_pattern ( buf , WARN_BUFSIZE , env -> enc , env -> pattern , env -> pattern_end , ( UChar * ) ""nested repeat operator %s and %s was replaced with '%s'"" , PopularQStr [ targetq_num ] , PopularQStr [ nestq_num ] , ReduceQStr [ ReduceTypeTable [ targetq_num ] [ nestq_num ] ] )"		1231592	0					
ANR	1231843	Callee	onig_snprintf_with_pattern		1231592	0					
ANR	1231844	Identifier	onig_snprintf_with_pattern		1231592	0					
ANR	1231845	ArgumentList	buf		1231592	1					
ANR	1231846	Argument	buf		1231592	0					
ANR	1231847	Identifier	buf		1231592	0					
ANR	1231848	Argument	WARN_BUFSIZE		1231592	1					
ANR	1231849	Identifier	WARN_BUFSIZE		1231592	0					
ANR	1231850	Argument	env -> enc		1231592	2					
ANR	1231851	PtrMemberAccess	env -> enc		1231592	0					
ANR	1231852	Identifier	env		1231592	0					
ANR	1231853	Identifier	enc		1231592	1					
ANR	1231854	Argument	env -> pattern		1231592	3					
ANR	1231855	PtrMemberAccess	env -> pattern		1231592	0					
ANR	1231856	Identifier	env		1231592	0					
ANR	1231857	Identifier	pattern		1231592	1					
ANR	1231858	Argument	env -> pattern_end		1231592	4					
ANR	1231859	PtrMemberAccess	env -> pattern_end		1231592	0					
ANR	1231860	Identifier	env		1231592	0					
ANR	1231861	Identifier	pattern_end		1231592	1					
ANR	1231862	Argument	"( UChar * ) ""nested repeat operator %s and %s was replaced with '%s'"""		1231592	5					
ANR	1231863	CastExpression	"( UChar * ) ""nested repeat operator %s and %s was replaced with '%s'"""		1231592	0					
ANR	1231864	CastTarget	UChar *		1231592	0					
ANR	1231865	PrimaryExpression	"""nested repeat operator %s and %s was replaced with '%s'"""		1231592	1					
ANR	1231866	Argument	PopularQStr [ targetq_num ]		1231592	6					
ANR	1231867	ArrayIndexing	PopularQStr [ targetq_num ]		1231592	0					
ANR	1231868	Identifier	PopularQStr		1231592	0					
ANR	1231869	Identifier	targetq_num		1231592	1					
ANR	1231870	Argument	PopularQStr [ nestq_num ]		1231592	7					
ANR	1231871	ArrayIndexing	PopularQStr [ nestq_num ]		1231592	0					
ANR	1231872	Identifier	PopularQStr		1231592	0					
ANR	1231873	Identifier	nestq_num		1231592	1					
ANR	1231874	Argument	ReduceQStr [ ReduceTypeTable [ targetq_num ] [ nestq_num ] ]		1231592	8					
ANR	1231875	ArrayIndexing	ReduceQStr [ ReduceTypeTable [ targetq_num ] [ nestq_num ] ]		1231592	0					
ANR	1231876	Identifier	ReduceQStr		1231592	0					
ANR	1231877	ArrayIndexing	ReduceTypeTable [ targetq_num ] [ nestq_num ]		1231592	1					
ANR	1231878	ArrayIndexing	ReduceTypeTable [ targetq_num ]		1231592	0					
ANR	1231879	Identifier	ReduceTypeTable		1231592	0					
ANR	1231880	Identifier	targetq_num		1231592	1					
ANR	1231881	Identifier	nestq_num		1231592	1					
ANR	1231882	ExpressionStatement	( * onig_verb_warn ) ( ( char * ) buf )	4813:12:108182:108212	1231592	1	True				
ANR	1231883	CallExpression	( * onig_verb_warn ) ( ( char * ) buf )		1231592	0					
ANR	1231884	Callee	* onig_verb_warn		1231592	0					
ANR	1231885	UnaryOperationExpression	* onig_verb_warn		1231592	0					
ANR	1231886	UnaryOperator	*		1231592	0					
ANR	1231887	Identifier	onig_verb_warn		1231592	1					
ANR	1231888	ArgumentList	( char * ) buf		1231592	1					
ANR	1231889	Argument	( char * ) buf		1231592	0					
ANR	1231890	CastExpression	( char * ) buf		1231592	0					
ANR	1231891	CastTarget	char *		1231592	0					
ANR	1231892	Identifier	buf		1231592	1					
ANR	1231893	GotoStatement	goto warn_exit ;	4815:10:108236:108250	1231592	8	True				
ANR	1231894	Identifier	warn_exit		1231592	0					
ANR	1231895	BreakStatement	break ;	4816:10:108262:108267	1231592	9	True				
ANR	1231896	Label	warn_exit :	4820:4:108292:108301	1231592	4	True				
ANR	1231897	Identifier	warn_exit		1231592	0					
ANR	1231898	IfStatement	if ( targetq_num >= 0 )		1231592	5					
ANR	1231899	Condition	targetq_num >= 0	4822:10:108320:108335	1231592	0	True				
ANR	1231900	RelationalExpression	targetq_num >= 0		1231592	0		>=			
ANR	1231901	Identifier	targetq_num		1231592	0					
ANR	1231902	PrimaryExpression	0		1231592	1					
ANR	1231903	CompoundStatement		65:28:1944:1944	1231592	1					
ANR	1231904	IfStatement	if ( nestq_num >= 0 )		1231592	0					
ANR	1231905	Condition	nestq_num >= 0	4823:5:108345:108358	1231592	0	True				
ANR	1231906	RelationalExpression	nestq_num >= 0		1231592	0		>=			
ANR	1231907	Identifier	nestq_num		1231592	0					
ANR	1231908	PrimaryExpression	0		1231592	1					
ANR	1231909	CompoundStatement		66:21:1967:1967	1231592	1					
ANR	1231910	ExpressionStatement	"onig_reduce_nested_quantifier ( qnode , target )"	4824:3:108366:108410	1231592	0	True				
ANR	1231911	CallExpression	"onig_reduce_nested_quantifier ( qnode , target )"		1231592	0					
ANR	1231912	Callee	onig_reduce_nested_quantifier		1231592	0					
ANR	1231913	Identifier	onig_reduce_nested_quantifier		1231592	0					
ANR	1231914	ArgumentList	qnode		1231592	1					
ANR	1231915	Argument	qnode		1231592	0					
ANR	1231916	Identifier	qnode		1231592	0					
ANR	1231917	Argument	target		1231592	1					
ANR	1231918	Identifier	target		1231592	0					
ANR	1231919	GotoStatement	goto q_exit ;	4825:3:108415:108426	1231592	1	True				
ANR	1231920	Identifier	q_exit		1231592	0					
ANR	1231921	ElseStatement	else		1231592	0					
ANR	1231922	IfStatement	if ( targetq_num == 1 || targetq_num == 2 )		1231592	0					
ANR	1231923	Condition	targetq_num == 1 || targetq_num == 2	4827:10:108441:108476	1231592	0	True				
ANR	1231924	OrExpression	targetq_num == 1 || targetq_num == 2		1231592	0		||			
ANR	1231925	EqualityExpression	targetq_num == 1		1231592	0		==			
ANR	1231926	Identifier	targetq_num		1231592	0					
ANR	1231927	PrimaryExpression	1		1231592	1					
ANR	1231928	EqualityExpression	targetq_num == 2		1231592	1		==			
ANR	1231929	Identifier	targetq_num		1231592	0					
ANR	1231930	PrimaryExpression	2		1231592	1					
ANR	1231931	CompoundStatement		70:48:2085:2085	1231592	1					
ANR	1231932	IfStatement	if ( ! IS_REPEAT_INFINITE ( qn -> upper ) && qn -> upper > 1 && qn -> greedy )		1231592	0					
ANR	1231933	Condition	! IS_REPEAT_INFINITE ( qn -> upper ) && qn -> upper > 1 && qn -> greedy	4829:7:108563:108624	1231592	0	True				
ANR	1231934	AndExpression	! IS_REPEAT_INFINITE ( qn -> upper ) && qn -> upper > 1 && qn -> greedy		1231592	0		&&			
ANR	1231935	UnaryOperationExpression	! IS_REPEAT_INFINITE ( qn -> upper )		1231592	0					
ANR	1231936	UnaryOperator	!		1231592	0					
ANR	1231937	CallExpression	IS_REPEAT_INFINITE ( qn -> upper )		1231592	1					
ANR	1231938	Callee	IS_REPEAT_INFINITE		1231592	0					
ANR	1231939	Identifier	IS_REPEAT_INFINITE		1231592	0					
ANR	1231940	ArgumentList	qn -> upper		1231592	1					
ANR	1231941	Argument	qn -> upper		1231592	0					
ANR	1231942	PtrMemberAccess	qn -> upper		1231592	0					
ANR	1231943	Identifier	qn		1231592	0					
ANR	1231944	Identifier	upper		1231592	1					
ANR	1231945	AndExpression	qn -> upper > 1 && qn -> greedy		1231592	1		&&			
ANR	1231946	RelationalExpression	qn -> upper > 1		1231592	0		>			
ANR	1231947	PtrMemberAccess	qn -> upper		1231592	0					
ANR	1231948	Identifier	qn		1231592	0					
ANR	1231949	Identifier	upper		1231592	1					
ANR	1231950	PrimaryExpression	1		1231592	1					
ANR	1231951	PtrMemberAccess	qn -> greedy		1231592	1					
ANR	1231952	Identifier	qn		1231592	0					
ANR	1231953	Identifier	greedy		1231592	1					
ANR	1231954	CompoundStatement		72:71:2233:2233	1231592	1					
ANR	1231955	ExpressionStatement	qn -> upper = ( qn -> lower == 0 ? 1 : qn -> lower )	4830:5:108634:108678	1231592	0	True				
ANR	1231956	AssignmentExpression	qn -> upper = ( qn -> lower == 0 ? 1 : qn -> lower )		1231592	0		=			
ANR	1231957	PtrMemberAccess	qn -> upper		1231592	0					
ANR	1231958	Identifier	qn		1231592	0					
ANR	1231959	Identifier	upper		1231592	1					
ANR	1231960	ConditionalExpression	qn -> lower == 0 ? 1 : qn -> lower		1231592	1					
ANR	1231961	Condition	qn -> lower == 0		1231592	0					
ANR	1231962	EqualityExpression	qn -> lower == 0		1231592	0		==			
ANR	1231963	PtrMemberAccess	qn -> lower		1231592	0					
ANR	1231964	Identifier	qn		1231592	0					
ANR	1231965	Identifier	lower		1231592	1					
ANR	1231966	PrimaryExpression	0		1231592	1					
ANR	1231967	PrimaryExpression	1		1231592	1					
ANR	1231968	PtrMemberAccess	qn -> lower		1231592	2					
ANR	1231969	Identifier	qn		1231592	0					
ANR	1231970	Identifier	lower		1231592	1					
ANR	1231971	BreakStatement	break ;	4835:4:108706:108711	1231592	5	True				
ANR	1231972	Label	default :	4837:2:108716:108723	1231592	6	True				
ANR	1231973	Identifier	default		1231592	0					
ANR	1231974	BreakStatement	break ;	4838:4:108729:108734	1231592	7	True				
ANR	1231975	ExpressionStatement	qn -> target = target	4841:2:108743:108762	1231592	4	True				
ANR	1231976	AssignmentExpression	qn -> target = target		1231592	0		=			
ANR	1231977	PtrMemberAccess	qn -> target		1231592	0					
ANR	1231978	Identifier	qn		1231592	0					
ANR	1231979	Identifier	target		1231592	1					
ANR	1231980	Identifier	target		1231592	1					
ANR	1231981	Label	q_exit :	4842:1:108765:108771	1231592	5	True				
ANR	1231982	Identifier	q_exit		1231592	0					
ANR	1231983	ReturnStatement	return 0 ;	4843:2:108775:108783	1231592	6	True				
ANR	1231984	PrimaryExpression	0		1231592	0					
ANR	1231985	ReturnType	static int		1231592	1					
ANR	1231986	Identifier	set_quantifier		1231592	2					
ANR	1231987	ParameterList	"Node * qnode , Node * target , int group , ScanEnv * env"		1231592	3					
ANR	1231988	Parameter	Node * qnode	4757:15:106341:106351	1231592	0	True				
ANR	1231989	ParameterType	Node *		1231592	0					
ANR	1231990	Identifier	qnode		1231592	1					
ANR	1231991	Parameter	Node * target	4757:28:106354:106365	1231592	1	True				
ANR	1231992	ParameterType	Node *		1231592	0					
ANR	1231993	Identifier	target		1231592	1					
ANR	1231994	Parameter	int group	4757:42:106368:106376	1231592	2	True				
ANR	1231995	ParameterType	int		1231592	0					
ANR	1231996	Identifier	group		1231592	1					
ANR	1231997	Parameter	ScanEnv * env	4757:53:106379:106390	1231592	3	True				
ANR	1231998	ParameterType	ScanEnv *		1231592	0					
ANR	1231999	Identifier	env		1231592	1					
ANR	1232000	CFGEntryNode	ENTRY		1231592		True				
ANR	1232001	CFGExitNode	EXIT		1231592		True				
ANR	1232002	Symbol	* qn		1231592						
ANR	1232003	Symbol	qn -> greedy		1231592						
ANR	1232004	Symbol	IS_NOT_NULL		1231592						
ANR	1232005	Symbol	* * ReduceTypeTable		1231592						
ANR	1232006	Symbol	env -> enc		1231592						
ANR	1232007	Symbol	* ReduceQStr		1231592						
ANR	1232008	Symbol	onig_verb_warn		1231592						
ANR	1232009	Symbol	NQTFR		1231592						
ANR	1232010	Symbol	popular_quantifier_num		1231592						
ANR	1232011	Symbol	qn -> lower		1231592						
ANR	1232012	Symbol	* PopularQStr		1231592						
ANR	1232013	Symbol	WARN_BUFSIZE		1231592						
ANR	1232014	Symbol	IS_SYNTAX_BV		1231592						
ANR	1232015	Symbol	sn		1231592						
ANR	1232016	Symbol	ReduceTypeTable		1231592						
ANR	1232017	Symbol	IS_REPEAT_INFINITE		1231592						
ANR	1232018	Symbol	qn		1231592						
ANR	1232019	Symbol	* * nestq_num		1231592						
ANR	1232020	Symbol	qnode		1231592						
ANR	1232021	Symbol	group		1231592						
ANR	1232022	Symbol	* nestq_num		1231592						
ANR	1232023	Symbol	* * * ReduceTypeTable		1231592						
ANR	1232024	Symbol	* * * targetq_num		1231592						
ANR	1232025	Symbol	str_node_can_be_split		1231592						
ANR	1232026	Symbol	nestq_num		1231592						
ANR	1232027	Symbol	PopularQStr		1231592						
ANR	1232028	Symbol	NSTR		1231592						
ANR	1232029	Symbol	* env		1231592						
ANR	1232030	Symbol	str_node_split_last_char		1231592						
ANR	1232031	Symbol	env		1231592						
ANR	1232032	Symbol	n		1231592						
ANR	1232033	Symbol	qn -> target		1231592						
ANR	1232034	Symbol	IS_QUANTIFIER_BY_NUMBER		1231592						
ANR	1232035	Symbol	env -> syntax		1231592						
ANR	1232036	Symbol	target		1231592						
ANR	1232037	Symbol	qn -> upper		1231592						
ANR	1232038	Symbol	buf		1231592						
ANR	1232039	Symbol	targetq_num		1231592						
ANR	1232040	Symbol	onig_null_warn		1231592						
ANR	1232041	Symbol	env -> pattern		1231592						
ANR	1232042	Symbol	qnt		1231592						
ANR	1232043	Symbol	* targetq_num		1231592						
ANR	1232044	Symbol	* ReduceTypeTable		1231592						
ANR	1232045	Symbol	env -> pattern_end		1231592						
ANR	1232046	Symbol	ONIG_SYN_WARN_REDUNDANT_NESTED_REPEAT		1231592						
ANR	1232047	Symbol	NTYPE		1231592						
ANR	1232048	Symbol	* * targetq_num		1231592						
ANR	1232049	Symbol	ReduceQStr		1231592						
ANR	1232050	ClassDef	<unnamed>	4853:8:108914:108983							
ANR	1232051	DeclStmt									
ANR	1232052	Decl							OnigEncoding	OnigEncoding	enc
ANR	1232053	DeclStmt									
ANR	1232054	Decl							int	int	not
ANR	1232055	DeclStmt									
ANR	1232056	Decl							int	int	type
ANR	1232057	DeclStmt									
ANR	1232058	Decl									type_cclass_key
ANR	1232059	Function	type_cclass_cmp	4859:0:108986:109175							
ANR	1232060	FunctionDef	"type_cclass_cmp (type_cclass_key * x , type_cclass_key * y)"		1232059	0					
ANR	1232061	CompoundStatement		4860:0:109053:109175	1232059	0					
ANR	1232062	IfStatement	if ( x -> type != y -> type )		1232059	0					
ANR	1232063	Condition	x -> type != y -> type	4861:6:109061:109078	1232059	0	True				
ANR	1232064	EqualityExpression	x -> type != y -> type		1232059	0		!=			
ANR	1232065	PtrMemberAccess	x -> type		1232059	0					
ANR	1232066	Identifier	x		1232059	0					
ANR	1232067	Identifier	type		1232059	1					
ANR	1232068	PtrMemberAccess	y -> type		1232059	1					
ANR	1232069	Identifier	y		1232059	0					
ANR	1232070	Identifier	type		1232059	1					
ANR	1232071	ReturnStatement	return 1 ;	4861:26:109081:109089	1232059	1	True				
ANR	1232072	PrimaryExpression	1		1232059	0					
ANR	1232073	IfStatement	if ( x -> enc != y -> enc )		1232059	1					
ANR	1232074	Condition	x -> enc != y -> enc	4862:6:109097:109113	1232059	0	True				
ANR	1232075	EqualityExpression	x -> enc != y -> enc		1232059	0		!=			
ANR	1232076	PtrMemberAccess	x -> enc		1232059	0					
ANR	1232077	Identifier	x		1232059	0					
ANR	1232078	Identifier	enc		1232059	1					
ANR	1232079	PtrMemberAccess	y -> enc		1232059	1					
ANR	1232080	Identifier	y		1232059	0					
ANR	1232081	Identifier	enc		1232059	1					
ANR	1232082	ReturnStatement	return 1 ;	4862:26:109117:109125	1232059	1	True				
ANR	1232083	PrimaryExpression	1		1232059	0					
ANR	1232084	IfStatement	if ( x -> not != y -> not )		1232059	2					
ANR	1232085	Condition	x -> not != y -> not	4863:6:109133:109149	1232059	0	True				
ANR	1232086	EqualityExpression	x -> not != y -> not		1232059	0		!=			
ANR	1232087	PtrMemberAccess	x -> not		1232059	0					
ANR	1232088	Identifier	x		1232059	0					
ANR	1232089	Identifier	not		1232059	1					
ANR	1232090	PtrMemberAccess	y -> not		1232059	1					
ANR	1232091	Identifier	y		1232059	0					
ANR	1232092	Identifier	not		1232059	1					
ANR	1232093	ReturnStatement	return 1 ;	4863:26:109153:109161	1232059	1	True				
ANR	1232094	PrimaryExpression	1		1232059	0					
ANR	1232095	ReturnStatement	return 0 ;	4864:2:109165:109173	1232059	3	True				
ANR	1232096	PrimaryExpression	0		1232059	0					
ANR	1232097	ReturnType	static int		1232059	1					
ANR	1232098	Identifier	type_cclass_cmp		1232059	2					
ANR	1232099	ParameterList	"type_cclass_key * x , type_cclass_key * y"		1232059	3					
ANR	1232100	Parameter	type_cclass_key * x	4859:27:109013:109030	1232059	0	True				
ANR	1232101	ParameterType	type_cclass_key *		1232059	0					
ANR	1232102	Identifier	x		1232059	1					
ANR	1232103	Parameter	type_cclass_key * y	4859:47:109033:109050	1232059	1	True				
ANR	1232104	ParameterType	type_cclass_key *		1232059	0					
ANR	1232105	Identifier	y		1232059	1					
ANR	1232106	CFGEntryNode	ENTRY		1232059		True				
ANR	1232107	CFGExitNode	EXIT		1232059		True				
ANR	1232108	Symbol	* x		1232059						
ANR	1232109	Symbol	y -> not		1232059						
ANR	1232110	Symbol	* y		1232059						
ANR	1232111	Symbol	x -> not		1232059						
ANR	1232112	Symbol	x		1232059						
ANR	1232113	Symbol	y		1232059						
ANR	1232114	Symbol	x -> type		1232059						
ANR	1232115	Symbol	y -> enc		1232059						
ANR	1232116	Symbol	x -> enc		1232059						
ANR	1232117	Symbol	y -> type		1232059						
ANR	1232118	Function	type_cclass_hash	4867:0:109178:109549							
ANR	1232119	FunctionDef	type_cclass_hash (type_cclass_key * key)		1232118	0					
ANR	1232120	CompoundStatement		4868:0:109228:109549	1232118	0					
ANR	1232121	IdentifierDeclStatement	"int i , val ;"	4869:2:109232:109242	1232118	0	True				
ANR	1232122	IdentifierDecl	i		1232118	0					
ANR	1232123	IdentifierDeclType	int		1232118	0					
ANR	1232124	Identifier	i		1232118	1					
ANR	1232125	IdentifierDecl	val		1232118	1					
ANR	1232126	IdentifierDeclType	int		1232118	0					
ANR	1232127	Identifier	val		1232118	1					
ANR	1232128	IdentifierDeclStatement	UChar * p ;	4870:2:109246:109254	1232118	1	True				
ANR	1232129	IdentifierDecl	* p		1232118	0					
ANR	1232130	IdentifierDeclType	UChar *		1232118	0					
ANR	1232131	Identifier	p		1232118	1					
ANR	1232132	ExpressionStatement	val = 0	4872:2:109259:109266	1232118	2	True				
ANR	1232133	AssignmentExpression	val = 0		1232118	0		=			
ANR	1232134	Identifier	val		1232118	0					
ANR	1232135	PrimaryExpression	0		1232118	1					
ANR	1232136	ExpressionStatement	p = ( UChar * ) & ( key -> enc )	4874:2:109271:109295	1232118	3	True				
ANR	1232137	AssignmentExpression	p = ( UChar * ) & ( key -> enc )		1232118	0		=			
ANR	1232138	Identifier	p		1232118	0					
ANR	1232139	CastExpression	( UChar * ) & ( key -> enc )		1232118	1					
ANR	1232140	CastTarget	UChar *		1232118	0					
ANR	1232141	UnaryOperationExpression	& ( key -> enc )		1232118	1					
ANR	1232142	UnaryOperator	&		1232118	0					
ANR	1232143	PtrMemberAccess	key -> enc		1232118	1					
ANR	1232144	Identifier	key		1232118	0					
ANR	1232145	Identifier	enc		1232118	1					
ANR	1232146	ForStatement	for ( i = 0 ; i < ( int ) sizeof ( key -> enc ) ; i ++ )		1232118	4					
ANR	1232147	ForInit	i = 0 ;	4875:7:109304:109309	1232118	0	True				
ANR	1232148	AssignmentExpression	i = 0		1232118	0		=			
ANR	1232149	Identifier	i		1232118	0					
ANR	1232150	PrimaryExpression	0		1232118	1					
ANR	1232151	Condition	i < ( int ) sizeof ( key -> enc )	4875:14:109311:109336	1232118	1	True				
ANR	1232152	RelationalExpression	i < ( int ) sizeof ( key -> enc )		1232118	0		<			
ANR	1232153	Identifier	i		1232118	0					
ANR	1232154	CastExpression	( int ) sizeof ( key -> enc )		1232118	1					
ANR	1232155	CastTarget	int		1232118	0					
ANR	1232156	SizeofExpression	sizeof ( key -> enc )		1232118	1					
ANR	1232157	Sizeof	sizeof		1232118	0					
ANR	1232158	PtrMemberAccess	key -> enc		1232118	1					
ANR	1232159	Identifier	key		1232118	0					
ANR	1232160	Identifier	enc		1232118	1					
ANR	1232161	PostIncDecOperationExpression	i ++	4875:42:109339:109341	1232118	2	True				
ANR	1232162	Identifier	i		1232118	0					
ANR	1232163	IncDec	++		1232118	1					
ANR	1232164	CompoundStatement		8:47:115:115	1232118	3					
ANR	1232165	ExpressionStatement	val = val * 997 + ( int ) * p ++	4876:4:109350:109378	1232118	0	True				
ANR	1232166	AssignmentExpression	val = val * 997 + ( int ) * p ++		1232118	0		=			
ANR	1232167	Identifier	val		1232118	0					
ANR	1232168	AdditiveExpression	val * 997 + ( int ) * p ++		1232118	1		+			
ANR	1232169	MultiplicativeExpression	val * 997		1232118	0		*			
ANR	1232170	Identifier	val		1232118	0					
ANR	1232171	PrimaryExpression	997		1232118	1					
ANR	1232172	CastExpression	( int ) * p ++		1232118	1					
ANR	1232173	CastTarget	int		1232118	0					
ANR	1232174	UnaryOperationExpression	* p ++		1232118	1					
ANR	1232175	UnaryOperator	*		1232118	0					
ANR	1232176	PostIncDecOperationExpression	p ++		1232118	1					
ANR	1232177	Identifier	p		1232118	0					
ANR	1232178	IncDec	++		1232118	1					
ANR	1232179	ExpressionStatement	p = ( UChar * ) ( & key -> type )	4879:2:109387:109412	1232118	5	True				
ANR	1232180	AssignmentExpression	p = ( UChar * ) ( & key -> type )		1232118	0		=			
ANR	1232181	Identifier	p		1232118	0					
ANR	1232182	CastExpression	( UChar * ) ( & key -> type )		1232118	1					
ANR	1232183	CastTarget	UChar *		1232118	0					
ANR	1232184	UnaryOperationExpression	& key -> type		1232118	1					
ANR	1232185	UnaryOperator	&		1232118	0					
ANR	1232186	PtrMemberAccess	key -> type		1232118	1					
ANR	1232187	Identifier	key		1232118	0					
ANR	1232188	Identifier	type		1232118	1					
ANR	1232189	ForStatement	for ( i = 0 ; i < ( int ) sizeof ( key -> type ) ; i ++ )		1232118	6					
ANR	1232190	ForInit	i = 0 ;	4880:7:109421:109426	1232118	0	True				
ANR	1232191	AssignmentExpression	i = 0		1232118	0		=			
ANR	1232192	Identifier	i		1232118	0					
ANR	1232193	PrimaryExpression	0		1232118	1					
ANR	1232194	Condition	i < ( int ) sizeof ( key -> type )	4880:14:109428:109454	1232118	1	True				
ANR	1232195	RelationalExpression	i < ( int ) sizeof ( key -> type )		1232118	0		<			
ANR	1232196	Identifier	i		1232118	0					
ANR	1232197	CastExpression	( int ) sizeof ( key -> type )		1232118	1					
ANR	1232198	CastTarget	int		1232118	0					
ANR	1232199	SizeofExpression	sizeof ( key -> type )		1232118	1					
ANR	1232200	Sizeof	sizeof		1232118	0					
ANR	1232201	PtrMemberAccess	key -> type		1232118	1					
ANR	1232202	Identifier	key		1232118	0					
ANR	1232203	Identifier	type		1232118	1					
ANR	1232204	PostIncDecOperationExpression	i ++	4880:43:109457:109459	1232118	2	True				
ANR	1232205	Identifier	i		1232118	0					
ANR	1232206	IncDec	++		1232118	1					
ANR	1232207	CompoundStatement		13:48:233:233	1232118	3					
ANR	1232208	ExpressionStatement	val = val * 997 + ( int ) * p ++	4881:4:109468:109496	1232118	0	True				
ANR	1232209	AssignmentExpression	val = val * 997 + ( int ) * p ++		1232118	0		=			
ANR	1232210	Identifier	val		1232118	0					
ANR	1232211	AdditiveExpression	val * 997 + ( int ) * p ++		1232118	1		+			
ANR	1232212	MultiplicativeExpression	val * 997		1232118	0		*			
ANR	1232213	Identifier	val		1232118	0					
ANR	1232214	PrimaryExpression	997		1232118	1					
ANR	1232215	CastExpression	( int ) * p ++		1232118	1					
ANR	1232216	CastTarget	int		1232118	0					
ANR	1232217	UnaryOperationExpression	* p ++		1232118	1					
ANR	1232218	UnaryOperator	*		1232118	0					
ANR	1232219	PostIncDecOperationExpression	p ++		1232118	1					
ANR	1232220	Identifier	p		1232118	0					
ANR	1232221	IncDec	++		1232118	1					
ANR	1232222	ExpressionStatement	val += key -> not	4884:2:109505:109520	1232118	7	True				
ANR	1232223	AssignmentExpression	val += key -> not		1232118	0		+=			
ANR	1232224	Identifier	val		1232118	0					
ANR	1232225	PtrMemberAccess	key -> not		1232118	1					
ANR	1232226	Identifier	key		1232118	0					
ANR	1232227	Identifier	not		1232118	1					
ANR	1232228	ReturnStatement	return val + ( val >> 5 ) ;	4885:2:109524:109547	1232118	8	True				
ANR	1232229	AdditiveExpression	val + ( val >> 5 )		1232118	0		+			
ANR	1232230	Identifier	val		1232118	0					
ANR	1232231	ShiftExpression	val >> 5		1232118	1		>>			
ANR	1232232	Identifier	val		1232118	0					
ANR	1232233	PrimaryExpression	5		1232118	1					
ANR	1232234	ReturnType	static int		1232118	1					
ANR	1232235	Identifier	type_cclass_hash		1232118	2					
ANR	1232236	ParameterList	type_cclass_key * key		1232118	3					
ANR	1232237	Parameter	type_cclass_key * key	4867:28:109206:109225	1232118	0	True				
ANR	1232238	ParameterType	type_cclass_key *		1232118	0					
ANR	1232239	Identifier	key		1232118	1					
ANR	1232240	CFGEntryNode	ENTRY		1232118		True				
ANR	1232241	CFGExitNode	EXIT		1232118		True				
ANR	1232242	Symbol	val		1232118						
ANR	1232243	Symbol	p		1232118						
ANR	1232244	Symbol	key -> type		1232118						
ANR	1232245	Symbol	& key -> enc		1232118						
ANR	1232246	Symbol	key -> enc		1232118						
ANR	1232247	Symbol	* p ++		1232118						
ANR	1232248	Symbol	i		1232118						
ANR	1232249	Symbol	* key		1232118						
ANR	1232250	Symbol	& key -> type		1232118						
ANR	1232251	Symbol	key		1232118						
ANR	1232252	Symbol	key -> not		1232118						
ANR	1232253	DeclStmt									
ANR	1232254	Decl							struct st_hash_type	struct st_hash_type	type_type_cclass_hash
ANR	1232255	DeclStmt									
ANR	1232256	Decl							st_table	st_table *	OnigTypeCClassTable
ANR	1232257	DeclStmt									
ANR	1232258	Decl							CClassNode	CClassNode *	cc
ANR	1232259	Function	onig_free_shared_cclass_table	4909:0:109973:110224							
ANR	1232260	FunctionDef	onig_free_shared_cclass_table ()		1232259	0					
ANR	1232261	CompoundStatement		4911:0:110020:110224	1232259	0					
ANR	1232262	IfStatement	if ( IS_NOT_NULL ( OnigTypeCClassTable ) )		1232259	0					
ANR	1232263	Condition	IS_NOT_NULL ( OnigTypeCClassTable )	4912:6:110028:110059	1232259	0	True				
ANR	1232264	CallExpression	IS_NOT_NULL ( OnigTypeCClassTable )		1232259	0					
ANR	1232265	Callee	IS_NOT_NULL		1232259	0					
ANR	1232266	Identifier	IS_NOT_NULL		1232259	0					
ANR	1232267	ArgumentList	OnigTypeCClassTable		1232259	1					
ANR	1232268	Argument	OnigTypeCClassTable		1232259	0					
ANR	1232269	Identifier	OnigTypeCClassTable		1232259	0					
ANR	1232270	CompoundStatement		2:40:41:41	1232259	1					
ANR	1232271	ExpressionStatement	"onig_st_foreach ( OnigTypeCClassTable , i_free_shared_class , 0 )"	4913:4:110068:110128	1232259	0	True				
ANR	1232272	CallExpression	"onig_st_foreach ( OnigTypeCClassTable , i_free_shared_class , 0 )"		1232259	0					
ANR	1232273	Callee	onig_st_foreach		1232259	0					
ANR	1232274	Identifier	onig_st_foreach		1232259	0					
ANR	1232275	ArgumentList	OnigTypeCClassTable		1232259	1					
ANR	1232276	Argument	OnigTypeCClassTable		1232259	0					
ANR	1232277	Identifier	OnigTypeCClassTable		1232259	0					
ANR	1232278	Argument	i_free_shared_class		1232259	1					
ANR	1232279	Identifier	i_free_shared_class		1232259	0					
ANR	1232280	Argument	0		1232259	2					
ANR	1232281	PrimaryExpression	0		1232259	0					
ANR	1232282	ExpressionStatement	onig_st_free_table ( OnigTypeCClassTable )	4914:4:110134:110173	1232259	1	True				
ANR	1232283	CallExpression	onig_st_free_table ( OnigTypeCClassTable )		1232259	0					
ANR	1232284	Callee	onig_st_free_table		1232259	0					
ANR	1232285	Identifier	onig_st_free_table		1232259	0					
ANR	1232286	ArgumentList	OnigTypeCClassTable		1232259	1					
ANR	1232287	Argument	OnigTypeCClassTable		1232259	0					
ANR	1232288	Identifier	OnigTypeCClassTable		1232259	0					
ANR	1232289	ExpressionStatement	OnigTypeCClassTable = NULL	4915:4:110179:110205	1232259	2	True				
ANR	1232290	AssignmentExpression	OnigTypeCClassTable = NULL		1232259	0		=			
ANR	1232291	Identifier	OnigTypeCClassTable		1232259	0					
ANR	1232292	Identifier	NULL		1232259	1					
ANR	1232293	ReturnStatement	return 0 ;	4918:2:110214:110222	1232259	1	True				
ANR	1232294	PrimaryExpression	0		1232259	0					
ANR	1232295	ReturnType	extern int		1232259	1					
ANR	1232296	Identifier	onig_free_shared_cclass_table		1232259	2					
ANR	1232297	ParameterList			1232259	3					
ANR	1232298	CFGEntryNode	ENTRY		1232259		True				
ANR	1232299	CFGExitNode	EXIT		1232259		True				
ANR	1232300	Symbol	IS_NOT_NULL		1232259						
ANR	1232301	Symbol	NULL		1232259						
ANR	1232302	Symbol	OnigTypeCClassTable		1232259						
ANR	1232303	Symbol	i_free_shared_class		1232259						
ANR	1232304	Function	clear_not_flag_cclass	4925:0:110318:110689							
ANR	1232305	FunctionDef	"clear_not_flag_cclass (CClassNode * cc , OnigEncoding enc)"		1232304	0					
ANR	1232306	CompoundStatement		4927:0:110385:110689	1232304	0					
ANR	1232307	IdentifierDeclStatement	BBuf * tbuf ;	4928:2:110389:110399	1232304	0	True				
ANR	1232308	IdentifierDecl	* tbuf		1232304	0					
ANR	1232309	IdentifierDeclType	BBuf *		1232304	0					
ANR	1232310	Identifier	tbuf		1232304	1					
ANR	1232311	IdentifierDeclStatement	int r ;	4929:2:110403:110408	1232304	1	True				
ANR	1232312	IdentifierDecl	r		1232304	0					
ANR	1232313	IdentifierDeclType	int		1232304	0					
ANR	1232314	Identifier	r		1232304	1					
ANR	1232315	IfStatement	if ( IS_NCCLASS_NOT ( cc ) )		1232304	2					
ANR	1232316	Condition	IS_NCCLASS_NOT ( cc )	4931:6:110417:110434	1232304	0	True				
ANR	1232317	CallExpression	IS_NCCLASS_NOT ( cc )		1232304	0					
ANR	1232318	Callee	IS_NCCLASS_NOT		1232304	0					
ANR	1232319	Identifier	IS_NCCLASS_NOT		1232304	0					
ANR	1232320	ArgumentList	cc		1232304	1					
ANR	1232321	Argument	cc		1232304	0					
ANR	1232322	Identifier	cc		1232304	0					
ANR	1232323	CompoundStatement		5:26:51:51	1232304	1					
ANR	1232324	ExpressionStatement	bitset_invert ( cc -> bs )	4932:4:110443:110464	1232304	0	True				
ANR	1232325	CallExpression	bitset_invert ( cc -> bs )		1232304	0					
ANR	1232326	Callee	bitset_invert		1232304	0					
ANR	1232327	Identifier	bitset_invert		1232304	0					
ANR	1232328	ArgumentList	cc -> bs		1232304	1					
ANR	1232329	Argument	cc -> bs		1232304	0					
ANR	1232330	PtrMemberAccess	cc -> bs		1232304	0					
ANR	1232331	Identifier	cc		1232304	0					
ANR	1232332	Identifier	bs		1232304	1					
ANR	1232333	IfStatement	if ( ! ONIGENC_IS_SINGLEBYTE ( enc ) )		1232304	1					
ANR	1232334	Condition	! ONIGENC_IS_SINGLEBYTE ( enc )	4934:8:110475:110502	1232304	0	True				
ANR	1232335	UnaryOperationExpression	! ONIGENC_IS_SINGLEBYTE ( enc )		1232304	0					
ANR	1232336	UnaryOperator	!		1232304	0					
ANR	1232337	CallExpression	ONIGENC_IS_SINGLEBYTE ( enc )		1232304	1					
ANR	1232338	Callee	ONIGENC_IS_SINGLEBYTE		1232304	0					
ANR	1232339	Identifier	ONIGENC_IS_SINGLEBYTE		1232304	0					
ANR	1232340	ArgumentList	enc		1232304	1					
ANR	1232341	Argument	enc		1232304	0					
ANR	1232342	Identifier	enc		1232304	0					
ANR	1232343	CompoundStatement		8:38:119:119	1232304	1					
ANR	1232344	ExpressionStatement	"r = not_code_range_buf ( enc , cc -> mbuf , & tbuf )"	4935:6:110513:110557	1232304	0	True				
ANR	1232345	AssignmentExpression	"r = not_code_range_buf ( enc , cc -> mbuf , & tbuf )"		1232304	0		=			
ANR	1232346	Identifier	r		1232304	0					
ANR	1232347	CallExpression	"not_code_range_buf ( enc , cc -> mbuf , & tbuf )"		1232304	1					
ANR	1232348	Callee	not_code_range_buf		1232304	0					
ANR	1232349	Identifier	not_code_range_buf		1232304	0					
ANR	1232350	ArgumentList	enc		1232304	1					
ANR	1232351	Argument	enc		1232304	0					
ANR	1232352	Identifier	enc		1232304	0					
ANR	1232353	Argument	cc -> mbuf		1232304	1					
ANR	1232354	PtrMemberAccess	cc -> mbuf		1232304	0					
ANR	1232355	Identifier	cc		1232304	0					
ANR	1232356	Identifier	mbuf		1232304	1					
ANR	1232357	Argument	& tbuf		1232304	2					
ANR	1232358	UnaryOperationExpression	& tbuf		1232304	0					
ANR	1232359	UnaryOperator	&		1232304	0					
ANR	1232360	Identifier	tbuf		1232304	1					
ANR	1232361	IfStatement	if ( r != 0 )		1232304	1					
ANR	1232362	Condition	r != 0	4936:10:110569:110574	1232304	0	True				
ANR	1232363	EqualityExpression	r != 0		1232304	0		!=			
ANR	1232364	Identifier	r		1232304	0					
ANR	1232365	PrimaryExpression	0		1232304	1					
ANR	1232366	ReturnStatement	return r ;	4936:18:110577:110585	1232304	1	True				
ANR	1232367	Identifier	r		1232304	0					
ANR	1232368	ExpressionStatement	bbuf_free ( cc -> mbuf )	4938:6:110594:110613	1232304	2	True				
ANR	1232369	CallExpression	bbuf_free ( cc -> mbuf )		1232304	0					
ANR	1232370	Callee	bbuf_free		1232304	0					
ANR	1232371	Identifier	bbuf_free		1232304	0					
ANR	1232372	ArgumentList	cc -> mbuf		1232304	1					
ANR	1232373	Argument	cc -> mbuf		1232304	0					
ANR	1232374	PtrMemberAccess	cc -> mbuf		1232304	0					
ANR	1232375	Identifier	cc		1232304	0					
ANR	1232376	Identifier	mbuf		1232304	1					
ANR	1232377	ExpressionStatement	cc -> mbuf = tbuf	4939:6:110621:110636	1232304	3	True				
ANR	1232378	AssignmentExpression	cc -> mbuf = tbuf		1232304	0		=			
ANR	1232379	PtrMemberAccess	cc -> mbuf		1232304	0					
ANR	1232380	Identifier	cc		1232304	0					
ANR	1232381	Identifier	mbuf		1232304	1					
ANR	1232382	Identifier	tbuf		1232304	1					
ANR	1232383	ExpressionStatement	NCCLASS_CLEAR_NOT ( cc )	4942:4:110649:110670	1232304	2	True				
ANR	1232384	CallExpression	NCCLASS_CLEAR_NOT ( cc )		1232304	0					
ANR	1232385	Callee	NCCLASS_CLEAR_NOT		1232304	0					
ANR	1232386	Identifier	NCCLASS_CLEAR_NOT		1232304	0					
ANR	1232387	ArgumentList	cc		1232304	1					
ANR	1232388	Argument	cc		1232304	0					
ANR	1232389	Identifier	cc		1232304	0					
ANR	1232390	ReturnStatement	return 0 ;	4945:2:110679:110687	1232304	3	True				
ANR	1232391	PrimaryExpression	0		1232304	0					
ANR	1232392	ReturnType	static int		1232304	1					
ANR	1232393	Identifier	clear_not_flag_cclass		1232304	2					
ANR	1232394	ParameterList	"CClassNode * cc , OnigEncoding enc"		1232304	3					
ANR	1232395	Parameter	CClassNode * cc	4926:22:110351:110364	1232304	0	True				
ANR	1232396	ParameterType	CClassNode *		1232304	0					
ANR	1232397	Identifier	cc		1232304	1					
ANR	1232398	Parameter	OnigEncoding enc	4926:38:110367:110382	1232304	1	True				
ANR	1232399	ParameterType	OnigEncoding		1232304	0					
ANR	1232400	Identifier	enc		1232304	1					
ANR	1232401	CFGEntryNode	ENTRY		1232304		True				
ANR	1232402	CFGExitNode	EXIT		1232304		True				
ANR	1232403	Symbol	cc		1232304						
ANR	1232404	Symbol	r		1232304						
ANR	1232405	Symbol	not_code_range_buf		1232304						
ANR	1232406	Symbol	* cc		1232304						
ANR	1232407	Symbol	IS_NCCLASS_NOT		1232304						
ANR	1232408	Symbol	& tbuf		1232304						
ANR	1232409	Symbol	tbuf		1232304						
ANR	1232410	Symbol	enc		1232304						
ANR	1232411	Symbol	cc -> mbuf		1232304						
ANR	1232412	Symbol	cc -> bs		1232304						
ANR	1232413	Symbol	ONIGENC_IS_SINGLEBYTE		1232304						
ANR	1232414	ClassDef	<unnamed>	4949:8:110757:110867							
ANR	1232415	DeclStmt									
ANR	1232416	Decl							ScanEnv	ScanEnv *	env
ANR	1232417	DeclStmt									
ANR	1232418	Decl							CClassNode	CClassNode *	cc
ANR	1232419	DeclStmt									
ANR	1232420	Decl							Node	Node *	alt_root
ANR	1232421	DeclStmt									
ANR	1232422	Decl							Node	Node * *	ptail
ANR	1232423	DeclStmt									
ANR	1232424	Decl									IApplyCaseFoldArg
ANR	1232425	Function	i_apply_case_fold	4956:0:110870:112782							
ANR	1232426	FunctionDef	"i_apply_case_fold (OnigCodePoint from , OnigCodePoint to [ ] , int to_len , void * arg)"		1232425	0					
ANR	1232427	CompoundStatement		4959:0:110966:112782	1232425	0					
ANR	1232428	IdentifierDeclStatement	IApplyCaseFoldArg * iarg ;	4960:2:110970:110993	1232425	0	True				
ANR	1232429	IdentifierDecl	* iarg		1232425	0					
ANR	1232430	IdentifierDeclType	IApplyCaseFoldArg *		1232425	0					
ANR	1232431	Identifier	iarg		1232425	1					
ANR	1232432	IdentifierDeclStatement	ScanEnv * env ;	4961:2:110997:111009	1232425	1	True				
ANR	1232433	IdentifierDecl	* env		1232425	0					
ANR	1232434	IdentifierDeclType	ScanEnv *		1232425	0					
ANR	1232435	Identifier	env		1232425	1					
ANR	1232436	IdentifierDeclStatement	CClassNode * cc ;	4962:2:111013:111027	1232425	2	True				
ANR	1232437	IdentifierDecl	* cc		1232425	0					
ANR	1232438	IdentifierDeclType	CClassNode *		1232425	0					
ANR	1232439	Identifier	cc		1232425	1					
ANR	1232440	IdentifierDeclStatement	BitSetRef bs ;	4963:2:111031:111043	1232425	3	True				
ANR	1232441	IdentifierDecl	bs		1232425	0					
ANR	1232442	IdentifierDeclType	BitSetRef		1232425	0					
ANR	1232443	Identifier	bs		1232425	1					
ANR	1232444	ExpressionStatement	iarg = ( IApplyCaseFoldArg * ) arg	4965:2:111048:111079	1232425	4	True				
ANR	1232445	AssignmentExpression	iarg = ( IApplyCaseFoldArg * ) arg		1232425	0		=			
ANR	1232446	Identifier	iarg		1232425	0					
ANR	1232447	CastExpression	( IApplyCaseFoldArg * ) arg		1232425	1					
ANR	1232448	CastTarget	IApplyCaseFoldArg *		1232425	0					
ANR	1232449	Identifier	arg		1232425	1					
ANR	1232450	ExpressionStatement	env = iarg -> env	4966:2:111083:111098	1232425	5	True				
ANR	1232451	AssignmentExpression	env = iarg -> env		1232425	0		=			
ANR	1232452	Identifier	env		1232425	0					
ANR	1232453	PtrMemberAccess	iarg -> env		1232425	1					
ANR	1232454	Identifier	iarg		1232425	0					
ANR	1232455	Identifier	env		1232425	1					
ANR	1232456	ExpressionStatement	cc = iarg -> cc	4967:2:111102:111116	1232425	6	True				
ANR	1232457	AssignmentExpression	cc = iarg -> cc		1232425	0		=			
ANR	1232458	Identifier	cc		1232425	0					
ANR	1232459	PtrMemberAccess	iarg -> cc		1232425	1					
ANR	1232460	Identifier	iarg		1232425	0					
ANR	1232461	Identifier	cc		1232425	1					
ANR	1232462	ExpressionStatement	bs = cc -> bs	4968:2:111120:111131	1232425	7	True				
ANR	1232463	AssignmentExpression	bs = cc -> bs		1232425	0		=			
ANR	1232464	Identifier	bs		1232425	0					
ANR	1232465	PtrMemberAccess	cc -> bs		1232425	1					
ANR	1232466	Identifier	cc		1232425	0					
ANR	1232467	Identifier	bs		1232425	1					
ANR	1232468	IfStatement	if ( to_len == 1 )		1232425	8					
ANR	1232469	Condition	to_len == 1	4970:6:111140:111150	1232425	0	True				
ANR	1232470	EqualityExpression	to_len == 1		1232425	0		==			
ANR	1232471	Identifier	to_len		1232425	0					
ANR	1232472	PrimaryExpression	1		1232425	1					
ANR	1232473	CompoundStatement		13:4:192:242	1232425	1					
ANR	1232474	IdentifierDeclStatement	"int is_in = onig_is_code_in_cc ( env -> enc , from , cc ) ;"	4971:4:111159:111209	1232425	0	True				
ANR	1232475	IdentifierDecl	"is_in = onig_is_code_in_cc ( env -> enc , from , cc )"		1232425	0					
ANR	1232476	IdentifierDeclType	int		1232425	0					
ANR	1232477	Identifier	is_in		1232425	1					
ANR	1232478	AssignmentExpression	"is_in = onig_is_code_in_cc ( env -> enc , from , cc )"		1232425	2		=			
ANR	1232479	Identifier	is_in		1232425	0					
ANR	1232480	CallExpression	"onig_is_code_in_cc ( env -> enc , from , cc )"		1232425	1					
ANR	1232481	Callee	onig_is_code_in_cc		1232425	0					
ANR	1232482	Identifier	onig_is_code_in_cc		1232425	0					
ANR	1232483	ArgumentList	env -> enc		1232425	1					
ANR	1232484	Argument	env -> enc		1232425	0					
ANR	1232485	PtrMemberAccess	env -> enc		1232425	0					
ANR	1232486	Identifier	env		1232425	0					
ANR	1232487	Identifier	enc		1232425	1					
ANR	1232488	Argument	from		1232425	1					
ANR	1232489	Identifier	from		1232425	0					
ANR	1232490	Argument	cc		1232425	2					
ANR	1232491	Identifier	cc		1232425	0					
ANR	1232492	IfStatement	if ( ( is_in != 0 && ! IS_NCCLASS_NOT ( cc ) ) || ( is_in == 0 && IS_NCCLASS_NOT ( cc ) ) )		1232425	1					
ANR	1232493	Condition	( is_in != 0 && ! IS_NCCLASS_NOT ( cc ) ) || ( is_in == 0 && IS_NCCLASS_NOT ( cc ) )	4973:8:111270:111344	1232425	0	True				
ANR	1232494	OrExpression	( is_in != 0 && ! IS_NCCLASS_NOT ( cc ) ) || ( is_in == 0 && IS_NCCLASS_NOT ( cc ) )		1232425	0		||			
ANR	1232495	AndExpression	is_in != 0 && ! IS_NCCLASS_NOT ( cc )		1232425	0		&&			
ANR	1232496	EqualityExpression	is_in != 0		1232425	0		!=			
ANR	1232497	Identifier	is_in		1232425	0					
ANR	1232498	PrimaryExpression	0		1232425	1					
ANR	1232499	UnaryOperationExpression	! IS_NCCLASS_NOT ( cc )		1232425	1					
ANR	1232500	UnaryOperator	!		1232425	0					
ANR	1232501	CallExpression	IS_NCCLASS_NOT ( cc )		1232425	1					
ANR	1232502	Callee	IS_NCCLASS_NOT		1232425	0					
ANR	1232503	Identifier	IS_NCCLASS_NOT		1232425	0					
ANR	1232504	ArgumentList	cc		1232425	1					
ANR	1232505	Argument	cc		1232425	0					
ANR	1232506	Identifier	cc		1232425	0					
ANR	1232507	AndExpression	is_in == 0 && IS_NCCLASS_NOT ( cc )		1232425	1		&&			
ANR	1232508	EqualityExpression	is_in == 0		1232425	0		==			
ANR	1232509	Identifier	is_in		1232425	0					
ANR	1232510	PrimaryExpression	0		1232425	1					
ANR	1232511	CallExpression	IS_NCCLASS_NOT ( cc )		1232425	1					
ANR	1232512	Callee	IS_NCCLASS_NOT		1232425	0					
ANR	1232513	Identifier	IS_NCCLASS_NOT		1232425	0					
ANR	1232514	ArgumentList	cc		1232425	1					
ANR	1232515	Argument	cc		1232425	0					
ANR	1232516	Identifier	cc		1232425	0					
ANR	1232517	CompoundStatement		16:38:380:380	1232425	1					
ANR	1232518	IfStatement	if ( ONIGENC_MBC_MINLEN ( env -> enc ) > 1 || * to >= SINGLE_BYTE_SIZE )		1232425	0					
ANR	1232519	Condition	ONIGENC_MBC_MINLEN ( env -> enc ) > 1 || * to >= SINGLE_BYTE_SIZE	4975:10:111359:111417	1232425	0	True				
ANR	1232520	OrExpression	ONIGENC_MBC_MINLEN ( env -> enc ) > 1 || * to >= SINGLE_BYTE_SIZE		1232425	0		||			
ANR	1232521	RelationalExpression	ONIGENC_MBC_MINLEN ( env -> enc ) > 1		1232425	0		>			
ANR	1232522	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		1232425	0					
ANR	1232523	Callee	ONIGENC_MBC_MINLEN		1232425	0					
ANR	1232524	Identifier	ONIGENC_MBC_MINLEN		1232425	0					
ANR	1232525	ArgumentList	env -> enc		1232425	1					
ANR	1232526	Argument	env -> enc		1232425	0					
ANR	1232527	PtrMemberAccess	env -> enc		1232425	0					
ANR	1232528	Identifier	env		1232425	0					
ANR	1232529	Identifier	enc		1232425	1					
ANR	1232530	PrimaryExpression	1		1232425	1					
ANR	1232531	RelationalExpression	* to >= SINGLE_BYTE_SIZE		1232425	1		>=			
ANR	1232532	UnaryOperationExpression	* to		1232425	0					
ANR	1232533	UnaryOperator	*		1232425	0					
ANR	1232534	Identifier	to		1232425	1					
ANR	1232535	Identifier	SINGLE_BYTE_SIZE		1232425	1					
ANR	1232536	CompoundStatement		17:71:453:453	1232425	1					
ANR	1232537	ExpressionStatement	"add_code_range ( & ( cc -> mbuf ) , env , * to , * to )"	4976:1:111423:111465	1232425	0	True				
ANR	1232538	CallExpression	"add_code_range ( & ( cc -> mbuf ) , env , * to , * to )"		1232425	0					
ANR	1232539	Callee	add_code_range		1232425	0					
ANR	1232540	Identifier	add_code_range		1232425	0					
ANR	1232541	ArgumentList	& ( cc -> mbuf )		1232425	1					
ANR	1232542	Argument	& ( cc -> mbuf )		1232425	0					
ANR	1232543	UnaryOperationExpression	& ( cc -> mbuf )		1232425	0					
ANR	1232544	UnaryOperator	&		1232425	0					
ANR	1232545	PtrMemberAccess	cc -> mbuf		1232425	1					
ANR	1232546	Identifier	cc		1232425	0					
ANR	1232547	Identifier	mbuf		1232425	1					
ANR	1232548	Argument	env		1232425	1					
ANR	1232549	Identifier	env		1232425	0					
ANR	1232550	Argument	* to		1232425	2					
ANR	1232551	UnaryOperationExpression	* to		1232425	0					
ANR	1232552	UnaryOperator	*		1232425	0					
ANR	1232553	Identifier	to		1232425	1					
ANR	1232554	Argument	* to		1232425	3					
ANR	1232555	UnaryOperationExpression	* to		1232425	0					
ANR	1232556	UnaryOperator	*		1232425	0					
ANR	1232557	Identifier	to		1232425	1					
ANR	1232558	ElseStatement	else		1232425	0					
ANR	1232559	CompoundStatement		20:11:519:519	1232425	0					
ANR	1232560	ExpressionStatement	"BITSET_SET_BIT ( bs , * to )"	4979:1:111489:111512	1232425	0	True				
ANR	1232561	CallExpression	"BITSET_SET_BIT ( bs , * to )"		1232425	0					
ANR	1232562	Callee	BITSET_SET_BIT		1232425	0					
ANR	1232563	Identifier	BITSET_SET_BIT		1232425	0					
ANR	1232564	ArgumentList	bs		1232425	1					
ANR	1232565	Argument	bs		1232425	0					
ANR	1232566	Identifier	bs		1232425	0					
ANR	1232567	Argument	* to		1232425	1					
ANR	1232568	UnaryOperationExpression	* to		1232425	0					
ANR	1232569	UnaryOperator	*		1232425	0					
ANR	1232570	Identifier	to		1232425	1					
ANR	1232571	ElseStatement	else		1232425	0					
ANR	1232572	CompoundStatement		43:4:1034:1057	1232425	0					
ANR	1232573	IdentifierDeclStatement	"int r , i , len ;"	4999:4:111939:111952	1232425	0	True				
ANR	1232574	IdentifierDecl	r		1232425	0					
ANR	1232575	IdentifierDeclType	int		1232425	0					
ANR	1232576	Identifier	r		1232425	1					
ANR	1232577	IdentifierDecl	i		1232425	1					
ANR	1232578	IdentifierDeclType	int		1232425	0					
ANR	1232579	Identifier	i		1232425	1					
ANR	1232580	IdentifierDecl	len		1232425	2					
ANR	1232581	IdentifierDeclType	int		1232425	0					
ANR	1232582	Identifier	len		1232425	1					
ANR	1232583	IdentifierDeclStatement	UChar buf [ ONIGENC_CODE_TO_MBC_MAXLEN ] ;	5000:4:111958:111995	1232425	1	True				
ANR	1232584	IdentifierDecl	buf [ ONIGENC_CODE_TO_MBC_MAXLEN ]		1232425	0					
ANR	1232585	IdentifierDeclType	UChar [ ONIGENC_CODE_TO_MBC_MAXLEN ]		1232425	0					
ANR	1232586	Identifier	buf		1232425	1					
ANR	1232587	Identifier	ONIGENC_CODE_TO_MBC_MAXLEN		1232425	2					
ANR	1232588	IdentifierDeclStatement	Node * snode = NULL_NODE ;	5001:4:112001:112024	1232425	2	True				
ANR	1232589	IdentifierDecl	* snode = NULL_NODE		1232425	0					
ANR	1232590	IdentifierDeclType	Node *		1232425	0					
ANR	1232591	Identifier	snode		1232425	1					
ANR	1232592	AssignmentExpression	* snode = NULL_NODE		1232425	2		=			
ANR	1232593	Identifier	NULL_NODE		1232425	0					
ANR	1232594	Identifier	NULL_NODE		1232425	1					
ANR	1232595	Statement	if	5003:4:112031:112032	1232425	3	True				
ANR	1232596	Statement	(	5003:7:112034:112034	1232425	4	True				
ANR	1232597	Statement	onig_is_code_in_cc	5003:8:112035:112052	1232425	5	True				
ANR	1232598	Statement	(	5003:26:112053:112053	1232425	6	True				
ANR	1232599	Statement	env	5003:27:112054:112056	1232425	7	True				
ANR	1232600	Statement	->	5003:30:112057:112058	1232425	8	True				
ANR	1232601	Statement	enc	5003:32:112059:112061	1232425	9	True				
ANR	1232602	Statement	","	5003:35:112062:112062	1232425	10	True				
ANR	1232603	Statement	from	5003:37:112064:112067	1232425	11	True				
ANR	1232604	Statement	","	5003:41:112068:112068	1232425	12	True				
ANR	1232605	Statement	cc	5003:43:112070:112071	1232425	13	True				
ANR	1232606	Statement	)	5003:45:112072:112072	1232425	14	True				
ANR	1232607	Statement	&&	5005:1:112126:112127	1232425	15	True				
ANR	1232608	Statement	!	5005:4:112129:112129	1232425	16	True				
ANR	1232609	Statement	IS_NCCLASS_NOT	5005:5:112130:112143	1232425	17	True				
ANR	1232610	Statement	(	5005:19:112144:112144	1232425	18	True				
ANR	1232611	Statement	cc	5005:20:112145:112146	1232425	19	True				
ANR	1232612	Statement	)	5005:22:112147:112147	1232425	20	True				
ANR	1232613	Statement	)	5007:1:112157:112157	1232425	21	True				
ANR	1232614	CompoundStatement		49:3:1192:1192	1232425	22					
ANR	1232615	ForStatement	for ( i = 0 ; i < to_len ; i ++ )		1232425	0					
ANR	1232616	ForInit	i = 0 ;	5008:11:112172:112177	1232425	0	True				
ANR	1232617	AssignmentExpression	i = 0		1232425	0		=			
ANR	1232618	Identifier	i		1232425	0					
ANR	1232619	PrimaryExpression	0		1232425	1					
ANR	1232620	Condition	i < to_len	5008:18:112179:112188	1232425	1	True				
ANR	1232621	RelationalExpression	i < to_len		1232425	0		<			
ANR	1232622	Identifier	i		1232425	0					
ANR	1232623	Identifier	to_len		1232425	1					
ANR	1232624	PostIncDecOperationExpression	i ++	5008:30:112191:112193	1232425	2	True				
ANR	1232625	Identifier	i		1232425	0					
ANR	1232626	IncDec	++		1232425	1					
ANR	1232627	CompoundStatement		50:35:1229:1229	1232425	3					
ANR	1232628	ExpressionStatement	"len = ONIGENC_CODE_TO_MBC ( env -> enc , to [ i ] , buf )"	5009:1:112199:112246	1232425	0	True				
ANR	1232629	AssignmentExpression	"len = ONIGENC_CODE_TO_MBC ( env -> enc , to [ i ] , buf )"		1232425	0		=			
ANR	1232630	Identifier	len		1232425	0					
ANR	1232631	CallExpression	"ONIGENC_CODE_TO_MBC ( env -> enc , to [ i ] , buf )"		1232425	1					
ANR	1232632	Callee	ONIGENC_CODE_TO_MBC		1232425	0					
ANR	1232633	Identifier	ONIGENC_CODE_TO_MBC		1232425	0					
ANR	1232634	ArgumentList	env -> enc		1232425	1					
ANR	1232635	Argument	env -> enc		1232425	0					
ANR	1232636	PtrMemberAccess	env -> enc		1232425	0					
ANR	1232637	Identifier	env		1232425	0					
ANR	1232638	Identifier	enc		1232425	1					
ANR	1232639	Argument	to [ i ]		1232425	1					
ANR	1232640	ArrayIndexing	to [ i ]		1232425	0					
ANR	1232641	Identifier	to		1232425	0					
ANR	1232642	Identifier	i		1232425	1					
ANR	1232643	Argument	buf		1232425	2					
ANR	1232644	Identifier	buf		1232425	0					
ANR	1232645	IfStatement	if ( i == 0 )		1232425	1					
ANR	1232646	Condition	i == 0	5010:5:112253:112258	1232425	0	True				
ANR	1232647	EqualityExpression	i == 0		1232425	0		==			
ANR	1232648	Identifier	i		1232425	0					
ANR	1232649	PrimaryExpression	0		1232425	1					
ANR	1232650	CompoundStatement		52:13:1294:1294	1232425	1					
ANR	1232651	ExpressionStatement	"snode = onig_node_new_str ( buf , buf + len )"	5011:3:112266:112307	1232425	0	True				
ANR	1232652	AssignmentExpression	"snode = onig_node_new_str ( buf , buf + len )"		1232425	0		=			
ANR	1232653	Identifier	snode		1232425	0					
ANR	1232654	CallExpression	"onig_node_new_str ( buf , buf + len )"		1232425	1					
ANR	1232655	Callee	onig_node_new_str		1232425	0					
ANR	1232656	Identifier	onig_node_new_str		1232425	0					
ANR	1232657	ArgumentList	buf		1232425	1					
ANR	1232658	Argument	buf		1232425	0					
ANR	1232659	Identifier	buf		1232425	0					
ANR	1232660	Argument	buf + len		1232425	1					
ANR	1232661	AdditiveExpression	buf + len		1232425	0		+			
ANR	1232662	Identifier	buf		1232425	0					
ANR	1232663	Identifier	len		1232425	1					
ANR	1232664	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( snode )	5012:3:112312:112343	1232425	1	True				
ANR	1232665	CallExpression	CHECK_NULL_RETURN_MEMERR ( snode )		1232425	0					
ANR	1232666	Callee	CHECK_NULL_RETURN_MEMERR		1232425	0					
ANR	1232667	Identifier	CHECK_NULL_RETURN_MEMERR		1232425	0					
ANR	1232668	ArgumentList	snode		1232425	1					
ANR	1232669	Argument	snode		1232425	0					
ANR	1232670	Identifier	snode		1232425	0					
ANR	1232671	ExpressionStatement	NSTRING_SET_AMBIG ( snode )	5016:3:112442:112466	1232425	2	True				
ANR	1232672	CallExpression	NSTRING_SET_AMBIG ( snode )		1232425	0					
ANR	1232673	Callee	NSTRING_SET_AMBIG		1232425	0					
ANR	1232674	Identifier	NSTRING_SET_AMBIG		1232425	0					
ANR	1232675	ArgumentList	snode		1232425	1					
ANR	1232676	Argument	snode		1232425	0					
ANR	1232677	Identifier	snode		1232425	0					
ANR	1232678	ElseStatement	else		1232425	0					
ANR	1232679	CompoundStatement		60:6:1510:1510	1232425	0					
ANR	1232680	ExpressionStatement	"r = onig_node_str_cat ( snode , buf , buf + len )"	5019:3:112482:112526	1232425	0	True				
ANR	1232681	AssignmentExpression	"r = onig_node_str_cat ( snode , buf , buf + len )"		1232425	0		=			
ANR	1232682	Identifier	r		1232425	0					
ANR	1232683	CallExpression	"onig_node_str_cat ( snode , buf , buf + len )"		1232425	1					
ANR	1232684	Callee	onig_node_str_cat		1232425	0					
ANR	1232685	Identifier	onig_node_str_cat		1232425	0					
ANR	1232686	ArgumentList	snode		1232425	1					
ANR	1232687	Argument	snode		1232425	0					
ANR	1232688	Identifier	snode		1232425	0					
ANR	1232689	Argument	buf		1232425	1					
ANR	1232690	Identifier	buf		1232425	0					
ANR	1232691	Argument	buf + len		1232425	2					
ANR	1232692	AdditiveExpression	buf + len		1232425	0		+			
ANR	1232693	Identifier	buf		1232425	0					
ANR	1232694	Identifier	len		1232425	1					
ANR	1232695	IfStatement	if ( r < 0 )		1232425	1					
ANR	1232696	Condition	r < 0	5020:7:112535:112539	1232425	0	True				
ANR	1232697	RelationalExpression	r < 0		1232425	0		<			
ANR	1232698	Identifier	r		1232425	0					
ANR	1232699	PrimaryExpression	0		1232425	1					
ANR	1232700	CompoundStatement		62:14:1575:1575	1232425	1					
ANR	1232701	ExpressionStatement	onig_node_free ( snode )	5021:5:112549:112570	1232425	0	True				
ANR	1232702	CallExpression	onig_node_free ( snode )		1232425	0					
ANR	1232703	Callee	onig_node_free		1232425	0					
ANR	1232704	Identifier	onig_node_free		1232425	0					
ANR	1232705	ArgumentList	snode		1232425	1					
ANR	1232706	Argument	snode		1232425	0					
ANR	1232707	Identifier	snode		1232425	0					
ANR	1232708	ReturnStatement	return r ;	5022:5:112577:112585	1232425	1	True				
ANR	1232709	Identifier	r		1232425	0					
ANR	1232710	ExpressionStatement	"* ( iarg -> ptail ) = onig_node_new_alt ( snode , NULL_NODE )"	5027:6:112610:112662	1232425	1	True				
ANR	1232711	AssignmentExpression	"* ( iarg -> ptail ) = onig_node_new_alt ( snode , NULL_NODE )"		1232425	0		=			
ANR	1232712	UnaryOperationExpression	* ( iarg -> ptail )		1232425	0					
ANR	1232713	UnaryOperator	*		1232425	0					
ANR	1232714	PtrMemberAccess	iarg -> ptail		1232425	1					
ANR	1232715	Identifier	iarg		1232425	0					
ANR	1232716	Identifier	ptail		1232425	1					
ANR	1232717	CallExpression	"onig_node_new_alt ( snode , NULL_NODE )"		1232425	1					
ANR	1232718	Callee	onig_node_new_alt		1232425	0					
ANR	1232719	Identifier	onig_node_new_alt		1232425	0					
ANR	1232720	ArgumentList	snode		1232425	1					
ANR	1232721	Argument	snode		1232425	0					
ANR	1232722	Identifier	snode		1232425	0					
ANR	1232723	Argument	NULL_NODE		1232425	1					
ANR	1232724	Identifier	NULL_NODE		1232425	0					
ANR	1232725	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * ( iarg -> ptail ) )	5028:6:112670:112710	1232425	2	True				
ANR	1232726	CallExpression	CHECK_NULL_RETURN_MEMERR ( * ( iarg -> ptail ) )		1232425	0					
ANR	1232727	Callee	CHECK_NULL_RETURN_MEMERR		1232425	0					
ANR	1232728	Identifier	CHECK_NULL_RETURN_MEMERR		1232425	0					
ANR	1232729	ArgumentList	* ( iarg -> ptail )		1232425	1					
ANR	1232730	Argument	* ( iarg -> ptail )		1232425	0					
ANR	1232731	UnaryOperationExpression	* ( iarg -> ptail )		1232425	0					
ANR	1232732	UnaryOperator	*		1232425	0					
ANR	1232733	PtrMemberAccess	iarg -> ptail		1232425	1					
ANR	1232734	Identifier	iarg		1232425	0					
ANR	1232735	Identifier	ptail		1232425	1					
ANR	1232736	ExpressionStatement	iarg -> ptail = & ( NCDR ( ( * ( iarg -> ptail ) ) ) )	5029:6:112718:112757	1232425	3	True				
ANR	1232737	AssignmentExpression	iarg -> ptail = & ( NCDR ( ( * ( iarg -> ptail ) ) ) )		1232425	0		=			
ANR	1232738	PtrMemberAccess	iarg -> ptail		1232425	0					
ANR	1232739	Identifier	iarg		1232425	0					
ANR	1232740	Identifier	ptail		1232425	1					
ANR	1232741	UnaryOperationExpression	& ( NCDR ( ( * ( iarg -> ptail ) ) ) )		1232425	1					
ANR	1232742	UnaryOperator	&		1232425	0					
ANR	1232743	CallExpression	NCDR ( ( * ( iarg -> ptail ) ) )		1232425	1					
ANR	1232744	Callee	NCDR		1232425	0					
ANR	1232745	Identifier	NCDR		1232425	0					
ANR	1232746	ArgumentList	* ( iarg -> ptail )		1232425	1					
ANR	1232747	Argument	* ( iarg -> ptail )		1232425	0					
ANR	1232748	UnaryOperationExpression	* ( iarg -> ptail )		1232425	0					
ANR	1232749	UnaryOperator	*		1232425	0					
ANR	1232750	PtrMemberAccess	iarg -> ptail		1232425	1					
ANR	1232751	Identifier	iarg		1232425	0					
ANR	1232752	Identifier	ptail		1232425	1					
ANR	1232753	ReturnStatement	return 0 ;	5033:2:112772:112780	1232425	9	True				
ANR	1232754	PrimaryExpression	0		1232425	0					
ANR	1232755	ReturnType	static int		1232425	1					
ANR	1232756	Identifier	i_apply_case_fold		1232425	2					
ANR	1232757	ParameterList	"OnigCodePoint from , OnigCodePoint to [ ] , int to_len , void * arg"		1232425	3					
ANR	1232758	Parameter	OnigCodePoint from	4957:18:110899:110916	1232425	0	True				
ANR	1232759	ParameterType	OnigCodePoint		1232425	0					
ANR	1232760	Identifier	from		1232425	1					
ANR	1232761	Parameter	OnigCodePoint to [ ]	4957:38:110919:110936	1232425	1	True				
ANR	1232762	ParameterType	OnigCodePoint [ ]		1232425	0					
ANR	1232763	Identifier	to		1232425	1					
ANR	1232764	Parameter	int to_len	4958:4:110943:110952	1232425	2	True				
ANR	1232765	ParameterType	int		1232425	0					
ANR	1232766	Identifier	to_len		1232425	1					
ANR	1232767	Parameter	void * arg	4958:16:110955:110963	1232425	3	True				
ANR	1232768	ParameterType	void *		1232425	0					
ANR	1232769	Identifier	arg		1232425	1					
ANR	1232770	CFGEntryNode	ENTRY		1232425		True				
ANR	1232771	CFGExitNode	EXIT		1232425		True				
ANR	1232772	Symbol	& NCDR		1232425						
ANR	1232773	Symbol	* iarg -> ptail		1232425						
ANR	1232774	Symbol	* cc		1232425						
ANR	1232775	Symbol	IS_NCCLASS_NOT		1232425						
ANR	1232776	Symbol	ONIGENC_MBC_MINLEN		1232425						
ANR	1232777	Symbol	env -> enc		1232425						
ANR	1232778	Symbol	iarg -> env		1232425						
ANR	1232779	Symbol	bs		1232425						
ANR	1232780	Symbol	len		1232425						
ANR	1232781	Symbol	iarg -> ptail		1232425						
ANR	1232782	Symbol	arg		1232425						
ANR	1232783	Symbol	from		1232425						
ANR	1232784	Symbol	* iarg		1232425						
ANR	1232785	Symbol	& cc -> mbuf		1232425						
ANR	1232786	Symbol	onig_is_code_in_cc		1232425						
ANR	1232787	Symbol	cc		1232425						
ANR	1232788	Symbol	SINGLE_BYTE_SIZE		1232425						
ANR	1232789	Symbol	* * iarg		1232425						
ANR	1232790	Symbol	* to		1232425						
ANR	1232791	Symbol	* ( iarg -> ptail )		1232425						
ANR	1232792	Symbol	onig_node_new_alt		1232425						
ANR	1232793	Symbol	is_in		1232425						
ANR	1232794	Symbol	* env		1232425						
ANR	1232795	Symbol	i		1232425						
ANR	1232796	Symbol	to_len		1232425						
ANR	1232797	Symbol	env		1232425						
ANR	1232798	Symbol	cc -> bs		1232425						
ANR	1232799	Symbol	r		1232425						
ANR	1232800	Symbol	buf		1232425						
ANR	1232801	Symbol	ONIGENC_CODE_TO_MBC		1232425						
ANR	1232802	Symbol	* i		1232425						
ANR	1232803	Symbol	onig_node_str_cat		1232425						
ANR	1232804	Symbol	onig_node_new_str		1232425						
ANR	1232805	Symbol	to		1232425						
ANR	1232806	Symbol	iarg -> cc		1232425						
ANR	1232807	Symbol	iarg		1232425						
ANR	1232808	Symbol	NULL_NODE		1232425						
ANR	1232809	Symbol	snode		1232425						
ANR	1232810	Function	parse_exp	5036:0:112785:122115							
ANR	1232811	FunctionDef	"parse_exp (Node * * np , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env)"		1232810	0					
ANR	1232812	CompoundStatement		5039:0:112885:122115	1232810	0					
ANR	1232813	IdentifierDeclStatement	"int r , len , group = 0 ;"	5040:2:112889:112910	1232810	0	True				
ANR	1232814	IdentifierDecl	r		1232810	0					
ANR	1232815	IdentifierDeclType	int		1232810	0					
ANR	1232816	Identifier	r		1232810	1					
ANR	1232817	IdentifierDecl	len		1232810	1					
ANR	1232818	IdentifierDeclType	int		1232810	0					
ANR	1232819	Identifier	len		1232810	1					
ANR	1232820	IdentifierDecl	group = 0		1232810	2					
ANR	1232821	IdentifierDeclType	int		1232810	0					
ANR	1232822	Identifier	group		1232810	1					
ANR	1232823	AssignmentExpression	group = 0		1232810	2		=			
ANR	1232824	Identifier	group		1232810	0					
ANR	1232825	PrimaryExpression	0		1232810	1					
ANR	1232826	IdentifierDeclStatement	Node * qn ;	5041:2:112914:112922	1232810	1	True				
ANR	1232827	IdentifierDecl	* qn		1232810	0					
ANR	1232828	IdentifierDeclType	Node *		1232810	0					
ANR	1232829	Identifier	qn		1232810	1					
ANR	1232830	IdentifierDeclStatement	Node * * targetp ;	5042:2:112926:112940	1232810	2	True				
ANR	1232831	IdentifierDecl	* * targetp		1232810	0					
ANR	1232832	IdentifierDeclType	Node * *		1232810	0					
ANR	1232833	Identifier	targetp		1232810	1					
ANR	1232834	ExpressionStatement	* np = NULL	5044:2:112945:112955	1232810	3	True				
ANR	1232835	AssignmentExpression	* np = NULL		1232810	0		=			
ANR	1232836	UnaryOperationExpression	* np		1232810	0					
ANR	1232837	UnaryOperator	*		1232810	0					
ANR	1232838	Identifier	np		1232810	1					
ANR	1232839	Identifier	NULL		1232810	1					
ANR	1232840	IfStatement	if ( tok -> type == ( enum TokenSyms ) term )		1232810	4					
ANR	1232841	Condition	tok -> type == ( enum TokenSyms ) term	5045:6:112963:112996	1232810	0	True				
ANR	1232842	EqualityExpression	tok -> type == ( enum TokenSyms ) term		1232810	0		==			
ANR	1232843	PtrMemberAccess	tok -> type		1232810	0					
ANR	1232844	Identifier	tok		1232810	0					
ANR	1232845	Identifier	type		1232810	1					
ANR	1232846	CastExpression	( enum TokenSyms ) term		1232810	1					
ANR	1232847	CastTarget	enum TokenSyms		1232810	0					
ANR	1232848	Identifier	term		1232810	1					
ANR	1232849	GotoStatement	goto end_of_token ;	5046:4:113003:113020	1232810	1	True				
ANR	1232850	Identifier	end_of_token		1232810	0					
ANR	1232851	SwitchStatement	switch ( tok -> type )		1232810	5					
ANR	1232852	Condition	tok -> type	5048:10:113033:113041	1232810	0	True				
ANR	1232853	PtrMemberAccess	tok -> type		1232810	0					
ANR	1232854	Identifier	tok		1232810	0					
ANR	1232855	Identifier	type		1232810	1					
ANR	1232856	CompoundStatement		10:21:158:158	1232810	1					
ANR	1232857	Label	case TK_ALT :	5049:2:113048:113059	1232810	0	True				
ANR	1232858	Identifier	TK_ALT		1232810	0					
ANR	1232859	Label	case TK_EOT :	5050:2:113063:113074	1232810	1	True				
ANR	1232860	Identifier	TK_EOT		1232810	0					
ANR	1232861	Label	end_of_token :	5051:2:113078:113090	1232810	2	True				
ANR	1232862	Identifier	end_of_token		1232810	0					
ANR	1232863	ExpressionStatement	* np = node_new_empty ( )	5052:2:113094:113116	1232810	3	True				
ANR	1232864	AssignmentExpression	* np = node_new_empty ( )		1232810	0		=			
ANR	1232865	UnaryOperationExpression	* np		1232810	0					
ANR	1232866	UnaryOperator	*		1232810	0					
ANR	1232867	Identifier	np		1232810	1					
ANR	1232868	CallExpression	node_new_empty ( )		1232810	1					
ANR	1232869	Callee	node_new_empty		1232810	0					
ANR	1232870	Identifier	node_new_empty		1232810	0					
ANR	1232871	ArgumentList			1232810	1					
ANR	1232872	ReturnStatement	return tok -> type ;	5053:2:113120:113136	1232810	4	True				
ANR	1232873	PtrMemberAccess	tok -> type		1232810	0					
ANR	1232874	Identifier	tok		1232810	0					
ANR	1232875	Identifier	type		1232810	1					
ANR	1232876	BreakStatement	break ;	5054:2:113140:113145	1232810	5	True				
ANR	1232877	Label	case TK_SUBEXP_OPEN :	5056:2:113150:113169	1232810	6	True				
ANR	1232878	Identifier	TK_SUBEXP_OPEN		1232810	0					
ANR	1232879	ExpressionStatement	"r = parse_enclose ( np , tok , TK_SUBEXP_CLOSE , src , end , env )"	5057:4:113175:113233	1232810	7	True				
ANR	1232880	AssignmentExpression	"r = parse_enclose ( np , tok , TK_SUBEXP_CLOSE , src , end , env )"		1232810	0		=			
ANR	1232881	Identifier	r		1232810	0					
ANR	1232882	CallExpression	"parse_enclose ( np , tok , TK_SUBEXP_CLOSE , src , end , env )"		1232810	1					
ANR	1232883	Callee	parse_enclose		1232810	0					
ANR	1232884	Identifier	parse_enclose		1232810	0					
ANR	1232885	ArgumentList	np		1232810	1					
ANR	1232886	Argument	np		1232810	0					
ANR	1232887	Identifier	np		1232810	0					
ANR	1232888	Argument	tok		1232810	1					
ANR	1232889	Identifier	tok		1232810	0					
ANR	1232890	Argument	TK_SUBEXP_CLOSE		1232810	2					
ANR	1232891	Identifier	TK_SUBEXP_CLOSE		1232810	0					
ANR	1232892	Argument	src		1232810	3					
ANR	1232893	Identifier	src		1232810	0					
ANR	1232894	Argument	end		1232810	4					
ANR	1232895	Identifier	end		1232810	0					
ANR	1232896	Argument	env		1232810	5					
ANR	1232897	Identifier	env		1232810	0					
ANR	1232898	IfStatement	if ( r < 0 )		1232810	8					
ANR	1232899	Condition	r < 0	5058:8:113243:113247	1232810	0	True				
ANR	1232900	RelationalExpression	r < 0		1232810	0		<			
ANR	1232901	Identifier	r		1232810	0					
ANR	1232902	PrimaryExpression	0		1232810	1					
ANR	1232903	ReturnStatement	return r ;	5058:15:113250:113258	1232810	1	True				
ANR	1232904	Identifier	r		1232810	0					
ANR	1232905	IfStatement	if ( r == 1 )		1232810	9					
ANR	1232906	Condition	r == 1	5059:8:113268:113273	1232810	0	True				
ANR	1232907	EqualityExpression	r == 1		1232810	0		==			
ANR	1232908	Identifier	r		1232810	0					
ANR	1232909	PrimaryExpression	1		1232810	1					
ANR	1232910	ExpressionStatement	group = 1	5059:16:113276:113285	1232810	1	True				
ANR	1232911	AssignmentExpression	group = 1		1232810	0		=			
ANR	1232912	Identifier	group		1232810	0					
ANR	1232913	PrimaryExpression	1		1232810	1					
ANR	1232914	ElseStatement	else		1232810	0					
ANR	1232915	IfStatement	if ( r == 2 )		1232810	0					
ANR	1232916	Condition	r == 2	5060:13:113300:113305	1232810	0	True				
ANR	1232917	EqualityExpression	r == 2		1232810	0		==			
ANR	1232918	Identifier	r		1232810	0					
ANR	1232919	PrimaryExpression	2		1232810	1					
ANR	1232920	CompoundStatement		24:6:468:501	1232810	1					
ANR	1232921	IdentifierDeclStatement	Node * target ;	5061:6:113334:113346	1232810	0	True				
ANR	1232922	IdentifierDecl	* target		1232810	0					
ANR	1232923	IdentifierDeclType	Node *		1232810	0					
ANR	1232924	Identifier	target		1232810	1					
ANR	1232925	IdentifierDeclStatement	OnigOptionType prev = env -> option ;	5062:6:113354:113387	1232810	1	True				
ANR	1232926	IdentifierDecl	prev = env -> option		1232810	0					
ANR	1232927	IdentifierDeclType	OnigOptionType		1232810	0					
ANR	1232928	Identifier	prev		1232810	1					
ANR	1232929	AssignmentExpression	prev = env -> option		1232810	2		=			
ANR	1232930	Identifier	prev		1232810	0					
ANR	1232931	PtrMemberAccess	env -> option		1232810	1					
ANR	1232932	Identifier	env		1232810	0					
ANR	1232933	Identifier	option		1232810	1					
ANR	1232934	ExpressionStatement	env -> option = NENCLOSE ( * np ) -> option	5064:6:113396:113431	1232810	2	True				
ANR	1232935	AssignmentExpression	env -> option = NENCLOSE ( * np ) -> option		1232810	0		=			
ANR	1232936	PtrMemberAccess	env -> option		1232810	0					
ANR	1232937	Identifier	env		1232810	0					
ANR	1232938	Identifier	option		1232810	1					
ANR	1232939	PtrMemberAccess	NENCLOSE ( * np ) -> option		1232810	1					
ANR	1232940	CallExpression	NENCLOSE ( * np )		1232810	0					
ANR	1232941	Callee	NENCLOSE		1232810	0					
ANR	1232942	Identifier	NENCLOSE		1232810	0					
ANR	1232943	ArgumentList	* np		1232810	1					
ANR	1232944	Argument	* np		1232810	0					
ANR	1232945	UnaryOperationExpression	* np		1232810	0					
ANR	1232946	UnaryOperator	*		1232810	0					
ANR	1232947	Identifier	np		1232810	1					
ANR	1232948	Identifier	option		1232810	1					
ANR	1232949	ExpressionStatement	"r = fetch_token ( tok , src , end , env )"	5065:6:113439:113474	1232810	3	True				
ANR	1232950	AssignmentExpression	"r = fetch_token ( tok , src , end , env )"		1232810	0		=			
ANR	1232951	Identifier	r		1232810	0					
ANR	1232952	CallExpression	"fetch_token ( tok , src , end , env )"		1232810	1					
ANR	1232953	Callee	fetch_token		1232810	0					
ANR	1232954	Identifier	fetch_token		1232810	0					
ANR	1232955	ArgumentList	tok		1232810	1					
ANR	1232956	Argument	tok		1232810	0					
ANR	1232957	Identifier	tok		1232810	0					
ANR	1232958	Argument	src		1232810	1					
ANR	1232959	Identifier	src		1232810	0					
ANR	1232960	Argument	end		1232810	2					
ANR	1232961	Identifier	end		1232810	0					
ANR	1232962	Argument	env		1232810	3					
ANR	1232963	Identifier	env		1232810	0					
ANR	1232964	IfStatement	if ( r < 0 )		1232810	4					
ANR	1232965	Condition	r < 0	5066:10:113486:113490	1232810	0	True				
ANR	1232966	RelationalExpression	r < 0		1232810	0		<			
ANR	1232967	Identifier	r		1232810	0					
ANR	1232968	PrimaryExpression	0		1232810	1					
ANR	1232969	ReturnStatement	return r ;	5066:17:113493:113501	1232810	1	True				
ANR	1232970	Identifier	r		1232810	0					
ANR	1232971	ExpressionStatement	"r = parse_subexp ( & target , tok , term , src , end , env )"	5067:6:113509:113560	1232810	5	True				
ANR	1232972	AssignmentExpression	"r = parse_subexp ( & target , tok , term , src , end , env )"		1232810	0		=			
ANR	1232973	Identifier	r		1232810	0					
ANR	1232974	CallExpression	"parse_subexp ( & target , tok , term , src , end , env )"		1232810	1					
ANR	1232975	Callee	parse_subexp		1232810	0					
ANR	1232976	Identifier	parse_subexp		1232810	0					
ANR	1232977	ArgumentList	& target		1232810	1					
ANR	1232978	Argument	& target		1232810	0					
ANR	1232979	UnaryOperationExpression	& target		1232810	0					
ANR	1232980	UnaryOperator	&		1232810	0					
ANR	1232981	Identifier	target		1232810	1					
ANR	1232982	Argument	tok		1232810	1					
ANR	1232983	Identifier	tok		1232810	0					
ANR	1232984	Argument	term		1232810	2					
ANR	1232985	Identifier	term		1232810	0					
ANR	1232986	Argument	src		1232810	3					
ANR	1232987	Identifier	src		1232810	0					
ANR	1232988	Argument	end		1232810	4					
ANR	1232989	Identifier	end		1232810	0					
ANR	1232990	Argument	env		1232810	5					
ANR	1232991	Identifier	env		1232810	0					
ANR	1232992	ExpressionStatement	env -> option = prev	5068:6:113568:113586	1232810	6	True				
ANR	1232993	AssignmentExpression	env -> option = prev		1232810	0		=			
ANR	1232994	PtrMemberAccess	env -> option		1232810	0					
ANR	1232995	Identifier	env		1232810	0					
ANR	1232996	Identifier	option		1232810	1					
ANR	1232997	Identifier	prev		1232810	1					
ANR	1232998	IfStatement	if ( r < 0 )		1232810	7					
ANR	1232999	Condition	r < 0	5069:10:113598:113602	1232810	0	True				
ANR	1233000	RelationalExpression	r < 0		1232810	0		<			
ANR	1233001	Identifier	r		1232810	0					
ANR	1233002	PrimaryExpression	0		1232810	1					
ANR	1233003	ReturnStatement	return r ;	5069:17:113605:113613	1232810	1	True				
ANR	1233004	Identifier	r		1232810	0					
ANR	1233005	ExpressionStatement	NENCLOSE ( * np ) -> target = target	5070:6:113621:113651	1232810	8	True				
ANR	1233006	AssignmentExpression	NENCLOSE ( * np ) -> target = target		1232810	0		=			
ANR	1233007	PtrMemberAccess	NENCLOSE ( * np ) -> target		1232810	0					
ANR	1233008	CallExpression	NENCLOSE ( * np )		1232810	0					
ANR	1233009	Callee	NENCLOSE		1232810	0					
ANR	1233010	Identifier	NENCLOSE		1232810	0					
ANR	1233011	ArgumentList	* np		1232810	1					
ANR	1233012	Argument	* np		1232810	0					
ANR	1233013	UnaryOperationExpression	* np		1232810	0					
ANR	1233014	UnaryOperator	*		1232810	0					
ANR	1233015	Identifier	np		1232810	1					
ANR	1233016	Identifier	target		1232810	1					
ANR	1233017	Identifier	target		1232810	1					
ANR	1233018	ReturnStatement	return tok -> type ;	5071:6:113660:113676	1232810	9	True				
ANR	1233019	PtrMemberAccess	tok -> type		1232810	0					
ANR	1233020	Identifier	tok		1232810	0					
ANR	1233021	Identifier	type		1232810	1					
ANR	1233022	BreakStatement	break ;	5073:4:113688:113693	1232810	10	True				
ANR	1233023	Label	case TK_SUBEXP_CLOSE :	5075:2:113698:113718	1232810	11	True				
ANR	1233024	Identifier	TK_SUBEXP_CLOSE		1232810	0					
ANR	1233025	IfStatement	"if ( ! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP ) )"		1232810	12					
ANR	1233026	Condition	"! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP )"	5076:8:113728:113793	1232810	0	True				
ANR	1233027	UnaryOperationExpression	"! IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP )"		1232810	0					
ANR	1233028	UnaryOperator	!		1232810	0					
ANR	1233029	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP )"		1232810	1					
ANR	1233030	Callee	IS_SYNTAX_BV		1232810	0					
ANR	1233031	Identifier	IS_SYNTAX_BV		1232810	0					
ANR	1233032	ArgumentList	env -> syntax		1232810	1					
ANR	1233033	Argument	env -> syntax		1232810	0					
ANR	1233034	PtrMemberAccess	env -> syntax		1232810	0					
ANR	1233035	Identifier	env		1232810	0					
ANR	1233036	Identifier	syntax		1232810	1					
ANR	1233037	Argument	ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP		1232810	1					
ANR	1233038	Identifier	ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP		1232810	0					
ANR	1233039	ReturnStatement	return ONIGERR_UNMATCHED_CLOSE_PARENTHESIS ;	5077:6:113802:113844	1232810	1	True				
ANR	1233040	Identifier	ONIGERR_UNMATCHED_CLOSE_PARENTHESIS		1232810	0					
ANR	1233041	IfStatement	if ( tok -> escaped )		1232810	13					
ANR	1233042	Condition	tok -> escaped	5079:8:113855:113866	1232810	0	True				
ANR	1233043	PtrMemberAccess	tok -> escaped		1232810	0					
ANR	1233044	Identifier	tok		1232810	0					
ANR	1233045	Identifier	escaped		1232810	1					
ANR	1233046	GotoStatement	goto tk_raw_byte ;	5079:22:113869:113885	1232810	1	True				
ANR	1233047	Identifier	tk_raw_byte		1232810	0					
ANR	1233048	ElseStatement	else		1232810	0					
ANR	1233049	GotoStatement	goto tk_byte ;	5080:9:113896:113908	1232810	0	True				
ANR	1233050	Identifier	tk_byte		1232810	0					
ANR	1233051	BreakStatement	break ;	5081:4:113914:113919	1232810	14	True				
ANR	1233052	Label	case TK_STRING :	5083:2:113924:113938	1232810	15	True				
ANR	1233053	Identifier	TK_STRING		1232810	0					
ANR	1233054	Label	tk_byte :	5084:2:113942:113949	1232810	16	True				
ANR	1233055	Identifier	tk_byte		1232810	0					
ANR	1233056	CompoundStatement		47:4:1069:1069	1232810	17					
ANR	1233057	ExpressionStatement	"* np = node_new_str ( tok -> backp , * src )"	5086:6:113963:113999	1232810	0	True				
ANR	1233058	AssignmentExpression	"* np = node_new_str ( tok -> backp , * src )"		1232810	0		=			
ANR	1233059	UnaryOperationExpression	* np		1232810	0					
ANR	1233060	UnaryOperator	*		1232810	0					
ANR	1233061	Identifier	np		1232810	1					
ANR	1233062	CallExpression	"node_new_str ( tok -> backp , * src )"		1232810	1					
ANR	1233063	Callee	node_new_str		1232810	0					
ANR	1233064	Identifier	node_new_str		1232810	0					
ANR	1233065	ArgumentList	tok -> backp		1232810	1					
ANR	1233066	Argument	tok -> backp		1232810	0					
ANR	1233067	PtrMemberAccess	tok -> backp		1232810	0					
ANR	1233068	Identifier	tok		1232810	0					
ANR	1233069	Identifier	backp		1232810	1					
ANR	1233070	Argument	* src		1232810	1					
ANR	1233071	UnaryOperationExpression	* src		1232810	0					
ANR	1233072	UnaryOperator	*		1232810	0					
ANR	1233073	Identifier	src		1232810	1					
ANR	1233074	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5087:6:114007:114036	1232810	1	True				
ANR	1233075	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		1232810	0					
ANR	1233076	Callee	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1233077	Identifier	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1233078	ArgumentList	* np		1232810	1					
ANR	1233079	Argument	* np		1232810	0					
ANR	1233080	UnaryOperationExpression	* np		1232810	0					
ANR	1233081	UnaryOperator	*		1232810	0					
ANR	1233082	Identifier	np		1232810	1					
ANR	1233083	WhileStatement	while ( 1 )		1232810	2					
ANR	1233084	Condition	1	5089:13:114052:114052	1232810	0	True				
ANR	1233085	PrimaryExpression	1		1232810	0					
ANR	1233086	CompoundStatement		51:16:1169:1169	1232810	1					
ANR	1233087	ExpressionStatement	"r = fetch_token ( tok , src , end , env )"	5090:1:114058:114093	1232810	0	True				
ANR	1233088	AssignmentExpression	"r = fetch_token ( tok , src , end , env )"		1232810	0		=			
ANR	1233089	Identifier	r		1232810	0					
ANR	1233090	CallExpression	"fetch_token ( tok , src , end , env )"		1232810	1					
ANR	1233091	Callee	fetch_token		1232810	0					
ANR	1233092	Identifier	fetch_token		1232810	0					
ANR	1233093	ArgumentList	tok		1232810	1					
ANR	1233094	Argument	tok		1232810	0					
ANR	1233095	Identifier	tok		1232810	0					
ANR	1233096	Argument	src		1232810	1					
ANR	1233097	Identifier	src		1232810	0					
ANR	1233098	Argument	end		1232810	2					
ANR	1233099	Identifier	end		1232810	0					
ANR	1233100	Argument	env		1232810	3					
ANR	1233101	Identifier	env		1232810	0					
ANR	1233102	IfStatement	if ( r < 0 )		1232810	1					
ANR	1233103	Condition	r < 0	5091:5:114100:114104	1232810	0	True				
ANR	1233104	RelationalExpression	r < 0		1232810	0		<			
ANR	1233105	Identifier	r		1232810	0					
ANR	1233106	PrimaryExpression	0		1232810	1					
ANR	1233107	ReturnStatement	return r ;	5091:12:114107:114115	1232810	1	True				
ANR	1233108	Identifier	r		1232810	0					
ANR	1233109	IfStatement	if ( r != TK_STRING )		1232810	2					
ANR	1233110	Condition	r != TK_STRING	5092:5:114122:114135	1232810	0	True				
ANR	1233111	EqualityExpression	r != TK_STRING		1232810	0		!=			
ANR	1233112	Identifier	r		1232810	0					
ANR	1233113	Identifier	TK_STRING		1232810	1					
ANR	1233114	BreakStatement	break ;	5092:21:114138:114143	1232810	1	True				
ANR	1233115	ExpressionStatement	"r = onig_node_str_cat ( * np , tok -> backp , * src )"	5094:1:114147:114191	1232810	3	True				
ANR	1233116	AssignmentExpression	"r = onig_node_str_cat ( * np , tok -> backp , * src )"		1232810	0		=			
ANR	1233117	Identifier	r		1232810	0					
ANR	1233118	CallExpression	"onig_node_str_cat ( * np , tok -> backp , * src )"		1232810	1					
ANR	1233119	Callee	onig_node_str_cat		1232810	0					
ANR	1233120	Identifier	onig_node_str_cat		1232810	0					
ANR	1233121	ArgumentList	* np		1232810	1					
ANR	1233122	Argument	* np		1232810	0					
ANR	1233123	UnaryOperationExpression	* np		1232810	0					
ANR	1233124	UnaryOperator	*		1232810	0					
ANR	1233125	Identifier	np		1232810	1					
ANR	1233126	Argument	tok -> backp		1232810	1					
ANR	1233127	PtrMemberAccess	tok -> backp		1232810	0					
ANR	1233128	Identifier	tok		1232810	0					
ANR	1233129	Identifier	backp		1232810	1					
ANR	1233130	Argument	* src		1232810	2					
ANR	1233131	UnaryOperationExpression	* src		1232810	0					
ANR	1233132	UnaryOperator	*		1232810	0					
ANR	1233133	Identifier	src		1232810	1					
ANR	1233134	IfStatement	if ( r < 0 )		1232810	4					
ANR	1233135	Condition	r < 0	5095:5:114198:114202	1232810	0	True				
ANR	1233136	RelationalExpression	r < 0		1232810	0		<			
ANR	1233137	Identifier	r		1232810	0					
ANR	1233138	PrimaryExpression	0		1232810	1					
ANR	1233139	ReturnStatement	return r ;	5095:12:114205:114213	1232810	1	True				
ANR	1233140	Identifier	r		1232810	0					
ANR	1233141	Label	string_end :	5098:4:114228:114238	1232810	3	True				
ANR	1233142	Identifier	string_end		1232810	0					
ANR	1233143	ExpressionStatement	targetp = np	5099:6:114246:114258	1232810	4	True				
ANR	1233144	AssignmentExpression	targetp = np		1232810	0		=			
ANR	1233145	Identifier	targetp		1232810	0					
ANR	1233146	Identifier	np		1232810	1					
ANR	1233147	GotoStatement	goto repeat ;	5100:6:114266:114277	1232810	5	True				
ANR	1233148	Identifier	repeat		1232810	0					
ANR	1233149	BreakStatement	break ;	5102:4:114289:114294	1232810	18	True				
ANR	1233150	Label	case TK_RAW_BYTE :	5104:2:114299:114315	1232810	19	True				
ANR	1233151	Identifier	TK_RAW_BYTE		1232810	0					
ANR	1233152	Label	tk_raw_byte :	5105:2:114319:114330	1232810	20	True				
ANR	1233153	Identifier	tk_raw_byte		1232810	0					
ANR	1233154	CompoundStatement		68:4:1450:1450	1232810	21					
ANR	1233155	ExpressionStatement	* np = node_new_str_raw_char ( ( UChar ) tok -> u . c )	5107:6:114344:114389	1232810	0	True				
ANR	1233156	AssignmentExpression	* np = node_new_str_raw_char ( ( UChar ) tok -> u . c )		1232810	0		=			
ANR	1233157	UnaryOperationExpression	* np		1232810	0					
ANR	1233158	UnaryOperator	*		1232810	0					
ANR	1233159	Identifier	np		1232810	1					
ANR	1233160	CallExpression	node_new_str_raw_char ( ( UChar ) tok -> u . c )		1232810	1					
ANR	1233161	Callee	node_new_str_raw_char		1232810	0					
ANR	1233162	Identifier	node_new_str_raw_char		1232810	0					
ANR	1233163	ArgumentList	( UChar ) tok -> u . c		1232810	1					
ANR	1233164	Argument	( UChar ) tok -> u . c		1232810	0					
ANR	1233165	CastExpression	( UChar ) tok -> u . c		1232810	0					
ANR	1233166	CastTarget	UChar		1232810	0					
ANR	1233167	MemberAccess	tok -> u . c		1232810	1					
ANR	1233168	PtrMemberAccess	tok -> u		1232810	0					
ANR	1233169	Identifier	tok		1232810	0					
ANR	1233170	Identifier	u		1232810	1					
ANR	1233171	Identifier	c		1232810	1					
ANR	1233172	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5108:6:114397:114426	1232810	1	True				
ANR	1233173	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		1232810	0					
ANR	1233174	Callee	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1233175	Identifier	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1233176	ArgumentList	* np		1232810	1					
ANR	1233177	Argument	* np		1232810	0					
ANR	1233178	UnaryOperationExpression	* np		1232810	0					
ANR	1233179	UnaryOperator	*		1232810	0					
ANR	1233180	Identifier	np		1232810	1					
ANR	1233181	ExpressionStatement	len = 1	5109:6:114434:114441	1232810	2	True				
ANR	1233182	AssignmentExpression	len = 1		1232810	0		=			
ANR	1233183	Identifier	len		1232810	0					
ANR	1233184	PrimaryExpression	1		1232810	1					
ANR	1233185	WhileStatement	while ( 1 )		1232810	3					
ANR	1233186	Condition	1	5110:13:114456:114456	1232810	0	True				
ANR	1233187	PrimaryExpression	1		1232810	0					
ANR	1233188	CompoundStatement		72:16:1573:1573	1232810	1					
ANR	1233189	IfStatement	if ( len >= ONIGENC_MBC_MINLEN ( env -> enc ) )		1232810	0					
ANR	1233190	Condition	len >= ONIGENC_MBC_MINLEN ( env -> enc )	5111:5:114466:114500	1232810	0	True				
ANR	1233191	RelationalExpression	len >= ONIGENC_MBC_MINLEN ( env -> enc )		1232810	0		>=			
ANR	1233192	Identifier	len		1232810	0					
ANR	1233193	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		1232810	1					
ANR	1233194	Callee	ONIGENC_MBC_MINLEN		1232810	0					
ANR	1233195	Identifier	ONIGENC_MBC_MINLEN		1232810	0					
ANR	1233196	ArgumentList	env -> enc		1232810	1					
ANR	1233197	Argument	env -> enc		1232810	0					
ANR	1233198	PtrMemberAccess	env -> enc		1232810	0					
ANR	1233199	Identifier	env		1232810	0					
ANR	1233200	Identifier	enc		1232810	1					
ANR	1233201	CompoundStatement		73:42:1617:1617	1232810	1					
ANR	1233202	IfStatement	"if ( len == enclen ( env -> enc , NSTR ( * np ) -> s ) )"		1232810	0					
ANR	1233203	Condition	"len == enclen ( env -> enc , NSTR ( * np ) -> s )"	5112:7:114512:114548	1232810	0	True				
ANR	1233204	EqualityExpression	"len == enclen ( env -> enc , NSTR ( * np ) -> s )"		1232810	0		==			
ANR	1233205	Identifier	len		1232810	0					
ANR	1233206	CallExpression	"enclen ( env -> enc , NSTR ( * np ) -> s )"		1232810	1					
ANR	1233207	Callee	enclen		1232810	0					
ANR	1233208	Identifier	enclen		1232810	0					
ANR	1233209	ArgumentList	env -> enc		1232810	1					
ANR	1233210	Argument	env -> enc		1232810	0					
ANR	1233211	PtrMemberAccess	env -> enc		1232810	0					
ANR	1233212	Identifier	env		1232810	0					
ANR	1233213	Identifier	enc		1232810	1					
ANR	1233214	Argument	NSTR ( * np ) -> s		1232810	1					
ANR	1233215	PtrMemberAccess	NSTR ( * np ) -> s		1232810	0					
ANR	1233216	CallExpression	NSTR ( * np )		1232810	0					
ANR	1233217	Callee	NSTR		1232810	0					
ANR	1233218	Identifier	NSTR		1232810	0					
ANR	1233219	ArgumentList	* np		1232810	1					
ANR	1233220	Argument	* np		1232810	0					
ANR	1233221	UnaryOperationExpression	* np		1232810	0					
ANR	1233222	UnaryOperator	*		1232810	0					
ANR	1233223	Identifier	np		1232810	1					
ANR	1233224	Identifier	s		1232810	1					
ANR	1233225	CompoundStatement		74:46:1665:1665	1232810	1					
ANR	1233226	ExpressionStatement	"r = fetch_token ( tok , src , end , env )"	5113:5:114558:114593	1232810	0	True				
ANR	1233227	AssignmentExpression	"r = fetch_token ( tok , src , end , env )"		1232810	0		=			
ANR	1233228	Identifier	r		1232810	0					
ANR	1233229	CallExpression	"fetch_token ( tok , src , end , env )"		1232810	1					
ANR	1233230	Callee	fetch_token		1232810	0					
ANR	1233231	Identifier	fetch_token		1232810	0					
ANR	1233232	ArgumentList	tok		1232810	1					
ANR	1233233	Argument	tok		1232810	0					
ANR	1233234	Identifier	tok		1232810	0					
ANR	1233235	Argument	src		1232810	1					
ANR	1233236	Identifier	src		1232810	0					
ANR	1233237	Argument	end		1232810	2					
ANR	1233238	Identifier	end		1232810	0					
ANR	1233239	Argument	env		1232810	3					
ANR	1233240	Identifier	env		1232810	0					
ANR	1233241	ExpressionStatement	NSTRING_CLEAR_RAW ( * np )	5114:5:114600:114622	1232810	1	True				
ANR	1233242	CallExpression	NSTRING_CLEAR_RAW ( * np )		1232810	0					
ANR	1233243	Callee	NSTRING_CLEAR_RAW		1232810	0					
ANR	1233244	Identifier	NSTRING_CLEAR_RAW		1232810	0					
ANR	1233245	ArgumentList	* np		1232810	1					
ANR	1233246	Argument	* np		1232810	0					
ANR	1233247	UnaryOperationExpression	* np		1232810	0					
ANR	1233248	UnaryOperator	*		1232810	0					
ANR	1233249	Identifier	np		1232810	1					
ANR	1233250	GotoStatement	goto string_end ;	5115:5:114629:114644	1232810	2	True				
ANR	1233251	Identifier	string_end		1232810	0					
ANR	1233252	ExpressionStatement	"r = fetch_token ( tok , src , end , env )"	5119:1:114656:114691	1232810	1	True				
ANR	1233253	AssignmentExpression	"r = fetch_token ( tok , src , end , env )"		1232810	0		=			
ANR	1233254	Identifier	r		1232810	0					
ANR	1233255	CallExpression	"fetch_token ( tok , src , end , env )"		1232810	1					
ANR	1233256	Callee	fetch_token		1232810	0					
ANR	1233257	Identifier	fetch_token		1232810	0					
ANR	1233258	ArgumentList	tok		1232810	1					
ANR	1233259	Argument	tok		1232810	0					
ANR	1233260	Identifier	tok		1232810	0					
ANR	1233261	Argument	src		1232810	1					
ANR	1233262	Identifier	src		1232810	0					
ANR	1233263	Argument	end		1232810	2					
ANR	1233264	Identifier	end		1232810	0					
ANR	1233265	Argument	env		1232810	3					
ANR	1233266	Identifier	env		1232810	0					
ANR	1233267	IfStatement	if ( r < 0 )		1232810	2					
ANR	1233268	Condition	r < 0	5120:5:114698:114702	1232810	0	True				
ANR	1233269	RelationalExpression	r < 0		1232810	0		<			
ANR	1233270	Identifier	r		1232810	0					
ANR	1233271	PrimaryExpression	0		1232810	1					
ANR	1233272	ReturnStatement	return r ;	5120:12:114705:114713	1232810	1	True				
ANR	1233273	Identifier	r		1232810	0					
ANR	1233274	IfStatement	if ( r != TK_RAW_BYTE )		1232810	3					
ANR	1233275	Condition	r != TK_RAW_BYTE	5121:5:114720:114735	1232810	0	True				
ANR	1233276	EqualityExpression	r != TK_RAW_BYTE		1232810	0		!=			
ANR	1233277	Identifier	r		1232810	0					
ANR	1233278	Identifier	TK_RAW_BYTE		1232810	1					
ANR	1233279	CompoundStatement		86:3:1957:1964	1232810	1					
ANR	1233280	IdentifierDeclStatement	int rem ;	5124:3:114843:114850	1232810	0	True				
ANR	1233281	IdentifierDecl	rem		1232810	0					
ANR	1233282	IdentifierDeclType	int		1232810	0					
ANR	1233283	Identifier	rem		1232810	1					
ANR	1233284	IfStatement	if ( len < ONIGENC_MBC_MINLEN ( env -> enc ) )		1232810	1					
ANR	1233285	Condition	len < ONIGENC_MBC_MINLEN ( env -> enc )	5125:7:114859:114892	1232810	0	True				
ANR	1233286	RelationalExpression	len < ONIGENC_MBC_MINLEN ( env -> enc )		1232810	0		<			
ANR	1233287	Identifier	len		1232810	0					
ANR	1233288	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		1232810	1					
ANR	1233289	Callee	ONIGENC_MBC_MINLEN		1232810	0					
ANR	1233290	Identifier	ONIGENC_MBC_MINLEN		1232810	0					
ANR	1233291	ArgumentList	env -> enc		1232810	1					
ANR	1233292	Argument	env -> enc		1232810	0					
ANR	1233293	PtrMemberAccess	env -> enc		1232810	0					
ANR	1233294	Identifier	env		1232810	0					
ANR	1233295	Identifier	enc		1232810	1					
ANR	1233296	CompoundStatement		87:43:2009:2009	1232810	1					
ANR	1233297	ExpressionStatement	rem = ONIGENC_MBC_MINLEN ( env -> enc ) - len	5126:5:114902:114942	1232810	0	True				
ANR	1233298	AssignmentExpression	rem = ONIGENC_MBC_MINLEN ( env -> enc ) - len		1232810	0		=			
ANR	1233299	Identifier	rem		1232810	0					
ANR	1233300	AdditiveExpression	ONIGENC_MBC_MINLEN ( env -> enc ) - len		1232810	1		-			
ANR	1233301	CallExpression	ONIGENC_MBC_MINLEN ( env -> enc )		1232810	0					
ANR	1233302	Callee	ONIGENC_MBC_MINLEN		1232810	0					
ANR	1233303	Identifier	ONIGENC_MBC_MINLEN		1232810	0					
ANR	1233304	ArgumentList	env -> enc		1232810	1					
ANR	1233305	Argument	env -> enc		1232810	0					
ANR	1233306	PtrMemberAccess	env -> enc		1232810	0					
ANR	1233307	Identifier	env		1232810	0					
ANR	1233308	Identifier	enc		1232810	1					
ANR	1233309	Identifier	len		1232810	1					
ANR	1233310	ExpressionStatement	"( void ) node_str_head_pad ( NSTR ( * np ) , rem , ( UChar ) 0 )"	5127:5:114949:115000	1232810	1	True				
ANR	1233311	CastExpression	"( void ) node_str_head_pad ( NSTR ( * np ) , rem , ( UChar ) 0 )"		1232810	0					
ANR	1233312	CastTarget	void		1232810	0					
ANR	1233313	CallExpression	"node_str_head_pad ( NSTR ( * np ) , rem , ( UChar ) 0 )"		1232810	1					
ANR	1233314	Callee	node_str_head_pad		1232810	0					
ANR	1233315	Identifier	node_str_head_pad		1232810	0					
ANR	1233316	ArgumentList	NSTR ( * np )		1232810	1					
ANR	1233317	Argument	NSTR ( * np )		1232810	0					
ANR	1233318	CallExpression	NSTR ( * np )		1232810	0					
ANR	1233319	Callee	NSTR		1232810	0					
ANR	1233320	Identifier	NSTR		1232810	0					
ANR	1233321	ArgumentList	* np		1232810	1					
ANR	1233322	Argument	* np		1232810	0					
ANR	1233323	UnaryOperationExpression	* np		1232810	0					
ANR	1233324	UnaryOperator	*		1232810	0					
ANR	1233325	Identifier	np		1232810	1					
ANR	1233326	Argument	rem		1232810	1					
ANR	1233327	Identifier	rem		1232810	0					
ANR	1233328	Argument	( UChar ) 0		1232810	2					
ANR	1233329	CastExpression	( UChar ) 0		1232810	0					
ANR	1233330	CastTarget	UChar		1232810	0					
ANR	1233331	PrimaryExpression	0		1232810	1					
ANR	1233332	IfStatement	"if ( len + rem == enclen ( env -> enc , NSTR ( * np ) -> s ) )"		1232810	2					
ANR	1233333	Condition	"len + rem == enclen ( env -> enc , NSTR ( * np ) -> s )"	5128:9:115011:115053	1232810	0	True				
ANR	1233334	EqualityExpression	"len + rem == enclen ( env -> enc , NSTR ( * np ) -> s )"		1232810	0		==			
ANR	1233335	AdditiveExpression	len + rem		1232810	0		+			
ANR	1233336	Identifier	len		1232810	0					
ANR	1233337	Identifier	rem		1232810	1					
ANR	1233338	CallExpression	"enclen ( env -> enc , NSTR ( * np ) -> s )"		1232810	1					
ANR	1233339	Callee	enclen		1232810	0					
ANR	1233340	Identifier	enclen		1232810	0					
ANR	1233341	ArgumentList	env -> enc		1232810	1					
ANR	1233342	Argument	env -> enc		1232810	0					
ANR	1233343	PtrMemberAccess	env -> enc		1232810	0					
ANR	1233344	Identifier	env		1232810	0					
ANR	1233345	Identifier	enc		1232810	1					
ANR	1233346	Argument	NSTR ( * np ) -> s		1232810	1					
ANR	1233347	PtrMemberAccess	NSTR ( * np ) -> s		1232810	0					
ANR	1233348	CallExpression	NSTR ( * np )		1232810	0					
ANR	1233349	Callee	NSTR		1232810	0					
ANR	1233350	Identifier	NSTR		1232810	0					
ANR	1233351	ArgumentList	* np		1232810	1					
ANR	1233352	Argument	* np		1232810	0					
ANR	1233353	UnaryOperationExpression	* np		1232810	0					
ANR	1233354	UnaryOperator	*		1232810	0					
ANR	1233355	Identifier	np		1232810	1					
ANR	1233356	Identifier	s		1232810	1					
ANR	1233357	CompoundStatement		90:54:2170:2170	1232810	1					
ANR	1233358	ExpressionStatement	NSTRING_CLEAR_RAW ( * np )	5129:7:115065:115087	1232810	0	True				
ANR	1233359	CallExpression	NSTRING_CLEAR_RAW ( * np )		1232810	0					
ANR	1233360	Callee	NSTRING_CLEAR_RAW		1232810	0					
ANR	1233361	Identifier	NSTRING_CLEAR_RAW		1232810	0					
ANR	1233362	ArgumentList	* np		1232810	1					
ANR	1233363	Argument	* np		1232810	0					
ANR	1233364	UnaryOperationExpression	* np		1232810	0					
ANR	1233365	UnaryOperator	*		1232810	0					
ANR	1233366	Identifier	np		1232810	1					
ANR	1233367	GotoStatement	goto string_end ;	5130:7:115096:115111	1232810	1	True				
ANR	1233368	Identifier	string_end		1232810	0					
ANR	1233369	ReturnStatement	return ONIGERR_TOO_SHORT_MULTI_BYTE_STRING ;	5134:3:115135:115177	1232810	2	True				
ANR	1233370	Identifier	ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		1232810	0					
ANR	1233371	ExpressionStatement	"r = node_str_cat_char ( * np , ( UChar ) tok -> u . c )"	5137:1:115184:115228	1232810	4	True				
ANR	1233372	AssignmentExpression	"r = node_str_cat_char ( * np , ( UChar ) tok -> u . c )"		1232810	0		=			
ANR	1233373	Identifier	r		1232810	0					
ANR	1233374	CallExpression	"node_str_cat_char ( * np , ( UChar ) tok -> u . c )"		1232810	1					
ANR	1233375	Callee	node_str_cat_char		1232810	0					
ANR	1233376	Identifier	node_str_cat_char		1232810	0					
ANR	1233377	ArgumentList	* np		1232810	1					
ANR	1233378	Argument	* np		1232810	0					
ANR	1233379	UnaryOperationExpression	* np		1232810	0					
ANR	1233380	UnaryOperator	*		1232810	0					
ANR	1233381	Identifier	np		1232810	1					
ANR	1233382	Argument	( UChar ) tok -> u . c		1232810	1					
ANR	1233383	CastExpression	( UChar ) tok -> u . c		1232810	0					
ANR	1233384	CastTarget	UChar		1232810	0					
ANR	1233385	MemberAccess	tok -> u . c		1232810	1					
ANR	1233386	PtrMemberAccess	tok -> u		1232810	0					
ANR	1233387	Identifier	tok		1232810	0					
ANR	1233388	Identifier	u		1232810	1					
ANR	1233389	Identifier	c		1232810	1					
ANR	1233390	IfStatement	if ( r < 0 )		1232810	5					
ANR	1233391	Condition	r < 0	5138:5:115235:115239	1232810	0	True				
ANR	1233392	RelationalExpression	r < 0		1232810	0		<			
ANR	1233393	Identifier	r		1232810	0					
ANR	1233394	PrimaryExpression	0		1232810	1					
ANR	1233395	ReturnStatement	return r ;	5138:12:115242:115250	1232810	1	True				
ANR	1233396	Identifier	r		1232810	0					
ANR	1233397	ExpressionStatement	len ++	5140:1:115254:115259	1232810	6	True				
ANR	1233398	PostIncDecOperationExpression	len ++		1232810	0					
ANR	1233399	Identifier	len		1232810	0					
ANR	1233400	IncDec	++		1232810	1					
ANR	1233401	BreakStatement	break ;	5143:4:115279:115284	1232810	22	True				
ANR	1233402	Label	case TK_CODE_POINT :	5145:2:115289:115307	1232810	23	True				
ANR	1233403	Identifier	TK_CODE_POINT		1232810	0					
ANR	1233404	CompoundStatement		110:6:2480:2537	1232810	24					
ANR	1233405	IdentifierDeclStatement	UChar buf [ ONIGENC_CODE_TO_MBC_MAXLEN ] ;	5147:6:115321:115358	1232810	0	True				
ANR	1233406	IdentifierDecl	buf [ ONIGENC_CODE_TO_MBC_MAXLEN ]		1232810	0					
ANR	1233407	IdentifierDeclType	UChar [ ONIGENC_CODE_TO_MBC_MAXLEN ]		1232810	0					
ANR	1233408	Identifier	buf		1232810	1					
ANR	1233409	Identifier	ONIGENC_CODE_TO_MBC_MAXLEN		1232810	2					
ANR	1233410	IdentifierDeclStatement	"int num = ONIGENC_CODE_TO_MBC ( env -> enc , tok -> u . code , buf ) ;"	5148:6:115366:115423	1232810	1	True				
ANR	1233411	IdentifierDecl	"num = ONIGENC_CODE_TO_MBC ( env -> enc , tok -> u . code , buf )"		1232810	0					
ANR	1233412	IdentifierDeclType	int		1232810	0					
ANR	1233413	Identifier	num		1232810	1					
ANR	1233414	AssignmentExpression	"num = ONIGENC_CODE_TO_MBC ( env -> enc , tok -> u . code , buf )"		1232810	2		=			
ANR	1233415	Identifier	num		1232810	0					
ANR	1233416	CallExpression	"ONIGENC_CODE_TO_MBC ( env -> enc , tok -> u . code , buf )"		1232810	1					
ANR	1233417	Callee	ONIGENC_CODE_TO_MBC		1232810	0					
ANR	1233418	Identifier	ONIGENC_CODE_TO_MBC		1232810	0					
ANR	1233419	ArgumentList	env -> enc		1232810	1					
ANR	1233420	Argument	env -> enc		1232810	0					
ANR	1233421	PtrMemberAccess	env -> enc		1232810	0					
ANR	1233422	Identifier	env		1232810	0					
ANR	1233423	Identifier	enc		1232810	1					
ANR	1233424	Argument	tok -> u . code		1232810	1					
ANR	1233425	MemberAccess	tok -> u . code		1232810	0					
ANR	1233426	PtrMemberAccess	tok -> u		1232810	0					
ANR	1233427	Identifier	tok		1232810	0					
ANR	1233428	Identifier	u		1232810	1					
ANR	1233429	Identifier	code		1232810	1					
ANR	1233430	Argument	buf		1232810	2					
ANR	1233431	Identifier	buf		1232810	0					
ANR	1233432	IfStatement	if ( num < 0 )		1232810	2					
ANR	1233433	Condition	num < 0	5149:10:115435:115441	1232810	0	True				
ANR	1233434	RelationalExpression	num < 0		1232810	0		<			
ANR	1233435	Identifier	num		1232810	0					
ANR	1233436	PrimaryExpression	0		1232810	1					
ANR	1233437	ReturnStatement	return num ;	5149:19:115444:115454	1232810	1	True				
ANR	1233438	Identifier	num		1232810	0					
ANR	1233439	ExpressionStatement	"* np = node_new_str_raw ( buf , buf + num )"	5151:6:115501:115539	1232810	3	True				
ANR	1233440	AssignmentExpression	"* np = node_new_str_raw ( buf , buf + num )"		1232810	0		=			
ANR	1233441	UnaryOperationExpression	* np		1232810	0					
ANR	1233442	UnaryOperator	*		1232810	0					
ANR	1233443	Identifier	np		1232810	1					
ANR	1233444	CallExpression	"node_new_str_raw ( buf , buf + num )"		1232810	1					
ANR	1233445	Callee	node_new_str_raw		1232810	0					
ANR	1233446	Identifier	node_new_str_raw		1232810	0					
ANR	1233447	ArgumentList	buf		1232810	1					
ANR	1233448	Argument	buf		1232810	0					
ANR	1233449	Identifier	buf		1232810	0					
ANR	1233450	Argument	buf + num		1232810	1					
ANR	1233451	AdditiveExpression	buf + num		1232810	0		+			
ANR	1233452	Identifier	buf		1232810	0					
ANR	1233453	Identifier	num		1232810	1					
ANR	1233454	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5155:6:115602:115631	1232810	4	True				
ANR	1233455	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		1232810	0					
ANR	1233456	Callee	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1233457	Identifier	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1233458	ArgumentList	* np		1232810	1					
ANR	1233459	Argument	* np		1232810	0					
ANR	1233460	UnaryOperationExpression	* np		1232810	0					
ANR	1233461	UnaryOperator	*		1232810	0					
ANR	1233462	Identifier	np		1232810	1					
ANR	1233463	BreakStatement	break ;	5157:4:115643:115648	1232810	25	True				
ANR	1233464	Label	case TK_QUOTE_OPEN :	5159:2:115653:115671	1232810	26	True				
ANR	1233465	Identifier	TK_QUOTE_OPEN		1232810	0					
ANR	1233466	CompoundStatement		124:6:2830:2858	1232810	27					
ANR	1233467	IdentifierDeclStatement	OnigCodePoint end_op [ 2 ] ;	5161:6:115685:115708	1232810	0	True				
ANR	1233468	IdentifierDecl	end_op [ 2 ]		1232810	0					
ANR	1233469	IdentifierDeclType	OnigCodePoint [ 2 ]		1232810	0					
ANR	1233470	Identifier	end_op		1232810	1					
ANR	1233471	PrimaryExpression	2		1232810	2					
ANR	1233472	IdentifierDeclStatement	"UChar * qstart , * qend , * nextp ;"	5162:6:115716:115744	1232810	1	True				
ANR	1233473	IdentifierDecl	* qstart		1232810	0					
ANR	1233474	IdentifierDeclType	UChar *		1232810	0					
ANR	1233475	Identifier	qstart		1232810	1					
ANR	1233476	IdentifierDecl	* qend		1232810	1					
ANR	1233477	IdentifierDeclType	UChar *		1232810	0					
ANR	1233478	Identifier	qend		1232810	1					
ANR	1233479	IdentifierDecl	* nextp		1232810	2					
ANR	1233480	IdentifierDeclType	UChar *		1232810	0					
ANR	1233481	Identifier	nextp		1232810	1					
ANR	1233482	ExpressionStatement	end_op [ 0 ] = ( OnigCodePoint ) MC_ESC ( env -> syntax )	5164:6:115753:115800	1232810	2	True				
ANR	1233483	AssignmentExpression	end_op [ 0 ] = ( OnigCodePoint ) MC_ESC ( env -> syntax )		1232810	0		=			
ANR	1233484	ArrayIndexing	end_op [ 0 ]		1232810	0					
ANR	1233485	Identifier	end_op		1232810	0					
ANR	1233486	PrimaryExpression	0		1232810	1					
ANR	1233487	CastExpression	( OnigCodePoint ) MC_ESC ( env -> syntax )		1232810	1					
ANR	1233488	CastTarget	OnigCodePoint		1232810	0					
ANR	1233489	CallExpression	MC_ESC ( env -> syntax )		1232810	1					
ANR	1233490	Callee	MC_ESC		1232810	0					
ANR	1233491	Identifier	MC_ESC		1232810	0					
ANR	1233492	ArgumentList	env -> syntax		1232810	1					
ANR	1233493	Argument	env -> syntax		1232810	0					
ANR	1233494	PtrMemberAccess	env -> syntax		1232810	0					
ANR	1233495	Identifier	env		1232810	0					
ANR	1233496	Identifier	syntax		1232810	1					
ANR	1233497	ExpressionStatement	end_op [ 1 ] = ( OnigCodePoint ) 'E'	5165:6:115808:115839	1232810	3	True				
ANR	1233498	AssignmentExpression	end_op [ 1 ] = ( OnigCodePoint ) 'E'		1232810	0		=			
ANR	1233499	ArrayIndexing	end_op [ 1 ]		1232810	0					
ANR	1233500	Identifier	end_op		1232810	0					
ANR	1233501	PrimaryExpression	1		1232810	1					
ANR	1233502	CastExpression	( OnigCodePoint ) 'E'		1232810	1					
ANR	1233503	CastTarget	OnigCodePoint		1232810	0					
ANR	1233504	PrimaryExpression	'E'		1232810	1					
ANR	1233505	ExpressionStatement	qstart = * src	5166:6:115847:115860	1232810	4	True				
ANR	1233506	AssignmentExpression	qstart = * src		1232810	0		=			
ANR	1233507	Identifier	qstart		1232810	0					
ANR	1233508	UnaryOperationExpression	* src		1232810	1					
ANR	1233509	UnaryOperator	*		1232810	0					
ANR	1233510	Identifier	src		1232810	1					
ANR	1233511	ExpressionStatement	"qend = find_str_position ( end_op , 2 , qstart , end , & nextp , env -> enc )"	5167:6:115868:115934	1232810	5	True				
ANR	1233512	AssignmentExpression	"qend = find_str_position ( end_op , 2 , qstart , end , & nextp , env -> enc )"		1232810	0		=			
ANR	1233513	Identifier	qend		1232810	0					
ANR	1233514	CallExpression	"find_str_position ( end_op , 2 , qstart , end , & nextp , env -> enc )"		1232810	1					
ANR	1233515	Callee	find_str_position		1232810	0					
ANR	1233516	Identifier	find_str_position		1232810	0					
ANR	1233517	ArgumentList	end_op		1232810	1					
ANR	1233518	Argument	end_op		1232810	0					
ANR	1233519	Identifier	end_op		1232810	0					
ANR	1233520	Argument	2		1232810	1					
ANR	1233521	PrimaryExpression	2		1232810	0					
ANR	1233522	Argument	qstart		1232810	2					
ANR	1233523	Identifier	qstart		1232810	0					
ANR	1233524	Argument	end		1232810	3					
ANR	1233525	Identifier	end		1232810	0					
ANR	1233526	Argument	& nextp		1232810	4					
ANR	1233527	UnaryOperationExpression	& nextp		1232810	0					
ANR	1233528	UnaryOperator	&		1232810	0					
ANR	1233529	Identifier	nextp		1232810	1					
ANR	1233530	Argument	env -> enc		1232810	5					
ANR	1233531	PtrMemberAccess	env -> enc		1232810	0					
ANR	1233532	Identifier	env		1232810	0					
ANR	1233533	Identifier	enc		1232810	1					
ANR	1233534	IfStatement	if ( IS_NULL ( qend ) )		1232810	6					
ANR	1233535	Condition	IS_NULL ( qend )	5168:10:115946:115958	1232810	0	True				
ANR	1233536	CallExpression	IS_NULL ( qend )		1232810	0					
ANR	1233537	Callee	IS_NULL		1232810	0					
ANR	1233538	Identifier	IS_NULL		1232810	0					
ANR	1233539	ArgumentList	qend		1232810	1					
ANR	1233540	Argument	qend		1232810	0					
ANR	1233541	Identifier	qend		1232810	0					
ANR	1233542	CompoundStatement		130:25:3075:3075	1232810	1					
ANR	1233543	ExpressionStatement	nextp = qend = end	5169:1:115964:115982	1232810	0	True				
ANR	1233544	AssignmentExpression	nextp = qend = end		1232810	0		=			
ANR	1233545	Identifier	nextp		1232810	0					
ANR	1233546	AssignmentExpression	qend = end		1232810	1		=			
ANR	1233547	Identifier	qend		1232810	0					
ANR	1233548	Identifier	end		1232810	1					
ANR	1233549	ExpressionStatement	"* np = node_new_str ( qstart , qend )"	5171:6:115998:116030	1232810	7	True				
ANR	1233550	AssignmentExpression	"* np = node_new_str ( qstart , qend )"		1232810	0		=			
ANR	1233551	UnaryOperationExpression	* np		1232810	0					
ANR	1233552	UnaryOperator	*		1232810	0					
ANR	1233553	Identifier	np		1232810	1					
ANR	1233554	CallExpression	"node_new_str ( qstart , qend )"		1232810	1					
ANR	1233555	Callee	node_new_str		1232810	0					
ANR	1233556	Identifier	node_new_str		1232810	0					
ANR	1233557	ArgumentList	qstart		1232810	1					
ANR	1233558	Argument	qstart		1232810	0					
ANR	1233559	Identifier	qstart		1232810	0					
ANR	1233560	Argument	qend		1232810	1					
ANR	1233561	Identifier	qend		1232810	0					
ANR	1233562	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5172:6:116038:116067	1232810	8	True				
ANR	1233563	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		1232810	0					
ANR	1233564	Callee	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1233565	Identifier	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1233566	ArgumentList	* np		1232810	1					
ANR	1233567	Argument	* np		1232810	0					
ANR	1233568	UnaryOperationExpression	* np		1232810	0					
ANR	1233569	UnaryOperator	*		1232810	0					
ANR	1233570	Identifier	np		1232810	1					
ANR	1233571	ExpressionStatement	* src = nextp	5173:6:116075:116087	1232810	9	True				
ANR	1233572	AssignmentExpression	* src = nextp		1232810	0		=			
ANR	1233573	UnaryOperationExpression	* src		1232810	0					
ANR	1233574	UnaryOperator	*		1232810	0					
ANR	1233575	Identifier	src		1232810	1					
ANR	1233576	Identifier	nextp		1232810	1					
ANR	1233577	BreakStatement	break ;	5175:4:116099:116104	1232810	28	True				
ANR	1233578	Label	case TK_CHAR_TYPE :	5177:2:116109:116126	1232810	29	True				
ANR	1233579	Identifier	TK_CHAR_TYPE		1232810	0					
ANR	1233580	CompoundStatement		140:4:3246:3246	1232810	30					
ANR	1233581	SwitchStatement	switch ( tok -> u . prop . ctype )		1232810	0					
ANR	1233582	Condition	tok -> u . prop . ctype	5179:14:116148:116164	1232810	0	True				
ANR	1233583	MemberAccess	tok -> u . prop . ctype		1232810	0					
ANR	1233584	MemberAccess	tok -> u . prop		1232810	0					
ANR	1233585	PtrMemberAccess	tok -> u		1232810	0					
ANR	1233586	Identifier	tok		1232810	0					
ANR	1233587	Identifier	u		1232810	1					
ANR	1233588	Identifier	prop		1232810	1					
ANR	1233589	Identifier	ctype		1232810	1					
ANR	1233590	CompoundStatement		141:33:3281:3281	1232810	1					
ANR	1233591	Label	case ONIGENC_CTYPE_WORD :	5180:6:116175:116198	1232810	0	True				
ANR	1233592	Identifier	ONIGENC_CTYPE_WORD		1232810	0					
ANR	1233593	ExpressionStatement	"* np = node_new_ctype ( tok -> u . prop . ctype , tok -> u . prop . not )"	5181:1:116201:116257	1232810	1	True				
ANR	1233594	AssignmentExpression	"* np = node_new_ctype ( tok -> u . prop . ctype , tok -> u . prop . not )"		1232810	0		=			
ANR	1233595	UnaryOperationExpression	* np		1232810	0					
ANR	1233596	UnaryOperator	*		1232810	0					
ANR	1233597	Identifier	np		1232810	1					
ANR	1233598	CallExpression	"node_new_ctype ( tok -> u . prop . ctype , tok -> u . prop . not )"		1232810	1					
ANR	1233599	Callee	node_new_ctype		1232810	0					
ANR	1233600	Identifier	node_new_ctype		1232810	0					
ANR	1233601	ArgumentList	tok -> u . prop . ctype		1232810	1					
ANR	1233602	Argument	tok -> u . prop . ctype		1232810	0					
ANR	1233603	MemberAccess	tok -> u . prop . ctype		1232810	0					
ANR	1233604	MemberAccess	tok -> u . prop		1232810	0					
ANR	1233605	PtrMemberAccess	tok -> u		1232810	0					
ANR	1233606	Identifier	tok		1232810	0					
ANR	1233607	Identifier	u		1232810	1					
ANR	1233608	Identifier	prop		1232810	1					
ANR	1233609	Identifier	ctype		1232810	1					
ANR	1233610	Argument	tok -> u . prop . not		1232810	1					
ANR	1233611	MemberAccess	tok -> u . prop . not		1232810	0					
ANR	1233612	MemberAccess	tok -> u . prop		1232810	0					
ANR	1233613	PtrMemberAccess	tok -> u		1232810	0					
ANR	1233614	Identifier	tok		1232810	0					
ANR	1233615	Identifier	u		1232810	1					
ANR	1233616	Identifier	prop		1232810	1					
ANR	1233617	Identifier	not		1232810	1					
ANR	1233618	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5182:1:116260:116289	1232810	2	True				
ANR	1233619	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		1232810	0					
ANR	1233620	Callee	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1233621	Identifier	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1233622	ArgumentList	* np		1232810	1					
ANR	1233623	Argument	* np		1232810	0					
ANR	1233624	UnaryOperationExpression	* np		1232810	0					
ANR	1233625	UnaryOperator	*		1232810	0					
ANR	1233626	Identifier	np		1232810	1					
ANR	1233627	BreakStatement	break ;	5183:1:116292:116297	1232810	3	True				
ANR	1233628	Label	case ONIGENC_CTYPE_SPACE :	5185:6:116306:116330	1232810	4	True				
ANR	1233629	Identifier	ONIGENC_CTYPE_SPACE		1232810	0					
ANR	1233630	Label	case ONIGENC_CTYPE_DIGIT :	5186:6:116338:116362	1232810	5	True				
ANR	1233631	Identifier	ONIGENC_CTYPE_DIGIT		1232810	0					
ANR	1233632	Label	case ONIGENC_CTYPE_XDIGIT :	5187:6:116370:116395	1232810	6	True				
ANR	1233633	Identifier	ONIGENC_CTYPE_XDIGIT		1232810	0					
ANR	1233634	CompoundStatement		155:3:3604:3624	1232810	7					
ANR	1233635	IdentifierDeclStatement	CClassNode * cc ;	5189:3:116403:116417	1232810	0	True				
ANR	1233636	IdentifierDecl	* cc		1232810	0					
ANR	1233637	IdentifierDeclType	CClassNode *		1232810	0					
ANR	1233638	Identifier	cc		1232810	1					
ANR	1233639	IdentifierDeclStatement	const OnigCodePoint * mbr ;	5192:10:116461:116485	1232810	1	True				
ANR	1233640	IdentifierDecl	* mbr		1232810	0					
ANR	1233641	IdentifierDeclType	const OnigCodePoint *		1232810	0					
ANR	1233642	Identifier	mbr		1232810	1					
ANR	1233643	IdentifierDeclStatement	OnigCodePoint sb_out ;	5193:3:116490:116510	1232810	2	True				
ANR	1233644	IdentifierDecl	sb_out		1232810	0					
ANR	1233645	IdentifierDeclType	OnigCodePoint		1232810	0					
ANR	1233646	Identifier	sb_out		1232810	1					
ANR	1233647	ExpressionStatement	"r = ONIGENC_GET_CTYPE_CODE_RANGE ( env -> enc , tok -> u . prop . ctype , & sb_out , & mbr )"	5195:10:116523:116607	1232810	3	True				
ANR	1233648	AssignmentExpression	"r = ONIGENC_GET_CTYPE_CODE_RANGE ( env -> enc , tok -> u . prop . ctype , & sb_out , & mbr )"		1232810	0		=			
ANR	1233649	Identifier	r		1232810	0					
ANR	1233650	CallExpression	"ONIGENC_GET_CTYPE_CODE_RANGE ( env -> enc , tok -> u . prop . ctype , & sb_out , & mbr )"		1232810	1					
ANR	1233651	Callee	ONIGENC_GET_CTYPE_CODE_RANGE		1232810	0					
ANR	1233652	Identifier	ONIGENC_GET_CTYPE_CODE_RANGE		1232810	0					
ANR	1233653	ArgumentList	env -> enc		1232810	1					
ANR	1233654	Argument	env -> enc		1232810	0					
ANR	1233655	PtrMemberAccess	env -> enc		1232810	0					
ANR	1233656	Identifier	env		1232810	0					
ANR	1233657	Identifier	enc		1232810	1					
ANR	1233658	Argument	tok -> u . prop . ctype		1232810	1					
ANR	1233659	MemberAccess	tok -> u . prop . ctype		1232810	0					
ANR	1233660	MemberAccess	tok -> u . prop		1232810	0					
ANR	1233661	PtrMemberAccess	tok -> u		1232810	0					
ANR	1233662	Identifier	tok		1232810	0					
ANR	1233663	Identifier	u		1232810	1					
ANR	1233664	Identifier	prop		1232810	1					
ANR	1233665	Identifier	ctype		1232810	1					
ANR	1233666	Argument	& sb_out		1232810	2					
ANR	1233667	UnaryOperationExpression	& sb_out		1232810	0					
ANR	1233668	UnaryOperator	&		1232810	0					
ANR	1233669	Identifier	sb_out		1232810	1					
ANR	1233670	Argument	& mbr		1232810	3					
ANR	1233671	UnaryOperationExpression	& mbr		1232810	0					
ANR	1233672	UnaryOperator	&		1232810	0					
ANR	1233673	Identifier	mbr		1232810	1					
ANR	1233674	IfStatement	if ( r == 0 && ONIGENC_CODE_RANGE_NUM ( mbr ) >= THRESHOLD_RANGE_NUM_FOR_SHARE_CCLASS )		1232810	4					
ANR	1233675	Condition	r == 0 && ONIGENC_CODE_RANGE_NUM ( mbr ) >= THRESHOLD_RANGE_NUM_FOR_SHARE_CCLASS	5197:14:116623:116727	1232810	0	True				
ANR	1233676	AndExpression	r == 0 && ONIGENC_CODE_RANGE_NUM ( mbr ) >= THRESHOLD_RANGE_NUM_FOR_SHARE_CCLASS		1232810	0		&&			
ANR	1233677	EqualityExpression	r == 0		1232810	0		==			
ANR	1233678	Identifier	r		1232810	0					
ANR	1233679	PrimaryExpression	0		1232810	1					
ANR	1233680	RelationalExpression	ONIGENC_CODE_RANGE_NUM ( mbr ) >= THRESHOLD_RANGE_NUM_FOR_SHARE_CCLASS		1232810	1		>=			
ANR	1233681	CallExpression	ONIGENC_CODE_RANGE_NUM ( mbr )		1232810	0					
ANR	1233682	Callee	ONIGENC_CODE_RANGE_NUM		1232810	0					
ANR	1233683	Identifier	ONIGENC_CODE_RANGE_NUM		1232810	0					
ANR	1233684	ArgumentList	mbr		1232810	1					
ANR	1233685	Argument	mbr		1232810	0					
ANR	1233686	Identifier	mbr		1232810	0					
ANR	1233687	Identifier	THRESHOLD_RANGE_NUM_FOR_SHARE_CCLASS		1232810	1					
ANR	1233688	CompoundStatement		163:12:3892:3916	1232810	1					
ANR	1233689	IdentifierDeclStatement	type_cclass_key key ;	5200:12:116744:116764	1232810	0	True				
ANR	1233690	IdentifierDecl	key		1232810	0					
ANR	1233691	IdentifierDeclType	type_cclass_key		1232810	0					
ANR	1233692	Identifier	key		1232810	1					
ANR	1233693	IdentifierDeclStatement	type_cclass_key * new_key ;	5201:12:116778:116802	1232810	1	True				
ANR	1233694	IdentifierDecl	* new_key		1232810	0					
ANR	1233695	IdentifierDeclType	type_cclass_key *		1232810	0					
ANR	1233696	Identifier	new_key		1232810	1					
ANR	1233697	ExpressionStatement	key . enc = env -> enc	5203:12:116817:116836	1232810	2	True				
ANR	1233698	AssignmentExpression	key . enc = env -> enc		1232810	0		=			
ANR	1233699	MemberAccess	key . enc		1232810	0					
ANR	1233700	Identifier	key		1232810	0					
ANR	1233701	Identifier	enc		1232810	1					
ANR	1233702	PtrMemberAccess	env -> enc		1232810	1					
ANR	1233703	Identifier	env		1232810	0					
ANR	1233704	Identifier	enc		1232810	1					
ANR	1233705	ExpressionStatement	key . not = tok -> u . prop . not	5204:12:116850:116876	1232810	3	True				
ANR	1233706	AssignmentExpression	key . not = tok -> u . prop . not		1232810	0		=			
ANR	1233707	MemberAccess	key . not		1232810	0					
ANR	1233708	Identifier	key		1232810	0					
ANR	1233709	Identifier	not		1232810	1					
ANR	1233710	MemberAccess	tok -> u . prop . not		1232810	1					
ANR	1233711	MemberAccess	tok -> u . prop		1232810	0					
ANR	1233712	PtrMemberAccess	tok -> u		1232810	0					
ANR	1233713	Identifier	tok		1232810	0					
ANR	1233714	Identifier	u		1232810	1					
ANR	1233715	Identifier	prop		1232810	1					
ANR	1233716	Identifier	not		1232810	1					
ANR	1233717	ExpressionStatement	key . type = tok -> u . prop . ctype	5205:12:116890:116918	1232810	4	True				
ANR	1233718	AssignmentExpression	key . type = tok -> u . prop . ctype		1232810	0		=			
ANR	1233719	MemberAccess	key . type		1232810	0					
ANR	1233720	Identifier	key		1232810	0					
ANR	1233721	Identifier	type		1232810	1					
ANR	1233722	MemberAccess	tok -> u . prop . ctype		1232810	1					
ANR	1233723	MemberAccess	tok -> u . prop		1232810	0					
ANR	1233724	PtrMemberAccess	tok -> u		1232810	0					
ANR	1233725	Identifier	tok		1232810	0					
ANR	1233726	Identifier	u		1232810	1					
ANR	1233727	Identifier	prop		1232810	1					
ANR	1233728	Identifier	ctype		1232810	1					
ANR	1233729	ExpressionStatement	THREAD_ATOMIC_START	5207:12:116933:116952	1232810	5	True				
ANR	1233730	Identifier	THREAD_ATOMIC_START		1232810	0					
ANR	1233731	IfStatement	if ( IS_NULL ( OnigTypeCClassTable ) )		1232810	6					
ANR	1233732	Condition	IS_NULL ( OnigTypeCClassTable )	5209:16:116971:116998	1232810	0	True				
ANR	1233733	CallExpression	IS_NULL ( OnigTypeCClassTable )		1232810	0					
ANR	1233734	Callee	IS_NULL		1232810	0					
ANR	1233735	Identifier	IS_NULL		1232810	0					
ANR	1233736	ArgumentList	OnigTypeCClassTable		1232810	1					
ANR	1233737	Argument	OnigTypeCClassTable		1232810	0					
ANR	1233738	Identifier	OnigTypeCClassTable		1232810	0					
ANR	1233739	CompoundStatement		171:46:4115:4115	1232810	1					
ANR	1233740	ExpressionStatement	"OnigTypeCClassTable = onig_st_init_table_with_size ( & type_type_cclass_hash , 10 )"	5210:14:117017:117111	1232810	0	True				
ANR	1233741	AssignmentExpression	"OnigTypeCClassTable = onig_st_init_table_with_size ( & type_type_cclass_hash , 10 )"		1232810	0		=			
ANR	1233742	Identifier	OnigTypeCClassTable		1232810	0					
ANR	1233743	CallExpression	"onig_st_init_table_with_size ( & type_type_cclass_hash , 10 )"		1232810	1					
ANR	1233744	Callee	onig_st_init_table_with_size		1232810	0					
ANR	1233745	Identifier	onig_st_init_table_with_size		1232810	0					
ANR	1233746	ArgumentList	& type_type_cclass_hash		1232810	1					
ANR	1233747	Argument	& type_type_cclass_hash		1232810	0					
ANR	1233748	UnaryOperationExpression	& type_type_cclass_hash		1232810	0					
ANR	1233749	UnaryOperator	&		1232810	0					
ANR	1233750	Identifier	type_type_cclass_hash		1232810	1					
ANR	1233751	Argument	10		1232810	1					
ANR	1233752	PrimaryExpression	10		1232810	0					
ANR	1233753	IfStatement	if ( IS_NULL ( OnigTypeCClassTable ) )		1232810	1					
ANR	1233754	Condition	IS_NULL ( OnigTypeCClassTable )	5212:18:117131:117158	1232810	0	True				
ANR	1233755	CallExpression	IS_NULL ( OnigTypeCClassTable )		1232810	0					
ANR	1233756	Callee	IS_NULL		1232810	0					
ANR	1233757	Identifier	IS_NULL		1232810	0					
ANR	1233758	ArgumentList	OnigTypeCClassTable		1232810	1					
ANR	1233759	Argument	OnigTypeCClassTable		1232810	0					
ANR	1233760	Identifier	OnigTypeCClassTable		1232810	0					
ANR	1233761	CompoundStatement		174:48:4275:4275	1232810	1					
ANR	1233762	ExpressionStatement	THREAD_ATOMIC_END	5213:16:117179:117196	1232810	0	True				
ANR	1233763	Identifier	THREAD_ATOMIC_END		1232810	0					
ANR	1233764	ReturnStatement	return ONIGERR_MEMORY ;	5214:16:117214:117235	1232810	1	True				
ANR	1233765	Identifier	ONIGERR_MEMORY		1232810	0					
ANR	1233766	ElseStatement	else		1232810	0					
ANR	1233767	CompoundStatement		179:17:4398:4398	1232810	0					
ANR	1233768	IfStatement	"if ( onig_st_lookup ( OnigTypeCClassTable , ( st_data_t ) & key , ( st_data_t * ) np ) )"		1232810	0					
ANR	1233769	Condition	"onig_st_lookup ( OnigTypeCClassTable , ( st_data_t ) & key , ( st_data_t * ) np )"	5218:18:117304:117406	1232810	0	True				
ANR	1233770	CallExpression	"onig_st_lookup ( OnigTypeCClassTable , ( st_data_t ) & key , ( st_data_t * ) np )"		1232810	0					
ANR	1233771	Callee	onig_st_lookup		1232810	0					
ANR	1233772	Identifier	onig_st_lookup		1232810	0					
ANR	1233773	ArgumentList	OnigTypeCClassTable		1232810	1					
ANR	1233774	Argument	OnigTypeCClassTable		1232810	0					
ANR	1233775	Identifier	OnigTypeCClassTable		1232810	0					
ANR	1233776	Argument	( st_data_t ) & key		1232810	1					
ANR	1233777	CastExpression	( st_data_t ) & key		1232810	0					
ANR	1233778	CastTarget	st_data_t		1232810	0					
ANR	1233779	UnaryOperationExpression	& key		1232810	1					
ANR	1233780	UnaryOperator	&		1232810	0					
ANR	1233781	Identifier	key		1232810	1					
ANR	1233782	Argument	( st_data_t * ) np		1232810	2					
ANR	1233783	CastExpression	( st_data_t * ) np		1232810	0					
ANR	1233784	CastTarget	st_data_t *		1232810	0					
ANR	1233785	Identifier	np		1232810	1					
ANR	1233786	CompoundStatement		181:51:4523:4523	1232810	1					
ANR	1233787	ExpressionStatement	THREAD_ATOMIC_END	5220:16:117427:117444	1232810	0	True				
ANR	1233788	Identifier	THREAD_ATOMIC_END		1232810	0					
ANR	1233789	BreakStatement	break ;	5221:16:117462:117467	1232810	1	True				
ANR	1233790	ExpressionStatement	"* np = node_new_cclass_by_codepoint_range ( tok -> u . prop . not , sb_out , mbr )"	5225:12:117512:117593	1232810	7	True				
ANR	1233791	AssignmentExpression	"* np = node_new_cclass_by_codepoint_range ( tok -> u . prop . not , sb_out , mbr )"		1232810	0		=			
ANR	1233792	UnaryOperationExpression	* np		1232810	0					
ANR	1233793	UnaryOperator	*		1232810	0					
ANR	1233794	Identifier	np		1232810	1					
ANR	1233795	CallExpression	"node_new_cclass_by_codepoint_range ( tok -> u . prop . not , sb_out , mbr )"		1232810	1					
ANR	1233796	Callee	node_new_cclass_by_codepoint_range		1232810	0					
ANR	1233797	Identifier	node_new_cclass_by_codepoint_range		1232810	0					
ANR	1233798	ArgumentList	tok -> u . prop . not		1232810	1					
ANR	1233799	Argument	tok -> u . prop . not		1232810	0					
ANR	1233800	MemberAccess	tok -> u . prop . not		1232810	0					
ANR	1233801	MemberAccess	tok -> u . prop		1232810	0					
ANR	1233802	PtrMemberAccess	tok -> u		1232810	0					
ANR	1233803	Identifier	tok		1232810	0					
ANR	1233804	Identifier	u		1232810	1					
ANR	1233805	Identifier	prop		1232810	1					
ANR	1233806	Identifier	not		1232810	1					
ANR	1233807	Argument	sb_out		1232810	1					
ANR	1233808	Identifier	sb_out		1232810	0					
ANR	1233809	Argument	mbr		1232810	2					
ANR	1233810	Identifier	mbr		1232810	0					
ANR	1233811	IfStatement	if ( IS_NULL ( * np ) )		1232810	8					
ANR	1233812	Condition	IS_NULL ( * np )	5227:16:117611:117622	1232810	0	True				
ANR	1233813	CallExpression	IS_NULL ( * np )		1232810	0					
ANR	1233814	Callee	IS_NULL		1232810	0					
ANR	1233815	Identifier	IS_NULL		1232810	0					
ANR	1233816	ArgumentList	* np		1232810	1					
ANR	1233817	Argument	* np		1232810	0					
ANR	1233818	UnaryOperationExpression	* np		1232810	0					
ANR	1233819	UnaryOperator	*		1232810	0					
ANR	1233820	Identifier	np		1232810	1					
ANR	1233821	CompoundStatement		189:30:4739:4739	1232810	1					
ANR	1233822	ExpressionStatement	THREAD_ATOMIC_END	5228:14:117641:117658	1232810	0	True				
ANR	1233823	Identifier	THREAD_ATOMIC_END		1232810	0					
ANR	1233824	ReturnStatement	return ONIGERR_MEMORY ;	5229:14:117674:117695	1232810	1	True				
ANR	1233825	Identifier	ONIGERR_MEMORY		1232810	0					
ANR	1233826	ExpressionStatement	cc = NCCLASS ( * np )	5232:12:117724:117741	1232810	9	True				
ANR	1233827	AssignmentExpression	cc = NCCLASS ( * np )		1232810	0		=			
ANR	1233828	Identifier	cc		1232810	0					
ANR	1233829	CallExpression	NCCLASS ( * np )		1232810	1					
ANR	1233830	Callee	NCCLASS		1232810	0					
ANR	1233831	Identifier	NCCLASS		1232810	0					
ANR	1233832	ArgumentList	* np		1232810	1					
ANR	1233833	Argument	* np		1232810	0					
ANR	1233834	UnaryOperationExpression	* np		1232810	0					
ANR	1233835	UnaryOperator	*		1232810	0					
ANR	1233836	Identifier	np		1232810	1					
ANR	1233837	ExpressionStatement	NCCLASS_SET_SHARE ( cc )	5233:12:117755:117776	1232810	10	True				
ANR	1233838	CallExpression	NCCLASS_SET_SHARE ( cc )		1232810	0					
ANR	1233839	Callee	NCCLASS_SET_SHARE		1232810	0					
ANR	1233840	Identifier	NCCLASS_SET_SHARE		1232810	0					
ANR	1233841	ArgumentList	cc		1232810	1					
ANR	1233842	Argument	cc		1232810	0					
ANR	1233843	Identifier	cc		1232810	0					
ANR	1233844	ExpressionStatement	new_key = ( type_cclass_key * ) xmalloc ( sizeof ( type_cclass_key ) )	5234:12:117790:117851	1232810	11	True				
ANR	1233845	AssignmentExpression	new_key = ( type_cclass_key * ) xmalloc ( sizeof ( type_cclass_key ) )		1232810	0		=			
ANR	1233846	Identifier	new_key		1232810	0					
ANR	1233847	CastExpression	( type_cclass_key * ) xmalloc ( sizeof ( type_cclass_key ) )		1232810	1					
ANR	1233848	CastTarget	type_cclass_key *		1232810	0					
ANR	1233849	CallExpression	xmalloc ( sizeof ( type_cclass_key ) )		1232810	1					
ANR	1233850	Callee	xmalloc		1232810	0					
ANR	1233851	Identifier	xmalloc		1232810	0					
ANR	1233852	ArgumentList	sizeof ( type_cclass_key )		1232810	1					
ANR	1233853	Argument	sizeof ( type_cclass_key )		1232810	0					
ANR	1233854	SizeofExpression	sizeof ( type_cclass_key )		1232810	0					
ANR	1233855	Sizeof	sizeof		1232810	0					
ANR	1233856	SizeofOperand	type_cclass_key		1232810	1					
ANR	1233857	ExpressionStatement	"xmemcpy ( new_key , & key , sizeof ( type_cclass_key ) )"	5235:5:117858:117905	1232810	12	True				
ANR	1233858	CallExpression	"xmemcpy ( new_key , & key , sizeof ( type_cclass_key ) )"		1232810	0					
ANR	1233859	Callee	xmemcpy		1232810	0					
ANR	1233860	Identifier	xmemcpy		1232810	0					
ANR	1233861	ArgumentList	new_key		1232810	1					
ANR	1233862	Argument	new_key		1232810	0					
ANR	1233863	Identifier	new_key		1232810	0					
ANR	1233864	Argument	& key		1232810	1					
ANR	1233865	UnaryOperationExpression	& key		1232810	0					
ANR	1233866	UnaryOperator	&		1232810	0					
ANR	1233867	Identifier	key		1232810	1					
ANR	1233868	Argument	sizeof ( type_cclass_key )		1232810	2					
ANR	1233869	SizeofExpression	sizeof ( type_cclass_key )		1232810	0					
ANR	1233870	Sizeof	sizeof		1232810	0					
ANR	1233871	SizeofOperand	type_cclass_key		1232810	1					
ANR	1233872	ExpressionStatement	"onig_st_add_direct ( OnigTypeCClassTable , ( st_data_t ) new_key , ( st_data_t ) * np )"	5236:12:117919:118027	1232810	13	True				
ANR	1233873	CallExpression	"onig_st_add_direct ( OnigTypeCClassTable , ( st_data_t ) new_key , ( st_data_t ) * np )"		1232810	0					
ANR	1233874	Callee	onig_st_add_direct		1232810	0					
ANR	1233875	Identifier	onig_st_add_direct		1232810	0					
ANR	1233876	ArgumentList	OnigTypeCClassTable		1232810	1					
ANR	1233877	Argument	OnigTypeCClassTable		1232810	0					
ANR	1233878	Identifier	OnigTypeCClassTable		1232810	0					
ANR	1233879	Argument	( st_data_t ) new_key		1232810	1					
ANR	1233880	CastExpression	( st_data_t ) new_key		1232810	0					
ANR	1233881	CastTarget	st_data_t		1232810	0					
ANR	1233882	Identifier	new_key		1232810	1					
ANR	1233883	Argument	( st_data_t ) * np		1232810	2					
ANR	1233884	CastExpression	( st_data_t ) * np		1232810	0					
ANR	1233885	CastTarget	st_data_t		1232810	0					
ANR	1233886	UnaryOperationExpression	* np		1232810	1					
ANR	1233887	UnaryOperator	*		1232810	0					
ANR	1233888	Identifier	np		1232810	1					
ANR	1233889	ExpressionStatement	THREAD_ATOMIC_END	5239:12:118054:118071	1232810	14	True				
ANR	1233890	Identifier	THREAD_ATOMIC_END		1232810	0					
ANR	1233891	ElseStatement	else		1232810	0					
ANR	1233892	CompoundStatement		203:15:5214:5214	1232810	0					
ANR	1233893	ExpressionStatement	* np = node_new_cclass ( )	5243:12:118121:118144	1232810	0	True				
ANR	1233894	AssignmentExpression	* np = node_new_cclass ( )		1232810	0		=			
ANR	1233895	UnaryOperationExpression	* np		1232810	0					
ANR	1233896	UnaryOperator	*		1232810	0					
ANR	1233897	Identifier	np		1232810	1					
ANR	1233898	CallExpression	node_new_cclass ( )		1232810	1					
ANR	1233899	Callee	node_new_cclass		1232810	0					
ANR	1233900	Identifier	node_new_cclass		1232810	0					
ANR	1233901	ArgumentList			1232810	1					
ANR	1233902	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5244:12:118158:118187	1232810	1	True				
ANR	1233903	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		1232810	0					
ANR	1233904	Callee	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1233905	Identifier	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1233906	ArgumentList	* np		1232810	1					
ANR	1233907	Argument	* np		1232810	0					
ANR	1233908	UnaryOperationExpression	* np		1232810	0					
ANR	1233909	UnaryOperator	*		1232810	0					
ANR	1233910	Identifier	np		1232810	1					
ANR	1233911	ExpressionStatement	cc = NCCLASS ( * np )	5245:12:118201:118218	1232810	2	True				
ANR	1233912	AssignmentExpression	cc = NCCLASS ( * np )		1232810	0		=			
ANR	1233913	Identifier	cc		1232810	0					
ANR	1233914	CallExpression	NCCLASS ( * np )		1232810	1					
ANR	1233915	Callee	NCCLASS		1232810	0					
ANR	1233916	Identifier	NCCLASS		1232810	0					
ANR	1233917	ArgumentList	* np		1232810	1					
ANR	1233918	Argument	* np		1232810	0					
ANR	1233919	UnaryOperationExpression	* np		1232810	0					
ANR	1233920	UnaryOperator	*		1232810	0					
ANR	1233921	Identifier	np		1232810	1					
ANR	1233922	ExpressionStatement	"add_ctype_to_cc ( cc , tok -> u . prop . ctype , 0 , env )"	5246:12:118232:118278	1232810	3	True				
ANR	1233923	CallExpression	"add_ctype_to_cc ( cc , tok -> u . prop . ctype , 0 , env )"		1232810	0					
ANR	1233924	Callee	add_ctype_to_cc		1232810	0					
ANR	1233925	Identifier	add_ctype_to_cc		1232810	0					
ANR	1233926	ArgumentList	cc		1232810	1					
ANR	1233927	Argument	cc		1232810	0					
ANR	1233928	Identifier	cc		1232810	0					
ANR	1233929	Argument	tok -> u . prop . ctype		1232810	1					
ANR	1233930	MemberAccess	tok -> u . prop . ctype		1232810	0					
ANR	1233931	MemberAccess	tok -> u . prop		1232810	0					
ANR	1233932	PtrMemberAccess	tok -> u		1232810	0					
ANR	1233933	Identifier	tok		1232810	0					
ANR	1233934	Identifier	u		1232810	1					
ANR	1233935	Identifier	prop		1232810	1					
ANR	1233936	Identifier	ctype		1232810	1					
ANR	1233937	Argument	0		1232810	2					
ANR	1233938	PrimaryExpression	0		1232810	0					
ANR	1233939	Argument	env		1232810	3					
ANR	1233940	Identifier	env		1232810	0					
ANR	1233941	IfStatement	if ( tok -> u . prop . not != 0 )		1232810	4					
ANR	1233942	Condition	tok -> u . prop . not != 0	5247:16:118296:118315	1232810	0	True				
ANR	1233943	EqualityExpression	tok -> u . prop . not != 0		1232810	0		!=			
ANR	1233944	MemberAccess	tok -> u . prop . not		1232810	0					
ANR	1233945	MemberAccess	tok -> u . prop		1232810	0					
ANR	1233946	PtrMemberAccess	tok -> u		1232810	0					
ANR	1233947	Identifier	tok		1232810	0					
ANR	1233948	Identifier	u		1232810	1					
ANR	1233949	Identifier	prop		1232810	1					
ANR	1233950	Identifier	not		1232810	1					
ANR	1233951	PrimaryExpression	0		1232810	1					
ANR	1233952	ExpressionStatement	NCCLASS_SET_NOT ( cc )	5247:38:118318:118337	1232810	1	True				
ANR	1233953	CallExpression	NCCLASS_SET_NOT ( cc )		1232810	0					
ANR	1233954	Callee	NCCLASS_SET_NOT		1232810	0					
ANR	1233955	Identifier	NCCLASS_SET_NOT		1232810	0					
ANR	1233956	ArgumentList	cc		1232810	1					
ANR	1233957	Argument	cc		1232810	0					
ANR	1233958	Identifier	cc		1232810	0					
ANR	1233959	BreakStatement	break ;	5252:1:118393:118398	1232810	8	True				
ANR	1233960	Label	default :	5254:6:118407:118414	1232810	9	True				
ANR	1233961	Identifier	default		1232810	0					
ANR	1233962	ReturnStatement	return ONIGERR_PARSER_BUG ;	5255:1:118417:118442	1232810	10	True				
ANR	1233963	Identifier	ONIGERR_PARSER_BUG		1232810	0					
ANR	1233964	BreakStatement	break ;	5256:1:118445:118450	1232810	11	True				
ANR	1233965	BreakStatement	break ;	5259:4:118470:118475	1232810	31	True				
ANR	1233966	Label	case TK_CHAR_PROPERTY :	5261:2:118480:118501	1232810	32	True				
ANR	1233967	Identifier	TK_CHAR_PROPERTY		1232810	0					
ANR	1233968	ExpressionStatement	"r = parse_char_property ( np , tok , src , end , env )"	5262:4:118507:118554	1232810	33	True				
ANR	1233969	AssignmentExpression	"r = parse_char_property ( np , tok , src , end , env )"		1232810	0		=			
ANR	1233970	Identifier	r		1232810	0					
ANR	1233971	CallExpression	"parse_char_property ( np , tok , src , end , env )"		1232810	1					
ANR	1233972	Callee	parse_char_property		1232810	0					
ANR	1233973	Identifier	parse_char_property		1232810	0					
ANR	1233974	ArgumentList	np		1232810	1					
ANR	1233975	Argument	np		1232810	0					
ANR	1233976	Identifier	np		1232810	0					
ANR	1233977	Argument	tok		1232810	1					
ANR	1233978	Identifier	tok		1232810	0					
ANR	1233979	Argument	src		1232810	2					
ANR	1233980	Identifier	src		1232810	0					
ANR	1233981	Argument	end		1232810	3					
ANR	1233982	Identifier	end		1232810	0					
ANR	1233983	Argument	env		1232810	4					
ANR	1233984	Identifier	env		1232810	0					
ANR	1233985	IfStatement	if ( r != 0 )		1232810	34					
ANR	1233986	Condition	r != 0	5263:8:118564:118569	1232810	0	True				
ANR	1233987	EqualityExpression	r != 0		1232810	0		!=			
ANR	1233988	Identifier	r		1232810	0					
ANR	1233989	PrimaryExpression	0		1232810	1					
ANR	1233990	ReturnStatement	return r ;	5263:16:118572:118580	1232810	1	True				
ANR	1233991	Identifier	r		1232810	0					
ANR	1233992	BreakStatement	break ;	5264:4:118586:118591	1232810	35	True				
ANR	1233993	Label	case TK_CC_OPEN :	5266:2:118596:118611	1232810	36	True				
ANR	1233994	Identifier	TK_CC_OPEN		1232810	0					
ANR	1233995	CompoundStatement		230:6:5739:5753	1232810	37					
ANR	1233996	IdentifierDeclStatement	CClassNode * cc ;	5268:6:118625:118639	1232810	0	True				
ANR	1233997	IdentifierDecl	* cc		1232810	0					
ANR	1233998	IdentifierDeclType	CClassNode *		1232810	0					
ANR	1233999	Identifier	cc		1232810	1					
ANR	1234000	ExpressionStatement	"r = parse_char_class ( np , tok , src , end , env )"	5270:6:118648:118692	1232810	1	True				
ANR	1234001	AssignmentExpression	"r = parse_char_class ( np , tok , src , end , env )"		1232810	0		=			
ANR	1234002	Identifier	r		1232810	0					
ANR	1234003	CallExpression	"parse_char_class ( np , tok , src , end , env )"		1232810	1					
ANR	1234004	Callee	parse_char_class		1232810	0					
ANR	1234005	Identifier	parse_char_class		1232810	0					
ANR	1234006	ArgumentList	np		1232810	1					
ANR	1234007	Argument	np		1232810	0					
ANR	1234008	Identifier	np		1232810	0					
ANR	1234009	Argument	tok		1232810	1					
ANR	1234010	Identifier	tok		1232810	0					
ANR	1234011	Argument	src		1232810	2					
ANR	1234012	Identifier	src		1232810	0					
ANR	1234013	Argument	end		1232810	3					
ANR	1234014	Identifier	end		1232810	0					
ANR	1234015	Argument	env		1232810	4					
ANR	1234016	Identifier	env		1232810	0					
ANR	1234017	IfStatement	if ( r != 0 )		1232810	2					
ANR	1234018	Condition	r != 0	5271:10:118704:118709	1232810	0	True				
ANR	1234019	EqualityExpression	r != 0		1232810	0		!=			
ANR	1234020	Identifier	r		1232810	0					
ANR	1234021	PrimaryExpression	0		1232810	1					
ANR	1234022	ReturnStatement	return r ;	5271:18:118712:118720	1232810	1	True				
ANR	1234023	Identifier	r		1232810	0					
ANR	1234024	ExpressionStatement	cc = NCCLASS ( * np )	5273:6:118729:118746	1232810	3	True				
ANR	1234025	AssignmentExpression	cc = NCCLASS ( * np )		1232810	0		=			
ANR	1234026	Identifier	cc		1232810	0					
ANR	1234027	CallExpression	NCCLASS ( * np )		1232810	1					
ANR	1234028	Callee	NCCLASS		1232810	0					
ANR	1234029	Identifier	NCCLASS		1232810	0					
ANR	1234030	ArgumentList	* np		1232810	1					
ANR	1234031	Argument	* np		1232810	0					
ANR	1234032	UnaryOperationExpression	* np		1232810	0					
ANR	1234033	UnaryOperator	*		1232810	0					
ANR	1234034	Identifier	np		1232810	1					
ANR	1234035	IfStatement	if ( IS_IGNORECASE ( env -> option ) )		1232810	4					
ANR	1234036	Condition	IS_IGNORECASE ( env -> option )	5274:10:118758:118783	1232810	0	True				
ANR	1234037	CallExpression	IS_IGNORECASE ( env -> option )		1232810	0					
ANR	1234038	Callee	IS_IGNORECASE		1232810	0					
ANR	1234039	Identifier	IS_IGNORECASE		1232810	0					
ANR	1234040	ArgumentList	env -> option		1232810	1					
ANR	1234041	Argument	env -> option		1232810	0					
ANR	1234042	PtrMemberAccess	env -> option		1232810	0					
ANR	1234043	Identifier	env		1232810	0					
ANR	1234044	Identifier	option		1232810	1					
ANR	1234045	CompoundStatement		237:1:5903:5925	1232810	1					
ANR	1234046	IdentifierDeclStatement	IApplyCaseFoldArg iarg ;	5275:1:118789:118811	1232810	0	True				
ANR	1234047	IdentifierDecl	iarg		1232810	0					
ANR	1234048	IdentifierDeclType	IApplyCaseFoldArg		1232810	0					
ANR	1234049	Identifier	iarg		1232810	1					
ANR	1234050	ExpressionStatement	iarg . env = env	5277:1:118815:118834	1232810	1	True				
ANR	1234051	AssignmentExpression	iarg . env = env		1232810	0		=			
ANR	1234052	MemberAccess	iarg . env		1232810	0					
ANR	1234053	Identifier	iarg		1232810	0					
ANR	1234054	Identifier	env		1232810	1					
ANR	1234055	Identifier	env		1232810	1					
ANR	1234056	ExpressionStatement	iarg . cc = cc	5278:1:118837:118855	1232810	2	True				
ANR	1234057	AssignmentExpression	iarg . cc = cc		1232810	0		=			
ANR	1234058	MemberAccess	iarg . cc		1232810	0					
ANR	1234059	Identifier	iarg		1232810	0					
ANR	1234060	Identifier	cc		1232810	1					
ANR	1234061	Identifier	cc		1232810	1					
ANR	1234062	ExpressionStatement	iarg . alt_root = NULL_NODE	5279:1:118858:118883	1232810	3	True				
ANR	1234063	AssignmentExpression	iarg . alt_root = NULL_NODE		1232810	0		=			
ANR	1234064	MemberAccess	iarg . alt_root		1232810	0					
ANR	1234065	Identifier	iarg		1232810	0					
ANR	1234066	Identifier	alt_root		1232810	1					
ANR	1234067	Identifier	NULL_NODE		1232810	1					
ANR	1234068	ExpressionStatement	iarg . ptail = & ( iarg . alt_root )	5280:1:118886:118918	1232810	4	True				
ANR	1234069	AssignmentExpression	iarg . ptail = & ( iarg . alt_root )		1232810	0		=			
ANR	1234070	MemberAccess	iarg . ptail		1232810	0					
ANR	1234071	Identifier	iarg		1232810	0					
ANR	1234072	Identifier	ptail		1232810	1					
ANR	1234073	UnaryOperationExpression	& ( iarg . alt_root )		1232810	1					
ANR	1234074	UnaryOperator	&		1232810	0					
ANR	1234075	MemberAccess	iarg . alt_root		1232810	1					
ANR	1234076	Identifier	iarg		1232810	0					
ANR	1234077	Identifier	alt_root		1232810	1					
ANR	1234078	ExpressionStatement	"r = ONIGENC_APPLY_ALL_CASE_FOLD ( env -> enc , env -> case_fold_flag , i_apply_case_fold , & iarg )"	5282:1:118922:119015	1232810	5	True				
ANR	1234079	AssignmentExpression	"r = ONIGENC_APPLY_ALL_CASE_FOLD ( env -> enc , env -> case_fold_flag , i_apply_case_fold , & iarg )"		1232810	0		=			
ANR	1234080	Identifier	r		1232810	0					
ANR	1234081	CallExpression	"ONIGENC_APPLY_ALL_CASE_FOLD ( env -> enc , env -> case_fold_flag , i_apply_case_fold , & iarg )"		1232810	1					
ANR	1234082	Callee	ONIGENC_APPLY_ALL_CASE_FOLD		1232810	0					
ANR	1234083	Identifier	ONIGENC_APPLY_ALL_CASE_FOLD		1232810	0					
ANR	1234084	ArgumentList	env -> enc		1232810	1					
ANR	1234085	Argument	env -> enc		1232810	0					
ANR	1234086	PtrMemberAccess	env -> enc		1232810	0					
ANR	1234087	Identifier	env		1232810	0					
ANR	1234088	Identifier	enc		1232810	1					
ANR	1234089	Argument	env -> case_fold_flag		1232810	1					
ANR	1234090	PtrMemberAccess	env -> case_fold_flag		1232810	0					
ANR	1234091	Identifier	env		1232810	0					
ANR	1234092	Identifier	case_fold_flag		1232810	1					
ANR	1234093	Argument	i_apply_case_fold		1232810	2					
ANR	1234094	Identifier	i_apply_case_fold		1232810	0					
ANR	1234095	Argument	& iarg		1232810	3					
ANR	1234096	UnaryOperationExpression	& iarg		1232810	0					
ANR	1234097	UnaryOperator	&		1232810	0					
ANR	1234098	Identifier	iarg		1232810	1					
ANR	1234099	IfStatement	if ( r != 0 )		1232810	6					
ANR	1234100	Condition	r != 0	5284:5:119022:119027	1232810	0	True				
ANR	1234101	EqualityExpression	r != 0		1232810	0		!=			
ANR	1234102	Identifier	r		1232810	0					
ANR	1234103	PrimaryExpression	0		1232810	1					
ANR	1234104	CompoundStatement		246:13:6144:6144	1232810	1					
ANR	1234105	ExpressionStatement	onig_node_free ( iarg . alt_root )	5285:3:119035:119064	1232810	0	True				
ANR	1234106	CallExpression	onig_node_free ( iarg . alt_root )		1232810	0					
ANR	1234107	Callee	onig_node_free		1232810	0					
ANR	1234108	Identifier	onig_node_free		1232810	0					
ANR	1234109	ArgumentList	iarg . alt_root		1232810	1					
ANR	1234110	Argument	iarg . alt_root		1232810	0					
ANR	1234111	MemberAccess	iarg . alt_root		1232810	0					
ANR	1234112	Identifier	iarg		1232810	0					
ANR	1234113	Identifier	alt_root		1232810	1					
ANR	1234114	ReturnStatement	return r ;	5286:3:119069:119077	1232810	1	True				
ANR	1234115	Identifier	r		1232810	0					
ANR	1234116	IfStatement	if ( IS_NOT_NULL ( iarg . alt_root ) )		1232810	7					
ANR	1234117	Condition	IS_NOT_NULL ( iarg . alt_root )	5288:5:119087:119112	1232810	0	True				
ANR	1234118	CallExpression	IS_NOT_NULL ( iarg . alt_root )		1232810	0					
ANR	1234119	Callee	IS_NOT_NULL		1232810	0					
ANR	1234120	Identifier	IS_NOT_NULL		1232810	0					
ANR	1234121	ArgumentList	iarg . alt_root		1232810	1					
ANR	1234122	Argument	iarg . alt_root		1232810	0					
ANR	1234123	MemberAccess	iarg . alt_root		1232810	0					
ANR	1234124	Identifier	iarg		1232810	0					
ANR	1234125	Identifier	alt_root		1232810	1					
ANR	1234126	CompoundStatement		251:10:6241:6291	1232810	1					
ANR	1234127	IdentifierDeclStatement	"Node * work = onig_node_new_alt ( * np , iarg . alt_root ) ;"	5289:10:119127:119177	1232810	0	True				
ANR	1234128	IdentifierDecl	"* work = onig_node_new_alt ( * np , iarg . alt_root )"		1232810	0					
ANR	1234129	IdentifierDeclType	Node *		1232810	0					
ANR	1234130	Identifier	work		1232810	1					
ANR	1234131	AssignmentExpression	"* work = onig_node_new_alt ( * np , iarg . alt_root )"		1232810	2		=			
ANR	1234132	Identifier	work		1232810	0					
ANR	1234133	CallExpression	"onig_node_new_alt ( * np , iarg . alt_root )"		1232810	1					
ANR	1234134	Callee	onig_node_new_alt		1232810	0					
ANR	1234135	Identifier	onig_node_new_alt		1232810	0					
ANR	1234136	ArgumentList	* np		1232810	1					
ANR	1234137	Argument	* np		1232810	0					
ANR	1234138	UnaryOperationExpression	* np		1232810	0					
ANR	1234139	UnaryOperator	*		1232810	0					
ANR	1234140	Identifier	np		1232810	1					
ANR	1234141	Argument	iarg . alt_root		1232810	1					
ANR	1234142	MemberAccess	iarg . alt_root		1232810	0					
ANR	1234143	Identifier	iarg		1232810	0					
ANR	1234144	Identifier	alt_root		1232810	1					
ANR	1234145	IfStatement	if ( IS_NULL ( work ) )		1232810	1					
ANR	1234146	Condition	IS_NULL ( work )	5290:14:119193:119205	1232810	0	True				
ANR	1234147	CallExpression	IS_NULL ( work )		1232810	0					
ANR	1234148	Callee	IS_NULL		1232810	0					
ANR	1234149	Identifier	IS_NULL		1232810	0					
ANR	1234150	ArgumentList	work		1232810	1					
ANR	1234151	Argument	work		1232810	0					
ANR	1234152	Identifier	work		1232810	0					
ANR	1234153	CompoundStatement		252:29:6322:6322	1232810	1					
ANR	1234154	ExpressionStatement	onig_node_free ( iarg . alt_root )	5291:12:119222:119251	1232810	0	True				
ANR	1234155	CallExpression	onig_node_free ( iarg . alt_root )		1232810	0					
ANR	1234156	Callee	onig_node_free		1232810	0					
ANR	1234157	Identifier	onig_node_free		1232810	0					
ANR	1234158	ArgumentList	iarg . alt_root		1232810	1					
ANR	1234159	Argument	iarg . alt_root		1232810	0					
ANR	1234160	MemberAccess	iarg . alt_root		1232810	0					
ANR	1234161	Identifier	iarg		1232810	0					
ANR	1234162	Identifier	alt_root		1232810	1					
ANR	1234163	ReturnStatement	return ONIGERR_MEMORY ;	5292:12:119265:119286	1232810	1	True				
ANR	1234164	Identifier	ONIGERR_MEMORY		1232810	0					
ANR	1234165	ExpressionStatement	* np = work	5294:10:119310:119320	1232810	2	True				
ANR	1234166	AssignmentExpression	* np = work		1232810	0		=			
ANR	1234167	UnaryOperationExpression	* np		1232810	0					
ANR	1234168	UnaryOperator	*		1232810	0					
ANR	1234169	Identifier	np		1232810	1					
ANR	1234170	Identifier	work		1232810	1					
ANR	1234171	BreakStatement	break ;	5298:4:119343:119348	1232810	38	True				
ANR	1234172	Label	case TK_ANYCHAR :	5300:2:119353:119368	1232810	39	True				
ANR	1234173	Identifier	TK_ANYCHAR		1232810	0					
ANR	1234174	ExpressionStatement	* np = node_new_anychar ( )	5301:4:119374:119398	1232810	40	True				
ANR	1234175	AssignmentExpression	* np = node_new_anychar ( )		1232810	0		=			
ANR	1234176	UnaryOperationExpression	* np		1232810	0					
ANR	1234177	UnaryOperator	*		1232810	0					
ANR	1234178	Identifier	np		1232810	1					
ANR	1234179	CallExpression	node_new_anychar ( )		1232810	1					
ANR	1234180	Callee	node_new_anychar		1232810	0					
ANR	1234181	Identifier	node_new_anychar		1232810	0					
ANR	1234182	ArgumentList			1232810	1					
ANR	1234183	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5302:4:119404:119433	1232810	41	True				
ANR	1234184	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		1232810	0					
ANR	1234185	Callee	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1234186	Identifier	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1234187	ArgumentList	* np		1232810	1					
ANR	1234188	Argument	* np		1232810	0					
ANR	1234189	UnaryOperationExpression	* np		1232810	0					
ANR	1234190	UnaryOperator	*		1232810	0					
ANR	1234191	Identifier	np		1232810	1					
ANR	1234192	BreakStatement	break ;	5303:4:119439:119444	1232810	42	True				
ANR	1234193	Label	case TK_ANYCHAR_ANYTIME :	5305:2:119449:119472	1232810	43	True				
ANR	1234194	Identifier	TK_ANYCHAR_ANYTIME		1232810	0					
ANR	1234195	ExpressionStatement	* np = node_new_anychar ( )	5306:4:119478:119502	1232810	44	True				
ANR	1234196	AssignmentExpression	* np = node_new_anychar ( )		1232810	0		=			
ANR	1234197	UnaryOperationExpression	* np		1232810	0					
ANR	1234198	UnaryOperator	*		1232810	0					
ANR	1234199	Identifier	np		1232810	1					
ANR	1234200	CallExpression	node_new_anychar ( )		1232810	1					
ANR	1234201	Callee	node_new_anychar		1232810	0					
ANR	1234202	Identifier	node_new_anychar		1232810	0					
ANR	1234203	ArgumentList			1232810	1					
ANR	1234204	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5307:4:119508:119537	1232810	45	True				
ANR	1234205	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		1232810	0					
ANR	1234206	Callee	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1234207	Identifier	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1234208	ArgumentList	* np		1232810	1					
ANR	1234209	Argument	* np		1232810	0					
ANR	1234210	UnaryOperationExpression	* np		1232810	0					
ANR	1234211	UnaryOperator	*		1232810	0					
ANR	1234212	Identifier	np		1232810	1					
ANR	1234213	ExpressionStatement	"qn = node_new_quantifier ( 0 , REPEAT_INFINITE , 0 )"	5308:4:119543:119590	1232810	46	True				
ANR	1234214	AssignmentExpression	"qn = node_new_quantifier ( 0 , REPEAT_INFINITE , 0 )"		1232810	0		=			
ANR	1234215	Identifier	qn		1232810	0					
ANR	1234216	CallExpression	"node_new_quantifier ( 0 , REPEAT_INFINITE , 0 )"		1232810	1					
ANR	1234217	Callee	node_new_quantifier		1232810	0					
ANR	1234218	Identifier	node_new_quantifier		1232810	0					
ANR	1234219	ArgumentList	0		1232810	1					
ANR	1234220	Argument	0		1232810	0					
ANR	1234221	PrimaryExpression	0		1232810	0					
ANR	1234222	Argument	REPEAT_INFINITE		1232810	1					
ANR	1234223	Identifier	REPEAT_INFINITE		1232810	0					
ANR	1234224	Argument	0		1232810	2					
ANR	1234225	PrimaryExpression	0		1232810	0					
ANR	1234226	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( qn )	5309:4:119596:119624	1232810	47	True				
ANR	1234227	CallExpression	CHECK_NULL_RETURN_MEMERR ( qn )		1232810	0					
ANR	1234228	Callee	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1234229	Identifier	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1234230	ArgumentList	qn		1232810	1					
ANR	1234231	Argument	qn		1232810	0					
ANR	1234232	Identifier	qn		1232810	0					
ANR	1234233	ExpressionStatement	NQTFR ( qn ) -> target = * np	5310:4:119630:119653	1232810	48	True				
ANR	1234234	AssignmentExpression	NQTFR ( qn ) -> target = * np		1232810	0		=			
ANR	1234235	PtrMemberAccess	NQTFR ( qn ) -> target		1232810	0					
ANR	1234236	CallExpression	NQTFR ( qn )		1232810	0					
ANR	1234237	Callee	NQTFR		1232810	0					
ANR	1234238	Identifier	NQTFR		1232810	0					
ANR	1234239	ArgumentList	qn		1232810	1					
ANR	1234240	Argument	qn		1232810	0					
ANR	1234241	Identifier	qn		1232810	0					
ANR	1234242	Identifier	target		1232810	1					
ANR	1234243	UnaryOperationExpression	* np		1232810	1					
ANR	1234244	UnaryOperator	*		1232810	0					
ANR	1234245	Identifier	np		1232810	1					
ANR	1234246	ExpressionStatement	* np = qn	5311:4:119659:119667	1232810	49	True				
ANR	1234247	AssignmentExpression	* np = qn		1232810	0		=			
ANR	1234248	UnaryOperationExpression	* np		1232810	0					
ANR	1234249	UnaryOperator	*		1232810	0					
ANR	1234250	Identifier	np		1232810	1					
ANR	1234251	Identifier	qn		1232810	1					
ANR	1234252	BreakStatement	break ;	5312:4:119673:119678	1232810	50	True				
ANR	1234253	Label	case TK_BACKREF :	5314:2:119683:119698	1232810	51	True				
ANR	1234254	Identifier	TK_BACKREF		1232810	0					
ANR	1234255	ExpressionStatement	len = tok -> u . backref . num	5315:4:119704:119728	1232810	52	True				
ANR	1234256	AssignmentExpression	len = tok -> u . backref . num		1232810	0		=			
ANR	1234257	Identifier	len		1232810	0					
ANR	1234258	MemberAccess	tok -> u . backref . num		1232810	1					
ANR	1234259	MemberAccess	tok -> u . backref		1232810	0					
ANR	1234260	PtrMemberAccess	tok -> u		1232810	0					
ANR	1234261	Identifier	tok		1232810	0					
ANR	1234262	Identifier	u		1232810	1					
ANR	1234263	Identifier	backref		1232810	1					
ANR	1234264	Identifier	num		1232810	1					
ANR	1234265	Statement	*	5316:4:119734:119734	1232810	53	True				
ANR	1234266	Statement	np	5316:5:119735:119736	1232810	54	True				
ANR	1234267	Statement	=	5316:8:119738:119738	1232810	55	True				
ANR	1234268	Statement	node_new_backref	5316:10:119740:119755	1232810	56	True				
ANR	1234269	Statement	(	5316:26:119756:119756	1232810	57	True				
ANR	1234270	Statement	len	5316:27:119757:119759	1232810	58	True				
ANR	1234271	Statement	","	5316:30:119760:119760	1232810	59	True				
ANR	1234272	Statement	(	5317:5:119767:119767	1232810	60	True				
ANR	1234273	Statement	len	5317:6:119768:119770	1232810	61	True				
ANR	1234274	Statement	>	5317:10:119772:119772	1232810	62	True				
ANR	1234275	Statement	1	5317:12:119774:119774	1232810	63	True				
ANR	1234276	Statement	?	5317:14:119776:119776	1232810	64	True				
ANR	1234277	Statement	tok	5317:16:119778:119780	1232810	65	True				
ANR	1234278	Statement	->	5317:19:119781:119782	1232810	66	True				
ANR	1234279	Statement	u	5317:21:119783:119783	1232810	67	True				
ANR	1234280	Statement	.	5317:22:119784:119784	1232810	68	True				
ANR	1234281	Statement	backref	5317:23:119785:119791	1232810	69	True				
ANR	1234282	Statement	.	5317:30:119792:119792	1232810	70	True				
ANR	1234283	Label	refs :	5317:31:119793:119798	1232810	71	True				
ANR	1234284	Identifier	refs		1232810	0					
ANR	1234285	Statement	&	5317:38:119800:119800	1232810	72	True				
ANR	1234286	Statement	(	5317:39:119801:119801	1232810	73	True				
ANR	1234287	Statement	tok	5317:40:119802:119804	1232810	74	True				
ANR	1234288	Statement	->	5317:43:119805:119806	1232810	75	True				
ANR	1234289	Statement	u	5317:45:119807:119807	1232810	76	True				
ANR	1234290	Statement	.	5317:46:119808:119808	1232810	77	True				
ANR	1234291	Statement	backref	5317:47:119809:119815	1232810	78	True				
ANR	1234292	Statement	.	5317:54:119816:119816	1232810	79	True				
ANR	1234293	Statement	ref1	5317:55:119817:119820	1232810	80	True				
ANR	1234294	Statement	)	5317:59:119821:119821	1232810	81	True				
ANR	1234295	Statement	)	5317:60:119822:119822	1232810	82	True				
ANR	1234296	Statement	","	5317:61:119823:119823	1232810	83	True				
ANR	1234297	Statement	tok	5318:6:119831:119833	1232810	84	True				
ANR	1234298	Statement	->	5318:9:119834:119835	1232810	85	True				
ANR	1234299	Statement	u	5318:11:119836:119836	1232810	86	True				
ANR	1234300	Statement	.	5318:12:119837:119837	1232810	87	True				
ANR	1234301	Statement	backref	5318:13:119838:119844	1232810	88	True				
ANR	1234302	Statement	.	5318:20:119845:119845	1232810	89	True				
ANR	1234303	Statement	by_name	5318:21:119846:119852	1232810	90	True				
ANR	1234304	Statement	","	5318:28:119853:119853	1232810	91	True				
ANR	1234305	Statement	tok	5320:6:119891:119893	1232810	92	True				
ANR	1234306	Statement	->	5320:9:119894:119895	1232810	93	True				
ANR	1234307	Statement	u	5320:11:119896:119896	1232810	94	True				
ANR	1234308	Statement	.	5320:12:119897:119897	1232810	95	True				
ANR	1234309	Statement	backref	5320:13:119898:119904	1232810	96	True				
ANR	1234310	Statement	.	5320:20:119905:119905	1232810	97	True				
ANR	1234311	Statement	exist_level	5320:21:119906:119916	1232810	98	True				
ANR	1234312	Statement	","	5320:32:119917:119917	1232810	99	True				
ANR	1234313	Statement	tok	5321:6:119925:119927	1232810	100	True				
ANR	1234314	Statement	->	5321:9:119928:119929	1232810	101	True				
ANR	1234315	Statement	u	5321:11:119930:119930	1232810	102	True				
ANR	1234316	Statement	.	5321:12:119931:119931	1232810	103	True				
ANR	1234317	Statement	backref	5321:13:119932:119938	1232810	104	True				
ANR	1234318	Statement	.	5321:20:119939:119939	1232810	105	True				
ANR	1234319	Statement	level	5321:21:119940:119944	1232810	106	True				
ANR	1234320	Statement	","	5321:26:119945:119945	1232810	107	True				
ANR	1234321	Statement	env	5323:6:119960:119962	1232810	108	True				
ANR	1234322	Statement	)	5323:9:119963:119963	1232810	109	True				
ANR	1234323	ExpressionStatement		5323:10:119964:119964	1232810	110	True				
ANR	1234324	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5324:4:119970:119999	1232810	111	True				
ANR	1234325	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		1232810	0					
ANR	1234326	Callee	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1234327	Identifier	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1234328	ArgumentList	* np		1232810	1					
ANR	1234329	Argument	* np		1232810	0					
ANR	1234330	UnaryOperationExpression	* np		1232810	0					
ANR	1234331	UnaryOperator	*		1232810	0					
ANR	1234332	Identifier	np		1232810	1					
ANR	1234333	BreakStatement	break ;	5325:4:120005:120010	1232810	112	True				
ANR	1234334	Label	case TK_CALL :	5328:2:120038:120050	1232810	113	True				
ANR	1234335	Identifier	TK_CALL		1232810	0					
ANR	1234336	CompoundStatement		292:6:7178:7205	1232810	114					
ANR	1234337	IdentifierDeclStatement	int gnum = tok -> u . call . gnum ;	5330:6:120064:120091	1232810	0	True				
ANR	1234338	IdentifierDecl	gnum = tok -> u . call . gnum		1232810	0					
ANR	1234339	IdentifierDeclType	int		1232810	0					
ANR	1234340	Identifier	gnum		1232810	1					
ANR	1234341	AssignmentExpression	gnum = tok -> u . call . gnum		1232810	2		=			
ANR	1234342	Identifier	gnum		1232810	0					
ANR	1234343	MemberAccess	tok -> u . call . gnum		1232810	1					
ANR	1234344	MemberAccess	tok -> u . call		1232810	0					
ANR	1234345	PtrMemberAccess	tok -> u		1232810	0					
ANR	1234346	Identifier	tok		1232810	0					
ANR	1234347	Identifier	u		1232810	1					
ANR	1234348	Identifier	call		1232810	1					
ANR	1234349	Identifier	gnum		1232810	1					
ANR	1234350	IfStatement	if ( gnum < 0 )		1232810	1					
ANR	1234351	Condition	gnum < 0	5332:10:120104:120111	1232810	0	True				
ANR	1234352	RelationalExpression	gnum < 0		1232810	0		<			
ANR	1234353	Identifier	gnum		1232810	0					
ANR	1234354	PrimaryExpression	0		1232810	1					
ANR	1234355	CompoundStatement		294:20:7228:7228	1232810	1					
ANR	1234356	ExpressionStatement	"gnum = BACKREF_REL_TO_ABS ( gnum , env )"	5333:1:120117:120153	1232810	0	True				
ANR	1234357	AssignmentExpression	"gnum = BACKREF_REL_TO_ABS ( gnum , env )"		1232810	0		=			
ANR	1234358	Identifier	gnum		1232810	0					
ANR	1234359	CallExpression	"BACKREF_REL_TO_ABS ( gnum , env )"		1232810	1					
ANR	1234360	Callee	BACKREF_REL_TO_ABS		1232810	0					
ANR	1234361	Identifier	BACKREF_REL_TO_ABS		1232810	0					
ANR	1234362	ArgumentList	gnum		1232810	1					
ANR	1234363	Argument	gnum		1232810	0					
ANR	1234364	Identifier	gnum		1232810	0					
ANR	1234365	Argument	env		1232810	1					
ANR	1234366	Identifier	env		1232810	0					
ANR	1234367	IfStatement	if ( gnum <= 0 )		1232810	1					
ANR	1234368	Condition	gnum <= 0	5334:5:120160:120168	1232810	0	True				
ANR	1234369	RelationalExpression	gnum <= 0		1232810	0		<=			
ANR	1234370	Identifier	gnum		1232810	0					
ANR	1234371	PrimaryExpression	0		1232810	1					
ANR	1234372	ReturnStatement	return ONIGERR_INVALID_BACKREF ;	5335:3:120174:120204	1232810	1	True				
ANR	1234373	Identifier	ONIGERR_INVALID_BACKREF		1232810	0					
ANR	1234374	ExpressionStatement	"* np = node_new_call ( tok -> u . call . name , tok -> u . call . name_end , gnum )"	5337:6:120220:120285	1232810	2	True				
ANR	1234375	AssignmentExpression	"* np = node_new_call ( tok -> u . call . name , tok -> u . call . name_end , gnum )"		1232810	0		=			
ANR	1234376	UnaryOperationExpression	* np		1232810	0					
ANR	1234377	UnaryOperator	*		1232810	0					
ANR	1234378	Identifier	np		1232810	1					
ANR	1234379	CallExpression	"node_new_call ( tok -> u . call . name , tok -> u . call . name_end , gnum )"		1232810	1					
ANR	1234380	Callee	node_new_call		1232810	0					
ANR	1234381	Identifier	node_new_call		1232810	0					
ANR	1234382	ArgumentList	tok -> u . call . name		1232810	1					
ANR	1234383	Argument	tok -> u . call . name		1232810	0					
ANR	1234384	MemberAccess	tok -> u . call . name		1232810	0					
ANR	1234385	MemberAccess	tok -> u . call		1232810	0					
ANR	1234386	PtrMemberAccess	tok -> u		1232810	0					
ANR	1234387	Identifier	tok		1232810	0					
ANR	1234388	Identifier	u		1232810	1					
ANR	1234389	Identifier	call		1232810	1					
ANR	1234390	Identifier	name		1232810	1					
ANR	1234391	Argument	tok -> u . call . name_end		1232810	1					
ANR	1234392	MemberAccess	tok -> u . call . name_end		1232810	0					
ANR	1234393	MemberAccess	tok -> u . call		1232810	0					
ANR	1234394	PtrMemberAccess	tok -> u		1232810	0					
ANR	1234395	Identifier	tok		1232810	0					
ANR	1234396	Identifier	u		1232810	1					
ANR	1234397	Identifier	call		1232810	1					
ANR	1234398	Identifier	name_end		1232810	1					
ANR	1234399	Argument	gnum		1232810	2					
ANR	1234400	Identifier	gnum		1232810	0					
ANR	1234401	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( * np )	5338:6:120293:120322	1232810	3	True				
ANR	1234402	CallExpression	CHECK_NULL_RETURN_MEMERR ( * np )		1232810	0					
ANR	1234403	Callee	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1234404	Identifier	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1234405	ArgumentList	* np		1232810	1					
ANR	1234406	Argument	* np		1232810	0					
ANR	1234407	UnaryOperationExpression	* np		1232810	0					
ANR	1234408	UnaryOperator	*		1232810	0					
ANR	1234409	Identifier	np		1232810	1					
ANR	1234410	ExpressionStatement	env -> num_call ++	5339:6:120330:120345	1232810	4	True				
ANR	1234411	PostIncDecOperationExpression	env -> num_call ++		1232810	0					
ANR	1234412	PtrMemberAccess	env -> num_call		1232810	0					
ANR	1234413	Identifier	env		1232810	0					
ANR	1234414	Identifier	num_call		1232810	1					
ANR	1234415	IncDec	++		1232810	1					
ANR	1234416	BreakStatement	break ;	5341:4:120357:120362	1232810	115	True				
ANR	1234417	Label	case TK_ANCHOR :	5344:2:120374:120388	1232810	116	True				
ANR	1234418	Identifier	TK_ANCHOR		1232810	0					
ANR	1234419	ExpressionStatement	* np = onig_node_new_anchor ( tok -> u . anchor )	5345:4:120394:120435	1232810	117	True				
ANR	1234420	AssignmentExpression	* np = onig_node_new_anchor ( tok -> u . anchor )		1232810	0		=			
ANR	1234421	UnaryOperationExpression	* np		1232810	0					
ANR	1234422	UnaryOperator	*		1232810	0					
ANR	1234423	Identifier	np		1232810	1					
ANR	1234424	CallExpression	onig_node_new_anchor ( tok -> u . anchor )		1232810	1					
ANR	1234425	Callee	onig_node_new_anchor		1232810	0					
ANR	1234426	Identifier	onig_node_new_anchor		1232810	0					
ANR	1234427	ArgumentList	tok -> u . anchor		1232810	1					
ANR	1234428	Argument	tok -> u . anchor		1232810	0					
ANR	1234429	MemberAccess	tok -> u . anchor		1232810	0					
ANR	1234430	PtrMemberAccess	tok -> u		1232810	0					
ANR	1234431	Identifier	tok		1232810	0					
ANR	1234432	Identifier	u		1232810	1					
ANR	1234433	Identifier	anchor		1232810	1					
ANR	1234434	BreakStatement	break ;	5346:4:120441:120446	1232810	118	True				
ANR	1234435	Label	case TK_OP_REPEAT :	5348:2:120451:120468	1232810	119	True				
ANR	1234436	Identifier	TK_OP_REPEAT		1232810	0					
ANR	1234437	Label	case TK_INTERVAL :	5349:2:120472:120488	1232810	120	True				
ANR	1234438	Identifier	TK_INTERVAL		1232810	0					
ANR	1234439	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS ) )"		1232810	121					
ANR	1234440	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS )"	5350:8:120498:120557	1232810	0	True				
ANR	1234441	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS )"		1232810	0					
ANR	1234442	Callee	IS_SYNTAX_BV		1232810	0					
ANR	1234443	Identifier	IS_SYNTAX_BV		1232810	0					
ANR	1234444	ArgumentList	env -> syntax		1232810	1					
ANR	1234445	Argument	env -> syntax		1232810	0					
ANR	1234446	PtrMemberAccess	env -> syntax		1232810	0					
ANR	1234447	Identifier	env		1232810	0					
ANR	1234448	Identifier	syntax		1232810	1					
ANR	1234449	Argument	ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS		1232810	1					
ANR	1234450	Identifier	ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS		1232810	0					
ANR	1234451	CompoundStatement		312:70:7674:7674	1232810	1					
ANR	1234452	IfStatement	"if ( IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS ) )"		1232810	0					
ANR	1234453	Condition	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS )"	5351:10:120572:120633	1232810	0	True				
ANR	1234454	CallExpression	"IS_SYNTAX_BV ( env -> syntax , ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS )"		1232810	0					
ANR	1234455	Callee	IS_SYNTAX_BV		1232810	0					
ANR	1234456	Identifier	IS_SYNTAX_BV		1232810	0					
ANR	1234457	ArgumentList	env -> syntax		1232810	1					
ANR	1234458	Argument	env -> syntax		1232810	0					
ANR	1234459	PtrMemberAccess	env -> syntax		1232810	0					
ANR	1234460	Identifier	env		1232810	0					
ANR	1234461	Identifier	syntax		1232810	1					
ANR	1234462	Argument	ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS		1232810	1					
ANR	1234463	Identifier	ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS		1232810	0					
ANR	1234464	ReturnStatement	return ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED ;	5352:1:120637:120691	1232810	1	True				
ANR	1234465	Identifier	ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED		1232810	0					
ANR	1234466	ElseStatement	else		1232810	0					
ANR	1234467	ExpressionStatement	* np = node_new_empty ( )	5354:1:120705:120727	1232810	0	True				
ANR	1234468	AssignmentExpression	* np = node_new_empty ( )		1232810	0		=			
ANR	1234469	UnaryOperationExpression	* np		1232810	0					
ANR	1234470	UnaryOperator	*		1232810	0					
ANR	1234471	Identifier	np		1232810	1					
ANR	1234472	CallExpression	node_new_empty ( )		1232810	1					
ANR	1234473	Callee	node_new_empty		1232810	0					
ANR	1234474	Identifier	node_new_empty		1232810	0					
ANR	1234475	ArgumentList			1232810	1					
ANR	1234476	ElseStatement	else		1232810	0					
ANR	1234477	CompoundStatement		318:9:7858:7858	1232810	0					
ANR	1234478	GotoStatement	goto tk_byte ;	5357:6:120752:120764	1232810	0	True				
ANR	1234479	Identifier	tk_byte		1232810	0					
ANR	1234480	BreakStatement	break ;	5359:4:120776:120781	1232810	122	True				
ANR	1234481	Label	default :	5361:2:120786:120793	1232810	123	True				
ANR	1234482	Identifier	default		1232810	0					
ANR	1234483	ReturnStatement	return ONIGERR_PARSER_BUG ;	5362:4:120799:120824	1232810	124	True				
ANR	1234484	Identifier	ONIGERR_PARSER_BUG		1232810	0					
ANR	1234485	BreakStatement	break ;	5363:4:120830:120835	1232810	125	True				
ANR	1234486	CompoundStatement		328:2:7958:7958	1232810	6					
ANR	1234487	ExpressionStatement	targetp = np	5367:4:120850:120862	1232810	0	True				
ANR	1234488	AssignmentExpression	targetp = np		1232810	0		=			
ANR	1234489	Identifier	targetp		1232810	0					
ANR	1234490	Identifier	np		1232810	1					
ANR	1234491	Label	re_entry :	5369:2:120867:120875	1232810	1	True				
ANR	1234492	Identifier	re_entry		1232810	0					
ANR	1234493	ExpressionStatement	"r = fetch_token ( tok , src , end , env )"	5370:4:120881:120916	1232810	2	True				
ANR	1234494	AssignmentExpression	"r = fetch_token ( tok , src , end , env )"		1232810	0		=			
ANR	1234495	Identifier	r		1232810	0					
ANR	1234496	CallExpression	"fetch_token ( tok , src , end , env )"		1232810	1					
ANR	1234497	Callee	fetch_token		1232810	0					
ANR	1234498	Identifier	fetch_token		1232810	0					
ANR	1234499	ArgumentList	tok		1232810	1					
ANR	1234500	Argument	tok		1232810	0					
ANR	1234501	Identifier	tok		1232810	0					
ANR	1234502	Argument	src		1232810	1					
ANR	1234503	Identifier	src		1232810	0					
ANR	1234504	Argument	end		1232810	2					
ANR	1234505	Identifier	end		1232810	0					
ANR	1234506	Argument	env		1232810	3					
ANR	1234507	Identifier	env		1232810	0					
ANR	1234508	IfStatement	if ( r < 0 )		1232810	3					
ANR	1234509	Condition	r < 0	5371:8:120926:120930	1232810	0	True				
ANR	1234510	RelationalExpression	r < 0		1232810	0		<			
ANR	1234511	Identifier	r		1232810	0					
ANR	1234512	PrimaryExpression	0		1232810	1					
ANR	1234513	ReturnStatement	return r ;	5371:15:120933:120941	1232810	1	True				
ANR	1234514	Identifier	r		1232810	0					
ANR	1234515	Label	repeat :	5373:2:120946:120952	1232810	4	True				
ANR	1234516	Identifier	repeat		1232810	0					
ANR	1234517	IfStatement	if ( r == TK_OP_REPEAT || r == TK_INTERVAL )		1232810	5					
ANR	1234518	Condition	r == TK_OP_REPEAT || r == TK_INTERVAL	5374:8:120962:120998	1232810	0	True				
ANR	1234519	OrExpression	r == TK_OP_REPEAT || r == TK_INTERVAL		1232810	0		||			
ANR	1234520	EqualityExpression	r == TK_OP_REPEAT		1232810	0		==			
ANR	1234521	Identifier	r		1232810	0					
ANR	1234522	Identifier	TK_OP_REPEAT		1232810	1					
ANR	1234523	EqualityExpression	r == TK_INTERVAL		1232810	1		==			
ANR	1234524	Identifier	r		1232810	0					
ANR	1234525	Identifier	TK_INTERVAL		1232810	1					
ANR	1234526	CompoundStatement		336:47:8115:8115	1232810	1					
ANR	1234527	IfStatement	if ( is_invalid_quantifier_target ( * targetp ) )		1232810	0					
ANR	1234528	Condition	is_invalid_quantifier_target ( * targetp )	5375:10:121013:121050	1232810	0	True				
ANR	1234529	CallExpression	is_invalid_quantifier_target ( * targetp )		1232810	0					
ANR	1234530	Callee	is_invalid_quantifier_target		1232810	0					
ANR	1234531	Identifier	is_invalid_quantifier_target		1232810	0					
ANR	1234532	ArgumentList	* targetp		1232810	1					
ANR	1234533	Argument	* targetp		1232810	0					
ANR	1234534	UnaryOperationExpression	* targetp		1232810	0					
ANR	1234535	UnaryOperator	*		1232810	0					
ANR	1234536	Identifier	targetp		1232810	1					
ANR	1234537	ReturnStatement	return ONIGERR_TARGET_OF_REPEAT_OPERATOR_INVALID ;	5376:1:121054:121102	1232810	1	True				
ANR	1234538	Identifier	ONIGERR_TARGET_OF_REPEAT_OPERATOR_INVALID		1232810	0					
ANR	1234539	ExpressionStatement	"qn = node_new_quantifier ( tok -> u . repeat . lower , tok -> u . repeat . upper , ( r == TK_INTERVAL ? 1 : 0 ) )"	5378:6:121111:121215	1232810	1	True				
ANR	1234540	AssignmentExpression	"qn = node_new_quantifier ( tok -> u . repeat . lower , tok -> u . repeat . upper , ( r == TK_INTERVAL ? 1 : 0 ) )"		1232810	0		=			
ANR	1234541	Identifier	qn		1232810	0					
ANR	1234542	CallExpression	"node_new_quantifier ( tok -> u . repeat . lower , tok -> u . repeat . upper , ( r == TK_INTERVAL ? 1 : 0 ) )"		1232810	1					
ANR	1234543	Callee	node_new_quantifier		1232810	0					
ANR	1234544	Identifier	node_new_quantifier		1232810	0					
ANR	1234545	ArgumentList	tok -> u . repeat . lower		1232810	1					
ANR	1234546	Argument	tok -> u . repeat . lower		1232810	0					
ANR	1234547	MemberAccess	tok -> u . repeat . lower		1232810	0					
ANR	1234548	MemberAccess	tok -> u . repeat		1232810	0					
ANR	1234549	PtrMemberAccess	tok -> u		1232810	0					
ANR	1234550	Identifier	tok		1232810	0					
ANR	1234551	Identifier	u		1232810	1					
ANR	1234552	Identifier	repeat		1232810	1					
ANR	1234553	Identifier	lower		1232810	1					
ANR	1234554	Argument	tok -> u . repeat . upper		1232810	1					
ANR	1234555	MemberAccess	tok -> u . repeat . upper		1232810	0					
ANR	1234556	MemberAccess	tok -> u . repeat		1232810	0					
ANR	1234557	PtrMemberAccess	tok -> u		1232810	0					
ANR	1234558	Identifier	tok		1232810	0					
ANR	1234559	Identifier	u		1232810	1					
ANR	1234560	Identifier	repeat		1232810	1					
ANR	1234561	Identifier	upper		1232810	1					
ANR	1234562	Argument	r == TK_INTERVAL ? 1 : 0		1232810	2					
ANR	1234563	ConditionalExpression	r == TK_INTERVAL ? 1 : 0		1232810	0					
ANR	1234564	Condition	r == TK_INTERVAL		1232810	0					
ANR	1234565	EqualityExpression	r == TK_INTERVAL		1232810	0		==			
ANR	1234566	Identifier	r		1232810	0					
ANR	1234567	Identifier	TK_INTERVAL		1232810	1					
ANR	1234568	PrimaryExpression	1		1232810	1					
ANR	1234569	PrimaryExpression	0		1232810	2					
ANR	1234570	ExpressionStatement	CHECK_NULL_RETURN_MEMERR ( qn )	5380:6:121223:121251	1232810	2	True				
ANR	1234571	CallExpression	CHECK_NULL_RETURN_MEMERR ( qn )		1232810	0					
ANR	1234572	Callee	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1234573	Identifier	CHECK_NULL_RETURN_MEMERR		1232810	0					
ANR	1234574	ArgumentList	qn		1232810	1					
ANR	1234575	Argument	qn		1232810	0					
ANR	1234576	Identifier	qn		1232810	0					
ANR	1234577	ExpressionStatement	NQTFR ( qn ) -> greedy = tok -> u . repeat . greedy	5381:6:121259:121299	1232810	3	True				
ANR	1234578	AssignmentExpression	NQTFR ( qn ) -> greedy = tok -> u . repeat . greedy		1232810	0		=			
ANR	1234579	PtrMemberAccess	NQTFR ( qn ) -> greedy		1232810	0					
ANR	1234580	CallExpression	NQTFR ( qn )		1232810	0					
ANR	1234581	Callee	NQTFR		1232810	0					
ANR	1234582	Identifier	NQTFR		1232810	0					
ANR	1234583	ArgumentList	qn		1232810	1					
ANR	1234584	Argument	qn		1232810	0					
ANR	1234585	Identifier	qn		1232810	0					
ANR	1234586	Identifier	greedy		1232810	1					
ANR	1234587	MemberAccess	tok -> u . repeat . greedy		1232810	1					
ANR	1234588	MemberAccess	tok -> u . repeat		1232810	0					
ANR	1234589	PtrMemberAccess	tok -> u		1232810	0					
ANR	1234590	Identifier	tok		1232810	0					
ANR	1234591	Identifier	u		1232810	1					
ANR	1234592	Identifier	repeat		1232810	1					
ANR	1234593	Identifier	greedy		1232810	1					
ANR	1234594	ExpressionStatement	"r = set_quantifier ( qn , * targetp , group , env )"	5382:6:121307:121351	1232810	4	True				
ANR	1234595	AssignmentExpression	"r = set_quantifier ( qn , * targetp , group , env )"		1232810	0		=			
ANR	1234596	Identifier	r		1232810	0					
ANR	1234597	CallExpression	"set_quantifier ( qn , * targetp , group , env )"		1232810	1					
ANR	1234598	Callee	set_quantifier		1232810	0					
ANR	1234599	Identifier	set_quantifier		1232810	0					
ANR	1234600	ArgumentList	qn		1232810	1					
ANR	1234601	Argument	qn		1232810	0					
ANR	1234602	Identifier	qn		1232810	0					
ANR	1234603	Argument	* targetp		1232810	1					
ANR	1234604	UnaryOperationExpression	* targetp		1232810	0					
ANR	1234605	UnaryOperator	*		1232810	0					
ANR	1234606	Identifier	targetp		1232810	1					
ANR	1234607	Argument	group		1232810	2					
ANR	1234608	Identifier	group		1232810	0					
ANR	1234609	Argument	env		1232810	3					
ANR	1234610	Identifier	env		1232810	0					
ANR	1234611	IfStatement	if ( r < 0 )		1232810	5					
ANR	1234612	Condition	r < 0	5383:10:121363:121367	1232810	0	True				
ANR	1234613	RelationalExpression	r < 0		1232810	0		<			
ANR	1234614	Identifier	r		1232810	0					
ANR	1234615	PrimaryExpression	0		1232810	1					
ANR	1234616	CompoundStatement		345:17:8484:8484	1232810	1					
ANR	1234617	ExpressionStatement	onig_node_free ( qn )	5384:1:121373:121391	1232810	0	True				
ANR	1234618	CallExpression	onig_node_free ( qn )		1232810	0					
ANR	1234619	Callee	onig_node_free		1232810	0					
ANR	1234620	Identifier	onig_node_free		1232810	0					
ANR	1234621	ArgumentList	qn		1232810	1					
ANR	1234622	Argument	qn		1232810	0					
ANR	1234623	Identifier	qn		1232810	0					
ANR	1234624	ReturnStatement	return r ;	5385:1:121394:121402	1232810	1	True				
ANR	1234625	Identifier	r		1232810	0					
ANR	1234626	IfStatement	if ( tok -> u . repeat . possessive != 0 )		1232810	6					
ANR	1234627	Condition	tok -> u . repeat . possessive != 0	5388:10:121423:121451	1232810	0	True				
ANR	1234628	EqualityExpression	tok -> u . repeat . possessive != 0		1232810	0		!=			
ANR	1234629	MemberAccess	tok -> u . repeat . possessive		1232810	0					
ANR	1234630	MemberAccess	tok -> u . repeat		1232810	0					
ANR	1234631	PtrMemberAccess	tok -> u		1232810	0					
ANR	1234632	Identifier	tok		1232810	0					
ANR	1234633	Identifier	u		1232810	1					
ANR	1234634	Identifier	repeat		1232810	1					
ANR	1234635	Identifier	possessive		1232810	1					
ANR	1234636	PrimaryExpression	0		1232810	1					
ANR	1234637	CompoundStatement		351:1:8571:8579	1232810	1					
ANR	1234638	IdentifierDeclStatement	Node * en ;	5389:1:121457:121465	1232810	0	True				
ANR	1234639	IdentifierDecl	* en		1232810	0					
ANR	1234640	IdentifierDeclType	Node *		1232810	0					
ANR	1234641	Identifier	en		1232810	1					
ANR	1234642	ExpressionStatement	en = node_new_enclose ( ENCLOSE_STOP_BACKTRACK )	5390:1:121468:121513	1232810	1	True				
ANR	1234643	AssignmentExpression	en = node_new_enclose ( ENCLOSE_STOP_BACKTRACK )		1232810	0		=			
ANR	1234644	Identifier	en		1232810	0					
ANR	1234645	CallExpression	node_new_enclose ( ENCLOSE_STOP_BACKTRACK )		1232810	1					
ANR	1234646	Callee	node_new_enclose		1232810	0					
ANR	1234647	Identifier	node_new_enclose		1232810	0					
ANR	1234648	ArgumentList	ENCLOSE_STOP_BACKTRACK		1232810	1					
ANR	1234649	Argument	ENCLOSE_STOP_BACKTRACK		1232810	0					
ANR	1234650	Identifier	ENCLOSE_STOP_BACKTRACK		1232810	0					
ANR	1234651	IfStatement	if ( IS_NULL ( en ) )		1232810	2					
ANR	1234652	Condition	IS_NULL ( en )	5391:5:121520:121530	1232810	0	True				
ANR	1234653	CallExpression	IS_NULL ( en )		1232810	0					
ANR	1234654	Callee	IS_NULL		1232810	0					
ANR	1234655	Identifier	IS_NULL		1232810	0					
ANR	1234656	ArgumentList	en		1232810	1					
ANR	1234657	Argument	en		1232810	0					
ANR	1234658	Identifier	en		1232810	0					
ANR	1234659	CompoundStatement		353:18:8647:8647	1232810	1					
ANR	1234660	ExpressionStatement	onig_node_free ( qn )	5392:3:121538:121556	1232810	0	True				
ANR	1234661	CallExpression	onig_node_free ( qn )		1232810	0					
ANR	1234662	Callee	onig_node_free		1232810	0					
ANR	1234663	Identifier	onig_node_free		1232810	0					
ANR	1234664	ArgumentList	qn		1232810	1					
ANR	1234665	Argument	qn		1232810	0					
ANR	1234666	Identifier	qn		1232810	0					
ANR	1234667	ReturnStatement	return ONIGERR_MEMORY ;	5393:3:121561:121582	1232810	1	True				
ANR	1234668	Identifier	ONIGERR_MEMORY		1232810	0					
ANR	1234669	ExpressionStatement	NENCLOSE ( en ) -> target = qn	5395:1:121588:121613	1232810	3	True				
ANR	1234670	AssignmentExpression	NENCLOSE ( en ) -> target = qn		1232810	0		=			
ANR	1234671	PtrMemberAccess	NENCLOSE ( en ) -> target		1232810	0					
ANR	1234672	CallExpression	NENCLOSE ( en )		1232810	0					
ANR	1234673	Callee	NENCLOSE		1232810	0					
ANR	1234674	Identifier	NENCLOSE		1232810	0					
ANR	1234675	ArgumentList	en		1232810	1					
ANR	1234676	Argument	en		1232810	0					
ANR	1234677	Identifier	en		1232810	0					
ANR	1234678	Identifier	target		1232810	1					
ANR	1234679	Identifier	qn		1232810	1					
ANR	1234680	ExpressionStatement	qn = en	5396:1:121616:121623	1232810	4	True				
ANR	1234681	AssignmentExpression	qn = en		1232810	0		=			
ANR	1234682	Identifier	qn		1232810	0					
ANR	1234683	Identifier	en		1232810	1					
ANR	1234684	IfStatement	if ( r == 0 )		1232810	7					
ANR	1234685	Condition	r == 0	5399:10:121644:121649	1232810	0	True				
ANR	1234686	EqualityExpression	r == 0		1232810	0		==			
ANR	1234687	Identifier	r		1232810	0					
ANR	1234688	PrimaryExpression	0		1232810	1					
ANR	1234689	CompoundStatement		361:18:8766:8766	1232810	1					
ANR	1234690	ExpressionStatement	* targetp = qn	5400:1:121655:121668	1232810	0	True				
ANR	1234691	AssignmentExpression	* targetp = qn		1232810	0		=			
ANR	1234692	UnaryOperationExpression	* targetp		1232810	0					
ANR	1234693	UnaryOperator	*		1232810	0					
ANR	1234694	Identifier	targetp		1232810	1					
ANR	1234695	Identifier	qn		1232810	1					
ANR	1234696	ElseStatement	else		1232810	0					
ANR	1234697	IfStatement	if ( r == 1 )		1232810	0					
ANR	1234698	Condition	r == 1	5402:15:121693:121698	1232810	0	True				
ANR	1234699	EqualityExpression	r == 1		1232810	0		==			
ANR	1234700	Identifier	r		1232810	0					
ANR	1234701	PrimaryExpression	1		1232810	1					
ANR	1234702	CompoundStatement		364:23:8815:8815	1232810	1					
ANR	1234703	ExpressionStatement	onig_node_free ( qn )	5403:1:121704:121722	1232810	0	True				
ANR	1234704	CallExpression	onig_node_free ( qn )		1232810	0					
ANR	1234705	Callee	onig_node_free		1232810	0					
ANR	1234706	Identifier	onig_node_free		1232810	0					
ANR	1234707	ArgumentList	qn		1232810	1					
ANR	1234708	Argument	qn		1232810	0					
ANR	1234709	Identifier	qn		1232810	0					
ANR	1234710	ElseStatement	else		1232810	0					
ANR	1234711	IfStatement	if ( r == 2 )		1232810	0					
ANR	1234712	Condition	r == 2	5405:15:121747:121752	1232810	0	True				
ANR	1234713	EqualityExpression	r == 2		1232810	0		==			
ANR	1234714	Identifier	r		1232810	0					
ANR	1234715	PrimaryExpression	2		1232810	1					
ANR	1234716	CompoundStatement		368:1:8897:8906	1232810	1					
ANR	1234717	IdentifierDeclStatement	Node * tmp ;	5406:1:121783:121792	1232810	0	True				
ANR	1234718	IdentifierDecl	* tmp		1232810	0					
ANR	1234719	IdentifierDeclType	Node *		1232810	0					
ANR	1234720	Identifier	tmp		1232810	1					
ANR	1234721	ExpressionStatement	"* targetp = node_new_list ( * targetp , NULL )"	5408:1:121796:121836	1232810	1	True				
ANR	1234722	AssignmentExpression	"* targetp = node_new_list ( * targetp , NULL )"		1232810	0		=			
ANR	1234723	UnaryOperationExpression	* targetp		1232810	0					
ANR	1234724	UnaryOperator	*		1232810	0					
ANR	1234725	Identifier	targetp		1232810	1					
ANR	1234726	CallExpression	"node_new_list ( * targetp , NULL )"		1232810	1					
ANR	1234727	Callee	node_new_list		1232810	0					
ANR	1234728	Identifier	node_new_list		1232810	0					
ANR	1234729	ArgumentList	* targetp		1232810	1					
ANR	1234730	Argument	* targetp		1232810	0					
ANR	1234731	UnaryOperationExpression	* targetp		1232810	0					
ANR	1234732	UnaryOperator	*		1232810	0					
ANR	1234733	Identifier	targetp		1232810	1					
ANR	1234734	Argument	NULL		1232810	1					
ANR	1234735	Identifier	NULL		1232810	0					
ANR	1234736	IfStatement	if ( IS_NULL ( * targetp ) )		1232810	2					
ANR	1234737	Condition	IS_NULL ( * targetp )	5409:5:121843:121859	1232810	0	True				
ANR	1234738	CallExpression	IS_NULL ( * targetp )		1232810	0					
ANR	1234739	Callee	IS_NULL		1232810	0					
ANR	1234740	Identifier	IS_NULL		1232810	0					
ANR	1234741	ArgumentList	* targetp		1232810	1					
ANR	1234742	Argument	* targetp		1232810	0					
ANR	1234743	UnaryOperationExpression	* targetp		1232810	0					
ANR	1234744	UnaryOperator	*		1232810	0					
ANR	1234745	Identifier	targetp		1232810	1					
ANR	1234746	CompoundStatement		371:24:8976:8976	1232810	1					
ANR	1234747	ExpressionStatement	onig_node_free ( qn )	5410:3:121867:121885	1232810	0	True				
ANR	1234748	CallExpression	onig_node_free ( qn )		1232810	0					
ANR	1234749	Callee	onig_node_free		1232810	0					
ANR	1234750	Identifier	onig_node_free		1232810	0					
ANR	1234751	ArgumentList	qn		1232810	1					
ANR	1234752	Argument	qn		1232810	0					
ANR	1234753	Identifier	qn		1232810	0					
ANR	1234754	ReturnStatement	return ONIGERR_MEMORY ;	5411:3:121890:121911	1232810	1	True				
ANR	1234755	Identifier	ONIGERR_MEMORY		1232810	0					
ANR	1234756	ExpressionStatement	"tmp = NCDR ( * targetp ) = node_new_list ( qn , NULL )"	5413:1:121917:121963	1232810	3	True				
ANR	1234757	AssignmentExpression	"tmp = NCDR ( * targetp ) = node_new_list ( qn , NULL )"		1232810	0		=			
ANR	1234758	Identifier	tmp		1232810	0					
ANR	1234759	AssignmentExpression	"NCDR ( * targetp ) = node_new_list ( qn , NULL )"		1232810	1		=			
ANR	1234760	CallExpression	NCDR ( * targetp )		1232810	0					
ANR	1234761	Callee	NCDR		1232810	0					
ANR	1234762	Identifier	NCDR		1232810	0					
ANR	1234763	ArgumentList	* targetp		1232810	1					
ANR	1234764	Argument	* targetp		1232810	0					
ANR	1234765	UnaryOperationExpression	* targetp		1232810	0					
ANR	1234766	UnaryOperator	*		1232810	0					
ANR	1234767	Identifier	targetp		1232810	1					
ANR	1234768	CallExpression	"node_new_list ( qn , NULL )"		1232810	1					
ANR	1234769	Callee	node_new_list		1232810	0					
ANR	1234770	Identifier	node_new_list		1232810	0					
ANR	1234771	ArgumentList	qn		1232810	1					
ANR	1234772	Argument	qn		1232810	0					
ANR	1234773	Identifier	qn		1232810	0					
ANR	1234774	Argument	NULL		1232810	1					
ANR	1234775	Identifier	NULL		1232810	0					
ANR	1234776	IfStatement	if ( IS_NULL ( tmp ) )		1232810	4					
ANR	1234777	Condition	IS_NULL ( tmp )	5414:5:121970:121981	1232810	0	True				
ANR	1234778	CallExpression	IS_NULL ( tmp )		1232810	0					
ANR	1234779	Callee	IS_NULL		1232810	0					
ANR	1234780	Identifier	IS_NULL		1232810	0					
ANR	1234781	ArgumentList	tmp		1232810	1					
ANR	1234782	Argument	tmp		1232810	0					
ANR	1234783	Identifier	tmp		1232810	0					
ANR	1234784	CompoundStatement		376:19:9098:9098	1232810	1					
ANR	1234785	ExpressionStatement	onig_node_free ( qn )	5415:3:121989:122007	1232810	0	True				
ANR	1234786	CallExpression	onig_node_free ( qn )		1232810	0					
ANR	1234787	Callee	onig_node_free		1232810	0					
ANR	1234788	Identifier	onig_node_free		1232810	0					
ANR	1234789	ArgumentList	qn		1232810	1					
ANR	1234790	Argument	qn		1232810	0					
ANR	1234791	Identifier	qn		1232810	0					
ANR	1234792	ReturnStatement	return ONIGERR_MEMORY ;	5416:3:122012:122033	1232810	1	True				
ANR	1234793	Identifier	ONIGERR_MEMORY		1232810	0					
ANR	1234794	ExpressionStatement	targetp = & ( NCAR ( tmp ) )	5418:1:122039:122061	1232810	5	True				
ANR	1234795	AssignmentExpression	targetp = & ( NCAR ( tmp ) )		1232810	0		=			
ANR	1234796	Identifier	targetp		1232810	0					
ANR	1234797	UnaryOperationExpression	& ( NCAR ( tmp ) )		1232810	1					
ANR	1234798	UnaryOperator	&		1232810	0					
ANR	1234799	CallExpression	NCAR ( tmp )		1232810	1					
ANR	1234800	Callee	NCAR		1232810	0					
ANR	1234801	Identifier	NCAR		1232810	0					
ANR	1234802	ArgumentList	tmp		1232810	1					
ANR	1234803	Argument	tmp		1232810	0					
ANR	1234804	Identifier	tmp		1232810	0					
ANR	1234805	GotoStatement	goto re_entry ;	5420:6:122077:122090	1232810	8	True				
ANR	1234806	Identifier	re_entry		1232810	0					
ANR	1234807	ReturnStatement	return r ;	5424:2:122105:122113	1232810	7	True				
ANR	1234808	Identifier	r		1232810	0					
ANR	1234809	ReturnType	static int		1232810	1					
ANR	1234810	Identifier	parse_exp		1232810	2					
ANR	1234811	ParameterList	"Node * * np , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env"		1232810	3					
ANR	1234812	Parameter	Node * * np	5037:10:112806:112814	1232810	0	True				
ANR	1234813	ParameterType	Node * *		1232810	0					
ANR	1234814	Identifier	np		1232810	1					
ANR	1234815	Parameter	OnigToken * tok	5037:21:112817:112830	1232810	1	True				
ANR	1234816	ParameterType	OnigToken *		1232810	0					
ANR	1234817	Identifier	tok		1232810	1					
ANR	1234818	Parameter	int term	5037:37:112833:112840	1232810	2	True				
ANR	1234819	ParameterType	int		1232810	0					
ANR	1234820	Identifier	term		1232810	1					
ANR	1234821	Parameter	UChar * * src	5038:3:112846:112856	1232810	3	True				
ANR	1234822	ParameterType	UChar * *		1232810	0					
ANR	1234823	Identifier	src		1232810	1					
ANR	1234824	Parameter	UChar * end	5038:16:112859:112868	1232810	4	True				
ANR	1234825	ParameterType	UChar *		1232810	0					
ANR	1234826	Identifier	end		1232810	1					
ANR	1234827	Parameter	ScanEnv * env	5038:28:112871:112882	1232810	5	True				
ANR	1234828	ParameterType	ScanEnv *		1232810	0					
ANR	1234829	Identifier	env		1232810	1					
ANR	1234830	CFGEntryNode	ENTRY		1232810		True				
ANR	1234831	CFGExitNode	EXIT		1232810		True				
ANR	1234832	Symbol	iarg . cc		1232810						
ANR	1234833	Symbol	node_new_quantifier		1232810						
ANR	1234834	Symbol	node_new_cclass		1232810						
ANR	1234835	Symbol	prev		1232810						
ANR	1234836	Symbol	NQTFR		1232810						
ANR	1234837	Symbol	parse_char_class		1232810						
ANR	1234838	Symbol	tok -> type		1232810						
ANR	1234839	Symbol	len		1232810						
ANR	1234840	Symbol	TK_INTERVAL		1232810						
ANR	1234841	Symbol	xmalloc		1232810						
ANR	1234842	Symbol	tmp		1232810						
ANR	1234843	Symbol	BACKREF_REL_TO_ABS		1232810						
ANR	1234844	Symbol	find_str_position		1232810						
ANR	1234845	Symbol	iarg . alt_root		1232810						
ANR	1234846	Symbol	parse_subexp		1232810						
ANR	1234847	Symbol	qn		1232810						
ANR	1234848	Symbol	tok -> escaped		1232810						
ANR	1234849	Symbol	ONIGERR_TARGET_OF_REPEAT_OPERATOR_NOT_SPECIFIED		1232810						
ANR	1234850	Symbol	node_new_call		1232810						
ANR	1234851	Symbol	work		1232810						
ANR	1234852	Symbol	NSTR		1232810						
ANR	1234853	Symbol	THRESHOLD_RANGE_NUM_FOR_SHARE_CCLASS		1232810						
ANR	1234854	Symbol	NCDR		1232810						
ANR	1234855	Symbol	ONIGERR_MEMORY		1232810						
ANR	1234856	Symbol	ONIGENC_APPLY_ALL_CASE_FOLD		1232810						
ANR	1234857	Symbol	ONIGERR_TOO_SHORT_MULTI_BYTE_STRING		1232810						
ANR	1234858	Symbol	* end_op		1232810						
ANR	1234859	Symbol	env -> num_call		1232810						
ANR	1234860	Symbol	* tok		1232810						
ANR	1234861	Symbol	iarg . ptail		1232810						
ANR	1234862	Symbol	onig_node_new_anchor		1232810						
ANR	1234863	Symbol	tok -> u . c		1232810						
ANR	1234864	Symbol	node_new_str_raw		1232810						
ANR	1234865	Symbol	new_key		1232810						
ANR	1234866	Symbol	iarg . env		1232810						
ANR	1234867	Symbol	& key		1232810						
ANR	1234868	Symbol	tok -> u . call . name		1232810						
ANR	1234869	Symbol	ONIGENC_MBC_MINLEN		1232810						
ANR	1234870	Symbol	env -> enc		1232810						
ANR	1234871	Symbol	node_new_enclose		1232810						
ANR	1234872	Symbol	tok		1232810						
ANR	1234873	Symbol	tok -> u . code		1232810						
ANR	1234874	Symbol	end_op		1232810						
ANR	1234875	Symbol	parse_char_property		1232810						
ANR	1234876	Symbol	REPEAT_INFINITE		1232810						
ANR	1234877	Symbol	parse_enclose		1232810						
ANR	1234878	Symbol	NENCLOSE		1232810						
ANR	1234879	Symbol	tok -> u . anchor		1232810						
ANR	1234880	Symbol	term		1232810						
ANR	1234881	Symbol	& iarg . alt_root		1232810						
ANR	1234882	Symbol	fetch_token		1232810						
ANR	1234883	Symbol	key		1232810						
ANR	1234884	Symbol	cc		1232810						
ANR	1234885	Symbol	& nextp		1232810						
ANR	1234886	Symbol	node_new_list		1232810						
ANR	1234887	Symbol	tok -> backp		1232810						
ANR	1234888	Symbol	NENCLOSE ( en ) -> target		1232810						
ANR	1234889	Symbol	* np		1232810						
ANR	1234890	Symbol	node_new_str		1232810						
ANR	1234891	Symbol	enclen		1232810						
ANR	1234892	Symbol	MC_ESC		1232810						
ANR	1234893	Symbol	NQTFR ( qn ) -> target		1232810						
ANR	1234894	Symbol	r		1232810						
ANR	1234895	Symbol	buf		1232810						
ANR	1234896	Symbol	ONIG_SYN_CONTEXT_INVALID_REPEAT_OPS		1232810						
ANR	1234897	Symbol	ONIGERR_UNMATCHED_CLOSE_PARENTHESIS		1232810						
ANR	1234898	Symbol	TK_SUBEXP_CLOSE		1232810						
ANR	1234899	Symbol	ONIGERR_TARGET_OF_REPEAT_OPERATOR_INVALID		1232810						
ANR	1234900	Symbol	ONIGENC_CODE_RANGE_NUM		1232810						
ANR	1234901	Symbol	IS_IGNORECASE		1232810						
ANR	1234902	Symbol	env -> case_fold_flag		1232810						
ANR	1234903	Symbol	& target		1232810						
ANR	1234904	Symbol	NENCLOSE ( * np ) -> target		1232810						
ANR	1234905	Symbol	mbr		1232810						
ANR	1234906	Symbol	iarg		1232810						
ANR	1234907	Symbol	tok -> u . repeat . possessive		1232810						
ANR	1234908	Symbol	num		1232810						
ANR	1234909	Symbol	tok -> u . call . gnum		1232810						
ANR	1234910	Symbol	NCCLASS		1232810						
ANR	1234911	Symbol	* src		1232810						
ANR	1234912	Symbol	gnum		1232810						
ANR	1234913	Symbol	env -> option		1232810						
ANR	1234914	Symbol	sb_out		1232810						
ANR	1234915	Symbol	key . enc		1232810						
ANR	1234916	Symbol	NENCLOSE ( * np ) -> option		1232810						
ANR	1234917	Symbol	tok -> u . prop . not		1232810						
ANR	1234918	Symbol	key . not		1232810						
ANR	1234919	Symbol	IS_SYNTAX_BV		1232810						
ANR	1234920	Symbol	rem		1232810						
ANR	1234921	Symbol	& sb_out		1232810						
ANR	1234922	Symbol	TK_STRING		1232810						
ANR	1234923	Symbol	tok -> u . prop		1232810						
ANR	1234924	Symbol	node_new_anychar		1232810						
ANR	1234925	Symbol	group		1232810						
ANR	1234926	Symbol	NULL		1232810						
ANR	1234927	Symbol	& mbr		1232810						
ANR	1234928	Symbol	TK_OP_REPEAT		1232810						
ANR	1234929	Symbol	* targetp		1232810						
ANR	1234930	Symbol	ENCLOSE_STOP_BACKTRACK		1232810						
ANR	1234931	Symbol	* env		1232810						
ANR	1234932	Symbol	en		1232810						
ANR	1234933	Symbol	* NSTR		1232810						
ANR	1234934	Symbol	key . type		1232810						
ANR	1234935	Symbol	env -> syntax		1232810						
ANR	1234936	Symbol	ONIGERR_PARSER_BUG		1232810						
ANR	1234937	Symbol	onig_st_init_table_with_size		1232810						
ANR	1234938	Symbol	targetp		1232810						
ANR	1234939	Symbol	is_invalid_quantifier_target		1232810						
ANR	1234940	Symbol	node_new_str_raw_char		1232810						
ANR	1234941	Symbol	ONIG_SYN_ALLOW_UNMATCHED_CLOSE_SUBEXP		1232810						
ANR	1234942	Symbol	ONIGENC_CODE_TO_MBC		1232810						
ANR	1234943	Symbol	set_quantifier		1232810						
ANR	1234944	Symbol	NQTFR ( qn ) -> greedy		1232810						
ANR	1234945	Symbol	NULL_NODE		1232810						
ANR	1234946	Symbol	tok -> u . repeat . greedy		1232810						
ANR	1234947	Symbol	np		1232810						
ANR	1234948	Symbol	IS_NOT_NULL		1232810						
ANR	1234949	Symbol	ONIGERR_INVALID_BACKREF		1232810						
ANR	1234950	Symbol	node_new_cclass_by_codepoint_range		1232810						
ANR	1234951	Symbol	* NENCLOSE		1232810						
ANR	1234952	Symbol	node_new_ctype		1232810						
ANR	1234953	Symbol	tok -> u . call . name_end		1232810						
ANR	1234954	Symbol	& iarg		1232810						
ANR	1234955	Symbol	node_str_cat_char		1232810						
ANR	1234956	Symbol	qstart		1232810						
ANR	1234957	Symbol	tok -> u . backref . num		1232810						
ANR	1234958	Symbol	IS_NULL		1232810						
ANR	1234959	Symbol	OnigTypeCClassTable		1232810						
ANR	1234960	Symbol	* NQTFR		1232810						
ANR	1234961	Symbol	tok -> u . repeat . upper		1232810						
ANR	1234962	Symbol	tok -> u . backref		1232810						
ANR	1234963	Symbol	ONIGENC_GET_CTYPE_CODE_RANGE		1232810						
ANR	1234964	Symbol	i_apply_case_fold		1232810						
ANR	1234965	Symbol	end		1232810						
ANR	1234966	Symbol	tok -> u		1232810						
ANR	1234967	Symbol	& NCAR		1232810						
ANR	1234968	Symbol	nextp		1232810						
ANR	1234969	Symbol	tok -> u . call		1232810						
ANR	1234970	Symbol	onig_node_new_alt		1232810						
ANR	1234971	Symbol	tok -> u . repeat		1232810						
ANR	1234972	Symbol	src		1232810						
ANR	1234973	Symbol	NSTR ( * np ) -> s		1232810						
ANR	1234974	Symbol	& type_type_cclass_hash		1232810						
ANR	1234975	Symbol	env		1232810						
ANR	1234976	Symbol	node_new_empty		1232810						
ANR	1234977	Symbol	target		1232810						
ANR	1234978	Symbol	onig_node_str_cat		1232810						
ANR	1234979	Symbol	tok -> u . repeat . lower		1232810						
ANR	1234980	Symbol	tok -> u . prop . ctype		1232810						
ANR	1234981	Symbol	onig_st_lookup		1232810						
ANR	1234982	Symbol	ONIG_SYN_CONTEXT_INDEP_REPEAT_OPS		1232810						
ANR	1234983	Symbol	TK_RAW_BYTE		1232810						
ANR	1234984	Symbol	qend		1232810						
ANR	1234985	Function	parse_branch	5427:0:122118:122873							
ANR	1234986	FunctionDef	"parse_branch (Node * * top , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env)"		1234985	0					
ANR	1234987	CompoundStatement		5430:0:122225:122873	1234985	0					
ANR	1234988	IdentifierDeclStatement	int r ;	5431:2:122229:122234	1234985	0	True				
ANR	1234989	IdentifierDecl	r		1234985	0					
ANR	1234990	IdentifierDeclType	int		1234985	0					
ANR	1234991	Identifier	r		1234985	1					
ANR	1234992	IdentifierDeclStatement	"Node * node , * * headp ;"	5432:2:122238:122257	1234985	1	True				
ANR	1234993	IdentifierDecl	* node		1234985	0					
ANR	1234994	IdentifierDeclType	Node *		1234985	0					
ANR	1234995	Identifier	node		1234985	1					
ANR	1234996	IdentifierDecl	* * headp		1234985	1					
ANR	1234997	IdentifierDeclType	Node * *		1234985	0					
ANR	1234998	Identifier	headp		1234985	1					
ANR	1234999	ExpressionStatement	* top = NULL	5434:2:122262:122273	1234985	2	True				
ANR	1235000	AssignmentExpression	* top = NULL		1234985	0		=			
ANR	1235001	UnaryOperationExpression	* top		1234985	0					
ANR	1235002	UnaryOperator	*		1234985	0					
ANR	1235003	Identifier	top		1234985	1					
ANR	1235004	Identifier	NULL		1234985	1					
ANR	1235005	ExpressionStatement	"r = parse_exp ( & node , tok , term , src , end , env )"	5435:2:122277:122323	1234985	3	True				
ANR	1235006	AssignmentExpression	"r = parse_exp ( & node , tok , term , src , end , env )"		1234985	0		=			
ANR	1235007	Identifier	r		1234985	0					
ANR	1235008	CallExpression	"parse_exp ( & node , tok , term , src , end , env )"		1234985	1					
ANR	1235009	Callee	parse_exp		1234985	0					
ANR	1235010	Identifier	parse_exp		1234985	0					
ANR	1235011	ArgumentList	& node		1234985	1					
ANR	1235012	Argument	& node		1234985	0					
ANR	1235013	UnaryOperationExpression	& node		1234985	0					
ANR	1235014	UnaryOperator	&		1234985	0					
ANR	1235015	Identifier	node		1234985	1					
ANR	1235016	Argument	tok		1234985	1					
ANR	1235017	Identifier	tok		1234985	0					
ANR	1235018	Argument	term		1234985	2					
ANR	1235019	Identifier	term		1234985	0					
ANR	1235020	Argument	src		1234985	3					
ANR	1235021	Identifier	src		1234985	0					
ANR	1235022	Argument	end		1234985	4					
ANR	1235023	Identifier	end		1234985	0					
ANR	1235024	Argument	env		1234985	5					
ANR	1235025	Identifier	env		1234985	0					
ANR	1235026	IfStatement	if ( r < 0 )		1234985	4					
ANR	1235027	Condition	r < 0	5436:6:122331:122335	1234985	0	True				
ANR	1235028	RelationalExpression	r < 0		1234985	0		<			
ANR	1235029	Identifier	r		1234985	0					
ANR	1235030	PrimaryExpression	0		1234985	1					
ANR	1235031	ReturnStatement	return r ;	5436:13:122338:122346	1234985	1	True				
ANR	1235032	Identifier	r		1234985	0					
ANR	1235033	IfStatement	if ( r == TK_EOT || r == term || r == TK_ALT )		1234985	5					
ANR	1235034	Condition	r == TK_EOT || r == term || r == TK_ALT	5438:6:122355:122393	1234985	0	True				
ANR	1235035	OrExpression	r == TK_EOT || r == term || r == TK_ALT		1234985	0		||			
ANR	1235036	EqualityExpression	r == TK_EOT		1234985	0		==			
ANR	1235037	Identifier	r		1234985	0					
ANR	1235038	Identifier	TK_EOT		1234985	1					
ANR	1235039	OrExpression	r == term || r == TK_ALT		1234985	1		||			
ANR	1235040	EqualityExpression	r == term		1234985	0		==			
ANR	1235041	Identifier	r		1234985	0					
ANR	1235042	Identifier	term		1234985	1					
ANR	1235043	EqualityExpression	r == TK_ALT		1234985	1		==			
ANR	1235044	Identifier	r		1234985	0					
ANR	1235045	Identifier	TK_ALT		1234985	1					
ANR	1235046	CompoundStatement		9:47:170:170	1234985	1					
ANR	1235047	ExpressionStatement	* top = node	5439:4:122402:122413	1234985	0	True				
ANR	1235048	AssignmentExpression	* top = node		1234985	0		=			
ANR	1235049	UnaryOperationExpression	* top		1234985	0					
ANR	1235050	UnaryOperator	*		1234985	0					
ANR	1235051	Identifier	top		1234985	1					
ANR	1235052	Identifier	node		1234985	1					
ANR	1235053	ElseStatement	else		1234985	0					
ANR	1235054	CompoundStatement		12:7:200:200	1234985	0					
ANR	1235055	ExpressionStatement	"* top = node_new_list ( node , NULL )"	5442:4:122432:122465	1234985	0	True				
ANR	1235056	AssignmentExpression	"* top = node_new_list ( node , NULL )"		1234985	0		=			
ANR	1235057	UnaryOperationExpression	* top		1234985	0					
ANR	1235058	UnaryOperator	*		1234985	0					
ANR	1235059	Identifier	top		1234985	1					
ANR	1235060	CallExpression	"node_new_list ( node , NULL )"		1234985	1					
ANR	1235061	Callee	node_new_list		1234985	0					
ANR	1235062	Identifier	node_new_list		1234985	0					
ANR	1235063	ArgumentList	node		1234985	1					
ANR	1235064	Argument	node		1234985	0					
ANR	1235065	Identifier	node		1234985	0					
ANR	1235066	Argument	NULL		1234985	1					
ANR	1235067	Identifier	NULL		1234985	0					
ANR	1235068	ExpressionStatement	headp = & ( NCDR ( * top ) )	5443:4:122471:122492	1234985	1	True				
ANR	1235069	AssignmentExpression	headp = & ( NCDR ( * top ) )		1234985	0		=			
ANR	1235070	Identifier	headp		1234985	0					
ANR	1235071	UnaryOperationExpression	& ( NCDR ( * top ) )		1234985	1					
ANR	1235072	UnaryOperator	&		1234985	0					
ANR	1235073	CallExpression	NCDR ( * top )		1234985	1					
ANR	1235074	Callee	NCDR		1234985	0					
ANR	1235075	Identifier	NCDR		1234985	0					
ANR	1235076	ArgumentList	* top		1234985	1					
ANR	1235077	Argument	* top		1234985	0					
ANR	1235078	UnaryOperationExpression	* top		1234985	0					
ANR	1235079	UnaryOperator	*		1234985	0					
ANR	1235080	Identifier	top		1234985	1					
ANR	1235081	WhileStatement	while ( r != TK_EOT && r != term && r != TK_ALT )		1234985	2					
ANR	1235082	Condition	r != TK_EOT && r != term && r != TK_ALT	5444:11:122505:122543	1234985	0	True				
ANR	1235083	AndExpression	r != TK_EOT && r != term && r != TK_ALT		1234985	0		&&			
ANR	1235084	EqualityExpression	r != TK_EOT		1234985	0		!=			
ANR	1235085	Identifier	r		1234985	0					
ANR	1235086	Identifier	TK_EOT		1234985	1					
ANR	1235087	AndExpression	r != term && r != TK_ALT		1234985	1		&&			
ANR	1235088	EqualityExpression	r != term		1234985	0		!=			
ANR	1235089	Identifier	r		1234985	0					
ANR	1235090	Identifier	term		1234985	1					
ANR	1235091	EqualityExpression	r != TK_ALT		1234985	1		!=			
ANR	1235092	Identifier	r		1234985	0					
ANR	1235093	Identifier	TK_ALT		1234985	1					
ANR	1235094	CompoundStatement		15:52:320:320	1234985	1					
ANR	1235095	ExpressionStatement	"r = parse_exp ( & node , tok , term , src , end , env )"	5445:6:122554:122600	1234985	0	True				
ANR	1235096	AssignmentExpression	"r = parse_exp ( & node , tok , term , src , end , env )"		1234985	0		=			
ANR	1235097	Identifier	r		1234985	0					
ANR	1235098	CallExpression	"parse_exp ( & node , tok , term , src , end , env )"		1234985	1					
ANR	1235099	Callee	parse_exp		1234985	0					
ANR	1235100	Identifier	parse_exp		1234985	0					
ANR	1235101	ArgumentList	& node		1234985	1					
ANR	1235102	Argument	& node		1234985	0					
ANR	1235103	UnaryOperationExpression	& node		1234985	0					
ANR	1235104	UnaryOperator	&		1234985	0					
ANR	1235105	Identifier	node		1234985	1					
ANR	1235106	Argument	tok		1234985	1					
ANR	1235107	Identifier	tok		1234985	0					
ANR	1235108	Argument	term		1234985	2					
ANR	1235109	Identifier	term		1234985	0					
ANR	1235110	Argument	src		1234985	3					
ANR	1235111	Identifier	src		1234985	0					
ANR	1235112	Argument	end		1234985	4					
ANR	1235113	Identifier	end		1234985	0					
ANR	1235114	Argument	env		1234985	5					
ANR	1235115	Identifier	env		1234985	0					
ANR	1235116	IfStatement	if ( r < 0 )		1234985	1					
ANR	1235117	Condition	r < 0	5446:10:122612:122616	1234985	0	True				
ANR	1235118	RelationalExpression	r < 0		1234985	0		<			
ANR	1235119	Identifier	r		1234985	0					
ANR	1235120	PrimaryExpression	0		1234985	1					
ANR	1235121	ReturnStatement	return r ;	5446:17:122619:122627	1234985	1	True				
ANR	1235122	Identifier	r		1234985	0					
ANR	1235123	IfStatement	if ( NTYPE ( node ) == NT_LIST )		1234985	2					
ANR	1235124	Condition	NTYPE ( node ) == NT_LIST	5448:10:122640:122661	1234985	0	True				
ANR	1235125	EqualityExpression	NTYPE ( node ) == NT_LIST		1234985	0		==			
ANR	1235126	CallExpression	NTYPE ( node )		1234985	0					
ANR	1235127	Callee	NTYPE		1234985	0					
ANR	1235128	Identifier	NTYPE		1234985	0					
ANR	1235129	ArgumentList	node		1234985	1					
ANR	1235130	Argument	node		1234985	0					
ANR	1235131	Identifier	node		1234985	0					
ANR	1235132	Identifier	NT_LIST		1234985	1					
ANR	1235133	CompoundStatement		19:34:438:438	1234985	1					
ANR	1235134	ExpressionStatement	* headp = node	5449:1:122667:122680	1234985	0	True				
ANR	1235135	AssignmentExpression	* headp = node		1234985	0		=			
ANR	1235136	UnaryOperationExpression	* headp		1234985	0					
ANR	1235137	UnaryOperator	*		1234985	0					
ANR	1235138	Identifier	headp		1234985	1					
ANR	1235139	Identifier	node		1234985	1					
ANR	1235140	WhileStatement	while ( IS_NOT_NULL ( NCDR ( node ) ) )		1234985	1					
ANR	1235141	Condition	IS_NOT_NULL ( NCDR ( node ) )	5450:8:122690:122712	1234985	0	True				
ANR	1235142	CallExpression	IS_NOT_NULL ( NCDR ( node ) )		1234985	0					
ANR	1235143	Callee	IS_NOT_NULL		1234985	0					
ANR	1235144	Identifier	IS_NOT_NULL		1234985	0					
ANR	1235145	ArgumentList	NCDR ( node )		1234985	1					
ANR	1235146	Argument	NCDR ( node )		1234985	0					
ANR	1235147	CallExpression	NCDR ( node )		1234985	0					
ANR	1235148	Callee	NCDR		1234985	0					
ANR	1235149	Identifier	NCDR		1234985	0					
ANR	1235150	ArgumentList	node		1234985	1					
ANR	1235151	Argument	node		1234985	0					
ANR	1235152	Identifier	node		1234985	0					
ANR	1235153	ExpressionStatement	node = NCDR ( node )	5450:33:122715:122732	1234985	1	True				
ANR	1235154	AssignmentExpression	node = NCDR ( node )		1234985	0		=			
ANR	1235155	Identifier	node		1234985	0					
ANR	1235156	CallExpression	NCDR ( node )		1234985	1					
ANR	1235157	Callee	NCDR		1234985	0					
ANR	1235158	Identifier	NCDR		1234985	0					
ANR	1235159	ArgumentList	node		1234985	1					
ANR	1235160	Argument	node		1234985	0					
ANR	1235161	Identifier	node		1234985	0					
ANR	1235162	ExpressionStatement	headp = & ( NCDR ( node ) )	5451:1:122735:122756	1234985	2	True				
ANR	1235163	AssignmentExpression	headp = & ( NCDR ( node ) )		1234985	0		=			
ANR	1235164	Identifier	headp		1234985	0					
ANR	1235165	UnaryOperationExpression	& ( NCDR ( node ) )		1234985	1					
ANR	1235166	UnaryOperator	&		1234985	0					
ANR	1235167	CallExpression	NCDR ( node )		1234985	1					
ANR	1235168	Callee	NCDR		1234985	0					
ANR	1235169	Identifier	NCDR		1234985	0					
ANR	1235170	ArgumentList	node		1234985	1					
ANR	1235171	Argument	node		1234985	0					
ANR	1235172	Identifier	node		1234985	0					
ANR	1235173	ElseStatement	else		1234985	0					
ANR	1235174	CompoundStatement		24:11:551:551	1234985	0					
ANR	1235175	ExpressionStatement	"* headp = node_new_list ( node , NULL )"	5454:1:122780:122814	1234985	0	True				
ANR	1235176	AssignmentExpression	"* headp = node_new_list ( node , NULL )"		1234985	0		=			
ANR	1235177	UnaryOperationExpression	* headp		1234985	0					
ANR	1235178	UnaryOperator	*		1234985	0					
ANR	1235179	Identifier	headp		1234985	1					
ANR	1235180	CallExpression	"node_new_list ( node , NULL )"		1234985	1					
ANR	1235181	Callee	node_new_list		1234985	0					
ANR	1235182	Identifier	node_new_list		1234985	0					
ANR	1235183	ArgumentList	node		1234985	1					
ANR	1235184	Argument	node		1234985	0					
ANR	1235185	Identifier	node		1234985	0					
ANR	1235186	Argument	NULL		1234985	1					
ANR	1235187	Identifier	NULL		1234985	0					
ANR	1235188	ExpressionStatement	headp = & ( NCDR ( * headp ) )	5455:1:122817:122840	1234985	1	True				
ANR	1235189	AssignmentExpression	headp = & ( NCDR ( * headp ) )		1234985	0		=			
ANR	1235190	Identifier	headp		1234985	0					
ANR	1235191	UnaryOperationExpression	& ( NCDR ( * headp ) )		1234985	1					
ANR	1235192	UnaryOperator	&		1234985	0					
ANR	1235193	CallExpression	NCDR ( * headp )		1234985	1					
ANR	1235194	Callee	NCDR		1234985	0					
ANR	1235195	Identifier	NCDR		1234985	0					
ANR	1235196	ArgumentList	* headp		1234985	1					
ANR	1235197	Argument	* headp		1234985	0					
ANR	1235198	UnaryOperationExpression	* headp		1234985	0					
ANR	1235199	UnaryOperator	*		1234985	0					
ANR	1235200	Identifier	headp		1234985	1					
ANR	1235201	ReturnStatement	return r ;	5460:2:122863:122871	1234985	6	True				
ANR	1235202	Identifier	r		1234985	0					
ANR	1235203	ReturnType	static int		1234985	1					
ANR	1235204	Identifier	parse_branch		1234985	2					
ANR	1235205	ParameterList	"Node * * top , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env"		1234985	3					
ANR	1235206	Parameter	Node * * top	5428:13:122142:122151	1234985	0	True				
ANR	1235207	ParameterType	Node * *		1234985	0					
ANR	1235208	Identifier	top		1234985	1					
ANR	1235209	Parameter	OnigToken * tok	5428:25:122154:122167	1234985	1	True				
ANR	1235210	ParameterType	OnigToken *		1234985	0					
ANR	1235211	Identifier	tok		1234985	1					
ANR	1235212	Parameter	int term	5428:41:122170:122177	1234985	2	True				
ANR	1235213	ParameterType	int		1234985	0					
ANR	1235214	Identifier	term		1234985	1					
ANR	1235215	Parameter	UChar * * src	5429:6:122186:122196	1234985	3	True				
ANR	1235216	ParameterType	UChar * *		1234985	0					
ANR	1235217	Identifier	src		1234985	1					
ANR	1235218	Parameter	UChar * end	5429:19:122199:122208	1234985	4	True				
ANR	1235219	ParameterType	UChar *		1234985	0					
ANR	1235220	Identifier	end		1234985	1					
ANR	1235221	Parameter	ScanEnv * env	5429:31:122211:122222	1234985	5	True				
ANR	1235222	ParameterType	ScanEnv *		1234985	0					
ANR	1235223	Identifier	env		1234985	1					
ANR	1235224	CFGEntryNode	ENTRY		1234985		True				
ANR	1235225	CFGExitNode	EXIT		1234985		True				
ANR	1235226	Symbol	& NCDR		1234985						
ANR	1235227	Symbol	IS_NOT_NULL		1234985						
ANR	1235228	Symbol	NULL		1234985						
ANR	1235229	Symbol	src		1234985						
ANR	1235230	Symbol	TK_ALT		1234985						
ANR	1235231	Symbol	TK_EOT		1234985						
ANR	1235232	Symbol	node_new_list		1234985						
ANR	1235233	Symbol	NCDR		1234985						
ANR	1235234	Symbol	env		1234985						
ANR	1235235	Symbol	NT_LIST		1234985						
ANR	1235236	Symbol	tok		1234985						
ANR	1235237	Symbol	node		1234985						
ANR	1235238	Symbol	r		1234985						
ANR	1235239	Symbol	& node		1234985						
ANR	1235240	Symbol	parse_exp		1234985						
ANR	1235241	Symbol	* headp		1234985						
ANR	1235242	Symbol	top		1234985						
ANR	1235243	Symbol	headp		1234985						
ANR	1235244	Symbol	term		1234985						
ANR	1235245	Symbol	end		1234985						
ANR	1235246	Symbol	NTYPE		1234985						
ANR	1235247	Symbol	* top		1234985						
ANR	1235248	Function	parse_subexp	5464:0:122918:123822							
ANR	1235249	FunctionDef	"parse_subexp (Node * * top , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env)"		1235248	0					
ANR	1235250	CompoundStatement		5467:0:123025:123822	1235248	0					
ANR	1235251	IdentifierDeclStatement	int r ;	5468:2:123029:123034	1235248	0	True				
ANR	1235252	IdentifierDecl	r		1235248	0					
ANR	1235253	IdentifierDeclType	int		1235248	0					
ANR	1235254	Identifier	r		1235248	1					
ANR	1235255	IdentifierDeclStatement	"Node * node , * * headp ;"	5469:2:123038:123057	1235248	1	True				
ANR	1235256	IdentifierDecl	* node		1235248	0					
ANR	1235257	IdentifierDeclType	Node *		1235248	0					
ANR	1235258	Identifier	node		1235248	1					
ANR	1235259	IdentifierDecl	* * headp		1235248	1					
ANR	1235260	IdentifierDeclType	Node * *		1235248	0					
ANR	1235261	Identifier	headp		1235248	1					
ANR	1235262	ExpressionStatement	* top = NULL	5471:2:123062:123073	1235248	2	True				
ANR	1235263	AssignmentExpression	* top = NULL		1235248	0		=			
ANR	1235264	UnaryOperationExpression	* top		1235248	0					
ANR	1235265	UnaryOperator	*		1235248	0					
ANR	1235266	Identifier	top		1235248	1					
ANR	1235267	Identifier	NULL		1235248	1					
ANR	1235268	ExpressionStatement	"r = parse_branch ( & node , tok , term , src , end , env )"	5472:2:123077:123126	1235248	3	True				
ANR	1235269	AssignmentExpression	"r = parse_branch ( & node , tok , term , src , end , env )"		1235248	0		=			
ANR	1235270	Identifier	r		1235248	0					
ANR	1235271	CallExpression	"parse_branch ( & node , tok , term , src , end , env )"		1235248	1					
ANR	1235272	Callee	parse_branch		1235248	0					
ANR	1235273	Identifier	parse_branch		1235248	0					
ANR	1235274	ArgumentList	& node		1235248	1					
ANR	1235275	Argument	& node		1235248	0					
ANR	1235276	UnaryOperationExpression	& node		1235248	0					
ANR	1235277	UnaryOperator	&		1235248	0					
ANR	1235278	Identifier	node		1235248	1					
ANR	1235279	Argument	tok		1235248	1					
ANR	1235280	Identifier	tok		1235248	0					
ANR	1235281	Argument	term		1235248	2					
ANR	1235282	Identifier	term		1235248	0					
ANR	1235283	Argument	src		1235248	3					
ANR	1235284	Identifier	src		1235248	0					
ANR	1235285	Argument	end		1235248	4					
ANR	1235286	Identifier	end		1235248	0					
ANR	1235287	Argument	env		1235248	5					
ANR	1235288	Identifier	env		1235248	0					
ANR	1235289	IfStatement	if ( r < 0 )		1235248	4					
ANR	1235290	Condition	r < 0	5473:6:123134:123138	1235248	0	True				
ANR	1235291	RelationalExpression	r < 0		1235248	0		<			
ANR	1235292	Identifier	r		1235248	0					
ANR	1235293	PrimaryExpression	0		1235248	1					
ANR	1235294	CompoundStatement		7:13:115:115	1235248	1					
ANR	1235295	ExpressionStatement	onig_node_free ( node )	5474:4:123147:123167	1235248	0	True				
ANR	1235296	CallExpression	onig_node_free ( node )		1235248	0					
ANR	1235297	Callee	onig_node_free		1235248	0					
ANR	1235298	Identifier	onig_node_free		1235248	0					
ANR	1235299	ArgumentList	node		1235248	1					
ANR	1235300	Argument	node		1235248	0					
ANR	1235301	Identifier	node		1235248	0					
ANR	1235302	ReturnStatement	return r ;	5475:4:123173:123181	1235248	1	True				
ANR	1235303	Identifier	r		1235248	0					
ANR	1235304	IfStatement	if ( r == term )		1235248	5					
ANR	1235305	Condition	r == term	5478:6:123194:123202	1235248	0	True				
ANR	1235306	EqualityExpression	r == term		1235248	0		==			
ANR	1235307	Identifier	r		1235248	0					
ANR	1235308	Identifier	term		1235248	1					
ANR	1235309	CompoundStatement		12:17:179:179	1235248	1					
ANR	1235310	ExpressionStatement	* top = node	5479:4:123211:123222	1235248	0	True				
ANR	1235311	AssignmentExpression	* top = node		1235248	0		=			
ANR	1235312	UnaryOperationExpression	* top		1235248	0					
ANR	1235313	UnaryOperator	*		1235248	0					
ANR	1235314	Identifier	top		1235248	1					
ANR	1235315	Identifier	node		1235248	1					
ANR	1235316	ElseStatement	else		1235248	0					
ANR	1235317	IfStatement	if ( r == TK_ALT )		1235248	0					
ANR	1235318	Condition	r == TK_ALT	5481:11:123239:123249	1235248	0	True				
ANR	1235319	EqualityExpression	r == TK_ALT		1235248	0		==			
ANR	1235320	Identifier	r		1235248	0					
ANR	1235321	Identifier	TK_ALT		1235248	1					
ANR	1235322	CompoundStatement		15:24:226:226	1235248	1					
ANR	1235323	ExpressionStatement	"* top = onig_node_new_alt ( node , NULL )"	5482:4:123258:123295	1235248	0	True				
ANR	1235324	AssignmentExpression	"* top = onig_node_new_alt ( node , NULL )"		1235248	0		=			
ANR	1235325	UnaryOperationExpression	* top		1235248	0					
ANR	1235326	UnaryOperator	*		1235248	0					
ANR	1235327	Identifier	top		1235248	1					
ANR	1235328	CallExpression	"onig_node_new_alt ( node , NULL )"		1235248	1					
ANR	1235329	Callee	onig_node_new_alt		1235248	0					
ANR	1235330	Identifier	onig_node_new_alt		1235248	0					
ANR	1235331	ArgumentList	node		1235248	1					
ANR	1235332	Argument	node		1235248	0					
ANR	1235333	Identifier	node		1235248	0					
ANR	1235334	Argument	NULL		1235248	1					
ANR	1235335	Identifier	NULL		1235248	0					
ANR	1235336	ExpressionStatement	headp = & ( NCDR ( * top ) )	5483:4:123301:123322	1235248	1	True				
ANR	1235337	AssignmentExpression	headp = & ( NCDR ( * top ) )		1235248	0		=			
ANR	1235338	Identifier	headp		1235248	0					
ANR	1235339	UnaryOperationExpression	& ( NCDR ( * top ) )		1235248	1					
ANR	1235340	UnaryOperator	&		1235248	0					
ANR	1235341	CallExpression	NCDR ( * top )		1235248	1					
ANR	1235342	Callee	NCDR		1235248	0					
ANR	1235343	Identifier	NCDR		1235248	0					
ANR	1235344	ArgumentList	* top		1235248	1					
ANR	1235345	Argument	* top		1235248	0					
ANR	1235346	UnaryOperationExpression	* top		1235248	0					
ANR	1235347	UnaryOperator	*		1235248	0					
ANR	1235348	Identifier	top		1235248	1					
ANR	1235349	WhileStatement	while ( r == TK_ALT )		1235248	2					
ANR	1235350	Condition	r == TK_ALT	5484:11:123335:123345	1235248	0	True				
ANR	1235351	EqualityExpression	r == TK_ALT		1235248	0		==			
ANR	1235352	Identifier	r		1235248	0					
ANR	1235353	Identifier	TK_ALT		1235248	1					
ANR	1235354	CompoundStatement		18:24:322:322	1235248	1					
ANR	1235355	ExpressionStatement	"r = fetch_token ( tok , src , end , env )"	5485:6:123356:123391	1235248	0	True				
ANR	1235356	AssignmentExpression	"r = fetch_token ( tok , src , end , env )"		1235248	0		=			
ANR	1235357	Identifier	r		1235248	0					
ANR	1235358	CallExpression	"fetch_token ( tok , src , end , env )"		1235248	1					
ANR	1235359	Callee	fetch_token		1235248	0					
ANR	1235360	Identifier	fetch_token		1235248	0					
ANR	1235361	ArgumentList	tok		1235248	1					
ANR	1235362	Argument	tok		1235248	0					
ANR	1235363	Identifier	tok		1235248	0					
ANR	1235364	Argument	src		1235248	1					
ANR	1235365	Identifier	src		1235248	0					
ANR	1235366	Argument	end		1235248	2					
ANR	1235367	Identifier	end		1235248	0					
ANR	1235368	Argument	env		1235248	3					
ANR	1235369	Identifier	env		1235248	0					
ANR	1235370	IfStatement	if ( r < 0 )		1235248	1					
ANR	1235371	Condition	r < 0	5486:10:123403:123407	1235248	0	True				
ANR	1235372	RelationalExpression	r < 0		1235248	0		<			
ANR	1235373	Identifier	r		1235248	0					
ANR	1235374	PrimaryExpression	0		1235248	1					
ANR	1235375	ReturnStatement	return r ;	5486:17:123410:123418	1235248	1	True				
ANR	1235376	Identifier	r		1235248	0					
ANR	1235377	ExpressionStatement	"r = parse_branch ( & node , tok , term , src , end , env )"	5487:6:123426:123475	1235248	2	True				
ANR	1235378	AssignmentExpression	"r = parse_branch ( & node , tok , term , src , end , env )"		1235248	0		=			
ANR	1235379	Identifier	r		1235248	0					
ANR	1235380	CallExpression	"parse_branch ( & node , tok , term , src , end , env )"		1235248	1					
ANR	1235381	Callee	parse_branch		1235248	0					
ANR	1235382	Identifier	parse_branch		1235248	0					
ANR	1235383	ArgumentList	& node		1235248	1					
ANR	1235384	Argument	& node		1235248	0					
ANR	1235385	UnaryOperationExpression	& node		1235248	0					
ANR	1235386	UnaryOperator	&		1235248	0					
ANR	1235387	Identifier	node		1235248	1					
ANR	1235388	Argument	tok		1235248	1					
ANR	1235389	Identifier	tok		1235248	0					
ANR	1235390	Argument	term		1235248	2					
ANR	1235391	Identifier	term		1235248	0					
ANR	1235392	Argument	src		1235248	3					
ANR	1235393	Identifier	src		1235248	0					
ANR	1235394	Argument	end		1235248	4					
ANR	1235395	Identifier	end		1235248	0					
ANR	1235396	Argument	env		1235248	5					
ANR	1235397	Identifier	env		1235248	0					
ANR	1235398	IfStatement	if ( r < 0 )		1235248	3					
ANR	1235399	Condition	r < 0	5488:10:123487:123491	1235248	0	True				
ANR	1235400	RelationalExpression	r < 0		1235248	0		<			
ANR	1235401	Identifier	r		1235248	0					
ANR	1235402	PrimaryExpression	0		1235248	1					
ANR	1235403	ReturnStatement	return r ;	5488:17:123494:123502	1235248	1	True				
ANR	1235404	Identifier	r		1235248	0					
ANR	1235405	ExpressionStatement	"* headp = onig_node_new_alt ( node , NULL )"	5490:6:123511:123549	1235248	4	True				
ANR	1235406	AssignmentExpression	"* headp = onig_node_new_alt ( node , NULL )"		1235248	0		=			
ANR	1235407	UnaryOperationExpression	* headp		1235248	0					
ANR	1235408	UnaryOperator	*		1235248	0					
ANR	1235409	Identifier	headp		1235248	1					
ANR	1235410	CallExpression	"onig_node_new_alt ( node , NULL )"		1235248	1					
ANR	1235411	Callee	onig_node_new_alt		1235248	0					
ANR	1235412	Identifier	onig_node_new_alt		1235248	0					
ANR	1235413	ArgumentList	node		1235248	1					
ANR	1235414	Argument	node		1235248	0					
ANR	1235415	Identifier	node		1235248	0					
ANR	1235416	Argument	NULL		1235248	1					
ANR	1235417	Identifier	NULL		1235248	0					
ANR	1235418	ExpressionStatement	headp = & ( NCDR ( * headp ) )	5491:6:123557:123580	1235248	5	True				
ANR	1235419	AssignmentExpression	headp = & ( NCDR ( * headp ) )		1235248	0		=			
ANR	1235420	Identifier	headp		1235248	0					
ANR	1235421	UnaryOperationExpression	& ( NCDR ( * headp ) )		1235248	1					
ANR	1235422	UnaryOperator	&		1235248	0					
ANR	1235423	CallExpression	NCDR ( * headp )		1235248	1					
ANR	1235424	Callee	NCDR		1235248	0					
ANR	1235425	Identifier	NCDR		1235248	0					
ANR	1235426	ArgumentList	* headp		1235248	1					
ANR	1235427	Argument	* headp		1235248	0					
ANR	1235428	UnaryOperationExpression	* headp		1235248	0					
ANR	1235429	UnaryOperator	*		1235248	0					
ANR	1235430	Identifier	headp		1235248	1					
ANR	1235431	IfStatement	if ( tok -> type != ( enum TokenSyms ) term )		1235248	3					
ANR	1235432	Condition	tok -> type != ( enum TokenSyms ) term	5494:8:123597:123630	1235248	0	True				
ANR	1235433	EqualityExpression	tok -> type != ( enum TokenSyms ) term		1235248	0		!=			
ANR	1235434	PtrMemberAccess	tok -> type		1235248	0					
ANR	1235435	Identifier	tok		1235248	0					
ANR	1235436	Identifier	type		1235248	1					
ANR	1235437	CastExpression	( enum TokenSyms ) term		1235248	1					
ANR	1235438	CastTarget	enum TokenSyms		1235248	0					
ANR	1235439	Identifier	term		1235248	1					
ANR	1235440	GotoStatement	goto err ;	5495:6:123639:123647	1235248	1	True				
ANR	1235441	Identifier	err		1235248	0					
ANR	1235442	ElseStatement	else		1235248	0					
ANR	1235443	CompoundStatement		31:7:634:634	1235248	0					
ANR	1235444	Label	err :	5498:2:123664:123667	1235248	0	True				
ANR	1235445	Identifier	err		1235248	0					
ANR	1235446	IfStatement	if ( term == TK_SUBEXP_CLOSE )		1235248	1					
ANR	1235447	Condition	term == TK_SUBEXP_CLOSE	5499:8:123677:123699	1235248	0	True				
ANR	1235448	EqualityExpression	term == TK_SUBEXP_CLOSE		1235248	0		==			
ANR	1235449	Identifier	term		1235248	0					
ANR	1235450	Identifier	TK_SUBEXP_CLOSE		1235248	1					
ANR	1235451	ReturnStatement	return ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS ;	5500:6:123708:123761	1235248	1	True				
ANR	1235452	Identifier	ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS		1235248	0					
ANR	1235453	ElseStatement	else		1235248	0					
ANR	1235454	ReturnStatement	return ONIGERR_PARSER_BUG ;	5502:6:123778:123803	1235248	0	True				
ANR	1235455	Identifier	ONIGERR_PARSER_BUG		1235248	0					
ANR	1235456	ReturnStatement	return r ;	5505:2:123812:123820	1235248	6	True				
ANR	1235457	Identifier	r		1235248	0					
ANR	1235458	ReturnType	static int		1235248	1					
ANR	1235459	Identifier	parse_subexp		1235248	2					
ANR	1235460	ParameterList	"Node * * top , OnigToken * tok , int term , UChar * * src , UChar * end , ScanEnv * env"		1235248	3					
ANR	1235461	Parameter	Node * * top	5465:13:122942:122951	1235248	0	True				
ANR	1235462	ParameterType	Node * *		1235248	0					
ANR	1235463	Identifier	top		1235248	1					
ANR	1235464	Parameter	OnigToken * tok	5465:25:122954:122967	1235248	1	True				
ANR	1235465	ParameterType	OnigToken *		1235248	0					
ANR	1235466	Identifier	tok		1235248	1					
ANR	1235467	Parameter	int term	5465:41:122970:122977	1235248	2	True				
ANR	1235468	ParameterType	int		1235248	0					
ANR	1235469	Identifier	term		1235248	1					
ANR	1235470	Parameter	UChar * * src	5466:6:122986:122996	1235248	3	True				
ANR	1235471	ParameterType	UChar * *		1235248	0					
ANR	1235472	Identifier	src		1235248	1					
ANR	1235473	Parameter	UChar * end	5466:19:122999:123008	1235248	4	True				
ANR	1235474	ParameterType	UChar *		1235248	0					
ANR	1235475	Identifier	end		1235248	1					
ANR	1235476	Parameter	ScanEnv * env	5466:31:123011:123022	1235248	5	True				
ANR	1235477	ParameterType	ScanEnv *		1235248	0					
ANR	1235478	Identifier	env		1235248	1					
ANR	1235479	CFGEntryNode	ENTRY		1235248		True				
ANR	1235480	CFGExitNode	EXIT		1235248		True				
ANR	1235481	Symbol	onig_node_new_alt		1235248						
ANR	1235482	Symbol	& NCDR		1235248						
ANR	1235483	Symbol	NULL		1235248						
ANR	1235484	Symbol	src		1235248						
ANR	1235485	Symbol	TK_ALT		1235248						
ANR	1235486	Symbol	parse_branch		1235248						
ANR	1235487	Symbol	ONIGERR_END_PATTERN_WITH_UNMATCHED_PARENTHESIS		1235248						
ANR	1235488	Symbol	env		1235248						
ANR	1235489	Symbol	tok -> type		1235248						
ANR	1235490	Symbol	ONIGERR_PARSER_BUG		1235248						
ANR	1235491	Symbol	tok		1235248						
ANR	1235492	Symbol	node		1235248						
ANR	1235493	Symbol	r		1235248						
ANR	1235494	Symbol	& node		1235248						
ANR	1235495	Symbol	* headp		1235248						
ANR	1235496	Symbol	top		1235248						
ANR	1235497	Symbol	TK_SUBEXP_CLOSE		1235248						
ANR	1235498	Symbol	headp		1235248						
ANR	1235499	Symbol	term		1235248						
ANR	1235500	Symbol	end		1235248						
ANR	1235501	Symbol	* tok		1235248						
ANR	1235502	Symbol	fetch_token		1235248						
ANR	1235503	Symbol	* top		1235248						
ANR	1235504	Function	parse_regexp	5508:0:123825:124081							
ANR	1235505	FunctionDef	"parse_regexp (Node * * top , UChar * * src , UChar * end , ScanEnv * env)"		1235504	0					
ANR	1235506	CompoundStatement		5510:0:123900:124081	1235504	0					
ANR	1235507	IdentifierDeclStatement	int r ;	5511:2:123904:123909	1235504	0	True				
ANR	1235508	IdentifierDecl	r		1235504	0					
ANR	1235509	IdentifierDeclType	int		1235504	0					
ANR	1235510	Identifier	r		1235504	1					
ANR	1235511	IdentifierDeclStatement	OnigToken tok ;	5512:2:123913:123926	1235504	1	True				
ANR	1235512	IdentifierDecl	tok		1235504	0					
ANR	1235513	IdentifierDeclType	OnigToken		1235504	0					
ANR	1235514	Identifier	tok		1235504	1					
ANR	1235515	ExpressionStatement	"r = fetch_token ( & tok , src , end , env )"	5514:2:123931:123967	1235504	2	True				
ANR	1235516	AssignmentExpression	"r = fetch_token ( & tok , src , end , env )"		1235504	0		=			
ANR	1235517	Identifier	r		1235504	0					
ANR	1235518	CallExpression	"fetch_token ( & tok , src , end , env )"		1235504	1					
ANR	1235519	Callee	fetch_token		1235504	0					
ANR	1235520	Identifier	fetch_token		1235504	0					
ANR	1235521	ArgumentList	& tok		1235504	1					
ANR	1235522	Argument	& tok		1235504	0					
ANR	1235523	UnaryOperationExpression	& tok		1235504	0					
ANR	1235524	UnaryOperator	&		1235504	0					
ANR	1235525	Identifier	tok		1235504	1					
ANR	1235526	Argument	src		1235504	1					
ANR	1235527	Identifier	src		1235504	0					
ANR	1235528	Argument	end		1235504	2					
ANR	1235529	Identifier	end		1235504	0					
ANR	1235530	Argument	env		1235504	3					
ANR	1235531	Identifier	env		1235504	0					
ANR	1235532	IfStatement	if ( r < 0 )		1235504	3					
ANR	1235533	Condition	r < 0	5515:6:123975:123979	1235504	0	True				
ANR	1235534	RelationalExpression	r < 0		1235504	0		<			
ANR	1235535	Identifier	r		1235504	0					
ANR	1235536	PrimaryExpression	0		1235504	1					
ANR	1235537	ReturnStatement	return r ;	5515:13:123982:123990	1235504	1	True				
ANR	1235538	Identifier	r		1235504	0					
ANR	1235539	ExpressionStatement	"r = parse_subexp ( top , & tok , TK_EOT , src , end , env )"	5516:2:123994:124044	1235504	4	True				
ANR	1235540	AssignmentExpression	"r = parse_subexp ( top , & tok , TK_EOT , src , end , env )"		1235504	0		=			
ANR	1235541	Identifier	r		1235504	0					
ANR	1235542	CallExpression	"parse_subexp ( top , & tok , TK_EOT , src , end , env )"		1235504	1					
ANR	1235543	Callee	parse_subexp		1235504	0					
ANR	1235544	Identifier	parse_subexp		1235504	0					
ANR	1235545	ArgumentList	top		1235504	1					
ANR	1235546	Argument	top		1235504	0					
ANR	1235547	Identifier	top		1235504	0					
ANR	1235548	Argument	& tok		1235504	1					
ANR	1235549	UnaryOperationExpression	& tok		1235504	0					
ANR	1235550	UnaryOperator	&		1235504	0					
ANR	1235551	Identifier	tok		1235504	1					
ANR	1235552	Argument	TK_EOT		1235504	2					
ANR	1235553	Identifier	TK_EOT		1235504	0					
ANR	1235554	Argument	src		1235504	3					
ANR	1235555	Identifier	src		1235504	0					
ANR	1235556	Argument	end		1235504	4					
ANR	1235557	Identifier	end		1235504	0					
ANR	1235558	Argument	env		1235504	5					
ANR	1235559	Identifier	env		1235504	0					
ANR	1235560	IfStatement	if ( r < 0 )		1235504	5					
ANR	1235561	Condition	r < 0	5517:6:124052:124056	1235504	0	True				
ANR	1235562	RelationalExpression	r < 0		1235504	0		<			
ANR	1235563	Identifier	r		1235504	0					
ANR	1235564	PrimaryExpression	0		1235504	1					
ANR	1235565	ReturnStatement	return r ;	5517:13:124059:124067	1235504	1	True				
ANR	1235566	Identifier	r		1235504	0					
ANR	1235567	ReturnStatement	return 0 ;	5518:2:124071:124079	1235504	6	True				
ANR	1235568	PrimaryExpression	0		1235504	0					
ANR	1235569	ReturnType	static int		1235504	1					
ANR	1235570	Identifier	parse_regexp		1235504	2					
ANR	1235571	ParameterList	"Node * * top , UChar * * src , UChar * end , ScanEnv * env"		1235504	3					
ANR	1235572	Parameter	Node * * top	5509:13:123849:123858	1235504	0	True				
ANR	1235573	ParameterType	Node * *		1235504	0					
ANR	1235574	Identifier	top		1235504	1					
ANR	1235575	Parameter	UChar * * src	5509:25:123861:123871	1235504	1	True				
ANR	1235576	ParameterType	UChar * *		1235504	0					
ANR	1235577	Identifier	src		1235504	1					
ANR	1235578	Parameter	UChar * end	5509:38:123874:123883	1235504	2	True				
ANR	1235579	ParameterType	UChar *		1235504	0					
ANR	1235580	Identifier	end		1235504	1					
ANR	1235581	Parameter	ScanEnv * env	5509:50:123886:123897	1235504	3	True				
ANR	1235582	ParameterType	ScanEnv *		1235504	0					
ANR	1235583	Identifier	env		1235504	1					
ANR	1235584	CFGEntryNode	ENTRY		1235504		True				
ANR	1235585	CFGExitNode	EXIT		1235504		True				
ANR	1235586	Symbol	tok		1235504						
ANR	1235587	Symbol	& tok		1235504						
ANR	1235588	Symbol	r		1235504						
ANR	1235589	Symbol	top		1235504						
ANR	1235590	Symbol	src		1235504						
ANR	1235591	Symbol	TK_EOT		1235504						
ANR	1235592	Symbol	end		1235504						
ANR	1235593	Symbol	env		1235504						
ANR	1235594	Symbol	parse_subexp		1235504						
ANR	1235595	Symbol	fetch_token		1235504						
ANR	1235596	Function	onig_parse_make_tree	5521:0:124084:124698							
ANR	1235597	FunctionDef	"onig_parse_make_tree (Node * * root , const UChar * pattern , const UChar * end , regex_t * reg , ScanEnv * env)"		1235596	0					
ANR	1235598	CompoundStatement		5524:0:124204:124698	1235596	0					
ANR	1235599	IdentifierDeclStatement	int r ;	5525:2:124208:124213	1235596	0	True				
ANR	1235600	IdentifierDecl	r		1235596	0					
ANR	1235601	IdentifierDeclType	int		1235596	0					
ANR	1235602	Identifier	r		1235596	1					
ANR	1235603	IdentifierDeclStatement	UChar * p ;	5526:2:124217:124225	1235596	1	True				
ANR	1235604	IdentifierDecl	* p		1235596	0					
ANR	1235605	IdentifierDeclType	UChar *		1235596	0					
ANR	1235606	Identifier	p		1235596	1					
ANR	1235607	ExpressionStatement	names_clear ( reg )	5529:2:124253:124269	1235596	2	True				
ANR	1235608	CallExpression	names_clear ( reg )		1235596	0					
ANR	1235609	Callee	names_clear		1235596	0					
ANR	1235610	Identifier	names_clear		1235596	0					
ANR	1235611	ArgumentList	reg		1235596	1					
ANR	1235612	Argument	reg		1235596	0					
ANR	1235613	Identifier	reg		1235596	0					
ANR	1235614	ExpressionStatement	scan_env_clear ( env )	5532:2:124281:124300	1235596	3	True				
ANR	1235615	CallExpression	scan_env_clear ( env )		1235596	0					
ANR	1235616	Callee	scan_env_clear		1235596	0					
ANR	1235617	Identifier	scan_env_clear		1235596	0					
ANR	1235618	ArgumentList	env		1235596	1					
ANR	1235619	Argument	env		1235596	0					
ANR	1235620	Identifier	env		1235596	0					
ANR	1235621	ExpressionStatement	env -> option = reg -> options	5533:2:124304:124338	1235596	4	True				
ANR	1235622	AssignmentExpression	env -> option = reg -> options		1235596	0		=			
ANR	1235623	PtrMemberAccess	env -> option		1235596	0					
ANR	1235624	Identifier	env		1235596	0					
ANR	1235625	Identifier	option		1235596	1					
ANR	1235626	PtrMemberAccess	reg -> options		1235596	1					
ANR	1235627	Identifier	reg		1235596	0					
ANR	1235628	Identifier	options		1235596	1					
ANR	1235629	ExpressionStatement	env -> case_fold_flag = reg -> case_fold_flag	5534:2:124342:124383	1235596	5	True				
ANR	1235630	AssignmentExpression	env -> case_fold_flag = reg -> case_fold_flag		1235596	0		=			
ANR	1235631	PtrMemberAccess	env -> case_fold_flag		1235596	0					
ANR	1235632	Identifier	env		1235596	0					
ANR	1235633	Identifier	case_fold_flag		1235596	1					
ANR	1235634	PtrMemberAccess	reg -> case_fold_flag		1235596	1					
ANR	1235635	Identifier	reg		1235596	0					
ANR	1235636	Identifier	case_fold_flag		1235596	1					
ANR	1235637	ExpressionStatement	env -> enc = reg -> enc	5535:2:124387:124417	1235596	6	True				
ANR	1235638	AssignmentExpression	env -> enc = reg -> enc		1235596	0		=			
ANR	1235639	PtrMemberAccess	env -> enc		1235596	0					
ANR	1235640	Identifier	env		1235596	0					
ANR	1235641	Identifier	enc		1235596	1					
ANR	1235642	PtrMemberAccess	reg -> enc		1235596	1					
ANR	1235643	Identifier	reg		1235596	0					
ANR	1235644	Identifier	enc		1235596	1					
ANR	1235645	ExpressionStatement	env -> syntax = reg -> syntax	5536:2:124421:124454	1235596	7	True				
ANR	1235646	AssignmentExpression	env -> syntax = reg -> syntax		1235596	0		=			
ANR	1235647	PtrMemberAccess	env -> syntax		1235596	0					
ANR	1235648	Identifier	env		1235596	0					
ANR	1235649	Identifier	syntax		1235596	1					
ANR	1235650	PtrMemberAccess	reg -> syntax		1235596	1					
ANR	1235651	Identifier	reg		1235596	0					
ANR	1235652	Identifier	syntax		1235596	1					
ANR	1235653	ExpressionStatement	env -> pattern = ( UChar * ) pattern	5537:2:124458:124496	1235596	8	True				
ANR	1235654	AssignmentExpression	env -> pattern = ( UChar * ) pattern		1235596	0		=			
ANR	1235655	PtrMemberAccess	env -> pattern		1235596	0					
ANR	1235656	Identifier	env		1235596	0					
ANR	1235657	Identifier	pattern		1235596	1					
ANR	1235658	CastExpression	( UChar * ) pattern		1235596	1					
ANR	1235659	CastTarget	UChar *		1235596	0					
ANR	1235660	Identifier	pattern		1235596	1					
ANR	1235661	ExpressionStatement	env -> pattern_end = ( UChar * ) end	5538:2:124500:124534	1235596	9	True				
ANR	1235662	AssignmentExpression	env -> pattern_end = ( UChar * ) end		1235596	0		=			
ANR	1235663	PtrMemberAccess	env -> pattern_end		1235596	0					
ANR	1235664	Identifier	env		1235596	0					
ANR	1235665	Identifier	pattern_end		1235596	1					
ANR	1235666	CastExpression	( UChar * ) end		1235596	1					
ANR	1235667	CastTarget	UChar *		1235596	0					
ANR	1235668	Identifier	end		1235596	1					
ANR	1235669	ExpressionStatement	env -> reg = reg	5539:2:124538:124563	1235596	10	True				
ANR	1235670	AssignmentExpression	env -> reg = reg		1235596	0		=			
ANR	1235671	PtrMemberAccess	env -> reg		1235596	0					
ANR	1235672	Identifier	env		1235596	0					
ANR	1235673	Identifier	reg		1235596	1					
ANR	1235674	Identifier	reg		1235596	1					
ANR	1235675	ExpressionStatement	* root = NULL	5541:2:124568:124580	1235596	11	True				
ANR	1235676	AssignmentExpression	* root = NULL		1235596	0		=			
ANR	1235677	UnaryOperationExpression	* root		1235596	0					
ANR	1235678	UnaryOperator	*		1235596	0					
ANR	1235679	Identifier	root		1235596	1					
ANR	1235680	Identifier	NULL		1235596	1					
ANR	1235681	ExpressionStatement	p = ( UChar * ) pattern	5542:2:124584:124604	1235596	12	True				
ANR	1235682	AssignmentExpression	p = ( UChar * ) pattern		1235596	0		=			
ANR	1235683	Identifier	p		1235596	0					
ANR	1235684	CastExpression	( UChar * ) pattern		1235596	1					
ANR	1235685	CastTarget	UChar *		1235596	0					
ANR	1235686	Identifier	pattern		1235596	1					
ANR	1235687	ExpressionStatement	"r = parse_regexp ( root , & p , ( UChar * ) end , env )"	5543:2:124608:124653	1235596	13	True				
ANR	1235688	AssignmentExpression	"r = parse_regexp ( root , & p , ( UChar * ) end , env )"		1235596	0		=			
ANR	1235689	Identifier	r		1235596	0					
ANR	1235690	CallExpression	"parse_regexp ( root , & p , ( UChar * ) end , env )"		1235596	1					
ANR	1235691	Callee	parse_regexp		1235596	0					
ANR	1235692	Identifier	parse_regexp		1235596	0					
ANR	1235693	ArgumentList	root		1235596	1					
ANR	1235694	Argument	root		1235596	0					
ANR	1235695	Identifier	root		1235596	0					
ANR	1235696	Argument	& p		1235596	1					
ANR	1235697	UnaryOperationExpression	& p		1235596	0					
ANR	1235698	UnaryOperator	&		1235596	0					
ANR	1235699	Identifier	p		1235596	1					
ANR	1235700	Argument	( UChar * ) end		1235596	2					
ANR	1235701	CastExpression	( UChar * ) end		1235596	0					
ANR	1235702	CastTarget	UChar *		1235596	0					
ANR	1235703	Identifier	end		1235596	1					
ANR	1235704	Argument	env		1235596	3					
ANR	1235705	Identifier	env		1235596	0					
ANR	1235706	ExpressionStatement	reg -> num_mem = env -> num_mem	5544:2:124657:124684	1235596	14	True				
ANR	1235707	AssignmentExpression	reg -> num_mem = env -> num_mem		1235596	0		=			
ANR	1235708	PtrMemberAccess	reg -> num_mem		1235596	0					
ANR	1235709	Identifier	reg		1235596	0					
ANR	1235710	Identifier	num_mem		1235596	1					
ANR	1235711	PtrMemberAccess	env -> num_mem		1235596	1					
ANR	1235712	Identifier	env		1235596	0					
ANR	1235713	Identifier	num_mem		1235596	1					
ANR	1235714	ReturnStatement	return r ;	5545:2:124688:124696	1235596	15	True				
ANR	1235715	Identifier	r		1235596	0					
ANR	1235716	ReturnType	extern int		1235596	1					
ANR	1235717	Identifier	onig_parse_make_tree		1235596	2					
ANR	1235718	ParameterList	"Node * * root , const UChar * pattern , const UChar * end , regex_t * reg , ScanEnv * env"		1235596	3					
ANR	1235719	Parameter	Node * * root	5522:21:124116:124126	1235596	0	True				
ANR	1235720	ParameterType	Node * *		1235596	0					
ANR	1235721	Identifier	root		1235596	1					
ANR	1235722	Parameter	const UChar * pattern	5522:34:124129:124148	1235596	1	True				
ANR	1235723	ParameterType	const UChar *		1235596	0					
ANR	1235724	Identifier	pattern		1235596	1					
ANR	1235725	Parameter	const UChar * end	5522:56:124151:124166	1235596	2	True				
ANR	1235726	ParameterType	const UChar *		1235596	0					
ANR	1235727	Identifier	end		1235596	1					
ANR	1235728	Parameter	regex_t * reg	5523:7:124176:124187	1235596	3	True				
ANR	1235729	ParameterType	regex_t *		1235596	0					
ANR	1235730	Identifier	reg		1235596	1					
ANR	1235731	Parameter	ScanEnv * env	5523:21:124190:124201	1235596	4	True				
ANR	1235732	ParameterType	ScanEnv *		1235596	0					
ANR	1235733	Identifier	env		1235596	1					
ANR	1235734	CFGEntryNode	ENTRY		1235596		True				
ANR	1235735	CFGExitNode	EXIT		1235596		True				
ANR	1235736	Symbol	pattern		1235596						
ANR	1235737	Symbol	env -> enc		1235596						
ANR	1235738	Symbol	env -> reg		1235596						
ANR	1235739	Symbol	env -> option		1235596						
ANR	1235740	Symbol	reg		1235596						
ANR	1235741	Symbol	reg -> options		1235596						
ANR	1235742	Symbol	root		1235596						
ANR	1235743	Symbol	end		1235596						
ANR	1235744	Symbol	reg -> num_mem		1235596						
ANR	1235745	Symbol	NULL		1235596						
ANR	1235746	Symbol	* env		1235596						
ANR	1235747	Symbol	env -> num_mem		1235596						
ANR	1235748	Symbol	env		1235596						
ANR	1235749	Symbol	env -> syntax		1235596						
ANR	1235750	Symbol	reg -> enc		1235596						
ANR	1235751	Symbol	p		1235596						
ANR	1235752	Symbol	r		1235596						
ANR	1235753	Symbol	env -> pattern		1235596						
ANR	1235754	Symbol	parse_regexp		1235596						
ANR	1235755	Symbol	reg -> syntax		1235596						
ANR	1235756	Symbol	& p		1235596						
ANR	1235757	Symbol	env -> pattern_end		1235596						
ANR	1235758	Symbol	env -> case_fold_flag		1235596						
ANR	1235759	Symbol	reg -> case_fold_flag		1235596						
ANR	1235760	Symbol	* root		1235596						
ANR	1235761	Symbol	* reg		1235596						
ANR	1235762	Function	onig_scan_env_set_error_string	5548:0:124701:124866							
ANR	1235763	FunctionDef	"onig_scan_env_set_error_string (ScanEnv * env , int ecode ARG_UNUSED , UChar * arg , UChar * arg_end)"		1235762	0					
ANR	1235764	CompoundStatement		5551:0:124812:124866	1235762	0					
ANR	1235765	ExpressionStatement	env -> error = arg	5552:2:124816:124836	1235762	0	True				
ANR	1235766	AssignmentExpression	env -> error = arg		1235762	0		=			
ANR	1235767	PtrMemberAccess	env -> error		1235762	0					
ANR	1235768	Identifier	env		1235762	0					
ANR	1235769	Identifier	error		1235762	1					
ANR	1235770	Identifier	arg		1235762	1					
ANR	1235771	ExpressionStatement	env -> error_end = arg_end	5553:2:124840:124864	1235762	1	True				
ANR	1235772	AssignmentExpression	env -> error_end = arg_end		1235762	0		=			
ANR	1235773	PtrMemberAccess	env -> error_end		1235762	0					
ANR	1235774	Identifier	env		1235762	0					
ANR	1235775	Identifier	error_end		1235762	1					
ANR	1235776	Identifier	arg_end		1235762	1					
ANR	1235777	ReturnType	extern void		1235762	1					
ANR	1235778	Identifier	onig_scan_env_set_error_string		1235762	2					
ANR	1235779	ParameterList	"ScanEnv * env , int ecode ARG_UNUSED , UChar * arg , UChar * arg_end"		1235762	3					
ANR	1235780	Parameter	ScanEnv * env	5549:31:124744:124755	1235762	0	True				
ANR	1235781	ParameterType	ScanEnv *		1235762	0					
ANR	1235782	Identifier	env		1235762	1					
ANR	1235783	Parameter	int ecode ARG_UNUSED	5549:45:124758:124777	1235762	1	True				
ANR	1235784	ParameterType	int ecode		1235762	0					
ANR	1235785	Identifier	ARG_UNUSED		1235762	1					
ANR	1235786	Parameter	UChar * arg	5550:4:124784:124793	1235762	2	True				
ANR	1235787	ParameterType	UChar *		1235762	0					
ANR	1235788	Identifier	arg		1235762	1					
ANR	1235789	Parameter	UChar * arg_end	5550:16:124796:124809	1235762	3	True				
ANR	1235790	ParameterType	UChar *		1235762	0					
ANR	1235791	Identifier	arg_end		1235762	1					
ANR	1235792	CFGEntryNode	ENTRY		1235762		True				
ANR	1235793	CFGExitNode	EXIT		1235762		True				
ANR	1235794	Symbol	env -> error		1235762						
ANR	1235795	Symbol	arg		1235762						
ANR	1235796	Symbol	* env		1235762						
ANR	1235797	Symbol	env		1235762						
ANR	1235798	Symbol	ARG_UNUSED		1235762						
ANR	1235799	Symbol	env -> error_end		1235762						
ANR	1235800	Symbol	arg_end		1235762						
