command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1142423	File	data/converged/CVE-2015-8617_php-src/ext_mbstring_oniguruma_enc_iso8859_16.c								
ANR	1142424	DeclStmt									
ANR	1142425	Decl							const UChar	const UChar [ 256 ]	EncISO_8859_16_ToLowerCaseTable
ANR	1142426	DeclStmt									
ANR	1142427	Decl							const unsigned short	const unsigned short [ 256 ]	EncISO_8859_16_CtypeTable
ANR	1142428	DeclStmt									
ANR	1142429	Decl							const UChar	const UChar *	p
ANR	1142430	Function	is_mbc_ambiguous	125:0:6574:6987							
ANR	1142431	FunctionDef	"is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		1142430	0					
ANR	1142432	CompoundStatement		127:0:6661:6987	1142430	0					
ANR	1142433	IdentifierDeclStatement	int v ;	128:2:6665:6670	1142430	0	True				
ANR	1142434	IdentifierDecl	v		1142430	0					
ANR	1142435	IdentifierDeclType	int		1142430	0					
ANR	1142436	Identifier	v		1142430	1					
ANR	1142437	IdentifierDeclStatement	const UChar * p = * pp ;	129:2:6674:6694	1142430	1	True				
ANR	1142438	IdentifierDecl	* p = * pp		1142430	0					
ANR	1142439	IdentifierDeclType	const UChar *		1142430	0					
ANR	1142440	Identifier	p		1142430	1					
ANR	1142441	AssignmentExpression	* p = * pp		1142430	2		=			
ANR	1142442	Identifier	p		1142430	0					
ANR	1142443	UnaryOperationExpression	* pp		1142430	1					
ANR	1142444	UnaryOperator	*		1142430	0					
ANR	1142445	Identifier	pp		1142430	1					
ANR	1142446	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		1142430	2					
ANR	1142447	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	131:6:6703:6767	1142430	0	True				
ANR	1142448	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		1142430	0		&&			
ANR	1142449	EqualityExpression	* p == 0xdf		1142430	0		==			
ANR	1142450	UnaryOperationExpression	* p		1142430	0					
ANR	1142451	UnaryOperator	*		1142430	0					
ANR	1142452	Identifier	p		1142430	1					
ANR	1142453	PrimaryExpression	0xdf		1142430	1					
ANR	1142454	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		1142430	1		!=			
ANR	1142455	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1142430	0		&			
ANR	1142456	Identifier	flag		1142430	0					
ANR	1142457	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1142430	1					
ANR	1142458	PrimaryExpression	0		1142430	1					
ANR	1142459	CompoundStatement		5:73:108:108	1142430	1					
ANR	1142460	ExpressionStatement	( * pp ) ++	132:4:6776:6783	1142430	0	True				
ANR	1142461	PostIncDecOperationExpression	( * pp ) ++		1142430	0					
ANR	1142462	UnaryOperationExpression	* pp		1142430	0					
ANR	1142463	UnaryOperator	*		1142430	0					
ANR	1142464	Identifier	pp		1142430	1					
ANR	1142465	IncDec	++		1142430	1					
ANR	1142466	ReturnStatement	return TRUE ;	133:4:6789:6800	1142430	1	True				
ANR	1142467	Identifier	TRUE		1142430	0					
ANR	1142468	ExpressionStatement	( * pp ) ++	136:2:6809:6816	1142430	3	True				
ANR	1142469	PostIncDecOperationExpression	( * pp ) ++		1142430	0					
ANR	1142470	UnaryOperationExpression	* pp		1142430	0					
ANR	1142471	UnaryOperator	*		1142430	0					
ANR	1142472	Identifier	pp		1142430	1					
ANR	1142473	IncDec	++		1142430	1					
ANR	1142474	ExpressionStatement	v = ( EncISO_8859_16_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )	137:2:6820:6893	1142430	4	True				
ANR	1142475	AssignmentExpression	v = ( EncISO_8859_16_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )		1142430	0		=			
ANR	1142476	Identifier	v		1142430	0					
ANR	1142477	BitAndExpression	EncISO_8859_16_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER )		1142430	1		&			
ANR	1142478	ArrayIndexing	EncISO_8859_16_CtypeTable [ * p ]		1142430	0					
ANR	1142479	Identifier	EncISO_8859_16_CtypeTable		1142430	0					
ANR	1142480	UnaryOperationExpression	* p		1142430	1					
ANR	1142481	UnaryOperator	*		1142430	0					
ANR	1142482	Identifier	p		1142430	1					
ANR	1142483	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		1142430	1		|			
ANR	1142484	Identifier	BIT_CTYPE_UPPER		1142430	0					
ANR	1142485	Identifier	BIT_CTYPE_LOWER		1142430	1					
ANR	1142486	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		1142430	5					
ANR	1142487	Condition	( v | BIT_CTYPE_LOWER ) != 0	138:6:6901:6926	1142430	0	True				
ANR	1142488	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		1142430	0		!=			
ANR	1142489	InclusiveOrExpression	v | BIT_CTYPE_LOWER		1142430	0		|			
ANR	1142490	Identifier	v		1142430	0					
ANR	1142491	Identifier	BIT_CTYPE_LOWER		1142430	1					
ANR	1142492	PrimaryExpression	0		1142430	1					
ANR	1142493	CompoundStatement		12:34:267:267	1142430	1					
ANR	1142494	ReturnStatement	return TRUE ;	139:4:6935:6946	1142430	0	True				
ANR	1142495	Identifier	TRUE		1142430	0					
ANR	1142496	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	142:2:6955:6985	1142430	6	True				
ANR	1142497	ConditionalExpression	v != 0 ? TRUE : FALSE		1142430	0					
ANR	1142498	Condition	v != 0		1142430	0					
ANR	1142499	EqualityExpression	v != 0		1142430	0		!=			
ANR	1142500	Identifier	v		1142430	0					
ANR	1142501	PrimaryExpression	0		1142430	1					
ANR	1142502	Identifier	TRUE		1142430	1					
ANR	1142503	Identifier	FALSE		1142430	2					
ANR	1142504	ReturnType	static int		1142430	1					
ANR	1142505	Identifier	is_mbc_ambiguous		1142430	2					
ANR	1142506	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		1142430	3					
ANR	1142507	Parameter	OnigCaseFoldType flag	126:17:6602:6622	1142430	0	True				
ANR	1142508	ParameterType	OnigCaseFoldType		1142430	0					
ANR	1142509	Identifier	flag		1142430	1					
ANR	1142510	Parameter	const UChar * * pp	126:40:6625:6640	1142430	1	True				
ANR	1142511	ParameterType	const UChar * *		1142430	0					
ANR	1142512	Identifier	pp		1142430	1					
ANR	1142513	Parameter	const UChar * end	126:58:6643:6658	1142430	2	True				
ANR	1142514	ParameterType	const UChar *		1142430	0					
ANR	1142515	Identifier	end		1142430	1					
ANR	1142516	CFGEntryNode	ENTRY		1142430		True				
ANR	1142517	CFGExitNode	EXIT		1142430		True				
ANR	1142518	Symbol	pp		1142430						
ANR	1142519	Symbol	EncISO_8859_16_CtypeTable		1142430						
ANR	1142520	Symbol	flag		1142430						
ANR	1142521	Symbol	* pp		1142430						
ANR	1142522	Symbol	TRUE		1142430						
ANR	1142523	Symbol	p		1142430						
ANR	1142524	Symbol	* EncISO_8859_16_CtypeTable		1142430						
ANR	1142525	Symbol	v		1142430						
ANR	1142526	Symbol	BIT_CTYPE_LOWER		1142430						
ANR	1142527	Symbol	end		1142430						
ANR	1142528	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		1142430						
ANR	1142529	Symbol	* p		1142430						
ANR	1142530	Symbol	BIT_CTYPE_UPPER		1142430						
ANR	1142531	Symbol	FALSE		1142430						
ANR	1142532	Symbol	* * p		1142430						
ANR	1142533	Function	is_code_ctype	146:0:6997:7157							
ANR	1142534	FunctionDef	"is_code_ctype (OnigCodePoint code , unsigned int ctype)"		1142533	0					
ANR	1142535	CompoundStatement		148:0:7062:7157	1142533	0					
ANR	1142536	IfStatement	if ( code < 256 )		1142533	0					
ANR	1142537	Condition	code < 256	149:6:7070:7079	1142533	0	True				
ANR	1142538	RelationalExpression	code < 256		1142533	0		<			
ANR	1142539	Identifier	code		1142533	0					
ANR	1142540	PrimaryExpression	256		1142533	1					
ANR	1142541	ReturnStatement	"return ENC_IS_ISO_8859_16_CTYPE ( code , ctype ) ;"	150:4:7086:7130	1142533	1	True				
ANR	1142542	CallExpression	"ENC_IS_ISO_8859_16_CTYPE ( code , ctype )"		1142533	0					
ANR	1142543	Callee	ENC_IS_ISO_8859_16_CTYPE		1142533	0					
ANR	1142544	Identifier	ENC_IS_ISO_8859_16_CTYPE		1142533	0					
ANR	1142545	ArgumentList	code		1142533	1					
ANR	1142546	Argument	code		1142533	0					
ANR	1142547	Identifier	code		1142533	0					
ANR	1142548	Argument	ctype		1142533	1					
ANR	1142549	Identifier	ctype		1142533	0					
ANR	1142550	ElseStatement	else		1142533	0					
ANR	1142551	ReturnStatement	return FALSE ;	152:4:7143:7155	1142533	0	True				
ANR	1142552	Identifier	FALSE		1142533	0					
ANR	1142553	ReturnType	static int		1142533	1					
ANR	1142554	Identifier	is_code_ctype		1142533	2					
ANR	1142555	ParameterList	"OnigCodePoint code , unsigned int ctype"		1142533	3					
ANR	1142556	Parameter	OnigCodePoint code	147:14:7022:7039	1142533	0	True				
ANR	1142557	ParameterType	OnigCodePoint		1142533	0					
ANR	1142558	Identifier	code		1142533	1					
ANR	1142559	Parameter	unsigned int ctype	147:34:7042:7059	1142533	1	True				
ANR	1142560	ParameterType	unsigned int		1142533	0					
ANR	1142561	Identifier	ctype		1142533	1					
ANR	1142562	CFGEntryNode	ENTRY		1142533		True				
ANR	1142563	CFGExitNode	EXIT		1142533		True				
ANR	1142564	Symbol	code		1142533						
ANR	1142565	Symbol	ctype		1142533						
ANR	1142566	Symbol	ENC_IS_ISO_8859_16_CTYPE		1142533						
ANR	1142567	Symbol	FALSE		1142533						
ANR	1142568	DeclStmt									
ANR	1142569	Decl							const OnigPairCaseFoldCodes	const OnigPairCaseFoldCodes [ ]	CaseFoldMap
ANR	1142570	Function	apply_all_case_fold	202:0:7916:8172							
ANR	1142571	FunctionDef	"apply_all_case_fold (OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg)"		1142570	0					
ANR	1142572	CompoundStatement		205:0:8015:8172	1142570	0					
ANR	1142573	ReturnStatement	"return onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg ) ;"	206:2:8019:8170	1142570	0	True				
ANR	1142574	CallExpression	"onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg )"		1142570	0					
ANR	1142575	Callee	onigenc_apply_all_case_fold_with_map		1142570	0					
ANR	1142576	Identifier	onigenc_apply_all_case_fold_with_map		1142570	0					
ANR	1142577	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1142570	1					
ANR	1142578	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1142570	0					
ANR	1142579	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1142570	0		/			
ANR	1142580	SizeofExpression	sizeof ( CaseFoldMap )		1142570	0					
ANR	1142581	Sizeof	sizeof		1142570	0					
ANR	1142582	SizeofOperand	CaseFoldMap		1142570	1					
ANR	1142583	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		1142570	1					
ANR	1142584	Sizeof	sizeof		1142570	0					
ANR	1142585	SizeofOperand	OnigPairCaseFoldCodes		1142570	1					
ANR	1142586	Argument	CaseFoldMap		1142570	1					
ANR	1142587	Identifier	CaseFoldMap		1142570	0					
ANR	1142588	Argument	1		1142570	2					
ANR	1142589	PrimaryExpression	1		1142570	0					
ANR	1142590	Argument	flag		1142570	3					
ANR	1142591	Identifier	flag		1142570	0					
ANR	1142592	Argument	f		1142570	4					
ANR	1142593	Identifier	f		1142570	0					
ANR	1142594	Argument	arg		1142570	5					
ANR	1142595	Identifier	arg		1142570	0					
ANR	1142596	ReturnType	static int		1142570	1					
ANR	1142597	Identifier	apply_all_case_fold		1142570	2					
ANR	1142598	ParameterList	"OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg"		1142570	3					
ANR	1142599	Parameter	OnigCaseFoldType flag	203:20:7947:7967	1142570	0	True				
ANR	1142600	ParameterType	OnigCaseFoldType		1142570	0					
ANR	1142601	Identifier	flag		1142570	1					
ANR	1142602	Parameter	OnigApplyAllCaseFoldFunc f	204:6:7976:8001	1142570	1	True				
ANR	1142603	ParameterType	OnigApplyAllCaseFoldFunc		1142570	0					
ANR	1142604	Identifier	f		1142570	1					
ANR	1142605	Parameter	void * arg	204:34:8004:8012	1142570	2	True				
ANR	1142606	ParameterType	void *		1142570	0					
ANR	1142607	Identifier	arg		1142570	1					
ANR	1142608	CFGEntryNode	ENTRY		1142570		True				
ANR	1142609	CFGExitNode	EXIT		1142570		True				
ANR	1142610	Symbol	flag		1142570						
ANR	1142611	Symbol	f		1142570						
ANR	1142612	Symbol	arg		1142570						
ANR	1142613	Symbol	CaseFoldMap		1142570						
ANR	1142614	Symbol	onigenc_apply_all_case_fold_with_map		1142570						
ANR	1142615	Function	get_case_fold_codes_by_str	211:0:8175:8469							
ANR	1142616	FunctionDef	"get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		1142615	0					
ANR	1142617	CompoundStatement		214:0:8312:8469	1142615	0					
ANR	1142618	ReturnStatement	"return onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items ) ;"	215:2:8316:8467	1142615	0	True				
ANR	1142619	CallExpression	"onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items )"		1142615	0					
ANR	1142620	Callee	onigenc_get_case_fold_codes_by_str_with_map		1142615	0					
ANR	1142621	Identifier	onigenc_get_case_fold_codes_by_str_with_map		1142615	0					
ANR	1142622	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1142615	1					
ANR	1142623	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1142615	0					
ANR	1142624	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		1142615	0		/			
ANR	1142625	SizeofExpression	sizeof ( CaseFoldMap )		1142615	0					
ANR	1142626	Sizeof	sizeof		1142615	0					
ANR	1142627	SizeofOperand	CaseFoldMap		1142615	1					
ANR	1142628	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		1142615	1					
ANR	1142629	Sizeof	sizeof		1142615	0					
ANR	1142630	SizeofOperand	OnigPairCaseFoldCodes		1142615	1					
ANR	1142631	Argument	CaseFoldMap		1142615	1					
ANR	1142632	Identifier	CaseFoldMap		1142615	0					
ANR	1142633	Argument	1		1142615	2					
ANR	1142634	PrimaryExpression	1		1142615	0					
ANR	1142635	Argument	flag		1142615	3					
ANR	1142636	Identifier	flag		1142615	0					
ANR	1142637	Argument	p		1142615	4					
ANR	1142638	Identifier	p		1142615	0					
ANR	1142639	Argument	end		1142615	5					
ANR	1142640	Identifier	end		1142615	0					
ANR	1142641	Argument	items		1142615	6					
ANR	1142642	Identifier	items		1142615	0					
ANR	1142643	ReturnType	static int		1142615	1					
ANR	1142644	Identifier	get_case_fold_codes_by_str		1142615	2					
ANR	1142645	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		1142615	3					
ANR	1142646	Parameter	OnigCaseFoldType flag	212:27:8213:8233	1142615	0	True				
ANR	1142647	ParameterType	OnigCaseFoldType		1142615	0					
ANR	1142648	Identifier	flag		1142615	1					
ANR	1142649	Parameter	const OnigUChar * p	213:4:8240:8257	1142615	1	True				
ANR	1142650	ParameterType	const OnigUChar *		1142615	0					
ANR	1142651	Identifier	p		1142615	1					
ANR	1142652	Parameter	const OnigUChar * end	213:24:8260:8279	1142615	2	True				
ANR	1142653	ParameterType	const OnigUChar *		1142615	0					
ANR	1142654	Identifier	end		1142615	1					
ANR	1142655	Parameter	OnigCaseFoldCodeItem items [ ]	213:46:8282:8309	1142615	3	True				
ANR	1142656	ParameterType	OnigCaseFoldCodeItem [ ]		1142615	0					
ANR	1142657	Identifier	items		1142615	1					
ANR	1142658	CFGEntryNode	ENTRY		1142615		True				
ANR	1142659	CFGExitNode	EXIT		1142615		True				
ANR	1142660	Symbol	p		1142615						
ANR	1142661	Symbol	flag		1142615						
ANR	1142662	Symbol	end		1142615						
ANR	1142663	Symbol	CaseFoldMap		1142615						
ANR	1142664	Symbol	onigenc_get_case_fold_codes_by_str_with_map		1142615						
ANR	1142665	Symbol	items		1142615						
ANR	1142666	DeclStmt									
ANR	1142667	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingISO_8859_16
