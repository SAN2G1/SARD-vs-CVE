command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1275754	File	data/converged/CVE-2015-8617_php-src/ext_mcrypt_mcrypt.c								
ANR	1275755	DeclStmt									
ANR	1275756	Decl							int	int	le_mcrypt
ANR	1275757	ClassDef	_php_mcrypt	48:8:1672:1734							
ANR	1275758	DeclStmt									
ANR	1275759	Decl							MCRYPT	MCRYPT	td
ANR	1275760	DeclStmt									
ANR	1275761	Decl							zend_bool	zend_bool	init
ANR	1275762	DeclStmt									
ANR	1275763	Decl							_php_mcrypt	_php_mcrypt	php_mcrypt
ANR	1275764	DeclStmt									
ANR	1275765	Decl							const zend_function_entry	const zend_function_entry [ ]	mcrypt_functions
ANR	1275766	DeclStmt									
ANR	1275767	Decl							zend_module_entry	zend_module_entry	mcrypt_module_entry
ANR	1275768	ClassDef	<unnamed>	284:8:8977:9024							
ANR	1275769	DeclStmt									
ANR	1275770	Decl									iv_source
ANR	1275771	DeclStmt									
ANR	1275772	Decl							define MCRYPT_GET_INI	define MCRYPT_GET_INI	cipher_dir_string
ANR	1275773	DeclStmt									
ANR	1275774	Decl							define MCRYPT_GET_TD_ARG zval	define MCRYPT_GET_TD_ARG zval *	mcryptind
ANR	1275775	DeclStmt									
ANR	1275776	Decl							php_mcrypt	php_mcrypt *	pm
ANR	1275777	DeclStmt									
ANR	1275778	Decl							char	char *	dir
ANR	1275779	DeclStmt									
ANR	1275780	Decl							size_t	size_t	dir_len
ANR	1275781	DeclStmt									
ANR	1275782	Decl							char	char *	module
ANR	1275783	DeclStmt									
ANR	1275784	Decl							size_t	size_t	module_len
ANR	1275785	Function	php_mcrypt_module_dtor	342:0:11078:11294							
ANR	1275786	FunctionDef	php_mcrypt_module_dtor (zend_resource * rsrc)		1275785	0					
ANR	1275787	CompoundStatement		343:0:11144:11294	1275785	0					
ANR	1275788	IdentifierDeclStatement	php_mcrypt * pm = ( php_mcrypt * ) rsrc -> ptr ;	344:1:11147:11188	1275785	0	True				
ANR	1275789	IdentifierDecl	* pm = ( php_mcrypt * ) rsrc -> ptr		1275785	0					
ANR	1275790	IdentifierDeclType	php_mcrypt *		1275785	0					
ANR	1275791	Identifier	pm		1275785	1					
ANR	1275792	AssignmentExpression	* pm = ( php_mcrypt * ) rsrc -> ptr		1275785	2		=			
ANR	1275793	Identifier	pm		1275785	0					
ANR	1275794	CastExpression	( php_mcrypt * ) rsrc -> ptr		1275785	1					
ANR	1275795	CastTarget	php_mcrypt *		1275785	0					
ANR	1275796	PtrMemberAccess	rsrc -> ptr		1275785	1					
ANR	1275797	Identifier	rsrc		1275785	0					
ANR	1275798	Identifier	ptr		1275785	1					
ANR	1275799	IfStatement	if ( pm )		1275785	1					
ANR	1275800	Condition	pm	345:5:11195:11196	1275785	0	True				
ANR	1275801	Identifier	pm		1275785	0					
ANR	1275802	CompoundStatement		3:9:54:54	1275785	1					
ANR	1275803	ExpressionStatement	mcrypt_generic_deinit ( pm -> td )	346:2:11203:11232	1275785	0	True				
ANR	1275804	CallExpression	mcrypt_generic_deinit ( pm -> td )		1275785	0					
ANR	1275805	Callee	mcrypt_generic_deinit		1275785	0					
ANR	1275806	Identifier	mcrypt_generic_deinit		1275785	0					
ANR	1275807	ArgumentList	pm -> td		1275785	1					
ANR	1275808	Argument	pm -> td		1275785	0					
ANR	1275809	PtrMemberAccess	pm -> td		1275785	0					
ANR	1275810	Identifier	pm		1275785	0					
ANR	1275811	Identifier	td		1275785	1					
ANR	1275812	ExpressionStatement	mcrypt_module_close ( pm -> td )	347:2:11236:11263	1275785	1	True				
ANR	1275813	CallExpression	mcrypt_module_close ( pm -> td )		1275785	0					
ANR	1275814	Callee	mcrypt_module_close		1275785	0					
ANR	1275815	Identifier	mcrypt_module_close		1275785	0					
ANR	1275816	ArgumentList	pm -> td		1275785	1					
ANR	1275817	Argument	pm -> td		1275785	0					
ANR	1275818	PtrMemberAccess	pm -> td		1275785	0					
ANR	1275819	Identifier	pm		1275785	0					
ANR	1275820	Identifier	td		1275785	1					
ANR	1275821	ExpressionStatement	efree ( pm )	348:2:11267:11276	1275785	2	True				
ANR	1275822	CallExpression	efree ( pm )		1275785	0					
ANR	1275823	Callee	efree		1275785	0					
ANR	1275824	Identifier	efree		1275785	0					
ANR	1275825	ArgumentList	pm		1275785	1					
ANR	1275826	Argument	pm		1275785	0					
ANR	1275827	Identifier	pm		1275785	0					
ANR	1275828	ExpressionStatement	pm = NULL	349:2:11280:11289	1275785	3	True				
ANR	1275829	AssignmentExpression	pm = NULL		1275785	0		=			
ANR	1275830	Identifier	pm		1275785	0					
ANR	1275831	Identifier	NULL		1275785	1					
ANR	1275832	ReturnType	static void		1275785	1					
ANR	1275833	Identifier	php_mcrypt_module_dtor		1275785	2					
ANR	1275834	ParameterList	zend_resource * rsrc		1275785	3					
ANR	1275835	Parameter	zend_resource * rsrc	342:35:11113:11131	1275785	0	True				
ANR	1275836	ParameterType	zend_resource *		1275785	0					
ANR	1275837	Identifier	rsrc		1275785	1					
ANR	1275838	CFGEntryNode	ENTRY		1275785		True				
ANR	1275839	CFGExitNode	EXIT		1275785		True				
ANR	1275840	Symbol	* pm		1275785						
ANR	1275841	Symbol	pm -> td		1275785						
ANR	1275842	Symbol	rsrc -> ptr		1275785						
ANR	1275843	Symbol	NULL		1275785						
ANR	1275844	Symbol	rsrc		1275785						
ANR	1275845	Symbol	* rsrc		1275785						
ANR	1275846	Symbol	pm		1275785						
ANR	1275847	DeclStmt									
ANR	1275848	Decl							char	char * *	modules
ANR	1275849	DeclStmt									
ANR	1275850	Decl							char	char [ 16 ]	mcrypt_api_no
ANR	1275851	DeclStmt									
ANR	1275852	Decl							int	int	i
ANR	1275853	Decl							int	int	count
ANR	1275854	DeclStmt									
ANR	1275855	Decl							smart_str	smart_str	tmp1
ANR	1275856	DeclStmt									
ANR	1275857	Decl							smart_str	smart_str	tmp2
ANR	1275858	DeclStmt									
ANR	1275859	Decl							char	char *	cipher
ANR	1275860	Decl							char	char *	cipher_dir
ANR	1275861	DeclStmt									
ANR	1275862	Decl							char	char *	mode
ANR	1275863	Decl							char	char *	mode_dir
ANR	1275864	DeclStmt									
ANR	1275865	Decl							size_t	size_t	cipher_len
ANR	1275866	Decl							size_t	size_t	cipher_dir_len
ANR	1275867	DeclStmt									
ANR	1275868	Decl							size_t	size_t	mode_len
ANR	1275869	Decl							size_t	size_t	mode_dir_len
ANR	1275870	DeclStmt									
ANR	1275871	Decl							MCRYPT	MCRYPT	td
ANR	1275872	DeclStmt									
ANR	1275873	Decl							php_mcrypt	php_mcrypt *	pm
ANR	1275874	DeclStmt									
ANR	1275875	Decl							char	char *	key
ANR	1275876	Decl							char	char *	iv
ANR	1275877	DeclStmt									
ANR	1275878	Decl							size_t	size_t	key_len
ANR	1275879	Decl							size_t	size_t	iv_len
ANR	1275880	DeclStmt									
ANR	1275881	Decl							zval	zval *	mcryptind
ANR	1275882	DeclStmt									
ANR	1275883	Decl							unsigned char	unsigned char *	key_s
ANR	1275884	Decl							unsigned char	unsigned char *	iv_s
ANR	1275885	DeclStmt									
ANR	1275886	Decl							int	int	max_key_size
ANR	1275887	Decl							int	int	key_size
ANR	1275888	Decl							int	int	iv_size
ANR	1275889	DeclStmt									
ANR	1275890	Decl							php_mcrypt	php_mcrypt *	pm
ANR	1275891	DeclStmt									
ANR	1275892	Decl							int	int	result
ANR	1275893	DeclStmt									
ANR	1275894	Decl							zval	zval *	mcryptind
ANR	1275895	DeclStmt									
ANR	1275896	Decl							char	char *	data
ANR	1275897	DeclStmt									
ANR	1275898	Decl							size_t	size_t	data_len
ANR	1275899	DeclStmt									
ANR	1275900	Decl							php_mcrypt	php_mcrypt *	pm
ANR	1275901	DeclStmt									
ANR	1275902	Decl							zend_string	zend_string *	data_str
ANR	1275903	DeclStmt									
ANR	1275904	Decl							int	int	block_size
ANR	1275905	Decl							int	int	data_size
ANR	1275906	DeclStmt									
ANR	1275907	Decl							zval	zval *	mcryptind
ANR	1275908	DeclStmt									
ANR	1275909	Decl							char	char *	data
ANR	1275910	DeclStmt									
ANR	1275911	Decl							size_t	size_t	data_len
ANR	1275912	DeclStmt									
ANR	1275913	Decl							php_mcrypt	php_mcrypt *	pm
ANR	1275914	DeclStmt									
ANR	1275915	Decl							char	char *	data_s
ANR	1275916	DeclStmt									
ANR	1275917	Decl							int	int	block_size
ANR	1275918	Decl							int	int	data_size
ANR	1275919	DeclStmt									
ANR	1275920	Decl							int	int	i
ANR	1275921	Decl							int	int	count
ANR	1275922	DeclStmt									
ANR	1275923	Decl							int	int *	key_sizes
ANR	1275924	DeclStmt									
ANR	1275925	Decl							MCRYPT_GET_TD_ARG	MCRYPT_GET_TD_ARG ( return_value )	array_init
ANR	1275926	DeclStmt									
ANR	1275927	Decl							MCRYPT_GET_TD_ARG	MCRYPT_GET_TD_ARG	RETURN_LONG
ANR	1275928	DeclStmt									
ANR	1275929	Decl							MCRYPT_GET_TD_ARG	MCRYPT_GET_TD_ARG ( Z_RES_P ( mcryptind ) )	zend_list_close
ANR	1275930	DeclStmt									
ANR	1275931	Decl							MCRYPT_GET_TD_ARG	MCRYPT_GET_TD_ARG	RETURN_LONG
ANR	1275932	DeclStmt									
ANR	1275933	Decl							MCRYPT_GET_TD_ARG	MCRYPT_GET_TD_ARG	RETURN_LONG
ANR	1275934	DeclStmt									
ANR	1275935	Decl							MCRYPT_GET_TD_ARG	MCRYPT_GET_TD_ARG	RETURN_LONG
ANR	1275936	DeclStmt									
ANR	1275937	Decl							char	char *	name
ANR	1275938	DeclStmt									
ANR	1275939	Decl							MCRYPT_GET_TD_ARG	MCRYPT_GET_TD_ARG	name
ANR	1275940	DeclStmt									
ANR	1275941	Decl							char	char *	name
ANR	1275942	DeclStmt									
ANR	1275943	Decl							MCRYPT_GET_TD_ARG	MCRYPT_GET_TD_ARG	name
ANR	1275944	DeclStmt									
ANR	1275945	Decl							int	int	i
ANR	1275946	Decl							int	int	count
ANR	1275947	DeclStmt									
ANR	1275948	Decl							int	int *	key_sizes
ANR	1275949	DeclStmt									
ANR	1275950	Decl							char	char * *	modules
ANR	1275951	DeclStmt									
ANR	1275952	Decl							char	char *	lib_dir
ANR	1275953	DeclStmt									
ANR	1275954	Decl							size_t	size_t	lib_dir_len
ANR	1275955	DeclStmt									
ANR	1275956	Decl							int	int	i
ANR	1275957	Decl							int	int	count
ANR	1275958	DeclStmt									
ANR	1275959	Decl							char	char * *	modules
ANR	1275960	DeclStmt									
ANR	1275961	Decl							char	char *	lib_dir
ANR	1275962	DeclStmt									
ANR	1275963	Decl							size_t	size_t	lib_dir_len
ANR	1275964	DeclStmt									
ANR	1275965	Decl							int	int	i
ANR	1275966	Decl							int	int	count
ANR	1275967	DeclStmt									
ANR	1275968	Decl							char	char *	cipher
ANR	1275969	DeclStmt									
ANR	1275970	Decl							char	char *	module
ANR	1275971	DeclStmt									
ANR	1275972	Decl							size_t	size_t	cipher_len
ANR	1275973	Decl							size_t	size_t	module_len
ANR	1275974	DeclStmt									
ANR	1275975	Decl							char	char *	cipher_dir_string
ANR	1275976	DeclStmt									
ANR	1275977	Decl							char	char *	module_dir_string
ANR	1275978	DeclStmt									
ANR	1275979	Decl							MCRYPT	MCRYPT	td
ANR	1275980	DeclStmt									
ANR	1275981	Decl							char	char *	cipher
ANR	1275982	DeclStmt									
ANR	1275983	Decl							char	char *	module
ANR	1275984	DeclStmt									
ANR	1275985	Decl							size_t	size_t	cipher_len
ANR	1275986	Decl							size_t	size_t	module_len
ANR	1275987	DeclStmt									
ANR	1275988	Decl							char	char *	cipher_dir_string
ANR	1275989	DeclStmt									
ANR	1275990	Decl							char	char *	module_dir_string
ANR	1275991	DeclStmt									
ANR	1275992	Decl							MCRYPT	MCRYPT	td
ANR	1275993	DeclStmt									
ANR	1275994	Decl							char	char *	cipher
ANR	1275995	DeclStmt									
ANR	1275996	Decl							char	char *	module
ANR	1275997	DeclStmt									
ANR	1275998	Decl							size_t	size_t	cipher_len
ANR	1275999	Decl							size_t	size_t	module_len
ANR	1276000	DeclStmt									
ANR	1276001	Decl							char	char *	cipher_dir_string
ANR	1276002	DeclStmt									
ANR	1276003	Decl							char	char *	module_dir_string
ANR	1276004	DeclStmt									
ANR	1276005	Decl							MCRYPT	MCRYPT	td
ANR	1276006	DeclStmt									
ANR	1276007	Decl							char	char *	cipher_dir_string
ANR	1276008	DeclStmt									
ANR	1276009	Decl							char	char *	module_dir_string
ANR	1276010	DeclStmt									
ANR	1276011	Decl							char	char *	cipher_name
ANR	1276012	DeclStmt									
ANR	1276013	Decl							char	char *	cipher
ANR	1276014	DeclStmt									
ANR	1276015	Decl							size_t	size_t	cipher_len
ANR	1276016	DeclStmt									
ANR	1276017	Decl							MCRYPT	MCRYPT	td
ANR	1276018	Function	php_mcrypt_get_key_size_str	1129:0:31496:32378							
ANR	1276019	FunctionDef	"php_mcrypt_get_key_size_str (int max_key_size , const int * key_sizes , int key_size_count)"		1276018	0					
ANR	1276020	CompoundStatement		1131:0:31610:32378	1276018	0					
ANR	1276021	IfStatement	if ( key_size_count == 0 )		1276018	0					
ANR	1276022	Condition	key_size_count == 0	1132:5:31617:31635	1276018	0	True				
ANR	1276023	EqualityExpression	key_size_count == 0		1276018	0		==			
ANR	1276024	Identifier	key_size_count		1276018	0					
ANR	1276025	PrimaryExpression	0		1276018	1					
ANR	1276026	CompoundStatement		3:2:31:40	1276018	1					
ANR	1276027	IdentifierDeclStatement	char * str ;	1133:2:31642:31651	1276018	0	True				
ANR	1276028	IdentifierDecl	* str		1276018	0					
ANR	1276029	IdentifierDeclType	char *		1276018	0					
ANR	1276030	Identifier	str		1276018	1					
ANR	1276031	ExpressionStatement	"spprintf ( & str , 0 , ""Only keys of size 1 to %d supported"" , max_key_size )"	1134:2:31655:31725	1276018	1	True				
ANR	1276032	CallExpression	"spprintf ( & str , 0 , ""Only keys of size 1 to %d supported"" , max_key_size )"		1276018	0					
ANR	1276033	Callee	spprintf		1276018	0					
ANR	1276034	Identifier	spprintf		1276018	0					
ANR	1276035	ArgumentList	& str		1276018	1					
ANR	1276036	Argument	& str		1276018	0					
ANR	1276037	UnaryOperationExpression	& str		1276018	0					
ANR	1276038	UnaryOperator	&		1276018	0					
ANR	1276039	Identifier	str		1276018	1					
ANR	1276040	Argument	0		1276018	1					
ANR	1276041	PrimaryExpression	0		1276018	0					
ANR	1276042	Argument	"""Only keys of size 1 to %d supported"""		1276018	2					
ANR	1276043	PrimaryExpression	"""Only keys of size 1 to %d supported"""		1276018	0					
ANR	1276044	Argument	max_key_size		1276018	3					
ANR	1276045	Identifier	max_key_size		1276018	0					
ANR	1276046	ReturnStatement	return str ;	1135:2:31729:31739	1276018	2	True				
ANR	1276047	Identifier	str		1276018	0					
ANR	1276048	ElseStatement	else		1276018	0					
ANR	1276049	IfStatement	if ( key_size_count == 1 )		1276018	0					
ANR	1276050	Condition	key_size_count == 1	1136:12:31753:31771	1276018	0	True				
ANR	1276051	EqualityExpression	key_size_count == 1		1276018	0		==			
ANR	1276052	Identifier	key_size_count		1276018	0					
ANR	1276053	PrimaryExpression	1		1276018	1					
ANR	1276054	CompoundStatement		7:2:167:176	1276018	1					
ANR	1276055	IdentifierDeclStatement	char * str ;	1137:2:31778:31787	1276018	0	True				
ANR	1276056	IdentifierDecl	* str		1276018	0					
ANR	1276057	IdentifierDeclType	char *		1276018	0					
ANR	1276058	Identifier	str		1276018	1					
ANR	1276059	ExpressionStatement	"spprintf ( & str , 0 , ""Only keys of size %d supported"" , key_sizes [ 0 ] )"	1138:2:31791:31856	1276018	1	True				
ANR	1276060	CallExpression	"spprintf ( & str , 0 , ""Only keys of size %d supported"" , key_sizes [ 0 ] )"		1276018	0					
ANR	1276061	Callee	spprintf		1276018	0					
ANR	1276062	Identifier	spprintf		1276018	0					
ANR	1276063	ArgumentList	& str		1276018	1					
ANR	1276064	Argument	& str		1276018	0					
ANR	1276065	UnaryOperationExpression	& str		1276018	0					
ANR	1276066	UnaryOperator	&		1276018	0					
ANR	1276067	Identifier	str		1276018	1					
ANR	1276068	Argument	0		1276018	1					
ANR	1276069	PrimaryExpression	0		1276018	0					
ANR	1276070	Argument	"""Only keys of size %d supported"""		1276018	2					
ANR	1276071	PrimaryExpression	"""Only keys of size %d supported"""		1276018	0					
ANR	1276072	Argument	key_sizes [ 0 ]		1276018	3					
ANR	1276073	ArrayIndexing	key_sizes [ 0 ]		1276018	0					
ANR	1276074	Identifier	key_sizes		1276018	0					
ANR	1276075	PrimaryExpression	0		1276018	1					
ANR	1276076	ReturnStatement	return str ;	1139:2:31860:31870	1276018	2	True				
ANR	1276077	Identifier	str		1276018	0					
ANR	1276078	ElseStatement	else		1276018	0					
ANR	1276079	CompoundStatement		13:2:305:324	1276018	0					
ANR	1276080	IdentifierDeclStatement	int i ;	1141:2:31884:31889	1276018	0	True				
ANR	1276081	IdentifierDecl	i		1276018	0					
ANR	1276082	IdentifierDeclType	int		1276018	0					
ANR	1276083	Identifier	i		1276018	1					
ANR	1276084	IdentifierDeclStatement	char * result = NULL ;	1142:2:31893:31912	1276018	1	True				
ANR	1276085	IdentifierDecl	* result = NULL		1276018	0					
ANR	1276086	IdentifierDeclType	char *		1276018	0					
ANR	1276087	Identifier	result		1276018	1					
ANR	1276088	AssignmentExpression	* result = NULL		1276018	2		=			
ANR	1276089	Identifier	NULL		1276018	0					
ANR	1276090	Identifier	NULL		1276018	1					
ANR	1276091	IdentifierDeclStatement	smart_str str = { 0 } ;	1143:2:31916:31935	1276018	2	True				
ANR	1276092	IdentifierDecl	str = { 0 }		1276018	0					
ANR	1276093	IdentifierDeclType	smart_str		1276018	0					
ANR	1276094	Identifier	str		1276018	1					
ANR	1276095	AssignmentExpression	str = { 0 }		1276018	2		=			
ANR	1276096	Identifier	str		1276018	0					
ANR	1276097	InitializerList	0		1276018	1					
ANR	1276098	PrimaryExpression	0		1276018	0					
ANR	1276099	ExpressionStatement	"smart_str_appends ( & str , ""Only keys of sizes "" )"	1144:2:31939:31985	1276018	3	True				
ANR	1276100	CallExpression	"smart_str_appends ( & str , ""Only keys of sizes "" )"		1276018	0					
ANR	1276101	Callee	smart_str_appends		1276018	0					
ANR	1276102	Identifier	smart_str_appends		1276018	0					
ANR	1276103	ArgumentList	& str		1276018	1					
ANR	1276104	Argument	& str		1276018	0					
ANR	1276105	UnaryOperationExpression	& str		1276018	0					
ANR	1276106	UnaryOperator	&		1276018	0					
ANR	1276107	Identifier	str		1276018	1					
ANR	1276108	Argument	"""Only keys of sizes """		1276018	1					
ANR	1276109	PrimaryExpression	"""Only keys of sizes """		1276018	0					
ANR	1276110	ForStatement	for ( i = 0 ; i < key_size_count ; ++ i )		1276018	4					
ANR	1276111	ForInit	i = 0 ;	1146:7:31995:32000	1276018	0	True				
ANR	1276112	AssignmentExpression	i = 0		1276018	0		=			
ANR	1276113	Identifier	i		1276018	0					
ANR	1276114	PrimaryExpression	0		1276018	1					
ANR	1276115	Condition	i < key_size_count	1146:14:32002:32019	1276018	1	True				
ANR	1276116	RelationalExpression	i < key_size_count		1276018	0		<			
ANR	1276117	Identifier	i		1276018	0					
ANR	1276118	Identifier	key_size_count		1276018	1					
ANR	1276119	UnaryExpression	++ i	1146:34:32022:32024	1276018	2	True				
ANR	1276120	IncDec	++		1276018	0					
ANR	1276121	Identifier	i		1276018	1					
ANR	1276122	CompoundStatement		16:39:416:416	1276018	3					
ANR	1276123	IfStatement	if ( i == key_size_count - 1 )		1276018	0					
ANR	1276124	Condition	i == key_size_count - 1	1147:7:32036:32058	1276018	0	True				
ANR	1276125	EqualityExpression	i == key_size_count - 1		1276018	0		==			
ANR	1276126	Identifier	i		1276018	0					
ANR	1276127	AdditiveExpression	key_size_count - 1		1276018	1		-			
ANR	1276128	Identifier	key_size_count		1276018	0					
ANR	1276129	PrimaryExpression	1		1276018	1					
ANR	1276130	CompoundStatement		17:32:450:450	1276018	1					
ANR	1276131	ExpressionStatement	"smart_str_appends ( & str , "" or "" )"	1148:4:32067:32098	1276018	0	True				
ANR	1276132	CallExpression	"smart_str_appends ( & str , "" or "" )"		1276018	0					
ANR	1276133	Callee	smart_str_appends		1276018	0					
ANR	1276134	Identifier	smart_str_appends		1276018	0					
ANR	1276135	ArgumentList	& str		1276018	1					
ANR	1276136	Argument	& str		1276018	0					
ANR	1276137	UnaryOperationExpression	& str		1276018	0					
ANR	1276138	UnaryOperator	&		1276018	0					
ANR	1276139	Identifier	str		1276018	1					
ANR	1276140	Argument	""" or """		1276018	1					
ANR	1276141	PrimaryExpression	""" or """		1276018	0					
ANR	1276142	ElseStatement	else		1276018	0					
ANR	1276143	IfStatement	if ( i != 0 )		1276018	0					
ANR	1276144	Condition	i != 0	1149:14:32114:32119	1276018	0	True				
ANR	1276145	EqualityExpression	i != 0		1276018	0		!=			
ANR	1276146	Identifier	i		1276018	0					
ANR	1276147	PrimaryExpression	0		1276018	1					
ANR	1276148	CompoundStatement		19:22:511:511	1276018	1					
ANR	1276149	ExpressionStatement	"smart_str_appends ( & str , "", "" )"	1150:4:32128:32157	1276018	0	True				
ANR	1276150	CallExpression	"smart_str_appends ( & str , "", "" )"		1276018	0					
ANR	1276151	Callee	smart_str_appends		1276018	0					
ANR	1276152	Identifier	smart_str_appends		1276018	0					
ANR	1276153	ArgumentList	& str		1276018	1					
ANR	1276154	Argument	& str		1276018	0					
ANR	1276155	UnaryOperationExpression	& str		1276018	0					
ANR	1276156	UnaryOperator	&		1276018	0					
ANR	1276157	Identifier	str		1276018	1					
ANR	1276158	Argument	""", """		1276018	1					
ANR	1276159	PrimaryExpression	""", """		1276018	0					
ANR	1276160	ExpressionStatement	"smart_str_append_long ( & str , key_sizes [ i ] )"	1153:3:32168:32209	1276018	1	True				
ANR	1276161	CallExpression	"smart_str_append_long ( & str , key_sizes [ i ] )"		1276018	0					
ANR	1276162	Callee	smart_str_append_long		1276018	0					
ANR	1276163	Identifier	smart_str_append_long		1276018	0					
ANR	1276164	ArgumentList	& str		1276018	1					
ANR	1276165	Argument	& str		1276018	0					
ANR	1276166	UnaryOperationExpression	& str		1276018	0					
ANR	1276167	UnaryOperator	&		1276018	0					
ANR	1276168	Identifier	str		1276018	1					
ANR	1276169	Argument	key_sizes [ i ]		1276018	1					
ANR	1276170	ArrayIndexing	key_sizes [ i ]		1276018	0					
ANR	1276171	Identifier	key_sizes		1276018	0					
ANR	1276172	Identifier	i		1276018	1					
ANR	1276173	ExpressionStatement	"smart_str_appends ( & str , "" supported"" )"	1156:2:32218:32255	1276018	5	True				
ANR	1276174	CallExpression	"smart_str_appends ( & str , "" supported"" )"		1276018	0					
ANR	1276175	Callee	smart_str_appends		1276018	0					
ANR	1276176	Identifier	smart_str_appends		1276018	0					
ANR	1276177	ArgumentList	& str		1276018	1					
ANR	1276178	Argument	& str		1276018	0					
ANR	1276179	UnaryOperationExpression	& str		1276018	0					
ANR	1276180	UnaryOperator	&		1276018	0					
ANR	1276181	Identifier	str		1276018	1					
ANR	1276182	Argument	""" supported"""		1276018	1					
ANR	1276183	PrimaryExpression	""" supported"""		1276018	0					
ANR	1276184	ExpressionStatement	smart_str_0 ( & str )	1157:2:32259:32276	1276018	6	True				
ANR	1276185	CallExpression	smart_str_0 ( & str )		1276018	0					
ANR	1276186	Callee	smart_str_0		1276018	0					
ANR	1276187	Identifier	smart_str_0		1276018	0					
ANR	1276188	ArgumentList	& str		1276018	1					
ANR	1276189	Argument	& str		1276018	0					
ANR	1276190	UnaryOperationExpression	& str		1276018	0					
ANR	1276191	UnaryOperator	&		1276018	0					
ANR	1276192	Identifier	str		1276018	1					
ANR	1276193	ExpressionStatement	"result = estrndup ( ZSTR_VAL ( str . s ) , ZSTR_LEN ( str . s ) )"	1158:2:32280:32331	1276018	7	True				
ANR	1276194	AssignmentExpression	"result = estrndup ( ZSTR_VAL ( str . s ) , ZSTR_LEN ( str . s ) )"		1276018	0		=			
ANR	1276195	Identifier	result		1276018	0					
ANR	1276196	CallExpression	"estrndup ( ZSTR_VAL ( str . s ) , ZSTR_LEN ( str . s ) )"		1276018	1					
ANR	1276197	Callee	estrndup		1276018	0					
ANR	1276198	Identifier	estrndup		1276018	0					
ANR	1276199	ArgumentList	ZSTR_VAL ( str . s )		1276018	1					
ANR	1276200	Argument	ZSTR_VAL ( str . s )		1276018	0					
ANR	1276201	CallExpression	ZSTR_VAL ( str . s )		1276018	0					
ANR	1276202	Callee	ZSTR_VAL		1276018	0					
ANR	1276203	Identifier	ZSTR_VAL		1276018	0					
ANR	1276204	ArgumentList	str . s		1276018	1					
ANR	1276205	Argument	str . s		1276018	0					
ANR	1276206	MemberAccess	str . s		1276018	0					
ANR	1276207	Identifier	str		1276018	0					
ANR	1276208	Identifier	s		1276018	1					
ANR	1276209	Argument	ZSTR_LEN ( str . s )		1276018	1					
ANR	1276210	CallExpression	ZSTR_LEN ( str . s )		1276018	0					
ANR	1276211	Callee	ZSTR_LEN		1276018	0					
ANR	1276212	Identifier	ZSTR_LEN		1276018	0					
ANR	1276213	ArgumentList	str . s		1276018	1					
ANR	1276214	Argument	str . s		1276018	0					
ANR	1276215	MemberAccess	str . s		1276018	0					
ANR	1276216	Identifier	str		1276018	0					
ANR	1276217	Identifier	s		1276018	1					
ANR	1276218	ExpressionStatement	smart_str_free ( & str )	1159:2:32335:32355	1276018	8	True				
ANR	1276219	CallExpression	smart_str_free ( & str )		1276018	0					
ANR	1276220	Callee	smart_str_free		1276018	0					
ANR	1276221	Identifier	smart_str_free		1276018	0					
ANR	1276222	ArgumentList	& str		1276018	1					
ANR	1276223	Argument	& str		1276018	0					
ANR	1276224	UnaryOperationExpression	& str		1276018	0					
ANR	1276225	UnaryOperator	&		1276018	0					
ANR	1276226	Identifier	str		1276018	1					
ANR	1276227	ReturnStatement	return result ;	1161:2:32360:32373	1276018	9	True				
ANR	1276228	Identifier	result		1276018	0					
ANR	1276229	ReturnType	static char *		1276018	1					
ANR	1276230	Identifier	php_mcrypt_get_key_size_str		1276018	2					
ANR	1276231	ParameterList	"int max_key_size , const int * key_sizes , int key_size_count"		1276018	3					
ANR	1276232	Parameter	int max_key_size	1130:2:31540:31555	1276018	0	True				
ANR	1276233	ParameterType	int		1276018	0					
ANR	1276234	Identifier	max_key_size		1276018	1					
ANR	1276235	Parameter	const int * key_sizes	1130:20:31558:31577	1276018	1	True				
ANR	1276236	ParameterType	const int *		1276018	0					
ANR	1276237	Identifier	key_sizes		1276018	1					
ANR	1276238	Parameter	int key_size_count	1130:42:31580:31597	1276018	2	True				
ANR	1276239	ParameterType	int		1276018	0					
ANR	1276240	Identifier	key_size_count		1276018	1					
ANR	1276241	CFGEntryNode	ENTRY		1276018		True				
ANR	1276242	CFGExitNode	EXIT		1276018		True				
ANR	1276243	Symbol	key_size_count		1276018						
ANR	1276244	Symbol	NULL		1276018						
ANR	1276245	Symbol	* key_sizes		1276018						
ANR	1276246	Symbol	str . s		1276018						
ANR	1276247	Symbol	max_key_size		1276018						
ANR	1276248	Symbol	i		1276018						
ANR	1276249	Symbol	ZSTR_VAL		1276018						
ANR	1276250	Symbol	str		1276018						
ANR	1276251	Symbol	& str		1276018						
ANR	1276252	Symbol	result		1276018						
ANR	1276253	Symbol	estrndup		1276018						
ANR	1276254	Symbol	* i		1276018						
ANR	1276255	Symbol	key_sizes		1276018						
ANR	1276256	Symbol	ZSTR_LEN		1276018						
ANR	1276257	Function	php_mcrypt_is_valid_key_size	1166:0:32391:32776							
ANR	1276258	FunctionDef	"php_mcrypt_is_valid_key_size (int key_size , int max_key_size , int * key_sizes , int key_size_count)"		1276257	0					
ANR	1276259	CompoundStatement		1168:0:32518:32776	1276257	0					
ANR	1276260	IdentifierDeclStatement	int i ;	1169:1:32521:32526	1276257	0	True				
ANR	1276261	IdentifierDecl	i		1276257	0					
ANR	1276262	IdentifierDeclType	int		1276257	0					
ANR	1276263	Identifier	i		1276257	1					
ANR	1276264	IfStatement	if ( key_size <= 0 || key_size > max_key_size )		1276257	1					
ANR	1276265	Condition	key_size <= 0 || key_size > max_key_size	1171:5:32534:32573	1276257	0	True				
ANR	1276266	OrExpression	key_size <= 0 || key_size > max_key_size		1276257	0		||			
ANR	1276267	RelationalExpression	key_size <= 0		1276257	0		<=			
ANR	1276268	Identifier	key_size		1276257	0					
ANR	1276269	PrimaryExpression	0		1276257	1					
ANR	1276270	RelationalExpression	key_size > max_key_size		1276257	1		>			
ANR	1276271	Identifier	key_size		1276257	0					
ANR	1276272	Identifier	max_key_size		1276257	1					
ANR	1276273	CompoundStatement		4:47:57:57	1276257	1					
ANR	1276274	ReturnStatement	return 0 ;	1172:2:32580:32588	1276257	0	True				
ANR	1276275	PrimaryExpression	0		1276257	0					
ANR	1276276	IfStatement	if ( key_size_count == 0 )		1276257	2					
ANR	1276277	Condition	key_size_count == 0	1175:5:32599:32617	1276257	0	True				
ANR	1276278	EqualityExpression	key_size_count == 0		1276257	0		==			
ANR	1276279	Identifier	key_size_count		1276257	0					
ANR	1276280	PrimaryExpression	0		1276257	1					
ANR	1276281	CompoundStatement		8:26:101:101	1276257	1					
ANR	1276282	ReturnStatement	return 1 ;	1177:2:32656:32664	1276257	0	True				
ANR	1276283	PrimaryExpression	1		1276257	0					
ANR	1276284	ForStatement	for ( i = 0 ; i < key_size_count ; i ++ )		1276257	3					
ANR	1276285	ForInit	i = 0 ;	1180:6:32676:32681	1276257	0	True				
ANR	1276286	AssignmentExpression	i = 0		1276257	0		=			
ANR	1276287	Identifier	i		1276257	0					
ANR	1276288	PrimaryExpression	0		1276257	1					
ANR	1276289	Condition	i < key_size_count	1180:13:32683:32700	1276257	1	True				
ANR	1276290	RelationalExpression	i < key_size_count		1276257	0		<			
ANR	1276291	Identifier	i		1276257	0					
ANR	1276292	Identifier	key_size_count		1276257	1					
ANR	1276293	PostIncDecOperationExpression	i ++	1180:33:32703:32705	1276257	2	True				
ANR	1276294	Identifier	i		1276257	0					
ANR	1276295	IncDec	++		1276257	1					
ANR	1276296	CompoundStatement		13:38:189:189	1276257	3					
ANR	1276297	IfStatement	if ( key_sizes [ i ] == key_size )		1276257	0					
ANR	1276298	Condition	key_sizes [ i ] == key_size	1181:6:32716:32739	1276257	0	True				
ANR	1276299	EqualityExpression	key_sizes [ i ] == key_size		1276257	0		==			
ANR	1276300	ArrayIndexing	key_sizes [ i ]		1276257	0					
ANR	1276301	Identifier	key_sizes		1276257	0					
ANR	1276302	Identifier	i		1276257	1					
ANR	1276303	Identifier	key_size		1276257	1					
ANR	1276304	CompoundStatement		14:32:223:223	1276257	1					
ANR	1276305	ReturnStatement	return 1 ;	1182:3:32747:32755	1276257	0	True				
ANR	1276306	PrimaryExpression	1		1276257	0					
ANR	1276307	ReturnStatement	return 0 ;	1186:1:32766:32774	1276257	4	True				
ANR	1276308	PrimaryExpression	0		1276257	0					
ANR	1276309	ReturnType	static zend_bool		1276257	1					
ANR	1276310	Identifier	php_mcrypt_is_valid_key_size		1276257	2					
ANR	1276311	ParameterList	"int key_size , int max_key_size , int * key_sizes , int key_size_count"		1276257	3					
ANR	1276312	Parameter	int key_size	1167:2:32440:32451	1276257	0	True				
ANR	1276313	ParameterType	int		1276257	0					
ANR	1276314	Identifier	key_size		1276257	1					
ANR	1276315	Parameter	int max_key_size	1167:16:32454:32469	1276257	1	True				
ANR	1276316	ParameterType	int		1276257	0					
ANR	1276317	Identifier	max_key_size		1276257	1					
ANR	1276318	Parameter	int * key_sizes	1167:34:32472:32485	1276257	2	True				
ANR	1276319	ParameterType	int *		1276257	0					
ANR	1276320	Identifier	key_sizes		1276257	1					
ANR	1276321	Parameter	int key_size_count	1167:50:32488:32505	1276257	3	True				
ANR	1276322	ParameterType	int		1276257	0					
ANR	1276323	Identifier	key_size_count		1276257	1					
ANR	1276324	CFGEntryNode	ENTRY		1276257		True				
ANR	1276325	CFGExitNode	EXIT		1276257		True				
ANR	1276326	Symbol	key_size_count		1276257						
ANR	1276327	Symbol	* i		1276257						
ANR	1276328	Symbol	* key_sizes		1276257						
ANR	1276329	Symbol	max_key_size		1276257						
ANR	1276330	Symbol	key_sizes		1276257						
ANR	1276331	Symbol	i		1276257						
ANR	1276332	Symbol	key_size		1276257						
ANR	1276333	Function	php_mcrypt_ensure_valid_key_size	1190:0:32789:33503							
ANR	1276334	FunctionDef	"php_mcrypt_ensure_valid_key_size (MCRYPT td , int key_size)"		1276333	0					
ANR	1276335	CompoundStatement		1191:0:32868:33503	1276333	0					
ANR	1276336	IdentifierDeclStatement	int key_size_count ;	1192:1:32871:32889	1276333	0	True				
ANR	1276337	IdentifierDecl	key_size_count		1276333	0					
ANR	1276338	IdentifierDeclType	int		1276333	0					
ANR	1276339	Identifier	key_size_count		1276333	1					
ANR	1276340	IdentifierDeclStatement	int max_key_size = mcrypt_enc_get_key_size ( td ) ;	1193:1:32892:32938	1276333	1	True				
ANR	1276341	IdentifierDecl	max_key_size = mcrypt_enc_get_key_size ( td )		1276333	0					
ANR	1276342	IdentifierDeclType	int		1276333	0					
ANR	1276343	Identifier	max_key_size		1276333	1					
ANR	1276344	AssignmentExpression	max_key_size = mcrypt_enc_get_key_size ( td )		1276333	2		=			
ANR	1276345	Identifier	max_key_size		1276333	0					
ANR	1276346	CallExpression	mcrypt_enc_get_key_size ( td )		1276333	1					
ANR	1276347	Callee	mcrypt_enc_get_key_size		1276333	0					
ANR	1276348	Identifier	mcrypt_enc_get_key_size		1276333	0					
ANR	1276349	ArgumentList	td		1276333	1					
ANR	1276350	Argument	td		1276333	0					
ANR	1276351	Identifier	td		1276333	0					
ANR	1276352	IdentifierDeclStatement	"int * key_sizes = mcrypt_enc_get_supported_key_sizes ( td , & key_size_count ) ;"	1194:1:32941:33013	1276333	2	True				
ANR	1276353	IdentifierDecl	"* key_sizes = mcrypt_enc_get_supported_key_sizes ( td , & key_size_count )"		1276333	0					
ANR	1276354	IdentifierDeclType	int *		1276333	0					
ANR	1276355	Identifier	key_sizes		1276333	1					
ANR	1276356	AssignmentExpression	"* key_sizes = mcrypt_enc_get_supported_key_sizes ( td , & key_size_count )"		1276333	2		=			
ANR	1276357	Identifier	key_sizes		1276333	0					
ANR	1276358	CallExpression	"mcrypt_enc_get_supported_key_sizes ( td , & key_size_count )"		1276333	1					
ANR	1276359	Callee	mcrypt_enc_get_supported_key_sizes		1276333	0					
ANR	1276360	Identifier	mcrypt_enc_get_supported_key_sizes		1276333	0					
ANR	1276361	ArgumentList	td		1276333	1					
ANR	1276362	Argument	td		1276333	0					
ANR	1276363	Identifier	td		1276333	0					
ANR	1276364	Argument	& key_size_count		1276333	1					
ANR	1276365	UnaryOperationExpression	& key_size_count		1276333	0					
ANR	1276366	UnaryOperator	&		1276333	0					
ANR	1276367	Identifier	key_size_count		1276333	1					
ANR	1276368	IdentifierDeclStatement	"zend_bool is_valid_key_size = php_mcrypt_is_valid_key_size ( key_size , max_key_size , key_sizes , key_size_count ) ;"	1196:1:33017:33131	1276333	3	True				
ANR	1276369	IdentifierDecl	"is_valid_key_size = php_mcrypt_is_valid_key_size ( key_size , max_key_size , key_sizes , key_size_count )"		1276333	0					
ANR	1276370	IdentifierDeclType	zend_bool		1276333	0					
ANR	1276371	Identifier	is_valid_key_size		1276333	1					
ANR	1276372	AssignmentExpression	"is_valid_key_size = php_mcrypt_is_valid_key_size ( key_size , max_key_size , key_sizes , key_size_count )"		1276333	2		=			
ANR	1276373	Identifier	is_valid_key_size		1276333	0					
ANR	1276374	CallExpression	"php_mcrypt_is_valid_key_size ( key_size , max_key_size , key_sizes , key_size_count )"		1276333	1					
ANR	1276375	Callee	php_mcrypt_is_valid_key_size		1276333	0					
ANR	1276376	Identifier	php_mcrypt_is_valid_key_size		1276333	0					
ANR	1276377	ArgumentList	key_size		1276333	1					
ANR	1276378	Argument	key_size		1276333	0					
ANR	1276379	Identifier	key_size		1276333	0					
ANR	1276380	Argument	max_key_size		1276333	1					
ANR	1276381	Identifier	max_key_size		1276333	0					
ANR	1276382	Argument	key_sizes		1276333	2					
ANR	1276383	Identifier	key_sizes		1276333	0					
ANR	1276384	Argument	key_size_count		1276333	3					
ANR	1276385	Identifier	key_size_count		1276333	0					
ANR	1276386	IfStatement	if ( ! is_valid_key_size )		1276333	4					
ANR	1276387	Condition	! is_valid_key_size	1199:5:33138:33155	1276333	0	True				
ANR	1276388	UnaryOperationExpression	! is_valid_key_size		1276333	0					
ANR	1276389	UnaryOperator	!		1276333	0					
ANR	1276390	Identifier	is_valid_key_size		1276333	1					
ANR	1276391	CompoundStatement		10:2:293:389	1276333	1					
ANR	1276392	IdentifierDeclStatement	"char * key_size_str = php_mcrypt_get_key_size_str ( max_key_size , key_sizes , key_size_count ) ;"	1200:2:33162:33258	1276333	0	True				
ANR	1276393	IdentifierDecl	"* key_size_str = php_mcrypt_get_key_size_str ( max_key_size , key_sizes , key_size_count )"		1276333	0					
ANR	1276394	IdentifierDeclType	char *		1276333	0					
ANR	1276395	Identifier	key_size_str		1276333	1					
ANR	1276396	AssignmentExpression	"* key_size_str = php_mcrypt_get_key_size_str ( max_key_size , key_sizes , key_size_count )"		1276333	2		=			
ANR	1276397	Identifier	key_size_str		1276333	0					
ANR	1276398	CallExpression	"php_mcrypt_get_key_size_str ( max_key_size , key_sizes , key_size_count )"		1276333	1					
ANR	1276399	Callee	php_mcrypt_get_key_size_str		1276333	0					
ANR	1276400	Identifier	php_mcrypt_get_key_size_str		1276333	0					
ANR	1276401	ArgumentList	max_key_size		1276333	1					
ANR	1276402	Argument	max_key_size		1276333	0					
ANR	1276403	Identifier	max_key_size		1276333	0					
ANR	1276404	Argument	key_sizes		1276333	1					
ANR	1276405	Identifier	key_sizes		1276333	0					
ANR	1276406	Argument	key_size_count		1276333	2					
ANR	1276407	Identifier	key_size_count		1276333	0					
ANR	1276408	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Key of size %d not supported by this algorithm. %s"" , key_size , key_size_str )"	1203:2:33262:33379	1276333	1	True				
ANR	1276409	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Key of size %d not supported by this algorithm. %s"" , key_size , key_size_str )"		1276333	0					
ANR	1276410	Callee	php_error_docref		1276333	0					
ANR	1276411	Identifier	php_error_docref		1276333	0					
ANR	1276412	ArgumentList	NULL		1276333	1					
ANR	1276413	Argument	NULL		1276333	0					
ANR	1276414	Identifier	NULL		1276333	0					
ANR	1276415	Argument	E_WARNING		1276333	1					
ANR	1276416	Identifier	E_WARNING		1276333	0					
ANR	1276417	Argument	"""Key of size %d not supported by this algorithm. %s"""		1276333	2					
ANR	1276418	PrimaryExpression	"""Key of size %d not supported by this algorithm. %s"""		1276333	0					
ANR	1276419	Argument	key_size		1276333	3					
ANR	1276420	Identifier	key_size		1276333	0					
ANR	1276421	Argument	key_size_str		1276333	4					
ANR	1276422	Identifier	key_size_str		1276333	0					
ANR	1276423	ExpressionStatement	efree ( key_size_str )	1206:2:33383:33402	1276333	2	True				
ANR	1276424	CallExpression	efree ( key_size_str )		1276333	0					
ANR	1276425	Callee	efree		1276333	0					
ANR	1276426	Identifier	efree		1276333	0					
ANR	1276427	ArgumentList	key_size_str		1276333	1					
ANR	1276428	Argument	key_size_str		1276333	0					
ANR	1276429	Identifier	key_size_str		1276333	0					
ANR	1276430	IfStatement	if ( key_sizes )		1276333	5					
ANR	1276431	Condition	key_sizes	1209:5:33413:33421	1276333	0	True				
ANR	1276432	Identifier	key_sizes		1276333	0					
ANR	1276433	CompoundStatement		19:16:555:555	1276333	1					
ANR	1276434	ExpressionStatement	mcrypt_free ( key_sizes )	1210:2:33428:33450	1276333	0	True				
ANR	1276435	CallExpression	mcrypt_free ( key_sizes )		1276333	0					
ANR	1276436	Callee	mcrypt_free		1276333	0					
ANR	1276437	Identifier	mcrypt_free		1276333	0					
ANR	1276438	ArgumentList	key_sizes		1276333	1					
ANR	1276439	Argument	key_sizes		1276333	0					
ANR	1276440	Identifier	key_sizes		1276333	0					
ANR	1276441	ReturnStatement	return is_valid_key_size ? SUCCESS : FAILURE ;	1213:1:33457:33501	1276333	6	True				
ANR	1276442	ConditionalExpression	is_valid_key_size ? SUCCESS : FAILURE		1276333	0					
ANR	1276443	Condition	is_valid_key_size		1276333	0					
ANR	1276444	Identifier	is_valid_key_size		1276333	0					
ANR	1276445	Identifier	SUCCESS		1276333	1					
ANR	1276446	Identifier	FAILURE		1276333	2					
ANR	1276447	ReturnType	static int		1276333	1					
ANR	1276448	Identifier	php_mcrypt_ensure_valid_key_size		1276333	2					
ANR	1276449	ParameterList	"MCRYPT td , int key_size"		1276333	3					
ANR	1276450	Parameter	MCRYPT td	1190:44:32833:32841	1276333	0	True				
ANR	1276451	ParameterType	MCRYPT		1276333	0					
ANR	1276452	Identifier	td		1276333	1					
ANR	1276453	Parameter	int key_size	1190:55:32844:32855	1276333	1	True				
ANR	1276454	ParameterType	int		1276333	0					
ANR	1276455	Identifier	key_size		1276333	1					
ANR	1276456	CFGEntryNode	ENTRY		1276333		True				
ANR	1276457	CFGExitNode	EXIT		1276333		True				
ANR	1276458	Symbol	key_size_count		1276333						
ANR	1276459	Symbol	NULL		1276333						
ANR	1276460	Symbol	SUCCESS		1276333						
ANR	1276461	Symbol	key_size_str		1276333						
ANR	1276462	Symbol	max_key_size		1276333						
ANR	1276463	Symbol	php_mcrypt_is_valid_key_size		1276333						
ANR	1276464	Symbol	is_valid_key_size		1276333						
ANR	1276465	Symbol	& key_size_count		1276333						
ANR	1276466	Symbol	FAILURE		1276333						
ANR	1276467	Symbol	td		1276333						
ANR	1276468	Symbol	E_WARNING		1276333						
ANR	1276469	Symbol	key_sizes		1276333						
ANR	1276470	Symbol	mcrypt_enc_get_supported_key_sizes		1276333						
ANR	1276471	Symbol	mcrypt_enc_get_key_size		1276333						
ANR	1276472	Symbol	php_mcrypt_get_key_size_str		1276333						
ANR	1276473	Symbol	key_size		1276333						
ANR	1276474	Function	php_mcrypt_ensure_valid_iv	1217:0:33516:34240							
ANR	1276475	FunctionDef	"php_mcrypt_ensure_valid_iv (MCRYPT td , const char * iv , int iv_size)"		1276474	0					
ANR	1276476	CompoundStatement		1218:0:33604:34240	1276474	0					
ANR	1276477	IfStatement	if ( mcrypt_enc_mode_has_iv ( td ) == 1 )		1276474	0					
ANR	1276478	Condition	mcrypt_enc_mode_has_iv ( td ) == 1	1219:5:33611:33641	1276474	0	True				
ANR	1276479	EqualityExpression	mcrypt_enc_mode_has_iv ( td ) == 1		1276474	0		==			
ANR	1276480	CallExpression	mcrypt_enc_mode_has_iv ( td )		1276474	0					
ANR	1276481	Callee	mcrypt_enc_mode_has_iv		1276474	0					
ANR	1276482	Identifier	mcrypt_enc_mode_has_iv		1276474	0					
ANR	1276483	ArgumentList	td		1276474	1					
ANR	1276484	Argument	td		1276474	0					
ANR	1276485	Identifier	td		1276474	0					
ANR	1276486	PrimaryExpression	1		1276474	1					
ANR	1276487	CompoundStatement		3:2:43:92	1276474	1					
ANR	1276488	IdentifierDeclStatement	int expected_iv_size = mcrypt_enc_get_iv_size ( td ) ;	1220:2:33648:33697	1276474	0	True				
ANR	1276489	IdentifierDecl	expected_iv_size = mcrypt_enc_get_iv_size ( td )		1276474	0					
ANR	1276490	IdentifierDeclType	int		1276474	0					
ANR	1276491	Identifier	expected_iv_size		1276474	1					
ANR	1276492	AssignmentExpression	expected_iv_size = mcrypt_enc_get_iv_size ( td )		1276474	2		=			
ANR	1276493	Identifier	expected_iv_size		1276474	0					
ANR	1276494	CallExpression	mcrypt_enc_get_iv_size ( td )		1276474	1					
ANR	1276495	Callee	mcrypt_enc_get_iv_size		1276474	0					
ANR	1276496	Identifier	mcrypt_enc_get_iv_size		1276474	0					
ANR	1276497	ArgumentList	td		1276474	1					
ANR	1276498	Argument	td		1276474	0					
ANR	1276499	Identifier	td		1276474	0					
ANR	1276500	IfStatement	if ( expected_iv_size == 0 )		1276474	1					
ANR	1276501	Condition	expected_iv_size == 0	1221:6:33705:33725	1276474	0	True				
ANR	1276502	EqualityExpression	expected_iv_size == 0		1276474	0		==			
ANR	1276503	Identifier	expected_iv_size		1276474	0					
ANR	1276504	PrimaryExpression	0		1276474	1					
ANR	1276505	CompoundStatement		4:29:123:123	1276474	1					
ANR	1276506	ReturnStatement	return SUCCESS ;	1223:3:33798:33812	1276474	0	True				
ANR	1276507	Identifier	SUCCESS		1276474	0					
ANR	1276508	IfStatement	if ( ! iv )		1276474	2					
ANR	1276509	Condition	! iv	1226:6:33825:33827	1276474	0	True				
ANR	1276510	UnaryOperationExpression	! iv		1276474	0					
ANR	1276511	UnaryOperator	!		1276474	0					
ANR	1276512	Identifier	iv		1276474	1					
ANR	1276513	CompoundStatement		9:11:225:225	1276474	1					
ANR	1276514	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Encryption mode requires an initialization vector of size %d"" , expected_iv_size )"	1227:3:33835:33958	1276474	0	True				
ANR	1276515	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Encryption mode requires an initialization vector of size %d"" , expected_iv_size )"		1276474	0					
ANR	1276516	Callee	php_error_docref		1276474	0					
ANR	1276517	Identifier	php_error_docref		1276474	0					
ANR	1276518	ArgumentList	NULL		1276474	1					
ANR	1276519	Argument	NULL		1276474	0					
ANR	1276520	Identifier	NULL		1276474	0					
ANR	1276521	Argument	E_WARNING		1276474	1					
ANR	1276522	Identifier	E_WARNING		1276474	0					
ANR	1276523	Argument	"""Encryption mode requires an initialization vector of size %d"""		1276474	2					
ANR	1276524	PrimaryExpression	"""Encryption mode requires an initialization vector of size %d"""		1276474	0					
ANR	1276525	Argument	expected_iv_size		1276474	3					
ANR	1276526	Identifier	expected_iv_size		1276474	0					
ANR	1276527	ReturnStatement	return FAILURE ;	1230:3:33963:33977	1276474	1	True				
ANR	1276528	Identifier	FAILURE		1276474	0					
ANR	1276529	IfStatement	if ( iv_size != expected_iv_size )		1276474	3					
ANR	1276530	Condition	iv_size != expected_iv_size	1233:6:33990:34016	1276474	0	True				
ANR	1276531	EqualityExpression	iv_size != expected_iv_size		1276474	0		!=			
ANR	1276532	Identifier	iv_size		1276474	0					
ANR	1276533	Identifier	expected_iv_size		1276474	1					
ANR	1276534	CompoundStatement		16:35:414:414	1276474	1					
ANR	1276535	Statement	php_error_docref	1234:3:34024:34039	1276474	0	True				
ANR	1276536	Statement	(	1234:19:34040:34040	1276474	1	True				
ANR	1276537	Statement	NULL	1234:20:34041:34044	1276474	2	True				
ANR	1276538	Statement	","	1234:24:34045:34045	1276474	3	True				
ANR	1276539	Statement	E_WARNING	1234:26:34047:34055	1276474	4	True				
ANR	1276540	Statement	","	1234:35:34056:34056	1276474	5	True				
ANR	1276541	Statement	"""Received initialization vector of size %d, but size %d is required """	1235:4:34062:34130	1276474	6	True				
ANR	1276542	Statement	"""for this encryption mode"""	1236:4:34136:34161	1276474	7	True				
ANR	1276543	Statement	","	1236:30:34162:34162	1276474	8	True				
ANR	1276544	Statement	iv_size	1236:32:34164:34170	1276474	9	True				
ANR	1276545	Statement	","	1236:39:34171:34171	1276474	10	True				
ANR	1276546	Statement	expected_iv_size	1236:41:34173:34188	1276474	11	True				
ANR	1276547	Statement	)	1237:3:34193:34193	1276474	12	True				
ANR	1276548	ExpressionStatement		1237:4:34194:34194	1276474	13	True				
ANR	1276549	ReturnStatement	return FAILURE ;	1238:3:34199:34213	1276474	14	True				
ANR	1276550	Identifier	FAILURE		1276474	0					
ANR	1276551	ReturnStatement	return SUCCESS ;	1242:1:34224:34238	1276474	1	True				
ANR	1276552	Identifier	SUCCESS		1276474	0					
ANR	1276553	ReturnType	static int		1276474	1					
ANR	1276554	Identifier	php_mcrypt_ensure_valid_iv		1276474	2					
ANR	1276555	ParameterList	"MCRYPT td , const char * iv , int iv_size"		1276474	3					
ANR	1276556	Parameter	MCRYPT td	1217:38:33554:33562	1276474	0	True				
ANR	1276557	ParameterType	MCRYPT		1276474	0					
ANR	1276558	Identifier	td		1276474	1					
ANR	1276559	Parameter	const char * iv	1217:49:33565:33578	1276474	1	True				
ANR	1276560	ParameterType	const char *		1276474	0					
ANR	1276561	Identifier	iv		1276474	1					
ANR	1276562	Parameter	int iv_size	1217:65:33581:33591	1276474	2	True				
ANR	1276563	ParameterType	int		1276474	0					
ANR	1276564	Identifier	iv_size		1276474	1					
ANR	1276565	CFGEntryNode	ENTRY		1276474		True				
ANR	1276566	CFGExitNode	EXIT		1276474		True				
ANR	1276567	Symbol	td		1276474						
ANR	1276568	Symbol	E_WARNING		1276474						
ANR	1276569	Symbol	SUCCESS		1276474						
ANR	1276570	Symbol	NULL		1276474						
ANR	1276571	Symbol	iv_size		1276474						
ANR	1276572	Symbol	mcrypt_enc_mode_has_iv		1276474						
ANR	1276573	Symbol	mcrypt_enc_get_iv_size		1276474						
ANR	1276574	Symbol	iv		1276474						
ANR	1276575	Symbol	FAILURE		1276474						
ANR	1276576	Symbol	expected_iv_size		1276474						
ANR	1276577	Function	php_mcrypt_do_crypt	1246:0:34253:35928							
ANR	1276578	FunctionDef	"php_mcrypt_do_crypt (char * cipher , const char * key , size_t key_len , const char * data , size_t data_len , char * mode , const char * iv , size_t iv_len , size_t dencrypt , zval * return_value)"		1276577	0					
ANR	1276579	CompoundStatement		1247:0:34457:35928	1276577	0					
ANR	1276580	IdentifierDeclStatement	char * cipher_dir_string ;	1248:1:34460:34483	1276577	0	True				
ANR	1276581	IdentifierDecl	* cipher_dir_string		1276577	0					
ANR	1276582	IdentifierDeclType	char *		1276577	0					
ANR	1276583	Identifier	cipher_dir_string		1276577	1					
ANR	1276584	IdentifierDeclStatement	char * module_dir_string ;	1249:1:34486:34509	1276577	1	True				
ANR	1276585	IdentifierDecl	* module_dir_string		1276577	0					
ANR	1276586	IdentifierDeclType	char *		1276577	0					
ANR	1276587	Identifier	module_dir_string		1276577	1					
ANR	1276588	IdentifierDeclStatement	zend_long data_size ;	1250:1:34512:34531	1276577	2	True				
ANR	1276589	IdentifierDecl	data_size		1276577	0					
ANR	1276590	IdentifierDeclType	zend_long		1276577	0					
ANR	1276591	Identifier	data_size		1276577	1					
ANR	1276592	IdentifierDeclStatement	char * data_s ;	1251:1:34534:34546	1276577	3	True				
ANR	1276593	IdentifierDecl	* data_s		1276577	0					
ANR	1276594	IdentifierDeclType	char *		1276577	0					
ANR	1276595	Identifier	data_s		1276577	1					
ANR	1276596	IdentifierDeclStatement	MCRYPT td ;	1252:1:34549:34558	1276577	4	True				
ANR	1276597	IdentifierDecl	td		1276577	0					
ANR	1276598	IdentifierDeclType	MCRYPT		1276577	0					
ANR	1276599	Identifier	td		1276577	1					
ANR	1276600	IdentifierDeclStatement	"MCRYPT_GET_INI td = mcrypt_module_open ( cipher , cipher_dir_string , mode , module_dir_string ) ;"	1254:1:34562:34654	1276577	5	True				
ANR	1276601	IdentifierDecl	"td = mcrypt_module_open ( cipher , cipher_dir_string , mode , module_dir_string )"		1276577	0					
ANR	1276602	IdentifierDeclType	MCRYPT_GET_INI		1276577	0					
ANR	1276603	Identifier	td		1276577	1					
ANR	1276604	AssignmentExpression	"td = mcrypt_module_open ( cipher , cipher_dir_string , mode , module_dir_string )"		1276577	2		=			
ANR	1276605	Identifier	td		1276577	0					
ANR	1276606	CallExpression	"mcrypt_module_open ( cipher , cipher_dir_string , mode , module_dir_string )"		1276577	1					
ANR	1276607	Callee	mcrypt_module_open		1276577	0					
ANR	1276608	Identifier	mcrypt_module_open		1276577	0					
ANR	1276609	ArgumentList	cipher		1276577	1					
ANR	1276610	Argument	cipher		1276577	0					
ANR	1276611	Identifier	cipher		1276577	0					
ANR	1276612	Argument	cipher_dir_string		1276577	1					
ANR	1276613	Identifier	cipher_dir_string		1276577	0					
ANR	1276614	Argument	mode		1276577	2					
ANR	1276615	Identifier	mode		1276577	0					
ANR	1276616	Argument	module_dir_string		1276577	3					
ANR	1276617	Identifier	module_dir_string		1276577	0					
ANR	1276618	IfStatement	if ( td == MCRYPT_FAILED )		1276577	6					
ANR	1276619	Condition	td == MCRYPT_FAILED	1257:5:34661:34679	1276577	0	True				
ANR	1276620	EqualityExpression	td == MCRYPT_FAILED		1276577	0		==			
ANR	1276621	Identifier	td		1276577	0					
ANR	1276622	Identifier	MCRYPT_FAILED		1276577	1					
ANR	1276623	CompoundStatement		11:26:224:224	1276577	1					
ANR	1276624	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , MCRYPT_OPEN_MODULE_FAILED )"	1258:2:34686:34746	1276577	0	True				
ANR	1276625	CallExpression	"php_error_docref ( NULL , E_WARNING , MCRYPT_OPEN_MODULE_FAILED )"		1276577	0					
ANR	1276626	Callee	php_error_docref		1276577	0					
ANR	1276627	Identifier	php_error_docref		1276577	0					
ANR	1276628	ArgumentList	NULL		1276577	1					
ANR	1276629	Argument	NULL		1276577	0					
ANR	1276630	Identifier	NULL		1276577	0					
ANR	1276631	Argument	E_WARNING		1276577	1					
ANR	1276632	Identifier	E_WARNING		1276577	0					
ANR	1276633	Argument	MCRYPT_OPEN_MODULE_FAILED		1276577	2					
ANR	1276634	Identifier	MCRYPT_OPEN_MODULE_FAILED		1276577	0					
ANR	1276635	ExpressionStatement	RETURN_FALSE	1259:2:34750:34762	1276577	1	True				
ANR	1276636	Identifier	RETURN_FALSE		1276577	0					
ANR	1276637	IfStatement	"if ( php_mcrypt_ensure_valid_key_size ( td , ( int ) key_len ) == FAILURE )"		1276577	7					
ANR	1276638	Condition	"php_mcrypt_ensure_valid_key_size ( td , ( int ) key_len ) == FAILURE"	1262:5:34773:34833	1276577	0	True				
ANR	1276639	EqualityExpression	"php_mcrypt_ensure_valid_key_size ( td , ( int ) key_len ) == FAILURE"		1276577	0		==			
ANR	1276640	CallExpression	"php_mcrypt_ensure_valid_key_size ( td , ( int ) key_len )"		1276577	0					
ANR	1276641	Callee	php_mcrypt_ensure_valid_key_size		1276577	0					
ANR	1276642	Identifier	php_mcrypt_ensure_valid_key_size		1276577	0					
ANR	1276643	ArgumentList	td		1276577	1					
ANR	1276644	Argument	td		1276577	0					
ANR	1276645	Identifier	td		1276577	0					
ANR	1276646	Argument	( int ) key_len		1276577	1					
ANR	1276647	CastExpression	( int ) key_len		1276577	0					
ANR	1276648	CastTarget	int		1276577	0					
ANR	1276649	Identifier	key_len		1276577	1					
ANR	1276650	Identifier	FAILURE		1276577	1					
ANR	1276651	CompoundStatement		16:68:378:378	1276577	1					
ANR	1276652	ExpressionStatement	mcrypt_module_close ( td )	1263:2:34840:34863	1276577	0	True				
ANR	1276653	CallExpression	mcrypt_module_close ( td )		1276577	0					
ANR	1276654	Callee	mcrypt_module_close		1276577	0					
ANR	1276655	Identifier	mcrypt_module_close		1276577	0					
ANR	1276656	ArgumentList	td		1276577	1					
ANR	1276657	Argument	td		1276577	0					
ANR	1276658	Identifier	td		1276577	0					
ANR	1276659	ExpressionStatement	RETURN_FALSE	1264:2:34867:34879	1276577	1	True				
ANR	1276660	Identifier	RETURN_FALSE		1276577	0					
ANR	1276661	IfStatement	"if ( php_mcrypt_ensure_valid_iv ( td , iv , ( int ) iv_len ) == FAILURE )"		1276577	8					
ANR	1276662	Condition	"php_mcrypt_ensure_valid_iv ( td , iv , ( int ) iv_len ) == FAILURE"	1267:5:34890:34947	1276577	0	True				
ANR	1276663	EqualityExpression	"php_mcrypt_ensure_valid_iv ( td , iv , ( int ) iv_len ) == FAILURE"		1276577	0		==			
ANR	1276664	CallExpression	"php_mcrypt_ensure_valid_iv ( td , iv , ( int ) iv_len )"		1276577	0					
ANR	1276665	Callee	php_mcrypt_ensure_valid_iv		1276577	0					
ANR	1276666	Identifier	php_mcrypt_ensure_valid_iv		1276577	0					
ANR	1276667	ArgumentList	td		1276577	1					
ANR	1276668	Argument	td		1276577	0					
ANR	1276669	Identifier	td		1276577	0					
ANR	1276670	Argument	iv		1276577	1					
ANR	1276671	Identifier	iv		1276577	0					
ANR	1276672	Argument	( int ) iv_len		1276577	2					
ANR	1276673	CastExpression	( int ) iv_len		1276577	0					
ANR	1276674	CastTarget	int		1276577	0					
ANR	1276675	Identifier	iv_len		1276577	1					
ANR	1276676	Identifier	FAILURE		1276577	1					
ANR	1276677	CompoundStatement		21:65:492:492	1276577	1					
ANR	1276678	ExpressionStatement	mcrypt_module_close ( td )	1268:2:34954:34977	1276577	0	True				
ANR	1276679	CallExpression	mcrypt_module_close ( td )		1276577	0					
ANR	1276680	Callee	mcrypt_module_close		1276577	0					
ANR	1276681	Identifier	mcrypt_module_close		1276577	0					
ANR	1276682	ArgumentList	td		1276577	1					
ANR	1276683	Argument	td		1276577	0					
ANR	1276684	Identifier	td		1276577	0					
ANR	1276685	ExpressionStatement	RETURN_FALSE	1269:2:34981:34993	1276577	1	True				
ANR	1276686	Identifier	RETURN_FALSE		1276577	0					
ANR	1276687	IfStatement	if ( mcrypt_enc_is_block_mode ( td ) == 1 )		1276577	9					
ANR	1276688	Condition	mcrypt_enc_is_block_mode ( td ) == 1	1273:5:35027:35059	1276577	0	True				
ANR	1276689	EqualityExpression	mcrypt_enc_is_block_mode ( td ) == 1		1276577	0		==			
ANR	1276690	CallExpression	mcrypt_enc_is_block_mode ( td )		1276577	0					
ANR	1276691	Callee	mcrypt_enc_is_block_mode		1276577	0					
ANR	1276692	Identifier	mcrypt_enc_is_block_mode		1276577	0					
ANR	1276693	ArgumentList	td		1276577	1					
ANR	1276694	Argument	td		1276577	0					
ANR	1276695	Identifier	td		1276577	0					
ANR	1276696	PrimaryExpression	1		1276577	1					
ANR	1276697	CompoundStatement		28:2:637:683	1276577	1					
ANR	1276698	IdentifierDeclStatement	int block_size = mcrypt_enc_get_block_size ( td ) ;	1274:2:35095:35141	1276577	0	True				
ANR	1276699	IdentifierDecl	block_size = mcrypt_enc_get_block_size ( td )		1276577	0					
ANR	1276700	IdentifierDeclType	int		1276577	0					
ANR	1276701	Identifier	block_size		1276577	1					
ANR	1276702	AssignmentExpression	block_size = mcrypt_enc_get_block_size ( td )		1276577	2		=			
ANR	1276703	Identifier	block_size		1276577	0					
ANR	1276704	CallExpression	mcrypt_enc_get_block_size ( td )		1276577	1					
ANR	1276705	Callee	mcrypt_enc_get_block_size		1276577	0					
ANR	1276706	Identifier	mcrypt_enc_get_block_size		1276577	0					
ANR	1276707	ArgumentList	td		1276577	1					
ANR	1276708	Argument	td		1276577	0					
ANR	1276709	Identifier	td		1276577	0					
ANR	1276710	ExpressionStatement	data_size = ( ( ( ( zend_long ) data_len - 1 ) / block_size ) + 1 ) * block_size	1275:2:35145:35216	1276577	1	True				
ANR	1276711	AssignmentExpression	data_size = ( ( ( ( zend_long ) data_len - 1 ) / block_size ) + 1 ) * block_size		1276577	0		=			
ANR	1276712	Identifier	data_size		1276577	0					
ANR	1276713	MultiplicativeExpression	( ( ( ( zend_long ) data_len - 1 ) / block_size ) + 1 ) * block_size		1276577	1		*			
ANR	1276714	AdditiveExpression	( ( ( zend_long ) data_len - 1 ) / block_size ) + 1		1276577	0		+			
ANR	1276715	MultiplicativeExpression	( ( zend_long ) data_len - 1 ) / block_size		1276577	0		/			
ANR	1276716	AdditiveExpression	( zend_long ) data_len - 1		1276577	0		-			
ANR	1276717	CastExpression	( zend_long ) data_len		1276577	0					
ANR	1276718	CastTarget	zend_long		1276577	0					
ANR	1276719	Identifier	data_len		1276577	1					
ANR	1276720	PrimaryExpression	1		1276577	1					
ANR	1276721	Identifier	block_size		1276577	1					
ANR	1276722	PrimaryExpression	1		1276577	1					
ANR	1276723	Identifier	block_size		1276577	1					
ANR	1276724	ExpressionStatement	data_s = emalloc ( data_size + 1 )	1276:2:35220:35251	1276577	2	True				
ANR	1276725	AssignmentExpression	data_s = emalloc ( data_size + 1 )		1276577	0		=			
ANR	1276726	Identifier	data_s		1276577	0					
ANR	1276727	CallExpression	emalloc ( data_size + 1 )		1276577	1					
ANR	1276728	Callee	emalloc		1276577	0					
ANR	1276729	Identifier	emalloc		1276577	0					
ANR	1276730	ArgumentList	data_size + 1		1276577	1					
ANR	1276731	Argument	data_size + 1		1276577	0					
ANR	1276732	AdditiveExpression	data_size + 1		1276577	0		+			
ANR	1276733	Identifier	data_size		1276577	0					
ANR	1276734	PrimaryExpression	1		1276577	1					
ANR	1276735	ExpressionStatement	"memset ( data_s , 0 , data_size )"	1277:2:35255:35283	1276577	3	True				
ANR	1276736	CallExpression	"memset ( data_s , 0 , data_size )"		1276577	0					
ANR	1276737	Callee	memset		1276577	0					
ANR	1276738	Identifier	memset		1276577	0					
ANR	1276739	ArgumentList	data_s		1276577	1					
ANR	1276740	Argument	data_s		1276577	0					
ANR	1276741	Identifier	data_s		1276577	0					
ANR	1276742	Argument	0		1276577	1					
ANR	1276743	PrimaryExpression	0		1276577	0					
ANR	1276744	Argument	data_size		1276577	2					
ANR	1276745	Identifier	data_size		1276577	0					
ANR	1276746	ExpressionStatement	"memcpy ( data_s , data , data_len )"	1278:2:35287:35317	1276577	4	True				
ANR	1276747	CallExpression	"memcpy ( data_s , data , data_len )"		1276577	0					
ANR	1276748	Callee	memcpy		1276577	0					
ANR	1276749	Identifier	memcpy		1276577	0					
ANR	1276750	ArgumentList	data_s		1276577	1					
ANR	1276751	Argument	data_s		1276577	0					
ANR	1276752	Identifier	data_s		1276577	0					
ANR	1276753	Argument	data		1276577	1					
ANR	1276754	Identifier	data		1276577	0					
ANR	1276755	Argument	data_len		1276577	2					
ANR	1276756	Identifier	data_len		1276577	0					
ANR	1276757	ElseStatement	else		1276577	0					
ANR	1276758	CompoundStatement		33:8:869:869	1276577	0					
ANR	1276759	ExpressionStatement	data_size = data_len	1280:2:35364:35384	1276577	0	True				
ANR	1276760	AssignmentExpression	data_size = data_len		1276577	0		=			
ANR	1276761	Identifier	data_size		1276577	0					
ANR	1276762	Identifier	data_len		1276577	1					
ANR	1276763	ExpressionStatement	data_s = emalloc ( data_size + 1 )	1281:2:35388:35419	1276577	1	True				
ANR	1276764	AssignmentExpression	data_s = emalloc ( data_size + 1 )		1276577	0		=			
ANR	1276765	Identifier	data_s		1276577	0					
ANR	1276766	CallExpression	emalloc ( data_size + 1 )		1276577	1					
ANR	1276767	Callee	emalloc		1276577	0					
ANR	1276768	Identifier	emalloc		1276577	0					
ANR	1276769	ArgumentList	data_size + 1		1276577	1					
ANR	1276770	Argument	data_size + 1		1276577	0					
ANR	1276771	AdditiveExpression	data_size + 1		1276577	0		+			
ANR	1276772	Identifier	data_size		1276577	0					
ANR	1276773	PrimaryExpression	1		1276577	1					
ANR	1276774	ExpressionStatement	"memcpy ( data_s , data , data_len )"	1282:2:35423:35453	1276577	2	True				
ANR	1276775	CallExpression	"memcpy ( data_s , data , data_len )"		1276577	0					
ANR	1276776	Callee	memcpy		1276577	0					
ANR	1276777	Identifier	memcpy		1276577	0					
ANR	1276778	ArgumentList	data_s		1276577	1					
ANR	1276779	Argument	data_s		1276577	0					
ANR	1276780	Identifier	data_s		1276577	0					
ANR	1276781	Argument	data		1276577	1					
ANR	1276782	Identifier	data		1276577	0					
ANR	1276783	Argument	data_len		1276577	2					
ANR	1276784	Identifier	data_len		1276577	0					
ANR	1276785	IfStatement	"if ( mcrypt_generic_init ( td , ( void * ) key , ( int ) key_len , ( void * ) iv ) < 0 )"		1276577	10					
ANR	1276786	Condition	"mcrypt_generic_init ( td , ( void * ) key , ( int ) key_len , ( void * ) iv ) < 0"	1285:5:35464:35531	1276577	0	True				
ANR	1276787	RelationalExpression	"mcrypt_generic_init ( td , ( void * ) key , ( int ) key_len , ( void * ) iv ) < 0"		1276577	0		<			
ANR	1276788	CallExpression	"mcrypt_generic_init ( td , ( void * ) key , ( int ) key_len , ( void * ) iv )"		1276577	0					
ANR	1276789	Callee	mcrypt_generic_init		1276577	0					
ANR	1276790	Identifier	mcrypt_generic_init		1276577	0					
ANR	1276791	ArgumentList	td		1276577	1					
ANR	1276792	Argument	td		1276577	0					
ANR	1276793	Identifier	td		1276577	0					
ANR	1276794	Argument	( void * ) key		1276577	1					
ANR	1276795	CastExpression	( void * ) key		1276577	0					
ANR	1276796	CastTarget	void *		1276577	0					
ANR	1276797	Identifier	key		1276577	1					
ANR	1276798	Argument	( int ) key_len		1276577	2					
ANR	1276799	CastExpression	( int ) key_len		1276577	0					
ANR	1276800	CastTarget	int		1276577	0					
ANR	1276801	Identifier	key_len		1276577	1					
ANR	1276802	Argument	( void * ) iv		1276577	3					
ANR	1276803	CastExpression	( void * ) iv		1276577	0					
ANR	1276804	CastTarget	void *		1276577	0					
ANR	1276805	Identifier	iv		1276577	1					
ANR	1276806	PrimaryExpression	0		1276577	1					
ANR	1276807	CompoundStatement		39:75:1076:1076	1276577	1					
ANR	1276808	ExpressionStatement	"php_error_docref ( NULL , E_RECOVERABLE_ERROR , ""Mcrypt initialisation failed"" )"	1286:2:35538:35613	1276577	0	True				
ANR	1276809	CallExpression	"php_error_docref ( NULL , E_RECOVERABLE_ERROR , ""Mcrypt initialisation failed"" )"		1276577	0					
ANR	1276810	Callee	php_error_docref		1276577	0					
ANR	1276811	Identifier	php_error_docref		1276577	0					
ANR	1276812	ArgumentList	NULL		1276577	1					
ANR	1276813	Argument	NULL		1276577	0					
ANR	1276814	Identifier	NULL		1276577	0					
ANR	1276815	Argument	E_RECOVERABLE_ERROR		1276577	1					
ANR	1276816	Identifier	E_RECOVERABLE_ERROR		1276577	0					
ANR	1276817	Argument	"""Mcrypt initialisation failed"""		1276577	2					
ANR	1276818	PrimaryExpression	"""Mcrypt initialisation failed"""		1276577	0					
ANR	1276819	ExpressionStatement	mcrypt_module_close ( td )	1287:2:35617:35640	1276577	1	True				
ANR	1276820	CallExpression	mcrypt_module_close ( td )		1276577	0					
ANR	1276821	Callee	mcrypt_module_close		1276577	0					
ANR	1276822	Identifier	mcrypt_module_close		1276577	0					
ANR	1276823	ArgumentList	td		1276577	1					
ANR	1276824	Argument	td		1276577	0					
ANR	1276825	Identifier	td		1276577	0					
ANR	1276826	ExpressionStatement	RETURN_FALSE	1288:2:35644:35656	1276577	2	True				
ANR	1276827	Identifier	RETURN_FALSE		1276577	0					
ANR	1276828	IfStatement	if ( dencrypt == MCRYPT_ENCRYPT )		1276577	11					
ANR	1276829	Condition	dencrypt == MCRYPT_ENCRYPT	1291:5:35667:35692	1276577	0	True				
ANR	1276830	EqualityExpression	dencrypt == MCRYPT_ENCRYPT		1276577	0		==			
ANR	1276831	Identifier	dencrypt		1276577	0					
ANR	1276832	Identifier	MCRYPT_ENCRYPT		1276577	1					
ANR	1276833	CompoundStatement		45:33:1237:1237	1276577	1					
ANR	1276834	ExpressionStatement	"mcrypt_generic ( td , data_s , ( int ) data_size )"	1292:2:35699:35741	1276577	0	True				
ANR	1276835	CallExpression	"mcrypt_generic ( td , data_s , ( int ) data_size )"		1276577	0					
ANR	1276836	Callee	mcrypt_generic		1276577	0					
ANR	1276837	Identifier	mcrypt_generic		1276577	0					
ANR	1276838	ArgumentList	td		1276577	1					
ANR	1276839	Argument	td		1276577	0					
ANR	1276840	Identifier	td		1276577	0					
ANR	1276841	Argument	data_s		1276577	1					
ANR	1276842	Identifier	data_s		1276577	0					
ANR	1276843	Argument	( int ) data_size		1276577	2					
ANR	1276844	CastExpression	( int ) data_size		1276577	0					
ANR	1276845	CastTarget	int		1276577	0					
ANR	1276846	Identifier	data_size		1276577	1					
ANR	1276847	ElseStatement	else		1276577	0					
ANR	1276848	CompoundStatement		47:8:1293:1293	1276577	0					
ANR	1276849	ExpressionStatement	"mdecrypt_generic ( td , data_s , ( int ) data_size )"	1294:2:35755:35799	1276577	0	True				
ANR	1276850	CallExpression	"mdecrypt_generic ( td , data_s , ( int ) data_size )"		1276577	0					
ANR	1276851	Callee	mdecrypt_generic		1276577	0					
ANR	1276852	Identifier	mdecrypt_generic		1276577	0					
ANR	1276853	ArgumentList	td		1276577	1					
ANR	1276854	Argument	td		1276577	0					
ANR	1276855	Identifier	td		1276577	0					
ANR	1276856	Argument	data_s		1276577	1					
ANR	1276857	Identifier	data_s		1276577	0					
ANR	1276858	Argument	( int ) data_size		1276577	2					
ANR	1276859	CastExpression	( int ) data_size		1276577	0					
ANR	1276860	CastTarget	int		1276577	0					
ANR	1276861	Identifier	data_size		1276577	1					
ANR	1276862	ExpressionStatement	data_s [ data_size ] = 0	1297:1:35806:35827	1276577	12	True				
ANR	1276863	AssignmentExpression	data_s [ data_size ] = 0		1276577	0		=			
ANR	1276864	ArrayIndexing	data_s [ data_size ]		1276577	0					
ANR	1276865	Identifier	data_s		1276577	0					
ANR	1276866	Identifier	data_size		1276577	1					
ANR	1276867	PrimaryExpression	0		1276577	1					
ANR	1276868	ExpressionStatement	"RETVAL_STRINGL ( data_s , data_size )"	1299:1:35831:35864	1276577	13	True				
ANR	1276869	CallExpression	"RETVAL_STRINGL ( data_s , data_size )"		1276577	0					
ANR	1276870	Callee	RETVAL_STRINGL		1276577	0					
ANR	1276871	Identifier	RETVAL_STRINGL		1276577	0					
ANR	1276872	ArgumentList	data_s		1276577	1					
ANR	1276873	Argument	data_s		1276577	0					
ANR	1276874	Identifier	data_s		1276577	0					
ANR	1276875	Argument	data_size		1276577	1					
ANR	1276876	Identifier	data_size		1276577	0					
ANR	1276877	ExpressionStatement	efree ( data_s )	1300:1:35867:35880	1276577	14	True				
ANR	1276878	CallExpression	efree ( data_s )		1276577	0					
ANR	1276879	Callee	efree		1276577	0					
ANR	1276880	Identifier	efree		1276577	0					
ANR	1276881	ArgumentList	data_s		1276577	1					
ANR	1276882	Argument	data_s		1276577	0					
ANR	1276883	Identifier	data_s		1276577	0					
ANR	1276884	ExpressionStatement	mcrypt_generic_end ( td )	1303:1:35904:35926	1276577	15	True				
ANR	1276885	CallExpression	mcrypt_generic_end ( td )		1276577	0					
ANR	1276886	Callee	mcrypt_generic_end		1276577	0					
ANR	1276887	Identifier	mcrypt_generic_end		1276577	0					
ANR	1276888	ArgumentList	td		1276577	1					
ANR	1276889	Argument	td		1276577	0					
ANR	1276890	Identifier	td		1276577	0					
ANR	1276891	ReturnType	static void		1276577	1					
ANR	1276892	Identifier	php_mcrypt_do_crypt		1276577	2					
ANR	1276893	ParameterList	"char * cipher , const char * key , size_t key_len , const char * data , size_t data_len , char * mode , const char * iv , size_t iv_len , size_t dencrypt , zval * return_value"		1276577	3					
ANR	1276894	Parameter	char * cipher	1246:32:34285:34296	1276577	0	True				
ANR	1276895	ParameterType	char *		1276577	0					
ANR	1276896	Identifier	cipher		1276577	1					
ANR	1276897	Parameter	const char * key	1246:46:34299:34313	1276577	1	True				
ANR	1276898	ParameterType	const char *		1276577	0					
ANR	1276899	Identifier	key		1276577	1					
ANR	1276900	Parameter	size_t key_len	1246:63:34316:34329	1276577	2	True				
ANR	1276901	ParameterType	size_t		1276577	0					
ANR	1276902	Identifier	key_len		1276577	1					
ANR	1276903	Parameter	const char * data	1246:79:34332:34347	1276577	3	True				
ANR	1276904	ParameterType	const char *		1276577	0					
ANR	1276905	Identifier	data		1276577	1					
ANR	1276906	Parameter	size_t data_len	1246:97:34350:34364	1276577	4	True				
ANR	1276907	ParameterType	size_t		1276577	0					
ANR	1276908	Identifier	data_len		1276577	1					
ANR	1276909	Parameter	char * mode	1246:114:34367:34376	1276577	5	True				
ANR	1276910	ParameterType	char *		1276577	0					
ANR	1276911	Identifier	mode		1276577	1					
ANR	1276912	Parameter	const char * iv	1246:126:34379:34392	1276577	6	True				
ANR	1276913	ParameterType	const char *		1276577	0					
ANR	1276914	Identifier	iv		1276577	1					
ANR	1276915	Parameter	size_t iv_len	1246:142:34395:34407	1276577	7	True				
ANR	1276916	ParameterType	size_t		1276577	0					
ANR	1276917	Identifier	iv_len		1276577	1					
ANR	1276918	Parameter	size_t dencrypt	1246:157:34410:34424	1276577	8	True				
ANR	1276919	ParameterType	size_t		1276577	0					
ANR	1276920	Identifier	dencrypt		1276577	1					
ANR	1276921	Parameter	zval * return_value	1246:174:34427:34444	1276577	9	True				
ANR	1276922	ParameterType	zval *		1276577	0					
ANR	1276923	Identifier	return_value		1276577	1					
ANR	1276924	CFGEntryNode	ENTRY		1276577		True				
ANR	1276925	CFGExitNode	EXIT		1276577		True				
ANR	1276926	Symbol	return_value		1276577						
ANR	1276927	Symbol	mcrypt_enc_is_block_mode		1276577						
ANR	1276928	Symbol	E_RECOVERABLE_ERROR		1276577						
ANR	1276929	Symbol	data		1276577						
ANR	1276930	Symbol	* data_size		1276577						
ANR	1276931	Symbol	php_mcrypt_ensure_valid_key_size		1276577						
ANR	1276932	Symbol	mcrypt_module_open		1276577						
ANR	1276933	Symbol	mode		1276577						
ANR	1276934	Symbol	E_WARNING		1276577						
ANR	1276935	Symbol	emalloc		1276577						
ANR	1276936	Symbol	MCRYPT_FAILED		1276577						
ANR	1276937	Symbol	mcrypt_enc_get_block_size		1276577						
ANR	1276938	Symbol	iv_len		1276577						
ANR	1276939	Symbol	module_dir_string		1276577						
ANR	1276940	Symbol	block_size		1276577						
ANR	1276941	Symbol	key		1276577						
ANR	1276942	Symbol	key_len		1276577						
ANR	1276943	Symbol	cipher		1276577						
ANR	1276944	Symbol	data_size		1276577						
ANR	1276945	Symbol	cipher_dir_string		1276577						
ANR	1276946	Symbol	NULL		1276577						
ANR	1276947	Symbol	MCRYPT_OPEN_MODULE_FAILED		1276577						
ANR	1276948	Symbol	data_len		1276577						
ANR	1276949	Symbol	dencrypt		1276577						
ANR	1276950	Symbol	mcrypt_generic_init		1276577						
ANR	1276951	Symbol	php_mcrypt_ensure_valid_iv		1276577						
ANR	1276952	Symbol	iv		1276577						
ANR	1276953	Symbol	FAILURE		1276577						
ANR	1276954	Symbol	data_s		1276577						
ANR	1276955	Symbol	td		1276577						
ANR	1276956	Symbol	MCRYPT_ENCRYPT		1276577						
ANR	1276957	Symbol	* data_s		1276577						
ANR	1276958	DeclStmt									
ANR	1276959	Decl							char	char *	cipher
ANR	1276960	Decl							char	char *	key
ANR	1276961	Decl							char	char *	data
ANR	1276962	Decl							char	char *	mode
ANR	1276963	Decl							char	char *	iv
ANR	1276964	DeclStmt									
ANR	1276965	Decl							size_t	size_t	cipher_len
ANR	1276966	Decl							size_t	size_t	key_len
ANR	1276967	Decl							size_t	size_t	data_len
ANR	1276968	Decl							size_t	size_t	mode_len
ANR	1276969	Decl							size_t	size_t	iv_len
ANR	1276970	DeclStmt									
ANR	1276971	Decl							char	char *	cipher
ANR	1276972	Decl							char	char *	key
ANR	1276973	Decl							char	char *	data
ANR	1276974	Decl							char	char *	mode
ANR	1276975	Decl							char	char *	iv
ANR	1276976	DeclStmt									
ANR	1276977	Decl							size_t	size_t	cipher_len
ANR	1276978	Decl							size_t	size_t	key_len
ANR	1276979	Decl							size_t	size_t	data_len
ANR	1276980	Decl							size_t	size_t	mode_len
ANR	1276981	Decl							size_t	size_t	iv_len
ANR	1276982	DeclStmt									
ANR	1276983	Decl							char	char *	iv
ANR	1276984	DeclStmt									
ANR	1276985	Decl							zend_long	zend_long	source
ANR	1276986	DeclStmt									
ANR	1276987	Decl							zend_long	zend_long	size
ANR	1276988	DeclStmt									
ANR	1276989	Decl							int	int	n
ANR	1276990	DeclStmt									
ANR	1276991	Decl							BYTE	BYTE *	iv_b
ANR	1276992	DeclStmt									
ANR	1276993	Decl							int	int *	fd
ANR	1276994	DeclStmt									
ANR	1276995	Decl							size_t	size_t	read_bytes
