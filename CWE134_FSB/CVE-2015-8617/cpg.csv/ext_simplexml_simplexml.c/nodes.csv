command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1890197	File	data/converged/CVE-2015-8617_php-src/ext_simplexml_simplexml.c								
ANR	1890198	DeclStmt									
ANR	1890199	Decl							zend_class_entry	zend_class_entry *	sxe_class_entry
ANR	1890200	Function	sxe_get_element_class_entry	43:0:1739:1836							
ANR	1890201	FunctionDef	sxe_get_element_class_entry ()		1890200	0					
ANR	1890202	CompoundStatement		44:0:1809:1836	1890200	0					
ANR	1890203	ReturnStatement	return sxe_class_entry ;	45:1:1812:1834	1890200	0	True				
ANR	1890204	Identifier	sxe_class_entry		1890200	0					
ANR	1890205	ReturnType	PHP_SXE_API zend_class_entry *		1890200	1					
ANR	1890206	Identifier	sxe_get_element_class_entry		1890200	2					
ANR	1890207	ParameterList			1890200	3					
ANR	1890208	CFGEntryNode	ENTRY		1890200		True				
ANR	1890209	CFGExitNode	EXIT		1890200		True				
ANR	1890210	Symbol	sxe_class_entry		1890200						
ANR	1890211	DeclStmt									
ANR	1890212	Decl							php_sxe_object	"php_sxe_object * ( zend_class_entry * ce , zend_function * fptr_count )"	php_sxe_object_new
ANR	1890213	DeclStmt									
ANR	1890214	Decl							xmlNodePtr	"xmlNodePtr ( php_sxe_object * sxe , int use_data )"	php_sxe_reset_iterator
ANR	1890215	DeclStmt									
ANR	1890216	Decl							xmlNodePtr	"xmlNodePtr ( php_sxe_object * sxe , xmlNodePtr node , int use_data )"	php_sxe_iterator_fetch
ANR	1890217	DeclStmt									
ANR	1890218	Decl							zval	"zval * ( zval * z , zval * rv )"	sxe_get_value
ANR	1890219	DeclStmt									
ANR	1890220	Decl							void	void ( zend_object_iterator * iter )	php_sxe_iterator_dtor
ANR	1890221	DeclStmt									
ANR	1890222	Decl							int	int ( zend_object_iterator * iter )	php_sxe_iterator_valid
ANR	1890223	DeclStmt									
ANR	1890224	Decl							zval	zval * ( zend_object_iterator * iter )	php_sxe_iterator_current_data
ANR	1890225	DeclStmt									
ANR	1890226	Decl							void	"void ( zend_object_iterator * iter , zval * key )"	php_sxe_iterator_current_key
ANR	1890227	DeclStmt									
ANR	1890228	Decl							void	void ( zend_object_iterator * iter )	php_sxe_iterator_move_forward
ANR	1890229	DeclStmt									
ANR	1890230	Decl							void	void ( zend_object_iterator * iter )	php_sxe_iterator_rewind
ANR	1890231	Function	_node_as_zval	67:0:2861:3507							
ANR	1890232	FunctionDef	"_node_as_zval (php_sxe_object * sxe , xmlNodePtr node , zval * value , SXE_ITER itertype , char * name , const xmlChar * nsprefix , int isprefix)"		1890231	0					
ANR	1890233	CompoundStatement		68:0:3008:3507	1890231	0					
ANR	1890234	IdentifierDeclStatement	php_sxe_object * subnode ;	69:1:3011:3034	1890231	0	True				
ANR	1890235	IdentifierDecl	* subnode		1890231	0					
ANR	1890236	IdentifierDeclType	php_sxe_object *		1890231	0					
ANR	1890237	Identifier	subnode		1890231	1					
ANR	1890238	ExpressionStatement	"subnode = php_sxe_object_new ( sxe -> zo . ce , sxe -> fptr_count )"	71:1:3038:3095	1890231	1	True				
ANR	1890239	AssignmentExpression	"subnode = php_sxe_object_new ( sxe -> zo . ce , sxe -> fptr_count )"		1890231	0		=			
ANR	1890240	Identifier	subnode		1890231	0					
ANR	1890241	CallExpression	"php_sxe_object_new ( sxe -> zo . ce , sxe -> fptr_count )"		1890231	1					
ANR	1890242	Callee	php_sxe_object_new		1890231	0					
ANR	1890243	Identifier	php_sxe_object_new		1890231	0					
ANR	1890244	ArgumentList	sxe -> zo . ce		1890231	1					
ANR	1890245	Argument	sxe -> zo . ce		1890231	0					
ANR	1890246	MemberAccess	sxe -> zo . ce		1890231	0					
ANR	1890247	PtrMemberAccess	sxe -> zo		1890231	0					
ANR	1890248	Identifier	sxe		1890231	0					
ANR	1890249	Identifier	zo		1890231	1					
ANR	1890250	Identifier	ce		1890231	1					
ANR	1890251	Argument	sxe -> fptr_count		1890231	1					
ANR	1890252	PtrMemberAccess	sxe -> fptr_count		1890231	0					
ANR	1890253	Identifier	sxe		1890231	0					
ANR	1890254	Identifier	fptr_count		1890231	1					
ANR	1890255	ExpressionStatement	subnode -> document = sxe -> document	72:1:3098:3131	1890231	2	True				
ANR	1890256	AssignmentExpression	subnode -> document = sxe -> document		1890231	0		=			
ANR	1890257	PtrMemberAccess	subnode -> document		1890231	0					
ANR	1890258	Identifier	subnode		1890231	0					
ANR	1890259	Identifier	document		1890231	1					
ANR	1890260	PtrMemberAccess	sxe -> document		1890231	1					
ANR	1890261	Identifier	sxe		1890231	0					
ANR	1890262	Identifier	document		1890231	1					
ANR	1890263	ExpressionStatement	subnode -> document -> refcount ++	73:1:3134:3163	1890231	3	True				
ANR	1890264	PostIncDecOperationExpression	subnode -> document -> refcount ++		1890231	0					
ANR	1890265	PtrMemberAccess	subnode -> document -> refcount		1890231	0					
ANR	1890266	PtrMemberAccess	subnode -> document		1890231	0					
ANR	1890267	Identifier	subnode		1890231	0					
ANR	1890268	Identifier	document		1890231	1					
ANR	1890269	Identifier	refcount		1890231	1					
ANR	1890270	IncDec	++		1890231	1					
ANR	1890271	ExpressionStatement	subnode -> iter . type = itertype	74:1:3166:3195	1890231	4	True				
ANR	1890272	AssignmentExpression	subnode -> iter . type = itertype		1890231	0		=			
ANR	1890273	MemberAccess	subnode -> iter . type		1890231	0					
ANR	1890274	PtrMemberAccess	subnode -> iter		1890231	0					
ANR	1890275	Identifier	subnode		1890231	0					
ANR	1890276	Identifier	iter		1890231	1					
ANR	1890277	Identifier	type		1890231	1					
ANR	1890278	Identifier	itertype		1890231	1					
ANR	1890279	IfStatement	if ( name )		1890231	5					
ANR	1890280	Condition	name	75:5:3202:3205	1890231	0	True				
ANR	1890281	Identifier	name		1890231	0					
ANR	1890282	CompoundStatement		8:11:199:199	1890231	1					
ANR	1890283	ExpressionStatement	subnode -> iter . name = ( xmlChar * ) estrdup ( name )	76:2:3212:3256	1890231	0	True				
ANR	1890284	AssignmentExpression	subnode -> iter . name = ( xmlChar * ) estrdup ( name )		1890231	0		=			
ANR	1890285	MemberAccess	subnode -> iter . name		1890231	0					
ANR	1890286	PtrMemberAccess	subnode -> iter		1890231	0					
ANR	1890287	Identifier	subnode		1890231	0					
ANR	1890288	Identifier	iter		1890231	1					
ANR	1890289	Identifier	name		1890231	1					
ANR	1890290	CastExpression	( xmlChar * ) estrdup ( name )		1890231	1					
ANR	1890291	CastTarget	xmlChar *		1890231	0					
ANR	1890292	CallExpression	estrdup ( name )		1890231	1					
ANR	1890293	Callee	estrdup		1890231	0					
ANR	1890294	Identifier	estrdup		1890231	0					
ANR	1890295	ArgumentList	name		1890231	1					
ANR	1890296	Argument	name		1890231	0					
ANR	1890297	Identifier	name		1890231	0					
ANR	1890298	IfStatement	if ( nsprefix && * nsprefix )		1890231	6					
ANR	1890299	Condition	nsprefix && * nsprefix	78:5:3266:3286	1890231	0	True				
ANR	1890300	AndExpression	nsprefix && * nsprefix		1890231	0		&&			
ANR	1890301	Identifier	nsprefix		1890231	0					
ANR	1890302	UnaryOperationExpression	* nsprefix		1890231	1					
ANR	1890303	UnaryOperator	*		1890231	0					
ANR	1890304	Identifier	nsprefix		1890231	1					
ANR	1890305	CompoundStatement		11:28:280:280	1890231	1					
ANR	1890306	ExpressionStatement	subnode -> iter . nsprefix = ( xmlChar * ) estrdup ( ( char * ) nsprefix )	79:2:3293:3352	1890231	0	True				
ANR	1890307	AssignmentExpression	subnode -> iter . nsprefix = ( xmlChar * ) estrdup ( ( char * ) nsprefix )		1890231	0		=			
ANR	1890308	MemberAccess	subnode -> iter . nsprefix		1890231	0					
ANR	1890309	PtrMemberAccess	subnode -> iter		1890231	0					
ANR	1890310	Identifier	subnode		1890231	0					
ANR	1890311	Identifier	iter		1890231	1					
ANR	1890312	Identifier	nsprefix		1890231	1					
ANR	1890313	CastExpression	( xmlChar * ) estrdup ( ( char * ) nsprefix )		1890231	1					
ANR	1890314	CastTarget	xmlChar *		1890231	0					
ANR	1890315	CallExpression	estrdup ( ( char * ) nsprefix )		1890231	1					
ANR	1890316	Callee	estrdup		1890231	0					
ANR	1890317	Identifier	estrdup		1890231	0					
ANR	1890318	ArgumentList	( char * ) nsprefix		1890231	1					
ANR	1890319	Argument	( char * ) nsprefix		1890231	0					
ANR	1890320	CastExpression	( char * ) nsprefix		1890231	0					
ANR	1890321	CastTarget	char *		1890231	0					
ANR	1890322	Identifier	nsprefix		1890231	1					
ANR	1890323	ExpressionStatement	subnode -> iter . isprefix = isprefix	80:2:3356:3389	1890231	1	True				
ANR	1890324	AssignmentExpression	subnode -> iter . isprefix = isprefix		1890231	0		=			
ANR	1890325	MemberAccess	subnode -> iter . isprefix		1890231	0					
ANR	1890326	PtrMemberAccess	subnode -> iter		1890231	0					
ANR	1890327	Identifier	subnode		1890231	0					
ANR	1890328	Identifier	iter		1890231	1					
ANR	1890329	Identifier	isprefix		1890231	1					
ANR	1890330	Identifier	isprefix		1890231	1					
ANR	1890331	ExpressionStatement	"php_libxml_increment_node_ptr ( ( php_libxml_node_object * ) subnode , node , NULL )"	83:1:3396:3472	1890231	7	True				
ANR	1890332	CallExpression	"php_libxml_increment_node_ptr ( ( php_libxml_node_object * ) subnode , node , NULL )"		1890231	0					
ANR	1890333	Callee	php_libxml_increment_node_ptr		1890231	0					
ANR	1890334	Identifier	php_libxml_increment_node_ptr		1890231	0					
ANR	1890335	ArgumentList	( php_libxml_node_object * ) subnode		1890231	1					
ANR	1890336	Argument	( php_libxml_node_object * ) subnode		1890231	0					
ANR	1890337	CastExpression	( php_libxml_node_object * ) subnode		1890231	0					
ANR	1890338	CastTarget	php_libxml_node_object *		1890231	0					
ANR	1890339	Identifier	subnode		1890231	1					
ANR	1890340	Argument	node		1890231	1					
ANR	1890341	Identifier	node		1890231	0					
ANR	1890342	Argument	NULL		1890231	2					
ANR	1890343	Identifier	NULL		1890231	0					
ANR	1890344	ExpressionStatement	"ZVAL_OBJ ( value , & subnode -> zo )"	85:1:3476:3505	1890231	8	True				
ANR	1890345	CallExpression	"ZVAL_OBJ ( value , & subnode -> zo )"		1890231	0					
ANR	1890346	Callee	ZVAL_OBJ		1890231	0					
ANR	1890347	Identifier	ZVAL_OBJ		1890231	0					
ANR	1890348	ArgumentList	value		1890231	1					
ANR	1890349	Argument	value		1890231	0					
ANR	1890350	Identifier	value		1890231	0					
ANR	1890351	Argument	& subnode -> zo		1890231	1					
ANR	1890352	UnaryOperationExpression	& subnode -> zo		1890231	0					
ANR	1890353	UnaryOperator	&		1890231	0					
ANR	1890354	PtrMemberAccess	subnode -> zo		1890231	1					
ANR	1890355	Identifier	subnode		1890231	0					
ANR	1890356	Identifier	zo		1890231	1					
ANR	1890357	ReturnType	static void		1890231	1					
ANR	1890358	Identifier	_node_as_zval		1890231	2					
ANR	1890359	ParameterList	"php_sxe_object * sxe , xmlNodePtr node , zval * value , SXE_ITER itertype , char * name , const xmlChar * nsprefix , int isprefix"		1890231	3					
ANR	1890360	Parameter	php_sxe_object * sxe	67:26:2887:2905	1890231	0	True				
ANR	1890361	ParameterType	php_sxe_object *		1890231	0					
ANR	1890362	Identifier	sxe		1890231	1					
ANR	1890363	Parameter	xmlNodePtr node	67:47:2908:2922	1890231	1	True				
ANR	1890364	ParameterType	xmlNodePtr		1890231	0					
ANR	1890365	Identifier	node		1890231	1					
ANR	1890366	Parameter	zval * value	67:64:2925:2935	1890231	2	True				
ANR	1890367	ParameterType	zval *		1890231	0					
ANR	1890368	Identifier	value		1890231	1					
ANR	1890369	Parameter	SXE_ITER itertype	67:77:2938:2954	1890231	3	True				
ANR	1890370	ParameterType	SXE_ITER		1890231	0					
ANR	1890371	Identifier	itertype		1890231	1					
ANR	1890372	Parameter	char * name	67:96:2957:2966	1890231	4	True				
ANR	1890373	ParameterType	char *		1890231	0					
ANR	1890374	Identifier	name		1890231	1					
ANR	1890375	Parameter	const xmlChar * nsprefix	67:108:2969:2991	1890231	5	True				
ANR	1890376	ParameterType	const xmlChar *		1890231	0					
ANR	1890377	Identifier	nsprefix		1890231	1					
ANR	1890378	Parameter	int isprefix	67:133:2994:3005	1890231	6	True				
ANR	1890379	ParameterType	int		1890231	0					
ANR	1890380	Identifier	isprefix		1890231	1					
ANR	1890381	CFGEntryNode	ENTRY		1890231		True				
ANR	1890382	CFGExitNode	EXIT		1890231		True				
ANR	1890383	Symbol	* subnode		1890231						
ANR	1890384	Symbol	sxe -> fptr_count		1890231						
ANR	1890385	Symbol	* subnode -> document		1890231						
ANR	1890386	Symbol	* sxe		1890231						
ANR	1890387	Symbol	subnode -> iter . name		1890231						
ANR	1890388	Symbol	* nsprefix		1890231						
ANR	1890389	Symbol	nsprefix		1890231						
ANR	1890390	Symbol	itertype		1890231						
ANR	1890391	Symbol	sxe -> zo		1890231						
ANR	1890392	Symbol	value		1890231						
ANR	1890393	Symbol	isprefix		1890231						
ANR	1890394	Symbol	sxe		1890231						
ANR	1890395	Symbol	subnode -> document -> refcount		1890231						
ANR	1890396	Symbol	subnode -> iter . type		1890231						
ANR	1890397	Symbol	NULL		1890231						
ANR	1890398	Symbol	sxe -> zo . ce		1890231						
ANR	1890399	Symbol	subnode -> iter . isprefix		1890231						
ANR	1890400	Symbol	subnode -> iter . nsprefix		1890231						
ANR	1890401	Symbol	php_sxe_object_new		1890231						
ANR	1890402	Symbol	* * subnode		1890231						
ANR	1890403	Symbol	subnode -> iter		1890231						
ANR	1890404	Symbol	subnode		1890231						
ANR	1890405	Symbol	node		1890231						
ANR	1890406	Symbol	subnode -> document		1890231						
ANR	1890407	Symbol	& subnode -> zo		1890231						
ANR	1890408	Symbol	name		1890231						
ANR	1890409	Symbol	estrdup		1890231						
ANR	1890410	Symbol	sxe -> document		1890231						
ANR	1890411	Function	php_sxe_get_first_node	98:0:3723:4105							
ANR	1890412	FunctionDef	"php_sxe_get_first_node (php_sxe_object * sxe , xmlNodePtr node)"		1890411	0					
ANR	1890413	CompoundStatement		99:0:3812:4105	1890411	0					
ANR	1890414	IdentifierDeclStatement	php_sxe_object * intern ;	100:1:3815:3837	1890411	0	True				
ANR	1890415	IdentifierDecl	* intern		1890411	0					
ANR	1890416	IdentifierDeclType	php_sxe_object *		1890411	0					
ANR	1890417	Identifier	intern		1890411	1					
ANR	1890418	IdentifierDeclStatement	xmlNodePtr retnode = NULL ;	101:1:3840:3865	1890411	1	True				
ANR	1890419	IdentifierDecl	retnode = NULL		1890411	0					
ANR	1890420	IdentifierDeclType	xmlNodePtr		1890411	0					
ANR	1890421	Identifier	retnode		1890411	1					
ANR	1890422	AssignmentExpression	retnode = NULL		1890411	2		=			
ANR	1890423	Identifier	NULL		1890411	0					
ANR	1890424	Identifier	NULL		1890411	1					
ANR	1890425	IfStatement	if ( sxe && sxe -> iter . type != SXE_ITER_NONE )		1890411	2					
ANR	1890426	Condition	sxe && sxe -> iter . type != SXE_ITER_NONE	103:5:3873:3910	1890411	0	True				
ANR	1890427	AndExpression	sxe && sxe -> iter . type != SXE_ITER_NONE		1890411	0		&&			
ANR	1890428	Identifier	sxe		1890411	0					
ANR	1890429	EqualityExpression	sxe -> iter . type != SXE_ITER_NONE		1890411	1		!=			
ANR	1890430	MemberAccess	sxe -> iter . type		1890411	0					
ANR	1890431	PtrMemberAccess	sxe -> iter		1890411	0					
ANR	1890432	Identifier	sxe		1890411	0					
ANR	1890433	Identifier	iter		1890411	1					
ANR	1890434	Identifier	type		1890411	1					
ANR	1890435	Identifier	SXE_ITER_NONE		1890411	1					
ANR	1890436	CompoundStatement		5:45:100:100	1890411	1					
ANR	1890437	ExpressionStatement	"php_sxe_reset_iterator ( sxe , 1 )"	104:2:3917:3947	1890411	0	True				
ANR	1890438	CallExpression	"php_sxe_reset_iterator ( sxe , 1 )"		1890411	0					
ANR	1890439	Callee	php_sxe_reset_iterator		1890411	0					
ANR	1890440	Identifier	php_sxe_reset_iterator		1890411	0					
ANR	1890441	ArgumentList	sxe		1890411	1					
ANR	1890442	Argument	sxe		1890411	0					
ANR	1890443	Identifier	sxe		1890411	0					
ANR	1890444	Argument	1		1890411	1					
ANR	1890445	PrimaryExpression	1		1890411	0					
ANR	1890446	IfStatement	if ( ! Z_ISUNDEF ( sxe -> iter . data ) )		1890411	1					
ANR	1890447	Condition	! Z_ISUNDEF ( sxe -> iter . data )	105:6:3955:3980	1890411	0	True				
ANR	1890448	UnaryOperationExpression	! Z_ISUNDEF ( sxe -> iter . data )		1890411	0					
ANR	1890449	UnaryOperator	!		1890411	0					
ANR	1890450	CallExpression	Z_ISUNDEF ( sxe -> iter . data )		1890411	1					
ANR	1890451	Callee	Z_ISUNDEF		1890411	0					
ANR	1890452	Identifier	Z_ISUNDEF		1890411	0					
ANR	1890453	ArgumentList	sxe -> iter . data		1890411	1					
ANR	1890454	Argument	sxe -> iter . data		1890411	0					
ANR	1890455	MemberAccess	sxe -> iter . data		1890411	0					
ANR	1890456	PtrMemberAccess	sxe -> iter		1890411	0					
ANR	1890457	Identifier	sxe		1890411	0					
ANR	1890458	Identifier	iter		1890411	1					
ANR	1890459	Identifier	data		1890411	1					
ANR	1890460	CompoundStatement		7:34:170:170	1890411	1					
ANR	1890461	ExpressionStatement	intern = Z_SXEOBJ_P ( & sxe -> iter . data )	106:3:3988:4024	1890411	0	True				
ANR	1890462	AssignmentExpression	intern = Z_SXEOBJ_P ( & sxe -> iter . data )		1890411	0		=			
ANR	1890463	Identifier	intern		1890411	0					
ANR	1890464	CallExpression	Z_SXEOBJ_P ( & sxe -> iter . data )		1890411	1					
ANR	1890465	Callee	Z_SXEOBJ_P		1890411	0					
ANR	1890466	Identifier	Z_SXEOBJ_P		1890411	0					
ANR	1890467	ArgumentList	& sxe -> iter . data		1890411	1					
ANR	1890468	Argument	& sxe -> iter . data		1890411	0					
ANR	1890469	UnaryOperationExpression	& sxe -> iter . data		1890411	0					
ANR	1890470	UnaryOperator	&		1890411	0					
ANR	1890471	MemberAccess	sxe -> iter . data		1890411	1					
ANR	1890472	PtrMemberAccess	sxe -> iter		1890411	0					
ANR	1890473	Identifier	sxe		1890411	0					
ANR	1890474	Identifier	iter		1890411	1					
ANR	1890475	Identifier	data		1890411	1					
ANR	1890476	Statement	GET_NODE	107:3:4029:4036	1890411	1	True				
ANR	1890477	Statement	(	107:11:4037:4037	1890411	2	True				
ANR	1890478	Statement	intern	107:12:4038:4043	1890411	3	True				
ANR	1890479	Statement	","	107:18:4044:4044	1890411	4	True				
ANR	1890480	Statement	retnode	107:20:4046:4052	1890411	5	True				
ANR	1890481	Statement	)	107:27:4053:4053	1890411	6	True				
ANR	1890482	ReturnStatement	return retnode ;	109:2:4061:4075	1890411	2	True				
ANR	1890483	Identifier	retnode		1890411	0					
ANR	1890484	ElseStatement	else		1890411	0					
ANR	1890485	CompoundStatement		12:8:272:272	1890411	0					
ANR	1890486	ReturnStatement	return node ;	111:2:4089:4100	1890411	0	True				
ANR	1890487	Identifier	node		1890411	0					
ANR	1890488	ReturnType	static xmlNodePtr		1890411	1					
ANR	1890489	Identifier	php_sxe_get_first_node		1890411	2					
ANR	1890490	ParameterList	"php_sxe_object * sxe , xmlNodePtr node"		1890411	3					
ANR	1890491	Parameter	php_sxe_object * sxe	98:41:3764:3782	1890411	0	True				
ANR	1890492	ParameterType	php_sxe_object *		1890411	0					
ANR	1890493	Identifier	sxe		1890411	1					
ANR	1890494	Parameter	xmlNodePtr node	98:62:3785:3799	1890411	1	True				
ANR	1890495	ParameterType	xmlNodePtr		1890411	0					
ANR	1890496	Identifier	node		1890411	1					
ANR	1890497	CFGEntryNode	ENTRY		1890411		True				
ANR	1890498	CFGExitNode	EXIT		1890411		True				
ANR	1890499	Symbol	sxe		1890411						
ANR	1890500	Symbol	& sxe -> iter		1890411						
ANR	1890501	Symbol	intern		1890411						
ANR	1890502	Symbol	NULL		1890411						
ANR	1890503	Symbol	Z_ISUNDEF		1890411						
ANR	1890504	Symbol	* sxe		1890411						
ANR	1890505	Symbol	sxe -> iter . type		1890411						
ANR	1890506	Symbol	sxe -> iter		1890411						
ANR	1890507	Symbol	node		1890411						
ANR	1890508	Symbol	SXE_ITER_NONE		1890411						
ANR	1890509	Symbol	sxe -> iter . data		1890411						
ANR	1890510	Symbol	retnode		1890411						
ANR	1890511	Symbol	& sxe -> iter . data		1890411						
ANR	1890512	Symbol	Z_SXEOBJ_P		1890411						
ANR	1890513	Function	match_ns	116:0:4118:4417							
ANR	1890514	FunctionDef	"match_ns (php_sxe_object * sxe , xmlNodePtr node , xmlChar * name , int prefix)"		1890513	0					
ANR	1890515	CompoundStatement		117:0:4220:4417	1890513	0					
ANR	1890516	IfStatement	if ( name == NULL && ( node -> ns == NULL || node -> ns -> prefix == NULL ) )		1890513	0					
ANR	1890517	Condition	name == NULL && ( node -> ns == NULL || node -> ns -> prefix == NULL )	118:5:4227:4288	1890513	0	True				
ANR	1890518	AndExpression	name == NULL && ( node -> ns == NULL || node -> ns -> prefix == NULL )		1890513	0		&&			
ANR	1890519	EqualityExpression	name == NULL		1890513	0		==			
ANR	1890520	Identifier	name		1890513	0					
ANR	1890521	Identifier	NULL		1890513	1					
ANR	1890522	OrExpression	node -> ns == NULL || node -> ns -> prefix == NULL		1890513	1		||			
ANR	1890523	EqualityExpression	node -> ns == NULL		1890513	0		==			
ANR	1890524	PtrMemberAccess	node -> ns		1890513	0					
ANR	1890525	Identifier	node		1890513	0					
ANR	1890526	Identifier	ns		1890513	1					
ANR	1890527	Identifier	NULL		1890513	1					
ANR	1890528	EqualityExpression	node -> ns -> prefix == NULL		1890513	1		==			
ANR	1890529	PtrMemberAccess	node -> ns -> prefix		1890513	0					
ANR	1890530	PtrMemberAccess	node -> ns		1890513	0					
ANR	1890531	Identifier	node		1890513	0					
ANR	1890532	Identifier	ns		1890513	1					
ANR	1890533	Identifier	prefix		1890513	1					
ANR	1890534	Identifier	NULL		1890513	1					
ANR	1890535	CompoundStatement		2:69:70:70	1890513	1					
ANR	1890536	ReturnStatement	return 1 ;	119:2:4295:4303	1890513	0	True				
ANR	1890537	PrimaryExpression	1		1890513	0					
ANR	1890538	IfStatement	"if ( node -> ns && ! xmlStrcmp ( prefix ? node -> ns -> prefix : node -> ns -> href , name ) )"		1890513	1					
ANR	1890539	Condition	"node -> ns && ! xmlStrcmp ( prefix ? node -> ns -> prefix : node -> ns -> href , name )"	122:5:4314:4385	1890513	0	True				
ANR	1890540	AndExpression	"node -> ns && ! xmlStrcmp ( prefix ? node -> ns -> prefix : node -> ns -> href , name )"		1890513	0		&&			
ANR	1890541	PtrMemberAccess	node -> ns		1890513	0					
ANR	1890542	Identifier	node		1890513	0					
ANR	1890543	Identifier	ns		1890513	1					
ANR	1890544	UnaryOperationExpression	"! xmlStrcmp ( prefix ? node -> ns -> prefix : node -> ns -> href , name )"		1890513	1					
ANR	1890545	UnaryOperator	!		1890513	0					
ANR	1890546	CallExpression	"xmlStrcmp ( prefix ? node -> ns -> prefix : node -> ns -> href , name )"		1890513	1					
ANR	1890547	Callee	xmlStrcmp		1890513	0					
ANR	1890548	Identifier	xmlStrcmp		1890513	0					
ANR	1890549	ArgumentList	prefix ? node -> ns -> prefix : node -> ns -> href		1890513	1					
ANR	1890550	Argument	prefix ? node -> ns -> prefix : node -> ns -> href		1890513	0					
ANR	1890551	ConditionalExpression	prefix ? node -> ns -> prefix : node -> ns -> href		1890513	0					
ANR	1890552	Condition	prefix		1890513	0					
ANR	1890553	Identifier	prefix		1890513	0					
ANR	1890554	PtrMemberAccess	node -> ns -> prefix		1890513	1					
ANR	1890555	PtrMemberAccess	node -> ns		1890513	0					
ANR	1890556	Identifier	node		1890513	0					
ANR	1890557	Identifier	ns		1890513	1					
ANR	1890558	Identifier	prefix		1890513	1					
ANR	1890559	PtrMemberAccess	node -> ns -> href		1890513	2					
ANR	1890560	PtrMemberAccess	node -> ns		1890513	0					
ANR	1890561	Identifier	node		1890513	0					
ANR	1890562	Identifier	ns		1890513	1					
ANR	1890563	Identifier	href		1890513	1					
ANR	1890564	Argument	name		1890513	1					
ANR	1890565	Identifier	name		1890513	0					
ANR	1890566	CompoundStatement		6:79:167:167	1890513	1					
ANR	1890567	ReturnStatement	return 1 ;	123:2:4392:4400	1890513	0	True				
ANR	1890568	PrimaryExpression	1		1890513	0					
ANR	1890569	ReturnStatement	return 0 ;	126:1:4407:4415	1890513	2	True				
ANR	1890570	PrimaryExpression	0		1890513	0					
ANR	1890571	ReturnType	static inline int		1890513	1					
ANR	1890572	Identifier	match_ns		1890513	2					
ANR	1890573	ParameterList	"php_sxe_object * sxe , xmlNodePtr node , xmlChar * name , int prefix"		1890513	3					
ANR	1890574	Parameter	php_sxe_object * sxe	116:27:4145:4163	1890513	0	True				
ANR	1890575	ParameterType	php_sxe_object *		1890513	0					
ANR	1890576	Identifier	sxe		1890513	1					
ANR	1890577	Parameter	xmlNodePtr node	116:48:4166:4180	1890513	1	True				
ANR	1890578	ParameterType	xmlNodePtr		1890513	0					
ANR	1890579	Identifier	node		1890513	1					
ANR	1890580	Parameter	xmlChar * name	116:65:4183:4195	1890513	2	True				
ANR	1890581	ParameterType	xmlChar *		1890513	0					
ANR	1890582	Identifier	name		1890513	1					
ANR	1890583	Parameter	int prefix	116:80:4198:4207	1890513	3	True				
ANR	1890584	ParameterType	int		1890513	0					
ANR	1890585	Identifier	prefix		1890513	1					
ANR	1890586	CFGEntryNode	ENTRY		1890513		True				
ANR	1890587	CFGExitNode	EXIT		1890513		True				
ANR	1890588	Symbol	sxe		1890513						
ANR	1890589	Symbol	node		1890513						
ANR	1890590	Symbol	node -> ns		1890513						
ANR	1890591	Symbol	NULL		1890513						
ANR	1890592	Symbol	xmlStrcmp		1890513						
ANR	1890593	Symbol	* * node		1890513						
ANR	1890594	Symbol	prefix		1890513						
ANR	1890595	Symbol	name		1890513						
ANR	1890596	Symbol	* node		1890513						
ANR	1890597	Symbol	node -> ns -> href		1890513						
ANR	1890598	Symbol	node -> ns -> prefix		1890513						
ANR	1890599	Symbol	* node -> ns		1890513						
ANR	1890600	Function	sxe_get_element_by_offset	130:0:4430:5170							
ANR	1890601	FunctionDef	"sxe_get_element_by_offset (php_sxe_object * sxe , zend_long offset , xmlNodePtr node , zend_long * cnt)"		1890600	0					
ANR	1890602	CompoundStatement		131:0:4556:5170	1890600	0					
ANR	1890603	IdentifierDeclStatement	zend_long nodendx = 0 ;	132:1:4559:4580	1890600	0	True				
ANR	1890604	IdentifierDecl	nodendx = 0		1890600	0					
ANR	1890605	IdentifierDeclType	zend_long		1890600	0					
ANR	1890606	Identifier	nodendx		1890600	1					
ANR	1890607	AssignmentExpression	nodendx = 0		1890600	2		=			
ANR	1890608	Identifier	nodendx		1890600	0					
ANR	1890609	PrimaryExpression	0		1890600	1					
ANR	1890610	IfStatement	if ( sxe -> iter . type == SXE_ITER_NONE )		1890600	1					
ANR	1890611	Condition	sxe -> iter . type == SXE_ITER_NONE	134:5:4588:4618	1890600	0	True				
ANR	1890612	EqualityExpression	sxe -> iter . type == SXE_ITER_NONE		1890600	0		==			
ANR	1890613	MemberAccess	sxe -> iter . type		1890600	0					
ANR	1890614	PtrMemberAccess	sxe -> iter		1890600	0					
ANR	1890615	Identifier	sxe		1890600	0					
ANR	1890616	Identifier	iter		1890600	1					
ANR	1890617	Identifier	type		1890600	1					
ANR	1890618	Identifier	SXE_ITER_NONE		1890600	1					
ANR	1890619	CompoundStatement		4:38:64:64	1890600	1					
ANR	1890620	IfStatement	if ( offset == 0 )		1890600	0					
ANR	1890621	Condition	offset == 0	135:6:4629:4639	1890600	0	True				
ANR	1890622	EqualityExpression	offset == 0		1890600	0		==			
ANR	1890623	Identifier	offset		1890600	0					
ANR	1890624	PrimaryExpression	0		1890600	1					
ANR	1890625	CompoundStatement		5:19:85:85	1890600	1					
ANR	1890626	IfStatement	if ( cnt )		1890600	0					
ANR	1890627	Condition	cnt	136:7:4651:4653	1890600	0	True				
ANR	1890628	Identifier	cnt		1890600	0					
ANR	1890629	CompoundStatement		6:12:99:99	1890600	1					
ANR	1890630	ExpressionStatement	* cnt = 0	137:4:4662:4670	1890600	0	True				
ANR	1890631	AssignmentExpression	* cnt = 0		1890600	0		=			
ANR	1890632	UnaryOperationExpression	* cnt		1890600	0					
ANR	1890633	UnaryOperator	*		1890600	0					
ANR	1890634	Identifier	cnt		1890600	1					
ANR	1890635	PrimaryExpression	0		1890600	1					
ANR	1890636	ReturnStatement	return node ;	139:3:4680:4691	1890600	1	True				
ANR	1890637	Identifier	node		1890600	0					
ANR	1890638	ElseStatement	else		1890600	0					
ANR	1890639	CompoundStatement		10:9:145:145	1890600	0					
ANR	1890640	ReturnStatement	return NULL ;	141:3:4707:4718	1890600	0	True				
ANR	1890641	Identifier	NULL		1890600	0					
ANR	1890642	WhileStatement	while ( node && nodendx <= offset )		1890600	2					
ANR	1890643	Condition	node && nodendx <= offset	144:8:4735:4759	1890600	0	True				
ANR	1890644	AndExpression	node && nodendx <= offset		1890600	0		&&			
ANR	1890645	Identifier	node		1890600	0					
ANR	1890646	RelationalExpression	nodendx <= offset		1890600	1		<=			
ANR	1890647	Identifier	nodendx		1890600	0					
ANR	1890648	Identifier	offset		1890600	1					
ANR	1890649	CompoundStatement		14:35:205:205	1890600	1					
ANR	1890650	Statement	SKIP_TEXT	145:2:4766:4774	1890600	0	True				
ANR	1890651	Statement	(	145:11:4775:4775	1890600	1	True				
ANR	1890652	Statement	node	145:12:4776:4779	1890600	2	True				
ANR	1890653	Statement	)	145:16:4780:4780	1890600	3	True				
ANR	1890654	IfStatement	"if ( node -> type == XML_ELEMENT_NODE && match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix ) )"		1890600	4					
ANR	1890655	Condition	"node -> type == XML_ELEMENT_NODE && match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	146:6:4788:4880	1890600	0	True				
ANR	1890656	AndExpression	"node -> type == XML_ELEMENT_NODE && match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1890600	0		&&			
ANR	1890657	EqualityExpression	node -> type == XML_ELEMENT_NODE		1890600	0		==			
ANR	1890658	PtrMemberAccess	node -> type		1890600	0					
ANR	1890659	Identifier	node		1890600	0					
ANR	1890660	Identifier	type		1890600	1					
ANR	1890661	Identifier	XML_ELEMENT_NODE		1890600	1					
ANR	1890662	CallExpression	"match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1890600	1					
ANR	1890663	Callee	match_ns		1890600	0					
ANR	1890664	Identifier	match_ns		1890600	0					
ANR	1890665	ArgumentList	sxe		1890600	1					
ANR	1890666	Argument	sxe		1890600	0					
ANR	1890667	Identifier	sxe		1890600	0					
ANR	1890668	Argument	node		1890600	1					
ANR	1890669	Identifier	node		1890600	0					
ANR	1890670	Argument	sxe -> iter . nsprefix		1890600	2					
ANR	1890671	MemberAccess	sxe -> iter . nsprefix		1890600	0					
ANR	1890672	PtrMemberAccess	sxe -> iter		1890600	0					
ANR	1890673	Identifier	sxe		1890600	0					
ANR	1890674	Identifier	iter		1890600	1					
ANR	1890675	Identifier	nsprefix		1890600	1					
ANR	1890676	Argument	sxe -> iter . isprefix		1890600	3					
ANR	1890677	MemberAccess	sxe -> iter . isprefix		1890600	0					
ANR	1890678	PtrMemberAccess	sxe -> iter		1890600	0					
ANR	1890679	Identifier	sxe		1890600	0					
ANR	1890680	Identifier	iter		1890600	1					
ANR	1890681	Identifier	isprefix		1890600	1					
ANR	1890682	CompoundStatement		16:101:326:326	1890600	1					
ANR	1890683	IfStatement	"if ( sxe -> iter . type == SXE_ITER_CHILD || ( sxe -> iter . type == SXE_ITER_ELEMENT && ! xmlStrcmp ( node -> name , sxe -> iter . name ) ) )"		1890600	0					
ANR	1890684	Condition	"sxe -> iter . type == SXE_ITER_CHILD || ( sxe -> iter . type == SXE_ITER_ELEMENT && ! xmlStrcmp ( node -> name , sxe -> iter . name ) )"	147:7:4892:5010	1890600	0	True				
ANR	1890685	OrExpression	"sxe -> iter . type == SXE_ITER_CHILD || ( sxe -> iter . type == SXE_ITER_ELEMENT && ! xmlStrcmp ( node -> name , sxe -> iter . name ) )"		1890600	0		||			
ANR	1890686	EqualityExpression	sxe -> iter . type == SXE_ITER_CHILD		1890600	0		==			
ANR	1890687	MemberAccess	sxe -> iter . type		1890600	0					
ANR	1890688	PtrMemberAccess	sxe -> iter		1890600	0					
ANR	1890689	Identifier	sxe		1890600	0					
ANR	1890690	Identifier	iter		1890600	1					
ANR	1890691	Identifier	type		1890600	1					
ANR	1890692	Identifier	SXE_ITER_CHILD		1890600	1					
ANR	1890693	AndExpression	"sxe -> iter . type == SXE_ITER_ELEMENT && ! xmlStrcmp ( node -> name , sxe -> iter . name )"		1890600	1		&&			
ANR	1890694	EqualityExpression	sxe -> iter . type == SXE_ITER_ELEMENT		1890600	0		==			
ANR	1890695	MemberAccess	sxe -> iter . type		1890600	0					
ANR	1890696	PtrMemberAccess	sxe -> iter		1890600	0					
ANR	1890697	Identifier	sxe		1890600	0					
ANR	1890698	Identifier	iter		1890600	1					
ANR	1890699	Identifier	type		1890600	1					
ANR	1890700	Identifier	SXE_ITER_ELEMENT		1890600	1					
ANR	1890701	UnaryOperationExpression	"! xmlStrcmp ( node -> name , sxe -> iter . name )"		1890600	1					
ANR	1890702	UnaryOperator	!		1890600	0					
ANR	1890703	CallExpression	"xmlStrcmp ( node -> name , sxe -> iter . name )"		1890600	1					
ANR	1890704	Callee	xmlStrcmp		1890600	0					
ANR	1890705	Identifier	xmlStrcmp		1890600	0					
ANR	1890706	ArgumentList	node -> name		1890600	1					
ANR	1890707	Argument	node -> name		1890600	0					
ANR	1890708	PtrMemberAccess	node -> name		1890600	0					
ANR	1890709	Identifier	node		1890600	0					
ANR	1890710	Identifier	name		1890600	1					
ANR	1890711	Argument	sxe -> iter . name		1890600	1					
ANR	1890712	MemberAccess	sxe -> iter . name		1890600	0					
ANR	1890713	PtrMemberAccess	sxe -> iter		1890600	0					
ANR	1890714	Identifier	sxe		1890600	0					
ANR	1890715	Identifier	iter		1890600	1					
ANR	1890716	Identifier	name		1890600	1					
ANR	1890717	CompoundStatement		18:83:456:456	1890600	1					
ANR	1890718	IfStatement	if ( nodendx == offset )		1890600	0					
ANR	1890719	Condition	nodendx == offset	149:8:5023:5039	1890600	0	True				
ANR	1890720	EqualityExpression	nodendx == offset		1890600	0		==			
ANR	1890721	Identifier	nodendx		1890600	0					
ANR	1890722	Identifier	offset		1890600	1					
ANR	1890723	CompoundStatement		19:27:485:485	1890600	1					
ANR	1890724	BreakStatement	break ;	150:5:5049:5054	1890600	0	True				
ANR	1890725	ExpressionStatement	nodendx ++	152:4:5066:5075	1890600	1	True				
ANR	1890726	PostIncDecOperationExpression	nodendx ++		1890600	0					
ANR	1890727	Identifier	nodendx		1890600	0					
ANR	1890728	IncDec	++		1890600	1					
ANR	1890729	Label	next_iter :	155:0:5086:5095	1890600	5	True				
ANR	1890730	Identifier	next_iter		1890600	0					
ANR	1890731	ExpressionStatement	node = node -> next	156:2:5099:5116	1890600	6	True				
ANR	1890732	AssignmentExpression	node = node -> next		1890600	0		=			
ANR	1890733	Identifier	node		1890600	0					
ANR	1890734	PtrMemberAccess	node -> next		1890600	1					
ANR	1890735	Identifier	node		1890600	0					
ANR	1890736	Identifier	next		1890600	1					
ANR	1890737	IfStatement	if ( cnt )		1890600	3					
ANR	1890738	Condition	cnt	159:5:5127:5129	1890600	0	True				
ANR	1890739	Identifier	cnt		1890600	0					
ANR	1890740	CompoundStatement		29:10:575:575	1890600	1					
ANR	1890741	ExpressionStatement	* cnt = nodendx	160:2:5136:5150	1890600	0	True				
ANR	1890742	AssignmentExpression	* cnt = nodendx		1890600	0		=			
ANR	1890743	UnaryOperationExpression	* cnt		1890600	0					
ANR	1890744	UnaryOperator	*		1890600	0					
ANR	1890745	Identifier	cnt		1890600	1					
ANR	1890746	Identifier	nodendx		1890600	1					
ANR	1890747	ReturnStatement	return node ;	163:1:5157:5168	1890600	4	True				
ANR	1890748	Identifier	node		1890600	0					
ANR	1890749	ReturnType	static xmlNodePtr		1890600	1					
ANR	1890750	Identifier	sxe_get_element_by_offset		1890600	2					
ANR	1890751	ParameterList	"php_sxe_object * sxe , zend_long offset , xmlNodePtr node , zend_long * cnt"		1890600	3					
ANR	1890752	Parameter	php_sxe_object * sxe	130:44:4474:4492	1890600	0	True				
ANR	1890753	ParameterType	php_sxe_object *		1890600	0					
ANR	1890754	Identifier	sxe		1890600	1					
ANR	1890755	Parameter	zend_long offset	130:65:4495:4510	1890600	1	True				
ANR	1890756	ParameterType	zend_long		1890600	0					
ANR	1890757	Identifier	offset		1890600	1					
ANR	1890758	Parameter	xmlNodePtr node	130:83:4513:4527	1890600	2	True				
ANR	1890759	ParameterType	xmlNodePtr		1890600	0					
ANR	1890760	Identifier	node		1890600	1					
ANR	1890761	Parameter	zend_long * cnt	130:100:4530:4543	1890600	3	True				
ANR	1890762	ParameterType	zend_long *		1890600	0					
ANR	1890763	Identifier	cnt		1890600	1					
ANR	1890764	CFGEntryNode	ENTRY		1890600		True				
ANR	1890765	CFGExitNode	EXIT		1890600		True				
ANR	1890766	Symbol	sxe		1890600						
ANR	1890767	Symbol	XML_ELEMENT_NODE		1890600						
ANR	1890768	Symbol	SXE_ITER_CHILD		1890600						
ANR	1890769	Symbol	NULL		1890600						
ANR	1890770	Symbol	xmlStrcmp		1890600						
ANR	1890771	Symbol	offset		1890600						
ANR	1890772	Symbol	cnt		1890600						
ANR	1890773	Symbol	nodendx		1890600						
ANR	1890774	Symbol	sxe -> iter . isprefix		1890600						
ANR	1890775	Symbol	* sxe		1890600						
ANR	1890776	Symbol	node -> next		1890600						
ANR	1890777	Symbol	sxe -> iter . type		1890600						
ANR	1890778	Symbol	* cnt		1890600						
ANR	1890779	Symbol	match_ns		1890600						
ANR	1890780	Symbol	sxe -> iter		1890600						
ANR	1890781	Symbol	sxe -> iter . name		1890600						
ANR	1890782	Symbol	node		1890600						
ANR	1890783	Symbol	SXE_ITER_NONE		1890600						
ANR	1890784	Symbol	SXE_ITER_ELEMENT		1890600						
ANR	1890785	Symbol	node -> name		1890600						
ANR	1890786	Symbol	sxe -> iter . nsprefix		1890600						
ANR	1890787	Symbol	node -> type		1890600						
ANR	1890788	Symbol	* node		1890600						
ANR	1890789	Function	sxe_find_element_by_name	167:0:5183:5542							
ANR	1890790	FunctionDef	"sxe_find_element_by_name (php_sxe_object * sxe , xmlNodePtr node , xmlChar * name)"		1890789	0					
ANR	1890791	CompoundStatement		168:0:5289:5542	1890789	0					
ANR	1890792	WhileStatement	while ( node )		1890789	0					
ANR	1890793	Condition	node	169:8:5299:5302	1890789	0	True				
ANR	1890794	Identifier	node		1890789	0					
ANR	1890795	CompoundStatement		2:14:15:15	1890789	1					
ANR	1890796	Statement	SKIP_TEXT	170:2:5309:5317	1890789	0	True				
ANR	1890797	Statement	(	170:11:5318:5318	1890789	1	True				
ANR	1890798	Statement	node	170:12:5319:5322	1890789	2	True				
ANR	1890799	Statement	)	170:16:5323:5323	1890789	3	True				
ANR	1890800	IfStatement	"if ( node -> type == XML_ELEMENT_NODE && match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix ) )"		1890789	4					
ANR	1890801	Condition	"node -> type == XML_ELEMENT_NODE && match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	171:6:5331:5423	1890789	0	True				
ANR	1890802	AndExpression	"node -> type == XML_ELEMENT_NODE && match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1890789	0		&&			
ANR	1890803	EqualityExpression	node -> type == XML_ELEMENT_NODE		1890789	0		==			
ANR	1890804	PtrMemberAccess	node -> type		1890789	0					
ANR	1890805	Identifier	node		1890789	0					
ANR	1890806	Identifier	type		1890789	1					
ANR	1890807	Identifier	XML_ELEMENT_NODE		1890789	1					
ANR	1890808	CallExpression	"match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1890789	1					
ANR	1890809	Callee	match_ns		1890789	0					
ANR	1890810	Identifier	match_ns		1890789	0					
ANR	1890811	ArgumentList	sxe		1890789	1					
ANR	1890812	Argument	sxe		1890789	0					
ANR	1890813	Identifier	sxe		1890789	0					
ANR	1890814	Argument	node		1890789	1					
ANR	1890815	Identifier	node		1890789	0					
ANR	1890816	Argument	sxe -> iter . nsprefix		1890789	2					
ANR	1890817	MemberAccess	sxe -> iter . nsprefix		1890789	0					
ANR	1890818	PtrMemberAccess	sxe -> iter		1890789	0					
ANR	1890819	Identifier	sxe		1890789	0					
ANR	1890820	Identifier	iter		1890789	1					
ANR	1890821	Identifier	nsprefix		1890789	1					
ANR	1890822	Argument	sxe -> iter . isprefix		1890789	3					
ANR	1890823	MemberAccess	sxe -> iter . isprefix		1890789	0					
ANR	1890824	PtrMemberAccess	sxe -> iter		1890789	0					
ANR	1890825	Identifier	sxe		1890789	0					
ANR	1890826	Identifier	iter		1890789	1					
ANR	1890827	Identifier	isprefix		1890789	1					
ANR	1890828	CompoundStatement		4:101:136:136	1890789	1					
ANR	1890829	IfStatement	"if ( ! xmlStrcmp ( node -> name , name ) )"		1890789	0					
ANR	1890830	Condition	"! xmlStrcmp ( node -> name , name )"	172:7:5435:5462	1890789	0	True				
ANR	1890831	UnaryOperationExpression	"! xmlStrcmp ( node -> name , name )"		1890789	0					
ANR	1890832	UnaryOperator	!		1890789	0					
ANR	1890833	CallExpression	"xmlStrcmp ( node -> name , name )"		1890789	1					
ANR	1890834	Callee	xmlStrcmp		1890789	0					
ANR	1890835	Identifier	xmlStrcmp		1890789	0					
ANR	1890836	ArgumentList	node -> name		1890789	1					
ANR	1890837	Argument	node -> name		1890789	0					
ANR	1890838	PtrMemberAccess	node -> name		1890789	0					
ANR	1890839	Identifier	node		1890789	0					
ANR	1890840	Identifier	name		1890789	1					
ANR	1890841	Argument	name		1890789	1					
ANR	1890842	Identifier	name		1890789	0					
ANR	1890843	CompoundStatement		5:37:175:175	1890789	1					
ANR	1890844	ReturnStatement	return node ;	173:4:5471:5482	1890789	0	True				
ANR	1890845	Identifier	node		1890789	0					
ANR	1890846	Label	next_iter :	176:0:5493:5502	1890789	5	True				
ANR	1890847	Identifier	next_iter		1890789	0					
ANR	1890848	ExpressionStatement	node = node -> next	177:2:5506:5523	1890789	6	True				
ANR	1890849	AssignmentExpression	node = node -> next		1890789	0		=			
ANR	1890850	Identifier	node		1890789	0					
ANR	1890851	PtrMemberAccess	node -> next		1890789	1					
ANR	1890852	Identifier	node		1890789	0					
ANR	1890853	Identifier	next		1890789	1					
ANR	1890854	ReturnStatement	return NULL ;	179:1:5529:5540	1890789	1	True				
ANR	1890855	Identifier	NULL		1890789	0					
ANR	1890856	ReturnType	static xmlNodePtr		1890789	1					
ANR	1890857	Identifier	sxe_find_element_by_name		1890789	2					
ANR	1890858	ParameterList	"php_sxe_object * sxe , xmlNodePtr node , xmlChar * name"		1890789	3					
ANR	1890859	Parameter	php_sxe_object * sxe	167:43:5226:5244	1890789	0	True				
ANR	1890860	ParameterType	php_sxe_object *		1890789	0					
ANR	1890861	Identifier	sxe		1890789	1					
ANR	1890862	Parameter	xmlNodePtr node	167:64:5247:5261	1890789	1	True				
ANR	1890863	ParameterType	xmlNodePtr		1890789	0					
ANR	1890864	Identifier	node		1890789	1					
ANR	1890865	Parameter	xmlChar * name	167:81:5264:5276	1890789	2	True				
ANR	1890866	ParameterType	xmlChar *		1890789	0					
ANR	1890867	Identifier	name		1890789	1					
ANR	1890868	CFGEntryNode	ENTRY		1890789		True				
ANR	1890869	CFGExitNode	EXIT		1890789		True				
ANR	1890870	Symbol	sxe		1890789						
ANR	1890871	Symbol	XML_ELEMENT_NODE		1890789						
ANR	1890872	Symbol	xmlStrcmp		1890789						
ANR	1890873	Symbol	NULL		1890789						
ANR	1890874	Symbol	sxe -> iter . isprefix		1890789						
ANR	1890875	Symbol	* sxe		1890789						
ANR	1890876	Symbol	node -> next		1890789						
ANR	1890877	Symbol	match_ns		1890789						
ANR	1890878	Symbol	sxe -> iter		1890789						
ANR	1890879	Symbol	node		1890789						
ANR	1890880	Symbol	node -> name		1890789						
ANR	1890881	Symbol	sxe -> iter . nsprefix		1890789						
ANR	1890882	Symbol	name		1890789						
ANR	1890883	Symbol	node -> type		1890789						
ANR	1890884	Symbol	* node		1890789						
ANR	1890885	Function	sxe_get_element_by_name	182:0:5555:6596							
ANR	1890886	FunctionDef	"sxe_get_element_by_name (php_sxe_object * sxe , xmlNodePtr node , char * * name , SXE_ITER * type)"		1890885	0					
ANR	1890887	CompoundStatement		183:0:5674:6596	1890885	0					
ANR	1890888	IdentifierDeclStatement	int orgtype ;	184:1:5677:5696	1890885	0	True				
ANR	1890889	IdentifierDecl	orgtype		1890885	0					
ANR	1890890	IdentifierDeclType	int		1890885	0					
ANR	1890891	Identifier	orgtype		1890885	1					
ANR	1890892	IdentifierDeclStatement	xmlNodePtr orgnode = node ;	185:1:5699:5725	1890885	1	True				
ANR	1890893	IdentifierDecl	orgnode = node		1890885	0					
ANR	1890894	IdentifierDeclType	xmlNodePtr		1890885	0					
ANR	1890895	Identifier	orgnode		1890885	1					
ANR	1890896	AssignmentExpression	orgnode = node		1890885	2		=			
ANR	1890897	Identifier	node		1890885	0					
ANR	1890898	Identifier	node		1890885	1					
ANR	1890899	IdentifierDeclStatement	xmlNodePtr retnode = NULL ;	186:1:5728:5754	1890885	2	True				
ANR	1890900	IdentifierDecl	retnode = NULL		1890885	0					
ANR	1890901	IdentifierDeclType	xmlNodePtr		1890885	0					
ANR	1890902	Identifier	retnode		1890885	1					
ANR	1890903	AssignmentExpression	retnode = NULL		1890885	2		=			
ANR	1890904	Identifier	NULL		1890885	0					
ANR	1890905	Identifier	NULL		1890885	1					
ANR	1890906	IfStatement	if ( sxe -> iter . type != SXE_ITER_ATTRLIST )		1890885	3					
ANR	1890907	Condition	sxe -> iter . type != SXE_ITER_ATTRLIST	188:5:5762:5796	1890885	0	True				
ANR	1890908	EqualityExpression	sxe -> iter . type != SXE_ITER_ATTRLIST		1890885	0		!=			
ANR	1890909	MemberAccess	sxe -> iter . type		1890885	0					
ANR	1890910	PtrMemberAccess	sxe -> iter		1890885	0					
ANR	1890911	Identifier	sxe		1890885	0					
ANR	1890912	Identifier	iter		1890885	1					
ANR	1890913	Identifier	type		1890885	1					
ANR	1890914	Identifier	SXE_ITER_ATTRLIST		1890885	1					
ANR	1890915	CompoundStatement		7:1:125:125	1890885	1					
ANR	1890916	ExpressionStatement	orgtype = sxe -> iter . type	190:2:5804:5828	1890885	0	True				
ANR	1890917	AssignmentExpression	orgtype = sxe -> iter . type		1890885	0		=			
ANR	1890918	Identifier	orgtype		1890885	0					
ANR	1890919	MemberAccess	sxe -> iter . type		1890885	1					
ANR	1890920	PtrMemberAccess	sxe -> iter		1890885	0					
ANR	1890921	Identifier	sxe		1890885	0					
ANR	1890922	Identifier	iter		1890885	1					
ANR	1890923	Identifier	type		1890885	1					
ANR	1890924	IfStatement	if ( sxe -> iter . type == SXE_ITER_NONE )		1890885	1					
ANR	1890925	Condition	sxe -> iter . type == SXE_ITER_NONE	191:6:5836:5866	1890885	0	True				
ANR	1890926	EqualityExpression	sxe -> iter . type == SXE_ITER_NONE		1890885	0		==			
ANR	1890927	MemberAccess	sxe -> iter . type		1890885	0					
ANR	1890928	PtrMemberAccess	sxe -> iter		1890885	0					
ANR	1890929	Identifier	sxe		1890885	0					
ANR	1890930	Identifier	iter		1890885	1					
ANR	1890931	Identifier	type		1890885	1					
ANR	1890932	Identifier	SXE_ITER_NONE		1890885	1					
ANR	1890933	CompoundStatement		9:39:194:194	1890885	1					
ANR	1890934	ExpressionStatement	sxe -> iter . type = SXE_ITER_CHILD	192:3:5874:5905	1890885	0	True				
ANR	1890935	AssignmentExpression	sxe -> iter . type = SXE_ITER_CHILD		1890885	0		=			
ANR	1890936	MemberAccess	sxe -> iter . type		1890885	0					
ANR	1890937	PtrMemberAccess	sxe -> iter		1890885	0					
ANR	1890938	Identifier	sxe		1890885	0					
ANR	1890939	Identifier	iter		1890885	1					
ANR	1890940	Identifier	type		1890885	1					
ANR	1890941	Identifier	SXE_ITER_CHILD		1890885	1					
ANR	1890942	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , node )"	194:2:5913:5953	1890885	2	True				
ANR	1890943	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , node )"		1890885	0		=			
ANR	1890944	Identifier	node		1890885	0					
ANR	1890945	CallExpression	"php_sxe_get_first_node ( sxe , node )"		1890885	1					
ANR	1890946	Callee	php_sxe_get_first_node		1890885	0					
ANR	1890947	Identifier	php_sxe_get_first_node		1890885	0					
ANR	1890948	ArgumentList	sxe		1890885	1					
ANR	1890949	Argument	sxe		1890885	0					
ANR	1890950	Identifier	sxe		1890885	0					
ANR	1890951	Argument	node		1890885	1					
ANR	1890952	Identifier	node		1890885	0					
ANR	1890953	ExpressionStatement	sxe -> iter . type = orgtype	195:2:5957:5981	1890885	3	True				
ANR	1890954	AssignmentExpression	sxe -> iter . type = orgtype		1890885	0		=			
ANR	1890955	MemberAccess	sxe -> iter . type		1890885	0					
ANR	1890956	PtrMemberAccess	sxe -> iter		1890885	0					
ANR	1890957	Identifier	sxe		1890885	0					
ANR	1890958	Identifier	iter		1890885	1					
ANR	1890959	Identifier	type		1890885	1					
ANR	1890960	Identifier	orgtype		1890885	1					
ANR	1890961	IfStatement	if ( sxe -> iter . type == SXE_ITER_ELEMENT )		1890885	4					
ANR	1890962	Condition	sxe -> iter . type == SXE_ITER_ELEMENT	198:5:5992:6025	1890885	0	True				
ANR	1890963	EqualityExpression	sxe -> iter . type == SXE_ITER_ELEMENT		1890885	0		==			
ANR	1890964	MemberAccess	sxe -> iter . type		1890885	0					
ANR	1890965	PtrMemberAccess	sxe -> iter		1890885	0					
ANR	1890966	Identifier	sxe		1890885	0					
ANR	1890967	Identifier	iter		1890885	1					
ANR	1890968	Identifier	type		1890885	1					
ANR	1890969	Identifier	SXE_ITER_ELEMENT		1890885	1					
ANR	1890970	CompoundStatement		16:41:353:353	1890885	1					
ANR	1890971	ExpressionStatement	"orgnode = sxe_find_element_by_name ( sxe , node , sxe -> iter . name )"	199:2:6032:6093	1890885	0	True				
ANR	1890972	AssignmentExpression	"orgnode = sxe_find_element_by_name ( sxe , node , sxe -> iter . name )"		1890885	0		=			
ANR	1890973	Identifier	orgnode		1890885	0					
ANR	1890974	CallExpression	"sxe_find_element_by_name ( sxe , node , sxe -> iter . name )"		1890885	1					
ANR	1890975	Callee	sxe_find_element_by_name		1890885	0					
ANR	1890976	Identifier	sxe_find_element_by_name		1890885	0					
ANR	1890977	ArgumentList	sxe		1890885	1					
ANR	1890978	Argument	sxe		1890885	0					
ANR	1890979	Identifier	sxe		1890885	0					
ANR	1890980	Argument	node		1890885	1					
ANR	1890981	Identifier	node		1890885	0					
ANR	1890982	Argument	sxe -> iter . name		1890885	2					
ANR	1890983	MemberAccess	sxe -> iter . name		1890885	0					
ANR	1890984	PtrMemberAccess	sxe -> iter		1890885	0					
ANR	1890985	Identifier	sxe		1890885	0					
ANR	1890986	Identifier	iter		1890885	1					
ANR	1890987	Identifier	name		1890885	1					
ANR	1890988	IfStatement	if ( ! orgnode )		1890885	1					
ANR	1890989	Condition	! orgnode	200:6:6101:6108	1890885	0	True				
ANR	1890990	UnaryOperationExpression	! orgnode		1890885	0					
ANR	1890991	UnaryOperator	!		1890885	0					
ANR	1890992	Identifier	orgnode		1890885	1					
ANR	1890993	CompoundStatement		18:16:436:436	1890885	1					
ANR	1890994	ReturnStatement	return NULL ;	201:3:6116:6127	1890885	0	True				
ANR	1890995	Identifier	NULL		1890885	0					
ANR	1890996	ExpressionStatement	node = orgnode -> children	203:2:6135:6159	1890885	2	True				
ANR	1890997	AssignmentExpression	node = orgnode -> children		1890885	0		=			
ANR	1890998	Identifier	node		1890885	0					
ANR	1890999	PtrMemberAccess	orgnode -> children		1890885	1					
ANR	1891000	Identifier	orgnode		1890885	0					
ANR	1891001	Identifier	children		1890885	1					
ANR	1891002	WhileStatement	while ( node )		1890885	5					
ANR	1891003	Condition	node	206:8:6173:6176	1890885	0	True				
ANR	1891004	Identifier	node		1890885	0					
ANR	1891005	CompoundStatement		24:14:504:504	1890885	1					
ANR	1891006	Statement	SKIP_TEXT	207:2:6183:6191	1890885	0	True				
ANR	1891007	Statement	(	207:11:6192:6192	1890885	1	True				
ANR	1891008	Statement	node	207:12:6193:6196	1890885	2	True				
ANR	1891009	Statement	)	207:16:6197:6197	1890885	3	True				
ANR	1891010	IfStatement	"if ( node -> type == XML_ELEMENT_NODE && match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix ) )"		1890885	4					
ANR	1891011	Condition	"node -> type == XML_ELEMENT_NODE && match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	208:6:6205:6297	1890885	0	True				
ANR	1891012	AndExpression	"node -> type == XML_ELEMENT_NODE && match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1890885	0		&&			
ANR	1891013	EqualityExpression	node -> type == XML_ELEMENT_NODE		1890885	0		==			
ANR	1891014	PtrMemberAccess	node -> type		1890885	0					
ANR	1891015	Identifier	node		1890885	0					
ANR	1891016	Identifier	type		1890885	1					
ANR	1891017	Identifier	XML_ELEMENT_NODE		1890885	1					
ANR	1891018	CallExpression	"match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1890885	1					
ANR	1891019	Callee	match_ns		1890885	0					
ANR	1891020	Identifier	match_ns		1890885	0					
ANR	1891021	ArgumentList	sxe		1890885	1					
ANR	1891022	Argument	sxe		1890885	0					
ANR	1891023	Identifier	sxe		1890885	0					
ANR	1891024	Argument	node		1890885	1					
ANR	1891025	Identifier	node		1890885	0					
ANR	1891026	Argument	sxe -> iter . nsprefix		1890885	2					
ANR	1891027	MemberAccess	sxe -> iter . nsprefix		1890885	0					
ANR	1891028	PtrMemberAccess	sxe -> iter		1890885	0					
ANR	1891029	Identifier	sxe		1890885	0					
ANR	1891030	Identifier	iter		1890885	1					
ANR	1891031	Identifier	nsprefix		1890885	1					
ANR	1891032	Argument	sxe -> iter . isprefix		1890885	3					
ANR	1891033	MemberAccess	sxe -> iter . isprefix		1890885	0					
ANR	1891034	PtrMemberAccess	sxe -> iter		1890885	0					
ANR	1891035	Identifier	sxe		1890885	0					
ANR	1891036	Identifier	iter		1890885	1					
ANR	1891037	Identifier	isprefix		1890885	1					
ANR	1891038	CompoundStatement		26:101:625:625	1890885	1					
ANR	1891039	IfStatement	"if ( ! xmlStrcmp ( node -> name , ( xmlChar * ) * name ) )"		1890885	0					
ANR	1891040	Condition	"! xmlStrcmp ( node -> name , ( xmlChar * ) * name )"	209:7:6309:6348	1890885	0	True				
ANR	1891041	UnaryOperationExpression	"! xmlStrcmp ( node -> name , ( xmlChar * ) * name )"		1890885	0					
ANR	1891042	UnaryOperator	!		1890885	0					
ANR	1891043	CallExpression	"xmlStrcmp ( node -> name , ( xmlChar * ) * name )"		1890885	1					
ANR	1891044	Callee	xmlStrcmp		1890885	0					
ANR	1891045	Identifier	xmlStrcmp		1890885	0					
ANR	1891046	ArgumentList	node -> name		1890885	1					
ANR	1891047	Argument	node -> name		1890885	0					
ANR	1891048	PtrMemberAccess	node -> name		1890885	0					
ANR	1891049	Identifier	node		1890885	0					
ANR	1891050	Identifier	name		1890885	1					
ANR	1891051	Argument	( xmlChar * ) * name		1890885	1					
ANR	1891052	CastExpression	( xmlChar * ) * name		1890885	0					
ANR	1891053	CastTarget	xmlChar *		1890885	0					
ANR	1891054	UnaryOperationExpression	* name		1890885	1					
ANR	1891055	UnaryOperator	*		1890885	0					
ANR	1891056	Identifier	name		1890885	1					
ANR	1891057	CompoundStatement		27:49:676:676	1890885	1					
ANR	1891058	IfStatement	if ( 1 || retnode )		1890885	0					
ANR	1891059	Condition	1 || retnode	210:8:6361:6370	1890885	0	True				
ANR	1891060	OrExpression	1 || retnode		1890885	0		||			
ANR	1891061	PrimaryExpression	1		1890885	0					
ANR	1891062	Identifier	retnode		1890885	1					
ANR	1891063	CompoundStatement		29:4:702:702	1890885	1					
ANR	1891064	ExpressionStatement	* type = SXE_ITER_ELEMENT	212:5:6384:6408	1890885	0	True				
ANR	1891065	AssignmentExpression	* type = SXE_ITER_ELEMENT		1890885	0		=			
ANR	1891066	UnaryOperationExpression	* type		1890885	0					
ANR	1891067	UnaryOperator	*		1890885	0					
ANR	1891068	Identifier	type		1890885	1					
ANR	1891069	Identifier	SXE_ITER_ELEMENT		1890885	1					
ANR	1891070	ReturnStatement	return orgnode ;	213:5:6415:6429	1890885	1	True				
ANR	1891071	Identifier	orgnode		1890885	0					
ANR	1891072	ExpressionStatement	retnode = node	215:4:6441:6455	1890885	1	True				
ANR	1891073	AssignmentExpression	retnode = node		1890885	0		=			
ANR	1891074	Identifier	retnode		1890885	0					
ANR	1891075	Identifier	node		1890885	1					
ANR	1891076	Label	next_iter :	218:0:6466:6475	1890885	5	True				
ANR	1891077	Identifier	next_iter		1890885	0					
ANR	1891078	ExpressionStatement	node = node -> next	219:2:6479:6496	1890885	6	True				
ANR	1891079	AssignmentExpression	node = node -> next		1890885	0		=			
ANR	1891080	Identifier	node		1890885	0					
ANR	1891081	PtrMemberAccess	node -> next		1890885	1					
ANR	1891082	Identifier	node		1890885	0					
ANR	1891083	Identifier	next		1890885	1					
ANR	1891084	IfStatement	if ( retnode )		1890885	6					
ANR	1891085	Condition	retnode	222:5:6507:6513	1890885	0	True				
ANR	1891086	Identifier	retnode		1890885	0					
ANR	1891087	CompoundStatement		41:1:842:842	1890885	1					
ANR	1891088	ExpressionStatement	* type = SXE_ITER_NONE	224:2:6521:6542	1890885	0	True				
ANR	1891089	AssignmentExpression	* type = SXE_ITER_NONE		1890885	0		=			
ANR	1891090	UnaryOperationExpression	* type		1890885	0					
ANR	1891091	UnaryOperator	*		1890885	0					
ANR	1891092	Identifier	type		1890885	1					
ANR	1891093	Identifier	SXE_ITER_NONE		1890885	1					
ANR	1891094	ExpressionStatement	* name = NULL	225:2:6546:6558	1890885	1	True				
ANR	1891095	AssignmentExpression	* name = NULL		1890885	0		=			
ANR	1891096	UnaryOperationExpression	* name		1890885	0					
ANR	1891097	UnaryOperator	*		1890885	0					
ANR	1891098	Identifier	name		1890885	1					
ANR	1891099	Identifier	NULL		1890885	1					
ANR	1891100	ReturnStatement	return retnode ;	226:2:6562:6576	1890885	2	True				
ANR	1891101	Identifier	retnode		1890885	0					
ANR	1891102	ReturnStatement	return NULL ;	229:1:6583:6594	1890885	7	True				
ANR	1891103	Identifier	NULL		1890885	0					
ANR	1891104	ReturnType	static xmlNodePtr		1890885	1					
ANR	1891105	Identifier	sxe_get_element_by_name		1890885	2					
ANR	1891106	ParameterList	"php_sxe_object * sxe , xmlNodePtr node , char * * name , SXE_ITER * type"		1890885	3					
ANR	1891107	Parameter	php_sxe_object * sxe	182:42:5597:5615	1890885	0	True				
ANR	1891108	ParameterType	php_sxe_object *		1890885	0					
ANR	1891109	Identifier	sxe		1890885	1					
ANR	1891110	Parameter	xmlNodePtr node	182:63:5618:5632	1890885	1	True				
ANR	1891111	ParameterType	xmlNodePtr		1890885	0					
ANR	1891112	Identifier	node		1890885	1					
ANR	1891113	Parameter	char * * name	182:80:5635:5645	1890885	2	True				
ANR	1891114	ParameterType	char * *		1890885	0					
ANR	1891115	Identifier	name		1890885	1					
ANR	1891116	Parameter	SXE_ITER * type	182:93:5648:5661	1890885	3	True				
ANR	1891117	ParameterType	SXE_ITER *		1890885	0					
ANR	1891118	Identifier	type		1890885	1					
ANR	1891119	CFGEntryNode	ENTRY		1890885		True				
ANR	1891120	CFGExitNode	EXIT		1890885		True				
ANR	1891121	Symbol	SXE_ITER_ATTRLIST		1890885						
ANR	1891122	Symbol	SXE_ITER_CHILD		1890885						
ANR	1891123	Symbol	XML_ELEMENT_NODE		1890885						
ANR	1891124	Symbol	* sxe		1890885						
ANR	1891125	Symbol	type		1890885						
ANR	1891126	Symbol	match_ns		1890885						
ANR	1891127	Symbol	SXE_ITER_ELEMENT		1890885						
ANR	1891128	Symbol	retnode		1890885						
ANR	1891129	Symbol	* type		1890885						
ANR	1891130	Symbol	* node		1890885						
ANR	1891131	Symbol	orgnode		1890885						
ANR	1891132	Symbol	orgtype		1890885						
ANR	1891133	Symbol	* name		1890885						
ANR	1891134	Symbol	sxe		1890885						
ANR	1891135	Symbol	php_sxe_get_first_node		1890885						
ANR	1891136	Symbol	NULL		1890885						
ANR	1891137	Symbol	xmlStrcmp		1890885						
ANR	1891138	Symbol	orgnode -> children		1890885						
ANR	1891139	Symbol	sxe -> iter . isprefix		1890885						
ANR	1891140	Symbol	* orgnode		1890885						
ANR	1891141	Symbol	node -> next		1890885						
ANR	1891142	Symbol	sxe -> iter . type		1890885						
ANR	1891143	Symbol	sxe -> iter		1890885						
ANR	1891144	Symbol	sxe -> iter . name		1890885						
ANR	1891145	Symbol	node		1890885						
ANR	1891146	Symbol	SXE_ITER_NONE		1890885						
ANR	1891147	Symbol	node -> name		1890885						
ANR	1891148	Symbol	sxe -> iter . nsprefix		1890885						
ANR	1891149	Symbol	sxe_find_element_by_name		1890885						
ANR	1891150	Symbol	name		1890885						
ANR	1891151	Symbol	node -> type		1890885						
ANR	1891152	Function	sxe_prop_dim_read	235:0:6640:10778							
ANR	1891153	FunctionDef	"sxe_prop_dim_read (zval * object , zval * member , zend_bool elements , zend_bool attribs , int type , zval * rv)"		1891152	0					
ANR	1891154	CompoundStatement		236:0:6758:10778	1891152	0					
ANR	1891155	IdentifierDeclStatement	php_sxe_object * sxe ;	237:1:6761:6780	1891152	0	True				
ANR	1891156	IdentifierDecl	* sxe		1891152	0					
ANR	1891157	IdentifierDeclType	php_sxe_object *		1891152	0					
ANR	1891158	Identifier	sxe		1891152	1					
ANR	1891159	IdentifierDeclStatement	char * name ;	238:1:6783:6803	1891152	1	True				
ANR	1891160	IdentifierDecl	* name		1891152	0					
ANR	1891161	IdentifierDeclType	char *		1891152	0					
ANR	1891162	Identifier	name		1891152	1					
ANR	1891163	IdentifierDeclStatement	xmlNodePtr node ;	239:1:6806:6826	1891152	2	True				
ANR	1891164	IdentifierDecl	node		1891152	0					
ANR	1891165	IdentifierDeclType	xmlNodePtr		1891152	0					
ANR	1891166	Identifier	node		1891152	1					
ANR	1891167	IdentifierDeclStatement	xmlAttrPtr attr = NULL ;	240:1:6829:6856	1891152	3	True				
ANR	1891168	IdentifierDecl	attr = NULL		1891152	0					
ANR	1891169	IdentifierDeclType	xmlAttrPtr		1891152	0					
ANR	1891170	Identifier	attr		1891152	1					
ANR	1891171	AssignmentExpression	attr = NULL		1891152	2		=			
ANR	1891172	Identifier	NULL		1891152	0					
ANR	1891173	Identifier	NULL		1891152	1					
ANR	1891174	IdentifierDeclStatement	zval tmp_zv ;	241:1:6859:6881	1891152	4	True				
ANR	1891175	IdentifierDecl	tmp_zv		1891152	0					
ANR	1891176	IdentifierDeclType	zval		1891152	0					
ANR	1891177	Identifier	tmp_zv		1891152	1					
ANR	1891178	IdentifierDeclStatement	int nodendx = 0 ;	242:1:6884:6911	1891152	5	True				
ANR	1891179	IdentifierDecl	nodendx = 0		1891152	0					
ANR	1891180	IdentifierDeclType	int		1891152	0					
ANR	1891181	Identifier	nodendx		1891152	1					
ANR	1891182	AssignmentExpression	nodendx = 0		1891152	2		=			
ANR	1891183	Identifier	nodendx		1891152	0					
ANR	1891184	PrimaryExpression	0		1891152	1					
ANR	1891185	IdentifierDeclStatement	int test = 0 ;	243:1:6914:6938	1891152	6	True				
ANR	1891186	IdentifierDecl	test = 0		1891152	0					
ANR	1891187	IdentifierDeclType	int		1891152	0					
ANR	1891188	Identifier	test		1891152	1					
ANR	1891189	AssignmentExpression	test = 0		1891152	2		=			
ANR	1891190	Identifier	test		1891152	0					
ANR	1891191	PrimaryExpression	0		1891152	1					
ANR	1891192	ExpressionStatement	sxe = Z_SXEOBJ_P ( object )	245:1:6942:6966	1891152	7	True				
ANR	1891193	AssignmentExpression	sxe = Z_SXEOBJ_P ( object )		1891152	0		=			
ANR	1891194	Identifier	sxe		1891152	0					
ANR	1891195	CallExpression	Z_SXEOBJ_P ( object )		1891152	1					
ANR	1891196	Callee	Z_SXEOBJ_P		1891152	0					
ANR	1891197	Identifier	Z_SXEOBJ_P		1891152	0					
ANR	1891198	ArgumentList	object		1891152	1					
ANR	1891199	Argument	object		1891152	0					
ANR	1891200	Identifier	object		1891152	0					
ANR	1891201	IfStatement	if ( ! member || Z_TYPE_P ( member ) == IS_LONG )		1891152	8					
ANR	1891202	Condition	! member || Z_TYPE_P ( member ) == IS_LONG	247:5:6974:7011	1891152	0	True				
ANR	1891203	OrExpression	! member || Z_TYPE_P ( member ) == IS_LONG		1891152	0		||			
ANR	1891204	UnaryOperationExpression	! member		1891152	0					
ANR	1891205	UnaryOperator	!		1891152	0					
ANR	1891206	Identifier	member		1891152	1					
ANR	1891207	EqualityExpression	Z_TYPE_P ( member ) == IS_LONG		1891152	1		==			
ANR	1891208	CallExpression	Z_TYPE_P ( member )		1891152	0					
ANR	1891209	Callee	Z_TYPE_P		1891152	0					
ANR	1891210	Identifier	Z_TYPE_P		1891152	0					
ANR	1891211	ArgumentList	member		1891152	1					
ANR	1891212	Argument	member		1891152	0					
ANR	1891213	Identifier	member		1891152	0					
ANR	1891214	Identifier	IS_LONG		1891152	1					
ANR	1891215	CompoundStatement		12:45:255:255	1891152	1					
ANR	1891216	IfStatement	if ( sxe -> iter . type != SXE_ITER_ATTRLIST )		1891152	0					
ANR	1891217	Condition	sxe -> iter . type != SXE_ITER_ATTRLIST	248:6:7022:7056	1891152	0	True				
ANR	1891218	EqualityExpression	sxe -> iter . type != SXE_ITER_ATTRLIST		1891152	0		!=			
ANR	1891219	MemberAccess	sxe -> iter . type		1891152	0					
ANR	1891220	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891221	Identifier	sxe		1891152	0					
ANR	1891222	Identifier	iter		1891152	1					
ANR	1891223	Identifier	type		1891152	1					
ANR	1891224	Identifier	SXE_ITER_ATTRLIST		1891152	1					
ANR	1891225	CompoundStatement		13:43:300:300	1891152	1					
ANR	1891226	ExpressionStatement	attribs = 0	249:3:7064:7075	1891152	0	True				
ANR	1891227	AssignmentExpression	attribs = 0		1891152	0		=			
ANR	1891228	Identifier	attribs		1891152	0					
ANR	1891229	PrimaryExpression	0		1891152	1					
ANR	1891230	ExpressionStatement	elements = 1	250:3:7080:7092	1891152	1	True				
ANR	1891231	AssignmentExpression	elements = 1		1891152	0		=			
ANR	1891232	Identifier	elements		1891152	0					
ANR	1891233	PrimaryExpression	1		1891152	1					
ANR	1891234	ElseStatement	else		1891152	0					
ANR	1891235	IfStatement	if ( ! member )		1891152	0					
ANR	1891236	Condition	! member	251:13:7107:7113	1891152	0	True				
ANR	1891237	UnaryOperationExpression	! member		1891152	0					
ANR	1891238	UnaryOperator	!		1891152	0					
ANR	1891239	Identifier	member		1891152	1					
ANR	1891240	CompoundStatement		16:22:357:357	1891152	1					
ANR	1891241	ExpressionStatement	"php_error_docref ( NULL , E_ERROR , ""Cannot create unnamed attribute"" )"	253:3:7183:7249	1891152	0	True				
ANR	1891242	CallExpression	"php_error_docref ( NULL , E_ERROR , ""Cannot create unnamed attribute"" )"		1891152	0					
ANR	1891243	Callee	php_error_docref		1891152	0					
ANR	1891244	Identifier	php_error_docref		1891152	0					
ANR	1891245	ArgumentList	NULL		1891152	1					
ANR	1891246	Argument	NULL		1891152	0					
ANR	1891247	Identifier	NULL		1891152	0					
ANR	1891248	Argument	E_ERROR		1891152	1					
ANR	1891249	Identifier	E_ERROR		1891152	0					
ANR	1891250	Argument	"""Cannot create unnamed attribute"""		1891152	2					
ANR	1891251	PrimaryExpression	"""Cannot create unnamed attribute"""		1891152	0					
ANR	1891252	ReturnStatement	return NULL ;	254:3:7254:7265	1891152	1	True				
ANR	1891253	Identifier	NULL		1891152	0					
ANR	1891254	ExpressionStatement	name = NULL	256:2:7273:7284	1891152	1	True				
ANR	1891255	AssignmentExpression	name = NULL		1891152	0		=			
ANR	1891256	Identifier	name		1891152	0					
ANR	1891257	Identifier	NULL		1891152	1					
ANR	1891258	ElseStatement	else		1891152	0					
ANR	1891259	CompoundStatement		22:8:535:535	1891152	0					
ANR	1891260	IfStatement	if ( Z_TYPE_P ( member ) != IS_STRING )		1891152	0					
ANR	1891261	Condition	Z_TYPE_P ( member ) != IS_STRING	258:6:7302:7330	1891152	0	True				
ANR	1891262	EqualityExpression	Z_TYPE_P ( member ) != IS_STRING		1891152	0		!=			
ANR	1891263	CallExpression	Z_TYPE_P ( member )		1891152	0					
ANR	1891264	Callee	Z_TYPE_P		1891152	0					
ANR	1891265	Identifier	Z_TYPE_P		1891152	0					
ANR	1891266	ArgumentList	member		1891152	1					
ANR	1891267	Argument	member		1891152	0					
ANR	1891268	Identifier	member		1891152	0					
ANR	1891269	Identifier	IS_STRING		1891152	1					
ANR	1891270	CompoundStatement		23:37:574:574	1891152	1					
ANR	1891271	ExpressionStatement	"ZVAL_STR ( & tmp_zv , zval_get_string ( member ) )"	259:3:7338:7380	1891152	0	True				
ANR	1891272	CallExpression	"ZVAL_STR ( & tmp_zv , zval_get_string ( member ) )"		1891152	0					
ANR	1891273	Callee	ZVAL_STR		1891152	0					
ANR	1891274	Identifier	ZVAL_STR		1891152	0					
ANR	1891275	ArgumentList	& tmp_zv		1891152	1					
ANR	1891276	Argument	& tmp_zv		1891152	0					
ANR	1891277	UnaryOperationExpression	& tmp_zv		1891152	0					
ANR	1891278	UnaryOperator	&		1891152	0					
ANR	1891279	Identifier	tmp_zv		1891152	1					
ANR	1891280	Argument	zval_get_string ( member )		1891152	1					
ANR	1891281	CallExpression	zval_get_string ( member )		1891152	0					
ANR	1891282	Callee	zval_get_string		1891152	0					
ANR	1891283	Identifier	zval_get_string		1891152	0					
ANR	1891284	ArgumentList	member		1891152	1					
ANR	1891285	Argument	member		1891152	0					
ANR	1891286	Identifier	member		1891152	0					
ANR	1891287	ExpressionStatement	member = & tmp_zv	260:3:7385:7401	1891152	1	True				
ANR	1891288	AssignmentExpression	member = & tmp_zv		1891152	0		=			
ANR	1891289	Identifier	member		1891152	0					
ANR	1891290	UnaryOperationExpression	& tmp_zv		1891152	1					
ANR	1891291	UnaryOperator	&		1891152	0					
ANR	1891292	Identifier	tmp_zv		1891152	1					
ANR	1891293	ExpressionStatement	name = Z_STRVAL_P ( member )	262:2:7409:7434	1891152	1	True				
ANR	1891294	AssignmentExpression	name = Z_STRVAL_P ( member )		1891152	0		=			
ANR	1891295	Identifier	name		1891152	0					
ANR	1891296	CallExpression	Z_STRVAL_P ( member )		1891152	1					
ANR	1891297	Callee	Z_STRVAL_P		1891152	0					
ANR	1891298	Identifier	Z_STRVAL_P		1891152	0					
ANR	1891299	ArgumentList	member		1891152	1					
ANR	1891300	Argument	member		1891152	0					
ANR	1891301	Identifier	member		1891152	0					
ANR	1891302	ExpressionStatement	"GET_NODE ( sxe , node )"	265:1:7441:7460	1891152	9	True				
ANR	1891303	CallExpression	"GET_NODE ( sxe , node )"		1891152	0					
ANR	1891304	Callee	GET_NODE		1891152	0					
ANR	1891305	Identifier	GET_NODE		1891152	0					
ANR	1891306	ArgumentList	sxe		1891152	1					
ANR	1891307	Argument	sxe		1891152	0					
ANR	1891308	Identifier	sxe		1891152	0					
ANR	1891309	Argument	node		1891152	1					
ANR	1891310	Identifier	node		1891152	0					
ANR	1891311	IfStatement	if ( sxe -> iter . type == SXE_ITER_ATTRLIST )		1891152	10					
ANR	1891312	Condition	sxe -> iter . type == SXE_ITER_ATTRLIST	267:5:7468:7502	1891152	0	True				
ANR	1891313	EqualityExpression	sxe -> iter . type == SXE_ITER_ATTRLIST		1891152	0		==			
ANR	1891314	MemberAccess	sxe -> iter . type		1891152	0					
ANR	1891315	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891316	Identifier	sxe		1891152	0					
ANR	1891317	Identifier	iter		1891152	1					
ANR	1891318	Identifier	type		1891152	1					
ANR	1891319	Identifier	SXE_ITER_ATTRLIST		1891152	1					
ANR	1891320	CompoundStatement		32:42:746:746	1891152	1					
ANR	1891321	ExpressionStatement	attribs = 1	268:2:7509:7520	1891152	0	True				
ANR	1891322	AssignmentExpression	attribs = 1		1891152	0		=			
ANR	1891323	Identifier	attribs		1891152	0					
ANR	1891324	PrimaryExpression	1		1891152	1					
ANR	1891325	ExpressionStatement	elements = 0	269:2:7524:7536	1891152	1	True				
ANR	1891326	AssignmentExpression	elements = 0		1891152	0		=			
ANR	1891327	Identifier	elements		1891152	0					
ANR	1891328	PrimaryExpression	0		1891152	1					
ANR	1891329	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , node )"	270:2:7540:7580	1891152	2	True				
ANR	1891330	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , node )"		1891152	0		=			
ANR	1891331	Identifier	node		1891152	0					
ANR	1891332	CallExpression	"php_sxe_get_first_node ( sxe , node )"		1891152	1					
ANR	1891333	Callee	php_sxe_get_first_node		1891152	0					
ANR	1891334	Identifier	php_sxe_get_first_node		1891152	0					
ANR	1891335	ArgumentList	sxe		1891152	1					
ANR	1891336	Argument	sxe		1891152	0					
ANR	1891337	Identifier	sxe		1891152	0					
ANR	1891338	Argument	node		1891152	1					
ANR	1891339	Identifier	node		1891152	0					
ANR	1891340	ExpressionStatement	attr = ( xmlAttrPtr ) node	271:2:7584:7607	1891152	3	True				
ANR	1891341	AssignmentExpression	attr = ( xmlAttrPtr ) node		1891152	0		=			
ANR	1891342	Identifier	attr		1891152	0					
ANR	1891343	CastExpression	( xmlAttrPtr ) node		1891152	1					
ANR	1891344	CastTarget	xmlAttrPtr		1891152	0					
ANR	1891345	Identifier	node		1891152	1					
ANR	1891346	ExpressionStatement	test = sxe -> iter . name != NULL	272:2:7611:7640	1891152	4	True				
ANR	1891347	AssignmentExpression	test = sxe -> iter . name != NULL		1891152	0		=			
ANR	1891348	Identifier	test		1891152	0					
ANR	1891349	EqualityExpression	sxe -> iter . name != NULL		1891152	1		!=			
ANR	1891350	MemberAccess	sxe -> iter . name		1891152	0					
ANR	1891351	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891352	Identifier	sxe		1891152	0					
ANR	1891353	Identifier	iter		1891152	1					
ANR	1891354	Identifier	name		1891152	1					
ANR	1891355	Identifier	NULL		1891152	1					
ANR	1891356	ElseStatement	else		1891152	0					
ANR	1891357	IfStatement	if ( sxe -> iter . type != SXE_ITER_CHILD )		1891152	0					
ANR	1891358	Condition	sxe -> iter . type != SXE_ITER_CHILD	273:12:7654:7685	1891152	0	True				
ANR	1891359	EqualityExpression	sxe -> iter . type != SXE_ITER_CHILD		1891152	0		!=			
ANR	1891360	MemberAccess	sxe -> iter . type		1891152	0					
ANR	1891361	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891362	Identifier	sxe		1891152	0					
ANR	1891363	Identifier	iter		1891152	1					
ANR	1891364	Identifier	type		1891152	1					
ANR	1891365	Identifier	SXE_ITER_CHILD		1891152	1					
ANR	1891366	CompoundStatement		38:46:929:929	1891152	1					
ANR	1891367	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , node )"	274:2:7692:7732	1891152	0	True				
ANR	1891368	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , node )"		1891152	0		=			
ANR	1891369	Identifier	node		1891152	0					
ANR	1891370	CallExpression	"php_sxe_get_first_node ( sxe , node )"		1891152	1					
ANR	1891371	Callee	php_sxe_get_first_node		1891152	0					
ANR	1891372	Identifier	php_sxe_get_first_node		1891152	0					
ANR	1891373	ArgumentList	sxe		1891152	1					
ANR	1891374	Argument	sxe		1891152	0					
ANR	1891375	Identifier	sxe		1891152	0					
ANR	1891376	Argument	node		1891152	1					
ANR	1891377	Identifier	node		1891152	0					
ANR	1891378	ExpressionStatement	attr = node ? node -> properties : NULL	275:2:7736:7773	1891152	1	True				
ANR	1891379	AssignmentExpression	attr = node ? node -> properties : NULL		1891152	0		=			
ANR	1891380	Identifier	attr		1891152	0					
ANR	1891381	ConditionalExpression	node ? node -> properties : NULL		1891152	1					
ANR	1891382	Condition	node		1891152	0					
ANR	1891383	Identifier	node		1891152	0					
ANR	1891384	PtrMemberAccess	node -> properties		1891152	1					
ANR	1891385	Identifier	node		1891152	0					
ANR	1891386	Identifier	properties		1891152	1					
ANR	1891387	Identifier	NULL		1891152	2					
ANR	1891388	ExpressionStatement	test = 0	276:2:7777:7785	1891152	2	True				
ANR	1891389	AssignmentExpression	test = 0		1891152	0		=			
ANR	1891390	Identifier	test		1891152	0					
ANR	1891391	PrimaryExpression	0		1891152	1					
ANR	1891392	IfStatement	if ( ! member && node && node -> parent && node -> parent -> type == XML_DOCUMENT_NODE )		1891152	3					
ANR	1891393	Condition	! member && node && node -> parent && node -> parent -> type == XML_DOCUMENT_NODE	277:6:7793:7872	1891152	0	True				
ANR	1891394	AndExpression	! member && node && node -> parent && node -> parent -> type == XML_DOCUMENT_NODE		1891152	0		&&			
ANR	1891395	UnaryOperationExpression	! member		1891152	0					
ANR	1891396	UnaryOperator	!		1891152	0					
ANR	1891397	Identifier	member		1891152	1					
ANR	1891398	AndExpression	node && node -> parent && node -> parent -> type == XML_DOCUMENT_NODE		1891152	1		&&			
ANR	1891399	Identifier	node		1891152	0					
ANR	1891400	AndExpression	node -> parent && node -> parent -> type == XML_DOCUMENT_NODE		1891152	1		&&			
ANR	1891401	PtrMemberAccess	node -> parent		1891152	0					
ANR	1891402	Identifier	node		1891152	0					
ANR	1891403	Identifier	parent		1891152	1					
ANR	1891404	EqualityExpression	node -> parent -> type == XML_DOCUMENT_NODE		1891152	1		==			
ANR	1891405	PtrMemberAccess	node -> parent -> type		1891152	0					
ANR	1891406	PtrMemberAccess	node -> parent		1891152	0					
ANR	1891407	Identifier	node		1891152	0					
ANR	1891408	Identifier	parent		1891152	1					
ANR	1891409	Identifier	type		1891152	1					
ANR	1891410	Identifier	XML_DOCUMENT_NODE		1891152	1					
ANR	1891411	CompoundStatement		43:47:1116:1116	1891152	1					
ANR	1891412	ExpressionStatement	"php_error_docref ( NULL , E_ERROR , ""Cannot create unnamed attribute"" )"	280:3:7942:8008	1891152	0	True				
ANR	1891413	CallExpression	"php_error_docref ( NULL , E_ERROR , ""Cannot create unnamed attribute"" )"		1891152	0					
ANR	1891414	Callee	php_error_docref		1891152	0					
ANR	1891415	Identifier	php_error_docref		1891152	0					
ANR	1891416	ArgumentList	NULL		1891152	1					
ANR	1891417	Argument	NULL		1891152	0					
ANR	1891418	Identifier	NULL		1891152	0					
ANR	1891419	Argument	E_ERROR		1891152	1					
ANR	1891420	Identifier	E_ERROR		1891152	0					
ANR	1891421	Argument	"""Cannot create unnamed attribute"""		1891152	2					
ANR	1891422	PrimaryExpression	"""Cannot create unnamed attribute"""		1891152	0					
ANR	1891423	ReturnStatement	return NULL ;	281:3:8013:8024	1891152	1	True				
ANR	1891424	Identifier	NULL		1891152	0					
ANR	1891425	ExpressionStatement	ZVAL_UNDEF ( rv )	285:1:8035:8049	1891152	11	True				
ANR	1891426	CallExpression	ZVAL_UNDEF ( rv )		1891152	0					
ANR	1891427	Callee	ZVAL_UNDEF		1891152	0					
ANR	1891428	Identifier	ZVAL_UNDEF		1891152	0					
ANR	1891429	ArgumentList	rv		1891152	1					
ANR	1891430	Argument	rv		1891152	0					
ANR	1891431	Identifier	rv		1891152	0					
ANR	1891432	IfStatement	if ( node )		1891152	12					
ANR	1891433	Condition	node	287:5:8057:8060	1891152	0	True				
ANR	1891434	Identifier	node		1891152	0					
ANR	1891435	CompoundStatement		52:11:1304:1304	1891152	1					
ANR	1891436	IfStatement	if ( attribs )		1891152	0					
ANR	1891437	Condition	attribs	288:6:8071:8077	1891152	0	True				
ANR	1891438	Identifier	attribs		1891152	0					
ANR	1891439	CompoundStatement		53:15:1321:1321	1891152	1					
ANR	1891440	IfStatement	if ( Z_TYPE_P ( member ) != IS_LONG || sxe -> iter . type == SXE_ITER_ATTRLIST )		1891152	0					
ANR	1891441	Condition	Z_TYPE_P ( member ) != IS_LONG || sxe -> iter . type == SXE_ITER_ATTRLIST	289:7:8089:8154	1891152	0	True				
ANR	1891442	OrExpression	Z_TYPE_P ( member ) != IS_LONG || sxe -> iter . type == SXE_ITER_ATTRLIST		1891152	0		||			
ANR	1891443	EqualityExpression	Z_TYPE_P ( member ) != IS_LONG		1891152	0		!=			
ANR	1891444	CallExpression	Z_TYPE_P ( member )		1891152	0					
ANR	1891445	Callee	Z_TYPE_P		1891152	0					
ANR	1891446	Identifier	Z_TYPE_P		1891152	0					
ANR	1891447	ArgumentList	member		1891152	1					
ANR	1891448	Argument	member		1891152	0					
ANR	1891449	Identifier	member		1891152	0					
ANR	1891450	Identifier	IS_LONG		1891152	1					
ANR	1891451	EqualityExpression	sxe -> iter . type == SXE_ITER_ATTRLIST		1891152	1		==			
ANR	1891452	MemberAccess	sxe -> iter . type		1891152	0					
ANR	1891453	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891454	Identifier	sxe		1891152	0					
ANR	1891455	Identifier	iter		1891152	1					
ANR	1891456	Identifier	type		1891152	1					
ANR	1891457	Identifier	SXE_ITER_ATTRLIST		1891152	1					
ANR	1891458	CompoundStatement		54:75:1398:1398	1891152	1					
ANR	1891459	IfStatement	if ( Z_TYPE_P ( member ) == IS_LONG )		1891152	0					
ANR	1891460	Condition	Z_TYPE_P ( member ) == IS_LONG	290:8:8167:8193	1891152	0	True				
ANR	1891461	EqualityExpression	Z_TYPE_P ( member ) == IS_LONG		1891152	0		==			
ANR	1891462	CallExpression	Z_TYPE_P ( member )		1891152	0					
ANR	1891463	Callee	Z_TYPE_P		1891152	0					
ANR	1891464	Identifier	Z_TYPE_P		1891152	0					
ANR	1891465	ArgumentList	member		1891152	1					
ANR	1891466	Argument	member		1891152	0					
ANR	1891467	Identifier	member		1891152	0					
ANR	1891468	Identifier	IS_LONG		1891152	1					
ANR	1891469	CompoundStatement		55:37:1437:1437	1891152	1					
ANR	1891470	WhileStatement	while ( attr && nodendx <= Z_LVAL_P ( member ) )		1891152	0					
ANR	1891471	Condition	attr && nodendx <= Z_LVAL_P ( member )	291:12:8210:8244	1891152	0	True				
ANR	1891472	AndExpression	attr && nodendx <= Z_LVAL_P ( member )		1891152	0		&&			
ANR	1891473	Identifier	attr		1891152	0					
ANR	1891474	RelationalExpression	nodendx <= Z_LVAL_P ( member )		1891152	1		<=			
ANR	1891475	Identifier	nodendx		1891152	0					
ANR	1891476	CallExpression	Z_LVAL_P ( member )		1891152	1					
ANR	1891477	Callee	Z_LVAL_P		1891152	0					
ANR	1891478	Identifier	Z_LVAL_P		1891152	0					
ANR	1891479	ArgumentList	member		1891152	1					
ANR	1891480	Argument	member		1891152	0					
ANR	1891481	Identifier	member		1891152	0					
ANR	1891482	CompoundStatement		56:49:1488:1488	1891152	1					
ANR	1891483	IfStatement	"if ( ( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix ) )"		1891152	0					
ANR	1891484	Condition	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	292:10:8259:8383	1891152	0	True				
ANR	1891485	AndExpression	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1891152	0		&&			
ANR	1891486	OrExpression	"! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1891152	0		||			
ANR	1891487	UnaryOperationExpression	! test		1891152	0					
ANR	1891488	UnaryOperator	!		1891152	0					
ANR	1891489	Identifier	test		1891152	1					
ANR	1891490	UnaryOperationExpression	"! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1891152	1					
ANR	1891491	UnaryOperator	!		1891152	0					
ANR	1891492	CallExpression	"xmlStrcmp ( attr -> name , sxe -> iter . name )"		1891152	1					
ANR	1891493	Callee	xmlStrcmp		1891152	0					
ANR	1891494	Identifier	xmlStrcmp		1891152	0					
ANR	1891495	ArgumentList	attr -> name		1891152	1					
ANR	1891496	Argument	attr -> name		1891152	0					
ANR	1891497	PtrMemberAccess	attr -> name		1891152	0					
ANR	1891498	Identifier	attr		1891152	0					
ANR	1891499	Identifier	name		1891152	1					
ANR	1891500	Argument	sxe -> iter . name		1891152	1					
ANR	1891501	MemberAccess	sxe -> iter . name		1891152	0					
ANR	1891502	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891503	Identifier	sxe		1891152	0					
ANR	1891504	Identifier	iter		1891152	1					
ANR	1891505	Identifier	name		1891152	1					
ANR	1891506	CallExpression	"match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1891152	1					
ANR	1891507	Callee	match_ns		1891152	0					
ANR	1891508	Identifier	match_ns		1891152	0					
ANR	1891509	ArgumentList	sxe		1891152	1					
ANR	1891510	Argument	sxe		1891152	0					
ANR	1891511	Identifier	sxe		1891152	0					
ANR	1891512	Argument	( xmlNodePtr ) attr		1891152	1					
ANR	1891513	CastExpression	( xmlNodePtr ) attr		1891152	0					
ANR	1891514	CastTarget	xmlNodePtr		1891152	0					
ANR	1891515	Identifier	attr		1891152	1					
ANR	1891516	Argument	sxe -> iter . nsprefix		1891152	2					
ANR	1891517	MemberAccess	sxe -> iter . nsprefix		1891152	0					
ANR	1891518	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891519	Identifier	sxe		1891152	0					
ANR	1891520	Identifier	iter		1891152	1					
ANR	1891521	Identifier	nsprefix		1891152	1					
ANR	1891522	Argument	sxe -> iter . isprefix		1891152	3					
ANR	1891523	MemberAccess	sxe -> iter . isprefix		1891152	0					
ANR	1891524	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891525	Identifier	sxe		1891152	0					
ANR	1891526	Identifier	iter		1891152	1					
ANR	1891527	Identifier	isprefix		1891152	1					
ANR	1891528	CompoundStatement		57:137:1627:1627	1891152	1					
ANR	1891529	IfStatement	if ( nodendx == Z_LVAL_P ( member ) )		1891152	0					
ANR	1891530	Condition	nodendx == Z_LVAL_P ( member )	293:11:8399:8425	1891152	0	True				
ANR	1891531	EqualityExpression	nodendx == Z_LVAL_P ( member )		1891152	0		==			
ANR	1891532	Identifier	nodendx		1891152	0					
ANR	1891533	CallExpression	Z_LVAL_P ( member )		1891152	1					
ANR	1891534	Callee	Z_LVAL_P		1891152	0					
ANR	1891535	Identifier	Z_LVAL_P		1891152	0					
ANR	1891536	ArgumentList	member		1891152	1					
ANR	1891537	Argument	member		1891152	0					
ANR	1891538	Identifier	member		1891152	0					
ANR	1891539	CompoundStatement		58:40:1669:1669	1891152	1					
ANR	1891540	ExpressionStatement	"_node_as_zval ( sxe , ( xmlNodePtr ) attr , rv , SXE_ITER_NONE , NULL , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	294:8:8438:8540	1891152	0	True				
ANR	1891541	CallExpression	"_node_as_zval ( sxe , ( xmlNodePtr ) attr , rv , SXE_ITER_NONE , NULL , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1891152	0					
ANR	1891542	Callee	_node_as_zval		1891152	0					
ANR	1891543	Identifier	_node_as_zval		1891152	0					
ANR	1891544	ArgumentList	sxe		1891152	1					
ANR	1891545	Argument	sxe		1891152	0					
ANR	1891546	Identifier	sxe		1891152	0					
ANR	1891547	Argument	( xmlNodePtr ) attr		1891152	1					
ANR	1891548	CastExpression	( xmlNodePtr ) attr		1891152	0					
ANR	1891549	CastTarget	xmlNodePtr		1891152	0					
ANR	1891550	Identifier	attr		1891152	1					
ANR	1891551	Argument	rv		1891152	2					
ANR	1891552	Identifier	rv		1891152	0					
ANR	1891553	Argument	SXE_ITER_NONE		1891152	3					
ANR	1891554	Identifier	SXE_ITER_NONE		1891152	0					
ANR	1891555	Argument	NULL		1891152	4					
ANR	1891556	Identifier	NULL		1891152	0					
ANR	1891557	Argument	sxe -> iter . nsprefix		1891152	5					
ANR	1891558	MemberAccess	sxe -> iter . nsprefix		1891152	0					
ANR	1891559	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891560	Identifier	sxe		1891152	0					
ANR	1891561	Identifier	iter		1891152	1					
ANR	1891562	Identifier	nsprefix		1891152	1					
ANR	1891563	Argument	sxe -> iter . isprefix		1891152	6					
ANR	1891564	MemberAccess	sxe -> iter . isprefix		1891152	0					
ANR	1891565	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891566	Identifier	sxe		1891152	0					
ANR	1891567	Identifier	iter		1891152	1					
ANR	1891568	Identifier	isprefix		1891152	1					
ANR	1891569	BreakStatement	break ;	295:8:8550:8555	1891152	1	True				
ANR	1891570	ExpressionStatement	nodendx ++	297:7:8573:8582	1891152	1	True				
ANR	1891571	PostIncDecOperationExpression	nodendx ++		1891152	0					
ANR	1891572	Identifier	nodendx		1891152	0					
ANR	1891573	IncDec	++		1891152	1					
ANR	1891574	ExpressionStatement	attr = attr -> next	299:6:8598:8615	1891152	1	True				
ANR	1891575	AssignmentExpression	attr = attr -> next		1891152	0		=			
ANR	1891576	Identifier	attr		1891152	0					
ANR	1891577	PtrMemberAccess	attr -> next		1891152	1					
ANR	1891578	Identifier	attr		1891152	0					
ANR	1891579	Identifier	next		1891152	1					
ANR	1891580	ElseStatement	else		1891152	0					
ANR	1891581	CompoundStatement		66:11:1876:1876	1891152	0					
ANR	1891582	WhileStatement	while ( attr )		1891152	0					
ANR	1891583	Condition	attr	302:12:8649:8652	1891152	0	True				
ANR	1891584	Identifier	attr		1891152	0					
ANR	1891585	CompoundStatement		67:18:1896:1896	1891152	1					
ANR	1891586	IfStatement	"if ( ( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && ! xmlStrcmp ( attr -> name , ( xmlChar * ) name ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix ) )"		1891152	0					
ANR	1891587	Condition	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && ! xmlStrcmp ( attr -> name , ( xmlChar * ) name ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	303:10:8667:8834	1891152	0	True				
ANR	1891588	AndExpression	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && ! xmlStrcmp ( attr -> name , ( xmlChar * ) name ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1891152	0		&&			
ANR	1891589	OrExpression	"! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1891152	0		||			
ANR	1891590	UnaryOperationExpression	! test		1891152	0					
ANR	1891591	UnaryOperator	!		1891152	0					
ANR	1891592	Identifier	test		1891152	1					
ANR	1891593	UnaryOperationExpression	"! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1891152	1					
ANR	1891594	UnaryOperator	!		1891152	0					
ANR	1891595	CallExpression	"xmlStrcmp ( attr -> name , sxe -> iter . name )"		1891152	1					
ANR	1891596	Callee	xmlStrcmp		1891152	0					
ANR	1891597	Identifier	xmlStrcmp		1891152	0					
ANR	1891598	ArgumentList	attr -> name		1891152	1					
ANR	1891599	Argument	attr -> name		1891152	0					
ANR	1891600	PtrMemberAccess	attr -> name		1891152	0					
ANR	1891601	Identifier	attr		1891152	0					
ANR	1891602	Identifier	name		1891152	1					
ANR	1891603	Argument	sxe -> iter . name		1891152	1					
ANR	1891604	MemberAccess	sxe -> iter . name		1891152	0					
ANR	1891605	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891606	Identifier	sxe		1891152	0					
ANR	1891607	Identifier	iter		1891152	1					
ANR	1891608	Identifier	name		1891152	1					
ANR	1891609	AndExpression	"! xmlStrcmp ( attr -> name , ( xmlChar * ) name ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1891152	1		&&			
ANR	1891610	UnaryOperationExpression	"! xmlStrcmp ( attr -> name , ( xmlChar * ) name )"		1891152	0					
ANR	1891611	UnaryOperator	!		1891152	0					
ANR	1891612	CallExpression	"xmlStrcmp ( attr -> name , ( xmlChar * ) name )"		1891152	1					
ANR	1891613	Callee	xmlStrcmp		1891152	0					
ANR	1891614	Identifier	xmlStrcmp		1891152	0					
ANR	1891615	ArgumentList	attr -> name		1891152	1					
ANR	1891616	Argument	attr -> name		1891152	0					
ANR	1891617	PtrMemberAccess	attr -> name		1891152	0					
ANR	1891618	Identifier	attr		1891152	0					
ANR	1891619	Identifier	name		1891152	1					
ANR	1891620	Argument	( xmlChar * ) name		1891152	1					
ANR	1891621	CastExpression	( xmlChar * ) name		1891152	0					
ANR	1891622	CastTarget	xmlChar *		1891152	0					
ANR	1891623	Identifier	name		1891152	1					
ANR	1891624	CallExpression	"match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1891152	1					
ANR	1891625	Callee	match_ns		1891152	0					
ANR	1891626	Identifier	match_ns		1891152	0					
ANR	1891627	ArgumentList	sxe		1891152	1					
ANR	1891628	Argument	sxe		1891152	0					
ANR	1891629	Identifier	sxe		1891152	0					
ANR	1891630	Argument	( xmlNodePtr ) attr		1891152	1					
ANR	1891631	CastExpression	( xmlNodePtr ) attr		1891152	0					
ANR	1891632	CastTarget	xmlNodePtr		1891152	0					
ANR	1891633	Identifier	attr		1891152	1					
ANR	1891634	Argument	sxe -> iter . nsprefix		1891152	2					
ANR	1891635	MemberAccess	sxe -> iter . nsprefix		1891152	0					
ANR	1891636	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891637	Identifier	sxe		1891152	0					
ANR	1891638	Identifier	iter		1891152	1					
ANR	1891639	Identifier	nsprefix		1891152	1					
ANR	1891640	Argument	sxe -> iter . isprefix		1891152	3					
ANR	1891641	MemberAccess	sxe -> iter . isprefix		1891152	0					
ANR	1891642	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891643	Identifier	sxe		1891152	0					
ANR	1891644	Identifier	iter		1891152	1					
ANR	1891645	Identifier	isprefix		1891152	1					
ANR	1891646	CompoundStatement		68:180:2078:2078	1891152	1					
ANR	1891647	ExpressionStatement	"_node_as_zval ( sxe , ( xmlNodePtr ) attr , rv , SXE_ITER_NONE , NULL , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	304:7:8846:8948	1891152	0	True				
ANR	1891648	CallExpression	"_node_as_zval ( sxe , ( xmlNodePtr ) attr , rv , SXE_ITER_NONE , NULL , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1891152	0					
ANR	1891649	Callee	_node_as_zval		1891152	0					
ANR	1891650	Identifier	_node_as_zval		1891152	0					
ANR	1891651	ArgumentList	sxe		1891152	1					
ANR	1891652	Argument	sxe		1891152	0					
ANR	1891653	Identifier	sxe		1891152	0					
ANR	1891654	Argument	( xmlNodePtr ) attr		1891152	1					
ANR	1891655	CastExpression	( xmlNodePtr ) attr		1891152	0					
ANR	1891656	CastTarget	xmlNodePtr		1891152	0					
ANR	1891657	Identifier	attr		1891152	1					
ANR	1891658	Argument	rv		1891152	2					
ANR	1891659	Identifier	rv		1891152	0					
ANR	1891660	Argument	SXE_ITER_NONE		1891152	3					
ANR	1891661	Identifier	SXE_ITER_NONE		1891152	0					
ANR	1891662	Argument	NULL		1891152	4					
ANR	1891663	Identifier	NULL		1891152	0					
ANR	1891664	Argument	sxe -> iter . nsprefix		1891152	5					
ANR	1891665	MemberAccess	sxe -> iter . nsprefix		1891152	0					
ANR	1891666	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891667	Identifier	sxe		1891152	0					
ANR	1891668	Identifier	iter		1891152	1					
ANR	1891669	Identifier	nsprefix		1891152	1					
ANR	1891670	Argument	sxe -> iter . isprefix		1891152	6					
ANR	1891671	MemberAccess	sxe -> iter . isprefix		1891152	0					
ANR	1891672	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891673	Identifier	sxe		1891152	0					
ANR	1891674	Identifier	iter		1891152	1					
ANR	1891675	Identifier	isprefix		1891152	1					
ANR	1891676	BreakStatement	break ;	305:7:8957:8962	1891152	1	True				
ANR	1891677	ExpressionStatement	attr = attr -> next	307:6:8978:8995	1891152	1	True				
ANR	1891678	AssignmentExpression	attr = attr -> next		1891152	0		=			
ANR	1891679	Identifier	attr		1891152	0					
ANR	1891680	PtrMemberAccess	attr -> next		1891152	1					
ANR	1891681	Identifier	attr		1891152	0					
ANR	1891682	Identifier	next		1891152	1					
ANR	1891683	IfStatement	if ( elements )		1891152	1					
ANR	1891684	Condition	elements	313:6:9026:9033	1891152	0	True				
ANR	1891685	Identifier	elements		1891152	0					
ANR	1891686	CompoundStatement		78:16:2277:2277	1891152	1					
ANR	1891687	IfStatement	if ( ! sxe -> node )		1891152	0					
ANR	1891688	Condition	! sxe -> node	314:7:9045:9054	1891152	0	True				
ANR	1891689	UnaryOperationExpression	! sxe -> node		1891152	0					
ANR	1891690	UnaryOperator	!		1891152	0					
ANR	1891691	PtrMemberAccess	sxe -> node		1891152	1					
ANR	1891692	Identifier	sxe		1891152	0					
ANR	1891693	Identifier	node		1891152	1					
ANR	1891694	CompoundStatement		79:19:2298:2298	1891152	1					
ANR	1891695	ExpressionStatement	"php_libxml_increment_node_ptr ( ( php_libxml_node_object * ) sxe , node , NULL )"	315:4:9063:9135	1891152	0	True				
ANR	1891696	CallExpression	"php_libxml_increment_node_ptr ( ( php_libxml_node_object * ) sxe , node , NULL )"		1891152	0					
ANR	1891697	Callee	php_libxml_increment_node_ptr		1891152	0					
ANR	1891698	Identifier	php_libxml_increment_node_ptr		1891152	0					
ANR	1891699	ArgumentList	( php_libxml_node_object * ) sxe		1891152	1					
ANR	1891700	Argument	( php_libxml_node_object * ) sxe		1891152	0					
ANR	1891701	CastExpression	( php_libxml_node_object * ) sxe		1891152	0					
ANR	1891702	CastTarget	php_libxml_node_object *		1891152	0					
ANR	1891703	Identifier	sxe		1891152	1					
ANR	1891704	Argument	node		1891152	1					
ANR	1891705	Identifier	node		1891152	0					
ANR	1891706	Argument	NULL		1891152	2					
ANR	1891707	Identifier	NULL		1891152	0					
ANR	1891708	IfStatement	if ( ! member || Z_TYPE_P ( member ) == IS_LONG )		1891152	1					
ANR	1891709	Condition	! member || Z_TYPE_P ( member ) == IS_LONG	317:7:9149:9186	1891152	0	True				
ANR	1891710	OrExpression	! member || Z_TYPE_P ( member ) == IS_LONG		1891152	0		||			
ANR	1891711	UnaryOperationExpression	! member		1891152	0					
ANR	1891712	UnaryOperator	!		1891152	0					
ANR	1891713	Identifier	member		1891152	1					
ANR	1891714	EqualityExpression	Z_TYPE_P ( member ) == IS_LONG		1891152	1		==			
ANR	1891715	CallExpression	Z_TYPE_P ( member )		1891152	0					
ANR	1891716	Callee	Z_TYPE_P		1891152	0					
ANR	1891717	Identifier	Z_TYPE_P		1891152	0					
ANR	1891718	ArgumentList	member		1891152	1					
ANR	1891719	Argument	member		1891152	0					
ANR	1891720	Identifier	member		1891152	0					
ANR	1891721	Identifier	IS_LONG		1891152	1					
ANR	1891722	CompoundStatement		84:4:2459:2483	1891152	1					
ANR	1891723	IdentifierDeclStatement	zend_long cnt = 0 ;	318:4:9195:9212	1891152	0	True				
ANR	1891724	IdentifierDecl	cnt = 0		1891152	0					
ANR	1891725	IdentifierDeclType	zend_long		1891152	0					
ANR	1891726	Identifier	cnt		1891152	1					
ANR	1891727	AssignmentExpression	cnt = 0		1891152	2		=			
ANR	1891728	Identifier	cnt		1891152	0					
ANR	1891729	PrimaryExpression	0		1891152	1					
ANR	1891730	IdentifierDeclStatement	xmlNodePtr mynode = node ;	319:4:9218:9242	1891152	1	True				
ANR	1891731	IdentifierDecl	mynode = node		1891152	0					
ANR	1891732	IdentifierDeclType	xmlNodePtr		1891152	0					
ANR	1891733	Identifier	mynode		1891152	1					
ANR	1891734	AssignmentExpression	mynode = node		1891152	2		=			
ANR	1891735	Identifier	node		1891152	0					
ANR	1891736	Identifier	node		1891152	1					
ANR	1891737	IfStatement	if ( sxe -> iter . type == SXE_ITER_CHILD )		1891152	2					
ANR	1891738	Condition	sxe -> iter . type == SXE_ITER_CHILD	321:8:9253:9284	1891152	0	True				
ANR	1891739	EqualityExpression	sxe -> iter . type == SXE_ITER_CHILD		1891152	0		==			
ANR	1891740	MemberAccess	sxe -> iter . type		1891152	0					
ANR	1891741	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891742	Identifier	sxe		1891152	0					
ANR	1891743	Identifier	iter		1891152	1					
ANR	1891744	Identifier	type		1891152	1					
ANR	1891745	Identifier	SXE_ITER_CHILD		1891152	1					
ANR	1891746	CompoundStatement		86:42:2528:2528	1891152	1					
ANR	1891747	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , node )"	322:5:9294:9334	1891152	0	True				
ANR	1891748	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , node )"		1891152	0		=			
ANR	1891749	Identifier	node		1891152	0					
ANR	1891750	CallExpression	"php_sxe_get_first_node ( sxe , node )"		1891152	1					
ANR	1891751	Callee	php_sxe_get_first_node		1891152	0					
ANR	1891752	Identifier	php_sxe_get_first_node		1891152	0					
ANR	1891753	ArgumentList	sxe		1891152	1					
ANR	1891754	Argument	sxe		1891152	0					
ANR	1891755	Identifier	sxe		1891152	0					
ANR	1891756	Argument	node		1891152	1					
ANR	1891757	Identifier	node		1891152	0					
ANR	1891758	IfStatement	if ( sxe -> iter . type == SXE_ITER_NONE )		1891152	3					
ANR	1891759	Condition	sxe -> iter . type == SXE_ITER_NONE	324:8:9350:9380	1891152	0	True				
ANR	1891760	EqualityExpression	sxe -> iter . type == SXE_ITER_NONE		1891152	0		==			
ANR	1891761	MemberAccess	sxe -> iter . type		1891152	0					
ANR	1891762	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891763	Identifier	sxe		1891152	0					
ANR	1891764	Identifier	iter		1891152	1					
ANR	1891765	Identifier	type		1891152	1					
ANR	1891766	Identifier	SXE_ITER_NONE		1891152	1					
ANR	1891767	CompoundStatement		89:41:2624:2624	1891152	1					
ANR	1891768	IfStatement	if ( member && Z_LVAL_P ( member ) > 0 )		1891152	0					
ANR	1891769	Condition	member && Z_LVAL_P ( member ) > 0	325:9:9394:9423	1891152	0	True				
ANR	1891770	AndExpression	member && Z_LVAL_P ( member ) > 0		1891152	0		&&			
ANR	1891771	Identifier	member		1891152	0					
ANR	1891772	RelationalExpression	Z_LVAL_P ( member ) > 0		1891152	1		>			
ANR	1891773	CallExpression	Z_LVAL_P ( member )		1891152	0					
ANR	1891774	Callee	Z_LVAL_P		1891152	0					
ANR	1891775	Identifier	Z_LVAL_P		1891152	0					
ANR	1891776	ArgumentList	member		1891152	1					
ANR	1891777	Argument	member		1891152	0					
ANR	1891778	Identifier	member		1891152	0					
ANR	1891779	PrimaryExpression	0		1891152	1					
ANR	1891780	CompoundStatement		90:41:2667:2667	1891152	1					
ANR	1891781	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Cannot add element %s number %pd when only 0 such elements exist"" , mynode -> name , Z_LVAL_P ( member ) )"	326:6:9434:9567	1891152	0	True				
ANR	1891782	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Cannot add element %s number %pd when only 0 such elements exist"" , mynode -> name , Z_LVAL_P ( member ) )"		1891152	0					
ANR	1891783	Callee	php_error_docref		1891152	0					
ANR	1891784	Identifier	php_error_docref		1891152	0					
ANR	1891785	ArgumentList	NULL		1891152	1					
ANR	1891786	Argument	NULL		1891152	0					
ANR	1891787	Identifier	NULL		1891152	0					
ANR	1891788	Argument	E_WARNING		1891152	1					
ANR	1891789	Identifier	E_WARNING		1891152	0					
ANR	1891790	Argument	"""Cannot add element %s number %pd when only 0 such elements exist"""		1891152	2					
ANR	1891791	PrimaryExpression	"""Cannot add element %s number %pd when only 0 such elements exist"""		1891152	0					
ANR	1891792	Argument	mynode -> name		1891152	3					
ANR	1891793	PtrMemberAccess	mynode -> name		1891152	0					
ANR	1891794	Identifier	mynode		1891152	0					
ANR	1891795	Identifier	name		1891152	1					
ANR	1891796	Argument	Z_LVAL_P ( member )		1891152	4					
ANR	1891797	CallExpression	Z_LVAL_P ( member )		1891152	0					
ANR	1891798	Callee	Z_LVAL_P		1891152	0					
ANR	1891799	Identifier	Z_LVAL_P		1891152	0					
ANR	1891800	ArgumentList	member		1891152	1					
ANR	1891801	Argument	member		1891152	0					
ANR	1891802	Identifier	member		1891152	0					
ANR	1891803	ElseStatement	else		1891152	0					
ANR	1891804	IfStatement	if ( member )		1891152	0					
ANR	1891805	Condition	member	328:15:9591:9596	1891152	0	True				
ANR	1891806	Identifier	member		1891152	0					
ANR	1891807	CompoundStatement		93:23:2840:2840	1891152	1					
ANR	1891808	ExpressionStatement	"node = sxe_get_element_by_offset ( sxe , Z_LVAL_P ( member ) , node , & cnt )"	329:5:9606:9673	1891152	0	True				
ANR	1891809	AssignmentExpression	"node = sxe_get_element_by_offset ( sxe , Z_LVAL_P ( member ) , node , & cnt )"		1891152	0		=			
ANR	1891810	Identifier	node		1891152	0					
ANR	1891811	CallExpression	"sxe_get_element_by_offset ( sxe , Z_LVAL_P ( member ) , node , & cnt )"		1891152	1					
ANR	1891812	Callee	sxe_get_element_by_offset		1891152	0					
ANR	1891813	Identifier	sxe_get_element_by_offset		1891152	0					
ANR	1891814	ArgumentList	sxe		1891152	1					
ANR	1891815	Argument	sxe		1891152	0					
ANR	1891816	Identifier	sxe		1891152	0					
ANR	1891817	Argument	Z_LVAL_P ( member )		1891152	1					
ANR	1891818	CallExpression	Z_LVAL_P ( member )		1891152	0					
ANR	1891819	Callee	Z_LVAL_P		1891152	0					
ANR	1891820	Identifier	Z_LVAL_P		1891152	0					
ANR	1891821	ArgumentList	member		1891152	1					
ANR	1891822	Argument	member		1891152	0					
ANR	1891823	Identifier	member		1891152	0					
ANR	1891824	Argument	node		1891152	2					
ANR	1891825	Identifier	node		1891152	0					
ANR	1891826	Argument	& cnt		1891152	3					
ANR	1891827	UnaryOperationExpression	& cnt		1891152	0					
ANR	1891828	UnaryOperator	&		1891152	0					
ANR	1891829	Identifier	cnt		1891152	1					
ANR	1891830	ElseStatement	else		1891152	0					
ANR	1891831	CompoundStatement		95:11:2927:2927	1891152	0					
ANR	1891832	ExpressionStatement	node = NULL	331:5:9693:9704	1891152	0	True				
ANR	1891833	AssignmentExpression	node = NULL		1891152	0		=			
ANR	1891834	Identifier	node		1891152	0					
ANR	1891835	Identifier	NULL		1891152	1					
ANR	1891836	IfStatement	if ( node )		1891152	4					
ANR	1891837	Condition	node	333:8:9720:9723	1891152	0	True				
ANR	1891838	Identifier	node		1891152	0					
ANR	1891839	CompoundStatement		98:14:2967:2967	1891152	1					
ANR	1891840	ExpressionStatement	"_node_as_zval ( sxe , node , rv , SXE_ITER_NONE , NULL , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	334:5:9733:9822	1891152	0	True				
ANR	1891841	CallExpression	"_node_as_zval ( sxe , node , rv , SXE_ITER_NONE , NULL , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1891152	0					
ANR	1891842	Callee	_node_as_zval		1891152	0					
ANR	1891843	Identifier	_node_as_zval		1891152	0					
ANR	1891844	ArgumentList	sxe		1891152	1					
ANR	1891845	Argument	sxe		1891152	0					
ANR	1891846	Identifier	sxe		1891152	0					
ANR	1891847	Argument	node		1891152	1					
ANR	1891848	Identifier	node		1891152	0					
ANR	1891849	Argument	rv		1891152	2					
ANR	1891850	Identifier	rv		1891152	0					
ANR	1891851	Argument	SXE_ITER_NONE		1891152	3					
ANR	1891852	Identifier	SXE_ITER_NONE		1891152	0					
ANR	1891853	Argument	NULL		1891152	4					
ANR	1891854	Identifier	NULL		1891152	0					
ANR	1891855	Argument	sxe -> iter . nsprefix		1891152	5					
ANR	1891856	MemberAccess	sxe -> iter . nsprefix		1891152	0					
ANR	1891857	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891858	Identifier	sxe		1891152	0					
ANR	1891859	Identifier	iter		1891152	1					
ANR	1891860	Identifier	nsprefix		1891152	1					
ANR	1891861	Argument	sxe -> iter . isprefix		1891152	6					
ANR	1891862	MemberAccess	sxe -> iter . isprefix		1891152	0					
ANR	1891863	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891864	Identifier	sxe		1891152	0					
ANR	1891865	Identifier	iter		1891152	1					
ANR	1891866	Identifier	isprefix		1891152	1					
ANR	1891867	ElseStatement	else		1891152	0					
ANR	1891868	IfStatement	if ( type == BP_VAR_W || type == BP_VAR_RW )		1891152	0					
ANR	1891869	Condition	type == BP_VAR_W || type == BP_VAR_RW	335:15:9839:9875	1891152	0	True				
ANR	1891870	OrExpression	type == BP_VAR_W || type == BP_VAR_RW		1891152	0		||			
ANR	1891871	EqualityExpression	type == BP_VAR_W		1891152	0		==			
ANR	1891872	Identifier	type		1891152	0					
ANR	1891873	Identifier	BP_VAR_W		1891152	1					
ANR	1891874	EqualityExpression	type == BP_VAR_RW		1891152	1		==			
ANR	1891875	Identifier	type		1891152	0					
ANR	1891876	Identifier	BP_VAR_RW		1891152	1					
ANR	1891877	CompoundStatement		100:54:3119:3119	1891152	1					
ANR	1891878	IfStatement	if ( member && cnt < Z_LVAL_P ( member ) )		1891152	0					
ANR	1891879	Condition	member && cnt < Z_LVAL_P ( member )	336:9:9889:9920	1891152	0	True				
ANR	1891880	AndExpression	member && cnt < Z_LVAL_P ( member )		1891152	0		&&			
ANR	1891881	Identifier	member		1891152	0					
ANR	1891882	RelationalExpression	cnt < Z_LVAL_P ( member )		1891152	1		<			
ANR	1891883	Identifier	cnt		1891152	0					
ANR	1891884	CallExpression	Z_LVAL_P ( member )		1891152	1					
ANR	1891885	Callee	Z_LVAL_P		1891152	0					
ANR	1891886	Identifier	Z_LVAL_P		1891152	0					
ANR	1891887	ArgumentList	member		1891152	1					
ANR	1891888	Argument	member		1891152	0					
ANR	1891889	Identifier	member		1891152	0					
ANR	1891890	CompoundStatement		101:43:3164:3164	1891152	1					
ANR	1891891	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Cannot add element %s number %pd when only %pd such elements exist"" , mynode -> name , Z_LVAL_P ( member ) , cnt )"	337:6:9931:10071	1891152	0	True				
ANR	1891892	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Cannot add element %s number %pd when only %pd such elements exist"" , mynode -> name , Z_LVAL_P ( member ) , cnt )"		1891152	0					
ANR	1891893	Callee	php_error_docref		1891152	0					
ANR	1891894	Identifier	php_error_docref		1891152	0					
ANR	1891895	ArgumentList	NULL		1891152	1					
ANR	1891896	Argument	NULL		1891152	0					
ANR	1891897	Identifier	NULL		1891152	0					
ANR	1891898	Argument	E_WARNING		1891152	1					
ANR	1891899	Identifier	E_WARNING		1891152	0					
ANR	1891900	Argument	"""Cannot add element %s number %pd when only %pd such elements exist"""		1891152	2					
ANR	1891901	PrimaryExpression	"""Cannot add element %s number %pd when only %pd such elements exist"""		1891152	0					
ANR	1891902	Argument	mynode -> name		1891152	3					
ANR	1891903	PtrMemberAccess	mynode -> name		1891152	0					
ANR	1891904	Identifier	mynode		1891152	0					
ANR	1891905	Identifier	name		1891152	1					
ANR	1891906	Argument	Z_LVAL_P ( member )		1891152	4					
ANR	1891907	CallExpression	Z_LVAL_P ( member )		1891152	0					
ANR	1891908	Callee	Z_LVAL_P		1891152	0					
ANR	1891909	Identifier	Z_LVAL_P		1891152	0					
ANR	1891910	ArgumentList	member		1891152	1					
ANR	1891911	Argument	member		1891152	0					
ANR	1891912	Identifier	member		1891152	0					
ANR	1891913	Argument	cnt		1891152	5					
ANR	1891914	Identifier	cnt		1891152	0					
ANR	1891915	ExpressionStatement	"node = xmlNewTextChild ( mynode -> parent , mynode -> ns , mynode -> name , NULL )"	339:5:10085:10155	1891152	1	True				
ANR	1891916	AssignmentExpression	"node = xmlNewTextChild ( mynode -> parent , mynode -> ns , mynode -> name , NULL )"		1891152	0		=			
ANR	1891917	Identifier	node		1891152	0					
ANR	1891918	CallExpression	"xmlNewTextChild ( mynode -> parent , mynode -> ns , mynode -> name , NULL )"		1891152	1					
ANR	1891919	Callee	xmlNewTextChild		1891152	0					
ANR	1891920	Identifier	xmlNewTextChild		1891152	0					
ANR	1891921	ArgumentList	mynode -> parent		1891152	1					
ANR	1891922	Argument	mynode -> parent		1891152	0					
ANR	1891923	PtrMemberAccess	mynode -> parent		1891152	0					
ANR	1891924	Identifier	mynode		1891152	0					
ANR	1891925	Identifier	parent		1891152	1					
ANR	1891926	Argument	mynode -> ns		1891152	1					
ANR	1891927	PtrMemberAccess	mynode -> ns		1891152	0					
ANR	1891928	Identifier	mynode		1891152	0					
ANR	1891929	Identifier	ns		1891152	1					
ANR	1891930	Argument	mynode -> name		1891152	2					
ANR	1891931	PtrMemberAccess	mynode -> name		1891152	0					
ANR	1891932	Identifier	mynode		1891152	0					
ANR	1891933	Identifier	name		1891152	1					
ANR	1891934	Argument	NULL		1891152	3					
ANR	1891935	Identifier	NULL		1891152	0					
ANR	1891936	ExpressionStatement	"_node_as_zval ( sxe , node , rv , SXE_ITER_NONE , NULL , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	340:5:10162:10251	1891152	2	True				
ANR	1891937	CallExpression	"_node_as_zval ( sxe , node , rv , SXE_ITER_NONE , NULL , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1891152	0					
ANR	1891938	Callee	_node_as_zval		1891152	0					
ANR	1891939	Identifier	_node_as_zval		1891152	0					
ANR	1891940	ArgumentList	sxe		1891152	1					
ANR	1891941	Argument	sxe		1891152	0					
ANR	1891942	Identifier	sxe		1891152	0					
ANR	1891943	Argument	node		1891152	1					
ANR	1891944	Identifier	node		1891152	0					
ANR	1891945	Argument	rv		1891152	2					
ANR	1891946	Identifier	rv		1891152	0					
ANR	1891947	Argument	SXE_ITER_NONE		1891152	3					
ANR	1891948	Identifier	SXE_ITER_NONE		1891152	0					
ANR	1891949	Argument	NULL		1891152	4					
ANR	1891950	Identifier	NULL		1891152	0					
ANR	1891951	Argument	sxe -> iter . nsprefix		1891152	5					
ANR	1891952	MemberAccess	sxe -> iter . nsprefix		1891152	0					
ANR	1891953	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891954	Identifier	sxe		1891152	0					
ANR	1891955	Identifier	iter		1891152	1					
ANR	1891956	Identifier	nsprefix		1891152	1					
ANR	1891957	Argument	sxe -> iter . isprefix		1891152	6					
ANR	1891958	MemberAccess	sxe -> iter . isprefix		1891152	0					
ANR	1891959	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1891960	Identifier	sxe		1891152	0					
ANR	1891961	Identifier	iter		1891152	1					
ANR	1891962	Identifier	isprefix		1891152	1					
ANR	1891963	ElseStatement	else		1891152	0					
ANR	1891964	CompoundStatement		109:4:3540:3551	1891152	0					
ANR	1891965	IdentifierDeclStatement	int newtype ;	344:4:10299:10310	1891152	0	True				
ANR	1891966	IdentifierDecl	newtype		1891152	0					
ANR	1891967	IdentifierDeclType	int		1891152	0					
ANR	1891968	Identifier	newtype		1891152	1					
ANR	1891969	ExpressionStatement	"GET_NODE ( sxe , node )"	346:4:10317:10336	1891152	1	True				
ANR	1891970	CallExpression	"GET_NODE ( sxe , node )"		1891152	0					
ANR	1891971	Callee	GET_NODE		1891152	0					
ANR	1891972	Identifier	GET_NODE		1891152	0					
ANR	1891973	ArgumentList	sxe		1891152	1					
ANR	1891974	Argument	sxe		1891152	0					
ANR	1891975	Identifier	sxe		1891152	0					
ANR	1891976	Argument	node		1891152	1					
ANR	1891977	Identifier	node		1891152	0					
ANR	1891978	ExpressionStatement	"node = sxe_get_element_by_name ( sxe , node , & name , & newtype )"	347:4:10342:10400	1891152	2	True				
ANR	1891979	AssignmentExpression	"node = sxe_get_element_by_name ( sxe , node , & name , & newtype )"		1891152	0		=			
ANR	1891980	Identifier	node		1891152	0					
ANR	1891981	CallExpression	"sxe_get_element_by_name ( sxe , node , & name , & newtype )"		1891152	1					
ANR	1891982	Callee	sxe_get_element_by_name		1891152	0					
ANR	1891983	Identifier	sxe_get_element_by_name		1891152	0					
ANR	1891984	ArgumentList	sxe		1891152	1					
ANR	1891985	Argument	sxe		1891152	0					
ANR	1891986	Identifier	sxe		1891152	0					
ANR	1891987	Argument	node		1891152	1					
ANR	1891988	Identifier	node		1891152	0					
ANR	1891989	Argument	& name		1891152	2					
ANR	1891990	UnaryOperationExpression	& name		1891152	0					
ANR	1891991	UnaryOperator	&		1891152	0					
ANR	1891992	Identifier	name		1891152	1					
ANR	1891993	Argument	& newtype		1891152	3					
ANR	1891994	UnaryOperationExpression	& newtype		1891152	0					
ANR	1891995	UnaryOperator	&		1891152	0					
ANR	1891996	Identifier	newtype		1891152	1					
ANR	1891997	IfStatement	if ( node )		1891152	3					
ANR	1891998	Condition	node	348:8:10410:10413	1891152	0	True				
ANR	1891999	Identifier	node		1891152	0					
ANR	1892000	CompoundStatement		113:14:3657:3657	1891152	1					
ANR	1892001	ExpressionStatement	"_node_as_zval ( sxe , node , rv , newtype , name , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	349:5:10423:10506	1891152	0	True				
ANR	1892002	CallExpression	"_node_as_zval ( sxe , node , rv , newtype , name , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1891152	0					
ANR	1892003	Callee	_node_as_zval		1891152	0					
ANR	1892004	Identifier	_node_as_zval		1891152	0					
ANR	1892005	ArgumentList	sxe		1891152	1					
ANR	1892006	Argument	sxe		1891152	0					
ANR	1892007	Identifier	sxe		1891152	0					
ANR	1892008	Argument	node		1891152	1					
ANR	1892009	Identifier	node		1891152	0					
ANR	1892010	Argument	rv		1891152	2					
ANR	1892011	Identifier	rv		1891152	0					
ANR	1892012	Argument	newtype		1891152	3					
ANR	1892013	Identifier	newtype		1891152	0					
ANR	1892014	Argument	name		1891152	4					
ANR	1892015	Identifier	name		1891152	0					
ANR	1892016	Argument	sxe -> iter . nsprefix		1891152	5					
ANR	1892017	MemberAccess	sxe -> iter . nsprefix		1891152	0					
ANR	1892018	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1892019	Identifier	sxe		1891152	0					
ANR	1892020	Identifier	iter		1891152	1					
ANR	1892021	Identifier	nsprefix		1891152	1					
ANR	1892022	Argument	sxe -> iter . isprefix		1891152	6					
ANR	1892023	MemberAccess	sxe -> iter . isprefix		1891152	0					
ANR	1892024	PtrMemberAccess	sxe -> iter		1891152	0					
ANR	1892025	Identifier	sxe		1891152	0					
ANR	1892026	Identifier	iter		1891152	1					
ANR	1892027	Identifier	isprefix		1891152	1					
ANR	1892028	IfStatement	if ( member == & tmp_zv )		1891152	13					
ANR	1892029	Condition	member == & tmp_zv	358:5:10643:10659	1891152	0	True				
ANR	1892030	EqualityExpression	member == & tmp_zv		1891152	0		==			
ANR	1892031	Identifier	member		1891152	0					
ANR	1892032	UnaryOperationExpression	& tmp_zv		1891152	1					
ANR	1892033	UnaryOperator	&		1891152	0					
ANR	1892034	Identifier	tmp_zv		1891152	1					
ANR	1892035	CompoundStatement		123:24:3903:3903	1891152	1					
ANR	1892036	ExpressionStatement	zval_dtor ( & tmp_zv )	359:2:10666:10684	1891152	0	True				
ANR	1892037	CallExpression	zval_dtor ( & tmp_zv )		1891152	0					
ANR	1892038	Callee	zval_dtor		1891152	0					
ANR	1892039	Identifier	zval_dtor		1891152	0					
ANR	1892040	ArgumentList	& tmp_zv		1891152	1					
ANR	1892041	Argument	& tmp_zv		1891152	0					
ANR	1892042	UnaryOperationExpression	& tmp_zv		1891152	0					
ANR	1892043	UnaryOperator	&		1891152	0					
ANR	1892044	Identifier	tmp_zv		1891152	1					
ANR	1892045	IfStatement	if ( Z_ISUNDEF_P ( rv ) )		1891152	14					
ANR	1892046	Condition	Z_ISUNDEF_P ( rv )	362:5:10695:10709	1891152	0	True				
ANR	1892047	CallExpression	Z_ISUNDEF_P ( rv )		1891152	0					
ANR	1892048	Callee	Z_ISUNDEF_P		1891152	0					
ANR	1892049	Identifier	Z_ISUNDEF_P		1891152	0					
ANR	1892050	ArgumentList	rv		1891152	1					
ANR	1892051	Argument	rv		1891152	0					
ANR	1892052	Identifier	rv		1891152	0					
ANR	1892053	CompoundStatement		127:22:3953:3953	1891152	1					
ANR	1892054	ExpressionStatement	"ZVAL_COPY_VALUE ( rv , & EG ( uninitialized_zval ) )"	363:2:10716:10760	1891152	0	True				
ANR	1892055	CallExpression	"ZVAL_COPY_VALUE ( rv , & EG ( uninitialized_zval ) )"		1891152	0					
ANR	1892056	Callee	ZVAL_COPY_VALUE		1891152	0					
ANR	1892057	Identifier	ZVAL_COPY_VALUE		1891152	0					
ANR	1892058	ArgumentList	rv		1891152	1					
ANR	1892059	Argument	rv		1891152	0					
ANR	1892060	Identifier	rv		1891152	0					
ANR	1892061	Argument	& EG ( uninitialized_zval )		1891152	1					
ANR	1892062	UnaryOperationExpression	& EG ( uninitialized_zval )		1891152	0					
ANR	1892063	UnaryOperator	&		1891152	0					
ANR	1892064	CallExpression	EG ( uninitialized_zval )		1891152	1					
ANR	1892065	Callee	EG		1891152	0					
ANR	1892066	Identifier	EG		1891152	0					
ANR	1892067	ArgumentList	uninitialized_zval		1891152	1					
ANR	1892068	Argument	uninitialized_zval		1891152	0					
ANR	1892069	Identifier	uninitialized_zval		1891152	0					
ANR	1892070	ReturnStatement	return rv ;	366:1:10767:10776	1891152	15	True				
ANR	1892071	Identifier	rv		1891152	0					
ANR	1892072	ReturnType	static zval *		1891152	1					
ANR	1892073	Identifier	sxe_prop_dim_read		1891152	2					
ANR	1892074	ParameterList	"zval * object , zval * member , zend_bool elements , zend_bool attribs , int type , zval * rv"		1891152	3					
ANR	1892075	Parameter	zval * object	235:31:6671:6682	1891152	0	True				
ANR	1892076	ParameterType	zval *		1891152	0					
ANR	1892077	Identifier	object		1891152	1					
ANR	1892078	Parameter	zval * member	235:45:6685:6696	1891152	1	True				
ANR	1892079	ParameterType	zval *		1891152	0					
ANR	1892080	Identifier	member		1891152	1					
ANR	1892081	Parameter	zend_bool elements	235:59:6699:6716	1891152	2	True				
ANR	1892082	ParameterType	zend_bool		1891152	0					
ANR	1892083	Identifier	elements		1891152	1					
ANR	1892084	Parameter	zend_bool attribs	235:79:6719:6735	1891152	3	True				
ANR	1892085	ParameterType	zend_bool		1891152	0					
ANR	1892086	Identifier	attribs		1891152	1					
ANR	1892087	Parameter	int type	235:98:6738:6745	1891152	4	True				
ANR	1892088	ParameterType	int		1891152	0					
ANR	1892089	Identifier	type		1891152	1					
ANR	1892090	Parameter	zval * rv	235:108:6748:6755	1891152	5	True				
ANR	1892091	ParameterType	zval *		1891152	0					
ANR	1892092	Identifier	rv		1891152	1					
ANR	1892093	CFGEntryNode	ENTRY		1891152		True				
ANR	1892094	CFGExitNode	EXIT		1891152		True				
ANR	1892095	Symbol	& name		1891152						
ANR	1892096	Symbol	type		1891152						
ANR	1892097	Symbol	node -> parent -> type		1891152						
ANR	1892098	Symbol	BP_VAR_W		1891152						
ANR	1892099	Symbol	* node		1891152						
ANR	1892100	Symbol	IS_STRING		1891152						
ANR	1892101	Symbol	sxe -> node		1891152						
ANR	1892102	Symbol	sxe		1891152						
ANR	1892103	Symbol	NULL		1891152						
ANR	1892104	Symbol	xmlStrcmp		1891152						
ANR	1892105	Symbol	test		1891152						
ANR	1892106	Symbol	sxe -> iter . type		1891152						
ANR	1892107	Symbol	attribs		1891152						
ANR	1892108	Symbol	sxe -> iter		1891152						
ANR	1892109	Symbol	node		1891152						
ANR	1892110	Symbol	SXE_ITER_NONE		1891152						
ANR	1892111	Symbol	* * node		1891152						
ANR	1892112	Symbol	sxe -> iter . nsprefix		1891152						
ANR	1892113	Symbol	node -> parent		1891152						
ANR	1892114	Symbol	name		1891152						
ANR	1892115	Symbol	& newtype		1891152						
ANR	1892116	Symbol	mynode -> parent		1891152						
ANR	1892117	Symbol	* attr		1891152						
ANR	1892118	Symbol	Z_SXEOBJ_P		1891152						
ANR	1892119	Symbol	object		1891152						
ANR	1892120	Symbol	attr -> next		1891152						
ANR	1892121	Symbol	tmp_zv		1891152						
ANR	1892122	Symbol	SXE_ITER_ATTRLIST		1891152						
ANR	1892123	Symbol	SXE_ITER_CHILD		1891152						
ANR	1892124	Symbol	rv		1891152						
ANR	1892125	Symbol	& tmp_zv		1891152						
ANR	1892126	Symbol	mynode -> name		1891152						
ANR	1892127	Symbol	nodendx		1891152						
ANR	1892128	Symbol	& cnt		1891152						
ANR	1892129	Symbol	* sxe		1891152						
ANR	1892130	Symbol	match_ns		1891152						
ANR	1892131	Symbol	& EG		1891152						
ANR	1892132	Symbol	E_WARNING		1891152						
ANR	1892133	Symbol	newtype		1891152						
ANR	1892134	Symbol	mynode -> ns		1891152						
ANR	1892135	Symbol	IS_LONG		1891152						
ANR	1892136	Symbol	member		1891152						
ANR	1892137	Symbol	* node -> parent		1891152						
ANR	1892138	Symbol	sxe_get_element_by_name		1891152						
ANR	1892139	Symbol	attr		1891152						
ANR	1892140	Symbol	BP_VAR_RW		1891152						
ANR	1892141	Symbol	uninitialized_zval		1891152						
ANR	1892142	Symbol	php_sxe_get_first_node		1891152						
ANR	1892143	Symbol	cnt		1891152						
ANR	1892144	Symbol	zval_get_string		1891152						
ANR	1892145	Symbol	node -> properties		1891152						
ANR	1892146	Symbol	sxe -> iter . isprefix		1891152						
ANR	1892147	Symbol	sxe_get_element_by_offset		1891152						
ANR	1892148	Symbol	XML_DOCUMENT_NODE		1891152						
ANR	1892149	Symbol	Z_TYPE_P		1891152						
ANR	1892150	Symbol	Z_STRVAL_P		1891152						
ANR	1892151	Symbol	Z_LVAL_P		1891152						
ANR	1892152	Symbol	sxe -> iter . name		1891152						
ANR	1892153	Symbol	* mynode		1891152						
ANR	1892154	Symbol	xmlNewTextChild		1891152						
ANR	1892155	Symbol	E_ERROR		1891152						
ANR	1892156	Symbol	mynode		1891152						
ANR	1892157	Symbol	elements		1891152						
ANR	1892158	Symbol	attr -> name		1891152						
ANR	1892159	Symbol	Z_ISUNDEF_P		1891152						
ANR	1892160	Function	sxe_property_read	372:0:10822:10981							
ANR	1892161	FunctionDef	"sxe_property_read (zval * object , zval * member , int type , void * * cache_slot , zval * rv)"		1892160	0					
ANR	1892162	CompoundStatement		373:0:10920:10981	1892160	0					
ANR	1892163	ReturnStatement	"return sxe_prop_dim_read ( object , member , 1 , 0 , type , rv ) ;"	374:1:10923:10979	1892160	0	True				
ANR	1892164	CallExpression	"sxe_prop_dim_read ( object , member , 1 , 0 , type , rv )"		1892160	0					
ANR	1892165	Callee	sxe_prop_dim_read		1892160	0					
ANR	1892166	Identifier	sxe_prop_dim_read		1892160	0					
ANR	1892167	ArgumentList	object		1892160	1					
ANR	1892168	Argument	object		1892160	0					
ANR	1892169	Identifier	object		1892160	0					
ANR	1892170	Argument	member		1892160	1					
ANR	1892171	Identifier	member		1892160	0					
ANR	1892172	Argument	1		1892160	2					
ANR	1892173	PrimaryExpression	1		1892160	0					
ANR	1892174	Argument	0		1892160	3					
ANR	1892175	PrimaryExpression	0		1892160	0					
ANR	1892176	Argument	type		1892160	4					
ANR	1892177	Identifier	type		1892160	0					
ANR	1892178	Argument	rv		1892160	5					
ANR	1892179	Identifier	rv		1892160	0					
ANR	1892180	ReturnType	static zval *		1892160	1					
ANR	1892181	Identifier	sxe_property_read		1892160	2					
ANR	1892182	ParameterList	"zval * object , zval * member , int type , void * * cache_slot , zval * rv"		1892160	3					
ANR	1892183	Parameter	zval * object	372:31:10853:10864	1892160	0	True				
ANR	1892184	ParameterType	zval *		1892160	0					
ANR	1892185	Identifier	object		1892160	1					
ANR	1892186	Parameter	zval * member	372:45:10867:10878	1892160	1	True				
ANR	1892187	ParameterType	zval *		1892160	0					
ANR	1892188	Identifier	member		1892160	1					
ANR	1892189	Parameter	int type	372:59:10881:10888	1892160	2	True				
ANR	1892190	ParameterType	int		1892160	0					
ANR	1892191	Identifier	type		1892160	1					
ANR	1892192	Parameter	void * * cache_slot	372:69:10891:10907	1892160	3	True				
ANR	1892193	ParameterType	void * *		1892160	0					
ANR	1892194	Identifier	cache_slot		1892160	1					
ANR	1892195	Parameter	zval * rv	372:88:10910:10917	1892160	4	True				
ANR	1892196	ParameterType	zval *		1892160	0					
ANR	1892197	Identifier	rv		1892160	1					
ANR	1892198	CFGEntryNode	ENTRY		1892160		True				
ANR	1892199	CFGExitNode	EXIT		1892160		True				
ANR	1892200	Symbol	cache_slot		1892160						
ANR	1892201	Symbol	rv		1892160						
ANR	1892202	Symbol	member		1892160						
ANR	1892203	Symbol	sxe_prop_dim_read		1892160						
ANR	1892204	Symbol	type		1892160						
ANR	1892205	Symbol	object		1892160						
ANR	1892206	Function	sxe_dimension_read	380:0:11026:11167							
ANR	1892207	FunctionDef	"sxe_dimension_read (zval * object , zval * offset , int type , zval * rv)"		1892206	0					
ANR	1892208	CompoundStatement		381:0:11106:11167	1892206	0					
ANR	1892209	ReturnStatement	"return sxe_prop_dim_read ( object , offset , 0 , 1 , type , rv ) ;"	382:1:11109:11165	1892206	0	True				
ANR	1892210	CallExpression	"sxe_prop_dim_read ( object , offset , 0 , 1 , type , rv )"		1892206	0					
ANR	1892211	Callee	sxe_prop_dim_read		1892206	0					
ANR	1892212	Identifier	sxe_prop_dim_read		1892206	0					
ANR	1892213	ArgumentList	object		1892206	1					
ANR	1892214	Argument	object		1892206	0					
ANR	1892215	Identifier	object		1892206	0					
ANR	1892216	Argument	offset		1892206	1					
ANR	1892217	Identifier	offset		1892206	0					
ANR	1892218	Argument	0		1892206	2					
ANR	1892219	PrimaryExpression	0		1892206	0					
ANR	1892220	Argument	1		1892206	3					
ANR	1892221	PrimaryExpression	1		1892206	0					
ANR	1892222	Argument	type		1892206	4					
ANR	1892223	Identifier	type		1892206	0					
ANR	1892224	Argument	rv		1892206	5					
ANR	1892225	Identifier	rv		1892206	0					
ANR	1892226	ReturnType	static zval *		1892206	1					
ANR	1892227	Identifier	sxe_dimension_read		1892206	2					
ANR	1892228	ParameterList	"zval * object , zval * offset , int type , zval * rv"		1892206	3					
ANR	1892229	Parameter	zval * object	380:32:11058:11069	1892206	0	True				
ANR	1892230	ParameterType	zval *		1892206	0					
ANR	1892231	Identifier	object		1892206	1					
ANR	1892232	Parameter	zval * offset	380:46:11072:11083	1892206	1	True				
ANR	1892233	ParameterType	zval *		1892206	0					
ANR	1892234	Identifier	offset		1892206	1					
ANR	1892235	Parameter	int type	380:60:11086:11093	1892206	2	True				
ANR	1892236	ParameterType	int		1892206	0					
ANR	1892237	Identifier	type		1892206	1					
ANR	1892238	Parameter	zval * rv	380:70:11096:11103	1892206	3	True				
ANR	1892239	ParameterType	zval *		1892206	0					
ANR	1892240	Identifier	rv		1892206	1					
ANR	1892241	CFGEntryNode	ENTRY		1892206		True				
ANR	1892242	CFGExitNode	EXIT		1892206		True				
ANR	1892243	Symbol	offset		1892206						
ANR	1892244	Symbol	rv		1892206						
ANR	1892245	Symbol	sxe_prop_dim_read		1892206						
ANR	1892246	Symbol	type		1892206						
ANR	1892247	Symbol	object		1892206						
ANR	1892248	Function	change_node_zval	388:0:11210:12200							
ANR	1892249	FunctionDef	"change_node_zval (xmlNodePtr node , zval * value)"		1892248	0					
ANR	1892250	CompoundStatement		389:0:11269:12200	1892248	0					
ANR	1892251	IdentifierDeclStatement	zval value_copy ;	390:1:11272:11287	1892248	0	True				
ANR	1892252	IdentifierDecl	value_copy		1892248	0					
ANR	1892253	IdentifierDeclType	zval		1892248	0					
ANR	1892254	Identifier	value_copy		1892248	1					
ANR	1892255	IdentifierDeclStatement	xmlChar * buffer ;	391:1:11290:11305	1892248	1	True				
ANR	1892256	IdentifierDecl	* buffer		1892248	0					
ANR	1892257	IdentifierDeclType	xmlChar *		1892248	0					
ANR	1892258	Identifier	buffer		1892248	1					
ANR	1892259	IdentifierDeclStatement	int buffer_len ;	392:1:11308:11322	1892248	2	True				
ANR	1892260	IdentifierDecl	buffer_len		1892248	0					
ANR	1892261	IdentifierDeclType	int		1892248	0					
ANR	1892262	Identifier	buffer_len		1892248	1					
ANR	1892263	IfStatement	if ( ! value )		1892248	3					
ANR	1892264	Condition	! value	394:5:11330:11335	1892248	0	True				
ANR	1892265	UnaryOperationExpression	! value		1892248	0					
ANR	1892266	UnaryOperator	!		1892248	0					
ANR	1892267	Identifier	value		1892248	1					
ANR	1892268	CompoundStatement		7:1:69:69	1892248	1					
ANR	1892269	ExpressionStatement	"xmlNodeSetContentLen ( node , ( xmlChar * ) """" , 0 )"	396:2:11343:11387	1892248	0	True				
ANR	1892270	CallExpression	"xmlNodeSetContentLen ( node , ( xmlChar * ) """" , 0 )"		1892248	0					
ANR	1892271	Callee	xmlNodeSetContentLen		1892248	0					
ANR	1892272	Identifier	xmlNodeSetContentLen		1892248	0					
ANR	1892273	ArgumentList	node		1892248	1					
ANR	1892274	Argument	node		1892248	0					
ANR	1892275	Identifier	node		1892248	0					
ANR	1892276	Argument	"( xmlChar * ) """""		1892248	1					
ANR	1892277	CastExpression	"( xmlChar * ) """""		1892248	0					
ANR	1892278	CastTarget	xmlChar *		1892248	0					
ANR	1892279	PrimaryExpression	""""""		1892248	1					
ANR	1892280	Argument	0		1892248	2					
ANR	1892281	PrimaryExpression	0		1892248	0					
ANR	1892282	ReturnStatement	return ;	397:2:11391:11397	1892248	1	True				
ANR	1892283	SwitchStatement	switch ( Z_TYPE_P ( value ) )		1892248	4					
ANR	1892284	Condition	Z_TYPE_P ( value )	399:9:11411:11425	1892248	0	True				
ANR	1892285	CallExpression	Z_TYPE_P ( value )		1892248	0					
ANR	1892286	Callee	Z_TYPE_P		1892248	0					
ANR	1892287	Identifier	Z_TYPE_P		1892248	0					
ANR	1892288	ArgumentList	value		1892248	1					
ANR	1892289	Argument	value		1892248	0					
ANR	1892290	Identifier	value		1892248	0					
ANR	1892291	CompoundStatement		11:26:158:158	1892248	1					
ANR	1892292	Label	case IS_LONG :	400:2:11432:11444	1892248	0	True				
ANR	1892293	Identifier	IS_LONG		1892248	0					
ANR	1892294	Label	case IS_FALSE :	401:2:11448:11461	1892248	1	True				
ANR	1892295	Identifier	IS_FALSE		1892248	0					
ANR	1892296	Label	case IS_TRUE :	402:2:11465:11477	1892248	2	True				
ANR	1892297	Identifier	IS_TRUE		1892248	0					
ANR	1892298	Label	case IS_DOUBLE :	403:2:11481:11495	1892248	3	True				
ANR	1892299	Identifier	IS_DOUBLE		1892248	0					
ANR	1892300	Label	case IS_NULL :	404:2:11499:11511	1892248	4	True				
ANR	1892301	Identifier	IS_NULL		1892248	0					
ANR	1892302	IfStatement	if ( Z_REFCOUNT_P ( value ) > 1 )		1892248	5					
ANR	1892303	Condition	Z_REFCOUNT_P ( value ) > 1	405:7:11520:11542	1892248	0	True				
ANR	1892304	RelationalExpression	Z_REFCOUNT_P ( value ) > 1		1892248	0		>			
ANR	1892305	CallExpression	Z_REFCOUNT_P ( value )		1892248	0					
ANR	1892306	Callee	Z_REFCOUNT_P		1892248	0					
ANR	1892307	Identifier	Z_REFCOUNT_P		1892248	0					
ANR	1892308	ArgumentList	value		1892248	1					
ANR	1892309	Argument	value		1892248	0					
ANR	1892310	Identifier	value		1892248	0					
ANR	1892311	PrimaryExpression	1		1892248	1					
ANR	1892312	CompoundStatement		17:32:275:275	1892248	1					
ANR	1892313	ExpressionStatement	value_copy = * value	406:4:11551:11570	1892248	0	True				
ANR	1892314	AssignmentExpression	value_copy = * value		1892248	0		=			
ANR	1892315	Identifier	value_copy		1892248	0					
ANR	1892316	UnaryOperationExpression	* value		1892248	1					
ANR	1892317	UnaryOperator	*		1892248	0					
ANR	1892318	Identifier	value		1892248	1					
ANR	1892319	ExpressionStatement	zval_copy_ctor ( & value_copy )	407:4:11576:11603	1892248	1	True				
ANR	1892320	CallExpression	zval_copy_ctor ( & value_copy )		1892248	0					
ANR	1892321	Callee	zval_copy_ctor		1892248	0					
ANR	1892322	Identifier	zval_copy_ctor		1892248	0					
ANR	1892323	ArgumentList	& value_copy		1892248	1					
ANR	1892324	Argument	& value_copy		1892248	0					
ANR	1892325	UnaryOperationExpression	& value_copy		1892248	0					
ANR	1892326	UnaryOperator	&		1892248	0					
ANR	1892327	Identifier	value_copy		1892248	1					
ANR	1892328	ExpressionStatement	value = & value_copy	408:4:11609:11628	1892248	2	True				
ANR	1892329	AssignmentExpression	value = & value_copy		1892248	0		=			
ANR	1892330	Identifier	value		1892248	0					
ANR	1892331	UnaryOperationExpression	& value_copy		1892248	1					
ANR	1892332	UnaryOperator	&		1892248	0					
ANR	1892333	Identifier	value_copy		1892248	1					
ANR	1892334	ExpressionStatement	convert_to_string ( value )	410:3:11638:11662	1892248	6	True				
ANR	1892335	CallExpression	convert_to_string ( value )		1892248	0					
ANR	1892336	Callee	convert_to_string		1892248	0					
ANR	1892337	Identifier	convert_to_string		1892248	0					
ANR	1892338	ArgumentList	value		1892248	1					
ANR	1892339	Argument	value		1892248	0					
ANR	1892340	Identifier	value		1892248	0					
ANR	1892341	Label	case IS_STRING :	412:2:11703:11717	1892248	7	True				
ANR	1892342	Identifier	IS_STRING		1892248	0					
ANR	1892343	ExpressionStatement	"buffer = xmlEncodeEntitiesReentrant ( node -> doc , ( xmlChar * ) Z_STRVAL_P ( value ) )"	413:3:11722:11798	1892248	8	True				
ANR	1892344	AssignmentExpression	"buffer = xmlEncodeEntitiesReentrant ( node -> doc , ( xmlChar * ) Z_STRVAL_P ( value ) )"		1892248	0		=			
ANR	1892345	Identifier	buffer		1892248	0					
ANR	1892346	CallExpression	"xmlEncodeEntitiesReentrant ( node -> doc , ( xmlChar * ) Z_STRVAL_P ( value ) )"		1892248	1					
ANR	1892347	Callee	xmlEncodeEntitiesReentrant		1892248	0					
ANR	1892348	Identifier	xmlEncodeEntitiesReentrant		1892248	0					
ANR	1892349	ArgumentList	node -> doc		1892248	1					
ANR	1892350	Argument	node -> doc		1892248	0					
ANR	1892351	PtrMemberAccess	node -> doc		1892248	0					
ANR	1892352	Identifier	node		1892248	0					
ANR	1892353	Identifier	doc		1892248	1					
ANR	1892354	Argument	( xmlChar * ) Z_STRVAL_P ( value )		1892248	1					
ANR	1892355	CastExpression	( xmlChar * ) Z_STRVAL_P ( value )		1892248	0					
ANR	1892356	CastTarget	xmlChar *		1892248	0					
ANR	1892357	CallExpression	Z_STRVAL_P ( value )		1892248	1					
ANR	1892358	Callee	Z_STRVAL_P		1892248	0					
ANR	1892359	Identifier	Z_STRVAL_P		1892248	0					
ANR	1892360	ArgumentList	value		1892248	1					
ANR	1892361	Argument	value		1892248	0					
ANR	1892362	Identifier	value		1892248	0					
ANR	1892363	ExpressionStatement	buffer_len = xmlStrlen ( buffer )	414:3:11803:11833	1892248	9	True				
ANR	1892364	AssignmentExpression	buffer_len = xmlStrlen ( buffer )		1892248	0		=			
ANR	1892365	Identifier	buffer_len		1892248	0					
ANR	1892366	CallExpression	xmlStrlen ( buffer )		1892248	1					
ANR	1892367	Callee	xmlStrlen		1892248	0					
ANR	1892368	Identifier	xmlStrlen		1892248	0					
ANR	1892369	ArgumentList	buffer		1892248	1					
ANR	1892370	Argument	buffer		1892248	0					
ANR	1892371	Identifier	buffer		1892248	0					
ANR	1892372	IfStatement	if ( buffer )		1892248	10					
ANR	1892373	Condition	buffer	416:7:11927:11932	1892248	0	True				
ANR	1892374	Identifier	buffer		1892248	0					
ANR	1892375	CompoundStatement		28:15:665:665	1892248	1					
ANR	1892376	ExpressionStatement	"xmlNodeSetContentLen ( node , buffer , buffer_len )"	417:4:11941:11987	1892248	0	True				
ANR	1892377	CallExpression	"xmlNodeSetContentLen ( node , buffer , buffer_len )"		1892248	0					
ANR	1892378	Callee	xmlNodeSetContentLen		1892248	0					
ANR	1892379	Identifier	xmlNodeSetContentLen		1892248	0					
ANR	1892380	ArgumentList	node		1892248	1					
ANR	1892381	Argument	node		1892248	0					
ANR	1892382	Identifier	node		1892248	0					
ANR	1892383	Argument	buffer		1892248	1					
ANR	1892384	Identifier	buffer		1892248	0					
ANR	1892385	Argument	buffer_len		1892248	2					
ANR	1892386	Identifier	buffer_len		1892248	0					
ANR	1892387	ExpressionStatement	xmlFree ( buffer )	418:4:11993:12008	1892248	1	True				
ANR	1892388	CallExpression	xmlFree ( buffer )		1892248	0					
ANR	1892389	Callee	xmlFree		1892248	0					
ANR	1892390	Identifier	xmlFree		1892248	0					
ANR	1892391	ArgumentList	buffer		1892248	1					
ANR	1892392	Argument	buffer		1892248	0					
ANR	1892393	Identifier	buffer		1892248	0					
ANR	1892394	IfStatement	if ( value == & value_copy )		1892248	11					
ANR	1892395	Condition	value == & value_copy	420:7:12022:12041	1892248	0	True				
ANR	1892396	EqualityExpression	value == & value_copy		1892248	0		==			
ANR	1892397	Identifier	value		1892248	0					
ANR	1892398	UnaryOperationExpression	& value_copy		1892248	1					
ANR	1892399	UnaryOperator	&		1892248	0					
ANR	1892400	Identifier	value_copy		1892248	1					
ANR	1892401	CompoundStatement		32:29:774:774	1892248	1					
ANR	1892402	ExpressionStatement	zval_dtor ( value )	421:4:12050:12066	1892248	0	True				
ANR	1892403	CallExpression	zval_dtor ( value )		1892248	0					
ANR	1892404	Callee	zval_dtor		1892248	0					
ANR	1892405	Identifier	zval_dtor		1892248	0					
ANR	1892406	ArgumentList	value		1892248	1					
ANR	1892407	Argument	value		1892248	0					
ANR	1892408	Identifier	value		1892248	0					
ANR	1892409	BreakStatement	break ;	423:3:12076:12081	1892248	12	True				
ANR	1892410	Label	default :	424:2:12085:12092	1892248	13	True				
ANR	1892411	Identifier	default		1892248	0					
ANR	1892412	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""It is not possible to assign complex types to nodes"" )"	425:3:12097:12185	1892248	14	True				
ANR	1892413	CallExpression	"php_error_docref ( NULL , E_WARNING , ""It is not possible to assign complex types to nodes"" )"		1892248	0					
ANR	1892414	Callee	php_error_docref		1892248	0					
ANR	1892415	Identifier	php_error_docref		1892248	0					
ANR	1892416	ArgumentList	NULL		1892248	1					
ANR	1892417	Argument	NULL		1892248	0					
ANR	1892418	Identifier	NULL		1892248	0					
ANR	1892419	Argument	E_WARNING		1892248	1					
ANR	1892420	Identifier	E_WARNING		1892248	0					
ANR	1892421	Argument	"""It is not possible to assign complex types to nodes"""		1892248	2					
ANR	1892422	PrimaryExpression	"""It is not possible to assign complex types to nodes"""		1892248	0					
ANR	1892423	BreakStatement	break ;	426:3:12190:12195	1892248	15	True				
ANR	1892424	ReturnType	static void		1892248	1					
ANR	1892425	Identifier	change_node_zval		1892248	2					
ANR	1892426	ParameterList	"xmlNodePtr node , zval * value"		1892248	3					
ANR	1892427	Parameter	xmlNodePtr node	388:29:11239:11253	1892248	0	True				
ANR	1892428	ParameterType	xmlNodePtr		1892248	0					
ANR	1892429	Identifier	node		1892248	1					
ANR	1892430	Parameter	zval * value	388:46:11256:11266	1892248	1	True				
ANR	1892431	ParameterType	zval *		1892248	0					
ANR	1892432	Identifier	value		1892248	1					
ANR	1892433	CFGEntryNode	ENTRY		1892248		True				
ANR	1892434	CFGExitNode	EXIT		1892248		True				
ANR	1892435	Symbol	value_copy		1892248						
ANR	1892436	Symbol	NULL		1892248						
ANR	1892437	Symbol	& value_copy		1892248						
ANR	1892438	Symbol	Z_TYPE_P		1892248						
ANR	1892439	Symbol	Z_REFCOUNT_P		1892248						
ANR	1892440	Symbol	Z_STRVAL_P		1892248						
ANR	1892441	Symbol	E_WARNING		1892248						
ANR	1892442	Symbol	node		1892248						
ANR	1892443	Symbol	xmlEncodeEntitiesReentrant		1892248						
ANR	1892444	Symbol	buffer_len		1892248						
ANR	1892445	Symbol	xmlStrlen		1892248						
ANR	1892446	Symbol	* value		1892248						
ANR	1892447	Symbol	* node		1892248						
ANR	1892448	Symbol	buffer		1892248						
ANR	1892449	Symbol	value		1892248						
ANR	1892450	Symbol	node -> doc		1892248						
ANR	1892451	Function	sxe_prop_dim_write	433:0:12245:18651							
ANR	1892452	FunctionDef	"sxe_prop_dim_write (zval * object , zval * member , zval * value , zend_bool elements , zend_bool attribs , xmlNodePtr * pnewnode)"		1892451	0					
ANR	1892453	CompoundStatement		434:0:12377:18651	1892451	0					
ANR	1892454	IdentifierDeclStatement	php_sxe_object * sxe ;	435:1:12380:12399	1892451	0	True				
ANR	1892455	IdentifierDecl	* sxe		1892451	0					
ANR	1892456	IdentifierDeclType	php_sxe_object *		1892451	0					
ANR	1892457	Identifier	sxe		1892451	1					
ANR	1892458	IdentifierDeclStatement	xmlNodePtr node ;	436:1:12402:12422	1892451	1	True				
ANR	1892459	IdentifierDecl	node		1892451	0					
ANR	1892460	IdentifierDeclType	xmlNodePtr		1892451	0					
ANR	1892461	Identifier	node		1892451	1					
ANR	1892462	IdentifierDeclStatement	xmlNodePtr newnode = NULL ;	437:1:12425:12455	1892451	2	True				
ANR	1892463	IdentifierDecl	newnode = NULL		1892451	0					
ANR	1892464	IdentifierDeclType	xmlNodePtr		1892451	0					
ANR	1892465	Identifier	newnode		1892451	1					
ANR	1892466	AssignmentExpression	newnode = NULL		1892451	2		=			
ANR	1892467	Identifier	NULL		1892451	0					
ANR	1892468	Identifier	NULL		1892451	1					
ANR	1892469	IdentifierDeclStatement	xmlNodePtr mynode ;	438:1:12458:12480	1892451	3	True				
ANR	1892470	IdentifierDecl	mynode		1892451	0					
ANR	1892471	IdentifierDeclType	xmlNodePtr		1892451	0					
ANR	1892472	Identifier	mynode		1892451	1					
ANR	1892473	IdentifierDeclStatement	xmlNodePtr tempnode ;	439:1:12483:12503	1892451	4	True				
ANR	1892474	IdentifierDecl	tempnode		1892451	0					
ANR	1892475	IdentifierDeclType	xmlNodePtr		1892451	0					
ANR	1892476	Identifier	tempnode		1892451	1					
ANR	1892477	IdentifierDeclStatement	xmlAttrPtr attr = NULL ;	440:1:12506:12533	1892451	5	True				
ANR	1892478	IdentifierDecl	attr = NULL		1892451	0					
ANR	1892479	IdentifierDeclType	xmlAttrPtr		1892451	0					
ANR	1892480	Identifier	attr		1892451	1					
ANR	1892481	AssignmentExpression	attr = NULL		1892451	2		=			
ANR	1892482	Identifier	NULL		1892451	0					
ANR	1892483	Identifier	NULL		1892451	1					
ANR	1892484	IdentifierDeclStatement	int counter = 0 ;	441:1:12536:12563	1892451	6	True				
ANR	1892485	IdentifierDecl	counter = 0		1892451	0					
ANR	1892486	IdentifierDeclType	int		1892451	0					
ANR	1892487	Identifier	counter		1892451	1					
ANR	1892488	AssignmentExpression	counter = 0		1892451	2		=			
ANR	1892489	Identifier	counter		1892451	0					
ANR	1892490	PrimaryExpression	0		1892451	1					
ANR	1892491	IdentifierDeclStatement	int is_attr = 0 ;	442:1:12566:12593	1892451	7	True				
ANR	1892492	IdentifierDecl	is_attr = 0		1892451	0					
ANR	1892493	IdentifierDeclType	int		1892451	0					
ANR	1892494	Identifier	is_attr		1892451	1					
ANR	1892495	AssignmentExpression	is_attr = 0		1892451	2		=			
ANR	1892496	Identifier	is_attr		1892451	0					
ANR	1892497	PrimaryExpression	0		1892451	1					
ANR	1892498	IdentifierDeclStatement	int nodendx = 0 ;	443:1:12596:12614	1892451	8	True				
ANR	1892499	IdentifierDecl	nodendx = 0		1892451	0					
ANR	1892500	IdentifierDeclType	int		1892451	0					
ANR	1892501	Identifier	nodendx		1892451	1					
ANR	1892502	AssignmentExpression	nodendx = 0		1892451	2		=			
ANR	1892503	Identifier	nodendx		1892451	0					
ANR	1892504	PrimaryExpression	0		1892451	1					
ANR	1892505	IdentifierDeclStatement	int test = 0 ;	444:1:12617:12641	1892451	9	True				
ANR	1892506	IdentifierDecl	test = 0		1892451	0					
ANR	1892507	IdentifierDeclType	int		1892451	0					
ANR	1892508	Identifier	test		1892451	1					
ANR	1892509	AssignmentExpression	test = 0		1892451	2		=			
ANR	1892510	Identifier	test		1892451	0					
ANR	1892511	PrimaryExpression	0		1892451	1					
ANR	1892512	IdentifierDeclStatement	int new_value = 0 ;	445:1:12644:12664	1892451	10	True				
ANR	1892513	IdentifierDecl	new_value = 0		1892451	0					
ANR	1892514	IdentifierDeclType	int		1892451	0					
ANR	1892515	Identifier	new_value		1892451	1					
ANR	1892516	AssignmentExpression	new_value = 0		1892451	2		=			
ANR	1892517	Identifier	new_value		1892451	0					
ANR	1892518	PrimaryExpression	0		1892451	1					
ANR	1892519	IdentifierDeclStatement	zend_long cnt = 0 ;	446:1:12667:12695	1892451	11	True				
ANR	1892520	IdentifierDecl	cnt = 0		1892451	0					
ANR	1892521	IdentifierDeclType	zend_long		1892451	0					
ANR	1892522	Identifier	cnt		1892451	1					
ANR	1892523	AssignmentExpression	cnt = 0		1892451	2		=			
ANR	1892524	Identifier	cnt		1892451	0					
ANR	1892525	PrimaryExpression	0		1892451	1					
ANR	1892526	IdentifierDeclStatement	int retval = SUCCESS ;	447:1:12698:12721	1892451	12	True				
ANR	1892527	IdentifierDecl	retval = SUCCESS		1892451	0					
ANR	1892528	IdentifierDeclType	int		1892451	0					
ANR	1892529	Identifier	retval		1892451	1					
ANR	1892530	AssignmentExpression	retval = SUCCESS		1892451	2		=			
ANR	1892531	Identifier	SUCCESS		1892451	0					
ANR	1892532	Identifier	SUCCESS		1892451	1					
ANR	1892533	IdentifierDeclStatement	"zval tmp_zv , zval_copy ;"	448:1:12724:12757	1892451	13	True				
ANR	1892534	IdentifierDecl	tmp_zv		1892451	0					
ANR	1892535	IdentifierDeclType	zval		1892451	0					
ANR	1892536	Identifier	tmp_zv		1892451	1					
ANR	1892537	IdentifierDecl	zval_copy		1892451	1					
ANR	1892538	IdentifierDeclType	zval		1892451	0					
ANR	1892539	Identifier	zval_copy		1892451	1					
ANR	1892540	IdentifierDeclStatement	zend_string * trim_str ;	449:1:12760:12784	1892451	14	True				
ANR	1892541	IdentifierDecl	* trim_str		1892451	0					
ANR	1892542	IdentifierDeclType	zend_string *		1892451	0					
ANR	1892543	Identifier	trim_str		1892451	1					
ANR	1892544	ExpressionStatement	sxe = Z_SXEOBJ_P ( object )	451:1:12788:12812	1892451	15	True				
ANR	1892545	AssignmentExpression	sxe = Z_SXEOBJ_P ( object )		1892451	0		=			
ANR	1892546	Identifier	sxe		1892451	0					
ANR	1892547	CallExpression	Z_SXEOBJ_P ( object )		1892451	1					
ANR	1892548	Callee	Z_SXEOBJ_P		1892451	0					
ANR	1892549	Identifier	Z_SXEOBJ_P		1892451	0					
ANR	1892550	ArgumentList	object		1892451	1					
ANR	1892551	Argument	object		1892451	0					
ANR	1892552	Identifier	object		1892451	0					
ANR	1892553	IfStatement	if ( ! member || Z_TYPE_P ( member ) == IS_LONG )		1892451	16					
ANR	1892554	Condition	! member || Z_TYPE_P ( member ) == IS_LONG	453:5:12820:12857	1892451	0	True				
ANR	1892555	OrExpression	! member || Z_TYPE_P ( member ) == IS_LONG		1892451	0		||			
ANR	1892556	UnaryOperationExpression	! member		1892451	0					
ANR	1892557	UnaryOperator	!		1892451	0					
ANR	1892558	Identifier	member		1892451	1					
ANR	1892559	EqualityExpression	Z_TYPE_P ( member ) == IS_LONG		1892451	1		==			
ANR	1892560	CallExpression	Z_TYPE_P ( member )		1892451	0					
ANR	1892561	Callee	Z_TYPE_P		1892451	0					
ANR	1892562	Identifier	Z_TYPE_P		1892451	0					
ANR	1892563	ArgumentList	member		1892451	1					
ANR	1892564	Argument	member		1892451	0					
ANR	1892565	Identifier	member		1892451	0					
ANR	1892566	Identifier	IS_LONG		1892451	1					
ANR	1892567	CompoundStatement		20:45:482:482	1892451	1					
ANR	1892568	IfStatement	if ( sxe -> iter . type != SXE_ITER_ATTRLIST )		1892451	0					
ANR	1892569	Condition	sxe -> iter . type != SXE_ITER_ATTRLIST	454:6:12868:12902	1892451	0	True				
ANR	1892570	EqualityExpression	sxe -> iter . type != SXE_ITER_ATTRLIST		1892451	0		!=			
ANR	1892571	MemberAccess	sxe -> iter . type		1892451	0					
ANR	1892572	PtrMemberAccess	sxe -> iter		1892451	0					
ANR	1892573	Identifier	sxe		1892451	0					
ANR	1892574	Identifier	iter		1892451	1					
ANR	1892575	Identifier	type		1892451	1					
ANR	1892576	Identifier	SXE_ITER_ATTRLIST		1892451	1					
ANR	1892577	CompoundStatement		21:43:527:527	1892451	1					
ANR	1892578	ExpressionStatement	attribs = 0	455:3:12910:12921	1892451	0	True				
ANR	1892579	AssignmentExpression	attribs = 0		1892451	0		=			
ANR	1892580	Identifier	attribs		1892451	0					
ANR	1892581	PrimaryExpression	0		1892451	1					
ANR	1892582	ExpressionStatement	elements = 1	456:3:12926:12938	1892451	1	True				
ANR	1892583	AssignmentExpression	elements = 1		1892451	0		=			
ANR	1892584	Identifier	elements		1892451	0					
ANR	1892585	PrimaryExpression	1		1892451	1					
ANR	1892586	ElseStatement	else		1892451	0					
ANR	1892587	IfStatement	if ( ! member )		1892451	0					
ANR	1892588	Condition	! member	457:13:12953:12959	1892451	0	True				
ANR	1892589	UnaryOperationExpression	! member		1892451	0					
ANR	1892590	UnaryOperator	!		1892451	0					
ANR	1892591	Identifier	member		1892451	1					
ANR	1892592	CompoundStatement		24:22:584:584	1892451	1					
ANR	1892593	ExpressionStatement	"php_error_docref ( NULL , E_ERROR , ""Cannot create unnamed attribute"" )"	462:3:13131:13197	1892451	0	True				
ANR	1892594	CallExpression	"php_error_docref ( NULL , E_ERROR , ""Cannot create unnamed attribute"" )"		1892451	0					
ANR	1892595	Callee	php_error_docref		1892451	0					
ANR	1892596	Identifier	php_error_docref		1892451	0					
ANR	1892597	ArgumentList	NULL		1892451	1					
ANR	1892598	Argument	NULL		1892451	0					
ANR	1892599	Identifier	NULL		1892451	0					
ANR	1892600	Argument	E_ERROR		1892451	1					
ANR	1892601	Identifier	E_ERROR		1892451	0					
ANR	1892602	Argument	"""Cannot create unnamed attribute"""		1892451	2					
ANR	1892603	PrimaryExpression	"""Cannot create unnamed attribute"""		1892451	0					
ANR	1892604	ReturnStatement	return FAILURE ;	463:3:13202:13216	1892451	1	True				
ANR	1892605	Identifier	FAILURE		1892451	0					
ANR	1892606	ElseStatement	else		1892451	0					
ANR	1892607	CompoundStatement		32:8:852:852	1892451	0					
ANR	1892608	IfStatement	if ( Z_TYPE_P ( member ) != IS_STRING )		1892451	0					
ANR	1892609	Condition	Z_TYPE_P ( member ) != IS_STRING	466:6:13238:13266	1892451	0	True				
ANR	1892610	EqualityExpression	Z_TYPE_P ( member ) != IS_STRING		1892451	0		!=			
ANR	1892611	CallExpression	Z_TYPE_P ( member )		1892451	0					
ANR	1892612	Callee	Z_TYPE_P		1892451	0					
ANR	1892613	Identifier	Z_TYPE_P		1892451	0					
ANR	1892614	ArgumentList	member		1892451	1					
ANR	1892615	Argument	member		1892451	0					
ANR	1892616	Identifier	member		1892451	0					
ANR	1892617	Identifier	IS_STRING		1892451	1					
ANR	1892618	CompoundStatement		33:37:891:891	1892451	1					
ANR	1892619	ExpressionStatement	trim_str = zval_get_string ( member )	467:3:13274:13308	1892451	0	True				
ANR	1892620	AssignmentExpression	trim_str = zval_get_string ( member )		1892451	0		=			
ANR	1892621	Identifier	trim_str		1892451	0					
ANR	1892622	CallExpression	zval_get_string ( member )		1892451	1					
ANR	1892623	Callee	zval_get_string		1892451	0					
ANR	1892624	Identifier	zval_get_string		1892451	0					
ANR	1892625	ArgumentList	member		1892451	1					
ANR	1892626	Argument	member		1892451	0					
ANR	1892627	Identifier	member		1892451	0					
ANR	1892628	ExpressionStatement	"ZVAL_STR ( & tmp_zv , php_trim ( trim_str , NULL , 0 , 3 ) )"	468:3:13313:13362	1892451	1	True				
ANR	1892629	CallExpression	"ZVAL_STR ( & tmp_zv , php_trim ( trim_str , NULL , 0 , 3 ) )"		1892451	0					
ANR	1892630	Callee	ZVAL_STR		1892451	0					
ANR	1892631	Identifier	ZVAL_STR		1892451	0					
ANR	1892632	ArgumentList	& tmp_zv		1892451	1					
ANR	1892633	Argument	& tmp_zv		1892451	0					
ANR	1892634	UnaryOperationExpression	& tmp_zv		1892451	0					
ANR	1892635	UnaryOperator	&		1892451	0					
ANR	1892636	Identifier	tmp_zv		1892451	1					
ANR	1892637	Argument	"php_trim ( trim_str , NULL , 0 , 3 )"		1892451	1					
ANR	1892638	CallExpression	"php_trim ( trim_str , NULL , 0 , 3 )"		1892451	0					
ANR	1892639	Callee	php_trim		1892451	0					
ANR	1892640	Identifier	php_trim		1892451	0					
ANR	1892641	ArgumentList	trim_str		1892451	1					
ANR	1892642	Argument	trim_str		1892451	0					
ANR	1892643	Identifier	trim_str		1892451	0					
ANR	1892644	Argument	NULL		1892451	1					
ANR	1892645	Identifier	NULL		1892451	0					
ANR	1892646	Argument	0		1892451	2					
ANR	1892647	PrimaryExpression	0		1892451	0					
ANR	1892648	Argument	3		1892451	3					
ANR	1892649	PrimaryExpression	3		1892451	0					
ANR	1892650	ExpressionStatement	zend_string_release ( trim_str )	469:3:13367:13396	1892451	2	True				
ANR	1892651	CallExpression	zend_string_release ( trim_str )		1892451	0					
ANR	1892652	Callee	zend_string_release		1892451	0					
ANR	1892653	Identifier	zend_string_release		1892451	0					
ANR	1892654	ArgumentList	trim_str		1892451	1					
ANR	1892655	Argument	trim_str		1892451	0					
ANR	1892656	Identifier	trim_str		1892451	0					
ANR	1892657	ExpressionStatement	member = & tmp_zv	470:3:13401:13417	1892451	3	True				
ANR	1892658	AssignmentExpression	member = & tmp_zv		1892451	0		=			
ANR	1892659	Identifier	member		1892451	0					
ANR	1892660	UnaryOperationExpression	& tmp_zv		1892451	1					
ANR	1892661	UnaryOperator	&		1892451	0					
ANR	1892662	Identifier	tmp_zv		1892451	1					
ANR	1892663	IfStatement	if ( ! Z_STRLEN_P ( member ) )		1892451	1					
ANR	1892664	Condition	! Z_STRLEN_P ( member )	473:6:13430:13448	1892451	0	True				
ANR	1892665	UnaryOperationExpression	! Z_STRLEN_P ( member )		1892451	0					
ANR	1892666	UnaryOperator	!		1892451	0					
ANR	1892667	CallExpression	Z_STRLEN_P ( member )		1892451	1					
ANR	1892668	Callee	Z_STRLEN_P		1892451	0					
ANR	1892669	Identifier	Z_STRLEN_P		1892451	0					
ANR	1892670	ArgumentList	member		1892451	1					
ANR	1892671	Argument	member		1892451	0					
ANR	1892672	Identifier	member		1892451	0					
ANR	1892673	CompoundStatement		40:27:1073:1073	1892451	1					
ANR	1892674	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Cannot write or create unnamed %s"" , attribs ? ""attribute"" : ""element"" )"	474:3:13456:13561	1892451	0	True				
ANR	1892675	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Cannot write or create unnamed %s"" , attribs ? ""attribute"" : ""element"" )"		1892451	0					
ANR	1892676	Callee	php_error_docref		1892451	0					
ANR	1892677	Identifier	php_error_docref		1892451	0					
ANR	1892678	ArgumentList	NULL		1892451	1					
ANR	1892679	Argument	NULL		1892451	0					
ANR	1892680	Identifier	NULL		1892451	0					
ANR	1892681	Argument	E_WARNING		1892451	1					
ANR	1892682	Identifier	E_WARNING		1892451	0					
ANR	1892683	Argument	"""Cannot write or create unnamed %s"""		1892451	2					
ANR	1892684	PrimaryExpression	"""Cannot write or create unnamed %s"""		1892451	0					
ANR	1892685	Argument	"attribs ? ""attribute"" : ""element"""		1892451	3					
ANR	1892686	ConditionalExpression	"attribs ? ""attribute"" : ""element"""		1892451	0					
ANR	1892687	Condition	attribs		1892451	0					
ANR	1892688	Identifier	attribs		1892451	0					
ANR	1892689	PrimaryExpression	"""attribute"""		1892451	1					
ANR	1892690	PrimaryExpression	"""element"""		1892451	2					
ANR	1892691	IfStatement	if ( member == & tmp_zv )		1892451	1					
ANR	1892692	Condition	member == & tmp_zv	475:7:13570:13586	1892451	0	True				
ANR	1892693	EqualityExpression	member == & tmp_zv		1892451	0		==			
ANR	1892694	Identifier	member		1892451	0					
ANR	1892695	UnaryOperationExpression	& tmp_zv		1892451	1					
ANR	1892696	UnaryOperator	&		1892451	0					
ANR	1892697	Identifier	tmp_zv		1892451	1					
ANR	1892698	CompoundStatement		42:26:1211:1211	1892451	1					
ANR	1892699	ExpressionStatement	zval_dtor ( & tmp_zv )	476:4:13595:13613	1892451	0	True				
ANR	1892700	CallExpression	zval_dtor ( & tmp_zv )		1892451	0					
ANR	1892701	Callee	zval_dtor		1892451	0					
ANR	1892702	Identifier	zval_dtor		1892451	0					
ANR	1892703	ArgumentList	& tmp_zv		1892451	1					
ANR	1892704	Argument	& tmp_zv		1892451	0					
ANR	1892705	UnaryOperationExpression	& tmp_zv		1892451	0					
ANR	1892706	UnaryOperator	&		1892451	0					
ANR	1892707	Identifier	tmp_zv		1892451	1					
ANR	1892708	ReturnStatement	return FAILURE ;	478:3:13623:13637	1892451	2	True				
ANR	1892709	Identifier	FAILURE		1892451	0					
ANR	1892710	ExpressionStatement	"GET_NODE ( sxe , node )"	482:1:13648:13667	1892451	17	True				
ANR	1892711	CallExpression	"GET_NODE ( sxe , node )"		1892451	0					
ANR	1892712	Callee	GET_NODE		1892451	0					
ANR	1892713	Identifier	GET_NODE		1892451	0					
ANR	1892714	ArgumentList	sxe		1892451	1					
ANR	1892715	Argument	sxe		1892451	0					
ANR	1892716	Identifier	sxe		1892451	0					
ANR	1892717	Argument	node		1892451	1					
ANR	1892718	Identifier	node		1892451	0					
ANR	1892719	IfStatement	if ( sxe -> iter . type == SXE_ITER_ATTRLIST )		1892451	18					
ANR	1892720	Condition	sxe -> iter . type == SXE_ITER_ATTRLIST	484:5:13675:13709	1892451	0	True				
ANR	1892721	EqualityExpression	sxe -> iter . type == SXE_ITER_ATTRLIST		1892451	0		==			
ANR	1892722	MemberAccess	sxe -> iter . type		1892451	0					
ANR	1892723	PtrMemberAccess	sxe -> iter		1892451	0					
ANR	1892724	Identifier	sxe		1892451	0					
ANR	1892725	Identifier	iter		1892451	1					
ANR	1892726	Identifier	type		1892451	1					
ANR	1892727	Identifier	SXE_ITER_ATTRLIST		1892451	1					
ANR	1892728	CompoundStatement		51:42:1334:1334	1892451	1					
ANR	1892729	ExpressionStatement	attribs = 1	485:2:13716:13727	1892451	0	True				
ANR	1892730	AssignmentExpression	attribs = 1		1892451	0		=			
ANR	1892731	Identifier	attribs		1892451	0					
ANR	1892732	PrimaryExpression	1		1892451	1					
ANR	1892733	ExpressionStatement	elements = 0	486:2:13731:13743	1892451	1	True				
ANR	1892734	AssignmentExpression	elements = 0		1892451	0		=			
ANR	1892735	Identifier	elements		1892451	0					
ANR	1892736	PrimaryExpression	0		1892451	1					
ANR	1892737	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , node )"	487:2:13747:13787	1892451	2	True				
ANR	1892738	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , node )"		1892451	0		=			
ANR	1892739	Identifier	node		1892451	0					
ANR	1892740	CallExpression	"php_sxe_get_first_node ( sxe , node )"		1892451	1					
ANR	1892741	Callee	php_sxe_get_first_node		1892451	0					
ANR	1892742	Identifier	php_sxe_get_first_node		1892451	0					
ANR	1892743	ArgumentList	sxe		1892451	1					
ANR	1892744	Argument	sxe		1892451	0					
ANR	1892745	Identifier	sxe		1892451	0					
ANR	1892746	Argument	node		1892451	1					
ANR	1892747	Identifier	node		1892451	0					
ANR	1892748	ExpressionStatement	attr = ( xmlAttrPtr ) node	488:2:13791:13814	1892451	3	True				
ANR	1892749	AssignmentExpression	attr = ( xmlAttrPtr ) node		1892451	0		=			
ANR	1892750	Identifier	attr		1892451	0					
ANR	1892751	CastExpression	( xmlAttrPtr ) node		1892451	1					
ANR	1892752	CastTarget	xmlAttrPtr		1892451	0					
ANR	1892753	Identifier	node		1892451	1					
ANR	1892754	ExpressionStatement	test = sxe -> iter . name != NULL	489:2:13818:13847	1892451	4	True				
ANR	1892755	AssignmentExpression	test = sxe -> iter . name != NULL		1892451	0		=			
ANR	1892756	Identifier	test		1892451	0					
ANR	1892757	EqualityExpression	sxe -> iter . name != NULL		1892451	1		!=			
ANR	1892758	MemberAccess	sxe -> iter . name		1892451	0					
ANR	1892759	PtrMemberAccess	sxe -> iter		1892451	0					
ANR	1892760	Identifier	sxe		1892451	0					
ANR	1892761	Identifier	iter		1892451	1					
ANR	1892762	Identifier	name		1892451	1					
ANR	1892763	Identifier	NULL		1892451	1					
ANR	1892764	ElseStatement	else		1892451	0					
ANR	1892765	IfStatement	if ( sxe -> iter . type != SXE_ITER_CHILD )		1892451	0					
ANR	1892766	Condition	sxe -> iter . type != SXE_ITER_CHILD	490:12:13861:13892	1892451	0	True				
ANR	1892767	EqualityExpression	sxe -> iter . type != SXE_ITER_CHILD		1892451	0		!=			
ANR	1892768	MemberAccess	sxe -> iter . type		1892451	0					
ANR	1892769	PtrMemberAccess	sxe -> iter		1892451	0					
ANR	1892770	Identifier	sxe		1892451	0					
ANR	1892771	Identifier	iter		1892451	1					
ANR	1892772	Identifier	type		1892451	1					
ANR	1892773	Identifier	SXE_ITER_CHILD		1892451	1					
ANR	1892774	CompoundStatement		57:46:1517:1517	1892451	1					
ANR	1892775	ExpressionStatement	mynode = node	491:2:13899:13912	1892451	0	True				
ANR	1892776	AssignmentExpression	mynode = node		1892451	0		=			
ANR	1892777	Identifier	mynode		1892451	0					
ANR	1892778	Identifier	node		1892451	1					
ANR	1892779	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , node )"	492:2:13916:13956	1892451	1	True				
ANR	1892780	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , node )"		1892451	0		=			
ANR	1892781	Identifier	node		1892451	0					
ANR	1892782	CallExpression	"php_sxe_get_first_node ( sxe , node )"		1892451	1					
ANR	1892783	Callee	php_sxe_get_first_node		1892451	0					
ANR	1892784	Identifier	php_sxe_get_first_node		1892451	0					
ANR	1892785	ArgumentList	sxe		1892451	1					
ANR	1892786	Argument	sxe		1892451	0					
ANR	1892787	Identifier	sxe		1892451	0					
ANR	1892788	Argument	node		1892451	1					
ANR	1892789	Identifier	node		1892451	0					
ANR	1892790	ExpressionStatement	attr = node ? node -> properties : NULL	493:2:13960:13997	1892451	2	True				
ANR	1892791	AssignmentExpression	attr = node ? node -> properties : NULL		1892451	0		=			
ANR	1892792	Identifier	attr		1892451	0					
ANR	1892793	ConditionalExpression	node ? node -> properties : NULL		1892451	1					
ANR	1892794	Condition	node		1892451	0					
ANR	1892795	Identifier	node		1892451	0					
ANR	1892796	PtrMemberAccess	node -> properties		1892451	1					
ANR	1892797	Identifier	node		1892451	0					
ANR	1892798	Identifier	properties		1892451	1					
ANR	1892799	Identifier	NULL		1892451	2					
ANR	1892800	ExpressionStatement	test = 0	494:2:14001:14009	1892451	3	True				
ANR	1892801	AssignmentExpression	test = 0		1892451	0		=			
ANR	1892802	Identifier	test		1892451	0					
ANR	1892803	PrimaryExpression	0		1892451	1					
ANR	1892804	IfStatement	if ( ! member && node && node -> parent && node -> parent -> type == XML_DOCUMENT_NODE )		1892451	4					
ANR	1892805	Condition	! member && node && node -> parent && node -> parent -> type == XML_DOCUMENT_NODE	495:6:14017:14096	1892451	0	True				
ANR	1892806	AndExpression	! member && node && node -> parent && node -> parent -> type == XML_DOCUMENT_NODE		1892451	0		&&			
ANR	1892807	UnaryOperationExpression	! member		1892451	0					
ANR	1892808	UnaryOperator	!		1892451	0					
ANR	1892809	Identifier	member		1892451	1					
ANR	1892810	AndExpression	node && node -> parent && node -> parent -> type == XML_DOCUMENT_NODE		1892451	1		&&			
ANR	1892811	Identifier	node		1892451	0					
ANR	1892812	AndExpression	node -> parent && node -> parent -> type == XML_DOCUMENT_NODE		1892451	1		&&			
ANR	1892813	PtrMemberAccess	node -> parent		1892451	0					
ANR	1892814	Identifier	node		1892451	0					
ANR	1892815	Identifier	parent		1892451	1					
ANR	1892816	EqualityExpression	node -> parent -> type == XML_DOCUMENT_NODE		1892451	1		==			
ANR	1892817	PtrMemberAccess	node -> parent -> type		1892451	0					
ANR	1892818	PtrMemberAccess	node -> parent		1892451	0					
ANR	1892819	Identifier	node		1892451	0					
ANR	1892820	Identifier	parent		1892451	1					
ANR	1892821	Identifier	type		1892451	1					
ANR	1892822	Identifier	XML_DOCUMENT_NODE		1892451	1					
ANR	1892823	CompoundStatement		63:47:1721:1721	1892451	1					
ANR	1892824	ExpressionStatement	"php_error_docref ( NULL , E_ERROR , ""Cannot create unnamed attribute"" )"	501:3:14268:14334	1892451	0	True				
ANR	1892825	CallExpression	"php_error_docref ( NULL , E_ERROR , ""Cannot create unnamed attribute"" )"		1892451	0					
ANR	1892826	Callee	php_error_docref		1892451	0					
ANR	1892827	Identifier	php_error_docref		1892451	0					
ANR	1892828	ArgumentList	NULL		1892451	1					
ANR	1892829	Argument	NULL		1892451	0					
ANR	1892830	Identifier	NULL		1892451	0					
ANR	1892831	Argument	E_ERROR		1892451	1					
ANR	1892832	Identifier	E_ERROR		1892451	0					
ANR	1892833	Argument	"""Cannot create unnamed attribute"""		1892451	2					
ANR	1892834	PrimaryExpression	"""Cannot create unnamed attribute"""		1892451	0					
ANR	1892835	ReturnStatement	return FAILURE ;	502:3:14339:14353	1892451	1	True				
ANR	1892836	Identifier	FAILURE		1892451	0					
ANR	1892837	IfStatement	if ( attribs && ! node && sxe -> iter . type == SXE_ITER_ELEMENT )		1892451	5					
ANR	1892838	Condition	attribs && ! node && sxe -> iter . type == SXE_ITER_ELEMENT	504:6:14365:14418	1892451	0	True				
ANR	1892839	AndExpression	attribs && ! node && sxe -> iter . type == SXE_ITER_ELEMENT		1892451	0		&&			
ANR	1892840	Identifier	attribs		1892451	0					
ANR	1892841	AndExpression	! node && sxe -> iter . type == SXE_ITER_ELEMENT		1892451	1		&&			
ANR	1892842	UnaryOperationExpression	! node		1892451	0					
ANR	1892843	UnaryOperator	!		1892451	0					
ANR	1892844	Identifier	node		1892451	1					
ANR	1892845	EqualityExpression	sxe -> iter . type == SXE_ITER_ELEMENT		1892451	1		==			
ANR	1892846	MemberAccess	sxe -> iter . type		1892451	0					
ANR	1892847	PtrMemberAccess	sxe -> iter		1892451	0					
ANR	1892848	Identifier	sxe		1892451	0					
ANR	1892849	Identifier	iter		1892451	1					
ANR	1892850	Identifier	type		1892451	1					
ANR	1892851	Identifier	SXE_ITER_ELEMENT		1892451	1					
ANR	1892852	CompoundStatement		71:62:2043:2043	1892451	1					
ANR	1892853	ExpressionStatement	"node = xmlNewChild ( mynode , mynode -> ns , sxe -> iter . name , NULL )"	505:3:14426:14486	1892451	0	True				
ANR	1892854	AssignmentExpression	"node = xmlNewChild ( mynode , mynode -> ns , sxe -> iter . name , NULL )"		1892451	0		=			
ANR	1892855	Identifier	node		1892451	0					
ANR	1892856	CallExpression	"xmlNewChild ( mynode , mynode -> ns , sxe -> iter . name , NULL )"		1892451	1					
ANR	1892857	Callee	xmlNewChild		1892451	0					
ANR	1892858	Identifier	xmlNewChild		1892451	0					
ANR	1892859	ArgumentList	mynode		1892451	1					
ANR	1892860	Argument	mynode		1892451	0					
ANR	1892861	Identifier	mynode		1892451	0					
ANR	1892862	Argument	mynode -> ns		1892451	1					
ANR	1892863	PtrMemberAccess	mynode -> ns		1892451	0					
ANR	1892864	Identifier	mynode		1892451	0					
ANR	1892865	Identifier	ns		1892451	1					
ANR	1892866	Argument	sxe -> iter . name		1892451	2					
ANR	1892867	MemberAccess	sxe -> iter . name		1892451	0					
ANR	1892868	PtrMemberAccess	sxe -> iter		1892451	0					
ANR	1892869	Identifier	sxe		1892451	0					
ANR	1892870	Identifier	iter		1892451	1					
ANR	1892871	Identifier	name		1892451	1					
ANR	1892872	Argument	NULL		1892451	3					
ANR	1892873	Identifier	NULL		1892451	0					
ANR	1892874	ExpressionStatement	attr = node -> properties	506:3:14491:14514	1892451	1	True				
ANR	1892875	AssignmentExpression	attr = node -> properties		1892451	0		=			
ANR	1892876	Identifier	attr		1892451	0					
ANR	1892877	PtrMemberAccess	node -> properties		1892451	1					
ANR	1892878	Identifier	node		1892451	0					
ANR	1892879	Identifier	properties		1892451	1					
ANR	1892880	ExpressionStatement	mynode = node	510:1:14525:14538	1892451	19	True				
ANR	1892881	AssignmentExpression	mynode = node		1892451	0		=			
ANR	1892882	Identifier	mynode		1892451	0					
ANR	1892883	Identifier	node		1892451	1					
ANR	1892884	IfStatement	if ( value )		1892451	20					
ANR	1892885	Condition	value	512:5:14546:14550	1892451	0	True				
ANR	1892886	Identifier	value		1892451	0					
ANR	1892887	CompoundStatement		79:12:2175:2175	1892451	1					
ANR	1892888	SwitchStatement	switch ( Z_TYPE_P ( value ) )		1892451	0					
ANR	1892889	Condition	Z_TYPE_P ( value )	513:10:14565:14579	1892451	0	True				
ANR	1892890	CallExpression	Z_TYPE_P ( value )		1892451	0					
ANR	1892891	Callee	Z_TYPE_P		1892451	0					
ANR	1892892	Identifier	Z_TYPE_P		1892451	0					
ANR	1892893	ArgumentList	value		1892451	1					
ANR	1892894	Argument	value		1892451	0					
ANR	1892895	Identifier	value		1892451	0					
ANR	1892896	CompoundStatement		80:27:2204:2204	1892451	1					
ANR	1892897	Label	case IS_LONG :	514:3:14587:14599	1892451	0	True				
ANR	1892898	Identifier	IS_LONG		1892451	0					
ANR	1892899	Label	case IS_FALSE :	515:3:14604:14617	1892451	1	True				
ANR	1892900	Identifier	IS_FALSE		1892451	0					
ANR	1892901	Label	case IS_TRUE :	516:3:14622:14634	1892451	2	True				
ANR	1892902	Identifier	IS_TRUE		1892451	0					
ANR	1892903	Label	case IS_DOUBLE :	517:3:14639:14653	1892451	3	True				
ANR	1892904	Identifier	IS_DOUBLE		1892451	0					
ANR	1892905	Label	case IS_NULL :	518:3:14658:14670	1892451	4	True				
ANR	1892906	Identifier	IS_NULL		1892451	0					
ANR	1892907	IfStatement	if ( Z_TYPE_P ( value ) != IS_STRING )		1892451	5					
ANR	1892908	Condition	Z_TYPE_P ( value ) != IS_STRING	519:8:14680:14707	1892451	0	True				
ANR	1892909	EqualityExpression	Z_TYPE_P ( value ) != IS_STRING		1892451	0		!=			
ANR	1892910	CallExpression	Z_TYPE_P ( value )		1892451	0					
ANR	1892911	Callee	Z_TYPE_P		1892451	0					
ANR	1892912	Identifier	Z_TYPE_P		1892451	0					
ANR	1892913	ArgumentList	value		1892451	1					
ANR	1892914	Argument	value		1892451	0					
ANR	1892915	Identifier	value		1892451	0					
ANR	1892916	Identifier	IS_STRING		1892451	1					
ANR	1892917	CompoundStatement		86:38:2332:2332	1892451	1					
ANR	1892918	ExpressionStatement	"ZVAL_COPY ( & zval_copy , value )"	520:5:14717:14745	1892451	0	True				
ANR	1892919	CallExpression	"ZVAL_COPY ( & zval_copy , value )"		1892451	0					
ANR	1892920	Callee	ZVAL_COPY		1892451	0					
ANR	1892921	Identifier	ZVAL_COPY		1892451	0					
ANR	1892922	ArgumentList	& zval_copy		1892451	1					
ANR	1892923	Argument	& zval_copy		1892451	0					
ANR	1892924	UnaryOperationExpression	& zval_copy		1892451	0					
ANR	1892925	UnaryOperator	&		1892451	0					
ANR	1892926	Identifier	zval_copy		1892451	1					
ANR	1892927	Argument	value		1892451	1					
ANR	1892928	Identifier	value		1892451	0					
ANR	1892929	ExpressionStatement	value = & zval_copy	521:5:14752:14770	1892451	1	True				
ANR	1892930	AssignmentExpression	value = & zval_copy		1892451	0		=			
ANR	1892931	Identifier	value		1892451	0					
ANR	1892932	UnaryOperationExpression	& zval_copy		1892451	1					
ANR	1892933	UnaryOperator	&		1892451	0					
ANR	1892934	Identifier	zval_copy		1892451	1					
ANR	1892935	ExpressionStatement	convert_to_string ( value )	522:5:14777:14801	1892451	2	True				
ANR	1892936	CallExpression	convert_to_string ( value )		1892451	0					
ANR	1892937	Callee	convert_to_string		1892451	0					
ANR	1892938	Identifier	convert_to_string		1892451	0					
ANR	1892939	ArgumentList	value		1892451	1					
ANR	1892940	Argument	value		1892451	0					
ANR	1892941	Identifier	value		1892451	0					
ANR	1892942	ExpressionStatement	new_value = 1	523:5:14808:14821	1892451	3	True				
ANR	1892943	AssignmentExpression	new_value = 1		1892451	0		=			
ANR	1892944	Identifier	new_value		1892451	0					
ANR	1892945	PrimaryExpression	1		1892451	1					
ANR	1892946	BreakStatement	break ;	525:4:14833:14838	1892451	6	True				
ANR	1892947	Label	case IS_STRING :	526:3:14843:14857	1892451	7	True				
ANR	1892948	Identifier	IS_STRING		1892451	0					
ANR	1892949	BreakStatement	break ;	527:4:14863:14868	1892451	8	True				
ANR	1892950	Label	case IS_OBJECT :	528:3:14873:14887	1892451	9	True				
ANR	1892951	Identifier	IS_OBJECT		1892451	0					
ANR	1892952	IfStatement	if ( Z_OBJCE_P ( value ) == sxe_class_entry )		1892451	10					
ANR	1892953	Condition	Z_OBJCE_P ( value ) == sxe_class_entry	529:8:14897:14931	1892451	0	True				
ANR	1892954	EqualityExpression	Z_OBJCE_P ( value ) == sxe_class_entry		1892451	0		==			
ANR	1892955	CallExpression	Z_OBJCE_P ( value )		1892451	0					
ANR	1892956	Callee	Z_OBJCE_P		1892451	0					
ANR	1892957	Identifier	Z_OBJCE_P		1892451	0					
ANR	1892958	ArgumentList	value		1892451	1					
ANR	1892959	Argument	value		1892451	0					
ANR	1892960	Identifier	value		1892451	0					
ANR	1892961	Identifier	sxe_class_entry		1892451	1					
ANR	1892962	CompoundStatement		96:45:2556:2556	1892451	1					
ANR	1892963	ExpressionStatement	"value = sxe_get_value ( value , & zval_copy )"	530:5:14941:14981	1892451	0	True				
ANR	1892964	AssignmentExpression	"value = sxe_get_value ( value , & zval_copy )"		1892451	0		=			
ANR	1892965	Identifier	value		1892451	0					
ANR	1892966	CallExpression	"sxe_get_value ( value , & zval_copy )"		1892451	1					
ANR	1892967	Callee	sxe_get_value		1892451	0					
ANR	1892968	Identifier	sxe_get_value		1892451	0					
ANR	1892969	ArgumentList	value		1892451	1					
ANR	1892970	Argument	value		1892451	0					
ANR	1892971	Identifier	value		1892451	0					
ANR	1892972	Argument	& zval_copy		1892451	1					
ANR	1892973	UnaryOperationExpression	& zval_copy		1892451	0					
ANR	1892974	UnaryOperator	&		1892451	0					
ANR	1892975	Identifier	zval_copy		1892451	1					
ANR	1892976	ExpressionStatement	new_value = 1	531:5:14988:15001	1892451	1	True				
ANR	1892977	AssignmentExpression	new_value = 1		1892451	0		=			
ANR	1892978	Identifier	new_value		1892451	0					
ANR	1892979	PrimaryExpression	1		1892451	1					
ANR	1892980	BreakStatement	break ;	532:5:15008:15013	1892451	2	True				
ANR	1892981	Label	default :	535:3:15065:15072	1892451	11	True				
ANR	1892982	Identifier	default		1892451	0					
ANR	1892983	IfStatement	if ( member == & tmp_zv )		1892451	12					
ANR	1892984	Condition	member == & tmp_zv	536:8:15082:15098	1892451	0	True				
ANR	1892985	EqualityExpression	member == & tmp_zv		1892451	0		==			
ANR	1892986	Identifier	member		1892451	0					
ANR	1892987	UnaryOperationExpression	& tmp_zv		1892451	1					
ANR	1892988	UnaryOperator	&		1892451	0					
ANR	1892989	Identifier	tmp_zv		1892451	1					
ANR	1892990	CompoundStatement		103:27:2723:2723	1892451	1					
ANR	1892991	ExpressionStatement	zval_dtor ( & tmp_zv )	537:5:15108:15126	1892451	0	True				
ANR	1892992	CallExpression	zval_dtor ( & tmp_zv )		1892451	0					
ANR	1892993	Callee	zval_dtor		1892451	0					
ANR	1892994	Identifier	zval_dtor		1892451	0					
ANR	1892995	ArgumentList	& tmp_zv		1892451	1					
ANR	1892996	Argument	& tmp_zv		1892451	0					
ANR	1892997	UnaryOperationExpression	& tmp_zv		1892451	0					
ANR	1892998	UnaryOperator	&		1892451	0					
ANR	1892999	Identifier	tmp_zv		1892451	1					
ANR	1893000	ExpressionStatement	"zend_error ( E_WARNING , ""It is not yet possible to assign complex types to %s"" , attribs ? ""attributes"" : ""properties"" )"	539:4:15138:15254	1892451	13	True				
ANR	1893001	CallExpression	"zend_error ( E_WARNING , ""It is not yet possible to assign complex types to %s"" , attribs ? ""attributes"" : ""properties"" )"		1892451	0					
ANR	1893002	Callee	zend_error		1892451	0					
ANR	1893003	Identifier	zend_error		1892451	0					
ANR	1893004	ArgumentList	E_WARNING		1892451	1					
ANR	1893005	Argument	E_WARNING		1892451	0					
ANR	1893006	Identifier	E_WARNING		1892451	0					
ANR	1893007	Argument	"""It is not yet possible to assign complex types to %s"""		1892451	1					
ANR	1893008	PrimaryExpression	"""It is not yet possible to assign complex types to %s"""		1892451	0					
ANR	1893009	Argument	"attribs ? ""attributes"" : ""properties"""		1892451	2					
ANR	1893010	ConditionalExpression	"attribs ? ""attributes"" : ""properties"""		1892451	0					
ANR	1893011	Condition	attribs		1892451	0					
ANR	1893012	Identifier	attribs		1892451	0					
ANR	1893013	PrimaryExpression	"""attributes"""		1892451	1					
ANR	1893014	PrimaryExpression	"""properties"""		1892451	2					
ANR	1893015	ReturnStatement	return FAILURE ;	540:4:15260:15274	1892451	14	True				
ANR	1893016	Identifier	FAILURE		1892451	0					
ANR	1893017	IfStatement	if ( node )		1892451	21					
ANR	1893018	Condition	node	544:5:15289:15292	1892451	0	True				
ANR	1893019	Identifier	node		1892451	0					
ANR	1893020	CompoundStatement		111:11:2917:2917	1892451	1					
ANR	1893021	IfStatement	if ( attribs )		1892451	0					
ANR	1893022	Condition	attribs	545:6:15303:15309	1892451	0	True				
ANR	1893023	Identifier	attribs		1892451	0					
ANR	1893024	CompoundStatement		112:15:2934:2934	1892451	1					
ANR	1893025	IfStatement	if ( Z_TYPE_P ( member ) == IS_LONG )		1892451	0					
ANR	1893026	Condition	Z_TYPE_P ( member ) == IS_LONG	546:7:15321:15347	1892451	0	True				
ANR	1893027	EqualityExpression	Z_TYPE_P ( member ) == IS_LONG		1892451	0		==			
ANR	1893028	CallExpression	Z_TYPE_P ( member )		1892451	0					
ANR	1893029	Callee	Z_TYPE_P		1892451	0					
ANR	1893030	Identifier	Z_TYPE_P		1892451	0					
ANR	1893031	ArgumentList	member		1892451	1					
ANR	1893032	Argument	member		1892451	0					
ANR	1893033	Identifier	member		1892451	0					
ANR	1893034	Identifier	IS_LONG		1892451	1					
ANR	1893035	CompoundStatement		113:36:2972:2972	1892451	1					
ANR	1893036	WhileStatement	while ( attr && nodendx <= Z_LVAL_P ( member ) )		1892451	0					
ANR	1893037	Condition	attr && nodendx <= Z_LVAL_P ( member )	547:11:15363:15397	1892451	0	True				
ANR	1893038	AndExpression	attr && nodendx <= Z_LVAL_P ( member )		1892451	0		&&			
ANR	1893039	Identifier	attr		1892451	0					
ANR	1893040	RelationalExpression	nodendx <= Z_LVAL_P ( member )		1892451	1		<=			
ANR	1893041	Identifier	nodendx		1892451	0					
ANR	1893042	CallExpression	Z_LVAL_P ( member )		1892451	1					
ANR	1893043	Callee	Z_LVAL_P		1892451	0					
ANR	1893044	Identifier	Z_LVAL_P		1892451	0					
ANR	1893045	ArgumentList	member		1892451	1					
ANR	1893046	Argument	member		1892451	0					
ANR	1893047	Identifier	member		1892451	0					
ANR	1893048	CompoundStatement		114:48:3022:3022	1892451	1					
ANR	1893049	IfStatement	"if ( ( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix ) )"		1892451	0					
ANR	1893050	Condition	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	548:9:15411:15535	1892451	0	True				
ANR	1893051	AndExpression	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1892451	0		&&			
ANR	1893052	OrExpression	"! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1892451	0		||			
ANR	1893053	UnaryOperationExpression	! test		1892451	0					
ANR	1893054	UnaryOperator	!		1892451	0					
ANR	1893055	Identifier	test		1892451	1					
ANR	1893056	UnaryOperationExpression	"! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1892451	1					
ANR	1893057	UnaryOperator	!		1892451	0					
ANR	1893058	CallExpression	"xmlStrcmp ( attr -> name , sxe -> iter . name )"		1892451	1					
ANR	1893059	Callee	xmlStrcmp		1892451	0					
ANR	1893060	Identifier	xmlStrcmp		1892451	0					
ANR	1893061	ArgumentList	attr -> name		1892451	1					
ANR	1893062	Argument	attr -> name		1892451	0					
ANR	1893063	PtrMemberAccess	attr -> name		1892451	0					
ANR	1893064	Identifier	attr		1892451	0					
ANR	1893065	Identifier	name		1892451	1					
ANR	1893066	Argument	sxe -> iter . name		1892451	1					
ANR	1893067	MemberAccess	sxe -> iter . name		1892451	0					
ANR	1893068	PtrMemberAccess	sxe -> iter		1892451	0					
ANR	1893069	Identifier	sxe		1892451	0					
ANR	1893070	Identifier	iter		1892451	1					
ANR	1893071	Identifier	name		1892451	1					
ANR	1893072	CallExpression	"match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1892451	1					
ANR	1893073	Callee	match_ns		1892451	0					
ANR	1893074	Identifier	match_ns		1892451	0					
ANR	1893075	ArgumentList	sxe		1892451	1					
ANR	1893076	Argument	sxe		1892451	0					
ANR	1893077	Identifier	sxe		1892451	0					
ANR	1893078	Argument	( xmlNodePtr ) attr		1892451	1					
ANR	1893079	CastExpression	( xmlNodePtr ) attr		1892451	0					
ANR	1893080	CastTarget	xmlNodePtr		1892451	0					
ANR	1893081	Identifier	attr		1892451	1					
ANR	1893082	Argument	sxe -> iter . nsprefix		1892451	2					
ANR	1893083	MemberAccess	sxe -> iter . nsprefix		1892451	0					
ANR	1893084	PtrMemberAccess	sxe -> iter		1892451	0					
ANR	1893085	Identifier	sxe		1892451	0					
ANR	1893086	Identifier	iter		1892451	1					
ANR	1893087	Identifier	nsprefix		1892451	1					
ANR	1893088	Argument	sxe -> iter . isprefix		1892451	3					
ANR	1893089	MemberAccess	sxe -> iter . isprefix		1892451	0					
ANR	1893090	PtrMemberAccess	sxe -> iter		1892451	0					
ANR	1893091	Identifier	sxe		1892451	0					
ANR	1893092	Identifier	iter		1892451	1					
ANR	1893093	Identifier	isprefix		1892451	1					
ANR	1893094	CompoundStatement		115:136:3160:3160	1892451	1					
ANR	1893095	IfStatement	if ( nodendx == Z_LVAL_P ( member ) )		1892451	0					
ANR	1893096	Condition	nodendx == Z_LVAL_P ( member )	549:10:15550:15576	1892451	0	True				
ANR	1893097	EqualityExpression	nodendx == Z_LVAL_P ( member )		1892451	0		==			
ANR	1893098	Identifier	nodendx		1892451	0					
ANR	1893099	CallExpression	Z_LVAL_P ( member )		1892451	1					
ANR	1893100	Callee	Z_LVAL_P		1892451	0					
ANR	1893101	Identifier	Z_LVAL_P		1892451	0					
ANR	1893102	ArgumentList	member		1892451	1					
ANR	1893103	Argument	member		1892451	0					
ANR	1893104	Identifier	member		1892451	0					
ANR	1893105	CompoundStatement		116:39:3201:3201	1892451	1					
ANR	1893106	ExpressionStatement	is_attr = 1	550:7:15588:15599	1892451	0	True				
ANR	1893107	AssignmentExpression	is_attr = 1		1892451	0		=			
ANR	1893108	Identifier	is_attr		1892451	0					
ANR	1893109	PrimaryExpression	1		1892451	1					
ANR	1893110	ExpressionStatement	++ counter	551:7:15608:15617	1892451	1	True				
ANR	1893111	UnaryExpression	++ counter		1892451	0					
ANR	1893112	IncDec	++		1892451	0					
ANR	1893113	Identifier	counter		1892451	1					
ANR	1893114	BreakStatement	break ;	552:7:15626:15631	1892451	2	True				
ANR	1893115	ExpressionStatement	nodendx ++	554:6:15647:15656	1892451	1	True				
ANR	1893116	PostIncDecOperationExpression	nodendx ++		1892451	0					
ANR	1893117	Identifier	nodendx		1892451	0					
ANR	1893118	IncDec	++		1892451	1					
ANR	1893119	ExpressionStatement	attr = attr -> next	556:5:15670:15687	1892451	1	True				
ANR	1893120	AssignmentExpression	attr = attr -> next		1892451	0		=			
ANR	1893121	Identifier	attr		1892451	0					
ANR	1893122	PtrMemberAccess	attr -> next		1892451	1					
ANR	1893123	Identifier	attr		1892451	0					
ANR	1893124	Identifier	next		1892451	1					
ANR	1893125	ElseStatement	else		1892451	0					
ANR	1893126	CompoundStatement		125:10:3327:3327	1892451	0					
ANR	1893127	WhileStatement	while ( attr )		1892451	0					
ANR	1893128	Condition	attr	559:11:15718:15721	1892451	0	True				
ANR	1893129	Identifier	attr		1892451	0					
ANR	1893130	CompoundStatement		126:17:3346:3346	1892451	1					
ANR	1893131	IfStatement	"if ( ( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && ! xmlStrcmp ( attr -> name , ( xmlChar * ) Z_STRVAL_P ( member ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix ) )"		1892451	0					
ANR	1893132	Condition	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && ! xmlStrcmp ( attr -> name , ( xmlChar * ) Z_STRVAL_P ( member ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	560:9:15735:15916	1892451	0	True				
ANR	1893133	AndExpression	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && ! xmlStrcmp ( attr -> name , ( xmlChar * ) Z_STRVAL_P ( member ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1892451	0		&&			
ANR	1893134	OrExpression	"! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1892451	0		||			
ANR	1893135	UnaryOperationExpression	! test		1892451	0					
ANR	1893136	UnaryOperator	!		1892451	0					
ANR	1893137	Identifier	test		1892451	1					
ANR	1893138	UnaryOperationExpression	"! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1892451	1					
ANR	1893139	UnaryOperator	!		1892451	0					
ANR	1893140	CallExpression	"xmlStrcmp ( attr -> name , sxe -> iter . name )"		1892451	1					
ANR	1893141	Callee	xmlStrcmp		1892451	0					
ANR	1893142	Identifier	xmlStrcmp		1892451	0					
ANR	1893143	ArgumentList	attr -> name		1892451	1					
ANR	1893144	Argument	attr -> name		1892451	0					
ANR	1893145	PtrMemberAccess	attr -> name		1892451	0					
ANR	1893146	Identifier	attr		1892451	0					
ANR	1893147	Identifier	name		1892451	1					
ANR	1893148	Argument	sxe -> iter . name		1892451	1					
ANR	1893149	MemberAccess	sxe -> iter . name		1892451	0					
ANR	1893150	PtrMemberAccess	sxe -> iter		1892451	0					
ANR	1893151	Identifier	sxe		1892451	0					
ANR	1893152	Identifier	iter		1892451	1					
ANR	1893153	Identifier	name		1892451	1					
ANR	1893154	AndExpression	"! xmlStrcmp ( attr -> name , ( xmlChar * ) Z_STRVAL_P ( member ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1892451	1		&&			
ANR	1893155	UnaryOperationExpression	"! xmlStrcmp ( attr -> name , ( xmlChar * ) Z_STRVAL_P ( member ) )"		1892451	0					
ANR	1893156	UnaryOperator	!		1892451	0					
ANR	1893157	CallExpression	"xmlStrcmp ( attr -> name , ( xmlChar * ) Z_STRVAL_P ( member ) )"		1892451	1					
ANR	1893158	Callee	xmlStrcmp		1892451	0					
ANR	1893159	Identifier	xmlStrcmp		1892451	0					
ANR	1893160	ArgumentList	attr -> name		1892451	1					
ANR	1893161	Argument	attr -> name		1892451	0					
ANR	1893162	PtrMemberAccess	attr -> name		1892451	0					
ANR	1893163	Identifier	attr		1892451	0					
ANR	1893164	Identifier	name		1892451	1					
ANR	1893165	Argument	( xmlChar * ) Z_STRVAL_P ( member )		1892451	1					
ANR	1893166	CastExpression	( xmlChar * ) Z_STRVAL_P ( member )		1892451	0					
ANR	1893167	CastTarget	xmlChar *		1892451	0					
ANR	1893168	CallExpression	Z_STRVAL_P ( member )		1892451	1					
ANR	1893169	Callee	Z_STRVAL_P		1892451	0					
ANR	1893170	Identifier	Z_STRVAL_P		1892451	0					
ANR	1893171	ArgumentList	member		1892451	1					
ANR	1893172	Argument	member		1892451	0					
ANR	1893173	Identifier	member		1892451	0					
ANR	1893174	CallExpression	"match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1892451	1					
ANR	1893175	Callee	match_ns		1892451	0					
ANR	1893176	Identifier	match_ns		1892451	0					
ANR	1893177	ArgumentList	sxe		1892451	1					
ANR	1893178	Argument	sxe		1892451	0					
ANR	1893179	Identifier	sxe		1892451	0					
ANR	1893180	Argument	( xmlNodePtr ) attr		1892451	1					
ANR	1893181	CastExpression	( xmlNodePtr ) attr		1892451	0					
ANR	1893182	CastTarget	xmlNodePtr		1892451	0					
ANR	1893183	Identifier	attr		1892451	1					
ANR	1893184	Argument	sxe -> iter . nsprefix		1892451	2					
ANR	1893185	MemberAccess	sxe -> iter . nsprefix		1892451	0					
ANR	1893186	PtrMemberAccess	sxe -> iter		1892451	0					
ANR	1893187	Identifier	sxe		1892451	0					
ANR	1893188	Identifier	iter		1892451	1					
ANR	1893189	Identifier	nsprefix		1892451	1					
ANR	1893190	Argument	sxe -> iter . isprefix		1892451	3					
ANR	1893191	MemberAccess	sxe -> iter . isprefix		1892451	0					
ANR	1893192	PtrMemberAccess	sxe -> iter		1892451	0					
ANR	1893193	Identifier	sxe		1892451	0					
ANR	1893194	Identifier	iter		1892451	1					
ANR	1893195	Identifier	isprefix		1892451	1					
ANR	1893196	CompoundStatement		127:193:3541:3541	1892451	1					
ANR	1893197	ExpressionStatement	is_attr = 1	561:6:15927:15938	1892451	0	True				
ANR	1893198	AssignmentExpression	is_attr = 1		1892451	0		=			
ANR	1893199	Identifier	is_attr		1892451	0					
ANR	1893200	PrimaryExpression	1		1892451	1					
ANR	1893201	ExpressionStatement	++ counter	562:6:15946:15955	1892451	1	True				
ANR	1893202	UnaryExpression	++ counter		1892451	0					
ANR	1893203	IncDec	++		1892451	0					
ANR	1893204	Identifier	counter		1892451	1					
ANR	1893205	BreakStatement	break ;	563:6:15963:15968	1892451	2	True				
ANR	1893206	ExpressionStatement	attr = attr -> next	565:5:15982:15999	1892451	1	True				
ANR	1893207	AssignmentExpression	attr = attr -> next		1892451	0		=			
ANR	1893208	Identifier	attr		1892451	0					
ANR	1893209	PtrMemberAccess	attr -> next		1892451	1					
ANR	1893210	Identifier	attr		1892451	0					
ANR	1893211	Identifier	next		1892451	1					
ANR	1893212	IfStatement	if ( elements )		1892451	1					
ANR	1893213	Condition	elements	571:6:16024:16031	1892451	0	True				
ANR	1893214	Identifier	elements		1892451	0					
ANR	1893215	CompoundStatement		138:16:3656:3656	1892451	1					
ANR	1893216	IfStatement	if ( ! member || Z_TYPE_P ( member ) == IS_LONG )		1892451	0					
ANR	1893217	Condition	! member || Z_TYPE_P ( member ) == IS_LONG	572:7:16043:16080	1892451	0	True				
ANR	1893218	OrExpression	! member || Z_TYPE_P ( member ) == IS_LONG		1892451	0		||			
ANR	1893219	UnaryOperationExpression	! member		1892451	0					
ANR	1893220	UnaryOperator	!		1892451	0					
ANR	1893221	Identifier	member		1892451	1					
ANR	1893222	EqualityExpression	Z_TYPE_P ( member ) == IS_LONG		1892451	1		==			
ANR	1893223	CallExpression	Z_TYPE_P ( member )		1892451	0					
ANR	1893224	Callee	Z_TYPE_P		1892451	0					
ANR	1893225	Identifier	Z_TYPE_P		1892451	0					
ANR	1893226	ArgumentList	member		1892451	1					
ANR	1893227	Argument	member		1892451	0					
ANR	1893228	Identifier	member		1892451	0					
ANR	1893229	Identifier	IS_LONG		1892451	1					
ANR	1893230	CompoundStatement		139:47:3705:3705	1892451	1					
ANR	1893231	IfStatement	if ( node -> type == XML_ATTRIBUTE_NODE )		1892451	0					
ANR	1893232	Condition	node -> type == XML_ATTRIBUTE_NODE	573:8:16093:16124	1892451	0	True				
ANR	1893233	EqualityExpression	node -> type == XML_ATTRIBUTE_NODE		1892451	0		==			
ANR	1893234	PtrMemberAccess	node -> type		1892451	0					
ANR	1893235	Identifier	node		1892451	0					
ANR	1893236	Identifier	type		1892451	1					
ANR	1893237	Identifier	XML_ATTRIBUTE_NODE		1892451	1					
ANR	1893238	CompoundStatement		140:42:3749:3749	1892451	1					
ANR	1893239	ExpressionStatement	"php_error_docref ( NULL , E_ERROR , ""Cannot create duplicate attribute"" )"	574:5:16134:16202	1892451	0	True				
ANR	1893240	CallExpression	"php_error_docref ( NULL , E_ERROR , ""Cannot create duplicate attribute"" )"		1892451	0					
ANR	1893241	Callee	php_error_docref		1892451	0					
ANR	1893242	Identifier	php_error_docref		1892451	0					
ANR	1893243	ArgumentList	NULL		1892451	1					
ANR	1893244	Argument	NULL		1892451	0					
ANR	1893245	Identifier	NULL		1892451	0					
ANR	1893246	Argument	E_ERROR		1892451	1					
ANR	1893247	Identifier	E_ERROR		1892451	0					
ANR	1893248	Argument	"""Cannot create duplicate attribute"""		1892451	2					
ANR	1893249	PrimaryExpression	"""Cannot create duplicate attribute"""		1892451	0					
ANR	1893250	ReturnStatement	return FAILURE ;	575:5:16209:16223	1892451	1	True				
ANR	1893251	Identifier	FAILURE		1892451	0					
ANR	1893252	IfStatement	if ( sxe -> iter . type == SXE_ITER_NONE )		1892451	1					
ANR	1893253	Condition	sxe -> iter . type == SXE_ITER_NONE	578:8:16240:16270	1892451	0	True				
ANR	1893254	EqualityExpression	sxe -> iter . type == SXE_ITER_NONE		1892451	0		==			
ANR	1893255	MemberAccess	sxe -> iter . type		1892451	0					
ANR	1893256	PtrMemberAccess	sxe -> iter		1892451	0					
ANR	1893257	Identifier	sxe		1892451	0					
ANR	1893258	Identifier	iter		1892451	1					
ANR	1893259	Identifier	type		1892451	1					
ANR	1893260	Identifier	SXE_ITER_NONE		1892451	1					
ANR	1893261	CompoundStatement		145:41:3895:3895	1892451	1					
ANR	1893262	ExpressionStatement	newnode = node	579:5:16280:16294	1892451	0	True				
ANR	1893263	AssignmentExpression	newnode = node		1892451	0		=			
ANR	1893264	Identifier	newnode		1892451	0					
ANR	1893265	Identifier	node		1892451	1					
ANR	1893266	ExpressionStatement	++ counter	580:5:16301:16310	1892451	1	True				
ANR	1893267	UnaryExpression	++ counter		1892451	0					
ANR	1893268	IncDec	++		1892451	0					
ANR	1893269	Identifier	counter		1892451	1					
ANR	1893270	IfStatement	if ( member && Z_LVAL_P ( member ) > 0 )		1892451	2					
ANR	1893271	Condition	member && Z_LVAL_P ( member ) > 0	581:9:16321:16350	1892451	0	True				
ANR	1893272	AndExpression	member && Z_LVAL_P ( member ) > 0		1892451	0		&&			
ANR	1893273	Identifier	member		1892451	0					
ANR	1893274	RelationalExpression	Z_LVAL_P ( member ) > 0		1892451	1		>			
ANR	1893275	CallExpression	Z_LVAL_P ( member )		1892451	0					
ANR	1893276	Callee	Z_LVAL_P		1892451	0					
ANR	1893277	Identifier	Z_LVAL_P		1892451	0					
ANR	1893278	ArgumentList	member		1892451	1					
ANR	1893279	Argument	member		1892451	0					
ANR	1893280	Identifier	member		1892451	0					
ANR	1893281	PrimaryExpression	0		1892451	1					
ANR	1893282	CompoundStatement		148:41:3975:3975	1892451	1					
ANR	1893283	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Cannot add element %s number %pd when only 0 such elements exist"" , mynode -> name , Z_LVAL_P ( member ) )"	582:6:16361:16494	1892451	0	True				
ANR	1893284	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Cannot add element %s number %pd when only 0 such elements exist"" , mynode -> name , Z_LVAL_P ( member ) )"		1892451	0					
ANR	1893285	Callee	php_error_docref		1892451	0					
ANR	1893286	Identifier	php_error_docref		1892451	0					
ANR	1893287	ArgumentList	NULL		1892451	1					
ANR	1893288	Argument	NULL		1892451	0					
ANR	1893289	Identifier	NULL		1892451	0					
ANR	1893290	Argument	E_WARNING		1892451	1					
ANR	1893291	Identifier	E_WARNING		1892451	0					
ANR	1893292	Argument	"""Cannot add element %s number %pd when only 0 such elements exist"""		1892451	2					
ANR	1893293	PrimaryExpression	"""Cannot add element %s number %pd when only 0 such elements exist"""		1892451	0					
ANR	1893294	Argument	mynode -> name		1892451	3					
ANR	1893295	PtrMemberAccess	mynode -> name		1892451	0					
ANR	1893296	Identifier	mynode		1892451	0					
ANR	1893297	Identifier	name		1892451	1					
ANR	1893298	Argument	Z_LVAL_P ( member )		1892451	4					
ANR	1893299	CallExpression	Z_LVAL_P ( member )		1892451	0					
ANR	1893300	Callee	Z_LVAL_P		1892451	0					
ANR	1893301	Identifier	Z_LVAL_P		1892451	0					
ANR	1893302	ArgumentList	member		1892451	1					
ANR	1893303	Argument	member		1892451	0					
ANR	1893304	Identifier	member		1892451	0					
ANR	1893305	ExpressionStatement	retval = FAILURE	583:6:16502:16518	1892451	1	True				
ANR	1893306	AssignmentExpression	retval = FAILURE		1892451	0		=			
ANR	1893307	Identifier	retval		1892451	0					
ANR	1893308	Identifier	FAILURE		1892451	1					
ANR	1893309	ElseStatement	else		1892451	0					
ANR	1893310	IfStatement	if ( member )		1892451	0					
ANR	1893311	Condition	member	585:15:16542:16547	1892451	0	True				
ANR	1893312	Identifier	member		1892451	0					
ANR	1893313	CompoundStatement		152:23:4172:4172	1892451	1					
ANR	1893314	ExpressionStatement	"newnode = sxe_get_element_by_offset ( sxe , Z_LVAL_P ( member ) , node , & cnt )"	586:5:16557:16627	1892451	0	True				
ANR	1893315	AssignmentExpression	"newnode = sxe_get_element_by_offset ( sxe , Z_LVAL_P ( member ) , node , & cnt )"		1892451	0		=			
ANR	1893316	Identifier	newnode		1892451	0					
ANR	1893317	CallExpression	"sxe_get_element_by_offset ( sxe , Z_LVAL_P ( member ) , node , & cnt )"		1892451	1					
ANR	1893318	Callee	sxe_get_element_by_offset		1892451	0					
ANR	1893319	Identifier	sxe_get_element_by_offset		1892451	0					
ANR	1893320	ArgumentList	sxe		1892451	1					
ANR	1893321	Argument	sxe		1892451	0					
ANR	1893322	Identifier	sxe		1892451	0					
ANR	1893323	Argument	Z_LVAL_P ( member )		1892451	1					
ANR	1893324	CallExpression	Z_LVAL_P ( member )		1892451	0					
ANR	1893325	Callee	Z_LVAL_P		1892451	0					
ANR	1893326	Identifier	Z_LVAL_P		1892451	0					
ANR	1893327	ArgumentList	member		1892451	1					
ANR	1893328	Argument	member		1892451	0					
ANR	1893329	Identifier	member		1892451	0					
ANR	1893330	Argument	node		1892451	2					
ANR	1893331	Identifier	node		1892451	0					
ANR	1893332	Argument	& cnt		1892451	3					
ANR	1893333	UnaryOperationExpression	& cnt		1892451	0					
ANR	1893334	UnaryOperator	&		1892451	0					
ANR	1893335	Identifier	cnt		1892451	1					
ANR	1893336	IfStatement	if ( newnode )		1892451	1					
ANR	1893337	Condition	newnode	587:9:16638:16644	1892451	0	True				
ANR	1893338	Identifier	newnode		1892451	0					
ANR	1893339	CompoundStatement		154:18:4269:4269	1892451	1					
ANR	1893340	ExpressionStatement	++ counter	588:6:16655:16664	1892451	0	True				
ANR	1893341	UnaryExpression	++ counter		1892451	0					
ANR	1893342	IncDec	++		1892451	0					
ANR	1893343	Identifier	counter		1892451	1					
ANR	1893344	ElseStatement	else		1892451	0					
ANR	1893345	CompoundStatement		158:10:4311:4311	1892451	0					
ANR	1893346	ExpressionStatement	node = node -> children	592:4:16695:16716	1892451	0	True				
ANR	1893347	AssignmentExpression	node = node -> children		1892451	0		=			
ANR	1893348	Identifier	node		1892451	0					
ANR	1893349	PtrMemberAccess	node -> children		1892451	1					
ANR	1893350	Identifier	node		1892451	0					
ANR	1893351	Identifier	children		1892451	1					
ANR	1893352	WhileStatement	while ( node )		1892451	1					
ANR	1893353	Condition	node	593:11:16729:16732	1892451	0	True				
ANR	1893354	Identifier	node		1892451	0					
ANR	1893355	CompoundStatement		160:17:4357:4357	1892451	1					
ANR	1893356	ExpressionStatement	SKIP_TEXT ( node )	594:5:16742:16757	1892451	0	True				
ANR	1893357	CallExpression	SKIP_TEXT ( node )		1892451	0					
ANR	1893358	Callee	SKIP_TEXT		1892451	0					
ANR	1893359	Identifier	SKIP_TEXT		1892451	0					
ANR	1893360	ArgumentList	node		1892451	1					
ANR	1893361	Argument	node		1892451	0					
ANR	1893362	Identifier	node		1892451	0					
ANR	1893363	IfStatement	"if ( ! xmlStrcmp ( node -> name , ( xmlChar * ) Z_STRVAL_P ( member ) ) )"		1892451	1					
ANR	1893364	Condition	"! xmlStrcmp ( node -> name , ( xmlChar * ) Z_STRVAL_P ( member ) )"	596:9:16769:16821	1892451	0	True				
ANR	1893365	UnaryOperationExpression	"! xmlStrcmp ( node -> name , ( xmlChar * ) Z_STRVAL_P ( member ) )"		1892451	0					
ANR	1893366	UnaryOperator	!		1892451	0					
ANR	1893367	CallExpression	"xmlStrcmp ( node -> name , ( xmlChar * ) Z_STRVAL_P ( member ) )"		1892451	1					
ANR	1893368	Callee	xmlStrcmp		1892451	0					
ANR	1893369	Identifier	xmlStrcmp		1892451	0					
ANR	1893370	ArgumentList	node -> name		1892451	1					
ANR	1893371	Argument	node -> name		1892451	0					
ANR	1893372	PtrMemberAccess	node -> name		1892451	0					
ANR	1893373	Identifier	node		1892451	0					
ANR	1893374	Identifier	name		1892451	1					
ANR	1893375	Argument	( xmlChar * ) Z_STRVAL_P ( member )		1892451	1					
ANR	1893376	CastExpression	( xmlChar * ) Z_STRVAL_P ( member )		1892451	0					
ANR	1893377	CastTarget	xmlChar *		1892451	0					
ANR	1893378	CallExpression	Z_STRVAL_P ( member )		1892451	1					
ANR	1893379	Callee	Z_STRVAL_P		1892451	0					
ANR	1893380	Identifier	Z_STRVAL_P		1892451	0					
ANR	1893381	ArgumentList	member		1892451	1					
ANR	1893382	Argument	member		1892451	0					
ANR	1893383	Identifier	member		1892451	0					
ANR	1893384	CompoundStatement		163:64:4446:4446	1892451	1					
ANR	1893385	ExpressionStatement	newnode = node	597:6:16832:16846	1892451	0	True				
ANR	1893386	AssignmentExpression	newnode = node		1892451	0		=			
ANR	1893387	Identifier	newnode		1892451	0					
ANR	1893388	Identifier	node		1892451	1					
ANR	1893389	ExpressionStatement	++ counter	598:6:16854:16863	1892451	1	True				
ANR	1893390	UnaryExpression	++ counter		1892451	0					
ANR	1893391	IncDec	++		1892451	0					
ANR	1893392	Identifier	counter		1892451	1					
ANR	1893393	Label	next_iter :	601:0:16873:16882	1892451	2	True				
ANR	1893394	Identifier	next_iter		1892451	0					
ANR	1893395	ExpressionStatement	node = node -> next	602:5:16889:16906	1892451	3	True				
ANR	1893396	AssignmentExpression	node = node -> next		1892451	0		=			
ANR	1893397	Identifier	node		1892451	0					
ANR	1893398	PtrMemberAccess	node -> next		1892451	1					
ANR	1893399	Identifier	node		1892451	0					
ANR	1893400	Identifier	next		1892451	1					
ANR	1893401	IfStatement	if ( counter == 1 )		1892451	2					
ANR	1893402	Condition	counter == 1	607:6:16930:16941	1892451	0	True				
ANR	1893403	EqualityExpression	counter == 1		1892451	0		==			
ANR	1893404	Identifier	counter		1892451	0					
ANR	1893405	PrimaryExpression	1		1892451	1					
ANR	1893406	CompoundStatement		174:20:4566:4566	1892451	1					
ANR	1893407	IfStatement	if ( is_attr )		1892451	0					
ANR	1893408	Condition	is_attr	608:7:16953:16959	1892451	0	True				
ANR	1893409	Identifier	is_attr		1892451	0					
ANR	1893410	CompoundStatement		175:16:4584:4584	1892451	1					
ANR	1893411	ExpressionStatement	newnode = ( xmlNodePtr ) attr	609:4:16968:16995	1892451	0	True				
ANR	1893412	AssignmentExpression	newnode = ( xmlNodePtr ) attr		1892451	0		=			
ANR	1893413	Identifier	newnode		1892451	0					
ANR	1893414	CastExpression	( xmlNodePtr ) attr		1892451	1					
ANR	1893415	CastTarget	xmlNodePtr		1892451	0					
ANR	1893416	Identifier	attr		1892451	1					
ANR	1893417	IfStatement	if ( value )		1892451	1					
ANR	1893418	Condition	value	611:7:17009:17013	1892451	0	True				
ANR	1893419	Identifier	value		1892451	0					
ANR	1893420	CompoundStatement		178:14:4638:4638	1892451	1					
ANR	1893421	WhileStatement	while ( ( tempnode = ( xmlNodePtr ) newnode -> children ) )		1892451	0					
ANR	1893422	Condition	tempnode = ( xmlNodePtr ) newnode -> children	612:11:17029:17071	1892451	0	True				
ANR	1893423	AssignmentExpression	tempnode = ( xmlNodePtr ) newnode -> children		1892451	0		=			
ANR	1893424	Identifier	tempnode		1892451	0					
ANR	1893425	CastExpression	( xmlNodePtr ) newnode -> children		1892451	1					
ANR	1893426	CastTarget	xmlNodePtr		1892451	0					
ANR	1893427	PtrMemberAccess	newnode -> children		1892451	1					
ANR	1893428	Identifier	newnode		1892451	0					
ANR	1893429	Identifier	children		1892451	1					
ANR	1893430	CompoundStatement		179:56:4696:4696	1892451	1					
ANR	1893431	ExpressionStatement	xmlUnlinkNode ( tempnode )	613:5:17081:17104	1892451	0	True				
ANR	1893432	CallExpression	xmlUnlinkNode ( tempnode )		1892451	0					
ANR	1893433	Callee	xmlUnlinkNode		1892451	0					
ANR	1893434	Identifier	xmlUnlinkNode		1892451	0					
ANR	1893435	ArgumentList	tempnode		1892451	1					
ANR	1893436	Argument	tempnode		1892451	0					
ANR	1893437	Identifier	tempnode		1892451	0					
ANR	1893438	ExpressionStatement	php_libxml_node_free_resource ( ( xmlNodePtr ) tempnode )	614:5:17111:17163	1892451	1	True				
ANR	1893439	CallExpression	php_libxml_node_free_resource ( ( xmlNodePtr ) tempnode )		1892451	0					
ANR	1893440	Callee	php_libxml_node_free_resource		1892451	0					
ANR	1893441	Identifier	php_libxml_node_free_resource		1892451	0					
ANR	1893442	ArgumentList	( xmlNodePtr ) tempnode		1892451	1					
ANR	1893443	Argument	( xmlNodePtr ) tempnode		1892451	0					
ANR	1893444	CastExpression	( xmlNodePtr ) tempnode		1892451	0					
ANR	1893445	CastTarget	xmlNodePtr		1892451	0					
ANR	1893446	Identifier	tempnode		1892451	1					
ANR	1893447	ExpressionStatement	"change_node_zval ( newnode , value )"	616:4:17175:17207	1892451	1	True				
ANR	1893448	CallExpression	"change_node_zval ( newnode , value )"		1892451	0					
ANR	1893449	Callee	change_node_zval		1892451	0					
ANR	1893450	Identifier	change_node_zval		1892451	0					
ANR	1893451	ArgumentList	newnode		1892451	1					
ANR	1893452	Argument	newnode		1892451	0					
ANR	1893453	Identifier	newnode		1892451	0					
ANR	1893454	Argument	value		1892451	1					
ANR	1893455	Identifier	value		1892451	0					
ANR	1893456	ElseStatement	else		1892451	0					
ANR	1893457	IfStatement	if ( counter > 1 )		1892451	0					
ANR	1893458	Condition	counter > 1	618:13:17227:17237	1892451	0	True				
ANR	1893459	RelationalExpression	counter > 1		1892451	0		>			
ANR	1893460	Identifier	counter		1892451	0					
ANR	1893461	PrimaryExpression	1		1892451	1					
ANR	1893462	CompoundStatement		185:26:4862:4862	1892451	1					
ANR	1893463	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Cannot assign to an array of nodes (duplicate subnodes or attr detected)"" )"	619:3:17245:17354	1892451	0	True				
ANR	1893464	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Cannot assign to an array of nodes (duplicate subnodes or attr detected)"" )"		1892451	0					
ANR	1893465	Callee	php_error_docref		1892451	0					
ANR	1893466	Identifier	php_error_docref		1892451	0					
ANR	1893467	ArgumentList	NULL		1892451	1					
ANR	1893468	Argument	NULL		1892451	0					
ANR	1893469	Identifier	NULL		1892451	0					
ANR	1893470	Argument	E_WARNING		1892451	1					
ANR	1893471	Identifier	E_WARNING		1892451	0					
ANR	1893472	Argument	"""Cannot assign to an array of nodes (duplicate subnodes or attr detected)"""		1892451	2					
ANR	1893473	PrimaryExpression	"""Cannot assign to an array of nodes (duplicate subnodes or attr detected)"""		1892451	0					
ANR	1893474	ExpressionStatement	retval = FAILURE	620:3:17359:17375	1892451	1	True				
ANR	1893475	AssignmentExpression	retval = FAILURE		1892451	0		=			
ANR	1893476	Identifier	retval		1892451	0					
ANR	1893477	Identifier	FAILURE		1892451	1					
ANR	1893478	ElseStatement	else		1892451	0					
ANR	1893479	IfStatement	if ( elements )		1892451	0					
ANR	1893480	Condition	elements	621:13:17390:17397	1892451	0	True				
ANR	1893481	Identifier	elements		1892451	0					
ANR	1893482	CompoundStatement		188:23:5022:5022	1892451	1					
ANR	1893483	IfStatement	if ( ! node )		1892451	0					
ANR	1893484	Condition	! node	622:7:17409:17413	1892451	0	True				
ANR	1893485	UnaryOperationExpression	! node		1892451	0					
ANR	1893486	UnaryOperator	!		1892451	0					
ANR	1893487	Identifier	node		1892451	1					
ANR	1893488	CompoundStatement		189:14:5038:5038	1892451	1					
ANR	1893489	IfStatement	if ( ! member || Z_TYPE_P ( member ) == IS_LONG )		1892451	0					
ANR	1893490	Condition	! member || Z_TYPE_P ( member ) == IS_LONG	623:8:17426:17463	1892451	0	True				
ANR	1893491	OrExpression	! member || Z_TYPE_P ( member ) == IS_LONG		1892451	0		||			
ANR	1893492	UnaryOperationExpression	! member		1892451	0					
ANR	1893493	UnaryOperator	!		1892451	0					
ANR	1893494	Identifier	member		1892451	1					
ANR	1893495	EqualityExpression	Z_TYPE_P ( member ) == IS_LONG		1892451	1		==			
ANR	1893496	CallExpression	Z_TYPE_P ( member )		1892451	0					
ANR	1893497	Callee	Z_TYPE_P		1892451	0					
ANR	1893498	Identifier	Z_TYPE_P		1892451	0					
ANR	1893499	ArgumentList	member		1892451	1					
ANR	1893500	Argument	member		1892451	0					
ANR	1893501	Identifier	member		1892451	0					
ANR	1893502	Identifier	IS_LONG		1892451	1					
ANR	1893503	CompoundStatement		190:48:5088:5088	1892451	1					
ANR	1893504	ExpressionStatement	"newnode = xmlNewTextChild ( mynode -> parent , mynode -> ns , mynode -> name , value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL )"	624:5:17473:17585	1892451	0	True				
ANR	1893505	AssignmentExpression	"newnode = xmlNewTextChild ( mynode -> parent , mynode -> ns , mynode -> name , value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL )"		1892451	0		=			
ANR	1893506	Identifier	newnode		1892451	0					
ANR	1893507	CallExpression	"xmlNewTextChild ( mynode -> parent , mynode -> ns , mynode -> name , value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL )"		1892451	1					
ANR	1893508	Callee	xmlNewTextChild		1892451	0					
ANR	1893509	Identifier	xmlNewTextChild		1892451	0					
ANR	1893510	ArgumentList	mynode -> parent		1892451	1					
ANR	1893511	Argument	mynode -> parent		1892451	0					
ANR	1893512	PtrMemberAccess	mynode -> parent		1892451	0					
ANR	1893513	Identifier	mynode		1892451	0					
ANR	1893514	Identifier	parent		1892451	1					
ANR	1893515	Argument	mynode -> ns		1892451	1					
ANR	1893516	PtrMemberAccess	mynode -> ns		1892451	0					
ANR	1893517	Identifier	mynode		1892451	0					
ANR	1893518	Identifier	ns		1892451	1					
ANR	1893519	Argument	mynode -> name		1892451	2					
ANR	1893520	PtrMemberAccess	mynode -> name		1892451	0					
ANR	1893521	Identifier	mynode		1892451	0					
ANR	1893522	Identifier	name		1892451	1					
ANR	1893523	Argument	value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL		1892451	3					
ANR	1893524	ConditionalExpression	value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL		1892451	0					
ANR	1893525	Condition	value		1892451	0					
ANR	1893526	Identifier	value		1892451	0					
ANR	1893527	CastExpression	( xmlChar * ) Z_STRVAL_P ( value )		1892451	1					
ANR	1893528	CastTarget	xmlChar *		1892451	0					
ANR	1893529	CallExpression	Z_STRVAL_P ( value )		1892451	1					
ANR	1893530	Callee	Z_STRVAL_P		1892451	0					
ANR	1893531	Identifier	Z_STRVAL_P		1892451	0					
ANR	1893532	ArgumentList	value		1892451	1					
ANR	1893533	Argument	value		1892451	0					
ANR	1893534	Identifier	value		1892451	0					
ANR	1893535	Identifier	NULL		1892451	2					
ANR	1893536	ElseStatement	else		1892451	0					
ANR	1893537	CompoundStatement		192:11:5220:5220	1892451	0					
ANR	1893538	ExpressionStatement	"newnode = xmlNewTextChild ( mynode , mynode -> ns , ( xmlChar * ) Z_STRVAL_P ( member ) , value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL )"	626:5:17605:17726	1892451	0	True				
ANR	1893539	AssignmentExpression	"newnode = xmlNewTextChild ( mynode , mynode -> ns , ( xmlChar * ) Z_STRVAL_P ( member ) , value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL )"		1892451	0		=			
ANR	1893540	Identifier	newnode		1892451	0					
ANR	1893541	CallExpression	"xmlNewTextChild ( mynode , mynode -> ns , ( xmlChar * ) Z_STRVAL_P ( member ) , value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL )"		1892451	1					
ANR	1893542	Callee	xmlNewTextChild		1892451	0					
ANR	1893543	Identifier	xmlNewTextChild		1892451	0					
ANR	1893544	ArgumentList	mynode		1892451	1					
ANR	1893545	Argument	mynode		1892451	0					
ANR	1893546	Identifier	mynode		1892451	0					
ANR	1893547	Argument	mynode -> ns		1892451	1					
ANR	1893548	PtrMemberAccess	mynode -> ns		1892451	0					
ANR	1893549	Identifier	mynode		1892451	0					
ANR	1893550	Identifier	ns		1892451	1					
ANR	1893551	Argument	( xmlChar * ) Z_STRVAL_P ( member )		1892451	2					
ANR	1893552	CastExpression	( xmlChar * ) Z_STRVAL_P ( member )		1892451	0					
ANR	1893553	CastTarget	xmlChar *		1892451	0					
ANR	1893554	CallExpression	Z_STRVAL_P ( member )		1892451	1					
ANR	1893555	Callee	Z_STRVAL_P		1892451	0					
ANR	1893556	Identifier	Z_STRVAL_P		1892451	0					
ANR	1893557	ArgumentList	member		1892451	1					
ANR	1893558	Argument	member		1892451	0					
ANR	1893559	Identifier	member		1892451	0					
ANR	1893560	Argument	value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL		1892451	3					
ANR	1893561	ConditionalExpression	value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL		1892451	0					
ANR	1893562	Condition	value		1892451	0					
ANR	1893563	Identifier	value		1892451	0					
ANR	1893564	CastExpression	( xmlChar * ) Z_STRVAL_P ( value )		1892451	1					
ANR	1893565	CastTarget	xmlChar *		1892451	0					
ANR	1893566	CallExpression	Z_STRVAL_P ( value )		1892451	1					
ANR	1893567	Callee	Z_STRVAL_P		1892451	0					
ANR	1893568	Identifier	Z_STRVAL_P		1892451	0					
ANR	1893569	ArgumentList	value		1892451	1					
ANR	1893570	Argument	value		1892451	0					
ANR	1893571	Identifier	value		1892451	0					
ANR	1893572	Identifier	NULL		1892451	2					
ANR	1893573	ElseStatement	else		1892451	0					
ANR	1893574	IfStatement	if ( ! member || Z_TYPE_P ( member ) == IS_LONG )		1892451	0					
ANR	1893575	Condition	! member || Z_TYPE_P ( member ) == IS_LONG	628:14:17748:17785	1892451	0	True				
ANR	1893576	OrExpression	! member || Z_TYPE_P ( member ) == IS_LONG		1892451	0		||			
ANR	1893577	UnaryOperationExpression	! member		1892451	0					
ANR	1893578	UnaryOperator	!		1892451	0					
ANR	1893579	Identifier	member		1892451	1					
ANR	1893580	EqualityExpression	Z_TYPE_P ( member ) == IS_LONG		1892451	1		==			
ANR	1893581	CallExpression	Z_TYPE_P ( member )		1892451	0					
ANR	1893582	Callee	Z_TYPE_P		1892451	0					
ANR	1893583	Identifier	Z_TYPE_P		1892451	0					
ANR	1893584	ArgumentList	member		1892451	1					
ANR	1893585	Argument	member		1892451	0					
ANR	1893586	Identifier	member		1892451	0					
ANR	1893587	Identifier	IS_LONG		1892451	1					
ANR	1893588	CompoundStatement		195:54:5410:5410	1892451	1					
ANR	1893589	IfStatement	if ( member && cnt < Z_LVAL_P ( member ) )		1892451	0					
ANR	1893590	Condition	member && cnt < Z_LVAL_P ( member )	629:8:17798:17829	1892451	0	True				
ANR	1893591	AndExpression	member && cnt < Z_LVAL_P ( member )		1892451	0		&&			
ANR	1893592	Identifier	member		1892451	0					
ANR	1893593	RelationalExpression	cnt < Z_LVAL_P ( member )		1892451	1		<			
ANR	1893594	Identifier	cnt		1892451	0					
ANR	1893595	CallExpression	Z_LVAL_P ( member )		1892451	1					
ANR	1893596	Callee	Z_LVAL_P		1892451	0					
ANR	1893597	Identifier	Z_LVAL_P		1892451	0					
ANR	1893598	ArgumentList	member		1892451	1					
ANR	1893599	Argument	member		1892451	0					
ANR	1893600	Identifier	member		1892451	0					
ANR	1893601	CompoundStatement		196:42:5454:5454	1892451	1					
ANR	1893602	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Cannot add element %s number %pd when only %pd such elements exist"" , mynode -> name , Z_LVAL_P ( member ) , cnt )"	630:5:17839:17979	1892451	0	True				
ANR	1893603	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Cannot add element %s number %pd when only %pd such elements exist"" , mynode -> name , Z_LVAL_P ( member ) , cnt )"		1892451	0					
ANR	1893604	Callee	php_error_docref		1892451	0					
ANR	1893605	Identifier	php_error_docref		1892451	0					
ANR	1893606	ArgumentList	NULL		1892451	1					
ANR	1893607	Argument	NULL		1892451	0					
ANR	1893608	Identifier	NULL		1892451	0					
ANR	1893609	Argument	E_WARNING		1892451	1					
ANR	1893610	Identifier	E_WARNING		1892451	0					
ANR	1893611	Argument	"""Cannot add element %s number %pd when only %pd such elements exist"""		1892451	2					
ANR	1893612	PrimaryExpression	"""Cannot add element %s number %pd when only %pd such elements exist"""		1892451	0					
ANR	1893613	Argument	mynode -> name		1892451	3					
ANR	1893614	PtrMemberAccess	mynode -> name		1892451	0					
ANR	1893615	Identifier	mynode		1892451	0					
ANR	1893616	Identifier	name		1892451	1					
ANR	1893617	Argument	Z_LVAL_P ( member )		1892451	4					
ANR	1893618	CallExpression	Z_LVAL_P ( member )		1892451	0					
ANR	1893619	Callee	Z_LVAL_P		1892451	0					
ANR	1893620	Identifier	Z_LVAL_P		1892451	0					
ANR	1893621	ArgumentList	member		1892451	1					
ANR	1893622	Argument	member		1892451	0					
ANR	1893623	Identifier	member		1892451	0					
ANR	1893624	Argument	cnt		1892451	5					
ANR	1893625	Identifier	cnt		1892451	0					
ANR	1893626	ExpressionStatement	retval = FAILURE	631:5:17986:18002	1892451	1	True				
ANR	1893627	AssignmentExpression	retval = FAILURE		1892451	0		=			
ANR	1893628	Identifier	retval		1892451	0					
ANR	1893629	Identifier	FAILURE		1892451	1					
ANR	1893630	ExpressionStatement	"newnode = xmlNewTextChild ( mynode -> parent , mynode -> ns , mynode -> name , value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL )"	633:4:18014:18126	1892451	1	True				
ANR	1893631	AssignmentExpression	"newnode = xmlNewTextChild ( mynode -> parent , mynode -> ns , mynode -> name , value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL )"		1892451	0		=			
ANR	1893632	Identifier	newnode		1892451	0					
ANR	1893633	CallExpression	"xmlNewTextChild ( mynode -> parent , mynode -> ns , mynode -> name , value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL )"		1892451	1					
ANR	1893634	Callee	xmlNewTextChild		1892451	0					
ANR	1893635	Identifier	xmlNewTextChild		1892451	0					
ANR	1893636	ArgumentList	mynode -> parent		1892451	1					
ANR	1893637	Argument	mynode -> parent		1892451	0					
ANR	1893638	PtrMemberAccess	mynode -> parent		1892451	0					
ANR	1893639	Identifier	mynode		1892451	0					
ANR	1893640	Identifier	parent		1892451	1					
ANR	1893641	Argument	mynode -> ns		1892451	1					
ANR	1893642	PtrMemberAccess	mynode -> ns		1892451	0					
ANR	1893643	Identifier	mynode		1892451	0					
ANR	1893644	Identifier	ns		1892451	1					
ANR	1893645	Argument	mynode -> name		1892451	2					
ANR	1893646	PtrMemberAccess	mynode -> name		1892451	0					
ANR	1893647	Identifier	mynode		1892451	0					
ANR	1893648	Identifier	name		1892451	1					
ANR	1893649	Argument	value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL		1892451	3					
ANR	1893650	ConditionalExpression	value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL		1892451	0					
ANR	1893651	Condition	value		1892451	0					
ANR	1893652	Identifier	value		1892451	0					
ANR	1893653	CastExpression	( xmlChar * ) Z_STRVAL_P ( value )		1892451	1					
ANR	1893654	CastTarget	xmlChar *		1892451	0					
ANR	1893655	CallExpression	Z_STRVAL_P ( value )		1892451	1					
ANR	1893656	Callee	Z_STRVAL_P		1892451	0					
ANR	1893657	Identifier	Z_STRVAL_P		1892451	0					
ANR	1893658	ArgumentList	value		1892451	1					
ANR	1893659	Argument	value		1892451	0					
ANR	1893660	Identifier	value		1892451	0					
ANR	1893661	Identifier	NULL		1892451	2					
ANR	1893662	ElseStatement	else		1892451	0					
ANR	1893663	IfStatement	if ( attribs )		1892451	0					
ANR	1893664	Condition	attribs	635:13:18146:18152	1892451	0	True				
ANR	1893665	Identifier	attribs		1892451	0					
ANR	1893666	CompoundStatement		202:22:5777:5777	1892451	1					
ANR	1893667	IfStatement	if ( Z_TYPE_P ( member ) == IS_LONG )		1892451	0					
ANR	1893668	Condition	Z_TYPE_P ( member ) == IS_LONG	636:7:18164:18190	1892451	0	True				
ANR	1893669	EqualityExpression	Z_TYPE_P ( member ) == IS_LONG		1892451	0		==			
ANR	1893670	CallExpression	Z_TYPE_P ( member )		1892451	0					
ANR	1893671	Callee	Z_TYPE_P		1892451	0					
ANR	1893672	Identifier	Z_TYPE_P		1892451	0					
ANR	1893673	ArgumentList	member		1892451	1					
ANR	1893674	Argument	member		1892451	0					
ANR	1893675	Identifier	member		1892451	0					
ANR	1893676	Identifier	IS_LONG		1892451	1					
ANR	1893677	CompoundStatement		203:36:5815:5815	1892451	1					
ANR	1893678	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Cannot change attribute number %pd when only %d attributes exist"" , Z_LVAL_P ( member ) , nodendx )"	637:4:18199:18327	1892451	0	True				
ANR	1893679	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Cannot change attribute number %pd when only %d attributes exist"" , Z_LVAL_P ( member ) , nodendx )"		1892451	0					
ANR	1893680	Callee	php_error_docref		1892451	0					
ANR	1893681	Identifier	php_error_docref		1892451	0					
ANR	1893682	ArgumentList	NULL		1892451	1					
ANR	1893683	Argument	NULL		1892451	0					
ANR	1893684	Identifier	NULL		1892451	0					
ANR	1893685	Argument	E_WARNING		1892451	1					
ANR	1893686	Identifier	E_WARNING		1892451	0					
ANR	1893687	Argument	"""Cannot change attribute number %pd when only %d attributes exist"""		1892451	2					
ANR	1893688	PrimaryExpression	"""Cannot change attribute number %pd when only %d attributes exist"""		1892451	0					
ANR	1893689	Argument	Z_LVAL_P ( member )		1892451	3					
ANR	1893690	CallExpression	Z_LVAL_P ( member )		1892451	0					
ANR	1893691	Callee	Z_LVAL_P		1892451	0					
ANR	1893692	Identifier	Z_LVAL_P		1892451	0					
ANR	1893693	ArgumentList	member		1892451	1					
ANR	1893694	Argument	member		1892451	0					
ANR	1893695	Identifier	member		1892451	0					
ANR	1893696	Argument	nodendx		1892451	4					
ANR	1893697	Identifier	nodendx		1892451	0					
ANR	1893698	ExpressionStatement	retval = FAILURE	638:4:18333:18349	1892451	1	True				
ANR	1893699	AssignmentExpression	retval = FAILURE		1892451	0		=			
ANR	1893700	Identifier	retval		1892451	0					
ANR	1893701	Identifier	FAILURE		1892451	1					
ANR	1893702	ElseStatement	else		1892451	0					
ANR	1893703	CompoundStatement		206:10:5983:5983	1892451	0					
ANR	1893704	ExpressionStatement	"newnode = ( xmlNodePtr ) xmlNewProp ( node , ( xmlChar * ) Z_STRVAL_P ( member ) , value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL )"	640:4:18367:18481	1892451	0	True				
ANR	1893705	AssignmentExpression	"newnode = ( xmlNodePtr ) xmlNewProp ( node , ( xmlChar * ) Z_STRVAL_P ( member ) , value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL )"		1892451	0		=			
ANR	1893706	Identifier	newnode		1892451	0					
ANR	1893707	CastExpression	"( xmlNodePtr ) xmlNewProp ( node , ( xmlChar * ) Z_STRVAL_P ( member ) , value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL )"		1892451	1					
ANR	1893708	CastTarget	xmlNodePtr		1892451	0					
ANR	1893709	CallExpression	"xmlNewProp ( node , ( xmlChar * ) Z_STRVAL_P ( member ) , value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL )"		1892451	1					
ANR	1893710	Callee	xmlNewProp		1892451	0					
ANR	1893711	Identifier	xmlNewProp		1892451	0					
ANR	1893712	ArgumentList	node		1892451	1					
ANR	1893713	Argument	node		1892451	0					
ANR	1893714	Identifier	node		1892451	0					
ANR	1893715	Argument	( xmlChar * ) Z_STRVAL_P ( member )		1892451	1					
ANR	1893716	CastExpression	( xmlChar * ) Z_STRVAL_P ( member )		1892451	0					
ANR	1893717	CastTarget	xmlChar *		1892451	0					
ANR	1893718	CallExpression	Z_STRVAL_P ( member )		1892451	1					
ANR	1893719	Callee	Z_STRVAL_P		1892451	0					
ANR	1893720	Identifier	Z_STRVAL_P		1892451	0					
ANR	1893721	ArgumentList	member		1892451	1					
ANR	1893722	Argument	member		1892451	0					
ANR	1893723	Identifier	member		1892451	0					
ANR	1893724	Argument	value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL		1892451	2					
ANR	1893725	ConditionalExpression	value ? ( xmlChar * ) Z_STRVAL_P ( value ) : NULL		1892451	0					
ANR	1893726	Condition	value		1892451	0					
ANR	1893727	Identifier	value		1892451	0					
ANR	1893728	CastExpression	( xmlChar * ) Z_STRVAL_P ( value )		1892451	1					
ANR	1893729	CastTarget	xmlChar *		1892451	0					
ANR	1893730	CallExpression	Z_STRVAL_P ( value )		1892451	1					
ANR	1893731	Callee	Z_STRVAL_P		1892451	0					
ANR	1893732	Identifier	Z_STRVAL_P		1892451	0					
ANR	1893733	ArgumentList	value		1892451	1					
ANR	1893734	Argument	value		1892451	0					
ANR	1893735	Identifier	value		1892451	0					
ANR	1893736	Identifier	NULL		1892451	2					
ANR	1893737	IfStatement	if ( member == & tmp_zv )		1892451	22					
ANR	1893738	Condition	member == & tmp_zv	645:5:18501:18517	1892451	0	True				
ANR	1893739	EqualityExpression	member == & tmp_zv		1892451	0		==			
ANR	1893740	Identifier	member		1892451	0					
ANR	1893741	UnaryOperationExpression	& tmp_zv		1892451	1					
ANR	1893742	UnaryOperator	&		1892451	0					
ANR	1893743	Identifier	tmp_zv		1892451	1					
ANR	1893744	CompoundStatement		212:24:6142:6142	1892451	1					
ANR	1893745	ExpressionStatement	zval_dtor ( & tmp_zv )	646:2:18524:18542	1892451	0	True				
ANR	1893746	CallExpression	zval_dtor ( & tmp_zv )		1892451	0					
ANR	1893747	Callee	zval_dtor		1892451	0					
ANR	1893748	Identifier	zval_dtor		1892451	0					
ANR	1893749	ArgumentList	& tmp_zv		1892451	1					
ANR	1893750	Argument	& tmp_zv		1892451	0					
ANR	1893751	UnaryOperationExpression	& tmp_zv		1892451	0					
ANR	1893752	UnaryOperator	&		1892451	0					
ANR	1893753	Identifier	tmp_zv		1892451	1					
ANR	1893754	IfStatement	if ( pnewnode )		1892451	23					
ANR	1893755	Condition	pnewnode	648:5:18552:18559	1892451	0	True				
ANR	1893756	Identifier	pnewnode		1892451	0					
ANR	1893757	CompoundStatement		215:15:6184:6184	1892451	1					
ANR	1893758	ExpressionStatement	* pnewnode = newnode	649:2:18566:18585	1892451	0	True				
ANR	1893759	AssignmentExpression	* pnewnode = newnode		1892451	0		=			
ANR	1893760	UnaryOperationExpression	* pnewnode		1892451	0					
ANR	1893761	UnaryOperator	*		1892451	0					
ANR	1893762	Identifier	pnewnode		1892451	1					
ANR	1893763	Identifier	newnode		1892451	1					
ANR	1893764	IfStatement	if ( new_value )		1892451	24					
ANR	1893765	Condition	new_value	651:5:18595:18603	1892451	0	True				
ANR	1893766	Identifier	new_value		1892451	0					
ANR	1893767	CompoundStatement		218:16:6228:6228	1892451	1					
ANR	1893768	ExpressionStatement	zval_ptr_dtor ( value )	652:2:18610:18630	1892451	0	True				
ANR	1893769	CallExpression	zval_ptr_dtor ( value )		1892451	0					
ANR	1893770	Callee	zval_ptr_dtor		1892451	0					
ANR	1893771	Identifier	zval_ptr_dtor		1892451	0					
ANR	1893772	ArgumentList	value		1892451	1					
ANR	1893773	Argument	value		1892451	0					
ANR	1893774	Identifier	value		1892451	0					
ANR	1893775	ReturnStatement	return retval ;	654:1:18636:18649	1892451	25	True				
ANR	1893776	Identifier	retval		1892451	0					
ANR	1893777	ReturnType	static int		1892451	1					
ANR	1893778	Identifier	sxe_prop_dim_write		1892451	2					
ANR	1893779	ParameterList	"zval * object , zval * member , zval * value , zend_bool elements , zend_bool attribs , xmlNodePtr * pnewnode"		1892451	3					
ANR	1893780	Parameter	zval * object	433:30:12275:12286	1892451	0	True				
ANR	1893781	ParameterType	zval *		1892451	0					
ANR	1893782	Identifier	object		1892451	1					
ANR	1893783	Parameter	zval * member	433:44:12289:12300	1892451	1	True				
ANR	1893784	ParameterType	zval *		1892451	0					
ANR	1893785	Identifier	member		1892451	1					
ANR	1893786	Parameter	zval * value	433:58:12303:12313	1892451	2	True				
ANR	1893787	ParameterType	zval *		1892451	0					
ANR	1893788	Identifier	value		1892451	1					
ANR	1893789	Parameter	zend_bool elements	433:71:12316:12333	1892451	3	True				
ANR	1893790	ParameterType	zend_bool		1892451	0					
ANR	1893791	Identifier	elements		1892451	1					
ANR	1893792	Parameter	zend_bool attribs	433:91:12336:12352	1892451	4	True				
ANR	1893793	ParameterType	zend_bool		1892451	0					
ANR	1893794	Identifier	attribs		1892451	1					
ANR	1893795	Parameter	xmlNodePtr * pnewnode	433:110:12355:12374	1892451	5	True				
ANR	1893796	ParameterType	xmlNodePtr *		1892451	0					
ANR	1893797	Identifier	pnewnode		1892451	1					
ANR	1893798	CFGEntryNode	ENTRY		1892451		True				
ANR	1893799	CFGExitNode	EXIT		1892451		True				
ANR	1893800	Symbol	node -> parent -> type		1892451						
ANR	1893801	Symbol	php_trim		1892451						
ANR	1893802	Symbol	zval_copy		1892451						
ANR	1893803	Symbol	newnode -> children		1892451						
ANR	1893804	Symbol	* node		1892451						
ANR	1893805	Symbol	IS_STRING		1892451						
ANR	1893806	Symbol	new_value		1892451						
ANR	1893807	Symbol	sxe		1892451						
ANR	1893808	Symbol	NULL		1892451						
ANR	1893809	Symbol	xmlStrcmp		1892451						
ANR	1893810	Symbol	test		1892451						
ANR	1893811	Symbol	newnode		1892451						
ANR	1893812	Symbol	xmlNewChild		1892451						
ANR	1893813	Symbol	& zval_copy		1892451						
ANR	1893814	Symbol	sxe -> iter . type		1892451						
ANR	1893815	Symbol	retval		1892451						
ANR	1893816	Symbol	attribs		1892451						
ANR	1893817	Symbol	sxe -> iter		1892451						
ANR	1893818	Symbol	node		1892451						
ANR	1893819	Symbol	SXE_ITER_NONE		1892451						
ANR	1893820	Symbol	* * node		1892451						
ANR	1893821	Symbol	sxe -> iter . nsprefix		1892451						
ANR	1893822	Symbol	node -> parent		1892451						
ANR	1893823	Symbol	pnewnode		1892451						
ANR	1893824	Symbol	node -> type		1892451						
ANR	1893825	Symbol	mynode -> parent		1892451						
ANR	1893826	Symbol	* attr		1892451						
ANR	1893827	Symbol	Z_SXEOBJ_P		1892451						
ANR	1893828	Symbol	node -> children		1892451						
ANR	1893829	Symbol	object		1892451						
ANR	1893830	Symbol	sxe_class_entry		1892451						
ANR	1893831	Symbol	attr -> next		1892451						
ANR	1893832	Symbol	tmp_zv		1892451						
ANR	1893833	Symbol	SXE_ITER_ATTRLIST		1892451						
ANR	1893834	Symbol	SXE_ITER_CHILD		1892451						
ANR	1893835	Symbol	& tmp_zv		1892451						
ANR	1893836	Symbol	mynode -> name		1892451						
ANR	1893837	Symbol	nodendx		1892451						
ANR	1893838	Symbol	& cnt		1892451						
ANR	1893839	Symbol	* sxe		1892451						
ANR	1893840	Symbol	* newnode		1892451						
ANR	1893841	Symbol	match_ns		1892451						
ANR	1893842	Symbol	xmlNewProp		1892451						
ANR	1893843	Symbol	* pnewnode		1892451						
ANR	1893844	Symbol	E_WARNING		1892451						
ANR	1893845	Symbol	mynode -> ns		1892451						
ANR	1893846	Symbol	SXE_ITER_ELEMENT		1892451						
ANR	1893847	Symbol	IS_LONG		1892451						
ANR	1893848	Symbol	member		1892451						
ANR	1893849	Symbol	Z_OBJCE_P		1892451						
ANR	1893850	Symbol	* node -> parent		1892451						
ANR	1893851	Symbol	Z_STRLEN_P		1892451						
ANR	1893852	Symbol	attr		1892451						
ANR	1893853	Symbol	value		1892451						
ANR	1893854	Symbol	php_sxe_get_first_node		1892451						
ANR	1893855	Symbol	SUCCESS		1892451						
ANR	1893856	Symbol	cnt		1892451						
ANR	1893857	Symbol	zval_get_string		1892451						
ANR	1893858	Symbol	node -> properties		1892451						
ANR	1893859	Symbol	sxe -> iter . isprefix		1892451						
ANR	1893860	Symbol	sxe_get_element_by_offset		1892451						
ANR	1893861	Symbol	counter		1892451						
ANR	1893862	Symbol	XML_DOCUMENT_NODE		1892451						
ANR	1893863	Symbol	node -> next		1892451						
ANR	1893864	Symbol	Z_TYPE_P		1892451						
ANR	1893865	Symbol	tempnode		1892451						
ANR	1893866	Symbol	FAILURE		1892451						
ANR	1893867	Symbol	Z_STRVAL_P		1892451						
ANR	1893868	Symbol	Z_LVAL_P		1892451						
ANR	1893869	Symbol	sxe -> iter . name		1892451						
ANR	1893870	Symbol	* mynode		1892451						
ANR	1893871	Symbol	sxe_get_value		1892451						
ANR	1893872	Symbol	xmlNewTextChild		1892451						
ANR	1893873	Symbol	is_attr		1892451						
ANR	1893874	Symbol	mynode		1892451						
ANR	1893875	Symbol	E_ERROR		1892451						
ANR	1893876	Symbol	node -> name		1892451						
ANR	1893877	Symbol	elements		1892451						
ANR	1893878	Symbol	attr -> name		1892451						
ANR	1893879	Symbol	XML_ATTRIBUTE_NODE		1892451						
ANR	1893880	Symbol	trim_str		1892451						
ANR	1893881	Function	sxe_property_write	660:0:18696:18845							
ANR	1893882	FunctionDef	"sxe_property_write (zval * object , zval * member , zval * value , void * * cache_slot)"		1893881	0					
ANR	1893883	CompoundStatement		661:0:18787:18845	1893881	0					
ANR	1893884	ExpressionStatement	"sxe_prop_dim_write ( object , member , value , 1 , 0 , NULL )"	662:1:18790:18843	1893881	0	True				
ANR	1893885	CallExpression	"sxe_prop_dim_write ( object , member , value , 1 , 0 , NULL )"		1893881	0					
ANR	1893886	Callee	sxe_prop_dim_write		1893881	0					
ANR	1893887	Identifier	sxe_prop_dim_write		1893881	0					
ANR	1893888	ArgumentList	object		1893881	1					
ANR	1893889	Argument	object		1893881	0					
ANR	1893890	Identifier	object		1893881	0					
ANR	1893891	Argument	member		1893881	1					
ANR	1893892	Identifier	member		1893881	0					
ANR	1893893	Argument	value		1893881	2					
ANR	1893894	Identifier	value		1893881	0					
ANR	1893895	Argument	1		1893881	3					
ANR	1893896	PrimaryExpression	1		1893881	0					
ANR	1893897	Argument	0		1893881	4					
ANR	1893898	PrimaryExpression	0		1893881	0					
ANR	1893899	Argument	NULL		1893881	5					
ANR	1893900	Identifier	NULL		1893881	0					
ANR	1893901	ReturnType	static void		1893881	1					
ANR	1893902	Identifier	sxe_property_write		1893881	2					
ANR	1893903	ParameterList	"zval * object , zval * member , zval * value , void * * cache_slot"		1893881	3					
ANR	1893904	Parameter	zval * object	660:31:18727:18738	1893881	0	True				
ANR	1893905	ParameterType	zval *		1893881	0					
ANR	1893906	Identifier	object		1893881	1					
ANR	1893907	Parameter	zval * member	660:45:18741:18752	1893881	1	True				
ANR	1893908	ParameterType	zval *		1893881	0					
ANR	1893909	Identifier	member		1893881	1					
ANR	1893910	Parameter	zval * value	660:59:18755:18765	1893881	2	True				
ANR	1893911	ParameterType	zval *		1893881	0					
ANR	1893912	Identifier	value		1893881	1					
ANR	1893913	Parameter	void * * cache_slot	660:72:18768:18784	1893881	3	True				
ANR	1893914	ParameterType	void * *		1893881	0					
ANR	1893915	Identifier	cache_slot		1893881	1					
ANR	1893916	CFGEntryNode	ENTRY		1893881		True				
ANR	1893917	CFGExitNode	EXIT		1893881		True				
ANR	1893918	Symbol	cache_slot		1893881						
ANR	1893919	Symbol	NULL		1893881						
ANR	1893920	Symbol	member		1893881						
ANR	1893921	Symbol	value		1893881						
ANR	1893922	Symbol	object		1893881						
ANR	1893923	Function	sxe_dimension_write	668:0:18891:19022							
ANR	1893924	FunctionDef	"sxe_dimension_write (zval * object , zval * offset , zval * value)"		1893923	0					
ANR	1893925	CompoundStatement		669:0:18964:19022	1893923	0					
ANR	1893926	ExpressionStatement	"sxe_prop_dim_write ( object , offset , value , 0 , 1 , NULL )"	670:1:18967:19020	1893923	0	True				
ANR	1893927	CallExpression	"sxe_prop_dim_write ( object , offset , value , 0 , 1 , NULL )"		1893923	0					
ANR	1893928	Callee	sxe_prop_dim_write		1893923	0					
ANR	1893929	Identifier	sxe_prop_dim_write		1893923	0					
ANR	1893930	ArgumentList	object		1893923	1					
ANR	1893931	Argument	object		1893923	0					
ANR	1893932	Identifier	object		1893923	0					
ANR	1893933	Argument	offset		1893923	1					
ANR	1893934	Identifier	offset		1893923	0					
ANR	1893935	Argument	value		1893923	2					
ANR	1893936	Identifier	value		1893923	0					
ANR	1893937	Argument	0		1893923	3					
ANR	1893938	PrimaryExpression	0		1893923	0					
ANR	1893939	Argument	1		1893923	4					
ANR	1893940	PrimaryExpression	1		1893923	0					
ANR	1893941	Argument	NULL		1893923	5					
ANR	1893942	Identifier	NULL		1893923	0					
ANR	1893943	ReturnType	static void		1893923	1					
ANR	1893944	Identifier	sxe_dimension_write		1893923	2					
ANR	1893945	ParameterList	"zval * object , zval * offset , zval * value"		1893923	3					
ANR	1893946	Parameter	zval * object	668:32:18923:18934	1893923	0	True				
ANR	1893947	ParameterType	zval *		1893923	0					
ANR	1893948	Identifier	object		1893923	1					
ANR	1893949	Parameter	zval * offset	668:46:18937:18948	1893923	1	True				
ANR	1893950	ParameterType	zval *		1893923	0					
ANR	1893951	Identifier	offset		1893923	1					
ANR	1893952	Parameter	zval * value	668:60:18951:18961	1893923	2	True				
ANR	1893953	ParameterType	zval *		1893923	0					
ANR	1893954	Identifier	value		1893923	1					
ANR	1893955	CFGEntryNode	ENTRY		1893923		True				
ANR	1893956	CFGExitNode	EXIT		1893923		True				
ANR	1893957	Symbol	NULL		1893923						
ANR	1893958	Symbol	offset		1893923						
ANR	1893959	Symbol	value		1893923						
ANR	1893960	Symbol	object		1893923						
ANR	1893961	Function	sxe_property_get_adr	674:0:19035:19809							
ANR	1893962	FunctionDef	"sxe_property_get_adr (zval * object , zval * member , int fetch_type , void * * cache_slot)"		1893961	0					
ANR	1893963	CompoundStatement		675:0:19142:19809	1893961	0					
ANR	1893964	IdentifierDeclStatement	php_sxe_object * sxe ;	676:1:19145:19164	1893961	0	True				
ANR	1893965	IdentifierDecl	* sxe		1893961	0					
ANR	1893966	IdentifierDeclType	php_sxe_object *		1893961	0					
ANR	1893967	Identifier	sxe		1893961	1					
ANR	1893968	IdentifierDeclStatement	xmlNodePtr node ;	677:1:19167:19187	1893961	1	True				
ANR	1893969	IdentifierDecl	node		1893961	0					
ANR	1893970	IdentifierDeclType	xmlNodePtr		1893961	0					
ANR	1893971	Identifier	node		1893961	1					
ANR	1893972	IdentifierDeclStatement	zval ret ;	678:1:19190:19209	1893961	2	True				
ANR	1893973	IdentifierDecl	ret		1893961	0					
ANR	1893974	IdentifierDeclType	zval		1893961	0					
ANR	1893975	Identifier	ret		1893961	1					
ANR	1893976	IdentifierDeclStatement	char * name ;	679:1:19212:19232	1893961	3	True				
ANR	1893977	IdentifierDecl	* name		1893961	0					
ANR	1893978	IdentifierDeclType	char *		1893961	0					
ANR	1893979	Identifier	name		1893961	1					
ANR	1893980	IdentifierDeclStatement	SXE_ITER type ;	680:1:19235:19255	1893961	4	True				
ANR	1893981	IdentifierDecl	type		1893961	0					
ANR	1893982	IdentifierDeclType	SXE_ITER		1893961	0					
ANR	1893983	Identifier	type		1893961	1					
ANR	1893984	ExpressionStatement	sxe = Z_SXEOBJ_P ( object )	682:1:19259:19283	1893961	5	True				
ANR	1893985	AssignmentExpression	sxe = Z_SXEOBJ_P ( object )		1893961	0		=			
ANR	1893986	Identifier	sxe		1893961	0					
ANR	1893987	CallExpression	Z_SXEOBJ_P ( object )		1893961	1					
ANR	1893988	Callee	Z_SXEOBJ_P		1893961	0					
ANR	1893989	Identifier	Z_SXEOBJ_P		1893961	0					
ANR	1893990	ArgumentList	object		1893961	1					
ANR	1893991	Argument	object		1893961	0					
ANR	1893992	Identifier	object		1893961	0					
ANR	1893993	ExpressionStatement	"GET_NODE ( sxe , node )"	684:1:19287:19306	1893961	6	True				
ANR	1893994	CallExpression	"GET_NODE ( sxe , node )"		1893961	0					
ANR	1893995	Callee	GET_NODE		1893961	0					
ANR	1893996	Identifier	GET_NODE		1893961	0					
ANR	1893997	ArgumentList	sxe		1893961	1					
ANR	1893998	Argument	sxe		1893961	0					
ANR	1893999	Identifier	sxe		1893961	0					
ANR	1894000	Argument	node		1893961	1					
ANR	1894001	Identifier	node		1893961	0					
ANR	1894002	ExpressionStatement	convert_to_string ( member )	685:1:19309:19334	1893961	7	True				
ANR	1894003	CallExpression	convert_to_string ( member )		1893961	0					
ANR	1894004	Callee	convert_to_string		1893961	0					
ANR	1894005	Identifier	convert_to_string		1893961	0					
ANR	1894006	ArgumentList	member		1893961	1					
ANR	1894007	Argument	member		1893961	0					
ANR	1894008	Identifier	member		1893961	0					
ANR	1894009	ExpressionStatement	name = Z_STRVAL_P ( member )	686:1:19337:19362	1893961	8	True				
ANR	1894010	AssignmentExpression	name = Z_STRVAL_P ( member )		1893961	0		=			
ANR	1894011	Identifier	name		1893961	0					
ANR	1894012	CallExpression	Z_STRVAL_P ( member )		1893961	1					
ANR	1894013	Callee	Z_STRVAL_P		1893961	0					
ANR	1894014	Identifier	Z_STRVAL_P		1893961	0					
ANR	1894015	ArgumentList	member		1893961	1					
ANR	1894016	Argument	member		1893961	0					
ANR	1894017	Identifier	member		1893961	0					
ANR	1894018	ExpressionStatement	"node = sxe_get_element_by_name ( sxe , node , & name , & type )"	687:1:19365:19420	1893961	9	True				
ANR	1894019	AssignmentExpression	"node = sxe_get_element_by_name ( sxe , node , & name , & type )"		1893961	0		=			
ANR	1894020	Identifier	node		1893961	0					
ANR	1894021	CallExpression	"sxe_get_element_by_name ( sxe , node , & name , & type )"		1893961	1					
ANR	1894022	Callee	sxe_get_element_by_name		1893961	0					
ANR	1894023	Identifier	sxe_get_element_by_name		1893961	0					
ANR	1894024	ArgumentList	sxe		1893961	1					
ANR	1894025	Argument	sxe		1893961	0					
ANR	1894026	Identifier	sxe		1893961	0					
ANR	1894027	Argument	node		1893961	1					
ANR	1894028	Identifier	node		1893961	0					
ANR	1894029	Argument	& name		1893961	2					
ANR	1894030	UnaryOperationExpression	& name		1893961	0					
ANR	1894031	UnaryOperator	&		1893961	0					
ANR	1894032	Identifier	name		1893961	1					
ANR	1894033	Argument	& type		1893961	3					
ANR	1894034	UnaryOperationExpression	& type		1893961	0					
ANR	1894035	UnaryOperator	&		1893961	0					
ANR	1894036	Identifier	type		1893961	1					
ANR	1894037	IfStatement	if ( node )		1893961	10					
ANR	1894038	Condition	node	688:5:19427:19430	1893961	0	True				
ANR	1894039	Identifier	node		1893961	0					
ANR	1894040	CompoundStatement		14:11:290:290	1893961	1					
ANR	1894041	ReturnStatement	return NULL ;	689:2:19437:19448	1893961	0	True				
ANR	1894042	Identifier	NULL		1893961	0					
ANR	1894043	IfStatement	"if ( sxe_prop_dim_write ( object , member , NULL , 1 , 0 , & node ) != SUCCESS )"		1893961	11					
ANR	1894044	Condition	"sxe_prop_dim_write ( object , member , NULL , 1 , 0 , & node ) != SUCCESS"	691:5:19458:19521	1893961	0	True				
ANR	1894045	EqualityExpression	"sxe_prop_dim_write ( object , member , NULL , 1 , 0 , & node ) != SUCCESS"		1893961	0		!=			
ANR	1894046	CallExpression	"sxe_prop_dim_write ( object , member , NULL , 1 , 0 , & node )"		1893961	0					
ANR	1894047	Callee	sxe_prop_dim_write		1893961	0					
ANR	1894048	Identifier	sxe_prop_dim_write		1893961	0					
ANR	1894049	ArgumentList	object		1893961	1					
ANR	1894050	Argument	object		1893961	0					
ANR	1894051	Identifier	object		1893961	0					
ANR	1894052	Argument	member		1893961	1					
ANR	1894053	Identifier	member		1893961	0					
ANR	1894054	Argument	NULL		1893961	2					
ANR	1894055	Identifier	NULL		1893961	0					
ANR	1894056	Argument	1		1893961	3					
ANR	1894057	PrimaryExpression	1		1893961	0					
ANR	1894058	Argument	0		1893961	4					
ANR	1894059	PrimaryExpression	0		1893961	0					
ANR	1894060	Argument	& node		1893961	5					
ANR	1894061	UnaryOperationExpression	& node		1893961	0					
ANR	1894062	UnaryOperator	&		1893961	0					
ANR	1894063	Identifier	node		1893961	1					
ANR	1894064	Identifier	SUCCESS		1893961	1					
ANR	1894065	CompoundStatement		17:71:381:381	1893961	1					
ANR	1894066	ReturnStatement	return NULL ;	692:2:19528:19539	1893961	0	True				
ANR	1894067	Identifier	NULL		1893961	0					
ANR	1894068	ExpressionStatement	type = SXE_ITER_NONE	694:1:19545:19565	1893961	12	True				
ANR	1894069	AssignmentExpression	type = SXE_ITER_NONE		1893961	0		=			
ANR	1894070	Identifier	type		1893961	0					
ANR	1894071	Identifier	SXE_ITER_NONE		1893961	1					
ANR	1894072	ExpressionStatement	name = NULL	695:1:19568:19579	1893961	13	True				
ANR	1894073	AssignmentExpression	name = NULL		1893961	0		=			
ANR	1894074	Identifier	name		1893961	0					
ANR	1894075	Identifier	NULL		1893961	1					
ANR	1894076	ExpressionStatement	"_node_as_zval ( sxe , node , & ret , type , name , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	697:1:19583:19665	1893961	14	True				
ANR	1894077	CallExpression	"_node_as_zval ( sxe , node , & ret , type , name , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1893961	0					
ANR	1894078	Callee	_node_as_zval		1893961	0					
ANR	1894079	Identifier	_node_as_zval		1893961	0					
ANR	1894080	ArgumentList	sxe		1893961	1					
ANR	1894081	Argument	sxe		1893961	0					
ANR	1894082	Identifier	sxe		1893961	0					
ANR	1894083	Argument	node		1893961	1					
ANR	1894084	Identifier	node		1893961	0					
ANR	1894085	Argument	& ret		1893961	2					
ANR	1894086	UnaryOperationExpression	& ret		1893961	0					
ANR	1894087	UnaryOperator	&		1893961	0					
ANR	1894088	Identifier	ret		1893961	1					
ANR	1894089	Argument	type		1893961	3					
ANR	1894090	Identifier	type		1893961	0					
ANR	1894091	Argument	name		1893961	4					
ANR	1894092	Identifier	name		1893961	0					
ANR	1894093	Argument	sxe -> iter . nsprefix		1893961	5					
ANR	1894094	MemberAccess	sxe -> iter . nsprefix		1893961	0					
ANR	1894095	PtrMemberAccess	sxe -> iter		1893961	0					
ANR	1894096	Identifier	sxe		1893961	0					
ANR	1894097	Identifier	iter		1893961	1					
ANR	1894098	Identifier	nsprefix		1893961	1					
ANR	1894099	Argument	sxe -> iter . isprefix		1893961	6					
ANR	1894100	MemberAccess	sxe -> iter . isprefix		1893961	0					
ANR	1894101	PtrMemberAccess	sxe -> iter		1893961	0					
ANR	1894102	Identifier	sxe		1893961	0					
ANR	1894103	Identifier	iter		1893961	1					
ANR	1894104	Identifier	isprefix		1893961	1					
ANR	1894105	ExpressionStatement	sxe = Z_SXEOBJ_P ( & ret )	699:1:19669:19691	1893961	15	True				
ANR	1894106	AssignmentExpression	sxe = Z_SXEOBJ_P ( & ret )		1893961	0		=			
ANR	1894107	Identifier	sxe		1893961	0					
ANR	1894108	CallExpression	Z_SXEOBJ_P ( & ret )		1893961	1					
ANR	1894109	Callee	Z_SXEOBJ_P		1893961	0					
ANR	1894110	Identifier	Z_SXEOBJ_P		1893961	0					
ANR	1894111	ArgumentList	& ret		1893961	1					
ANR	1894112	Argument	& ret		1893961	0					
ANR	1894113	UnaryOperationExpression	& ret		1893961	0					
ANR	1894114	UnaryOperator	&		1893961	0					
ANR	1894115	Identifier	ret		1893961	1					
ANR	1894116	IfStatement	if ( ! Z_ISUNDEF ( sxe -> tmp ) )		1893961	16					
ANR	1894117	Condition	! Z_ISUNDEF ( sxe -> tmp )	700:5:19698:19717	1893961	0	True				
ANR	1894118	UnaryOperationExpression	! Z_ISUNDEF ( sxe -> tmp )		1893961	0					
ANR	1894119	UnaryOperator	!		1893961	0					
ANR	1894120	CallExpression	Z_ISUNDEF ( sxe -> tmp )		1893961	1					
ANR	1894121	Callee	Z_ISUNDEF		1893961	0					
ANR	1894122	Identifier	Z_ISUNDEF		1893961	0					
ANR	1894123	ArgumentList	sxe -> tmp		1893961	1					
ANR	1894124	Argument	sxe -> tmp		1893961	0					
ANR	1894125	PtrMemberAccess	sxe -> tmp		1893961	0					
ANR	1894126	Identifier	sxe		1893961	0					
ANR	1894127	Identifier	tmp		1893961	1					
ANR	1894128	CompoundStatement		26:27:577:577	1893961	1					
ANR	1894129	ExpressionStatement	zval_ptr_dtor ( & sxe -> tmp )	701:2:19724:19748	1893961	0	True				
ANR	1894130	CallExpression	zval_ptr_dtor ( & sxe -> tmp )		1893961	0					
ANR	1894131	Callee	zval_ptr_dtor		1893961	0					
ANR	1894132	Identifier	zval_ptr_dtor		1893961	0					
ANR	1894133	ArgumentList	& sxe -> tmp		1893961	1					
ANR	1894134	Argument	& sxe -> tmp		1893961	0					
ANR	1894135	UnaryOperationExpression	& sxe -> tmp		1893961	0					
ANR	1894136	UnaryOperator	&		1893961	0					
ANR	1894137	PtrMemberAccess	sxe -> tmp		1893961	1					
ANR	1894138	Identifier	sxe		1893961	0					
ANR	1894139	Identifier	tmp		1893961	1					
ANR	1894140	ExpressionStatement	"ZVAL_COPY_VALUE ( & sxe -> tmp , & ret )"	704:1:19755:19787	1893961	17	True				
ANR	1894141	CallExpression	"ZVAL_COPY_VALUE ( & sxe -> tmp , & ret )"		1893961	0					
ANR	1894142	Callee	ZVAL_COPY_VALUE		1893961	0					
ANR	1894143	Identifier	ZVAL_COPY_VALUE		1893961	0					
ANR	1894144	ArgumentList	& sxe -> tmp		1893961	1					
ANR	1894145	Argument	& sxe -> tmp		1893961	0					
ANR	1894146	UnaryOperationExpression	& sxe -> tmp		1893961	0					
ANR	1894147	UnaryOperator	&		1893961	0					
ANR	1894148	PtrMemberAccess	sxe -> tmp		1893961	1					
ANR	1894149	Identifier	sxe		1893961	0					
ANR	1894150	Identifier	tmp		1893961	1					
ANR	1894151	Argument	& ret		1893961	1					
ANR	1894152	UnaryOperationExpression	& ret		1893961	0					
ANR	1894153	UnaryOperator	&		1893961	0					
ANR	1894154	Identifier	ret		1893961	1					
ANR	1894155	ReturnStatement	return & sxe -> tmp ;	706:1:19791:19807	1893961	18	True				
ANR	1894156	UnaryOperationExpression	& sxe -> tmp		1893961	0					
ANR	1894157	UnaryOperator	&		1893961	0					
ANR	1894158	PtrMemberAccess	sxe -> tmp		1893961	1					
ANR	1894159	Identifier	sxe		1893961	0					
ANR	1894160	Identifier	tmp		1893961	1					
ANR	1894161	ReturnType	static zval *		1893961	1					
ANR	1894162	Identifier	sxe_property_get_adr		1893961	2					
ANR	1894163	ParameterList	"zval * object , zval * member , int fetch_type , void * * cache_slot"		1893961	3					
ANR	1894164	Parameter	zval * object	674:34:19069:19080	1893961	0	True				
ANR	1894165	ParameterType	zval *		1893961	0					
ANR	1894166	Identifier	object		1893961	1					
ANR	1894167	Parameter	zval * member	674:48:19083:19094	1893961	1	True				
ANR	1894168	ParameterType	zval *		1893961	0					
ANR	1894169	Identifier	member		1893961	1					
ANR	1894170	Parameter	int fetch_type	674:62:19097:19110	1893961	2	True				
ANR	1894171	ParameterType	int		1893961	0					
ANR	1894172	Identifier	fetch_type		1893961	1					
ANR	1894173	Parameter	void * * cache_slot	674:78:19113:19129	1893961	3	True				
ANR	1894174	ParameterType	void * *		1893961	0					
ANR	1894175	Identifier	cache_slot		1893961	1					
ANR	1894176	CFGEntryNode	ENTRY		1893961		True				
ANR	1894177	CFGExitNode	EXIT		1893961		True				
ANR	1894178	Symbol	& ret		1893961						
ANR	1894179	Symbol	* sxe		1893961						
ANR	1894180	Symbol	& sxe -> tmp		1893961						
ANR	1894181	Symbol	& name		1893961						
ANR	1894182	Symbol	type		1893961						
ANR	1894183	Symbol	member		1893961						
ANR	1894184	Symbol	sxe_get_element_by_name		1893961						
ANR	1894185	Symbol	sxe -> tmp		1893961						
ANR	1894186	Symbol	sxe_prop_dim_write		1893961						
ANR	1894187	Symbol	cache_slot		1893961						
ANR	1894188	Symbol	ret		1893961						
ANR	1894189	Symbol	sxe		1893961						
ANR	1894190	Symbol	fetch_type		1893961						
ANR	1894191	Symbol	NULL		1893961						
ANR	1894192	Symbol	SUCCESS		1893961						
ANR	1894193	Symbol	& type		1893961						
ANR	1894194	Symbol	Z_ISUNDEF		1893961						
ANR	1894195	Symbol	sxe -> iter . isprefix		1893961						
ANR	1894196	Symbol	Z_STRVAL_P		1893961						
ANR	1894197	Symbol	sxe -> iter		1893961						
ANR	1894198	Symbol	node		1893961						
ANR	1894199	Symbol	& node		1893961						
ANR	1894200	Symbol	SXE_ITER_NONE		1893961						
ANR	1894201	Symbol	sxe -> iter . nsprefix		1893961						
ANR	1894202	Symbol	name		1893961						
ANR	1894203	Symbol	Z_SXEOBJ_P		1893961						
ANR	1894204	Symbol	object		1893961						
ANR	1894205	Function	sxe_prop_dim_exists	712:0:19855:22706							
ANR	1894206	FunctionDef	"sxe_prop_dim_exists (zval * object , zval * member , int check_empty , zend_bool elements , zend_bool attribs)"		1894205	0					
ANR	1894207	CompoundStatement		713:0:19970:22706	1894205	0					
ANR	1894208	IdentifierDeclStatement	php_sxe_object * sxe ;	714:1:19973:19992	1894205	0	True				
ANR	1894209	IdentifierDecl	* sxe		1894205	0					
ANR	1894210	IdentifierDeclType	php_sxe_object *		1894205	0					
ANR	1894211	Identifier	sxe		1894205	1					
ANR	1894212	IdentifierDeclStatement	xmlNodePtr node ;	715:1:19995:20015	1894205	1	True				
ANR	1894213	IdentifierDecl	node		1894205	0					
ANR	1894214	IdentifierDeclType	xmlNodePtr		1894205	0					
ANR	1894215	Identifier	node		1894205	1					
ANR	1894216	IdentifierDeclStatement	xmlAttrPtr attr = NULL ;	716:1:20018:20045	1894205	2	True				
ANR	1894217	IdentifierDecl	attr = NULL		1894205	0					
ANR	1894218	IdentifierDeclType	xmlAttrPtr		1894205	0					
ANR	1894219	Identifier	attr		1894205	1					
ANR	1894220	AssignmentExpression	attr = NULL		1894205	2		=			
ANR	1894221	Identifier	NULL		1894205	0					
ANR	1894222	Identifier	NULL		1894205	1					
ANR	1894223	IdentifierDeclStatement	int exists = 0 ;	717:1:20048:20065	1894205	3	True				
ANR	1894224	IdentifierDecl	exists = 0		1894205	0					
ANR	1894225	IdentifierDeclType	int		1894205	0					
ANR	1894226	Identifier	exists		1894205	1					
ANR	1894227	AssignmentExpression	exists = 0		1894205	2		=			
ANR	1894228	Identifier	exists		1894205	0					
ANR	1894229	PrimaryExpression	0		1894205	1					
ANR	1894230	IdentifierDeclStatement	int test = 0 ;	718:1:20068:20092	1894205	4	True				
ANR	1894231	IdentifierDecl	test = 0		1894205	0					
ANR	1894232	IdentifierDeclType	int		1894205	0					
ANR	1894233	Identifier	test		1894205	1					
ANR	1894234	AssignmentExpression	test = 0		1894205	2		=			
ANR	1894235	Identifier	test		1894205	0					
ANR	1894236	PrimaryExpression	0		1894205	1					
ANR	1894237	IdentifierDeclStatement	zval tmp_zv ;	719:1:20095:20117	1894205	5	True				
ANR	1894238	IdentifierDecl	tmp_zv		1894205	0					
ANR	1894239	IdentifierDeclType	zval		1894205	0					
ANR	1894240	Identifier	tmp_zv		1894205	1					
ANR	1894241	IfStatement	if ( Z_TYPE_P ( member ) != IS_STRING && Z_TYPE_P ( member ) != IS_LONG )		1894205	6					
ANR	1894242	Condition	Z_TYPE_P ( member ) != IS_STRING && Z_TYPE_P ( member ) != IS_LONG	721:5:20125:20184	1894205	0	True				
ANR	1894243	AndExpression	Z_TYPE_P ( member ) != IS_STRING && Z_TYPE_P ( member ) != IS_LONG		1894205	0		&&			
ANR	1894244	EqualityExpression	Z_TYPE_P ( member ) != IS_STRING		1894205	0		!=			
ANR	1894245	CallExpression	Z_TYPE_P ( member )		1894205	0					
ANR	1894246	Callee	Z_TYPE_P		1894205	0					
ANR	1894247	Identifier	Z_TYPE_P		1894205	0					
ANR	1894248	ArgumentList	member		1894205	1					
ANR	1894249	Argument	member		1894205	0					
ANR	1894250	Identifier	member		1894205	0					
ANR	1894251	Identifier	IS_STRING		1894205	1					
ANR	1894252	EqualityExpression	Z_TYPE_P ( member ) != IS_LONG		1894205	1		!=			
ANR	1894253	CallExpression	Z_TYPE_P ( member )		1894205	0					
ANR	1894254	Callee	Z_TYPE_P		1894205	0					
ANR	1894255	Identifier	Z_TYPE_P		1894205	0					
ANR	1894256	ArgumentList	member		1894205	1					
ANR	1894257	Argument	member		1894205	0					
ANR	1894258	Identifier	member		1894205	0					
ANR	1894259	Identifier	IS_LONG		1894205	1					
ANR	1894260	CompoundStatement		9:67:216:216	1894205	1					
ANR	1894261	ExpressionStatement	"ZVAL_STR ( & tmp_zv , zval_get_string ( member ) )"	722:2:20191:20233	1894205	0	True				
ANR	1894262	CallExpression	"ZVAL_STR ( & tmp_zv , zval_get_string ( member ) )"		1894205	0					
ANR	1894263	Callee	ZVAL_STR		1894205	0					
ANR	1894264	Identifier	ZVAL_STR		1894205	0					
ANR	1894265	ArgumentList	& tmp_zv		1894205	1					
ANR	1894266	Argument	& tmp_zv		1894205	0					
ANR	1894267	UnaryOperationExpression	& tmp_zv		1894205	0					
ANR	1894268	UnaryOperator	&		1894205	0					
ANR	1894269	Identifier	tmp_zv		1894205	1					
ANR	1894270	Argument	zval_get_string ( member )		1894205	1					
ANR	1894271	CallExpression	zval_get_string ( member )		1894205	0					
ANR	1894272	Callee	zval_get_string		1894205	0					
ANR	1894273	Identifier	zval_get_string		1894205	0					
ANR	1894274	ArgumentList	member		1894205	1					
ANR	1894275	Argument	member		1894205	0					
ANR	1894276	Identifier	member		1894205	0					
ANR	1894277	ExpressionStatement	member = & tmp_zv	723:2:20237:20253	1894205	1	True				
ANR	1894278	AssignmentExpression	member = & tmp_zv		1894205	0		=			
ANR	1894279	Identifier	member		1894205	0					
ANR	1894280	UnaryOperationExpression	& tmp_zv		1894205	1					
ANR	1894281	UnaryOperator	&		1894205	0					
ANR	1894282	Identifier	tmp_zv		1894205	1					
ANR	1894283	ExpressionStatement	sxe = Z_SXEOBJ_P ( object )	726:1:20260:20284	1894205	7	True				
ANR	1894284	AssignmentExpression	sxe = Z_SXEOBJ_P ( object )		1894205	0		=			
ANR	1894285	Identifier	sxe		1894205	0					
ANR	1894286	CallExpression	Z_SXEOBJ_P ( object )		1894205	1					
ANR	1894287	Callee	Z_SXEOBJ_P		1894205	0					
ANR	1894288	Identifier	Z_SXEOBJ_P		1894205	0					
ANR	1894289	ArgumentList	object		1894205	1					
ANR	1894290	Argument	object		1894205	0					
ANR	1894291	Identifier	object		1894205	0					
ANR	1894292	ExpressionStatement	"GET_NODE ( sxe , node )"	728:1:20288:20307	1894205	8	True				
ANR	1894293	CallExpression	"GET_NODE ( sxe , node )"		1894205	0					
ANR	1894294	Callee	GET_NODE		1894205	0					
ANR	1894295	Identifier	GET_NODE		1894205	0					
ANR	1894296	ArgumentList	sxe		1894205	1					
ANR	1894297	Argument	sxe		1894205	0					
ANR	1894298	Identifier	sxe		1894205	0					
ANR	1894299	Argument	node		1894205	1					
ANR	1894300	Identifier	node		1894205	0					
ANR	1894301	IfStatement	if ( Z_TYPE_P ( member ) == IS_LONG )		1894205	9					
ANR	1894302	Condition	Z_TYPE_P ( member ) == IS_LONG	730:5:20315:20341	1894205	0	True				
ANR	1894303	EqualityExpression	Z_TYPE_P ( member ) == IS_LONG		1894205	0		==			
ANR	1894304	CallExpression	Z_TYPE_P ( member )		1894205	0					
ANR	1894305	Callee	Z_TYPE_P		1894205	0					
ANR	1894306	Identifier	Z_TYPE_P		1894205	0					
ANR	1894307	ArgumentList	member		1894205	1					
ANR	1894308	Argument	member		1894205	0					
ANR	1894309	Identifier	member		1894205	0					
ANR	1894310	Identifier	IS_LONG		1894205	1					
ANR	1894311	CompoundStatement		18:34:373:373	1894205	1					
ANR	1894312	IfStatement	if ( sxe -> iter . type != SXE_ITER_ATTRLIST )		1894205	0					
ANR	1894313	Condition	sxe -> iter . type != SXE_ITER_ATTRLIST	731:6:20352:20386	1894205	0	True				
ANR	1894314	EqualityExpression	sxe -> iter . type != SXE_ITER_ATTRLIST		1894205	0		!=			
ANR	1894315	MemberAccess	sxe -> iter . type		1894205	0					
ANR	1894316	PtrMemberAccess	sxe -> iter		1894205	0					
ANR	1894317	Identifier	sxe		1894205	0					
ANR	1894318	Identifier	iter		1894205	1					
ANR	1894319	Identifier	type		1894205	1					
ANR	1894320	Identifier	SXE_ITER_ATTRLIST		1894205	1					
ANR	1894321	CompoundStatement		19:43:418:418	1894205	1					
ANR	1894322	ExpressionStatement	attribs = 0	732:3:20394:20405	1894205	0	True				
ANR	1894323	AssignmentExpression	attribs = 0		1894205	0		=			
ANR	1894324	Identifier	attribs		1894205	0					
ANR	1894325	PrimaryExpression	0		1894205	1					
ANR	1894326	ExpressionStatement	elements = 1	733:3:20410:20422	1894205	1	True				
ANR	1894327	AssignmentExpression	elements = 1		1894205	0		=			
ANR	1894328	Identifier	elements		1894205	0					
ANR	1894329	PrimaryExpression	1		1894205	1					
ANR	1894330	IfStatement	if ( sxe -> iter . type == SXE_ITER_CHILD )		1894205	2					
ANR	1894331	Condition	sxe -> iter . type == SXE_ITER_CHILD	734:7:20431:20462	1894205	0	True				
ANR	1894332	EqualityExpression	sxe -> iter . type == SXE_ITER_CHILD		1894205	0		==			
ANR	1894333	MemberAccess	sxe -> iter . type		1894205	0					
ANR	1894334	PtrMemberAccess	sxe -> iter		1894205	0					
ANR	1894335	Identifier	sxe		1894205	0					
ANR	1894336	Identifier	iter		1894205	1					
ANR	1894337	Identifier	type		1894205	1					
ANR	1894338	Identifier	SXE_ITER_CHILD		1894205	1					
ANR	1894339	CompoundStatement		22:41:494:494	1894205	1					
ANR	1894340	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , node )"	735:4:20471:20511	1894205	0	True				
ANR	1894341	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , node )"		1894205	0		=			
ANR	1894342	Identifier	node		1894205	0					
ANR	1894343	CallExpression	"php_sxe_get_first_node ( sxe , node )"		1894205	1					
ANR	1894344	Callee	php_sxe_get_first_node		1894205	0					
ANR	1894345	Identifier	php_sxe_get_first_node		1894205	0					
ANR	1894346	ArgumentList	sxe		1894205	1					
ANR	1894347	Argument	sxe		1894205	0					
ANR	1894348	Identifier	sxe		1894205	0					
ANR	1894349	Argument	node		1894205	1					
ANR	1894350	Identifier	node		1894205	0					
ANR	1894351	IfStatement	if ( sxe -> iter . type == SXE_ITER_ATTRLIST )		1894205	10					
ANR	1894352	Condition	sxe -> iter . type == SXE_ITER_ATTRLIST	740:5:20531:20565	1894205	0	True				
ANR	1894353	EqualityExpression	sxe -> iter . type == SXE_ITER_ATTRLIST		1894205	0		==			
ANR	1894354	MemberAccess	sxe -> iter . type		1894205	0					
ANR	1894355	PtrMemberAccess	sxe -> iter		1894205	0					
ANR	1894356	Identifier	sxe		1894205	0					
ANR	1894357	Identifier	iter		1894205	1					
ANR	1894358	Identifier	type		1894205	1					
ANR	1894359	Identifier	SXE_ITER_ATTRLIST		1894205	1					
ANR	1894360	CompoundStatement		28:42:597:597	1894205	1					
ANR	1894361	ExpressionStatement	attribs = 1	741:2:20572:20583	1894205	0	True				
ANR	1894362	AssignmentExpression	attribs = 1		1894205	0		=			
ANR	1894363	Identifier	attribs		1894205	0					
ANR	1894364	PrimaryExpression	1		1894205	1					
ANR	1894365	ExpressionStatement	elements = 0	742:2:20587:20599	1894205	1	True				
ANR	1894366	AssignmentExpression	elements = 0		1894205	0		=			
ANR	1894367	Identifier	elements		1894205	0					
ANR	1894368	PrimaryExpression	0		1894205	1					
ANR	1894369	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , node )"	743:2:20603:20643	1894205	2	True				
ANR	1894370	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , node )"		1894205	0		=			
ANR	1894371	Identifier	node		1894205	0					
ANR	1894372	CallExpression	"php_sxe_get_first_node ( sxe , node )"		1894205	1					
ANR	1894373	Callee	php_sxe_get_first_node		1894205	0					
ANR	1894374	Identifier	php_sxe_get_first_node		1894205	0					
ANR	1894375	ArgumentList	sxe		1894205	1					
ANR	1894376	Argument	sxe		1894205	0					
ANR	1894377	Identifier	sxe		1894205	0					
ANR	1894378	Argument	node		1894205	1					
ANR	1894379	Identifier	node		1894205	0					
ANR	1894380	ExpressionStatement	attr = ( xmlAttrPtr ) node	744:2:20647:20670	1894205	3	True				
ANR	1894381	AssignmentExpression	attr = ( xmlAttrPtr ) node		1894205	0		=			
ANR	1894382	Identifier	attr		1894205	0					
ANR	1894383	CastExpression	( xmlAttrPtr ) node		1894205	1					
ANR	1894384	CastTarget	xmlAttrPtr		1894205	0					
ANR	1894385	Identifier	node		1894205	1					
ANR	1894386	ExpressionStatement	test = sxe -> iter . name != NULL	745:2:20674:20703	1894205	4	True				
ANR	1894387	AssignmentExpression	test = sxe -> iter . name != NULL		1894205	0		=			
ANR	1894388	Identifier	test		1894205	0					
ANR	1894389	EqualityExpression	sxe -> iter . name != NULL		1894205	1		!=			
ANR	1894390	MemberAccess	sxe -> iter . name		1894205	0					
ANR	1894391	PtrMemberAccess	sxe -> iter		1894205	0					
ANR	1894392	Identifier	sxe		1894205	0					
ANR	1894393	Identifier	iter		1894205	1					
ANR	1894394	Identifier	name		1894205	1					
ANR	1894395	Identifier	NULL		1894205	1					
ANR	1894396	ElseStatement	else		1894205	0					
ANR	1894397	IfStatement	if ( sxe -> iter . type != SXE_ITER_CHILD )		1894205	0					
ANR	1894398	Condition	sxe -> iter . type != SXE_ITER_CHILD	746:12:20717:20748	1894205	0	True				
ANR	1894399	EqualityExpression	sxe -> iter . type != SXE_ITER_CHILD		1894205	0		!=			
ANR	1894400	MemberAccess	sxe -> iter . type		1894205	0					
ANR	1894401	PtrMemberAccess	sxe -> iter		1894205	0					
ANR	1894402	Identifier	sxe		1894205	0					
ANR	1894403	Identifier	iter		1894205	1					
ANR	1894404	Identifier	type		1894205	1					
ANR	1894405	Identifier	SXE_ITER_CHILD		1894205	1					
ANR	1894406	CompoundStatement		34:46:780:780	1894205	1					
ANR	1894407	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , node )"	747:2:20755:20795	1894205	0	True				
ANR	1894408	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , node )"		1894205	0		=			
ANR	1894409	Identifier	node		1894205	0					
ANR	1894410	CallExpression	"php_sxe_get_first_node ( sxe , node )"		1894205	1					
ANR	1894411	Callee	php_sxe_get_first_node		1894205	0					
ANR	1894412	Identifier	php_sxe_get_first_node		1894205	0					
ANR	1894413	ArgumentList	sxe		1894205	1					
ANR	1894414	Argument	sxe		1894205	0					
ANR	1894415	Identifier	sxe		1894205	0					
ANR	1894416	Argument	node		1894205	1					
ANR	1894417	Identifier	node		1894205	0					
ANR	1894418	ExpressionStatement	attr = node ? node -> properties : NULL	748:2:20799:20836	1894205	1	True				
ANR	1894419	AssignmentExpression	attr = node ? node -> properties : NULL		1894205	0		=			
ANR	1894420	Identifier	attr		1894205	0					
ANR	1894421	ConditionalExpression	node ? node -> properties : NULL		1894205	1					
ANR	1894422	Condition	node		1894205	0					
ANR	1894423	Identifier	node		1894205	0					
ANR	1894424	PtrMemberAccess	node -> properties		1894205	1					
ANR	1894425	Identifier	node		1894205	0					
ANR	1894426	Identifier	properties		1894205	1					
ANR	1894427	Identifier	NULL		1894205	2					
ANR	1894428	ExpressionStatement	test = 0	749:2:20840:20848	1894205	2	True				
ANR	1894429	AssignmentExpression	test = 0		1894205	0		=			
ANR	1894430	Identifier	test		1894205	0					
ANR	1894431	PrimaryExpression	0		1894205	1					
ANR	1894432	IfStatement	if ( node )		1894205	11					
ANR	1894433	Condition	node	752:5:20859:20862	1894205	0	True				
ANR	1894434	Identifier	node		1894205	0					
ANR	1894435	CompoundStatement		40:11:894:894	1894205	1					
ANR	1894436	IfStatement	if ( attribs )		1894205	0					
ANR	1894437	Condition	attribs	753:6:20873:20879	1894205	0	True				
ANR	1894438	Identifier	attribs		1894205	0					
ANR	1894439	CompoundStatement		41:15:911:911	1894205	1					
ANR	1894440	IfStatement	if ( Z_TYPE_P ( member ) == IS_LONG )		1894205	0					
ANR	1894441	Condition	Z_TYPE_P ( member ) == IS_LONG	754:7:20891:20917	1894205	0	True				
ANR	1894442	EqualityExpression	Z_TYPE_P ( member ) == IS_LONG		1894205	0		==			
ANR	1894443	CallExpression	Z_TYPE_P ( member )		1894205	0					
ANR	1894444	Callee	Z_TYPE_P		1894205	0					
ANR	1894445	Identifier	Z_TYPE_P		1894205	0					
ANR	1894446	ArgumentList	member		1894205	1					
ANR	1894447	Argument	member		1894205	0					
ANR	1894448	Identifier	member		1894205	0					
ANR	1894449	Identifier	IS_LONG		1894205	1					
ANR	1894450	CompoundStatement		43:4:955:970	1894205	1					
ANR	1894451	IdentifierDeclStatement	int nodendx = 0 ;	755:4:20926:20941	1894205	0	True				
ANR	1894452	IdentifierDecl	nodendx = 0		1894205	0					
ANR	1894453	IdentifierDeclType	int		1894205	0					
ANR	1894454	Identifier	nodendx		1894205	1					
ANR	1894455	AssignmentExpression	nodendx = 0		1894205	2		=			
ANR	1894456	Identifier	nodendx		1894205	0					
ANR	1894457	PrimaryExpression	0		1894205	1					
ANR	1894458	WhileStatement	while ( attr && nodendx <= Z_LVAL_P ( member ) )		1894205	1					
ANR	1894459	Condition	attr && nodendx <= Z_LVAL_P ( member )	757:11:20955:20989	1894205	0	True				
ANR	1894460	AndExpression	attr && nodendx <= Z_LVAL_P ( member )		1894205	0		&&			
ANR	1894461	Identifier	attr		1894205	0					
ANR	1894462	RelationalExpression	nodendx <= Z_LVAL_P ( member )		1894205	1		<=			
ANR	1894463	Identifier	nodendx		1894205	0					
ANR	1894464	CallExpression	Z_LVAL_P ( member )		1894205	1					
ANR	1894465	Callee	Z_LVAL_P		1894205	0					
ANR	1894466	Identifier	Z_LVAL_P		1894205	0					
ANR	1894467	ArgumentList	member		1894205	1					
ANR	1894468	Argument	member		1894205	0					
ANR	1894469	Identifier	member		1894205	0					
ANR	1894470	CompoundStatement		45:48:1021:1021	1894205	1					
ANR	1894471	IfStatement	"if ( ( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix ) )"		1894205	0					
ANR	1894472	Condition	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	758:9:21003:21127	1894205	0	True				
ANR	1894473	AndExpression	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1894205	0		&&			
ANR	1894474	OrExpression	"! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1894205	0		||			
ANR	1894475	UnaryOperationExpression	! test		1894205	0					
ANR	1894476	UnaryOperator	!		1894205	0					
ANR	1894477	Identifier	test		1894205	1					
ANR	1894478	UnaryOperationExpression	"! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1894205	1					
ANR	1894479	UnaryOperator	!		1894205	0					
ANR	1894480	CallExpression	"xmlStrcmp ( attr -> name , sxe -> iter . name )"		1894205	1					
ANR	1894481	Callee	xmlStrcmp		1894205	0					
ANR	1894482	Identifier	xmlStrcmp		1894205	0					
ANR	1894483	ArgumentList	attr -> name		1894205	1					
ANR	1894484	Argument	attr -> name		1894205	0					
ANR	1894485	PtrMemberAccess	attr -> name		1894205	0					
ANR	1894486	Identifier	attr		1894205	0					
ANR	1894487	Identifier	name		1894205	1					
ANR	1894488	Argument	sxe -> iter . name		1894205	1					
ANR	1894489	MemberAccess	sxe -> iter . name		1894205	0					
ANR	1894490	PtrMemberAccess	sxe -> iter		1894205	0					
ANR	1894491	Identifier	sxe		1894205	0					
ANR	1894492	Identifier	iter		1894205	1					
ANR	1894493	Identifier	name		1894205	1					
ANR	1894494	CallExpression	"match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1894205	1					
ANR	1894495	Callee	match_ns		1894205	0					
ANR	1894496	Identifier	match_ns		1894205	0					
ANR	1894497	ArgumentList	sxe		1894205	1					
ANR	1894498	Argument	sxe		1894205	0					
ANR	1894499	Identifier	sxe		1894205	0					
ANR	1894500	Argument	( xmlNodePtr ) attr		1894205	1					
ANR	1894501	CastExpression	( xmlNodePtr ) attr		1894205	0					
ANR	1894502	CastTarget	xmlNodePtr		1894205	0					
ANR	1894503	Identifier	attr		1894205	1					
ANR	1894504	Argument	sxe -> iter . nsprefix		1894205	2					
ANR	1894505	MemberAccess	sxe -> iter . nsprefix		1894205	0					
ANR	1894506	PtrMemberAccess	sxe -> iter		1894205	0					
ANR	1894507	Identifier	sxe		1894205	0					
ANR	1894508	Identifier	iter		1894205	1					
ANR	1894509	Identifier	nsprefix		1894205	1					
ANR	1894510	Argument	sxe -> iter . isprefix		1894205	3					
ANR	1894511	MemberAccess	sxe -> iter . isprefix		1894205	0					
ANR	1894512	PtrMemberAccess	sxe -> iter		1894205	0					
ANR	1894513	Identifier	sxe		1894205	0					
ANR	1894514	Identifier	iter		1894205	1					
ANR	1894515	Identifier	isprefix		1894205	1					
ANR	1894516	CompoundStatement		46:136:1159:1159	1894205	1					
ANR	1894517	IfStatement	if ( nodendx == Z_LVAL_P ( member ) )		1894205	0					
ANR	1894518	Condition	nodendx == Z_LVAL_P ( member )	759:10:21142:21168	1894205	0	True				
ANR	1894519	EqualityExpression	nodendx == Z_LVAL_P ( member )		1894205	0		==			
ANR	1894520	Identifier	nodendx		1894205	0					
ANR	1894521	CallExpression	Z_LVAL_P ( member )		1894205	1					
ANR	1894522	Callee	Z_LVAL_P		1894205	0					
ANR	1894523	Identifier	Z_LVAL_P		1894205	0					
ANR	1894524	ArgumentList	member		1894205	1					
ANR	1894525	Argument	member		1894205	0					
ANR	1894526	Identifier	member		1894205	0					
ANR	1894527	CompoundStatement		47:39:1200:1200	1894205	1					
ANR	1894528	ExpressionStatement	exists = 1	760:7:21180:21190	1894205	0	True				
ANR	1894529	AssignmentExpression	exists = 1		1894205	0		=			
ANR	1894530	Identifier	exists		1894205	0					
ANR	1894531	PrimaryExpression	1		1894205	1					
ANR	1894532	BreakStatement	break ;	761:7:21199:21204	1894205	1	True				
ANR	1894533	ExpressionStatement	nodendx ++	763:6:21220:21229	1894205	1	True				
ANR	1894534	PostIncDecOperationExpression	nodendx ++		1894205	0					
ANR	1894535	Identifier	nodendx		1894205	0					
ANR	1894536	IncDec	++		1894205	1					
ANR	1894537	ExpressionStatement	attr = attr -> next	765:5:21243:21260	1894205	1	True				
ANR	1894538	AssignmentExpression	attr = attr -> next		1894205	0		=			
ANR	1894539	Identifier	attr		1894205	0					
ANR	1894540	PtrMemberAccess	attr -> next		1894205	1					
ANR	1894541	Identifier	attr		1894205	0					
ANR	1894542	Identifier	next		1894205	1					
ANR	1894543	ElseStatement	else		1894205	0					
ANR	1894544	CompoundStatement		55:10:1307:1307	1894205	0					
ANR	1894545	WhileStatement	while ( attr )		1894205	0					
ANR	1894546	Condition	attr	768:11:21291:21294	1894205	0	True				
ANR	1894547	Identifier	attr		1894205	0					
ANR	1894548	CompoundStatement		56:17:1326:1326	1894205	1					
ANR	1894549	IfStatement	"if ( ( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && ! xmlStrcmp ( attr -> name , ( xmlChar * ) Z_STRVAL_P ( member ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix ) )"		1894205	0					
ANR	1894550	Condition	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && ! xmlStrcmp ( attr -> name , ( xmlChar * ) Z_STRVAL_P ( member ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	769:9:21308:21489	1894205	0	True				
ANR	1894551	AndExpression	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && ! xmlStrcmp ( attr -> name , ( xmlChar * ) Z_STRVAL_P ( member ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1894205	0		&&			
ANR	1894552	OrExpression	"! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1894205	0		||			
ANR	1894553	UnaryOperationExpression	! test		1894205	0					
ANR	1894554	UnaryOperator	!		1894205	0					
ANR	1894555	Identifier	test		1894205	1					
ANR	1894556	UnaryOperationExpression	"! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1894205	1					
ANR	1894557	UnaryOperator	!		1894205	0					
ANR	1894558	CallExpression	"xmlStrcmp ( attr -> name , sxe -> iter . name )"		1894205	1					
ANR	1894559	Callee	xmlStrcmp		1894205	0					
ANR	1894560	Identifier	xmlStrcmp		1894205	0					
ANR	1894561	ArgumentList	attr -> name		1894205	1					
ANR	1894562	Argument	attr -> name		1894205	0					
ANR	1894563	PtrMemberAccess	attr -> name		1894205	0					
ANR	1894564	Identifier	attr		1894205	0					
ANR	1894565	Identifier	name		1894205	1					
ANR	1894566	Argument	sxe -> iter . name		1894205	1					
ANR	1894567	MemberAccess	sxe -> iter . name		1894205	0					
ANR	1894568	PtrMemberAccess	sxe -> iter		1894205	0					
ANR	1894569	Identifier	sxe		1894205	0					
ANR	1894570	Identifier	iter		1894205	1					
ANR	1894571	Identifier	name		1894205	1					
ANR	1894572	AndExpression	"! xmlStrcmp ( attr -> name , ( xmlChar * ) Z_STRVAL_P ( member ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1894205	1		&&			
ANR	1894573	UnaryOperationExpression	"! xmlStrcmp ( attr -> name , ( xmlChar * ) Z_STRVAL_P ( member ) )"		1894205	0					
ANR	1894574	UnaryOperator	!		1894205	0					
ANR	1894575	CallExpression	"xmlStrcmp ( attr -> name , ( xmlChar * ) Z_STRVAL_P ( member ) )"		1894205	1					
ANR	1894576	Callee	xmlStrcmp		1894205	0					
ANR	1894577	Identifier	xmlStrcmp		1894205	0					
ANR	1894578	ArgumentList	attr -> name		1894205	1					
ANR	1894579	Argument	attr -> name		1894205	0					
ANR	1894580	PtrMemberAccess	attr -> name		1894205	0					
ANR	1894581	Identifier	attr		1894205	0					
ANR	1894582	Identifier	name		1894205	1					
ANR	1894583	Argument	( xmlChar * ) Z_STRVAL_P ( member )		1894205	1					
ANR	1894584	CastExpression	( xmlChar * ) Z_STRVAL_P ( member )		1894205	0					
ANR	1894585	CastTarget	xmlChar *		1894205	0					
ANR	1894586	CallExpression	Z_STRVAL_P ( member )		1894205	1					
ANR	1894587	Callee	Z_STRVAL_P		1894205	0					
ANR	1894588	Identifier	Z_STRVAL_P		1894205	0					
ANR	1894589	ArgumentList	member		1894205	1					
ANR	1894590	Argument	member		1894205	0					
ANR	1894591	Identifier	member		1894205	0					
ANR	1894592	CallExpression	"match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1894205	1					
ANR	1894593	Callee	match_ns		1894205	0					
ANR	1894594	Identifier	match_ns		1894205	0					
ANR	1894595	ArgumentList	sxe		1894205	1					
ANR	1894596	Argument	sxe		1894205	0					
ANR	1894597	Identifier	sxe		1894205	0					
ANR	1894598	Argument	( xmlNodePtr ) attr		1894205	1					
ANR	1894599	CastExpression	( xmlNodePtr ) attr		1894205	0					
ANR	1894600	CastTarget	xmlNodePtr		1894205	0					
ANR	1894601	Identifier	attr		1894205	1					
ANR	1894602	Argument	sxe -> iter . nsprefix		1894205	2					
ANR	1894603	MemberAccess	sxe -> iter . nsprefix		1894205	0					
ANR	1894604	PtrMemberAccess	sxe -> iter		1894205	0					
ANR	1894605	Identifier	sxe		1894205	0					
ANR	1894606	Identifier	iter		1894205	1					
ANR	1894607	Identifier	nsprefix		1894205	1					
ANR	1894608	Argument	sxe -> iter . isprefix		1894205	3					
ANR	1894609	MemberAccess	sxe -> iter . isprefix		1894205	0					
ANR	1894610	PtrMemberAccess	sxe -> iter		1894205	0					
ANR	1894611	Identifier	sxe		1894205	0					
ANR	1894612	Identifier	iter		1894205	1					
ANR	1894613	Identifier	isprefix		1894205	1					
ANR	1894614	CompoundStatement		57:193:1521:1521	1894205	1					
ANR	1894615	ExpressionStatement	exists = 1	770:6:21500:21510	1894205	0	True				
ANR	1894616	AssignmentExpression	exists = 1		1894205	0		=			
ANR	1894617	Identifier	exists		1894205	0					
ANR	1894618	PrimaryExpression	1		1894205	1					
ANR	1894619	BreakStatement	break ;	771:6:21518:21523	1894205	1	True				
ANR	1894620	ExpressionStatement	attr = attr -> next	774:5:21538:21555	1894205	1	True				
ANR	1894621	AssignmentExpression	attr = attr -> next		1894205	0		=			
ANR	1894622	Identifier	attr		1894205	0					
ANR	1894623	PtrMemberAccess	attr -> next		1894205	1					
ANR	1894624	Identifier	attr		1894205	0					
ANR	1894625	Identifier	next		1894205	1					
ANR	1894626	IfStatement	"if ( exists && check_empty == 1 && ( ! attr -> children || ! attr -> children -> content || ! attr -> children -> content [ 0 ] || ! xmlStrcmp ( attr -> children -> content , ( const xmlChar * ) ""0"" ) ) )"		1894205	1					
ANR	1894627	Condition	"exists && check_empty == 1 && ( ! attr -> children || ! attr -> children -> content || ! attr -> children -> content [ 0 ] || ! xmlStrcmp ( attr -> children -> content , ( const xmlChar * ) ""0"" ) )"	777:7:21575:21746	1894205	0	True				
ANR	1894628	AndExpression	"exists && check_empty == 1 && ( ! attr -> children || ! attr -> children -> content || ! attr -> children -> content [ 0 ] || ! xmlStrcmp ( attr -> children -> content , ( const xmlChar * ) ""0"" ) )"		1894205	0		&&			
ANR	1894629	Identifier	exists		1894205	0					
ANR	1894630	AndExpression	"check_empty == 1 && ( ! attr -> children || ! attr -> children -> content || ! attr -> children -> content [ 0 ] || ! xmlStrcmp ( attr -> children -> content , ( const xmlChar * ) ""0"" ) )"		1894205	1		&&			
ANR	1894631	EqualityExpression	check_empty == 1		1894205	0		==			
ANR	1894632	Identifier	check_empty		1894205	0					
ANR	1894633	PrimaryExpression	1		1894205	1					
ANR	1894634	OrExpression	"! attr -> children || ! attr -> children -> content || ! attr -> children -> content [ 0 ] || ! xmlStrcmp ( attr -> children -> content , ( const xmlChar * ) ""0"" )"		1894205	1		||			
ANR	1894635	UnaryOperationExpression	! attr -> children		1894205	0					
ANR	1894636	UnaryOperator	!		1894205	0					
ANR	1894637	PtrMemberAccess	attr -> children		1894205	1					
ANR	1894638	Identifier	attr		1894205	0					
ANR	1894639	Identifier	children		1894205	1					
ANR	1894640	OrExpression	"! attr -> children -> content || ! attr -> children -> content [ 0 ] || ! xmlStrcmp ( attr -> children -> content , ( const xmlChar * ) ""0"" )"		1894205	1		||			
ANR	1894641	UnaryOperationExpression	! attr -> children -> content		1894205	0					
ANR	1894642	UnaryOperator	!		1894205	0					
ANR	1894643	PtrMemberAccess	attr -> children -> content		1894205	1					
ANR	1894644	PtrMemberAccess	attr -> children		1894205	0					
ANR	1894645	Identifier	attr		1894205	0					
ANR	1894646	Identifier	children		1894205	1					
ANR	1894647	Identifier	content		1894205	1					
ANR	1894648	OrExpression	"! attr -> children -> content [ 0 ] || ! xmlStrcmp ( attr -> children -> content , ( const xmlChar * ) ""0"" )"		1894205	1		||			
ANR	1894649	UnaryOperationExpression	! attr -> children -> content [ 0 ]		1894205	0					
ANR	1894650	UnaryOperator	!		1894205	0					
ANR	1894651	ArrayIndexing	attr -> children -> content [ 0 ]		1894205	1					
ANR	1894652	PtrMemberAccess	attr -> children -> content		1894205	0					
ANR	1894653	PtrMemberAccess	attr -> children		1894205	0					
ANR	1894654	Identifier	attr		1894205	0					
ANR	1894655	Identifier	children		1894205	1					
ANR	1894656	Identifier	content		1894205	1					
ANR	1894657	PrimaryExpression	0		1894205	1					
ANR	1894658	UnaryOperationExpression	"! xmlStrcmp ( attr -> children -> content , ( const xmlChar * ) ""0"" )"		1894205	1					
ANR	1894659	UnaryOperator	!		1894205	0					
ANR	1894660	CallExpression	"xmlStrcmp ( attr -> children -> content , ( const xmlChar * ) ""0"" )"		1894205	1					
ANR	1894661	Callee	xmlStrcmp		1894205	0					
ANR	1894662	Identifier	xmlStrcmp		1894205	0					
ANR	1894663	ArgumentList	attr -> children -> content		1894205	1					
ANR	1894664	Argument	attr -> children -> content		1894205	0					
ANR	1894665	PtrMemberAccess	attr -> children -> content		1894205	0					
ANR	1894666	PtrMemberAccess	attr -> children		1894205	0					
ANR	1894667	Identifier	attr		1894205	0					
ANR	1894668	Identifier	children		1894205	1					
ANR	1894669	Identifier	content		1894205	1					
ANR	1894670	Argument	"( const xmlChar * ) ""0"""		1894205	1					
ANR	1894671	CastExpression	"( const xmlChar * ) ""0"""		1894205	0					
ANR	1894672	CastTarget	const xmlChar *		1894205	0					
ANR	1894673	PrimaryExpression	"""0"""		1894205	1					
ANR	1894674	CompoundStatement		66:145:1779:1779	1894205	1					
ANR	1894675	ExpressionStatement	exists = 0	780:4:21810:21820	1894205	0	True				
ANR	1894676	AssignmentExpression	exists = 0		1894205	0		=			
ANR	1894677	Identifier	exists		1894205	0					
ANR	1894678	PrimaryExpression	0		1894205	1					
ANR	1894679	IfStatement	if ( elements )		1894205	1					
ANR	1894680	Condition	elements	784:6:21838:21845	1894205	0	True				
ANR	1894681	Identifier	elements		1894205	0					
ANR	1894682	CompoundStatement		72:16:1877:1877	1894205	1					
ANR	1894683	IfStatement	if ( Z_TYPE_P ( member ) == IS_LONG )		1894205	0					
ANR	1894684	Condition	Z_TYPE_P ( member ) == IS_LONG	785:7:21857:21883	1894205	0	True				
ANR	1894685	EqualityExpression	Z_TYPE_P ( member ) == IS_LONG		1894205	0		==			
ANR	1894686	CallExpression	Z_TYPE_P ( member )		1894205	0					
ANR	1894687	Callee	Z_TYPE_P		1894205	0					
ANR	1894688	Identifier	Z_TYPE_P		1894205	0					
ANR	1894689	ArgumentList	member		1894205	1					
ANR	1894690	Argument	member		1894205	0					
ANR	1894691	Identifier	member		1894205	0					
ANR	1894692	Identifier	IS_LONG		1894205	1					
ANR	1894693	CompoundStatement		73:36:1915:1915	1894205	1					
ANR	1894694	IfStatement	if ( sxe -> iter . type == SXE_ITER_CHILD )		1894205	0					
ANR	1894695	Condition	sxe -> iter . type == SXE_ITER_CHILD	786:8:21896:21927	1894205	0	True				
ANR	1894696	EqualityExpression	sxe -> iter . type == SXE_ITER_CHILD		1894205	0		==			
ANR	1894697	MemberAccess	sxe -> iter . type		1894205	0					
ANR	1894698	PtrMemberAccess	sxe -> iter		1894205	0					
ANR	1894699	Identifier	sxe		1894205	0					
ANR	1894700	Identifier	iter		1894205	1					
ANR	1894701	Identifier	type		1894205	1					
ANR	1894702	Identifier	SXE_ITER_CHILD		1894205	1					
ANR	1894703	CompoundStatement		74:42:1959:1959	1894205	1					
ANR	1894704	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , node )"	787:5:21937:21977	1894205	0	True				
ANR	1894705	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , node )"		1894205	0		=			
ANR	1894706	Identifier	node		1894205	0					
ANR	1894707	CallExpression	"php_sxe_get_first_node ( sxe , node )"		1894205	1					
ANR	1894708	Callee	php_sxe_get_first_node		1894205	0					
ANR	1894709	Identifier	php_sxe_get_first_node		1894205	0					
ANR	1894710	ArgumentList	sxe		1894205	1					
ANR	1894711	Argument	sxe		1894205	0					
ANR	1894712	Identifier	sxe		1894205	0					
ANR	1894713	Argument	node		1894205	1					
ANR	1894714	Identifier	node		1894205	0					
ANR	1894715	ExpressionStatement	"node = sxe_get_element_by_offset ( sxe , Z_LVAL_P ( member ) , node , NULL )"	789:4:21989:22056	1894205	1	True				
ANR	1894716	AssignmentExpression	"node = sxe_get_element_by_offset ( sxe , Z_LVAL_P ( member ) , node , NULL )"		1894205	0		=			
ANR	1894717	Identifier	node		1894205	0					
ANR	1894718	CallExpression	"sxe_get_element_by_offset ( sxe , Z_LVAL_P ( member ) , node , NULL )"		1894205	1					
ANR	1894719	Callee	sxe_get_element_by_offset		1894205	0					
ANR	1894720	Identifier	sxe_get_element_by_offset		1894205	0					
ANR	1894721	ArgumentList	sxe		1894205	1					
ANR	1894722	Argument	sxe		1894205	0					
ANR	1894723	Identifier	sxe		1894205	0					
ANR	1894724	Argument	Z_LVAL_P ( member )		1894205	1					
ANR	1894725	CallExpression	Z_LVAL_P ( member )		1894205	0					
ANR	1894726	Callee	Z_LVAL_P		1894205	0					
ANR	1894727	Identifier	Z_LVAL_P		1894205	0					
ANR	1894728	ArgumentList	member		1894205	1					
ANR	1894729	Argument	member		1894205	0					
ANR	1894730	Identifier	member		1894205	0					
ANR	1894731	Argument	node		1894205	2					
ANR	1894732	Identifier	node		1894205	0					
ANR	1894733	Argument	NULL		1894205	3					
ANR	1894734	Identifier	NULL		1894205	0					
ANR	1894735	ElseStatement	else		1894205	0					
ANR	1894736	CompoundStatement		79:8:2100:2100	1894205	0					
ANR	1894737	ExpressionStatement	node = node -> children	792:4:22077:22098	1894205	0	True				
ANR	1894738	AssignmentExpression	node = node -> children		1894205	0		=			
ANR	1894739	Identifier	node		1894205	0					
ANR	1894740	PtrMemberAccess	node -> children		1894205	1					
ANR	1894741	Identifier	node		1894205	0					
ANR	1894742	Identifier	children		1894205	1					
ANR	1894743	WhileStatement	while ( node )		1894205	1					
ANR	1894744	Condition	node	793:11:22111:22114	1894205	0	True				
ANR	1894745	Identifier	node		1894205	0					
ANR	1894746	CompoundStatement		82:5:2153:2169	1894205	1					
ANR	1894747	IdentifierDeclStatement	xmlNodePtr nnext ;	794:5:22124:22140	1894205	0	True				
ANR	1894748	IdentifierDecl	nnext		1894205	0					
ANR	1894749	IdentifierDeclType	xmlNodePtr		1894205	0					
ANR	1894750	Identifier	nnext		1894205	1					
ANR	1894751	ExpressionStatement	nnext = node -> next	795:5:22147:22165	1894205	1	True				
ANR	1894752	AssignmentExpression	nnext = node -> next		1894205	0		=			
ANR	1894753	Identifier	nnext		1894205	0					
ANR	1894754	PtrMemberAccess	node -> next		1894205	1					
ANR	1894755	Identifier	node		1894205	0					
ANR	1894756	Identifier	next		1894205	1					
ANR	1894757	IfStatement	"if ( ( node -> type == XML_ELEMENT_NODE ) && ! xmlStrcmp ( node -> name , ( xmlChar * ) Z_STRVAL_P ( member ) ) )"		1894205	2					
ANR	1894758	Condition	"( node -> type == XML_ELEMENT_NODE ) && ! xmlStrcmp ( node -> name , ( xmlChar * ) Z_STRVAL_P ( member ) )"	796:9:22176:22264	1894205	0	True				
ANR	1894759	AndExpression	"( node -> type == XML_ELEMENT_NODE ) && ! xmlStrcmp ( node -> name , ( xmlChar * ) Z_STRVAL_P ( member ) )"		1894205	0		&&			
ANR	1894760	EqualityExpression	node -> type == XML_ELEMENT_NODE		1894205	0		==			
ANR	1894761	PtrMemberAccess	node -> type		1894205	0					
ANR	1894762	Identifier	node		1894205	0					
ANR	1894763	Identifier	type		1894205	1					
ANR	1894764	Identifier	XML_ELEMENT_NODE		1894205	1					
ANR	1894765	UnaryOperationExpression	"! xmlStrcmp ( node -> name , ( xmlChar * ) Z_STRVAL_P ( member ) )"		1894205	1					
ANR	1894766	UnaryOperator	!		1894205	0					
ANR	1894767	CallExpression	"xmlStrcmp ( node -> name , ( xmlChar * ) Z_STRVAL_P ( member ) )"		1894205	1					
ANR	1894768	Callee	xmlStrcmp		1894205	0					
ANR	1894769	Identifier	xmlStrcmp		1894205	0					
ANR	1894770	ArgumentList	node -> name		1894205	1					
ANR	1894771	Argument	node -> name		1894205	0					
ANR	1894772	PtrMemberAccess	node -> name		1894205	0					
ANR	1894773	Identifier	node		1894205	0					
ANR	1894774	Identifier	name		1894205	1					
ANR	1894775	Argument	( xmlChar * ) Z_STRVAL_P ( member )		1894205	1					
ANR	1894776	CastExpression	( xmlChar * ) Z_STRVAL_P ( member )		1894205	0					
ANR	1894777	CastTarget	xmlChar *		1894205	0					
ANR	1894778	CallExpression	Z_STRVAL_P ( member )		1894205	1					
ANR	1894779	Callee	Z_STRVAL_P		1894205	0					
ANR	1894780	Identifier	Z_STRVAL_P		1894205	0					
ANR	1894781	ArgumentList	member		1894205	1					
ANR	1894782	Argument	member		1894205	0					
ANR	1894783	Identifier	member		1894205	0					
ANR	1894784	CompoundStatement		84:100:2296:2296	1894205	1					
ANR	1894785	BreakStatement	break ;	797:6:22275:22280	1894205	0	True				
ANR	1894786	ExpressionStatement	node = nnext	799:5:22294:22306	1894205	3	True				
ANR	1894787	AssignmentExpression	node = nnext		1894205	0		=			
ANR	1894788	Identifier	node		1894205	0					
ANR	1894789	Identifier	nnext		1894205	1					
ANR	1894790	IfStatement	if ( node )		1894205	1					
ANR	1894791	Condition	node	802:7:22326:22329	1894205	0	True				
ANR	1894792	Identifier	node		1894205	0					
ANR	1894793	CompoundStatement		90:13:2361:2361	1894205	1					
ANR	1894794	ExpressionStatement	exists = 1	803:4:22338:22348	1894205	0	True				
ANR	1894795	AssignmentExpression	exists = 1		1894205	0		=			
ANR	1894796	Identifier	exists		1894205	0					
ANR	1894797	PrimaryExpression	1		1894205	1					
ANR	1894798	IfStatement	"if ( check_empty == 1 && ( ! node -> children || ( node -> children -> type == XML_TEXT_NODE && ! node -> children -> next && ( ! node -> children -> content || ! node -> children -> content [ 0 ] || ! xmlStrcmp ( node -> children -> content , ( const xmlChar * ) ""0"" ) ) ) ) )"		1894205	1					
ANR	1894799	Condition	"check_empty == 1 && ( ! node -> children || ( node -> children -> type == XML_TEXT_NODE && ! node -> children -> next && ( ! node -> children -> content || ! node -> children -> content [ 0 ] || ! xmlStrcmp ( node -> children -> content , ( const xmlChar * ) ""0"" ) ) ) )"	804:8:22358:22596	1894205	0	True				
ANR	1894800	AndExpression	"check_empty == 1 && ( ! node -> children || ( node -> children -> type == XML_TEXT_NODE && ! node -> children -> next && ( ! node -> children -> content || ! node -> children -> content [ 0 ] || ! xmlStrcmp ( node -> children -> content , ( const xmlChar * ) ""0"" ) ) ) )"		1894205	0		&&			
ANR	1894801	EqualityExpression	check_empty == 1		1894205	0		==			
ANR	1894802	Identifier	check_empty		1894205	0					
ANR	1894803	PrimaryExpression	1		1894205	1					
ANR	1894804	OrExpression	"! node -> children || ( node -> children -> type == XML_TEXT_NODE && ! node -> children -> next && ( ! node -> children -> content || ! node -> children -> content [ 0 ] || ! xmlStrcmp ( node -> children -> content , ( const xmlChar * ) ""0"" ) ) )"		1894205	1		||			
ANR	1894805	UnaryOperationExpression	! node -> children		1894205	0					
ANR	1894806	UnaryOperator	!		1894205	0					
ANR	1894807	PtrMemberAccess	node -> children		1894205	1					
ANR	1894808	Identifier	node		1894205	0					
ANR	1894809	Identifier	children		1894205	1					
ANR	1894810	AndExpression	"node -> children -> type == XML_TEXT_NODE && ! node -> children -> next && ( ! node -> children -> content || ! node -> children -> content [ 0 ] || ! xmlStrcmp ( node -> children -> content , ( const xmlChar * ) ""0"" ) )"		1894205	1		&&			
ANR	1894811	EqualityExpression	node -> children -> type == XML_TEXT_NODE		1894205	0		==			
ANR	1894812	PtrMemberAccess	node -> children -> type		1894205	0					
ANR	1894813	PtrMemberAccess	node -> children		1894205	0					
ANR	1894814	Identifier	node		1894205	0					
ANR	1894815	Identifier	children		1894205	1					
ANR	1894816	Identifier	type		1894205	1					
ANR	1894817	Identifier	XML_TEXT_NODE		1894205	1					
ANR	1894818	AndExpression	"! node -> children -> next && ( ! node -> children -> content || ! node -> children -> content [ 0 ] || ! xmlStrcmp ( node -> children -> content , ( const xmlChar * ) ""0"" ) )"		1894205	1		&&			
ANR	1894819	UnaryOperationExpression	! node -> children -> next		1894205	0					
ANR	1894820	UnaryOperator	!		1894205	0					
ANR	1894821	PtrMemberAccess	node -> children -> next		1894205	1					
ANR	1894822	PtrMemberAccess	node -> children		1894205	0					
ANR	1894823	Identifier	node		1894205	0					
ANR	1894824	Identifier	children		1894205	1					
ANR	1894825	Identifier	next		1894205	1					
ANR	1894826	OrExpression	"! node -> children -> content || ! node -> children -> content [ 0 ] || ! xmlStrcmp ( node -> children -> content , ( const xmlChar * ) ""0"" )"		1894205	1		||			
ANR	1894827	UnaryOperationExpression	! node -> children -> content		1894205	0					
ANR	1894828	UnaryOperator	!		1894205	0					
ANR	1894829	PtrMemberAccess	node -> children -> content		1894205	1					
ANR	1894830	PtrMemberAccess	node -> children		1894205	0					
ANR	1894831	Identifier	node		1894205	0					
ANR	1894832	Identifier	children		1894205	1					
ANR	1894833	Identifier	content		1894205	1					
ANR	1894834	OrExpression	"! node -> children -> content [ 0 ] || ! xmlStrcmp ( node -> children -> content , ( const xmlChar * ) ""0"" )"		1894205	1		||			
ANR	1894835	UnaryOperationExpression	! node -> children -> content [ 0 ]		1894205	0					
ANR	1894836	UnaryOperator	!		1894205	0					
ANR	1894837	ArrayIndexing	node -> children -> content [ 0 ]		1894205	1					
ANR	1894838	PtrMemberAccess	node -> children -> content		1894205	0					
ANR	1894839	PtrMemberAccess	node -> children		1894205	0					
ANR	1894840	Identifier	node		1894205	0					
ANR	1894841	Identifier	children		1894205	1					
ANR	1894842	Identifier	content		1894205	1					
ANR	1894843	PrimaryExpression	0		1894205	1					
ANR	1894844	UnaryOperationExpression	"! xmlStrcmp ( node -> children -> content , ( const xmlChar * ) ""0"" )"		1894205	1					
ANR	1894845	UnaryOperator	!		1894205	0					
ANR	1894846	CallExpression	"xmlStrcmp ( node -> children -> content , ( const xmlChar * ) ""0"" )"		1894205	1					
ANR	1894847	Callee	xmlStrcmp		1894205	0					
ANR	1894848	Identifier	xmlStrcmp		1894205	0					
ANR	1894849	ArgumentList	node -> children -> content		1894205	1					
ANR	1894850	Argument	node -> children -> content		1894205	0					
ANR	1894851	PtrMemberAccess	node -> children -> content		1894205	0					
ANR	1894852	PtrMemberAccess	node -> children		1894205	0					
ANR	1894853	Identifier	node		1894205	0					
ANR	1894854	Identifier	children		1894205	1					
ANR	1894855	Identifier	content		1894205	1					
ANR	1894856	Argument	"( const xmlChar * ) ""0"""		1894205	1					
ANR	1894857	CastExpression	"( const xmlChar * ) ""0"""		1894205	0					
ANR	1894858	CastTarget	const xmlChar *		1894205	0					
ANR	1894859	PrimaryExpression	"""0"""		1894205	1					
ANR	1894860	CompoundStatement		94:130:2629:2629	1894205	1					
ANR	1894861	ExpressionStatement	exists = 0	807:5:22607:22617	1894205	0	True				
ANR	1894862	AssignmentExpression	exists = 0		1894205	0		=			
ANR	1894863	Identifier	exists		1894205	0					
ANR	1894864	PrimaryExpression	0		1894205	1					
ANR	1894865	IfStatement	if ( member == & tmp_zv )		1894205	12					
ANR	1894866	Condition	member == & tmp_zv	813:5:22643:22659	1894205	0	True				
ANR	1894867	EqualityExpression	member == & tmp_zv		1894205	0		==			
ANR	1894868	Identifier	member		1894205	0					
ANR	1894869	UnaryOperationExpression	& tmp_zv		1894205	1					
ANR	1894870	UnaryOperator	&		1894205	0					
ANR	1894871	Identifier	tmp_zv		1894205	1					
ANR	1894872	CompoundStatement		101:24:2691:2691	1894205	1					
ANR	1894873	ExpressionStatement	zval_dtor ( & tmp_zv )	814:2:22666:22684	1894205	0	True				
ANR	1894874	CallExpression	zval_dtor ( & tmp_zv )		1894205	0					
ANR	1894875	Callee	zval_dtor		1894205	0					
ANR	1894876	Identifier	zval_dtor		1894205	0					
ANR	1894877	ArgumentList	& tmp_zv		1894205	1					
ANR	1894878	Argument	& tmp_zv		1894205	0					
ANR	1894879	UnaryOperationExpression	& tmp_zv		1894205	0					
ANR	1894880	UnaryOperator	&		1894205	0					
ANR	1894881	Identifier	tmp_zv		1894205	1					
ANR	1894882	ReturnStatement	return exists ;	817:1:22691:22704	1894205	13	True				
ANR	1894883	Identifier	exists		1894205	0					
ANR	1894884	ReturnType	static int		1894205	1					
ANR	1894885	Identifier	sxe_prop_dim_exists		1894205	2					
ANR	1894886	ParameterList	"zval * object , zval * member , int check_empty , zend_bool elements , zend_bool attribs"		1894205	3					
ANR	1894887	Parameter	zval * object	712:31:19886:19897	1894205	0	True				
ANR	1894888	ParameterType	zval *		1894205	0					
ANR	1894889	Identifier	object		1894205	1					
ANR	1894890	Parameter	zval * member	712:45:19900:19911	1894205	1	True				
ANR	1894891	ParameterType	zval *		1894205	0					
ANR	1894892	Identifier	member		1894205	1					
ANR	1894893	Parameter	int check_empty	712:59:19914:19928	1894205	2	True				
ANR	1894894	ParameterType	int		1894205	0					
ANR	1894895	Identifier	check_empty		1894205	1					
ANR	1894896	Parameter	zend_bool elements	712:76:19931:19948	1894205	3	True				
ANR	1894897	ParameterType	zend_bool		1894205	0					
ANR	1894898	Identifier	elements		1894205	1					
ANR	1894899	Parameter	zend_bool attribs	712:96:19951:19967	1894205	4	True				
ANR	1894900	ParameterType	zend_bool		1894205	0					
ANR	1894901	Identifier	attribs		1894205	1					
ANR	1894902	CFGEntryNode	ENTRY		1894205		True				
ANR	1894903	CFGExitNode	EXIT		1894205		True				
ANR	1894904	Symbol	XML_ELEMENT_NODE		1894205						
ANR	1894905	Symbol	* * attr		1894205						
ANR	1894906	Symbol	* * node -> children		1894205						
ANR	1894907	Symbol	XML_TEXT_NODE		1894205						
ANR	1894908	Symbol	* node		1894205						
ANR	1894909	Symbol	IS_STRING		1894205						
ANR	1894910	Symbol	node -> children -> next		1894205						
ANR	1894911	Symbol	nnext		1894205						
ANR	1894912	Symbol	sxe		1894205						
ANR	1894913	Symbol	check_empty		1894205						
ANR	1894914	Symbol	NULL		1894205						
ANR	1894915	Symbol	xmlStrcmp		1894205						
ANR	1894916	Symbol	test		1894205						
ANR	1894917	Symbol	sxe -> iter . type		1894205						
ANR	1894918	Symbol	attribs		1894205						
ANR	1894919	Symbol	sxe -> iter		1894205						
ANR	1894920	Symbol	node		1894205						
ANR	1894921	Symbol	* * node		1894205						
ANR	1894922	Symbol	sxe -> iter . nsprefix		1894205						
ANR	1894923	Symbol	node -> type		1894205						
ANR	1894924	Symbol	* attr		1894205						
ANR	1894925	Symbol	* attr -> children -> content		1894205						
ANR	1894926	Symbol	Z_SXEOBJ_P		1894205						
ANR	1894927	Symbol	node -> children		1894205						
ANR	1894928	Symbol	object		1894205						
ANR	1894929	Symbol	attr -> next		1894205						
ANR	1894930	Symbol	tmp_zv		1894205						
ANR	1894931	Symbol	SXE_ITER_ATTRLIST		1894205						
ANR	1894932	Symbol	SXE_ITER_CHILD		1894205						
ANR	1894933	Symbol	& tmp_zv		1894205						
ANR	1894934	Symbol	nodendx		1894205						
ANR	1894935	Symbol	* sxe		1894205						
ANR	1894936	Symbol	* attr -> children		1894205						
ANR	1894937	Symbol	* node -> children -> content		1894205						
ANR	1894938	Symbol	match_ns		1894205						
ANR	1894939	Symbol	* * * node		1894205						
ANR	1894940	Symbol	node -> children -> type		1894205						
ANR	1894941	Symbol	IS_LONG		1894205						
ANR	1894942	Symbol	member		1894205						
ANR	1894943	Symbol	attr		1894205						
ANR	1894944	Symbol	* node -> children		1894205						
ANR	1894945	Symbol	php_sxe_get_first_node		1894205						
ANR	1894946	Symbol	attr -> children -> content		1894205						
ANR	1894947	Symbol	zval_get_string		1894205						
ANR	1894948	Symbol	node -> properties		1894205						
ANR	1894949	Symbol	sxe -> iter . isprefix		1894205						
ANR	1894950	Symbol	sxe_get_element_by_offset		1894205						
ANR	1894951	Symbol	node -> children -> content		1894205						
ANR	1894952	Symbol	node -> next		1894205						
ANR	1894953	Symbol	Z_TYPE_P		1894205						
ANR	1894954	Symbol	attr -> children		1894205						
ANR	1894955	Symbol	Z_STRVAL_P		1894205						
ANR	1894956	Symbol	Z_LVAL_P		1894205						
ANR	1894957	Symbol	sxe -> iter . name		1894205						
ANR	1894958	Symbol	node -> name		1894205						
ANR	1894959	Symbol	elements		1894205						
ANR	1894960	Symbol	exists		1894205						
ANR	1894961	Symbol	attr -> name		1894205						
ANR	1894962	Symbol	* * attr -> children		1894205						
ANR	1894963	Symbol	* * * attr		1894205						
ANR	1894964	Function	sxe_property_exists	823:0:22752:22913							
ANR	1894965	FunctionDef	"sxe_property_exists (zval * object , zval * member , int check_empty , void * * cache_slot)"		1894964	0					
ANR	1894966	CompoundStatement		824:0:22847:22913	1894964	0					
ANR	1894967	ReturnStatement	"return sxe_prop_dim_exists ( object , member , check_empty , 1 , 0 ) ;"	825:1:22850:22911	1894964	0	True				
ANR	1894968	CallExpression	"sxe_prop_dim_exists ( object , member , check_empty , 1 , 0 )"		1894964	0					
ANR	1894969	Callee	sxe_prop_dim_exists		1894964	0					
ANR	1894970	Identifier	sxe_prop_dim_exists		1894964	0					
ANR	1894971	ArgumentList	object		1894964	1					
ANR	1894972	Argument	object		1894964	0					
ANR	1894973	Identifier	object		1894964	0					
ANR	1894974	Argument	member		1894964	1					
ANR	1894975	Identifier	member		1894964	0					
ANR	1894976	Argument	check_empty		1894964	2					
ANR	1894977	Identifier	check_empty		1894964	0					
ANR	1894978	Argument	1		1894964	3					
ANR	1894979	PrimaryExpression	1		1894964	0					
ANR	1894980	Argument	0		1894964	4					
ANR	1894981	PrimaryExpression	0		1894964	0					
ANR	1894982	ReturnType	static int		1894964	1					
ANR	1894983	Identifier	sxe_property_exists		1894964	2					
ANR	1894984	ParameterList	"zval * object , zval * member , int check_empty , void * * cache_slot"		1894964	3					
ANR	1894985	Parameter	zval * object	823:31:22783:22794	1894964	0	True				
ANR	1894986	ParameterType	zval *		1894964	0					
ANR	1894987	Identifier	object		1894964	1					
ANR	1894988	Parameter	zval * member	823:45:22797:22808	1894964	1	True				
ANR	1894989	ParameterType	zval *		1894964	0					
ANR	1894990	Identifier	member		1894964	1					
ANR	1894991	Parameter	int check_empty	823:59:22811:22825	1894964	2	True				
ANR	1894992	ParameterType	int		1894964	0					
ANR	1894993	Identifier	check_empty		1894964	1					
ANR	1894994	Parameter	void * * cache_slot	823:76:22828:22844	1894964	3	True				
ANR	1894995	ParameterType	void * *		1894964	0					
ANR	1894996	Identifier	cache_slot		1894964	1					
ANR	1894997	CFGEntryNode	ENTRY		1894964		True				
ANR	1894998	CFGExitNode	EXIT		1894964		True				
ANR	1894999	Symbol	cache_slot		1894964						
ANR	1895000	Symbol	check_empty		1894964						
ANR	1895001	Symbol	sxe_prop_dim_exists		1894964						
ANR	1895002	Symbol	member		1894964						
ANR	1895003	Symbol	object		1894964						
ANR	1895004	Function	sxe_dimension_exists	831:0:22960:23103							
ANR	1895005	FunctionDef	"sxe_dimension_exists (zval * object , zval * member , int check_empty)"		1895004	0					
ANR	1895006	CompoundStatement		832:0:23037:23103	1895004	0					
ANR	1895007	ReturnStatement	"return sxe_prop_dim_exists ( object , member , check_empty , 0 , 1 ) ;"	833:1:23040:23101	1895004	0	True				
ANR	1895008	CallExpression	"sxe_prop_dim_exists ( object , member , check_empty , 0 , 1 )"		1895004	0					
ANR	1895009	Callee	sxe_prop_dim_exists		1895004	0					
ANR	1895010	Identifier	sxe_prop_dim_exists		1895004	0					
ANR	1895011	ArgumentList	object		1895004	1					
ANR	1895012	Argument	object		1895004	0					
ANR	1895013	Identifier	object		1895004	0					
ANR	1895014	Argument	member		1895004	1					
ANR	1895015	Identifier	member		1895004	0					
ANR	1895016	Argument	check_empty		1895004	2					
ANR	1895017	Identifier	check_empty		1895004	0					
ANR	1895018	Argument	0		1895004	3					
ANR	1895019	PrimaryExpression	0		1895004	0					
ANR	1895020	Argument	1		1895004	4					
ANR	1895021	PrimaryExpression	1		1895004	0					
ANR	1895022	ReturnType	static int		1895004	1					
ANR	1895023	Identifier	sxe_dimension_exists		1895004	2					
ANR	1895024	ParameterList	"zval * object , zval * member , int check_empty"		1895004	3					
ANR	1895025	Parameter	zval * object	831:32:22992:23003	1895004	0	True				
ANR	1895026	ParameterType	zval *		1895004	0					
ANR	1895027	Identifier	object		1895004	1					
ANR	1895028	Parameter	zval * member	831:46:23006:23017	1895004	1	True				
ANR	1895029	ParameterType	zval *		1895004	0					
ANR	1895030	Identifier	member		1895004	1					
ANR	1895031	Parameter	int check_empty	831:60:23020:23034	1895004	2	True				
ANR	1895032	ParameterType	int		1895004	0					
ANR	1895033	Identifier	check_empty		1895004	1					
ANR	1895034	CFGEntryNode	ENTRY		1895004		True				
ANR	1895035	CFGExitNode	EXIT		1895004		True				
ANR	1895036	Symbol	check_empty		1895004						
ANR	1895037	Symbol	sxe_prop_dim_exists		1895004						
ANR	1895038	Symbol	member		1895004						
ANR	1895039	Symbol	object		1895004						
ANR	1895040	Function	sxe_prop_dim_delete	839:0:23149:25722							
ANR	1895041	FunctionDef	"sxe_prop_dim_delete (zval * object , zval * member , zend_bool elements , zend_bool attribs)"		1895040	0					
ANR	1895042	CompoundStatement		840:0:23248:25722	1895040	0					
ANR	1895043	IdentifierDeclStatement	php_sxe_object * sxe ;	841:1:23251:23270	1895040	0	True				
ANR	1895044	IdentifierDecl	* sxe		1895040	0					
ANR	1895045	IdentifierDeclType	php_sxe_object *		1895040	0					
ANR	1895046	Identifier	sxe		1895040	1					
ANR	1895047	IdentifierDeclStatement	xmlNodePtr node ;	842:1:23273:23293	1895040	1	True				
ANR	1895048	IdentifierDecl	node		1895040	0					
ANR	1895049	IdentifierDeclType	xmlNodePtr		1895040	0					
ANR	1895050	Identifier	node		1895040	1					
ANR	1895051	IdentifierDeclStatement	xmlNodePtr nnext ;	843:1:23296:23317	1895040	2	True				
ANR	1895052	IdentifierDecl	nnext		1895040	0					
ANR	1895053	IdentifierDeclType	xmlNodePtr		1895040	0					
ANR	1895054	Identifier	nnext		1895040	1					
ANR	1895055	IdentifierDeclStatement	xmlAttrPtr attr = NULL ;	844:1:23320:23347	1895040	3	True				
ANR	1895056	IdentifierDecl	attr = NULL		1895040	0					
ANR	1895057	IdentifierDeclType	xmlAttrPtr		1895040	0					
ANR	1895058	Identifier	attr		1895040	1					
ANR	1895059	AssignmentExpression	attr = NULL		1895040	2		=			
ANR	1895060	Identifier	NULL		1895040	0					
ANR	1895061	Identifier	NULL		1895040	1					
ANR	1895062	IdentifierDeclStatement	xmlAttrPtr anext ;	845:1:23350:23371	1895040	4	True				
ANR	1895063	IdentifierDecl	anext		1895040	0					
ANR	1895064	IdentifierDeclType	xmlAttrPtr		1895040	0					
ANR	1895065	Identifier	anext		1895040	1					
ANR	1895066	IdentifierDeclStatement	zval tmp_zv ;	846:1:23374:23396	1895040	5	True				
ANR	1895067	IdentifierDecl	tmp_zv		1895040	0					
ANR	1895068	IdentifierDeclType	zval		1895040	0					
ANR	1895069	Identifier	tmp_zv		1895040	1					
ANR	1895070	IdentifierDeclStatement	int test = 0 ;	847:1:23399:23423	1895040	6	True				
ANR	1895071	IdentifierDecl	test = 0		1895040	0					
ANR	1895072	IdentifierDeclType	int		1895040	0					
ANR	1895073	Identifier	test		1895040	1					
ANR	1895074	AssignmentExpression	test = 0		1895040	2		=			
ANR	1895075	Identifier	test		1895040	0					
ANR	1895076	PrimaryExpression	0		1895040	1					
ANR	1895077	IfStatement	if ( Z_TYPE_P ( member ) != IS_STRING && Z_TYPE_P ( member ) != IS_LONG )		1895040	7					
ANR	1895078	Condition	Z_TYPE_P ( member ) != IS_STRING && Z_TYPE_P ( member ) != IS_LONG	849:5:23431:23490	1895040	0	True				
ANR	1895079	AndExpression	Z_TYPE_P ( member ) != IS_STRING && Z_TYPE_P ( member ) != IS_LONG		1895040	0		&&			
ANR	1895080	EqualityExpression	Z_TYPE_P ( member ) != IS_STRING		1895040	0		!=			
ANR	1895081	CallExpression	Z_TYPE_P ( member )		1895040	0					
ANR	1895082	Callee	Z_TYPE_P		1895040	0					
ANR	1895083	Identifier	Z_TYPE_P		1895040	0					
ANR	1895084	ArgumentList	member		1895040	1					
ANR	1895085	Argument	member		1895040	0					
ANR	1895086	Identifier	member		1895040	0					
ANR	1895087	Identifier	IS_STRING		1895040	1					
ANR	1895088	EqualityExpression	Z_TYPE_P ( member ) != IS_LONG		1895040	1		!=			
ANR	1895089	CallExpression	Z_TYPE_P ( member )		1895040	0					
ANR	1895090	Callee	Z_TYPE_P		1895040	0					
ANR	1895091	Identifier	Z_TYPE_P		1895040	0					
ANR	1895092	ArgumentList	member		1895040	1					
ANR	1895093	Argument	member		1895040	0					
ANR	1895094	Identifier	member		1895040	0					
ANR	1895095	Identifier	IS_LONG		1895040	1					
ANR	1895096	CompoundStatement		10:67:244:244	1895040	1					
ANR	1895097	ExpressionStatement	"ZVAL_STR ( & tmp_zv , zval_get_string ( member ) )"	850:2:23497:23539	1895040	0	True				
ANR	1895098	CallExpression	"ZVAL_STR ( & tmp_zv , zval_get_string ( member ) )"		1895040	0					
ANR	1895099	Callee	ZVAL_STR		1895040	0					
ANR	1895100	Identifier	ZVAL_STR		1895040	0					
ANR	1895101	ArgumentList	& tmp_zv		1895040	1					
ANR	1895102	Argument	& tmp_zv		1895040	0					
ANR	1895103	UnaryOperationExpression	& tmp_zv		1895040	0					
ANR	1895104	UnaryOperator	&		1895040	0					
ANR	1895105	Identifier	tmp_zv		1895040	1					
ANR	1895106	Argument	zval_get_string ( member )		1895040	1					
ANR	1895107	CallExpression	zval_get_string ( member )		1895040	0					
ANR	1895108	Callee	zval_get_string		1895040	0					
ANR	1895109	Identifier	zval_get_string		1895040	0					
ANR	1895110	ArgumentList	member		1895040	1					
ANR	1895111	Argument	member		1895040	0					
ANR	1895112	Identifier	member		1895040	0					
ANR	1895113	ExpressionStatement	member = & tmp_zv	851:2:23543:23559	1895040	1	True				
ANR	1895114	AssignmentExpression	member = & tmp_zv		1895040	0		=			
ANR	1895115	Identifier	member		1895040	0					
ANR	1895116	UnaryOperationExpression	& tmp_zv		1895040	1					
ANR	1895117	UnaryOperator	&		1895040	0					
ANR	1895118	Identifier	tmp_zv		1895040	1					
ANR	1895119	ExpressionStatement	sxe = Z_SXEOBJ_P ( object )	854:1:23566:23590	1895040	8	True				
ANR	1895120	AssignmentExpression	sxe = Z_SXEOBJ_P ( object )		1895040	0		=			
ANR	1895121	Identifier	sxe		1895040	0					
ANR	1895122	CallExpression	Z_SXEOBJ_P ( object )		1895040	1					
ANR	1895123	Callee	Z_SXEOBJ_P		1895040	0					
ANR	1895124	Identifier	Z_SXEOBJ_P		1895040	0					
ANR	1895125	ArgumentList	object		1895040	1					
ANR	1895126	Argument	object		1895040	0					
ANR	1895127	Identifier	object		1895040	0					
ANR	1895128	ExpressionStatement	"GET_NODE ( sxe , node )"	856:1:23594:23613	1895040	9	True				
ANR	1895129	CallExpression	"GET_NODE ( sxe , node )"		1895040	0					
ANR	1895130	Callee	GET_NODE		1895040	0					
ANR	1895131	Identifier	GET_NODE		1895040	0					
ANR	1895132	ArgumentList	sxe		1895040	1					
ANR	1895133	Argument	sxe		1895040	0					
ANR	1895134	Identifier	sxe		1895040	0					
ANR	1895135	Argument	node		1895040	1					
ANR	1895136	Identifier	node		1895040	0					
ANR	1895137	IfStatement	if ( Z_TYPE_P ( member ) == IS_LONG )		1895040	10					
ANR	1895138	Condition	Z_TYPE_P ( member ) == IS_LONG	858:5:23621:23647	1895040	0	True				
ANR	1895139	EqualityExpression	Z_TYPE_P ( member ) == IS_LONG		1895040	0		==			
ANR	1895140	CallExpression	Z_TYPE_P ( member )		1895040	0					
ANR	1895141	Callee	Z_TYPE_P		1895040	0					
ANR	1895142	Identifier	Z_TYPE_P		1895040	0					
ANR	1895143	ArgumentList	member		1895040	1					
ANR	1895144	Argument	member		1895040	0					
ANR	1895145	Identifier	member		1895040	0					
ANR	1895146	Identifier	IS_LONG		1895040	1					
ANR	1895147	CompoundStatement		19:34:401:401	1895040	1					
ANR	1895148	IfStatement	if ( sxe -> iter . type != SXE_ITER_ATTRLIST )		1895040	0					
ANR	1895149	Condition	sxe -> iter . type != SXE_ITER_ATTRLIST	859:6:23658:23692	1895040	0	True				
ANR	1895150	EqualityExpression	sxe -> iter . type != SXE_ITER_ATTRLIST		1895040	0		!=			
ANR	1895151	MemberAccess	sxe -> iter . type		1895040	0					
ANR	1895152	PtrMemberAccess	sxe -> iter		1895040	0					
ANR	1895153	Identifier	sxe		1895040	0					
ANR	1895154	Identifier	iter		1895040	1					
ANR	1895155	Identifier	type		1895040	1					
ANR	1895156	Identifier	SXE_ITER_ATTRLIST		1895040	1					
ANR	1895157	CompoundStatement		20:43:446:446	1895040	1					
ANR	1895158	ExpressionStatement	attribs = 0	860:3:23700:23711	1895040	0	True				
ANR	1895159	AssignmentExpression	attribs = 0		1895040	0		=			
ANR	1895160	Identifier	attribs		1895040	0					
ANR	1895161	PrimaryExpression	0		1895040	1					
ANR	1895162	ExpressionStatement	elements = 1	861:3:23716:23728	1895040	1	True				
ANR	1895163	AssignmentExpression	elements = 1		1895040	0		=			
ANR	1895164	Identifier	elements		1895040	0					
ANR	1895165	PrimaryExpression	1		1895040	1					
ANR	1895166	IfStatement	if ( sxe -> iter . type == SXE_ITER_CHILD )		1895040	2					
ANR	1895167	Condition	sxe -> iter . type == SXE_ITER_CHILD	862:7:23737:23768	1895040	0	True				
ANR	1895168	EqualityExpression	sxe -> iter . type == SXE_ITER_CHILD		1895040	0		==			
ANR	1895169	MemberAccess	sxe -> iter . type		1895040	0					
ANR	1895170	PtrMemberAccess	sxe -> iter		1895040	0					
ANR	1895171	Identifier	sxe		1895040	0					
ANR	1895172	Identifier	iter		1895040	1					
ANR	1895173	Identifier	type		1895040	1					
ANR	1895174	Identifier	SXE_ITER_CHILD		1895040	1					
ANR	1895175	CompoundStatement		23:41:522:522	1895040	1					
ANR	1895176	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , node )"	863:4:23777:23817	1895040	0	True				
ANR	1895177	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , node )"		1895040	0		=			
ANR	1895178	Identifier	node		1895040	0					
ANR	1895179	CallExpression	"php_sxe_get_first_node ( sxe , node )"		1895040	1					
ANR	1895180	Callee	php_sxe_get_first_node		1895040	0					
ANR	1895181	Identifier	php_sxe_get_first_node		1895040	0					
ANR	1895182	ArgumentList	sxe		1895040	1					
ANR	1895183	Argument	sxe		1895040	0					
ANR	1895184	Identifier	sxe		1895040	0					
ANR	1895185	Argument	node		1895040	1					
ANR	1895186	Identifier	node		1895040	0					
ANR	1895187	IfStatement	if ( sxe -> iter . type == SXE_ITER_ATTRLIST )		1895040	11					
ANR	1895188	Condition	sxe -> iter . type == SXE_ITER_ATTRLIST	868:5:23837:23871	1895040	0	True				
ANR	1895189	EqualityExpression	sxe -> iter . type == SXE_ITER_ATTRLIST		1895040	0		==			
ANR	1895190	MemberAccess	sxe -> iter . type		1895040	0					
ANR	1895191	PtrMemberAccess	sxe -> iter		1895040	0					
ANR	1895192	Identifier	sxe		1895040	0					
ANR	1895193	Identifier	iter		1895040	1					
ANR	1895194	Identifier	type		1895040	1					
ANR	1895195	Identifier	SXE_ITER_ATTRLIST		1895040	1					
ANR	1895196	CompoundStatement		29:42:625:625	1895040	1					
ANR	1895197	ExpressionStatement	attribs = 1	869:2:23878:23889	1895040	0	True				
ANR	1895198	AssignmentExpression	attribs = 1		1895040	0		=			
ANR	1895199	Identifier	attribs		1895040	0					
ANR	1895200	PrimaryExpression	1		1895040	1					
ANR	1895201	ExpressionStatement	elements = 0	870:2:23893:23905	1895040	1	True				
ANR	1895202	AssignmentExpression	elements = 0		1895040	0		=			
ANR	1895203	Identifier	elements		1895040	0					
ANR	1895204	PrimaryExpression	0		1895040	1					
ANR	1895205	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , node )"	871:2:23909:23949	1895040	2	True				
ANR	1895206	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , node )"		1895040	0		=			
ANR	1895207	Identifier	node		1895040	0					
ANR	1895208	CallExpression	"php_sxe_get_first_node ( sxe , node )"		1895040	1					
ANR	1895209	Callee	php_sxe_get_first_node		1895040	0					
ANR	1895210	Identifier	php_sxe_get_first_node		1895040	0					
ANR	1895211	ArgumentList	sxe		1895040	1					
ANR	1895212	Argument	sxe		1895040	0					
ANR	1895213	Identifier	sxe		1895040	0					
ANR	1895214	Argument	node		1895040	1					
ANR	1895215	Identifier	node		1895040	0					
ANR	1895216	ExpressionStatement	attr = ( xmlAttrPtr ) node	872:2:23953:23976	1895040	3	True				
ANR	1895217	AssignmentExpression	attr = ( xmlAttrPtr ) node		1895040	0		=			
ANR	1895218	Identifier	attr		1895040	0					
ANR	1895219	CastExpression	( xmlAttrPtr ) node		1895040	1					
ANR	1895220	CastTarget	xmlAttrPtr		1895040	0					
ANR	1895221	Identifier	node		1895040	1					
ANR	1895222	ExpressionStatement	test = sxe -> iter . name != NULL	873:2:23980:24009	1895040	4	True				
ANR	1895223	AssignmentExpression	test = sxe -> iter . name != NULL		1895040	0		=			
ANR	1895224	Identifier	test		1895040	0					
ANR	1895225	EqualityExpression	sxe -> iter . name != NULL		1895040	1		!=			
ANR	1895226	MemberAccess	sxe -> iter . name		1895040	0					
ANR	1895227	PtrMemberAccess	sxe -> iter		1895040	0					
ANR	1895228	Identifier	sxe		1895040	0					
ANR	1895229	Identifier	iter		1895040	1					
ANR	1895230	Identifier	name		1895040	1					
ANR	1895231	Identifier	NULL		1895040	1					
ANR	1895232	ElseStatement	else		1895040	0					
ANR	1895233	IfStatement	if ( sxe -> iter . type != SXE_ITER_CHILD )		1895040	0					
ANR	1895234	Condition	sxe -> iter . type != SXE_ITER_CHILD	874:12:24023:24054	1895040	0	True				
ANR	1895235	EqualityExpression	sxe -> iter . type != SXE_ITER_CHILD		1895040	0		!=			
ANR	1895236	MemberAccess	sxe -> iter . type		1895040	0					
ANR	1895237	PtrMemberAccess	sxe -> iter		1895040	0					
ANR	1895238	Identifier	sxe		1895040	0					
ANR	1895239	Identifier	iter		1895040	1					
ANR	1895240	Identifier	type		1895040	1					
ANR	1895241	Identifier	SXE_ITER_CHILD		1895040	1					
ANR	1895242	CompoundStatement		35:46:808:808	1895040	1					
ANR	1895243	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , node )"	875:2:24061:24101	1895040	0	True				
ANR	1895244	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , node )"		1895040	0		=			
ANR	1895245	Identifier	node		1895040	0					
ANR	1895246	CallExpression	"php_sxe_get_first_node ( sxe , node )"		1895040	1					
ANR	1895247	Callee	php_sxe_get_first_node		1895040	0					
ANR	1895248	Identifier	php_sxe_get_first_node		1895040	0					
ANR	1895249	ArgumentList	sxe		1895040	1					
ANR	1895250	Argument	sxe		1895040	0					
ANR	1895251	Identifier	sxe		1895040	0					
ANR	1895252	Argument	node		1895040	1					
ANR	1895253	Identifier	node		1895040	0					
ANR	1895254	ExpressionStatement	attr = node ? node -> properties : NULL	876:2:24105:24142	1895040	1	True				
ANR	1895255	AssignmentExpression	attr = node ? node -> properties : NULL		1895040	0		=			
ANR	1895256	Identifier	attr		1895040	0					
ANR	1895257	ConditionalExpression	node ? node -> properties : NULL		1895040	1					
ANR	1895258	Condition	node		1895040	0					
ANR	1895259	Identifier	node		1895040	0					
ANR	1895260	PtrMemberAccess	node -> properties		1895040	1					
ANR	1895261	Identifier	node		1895040	0					
ANR	1895262	Identifier	properties		1895040	1					
ANR	1895263	Identifier	NULL		1895040	2					
ANR	1895264	ExpressionStatement	test = 0	877:2:24146:24154	1895040	2	True				
ANR	1895265	AssignmentExpression	test = 0		1895040	0		=			
ANR	1895266	Identifier	test		1895040	0					
ANR	1895267	PrimaryExpression	0		1895040	1					
ANR	1895268	IfStatement	if ( node )		1895040	12					
ANR	1895269	Condition	node	880:5:24165:24168	1895040	0	True				
ANR	1895270	Identifier	node		1895040	0					
ANR	1895271	CompoundStatement		41:11:922:922	1895040	1					
ANR	1895272	IfStatement	if ( attribs )		1895040	0					
ANR	1895273	Condition	attribs	881:6:24179:24185	1895040	0	True				
ANR	1895274	Identifier	attribs		1895040	0					
ANR	1895275	CompoundStatement		42:15:939:939	1895040	1					
ANR	1895276	IfStatement	if ( Z_TYPE_P ( member ) == IS_LONG )		1895040	0					
ANR	1895277	Condition	Z_TYPE_P ( member ) == IS_LONG	882:7:24197:24223	1895040	0	True				
ANR	1895278	EqualityExpression	Z_TYPE_P ( member ) == IS_LONG		1895040	0		==			
ANR	1895279	CallExpression	Z_TYPE_P ( member )		1895040	0					
ANR	1895280	Callee	Z_TYPE_P		1895040	0					
ANR	1895281	Identifier	Z_TYPE_P		1895040	0					
ANR	1895282	ArgumentList	member		1895040	1					
ANR	1895283	Argument	member		1895040	0					
ANR	1895284	Identifier	member		1895040	0					
ANR	1895285	Identifier	IS_LONG		1895040	1					
ANR	1895286	CompoundStatement		44:4:983:998	1895040	1					
ANR	1895287	IdentifierDeclStatement	int nodendx = 0 ;	883:4:24232:24247	1895040	0	True				
ANR	1895288	IdentifierDecl	nodendx = 0		1895040	0					
ANR	1895289	IdentifierDeclType	int		1895040	0					
ANR	1895290	Identifier	nodendx		1895040	1					
ANR	1895291	AssignmentExpression	nodendx = 0		1895040	2		=			
ANR	1895292	Identifier	nodendx		1895040	0					
ANR	1895293	PrimaryExpression	0		1895040	1					
ANR	1895294	WhileStatement	while ( attr && nodendx <= Z_LVAL_P ( member ) )		1895040	1					
ANR	1895295	Condition	attr && nodendx <= Z_LVAL_P ( member )	885:11:24261:24295	1895040	0	True				
ANR	1895296	AndExpression	attr && nodendx <= Z_LVAL_P ( member )		1895040	0		&&			
ANR	1895297	Identifier	attr		1895040	0					
ANR	1895298	RelationalExpression	nodendx <= Z_LVAL_P ( member )		1895040	1		<=			
ANR	1895299	Identifier	nodendx		1895040	0					
ANR	1895300	CallExpression	Z_LVAL_P ( member )		1895040	1					
ANR	1895301	Callee	Z_LVAL_P		1895040	0					
ANR	1895302	Identifier	Z_LVAL_P		1895040	0					
ANR	1895303	ArgumentList	member		1895040	1					
ANR	1895304	Argument	member		1895040	0					
ANR	1895305	Identifier	member		1895040	0					
ANR	1895306	CompoundStatement		46:48:1049:1049	1895040	1					
ANR	1895307	IfStatement	"if ( ( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix ) )"		1895040	0					
ANR	1895308	Condition	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	886:9:24309:24433	1895040	0	True				
ANR	1895309	AndExpression	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1895040	0		&&			
ANR	1895310	OrExpression	"! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1895040	0		||			
ANR	1895311	UnaryOperationExpression	! test		1895040	0					
ANR	1895312	UnaryOperator	!		1895040	0					
ANR	1895313	Identifier	test		1895040	1					
ANR	1895314	UnaryOperationExpression	"! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1895040	1					
ANR	1895315	UnaryOperator	!		1895040	0					
ANR	1895316	CallExpression	"xmlStrcmp ( attr -> name , sxe -> iter . name )"		1895040	1					
ANR	1895317	Callee	xmlStrcmp		1895040	0					
ANR	1895318	Identifier	xmlStrcmp		1895040	0					
ANR	1895319	ArgumentList	attr -> name		1895040	1					
ANR	1895320	Argument	attr -> name		1895040	0					
ANR	1895321	PtrMemberAccess	attr -> name		1895040	0					
ANR	1895322	Identifier	attr		1895040	0					
ANR	1895323	Identifier	name		1895040	1					
ANR	1895324	Argument	sxe -> iter . name		1895040	1					
ANR	1895325	MemberAccess	sxe -> iter . name		1895040	0					
ANR	1895326	PtrMemberAccess	sxe -> iter		1895040	0					
ANR	1895327	Identifier	sxe		1895040	0					
ANR	1895328	Identifier	iter		1895040	1					
ANR	1895329	Identifier	name		1895040	1					
ANR	1895330	CallExpression	"match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1895040	1					
ANR	1895331	Callee	match_ns		1895040	0					
ANR	1895332	Identifier	match_ns		1895040	0					
ANR	1895333	ArgumentList	sxe		1895040	1					
ANR	1895334	Argument	sxe		1895040	0					
ANR	1895335	Identifier	sxe		1895040	0					
ANR	1895336	Argument	( xmlNodePtr ) attr		1895040	1					
ANR	1895337	CastExpression	( xmlNodePtr ) attr		1895040	0					
ANR	1895338	CastTarget	xmlNodePtr		1895040	0					
ANR	1895339	Identifier	attr		1895040	1					
ANR	1895340	Argument	sxe -> iter . nsprefix		1895040	2					
ANR	1895341	MemberAccess	sxe -> iter . nsprefix		1895040	0					
ANR	1895342	PtrMemberAccess	sxe -> iter		1895040	0					
ANR	1895343	Identifier	sxe		1895040	0					
ANR	1895344	Identifier	iter		1895040	1					
ANR	1895345	Identifier	nsprefix		1895040	1					
ANR	1895346	Argument	sxe -> iter . isprefix		1895040	3					
ANR	1895347	MemberAccess	sxe -> iter . isprefix		1895040	0					
ANR	1895348	PtrMemberAccess	sxe -> iter		1895040	0					
ANR	1895349	Identifier	sxe		1895040	0					
ANR	1895350	Identifier	iter		1895040	1					
ANR	1895351	Identifier	isprefix		1895040	1					
ANR	1895352	CompoundStatement		47:136:1187:1187	1895040	1					
ANR	1895353	IfStatement	if ( nodendx == Z_LVAL_P ( member ) )		1895040	0					
ANR	1895354	Condition	nodendx == Z_LVAL_P ( member )	887:10:24448:24474	1895040	0	True				
ANR	1895355	EqualityExpression	nodendx == Z_LVAL_P ( member )		1895040	0		==			
ANR	1895356	Identifier	nodendx		1895040	0					
ANR	1895357	CallExpression	Z_LVAL_P ( member )		1895040	1					
ANR	1895358	Callee	Z_LVAL_P		1895040	0					
ANR	1895359	Identifier	Z_LVAL_P		1895040	0					
ANR	1895360	ArgumentList	member		1895040	1					
ANR	1895361	Argument	member		1895040	0					
ANR	1895362	Identifier	member		1895040	0					
ANR	1895363	CompoundStatement		48:39:1228:1228	1895040	1					
ANR	1895364	ExpressionStatement	xmlUnlinkNode ( ( xmlNodePtr ) attr )	888:7:24486:24518	1895040	0	True				
ANR	1895365	CallExpression	xmlUnlinkNode ( ( xmlNodePtr ) attr )		1895040	0					
ANR	1895366	Callee	xmlUnlinkNode		1895040	0					
ANR	1895367	Identifier	xmlUnlinkNode		1895040	0					
ANR	1895368	ArgumentList	( xmlNodePtr ) attr		1895040	1					
ANR	1895369	Argument	( xmlNodePtr ) attr		1895040	0					
ANR	1895370	CastExpression	( xmlNodePtr ) attr		1895040	0					
ANR	1895371	CastTarget	xmlNodePtr		1895040	0					
ANR	1895372	Identifier	attr		1895040	1					
ANR	1895373	ExpressionStatement	php_libxml_node_free_resource ( ( xmlNodePtr ) attr )	889:7:24527:24575	1895040	1	True				
ANR	1895374	CallExpression	php_libxml_node_free_resource ( ( xmlNodePtr ) attr )		1895040	0					
ANR	1895375	Callee	php_libxml_node_free_resource		1895040	0					
ANR	1895376	Identifier	php_libxml_node_free_resource		1895040	0					
ANR	1895377	ArgumentList	( xmlNodePtr ) attr		1895040	1					
ANR	1895378	Argument	( xmlNodePtr ) attr		1895040	0					
ANR	1895379	CastExpression	( xmlNodePtr ) attr		1895040	0					
ANR	1895380	CastTarget	xmlNodePtr		1895040	0					
ANR	1895381	Identifier	attr		1895040	1					
ANR	1895382	BreakStatement	break ;	890:7:24584:24589	1895040	2	True				
ANR	1895383	ExpressionStatement	nodendx ++	892:6:24605:24614	1895040	1	True				
ANR	1895384	PostIncDecOperationExpression	nodendx ++		1895040	0					
ANR	1895385	Identifier	nodendx		1895040	0					
ANR	1895386	IncDec	++		1895040	1					
ANR	1895387	ExpressionStatement	attr = attr -> next	894:5:24628:24645	1895040	1	True				
ANR	1895388	AssignmentExpression	attr = attr -> next		1895040	0		=			
ANR	1895389	Identifier	attr		1895040	0					
ANR	1895390	PtrMemberAccess	attr -> next		1895040	1					
ANR	1895391	Identifier	attr		1895040	0					
ANR	1895392	Identifier	next		1895040	1					
ANR	1895393	ElseStatement	else		1895040	0					
ANR	1895394	CompoundStatement		57:10:1414:1414	1895040	0					
ANR	1895395	WhileStatement	while ( attr )		1895040	0					
ANR	1895396	Condition	attr	897:11:24676:24679	1895040	0	True				
ANR	1895397	Identifier	attr		1895040	0					
ANR	1895398	CompoundStatement		58:17:1433:1433	1895040	1					
ANR	1895399	ExpressionStatement	anext = attr -> next	898:5:24689:24707	1895040	0	True				
ANR	1895400	AssignmentExpression	anext = attr -> next		1895040	0		=			
ANR	1895401	Identifier	anext		1895040	0					
ANR	1895402	PtrMemberAccess	attr -> next		1895040	1					
ANR	1895403	Identifier	attr		1895040	0					
ANR	1895404	Identifier	next		1895040	1					
ANR	1895405	IfStatement	"if ( ( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && ! xmlStrcmp ( attr -> name , ( xmlChar * ) Z_STRVAL_P ( member ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix ) )"		1895040	1					
ANR	1895406	Condition	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && ! xmlStrcmp ( attr -> name , ( xmlChar * ) Z_STRVAL_P ( member ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	899:9:24718:24899	1895040	0	True				
ANR	1895407	AndExpression	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && ! xmlStrcmp ( attr -> name , ( xmlChar * ) Z_STRVAL_P ( member ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1895040	0		&&			
ANR	1895408	OrExpression	"! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1895040	0		||			
ANR	1895409	UnaryOperationExpression	! test		1895040	0					
ANR	1895410	UnaryOperator	!		1895040	0					
ANR	1895411	Identifier	test		1895040	1					
ANR	1895412	UnaryOperationExpression	"! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1895040	1					
ANR	1895413	UnaryOperator	!		1895040	0					
ANR	1895414	CallExpression	"xmlStrcmp ( attr -> name , sxe -> iter . name )"		1895040	1					
ANR	1895415	Callee	xmlStrcmp		1895040	0					
ANR	1895416	Identifier	xmlStrcmp		1895040	0					
ANR	1895417	ArgumentList	attr -> name		1895040	1					
ANR	1895418	Argument	attr -> name		1895040	0					
ANR	1895419	PtrMemberAccess	attr -> name		1895040	0					
ANR	1895420	Identifier	attr		1895040	0					
ANR	1895421	Identifier	name		1895040	1					
ANR	1895422	Argument	sxe -> iter . name		1895040	1					
ANR	1895423	MemberAccess	sxe -> iter . name		1895040	0					
ANR	1895424	PtrMemberAccess	sxe -> iter		1895040	0					
ANR	1895425	Identifier	sxe		1895040	0					
ANR	1895426	Identifier	iter		1895040	1					
ANR	1895427	Identifier	name		1895040	1					
ANR	1895428	AndExpression	"! xmlStrcmp ( attr -> name , ( xmlChar * ) Z_STRVAL_P ( member ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1895040	1		&&			
ANR	1895429	UnaryOperationExpression	"! xmlStrcmp ( attr -> name , ( xmlChar * ) Z_STRVAL_P ( member ) )"		1895040	0					
ANR	1895430	UnaryOperator	!		1895040	0					
ANR	1895431	CallExpression	"xmlStrcmp ( attr -> name , ( xmlChar * ) Z_STRVAL_P ( member ) )"		1895040	1					
ANR	1895432	Callee	xmlStrcmp		1895040	0					
ANR	1895433	Identifier	xmlStrcmp		1895040	0					
ANR	1895434	ArgumentList	attr -> name		1895040	1					
ANR	1895435	Argument	attr -> name		1895040	0					
ANR	1895436	PtrMemberAccess	attr -> name		1895040	0					
ANR	1895437	Identifier	attr		1895040	0					
ANR	1895438	Identifier	name		1895040	1					
ANR	1895439	Argument	( xmlChar * ) Z_STRVAL_P ( member )		1895040	1					
ANR	1895440	CastExpression	( xmlChar * ) Z_STRVAL_P ( member )		1895040	0					
ANR	1895441	CastTarget	xmlChar *		1895040	0					
ANR	1895442	CallExpression	Z_STRVAL_P ( member )		1895040	1					
ANR	1895443	Callee	Z_STRVAL_P		1895040	0					
ANR	1895444	Identifier	Z_STRVAL_P		1895040	0					
ANR	1895445	ArgumentList	member		1895040	1					
ANR	1895446	Argument	member		1895040	0					
ANR	1895447	Identifier	member		1895040	0					
ANR	1895448	CallExpression	"match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1895040	1					
ANR	1895449	Callee	match_ns		1895040	0					
ANR	1895450	Identifier	match_ns		1895040	0					
ANR	1895451	ArgumentList	sxe		1895040	1					
ANR	1895452	Argument	sxe		1895040	0					
ANR	1895453	Identifier	sxe		1895040	0					
ANR	1895454	Argument	( xmlNodePtr ) attr		1895040	1					
ANR	1895455	CastExpression	( xmlNodePtr ) attr		1895040	0					
ANR	1895456	CastTarget	xmlNodePtr		1895040	0					
ANR	1895457	Identifier	attr		1895040	1					
ANR	1895458	Argument	sxe -> iter . nsprefix		1895040	2					
ANR	1895459	MemberAccess	sxe -> iter . nsprefix		1895040	0					
ANR	1895460	PtrMemberAccess	sxe -> iter		1895040	0					
ANR	1895461	Identifier	sxe		1895040	0					
ANR	1895462	Identifier	iter		1895040	1					
ANR	1895463	Identifier	nsprefix		1895040	1					
ANR	1895464	Argument	sxe -> iter . isprefix		1895040	3					
ANR	1895465	MemberAccess	sxe -> iter . isprefix		1895040	0					
ANR	1895466	PtrMemberAccess	sxe -> iter		1895040	0					
ANR	1895467	Identifier	sxe		1895040	0					
ANR	1895468	Identifier	iter		1895040	1					
ANR	1895469	Identifier	isprefix		1895040	1					
ANR	1895470	CompoundStatement		60:193:1653:1653	1895040	1					
ANR	1895471	ExpressionStatement	xmlUnlinkNode ( ( xmlNodePtr ) attr )	900:6:24910:24942	1895040	0	True				
ANR	1895472	CallExpression	xmlUnlinkNode ( ( xmlNodePtr ) attr )		1895040	0					
ANR	1895473	Callee	xmlUnlinkNode		1895040	0					
ANR	1895474	Identifier	xmlUnlinkNode		1895040	0					
ANR	1895475	ArgumentList	( xmlNodePtr ) attr		1895040	1					
ANR	1895476	Argument	( xmlNodePtr ) attr		1895040	0					
ANR	1895477	CastExpression	( xmlNodePtr ) attr		1895040	0					
ANR	1895478	CastTarget	xmlNodePtr		1895040	0					
ANR	1895479	Identifier	attr		1895040	1					
ANR	1895480	ExpressionStatement	php_libxml_node_free_resource ( ( xmlNodePtr ) attr )	901:6:24950:24998	1895040	1	True				
ANR	1895481	CallExpression	php_libxml_node_free_resource ( ( xmlNodePtr ) attr )		1895040	0					
ANR	1895482	Callee	php_libxml_node_free_resource		1895040	0					
ANR	1895483	Identifier	php_libxml_node_free_resource		1895040	0					
ANR	1895484	ArgumentList	( xmlNodePtr ) attr		1895040	1					
ANR	1895485	Argument	( xmlNodePtr ) attr		1895040	0					
ANR	1895486	CastExpression	( xmlNodePtr ) attr		1895040	0					
ANR	1895487	CastTarget	xmlNodePtr		1895040	0					
ANR	1895488	Identifier	attr		1895040	1					
ANR	1895489	BreakStatement	break ;	902:6:25006:25011	1895040	2	True				
ANR	1895490	ExpressionStatement	attr = anext	904:5:25025:25037	1895040	2	True				
ANR	1895491	AssignmentExpression	attr = anext		1895040	0		=			
ANR	1895492	Identifier	attr		1895040	0					
ANR	1895493	Identifier	anext		1895040	1					
ANR	1895494	IfStatement	if ( elements )		1895040	1					
ANR	1895495	Condition	elements	909:6:25061:25068	1895040	0	True				
ANR	1895496	Identifier	elements		1895040	0					
ANR	1895497	CompoundStatement		70:16:1822:1822	1895040	1					
ANR	1895498	IfStatement	if ( Z_TYPE_P ( member ) == IS_LONG )		1895040	0					
ANR	1895499	Condition	Z_TYPE_P ( member ) == IS_LONG	910:7:25080:25106	1895040	0	True				
ANR	1895500	EqualityExpression	Z_TYPE_P ( member ) == IS_LONG		1895040	0		==			
ANR	1895501	CallExpression	Z_TYPE_P ( member )		1895040	0					
ANR	1895502	Callee	Z_TYPE_P		1895040	0					
ANR	1895503	Identifier	Z_TYPE_P		1895040	0					
ANR	1895504	ArgumentList	member		1895040	1					
ANR	1895505	Argument	member		1895040	0					
ANR	1895506	Identifier	member		1895040	0					
ANR	1895507	Identifier	IS_LONG		1895040	1					
ANR	1895508	CompoundStatement		71:36:1860:1860	1895040	1					
ANR	1895509	IfStatement	if ( sxe -> iter . type == SXE_ITER_CHILD )		1895040	0					
ANR	1895510	Condition	sxe -> iter . type == SXE_ITER_CHILD	911:8:25119:25150	1895040	0	True				
ANR	1895511	EqualityExpression	sxe -> iter . type == SXE_ITER_CHILD		1895040	0		==			
ANR	1895512	MemberAccess	sxe -> iter . type		1895040	0					
ANR	1895513	PtrMemberAccess	sxe -> iter		1895040	0					
ANR	1895514	Identifier	sxe		1895040	0					
ANR	1895515	Identifier	iter		1895040	1					
ANR	1895516	Identifier	type		1895040	1					
ANR	1895517	Identifier	SXE_ITER_CHILD		1895040	1					
ANR	1895518	CompoundStatement		72:42:1904:1904	1895040	1					
ANR	1895519	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , node )"	912:5:25160:25200	1895040	0	True				
ANR	1895520	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , node )"		1895040	0		=			
ANR	1895521	Identifier	node		1895040	0					
ANR	1895522	CallExpression	"php_sxe_get_first_node ( sxe , node )"		1895040	1					
ANR	1895523	Callee	php_sxe_get_first_node		1895040	0					
ANR	1895524	Identifier	php_sxe_get_first_node		1895040	0					
ANR	1895525	ArgumentList	sxe		1895040	1					
ANR	1895526	Argument	sxe		1895040	0					
ANR	1895527	Identifier	sxe		1895040	0					
ANR	1895528	Argument	node		1895040	1					
ANR	1895529	Identifier	node		1895040	0					
ANR	1895530	ExpressionStatement	"node = sxe_get_element_by_offset ( sxe , Z_LVAL_P ( member ) , node , NULL )"	914:4:25212:25279	1895040	1	True				
ANR	1895531	AssignmentExpression	"node = sxe_get_element_by_offset ( sxe , Z_LVAL_P ( member ) , node , NULL )"		1895040	0		=			
ANR	1895532	Identifier	node		1895040	0					
ANR	1895533	CallExpression	"sxe_get_element_by_offset ( sxe , Z_LVAL_P ( member ) , node , NULL )"		1895040	1					
ANR	1895534	Callee	sxe_get_element_by_offset		1895040	0					
ANR	1895535	Identifier	sxe_get_element_by_offset		1895040	0					
ANR	1895536	ArgumentList	sxe		1895040	1					
ANR	1895537	Argument	sxe		1895040	0					
ANR	1895538	Identifier	sxe		1895040	0					
ANR	1895539	Argument	Z_LVAL_P ( member )		1895040	1					
ANR	1895540	CallExpression	Z_LVAL_P ( member )		1895040	0					
ANR	1895541	Callee	Z_LVAL_P		1895040	0					
ANR	1895542	Identifier	Z_LVAL_P		1895040	0					
ANR	1895543	ArgumentList	member		1895040	1					
ANR	1895544	Argument	member		1895040	0					
ANR	1895545	Identifier	member		1895040	0					
ANR	1895546	Argument	node		1895040	2					
ANR	1895547	Identifier	node		1895040	0					
ANR	1895548	Argument	NULL		1895040	3					
ANR	1895549	Identifier	NULL		1895040	0					
ANR	1895550	IfStatement	if ( node )		1895040	2					
ANR	1895551	Condition	node	915:8:25289:25292	1895040	0	True				
ANR	1895552	Identifier	node		1895040	0					
ANR	1895553	CompoundStatement		76:14:2046:2046	1895040	1					
ANR	1895554	ExpressionStatement	xmlUnlinkNode ( node )	916:5:25302:25321	1895040	0	True				
ANR	1895555	CallExpression	xmlUnlinkNode ( node )		1895040	0					
ANR	1895556	Callee	xmlUnlinkNode		1895040	0					
ANR	1895557	Identifier	xmlUnlinkNode		1895040	0					
ANR	1895558	ArgumentList	node		1895040	1					
ANR	1895559	Argument	node		1895040	0					
ANR	1895560	Identifier	node		1895040	0					
ANR	1895561	ExpressionStatement	php_libxml_node_free_resource ( node )	917:5:25328:25363	1895040	1	True				
ANR	1895562	CallExpression	php_libxml_node_free_resource ( node )		1895040	0					
ANR	1895563	Callee	php_libxml_node_free_resource		1895040	0					
ANR	1895564	Identifier	php_libxml_node_free_resource		1895040	0					
ANR	1895565	ArgumentList	node		1895040	1					
ANR	1895566	Argument	node		1895040	0					
ANR	1895567	Identifier	node		1895040	0					
ANR	1895568	ElseStatement	else		1895040	0					
ANR	1895569	CompoundStatement		80:10:2132:2132	1895040	0					
ANR	1895570	ExpressionStatement	node = node -> children	920:4:25387:25408	1895040	0	True				
ANR	1895571	AssignmentExpression	node = node -> children		1895040	0		=			
ANR	1895572	Identifier	node		1895040	0					
ANR	1895573	PtrMemberAccess	node -> children		1895040	1					
ANR	1895574	Identifier	node		1895040	0					
ANR	1895575	Identifier	children		1895040	1					
ANR	1895576	WhileStatement	while ( node )		1895040	1					
ANR	1895577	Condition	node	921:11:25421:25424	1895040	0	True				
ANR	1895578	Identifier	node		1895040	0					
ANR	1895579	CompoundStatement		82:17:2178:2178	1895040	1					
ANR	1895580	ExpressionStatement	nnext = node -> next	922:5:25434:25452	1895040	0	True				
ANR	1895581	AssignmentExpression	nnext = node -> next		1895040	0		=			
ANR	1895582	Identifier	nnext		1895040	0					
ANR	1895583	PtrMemberAccess	node -> next		1895040	1					
ANR	1895584	Identifier	node		1895040	0					
ANR	1895585	Identifier	next		1895040	1					
ANR	1895586	ExpressionStatement	SKIP_TEXT ( node )	924:5:25460:25475	1895040	1	True				
ANR	1895587	CallExpression	SKIP_TEXT ( node )		1895040	0					
ANR	1895588	Callee	SKIP_TEXT		1895040	0					
ANR	1895589	Identifier	SKIP_TEXT		1895040	0					
ANR	1895590	ArgumentList	node		1895040	1					
ANR	1895591	Argument	node		1895040	0					
ANR	1895592	Identifier	node		1895040	0					
ANR	1895593	IfStatement	"if ( ! xmlStrcmp ( node -> name , ( xmlChar * ) Z_STRVAL_P ( member ) ) )"		1895040	2					
ANR	1895594	Condition	"! xmlStrcmp ( node -> name , ( xmlChar * ) Z_STRVAL_P ( member ) )"	926:9:25487:25539	1895040	0	True				
ANR	1895595	UnaryOperationExpression	"! xmlStrcmp ( node -> name , ( xmlChar * ) Z_STRVAL_P ( member ) )"		1895040	0					
ANR	1895596	UnaryOperator	!		1895040	0					
ANR	1895597	CallExpression	"xmlStrcmp ( node -> name , ( xmlChar * ) Z_STRVAL_P ( member ) )"		1895040	1					
ANR	1895598	Callee	xmlStrcmp		1895040	0					
ANR	1895599	Identifier	xmlStrcmp		1895040	0					
ANR	1895600	ArgumentList	node -> name		1895040	1					
ANR	1895601	Argument	node -> name		1895040	0					
ANR	1895602	PtrMemberAccess	node -> name		1895040	0					
ANR	1895603	Identifier	node		1895040	0					
ANR	1895604	Identifier	name		1895040	1					
ANR	1895605	Argument	( xmlChar * ) Z_STRVAL_P ( member )		1895040	1					
ANR	1895606	CastExpression	( xmlChar * ) Z_STRVAL_P ( member )		1895040	0					
ANR	1895607	CastTarget	xmlChar *		1895040	0					
ANR	1895608	CallExpression	Z_STRVAL_P ( member )		1895040	1					
ANR	1895609	Callee	Z_STRVAL_P		1895040	0					
ANR	1895610	Identifier	Z_STRVAL_P		1895040	0					
ANR	1895611	ArgumentList	member		1895040	1					
ANR	1895612	Argument	member		1895040	0					
ANR	1895613	Identifier	member		1895040	0					
ANR	1895614	CompoundStatement		87:64:2293:2293	1895040	1					
ANR	1895615	ExpressionStatement	xmlUnlinkNode ( node )	927:6:25550:25569	1895040	0	True				
ANR	1895616	CallExpression	xmlUnlinkNode ( node )		1895040	0					
ANR	1895617	Callee	xmlUnlinkNode		1895040	0					
ANR	1895618	Identifier	xmlUnlinkNode		1895040	0					
ANR	1895619	ArgumentList	node		1895040	1					
ANR	1895620	Argument	node		1895040	0					
ANR	1895621	Identifier	node		1895040	0					
ANR	1895622	ExpressionStatement	php_libxml_node_free_resource ( node )	928:6:25577:25612	1895040	1	True				
ANR	1895623	CallExpression	php_libxml_node_free_resource ( node )		1895040	0					
ANR	1895624	Callee	php_libxml_node_free_resource		1895040	0					
ANR	1895625	Identifier	php_libxml_node_free_resource		1895040	0					
ANR	1895626	ArgumentList	node		1895040	1					
ANR	1895627	Argument	node		1895040	0					
ANR	1895628	Identifier	node		1895040	0					
ANR	1895629	Label	next_iter :	931:0:25622:25631	1895040	3	True				
ANR	1895630	Identifier	next_iter		1895040	0					
ANR	1895631	ExpressionStatement	node = nnext	932:5:25638:25650	1895040	4	True				
ANR	1895632	AssignmentExpression	node = nnext		1895040	0		=			
ANR	1895633	Identifier	node		1895040	0					
ANR	1895634	Identifier	nnext		1895040	1					
ANR	1895635	IfStatement	if ( member == & tmp_zv )		1895040	13					
ANR	1895636	Condition	member == & tmp_zv	938:5:25676:25692	1895040	0	True				
ANR	1895637	EqualityExpression	member == & tmp_zv		1895040	0		==			
ANR	1895638	Identifier	member		1895040	0					
ANR	1895639	UnaryOperationExpression	& tmp_zv		1895040	1					
ANR	1895640	UnaryOperator	&		1895040	0					
ANR	1895641	Identifier	tmp_zv		1895040	1					
ANR	1895642	CompoundStatement		99:24:2446:2446	1895040	1					
ANR	1895643	ExpressionStatement	zval_dtor ( & tmp_zv )	939:2:25699:25717	1895040	0	True				
ANR	1895644	CallExpression	zval_dtor ( & tmp_zv )		1895040	0					
ANR	1895645	Callee	zval_dtor		1895040	0					
ANR	1895646	Identifier	zval_dtor		1895040	0					
ANR	1895647	ArgumentList	& tmp_zv		1895040	1					
ANR	1895648	Argument	& tmp_zv		1895040	0					
ANR	1895649	UnaryOperationExpression	& tmp_zv		1895040	0					
ANR	1895650	UnaryOperator	&		1895040	0					
ANR	1895651	Identifier	tmp_zv		1895040	1					
ANR	1895652	ReturnType	static void		1895040	1					
ANR	1895653	Identifier	sxe_prop_dim_delete		1895040	2					
ANR	1895654	ParameterList	"zval * object , zval * member , zend_bool elements , zend_bool attribs"		1895040	3					
ANR	1895655	Parameter	zval * object	839:32:23181:23192	1895040	0	True				
ANR	1895656	ParameterType	zval *		1895040	0					
ANR	1895657	Identifier	object		1895040	1					
ANR	1895658	Parameter	zval * member	839:46:23195:23206	1895040	1	True				
ANR	1895659	ParameterType	zval *		1895040	0					
ANR	1895660	Identifier	member		1895040	1					
ANR	1895661	Parameter	zend_bool elements	839:60:23209:23226	1895040	2	True				
ANR	1895662	ParameterType	zend_bool		1895040	0					
ANR	1895663	Identifier	elements		1895040	1					
ANR	1895664	Parameter	zend_bool attribs	839:80:23229:23245	1895040	3	True				
ANR	1895665	ParameterType	zend_bool		1895040	0					
ANR	1895666	Identifier	attribs		1895040	1					
ANR	1895667	CFGEntryNode	ENTRY		1895040		True				
ANR	1895668	CFGExitNode	EXIT		1895040		True				
ANR	1895669	Symbol	attr -> next		1895040						
ANR	1895670	Symbol	tmp_zv		1895040						
ANR	1895671	Symbol	SXE_ITER_ATTRLIST		1895040						
ANR	1895672	Symbol	SXE_ITER_CHILD		1895040						
ANR	1895673	Symbol	& tmp_zv		1895040						
ANR	1895674	Symbol	nodendx		1895040						
ANR	1895675	Symbol	* sxe		1895040						
ANR	1895676	Symbol	match_ns		1895040						
ANR	1895677	Symbol	IS_LONG		1895040						
ANR	1895678	Symbol	member		1895040						
ANR	1895679	Symbol	* node		1895040						
ANR	1895680	Symbol	IS_STRING		1895040						
ANR	1895681	Symbol	attr		1895040						
ANR	1895682	Symbol	anext		1895040						
ANR	1895683	Symbol	nnext		1895040						
ANR	1895684	Symbol	sxe		1895040						
ANR	1895685	Symbol	php_sxe_get_first_node		1895040						
ANR	1895686	Symbol	NULL		1895040						
ANR	1895687	Symbol	xmlStrcmp		1895040						
ANR	1895688	Symbol	test		1895040						
ANR	1895689	Symbol	zval_get_string		1895040						
ANR	1895690	Symbol	node -> properties		1895040						
ANR	1895691	Symbol	sxe -> iter . isprefix		1895040						
ANR	1895692	Symbol	sxe_get_element_by_offset		1895040						
ANR	1895693	Symbol	node -> next		1895040						
ANR	1895694	Symbol	Z_TYPE_P		1895040						
ANR	1895695	Symbol	sxe -> iter . type		1895040						
ANR	1895696	Symbol	Z_STRVAL_P		1895040						
ANR	1895697	Symbol	attribs		1895040						
ANR	1895698	Symbol	sxe -> iter		1895040						
ANR	1895699	Symbol	Z_LVAL_P		1895040						
ANR	1895700	Symbol	sxe -> iter . name		1895040						
ANR	1895701	Symbol	node		1895040						
ANR	1895702	Symbol	node -> name		1895040						
ANR	1895703	Symbol	sxe -> iter . nsprefix		1895040						
ANR	1895704	Symbol	elements		1895040						
ANR	1895705	Symbol	attr -> name		1895040						
ANR	1895706	Symbol	* attr		1895040						
ANR	1895707	Symbol	Z_SXEOBJ_P		1895040						
ANR	1895708	Symbol	node -> children		1895040						
ANR	1895709	Symbol	object		1895040						
ANR	1895710	Function	sxe_property_delete	946:0:25768:25893							
ANR	1895711	FunctionDef	"sxe_property_delete (zval * object , zval * member , void * * cache_slot)"		1895710	0					
ANR	1895712	CompoundStatement		947:0:25847:25893	1895710	0					
ANR	1895713	ExpressionStatement	"sxe_prop_dim_delete ( object , member , 1 , 0 )"	948:1:25850:25891	1895710	0	True				
ANR	1895714	CallExpression	"sxe_prop_dim_delete ( object , member , 1 , 0 )"		1895710	0					
ANR	1895715	Callee	sxe_prop_dim_delete		1895710	0					
ANR	1895716	Identifier	sxe_prop_dim_delete		1895710	0					
ANR	1895717	ArgumentList	object		1895710	1					
ANR	1895718	Argument	object		1895710	0					
ANR	1895719	Identifier	object		1895710	0					
ANR	1895720	Argument	member		1895710	1					
ANR	1895721	Identifier	member		1895710	0					
ANR	1895722	Argument	1		1895710	2					
ANR	1895723	PrimaryExpression	1		1895710	0					
ANR	1895724	Argument	0		1895710	3					
ANR	1895725	PrimaryExpression	0		1895710	0					
ANR	1895726	ReturnType	static void		1895710	1					
ANR	1895727	Identifier	sxe_property_delete		1895710	2					
ANR	1895728	ParameterList	"zval * object , zval * member , void * * cache_slot"		1895710	3					
ANR	1895729	Parameter	zval * object	946:32:25800:25811	1895710	0	True				
ANR	1895730	ParameterType	zval *		1895710	0					
ANR	1895731	Identifier	object		1895710	1					
ANR	1895732	Parameter	zval * member	946:46:25814:25825	1895710	1	True				
ANR	1895733	ParameterType	zval *		1895710	0					
ANR	1895734	Identifier	member		1895710	1					
ANR	1895735	Parameter	void * * cache_slot	946:60:25828:25844	1895710	2	True				
ANR	1895736	ParameterType	void * *		1895710	0					
ANR	1895737	Identifier	cache_slot		1895710	1					
ANR	1895738	CFGEntryNode	ENTRY		1895710		True				
ANR	1895739	CFGExitNode	EXIT		1895710		True				
ANR	1895740	Symbol	cache_slot		1895710						
ANR	1895741	Symbol	member		1895710						
ANR	1895742	Symbol	object		1895710						
ANR	1895743	Function	sxe_dimension_delete	954:0:25939:26046							
ANR	1895744	FunctionDef	"sxe_dimension_delete (zval * object , zval * offset)"		1895743	0					
ANR	1895745	CompoundStatement		955:0:26000:26046	1895743	0					
ANR	1895746	ExpressionStatement	"sxe_prop_dim_delete ( object , offset , 0 , 1 )"	956:1:26003:26044	1895743	0	True				
ANR	1895747	CallExpression	"sxe_prop_dim_delete ( object , offset , 0 , 1 )"		1895743	0					
ANR	1895748	Callee	sxe_prop_dim_delete		1895743	0					
ANR	1895749	Identifier	sxe_prop_dim_delete		1895743	0					
ANR	1895750	ArgumentList	object		1895743	1					
ANR	1895751	Argument	object		1895743	0					
ANR	1895752	Identifier	object		1895743	0					
ANR	1895753	Argument	offset		1895743	1					
ANR	1895754	Identifier	offset		1895743	0					
ANR	1895755	Argument	0		1895743	2					
ANR	1895756	PrimaryExpression	0		1895743	0					
ANR	1895757	Argument	1		1895743	3					
ANR	1895758	PrimaryExpression	1		1895743	0					
ANR	1895759	ReturnType	static void		1895743	1					
ANR	1895760	Identifier	sxe_dimension_delete		1895743	2					
ANR	1895761	ParameterList	"zval * object , zval * offset"		1895743	3					
ANR	1895762	Parameter	zval * object	954:33:25972:25983	1895743	0	True				
ANR	1895763	ParameterType	zval *		1895743	0					
ANR	1895764	Identifier	object		1895743	1					
ANR	1895765	Parameter	zval * offset	954:47:25986:25997	1895743	1	True				
ANR	1895766	ParameterType	zval *		1895743	0					
ANR	1895767	Identifier	offset		1895743	1					
ANR	1895768	CFGEntryNode	ENTRY		1895743		True				
ANR	1895769	CFGExitNode	EXIT		1895743		True				
ANR	1895770	Symbol	offset		1895743						
ANR	1895771	Symbol	object		1895743						
ANR	1895772	Function	sxe_xmlNodeListGetString	960:0:26059:26389							
ANR	1895773	FunctionDef	"sxe_xmlNodeListGetString (xmlDocPtr doc , xmlNodePtr list , int inLine)"		1895772	0					
ANR	1895774	CompoundStatement		961:0:26165:26389	1895772	0					
ANR	1895775	IdentifierDeclStatement	"xmlChar * tmp = xmlNodeListGetString ( doc , list , inLine ) ;"	962:1:26168:26222	1895772	0	True				
ANR	1895776	IdentifierDecl	"* tmp = xmlNodeListGetString ( doc , list , inLine )"		1895772	0					
ANR	1895777	IdentifierDeclType	xmlChar *		1895772	0					
ANR	1895778	Identifier	tmp		1895772	1					
ANR	1895779	AssignmentExpression	"* tmp = xmlNodeListGetString ( doc , list , inLine )"		1895772	2		=			
ANR	1895780	Identifier	tmp		1895772	0					
ANR	1895781	CallExpression	"xmlNodeListGetString ( doc , list , inLine )"		1895772	1					
ANR	1895782	Callee	xmlNodeListGetString		1895772	0					
ANR	1895783	Identifier	xmlNodeListGetString		1895772	0					
ANR	1895784	ArgumentList	doc		1895772	1					
ANR	1895785	Argument	doc		1895772	0					
ANR	1895786	Identifier	doc		1895772	0					
ANR	1895787	Argument	list		1895772	1					
ANR	1895788	Identifier	list		1895772	0					
ANR	1895789	Argument	inLine		1895772	2					
ANR	1895790	Identifier	inLine		1895772	0					
ANR	1895791	IdentifierDeclStatement	zend_string * res ;	963:1:26225:26241	1895772	1	True				
ANR	1895792	IdentifierDecl	* res		1895772	0					
ANR	1895793	IdentifierDeclType	zend_string *		1895772	0					
ANR	1895794	Identifier	res		1895772	1					
ANR	1895795	IfStatement	if ( tmp )		1895772	2					
ANR	1895796	Condition	tmp	965:5:26249:26251	1895772	0	True				
ANR	1895797	Identifier	tmp		1895772	0					
ANR	1895798	CompoundStatement		5:10:88:88	1895772	1					
ANR	1895799	ExpressionStatement	"res = zend_string_init ( ( char * ) tmp , strlen ( ( char * ) tmp ) , 0 )"	966:2:26258:26316	1895772	0	True				
ANR	1895800	AssignmentExpression	"res = zend_string_init ( ( char * ) tmp , strlen ( ( char * ) tmp ) , 0 )"		1895772	0		=			
ANR	1895801	Identifier	res		1895772	0					
ANR	1895802	CallExpression	"zend_string_init ( ( char * ) tmp , strlen ( ( char * ) tmp ) , 0 )"		1895772	1					
ANR	1895803	Callee	zend_string_init		1895772	0					
ANR	1895804	Identifier	zend_string_init		1895772	0					
ANR	1895805	ArgumentList	( char * ) tmp		1895772	1					
ANR	1895806	Argument	( char * ) tmp		1895772	0					
ANR	1895807	CastExpression	( char * ) tmp		1895772	0					
ANR	1895808	CastTarget	char *		1895772	0					
ANR	1895809	Identifier	tmp		1895772	1					
ANR	1895810	Argument	strlen ( ( char * ) tmp )		1895772	1					
ANR	1895811	CallExpression	strlen ( ( char * ) tmp )		1895772	0					
ANR	1895812	Callee	strlen		1895772	0					
ANR	1895813	Identifier	strlen		1895772	0					
ANR	1895814	ArgumentList	( char * ) tmp		1895772	1					
ANR	1895815	Argument	( char * ) tmp		1895772	0					
ANR	1895816	CastExpression	( char * ) tmp		1895772	0					
ANR	1895817	CastTarget	char *		1895772	0					
ANR	1895818	Identifier	tmp		1895772	1					
ANR	1895819	Argument	0		1895772	2					
ANR	1895820	PrimaryExpression	0		1895772	0					
ANR	1895821	ExpressionStatement	xmlFree ( tmp )	967:2:26320:26332	1895772	1	True				
ANR	1895822	CallExpression	xmlFree ( tmp )		1895772	0					
ANR	1895823	Callee	xmlFree		1895772	0					
ANR	1895824	Identifier	xmlFree		1895772	0					
ANR	1895825	ArgumentList	tmp		1895772	1					
ANR	1895826	Argument	tmp		1895772	0					
ANR	1895827	Identifier	tmp		1895772	0					
ANR	1895828	ElseStatement	else		1895772	0					
ANR	1895829	CompoundStatement		8:8:176:176	1895772	0					
ANR	1895830	ExpressionStatement	res = ZSTR_EMPTY_ALLOC ( )	969:2:26346:26370	1895772	0	True				
ANR	1895831	AssignmentExpression	res = ZSTR_EMPTY_ALLOC ( )		1895772	0		=			
ANR	1895832	Identifier	res		1895772	0					
ANR	1895833	CallExpression	ZSTR_EMPTY_ALLOC ( )		1895772	1					
ANR	1895834	Callee	ZSTR_EMPTY_ALLOC		1895772	0					
ANR	1895835	Identifier	ZSTR_EMPTY_ALLOC		1895772	0					
ANR	1895836	ArgumentList			1895772	1					
ANR	1895837	ReturnStatement	return res ;	972:1:26377:26387	1895772	3	True				
ANR	1895838	Identifier	res		1895772	0					
ANR	1895839	ReturnType	static inline zend_string *		1895772	1					
ANR	1895840	Identifier	sxe_xmlNodeListGetString		1895772	2					
ANR	1895841	ParameterList	"xmlDocPtr doc , xmlNodePtr list , int inLine"		1895772	3					
ANR	1895842	Parameter	xmlDocPtr doc	960:52:26111:26123	1895772	0	True				
ANR	1895843	ParameterType	xmlDocPtr		1895772	0					
ANR	1895844	Identifier	doc		1895772	1					
ANR	1895845	Parameter	xmlNodePtr list	960:67:26126:26140	1895772	1	True				
ANR	1895846	ParameterType	xmlNodePtr		1895772	0					
ANR	1895847	Identifier	list		1895772	1					
ANR	1895848	Parameter	int inLine	960:84:26143:26152	1895772	2	True				
ANR	1895849	ParameterType	int		1895772	0					
ANR	1895850	Identifier	inLine		1895772	1					
ANR	1895851	CFGEntryNode	ENTRY		1895772		True				
ANR	1895852	CFGExitNode	EXIT		1895772		True				
ANR	1895853	Symbol	res		1895772						
ANR	1895854	Symbol	strlen		1895772						
ANR	1895855	Symbol	zend_string_init		1895772						
ANR	1895856	Symbol	inLine		1895772						
ANR	1895857	Symbol	tmp		1895772						
ANR	1895858	Symbol	doc		1895772						
ANR	1895859	Symbol	list		1895772						
ANR	1895860	Symbol	ZSTR_EMPTY_ALLOC		1895772						
ANR	1895861	Symbol	xmlNodeListGetString		1895772						
ANR	1895862	Function	_get_base_node_value	978:0:26436:27297							
ANR	1895863	FunctionDef	"_get_base_node_value (php_sxe_object * sxe_ref , xmlNodePtr node , zval * value , xmlChar * nsprefix , int isprefix)"		1895862	0					
ANR	1895864	CompoundStatement		979:0:26557:27297	1895862	0					
ANR	1895865	IdentifierDeclStatement	php_sxe_object * subnode ;	980:1:26560:26583	1895862	0	True				
ANR	1895866	IdentifierDecl	* subnode		1895862	0					
ANR	1895867	IdentifierDeclType	php_sxe_object *		1895862	0					
ANR	1895868	Identifier	subnode		1895862	1					
ANR	1895869	IdentifierDeclStatement	xmlChar * contents ;	981:1:26586:26610	1895862	1	True				
ANR	1895870	IdentifierDecl	* contents		1895862	0					
ANR	1895871	IdentifierDeclType	xmlChar *		1895862	0					
ANR	1895872	Identifier	contents		1895862	1					
ANR	1895873	IfStatement	if ( node -> children && node -> children -> type == XML_TEXT_NODE && ! xmlIsBlankNode ( node -> children ) )		1895862	2					
ANR	1895874	Condition	node -> children && node -> children -> type == XML_TEXT_NODE && ! xmlIsBlankNode ( node -> children )	983:5:26618:26707	1895862	0	True				
ANR	1895875	AndExpression	node -> children && node -> children -> type == XML_TEXT_NODE && ! xmlIsBlankNode ( node -> children )		1895862	0		&&			
ANR	1895876	PtrMemberAccess	node -> children		1895862	0					
ANR	1895877	Identifier	node		1895862	0					
ANR	1895878	Identifier	children		1895862	1					
ANR	1895879	AndExpression	node -> children -> type == XML_TEXT_NODE && ! xmlIsBlankNode ( node -> children )		1895862	1		&&			
ANR	1895880	EqualityExpression	node -> children -> type == XML_TEXT_NODE		1895862	0		==			
ANR	1895881	PtrMemberAccess	node -> children -> type		1895862	0					
ANR	1895882	PtrMemberAccess	node -> children		1895862	0					
ANR	1895883	Identifier	node		1895862	0					
ANR	1895884	Identifier	children		1895862	1					
ANR	1895885	Identifier	type		1895862	1					
ANR	1895886	Identifier	XML_TEXT_NODE		1895862	1					
ANR	1895887	UnaryOperationExpression	! xmlIsBlankNode ( node -> children )		1895862	1					
ANR	1895888	UnaryOperator	!		1895862	0					
ANR	1895889	CallExpression	xmlIsBlankNode ( node -> children )		1895862	1					
ANR	1895890	Callee	xmlIsBlankNode		1895862	0					
ANR	1895891	Identifier	xmlIsBlankNode		1895862	0					
ANR	1895892	ArgumentList	node -> children		1895862	1					
ANR	1895893	Argument	node -> children		1895862	0					
ANR	1895894	PtrMemberAccess	node -> children		1895862	0					
ANR	1895895	Identifier	node		1895862	0					
ANR	1895896	Identifier	children		1895862	1					
ANR	1895897	CompoundStatement		5:97:152:152	1895862	1					
ANR	1895898	ExpressionStatement	"contents = xmlNodeListGetString ( node -> doc , node -> children , 1 )"	984:2:26714:26775	1895862	0	True				
ANR	1895899	AssignmentExpression	"contents = xmlNodeListGetString ( node -> doc , node -> children , 1 )"		1895862	0		=			
ANR	1895900	Identifier	contents		1895862	0					
ANR	1895901	CallExpression	"xmlNodeListGetString ( node -> doc , node -> children , 1 )"		1895862	1					
ANR	1895902	Callee	xmlNodeListGetString		1895862	0					
ANR	1895903	Identifier	xmlNodeListGetString		1895862	0					
ANR	1895904	ArgumentList	node -> doc		1895862	1					
ANR	1895905	Argument	node -> doc		1895862	0					
ANR	1895906	PtrMemberAccess	node -> doc		1895862	0					
ANR	1895907	Identifier	node		1895862	0					
ANR	1895908	Identifier	doc		1895862	1					
ANR	1895909	Argument	node -> children		1895862	1					
ANR	1895910	PtrMemberAccess	node -> children		1895862	0					
ANR	1895911	Identifier	node		1895862	0					
ANR	1895912	Identifier	children		1895862	1					
ANR	1895913	Argument	1		1895862	2					
ANR	1895914	PrimaryExpression	1		1895862	0					
ANR	1895915	IfStatement	if ( contents )		1895862	1					
ANR	1895916	Condition	contents	985:6:26783:26790	1895862	0	True				
ANR	1895917	Identifier	contents		1895862	0					
ANR	1895918	CompoundStatement		7:16:235:235	1895862	1					
ANR	1895919	ExpressionStatement	"ZVAL_STRING ( value , ( char * ) contents )"	986:3:26798:26834	1895862	0	True				
ANR	1895920	CallExpression	"ZVAL_STRING ( value , ( char * ) contents )"		1895862	0					
ANR	1895921	Callee	ZVAL_STRING		1895862	0					
ANR	1895922	Identifier	ZVAL_STRING		1895862	0					
ANR	1895923	ArgumentList	value		1895862	1					
ANR	1895924	Argument	value		1895862	0					
ANR	1895925	Identifier	value		1895862	0					
ANR	1895926	Argument	( char * ) contents		1895862	1					
ANR	1895927	CastExpression	( char * ) contents		1895862	0					
ANR	1895928	CastTarget	char *		1895862	0					
ANR	1895929	Identifier	contents		1895862	1					
ANR	1895930	ExpressionStatement	xmlFree ( contents )	987:3:26839:26856	1895862	1	True				
ANR	1895931	CallExpression	xmlFree ( contents )		1895862	0					
ANR	1895932	Callee	xmlFree		1895862	0					
ANR	1895933	Identifier	xmlFree		1895862	0					
ANR	1895934	ArgumentList	contents		1895862	1					
ANR	1895935	Argument	contents		1895862	0					
ANR	1895936	Identifier	contents		1895862	0					
ANR	1895937	ElseStatement	else		1895862	0					
ANR	1895938	CompoundStatement		11:8:312:312	1895862	0					
ANR	1895939	ExpressionStatement	"subnode = php_sxe_object_new ( sxe_ref -> zo . ce , sxe_ref -> fptr_count )"	990:2:26874:26939	1895862	0	True				
ANR	1895940	AssignmentExpression	"subnode = php_sxe_object_new ( sxe_ref -> zo . ce , sxe_ref -> fptr_count )"		1895862	0		=			
ANR	1895941	Identifier	subnode		1895862	0					
ANR	1895942	CallExpression	"php_sxe_object_new ( sxe_ref -> zo . ce , sxe_ref -> fptr_count )"		1895862	1					
ANR	1895943	Callee	php_sxe_object_new		1895862	0					
ANR	1895944	Identifier	php_sxe_object_new		1895862	0					
ANR	1895945	ArgumentList	sxe_ref -> zo . ce		1895862	1					
ANR	1895946	Argument	sxe_ref -> zo . ce		1895862	0					
ANR	1895947	MemberAccess	sxe_ref -> zo . ce		1895862	0					
ANR	1895948	PtrMemberAccess	sxe_ref -> zo		1895862	0					
ANR	1895949	Identifier	sxe_ref		1895862	0					
ANR	1895950	Identifier	zo		1895862	1					
ANR	1895951	Identifier	ce		1895862	1					
ANR	1895952	Argument	sxe_ref -> fptr_count		1895862	1					
ANR	1895953	PtrMemberAccess	sxe_ref -> fptr_count		1895862	0					
ANR	1895954	Identifier	sxe_ref		1895862	0					
ANR	1895955	Identifier	fptr_count		1895862	1					
ANR	1895956	ExpressionStatement	subnode -> document = sxe_ref -> document	991:2:26943:26980	1895862	1	True				
ANR	1895957	AssignmentExpression	subnode -> document = sxe_ref -> document		1895862	0		=			
ANR	1895958	PtrMemberAccess	subnode -> document		1895862	0					
ANR	1895959	Identifier	subnode		1895862	0					
ANR	1895960	Identifier	document		1895862	1					
ANR	1895961	PtrMemberAccess	sxe_ref -> document		1895862	1					
ANR	1895962	Identifier	sxe_ref		1895862	0					
ANR	1895963	Identifier	document		1895862	1					
ANR	1895964	ExpressionStatement	subnode -> document -> refcount ++	992:2:26984:27013	1895862	2	True				
ANR	1895965	PostIncDecOperationExpression	subnode -> document -> refcount ++		1895862	0					
ANR	1895966	PtrMemberAccess	subnode -> document -> refcount		1895862	0					
ANR	1895967	PtrMemberAccess	subnode -> document		1895862	0					
ANR	1895968	Identifier	subnode		1895862	0					
ANR	1895969	Identifier	document		1895862	1					
ANR	1895970	Identifier	refcount		1895862	1					
ANR	1895971	IncDec	++		1895862	1					
ANR	1895972	IfStatement	if ( nsprefix && * nsprefix )		1895862	3					
ANR	1895973	Condition	nsprefix && * nsprefix	993:6:27021:27041	1895862	0	True				
ANR	1895974	AndExpression	nsprefix && * nsprefix		1895862	0		&&			
ANR	1895975	Identifier	nsprefix		1895862	0					
ANR	1895976	UnaryOperationExpression	* nsprefix		1895862	1					
ANR	1895977	UnaryOperator	*		1895862	0					
ANR	1895978	Identifier	nsprefix		1895862	1					
ANR	1895979	CompoundStatement		15:29:486:486	1895862	1					
ANR	1895980	ExpressionStatement	subnode -> iter . nsprefix = ( xmlChar * ) estrdup ( ( char * ) nsprefix )	994:3:27049:27109	1895862	0	True				
ANR	1895981	AssignmentExpression	subnode -> iter . nsprefix = ( xmlChar * ) estrdup ( ( char * ) nsprefix )		1895862	0		=			
ANR	1895982	MemberAccess	subnode -> iter . nsprefix		1895862	0					
ANR	1895983	PtrMemberAccess	subnode -> iter		1895862	0					
ANR	1895984	Identifier	subnode		1895862	0					
ANR	1895985	Identifier	iter		1895862	1					
ANR	1895986	Identifier	nsprefix		1895862	1					
ANR	1895987	CastExpression	( xmlChar * ) estrdup ( ( char * ) nsprefix )		1895862	1					
ANR	1895988	CastTarget	xmlChar *		1895862	0					
ANR	1895989	CallExpression	estrdup ( ( char * ) nsprefix )		1895862	1					
ANR	1895990	Callee	estrdup		1895862	0					
ANR	1895991	Identifier	estrdup		1895862	0					
ANR	1895992	ArgumentList	( char * ) nsprefix		1895862	1					
ANR	1895993	Argument	( char * ) nsprefix		1895862	0					
ANR	1895994	CastExpression	( char * ) nsprefix		1895862	0					
ANR	1895995	CastTarget	char *		1895862	0					
ANR	1895996	Identifier	nsprefix		1895862	1					
ANR	1895997	ExpressionStatement	subnode -> iter . isprefix = isprefix	995:3:27114:27147	1895862	1	True				
ANR	1895998	AssignmentExpression	subnode -> iter . isprefix = isprefix		1895862	0		=			
ANR	1895999	MemberAccess	subnode -> iter . isprefix		1895862	0					
ANR	1896000	PtrMemberAccess	subnode -> iter		1895862	0					
ANR	1896001	Identifier	subnode		1895862	0					
ANR	1896002	Identifier	iter		1895862	1					
ANR	1896003	Identifier	isprefix		1895862	1					
ANR	1896004	Identifier	isprefix		1895862	1					
ANR	1896005	ExpressionStatement	"php_libxml_increment_node_ptr ( ( php_libxml_node_object * ) subnode , node , NULL )"	997:2:27155:27231	1895862	4	True				
ANR	1896006	CallExpression	"php_libxml_increment_node_ptr ( ( php_libxml_node_object * ) subnode , node , NULL )"		1895862	0					
ANR	1896007	Callee	php_libxml_increment_node_ptr		1895862	0					
ANR	1896008	Identifier	php_libxml_increment_node_ptr		1895862	0					
ANR	1896009	ArgumentList	( php_libxml_node_object * ) subnode		1895862	1					
ANR	1896010	Argument	( php_libxml_node_object * ) subnode		1895862	0					
ANR	1896011	CastExpression	( php_libxml_node_object * ) subnode		1895862	0					
ANR	1896012	CastTarget	php_libxml_node_object *		1895862	0					
ANR	1896013	Identifier	subnode		1895862	1					
ANR	1896014	Argument	node		1895862	1					
ANR	1896015	Identifier	node		1895862	0					
ANR	1896016	Argument	NULL		1895862	2					
ANR	1896017	Identifier	NULL		1895862	0					
ANR	1896018	ExpressionStatement	"ZVAL_OBJ ( value , & subnode -> zo )"	999:2:27236:27265	1895862	5	True				
ANR	1896019	CallExpression	"ZVAL_OBJ ( value , & subnode -> zo )"		1895862	0					
ANR	1896020	Callee	ZVAL_OBJ		1895862	0					
ANR	1896021	Identifier	ZVAL_OBJ		1895862	0					
ANR	1896022	ArgumentList	value		1895862	1					
ANR	1896023	Argument	value		1895862	0					
ANR	1896024	Identifier	value		1895862	0					
ANR	1896025	Argument	& subnode -> zo		1895862	1					
ANR	1896026	UnaryOperationExpression	& subnode -> zo		1895862	0					
ANR	1896027	UnaryOperator	&		1895862	0					
ANR	1896028	PtrMemberAccess	subnode -> zo		1895862	1					
ANR	1896029	Identifier	subnode		1895862	0					
ANR	1896030	Identifier	zo		1895862	1					
ANR	1896031	ReturnType	static void		1895862	1					
ANR	1896032	Identifier	_get_base_node_value		1895862	2					
ANR	1896033	ParameterList	"php_sxe_object * sxe_ref , xmlNodePtr node , zval * value , xmlChar * nsprefix , int isprefix"		1895862	3					
ANR	1896034	Parameter	php_sxe_object * sxe_ref	978:33:26469:26491	1895862	0	True				
ANR	1896035	ParameterType	php_sxe_object *		1895862	0					
ANR	1896036	Identifier	sxe_ref		1895862	1					
ANR	1896037	Parameter	xmlNodePtr node	978:58:26494:26508	1895862	1	True				
ANR	1896038	ParameterType	xmlNodePtr		1895862	0					
ANR	1896039	Identifier	node		1895862	1					
ANR	1896040	Parameter	zval * value	978:75:26511:26521	1895862	2	True				
ANR	1896041	ParameterType	zval *		1895862	0					
ANR	1896042	Identifier	value		1895862	1					
ANR	1896043	Parameter	xmlChar * nsprefix	978:88:26524:26540	1895862	3	True				
ANR	1896044	ParameterType	xmlChar *		1895862	0					
ANR	1896045	Identifier	nsprefix		1895862	1					
ANR	1896046	Parameter	int isprefix	978:107:26543:26554	1895862	4	True				
ANR	1896047	ParameterType	int		1895862	0					
ANR	1896048	Identifier	isprefix		1895862	1					
ANR	1896049	CFGEntryNode	ENTRY		1895862		True				
ANR	1896050	CFGExitNode	EXIT		1895862		True				
ANR	1896051	Symbol	* subnode		1895862						
ANR	1896052	Symbol	sxe_ref -> zo		1895862						
ANR	1896053	Symbol	* subnode -> document		1895862						
ANR	1896054	Symbol	sxe_ref -> zo . ce		1895862						
ANR	1896055	Symbol	* nsprefix		1895862						
ANR	1896056	Symbol	xmlIsBlankNode		1895862						
ANR	1896057	Symbol	XML_TEXT_NODE		1895862						
ANR	1896058	Symbol	node -> children -> type		1895862						
ANR	1896059	Symbol	sxe_ref -> fptr_count		1895862						
ANR	1896060	Symbol	nsprefix		1895862						
ANR	1896061	Symbol	sxe_ref		1895862						
ANR	1896062	Symbol	* node		1895862						
ANR	1896063	Symbol	value		1895862						
ANR	1896064	Symbol	node -> doc		1895862						
ANR	1896065	Symbol	* node -> children		1895862						
ANR	1896066	Symbol	xmlNodeListGetString		1895862						
ANR	1896067	Symbol	isprefix		1895862						
ANR	1896068	Symbol	subnode -> document -> refcount		1895862						
ANR	1896069	Symbol	NULL		1895862						
ANR	1896070	Symbol	subnode -> iter . isprefix		1895862						
ANR	1896071	Symbol	sxe_ref -> document		1895862						
ANR	1896072	Symbol	subnode -> iter . nsprefix		1895862						
ANR	1896073	Symbol	php_sxe_object_new		1895862						
ANR	1896074	Symbol	* * subnode		1895862						
ANR	1896075	Symbol	subnode -> iter		1895862						
ANR	1896076	Symbol	subnode		1895862						
ANR	1896077	Symbol	* sxe_ref		1895862						
ANR	1896078	Symbol	node		1895862						
ANR	1896079	Symbol	subnode -> document		1895862						
ANR	1896080	Symbol	* * node		1895862						
ANR	1896081	Symbol	contents		1895862						
ANR	1896082	Symbol	& subnode -> zo		1895862						
ANR	1896083	Symbol	estrdup		1895862						
ANR	1896084	Symbol	node -> children		1895862						
ANR	1896085	Function	sxe_properties_add	1005:0:27310:27939							
ANR	1896086	FunctionDef	"sxe_properties_add (HashTable * rv , char * name , int namelen , zval * value)"		1896085	0					
ANR	1896087	CompoundStatement		1006:0:27404:27939	1896085	0					
ANR	1896088	IdentifierDeclStatement	zend_string * key ;	1007:1:27407:27423	1896085	0	True				
ANR	1896089	IdentifierDecl	* key		1896085	0					
ANR	1896090	IdentifierDeclType	zend_string *		1896085	0					
ANR	1896091	Identifier	key		1896085	1					
ANR	1896092	IdentifierDeclStatement	zval * data_ptr ;	1008:1:27426:27441	1896085	1	True				
ANR	1896093	IdentifierDecl	* data_ptr		1896085	0					
ANR	1896094	IdentifierDeclType	zval *		1896085	0					
ANR	1896095	Identifier	data_ptr		1896085	1					
ANR	1896096	IdentifierDeclStatement	zval newptr ;	1009:1:27444:27456	1896085	2	True				
ANR	1896097	IdentifierDecl	newptr		1896085	0					
ANR	1896098	IdentifierDeclType	zval		1896085	0					
ANR	1896099	Identifier	newptr		1896085	1					
ANR	1896100	ExpressionStatement	"key = zend_string_init ( name , namelen , 0 )"	1011:1:27460:27500	1896085	3	True				
ANR	1896101	AssignmentExpression	"key = zend_string_init ( name , namelen , 0 )"		1896085	0		=			
ANR	1896102	Identifier	key		1896085	0					
ANR	1896103	CallExpression	"zend_string_init ( name , namelen , 0 )"		1896085	1					
ANR	1896104	Callee	zend_string_init		1896085	0					
ANR	1896105	Identifier	zend_string_init		1896085	0					
ANR	1896106	ArgumentList	name		1896085	1					
ANR	1896107	Argument	name		1896085	0					
ANR	1896108	Identifier	name		1896085	0					
ANR	1896109	Argument	namelen		1896085	1					
ANR	1896110	Identifier	namelen		1896085	0					
ANR	1896111	Argument	0		1896085	2					
ANR	1896112	PrimaryExpression	0		1896085	0					
ANR	1896113	IfStatement	"if ( ( data_ptr = zend_hash_find ( rv , key ) ) != NULL )"		1896085	4					
ANR	1896114	Condition	"( data_ptr = zend_hash_find ( rv , key ) ) != NULL"	1012:5:27507:27550	1896085	0	True				
ANR	1896115	EqualityExpression	"( data_ptr = zend_hash_find ( rv , key ) ) != NULL"		1896085	0		!=			
ANR	1896116	AssignmentExpression	"data_ptr = zend_hash_find ( rv , key )"		1896085	0		=			
ANR	1896117	Identifier	data_ptr		1896085	0					
ANR	1896118	CallExpression	"zend_hash_find ( rv , key )"		1896085	1					
ANR	1896119	Callee	zend_hash_find		1896085	0					
ANR	1896120	Identifier	zend_hash_find		1896085	0					
ANR	1896121	ArgumentList	rv		1896085	1					
ANR	1896122	Argument	rv		1896085	0					
ANR	1896123	Identifier	rv		1896085	0					
ANR	1896124	Argument	key		1896085	1					
ANR	1896125	Identifier	key		1896085	0					
ANR	1896126	Identifier	NULL		1896085	1					
ANR	1896127	CompoundStatement		7:51:148:148	1896085	1					
ANR	1896128	IfStatement	if ( Z_TYPE_P ( data_ptr ) == IS_ARRAY )		1896085	0					
ANR	1896129	Condition	Z_TYPE_P ( data_ptr ) == IS_ARRAY	1013:6:27561:27590	1896085	0	True				
ANR	1896130	EqualityExpression	Z_TYPE_P ( data_ptr ) == IS_ARRAY		1896085	0		==			
ANR	1896131	CallExpression	Z_TYPE_P ( data_ptr )		1896085	0					
ANR	1896132	Callee	Z_TYPE_P		1896085	0					
ANR	1896133	Identifier	Z_TYPE_P		1896085	0					
ANR	1896134	ArgumentList	data_ptr		1896085	1					
ANR	1896135	Argument	data_ptr		1896085	0					
ANR	1896136	Identifier	data_ptr		1896085	0					
ANR	1896137	Identifier	IS_ARRAY		1896085	1					
ANR	1896138	CompoundStatement		8:38:188:188	1896085	1					
ANR	1896139	ExpressionStatement	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( data_ptr ) , value )"	1014:3:27598:27658	1896085	0	True				
ANR	1896140	CallExpression	"zend_hash_next_index_insert_new ( Z_ARRVAL_P ( data_ptr ) , value )"		1896085	0					
ANR	1896141	Callee	zend_hash_next_index_insert_new		1896085	0					
ANR	1896142	Identifier	zend_hash_next_index_insert_new		1896085	0					
ANR	1896143	ArgumentList	Z_ARRVAL_P ( data_ptr )		1896085	1					
ANR	1896144	Argument	Z_ARRVAL_P ( data_ptr )		1896085	0					
ANR	1896145	CallExpression	Z_ARRVAL_P ( data_ptr )		1896085	0					
ANR	1896146	Callee	Z_ARRVAL_P		1896085	0					
ANR	1896147	Identifier	Z_ARRVAL_P		1896085	0					
ANR	1896148	ArgumentList	data_ptr		1896085	1					
ANR	1896149	Argument	data_ptr		1896085	0					
ANR	1896150	Identifier	data_ptr		1896085	0					
ANR	1896151	Argument	value		1896085	1					
ANR	1896152	Identifier	value		1896085	0					
ANR	1896153	ElseStatement	else		1896085	0					
ANR	1896154	CompoundStatement		10:9:264:264	1896085	0					
ANR	1896155	ExpressionStatement	array_init ( & newptr )	1016:3:27674:27693	1896085	0	True				
ANR	1896156	CallExpression	array_init ( & newptr )		1896085	0					
ANR	1896157	Callee	array_init		1896085	0					
ANR	1896158	Identifier	array_init		1896085	0					
ANR	1896159	ArgumentList	& newptr		1896085	1					
ANR	1896160	Argument	& newptr		1896085	0					
ANR	1896161	UnaryOperationExpression	& newptr		1896085	0					
ANR	1896162	UnaryOperator	&		1896085	0					
ANR	1896163	Identifier	newptr		1896085	1					
ANR	1896164	ExpressionStatement	"zend_hash_next_index_insert_new ( Z_ARRVAL ( newptr ) , data_ptr )"	1017:3:27698:27757	1896085	1	True				
ANR	1896165	CallExpression	"zend_hash_next_index_insert_new ( Z_ARRVAL ( newptr ) , data_ptr )"		1896085	0					
ANR	1896166	Callee	zend_hash_next_index_insert_new		1896085	0					
ANR	1896167	Identifier	zend_hash_next_index_insert_new		1896085	0					
ANR	1896168	ArgumentList	Z_ARRVAL ( newptr )		1896085	1					
ANR	1896169	Argument	Z_ARRVAL ( newptr )		1896085	0					
ANR	1896170	CallExpression	Z_ARRVAL ( newptr )		1896085	0					
ANR	1896171	Callee	Z_ARRVAL		1896085	0					
ANR	1896172	Identifier	Z_ARRVAL		1896085	0					
ANR	1896173	ArgumentList	newptr		1896085	1					
ANR	1896174	Argument	newptr		1896085	0					
ANR	1896175	Identifier	newptr		1896085	0					
ANR	1896176	Argument	data_ptr		1896085	1					
ANR	1896177	Identifier	data_ptr		1896085	0					
ANR	1896178	ExpressionStatement	"zend_hash_next_index_insert_new ( Z_ARRVAL ( newptr ) , value )"	1018:3:27762:27818	1896085	2	True				
ANR	1896179	CallExpression	"zend_hash_next_index_insert_new ( Z_ARRVAL ( newptr ) , value )"		1896085	0					
ANR	1896180	Callee	zend_hash_next_index_insert_new		1896085	0					
ANR	1896181	Identifier	zend_hash_next_index_insert_new		1896085	0					
ANR	1896182	ArgumentList	Z_ARRVAL ( newptr )		1896085	1					
ANR	1896183	Argument	Z_ARRVAL ( newptr )		1896085	0					
ANR	1896184	CallExpression	Z_ARRVAL ( newptr )		1896085	0					
ANR	1896185	Callee	Z_ARRVAL		1896085	0					
ANR	1896186	Identifier	Z_ARRVAL		1896085	0					
ANR	1896187	ArgumentList	newptr		1896085	1					
ANR	1896188	Argument	newptr		1896085	0					
ANR	1896189	Identifier	newptr		1896085	0					
ANR	1896190	Argument	value		1896085	1					
ANR	1896191	Identifier	value		1896085	0					
ANR	1896192	ExpressionStatement	"ZVAL_ARR ( data_ptr , Z_ARR ( newptr ) )"	1019:3:27823:27856	1896085	3	True				
ANR	1896193	CallExpression	"ZVAL_ARR ( data_ptr , Z_ARR ( newptr ) )"		1896085	0					
ANR	1896194	Callee	ZVAL_ARR		1896085	0					
ANR	1896195	Identifier	ZVAL_ARR		1896085	0					
ANR	1896196	ArgumentList	data_ptr		1896085	1					
ANR	1896197	Argument	data_ptr		1896085	0					
ANR	1896198	Identifier	data_ptr		1896085	0					
ANR	1896199	Argument	Z_ARR ( newptr )		1896085	1					
ANR	1896200	CallExpression	Z_ARR ( newptr )		1896085	0					
ANR	1896201	Callee	Z_ARR		1896085	0					
ANR	1896202	Identifier	Z_ARR		1896085	0					
ANR	1896203	ArgumentList	newptr		1896085	1					
ANR	1896204	Argument	newptr		1896085	0					
ANR	1896205	Identifier	newptr		1896085	0					
ANR	1896206	ElseStatement	else		1896085	0					
ANR	1896207	CompoundStatement		16:8:465:465	1896085	0					
ANR	1896208	ExpressionStatement	"zend_hash_add_new ( rv , key , value )"	1022:2:27874:27907	1896085	0	True				
ANR	1896209	CallExpression	"zend_hash_add_new ( rv , key , value )"		1896085	0					
ANR	1896210	Callee	zend_hash_add_new		1896085	0					
ANR	1896211	Identifier	zend_hash_add_new		1896085	0					
ANR	1896212	ArgumentList	rv		1896085	1					
ANR	1896213	Argument	rv		1896085	0					
ANR	1896214	Identifier	rv		1896085	0					
ANR	1896215	Argument	key		1896085	1					
ANR	1896216	Identifier	key		1896085	0					
ANR	1896217	Argument	value		1896085	2					
ANR	1896218	Identifier	value		1896085	0					
ANR	1896219	ExpressionStatement	zend_string_release ( key )	1024:1:27913:27937	1896085	5	True				
ANR	1896220	CallExpression	zend_string_release ( key )		1896085	0					
ANR	1896221	Callee	zend_string_release		1896085	0					
ANR	1896222	Identifier	zend_string_release		1896085	0					
ANR	1896223	ArgumentList	key		1896085	1					
ANR	1896224	Argument	key		1896085	0					
ANR	1896225	Identifier	key		1896085	0					
ANR	1896226	ReturnType	static void		1896085	1					
ANR	1896227	Identifier	sxe_properties_add		1896085	2					
ANR	1896228	ParameterList	"HashTable * rv , char * name , int namelen , zval * value"		1896085	3					
ANR	1896229	Parameter	HashTable * rv	1005:31:27341:27353	1896085	0	True				
ANR	1896230	ParameterType	HashTable *		1896085	0					
ANR	1896231	Identifier	rv		1896085	1					
ANR	1896232	Parameter	char * name	1005:46:27356:27365	1896085	1	True				
ANR	1896233	ParameterType	char *		1896085	0					
ANR	1896234	Identifier	name		1896085	1					
ANR	1896235	Parameter	int namelen	1005:58:27368:27378	1896085	2	True				
ANR	1896236	ParameterType	int		1896085	0					
ANR	1896237	Identifier	namelen		1896085	1					
ANR	1896238	Parameter	zval * value	1005:71:27381:27391	1896085	3	True				
ANR	1896239	ParameterType	zval *		1896085	0					
ANR	1896240	Identifier	value		1896085	1					
ANR	1896241	CFGEntryNode	ENTRY		1896085		True				
ANR	1896242	CFGExitNode	EXIT		1896085		True				
ANR	1896243	Symbol	NULL		1896085						
ANR	1896244	Symbol	rv		1896085						
ANR	1896245	Symbol	namelen		1896085						
ANR	1896246	Symbol	Z_ARRVAL		1896085						
ANR	1896247	Symbol	Z_TYPE_P		1896085						
ANR	1896248	Symbol	zend_string_init		1896085						
ANR	1896249	Symbol	zend_hash_find		1896085						
ANR	1896250	Symbol	newptr		1896085						
ANR	1896251	Symbol	IS_ARRAY		1896085						
ANR	1896252	Symbol	name		1896085						
ANR	1896253	Symbol	& newptr		1896085						
ANR	1896254	Symbol	Z_ARRVAL_P		1896085						
ANR	1896255	Symbol	Z_ARR		1896085						
ANR	1896256	Symbol	value		1896085						
ANR	1896257	Symbol	key		1896085						
ANR	1896258	Symbol	data_ptr		1896085						
ANR	1896259	Function	sxe_prop_is_empty	1028:0:27952:30141							
ANR	1896260	FunctionDef	sxe_prop_is_empty (zval * object)		1896259	0					
ANR	1896261	CompoundStatement		1029:0:28005:30141	1896259	0					
ANR	1896262	IdentifierDeclStatement	php_sxe_object * sxe ;	1030:1:28008:28028	1896259	0	True				
ANR	1896263	IdentifierDecl	* sxe		1896259	0					
ANR	1896264	IdentifierDeclType	php_sxe_object *		1896259	0					
ANR	1896265	Identifier	sxe		1896259	1					
ANR	1896266	IdentifierDeclStatement	xmlNodePtr node ;	1031:1:28031:28052	1896259	1	True				
ANR	1896267	IdentifierDecl	node		1896259	0					
ANR	1896268	IdentifierDeclType	xmlNodePtr		1896259	0					
ANR	1896269	Identifier	node		1896259	1					
ANR	1896270	IdentifierDeclStatement	xmlAttrPtr attr ;	1032:1:28055:28076	1896259	2	True				
ANR	1896271	IdentifierDecl	attr		1896259	0					
ANR	1896272	IdentifierDeclType	xmlAttrPtr		1896259	0					
ANR	1896273	Identifier	attr		1896259	1					
ANR	1896274	IdentifierDeclStatement	zval iter_data ;	1033:1:28079:28105	1896259	3	True				
ANR	1896275	IdentifierDecl	iter_data		1896259	0					
ANR	1896276	IdentifierDeclType	zval		1896259	0					
ANR	1896277	Identifier	iter_data		1896259	1					
ANR	1896278	IdentifierDeclStatement	int test ;	1034:1:28108:28129	1896259	4	True				
ANR	1896279	IdentifierDecl	test		1896259	0					
ANR	1896280	IdentifierDeclType	int		1896259	0					
ANR	1896281	Identifier	test		1896259	1					
ANR	1896282	IdentifierDeclStatement	int is_empty ;	1035:1:28132:28157	1896259	5	True				
ANR	1896283	IdentifierDecl	is_empty		1896259	0					
ANR	1896284	IdentifierDeclType	int		1896259	0					
ANR	1896285	Identifier	is_empty		1896259	1					
ANR	1896286	ExpressionStatement	sxe = Z_SXEOBJ_P ( object )	1037:1:28161:28185	1896259	6	True				
ANR	1896287	AssignmentExpression	sxe = Z_SXEOBJ_P ( object )		1896259	0		=			
ANR	1896288	Identifier	sxe		1896259	0					
ANR	1896289	CallExpression	Z_SXEOBJ_P ( object )		1896259	1					
ANR	1896290	Callee	Z_SXEOBJ_P		1896259	0					
ANR	1896291	Identifier	Z_SXEOBJ_P		1896259	0					
ANR	1896292	ArgumentList	object		1896259	1					
ANR	1896293	Argument	object		1896259	0					
ANR	1896294	Identifier	object		1896259	0					
ANR	1896295	ExpressionStatement	"GET_NODE ( sxe , node )"	1039:1:28189:28208	1896259	7	True				
ANR	1896296	CallExpression	"GET_NODE ( sxe , node )"		1896259	0					
ANR	1896297	Callee	GET_NODE		1896259	0					
ANR	1896298	Identifier	GET_NODE		1896259	0					
ANR	1896299	ArgumentList	sxe		1896259	1					
ANR	1896300	Argument	sxe		1896259	0					
ANR	1896301	Identifier	sxe		1896259	0					
ANR	1896302	Argument	node		1896259	1					
ANR	1896303	Identifier	node		1896259	0					
ANR	1896304	IfStatement	if ( ! node )		1896259	8					
ANR	1896305	Condition	! node	1040:5:28215:28219	1896259	0	True				
ANR	1896306	UnaryOperationExpression	! node		1896259	0					
ANR	1896307	UnaryOperator	!		1896259	0					
ANR	1896308	Identifier	node		1896259	1					
ANR	1896309	CompoundStatement		12:12:216:216	1896259	1					
ANR	1896310	ReturnStatement	return 1 ;	1041:2:28226:28234	1896259	0	True				
ANR	1896311	PrimaryExpression	1		1896259	0					
ANR	1896312	IfStatement	if ( sxe -> iter . type == SXE_ITER_ELEMENT )		1896259	9					
ANR	1896313	Condition	sxe -> iter . type == SXE_ITER_ELEMENT	1044:5:28245:28278	1896259	0	True				
ANR	1896314	EqualityExpression	sxe -> iter . type == SXE_ITER_ELEMENT		1896259	0		==			
ANR	1896315	MemberAccess	sxe -> iter . type		1896259	0					
ANR	1896316	PtrMemberAccess	sxe -> iter		1896259	0					
ANR	1896317	Identifier	sxe		1896259	0					
ANR	1896318	Identifier	iter		1896259	1					
ANR	1896319	Identifier	type		1896259	1					
ANR	1896320	Identifier	SXE_ITER_ELEMENT		1896259	1					
ANR	1896321	CompoundStatement		16:41:275:275	1896259	1					
ANR	1896322	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , node )"	1045:2:28285:28325	1896259	0	True				
ANR	1896323	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , node )"		1896259	0		=			
ANR	1896324	Identifier	node		1896259	0					
ANR	1896325	CallExpression	"php_sxe_get_first_node ( sxe , node )"		1896259	1					
ANR	1896326	Callee	php_sxe_get_first_node		1896259	0					
ANR	1896327	Identifier	php_sxe_get_first_node		1896259	0					
ANR	1896328	ArgumentList	sxe		1896259	1					
ANR	1896329	Argument	sxe		1896259	0					
ANR	1896330	Identifier	sxe		1896259	0					
ANR	1896331	Argument	node		1896259	1					
ANR	1896332	Identifier	node		1896259	0					
ANR	1896333	IfStatement	if ( ! node || node -> type != XML_ENTITY_DECL )		1896259	10					
ANR	1896334	Condition	! node || node -> type != XML_ENTITY_DECL	1047:5:28335:28372	1896259	0	True				
ANR	1896335	OrExpression	! node || node -> type != XML_ENTITY_DECL		1896259	0		||			
ANR	1896336	UnaryOperationExpression	! node		1896259	0					
ANR	1896337	UnaryOperator	!		1896259	0					
ANR	1896338	Identifier	node		1896259	1					
ANR	1896339	EqualityExpression	node -> type != XML_ENTITY_DECL		1896259	1		!=			
ANR	1896340	PtrMemberAccess	node -> type		1896259	0					
ANR	1896341	Identifier	node		1896259	0					
ANR	1896342	Identifier	type		1896259	1					
ANR	1896343	Identifier	XML_ENTITY_DECL		1896259	1					
ANR	1896344	CompoundStatement		19:45:369:369	1896259	1					
ANR	1896345	ExpressionStatement	attr = node ? ( xmlAttrPtr ) node -> properties : NULL	1048:2:28379:28428	1896259	0	True				
ANR	1896346	AssignmentExpression	attr = node ? ( xmlAttrPtr ) node -> properties : NULL		1896259	0		=			
ANR	1896347	Identifier	attr		1896259	0					
ANR	1896348	ConditionalExpression	node ? ( xmlAttrPtr ) node -> properties : NULL		1896259	1					
ANR	1896349	Condition	node		1896259	0					
ANR	1896350	Identifier	node		1896259	0					
ANR	1896351	CastExpression	( xmlAttrPtr ) node -> properties		1896259	1					
ANR	1896352	CastTarget	xmlAttrPtr		1896259	0					
ANR	1896353	PtrMemberAccess	node -> properties		1896259	1					
ANR	1896354	Identifier	node		1896259	0					
ANR	1896355	Identifier	properties		1896259	1					
ANR	1896356	Identifier	NULL		1896259	2					
ANR	1896357	ExpressionStatement	test = sxe -> iter . name && sxe -> iter . type == SXE_ITER_ATTRLIST	1049:2:28432:28492	1896259	1	True				
ANR	1896358	AssignmentExpression	test = sxe -> iter . name && sxe -> iter . type == SXE_ITER_ATTRLIST		1896259	0		=			
ANR	1896359	Identifier	test		1896259	0					
ANR	1896360	AndExpression	sxe -> iter . name && sxe -> iter . type == SXE_ITER_ATTRLIST		1896259	1		&&			
ANR	1896361	MemberAccess	sxe -> iter . name		1896259	0					
ANR	1896362	PtrMemberAccess	sxe -> iter		1896259	0					
ANR	1896363	Identifier	sxe		1896259	0					
ANR	1896364	Identifier	iter		1896259	1					
ANR	1896365	Identifier	name		1896259	1					
ANR	1896366	EqualityExpression	sxe -> iter . type == SXE_ITER_ATTRLIST		1896259	1		==			
ANR	1896367	MemberAccess	sxe -> iter . type		1896259	0					
ANR	1896368	PtrMemberAccess	sxe -> iter		1896259	0					
ANR	1896369	Identifier	sxe		1896259	0					
ANR	1896370	Identifier	iter		1896259	1					
ANR	1896371	Identifier	type		1896259	1					
ANR	1896372	Identifier	SXE_ITER_ATTRLIST		1896259	1					
ANR	1896373	WhileStatement	while ( attr )		1896259	2					
ANR	1896374	Condition	attr	1050:9:28503:28506	1896259	0	True				
ANR	1896375	Identifier	attr		1896259	0					
ANR	1896376	CompoundStatement		22:15:503:503	1896259	1					
ANR	1896377	IfStatement	"if ( ( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix ) )"		1896259	0					
ANR	1896378	Condition	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	1051:7:28518:28641	1896259	0	True				
ANR	1896379	AndExpression	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1896259	0		&&			
ANR	1896380	OrExpression	"! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1896259	0		||			
ANR	1896381	UnaryOperationExpression	! test		1896259	0					
ANR	1896382	UnaryOperator	!		1896259	0					
ANR	1896383	Identifier	test		1896259	1					
ANR	1896384	UnaryOperationExpression	"! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1896259	1					
ANR	1896385	UnaryOperator	!		1896259	0					
ANR	1896386	CallExpression	"xmlStrcmp ( attr -> name , sxe -> iter . name )"		1896259	1					
ANR	1896387	Callee	xmlStrcmp		1896259	0					
ANR	1896388	Identifier	xmlStrcmp		1896259	0					
ANR	1896389	ArgumentList	attr -> name		1896259	1					
ANR	1896390	Argument	attr -> name		1896259	0					
ANR	1896391	PtrMemberAccess	attr -> name		1896259	0					
ANR	1896392	Identifier	attr		1896259	0					
ANR	1896393	Identifier	name		1896259	1					
ANR	1896394	Argument	sxe -> iter . name		1896259	1					
ANR	1896395	MemberAccess	sxe -> iter . name		1896259	0					
ANR	1896396	PtrMemberAccess	sxe -> iter		1896259	0					
ANR	1896397	Identifier	sxe		1896259	0					
ANR	1896398	Identifier	iter		1896259	1					
ANR	1896399	Identifier	name		1896259	1					
ANR	1896400	CallExpression	"match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1896259	1					
ANR	1896401	Callee	match_ns		1896259	0					
ANR	1896402	Identifier	match_ns		1896259	0					
ANR	1896403	ArgumentList	sxe		1896259	1					
ANR	1896404	Argument	sxe		1896259	0					
ANR	1896405	Identifier	sxe		1896259	0					
ANR	1896406	Argument	( xmlNodePtr ) attr		1896259	1					
ANR	1896407	CastExpression	( xmlNodePtr ) attr		1896259	0					
ANR	1896408	CastTarget	xmlNodePtr		1896259	0					
ANR	1896409	Identifier	attr		1896259	1					
ANR	1896410	Argument	sxe -> iter . nsprefix		1896259	2					
ANR	1896411	MemberAccess	sxe -> iter . nsprefix		1896259	0					
ANR	1896412	PtrMemberAccess	sxe -> iter		1896259	0					
ANR	1896413	Identifier	sxe		1896259	0					
ANR	1896414	Identifier	iter		1896259	1					
ANR	1896415	Identifier	nsprefix		1896259	1					
ANR	1896416	Argument	sxe -> iter . isprefix		1896259	3					
ANR	1896417	MemberAccess	sxe -> iter . isprefix		1896259	0					
ANR	1896418	PtrMemberAccess	sxe -> iter		1896259	0					
ANR	1896419	Identifier	sxe		1896259	0					
ANR	1896420	Identifier	iter		1896259	1					
ANR	1896421	Identifier	isprefix		1896259	1					
ANR	1896422	CompoundStatement		23:133:638:638	1896259	1					
ANR	1896423	ReturnStatement	return 0 ;	1052:4:28650:28658	1896259	0	True				
ANR	1896424	PrimaryExpression	0		1896259	0					
ANR	1896425	ExpressionStatement	attr = attr -> next	1054:3:28668:28685	1896259	1	True				
ANR	1896426	AssignmentExpression	attr = attr -> next		1896259	0		=			
ANR	1896427	Identifier	attr		1896259	0					
ANR	1896428	PtrMemberAccess	attr -> next		1896259	1					
ANR	1896429	Identifier	attr		1896259	0					
ANR	1896430	Identifier	next		1896259	1					
ANR	1896431	ExpressionStatement	"GET_NODE ( sxe , node )"	1058:1:28696:28715	1896259	11	True				
ANR	1896432	CallExpression	"GET_NODE ( sxe , node )"		1896259	0					
ANR	1896433	Callee	GET_NODE		1896259	0					
ANR	1896434	Identifier	GET_NODE		1896259	0					
ANR	1896435	ArgumentList	sxe		1896259	1					
ANR	1896436	Argument	sxe		1896259	0					
ANR	1896437	Identifier	sxe		1896259	0					
ANR	1896438	Argument	node		1896259	1					
ANR	1896439	Identifier	node		1896259	0					
ANR	1896440	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , node )"	1059:1:28718:28758	1896259	12	True				
ANR	1896441	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , node )"		1896259	0		=			
ANR	1896442	Identifier	node		1896259	0					
ANR	1896443	CallExpression	"php_sxe_get_first_node ( sxe , node )"		1896259	1					
ANR	1896444	Callee	php_sxe_get_first_node		1896259	0					
ANR	1896445	Identifier	php_sxe_get_first_node		1896259	0					
ANR	1896446	ArgumentList	sxe		1896259	1					
ANR	1896447	Argument	sxe		1896259	0					
ANR	1896448	Identifier	sxe		1896259	0					
ANR	1896449	Argument	node		1896259	1					
ANR	1896450	Identifier	node		1896259	0					
ANR	1896451	ExpressionStatement	is_empty = 1	1060:1:28761:28773	1896259	13	True				
ANR	1896452	AssignmentExpression	is_empty = 1		1896259	0		=			
ANR	1896453	Identifier	is_empty		1896259	0					
ANR	1896454	PrimaryExpression	1		1896259	1					
ANR	1896455	ExpressionStatement	ZVAL_UNDEF ( & iter_data )	1061:1:28776:28798	1896259	14	True				
ANR	1896456	CallExpression	ZVAL_UNDEF ( & iter_data )		1896259	0					
ANR	1896457	Callee	ZVAL_UNDEF		1896259	0					
ANR	1896458	Identifier	ZVAL_UNDEF		1896259	0					
ANR	1896459	ArgumentList	& iter_data		1896259	1					
ANR	1896460	Argument	& iter_data		1896259	0					
ANR	1896461	UnaryOperationExpression	& iter_data		1896259	0					
ANR	1896462	UnaryOperator	&		1896259	0					
ANR	1896463	Identifier	iter_data		1896259	1					
ANR	1896464	IfStatement	if ( node && sxe -> iter . type != SXE_ITER_ATTRLIST )		1896259	15					
ANR	1896465	Condition	node && sxe -> iter . type != SXE_ITER_ATTRLIST	1062:5:28805:28847	1896259	0	True				
ANR	1896466	AndExpression	node && sxe -> iter . type != SXE_ITER_ATTRLIST		1896259	0		&&			
ANR	1896467	Identifier	node		1896259	0					
ANR	1896468	EqualityExpression	sxe -> iter . type != SXE_ITER_ATTRLIST		1896259	1		!=			
ANR	1896469	MemberAccess	sxe -> iter . type		1896259	0					
ANR	1896470	PtrMemberAccess	sxe -> iter		1896259	0					
ANR	1896471	Identifier	sxe		1896259	0					
ANR	1896472	Identifier	iter		1896259	1					
ANR	1896473	Identifier	type		1896259	1					
ANR	1896474	Identifier	SXE_ITER_ATTRLIST		1896259	1					
ANR	1896475	CompoundStatement		34:50:844:844	1896259	1					
ANR	1896476	IfStatement	if ( node -> type == XML_ATTRIBUTE_NODE )		1896259	0					
ANR	1896477	Condition	node -> type == XML_ATTRIBUTE_NODE	1063:6:28858:28889	1896259	0	True				
ANR	1896478	EqualityExpression	node -> type == XML_ATTRIBUTE_NODE		1896259	0		==			
ANR	1896479	PtrMemberAccess	node -> type		1896259	0					
ANR	1896480	Identifier	node		1896259	0					
ANR	1896481	Identifier	type		1896259	1					
ANR	1896482	Identifier	XML_ATTRIBUTE_NODE		1896259	1					
ANR	1896483	CompoundStatement		35:40:886:886	1896259	1					
ANR	1896484	ReturnStatement	return 0 ;	1064:3:28897:28905	1896259	0	True				
ANR	1896485	PrimaryExpression	0		1896259	0					
ANR	1896486	ElseStatement	else		1896259	0					
ANR	1896487	IfStatement	if ( sxe -> iter . type != SXE_ITER_CHILD )		1896259	0					
ANR	1896488	Condition	sxe -> iter . type != SXE_ITER_CHILD	1065:13:28920:28951	1896259	0	True				
ANR	1896489	EqualityExpression	sxe -> iter . type != SXE_ITER_CHILD		1896259	0		!=			
ANR	1896490	MemberAccess	sxe -> iter . type		1896259	0					
ANR	1896491	PtrMemberAccess	sxe -> iter		1896259	0					
ANR	1896492	Identifier	sxe		1896259	0					
ANR	1896493	Identifier	iter		1896259	1					
ANR	1896494	Identifier	type		1896259	1					
ANR	1896495	Identifier	SXE_ITER_CHILD		1896259	1					
ANR	1896496	CompoundStatement		37:47:948:948	1896259	1					
ANR	1896497	IfStatement	if ( sxe -> iter . type == SXE_ITER_NONE || ! node -> children || ! node -> parent || node -> children -> next || node -> children -> children || node -> parent -> children == node -> parent -> last )		1896259	0					
ANR	1896498	Condition	sxe -> iter . type == SXE_ITER_NONE || ! node -> children || ! node -> parent || node -> children -> next || node -> children -> children || node -> parent -> children == node -> parent -> last	1066:7:28963:29129	1896259	0	True				
ANR	1896499	OrExpression	sxe -> iter . type == SXE_ITER_NONE || ! node -> children || ! node -> parent || node -> children -> next || node -> children -> children || node -> parent -> children == node -> parent -> last		1896259	0		||			
ANR	1896500	EqualityExpression	sxe -> iter . type == SXE_ITER_NONE		1896259	0		==			
ANR	1896501	MemberAccess	sxe -> iter . type		1896259	0					
ANR	1896502	PtrMemberAccess	sxe -> iter		1896259	0					
ANR	1896503	Identifier	sxe		1896259	0					
ANR	1896504	Identifier	iter		1896259	1					
ANR	1896505	Identifier	type		1896259	1					
ANR	1896506	Identifier	SXE_ITER_NONE		1896259	1					
ANR	1896507	OrExpression	! node -> children || ! node -> parent || node -> children -> next || node -> children -> children || node -> parent -> children == node -> parent -> last		1896259	1		||			
ANR	1896508	UnaryOperationExpression	! node -> children		1896259	0					
ANR	1896509	UnaryOperator	!		1896259	0					
ANR	1896510	PtrMemberAccess	node -> children		1896259	1					
ANR	1896511	Identifier	node		1896259	0					
ANR	1896512	Identifier	children		1896259	1					
ANR	1896513	OrExpression	! node -> parent || node -> children -> next || node -> children -> children || node -> parent -> children == node -> parent -> last		1896259	1		||			
ANR	1896514	UnaryOperationExpression	! node -> parent		1896259	0					
ANR	1896515	UnaryOperator	!		1896259	0					
ANR	1896516	PtrMemberAccess	node -> parent		1896259	1					
ANR	1896517	Identifier	node		1896259	0					
ANR	1896518	Identifier	parent		1896259	1					
ANR	1896519	OrExpression	node -> children -> next || node -> children -> children || node -> parent -> children == node -> parent -> last		1896259	1		||			
ANR	1896520	PtrMemberAccess	node -> children -> next		1896259	0					
ANR	1896521	PtrMemberAccess	node -> children		1896259	0					
ANR	1896522	Identifier	node		1896259	0					
ANR	1896523	Identifier	children		1896259	1					
ANR	1896524	Identifier	next		1896259	1					
ANR	1896525	OrExpression	node -> children -> children || node -> parent -> children == node -> parent -> last		1896259	1		||			
ANR	1896526	PtrMemberAccess	node -> children -> children		1896259	0					
ANR	1896527	PtrMemberAccess	node -> children		1896259	0					
ANR	1896528	Identifier	node		1896259	0					
ANR	1896529	Identifier	children		1896259	1					
ANR	1896530	Identifier	children		1896259	1					
ANR	1896531	EqualityExpression	node -> parent -> children == node -> parent -> last		1896259	1		==			
ANR	1896532	PtrMemberAccess	node -> parent -> children		1896259	0					
ANR	1896533	PtrMemberAccess	node -> parent		1896259	0					
ANR	1896534	Identifier	node		1896259	0					
ANR	1896535	Identifier	parent		1896259	1					
ANR	1896536	Identifier	children		1896259	1					
ANR	1896537	PtrMemberAccess	node -> parent -> last		1896259	1					
ANR	1896538	PtrMemberAccess	node -> parent		1896259	0					
ANR	1896539	Identifier	node		1896259	0					
ANR	1896540	Identifier	parent		1896259	1					
ANR	1896541	Identifier	last		1896259	1					
ANR	1896542	CompoundStatement		38:176:1126:1126	1896259	1					
ANR	1896543	ExpressionStatement	node = node -> children	1067:4:29138:29159	1896259	0	True				
ANR	1896544	AssignmentExpression	node = node -> children		1896259	0		=			
ANR	1896545	Identifier	node		1896259	0					
ANR	1896546	PtrMemberAccess	node -> children		1896259	1					
ANR	1896547	Identifier	node		1896259	0					
ANR	1896548	Identifier	children		1896259	1					
ANR	1896549	ElseStatement	else		1896259	0					
ANR	1896550	CompoundStatement		40:10:1165:1165	1896259	0					
ANR	1896551	ExpressionStatement	"ZVAL_COPY_VALUE ( & iter_data , & sxe -> iter . data )"	1069:4:29177:29221	1896259	0	True				
ANR	1896552	CallExpression	"ZVAL_COPY_VALUE ( & iter_data , & sxe -> iter . data )"		1896259	0					
ANR	1896553	Callee	ZVAL_COPY_VALUE		1896259	0					
ANR	1896554	Identifier	ZVAL_COPY_VALUE		1896259	0					
ANR	1896555	ArgumentList	& iter_data		1896259	1					
ANR	1896556	Argument	& iter_data		1896259	0					
ANR	1896557	UnaryOperationExpression	& iter_data		1896259	0					
ANR	1896558	UnaryOperator	&		1896259	0					
ANR	1896559	Identifier	iter_data		1896259	1					
ANR	1896560	Argument	& sxe -> iter . data		1896259	1					
ANR	1896561	UnaryOperationExpression	& sxe -> iter . data		1896259	0					
ANR	1896562	UnaryOperator	&		1896259	0					
ANR	1896563	MemberAccess	sxe -> iter . data		1896259	1					
ANR	1896564	PtrMemberAccess	sxe -> iter		1896259	0					
ANR	1896565	Identifier	sxe		1896259	0					
ANR	1896566	Identifier	iter		1896259	1					
ANR	1896567	Identifier	data		1896259	1					
ANR	1896568	ExpressionStatement	ZVAL_UNDEF ( & sxe -> iter . data )	1070:4:29227:29254	1896259	1	True				
ANR	1896569	CallExpression	ZVAL_UNDEF ( & sxe -> iter . data )		1896259	0					
ANR	1896570	Callee	ZVAL_UNDEF		1896259	0					
ANR	1896571	Identifier	ZVAL_UNDEF		1896259	0					
ANR	1896572	ArgumentList	& sxe -> iter . data		1896259	1					
ANR	1896573	Argument	& sxe -> iter . data		1896259	0					
ANR	1896574	UnaryOperationExpression	& sxe -> iter . data		1896259	0					
ANR	1896575	UnaryOperator	&		1896259	0					
ANR	1896576	MemberAccess	sxe -> iter . data		1896259	1					
ANR	1896577	PtrMemberAccess	sxe -> iter		1896259	0					
ANR	1896578	Identifier	sxe		1896259	0					
ANR	1896579	Identifier	iter		1896259	1					
ANR	1896580	Identifier	data		1896259	1					
ANR	1896581	ExpressionStatement	"node = php_sxe_reset_iterator ( sxe , 0 )"	1071:4:29260:29297	1896259	2	True				
ANR	1896582	AssignmentExpression	"node = php_sxe_reset_iterator ( sxe , 0 )"		1896259	0		=			
ANR	1896583	Identifier	node		1896259	0					
ANR	1896584	CallExpression	"php_sxe_reset_iterator ( sxe , 0 )"		1896259	1					
ANR	1896585	Callee	php_sxe_reset_iterator		1896259	0					
ANR	1896586	Identifier	php_sxe_reset_iterator		1896259	0					
ANR	1896587	ArgumentList	sxe		1896259	1					
ANR	1896588	Argument	sxe		1896259	0					
ANR	1896589	Identifier	sxe		1896259	0					
ANR	1896590	Argument	0		1896259	1					
ANR	1896591	PrimaryExpression	0		1896259	0					
ANR	1896592	WhileStatement	while ( node )		1896259	1					
ANR	1896593	Condition	node	1075:9:29318:29321	1896259	0	True				
ANR	1896594	Identifier	node		1896259	0					
ANR	1896595	CompoundStatement		47:15:1318:1318	1896259	1					
ANR	1896596	IfStatement	if ( node -> children != NULL || node -> prev != NULL || node -> next != NULL )		1896259	0					
ANR	1896597	Condition	node -> children != NULL || node -> prev != NULL || node -> next != NULL	1076:7:29333:29398	1896259	0	True				
ANR	1896598	OrExpression	node -> children != NULL || node -> prev != NULL || node -> next != NULL		1896259	0		||			
ANR	1896599	EqualityExpression	node -> children != NULL		1896259	0		!=			
ANR	1896600	PtrMemberAccess	node -> children		1896259	0					
ANR	1896601	Identifier	node		1896259	0					
ANR	1896602	Identifier	children		1896259	1					
ANR	1896603	Identifier	NULL		1896259	1					
ANR	1896604	OrExpression	node -> prev != NULL || node -> next != NULL		1896259	1		||			
ANR	1896605	EqualityExpression	node -> prev != NULL		1896259	0		!=			
ANR	1896606	PtrMemberAccess	node -> prev		1896259	0					
ANR	1896607	Identifier	node		1896259	0					
ANR	1896608	Identifier	prev		1896259	1					
ANR	1896609	Identifier	NULL		1896259	1					
ANR	1896610	EqualityExpression	node -> next != NULL		1896259	1		!=			
ANR	1896611	PtrMemberAccess	node -> next		1896259	0					
ANR	1896612	Identifier	node		1896259	0					
ANR	1896613	Identifier	next		1896259	1					
ANR	1896614	Identifier	NULL		1896259	1					
ANR	1896615	CompoundStatement		48:75:1395:1395	1896259	1					
ANR	1896616	ExpressionStatement	SKIP_TEXT ( node )	1077:4:29407:29422	1896259	0	True				
ANR	1896617	CallExpression	SKIP_TEXT ( node )		1896259	0					
ANR	1896618	Callee	SKIP_TEXT		1896259	0					
ANR	1896619	Identifier	SKIP_TEXT		1896259	0					
ANR	1896620	ArgumentList	node		1896259	1					
ANR	1896621	Argument	node		1896259	0					
ANR	1896622	Identifier	node		1896259	0					
ANR	1896623	ElseStatement	else		1896259	0					
ANR	1896624	CompoundStatement		50:10:1428:1428	1896259	0					
ANR	1896625	IfStatement	if ( node -> type == XML_TEXT_NODE )		1896259	0					
ANR	1896626	Condition	node -> type == XML_TEXT_NODE	1079:8:29444:29470	1896259	0	True				
ANR	1896627	EqualityExpression	node -> type == XML_TEXT_NODE		1896259	0		==			
ANR	1896628	PtrMemberAccess	node -> type		1896259	0					
ANR	1896629	Identifier	node		1896259	0					
ANR	1896630	Identifier	type		1896259	1					
ANR	1896631	Identifier	XML_TEXT_NODE		1896259	1					
ANR	1896632	CompoundStatement		52:5:1474:1508	1896259	1					
ANR	1896633	IdentifierDeclStatement	const xmlChar * cur = node -> content ;	1080:5:29480:29514	1896259	0	True				
ANR	1896634	IdentifierDecl	* cur = node -> content		1896259	0					
ANR	1896635	IdentifierDeclType	const xmlChar *		1896259	0					
ANR	1896636	Identifier	cur		1896259	1					
ANR	1896637	AssignmentExpression	* cur = node -> content		1896259	2		=			
ANR	1896638	Identifier	cur		1896259	0					
ANR	1896639	PtrMemberAccess	node -> content		1896259	1					
ANR	1896640	Identifier	node		1896259	0					
ANR	1896641	Identifier	content		1896259	1					
ANR	1896642	IfStatement	if ( * cur != 0 )		1896259	1					
ANR	1896643	Condition	* cur != 0	1081:9:29525:29533	1896259	0	True				
ANR	1896644	EqualityExpression	* cur != 0		1896259	0		!=			
ANR	1896645	UnaryOperationExpression	* cur		1896259	0					
ANR	1896646	UnaryOperator	*		1896259	0					
ANR	1896647	Identifier	cur		1896259	1					
ANR	1896648	PrimaryExpression	0		1896259	1					
ANR	1896649	CompoundStatement		53:20:1530:1530	1896259	1					
ANR	1896650	ExpressionStatement	is_empty = 0	1082:6:29544:29556	1896259	0	True				
ANR	1896651	AssignmentExpression	is_empty = 0		1896259	0		=			
ANR	1896652	Identifier	is_empty		1896259	0					
ANR	1896653	PrimaryExpression	0		1896259	1					
ANR	1896654	BreakStatement	break ;	1083:6:29564:29569	1896259	1	True				
ANR	1896655	GotoStatement	goto next_iter ;	1085:5:29583:29597	1896259	2	True				
ANR	1896656	Identifier	next_iter		1896259	0					
ANR	1896657	IfStatement	"if ( node -> type == XML_ELEMENT_NODE && ( ! match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix ) ) )"		1896259	1					
ANR	1896658	Condition	"node -> type == XML_ELEMENT_NODE && ( ! match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix ) )"	1089:7:29618:29714	1896259	0	True				
ANR	1896659	AndExpression	"node -> type == XML_ELEMENT_NODE && ( ! match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix ) )"		1896259	0		&&			
ANR	1896660	EqualityExpression	node -> type == XML_ELEMENT_NODE		1896259	0		==			
ANR	1896661	PtrMemberAccess	node -> type		1896259	0					
ANR	1896662	Identifier	node		1896259	0					
ANR	1896663	Identifier	type		1896259	1					
ANR	1896664	Identifier	XML_ELEMENT_NODE		1896259	1					
ANR	1896665	UnaryOperationExpression	"! match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1896259	1					
ANR	1896666	UnaryOperator	!		1896259	0					
ANR	1896667	CallExpression	"match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1896259	1					
ANR	1896668	Callee	match_ns		1896259	0					
ANR	1896669	Identifier	match_ns		1896259	0					
ANR	1896670	ArgumentList	sxe		1896259	1					
ANR	1896671	Argument	sxe		1896259	0					
ANR	1896672	Identifier	sxe		1896259	0					
ANR	1896673	Argument	node		1896259	1					
ANR	1896674	Identifier	node		1896259	0					
ANR	1896675	Argument	sxe -> iter . nsprefix		1896259	2					
ANR	1896676	MemberAccess	sxe -> iter . nsprefix		1896259	0					
ANR	1896677	PtrMemberAccess	sxe -> iter		1896259	0					
ANR	1896678	Identifier	sxe		1896259	0					
ANR	1896679	Identifier	iter		1896259	1					
ANR	1896680	Identifier	nsprefix		1896259	1					
ANR	1896681	Argument	sxe -> iter . isprefix		1896259	3					
ANR	1896682	MemberAccess	sxe -> iter . isprefix		1896259	0					
ANR	1896683	PtrMemberAccess	sxe -> iter		1896259	0					
ANR	1896684	Identifier	sxe		1896259	0					
ANR	1896685	Identifier	iter		1896259	1					
ANR	1896686	Identifier	isprefix		1896259	1					
ANR	1896687	CompoundStatement		61:106:1711:1711	1896259	1					
ANR	1896688	GotoStatement	goto next_iter ;	1090:4:29723:29737	1896259	0	True				
ANR	1896689	Identifier	next_iter		1896259	0					
ANR	1896690	IfStatement	if ( ! node -> name )		1896259	2					
ANR	1896691	Condition	! node -> name	1093:7:29752:29762	1896259	0	True				
ANR	1896692	UnaryOperationExpression	! node -> name		1896259	0					
ANR	1896693	UnaryOperator	!		1896259	0					
ANR	1896694	PtrMemberAccess	node -> name		1896259	1					
ANR	1896695	Identifier	node		1896259	0					
ANR	1896696	Identifier	name		1896259	1					
ANR	1896697	CompoundStatement		65:20:1759:1759	1896259	1					
ANR	1896698	GotoStatement	goto next_iter ;	1094:4:29771:29785	1896259	0	True				
ANR	1896699	Identifier	next_iter		1896259	0					
ANR	1896700	ExpressionStatement	is_empty = 0	1097:3:29796:29808	1896259	3	True				
ANR	1896701	AssignmentExpression	is_empty = 0		1896259	0		=			
ANR	1896702	Identifier	is_empty		1896259	0					
ANR	1896703	PrimaryExpression	0		1896259	1					
ANR	1896704	BreakStatement	break ;	1098:3:29813:29818	1896259	4	True				
ANR	1896705	Label	next_iter :	1099:0:29820:29829	1896259	5	True				
ANR	1896706	Identifier	next_iter		1896259	0					
ANR	1896707	IfStatement	if ( ! Z_ISUNDEF ( iter_data ) )		1896259	6					
ANR	1896708	Condition	! Z_ISUNDEF ( iter_data )	1100:7:29838:29858	1896259	0	True				
ANR	1896709	UnaryOperationExpression	! Z_ISUNDEF ( iter_data )		1896259	0					
ANR	1896710	UnaryOperator	!		1896259	0					
ANR	1896711	CallExpression	Z_ISUNDEF ( iter_data )		1896259	1					
ANR	1896712	Callee	Z_ISUNDEF		1896259	0					
ANR	1896713	Identifier	Z_ISUNDEF		1896259	0					
ANR	1896714	ArgumentList	iter_data		1896259	1					
ANR	1896715	Argument	iter_data		1896259	0					
ANR	1896716	Identifier	iter_data		1896259	0					
ANR	1896717	CompoundStatement		72:30:1855:1855	1896259	1					
ANR	1896718	ExpressionStatement	"node = php_sxe_iterator_fetch ( sxe , node -> next , 0 )"	1101:4:29867:29916	1896259	0	True				
ANR	1896719	AssignmentExpression	"node = php_sxe_iterator_fetch ( sxe , node -> next , 0 )"		1896259	0		=			
ANR	1896720	Identifier	node		1896259	0					
ANR	1896721	CallExpression	"php_sxe_iterator_fetch ( sxe , node -> next , 0 )"		1896259	1					
ANR	1896722	Callee	php_sxe_iterator_fetch		1896259	0					
ANR	1896723	Identifier	php_sxe_iterator_fetch		1896259	0					
ANR	1896724	ArgumentList	sxe		1896259	1					
ANR	1896725	Argument	sxe		1896259	0					
ANR	1896726	Identifier	sxe		1896259	0					
ANR	1896727	Argument	node -> next		1896259	1					
ANR	1896728	PtrMemberAccess	node -> next		1896259	0					
ANR	1896729	Identifier	node		1896259	0					
ANR	1896730	Identifier	next		1896259	1					
ANR	1896731	Argument	0		1896259	2					
ANR	1896732	PrimaryExpression	0		1896259	0					
ANR	1896733	ElseStatement	else		1896259	0					
ANR	1896734	CompoundStatement		74:10:1922:1922	1896259	0					
ANR	1896735	ExpressionStatement	node = node -> next	1103:4:29934:29951	1896259	0	True				
ANR	1896736	AssignmentExpression	node = node -> next		1896259	0		=			
ANR	1896737	Identifier	node		1896259	0					
ANR	1896738	PtrMemberAccess	node -> next		1896259	1					
ANR	1896739	Identifier	node		1896259	0					
ANR	1896740	Identifier	next		1896259	1					
ANR	1896741	IfStatement	if ( ! Z_ISUNDEF ( iter_data ) )		1896259	16					
ANR	1896742	Condition	! Z_ISUNDEF ( iter_data )	1108:5:29971:29991	1896259	0	True				
ANR	1896743	UnaryOperationExpression	! Z_ISUNDEF ( iter_data )		1896259	0					
ANR	1896744	UnaryOperator	!		1896259	0					
ANR	1896745	CallExpression	Z_ISUNDEF ( iter_data )		1896259	1					
ANR	1896746	Callee	Z_ISUNDEF		1896259	0					
ANR	1896747	Identifier	Z_ISUNDEF		1896259	0					
ANR	1896748	ArgumentList	iter_data		1896259	1					
ANR	1896749	Argument	iter_data		1896259	0					
ANR	1896750	Identifier	iter_data		1896259	0					
ANR	1896751	CompoundStatement		80:28:1988:1988	1896259	1					
ANR	1896752	IfStatement	if ( ! Z_ISUNDEF ( sxe -> iter . data ) )		1896259	0					
ANR	1896753	Condition	! Z_ISUNDEF ( sxe -> iter . data )	1109:6:30002:30027	1896259	0	True				
ANR	1896754	UnaryOperationExpression	! Z_ISUNDEF ( sxe -> iter . data )		1896259	0					
ANR	1896755	UnaryOperator	!		1896259	0					
ANR	1896756	CallExpression	Z_ISUNDEF ( sxe -> iter . data )		1896259	1					
ANR	1896757	Callee	Z_ISUNDEF		1896259	0					
ANR	1896758	Identifier	Z_ISUNDEF		1896259	0					
ANR	1896759	ArgumentList	sxe -> iter . data		1896259	1					
ANR	1896760	Argument	sxe -> iter . data		1896259	0					
ANR	1896761	MemberAccess	sxe -> iter . data		1896259	0					
ANR	1896762	PtrMemberAccess	sxe -> iter		1896259	0					
ANR	1896763	Identifier	sxe		1896259	0					
ANR	1896764	Identifier	iter		1896259	1					
ANR	1896765	Identifier	data		1896259	1					
ANR	1896766	CompoundStatement		81:34:2024:2024	1896259	1					
ANR	1896767	ExpressionStatement	zval_ptr_dtor ( & sxe -> iter . data )	1110:3:30035:30065	1896259	0	True				
ANR	1896768	CallExpression	zval_ptr_dtor ( & sxe -> iter . data )		1896259	0					
ANR	1896769	Callee	zval_ptr_dtor		1896259	0					
ANR	1896770	Identifier	zval_ptr_dtor		1896259	0					
ANR	1896771	ArgumentList	& sxe -> iter . data		1896259	1					
ANR	1896772	Argument	& sxe -> iter . data		1896259	0					
ANR	1896773	UnaryOperationExpression	& sxe -> iter . data		1896259	0					
ANR	1896774	UnaryOperator	&		1896259	0					
ANR	1896775	MemberAccess	sxe -> iter . data		1896259	1					
ANR	1896776	PtrMemberAccess	sxe -> iter		1896259	0					
ANR	1896777	Identifier	sxe		1896259	0					
ANR	1896778	Identifier	iter		1896259	1					
ANR	1896779	Identifier	data		1896259	1					
ANR	1896780	ExpressionStatement	"ZVAL_COPY_VALUE ( & sxe -> iter . data , & iter_data )"	1112:2:30073:30117	1896259	1	True				
ANR	1896781	CallExpression	"ZVAL_COPY_VALUE ( & sxe -> iter . data , & iter_data )"		1896259	0					
ANR	1896782	Callee	ZVAL_COPY_VALUE		1896259	0					
ANR	1896783	Identifier	ZVAL_COPY_VALUE		1896259	0					
ANR	1896784	ArgumentList	& sxe -> iter . data		1896259	1					
ANR	1896785	Argument	& sxe -> iter . data		1896259	0					
ANR	1896786	UnaryOperationExpression	& sxe -> iter . data		1896259	0					
ANR	1896787	UnaryOperator	&		1896259	0					
ANR	1896788	MemberAccess	sxe -> iter . data		1896259	1					
ANR	1896789	PtrMemberAccess	sxe -> iter		1896259	0					
ANR	1896790	Identifier	sxe		1896259	0					
ANR	1896791	Identifier	iter		1896259	1					
ANR	1896792	Identifier	data		1896259	1					
ANR	1896793	Argument	& iter_data		1896259	1					
ANR	1896794	UnaryOperationExpression	& iter_data		1896259	0					
ANR	1896795	UnaryOperator	&		1896259	0					
ANR	1896796	Identifier	iter_data		1896259	1					
ANR	1896797	ReturnStatement	return is_empty ;	1115:1:30124:30139	1896259	17	True				
ANR	1896798	Identifier	is_empty		1896259	0					
ANR	1896799	ReturnType	static int		1896259	1					
ANR	1896800	Identifier	sxe_prop_is_empty		1896259	2					
ANR	1896801	ParameterList	zval * object		1896259	3					
ANR	1896802	Parameter	zval * object	1028:29:27981:27992	1896259	0	True				
ANR	1896803	ParameterType	zval *		1896259	0					
ANR	1896804	Identifier	object		1896259	1					
ANR	1896805	CFGEntryNode	ENTRY		1896259		True				
ANR	1896806	CFGExitNode	EXIT		1896259		True				
ANR	1896807	Symbol	& sxe -> iter		1896259						
ANR	1896808	Symbol	XML_ELEMENT_NODE		1896259						
ANR	1896809	Symbol	iter_data		1896259						
ANR	1896810	Symbol	XML_TEXT_NODE		1896259						
ANR	1896811	Symbol	node -> children -> children		1896259						
ANR	1896812	Symbol	* cur		1896259						
ANR	1896813	Symbol	* node		1896259						
ANR	1896814	Symbol	node -> children -> next		1896259						
ANR	1896815	Symbol	sxe		1896259						
ANR	1896816	Symbol	NULL		1896259						
ANR	1896817	Symbol	xmlStrcmp		1896259						
ANR	1896818	Symbol	test		1896259						
ANR	1896819	Symbol	sxe -> iter . type		1896259						
ANR	1896820	Symbol	sxe -> iter		1896259						
ANR	1896821	Symbol	node		1896259						
ANR	1896822	Symbol	SXE_ITER_NONE		1896259						
ANR	1896823	Symbol	* * node		1896259						
ANR	1896824	Symbol	node -> prev		1896259						
ANR	1896825	Symbol	php_sxe_iterator_fetch		1896259						
ANR	1896826	Symbol	sxe -> iter . nsprefix		1896259						
ANR	1896827	Symbol	node -> parent		1896259						
ANR	1896828	Symbol	node -> type		1896259						
ANR	1896829	Symbol	* attr		1896259						
ANR	1896830	Symbol	Z_SXEOBJ_P		1896259						
ANR	1896831	Symbol	node -> children		1896259						
ANR	1896832	Symbol	object		1896259						
ANR	1896833	Symbol	attr -> next		1896259						
ANR	1896834	Symbol	cur		1896259						
ANR	1896835	Symbol	SXE_ITER_ATTRLIST		1896259						
ANR	1896836	Symbol	SXE_ITER_CHILD		1896259						
ANR	1896837	Symbol	* sxe		1896259						
ANR	1896838	Symbol	match_ns		1896259						
ANR	1896839	Symbol	node -> content		1896259						
ANR	1896840	Symbol	SXE_ITER_ELEMENT		1896259						
ANR	1896841	Symbol	sxe -> iter . data		1896259						
ANR	1896842	Symbol	XML_ENTITY_DECL		1896259						
ANR	1896843	Symbol	* node -> parent		1896259						
ANR	1896844	Symbol	attr		1896259						
ANR	1896845	Symbol	& sxe -> iter . data		1896259						
ANR	1896846	Symbol	is_empty		1896259						
ANR	1896847	Symbol	* node -> children		1896259						
ANR	1896848	Symbol	php_sxe_get_first_node		1896259						
ANR	1896849	Symbol	node -> parent -> last		1896259						
ANR	1896850	Symbol	Z_ISUNDEF		1896259						
ANR	1896851	Symbol	node -> properties		1896259						
ANR	1896852	Symbol	sxe -> iter . isprefix		1896259						
ANR	1896853	Symbol	node -> next		1896259						
ANR	1896854	Symbol	node -> parent -> children		1896259						
ANR	1896855	Symbol	sxe -> iter . name		1896259						
ANR	1896856	Symbol	php_sxe_reset_iterator		1896259						
ANR	1896857	Symbol	node -> name		1896259						
ANR	1896858	Symbol	& iter_data		1896259						
ANR	1896859	Symbol	attr -> name		1896259						
ANR	1896860	Symbol	XML_ATTRIBUTE_NODE		1896259						
ANR	1896861	Function	sxe_get_prop_hash	1119:0:30154:33636							
ANR	1896862	FunctionDef	"sxe_get_prop_hash (zval * object , int is_debug)"		1896861	0					
ANR	1896863	CompoundStatement		1120:0:30228:33636	1896861	0					
ANR	1896864	IdentifierDeclStatement	zval value ;	1121:1:30231:30252	1896861	0	True				
ANR	1896865	IdentifierDecl	value		1896861	0					
ANR	1896866	IdentifierDeclType	zval		1896861	0					
ANR	1896867	Identifier	value		1896861	1					
ANR	1896868	IdentifierDeclStatement	zval zattr ;	1122:1:30255:30276	1896861	1	True				
ANR	1896869	IdentifierDecl	zattr		1896861	0					
ANR	1896870	IdentifierDeclType	zval		1896861	0					
ANR	1896871	Identifier	zattr		1896861	1					
ANR	1896872	IdentifierDeclStatement	HashTable * rv ;	1123:1:30279:30298	1896861	2	True				
ANR	1896873	IdentifierDecl	* rv		1896861	0					
ANR	1896874	IdentifierDeclType	HashTable *		1896861	0					
ANR	1896875	Identifier	rv		1896861	1					
ANR	1896876	IdentifierDeclStatement	php_sxe_object * sxe ;	1124:1:30301:30321	1896861	3	True				
ANR	1896877	IdentifierDecl	* sxe		1896861	0					
ANR	1896878	IdentifierDeclType	php_sxe_object *		1896861	0					
ANR	1896879	Identifier	sxe		1896861	1					
ANR	1896880	IdentifierDeclStatement	char * name ;	1125:1:30324:30345	1896861	4	True				
ANR	1896881	IdentifierDecl	* name		1896861	0					
ANR	1896882	IdentifierDeclType	char *		1896861	0					
ANR	1896883	Identifier	name		1896861	1					
ANR	1896884	IdentifierDeclStatement	xmlNodePtr node ;	1126:1:30348:30369	1896861	5	True				
ANR	1896885	IdentifierDecl	node		1896861	0					
ANR	1896886	IdentifierDeclType	xmlNodePtr		1896861	0					
ANR	1896887	Identifier	node		1896861	1					
ANR	1896888	IdentifierDeclStatement	xmlAttrPtr attr ;	1127:1:30372:30393	1896861	6	True				
ANR	1896889	IdentifierDecl	attr		1896861	0					
ANR	1896890	IdentifierDeclType	xmlAttrPtr		1896861	0					
ANR	1896891	Identifier	attr		1896861	1					
ANR	1896892	IdentifierDeclStatement	int namelen ;	1128:1:30396:30420	1896861	7	True				
ANR	1896893	IdentifierDecl	namelen		1896861	0					
ANR	1896894	IdentifierDeclType	int		1896861	0					
ANR	1896895	Identifier	namelen		1896861	1					
ANR	1896896	IdentifierDeclStatement	int test ;	1129:1:30423:30444	1896861	8	True				
ANR	1896897	IdentifierDecl	test		1896861	0					
ANR	1896898	IdentifierDeclType	int		1896861	0					
ANR	1896899	Identifier	test		1896861	1					
ANR	1896900	IdentifierDeclStatement	char use_iter ;	1130:1:30447:30465	1896861	9	True				
ANR	1896901	IdentifierDecl	use_iter		1896861	0					
ANR	1896902	IdentifierDeclType	char		1896861	0					
ANR	1896903	Identifier	use_iter		1896861	1					
ANR	1896904	IdentifierDeclStatement	zval iter_data ;	1131:1:30468:30494	1896861	10	True				
ANR	1896905	IdentifierDecl	iter_data		1896861	0					
ANR	1896906	IdentifierDeclType	zval		1896861	0					
ANR	1896907	Identifier	iter_data		1896861	1					
ANR	1896908	ExpressionStatement	use_iter = 0	1133:1:30498:30510	1896861	11	True				
ANR	1896909	AssignmentExpression	use_iter = 0		1896861	0		=			
ANR	1896910	Identifier	use_iter		1896861	0					
ANR	1896911	PrimaryExpression	0		1896861	1					
ANR	1896912	ExpressionStatement	sxe = Z_SXEOBJ_P ( object )	1135:1:30514:30538	1896861	12	True				
ANR	1896913	AssignmentExpression	sxe = Z_SXEOBJ_P ( object )		1896861	0		=			
ANR	1896914	Identifier	sxe		1896861	0					
ANR	1896915	CallExpression	Z_SXEOBJ_P ( object )		1896861	1					
ANR	1896916	Callee	Z_SXEOBJ_P		1896861	0					
ANR	1896917	Identifier	Z_SXEOBJ_P		1896861	0					
ANR	1896918	ArgumentList	object		1896861	1					
ANR	1896919	Argument	object		1896861	0					
ANR	1896920	Identifier	object		1896861	0					
ANR	1896921	IfStatement	if ( is_debug )		1896861	13					
ANR	1896922	Condition	is_debug	1137:5:30546:30553	1896861	0	True				
ANR	1896923	Identifier	is_debug		1896861	0					
ANR	1896924	CompoundStatement		18:15:327:327	1896861	1					
ANR	1896925	ExpressionStatement	ALLOC_HASHTABLE ( rv )	1138:2:30560:30579	1896861	0	True				
ANR	1896926	CallExpression	ALLOC_HASHTABLE ( rv )		1896861	0					
ANR	1896927	Callee	ALLOC_HASHTABLE		1896861	0					
ANR	1896928	Identifier	ALLOC_HASHTABLE		1896861	0					
ANR	1896929	ArgumentList	rv		1896861	1					
ANR	1896930	Argument	rv		1896861	0					
ANR	1896931	Identifier	rv		1896861	0					
ANR	1896932	ExpressionStatement	"zend_hash_init ( rv , 0 , NULL , ZVAL_PTR_DTOR , 0 )"	1139:2:30583:30628	1896861	1	True				
ANR	1896933	CallExpression	"zend_hash_init ( rv , 0 , NULL , ZVAL_PTR_DTOR , 0 )"		1896861	0					
ANR	1896934	Callee	zend_hash_init		1896861	0					
ANR	1896935	Identifier	zend_hash_init		1896861	0					
ANR	1896936	ArgumentList	rv		1896861	1					
ANR	1896937	Argument	rv		1896861	0					
ANR	1896938	Identifier	rv		1896861	0					
ANR	1896939	Argument	0		1896861	1					
ANR	1896940	PrimaryExpression	0		1896861	0					
ANR	1896941	Argument	NULL		1896861	2					
ANR	1896942	Identifier	NULL		1896861	0					
ANR	1896943	Argument	ZVAL_PTR_DTOR		1896861	3					
ANR	1896944	Identifier	ZVAL_PTR_DTOR		1896861	0					
ANR	1896945	Argument	0		1896861	4					
ANR	1896946	PrimaryExpression	0		1896861	0					
ANR	1896947	ElseStatement	else		1896861	0					
ANR	1896948	IfStatement	if ( sxe -> properties )		1896861	0					
ANR	1896949	Condition	sxe -> properties	1140:12:30642:30656	1896861	0	True				
ANR	1896950	PtrMemberAccess	sxe -> properties		1896861	0					
ANR	1896951	Identifier	sxe		1896861	0					
ANR	1896952	Identifier	properties		1896861	1					
ANR	1896953	CompoundStatement		21:29:430:430	1896861	1					
ANR	1896954	ExpressionStatement	zend_hash_clean ( sxe -> properties )	1141:2:30663:30695	1896861	0	True				
ANR	1896955	CallExpression	zend_hash_clean ( sxe -> properties )		1896861	0					
ANR	1896956	Callee	zend_hash_clean		1896861	0					
ANR	1896957	Identifier	zend_hash_clean		1896861	0					
ANR	1896958	ArgumentList	sxe -> properties		1896861	1					
ANR	1896959	Argument	sxe -> properties		1896861	0					
ANR	1896960	PtrMemberAccess	sxe -> properties		1896861	0					
ANR	1896961	Identifier	sxe		1896861	0					
ANR	1896962	Identifier	properties		1896861	1					
ANR	1896963	ExpressionStatement	rv = sxe -> properties	1142:2:30699:30719	1896861	1	True				
ANR	1896964	AssignmentExpression	rv = sxe -> properties		1896861	0		=			
ANR	1896965	Identifier	rv		1896861	0					
ANR	1896966	PtrMemberAccess	sxe -> properties		1896861	1					
ANR	1896967	Identifier	sxe		1896861	0					
ANR	1896968	Identifier	properties		1896861	1					
ANR	1896969	ElseStatement	else		1896861	0					
ANR	1896970	CompoundStatement		24:8:500:500	1896861	0					
ANR	1896971	ExpressionStatement	ALLOC_HASHTABLE ( rv )	1144:2:30733:30752	1896861	0	True				
ANR	1896972	CallExpression	ALLOC_HASHTABLE ( rv )		1896861	0					
ANR	1896973	Callee	ALLOC_HASHTABLE		1896861	0					
ANR	1896974	Identifier	ALLOC_HASHTABLE		1896861	0					
ANR	1896975	ArgumentList	rv		1896861	1					
ANR	1896976	Argument	rv		1896861	0					
ANR	1896977	Identifier	rv		1896861	0					
ANR	1896978	ExpressionStatement	"zend_hash_init ( rv , 0 , NULL , ZVAL_PTR_DTOR , 0 )"	1145:2:30756:30801	1896861	1	True				
ANR	1896979	CallExpression	"zend_hash_init ( rv , 0 , NULL , ZVAL_PTR_DTOR , 0 )"		1896861	0					
ANR	1896980	Callee	zend_hash_init		1896861	0					
ANR	1896981	Identifier	zend_hash_init		1896861	0					
ANR	1896982	ArgumentList	rv		1896861	1					
ANR	1896983	Argument	rv		1896861	0					
ANR	1896984	Identifier	rv		1896861	0					
ANR	1896985	Argument	0		1896861	1					
ANR	1896986	PrimaryExpression	0		1896861	0					
ANR	1896987	Argument	NULL		1896861	2					
ANR	1896988	Identifier	NULL		1896861	0					
ANR	1896989	Argument	ZVAL_PTR_DTOR		1896861	3					
ANR	1896990	Identifier	ZVAL_PTR_DTOR		1896861	0					
ANR	1896991	Argument	0		1896861	4					
ANR	1896992	PrimaryExpression	0		1896861	0					
ANR	1896993	ExpressionStatement	sxe -> properties = rv	1146:2:30805:30825	1896861	2	True				
ANR	1896994	AssignmentExpression	sxe -> properties = rv		1896861	0		=			
ANR	1896995	PtrMemberAccess	sxe -> properties		1896861	0					
ANR	1896996	Identifier	sxe		1896861	0					
ANR	1896997	Identifier	properties		1896861	1					
ANR	1896998	Identifier	rv		1896861	1					
ANR	1896999	ExpressionStatement	"GET_NODE ( sxe , node )"	1149:1:30832:30851	1896861	14	True				
ANR	1897000	CallExpression	"GET_NODE ( sxe , node )"		1896861	0					
ANR	1897001	Callee	GET_NODE		1896861	0					
ANR	1897002	Identifier	GET_NODE		1896861	0					
ANR	1897003	ArgumentList	sxe		1896861	1					
ANR	1897004	Argument	sxe		1896861	0					
ANR	1897005	Identifier	sxe		1896861	0					
ANR	1897006	Argument	node		1896861	1					
ANR	1897007	Identifier	node		1896861	0					
ANR	1897008	IfStatement	if ( ! node )		1896861	15					
ANR	1897009	Condition	! node	1150:5:30858:30862	1896861	0	True				
ANR	1897010	UnaryOperationExpression	! node		1896861	0					
ANR	1897011	UnaryOperator	!		1896861	0					
ANR	1897012	Identifier	node		1896861	1					
ANR	1897013	CompoundStatement		31:12:636:636	1896861	1					
ANR	1897014	ReturnStatement	return rv ;	1151:2:30869:30878	1896861	0	True				
ANR	1897015	Identifier	rv		1896861	0					
ANR	1897016	IfStatement	if ( is_debug || sxe -> iter . type != SXE_ITER_CHILD )		1896861	16					
ANR	1897017	Condition	is_debug || sxe -> iter . type != SXE_ITER_CHILD	1153:5:30888:30931	1896861	0	True				
ANR	1897018	OrExpression	is_debug || sxe -> iter . type != SXE_ITER_CHILD		1896861	0		||			
ANR	1897019	Identifier	is_debug		1896861	0					
ANR	1897020	EqualityExpression	sxe -> iter . type != SXE_ITER_CHILD		1896861	1		!=			
ANR	1897021	MemberAccess	sxe -> iter . type		1896861	0					
ANR	1897022	PtrMemberAccess	sxe -> iter		1896861	0					
ANR	1897023	Identifier	sxe		1896861	0					
ANR	1897024	Identifier	iter		1896861	1					
ANR	1897025	Identifier	type		1896861	1					
ANR	1897026	Identifier	SXE_ITER_CHILD		1896861	1					
ANR	1897027	CompoundStatement		34:51:705:705	1896861	1					
ANR	1897028	IfStatement	if ( sxe -> iter . type == SXE_ITER_ELEMENT )		1896861	0					
ANR	1897029	Condition	sxe -> iter . type == SXE_ITER_ELEMENT	1154:6:30942:30975	1896861	0	True				
ANR	1897030	EqualityExpression	sxe -> iter . type == SXE_ITER_ELEMENT		1896861	0		==			
ANR	1897031	MemberAccess	sxe -> iter . type		1896861	0					
ANR	1897032	PtrMemberAccess	sxe -> iter		1896861	0					
ANR	1897033	Identifier	sxe		1896861	0					
ANR	1897034	Identifier	iter		1896861	1					
ANR	1897035	Identifier	type		1896861	1					
ANR	1897036	Identifier	SXE_ITER_ELEMENT		1896861	1					
ANR	1897037	CompoundStatement		35:42:749:749	1896861	1					
ANR	1897038	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , node )"	1155:3:30983:31023	1896861	0	True				
ANR	1897039	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , node )"		1896861	0		=			
ANR	1897040	Identifier	node		1896861	0					
ANR	1897041	CallExpression	"php_sxe_get_first_node ( sxe , node )"		1896861	1					
ANR	1897042	Callee	php_sxe_get_first_node		1896861	0					
ANR	1897043	Identifier	php_sxe_get_first_node		1896861	0					
ANR	1897044	ArgumentList	sxe		1896861	1					
ANR	1897045	Argument	sxe		1896861	0					
ANR	1897046	Identifier	sxe		1896861	0					
ANR	1897047	Argument	node		1896861	1					
ANR	1897048	Identifier	node		1896861	0					
ANR	1897049	IfStatement	if ( ! node || node -> type != XML_ENTITY_DECL )		1896861	1					
ANR	1897050	Condition	! node || node -> type != XML_ENTITY_DECL	1157:6:31035:31072	1896861	0	True				
ANR	1897051	OrExpression	! node || node -> type != XML_ENTITY_DECL		1896861	0		||			
ANR	1897052	UnaryOperationExpression	! node		1896861	0					
ANR	1897053	UnaryOperator	!		1896861	0					
ANR	1897054	Identifier	node		1896861	1					
ANR	1897055	EqualityExpression	node -> type != XML_ENTITY_DECL		1896861	1		!=			
ANR	1897056	PtrMemberAccess	node -> type		1896861	0					
ANR	1897057	Identifier	node		1896861	0					
ANR	1897058	Identifier	type		1896861	1					
ANR	1897059	Identifier	XML_ENTITY_DECL		1896861	1					
ANR	1897060	CompoundStatement		38:46:846:846	1896861	1					
ANR	1897061	ExpressionStatement	attr = node ? ( xmlAttrPtr ) node -> properties : NULL	1158:3:31080:31129	1896861	0	True				
ANR	1897062	AssignmentExpression	attr = node ? ( xmlAttrPtr ) node -> properties : NULL		1896861	0		=			
ANR	1897063	Identifier	attr		1896861	0					
ANR	1897064	ConditionalExpression	node ? ( xmlAttrPtr ) node -> properties : NULL		1896861	1					
ANR	1897065	Condition	node		1896861	0					
ANR	1897066	Identifier	node		1896861	0					
ANR	1897067	CastExpression	( xmlAttrPtr ) node -> properties		1896861	1					
ANR	1897068	CastTarget	xmlAttrPtr		1896861	0					
ANR	1897069	PtrMemberAccess	node -> properties		1896861	1					
ANR	1897070	Identifier	node		1896861	0					
ANR	1897071	Identifier	properties		1896861	1					
ANR	1897072	Identifier	NULL		1896861	2					
ANR	1897073	ExpressionStatement	ZVAL_UNDEF ( & zattr )	1159:3:31134:31152	1896861	1	True				
ANR	1897074	CallExpression	ZVAL_UNDEF ( & zattr )		1896861	0					
ANR	1897075	Callee	ZVAL_UNDEF		1896861	0					
ANR	1897076	Identifier	ZVAL_UNDEF		1896861	0					
ANR	1897077	ArgumentList	& zattr		1896861	1					
ANR	1897078	Argument	& zattr		1896861	0					
ANR	1897079	UnaryOperationExpression	& zattr		1896861	0					
ANR	1897080	UnaryOperator	&		1896861	0					
ANR	1897081	Identifier	zattr		1896861	1					
ANR	1897082	ExpressionStatement	test = sxe -> iter . name && sxe -> iter . type == SXE_ITER_ATTRLIST	1160:3:31157:31217	1896861	2	True				
ANR	1897083	AssignmentExpression	test = sxe -> iter . name && sxe -> iter . type == SXE_ITER_ATTRLIST		1896861	0		=			
ANR	1897084	Identifier	test		1896861	0					
ANR	1897085	AndExpression	sxe -> iter . name && sxe -> iter . type == SXE_ITER_ATTRLIST		1896861	1		&&			
ANR	1897086	MemberAccess	sxe -> iter . name		1896861	0					
ANR	1897087	PtrMemberAccess	sxe -> iter		1896861	0					
ANR	1897088	Identifier	sxe		1896861	0					
ANR	1897089	Identifier	iter		1896861	1					
ANR	1897090	Identifier	name		1896861	1					
ANR	1897091	EqualityExpression	sxe -> iter . type == SXE_ITER_ATTRLIST		1896861	1		==			
ANR	1897092	MemberAccess	sxe -> iter . type		1896861	0					
ANR	1897093	PtrMemberAccess	sxe -> iter		1896861	0					
ANR	1897094	Identifier	sxe		1896861	0					
ANR	1897095	Identifier	iter		1896861	1					
ANR	1897096	Identifier	type		1896861	1					
ANR	1897097	Identifier	SXE_ITER_ATTRLIST		1896861	1					
ANR	1897098	WhileStatement	while ( attr )		1896861	3					
ANR	1897099	Condition	attr	1161:10:31229:31232	1896861	0	True				
ANR	1897100	Identifier	attr		1896861	0					
ANR	1897101	CompoundStatement		42:16:1006:1006	1896861	1					
ANR	1897102	IfStatement	"if ( ( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix ) )"		1896861	0					
ANR	1897103	Condition	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	1162:8:31245:31368	1896861	0	True				
ANR	1897104	AndExpression	"( ! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name ) ) && match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1896861	0		&&			
ANR	1897105	OrExpression	"! test || ! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1896861	0		||			
ANR	1897106	UnaryOperationExpression	! test		1896861	0					
ANR	1897107	UnaryOperator	!		1896861	0					
ANR	1897108	Identifier	test		1896861	1					
ANR	1897109	UnaryOperationExpression	"! xmlStrcmp ( attr -> name , sxe -> iter . name )"		1896861	1					
ANR	1897110	UnaryOperator	!		1896861	0					
ANR	1897111	CallExpression	"xmlStrcmp ( attr -> name , sxe -> iter . name )"		1896861	1					
ANR	1897112	Callee	xmlStrcmp		1896861	0					
ANR	1897113	Identifier	xmlStrcmp		1896861	0					
ANR	1897114	ArgumentList	attr -> name		1896861	1					
ANR	1897115	Argument	attr -> name		1896861	0					
ANR	1897116	PtrMemberAccess	attr -> name		1896861	0					
ANR	1897117	Identifier	attr		1896861	0					
ANR	1897118	Identifier	name		1896861	1					
ANR	1897119	Argument	sxe -> iter . name		1896861	1					
ANR	1897120	MemberAccess	sxe -> iter . name		1896861	0					
ANR	1897121	PtrMemberAccess	sxe -> iter		1896861	0					
ANR	1897122	Identifier	sxe		1896861	0					
ANR	1897123	Identifier	iter		1896861	1					
ANR	1897124	Identifier	name		1896861	1					
ANR	1897125	CallExpression	"match_ns ( sxe , ( xmlNodePtr ) attr , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1896861	1					
ANR	1897126	Callee	match_ns		1896861	0					
ANR	1897127	Identifier	match_ns		1896861	0					
ANR	1897128	ArgumentList	sxe		1896861	1					
ANR	1897129	Argument	sxe		1896861	0					
ANR	1897130	Identifier	sxe		1896861	0					
ANR	1897131	Argument	( xmlNodePtr ) attr		1896861	1					
ANR	1897132	CastExpression	( xmlNodePtr ) attr		1896861	0					
ANR	1897133	CastTarget	xmlNodePtr		1896861	0					
ANR	1897134	Identifier	attr		1896861	1					
ANR	1897135	Argument	sxe -> iter . nsprefix		1896861	2					
ANR	1897136	MemberAccess	sxe -> iter . nsprefix		1896861	0					
ANR	1897137	PtrMemberAccess	sxe -> iter		1896861	0					
ANR	1897138	Identifier	sxe		1896861	0					
ANR	1897139	Identifier	iter		1896861	1					
ANR	1897140	Identifier	nsprefix		1896861	1					
ANR	1897141	Argument	sxe -> iter . isprefix		1896861	3					
ANR	1897142	MemberAccess	sxe -> iter . isprefix		1896861	0					
ANR	1897143	PtrMemberAccess	sxe -> iter		1896861	0					
ANR	1897144	Identifier	sxe		1896861	0					
ANR	1897145	Identifier	iter		1896861	1					
ANR	1897146	Identifier	isprefix		1896861	1					
ANR	1897147	CompoundStatement		43:134:1142:1142	1896861	1					
ANR	1897148	ExpressionStatement	"ZVAL_STR ( & value , sxe_xmlNodeListGetString ( ( xmlDocPtr ) sxe -> document -> ptr , attr -> children , 1 ) )"	1163:5:31378:31471	1896861	0	True				
ANR	1897149	CallExpression	"ZVAL_STR ( & value , sxe_xmlNodeListGetString ( ( xmlDocPtr ) sxe -> document -> ptr , attr -> children , 1 ) )"		1896861	0					
ANR	1897150	Callee	ZVAL_STR		1896861	0					
ANR	1897151	Identifier	ZVAL_STR		1896861	0					
ANR	1897152	ArgumentList	& value		1896861	1					
ANR	1897153	Argument	& value		1896861	0					
ANR	1897154	UnaryOperationExpression	& value		1896861	0					
ANR	1897155	UnaryOperator	&		1896861	0					
ANR	1897156	Identifier	value		1896861	1					
ANR	1897157	Argument	"sxe_xmlNodeListGetString ( ( xmlDocPtr ) sxe -> document -> ptr , attr -> children , 1 )"		1896861	1					
ANR	1897158	CallExpression	"sxe_xmlNodeListGetString ( ( xmlDocPtr ) sxe -> document -> ptr , attr -> children , 1 )"		1896861	0					
ANR	1897159	Callee	sxe_xmlNodeListGetString		1896861	0					
ANR	1897160	Identifier	sxe_xmlNodeListGetString		1896861	0					
ANR	1897161	ArgumentList	( xmlDocPtr ) sxe -> document -> ptr		1896861	1					
ANR	1897162	Argument	( xmlDocPtr ) sxe -> document -> ptr		1896861	0					
ANR	1897163	CastExpression	( xmlDocPtr ) sxe -> document -> ptr		1896861	0					
ANR	1897164	CastTarget	xmlDocPtr		1896861	0					
ANR	1897165	PtrMemberAccess	sxe -> document -> ptr		1896861	1					
ANR	1897166	PtrMemberAccess	sxe -> document		1896861	0					
ANR	1897167	Identifier	sxe		1896861	0					
ANR	1897168	Identifier	document		1896861	1					
ANR	1897169	Identifier	ptr		1896861	1					
ANR	1897170	Argument	attr -> children		1896861	1					
ANR	1897171	PtrMemberAccess	attr -> children		1896861	0					
ANR	1897172	Identifier	attr		1896861	0					
ANR	1897173	Identifier	children		1896861	1					
ANR	1897174	Argument	1		1896861	2					
ANR	1897175	PrimaryExpression	1		1896861	0					
ANR	1897176	ExpressionStatement	namelen = xmlStrlen ( attr -> name )	1164:5:31478:31509	1896861	1	True				
ANR	1897177	AssignmentExpression	namelen = xmlStrlen ( attr -> name )		1896861	0		=			
ANR	1897178	Identifier	namelen		1896861	0					
ANR	1897179	CallExpression	xmlStrlen ( attr -> name )		1896861	1					
ANR	1897180	Callee	xmlStrlen		1896861	0					
ANR	1897181	Identifier	xmlStrlen		1896861	0					
ANR	1897182	ArgumentList	attr -> name		1896861	1					
ANR	1897183	Argument	attr -> name		1896861	0					
ANR	1897184	PtrMemberAccess	attr -> name		1896861	0					
ANR	1897185	Identifier	attr		1896861	0					
ANR	1897186	Identifier	name		1896861	1					
ANR	1897187	IfStatement	if ( Z_ISUNDEF ( zattr ) )		1896861	2					
ANR	1897188	Condition	Z_ISUNDEF ( zattr )	1165:9:31520:31535	1896861	0	True				
ANR	1897189	CallExpression	Z_ISUNDEF ( zattr )		1896861	0					
ANR	1897190	Callee	Z_ISUNDEF		1896861	0					
ANR	1897191	Identifier	Z_ISUNDEF		1896861	0					
ANR	1897192	ArgumentList	zattr		1896861	1					
ANR	1897193	Argument	zattr		1896861	0					
ANR	1897194	Identifier	zattr		1896861	0					
ANR	1897195	CompoundStatement		46:27:1309:1309	1896861	1					
ANR	1897196	ExpressionStatement	array_init ( & zattr )	1166:6:31546:31564	1896861	0	True				
ANR	1897197	CallExpression	array_init ( & zattr )		1896861	0					
ANR	1897198	Callee	array_init		1896861	0					
ANR	1897199	Identifier	array_init		1896861	0					
ANR	1897200	ArgumentList	& zattr		1896861	1					
ANR	1897201	Argument	& zattr		1896861	0					
ANR	1897202	UnaryOperationExpression	& zattr		1896861	0					
ANR	1897203	UnaryOperator	&		1896861	0					
ANR	1897204	Identifier	zattr		1896861	1					
ANR	1897205	ExpressionStatement	"sxe_properties_add ( rv , ""@attributes"" , sizeof ( ""@attributes"" ) - 1 , & zattr )"	1167:6:31572:31644	1896861	1	True				
ANR	1897206	CallExpression	"sxe_properties_add ( rv , ""@attributes"" , sizeof ( ""@attributes"" ) - 1 , & zattr )"		1896861	0					
ANR	1897207	Callee	sxe_properties_add		1896861	0					
ANR	1897208	Identifier	sxe_properties_add		1896861	0					
ANR	1897209	ArgumentList	rv		1896861	1					
ANR	1897210	Argument	rv		1896861	0					
ANR	1897211	Identifier	rv		1896861	0					
ANR	1897212	Argument	"""@attributes"""		1896861	1					
ANR	1897213	PrimaryExpression	"""@attributes"""		1896861	0					
ANR	1897214	Argument	"sizeof ( ""@attributes"" ) - 1"		1896861	2					
ANR	1897215	AdditiveExpression	"sizeof ( ""@attributes"" ) - 1"		1896861	0		-			
ANR	1897216	SizeofExpression	"sizeof ( ""@attributes"" )"		1896861	0					
ANR	1897217	Sizeof	sizeof		1896861	0					
ANR	1897218	PrimaryExpression	"""@attributes"""		1896861	1					
ANR	1897219	PrimaryExpression	1		1896861	1					
ANR	1897220	Argument	& zattr		1896861	3					
ANR	1897221	UnaryOperationExpression	& zattr		1896861	0					
ANR	1897222	UnaryOperator	&		1896861	0					
ANR	1897223	Identifier	zattr		1896861	1					
ANR	1897224	ExpressionStatement	"add_assoc_zval_ex ( & zattr , ( char * ) attr -> name , namelen , & value )"	1169:5:31658:31719	1896861	3	True				
ANR	1897225	CallExpression	"add_assoc_zval_ex ( & zattr , ( char * ) attr -> name , namelen , & value )"		1896861	0					
ANR	1897226	Callee	add_assoc_zval_ex		1896861	0					
ANR	1897227	Identifier	add_assoc_zval_ex		1896861	0					
ANR	1897228	ArgumentList	& zattr		1896861	1					
ANR	1897229	Argument	& zattr		1896861	0					
ANR	1897230	UnaryOperationExpression	& zattr		1896861	0					
ANR	1897231	UnaryOperator	&		1896861	0					
ANR	1897232	Identifier	zattr		1896861	1					
ANR	1897233	Argument	( char * ) attr -> name		1896861	1					
ANR	1897234	CastExpression	( char * ) attr -> name		1896861	0					
ANR	1897235	CastTarget	char *		1896861	0					
ANR	1897236	PtrMemberAccess	attr -> name		1896861	1					
ANR	1897237	Identifier	attr		1896861	0					
ANR	1897238	Identifier	name		1896861	1					
ANR	1897239	Argument	namelen		1896861	2					
ANR	1897240	Identifier	namelen		1896861	0					
ANR	1897241	Argument	& value		1896861	3					
ANR	1897242	UnaryOperationExpression	& value		1896861	0					
ANR	1897243	UnaryOperator	&		1896861	0					
ANR	1897244	Identifier	value		1896861	1					
ANR	1897245	ExpressionStatement	attr = attr -> next	1171:4:31731:31748	1896861	1	True				
ANR	1897246	AssignmentExpression	attr = attr -> next		1896861	0		=			
ANR	1897247	Identifier	attr		1896861	0					
ANR	1897248	PtrMemberAccess	attr -> next		1896861	1					
ANR	1897249	Identifier	attr		1896861	0					
ANR	1897250	Identifier	next		1896861	1					
ANR	1897251	ExpressionStatement	"GET_NODE ( sxe , node )"	1176:1:31764:31783	1896861	17	True				
ANR	1897252	CallExpression	"GET_NODE ( sxe , node )"		1896861	0					
ANR	1897253	Callee	GET_NODE		1896861	0					
ANR	1897254	Identifier	GET_NODE		1896861	0					
ANR	1897255	ArgumentList	sxe		1896861	1					
ANR	1897256	Argument	sxe		1896861	0					
ANR	1897257	Identifier	sxe		1896861	0					
ANR	1897258	Argument	node		1896861	1					
ANR	1897259	Identifier	node		1896861	0					
ANR	1897260	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , node )"	1177:1:31786:31826	1896861	18	True				
ANR	1897261	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , node )"		1896861	0		=			
ANR	1897262	Identifier	node		1896861	0					
ANR	1897263	CallExpression	"php_sxe_get_first_node ( sxe , node )"		1896861	1					
ANR	1897264	Callee	php_sxe_get_first_node		1896861	0					
ANR	1897265	Identifier	php_sxe_get_first_node		1896861	0					
ANR	1897266	ArgumentList	sxe		1896861	1					
ANR	1897267	Argument	sxe		1896861	0					
ANR	1897268	Identifier	sxe		1896861	0					
ANR	1897269	Argument	node		1896861	1					
ANR	1897270	Identifier	node		1896861	0					
ANR	1897271	IfStatement	if ( node && sxe -> iter . type != SXE_ITER_ATTRLIST )		1896861	19					
ANR	1897272	Condition	node && sxe -> iter . type != SXE_ITER_ATTRLIST	1179:5:31834:31876	1896861	0	True				
ANR	1897273	AndExpression	node && sxe -> iter . type != SXE_ITER_ATTRLIST		1896861	0		&&			
ANR	1897274	Identifier	node		1896861	0					
ANR	1897275	EqualityExpression	sxe -> iter . type != SXE_ITER_ATTRLIST		1896861	1		!=			
ANR	1897276	MemberAccess	sxe -> iter . type		1896861	0					
ANR	1897277	PtrMemberAccess	sxe -> iter		1896861	0					
ANR	1897278	Identifier	sxe		1896861	0					
ANR	1897279	Identifier	iter		1896861	1					
ANR	1897280	Identifier	type		1896861	1					
ANR	1897281	Identifier	SXE_ITER_ATTRLIST		1896861	1					
ANR	1897282	CompoundStatement		60:50:1650:1650	1896861	1					
ANR	1897283	IfStatement	if ( node -> type == XML_ATTRIBUTE_NODE )		1896861	0					
ANR	1897284	Condition	node -> type == XML_ATTRIBUTE_NODE	1180:6:31887:31918	1896861	0	True				
ANR	1897285	EqualityExpression	node -> type == XML_ATTRIBUTE_NODE		1896861	0		==			
ANR	1897286	PtrMemberAccess	node -> type		1896861	0					
ANR	1897287	Identifier	node		1896861	0					
ANR	1897288	Identifier	type		1896861	1					
ANR	1897289	Identifier	XML_ATTRIBUTE_NODE		1896861	1					
ANR	1897290	CompoundStatement		61:40:1692:1692	1896861	1					
ANR	1897291	ExpressionStatement	"ZVAL_STR ( & value , sxe_xmlNodeListGetString ( node -> doc , node -> children , 1 ) )"	1181:3:31926:31998	1896861	0	True				
ANR	1897292	CallExpression	"ZVAL_STR ( & value , sxe_xmlNodeListGetString ( node -> doc , node -> children , 1 ) )"		1896861	0					
ANR	1897293	Callee	ZVAL_STR		1896861	0					
ANR	1897294	Identifier	ZVAL_STR		1896861	0					
ANR	1897295	ArgumentList	& value		1896861	1					
ANR	1897296	Argument	& value		1896861	0					
ANR	1897297	UnaryOperationExpression	& value		1896861	0					
ANR	1897298	UnaryOperator	&		1896861	0					
ANR	1897299	Identifier	value		1896861	1					
ANR	1897300	Argument	"sxe_xmlNodeListGetString ( node -> doc , node -> children , 1 )"		1896861	1					
ANR	1897301	CallExpression	"sxe_xmlNodeListGetString ( node -> doc , node -> children , 1 )"		1896861	0					
ANR	1897302	Callee	sxe_xmlNodeListGetString		1896861	0					
ANR	1897303	Identifier	sxe_xmlNodeListGetString		1896861	0					
ANR	1897304	ArgumentList	node -> doc		1896861	1					
ANR	1897305	Argument	node -> doc		1896861	0					
ANR	1897306	PtrMemberAccess	node -> doc		1896861	0					
ANR	1897307	Identifier	node		1896861	0					
ANR	1897308	Identifier	doc		1896861	1					
ANR	1897309	Argument	node -> children		1896861	1					
ANR	1897310	PtrMemberAccess	node -> children		1896861	0					
ANR	1897311	Identifier	node		1896861	0					
ANR	1897312	Identifier	children		1896861	1					
ANR	1897313	Argument	1		1896861	2					
ANR	1897314	PrimaryExpression	1		1896861	0					
ANR	1897315	ExpressionStatement	"zend_hash_next_index_insert ( rv , & value )"	1182:3:32003:32042	1896861	1	True				
ANR	1897316	CallExpression	"zend_hash_next_index_insert ( rv , & value )"		1896861	0					
ANR	1897317	Callee	zend_hash_next_index_insert		1896861	0					
ANR	1897318	Identifier	zend_hash_next_index_insert		1896861	0					
ANR	1897319	ArgumentList	rv		1896861	1					
ANR	1897320	Argument	rv		1896861	0					
ANR	1897321	Identifier	rv		1896861	0					
ANR	1897322	Argument	& value		1896861	1					
ANR	1897323	UnaryOperationExpression	& value		1896861	0					
ANR	1897324	UnaryOperator	&		1896861	0					
ANR	1897325	Identifier	value		1896861	1					
ANR	1897326	ExpressionStatement	node = NULL	1183:3:32047:32058	1896861	2	True				
ANR	1897327	AssignmentExpression	node = NULL		1896861	0		=			
ANR	1897328	Identifier	node		1896861	0					
ANR	1897329	Identifier	NULL		1896861	1					
ANR	1897330	ElseStatement	else		1896861	0					
ANR	1897331	IfStatement	if ( sxe -> iter . type != SXE_ITER_CHILD )		1896861	0					
ANR	1897332	Condition	sxe -> iter . type != SXE_ITER_CHILD	1184:13:32073:32104	1896861	0	True				
ANR	1897333	EqualityExpression	sxe -> iter . type != SXE_ITER_CHILD		1896861	0		!=			
ANR	1897334	MemberAccess	sxe -> iter . type		1896861	0					
ANR	1897335	PtrMemberAccess	sxe -> iter		1896861	0					
ANR	1897336	Identifier	sxe		1896861	0					
ANR	1897337	Identifier	iter		1896861	1					
ANR	1897338	Identifier	type		1896861	1					
ANR	1897339	Identifier	SXE_ITER_CHILD		1896861	1					
ANR	1897340	CompoundStatement		65:47:1878:1878	1896861	1					
ANR	1897341	IfStatement	if ( sxe -> iter . type == SXE_ITER_NONE || ! node -> children || ! node -> parent || node -> children -> next || node -> children -> children || node -> parent -> children == node -> parent -> last )		1896861	0					
ANR	1897342	Condition	sxe -> iter . type == SXE_ITER_NONE || ! node -> children || ! node -> parent || node -> children -> next || node -> children -> children || node -> parent -> children == node -> parent -> last	1186:8:32118:32284	1896861	0	True				
ANR	1897343	OrExpression	sxe -> iter . type == SXE_ITER_NONE || ! node -> children || ! node -> parent || node -> children -> next || node -> children -> children || node -> parent -> children == node -> parent -> last		1896861	0		||			
ANR	1897344	EqualityExpression	sxe -> iter . type == SXE_ITER_NONE		1896861	0		==			
ANR	1897345	MemberAccess	sxe -> iter . type		1896861	0					
ANR	1897346	PtrMemberAccess	sxe -> iter		1896861	0					
ANR	1897347	Identifier	sxe		1896861	0					
ANR	1897348	Identifier	iter		1896861	1					
ANR	1897349	Identifier	type		1896861	1					
ANR	1897350	Identifier	SXE_ITER_NONE		1896861	1					
ANR	1897351	OrExpression	! node -> children || ! node -> parent || node -> children -> next || node -> children -> children || node -> parent -> children == node -> parent -> last		1896861	1		||			
ANR	1897352	UnaryOperationExpression	! node -> children		1896861	0					
ANR	1897353	UnaryOperator	!		1896861	0					
ANR	1897354	PtrMemberAccess	node -> children		1896861	1					
ANR	1897355	Identifier	node		1896861	0					
ANR	1897356	Identifier	children		1896861	1					
ANR	1897357	OrExpression	! node -> parent || node -> children -> next || node -> children -> children || node -> parent -> children == node -> parent -> last		1896861	1		||			
ANR	1897358	UnaryOperationExpression	! node -> parent		1896861	0					
ANR	1897359	UnaryOperator	!		1896861	0					
ANR	1897360	PtrMemberAccess	node -> parent		1896861	1					
ANR	1897361	Identifier	node		1896861	0					
ANR	1897362	Identifier	parent		1896861	1					
ANR	1897363	OrExpression	node -> children -> next || node -> children -> children || node -> parent -> children == node -> parent -> last		1896861	1		||			
ANR	1897364	PtrMemberAccess	node -> children -> next		1896861	0					
ANR	1897365	PtrMemberAccess	node -> children		1896861	0					
ANR	1897366	Identifier	node		1896861	0					
ANR	1897367	Identifier	children		1896861	1					
ANR	1897368	Identifier	next		1896861	1					
ANR	1897369	OrExpression	node -> children -> children || node -> parent -> children == node -> parent -> last		1896861	1		||			
ANR	1897370	PtrMemberAccess	node -> children -> children		1896861	0					
ANR	1897371	PtrMemberAccess	node -> children		1896861	0					
ANR	1897372	Identifier	node		1896861	0					
ANR	1897373	Identifier	children		1896861	1					
ANR	1897374	Identifier	children		1896861	1					
ANR	1897375	EqualityExpression	node -> parent -> children == node -> parent -> last		1896861	1		==			
ANR	1897376	PtrMemberAccess	node -> parent -> children		1896861	0					
ANR	1897377	PtrMemberAccess	node -> parent		1896861	0					
ANR	1897378	Identifier	node		1896861	0					
ANR	1897379	Identifier	parent		1896861	1					
ANR	1897380	Identifier	children		1896861	1					
ANR	1897381	PtrMemberAccess	node -> parent -> last		1896861	1					
ANR	1897382	PtrMemberAccess	node -> parent		1896861	0					
ANR	1897383	Identifier	node		1896861	0					
ANR	1897384	Identifier	parent		1896861	1					
ANR	1897385	Identifier	last		1896861	1					
ANR	1897386	CompoundStatement		67:178:2059:2059	1896861	1					
ANR	1897387	ExpressionStatement	node = node -> children	1187:4:32294:32315	1896861	0	True				
ANR	1897388	AssignmentExpression	node = node -> children		1896861	0		=			
ANR	1897389	Identifier	node		1896861	0					
ANR	1897390	PtrMemberAccess	node -> children		1896861	1					
ANR	1897391	Identifier	node		1896861	0					
ANR	1897392	Identifier	children		1896861	1					
ANR	1897393	ElseStatement	else		1896861	0					
ANR	1897394	CompoundStatement		69:10:2098:2098	1896861	0					
ANR	1897395	ExpressionStatement	"ZVAL_COPY_VALUE ( & iter_data , & sxe -> iter . data )"	1189:4:32333:32377	1896861	0	True				
ANR	1897396	CallExpression	"ZVAL_COPY_VALUE ( & iter_data , & sxe -> iter . data )"		1896861	0					
ANR	1897397	Callee	ZVAL_COPY_VALUE		1896861	0					
ANR	1897398	Identifier	ZVAL_COPY_VALUE		1896861	0					
ANR	1897399	ArgumentList	& iter_data		1896861	1					
ANR	1897400	Argument	& iter_data		1896861	0					
ANR	1897401	UnaryOperationExpression	& iter_data		1896861	0					
ANR	1897402	UnaryOperator	&		1896861	0					
ANR	1897403	Identifier	iter_data		1896861	1					
ANR	1897404	Argument	& sxe -> iter . data		1896861	1					
ANR	1897405	UnaryOperationExpression	& sxe -> iter . data		1896861	0					
ANR	1897406	UnaryOperator	&		1896861	0					
ANR	1897407	MemberAccess	sxe -> iter . data		1896861	1					
ANR	1897408	PtrMemberAccess	sxe -> iter		1896861	0					
ANR	1897409	Identifier	sxe		1896861	0					
ANR	1897410	Identifier	iter		1896861	1					
ANR	1897411	Identifier	data		1896861	1					
ANR	1897412	ExpressionStatement	ZVAL_UNDEF ( & sxe -> iter . data )	1190:4:32383:32410	1896861	1	True				
ANR	1897413	CallExpression	ZVAL_UNDEF ( & sxe -> iter . data )		1896861	0					
ANR	1897414	Callee	ZVAL_UNDEF		1896861	0					
ANR	1897415	Identifier	ZVAL_UNDEF		1896861	0					
ANR	1897416	ArgumentList	& sxe -> iter . data		1896861	1					
ANR	1897417	Argument	& sxe -> iter . data		1896861	0					
ANR	1897418	UnaryOperationExpression	& sxe -> iter . data		1896861	0					
ANR	1897419	UnaryOperator	&		1896861	0					
ANR	1897420	MemberAccess	sxe -> iter . data		1896861	1					
ANR	1897421	PtrMemberAccess	sxe -> iter		1896861	0					
ANR	1897422	Identifier	sxe		1896861	0					
ANR	1897423	Identifier	iter		1896861	1					
ANR	1897424	Identifier	data		1896861	1					
ANR	1897425	ExpressionStatement	"node = php_sxe_reset_iterator ( sxe , 0 )"	1192:4:32417:32454	1896861	2	True				
ANR	1897426	AssignmentExpression	"node = php_sxe_reset_iterator ( sxe , 0 )"		1896861	0		=			
ANR	1897427	Identifier	node		1896861	0					
ANR	1897428	CallExpression	"php_sxe_reset_iterator ( sxe , 0 )"		1896861	1					
ANR	1897429	Callee	php_sxe_reset_iterator		1896861	0					
ANR	1897430	Identifier	php_sxe_reset_iterator		1896861	0					
ANR	1897431	ArgumentList	sxe		1896861	1					
ANR	1897432	Argument	sxe		1896861	0					
ANR	1897433	Identifier	sxe		1896861	0					
ANR	1897434	Argument	0		1896861	1					
ANR	1897435	PrimaryExpression	0		1896861	0					
ANR	1897436	ExpressionStatement	use_iter = 1	1194:4:32461:32473	1896861	3	True				
ANR	1897437	AssignmentExpression	use_iter = 1		1896861	0		=			
ANR	1897438	Identifier	use_iter		1896861	0					
ANR	1897439	PrimaryExpression	1		1896861	1					
ANR	1897440	WhileStatement	while ( node )		1896861	1					
ANR	1897441	Condition	node	1198:9:32494:32497	1896861	0	True				
ANR	1897442	Identifier	node		1896861	0					
ANR	1897443	CompoundStatement		79:15:2271:2271	1896861	1					
ANR	1897444	IfStatement	if ( node -> children != NULL || node -> prev != NULL || node -> next != NULL )		1896861	0					
ANR	1897445	Condition	node -> children != NULL || node -> prev != NULL || node -> next != NULL	1199:7:32509:32574	1896861	0	True				
ANR	1897446	OrExpression	node -> children != NULL || node -> prev != NULL || node -> next != NULL		1896861	0		||			
ANR	1897447	EqualityExpression	node -> children != NULL		1896861	0		!=			
ANR	1897448	PtrMemberAccess	node -> children		1896861	0					
ANR	1897449	Identifier	node		1896861	0					
ANR	1897450	Identifier	children		1896861	1					
ANR	1897451	Identifier	NULL		1896861	1					
ANR	1897452	OrExpression	node -> prev != NULL || node -> next != NULL		1896861	1		||			
ANR	1897453	EqualityExpression	node -> prev != NULL		1896861	0		!=			
ANR	1897454	PtrMemberAccess	node -> prev		1896861	0					
ANR	1897455	Identifier	node		1896861	0					
ANR	1897456	Identifier	prev		1896861	1					
ANR	1897457	Identifier	NULL		1896861	1					
ANR	1897458	EqualityExpression	node -> next != NULL		1896861	1		!=			
ANR	1897459	PtrMemberAccess	node -> next		1896861	0					
ANR	1897460	Identifier	node		1896861	0					
ANR	1897461	Identifier	next		1896861	1					
ANR	1897462	Identifier	NULL		1896861	1					
ANR	1897463	CompoundStatement		80:75:2348:2348	1896861	1					
ANR	1897464	ExpressionStatement	SKIP_TEXT ( node )	1200:4:32583:32598	1896861	0	True				
ANR	1897465	CallExpression	SKIP_TEXT ( node )		1896861	0					
ANR	1897466	Callee	SKIP_TEXT		1896861	0					
ANR	1897467	Identifier	SKIP_TEXT		1896861	0					
ANR	1897468	ArgumentList	node		1896861	1					
ANR	1897469	Argument	node		1896861	0					
ANR	1897470	Identifier	node		1896861	0					
ANR	1897471	ElseStatement	else		1896861	0					
ANR	1897472	CompoundStatement		82:10:2381:2381	1896861	0					
ANR	1897473	IfStatement	if ( node -> type == XML_TEXT_NODE )		1896861	0					
ANR	1897474	Condition	node -> type == XML_TEXT_NODE	1202:8:32620:32646	1896861	0	True				
ANR	1897475	EqualityExpression	node -> type == XML_TEXT_NODE		1896861	0		==			
ANR	1897476	PtrMemberAccess	node -> type		1896861	0					
ANR	1897477	Identifier	node		1896861	0					
ANR	1897478	Identifier	type		1896861	1					
ANR	1897479	Identifier	XML_TEXT_NODE		1896861	1					
ANR	1897480	CompoundStatement		84:5:2427:2461	1896861	1					
ANR	1897481	IdentifierDeclStatement	const xmlChar * cur = node -> content ;	1203:5:32656:32690	1896861	0	True				
ANR	1897482	IdentifierDecl	* cur = node -> content		1896861	0					
ANR	1897483	IdentifierDeclType	const xmlChar *		1896861	0					
ANR	1897484	Identifier	cur		1896861	1					
ANR	1897485	AssignmentExpression	* cur = node -> content		1896861	2		=			
ANR	1897486	Identifier	cur		1896861	0					
ANR	1897487	PtrMemberAccess	node -> content		1896861	1					
ANR	1897488	Identifier	node		1896861	0					
ANR	1897489	Identifier	content		1896861	1					
ANR	1897490	IfStatement	if ( * cur != 0 )		1896861	1					
ANR	1897491	Condition	* cur != 0	1205:9:32702:32710	1896861	0	True				
ANR	1897492	EqualityExpression	* cur != 0		1896861	0		!=			
ANR	1897493	UnaryOperationExpression	* cur		1896861	0					
ANR	1897494	UnaryOperator	*		1896861	0					
ANR	1897495	Identifier	cur		1896861	1					
ANR	1897496	PrimaryExpression	0		1896861	1					
ANR	1897497	CompoundStatement		86:20:2484:2484	1896861	1					
ANR	1897498	ExpressionStatement	"ZVAL_STR ( & value , sxe_xmlNodeListGetString ( node -> doc , node , 1 ) )"	1206:6:32721:32783	1896861	0	True				
ANR	1897499	CallExpression	"ZVAL_STR ( & value , sxe_xmlNodeListGetString ( node -> doc , node , 1 ) )"		1896861	0					
ANR	1897500	Callee	ZVAL_STR		1896861	0					
ANR	1897501	Identifier	ZVAL_STR		1896861	0					
ANR	1897502	ArgumentList	& value		1896861	1					
ANR	1897503	Argument	& value		1896861	0					
ANR	1897504	UnaryOperationExpression	& value		1896861	0					
ANR	1897505	UnaryOperator	&		1896861	0					
ANR	1897506	Identifier	value		1896861	1					
ANR	1897507	Argument	"sxe_xmlNodeListGetString ( node -> doc , node , 1 )"		1896861	1					
ANR	1897508	CallExpression	"sxe_xmlNodeListGetString ( node -> doc , node , 1 )"		1896861	0					
ANR	1897509	Callee	sxe_xmlNodeListGetString		1896861	0					
ANR	1897510	Identifier	sxe_xmlNodeListGetString		1896861	0					
ANR	1897511	ArgumentList	node -> doc		1896861	1					
ANR	1897512	Argument	node -> doc		1896861	0					
ANR	1897513	PtrMemberAccess	node -> doc		1896861	0					
ANR	1897514	Identifier	node		1896861	0					
ANR	1897515	Identifier	doc		1896861	1					
ANR	1897516	Argument	node		1896861	1					
ANR	1897517	Identifier	node		1896861	0					
ANR	1897518	Argument	1		1896861	2					
ANR	1897519	PrimaryExpression	1		1896861	0					
ANR	1897520	ExpressionStatement	"zend_hash_next_index_insert ( rv , & value )"	1207:6:32791:32830	1896861	1	True				
ANR	1897521	CallExpression	"zend_hash_next_index_insert ( rv , & value )"		1896861	0					
ANR	1897522	Callee	zend_hash_next_index_insert		1896861	0					
ANR	1897523	Identifier	zend_hash_next_index_insert		1896861	0					
ANR	1897524	ArgumentList	rv		1896861	1					
ANR	1897525	Argument	rv		1896861	0					
ANR	1897526	Identifier	rv		1896861	0					
ANR	1897527	Argument	& value		1896861	1					
ANR	1897528	UnaryOperationExpression	& value		1896861	0					
ANR	1897529	UnaryOperator	&		1896861	0					
ANR	1897530	Identifier	value		1896861	1					
ANR	1897531	GotoStatement	goto next_iter ;	1209:5:32844:32858	1896861	2	True				
ANR	1897532	Identifier	next_iter		1896861	0					
ANR	1897533	IfStatement	"if ( node -> type == XML_ELEMENT_NODE && ( ! match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix ) ) )"		1896861	1					
ANR	1897534	Condition	"node -> type == XML_ELEMENT_NODE && ( ! match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix ) )"	1213:7:32879:32975	1896861	0	True				
ANR	1897535	AndExpression	"node -> type == XML_ELEMENT_NODE && ( ! match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix ) )"		1896861	0		&&			
ANR	1897536	EqualityExpression	node -> type == XML_ELEMENT_NODE		1896861	0		==			
ANR	1897537	PtrMemberAccess	node -> type		1896861	0					
ANR	1897538	Identifier	node		1896861	0					
ANR	1897539	Identifier	type		1896861	1					
ANR	1897540	Identifier	XML_ELEMENT_NODE		1896861	1					
ANR	1897541	UnaryOperationExpression	"! match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1896861	1					
ANR	1897542	UnaryOperator	!		1896861	0					
ANR	1897543	CallExpression	"match_ns ( sxe , node , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1896861	1					
ANR	1897544	Callee	match_ns		1896861	0					
ANR	1897545	Identifier	match_ns		1896861	0					
ANR	1897546	ArgumentList	sxe		1896861	1					
ANR	1897547	Argument	sxe		1896861	0					
ANR	1897548	Identifier	sxe		1896861	0					
ANR	1897549	Argument	node		1896861	1					
ANR	1897550	Identifier	node		1896861	0					
ANR	1897551	Argument	sxe -> iter . nsprefix		1896861	2					
ANR	1897552	MemberAccess	sxe -> iter . nsprefix		1896861	0					
ANR	1897553	PtrMemberAccess	sxe -> iter		1896861	0					
ANR	1897554	Identifier	sxe		1896861	0					
ANR	1897555	Identifier	iter		1896861	1					
ANR	1897556	Identifier	nsprefix		1896861	1					
ANR	1897557	Argument	sxe -> iter . isprefix		1896861	3					
ANR	1897558	MemberAccess	sxe -> iter . isprefix		1896861	0					
ANR	1897559	PtrMemberAccess	sxe -> iter		1896861	0					
ANR	1897560	Identifier	sxe		1896861	0					
ANR	1897561	Identifier	iter		1896861	1					
ANR	1897562	Identifier	isprefix		1896861	1					
ANR	1897563	CompoundStatement		94:106:2749:2749	1896861	1					
ANR	1897564	GotoStatement	goto next_iter ;	1214:4:32984:32998	1896861	0	True				
ANR	1897565	Identifier	next_iter		1896861	0					
ANR	1897566	ExpressionStatement	name = ( char * ) node -> name	1217:3:33009:33035	1896861	2	True				
ANR	1897567	AssignmentExpression	name = ( char * ) node -> name		1896861	0		=			
ANR	1897568	Identifier	name		1896861	0					
ANR	1897569	CastExpression	( char * ) node -> name		1896861	1					
ANR	1897570	CastTarget	char *		1896861	0					
ANR	1897571	PtrMemberAccess	node -> name		1896861	1					
ANR	1897572	Identifier	node		1896861	0					
ANR	1897573	Identifier	name		1896861	1					
ANR	1897574	IfStatement	if ( ! name )		1896861	3					
ANR	1897575	Condition	! name	1218:7:33044:33048	1896861	0	True				
ANR	1897576	UnaryOperationExpression	! name		1896861	0					
ANR	1897577	UnaryOperator	!		1896861	0					
ANR	1897578	Identifier	name		1896861	1					
ANR	1897579	CompoundStatement		99:14:2822:2822	1896861	1					
ANR	1897580	GotoStatement	goto next_iter ;	1219:4:33057:33071	1896861	0	True				
ANR	1897581	Identifier	next_iter		1896861	0					
ANR	1897582	ElseStatement	else		1896861	0					
ANR	1897583	CompoundStatement		101:10:2854:2854	1896861	0					
ANR	1897584	ExpressionStatement	namelen = xmlStrlen ( node -> name )	1221:4:33089:33120	1896861	0	True				
ANR	1897585	AssignmentExpression	namelen = xmlStrlen ( node -> name )		1896861	0		=			
ANR	1897586	Identifier	namelen		1896861	0					
ANR	1897587	CallExpression	xmlStrlen ( node -> name )		1896861	1					
ANR	1897588	Callee	xmlStrlen		1896861	0					
ANR	1897589	Identifier	xmlStrlen		1896861	0					
ANR	1897590	ArgumentList	node -> name		1896861	1					
ANR	1897591	Argument	node -> name		1896861	0					
ANR	1897592	PtrMemberAccess	node -> name		1896861	0					
ANR	1897593	Identifier	node		1896861	0					
ANR	1897594	Identifier	name		1896861	1					
ANR	1897595	ExpressionStatement	"_get_base_node_value ( sxe , node , & value , sxe -> iter . nsprefix , sxe -> iter . isprefix )"	1224:3:33131:33210	1896861	4	True				
ANR	1897596	CallExpression	"_get_base_node_value ( sxe , node , & value , sxe -> iter . nsprefix , sxe -> iter . isprefix )"		1896861	0					
ANR	1897597	Callee	_get_base_node_value		1896861	0					
ANR	1897598	Identifier	_get_base_node_value		1896861	0					
ANR	1897599	ArgumentList	sxe		1896861	1					
ANR	1897600	Argument	sxe		1896861	0					
ANR	1897601	Identifier	sxe		1896861	0					
ANR	1897602	Argument	node		1896861	1					
ANR	1897603	Identifier	node		1896861	0					
ANR	1897604	Argument	& value		1896861	2					
ANR	1897605	UnaryOperationExpression	& value		1896861	0					
ANR	1897606	UnaryOperator	&		1896861	0					
ANR	1897607	Identifier	value		1896861	1					
ANR	1897608	Argument	sxe -> iter . nsprefix		1896861	3					
ANR	1897609	MemberAccess	sxe -> iter . nsprefix		1896861	0					
ANR	1897610	PtrMemberAccess	sxe -> iter		1896861	0					
ANR	1897611	Identifier	sxe		1896861	0					
ANR	1897612	Identifier	iter		1896861	1					
ANR	1897613	Identifier	nsprefix		1896861	1					
ANR	1897614	Argument	sxe -> iter . isprefix		1896861	4					
ANR	1897615	MemberAccess	sxe -> iter . isprefix		1896861	0					
ANR	1897616	PtrMemberAccess	sxe -> iter		1896861	0					
ANR	1897617	Identifier	sxe		1896861	0					
ANR	1897618	Identifier	iter		1896861	1					
ANR	1897619	Identifier	isprefix		1896861	1					
ANR	1897620	IfStatement	if ( use_iter )		1896861	5					
ANR	1897621	Condition	use_iter	1226:8:33221:33228	1896861	0	True				
ANR	1897622	Identifier	use_iter		1896861	0					
ANR	1897623	CompoundStatement		107:19:3003:3003	1896861	1					
ANR	1897624	ExpressionStatement	"zend_hash_next_index_insert ( rv , & value )"	1227:4:33238:33277	1896861	0	True				
ANR	1897625	CallExpression	"zend_hash_next_index_insert ( rv , & value )"		1896861	0					
ANR	1897626	Callee	zend_hash_next_index_insert		1896861	0					
ANR	1897627	Identifier	zend_hash_next_index_insert		1896861	0					
ANR	1897628	ArgumentList	rv		1896861	1					
ANR	1897629	Argument	rv		1896861	0					
ANR	1897630	Identifier	rv		1896861	0					
ANR	1897631	Argument	& value		1896861	1					
ANR	1897632	UnaryOperationExpression	& value		1896861	0					
ANR	1897633	UnaryOperator	&		1896861	0					
ANR	1897634	Identifier	value		1896861	1					
ANR	1897635	ElseStatement	else		1896861	0					
ANR	1897636	CompoundStatement		109:10:3060:3060	1896861	0					
ANR	1897637	ExpressionStatement	"sxe_properties_add ( rv , name , namelen , & value )"	1229:4:33295:33340	1896861	0	True				
ANR	1897638	CallExpression	"sxe_properties_add ( rv , name , namelen , & value )"		1896861	0					
ANR	1897639	Callee	sxe_properties_add		1896861	0					
ANR	1897640	Identifier	sxe_properties_add		1896861	0					
ANR	1897641	ArgumentList	rv		1896861	1					
ANR	1897642	Argument	rv		1896861	0					
ANR	1897643	Identifier	rv		1896861	0					
ANR	1897644	Argument	name		1896861	1					
ANR	1897645	Identifier	name		1896861	0					
ANR	1897646	Argument	namelen		1896861	2					
ANR	1897647	Identifier	namelen		1896861	0					
ANR	1897648	Argument	& value		1896861	3					
ANR	1897649	UnaryOperationExpression	& value		1896861	0					
ANR	1897650	UnaryOperator	&		1896861	0					
ANR	1897651	Identifier	value		1896861	1					
ANR	1897652	Label	next_iter :	1231:0:33347:33356	1896861	6	True				
ANR	1897653	Identifier	next_iter		1896861	0					
ANR	1897654	IfStatement	if ( use_iter )		1896861	7					
ANR	1897655	Condition	use_iter	1232:7:33365:33372	1896861	0	True				
ANR	1897656	Identifier	use_iter		1896861	0					
ANR	1897657	CompoundStatement		113:17:3146:3146	1896861	1					
ANR	1897658	ExpressionStatement	"node = php_sxe_iterator_fetch ( sxe , node -> next , 0 )"	1233:4:33381:33430	1896861	0	True				
ANR	1897659	AssignmentExpression	"node = php_sxe_iterator_fetch ( sxe , node -> next , 0 )"		1896861	0		=			
ANR	1897660	Identifier	node		1896861	0					
ANR	1897661	CallExpression	"php_sxe_iterator_fetch ( sxe , node -> next , 0 )"		1896861	1					
ANR	1897662	Callee	php_sxe_iterator_fetch		1896861	0					
ANR	1897663	Identifier	php_sxe_iterator_fetch		1896861	0					
ANR	1897664	ArgumentList	sxe		1896861	1					
ANR	1897665	Argument	sxe		1896861	0					
ANR	1897666	Identifier	sxe		1896861	0					
ANR	1897667	Argument	node -> next		1896861	1					
ANR	1897668	PtrMemberAccess	node -> next		1896861	0					
ANR	1897669	Identifier	node		1896861	0					
ANR	1897670	Identifier	next		1896861	1					
ANR	1897671	Argument	0		1896861	2					
ANR	1897672	PrimaryExpression	0		1896861	0					
ANR	1897673	ElseStatement	else		1896861	0					
ANR	1897674	CompoundStatement		115:10:3213:3213	1896861	0					
ANR	1897675	ExpressionStatement	node = node -> next	1235:4:33448:33465	1896861	0	True				
ANR	1897676	AssignmentExpression	node = node -> next		1896861	0		=			
ANR	1897677	Identifier	node		1896861	0					
ANR	1897678	PtrMemberAccess	node -> next		1896861	1					
ANR	1897679	Identifier	node		1896861	0					
ANR	1897680	Identifier	next		1896861	1					
ANR	1897681	IfStatement	if ( use_iter )		1896861	20					
ANR	1897682	Condition	use_iter	1240:5:33485:33492	1896861	0	True				
ANR	1897683	Identifier	use_iter		1896861	0					
ANR	1897684	CompoundStatement		121:15:3266:3266	1896861	1					
ANR	1897685	IfStatement	if ( ! Z_ISUNDEF ( sxe -> iter . data ) )		1896861	0					
ANR	1897686	Condition	! Z_ISUNDEF ( sxe -> iter . data )	1241:6:33503:33528	1896861	0	True				
ANR	1897687	UnaryOperationExpression	! Z_ISUNDEF ( sxe -> iter . data )		1896861	0					
ANR	1897688	UnaryOperator	!		1896861	0					
ANR	1897689	CallExpression	Z_ISUNDEF ( sxe -> iter . data )		1896861	1					
ANR	1897690	Callee	Z_ISUNDEF		1896861	0					
ANR	1897691	Identifier	Z_ISUNDEF		1896861	0					
ANR	1897692	ArgumentList	sxe -> iter . data		1896861	1					
ANR	1897693	Argument	sxe -> iter . data		1896861	0					
ANR	1897694	MemberAccess	sxe -> iter . data		1896861	0					
ANR	1897695	PtrMemberAccess	sxe -> iter		1896861	0					
ANR	1897696	Identifier	sxe		1896861	0					
ANR	1897697	Identifier	iter		1896861	1					
ANR	1897698	Identifier	data		1896861	1					
ANR	1897699	CompoundStatement		122:34:3302:3302	1896861	1					
ANR	1897700	ExpressionStatement	zval_ptr_dtor ( & sxe -> iter . data )	1242:3:33536:33566	1896861	0	True				
ANR	1897701	CallExpression	zval_ptr_dtor ( & sxe -> iter . data )		1896861	0					
ANR	1897702	Callee	zval_ptr_dtor		1896861	0					
ANR	1897703	Identifier	zval_ptr_dtor		1896861	0					
ANR	1897704	ArgumentList	& sxe -> iter . data		1896861	1					
ANR	1897705	Argument	& sxe -> iter . data		1896861	0					
ANR	1897706	UnaryOperationExpression	& sxe -> iter . data		1896861	0					
ANR	1897707	UnaryOperator	&		1896861	0					
ANR	1897708	MemberAccess	sxe -> iter . data		1896861	1					
ANR	1897709	PtrMemberAccess	sxe -> iter		1896861	0					
ANR	1897710	Identifier	sxe		1896861	0					
ANR	1897711	Identifier	iter		1896861	1					
ANR	1897712	Identifier	data		1896861	1					
ANR	1897713	ExpressionStatement	"ZVAL_COPY_VALUE ( & sxe -> iter . data , & iter_data )"	1244:2:33574:33618	1896861	1	True				
ANR	1897714	CallExpression	"ZVAL_COPY_VALUE ( & sxe -> iter . data , & iter_data )"		1896861	0					
ANR	1897715	Callee	ZVAL_COPY_VALUE		1896861	0					
ANR	1897716	Identifier	ZVAL_COPY_VALUE		1896861	0					
ANR	1897717	ArgumentList	& sxe -> iter . data		1896861	1					
ANR	1897718	Argument	& sxe -> iter . data		1896861	0					
ANR	1897719	UnaryOperationExpression	& sxe -> iter . data		1896861	0					
ANR	1897720	UnaryOperator	&		1896861	0					
ANR	1897721	MemberAccess	sxe -> iter . data		1896861	1					
ANR	1897722	PtrMemberAccess	sxe -> iter		1896861	0					
ANR	1897723	Identifier	sxe		1896861	0					
ANR	1897724	Identifier	iter		1896861	1					
ANR	1897725	Identifier	data		1896861	1					
ANR	1897726	Argument	& iter_data		1896861	1					
ANR	1897727	UnaryOperationExpression	& iter_data		1896861	0					
ANR	1897728	UnaryOperator	&		1896861	0					
ANR	1897729	Identifier	iter_data		1896861	1					
ANR	1897730	ReturnStatement	return rv ;	1247:1:33625:33634	1896861	21	True				
ANR	1897731	Identifier	rv		1896861	0					
ANR	1897732	ReturnType	static HashTable *		1896861	1					
ANR	1897733	Identifier	sxe_get_prop_hash		1896861	2					
ANR	1897734	ParameterList	"zval * object , int is_debug"		1896861	3					
ANR	1897735	Parameter	zval * object	1119:36:30190:30201	1896861	0	True				
ANR	1897736	ParameterType	zval *		1896861	0					
ANR	1897737	Identifier	object		1896861	1					
ANR	1897738	Parameter	int is_debug	1119:50:30204:30215	1896861	1	True				
ANR	1897739	ParameterType	int		1896861	0					
ANR	1897740	Identifier	is_debug		1896861	1					
ANR	1897741	CFGEntryNode	ENTRY		1896861		True				
ANR	1897742	CFGExitNode	EXIT		1896861		True				
ANR	1897743	Symbol	& sxe -> iter		1896861						
ANR	1897744	Symbol	XML_ELEMENT_NODE		1896861						
ANR	1897745	Symbol	& value		1896861						
ANR	1897746	Symbol	namelen		1896861						
ANR	1897747	Symbol	zattr		1896861						
ANR	1897748	Symbol	iter_data		1896861						
ANR	1897749	Symbol	XML_TEXT_NODE		1896861						
ANR	1897750	Symbol	node -> children -> children		1896861						
ANR	1897751	Symbol	* cur		1896861						
ANR	1897752	Symbol	* node		1896861						
ANR	1897753	Symbol	node -> children -> next		1896861						
ANR	1897754	Symbol	node -> doc		1896861						
ANR	1897755	Symbol	sxe		1896861						
ANR	1897756	Symbol	NULL		1896861						
ANR	1897757	Symbol	xmlStrcmp		1896861						
ANR	1897758	Symbol	test		1896861						
ANR	1897759	Symbol	sxe -> iter . type		1896861						
ANR	1897760	Symbol	ZVAL_PTR_DTOR		1896861						
ANR	1897761	Symbol	sxe -> iter		1896861						
ANR	1897762	Symbol	node		1896861						
ANR	1897763	Symbol	SXE_ITER_NONE		1896861						
ANR	1897764	Symbol	sxe -> document -> ptr		1896861						
ANR	1897765	Symbol	* * node		1896861						
ANR	1897766	Symbol	node -> prev		1896861						
ANR	1897767	Symbol	php_sxe_iterator_fetch		1896861						
ANR	1897768	Symbol	sxe -> iter . nsprefix		1896861						
ANR	1897769	Symbol	node -> parent		1896861						
ANR	1897770	Symbol	name		1896861						
ANR	1897771	Symbol	node -> type		1896861						
ANR	1897772	Symbol	* attr		1896861						
ANR	1897773	Symbol	Z_SXEOBJ_P		1896861						
ANR	1897774	Symbol	node -> children		1896861						
ANR	1897775	Symbol	object		1896861						
ANR	1897776	Symbol	attr -> next		1896861						
ANR	1897777	Symbol	cur		1896861						
ANR	1897778	Symbol	SXE_ITER_CHILD		1896861						
ANR	1897779	Symbol	SXE_ITER_ATTRLIST		1896861						
ANR	1897780	Symbol	rv		1896861						
ANR	1897781	Symbol	sxe_xmlNodeListGetString		1896861						
ANR	1897782	Symbol	* sxe		1896861						
ANR	1897783	Symbol	use_iter		1896861						
ANR	1897784	Symbol	match_ns		1896861						
ANR	1897785	Symbol	node -> content		1896861						
ANR	1897786	Symbol	SXE_ITER_ELEMENT		1896861						
ANR	1897787	Symbol	sxe -> iter . data		1896861						
ANR	1897788	Symbol	XML_ENTITY_DECL		1896861						
ANR	1897789	Symbol	* node -> parent		1896861						
ANR	1897790	Symbol	* sxe -> document		1896861						
ANR	1897791	Symbol	attr		1896861						
ANR	1897792	Symbol	& sxe -> iter . data		1896861						
ANR	1897793	Symbol	value		1896861						
ANR	1897794	Symbol	& zattr		1896861						
ANR	1897795	Symbol	* node -> children		1896861						
ANR	1897796	Symbol	php_sxe_get_first_node		1896861						
ANR	1897797	Symbol	node -> parent -> last		1896861						
ANR	1897798	Symbol	Z_ISUNDEF		1896861						
ANR	1897799	Symbol	sxe -> properties		1896861						
ANR	1897800	Symbol	node -> properties		1896861						
ANR	1897801	Symbol	sxe -> iter . isprefix		1896861						
ANR	1897802	Symbol	is_debug		1896861						
ANR	1897803	Symbol	node -> next		1896861						
ANR	1897804	Symbol	attr -> children		1896861						
ANR	1897805	Symbol	node -> parent -> children		1896861						
ANR	1897806	Symbol	sxe -> iter . name		1896861						
ANR	1897807	Symbol	php_sxe_reset_iterator		1896861						
ANR	1897808	Symbol	node -> name		1896861						
ANR	1897809	Symbol	* * sxe		1896861						
ANR	1897810	Symbol	xmlStrlen		1896861						
ANR	1897811	Symbol	& iter_data		1896861						
ANR	1897812	Symbol	attr -> name		1896861						
ANR	1897813	Symbol	XML_ATTRIBUTE_NODE		1896861						
ANR	1897814	Symbol	sxe -> document		1896861						
ANR	1897815	Function	sxe_get_gc	1251:0:33649:33826							
ANR	1897816	FunctionDef	"sxe_get_gc (zval * object , zval * * table , int * n)"		1897815	0					
ANR	1897817	CompoundStatement		1251:75:33724:33826	1897815	0					
ANR	1897818	IdentifierDeclStatement	php_sxe_object * sxe ;	1252:1:33727:33746	1897815	0	True				
ANR	1897819	IdentifierDecl	* sxe		1897815	0					
ANR	1897820	IdentifierDeclType	php_sxe_object *		1897815	0					
ANR	1897821	Identifier	sxe		1897815	1					
ANR	1897822	ExpressionStatement	sxe = Z_SXEOBJ_P ( object )	1253:1:33749:33773	1897815	1	True				
ANR	1897823	AssignmentExpression	sxe = Z_SXEOBJ_P ( object )		1897815	0		=			
ANR	1897824	Identifier	sxe		1897815	0					
ANR	1897825	CallExpression	Z_SXEOBJ_P ( object )		1897815	1					
ANR	1897826	Callee	Z_SXEOBJ_P		1897815	0					
ANR	1897827	Identifier	Z_SXEOBJ_P		1897815	0					
ANR	1897828	ArgumentList	object		1897815	1					
ANR	1897829	Argument	object		1897815	0					
ANR	1897830	Identifier	object		1897815	0					
ANR	1897831	ExpressionStatement	* table = NULL	1255:1:33777:33790	1897815	2	True				
ANR	1897832	AssignmentExpression	* table = NULL		1897815	0		=			
ANR	1897833	UnaryOperationExpression	* table		1897815	0					
ANR	1897834	UnaryOperator	*		1897815	0					
ANR	1897835	Identifier	table		1897815	1					
ANR	1897836	Identifier	NULL		1897815	1					
ANR	1897837	ExpressionStatement	* n = 0	1256:1:33793:33799	1897815	3	True				
ANR	1897838	AssignmentExpression	* n = 0		1897815	0		=			
ANR	1897839	UnaryOperationExpression	* n		1897815	0					
ANR	1897840	UnaryOperator	*		1897815	0					
ANR	1897841	Identifier	n		1897815	1					
ANR	1897842	PrimaryExpression	0		1897815	1					
ANR	1897843	ReturnStatement	return sxe -> properties ;	1257:1:33802:33824	1897815	4	True				
ANR	1897844	PtrMemberAccess	sxe -> properties		1897815	0					
ANR	1897845	Identifier	sxe		1897815	0					
ANR	1897846	Identifier	properties		1897815	1					
ANR	1897847	ReturnType	static HashTable *		1897815	1					
ANR	1897848	Identifier	sxe_get_gc		1897815	2					
ANR	1897849	ParameterList	"zval * object , zval * * table , int * n"		1897815	3					
ANR	1897850	Parameter	zval * object	1251:29:33678:33689	1897815	0	True				
ANR	1897851	ParameterType	zval *		1897815	0					
ANR	1897852	Identifier	object		1897815	1					
ANR	1897853	Parameter	zval * * table	1251:43:33692:33703	1897815	1	True				
ANR	1897854	ParameterType	zval * *		1897815	0					
ANR	1897855	Identifier	table		1897815	1					
ANR	1897856	Parameter	int * n	1251:57:33706:33711	1897815	2	True				
ANR	1897857	ParameterType	int *		1897815	0					
ANR	1897858	Identifier	n		1897815	1					
ANR	1897859	CFGEntryNode	ENTRY		1897815		True				
ANR	1897860	CFGExitNode	EXIT		1897815		True				
ANR	1897861	Symbol	sxe		1897815						
ANR	1897862	Symbol	NULL		1897815						
ANR	1897863	Symbol	* n		1897815						
ANR	1897864	Symbol	sxe -> properties		1897815						
ANR	1897865	Symbol	* table		1897815						
ANR	1897866	Symbol	* sxe		1897815						
ANR	1897867	Symbol	table		1897815						
ANR	1897868	Symbol	n		1897815						
ANR	1897869	Symbol	Z_SXEOBJ_P		1897815						
ANR	1897870	Symbol	object		1897815						
ANR	1897871	Function	sxe_get_properties	1261:0:33839:33940							
ANR	1897872	FunctionDef	sxe_get_properties (zval * object)		1897871	0					
ANR	1897873	CompoundStatement		1262:0:33900:33940	1897871	0					
ANR	1897874	ReturnStatement	"return sxe_get_prop_hash ( object , 0 ) ;"	1263:1:33903:33938	1897871	0	True				
ANR	1897875	CallExpression	"sxe_get_prop_hash ( object , 0 )"		1897871	0					
ANR	1897876	Callee	sxe_get_prop_hash		1897871	0					
ANR	1897877	Identifier	sxe_get_prop_hash		1897871	0					
ANR	1897878	ArgumentList	object		1897871	1					
ANR	1897879	Argument	object		1897871	0					
ANR	1897880	Identifier	object		1897871	0					
ANR	1897881	Argument	0		1897871	1					
ANR	1897882	PrimaryExpression	0		1897871	0					
ANR	1897883	ReturnType	static HashTable *		1897871	1					
ANR	1897884	Identifier	sxe_get_properties		1897871	2					
ANR	1897885	ParameterList	zval * object		1897871	3					
ANR	1897886	Parameter	zval * object	1261:37:33876:33887	1897871	0	True				
ANR	1897887	ParameterType	zval *		1897871	0					
ANR	1897888	Identifier	object		1897871	1					
ANR	1897889	CFGEntryNode	ENTRY		1897871		True				
ANR	1897890	CFGExitNode	EXIT		1897871		True				
ANR	1897891	Symbol	sxe_get_prop_hash		1897871						
ANR	1897892	Symbol	object		1897871						
ANR	1897893	Function	sxe_get_debug_info	1267:0:33953:34084							
ANR	1897894	FunctionDef	"sxe_get_debug_info (zval * object , int * is_temp)"		1897893	0					
ANR	1897895	CompoundStatement		1268:0:34029:34084	1897893	0					
ANR	1897896	ExpressionStatement	* is_temp = 1	1269:1:34032:34044	1897893	0	True				
ANR	1897897	AssignmentExpression	* is_temp = 1		1897893	0		=			
ANR	1897898	UnaryOperationExpression	* is_temp		1897893	0					
ANR	1897899	UnaryOperator	*		1897893	0					
ANR	1897900	Identifier	is_temp		1897893	1					
ANR	1897901	PrimaryExpression	1		1897893	1					
ANR	1897902	ReturnStatement	"return sxe_get_prop_hash ( object , 1 ) ;"	1270:1:34047:34082	1897893	1	True				
ANR	1897903	CallExpression	"sxe_get_prop_hash ( object , 1 )"		1897893	0					
ANR	1897904	Callee	sxe_get_prop_hash		1897893	0					
ANR	1897905	Identifier	sxe_get_prop_hash		1897893	0					
ANR	1897906	ArgumentList	object		1897893	1					
ANR	1897907	Argument	object		1897893	0					
ANR	1897908	Identifier	object		1897893	0					
ANR	1897909	Argument	1		1897893	1					
ANR	1897910	PrimaryExpression	1		1897893	0					
ANR	1897911	ReturnType	static HashTable *		1897893	1					
ANR	1897912	Identifier	sxe_get_debug_info		1897893	2					
ANR	1897913	ParameterList	"zval * object , int * is_temp"		1897893	3					
ANR	1897914	Parameter	zval * object	1267:38:33991:34002	1897893	0	True				
ANR	1897915	ParameterType	zval *		1897893	0					
ANR	1897916	Identifier	object		1897893	1					
ANR	1897917	Parameter	int * is_temp	1267:52:34005:34016	1897893	1	True				
ANR	1897918	ParameterType	int *		1897893	0					
ANR	1897919	Identifier	is_temp		1897893	1					
ANR	1897920	CFGEntryNode	ENTRY		1897893		True				
ANR	1897921	CFGExitNode	EXIT		1897893		True				
ANR	1897922	Symbol	sxe_get_prop_hash		1897893						
ANR	1897923	Symbol	is_temp		1897893						
ANR	1897924	Symbol	object		1897893						
ANR	1897925	Symbol	* is_temp		1897893						
ANR	1897926	Function	sxe_objects_compare	1274:0:34097:34474							
ANR	1897927	FunctionDef	"sxe_objects_compare (zval * object1 , zval * object2)"		1897926	0					
ANR	1897928	CompoundStatement		1275:0:34168:34474	1897926	0					
ANR	1897929	IdentifierDeclStatement	php_sxe_object * sxe1 ;	1276:1:34171:34191	1897926	0	True				
ANR	1897930	IdentifierDecl	* sxe1		1897926	0					
ANR	1897931	IdentifierDeclType	php_sxe_object *		1897926	0					
ANR	1897932	Identifier	sxe1		1897926	1					
ANR	1897933	IdentifierDeclStatement	php_sxe_object * sxe2 ;	1277:1:34194:34214	1897926	1	True				
ANR	1897934	IdentifierDecl	* sxe2		1897926	0					
ANR	1897935	IdentifierDeclType	php_sxe_object *		1897926	0					
ANR	1897936	Identifier	sxe2		1897926	1					
ANR	1897937	ExpressionStatement	sxe1 = Z_SXEOBJ_P ( object1 )	1279:1:34218:34244	1897926	2	True				
ANR	1897938	AssignmentExpression	sxe1 = Z_SXEOBJ_P ( object1 )		1897926	0		=			
ANR	1897939	Identifier	sxe1		1897926	0					
ANR	1897940	CallExpression	Z_SXEOBJ_P ( object1 )		1897926	1					
ANR	1897941	Callee	Z_SXEOBJ_P		1897926	0					
ANR	1897942	Identifier	Z_SXEOBJ_P		1897926	0					
ANR	1897943	ArgumentList	object1		1897926	1					
ANR	1897944	Argument	object1		1897926	0					
ANR	1897945	Identifier	object1		1897926	0					
ANR	1897946	ExpressionStatement	sxe2 = Z_SXEOBJ_P ( object2 )	1280:1:34247:34273	1897926	3	True				
ANR	1897947	AssignmentExpression	sxe2 = Z_SXEOBJ_P ( object2 )		1897926	0		=			
ANR	1897948	Identifier	sxe2		1897926	0					
ANR	1897949	CallExpression	Z_SXEOBJ_P ( object2 )		1897926	1					
ANR	1897950	Callee	Z_SXEOBJ_P		1897926	0					
ANR	1897951	Identifier	Z_SXEOBJ_P		1897926	0					
ANR	1897952	ArgumentList	object2		1897926	1					
ANR	1897953	Argument	object2		1897926	0					
ANR	1897954	Identifier	object2		1897926	0					
ANR	1897955	IfStatement	if ( sxe1 -> node == NULL )		1897926	4					
ANR	1897956	Condition	sxe1 -> node == NULL	1282:5:34281:34298	1897926	0	True				
ANR	1897957	EqualityExpression	sxe1 -> node == NULL		1897926	0		==			
ANR	1897958	PtrMemberAccess	sxe1 -> node		1897926	0					
ANR	1897959	Identifier	sxe1		1897926	0					
ANR	1897960	Identifier	node		1897926	1					
ANR	1897961	Identifier	NULL		1897926	1					
ANR	1897962	CompoundStatement		8:25:132:132	1897926	1					
ANR	1897963	IfStatement	if ( sxe2 -> node )		1897926	0					
ANR	1897964	Condition	sxe2 -> node	1283:6:34309:34318	1897926	0	True				
ANR	1897965	PtrMemberAccess	sxe2 -> node		1897926	0					
ANR	1897966	Identifier	sxe2		1897926	0					
ANR	1897967	Identifier	node		1897926	1					
ANR	1897968	CompoundStatement		9:18:152:152	1897926	1					
ANR	1897969	ReturnStatement	return 1 ;	1284:3:34326:34334	1897926	0	True				
ANR	1897970	PrimaryExpression	1		1897926	0					
ANR	1897971	ElseStatement	else		1897926	0					
ANR	1897972	IfStatement	if ( sxe1 -> document -> ptr == sxe2 -> document -> ptr )		1897926	0					
ANR	1897973	Condition	sxe1 -> document -> ptr == sxe2 -> document -> ptr	1285:13:34349:34390	1897926	0	True				
ANR	1897974	EqualityExpression	sxe1 -> document -> ptr == sxe2 -> document -> ptr		1897926	0		==			
ANR	1897975	PtrMemberAccess	sxe1 -> document -> ptr		1897926	0					
ANR	1897976	PtrMemberAccess	sxe1 -> document		1897926	0					
ANR	1897977	Identifier	sxe1		1897926	0					
ANR	1897978	Identifier	document		1897926	1					
ANR	1897979	Identifier	ptr		1897926	1					
ANR	1897980	PtrMemberAccess	sxe2 -> document -> ptr		1897926	1					
ANR	1897981	PtrMemberAccess	sxe2 -> document		1897926	0					
ANR	1897982	Identifier	sxe2		1897926	0					
ANR	1897983	Identifier	document		1897926	1					
ANR	1897984	Identifier	ptr		1897926	1					
ANR	1897985	CompoundStatement		11:57:224:224	1897926	1					
ANR	1897986	ReturnStatement	return 0 ;	1286:3:34398:34406	1897926	0	True				
ANR	1897987	PrimaryExpression	0		1897926	0					
ANR	1897988	ElseStatement	else		1897926	0					
ANR	1897989	CompoundStatement		14:8:251:251	1897926	0					
ANR	1897990	ReturnStatement	return ! ( sxe1 -> node == sxe2 -> node ) ;	1289:2:34424:34458	1897926	0	True				
ANR	1897991	UnaryOperationExpression	! ( sxe1 -> node == sxe2 -> node )		1897926	0					
ANR	1897992	UnaryOperator	!		1897926	0					
ANR	1897993	EqualityExpression	sxe1 -> node == sxe2 -> node		1897926	1		==			
ANR	1897994	PtrMemberAccess	sxe1 -> node		1897926	0					
ANR	1897995	Identifier	sxe1		1897926	0					
ANR	1897996	Identifier	node		1897926	1					
ANR	1897997	PtrMemberAccess	sxe2 -> node		1897926	1					
ANR	1897998	Identifier	sxe2		1897926	0					
ANR	1897999	Identifier	node		1897926	1					
ANR	1898000	ReturnStatement	return 1 ;	1291:1:34464:34472	1897926	5	True				
ANR	1898001	PrimaryExpression	1		1897926	0					
ANR	1898002	ReturnType	static int		1897926	1					
ANR	1898003	Identifier	sxe_objects_compare		1897926	2					
ANR	1898004	ParameterList	"zval * object1 , zval * object2"		1897926	3					
ANR	1898005	Parameter	zval * object1	1274:31:34128:34140	1897926	0	True				
ANR	1898006	ParameterType	zval *		1897926	0					
ANR	1898007	Identifier	object1		1897926	1					
ANR	1898008	Parameter	zval * object2	1274:46:34143:34155	1897926	1	True				
ANR	1898009	ParameterType	zval *		1897926	0					
ANR	1898010	Identifier	object2		1897926	1					
ANR	1898011	CFGEntryNode	ENTRY		1897926		True				
ANR	1898012	CFGExitNode	EXIT		1897926		True				
ANR	1898013	Symbol	object2		1897926						
ANR	1898014	Symbol	* * sxe1		1897926						
ANR	1898015	Symbol	object1		1897926						
ANR	1898016	Symbol	NULL		1897926						
ANR	1898017	Symbol	* sxe1		1897926						
ANR	1898018	Symbol	* * sxe2		1897926						
ANR	1898019	Symbol	sxe2		1897926						
ANR	1898020	Symbol	sxe1		1897926						
ANR	1898021	Symbol	sxe2 -> document		1897926						
ANR	1898022	Symbol	sxe1 -> document		1897926						
ANR	1898023	Symbol	* sxe2		1897926						
ANR	1898024	Symbol	* sxe1 -> document		1897926						
ANR	1898025	Symbol	* sxe2 -> document		1897926						
ANR	1898026	Symbol	sxe2 -> document -> ptr		1897926						
ANR	1898027	Symbol	sxe1 -> document -> ptr		1897926						
ANR	1898028	Symbol	sxe1 -> node		1897926						
ANR	1898029	Symbol	sxe2 -> node		1897926						
ANR	1898030	Symbol	Z_SXEOBJ_P		1897926						
ANR	1898031	DeclStmt									
ANR	1898032	Decl							php_sxe_object	php_sxe_object *	sxe
ANR	1898033	DeclStmt									
ANR	1898034	Decl							zval	zval	value
ANR	1898035	DeclStmt									
ANR	1898036	Decl							char	char *	query
ANR	1898037	DeclStmt									
ANR	1898038	Decl							size_t	size_t	query_len
ANR	1898039	DeclStmt									
ANR	1898040	Decl							int	int	i
ANR	1898041	DeclStmt									
ANR	1898042	Decl							int	int	nsnbr
ANR	1898043	DeclStmt									
ANR	1898044	Decl							xmlNsPtr	xmlNsPtr *	ns
ANR	1898045	DeclStmt									
ANR	1898046	Decl							xmlXPathObjectPtr	xmlXPathObjectPtr	retval
ANR	1898047	DeclStmt									
ANR	1898048	Decl							xmlNodeSetPtr	xmlNodeSetPtr	result
ANR	1898049	DeclStmt									
ANR	1898050	Decl							xmlNodePtr	xmlNodePtr	nodeptr
ANR	1898051	DeclStmt									
ANR	1898052	Decl							php_sxe_object	php_sxe_object *	sxe
ANR	1898053	DeclStmt									
ANR	1898054	Decl							size_t	size_t	prefix_len
ANR	1898055	Decl							size_t	size_t	ns_uri_len
ANR	1898056	DeclStmt									
ANR	1898057	Decl							char	char *	prefix
ANR	1898058	Decl							char	char *	ns_uri
ANR	1898059	DeclStmt									
ANR	1898060	Decl							php_sxe_object	php_sxe_object *	sxe
ANR	1898061	DeclStmt									
ANR	1898062	Decl							xmlNodePtr	xmlNodePtr	node
ANR	1898063	DeclStmt									
ANR	1898064	Decl							xmlOutputBufferPtr	xmlOutputBufferPtr	outbuf
ANR	1898065	DeclStmt									
ANR	1898066	Decl							xmlChar	xmlChar *	strval
ANR	1898067	DeclStmt									
ANR	1898068	Decl							int	int	strval_len
ANR	1898069	DeclStmt									
ANR	1898070	Decl							char	char *	filename
ANR	1898071	DeclStmt									
ANR	1898072	Decl							size_t	size_t	filename_len
ANR	1898073	DeclStmt									
ANR	1898074	Decl							int	int	bytes
ANR	1898075	Function	sxe_add_namespace_name	1494:0:39711:40090							
ANR	1898076	FunctionDef	"sxe_add_namespace_name (zval * return_value , xmlNsPtr ns)"		1898075	0					
ANR	1898077	CompoundStatement		1495:0:39796:40090	1898075	0					
ANR	1898078	IdentifierDeclStatement	char * prefix = SXE_NS_PREFIX ( ns ) ;	1496:1:39799:39831	1898075	0	True				
ANR	1898079	IdentifierDecl	* prefix = SXE_NS_PREFIX ( ns )		1898075	0					
ANR	1898080	IdentifierDeclType	char *		1898075	0					
ANR	1898081	Identifier	prefix		1898075	1					
ANR	1898082	AssignmentExpression	* prefix = SXE_NS_PREFIX ( ns )		1898075	2		=			
ANR	1898083	Identifier	prefix		1898075	0					
ANR	1898084	CallExpression	SXE_NS_PREFIX ( ns )		1898075	1					
ANR	1898085	Callee	SXE_NS_PREFIX		1898075	0					
ANR	1898086	Identifier	SXE_NS_PREFIX		1898075	0					
ANR	1898087	ArgumentList	ns		1898075	1					
ANR	1898088	Argument	ns		1898075	0					
ANR	1898089	Identifier	ns		1898075	0					
ANR	1898090	IdentifierDeclStatement	"zend_string * key = zend_string_init ( prefix , strlen ( prefix ) , 0 ) ;"	1497:1:39834:39896	1898075	1	True				
ANR	1898091	IdentifierDecl	"* key = zend_string_init ( prefix , strlen ( prefix ) , 0 )"		1898075	0					
ANR	1898092	IdentifierDeclType	zend_string *		1898075	0					
ANR	1898093	Identifier	key		1898075	1					
ANR	1898094	AssignmentExpression	"* key = zend_string_init ( prefix , strlen ( prefix ) , 0 )"		1898075	2		=			
ANR	1898095	Identifier	key		1898075	0					
ANR	1898096	CallExpression	"zend_string_init ( prefix , strlen ( prefix ) , 0 )"		1898075	1					
ANR	1898097	Callee	zend_string_init		1898075	0					
ANR	1898098	Identifier	zend_string_init		1898075	0					
ANR	1898099	ArgumentList	prefix		1898075	1					
ANR	1898100	Argument	prefix		1898075	0					
ANR	1898101	Identifier	prefix		1898075	0					
ANR	1898102	Argument	strlen ( prefix )		1898075	1					
ANR	1898103	CallExpression	strlen ( prefix )		1898075	0					
ANR	1898104	Callee	strlen		1898075	0					
ANR	1898105	Identifier	strlen		1898075	0					
ANR	1898106	ArgumentList	prefix		1898075	1					
ANR	1898107	Argument	prefix		1898075	0					
ANR	1898108	Identifier	prefix		1898075	0					
ANR	1898109	Argument	0		1898075	2					
ANR	1898110	PrimaryExpression	0		1898075	0					
ANR	1898111	IdentifierDeclStatement	zval zv ;	1498:1:39899:39906	1898075	2	True				
ANR	1898112	IdentifierDecl	zv		1898075	0					
ANR	1898113	IdentifierDeclType	zval		1898075	0					
ANR	1898114	Identifier	zv		1898075	1					
ANR	1898115	IfStatement	"if ( ! zend_hash_exists ( Z_ARRVAL_P ( return_value ) , key ) )"		1898075	3					
ANR	1898116	Condition	"! zend_hash_exists ( Z_ARRVAL_P ( return_value ) , key )"	1500:5:39914:39961	1898075	0	True				
ANR	1898117	UnaryOperationExpression	"! zend_hash_exists ( Z_ARRVAL_P ( return_value ) , key )"		1898075	0					
ANR	1898118	UnaryOperator	!		1898075	0					
ANR	1898119	CallExpression	"zend_hash_exists ( Z_ARRVAL_P ( return_value ) , key )"		1898075	1					
ANR	1898120	Callee	zend_hash_exists		1898075	0					
ANR	1898121	Identifier	zend_hash_exists		1898075	0					
ANR	1898122	ArgumentList	Z_ARRVAL_P ( return_value )		1898075	1					
ANR	1898123	Argument	Z_ARRVAL_P ( return_value )		1898075	0					
ANR	1898124	CallExpression	Z_ARRVAL_P ( return_value )		1898075	0					
ANR	1898125	Callee	Z_ARRVAL_P		1898075	0					
ANR	1898126	Identifier	Z_ARRVAL_P		1898075	0					
ANR	1898127	ArgumentList	return_value		1898075	1					
ANR	1898128	Argument	return_value		1898075	0					
ANR	1898129	Identifier	return_value		1898075	0					
ANR	1898130	Argument	key		1898075	1					
ANR	1898131	Identifier	key		1898075	0					
ANR	1898132	CompoundStatement		6:55:167:167	1898075	1					
ANR	1898133	ExpressionStatement	"ZVAL_STRING ( & zv , ( char * ) ns -> href )"	1501:2:39968:40001	1898075	0	True				
ANR	1898134	CallExpression	"ZVAL_STRING ( & zv , ( char * ) ns -> href )"		1898075	0					
ANR	1898135	Callee	ZVAL_STRING		1898075	0					
ANR	1898136	Identifier	ZVAL_STRING		1898075	0					
ANR	1898137	ArgumentList	& zv		1898075	1					
ANR	1898138	Argument	& zv		1898075	0					
ANR	1898139	UnaryOperationExpression	& zv		1898075	0					
ANR	1898140	UnaryOperator	&		1898075	0					
ANR	1898141	Identifier	zv		1898075	1					
ANR	1898142	Argument	( char * ) ns -> href		1898075	1					
ANR	1898143	CastExpression	( char * ) ns -> href		1898075	0					
ANR	1898144	CastTarget	char *		1898075	0					
ANR	1898145	PtrMemberAccess	ns -> href		1898075	1					
ANR	1898146	Identifier	ns		1898075	0					
ANR	1898147	Identifier	href		1898075	1					
ANR	1898148	ExpressionStatement	"zend_hash_add_new ( Z_ARRVAL_P ( return_value ) , key , & zv )"	1502:2:40005:40058	1898075	1	True				
ANR	1898149	CallExpression	"zend_hash_add_new ( Z_ARRVAL_P ( return_value ) , key , & zv )"		1898075	0					
ANR	1898150	Callee	zend_hash_add_new		1898075	0					
ANR	1898151	Identifier	zend_hash_add_new		1898075	0					
ANR	1898152	ArgumentList	Z_ARRVAL_P ( return_value )		1898075	1					
ANR	1898153	Argument	Z_ARRVAL_P ( return_value )		1898075	0					
ANR	1898154	CallExpression	Z_ARRVAL_P ( return_value )		1898075	0					
ANR	1898155	Callee	Z_ARRVAL_P		1898075	0					
ANR	1898156	Identifier	Z_ARRVAL_P		1898075	0					
ANR	1898157	ArgumentList	return_value		1898075	1					
ANR	1898158	Argument	return_value		1898075	0					
ANR	1898159	Identifier	return_value		1898075	0					
ANR	1898160	Argument	key		1898075	1					
ANR	1898161	Identifier	key		1898075	0					
ANR	1898162	Argument	& zv		1898075	2					
ANR	1898163	UnaryOperationExpression	& zv		1898075	0					
ANR	1898164	UnaryOperator	&		1898075	0					
ANR	1898165	Identifier	zv		1898075	1					
ANR	1898166	ExpressionStatement	zend_string_release ( key )	1504:1:40064:40088	1898075	4	True				
ANR	1898167	CallExpression	zend_string_release ( key )		1898075	0					
ANR	1898168	Callee	zend_string_release		1898075	0					
ANR	1898169	Identifier	zend_string_release		1898075	0					
ANR	1898170	ArgumentList	key		1898075	1					
ANR	1898171	Argument	key		1898075	0					
ANR	1898172	Identifier	key		1898075	0					
ANR	1898173	ReturnType	static inline void		1898075	1					
ANR	1898174	Identifier	sxe_add_namespace_name		1898075	2					
ANR	1898175	ParameterList	"zval * return_value , xmlNsPtr ns"		1898075	3					
ANR	1898176	Parameter	zval * return_value	1494:42:39753:39770	1898075	0	True				
ANR	1898177	ParameterType	zval *		1898075	0					
ANR	1898178	Identifier	return_value		1898075	1					
ANR	1898179	Parameter	xmlNsPtr ns	1494:62:39773:39783	1898075	1	True				
ANR	1898180	ParameterType	xmlNsPtr		1898075	0					
ANR	1898181	Identifier	ns		1898075	1					
ANR	1898182	CFGEntryNode	ENTRY		1898075		True				
ANR	1898183	CFGExitNode	EXIT		1898075		True				
ANR	1898184	Symbol	return_value		1898075						
ANR	1898185	Symbol	ns		1898075						
ANR	1898186	Symbol	prefix		1898075						
ANR	1898187	Symbol	& zv		1898075						
ANR	1898188	Symbol	* ns		1898075						
ANR	1898189	Symbol	SXE_NS_PREFIX		1898075						
ANR	1898190	Symbol	zend_hash_exists		1898075						
ANR	1898191	Symbol	zend_string_init		1898075						
ANR	1898192	Symbol	strlen		1898075						
ANR	1898193	Symbol	ns -> href		1898075						
ANR	1898194	Symbol	zv		1898075						
ANR	1898195	Symbol	Z_ARRVAL_P		1898075						
ANR	1898196	Symbol	key		1898075						
ANR	1898197	Function	sxe_add_namespaces	1508:0:40103:40651							
ANR	1898198	FunctionDef	"sxe_add_namespaces (php_sxe_object * sxe , xmlNodePtr node , zend_bool recursive , zval * return_value)"		1898197	0					
ANR	1898199	CompoundStatement		1509:0:40223:40651	1898197	0					
ANR	1898200	IdentifierDeclStatement	xmlAttrPtr attr ;	1510:1:40226:40242	1898197	0	True				
ANR	1898201	IdentifierDecl	attr		1898197	0					
ANR	1898202	IdentifierDeclType	xmlAttrPtr		1898197	0					
ANR	1898203	Identifier	attr		1898197	1					
ANR	1898204	IfStatement	if ( node -> ns )		1898197	1					
ANR	1898205	Condition	node -> ns	1512:5:40250:40257	1898197	0	True				
ANR	1898206	PtrMemberAccess	node -> ns		1898197	0					
ANR	1898207	Identifier	node		1898197	0					
ANR	1898208	Identifier	ns		1898197	1					
ANR	1898209	CompoundStatement		4:15:36:36	1898197	1					
ANR	1898210	ExpressionStatement	"sxe_add_namespace_name ( return_value , node -> ns )"	1513:2:40264:40310	1898197	0	True				
ANR	1898211	CallExpression	"sxe_add_namespace_name ( return_value , node -> ns )"		1898197	0					
ANR	1898212	Callee	sxe_add_namespace_name		1898197	0					
ANR	1898213	Identifier	sxe_add_namespace_name		1898197	0					
ANR	1898214	ArgumentList	return_value		1898197	1					
ANR	1898215	Argument	return_value		1898197	0					
ANR	1898216	Identifier	return_value		1898197	0					
ANR	1898217	Argument	node -> ns		1898197	1					
ANR	1898218	PtrMemberAccess	node -> ns		1898197	0					
ANR	1898219	Identifier	node		1898197	0					
ANR	1898220	Identifier	ns		1898197	1					
ANR	1898221	ExpressionStatement	attr = node -> properties	1516:1:40317:40340	1898197	2	True				
ANR	1898222	AssignmentExpression	attr = node -> properties		1898197	0		=			
ANR	1898223	Identifier	attr		1898197	0					
ANR	1898224	PtrMemberAccess	node -> properties		1898197	1					
ANR	1898225	Identifier	node		1898197	0					
ANR	1898226	Identifier	properties		1898197	1					
ANR	1898227	WhileStatement	while ( attr )		1898197	3					
ANR	1898228	Condition	attr	1517:8:40350:40353	1898197	0	True				
ANR	1898229	Identifier	attr		1898197	0					
ANR	1898230	CompoundStatement		9:14:132:132	1898197	1					
ANR	1898231	IfStatement	if ( attr -> ns )		1898197	0					
ANR	1898232	Condition	attr -> ns	1518:6:40364:40371	1898197	0	True				
ANR	1898233	PtrMemberAccess	attr -> ns		1898197	0					
ANR	1898234	Identifier	attr		1898197	0					
ANR	1898235	Identifier	ns		1898197	1					
ANR	1898236	CompoundStatement		10:16:150:150	1898197	1					
ANR	1898237	ExpressionStatement	"sxe_add_namespace_name ( return_value , attr -> ns )"	1519:3:40379:40425	1898197	0	True				
ANR	1898238	CallExpression	"sxe_add_namespace_name ( return_value , attr -> ns )"		1898197	0					
ANR	1898239	Callee	sxe_add_namespace_name		1898197	0					
ANR	1898240	Identifier	sxe_add_namespace_name		1898197	0					
ANR	1898241	ArgumentList	return_value		1898197	1					
ANR	1898242	Argument	return_value		1898197	0					
ANR	1898243	Identifier	return_value		1898197	0					
ANR	1898244	Argument	attr -> ns		1898197	1					
ANR	1898245	PtrMemberAccess	attr -> ns		1898197	0					
ANR	1898246	Identifier	attr		1898197	0					
ANR	1898247	Identifier	ns		1898197	1					
ANR	1898248	ExpressionStatement	attr = attr -> next	1521:2:40433:40450	1898197	1	True				
ANR	1898249	AssignmentExpression	attr = attr -> next		1898197	0		=			
ANR	1898250	Identifier	attr		1898197	0					
ANR	1898251	PtrMemberAccess	attr -> next		1898197	1					
ANR	1898252	Identifier	attr		1898197	0					
ANR	1898253	Identifier	next		1898197	1					
ANR	1898254	IfStatement	if ( recursive )		1898197	4					
ANR	1898255	Condition	recursive	1524:5:40461:40469	1898197	0	True				
ANR	1898256	Identifier	recursive		1898197	0					
ANR	1898257	CompoundStatement		16:16:248:248	1898197	1					
ANR	1898258	ExpressionStatement	node = node -> children	1525:2:40476:40497	1898197	0	True				
ANR	1898259	AssignmentExpression	node = node -> children		1898197	0		=			
ANR	1898260	Identifier	node		1898197	0					
ANR	1898261	PtrMemberAccess	node -> children		1898197	1					
ANR	1898262	Identifier	node		1898197	0					
ANR	1898263	Identifier	children		1898197	1					
ANR	1898264	WhileStatement	while ( node )		1898197	1					
ANR	1898265	Condition	node	1526:9:40508:40511	1898197	0	True				
ANR	1898266	Identifier	node		1898197	0					
ANR	1898267	CompoundStatement		18:15:290:290	1898197	1					
ANR	1898268	IfStatement	if ( node -> type == XML_ELEMENT_NODE )		1898197	0					
ANR	1898269	Condition	node -> type == XML_ELEMENT_NODE	1527:7:40523:40552	1898197	0	True				
ANR	1898270	EqualityExpression	node -> type == XML_ELEMENT_NODE		1898197	0		==			
ANR	1898271	PtrMemberAccess	node -> type		1898197	0					
ANR	1898272	Identifier	node		1898197	0					
ANR	1898273	Identifier	type		1898197	1					
ANR	1898274	Identifier	XML_ELEMENT_NODE		1898197	1					
ANR	1898275	CompoundStatement		19:39:331:331	1898197	1					
ANR	1898276	ExpressionStatement	"sxe_add_namespaces ( sxe , node , recursive , return_value )"	1528:4:40561:40615	1898197	0	True				
ANR	1898277	CallExpression	"sxe_add_namespaces ( sxe , node , recursive , return_value )"		1898197	0					
ANR	1898278	Callee	sxe_add_namespaces		1898197	0					
ANR	1898279	Identifier	sxe_add_namespaces		1898197	0					
ANR	1898280	ArgumentList	sxe		1898197	1					
ANR	1898281	Argument	sxe		1898197	0					
ANR	1898282	Identifier	sxe		1898197	0					
ANR	1898283	Argument	node		1898197	1					
ANR	1898284	Identifier	node		1898197	0					
ANR	1898285	Argument	recursive		1898197	2					
ANR	1898286	Identifier	recursive		1898197	0					
ANR	1898287	Argument	return_value		1898197	3					
ANR	1898288	Identifier	return_value		1898197	0					
ANR	1898289	ExpressionStatement	node = node -> next	1530:3:40625:40642	1898197	1	True				
ANR	1898290	AssignmentExpression	node = node -> next		1898197	0		=			
ANR	1898291	Identifier	node		1898197	0					
ANR	1898292	PtrMemberAccess	node -> next		1898197	1					
ANR	1898293	Identifier	node		1898197	0					
ANR	1898294	Identifier	next		1898197	1					
ANR	1898295	ReturnType	static void		1898197	1					
ANR	1898296	Identifier	sxe_add_namespaces		1898197	2					
ANR	1898297	ParameterList	"php_sxe_object * sxe , xmlNodePtr node , zend_bool recursive , zval * return_value"		1898197	3					
ANR	1898298	Parameter	php_sxe_object * sxe	1508:31:40134:40152	1898197	0	True				
ANR	1898299	ParameterType	php_sxe_object *		1898197	0					
ANR	1898300	Identifier	sxe		1898197	1					
ANR	1898301	Parameter	xmlNodePtr node	1508:52:40155:40169	1898197	1	True				
ANR	1898302	ParameterType	xmlNodePtr		1898197	0					
ANR	1898303	Identifier	node		1898197	1					
ANR	1898304	Parameter	zend_bool recursive	1508:69:40172:40190	1898197	2	True				
ANR	1898305	ParameterType	zend_bool		1898197	0					
ANR	1898306	Identifier	recursive		1898197	1					
ANR	1898307	Parameter	zval * return_value	1508:90:40193:40210	1898197	3	True				
ANR	1898308	ParameterType	zval *		1898197	0					
ANR	1898309	Identifier	return_value		1898197	1					
ANR	1898310	CFGEntryNode	ENTRY		1898197		True				
ANR	1898311	CFGExitNode	EXIT		1898197		True				
ANR	1898312	Symbol	sxe		1898197						
ANR	1898313	Symbol	node -> ns		1898197						
ANR	1898314	Symbol	attr -> next		1898197						
ANR	1898315	Symbol	return_value		1898197						
ANR	1898316	Symbol	XML_ELEMENT_NODE		1898197						
ANR	1898317	Symbol	node -> properties		1898197						
ANR	1898318	Symbol	node -> next		1898197						
ANR	1898319	Symbol	recursive		1898197						
ANR	1898320	Symbol	node		1898197						
ANR	1898321	Symbol	attr -> ns		1898197						
ANR	1898322	Symbol	node -> type		1898197						
ANR	1898323	Symbol	* node		1898197						
ANR	1898324	Symbol	* attr		1898197						
ANR	1898325	Symbol	attr		1898197						
ANR	1898326	Symbol	node -> children		1898197						
ANR	1898327	DeclStmt									
ANR	1898328	Decl							zend_bool	zend_bool	recursive
ANR	1898329	DeclStmt									
ANR	1898330	Decl							php_sxe_object	php_sxe_object *	sxe
ANR	1898331	DeclStmt									
ANR	1898332	Decl							xmlNodePtr	xmlNodePtr	node
ANR	1898333	Function	sxe_add_registered_namespaces	1563:0:41344:41810							
ANR	1898334	FunctionDef	"sxe_add_registered_namespaces (php_sxe_object * sxe , xmlNodePtr node , zend_bool recursive , zval * return_value)"		1898333	0					
ANR	1898335	CompoundStatement		1564:0:41475:41810	1898333	0					
ANR	1898336	IdentifierDeclStatement	xmlNsPtr ns ;	1565:1:41478:41489	1898333	0	True				
ANR	1898337	IdentifierDecl	ns		1898333	0					
ANR	1898338	IdentifierDeclType	xmlNsPtr		1898333	0					
ANR	1898339	Identifier	ns		1898333	1					
ANR	1898340	IfStatement	if ( node -> type == XML_ELEMENT_NODE )		1898333	1					
ANR	1898341	Condition	node -> type == XML_ELEMENT_NODE	1567:5:41497:41526	1898333	0	True				
ANR	1898342	EqualityExpression	node -> type == XML_ELEMENT_NODE		1898333	0		==			
ANR	1898343	PtrMemberAccess	node -> type		1898333	0					
ANR	1898344	Identifier	node		1898333	0					
ANR	1898345	Identifier	type		1898333	1					
ANR	1898346	Identifier	XML_ELEMENT_NODE		1898333	1					
ANR	1898347	CompoundStatement		4:37:53:53	1898333	1					
ANR	1898348	ExpressionStatement	ns = node -> nsDef	1568:2:41533:41549	1898333	0	True				
ANR	1898349	AssignmentExpression	ns = node -> nsDef		1898333	0		=			
ANR	1898350	Identifier	ns		1898333	0					
ANR	1898351	PtrMemberAccess	node -> nsDef		1898333	1					
ANR	1898352	Identifier	node		1898333	0					
ANR	1898353	Identifier	nsDef		1898333	1					
ANR	1898354	WhileStatement	while ( ns != NULL )		1898333	1					
ANR	1898355	Condition	ns != NULL	1569:9:41560:41569	1898333	0	True				
ANR	1898356	EqualityExpression	ns != NULL		1898333	0		!=			
ANR	1898357	Identifier	ns		1898333	0					
ANR	1898358	Identifier	NULL		1898333	1					
ANR	1898359	CompoundStatement		6:21:96:96	1898333	1					
ANR	1898360	ExpressionStatement	"sxe_add_namespace_name ( return_value , ns )"	1570:3:41577:41617	1898333	0	True				
ANR	1898361	CallExpression	"sxe_add_namespace_name ( return_value , ns )"		1898333	0					
ANR	1898362	Callee	sxe_add_namespace_name		1898333	0					
ANR	1898363	Identifier	sxe_add_namespace_name		1898333	0					
ANR	1898364	ArgumentList	return_value		1898333	1					
ANR	1898365	Argument	return_value		1898333	0					
ANR	1898366	Identifier	return_value		1898333	0					
ANR	1898367	Argument	ns		1898333	1					
ANR	1898368	Identifier	ns		1898333	0					
ANR	1898369	ExpressionStatement	ns = ns -> next	1571:3:41622:41635	1898333	1	True				
ANR	1898370	AssignmentExpression	ns = ns -> next		1898333	0		=			
ANR	1898371	Identifier	ns		1898333	0					
ANR	1898372	PtrMemberAccess	ns -> next		1898333	1					
ANR	1898373	Identifier	ns		1898333	0					
ANR	1898374	Identifier	next		1898333	1					
ANR	1898375	IfStatement	if ( recursive )		1898333	2					
ANR	1898376	Condition	recursive	1573:6:41647:41655	1898333	0	True				
ANR	1898377	Identifier	recursive		1898333	0					
ANR	1898378	CompoundStatement		10:17:182:182	1898333	1					
ANR	1898379	ExpressionStatement	node = node -> children	1574:3:41663:41684	1898333	0	True				
ANR	1898380	AssignmentExpression	node = node -> children		1898333	0		=			
ANR	1898381	Identifier	node		1898333	0					
ANR	1898382	PtrMemberAccess	node -> children		1898333	1					
ANR	1898383	Identifier	node		1898333	0					
ANR	1898384	Identifier	children		1898333	1					
ANR	1898385	WhileStatement	while ( node )		1898333	1					
ANR	1898386	Condition	node	1575:10:41696:41699	1898333	0	True				
ANR	1898387	Identifier	node		1898333	0					
ANR	1898388	CompoundStatement		12:16:226:226	1898333	1					
ANR	1898389	ExpressionStatement	"sxe_add_registered_namespaces ( sxe , node , recursive , return_value )"	1576:4:41708:41773	1898333	0	True				
ANR	1898390	CallExpression	"sxe_add_registered_namespaces ( sxe , node , recursive , return_value )"		1898333	0					
ANR	1898391	Callee	sxe_add_registered_namespaces		1898333	0					
ANR	1898392	Identifier	sxe_add_registered_namespaces		1898333	0					
ANR	1898393	ArgumentList	sxe		1898333	1					
ANR	1898394	Argument	sxe		1898333	0					
ANR	1898395	Identifier	sxe		1898333	0					
ANR	1898396	Argument	node		1898333	1					
ANR	1898397	Identifier	node		1898333	0					
ANR	1898398	Argument	recursive		1898333	2					
ANR	1898399	Identifier	recursive		1898333	0					
ANR	1898400	Argument	return_value		1898333	3					
ANR	1898401	Identifier	return_value		1898333	0					
ANR	1898402	ExpressionStatement	node = node -> next	1577:4:41779:41796	1898333	1	True				
ANR	1898403	AssignmentExpression	node = node -> next		1898333	0		=			
ANR	1898404	Identifier	node		1898333	0					
ANR	1898405	PtrMemberAccess	node -> next		1898333	1					
ANR	1898406	Identifier	node		1898333	0					
ANR	1898407	Identifier	next		1898333	1					
ANR	1898408	ReturnType	static void		1898333	1					
ANR	1898409	Identifier	sxe_add_registered_namespaces		1898333	2					
ANR	1898410	ParameterList	"php_sxe_object * sxe , xmlNodePtr node , zend_bool recursive , zval * return_value"		1898333	3					
ANR	1898411	Parameter	php_sxe_object * sxe	1563:42:41386:41404	1898333	0	True				
ANR	1898412	ParameterType	php_sxe_object *		1898333	0					
ANR	1898413	Identifier	sxe		1898333	1					
ANR	1898414	Parameter	xmlNodePtr node	1563:63:41407:41421	1898333	1	True				
ANR	1898415	ParameterType	xmlNodePtr		1898333	0					
ANR	1898416	Identifier	node		1898333	1					
ANR	1898417	Parameter	zend_bool recursive	1563:80:41424:41442	1898333	2	True				
ANR	1898418	ParameterType	zend_bool		1898333	0					
ANR	1898419	Identifier	recursive		1898333	1					
ANR	1898420	Parameter	zval * return_value	1563:101:41445:41462	1898333	3	True				
ANR	1898421	ParameterType	zval *		1898333	0					
ANR	1898422	Identifier	return_value		1898333	1					
ANR	1898423	CFGEntryNode	ENTRY		1898333		True				
ANR	1898424	CFGExitNode	EXIT		1898333		True				
ANR	1898425	Symbol	sxe		1898333						
ANR	1898426	Symbol	return_value		1898333						
ANR	1898427	Symbol	XML_ELEMENT_NODE		1898333						
ANR	1898428	Symbol	NULL		1898333						
ANR	1898429	Symbol	ns		1898333						
ANR	1898430	Symbol	* ns		1898333						
ANR	1898431	Symbol	node -> nsDef		1898333						
ANR	1898432	Symbol	ns -> next		1898333						
ANR	1898433	Symbol	node -> next		1898333						
ANR	1898434	Symbol	recursive		1898333						
ANR	1898435	Symbol	node		1898333						
ANR	1898436	Symbol	node -> type		1898333						
ANR	1898437	Symbol	* node		1898333						
ANR	1898438	Symbol	node -> children		1898333						
ANR	1898439	DeclStmt									
ANR	1898440	Decl							zend_bool	zend_bool	recursive
ANR	1898441	Decl							zend_bool	zend_bool	from_root
ANR	1898442	DeclStmt									
ANR	1898443	Decl							php_sxe_object	php_sxe_object *	sxe
ANR	1898444	DeclStmt									
ANR	1898445	Decl							xmlNodePtr	xmlNodePtr	node
ANR	1898446	DeclStmt									
ANR	1898447	Decl							php_sxe_object	php_sxe_object *	sxe
ANR	1898448	DeclStmt									
ANR	1898449	Decl							char	char *	nsprefix
ANR	1898450	DeclStmt									
ANR	1898451	Decl							size_t	size_t	nsprefix_len
ANR	1898452	DeclStmt									
ANR	1898453	Decl							xmlNodePtr	xmlNodePtr	node
ANR	1898454	DeclStmt									
ANR	1898455	Decl							zend_bool	zend_bool	isprefix
ANR	1898456	DeclStmt									
ANR	1898457	Decl							php_sxe_object	php_sxe_object *	sxe
ANR	1898458	DeclStmt									
ANR	1898459	Decl							xmlNodePtr	xmlNodePtr	node
ANR	1898460	DeclStmt									
ANR	1898461	Decl							int	int	namelen
ANR	1898462	DeclStmt									
ANR	1898463	Decl							php_sxe_object	php_sxe_object *	sxe
ANR	1898464	DeclStmt									
ANR	1898465	Decl							char	char *	nsprefix
ANR	1898466	DeclStmt									
ANR	1898467	Decl							size_t	size_t	nsprefix_len
ANR	1898468	DeclStmt									
ANR	1898469	Decl							xmlNodePtr	xmlNodePtr	node
ANR	1898470	DeclStmt									
ANR	1898471	Decl							zend_bool	zend_bool	isprefix
ANR	1898472	DeclStmt									
ANR	1898473	Decl							php_sxe_object	php_sxe_object *	sxe
ANR	1898474	DeclStmt									
ANR	1898475	Decl							char	char *	qname
ANR	1898476	Decl							char	char *	value
ANR	1898477	Decl							char	char *	nsuri
ANR	1898478	DeclStmt									
ANR	1898479	Decl							size_t	size_t	qname_len
ANR	1898480	Decl							size_t	size_t	value_len
ANR	1898481	Decl							size_t	size_t	nsuri_len
ANR	1898482	DeclStmt									
ANR	1898483	Decl							xmlNodePtr	xmlNodePtr	node
ANR	1898484	Decl							xmlNodePtr	xmlNodePtr	newnode
ANR	1898485	DeclStmt									
ANR	1898486	Decl							xmlNsPtr	xmlNsPtr	nsptr
ANR	1898487	DeclStmt									
ANR	1898488	Decl							xmlChar	xmlChar *	localname
ANR	1898489	Decl							xmlChar	xmlChar *	prefix
ANR	1898490	DeclStmt									
ANR	1898491	Decl							php_sxe_object	php_sxe_object *	sxe
ANR	1898492	DeclStmt									
ANR	1898493	Decl							char	char *	qname
ANR	1898494	Decl							char	char *	value
ANR	1898495	Decl							char	char *	nsuri
ANR	1898496	DeclStmt									
ANR	1898497	Decl							size_t	size_t	qname_len
ANR	1898498	Decl							size_t	size_t	value_len
ANR	1898499	Decl							size_t	size_t	nsuri_len
ANR	1898500	DeclStmt									
ANR	1898501	Decl							xmlNodePtr	xmlNodePtr	node
ANR	1898502	DeclStmt									
ANR	1898503	Decl							xmlAttrPtr	xmlAttrPtr	attrp
ANR	1898504	DeclStmt									
ANR	1898505	Decl							xmlNsPtr	xmlNsPtr	nsptr
ANR	1898506	DeclStmt									
ANR	1898507	Decl							xmlChar	xmlChar *	localname
ANR	1898508	Decl							xmlChar	xmlChar *	prefix
ANR	1898509	Function	cast_object	1829:0:47918:48382							
ANR	1898510	FunctionDef	"cast_object (zval * object , int type , char * contents)"		1898509	0					
ANR	1898511	CompoundStatement		1830:0:47981:48382	1898509	0					
ANR	1898512	IfStatement	if ( contents )		1898509	0					
ANR	1898513	Condition	contents	1831:5:47988:47995	1898509	0	True				
ANR	1898514	Identifier	contents		1898509	0					
ANR	1898515	CompoundStatement		2:15:16:16	1898509	1					
ANR	1898516	ExpressionStatement	"ZVAL_STRINGL ( object , contents , strlen ( contents ) )"	1832:2:48002:48050	1898509	0	True				
ANR	1898517	CallExpression	"ZVAL_STRINGL ( object , contents , strlen ( contents ) )"		1898509	0					
ANR	1898518	Callee	ZVAL_STRINGL		1898509	0					
ANR	1898519	Identifier	ZVAL_STRINGL		1898509	0					
ANR	1898520	ArgumentList	object		1898509	1					
ANR	1898521	Argument	object		1898509	0					
ANR	1898522	Identifier	object		1898509	0					
ANR	1898523	Argument	contents		1898509	1					
ANR	1898524	Identifier	contents		1898509	0					
ANR	1898525	Argument	strlen ( contents )		1898509	2					
ANR	1898526	CallExpression	strlen ( contents )		1898509	0					
ANR	1898527	Callee	strlen		1898509	0					
ANR	1898528	Identifier	strlen		1898509	0					
ANR	1898529	ArgumentList	contents		1898509	1					
ANR	1898530	Argument	contents		1898509	0					
ANR	1898531	Identifier	contents		1898509	0					
ANR	1898532	ElseStatement	else		1898509	0					
ANR	1898533	CompoundStatement		4:8:78:78	1898509	0					
ANR	1898534	ExpressionStatement	ZVAL_NULL ( object )	1834:2:48064:48081	1898509	0	True				
ANR	1898535	CallExpression	ZVAL_NULL ( object )		1898509	0					
ANR	1898536	Callee	ZVAL_NULL		1898509	0					
ANR	1898537	Identifier	ZVAL_NULL		1898509	0					
ANR	1898538	ArgumentList	object		1898509	1					
ANR	1898539	Argument	object		1898509	0					
ANR	1898540	Identifier	object		1898509	0					
ANR	1898541	SwitchStatement	switch ( type )		1898509	1					
ANR	1898542	Condition	type	1837:9:48096:48099	1898509	0	True				
ANR	1898543	Identifier	type		1898509	0					
ANR	1898544	CompoundStatement		8:15:120:120	1898509	1					
ANR	1898545	Label	case IS_STRING :	1838:2:48106:48120	1898509	0	True				
ANR	1898546	Identifier	IS_STRING		1898509	0					
ANR	1898547	ExpressionStatement	convert_to_string ( object )	1839:3:48125:48150	1898509	1	True				
ANR	1898548	CallExpression	convert_to_string ( object )		1898509	0					
ANR	1898549	Callee	convert_to_string		1898509	0					
ANR	1898550	Identifier	convert_to_string		1898509	0					
ANR	1898551	ArgumentList	object		1898509	1					
ANR	1898552	Argument	object		1898509	0					
ANR	1898553	Identifier	object		1898509	0					
ANR	1898554	BreakStatement	break ;	1840:3:48155:48160	1898509	2	True				
ANR	1898555	Label	case _IS_BOOL :	1841:2:48164:48177	1898509	3	True				
ANR	1898556	Identifier	_IS_BOOL		1898509	0					
ANR	1898557	ExpressionStatement	convert_to_boolean ( object )	1842:3:48182:48208	1898509	4	True				
ANR	1898558	CallExpression	convert_to_boolean ( object )		1898509	0					
ANR	1898559	Callee	convert_to_boolean		1898509	0					
ANR	1898560	Identifier	convert_to_boolean		1898509	0					
ANR	1898561	ArgumentList	object		1898509	1					
ANR	1898562	Argument	object		1898509	0					
ANR	1898563	Identifier	object		1898509	0					
ANR	1898564	BreakStatement	break ;	1843:3:48213:48218	1898509	5	True				
ANR	1898565	Label	case IS_LONG :	1844:2:48222:48234	1898509	6	True				
ANR	1898566	Identifier	IS_LONG		1898509	0					
ANR	1898567	ExpressionStatement	convert_to_long ( object )	1845:3:48239:48262	1898509	7	True				
ANR	1898568	CallExpression	convert_to_long ( object )		1898509	0					
ANR	1898569	Callee	convert_to_long		1898509	0					
ANR	1898570	Identifier	convert_to_long		1898509	0					
ANR	1898571	ArgumentList	object		1898509	1					
ANR	1898572	Argument	object		1898509	0					
ANR	1898573	Identifier	object		1898509	0					
ANR	1898574	BreakStatement	break ;	1846:3:48267:48272	1898509	8	True				
ANR	1898575	Label	case IS_DOUBLE :	1847:2:48276:48290	1898509	9	True				
ANR	1898576	Identifier	IS_DOUBLE		1898509	0					
ANR	1898577	ExpressionStatement	convert_to_double ( object )	1848:3:48295:48320	1898509	10	True				
ANR	1898578	CallExpression	convert_to_double ( object )		1898509	0					
ANR	1898579	Callee	convert_to_double		1898509	0					
ANR	1898580	Identifier	convert_to_double		1898509	0					
ANR	1898581	ArgumentList	object		1898509	1					
ANR	1898582	Argument	object		1898509	0					
ANR	1898583	Identifier	object		1898509	0					
ANR	1898584	BreakStatement	break ;	1849:3:48325:48330	1898509	11	True				
ANR	1898585	Label	default :	1850:2:48334:48341	1898509	12	True				
ANR	1898586	Identifier	default		1898509	0					
ANR	1898587	ReturnStatement	return FAILURE ;	1851:3:48346:48360	1898509	13	True				
ANR	1898588	Identifier	FAILURE		1898509	0					
ANR	1898589	ReturnStatement	return SUCCESS ;	1853:1:48366:48380	1898509	2	True				
ANR	1898590	Identifier	SUCCESS		1898509	0					
ANR	1898591	ReturnType	static int		1898509	1					
ANR	1898592	Identifier	cast_object		1898509	2					
ANR	1898593	ParameterList	"zval * object , int type , char * contents"		1898509	3					
ANR	1898594	Parameter	zval * object	1829:23:47941:47952	1898509	0	True				
ANR	1898595	ParameterType	zval *		1898509	0					
ANR	1898596	Identifier	object		1898509	1					
ANR	1898597	Parameter	int type	1829:37:47955:47962	1898509	1	True				
ANR	1898598	ParameterType	int		1898509	0					
ANR	1898599	Identifier	type		1898509	1					
ANR	1898600	Parameter	char * contents	1829:47:47965:47978	1898509	2	True				
ANR	1898601	ParameterType	char *		1898509	0					
ANR	1898602	Identifier	contents		1898509	1					
ANR	1898603	CFGEntryNode	ENTRY		1898509		True				
ANR	1898604	CFGExitNode	EXIT		1898509		True				
ANR	1898605	Symbol	strlen		1898509						
ANR	1898606	Symbol	SUCCESS		1898509						
ANR	1898607	Symbol	contents		1898509						
ANR	1898608	Symbol	type		1898509						
ANR	1898609	Symbol	FAILURE		1898509						
ANR	1898610	Symbol	object		1898509						
ANR	1898611	Function	sxe_object_cast_ex	1859:0:48424:49542							
ANR	1898612	FunctionDef	"sxe_object_cast_ex (zval * readobj , zval * writeobj , int type)"		1898611	0					
ANR	1898613	CompoundStatement		1860:0:48495:49542	1898611	0					
ANR	1898614	IdentifierDeclStatement	php_sxe_object * sxe ;	1861:1:48498:48517	1898611	0	True				
ANR	1898615	IdentifierDecl	* sxe		1898611	0					
ANR	1898616	IdentifierDeclType	php_sxe_object *		1898611	0					
ANR	1898617	Identifier	sxe		1898611	1					
ANR	1898618	IdentifierDeclStatement	xmlChar * contents = NULL ;	1862:1:48520:48551	1898611	1	True				
ANR	1898619	IdentifierDecl	* contents = NULL		1898611	0					
ANR	1898620	IdentifierDeclType	xmlChar *		1898611	0					
ANR	1898621	Identifier	contents		1898611	1					
ANR	1898622	AssignmentExpression	* contents = NULL		1898611	2		=			
ANR	1898623	Identifier	NULL		1898611	0					
ANR	1898624	Identifier	NULL		1898611	1					
ANR	1898625	IdentifierDeclStatement	xmlNodePtr node ;	1863:1:48554:48573	1898611	2	True				
ANR	1898626	IdentifierDecl	node		1898611	0					
ANR	1898627	IdentifierDeclType	xmlNodePtr		1898611	0					
ANR	1898628	Identifier	node		1898611	1					
ANR	1898629	IdentifierDeclStatement	int rv ;	1864:1:48576:48582	1898611	3	True				
ANR	1898630	IdentifierDecl	rv		1898611	0					
ANR	1898631	IdentifierDeclType	int		1898611	0					
ANR	1898632	Identifier	rv		1898611	1					
ANR	1898633	ExpressionStatement	sxe = Z_SXEOBJ_P ( readobj )	1866:1:48586:48611	1898611	4	True				
ANR	1898634	AssignmentExpression	sxe = Z_SXEOBJ_P ( readobj )		1898611	0		=			
ANR	1898635	Identifier	sxe		1898611	0					
ANR	1898636	CallExpression	Z_SXEOBJ_P ( readobj )		1898611	1					
ANR	1898637	Callee	Z_SXEOBJ_P		1898611	0					
ANR	1898638	Identifier	Z_SXEOBJ_P		1898611	0					
ANR	1898639	ArgumentList	readobj		1898611	1					
ANR	1898640	Argument	readobj		1898611	0					
ANR	1898641	Identifier	readobj		1898611	0					
ANR	1898642	IfStatement	if ( type == _IS_BOOL )		1898611	5					
ANR	1898643	Condition	type == _IS_BOOL	1868:5:48619:48634	1898611	0	True				
ANR	1898644	EqualityExpression	type == _IS_BOOL		1898611	0		==			
ANR	1898645	Identifier	type		1898611	0					
ANR	1898646	Identifier	_IS_BOOL		1898611	1					
ANR	1898647	CompoundStatement		9:23:141:141	1898611	1					
ANR	1898648	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , NULL )"	1869:2:48641:48681	1898611	0	True				
ANR	1898649	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , NULL )"		1898611	0		=			
ANR	1898650	Identifier	node		1898611	0					
ANR	1898651	CallExpression	"php_sxe_get_first_node ( sxe , NULL )"		1898611	1					
ANR	1898652	Callee	php_sxe_get_first_node		1898611	0					
ANR	1898653	Identifier	php_sxe_get_first_node		1898611	0					
ANR	1898654	ArgumentList	sxe		1898611	1					
ANR	1898655	Argument	sxe		1898611	0					
ANR	1898656	Identifier	sxe		1898611	0					
ANR	1898657	Argument	NULL		1898611	1					
ANR	1898658	Identifier	NULL		1898611	0					
ANR	1898659	IfStatement	if ( node )		1898611	1					
ANR	1898660	Condition	node	1870:6:48689:48692	1898611	0	True				
ANR	1898661	Identifier	node		1898611	0					
ANR	1898662	CompoundStatement		11:12:199:199	1898611	1					
ANR	1898663	ExpressionStatement	ZVAL_TRUE ( writeobj )	1871:3:48700:48719	1898611	0	True				
ANR	1898664	CallExpression	ZVAL_TRUE ( writeobj )		1898611	0					
ANR	1898665	Callee	ZVAL_TRUE		1898611	0					
ANR	1898666	Identifier	ZVAL_TRUE		1898611	0					
ANR	1898667	ArgumentList	writeobj		1898611	1					
ANR	1898668	Argument	writeobj		1898611	0					
ANR	1898669	Identifier	writeobj		1898611	0					
ANR	1898670	ElseStatement	else		1898611	0					
ANR	1898671	CompoundStatement		13:9:234:234	1898611	0					
ANR	1898672	ExpressionStatement	"ZVAL_BOOL ( writeobj , ! sxe_prop_is_empty ( readobj ) )"	1873:3:48735:48783	1898611	0	True				
ANR	1898673	CallExpression	"ZVAL_BOOL ( writeobj , ! sxe_prop_is_empty ( readobj ) )"		1898611	0					
ANR	1898674	Callee	ZVAL_BOOL		1898611	0					
ANR	1898675	Identifier	ZVAL_BOOL		1898611	0					
ANR	1898676	ArgumentList	writeobj		1898611	1					
ANR	1898677	Argument	writeobj		1898611	0					
ANR	1898678	Identifier	writeobj		1898611	0					
ANR	1898679	Argument	! sxe_prop_is_empty ( readobj )		1898611	1					
ANR	1898680	UnaryOperationExpression	! sxe_prop_is_empty ( readobj )		1898611	0					
ANR	1898681	UnaryOperator	!		1898611	0					
ANR	1898682	CallExpression	sxe_prop_is_empty ( readobj )		1898611	1					
ANR	1898683	Callee	sxe_prop_is_empty		1898611	0					
ANR	1898684	Identifier	sxe_prop_is_empty		1898611	0					
ANR	1898685	ArgumentList	readobj		1898611	1					
ANR	1898686	Argument	readobj		1898611	0					
ANR	1898687	Identifier	readobj		1898611	0					
ANR	1898688	ReturnStatement	return SUCCESS ;	1875:2:48791:48805	1898611	2	True				
ANR	1898689	Identifier	SUCCESS		1898611	0					
ANR	1898690	IfStatement	if ( sxe -> iter . type != SXE_ITER_NONE )		1898611	6					
ANR	1898691	Condition	sxe -> iter . type != SXE_ITER_NONE	1878:5:48816:48846	1898611	0	True				
ANR	1898692	EqualityExpression	sxe -> iter . type != SXE_ITER_NONE		1898611	0		!=			
ANR	1898693	MemberAccess	sxe -> iter . type		1898611	0					
ANR	1898694	PtrMemberAccess	sxe -> iter		1898611	0					
ANR	1898695	Identifier	sxe		1898611	0					
ANR	1898696	Identifier	iter		1898611	1					
ANR	1898697	Identifier	type		1898611	1					
ANR	1898698	Identifier	SXE_ITER_NONE		1898611	1					
ANR	1898699	CompoundStatement		19:38:353:353	1898611	1					
ANR	1898700	ExpressionStatement	"node = php_sxe_get_first_node ( sxe , NULL )"	1879:2:48853:48893	1898611	0	True				
ANR	1898701	AssignmentExpression	"node = php_sxe_get_first_node ( sxe , NULL )"		1898611	0		=			
ANR	1898702	Identifier	node		1898611	0					
ANR	1898703	CallExpression	"php_sxe_get_first_node ( sxe , NULL )"		1898611	1					
ANR	1898704	Callee	php_sxe_get_first_node		1898611	0					
ANR	1898705	Identifier	php_sxe_get_first_node		1898611	0					
ANR	1898706	ArgumentList	sxe		1898611	1					
ANR	1898707	Argument	sxe		1898611	0					
ANR	1898708	Identifier	sxe		1898611	0					
ANR	1898709	Argument	NULL		1898611	1					
ANR	1898710	Identifier	NULL		1898611	0					
ANR	1898711	IfStatement	if ( node )		1898611	1					
ANR	1898712	Condition	node	1880:6:48901:48904	1898611	0	True				
ANR	1898713	Identifier	node		1898611	0					
ANR	1898714	CompoundStatement		21:12:411:411	1898611	1					
ANR	1898715	ExpressionStatement	"contents = xmlNodeListGetString ( ( xmlDocPtr ) sxe -> document -> ptr , node -> children , 1 )"	1881:3:48912:48994	1898611	0	True				
ANR	1898716	AssignmentExpression	"contents = xmlNodeListGetString ( ( xmlDocPtr ) sxe -> document -> ptr , node -> children , 1 )"		1898611	0		=			
ANR	1898717	Identifier	contents		1898611	0					
ANR	1898718	CallExpression	"xmlNodeListGetString ( ( xmlDocPtr ) sxe -> document -> ptr , node -> children , 1 )"		1898611	1					
ANR	1898719	Callee	xmlNodeListGetString		1898611	0					
ANR	1898720	Identifier	xmlNodeListGetString		1898611	0					
ANR	1898721	ArgumentList	( xmlDocPtr ) sxe -> document -> ptr		1898611	1					
ANR	1898722	Argument	( xmlDocPtr ) sxe -> document -> ptr		1898611	0					
ANR	1898723	CastExpression	( xmlDocPtr ) sxe -> document -> ptr		1898611	0					
ANR	1898724	CastTarget	xmlDocPtr		1898611	0					
ANR	1898725	PtrMemberAccess	sxe -> document -> ptr		1898611	1					
ANR	1898726	PtrMemberAccess	sxe -> document		1898611	0					
ANR	1898727	Identifier	sxe		1898611	0					
ANR	1898728	Identifier	document		1898611	1					
ANR	1898729	Identifier	ptr		1898611	1					
ANR	1898730	Argument	node -> children		1898611	1					
ANR	1898731	PtrMemberAccess	node -> children		1898611	0					
ANR	1898732	Identifier	node		1898611	0					
ANR	1898733	Identifier	children		1898611	1					
ANR	1898734	Argument	1		1898611	2					
ANR	1898735	PrimaryExpression	1		1898611	0					
ANR	1898736	ElseStatement	else		1898611	0					
ANR	1898737	CompoundStatement		24:8:512:512	1898611	0					
ANR	1898738	IfStatement	if ( ! sxe -> node )		1898611	0					
ANR	1898739	Condition	! sxe -> node	1884:6:49016:49025	1898611	0	True				
ANR	1898740	UnaryOperationExpression	! sxe -> node		1898611	0					
ANR	1898741	UnaryOperator	!		1898611	0					
ANR	1898742	PtrMemberAccess	sxe -> node		1898611	1					
ANR	1898743	Identifier	sxe		1898611	0					
ANR	1898744	Identifier	node		1898611	1					
ANR	1898745	CompoundStatement		25:18:532:532	1898611	1					
ANR	1898746	IfStatement	if ( sxe -> document )		1898611	0					
ANR	1898747	Condition	sxe -> document	1885:7:49037:49049	1898611	0	True				
ANR	1898748	PtrMemberAccess	sxe -> document		1898611	0					
ANR	1898749	Identifier	sxe		1898611	0					
ANR	1898750	Identifier	document		1898611	1					
ANR	1898751	CompoundStatement		26:22:556:556	1898611	1					
ANR	1898752	ExpressionStatement	"php_libxml_increment_node_ptr ( ( php_libxml_node_object * ) sxe , xmlDocGetRootElement ( ( xmlDocPtr ) sxe -> document -> ptr ) , NULL )"	1886:4:49058:49178	1898611	0	True				
ANR	1898753	CallExpression	"php_libxml_increment_node_ptr ( ( php_libxml_node_object * ) sxe , xmlDocGetRootElement ( ( xmlDocPtr ) sxe -> document -> ptr ) , NULL )"		1898611	0					
ANR	1898754	Callee	php_libxml_increment_node_ptr		1898611	0					
ANR	1898755	Identifier	php_libxml_increment_node_ptr		1898611	0					
ANR	1898756	ArgumentList	( php_libxml_node_object * ) sxe		1898611	1					
ANR	1898757	Argument	( php_libxml_node_object * ) sxe		1898611	0					
ANR	1898758	CastExpression	( php_libxml_node_object * ) sxe		1898611	0					
ANR	1898759	CastTarget	php_libxml_node_object *		1898611	0					
ANR	1898760	Identifier	sxe		1898611	1					
ANR	1898761	Argument	xmlDocGetRootElement ( ( xmlDocPtr ) sxe -> document -> ptr )		1898611	1					
ANR	1898762	CallExpression	xmlDocGetRootElement ( ( xmlDocPtr ) sxe -> document -> ptr )		1898611	0					
ANR	1898763	Callee	xmlDocGetRootElement		1898611	0					
ANR	1898764	Identifier	xmlDocGetRootElement		1898611	0					
ANR	1898765	ArgumentList	( xmlDocPtr ) sxe -> document -> ptr		1898611	1					
ANR	1898766	Argument	( xmlDocPtr ) sxe -> document -> ptr		1898611	0					
ANR	1898767	CastExpression	( xmlDocPtr ) sxe -> document -> ptr		1898611	0					
ANR	1898768	CastTarget	xmlDocPtr		1898611	0					
ANR	1898769	PtrMemberAccess	sxe -> document -> ptr		1898611	1					
ANR	1898770	PtrMemberAccess	sxe -> document		1898611	0					
ANR	1898771	Identifier	sxe		1898611	0					
ANR	1898772	Identifier	document		1898611	1					
ANR	1898773	Identifier	ptr		1898611	1					
ANR	1898774	Argument	NULL		1898611	2					
ANR	1898775	Identifier	NULL		1898611	0					
ANR	1898776	IfStatement	if ( sxe -> node && sxe -> node -> node )		1898611	1					
ANR	1898777	Condition	sxe -> node && sxe -> node -> node	1890:6:49196:49223	1898611	0	True				
ANR	1898778	AndExpression	sxe -> node && sxe -> node -> node		1898611	0		&&			
ANR	1898779	PtrMemberAccess	sxe -> node		1898611	0					
ANR	1898780	Identifier	sxe		1898611	0					
ANR	1898781	Identifier	node		1898611	1					
ANR	1898782	PtrMemberAccess	sxe -> node -> node		1898611	1					
ANR	1898783	PtrMemberAccess	sxe -> node		1898611	0					
ANR	1898784	Identifier	sxe		1898611	0					
ANR	1898785	Identifier	node		1898611	1					
ANR	1898786	Identifier	node		1898611	1					
ANR	1898787	CompoundStatement		31:36:730:730	1898611	1					
ANR	1898788	IfStatement	if ( sxe -> node -> node -> children )		1898611	0					
ANR	1898789	Condition	sxe -> node -> node -> children	1891:7:49235:49259	1898611	0	True				
ANR	1898790	PtrMemberAccess	sxe -> node -> node -> children		1898611	0					
ANR	1898791	PtrMemberAccess	sxe -> node -> node		1898611	0					
ANR	1898792	PtrMemberAccess	sxe -> node		1898611	0					
ANR	1898793	Identifier	sxe		1898611	0					
ANR	1898794	Identifier	node		1898611	1					
ANR	1898795	Identifier	node		1898611	1					
ANR	1898796	Identifier	children		1898611	1					
ANR	1898797	CompoundStatement		32:34:766:766	1898611	1					
ANR	1898798	ExpressionStatement	"contents = xmlNodeListGetString ( ( xmlDocPtr ) sxe -> document -> ptr , sxe -> node -> node -> children , 1 )"	1892:4:49268:49361	1898611	0	True				
ANR	1898799	AssignmentExpression	"contents = xmlNodeListGetString ( ( xmlDocPtr ) sxe -> document -> ptr , sxe -> node -> node -> children , 1 )"		1898611	0		=			
ANR	1898800	Identifier	contents		1898611	0					
ANR	1898801	CallExpression	"xmlNodeListGetString ( ( xmlDocPtr ) sxe -> document -> ptr , sxe -> node -> node -> children , 1 )"		1898611	1					
ANR	1898802	Callee	xmlNodeListGetString		1898611	0					
ANR	1898803	Identifier	xmlNodeListGetString		1898611	0					
ANR	1898804	ArgumentList	( xmlDocPtr ) sxe -> document -> ptr		1898611	1					
ANR	1898805	Argument	( xmlDocPtr ) sxe -> document -> ptr		1898611	0					
ANR	1898806	CastExpression	( xmlDocPtr ) sxe -> document -> ptr		1898611	0					
ANR	1898807	CastTarget	xmlDocPtr		1898611	0					
ANR	1898808	PtrMemberAccess	sxe -> document -> ptr		1898611	1					
ANR	1898809	PtrMemberAccess	sxe -> document		1898611	0					
ANR	1898810	Identifier	sxe		1898611	0					
ANR	1898811	Identifier	document		1898611	1					
ANR	1898812	Identifier	ptr		1898611	1					
ANR	1898813	Argument	sxe -> node -> node -> children		1898611	1					
ANR	1898814	PtrMemberAccess	sxe -> node -> node -> children		1898611	0					
ANR	1898815	PtrMemberAccess	sxe -> node -> node		1898611	0					
ANR	1898816	PtrMemberAccess	sxe -> node		1898611	0					
ANR	1898817	Identifier	sxe		1898611	0					
ANR	1898818	Identifier	node		1898611	1					
ANR	1898819	Identifier	node		1898611	1					
ANR	1898820	Identifier	children		1898611	1					
ANR	1898821	Argument	1		1898611	2					
ANR	1898822	PrimaryExpression	1		1898611	0					
ANR	1898823	IfStatement	if ( readobj == writeobj )		1898611	7					
ANR	1898824	Condition	readobj == writeobj	1897:5:49381:49399	1898611	0	True				
ANR	1898825	EqualityExpression	readobj == writeobj		1898611	0		==			
ANR	1898826	Identifier	readobj		1898611	0					
ANR	1898827	Identifier	writeobj		1898611	1					
ANR	1898828	CompoundStatement		38:26:906:906	1898611	1					
ANR	1898829	ExpressionStatement	zval_ptr_dtor ( readobj )	1898:2:49406:49428	1898611	0	True				
ANR	1898830	CallExpression	zval_ptr_dtor ( readobj )		1898611	0					
ANR	1898831	Callee	zval_ptr_dtor		1898611	0					
ANR	1898832	Identifier	zval_ptr_dtor		1898611	0					
ANR	1898833	ArgumentList	readobj		1898611	1					
ANR	1898834	Argument	readobj		1898611	0					
ANR	1898835	Identifier	readobj		1898611	0					
ANR	1898836	ExpressionStatement	"rv = cast_object ( writeobj , type , ( char * ) contents )"	1901:1:49435:49485	1898611	8	True				
ANR	1898837	AssignmentExpression	"rv = cast_object ( writeobj , type , ( char * ) contents )"		1898611	0		=			
ANR	1898838	Identifier	rv		1898611	0					
ANR	1898839	CallExpression	"cast_object ( writeobj , type , ( char * ) contents )"		1898611	1					
ANR	1898840	Callee	cast_object		1898611	0					
ANR	1898841	Identifier	cast_object		1898611	0					
ANR	1898842	ArgumentList	writeobj		1898611	1					
ANR	1898843	Argument	writeobj		1898611	0					
ANR	1898844	Identifier	writeobj		1898611	0					
ANR	1898845	Argument	type		1898611	1					
ANR	1898846	Identifier	type		1898611	0					
ANR	1898847	Argument	( char * ) contents		1898611	2					
ANR	1898848	CastExpression	( char * ) contents		1898611	0					
ANR	1898849	CastTarget	char *		1898611	0					
ANR	1898850	Identifier	contents		1898611	1					
ANR	1898851	IfStatement	if ( contents )		1898611	9					
ANR	1898852	Condition	contents	1903:5:49493:49500	1898611	0	True				
ANR	1898853	Identifier	contents		1898611	0					
ANR	1898854	CompoundStatement		44:15:1007:1007	1898611	1					
ANR	1898855	ExpressionStatement	xmlFree ( contents )	1904:2:49507:49524	1898611	0	True				
ANR	1898856	CallExpression	xmlFree ( contents )		1898611	0					
ANR	1898857	Callee	xmlFree		1898611	0					
ANR	1898858	Identifier	xmlFree		1898611	0					
ANR	1898859	ArgumentList	contents		1898611	1					
ANR	1898860	Argument	contents		1898611	0					
ANR	1898861	Identifier	contents		1898611	0					
ANR	1898862	ReturnStatement	return rv ;	1907:1:49531:49540	1898611	10	True				
ANR	1898863	Identifier	rv		1898611	0					
ANR	1898864	ReturnType	static int		1898611	1					
ANR	1898865	Identifier	sxe_object_cast_ex		1898611	2					
ANR	1898866	ParameterList	"zval * readobj , zval * writeobj , int type"		1898611	3					
ANR	1898867	Parameter	zval * readobj	1859:30:48454:48466	1898611	0	True				
ANR	1898868	ParameterType	zval *		1898611	0					
ANR	1898869	Identifier	readobj		1898611	1					
ANR	1898870	Parameter	zval * writeobj	1859:45:48469:48482	1898611	1	True				
ANR	1898871	ParameterType	zval *		1898611	0					
ANR	1898872	Identifier	writeobj		1898611	1					
ANR	1898873	Parameter	int type	1859:61:48485:48492	1898611	2	True				
ANR	1898874	ParameterType	int		1898611	0					
ANR	1898875	Identifier	type		1898611	1					
ANR	1898876	CFGEntryNode	ENTRY		1898611		True				
ANR	1898877	CFGExitNode	EXIT		1898611		True				
ANR	1898878	Symbol	readobj		1898611						
ANR	1898879	Symbol	rv		1898611						
ANR	1898880	Symbol	cast_object		1898611						
ANR	1898881	Symbol	writeobj		1898611						
ANR	1898882	Symbol	* sxe		1898611						
ANR	1898883	Symbol	type		1898611						
ANR	1898884	Symbol	xmlDocGetRootElement		1898611						
ANR	1898885	Symbol	_IS_BOOL		1898611						
ANR	1898886	Symbol	sxe -> node -> node -> children		1898611						
ANR	1898887	Symbol	* * sxe -> node		1898611						
ANR	1898888	Symbol	* node		1898611						
ANR	1898889	Symbol	* sxe -> document		1898611						
ANR	1898890	Symbol	sxe -> node		1898611						
ANR	1898891	Symbol	* * * sxe		1898611						
ANR	1898892	Symbol	xmlNodeListGetString		1898611						
ANR	1898893	Symbol	sxe		1898611						
ANR	1898894	Symbol	php_sxe_get_first_node		1898611						
ANR	1898895	Symbol	NULL		1898611						
ANR	1898896	Symbol	SUCCESS		1898611						
ANR	1898897	Symbol	sxe_prop_is_empty		1898611						
ANR	1898898	Symbol	* sxe -> node		1898611						
ANR	1898899	Symbol	sxe -> node -> node		1898611						
ANR	1898900	Symbol	sxe -> iter . type		1898611						
ANR	1898901	Symbol	sxe -> iter		1898611						
ANR	1898902	Symbol	node		1898611						
ANR	1898903	Symbol	SXE_ITER_NONE		1898611						
ANR	1898904	Symbol	* * sxe		1898611						
ANR	1898905	Symbol	sxe -> document -> ptr		1898611						
ANR	1898906	Symbol	* sxe -> node -> node		1898611						
ANR	1898907	Symbol	contents		1898611						
ANR	1898908	Symbol	Z_SXEOBJ_P		1898611						
ANR	1898909	Symbol	sxe -> document		1898611						
ANR	1898910	Symbol	node -> children		1898611						
ANR	1898911	Function	sxe_object_cast	1912:0:49641:49890							
ANR	1898912	FunctionDef	"sxe_object_cast (zval * readobj , zval * writeobj , int type)"		1898911	0					
ANR	1898913	CompoundStatement		1913:0:49709:49890	1898911	0					
ANR	1898914	IfStatement	"if ( type == IS_STRING && zend_std_cast_object_tostring ( readobj , writeobj , IS_STRING ) == SUCCESS )"		1898911	0					
ANR	1898915	Condition	"type == IS_STRING && zend_std_cast_object_tostring ( readobj , writeobj , IS_STRING ) == SUCCESS"	1914:5:49716:49808	1898911	0	True				
ANR	1898916	AndExpression	"type == IS_STRING && zend_std_cast_object_tostring ( readobj , writeobj , IS_STRING ) == SUCCESS"		1898911	0		&&			
ANR	1898917	EqualityExpression	type == IS_STRING		1898911	0		==			
ANR	1898918	Identifier	type		1898911	0					
ANR	1898919	Identifier	IS_STRING		1898911	1					
ANR	1898920	EqualityExpression	"zend_std_cast_object_tostring ( readobj , writeobj , IS_STRING ) == SUCCESS"		1898911	1		==			
ANR	1898921	CallExpression	"zend_std_cast_object_tostring ( readobj , writeobj , IS_STRING )"		1898911	0					
ANR	1898922	Callee	zend_std_cast_object_tostring		1898911	0					
ANR	1898923	Identifier	zend_std_cast_object_tostring		1898911	0					
ANR	1898924	ArgumentList	readobj		1898911	1					
ANR	1898925	Argument	readobj		1898911	0					
ANR	1898926	Identifier	readobj		1898911	0					
ANR	1898927	Argument	writeobj		1898911	1					
ANR	1898928	Identifier	writeobj		1898911	0					
ANR	1898929	Argument	IS_STRING		1898911	2					
ANR	1898930	Identifier	IS_STRING		1898911	0					
ANR	1898931	Identifier	SUCCESS		1898911	1					
ANR	1898932	CompoundStatement		4:3:103:103	1898911	1					
ANR	1898933	ReturnStatement	return SUCCESS ;	1917:2:49817:49831	1898911	0	True				
ANR	1898934	Identifier	SUCCESS		1898911	0					
ANR	1898935	ReturnStatement	"return sxe_object_cast_ex ( readobj , writeobj , type ) ;"	1920:1:49838:49888	1898911	1	True				
ANR	1898936	CallExpression	"sxe_object_cast_ex ( readobj , writeobj , type )"		1898911	0					
ANR	1898937	Callee	sxe_object_cast_ex		1898911	0					
ANR	1898938	Identifier	sxe_object_cast_ex		1898911	0					
ANR	1898939	ArgumentList	readobj		1898911	1					
ANR	1898940	Argument	readobj		1898911	0					
ANR	1898941	Identifier	readobj		1898911	0					
ANR	1898942	Argument	writeobj		1898911	1					
ANR	1898943	Identifier	writeobj		1898911	0					
ANR	1898944	Argument	type		1898911	2					
ANR	1898945	Identifier	type		1898911	0					
ANR	1898946	ReturnType	static int		1898911	1					
ANR	1898947	Identifier	sxe_object_cast		1898911	2					
ANR	1898948	ParameterList	"zval * readobj , zval * writeobj , int type"		1898911	3					
ANR	1898949	Parameter	zval * readobj	1912:27:49668:49680	1898911	0	True				
ANR	1898950	ParameterType	zval *		1898911	0					
ANR	1898951	Identifier	readobj		1898911	1					
ANR	1898952	Parameter	zval * writeobj	1912:42:49683:49696	1898911	1	True				
ANR	1898953	ParameterType	zval *		1898911	0					
ANR	1898954	Identifier	writeobj		1898911	1					
ANR	1898955	Parameter	int type	1912:58:49699:49706	1898911	2	True				
ANR	1898956	ParameterType	int		1898911	0					
ANR	1898957	Identifier	type		1898911	1					
ANR	1898958	CFGEntryNode	ENTRY		1898911		True				
ANR	1898959	CFGExitNode	EXIT		1898911		True				
ANR	1898960	Symbol	zend_std_cast_object_tostring		1898911						
ANR	1898961	Symbol	SUCCESS		1898911						
ANR	1898962	Symbol	readobj		1898911						
ANR	1898963	Symbol	writeobj		1898911						
ANR	1898964	Symbol	IS_STRING		1898911						
ANR	1898965	Symbol	type		1898911						
ANR	1898966	Symbol	sxe_object_cast_ex		1898911						
ANR	1898967	Function	php_sxe_count_elements_helper	1935:0:50158:50645							
ANR	1898968	FunctionDef	"php_sxe_count_elements_helper (php_sxe_object * sxe , zend_long * count)"		1898967	0					
ANR	1898969	CompoundStatement		1936:0:50248:50645	1898967	0					
ANR	1898970	IdentifierDeclStatement	xmlNodePtr node ;	1937:1:50251:50271	1898967	0	True				
ANR	1898971	IdentifierDecl	node		1898967	0					
ANR	1898972	IdentifierDeclType	xmlNodePtr		1898967	0					
ANR	1898973	Identifier	node		1898967	1					
ANR	1898974	IdentifierDeclStatement	zval data ;	1938:1:50274:50294	1898967	1	True				
ANR	1898975	IdentifierDecl	data		1898967	0					
ANR	1898976	IdentifierDeclType	zval		1898967	0					
ANR	1898977	Identifier	data		1898967	1					
ANR	1898978	ExpressionStatement	* count = 0	1940:1:50298:50308	1898967	2	True				
ANR	1898979	AssignmentExpression	* count = 0		1898967	0		=			
ANR	1898980	UnaryOperationExpression	* count		1898967	0					
ANR	1898981	UnaryOperator	*		1898967	0					
ANR	1898982	Identifier	count		1898967	1					
ANR	1898983	PrimaryExpression	0		1898967	1					
ANR	1898984	ExpressionStatement	"ZVAL_COPY_VALUE ( & data , & sxe -> iter . data )"	1942:1:50312:50351	1898967	3	True				
ANR	1898985	CallExpression	"ZVAL_COPY_VALUE ( & data , & sxe -> iter . data )"		1898967	0					
ANR	1898986	Callee	ZVAL_COPY_VALUE		1898967	0					
ANR	1898987	Identifier	ZVAL_COPY_VALUE		1898967	0					
ANR	1898988	ArgumentList	& data		1898967	1					
ANR	1898989	Argument	& data		1898967	0					
ANR	1898990	UnaryOperationExpression	& data		1898967	0					
ANR	1898991	UnaryOperator	&		1898967	0					
ANR	1898992	Identifier	data		1898967	1					
ANR	1898993	Argument	& sxe -> iter . data		1898967	1					
ANR	1898994	UnaryOperationExpression	& sxe -> iter . data		1898967	0					
ANR	1898995	UnaryOperator	&		1898967	0					
ANR	1898996	MemberAccess	sxe -> iter . data		1898967	1					
ANR	1898997	PtrMemberAccess	sxe -> iter		1898967	0					
ANR	1898998	Identifier	sxe		1898967	0					
ANR	1898999	Identifier	iter		1898967	1					
ANR	1899000	Identifier	data		1898967	1					
ANR	1899001	ExpressionStatement	ZVAL_UNDEF ( & sxe -> iter . data )	1943:1:50354:50381	1898967	4	True				
ANR	1899002	CallExpression	ZVAL_UNDEF ( & sxe -> iter . data )		1898967	0					
ANR	1899003	Callee	ZVAL_UNDEF		1898967	0					
ANR	1899004	Identifier	ZVAL_UNDEF		1898967	0					
ANR	1899005	ArgumentList	& sxe -> iter . data		1898967	1					
ANR	1899006	Argument	& sxe -> iter . data		1898967	0					
ANR	1899007	UnaryOperationExpression	& sxe -> iter . data		1898967	0					
ANR	1899008	UnaryOperator	&		1898967	0					
ANR	1899009	MemberAccess	sxe -> iter . data		1898967	1					
ANR	1899010	PtrMemberAccess	sxe -> iter		1898967	0					
ANR	1899011	Identifier	sxe		1898967	0					
ANR	1899012	Identifier	iter		1898967	1					
ANR	1899013	Identifier	data		1898967	1					
ANR	1899014	ExpressionStatement	"node = php_sxe_reset_iterator ( sxe , 0 )"	1945:1:50385:50422	1898967	5	True				
ANR	1899015	AssignmentExpression	"node = php_sxe_reset_iterator ( sxe , 0 )"		1898967	0		=			
ANR	1899016	Identifier	node		1898967	0					
ANR	1899017	CallExpression	"php_sxe_reset_iterator ( sxe , 0 )"		1898967	1					
ANR	1899018	Callee	php_sxe_reset_iterator		1898967	0					
ANR	1899019	Identifier	php_sxe_reset_iterator		1898967	0					
ANR	1899020	ArgumentList	sxe		1898967	1					
ANR	1899021	Argument	sxe		1898967	0					
ANR	1899022	Identifier	sxe		1898967	0					
ANR	1899023	Argument	0		1898967	1					
ANR	1899024	PrimaryExpression	0		1898967	0					
ANR	1899025	WhileStatement	while ( node )		1898967	6					
ANR	1899026	Condition	node	1947:8:50433:50436	1898967	0	True				
ANR	1899027	Identifier	node		1898967	0					
ANR	1899028	CompoundStatement		13:1:191:191	1898967	1					
ANR	1899029	ExpressionStatement	( * count ) ++	1949:2:50444:50454	1898967	0	True				
ANR	1899030	PostIncDecOperationExpression	( * count ) ++		1898967	0					
ANR	1899031	UnaryOperationExpression	* count		1898967	0					
ANR	1899032	UnaryOperator	*		1898967	0					
ANR	1899033	Identifier	count		1898967	1					
ANR	1899034	IncDec	++		1898967	1					
ANR	1899035	ExpressionStatement	"node = php_sxe_iterator_fetch ( sxe , node -> next , 0 )"	1950:2:50458:50507	1898967	1	True				
ANR	1899036	AssignmentExpression	"node = php_sxe_iterator_fetch ( sxe , node -> next , 0 )"		1898967	0		=			
ANR	1899037	Identifier	node		1898967	0					
ANR	1899038	CallExpression	"php_sxe_iterator_fetch ( sxe , node -> next , 0 )"		1898967	1					
ANR	1899039	Callee	php_sxe_iterator_fetch		1898967	0					
ANR	1899040	Identifier	php_sxe_iterator_fetch		1898967	0					
ANR	1899041	ArgumentList	sxe		1898967	1					
ANR	1899042	Argument	sxe		1898967	0					
ANR	1899043	Identifier	sxe		1898967	0					
ANR	1899044	Argument	node -> next		1898967	1					
ANR	1899045	PtrMemberAccess	node -> next		1898967	0					
ANR	1899046	Identifier	node		1898967	0					
ANR	1899047	Identifier	next		1898967	1					
ANR	1899048	Argument	0		1898967	2					
ANR	1899049	PrimaryExpression	0		1898967	0					
ANR	1899050	IfStatement	if ( ! Z_ISUNDEF ( sxe -> iter . data ) )		1898967	7					
ANR	1899051	Condition	! Z_ISUNDEF ( sxe -> iter . data )	1953:5:50518:50543	1898967	0	True				
ANR	1899052	UnaryOperationExpression	! Z_ISUNDEF ( sxe -> iter . data )		1898967	0					
ANR	1899053	UnaryOperator	!		1898967	0					
ANR	1899054	CallExpression	Z_ISUNDEF ( sxe -> iter . data )		1898967	1					
ANR	1899055	Callee	Z_ISUNDEF		1898967	0					
ANR	1899056	Identifier	Z_ISUNDEF		1898967	0					
ANR	1899057	ArgumentList	sxe -> iter . data		1898967	1					
ANR	1899058	Argument	sxe -> iter . data		1898967	0					
ANR	1899059	MemberAccess	sxe -> iter . data		1898967	0					
ANR	1899060	PtrMemberAccess	sxe -> iter		1898967	0					
ANR	1899061	Identifier	sxe		1898967	0					
ANR	1899062	Identifier	iter		1898967	1					
ANR	1899063	Identifier	data		1898967	1					
ANR	1899064	CompoundStatement		18:33:297:297	1898967	1					
ANR	1899065	ExpressionStatement	zval_ptr_dtor ( & sxe -> iter . data )	1954:2:50550:50580	1898967	0	True				
ANR	1899066	CallExpression	zval_ptr_dtor ( & sxe -> iter . data )		1898967	0					
ANR	1899067	Callee	zval_ptr_dtor		1898967	0					
ANR	1899068	Identifier	zval_ptr_dtor		1898967	0					
ANR	1899069	ArgumentList	& sxe -> iter . data		1898967	1					
ANR	1899070	Argument	& sxe -> iter . data		1898967	0					
ANR	1899071	UnaryOperationExpression	& sxe -> iter . data		1898967	0					
ANR	1899072	UnaryOperator	&		1898967	0					
ANR	1899073	MemberAccess	sxe -> iter . data		1898967	1					
ANR	1899074	PtrMemberAccess	sxe -> iter		1898967	0					
ANR	1899075	Identifier	sxe		1898967	0					
ANR	1899076	Identifier	iter		1898967	1					
ANR	1899077	Identifier	data		1898967	1					
ANR	1899078	ExpressionStatement	"ZVAL_COPY_VALUE ( & sxe -> iter . data , & data )"	1956:1:50586:50625	1898967	8	True				
ANR	1899079	CallExpression	"ZVAL_COPY_VALUE ( & sxe -> iter . data , & data )"		1898967	0					
ANR	1899080	Callee	ZVAL_COPY_VALUE		1898967	0					
ANR	1899081	Identifier	ZVAL_COPY_VALUE		1898967	0					
ANR	1899082	ArgumentList	& sxe -> iter . data		1898967	1					
ANR	1899083	Argument	& sxe -> iter . data		1898967	0					
ANR	1899084	UnaryOperationExpression	& sxe -> iter . data		1898967	0					
ANR	1899085	UnaryOperator	&		1898967	0					
ANR	1899086	MemberAccess	sxe -> iter . data		1898967	1					
ANR	1899087	PtrMemberAccess	sxe -> iter		1898967	0					
ANR	1899088	Identifier	sxe		1898967	0					
ANR	1899089	Identifier	iter		1898967	1					
ANR	1899090	Identifier	data		1898967	1					
ANR	1899091	Argument	& data		1898967	1					
ANR	1899092	UnaryOperationExpression	& data		1898967	0					
ANR	1899093	UnaryOperator	&		1898967	0					
ANR	1899094	Identifier	data		1898967	1					
ANR	1899095	ReturnStatement	return SUCCESS ;	1958:1:50629:50643	1898967	9	True				
ANR	1899096	Identifier	SUCCESS		1898967	0					
ANR	1899097	ReturnType	static int		1898967	1					
ANR	1899098	Identifier	php_sxe_count_elements_helper		1898967	2					
ANR	1899099	ParameterList	"php_sxe_object * sxe , zend_long * count"		1898967	3					
ANR	1899100	Parameter	php_sxe_object * sxe	1935:41:50199:50217	1898967	0	True				
ANR	1899101	ParameterType	php_sxe_object *		1898967	0					
ANR	1899102	Identifier	sxe		1898967	1					
ANR	1899103	Parameter	zend_long * count	1935:62:50220:50235	1898967	1	True				
ANR	1899104	ParameterType	zend_long *		1898967	0					
ANR	1899105	Identifier	count		1898967	1					
ANR	1899106	CFGEntryNode	ENTRY		1898967		True				
ANR	1899107	CFGExitNode	EXIT		1898967		True				
ANR	1899108	Symbol	sxe		1898967						
ANR	1899109	Symbol	& sxe -> iter		1898967						
ANR	1899110	Symbol	SUCCESS		1898967						
ANR	1899111	Symbol	data		1898967						
ANR	1899112	Symbol	Z_ISUNDEF		1898967						
ANR	1899113	Symbol	count		1898967						
ANR	1899114	Symbol	* sxe		1898967						
ANR	1899115	Symbol	node -> next		1898967						
ANR	1899116	Symbol	& data		1898967						
ANR	1899117	Symbol	sxe -> iter		1898967						
ANR	1899118	Symbol	php_sxe_reset_iterator		1898967						
ANR	1899119	Symbol	node		1898967						
ANR	1899120	Symbol	* count		1898967						
ANR	1899121	Symbol	php_sxe_iterator_fetch		1898967						
ANR	1899122	Symbol	sxe -> iter . data		1898967						
ANR	1899123	Symbol	* node		1898967						
ANR	1899124	Symbol	& sxe -> iter . data		1898967						
ANR	1899125	Function	sxe_count_elements	1962:0:50658:51216							
ANR	1899126	FunctionDef	"sxe_count_elements (zval * object , zend_long * count)"		1899125	0					
ANR	1899127	CompoundStatement		1963:0:50730:51216	1899125	0					
ANR	1899128	IdentifierDeclStatement	php_sxe_object * intern ;	1964:1:50733:50756	1899125	0	True				
ANR	1899129	IdentifierDecl	* intern		1899125	0					
ANR	1899130	IdentifierDeclType	php_sxe_object *		1899125	0					
ANR	1899131	Identifier	intern		1899125	1					
ANR	1899132	ExpressionStatement	intern = Z_SXEOBJ_P ( object )	1965:1:50759:50786	1899125	1	True				
ANR	1899133	AssignmentExpression	intern = Z_SXEOBJ_P ( object )		1899125	0		=			
ANR	1899134	Identifier	intern		1899125	0					
ANR	1899135	CallExpression	Z_SXEOBJ_P ( object )		1899125	1					
ANR	1899136	Callee	Z_SXEOBJ_P		1899125	0					
ANR	1899137	Identifier	Z_SXEOBJ_P		1899125	0					
ANR	1899138	ArgumentList	object		1899125	1					
ANR	1899139	Argument	object		1899125	0					
ANR	1899140	Identifier	object		1899125	0					
ANR	1899141	IfStatement	if ( intern -> fptr_count )		1899125	2					
ANR	1899142	Condition	intern -> fptr_count	1966:5:50793:50810	1899125	0	True				
ANR	1899143	PtrMemberAccess	intern -> fptr_count		1899125	0					
ANR	1899144	Identifier	intern		1899125	0					
ANR	1899145	Identifier	fptr_count		1899125	1					
ANR	1899146	CompoundStatement		5:2:86:93	1899125	1					
ANR	1899147	IdentifierDeclStatement	zval rv ;	1967:2:50817:50824	1899125	0	True				
ANR	1899148	IdentifierDecl	rv		1899125	0					
ANR	1899149	IdentifierDeclType	zval		1899125	0					
ANR	1899150	Identifier	rv		1899125	1					
ANR	1899151	ExpressionStatement	"zend_call_method_with_0_params ( object , intern -> zo . ce , & intern -> fptr_count , ""count"" , & rv )"	1968:2:50828:50916	1899125	1	True				
ANR	1899152	CallExpression	"zend_call_method_with_0_params ( object , intern -> zo . ce , & intern -> fptr_count , ""count"" , & rv )"		1899125	0					
ANR	1899153	Callee	zend_call_method_with_0_params		1899125	0					
ANR	1899154	Identifier	zend_call_method_with_0_params		1899125	0					
ANR	1899155	ArgumentList	object		1899125	1					
ANR	1899156	Argument	object		1899125	0					
ANR	1899157	Identifier	object		1899125	0					
ANR	1899158	Argument	intern -> zo . ce		1899125	1					
ANR	1899159	MemberAccess	intern -> zo . ce		1899125	0					
ANR	1899160	PtrMemberAccess	intern -> zo		1899125	0					
ANR	1899161	Identifier	intern		1899125	0					
ANR	1899162	Identifier	zo		1899125	1					
ANR	1899163	Identifier	ce		1899125	1					
ANR	1899164	Argument	& intern -> fptr_count		1899125	2					
ANR	1899165	UnaryOperationExpression	& intern -> fptr_count		1899125	0					
ANR	1899166	UnaryOperator	&		1899125	0					
ANR	1899167	PtrMemberAccess	intern -> fptr_count		1899125	1					
ANR	1899168	Identifier	intern		1899125	0					
ANR	1899169	Identifier	fptr_count		1899125	1					
ANR	1899170	Argument	"""count"""		1899125	3					
ANR	1899171	PrimaryExpression	"""count"""		1899125	0					
ANR	1899172	Argument	& rv		1899125	4					
ANR	1899173	UnaryOperationExpression	& rv		1899125	0					
ANR	1899174	UnaryOperator	&		1899125	0					
ANR	1899175	Identifier	rv		1899125	1					
ANR	1899176	IfStatement	if ( ! Z_ISUNDEF ( rv ) )		1899125	2					
ANR	1899177	Condition	! Z_ISUNDEF ( rv )	1969:6:50924:50937	1899125	0	True				
ANR	1899178	UnaryOperationExpression	! Z_ISUNDEF ( rv )		1899125	0					
ANR	1899179	UnaryOperator	!		1899125	0					
ANR	1899180	CallExpression	Z_ISUNDEF ( rv )		1899125	1					
ANR	1899181	Callee	Z_ISUNDEF		1899125	0					
ANR	1899182	Identifier	Z_ISUNDEF		1899125	0					
ANR	1899183	ArgumentList	rv		1899125	1					
ANR	1899184	Argument	rv		1899125	0					
ANR	1899185	Identifier	rv		1899125	0					
ANR	1899186	CompoundStatement		7:22:209:209	1899125	1					
ANR	1899187	IfStatement	if ( ! Z_ISUNDEF ( intern -> tmp ) )		1899125	0					
ANR	1899188	Condition	! Z_ISUNDEF ( intern -> tmp )	1970:7:50949:50971	1899125	0	True				
ANR	1899189	UnaryOperationExpression	! Z_ISUNDEF ( intern -> tmp )		1899125	0					
ANR	1899190	UnaryOperator	!		1899125	0					
ANR	1899191	CallExpression	Z_ISUNDEF ( intern -> tmp )		1899125	1					
ANR	1899192	Callee	Z_ISUNDEF		1899125	0					
ANR	1899193	Identifier	Z_ISUNDEF		1899125	0					
ANR	1899194	ArgumentList	intern -> tmp		1899125	1					
ANR	1899195	Argument	intern -> tmp		1899125	0					
ANR	1899196	PtrMemberAccess	intern -> tmp		1899125	0					
ANR	1899197	Identifier	intern		1899125	0					
ANR	1899198	Identifier	tmp		1899125	1					
ANR	1899199	CompoundStatement		8:32:243:243	1899125	1					
ANR	1899200	ExpressionStatement	zval_ptr_dtor ( & intern -> tmp )	1971:4:50980:51007	1899125	0	True				
ANR	1899201	CallExpression	zval_ptr_dtor ( & intern -> tmp )		1899125	0					
ANR	1899202	Callee	zval_ptr_dtor		1899125	0					
ANR	1899203	Identifier	zval_ptr_dtor		1899125	0					
ANR	1899204	ArgumentList	& intern -> tmp		1899125	1					
ANR	1899205	Argument	& intern -> tmp		1899125	0					
ANR	1899206	UnaryOperationExpression	& intern -> tmp		1899125	0					
ANR	1899207	UnaryOperator	&		1899125	0					
ANR	1899208	PtrMemberAccess	intern -> tmp		1899125	1					
ANR	1899209	Identifier	intern		1899125	0					
ANR	1899210	Identifier	tmp		1899125	1					
ANR	1899211	ExpressionStatement	"ZVAL_LONG ( & intern -> tmp , zval_get_long ( & rv ) )"	1973:3:51017:51060	1899125	1	True				
ANR	1899212	CallExpression	"ZVAL_LONG ( & intern -> tmp , zval_get_long ( & rv ) )"		1899125	0					
ANR	1899213	Callee	ZVAL_LONG		1899125	0					
ANR	1899214	Identifier	ZVAL_LONG		1899125	0					
ANR	1899215	ArgumentList	& intern -> tmp		1899125	1					
ANR	1899216	Argument	& intern -> tmp		1899125	0					
ANR	1899217	UnaryOperationExpression	& intern -> tmp		1899125	0					
ANR	1899218	UnaryOperator	&		1899125	0					
ANR	1899219	PtrMemberAccess	intern -> tmp		1899125	1					
ANR	1899220	Identifier	intern		1899125	0					
ANR	1899221	Identifier	tmp		1899125	1					
ANR	1899222	Argument	zval_get_long ( & rv )		1899125	1					
ANR	1899223	CallExpression	zval_get_long ( & rv )		1899125	0					
ANR	1899224	Callee	zval_get_long		1899125	0					
ANR	1899225	Identifier	zval_get_long		1899125	0					
ANR	1899226	ArgumentList	& rv		1899125	1					
ANR	1899227	Argument	& rv		1899125	0					
ANR	1899228	UnaryOperationExpression	& rv		1899125	0					
ANR	1899229	UnaryOperator	&		1899125	0					
ANR	1899230	Identifier	rv		1899125	1					
ANR	1899231	ExpressionStatement	zval_ptr_dtor ( & rv )	1974:3:51065:51083	1899125	2	True				
ANR	1899232	CallExpression	zval_ptr_dtor ( & rv )		1899125	0					
ANR	1899233	Callee	zval_ptr_dtor		1899125	0					
ANR	1899234	Identifier	zval_ptr_dtor		1899125	0					
ANR	1899235	ArgumentList	& rv		1899125	1					
ANR	1899236	Argument	& rv		1899125	0					
ANR	1899237	UnaryOperationExpression	& rv		1899125	0					
ANR	1899238	UnaryOperator	&		1899125	0					
ANR	1899239	Identifier	rv		1899125	1					
ANR	1899240	ExpressionStatement	* count = Z_LVAL ( intern -> tmp )	1975:3:51088:51116	1899125	3	True				
ANR	1899241	AssignmentExpression	* count = Z_LVAL ( intern -> tmp )		1899125	0		=			
ANR	1899242	UnaryOperationExpression	* count		1899125	0					
ANR	1899243	UnaryOperator	*		1899125	0					
ANR	1899244	Identifier	count		1899125	1					
ANR	1899245	CallExpression	Z_LVAL ( intern -> tmp )		1899125	1					
ANR	1899246	Callee	Z_LVAL		1899125	0					
ANR	1899247	Identifier	Z_LVAL		1899125	0					
ANR	1899248	ArgumentList	intern -> tmp		1899125	1					
ANR	1899249	Argument	intern -> tmp		1899125	0					
ANR	1899250	PtrMemberAccess	intern -> tmp		1899125	0					
ANR	1899251	Identifier	intern		1899125	0					
ANR	1899252	Identifier	tmp		1899125	1					
ANR	1899253	ReturnStatement	return SUCCESS ;	1976:3:51121:51135	1899125	4	True				
ANR	1899254	Identifier	SUCCESS		1899125	0					
ANR	1899255	ReturnStatement	return FAILURE ;	1978:2:51143:51157	1899125	3	True				
ANR	1899256	Identifier	FAILURE		1899125	0					
ANR	1899257	ReturnStatement	"return php_sxe_count_elements_helper ( intern , count ) ;"	1980:1:51163:51214	1899125	3	True				
ANR	1899258	CallExpression	"php_sxe_count_elements_helper ( intern , count )"		1899125	0					
ANR	1899259	Callee	php_sxe_count_elements_helper		1899125	0					
ANR	1899260	Identifier	php_sxe_count_elements_helper		1899125	0					
ANR	1899261	ArgumentList	intern		1899125	1					
ANR	1899262	Argument	intern		1899125	0					
ANR	1899263	Identifier	intern		1899125	0					
ANR	1899264	Argument	count		1899125	1					
ANR	1899265	Identifier	count		1899125	0					
ANR	1899266	ReturnType	static int		1899125	1					
ANR	1899267	Identifier	sxe_count_elements		1899125	2					
ANR	1899268	ParameterList	"zval * object , zend_long * count"		1899125	3					
ANR	1899269	Parameter	zval * object	1962:30:50688:50699	1899125	0	True				
ANR	1899270	ParameterType	zval *		1899125	0					
ANR	1899271	Identifier	object		1899125	1					
ANR	1899272	Parameter	zend_long * count	1962:44:50702:50717	1899125	1	True				
ANR	1899273	ParameterType	zend_long *		1899125	0					
ANR	1899274	Identifier	count		1899125	1					
ANR	1899275	CFGEntryNode	ENTRY		1899125		True				
ANR	1899276	CFGExitNode	EXIT		1899125		True				
ANR	1899277	Symbol	* intern		1899125						
ANR	1899278	Symbol	& intern -> tmp		1899125						
ANR	1899279	Symbol	intern		1899125						
ANR	1899280	Symbol	SUCCESS		1899125						
ANR	1899281	Symbol	rv		1899125						
ANR	1899282	Symbol	intern -> tmp		1899125						
ANR	1899283	Symbol	Z_ISUNDEF		1899125						
ANR	1899284	Symbol	count		1899125						
ANR	1899285	Symbol	Z_LVAL		1899125						
ANR	1899286	Symbol	php_sxe_count_elements_helper		1899125						
ANR	1899287	Symbol	FAILURE		1899125						
ANR	1899288	Symbol	intern -> fptr_count		1899125						
ANR	1899289	Symbol	& rv		1899125						
ANR	1899290	Symbol	* count		1899125						
ANR	1899291	Symbol	zval_get_long		1899125						
ANR	1899292	Symbol	intern -> zo . ce		1899125						
ANR	1899293	Symbol	intern -> zo		1899125						
ANR	1899294	Symbol	& intern -> fptr_count		1899125						
ANR	1899295	Symbol	Z_SXEOBJ_P		1899125						
ANR	1899296	Symbol	object		1899125						
ANR	1899297	DeclStmt									
ANR	1899298	Decl							zend_long	zend_long	count
ANR	1899299	DeclStmt									
ANR	1899300	Decl							php_sxe_object	php_sxe_object *	sxe
ANR	1899301	Function	sxe_get_value	2001:0:51536:51757							
ANR	1899302	FunctionDef	"sxe_get_value (zval * z , zval * rv)"		1899301	0					
ANR	1899303	CompoundStatement		2002:0:51592:51757	1899301	0					
ANR	1899304	IfStatement	"if ( sxe_object_cast_ex ( z , rv , IS_STRING ) == FAILURE )"		1899301	0					
ANR	1899305	Condition	"sxe_object_cast_ex ( z , rv , IS_STRING ) == FAILURE"	2003:5:51599:51645	1899301	0	True				
ANR	1899306	EqualityExpression	"sxe_object_cast_ex ( z , rv , IS_STRING ) == FAILURE"		1899301	0		==			
ANR	1899307	CallExpression	"sxe_object_cast_ex ( z , rv , IS_STRING )"		1899301	0					
ANR	1899308	Callee	sxe_object_cast_ex		1899301	0					
ANR	1899309	Identifier	sxe_object_cast_ex		1899301	0					
ANR	1899310	ArgumentList	z		1899301	1					
ANR	1899311	Argument	z		1899301	0					
ANR	1899312	Identifier	z		1899301	0					
ANR	1899313	Argument	rv		1899301	1					
ANR	1899314	Identifier	rv		1899301	0					
ANR	1899315	Argument	IS_STRING		1899301	2					
ANR	1899316	Identifier	IS_STRING		1899301	0					
ANR	1899317	Identifier	FAILURE		1899301	1					
ANR	1899318	CompoundStatement		2:54:55:55	1899301	1					
ANR	1899319	ExpressionStatement	"zend_error ( E_ERROR , ""Unable to cast node to string"" )"	2004:2:51652:51704	1899301	0	True				
ANR	1899320	CallExpression	"zend_error ( E_ERROR , ""Unable to cast node to string"" )"		1899301	0					
ANR	1899321	Callee	zend_error		1899301	0					
ANR	1899322	Identifier	zend_error		1899301	0					
ANR	1899323	ArgumentList	E_ERROR		1899301	1					
ANR	1899324	Argument	E_ERROR		1899301	0					
ANR	1899325	Identifier	E_ERROR		1899301	0					
ANR	1899326	Argument	"""Unable to cast node to string"""		1899301	1					
ANR	1899327	PrimaryExpression	"""Unable to cast node to string"""		1899301	0					
ANR	1899328	ReturnStatement	return rv ;	2008:1:51746:51755	1899301	1	True				
ANR	1899329	Identifier	rv		1899301	0					
ANR	1899330	ReturnType	static zval *		1899301	1					
ANR	1899331	Identifier	sxe_get_value		1899301	2					
ANR	1899332	ParameterList	"zval * z , zval * rv"		1899301	3					
ANR	1899333	Parameter	zval * z	2001:27:51563:51569	1899301	0	True				
ANR	1899334	ParameterType	zval *		1899301	0					
ANR	1899335	Identifier	z		1899301	1					
ANR	1899336	Parameter	zval * rv	2001:36:51572:51579	1899301	1	True				
ANR	1899337	ParameterType	zval *		1899301	0					
ANR	1899338	Identifier	rv		1899301	1					
ANR	1899339	CFGEntryNode	ENTRY		1899301		True				
ANR	1899340	CFGExitNode	EXIT		1899301		True				
ANR	1899341	Symbol	E_ERROR		1899301						
ANR	1899342	Symbol	rv		1899301						
ANR	1899343	Symbol	z		1899301						
ANR	1899344	Symbol	IS_STRING		1899301						
ANR	1899345	Symbol	FAILURE		1899301						
ANR	1899346	Symbol	sxe_object_cast_ex		1899301						
ANR	1899347	DeclStmt									
ANR	1899348	Decl							zend_object_handlers	zend_object_handlers	sxe_object_handlers
ANR	1899349	Function	sxe_object_clone	2041:0:52495:53309							
ANR	1899350	FunctionDef	sxe_object_clone (zval * object)		1899349	0					
ANR	1899351	CompoundStatement		2043:0:52547:53309	1899349	0					
ANR	1899352	IdentifierDeclStatement	php_sxe_object * sxe = Z_SXEOBJ_P ( object ) ;	2044:1:52550:52590	1899349	0	True				
ANR	1899353	IdentifierDecl	* sxe = Z_SXEOBJ_P ( object )		1899349	0					
ANR	1899354	IdentifierDeclType	php_sxe_object *		1899349	0					
ANR	1899355	Identifier	sxe		1899349	1					
ANR	1899356	AssignmentExpression	* sxe = Z_SXEOBJ_P ( object )		1899349	2		=			
ANR	1899357	Identifier	sxe		1899349	0					
ANR	1899358	CallExpression	Z_SXEOBJ_P ( object )		1899349	1					
ANR	1899359	Callee	Z_SXEOBJ_P		1899349	0					
ANR	1899360	Identifier	Z_SXEOBJ_P		1899349	0					
ANR	1899361	ArgumentList	object		1899349	1					
ANR	1899362	Argument	object		1899349	0					
ANR	1899363	Identifier	object		1899349	0					
ANR	1899364	IdentifierDeclStatement	php_sxe_object * clone ;	2045:1:52593:52614	1899349	1	True				
ANR	1899365	IdentifierDecl	* clone		1899349	0					
ANR	1899366	IdentifierDeclType	php_sxe_object *		1899349	0					
ANR	1899367	Identifier	clone		1899349	1					
ANR	1899368	IdentifierDeclStatement	xmlNodePtr nodep = NULL ;	2046:1:52617:52640	1899349	2	True				
ANR	1899369	IdentifierDecl	nodep = NULL		1899349	0					
ANR	1899370	IdentifierDeclType	xmlNodePtr		1899349	0					
ANR	1899371	Identifier	nodep		1899349	1					
ANR	1899372	AssignmentExpression	nodep = NULL		1899349	2		=			
ANR	1899373	Identifier	NULL		1899349	0					
ANR	1899374	Identifier	NULL		1899349	1					
ANR	1899375	IdentifierDeclStatement	xmlDocPtr docp = NULL ;	2047:1:52643:52664	1899349	3	True				
ANR	1899376	IdentifierDecl	docp = NULL		1899349	0					
ANR	1899377	IdentifierDeclType	xmlDocPtr		1899349	0					
ANR	1899378	Identifier	docp		1899349	1					
ANR	1899379	AssignmentExpression	docp = NULL		1899349	2		=			
ANR	1899380	Identifier	NULL		1899349	0					
ANR	1899381	Identifier	NULL		1899349	1					
ANR	1899382	ExpressionStatement	"clone = php_sxe_object_new ( sxe -> zo . ce , sxe -> fptr_count )"	2049:1:52668:52723	1899349	4	True				
ANR	1899383	AssignmentExpression	"clone = php_sxe_object_new ( sxe -> zo . ce , sxe -> fptr_count )"		1899349	0		=			
ANR	1899384	Identifier	clone		1899349	0					
ANR	1899385	CallExpression	"php_sxe_object_new ( sxe -> zo . ce , sxe -> fptr_count )"		1899349	1					
ANR	1899386	Callee	php_sxe_object_new		1899349	0					
ANR	1899387	Identifier	php_sxe_object_new		1899349	0					
ANR	1899388	ArgumentList	sxe -> zo . ce		1899349	1					
ANR	1899389	Argument	sxe -> zo . ce		1899349	0					
ANR	1899390	MemberAccess	sxe -> zo . ce		1899349	0					
ANR	1899391	PtrMemberAccess	sxe -> zo		1899349	0					
ANR	1899392	Identifier	sxe		1899349	0					
ANR	1899393	Identifier	zo		1899349	1					
ANR	1899394	Identifier	ce		1899349	1					
ANR	1899395	Argument	sxe -> fptr_count		1899349	1					
ANR	1899396	PtrMemberAccess	sxe -> fptr_count		1899349	0					
ANR	1899397	Identifier	sxe		1899349	0					
ANR	1899398	Identifier	fptr_count		1899349	1					
ANR	1899399	ExpressionStatement	clone -> document = sxe -> document	2050:1:52726:52757	1899349	5	True				
ANR	1899400	AssignmentExpression	clone -> document = sxe -> document		1899349	0		=			
ANR	1899401	PtrMemberAccess	clone -> document		1899349	0					
ANR	1899402	Identifier	clone		1899349	0					
ANR	1899403	Identifier	document		1899349	1					
ANR	1899404	PtrMemberAccess	sxe -> document		1899349	1					
ANR	1899405	Identifier	sxe		1899349	0					
ANR	1899406	Identifier	document		1899349	1					
ANR	1899407	IfStatement	if ( clone -> document )		1899349	6					
ANR	1899408	Condition	clone -> document	2051:5:52764:52778	1899349	0	True				
ANR	1899409	PtrMemberAccess	clone -> document		1899349	0					
ANR	1899410	Identifier	clone		1899349	0					
ANR	1899411	Identifier	document		1899349	1					
ANR	1899412	CompoundStatement		9:22:233:233	1899349	1					
ANR	1899413	ExpressionStatement	clone -> document -> refcount ++	2052:2:52785:52812	1899349	0	True				
ANR	1899414	PostIncDecOperationExpression	clone -> document -> refcount ++		1899349	0					
ANR	1899415	PtrMemberAccess	clone -> document -> refcount		1899349	0					
ANR	1899416	PtrMemberAccess	clone -> document		1899349	0					
ANR	1899417	Identifier	clone		1899349	0					
ANR	1899418	Identifier	document		1899349	1					
ANR	1899419	Identifier	refcount		1899349	1					
ANR	1899420	IncDec	++		1899349	1					
ANR	1899421	ExpressionStatement	docp = clone -> document -> ptr	2053:2:52816:52843	1899349	1	True				
ANR	1899422	AssignmentExpression	docp = clone -> document -> ptr		1899349	0		=			
ANR	1899423	Identifier	docp		1899349	0					
ANR	1899424	PtrMemberAccess	clone -> document -> ptr		1899349	1					
ANR	1899425	PtrMemberAccess	clone -> document		1899349	0					
ANR	1899426	Identifier	clone		1899349	0					
ANR	1899427	Identifier	document		1899349	1					
ANR	1899428	Identifier	ptr		1899349	1					
ANR	1899429	ExpressionStatement	clone -> iter . isprefix = sxe -> iter . isprefix	2056:1:52850:52891	1899349	7	True				
ANR	1899430	AssignmentExpression	clone -> iter . isprefix = sxe -> iter . isprefix		1899349	0		=			
ANR	1899431	MemberAccess	clone -> iter . isprefix		1899349	0					
ANR	1899432	PtrMemberAccess	clone -> iter		1899349	0					
ANR	1899433	Identifier	clone		1899349	0					
ANR	1899434	Identifier	iter		1899349	1					
ANR	1899435	Identifier	isprefix		1899349	1					
ANR	1899436	MemberAccess	sxe -> iter . isprefix		1899349	1					
ANR	1899437	PtrMemberAccess	sxe -> iter		1899349	0					
ANR	1899438	Identifier	sxe		1899349	0					
ANR	1899439	Identifier	iter		1899349	1					
ANR	1899440	Identifier	isprefix		1899349	1					
ANR	1899441	IfStatement	if ( sxe -> iter . name != NULL )		1899349	8					
ANR	1899442	Condition	sxe -> iter . name != NULL	2057:5:52898:52919	1899349	0	True				
ANR	1899443	EqualityExpression	sxe -> iter . name != NULL		1899349	0		!=			
ANR	1899444	MemberAccess	sxe -> iter . name		1899349	0					
ANR	1899445	PtrMemberAccess	sxe -> iter		1899349	0					
ANR	1899446	Identifier	sxe		1899349	0					
ANR	1899447	Identifier	iter		1899349	1					
ANR	1899448	Identifier	name		1899349	1					
ANR	1899449	Identifier	NULL		1899349	1					
ANR	1899450	CompoundStatement		15:29:374:374	1899349	1					
ANR	1899451	ExpressionStatement	clone -> iter . name = ( xmlChar * ) estrdup ( ( char * ) sxe -> iter . name )	2058:2:52926:52985	1899349	0	True				
ANR	1899452	AssignmentExpression	clone -> iter . name = ( xmlChar * ) estrdup ( ( char * ) sxe -> iter . name )		1899349	0		=			
ANR	1899453	MemberAccess	clone -> iter . name		1899349	0					
ANR	1899454	PtrMemberAccess	clone -> iter		1899349	0					
ANR	1899455	Identifier	clone		1899349	0					
ANR	1899456	Identifier	iter		1899349	1					
ANR	1899457	Identifier	name		1899349	1					
ANR	1899458	CastExpression	( xmlChar * ) estrdup ( ( char * ) sxe -> iter . name )		1899349	1					
ANR	1899459	CastTarget	xmlChar *		1899349	0					
ANR	1899460	CallExpression	estrdup ( ( char * ) sxe -> iter . name )		1899349	1					
ANR	1899461	Callee	estrdup		1899349	0					
ANR	1899462	Identifier	estrdup		1899349	0					
ANR	1899463	ArgumentList	( char * ) sxe -> iter . name		1899349	1					
ANR	1899464	Argument	( char * ) sxe -> iter . name		1899349	0					
ANR	1899465	CastExpression	( char * ) sxe -> iter . name		1899349	0					
ANR	1899466	CastTarget	char *		1899349	0					
ANR	1899467	MemberAccess	sxe -> iter . name		1899349	1					
ANR	1899468	PtrMemberAccess	sxe -> iter		1899349	0					
ANR	1899469	Identifier	sxe		1899349	0					
ANR	1899470	Identifier	iter		1899349	1					
ANR	1899471	Identifier	name		1899349	1					
ANR	1899472	IfStatement	if ( sxe -> iter . nsprefix != NULL )		1899349	9					
ANR	1899473	Condition	sxe -> iter . nsprefix != NULL	2060:5:52995:53020	1899349	0	True				
ANR	1899474	EqualityExpression	sxe -> iter . nsprefix != NULL		1899349	0		!=			
ANR	1899475	MemberAccess	sxe -> iter . nsprefix		1899349	0					
ANR	1899476	PtrMemberAccess	sxe -> iter		1899349	0					
ANR	1899477	Identifier	sxe		1899349	0					
ANR	1899478	Identifier	iter		1899349	1					
ANR	1899479	Identifier	nsprefix		1899349	1					
ANR	1899480	Identifier	NULL		1899349	1					
ANR	1899481	CompoundStatement		18:33:475:475	1899349	1					
ANR	1899482	ExpressionStatement	clone -> iter . nsprefix = ( xmlChar * ) estrdup ( ( char * ) sxe -> iter . nsprefix )	2061:2:53027:53094	1899349	0	True				
ANR	1899483	AssignmentExpression	clone -> iter . nsprefix = ( xmlChar * ) estrdup ( ( char * ) sxe -> iter . nsprefix )		1899349	0		=			
ANR	1899484	MemberAccess	clone -> iter . nsprefix		1899349	0					
ANR	1899485	PtrMemberAccess	clone -> iter		1899349	0					
ANR	1899486	Identifier	clone		1899349	0					
ANR	1899487	Identifier	iter		1899349	1					
ANR	1899488	Identifier	nsprefix		1899349	1					
ANR	1899489	CastExpression	( xmlChar * ) estrdup ( ( char * ) sxe -> iter . nsprefix )		1899349	1					
ANR	1899490	CastTarget	xmlChar *		1899349	0					
ANR	1899491	CallExpression	estrdup ( ( char * ) sxe -> iter . nsprefix )		1899349	1					
ANR	1899492	Callee	estrdup		1899349	0					
ANR	1899493	Identifier	estrdup		1899349	0					
ANR	1899494	ArgumentList	( char * ) sxe -> iter . nsprefix		1899349	1					
ANR	1899495	Argument	( char * ) sxe -> iter . nsprefix		1899349	0					
ANR	1899496	CastExpression	( char * ) sxe -> iter . nsprefix		1899349	0					
ANR	1899497	CastTarget	char *		1899349	0					
ANR	1899498	MemberAccess	sxe -> iter . nsprefix		1899349	1					
ANR	1899499	PtrMemberAccess	sxe -> iter		1899349	0					
ANR	1899500	Identifier	sxe		1899349	0					
ANR	1899501	Identifier	iter		1899349	1					
ANR	1899502	Identifier	nsprefix		1899349	1					
ANR	1899503	ExpressionStatement	clone -> iter . type = sxe -> iter . type	2063:1:53100:53133	1899349	10	True				
ANR	1899504	AssignmentExpression	clone -> iter . type = sxe -> iter . type		1899349	0		=			
ANR	1899505	MemberAccess	clone -> iter . type		1899349	0					
ANR	1899506	PtrMemberAccess	clone -> iter		1899349	0					
ANR	1899507	Identifier	clone		1899349	0					
ANR	1899508	Identifier	iter		1899349	1					
ANR	1899509	Identifier	type		1899349	1					
ANR	1899510	MemberAccess	sxe -> iter . type		1899349	1					
ANR	1899511	PtrMemberAccess	sxe -> iter		1899349	0					
ANR	1899512	Identifier	sxe		1899349	0					
ANR	1899513	Identifier	iter		1899349	1					
ANR	1899514	Identifier	type		1899349	1					
ANR	1899515	IfStatement	if ( sxe -> node )		1899349	11					
ANR	1899516	Condition	sxe -> node	2065:5:53141:53149	1899349	0	True				
ANR	1899517	PtrMemberAccess	sxe -> node		1899349	0					
ANR	1899518	Identifier	sxe		1899349	0					
ANR	1899519	Identifier	node		1899349	1					
ANR	1899520	CompoundStatement		23:16:604:604	1899349	1					
ANR	1899521	ExpressionStatement	"nodep = xmlDocCopyNode ( sxe -> node -> node , docp , 1 )"	2066:2:53156:53204	1899349	0	True				
ANR	1899522	AssignmentExpression	"nodep = xmlDocCopyNode ( sxe -> node -> node , docp , 1 )"		1899349	0		=			
ANR	1899523	Identifier	nodep		1899349	0					
ANR	1899524	CallExpression	"xmlDocCopyNode ( sxe -> node -> node , docp , 1 )"		1899349	1					
ANR	1899525	Callee	xmlDocCopyNode		1899349	0					
ANR	1899526	Identifier	xmlDocCopyNode		1899349	0					
ANR	1899527	ArgumentList	sxe -> node -> node		1899349	1					
ANR	1899528	Argument	sxe -> node -> node		1899349	0					
ANR	1899529	PtrMemberAccess	sxe -> node -> node		1899349	0					
ANR	1899530	PtrMemberAccess	sxe -> node		1899349	0					
ANR	1899531	Identifier	sxe		1899349	0					
ANR	1899532	Identifier	node		1899349	1					
ANR	1899533	Identifier	node		1899349	1					
ANR	1899534	Argument	docp		1899349	1					
ANR	1899535	Identifier	docp		1899349	0					
ANR	1899536	Argument	1		1899349	2					
ANR	1899537	PrimaryExpression	1		1899349	0					
ANR	1899538	ExpressionStatement	"php_libxml_increment_node_ptr ( ( php_libxml_node_object * ) clone , nodep , NULL )"	2069:1:53211:53286	1899349	12	True				
ANR	1899539	CallExpression	"php_libxml_increment_node_ptr ( ( php_libxml_node_object * ) clone , nodep , NULL )"		1899349	0					
ANR	1899540	Callee	php_libxml_increment_node_ptr		1899349	0					
ANR	1899541	Identifier	php_libxml_increment_node_ptr		1899349	0					
ANR	1899542	ArgumentList	( php_libxml_node_object * ) clone		1899349	1					
ANR	1899543	Argument	( php_libxml_node_object * ) clone		1899349	0					
ANR	1899544	CastExpression	( php_libxml_node_object * ) clone		1899349	0					
ANR	1899545	CastTarget	php_libxml_node_object *		1899349	0					
ANR	1899546	Identifier	clone		1899349	1					
ANR	1899547	Argument	nodep		1899349	1					
ANR	1899548	Identifier	nodep		1899349	0					
ANR	1899549	Argument	NULL		1899349	2					
ANR	1899550	Identifier	NULL		1899349	0					
ANR	1899551	ReturnStatement	return & clone -> zo ;	2071:1:53290:53307	1899349	13	True				
ANR	1899552	UnaryOperationExpression	& clone -> zo		1899349	0					
ANR	1899553	UnaryOperator	&		1899349	0					
ANR	1899554	PtrMemberAccess	clone -> zo		1899349	1					
ANR	1899555	Identifier	clone		1899349	0					
ANR	1899556	Identifier	zo		1899349	1					
ANR	1899557	ReturnType	static zend_object *		1899349	1					
ANR	1899558	Identifier	sxe_object_clone		1899349	2					
ANR	1899559	ParameterList	zval * object		1899349	3					
ANR	1899560	Parameter	zval * object	2042:17:52533:52544	1899349	0	True				
ANR	1899561	ParameterType	zval *		1899349	0					
ANR	1899562	Identifier	object		1899349	1					
ANR	1899563	CFGEntryNode	ENTRY		1899349		True				
ANR	1899564	CFGExitNode	EXIT		1899349		True				
ANR	1899565	Symbol	sxe -> fptr_count		1899349						
ANR	1899566	Symbol	* sxe		1899349						
ANR	1899567	Symbol	clone -> iter . name		1899349						
ANR	1899568	Symbol	clone -> iter . isprefix		1899349						
ANR	1899569	Symbol	& clone -> zo		1899349						
ANR	1899570	Symbol	clone -> iter . nsprefix		1899349						
ANR	1899571	Symbol	clone -> document		1899349						
ANR	1899572	Symbol	clone -> iter		1899349						
ANR	1899573	Symbol	clone -> document -> refcount		1899349						
ANR	1899574	Symbol	sxe -> zo		1899349						
ANR	1899575	Symbol	docp		1899349						
ANR	1899576	Symbol	* * clone		1899349						
ANR	1899577	Symbol	* clone -> document		1899349						
ANR	1899578	Symbol	sxe -> node		1899349						
ANR	1899579	Symbol	clone -> iter . type		1899349						
ANR	1899580	Symbol	sxe		1899349						
ANR	1899581	Symbol	* clone		1899349						
ANR	1899582	Symbol	NULL		1899349						
ANR	1899583	Symbol	sxe -> zo . ce		1899349						
ANR	1899584	Symbol	* sxe -> node		1899349						
ANR	1899585	Symbol	sxe -> node -> node		1899349						
ANR	1899586	Symbol	php_sxe_object_new		1899349						
ANR	1899587	Symbol	sxe -> iter . isprefix		1899349						
ANR	1899588	Symbol	nodep		1899349						
ANR	1899589	Symbol	sxe -> iter . type		1899349						
ANR	1899590	Symbol	clone -> document -> ptr		1899349						
ANR	1899591	Symbol	sxe -> iter		1899349						
ANR	1899592	Symbol	sxe -> iter . name		1899349						
ANR	1899593	Symbol	* * sxe		1899349						
ANR	1899594	Symbol	sxe -> iter . nsprefix		1899349						
ANR	1899595	Symbol	xmlDocCopyNode		1899349						
ANR	1899596	Symbol	clone		1899349						
ANR	1899597	Symbol	estrdup		1899349						
ANR	1899598	Symbol	Z_SXEOBJ_P		1899349						
ANR	1899599	Symbol	sxe -> document		1899349						
ANR	1899600	Symbol	object		1899349						
ANR	1899601	Function	sxe_object_dtor	2077:0:53351:53879							
ANR	1899602	FunctionDef	sxe_object_dtor (zend_object * object)		1899601	0					
ANR	1899603	CompoundStatement		2078:0:53400:53879	1899601	0					
ANR	1899604	IdentifierDeclStatement	php_sxe_object * sxe ;	2080:1:53466:53485	1899601	0	True				
ANR	1899605	IdentifierDecl	* sxe		1899601	0					
ANR	1899606	IdentifierDeclType	php_sxe_object *		1899601	0					
ANR	1899607	Identifier	sxe		1899601	1					
ANR	1899608	ExpressionStatement	sxe = php_sxe_fetch_object ( object )	2082:1:53489:53523	1899601	1	True				
ANR	1899609	AssignmentExpression	sxe = php_sxe_fetch_object ( object )		1899601	0		=			
ANR	1899610	Identifier	sxe		1899601	0					
ANR	1899611	CallExpression	php_sxe_fetch_object ( object )		1899601	1					
ANR	1899612	Callee	php_sxe_fetch_object		1899601	0					
ANR	1899613	Identifier	php_sxe_fetch_object		1899601	0					
ANR	1899614	ArgumentList	object		1899601	1					
ANR	1899615	Argument	object		1899601	0					
ANR	1899616	Identifier	object		1899601	0					
ANR	1899617	IfStatement	if ( ! Z_ISUNDEF ( sxe -> iter . data ) )		1899601	2					
ANR	1899618	Condition	! Z_ISUNDEF ( sxe -> iter . data )	2084:5:53531:53556	1899601	0	True				
ANR	1899619	UnaryOperationExpression	! Z_ISUNDEF ( sxe -> iter . data )		1899601	0					
ANR	1899620	UnaryOperator	!		1899601	0					
ANR	1899621	CallExpression	Z_ISUNDEF ( sxe -> iter . data )		1899601	1					
ANR	1899622	Callee	Z_ISUNDEF		1899601	0					
ANR	1899623	Identifier	Z_ISUNDEF		1899601	0					
ANR	1899624	ArgumentList	sxe -> iter . data		1899601	1					
ANR	1899625	Argument	sxe -> iter . data		1899601	0					
ANR	1899626	MemberAccess	sxe -> iter . data		1899601	0					
ANR	1899627	PtrMemberAccess	sxe -> iter		1899601	0					
ANR	1899628	Identifier	sxe		1899601	0					
ANR	1899629	Identifier	iter		1899601	1					
ANR	1899630	Identifier	data		1899601	1					
ANR	1899631	CompoundStatement		7:33:158:158	1899601	1					
ANR	1899632	ExpressionStatement	zval_ptr_dtor ( & sxe -> iter . data )	2085:2:53563:53593	1899601	0	True				
ANR	1899633	CallExpression	zval_ptr_dtor ( & sxe -> iter . data )		1899601	0					
ANR	1899634	Callee	zval_ptr_dtor		1899601	0					
ANR	1899635	Identifier	zval_ptr_dtor		1899601	0					
ANR	1899636	ArgumentList	& sxe -> iter . data		1899601	1					
ANR	1899637	Argument	& sxe -> iter . data		1899601	0					
ANR	1899638	UnaryOperationExpression	& sxe -> iter . data		1899601	0					
ANR	1899639	UnaryOperator	&		1899601	0					
ANR	1899640	MemberAccess	sxe -> iter . data		1899601	1					
ANR	1899641	PtrMemberAccess	sxe -> iter		1899601	0					
ANR	1899642	Identifier	sxe		1899601	0					
ANR	1899643	Identifier	iter		1899601	1					
ANR	1899644	Identifier	data		1899601	1					
ANR	1899645	ExpressionStatement	ZVAL_UNDEF ( & sxe -> iter . data )	2086:2:53597:53624	1899601	1	True				
ANR	1899646	CallExpression	ZVAL_UNDEF ( & sxe -> iter . data )		1899601	0					
ANR	1899647	Callee	ZVAL_UNDEF		1899601	0					
ANR	1899648	Identifier	ZVAL_UNDEF		1899601	0					
ANR	1899649	ArgumentList	& sxe -> iter . data		1899601	1					
ANR	1899650	Argument	& sxe -> iter . data		1899601	0					
ANR	1899651	UnaryOperationExpression	& sxe -> iter . data		1899601	0					
ANR	1899652	UnaryOperator	&		1899601	0					
ANR	1899653	MemberAccess	sxe -> iter . data		1899601	1					
ANR	1899654	PtrMemberAccess	sxe -> iter		1899601	0					
ANR	1899655	Identifier	sxe		1899601	0					
ANR	1899656	Identifier	iter		1899601	1					
ANR	1899657	Identifier	data		1899601	1					
ANR	1899658	IfStatement	if ( sxe -> iter . name )		1899601	3					
ANR	1899659	Condition	sxe -> iter . name	2089:5:53635:53648	1899601	0	True				
ANR	1899660	MemberAccess	sxe -> iter . name		1899601	0					
ANR	1899661	PtrMemberAccess	sxe -> iter		1899601	0					
ANR	1899662	Identifier	sxe		1899601	0					
ANR	1899663	Identifier	iter		1899601	1					
ANR	1899664	Identifier	name		1899601	1					
ANR	1899665	CompoundStatement		12:21:250:250	1899601	1					
ANR	1899666	ExpressionStatement	efree ( sxe -> iter . name )	2090:2:53655:53676	1899601	0	True				
ANR	1899667	CallExpression	efree ( sxe -> iter . name )		1899601	0					
ANR	1899668	Callee	efree		1899601	0					
ANR	1899669	Identifier	efree		1899601	0					
ANR	1899670	ArgumentList	sxe -> iter . name		1899601	1					
ANR	1899671	Argument	sxe -> iter . name		1899601	0					
ANR	1899672	MemberAccess	sxe -> iter . name		1899601	0					
ANR	1899673	PtrMemberAccess	sxe -> iter		1899601	0					
ANR	1899674	Identifier	sxe		1899601	0					
ANR	1899675	Identifier	iter		1899601	1					
ANR	1899676	Identifier	name		1899601	1					
ANR	1899677	ExpressionStatement	sxe -> iter . name = NULL	2091:2:53680:53701	1899601	1	True				
ANR	1899678	AssignmentExpression	sxe -> iter . name = NULL		1899601	0		=			
ANR	1899679	MemberAccess	sxe -> iter . name		1899601	0					
ANR	1899680	PtrMemberAccess	sxe -> iter		1899601	0					
ANR	1899681	Identifier	sxe		1899601	0					
ANR	1899682	Identifier	iter		1899601	1					
ANR	1899683	Identifier	name		1899601	1					
ANR	1899684	Identifier	NULL		1899601	1					
ANR	1899685	IfStatement	if ( sxe -> iter . nsprefix )		1899601	4					
ANR	1899686	Condition	sxe -> iter . nsprefix	2093:5:53711:53728	1899601	0	True				
ANR	1899687	MemberAccess	sxe -> iter . nsprefix		1899601	0					
ANR	1899688	PtrMemberAccess	sxe -> iter		1899601	0					
ANR	1899689	Identifier	sxe		1899601	0					
ANR	1899690	Identifier	iter		1899601	1					
ANR	1899691	Identifier	nsprefix		1899601	1					
ANR	1899692	CompoundStatement		16:25:330:330	1899601	1					
ANR	1899693	ExpressionStatement	efree ( sxe -> iter . nsprefix )	2094:2:53735:53760	1899601	0	True				
ANR	1899694	CallExpression	efree ( sxe -> iter . nsprefix )		1899601	0					
ANR	1899695	Callee	efree		1899601	0					
ANR	1899696	Identifier	efree		1899601	0					
ANR	1899697	ArgumentList	sxe -> iter . nsprefix		1899601	1					
ANR	1899698	Argument	sxe -> iter . nsprefix		1899601	0					
ANR	1899699	MemberAccess	sxe -> iter . nsprefix		1899601	0					
ANR	1899700	PtrMemberAccess	sxe -> iter		1899601	0					
ANR	1899701	Identifier	sxe		1899601	0					
ANR	1899702	Identifier	iter		1899601	1					
ANR	1899703	Identifier	nsprefix		1899601	1					
ANR	1899704	ExpressionStatement	sxe -> iter . nsprefix = NULL	2095:2:53764:53789	1899601	1	True				
ANR	1899705	AssignmentExpression	sxe -> iter . nsprefix = NULL		1899601	0		=			
ANR	1899706	MemberAccess	sxe -> iter . nsprefix		1899601	0					
ANR	1899707	PtrMemberAccess	sxe -> iter		1899601	0					
ANR	1899708	Identifier	sxe		1899601	0					
ANR	1899709	Identifier	iter		1899601	1					
ANR	1899710	Identifier	nsprefix		1899601	1					
ANR	1899711	Identifier	NULL		1899601	1					
ANR	1899712	IfStatement	if ( ! Z_ISUNDEF ( sxe -> tmp ) )		1899601	5					
ANR	1899713	Condition	! Z_ISUNDEF ( sxe -> tmp )	2097:5:53799:53818	1899601	0	True				
ANR	1899714	UnaryOperationExpression	! Z_ISUNDEF ( sxe -> tmp )		1899601	0					
ANR	1899715	UnaryOperator	!		1899601	0					
ANR	1899716	CallExpression	Z_ISUNDEF ( sxe -> tmp )		1899601	1					
ANR	1899717	Callee	Z_ISUNDEF		1899601	0					
ANR	1899718	Identifier	Z_ISUNDEF		1899601	0					
ANR	1899719	ArgumentList	sxe -> tmp		1899601	1					
ANR	1899720	Argument	sxe -> tmp		1899601	0					
ANR	1899721	PtrMemberAccess	sxe -> tmp		1899601	0					
ANR	1899722	Identifier	sxe		1899601	0					
ANR	1899723	Identifier	tmp		1899601	1					
ANR	1899724	CompoundStatement		20:27:420:420	1899601	1					
ANR	1899725	ExpressionStatement	zval_ptr_dtor ( & sxe -> tmp )	2098:2:53825:53849	1899601	0	True				
ANR	1899726	CallExpression	zval_ptr_dtor ( & sxe -> tmp )		1899601	0					
ANR	1899727	Callee	zval_ptr_dtor		1899601	0					
ANR	1899728	Identifier	zval_ptr_dtor		1899601	0					
ANR	1899729	ArgumentList	& sxe -> tmp		1899601	1					
ANR	1899730	Argument	& sxe -> tmp		1899601	0					
ANR	1899731	UnaryOperationExpression	& sxe -> tmp		1899601	0					
ANR	1899732	UnaryOperator	&		1899601	0					
ANR	1899733	PtrMemberAccess	sxe -> tmp		1899601	1					
ANR	1899734	Identifier	sxe		1899601	0					
ANR	1899735	Identifier	tmp		1899601	1					
ANR	1899736	ExpressionStatement	ZVAL_UNDEF ( & sxe -> tmp )	2099:2:53853:53874	1899601	1	True				
ANR	1899737	CallExpression	ZVAL_UNDEF ( & sxe -> tmp )		1899601	0					
ANR	1899738	Callee	ZVAL_UNDEF		1899601	0					
ANR	1899739	Identifier	ZVAL_UNDEF		1899601	0					
ANR	1899740	ArgumentList	& sxe -> tmp		1899601	1					
ANR	1899741	Argument	& sxe -> tmp		1899601	0					
ANR	1899742	UnaryOperationExpression	& sxe -> tmp		1899601	0					
ANR	1899743	UnaryOperator	&		1899601	0					
ANR	1899744	PtrMemberAccess	sxe -> tmp		1899601	1					
ANR	1899745	Identifier	sxe		1899601	0					
ANR	1899746	Identifier	tmp		1899601	1					
ANR	1899747	ReturnType	static void		1899601	1					
ANR	1899748	Identifier	sxe_object_dtor		1899601	2					
ANR	1899749	ParameterList	zend_object * object		1899601	3					
ANR	1899750	Parameter	zend_object * object	2077:28:53379:53397	1899601	0	True				
ANR	1899751	ParameterType	zend_object *		1899601	0					
ANR	1899752	Identifier	object		1899601	1					
ANR	1899753	CFGEntryNode	ENTRY		1899601		True				
ANR	1899754	CFGExitNode	EXIT		1899601		True				
ANR	1899755	Symbol	sxe		1899601						
ANR	1899756	Symbol	& sxe -> iter		1899601						
ANR	1899757	Symbol	NULL		1899601						
ANR	1899758	Symbol	php_sxe_fetch_object		1899601						
ANR	1899759	Symbol	Z_ISUNDEF		1899601						
ANR	1899760	Symbol	* sxe		1899601						
ANR	1899761	Symbol	& sxe -> tmp		1899601						
ANR	1899762	Symbol	sxe -> iter		1899601						
ANR	1899763	Symbol	sxe -> iter . name		1899601						
ANR	1899764	Symbol	sxe -> iter . data		1899601						
ANR	1899765	Symbol	sxe -> iter . nsprefix		1899601						
ANR	1899766	Symbol	& sxe -> iter . data		1899601						
ANR	1899767	Symbol	sxe -> tmp		1899601						
ANR	1899768	Symbol	object		1899601						
ANR	1899769	Function	sxe_object_free_storage	2106:0:53929:54310							
ANR	1899770	FunctionDef	sxe_object_free_storage (zend_object * object)		1899769	0					
ANR	1899771	CompoundStatement		2107:0:53986:54310	1899769	0					
ANR	1899772	IdentifierDeclStatement	php_sxe_object * sxe ;	2108:1:53989:54008	1899769	0	True				
ANR	1899773	IdentifierDecl	* sxe		1899769	0					
ANR	1899774	IdentifierDeclType	php_sxe_object *		1899769	0					
ANR	1899775	Identifier	sxe		1899769	1					
ANR	1899776	ExpressionStatement	sxe = php_sxe_fetch_object ( object )	2110:1:54012:54046	1899769	1	True				
ANR	1899777	AssignmentExpression	sxe = php_sxe_fetch_object ( object )		1899769	0		=			
ANR	1899778	Identifier	sxe		1899769	0					
ANR	1899779	CallExpression	php_sxe_fetch_object ( object )		1899769	1					
ANR	1899780	Callee	php_sxe_fetch_object		1899769	0					
ANR	1899781	Identifier	php_sxe_fetch_object		1899769	0					
ANR	1899782	ArgumentList	object		1899769	1					
ANR	1899783	Argument	object		1899769	0					
ANR	1899784	Identifier	object		1899769	0					
ANR	1899785	ExpressionStatement	zend_object_std_dtor ( & sxe -> zo )	2112:1:54050:54080	1899769	2	True				
ANR	1899786	CallExpression	zend_object_std_dtor ( & sxe -> zo )		1899769	0					
ANR	1899787	Callee	zend_object_std_dtor		1899769	0					
ANR	1899788	Identifier	zend_object_std_dtor		1899769	0					
ANR	1899789	ArgumentList	& sxe -> zo		1899769	1					
ANR	1899790	Argument	& sxe -> zo		1899769	0					
ANR	1899791	UnaryOperationExpression	& sxe -> zo		1899769	0					
ANR	1899792	UnaryOperator	&		1899769	0					
ANR	1899793	PtrMemberAccess	sxe -> zo		1899769	1					
ANR	1899794	Identifier	sxe		1899769	0					
ANR	1899795	Identifier	zo		1899769	1					
ANR	1899796	ExpressionStatement	php_libxml_node_decrement_resource ( ( php_libxml_node_object * ) sxe )	2114:1:54084:54149	1899769	3	True				
ANR	1899797	CallExpression	php_libxml_node_decrement_resource ( ( php_libxml_node_object * ) sxe )		1899769	0					
ANR	1899798	Callee	php_libxml_node_decrement_resource		1899769	0					
ANR	1899799	Identifier	php_libxml_node_decrement_resource		1899769	0					
ANR	1899800	ArgumentList	( php_libxml_node_object * ) sxe		1899769	1					
ANR	1899801	Argument	( php_libxml_node_object * ) sxe		1899769	0					
ANR	1899802	CastExpression	( php_libxml_node_object * ) sxe		1899769	0					
ANR	1899803	CastTarget	php_libxml_node_object *		1899769	0					
ANR	1899804	Identifier	sxe		1899769	1					
ANR	1899805	IfStatement	if ( sxe -> xpath )		1899769	4					
ANR	1899806	Condition	sxe -> xpath	2116:5:54157:54166	1899769	0	True				
ANR	1899807	PtrMemberAccess	sxe -> xpath		1899769	0					
ANR	1899808	Identifier	sxe		1899769	0					
ANR	1899809	Identifier	xpath		1899769	1					
ANR	1899810	CompoundStatement		10:17:182:182	1899769	1					
ANR	1899811	ExpressionStatement	xmlXPathFreeContext ( sxe -> xpath )	2117:2:54173:54204	1899769	0	True				
ANR	1899812	CallExpression	xmlXPathFreeContext ( sxe -> xpath )		1899769	0					
ANR	1899813	Callee	xmlXPathFreeContext		1899769	0					
ANR	1899814	Identifier	xmlXPathFreeContext		1899769	0					
ANR	1899815	ArgumentList	sxe -> xpath		1899769	1					
ANR	1899816	Argument	sxe -> xpath		1899769	0					
ANR	1899817	PtrMemberAccess	sxe -> xpath		1899769	0					
ANR	1899818	Identifier	sxe		1899769	0					
ANR	1899819	Identifier	xpath		1899769	1					
ANR	1899820	IfStatement	if ( sxe -> properties )		1899769	5					
ANR	1899821	Condition	sxe -> properties	2120:5:54215:54229	1899769	0	True				
ANR	1899822	PtrMemberAccess	sxe -> properties		1899769	0					
ANR	1899823	Identifier	sxe		1899769	0					
ANR	1899824	Identifier	properties		1899769	1					
ANR	1899825	CompoundStatement		14:22:245:245	1899769	1					
ANR	1899826	ExpressionStatement	zend_hash_destroy ( sxe -> properties )	2121:2:54236:54270	1899769	0	True				
ANR	1899827	CallExpression	zend_hash_destroy ( sxe -> properties )		1899769	0					
ANR	1899828	Callee	zend_hash_destroy		1899769	0					
ANR	1899829	Identifier	zend_hash_destroy		1899769	0					
ANR	1899830	ArgumentList	sxe -> properties		1899769	1					
ANR	1899831	Argument	sxe -> properties		1899769	0					
ANR	1899832	PtrMemberAccess	sxe -> properties		1899769	0					
ANR	1899833	Identifier	sxe		1899769	0					
ANR	1899834	Identifier	properties		1899769	1					
ANR	1899835	ExpressionStatement	FREE_HASHTABLE ( sxe -> properties )	2122:2:54274:54305	1899769	1	True				
ANR	1899836	CallExpression	FREE_HASHTABLE ( sxe -> properties )		1899769	0					
ANR	1899837	Callee	FREE_HASHTABLE		1899769	0					
ANR	1899838	Identifier	FREE_HASHTABLE		1899769	0					
ANR	1899839	ArgumentList	sxe -> properties		1899769	1					
ANR	1899840	Argument	sxe -> properties		1899769	0					
ANR	1899841	PtrMemberAccess	sxe -> properties		1899769	0					
ANR	1899842	Identifier	sxe		1899769	0					
ANR	1899843	Identifier	properties		1899769	1					
ANR	1899844	ReturnType	static void		1899769	1					
ANR	1899845	Identifier	sxe_object_free_storage		1899769	2					
ANR	1899846	ParameterList	zend_object * object		1899769	3					
ANR	1899847	Parameter	zend_object * object	2106:36:53965:53983	1899769	0	True				
ANR	1899848	ParameterType	zend_object *		1899769	0					
ANR	1899849	Identifier	object		1899769	1					
ANR	1899850	CFGEntryNode	ENTRY		1899769		True				
ANR	1899851	CFGExitNode	EXIT		1899769		True				
ANR	1899852	Symbol	sxe		1899769						
ANR	1899853	Symbol	sxe -> xpath		1899769						
ANR	1899854	Symbol	php_sxe_fetch_object		1899769						
ANR	1899855	Symbol	& sxe -> zo		1899769						
ANR	1899856	Symbol	sxe -> properties		1899769						
ANR	1899857	Symbol	* sxe		1899769						
ANR	1899858	Symbol	object		1899769						
ANR	1899859	Function	php_sxe_find_fptr_count	2129:0:54360:54835							
ANR	1899860	FunctionDef	php_sxe_find_fptr_count (zend_class_entry * ce)		1899859	0					
ANR	1899861	CompoundStatement		2130:0:54428:54835	1899859	0					
ANR	1899862	IdentifierDeclStatement	zend_function * fptr_count = NULL ;	2131:1:54431:54463	1899859	0	True				
ANR	1899863	IdentifierDecl	* fptr_count = NULL		1899859	0					
ANR	1899864	IdentifierDeclType	zend_function *		1899859	0					
ANR	1899865	Identifier	fptr_count		1899859	1					
ANR	1899866	AssignmentExpression	* fptr_count = NULL		1899859	2		=			
ANR	1899867	Identifier	NULL		1899859	0					
ANR	1899868	Identifier	NULL		1899859	1					
ANR	1899869	IdentifierDeclStatement	zend_class_entry * parent = ce ;	2132:1:54466:54495	1899859	1	True				
ANR	1899870	IdentifierDecl	* parent = ce		1899859	0					
ANR	1899871	IdentifierDeclType	zend_class_entry *		1899859	0					
ANR	1899872	Identifier	parent		1899859	1					
ANR	1899873	AssignmentExpression	* parent = ce		1899859	2		=			
ANR	1899874	Identifier	ce		1899859	0					
ANR	1899875	Identifier	ce		1899859	1					
ANR	1899876	IdentifierDeclStatement	int inherited = 0 ;	2133:1:54498:54515	1899859	2	True				
ANR	1899877	IdentifierDecl	inherited = 0		1899859	0					
ANR	1899878	IdentifierDeclType	int		1899859	0					
ANR	1899879	Identifier	inherited		1899859	1					
ANR	1899880	AssignmentExpression	inherited = 0		1899859	2		=			
ANR	1899881	Identifier	inherited		1899859	0					
ANR	1899882	PrimaryExpression	0		1899859	1					
ANR	1899883	WhileStatement	while ( parent )		1899859	3					
ANR	1899884	Condition	parent	2135:8:54526:54531	1899859	0	True				
ANR	1899885	Identifier	parent		1899859	0					
ANR	1899886	CompoundStatement		6:16:105:105	1899859	1					
ANR	1899887	IfStatement	if ( parent == sxe_class_entry )		1899859	0					
ANR	1899888	Condition	parent == sxe_class_entry	2136:6:54542:54566	1899859	0	True				
ANR	1899889	EqualityExpression	parent == sxe_class_entry		1899859	0		==			
ANR	1899890	Identifier	parent		1899859	0					
ANR	1899891	Identifier	sxe_class_entry		1899859	1					
ANR	1899892	CompoundStatement		7:33:140:140	1899859	1					
ANR	1899893	BreakStatement	break ;	2137:3:54574:54579	1899859	0	True				
ANR	1899894	ExpressionStatement	parent = parent -> parent	2139:2:54587:54610	1899859	1	True				
ANR	1899895	AssignmentExpression	parent = parent -> parent		1899859	0		=			
ANR	1899896	Identifier	parent		1899859	0					
ANR	1899897	PtrMemberAccess	parent -> parent		1899859	1					
ANR	1899898	Identifier	parent		1899859	0					
ANR	1899899	Identifier	parent		1899859	1					
ANR	1899900	ExpressionStatement	inherited = 1	2140:2:54614:54627	1899859	2	True				
ANR	1899901	AssignmentExpression	inherited = 1		1899859	0		=			
ANR	1899902	Identifier	inherited		1899859	0					
ANR	1899903	PrimaryExpression	1		1899859	1					
ANR	1899904	IfStatement	if ( inherited )		1899859	4					
ANR	1899905	Condition	inherited	2143:5:54638:54646	1899859	0	True				
ANR	1899906	Identifier	inherited		1899859	0					
ANR	1899907	CompoundStatement		14:16:220:220	1899859	1					
ANR	1899908	ExpressionStatement	"fptr_count = zend_hash_str_find_ptr ( & ce -> function_table , ""count"" , sizeof ( ""count"" ) - 1 )"	2144:2:54653:54739	1899859	0	True				
ANR	1899909	AssignmentExpression	"fptr_count = zend_hash_str_find_ptr ( & ce -> function_table , ""count"" , sizeof ( ""count"" ) - 1 )"		1899859	0		=			
ANR	1899910	Identifier	fptr_count		1899859	0					
ANR	1899911	CallExpression	"zend_hash_str_find_ptr ( & ce -> function_table , ""count"" , sizeof ( ""count"" ) - 1 )"		1899859	1					
ANR	1899912	Callee	zend_hash_str_find_ptr		1899859	0					
ANR	1899913	Identifier	zend_hash_str_find_ptr		1899859	0					
ANR	1899914	ArgumentList	& ce -> function_table		1899859	1					
ANR	1899915	Argument	& ce -> function_table		1899859	0					
ANR	1899916	UnaryOperationExpression	& ce -> function_table		1899859	0					
ANR	1899917	UnaryOperator	&		1899859	0					
ANR	1899918	PtrMemberAccess	ce -> function_table		1899859	1					
ANR	1899919	Identifier	ce		1899859	0					
ANR	1899920	Identifier	function_table		1899859	1					
ANR	1899921	Argument	"""count"""		1899859	1					
ANR	1899922	PrimaryExpression	"""count"""		1899859	0					
ANR	1899923	Argument	"sizeof ( ""count"" ) - 1"		1899859	2					
ANR	1899924	AdditiveExpression	"sizeof ( ""count"" ) - 1"		1899859	0		-			
ANR	1899925	SizeofExpression	"sizeof ( ""count"" )"		1899859	0					
ANR	1899926	Sizeof	sizeof		1899859	0					
ANR	1899927	PrimaryExpression	"""count"""		1899859	1					
ANR	1899928	PrimaryExpression	1		1899859	1					
ANR	1899929	IfStatement	if ( fptr_count -> common . scope == parent )		1899859	1					
ANR	1899930	Condition	fptr_count -> common . scope == parent	2145:6:54747:54780	1899859	0	True				
ANR	1899931	EqualityExpression	fptr_count -> common . scope == parent		1899859	0		==			
ANR	1899932	MemberAccess	fptr_count -> common . scope		1899859	0					
ANR	1899933	PtrMemberAccess	fptr_count -> common		1899859	0					
ANR	1899934	Identifier	fptr_count		1899859	0					
ANR	1899935	Identifier	common		1899859	1					
ANR	1899936	Identifier	scope		1899859	1					
ANR	1899937	Identifier	parent		1899859	1					
ANR	1899938	CompoundStatement		16:42:354:354	1899859	1					
ANR	1899939	ExpressionStatement	fptr_count = NULL	2146:3:54788:54805	1899859	0	True				
ANR	1899940	AssignmentExpression	fptr_count = NULL		1899859	0		=			
ANR	1899941	Identifier	fptr_count		1899859	0					
ANR	1899942	Identifier	NULL		1899859	1					
ANR	1899943	ReturnStatement	return fptr_count ;	2150:1:54816:54833	1899859	5	True				
ANR	1899944	Identifier	fptr_count		1899859	0					
ANR	1899945	ReturnType	static zend_function *		1899859	1					
ANR	1899946	Identifier	php_sxe_find_fptr_count		1899859	2					
ANR	1899947	ParameterList	zend_class_entry * ce		1899859	3					
ANR	1899948	Parameter	zend_class_entry * ce	2129:46:54406:54425	1899859	0	True				
ANR	1899949	ParameterType	zend_class_entry *		1899859	0					
ANR	1899950	Identifier	ce		1899859	1					
ANR	1899951	CFGEntryNode	ENTRY		1899859		True				
ANR	1899952	CFGExitNode	EXIT		1899859		True				
ANR	1899953	Symbol	fptr_count -> common . scope		1899859						
ANR	1899954	Symbol	parent		1899859						
ANR	1899955	Symbol	ce		1899859						
ANR	1899956	Symbol	NULL		1899859						
ANR	1899957	Symbol	* parent		1899859						
ANR	1899958	Symbol	& ce -> function_table		1899859						
ANR	1899959	Symbol	* fptr_count		1899859						
ANR	1899960	Symbol	parent -> parent		1899859						
ANR	1899961	Symbol	inherited		1899859						
ANR	1899962	Symbol	zend_hash_str_find_ptr		1899859						
ANR	1899963	Symbol	fptr_count -> common		1899859						
ANR	1899964	Symbol	fptr_count		1899859						
ANR	1899965	Symbol	sxe_class_entry		1899859						
ANR	1899966	Function	php_sxe_object_new	2156:0:54880:55353							
ANR	1899967	FunctionDef	"php_sxe_object_new (zend_class_entry * ce , zend_function * fptr_count)"		1899966	0					
ANR	1899968	CompoundStatement		2157:0:54971:55353	1899966	0					
ANR	1899969	IdentifierDeclStatement	php_sxe_object * intern ;	2158:1:54974:54996	1899966	0	True				
ANR	1899970	IdentifierDecl	* intern		1899966	0					
ANR	1899971	IdentifierDeclType	php_sxe_object *		1899966	0					
ANR	1899972	Identifier	intern		1899966	1					
ANR	1899973	ExpressionStatement	"intern = ecalloc ( 1 , sizeof ( php_sxe_object ) + zend_object_properties_size ( ce ) )"	2160:1:55000:55077	1899966	1	True				
ANR	1899974	AssignmentExpression	"intern = ecalloc ( 1 , sizeof ( php_sxe_object ) + zend_object_properties_size ( ce ) )"		1899966	0		=			
ANR	1899975	Identifier	intern		1899966	0					
ANR	1899976	CallExpression	"ecalloc ( 1 , sizeof ( php_sxe_object ) + zend_object_properties_size ( ce ) )"		1899966	1					
ANR	1899977	Callee	ecalloc		1899966	0					
ANR	1899978	Identifier	ecalloc		1899966	0					
ANR	1899979	ArgumentList	1		1899966	1					
ANR	1899980	Argument	1		1899966	0					
ANR	1899981	PrimaryExpression	1		1899966	0					
ANR	1899982	Argument	sizeof ( php_sxe_object ) + zend_object_properties_size ( ce )		1899966	1					
ANR	1899983	AdditiveExpression	sizeof ( php_sxe_object ) + zend_object_properties_size ( ce )		1899966	0		+			
ANR	1899984	SizeofExpression	sizeof ( php_sxe_object )		1899966	0					
ANR	1899985	Sizeof	sizeof		1899966	0					
ANR	1899986	SizeofOperand	php_sxe_object		1899966	1					
ANR	1899987	CallExpression	zend_object_properties_size ( ce )		1899966	1					
ANR	1899988	Callee	zend_object_properties_size		1899966	0					
ANR	1899989	Identifier	zend_object_properties_size		1899966	0					
ANR	1899990	ArgumentList	ce		1899966	1					
ANR	1899991	Argument	ce		1899966	0					
ANR	1899992	Identifier	ce		1899966	0					
ANR	1899993	ExpressionStatement	intern -> iter . type = SXE_ITER_NONE	2162:1:55081:55114	1899966	2	True				
ANR	1899994	AssignmentExpression	intern -> iter . type = SXE_ITER_NONE		1899966	0		=			
ANR	1899995	MemberAccess	intern -> iter . type		1899966	0					
ANR	1899996	PtrMemberAccess	intern -> iter		1899966	0					
ANR	1899997	Identifier	intern		1899966	0					
ANR	1899998	Identifier	iter		1899966	1					
ANR	1899999	Identifier	type		1899966	1					
ANR	1900000	Identifier	SXE_ITER_NONE		1899966	1					
ANR	1900001	ExpressionStatement	intern -> iter . nsprefix = NULL	2163:1:55117:55145	1899966	3	True				
ANR	1900002	AssignmentExpression	intern -> iter . nsprefix = NULL		1899966	0		=			
ANR	1900003	MemberAccess	intern -> iter . nsprefix		1899966	0					
ANR	1900004	PtrMemberAccess	intern -> iter		1899966	0					
ANR	1900005	Identifier	intern		1899966	0					
ANR	1900006	Identifier	iter		1899966	1					
ANR	1900007	Identifier	nsprefix		1899966	1					
ANR	1900008	Identifier	NULL		1899966	1					
ANR	1900009	ExpressionStatement	intern -> iter . name = NULL	2164:1:55148:55172	1899966	4	True				
ANR	1900010	AssignmentExpression	intern -> iter . name = NULL		1899966	0		=			
ANR	1900011	MemberAccess	intern -> iter . name		1899966	0					
ANR	1900012	PtrMemberAccess	intern -> iter		1899966	0					
ANR	1900013	Identifier	intern		1899966	0					
ANR	1900014	Identifier	iter		1899966	1					
ANR	1900015	Identifier	name		1899966	1					
ANR	1900016	Identifier	NULL		1899966	1					
ANR	1900017	ExpressionStatement	intern -> fptr_count = fptr_count	2165:1:55175:55206	1899966	5	True				
ANR	1900018	AssignmentExpression	intern -> fptr_count = fptr_count		1899966	0		=			
ANR	1900019	PtrMemberAccess	intern -> fptr_count		1899966	0					
ANR	1900020	Identifier	intern		1899966	0					
ANR	1900021	Identifier	fptr_count		1899966	1					
ANR	1900022	Identifier	fptr_count		1899966	1					
ANR	1900023	ExpressionStatement	"zend_object_std_init ( & intern -> zo , ce )"	2167:1:55210:55247	1899966	6	True				
ANR	1900024	CallExpression	"zend_object_std_init ( & intern -> zo , ce )"		1899966	0					
ANR	1900025	Callee	zend_object_std_init		1899966	0					
ANR	1900026	Identifier	zend_object_std_init		1899966	0					
ANR	1900027	ArgumentList	& intern -> zo		1899966	1					
ANR	1900028	Argument	& intern -> zo		1899966	0					
ANR	1900029	UnaryOperationExpression	& intern -> zo		1899966	0					
ANR	1900030	UnaryOperator	&		1899966	0					
ANR	1900031	PtrMemberAccess	intern -> zo		1899966	1					
ANR	1900032	Identifier	intern		1899966	0					
ANR	1900033	Identifier	zo		1899966	1					
ANR	1900034	Argument	ce		1899966	1					
ANR	1900035	Identifier	ce		1899966	0					
ANR	1900036	ExpressionStatement	"object_properties_init ( & intern -> zo , ce )"	2168:1:55250:55289	1899966	7	True				
ANR	1900037	CallExpression	"object_properties_init ( & intern -> zo , ce )"		1899966	0					
ANR	1900038	Callee	object_properties_init		1899966	0					
ANR	1900039	Identifier	object_properties_init		1899966	0					
ANR	1900040	ArgumentList	& intern -> zo		1899966	1					
ANR	1900041	Argument	& intern -> zo		1899966	0					
ANR	1900042	UnaryOperationExpression	& intern -> zo		1899966	0					
ANR	1900043	UnaryOperator	&		1899966	0					
ANR	1900044	PtrMemberAccess	intern -> zo		1899966	1					
ANR	1900045	Identifier	intern		1899966	0					
ANR	1900046	Identifier	zo		1899966	1					
ANR	1900047	Argument	ce		1899966	1					
ANR	1900048	Identifier	ce		1899966	0					
ANR	1900049	ExpressionStatement	intern -> zo . handlers = & sxe_object_handlers	2169:1:55292:55334	1899966	8	True				
ANR	1900050	AssignmentExpression	intern -> zo . handlers = & sxe_object_handlers		1899966	0		=			
ANR	1900051	MemberAccess	intern -> zo . handlers		1899966	0					
ANR	1900052	PtrMemberAccess	intern -> zo		1899966	0					
ANR	1900053	Identifier	intern		1899966	0					
ANR	1900054	Identifier	zo		1899966	1					
ANR	1900055	Identifier	handlers		1899966	1					
ANR	1900056	UnaryOperationExpression	& sxe_object_handlers		1899966	1					
ANR	1900057	UnaryOperator	&		1899966	0					
ANR	1900058	Identifier	sxe_object_handlers		1899966	1					
ANR	1900059	ReturnStatement	return intern ;	2171:1:55338:55351	1899966	9	True				
ANR	1900060	Identifier	intern		1899966	0					
ANR	1900061	ReturnType	static php_sxe_object *		1899966	1					
ANR	1900062	Identifier	php_sxe_object_new		1899966	2					
ANR	1900063	ParameterList	"zend_class_entry * ce , zend_function * fptr_count"		1899966	3					
ANR	1900064	Parameter	zend_class_entry * ce	2156:42:54922:54941	1899966	0	True				
ANR	1900065	ParameterType	zend_class_entry *		1899966	0					
ANR	1900066	Identifier	ce		1899966	1					
ANR	1900067	Parameter	zend_function * fptr_count	2156:64:54944:54968	1899966	1	True				
ANR	1900068	ParameterType	zend_function *		1899966	0					
ANR	1900069	Identifier	fptr_count		1899966	1					
ANR	1900070	CFGEntryNode	ENTRY		1899966		True				
ANR	1900071	CFGExitNode	EXIT		1899966		True				
ANR	1900072	Symbol	intern -> iter		1899966						
ANR	1900073	Symbol	* intern		1899966						
ANR	1900074	Symbol	ce		1899966						
ANR	1900075	Symbol	intern		1899966						
ANR	1900076	Symbol	zend_object_properties_size		1899966						
ANR	1900077	Symbol	intern -> iter . nsprefix		1899966						
ANR	1900078	Symbol	NULL		1899966						
ANR	1900079	Symbol	intern -> iter . name		1899966						
ANR	1900080	Symbol	& intern -> zo		1899966						
ANR	1900081	Symbol	intern -> fptr_count		1899966						
ANR	1900082	Symbol	& sxe_object_handlers		1899966						
ANR	1900083	Symbol	SXE_ITER_NONE		1899966						
ANR	1900084	Symbol	intern -> zo . handlers		1899966						
ANR	1900085	Symbol	intern -> zo		1899966						
ANR	1900086	Symbol	ecalloc		1899966						
ANR	1900087	Symbol	intern -> iter . type		1899966						
ANR	1900088	Symbol	fptr_count		1899966						
ANR	1900089	Function	sxe_object_new	2177:0:55394:55572							
ANR	1900090	FunctionDef	sxe_object_new (zend_class_entry * ce)		1900089	0					
ANR	1900091	CompoundStatement		2179:0:55457:55572	1900089	0					
ANR	1900092	IdentifierDeclStatement	php_sxe_object * intern ;	2180:1:55460:55485	1900089	0	True				
ANR	1900093	IdentifierDecl	* intern		1900089	0					
ANR	1900094	IdentifierDeclType	php_sxe_object *		1900089	0					
ANR	1900095	Identifier	intern		1900089	1					
ANR	1900096	ExpressionStatement	"intern = php_sxe_object_new ( ce , php_sxe_find_fptr_count ( ce ) )"	2182:1:55489:55549	1900089	1	True				
ANR	1900097	AssignmentExpression	"intern = php_sxe_object_new ( ce , php_sxe_find_fptr_count ( ce ) )"		1900089	0		=			
ANR	1900098	Identifier	intern		1900089	0					
ANR	1900099	CallExpression	"php_sxe_object_new ( ce , php_sxe_find_fptr_count ( ce ) )"		1900089	1					
ANR	1900100	Callee	php_sxe_object_new		1900089	0					
ANR	1900101	Identifier	php_sxe_object_new		1900089	0					
ANR	1900102	ArgumentList	ce		1900089	1					
ANR	1900103	Argument	ce		1900089	0					
ANR	1900104	Identifier	ce		1900089	0					
ANR	1900105	Argument	php_sxe_find_fptr_count ( ce )		1900089	1					
ANR	1900106	CallExpression	php_sxe_find_fptr_count ( ce )		1900089	0					
ANR	1900107	Callee	php_sxe_find_fptr_count		1900089	0					
ANR	1900108	Identifier	php_sxe_find_fptr_count		1900089	0					
ANR	1900109	ArgumentList	ce		1900089	1					
ANR	1900110	Argument	ce		1900089	0					
ANR	1900111	Identifier	ce		1900089	0					
ANR	1900112	ReturnStatement	return & intern -> zo ;	2183:1:55552:55570	1900089	2	True				
ANR	1900113	UnaryOperationExpression	& intern -> zo		1900089	0					
ANR	1900114	UnaryOperator	&		1900089	0					
ANR	1900115	PtrMemberAccess	intern -> zo		1900089	1					
ANR	1900116	Identifier	intern		1900089	0					
ANR	1900117	Identifier	zo		1900089	1					
ANR	1900118	ReturnType	PHP_SXE_API zend_object *		1900089	1					
ANR	1900119	Identifier	sxe_object_new		1900089	2					
ANR	1900120	ParameterList	zend_class_entry * ce		1900089	3					
ANR	1900121	Parameter	zend_class_entry * ce	2178:15:55435:55454	1900089	0	True				
ANR	1900122	ParameterType	zend_class_entry *		1900089	0					
ANR	1900123	Identifier	ce		1900089	1					
ANR	1900124	CFGEntryNode	ENTRY		1900089		True				
ANR	1900125	CFGExitNode	EXIT		1900089		True				
ANR	1900126	Symbol	ce		1900089						
ANR	1900127	Symbol	intern		1900089						
ANR	1900128	Symbol	php_sxe_find_fptr_count		1900089						
ANR	1900129	Symbol	php_sxe_object_new		1900089						
ANR	1900130	Symbol	& intern -> zo		1900089						
ANR	1900131	DeclStmt									
ANR	1900132	Decl							php_sxe_object	php_sxe_object *	sxe
ANR	1900133	DeclStmt									
ANR	1900134	Decl							char	char *	filename
ANR	1900135	DeclStmt									
ANR	1900136	Decl							size_t	size_t	filename_len
ANR	1900137	DeclStmt									
ANR	1900138	Decl							xmlDocPtr	xmlDocPtr	docp
ANR	1900139	DeclStmt									
ANR	1900140	Decl							char	char *	ns
ANR	1900141	DeclStmt									
ANR	1900142	Decl							size_t	size_t	ns_len
ANR	1900143	DeclStmt									
ANR	1900144	Decl							zend_long	zend_long	options
ANR	1900145	DeclStmt									
ANR	1900146	Decl							zend_class_entry	zend_class_entry *	ce
ANR	1900147	DeclStmt									
ANR	1900148	Decl							zend_function	zend_function *	fptr_count
ANR	1900149	DeclStmt									
ANR	1900150	Decl							zend_bool	zend_bool	isprefix
ANR	1900151	DeclStmt									
ANR	1900152	Decl							php_sxe_object	php_sxe_object *	sxe
ANR	1900153	DeclStmt									
ANR	1900154	Decl							char	char *	data
ANR	1900155	DeclStmt									
ANR	1900156	Decl							size_t	size_t	data_len
ANR	1900157	DeclStmt									
ANR	1900158	Decl							xmlDocPtr	xmlDocPtr	docp
ANR	1900159	DeclStmt									
ANR	1900160	Decl							char	char *	ns
ANR	1900161	DeclStmt									
ANR	1900162	Decl							size_t	size_t	ns_len
ANR	1900163	DeclStmt									
ANR	1900164	Decl							zend_long	zend_long	options
ANR	1900165	DeclStmt									
ANR	1900166	Decl							zend_class_entry	zend_class_entry *	ce
ANR	1900167	DeclStmt									
ANR	1900168	Decl							zend_function	zend_function *	fptr_count
ANR	1900169	DeclStmt									
ANR	1900170	Decl							zend_bool	zend_bool	isprefix
ANR	1900171	DeclStmt									
ANR	1900172	Decl							php_sxe_object	php_sxe_object *	sxe
ANR	1900173	DeclStmt									
ANR	1900174	Decl							char	char *	data
ANR	1900175	Decl							char	char *	ns
ANR	1900176	DeclStmt									
ANR	1900177	Decl							size_t	size_t	data_len
ANR	1900178	Decl							size_t	size_t	ns_len
ANR	1900179	DeclStmt									
ANR	1900180	Decl							xmlDocPtr	xmlDocPtr	docp
ANR	1900181	DeclStmt									
ANR	1900182	Decl							zend_long	zend_long	options
ANR	1900183	DeclStmt									
ANR	1900184	Decl							zend_bool	zend_bool	is_url
ANR	1900185	Decl							zend_bool	zend_bool	isprefix
ANR	1900186	DeclStmt									
ANR	1900187	Decl							zend_object_iterator_funcs	zend_object_iterator_funcs	php_sxe_iterator_funcs
ANR	1900188	Function	php_sxe_iterator_fetch	2340:0:60287:61490							
ANR	1900189	FunctionDef	"php_sxe_iterator_fetch (php_sxe_object * sxe , xmlNodePtr node , int use_data)"		1900188	0					
ANR	1900190	CompoundStatement		2341:0:60390:61490	1900188	0					
ANR	1900191	IdentifierDeclStatement	xmlChar * prefix = sxe -> iter . nsprefix ;	2342:1:60393:60430	1900188	0	True				
ANR	1900192	IdentifierDecl	* prefix = sxe -> iter . nsprefix		1900188	0					
ANR	1900193	IdentifierDeclType	xmlChar *		1900188	0					
ANR	1900194	Identifier	prefix		1900188	1					
ANR	1900195	AssignmentExpression	* prefix = sxe -> iter . nsprefix		1900188	2		=			
ANR	1900196	Identifier	prefix		1900188	0					
ANR	1900197	MemberAccess	sxe -> iter . nsprefix		1900188	1					
ANR	1900198	PtrMemberAccess	sxe -> iter		1900188	0					
ANR	1900199	Identifier	sxe		1900188	0					
ANR	1900200	Identifier	iter		1900188	1					
ANR	1900201	Identifier	nsprefix		1900188	1					
ANR	1900202	IdentifierDeclStatement	int isprefix = sxe -> iter . isprefix ;	2343:1:60433:60467	1900188	1	True				
ANR	1900203	IdentifierDecl	isprefix = sxe -> iter . isprefix		1900188	0					
ANR	1900204	IdentifierDeclType	int		1900188	0					
ANR	1900205	Identifier	isprefix		1900188	1					
ANR	1900206	AssignmentExpression	isprefix = sxe -> iter . isprefix		1900188	2		=			
ANR	1900207	Identifier	isprefix		1900188	0					
ANR	1900208	MemberAccess	sxe -> iter . isprefix		1900188	1					
ANR	1900209	PtrMemberAccess	sxe -> iter		1900188	0					
ANR	1900210	Identifier	sxe		1900188	0					
ANR	1900211	Identifier	iter		1900188	1					
ANR	1900212	Identifier	isprefix		1900188	1					
ANR	1900213	IfStatement	if ( sxe -> iter . type == SXE_ITER_ATTRLIST )		1900188	2					
ANR	1900214	Condition	sxe -> iter . type == SXE_ITER_ATTRLIST	2345:5:60475:60509	1900188	0	True				
ANR	1900215	EqualityExpression	sxe -> iter . type == SXE_ITER_ATTRLIST		1900188	0		==			
ANR	1900216	MemberAccess	sxe -> iter . type		1900188	0					
ANR	1900217	PtrMemberAccess	sxe -> iter		1900188	0					
ANR	1900218	Identifier	sxe		1900188	0					
ANR	1900219	Identifier	iter		1900188	1					
ANR	1900220	Identifier	type		1900188	1					
ANR	1900221	Identifier	SXE_ITER_ATTRLIST		1900188	1					
ANR	1900222	CompoundStatement		5:42:121:121	1900188	1					
ANR	1900223	IfStatement	if ( sxe -> iter . name )		1900188	0					
ANR	1900224	Condition	sxe -> iter . name	2346:6:60520:60533	1900188	0	True				
ANR	1900225	MemberAccess	sxe -> iter . name		1900188	0					
ANR	1900226	PtrMemberAccess	sxe -> iter		1900188	0					
ANR	1900227	Identifier	sxe		1900188	0					
ANR	1900228	Identifier	iter		1900188	1					
ANR	1900229	Identifier	name		1900188	1					
ANR	1900230	CompoundStatement		6:22:145:145	1900188	1					
ANR	1900231	WhileStatement	while ( node )		1900188	0					
ANR	1900232	Condition	node	2347:10:60548:60551	1900188	0	True				
ANR	1900233	Identifier	node		1900188	0					
ANR	1900234	CompoundStatement		7:16:163:163	1900188	1					
ANR	1900235	IfStatement	if ( node -> type == XML_ATTRIBUTE_NODE )		1900188	0					
ANR	1900236	Condition	node -> type == XML_ATTRIBUTE_NODE	2348:8:60564:60595	1900188	0	True				
ANR	1900237	EqualityExpression	node -> type == XML_ATTRIBUTE_NODE		1900188	0		==			
ANR	1900238	PtrMemberAccess	node -> type		1900188	0					
ANR	1900239	Identifier	node		1900188	0					
ANR	1900240	Identifier	type		1900188	1					
ANR	1900241	Identifier	XML_ATTRIBUTE_NODE		1900188	1					
ANR	1900242	CompoundStatement		8:42:207:207	1900188	1					
ANR	1900243	IfStatement	"if ( ! xmlStrcmp ( node -> name , sxe -> iter . name ) && match_ns ( sxe , node , prefix , isprefix ) )"		1900188	0					
ANR	1900244	Condition	"! xmlStrcmp ( node -> name , sxe -> iter . name ) && match_ns ( sxe , node , prefix , isprefix )"	2349:9:60609:60687	1900188	0	True				
ANR	1900245	AndExpression	"! xmlStrcmp ( node -> name , sxe -> iter . name ) && match_ns ( sxe , node , prefix , isprefix )"		1900188	0		&&			
ANR	1900246	UnaryOperationExpression	"! xmlStrcmp ( node -> name , sxe -> iter . name )"		1900188	0					
ANR	1900247	UnaryOperator	!		1900188	0					
ANR	1900248	CallExpression	"xmlStrcmp ( node -> name , sxe -> iter . name )"		1900188	1					
ANR	1900249	Callee	xmlStrcmp		1900188	0					
ANR	1900250	Identifier	xmlStrcmp		1900188	0					
ANR	1900251	ArgumentList	node -> name		1900188	1					
ANR	1900252	Argument	node -> name		1900188	0					
ANR	1900253	PtrMemberAccess	node -> name		1900188	0					
ANR	1900254	Identifier	node		1900188	0					
ANR	1900255	Identifier	name		1900188	1					
ANR	1900256	Argument	sxe -> iter . name		1900188	1					
ANR	1900257	MemberAccess	sxe -> iter . name		1900188	0					
ANR	1900258	PtrMemberAccess	sxe -> iter		1900188	0					
ANR	1900259	Identifier	sxe		1900188	0					
ANR	1900260	Identifier	iter		1900188	1					
ANR	1900261	Identifier	name		1900188	1					
ANR	1900262	CallExpression	"match_ns ( sxe , node , prefix , isprefix )"		1900188	1					
ANR	1900263	Callee	match_ns		1900188	0					
ANR	1900264	Identifier	match_ns		1900188	0					
ANR	1900265	ArgumentList	sxe		1900188	1					
ANR	1900266	Argument	sxe		1900188	0					
ANR	1900267	Identifier	sxe		1900188	0					
ANR	1900268	Argument	node		1900188	1					
ANR	1900269	Identifier	node		1900188	0					
ANR	1900270	Argument	prefix		1900188	2					
ANR	1900271	Identifier	prefix		1900188	0					
ANR	1900272	Argument	isprefix		1900188	3					
ANR	1900273	Identifier	isprefix		1900188	0					
ANR	1900274	CompoundStatement		9:90:299:299	1900188	1					
ANR	1900275	BreakStatement	break ;	2350:6:60698:60703	1900188	0	True				
ANR	1900276	ExpressionStatement	node = node -> next	2353:4:60722:60739	1900188	1	True				
ANR	1900277	AssignmentExpression	node = node -> next		1900188	0		=			
ANR	1900278	Identifier	node		1900188	0					
ANR	1900279	PtrMemberAccess	node -> next		1900188	1					
ANR	1900280	Identifier	node		1900188	0					
ANR	1900281	Identifier	next		1900188	1					
ANR	1900282	ElseStatement	else		1900188	0					
ANR	1900283	CompoundStatement		15:9:364:364	1900188	0					
ANR	1900284	WhileStatement	while ( node )		1900188	0					
ANR	1900285	Condition	node	2356:10:60767:60770	1900188	0	True				
ANR	1900286	Identifier	node		1900188	0					
ANR	1900287	CompoundStatement		16:16:382:382	1900188	1					
ANR	1900288	IfStatement	if ( node -> type == XML_ATTRIBUTE_NODE )		1900188	0					
ANR	1900289	Condition	node -> type == XML_ATTRIBUTE_NODE	2357:8:60783:60814	1900188	0	True				
ANR	1900290	EqualityExpression	node -> type == XML_ATTRIBUTE_NODE		1900188	0		==			
ANR	1900291	PtrMemberAccess	node -> type		1900188	0					
ANR	1900292	Identifier	node		1900188	0					
ANR	1900293	Identifier	type		1900188	1					
ANR	1900294	Identifier	XML_ATTRIBUTE_NODE		1900188	1					
ANR	1900295	CompoundStatement		17:42:426:426	1900188	1					
ANR	1900296	IfStatement	"if ( match_ns ( sxe , node , prefix , isprefix ) )"		1900188	0					
ANR	1900297	Condition	"match_ns ( sxe , node , prefix , isprefix )"	2358:9:60828:60864	1900188	0	True				
ANR	1900298	CallExpression	"match_ns ( sxe , node , prefix , isprefix )"		1900188	0					
ANR	1900299	Callee	match_ns		1900188	0					
ANR	1900300	Identifier	match_ns		1900188	0					
ANR	1900301	ArgumentList	sxe		1900188	1					
ANR	1900302	Argument	sxe		1900188	0					
ANR	1900303	Identifier	sxe		1900188	0					
ANR	1900304	Argument	node		1900188	1					
ANR	1900305	Identifier	node		1900188	0					
ANR	1900306	Argument	prefix		1900188	2					
ANR	1900307	Identifier	prefix		1900188	0					
ANR	1900308	Argument	isprefix		1900188	3					
ANR	1900309	Identifier	isprefix		1900188	0					
ANR	1900310	CompoundStatement		18:48:476:476	1900188	1					
ANR	1900311	BreakStatement	break ;	2359:6:60875:60880	1900188	0	True				
ANR	1900312	ExpressionStatement	node = node -> next	2362:4:60899:60916	1900188	1	True				
ANR	1900313	AssignmentExpression	node = node -> next		1900188	0		=			
ANR	1900314	Identifier	node		1900188	0					
ANR	1900315	PtrMemberAccess	node -> next		1900188	1					
ANR	1900316	Identifier	node		1900188	0					
ANR	1900317	Identifier	next		1900188	1					
ANR	1900318	ElseStatement	else		1900188	0					
ANR	1900319	IfStatement	if ( sxe -> iter . type == SXE_ITER_ELEMENT && sxe -> iter . name )		1900188	0					
ANR	1900320	Condition	sxe -> iter . type == SXE_ITER_ELEMENT && sxe -> iter . name	2365:12:60939:60990	1900188	0	True				
ANR	1900321	AndExpression	sxe -> iter . type == SXE_ITER_ELEMENT && sxe -> iter . name		1900188	0		&&			
ANR	1900322	EqualityExpression	sxe -> iter . type == SXE_ITER_ELEMENT		1900188	0		==			
ANR	1900323	MemberAccess	sxe -> iter . type		1900188	0					
ANR	1900324	PtrMemberAccess	sxe -> iter		1900188	0					
ANR	1900325	Identifier	sxe		1900188	0					
ANR	1900326	Identifier	iter		1900188	1					
ANR	1900327	Identifier	type		1900188	1					
ANR	1900328	Identifier	SXE_ITER_ELEMENT		1900188	1					
ANR	1900329	MemberAccess	sxe -> iter . name		1900188	1					
ANR	1900330	PtrMemberAccess	sxe -> iter		1900188	0					
ANR	1900331	Identifier	sxe		1900188	0					
ANR	1900332	Identifier	iter		1900188	1					
ANR	1900333	Identifier	name		1900188	1					
ANR	1900334	CompoundStatement		25:66:602:602	1900188	1					
ANR	1900335	WhileStatement	while ( node )		1900188	0					
ANR	1900336	Condition	node	2366:9:61004:61007	1900188	0	True				
ANR	1900337	Identifier	node		1900188	0					
ANR	1900338	CompoundStatement		26:15:619:619	1900188	1					
ANR	1900339	IfStatement	if ( node -> type == XML_ELEMENT_NODE )		1900188	0					
ANR	1900340	Condition	node -> type == XML_ELEMENT_NODE	2367:7:61019:61048	1900188	0	True				
ANR	1900341	EqualityExpression	node -> type == XML_ELEMENT_NODE		1900188	0		==			
ANR	1900342	PtrMemberAccess	node -> type		1900188	0					
ANR	1900343	Identifier	node		1900188	0					
ANR	1900344	Identifier	type		1900188	1					
ANR	1900345	Identifier	XML_ELEMENT_NODE		1900188	1					
ANR	1900346	CompoundStatement		27:39:660:660	1900188	1					
ANR	1900347	IfStatement	"if ( ! xmlStrcmp ( node -> name , sxe -> iter . name ) && match_ns ( sxe , node , prefix , isprefix ) )"		1900188	0					
ANR	1900348	Condition	"! xmlStrcmp ( node -> name , sxe -> iter . name ) && match_ns ( sxe , node , prefix , isprefix )"	2368:8:61061:61139	1900188	0	True				
ANR	1900349	AndExpression	"! xmlStrcmp ( node -> name , sxe -> iter . name ) && match_ns ( sxe , node , prefix , isprefix )"		1900188	0		&&			
ANR	1900350	UnaryOperationExpression	"! xmlStrcmp ( node -> name , sxe -> iter . name )"		1900188	0					
ANR	1900351	UnaryOperator	!		1900188	0					
ANR	1900352	CallExpression	"xmlStrcmp ( node -> name , sxe -> iter . name )"		1900188	1					
ANR	1900353	Callee	xmlStrcmp		1900188	0					
ANR	1900354	Identifier	xmlStrcmp		1900188	0					
ANR	1900355	ArgumentList	node -> name		1900188	1					
ANR	1900356	Argument	node -> name		1900188	0					
ANR	1900357	PtrMemberAccess	node -> name		1900188	0					
ANR	1900358	Identifier	node		1900188	0					
ANR	1900359	Identifier	name		1900188	1					
ANR	1900360	Argument	sxe -> iter . name		1900188	1					
ANR	1900361	MemberAccess	sxe -> iter . name		1900188	0					
ANR	1900362	PtrMemberAccess	sxe -> iter		1900188	0					
ANR	1900363	Identifier	sxe		1900188	0					
ANR	1900364	Identifier	iter		1900188	1					
ANR	1900365	Identifier	name		1900188	1					
ANR	1900366	CallExpression	"match_ns ( sxe , node , prefix , isprefix )"		1900188	1					
ANR	1900367	Callee	match_ns		1900188	0					
ANR	1900368	Identifier	match_ns		1900188	0					
ANR	1900369	ArgumentList	sxe		1900188	1					
ANR	1900370	Argument	sxe		1900188	0					
ANR	1900371	Identifier	sxe		1900188	0					
ANR	1900372	Argument	node		1900188	1					
ANR	1900373	Identifier	node		1900188	0					
ANR	1900374	Argument	prefix		1900188	2					
ANR	1900375	Identifier	prefix		1900188	0					
ANR	1900376	Argument	isprefix		1900188	3					
ANR	1900377	Identifier	isprefix		1900188	0					
ANR	1900378	CompoundStatement		28:89:751:751	1900188	1					
ANR	1900379	BreakStatement	break ;	2369:5:61149:61154	1900188	0	True				
ANR	1900380	ExpressionStatement	node = node -> next	2372:3:61170:61187	1900188	1	True				
ANR	1900381	AssignmentExpression	node = node -> next		1900188	0		=			
ANR	1900382	Identifier	node		1900188	0					
ANR	1900383	PtrMemberAccess	node -> next		1900188	1					
ANR	1900384	Identifier	node		1900188	0					
ANR	1900385	Identifier	next		1900188	1					
ANR	1900386	ElseStatement	else		1900188	0					
ANR	1900387	CompoundStatement		34:8:810:810	1900188	0					
ANR	1900388	WhileStatement	while ( node )		1900188	0					
ANR	1900389	Condition	node	2375:9:61212:61215	1900188	0	True				
ANR	1900390	Identifier	node		1900188	0					
ANR	1900391	CompoundStatement		35:15:827:827	1900188	1					
ANR	1900392	IfStatement	if ( node -> type == XML_ELEMENT_NODE )		1900188	0					
ANR	1900393	Condition	node -> type == XML_ELEMENT_NODE	2376:7:61227:61256	1900188	0	True				
ANR	1900394	EqualityExpression	node -> type == XML_ELEMENT_NODE		1900188	0		==			
ANR	1900395	PtrMemberAccess	node -> type		1900188	0					
ANR	1900396	Identifier	node		1900188	0					
ANR	1900397	Identifier	type		1900188	1					
ANR	1900398	Identifier	XML_ELEMENT_NODE		1900188	1					
ANR	1900399	CompoundStatement		36:39:868:868	1900188	1					
ANR	1900400	IfStatement	"if ( match_ns ( sxe , node , prefix , isprefix ) )"		1900188	0					
ANR	1900401	Condition	"match_ns ( sxe , node , prefix , isprefix )"	2377:8:61269:61305	1900188	0	True				
ANR	1900402	CallExpression	"match_ns ( sxe , node , prefix , isprefix )"		1900188	0					
ANR	1900403	Callee	match_ns		1900188	0					
ANR	1900404	Identifier	match_ns		1900188	0					
ANR	1900405	ArgumentList	sxe		1900188	1					
ANR	1900406	Argument	sxe		1900188	0					
ANR	1900407	Identifier	sxe		1900188	0					
ANR	1900408	Argument	node		1900188	1					
ANR	1900409	Identifier	node		1900188	0					
ANR	1900410	Argument	prefix		1900188	2					
ANR	1900411	Identifier	prefix		1900188	0					
ANR	1900412	Argument	isprefix		1900188	3					
ANR	1900413	Identifier	isprefix		1900188	0					
ANR	1900414	CompoundStatement		37:47:917:917	1900188	1					
ANR	1900415	BreakStatement	break ;	2378:5:61315:61320	1900188	0	True				
ANR	1900416	ExpressionStatement	node = node -> next	2381:3:61336:61353	1900188	1	True				
ANR	1900417	AssignmentExpression	node = node -> next		1900188	0		=			
ANR	1900418	Identifier	node		1900188	0					
ANR	1900419	PtrMemberAccess	node -> next		1900188	1					
ANR	1900420	Identifier	node		1900188	0					
ANR	1900421	Identifier	next		1900188	1					
ANR	1900422	IfStatement	if ( node && use_data )		1900188	3					
ANR	1900423	Condition	node && use_data	2385:5:61368:61383	1900188	0	True				
ANR	1900424	AndExpression	node && use_data		1900188	0		&&			
ANR	1900425	Identifier	node		1900188	0					
ANR	1900426	Identifier	use_data		1900188	1					
ANR	1900427	CompoundStatement		45:23:995:995	1900188	1					
ANR	1900428	ExpressionStatement	"_node_as_zval ( sxe , node , & sxe -> iter . data , SXE_ITER_NONE , NULL , prefix , isprefix )"	2386:2:61390:61470	1900188	0	True				
ANR	1900429	CallExpression	"_node_as_zval ( sxe , node , & sxe -> iter . data , SXE_ITER_NONE , NULL , prefix , isprefix )"		1900188	0					
ANR	1900430	Callee	_node_as_zval		1900188	0					
ANR	1900431	Identifier	_node_as_zval		1900188	0					
ANR	1900432	ArgumentList	sxe		1900188	1					
ANR	1900433	Argument	sxe		1900188	0					
ANR	1900434	Identifier	sxe		1900188	0					
ANR	1900435	Argument	node		1900188	1					
ANR	1900436	Identifier	node		1900188	0					
ANR	1900437	Argument	& sxe -> iter . data		1900188	2					
ANR	1900438	UnaryOperationExpression	& sxe -> iter . data		1900188	0					
ANR	1900439	UnaryOperator	&		1900188	0					
ANR	1900440	MemberAccess	sxe -> iter . data		1900188	1					
ANR	1900441	PtrMemberAccess	sxe -> iter		1900188	0					
ANR	1900442	Identifier	sxe		1900188	0					
ANR	1900443	Identifier	iter		1900188	1					
ANR	1900444	Identifier	data		1900188	1					
ANR	1900445	Argument	SXE_ITER_NONE		1900188	3					
ANR	1900446	Identifier	SXE_ITER_NONE		1900188	0					
ANR	1900447	Argument	NULL		1900188	4					
ANR	1900448	Identifier	NULL		1900188	0					
ANR	1900449	Argument	prefix		1900188	5					
ANR	1900450	Identifier	prefix		1900188	0					
ANR	1900451	Argument	isprefix		1900188	6					
ANR	1900452	Identifier	isprefix		1900188	0					
ANR	1900453	ReturnStatement	return node ;	2389:1:61477:61488	1900188	4	True				
ANR	1900454	Identifier	node		1900188	0					
ANR	1900455	ReturnType	static xmlNodePtr		1900188	1					
ANR	1900456	Identifier	php_sxe_iterator_fetch		1900188	2					
ANR	1900457	ParameterList	"php_sxe_object * sxe , xmlNodePtr node , int use_data"		1900188	3					
ANR	1900458	Parameter	php_sxe_object * sxe	2340:41:60328:60346	1900188	0	True				
ANR	1900459	ParameterType	php_sxe_object *		1900188	0					
ANR	1900460	Identifier	sxe		1900188	1					
ANR	1900461	Parameter	xmlNodePtr node	2340:62:60349:60363	1900188	1	True				
ANR	1900462	ParameterType	xmlNodePtr		1900188	0					
ANR	1900463	Identifier	node		1900188	1					
ANR	1900464	Parameter	int use_data	2340:79:60366:60377	1900188	2	True				
ANR	1900465	ParameterType	int		1900188	0					
ANR	1900466	Identifier	use_data		1900188	1					
ANR	1900467	CFGEntryNode	ENTRY		1900188		True				
ANR	1900468	CFGExitNode	EXIT		1900188		True				
ANR	1900469	Symbol	SXE_ITER_ATTRLIST		1900188						
ANR	1900470	Symbol	XML_ELEMENT_NODE		1900188						
ANR	1900471	Symbol	& sxe -> iter		1900188						
ANR	1900472	Symbol	prefix		1900188						
ANR	1900473	Symbol	* sxe		1900188						
ANR	1900474	Symbol	match_ns		1900188						
ANR	1900475	Symbol	SXE_ITER_ELEMENT		1900188						
ANR	1900476	Symbol	* node		1900188						
ANR	1900477	Symbol	& sxe -> iter . data		1900188						
ANR	1900478	Symbol	isprefix		1900188						
ANR	1900479	Symbol	sxe		1900188						
ANR	1900480	Symbol	xmlStrcmp		1900188						
ANR	1900481	Symbol	NULL		1900188						
ANR	1900482	Symbol	sxe -> iter . isprefix		1900188						
ANR	1900483	Symbol	node -> next		1900188						
ANR	1900484	Symbol	sxe -> iter . type		1900188						
ANR	1900485	Symbol	sxe -> iter		1900188						
ANR	1900486	Symbol	sxe -> iter . name		1900188						
ANR	1900487	Symbol	node		1900188						
ANR	1900488	Symbol	SXE_ITER_NONE		1900188						
ANR	1900489	Symbol	node -> name		1900188						
ANR	1900490	Symbol	sxe -> iter . nsprefix		1900188						
ANR	1900491	Symbol	node -> type		1900188						
ANR	1900492	Symbol	XML_ATTRIBUTE_NODE		1900188						
ANR	1900493	Symbol	use_data		1900188						
ANR	1900494	Function	php_sxe_reset_iterator	2393:0:61503:62032							
ANR	1900495	FunctionDef	"php_sxe_reset_iterator (php_sxe_object * sxe , int use_data)"		1900494	0					
ANR	1900496	CompoundStatement		2394:0:61589:62032	1900494	0					
ANR	1900497	IdentifierDeclStatement	xmlNodePtr node ;	2395:1:61592:61607	1900494	0	True				
ANR	1900498	IdentifierDecl	node		1900494	0					
ANR	1900499	IdentifierDeclType	xmlNodePtr		1900494	0					
ANR	1900500	Identifier	node		1900494	1					
ANR	1900501	IfStatement	if ( ! Z_ISUNDEF ( sxe -> iter . data ) )		1900494	1					
ANR	1900502	Condition	! Z_ISUNDEF ( sxe -> iter . data )	2397:5:61615:61640	1900494	0	True				
ANR	1900503	UnaryOperationExpression	! Z_ISUNDEF ( sxe -> iter . data )		1900494	0					
ANR	1900504	UnaryOperator	!		1900494	0					
ANR	1900505	CallExpression	Z_ISUNDEF ( sxe -> iter . data )		1900494	1					
ANR	1900506	Callee	Z_ISUNDEF		1900494	0					
ANR	1900507	Identifier	Z_ISUNDEF		1900494	0					
ANR	1900508	ArgumentList	sxe -> iter . data		1900494	1					
ANR	1900509	Argument	sxe -> iter . data		1900494	0					
ANR	1900510	MemberAccess	sxe -> iter . data		1900494	0					
ANR	1900511	PtrMemberAccess	sxe -> iter		1900494	0					
ANR	1900512	Identifier	sxe		1900494	0					
ANR	1900513	Identifier	iter		1900494	1					
ANR	1900514	Identifier	data		1900494	1					
ANR	1900515	CompoundStatement		4:33:53:53	1900494	1					
ANR	1900516	ExpressionStatement	zval_ptr_dtor ( & sxe -> iter . data )	2398:2:61647:61677	1900494	0	True				
ANR	1900517	CallExpression	zval_ptr_dtor ( & sxe -> iter . data )		1900494	0					
ANR	1900518	Callee	zval_ptr_dtor		1900494	0					
ANR	1900519	Identifier	zval_ptr_dtor		1900494	0					
ANR	1900520	ArgumentList	& sxe -> iter . data		1900494	1					
ANR	1900521	Argument	& sxe -> iter . data		1900494	0					
ANR	1900522	UnaryOperationExpression	& sxe -> iter . data		1900494	0					
ANR	1900523	UnaryOperator	&		1900494	0					
ANR	1900524	MemberAccess	sxe -> iter . data		1900494	1					
ANR	1900525	PtrMemberAccess	sxe -> iter		1900494	0					
ANR	1900526	Identifier	sxe		1900494	0					
ANR	1900527	Identifier	iter		1900494	1					
ANR	1900528	Identifier	data		1900494	1					
ANR	1900529	ExpressionStatement	ZVAL_UNDEF ( & sxe -> iter . data )	2399:2:61681:61708	1900494	1	True				
ANR	1900530	CallExpression	ZVAL_UNDEF ( & sxe -> iter . data )		1900494	0					
ANR	1900531	Callee	ZVAL_UNDEF		1900494	0					
ANR	1900532	Identifier	ZVAL_UNDEF		1900494	0					
ANR	1900533	ArgumentList	& sxe -> iter . data		1900494	1					
ANR	1900534	Argument	& sxe -> iter . data		1900494	0					
ANR	1900535	UnaryOperationExpression	& sxe -> iter . data		1900494	0					
ANR	1900536	UnaryOperator	&		1900494	0					
ANR	1900537	MemberAccess	sxe -> iter . data		1900494	1					
ANR	1900538	PtrMemberAccess	sxe -> iter		1900494	0					
ANR	1900539	Identifier	sxe		1900494	0					
ANR	1900540	Identifier	iter		1900494	1					
ANR	1900541	Identifier	data		1900494	1					
ANR	1900542	Statement	GET_NODE	2402:1:61715:61722	1900494	2	True				
ANR	1900543	Statement	(	2402:9:61723:61723	1900494	3	True				
ANR	1900544	Statement	sxe	2402:10:61724:61726	1900494	4	True				
ANR	1900545	Statement	","	2402:13:61727:61727	1900494	5	True				
ANR	1900546	Statement	node	2402:15:61729:61732	1900494	6	True				
ANR	1900547	Statement	)	2402:19:61733:61733	1900494	7	True				
ANR	1900548	IfStatement	if ( node )		1900494	8					
ANR	1900549	Condition	node	2404:5:61741:61744	1900494	0	True				
ANR	1900550	Identifier	node		1900494	0					
ANR	1900551	CompoundStatement		11:11:157:157	1900494	1					
ANR	1900552	SwitchStatement	switch ( sxe -> iter . type )		1900494	0					
ANR	1900553	Condition	sxe -> iter . type	2405:10:61759:61772	1900494	0	True				
ANR	1900554	MemberAccess	sxe -> iter . type		1900494	0					
ANR	1900555	PtrMemberAccess	sxe -> iter		1900494	0					
ANR	1900556	Identifier	sxe		1900494	0					
ANR	1900557	Identifier	iter		1900494	1					
ANR	1900558	Identifier	type		1900494	1					
ANR	1900559	CompoundStatement		12:26:185:185	1900494	1					
ANR	1900560	Label	case SXE_ITER_ELEMENT :	2406:3:61780:61801	1900494	0	True				
ANR	1900561	Identifier	SXE_ITER_ELEMENT		1900494	0					
ANR	1900562	Label	case SXE_ITER_CHILD :	2407:3:61806:61825	1900494	1	True				
ANR	1900563	Identifier	SXE_ITER_CHILD		1900494	0					
ANR	1900564	Label	case SXE_ITER_NONE :	2408:3:61830:61848	1900494	2	True				
ANR	1900565	Identifier	SXE_ITER_NONE		1900494	0					
ANR	1900566	ExpressionStatement	node = node -> children	2409:4:61854:61875	1900494	3	True				
ANR	1900567	AssignmentExpression	node = node -> children		1900494	0		=			
ANR	1900568	Identifier	node		1900494	0					
ANR	1900569	PtrMemberAccess	node -> children		1900494	1					
ANR	1900570	Identifier	node		1900494	0					
ANR	1900571	Identifier	children		1900494	1					
ANR	1900572	BreakStatement	break ;	2410:4:61881:61886	1900494	4	True				
ANR	1900573	Label	case SXE_ITER_ATTRLIST :	2411:3:61891:61913	1900494	5	True				
ANR	1900574	Identifier	SXE_ITER_ATTRLIST		1900494	0					
ANR	1900575	ExpressionStatement	node = ( xmlNodePtr ) node -> properties	2412:4:61919:61955	1900494	6	True				
ANR	1900576	AssignmentExpression	node = ( xmlNodePtr ) node -> properties		1900494	0		=			
ANR	1900577	Identifier	node		1900494	0					
ANR	1900578	CastExpression	( xmlNodePtr ) node -> properties		1900494	1					
ANR	1900579	CastTarget	xmlNodePtr		1900494	0					
ANR	1900580	PtrMemberAccess	node -> properties		1900494	1					
ANR	1900581	Identifier	node		1900494	0					
ANR	1900582	Identifier	properties		1900494	1					
ANR	1900583	ReturnStatement	"return php_sxe_iterator_fetch ( sxe , node , use_data ) ;"	2414:2:61963:62013	1900494	1	True				
ANR	1900584	CallExpression	"php_sxe_iterator_fetch ( sxe , node , use_data )"		1900494	0					
ANR	1900585	Callee	php_sxe_iterator_fetch		1900494	0					
ANR	1900586	Identifier	php_sxe_iterator_fetch		1900494	0					
ANR	1900587	ArgumentList	sxe		1900494	1					
ANR	1900588	Argument	sxe		1900494	0					
ANR	1900589	Identifier	sxe		1900494	0					
ANR	1900590	Argument	node		1900494	1					
ANR	1900591	Identifier	node		1900494	0					
ANR	1900592	Argument	use_data		1900494	2					
ANR	1900593	Identifier	use_data		1900494	0					
ANR	1900594	ReturnStatement	return NULL ;	2416:1:62019:62030	1900494	9	True				
ANR	1900595	Identifier	NULL		1900494	0					
ANR	1900596	ReturnType	static xmlNodePtr		1900494	1					
ANR	1900597	Identifier	php_sxe_reset_iterator		1900494	2					
ANR	1900598	ParameterList	"php_sxe_object * sxe , int use_data"		1900494	3					
ANR	1900599	Parameter	php_sxe_object * sxe	2393:41:61544:61562	1900494	0	True				
ANR	1900600	ParameterType	php_sxe_object *		1900494	0					
ANR	1900601	Identifier	sxe		1900494	1					
ANR	1900602	Parameter	int use_data	2393:62:61565:61576	1900494	1	True				
ANR	1900603	ParameterType	int		1900494	0					
ANR	1900604	Identifier	use_data		1900494	1					
ANR	1900605	CFGEntryNode	ENTRY		1900494		True				
ANR	1900606	CFGExitNode	EXIT		1900494		True				
ANR	1900607	Symbol	sxe		1900494						
ANR	1900608	Symbol	& sxe -> iter		1900494						
ANR	1900609	Symbol	NULL		1900494						
ANR	1900610	Symbol	Z_ISUNDEF		1900494						
ANR	1900611	Symbol	node -> properties		1900494						
ANR	1900612	Symbol	* sxe		1900494						
ANR	1900613	Symbol	sxe -> iter . type		1900494						
ANR	1900614	Symbol	sxe -> iter		1900494						
ANR	1900615	Symbol	node		1900494						
ANR	1900616	Symbol	sxe -> iter . data		1900494						
ANR	1900617	Symbol	php_sxe_iterator_fetch		1900494						
ANR	1900618	Symbol	* node		1900494						
ANR	1900619	Symbol	use_data		1900494						
ANR	1900620	Symbol	& sxe -> iter . data		1900494						
ANR	1900621	Symbol	node -> children		1900494						
ANR	1900622	Function	php_sxe_get_iterator	2420:0:62045:62537							
ANR	1900623	FunctionDef	"php_sxe_get_iterator (zend_class_entry * ce , zval * object , int by_ref)"		1900622	0					
ANR	1900624	CompoundStatement		2421:0:62146:62537	1900622	0					
ANR	1900625	IdentifierDeclStatement	php_sxe_iterator * iterator ;	2422:1:62149:62175	1900622	0	True				
ANR	1900626	IdentifierDecl	* iterator		1900622	0					
ANR	1900627	IdentifierDeclType	php_sxe_iterator *		1900622	0					
ANR	1900628	Identifier	iterator		1900622	1					
ANR	1900629	IfStatement	if ( by_ref )		1900622	1					
ANR	1900630	Condition	by_ref	2424:5:62183:62188	1900622	0	True				
ANR	1900631	Identifier	by_ref		1900622	0					
ANR	1900632	CompoundStatement		4:13:44:44	1900622	1					
ANR	1900633	ExpressionStatement	"zend_error ( E_ERROR , ""An iterator cannot be used with foreach by reference"" )"	2425:2:62195:62270	1900622	0	True				
ANR	1900634	CallExpression	"zend_error ( E_ERROR , ""An iterator cannot be used with foreach by reference"" )"		1900622	0					
ANR	1900635	Callee	zend_error		1900622	0					
ANR	1900636	Identifier	zend_error		1900622	0					
ANR	1900637	ArgumentList	E_ERROR		1900622	1					
ANR	1900638	Argument	E_ERROR		1900622	0					
ANR	1900639	Identifier	E_ERROR		1900622	0					
ANR	1900640	Argument	"""An iterator cannot be used with foreach by reference"""		1900622	1					
ANR	1900641	PrimaryExpression	"""An iterator cannot be used with foreach by reference"""		1900622	0					
ANR	1900642	ExpressionStatement	iterator = emalloc ( sizeof ( php_sxe_iterator ) )	2427:1:62276:62320	1900622	2	True				
ANR	1900643	AssignmentExpression	iterator = emalloc ( sizeof ( php_sxe_iterator ) )		1900622	0		=			
ANR	1900644	Identifier	iterator		1900622	0					
ANR	1900645	CallExpression	emalloc ( sizeof ( php_sxe_iterator ) )		1900622	1					
ANR	1900646	Callee	emalloc		1900622	0					
ANR	1900647	Identifier	emalloc		1900622	0					
ANR	1900648	ArgumentList	sizeof ( php_sxe_iterator )		1900622	1					
ANR	1900649	Argument	sizeof ( php_sxe_iterator )		1900622	0					
ANR	1900650	SizeofExpression	sizeof ( php_sxe_iterator )		1900622	0					
ANR	1900651	Sizeof	sizeof		1900622	0					
ANR	1900652	SizeofOperand	php_sxe_iterator		1900622	1					
ANR	1900653	ExpressionStatement	zend_iterator_init ( & iterator -> intern )	2428:1:62323:62360	1900622	3	True				
ANR	1900654	CallExpression	zend_iterator_init ( & iterator -> intern )		1900622	0					
ANR	1900655	Callee	zend_iterator_init		1900622	0					
ANR	1900656	Identifier	zend_iterator_init		1900622	0					
ANR	1900657	ArgumentList	& iterator -> intern		1900622	1					
ANR	1900658	Argument	& iterator -> intern		1900622	0					
ANR	1900659	UnaryOperationExpression	& iterator -> intern		1900622	0					
ANR	1900660	UnaryOperator	&		1900622	0					
ANR	1900661	PtrMemberAccess	iterator -> intern		1900622	1					
ANR	1900662	Identifier	iterator		1900622	0					
ANR	1900663	Identifier	intern		1900622	1					
ANR	1900664	ExpressionStatement	"ZVAL_COPY ( & iterator -> intern . data , object )"	2430:1:62364:62405	1900622	4	True				
ANR	1900665	CallExpression	"ZVAL_COPY ( & iterator -> intern . data , object )"		1900622	0					
ANR	1900666	Callee	ZVAL_COPY		1900622	0					
ANR	1900667	Identifier	ZVAL_COPY		1900622	0					
ANR	1900668	ArgumentList	& iterator -> intern . data		1900622	1					
ANR	1900669	Argument	& iterator -> intern . data		1900622	0					
ANR	1900670	UnaryOperationExpression	& iterator -> intern . data		1900622	0					
ANR	1900671	UnaryOperator	&		1900622	0					
ANR	1900672	MemberAccess	iterator -> intern . data		1900622	1					
ANR	1900673	PtrMemberAccess	iterator -> intern		1900622	0					
ANR	1900674	Identifier	iterator		1900622	0					
ANR	1900675	Identifier	intern		1900622	1					
ANR	1900676	Identifier	data		1900622	1					
ANR	1900677	Argument	object		1900622	1					
ANR	1900678	Identifier	object		1900622	0					
ANR	1900679	ExpressionStatement	iterator -> intern . funcs = & php_sxe_iterator_funcs	2431:1:62408:62456	1900622	5	True				
ANR	1900680	AssignmentExpression	iterator -> intern . funcs = & php_sxe_iterator_funcs		1900622	0		=			
ANR	1900681	MemberAccess	iterator -> intern . funcs		1900622	0					
ANR	1900682	PtrMemberAccess	iterator -> intern		1900622	0					
ANR	1900683	Identifier	iterator		1900622	0					
ANR	1900684	Identifier	intern		1900622	1					
ANR	1900685	Identifier	funcs		1900622	1					
ANR	1900686	UnaryOperationExpression	& php_sxe_iterator_funcs		1900622	1					
ANR	1900687	UnaryOperator	&		1900622	0					
ANR	1900688	Identifier	php_sxe_iterator_funcs		1900622	1					
ANR	1900689	ExpressionStatement	iterator -> sxe = Z_SXEOBJ_P ( object )	2432:1:62459:62493	1900622	6	True				
ANR	1900690	AssignmentExpression	iterator -> sxe = Z_SXEOBJ_P ( object )		1900622	0		=			
ANR	1900691	PtrMemberAccess	iterator -> sxe		1900622	0					
ANR	1900692	Identifier	iterator		1900622	0					
ANR	1900693	Identifier	sxe		1900622	1					
ANR	1900694	CallExpression	Z_SXEOBJ_P ( object )		1900622	1					
ANR	1900695	Callee	Z_SXEOBJ_P		1900622	0					
ANR	1900696	Identifier	Z_SXEOBJ_P		1900622	0					
ANR	1900697	ArgumentList	object		1900622	1					
ANR	1900698	Argument	object		1900622	0					
ANR	1900699	Identifier	object		1900622	0					
ANR	1900700	ReturnStatement	return ( zend_object_iterator * ) iterator ;	2434:1:62497:62535	1900622	7	True				
ANR	1900701	CastExpression	( zend_object_iterator * ) iterator		1900622	0					
ANR	1900702	CastTarget	zend_object_iterator *		1900622	0					
ANR	1900703	Identifier	iterator		1900622	1					
ANR	1900704	ReturnType	zend_object_iterator *		1900622	1					
ANR	1900705	Identifier	php_sxe_get_iterator		1900622	2					
ANR	1900706	ParameterList	"zend_class_entry * ce , zval * object , int by_ref"		1900622	3					
ANR	1900707	Parameter	zend_class_entry * ce	2420:43:62088:62107	1900622	0	True				
ANR	1900708	ParameterType	zend_class_entry *		1900622	0					
ANR	1900709	Identifier	ce		1900622	1					
ANR	1900710	Parameter	zval * object	2420:65:62110:62121	1900622	1	True				
ANR	1900711	ParameterType	zval *		1900622	0					
ANR	1900712	Identifier	object		1900622	1					
ANR	1900713	Parameter	int by_ref	2420:79:62124:62133	1900622	2	True				
ANR	1900714	ParameterType	int		1900622	0					
ANR	1900715	Identifier	by_ref		1900622	1					
ANR	1900716	CFGEntryNode	ENTRY		1900622		True				
ANR	1900717	CFGExitNode	EXIT		1900622		True				
ANR	1900718	Symbol	& iterator -> intern . data		1900622						
ANR	1900719	Symbol	ce		1900622						
ANR	1900720	Symbol	iterator -> intern		1900622						
ANR	1900721	Symbol	& iterator -> intern		1900622						
ANR	1900722	Symbol	iterator -> intern . funcs		1900622						
ANR	1900723	Symbol	& php_sxe_iterator_funcs		1900622						
ANR	1900724	Symbol	iterator		1900622						
ANR	1900725	Symbol	emalloc		1900622						
ANR	1900726	Symbol	* iterator		1900622						
ANR	1900727	Symbol	E_ERROR		1900622						
ANR	1900728	Symbol	iterator -> sxe		1900622						
ANR	1900729	Symbol	by_ref		1900622						
ANR	1900730	Symbol	Z_SXEOBJ_P		1900622						
ANR	1900731	Symbol	object		1900622						
ANR	1900732	Function	php_sxe_iterator_dtor	2438:0:62550:62852							
ANR	1900733	FunctionDef	php_sxe_iterator_dtor (zend_object_iterator * iter)		1900732	0					
ANR	1900734	CompoundStatement		2439:0:62622:62852	1900732	0					
ANR	1900735	IdentifierDeclStatement	php_sxe_iterator * iterator = ( php_sxe_iterator * ) iter ;	2440:1:62625:62678	1900732	0	True				
ANR	1900736	IdentifierDecl	* iterator = ( php_sxe_iterator * ) iter		1900732	0					
ANR	1900737	IdentifierDeclType	php_sxe_iterator *		1900732	0					
ANR	1900738	Identifier	iterator		1900732	1					
ANR	1900739	AssignmentExpression	* iterator = ( php_sxe_iterator * ) iter		1900732	2		=			
ANR	1900740	Identifier	iterator		1900732	0					
ANR	1900741	CastExpression	( php_sxe_iterator * ) iter		1900732	1					
ANR	1900742	CastTarget	php_sxe_iterator *		1900732	0					
ANR	1900743	Identifier	iter		1900732	1					
ANR	1900744	IfStatement	if ( ! Z_ISUNDEF ( iterator -> intern . data ) )		1900732	1					
ANR	1900745	Condition	! Z_ISUNDEF ( iterator -> intern . data )	2443:5:62771:62803	1900732	0	True				
ANR	1900746	UnaryOperationExpression	! Z_ISUNDEF ( iterator -> intern . data )		1900732	0					
ANR	1900747	UnaryOperator	!		1900732	0					
ANR	1900748	CallExpression	Z_ISUNDEF ( iterator -> intern . data )		1900732	1					
ANR	1900749	Callee	Z_ISUNDEF		1900732	0					
ANR	1900750	Identifier	Z_ISUNDEF		1900732	0					
ANR	1900751	ArgumentList	iterator -> intern . data		1900732	1					
ANR	1900752	Argument	iterator -> intern . data		1900732	0					
ANR	1900753	MemberAccess	iterator -> intern . data		1900732	0					
ANR	1900754	PtrMemberAccess	iterator -> intern		1900732	0					
ANR	1900755	Identifier	iterator		1900732	0					
ANR	1900756	Identifier	intern		1900732	1					
ANR	1900757	Identifier	data		1900732	1					
ANR	1900758	CompoundStatement		5:40:183:183	1900732	1					
ANR	1900759	ExpressionStatement	zval_ptr_dtor ( & iterator -> intern . data )	2444:2:62810:62847	1900732	0	True				
ANR	1900760	CallExpression	zval_ptr_dtor ( & iterator -> intern . data )		1900732	0					
ANR	1900761	Callee	zval_ptr_dtor		1900732	0					
ANR	1900762	Identifier	zval_ptr_dtor		1900732	0					
ANR	1900763	ArgumentList	& iterator -> intern . data		1900732	1					
ANR	1900764	Argument	& iterator -> intern . data		1900732	0					
ANR	1900765	UnaryOperationExpression	& iterator -> intern . data		1900732	0					
ANR	1900766	UnaryOperator	&		1900732	0					
ANR	1900767	MemberAccess	iterator -> intern . data		1900732	1					
ANR	1900768	PtrMemberAccess	iterator -> intern		1900732	0					
ANR	1900769	Identifier	iterator		1900732	0					
ANR	1900770	Identifier	intern		1900732	1					
ANR	1900771	Identifier	data		1900732	1					
ANR	1900772	ReturnType	static void		1900732	1					
ANR	1900773	Identifier	php_sxe_iterator_dtor		1900732	2					
ANR	1900774	ParameterList	zend_object_iterator * iter		1900732	3					
ANR	1900775	Parameter	zend_object_iterator * iter	2438:34:62584:62609	1900732	0	True				
ANR	1900776	ParameterType	zend_object_iterator *		1900732	0					
ANR	1900777	Identifier	iter		1900732	1					
ANR	1900778	CFGEntryNode	ENTRY		1900732		True				
ANR	1900779	CFGExitNode	EXIT		1900732		True				
ANR	1900780	Symbol	& iterator -> intern . data		1900732						
ANR	1900781	Symbol	iterator		1900732						
ANR	1900782	Symbol	* iterator		1900732						
ANR	1900783	Symbol	iterator -> intern		1900732						
ANR	1900784	Symbol	Z_ISUNDEF		1900732						
ANR	1900785	Symbol	iter		1900732						
ANR	1900786	Symbol	& iterator -> intern		1900732						
ANR	1900787	Symbol	iterator -> intern . data		1900732						
ANR	1900788	Function	php_sxe_iterator_valid	2449:0:62865:63061							
ANR	1900789	FunctionDef	php_sxe_iterator_valid (zend_object_iterator * iter)		1900788	0					
ANR	1900790	CompoundStatement		2450:0:62937:63061	1900788	0					
ANR	1900791	IdentifierDeclStatement	php_sxe_iterator * iterator = ( php_sxe_iterator * ) iter ;	2451:1:62940:62993	1900788	0	True				
ANR	1900792	IdentifierDecl	* iterator = ( php_sxe_iterator * ) iter		1900788	0					
ANR	1900793	IdentifierDeclType	php_sxe_iterator *		1900788	0					
ANR	1900794	Identifier	iterator		1900788	1					
ANR	1900795	AssignmentExpression	* iterator = ( php_sxe_iterator * ) iter		1900788	2		=			
ANR	1900796	Identifier	iterator		1900788	0					
ANR	1900797	CastExpression	( php_sxe_iterator * ) iter		1900788	1					
ANR	1900798	CastTarget	php_sxe_iterator *		1900788	0					
ANR	1900799	Identifier	iter		1900788	1					
ANR	1900800	ReturnStatement	return Z_ISUNDEF ( iterator -> sxe -> iter . data ) ? FAILURE : SUCCESS ;	2453:1:62997:63059	1900788	1	True				
ANR	1900801	ConditionalExpression	Z_ISUNDEF ( iterator -> sxe -> iter . data ) ? FAILURE : SUCCESS		1900788	0					
ANR	1900802	Condition	Z_ISUNDEF ( iterator -> sxe -> iter . data )		1900788	0					
ANR	1900803	CallExpression	Z_ISUNDEF ( iterator -> sxe -> iter . data )		1900788	0					
ANR	1900804	Callee	Z_ISUNDEF		1900788	0					
ANR	1900805	Identifier	Z_ISUNDEF		1900788	0					
ANR	1900806	ArgumentList	iterator -> sxe -> iter . data		1900788	1					
ANR	1900807	Argument	iterator -> sxe -> iter . data		1900788	0					
ANR	1900808	MemberAccess	iterator -> sxe -> iter . data		1900788	0					
ANR	1900809	PtrMemberAccess	iterator -> sxe -> iter		1900788	0					
ANR	1900810	PtrMemberAccess	iterator -> sxe		1900788	0					
ANR	1900811	Identifier	iterator		1900788	0					
ANR	1900812	Identifier	sxe		1900788	1					
ANR	1900813	Identifier	iter		1900788	1					
ANR	1900814	Identifier	data		1900788	1					
ANR	1900815	Identifier	FAILURE		1900788	1					
ANR	1900816	Identifier	SUCCESS		1900788	2					
ANR	1900817	ReturnType	static int		1900788	1					
ANR	1900818	Identifier	php_sxe_iterator_valid		1900788	2					
ANR	1900819	ParameterList	zend_object_iterator * iter		1900788	3					
ANR	1900820	Parameter	zend_object_iterator * iter	2449:34:62899:62924	1900788	0	True				
ANR	1900821	ParameterType	zend_object_iterator *		1900788	0					
ANR	1900822	Identifier	iter		1900788	1					
ANR	1900823	CFGEntryNode	ENTRY		1900788		True				
ANR	1900824	CFGExitNode	EXIT		1900788		True				
ANR	1900825	Symbol	iterator		1900788						
ANR	1900826	Symbol	* iterator		1900788						
ANR	1900827	Symbol	iterator -> sxe -> iter . data		1900788						
ANR	1900828	Symbol	SUCCESS		1900788						
ANR	1900829	Symbol	iterator -> sxe		1900788						
ANR	1900830	Symbol	Z_ISUNDEF		1900788						
ANR	1900831	Symbol	iterator -> sxe -> iter		1900788						
ANR	1900832	Symbol	iter		1900788						
ANR	1900833	Symbol	* * iterator		1900788						
ANR	1900834	Symbol	* iterator -> sxe		1900788						
ANR	1900835	Symbol	FAILURE		1900788						
ANR	1900836	Function	php_sxe_iterator_current_data	2457:0:63074:63249							
ANR	1900837	FunctionDef	php_sxe_iterator_current_data (zend_object_iterator * iter)		1900836	0					
ANR	1900838	CompoundStatement		2458:0:63155:63249	1900836	0					
ANR	1900839	IdentifierDeclStatement	php_sxe_iterator * iterator = ( php_sxe_iterator * ) iter ;	2459:1:63158:63211	1900836	0	True				
ANR	1900840	IdentifierDecl	* iterator = ( php_sxe_iterator * ) iter		1900836	0					
ANR	1900841	IdentifierDeclType	php_sxe_iterator *		1900836	0					
ANR	1900842	Identifier	iterator		1900836	1					
ANR	1900843	AssignmentExpression	* iterator = ( php_sxe_iterator * ) iter		1900836	2		=			
ANR	1900844	Identifier	iterator		1900836	0					
ANR	1900845	CastExpression	( php_sxe_iterator * ) iter		1900836	1					
ANR	1900846	CastTarget	php_sxe_iterator *		1900836	0					
ANR	1900847	Identifier	iter		1900836	1					
ANR	1900848	ReturnStatement	return & iterator -> sxe -> iter . data ;	2461:1:63215:63247	1900836	1	True				
ANR	1900849	UnaryOperationExpression	& iterator -> sxe -> iter . data		1900836	0					
ANR	1900850	UnaryOperator	&		1900836	0					
ANR	1900851	MemberAccess	iterator -> sxe -> iter . data		1900836	1					
ANR	1900852	PtrMemberAccess	iterator -> sxe -> iter		1900836	0					
ANR	1900853	PtrMemberAccess	iterator -> sxe		1900836	0					
ANR	1900854	Identifier	iterator		1900836	0					
ANR	1900855	Identifier	sxe		1900836	1					
ANR	1900856	Identifier	iter		1900836	1					
ANR	1900857	Identifier	data		1900836	1					
ANR	1900858	ReturnType	static zval *		1900836	1					
ANR	1900859	Identifier	php_sxe_iterator_current_data		1900836	2					
ANR	1900860	ParameterList	zend_object_iterator * iter		1900836	3					
ANR	1900861	Parameter	zend_object_iterator * iter	2457:43:63117:63142	1900836	0	True				
ANR	1900862	ParameterType	zend_object_iterator *		1900836	0					
ANR	1900863	Identifier	iter		1900836	1					
ANR	1900864	CFGEntryNode	ENTRY		1900836		True				
ANR	1900865	CFGExitNode	EXIT		1900836		True				
ANR	1900866	Symbol	iterator		1900836						
ANR	1900867	Symbol	* iterator		1900836						
ANR	1900868	Symbol	iterator -> sxe		1900836						
ANR	1900869	Symbol	iterator -> sxe -> iter		1900836						
ANR	1900870	Symbol	iter		1900836						
ANR	1900871	Symbol	* * iterator		1900836						
ANR	1900872	Symbol	* iterator -> sxe		1900836						
ANR	1900873	Symbol	& iterator -> sxe -> iter . data		1900836						
ANR	1900874	Symbol	& iterator -> sxe -> iter		1900836						
ANR	1900875	Function	php_sxe_iterator_current_key	2465:0:63262:63766							
ANR	1900876	FunctionDef	"php_sxe_iterator_current_key (zend_object_iterator * iter , zval * key)"		1900875	0					
ANR	1900877	CompoundStatement		2466:0:63352:63766	1900875	0					
ANR	1900878	IdentifierDeclStatement	php_sxe_iterator * iterator = ( php_sxe_iterator * ) iter ;	2467:1:63355:63408	1900875	0	True				
ANR	1900879	IdentifierDecl	* iterator = ( php_sxe_iterator * ) iter		1900875	0					
ANR	1900880	IdentifierDeclType	php_sxe_iterator *		1900875	0					
ANR	1900881	Identifier	iterator		1900875	1					
ANR	1900882	AssignmentExpression	* iterator = ( php_sxe_iterator * ) iter		1900875	2		=			
ANR	1900883	Identifier	iterator		1900875	0					
ANR	1900884	CastExpression	( php_sxe_iterator * ) iter		1900875	1					
ANR	1900885	CastTarget	php_sxe_iterator *		1900875	0					
ANR	1900886	Identifier	iter		1900875	1					
ANR	1900887	IdentifierDeclStatement	zval * curobj = & iterator -> sxe -> iter . data ;	2468:1:63411:63451	1900875	1	True				
ANR	1900888	IdentifierDecl	* curobj = & iterator -> sxe -> iter . data		1900875	0					
ANR	1900889	IdentifierDeclType	zval *		1900875	0					
ANR	1900890	Identifier	curobj		1900875	1					
ANR	1900891	AssignmentExpression	* curobj = & iterator -> sxe -> iter . data		1900875	2		=			
ANR	1900892	Identifier	curobj		1900875	0					
ANR	1900893	UnaryOperationExpression	& iterator -> sxe -> iter . data		1900875	1					
ANR	1900894	UnaryOperator	&		1900875	0					
ANR	1900895	MemberAccess	iterator -> sxe -> iter . data		1900875	1					
ANR	1900896	PtrMemberAccess	iterator -> sxe -> iter		1900875	0					
ANR	1900897	PtrMemberAccess	iterator -> sxe		1900875	0					
ANR	1900898	Identifier	iterator		1900875	0					
ANR	1900899	Identifier	sxe		1900875	1					
ANR	1900900	Identifier	iter		1900875	1					
ANR	1900901	Identifier	data		1900875	1					
ANR	1900902	IdentifierDeclStatement	php_sxe_object * intern = Z_SXEOBJ_P ( curobj ) ;	2469:1:63454:63497	1900875	2	True				
ANR	1900903	IdentifierDecl	* intern = Z_SXEOBJ_P ( curobj )		1900875	0					
ANR	1900904	IdentifierDeclType	php_sxe_object *		1900875	0					
ANR	1900905	Identifier	intern		1900875	1					
ANR	1900906	AssignmentExpression	* intern = Z_SXEOBJ_P ( curobj )		1900875	2		=			
ANR	1900907	Identifier	intern		1900875	0					
ANR	1900908	CallExpression	Z_SXEOBJ_P ( curobj )		1900875	1					
ANR	1900909	Callee	Z_SXEOBJ_P		1900875	0					
ANR	1900910	Identifier	Z_SXEOBJ_P		1900875	0					
ANR	1900911	ArgumentList	curobj		1900875	1					
ANR	1900912	Argument	curobj		1900875	0					
ANR	1900913	Identifier	curobj		1900875	0					
ANR	1900914	IdentifierDeclStatement	xmlNodePtr curnode = NULL ;	2471:1:63501:63526	1900875	3	True				
ANR	1900915	IdentifierDecl	curnode = NULL		1900875	0					
ANR	1900916	IdentifierDeclType	xmlNodePtr		1900875	0					
ANR	1900917	Identifier	curnode		1900875	1					
ANR	1900918	AssignmentExpression	curnode = NULL		1900875	2		=			
ANR	1900919	Identifier	NULL		1900875	0					
ANR	1900920	Identifier	NULL		1900875	1					
ANR	1900921	IfStatement	if ( intern != NULL && intern -> node != NULL )		1900875	4					
ANR	1900922	Condition	intern != NULL && intern -> node != NULL	2472:5:63533:63570	1900875	0	True				
ANR	1900923	AndExpression	intern != NULL && intern -> node != NULL		1900875	0		&&			
ANR	1900924	EqualityExpression	intern != NULL		1900875	0		!=			
ANR	1900925	Identifier	intern		1900875	0					
ANR	1900926	Identifier	NULL		1900875	1					
ANR	1900927	EqualityExpression	intern -> node != NULL		1900875	1		!=			
ANR	1900928	PtrMemberAccess	intern -> node		1900875	0					
ANR	1900929	Identifier	intern		1900875	0					
ANR	1900930	Identifier	node		1900875	1					
ANR	1900931	Identifier	NULL		1900875	1					
ANR	1900932	CompoundStatement		7:45:220:220	1900875	1					
ANR	1900933	ExpressionStatement	curnode = ( xmlNodePtr ) ( ( php_libxml_node_ptr * ) intern -> node ) -> node	2473:2:63577:63642	1900875	0	True				
ANR	1900934	AssignmentExpression	curnode = ( xmlNodePtr ) ( ( php_libxml_node_ptr * ) intern -> node ) -> node		1900875	0		=			
ANR	1900935	Identifier	curnode		1900875	0					
ANR	1900936	CastExpression	( xmlNodePtr ) ( ( php_libxml_node_ptr * ) intern -> node ) -> node		1900875	1					
ANR	1900937	CastTarget	xmlNodePtr		1900875	0					
ANR	1900938	PtrMemberAccess	( ( php_libxml_node_ptr * ) intern -> node ) -> node		1900875	1					
ANR	1900939	CastExpression	( php_libxml_node_ptr * ) intern -> node		1900875	0					
ANR	1900940	CastTarget	php_libxml_node_ptr *		1900875	0					
ANR	1900941	PtrMemberAccess	intern -> node		1900875	1					
ANR	1900942	Identifier	intern		1900875	0					
ANR	1900943	Identifier	node		1900875	1					
ANR	1900944	Identifier	node		1900875	1					
ANR	1900945	IfStatement	if ( curnode )		1900875	5					
ANR	1900946	Condition	curnode	2476:5:63653:63659	1900875	0	True				
ANR	1900947	Identifier	curnode		1900875	0					
ANR	1900948	CompoundStatement		11:14:309:309	1900875	1					
ANR	1900949	ExpressionStatement	"ZVAL_STRINGL ( key , ( char * ) curnode -> name , xmlStrlen ( curnode -> name ) )"	2477:2:63666:63733	1900875	0	True				
ANR	1900950	CallExpression	"ZVAL_STRINGL ( key , ( char * ) curnode -> name , xmlStrlen ( curnode -> name ) )"		1900875	0					
ANR	1900951	Callee	ZVAL_STRINGL		1900875	0					
ANR	1900952	Identifier	ZVAL_STRINGL		1900875	0					
ANR	1900953	ArgumentList	key		1900875	1					
ANR	1900954	Argument	key		1900875	0					
ANR	1900955	Identifier	key		1900875	0					
ANR	1900956	Argument	( char * ) curnode -> name		1900875	1					
ANR	1900957	CastExpression	( char * ) curnode -> name		1900875	0					
ANR	1900958	CastTarget	char *		1900875	0					
ANR	1900959	PtrMemberAccess	curnode -> name		1900875	1					
ANR	1900960	Identifier	curnode		1900875	0					
ANR	1900961	Identifier	name		1900875	1					
ANR	1900962	Argument	xmlStrlen ( curnode -> name )		1900875	2					
ANR	1900963	CallExpression	xmlStrlen ( curnode -> name )		1900875	0					
ANR	1900964	Callee	xmlStrlen		1900875	0					
ANR	1900965	Identifier	xmlStrlen		1900875	0					
ANR	1900966	ArgumentList	curnode -> name		1900875	1					
ANR	1900967	Argument	curnode -> name		1900875	0					
ANR	1900968	PtrMemberAccess	curnode -> name		1900875	0					
ANR	1900969	Identifier	curnode		1900875	0					
ANR	1900970	Identifier	name		1900875	1					
ANR	1900971	ElseStatement	else		1900875	0					
ANR	1900972	CompoundStatement		13:8:390:390	1900875	0					
ANR	1900973	ExpressionStatement	ZVAL_NULL ( key )	2479:2:63747:63761	1900875	0	True				
ANR	1900974	CallExpression	ZVAL_NULL ( key )		1900875	0					
ANR	1900975	Callee	ZVAL_NULL		1900875	0					
ANR	1900976	Identifier	ZVAL_NULL		1900875	0					
ANR	1900977	ArgumentList	key		1900875	1					
ANR	1900978	Argument	key		1900875	0					
ANR	1900979	Identifier	key		1900875	0					
ANR	1900980	ReturnType	static void		1900875	1					
ANR	1900981	Identifier	php_sxe_iterator_current_key		1900875	2					
ANR	1900982	ParameterList	"zend_object_iterator * iter , zval * key"		1900875	3					
ANR	1900983	Parameter	zend_object_iterator * iter	2465:41:63303:63328	1900875	0	True				
ANR	1900984	ParameterType	zend_object_iterator *		1900875	0					
ANR	1900985	Identifier	iter		1900875	1					
ANR	1900986	Parameter	zval * key	2465:69:63331:63339	1900875	1	True				
ANR	1900987	ParameterType	zval *		1900875	0					
ANR	1900988	Identifier	key		1900875	1					
ANR	1900989	CFGEntryNode	ENTRY		1900875		True				
ANR	1900990	CFGExitNode	EXIT		1900875		True				
ANR	1900991	Symbol	curobj		1900875						
ANR	1900992	Symbol	* intern		1900875						
ANR	1900993	Symbol	intern		1900875						
ANR	1900994	Symbol	NULL		1900875						
ANR	1900995	Symbol	curnode -> name		1900875						
ANR	1900996	Symbol	* curnode		1900875						
ANR	1900997	Symbol	iterator -> sxe -> iter		1900875						
ANR	1900998	Symbol	curnode		1900875						
ANR	1900999	Symbol	iter		1900875						
ANR	1901000	Symbol	* * iterator		1900875						
ANR	1901001	Symbol	( ( php_libxml_node_ptr * ) intern -> node ) -> node		1900875						
ANR	1901002	Symbol	& iterator -> sxe -> iter		1900875						
ANR	1901003	Symbol	* intern -> node		1900875						
ANR	1901004	Symbol	iterator		1900875						
ANR	1901005	Symbol	* iterator		1900875						
ANR	1901006	Symbol	iterator -> sxe		1900875						
ANR	1901007	Symbol	xmlStrlen		1900875						
ANR	1901008	Symbol	intern -> node		1900875						
ANR	1901009	Symbol	* * intern		1900875						
ANR	1901010	Symbol	* iterator -> sxe		1900875						
ANR	1901011	Symbol	key		1900875						
ANR	1901012	Symbol	& iterator -> sxe -> iter . data		1900875						
ANR	1901013	Symbol	Z_SXEOBJ_P		1900875						
ANR	1901014	Function	php_sxe_move_forward_iterator	2484:0:63779:64147							
ANR	1901015	FunctionDef	php_sxe_move_forward_iterator (php_sxe_object * sxe)		1901014	0					
ANR	1901016	CompoundStatement		2485:0:63857:64147	1901014	0					
ANR	1901017	IdentifierDeclStatement	xmlNodePtr node = NULL ;	2486:1:63860:63887	1901014	0	True				
ANR	1901018	IdentifierDecl	node = NULL		1901014	0					
ANR	1901019	IdentifierDeclType	xmlNodePtr		1901014	0					
ANR	1901020	Identifier	node		1901014	1					
ANR	1901021	AssignmentExpression	node = NULL		1901014	2		=			
ANR	1901022	Identifier	NULL		1901014	0					
ANR	1901023	Identifier	NULL		1901014	1					
ANR	1901024	IdentifierDeclStatement	php_sxe_object * intern ;	2487:1:63890:63913	1901014	1	True				
ANR	1901025	IdentifierDecl	* intern		1901014	0					
ANR	1901026	IdentifierDeclType	php_sxe_object *		1901014	0					
ANR	1901027	Identifier	intern		1901014	1					
ANR	1901028	IfStatement	if ( ! Z_ISUNDEF ( sxe -> iter . data ) )		1901014	2					
ANR	1901029	Condition	! Z_ISUNDEF ( sxe -> iter . data )	2489:5:63921:63946	1901014	0	True				
ANR	1901030	UnaryOperationExpression	! Z_ISUNDEF ( sxe -> iter . data )		1901014	0					
ANR	1901031	UnaryOperator	!		1901014	0					
ANR	1901032	CallExpression	Z_ISUNDEF ( sxe -> iter . data )		1901014	1					
ANR	1901033	Callee	Z_ISUNDEF		1901014	0					
ANR	1901034	Identifier	Z_ISUNDEF		1901014	0					
ANR	1901035	ArgumentList	sxe -> iter . data		1901014	1					
ANR	1901036	Argument	sxe -> iter . data		1901014	0					
ANR	1901037	MemberAccess	sxe -> iter . data		1901014	0					
ANR	1901038	PtrMemberAccess	sxe -> iter		1901014	0					
ANR	1901039	Identifier	sxe		1901014	0					
ANR	1901040	Identifier	iter		1901014	1					
ANR	1901041	Identifier	data		1901014	1					
ANR	1901042	CompoundStatement		5:33:91:91	1901014	1					
ANR	1901043	ExpressionStatement	intern = Z_SXEOBJ_P ( & sxe -> iter . data )	2490:2:63953:63989	1901014	0	True				
ANR	1901044	AssignmentExpression	intern = Z_SXEOBJ_P ( & sxe -> iter . data )		1901014	0		=			
ANR	1901045	Identifier	intern		1901014	0					
ANR	1901046	CallExpression	Z_SXEOBJ_P ( & sxe -> iter . data )		1901014	1					
ANR	1901047	Callee	Z_SXEOBJ_P		1901014	0					
ANR	1901048	Identifier	Z_SXEOBJ_P		1901014	0					
ANR	1901049	ArgumentList	& sxe -> iter . data		1901014	1					
ANR	1901050	Argument	& sxe -> iter . data		1901014	0					
ANR	1901051	UnaryOperationExpression	& sxe -> iter . data		1901014	0					
ANR	1901052	UnaryOperator	&		1901014	0					
ANR	1901053	MemberAccess	sxe -> iter . data		1901014	1					
ANR	1901054	PtrMemberAccess	sxe -> iter		1901014	0					
ANR	1901055	Identifier	sxe		1901014	0					
ANR	1901056	Identifier	iter		1901014	1					
ANR	1901057	Identifier	data		1901014	1					
ANR	1901058	Statement	GET_NODE	2491:2:63993:64000	1901014	1	True				
ANR	1901059	Statement	(	2491:10:64001:64001	1901014	2	True				
ANR	1901060	Statement	intern	2491:11:64002:64007	1901014	3	True				
ANR	1901061	Statement	","	2491:17:64008:64008	1901014	4	True				
ANR	1901062	Statement	node	2491:19:64010:64013	1901014	5	True				
ANR	1901063	Statement	)	2491:23:64014:64014	1901014	6	True				
ANR	1901064	ExpressionStatement	zval_ptr_dtor ( & sxe -> iter . data )	2492:2:64018:64048	1901014	7	True				
ANR	1901065	CallExpression	zval_ptr_dtor ( & sxe -> iter . data )		1901014	0					
ANR	1901066	Callee	zval_ptr_dtor		1901014	0					
ANR	1901067	Identifier	zval_ptr_dtor		1901014	0					
ANR	1901068	ArgumentList	& sxe -> iter . data		1901014	1					
ANR	1901069	Argument	& sxe -> iter . data		1901014	0					
ANR	1901070	UnaryOperationExpression	& sxe -> iter . data		1901014	0					
ANR	1901071	UnaryOperator	&		1901014	0					
ANR	1901072	MemberAccess	sxe -> iter . data		1901014	1					
ANR	1901073	PtrMemberAccess	sxe -> iter		1901014	0					
ANR	1901074	Identifier	sxe		1901014	0					
ANR	1901075	Identifier	iter		1901014	1					
ANR	1901076	Identifier	data		1901014	1					
ANR	1901077	ExpressionStatement	ZVAL_UNDEF ( & sxe -> iter . data )	2493:2:64052:64079	1901014	8	True				
ANR	1901078	CallExpression	ZVAL_UNDEF ( & sxe -> iter . data )		1901014	0					
ANR	1901079	Callee	ZVAL_UNDEF		1901014	0					
ANR	1901080	Identifier	ZVAL_UNDEF		1901014	0					
ANR	1901081	ArgumentList	& sxe -> iter . data		1901014	1					
ANR	1901082	Argument	& sxe -> iter . data		1901014	0					
ANR	1901083	UnaryOperationExpression	& sxe -> iter . data		1901014	0					
ANR	1901084	UnaryOperator	&		1901014	0					
ANR	1901085	MemberAccess	sxe -> iter . data		1901014	1					
ANR	1901086	PtrMemberAccess	sxe -> iter		1901014	0					
ANR	1901087	Identifier	sxe		1901014	0					
ANR	1901088	Identifier	iter		1901014	1					
ANR	1901089	Identifier	data		1901014	1					
ANR	1901090	IfStatement	if ( node )		1901014	3					
ANR	1901091	Condition	node	2496:5:64090:64093	1901014	0	True				
ANR	1901092	Identifier	node		1901014	0					
ANR	1901093	CompoundStatement		12:11:238:238	1901014	1					
ANR	1901094	ExpressionStatement	"php_sxe_iterator_fetch ( sxe , node -> next , 1 )"	2497:2:64100:64142	1901014	0	True				
ANR	1901095	CallExpression	"php_sxe_iterator_fetch ( sxe , node -> next , 1 )"		1901014	0					
ANR	1901096	Callee	php_sxe_iterator_fetch		1901014	0					
ANR	1901097	Identifier	php_sxe_iterator_fetch		1901014	0					
ANR	1901098	ArgumentList	sxe		1901014	1					
ANR	1901099	Argument	sxe		1901014	0					
ANR	1901100	Identifier	sxe		1901014	0					
ANR	1901101	Argument	node -> next		1901014	1					
ANR	1901102	PtrMemberAccess	node -> next		1901014	0					
ANR	1901103	Identifier	node		1901014	0					
ANR	1901104	Identifier	next		1901014	1					
ANR	1901105	Argument	1		1901014	2					
ANR	1901106	PrimaryExpression	1		1901014	0					
ANR	1901107	ReturnType	PHP_SXE_API void		1901014	1					
ANR	1901108	Identifier	php_sxe_move_forward_iterator		1901014	2					
ANR	1901109	ParameterList	php_sxe_object * sxe		1901014	3					
ANR	1901110	Parameter	php_sxe_object * sxe	2484:47:63826:63844	1901014	0	True				
ANR	1901111	ParameterType	php_sxe_object *		1901014	0					
ANR	1901112	Identifier	sxe		1901014	1					
ANR	1901113	CFGEntryNode	ENTRY		1901014		True				
ANR	1901114	CFGExitNode	EXIT		1901014		True				
ANR	1901115	Symbol	sxe		1901014						
ANR	1901116	Symbol	& sxe -> iter		1901014						
ANR	1901117	Symbol	NULL		1901014						
ANR	1901118	Symbol	intern		1901014						
ANR	1901119	Symbol	Z_ISUNDEF		1901014						
ANR	1901120	Symbol	* sxe		1901014						
ANR	1901121	Symbol	node -> next		1901014						
ANR	1901122	Symbol	sxe -> iter		1901014						
ANR	1901123	Symbol	node		1901014						
ANR	1901124	Symbol	sxe -> iter . data		1901014						
ANR	1901125	Symbol	* node		1901014						
ANR	1901126	Symbol	& sxe -> iter . data		1901014						
ANR	1901127	Symbol	Z_SXEOBJ_P		1901014						
ANR	1901128	Function	php_sxe_iterator_move_forward	2502:0:64160:64345							
ANR	1901129	FunctionDef	php_sxe_iterator_move_forward (zend_object_iterator * iter)		1901128	0					
ANR	1901130	CompoundStatement		2503:0:64240:64345	1901128	0					
ANR	1901131	IdentifierDeclStatement	php_sxe_iterator * iterator = ( php_sxe_iterator * ) iter ;	2504:1:64243:64296	1901128	0	True				
ANR	1901132	IdentifierDecl	* iterator = ( php_sxe_iterator * ) iter		1901128	0					
ANR	1901133	IdentifierDeclType	php_sxe_iterator *		1901128	0					
ANR	1901134	Identifier	iterator		1901128	1					
ANR	1901135	AssignmentExpression	* iterator = ( php_sxe_iterator * ) iter		1901128	2		=			
ANR	1901136	Identifier	iterator		1901128	0					
ANR	1901137	CastExpression	( php_sxe_iterator * ) iter		1901128	1					
ANR	1901138	CastTarget	php_sxe_iterator *		1901128	0					
ANR	1901139	Identifier	iter		1901128	1					
ANR	1901140	ExpressionStatement	php_sxe_move_forward_iterator ( iterator -> sxe )	2505:1:64299:64343	1901128	1	True				
ANR	1901141	CallExpression	php_sxe_move_forward_iterator ( iterator -> sxe )		1901128	0					
ANR	1901142	Callee	php_sxe_move_forward_iterator		1901128	0					
ANR	1901143	Identifier	php_sxe_move_forward_iterator		1901128	0					
ANR	1901144	ArgumentList	iterator -> sxe		1901128	1					
ANR	1901145	Argument	iterator -> sxe		1901128	0					
ANR	1901146	PtrMemberAccess	iterator -> sxe		1901128	0					
ANR	1901147	Identifier	iterator		1901128	0					
ANR	1901148	Identifier	sxe		1901128	1					
ANR	1901149	ReturnType	static void		1901128	1					
ANR	1901150	Identifier	php_sxe_iterator_move_forward		1901128	2					
ANR	1901151	ParameterList	zend_object_iterator * iter		1901128	3					
ANR	1901152	Parameter	zend_object_iterator * iter	2502:42:64202:64227	1901128	0	True				
ANR	1901153	ParameterType	zend_object_iterator *		1901128	0					
ANR	1901154	Identifier	iter		1901128	1					
ANR	1901155	CFGEntryNode	ENTRY		1901128		True				
ANR	1901156	CFGExitNode	EXIT		1901128		True				
ANR	1901157	Symbol	iterator		1901128						
ANR	1901158	Symbol	* iterator		1901128						
ANR	1901159	Symbol	iterator -> sxe		1901128						
ANR	1901160	Symbol	iter		1901128						
ANR	1901161	Function	php_sxe_iterator_rewind	2509:0:64358:64569							
ANR	1901162	FunctionDef	php_sxe_iterator_rewind (zend_object_iterator * iter)		1901161	0					
ANR	1901163	CompoundStatement		2510:0:64432:64569	1901161	0					
ANR	1901164	IdentifierDeclStatement	php_sxe_object * sxe ;	2511:1:64435:64454	1901161	0	True				
ANR	1901165	IdentifierDecl	* sxe		1901161	0					
ANR	1901166	IdentifierDeclType	php_sxe_object *		1901161	0					
ANR	1901167	Identifier	sxe		1901161	1					
ANR	1901168	IdentifierDeclStatement	php_sxe_iterator * iterator = ( php_sxe_iterator * ) iter ;	2513:1:64458:64511	1901161	1	True				
ANR	1901169	IdentifierDecl	* iterator = ( php_sxe_iterator * ) iter		1901161	0					
ANR	1901170	IdentifierDeclType	php_sxe_iterator *		1901161	0					
ANR	1901171	Identifier	iterator		1901161	1					
ANR	1901172	AssignmentExpression	* iterator = ( php_sxe_iterator * ) iter		1901161	2		=			
ANR	1901173	Identifier	iterator		1901161	0					
ANR	1901174	CastExpression	( php_sxe_iterator * ) iter		1901161	1					
ANR	1901175	CastTarget	php_sxe_iterator *		1901161	0					
ANR	1901176	Identifier	iter		1901161	1					
ANR	1901177	ExpressionStatement	sxe = iterator -> sxe	2514:1:64514:64533	1901161	2	True				
ANR	1901178	AssignmentExpression	sxe = iterator -> sxe		1901161	0		=			
ANR	1901179	Identifier	sxe		1901161	0					
ANR	1901180	PtrMemberAccess	iterator -> sxe		1901161	1					
ANR	1901181	Identifier	iterator		1901161	0					
ANR	1901182	Identifier	sxe		1901161	1					
ANR	1901183	ExpressionStatement	"php_sxe_reset_iterator ( sxe , 1 )"	2516:1:64537:64567	1901161	3	True				
ANR	1901184	CallExpression	"php_sxe_reset_iterator ( sxe , 1 )"		1901161	0					
ANR	1901185	Callee	php_sxe_reset_iterator		1901161	0					
ANR	1901186	Identifier	php_sxe_reset_iterator		1901161	0					
ANR	1901187	ArgumentList	sxe		1901161	1					
ANR	1901188	Argument	sxe		1901161	0					
ANR	1901189	Identifier	sxe		1901161	0					
ANR	1901190	Argument	1		1901161	1					
ANR	1901191	PrimaryExpression	1		1901161	0					
ANR	1901192	ReturnType	static void		1901161	1					
ANR	1901193	Identifier	php_sxe_iterator_rewind		1901161	2					
ANR	1901194	ParameterList	zend_object_iterator * iter		1901161	3					
ANR	1901195	Parameter	zend_object_iterator * iter	2509:36:64394:64419	1901161	0	True				
ANR	1901196	ParameterType	zend_object_iterator *		1901161	0					
ANR	1901197	Identifier	iter		1901161	1					
ANR	1901198	CFGEntryNode	ENTRY		1901161		True				
ANR	1901199	CFGExitNode	EXIT		1901161		True				
ANR	1901200	Symbol	sxe		1901161						
ANR	1901201	Symbol	iterator		1901161						
ANR	1901202	Symbol	* iterator		1901161						
ANR	1901203	Symbol	iterator -> sxe		1901161						
ANR	1901204	Symbol	iter		1901161						
ANR	1901205	Function	simplexml_export_node	2520:0:64582:64769							
ANR	1901206	FunctionDef	simplexml_export_node (zval * object)		1901205	0					
ANR	1901207	CompoundStatement		2521:0:64634:64769	1901205	0					
ANR	1901208	IdentifierDeclStatement	php_sxe_object * sxe ;	2522:1:64637:64656	1901205	0	True				
ANR	1901209	IdentifierDecl	* sxe		1901205	0					
ANR	1901210	IdentifierDeclType	php_sxe_object *		1901205	0					
ANR	1901211	Identifier	sxe		1901205	1					
ANR	1901212	IdentifierDeclStatement	xmlNodePtr node ;	2523:1:64659:64674	1901205	1	True				
ANR	1901213	IdentifierDecl	node		1901205	0					
ANR	1901214	IdentifierDeclType	xmlNodePtr		1901205	0					
ANR	1901215	Identifier	node		1901205	1					
ANR	1901216	ExpressionStatement	sxe = Z_SXEOBJ_P ( object )	2525:1:64678:64702	1901205	2	True				
ANR	1901217	AssignmentExpression	sxe = Z_SXEOBJ_P ( object )		1901205	0		=			
ANR	1901218	Identifier	sxe		1901205	0					
ANR	1901219	CallExpression	Z_SXEOBJ_P ( object )		1901205	1					
ANR	1901220	Callee	Z_SXEOBJ_P		1901205	0					
ANR	1901221	Identifier	Z_SXEOBJ_P		1901205	0					
ANR	1901222	ArgumentList	object		1901205	1					
ANR	1901223	Argument	object		1901205	0					
ANR	1901224	Identifier	object		1901205	0					
ANR	1901225	ExpressionStatement	"GET_NODE ( sxe , node )"	2526:1:64705:64724	1901205	3	True				
ANR	1901226	CallExpression	"GET_NODE ( sxe , node )"		1901205	0					
ANR	1901227	Callee	GET_NODE		1901205	0					
ANR	1901228	Identifier	GET_NODE		1901205	0					
ANR	1901229	ArgumentList	sxe		1901205	1					
ANR	1901230	Argument	sxe		1901205	0					
ANR	1901231	Identifier	sxe		1901205	0					
ANR	1901232	Argument	node		1901205	1					
ANR	1901233	Identifier	node		1901205	0					
ANR	1901234	ReturnStatement	"return php_sxe_get_first_node ( sxe , node ) ;"	2527:1:64727:64767	1901205	4	True				
ANR	1901235	CallExpression	"php_sxe_get_first_node ( sxe , node )"		1901205	0					
ANR	1901236	Callee	php_sxe_get_first_node		1901205	0					
ANR	1901237	Identifier	php_sxe_get_first_node		1901205	0					
ANR	1901238	ArgumentList	sxe		1901205	1					
ANR	1901239	Argument	sxe		1901205	0					
ANR	1901240	Identifier	sxe		1901205	0					
ANR	1901241	Argument	node		1901205	1					
ANR	1901242	Identifier	node		1901205	0					
ANR	1901243	ReturnType	void *		1901205	1					
ANR	1901244	Identifier	simplexml_export_node		1901205	2					
ANR	1901245	ParameterList	zval * object		1901205	3					
ANR	1901246	Parameter	zval * object	2520:28:64610:64621	1901205	0	True				
ANR	1901247	ParameterType	zval *		1901205	0					
ANR	1901248	Identifier	object		1901205	1					
ANR	1901249	CFGEntryNode	ENTRY		1901205		True				
ANR	1901250	CFGExitNode	EXIT		1901205		True				
ANR	1901251	Symbol	sxe		1901205						
ANR	1901252	Symbol	node		1901205						
ANR	1901253	Symbol	php_sxe_get_first_node		1901205						
ANR	1901254	Symbol	Z_SXEOBJ_P		1901205						
ANR	1901255	Symbol	object		1901205						
ANR	1901256	DeclStmt									
ANR	1901257	Decl							php_sxe_object	php_sxe_object *	sxe
ANR	1901258	DeclStmt									
ANR	1901259	Decl							zval	zval *	node
ANR	1901260	DeclStmt									
ANR	1901261	Decl							php_libxml_node_object	php_libxml_node_object *	object
ANR	1901262	DeclStmt									
ANR	1901263	Decl							xmlNodePtr	xmlNodePtr	nodep
ANR	1901264	DeclStmt									
ANR	1901265	Decl							zend_class_entry	zend_class_entry *	ce
ANR	1901266	DeclStmt									
ANR	1901267	Decl							zend_function	zend_function *	fptr_count
ANR	1901268	DeclStmt									
ANR	1901269	Decl							const zend_function_entry	const zend_function_entry [ ]	simplexml_functions
ANR	1901270	DeclStmt									
ANR	1901271	Decl							const zend_module_dep	const zend_module_dep [ ]	simplexml_deps
ANR	1901272	DeclStmt									
ANR	1901273	Decl							zend_module_entry	zend_module_entry	simplexml_module_entry
ANR	1901274	DeclStmt									
ANR	1901275	Decl							const zend_function_entry	const zend_function_entry [ ]	sxe_functions
ANR	1901276	DeclStmt									
ANR	1901277	Decl							zend_class_entry	zend_class_entry	sxe
