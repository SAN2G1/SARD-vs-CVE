command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	70014	File	data/converged/CVE-2015-8617_php-src/Zend_zend_arena.h								
ANR	70015	DeclStmt									
ANR	70016	Decl							struct _zend_arena	struct _zend_arena	zend_arena
ANR	70017	ClassDef	_zend_arena	28:0:1266:1333							
ANR	70018	DeclStmt									
ANR	70019	Decl							char	char *	ptr
ANR	70020	DeclStmt									
ANR	70021	Decl							char	char *	end
ANR	70022	DeclStmt									
ANR	70023	Decl							zend_arena	zend_arena *	prev
ANR	70024	Function	zend_arena_create	34:0:1337:1602							
ANR	70025	FunctionDef	zend_arena_create (size_t size)		70024	0					
ANR	70026	CompoundStatement		35:0:1406:1602	70024	0					
ANR	70027	IdentifierDeclStatement	zend_arena * arena = ( zend_arena * ) emalloc ( size ) ;	36:1:1409:1455	70024	0	True				
ANR	70028	IdentifierDecl	* arena = ( zend_arena * ) emalloc ( size )		70024	0					
ANR	70029	IdentifierDeclType	zend_arena *		70024	0					
ANR	70030	Identifier	arena		70024	1					
ANR	70031	AssignmentExpression	* arena = ( zend_arena * ) emalloc ( size )		70024	2		=			
ANR	70032	Identifier	arena		70024	0					
ANR	70033	CastExpression	( zend_arena * ) emalloc ( size )		70024	1					
ANR	70034	CastTarget	zend_arena *		70024	0					
ANR	70035	CallExpression	emalloc ( size )		70024	1					
ANR	70036	Callee	emalloc		70024	0					
ANR	70037	Identifier	emalloc		70024	0					
ANR	70038	ArgumentList	size		70024	1					
ANR	70039	Argument	size		70024	0					
ANR	70040	Identifier	size		70024	0					
ANR	70041	ExpressionStatement	arena -> ptr = ( char * ) arena + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) )	38:1:1459:1528	70024	1	True				
ANR	70042	AssignmentExpression	arena -> ptr = ( char * ) arena + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) )		70024	0		=			
ANR	70043	PtrMemberAccess	arena -> ptr		70024	0					
ANR	70044	Identifier	arena		70024	0					
ANR	70045	Identifier	ptr		70024	1					
ANR	70046	AdditiveExpression	( char * ) arena + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) )		70024	1		+			
ANR	70047	CastExpression	( char * ) arena		70024	0					
ANR	70048	CastTarget	char *		70024	0					
ANR	70049	Identifier	arena		70024	1					
ANR	70050	CallExpression	ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) )		70024	1					
ANR	70051	Callee	ZEND_MM_ALIGNED_SIZE		70024	0					
ANR	70052	Identifier	ZEND_MM_ALIGNED_SIZE		70024	0					
ANR	70053	ArgumentList	sizeof ( zend_arena )		70024	1					
ANR	70054	Argument	sizeof ( zend_arena )		70024	0					
ANR	70055	SizeofExpression	sizeof ( zend_arena )		70024	0					
ANR	70056	Sizeof	sizeof		70024	0					
ANR	70057	SizeofOperand	zend_arena		70024	1					
ANR	70058	ExpressionStatement	arena -> end = ( char * ) arena + size	39:1:1531:1564	70024	2	True				
ANR	70059	AssignmentExpression	arena -> end = ( char * ) arena + size		70024	0		=			
ANR	70060	PtrMemberAccess	arena -> end		70024	0					
ANR	70061	Identifier	arena		70024	0					
ANR	70062	Identifier	end		70024	1					
ANR	70063	AdditiveExpression	( char * ) arena + size		70024	1		+			
ANR	70064	CastExpression	( char * ) arena		70024	0					
ANR	70065	CastTarget	char *		70024	0					
ANR	70066	Identifier	arena		70024	1					
ANR	70067	Identifier	size		70024	1					
ANR	70068	ExpressionStatement	arena -> prev = NULL	40:1:1567:1585	70024	3	True				
ANR	70069	AssignmentExpression	arena -> prev = NULL		70024	0		=			
ANR	70070	PtrMemberAccess	arena -> prev		70024	0					
ANR	70071	Identifier	arena		70024	0					
ANR	70072	Identifier	prev		70024	1					
ANR	70073	Identifier	NULL		70024	1					
ANR	70074	ReturnStatement	return arena ;	41:1:1588:1600	70024	4	True				
ANR	70075	Identifier	arena		70024	0					
ANR	70076	ReturnType	static zend_always_inline zend_arena *		70024	1					
ANR	70077	Identifier	zend_arena_create		70024	2					
ANR	70078	ParameterList	size_t size		70024	3					
ANR	70079	Parameter	size_t size	34:56:1393:1403	70024	0	True				
ANR	70080	ParameterType	size_t		70024	0					
ANR	70081	Identifier	size		70024	1					
ANR	70082	CFGEntryNode	ENTRY		70024		True				
ANR	70083	CFGExitNode	EXIT		70024		True				
ANR	70084	Symbol	arena -> end		70024						
ANR	70085	Symbol	emalloc		70024						
ANR	70086	Symbol	NULL		70024						
ANR	70087	Symbol	arena -> prev		70024						
ANR	70088	Symbol	size		70024						
ANR	70089	Symbol	ZEND_MM_ALIGNED_SIZE		70024						
ANR	70090	Symbol	arena		70024						
ANR	70091	Symbol	* arena		70024						
ANR	70092	Symbol	arena -> ptr		70024						
ANR	70093	Function	zend_arena_destroy	44:0:1605:1766							
ANR	70094	FunctionDef	zend_arena_destroy (zend_arena * arena)		70093	0					
ANR	70095	CompoundStatement		45:0:1674:1766	70093	0					
ANR	70096	DoStatement	do		70093	0					
ANR	70097	CompoundStatement		3:2:9:39	70093	0					
ANR	70098	IdentifierDeclStatement	zend_arena * prev = arena -> prev ;	47:2:1684:1714	70093	0	True				
ANR	70099	IdentifierDecl	* prev = arena -> prev		70093	0					
ANR	70100	IdentifierDeclType	zend_arena *		70093	0					
ANR	70101	Identifier	prev		70093	1					
ANR	70102	AssignmentExpression	* prev = arena -> prev		70093	2		=			
ANR	70103	Identifier	prev		70093	0					
ANR	70104	PtrMemberAccess	arena -> prev		70093	1					
ANR	70105	Identifier	arena		70093	0					
ANR	70106	Identifier	prev		70093	1					
ANR	70107	ExpressionStatement	efree ( arena )	48:2:1718:1730	70093	1	True				
ANR	70108	CallExpression	efree ( arena )		70093	0					
ANR	70109	Callee	efree		70093	0					
ANR	70110	Identifier	efree		70093	0					
ANR	70111	ArgumentList	arena		70093	1					
ANR	70112	Argument	arena		70093	0					
ANR	70113	Identifier	arena		70093	0					
ANR	70114	ExpressionStatement	arena = prev	49:2:1734:1746	70093	2	True				
ANR	70115	AssignmentExpression	arena = prev		70093	0		=			
ANR	70116	Identifier	arena		70093	0					
ANR	70117	Identifier	prev		70093	1					
ANR	70118	Condition	arena	50:10:1758:1762	70093	1	True				
ANR	70119	Identifier	arena		70093	0					
ANR	70120	ReturnType	static zend_always_inline void		70093	1					
ANR	70121	Identifier	zend_arena_destroy		70093	2					
ANR	70122	ParameterList	zend_arena * arena		70093	3					
ANR	70123	Parameter	zend_arena * arena	44:50:1655:1671	70093	0	True				
ANR	70124	ParameterType	zend_arena *		70093	0					
ANR	70125	Identifier	arena		70093	1					
ANR	70126	CFGEntryNode	ENTRY		70093		True				
ANR	70127	CFGExitNode	EXIT		70093		True				
ANR	70128	Symbol	arena -> prev		70093						
ANR	70129	Symbol	prev		70093						
ANR	70130	Symbol	arena		70093						
ANR	70131	Symbol	* arena		70093						
ANR	70132	Function	zend_arena_alloc	55:0:1802:2650							
ANR	70133	FunctionDef	"zend_arena_alloc (zend_arena * * arena_ptr , size_t size)"		70132	0					
ANR	70134	CompoundStatement		56:0:1888:2650	70132	0					
ANR	70135	IdentifierDeclStatement	zend_arena * arena = * arena_ptr ;	57:1:1891:1921	70132	0	True				
ANR	70136	IdentifierDecl	* arena = * arena_ptr		70132	0					
ANR	70137	IdentifierDeclType	zend_arena *		70132	0					
ANR	70138	Identifier	arena		70132	1					
ANR	70139	AssignmentExpression	* arena = * arena_ptr		70132	2		=			
ANR	70140	Identifier	arena		70132	0					
ANR	70141	UnaryOperationExpression	* arena_ptr		70132	1					
ANR	70142	UnaryOperator	*		70132	0					
ANR	70143	Identifier	arena_ptr		70132	1					
ANR	70144	IdentifierDeclStatement	char * ptr = arena -> ptr ;	58:1:1924:1946	70132	1	True				
ANR	70145	IdentifierDecl	* ptr = arena -> ptr		70132	0					
ANR	70146	IdentifierDeclType	char *		70132	0					
ANR	70147	Identifier	ptr		70132	1					
ANR	70148	AssignmentExpression	* ptr = arena -> ptr		70132	2		=			
ANR	70149	Identifier	ptr		70132	0					
ANR	70150	PtrMemberAccess	arena -> ptr		70132	1					
ANR	70151	Identifier	arena		70132	0					
ANR	70152	Identifier	ptr		70132	1					
ANR	70153	ExpressionStatement	size = ZEND_MM_ALIGNED_SIZE ( size )	60:1:1950:1983	70132	2	True				
ANR	70154	AssignmentExpression	size = ZEND_MM_ALIGNED_SIZE ( size )		70132	0		=			
ANR	70155	Identifier	size		70132	0					
ANR	70156	CallExpression	ZEND_MM_ALIGNED_SIZE ( size )		70132	1					
ANR	70157	Callee	ZEND_MM_ALIGNED_SIZE		70132	0					
ANR	70158	Identifier	ZEND_MM_ALIGNED_SIZE		70132	0					
ANR	70159	ArgumentList	size		70132	1					
ANR	70160	Argument	size		70132	0					
ANR	70161	Identifier	size		70132	0					
ANR	70162	IfStatement	if ( EXPECTED ( size <= ( size_t ) ( arena -> end - ptr ) ) )		70132	3					
ANR	70163	Condition	EXPECTED ( size <= ( size_t ) ( arena -> end - ptr ) )	62:5:1991:2034	70132	0	True				
ANR	70164	CallExpression	EXPECTED ( size <= ( size_t ) ( arena -> end - ptr ) )		70132	0					
ANR	70165	Callee	EXPECTED		70132	0					
ANR	70166	Identifier	EXPECTED		70132	0					
ANR	70167	ArgumentList	size <= ( size_t ) ( arena -> end - ptr )		70132	1					
ANR	70168	Argument	size <= ( size_t ) ( arena -> end - ptr )		70132	0					
ANR	70169	RelationalExpression	size <= ( size_t ) ( arena -> end - ptr )		70132	0		<=			
ANR	70170	Identifier	size		70132	0					
ANR	70171	CastExpression	( size_t ) ( arena -> end - ptr )		70132	1					
ANR	70172	CastTarget	size_t		70132	0					
ANR	70173	AdditiveExpression	arena -> end - ptr		70132	1		-			
ANR	70174	PtrMemberAccess	arena -> end		70132	0					
ANR	70175	Identifier	arena		70132	0					
ANR	70176	Identifier	end		70132	1					
ANR	70177	Identifier	ptr		70132	1					
ANR	70178	CompoundStatement		7:51:148:148	70132	1					
ANR	70179	ExpressionStatement	arena -> ptr = ptr + size	63:2:2041:2064	70132	0	True				
ANR	70180	AssignmentExpression	arena -> ptr = ptr + size		70132	0		=			
ANR	70181	PtrMemberAccess	arena -> ptr		70132	0					
ANR	70182	Identifier	arena		70132	0					
ANR	70183	Identifier	ptr		70132	1					
ANR	70184	AdditiveExpression	ptr + size		70132	1		+			
ANR	70185	Identifier	ptr		70132	0					
ANR	70186	Identifier	size		70132	1					
ANR	70187	ElseStatement	else		70132	0					
ANR	70188	CompoundStatement		14:2:415:471	70132	0					
ANR	70189	IdentifierDeclStatement	size_t arena_size = UNEXPECTED ( ( size + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) ) ) > ( size_t ) ( arena -> end - ( char * ) arena ) ) ? ( size + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) ) ) : ( size_t ) ( arena -> end - ( char * ) arena ) ;	65:2:2078:2300	70132	0	True				
ANR	70190	IdentifierDecl	arena_size = UNEXPECTED ( ( size + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) ) ) > ( size_t ) ( arena -> end - ( char * ) arena ) ) ? ( size + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) ) ) : ( size_t ) ( arena -> end - ( char * ) arena )		70132	0					
ANR	70191	IdentifierDeclType	size_t		70132	0					
ANR	70192	Identifier	arena_size		70132	1					
ANR	70193	AssignmentExpression	arena_size = UNEXPECTED ( ( size + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) ) ) > ( size_t ) ( arena -> end - ( char * ) arena ) ) ? ( size + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) ) ) : ( size_t ) ( arena -> end - ( char * ) arena )		70132	2		=			
ANR	70194	Identifier	arena_size		70132	0					
ANR	70195	ConditionalExpression	UNEXPECTED ( ( size + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) ) ) > ( size_t ) ( arena -> end - ( char * ) arena ) ) ? ( size + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) ) ) : ( size_t ) ( arena -> end - ( char * ) arena )		70132	1					
ANR	70196	Condition	UNEXPECTED ( ( size + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) ) ) > ( size_t ) ( arena -> end - ( char * ) arena ) )		70132	0					
ANR	70197	CallExpression	UNEXPECTED ( ( size + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) ) ) > ( size_t ) ( arena -> end - ( char * ) arena ) )		70132	0					
ANR	70198	Callee	UNEXPECTED		70132	0					
ANR	70199	Identifier	UNEXPECTED		70132	0					
ANR	70200	ArgumentList	( size + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) ) ) > ( size_t ) ( arena -> end - ( char * ) arena )		70132	1					
ANR	70201	Argument	( size + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) ) ) > ( size_t ) ( arena -> end - ( char * ) arena )		70132	0					
ANR	70202	RelationalExpression	( size + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) ) ) > ( size_t ) ( arena -> end - ( char * ) arena )		70132	0		>			
ANR	70203	AdditiveExpression	size + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) )		70132	0		+			
ANR	70204	Identifier	size		70132	0					
ANR	70205	CallExpression	ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) )		70132	1					
ANR	70206	Callee	ZEND_MM_ALIGNED_SIZE		70132	0					
ANR	70207	Identifier	ZEND_MM_ALIGNED_SIZE		70132	0					
ANR	70208	ArgumentList	sizeof ( zend_arena )		70132	1					
ANR	70209	Argument	sizeof ( zend_arena )		70132	0					
ANR	70210	SizeofExpression	sizeof ( zend_arena )		70132	0					
ANR	70211	Sizeof	sizeof		70132	0					
ANR	70212	SizeofOperand	zend_arena		70132	1					
ANR	70213	CastExpression	( size_t ) ( arena -> end - ( char * ) arena )		70132	1					
ANR	70214	CastTarget	size_t		70132	0					
ANR	70215	AdditiveExpression	arena -> end - ( char * ) arena		70132	1		-			
ANR	70216	PtrMemberAccess	arena -> end		70132	0					
ANR	70217	Identifier	arena		70132	0					
ANR	70218	Identifier	end		70132	1					
ANR	70219	CastExpression	( char * ) arena		70132	1					
ANR	70220	CastTarget	char *		70132	0					
ANR	70221	Identifier	arena		70132	1					
ANR	70222	AdditiveExpression	size + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) )		70132	1		+			
ANR	70223	Identifier	size		70132	0					
ANR	70224	CallExpression	ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) )		70132	1					
ANR	70225	Callee	ZEND_MM_ALIGNED_SIZE		70132	0					
ANR	70226	Identifier	ZEND_MM_ALIGNED_SIZE		70132	0					
ANR	70227	ArgumentList	sizeof ( zend_arena )		70132	1					
ANR	70228	Argument	sizeof ( zend_arena )		70132	0					
ANR	70229	SizeofExpression	sizeof ( zend_arena )		70132	0					
ANR	70230	Sizeof	sizeof		70132	0					
ANR	70231	SizeofOperand	zend_arena		70132	1					
ANR	70232	CastExpression	( size_t ) ( arena -> end - ( char * ) arena )		70132	2					
ANR	70233	CastTarget	size_t		70132	0					
ANR	70234	AdditiveExpression	arena -> end - ( char * ) arena		70132	1		-			
ANR	70235	PtrMemberAccess	arena -> end		70132	0					
ANR	70236	Identifier	arena		70132	0					
ANR	70237	Identifier	end		70132	1					
ANR	70238	CastExpression	( char * ) arena		70132	1					
ANR	70239	CastTarget	char *		70132	0					
ANR	70240	Identifier	arena		70132	1					
ANR	70241	IdentifierDeclStatement	zend_arena * new_arena = ( zend_arena * ) emalloc ( arena_size ) ;	69:2:2304:2360	70132	1	True				
ANR	70242	IdentifierDecl	* new_arena = ( zend_arena * ) emalloc ( arena_size )		70132	0					
ANR	70243	IdentifierDeclType	zend_arena *		70132	0					
ANR	70244	Identifier	new_arena		70132	1					
ANR	70245	AssignmentExpression	* new_arena = ( zend_arena * ) emalloc ( arena_size )		70132	2		=			
ANR	70246	Identifier	new_arena		70132	0					
ANR	70247	CastExpression	( zend_arena * ) emalloc ( arena_size )		70132	1					
ANR	70248	CastTarget	zend_arena *		70132	0					
ANR	70249	CallExpression	emalloc ( arena_size )		70132	1					
ANR	70250	Callee	emalloc		70132	0					
ANR	70251	Identifier	emalloc		70132	0					
ANR	70252	ArgumentList	arena_size		70132	1					
ANR	70253	Argument	arena_size		70132	0					
ANR	70254	Identifier	arena_size		70132	0					
ANR	70255	ExpressionStatement	ptr = ( char * ) new_arena + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) )	71:2:2365:2431	70132	2	True				
ANR	70256	AssignmentExpression	ptr = ( char * ) new_arena + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) )		70132	0		=			
ANR	70257	Identifier	ptr		70132	0					
ANR	70258	AdditiveExpression	( char * ) new_arena + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) )		70132	1		+			
ANR	70259	CastExpression	( char * ) new_arena		70132	0					
ANR	70260	CastTarget	char *		70132	0					
ANR	70261	Identifier	new_arena		70132	1					
ANR	70262	CallExpression	ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) )		70132	1					
ANR	70263	Callee	ZEND_MM_ALIGNED_SIZE		70132	0					
ANR	70264	Identifier	ZEND_MM_ALIGNED_SIZE		70132	0					
ANR	70265	ArgumentList	sizeof ( zend_arena )		70132	1					
ANR	70266	Argument	sizeof ( zend_arena )		70132	0					
ANR	70267	SizeofExpression	sizeof ( zend_arena )		70132	0					
ANR	70268	Sizeof	sizeof		70132	0					
ANR	70269	SizeofOperand	zend_arena		70132	1					
ANR	70270	ExpressionStatement	new_arena -> ptr = ( char * ) new_arena + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) ) + size	72:2:2435:2519	70132	3	True				
ANR	70271	AssignmentExpression	new_arena -> ptr = ( char * ) new_arena + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) ) + size		70132	0		=			
ANR	70272	PtrMemberAccess	new_arena -> ptr		70132	0					
ANR	70273	Identifier	new_arena		70132	0					
ANR	70274	Identifier	ptr		70132	1					
ANR	70275	AdditiveExpression	( char * ) new_arena + ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) ) + size		70132	1		+			
ANR	70276	CastExpression	( char * ) new_arena		70132	0					
ANR	70277	CastTarget	char *		70132	0					
ANR	70278	Identifier	new_arena		70132	1					
ANR	70279	AdditiveExpression	ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) ) + size		70132	1		+			
ANR	70280	CallExpression	ZEND_MM_ALIGNED_SIZE ( sizeof ( zend_arena ) )		70132	0					
ANR	70281	Callee	ZEND_MM_ALIGNED_SIZE		70132	0					
ANR	70282	Identifier	ZEND_MM_ALIGNED_SIZE		70132	0					
ANR	70283	ArgumentList	sizeof ( zend_arena )		70132	1					
ANR	70284	Argument	sizeof ( zend_arena )		70132	0					
ANR	70285	SizeofExpression	sizeof ( zend_arena )		70132	0					
ANR	70286	Sizeof	sizeof		70132	0					
ANR	70287	SizeofOperand	zend_arena		70132	1					
ANR	70288	Identifier	size		70132	1					
ANR	70289	ExpressionStatement	new_arena -> end = ( char * ) new_arena + arena_size	73:2:2523:2570	70132	4	True				
ANR	70290	AssignmentExpression	new_arena -> end = ( char * ) new_arena + arena_size		70132	0		=			
ANR	70291	PtrMemberAccess	new_arena -> end		70132	0					
ANR	70292	Identifier	new_arena		70132	0					
ANR	70293	Identifier	end		70132	1					
ANR	70294	AdditiveExpression	( char * ) new_arena + arena_size		70132	1		+			
ANR	70295	CastExpression	( char * ) new_arena		70132	0					
ANR	70296	CastTarget	char *		70132	0					
ANR	70297	Identifier	new_arena		70132	1					
ANR	70298	Identifier	arena_size		70132	1					
ANR	70299	ExpressionStatement	new_arena -> prev = arena	74:2:2574:2597	70132	5	True				
ANR	70300	AssignmentExpression	new_arena -> prev = arena		70132	0		=			
ANR	70301	PtrMemberAccess	new_arena -> prev		70132	0					
ANR	70302	Identifier	new_arena		70132	0					
ANR	70303	Identifier	prev		70132	1					
ANR	70304	Identifier	arena		70132	1					
ANR	70305	ExpressionStatement	* arena_ptr = new_arena	75:2:2601:2623	70132	6	True				
ANR	70306	AssignmentExpression	* arena_ptr = new_arena		70132	0		=			
ANR	70307	UnaryOperationExpression	* arena_ptr		70132	0					
ANR	70308	UnaryOperator	*		70132	0					
ANR	70309	Identifier	arena_ptr		70132	1					
ANR	70310	Identifier	new_arena		70132	1					
ANR	70311	ReturnStatement	return ( void * ) ptr ;	78:1:2630:2648	70132	4	True				
ANR	70312	CastExpression	( void * ) ptr		70132	0					
ANR	70313	CastTarget	void *		70132	0					
ANR	70314	Identifier	ptr		70132	1					
ANR	70315	ReturnType	static zend_always_inline void *		70132	1					
ANR	70316	Identifier	zend_arena_alloc		70132	2					
ANR	70317	ParameterList	"zend_arena * * arena_ptr , size_t size"		70132	3					
ANR	70318	Parameter	zend_arena * * arena_ptr	55:49:1851:1872	70132	0	True				
ANR	70319	ParameterType	zend_arena * *		70132	0					
ANR	70320	Identifier	arena_ptr		70132	1					
ANR	70321	Parameter	size_t size	55:73:1875:1885	70132	1	True				
ANR	70322	ParameterType	size_t		70132	0					
ANR	70323	Identifier	size		70132	1					
ANR	70324	CFGEntryNode	ENTRY		70132		True				
ANR	70325	CFGExitNode	EXIT		70132		True				
ANR	70326	Symbol	arena -> end		70132						
ANR	70327	Symbol	ZEND_MM_ALIGNED_SIZE		70132						
ANR	70328	Symbol	new_arena		70132						
ANR	70329	Symbol	arena		70132						
ANR	70330	Symbol	new_arena -> ptr		70132						
ANR	70331	Symbol	ptr		70132						
ANR	70332	Symbol	UNEXPECTED		70132						
ANR	70333	Symbol	arena_size		70132						
ANR	70334	Symbol	emalloc		70132						
ANR	70335	Symbol	* new_arena		70132						
ANR	70336	Symbol	arena_ptr		70132						
ANR	70337	Symbol	size		70132						
ANR	70338	Symbol	* arena_ptr		70132						
ANR	70339	Symbol	new_arena -> end		70132						
ANR	70340	Symbol	new_arena -> prev		70132						
ANR	70341	Symbol	* arena		70132						
ANR	70342	Symbol	EXPECTED		70132						
ANR	70343	Symbol	arena -> ptr		70132						
ANR	70344	Function	zend_arena_calloc	81:0:2653:3077							
ANR	70345	FunctionDef	"zend_arena_calloc (zend_arena * * arena_ptr , size_t count , size_t unit_size)"		70344	0					
ANR	70346	CompoundStatement		82:0:2759:3077	70344	0					
ANR	70347	IdentifierDeclStatement	int overflow ;	83:1:2762:2774	70344	0	True				
ANR	70348	IdentifierDecl	overflow		70344	0					
ANR	70349	IdentifierDeclType	int		70344	0					
ANR	70350	Identifier	overflow		70344	1					
ANR	70351	IdentifierDeclStatement	size_t size ;	84:1:2777:2788	70344	1	True				
ANR	70352	IdentifierDecl	size		70344	0					
ANR	70353	IdentifierDeclType	size_t		70344	0					
ANR	70354	Identifier	size		70344	1					
ANR	70355	IdentifierDeclStatement	void * ret ;	85:1:2791:2800	70344	2	True				
ANR	70356	IdentifierDecl	* ret		70344	0					
ANR	70357	IdentifierDeclType	void *		70344	0					
ANR	70358	Identifier	ret		70344	1					
ANR	70359	ExpressionStatement	"size = zend_safe_address ( unit_size , count , 0 , & overflow )"	87:1:2804:2860	70344	3	True				
ANR	70360	AssignmentExpression	"size = zend_safe_address ( unit_size , count , 0 , & overflow )"		70344	0		=			
ANR	70361	Identifier	size		70344	0					
ANR	70362	CallExpression	"zend_safe_address ( unit_size , count , 0 , & overflow )"		70344	1					
ANR	70363	Callee	zend_safe_address		70344	0					
ANR	70364	Identifier	zend_safe_address		70344	0					
ANR	70365	ArgumentList	unit_size		70344	1					
ANR	70366	Argument	unit_size		70344	0					
ANR	70367	Identifier	unit_size		70344	0					
ANR	70368	Argument	count		70344	1					
ANR	70369	Identifier	count		70344	0					
ANR	70370	Argument	0		70344	2					
ANR	70371	PrimaryExpression	0		70344	0					
ANR	70372	Argument	& overflow		70344	3					
ANR	70373	UnaryOperationExpression	& overflow		70344	0					
ANR	70374	UnaryOperator	&		70344	0					
ANR	70375	Identifier	overflow		70344	1					
ANR	70376	IfStatement	if ( UNEXPECTED ( overflow ) )		70344	4					
ANR	70377	Condition	UNEXPECTED ( overflow )	88:5:2867:2886	70344	0	True				
ANR	70378	CallExpression	UNEXPECTED ( overflow )		70344	0					
ANR	70379	Callee	UNEXPECTED		70344	0					
ANR	70380	Identifier	UNEXPECTED		70344	0					
ANR	70381	ArgumentList	overflow		70344	1					
ANR	70382	Argument	overflow		70344	0					
ANR	70383	Identifier	overflow		70344	0					
ANR	70384	CompoundStatement		7:27:129:129	70344	1					
ANR	70385	ExpressionStatement	"zend_error ( E_ERROR , ""Possible integer overflow in zend_arena_calloc() (%zu * %zu)"" , unit_size , count )"	89:2:2893:2994	70344	0	True				
ANR	70386	CallExpression	"zend_error ( E_ERROR , ""Possible integer overflow in zend_arena_calloc() (%zu * %zu)"" , unit_size , count )"		70344	0					
ANR	70387	Callee	zend_error		70344	0					
ANR	70388	Identifier	zend_error		70344	0					
ANR	70389	ArgumentList	E_ERROR		70344	1					
ANR	70390	Argument	E_ERROR		70344	0					
ANR	70391	Identifier	E_ERROR		70344	0					
ANR	70392	Argument	"""Possible integer overflow in zend_arena_calloc() (%zu * %zu)"""		70344	1					
ANR	70393	PrimaryExpression	"""Possible integer overflow in zend_arena_calloc() (%zu * %zu)"""		70344	0					
ANR	70394	Argument	unit_size		70344	2					
ANR	70395	Identifier	unit_size		70344	0					
ANR	70396	Argument	count		70344	3					
ANR	70397	Identifier	count		70344	0					
ANR	70398	ExpressionStatement	"ret = zend_arena_alloc ( arena_ptr , size )"	91:1:3000:3039	70344	5	True				
ANR	70399	AssignmentExpression	"ret = zend_arena_alloc ( arena_ptr , size )"		70344	0		=			
ANR	70400	Identifier	ret		70344	0					
ANR	70401	CallExpression	"zend_arena_alloc ( arena_ptr , size )"		70344	1					
ANR	70402	Callee	zend_arena_alloc		70344	0					
ANR	70403	Identifier	zend_arena_alloc		70344	0					
ANR	70404	ArgumentList	arena_ptr		70344	1					
ANR	70405	Argument	arena_ptr		70344	0					
ANR	70406	Identifier	arena_ptr		70344	0					
ANR	70407	Argument	size		70344	1					
ANR	70408	Identifier	size		70344	0					
ANR	70409	ExpressionStatement	"memset ( ret , 0 , size )"	92:1:3042:3062	70344	6	True				
ANR	70410	CallExpression	"memset ( ret , 0 , size )"		70344	0					
ANR	70411	Callee	memset		70344	0					
ANR	70412	Identifier	memset		70344	0					
ANR	70413	ArgumentList	ret		70344	1					
ANR	70414	Argument	ret		70344	0					
ANR	70415	Identifier	ret		70344	0					
ANR	70416	Argument	0		70344	1					
ANR	70417	PrimaryExpression	0		70344	0					
ANR	70418	Argument	size		70344	2					
ANR	70419	Identifier	size		70344	0					
ANR	70420	ReturnStatement	return ret ;	93:1:3065:3075	70344	7	True				
ANR	70421	Identifier	ret		70344	0					
ANR	70422	ReturnType	static zend_always_inline void *		70344	1					
ANR	70423	Identifier	zend_arena_calloc		70344	2					
ANR	70424	ParameterList	"zend_arena * * arena_ptr , size_t count , size_t unit_size"		70344	3					
ANR	70425	Parameter	zend_arena * * arena_ptr	81:50:2703:2724	70344	0	True				
ANR	70426	ParameterType	zend_arena * *		70344	0					
ANR	70427	Identifier	arena_ptr		70344	1					
ANR	70428	Parameter	size_t count	81:74:2727:2738	70344	1	True				
ANR	70429	ParameterType	size_t		70344	0					
ANR	70430	Identifier	count		70344	1					
ANR	70431	Parameter	size_t unit_size	81:88:2741:2756	70344	2	True				
ANR	70432	ParameterType	size_t		70344	0					
ANR	70433	Identifier	unit_size		70344	1					
ANR	70434	CFGEntryNode	ENTRY		70344		True				
ANR	70435	CFGExitNode	EXIT		70344		True				
ANR	70436	Symbol	ret		70344						
ANR	70437	Symbol	UNEXPECTED		70344						
ANR	70438	Symbol	overflow		70344						
ANR	70439	Symbol	E_ERROR		70344						
ANR	70440	Symbol	arena_ptr		70344						
ANR	70441	Symbol	size		70344						
ANR	70442	Symbol	zend_arena_alloc		70344						
ANR	70443	Symbol	unit_size		70344						
ANR	70444	Symbol	count		70344						
ANR	70445	Symbol	zend_safe_address		70344						
ANR	70446	Symbol	& overflow		70344						
ANR	70447	Function	zend_arena_checkpoint	96:0:3080:3175							
ANR	70448	FunctionDef	zend_arena_checkpoint (zend_arena * arena)		70447	0					
ANR	70449	CompoundStatement		97:0:3153:3175	70447	0					
ANR	70450	ReturnStatement	return arena -> ptr ;	98:1:3156:3173	70447	0	True				
ANR	70451	PtrMemberAccess	arena -> ptr		70447	0					
ANR	70452	Identifier	arena		70447	0					
ANR	70453	Identifier	ptr		70447	1					
ANR	70454	ReturnType	static zend_always_inline void *		70447	1					
ANR	70455	Identifier	zend_arena_checkpoint		70447	2					
ANR	70456	ParameterList	zend_arena * arena		70447	3					
ANR	70457	Parameter	zend_arena * arena	96:54:3134:3150	70447	0	True				
ANR	70458	ParameterType	zend_arena *		70447	0					
ANR	70459	Identifier	arena		70447	1					
ANR	70460	CFGEntryNode	ENTRY		70447		True				
ANR	70461	CFGExitNode	EXIT		70447		True				
ANR	70462	Symbol	arena		70447						
ANR	70463	Symbol	* arena		70447						
ANR	70464	Symbol	arena -> ptr		70447						
ANR	70465	Function	zend_arena_release	101:0:3178:3531							
ANR	70466	FunctionDef	"zend_arena_release (zend_arena * * arena_ptr , void * checkpoint)"		70465	0					
ANR	70467	CompoundStatement		102:0:3270:3531	70465	0					
ANR	70468	IdentifierDeclStatement	zend_arena * arena = * arena_ptr ;	103:1:3273:3303	70465	0	True				
ANR	70469	IdentifierDecl	* arena = * arena_ptr		70465	0					
ANR	70470	IdentifierDeclType	zend_arena *		70465	0					
ANR	70471	Identifier	arena		70465	1					
ANR	70472	AssignmentExpression	* arena = * arena_ptr		70465	2		=			
ANR	70473	Identifier	arena		70465	0					
ANR	70474	UnaryOperationExpression	* arena_ptr		70465	1					
ANR	70475	UnaryOperator	*		70465	0					
ANR	70476	Identifier	arena_ptr		70465	1					
ANR	70477	WhileStatement	while ( UNEXPECTED ( ( char * ) checkpoint > arena -> end ) || UNEXPECTED ( ( char * ) checkpoint < ( char * ) arena ) )		70465	1					
ANR	70478	Condition	UNEXPECTED ( ( char * ) checkpoint > arena -> end ) || UNEXPECTED ( ( char * ) checkpoint < ( char * ) arena )	105:8:3314:3411	70465	0	True				
ANR	70479	OrExpression	UNEXPECTED ( ( char * ) checkpoint > arena -> end ) || UNEXPECTED ( ( char * ) checkpoint < ( char * ) arena )		70465	0		||			
ANR	70480	CallExpression	UNEXPECTED ( ( char * ) checkpoint > arena -> end )		70465	0					
ANR	70481	Callee	UNEXPECTED		70465	0					
ANR	70482	Identifier	UNEXPECTED		70465	0					
ANR	70483	ArgumentList	( char * ) checkpoint > arena -> end		70465	1					
ANR	70484	Argument	( char * ) checkpoint > arena -> end		70465	0					
ANR	70485	RelationalExpression	( char * ) checkpoint > arena -> end		70465	0		>			
ANR	70486	CastExpression	( char * ) checkpoint		70465	0					
ANR	70487	CastTarget	char *		70465	0					
ANR	70488	Identifier	checkpoint		70465	1					
ANR	70489	PtrMemberAccess	arena -> end		70465	1					
ANR	70490	Identifier	arena		70465	0					
ANR	70491	Identifier	end		70465	1					
ANR	70492	CallExpression	UNEXPECTED ( ( char * ) checkpoint < ( char * ) arena )		70465	1					
ANR	70493	Callee	UNEXPECTED		70465	0					
ANR	70494	Identifier	UNEXPECTED		70465	0					
ANR	70495	ArgumentList	( char * ) checkpoint < ( char * ) arena		70465	1					
ANR	70496	Argument	( char * ) checkpoint < ( char * ) arena		70465	0					
ANR	70497	RelationalExpression	( char * ) checkpoint < ( char * ) arena		70465	0		<			
ANR	70498	CastExpression	( char * ) checkpoint		70465	0					
ANR	70499	CastTarget	char *		70465	0					
ANR	70500	Identifier	checkpoint		70465	1					
ANR	70501	CastExpression	( char * ) arena		70465	1					
ANR	70502	CastTarget	char *		70465	0					
ANR	70503	Identifier	arena		70465	1					
ANR	70504	CompoundStatement		6:2:147:177	70465	1					
ANR	70505	IdentifierDeclStatement	zend_arena * prev = arena -> prev ;	107:2:3418:3448	70465	0	True				
ANR	70506	IdentifierDecl	* prev = arena -> prev		70465	0					
ANR	70507	IdentifierDeclType	zend_arena *		70465	0					
ANR	70508	Identifier	prev		70465	1					
ANR	70509	AssignmentExpression	* prev = arena -> prev		70465	2		=			
ANR	70510	Identifier	prev		70465	0					
ANR	70511	PtrMemberAccess	arena -> prev		70465	1					
ANR	70512	Identifier	arena		70465	0					
ANR	70513	Identifier	prev		70465	1					
ANR	70514	ExpressionStatement	efree ( arena )	108:2:3452:3464	70465	1	True				
ANR	70515	CallExpression	efree ( arena )		70465	0					
ANR	70516	Callee	efree		70465	0					
ANR	70517	Identifier	efree		70465	0					
ANR	70518	ArgumentList	arena		70465	1					
ANR	70519	Argument	arena		70465	0					
ANR	70520	Identifier	arena		70465	0					
ANR	70521	ExpressionStatement	* arena_ptr = arena = prev	109:2:3468:3493	70465	2	True				
ANR	70522	AssignmentExpression	* arena_ptr = arena = prev		70465	0		=			
ANR	70523	UnaryOperationExpression	* arena_ptr		70465	0					
ANR	70524	UnaryOperator	*		70465	0					
ANR	70525	Identifier	arena_ptr		70465	1					
ANR	70526	AssignmentExpression	arena = prev		70465	1		=			
ANR	70527	Identifier	arena		70465	0					
ANR	70528	Identifier	prev		70465	1					
ANR	70529	ExpressionStatement	arena -> ptr = ( char * ) checkpoint	111:1:3499:3529	70465	2	True				
ANR	70530	AssignmentExpression	arena -> ptr = ( char * ) checkpoint		70465	0		=			
ANR	70531	PtrMemberAccess	arena -> ptr		70465	0					
ANR	70532	Identifier	arena		70465	0					
ANR	70533	Identifier	ptr		70465	1					
ANR	70534	CastExpression	( char * ) checkpoint		70465	1					
ANR	70535	CastTarget	char *		70465	0					
ANR	70536	Identifier	checkpoint		70465	1					
ANR	70537	ReturnType	static zend_always_inline void		70465	1					
ANR	70538	Identifier	zend_arena_release		70465	2					
ANR	70539	ParameterList	"zend_arena * * arena_ptr , void * checkpoint"		70465	3					
ANR	70540	Parameter	zend_arena * * arena_ptr	101:50:3228:3249	70465	0	True				
ANR	70541	ParameterType	zend_arena * *		70465	0					
ANR	70542	Identifier	arena_ptr		70465	1					
ANR	70543	Parameter	void * checkpoint	101:74:3252:3267	70465	1	True				
ANR	70544	ParameterType	void *		70465	0					
ANR	70545	Identifier	checkpoint		70465	1					
ANR	70546	CFGEntryNode	ENTRY		70465		True				
ANR	70547	CFGExitNode	EXIT		70465		True				
ANR	70548	Symbol	checkpoint		70465						
ANR	70549	Symbol	arena -> end		70465						
ANR	70550	Symbol	UNEXPECTED		70465						
ANR	70551	Symbol	arena -> prev		70465						
ANR	70552	Symbol	arena_ptr		70465						
ANR	70553	Symbol	* arena_ptr		70465						
ANR	70554	Symbol	prev		70465						
ANR	70555	Symbol	arena		70465						
ANR	70556	Symbol	* arena		70465						
ANR	70557	Symbol	arena -> ptr		70465						
