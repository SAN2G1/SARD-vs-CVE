command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2964848	File	data/converged/CVE-2015-8617_php-src/iso8859_15.c								
ANR	2964849	DeclStmt									
ANR	2964850	Decl							const UChar	const UChar [ 256 ]	EncISO_8859_15_ToLowerCaseTable
ANR	2964851	DeclStmt									
ANR	2964852	Decl							const unsigned short	const unsigned short [ 256 ]	EncISO_8859_15_CtypeTable
ANR	2964853	DeclStmt									
ANR	2964854	Decl							const UChar	const UChar *	p
ANR	2964855	Function	is_mbc_ambiguous	125:0:6574:7132							
ANR	2964856	FunctionDef	"is_mbc_ambiguous (OnigCaseFoldType flag , const UChar * * pp , const UChar * end)"		2964855	0					
ANR	2964857	CompoundStatement		128:0:6664:7132	2964855	0					
ANR	2964858	IdentifierDeclStatement	int v ;	129:2:6668:6673	2964855	0	True				
ANR	2964859	IdentifierDecl	v		2964855	0					
ANR	2964860	IdentifierDeclType	int		2964855	0					
ANR	2964861	Identifier	v		2964855	1					
ANR	2964862	IdentifierDeclStatement	const UChar * p = * pp ;	130:2:6677:6697	2964855	1	True				
ANR	2964863	IdentifierDecl	* p = * pp		2964855	0					
ANR	2964864	IdentifierDeclType	const UChar *		2964855	0					
ANR	2964865	Identifier	p		2964855	1					
ANR	2964866	AssignmentExpression	* p = * pp		2964855	2		=			
ANR	2964867	Identifier	p		2964855	0					
ANR	2964868	UnaryOperationExpression	* pp		2964855	1					
ANR	2964869	UnaryOperator	*		2964855	0					
ANR	2964870	Identifier	pp		2964855	1					
ANR	2964871	IfStatement	if ( * p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0 )		2964855	2					
ANR	2964872	Condition	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0	132:6:6706:6770	2964855	0	True				
ANR	2964873	AndExpression	* p == 0xdf && ( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		2964855	0		&&			
ANR	2964874	EqualityExpression	* p == 0xdf		2964855	0		==			
ANR	2964875	UnaryOperationExpression	* p		2964855	0					
ANR	2964876	UnaryOperator	*		2964855	0					
ANR	2964877	Identifier	p		2964855	1					
ANR	2964878	PrimaryExpression	0xdf		2964855	1					
ANR	2964879	EqualityExpression	( flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR ) != 0		2964855	1		!=			
ANR	2964880	BitAndExpression	flag & INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		2964855	0		&			
ANR	2964881	Identifier	flag		2964855	0					
ANR	2964882	Identifier	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		2964855	1					
ANR	2964883	PrimaryExpression	0		2964855	1					
ANR	2964884	CompoundStatement		5:73:108:108	2964855	1					
ANR	2964885	ExpressionStatement	( * pp ) ++	133:4:6779:6786	2964855	0	True				
ANR	2964886	PostIncDecOperationExpression	( * pp ) ++		2964855	0					
ANR	2964887	UnaryOperationExpression	* pp		2964855	0					
ANR	2964888	UnaryOperator	*		2964855	0					
ANR	2964889	Identifier	pp		2964855	1					
ANR	2964890	IncDec	++		2964855	1					
ANR	2964891	ReturnStatement	return TRUE ;	134:4:6792:6803	2964855	1	True				
ANR	2964892	Identifier	TRUE		2964855	0					
ANR	2964893	ExpressionStatement	( * pp ) ++	137:2:6812:6819	2964855	3	True				
ANR	2964894	PostIncDecOperationExpression	( * pp ) ++		2964855	0					
ANR	2964895	UnaryOperationExpression	* pp		2964855	0					
ANR	2964896	UnaryOperator	*		2964855	0					
ANR	2964897	Identifier	pp		2964855	1					
ANR	2964898	IncDec	++		2964855	1					
ANR	2964899	ExpressionStatement	v = ( EncISO_8859_15_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )	138:2:6823:6896	2964855	4	True				
ANR	2964900	AssignmentExpression	v = ( EncISO_8859_15_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER ) )		2964855	0		=			
ANR	2964901	Identifier	v		2964855	0					
ANR	2964902	BitAndExpression	EncISO_8859_15_CtypeTable [ * p ] & ( BIT_CTYPE_UPPER | BIT_CTYPE_LOWER )		2964855	1		&			
ANR	2964903	ArrayIndexing	EncISO_8859_15_CtypeTable [ * p ]		2964855	0					
ANR	2964904	Identifier	EncISO_8859_15_CtypeTable		2964855	0					
ANR	2964905	UnaryOperationExpression	* p		2964855	1					
ANR	2964906	UnaryOperator	*		2964855	0					
ANR	2964907	Identifier	p		2964855	1					
ANR	2964908	InclusiveOrExpression	BIT_CTYPE_UPPER | BIT_CTYPE_LOWER		2964855	1		|			
ANR	2964909	Identifier	BIT_CTYPE_UPPER		2964855	0					
ANR	2964910	Identifier	BIT_CTYPE_LOWER		2964855	1					
ANR	2964911	IfStatement	if ( ( v | BIT_CTYPE_LOWER ) != 0 )		2964855	5					
ANR	2964912	Condition	( v | BIT_CTYPE_LOWER ) != 0	139:6:6904:6929	2964855	0	True				
ANR	2964913	EqualityExpression	( v | BIT_CTYPE_LOWER ) != 0		2964855	0		!=			
ANR	2964914	InclusiveOrExpression	v | BIT_CTYPE_LOWER		2964855	0		|			
ANR	2964915	Identifier	v		2964855	0					
ANR	2964916	Identifier	BIT_CTYPE_LOWER		2964855	1					
ANR	2964917	PrimaryExpression	0		2964855	1					
ANR	2964918	CompoundStatement		12:34:267:267	2964855	1					
ANR	2964919	IfStatement	if ( * p == 0xaa || * p == 0xb5 || * p == 0xba )		2964855	0					
ANR	2964920	Condition	* p == 0xaa || * p == 0xb5 || * p == 0xba	141:8:7005:7042	2964855	0	True				
ANR	2964921	OrExpression	* p == 0xaa || * p == 0xb5 || * p == 0xba		2964855	0		||			
ANR	2964922	EqualityExpression	* p == 0xaa		2964855	0		==			
ANR	2964923	UnaryOperationExpression	* p		2964855	0					
ANR	2964924	UnaryOperator	*		2964855	0					
ANR	2964925	Identifier	p		2964855	1					
ANR	2964926	PrimaryExpression	0xaa		2964855	1					
ANR	2964927	OrExpression	* p == 0xb5 || * p == 0xba		2964855	1		||			
ANR	2964928	EqualityExpression	* p == 0xb5		2964855	0		==			
ANR	2964929	UnaryOperationExpression	* p		2964855	0					
ANR	2964930	UnaryOperator	*		2964855	0					
ANR	2964931	Identifier	p		2964855	1					
ANR	2964932	PrimaryExpression	0xb5		2964855	1					
ANR	2964933	EqualityExpression	* p == 0xba		2964855	1		==			
ANR	2964934	UnaryOperationExpression	* p		2964855	0					
ANR	2964935	UnaryOperator	*		2964855	0					
ANR	2964936	Identifier	p		2964855	1					
ANR	2964937	PrimaryExpression	0xba		2964855	1					
ANR	2964938	ReturnStatement	return FALSE ;	142:6:7051:7063	2964855	1	True				
ANR	2964939	Identifier	FALSE		2964855	0					
ANR	2964940	ElseStatement	else		2964855	0					
ANR	2964941	ReturnStatement	return TRUE ;	144:6:7080:7091	2964855	0	True				
ANR	2964942	Identifier	TRUE		2964855	0					
ANR	2964943	ReturnStatement	return ( v != 0 ? TRUE : FALSE ) ;	147:2:7100:7130	2964855	6	True				
ANR	2964944	ConditionalExpression	v != 0 ? TRUE : FALSE		2964855	0					
ANR	2964945	Condition	v != 0		2964855	0					
ANR	2964946	EqualityExpression	v != 0		2964855	0		!=			
ANR	2964947	Identifier	v		2964855	0					
ANR	2964948	PrimaryExpression	0		2964855	1					
ANR	2964949	Identifier	TRUE		2964855	1					
ANR	2964950	Identifier	FALSE		2964855	2					
ANR	2964951	ReturnType	static int		2964855	1					
ANR	2964952	Identifier	is_mbc_ambiguous		2964855	2					
ANR	2964953	ParameterList	"OnigCaseFoldType flag , const UChar * * pp , const UChar * end"		2964855	3					
ANR	2964954	Parameter	OnigCaseFoldType flag	126:17:6602:6622	2964855	0	True				
ANR	2964955	ParameterType	OnigCaseFoldType		2964855	0					
ANR	2964956	Identifier	flag		2964855	1					
ANR	2964957	Parameter	const UChar * * pp	127:3:6628:6643	2964855	1	True				
ANR	2964958	ParameterType	const UChar * *		2964855	0					
ANR	2964959	Identifier	pp		2964855	1					
ANR	2964960	Parameter	const UChar * end	127:21:6646:6661	2964855	2	True				
ANR	2964961	ParameterType	const UChar *		2964855	0					
ANR	2964962	Identifier	end		2964855	1					
ANR	2964963	CFGEntryNode	ENTRY		2964855		True				
ANR	2964964	CFGExitNode	EXIT		2964855		True				
ANR	2964965	Symbol	pp		2964855						
ANR	2964966	Symbol	flag		2964855						
ANR	2964967	Symbol	* EncISO_8859_15_CtypeTable		2964855						
ANR	2964968	Symbol	* pp		2964855						
ANR	2964969	Symbol	TRUE		2964855						
ANR	2964970	Symbol	p		2964855						
ANR	2964971	Symbol	EncISO_8859_15_CtypeTable		2964855						
ANR	2964972	Symbol	v		2964855						
ANR	2964973	Symbol	BIT_CTYPE_LOWER		2964855						
ANR	2964974	Symbol	end		2964855						
ANR	2964975	Symbol	* p		2964855						
ANR	2964976	Symbol	INTERNAL_ONIGENC_CASE_FOLD_MULTI_CHAR		2964855						
ANR	2964977	Symbol	BIT_CTYPE_UPPER		2964855						
ANR	2964978	Symbol	FALSE		2964855						
ANR	2964979	Symbol	* * p		2964855						
ANR	2964980	Function	is_code_ctype	151:0:7142:7302							
ANR	2964981	FunctionDef	"is_code_ctype (OnigCodePoint code , unsigned int ctype)"		2964980	0					
ANR	2964982	CompoundStatement		153:0:7207:7302	2964980	0					
ANR	2964983	IfStatement	if ( code < 256 )		2964980	0					
ANR	2964984	Condition	code < 256	154:6:7215:7224	2964980	0	True				
ANR	2964985	RelationalExpression	code < 256		2964980	0		<			
ANR	2964986	Identifier	code		2964980	0					
ANR	2964987	PrimaryExpression	256		2964980	1					
ANR	2964988	ReturnStatement	"return ENC_IS_ISO_8859_15_CTYPE ( code , ctype ) ;"	155:4:7231:7275	2964980	1	True				
ANR	2964989	CallExpression	"ENC_IS_ISO_8859_15_CTYPE ( code , ctype )"		2964980	0					
ANR	2964990	Callee	ENC_IS_ISO_8859_15_CTYPE		2964980	0					
ANR	2964991	Identifier	ENC_IS_ISO_8859_15_CTYPE		2964980	0					
ANR	2964992	ArgumentList	code		2964980	1					
ANR	2964993	Argument	code		2964980	0					
ANR	2964994	Identifier	code		2964980	0					
ANR	2964995	Argument	ctype		2964980	1					
ANR	2964996	Identifier	ctype		2964980	0					
ANR	2964997	ElseStatement	else		2964980	0					
ANR	2964998	ReturnStatement	return FALSE ;	157:4:7288:7300	2964980	0	True				
ANR	2964999	Identifier	FALSE		2964980	0					
ANR	2965000	ReturnType	static int		2964980	1					
ANR	2965001	Identifier	is_code_ctype		2964980	2					
ANR	2965002	ParameterList	"OnigCodePoint code , unsigned int ctype"		2964980	3					
ANR	2965003	Parameter	OnigCodePoint code	152:14:7167:7184	2964980	0	True				
ANR	2965004	ParameterType	OnigCodePoint		2964980	0					
ANR	2965005	Identifier	code		2964980	1					
ANR	2965006	Parameter	unsigned int ctype	152:34:7187:7204	2964980	1	True				
ANR	2965007	ParameterType	unsigned int		2964980	0					
ANR	2965008	Identifier	ctype		2964980	1					
ANR	2965009	CFGEntryNode	ENTRY		2964980		True				
ANR	2965010	CFGExitNode	EXIT		2964980		True				
ANR	2965011	Symbol	code		2964980						
ANR	2965012	Symbol	ctype		2964980						
ANR	2965013	Symbol	ENC_IS_ISO_8859_15_CTYPE		2964980						
ANR	2965014	Symbol	FALSE		2964980						
ANR	2965015	DeclStmt									
ANR	2965016	Decl							const OnigPairCaseFoldCodes	const OnigPairCaseFoldCodes [ ]	CaseFoldMap
ANR	2965017	Function	apply_all_case_fold	200:0:7942:8198							
ANR	2965018	FunctionDef	"apply_all_case_fold (OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg)"		2965017	0					
ANR	2965019	CompoundStatement		203:0:8041:8198	2965017	0					
ANR	2965020	ReturnStatement	"return onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg ) ;"	204:2:8045:8196	2965017	0	True				
ANR	2965021	CallExpression	"onigenc_apply_all_case_fold_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , f , arg )"		2965017	0					
ANR	2965022	Callee	onigenc_apply_all_case_fold_with_map		2965017	0					
ANR	2965023	Identifier	onigenc_apply_all_case_fold_with_map		2965017	0					
ANR	2965024	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2965017	1					
ANR	2965025	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2965017	0					
ANR	2965026	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2965017	0		/			
ANR	2965027	SizeofExpression	sizeof ( CaseFoldMap )		2965017	0					
ANR	2965028	Sizeof	sizeof		2965017	0					
ANR	2965029	SizeofOperand	CaseFoldMap		2965017	1					
ANR	2965030	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		2965017	1					
ANR	2965031	Sizeof	sizeof		2965017	0					
ANR	2965032	SizeofOperand	OnigPairCaseFoldCodes		2965017	1					
ANR	2965033	Argument	CaseFoldMap		2965017	1					
ANR	2965034	Identifier	CaseFoldMap		2965017	0					
ANR	2965035	Argument	1		2965017	2					
ANR	2965036	PrimaryExpression	1		2965017	0					
ANR	2965037	Argument	flag		2965017	3					
ANR	2965038	Identifier	flag		2965017	0					
ANR	2965039	Argument	f		2965017	4					
ANR	2965040	Identifier	f		2965017	0					
ANR	2965041	Argument	arg		2965017	5					
ANR	2965042	Identifier	arg		2965017	0					
ANR	2965043	ReturnType	static int		2965017	1					
ANR	2965044	Identifier	apply_all_case_fold		2965017	2					
ANR	2965045	ParameterList	"OnigCaseFoldType flag , OnigApplyAllCaseFoldFunc f , void * arg"		2965017	3					
ANR	2965046	Parameter	OnigCaseFoldType flag	201:20:7973:7993	2965017	0	True				
ANR	2965047	ParameterType	OnigCaseFoldType		2965017	0					
ANR	2965048	Identifier	flag		2965017	1					
ANR	2965049	Parameter	OnigApplyAllCaseFoldFunc f	202:6:8002:8027	2965017	1	True				
ANR	2965050	ParameterType	OnigApplyAllCaseFoldFunc		2965017	0					
ANR	2965051	Identifier	f		2965017	1					
ANR	2965052	Parameter	void * arg	202:34:8030:8038	2965017	2	True				
ANR	2965053	ParameterType	void *		2965017	0					
ANR	2965054	Identifier	arg		2965017	1					
ANR	2965055	CFGEntryNode	ENTRY		2965017		True				
ANR	2965056	CFGExitNode	EXIT		2965017		True				
ANR	2965057	Symbol	flag		2965017						
ANR	2965058	Symbol	f		2965017						
ANR	2965059	Symbol	arg		2965017						
ANR	2965060	Symbol	CaseFoldMap		2965017						
ANR	2965061	Symbol	onigenc_apply_all_case_fold_with_map		2965017						
ANR	2965062	Function	get_case_fold_codes_by_str	209:0:8201:8495							
ANR	2965063	FunctionDef	"get_case_fold_codes_by_str (OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ])"		2965062	0					
ANR	2965064	CompoundStatement		212:0:8338:8495	2965062	0					
ANR	2965065	ReturnStatement	"return onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items ) ;"	213:2:8342:8493	2965062	0	True				
ANR	2965066	CallExpression	"onigenc_get_case_fold_codes_by_str_with_map ( sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes ) , CaseFoldMap , 1 , flag , p , end , items )"		2965062	0					
ANR	2965067	Callee	onigenc_get_case_fold_codes_by_str_with_map		2965062	0					
ANR	2965068	Identifier	onigenc_get_case_fold_codes_by_str_with_map		2965062	0					
ANR	2965069	ArgumentList	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2965062	1					
ANR	2965070	Argument	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2965062	0					
ANR	2965071	MultiplicativeExpression	sizeof ( CaseFoldMap ) / sizeof ( OnigPairCaseFoldCodes )		2965062	0		/			
ANR	2965072	SizeofExpression	sizeof ( CaseFoldMap )		2965062	0					
ANR	2965073	Sizeof	sizeof		2965062	0					
ANR	2965074	SizeofOperand	CaseFoldMap		2965062	1					
ANR	2965075	SizeofExpression	sizeof ( OnigPairCaseFoldCodes )		2965062	1					
ANR	2965076	Sizeof	sizeof		2965062	0					
ANR	2965077	SizeofOperand	OnigPairCaseFoldCodes		2965062	1					
ANR	2965078	Argument	CaseFoldMap		2965062	1					
ANR	2965079	Identifier	CaseFoldMap		2965062	0					
ANR	2965080	Argument	1		2965062	2					
ANR	2965081	PrimaryExpression	1		2965062	0					
ANR	2965082	Argument	flag		2965062	3					
ANR	2965083	Identifier	flag		2965062	0					
ANR	2965084	Argument	p		2965062	4					
ANR	2965085	Identifier	p		2965062	0					
ANR	2965086	Argument	end		2965062	5					
ANR	2965087	Identifier	end		2965062	0					
ANR	2965088	Argument	items		2965062	6					
ANR	2965089	Identifier	items		2965062	0					
ANR	2965090	ReturnType	static int		2965062	1					
ANR	2965091	Identifier	get_case_fold_codes_by_str		2965062	2					
ANR	2965092	ParameterList	"OnigCaseFoldType flag , const OnigUChar * p , const OnigUChar * end , OnigCaseFoldCodeItem items [ ]"		2965062	3					
ANR	2965093	Parameter	OnigCaseFoldType flag	210:27:8239:8259	2965062	0	True				
ANR	2965094	ParameterType	OnigCaseFoldType		2965062	0					
ANR	2965095	Identifier	flag		2965062	1					
ANR	2965096	Parameter	const OnigUChar * p	211:4:8266:8283	2965062	1	True				
ANR	2965097	ParameterType	const OnigUChar *		2965062	0					
ANR	2965098	Identifier	p		2965062	1					
ANR	2965099	Parameter	const OnigUChar * end	211:24:8286:8305	2965062	2	True				
ANR	2965100	ParameterType	const OnigUChar *		2965062	0					
ANR	2965101	Identifier	end		2965062	1					
ANR	2965102	Parameter	OnigCaseFoldCodeItem items [ ]	211:46:8308:8335	2965062	3	True				
ANR	2965103	ParameterType	OnigCaseFoldCodeItem [ ]		2965062	0					
ANR	2965104	Identifier	items		2965062	1					
ANR	2965105	CFGEntryNode	ENTRY		2965062		True				
ANR	2965106	CFGExitNode	EXIT		2965062		True				
ANR	2965107	Symbol	p		2965062						
ANR	2965108	Symbol	flag		2965062						
ANR	2965109	Symbol	end		2965062						
ANR	2965110	Symbol	CaseFoldMap		2965062						
ANR	2965111	Symbol	onigenc_get_case_fold_codes_by_str_with_map		2965062						
ANR	2965112	Symbol	items		2965062						
ANR	2965113	DeclStmt									
ANR	2965114	Decl							OnigEncodingType	OnigEncodingType	OnigEncodingISO_8859_15
