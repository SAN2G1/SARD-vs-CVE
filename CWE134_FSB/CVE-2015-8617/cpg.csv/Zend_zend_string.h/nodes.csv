command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	348167	File	data/converged/CVE-2015-8617_php-src/Zend_zend_string.h								
ANR	348168	DeclStmt									
ANR	348169	Decl							ZEND_API extern zend_string * ( * ) ( zend_string * str )	ZEND_API extern zend_string * ( * ) ( zend_string * str )	zend_new_interned_string
ANR	348170	DeclStmt									
ANR	348171	Decl							ZEND_API extern void ( * ) ( void )	ZEND_API extern void ( * ) ( void )	zend_interned_strings_snapshot
ANR	348172	DeclStmt									
ANR	348173	Decl							ZEND_API extern void ( * ) ( void )	ZEND_API extern void ( * ) ( void )	zend_interned_strings_restore
ANR	348174	DeclStmt									
ANR	348175	Decl							ZEND_API zend_ulong	"ZEND_API zend_ulong ( const char * str , size_t len )"	zend_hash_func
ANR	348176	DeclStmt									
ANR	348177	Decl							void	void ( void )	zend_interned_strings_init
ANR	348178	DeclStmt									
ANR	348179	Decl							void	void ( void )	zend_interned_strings_dtor
ANR	348180	Function	zend_string_hash_val	82:0:2968:3141							
ANR	348181	FunctionDef	zend_string_hash_val (zend_string * s)		348180	0					
ANR	348182	CompoundStatement		83:0:3042:3141	348180	0					
ANR	348183	IfStatement	if ( ! ZSTR_H ( s ) )		348180	0					
ANR	348184	Condition	! ZSTR_H ( s )	84:5:3049:3058	348180	0	True				
ANR	348185	UnaryOperationExpression	! ZSTR_H ( s )		348180	0					
ANR	348186	UnaryOperator	!		348180	0					
ANR	348187	CallExpression	ZSTR_H ( s )		348180	1					
ANR	348188	Callee	ZSTR_H		348180	0					
ANR	348189	Identifier	ZSTR_H		348180	0					
ANR	348190	ArgumentList	s		348180	1					
ANR	348191	Argument	s		348180	0					
ANR	348192	Identifier	s		348180	0					
ANR	348193	CompoundStatement		2:17:18:18	348180	1					
ANR	348194	ExpressionStatement	"ZSTR_H ( s ) = zend_hash_func ( ZSTR_VAL ( s ) , ZSTR_LEN ( s ) )"	85:2:3065:3117	348180	0	True				
ANR	348195	AssignmentExpression	"ZSTR_H ( s ) = zend_hash_func ( ZSTR_VAL ( s ) , ZSTR_LEN ( s ) )"		348180	0		=			
ANR	348196	CallExpression	ZSTR_H ( s )		348180	0					
ANR	348197	Callee	ZSTR_H		348180	0					
ANR	348198	Identifier	ZSTR_H		348180	0					
ANR	348199	ArgumentList	s		348180	1					
ANR	348200	Argument	s		348180	0					
ANR	348201	Identifier	s		348180	0					
ANR	348202	CallExpression	"zend_hash_func ( ZSTR_VAL ( s ) , ZSTR_LEN ( s ) )"		348180	1					
ANR	348203	Callee	zend_hash_func		348180	0					
ANR	348204	Identifier	zend_hash_func		348180	0					
ANR	348205	ArgumentList	ZSTR_VAL ( s )		348180	1					
ANR	348206	Argument	ZSTR_VAL ( s )		348180	0					
ANR	348207	CallExpression	ZSTR_VAL ( s )		348180	0					
ANR	348208	Callee	ZSTR_VAL		348180	0					
ANR	348209	Identifier	ZSTR_VAL		348180	0					
ANR	348210	ArgumentList	s		348180	1					
ANR	348211	Argument	s		348180	0					
ANR	348212	Identifier	s		348180	0					
ANR	348213	Argument	ZSTR_LEN ( s )		348180	1					
ANR	348214	CallExpression	ZSTR_LEN ( s )		348180	0					
ANR	348215	Callee	ZSTR_LEN		348180	0					
ANR	348216	Identifier	ZSTR_LEN		348180	0					
ANR	348217	ArgumentList	s		348180	1					
ANR	348218	Argument	s		348180	0					
ANR	348219	Identifier	s		348180	0					
ANR	348220	ReturnStatement	return ZSTR_H ( s ) ;	87:1:3123:3139	348180	1	True				
ANR	348221	CallExpression	ZSTR_H ( s )		348180	0					
ANR	348222	Callee	ZSTR_H		348180	0					
ANR	348223	Identifier	ZSTR_H		348180	0					
ANR	348224	ArgumentList	s		348180	1					
ANR	348225	Argument	s		348180	0					
ANR	348226	Identifier	s		348180	0					
ANR	348227	ReturnType	static zend_always_inline zend_ulong		348180	1					
ANR	348228	Identifier	zend_string_hash_val		348180	2					
ANR	348229	ParameterList	zend_string * s		348180	3					
ANR	348230	Parameter	zend_string * s	82:58:3026:3039	348180	0	True				
ANR	348231	ParameterType	zend_string *		348180	0					
ANR	348232	Identifier	s		348180	1					
ANR	348233	CFGEntryNode	ENTRY		348180		True				
ANR	348234	CFGExitNode	EXIT		348180		True				
ANR	348235	Symbol	s		348180						
ANR	348236	Symbol	ZSTR_LEN		348180						
ANR	348237	Symbol	zend_hash_func		348180						
ANR	348238	Symbol	ZSTR_H		348180						
ANR	348239	Symbol	ZSTR_VAL		348180						
ANR	348240	Function	zend_string_forget_hash_val	90:0:3144:3237							
ANR	348241	FunctionDef	zend_string_forget_hash_val (zend_string * s)		348240	0					
ANR	348242	CompoundStatement		91:0:3219:3237	348240	0					
ANR	348243	ExpressionStatement	ZSTR_H ( s ) = 0	92:1:3222:3235	348240	0	True				
ANR	348244	AssignmentExpression	ZSTR_H ( s ) = 0		348240	0		=			
ANR	348245	CallExpression	ZSTR_H ( s )		348240	0					
ANR	348246	Callee	ZSTR_H		348240	0					
ANR	348247	Identifier	ZSTR_H		348240	0					
ANR	348248	ArgumentList	s		348240	1					
ANR	348249	Argument	s		348240	0					
ANR	348250	Identifier	s		348240	0					
ANR	348251	PrimaryExpression	0		348240	1					
ANR	348252	ReturnType	static zend_always_inline void		348240	1					
ANR	348253	Identifier	zend_string_forget_hash_val		348240	2					
ANR	348254	ParameterList	zend_string * s		348240	3					
ANR	348255	Parameter	zend_string * s	90:59:3203:3216	348240	0	True				
ANR	348256	ParameterType	zend_string *		348240	0					
ANR	348257	Identifier	s		348240	1					
ANR	348258	CFGEntryNode	ENTRY		348240		True				
ANR	348259	CFGExitNode	EXIT		348240		True				
ANR	348260	Symbol	s		348240						
ANR	348261	Symbol	ZSTR_H		348240						
ANR	348262	Function	zend_string_refcount	95:0:3240:3388							
ANR	348263	FunctionDef	zend_string_refcount (const zend_string * s)		348262	0					
ANR	348264	CompoundStatement		96:0:3318:3388	348262	0					
ANR	348265	IfStatement	if ( ! ZSTR_IS_INTERNED ( s ) )		348262	0					
ANR	348266	Condition	! ZSTR_IS_INTERNED ( s )	97:5:3325:3344	348262	0	True				
ANR	348267	UnaryOperationExpression	! ZSTR_IS_INTERNED ( s )		348262	0					
ANR	348268	UnaryOperator	!		348262	0					
ANR	348269	CallExpression	ZSTR_IS_INTERNED ( s )		348262	1					
ANR	348270	Callee	ZSTR_IS_INTERNED		348262	0					
ANR	348271	Identifier	ZSTR_IS_INTERNED		348262	0					
ANR	348272	ArgumentList	s		348262	1					
ANR	348273	Argument	s		348262	0					
ANR	348274	Identifier	s		348262	0					
ANR	348275	CompoundStatement		2:27:28:28	348262	1					
ANR	348276	ReturnStatement	return GC_REFCOUNT ( s ) ;	98:2:3351:3372	348262	0	True				
ANR	348277	CallExpression	GC_REFCOUNT ( s )		348262	0					
ANR	348278	Callee	GC_REFCOUNT		348262	0					
ANR	348279	Identifier	GC_REFCOUNT		348262	0					
ANR	348280	ArgumentList	s		348262	1					
ANR	348281	Argument	s		348262	0					
ANR	348282	Identifier	s		348262	0					
ANR	348283	ReturnStatement	return 1 ;	100:1:3378:3386	348262	1	True				
ANR	348284	PrimaryExpression	1		348262	0					
ANR	348285	ReturnType	static zend_always_inline uint32_t		348262	1					
ANR	348286	Identifier	zend_string_refcount		348262	2					
ANR	348287	ParameterList	const zend_string * s		348262	3					
ANR	348288	Parameter	const zend_string * s	95:56:3296:3315	348262	0	True				
ANR	348289	ParameterType	const zend_string *		348262	0					
ANR	348290	Identifier	s		348262	1					
ANR	348291	CFGEntryNode	ENTRY		348262		True				
ANR	348292	CFGExitNode	EXIT		348262		True				
ANR	348293	Symbol	s		348262						
ANR	348294	Symbol	ZSTR_IS_INTERNED		348262						
ANR	348295	Symbol	GC_REFCOUNT		348262						
ANR	348296	Function	zend_string_addref	103:0:3391:3533							
ANR	348297	FunctionDef	zend_string_addref (zend_string * s)		348296	0					
ANR	348298	CompoundStatement		104:0:3461:3533	348296	0					
ANR	348299	IfStatement	if ( ! ZSTR_IS_INTERNED ( s ) )		348296	0					
ANR	348300	Condition	! ZSTR_IS_INTERNED ( s )	105:5:3468:3487	348296	0	True				
ANR	348301	UnaryOperationExpression	! ZSTR_IS_INTERNED ( s )		348296	0					
ANR	348302	UnaryOperator	!		348296	0					
ANR	348303	CallExpression	ZSTR_IS_INTERNED ( s )		348296	1					
ANR	348304	Callee	ZSTR_IS_INTERNED		348296	0					
ANR	348305	Identifier	ZSTR_IS_INTERNED		348296	0					
ANR	348306	ArgumentList	s		348296	1					
ANR	348307	Argument	s		348296	0					
ANR	348308	Identifier	s		348296	0					
ANR	348309	CompoundStatement		2:27:28:28	348296	1					
ANR	348310	ReturnStatement	return ++ GC_REFCOUNT ( s ) ;	106:2:3494:3517	348296	0	True				
ANR	348311	UnaryExpression	++ GC_REFCOUNT ( s )		348296	0					
ANR	348312	IncDec	++		348296	0					
ANR	348313	CallExpression	GC_REFCOUNT ( s )		348296	1					
ANR	348314	Callee	GC_REFCOUNT		348296	0					
ANR	348315	Identifier	GC_REFCOUNT		348296	0					
ANR	348316	ArgumentList	s		348296	1					
ANR	348317	Argument	s		348296	0					
ANR	348318	Identifier	s		348296	0					
ANR	348319	ReturnStatement	return 1 ;	108:1:3523:3531	348296	1	True				
ANR	348320	PrimaryExpression	1		348296	0					
ANR	348321	ReturnType	static zend_always_inline uint32_t		348296	1					
ANR	348322	Identifier	zend_string_addref		348296	2					
ANR	348323	ParameterList	zend_string * s		348296	3					
ANR	348324	Parameter	zend_string * s	103:54:3445:3458	348296	0	True				
ANR	348325	ParameterType	zend_string *		348296	0					
ANR	348326	Identifier	s		348296	1					
ANR	348327	CFGEntryNode	ENTRY		348296		True				
ANR	348328	CFGExitNode	EXIT		348296		True				
ANR	348329	Symbol	s		348296						
ANR	348330	Symbol	ZSTR_IS_INTERNED		348296						
ANR	348331	Symbol	GC_REFCOUNT		348296						
ANR	348332	Function	zend_string_delref	111:0:3536:3678							
ANR	348333	FunctionDef	zend_string_delref (zend_string * s)		348332	0					
ANR	348334	CompoundStatement		112:0:3606:3678	348332	0					
ANR	348335	IfStatement	if ( ! ZSTR_IS_INTERNED ( s ) )		348332	0					
ANR	348336	Condition	! ZSTR_IS_INTERNED ( s )	113:5:3613:3632	348332	0	True				
ANR	348337	UnaryOperationExpression	! ZSTR_IS_INTERNED ( s )		348332	0					
ANR	348338	UnaryOperator	!		348332	0					
ANR	348339	CallExpression	ZSTR_IS_INTERNED ( s )		348332	1					
ANR	348340	Callee	ZSTR_IS_INTERNED		348332	0					
ANR	348341	Identifier	ZSTR_IS_INTERNED		348332	0					
ANR	348342	ArgumentList	s		348332	1					
ANR	348343	Argument	s		348332	0					
ANR	348344	Identifier	s		348332	0					
ANR	348345	CompoundStatement		2:27:28:28	348332	1					
ANR	348346	ReturnStatement	return -- GC_REFCOUNT ( s ) ;	114:2:3639:3662	348332	0	True				
ANR	348347	UnaryExpression	-- GC_REFCOUNT ( s )		348332	0					
ANR	348348	IncDec	--		348332	0					
ANR	348349	CallExpression	GC_REFCOUNT ( s )		348332	1					
ANR	348350	Callee	GC_REFCOUNT		348332	0					
ANR	348351	Identifier	GC_REFCOUNT		348332	0					
ANR	348352	ArgumentList	s		348332	1					
ANR	348353	Argument	s		348332	0					
ANR	348354	Identifier	s		348332	0					
ANR	348355	ReturnStatement	return 1 ;	116:1:3668:3676	348332	1	True				
ANR	348356	PrimaryExpression	1		348332	0					
ANR	348357	ReturnType	static zend_always_inline uint32_t		348332	1					
ANR	348358	Identifier	zend_string_delref		348332	2					
ANR	348359	ParameterList	zend_string * s		348332	3					
ANR	348360	Parameter	zend_string * s	111:54:3590:3603	348332	0	True				
ANR	348361	ParameterType	zend_string *		348332	0					
ANR	348362	Identifier	s		348332	1					
ANR	348363	CFGEntryNode	ENTRY		348332		True				
ANR	348364	CFGExitNode	EXIT		348332		True				
ANR	348365	Symbol	s		348332						
ANR	348366	Symbol	ZSTR_IS_INTERNED		348332						
ANR	348367	Symbol	GC_REFCOUNT		348332						
ANR	348368	Function	zend_string_alloc	119:0:3681:4198							
ANR	348369	FunctionDef	"zend_string_alloc (size_t len , int persistent)"		348368	0					
ANR	348370	CompoundStatement		120:0:3766:4198	348368	0					
ANR	348371	IdentifierDeclStatement	"zend_string * ret = ( zend_string * ) pemalloc ( ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) ) , persistent ) ;"	121:1:3769:3869	348368	0	True				
ANR	348372	IdentifierDecl	"* ret = ( zend_string * ) pemalloc ( ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) ) , persistent )"		348368	0					
ANR	348373	IdentifierDeclType	zend_string *		348368	0					
ANR	348374	Identifier	ret		348368	1					
ANR	348375	AssignmentExpression	"* ret = ( zend_string * ) pemalloc ( ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) ) , persistent )"		348368	2		=			
ANR	348376	Identifier	ret		348368	0					
ANR	348377	CastExpression	"( zend_string * ) pemalloc ( ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) ) , persistent )"		348368	1					
ANR	348378	CastTarget	zend_string *		348368	0					
ANR	348379	CallExpression	"pemalloc ( ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) ) , persistent )"		348368	1					
ANR	348380	Callee	pemalloc		348368	0					
ANR	348381	Identifier	pemalloc		348368	0					
ANR	348382	ArgumentList	ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) )		348368	1					
ANR	348383	Argument	ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) )		348368	0					
ANR	348384	CallExpression	ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) )		348368	0					
ANR	348385	Callee	ZEND_MM_ALIGNED_SIZE		348368	0					
ANR	348386	Identifier	ZEND_MM_ALIGNED_SIZE		348368	0					
ANR	348387	ArgumentList	_ZSTR_STRUCT_SIZE ( len )		348368	1					
ANR	348388	Argument	_ZSTR_STRUCT_SIZE ( len )		348368	0					
ANR	348389	CallExpression	_ZSTR_STRUCT_SIZE ( len )		348368	0					
ANR	348390	Callee	_ZSTR_STRUCT_SIZE		348368	0					
ANR	348391	Identifier	_ZSTR_STRUCT_SIZE		348368	0					
ANR	348392	ArgumentList	len		348368	1					
ANR	348393	Argument	len		348368	0					
ANR	348394	Identifier	len		348368	0					
ANR	348395	Argument	persistent		348368	1					
ANR	348396	Identifier	persistent		348368	0					
ANR	348397	ExpressionStatement	GC_REFCOUNT ( ret ) = 1	123:1:3873:3893	348368	1	True				
ANR	348398	AssignmentExpression	GC_REFCOUNT ( ret ) = 1		348368	0		=			
ANR	348399	CallExpression	GC_REFCOUNT ( ret )		348368	0					
ANR	348400	Callee	GC_REFCOUNT		348368	0					
ANR	348401	Identifier	GC_REFCOUNT		348368	0					
ANR	348402	ArgumentList	ret		348368	1					
ANR	348403	Argument	ret		348368	0					
ANR	348404	Identifier	ret		348368	0					
ANR	348405	PrimaryExpression	1		348368	1					
ANR	348406	ExpressionStatement	GC_TYPE_INFO ( ret ) = IS_STRING | ( ( persistent ? IS_STR_PERSISTENT : 0 ) << 8 )	126:1:3937:4012	348368	2	True				
ANR	348407	AssignmentExpression	GC_TYPE_INFO ( ret ) = IS_STRING | ( ( persistent ? IS_STR_PERSISTENT : 0 ) << 8 )		348368	0		=			
ANR	348408	CallExpression	GC_TYPE_INFO ( ret )		348368	0					
ANR	348409	Callee	GC_TYPE_INFO		348368	0					
ANR	348410	Identifier	GC_TYPE_INFO		348368	0					
ANR	348411	ArgumentList	ret		348368	1					
ANR	348412	Argument	ret		348368	0					
ANR	348413	Identifier	ret		348368	0					
ANR	348414	InclusiveOrExpression	IS_STRING | ( ( persistent ? IS_STR_PERSISTENT : 0 ) << 8 )		348368	1		|			
ANR	348415	Identifier	IS_STRING		348368	0					
ANR	348416	ShiftExpression	( persistent ? IS_STR_PERSISTENT : 0 ) << 8		348368	1		<<			
ANR	348417	ConditionalExpression	persistent ? IS_STR_PERSISTENT : 0		348368	0					
ANR	348418	Condition	persistent		348368	0					
ANR	348419	Identifier	persistent		348368	0					
ANR	348420	Identifier	IS_STR_PERSISTENT		348368	1					
ANR	348421	PrimaryExpression	0		348368	2					
ANR	348422	PrimaryExpression	8		348368	1					
ANR	348423	ExpressionStatement	zend_string_forget_hash_val ( ret )	132:1:4129:4161	348368	3	True				
ANR	348424	CallExpression	zend_string_forget_hash_val ( ret )		348368	0					
ANR	348425	Callee	zend_string_forget_hash_val		348368	0					
ANR	348426	Identifier	zend_string_forget_hash_val		348368	0					
ANR	348427	ArgumentList	ret		348368	1					
ANR	348428	Argument	ret		348368	0					
ANR	348429	Identifier	ret		348368	0					
ANR	348430	ExpressionStatement	ZSTR_LEN ( ret ) = len	133:1:4164:4183	348368	4	True				
ANR	348431	AssignmentExpression	ZSTR_LEN ( ret ) = len		348368	0		=			
ANR	348432	CallExpression	ZSTR_LEN ( ret )		348368	0					
ANR	348433	Callee	ZSTR_LEN		348368	0					
ANR	348434	Identifier	ZSTR_LEN		348368	0					
ANR	348435	ArgumentList	ret		348368	1					
ANR	348436	Argument	ret		348368	0					
ANR	348437	Identifier	ret		348368	0					
ANR	348438	Identifier	len		348368	1					
ANR	348439	ReturnStatement	return ret ;	134:1:4186:4196	348368	5	True				
ANR	348440	Identifier	ret		348368	0					
ANR	348441	ReturnType	static zend_always_inline zend_string *		348368	1					
ANR	348442	Identifier	zend_string_alloc		348368	2					
ANR	348443	ParameterList	"size_t len , int persistent"		348368	3					
ANR	348444	Parameter	size_t len	119:57:3738:3747	348368	0	True				
ANR	348445	ParameterType	size_t		348368	0					
ANR	348446	Identifier	len		348368	1					
ANR	348447	Parameter	int persistent	119:69:3750:3763	348368	1	True				
ANR	348448	ParameterType	int		348368	0					
ANR	348449	Identifier	persistent		348368	1					
ANR	348450	CFGEntryNode	ENTRY		348368		True				
ANR	348451	CFGExitNode	EXIT		348368		True				
ANR	348452	Symbol	ret		348368						
ANR	348453	Symbol	IS_STR_PERSISTENT		348368						
ANR	348454	Symbol	len		348368						
ANR	348455	Symbol	ZEND_MM_ALIGNED_SIZE		348368						
ANR	348456	Symbol	ZSTR_LEN		348368						
ANR	348457	Symbol	_ZSTR_STRUCT_SIZE		348368						
ANR	348458	Symbol	IS_STRING		348368						
ANR	348459	Symbol	GC_TYPE_INFO		348368						
ANR	348460	Symbol	persistent		348368						
ANR	348461	Symbol	GC_REFCOUNT		348368						
ANR	348462	Symbol	pemalloc		348368						
ANR	348463	Function	zend_string_safe_alloc	137:0:4201:4758							
ANR	348464	FunctionDef	"zend_string_safe_alloc (size_t n , size_t m , size_t l , int persistent)"		348463	0					
ANR	348465	CompoundStatement		138:0:4309:4758	348463	0					
ANR	348466	IdentifierDeclStatement	"zend_string * ret = ( zend_string * ) safe_pemalloc ( n , m , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( l ) ) , persistent ) ;"	139:1:4312:4421	348463	0	True				
ANR	348467	IdentifierDecl	"* ret = ( zend_string * ) safe_pemalloc ( n , m , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( l ) ) , persistent )"		348463	0					
ANR	348468	IdentifierDeclType	zend_string *		348463	0					
ANR	348469	Identifier	ret		348463	1					
ANR	348470	AssignmentExpression	"* ret = ( zend_string * ) safe_pemalloc ( n , m , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( l ) ) , persistent )"		348463	2		=			
ANR	348471	Identifier	ret		348463	0					
ANR	348472	CastExpression	"( zend_string * ) safe_pemalloc ( n , m , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( l ) ) , persistent )"		348463	1					
ANR	348473	CastTarget	zend_string *		348463	0					
ANR	348474	CallExpression	"safe_pemalloc ( n , m , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( l ) ) , persistent )"		348463	1					
ANR	348475	Callee	safe_pemalloc		348463	0					
ANR	348476	Identifier	safe_pemalloc		348463	0					
ANR	348477	ArgumentList	n		348463	1					
ANR	348478	Argument	n		348463	0					
ANR	348479	Identifier	n		348463	0					
ANR	348480	Argument	m		348463	1					
ANR	348481	Identifier	m		348463	0					
ANR	348482	Argument	ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( l ) )		348463	2					
ANR	348483	CallExpression	ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( l ) )		348463	0					
ANR	348484	Callee	ZEND_MM_ALIGNED_SIZE		348463	0					
ANR	348485	Identifier	ZEND_MM_ALIGNED_SIZE		348463	0					
ANR	348486	ArgumentList	_ZSTR_STRUCT_SIZE ( l )		348463	1					
ANR	348487	Argument	_ZSTR_STRUCT_SIZE ( l )		348463	0					
ANR	348488	CallExpression	_ZSTR_STRUCT_SIZE ( l )		348463	0					
ANR	348489	Callee	_ZSTR_STRUCT_SIZE		348463	0					
ANR	348490	Identifier	_ZSTR_STRUCT_SIZE		348463	0					
ANR	348491	ArgumentList	l		348463	1					
ANR	348492	Argument	l		348463	0					
ANR	348493	Identifier	l		348463	0					
ANR	348494	Argument	persistent		348463	3					
ANR	348495	Identifier	persistent		348463	0					
ANR	348496	ExpressionStatement	GC_REFCOUNT ( ret ) = 1	141:1:4425:4445	348463	1	True				
ANR	348497	AssignmentExpression	GC_REFCOUNT ( ret ) = 1		348463	0		=			
ANR	348498	CallExpression	GC_REFCOUNT ( ret )		348463	0					
ANR	348499	Callee	GC_REFCOUNT		348463	0					
ANR	348500	Identifier	GC_REFCOUNT		348463	0					
ANR	348501	ArgumentList	ret		348463	1					
ANR	348502	Argument	ret		348463	0					
ANR	348503	Identifier	ret		348463	0					
ANR	348504	PrimaryExpression	1		348463	1					
ANR	348505	ExpressionStatement	GC_TYPE_INFO ( ret ) = IS_STRING | ( ( persistent ? IS_STR_PERSISTENT : 0 ) << 8 )	144:1:4489:4564	348463	2	True				
ANR	348506	AssignmentExpression	GC_TYPE_INFO ( ret ) = IS_STRING | ( ( persistent ? IS_STR_PERSISTENT : 0 ) << 8 )		348463	0		=			
ANR	348507	CallExpression	GC_TYPE_INFO ( ret )		348463	0					
ANR	348508	Callee	GC_TYPE_INFO		348463	0					
ANR	348509	Identifier	GC_TYPE_INFO		348463	0					
ANR	348510	ArgumentList	ret		348463	1					
ANR	348511	Argument	ret		348463	0					
ANR	348512	Identifier	ret		348463	0					
ANR	348513	InclusiveOrExpression	IS_STRING | ( ( persistent ? IS_STR_PERSISTENT : 0 ) << 8 )		348463	1		|			
ANR	348514	Identifier	IS_STRING		348463	0					
ANR	348515	ShiftExpression	( persistent ? IS_STR_PERSISTENT : 0 ) << 8		348463	1		<<			
ANR	348516	ConditionalExpression	persistent ? IS_STR_PERSISTENT : 0		348463	0					
ANR	348517	Condition	persistent		348463	0					
ANR	348518	Identifier	persistent		348463	0					
ANR	348519	Identifier	IS_STR_PERSISTENT		348463	1					
ANR	348520	PrimaryExpression	0		348463	2					
ANR	348521	PrimaryExpression	8		348463	1					
ANR	348522	ExpressionStatement	zend_string_forget_hash_val ( ret )	150:1:4681:4713	348463	3	True				
ANR	348523	CallExpression	zend_string_forget_hash_val ( ret )		348463	0					
ANR	348524	Callee	zend_string_forget_hash_val		348463	0					
ANR	348525	Identifier	zend_string_forget_hash_val		348463	0					
ANR	348526	ArgumentList	ret		348463	1					
ANR	348527	Argument	ret		348463	0					
ANR	348528	Identifier	ret		348463	0					
ANR	348529	ExpressionStatement	ZSTR_LEN ( ret ) = ( n * m ) + l	151:1:4716:4743	348463	4	True				
ANR	348530	AssignmentExpression	ZSTR_LEN ( ret ) = ( n * m ) + l		348463	0		=			
ANR	348531	CallExpression	ZSTR_LEN ( ret )		348463	0					
ANR	348532	Callee	ZSTR_LEN		348463	0					
ANR	348533	Identifier	ZSTR_LEN		348463	0					
ANR	348534	ArgumentList	ret		348463	1					
ANR	348535	Argument	ret		348463	0					
ANR	348536	Identifier	ret		348463	0					
ANR	348537	AdditiveExpression	( n * m ) + l		348463	1		+			
ANR	348538	MultiplicativeExpression	n * m		348463	0		*			
ANR	348539	Identifier	n		348463	0					
ANR	348540	Identifier	m		348463	1					
ANR	348541	Identifier	l		348463	1					
ANR	348542	ReturnStatement	return ret ;	152:1:4746:4756	348463	5	True				
ANR	348543	Identifier	ret		348463	0					
ANR	348544	ReturnType	static zend_always_inline zend_string *		348463	1					
ANR	348545	Identifier	zend_string_safe_alloc		348463	2					
ANR	348546	ParameterList	"size_t n , size_t m , size_t l , int persistent"		348463	3					
ANR	348547	Parameter	size_t n	137:62:4263:4270	348463	0	True				
ANR	348548	ParameterType	size_t		348463	0					
ANR	348549	Identifier	n		348463	1					
ANR	348550	Parameter	size_t m	137:72:4273:4280	348463	1	True				
ANR	348551	ParameterType	size_t		348463	0					
ANR	348552	Identifier	m		348463	1					
ANR	348553	Parameter	size_t l	137:82:4283:4290	348463	2	True				
ANR	348554	ParameterType	size_t		348463	0					
ANR	348555	Identifier	l		348463	1					
ANR	348556	Parameter	int persistent	137:92:4293:4306	348463	3	True				
ANR	348557	ParameterType	int		348463	0					
ANR	348558	Identifier	persistent		348463	1					
ANR	348559	CFGEntryNode	ENTRY		348463		True				
ANR	348560	CFGExitNode	EXIT		348463		True				
ANR	348561	Symbol	ret		348463						
ANR	348562	Symbol	safe_pemalloc		348463						
ANR	348563	Symbol	ZEND_MM_ALIGNED_SIZE		348463						
ANR	348564	Symbol	_ZSTR_STRUCT_SIZE		348463						
ANR	348565	Symbol	l		348463						
ANR	348566	Symbol	m		348463						
ANR	348567	Symbol	n		348463						
ANR	348568	Symbol	IS_STR_PERSISTENT		348463						
ANR	348569	Symbol	ZSTR_LEN		348463						
ANR	348570	Symbol	IS_STRING		348463						
ANR	348571	Symbol	GC_TYPE_INFO		348463						
ANR	348572	Symbol	persistent		348463						
ANR	348573	Symbol	GC_REFCOUNT		348463						
ANR	348574	Function	zend_string_init	155:0:4761:4996							
ANR	348575	FunctionDef	"zend_string_init (const char * str , size_t len , int persistent)"		348574	0					
ANR	348576	CompoundStatement		156:0:4862:4996	348574	0					
ANR	348577	IdentifierDeclStatement	"zend_string * ret = zend_string_alloc ( len , persistent ) ;"	157:1:4865:4918	348574	0	True				
ANR	348578	IdentifierDecl	"* ret = zend_string_alloc ( len , persistent )"		348574	0					
ANR	348579	IdentifierDeclType	zend_string *		348574	0					
ANR	348580	Identifier	ret		348574	1					
ANR	348581	AssignmentExpression	"* ret = zend_string_alloc ( len , persistent )"		348574	2		=			
ANR	348582	Identifier	ret		348574	0					
ANR	348583	CallExpression	"zend_string_alloc ( len , persistent )"		348574	1					
ANR	348584	Callee	zend_string_alloc		348574	0					
ANR	348585	Identifier	zend_string_alloc		348574	0					
ANR	348586	ArgumentList	len		348574	1					
ANR	348587	Argument	len		348574	0					
ANR	348588	Identifier	len		348574	0					
ANR	348589	Argument	persistent		348574	1					
ANR	348590	Identifier	persistent		348574	0					
ANR	348591	ExpressionStatement	"memcpy ( ZSTR_VAL ( ret ) , str , len )"	159:1:4922:4953	348574	1	True				
ANR	348592	CallExpression	"memcpy ( ZSTR_VAL ( ret ) , str , len )"		348574	0					
ANR	348593	Callee	memcpy		348574	0					
ANR	348594	Identifier	memcpy		348574	0					
ANR	348595	ArgumentList	ZSTR_VAL ( ret )		348574	1					
ANR	348596	Argument	ZSTR_VAL ( ret )		348574	0					
ANR	348597	CallExpression	ZSTR_VAL ( ret )		348574	0					
ANR	348598	Callee	ZSTR_VAL		348574	0					
ANR	348599	Identifier	ZSTR_VAL		348574	0					
ANR	348600	ArgumentList	ret		348574	1					
ANR	348601	Argument	ret		348574	0					
ANR	348602	Identifier	ret		348574	0					
ANR	348603	Argument	str		348574	1					
ANR	348604	Identifier	str		348574	0					
ANR	348605	Argument	len		348574	2					
ANR	348606	Identifier	len		348574	0					
ANR	348607	ExpressionStatement	ZSTR_VAL ( ret ) [ len ] = '\\0'	160:1:4956:4981	348574	2	True				
ANR	348608	AssignmentExpression	ZSTR_VAL ( ret ) [ len ] = '\\0'		348574	0		=			
ANR	348609	ArrayIndexing	ZSTR_VAL ( ret ) [ len ]		348574	0					
ANR	348610	CallExpression	ZSTR_VAL ( ret )		348574	0					
ANR	348611	Callee	ZSTR_VAL		348574	0					
ANR	348612	Identifier	ZSTR_VAL		348574	0					
ANR	348613	ArgumentList	ret		348574	1					
ANR	348614	Argument	ret		348574	0					
ANR	348615	Identifier	ret		348574	0					
ANR	348616	Identifier	len		348574	1					
ANR	348617	PrimaryExpression	'\\0'		348574	1					
ANR	348618	ReturnStatement	return ret ;	161:1:4984:4994	348574	3	True				
ANR	348619	Identifier	ret		348574	0					
ANR	348620	ReturnType	static zend_always_inline zend_string *		348574	1					
ANR	348621	Identifier	zend_string_init		348574	2					
ANR	348622	ParameterList	"const char * str , size_t len , int persistent"		348574	3					
ANR	348623	Parameter	const char * str	155:56:4817:4831	348574	0	True				
ANR	348624	ParameterType	const char *		348574	0					
ANR	348625	Identifier	str		348574	1					
ANR	348626	Parameter	size_t len	155:73:4834:4843	348574	1	True				
ANR	348627	ParameterType	size_t		348574	0					
ANR	348628	Identifier	len		348574	1					
ANR	348629	Parameter	int persistent	155:85:4846:4859	348574	2	True				
ANR	348630	ParameterType	int		348574	0					
ANR	348631	Identifier	persistent		348574	1					
ANR	348632	CFGEntryNode	ENTRY		348574		True				
ANR	348633	CFGExitNode	EXIT		348574		True				
ANR	348634	Symbol	str		348574						
ANR	348635	Symbol	ret		348574						
ANR	348636	Symbol	zend_string_alloc		348574						
ANR	348637	Symbol	len		348574						
ANR	348638	Symbol	persistent		348574						
ANR	348639	Symbol	ZSTR_VAL		348574						
ANR	348640	Symbol	* ZSTR_VAL		348574						
ANR	348641	Symbol	* len		348574						
ANR	348642	Function	zend_string_copy	164:0:4999:5136							
ANR	348643	FunctionDef	zend_string_copy (zend_string * s)		348642	0					
ANR	348644	CompoundStatement		165:0:5071:5136	348642	0					
ANR	348645	IfStatement	if ( ! ZSTR_IS_INTERNED ( s ) )		348642	0					
ANR	348646	Condition	! ZSTR_IS_INTERNED ( s )	166:5:5078:5097	348642	0	True				
ANR	348647	UnaryOperationExpression	! ZSTR_IS_INTERNED ( s )		348642	0					
ANR	348648	UnaryOperator	!		348642	0					
ANR	348649	CallExpression	ZSTR_IS_INTERNED ( s )		348642	1					
ANR	348650	Callee	ZSTR_IS_INTERNED		348642	0					
ANR	348651	Identifier	ZSTR_IS_INTERNED		348642	0					
ANR	348652	ArgumentList	s		348642	1					
ANR	348653	Argument	s		348642	0					
ANR	348654	Identifier	s		348642	0					
ANR	348655	CompoundStatement		2:27:28:28	348642	1					
ANR	348656	ExpressionStatement	GC_REFCOUNT ( s ) ++	167:2:5104:5120	348642	0	True				
ANR	348657	PostIncDecOperationExpression	GC_REFCOUNT ( s ) ++		348642	0					
ANR	348658	CallExpression	GC_REFCOUNT ( s )		348642	0					
ANR	348659	Callee	GC_REFCOUNT		348642	0					
ANR	348660	Identifier	GC_REFCOUNT		348642	0					
ANR	348661	ArgumentList	s		348642	1					
ANR	348662	Argument	s		348642	0					
ANR	348663	Identifier	s		348642	0					
ANR	348664	IncDec	++		348642	1					
ANR	348665	ReturnStatement	return s ;	169:1:5126:5134	348642	1	True				
ANR	348666	Identifier	s		348642	0					
ANR	348667	ReturnType	static zend_always_inline zend_string *		348642	1					
ANR	348668	Identifier	zend_string_copy		348642	2					
ANR	348669	ParameterList	zend_string * s		348642	3					
ANR	348670	Parameter	zend_string * s	164:56:5055:5068	348642	0	True				
ANR	348671	ParameterType	zend_string *		348642	0					
ANR	348672	Identifier	s		348642	1					
ANR	348673	CFGEntryNode	ENTRY		348642		True				
ANR	348674	CFGExitNode	EXIT		348642		True				
ANR	348675	Symbol	s		348642						
ANR	348676	Symbol	ZSTR_IS_INTERNED		348642						
ANR	348677	Symbol	GC_REFCOUNT		348642						
ANR	348678	Function	zend_string_dup	172:0:5139:5346							
ANR	348679	FunctionDef	"zend_string_dup (zend_string * s , int persistent)"		348678	0					
ANR	348680	CompoundStatement		173:0:5226:5346	348678	0					
ANR	348681	IfStatement	if ( ZSTR_IS_INTERNED ( s ) )		348678	0					
ANR	348682	Condition	ZSTR_IS_INTERNED ( s )	174:5:5233:5251	348678	0	True				
ANR	348683	CallExpression	ZSTR_IS_INTERNED ( s )		348678	0					
ANR	348684	Callee	ZSTR_IS_INTERNED		348678	0					
ANR	348685	Identifier	ZSTR_IS_INTERNED		348678	0					
ANR	348686	ArgumentList	s		348678	1					
ANR	348687	Argument	s		348678	0					
ANR	348688	Identifier	s		348678	0					
ANR	348689	CompoundStatement		2:26:27:27	348678	1					
ANR	348690	ReturnStatement	return s ;	175:2:5258:5266	348678	0	True				
ANR	348691	Identifier	s		348678	0					
ANR	348692	ElseStatement	else		348678	0					
ANR	348693	CompoundStatement		4:8:49:49	348678	0					
ANR	348694	ReturnStatement	"return zend_string_init ( ZSTR_VAL ( s ) , ZSTR_LEN ( s ) , persistent ) ;"	177:2:5280:5341	348678	0	True				
ANR	348695	CallExpression	"zend_string_init ( ZSTR_VAL ( s ) , ZSTR_LEN ( s ) , persistent )"		348678	0					
ANR	348696	Callee	zend_string_init		348678	0					
ANR	348697	Identifier	zend_string_init		348678	0					
ANR	348698	ArgumentList	ZSTR_VAL ( s )		348678	1					
ANR	348699	Argument	ZSTR_VAL ( s )		348678	0					
ANR	348700	CallExpression	ZSTR_VAL ( s )		348678	0					
ANR	348701	Callee	ZSTR_VAL		348678	0					
ANR	348702	Identifier	ZSTR_VAL		348678	0					
ANR	348703	ArgumentList	s		348678	1					
ANR	348704	Argument	s		348678	0					
ANR	348705	Identifier	s		348678	0					
ANR	348706	Argument	ZSTR_LEN ( s )		348678	1					
ANR	348707	CallExpression	ZSTR_LEN ( s )		348678	0					
ANR	348708	Callee	ZSTR_LEN		348678	0					
ANR	348709	Identifier	ZSTR_LEN		348678	0					
ANR	348710	ArgumentList	s		348678	1					
ANR	348711	Argument	s		348678	0					
ANR	348712	Identifier	s		348678	0					
ANR	348713	Argument	persistent		348678	2					
ANR	348714	Identifier	persistent		348678	0					
ANR	348715	ReturnType	static zend_always_inline zend_string *		348678	1					
ANR	348716	Identifier	zend_string_dup		348678	2					
ANR	348717	ParameterList	"zend_string * s , int persistent"		348678	3					
ANR	348718	Parameter	zend_string * s	172:55:5194:5207	348678	0	True				
ANR	348719	ParameterType	zend_string *		348678	0					
ANR	348720	Identifier	s		348678	1					
ANR	348721	Parameter	int persistent	172:71:5210:5223	348678	1	True				
ANR	348722	ParameterType	int		348678	0					
ANR	348723	Identifier	persistent		348678	1					
ANR	348724	CFGEntryNode	ENTRY		348678		True				
ANR	348725	CFGExitNode	EXIT		348678		True				
ANR	348726	Symbol	zend_string_init		348678						
ANR	348727	Symbol	s		348678						
ANR	348728	Symbol	ZSTR_LEN		348678						
ANR	348729	Symbol	ZSTR_IS_INTERNED		348678						
ANR	348730	Symbol	persistent		348678						
ANR	348731	Symbol	ZSTR_VAL		348678						
ANR	348732	Function	zend_string_realloc	181:0:5349:5873							
ANR	348733	FunctionDef	"zend_string_realloc (zend_string * s , size_t len , int persistent)"		348732	0					
ANR	348734	CompoundStatement		182:0:5452:5873	348732	0					
ANR	348735	IdentifierDeclStatement	zend_string * ret ;	183:1:5455:5471	348732	0	True				
ANR	348736	IdentifierDecl	* ret		348732	0					
ANR	348737	IdentifierDeclType	zend_string *		348732	0					
ANR	348738	Identifier	ret		348732	1					
ANR	348739	IfStatement	if ( ! ZSTR_IS_INTERNED ( s ) )		348732	1					
ANR	348740	Condition	! ZSTR_IS_INTERNED ( s )	185:5:5479:5498	348732	0	True				
ANR	348741	UnaryOperationExpression	! ZSTR_IS_INTERNED ( s )		348732	0					
ANR	348742	UnaryOperator	!		348732	0					
ANR	348743	CallExpression	ZSTR_IS_INTERNED ( s )		348732	1					
ANR	348744	Callee	ZSTR_IS_INTERNED		348732	0					
ANR	348745	Identifier	ZSTR_IS_INTERNED		348732	0					
ANR	348746	ArgumentList	s		348732	1					
ANR	348747	Argument	s		348732	0					
ANR	348748	Identifier	s		348732	0					
ANR	348749	CompoundStatement		4:27:48:48	348732	1					
ANR	348750	IfStatement	if ( EXPECTED ( GC_REFCOUNT ( s ) == 1 ) )		348732	0					
ANR	348751	Condition	EXPECTED ( GC_REFCOUNT ( s ) == 1 )	186:6:5509:5537	348732	0	True				
ANR	348752	CallExpression	EXPECTED ( GC_REFCOUNT ( s ) == 1 )		348732	0					
ANR	348753	Callee	EXPECTED		348732	0					
ANR	348754	Identifier	EXPECTED		348732	0					
ANR	348755	ArgumentList	GC_REFCOUNT ( s ) == 1		348732	1					
ANR	348756	Argument	GC_REFCOUNT ( s ) == 1		348732	0					
ANR	348757	EqualityExpression	GC_REFCOUNT ( s ) == 1		348732	0		==			
ANR	348758	CallExpression	GC_REFCOUNT ( s )		348732	0					
ANR	348759	Callee	GC_REFCOUNT		348732	0					
ANR	348760	Identifier	GC_REFCOUNT		348732	0					
ANR	348761	ArgumentList	s		348732	1					
ANR	348762	Argument	s		348732	0					
ANR	348763	Identifier	s		348732	0					
ANR	348764	PrimaryExpression	1		348732	1					
ANR	348765	CompoundStatement		5:37:87:87	348732	1					
ANR	348766	ExpressionStatement	"ret = ( zend_string * ) perealloc ( s , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) ) , persistent )"	187:3:5545:5636	348732	0	True				
ANR	348767	AssignmentExpression	"ret = ( zend_string * ) perealloc ( s , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) ) , persistent )"		348732	0		=			
ANR	348768	Identifier	ret		348732	0					
ANR	348769	CastExpression	"( zend_string * ) perealloc ( s , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) ) , persistent )"		348732	1					
ANR	348770	CastTarget	zend_string *		348732	0					
ANR	348771	CallExpression	"perealloc ( s , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) ) , persistent )"		348732	1					
ANR	348772	Callee	perealloc		348732	0					
ANR	348773	Identifier	perealloc		348732	0					
ANR	348774	ArgumentList	s		348732	1					
ANR	348775	Argument	s		348732	0					
ANR	348776	Identifier	s		348732	0					
ANR	348777	Argument	ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) )		348732	1					
ANR	348778	CallExpression	ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) )		348732	0					
ANR	348779	Callee	ZEND_MM_ALIGNED_SIZE		348732	0					
ANR	348780	Identifier	ZEND_MM_ALIGNED_SIZE		348732	0					
ANR	348781	ArgumentList	_ZSTR_STRUCT_SIZE ( len )		348732	1					
ANR	348782	Argument	_ZSTR_STRUCT_SIZE ( len )		348732	0					
ANR	348783	CallExpression	_ZSTR_STRUCT_SIZE ( len )		348732	0					
ANR	348784	Callee	_ZSTR_STRUCT_SIZE		348732	0					
ANR	348785	Identifier	_ZSTR_STRUCT_SIZE		348732	0					
ANR	348786	ArgumentList	len		348732	1					
ANR	348787	Argument	len		348732	0					
ANR	348788	Identifier	len		348732	0					
ANR	348789	Argument	persistent		348732	2					
ANR	348790	Identifier	persistent		348732	0					
ANR	348791	ExpressionStatement	ZSTR_LEN ( ret ) = len	188:3:5641:5660	348732	1	True				
ANR	348792	AssignmentExpression	ZSTR_LEN ( ret ) = len		348732	0		=			
ANR	348793	CallExpression	ZSTR_LEN ( ret )		348732	0					
ANR	348794	Callee	ZSTR_LEN		348732	0					
ANR	348795	Identifier	ZSTR_LEN		348732	0					
ANR	348796	ArgumentList	ret		348732	1					
ANR	348797	Argument	ret		348732	0					
ANR	348798	Identifier	ret		348732	0					
ANR	348799	Identifier	len		348732	1					
ANR	348800	ExpressionStatement	zend_string_forget_hash_val ( ret )	189:3:5665:5697	348732	2	True				
ANR	348801	CallExpression	zend_string_forget_hash_val ( ret )		348732	0					
ANR	348802	Callee	zend_string_forget_hash_val		348732	0					
ANR	348803	Identifier	zend_string_forget_hash_val		348732	0					
ANR	348804	ArgumentList	ret		348732	1					
ANR	348805	Argument	ret		348732	0					
ANR	348806	Identifier	ret		348732	0					
ANR	348807	ReturnStatement	return ret ;	190:3:5702:5712	348732	3	True				
ANR	348808	Identifier	ret		348732	0					
ANR	348809	ElseStatement	else		348732	0					
ANR	348810	CompoundStatement		10:9:270:270	348732	0					
ANR	348811	ExpressionStatement	GC_REFCOUNT ( s ) --	192:3:5728:5744	348732	0	True				
ANR	348812	PostIncDecOperationExpression	GC_REFCOUNT ( s ) --		348732	0					
ANR	348813	CallExpression	GC_REFCOUNT ( s )		348732	0					
ANR	348814	Callee	GC_REFCOUNT		348732	0					
ANR	348815	Identifier	GC_REFCOUNT		348732	0					
ANR	348816	ArgumentList	s		348732	1					
ANR	348817	Argument	s		348732	0					
ANR	348818	Identifier	s		348732	0					
ANR	348819	IncDec	--		348732	1					
ANR	348820	ExpressionStatement	"ret = zend_string_alloc ( len , persistent )"	195:1:5754:5794	348732	2	True				
ANR	348821	AssignmentExpression	"ret = zend_string_alloc ( len , persistent )"		348732	0		=			
ANR	348822	Identifier	ret		348732	0					
ANR	348823	CallExpression	"zend_string_alloc ( len , persistent )"		348732	1					
ANR	348824	Callee	zend_string_alloc		348732	0					
ANR	348825	Identifier	zend_string_alloc		348732	0					
ANR	348826	ArgumentList	len		348732	1					
ANR	348827	Argument	len		348732	0					
ANR	348828	Identifier	len		348732	0					
ANR	348829	Argument	persistent		348732	1					
ANR	348830	Identifier	persistent		348732	0					
ANR	348831	ExpressionStatement	"memcpy ( ZSTR_VAL ( ret ) , ZSTR_VAL ( s ) , MIN ( len , ZSTR_LEN ( s ) ) + 1 )"	196:1:5797:5858	348732	3	True				
ANR	348832	CallExpression	"memcpy ( ZSTR_VAL ( ret ) , ZSTR_VAL ( s ) , MIN ( len , ZSTR_LEN ( s ) ) + 1 )"		348732	0					
ANR	348833	Callee	memcpy		348732	0					
ANR	348834	Identifier	memcpy		348732	0					
ANR	348835	ArgumentList	ZSTR_VAL ( ret )		348732	1					
ANR	348836	Argument	ZSTR_VAL ( ret )		348732	0					
ANR	348837	CallExpression	ZSTR_VAL ( ret )		348732	0					
ANR	348838	Callee	ZSTR_VAL		348732	0					
ANR	348839	Identifier	ZSTR_VAL		348732	0					
ANR	348840	ArgumentList	ret		348732	1					
ANR	348841	Argument	ret		348732	0					
ANR	348842	Identifier	ret		348732	0					
ANR	348843	Argument	ZSTR_VAL ( s )		348732	1					
ANR	348844	CallExpression	ZSTR_VAL ( s )		348732	0					
ANR	348845	Callee	ZSTR_VAL		348732	0					
ANR	348846	Identifier	ZSTR_VAL		348732	0					
ANR	348847	ArgumentList	s		348732	1					
ANR	348848	Argument	s		348732	0					
ANR	348849	Identifier	s		348732	0					
ANR	348850	Argument	"MIN ( len , ZSTR_LEN ( s ) ) + 1"		348732	2					
ANR	348851	AdditiveExpression	"MIN ( len , ZSTR_LEN ( s ) ) + 1"		348732	0		+			
ANR	348852	CallExpression	"MIN ( len , ZSTR_LEN ( s ) )"		348732	0					
ANR	348853	Callee	MIN		348732	0					
ANR	348854	Identifier	MIN		348732	0					
ANR	348855	ArgumentList	len		348732	1					
ANR	348856	Argument	len		348732	0					
ANR	348857	Identifier	len		348732	0					
ANR	348858	Argument	ZSTR_LEN ( s )		348732	1					
ANR	348859	CallExpression	ZSTR_LEN ( s )		348732	0					
ANR	348860	Callee	ZSTR_LEN		348732	0					
ANR	348861	Identifier	ZSTR_LEN		348732	0					
ANR	348862	ArgumentList	s		348732	1					
ANR	348863	Argument	s		348732	0					
ANR	348864	Identifier	s		348732	0					
ANR	348865	PrimaryExpression	1		348732	1					
ANR	348866	ReturnStatement	return ret ;	197:1:5861:5871	348732	4	True				
ANR	348867	Identifier	ret		348732	0					
ANR	348868	ReturnType	static zend_always_inline zend_string *		348732	1					
ANR	348869	Identifier	zend_string_realloc		348732	2					
ANR	348870	ParameterList	"zend_string * s , size_t len , int persistent"		348732	3					
ANR	348871	Parameter	zend_string * s	181:59:5408:5421	348732	0	True				
ANR	348872	ParameterType	zend_string *		348732	0					
ANR	348873	Identifier	s		348732	1					
ANR	348874	Parameter	size_t len	181:75:5424:5433	348732	1	True				
ANR	348875	ParameterType	size_t		348732	0					
ANR	348876	Identifier	len		348732	1					
ANR	348877	Parameter	int persistent	181:87:5436:5449	348732	2	True				
ANR	348878	ParameterType	int		348732	0					
ANR	348879	Identifier	persistent		348732	1					
ANR	348880	CFGEntryNode	ENTRY		348732		True				
ANR	348881	CFGExitNode	EXIT		348732		True				
ANR	348882	Symbol	ret		348732						
ANR	348883	Symbol	zend_string_alloc		348732						
ANR	348884	Symbol	ZEND_MM_ALIGNED_SIZE		348732						
ANR	348885	Symbol	_ZSTR_STRUCT_SIZE		348732						
ANR	348886	Symbol	ZSTR_VAL		348732						
ANR	348887	Symbol	s		348732						
ANR	348888	Symbol	MIN		348732						
ANR	348889	Symbol	len		348732						
ANR	348890	Symbol	ZSTR_LEN		348732						
ANR	348891	Symbol	ZSTR_IS_INTERNED		348732						
ANR	348892	Symbol	persistent		348732						
ANR	348893	Symbol	GC_REFCOUNT		348732						
ANR	348894	Symbol	EXPECTED		348732						
ANR	348895	Symbol	perealloc		348732						
ANR	348896	Function	zend_string_extend	200:0:5876:6423							
ANR	348897	FunctionDef	"zend_string_extend (zend_string * s , size_t len , int persistent)"		348896	0					
ANR	348898	CompoundStatement		201:0:5978:6423	348896	0					
ANR	348899	IdentifierDeclStatement	zend_string * ret ;	202:1:5981:5997	348896	0	True				
ANR	348900	IdentifierDecl	* ret		348896	0					
ANR	348901	IdentifierDeclType	zend_string *		348896	0					
ANR	348902	Identifier	ret		348896	1					
ANR	348903	ExpressionStatement	ZEND_ASSERT ( len >= ZSTR_LEN ( s ) )	204:1:6001:6032	348896	1	True				
ANR	348904	CallExpression	ZEND_ASSERT ( len >= ZSTR_LEN ( s ) )		348896	0					
ANR	348905	Callee	ZEND_ASSERT		348896	0					
ANR	348906	Identifier	ZEND_ASSERT		348896	0					
ANR	348907	ArgumentList	len >= ZSTR_LEN ( s )		348896	1					
ANR	348908	Argument	len >= ZSTR_LEN ( s )		348896	0					
ANR	348909	RelationalExpression	len >= ZSTR_LEN ( s )		348896	0		>=			
ANR	348910	Identifier	len		348896	0					
ANR	348911	CallExpression	ZSTR_LEN ( s )		348896	1					
ANR	348912	Callee	ZSTR_LEN		348896	0					
ANR	348913	Identifier	ZSTR_LEN		348896	0					
ANR	348914	ArgumentList	s		348896	1					
ANR	348915	Argument	s		348896	0					
ANR	348916	Identifier	s		348896	0					
ANR	348917	IfStatement	if ( ! ZSTR_IS_INTERNED ( s ) )		348896	2					
ANR	348918	Condition	! ZSTR_IS_INTERNED ( s )	205:5:6039:6058	348896	0	True				
ANR	348919	UnaryOperationExpression	! ZSTR_IS_INTERNED ( s )		348896	0					
ANR	348920	UnaryOperator	!		348896	0					
ANR	348921	CallExpression	ZSTR_IS_INTERNED ( s )		348896	1					
ANR	348922	Callee	ZSTR_IS_INTERNED		348896	0					
ANR	348923	Identifier	ZSTR_IS_INTERNED		348896	0					
ANR	348924	ArgumentList	s		348896	1					
ANR	348925	Argument	s		348896	0					
ANR	348926	Identifier	s		348896	0					
ANR	348927	CompoundStatement		5:27:82:82	348896	1					
ANR	348928	IfStatement	if ( EXPECTED ( GC_REFCOUNT ( s ) == 1 ) )		348896	0					
ANR	348929	Condition	EXPECTED ( GC_REFCOUNT ( s ) == 1 )	206:6:6069:6097	348896	0	True				
ANR	348930	CallExpression	EXPECTED ( GC_REFCOUNT ( s ) == 1 )		348896	0					
ANR	348931	Callee	EXPECTED		348896	0					
ANR	348932	Identifier	EXPECTED		348896	0					
ANR	348933	ArgumentList	GC_REFCOUNT ( s ) == 1		348896	1					
ANR	348934	Argument	GC_REFCOUNT ( s ) == 1		348896	0					
ANR	348935	EqualityExpression	GC_REFCOUNT ( s ) == 1		348896	0		==			
ANR	348936	CallExpression	GC_REFCOUNT ( s )		348896	0					
ANR	348937	Callee	GC_REFCOUNT		348896	0					
ANR	348938	Identifier	GC_REFCOUNT		348896	0					
ANR	348939	ArgumentList	s		348896	1					
ANR	348940	Argument	s		348896	0					
ANR	348941	Identifier	s		348896	0					
ANR	348942	PrimaryExpression	1		348896	1					
ANR	348943	CompoundStatement		6:37:121:121	348896	1					
ANR	348944	ExpressionStatement	"ret = ( zend_string * ) perealloc ( s , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) ) , persistent )"	207:3:6105:6196	348896	0	True				
ANR	348945	AssignmentExpression	"ret = ( zend_string * ) perealloc ( s , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) ) , persistent )"		348896	0		=			
ANR	348946	Identifier	ret		348896	0					
ANR	348947	CastExpression	"( zend_string * ) perealloc ( s , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) ) , persistent )"		348896	1					
ANR	348948	CastTarget	zend_string *		348896	0					
ANR	348949	CallExpression	"perealloc ( s , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) ) , persistent )"		348896	1					
ANR	348950	Callee	perealloc		348896	0					
ANR	348951	Identifier	perealloc		348896	0					
ANR	348952	ArgumentList	s		348896	1					
ANR	348953	Argument	s		348896	0					
ANR	348954	Identifier	s		348896	0					
ANR	348955	Argument	ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) )		348896	1					
ANR	348956	CallExpression	ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) )		348896	0					
ANR	348957	Callee	ZEND_MM_ALIGNED_SIZE		348896	0					
ANR	348958	Identifier	ZEND_MM_ALIGNED_SIZE		348896	0					
ANR	348959	ArgumentList	_ZSTR_STRUCT_SIZE ( len )		348896	1					
ANR	348960	Argument	_ZSTR_STRUCT_SIZE ( len )		348896	0					
ANR	348961	CallExpression	_ZSTR_STRUCT_SIZE ( len )		348896	0					
ANR	348962	Callee	_ZSTR_STRUCT_SIZE		348896	0					
ANR	348963	Identifier	_ZSTR_STRUCT_SIZE		348896	0					
ANR	348964	ArgumentList	len		348896	1					
ANR	348965	Argument	len		348896	0					
ANR	348966	Identifier	len		348896	0					
ANR	348967	Argument	persistent		348896	2					
ANR	348968	Identifier	persistent		348896	0					
ANR	348969	ExpressionStatement	ZSTR_LEN ( ret ) = len	208:3:6201:6220	348896	1	True				
ANR	348970	AssignmentExpression	ZSTR_LEN ( ret ) = len		348896	0		=			
ANR	348971	CallExpression	ZSTR_LEN ( ret )		348896	0					
ANR	348972	Callee	ZSTR_LEN		348896	0					
ANR	348973	Identifier	ZSTR_LEN		348896	0					
ANR	348974	ArgumentList	ret		348896	1					
ANR	348975	Argument	ret		348896	0					
ANR	348976	Identifier	ret		348896	0					
ANR	348977	Identifier	len		348896	1					
ANR	348978	ExpressionStatement	zend_string_forget_hash_val ( ret )	209:3:6225:6257	348896	2	True				
ANR	348979	CallExpression	zend_string_forget_hash_val ( ret )		348896	0					
ANR	348980	Callee	zend_string_forget_hash_val		348896	0					
ANR	348981	Identifier	zend_string_forget_hash_val		348896	0					
ANR	348982	ArgumentList	ret		348896	1					
ANR	348983	Argument	ret		348896	0					
ANR	348984	Identifier	ret		348896	0					
ANR	348985	ReturnStatement	return ret ;	210:3:6262:6272	348896	3	True				
ANR	348986	Identifier	ret		348896	0					
ANR	348987	ElseStatement	else		348896	0					
ANR	348988	CompoundStatement		11:9:304:304	348896	0					
ANR	348989	ExpressionStatement	GC_REFCOUNT ( s ) --	212:3:6288:6304	348896	0	True				
ANR	348990	PostIncDecOperationExpression	GC_REFCOUNT ( s ) --		348896	0					
ANR	348991	CallExpression	GC_REFCOUNT ( s )		348896	0					
ANR	348992	Callee	GC_REFCOUNT		348896	0					
ANR	348993	Identifier	GC_REFCOUNT		348896	0					
ANR	348994	ArgumentList	s		348896	1					
ANR	348995	Argument	s		348896	0					
ANR	348996	Identifier	s		348896	0					
ANR	348997	IncDec	--		348896	1					
ANR	348998	ExpressionStatement	"ret = zend_string_alloc ( len , persistent )"	215:1:6314:6354	348896	3	True				
ANR	348999	AssignmentExpression	"ret = zend_string_alloc ( len , persistent )"		348896	0		=			
ANR	349000	Identifier	ret		348896	0					
ANR	349001	CallExpression	"zend_string_alloc ( len , persistent )"		348896	1					
ANR	349002	Callee	zend_string_alloc		348896	0					
ANR	349003	Identifier	zend_string_alloc		348896	0					
ANR	349004	ArgumentList	len		348896	1					
ANR	349005	Argument	len		348896	0					
ANR	349006	Identifier	len		348896	0					
ANR	349007	Argument	persistent		348896	1					
ANR	349008	Identifier	persistent		348896	0					
ANR	349009	ExpressionStatement	"memcpy ( ZSTR_VAL ( ret ) , ZSTR_VAL ( s ) , ZSTR_LEN ( s ) + 1 )"	216:1:6357:6408	348896	4	True				
ANR	349010	CallExpression	"memcpy ( ZSTR_VAL ( ret ) , ZSTR_VAL ( s ) , ZSTR_LEN ( s ) + 1 )"		348896	0					
ANR	349011	Callee	memcpy		348896	0					
ANR	349012	Identifier	memcpy		348896	0					
ANR	349013	ArgumentList	ZSTR_VAL ( ret )		348896	1					
ANR	349014	Argument	ZSTR_VAL ( ret )		348896	0					
ANR	349015	CallExpression	ZSTR_VAL ( ret )		348896	0					
ANR	349016	Callee	ZSTR_VAL		348896	0					
ANR	349017	Identifier	ZSTR_VAL		348896	0					
ANR	349018	ArgumentList	ret		348896	1					
ANR	349019	Argument	ret		348896	0					
ANR	349020	Identifier	ret		348896	0					
ANR	349021	Argument	ZSTR_VAL ( s )		348896	1					
ANR	349022	CallExpression	ZSTR_VAL ( s )		348896	0					
ANR	349023	Callee	ZSTR_VAL		348896	0					
ANR	349024	Identifier	ZSTR_VAL		348896	0					
ANR	349025	ArgumentList	s		348896	1					
ANR	349026	Argument	s		348896	0					
ANR	349027	Identifier	s		348896	0					
ANR	349028	Argument	ZSTR_LEN ( s ) + 1		348896	2					
ANR	349029	AdditiveExpression	ZSTR_LEN ( s ) + 1		348896	0		+			
ANR	349030	CallExpression	ZSTR_LEN ( s )		348896	0					
ANR	349031	Callee	ZSTR_LEN		348896	0					
ANR	349032	Identifier	ZSTR_LEN		348896	0					
ANR	349033	ArgumentList	s		348896	1					
ANR	349034	Argument	s		348896	0					
ANR	349035	Identifier	s		348896	0					
ANR	349036	PrimaryExpression	1		348896	1					
ANR	349037	ReturnStatement	return ret ;	217:1:6411:6421	348896	5	True				
ANR	349038	Identifier	ret		348896	0					
ANR	349039	ReturnType	static zend_always_inline zend_string *		348896	1					
ANR	349040	Identifier	zend_string_extend		348896	2					
ANR	349041	ParameterList	"zend_string * s , size_t len , int persistent"		348896	3					
ANR	349042	Parameter	zend_string * s	200:58:5934:5947	348896	0	True				
ANR	349043	ParameterType	zend_string *		348896	0					
ANR	349044	Identifier	s		348896	1					
ANR	349045	Parameter	size_t len	200:74:5950:5959	348896	1	True				
ANR	349046	ParameterType	size_t		348896	0					
ANR	349047	Identifier	len		348896	1					
ANR	349048	Parameter	int persistent	200:86:5962:5975	348896	2	True				
ANR	349049	ParameterType	int		348896	0					
ANR	349050	Identifier	persistent		348896	1					
ANR	349051	CFGEntryNode	ENTRY		348896		True				
ANR	349052	CFGExitNode	EXIT		348896		True				
ANR	349053	Symbol	ret		348896						
ANR	349054	Symbol	zend_string_alloc		348896						
ANR	349055	Symbol	ZEND_MM_ALIGNED_SIZE		348896						
ANR	349056	Symbol	_ZSTR_STRUCT_SIZE		348896						
ANR	349057	Symbol	ZSTR_VAL		348896						
ANR	349058	Symbol	s		348896						
ANR	349059	Symbol	len		348896						
ANR	349060	Symbol	ZSTR_LEN		348896						
ANR	349061	Symbol	ZSTR_IS_INTERNED		348896						
ANR	349062	Symbol	persistent		348896						
ANR	349063	Symbol	GC_REFCOUNT		348896						
ANR	349064	Symbol	EXPECTED		348896						
ANR	349065	Symbol	perealloc		348896						
ANR	349066	Function	zend_string_truncate	220:0:6426:6967							
ANR	349067	FunctionDef	"zend_string_truncate (zend_string * s , size_t len , int persistent)"		349066	0					
ANR	349068	CompoundStatement		221:0:6530:6967	349066	0					
ANR	349069	IdentifierDeclStatement	zend_string * ret ;	222:1:6533:6549	349066	0	True				
ANR	349070	IdentifierDecl	* ret		349066	0					
ANR	349071	IdentifierDeclType	zend_string *		349066	0					
ANR	349072	Identifier	ret		349066	1					
ANR	349073	ExpressionStatement	ZEND_ASSERT ( len <= ZSTR_LEN ( s ) )	224:1:6553:6584	349066	1	True				
ANR	349074	CallExpression	ZEND_ASSERT ( len <= ZSTR_LEN ( s ) )		349066	0					
ANR	349075	Callee	ZEND_ASSERT		349066	0					
ANR	349076	Identifier	ZEND_ASSERT		349066	0					
ANR	349077	ArgumentList	len <= ZSTR_LEN ( s )		349066	1					
ANR	349078	Argument	len <= ZSTR_LEN ( s )		349066	0					
ANR	349079	RelationalExpression	len <= ZSTR_LEN ( s )		349066	0		<=			
ANR	349080	Identifier	len		349066	0					
ANR	349081	CallExpression	ZSTR_LEN ( s )		349066	1					
ANR	349082	Callee	ZSTR_LEN		349066	0					
ANR	349083	Identifier	ZSTR_LEN		349066	0					
ANR	349084	ArgumentList	s		349066	1					
ANR	349085	Argument	s		349066	0					
ANR	349086	Identifier	s		349066	0					
ANR	349087	IfStatement	if ( ! ZSTR_IS_INTERNED ( s ) )		349066	2					
ANR	349088	Condition	! ZSTR_IS_INTERNED ( s )	225:5:6591:6610	349066	0	True				
ANR	349089	UnaryOperationExpression	! ZSTR_IS_INTERNED ( s )		349066	0					
ANR	349090	UnaryOperator	!		349066	0					
ANR	349091	CallExpression	ZSTR_IS_INTERNED ( s )		349066	1					
ANR	349092	Callee	ZSTR_IS_INTERNED		349066	0					
ANR	349093	Identifier	ZSTR_IS_INTERNED		349066	0					
ANR	349094	ArgumentList	s		349066	1					
ANR	349095	Argument	s		349066	0					
ANR	349096	Identifier	s		349066	0					
ANR	349097	CompoundStatement		5:27:82:82	349066	1					
ANR	349098	IfStatement	if ( EXPECTED ( GC_REFCOUNT ( s ) == 1 ) )		349066	0					
ANR	349099	Condition	EXPECTED ( GC_REFCOUNT ( s ) == 1 )	226:6:6621:6649	349066	0	True				
ANR	349100	CallExpression	EXPECTED ( GC_REFCOUNT ( s ) == 1 )		349066	0					
ANR	349101	Callee	EXPECTED		349066	0					
ANR	349102	Identifier	EXPECTED		349066	0					
ANR	349103	ArgumentList	GC_REFCOUNT ( s ) == 1		349066	1					
ANR	349104	Argument	GC_REFCOUNT ( s ) == 1		349066	0					
ANR	349105	EqualityExpression	GC_REFCOUNT ( s ) == 1		349066	0		==			
ANR	349106	CallExpression	GC_REFCOUNT ( s )		349066	0					
ANR	349107	Callee	GC_REFCOUNT		349066	0					
ANR	349108	Identifier	GC_REFCOUNT		349066	0					
ANR	349109	ArgumentList	s		349066	1					
ANR	349110	Argument	s		349066	0					
ANR	349111	Identifier	s		349066	0					
ANR	349112	PrimaryExpression	1		349066	1					
ANR	349113	CompoundStatement		6:37:121:121	349066	1					
ANR	349114	ExpressionStatement	"ret = ( zend_string * ) perealloc ( s , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) ) , persistent )"	227:3:6657:6748	349066	0	True				
ANR	349115	AssignmentExpression	"ret = ( zend_string * ) perealloc ( s , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) ) , persistent )"		349066	0		=			
ANR	349116	Identifier	ret		349066	0					
ANR	349117	CastExpression	"( zend_string * ) perealloc ( s , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) ) , persistent )"		349066	1					
ANR	349118	CastTarget	zend_string *		349066	0					
ANR	349119	CallExpression	"perealloc ( s , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) ) , persistent )"		349066	1					
ANR	349120	Callee	perealloc		349066	0					
ANR	349121	Identifier	perealloc		349066	0					
ANR	349122	ArgumentList	s		349066	1					
ANR	349123	Argument	s		349066	0					
ANR	349124	Identifier	s		349066	0					
ANR	349125	Argument	ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) )		349066	1					
ANR	349126	CallExpression	ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( len ) )		349066	0					
ANR	349127	Callee	ZEND_MM_ALIGNED_SIZE		349066	0					
ANR	349128	Identifier	ZEND_MM_ALIGNED_SIZE		349066	0					
ANR	349129	ArgumentList	_ZSTR_STRUCT_SIZE ( len )		349066	1					
ANR	349130	Argument	_ZSTR_STRUCT_SIZE ( len )		349066	0					
ANR	349131	CallExpression	_ZSTR_STRUCT_SIZE ( len )		349066	0					
ANR	349132	Callee	_ZSTR_STRUCT_SIZE		349066	0					
ANR	349133	Identifier	_ZSTR_STRUCT_SIZE		349066	0					
ANR	349134	ArgumentList	len		349066	1					
ANR	349135	Argument	len		349066	0					
ANR	349136	Identifier	len		349066	0					
ANR	349137	Argument	persistent		349066	2					
ANR	349138	Identifier	persistent		349066	0					
ANR	349139	ExpressionStatement	ZSTR_LEN ( ret ) = len	228:3:6753:6772	349066	1	True				
ANR	349140	AssignmentExpression	ZSTR_LEN ( ret ) = len		349066	0		=			
ANR	349141	CallExpression	ZSTR_LEN ( ret )		349066	0					
ANR	349142	Callee	ZSTR_LEN		349066	0					
ANR	349143	Identifier	ZSTR_LEN		349066	0					
ANR	349144	ArgumentList	ret		349066	1					
ANR	349145	Argument	ret		349066	0					
ANR	349146	Identifier	ret		349066	0					
ANR	349147	Identifier	len		349066	1					
ANR	349148	ExpressionStatement	zend_string_forget_hash_val ( ret )	229:3:6777:6809	349066	2	True				
ANR	349149	CallExpression	zend_string_forget_hash_val ( ret )		349066	0					
ANR	349150	Callee	zend_string_forget_hash_val		349066	0					
ANR	349151	Identifier	zend_string_forget_hash_val		349066	0					
ANR	349152	ArgumentList	ret		349066	1					
ANR	349153	Argument	ret		349066	0					
ANR	349154	Identifier	ret		349066	0					
ANR	349155	ReturnStatement	return ret ;	230:3:6814:6824	349066	3	True				
ANR	349156	Identifier	ret		349066	0					
ANR	349157	ElseStatement	else		349066	0					
ANR	349158	CompoundStatement		11:9:304:304	349066	0					
ANR	349159	ExpressionStatement	GC_REFCOUNT ( s ) --	232:3:6840:6856	349066	0	True				
ANR	349160	PostIncDecOperationExpression	GC_REFCOUNT ( s ) --		349066	0					
ANR	349161	CallExpression	GC_REFCOUNT ( s )		349066	0					
ANR	349162	Callee	GC_REFCOUNT		349066	0					
ANR	349163	Identifier	GC_REFCOUNT		349066	0					
ANR	349164	ArgumentList	s		349066	1					
ANR	349165	Argument	s		349066	0					
ANR	349166	Identifier	s		349066	0					
ANR	349167	IncDec	--		349066	1					
ANR	349168	ExpressionStatement	"ret = zend_string_alloc ( len , persistent )"	235:1:6866:6906	349066	3	True				
ANR	349169	AssignmentExpression	"ret = zend_string_alloc ( len , persistent )"		349066	0		=			
ANR	349170	Identifier	ret		349066	0					
ANR	349171	CallExpression	"zend_string_alloc ( len , persistent )"		349066	1					
ANR	349172	Callee	zend_string_alloc		349066	0					
ANR	349173	Identifier	zend_string_alloc		349066	0					
ANR	349174	ArgumentList	len		349066	1					
ANR	349175	Argument	len		349066	0					
ANR	349176	Identifier	len		349066	0					
ANR	349177	Argument	persistent		349066	1					
ANR	349178	Identifier	persistent		349066	0					
ANR	349179	ExpressionStatement	"memcpy ( ZSTR_VAL ( ret ) , ZSTR_VAL ( s ) , len + 1 )"	236:1:6909:6952	349066	4	True				
ANR	349180	CallExpression	"memcpy ( ZSTR_VAL ( ret ) , ZSTR_VAL ( s ) , len + 1 )"		349066	0					
ANR	349181	Callee	memcpy		349066	0					
ANR	349182	Identifier	memcpy		349066	0					
ANR	349183	ArgumentList	ZSTR_VAL ( ret )		349066	1					
ANR	349184	Argument	ZSTR_VAL ( ret )		349066	0					
ANR	349185	CallExpression	ZSTR_VAL ( ret )		349066	0					
ANR	349186	Callee	ZSTR_VAL		349066	0					
ANR	349187	Identifier	ZSTR_VAL		349066	0					
ANR	349188	ArgumentList	ret		349066	1					
ANR	349189	Argument	ret		349066	0					
ANR	349190	Identifier	ret		349066	0					
ANR	349191	Argument	ZSTR_VAL ( s )		349066	1					
ANR	349192	CallExpression	ZSTR_VAL ( s )		349066	0					
ANR	349193	Callee	ZSTR_VAL		349066	0					
ANR	349194	Identifier	ZSTR_VAL		349066	0					
ANR	349195	ArgumentList	s		349066	1					
ANR	349196	Argument	s		349066	0					
ANR	349197	Identifier	s		349066	0					
ANR	349198	Argument	len + 1		349066	2					
ANR	349199	AdditiveExpression	len + 1		349066	0		+			
ANR	349200	Identifier	len		349066	0					
ANR	349201	PrimaryExpression	1		349066	1					
ANR	349202	ReturnStatement	return ret ;	237:1:6955:6965	349066	5	True				
ANR	349203	Identifier	ret		349066	0					
ANR	349204	ReturnType	static zend_always_inline zend_string *		349066	1					
ANR	349205	Identifier	zend_string_truncate		349066	2					
ANR	349206	ParameterList	"zend_string * s , size_t len , int persistent"		349066	3					
ANR	349207	Parameter	zend_string * s	220:60:6486:6499	349066	0	True				
ANR	349208	ParameterType	zend_string *		349066	0					
ANR	349209	Identifier	s		349066	1					
ANR	349210	Parameter	size_t len	220:76:6502:6511	349066	1	True				
ANR	349211	ParameterType	size_t		349066	0					
ANR	349212	Identifier	len		349066	1					
ANR	349213	Parameter	int persistent	220:88:6514:6527	349066	2	True				
ANR	349214	ParameterType	int		349066	0					
ANR	349215	Identifier	persistent		349066	1					
ANR	349216	CFGEntryNode	ENTRY		349066		True				
ANR	349217	CFGExitNode	EXIT		349066		True				
ANR	349218	Symbol	ret		349066						
ANR	349219	Symbol	zend_string_alloc		349066						
ANR	349220	Symbol	ZEND_MM_ALIGNED_SIZE		349066						
ANR	349221	Symbol	_ZSTR_STRUCT_SIZE		349066						
ANR	349222	Symbol	ZSTR_VAL		349066						
ANR	349223	Symbol	s		349066						
ANR	349224	Symbol	len		349066						
ANR	349225	Symbol	ZSTR_LEN		349066						
ANR	349226	Symbol	ZSTR_IS_INTERNED		349066						
ANR	349227	Symbol	persistent		349066						
ANR	349228	Symbol	EXPECTED		349066						
ANR	349229	Symbol	GC_REFCOUNT		349066						
ANR	349230	Symbol	perealloc		349066						
ANR	349231	Function	zend_string_safe_realloc	240:0:6970:7541							
ANR	349232	FunctionDef	"zend_string_safe_realloc (zend_string * s , size_t n , size_t m , size_t l , int persistent)"		349231	0					
ANR	349233	CompoundStatement		241:0:7096:7541	349231	0					
ANR	349234	IdentifierDeclStatement	zend_string * ret ;	242:1:7099:7115	349231	0	True				
ANR	349235	IdentifierDecl	* ret		349231	0					
ANR	349236	IdentifierDeclType	zend_string *		349231	0					
ANR	349237	Identifier	ret		349231	1					
ANR	349238	IfStatement	if ( ! ZSTR_IS_INTERNED ( s ) )		349231	1					
ANR	349239	Condition	! ZSTR_IS_INTERNED ( s )	244:5:7123:7142	349231	0	True				
ANR	349240	UnaryOperationExpression	! ZSTR_IS_INTERNED ( s )		349231	0					
ANR	349241	UnaryOperator	!		349231	0					
ANR	349242	CallExpression	ZSTR_IS_INTERNED ( s )		349231	1					
ANR	349243	Callee	ZSTR_IS_INTERNED		349231	0					
ANR	349244	Identifier	ZSTR_IS_INTERNED		349231	0					
ANR	349245	ArgumentList	s		349231	1					
ANR	349246	Argument	s		349231	0					
ANR	349247	Identifier	s		349231	0					
ANR	349248	CompoundStatement		4:27:48:48	349231	1					
ANR	349249	IfStatement	if ( GC_REFCOUNT ( s ) == 1 )		349231	0					
ANR	349250	Condition	GC_REFCOUNT ( s ) == 1	245:6:7153:7171	349231	0	True				
ANR	349251	EqualityExpression	GC_REFCOUNT ( s ) == 1		349231	0		==			
ANR	349252	CallExpression	GC_REFCOUNT ( s )		349231	0					
ANR	349253	Callee	GC_REFCOUNT		349231	0					
ANR	349254	Identifier	GC_REFCOUNT		349231	0					
ANR	349255	ArgumentList	s		349231	1					
ANR	349256	Argument	s		349231	0					
ANR	349257	Identifier	s		349231	0					
ANR	349258	PrimaryExpression	1		349231	1					
ANR	349259	CompoundStatement		5:27:77:77	349231	1					
ANR	349260	ExpressionStatement	"ret = ( zend_string * ) safe_perealloc ( s , n , m , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( l ) ) , persistent )"	246:3:7179:7279	349231	0	True				
ANR	349261	AssignmentExpression	"ret = ( zend_string * ) safe_perealloc ( s , n , m , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( l ) ) , persistent )"		349231	0		=			
ANR	349262	Identifier	ret		349231	0					
ANR	349263	CastExpression	"( zend_string * ) safe_perealloc ( s , n , m , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( l ) ) , persistent )"		349231	1					
ANR	349264	CastTarget	zend_string *		349231	0					
ANR	349265	CallExpression	"safe_perealloc ( s , n , m , ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( l ) ) , persistent )"		349231	1					
ANR	349266	Callee	safe_perealloc		349231	0					
ANR	349267	Identifier	safe_perealloc		349231	0					
ANR	349268	ArgumentList	s		349231	1					
ANR	349269	Argument	s		349231	0					
ANR	349270	Identifier	s		349231	0					
ANR	349271	Argument	n		349231	1					
ANR	349272	Identifier	n		349231	0					
ANR	349273	Argument	m		349231	2					
ANR	349274	Identifier	m		349231	0					
ANR	349275	Argument	ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( l ) )		349231	3					
ANR	349276	CallExpression	ZEND_MM_ALIGNED_SIZE ( _ZSTR_STRUCT_SIZE ( l ) )		349231	0					
ANR	349277	Callee	ZEND_MM_ALIGNED_SIZE		349231	0					
ANR	349278	Identifier	ZEND_MM_ALIGNED_SIZE		349231	0					
ANR	349279	ArgumentList	_ZSTR_STRUCT_SIZE ( l )		349231	1					
ANR	349280	Argument	_ZSTR_STRUCT_SIZE ( l )		349231	0					
ANR	349281	CallExpression	_ZSTR_STRUCT_SIZE ( l )		349231	0					
ANR	349282	Callee	_ZSTR_STRUCT_SIZE		349231	0					
ANR	349283	Identifier	_ZSTR_STRUCT_SIZE		349231	0					
ANR	349284	ArgumentList	l		349231	1					
ANR	349285	Argument	l		349231	0					
ANR	349286	Identifier	l		349231	0					
ANR	349287	Argument	persistent		349231	4					
ANR	349288	Identifier	persistent		349231	0					
ANR	349289	ExpressionStatement	ZSTR_LEN ( ret ) = ( n * m ) + l	247:3:7284:7311	349231	1	True				
ANR	349290	AssignmentExpression	ZSTR_LEN ( ret ) = ( n * m ) + l		349231	0		=			
ANR	349291	CallExpression	ZSTR_LEN ( ret )		349231	0					
ANR	349292	Callee	ZSTR_LEN		349231	0					
ANR	349293	Identifier	ZSTR_LEN		349231	0					
ANR	349294	ArgumentList	ret		349231	1					
ANR	349295	Argument	ret		349231	0					
ANR	349296	Identifier	ret		349231	0					
ANR	349297	AdditiveExpression	( n * m ) + l		349231	1		+			
ANR	349298	MultiplicativeExpression	n * m		349231	0		*			
ANR	349299	Identifier	n		349231	0					
ANR	349300	Identifier	m		349231	1					
ANR	349301	Identifier	l		349231	1					
ANR	349302	ExpressionStatement	zend_string_forget_hash_val ( ret )	248:3:7316:7348	349231	2	True				
ANR	349303	CallExpression	zend_string_forget_hash_val ( ret )		349231	0					
ANR	349304	Callee	zend_string_forget_hash_val		349231	0					
ANR	349305	Identifier	zend_string_forget_hash_val		349231	0					
ANR	349306	ArgumentList	ret		349231	1					
ANR	349307	Argument	ret		349231	0					
ANR	349308	Identifier	ret		349231	0					
ANR	349309	ReturnStatement	return ret ;	249:3:7353:7363	349231	3	True				
ANR	349310	Identifier	ret		349231	0					
ANR	349311	ElseStatement	else		349231	0					
ANR	349312	CompoundStatement		10:9:277:277	349231	0					
ANR	349313	ExpressionStatement	GC_REFCOUNT ( s ) --	251:3:7379:7395	349231	0	True				
ANR	349314	PostIncDecOperationExpression	GC_REFCOUNT ( s ) --		349231	0					
ANR	349315	CallExpression	GC_REFCOUNT ( s )		349231	0					
ANR	349316	Callee	GC_REFCOUNT		349231	0					
ANR	349317	Identifier	GC_REFCOUNT		349231	0					
ANR	349318	ArgumentList	s		349231	1					
ANR	349319	Argument	s		349231	0					
ANR	349320	Identifier	s		349231	0					
ANR	349321	IncDec	--		349231	1					
ANR	349322	ExpressionStatement	"ret = zend_string_safe_alloc ( n , m , l , persistent )"	254:1:7405:7454	349231	2	True				
ANR	349323	AssignmentExpression	"ret = zend_string_safe_alloc ( n , m , l , persistent )"		349231	0		=			
ANR	349324	Identifier	ret		349231	0					
ANR	349325	CallExpression	"zend_string_safe_alloc ( n , m , l , persistent )"		349231	1					
ANR	349326	Callee	zend_string_safe_alloc		349231	0					
ANR	349327	Identifier	zend_string_safe_alloc		349231	0					
ANR	349328	ArgumentList	n		349231	1					
ANR	349329	Argument	n		349231	0					
ANR	349330	Identifier	n		349231	0					
ANR	349331	Argument	m		349231	1					
ANR	349332	Identifier	m		349231	0					
ANR	349333	Argument	l		349231	2					
ANR	349334	Identifier	l		349231	0					
ANR	349335	Argument	persistent		349231	3					
ANR	349336	Identifier	persistent		349231	0					
ANR	349337	ExpressionStatement	"memcpy ( ZSTR_VAL ( ret ) , ZSTR_VAL ( s ) , MIN ( ( n * m ) + l , ZSTR_LEN ( s ) ) + 1 )"	255:1:7457:7526	349231	3	True				
ANR	349338	CallExpression	"memcpy ( ZSTR_VAL ( ret ) , ZSTR_VAL ( s ) , MIN ( ( n * m ) + l , ZSTR_LEN ( s ) ) + 1 )"		349231	0					
ANR	349339	Callee	memcpy		349231	0					
ANR	349340	Identifier	memcpy		349231	0					
ANR	349341	ArgumentList	ZSTR_VAL ( ret )		349231	1					
ANR	349342	Argument	ZSTR_VAL ( ret )		349231	0					
ANR	349343	CallExpression	ZSTR_VAL ( ret )		349231	0					
ANR	349344	Callee	ZSTR_VAL		349231	0					
ANR	349345	Identifier	ZSTR_VAL		349231	0					
ANR	349346	ArgumentList	ret		349231	1					
ANR	349347	Argument	ret		349231	0					
ANR	349348	Identifier	ret		349231	0					
ANR	349349	Argument	ZSTR_VAL ( s )		349231	1					
ANR	349350	CallExpression	ZSTR_VAL ( s )		349231	0					
ANR	349351	Callee	ZSTR_VAL		349231	0					
ANR	349352	Identifier	ZSTR_VAL		349231	0					
ANR	349353	ArgumentList	s		349231	1					
ANR	349354	Argument	s		349231	0					
ANR	349355	Identifier	s		349231	0					
ANR	349356	Argument	"MIN ( ( n * m ) + l , ZSTR_LEN ( s ) ) + 1"		349231	2					
ANR	349357	AdditiveExpression	"MIN ( ( n * m ) + l , ZSTR_LEN ( s ) ) + 1"		349231	0		+			
ANR	349358	CallExpression	"MIN ( ( n * m ) + l , ZSTR_LEN ( s ) )"		349231	0					
ANR	349359	Callee	MIN		349231	0					
ANR	349360	Identifier	MIN		349231	0					
ANR	349361	ArgumentList	( n * m ) + l		349231	1					
ANR	349362	Argument	( n * m ) + l		349231	0					
ANR	349363	AdditiveExpression	( n * m ) + l		349231	0		+			
ANR	349364	MultiplicativeExpression	n * m		349231	0		*			
ANR	349365	Identifier	n		349231	0					
ANR	349366	Identifier	m		349231	1					
ANR	349367	Identifier	l		349231	1					
ANR	349368	Argument	ZSTR_LEN ( s )		349231	1					
ANR	349369	CallExpression	ZSTR_LEN ( s )		349231	0					
ANR	349370	Callee	ZSTR_LEN		349231	0					
ANR	349371	Identifier	ZSTR_LEN		349231	0					
ANR	349372	ArgumentList	s		349231	1					
ANR	349373	Argument	s		349231	0					
ANR	349374	Identifier	s		349231	0					
ANR	349375	PrimaryExpression	1		349231	1					
ANR	349376	ReturnStatement	return ret ;	256:1:7529:7539	349231	4	True				
ANR	349377	Identifier	ret		349231	0					
ANR	349378	ReturnType	static zend_always_inline zend_string *		349231	1					
ANR	349379	Identifier	zend_string_safe_realloc		349231	2					
ANR	349380	ParameterList	"zend_string * s , size_t n , size_t m , size_t l , int persistent"		349231	3					
ANR	349381	Parameter	zend_string * s	240:64:7034:7047	349231	0	True				
ANR	349382	ParameterType	zend_string *		349231	0					
ANR	349383	Identifier	s		349231	1					
ANR	349384	Parameter	size_t n	240:80:7050:7057	349231	1	True				
ANR	349385	ParameterType	size_t		349231	0					
ANR	349386	Identifier	n		349231	1					
ANR	349387	Parameter	size_t m	240:90:7060:7067	349231	2	True				
ANR	349388	ParameterType	size_t		349231	0					
ANR	349389	Identifier	m		349231	1					
ANR	349390	Parameter	size_t l	240:100:7070:7077	349231	3	True				
ANR	349391	ParameterType	size_t		349231	0					
ANR	349392	Identifier	l		349231	1					
ANR	349393	Parameter	int persistent	240:110:7080:7093	349231	4	True				
ANR	349394	ParameterType	int		349231	0					
ANR	349395	Identifier	persistent		349231	1					
ANR	349396	CFGEntryNode	ENTRY		349231		True				
ANR	349397	CFGExitNode	EXIT		349231		True				
ANR	349398	Symbol	ret		349231						
ANR	349399	Symbol	safe_perealloc		349231						
ANR	349400	Symbol	ZEND_MM_ALIGNED_SIZE		349231						
ANR	349401	Symbol	_ZSTR_STRUCT_SIZE		349231						
ANR	349402	Symbol	l		349231						
ANR	349403	Symbol	m		349231						
ANR	349404	Symbol	n		349231						
ANR	349405	Symbol	ZSTR_VAL		349231						
ANR	349406	Symbol	s		349231						
ANR	349407	Symbol	MIN		349231						
ANR	349408	Symbol	zend_string_safe_alloc		349231						
ANR	349409	Symbol	ZSTR_LEN		349231						
ANR	349410	Symbol	ZSTR_IS_INTERNED		349231						
ANR	349411	Symbol	persistent		349231						
ANR	349412	Symbol	GC_REFCOUNT		349231						
ANR	349413	Function	zend_string_free	259:0:7544:7724							
ANR	349414	FunctionDef	zend_string_free (zend_string * s)		349413	0					
ANR	349415	CompoundStatement		260:0:7608:7724	349413	0					
ANR	349416	IfStatement	if ( ! ZSTR_IS_INTERNED ( s ) )		349413	0					
ANR	349417	Condition	! ZSTR_IS_INTERNED ( s )	261:5:7615:7634	349413	0	True				
ANR	349418	UnaryOperationExpression	! ZSTR_IS_INTERNED ( s )		349413	0					
ANR	349419	UnaryOperator	!		349413	0					
ANR	349420	CallExpression	ZSTR_IS_INTERNED ( s )		349413	1					
ANR	349421	Callee	ZSTR_IS_INTERNED		349413	0					
ANR	349422	Identifier	ZSTR_IS_INTERNED		349413	0					
ANR	349423	ArgumentList	s		349413	1					
ANR	349424	Argument	s		349413	0					
ANR	349425	Identifier	s		349413	0					
ANR	349426	CompoundStatement		2:27:28:28	349413	1					
ANR	349427	ExpressionStatement	ZEND_ASSERT ( GC_REFCOUNT ( s ) <= 1 )	262:2:7641:7673	349413	0	True				
ANR	349428	CallExpression	ZEND_ASSERT ( GC_REFCOUNT ( s ) <= 1 )		349413	0					
ANR	349429	Callee	ZEND_ASSERT		349413	0					
ANR	349430	Identifier	ZEND_ASSERT		349413	0					
ANR	349431	ArgumentList	GC_REFCOUNT ( s ) <= 1		349413	1					
ANR	349432	Argument	GC_REFCOUNT ( s ) <= 1		349413	0					
ANR	349433	RelationalExpression	GC_REFCOUNT ( s ) <= 1		349413	0		<=			
ANR	349434	CallExpression	GC_REFCOUNT ( s )		349413	0					
ANR	349435	Callee	GC_REFCOUNT		349413	0					
ANR	349436	Identifier	GC_REFCOUNT		349413	0					
ANR	349437	ArgumentList	s		349413	1					
ANR	349438	Argument	s		349413	0					
ANR	349439	Identifier	s		349413	0					
ANR	349440	PrimaryExpression	1		349413	1					
ANR	349441	ExpressionStatement	"pefree ( s , GC_FLAGS ( s ) & IS_STR_PERSISTENT )"	263:2:7677:7719	349413	1	True				
ANR	349442	CallExpression	"pefree ( s , GC_FLAGS ( s ) & IS_STR_PERSISTENT )"		349413	0					
ANR	349443	Callee	pefree		349413	0					
ANR	349444	Identifier	pefree		349413	0					
ANR	349445	ArgumentList	s		349413	1					
ANR	349446	Argument	s		349413	0					
ANR	349447	Identifier	s		349413	0					
ANR	349448	Argument	GC_FLAGS ( s ) & IS_STR_PERSISTENT		349413	1					
ANR	349449	BitAndExpression	GC_FLAGS ( s ) & IS_STR_PERSISTENT		349413	0		&			
ANR	349450	CallExpression	GC_FLAGS ( s )		349413	0					
ANR	349451	Callee	GC_FLAGS		349413	0					
ANR	349452	Identifier	GC_FLAGS		349413	0					
ANR	349453	ArgumentList	s		349413	1					
ANR	349454	Argument	s		349413	0					
ANR	349455	Identifier	s		349413	0					
ANR	349456	Identifier	IS_STR_PERSISTENT		349413	1					
ANR	349457	ReturnType	static zend_always_inline void		349413	1					
ANR	349458	Identifier	zend_string_free		349413	2					
ANR	349459	ParameterList	zend_string * s		349413	3					
ANR	349460	Parameter	zend_string * s	259:48:7592:7605	349413	0	True				
ANR	349461	ParameterType	zend_string *		349413	0					
ANR	349462	Identifier	s		349413	1					
ANR	349463	CFGEntryNode	ENTRY		349413		True				
ANR	349464	CFGExitNode	EXIT		349413		True				
ANR	349465	Symbol	IS_STR_PERSISTENT		349413						
ANR	349466	Symbol	s		349413						
ANR	349467	Symbol	ZSTR_IS_INTERNED		349413						
ANR	349468	Symbol	GC_FLAGS		349413						
ANR	349469	Symbol	GC_REFCOUNT		349413						
ANR	349470	Function	zend_string_release	267:0:7727:7910							
ANR	349471	FunctionDef	zend_string_release (zend_string * s)		349470	0					
ANR	349472	CompoundStatement		268:0:7794:7910	349470	0					
ANR	349473	IfStatement	if ( ! ZSTR_IS_INTERNED ( s ) )		349470	0					
ANR	349474	Condition	! ZSTR_IS_INTERNED ( s )	269:5:7801:7820	349470	0	True				
ANR	349475	UnaryOperationExpression	! ZSTR_IS_INTERNED ( s )		349470	0					
ANR	349476	UnaryOperator	!		349470	0					
ANR	349477	CallExpression	ZSTR_IS_INTERNED ( s )		349470	1					
ANR	349478	Callee	ZSTR_IS_INTERNED		349470	0					
ANR	349479	Identifier	ZSTR_IS_INTERNED		349470	0					
ANR	349480	ArgumentList	s		349470	1					
ANR	349481	Argument	s		349470	0					
ANR	349482	Identifier	s		349470	0					
ANR	349483	CompoundStatement		2:27:28:28	349470	1					
ANR	349484	IfStatement	if ( -- GC_REFCOUNT ( s ) == 0 )		349470	0					
ANR	349485	Condition	-- GC_REFCOUNT ( s ) == 0	270:6:7831:7851	349470	0	True				
ANR	349486	EqualityExpression	-- GC_REFCOUNT ( s ) == 0		349470	0		==			
ANR	349487	UnaryExpression	-- GC_REFCOUNT ( s )		349470	0					
ANR	349488	IncDec	--		349470	0					
ANR	349489	CallExpression	GC_REFCOUNT ( s )		349470	1					
ANR	349490	Callee	GC_REFCOUNT		349470	0					
ANR	349491	Identifier	GC_REFCOUNT		349470	0					
ANR	349492	ArgumentList	s		349470	1					
ANR	349493	Argument	s		349470	0					
ANR	349494	Identifier	s		349470	0					
ANR	349495	PrimaryExpression	0		349470	1					
ANR	349496	CompoundStatement		3:29:59:59	349470	1					
ANR	349497	ExpressionStatement	"pefree ( s , GC_FLAGS ( s ) & IS_STR_PERSISTENT )"	271:3:7859:7901	349470	0	True				
ANR	349498	CallExpression	"pefree ( s , GC_FLAGS ( s ) & IS_STR_PERSISTENT )"		349470	0					
ANR	349499	Callee	pefree		349470	0					
ANR	349500	Identifier	pefree		349470	0					
ANR	349501	ArgumentList	s		349470	1					
ANR	349502	Argument	s		349470	0					
ANR	349503	Identifier	s		349470	0					
ANR	349504	Argument	GC_FLAGS ( s ) & IS_STR_PERSISTENT		349470	1					
ANR	349505	BitAndExpression	GC_FLAGS ( s ) & IS_STR_PERSISTENT		349470	0		&			
ANR	349506	CallExpression	GC_FLAGS ( s )		349470	0					
ANR	349507	Callee	GC_FLAGS		349470	0					
ANR	349508	Identifier	GC_FLAGS		349470	0					
ANR	349509	ArgumentList	s		349470	1					
ANR	349510	Argument	s		349470	0					
ANR	349511	Identifier	s		349470	0					
ANR	349512	Identifier	IS_STR_PERSISTENT		349470	1					
ANR	349513	ReturnType	static zend_always_inline void		349470	1					
ANR	349514	Identifier	zend_string_release		349470	2					
ANR	349515	ParameterList	zend_string * s		349470	3					
ANR	349516	Parameter	zend_string * s	267:51:7778:7791	349470	0	True				
ANR	349517	ParameterType	zend_string *		349470	0					
ANR	349518	Identifier	s		349470	1					
ANR	349519	CFGEntryNode	ENTRY		349470		True				
ANR	349520	CFGExitNode	EXIT		349470		True				
ANR	349521	Symbol	IS_STR_PERSISTENT		349470						
ANR	349522	Symbol	s		349470						
ANR	349523	Symbol	ZSTR_IS_INTERNED		349470						
ANR	349524	Symbol	GC_FLAGS		349470						
ANR	349525	Symbol	GC_REFCOUNT		349470						
ANR	349526	Function	zend_string_equals	277:0:7914:8110							
ANR	349527	FunctionDef	"zend_string_equals (zend_string * s1 , zend_string * s2)"		349526	0					
ANR	349528	CompoundStatement		278:0:8003:8110	349526	0					
ANR	349529	ReturnStatement	"return s1 == s2 || ( ZSTR_LEN ( s1 ) == ZSTR_LEN ( s2 ) && ! memcmp ( ZSTR_VAL ( s1 ) , ZSTR_VAL ( s2 ) , ZSTR_LEN ( s1 ) ) ) ;"	279:1:8006:8108	349526	0	True				
ANR	349530	OrExpression	"s1 == s2 || ( ZSTR_LEN ( s1 ) == ZSTR_LEN ( s2 ) && ! memcmp ( ZSTR_VAL ( s1 ) , ZSTR_VAL ( s2 ) , ZSTR_LEN ( s1 ) ) )"		349526	0		||			
ANR	349531	EqualityExpression	s1 == s2		349526	0		==			
ANR	349532	Identifier	s1		349526	0					
ANR	349533	Identifier	s2		349526	1					
ANR	349534	AndExpression	"ZSTR_LEN ( s1 ) == ZSTR_LEN ( s2 ) && ! memcmp ( ZSTR_VAL ( s1 ) , ZSTR_VAL ( s2 ) , ZSTR_LEN ( s1 ) )"		349526	1		&&			
ANR	349535	EqualityExpression	ZSTR_LEN ( s1 ) == ZSTR_LEN ( s2 )		349526	0		==			
ANR	349536	CallExpression	ZSTR_LEN ( s1 )		349526	0					
ANR	349537	Callee	ZSTR_LEN		349526	0					
ANR	349538	Identifier	ZSTR_LEN		349526	0					
ANR	349539	ArgumentList	s1		349526	1					
ANR	349540	Argument	s1		349526	0					
ANR	349541	Identifier	s1		349526	0					
ANR	349542	CallExpression	ZSTR_LEN ( s2 )		349526	1					
ANR	349543	Callee	ZSTR_LEN		349526	0					
ANR	349544	Identifier	ZSTR_LEN		349526	0					
ANR	349545	ArgumentList	s2		349526	1					
ANR	349546	Argument	s2		349526	0					
ANR	349547	Identifier	s2		349526	0					
ANR	349548	UnaryOperationExpression	"! memcmp ( ZSTR_VAL ( s1 ) , ZSTR_VAL ( s2 ) , ZSTR_LEN ( s1 ) )"		349526	1					
ANR	349549	UnaryOperator	!		349526	0					
ANR	349550	CallExpression	"memcmp ( ZSTR_VAL ( s1 ) , ZSTR_VAL ( s2 ) , ZSTR_LEN ( s1 ) )"		349526	1					
ANR	349551	Callee	memcmp		349526	0					
ANR	349552	Identifier	memcmp		349526	0					
ANR	349553	ArgumentList	ZSTR_VAL ( s1 )		349526	1					
ANR	349554	Argument	ZSTR_VAL ( s1 )		349526	0					
ANR	349555	CallExpression	ZSTR_VAL ( s1 )		349526	0					
ANR	349556	Callee	ZSTR_VAL		349526	0					
ANR	349557	Identifier	ZSTR_VAL		349526	0					
ANR	349558	ArgumentList	s1		349526	1					
ANR	349559	Argument	s1		349526	0					
ANR	349560	Identifier	s1		349526	0					
ANR	349561	Argument	ZSTR_VAL ( s2 )		349526	1					
ANR	349562	CallExpression	ZSTR_VAL ( s2 )		349526	0					
ANR	349563	Callee	ZSTR_VAL		349526	0					
ANR	349564	Identifier	ZSTR_VAL		349526	0					
ANR	349565	ArgumentList	s2		349526	1					
ANR	349566	Argument	s2		349526	0					
ANR	349567	Identifier	s2		349526	0					
ANR	349568	Argument	ZSTR_LEN ( s1 )		349526	2					
ANR	349569	CallExpression	ZSTR_LEN ( s1 )		349526	0					
ANR	349570	Callee	ZSTR_LEN		349526	0					
ANR	349571	Identifier	ZSTR_LEN		349526	0					
ANR	349572	ArgumentList	s1		349526	1					
ANR	349573	Argument	s1		349526	0					
ANR	349574	Identifier	s1		349526	0					
ANR	349575	ReturnType	static zend_always_inline zend_bool		349526	1					
ANR	349576	Identifier	zend_string_equals		349526	2					
ANR	349577	ParameterList	"zend_string * s1 , zend_string * s2"		349526	3					
ANR	349578	Parameter	zend_string * s1	277:55:7969:7983	349526	0	True				
ANR	349579	ParameterType	zend_string *		349526	0					
ANR	349580	Identifier	s1		349526	1					
ANR	349581	Parameter	zend_string * s2	277:72:7986:8000	349526	1	True				
ANR	349582	ParameterType	zend_string *		349526	0					
ANR	349583	Identifier	s2		349526	1					
ANR	349584	CFGEntryNode	ENTRY		349526		True				
ANR	349585	CFGExitNode	EXIT		349526		True				
ANR	349586	Symbol	memcmp		349526						
ANR	349587	Symbol	ZSTR_LEN		349526						
ANR	349588	Symbol	s1		349526						
ANR	349589	Symbol	s2		349526						
ANR	349590	Symbol	ZSTR_VAL		349526						
ANR	349591	Function	zend_inline_hash_func	324:0:10215:11522							
ANR	349592	FunctionDef	"zend_inline_hash_func (const char * str , size_t len)"		349591	0					
ANR	349593	CompoundStatement		325:0:10303:11522	349591	0					
ANR	349594	Statement	register	326:1:10306:10313	349591	0	True				
ANR	349595	IdentifierDeclStatement	zend_ulong hash = Z_UL ( 5381 ) ;	326:10:10315:10343	349591	1	True				
ANR	349596	IdentifierDecl	hash = Z_UL ( 5381 )		349591	0					
ANR	349597	IdentifierDeclType	zend_ulong		349591	0					
ANR	349598	Identifier	hash		349591	1					
ANR	349599	AssignmentExpression	hash = Z_UL ( 5381 )		349591	2		=			
ANR	349600	Identifier	hash		349591	0					
ANR	349601	CallExpression	Z_UL ( 5381 )		349591	1					
ANR	349602	Callee	Z_UL		349591	0					
ANR	349603	Identifier	Z_UL		349591	0					
ANR	349604	ArgumentList	5381		349591	1					
ANR	349605	Argument	5381		349591	0					
ANR	349606	PrimaryExpression	5381		349591	0					
ANR	349607	ForStatement	for ( ; len >= 8 ; len -= 8 )		349591	2					
ANR	349608	Condition	len >= 8	329:8:10404:10411	349591	0	True				
ANR	349609	RelationalExpression	len >= 8		349591	0		>=			
ANR	349610	Identifier	len		349591	0					
ANR	349611	PrimaryExpression	8		349591	1					
ANR	349612	AssignmentExpression	len -= 8	329:18:10414:10421	349591	1	True	-=			
ANR	349613	Identifier	len		349591	0					
ANR	349614	PrimaryExpression	8		349591	1					
ANR	349615	CompoundStatement		5:28:120:120	349591	2					
ANR	349616	ExpressionStatement	hash = ( ( hash << 5 ) + hash ) + * str ++	330:2:10428:10464	349591	0	True				
ANR	349617	AssignmentExpression	hash = ( ( hash << 5 ) + hash ) + * str ++		349591	0		=			
ANR	349618	Identifier	hash		349591	0					
ANR	349619	AdditiveExpression	( ( hash << 5 ) + hash ) + * str ++		349591	1		+			
ANR	349620	AdditiveExpression	( hash << 5 ) + hash		349591	0		+			
ANR	349621	ShiftExpression	hash << 5		349591	0		<<			
ANR	349622	Identifier	hash		349591	0					
ANR	349623	PrimaryExpression	5		349591	1					
ANR	349624	Identifier	hash		349591	1					
ANR	349625	UnaryOperationExpression	* str ++		349591	1					
ANR	349626	UnaryOperator	*		349591	0					
ANR	349627	PostIncDecOperationExpression	str ++		349591	1					
ANR	349628	Identifier	str		349591	0					
ANR	349629	IncDec	++		349591	1					
ANR	349630	ExpressionStatement	hash = ( ( hash << 5 ) + hash ) + * str ++	331:2:10468:10504	349591	1	True				
ANR	349631	AssignmentExpression	hash = ( ( hash << 5 ) + hash ) + * str ++		349591	0		=			
ANR	349632	Identifier	hash		349591	0					
ANR	349633	AdditiveExpression	( ( hash << 5 ) + hash ) + * str ++		349591	1		+			
ANR	349634	AdditiveExpression	( hash << 5 ) + hash		349591	0		+			
ANR	349635	ShiftExpression	hash << 5		349591	0		<<			
ANR	349636	Identifier	hash		349591	0					
ANR	349637	PrimaryExpression	5		349591	1					
ANR	349638	Identifier	hash		349591	1					
ANR	349639	UnaryOperationExpression	* str ++		349591	1					
ANR	349640	UnaryOperator	*		349591	0					
ANR	349641	PostIncDecOperationExpression	str ++		349591	1					
ANR	349642	Identifier	str		349591	0					
ANR	349643	IncDec	++		349591	1					
ANR	349644	ExpressionStatement	hash = ( ( hash << 5 ) + hash ) + * str ++	332:2:10508:10544	349591	2	True				
ANR	349645	AssignmentExpression	hash = ( ( hash << 5 ) + hash ) + * str ++		349591	0		=			
ANR	349646	Identifier	hash		349591	0					
ANR	349647	AdditiveExpression	( ( hash << 5 ) + hash ) + * str ++		349591	1		+			
ANR	349648	AdditiveExpression	( hash << 5 ) + hash		349591	0		+			
ANR	349649	ShiftExpression	hash << 5		349591	0		<<			
ANR	349650	Identifier	hash		349591	0					
ANR	349651	PrimaryExpression	5		349591	1					
ANR	349652	Identifier	hash		349591	1					
ANR	349653	UnaryOperationExpression	* str ++		349591	1					
ANR	349654	UnaryOperator	*		349591	0					
ANR	349655	PostIncDecOperationExpression	str ++		349591	1					
ANR	349656	Identifier	str		349591	0					
ANR	349657	IncDec	++		349591	1					
ANR	349658	ExpressionStatement	hash = ( ( hash << 5 ) + hash ) + * str ++	333:2:10548:10584	349591	3	True				
ANR	349659	AssignmentExpression	hash = ( ( hash << 5 ) + hash ) + * str ++		349591	0		=			
ANR	349660	Identifier	hash		349591	0					
ANR	349661	AdditiveExpression	( ( hash << 5 ) + hash ) + * str ++		349591	1		+			
ANR	349662	AdditiveExpression	( hash << 5 ) + hash		349591	0		+			
ANR	349663	ShiftExpression	hash << 5		349591	0		<<			
ANR	349664	Identifier	hash		349591	0					
ANR	349665	PrimaryExpression	5		349591	1					
ANR	349666	Identifier	hash		349591	1					
ANR	349667	UnaryOperationExpression	* str ++		349591	1					
ANR	349668	UnaryOperator	*		349591	0					
ANR	349669	PostIncDecOperationExpression	str ++		349591	1					
ANR	349670	Identifier	str		349591	0					
ANR	349671	IncDec	++		349591	1					
ANR	349672	ExpressionStatement	hash = ( ( hash << 5 ) + hash ) + * str ++	334:2:10588:10624	349591	4	True				
ANR	349673	AssignmentExpression	hash = ( ( hash << 5 ) + hash ) + * str ++		349591	0		=			
ANR	349674	Identifier	hash		349591	0					
ANR	349675	AdditiveExpression	( ( hash << 5 ) + hash ) + * str ++		349591	1		+			
ANR	349676	AdditiveExpression	( hash << 5 ) + hash		349591	0		+			
ANR	349677	ShiftExpression	hash << 5		349591	0		<<			
ANR	349678	Identifier	hash		349591	0					
ANR	349679	PrimaryExpression	5		349591	1					
ANR	349680	Identifier	hash		349591	1					
ANR	349681	UnaryOperationExpression	* str ++		349591	1					
ANR	349682	UnaryOperator	*		349591	0					
ANR	349683	PostIncDecOperationExpression	str ++		349591	1					
ANR	349684	Identifier	str		349591	0					
ANR	349685	IncDec	++		349591	1					
ANR	349686	ExpressionStatement	hash = ( ( hash << 5 ) + hash ) + * str ++	335:2:10628:10664	349591	5	True				
ANR	349687	AssignmentExpression	hash = ( ( hash << 5 ) + hash ) + * str ++		349591	0		=			
ANR	349688	Identifier	hash		349591	0					
ANR	349689	AdditiveExpression	( ( hash << 5 ) + hash ) + * str ++		349591	1		+			
ANR	349690	AdditiveExpression	( hash << 5 ) + hash		349591	0		+			
ANR	349691	ShiftExpression	hash << 5		349591	0		<<			
ANR	349692	Identifier	hash		349591	0					
ANR	349693	PrimaryExpression	5		349591	1					
ANR	349694	Identifier	hash		349591	1					
ANR	349695	UnaryOperationExpression	* str ++		349591	1					
ANR	349696	UnaryOperator	*		349591	0					
ANR	349697	PostIncDecOperationExpression	str ++		349591	1					
ANR	349698	Identifier	str		349591	0					
ANR	349699	IncDec	++		349591	1					
ANR	349700	ExpressionStatement	hash = ( ( hash << 5 ) + hash ) + * str ++	336:2:10668:10704	349591	6	True				
ANR	349701	AssignmentExpression	hash = ( ( hash << 5 ) + hash ) + * str ++		349591	0		=			
ANR	349702	Identifier	hash		349591	0					
ANR	349703	AdditiveExpression	( ( hash << 5 ) + hash ) + * str ++		349591	1		+			
ANR	349704	AdditiveExpression	( hash << 5 ) + hash		349591	0		+			
ANR	349705	ShiftExpression	hash << 5		349591	0		<<			
ANR	349706	Identifier	hash		349591	0					
ANR	349707	PrimaryExpression	5		349591	1					
ANR	349708	Identifier	hash		349591	1					
ANR	349709	UnaryOperationExpression	* str ++		349591	1					
ANR	349710	UnaryOperator	*		349591	0					
ANR	349711	PostIncDecOperationExpression	str ++		349591	1					
ANR	349712	Identifier	str		349591	0					
ANR	349713	IncDec	++		349591	1					
ANR	349714	ExpressionStatement	hash = ( ( hash << 5 ) + hash ) + * str ++	337:2:10708:10744	349591	7	True				
ANR	349715	AssignmentExpression	hash = ( ( hash << 5 ) + hash ) + * str ++		349591	0		=			
ANR	349716	Identifier	hash		349591	0					
ANR	349717	AdditiveExpression	( ( hash << 5 ) + hash ) + * str ++		349591	1		+			
ANR	349718	AdditiveExpression	( hash << 5 ) + hash		349591	0		+			
ANR	349719	ShiftExpression	hash << 5		349591	0		<<			
ANR	349720	Identifier	hash		349591	0					
ANR	349721	PrimaryExpression	5		349591	1					
ANR	349722	Identifier	hash		349591	1					
ANR	349723	UnaryOperationExpression	* str ++		349591	1					
ANR	349724	UnaryOperator	*		349591	0					
ANR	349725	PostIncDecOperationExpression	str ++		349591	1					
ANR	349726	Identifier	str		349591	0					
ANR	349727	IncDec	++		349591	1					
ANR	349728	SwitchStatement	switch ( len )		349591	3					
ANR	349729	Condition	len	339:9:10758:10760	349591	0	True				
ANR	349730	Identifier	len		349591	0					
ANR	349731	CompoundStatement		15:14:459:459	349591	1					
ANR	349732	Label	case 7 :	340:2:10767:10773	349591	0	True				
ANR	349733	ExpressionStatement	hash = ( ( hash << 5 ) + hash ) + * str ++	340:10:10775:10811	349591	1	True				
ANR	349734	AssignmentExpression	hash = ( ( hash << 5 ) + hash ) + * str ++		349591	0		=			
ANR	349735	Identifier	hash		349591	0					
ANR	349736	AdditiveExpression	( ( hash << 5 ) + hash ) + * str ++		349591	1		+			
ANR	349737	AdditiveExpression	( hash << 5 ) + hash		349591	0		+			
ANR	349738	ShiftExpression	hash << 5		349591	0		<<			
ANR	349739	Identifier	hash		349591	0					
ANR	349740	PrimaryExpression	5		349591	1					
ANR	349741	Identifier	hash		349591	1					
ANR	349742	UnaryOperationExpression	* str ++		349591	1					
ANR	349743	UnaryOperator	*		349591	0					
ANR	349744	PostIncDecOperationExpression	str ++		349591	1					
ANR	349745	Identifier	str		349591	0					
ANR	349746	IncDec	++		349591	1					
ANR	349747	Label	case 6 :	341:2:10836:10842	349591	2	True				
ANR	349748	ExpressionStatement	hash = ( ( hash << 5 ) + hash ) + * str ++	341:10:10844:10880	349591	3	True				
ANR	349749	AssignmentExpression	hash = ( ( hash << 5 ) + hash ) + * str ++		349591	0		=			
ANR	349750	Identifier	hash		349591	0					
ANR	349751	AdditiveExpression	( ( hash << 5 ) + hash ) + * str ++		349591	1		+			
ANR	349752	AdditiveExpression	( hash << 5 ) + hash		349591	0		+			
ANR	349753	ShiftExpression	hash << 5		349591	0		<<			
ANR	349754	Identifier	hash		349591	0					
ANR	349755	PrimaryExpression	5		349591	1					
ANR	349756	Identifier	hash		349591	1					
ANR	349757	UnaryOperationExpression	* str ++		349591	1					
ANR	349758	UnaryOperator	*		349591	0					
ANR	349759	PostIncDecOperationExpression	str ++		349591	1					
ANR	349760	Identifier	str		349591	0					
ANR	349761	IncDec	++		349591	1					
ANR	349762	Label	case 5 :	342:2:10905:10911	349591	4	True				
ANR	349763	ExpressionStatement	hash = ( ( hash << 5 ) + hash ) + * str ++	342:10:10913:10949	349591	5	True				
ANR	349764	AssignmentExpression	hash = ( ( hash << 5 ) + hash ) + * str ++		349591	0		=			
ANR	349765	Identifier	hash		349591	0					
ANR	349766	AdditiveExpression	( ( hash << 5 ) + hash ) + * str ++		349591	1		+			
ANR	349767	AdditiveExpression	( hash << 5 ) + hash		349591	0		+			
ANR	349768	ShiftExpression	hash << 5		349591	0		<<			
ANR	349769	Identifier	hash		349591	0					
ANR	349770	PrimaryExpression	5		349591	1					
ANR	349771	Identifier	hash		349591	1					
ANR	349772	UnaryOperationExpression	* str ++		349591	1					
ANR	349773	UnaryOperator	*		349591	0					
ANR	349774	PostIncDecOperationExpression	str ++		349591	1					
ANR	349775	Identifier	str		349591	0					
ANR	349776	IncDec	++		349591	1					
ANR	349777	Label	case 4 :	343:2:10974:10980	349591	6	True				
ANR	349778	ExpressionStatement	hash = ( ( hash << 5 ) + hash ) + * str ++	343:10:10982:11018	349591	7	True				
ANR	349779	AssignmentExpression	hash = ( ( hash << 5 ) + hash ) + * str ++		349591	0		=			
ANR	349780	Identifier	hash		349591	0					
ANR	349781	AdditiveExpression	( ( hash << 5 ) + hash ) + * str ++		349591	1		+			
ANR	349782	AdditiveExpression	( hash << 5 ) + hash		349591	0		+			
ANR	349783	ShiftExpression	hash << 5		349591	0		<<			
ANR	349784	Identifier	hash		349591	0					
ANR	349785	PrimaryExpression	5		349591	1					
ANR	349786	Identifier	hash		349591	1					
ANR	349787	UnaryOperationExpression	* str ++		349591	1					
ANR	349788	UnaryOperator	*		349591	0					
ANR	349789	PostIncDecOperationExpression	str ++		349591	1					
ANR	349790	Identifier	str		349591	0					
ANR	349791	IncDec	++		349591	1					
ANR	349792	Label	case 3 :	344:2:11043:11049	349591	8	True				
ANR	349793	ExpressionStatement	hash = ( ( hash << 5 ) + hash ) + * str ++	344:10:11051:11087	349591	9	True				
ANR	349794	AssignmentExpression	hash = ( ( hash << 5 ) + hash ) + * str ++		349591	0		=			
ANR	349795	Identifier	hash		349591	0					
ANR	349796	AdditiveExpression	( ( hash << 5 ) + hash ) + * str ++		349591	1		+			
ANR	349797	AdditiveExpression	( hash << 5 ) + hash		349591	0		+			
ANR	349798	ShiftExpression	hash << 5		349591	0		<<			
ANR	349799	Identifier	hash		349591	0					
ANR	349800	PrimaryExpression	5		349591	1					
ANR	349801	Identifier	hash		349591	1					
ANR	349802	UnaryOperationExpression	* str ++		349591	1					
ANR	349803	UnaryOperator	*		349591	0					
ANR	349804	PostIncDecOperationExpression	str ++		349591	1					
ANR	349805	Identifier	str		349591	0					
ANR	349806	IncDec	++		349591	1					
ANR	349807	Label	case 2 :	345:2:11112:11118	349591	10	True				
ANR	349808	ExpressionStatement	hash = ( ( hash << 5 ) + hash ) + * str ++	345:10:11120:11156	349591	11	True				
ANR	349809	AssignmentExpression	hash = ( ( hash << 5 ) + hash ) + * str ++		349591	0		=			
ANR	349810	Identifier	hash		349591	0					
ANR	349811	AdditiveExpression	( ( hash << 5 ) + hash ) + * str ++		349591	1		+			
ANR	349812	AdditiveExpression	( hash << 5 ) + hash		349591	0		+			
ANR	349813	ShiftExpression	hash << 5		349591	0		<<			
ANR	349814	Identifier	hash		349591	0					
ANR	349815	PrimaryExpression	5		349591	1					
ANR	349816	Identifier	hash		349591	1					
ANR	349817	UnaryOperationExpression	* str ++		349591	1					
ANR	349818	UnaryOperator	*		349591	0					
ANR	349819	PostIncDecOperationExpression	str ++		349591	1					
ANR	349820	Identifier	str		349591	0					
ANR	349821	IncDec	++		349591	1					
ANR	349822	Label	case 1 :	346:2:11181:11187	349591	12	True				
ANR	349823	ExpressionStatement	hash = ( ( hash << 5 ) + hash ) + * str ++	346:10:11189:11225	349591	13	True				
ANR	349824	AssignmentExpression	hash = ( ( hash << 5 ) + hash ) + * str ++		349591	0		=			
ANR	349825	Identifier	hash		349591	0					
ANR	349826	AdditiveExpression	( ( hash << 5 ) + hash ) + * str ++		349591	1		+			
ANR	349827	AdditiveExpression	( hash << 5 ) + hash		349591	0		+			
ANR	349828	ShiftExpression	hash << 5		349591	0		<<			
ANR	349829	Identifier	hash		349591	0					
ANR	349830	PrimaryExpression	5		349591	1					
ANR	349831	Identifier	hash		349591	1					
ANR	349832	UnaryOperationExpression	* str ++		349591	1					
ANR	349833	UnaryOperator	*		349591	0					
ANR	349834	PostIncDecOperationExpression	str ++		349591	1					
ANR	349835	Identifier	str		349591	0					
ANR	349836	IncDec	++		349591	1					
ANR	349837	BreakStatement	break ;	346:48:11227:11232	349591	14	True				
ANR	349838	Label	case 0 :	347:2:11236:11242	349591	15	True				
ANR	349839	BreakStatement	break ;	347:10:11244:11249	349591	16	True				
ANR	349840	Statement	EMPTY_SWITCH_DEFAULT_CASE	348:0:11251:11275	349591	17	True				
ANR	349841	Statement	(	348:25:11276:11276	349591	18	True				
ANR	349842	Statement	)	348:26:11277:11277	349591	19	True				
ANR	349843	ReturnStatement	return hash | Z_UL ( 0x8000000000000000 ) ;	353:1:11373:11411	349591	4	True				
ANR	349844	InclusiveOrExpression	hash | Z_UL ( 0x8000000000000000 )		349591	0		|			
ANR	349845	Identifier	hash		349591	0					
ANR	349846	CallExpression	Z_UL ( 0x8000000000000000 )		349591	1					
ANR	349847	Callee	Z_UL		349591	0					
ANR	349848	Identifier	Z_UL		349591	0					
ANR	349849	ArgumentList	0x8000000000000000		349591	1					
ANR	349850	Argument	0x8000000000000000		349591	0					
ANR	349851	PrimaryExpression	0x8000000000000000		349591	0					
ANR	349852	ReturnType	static zend_always_inline zend_ulong		349591	1					
ANR	349853	Identifier	zend_inline_hash_func		349591	2					
ANR	349854	ParameterList	"const char * str , size_t len"		349591	3					
ANR	349855	Parameter	const char * str	324:59:10274:10288	349591	0	True				
ANR	349856	ParameterType	const char *		349591	0					
ANR	349857	Identifier	str		349591	1					
ANR	349858	Parameter	size_t len	324:76:10291:10300	349591	1	True				
ANR	349859	ParameterType	size_t		349591	0					
ANR	349860	Identifier	len		349591	1					
ANR	349861	CFGEntryNode	ENTRY		349591		True				
ANR	349862	CFGExitNode	EXIT		349591		True				
ANR	349863	Symbol	str		349591						
ANR	349864	Symbol	len		349591						
ANR	349865	Symbol	Z_UL		349591						
ANR	349866	Symbol	* str ++		349591						
ANR	349867	Symbol	hash		349591						
ANR	349868	Function	zend_interned_empty_string_init	361:0:11525:11835							
ANR	349869	FunctionDef	zend_interned_empty_string_init (zend_string * * s)		349868	0					
ANR	349870	CompoundStatement		362:0:11605:11835	349868	0					
ANR	349871	IdentifierDeclStatement	zend_string * str ;	363:1:11608:11624	349868	0	True				
ANR	349872	IdentifierDecl	* str		349868	0					
ANR	349873	IdentifierDeclType	zend_string *		349868	0					
ANR	349874	Identifier	str		349868	1					
ANR	349875	ExpressionStatement	"str = zend_string_alloc ( sizeof ( """" ) - 1 , 1 )"	365:1:11628:11668	349868	1	True				
ANR	349876	AssignmentExpression	"str = zend_string_alloc ( sizeof ( """" ) - 1 , 1 )"		349868	0		=			
ANR	349877	Identifier	str		349868	0					
ANR	349878	CallExpression	"zend_string_alloc ( sizeof ( """" ) - 1 , 1 )"		349868	1					
ANR	349879	Callee	zend_string_alloc		349868	0					
ANR	349880	Identifier	zend_string_alloc		349868	0					
ANR	349881	ArgumentList	"sizeof ( """" ) - 1"		349868	1					
ANR	349882	Argument	"sizeof ( """" ) - 1"		349868	0					
ANR	349883	AdditiveExpression	"sizeof ( """" ) - 1"		349868	0		-			
ANR	349884	SizeofExpression	"sizeof ( """" )"		349868	0					
ANR	349885	Sizeof	sizeof		349868	0					
ANR	349886	PrimaryExpression	""""""		349868	1					
ANR	349887	PrimaryExpression	1		349868	1					
ANR	349888	Argument	1		349868	1					
ANR	349889	PrimaryExpression	1		349868	0					
ANR	349890	ExpressionStatement	ZSTR_VAL ( str ) [ 0 ] = '\\000'	366:1:11671:11696	349868	2	True				
ANR	349891	AssignmentExpression	ZSTR_VAL ( str ) [ 0 ] = '\\000'		349868	0		=			
ANR	349892	ArrayIndexing	ZSTR_VAL ( str ) [ 0 ]		349868	0					
ANR	349893	CallExpression	ZSTR_VAL ( str )		349868	0					
ANR	349894	Callee	ZSTR_VAL		349868	0					
ANR	349895	Identifier	ZSTR_VAL		349868	0					
ANR	349896	ArgumentList	str		349868	1					
ANR	349897	Argument	str		349868	0					
ANR	349898	Identifier	str		349868	0					
ANR	349899	PrimaryExpression	0		349868	1					
ANR	349900	PrimaryExpression	'\\000'		349868	1					
ANR	349901	ExpressionStatement	* s = zend_new_interned_string ( str )	369:1:11712:11746	349868	3	True				
ANR	349902	AssignmentExpression	* s = zend_new_interned_string ( str )		349868	0		=			
ANR	349903	UnaryOperationExpression	* s		349868	0					
ANR	349904	UnaryOperator	*		349868	0					
ANR	349905	Identifier	s		349868	1					
ANR	349906	CallExpression	zend_new_interned_string ( str )		349868	1					
ANR	349907	Callee	zend_new_interned_string		349868	0					
ANR	349908	Identifier	zend_new_interned_string		349868	0					
ANR	349909	ArgumentList	str		349868	1					
ANR	349910	Argument	str		349868	0					
ANR	349911	Identifier	str		349868	0					
ANR	349912	ReturnType	static zend_always_inline void		349868	1					
ANR	349913	Identifier	zend_interned_empty_string_init		349868	2					
ANR	349914	ParameterList	zend_string * * s		349868	3					
ANR	349915	Parameter	zend_string * * s	361:63:11588:11602	349868	0	True				
ANR	349916	ParameterType	zend_string * *		349868	0					
ANR	349917	Identifier	s		349868	1					
ANR	349918	CFGEntryNode	ENTRY		349868		True				
ANR	349919	CFGExitNode	EXIT		349868		True				
ANR	349920	Symbol	str		349868						
ANR	349921	Symbol	zend_string_alloc		349868						
ANR	349922	Symbol	s		349868						
ANR	349923	Symbol	zend_new_interned_string		349868						
ANR	349924	Symbol	* s		349868						
ANR	349925	Symbol	ZSTR_VAL		349868						
ANR	349926	Symbol	* ZSTR_VAL		349868						
ANR	349927	Function	zend_interned_empty_string_free	377:0:11838:11967							
ANR	349928	FunctionDef	zend_interned_empty_string_free (zend_string * * s)		349927	0					
ANR	349929	CompoundStatement		378:0:11918:11967	349927	0					
ANR	349930	IfStatement	if ( NULL != * s )		349927	0					
ANR	349931	Condition	NULL != * s	379:5:11925:11934	349927	0	True				
ANR	349932	EqualityExpression	NULL != * s		349927	0		!=			
ANR	349933	Identifier	NULL		349927	0					
ANR	349934	UnaryOperationExpression	* s		349927	1					
ANR	349935	UnaryOperator	*		349927	0					
ANR	349936	Identifier	s		349927	1					
ANR	349937	CompoundStatement		2:17:18:18	349927	1					
ANR	349938	ExpressionStatement	free ( * s )	380:2:11941:11949	349927	0	True				
ANR	349939	CallExpression	free ( * s )		349927	0					
ANR	349940	Callee	free		349927	0					
ANR	349941	Identifier	free		349927	0					
ANR	349942	ArgumentList	* s		349927	1					
ANR	349943	Argument	* s		349927	0					
ANR	349944	UnaryOperationExpression	* s		349927	0					
ANR	349945	UnaryOperator	*		349927	0					
ANR	349946	Identifier	s		349927	1					
ANR	349947	ExpressionStatement	* s = NULL	381:2:11953:11962	349927	1	True				
ANR	349948	AssignmentExpression	* s = NULL		349927	0		=			
ANR	349949	UnaryOperationExpression	* s		349927	0					
ANR	349950	UnaryOperator	*		349927	0					
ANR	349951	Identifier	s		349927	1					
ANR	349952	Identifier	NULL		349927	1					
ANR	349953	ReturnType	static zend_always_inline void		349927	1					
ANR	349954	Identifier	zend_interned_empty_string_free		349927	2					
ANR	349955	ParameterList	zend_string * * s		349927	3					
ANR	349956	Parameter	zend_string * * s	377:63:11901:11915	349927	0	True				
ANR	349957	ParameterType	zend_string * *		349927	0					
ANR	349958	Identifier	s		349927	1					
ANR	349959	CFGEntryNode	ENTRY		349927		True				
ANR	349960	CFGExitNode	EXIT		349927		True				
ANR	349961	Symbol	s		349927						
ANR	349962	Symbol	NULL		349927						
ANR	349963	Symbol	* s		349927						
