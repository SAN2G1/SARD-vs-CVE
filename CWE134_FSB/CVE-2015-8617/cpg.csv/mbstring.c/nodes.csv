command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3168602	File	data/converged/CVE-2015-8617_php-src/mbstring.c								
ANR	3168603	DeclStmt									
ANR	3168604	Decl							void	void ( void )	php_mb_populate_current_detect_order_list
ANR	3168605	DeclStmt									
ANR	3168606	Decl							int	int ( void )	php_mb_encoding_translation
ANR	3168607	DeclStmt									
ANR	3168608	Decl							void	"void ( const zend_encoding * * * list , size_t * list_size )"	php_mb_gpc_get_detect_order
ANR	3168609	DeclStmt									
ANR	3168610	Decl							void	void ( const zend_encoding * encoding )	php_mb_gpc_set_input_encoding
ANR	3168611	ClassDef	_php_mb_nls_ident_list	110:8:3277:3416							
ANR	3168612	DeclStmt									
ANR	3168613	Decl							enum mbfl_no_language	enum mbfl_no_language	lang
ANR	3168614	DeclStmt									
ANR	3168615	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding *	list
ANR	3168616	DeclStmt									
ANR	3168617	Decl							size_t	size_t	list_size
ANR	3168618	DeclStmt									
ANR	3168619	Decl							_php_mb_nls_ident_list	_php_mb_nls_ident_list	php_mb_nls_ident_list
ANR	3168620	DeclStmt									
ANR	3168621	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding [ ]	php_mb_default_identify_list_ja
ANR	3168622	DeclStmt									
ANR	3168623	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding [ ]	php_mb_default_identify_list_cn
ANR	3168624	DeclStmt									
ANR	3168625	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding [ ]	php_mb_default_identify_list_tw_hk
ANR	3168626	DeclStmt									
ANR	3168627	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding [ ]	php_mb_default_identify_list_kr
ANR	3168628	DeclStmt									
ANR	3168629	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding [ ]	php_mb_default_identify_list_ru
ANR	3168630	DeclStmt									
ANR	3168631	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding [ ]	php_mb_default_identify_list_hy
ANR	3168632	DeclStmt									
ANR	3168633	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding [ ]	php_mb_default_identify_list_tr
ANR	3168634	DeclStmt									
ANR	3168635	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding [ ]	php_mb_default_identify_list_ua
ANR	3168636	DeclStmt									
ANR	3168637	Decl							const enum mbfl_no_encoding	const enum mbfl_no_encoding [ ]	php_mb_default_identify_list_neut
ANR	3168638	DeclStmt									
ANR	3168639	Decl							const php_mb_nls_ident_list	const php_mb_nls_ident_list [ ]	php_mb_default_identify_list
ANR	3168640	DeclStmt									
ANR	3168641	Decl							const struct mb_overload_def	const struct mb_overload_def [ ]	mb_ovld
ANR	3168642	DeclStmt									
ANR	3168643	Decl							const zend_function_entry	const zend_function_entry [ ]	mbstring_functions
ANR	3168644	DeclStmt									
ANR	3168645	Decl							zend_module_entry	zend_module_entry	mbstring_module_entry
ANR	3168646	DeclStmt									
ANR	3168647	Decl							sapi_post_entry	sapi_post_entry [ ]	php_post_entries
ANR	3168648	Function	get_internal_encoding	599:0:18556:18769							
ANR	3168649	FunctionDef	get_internal_encoding ()		3168648	0					
ANR	3168650	CompoundStatement		599:41:18597:18769	3168648	0					
ANR	3168651	IfStatement	if ( PG ( internal_encoding ) && PG ( internal_encoding ) [ 0 ] )		3168648	0					
ANR	3168652	Condition	PG ( internal_encoding ) && PG ( internal_encoding ) [ 0 ]	600:5:18604:18652	3168648	0	True				
ANR	3168653	AndExpression	PG ( internal_encoding ) && PG ( internal_encoding ) [ 0 ]		3168648	0		&&			
ANR	3168654	CallExpression	PG ( internal_encoding )		3168648	0					
ANR	3168655	Callee	PG		3168648	0					
ANR	3168656	Identifier	PG		3168648	0					
ANR	3168657	ArgumentList	internal_encoding		3168648	1					
ANR	3168658	Argument	internal_encoding		3168648	0					
ANR	3168659	Identifier	internal_encoding		3168648	0					
ANR	3168660	ArrayIndexing	PG ( internal_encoding ) [ 0 ]		3168648	1					
ANR	3168661	CallExpression	PG ( internal_encoding )		3168648	0					
ANR	3168662	Callee	PG		3168648	0					
ANR	3168663	Identifier	PG		3168648	0					
ANR	3168664	ArgumentList	internal_encoding		3168648	1					
ANR	3168665	Argument	internal_encoding		3168648	0					
ANR	3168666	Identifier	internal_encoding		3168648	0					
ANR	3168667	PrimaryExpression	0		3168648	1					
ANR	3168668	CompoundStatement		2:56:57:57	3168648	1					
ANR	3168669	ReturnStatement	return PG ( internal_encoding ) ;	601:2:18659:18687	3168648	0	True				
ANR	3168670	CallExpression	PG ( internal_encoding )		3168648	0					
ANR	3168671	Callee	PG		3168648	0					
ANR	3168672	Identifier	PG		3168648	0					
ANR	3168673	ArgumentList	internal_encoding		3168648	1					
ANR	3168674	Argument	internal_encoding		3168648	0					
ANR	3168675	Identifier	internal_encoding		3168648	0					
ANR	3168676	ElseStatement	else		3168648	0					
ANR	3168677	IfStatement	if ( SG ( default_charset ) )		3168648	0					
ANR	3168678	Condition	SG ( default_charset )	602:12:18701:18719	3168648	0	True				
ANR	3168679	CallExpression	SG ( default_charset )		3168648	0					
ANR	3168680	Callee	SG		3168648	0					
ANR	3168681	Identifier	SG		3168648	0					
ANR	3168682	ArgumentList	default_charset		3168648	1					
ANR	3168683	Argument	default_charset		3168648	0					
ANR	3168684	Identifier	default_charset		3168648	0					
ANR	3168685	CompoundStatement		4:33:124:124	3168648	1					
ANR	3168686	ReturnStatement	return SG ( default_charset ) ;	603:2:18726:18752	3168648	0	True				
ANR	3168687	CallExpression	SG ( default_charset )		3168648	0					
ANR	3168688	Callee	SG		3168648	0					
ANR	3168689	Identifier	SG		3168648	0					
ANR	3168690	ArgumentList	default_charset		3168648	1					
ANR	3168691	Argument	default_charset		3168648	0					
ANR	3168692	Identifier	default_charset		3168648	0					
ANR	3168693	ReturnStatement	"return """" ;"	605:1:18758:18767	3168648	1	True				
ANR	3168694	PrimaryExpression	""""""		3168648	0					
ANR	3168695	ReturnType	static char *		3168648	1					
ANR	3168696	Identifier	get_internal_encoding		3168648	2					
ANR	3168697	ParameterList			3168648	3					
ANR	3168698	CFGEntryNode	ENTRY		3168648		True				
ANR	3168699	CFGExitNode	EXIT		3168648		True				
ANR	3168700	Symbol	SG		3168648						
ANR	3168701	Symbol	default_charset		3168648						
ANR	3168702	Symbol	PG		3168648						
ANR	3168703	Symbol	* PG		3168648						
ANR	3168704	Symbol	internal_encoding		3168648						
ANR	3168705	Function	get_input_encoding	608:0:18772:18973							
ANR	3168706	FunctionDef	get_input_encoding ()		3168705	0					
ANR	3168707	CompoundStatement		608:38:18810:18973	3168705	0					
ANR	3168708	IfStatement	if ( PG ( input_encoding ) && PG ( input_encoding ) [ 0 ] )		3168705	0					
ANR	3168709	Condition	PG ( input_encoding ) && PG ( input_encoding ) [ 0 ]	609:5:18817:18859	3168705	0	True				
ANR	3168710	AndExpression	PG ( input_encoding ) && PG ( input_encoding ) [ 0 ]		3168705	0		&&			
ANR	3168711	CallExpression	PG ( input_encoding )		3168705	0					
ANR	3168712	Callee	PG		3168705	0					
ANR	3168713	Identifier	PG		3168705	0					
ANR	3168714	ArgumentList	input_encoding		3168705	1					
ANR	3168715	Argument	input_encoding		3168705	0					
ANR	3168716	Identifier	input_encoding		3168705	0					
ANR	3168717	ArrayIndexing	PG ( input_encoding ) [ 0 ]		3168705	1					
ANR	3168718	CallExpression	PG ( input_encoding )		3168705	0					
ANR	3168719	Callee	PG		3168705	0					
ANR	3168720	Identifier	PG		3168705	0					
ANR	3168721	ArgumentList	input_encoding		3168705	1					
ANR	3168722	Argument	input_encoding		3168705	0					
ANR	3168723	Identifier	input_encoding		3168705	0					
ANR	3168724	PrimaryExpression	0		3168705	1					
ANR	3168725	CompoundStatement		2:50:51:51	3168705	1					
ANR	3168726	ReturnStatement	return PG ( input_encoding ) ;	610:2:18866:18891	3168705	0	True				
ANR	3168727	CallExpression	PG ( input_encoding )		3168705	0					
ANR	3168728	Callee	PG		3168705	0					
ANR	3168729	Identifier	PG		3168705	0					
ANR	3168730	ArgumentList	input_encoding		3168705	1					
ANR	3168731	Argument	input_encoding		3168705	0					
ANR	3168732	Identifier	input_encoding		3168705	0					
ANR	3168733	ElseStatement	else		3168705	0					
ANR	3168734	IfStatement	if ( SG ( default_charset ) )		3168705	0					
ANR	3168735	Condition	SG ( default_charset )	611:12:18905:18923	3168705	0	True				
ANR	3168736	CallExpression	SG ( default_charset )		3168705	0					
ANR	3168737	Callee	SG		3168705	0					
ANR	3168738	Identifier	SG		3168705	0					
ANR	3168739	ArgumentList	default_charset		3168705	1					
ANR	3168740	Argument	default_charset		3168705	0					
ANR	3168741	Identifier	default_charset		3168705	0					
ANR	3168742	CompoundStatement		4:33:115:115	3168705	1					
ANR	3168743	ReturnStatement	return SG ( default_charset ) ;	612:2:18930:18956	3168705	0	True				
ANR	3168744	CallExpression	SG ( default_charset )		3168705	0					
ANR	3168745	Callee	SG		3168705	0					
ANR	3168746	Identifier	SG		3168705	0					
ANR	3168747	ArgumentList	default_charset		3168705	1					
ANR	3168748	Argument	default_charset		3168705	0					
ANR	3168749	Identifier	default_charset		3168705	0					
ANR	3168750	ReturnStatement	"return """" ;"	614:1:18962:18971	3168705	1	True				
ANR	3168751	PrimaryExpression	""""""		3168705	0					
ANR	3168752	ReturnType	static char *		3168705	1					
ANR	3168753	Identifier	get_input_encoding		3168705	2					
ANR	3168754	ParameterList			3168705	3					
ANR	3168755	CFGEntryNode	ENTRY		3168705		True				
ANR	3168756	CFGExitNode	EXIT		3168705		True				
ANR	3168757	Symbol	SG		3168705						
ANR	3168758	Symbol	default_charset		3168705						
ANR	3168759	Symbol	input_encoding		3168705						
ANR	3168760	Symbol	PG		3168705						
ANR	3168761	Symbol	* PG		3168705						
ANR	3168762	Function	get_output_encoding	617:0:18976:19181							
ANR	3168763	FunctionDef	get_output_encoding ()		3168762	0					
ANR	3168764	CompoundStatement		617:39:19015:19181	3168762	0					
ANR	3168765	IfStatement	if ( PG ( output_encoding ) && PG ( output_encoding ) [ 0 ] )		3168762	0					
ANR	3168766	Condition	PG ( output_encoding ) && PG ( output_encoding ) [ 0 ]	618:5:19022:19066	3168762	0	True				
ANR	3168767	AndExpression	PG ( output_encoding ) && PG ( output_encoding ) [ 0 ]		3168762	0		&&			
ANR	3168768	CallExpression	PG ( output_encoding )		3168762	0					
ANR	3168769	Callee	PG		3168762	0					
ANR	3168770	Identifier	PG		3168762	0					
ANR	3168771	ArgumentList	output_encoding		3168762	1					
ANR	3168772	Argument	output_encoding		3168762	0					
ANR	3168773	Identifier	output_encoding		3168762	0					
ANR	3168774	ArrayIndexing	PG ( output_encoding ) [ 0 ]		3168762	1					
ANR	3168775	CallExpression	PG ( output_encoding )		3168762	0					
ANR	3168776	Callee	PG		3168762	0					
ANR	3168777	Identifier	PG		3168762	0					
ANR	3168778	ArgumentList	output_encoding		3168762	1					
ANR	3168779	Argument	output_encoding		3168762	0					
ANR	3168780	Identifier	output_encoding		3168762	0					
ANR	3168781	PrimaryExpression	0		3168762	1					
ANR	3168782	CompoundStatement		2:52:53:53	3168762	1					
ANR	3168783	ReturnStatement	return PG ( output_encoding ) ;	619:2:19073:19099	3168762	0	True				
ANR	3168784	CallExpression	PG ( output_encoding )		3168762	0					
ANR	3168785	Callee	PG		3168762	0					
ANR	3168786	Identifier	PG		3168762	0					
ANR	3168787	ArgumentList	output_encoding		3168762	1					
ANR	3168788	Argument	output_encoding		3168762	0					
ANR	3168789	Identifier	output_encoding		3168762	0					
ANR	3168790	ElseStatement	else		3168762	0					
ANR	3168791	IfStatement	if ( SG ( default_charset ) )		3168762	0					
ANR	3168792	Condition	SG ( default_charset )	620:12:19113:19131	3168762	0	True				
ANR	3168793	CallExpression	SG ( default_charset )		3168762	0					
ANR	3168794	Callee	SG		3168762	0					
ANR	3168795	Identifier	SG		3168762	0					
ANR	3168796	ArgumentList	default_charset		3168762	1					
ANR	3168797	Argument	default_charset		3168762	0					
ANR	3168798	Identifier	default_charset		3168762	0					
ANR	3168799	CompoundStatement		4:33:118:118	3168762	1					
ANR	3168800	ReturnStatement	return SG ( default_charset ) ;	621:2:19138:19164	3168762	0	True				
ANR	3168801	CallExpression	SG ( default_charset )		3168762	0					
ANR	3168802	Callee	SG		3168762	0					
ANR	3168803	Identifier	SG		3168762	0					
ANR	3168804	ArgumentList	default_charset		3168762	1					
ANR	3168805	Argument	default_charset		3168762	0					
ANR	3168806	Identifier	default_charset		3168762	0					
ANR	3168807	ReturnStatement	"return """" ;"	623:1:19170:19179	3168762	1	True				
ANR	3168808	PrimaryExpression	""""""		3168762	0					
ANR	3168809	ReturnType	static char *		3168762	1					
ANR	3168810	Identifier	get_output_encoding		3168762	2					
ANR	3168811	ParameterList			3168762	3					
ANR	3168812	CFGEntryNode	ENTRY		3168762		True				
ANR	3168813	CFGExitNode	EXIT		3168762		True				
ANR	3168814	Symbol	SG		3168762						
ANR	3168815	Symbol	default_charset		3168762						
ANR	3168816	Symbol	PG		3168762						
ANR	3168817	Symbol	output_encoding		3168762						
ANR	3168818	Symbol	* PG		3168762						
ANR	3168819	Function	_php_mb_allocators_malloc	628:0:19206:19285							
ANR	3168820	FunctionDef	_php_mb_allocators_malloc (unsigned int sz)		3168819	0					
ANR	3168821	CompoundStatement		629:0:19262:19285	3168819	0					
ANR	3168822	ReturnStatement	return emalloc ( sz ) ;	630:1:19265:19283	3168819	0	True				
ANR	3168823	CallExpression	emalloc ( sz )		3168819	0					
ANR	3168824	Callee	emalloc		3168819	0					
ANR	3168825	Identifier	emalloc		3168819	0					
ANR	3168826	ArgumentList	sz		3168819	1					
ANR	3168827	Argument	sz		3168819	0					
ANR	3168828	Identifier	sz		3168819	0					
ANR	3168829	ReturnType	static void *		3168819	1					
ANR	3168830	Identifier	_php_mb_allocators_malloc		3168819	2					
ANR	3168831	ParameterList	unsigned int sz		3168819	3					
ANR	3168832	Parameter	unsigned int sz	628:39:19245:19259	3168819	0	True				
ANR	3168833	ParameterType	unsigned int		3168819	0					
ANR	3168834	Identifier	sz		3168819	1					
ANR	3168835	CFGEntryNode	ENTRY		3168819		True				
ANR	3168836	CFGExitNode	EXIT		3168819		True				
ANR	3168837	Symbol	emalloc		3168819						
ANR	3168838	Symbol	sz		3168819						
ANR	3168839	Function	_php_mb_allocators_realloc	633:0:19288:19385							
ANR	3168840	FunctionDef	"_php_mb_allocators_realloc (void * ptr , unsigned int sz)"		3168839	0					
ANR	3168841	CompoundStatement		634:0:19356:19385	3168839	0					
ANR	3168842	ReturnStatement	"return erealloc ( ptr , sz ) ;"	635:1:19359:19383	3168839	0	True				
ANR	3168843	CallExpression	"erealloc ( ptr , sz )"		3168839	0					
ANR	3168844	Callee	erealloc		3168839	0					
ANR	3168845	Identifier	erealloc		3168839	0					
ANR	3168846	ArgumentList	ptr		3168839	1					
ANR	3168847	Argument	ptr		3168839	0					
ANR	3168848	Identifier	ptr		3168839	0					
ANR	3168849	Argument	sz		3168839	1					
ANR	3168850	Identifier	sz		3168839	0					
ANR	3168851	ReturnType	static void *		3168839	1					
ANR	3168852	Identifier	_php_mb_allocators_realloc		3168839	2					
ANR	3168853	ParameterList	"void * ptr , unsigned int sz"		3168839	3					
ANR	3168854	Parameter	void * ptr	633:40:19328:19336	3168839	0	True				
ANR	3168855	ParameterType	void *		3168839	0					
ANR	3168856	Identifier	ptr		3168839	1					
ANR	3168857	Parameter	unsigned int sz	633:51:19339:19353	3168839	1	True				
ANR	3168858	ParameterType	unsigned int		3168839	0					
ANR	3168859	Identifier	sz		3168839	1					
ANR	3168860	CFGEntryNode	ENTRY		3168839		True				
ANR	3168861	CFGExitNode	EXIT		3168839		True				
ANR	3168862	Symbol	sz		3168839						
ANR	3168863	Symbol	erealloc		3168839						
ANR	3168864	Symbol	ptr		3168839						
ANR	3168865	Function	_php_mb_allocators_calloc	638:0:19388:19504							
ANR	3168866	FunctionDef	"_php_mb_allocators_calloc (unsigned int nelems , unsigned int szelem)"		3168865	0					
ANR	3168867	CompoundStatement		639:0:19469:19504	3168865	0					
ANR	3168868	ReturnStatement	"return ecalloc ( nelems , szelem ) ;"	640:1:19472:19502	3168865	0	True				
ANR	3168869	CallExpression	"ecalloc ( nelems , szelem )"		3168865	0					
ANR	3168870	Callee	ecalloc		3168865	0					
ANR	3168871	Identifier	ecalloc		3168865	0					
ANR	3168872	ArgumentList	nelems		3168865	1					
ANR	3168873	Argument	nelems		3168865	0					
ANR	3168874	Identifier	nelems		3168865	0					
ANR	3168875	Argument	szelem		3168865	1					
ANR	3168876	Identifier	szelem		3168865	0					
ANR	3168877	ReturnType	static void *		3168865	1					
ANR	3168878	Identifier	_php_mb_allocators_calloc		3168865	2					
ANR	3168879	ParameterList	"unsigned int nelems , unsigned int szelem"		3168865	3					
ANR	3168880	Parameter	unsigned int nelems	638:39:19427:19445	3168865	0	True				
ANR	3168881	ParameterType	unsigned int		3168865	0					
ANR	3168882	Identifier	nelems		3168865	1					
ANR	3168883	Parameter	unsigned int szelem	638:60:19448:19466	3168865	1	True				
ANR	3168884	ParameterType	unsigned int		3168865	0					
ANR	3168885	Identifier	szelem		3168865	1					
ANR	3168886	CFGEntryNode	ENTRY		3168865		True				
ANR	3168887	CFGExitNode	EXIT		3168865		True				
ANR	3168888	Symbol	nelems		3168865						
ANR	3168889	Symbol	szelem		3168865						
ANR	3168890	Symbol	ecalloc		3168865						
ANR	3168891	Function	_php_mb_allocators_free	643:0:19507:19569							
ANR	3168892	FunctionDef	_php_mb_allocators_free (void * ptr)		3168891	0					
ANR	3168893	CompoundStatement		644:0:19554:19569	3168891	0					
ANR	3168894	ExpressionStatement	efree ( ptr )	645:1:19557:19567	3168891	0	True				
ANR	3168895	CallExpression	efree ( ptr )		3168891	0					
ANR	3168896	Callee	efree		3168891	0					
ANR	3168897	Identifier	efree		3168891	0					
ANR	3168898	ArgumentList	ptr		3168891	1					
ANR	3168899	Argument	ptr		3168891	0					
ANR	3168900	Identifier	ptr		3168891	0					
ANR	3168901	ReturnType	static void		3168891	1					
ANR	3168902	Identifier	_php_mb_allocators_free		3168891	2					
ANR	3168903	ParameterList	void * ptr		3168891	3					
ANR	3168904	Parameter	void * ptr	643:36:19543:19551	3168891	0	True				
ANR	3168905	ParameterType	void *		3168891	0					
ANR	3168906	Identifier	ptr		3168891	1					
ANR	3168907	CFGEntryNode	ENTRY		3168891		True				
ANR	3168908	CFGExitNode	EXIT		3168891		True				
ANR	3168909	Symbol	ptr		3168891						
ANR	3168910	Function	_php_mb_allocators_pmalloc	648:0:19572:19656							
ANR	3168911	FunctionDef	_php_mb_allocators_pmalloc (unsigned int sz)		3168910	0					
ANR	3168912	CompoundStatement		649:0:19629:19656	3168910	0					
ANR	3168913	ReturnStatement	"return pemalloc ( sz , 1 ) ;"	650:1:19632:19654	3168910	0	True				
ANR	3168914	CallExpression	"pemalloc ( sz , 1 )"		3168910	0					
ANR	3168915	Callee	pemalloc		3168910	0					
ANR	3168916	Identifier	pemalloc		3168910	0					
ANR	3168917	ArgumentList	sz		3168910	1					
ANR	3168918	Argument	sz		3168910	0					
ANR	3168919	Identifier	sz		3168910	0					
ANR	3168920	Argument	1		3168910	1					
ANR	3168921	PrimaryExpression	1		3168910	0					
ANR	3168922	ReturnType	static void *		3168910	1					
ANR	3168923	Identifier	_php_mb_allocators_pmalloc		3168910	2					
ANR	3168924	ParameterList	unsigned int sz		3168910	3					
ANR	3168925	Parameter	unsigned int sz	648:40:19612:19626	3168910	0	True				
ANR	3168926	ParameterType	unsigned int		3168910	0					
ANR	3168927	Identifier	sz		3168910	1					
ANR	3168928	CFGEntryNode	ENTRY		3168910		True				
ANR	3168929	CFGExitNode	EXIT		3168910		True				
ANR	3168930	Symbol	sz		3168910						
ANR	3168931	Symbol	pemalloc		3168910						
ANR	3168932	Function	_php_mb_allocators_prealloc	653:0:19659:19761							
ANR	3168933	FunctionDef	"_php_mb_allocators_prealloc (void * ptr , unsigned int sz)"		3168932	0					
ANR	3168934	CompoundStatement		654:0:19728:19761	3168932	0					
ANR	3168935	ReturnStatement	"return perealloc ( ptr , sz , 1 ) ;"	655:1:19731:19759	3168932	0	True				
ANR	3168936	CallExpression	"perealloc ( ptr , sz , 1 )"		3168932	0					
ANR	3168937	Callee	perealloc		3168932	0					
ANR	3168938	Identifier	perealloc		3168932	0					
ANR	3168939	ArgumentList	ptr		3168932	1					
ANR	3168940	Argument	ptr		3168932	0					
ANR	3168941	Identifier	ptr		3168932	0					
ANR	3168942	Argument	sz		3168932	1					
ANR	3168943	Identifier	sz		3168932	0					
ANR	3168944	Argument	1		3168932	2					
ANR	3168945	PrimaryExpression	1		3168932	0					
ANR	3168946	ReturnType	static void *		3168932	1					
ANR	3168947	Identifier	_php_mb_allocators_prealloc		3168932	2					
ANR	3168948	ParameterList	"void * ptr , unsigned int sz"		3168932	3					
ANR	3168949	Parameter	void * ptr	653:41:19700:19708	3168932	0	True				
ANR	3168950	ParameterType	void *		3168932	0					
ANR	3168951	Identifier	ptr		3168932	1					
ANR	3168952	Parameter	unsigned int sz	653:52:19711:19725	3168932	1	True				
ANR	3168953	ParameterType	unsigned int		3168932	0					
ANR	3168954	Identifier	sz		3168932	1					
ANR	3168955	CFGEntryNode	ENTRY		3168932		True				
ANR	3168956	CFGExitNode	EXIT		3168932		True				
ANR	3168957	Symbol	sz		3168932						
ANR	3168958	Symbol	perealloc		3168932						
ANR	3168959	Symbol	ptr		3168932						
ANR	3168960	Function	_php_mb_allocators_pfree	658:0:19764:19831							
ANR	3168961	FunctionDef	_php_mb_allocators_pfree (void * ptr)		3168960	0					
ANR	3168962	CompoundStatement		659:0:19812:19831	3168960	0					
ANR	3168963	ExpressionStatement	"pefree ( ptr , 1 )"	660:1:19815:19829	3168960	0	True				
ANR	3168964	CallExpression	"pefree ( ptr , 1 )"		3168960	0					
ANR	3168965	Callee	pefree		3168960	0					
ANR	3168966	Identifier	pefree		3168960	0					
ANR	3168967	ArgumentList	ptr		3168960	1					
ANR	3168968	Argument	ptr		3168960	0					
ANR	3168969	Identifier	ptr		3168960	0					
ANR	3168970	Argument	1		3168960	1					
ANR	3168971	PrimaryExpression	1		3168960	0					
ANR	3168972	ReturnType	static void		3168960	1					
ANR	3168973	Identifier	_php_mb_allocators_pfree		3168960	2					
ANR	3168974	ParameterList	void * ptr		3168960	3					
ANR	3168975	Parameter	void * ptr	658:37:19801:19809	3168960	0	True				
ANR	3168976	ParameterType	void *		3168960	0					
ANR	3168977	Identifier	ptr		3168960	1					
ANR	3168978	CFGEntryNode	ENTRY		3168960		True				
ANR	3168979	CFGExitNode	EXIT		3168960		True				
ANR	3168980	Symbol	ptr		3168960						
ANR	3168981	DeclStmt									
ANR	3168982	Decl							mbfl_allocators	mbfl_allocators	_php_mb_allocators
ANR	3168983	DeclStmt									
ANR	3168984	Decl							sapi_post_entry	sapi_post_entry [ ]	mbstr_post_entries
ANR	3168985	Function	php_mb_parse_encoding_list	687:0:20689:23265							
ANR	3168986	FunctionDef	"php_mb_parse_encoding_list (const char * value , size_t value_length , const mbfl_encoding * * * return_list , size_t * return_size , int persistent)"		3168985	0					
ANR	3168987	CompoundStatement		689:0:20840:23265	3168985	0					
ANR	3168988	IdentifierDeclStatement	"int size , bauto , ret = SUCCESS ;"	690:1:20843:20873	3168985	0	True				
ANR	3168989	IdentifierDecl	size		3168985	0					
ANR	3168990	IdentifierDeclType	int		3168985	0					
ANR	3168991	Identifier	size		3168985	1					
ANR	3168992	IdentifierDecl	bauto		3168985	1					
ANR	3168993	IdentifierDeclType	int		3168985	0					
ANR	3168994	Identifier	bauto		3168985	1					
ANR	3168995	IdentifierDecl	ret = SUCCESS		3168985	2					
ANR	3168996	IdentifierDeclType	int		3168985	0					
ANR	3168997	Identifier	ret		3168985	1					
ANR	3168998	AssignmentExpression	ret = SUCCESS		3168985	2		=			
ANR	3168999	Identifier	SUCCESS		3168985	0					
ANR	3169000	Identifier	SUCCESS		3168985	1					
ANR	3169001	IdentifierDeclStatement	size_t n ;	691:1:20876:20884	3168985	1	True				
ANR	3169002	IdentifierDecl	n		3168985	0					
ANR	3169003	IdentifierDeclType	size_t		3168985	0					
ANR	3169004	Identifier	n		3168985	1					
ANR	3169005	IdentifierDeclStatement	"char * p , * p1 , * p2 , * endp , * tmpstr ;"	692:1:20887:20920	3168985	2	True				
ANR	3169006	IdentifierDecl	* p		3168985	0					
ANR	3169007	IdentifierDeclType	char *		3168985	0					
ANR	3169008	Identifier	p		3168985	1					
ANR	3169009	IdentifierDecl	* p1		3168985	1					
ANR	3169010	IdentifierDeclType	char *		3168985	0					
ANR	3169011	Identifier	p1		3168985	1					
ANR	3169012	IdentifierDecl	* p2		3168985	2					
ANR	3169013	IdentifierDeclType	char *		3168985	0					
ANR	3169014	Identifier	p2		3168985	1					
ANR	3169015	IdentifierDecl	* endp		3168985	3					
ANR	3169016	IdentifierDeclType	char *		3168985	0					
ANR	3169017	Identifier	endp		3168985	1					
ANR	3169018	IdentifierDecl	* tmpstr		3168985	4					
ANR	3169019	IdentifierDeclType	char *		3168985	0					
ANR	3169020	Identifier	tmpstr		3168985	1					
ANR	3169021	IdentifierDeclStatement	"const mbfl_encoding * * entry , * * list ;"	693:1:20923:20958	3168985	3	True				
ANR	3169022	IdentifierDecl	* * entry		3168985	0					
ANR	3169023	IdentifierDeclType	const mbfl_encoding * *		3168985	0					
ANR	3169024	Identifier	entry		3168985	1					
ANR	3169025	IdentifierDecl	* * list		3168985	1					
ANR	3169026	IdentifierDeclType	const mbfl_encoding * *		3168985	0					
ANR	3169027	Identifier	list		3168985	1					
ANR	3169028	ExpressionStatement	list = NULL	695:1:20962:20973	3168985	4	True				
ANR	3169029	AssignmentExpression	list = NULL		3168985	0		=			
ANR	3169030	Identifier	list		3168985	0					
ANR	3169031	Identifier	NULL		3168985	1					
ANR	3169032	IfStatement	if ( value == NULL || value_length <= 0 )		3168985	5					
ANR	3169033	Condition	value == NULL || value_length <= 0	696:5:20980:21013	3168985	0	True				
ANR	3169034	OrExpression	value == NULL || value_length <= 0		3168985	0		||			
ANR	3169035	EqualityExpression	value == NULL		3168985	0		==			
ANR	3169036	Identifier	value		3168985	0					
ANR	3169037	Identifier	NULL		3168985	1					
ANR	3169038	RelationalExpression	value_length <= 0		3168985	1		<=			
ANR	3169039	Identifier	value_length		3168985	0					
ANR	3169040	PrimaryExpression	0		3168985	1					
ANR	3169041	CompoundStatement		8:41:175:175	3168985	1					
ANR	3169042	IfStatement	if ( return_list )		3168985	0					
ANR	3169043	Condition	return_list	697:6:21024:21034	3168985	0	True				
ANR	3169044	Identifier	return_list		3168985	0					
ANR	3169045	CompoundStatement		9:19:196:196	3168985	1					
ANR	3169046	ExpressionStatement	* return_list = NULL	698:3:21042:21061	3168985	0	True				
ANR	3169047	AssignmentExpression	* return_list = NULL		3168985	0		=			
ANR	3169048	UnaryOperationExpression	* return_list		3168985	0					
ANR	3169049	UnaryOperator	*		3168985	0					
ANR	3169050	Identifier	return_list		3168985	1					
ANR	3169051	Identifier	NULL		3168985	1					
ANR	3169052	IfStatement	if ( return_size )		3168985	1					
ANR	3169053	Condition	return_size	700:6:21073:21083	3168985	0	True				
ANR	3169054	Identifier	return_size		3168985	0					
ANR	3169055	CompoundStatement		12:19:245:245	3168985	1					
ANR	3169056	ExpressionStatement	* return_size = 0	701:3:21091:21107	3168985	0	True				
ANR	3169057	AssignmentExpression	* return_size = 0		3168985	0		=			
ANR	3169058	UnaryOperationExpression	* return_size		3168985	0					
ANR	3169059	UnaryOperator	*		3168985	0					
ANR	3169060	Identifier	return_size		3168985	1					
ANR	3169061	PrimaryExpression	0		3168985	1					
ANR	3169062	ReturnStatement	return FAILURE ;	703:2:21115:21129	3168985	2	True				
ANR	3169063	Identifier	FAILURE		3168985	0					
ANR	3169064	ElseStatement	else		3168985	0					
ANR	3169065	CompoundStatement		16:8:298:298	3168985	0					
ANR	3169066	IfStatement	"if ( value [ 0 ] == '""' && value [ value_length - 1 ] == '""' && value_length > 2 )"		3168985	0					
ANR	3169067	Condition	"value [ 0 ] == '""' && value [ value_length - 1 ] == '""' && value_length > 2"	706:6:21186:21246	3168985	0	True				
ANR	3169068	AndExpression	"value [ 0 ] == '""' && value [ value_length - 1 ] == '""' && value_length > 2"		3168985	0		&&			
ANR	3169069	EqualityExpression	"value [ 0 ] == '""'"		3168985	0		==			
ANR	3169070	ArrayIndexing	value [ 0 ]		3168985	0					
ANR	3169071	Identifier	value		3168985	0					
ANR	3169072	PrimaryExpression	0		3168985	1					
ANR	3169073	PrimaryExpression	"'""'"		3168985	1					
ANR	3169074	AndExpression	"value [ value_length - 1 ] == '""' && value_length > 2"		3168985	1		&&			
ANR	3169075	EqualityExpression	"value [ value_length - 1 ] == '""'"		3168985	0		==			
ANR	3169076	ArrayIndexing	value [ value_length - 1 ]		3168985	0					
ANR	3169077	Identifier	value		3168985	0					
ANR	3169078	AdditiveExpression	value_length - 1		3168985	1		-			
ANR	3169079	Identifier	value_length		3168985	0					
ANR	3169080	PrimaryExpression	1		3168985	1					
ANR	3169081	PrimaryExpression	"'""'"		3168985	1					
ANR	3169082	RelationalExpression	value_length > 2		3168985	1		>			
ANR	3169083	Identifier	value_length		3168985	0					
ANR	3169084	PrimaryExpression	2		3168985	1					
ANR	3169085	CompoundStatement		18:69:408:408	3168985	1					
ANR	3169086	ExpressionStatement	"tmpstr = ( char * ) estrndup ( value + 1 , value_length - 2 )"	707:3:21254:21304	3168985	0	True				
ANR	3169087	AssignmentExpression	"tmpstr = ( char * ) estrndup ( value + 1 , value_length - 2 )"		3168985	0		=			
ANR	3169088	Identifier	tmpstr		3168985	0					
ANR	3169089	CastExpression	"( char * ) estrndup ( value + 1 , value_length - 2 )"		3168985	1					
ANR	3169090	CastTarget	char *		3168985	0					
ANR	3169091	CallExpression	"estrndup ( value + 1 , value_length - 2 )"		3168985	1					
ANR	3169092	Callee	estrndup		3168985	0					
ANR	3169093	Identifier	estrndup		3168985	0					
ANR	3169094	ArgumentList	value + 1		3168985	1					
ANR	3169095	Argument	value + 1		3168985	0					
ANR	3169096	AdditiveExpression	value + 1		3168985	0		+			
ANR	3169097	Identifier	value		3168985	0					
ANR	3169098	PrimaryExpression	1		3168985	1					
ANR	3169099	Argument	value_length - 2		3168985	1					
ANR	3169100	AdditiveExpression	value_length - 2		3168985	0		-			
ANR	3169101	Identifier	value_length		3168985	0					
ANR	3169102	PrimaryExpression	2		3168985	1					
ANR	3169103	ExpressionStatement	value_length -= 2	708:3:21309:21326	3168985	1	True				
ANR	3169104	AssignmentExpression	value_length -= 2		3168985	0		-=			
ANR	3169105	Identifier	value_length		3168985	0					
ANR	3169106	PrimaryExpression	2		3168985	1					
ANR	3169107	ElseStatement	else		3168985	0					
ANR	3169108	ExpressionStatement	"tmpstr = ( char * ) estrndup ( value , value_length )"	711:3:21342:21388	3168985	0	True				
ANR	3169109	AssignmentExpression	"tmpstr = ( char * ) estrndup ( value , value_length )"		3168985	0		=			
ANR	3169110	Identifier	tmpstr		3168985	0					
ANR	3169111	CastExpression	"( char * ) estrndup ( value , value_length )"		3168985	1					
ANR	3169112	CastTarget	char *		3168985	0					
ANR	3169113	CallExpression	"estrndup ( value , value_length )"		3168985	1					
ANR	3169114	Callee	estrndup		3168985	0					
ANR	3169115	Identifier	estrndup		3168985	0					
ANR	3169116	ArgumentList	value		3168985	1					
ANR	3169117	Argument	value		3168985	0					
ANR	3169118	Identifier	value		3168985	0					
ANR	3169119	Argument	value_length		3168985	1					
ANR	3169120	Identifier	value_length		3168985	0					
ANR	3169121	IfStatement	if ( tmpstr == NULL )		3168985	1					
ANR	3169122	Condition	tmpstr == NULL	712:6:21396:21409	3168985	0	True				
ANR	3169123	EqualityExpression	tmpstr == NULL		3168985	0		==			
ANR	3169124	Identifier	tmpstr		3168985	0					
ANR	3169125	Identifier	NULL		3168985	1					
ANR	3169126	CompoundStatement		24:22:571:571	3168985	1					
ANR	3169127	ReturnStatement	return FAILURE ;	713:3:21417:21431	3168985	0	True				
ANR	3169128	Identifier	FAILURE		3168985	0					
ANR	3169129	ExpressionStatement	endp = tmpstr + value_length	716:2:21489:21517	3168985	2	True				
ANR	3169130	AssignmentExpression	endp = tmpstr + value_length		3168985	0		=			
ANR	3169131	Identifier	endp		3168985	0					
ANR	3169132	AdditiveExpression	tmpstr + value_length		3168985	1		+			
ANR	3169133	Identifier	tmpstr		3168985	0					
ANR	3169134	Identifier	value_length		3168985	1					
ANR	3169135	ExpressionStatement	n = 1	717:2:21521:21526	3168985	3	True				
ANR	3169136	AssignmentExpression	n = 1		3168985	0		=			
ANR	3169137	Identifier	n		3168985	0					
ANR	3169138	PrimaryExpression	1		3168985	1					
ANR	3169139	ExpressionStatement	p1 = tmpstr	718:2:21530:21541	3168985	4	True				
ANR	3169140	AssignmentExpression	p1 = tmpstr		3168985	0		=			
ANR	3169141	Identifier	p1		3168985	0					
ANR	3169142	Identifier	tmpstr		3168985	1					
ANR	3169143	WhileStatement	"while ( ( p2 = ( char * ) php_memnstr ( p1 , "","" , 1 , endp ) ) != NULL )"		3168985	5					
ANR	3169144	Condition	"( p2 = ( char * ) php_memnstr ( p1 , "","" , 1 , endp ) ) != NULL"	719:9:21552:21602	3168985	0	True				
ANR	3169145	EqualityExpression	"( p2 = ( char * ) php_memnstr ( p1 , "","" , 1 , endp ) ) != NULL"		3168985	0		!=			
ANR	3169146	AssignmentExpression	"p2 = ( char * ) php_memnstr ( p1 , "","" , 1 , endp )"		3168985	0		=			
ANR	3169147	Identifier	p2		3168985	0					
ANR	3169148	CastExpression	"( char * ) php_memnstr ( p1 , "","" , 1 , endp )"		3168985	1					
ANR	3169149	CastTarget	char *		3168985	0					
ANR	3169150	CallExpression	"php_memnstr ( p1 , "","" , 1 , endp )"		3168985	1					
ANR	3169151	Callee	php_memnstr		3168985	0					
ANR	3169152	Identifier	php_memnstr		3168985	0					
ANR	3169153	ArgumentList	p1		3168985	1					
ANR	3169154	Argument	p1		3168985	0					
ANR	3169155	Identifier	p1		3168985	0					
ANR	3169156	Argument	""","""		3168985	1					
ANR	3169157	PrimaryExpression	""","""		3168985	0					
ANR	3169158	Argument	1		3168985	2					
ANR	3169159	PrimaryExpression	1		3168985	0					
ANR	3169160	Argument	endp		3168985	3					
ANR	3169161	Identifier	endp		3168985	0					
ANR	3169162	Identifier	NULL		3168985	1					
ANR	3169163	CompoundStatement		31:62:764:764	3168985	1					
ANR	3169164	ExpressionStatement	p1 = p2 + 1	720:3:21610:21621	3168985	0	True				
ANR	3169165	AssignmentExpression	p1 = p2 + 1		3168985	0		=			
ANR	3169166	Identifier	p1		3168985	0					
ANR	3169167	AdditiveExpression	p2 + 1		3168985	1		+			
ANR	3169168	Identifier	p2		3168985	0					
ANR	3169169	PrimaryExpression	1		3168985	1					
ANR	3169170	ExpressionStatement	n ++	721:3:21626:21629	3168985	1	True				
ANR	3169171	PostIncDecOperationExpression	n ++		3168985	0					
ANR	3169172	Identifier	n		3168985	0					
ANR	3169173	IncDec	++		3168985	1					
ANR	3169174	ExpressionStatement	size = n + MBSTRG ( default_detect_order_list_size )	723:2:21637:21686	3168985	6	True				
ANR	3169175	AssignmentExpression	size = n + MBSTRG ( default_detect_order_list_size )		3168985	0		=			
ANR	3169176	Identifier	size		3168985	0					
ANR	3169177	AdditiveExpression	n + MBSTRG ( default_detect_order_list_size )		3168985	1		+			
ANR	3169178	Identifier	n		3168985	0					
ANR	3169179	CallExpression	MBSTRG ( default_detect_order_list_size )		3168985	1					
ANR	3169180	Callee	MBSTRG		3168985	0					
ANR	3169181	Identifier	MBSTRG		3168985	0					
ANR	3169182	ArgumentList	default_detect_order_list_size		3168985	1					
ANR	3169183	Argument	default_detect_order_list_size		3168985	0					
ANR	3169184	Identifier	default_detect_order_list_size		3168985	0					
ANR	3169185	ExpressionStatement	"list = ( const mbfl_encoding * * ) pecalloc ( size , sizeof ( mbfl_encoding * ) , persistent )"	725:2:21708:21789	3168985	7	True				
ANR	3169186	AssignmentExpression	"list = ( const mbfl_encoding * * ) pecalloc ( size , sizeof ( mbfl_encoding * ) , persistent )"		3168985	0		=			
ANR	3169187	Identifier	list		3168985	0					
ANR	3169188	CastExpression	"( const mbfl_encoding * * ) pecalloc ( size , sizeof ( mbfl_encoding * ) , persistent )"		3168985	1					
ANR	3169189	CastTarget	const mbfl_encoding * *		3168985	0					
ANR	3169190	CallExpression	"pecalloc ( size , sizeof ( mbfl_encoding * ) , persistent )"		3168985	1					
ANR	3169191	Callee	pecalloc		3168985	0					
ANR	3169192	Identifier	pecalloc		3168985	0					
ANR	3169193	ArgumentList	size		3168985	1					
ANR	3169194	Argument	size		3168985	0					
ANR	3169195	Identifier	size		3168985	0					
ANR	3169196	Argument	sizeof ( mbfl_encoding * )		3168985	1					
ANR	3169197	SizeofExpression	sizeof ( mbfl_encoding * )		3168985	0					
ANR	3169198	Sizeof	sizeof		3168985	0					
ANR	3169199	SizeofOperand	mbfl_encoding *		3168985	1					
ANR	3169200	Argument	persistent		3168985	2					
ANR	3169201	Identifier	persistent		3168985	0					
ANR	3169202	IfStatement	if ( list != NULL )		3168985	8					
ANR	3169203	Condition	list != NULL	726:6:21797:21808	3168985	0	True				
ANR	3169204	EqualityExpression	list != NULL		3168985	0		!=			
ANR	3169205	Identifier	list		3168985	0					
ANR	3169206	Identifier	NULL		3168985	1					
ANR	3169207	CompoundStatement		38:20:970:970	3168985	1					
ANR	3169208	ExpressionStatement	entry = list	727:3:21816:21828	3168985	0	True				
ANR	3169209	AssignmentExpression	entry = list		3168985	0		=			
ANR	3169210	Identifier	entry		3168985	0					
ANR	3169211	Identifier	list		3168985	1					
ANR	3169212	ExpressionStatement	n = 0	728:3:21833:21838	3168985	1	True				
ANR	3169213	AssignmentExpression	n = 0		3168985	0		=			
ANR	3169214	Identifier	n		3168985	0					
ANR	3169215	PrimaryExpression	0		3168985	1					
ANR	3169216	ExpressionStatement	bauto = 0	729:3:21843:21852	3168985	2	True				
ANR	3169217	AssignmentExpression	bauto = 0		3168985	0		=			
ANR	3169218	Identifier	bauto		3168985	0					
ANR	3169219	PrimaryExpression	0		3168985	1					
ANR	3169220	ExpressionStatement	p1 = tmpstr	730:3:21857:21868	3168985	3	True				
ANR	3169221	AssignmentExpression	p1 = tmpstr		3168985	0		=			
ANR	3169222	Identifier	p1		3168985	0					
ANR	3169223	Identifier	tmpstr		3168985	1					
ANR	3169224	DoStatement	do		3168985	4					
ANR	3169225	CompoundStatement		43:6:1035:1035	3168985	0					
ANR	3169226	ExpressionStatement	"p2 = p = ( char * ) php_memnstr ( p1 , "","" , 1 , endp )"	732:4:21882:21927	3168985	0	True				
ANR	3169227	AssignmentExpression	"p2 = p = ( char * ) php_memnstr ( p1 , "","" , 1 , endp )"		3168985	0		=			
ANR	3169228	Identifier	p2		3168985	0					
ANR	3169229	AssignmentExpression	"p = ( char * ) php_memnstr ( p1 , "","" , 1 , endp )"		3168985	1		=			
ANR	3169230	Identifier	p		3168985	0					
ANR	3169231	CastExpression	"( char * ) php_memnstr ( p1 , "","" , 1 , endp )"		3168985	1					
ANR	3169232	CastTarget	char *		3168985	0					
ANR	3169233	CallExpression	"php_memnstr ( p1 , "","" , 1 , endp )"		3168985	1					
ANR	3169234	Callee	php_memnstr		3168985	0					
ANR	3169235	Identifier	php_memnstr		3168985	0					
ANR	3169236	ArgumentList	p1		3168985	1					
ANR	3169237	Argument	p1		3168985	0					
ANR	3169238	Identifier	p1		3168985	0					
ANR	3169239	Argument	""","""		3168985	1					
ANR	3169240	PrimaryExpression	""","""		3168985	0					
ANR	3169241	Argument	1		3168985	2					
ANR	3169242	PrimaryExpression	1		3168985	0					
ANR	3169243	Argument	endp		3168985	3					
ANR	3169244	Identifier	endp		3168985	0					
ANR	3169245	IfStatement	if ( p == NULL )		3168985	1					
ANR	3169246	Condition	p == NULL	733:8:21937:21945	3168985	0	True				
ANR	3169247	EqualityExpression	p == NULL		3168985	0		==			
ANR	3169248	Identifier	p		3168985	0					
ANR	3169249	Identifier	NULL		3168985	1					
ANR	3169250	CompoundStatement		45:19:1107:1107	3168985	1					
ANR	3169251	ExpressionStatement	p = endp	734:5:21955:21963	3168985	0	True				
ANR	3169252	AssignmentExpression	p = endp		3168985	0		=			
ANR	3169253	Identifier	p		3168985	0					
ANR	3169254	Identifier	endp		3168985	1					
ANR	3169255	ExpressionStatement	* p = '\\0'	736:4:21975:21984	3168985	2	True				
ANR	3169256	AssignmentExpression	* p = '\\0'		3168985	0		=			
ANR	3169257	UnaryOperationExpression	* p		3168985	0					
ANR	3169258	UnaryOperator	*		3168985	0					
ANR	3169259	Identifier	p		3168985	1					
ANR	3169260	PrimaryExpression	'\\0'		3168985	1					
ANR	3169261	WhileStatement	while ( p1 < p && ( * p1 == ' ' || * p1 == '\\t' ) )		3168985	3					
ANR	3169262	Condition	p1 < p && ( * p1 == ' ' || * p1 == '\\t' )	738:11:22019:22055	3168985	0	True				
ANR	3169263	AndExpression	p1 < p && ( * p1 == ' ' || * p1 == '\\t' )		3168985	0		&&			
ANR	3169264	RelationalExpression	p1 < p		3168985	0		<			
ANR	3169265	Identifier	p1		3168985	0					
ANR	3169266	Identifier	p		3168985	1					
ANR	3169267	OrExpression	* p1 == ' ' || * p1 == '\\t'		3168985	1		||			
ANR	3169268	EqualityExpression	* p1 == ' '		3168985	0		==			
ANR	3169269	UnaryOperationExpression	* p1		3168985	0					
ANR	3169270	UnaryOperator	*		3168985	0					
ANR	3169271	Identifier	p1		3168985	1					
ANR	3169272	PrimaryExpression	' '		3168985	1					
ANR	3169273	EqualityExpression	* p1 == '\\t'		3168985	1		==			
ANR	3169274	UnaryOperationExpression	* p1		3168985	0					
ANR	3169275	UnaryOperator	*		3168985	0					
ANR	3169276	Identifier	p1		3168985	1					
ANR	3169277	PrimaryExpression	'\\t'		3168985	1					
ANR	3169278	CompoundStatement		50:50:1217:1217	3168985	1					
ANR	3169279	ExpressionStatement	p1 ++	739:5:22065:22069	3168985	0	True				
ANR	3169280	PostIncDecOperationExpression	p1 ++		3168985	0					
ANR	3169281	Identifier	p1		3168985	0					
ANR	3169282	IncDec	++		3168985	1					
ANR	3169283	ExpressionStatement	p --	741:4:22081:22084	3168985	4	True				
ANR	3169284	PostIncDecOperationExpression	p --		3168985	0					
ANR	3169285	Identifier	p		3168985	0					
ANR	3169286	IncDec	--		3168985	1					
ANR	3169287	WhileStatement	while ( p > p1 && ( * p == ' ' || * p == '\\t' ) )		3168985	5					
ANR	3169288	Condition	p > p1 && ( * p == ' ' || * p == '\\t' )	742:11:22097:22131	3168985	0	True				
ANR	3169289	AndExpression	p > p1 && ( * p == ' ' || * p == '\\t' )		3168985	0		&&			
ANR	3169290	RelationalExpression	p > p1		3168985	0		>			
ANR	3169291	Identifier	p		3168985	0					
ANR	3169292	Identifier	p1		3168985	1					
ANR	3169293	OrExpression	* p == ' ' || * p == '\\t'		3168985	1		||			
ANR	3169294	EqualityExpression	* p == ' '		3168985	0		==			
ANR	3169295	UnaryOperationExpression	* p		3168985	0					
ANR	3169296	UnaryOperator	*		3168985	0					
ANR	3169297	Identifier	p		3168985	1					
ANR	3169298	PrimaryExpression	' '		3168985	1					
ANR	3169299	EqualityExpression	* p == '\\t'		3168985	1		==			
ANR	3169300	UnaryOperationExpression	* p		3168985	0					
ANR	3169301	UnaryOperator	*		3168985	0					
ANR	3169302	Identifier	p		3168985	1					
ANR	3169303	PrimaryExpression	'\\t'		3168985	1					
ANR	3169304	CompoundStatement		54:48:1293:1293	3168985	1					
ANR	3169305	ExpressionStatement	* p = '\\0'	743:5:22141:22150	3168985	0	True				
ANR	3169306	AssignmentExpression	* p = '\\0'		3168985	0		=			
ANR	3169307	UnaryOperationExpression	* p		3168985	0					
ANR	3169308	UnaryOperator	*		3168985	0					
ANR	3169309	Identifier	p		3168985	1					
ANR	3169310	PrimaryExpression	'\\0'		3168985	1					
ANR	3169311	ExpressionStatement	p --	744:5:22157:22160	3168985	1	True				
ANR	3169312	PostIncDecOperationExpression	p --		3168985	0					
ANR	3169313	Identifier	p		3168985	0					
ANR	3169314	IncDec	--		3168985	1					
ANR	3169315	IfStatement	"if ( strcasecmp ( p1 , ""auto"" ) == 0 )"		3168985	6					
ANR	3169316	Condition	"strcasecmp ( p1 , ""auto"" ) == 0"	747:8:22236:22262	3168985	0	True				
ANR	3169317	EqualityExpression	"strcasecmp ( p1 , ""auto"" ) == 0"		3168985	0		==			
ANR	3169318	CallExpression	"strcasecmp ( p1 , ""auto"" )"		3168985	0					
ANR	3169319	Callee	strcasecmp		3168985	0					
ANR	3169320	Identifier	strcasecmp		3168985	0					
ANR	3169321	ArgumentList	p1		3168985	1					
ANR	3169322	Argument	p1		3168985	0					
ANR	3169323	Identifier	p1		3168985	0					
ANR	3169324	Argument	"""auto"""		3168985	1					
ANR	3169325	PrimaryExpression	"""auto"""		3168985	0					
ANR	3169326	PrimaryExpression	0		3168985	1					
ANR	3169327	CompoundStatement		59:37:1424:1424	3168985	1					
ANR	3169328	IfStatement	if ( ! bauto )		3168985	0					
ANR	3169329	Condition	! bauto	748:9:22276:22281	3168985	0	True				
ANR	3169330	UnaryOperationExpression	! bauto		3168985	0					
ANR	3169331	UnaryOperator	!		3168985	0					
ANR	3169332	Identifier	bauto		3168985	1					
ANR	3169333	CompoundStatement		63:6:1607:1615	3168985	1					
ANR	3169334	IdentifierDeclStatement	const enum mbfl_no_encoding * src = MBSTRG ( default_detect_order_list ) ;	749:6:22292:22360	3168985	0	True				
ANR	3169335	IdentifierDecl	* src = MBSTRG ( default_detect_order_list )		3168985	0					
ANR	3169336	IdentifierDeclType	const enum mbfl_no_encoding *		3168985	0					
ANR	3169337	Identifier	src		3168985	1					
ANR	3169338	AssignmentExpression	* src = MBSTRG ( default_detect_order_list )		3168985	2		=			
ANR	3169339	Identifier	src		3168985	0					
ANR	3169340	CallExpression	MBSTRG ( default_detect_order_list )		3168985	1					
ANR	3169341	Callee	MBSTRG		3168985	0					
ANR	3169342	Identifier	MBSTRG		3168985	0					
ANR	3169343	ArgumentList	default_detect_order_list		3168985	1					
ANR	3169344	Argument	default_detect_order_list		3168985	0					
ANR	3169345	Identifier	default_detect_order_list		3168985	0					
ANR	3169346	IdentifierDeclStatement	const size_t identify_list_size = MBSTRG ( default_detect_order_list_size ) ;	750:6:22368:22440	3168985	1	True				
ANR	3169347	IdentifierDecl	identify_list_size = MBSTRG ( default_detect_order_list_size )		3168985	0					
ANR	3169348	IdentifierDeclType	const size_t		3168985	0					
ANR	3169349	Identifier	identify_list_size		3168985	1					
ANR	3169350	AssignmentExpression	identify_list_size = MBSTRG ( default_detect_order_list_size )		3168985	2		=			
ANR	3169351	Identifier	identify_list_size		3168985	0					
ANR	3169352	CallExpression	MBSTRG ( default_detect_order_list_size )		3168985	1					
ANR	3169353	Callee	MBSTRG		3168985	0					
ANR	3169354	Identifier	MBSTRG		3168985	0					
ANR	3169355	ArgumentList	default_detect_order_list_size		3168985	1					
ANR	3169356	Argument	default_detect_order_list_size		3168985	0					
ANR	3169357	Identifier	default_detect_order_list_size		3168985	0					
ANR	3169358	IdentifierDeclStatement	size_t i ;	751:6:22448:22456	3168985	2	True				
ANR	3169359	IdentifierDecl	i		3168985	0					
ANR	3169360	IdentifierDeclType	size_t		3168985	0					
ANR	3169361	Identifier	i		3168985	1					
ANR	3169362	ExpressionStatement	bauto = 1	752:6:22464:22473	3168985	3	True				
ANR	3169363	AssignmentExpression	bauto = 1		3168985	0		=			
ANR	3169364	Identifier	bauto		3168985	0					
ANR	3169365	PrimaryExpression	1		3168985	1					
ANR	3169366	ForStatement	for ( i = 0 ; i < identify_list_size ; i ++ )		3168985	4					
ANR	3169367	ForInit	i = 0 ;	753:11:22486:22491	3168985	0	True				
ANR	3169368	AssignmentExpression	i = 0		3168985	0		=			
ANR	3169369	Identifier	i		3168985	0					
ANR	3169370	PrimaryExpression	0		3168985	1					
ANR	3169371	Condition	i < identify_list_size	753:18:22493:22514	3168985	1	True				
ANR	3169372	RelationalExpression	i < identify_list_size		3168985	0		<			
ANR	3169373	Identifier	i		3168985	0					
ANR	3169374	Identifier	identify_list_size		3168985	1					
ANR	3169375	PostIncDecOperationExpression	i ++	753:42:22517:22519	3168985	2	True				
ANR	3169376	Identifier	i		3168985	0					
ANR	3169377	IncDec	++		3168985	1					
ANR	3169378	CompoundStatement		65:47:1681:1681	3168985	3					
ANR	3169379	ExpressionStatement	* entry ++ = mbfl_no2encoding ( * src ++ )	754:7:22531:22566	3168985	0	True				
ANR	3169380	AssignmentExpression	* entry ++ = mbfl_no2encoding ( * src ++ )		3168985	0		=			
ANR	3169381	UnaryOperationExpression	* entry ++		3168985	0					
ANR	3169382	UnaryOperator	*		3168985	0					
ANR	3169383	PostIncDecOperationExpression	entry ++		3168985	1					
ANR	3169384	Identifier	entry		3168985	0					
ANR	3169385	IncDec	++		3168985	1					
ANR	3169386	CallExpression	mbfl_no2encoding ( * src ++ )		3168985	1					
ANR	3169387	Callee	mbfl_no2encoding		3168985	0					
ANR	3169388	Identifier	mbfl_no2encoding		3168985	0					
ANR	3169389	ArgumentList	* src ++		3168985	1					
ANR	3169390	Argument	* src ++		3168985	0					
ANR	3169391	UnaryOperationExpression	* src ++		3168985	0					
ANR	3169392	UnaryOperator	*		3168985	0					
ANR	3169393	PostIncDecOperationExpression	src ++		3168985	1					
ANR	3169394	Identifier	src		3168985	0					
ANR	3169395	IncDec	++		3168985	1					
ANR	3169396	ExpressionStatement	n ++	755:7:22575:22578	3168985	1	True				
ANR	3169397	PostIncDecOperationExpression	n ++		3168985	0					
ANR	3169398	Identifier	n		3168985	0					
ANR	3169399	IncDec	++		3168985	1					
ANR	3169400	ElseStatement	else		3168985	0					
ANR	3169401	CompoundStatement		71:5:1772:1826	3168985	0					
ANR	3169402	IdentifierDeclStatement	const mbfl_encoding * encoding = mbfl_name2encoding ( p1 ) ;	759:5:22613:22667	3168985	0	True				
ANR	3169403	IdentifierDecl	* encoding = mbfl_name2encoding ( p1 )		3168985	0					
ANR	3169404	IdentifierDeclType	const mbfl_encoding *		3168985	0					
ANR	3169405	Identifier	encoding		3168985	1					
ANR	3169406	AssignmentExpression	* encoding = mbfl_name2encoding ( p1 )		3168985	2		=			
ANR	3169407	Identifier	encoding		3168985	0					
ANR	3169408	CallExpression	mbfl_name2encoding ( p1 )		3168985	1					
ANR	3169409	Callee	mbfl_name2encoding		3168985	0					
ANR	3169410	Identifier	mbfl_name2encoding		3168985	0					
ANR	3169411	ArgumentList	p1		3168985	1					
ANR	3169412	Argument	p1		3168985	0					
ANR	3169413	Identifier	p1		3168985	0					
ANR	3169414	IfStatement	if ( encoding )		3168985	1					
ANR	3169415	Condition	encoding	760:9:22678:22685	3168985	0	True				
ANR	3169416	Identifier	encoding		3168985	0					
ANR	3169417	CompoundStatement		72:19:1847:1847	3168985	1					
ANR	3169418	ExpressionStatement	* entry ++ = encoding	761:6:22696:22715	3168985	0	True				
ANR	3169419	AssignmentExpression	* entry ++ = encoding		3168985	0		=			
ANR	3169420	UnaryOperationExpression	* entry ++		3168985	0					
ANR	3169421	UnaryOperator	*		3168985	0					
ANR	3169422	PostIncDecOperationExpression	entry ++		3168985	1					
ANR	3169423	Identifier	entry		3168985	0					
ANR	3169424	IncDec	++		3168985	1					
ANR	3169425	Identifier	encoding		3168985	1					
ANR	3169426	ExpressionStatement	n ++	762:6:22723:22726	3168985	1	True				
ANR	3169427	PostIncDecOperationExpression	n ++		3168985	0					
ANR	3169428	Identifier	n		3168985	0					
ANR	3169429	IncDec	++		3168985	1					
ANR	3169430	ElseStatement	else		3168985	0					
ANR	3169431	CompoundStatement		75:12:1899:1899	3168985	0					
ANR	3169432	ExpressionStatement	ret = 0	764:6:22748:22755	3168985	0	True				
ANR	3169433	AssignmentExpression	ret = 0		3168985	0		=			
ANR	3169434	Identifier	ret		3168985	0					
ANR	3169435	PrimaryExpression	0		3168985	1					
ANR	3169436	ExpressionStatement	p1 = p2 + 1	767:4:22774:22785	3168985	7	True				
ANR	3169437	AssignmentExpression	p1 = p2 + 1		3168985	0		=			
ANR	3169438	Identifier	p1		3168985	0					
ANR	3169439	AdditiveExpression	p2 + 1		3168985	1		+			
ANR	3169440	Identifier	p2		3168985	0					
ANR	3169441	PrimaryExpression	1		3168985	1					
ANR	3169442	Condition	n < size && p2 != NULL	768:12:22799:22820	3168985	1	True				
ANR	3169443	AndExpression	n < size && p2 != NULL		3168985	0		&&			
ANR	3169444	RelationalExpression	n < size		3168985	0		<			
ANR	3169445	Identifier	n		3168985	0					
ANR	3169446	Identifier	size		3168985	1					
ANR	3169447	EqualityExpression	p2 != NULL		3168985	1		!=			
ANR	3169448	Identifier	p2		3168985	0					
ANR	3169449	Identifier	NULL		3168985	1					
ANR	3169450	IfStatement	if ( n > 0 )		3168985	5					
ANR	3169451	Condition	n > 0	769:7:22831:22835	3168985	0	True				
ANR	3169452	RelationalExpression	n > 0		3168985	0		>			
ANR	3169453	Identifier	n		3168985	0					
ANR	3169454	PrimaryExpression	0		3168985	1					
ANR	3169455	CompoundStatement		81:14:1997:1997	3168985	1					
ANR	3169456	IfStatement	if ( return_list )		3168985	0					
ANR	3169457	Condition	return_list	770:8:22848:22858	3168985	0	True				
ANR	3169458	Identifier	return_list		3168985	0					
ANR	3169459	CompoundStatement		82:21:2020:2020	3168985	1					
ANR	3169460	ExpressionStatement	* return_list = list	771:5:22868:22887	3168985	0	True				
ANR	3169461	AssignmentExpression	* return_list = list		3168985	0		=			
ANR	3169462	UnaryOperationExpression	* return_list		3168985	0					
ANR	3169463	UnaryOperator	*		3168985	0					
ANR	3169464	Identifier	return_list		3168985	1					
ANR	3169465	Identifier	list		3168985	1					
ANR	3169466	ElseStatement	else		3168985	0					
ANR	3169467	CompoundStatement		84:11:2059:2059	3168985	0					
ANR	3169468	ExpressionStatement	"pefree ( list , persistent )"	773:5:22907:22931	3168985	0	True				
ANR	3169469	CallExpression	"pefree ( list , persistent )"		3168985	0					
ANR	3169470	Callee	pefree		3168985	0					
ANR	3169471	Identifier	pefree		3168985	0					
ANR	3169472	ArgumentList	list		3168985	1					
ANR	3169473	Argument	list		3168985	0					
ANR	3169474	Identifier	list		3168985	0					
ANR	3169475	Argument	persistent		3168985	1					
ANR	3169476	Identifier	persistent		3168985	0					
ANR	3169477	ElseStatement	else		3168985	0					
ANR	3169478	CompoundStatement		87:10:2108:2108	3168985	0					
ANR	3169479	ExpressionStatement	"pefree ( list , persistent )"	776:4:22955:22979	3168985	0	True				
ANR	3169480	CallExpression	"pefree ( list , persistent )"		3168985	0					
ANR	3169481	Callee	pefree		3168985	0					
ANR	3169482	Identifier	pefree		3168985	0					
ANR	3169483	ArgumentList	list		3168985	1					
ANR	3169484	Argument	list		3168985	0					
ANR	3169485	Identifier	list		3168985	0					
ANR	3169486	Argument	persistent		3168985	1					
ANR	3169487	Identifier	persistent		3168985	0					
ANR	3169488	IfStatement	if ( return_list )		3168985	1					
ANR	3169489	Condition	return_list	777:8:22989:22999	3168985	0	True				
ANR	3169490	Identifier	return_list		3168985	0					
ANR	3169491	CompoundStatement		89:21:2161:2161	3168985	1					
ANR	3169492	ExpressionStatement	* return_list = NULL	778:5:23009:23028	3168985	0	True				
ANR	3169493	AssignmentExpression	* return_list = NULL		3168985	0		=			
ANR	3169494	UnaryOperationExpression	* return_list		3168985	0					
ANR	3169495	UnaryOperator	*		3168985	0					
ANR	3169496	Identifier	return_list		3168985	1					
ANR	3169497	Identifier	NULL		3168985	1					
ANR	3169498	ExpressionStatement	ret = 0	780:4:23040:23047	3168985	2	True				
ANR	3169499	AssignmentExpression	ret = 0		3168985	0		=			
ANR	3169500	Identifier	ret		3168985	0					
ANR	3169501	PrimaryExpression	0		3168985	1					
ANR	3169502	IfStatement	if ( return_size )		3168985	6					
ANR	3169503	Condition	return_size	782:7:23061:23071	3168985	0	True				
ANR	3169504	Identifier	return_size		3168985	0					
ANR	3169505	CompoundStatement		94:20:2233:2233	3168985	1					
ANR	3169506	ExpressionStatement	* return_size = n	783:4:23080:23096	3168985	0	True				
ANR	3169507	AssignmentExpression	* return_size = n		3168985	0		=			
ANR	3169508	UnaryOperationExpression	* return_size		3168985	0					
ANR	3169509	UnaryOperator	*		3168985	0					
ANR	3169510	Identifier	return_size		3168985	1					
ANR	3169511	Identifier	n		3168985	1					
ANR	3169512	ElseStatement	else		3168985	0					
ANR	3169513	CompoundStatement		97:9:2271:2271	3168985	0					
ANR	3169514	IfStatement	if ( return_list )		3168985	0					
ANR	3169515	Condition	return_list	786:7:23121:23131	3168985	0	True				
ANR	3169516	Identifier	return_list		3168985	0					
ANR	3169517	CompoundStatement		98:20:2293:2293	3168985	1					
ANR	3169518	ExpressionStatement	* return_list = NULL	787:4:23140:23159	3168985	0	True				
ANR	3169519	AssignmentExpression	* return_list = NULL		3168985	0		=			
ANR	3169520	UnaryOperationExpression	* return_list		3168985	0					
ANR	3169521	UnaryOperator	*		3168985	0					
ANR	3169522	Identifier	return_list		3168985	1					
ANR	3169523	Identifier	NULL		3168985	1					
ANR	3169524	IfStatement	if ( return_size )		3168985	1					
ANR	3169525	Condition	return_size	789:7:23173:23183	3168985	0	True				
ANR	3169526	Identifier	return_size		3168985	0					
ANR	3169527	CompoundStatement		101:20:2345:2345	3168985	1					
ANR	3169528	ExpressionStatement	* return_size = 0	790:4:23192:23208	3168985	0	True				
ANR	3169529	AssignmentExpression	* return_size = 0		3168985	0		=			
ANR	3169530	UnaryOperationExpression	* return_size		3168985	0					
ANR	3169531	UnaryOperator	*		3168985	0					
ANR	3169532	Identifier	return_size		3168985	1					
ANR	3169533	PrimaryExpression	0		3168985	1					
ANR	3169534	ExpressionStatement	ret = 0	792:3:23218:23225	3168985	2	True				
ANR	3169535	AssignmentExpression	ret = 0		3168985	0		=			
ANR	3169536	Identifier	ret		3168985	0					
ANR	3169537	PrimaryExpression	0		3168985	1					
ANR	3169538	ExpressionStatement	efree ( tmpstr )	794:2:23233:23246	3168985	9	True				
ANR	3169539	CallExpression	efree ( tmpstr )		3168985	0					
ANR	3169540	Callee	efree		3168985	0					
ANR	3169541	Identifier	efree		3168985	0					
ANR	3169542	ArgumentList	tmpstr		3168985	1					
ANR	3169543	Argument	tmpstr		3168985	0					
ANR	3169544	Identifier	tmpstr		3168985	0					
ANR	3169545	ReturnStatement	return ret ;	797:1:23253:23263	3168985	6	True				
ANR	3169546	Identifier	ret		3168985	0					
ANR	3169547	ReturnType	static int		3168985	1					
ANR	3169548	Identifier	php_mb_parse_encoding_list		3168985	2					
ANR	3169549	ParameterList	"const char * value , size_t value_length , const mbfl_encoding * * * return_list , size_t * return_size , int persistent"		3168985	3					
ANR	3169550	Parameter	const char * value	688:27:20727:20743	3168985	0	True				
ANR	3169551	ParameterType	const char *		3168985	0					
ANR	3169552	Identifier	value		3168985	1					
ANR	3169553	Parameter	size_t value_length	688:46:20746:20764	3168985	1	True				
ANR	3169554	ParameterType	size_t		3168985	0					
ANR	3169555	Identifier	value_length		3168985	1					
ANR	3169556	Parameter	const mbfl_encoding * * * return_list	688:67:20767:20800	3168985	2	True				
ANR	3169557	ParameterType	const mbfl_encoding * * *		3168985	0					
ANR	3169558	Identifier	return_list		3168985	1					
ANR	3169559	Parameter	size_t * return_size	688:103:20803:20821	3168985	3	True				
ANR	3169560	ParameterType	size_t *		3168985	0					
ANR	3169561	Identifier	return_size		3168985	1					
ANR	3169562	Parameter	int persistent	688:124:20824:20837	3168985	4	True				
ANR	3169563	ParameterType	int		3168985	0					
ANR	3169564	Identifier	persistent		3168985	1					
ANR	3169565	CFGEntryNode	ENTRY		3168985		True				
ANR	3169566	CFGExitNode	EXIT		3168985		True				
ANR	3169567	Symbol	p1		3168985						
ANR	3169568	Symbol	p2		3168985						
ANR	3169569	Symbol	mbfl_name2encoding		3168985						
ANR	3169570	Symbol	bauto		3168985						
ANR	3169571	Symbol	MBSTRG		3168985						
ANR	3169572	Symbol	* entry ++		3168985						
ANR	3169573	Symbol	default_detect_order_list_size		3168985						
ANR	3169574	Symbol	* return_list		3168985						
ANR	3169575	Symbol	* value_length		3168985						
ANR	3169576	Symbol	estrndup		3168985						
ANR	3169577	Symbol	default_detect_order_list		3168985						
ANR	3169578	Symbol	value_length		3168985						
ANR	3169579	Symbol	return_size		3168985						
ANR	3169580	Symbol	endp		3168985						
ANR	3169581	Symbol	persistent		3168985						
ANR	3169582	Symbol	tmpstr		3168985						
ANR	3169583	Symbol	strcasecmp		3168985						
ANR	3169584	Symbol	value		3168985						
ANR	3169585	Symbol	ret		3168985						
ANR	3169586	Symbol	SUCCESS		3168985						
ANR	3169587	Symbol	NULL		3168985						
ANR	3169588	Symbol	identify_list_size		3168985						
ANR	3169589	Symbol	* p1		3168985						
ANR	3169590	Symbol	src		3168985						
ANR	3169591	Symbol	mbfl_no2encoding		3168985						
ANR	3169592	Symbol	* return_size		3168985						
ANR	3169593	Symbol	return_list		3168985						
ANR	3169594	Symbol	php_memnstr		3168985						
ANR	3169595	Symbol	i		3168985						
ANR	3169596	Symbol	list		3168985						
ANR	3169597	Symbol	encoding		3168985						
ANR	3169598	Symbol	FAILURE		3168985						
ANR	3169599	Symbol	n		3168985						
ANR	3169600	Symbol	p		3168985						
ANR	3169601	Symbol	entry		3168985						
ANR	3169602	Symbol	size		3168985						
ANR	3169603	Symbol	pecalloc		3168985						
ANR	3169604	Symbol	* value		3168985						
ANR	3169605	Symbol	* src ++		3168985						
ANR	3169606	Symbol	* p		3168985						
ANR	3169607	Function	php_mb_parse_encoding_array	806:0:23496:25228							
ANR	3169608	FunctionDef	"php_mb_parse_encoding_array (zval * array , const mbfl_encoding * * * return_list , size_t * return_size , int persistent)"		3169607	0					
ANR	3169609	CompoundStatement		808:0:23621:25228	3169607	0					
ANR	3169610	IdentifierDeclStatement	zval * hash_entry ;	809:1:23624:23640	3169607	0	True				
ANR	3169611	IdentifierDecl	* hash_entry		3169607	0					
ANR	3169612	IdentifierDeclType	zval *		3169607	0					
ANR	3169613	Identifier	hash_entry		3169607	1					
ANR	3169614	IdentifierDeclStatement	HashTable * target_hash ;	810:1:23643:23665	3169607	1	True				
ANR	3169615	IdentifierDecl	* target_hash		3169607	0					
ANR	3169616	IdentifierDeclType	HashTable *		3169607	0					
ANR	3169617	Identifier	target_hash		3169607	1					
ANR	3169618	IdentifierDeclStatement	"int i , n , size , bauto , ret = SUCCESS ;"	811:1:23668:23704	3169607	2	True				
ANR	3169619	IdentifierDecl	i		3169607	0					
ANR	3169620	IdentifierDeclType	int		3169607	0					
ANR	3169621	Identifier	i		3169607	1					
ANR	3169622	IdentifierDecl	n		3169607	1					
ANR	3169623	IdentifierDeclType	int		3169607	0					
ANR	3169624	Identifier	n		3169607	1					
ANR	3169625	IdentifierDecl	size		3169607	2					
ANR	3169626	IdentifierDeclType	int		3169607	0					
ANR	3169627	Identifier	size		3169607	1					
ANR	3169628	IdentifierDecl	bauto		3169607	3					
ANR	3169629	IdentifierDeclType	int		3169607	0					
ANR	3169630	Identifier	bauto		3169607	1					
ANR	3169631	IdentifierDecl	ret = SUCCESS		3169607	4					
ANR	3169632	IdentifierDeclType	int		3169607	0					
ANR	3169633	Identifier	ret		3169607	1					
ANR	3169634	AssignmentExpression	ret = SUCCESS		3169607	2		=			
ANR	3169635	Identifier	SUCCESS		3169607	0					
ANR	3169636	Identifier	SUCCESS		3169607	1					
ANR	3169637	IdentifierDeclStatement	"const mbfl_encoding * * list , * * entry ;"	812:1:23707:23742	3169607	3	True				
ANR	3169638	IdentifierDecl	* * list		3169607	0					
ANR	3169639	IdentifierDeclType	const mbfl_encoding * *		3169607	0					
ANR	3169640	Identifier	list		3169607	1					
ANR	3169641	IdentifierDecl	* * entry		3169607	1					
ANR	3169642	IdentifierDeclType	const mbfl_encoding * *		3169607	0					
ANR	3169643	Identifier	entry		3169607	1					
ANR	3169644	ExpressionStatement	list = NULL	814:1:23746:23757	3169607	4	True				
ANR	3169645	AssignmentExpression	list = NULL		3169607	0		=			
ANR	3169646	Identifier	list		3169607	0					
ANR	3169647	Identifier	NULL		3169607	1					
ANR	3169648	IfStatement	if ( Z_TYPE_P ( array ) == IS_ARRAY )		3169607	5					
ANR	3169649	Condition	Z_TYPE_P ( array ) == IS_ARRAY	815:5:23764:23790	3169607	0	True				
ANR	3169650	EqualityExpression	Z_TYPE_P ( array ) == IS_ARRAY		3169607	0		==			
ANR	3169651	CallExpression	Z_TYPE_P ( array )		3169607	0					
ANR	3169652	Callee	Z_TYPE_P		3169607	0					
ANR	3169653	Identifier	Z_TYPE_P		3169607	0					
ANR	3169654	ArgumentList	array		3169607	1					
ANR	3169655	Argument	array		3169607	0					
ANR	3169656	Identifier	array		3169607	0					
ANR	3169657	Identifier	IS_ARRAY		3169607	1					
ANR	3169658	CompoundStatement		8:34:171:171	3169607	1					
ANR	3169659	ExpressionStatement	target_hash = Z_ARRVAL_P ( array )	816:2:23797:23828	3169607	0	True				
ANR	3169660	AssignmentExpression	target_hash = Z_ARRVAL_P ( array )		3169607	0		=			
ANR	3169661	Identifier	target_hash		3169607	0					
ANR	3169662	CallExpression	Z_ARRVAL_P ( array )		3169607	1					
ANR	3169663	Callee	Z_ARRVAL_P		3169607	0					
ANR	3169664	Identifier	Z_ARRVAL_P		3169607	0					
ANR	3169665	ArgumentList	array		3169607	1					
ANR	3169666	Argument	array		3169607	0					
ANR	3169667	Identifier	array		3169607	0					
ANR	3169668	ExpressionStatement	i = zend_hash_num_elements ( target_hash )	817:2:23832:23871	3169607	1	True				
ANR	3169669	AssignmentExpression	i = zend_hash_num_elements ( target_hash )		3169607	0		=			
ANR	3169670	Identifier	i		3169607	0					
ANR	3169671	CallExpression	zend_hash_num_elements ( target_hash )		3169607	1					
ANR	3169672	Callee	zend_hash_num_elements		3169607	0					
ANR	3169673	Identifier	zend_hash_num_elements		3169607	0					
ANR	3169674	ArgumentList	target_hash		3169607	1					
ANR	3169675	Argument	target_hash		3169607	0					
ANR	3169676	Identifier	target_hash		3169607	0					
ANR	3169677	ExpressionStatement	size = i + MBSTRG ( default_detect_order_list_size )	818:2:23875:23924	3169607	2	True				
ANR	3169678	AssignmentExpression	size = i + MBSTRG ( default_detect_order_list_size )		3169607	0		=			
ANR	3169679	Identifier	size		3169607	0					
ANR	3169680	AdditiveExpression	i + MBSTRG ( default_detect_order_list_size )		3169607	1		+			
ANR	3169681	Identifier	i		3169607	0					
ANR	3169682	CallExpression	MBSTRG ( default_detect_order_list_size )		3169607	1					
ANR	3169683	Callee	MBSTRG		3169607	0					
ANR	3169684	Identifier	MBSTRG		3169607	0					
ANR	3169685	ArgumentList	default_detect_order_list_size		3169607	1					
ANR	3169686	Argument	default_detect_order_list_size		3169607	0					
ANR	3169687	Identifier	default_detect_order_list_size		3169607	0					
ANR	3169688	ExpressionStatement	"list = ( const mbfl_encoding * * ) pecalloc ( size , sizeof ( mbfl_encoding * ) , persistent )"	819:2:23928:24009	3169607	3	True				
ANR	3169689	AssignmentExpression	"list = ( const mbfl_encoding * * ) pecalloc ( size , sizeof ( mbfl_encoding * ) , persistent )"		3169607	0		=			
ANR	3169690	Identifier	list		3169607	0					
ANR	3169691	CastExpression	"( const mbfl_encoding * * ) pecalloc ( size , sizeof ( mbfl_encoding * ) , persistent )"		3169607	1					
ANR	3169692	CastTarget	const mbfl_encoding * *		3169607	0					
ANR	3169693	CallExpression	"pecalloc ( size , sizeof ( mbfl_encoding * ) , persistent )"		3169607	1					
ANR	3169694	Callee	pecalloc		3169607	0					
ANR	3169695	Identifier	pecalloc		3169607	0					
ANR	3169696	ArgumentList	size		3169607	1					
ANR	3169697	Argument	size		3169607	0					
ANR	3169698	Identifier	size		3169607	0					
ANR	3169699	Argument	sizeof ( mbfl_encoding * )		3169607	1					
ANR	3169700	SizeofExpression	sizeof ( mbfl_encoding * )		3169607	0					
ANR	3169701	Sizeof	sizeof		3169607	0					
ANR	3169702	SizeofOperand	mbfl_encoding *		3169607	1					
ANR	3169703	Argument	persistent		3169607	2					
ANR	3169704	Identifier	persistent		3169607	0					
ANR	3169705	IfStatement	if ( list != NULL )		3169607	4					
ANR	3169706	Condition	list != NULL	820:6:24017:24028	3169607	0	True				
ANR	3169707	EqualityExpression	list != NULL		3169607	0		!=			
ANR	3169708	Identifier	list		3169607	0					
ANR	3169709	Identifier	NULL		3169607	1					
ANR	3169710	CompoundStatement		13:20:409:409	3169607	1					
ANR	3169711	ExpressionStatement	entry = list	821:3:24036:24048	3169607	0	True				
ANR	3169712	AssignmentExpression	entry = list		3169607	0		=			
ANR	3169713	Identifier	entry		3169607	0					
ANR	3169714	Identifier	list		3169607	1					
ANR	3169715	ExpressionStatement	bauto = 0	822:3:24053:24062	3169607	1	True				
ANR	3169716	AssignmentExpression	bauto = 0		3169607	0		=			
ANR	3169717	Identifier	bauto		3169607	0					
ANR	3169718	PrimaryExpression	0		3169607	1					
ANR	3169719	ExpressionStatement	n = 0	823:3:24067:24072	3169607	2	True				
ANR	3169720	AssignmentExpression	n = 0		3169607	0		=			
ANR	3169721	Identifier	n		3169607	0					
ANR	3169722	PrimaryExpression	0		3169607	1					
ANR	3169723	Statement	ZEND_HASH_FOREACH_VAL	824:3:24077:24097	3169607	3	True				
ANR	3169724	Statement	(	824:24:24098:24098	3169607	4	True				
ANR	3169725	Statement	target_hash	824:25:24099:24109	3169607	5	True				
ANR	3169726	Statement	","	824:36:24110:24110	3169607	6	True				
ANR	3169727	Statement	hash_entry	824:38:24112:24121	3169607	7	True				
ANR	3169728	Statement	)	824:48:24122:24122	3169607	8	True				
ANR	3169729	CompoundStatement		17:50:502:502	3169607	9					
ANR	3169730	ExpressionStatement	convert_to_string_ex ( hash_entry )	825:4:24130:24162	3169607	0	True				
ANR	3169731	CallExpression	convert_to_string_ex ( hash_entry )		3169607	0					
ANR	3169732	Callee	convert_to_string_ex		3169607	0					
ANR	3169733	Identifier	convert_to_string_ex		3169607	0					
ANR	3169734	ArgumentList	hash_entry		3169607	1					
ANR	3169735	Argument	hash_entry		3169607	0					
ANR	3169736	Identifier	hash_entry		3169607	0					
ANR	3169737	IfStatement	"if ( strcasecmp ( Z_STRVAL_P ( hash_entry ) , ""auto"" ) == 0 )"		3169607	1					
ANR	3169738	Condition	"strcasecmp ( Z_STRVAL_P ( hash_entry ) , ""auto"" ) == 0"	826:8:24172:24218	3169607	0	True				
ANR	3169739	EqualityExpression	"strcasecmp ( Z_STRVAL_P ( hash_entry ) , ""auto"" ) == 0"		3169607	0		==			
ANR	3169740	CallExpression	"strcasecmp ( Z_STRVAL_P ( hash_entry ) , ""auto"" )"		3169607	0					
ANR	3169741	Callee	strcasecmp		3169607	0					
ANR	3169742	Identifier	strcasecmp		3169607	0					
ANR	3169743	ArgumentList	Z_STRVAL_P ( hash_entry )		3169607	1					
ANR	3169744	Argument	Z_STRVAL_P ( hash_entry )		3169607	0					
ANR	3169745	CallExpression	Z_STRVAL_P ( hash_entry )		3169607	0					
ANR	3169746	Callee	Z_STRVAL_P		3169607	0					
ANR	3169747	Identifier	Z_STRVAL_P		3169607	0					
ANR	3169748	ArgumentList	hash_entry		3169607	1					
ANR	3169749	Argument	hash_entry		3169607	0					
ANR	3169750	Identifier	hash_entry		3169607	0					
ANR	3169751	Argument	"""auto"""		3169607	1					
ANR	3169752	PrimaryExpression	"""auto"""		3169607	0					
ANR	3169753	PrimaryExpression	0		3169607	1					
ANR	3169754	CompoundStatement		19:57:599:599	3169607	1					
ANR	3169755	IfStatement	if ( ! bauto )		3169607	0					
ANR	3169756	Condition	! bauto	827:9:24232:24237	3169607	0	True				
ANR	3169757	UnaryOperationExpression	! bauto		3169607	0					
ANR	3169758	UnaryOperator	!		3169607	0					
ANR	3169759	Identifier	bauto		3169607	1					
ANR	3169760	CompoundStatement		23:6:782:790	3169607	1					
ANR	3169761	IdentifierDeclStatement	const enum mbfl_no_encoding * src = MBSTRG ( default_detect_order_list ) ;	828:6:24248:24316	3169607	0	True				
ANR	3169762	IdentifierDecl	* src = MBSTRG ( default_detect_order_list )		3169607	0					
ANR	3169763	IdentifierDeclType	const enum mbfl_no_encoding *		3169607	0					
ANR	3169764	Identifier	src		3169607	1					
ANR	3169765	AssignmentExpression	* src = MBSTRG ( default_detect_order_list )		3169607	2		=			
ANR	3169766	Identifier	src		3169607	0					
ANR	3169767	CallExpression	MBSTRG ( default_detect_order_list )		3169607	1					
ANR	3169768	Callee	MBSTRG		3169607	0					
ANR	3169769	Identifier	MBSTRG		3169607	0					
ANR	3169770	ArgumentList	default_detect_order_list		3169607	1					
ANR	3169771	Argument	default_detect_order_list		3169607	0					
ANR	3169772	Identifier	default_detect_order_list		3169607	0					
ANR	3169773	IdentifierDeclStatement	const size_t identify_list_size = MBSTRG ( default_detect_order_list_size ) ;	829:6:24324:24396	3169607	1	True				
ANR	3169774	IdentifierDecl	identify_list_size = MBSTRG ( default_detect_order_list_size )		3169607	0					
ANR	3169775	IdentifierDeclType	const size_t		3169607	0					
ANR	3169776	Identifier	identify_list_size		3169607	1					
ANR	3169777	AssignmentExpression	identify_list_size = MBSTRG ( default_detect_order_list_size )		3169607	2		=			
ANR	3169778	Identifier	identify_list_size		3169607	0					
ANR	3169779	CallExpression	MBSTRG ( default_detect_order_list_size )		3169607	1					
ANR	3169780	Callee	MBSTRG		3169607	0					
ANR	3169781	Identifier	MBSTRG		3169607	0					
ANR	3169782	ArgumentList	default_detect_order_list_size		3169607	1					
ANR	3169783	Argument	default_detect_order_list_size		3169607	0					
ANR	3169784	Identifier	default_detect_order_list_size		3169607	0					
ANR	3169785	IdentifierDeclStatement	size_t j ;	830:6:24404:24412	3169607	2	True				
ANR	3169786	IdentifierDecl	j		3169607	0					
ANR	3169787	IdentifierDeclType	size_t		3169607	0					
ANR	3169788	Identifier	j		3169607	1					
ANR	3169789	ExpressionStatement	bauto = 1	832:6:24421:24430	3169607	3	True				
ANR	3169790	AssignmentExpression	bauto = 1		3169607	0		=			
ANR	3169791	Identifier	bauto		3169607	0					
ANR	3169792	PrimaryExpression	1		3169607	1					
ANR	3169793	ForStatement	for ( j = 0 ; j < identify_list_size ; j ++ )		3169607	4					
ANR	3169794	ForInit	j = 0 ;	833:11:24443:24448	3169607	0	True				
ANR	3169795	AssignmentExpression	j = 0		3169607	0		=			
ANR	3169796	Identifier	j		3169607	0					
ANR	3169797	PrimaryExpression	0		3169607	1					
ANR	3169798	Condition	j < identify_list_size	833:18:24450:24471	3169607	1	True				
ANR	3169799	RelationalExpression	j < identify_list_size		3169607	0		<			
ANR	3169800	Identifier	j		3169607	0					
ANR	3169801	Identifier	identify_list_size		3169607	1					
ANR	3169802	PostIncDecOperationExpression	j ++	833:42:24474:24476	3169607	2	True				
ANR	3169803	Identifier	j		3169607	0					
ANR	3169804	IncDec	++		3169607	1					
ANR	3169805	CompoundStatement		26:47:857:857	3169607	3					
ANR	3169806	ExpressionStatement	* entry ++ = mbfl_no2encoding ( * src ++ )	834:7:24488:24523	3169607	0	True				
ANR	3169807	AssignmentExpression	* entry ++ = mbfl_no2encoding ( * src ++ )		3169607	0		=			
ANR	3169808	UnaryOperationExpression	* entry ++		3169607	0					
ANR	3169809	UnaryOperator	*		3169607	0					
ANR	3169810	PostIncDecOperationExpression	entry ++		3169607	1					
ANR	3169811	Identifier	entry		3169607	0					
ANR	3169812	IncDec	++		3169607	1					
ANR	3169813	CallExpression	mbfl_no2encoding ( * src ++ )		3169607	1					
ANR	3169814	Callee	mbfl_no2encoding		3169607	0					
ANR	3169815	Identifier	mbfl_no2encoding		3169607	0					
ANR	3169816	ArgumentList	* src ++		3169607	1					
ANR	3169817	Argument	* src ++		3169607	0					
ANR	3169818	UnaryOperationExpression	* src ++		3169607	0					
ANR	3169819	UnaryOperator	*		3169607	0					
ANR	3169820	PostIncDecOperationExpression	src ++		3169607	1					
ANR	3169821	Identifier	src		3169607	0					
ANR	3169822	IncDec	++		3169607	1					
ANR	3169823	ExpressionStatement	n ++	835:7:24532:24535	3169607	1	True				
ANR	3169824	PostIncDecOperationExpression	n ++		3169607	0					
ANR	3169825	Identifier	n		3169607	0					
ANR	3169826	IncDec	++		3169607	1					
ANR	3169827	ElseStatement	else		3169607	0					
ANR	3169828	CompoundStatement		32:5:948:1022	3169607	0					
ANR	3169829	IdentifierDeclStatement	const mbfl_encoding * encoding = mbfl_name2encoding ( Z_STRVAL_P ( hash_entry ) ) ;	839:5:24570:24644	3169607	0	True				
ANR	3169830	IdentifierDecl	* encoding = mbfl_name2encoding ( Z_STRVAL_P ( hash_entry ) )		3169607	0					
ANR	3169831	IdentifierDeclType	const mbfl_encoding *		3169607	0					
ANR	3169832	Identifier	encoding		3169607	1					
ANR	3169833	AssignmentExpression	* encoding = mbfl_name2encoding ( Z_STRVAL_P ( hash_entry ) )		3169607	2		=			
ANR	3169834	Identifier	encoding		3169607	0					
ANR	3169835	CallExpression	mbfl_name2encoding ( Z_STRVAL_P ( hash_entry ) )		3169607	1					
ANR	3169836	Callee	mbfl_name2encoding		3169607	0					
ANR	3169837	Identifier	mbfl_name2encoding		3169607	0					
ANR	3169838	ArgumentList	Z_STRVAL_P ( hash_entry )		3169607	1					
ANR	3169839	Argument	Z_STRVAL_P ( hash_entry )		3169607	0					
ANR	3169840	CallExpression	Z_STRVAL_P ( hash_entry )		3169607	0					
ANR	3169841	Callee	Z_STRVAL_P		3169607	0					
ANR	3169842	Identifier	Z_STRVAL_P		3169607	0					
ANR	3169843	ArgumentList	hash_entry		3169607	1					
ANR	3169844	Argument	hash_entry		3169607	0					
ANR	3169845	Identifier	hash_entry		3169607	0					
ANR	3169846	IfStatement	if ( encoding )		3169607	1					
ANR	3169847	Condition	encoding	840:9:24655:24662	3169607	0	True				
ANR	3169848	Identifier	encoding		3169607	0					
ANR	3169849	CompoundStatement		33:19:1043:1043	3169607	1					
ANR	3169850	ExpressionStatement	* entry ++ = encoding	841:6:24673:24692	3169607	0	True				
ANR	3169851	AssignmentExpression	* entry ++ = encoding		3169607	0		=			
ANR	3169852	UnaryOperationExpression	* entry ++		3169607	0					
ANR	3169853	UnaryOperator	*		3169607	0					
ANR	3169854	PostIncDecOperationExpression	entry ++		3169607	1					
ANR	3169855	Identifier	entry		3169607	0					
ANR	3169856	IncDec	++		3169607	1					
ANR	3169857	Identifier	encoding		3169607	1					
ANR	3169858	ExpressionStatement	n ++	842:6:24700:24703	3169607	1	True				
ANR	3169859	PostIncDecOperationExpression	n ++		3169607	0					
ANR	3169860	Identifier	n		3169607	0					
ANR	3169861	IncDec	++		3169607	1					
ANR	3169862	ElseStatement	else		3169607	0					
ANR	3169863	CompoundStatement		36:12:1095:1095	3169607	0					
ANR	3169864	ExpressionStatement	ret = FAILURE	844:6:24725:24738	3169607	0	True				
ANR	3169865	AssignmentExpression	ret = FAILURE		3169607	0		=			
ANR	3169866	Identifier	ret		3169607	0					
ANR	3169867	Identifier	FAILURE		3169607	1					
ANR	3169868	ExpressionStatement	i --	847:4:24757:24760	3169607	2	True				
ANR	3169869	PostIncDecOperationExpression	i --		3169607	0					
ANR	3169870	Identifier	i		3169607	0					
ANR	3169871	IncDec	--		3169607	1					
ANR	3169872	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	848:5:24767:24790	3169607	10	True				
ANR	3169873	CallExpression	ZEND_HASH_FOREACH_END ( )		3169607	0					
ANR	3169874	Callee	ZEND_HASH_FOREACH_END		3169607	0					
ANR	3169875	Identifier	ZEND_HASH_FOREACH_END		3169607	0					
ANR	3169876	ArgumentList			3169607	1					
ANR	3169877	IfStatement	if ( n > 0 )		3169607	11					
ANR	3169878	Condition	n > 0	849:7:24799:24803	3169607	0	True				
ANR	3169879	RelationalExpression	n > 0		3169607	0		>			
ANR	3169880	Identifier	n		3169607	0					
ANR	3169881	PrimaryExpression	0		3169607	1					
ANR	3169882	CompoundStatement		42:14:1184:1184	3169607	1					
ANR	3169883	IfStatement	if ( return_list )		3169607	0					
ANR	3169884	Condition	return_list	850:8:24816:24826	3169607	0	True				
ANR	3169885	Identifier	return_list		3169607	0					
ANR	3169886	CompoundStatement		43:21:1207:1207	3169607	1					
ANR	3169887	ExpressionStatement	* return_list = list	851:5:24836:24855	3169607	0	True				
ANR	3169888	AssignmentExpression	* return_list = list		3169607	0		=			
ANR	3169889	UnaryOperationExpression	* return_list		3169607	0					
ANR	3169890	UnaryOperator	*		3169607	0					
ANR	3169891	Identifier	return_list		3169607	1					
ANR	3169892	Identifier	list		3169607	1					
ANR	3169893	ElseStatement	else		3169607	0					
ANR	3169894	CompoundStatement		45:11:1246:1246	3169607	0					
ANR	3169895	ExpressionStatement	"pefree ( list , persistent )"	853:5:24875:24899	3169607	0	True				
ANR	3169896	CallExpression	"pefree ( list , persistent )"		3169607	0					
ANR	3169897	Callee	pefree		3169607	0					
ANR	3169898	Identifier	pefree		3169607	0					
ANR	3169899	ArgumentList	list		3169607	1					
ANR	3169900	Argument	list		3169607	0					
ANR	3169901	Identifier	list		3169607	0					
ANR	3169902	Argument	persistent		3169607	1					
ANR	3169903	Identifier	persistent		3169607	0					
ANR	3169904	ElseStatement	else		3169607	0					
ANR	3169905	CompoundStatement		48:10:1295:1295	3169607	0					
ANR	3169906	ExpressionStatement	"pefree ( list , persistent )"	856:4:24923:24947	3169607	0	True				
ANR	3169907	CallExpression	"pefree ( list , persistent )"		3169607	0					
ANR	3169908	Callee	pefree		3169607	0					
ANR	3169909	Identifier	pefree		3169607	0					
ANR	3169910	ArgumentList	list		3169607	1					
ANR	3169911	Argument	list		3169607	0					
ANR	3169912	Identifier	list		3169607	0					
ANR	3169913	Argument	persistent		3169607	1					
ANR	3169914	Identifier	persistent		3169607	0					
ANR	3169915	IfStatement	if ( return_list )		3169607	1					
ANR	3169916	Condition	return_list	857:8:24957:24967	3169607	0	True				
ANR	3169917	Identifier	return_list		3169607	0					
ANR	3169918	CompoundStatement		50:21:1348:1348	3169607	1					
ANR	3169919	ExpressionStatement	* return_list = NULL	858:5:24977:24996	3169607	0	True				
ANR	3169920	AssignmentExpression	* return_list = NULL		3169607	0		=			
ANR	3169921	UnaryOperationExpression	* return_list		3169607	0					
ANR	3169922	UnaryOperator	*		3169607	0					
ANR	3169923	Identifier	return_list		3169607	1					
ANR	3169924	Identifier	NULL		3169607	1					
ANR	3169925	ExpressionStatement	ret = FAILURE	860:4:25008:25021	3169607	2	True				
ANR	3169926	AssignmentExpression	ret = FAILURE		3169607	0		=			
ANR	3169927	Identifier	ret		3169607	0					
ANR	3169928	Identifier	FAILURE		3169607	1					
ANR	3169929	IfStatement	if ( return_size )		3169607	12					
ANR	3169930	Condition	return_size	862:7:25035:25045	3169607	0	True				
ANR	3169931	Identifier	return_size		3169607	0					
ANR	3169932	CompoundStatement		55:20:1426:1426	3169607	1					
ANR	3169933	ExpressionStatement	* return_size = n	863:4:25054:25070	3169607	0	True				
ANR	3169934	AssignmentExpression	* return_size = n		3169607	0		=			
ANR	3169935	UnaryOperationExpression	* return_size		3169607	0					
ANR	3169936	UnaryOperator	*		3169607	0					
ANR	3169937	Identifier	return_size		3169607	1					
ANR	3169938	Identifier	n		3169607	1					
ANR	3169939	ElseStatement	else		3169607	0					
ANR	3169940	CompoundStatement		58:9:1464:1464	3169607	0					
ANR	3169941	IfStatement	if ( return_list )		3169607	0					
ANR	3169942	Condition	return_list	866:7:25095:25105	3169607	0	True				
ANR	3169943	Identifier	return_list		3169607	0					
ANR	3169944	CompoundStatement		59:20:1486:1486	3169607	1					
ANR	3169945	ExpressionStatement	* return_list = NULL	867:4:25114:25133	3169607	0	True				
ANR	3169946	AssignmentExpression	* return_list = NULL		3169607	0		=			
ANR	3169947	UnaryOperationExpression	* return_list		3169607	0					
ANR	3169948	UnaryOperator	*		3169607	0					
ANR	3169949	Identifier	return_list		3169607	1					
ANR	3169950	Identifier	NULL		3169607	1					
ANR	3169951	IfStatement	if ( return_size )		3169607	1					
ANR	3169952	Condition	return_size	869:7:25147:25157	3169607	0	True				
ANR	3169953	Identifier	return_size		3169607	0					
ANR	3169954	CompoundStatement		62:20:1538:1538	3169607	1					
ANR	3169955	ExpressionStatement	* return_size = 0	870:4:25166:25182	3169607	0	True				
ANR	3169956	AssignmentExpression	* return_size = 0		3169607	0		=			
ANR	3169957	UnaryOperationExpression	* return_size		3169607	0					
ANR	3169958	UnaryOperator	*		3169607	0					
ANR	3169959	Identifier	return_size		3169607	1					
ANR	3169960	PrimaryExpression	0		3169607	1					
ANR	3169961	ExpressionStatement	ret = FAILURE	872:3:25192:25205	3169607	2	True				
ANR	3169962	AssignmentExpression	ret = FAILURE		3169607	0		=			
ANR	3169963	Identifier	ret		3169607	0					
ANR	3169964	Identifier	FAILURE		3169607	1					
ANR	3169965	ReturnStatement	return ret ;	876:1:25216:25226	3169607	6	True				
ANR	3169966	Identifier	ret		3169607	0					
ANR	3169967	ReturnType	static int		3169607	1					
ANR	3169968	Identifier	php_mb_parse_encoding_array		3169607	2					
ANR	3169969	ParameterList	"zval * array , const mbfl_encoding * * * return_list , size_t * return_size , int persistent"		3169607	3					
ANR	3169970	Parameter	zval * array	807:28:23535:23545	3169607	0	True				
ANR	3169971	ParameterType	zval *		3169607	0					
ANR	3169972	Identifier	array		3169607	1					
ANR	3169973	Parameter	const mbfl_encoding * * * return_list	807:41:23548:23581	3169607	1	True				
ANR	3169974	ParameterType	const mbfl_encoding * * *		3169607	0					
ANR	3169975	Identifier	return_list		3169607	1					
ANR	3169976	Parameter	size_t * return_size	807:77:23584:23602	3169607	2	True				
ANR	3169977	ParameterType	size_t *		3169607	0					
ANR	3169978	Identifier	return_size		3169607	1					
ANR	3169979	Parameter	int persistent	807:98:23605:23618	3169607	3	True				
ANR	3169980	ParameterType	int		3169607	0					
ANR	3169981	Identifier	persistent		3169607	1					
ANR	3169982	CFGEntryNode	ENTRY		3169607		True				
ANR	3169983	CFGExitNode	EXIT		3169607		True				
ANR	3169984	Symbol	mbfl_name2encoding		3169607						
ANR	3169985	Symbol	bauto		3169607						
ANR	3169986	Symbol	MBSTRG		3169607						
ANR	3169987	Symbol	target_hash		3169607						
ANR	3169988	Symbol	* entry ++		3169607						
ANR	3169989	Symbol	default_detect_order_list_size		3169607						
ANR	3169990	Symbol	* return_list		3169607						
ANR	3169991	Symbol	default_detect_order_list		3169607						
ANR	3169992	Symbol	hash_entry		3169607						
ANR	3169993	Symbol	array		3169607						
ANR	3169994	Symbol	IS_ARRAY		3169607						
ANR	3169995	Symbol	return_size		3169607						
ANR	3169996	Symbol	persistent		3169607						
ANR	3169997	Symbol	Z_ARRVAL_P		3169607						
ANR	3169998	Symbol	strcasecmp		3169607						
ANR	3169999	Symbol	ret		3169607						
ANR	3170000	Symbol	SUCCESS		3169607						
ANR	3170001	Symbol	NULL		3169607						
ANR	3170002	Symbol	identify_list_size		3169607						
ANR	3170003	Symbol	zend_hash_num_elements		3169607						
ANR	3170004	Symbol	src		3169607						
ANR	3170005	Symbol	mbfl_no2encoding		3169607						
ANR	3170006	Symbol	* return_size		3169607						
ANR	3170007	Symbol	return_list		3169607						
ANR	3170008	Symbol	i		3169607						
ANR	3170009	Symbol	j		3169607						
ANR	3170010	Symbol	list		3169607						
ANR	3170011	Symbol	Z_TYPE_P		3169607						
ANR	3170012	Symbol	encoding		3169607						
ANR	3170013	Symbol	Z_STRVAL_P		3169607						
ANR	3170014	Symbol	FAILURE		3169607						
ANR	3170015	Symbol	n		3169607						
ANR	3170016	Symbol	entry		3169607						
ANR	3170017	Symbol	size		3169607						
ANR	3170018	Symbol	pecalloc		3169607						
ANR	3170019	Symbol	* src ++		3169607						
ANR	3170020	Function	php_mb_zend_encoding_fetcher	881:0:25276:25427							
ANR	3170021	FunctionDef	php_mb_zend_encoding_fetcher (const char * encoding_name)		3170020	0					
ANR	3170022	CompoundStatement		882:0:25360:25427	3170020	0					
ANR	3170023	ReturnStatement	return ( const zend_encoding * ) mbfl_name2encoding ( encoding_name ) ;	883:1:25363:25425	3170020	0	True				
ANR	3170024	CastExpression	( const zend_encoding * ) mbfl_name2encoding ( encoding_name )		3170020	0					
ANR	3170025	CastTarget	const zend_encoding *		3170020	0					
ANR	3170026	CallExpression	mbfl_name2encoding ( encoding_name )		3170020	1					
ANR	3170027	Callee	mbfl_name2encoding		3170020	0					
ANR	3170028	Identifier	mbfl_name2encoding		3170020	0					
ANR	3170029	ArgumentList	encoding_name		3170020	1					
ANR	3170030	Argument	encoding_name		3170020	0					
ANR	3170031	Identifier	encoding_name		3170020	0					
ANR	3170032	ReturnType	static const zend_encoding *		3170020	1					
ANR	3170033	Identifier	php_mb_zend_encoding_fetcher		3170020	2					
ANR	3170034	ParameterList	const char * encoding_name		3170020	3					
ANR	3170035	Parameter	const char * encoding_name	881:57:25333:25357	3170020	0	True				
ANR	3170036	ParameterType	const char *		3170020	0					
ANR	3170037	Identifier	encoding_name		3170020	1					
ANR	3170038	CFGEntryNode	ENTRY		3170020		True				
ANR	3170039	CFGExitNode	EXIT		3170020		True				
ANR	3170040	Symbol	encoding_name		3170020						
ANR	3170041	Symbol	mbfl_name2encoding		3170020						
ANR	3170042	Function	php_mb_zend_encoding_name_getter	886:0:25430:25564							
ANR	3170043	FunctionDef	php_mb_zend_encoding_name_getter (const zend_encoding * encoding)		3170042	0					
ANR	3170044	CompoundStatement		887:0:25513:25564	3170042	0					
ANR	3170045	ReturnStatement	return ( ( const mbfl_encoding * ) encoding ) -> name ;	888:1:25516:25562	3170042	0	True				
ANR	3170046	PtrMemberAccess	( ( const mbfl_encoding * ) encoding ) -> name		3170042	0					
ANR	3170047	CastExpression	( const mbfl_encoding * ) encoding		3170042	0					
ANR	3170048	CastTarget	const mbfl_encoding *		3170042	0					
ANR	3170049	Identifier	encoding		3170042	1					
ANR	3170050	Identifier	name		3170042	1					
ANR	3170051	ReturnType	static const char *		3170042	1					
ANR	3170052	Identifier	php_mb_zend_encoding_name_getter		3170042	2					
ANR	3170053	ParameterList	const zend_encoding * encoding		3170042	3					
ANR	3170054	Parameter	const zend_encoding * encoding	886:52:25482:25510	3170042	0	True				
ANR	3170055	ParameterType	const zend_encoding *		3170042	0					
ANR	3170056	Identifier	encoding		3170042	1					
ANR	3170057	CFGEntryNode	ENTRY		3170042		True				
ANR	3170058	CFGExitNode	EXIT		3170042		True				
ANR	3170059	Symbol	* encoding		3170042						
ANR	3170060	Symbol	encoding		3170042						
ANR	3170061	Symbol	( ( const mbfl_encoding * ) encoding ) -> name		3170042						
ANR	3170062	Function	php_mb_zend_encoding_lexer_compatibility_checker	891:0:25567:25904							
ANR	3170063	FunctionDef	php_mb_zend_encoding_lexer_compatibility_checker (const zend_encoding * _encoding)		3170062	0					
ANR	3170064	CompoundStatement		892:0:25659:25904	3170062	0					
ANR	3170065	IdentifierDeclStatement	const mbfl_encoding * encoding = ( const mbfl_encoding * ) _encoding ;	893:1:25662:25725	3170062	0	True				
ANR	3170066	IdentifierDecl	* encoding = ( const mbfl_encoding * ) _encoding		3170062	0					
ANR	3170067	IdentifierDeclType	const mbfl_encoding *		3170062	0					
ANR	3170068	Identifier	encoding		3170062	1					
ANR	3170069	AssignmentExpression	* encoding = ( const mbfl_encoding * ) _encoding		3170062	2		=			
ANR	3170070	Identifier	encoding		3170062	0					
ANR	3170071	CastExpression	( const mbfl_encoding * ) _encoding		3170062	1					
ANR	3170072	CastTarget	const mbfl_encoding *		3170062	0					
ANR	3170073	Identifier	_encoding		3170062	1					
ANR	3170074	IfStatement	if ( encoding -> flag & MBFL_ENCTYPE_SBCS )		3170062	1					
ANR	3170075	Condition	encoding -> flag & MBFL_ENCTYPE_SBCS	894:5:25732:25765	3170062	0	True				
ANR	3170076	BitAndExpression	encoding -> flag & MBFL_ENCTYPE_SBCS		3170062	0		&			
ANR	3170077	PtrMemberAccess	encoding -> flag		3170062	0					
ANR	3170078	Identifier	encoding		3170062	0					
ANR	3170079	Identifier	flag		3170062	1					
ANR	3170080	Identifier	MBFL_ENCTYPE_SBCS		3170062	1					
ANR	3170081	CompoundStatement		3:41:108:108	3170062	1					
ANR	3170082	ReturnStatement	return 1 ;	895:2:25772:25780	3170062	0	True				
ANR	3170083	PrimaryExpression	1		3170062	0					
ANR	3170084	IfStatement	if ( ( encoding -> flag & ( MBFL_ENCTYPE_MBCS | MBFL_ENCTYPE_GL_UNSAFE ) ) == MBFL_ENCTYPE_MBCS )		3170062	2					
ANR	3170085	Condition	( encoding -> flag & ( MBFL_ENCTYPE_MBCS | MBFL_ENCTYPE_GL_UNSAFE ) ) == MBFL_ENCTYPE_MBCS	897:5:25790:25873	3170062	0	True				
ANR	3170086	EqualityExpression	( encoding -> flag & ( MBFL_ENCTYPE_MBCS | MBFL_ENCTYPE_GL_UNSAFE ) ) == MBFL_ENCTYPE_MBCS		3170062	0		==			
ANR	3170087	BitAndExpression	encoding -> flag & ( MBFL_ENCTYPE_MBCS | MBFL_ENCTYPE_GL_UNSAFE )		3170062	0		&			
ANR	3170088	PtrMemberAccess	encoding -> flag		3170062	0					
ANR	3170089	Identifier	encoding		3170062	0					
ANR	3170090	Identifier	flag		3170062	1					
ANR	3170091	InclusiveOrExpression	MBFL_ENCTYPE_MBCS | MBFL_ENCTYPE_GL_UNSAFE		3170062	1		|			
ANR	3170092	Identifier	MBFL_ENCTYPE_MBCS		3170062	0					
ANR	3170093	Identifier	MBFL_ENCTYPE_GL_UNSAFE		3170062	1					
ANR	3170094	Identifier	MBFL_ENCTYPE_MBCS		3170062	1					
ANR	3170095	CompoundStatement		6:91:216:216	3170062	1					
ANR	3170096	ReturnStatement	return 1 ;	898:2:25880:25888	3170062	0	True				
ANR	3170097	PrimaryExpression	1		3170062	0					
ANR	3170098	ReturnStatement	return 0 ;	900:1:25894:25902	3170062	3	True				
ANR	3170099	PrimaryExpression	0		3170062	0					
ANR	3170100	ReturnType	static int		3170062	1					
ANR	3170101	Identifier	php_mb_zend_encoding_lexer_compatibility_checker		3170062	2					
ANR	3170102	ParameterList	const zend_encoding * _encoding		3170062	3					
ANR	3170103	Parameter	const zend_encoding * _encoding	891:60:25627:25656	3170062	0	True				
ANR	3170104	ParameterType	const zend_encoding *		3170062	0					
ANR	3170105	Identifier	_encoding		3170062	1					
ANR	3170106	CFGEntryNode	ENTRY		3170062		True				
ANR	3170107	CFGExitNode	EXIT		3170062		True				
ANR	3170108	Symbol	* encoding		3170062						
ANR	3170109	Symbol	encoding -> flag		3170062						
ANR	3170110	Symbol	_encoding		3170062						
ANR	3170111	Symbol	MBFL_ENCTYPE_GL_UNSAFE		3170062						
ANR	3170112	Symbol	MBFL_ENCTYPE_MBCS		3170062						
ANR	3170113	Symbol	encoding		3170062						
ANR	3170114	Symbol	MBFL_ENCTYPE_SBCS		3170062						
ANR	3170115	Function	php_mb_zend_encoding_detector	903:0:25907:26474							
ANR	3170116	FunctionDef	"php_mb_zend_encoding_detector (const unsigned char * arg_string , size_t arg_length , const zend_encoding * * list , size_t list_size)"		3170115	0					
ANR	3170117	CompoundStatement		904:0:26063:26474	3170115	0					
ANR	3170118	IdentifierDeclStatement	mbfl_string string ;	905:1:26066:26084	3170115	0	True				
ANR	3170119	IdentifierDecl	string		3170115	0					
ANR	3170120	IdentifierDeclType	mbfl_string		3170115	0					
ANR	3170121	Identifier	string		3170115	1					
ANR	3170122	IfStatement	if ( ! list )		3170115	1					
ANR	3170123	Condition	! list	907:5:26092:26096	3170115	0	True				
ANR	3170124	UnaryOperationExpression	! list		3170115	0					
ANR	3170125	UnaryOperator	!		3170115	0					
ANR	3170126	Identifier	list		3170115	1					
ANR	3170127	CompoundStatement		4:12:35:35	3170115	1					
ANR	3170128	ExpressionStatement	list = ( const zend_encoding * * ) MBSTRG ( current_detect_order_list )	908:2:26103:26167	3170115	0	True				
ANR	3170129	AssignmentExpression	list = ( const zend_encoding * * ) MBSTRG ( current_detect_order_list )		3170115	0		=			
ANR	3170130	Identifier	list		3170115	0					
ANR	3170131	CastExpression	( const zend_encoding * * ) MBSTRG ( current_detect_order_list )		3170115	1					
ANR	3170132	CastTarget	const zend_encoding * *		3170115	0					
ANR	3170133	CallExpression	MBSTRG ( current_detect_order_list )		3170115	1					
ANR	3170134	Callee	MBSTRG		3170115	0					
ANR	3170135	Identifier	MBSTRG		3170115	0					
ANR	3170136	ArgumentList	current_detect_order_list		3170115	1					
ANR	3170137	Argument	current_detect_order_list		3170115	0					
ANR	3170138	Identifier	current_detect_order_list		3170115	0					
ANR	3170139	ExpressionStatement	list_size = MBSTRG ( current_detect_order_list_size )	909:2:26171:26221	3170115	1	True				
ANR	3170140	AssignmentExpression	list_size = MBSTRG ( current_detect_order_list_size )		3170115	0		=			
ANR	3170141	Identifier	list_size		3170115	0					
ANR	3170142	CallExpression	MBSTRG ( current_detect_order_list_size )		3170115	1					
ANR	3170143	Callee	MBSTRG		3170115	0					
ANR	3170144	Identifier	MBSTRG		3170115	0					
ANR	3170145	ArgumentList	current_detect_order_list_size		3170115	1					
ANR	3170146	Argument	current_detect_order_list_size		3170115	0					
ANR	3170147	Identifier	current_detect_order_list_size		3170115	0					
ANR	3170148	ExpressionStatement	mbfl_string_init ( & string )	912:1:26228:26253	3170115	2	True				
ANR	3170149	CallExpression	mbfl_string_init ( & string )		3170115	0					
ANR	3170150	Callee	mbfl_string_init		3170115	0					
ANR	3170151	Identifier	mbfl_string_init		3170115	0					
ANR	3170152	ArgumentList	& string		3170115	1					
ANR	3170153	Argument	& string		3170115	0					
ANR	3170154	UnaryOperationExpression	& string		3170115	0					
ANR	3170155	UnaryOperator	&		3170115	0					
ANR	3170156	Identifier	string		3170115	1					
ANR	3170157	ExpressionStatement	string . no_language = MBSTRG ( language )	913:1:26256:26293	3170115	3	True				
ANR	3170158	AssignmentExpression	string . no_language = MBSTRG ( language )		3170115	0		=			
ANR	3170159	MemberAccess	string . no_language		3170115	0					
ANR	3170160	Identifier	string		3170115	0					
ANR	3170161	Identifier	no_language		3170115	1					
ANR	3170162	CallExpression	MBSTRG ( language )		3170115	1					
ANR	3170163	Callee	MBSTRG		3170115	0					
ANR	3170164	Identifier	MBSTRG		3170115	0					
ANR	3170165	ArgumentList	language		3170115	1					
ANR	3170166	Argument	language		3170115	0					
ANR	3170167	Identifier	language		3170115	0					
ANR	3170168	ExpressionStatement	string . val = ( unsigned char * ) arg_string	914:1:26296:26336	3170115	4	True				
ANR	3170169	AssignmentExpression	string . val = ( unsigned char * ) arg_string		3170115	0		=			
ANR	3170170	MemberAccess	string . val		3170115	0					
ANR	3170171	Identifier	string		3170115	0					
ANR	3170172	Identifier	val		3170115	1					
ANR	3170173	CastExpression	( unsigned char * ) arg_string		3170115	1					
ANR	3170174	CastTarget	unsigned char *		3170115	0					
ANR	3170175	Identifier	arg_string		3170115	1					
ANR	3170176	ExpressionStatement	string . len = arg_length	915:1:26339:26362	3170115	5	True				
ANR	3170177	AssignmentExpression	string . len = arg_length		3170115	0		=			
ANR	3170178	MemberAccess	string . len		3170115	0					
ANR	3170179	Identifier	string		3170115	0					
ANR	3170180	Identifier	len		3170115	1					
ANR	3170181	Identifier	arg_length		3170115	1					
ANR	3170182	ReturnStatement	"return ( const zend_encoding * ) mbfl_identify_encoding2 ( & string , ( const mbfl_encoding * * ) list , list_size , 0 ) ;"	916:1:26365:26472	3170115	6	True				
ANR	3170183	CastExpression	"( const zend_encoding * ) mbfl_identify_encoding2 ( & string , ( const mbfl_encoding * * ) list , list_size , 0 )"		3170115	0					
ANR	3170184	CastTarget	const zend_encoding *		3170115	0					
ANR	3170185	CallExpression	"mbfl_identify_encoding2 ( & string , ( const mbfl_encoding * * ) list , list_size , 0 )"		3170115	1					
ANR	3170186	Callee	mbfl_identify_encoding2		3170115	0					
ANR	3170187	Identifier	mbfl_identify_encoding2		3170115	0					
ANR	3170188	ArgumentList	& string		3170115	1					
ANR	3170189	Argument	& string		3170115	0					
ANR	3170190	UnaryOperationExpression	& string		3170115	0					
ANR	3170191	UnaryOperator	&		3170115	0					
ANR	3170192	Identifier	string		3170115	1					
ANR	3170193	Argument	( const mbfl_encoding * * ) list		3170115	1					
ANR	3170194	CastExpression	( const mbfl_encoding * * ) list		3170115	0					
ANR	3170195	CastTarget	const mbfl_encoding * *		3170115	0					
ANR	3170196	Identifier	list		3170115	1					
ANR	3170197	Argument	list_size		3170115	2					
ANR	3170198	Identifier	list_size		3170115	0					
ANR	3170199	Argument	0		3170115	3					
ANR	3170200	PrimaryExpression	0		3170115	0					
ANR	3170201	ReturnType	static const zend_encoding *		3170115	1					
ANR	3170202	Identifier	php_mb_zend_encoding_detector		3170115	2					
ANR	3170203	ParameterList	"const unsigned char * arg_string , size_t arg_length , const zend_encoding * * list , size_t list_size"		3170115	3					
ANR	3170204	Parameter	const unsigned char * arg_string	903:58:25965:25995	3170115	0	True				
ANR	3170205	ParameterType	const unsigned char *		3170115	0					
ANR	3170206	Identifier	arg_string		3170115	1					
ANR	3170207	Parameter	size_t arg_length	903:91:25998:26014	3170115	1	True				
ANR	3170208	ParameterType	size_t		3170115	0					
ANR	3170209	Identifier	arg_length		3170115	1					
ANR	3170210	Parameter	const zend_encoding * * list	903:110:26017:26042	3170115	2	True				
ANR	3170211	ParameterType	const zend_encoding * *		3170115	0					
ANR	3170212	Identifier	list		3170115	1					
ANR	3170213	Parameter	size_t list_size	903:138:26045:26060	3170115	3	True				
ANR	3170214	ParameterType	size_t		3170115	0					
ANR	3170215	Identifier	list_size		3170115	1					
ANR	3170216	CFGEntryNode	ENTRY		3170115		True				
ANR	3170217	CFGExitNode	EXIT		3170115		True				
ANR	3170218	Symbol	& string		3170115						
ANR	3170219	Symbol	string		3170115						
ANR	3170220	Symbol	MBSTRG		3170115						
ANR	3170221	Symbol	language		3170115						
ANR	3170222	Symbol	string . val		3170115						
ANR	3170223	Symbol	arg_length		3170115						
ANR	3170224	Symbol	list_size		3170115						
ANR	3170225	Symbol	list		3170115						
ANR	3170226	Symbol	arg_string		3170115						
ANR	3170227	Symbol	current_detect_order_list_size		3170115						
ANR	3170228	Symbol	current_detect_order_list		3170115						
ANR	3170229	Symbol	string . no_language		3170115						
ANR	3170230	Symbol	mbfl_identify_encoding2		3170115						
ANR	3170231	Symbol	string . len		3170115						
ANR	3170232	Function	php_mb_zend_encoding_converter	919:0:26477:27806							
ANR	3170233	FunctionDef	"php_mb_zend_encoding_converter (unsigned char * * to , size_t * to_length , const unsigned char * from , size_t from_length , const zend_encoding * encoding_to , const zend_encoding * encoding_from)"		3170232	0					
ANR	3170234	CompoundStatement		920:0:26678:27806	3170232	0					
ANR	3170235	IdentifierDeclStatement	"mbfl_string string , result ;"	921:1:26681:26707	3170232	0	True				
ANR	3170236	IdentifierDecl	string		3170232	0					
ANR	3170237	IdentifierDeclType	mbfl_string		3170232	0					
ANR	3170238	Identifier	string		3170232	1					
ANR	3170239	IdentifierDecl	result		3170232	1					
ANR	3170240	IdentifierDeclType	mbfl_string		3170232	0					
ANR	3170241	Identifier	result		3170232	1					
ANR	3170242	IdentifierDeclStatement	mbfl_buffer_converter * convd ;	922:1:26710:26738	3170232	1	True				
ANR	3170243	IdentifierDecl	* convd		3170232	0					
ANR	3170244	IdentifierDeclType	mbfl_buffer_converter *		3170232	0					
ANR	3170245	Identifier	convd		3170232	1					
ANR	3170246	IdentifierDeclStatement	"int status , loc ;"	923:1:26741:26756	3170232	2	True				
ANR	3170247	IdentifierDecl	status		3170232	0					
ANR	3170248	IdentifierDeclType	int		3170232	0					
ANR	3170249	Identifier	status		3170232	1					
ANR	3170250	IdentifierDecl	loc		3170232	1					
ANR	3170251	IdentifierDeclType	int		3170232	0					
ANR	3170252	Identifier	loc		3170232	1					
ANR	3170253	ExpressionStatement	mbfl_string_init ( & string )	927:1:26805:26830	3170232	3	True				
ANR	3170254	CallExpression	mbfl_string_init ( & string )		3170232	0					
ANR	3170255	Callee	mbfl_string_init		3170232	0					
ANR	3170256	Identifier	mbfl_string_init		3170232	0					
ANR	3170257	ArgumentList	& string		3170232	1					
ANR	3170258	Argument	& string		3170232	0					
ANR	3170259	UnaryOperationExpression	& string		3170232	0					
ANR	3170260	UnaryOperator	&		3170232	0					
ANR	3170261	Identifier	string		3170232	1					
ANR	3170262	ExpressionStatement	mbfl_string_init ( & result )	928:1:26833:26858	3170232	4	True				
ANR	3170263	CallExpression	mbfl_string_init ( & result )		3170232	0					
ANR	3170264	Callee	mbfl_string_init		3170232	0					
ANR	3170265	Identifier	mbfl_string_init		3170232	0					
ANR	3170266	ArgumentList	& result		3170232	1					
ANR	3170267	Argument	& result		3170232	0					
ANR	3170268	UnaryOperationExpression	& result		3170232	0					
ANR	3170269	UnaryOperator	&		3170232	0					
ANR	3170270	Identifier	result		3170232	1					
ANR	3170271	ExpressionStatement	string . no_encoding = ( ( const mbfl_encoding * ) encoding_from ) -> no_encoding	929:1:26861:26932	3170232	5	True				
ANR	3170272	AssignmentExpression	string . no_encoding = ( ( const mbfl_encoding * ) encoding_from ) -> no_encoding		3170232	0		=			
ANR	3170273	MemberAccess	string . no_encoding		3170232	0					
ANR	3170274	Identifier	string		3170232	0					
ANR	3170275	Identifier	no_encoding		3170232	1					
ANR	3170276	PtrMemberAccess	( ( const mbfl_encoding * ) encoding_from ) -> no_encoding		3170232	1					
ANR	3170277	CastExpression	( const mbfl_encoding * ) encoding_from		3170232	0					
ANR	3170278	CastTarget	const mbfl_encoding *		3170232	0					
ANR	3170279	Identifier	encoding_from		3170232	1					
ANR	3170280	Identifier	no_encoding		3170232	1					
ANR	3170281	ExpressionStatement	string . no_language = MBSTRG ( language )	930:1:26935:26972	3170232	6	True				
ANR	3170282	AssignmentExpression	string . no_language = MBSTRG ( language )		3170232	0		=			
ANR	3170283	MemberAccess	string . no_language		3170232	0					
ANR	3170284	Identifier	string		3170232	0					
ANR	3170285	Identifier	no_language		3170232	1					
ANR	3170286	CallExpression	MBSTRG ( language )		3170232	1					
ANR	3170287	Callee	MBSTRG		3170232	0					
ANR	3170288	Identifier	MBSTRG		3170232	0					
ANR	3170289	ArgumentList	language		3170232	1					
ANR	3170290	Argument	language		3170232	0					
ANR	3170291	Identifier	language		3170232	0					
ANR	3170292	ExpressionStatement	string . val = ( unsigned char * ) from	931:1:26975:27008	3170232	7	True				
ANR	3170293	AssignmentExpression	string . val = ( unsigned char * ) from		3170232	0		=			
ANR	3170294	MemberAccess	string . val		3170232	0					
ANR	3170295	Identifier	string		3170232	0					
ANR	3170296	Identifier	val		3170232	1					
ANR	3170297	CastExpression	( unsigned char * ) from		3170232	1					
ANR	3170298	CastTarget	unsigned char *		3170232	0					
ANR	3170299	Identifier	from		3170232	1					
ANR	3170300	ExpressionStatement	string . len = from_length	932:1:27011:27035	3170232	8	True				
ANR	3170301	AssignmentExpression	string . len = from_length		3170232	0		=			
ANR	3170302	MemberAccess	string . len		3170232	0					
ANR	3170303	Identifier	string		3170232	0					
ANR	3170304	Identifier	len		3170232	1					
ANR	3170305	Identifier	from_length		3170232	1					
ANR	3170306	ExpressionStatement	"convd = mbfl_buffer_converter_new2 ( ( const mbfl_encoding * ) encoding_from , ( const mbfl_encoding * ) encoding_to , string . len )"	935:1:27067:27187	3170232	9	True				
ANR	3170307	AssignmentExpression	"convd = mbfl_buffer_converter_new2 ( ( const mbfl_encoding * ) encoding_from , ( const mbfl_encoding * ) encoding_to , string . len )"		3170232	0		=			
ANR	3170308	Identifier	convd		3170232	0					
ANR	3170309	CallExpression	"mbfl_buffer_converter_new2 ( ( const mbfl_encoding * ) encoding_from , ( const mbfl_encoding * ) encoding_to , string . len )"		3170232	1					
ANR	3170310	Callee	mbfl_buffer_converter_new2		3170232	0					
ANR	3170311	Identifier	mbfl_buffer_converter_new2		3170232	0					
ANR	3170312	ArgumentList	( const mbfl_encoding * ) encoding_from		3170232	1					
ANR	3170313	Argument	( const mbfl_encoding * ) encoding_from		3170232	0					
ANR	3170314	CastExpression	( const mbfl_encoding * ) encoding_from		3170232	0					
ANR	3170315	CastTarget	const mbfl_encoding *		3170232	0					
ANR	3170316	Identifier	encoding_from		3170232	1					
ANR	3170317	Argument	( const mbfl_encoding * ) encoding_to		3170232	1					
ANR	3170318	CastExpression	( const mbfl_encoding * ) encoding_to		3170232	0					
ANR	3170319	CastTarget	const mbfl_encoding *		3170232	0					
ANR	3170320	Identifier	encoding_to		3170232	1					
ANR	3170321	Argument	string . len		3170232	2					
ANR	3170322	MemberAccess	string . len		3170232	0					
ANR	3170323	Identifier	string		3170232	0					
ANR	3170324	Identifier	len		3170232	1					
ANR	3170325	IfStatement	if ( convd == NULL )		3170232	10					
ANR	3170326	Condition	convd == NULL	936:5:27194:27206	3170232	0	True				
ANR	3170327	EqualityExpression	convd == NULL		3170232	0		==			
ANR	3170328	Identifier	convd		3170232	0					
ANR	3170329	Identifier	NULL		3170232	1					
ANR	3170330	CompoundStatement		17:20:530:530	3170232	1					
ANR	3170331	ReturnStatement	return - 1 ;	937:2:27213:27222	3170232	0	True				
ANR	3170332	UnaryOperationExpression	- 1		3170232	0					
ANR	3170333	UnaryOperator	-		3170232	0					
ANR	3170334	PrimaryExpression	1		3170232	1					
ANR	3170335	ExpressionStatement	"mbfl_buffer_converter_illegal_mode ( convd , MBSTRG ( current_filter_illegal_mode ) )"	939:1:27228:27306	3170232	11	True				
ANR	3170336	CallExpression	"mbfl_buffer_converter_illegal_mode ( convd , MBSTRG ( current_filter_illegal_mode ) )"		3170232	0					
ANR	3170337	Callee	mbfl_buffer_converter_illegal_mode		3170232	0					
ANR	3170338	Identifier	mbfl_buffer_converter_illegal_mode		3170232	0					
ANR	3170339	ArgumentList	convd		3170232	1					
ANR	3170340	Argument	convd		3170232	0					
ANR	3170341	Identifier	convd		3170232	0					
ANR	3170342	Argument	MBSTRG ( current_filter_illegal_mode )		3170232	1					
ANR	3170343	CallExpression	MBSTRG ( current_filter_illegal_mode )		3170232	0					
ANR	3170344	Callee	MBSTRG		3170232	0					
ANR	3170345	Identifier	MBSTRG		3170232	0					
ANR	3170346	ArgumentList	current_filter_illegal_mode		3170232	1					
ANR	3170347	Argument	current_filter_illegal_mode		3170232	0					
ANR	3170348	Identifier	current_filter_illegal_mode		3170232	0					
ANR	3170349	ExpressionStatement	"mbfl_buffer_converter_illegal_substchar ( convd , MBSTRG ( current_filter_illegal_substchar ) )"	940:1:27309:27397	3170232	12	True				
ANR	3170350	CallExpression	"mbfl_buffer_converter_illegal_substchar ( convd , MBSTRG ( current_filter_illegal_substchar ) )"		3170232	0					
ANR	3170351	Callee	mbfl_buffer_converter_illegal_substchar		3170232	0					
ANR	3170352	Identifier	mbfl_buffer_converter_illegal_substchar		3170232	0					
ANR	3170353	ArgumentList	convd		3170232	1					
ANR	3170354	Argument	convd		3170232	0					
ANR	3170355	Identifier	convd		3170232	0					
ANR	3170356	Argument	MBSTRG ( current_filter_illegal_substchar )		3170232	1					
ANR	3170357	CallExpression	MBSTRG ( current_filter_illegal_substchar )		3170232	0					
ANR	3170358	Callee	MBSTRG		3170232	0					
ANR	3170359	Identifier	MBSTRG		3170232	0					
ANR	3170360	ArgumentList	current_filter_illegal_substchar		3170232	1					
ANR	3170361	Argument	current_filter_illegal_substchar		3170232	0					
ANR	3170362	Identifier	current_filter_illegal_substchar		3170232	0					
ANR	3170363	ExpressionStatement	"status = mbfl_buffer_converter_feed2 ( convd , & string , & loc )"	943:1:27414:27472	3170232	13	True				
ANR	3170364	AssignmentExpression	"status = mbfl_buffer_converter_feed2 ( convd , & string , & loc )"		3170232	0		=			
ANR	3170365	Identifier	status		3170232	0					
ANR	3170366	CallExpression	"mbfl_buffer_converter_feed2 ( convd , & string , & loc )"		3170232	1					
ANR	3170367	Callee	mbfl_buffer_converter_feed2		3170232	0					
ANR	3170368	Identifier	mbfl_buffer_converter_feed2		3170232	0					
ANR	3170369	ArgumentList	convd		3170232	1					
ANR	3170370	Argument	convd		3170232	0					
ANR	3170371	Identifier	convd		3170232	0					
ANR	3170372	Argument	& string		3170232	1					
ANR	3170373	UnaryOperationExpression	& string		3170232	0					
ANR	3170374	UnaryOperator	&		3170232	0					
ANR	3170375	Identifier	string		3170232	1					
ANR	3170376	Argument	& loc		3170232	2					
ANR	3170377	UnaryOperationExpression	& loc		3170232	0					
ANR	3170378	UnaryOperator	&		3170232	0					
ANR	3170379	Identifier	loc		3170232	1					
ANR	3170380	IfStatement	if ( status )		3170232	14					
ANR	3170381	Condition	status	944:5:27479:27484	3170232	0	True				
ANR	3170382	Identifier	status		3170232	0					
ANR	3170383	CompoundStatement		25:13:808:808	3170232	1					
ANR	3170384	ExpressionStatement	mbfl_buffer_converter_delete ( convd )	945:2:27491:27526	3170232	0	True				
ANR	3170385	CallExpression	mbfl_buffer_converter_delete ( convd )		3170232	0					
ANR	3170386	Callee	mbfl_buffer_converter_delete		3170232	0					
ANR	3170387	Identifier	mbfl_buffer_converter_delete		3170232	0					
ANR	3170388	ArgumentList	convd		3170232	1					
ANR	3170389	Argument	convd		3170232	0					
ANR	3170390	Identifier	convd		3170232	0					
ANR	3170391	ReturnStatement	return ( size_t ) - 1 ;	946:2:27530:27547	3170232	1	True				
ANR	3170392	CastExpression	( size_t ) - 1		3170232	0					
ANR	3170393	CastTarget	size_t		3170232	0					
ANR	3170394	UnaryOperationExpression	- 1		3170232	1					
ANR	3170395	UnaryOperator	-		3170232	0					
ANR	3170396	PrimaryExpression	1		3170232	1					
ANR	3170397	ExpressionStatement	mbfl_buffer_converter_flush ( convd )	949:1:27554:27588	3170232	15	True				
ANR	3170398	CallExpression	mbfl_buffer_converter_flush ( convd )		3170232	0					
ANR	3170399	Callee	mbfl_buffer_converter_flush		3170232	0					
ANR	3170400	Identifier	mbfl_buffer_converter_flush		3170232	0					
ANR	3170401	ArgumentList	convd		3170232	1					
ANR	3170402	Argument	convd		3170232	0					
ANR	3170403	Identifier	convd		3170232	0					
ANR	3170404	IfStatement	"if ( ! mbfl_buffer_converter_result ( convd , & result ) )"		3170232	16					
ANR	3170405	Condition	"! mbfl_buffer_converter_result ( convd , & result )"	950:5:27595:27639	3170232	0	True				
ANR	3170406	UnaryOperationExpression	"! mbfl_buffer_converter_result ( convd , & result )"		3170232	0					
ANR	3170407	UnaryOperator	!		3170232	0					
ANR	3170408	CallExpression	"mbfl_buffer_converter_result ( convd , & result )"		3170232	1					
ANR	3170409	Callee	mbfl_buffer_converter_result		3170232	0					
ANR	3170410	Identifier	mbfl_buffer_converter_result		3170232	0					
ANR	3170411	ArgumentList	convd		3170232	1					
ANR	3170412	Argument	convd		3170232	0					
ANR	3170413	Identifier	convd		3170232	0					
ANR	3170414	Argument	& result		3170232	1					
ANR	3170415	UnaryOperationExpression	& result		3170232	0					
ANR	3170416	UnaryOperator	&		3170232	0					
ANR	3170417	Identifier	result		3170232	1					
ANR	3170418	CompoundStatement		31:52:963:963	3170232	1					
ANR	3170419	ExpressionStatement	mbfl_buffer_converter_delete ( convd )	951:2:27646:27681	3170232	0	True				
ANR	3170420	CallExpression	mbfl_buffer_converter_delete ( convd )		3170232	0					
ANR	3170421	Callee	mbfl_buffer_converter_delete		3170232	0					
ANR	3170422	Identifier	mbfl_buffer_converter_delete		3170232	0					
ANR	3170423	ArgumentList	convd		3170232	1					
ANR	3170424	Argument	convd		3170232	0					
ANR	3170425	Identifier	convd		3170232	0					
ANR	3170426	ReturnStatement	return ( size_t ) - 1 ;	952:2:27685:27702	3170232	1	True				
ANR	3170427	CastExpression	( size_t ) - 1		3170232	0					
ANR	3170428	CastTarget	size_t		3170232	0					
ANR	3170429	UnaryOperationExpression	- 1		3170232	1					
ANR	3170430	UnaryOperator	-		3170232	0					
ANR	3170431	PrimaryExpression	1		3170232	1					
ANR	3170432	ExpressionStatement	* to = result . val	955:1:27709:27725	3170232	17	True				
ANR	3170433	AssignmentExpression	* to = result . val		3170232	0		=			
ANR	3170434	UnaryOperationExpression	* to		3170232	0					
ANR	3170435	UnaryOperator	*		3170232	0					
ANR	3170436	Identifier	to		3170232	1					
ANR	3170437	MemberAccess	result . val		3170232	1					
ANR	3170438	Identifier	result		3170232	0					
ANR	3170439	Identifier	val		3170232	1					
ANR	3170440	ExpressionStatement	* to_length = result . len	956:1:27728:27751	3170232	18	True				
ANR	3170441	AssignmentExpression	* to_length = result . len		3170232	0		=			
ANR	3170442	UnaryOperationExpression	* to_length		3170232	0					
ANR	3170443	UnaryOperator	*		3170232	0					
ANR	3170444	Identifier	to_length		3170232	1					
ANR	3170445	MemberAccess	result . len		3170232	1					
ANR	3170446	Identifier	result		3170232	0					
ANR	3170447	Identifier	len		3170232	1					
ANR	3170448	ExpressionStatement	mbfl_buffer_converter_delete ( convd )	958:1:27755:27790	3170232	19	True				
ANR	3170449	CallExpression	mbfl_buffer_converter_delete ( convd )		3170232	0					
ANR	3170450	Callee	mbfl_buffer_converter_delete		3170232	0					
ANR	3170451	Identifier	mbfl_buffer_converter_delete		3170232	0					
ANR	3170452	ArgumentList	convd		3170232	1					
ANR	3170453	Argument	convd		3170232	0					
ANR	3170454	Identifier	convd		3170232	0					
ANR	3170455	ReturnStatement	return loc ;	960:1:27794:27804	3170232	20	True				
ANR	3170456	Identifier	loc		3170232	0					
ANR	3170457	ReturnType	static size_t		3170232	1					
ANR	3170458	Identifier	php_mb_zend_encoding_converter		3170232	2					
ANR	3170459	ParameterList	"unsigned char * * to , size_t * to_length , const unsigned char * from , size_t from_length , const zend_encoding * encoding_to , const zend_encoding * encoding_from"		3170232	3					
ANR	3170460	Parameter	unsigned char * * to	919:45:26522:26539	3170232	0	True				
ANR	3170461	ParameterType	unsigned char * *		3170232	0					
ANR	3170462	Identifier	to		3170232	1					
ANR	3170463	Parameter	size_t * to_length	919:65:26542:26558	3170232	1	True				
ANR	3170464	ParameterType	size_t *		3170232	0					
ANR	3170465	Identifier	to_length		3170232	1					
ANR	3170466	Parameter	const unsigned char * from	919:84:26561:26585	3170232	2	True				
ANR	3170467	ParameterType	const unsigned char *		3170232	0					
ANR	3170468	Identifier	from		3170232	1					
ANR	3170469	Parameter	size_t from_length	919:111:26588:26605	3170232	3	True				
ANR	3170470	ParameterType	size_t		3170232	0					
ANR	3170471	Identifier	from_length		3170232	1					
ANR	3170472	Parameter	const zend_encoding * encoding_to	919:131:26608:26639	3170232	4	True				
ANR	3170473	ParameterType	const zend_encoding *		3170232	0					
ANR	3170474	Identifier	encoding_to		3170232	1					
ANR	3170475	Parameter	const zend_encoding * encoding_from	919:165:26642:26675	3170232	5	True				
ANR	3170476	ParameterType	const zend_encoding *		3170232	0					
ANR	3170477	Identifier	encoding_from		3170232	1					
ANR	3170478	CFGEntryNode	ENTRY		3170232		True				
ANR	3170479	CFGExitNode	EXIT		3170232		True				
ANR	3170480	Symbol	loc		3170232						
ANR	3170481	Symbol	& string		3170232						
ANR	3170482	Symbol	string		3170232						
ANR	3170483	Symbol	from_length		3170232						
ANR	3170484	Symbol	MBSTRG		3170232						
ANR	3170485	Symbol	to_length		3170232						
ANR	3170486	Symbol	language		3170232						
ANR	3170487	Symbol	current_filter_illegal_substchar		3170232						
ANR	3170488	Symbol	result . val		3170232						
ANR	3170489	Symbol	result		3170232						
ANR	3170490	Symbol	& result		3170232						
ANR	3170491	Symbol	encoding_from		3170232						
ANR	3170492	Symbol	convd		3170232						
ANR	3170493	Symbol	string . no_language		3170232						
ANR	3170494	Symbol	from		3170232						
ANR	3170495	Symbol	* encoding_from		3170232						
ANR	3170496	Symbol	encoding_to		3170232						
ANR	3170497	Symbol	mbfl_buffer_converter_result		3170232						
ANR	3170498	Symbol	string . len		3170232						
ANR	3170499	Symbol	& loc		3170232						
ANR	3170500	Symbol	* to		3170232						
ANR	3170501	Symbol	* to_length		3170232						
ANR	3170502	Symbol	NULL		3170232						
ANR	3170503	Symbol	( ( const mbfl_encoding * ) encoding_from ) -> no_encoding		3170232						
ANR	3170504	Symbol	mbfl_buffer_converter_feed2		3170232						
ANR	3170505	Symbol	string . no_encoding		3170232						
ANR	3170506	Symbol	string . val		3170232						
ANR	3170507	Symbol	mbfl_buffer_converter_new2		3170232						
ANR	3170508	Symbol	current_filter_illegal_mode		3170232						
ANR	3170509	Symbol	to		3170232						
ANR	3170510	Symbol	status		3170232						
ANR	3170511	Symbol	result . len		3170232						
ANR	3170512	Function	php_mb_zend_encoding_list_parser	963:0:27809:28114							
ANR	3170513	FunctionDef	"php_mb_zend_encoding_list_parser (const char * encoding_list , size_t encoding_list_len , const zend_encoding * * * return_list , size_t * return_size , int persistent)"		3170512	0					
ANR	3170514	CompoundStatement		964:0:27979:28114	3170512	0					
ANR	3170515	ReturnStatement	"return php_mb_parse_encoding_list ( encoding_list , encoding_list_len , ( const mbfl_encoding * * * ) return_list , return_size , persistent ) ;"	965:1:27982:28112	3170512	0	True				
ANR	3170516	CallExpression	"php_mb_parse_encoding_list ( encoding_list , encoding_list_len , ( const mbfl_encoding * * * ) return_list , return_size , persistent )"		3170512	0					
ANR	3170517	Callee	php_mb_parse_encoding_list		3170512	0					
ANR	3170518	Identifier	php_mb_parse_encoding_list		3170512	0					
ANR	3170519	ArgumentList	encoding_list		3170512	1					
ANR	3170520	Argument	encoding_list		3170512	0					
ANR	3170521	Identifier	encoding_list		3170512	0					
ANR	3170522	Argument	encoding_list_len		3170512	1					
ANR	3170523	Identifier	encoding_list_len		3170512	0					
ANR	3170524	Argument	( const mbfl_encoding * * * ) return_list		3170512	2					
ANR	3170525	CastExpression	( const mbfl_encoding * * * ) return_list		3170512	0					
ANR	3170526	CastTarget	const mbfl_encoding * * *		3170512	0					
ANR	3170527	Identifier	return_list		3170512	1					
ANR	3170528	Argument	return_size		3170512	3					
ANR	3170529	Identifier	return_size		3170512	0					
ANR	3170530	Argument	persistent		3170512	4					
ANR	3170531	Identifier	persistent		3170512	0					
ANR	3170532	ReturnType	static int		3170512	1					
ANR	3170533	Identifier	php_mb_zend_encoding_list_parser		3170512	2					
ANR	3170534	ParameterList	"const char * encoding_list , size_t encoding_list_len , const zend_encoding * * * return_list , size_t * return_size , int persistent"		3170512	3					
ANR	3170535	Parameter	const char * encoding_list	963:44:27853:27877	3170512	0	True				
ANR	3170536	ParameterType	const char *		3170512	0					
ANR	3170537	Identifier	encoding_list		3170512	1					
ANR	3170538	Parameter	size_t encoding_list_len	963:71:27880:27903	3170512	1	True				
ANR	3170539	ParameterType	size_t		3170512	0					
ANR	3170540	Identifier	encoding_list_len		3170512	1					
ANR	3170541	Parameter	const zend_encoding * * * return_list	963:97:27906:27939	3170512	2	True				
ANR	3170542	ParameterType	const zend_encoding * * *		3170512	0					
ANR	3170543	Identifier	return_list		3170512	1					
ANR	3170544	Parameter	size_t * return_size	963:133:27942:27960	3170512	3	True				
ANR	3170545	ParameterType	size_t *		3170512	0					
ANR	3170546	Identifier	return_size		3170512	1					
ANR	3170547	Parameter	int persistent	963:154:27963:27976	3170512	4	True				
ANR	3170548	ParameterType	int		3170512	0					
ANR	3170549	Identifier	persistent		3170512	1					
ANR	3170550	CFGEntryNode	ENTRY		3170512		True				
ANR	3170551	CFGExitNode	EXIT		3170512		True				
ANR	3170552	Symbol	encoding_list_len		3170512						
ANR	3170553	Symbol	return_list		3170512						
ANR	3170554	Symbol	return_size		3170512						
ANR	3170555	Symbol	persistent		3170512						
ANR	3170556	Symbol	php_mb_parse_encoding_list		3170512						
ANR	3170557	Symbol	encoding_list		3170512						
ANR	3170558	Function	php_mb_zend_internal_encoding_getter	968:0:28117:28248							
ANR	3170559	FunctionDef	php_mb_zend_internal_encoding_getter ()		3170558	0					
ANR	3170560	CompoundStatement		969:0:28188:28248	3170558	0					
ANR	3170561	ReturnStatement	return ( const zend_encoding * ) MBSTRG ( internal_encoding ) ;	970:1:28191:28246	3170558	0	True				
ANR	3170562	CastExpression	( const zend_encoding * ) MBSTRG ( internal_encoding )		3170558	0					
ANR	3170563	CastTarget	const zend_encoding *		3170558	0					
ANR	3170564	CallExpression	MBSTRG ( internal_encoding )		3170558	1					
ANR	3170565	Callee	MBSTRG		3170558	0					
ANR	3170566	Identifier	MBSTRG		3170558	0					
ANR	3170567	ArgumentList	internal_encoding		3170558	1					
ANR	3170568	Argument	internal_encoding		3170558	0					
ANR	3170569	Identifier	internal_encoding		3170558	0					
ANR	3170570	ReturnType	static const zend_encoding *		3170558	1					
ANR	3170571	Identifier	php_mb_zend_internal_encoding_getter		3170558	2					
ANR	3170572	ParameterList			3170558	3					
ANR	3170573	CFGEntryNode	ENTRY		3170558		True				
ANR	3170574	CFGExitNode	EXIT		3170558		True				
ANR	3170575	Symbol	MBSTRG		3170558						
ANR	3170576	Symbol	internal_encoding		3170558						
ANR	3170577	Function	php_mb_zend_internal_encoding_setter	973:0:28251:28411							
ANR	3170578	FunctionDef	php_mb_zend_internal_encoding_setter (const zend_encoding * encoding)		3170577	0					
ANR	3170579	CompoundStatement		974:0:28330:28411	3170577	0					
ANR	3170580	ExpressionStatement	MBSTRG ( internal_encoding ) = ( const mbfl_encoding * ) encoding	975:1:28333:28392	3170577	0	True				
ANR	3170581	AssignmentExpression	MBSTRG ( internal_encoding ) = ( const mbfl_encoding * ) encoding		3170577	0		=			
ANR	3170582	CallExpression	MBSTRG ( internal_encoding )		3170577	0					
ANR	3170583	Callee	MBSTRG		3170577	0					
ANR	3170584	Identifier	MBSTRG		3170577	0					
ANR	3170585	ArgumentList	internal_encoding		3170577	1					
ANR	3170586	Argument	internal_encoding		3170577	0					
ANR	3170587	Identifier	internal_encoding		3170577	0					
ANR	3170588	CastExpression	( const mbfl_encoding * ) encoding		3170577	1					
ANR	3170589	CastTarget	const mbfl_encoding *		3170577	0					
ANR	3170590	Identifier	encoding		3170577	1					
ANR	3170591	ReturnStatement	return SUCCESS ;	976:1:28395:28409	3170577	1	True				
ANR	3170592	Identifier	SUCCESS		3170577	0					
ANR	3170593	ReturnType	static int		3170577	1					
ANR	3170594	Identifier	php_mb_zend_internal_encoding_setter		3170577	2					
ANR	3170595	ParameterList	const zend_encoding * encoding		3170577	3					
ANR	3170596	Parameter	const zend_encoding * encoding	973:48:28299:28327	3170577	0	True				
ANR	3170597	ParameterType	const zend_encoding *		3170577	0					
ANR	3170598	Identifier	encoding		3170577	1					
ANR	3170599	CFGEntryNode	ENTRY		3170577		True				
ANR	3170600	CFGExitNode	EXIT		3170577		True				
ANR	3170601	Symbol	SUCCESS		3170577						
ANR	3170602	Symbol	MBSTRG		3170577						
ANR	3170603	Symbol	encoding		3170577						
ANR	3170604	Symbol	internal_encoding		3170577						
ANR	3170605	DeclStmt									
ANR	3170606	Decl							zend_multibyte_functions	zend_multibyte_functions	php_mb_zend_multibyte_functions
ANR	3170607	DeclStmt									
ANR	3170608	Decl							void	void * ( const char * pattern )	_php_mb_compile_regex
ANR	3170609	DeclStmt									
ANR	3170610	Decl							int	"int ( void * opaque , const char * str , size_t str_len )"	_php_mb_match_regex
ANR	3170611	DeclStmt									
ANR	3170612	Decl							void	void ( void * opaque )	_php_mb_free_regex
ANR	3170613	Function	_php_mb_compile_regex	998:0:29032:29592							
ANR	3170614	FunctionDef	_php_mb_compile_regex (const char * pattern)		3170613	0					
ANR	3170615	CompoundStatement		999:0:29088:29592	3170613	0					
ANR	3170616	IdentifierDeclStatement	php_mb_regex_t * retval ;	1000:1:29091:29113	3170613	0	True				
ANR	3170617	IdentifierDecl	* retval		3170613	0					
ANR	3170618	IdentifierDeclType	php_mb_regex_t *		3170613	0					
ANR	3170619	Identifier	retval		3170613	1					
ANR	3170620	IdentifierDeclStatement	OnigErrorInfo err_info ;	1001:1:29116:29138	3170613	1	True				
ANR	3170621	IdentifierDecl	err_info		3170613	0					
ANR	3170622	IdentifierDeclType	OnigErrorInfo		3170613	0					
ANR	3170623	Identifier	err_info		3170613	1					
ANR	3170624	IdentifierDeclStatement	int err_code ;	1002:1:29141:29153	3170613	2	True				
ANR	3170625	IdentifierDecl	err_code		3170613	0					
ANR	3170626	IdentifierDeclType	int		3170613	0					
ANR	3170627	Identifier	err_code		3170613	1					
ANR	3170628	IfStatement	"if ( ( err_code = onig_new ( & retval , ( const OnigUChar * ) pattern , ( const OnigUChar * ) pattern + strlen ( pattern ) , ONIG_OPTION_IGNORECASE | ONIG_OPTION_DONT_CAPTURE_GROUP , ONIG_ENCODING_ASCII , & OnigSyntaxPerl , & err_info ) ) )"		3170613	3					
ANR	3170629	Condition	"err_code = onig_new ( & retval , ( const OnigUChar * ) pattern , ( const OnigUChar * ) pattern + strlen ( pattern ) , ONIG_OPTION_IGNORECASE | ONIG_OPTION_DONT_CAPTURE_GROUP , ONIG_ENCODING_ASCII , & OnigSyntaxPerl , & err_info )"	1004:5:29161:29382	3170613	0	True				
ANR	3170630	AssignmentExpression	"err_code = onig_new ( & retval , ( const OnigUChar * ) pattern , ( const OnigUChar * ) pattern + strlen ( pattern ) , ONIG_OPTION_IGNORECASE | ONIG_OPTION_DONT_CAPTURE_GROUP , ONIG_ENCODING_ASCII , & OnigSyntaxPerl , & err_info )"		3170613	0		=			
ANR	3170631	Identifier	err_code		3170613	0					
ANR	3170632	CallExpression	"onig_new ( & retval , ( const OnigUChar * ) pattern , ( const OnigUChar * ) pattern + strlen ( pattern ) , ONIG_OPTION_IGNORECASE | ONIG_OPTION_DONT_CAPTURE_GROUP , ONIG_ENCODING_ASCII , & OnigSyntaxPerl , & err_info )"		3170613	1					
ANR	3170633	Callee	onig_new		3170613	0					
ANR	3170634	Identifier	onig_new		3170613	0					
ANR	3170635	ArgumentList	& retval		3170613	1					
ANR	3170636	Argument	& retval		3170613	0					
ANR	3170637	UnaryOperationExpression	& retval		3170613	0					
ANR	3170638	UnaryOperator	&		3170613	0					
ANR	3170639	Identifier	retval		3170613	1					
ANR	3170640	Argument	( const OnigUChar * ) pattern		3170613	1					
ANR	3170641	CastExpression	( const OnigUChar * ) pattern		3170613	0					
ANR	3170642	CastTarget	const OnigUChar *		3170613	0					
ANR	3170643	Identifier	pattern		3170613	1					
ANR	3170644	Argument	( const OnigUChar * ) pattern + strlen ( pattern )		3170613	2					
ANR	3170645	AdditiveExpression	( const OnigUChar * ) pattern + strlen ( pattern )		3170613	0		+			
ANR	3170646	CastExpression	( const OnigUChar * ) pattern		3170613	0					
ANR	3170647	CastTarget	const OnigUChar *		3170613	0					
ANR	3170648	Identifier	pattern		3170613	1					
ANR	3170649	CallExpression	strlen ( pattern )		3170613	1					
ANR	3170650	Callee	strlen		3170613	0					
ANR	3170651	Identifier	strlen		3170613	0					
ANR	3170652	ArgumentList	pattern		3170613	1					
ANR	3170653	Argument	pattern		3170613	0					
ANR	3170654	Identifier	pattern		3170613	0					
ANR	3170655	Argument	ONIG_OPTION_IGNORECASE | ONIG_OPTION_DONT_CAPTURE_GROUP		3170613	3					
ANR	3170656	InclusiveOrExpression	ONIG_OPTION_IGNORECASE | ONIG_OPTION_DONT_CAPTURE_GROUP		3170613	0		|			
ANR	3170657	Identifier	ONIG_OPTION_IGNORECASE		3170613	0					
ANR	3170658	Identifier	ONIG_OPTION_DONT_CAPTURE_GROUP		3170613	1					
ANR	3170659	Argument	ONIG_ENCODING_ASCII		3170613	4					
ANR	3170660	Identifier	ONIG_ENCODING_ASCII		3170613	0					
ANR	3170661	Argument	& OnigSyntaxPerl		3170613	5					
ANR	3170662	UnaryOperationExpression	& OnigSyntaxPerl		3170613	0					
ANR	3170663	UnaryOperator	&		3170613	0					
ANR	3170664	Identifier	OnigSyntaxPerl		3170613	1					
ANR	3170665	Argument	& err_info		3170613	6					
ANR	3170666	UnaryOperationExpression	& err_info		3170613	0					
ANR	3170667	UnaryOperator	&		3170613	0					
ANR	3170668	Identifier	err_info		3170613	1					
ANR	3170669	CompoundStatement		11:2:300:345	3170613	1					
ANR	3170670	IdentifierDeclStatement	OnigUChar err_str [ ONIG_MAX_ERROR_MESSAGE_LEN ] ;	1009:2:29389:29434	3170613	0	True				
ANR	3170671	IdentifierDecl	err_str [ ONIG_MAX_ERROR_MESSAGE_LEN ]		3170613	0					
ANR	3170672	IdentifierDeclType	OnigUChar [ ONIG_MAX_ERROR_MESSAGE_LEN ]		3170613	0					
ANR	3170673	Identifier	err_str		3170613	1					
ANR	3170674	Identifier	ONIG_MAX_ERROR_MESSAGE_LEN		3170613	2					
ANR	3170675	ExpressionStatement	"onig_error_code_to_str ( err_str , err_code , err_info )"	1010:2:29438:29489	3170613	1	True				
ANR	3170676	CallExpression	"onig_error_code_to_str ( err_str , err_code , err_info )"		3170613	0					
ANR	3170677	Callee	onig_error_code_to_str		3170613	0					
ANR	3170678	Identifier	onig_error_code_to_str		3170613	0					
ANR	3170679	ArgumentList	err_str		3170613	1					
ANR	3170680	Argument	err_str		3170613	0					
ANR	3170681	Identifier	err_str		3170613	0					
ANR	3170682	Argument	err_code		3170613	1					
ANR	3170683	Identifier	err_code		3170613	0					
ANR	3170684	Argument	err_info		3170613	2					
ANR	3170685	Identifier	err_info		3170613	0					
ANR	3170686	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""%s: %s"" , pattern , err_str )"	1011:2:29493:29554	3170613	2	True				
ANR	3170687	CallExpression	"php_error_docref ( NULL , E_WARNING , ""%s: %s"" , pattern , err_str )"		3170613	0					
ANR	3170688	Callee	php_error_docref		3170613	0					
ANR	3170689	Identifier	php_error_docref		3170613	0					
ANR	3170690	ArgumentList	NULL		3170613	1					
ANR	3170691	Argument	NULL		3170613	0					
ANR	3170692	Identifier	NULL		3170613	0					
ANR	3170693	Argument	E_WARNING		3170613	1					
ANR	3170694	Identifier	E_WARNING		3170613	0					
ANR	3170695	Argument	"""%s: %s"""		3170613	2					
ANR	3170696	PrimaryExpression	"""%s: %s"""		3170613	0					
ANR	3170697	Argument	pattern		3170613	3					
ANR	3170698	Identifier	pattern		3170613	0					
ANR	3170699	Argument	err_str		3170613	4					
ANR	3170700	Identifier	err_str		3170613	0					
ANR	3170701	ExpressionStatement	retval = NULL	1012:2:29558:29571	3170613	3	True				
ANR	3170702	AssignmentExpression	retval = NULL		3170613	0		=			
ANR	3170703	Identifier	retval		3170613	0					
ANR	3170704	Identifier	NULL		3170613	1					
ANR	3170705	ReturnStatement	return retval ;	1014:1:29577:29590	3170613	4	True				
ANR	3170706	Identifier	retval		3170613	0					
ANR	3170707	ReturnType	static void *		3170613	1					
ANR	3170708	Identifier	_php_mb_compile_regex		3170613	2					
ANR	3170709	ParameterList	const char * pattern		3170613	3					
ANR	3170710	Parameter	const char * pattern	998:35:29067:29085	3170613	0	True				
ANR	3170711	ParameterType	const char *		3170613	0					
ANR	3170712	Identifier	pattern		3170613	1					
ANR	3170713	CFGEntryNode	ENTRY		3170613		True				
ANR	3170714	CFGExitNode	EXIT		3170613		True				
ANR	3170715	Symbol	NULL		3170613						
ANR	3170716	Symbol	& err_info		3170613						
ANR	3170717	Symbol	err_str		3170613						
ANR	3170718	Symbol	pattern		3170613						
ANR	3170719	Symbol	ONIG_OPTION_IGNORECASE		3170613						
ANR	3170720	Symbol	err_code		3170613						
ANR	3170721	Symbol	onig_new		3170613						
ANR	3170722	Symbol	retval		3170613						
ANR	3170723	Symbol	E_WARNING		3170613						
ANR	3170724	Symbol	strlen		3170613						
ANR	3170725	Symbol	ONIG_ENCODING_ASCII		3170613						
ANR	3170726	Symbol	& retval		3170613						
ANR	3170727	Symbol	err_info		3170613						
ANR	3170728	Symbol	ONIG_OPTION_DONT_CAPTURE_GROUP		3170613						
ANR	3170729	Symbol	& OnigSyntaxPerl		3170613						
ANR	3170730	Function	_php_mb_match_regex	1019:0:29635:29911							
ANR	3170731	FunctionDef	"_php_mb_match_regex (void * opaque , const char * str , size_t str_len)"		3170730	0					
ANR	3170732	CompoundStatement		1020:0:29713:29911	3170730	0					
ANR	3170733	ReturnStatement	"return onig_search ( ( php_mb_regex_t * ) opaque , ( const OnigUChar * ) str , ( const OnigUChar * ) str + str_len , ( const OnigUChar * ) str , ( const OnigUChar * ) str + str_len , NULL , ONIG_OPTION_NONE ) >= 0 ;"	1021:1:29716:29909	3170730	0	True				
ANR	3170734	RelationalExpression	"onig_search ( ( php_mb_regex_t * ) opaque , ( const OnigUChar * ) str , ( const OnigUChar * ) str + str_len , ( const OnigUChar * ) str , ( const OnigUChar * ) str + str_len , NULL , ONIG_OPTION_NONE ) >= 0"		3170730	0		>=			
ANR	3170735	CallExpression	"onig_search ( ( php_mb_regex_t * ) opaque , ( const OnigUChar * ) str , ( const OnigUChar * ) str + str_len , ( const OnigUChar * ) str , ( const OnigUChar * ) str + str_len , NULL , ONIG_OPTION_NONE )"		3170730	0					
ANR	3170736	Callee	onig_search		3170730	0					
ANR	3170737	Identifier	onig_search		3170730	0					
ANR	3170738	ArgumentList	( php_mb_regex_t * ) opaque		3170730	1					
ANR	3170739	Argument	( php_mb_regex_t * ) opaque		3170730	0					
ANR	3170740	CastExpression	( php_mb_regex_t * ) opaque		3170730	0					
ANR	3170741	CastTarget	php_mb_regex_t *		3170730	0					
ANR	3170742	Identifier	opaque		3170730	1					
ANR	3170743	Argument	( const OnigUChar * ) str		3170730	1					
ANR	3170744	CastExpression	( const OnigUChar * ) str		3170730	0					
ANR	3170745	CastTarget	const OnigUChar *		3170730	0					
ANR	3170746	Identifier	str		3170730	1					
ANR	3170747	Argument	( const OnigUChar * ) str + str_len		3170730	2					
ANR	3170748	AdditiveExpression	( const OnigUChar * ) str + str_len		3170730	0		+			
ANR	3170749	CastExpression	( const OnigUChar * ) str		3170730	0					
ANR	3170750	CastTarget	const OnigUChar *		3170730	0					
ANR	3170751	Identifier	str		3170730	1					
ANR	3170752	Identifier	str_len		3170730	1					
ANR	3170753	Argument	( const OnigUChar * ) str		3170730	3					
ANR	3170754	CastExpression	( const OnigUChar * ) str		3170730	0					
ANR	3170755	CastTarget	const OnigUChar *		3170730	0					
ANR	3170756	Identifier	str		3170730	1					
ANR	3170757	Argument	( const OnigUChar * ) str + str_len		3170730	4					
ANR	3170758	AdditiveExpression	( const OnigUChar * ) str + str_len		3170730	0		+			
ANR	3170759	CastExpression	( const OnigUChar * ) str		3170730	0					
ANR	3170760	CastTarget	const OnigUChar *		3170730	0					
ANR	3170761	Identifier	str		3170730	1					
ANR	3170762	Identifier	str_len		3170730	1					
ANR	3170763	Argument	NULL		3170730	5					
ANR	3170764	Identifier	NULL		3170730	0					
ANR	3170765	Argument	ONIG_OPTION_NONE		3170730	6					
ANR	3170766	Identifier	ONIG_OPTION_NONE		3170730	0					
ANR	3170767	PrimaryExpression	0		3170730	1					
ANR	3170768	ReturnType	static int		3170730	1					
ANR	3170769	Identifier	_php_mb_match_regex		3170730	2					
ANR	3170770	ParameterList	"void * opaque , const char * str , size_t str_len"		3170730	3					
ANR	3170771	Parameter	void * opaque	1019:31:29666:29677	3170730	0	True				
ANR	3170772	ParameterType	void *		3170730	0					
ANR	3170773	Identifier	opaque		3170730	1					
ANR	3170774	Parameter	const char * str	1019:45:29680:29694	3170730	1	True				
ANR	3170775	ParameterType	const char *		3170730	0					
ANR	3170776	Identifier	str		3170730	1					
ANR	3170777	Parameter	size_t str_len	1019:62:29697:29710	3170730	2	True				
ANR	3170778	ParameterType	size_t		3170730	0					
ANR	3170779	Identifier	str_len		3170730	1					
ANR	3170780	CFGEntryNode	ENTRY		3170730		True				
ANR	3170781	CFGExitNode	EXIT		3170730		True				
ANR	3170782	Symbol	str		3170730						
ANR	3170783	Symbol	opaque		3170730						
ANR	3170784	Symbol	NULL		3170730						
ANR	3170785	Symbol	str_len		3170730						
ANR	3170786	Symbol	ONIG_OPTION_NONE		3170730						
ANR	3170787	Symbol	onig_search		3170730						
ANR	3170788	Function	_php_mb_free_regex	1028:0:29953:30038							
ANR	3170789	FunctionDef	_php_mb_free_regex (void * opaque)		3170788	0					
ANR	3170790	CompoundStatement		1029:0:29998:30038	3170788	0					
ANR	3170791	ExpressionStatement	onig_free ( ( php_mb_regex_t * ) opaque )	1030:1:30001:30036	3170788	0	True				
ANR	3170792	CallExpression	onig_free ( ( php_mb_regex_t * ) opaque )		3170788	0					
ANR	3170793	Callee	onig_free		3170788	0					
ANR	3170794	Identifier	onig_free		3170788	0					
ANR	3170795	ArgumentList	( php_mb_regex_t * ) opaque		3170788	1					
ANR	3170796	Argument	( php_mb_regex_t * ) opaque		3170788	0					
ANR	3170797	CastExpression	( php_mb_regex_t * ) opaque		3170788	0					
ANR	3170798	CastTarget	php_mb_regex_t *		3170788	0					
ANR	3170799	Identifier	opaque		3170788	1					
ANR	3170800	ReturnType	static void		3170788	1					
ANR	3170801	Identifier	_php_mb_free_regex		3170788	2					
ANR	3170802	ParameterList	void * opaque		3170788	3					
ANR	3170803	Parameter	void * opaque	1028:31:29984:29995	3170788	0	True				
ANR	3170804	ParameterType	void *		3170788	0					
ANR	3170805	Identifier	opaque		3170788	1					
ANR	3170806	CFGEntryNode	ENTRY		3170788		True				
ANR	3170807	CFGExitNode	EXIT		3170788		True				
ANR	3170808	Symbol	opaque		3170788						
ANR	3170809	Function	_php_mb_compile_regex	1035:0:30119:30429							
ANR	3170810	FunctionDef	_php_mb_compile_regex (const char * pattern)		3170809	0					
ANR	3170811	CompoundStatement		1036:0:30175:30429	3170809	0					
ANR	3170812	IdentifierDeclStatement	pcre * retval ;	1037:1:30178:30190	3170809	0	True				
ANR	3170813	IdentifierDecl	* retval		3170809	0					
ANR	3170814	IdentifierDeclType	pcre *		3170809	0					
ANR	3170815	Identifier	retval		3170809	1					
ANR	3170816	IdentifierDeclStatement	const char * err_str ;	1038:1:30193:30212	3170809	1	True				
ANR	3170817	IdentifierDecl	* err_str		3170809	0					
ANR	3170818	IdentifierDeclType	const char *		3170809	0					
ANR	3170819	Identifier	err_str		3170809	1					
ANR	3170820	IdentifierDeclStatement	int err_offset ;	1039:1:30215:30229	3170809	2	True				
ANR	3170821	IdentifierDecl	err_offset		3170809	0					
ANR	3170822	IdentifierDeclType	int		3170809	0					
ANR	3170823	Identifier	err_offset		3170809	1					
ANR	3170824	IfStatement	"if ( ! ( retval = pcre_compile ( pattern , PCRE_CASELESS , & err_str , & err_offset , NULL ) ) )"		3170809	3					
ANR	3170825	Condition	"! ( retval = pcre_compile ( pattern , PCRE_CASELESS , & err_str , & err_offset , NULL ) )"	1041:5:30237:30316	3170809	0	True				
ANR	3170826	UnaryOperationExpression	"! ( retval = pcre_compile ( pattern , PCRE_CASELESS , & err_str , & err_offset , NULL ) )"		3170809	0					
ANR	3170827	UnaryOperator	!		3170809	0					
ANR	3170828	AssignmentExpression	"retval = pcre_compile ( pattern , PCRE_CASELESS , & err_str , & err_offset , NULL )"		3170809	1		=			
ANR	3170829	Identifier	retval		3170809	0					
ANR	3170830	CallExpression	"pcre_compile ( pattern , PCRE_CASELESS , & err_str , & err_offset , NULL )"		3170809	1					
ANR	3170831	Callee	pcre_compile		3170809	0					
ANR	3170832	Identifier	pcre_compile		3170809	0					
ANR	3170833	ArgumentList	pattern		3170809	1					
ANR	3170834	Argument	pattern		3170809	0					
ANR	3170835	Identifier	pattern		3170809	0					
ANR	3170836	Argument	PCRE_CASELESS		3170809	1					
ANR	3170837	Identifier	PCRE_CASELESS		3170809	0					
ANR	3170838	Argument	& err_str		3170809	2					
ANR	3170839	UnaryOperationExpression	& err_str		3170809	0					
ANR	3170840	UnaryOperator	&		3170809	0					
ANR	3170841	Identifier	err_str		3170809	1					
ANR	3170842	Argument	& err_offset		3170809	3					
ANR	3170843	UnaryOperationExpression	& err_offset		3170809	0					
ANR	3170844	UnaryOperator	&		3170809	0					
ANR	3170845	Identifier	err_offset		3170809	1					
ANR	3170846	Argument	NULL		3170809	4					
ANR	3170847	Identifier	NULL		3170809	0					
ANR	3170848	CompoundStatement		7:49:143:143	3170809	1					
ANR	3170849	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""%s (offset=%d): %s"" , pattern , err_offset , err_str )"	1043:2:30323:30408	3170809	0	True				
ANR	3170850	CallExpression	"php_error_docref ( NULL , E_WARNING , ""%s (offset=%d): %s"" , pattern , err_offset , err_str )"		3170809	0					
ANR	3170851	Callee	php_error_docref		3170809	0					
ANR	3170852	Identifier	php_error_docref		3170809	0					
ANR	3170853	ArgumentList	NULL		3170809	1					
ANR	3170854	Argument	NULL		3170809	0					
ANR	3170855	Identifier	NULL		3170809	0					
ANR	3170856	Argument	E_WARNING		3170809	1					
ANR	3170857	Identifier	E_WARNING		3170809	0					
ANR	3170858	Argument	"""%s (offset=%d): %s"""		3170809	2					
ANR	3170859	PrimaryExpression	"""%s (offset=%d): %s"""		3170809	0					
ANR	3170860	Argument	pattern		3170809	3					
ANR	3170861	Identifier	pattern		3170809	0					
ANR	3170862	Argument	err_offset		3170809	4					
ANR	3170863	Identifier	err_offset		3170809	0					
ANR	3170864	Argument	err_str		3170809	5					
ANR	3170865	Identifier	err_str		3170809	0					
ANR	3170866	ReturnStatement	return retval ;	1045:1:30414:30427	3170809	4	True				
ANR	3170867	Identifier	retval		3170809	0					
ANR	3170868	ReturnType	static void *		3170809	1					
ANR	3170869	Identifier	_php_mb_compile_regex		3170809	2					
ANR	3170870	ParameterList	const char * pattern		3170809	3					
ANR	3170871	Parameter	const char * pattern	1035:35:30154:30172	3170809	0	True				
ANR	3170872	ParameterType	const char *		3170809	0					
ANR	3170873	Identifier	pattern		3170809	1					
ANR	3170874	CFGEntryNode	ENTRY		3170809		True				
ANR	3170875	CFGExitNode	EXIT		3170809		True				
ANR	3170876	Symbol	E_WARNING		3170809						
ANR	3170877	Symbol	& err_offset		3170809						
ANR	3170878	Symbol	& err_str		3170809						
ANR	3170879	Symbol	NULL		3170809						
ANR	3170880	Symbol	err_str		3170809						
ANR	3170881	Symbol	pattern		3170809						
ANR	3170882	Symbol	PCRE_CASELESS		3170809						
ANR	3170883	Symbol	err_offset		3170809						
ANR	3170884	Symbol	retval		3170809						
ANR	3170885	Symbol	pcre_compile		3170809						
ANR	3170886	Function	_php_mb_match_regex	1050:0:30472:30635							
ANR	3170887	FunctionDef	"_php_mb_match_regex (void * opaque , const char * str , size_t str_len)"		3170886	0					
ANR	3170888	CompoundStatement		1051:0:30550:30635	3170886	0					
ANR	3170889	ReturnStatement	"return pcre_exec ( ( pcre * ) opaque , NULL , str , ( int ) str_len , 0 , 0 , NULL , 0 ) >= 0 ;"	1052:1:30553:30633	3170886	0	True				
ANR	3170890	RelationalExpression	"pcre_exec ( ( pcre * ) opaque , NULL , str , ( int ) str_len , 0 , 0 , NULL , 0 ) >= 0"		3170886	0		>=			
ANR	3170891	CallExpression	"pcre_exec ( ( pcre * ) opaque , NULL , str , ( int ) str_len , 0 , 0 , NULL , 0 )"		3170886	0					
ANR	3170892	Callee	pcre_exec		3170886	0					
ANR	3170893	Identifier	pcre_exec		3170886	0					
ANR	3170894	ArgumentList	( pcre * ) opaque		3170886	1					
ANR	3170895	Argument	( pcre * ) opaque		3170886	0					
ANR	3170896	CastExpression	( pcre * ) opaque		3170886	0					
ANR	3170897	CastTarget	pcre *		3170886	0					
ANR	3170898	Identifier	opaque		3170886	1					
ANR	3170899	Argument	NULL		3170886	1					
ANR	3170900	Identifier	NULL		3170886	0					
ANR	3170901	Argument	str		3170886	2					
ANR	3170902	Identifier	str		3170886	0					
ANR	3170903	Argument	( int ) str_len		3170886	3					
ANR	3170904	CastExpression	( int ) str_len		3170886	0					
ANR	3170905	CastTarget	int		3170886	0					
ANR	3170906	Identifier	str_len		3170886	1					
ANR	3170907	Argument	0		3170886	4					
ANR	3170908	PrimaryExpression	0		3170886	0					
ANR	3170909	Argument	0		3170886	5					
ANR	3170910	PrimaryExpression	0		3170886	0					
ANR	3170911	Argument	NULL		3170886	6					
ANR	3170912	Identifier	NULL		3170886	0					
ANR	3170913	Argument	0		3170886	7					
ANR	3170914	PrimaryExpression	0		3170886	0					
ANR	3170915	PrimaryExpression	0		3170886	1					
ANR	3170916	ReturnType	static int		3170886	1					
ANR	3170917	Identifier	_php_mb_match_regex		3170886	2					
ANR	3170918	ParameterList	"void * opaque , const char * str , size_t str_len"		3170886	3					
ANR	3170919	Parameter	void * opaque	1050:31:30503:30514	3170886	0	True				
ANR	3170920	ParameterType	void *		3170886	0					
ANR	3170921	Identifier	opaque		3170886	1					
ANR	3170922	Parameter	const char * str	1050:45:30517:30531	3170886	1	True				
ANR	3170923	ParameterType	const char *		3170886	0					
ANR	3170924	Identifier	str		3170886	1					
ANR	3170925	Parameter	size_t str_len	1050:62:30534:30547	3170886	2	True				
ANR	3170926	ParameterType	size_t		3170886	0					
ANR	3170927	Identifier	str_len		3170886	1					
ANR	3170928	CFGEntryNode	ENTRY		3170886		True				
ANR	3170929	CFGExitNode	EXIT		3170886		True				
ANR	3170930	Symbol	str		3170886						
ANR	3170931	Symbol	opaque		3170886						
ANR	3170932	Symbol	NULL		3170886						
ANR	3170933	Symbol	str_len		3170886						
ANR	3170934	Symbol	pcre_exec		3170886						
ANR	3170935	Function	_php_mb_free_regex	1058:0:30677:30744							
ANR	3170936	FunctionDef	_php_mb_free_regex (void * opaque)		3170935	0					
ANR	3170937	CompoundStatement		1059:0:30722:30744	3170935	0					
ANR	3170938	ExpressionStatement	pcre_free ( opaque )	1060:1:30725:30742	3170935	0	True				
ANR	3170939	CallExpression	pcre_free ( opaque )		3170935	0					
ANR	3170940	Callee	pcre_free		3170935	0					
ANR	3170941	Identifier	pcre_free		3170935	0					
ANR	3170942	ArgumentList	opaque		3170935	1					
ANR	3170943	Argument	opaque		3170935	0					
ANR	3170944	Identifier	opaque		3170935	0					
ANR	3170945	ReturnType	static void		3170935	1					
ANR	3170946	Identifier	_php_mb_free_regex		3170935	2					
ANR	3170947	ParameterList	void * opaque		3170935	3					
ANR	3170948	Parameter	void * opaque	1058:31:30708:30719	3170935	0	True				
ANR	3170949	ParameterType	void *		3170935	0					
ANR	3170950	Identifier	opaque		3170935	1					
ANR	3170951	CFGEntryNode	ENTRY		3170935		True				
ANR	3170952	CFGExitNode	EXIT		3170935		True				
ANR	3170953	Symbol	opaque		3170935						
ANR	3170954	Function	php_mb_nls_get_default_detect_order_list	1066:0:30815:31461							
ANR	3170955	FunctionDef	"php_mb_nls_get_default_detect_order_list (enum mbfl_no_language lang , enum mbfl_no_encoding * * plist , size_t * plist_size)"		3170954	0					
ANR	3170956	CompoundStatement		1067:0:30946:31461	3170954	0					
ANR	3170957	IdentifierDeclStatement	size_t i ;	1068:1:30949:30957	3170954	0	True				
ANR	3170958	IdentifierDecl	i		3170954	0					
ANR	3170959	IdentifierDeclType	size_t		3170954	0					
ANR	3170960	Identifier	i		3170954	1					
ANR	3170961	ExpressionStatement	* plist = ( enum mbfl_no_encoding * ) php_mb_default_identify_list_neut	1070:1:30961:31029	3170954	1	True				
ANR	3170962	AssignmentExpression	* plist = ( enum mbfl_no_encoding * ) php_mb_default_identify_list_neut		3170954	0		=			
ANR	3170963	UnaryOperationExpression	* plist		3170954	0					
ANR	3170964	UnaryOperator	*		3170954	0					
ANR	3170965	Identifier	plist		3170954	1					
ANR	3170966	CastExpression	( enum mbfl_no_encoding * ) php_mb_default_identify_list_neut		3170954	1					
ANR	3170967	CastTarget	enum mbfl_no_encoding *		3170954	0					
ANR	3170968	Identifier	php_mb_default_identify_list_neut		3170954	1					
ANR	3170969	ExpressionStatement	* plist_size = sizeof ( php_mb_default_identify_list_neut ) / sizeof ( php_mb_default_identify_list_neut [ 0 ] )	1071:1:31032:31134	3170954	2	True				
ANR	3170970	AssignmentExpression	* plist_size = sizeof ( php_mb_default_identify_list_neut ) / sizeof ( php_mb_default_identify_list_neut [ 0 ] )		3170954	0		=			
ANR	3170971	UnaryOperationExpression	* plist_size		3170954	0					
ANR	3170972	UnaryOperator	*		3170954	0					
ANR	3170973	Identifier	plist_size		3170954	1					
ANR	3170974	MultiplicativeExpression	sizeof ( php_mb_default_identify_list_neut ) / sizeof ( php_mb_default_identify_list_neut [ 0 ] )		3170954	1		/			
ANR	3170975	SizeofExpression	sizeof ( php_mb_default_identify_list_neut )		3170954	0					
ANR	3170976	Sizeof	sizeof		3170954	0					
ANR	3170977	SizeofOperand	php_mb_default_identify_list_neut		3170954	1					
ANR	3170978	SizeofExpression	sizeof ( php_mb_default_identify_list_neut [ 0 ] )		3170954	1					
ANR	3170979	Sizeof	sizeof		3170954	0					
ANR	3170980	ArrayIndexing	php_mb_default_identify_list_neut [ 0 ]		3170954	1					
ANR	3170981	Identifier	php_mb_default_identify_list_neut		3170954	0					
ANR	3170982	PrimaryExpression	0		3170954	1					
ANR	3170983	ForStatement	for ( i = 0 ; i < sizeof ( php_mb_default_identify_list ) / sizeof ( php_mb_default_identify_list [ 0 ] ) ; i ++ )		3170954	3					
ANR	3170984	ForInit	i = 0 ;	1073:6:31143:31148	3170954	0	True				
ANR	3170985	AssignmentExpression	i = 0		3170954	0		=			
ANR	3170986	Identifier	i		3170954	0					
ANR	3170987	PrimaryExpression	0		3170954	1					
ANR	3170988	Condition	i < sizeof ( php_mb_default_identify_list ) / sizeof ( php_mb_default_identify_list [ 0 ] )	1073:13:31150:31231	3170954	1	True				
ANR	3170989	RelationalExpression	i < sizeof ( php_mb_default_identify_list ) / sizeof ( php_mb_default_identify_list [ 0 ] )		3170954	0		<			
ANR	3170990	Identifier	i		3170954	0					
ANR	3170991	MultiplicativeExpression	sizeof ( php_mb_default_identify_list ) / sizeof ( php_mb_default_identify_list [ 0 ] )		3170954	1		/			
ANR	3170992	SizeofExpression	sizeof ( php_mb_default_identify_list )		3170954	0					
ANR	3170993	Sizeof	sizeof		3170954	0					
ANR	3170994	SizeofOperand	php_mb_default_identify_list		3170954	1					
ANR	3170995	SizeofExpression	sizeof ( php_mb_default_identify_list [ 0 ] )		3170954	1					
ANR	3170996	Sizeof	sizeof		3170954	0					
ANR	3170997	ArrayIndexing	php_mb_default_identify_list [ 0 ]		3170954	1					
ANR	3170998	Identifier	php_mb_default_identify_list		3170954	0					
ANR	3170999	PrimaryExpression	0		3170954	1					
ANR	3171000	PostIncDecOperationExpression	i ++	1073:97:31234:31236	3170954	2	True				
ANR	3171001	Identifier	i		3170954	0					
ANR	3171002	IncDec	++		3170954	1					
ANR	3171003	CompoundStatement		7:102:292:292	3170954	3					
ANR	3171004	IfStatement	if ( php_mb_default_identify_list [ i ] . lang == lang )		3170954	0					
ANR	3171005	Condition	php_mb_default_identify_list [ i ] . lang == lang	1074:6:31247:31290	3170954	0	True				
ANR	3171006	EqualityExpression	php_mb_default_identify_list [ i ] . lang == lang		3170954	0		==			
ANR	3171007	MemberAccess	php_mb_default_identify_list [ i ] . lang		3170954	0					
ANR	3171008	ArrayIndexing	php_mb_default_identify_list [ i ]		3170954	0					
ANR	3171009	Identifier	php_mb_default_identify_list		3170954	0					
ANR	3171010	Identifier	i		3170954	1					
ANR	3171011	Identifier	lang		3170954	1					
ANR	3171012	Identifier	lang		3170954	1					
ANR	3171013	CompoundStatement		8:52:346:346	3170954	1					
ANR	3171014	ExpressionStatement	* plist = ( enum mbfl_no_encoding * ) php_mb_default_identify_list [ i ] . list	1075:3:31298:31368	3170954	0	True				
ANR	3171015	AssignmentExpression	* plist = ( enum mbfl_no_encoding * ) php_mb_default_identify_list [ i ] . list		3170954	0		=			
ANR	3171016	UnaryOperationExpression	* plist		3170954	0					
ANR	3171017	UnaryOperator	*		3170954	0					
ANR	3171018	Identifier	plist		3170954	1					
ANR	3171019	CastExpression	( enum mbfl_no_encoding * ) php_mb_default_identify_list [ i ] . list		3170954	1					
ANR	3171020	CastTarget	enum mbfl_no_encoding *		3170954	0					
ANR	3171021	MemberAccess	php_mb_default_identify_list [ i ] . list		3170954	1					
ANR	3171022	ArrayIndexing	php_mb_default_identify_list [ i ]		3170954	0					
ANR	3171023	Identifier	php_mb_default_identify_list		3170954	0					
ANR	3171024	Identifier	i		3170954	1					
ANR	3171025	Identifier	list		3170954	1					
ANR	3171026	ExpressionStatement	* plist_size = php_mb_default_identify_list [ i ] . list_size	1076:3:31373:31428	3170954	1	True				
ANR	3171027	AssignmentExpression	* plist_size = php_mb_default_identify_list [ i ] . list_size		3170954	0		=			
ANR	3171028	UnaryOperationExpression	* plist_size		3170954	0					
ANR	3171029	UnaryOperator	*		3170954	0					
ANR	3171030	Identifier	plist_size		3170954	1					
ANR	3171031	MemberAccess	php_mb_default_identify_list [ i ] . list_size		3170954	1					
ANR	3171032	ArrayIndexing	php_mb_default_identify_list [ i ]		3170954	0					
ANR	3171033	Identifier	php_mb_default_identify_list		3170954	0					
ANR	3171034	Identifier	i		3170954	1					
ANR	3171035	Identifier	list_size		3170954	1					
ANR	3171036	ReturnStatement	return 1 ;	1077:3:31433:31441	3170954	2	True				
ANR	3171037	PrimaryExpression	1		3170954	0					
ANR	3171038	ReturnStatement	return 0 ;	1080:1:31451:31459	3170954	4	True				
ANR	3171039	PrimaryExpression	0		3170954	0					
ANR	3171040	ReturnType	static int		3170954	1					
ANR	3171041	Identifier	php_mb_nls_get_default_detect_order_list		3170954	2					
ANR	3171042	ParameterList	"enum mbfl_no_language lang , enum mbfl_no_encoding * * plist , size_t * plist_size"		3170954	3					
ANR	3171043	Parameter	enum mbfl_no_language lang	1066:52:30867:30892	3170954	0	True				
ANR	3171044	ParameterType	enum mbfl_no_language		3170954	0					
ANR	3171045	Identifier	lang		3170954	1					
ANR	3171046	Parameter	enum mbfl_no_encoding * * plist	1066:80:30895:30923	3170954	1	True				
ANR	3171047	ParameterType	enum mbfl_no_encoding * *		3170954	0					
ANR	3171048	Identifier	plist		3170954	1					
ANR	3171049	Parameter	size_t * plist_size	1066:111:30926:30943	3170954	2	True				
ANR	3171050	ParameterType	size_t *		3170954	0					
ANR	3171051	Identifier	plist_size		3170954	1					
ANR	3171052	CFGEntryNode	ENTRY		3170954		True				
ANR	3171053	CFGExitNode	EXIT		3170954		True				
ANR	3171054	Symbol	php_mb_default_identify_list [ i ] . list_size		3170954						
ANR	3171055	Symbol	* plist		3170954						
ANR	3171056	Symbol	* php_mb_default_identify_list_neut		3170954						
ANR	3171057	Symbol	php_mb_default_identify_list_neut		3170954						
ANR	3171058	Symbol	i		3170954						
ANR	3171059	Symbol	php_mb_default_identify_list [ i ] . list		3170954						
ANR	3171060	Symbol	* plist_size		3170954						
ANR	3171061	Symbol	php_mb_default_identify_list		3170954						
ANR	3171062	Symbol	plist		3170954						
ANR	3171063	Symbol	* i		3170954						
ANR	3171064	Symbol	* php_mb_default_identify_list		3170954						
ANR	3171065	Symbol	plist_size		3170954						
ANR	3171066	Symbol	lang		3170954						
ANR	3171067	Symbol	php_mb_default_identify_list [ i ] . lang		3170954						
ANR	3171068	Function	php_mb_rfc1867_substring_conf	1084:0:31474:32014							
ANR	3171069	FunctionDef	"php_mb_rfc1867_substring_conf (const zend_encoding * encoding , char * start , int len , char quote)"		3171068	0					
ANR	3171070	CompoundStatement		1085:0:31582:32014	3171068	0					
ANR	3171071	IdentifierDeclStatement	char * result = emalloc ( len + 2 ) ;	1086:1:31585:31616	3171068	0	True				
ANR	3171072	IdentifierDecl	* result = emalloc ( len + 2 )		3171068	0					
ANR	3171073	IdentifierDeclType	char *		3171068	0					
ANR	3171074	Identifier	result		3171068	1					
ANR	3171075	AssignmentExpression	* result = emalloc ( len + 2 )		3171068	2		=			
ANR	3171076	Identifier	result		3171068	0					
ANR	3171077	CallExpression	emalloc ( len + 2 )		3171068	1					
ANR	3171078	Callee	emalloc		3171068	0					
ANR	3171079	Identifier	emalloc		3171068	0					
ANR	3171080	ArgumentList	len + 2		3171068	1					
ANR	3171081	Argument	len + 2		3171068	0					
ANR	3171082	AdditiveExpression	len + 2		3171068	0		+			
ANR	3171083	Identifier	len		3171068	0					
ANR	3171084	PrimaryExpression	2		3171068	1					
ANR	3171085	IdentifierDeclStatement	char * resp = result ;	1087:1:31619:31638	3171068	1	True				
ANR	3171086	IdentifierDecl	* resp = result		3171068	0					
ANR	3171087	IdentifierDeclType	char *		3171068	0					
ANR	3171088	Identifier	resp		3171068	1					
ANR	3171089	AssignmentExpression	* resp = result		3171068	2		=			
ANR	3171090	Identifier	result		3171068	0					
ANR	3171091	Identifier	result		3171068	1					
ANR	3171092	IdentifierDeclStatement	int i ;	1088:1:31641:31646	3171068	2	True				
ANR	3171093	IdentifierDecl	i		3171068	0					
ANR	3171094	IdentifierDeclType	int		3171068	0					
ANR	3171095	Identifier	i		3171068	1					
ANR	3171096	ForStatement	for ( i = 0 ; i < len && start [ i ] != quote ; ++ i )		3171068	3					
ANR	3171097	ForInit	i = 0 ;	1090:6:31655:31660	3171068	0	True				
ANR	3171098	AssignmentExpression	i = 0		3171068	0		=			
ANR	3171099	Identifier	i		3171068	0					
ANR	3171100	PrimaryExpression	0		3171068	1					
ANR	3171101	Condition	i < len && start [ i ] != quote	1090:13:31662:31689	3171068	1	True				
ANR	3171102	AndExpression	i < len && start [ i ] != quote		3171068	0		&&			
ANR	3171103	RelationalExpression	i < len		3171068	0		<			
ANR	3171104	Identifier	i		3171068	0					
ANR	3171105	Identifier	len		3171068	1					
ANR	3171106	EqualityExpression	start [ i ] != quote		3171068	1		!=			
ANR	3171107	ArrayIndexing	start [ i ]		3171068	0					
ANR	3171108	Identifier	start		3171068	0					
ANR	3171109	Identifier	i		3171068	1					
ANR	3171110	Identifier	quote		3171068	1					
ANR	3171111	UnaryExpression	++ i	1090:43:31692:31694	3171068	2	True				
ANR	3171112	IncDec	++		3171068	0					
ANR	3171113	Identifier	i		3171068	1					
ANR	3171114	CompoundStatement		6:48:114:114	3171068	3					
ANR	3171115	IfStatement	if ( start [ i ] == '\\\\' && ( start [ i + 1 ] == '\\\\' || ( quote && start [ i + 1 ] == quote ) ) )		3171068	0					
ANR	3171116	Condition	start [ i ] == '\\\\' && ( start [ i + 1 ] == '\\\\' || ( quote && start [ i + 1 ] == quote ) )	1091:6:31705:31782	3171068	0	True				
ANR	3171117	AndExpression	start [ i ] == '\\\\' && ( start [ i + 1 ] == '\\\\' || ( quote && start [ i + 1 ] == quote ) )		3171068	0		&&			
ANR	3171118	EqualityExpression	start [ i ] == '\\\\'		3171068	0		==			
ANR	3171119	ArrayIndexing	start [ i ]		3171068	0					
ANR	3171120	Identifier	start		3171068	0					
ANR	3171121	Identifier	i		3171068	1					
ANR	3171122	PrimaryExpression	'\\\\'		3171068	1					
ANR	3171123	OrExpression	start [ i + 1 ] == '\\\\' || ( quote && start [ i + 1 ] == quote )		3171068	1		||			
ANR	3171124	EqualityExpression	start [ i + 1 ] == '\\\\'		3171068	0		==			
ANR	3171125	ArrayIndexing	start [ i + 1 ]		3171068	0					
ANR	3171126	Identifier	start		3171068	0					
ANR	3171127	AdditiveExpression	i + 1		3171068	1		+			
ANR	3171128	Identifier	i		3171068	0					
ANR	3171129	PrimaryExpression	1		3171068	1					
ANR	3171130	PrimaryExpression	'\\\\'		3171068	1					
ANR	3171131	AndExpression	quote && start [ i + 1 ] == quote		3171068	1		&&			
ANR	3171132	Identifier	quote		3171068	0					
ANR	3171133	EqualityExpression	start [ i + 1 ] == quote		3171068	1		==			
ANR	3171134	ArrayIndexing	start [ i + 1 ]		3171068	0					
ANR	3171135	Identifier	start		3171068	0					
ANR	3171136	AdditiveExpression	i + 1		3171068	1		+			
ANR	3171137	Identifier	i		3171068	0					
ANR	3171138	PrimaryExpression	1		3171068	1					
ANR	3171139	Identifier	quote		3171068	1					
ANR	3171140	CompoundStatement		7:86:202:202	3171068	1					
ANR	3171141	ExpressionStatement	* resp ++ = start [ ++ i ]	1092:3:31790:31810	3171068	0	True				
ANR	3171142	AssignmentExpression	* resp ++ = start [ ++ i ]		3171068	0		=			
ANR	3171143	UnaryOperationExpression	* resp ++		3171068	0					
ANR	3171144	UnaryOperator	*		3171068	0					
ANR	3171145	PostIncDecOperationExpression	resp ++		3171068	1					
ANR	3171146	Identifier	resp		3171068	0					
ANR	3171147	IncDec	++		3171068	1					
ANR	3171148	ArrayIndexing	start [ ++ i ]		3171068	1					
ANR	3171149	Identifier	start		3171068	0					
ANR	3171150	UnaryExpression	++ i		3171068	1					
ANR	3171151	IncDec	++		3171068	0					
ANR	3171152	Identifier	i		3171068	1					
ANR	3171153	ElseStatement	else		3171068	0					
ANR	3171154	CompoundStatement		10:3:243:318	3171068	0					
ANR	3171155	IdentifierDeclStatement	"size_t j = php_mb_mbchar_bytes_ex ( start + i , ( const mbfl_encoding * ) encoding ) ;"	1094:3:31826:31901	3171068	0	True				
ANR	3171156	IdentifierDecl	"j = php_mb_mbchar_bytes_ex ( start + i , ( const mbfl_encoding * ) encoding )"		3171068	0					
ANR	3171157	IdentifierDeclType	size_t		3171068	0					
ANR	3171158	Identifier	j		3171068	1					
ANR	3171159	AssignmentExpression	"j = php_mb_mbchar_bytes_ex ( start + i , ( const mbfl_encoding * ) encoding )"		3171068	2		=			
ANR	3171160	Identifier	j		3171068	0					
ANR	3171161	CallExpression	"php_mb_mbchar_bytes_ex ( start + i , ( const mbfl_encoding * ) encoding )"		3171068	1					
ANR	3171162	Callee	php_mb_mbchar_bytes_ex		3171068	0					
ANR	3171163	Identifier	php_mb_mbchar_bytes_ex		3171068	0					
ANR	3171164	ArgumentList	start + i		3171068	1					
ANR	3171165	Argument	start + i		3171068	0					
ANR	3171166	AdditiveExpression	start + i		3171068	0		+			
ANR	3171167	Identifier	start		3171068	0					
ANR	3171168	Identifier	i		3171068	1					
ANR	3171169	Argument	( const mbfl_encoding * ) encoding		3171068	1					
ANR	3171170	CastExpression	( const mbfl_encoding * ) encoding		3171068	0					
ANR	3171171	CastTarget	const mbfl_encoding *		3171068	0					
ANR	3171172	Identifier	encoding		3171068	1					
ANR	3171173	WhileStatement	while ( j -- > 0 && i < len )		3171068	1					
ANR	3171174	Condition	j -- > 0 && i < len	1096:10:31914:31931	3171068	0	True				
ANR	3171175	AndExpression	j -- > 0 && i < len		3171068	0		&&			
ANR	3171176	RelationalExpression	j -- > 0		3171068	0		>			
ANR	3171177	PostIncDecOperationExpression	j --		3171068	0					
ANR	3171178	Identifier	j		3171068	0					
ANR	3171179	IncDec	--		3171068	1					
ANR	3171180	PrimaryExpression	0		3171068	1					
ANR	3171181	RelationalExpression	i < len		3171068	1		<			
ANR	3171182	Identifier	i		3171068	0					
ANR	3171183	Identifier	len		3171068	1					
ANR	3171184	CompoundStatement		12:30:351:351	3171068	1					
ANR	3171185	ExpressionStatement	* resp ++ = start [ i ++ ]	1097:4:31940:31960	3171068	0	True				
ANR	3171186	AssignmentExpression	* resp ++ = start [ i ++ ]		3171068	0		=			
ANR	3171187	UnaryOperationExpression	* resp ++		3171068	0					
ANR	3171188	UnaryOperator	*		3171068	0					
ANR	3171189	PostIncDecOperationExpression	resp ++		3171068	1					
ANR	3171190	Identifier	resp		3171068	0					
ANR	3171191	IncDec	++		3171068	1					
ANR	3171192	ArrayIndexing	start [ i ++ ]		3171068	1					
ANR	3171193	Identifier	start		3171068	0					
ANR	3171194	PostIncDecOperationExpression	i ++		3171068	1					
ANR	3171195	Identifier	i		3171068	0					
ANR	3171196	IncDec	++		3171068	1					
ANR	3171197	ExpressionStatement	-- i	1099:3:31970:31973	3171068	2	True				
ANR	3171198	UnaryExpression	-- i		3171068	0					
ANR	3171199	IncDec	--		3171068	0					
ANR	3171200	Identifier	i		3171068	1					
ANR	3171201	ExpressionStatement	* resp = '\\0'	1103:1:31984:31996	3171068	4	True				
ANR	3171202	AssignmentExpression	* resp = '\\0'		3171068	0		=			
ANR	3171203	UnaryOperationExpression	* resp		3171068	0					
ANR	3171204	UnaryOperator	*		3171068	0					
ANR	3171205	Identifier	resp		3171068	1					
ANR	3171206	PrimaryExpression	'\\0'		3171068	1					
ANR	3171207	ReturnStatement	return result ;	1104:1:31999:32012	3171068	5	True				
ANR	3171208	Identifier	result		3171068	0					
ANR	3171209	ReturnType	static char *		3171068	1					
ANR	3171210	Identifier	php_mb_rfc1867_substring_conf		3171068	2					
ANR	3171211	ParameterList	"const zend_encoding * encoding , char * start , int len , char quote"		3171068	3					
ANR	3171212	Parameter	const zend_encoding * encoding	1084:43:31517:31545	3171068	0	True				
ANR	3171213	ParameterType	const zend_encoding *		3171068	0					
ANR	3171214	Identifier	encoding		3171068	1					
ANR	3171215	Parameter	char * start	1084:74:31548:31558	3171068	1	True				
ANR	3171216	ParameterType	char *		3171068	0					
ANR	3171217	Identifier	start		3171068	1					
ANR	3171218	Parameter	int len	1084:87:31561:31567	3171068	2	True				
ANR	3171219	ParameterType	int		3171068	0					
ANR	3171220	Identifier	len		3171068	1					
ANR	3171221	Parameter	char quote	1084:96:31570:31579	3171068	3	True				
ANR	3171222	ParameterType	char		3171068	0					
ANR	3171223	Identifier	quote		3171068	1					
ANR	3171224	CFGEntryNode	ENTRY		3171068		True				
ANR	3171225	CFGExitNode	EXIT		3171068		True				
ANR	3171226	Symbol	php_mb_mbchar_bytes_ex		3171068						
ANR	3171227	Symbol	resp		3171068						
ANR	3171228	Symbol	* resp		3171068						
ANR	3171229	Symbol	* start		3171068						
ANR	3171230	Symbol	start		3171068						
ANR	3171231	Symbol	i		3171068						
ANR	3171232	Symbol	j		3171068						
ANR	3171233	Symbol	encoding		3171068						
ANR	3171234	Symbol	result		3171068						
ANR	3171235	Symbol	emalloc		3171068						
ANR	3171236	Symbol	quote		3171068						
ANR	3171237	Symbol	* i		3171068						
ANR	3171238	Symbol	len		3171068						
ANR	3171239	Symbol	* resp ++		3171068						
ANR	3171240	Function	php_mb_rfc1867_getword	1107:0:32017:32764							
ANR	3171241	FunctionDef	"php_mb_rfc1867_getword (const zend_encoding * encoding , char * * line , char stop)"		3171240	0					
ANR	3171242	CompoundStatement		1108:0:32118:32764	3171240	0					
ANR	3171243	IdentifierDeclStatement	"char * pos = * line , quote ;"	1109:1:32121:32145	3171240	0	True				
ANR	3171244	IdentifierDecl	* pos = * line		3171240	0					
ANR	3171245	IdentifierDeclType	char *		3171240	0					
ANR	3171246	Identifier	pos		3171240	1					
ANR	3171247	AssignmentExpression	* pos = * line		3171240	2		=			
ANR	3171248	Identifier	pos		3171240	0					
ANR	3171249	UnaryOperationExpression	* line		3171240	1					
ANR	3171250	UnaryOperator	*		3171240	0					
ANR	3171251	Identifier	line		3171240	1					
ANR	3171252	IdentifierDecl	quote		3171240	1					
ANR	3171253	IdentifierDeclType	char		3171240	0					
ANR	3171254	Identifier	quote		3171240	1					
ANR	3171255	IdentifierDeclStatement	char * res ;	1110:1:32148:32157	3171240	1	True				
ANR	3171256	IdentifierDecl	* res		3171240	0					
ANR	3171257	IdentifierDeclType	char *		3171240	0					
ANR	3171258	Identifier	res		3171240	1					
ANR	3171259	WhileStatement	while ( * pos && * pos != stop )		3171240	2					
ANR	3171260	Condition	* pos && * pos != stop	1112:8:32168:32187	3171240	0	True				
ANR	3171261	AndExpression	* pos && * pos != stop		3171240	0		&&			
ANR	3171262	UnaryOperationExpression	* pos		3171240	0					
ANR	3171263	UnaryOperator	*		3171240	0					
ANR	3171264	Identifier	pos		3171240	1					
ANR	3171265	EqualityExpression	* pos != stop		3171240	1		!=			
ANR	3171266	UnaryOperationExpression	* pos		3171240	0					
ANR	3171267	UnaryOperator	*		3171240	0					
ANR	3171268	Identifier	pos		3171240	1					
ANR	3171269	Identifier	stop		3171240	1					
ANR	3171270	CompoundStatement		5:30:71:71	3171240	1					
ANR	3171271	IfStatement	"if ( ( quote = * pos ) == '""' || quote == '\\'' )"		3171240	0					
ANR	3171272	Condition	"( quote = * pos ) == '""' || quote == '\\''"	1113:6:32198:32235	3171240	0	True				
ANR	3171273	OrExpression	"( quote = * pos ) == '""' || quote == '\\''"		3171240	0		||			
ANR	3171274	EqualityExpression	"( quote = * pos ) == '""'"		3171240	0		==			
ANR	3171275	AssignmentExpression	quote = * pos		3171240	0		=			
ANR	3171276	Identifier	quote		3171240	0					
ANR	3171277	UnaryOperationExpression	* pos		3171240	1					
ANR	3171278	UnaryOperator	*		3171240	0					
ANR	3171279	Identifier	pos		3171240	1					
ANR	3171280	PrimaryExpression	"'""'"		3171240	1					
ANR	3171281	EqualityExpression	quote == '\\''		3171240	1		==			
ANR	3171282	Identifier	quote		3171240	0					
ANR	3171283	PrimaryExpression	'\\''		3171240	1					
ANR	3171284	CompoundStatement		6:46:119:119	3171240	1					
ANR	3171285	ExpressionStatement	++ pos	1114:3:32243:32248	3171240	0	True				
ANR	3171286	UnaryExpression	++ pos		3171240	0					
ANR	3171287	IncDec	++		3171240	0					
ANR	3171288	Identifier	pos		3171240	1					
ANR	3171289	WhileStatement	while ( * pos && * pos != quote )		3171240	1					
ANR	3171290	Condition	* pos && * pos != quote	1115:10:32260:32280	3171240	0	True				
ANR	3171291	AndExpression	* pos && * pos != quote		3171240	0		&&			
ANR	3171292	UnaryOperationExpression	* pos		3171240	0					
ANR	3171293	UnaryOperator	*		3171240	0					
ANR	3171294	Identifier	pos		3171240	1					
ANR	3171295	EqualityExpression	* pos != quote		3171240	1		!=			
ANR	3171296	UnaryOperationExpression	* pos		3171240	0					
ANR	3171297	UnaryOperator	*		3171240	0					
ANR	3171298	Identifier	pos		3171240	1					
ANR	3171299	Identifier	quote		3171240	1					
ANR	3171300	CompoundStatement		8:33:164:164	3171240	1					
ANR	3171301	IfStatement	if ( * pos == '\\\\' && pos [ 1 ] && pos [ 1 ] == quote )		3171240	0					
ANR	3171302	Condition	* pos == '\\\\' && pos [ 1 ] && pos [ 1 ] == quote	1116:8:32293:32333	3171240	0	True				
ANR	3171303	AndExpression	* pos == '\\\\' && pos [ 1 ] && pos [ 1 ] == quote		3171240	0		&&			
ANR	3171304	EqualityExpression	* pos == '\\\\'		3171240	0		==			
ANR	3171305	UnaryOperationExpression	* pos		3171240	0					
ANR	3171306	UnaryOperator	*		3171240	0					
ANR	3171307	Identifier	pos		3171240	1					
ANR	3171308	PrimaryExpression	'\\\\'		3171240	1					
ANR	3171309	AndExpression	pos [ 1 ] && pos [ 1 ] == quote		3171240	1		&&			
ANR	3171310	ArrayIndexing	pos [ 1 ]		3171240	0					
ANR	3171311	Identifier	pos		3171240	0					
ANR	3171312	PrimaryExpression	1		3171240	1					
ANR	3171313	EqualityExpression	pos [ 1 ] == quote		3171240	1		==			
ANR	3171314	ArrayIndexing	pos [ 1 ]		3171240	0					
ANR	3171315	Identifier	pos		3171240	0					
ANR	3171316	PrimaryExpression	1		3171240	1					
ANR	3171317	Identifier	quote		3171240	1					
ANR	3171318	CompoundStatement		9:51:217:217	3171240	1					
ANR	3171319	ExpressionStatement	pos += 2	1117:5:32343:32351	3171240	0	True				
ANR	3171320	AssignmentExpression	pos += 2		3171240	0		+=			
ANR	3171321	Identifier	pos		3171240	0					
ANR	3171322	PrimaryExpression	2		3171240	1					
ANR	3171323	ElseStatement	else		3171240	0					
ANR	3171324	CompoundStatement		11:11:245:245	3171240	0					
ANR	3171325	ExpressionStatement	++ pos	1119:5:32371:32376	3171240	0	True				
ANR	3171326	UnaryExpression	++ pos		3171240	0					
ANR	3171327	IncDec	++		3171240	0					
ANR	3171328	Identifier	pos		3171240	1					
ANR	3171329	IfStatement	if ( * pos )		3171240	2					
ANR	3171330	Condition	* pos	1122:7:32396:32399	3171240	0	True				
ANR	3171331	UnaryOperationExpression	* pos		3171240	0					
ANR	3171332	UnaryOperator	*		3171240	0					
ANR	3171333	Identifier	pos		3171240	1					
ANR	3171334	CompoundStatement		15:13:283:283	3171240	1					
ANR	3171335	ExpressionStatement	++ pos	1123:4:32408:32413	3171240	0	True				
ANR	3171336	UnaryExpression	++ pos		3171240	0					
ANR	3171337	IncDec	++		3171240	0					
ANR	3171338	Identifier	pos		3171240	1					
ANR	3171339	ElseStatement	else		3171240	0					
ANR	3171340	CompoundStatement		18:9:310:310	3171240	0					
ANR	3171341	ExpressionStatement	"pos += php_mb_mbchar_bytes_ex ( pos , ( const mbfl_encoding * ) encoding )"	1126:3:32434:32501	3171240	0	True				
ANR	3171342	AssignmentExpression	"pos += php_mb_mbchar_bytes_ex ( pos , ( const mbfl_encoding * ) encoding )"		3171240	0		+=			
ANR	3171343	Identifier	pos		3171240	0					
ANR	3171344	CallExpression	"php_mb_mbchar_bytes_ex ( pos , ( const mbfl_encoding * ) encoding )"		3171240	1					
ANR	3171345	Callee	php_mb_mbchar_bytes_ex		3171240	0					
ANR	3171346	Identifier	php_mb_mbchar_bytes_ex		3171240	0					
ANR	3171347	ArgumentList	pos		3171240	1					
ANR	3171348	Argument	pos		3171240	0					
ANR	3171349	Identifier	pos		3171240	0					
ANR	3171350	Argument	( const mbfl_encoding * ) encoding		3171240	1					
ANR	3171351	CastExpression	( const mbfl_encoding * ) encoding		3171240	0					
ANR	3171352	CastTarget	const mbfl_encoding *		3171240	0					
ANR	3171353	Identifier	encoding		3171240	1					
ANR	3171354	IfStatement	if ( * pos == '\\0' )		3171240	3					
ANR	3171355	Condition	* pos == '\\0'	1130:5:32516:32527	3171240	0	True				
ANR	3171356	EqualityExpression	* pos == '\\0'		3171240	0		==			
ANR	3171357	UnaryOperationExpression	* pos		3171240	0					
ANR	3171358	UnaryOperator	*		3171240	0					
ANR	3171359	Identifier	pos		3171240	1					
ANR	3171360	PrimaryExpression	'\\0'		3171240	1					
ANR	3171361	CompoundStatement		23:19:411:411	3171240	1					
ANR	3171362	ExpressionStatement	res = estrdup ( * line )	1131:2:32534:32554	3171240	0	True				
ANR	3171363	AssignmentExpression	res = estrdup ( * line )		3171240	0		=			
ANR	3171364	Identifier	res		3171240	0					
ANR	3171365	CallExpression	estrdup ( * line )		3171240	1					
ANR	3171366	Callee	estrdup		3171240	0					
ANR	3171367	Identifier	estrdup		3171240	0					
ANR	3171368	ArgumentList	* line		3171240	1					
ANR	3171369	Argument	* line		3171240	0					
ANR	3171370	UnaryOperationExpression	* line		3171240	0					
ANR	3171371	UnaryOperator	*		3171240	0					
ANR	3171372	Identifier	line		3171240	1					
ANR	3171373	ExpressionStatement	* line += strlen ( * line )	1132:2:32558:32580	3171240	1	True				
ANR	3171374	AssignmentExpression	* line += strlen ( * line )		3171240	0		+=			
ANR	3171375	UnaryOperationExpression	* line		3171240	0					
ANR	3171376	UnaryOperator	*		3171240	0					
ANR	3171377	Identifier	line		3171240	1					
ANR	3171378	CallExpression	strlen ( * line )		3171240	1					
ANR	3171379	Callee	strlen		3171240	0					
ANR	3171380	Identifier	strlen		3171240	0					
ANR	3171381	ArgumentList	* line		3171240	1					
ANR	3171382	Argument	* line		3171240	0					
ANR	3171383	UnaryOperationExpression	* line		3171240	0					
ANR	3171384	UnaryOperator	*		3171240	0					
ANR	3171385	Identifier	line		3171240	1					
ANR	3171386	ReturnStatement	return res ;	1133:2:32584:32594	3171240	2	True				
ANR	3171387	Identifier	res		3171240	0					
ANR	3171388	ExpressionStatement	"res = estrndup ( * line , pos - * line )"	1136:1:32601:32635	3171240	4	True				
ANR	3171389	AssignmentExpression	"res = estrndup ( * line , pos - * line )"		3171240	0		=			
ANR	3171390	Identifier	res		3171240	0					
ANR	3171391	CallExpression	"estrndup ( * line , pos - * line )"		3171240	1					
ANR	3171392	Callee	estrndup		3171240	0					
ANR	3171393	Identifier	estrndup		3171240	0					
ANR	3171394	ArgumentList	* line		3171240	1					
ANR	3171395	Argument	* line		3171240	0					
ANR	3171396	UnaryOperationExpression	* line		3171240	0					
ANR	3171397	UnaryOperator	*		3171240	0					
ANR	3171398	Identifier	line		3171240	1					
ANR	3171399	Argument	pos - * line		3171240	1					
ANR	3171400	AdditiveExpression	pos - * line		3171240	0		-			
ANR	3171401	Identifier	pos		3171240	0					
ANR	3171402	UnaryOperationExpression	* line		3171240	1					
ANR	3171403	UnaryOperator	*		3171240	0					
ANR	3171404	Identifier	line		3171240	1					
ANR	3171405	WhileStatement	while ( * pos == stop )		3171240	5					
ANR	3171406	Condition	* pos == stop	1138:8:32646:32657	3171240	0	True				
ANR	3171407	EqualityExpression	* pos == stop		3171240	0		==			
ANR	3171408	UnaryOperationExpression	* pos		3171240	0					
ANR	3171409	UnaryOperator	*		3171240	0					
ANR	3171410	Identifier	pos		3171240	1					
ANR	3171411	Identifier	stop		3171240	1					
ANR	3171412	CompoundStatement		31:22:541:541	3171240	1					
ANR	3171413	ExpressionStatement	"pos += php_mb_mbchar_bytes_ex ( pos , ( const mbfl_encoding * ) encoding )"	1139:2:32664:32731	3171240	0	True				
ANR	3171414	AssignmentExpression	"pos += php_mb_mbchar_bytes_ex ( pos , ( const mbfl_encoding * ) encoding )"		3171240	0		+=			
ANR	3171415	Identifier	pos		3171240	0					
ANR	3171416	CallExpression	"php_mb_mbchar_bytes_ex ( pos , ( const mbfl_encoding * ) encoding )"		3171240	1					
ANR	3171417	Callee	php_mb_mbchar_bytes_ex		3171240	0					
ANR	3171418	Identifier	php_mb_mbchar_bytes_ex		3171240	0					
ANR	3171419	ArgumentList	pos		3171240	1					
ANR	3171420	Argument	pos		3171240	0					
ANR	3171421	Identifier	pos		3171240	0					
ANR	3171422	Argument	( const mbfl_encoding * ) encoding		3171240	1					
ANR	3171423	CastExpression	( const mbfl_encoding * ) encoding		3171240	0					
ANR	3171424	CastTarget	const mbfl_encoding *		3171240	0					
ANR	3171425	Identifier	encoding		3171240	1					
ANR	3171426	ExpressionStatement	* line = pos	1142:1:32738:32749	3171240	6	True				
ANR	3171427	AssignmentExpression	* line = pos		3171240	0		=			
ANR	3171428	UnaryOperationExpression	* line		3171240	0					
ANR	3171429	UnaryOperator	*		3171240	0					
ANR	3171430	Identifier	line		3171240	1					
ANR	3171431	Identifier	pos		3171240	1					
ANR	3171432	ReturnStatement	return res ;	1143:1:32752:32762	3171240	7	True				
ANR	3171433	Identifier	res		3171240	0					
ANR	3171434	ReturnType	static char *		3171240	1					
ANR	3171435	Identifier	php_mb_rfc1867_getword		3171240	2					
ANR	3171436	ParameterList	"const zend_encoding * encoding , char * * line , char stop"		3171240	3					
ANR	3171437	Parameter	const zend_encoding * encoding	1107:36:32053:32081	3171240	0	True				
ANR	3171438	ParameterType	const zend_encoding *		3171240	0					
ANR	3171439	Identifier	encoding		3171240	1					
ANR	3171440	Parameter	char * * line	1107:67:32084:32094	3171240	1	True				
ANR	3171441	ParameterType	char * *		3171240	0					
ANR	3171442	Identifier	line		3171240	1					
ANR	3171443	Parameter	char stop	1107:80:32097:32105	3171240	2	True				
ANR	3171444	ParameterType	char		3171240	0					
ANR	3171445	Identifier	stop		3171240	1					
ANR	3171446	CFGEntryNode	ENTRY		3171240		True				
ANR	3171447	CFGExitNode	EXIT		3171240		True				
ANR	3171448	Symbol	res		3171240						
ANR	3171449	Symbol	strlen		3171240						
ANR	3171450	Symbol	php_mb_mbchar_bytes_ex		3171240						
ANR	3171451	Symbol	estrndup		3171240						
ANR	3171452	Symbol	quote		3171240						
ANR	3171453	Symbol	stop		3171240						
ANR	3171454	Symbol	pos		3171240						
ANR	3171455	Symbol	line		3171240						
ANR	3171456	Symbol	estrdup		3171240						
ANR	3171457	Symbol	* line		3171240						
ANR	3171458	Symbol	encoding		3171240						
ANR	3171459	Symbol	* pos		3171240						
ANR	3171460	Function	php_mb_rfc1867_getword_conf	1147:0:32777:33300							
ANR	3171461	FunctionDef	"php_mb_rfc1867_getword_conf (const zend_encoding * encoding , char * str)"		3171460	0					
ANR	3171462	CompoundStatement		1148:0:32870:33300	3171460	0					
ANR	3171463	WhileStatement	while ( * str && isspace ( * ( unsigned char * ) str ) )		3171460	0					
ANR	3171464	Condition	* str && isspace ( * ( unsigned char * ) str )	1149:8:32880:32917	3171460	0	True				
ANR	3171465	AndExpression	* str && isspace ( * ( unsigned char * ) str )		3171460	0		&&			
ANR	3171466	UnaryOperationExpression	* str		3171460	0					
ANR	3171467	UnaryOperator	*		3171460	0					
ANR	3171468	Identifier	str		3171460	1					
ANR	3171469	CallExpression	isspace ( * ( unsigned char * ) str )		3171460	1					
ANR	3171470	Callee	isspace		3171460	0					
ANR	3171471	Identifier	isspace		3171460	0					
ANR	3171472	ArgumentList	* ( unsigned char * ) str		3171460	1					
ANR	3171473	Argument	* ( unsigned char * ) str		3171460	0					
ANR	3171474	UnaryOperationExpression	* ( unsigned char * ) str		3171460	0					
ANR	3171475	UnaryOperator	*		3171460	0					
ANR	3171476	CastExpression	( unsigned char * ) str		3171460	1					
ANR	3171477	CastTarget	unsigned char *		3171460	0					
ANR	3171478	Identifier	str		3171460	1					
ANR	3171479	CompoundStatement		2:48:49:49	3171460	1					
ANR	3171480	ExpressionStatement	++ str	1150:2:32924:32929	3171460	0	True				
ANR	3171481	UnaryExpression	++ str		3171460	0					
ANR	3171482	IncDec	++		3171460	0					
ANR	3171483	Identifier	str		3171460	1					
ANR	3171484	IfStatement	if ( ! * str )		3171460	1					
ANR	3171485	Condition	! * str	1153:5:32940:32944	3171460	0	True				
ANR	3171486	UnaryOperationExpression	! * str		3171460	0					
ANR	3171487	UnaryOperator	!		3171460	0					
ANR	3171488	UnaryOperationExpression	* str		3171460	1					
ANR	3171489	UnaryOperator	*		3171460	0					
ANR	3171490	Identifier	str		3171460	1					
ANR	3171491	CompoundStatement		6:12:76:76	3171460	1					
ANR	3171492	ReturnStatement	"return estrdup ( """" ) ;"	1154:2:32951:32969	3171460	0	True				
ANR	3171493	CallExpression	"estrdup ( """" )"		3171460	0					
ANR	3171494	Callee	estrdup		3171460	0					
ANR	3171495	Identifier	estrdup		3171460	0					
ANR	3171496	ArgumentList	""""""		3171460	1					
ANR	3171497	Argument	""""""		3171460	0					
ANR	3171498	PrimaryExpression	""""""		3171460	0					
ANR	3171499	IfStatement	"if ( * str == '""' || * str == '\\'' )"		3171460	2					
ANR	3171500	Condition	"* str == '""' || * str == '\\''"	1157:5:32980:33006	3171460	0	True				
ANR	3171501	OrExpression	"* str == '""' || * str == '\\''"		3171460	0		||			
ANR	3171502	EqualityExpression	"* str == '""'"		3171460	0		==			
ANR	3171503	UnaryOperationExpression	* str		3171460	0					
ANR	3171504	UnaryOperator	*		3171460	0					
ANR	3171505	Identifier	str		3171460	1					
ANR	3171506	PrimaryExpression	"'""'"		3171460	1					
ANR	3171507	EqualityExpression	* str == '\\''		3171460	1		==			
ANR	3171508	UnaryOperationExpression	* str		3171460	0					
ANR	3171509	UnaryOperator	*		3171460	0					
ANR	3171510	Identifier	str		3171460	1					
ANR	3171511	PrimaryExpression	'\\''		3171460	1					
ANR	3171512	CompoundStatement		11:2:142:159	3171460	1					
ANR	3171513	IdentifierDeclStatement	char quote = * str ;	1158:2:33013:33030	3171460	0	True				
ANR	3171514	IdentifierDecl	quote = * str		3171460	0					
ANR	3171515	IdentifierDeclType	char		3171460	0					
ANR	3171516	Identifier	quote		3171460	1					
ANR	3171517	AssignmentExpression	quote = * str		3171460	2		=			
ANR	3171518	Identifier	quote		3171460	0					
ANR	3171519	UnaryOperationExpression	* str		3171460	1					
ANR	3171520	UnaryOperator	*		3171460	0					
ANR	3171521	Identifier	str		3171460	1					
ANR	3171522	ExpressionStatement	str ++	1160:2:33035:33040	3171460	1	True				
ANR	3171523	PostIncDecOperationExpression	str ++		3171460	0					
ANR	3171524	Identifier	str		3171460	0					
ANR	3171525	IncDec	++		3171460	1					
ANR	3171526	ReturnStatement	"return php_mb_rfc1867_substring_conf ( encoding , str , strlen ( str ) , quote ) ;"	1161:2:33044:33115	3171460	2	True				
ANR	3171527	CallExpression	"php_mb_rfc1867_substring_conf ( encoding , str , strlen ( str ) , quote )"		3171460	0					
ANR	3171528	Callee	php_mb_rfc1867_substring_conf		3171460	0					
ANR	3171529	Identifier	php_mb_rfc1867_substring_conf		3171460	0					
ANR	3171530	ArgumentList	encoding		3171460	1					
ANR	3171531	Argument	encoding		3171460	0					
ANR	3171532	Identifier	encoding		3171460	0					
ANR	3171533	Argument	str		3171460	1					
ANR	3171534	Identifier	str		3171460	0					
ANR	3171535	Argument	strlen ( str )		3171460	2					
ANR	3171536	CallExpression	strlen ( str )		3171460	0					
ANR	3171537	Callee	strlen		3171460	0					
ANR	3171538	Identifier	strlen		3171460	0					
ANR	3171539	ArgumentList	str		3171460	1					
ANR	3171540	Argument	str		3171460	0					
ANR	3171541	Identifier	str		3171460	0					
ANR	3171542	Argument	quote		3171460	3					
ANR	3171543	Identifier	quote		3171460	0					
ANR	3171544	ElseStatement	else		3171460	0					
ANR	3171545	CompoundStatement		16:2:258:276	3171460	0					
ANR	3171546	IdentifierDeclStatement	char * strend = str ;	1163:2:33129:33147	3171460	0	True				
ANR	3171547	IdentifierDecl	* strend = str		3171460	0					
ANR	3171548	IdentifierDeclType	char *		3171460	0					
ANR	3171549	Identifier	strend		3171460	1					
ANR	3171550	AssignmentExpression	* strend = str		3171460	2		=			
ANR	3171551	Identifier	str		3171460	0					
ANR	3171552	Identifier	str		3171460	1					
ANR	3171553	WhileStatement	while ( * strend && ! isspace ( * ( unsigned char * ) strend ) )		3171460	1					
ANR	3171554	Condition	* strend && ! isspace ( * ( unsigned char * ) strend )	1165:9:33159:33203	3171460	0	True				
ANR	3171555	AndExpression	* strend && ! isspace ( * ( unsigned char * ) strend )		3171460	0		&&			
ANR	3171556	UnaryOperationExpression	* strend		3171460	0					
ANR	3171557	UnaryOperator	*		3171460	0					
ANR	3171558	Identifier	strend		3171460	1					
ANR	3171559	UnaryOperationExpression	! isspace ( * ( unsigned char * ) strend )		3171460	1					
ANR	3171560	UnaryOperator	!		3171460	0					
ANR	3171561	CallExpression	isspace ( * ( unsigned char * ) strend )		3171460	1					
ANR	3171562	Callee	isspace		3171460	0					
ANR	3171563	Identifier	isspace		3171460	0					
ANR	3171564	ArgumentList	* ( unsigned char * ) strend		3171460	1					
ANR	3171565	Argument	* ( unsigned char * ) strend		3171460	0					
ANR	3171566	UnaryOperationExpression	* ( unsigned char * ) strend		3171460	0					
ANR	3171567	UnaryOperator	*		3171460	0					
ANR	3171568	CastExpression	( unsigned char * ) strend		3171460	1					
ANR	3171569	CastTarget	unsigned char *		3171460	0					
ANR	3171570	Identifier	strend		3171460	1					
ANR	3171571	CompoundStatement		18:56:335:335	3171460	1					
ANR	3171572	ExpressionStatement	++ strend	1166:3:33211:33219	3171460	0	True				
ANR	3171573	UnaryExpression	++ strend		3171460	0					
ANR	3171574	IncDec	++		3171460	0					
ANR	3171575	Identifier	strend		3171460	1					
ANR	3171576	ReturnStatement	"return php_mb_rfc1867_substring_conf ( encoding , str , strend - str , 0 ) ;"	1168:2:33227:33295	3171460	2	True				
ANR	3171577	CallExpression	"php_mb_rfc1867_substring_conf ( encoding , str , strend - str , 0 )"		3171460	0					
ANR	3171578	Callee	php_mb_rfc1867_substring_conf		3171460	0					
ANR	3171579	Identifier	php_mb_rfc1867_substring_conf		3171460	0					
ANR	3171580	ArgumentList	encoding		3171460	1					
ANR	3171581	Argument	encoding		3171460	0					
ANR	3171582	Identifier	encoding		3171460	0					
ANR	3171583	Argument	str		3171460	1					
ANR	3171584	Identifier	str		3171460	0					
ANR	3171585	Argument	strend - str		3171460	2					
ANR	3171586	AdditiveExpression	strend - str		3171460	0		-			
ANR	3171587	Identifier	strend		3171460	0					
ANR	3171588	Identifier	str		3171460	1					
ANR	3171589	Argument	0		3171460	3					
ANR	3171590	PrimaryExpression	0		3171460	0					
ANR	3171591	ReturnType	static char *		3171460	1					
ANR	3171592	Identifier	php_mb_rfc1867_getword_conf		3171460	2					
ANR	3171593	ParameterList	"const zend_encoding * encoding , char * str"		3171460	3					
ANR	3171594	Parameter	const zend_encoding * encoding	1147:41:32818:32846	3171460	0	True				
ANR	3171595	ParameterType	const zend_encoding *		3171460	0					
ANR	3171596	Identifier	encoding		3171460	1					
ANR	3171597	Parameter	char * str	1147:72:32849:32857	3171460	1	True				
ANR	3171598	ParameterType	char *		3171460	0					
ANR	3171599	Identifier	str		3171460	1					
ANR	3171600	CFGEntryNode	ENTRY		3171460		True				
ANR	3171601	CFGExitNode	EXIT		3171460		True				
ANR	3171602	Symbol	str		3171460						
ANR	3171603	Symbol	strlen		3171460						
ANR	3171604	Symbol	quote		3171460						
ANR	3171605	Symbol	* ( unsigned char * ) str		3171460						
ANR	3171606	Symbol	isspace		3171460						
ANR	3171607	Symbol	* ( unsigned char * ) strend		3171460						
ANR	3171608	Symbol	estrdup		3171460						
ANR	3171609	Symbol	php_mb_rfc1867_substring_conf		3171460						
ANR	3171610	Symbol	* str		3171460						
ANR	3171611	Symbol	encoding		3171460						
ANR	3171612	Symbol	* strend		3171460						
ANR	3171613	Symbol	strend		3171460						
ANR	3171614	Function	php_mb_rfc1867_basename	1173:0:33313:34229							
ANR	3171615	FunctionDef	"php_mb_rfc1867_basename (const zend_encoding * encoding , char * filename)"		3171614	0					
ANR	3171616	CompoundStatement		1174:0:33407:34229	3171614	0					
ANR	3171617	IdentifierDeclStatement	"char * s , * s2 ;"	1175:1:33410:33422	3171614	0	True				
ANR	3171618	IdentifierDecl	* s		3171614	0					
ANR	3171619	IdentifierDeclType	char *		3171614	0					
ANR	3171620	Identifier	s		3171614	1					
ANR	3171621	IdentifierDecl	* s2		3171614	1					
ANR	3171622	IdentifierDeclType	char *		3171614	0					
ANR	3171623	Identifier	s2		3171614	1					
ANR	3171624	IdentifierDeclStatement	const size_t filename_len = strlen ( filename ) ;	1176:1:33425:33469	3171614	1	True				
ANR	3171625	IdentifierDecl	filename_len = strlen ( filename )		3171614	0					
ANR	3171626	IdentifierDeclType	const size_t		3171614	0					
ANR	3171627	Identifier	filename_len		3171614	1					
ANR	3171628	AssignmentExpression	filename_len = strlen ( filename )		3171614	2		=			
ANR	3171629	Identifier	filename_len		3171614	0					
ANR	3171630	CallExpression	strlen ( filename )		3171614	1					
ANR	3171631	Callee	strlen		3171614	0					
ANR	3171632	Identifier	strlen		3171614	0					
ANR	3171633	ArgumentList	filename		3171614	1					
ANR	3171634	Argument	filename		3171614	0					
ANR	3171635	Identifier	filename		3171614	0					
ANR	3171636	ExpressionStatement	"s = php_mb_safe_strrchr_ex ( filename , '\\\\' , filename_len , ( const mbfl_encoding * ) encoding )"	1183:1:33871:33960	3171614	2	True				
ANR	3171637	AssignmentExpression	"s = php_mb_safe_strrchr_ex ( filename , '\\\\' , filename_len , ( const mbfl_encoding * ) encoding )"		3171614	0		=			
ANR	3171638	Identifier	s		3171614	0					
ANR	3171639	CallExpression	"php_mb_safe_strrchr_ex ( filename , '\\\\' , filename_len , ( const mbfl_encoding * ) encoding )"		3171614	1					
ANR	3171640	Callee	php_mb_safe_strrchr_ex		3171614	0					
ANR	3171641	Identifier	php_mb_safe_strrchr_ex		3171614	0					
ANR	3171642	ArgumentList	filename		3171614	1					
ANR	3171643	Argument	filename		3171614	0					
ANR	3171644	Identifier	filename		3171614	0					
ANR	3171645	Argument	'\\\\'		3171614	1					
ANR	3171646	PrimaryExpression	'\\\\'		3171614	0					
ANR	3171647	Argument	filename_len		3171614	2					
ANR	3171648	Identifier	filename_len		3171614	0					
ANR	3171649	Argument	( const mbfl_encoding * ) encoding		3171614	3					
ANR	3171650	CastExpression	( const mbfl_encoding * ) encoding		3171614	0					
ANR	3171651	CastTarget	const mbfl_encoding *		3171614	0					
ANR	3171652	Identifier	encoding		3171614	1					
ANR	3171653	ExpressionStatement	"s2 = php_mb_safe_strrchr_ex ( filename , '/' , filename_len , ( const mbfl_encoding * ) encoding )"	1184:1:33963:34052	3171614	3	True				
ANR	3171654	AssignmentExpression	"s2 = php_mb_safe_strrchr_ex ( filename , '/' , filename_len , ( const mbfl_encoding * ) encoding )"		3171614	0		=			
ANR	3171655	Identifier	s2		3171614	0					
ANR	3171656	CallExpression	"php_mb_safe_strrchr_ex ( filename , '/' , filename_len , ( const mbfl_encoding * ) encoding )"		3171614	1					
ANR	3171657	Callee	php_mb_safe_strrchr_ex		3171614	0					
ANR	3171658	Identifier	php_mb_safe_strrchr_ex		3171614	0					
ANR	3171659	ArgumentList	filename		3171614	1					
ANR	3171660	Argument	filename		3171614	0					
ANR	3171661	Identifier	filename		3171614	0					
ANR	3171662	Argument	'/'		3171614	1					
ANR	3171663	PrimaryExpression	'/'		3171614	0					
ANR	3171664	Argument	filename_len		3171614	2					
ANR	3171665	Identifier	filename_len		3171614	0					
ANR	3171666	Argument	( const mbfl_encoding * ) encoding		3171614	3					
ANR	3171667	CastExpression	( const mbfl_encoding * ) encoding		3171614	0					
ANR	3171668	CastTarget	const mbfl_encoding *		3171614	0					
ANR	3171669	Identifier	encoding		3171614	1					
ANR	3171670	IfStatement	if ( s && s2 )		3171614	4					
ANR	3171671	Condition	s && s2	1186:5:34060:34066	3171614	0	True				
ANR	3171672	AndExpression	s && s2		3171614	0		&&			
ANR	3171673	Identifier	s		3171614	0					
ANR	3171674	Identifier	s2		3171614	1					
ANR	3171675	CompoundStatement		13:14:661:661	3171614	1					
ANR	3171676	IfStatement	if ( s > s2 )		3171614	0					
ANR	3171677	Condition	s > s2	1187:6:34077:34082	3171614	0	True				
ANR	3171678	RelationalExpression	s > s2		3171614	0		>			
ANR	3171679	Identifier	s		3171614	0					
ANR	3171680	Identifier	s2		3171614	1					
ANR	3171681	CompoundStatement		14:14:677:677	3171614	1					
ANR	3171682	ReturnStatement	return ++ s ;	1188:3:34090:34100	3171614	0	True				
ANR	3171683	UnaryExpression	++ s		3171614	0					
ANR	3171684	IncDec	++		3171614	0					
ANR	3171685	Identifier	s		3171614	1					
ANR	3171686	ElseStatement	else		3171614	0					
ANR	3171687	CompoundStatement		16:9:703:703	3171614	0					
ANR	3171688	ReturnStatement	return ++ s2 ;	1190:3:34116:34127	3171614	0	True				
ANR	3171689	UnaryExpression	++ s2		3171614	0					
ANR	3171690	IncDec	++		3171614	0					
ANR	3171691	Identifier	s2		3171614	1					
ANR	3171692	ElseStatement	else		3171614	0					
ANR	3171693	IfStatement	if ( s )		3171614	0					
ANR	3171694	Condition	s	1192:12:34145:34145	3171614	0	True				
ANR	3171695	Identifier	s		3171614	0					
ANR	3171696	CompoundStatement		19:15:740:740	3171614	1					
ANR	3171697	ReturnStatement	return ++ s ;	1193:2:34152:34162	3171614	0	True				
ANR	3171698	UnaryExpression	++ s		3171614	0					
ANR	3171699	IncDec	++		3171614	0					
ANR	3171700	Identifier	s		3171614	1					
ANR	3171701	ElseStatement	else		3171614	0					
ANR	3171702	IfStatement	if ( s2 )		3171614	0					
ANR	3171703	Condition	s2	1194:12:34176:34177	3171614	0	True				
ANR	3171704	Identifier	s2		3171614	0					
ANR	3171705	CompoundStatement		21:16:772:772	3171614	1					
ANR	3171706	ReturnStatement	return ++ s2 ;	1195:2:34184:34195	3171614	0	True				
ANR	3171707	UnaryExpression	++ s2		3171614	0					
ANR	3171708	IncDec	++		3171614	0					
ANR	3171709	Identifier	s2		3171614	1					
ANR	3171710	ElseStatement	else		3171614	0					
ANR	3171711	CompoundStatement		23:8:797:797	3171614	0					
ANR	3171712	ReturnStatement	return filename ;	1197:2:34209:34224	3171614	0	True				
ANR	3171713	Identifier	filename		3171614	0					
ANR	3171714	ReturnType	static char *		3171614	1					
ANR	3171715	Identifier	php_mb_rfc1867_basename		3171614	2					
ANR	3171716	ParameterList	"const zend_encoding * encoding , char * filename"		3171614	3					
ANR	3171717	Parameter	const zend_encoding * encoding	1173:37:33350:33378	3171614	0	True				
ANR	3171718	ParameterType	const zend_encoding *		3171614	0					
ANR	3171719	Identifier	encoding		3171614	1					
ANR	3171720	Parameter	char * filename	1173:68:33381:33394	3171614	1	True				
ANR	3171721	ParameterType	char *		3171614	0					
ANR	3171722	Identifier	filename		3171614	1					
ANR	3171723	CFGEntryNode	ENTRY		3171614		True				
ANR	3171724	CFGExitNode	EXIT		3171614		True				
ANR	3171725	Symbol	strlen		3171614						
ANR	3171726	Symbol	filename		3171614						
ANR	3171727	Symbol	s		3171614						
ANR	3171728	Symbol	php_mb_safe_strrchr_ex		3171614						
ANR	3171729	Symbol	filename_len		3171614						
ANR	3171730	Symbol	encoding		3171614						
ANR	3171731	Symbol	s2		3171614						
ANR	3171732	DeclStmt									
ANR	3171733	Decl							enum mbfl_no_language	enum mbfl_no_language	no_language
ANR	3171734	DeclStmt									
ANR	3171735	Decl							const mbfl_encoding	const mbfl_encoding * *	list
ANR	3171736	DeclStmt									
ANR	3171737	Decl							size_t	size_t	size
ANR	3171738	DeclStmt									
ANR	3171739	Decl							const mbfl_encoding	const mbfl_encoding * *	list
ANR	3171740	DeclStmt									
ANR	3171741	Decl							size_t	size_t	size
ANR	3171742	DeclStmt									
ANR	3171743	Decl							const mbfl_encoding	const mbfl_encoding *	encoding
ANR	3171744	Function	_php_mb_ini_mbstring_internal_encoding_set	1317:0:37457:38209							
ANR	3171745	FunctionDef	"_php_mb_ini_mbstring_internal_encoding_set (const char * new_value , uint new_value_length)"		3171744	0					
ANR	3171746	CompoundStatement		1318:0:37550:38209	3171744	0					
ANR	3171747	IdentifierDeclStatement	const mbfl_encoding * encoding ;	1319:1:37553:37582	3171744	0	True				
ANR	3171748	IdentifierDecl	* encoding		3171744	0					
ANR	3171749	IdentifierDeclType	const mbfl_encoding *		3171744	0					
ANR	3171750	Identifier	encoding		3171744	1					
ANR	3171751	IfStatement	if ( ! new_value || new_value_length == 0 || ! ( encoding = mbfl_name2encoding ( new_value ) ) )		3171744	1					
ANR	3171752	Condition	! new_value || new_value_length == 0 || ! ( encoding = mbfl_name2encoding ( new_value ) )	1321:5:37590:37671	3171744	0	True				
ANR	3171753	OrExpression	! new_value || new_value_length == 0 || ! ( encoding = mbfl_name2encoding ( new_value ) )		3171744	0		||			
ANR	3171754	UnaryOperationExpression	! new_value		3171744	0					
ANR	3171755	UnaryOperator	!		3171744	0					
ANR	3171756	Identifier	new_value		3171744	1					
ANR	3171757	OrExpression	new_value_length == 0 || ! ( encoding = mbfl_name2encoding ( new_value ) )		3171744	1		||			
ANR	3171758	EqualityExpression	new_value_length == 0		3171744	0		==			
ANR	3171759	Identifier	new_value_length		3171744	0					
ANR	3171760	PrimaryExpression	0		3171744	1					
ANR	3171761	UnaryOperationExpression	! ( encoding = mbfl_name2encoding ( new_value ) )		3171744	1					
ANR	3171762	UnaryOperator	!		3171744	0					
ANR	3171763	AssignmentExpression	encoding = mbfl_name2encoding ( new_value )		3171744	1		=			
ANR	3171764	Identifier	encoding		3171744	0					
ANR	3171765	CallExpression	mbfl_name2encoding ( new_value )		3171744	1					
ANR	3171766	Callee	mbfl_name2encoding		3171744	0					
ANR	3171767	Identifier	mbfl_name2encoding		3171744	0					
ANR	3171768	ArgumentList	new_value		3171744	1					
ANR	3171769	Argument	new_value		3171744	0					
ANR	3171770	Identifier	new_value		3171744	0					
ANR	3171771	CompoundStatement		4:89:123:123	3171744	1					
ANR	3171772	ExpressionStatement	encoding = mbfl_no2encoding ( mbfl_no_encoding_utf8 )	1323:2:37743:37793	3171744	0	True				
ANR	3171773	AssignmentExpression	encoding = mbfl_no2encoding ( mbfl_no_encoding_utf8 )		3171744	0		=			
ANR	3171774	Identifier	encoding		3171744	0					
ANR	3171775	CallExpression	mbfl_no2encoding ( mbfl_no_encoding_utf8 )		3171744	1					
ANR	3171776	Callee	mbfl_no2encoding		3171744	0					
ANR	3171777	Identifier	mbfl_no2encoding		3171744	0					
ANR	3171778	ArgumentList	mbfl_no_encoding_utf8		3171744	1					
ANR	3171779	Argument	mbfl_no_encoding_utf8		3171744	0					
ANR	3171780	Identifier	mbfl_no_encoding_utf8		3171744	0					
ANR	3171781	ExpressionStatement	MBSTRG ( internal_encoding ) = encoding	1325:1:37799:37835	3171744	2	True				
ANR	3171782	AssignmentExpression	MBSTRG ( internal_encoding ) = encoding		3171744	0		=			
ANR	3171783	CallExpression	MBSTRG ( internal_encoding )		3171744	0					
ANR	3171784	Callee	MBSTRG		3171744	0					
ANR	3171785	Identifier	MBSTRG		3171744	0					
ANR	3171786	ArgumentList	internal_encoding		3171744	1					
ANR	3171787	Argument	internal_encoding		3171744	0					
ANR	3171788	Identifier	internal_encoding		3171744	0					
ANR	3171789	Identifier	encoding		3171744	1					
ANR	3171790	ExpressionStatement	MBSTRG ( current_internal_encoding ) = encoding	1326:1:37838:37882	3171744	3	True				
ANR	3171791	AssignmentExpression	MBSTRG ( current_internal_encoding ) = encoding		3171744	0		=			
ANR	3171792	CallExpression	MBSTRG ( current_internal_encoding )		3171744	0					
ANR	3171793	Callee	MBSTRG		3171744	0					
ANR	3171794	Identifier	MBSTRG		3171744	0					
ANR	3171795	ArgumentList	current_internal_encoding		3171744	1					
ANR	3171796	Argument	current_internal_encoding		3171744	0					
ANR	3171797	Identifier	current_internal_encoding		3171744	0					
ANR	3171798	Identifier	encoding		3171744	1					
ANR	3171799	CompoundStatement		12:2:355:387	3171744	4					
ANR	3171800	IdentifierDeclStatement	const char * enc_name = new_value ;	1329:2:37906:37938	3171744	0	True				
ANR	3171801	IdentifierDecl	* enc_name = new_value		3171744	0					
ANR	3171802	IdentifierDeclType	const char *		3171744	0					
ANR	3171803	Identifier	enc_name		3171744	1					
ANR	3171804	AssignmentExpression	* enc_name = new_value		3171744	2		=			
ANR	3171805	Identifier	new_value		3171744	0					
ANR	3171806	Identifier	new_value		3171744	1					
ANR	3171807	IfStatement	if ( FAILURE == php_mb_regex_set_default_mbctype ( enc_name ) )		3171744	1					
ANR	3171808	Condition	FAILURE == php_mb_regex_set_default_mbctype ( enc_name )	1330:6:37946:37998	3171744	0	True				
ANR	3171809	EqualityExpression	FAILURE == php_mb_regex_set_default_mbctype ( enc_name )		3171744	0		==			
ANR	3171810	Identifier	FAILURE		3171744	0					
ANR	3171811	CallExpression	php_mb_regex_set_default_mbctype ( enc_name )		3171744	1					
ANR	3171812	Callee	php_mb_regex_set_default_mbctype		3171744	0					
ANR	3171813	Identifier	php_mb_regex_set_default_mbctype		3171744	0					
ANR	3171814	ArgumentList	enc_name		3171744	1					
ANR	3171815	Argument	enc_name		3171744	0					
ANR	3171816	Identifier	enc_name		3171744	0					
ANR	3171817	CompoundStatement		13:61:450:450	3171744	1					
ANR	3171818	ExpressionStatement	"enc_name = ""UTF-8"""	1332:3:38072:38090	3171744	0	True				
ANR	3171819	AssignmentExpression	"enc_name = ""UTF-8"""		3171744	0		=			
ANR	3171820	Identifier	enc_name		3171744	0					
ANR	3171821	PrimaryExpression	"""UTF-8"""		3171744	1					
ANR	3171822	ExpressionStatement	php_mb_regex_set_default_mbctype ( enc_name )	1333:3:38095:38137	3171744	1	True				
ANR	3171823	CallExpression	php_mb_regex_set_default_mbctype ( enc_name )		3171744	0					
ANR	3171824	Callee	php_mb_regex_set_default_mbctype		3171744	0					
ANR	3171825	Identifier	php_mb_regex_set_default_mbctype		3171744	0					
ANR	3171826	ArgumentList	enc_name		3171744	1					
ANR	3171827	Argument	enc_name		3171744	0					
ANR	3171828	Identifier	enc_name		3171744	0					
ANR	3171829	ExpressionStatement	php_mb_regex_set_mbctype ( new_value )	1335:2:38145:38180	3171744	2	True				
ANR	3171830	CallExpression	php_mb_regex_set_mbctype ( new_value )		3171744	0					
ANR	3171831	Callee	php_mb_regex_set_mbctype		3171744	0					
ANR	3171832	Identifier	php_mb_regex_set_mbctype		3171744	0					
ANR	3171833	ArgumentList	new_value		3171744	1					
ANR	3171834	Argument	new_value		3171744	0					
ANR	3171835	Identifier	new_value		3171744	0					
ANR	3171836	ReturnStatement	return SUCCESS ;	1338:1:38193:38207	3171744	5	True				
ANR	3171837	Identifier	SUCCESS		3171744	0					
ANR	3171838	ReturnType	int		3171744	1					
ANR	3171839	Identifier	_php_mb_ini_mbstring_internal_encoding_set		3171744	2					
ANR	3171840	ParameterList	"const char * new_value , uint new_value_length"		3171744	3					
ANR	3171841	Parameter	const char * new_value	1317:47:37504:37524	3171744	0	True				
ANR	3171842	ParameterType	const char *		3171744	0					
ANR	3171843	Identifier	new_value		3171744	1					
ANR	3171844	Parameter	uint new_value_length	1317:70:37527:37547	3171744	1	True				
ANR	3171845	ParameterType	uint		3171744	0					
ANR	3171846	Identifier	new_value_length		3171744	1					
ANR	3171847	CFGEntryNode	ENTRY		3171744		True				
ANR	3171848	CFGExitNode	EXIT		3171744		True				
ANR	3171849	Symbol	mbfl_name2encoding		3171744						
ANR	3171850	Symbol	php_mb_regex_set_default_mbctype		3171744						
ANR	3171851	Symbol	SUCCESS		3171744						
ANR	3171852	Symbol	new_value_length		3171744						
ANR	3171853	Symbol	mbfl_no2encoding		3171744						
ANR	3171854	Symbol	MBSTRG		3171744						
ANR	3171855	Symbol	encoding		3171744						
ANR	3171856	Symbol	FAILURE		3171744						
ANR	3171857	Symbol	internal_encoding		3171744						
ANR	3171858	Symbol	mbfl_no_encoding_utf8		3171744						
ANR	3171859	Symbol	current_internal_encoding		3171744						
ANR	3171860	Symbol	enc_name		3171744						
ANR	3171861	Symbol	new_value		3171744						
ANR	3171862	DeclStmt									
ANR	3171863	Decl							int	int	c
ANR	3171864	DeclStmt									
ANR	3171865	Decl							char	char *	endptr
ANR	3171866	DeclStmt									
ANR	3171867	Decl							zend_string	zend_string *	tmp
ANR	3171868	DeclStmt									
ANR	3171869	Decl							void	void *	re
ANR	3171870	DeclStmt									
ANR	3171871	Decl							zend_function	zend_function *	func
ANR	3171872	Decl							zend_function	zend_function *	orig
ANR	3171873	DeclStmt									
ANR	3171874	Decl							const struct mb_overload_def	const struct mb_overload_def *	p
ANR	3171875	DeclStmt									
ANR	3171876	Decl							const struct mb_overload_def	const struct mb_overload_def *	p
ANR	3171877	DeclStmt									
ANR	3171878	Decl							zend_function	zend_function *	orig
ANR	3171879	DeclStmt									
ANR	3171880	Decl							char	char [ 256 ]	tmp
ANR	3171881	DeclStmt									
ANR	3171882	Decl							char	char [ 256 ]	tmp
ANR	3171883	DeclStmt									
ANR	3171884	Decl							zend_string	zend_string *	name
ANR	3171885	DeclStmt									
ANR	3171886	Decl							zend_string	zend_string *	ini_name
ANR	3171887	DeclStmt									
ANR	3171888	Decl							const char	const char *	name
ANR	3171889	DeclStmt									
ANR	3171890	Decl							size_t	size_t	name_len
ANR	3171891	DeclStmt									
ANR	3171892	Decl							const mbfl_encoding	const mbfl_encoding *	encoding
ANR	3171893	DeclStmt									
ANR	3171894	Decl							char	char *	typ
ANR	3171895	DeclStmt									
ANR	3171896	Decl							size_t	size_t	typ_len
ANR	3171897	DeclStmt									
ANR	3171898	Decl							int	int	retname
ANR	3171899	DeclStmt									
ANR	3171900	Decl							char	char *	list
ANR	3171901	Decl							char	char *	temp
ANR	3171902	DeclStmt									
ANR	3171903	Decl							const mbfl_encoding	const mbfl_encoding *	result
ANR	3171904	DeclStmt									
ANR	3171905	Decl							const mbfl_encoding	const mbfl_encoding * *	entry
ANR	3171906	DeclStmt									
ANR	3171907	Decl							const size_t	const size_t	n
ANR	3171908	DeclStmt									
ANR	3171909	Decl							size_t	size_t	i
ANR	3171910	DeclStmt									
ANR	3171911	Decl							const mbfl_encoding	const mbfl_encoding * *	entry
ANR	3171912	DeclStmt									
ANR	3171913	Decl							const size_t	const size_t	n
ANR	3171914	DeclStmt									
ANR	3171915	Decl							size_t	size_t	i
ANR	3171916	DeclStmt									
ANR	3171917	Decl							const char	const char *	name
ANR	3171918	DeclStmt									
ANR	3171919	Decl							size_t	size_t	name_len
ANR	3171920	DeclStmt									
ANR	3171921	Decl							const mbfl_encoding	const mbfl_encoding *	encoding
ANR	3171922	DeclStmt									
ANR	3171923	Decl							zval	zval *	arg1
ANR	3171924	DeclStmt									
ANR	3171925	Decl							size_t	size_t	i
ANR	3171926	DeclStmt									
ANR	3171927	Decl							size_t	size_t	n
ANR	3171928	DeclStmt									
ANR	3171929	Decl							const mbfl_encoding	const mbfl_encoding * *	entry
ANR	3171930	DeclStmt									
ANR	3171931	Decl							const mbfl_encoding	const mbfl_encoding * *	list
ANR	3171932	DeclStmt									
ANR	3171933	Decl							size_t	size_t	size
ANR	3171934	DeclStmt									
ANR	3171935	Decl							zval	zval *	arg1
ANR	3171936	DeclStmt									
ANR	3171937	Decl							enum mbfl_no_encoding	enum mbfl_no_encoding	no_encoding
ANR	3171938	DeclStmt									
ANR	3171939	Decl							char	char *	name
ANR	3171940	DeclStmt									
ANR	3171941	Decl							size_t	size_t	name_len
ANR	3171942	DeclStmt									
ANR	3171943	Decl							const char	const char *	preferred_name
ANR	3171944	DeclStmt									
ANR	3171945	Decl							zval	zval *	track_vars_array
ANR	3171946	DeclStmt									
ANR	3171947	Decl							char	char *	encstr
ANR	3171948	DeclStmt									
ANR	3171949	Decl							size_t	size_t	encstr_len
ANR	3171950	DeclStmt									
ANR	3171951	Decl							php_mb_encoding_handler_info_t	php_mb_encoding_handler_info_t	info
ANR	3171952	DeclStmt									
ANR	3171953	Decl							const mbfl_encoding	const mbfl_encoding *	detected
ANR	3171954	DeclStmt									
ANR	3171955	Decl							zval	zval	tmp
ANR	3171956	DeclStmt									
ANR	3171957	Decl							zend_array	zend_array *	symbol_table
ANR	3171958	DeclStmt									
ANR	3171959	Decl							char	char *	arg_string
ANR	3171960	DeclStmt									
ANR	3171961	Decl							size_t	size_t	arg_string_len
ANR	3171962	DeclStmt									
ANR	3171963	Decl							zend_long	zend_long	arg_status
ANR	3171964	DeclStmt									
ANR	3171965	Decl							mbfl_string	mbfl_string	string
ANR	3171966	Decl							mbfl_string	mbfl_string	result
ANR	3171967	DeclStmt									
ANR	3171968	Decl							const char	const char *	charset
ANR	3171969	DeclStmt									
ANR	3171970	Decl							char	char *	p
ANR	3171971	DeclStmt									
ANR	3171972	Decl							const mbfl_encoding	const mbfl_encoding *	encoding
ANR	3171973	DeclStmt									
ANR	3171974	Decl							int	int	last_feed
ANR	3171975	Decl							int	int	len
ANR	3171976	DeclStmt									
ANR	3171977	Decl							unsigned char	unsigned char	send_text_mimetype
ANR	3171978	DeclStmt									
ANR	3171979	Decl							char	char *	s
ANR	3171980	Decl							char	char *	mimetype
ANR	3171981	DeclStmt									
ANR	3171982	Decl							int	int	n
ANR	3171983	DeclStmt									
ANR	3171984	Decl							mbfl_string	mbfl_string	string
ANR	3171985	DeclStmt									
ANR	3171986	Decl							char	char *	enc_name
ANR	3171987	DeclStmt									
ANR	3171988	Decl							size_t	size_t	enc_name_len
ANR	3171989	DeclStmt									
ANR	3171990	Decl							int	int	n
ANR	3171991	Decl							int	int	reverse
ANR	3171992	DeclStmt									
ANR	3171993	Decl							zend_long	zend_long	offset
ANR	3171994	DeclStmt									
ANR	3171995	Decl							mbfl_string	mbfl_string	haystack
ANR	3171996	Decl							mbfl_string	mbfl_string	needle
ANR	3171997	DeclStmt									
ANR	3171998	Decl							char	char *	enc_name
ANR	3171999	DeclStmt									
ANR	3172000	Decl							size_t	size_t	enc_name_len
ANR	3172001	DeclStmt									
ANR	3172002	Decl							int	int	n
ANR	3172003	DeclStmt									
ANR	3172004	Decl							mbfl_string	mbfl_string	haystack
ANR	3172005	Decl							mbfl_string	mbfl_string	needle
ANR	3172006	DeclStmt									
ANR	3172007	Decl							char	char *	enc_name
ANR	3172008	DeclStmt									
ANR	3172009	Decl							size_t	size_t	enc_name_len
ANR	3172010	DeclStmt									
ANR	3172011	Decl							zval	zval *	zoffset
ANR	3172012	DeclStmt									
ANR	3172013	Decl							long	long	offset
ANR	3172014	Decl							long	long	str_flg
ANR	3172015	DeclStmt									
ANR	3172016	Decl							char	char *	enc_name2
ANR	3172017	DeclStmt									
ANR	3172018	Decl							int	int	enc_name_len2
ANR	3172019	DeclStmt									
ANR	3172020	Decl							int	int	haystack_char_len
ANR	3172021	DeclStmt									
ANR	3172022	Decl							int	int	n
ANR	3172023	DeclStmt									
ANR	3172024	Decl							zend_long	zend_long	offset
ANR	3172025	DeclStmt									
ANR	3172026	Decl							mbfl_string	mbfl_string	haystack
ANR	3172027	Decl							mbfl_string	mbfl_string	needle
ANR	3172028	DeclStmt									
ANR	3172029	Decl							const char	const char *	from_encoding
ANR	3172030	DeclStmt									
ANR	3172031	Decl							size_t	size_t	from_encoding_len
ANR	3172032	DeclStmt									
ANR	3172033	Decl							int	int	n
ANR	3172034	DeclStmt									
ANR	3172035	Decl							zend_long	zend_long	offset
ANR	3172036	DeclStmt									
ANR	3172037	Decl							mbfl_string	mbfl_string	haystack
ANR	3172038	Decl							mbfl_string	mbfl_string	needle
ANR	3172039	DeclStmt									
ANR	3172040	Decl							const char	const char *	from_encoding
ANR	3172041	DeclStmt									
ANR	3172042	Decl							size_t	size_t	from_encoding_len
ANR	3172043	DeclStmt									
ANR	3172044	Decl							int	int	n
ANR	3172045	Decl							int	int	len
ANR	3172046	Decl							int	int	mblen
ANR	3172047	DeclStmt									
ANR	3172048	Decl							mbfl_string	mbfl_string	haystack
ANR	3172049	Decl							mbfl_string	mbfl_string	needle
ANR	3172050	Decl							mbfl_string	mbfl_string	result
ANR	3172051	Decl							mbfl_string	mbfl_string *	ret
ANR	3172052	DeclStmt									
ANR	3172053	Decl							char	char *	enc_name
ANR	3172054	DeclStmt									
ANR	3172055	Decl							size_t	size_t	enc_name_len
ANR	3172056	DeclStmt									
ANR	3172057	Decl							zend_bool	zend_bool	part
ANR	3172058	DeclStmt									
ANR	3172059	Decl							int	int	n
ANR	3172060	Decl							int	int	len
ANR	3172061	Decl							int	int	mblen
ANR	3172062	DeclStmt									
ANR	3172063	Decl							mbfl_string	mbfl_string	haystack
ANR	3172064	Decl							mbfl_string	mbfl_string	needle
ANR	3172065	Decl							mbfl_string	mbfl_string	result
ANR	3172066	Decl							mbfl_string	mbfl_string *	ret
ANR	3172067	DeclStmt									
ANR	3172068	Decl							char	char *	enc_name
ANR	3172069	DeclStmt									
ANR	3172070	Decl							size_t	size_t	enc_name_len
ANR	3172071	DeclStmt									
ANR	3172072	Decl							zend_bool	zend_bool	part
ANR	3172073	DeclStmt									
ANR	3172074	Decl							zend_bool	zend_bool	part
ANR	3172075	DeclStmt									
ANR	3172076	Decl							size_t	size_t	from_encoding_len
ANR	3172077	Decl							size_t	size_t	len
ANR	3172078	Decl							size_t	size_t	mblen
ANR	3172079	DeclStmt									
ANR	3172080	Decl							int	int	n
ANR	3172081	DeclStmt									
ANR	3172082	Decl							mbfl_string	mbfl_string	haystack
ANR	3172083	Decl							mbfl_string	mbfl_string	needle
ANR	3172084	Decl							mbfl_string	mbfl_string	result
ANR	3172085	Decl							mbfl_string	mbfl_string *	ret
ANR	3172086	DeclStmt									
ANR	3172087	Decl							const char	const char *	from_encoding
ANR	3172088	DeclStmt									
ANR	3172089	Decl							zend_bool	zend_bool	part
ANR	3172090	DeclStmt									
ANR	3172091	Decl							int	int	n
ANR	3172092	Decl							int	int	len
ANR	3172093	Decl							int	int	mblen
ANR	3172094	DeclStmt									
ANR	3172095	Decl							size_t	size_t	from_encoding_len
ANR	3172096	DeclStmt									
ANR	3172097	Decl							mbfl_string	mbfl_string	haystack
ANR	3172098	Decl							mbfl_string	mbfl_string	needle
ANR	3172099	Decl							mbfl_string	mbfl_string	result
ANR	3172100	Decl							mbfl_string	mbfl_string *	ret
ANR	3172101	DeclStmt									
ANR	3172102	Decl							const char	const char *	from_encoding
ANR	3172103	DeclStmt									
ANR	3172104	Decl							int	int	n
ANR	3172105	DeclStmt									
ANR	3172106	Decl							mbfl_string	mbfl_string	haystack
ANR	3172107	Decl							mbfl_string	mbfl_string	needle
ANR	3172108	DeclStmt									
ANR	3172109	Decl							char	char *	enc_name
ANR	3172110	DeclStmt									
ANR	3172111	Decl							size_t	size_t	enc_name_len
ANR	3172112	DeclStmt									
ANR	3172113	Decl							char	char *	str
ANR	3172114	Decl							char	char *	encoding
ANR	3172115	DeclStmt									
ANR	3172116	Decl							zend_long	zend_long	from
ANR	3172117	Decl							zend_long	zend_long	len
ANR	3172118	DeclStmt									
ANR	3172119	Decl							int	int	mblen
ANR	3172120	DeclStmt									
ANR	3172121	Decl							size_t	size_t	str_len
ANR	3172122	Decl							size_t	size_t	encoding_len
ANR	3172123	DeclStmt									
ANR	3172124	Decl							zend_bool	zend_bool	len_is_null
ANR	3172125	DeclStmt									
ANR	3172126	Decl							mbfl_string	mbfl_string	string
ANR	3172127	Decl							mbfl_string	mbfl_string	result
ANR	3172128	Decl							mbfl_string	mbfl_string *	ret
ANR	3172129	DeclStmt									
ANR	3172130	Decl							char	char *	encoding
ANR	3172131	DeclStmt									
ANR	3172132	Decl							zend_long	zend_long	from
ANR	3172133	Decl							zend_long	zend_long	len
ANR	3172134	DeclStmt									
ANR	3172135	Decl							size_t	size_t	encoding_len
ANR	3172136	DeclStmt									
ANR	3172137	Decl							zend_bool	zend_bool	len_is_null
ANR	3172138	DeclStmt									
ANR	3172139	Decl							mbfl_string	mbfl_string	string
ANR	3172140	Decl							mbfl_string	mbfl_string	result
ANR	3172141	Decl							mbfl_string	mbfl_string *	ret
ANR	3172142	DeclStmt									
ANR	3172143	Decl							int	int	n
ANR	3172144	DeclStmt									
ANR	3172145	Decl							mbfl_string	mbfl_string	string
ANR	3172146	DeclStmt									
ANR	3172147	Decl							char	char *	enc_name
ANR	3172148	DeclStmt									
ANR	3172149	Decl							size_t	size_t	enc_name_len
ANR	3172150	DeclStmt									
ANR	3172151	Decl							char	char *	str
ANR	3172152	Decl							char	char *	trimmarker
ANR	3172153	Decl							char	char *	encoding
ANR	3172154	DeclStmt									
ANR	3172155	Decl							zend_long	zend_long	from
ANR	3172156	Decl							zend_long	zend_long	width
ANR	3172157	DeclStmt									
ANR	3172158	Decl							size_t	size_t	str_len
ANR	3172159	Decl							size_t	size_t	trimmarker_len
ANR	3172160	Decl							size_t	size_t	encoding_len
ANR	3172161	DeclStmt									
ANR	3172162	Decl							mbfl_string	mbfl_string	string
ANR	3172163	Decl							mbfl_string	mbfl_string	result
ANR	3172164	Decl							mbfl_string	mbfl_string	marker
ANR	3172165	Decl							mbfl_string	mbfl_string *	ret
ANR	3172166	Function	php_mb_convert_encoding	2990:0:86338:88876							
ANR	3172167	FunctionDef	"php_mb_convert_encoding (const char * input , size_t length , const char * _to_encoding , const char * _from_encodings , size_t * output_len)"		3172166	0					
ANR	3172168	CompoundStatement		2991:0:86491:88876	3172166	0					
ANR	3172169	IdentifierDeclStatement	"mbfl_string string , result , * ret ;"	2992:1:86494:86526	3172166	0	True				
ANR	3172170	IdentifierDecl	string		3172166	0					
ANR	3172171	IdentifierDeclType	mbfl_string		3172166	0					
ANR	3172172	Identifier	string		3172166	1					
ANR	3172173	IdentifierDecl	result		3172166	1					
ANR	3172174	IdentifierDeclType	mbfl_string		3172166	0					
ANR	3172175	Identifier	result		3172166	1					
ANR	3172176	IdentifierDecl	* ret		3172166	2					
ANR	3172177	IdentifierDeclType	mbfl_string *		3172166	0					
ANR	3172178	Identifier	ret		3172166	1					
ANR	3172179	IdentifierDeclStatement	"const mbfl_encoding * from_encoding , * to_encoding ;"	2993:1:86529:86577	3172166	1	True				
ANR	3172180	IdentifierDecl	* from_encoding		3172166	0					
ANR	3172181	IdentifierDeclType	const mbfl_encoding *		3172166	0					
ANR	3172182	Identifier	from_encoding		3172166	1					
ANR	3172183	IdentifierDecl	* to_encoding		3172166	1					
ANR	3172184	IdentifierDeclType	const mbfl_encoding *		3172166	0					
ANR	3172185	Identifier	to_encoding		3172166	1					
ANR	3172186	IdentifierDeclStatement	mbfl_buffer_converter * convd ;	2994:1:86580:86608	3172166	2	True				
ANR	3172187	IdentifierDecl	* convd		3172166	0					
ANR	3172188	IdentifierDeclType	mbfl_buffer_converter *		3172166	0					
ANR	3172189	Identifier	convd		3172166	1					
ANR	3172190	IdentifierDeclStatement	size_t size ;	2995:1:86611:86622	3172166	3	True				
ANR	3172191	IdentifierDecl	size		3172166	0					
ANR	3172192	IdentifierDeclType	size_t		3172166	0					
ANR	3172193	Identifier	size		3172166	1					
ANR	3172194	IdentifierDeclStatement	const mbfl_encoding * * list ;	2996:1:86625:86651	3172166	4	True				
ANR	3172195	IdentifierDecl	* * list		3172166	0					
ANR	3172196	IdentifierDeclType	const mbfl_encoding * *		3172166	0					
ANR	3172197	Identifier	list		3172166	1					
ANR	3172198	IdentifierDeclStatement	char * output = NULL ;	2997:1:86654:86671	3172166	5	True				
ANR	3172199	IdentifierDecl	* output = NULL		3172166	0					
ANR	3172200	IdentifierDeclType	char *		3172166	0					
ANR	3172201	Identifier	output		3172166	1					
ANR	3172202	AssignmentExpression	* output = NULL		3172166	2		=			
ANR	3172203	Identifier	NULL		3172166	0					
ANR	3172204	Identifier	NULL		3172166	1					
ANR	3172205	IfStatement	if ( output_len )		3172166	6					
ANR	3172206	Condition	output_len	2999:5:86679:86688	3172166	0	True				
ANR	3172207	Identifier	output_len		3172166	0					
ANR	3172208	CompoundStatement		9:17:199:199	3172166	1					
ANR	3172209	ExpressionStatement	* output_len = 0	3000:2:86695:86710	3172166	0	True				
ANR	3172210	AssignmentExpression	* output_len = 0		3172166	0		=			
ANR	3172211	UnaryOperationExpression	* output_len		3172166	0					
ANR	3172212	UnaryOperator	*		3172166	0					
ANR	3172213	Identifier	output_len		3172166	1					
ANR	3172214	PrimaryExpression	0		3172166	1					
ANR	3172215	IfStatement	if ( ! input )		3172166	7					
ANR	3172216	Condition	! input	3002:5:86720:86725	3172166	0	True				
ANR	3172217	UnaryOperationExpression	! input		3172166	0					
ANR	3172218	UnaryOperator	!		3172166	0					
ANR	3172219	Identifier	input		3172166	1					
ANR	3172220	CompoundStatement		12:13:236:236	3172166	1					
ANR	3172221	ReturnStatement	return NULL ;	3003:2:86732:86743	3172166	0	True				
ANR	3172222	Identifier	NULL		3172166	0					
ANR	3172223	IfStatement	if ( _to_encoding && strlen ( _to_encoding ) )		3172166	8					
ANR	3172224	Condition	_to_encoding && strlen ( _to_encoding )	3006:5:86773:86808	3172166	0	True				
ANR	3172225	AndExpression	_to_encoding && strlen ( _to_encoding )		3172166	0		&&			
ANR	3172226	Identifier	_to_encoding		3172166	0					
ANR	3172227	CallExpression	strlen ( _to_encoding )		3172166	1					
ANR	3172228	Callee	strlen		3172166	0					
ANR	3172229	Identifier	strlen		3172166	0					
ANR	3172230	ArgumentList	_to_encoding		3172166	1					
ANR	3172231	Argument	_to_encoding		3172166	0					
ANR	3172232	Identifier	_to_encoding		3172166	0					
ANR	3172233	CompoundStatement		16:43:319:319	3172166	1					
ANR	3172234	ExpressionStatement	to_encoding = mbfl_name2encoding ( _to_encoding )	3007:2:86815:86861	3172166	0	True				
ANR	3172235	AssignmentExpression	to_encoding = mbfl_name2encoding ( _to_encoding )		3172166	0		=			
ANR	3172236	Identifier	to_encoding		3172166	0					
ANR	3172237	CallExpression	mbfl_name2encoding ( _to_encoding )		3172166	1					
ANR	3172238	Callee	mbfl_name2encoding		3172166	0					
ANR	3172239	Identifier	mbfl_name2encoding		3172166	0					
ANR	3172240	ArgumentList	_to_encoding		3172166	1					
ANR	3172241	Argument	_to_encoding		3172166	0					
ANR	3172242	Identifier	_to_encoding		3172166	0					
ANR	3172243	IfStatement	if ( ! to_encoding )		3172166	1					
ANR	3172244	Condition	! to_encoding	3008:6:86869:86880	3172166	0	True				
ANR	3172245	UnaryOperationExpression	! to_encoding		3172166	0					
ANR	3172246	UnaryOperator	!		3172166	0					
ANR	3172247	Identifier	to_encoding		3172166	1					
ANR	3172248	CompoundStatement		18:20:391:391	3172166	1					
ANR	3172249	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Unknown encoding \\""%s\\"""" , _to_encoding )"	3009:3:86888:86962	3172166	0	True				
ANR	3172250	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Unknown encoding \\""%s\\"""" , _to_encoding )"		3172166	0					
ANR	3172251	Callee	php_error_docref		3172166	0					
ANR	3172252	Identifier	php_error_docref		3172166	0					
ANR	3172253	ArgumentList	NULL		3172166	1					
ANR	3172254	Argument	NULL		3172166	0					
ANR	3172255	Identifier	NULL		3172166	0					
ANR	3172256	Argument	E_WARNING		3172166	1					
ANR	3172257	Identifier	E_WARNING		3172166	0					
ANR	3172258	Argument	"""Unknown encoding \\""%s\\"""""		3172166	2					
ANR	3172259	PrimaryExpression	"""Unknown encoding \\""%s\\"""""		3172166	0					
ANR	3172260	Argument	_to_encoding		3172166	3					
ANR	3172261	Identifier	_to_encoding		3172166	0					
ANR	3172262	ReturnStatement	return NULL ;	3010:3:86967:86978	3172166	1	True				
ANR	3172263	Identifier	NULL		3172166	0					
ANR	3172264	ElseStatement	else		3172166	0					
ANR	3172265	CompoundStatement		22:8:500:500	3172166	0					
ANR	3172266	ExpressionStatement	to_encoding = MBSTRG ( current_internal_encoding )	3013:2:86996:87043	3172166	0	True				
ANR	3172267	AssignmentExpression	to_encoding = MBSTRG ( current_internal_encoding )		3172166	0		=			
ANR	3172268	Identifier	to_encoding		3172166	0					
ANR	3172269	CallExpression	MBSTRG ( current_internal_encoding )		3172166	1					
ANR	3172270	Callee	MBSTRG		3172166	0					
ANR	3172271	Identifier	MBSTRG		3172166	0					
ANR	3172272	ArgumentList	current_internal_encoding		3172166	1					
ANR	3172273	Argument	current_internal_encoding		3172166	0					
ANR	3172274	Identifier	current_internal_encoding		3172166	0					
ANR	3172275	ExpressionStatement	mbfl_string_init ( & string )	3017:1:87075:87100	3172166	9	True				
ANR	3172276	CallExpression	mbfl_string_init ( & string )		3172166	0					
ANR	3172277	Callee	mbfl_string_init		3172166	0					
ANR	3172278	Identifier	mbfl_string_init		3172166	0					
ANR	3172279	ArgumentList	& string		3172166	1					
ANR	3172280	Argument	& string		3172166	0					
ANR	3172281	UnaryOperationExpression	& string		3172166	0					
ANR	3172282	UnaryOperator	&		3172166	0					
ANR	3172283	Identifier	string		3172166	1					
ANR	3172284	ExpressionStatement	mbfl_string_init ( & result )	3018:1:87103:87128	3172166	10	True				
ANR	3172285	CallExpression	mbfl_string_init ( & result )		3172166	0					
ANR	3172286	Callee	mbfl_string_init		3172166	0					
ANR	3172287	Identifier	mbfl_string_init		3172166	0					
ANR	3172288	ArgumentList	& result		3172166	1					
ANR	3172289	Argument	& result		3172166	0					
ANR	3172290	UnaryOperationExpression	& result		3172166	0					
ANR	3172291	UnaryOperator	&		3172166	0					
ANR	3172292	Identifier	result		3172166	1					
ANR	3172293	ExpressionStatement	from_encoding = MBSTRG ( current_internal_encoding )	3019:1:87131:87180	3172166	11	True				
ANR	3172294	AssignmentExpression	from_encoding = MBSTRG ( current_internal_encoding )		3172166	0		=			
ANR	3172295	Identifier	from_encoding		3172166	0					
ANR	3172296	CallExpression	MBSTRG ( current_internal_encoding )		3172166	1					
ANR	3172297	Callee	MBSTRG		3172166	0					
ANR	3172298	Identifier	MBSTRG		3172166	0					
ANR	3172299	ArgumentList	current_internal_encoding		3172166	1					
ANR	3172300	Argument	current_internal_encoding		3172166	0					
ANR	3172301	Identifier	current_internal_encoding		3172166	0					
ANR	3172302	ExpressionStatement	string . no_encoding = from_encoding -> no_encoding	3020:1:87183:87230	3172166	12	True				
ANR	3172303	AssignmentExpression	string . no_encoding = from_encoding -> no_encoding		3172166	0		=			
ANR	3172304	MemberAccess	string . no_encoding		3172166	0					
ANR	3172305	Identifier	string		3172166	0					
ANR	3172306	Identifier	no_encoding		3172166	1					
ANR	3172307	PtrMemberAccess	from_encoding -> no_encoding		3172166	1					
ANR	3172308	Identifier	from_encoding		3172166	0					
ANR	3172309	Identifier	no_encoding		3172166	1					
ANR	3172310	ExpressionStatement	string . no_language = MBSTRG ( language )	3021:1:87233:87270	3172166	13	True				
ANR	3172311	AssignmentExpression	string . no_language = MBSTRG ( language )		3172166	0		=			
ANR	3172312	MemberAccess	string . no_language		3172166	0					
ANR	3172313	Identifier	string		3172166	0					
ANR	3172314	Identifier	no_language		3172166	1					
ANR	3172315	CallExpression	MBSTRG ( language )		3172166	1					
ANR	3172316	Callee	MBSTRG		3172166	0					
ANR	3172317	Identifier	MBSTRG		3172166	0					
ANR	3172318	ArgumentList	language		3172166	1					
ANR	3172319	Argument	language		3172166	0					
ANR	3172320	Identifier	language		3172166	0					
ANR	3172321	ExpressionStatement	string . val = ( unsigned char * ) input	3022:1:87273:87308	3172166	14	True				
ANR	3172322	AssignmentExpression	string . val = ( unsigned char * ) input		3172166	0		=			
ANR	3172323	MemberAccess	string . val		3172166	0					
ANR	3172324	Identifier	string		3172166	0					
ANR	3172325	Identifier	val		3172166	1					
ANR	3172326	CastExpression	( unsigned char * ) input		3172166	1					
ANR	3172327	CastTarget	unsigned char *		3172166	0					
ANR	3172328	Identifier	input		3172166	1					
ANR	3172329	ExpressionStatement	string . len = length	3023:1:87311:87330	3172166	15	True				
ANR	3172330	AssignmentExpression	string . len = length		3172166	0		=			
ANR	3172331	MemberAccess	string . len		3172166	0					
ANR	3172332	Identifier	string		3172166	0					
ANR	3172333	Identifier	len		3172166	1					
ANR	3172334	Identifier	length		3172166	1					
ANR	3172335	IfStatement	if ( _from_encodings )		3172166	16					
ANR	3172336	Condition	_from_encodings	3026:5:87369:87383	3172166	0	True				
ANR	3172337	Identifier	_from_encodings		3172166	0					
ANR	3172338	CompoundStatement		36:22:894:894	3172166	1					
ANR	3172339	ExpressionStatement	list = NULL	3027:2:87390:87401	3172166	0	True				
ANR	3172340	AssignmentExpression	list = NULL		3172166	0		=			
ANR	3172341	Identifier	list		3172166	0					
ANR	3172342	Identifier	NULL		3172166	1					
ANR	3172343	ExpressionStatement	size = 0	3028:2:87405:87413	3172166	1	True				
ANR	3172344	AssignmentExpression	size = 0		3172166	0		=			
ANR	3172345	Identifier	size		3172166	0					
ANR	3172346	PrimaryExpression	0		3172166	1					
ANR	3172347	ExpressionStatement	"php_mb_parse_encoding_list ( _from_encodings , strlen ( _from_encodings ) , & list , & size , 0 )"	3029:2:87417:87502	3172166	2	True				
ANR	3172348	CallExpression	"php_mb_parse_encoding_list ( _from_encodings , strlen ( _from_encodings ) , & list , & size , 0 )"		3172166	0					
ANR	3172349	Callee	php_mb_parse_encoding_list		3172166	0					
ANR	3172350	Identifier	php_mb_parse_encoding_list		3172166	0					
ANR	3172351	ArgumentList	_from_encodings		3172166	1					
ANR	3172352	Argument	_from_encodings		3172166	0					
ANR	3172353	Identifier	_from_encodings		3172166	0					
ANR	3172354	Argument	strlen ( _from_encodings )		3172166	1					
ANR	3172355	CallExpression	strlen ( _from_encodings )		3172166	0					
ANR	3172356	Callee	strlen		3172166	0					
ANR	3172357	Identifier	strlen		3172166	0					
ANR	3172358	ArgumentList	_from_encodings		3172166	1					
ANR	3172359	Argument	_from_encodings		3172166	0					
ANR	3172360	Identifier	_from_encodings		3172166	0					
ANR	3172361	Argument	& list		3172166	2					
ANR	3172362	UnaryOperationExpression	& list		3172166	0					
ANR	3172363	UnaryOperator	&		3172166	0					
ANR	3172364	Identifier	list		3172166	1					
ANR	3172365	Argument	& size		3172166	3					
ANR	3172366	UnaryOperationExpression	& size		3172166	0					
ANR	3172367	UnaryOperator	&		3172166	0					
ANR	3172368	Identifier	size		3172166	1					
ANR	3172369	Argument	0		3172166	4					
ANR	3172370	PrimaryExpression	0		3172166	0					
ANR	3172371	IfStatement	if ( size == 1 )		3172166	3					
ANR	3172372	Condition	size == 1	3030:6:87510:87518	3172166	0	True				
ANR	3172373	EqualityExpression	size == 1		3172166	0		==			
ANR	3172374	Identifier	size		3172166	0					
ANR	3172375	PrimaryExpression	1		3172166	1					
ANR	3172376	CompoundStatement		40:17:1029:1029	3172166	1					
ANR	3172377	ExpressionStatement	from_encoding = * list	3031:3:87526:87547	3172166	0	True				
ANR	3172378	AssignmentExpression	from_encoding = * list		3172166	0		=			
ANR	3172379	Identifier	from_encoding		3172166	0					
ANR	3172380	UnaryOperationExpression	* list		3172166	1					
ANR	3172381	UnaryOperator	*		3172166	0					
ANR	3172382	Identifier	list		3172166	1					
ANR	3172383	ExpressionStatement	string . no_encoding = from_encoding -> no_encoding	3032:3:87552:87599	3172166	1	True				
ANR	3172384	AssignmentExpression	string . no_encoding = from_encoding -> no_encoding		3172166	0		=			
ANR	3172385	MemberAccess	string . no_encoding		3172166	0					
ANR	3172386	Identifier	string		3172166	0					
ANR	3172387	Identifier	no_encoding		3172166	1					
ANR	3172388	PtrMemberAccess	from_encoding -> no_encoding		3172166	1					
ANR	3172389	Identifier	from_encoding		3172166	0					
ANR	3172390	Identifier	no_encoding		3172166	1					
ANR	3172391	ElseStatement	else		3172166	0					
ANR	3172392	IfStatement	if ( size > 1 )		3172166	0					
ANR	3172393	Condition	size > 1	3033:13:87614:87621	3172166	0	True				
ANR	3172394	RelationalExpression	size > 1		3172166	0		>			
ANR	3172395	Identifier	size		3172166	0					
ANR	3172396	PrimaryExpression	1		3172166	1					
ANR	3172397	CompoundStatement		43:23:1132:1132	3172166	1					
ANR	3172398	ExpressionStatement	"from_encoding = mbfl_identify_encoding2 ( & string , list , size , MBSTRG ( strict_detection ) )"	3035:3:87650:87736	3172166	0	True				
ANR	3172399	AssignmentExpression	"from_encoding = mbfl_identify_encoding2 ( & string , list , size , MBSTRG ( strict_detection ) )"		3172166	0		=			
ANR	3172400	Identifier	from_encoding		3172166	0					
ANR	3172401	CallExpression	"mbfl_identify_encoding2 ( & string , list , size , MBSTRG ( strict_detection ) )"		3172166	1					
ANR	3172402	Callee	mbfl_identify_encoding2		3172166	0					
ANR	3172403	Identifier	mbfl_identify_encoding2		3172166	0					
ANR	3172404	ArgumentList	& string		3172166	1					
ANR	3172405	Argument	& string		3172166	0					
ANR	3172406	UnaryOperationExpression	& string		3172166	0					
ANR	3172407	UnaryOperator	&		3172166	0					
ANR	3172408	Identifier	string		3172166	1					
ANR	3172409	Argument	list		3172166	1					
ANR	3172410	Identifier	list		3172166	0					
ANR	3172411	Argument	size		3172166	2					
ANR	3172412	Identifier	size		3172166	0					
ANR	3172413	Argument	MBSTRG ( strict_detection )		3172166	3					
ANR	3172414	CallExpression	MBSTRG ( strict_detection )		3172166	0					
ANR	3172415	Callee	MBSTRG		3172166	0					
ANR	3172416	Identifier	MBSTRG		3172166	0					
ANR	3172417	ArgumentList	strict_detection		3172166	1					
ANR	3172418	Argument	strict_detection		3172166	0					
ANR	3172419	Identifier	strict_detection		3172166	0					
ANR	3172420	IfStatement	if ( from_encoding )		3172166	1					
ANR	3172421	Condition	from_encoding	3036:7:87745:87757	3172166	0	True				
ANR	3172422	Identifier	from_encoding		3172166	0					
ANR	3172423	CompoundStatement		46:22:1268:1268	3172166	1					
ANR	3172424	ExpressionStatement	string . no_encoding = from_encoding -> no_encoding	3037:4:87766:87813	3172166	0	True				
ANR	3172425	AssignmentExpression	string . no_encoding = from_encoding -> no_encoding		3172166	0		=			
ANR	3172426	MemberAccess	string . no_encoding		3172166	0					
ANR	3172427	Identifier	string		3172166	0					
ANR	3172428	Identifier	no_encoding		3172166	1					
ANR	3172429	PtrMemberAccess	from_encoding -> no_encoding		3172166	1					
ANR	3172430	Identifier	from_encoding		3172166	0					
ANR	3172431	Identifier	no_encoding		3172166	1					
ANR	3172432	ElseStatement	else		3172166	0					
ANR	3172433	CompoundStatement		48:10:1333:1333	3172166	0					
ANR	3172434	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Unable to detect character encoding"" )"	3039:4:87831:87903	3172166	0	True				
ANR	3172435	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Unable to detect character encoding"" )"		3172166	0					
ANR	3172436	Callee	php_error_docref		3172166	0					
ANR	3172437	Identifier	php_error_docref		3172166	0					
ANR	3172438	ArgumentList	NULL		3172166	1					
ANR	3172439	Argument	NULL		3172166	0					
ANR	3172440	Identifier	NULL		3172166	0					
ANR	3172441	Argument	E_WARNING		3172166	1					
ANR	3172442	Identifier	E_WARNING		3172166	0					
ANR	3172443	Argument	"""Unable to detect character encoding"""		3172166	2					
ANR	3172444	PrimaryExpression	"""Unable to detect character encoding"""		3172166	0					
ANR	3172445	ExpressionStatement	from_encoding = & mbfl_encoding_pass	3040:4:87909:87944	3172166	1	True				
ANR	3172446	AssignmentExpression	from_encoding = & mbfl_encoding_pass		3172166	0		=			
ANR	3172447	Identifier	from_encoding		3172166	0					
ANR	3172448	UnaryOperationExpression	& mbfl_encoding_pass		3172166	1					
ANR	3172449	UnaryOperator	&		3172166	0					
ANR	3172450	Identifier	mbfl_encoding_pass		3172166	1					
ANR	3172451	ExpressionStatement	to_encoding = from_encoding	3041:4:87950:87977	3172166	2	True				
ANR	3172452	AssignmentExpression	to_encoding = from_encoding		3172166	0		=			
ANR	3172453	Identifier	to_encoding		3172166	0					
ANR	3172454	Identifier	from_encoding		3172166	1					
ANR	3172455	ExpressionStatement	string . no_encoding = from_encoding -> no_encoding	3042:4:87983:88030	3172166	3	True				
ANR	3172456	AssignmentExpression	string . no_encoding = from_encoding -> no_encoding		3172166	0		=			
ANR	3172457	MemberAccess	string . no_encoding		3172166	0					
ANR	3172458	Identifier	string		3172166	0					
ANR	3172459	Identifier	no_encoding		3172166	1					
ANR	3172460	PtrMemberAccess	from_encoding -> no_encoding		3172166	1					
ANR	3172461	Identifier	from_encoding		3172166	0					
ANR	3172462	Identifier	no_encoding		3172166	1					
ANR	3172463	ElseStatement	else		3172166	0					
ANR	3172464	CompoundStatement		54:9:1554:1554	3172166	0					
ANR	3172465	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Illegal character encoding specified"" )"	3045:3:88051:88124	3172166	0	True				
ANR	3172466	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Illegal character encoding specified"" )"		3172166	0					
ANR	3172467	Callee	php_error_docref		3172166	0					
ANR	3172468	Identifier	php_error_docref		3172166	0					
ANR	3172469	ArgumentList	NULL		3172166	1					
ANR	3172470	Argument	NULL		3172166	0					
ANR	3172471	Identifier	NULL		3172166	0					
ANR	3172472	Argument	E_WARNING		3172166	1					
ANR	3172473	Identifier	E_WARNING		3172166	0					
ANR	3172474	Argument	"""Illegal character encoding specified"""		3172166	2					
ANR	3172475	PrimaryExpression	"""Illegal character encoding specified"""		3172166	0					
ANR	3172476	IfStatement	if ( list != NULL )		3172166	4					
ANR	3172477	Condition	list != NULL	3047:6:88136:88147	3172166	0	True				
ANR	3172478	EqualityExpression	list != NULL		3172166	0		!=			
ANR	3172479	Identifier	list		3172166	0					
ANR	3172480	Identifier	NULL		3172166	1					
ANR	3172481	CompoundStatement		57:20:1658:1658	3172166	1					
ANR	3172482	ExpressionStatement	efree ( ( void * ) list )	3048:3:88155:88174	3172166	0	True				
ANR	3172483	CallExpression	efree ( ( void * ) list )		3172166	0					
ANR	3172484	Callee	efree		3172166	0					
ANR	3172485	Identifier	efree		3172166	0					
ANR	3172486	ArgumentList	( void * ) list		3172166	1					
ANR	3172487	Argument	( void * ) list		3172166	0					
ANR	3172488	CastExpression	( void * ) list		3172166	0					
ANR	3172489	CastTarget	void *		3172166	0					
ANR	3172490	Identifier	list		3172166	1					
ANR	3172491	ExpressionStatement	"convd = mbfl_buffer_converter_new2 ( from_encoding , to_encoding , string . len )"	3053:1:88213:88287	3172166	17	True				
ANR	3172492	AssignmentExpression	"convd = mbfl_buffer_converter_new2 ( from_encoding , to_encoding , string . len )"		3172166	0		=			
ANR	3172493	Identifier	convd		3172166	0					
ANR	3172494	CallExpression	"mbfl_buffer_converter_new2 ( from_encoding , to_encoding , string . len )"		3172166	1					
ANR	3172495	Callee	mbfl_buffer_converter_new2		3172166	0					
ANR	3172496	Identifier	mbfl_buffer_converter_new2		3172166	0					
ANR	3172497	ArgumentList	from_encoding		3172166	1					
ANR	3172498	Argument	from_encoding		3172166	0					
ANR	3172499	Identifier	from_encoding		3172166	0					
ANR	3172500	Argument	to_encoding		3172166	1					
ANR	3172501	Identifier	to_encoding		3172166	0					
ANR	3172502	Argument	string . len		3172166	2					
ANR	3172503	MemberAccess	string . len		3172166	0					
ANR	3172504	Identifier	string		3172166	0					
ANR	3172505	Identifier	len		3172166	1					
ANR	3172506	IfStatement	if ( convd == NULL )		3172166	18					
ANR	3172507	Condition	convd == NULL	3054:5:88294:88306	3172166	0	True				
ANR	3172508	EqualityExpression	convd == NULL		3172166	0		==			
ANR	3172509	Identifier	convd		3172166	0					
ANR	3172510	Identifier	NULL		3172166	1					
ANR	3172511	CompoundStatement		64:20:1817:1817	3172166	1					
ANR	3172512	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Unable to create character encoding converter"" )"	3055:2:88313:88395	3172166	0	True				
ANR	3172513	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Unable to create character encoding converter"" )"		3172166	0					
ANR	3172514	Callee	php_error_docref		3172166	0					
ANR	3172515	Identifier	php_error_docref		3172166	0					
ANR	3172516	ArgumentList	NULL		3172166	1					
ANR	3172517	Argument	NULL		3172166	0					
ANR	3172518	Identifier	NULL		3172166	0					
ANR	3172519	Argument	E_WARNING		3172166	1					
ANR	3172520	Identifier	E_WARNING		3172166	0					
ANR	3172521	Argument	"""Unable to create character encoding converter"""		3172166	2					
ANR	3172522	PrimaryExpression	"""Unable to create character encoding converter"""		3172166	0					
ANR	3172523	ReturnStatement	return NULL ;	3056:2:88399:88410	3172166	1	True				
ANR	3172524	Identifier	NULL		3172166	0					
ANR	3172525	ExpressionStatement	"mbfl_buffer_converter_illegal_mode ( convd , MBSTRG ( current_filter_illegal_mode ) )"	3058:1:88416:88494	3172166	19	True				
ANR	3172526	CallExpression	"mbfl_buffer_converter_illegal_mode ( convd , MBSTRG ( current_filter_illegal_mode ) )"		3172166	0					
ANR	3172527	Callee	mbfl_buffer_converter_illegal_mode		3172166	0					
ANR	3172528	Identifier	mbfl_buffer_converter_illegal_mode		3172166	0					
ANR	3172529	ArgumentList	convd		3172166	1					
ANR	3172530	Argument	convd		3172166	0					
ANR	3172531	Identifier	convd		3172166	0					
ANR	3172532	Argument	MBSTRG ( current_filter_illegal_mode )		3172166	1					
ANR	3172533	CallExpression	MBSTRG ( current_filter_illegal_mode )		3172166	0					
ANR	3172534	Callee	MBSTRG		3172166	0					
ANR	3172535	Identifier	MBSTRG		3172166	0					
ANR	3172536	ArgumentList	current_filter_illegal_mode		3172166	1					
ANR	3172537	Argument	current_filter_illegal_mode		3172166	0					
ANR	3172538	Identifier	current_filter_illegal_mode		3172166	0					
ANR	3172539	ExpressionStatement	"mbfl_buffer_converter_illegal_substchar ( convd , MBSTRG ( current_filter_illegal_substchar ) )"	3059:1:88497:88585	3172166	20	True				
ANR	3172540	CallExpression	"mbfl_buffer_converter_illegal_substchar ( convd , MBSTRG ( current_filter_illegal_substchar ) )"		3172166	0					
ANR	3172541	Callee	mbfl_buffer_converter_illegal_substchar		3172166	0					
ANR	3172542	Identifier	mbfl_buffer_converter_illegal_substchar		3172166	0					
ANR	3172543	ArgumentList	convd		3172166	1					
ANR	3172544	Argument	convd		3172166	0					
ANR	3172545	Identifier	convd		3172166	0					
ANR	3172546	Argument	MBSTRG ( current_filter_illegal_substchar )		3172166	1					
ANR	3172547	CallExpression	MBSTRG ( current_filter_illegal_substchar )		3172166	0					
ANR	3172548	Callee	MBSTRG		3172166	0					
ANR	3172549	Identifier	MBSTRG		3172166	0					
ANR	3172550	ArgumentList	current_filter_illegal_substchar		3172166	1					
ANR	3172551	Argument	current_filter_illegal_substchar		3172166	0					
ANR	3172552	Identifier	current_filter_illegal_substchar		3172166	0					
ANR	3172553	ExpressionStatement	"ret = mbfl_buffer_converter_feed_result ( convd , & string , & result )"	3062:1:88602:88666	3172166	21	True				
ANR	3172554	AssignmentExpression	"ret = mbfl_buffer_converter_feed_result ( convd , & string , & result )"		3172166	0		=			
ANR	3172555	Identifier	ret		3172166	0					
ANR	3172556	CallExpression	"mbfl_buffer_converter_feed_result ( convd , & string , & result )"		3172166	1					
ANR	3172557	Callee	mbfl_buffer_converter_feed_result		3172166	0					
ANR	3172558	Identifier	mbfl_buffer_converter_feed_result		3172166	0					
ANR	3172559	ArgumentList	convd		3172166	1					
ANR	3172560	Argument	convd		3172166	0					
ANR	3172561	Identifier	convd		3172166	0					
ANR	3172562	Argument	& string		3172166	1					
ANR	3172563	UnaryOperationExpression	& string		3172166	0					
ANR	3172564	UnaryOperator	&		3172166	0					
ANR	3172565	Identifier	string		3172166	1					
ANR	3172566	Argument	& result		3172166	2					
ANR	3172567	UnaryOperationExpression	& result		3172166	0					
ANR	3172568	UnaryOperator	&		3172166	0					
ANR	3172569	Identifier	result		3172166	1					
ANR	3172570	IfStatement	if ( ret )		3172166	22					
ANR	3172571	Condition	ret	3063:5:88673:88675	3172166	0	True				
ANR	3172572	Identifier	ret		3172166	0					
ANR	3172573	CompoundStatement		73:10:2186:2186	3172166	1					
ANR	3172574	IfStatement	if ( output_len )		3172166	0					
ANR	3172575	Condition	output_len	3064:6:88686:88695	3172166	0	True				
ANR	3172576	Identifier	output_len		3172166	0					
ANR	3172577	CompoundStatement		74:18:2206:2206	3172166	1					
ANR	3172578	ExpressionStatement	* output_len = ret -> len	3065:3:88703:88725	3172166	0	True				
ANR	3172579	AssignmentExpression	* output_len = ret -> len		3172166	0		=			
ANR	3172580	UnaryOperationExpression	* output_len		3172166	0					
ANR	3172581	UnaryOperator	*		3172166	0					
ANR	3172582	Identifier	output_len		3172166	1					
ANR	3172583	PtrMemberAccess	ret -> len		3172166	1					
ANR	3172584	Identifier	ret		3172166	0					
ANR	3172585	Identifier	len		3172166	1					
ANR	3172586	ExpressionStatement	output = ( char * ) ret -> val	3067:2:88733:88758	3172166	1	True				
ANR	3172587	AssignmentExpression	output = ( char * ) ret -> val		3172166	0		=			
ANR	3172588	Identifier	output		3172166	0					
ANR	3172589	CastExpression	( char * ) ret -> val		3172166	1					
ANR	3172590	CastTarget	char *		3172166	0					
ANR	3172591	PtrMemberAccess	ret -> val		3172166	1					
ANR	3172592	Identifier	ret		3172166	0					
ANR	3172593	Identifier	val		3172166	1					
ANR	3172594	ExpressionStatement	MBSTRG ( illegalchars ) += mbfl_buffer_illegalchars ( convd )	3070:1:88765:88820	3172166	23	True				
ANR	3172595	AssignmentExpression	MBSTRG ( illegalchars ) += mbfl_buffer_illegalchars ( convd )		3172166	0		+=			
ANR	3172596	CallExpression	MBSTRG ( illegalchars )		3172166	0					
ANR	3172597	Callee	MBSTRG		3172166	0					
ANR	3172598	Identifier	MBSTRG		3172166	0					
ANR	3172599	ArgumentList	illegalchars		3172166	1					
ANR	3172600	Argument	illegalchars		3172166	0					
ANR	3172601	Identifier	illegalchars		3172166	0					
ANR	3172602	CallExpression	mbfl_buffer_illegalchars ( convd )		3172166	1					
ANR	3172603	Callee	mbfl_buffer_illegalchars		3172166	0					
ANR	3172604	Identifier	mbfl_buffer_illegalchars		3172166	0					
ANR	3172605	ArgumentList	convd		3172166	1					
ANR	3172606	Argument	convd		3172166	0					
ANR	3172607	Identifier	convd		3172166	0					
ANR	3172608	ExpressionStatement	mbfl_buffer_converter_delete ( convd )	3071:1:88823:88858	3172166	24	True				
ANR	3172609	CallExpression	mbfl_buffer_converter_delete ( convd )		3172166	0					
ANR	3172610	Callee	mbfl_buffer_converter_delete		3172166	0					
ANR	3172611	Identifier	mbfl_buffer_converter_delete		3172166	0					
ANR	3172612	ArgumentList	convd		3172166	1					
ANR	3172613	Argument	convd		3172166	0					
ANR	3172614	Identifier	convd		3172166	0					
ANR	3172615	ReturnStatement	return output ;	3072:1:88861:88874	3172166	25	True				
ANR	3172616	Identifier	output		3172166	0					
ANR	3172617	ReturnType	MBSTRING_API char *		3172166	1					
ANR	3172618	Identifier	php_mb_convert_encoding		3172166	2					
ANR	3172619	ParameterList	"const char * input , size_t length , const char * _to_encoding , const char * _from_encodings , size_t * output_len"		3172166	3					
ANR	3172620	Parameter	const char * input	2990:44:86382:86398	3172166	0	True				
ANR	3172621	ParameterType	const char *		3172166	0					
ANR	3172622	Identifier	input		3172166	1					
ANR	3172623	Parameter	size_t length	2990:63:86401:86413	3172166	1	True				
ANR	3172624	ParameterType	size_t		3172166	0					
ANR	3172625	Identifier	length		3172166	1					
ANR	3172626	Parameter	const char * _to_encoding	2990:78:86416:86439	3172166	2	True				
ANR	3172627	ParameterType	const char *		3172166	0					
ANR	3172628	Identifier	_to_encoding		3172166	1					
ANR	3172629	Parameter	const char * _from_encodings	2990:104:86442:86468	3172166	3	True				
ANR	3172630	ParameterType	const char *		3172166	0					
ANR	3172631	Identifier	_from_encodings		3172166	1					
ANR	3172632	Parameter	size_t * output_len	2990:133:86471:86488	3172166	4	True				
ANR	3172633	ParameterType	size_t *		3172166	0					
ANR	3172634	Identifier	output_len		3172166	1					
ANR	3172635	CFGEntryNode	ENTRY		3172166		True				
ANR	3172636	CFGExitNode	EXIT		3172166		True				
ANR	3172637	Symbol	output_len		3172166						
ANR	3172638	Symbol	mbfl_name2encoding		3172166						
ANR	3172639	Symbol	& string		3172166						
ANR	3172640	Symbol	ret -> len		3172166						
ANR	3172641	Symbol	string		3172166						
ANR	3172642	Symbol	MBSTRG		3172166						
ANR	3172643	Symbol	* from_encoding		3172166						
ANR	3172644	Symbol	to_encoding		3172166						
ANR	3172645	Symbol	language		3172166						
ANR	3172646	Symbol	current_filter_illegal_substchar		3172166						
ANR	3172647	Symbol	* ret		3172166						
ANR	3172648	Symbol	result		3172166						
ANR	3172649	Symbol	output		3172166						
ANR	3172650	Symbol	E_WARNING		3172166						
ANR	3172651	Symbol	_to_encoding		3172166						
ANR	3172652	Symbol	strlen		3172166						
ANR	3172653	Symbol	& list		3172166						
ANR	3172654	Symbol	& result		3172166						
ANR	3172655	Symbol	convd		3172166						
ANR	3172656	Symbol	string . no_language		3172166						
ANR	3172657	Symbol	ret -> val		3172166						
ANR	3172658	Symbol	string . len		3172166						
ANR	3172659	Symbol	* output_len		3172166						
ANR	3172660	Symbol	ret		3172166						
ANR	3172661	Symbol	NULL		3172166						
ANR	3172662	Symbol	mbfl_buffer_illegalchars		3172166						
ANR	3172663	Symbol	length		3172166						
ANR	3172664	Symbol	string . no_encoding		3172166						
ANR	3172665	Symbol	string . val		3172166						
ANR	3172666	Symbol	& mbfl_encoding_pass		3172166						
ANR	3172667	Symbol	from_encoding		3172166						
ANR	3172668	Symbol	& size		3172166						
ANR	3172669	Symbol	list		3172166						
ANR	3172670	Symbol	mbfl_buffer_converter_feed_result		3172166						
ANR	3172671	Symbol	input		3172166						
ANR	3172672	Symbol	current_internal_encoding		3172166						
ANR	3172673	Symbol	from_encoding -> no_encoding		3172166						
ANR	3172674	Symbol	size		3172166						
ANR	3172675	Symbol	* list		3172166						
ANR	3172676	Symbol	mbfl_buffer_converter_new2		3172166						
ANR	3172677	Symbol	current_filter_illegal_mode		3172166						
ANR	3172678	Symbol	_from_encodings		3172166						
ANR	3172679	Symbol	mbfl_identify_encoding2		3172166						
ANR	3172680	Symbol	strict_detection		3172166						
ANR	3172681	Symbol	illegalchars		3172166						
ANR	3172682	DeclStmt									
ANR	3172683	Decl							char	char *	arg_str
ANR	3172684	Decl							char	char *	arg_new
ANR	3172685	DeclStmt									
ANR	3172686	Decl							size_t	size_t	str_len
ANR	3172687	Decl							size_t	size_t	new_len
ANR	3172688	DeclStmt									
ANR	3172689	Decl							zval	zval *	arg_old
ANR	3172690	DeclStmt									
ANR	3172691	Decl							size_t	size_t	size
ANR	3172692	Decl							size_t	size_t	l
ANR	3172693	Decl							size_t	size_t	n
ANR	3172694	DeclStmt									
ANR	3172695	Decl							char	char *	_from_encodings
ANR	3172696	Decl							char	char *	ret
ANR	3172697	Decl							char	char *	s_free
ANR	3172698	DeclStmt									
ANR	3172699	Decl							zval	zval *	hash_entry
ANR	3172700	DeclStmt									
ANR	3172701	Decl							HashTable	HashTable *	target_hash
ANR	3172702	DeclStmt									
ANR	3172703	Decl							const char	const char *	from_encoding
ANR	3172704	DeclStmt									
ANR	3172705	Decl							char	char *	str
ANR	3172706	DeclStmt									
ANR	3172707	Decl							size_t	size_t	str_len
ANR	3172708	Decl							size_t	size_t	from_encoding_len
ANR	3172709	DeclStmt									
ANR	3172710	Decl							zend_long	zend_long	case_mode
ANR	3172711	DeclStmt									
ANR	3172712	Decl							char	char *	newstr
ANR	3172713	DeclStmt									
ANR	3172714	Decl							size_t	size_t	ret_len
ANR	3172715	DeclStmt									
ANR	3172716	Decl							const char	const char *	from_encoding
ANR	3172717	DeclStmt									
ANR	3172718	Decl							char	char *	str
ANR	3172719	DeclStmt									
ANR	3172720	Decl							size_t	size_t	str_len
ANR	3172721	Decl							size_t	size_t	from_encoding_len
ANR	3172722	DeclStmt									
ANR	3172723	Decl							char	char *	newstr
ANR	3172724	DeclStmt									
ANR	3172725	Decl							size_t	size_t	ret_len
ANR	3172726	DeclStmt									
ANR	3172727	Decl							const char	const char *	from_encoding
ANR	3172728	DeclStmt									
ANR	3172729	Decl							char	char *	str
ANR	3172730	DeclStmt									
ANR	3172731	Decl							size_t	size_t	str_len
ANR	3172732	Decl							size_t	size_t	from_encoding_len
ANR	3172733	DeclStmt									
ANR	3172734	Decl							char	char *	newstr
ANR	3172735	DeclStmt									
ANR	3172736	Decl							size_t	size_t	ret_len
ANR	3172737	DeclStmt									
ANR	3172738	Decl							char	char *	str
ANR	3172739	DeclStmt									
ANR	3172740	Decl							size_t	size_t	str_len
ANR	3172741	DeclStmt									
ANR	3172742	Decl							zend_bool	zend_bool	strict
ANR	3172743	DeclStmt									
ANR	3172744	Decl							zval	zval *	encoding_list
ANR	3172745	DeclStmt									
ANR	3172746	Decl							mbfl_string	mbfl_string	string
ANR	3172747	DeclStmt									
ANR	3172748	Decl							const mbfl_encoding	const mbfl_encoding *	ret
ANR	3172749	DeclStmt									
ANR	3172750	Decl							const mbfl_encoding	const mbfl_encoding * *	elist
ANR	3172751	Decl							const mbfl_encoding	const mbfl_encoding * *	list
ANR	3172752	DeclStmt									
ANR	3172753	Decl							size_t	size_t	size
ANR	3172754	DeclStmt									
ANR	3172755	Decl							const mbfl_encoding	const mbfl_encoding * *	encodings
ANR	3172756	DeclStmt									
ANR	3172757	Decl							const mbfl_encoding	const mbfl_encoding *	encoding
ANR	3172758	DeclStmt									
ANR	3172759	Decl							int	int	i
ANR	3172760	DeclStmt									
ANR	3172761	Decl							const mbfl_encoding	const mbfl_encoding *	encoding
ANR	3172762	DeclStmt									
ANR	3172763	Decl							char	char *	name
ANR	3172764	DeclStmt									
ANR	3172765	Decl							size_t	size_t	name_len
ANR	3172766	DeclStmt									
ANR	3172767	Decl							const char	const char * *	alias
ANR	3172768	DeclStmt									
ANR	3172769	Decl							enum mbfl_no_encoding	enum mbfl_no_encoding	charset
ANR	3172770	Decl							enum mbfl_no_encoding	enum mbfl_no_encoding	transenc
ANR	3172771	DeclStmt									
ANR	3172772	Decl							mbfl_string	mbfl_string	string
ANR	3172773	Decl							mbfl_string	mbfl_string	result
ANR	3172774	Decl							mbfl_string	mbfl_string *	ret
ANR	3172775	DeclStmt									
ANR	3172776	Decl							char	char *	charset_name
ANR	3172777	DeclStmt									
ANR	3172778	Decl							size_t	size_t	charset_name_len
ANR	3172779	DeclStmt									
ANR	3172780	Decl							char	char *	trans_enc_name
ANR	3172781	DeclStmt									
ANR	3172782	Decl							size_t	size_t	trans_enc_name_len
ANR	3172783	DeclStmt									
ANR	3172784	Decl							char	char *	linefeed
ANR	3172785	DeclStmt									
ANR	3172786	Decl							size_t	size_t	linefeed_len
ANR	3172787	DeclStmt									
ANR	3172788	Decl							zend_long	zend_long	indent
ANR	3172789	DeclStmt									
ANR	3172790	Decl							const mbfl_language	const mbfl_language *	lang
ANR	3172791	DeclStmt									
ANR	3172792	Decl							mbfl_string	mbfl_string	string
ANR	3172793	Decl							mbfl_string	mbfl_string	result
ANR	3172794	Decl							mbfl_string	mbfl_string *	ret
ANR	3172795	DeclStmt									
ANR	3172796	Decl							int	int	opt
ANR	3172797	Decl							int	int	i
ANR	3172798	DeclStmt									
ANR	3172799	Decl							mbfl_string	mbfl_string	string
ANR	3172800	Decl							mbfl_string	mbfl_string	result
ANR	3172801	Decl							mbfl_string	mbfl_string *	ret
ANR	3172802	DeclStmt									
ANR	3172803	Decl							char	char *	optstr
ANR	3172804	DeclStmt									
ANR	3172805	Decl							size_t	size_t	optstr_len
ANR	3172806	DeclStmt									
ANR	3172807	Decl							char	char *	encname
ANR	3172808	DeclStmt									
ANR	3172809	Decl							size_t	size_t	encname_len
ANR	3172810	DeclStmt									
ANR	3172811	Decl							char	char *	p
ANR	3172812	DeclStmt									
ANR	3172813	Decl							int	int	n
ANR	3172814	DeclStmt									
ANR	3172815	Decl							zval	zval *	args
ANR	3172816	Decl							zval	zval *	stack
ANR	3172817	Decl							zval	zval *	var
ANR	3172818	Decl							zval	zval *	hash_entry
ANR	3172819	Decl							zval	zval *	hash_entry_ptr
ANR	3172820	Decl							zval	zval *	zfrom_enc
ANR	3172821	DeclStmt									
ANR	3172822	Decl							HashTable	HashTable *	target_hash
ANR	3172823	DeclStmt									
ANR	3172824	Decl							mbfl_string	mbfl_string	string
ANR	3172825	Decl							mbfl_string	mbfl_string	result
ANR	3172826	Decl							mbfl_string	mbfl_string *	ret
ANR	3172827	DeclStmt									
ANR	3172828	Decl							const mbfl_encoding	const mbfl_encoding *	from_encoding
ANR	3172829	Decl							const mbfl_encoding	const mbfl_encoding *	to_encoding
ANR	3172830	DeclStmt									
ANR	3172831	Decl							mbfl_encoding_detector	mbfl_encoding_detector *	identd
ANR	3172832	DeclStmt									
ANR	3172833	Decl							mbfl_buffer_converter	mbfl_buffer_converter *	convd
ANR	3172834	DeclStmt									
ANR	3172835	Decl							int	int	n
ANR	3172836	Decl							int	int	argc
ANR	3172837	Decl							int	int	stack_level
ANR	3172838	Decl							int	int	stack_max
ANR	3172839	DeclStmt									
ANR	3172840	Decl							size_t	size_t	to_enc_len
ANR	3172841	DeclStmt									
ANR	3172842	Decl							size_t	size_t	elistsz
ANR	3172843	DeclStmt									
ANR	3172844	Decl							const mbfl_encoding	const mbfl_encoding * *	elist
ANR	3172845	DeclStmt									
ANR	3172846	Decl							char	char *	to_enc
ANR	3172847	DeclStmt									
ANR	3172848	Decl							void	void *	ptmp
ANR	3172849	DeclStmt									
ANR	3172850	Decl							char	char *	str
ANR	3172851	Decl							char	char *	encoding
ANR	3172852	DeclStmt									
ANR	3172853	Decl							size_t	size_t	str_len
ANR	3172854	Decl							size_t	size_t	encoding_len
ANR	3172855	DeclStmt									
ANR	3172856	Decl							zval	zval *	zconvmap
ANR	3172857	Decl							zval	zval *	hash_entry
ANR	3172858	DeclStmt									
ANR	3172859	Decl							HashTable	HashTable *	target_hash
ANR	3172860	DeclStmt									
ANR	3172861	Decl							int	int	i
ANR	3172862	Decl							int	int *	convmap
ANR	3172863	Decl							int	int *	mapelm
ANR	3172864	Decl							int	int	mapsize
ANR	3172865	DeclStmt									
ANR	3172866	Decl							zend_bool	zend_bool	is_hex
ANR	3172867	DeclStmt									
ANR	3172868	Decl							mbfl_string	mbfl_string	string
ANR	3172869	Decl							mbfl_string	mbfl_string	result
ANR	3172870	Decl							mbfl_string	mbfl_string *	ret
ANR	3172871	DeclStmt									
ANR	3172872	Decl							enum mbfl_no_encoding	enum mbfl_no_encoding	no_encoding
ANR	3172873	Function	_php_mbstr_parse_mail_headers	3874:0:110550:113784							
ANR	3172874	FunctionDef	"_php_mbstr_parse_mail_headers (HashTable * ht , const char * str , size_t str_len)"		3172873	0					
ANR	3172875	CompoundStatement		3875:0:110639:113784	3172873	0					
ANR	3172876	IdentifierDeclStatement	const char * ps ;	3876:1:110642:110656	3172873	0	True				
ANR	3172877	IdentifierDecl	* ps		3172873	0					
ANR	3172878	IdentifierDeclType	const char *		3172873	0					
ANR	3172879	Identifier	ps		3172873	1					
ANR	3172880	IdentifierDeclStatement	size_t icnt ;	3877:1:110659:110670	3172873	1	True				
ANR	3172881	IdentifierDecl	icnt		3172873	0					
ANR	3172882	IdentifierDeclType	size_t		3172873	0					
ANR	3172883	Identifier	icnt		3172873	1					
ANR	3172884	IdentifierDeclStatement	int state = 0 ;	3878:1:110673:110686	3172873	2	True				
ANR	3172885	IdentifierDecl	state = 0		3172873	0					
ANR	3172886	IdentifierDeclType	int		3172873	0					
ANR	3172887	Identifier	state		3172873	1					
ANR	3172888	AssignmentExpression	state = 0		3172873	2		=			
ANR	3172889	Identifier	state		3172873	0					
ANR	3172890	PrimaryExpression	0		3172873	1					
ANR	3172891	IdentifierDeclStatement	int crlf_state = - 1 ;	3879:1:110689:110708	3172873	3	True				
ANR	3172892	IdentifierDecl	crlf_state = - 1		3172873	0					
ANR	3172893	IdentifierDeclType	int		3172873	0					
ANR	3172894	Identifier	crlf_state		3172873	1					
ANR	3172895	AssignmentExpression	crlf_state = - 1		3172873	2		=			
ANR	3172896	Identifier	crlf_state		3172873	0					
ANR	3172897	UnaryOperationExpression	- 1		3172873	1					
ANR	3172898	UnaryOperator	-		3172873	0					
ANR	3172899	PrimaryExpression	1		3172873	1					
ANR	3172900	IdentifierDeclStatement	char * token = NULL ;	3880:1:110711:110729	3172873	4	True				
ANR	3172901	IdentifierDecl	* token = NULL		3172873	0					
ANR	3172902	IdentifierDeclType	char *		3172873	0					
ANR	3172903	Identifier	token		3172873	1					
ANR	3172904	AssignmentExpression	* token = NULL		3172873	2		=			
ANR	3172905	Identifier	NULL		3172873	0					
ANR	3172906	Identifier	NULL		3172873	1					
ANR	3172907	IdentifierDeclStatement	size_t token_pos = 0 ;	3881:1:110732:110752	3172873	5	True				
ANR	3172908	IdentifierDecl	token_pos = 0		3172873	0					
ANR	3172909	IdentifierDeclType	size_t		3172873	0					
ANR	3172910	Identifier	token_pos		3172873	1					
ANR	3172911	AssignmentExpression	token_pos = 0		3172873	2		=			
ANR	3172912	Identifier	token_pos		3172873	0					
ANR	3172913	PrimaryExpression	0		3172873	1					
ANR	3172914	IdentifierDeclStatement	"zend_string * fld_name , * fld_val ;"	3882:1:110755:110786	3172873	6	True				
ANR	3172915	IdentifierDecl	* fld_name		3172873	0					
ANR	3172916	IdentifierDeclType	zend_string *		3172873	0					
ANR	3172917	Identifier	fld_name		3172873	1					
ANR	3172918	IdentifierDecl	* fld_val		3172873	1					
ANR	3172919	IdentifierDeclType	zend_string *		3172873	0					
ANR	3172920	Identifier	fld_val		3172873	1					
ANR	3172921	ExpressionStatement	ps = str	3884:1:110790:110798	3172873	7	True				
ANR	3172922	AssignmentExpression	ps = str		3172873	0		=			
ANR	3172923	Identifier	ps		3172873	0					
ANR	3172924	Identifier	str		3172873	1					
ANR	3172925	ExpressionStatement	icnt = str_len	3885:1:110801:110815	3172873	8	True				
ANR	3172926	AssignmentExpression	icnt = str_len		3172873	0		=			
ANR	3172927	Identifier	icnt		3172873	0					
ANR	3172928	Identifier	str_len		3172873	1					
ANR	3172929	ExpressionStatement	fld_name = fld_val = NULL	3886:1:110818:110843	3172873	9	True				
ANR	3172930	AssignmentExpression	fld_name = fld_val = NULL		3172873	0		=			
ANR	3172931	Identifier	fld_name		3172873	0					
ANR	3172932	AssignmentExpression	fld_val = NULL		3172873	1		=			
ANR	3172933	Identifier	fld_val		3172873	0					
ANR	3172934	Identifier	NULL		3172873	1					
ANR	3172935	WhileStatement	while ( icnt > 0 )		3172873	10					
ANR	3172936	Condition	icnt > 0	3899:8:111261:111268	3172873	0	True				
ANR	3172937	RelationalExpression	icnt > 0		3172873	0		>			
ANR	3172938	Identifier	icnt		3172873	0					
ANR	3172939	PrimaryExpression	0		3172873	1					
ANR	3172940	CompoundStatement		25:18:631:631	3172873	1					
ANR	3172941	SwitchStatement	switch ( * ps )		3172873	0					
ANR	3172942	Condition	* ps	3900:10:111283:111285	3172873	0	True				
ANR	3172943	UnaryOperationExpression	* ps		3172873	0					
ANR	3172944	UnaryOperator	*		3172873	0					
ANR	3172945	Identifier	ps		3172873	1					
ANR	3172946	CompoundStatement		26:15:648:648	3172873	1					
ANR	3172947	Label	case ':' :	3901:3:111293:111301	3172873	0	True				
ANR	3172948	IfStatement	if ( crlf_state == 1 )		3172873	1					
ANR	3172949	Condition	crlf_state == 1	3902:8:111311:111325	3172873	0	True				
ANR	3172950	EqualityExpression	crlf_state == 1		3172873	0		==			
ANR	3172951	Identifier	crlf_state		3172873	0					
ANR	3172952	PrimaryExpression	1		3172873	1					
ANR	3172953	CompoundStatement		28:25:688:688	3172873	1					
ANR	3172954	ExpressionStatement	token_pos ++	3903:5:111335:111346	3172873	0	True				
ANR	3172955	PostIncDecOperationExpression	token_pos ++		3172873	0					
ANR	3172956	Identifier	token_pos		3172873	0					
ANR	3172957	IncDec	++		3172873	1					
ANR	3172958	IfStatement	if ( state == 0 || state == 1 )		3172873	2					
ANR	3172959	Condition	state == 0 || state == 1	3906:8:111363:111386	3172873	0	True				
ANR	3172960	OrExpression	state == 0 || state == 1		3172873	0		||			
ANR	3172961	EqualityExpression	state == 0		3172873	0		==			
ANR	3172962	Identifier	state		3172873	0					
ANR	3172963	PrimaryExpression	0		3172873	1					
ANR	3172964	EqualityExpression	state == 1		3172873	1		==			
ANR	3172965	Identifier	state		3172873	0					
ANR	3172966	PrimaryExpression	1		3172873	1					
ANR	3172967	CompoundStatement		32:34:749:749	3172873	1					
ANR	3172968	IfStatement	if ( token && token_pos > 0 )		3172873	0					
ANR	3172969	Condition	token && token_pos > 0	3907:8:111399:111420	3172873	0	True				
ANR	3172970	AndExpression	token && token_pos > 0		3172873	0		&&			
ANR	3172971	Identifier	token		3172873	0					
ANR	3172972	RelationalExpression	token_pos > 0		3172873	1		>			
ANR	3172973	Identifier	token_pos		3172873	0					
ANR	3172974	PrimaryExpression	0		3172873	1					
ANR	3172975	CompoundStatement		33:32:783:783	3172873	1					
ANR	3172976	ExpressionStatement	"fld_name = zend_string_init ( token , token_pos , 0 )"	3908:6:111431:111479	3172873	0	True				
ANR	3172977	AssignmentExpression	"fld_name = zend_string_init ( token , token_pos , 0 )"		3172873	0		=			
ANR	3172978	Identifier	fld_name		3172873	0					
ANR	3172979	CallExpression	"zend_string_init ( token , token_pos , 0 )"		3172873	1					
ANR	3172980	Callee	zend_string_init		3172873	0					
ANR	3172981	Identifier	zend_string_init		3172873	0					
ANR	3172982	ArgumentList	token		3172873	1					
ANR	3172983	Argument	token		3172873	0					
ANR	3172984	Identifier	token		3172873	0					
ANR	3172985	Argument	token_pos		3172873	1					
ANR	3172986	Identifier	token_pos		3172873	0					
ANR	3172987	Argument	0		3172873	2					
ANR	3172988	PrimaryExpression	0		3172873	0					
ANR	3172989	ExpressionStatement	state = 2	3910:5:111493:111502	3172873	1	True				
ANR	3172990	AssignmentExpression	state = 2		3172873	0		=			
ANR	3172991	Identifier	state		3172873	0					
ANR	3172992	PrimaryExpression	2		3172873	1					
ANR	3172993	ElseStatement	else		3172873	0					
ANR	3172994	CompoundStatement		37:11:875:875	3172873	0					
ANR	3172995	ExpressionStatement	token_pos ++	3912:5:111522:111533	3172873	0	True				
ANR	3172996	PostIncDecOperationExpression	token_pos ++		3172873	0					
ANR	3172997	Identifier	token_pos		3172873	0					
ANR	3172998	IncDec	++		3172873	1					
ANR	3172999	ExpressionStatement	crlf_state = 0	3915:4:111546:111560	3172873	3	True				
ANR	3173000	AssignmentExpression	crlf_state = 0		3172873	0		=			
ANR	3173001	Identifier	crlf_state		3172873	0					
ANR	3173002	PrimaryExpression	0		3172873	1					
ANR	3173003	BreakStatement	break ;	3916:4:111566:111571	3172873	4	True				
ANR	3173004	Label	case '\\n' :	3918:3:111577:111586	3172873	5	True				
ANR	3173005	IfStatement	if ( crlf_state == - 1 )		3172873	6					
ANR	3173006	Condition	crlf_state == - 1	3919:8:111596:111611	3172873	0	True				
ANR	3173007	EqualityExpression	crlf_state == - 1		3172873	0		==			
ANR	3173008	Identifier	crlf_state		3172873	0					
ANR	3173009	UnaryOperationExpression	- 1		3172873	1					
ANR	3173010	UnaryOperator	-		3172873	0					
ANR	3173011	PrimaryExpression	1		3172873	1					
ANR	3173012	CompoundStatement		45:26:974:974	3172873	1					
ANR	3173013	GotoStatement	goto out ;	3920:5:111621:111629	3172873	0	True				
ANR	3173014	Identifier	out		3172873	0					
ANR	3173015	ExpressionStatement	crlf_state = - 1	3922:4:111641:111656	3172873	7	True				
ANR	3173016	AssignmentExpression	crlf_state = - 1		3172873	0		=			
ANR	3173017	Identifier	crlf_state		3172873	0					
ANR	3173018	UnaryOperationExpression	- 1		3172873	1					
ANR	3173019	UnaryOperator	-		3172873	0					
ANR	3173020	PrimaryExpression	1		3172873	1					
ANR	3173021	BreakStatement	break ;	3923:4:111662:111667	3172873	8	True				
ANR	3173022	Label	case '\\r' :	3925:3:111673:111682	3172873	9	True				
ANR	3173023	IfStatement	if ( crlf_state == 1 )		3172873	10					
ANR	3173024	Condition	crlf_state == 1	3926:8:111692:111706	3172873	0	True				
ANR	3173025	EqualityExpression	crlf_state == 1		3172873	0		==			
ANR	3173026	Identifier	crlf_state		3172873	0					
ANR	3173027	PrimaryExpression	1		3172873	1					
ANR	3173028	CompoundStatement		52:25:1069:1069	3172873	1					
ANR	3173029	ExpressionStatement	token_pos ++	3927:5:111716:111727	3172873	0	True				
ANR	3173030	PostIncDecOperationExpression	token_pos ++		3172873	0					
ANR	3173031	Identifier	token_pos		3172873	0					
ANR	3173032	IncDec	++		3172873	1					
ANR	3173033	ElseStatement	else		3172873	0					
ANR	3173034	CompoundStatement		54:11:1100:1100	3172873	0					
ANR	3173035	ExpressionStatement	crlf_state = 1	3929:5:111747:111761	3172873	0	True				
ANR	3173036	AssignmentExpression	crlf_state = 1		3172873	0		=			
ANR	3173037	Identifier	crlf_state		3172873	0					
ANR	3173038	PrimaryExpression	1		3172873	1					
ANR	3173039	BreakStatement	break ;	3931:4:111773:111778	3172873	11	True				
ANR	3173040	Label	case ' ' :	3933:3:111784:111792	3172873	12	True				
ANR	3173041	Label	case '\\t' :	3933:13:111794:111803	3172873	13	True				
ANR	3173042	IfStatement	if ( crlf_state == - 1 )		3172873	14					
ANR	3173043	Condition	crlf_state == - 1	3934:8:111813:111828	3172873	0	True				
ANR	3173044	EqualityExpression	crlf_state == - 1		3172873	0		==			
ANR	3173045	Identifier	crlf_state		3172873	0					
ANR	3173046	UnaryOperationExpression	- 1		3172873	1					
ANR	3173047	UnaryOperator	-		3172873	0					
ANR	3173048	PrimaryExpression	1		3172873	1					
ANR	3173049	CompoundStatement		60:26:1191:1191	3172873	1					
ANR	3173050	IfStatement	if ( state == 3 )		3172873	0					
ANR	3173051	Condition	state == 3	3935:9:111842:111851	3172873	0	True				
ANR	3173052	EqualityExpression	state == 3		3172873	0		==			
ANR	3173053	Identifier	state		3172873	0					
ANR	3173054	PrimaryExpression	3		3172873	1					
ANR	3173055	CompoundStatement		61:21:1214:1214	3172873	1					
ANR	3173056	ExpressionStatement	state = 4	3937:6:111908:111917	3172873	0	True				
ANR	3173057	AssignmentExpression	state = 4		3172873	0		=			
ANR	3173058	Identifier	state		3172873	0					
ANR	3173059	PrimaryExpression	4		3172873	1					
ANR	3173060	ElseStatement	else		3172873	0					
ANR	3173061	CompoundStatement		64:12:1291:1291	3172873	0					
ANR	3173062	ExpressionStatement	state = 5	3940:6:111981:111990	3172873	0	True				
ANR	3173063	AssignmentExpression	state = 5		3172873	0		=			
ANR	3173064	Identifier	state		3172873	0					
ANR	3173065	PrimaryExpression	5		3172873	1					
ANR	3173066	ElseStatement	else		3172873	0					
ANR	3173067	CompoundStatement		68:11:1370:1370	3172873	0					
ANR	3173068	IfStatement	if ( crlf_state == 1 )		3172873	0					
ANR	3173069	Condition	crlf_state == 1	3943:9:112021:112035	3172873	0	True				
ANR	3173070	EqualityExpression	crlf_state == 1		3172873	0		==			
ANR	3173071	Identifier	crlf_state		3172873	0					
ANR	3173072	PrimaryExpression	1		3172873	1					
ANR	3173073	CompoundStatement		69:26:1398:1398	3172873	1					
ANR	3173074	ExpressionStatement	token_pos ++	3944:6:112046:112057	3172873	0	True				
ANR	3173075	PostIncDecOperationExpression	token_pos ++		3172873	0					
ANR	3173076	Identifier	token_pos		3172873	0					
ANR	3173077	IncDec	++		3172873	1					
ANR	3173078	IfStatement	if ( state == 1 || state == 3 )		3172873	1					
ANR	3173079	Condition	state == 1 || state == 3	3946:9:112075:112098	3172873	0	True				
ANR	3173080	OrExpression	state == 1 || state == 3		3172873	0		||			
ANR	3173081	EqualityExpression	state == 1		3172873	0		==			
ANR	3173082	Identifier	state		3172873	0					
ANR	3173083	PrimaryExpression	1		3172873	1					
ANR	3173084	EqualityExpression	state == 3		3172873	1		==			
ANR	3173085	Identifier	state		3172873	0					
ANR	3173086	PrimaryExpression	3		3172873	1					
ANR	3173087	CompoundStatement		72:35:1461:1461	3172873	1					
ANR	3173088	ExpressionStatement	token_pos ++	3947:6:112109:112120	3172873	0	True				
ANR	3173089	PostIncDecOperationExpression	token_pos ++		3172873	0					
ANR	3173090	Identifier	token_pos		3172873	0					
ANR	3173091	IncDec	++		3172873	1					
ANR	3173092	ExpressionStatement	crlf_state = 0	3950:4:112139:112153	3172873	15	True				
ANR	3173093	AssignmentExpression	crlf_state = 0		3172873	0		=			
ANR	3173094	Identifier	crlf_state		3172873	0					
ANR	3173095	PrimaryExpression	0		3172873	1					
ANR	3173096	BreakStatement	break ;	3951:4:112159:112164	3172873	16	True				
ANR	3173097	Label	default :	3953:3:112170:112177	3172873	17	True				
ANR	3173098	Identifier	default		3172873	0					
ANR	3173099	SwitchStatement	switch ( state )		3172873	18					
ANR	3173100	Condition	state	3954:12:112191:112195	3172873	0	True				
ANR	3173101	Identifier	state		3172873	0					
ANR	3173102	CompoundStatement		80:19:1558:1558	3172873	1					
ANR	3173103	Label	case 0 :	3955:5:112205:112211	3172873	0	True				
ANR	3173104	ExpressionStatement	token = ( char * ) ps	3956:6:112219:112236	3172873	1	True				
ANR	3173105	AssignmentExpression	token = ( char * ) ps		3172873	0		=			
ANR	3173106	Identifier	token		3172873	0					
ANR	3173107	CastExpression	( char * ) ps		3172873	1					
ANR	3173108	CastTarget	char *		3172873	0					
ANR	3173109	Identifier	ps		3172873	1					
ANR	3173110	ExpressionStatement	token_pos = 0	3957:6:112244:112257	3172873	2	True				
ANR	3173111	AssignmentExpression	token_pos = 0		3172873	0		=			
ANR	3173112	Identifier	token_pos		3172873	0					
ANR	3173113	PrimaryExpression	0		3172873	1					
ANR	3173114	ExpressionStatement	state = 1	3958:6:112265:112274	3172873	3	True				
ANR	3173115	AssignmentExpression	state = 1		3172873	0		=			
ANR	3173116	Identifier	state		3172873	0					
ANR	3173117	PrimaryExpression	1		3172873	1					
ANR	3173118	BreakStatement	break ;	3959:6:112282:112287	3172873	4	True				
ANR	3173119	Label	case 2 :	3961:5:112295:112301	3172873	5	True				
ANR	3173120	IfStatement	if ( crlf_state != - 1 )		3172873	6					
ANR	3173121	Condition	crlf_state != - 1	3962:10:112313:112328	3172873	0	True				
ANR	3173122	EqualityExpression	crlf_state != - 1		3172873	0		!=			
ANR	3173123	Identifier	crlf_state		3172873	0					
ANR	3173124	UnaryOperationExpression	- 1		3172873	1					
ANR	3173125	UnaryOperator	-		3172873	0					
ANR	3173126	PrimaryExpression	1		3172873	1					
ANR	3173127	CompoundStatement		88:28:1691:1691	3172873	1					
ANR	3173128	ExpressionStatement	token = ( char * ) ps	3963:7:112340:112357	3172873	0	True				
ANR	3173129	AssignmentExpression	token = ( char * ) ps		3172873	0		=			
ANR	3173130	Identifier	token		3172873	0					
ANR	3173131	CastExpression	( char * ) ps		3172873	1					
ANR	3173132	CastTarget	char *		3172873	0					
ANR	3173133	Identifier	ps		3172873	1					
ANR	3173134	ExpressionStatement	token_pos = 0	3964:7:112366:112379	3172873	1	True				
ANR	3173135	AssignmentExpression	token_pos = 0		3172873	0		=			
ANR	3173136	Identifier	token_pos		3172873	0					
ANR	3173137	PrimaryExpression	0		3172873	1					
ANR	3173138	ExpressionStatement	state = 3	3966:7:112389:112398	3172873	2	True				
ANR	3173139	AssignmentExpression	state = 3		3172873	0		=			
ANR	3173140	Identifier	state		3172873	0					
ANR	3173141	PrimaryExpression	3		3172873	1					
ANR	3173142	BreakStatement	break ;	3967:7:112407:112412	3172873	3	True				
ANR	3173143	Label	case 3 :	3971:5:112471:112477	3172873	7	True				
ANR	3173144	IfStatement	if ( crlf_state == - 1 )		3172873	8					
ANR	3173145	Condition	crlf_state == - 1	3972:10:112489:112504	3172873	0	True				
ANR	3173146	EqualityExpression	crlf_state == - 1		3172873	0		==			
ANR	3173147	Identifier	crlf_state		3172873	0					
ANR	3173148	UnaryOperationExpression	- 1		3172873	1					
ANR	3173149	UnaryOperator	-		3172873	0					
ANR	3173150	PrimaryExpression	1		3172873	1					
ANR	3173151	CompoundStatement		98:28:1867:1867	3172873	1					
ANR	3173152	IfStatement	if ( token && token_pos > 0 )		3172873	0					
ANR	3173153	Condition	token && token_pos > 0	3973:10:112519:112540	3172873	0	True				
ANR	3173154	AndExpression	token && token_pos > 0		3172873	0		&&			
ANR	3173155	Identifier	token		3172873	0					
ANR	3173156	RelationalExpression	token_pos > 0		3172873	1		>			
ANR	3173157	Identifier	token_pos		3172873	0					
ANR	3173158	PrimaryExpression	0		3172873	1					
ANR	3173159	CompoundStatement		99:34:1903:1903	3172873	1					
ANR	3173160	ExpressionStatement	"fld_val = zend_string_init ( token , token_pos , 0 )"	3974:8:112553:112600	3172873	0	True				
ANR	3173161	AssignmentExpression	"fld_val = zend_string_init ( token , token_pos , 0 )"		3172873	0		=			
ANR	3173162	Identifier	fld_val		3172873	0					
ANR	3173163	CallExpression	"zend_string_init ( token , token_pos , 0 )"		3172873	1					
ANR	3173164	Callee	zend_string_init		3172873	0					
ANR	3173165	Identifier	zend_string_init		3172873	0					
ANR	3173166	ArgumentList	token		3172873	1					
ANR	3173167	Argument	token		3172873	0					
ANR	3173168	Identifier	token		3172873	0					
ANR	3173169	Argument	token_pos		3172873	1					
ANR	3173170	Identifier	token_pos		3172873	0					
ANR	3173171	Argument	0		3172873	2					
ANR	3173172	PrimaryExpression	0		3172873	0					
ANR	3173173	IfStatement	if ( fld_name != NULL && fld_val != NULL )		3172873	1					
ANR	3173174	Condition	fld_name != NULL && fld_val != NULL	3977:11:112623:112657	3172873	0	True				
ANR	3173175	AndExpression	fld_name != NULL && fld_val != NULL		3172873	0		&&			
ANR	3173176	EqualityExpression	fld_name != NULL		3172873	0		!=			
ANR	3173177	Identifier	fld_name		3172873	0					
ANR	3173178	Identifier	NULL		3172873	1					
ANR	3173179	EqualityExpression	fld_val != NULL		3172873	1		!=			
ANR	3173180	Identifier	fld_val		3172873	0					
ANR	3173181	Identifier	NULL		3172873	1					
ANR	3173182	CompoundStatement		104:8:2030:2038	3172873	1					
ANR	3173183	IdentifierDeclStatement	zval val ;	3978:8:112670:112678	3172873	0	True				
ANR	3173184	IdentifierDecl	val		3172873	0					
ANR	3173185	IdentifierDeclType	zval		3172873	0					
ANR	3173186	Identifier	val		3172873	1					
ANR	3173187	ExpressionStatement	"php_strtoupper ( ZSTR_VAL ( fld_name ) , ZSTR_LEN ( fld_name ) )"	3981:8:112779:112833	3172873	1	True				
ANR	3173188	CallExpression	"php_strtoupper ( ZSTR_VAL ( fld_name ) , ZSTR_LEN ( fld_name ) )"		3172873	0					
ANR	3173189	Callee	php_strtoupper		3172873	0					
ANR	3173190	Identifier	php_strtoupper		3172873	0					
ANR	3173191	ArgumentList	ZSTR_VAL ( fld_name )		3172873	1					
ANR	3173192	Argument	ZSTR_VAL ( fld_name )		3172873	0					
ANR	3173193	CallExpression	ZSTR_VAL ( fld_name )		3172873	0					
ANR	3173194	Callee	ZSTR_VAL		3172873	0					
ANR	3173195	Identifier	ZSTR_VAL		3172873	0					
ANR	3173196	ArgumentList	fld_name		3172873	1					
ANR	3173197	Argument	fld_name		3172873	0					
ANR	3173198	Identifier	fld_name		3172873	0					
ANR	3173199	Argument	ZSTR_LEN ( fld_name )		3172873	1					
ANR	3173200	CallExpression	ZSTR_LEN ( fld_name )		3172873	0					
ANR	3173201	Callee	ZSTR_LEN		3172873	0					
ANR	3173202	Identifier	ZSTR_LEN		3172873	0					
ANR	3173203	ArgumentList	fld_name		3172873	1					
ANR	3173204	Argument	fld_name		3172873	0					
ANR	3173205	Identifier	fld_name		3172873	0					
ANR	3173206	ExpressionStatement	"ZVAL_STR ( & val , fld_val )"	3982:8:112843:112866	3172873	2	True				
ANR	3173207	CallExpression	"ZVAL_STR ( & val , fld_val )"		3172873	0					
ANR	3173208	Callee	ZVAL_STR		3172873	0					
ANR	3173209	Identifier	ZVAL_STR		3172873	0					
ANR	3173210	ArgumentList	& val		3172873	1					
ANR	3173211	Argument	& val		3172873	0					
ANR	3173212	UnaryOperationExpression	& val		3172873	0					
ANR	3173213	UnaryOperator	&		3172873	0					
ANR	3173214	Identifier	val		3172873	1					
ANR	3173215	Argument	fld_val		3172873	1					
ANR	3173216	Identifier	fld_val		3172873	0					
ANR	3173217	ExpressionStatement	"zend_hash_update ( ht , fld_name , & val )"	3984:8:112877:112913	3172873	3	True				
ANR	3173218	CallExpression	"zend_hash_update ( ht , fld_name , & val )"		3172873	0					
ANR	3173219	Callee	zend_hash_update		3172873	0					
ANR	3173220	Identifier	zend_hash_update		3172873	0					
ANR	3173221	ArgumentList	ht		3172873	1					
ANR	3173222	Argument	ht		3172873	0					
ANR	3173223	Identifier	ht		3172873	0					
ANR	3173224	Argument	fld_name		3172873	1					
ANR	3173225	Identifier	fld_name		3172873	0					
ANR	3173226	Argument	& val		3172873	2					
ANR	3173227	UnaryOperationExpression	& val		3172873	0					
ANR	3173228	UnaryOperator	&		3172873	0					
ANR	3173229	Identifier	val		3172873	1					
ANR	3173230	ExpressionStatement	zend_string_release ( fld_name )	3986:8:112924:112953	3172873	4	True				
ANR	3173231	CallExpression	zend_string_release ( fld_name )		3172873	0					
ANR	3173232	Callee	zend_string_release		3172873	0					
ANR	3173233	Identifier	zend_string_release		3172873	0					
ANR	3173234	ArgumentList	fld_name		3172873	1					
ANR	3173235	Argument	fld_name		3172873	0					
ANR	3173236	Identifier	fld_name		3172873	0					
ANR	3173237	ExpressionStatement	fld_name = fld_val = NULL	3989:7:112972:112997	3172873	2	True				
ANR	3173238	AssignmentExpression	fld_name = fld_val = NULL		3172873	0		=			
ANR	3173239	Identifier	fld_name		3172873	0					
ANR	3173240	AssignmentExpression	fld_val = NULL		3172873	1		=			
ANR	3173241	Identifier	fld_val		3172873	0					
ANR	3173242	Identifier	NULL		3172873	1					
ANR	3173243	ExpressionStatement	token = ( char * ) ps	3990:7:113006:113023	3172873	3	True				
ANR	3173244	AssignmentExpression	token = ( char * ) ps		3172873	0		=			
ANR	3173245	Identifier	token		3172873	0					
ANR	3173246	CastExpression	( char * ) ps		3172873	1					
ANR	3173247	CastTarget	char *		3172873	0					
ANR	3173248	Identifier	ps		3172873	1					
ANR	3173249	ExpressionStatement	token_pos = 0	3991:7:113032:113045	3172873	4	True				
ANR	3173250	AssignmentExpression	token_pos = 0		3172873	0		=			
ANR	3173251	Identifier	token_pos		3172873	0					
ANR	3173252	PrimaryExpression	0		3172873	1					
ANR	3173253	ExpressionStatement	state = 1	3993:7:113055:113064	3172873	5	True				
ANR	3173254	AssignmentExpression	state = 1		3172873	0		=			
ANR	3173255	Identifier	state		3172873	0					
ANR	3173256	PrimaryExpression	1		3172873	1					
ANR	3173257	BreakStatement	break ;	3995:6:113080:113085	3172873	9	True				
ANR	3173258	Label	case 4 :	3997:5:113093:113099	3172873	10	True				
ANR	3173259	ExpressionStatement	token_pos ++	3998:6:113107:113118	3172873	11	True				
ANR	3173260	PostIncDecOperationExpression	token_pos ++		3172873	0					
ANR	3173261	Identifier	token_pos		3172873	0					
ANR	3173262	IncDec	++		3172873	1					
ANR	3173263	ExpressionStatement	state = 3	3999:6:113126:113135	3172873	12	True				
ANR	3173264	AssignmentExpression	state = 3		3172873	0		=			
ANR	3173265	Identifier	state		3172873	0					
ANR	3173266	PrimaryExpression	3		3172873	1					
ANR	3173267	BreakStatement	break ;	4000:6:113143:113148	3172873	13	True				
ANR	3173268	IfStatement	if ( crlf_state == 1 )		3172873	19					
ANR	3173269	Condition	crlf_state == 1	4003:8:113165:113179	3172873	0	True				
ANR	3173270	EqualityExpression	crlf_state == 1		3172873	0		==			
ANR	3173271	Identifier	crlf_state		3172873	0					
ANR	3173272	PrimaryExpression	1		3172873	1					
ANR	3173273	CompoundStatement		129:25:2542:2542	3172873	1					
ANR	3173274	ExpressionStatement	token_pos ++	4004:5:113189:113200	3172873	0	True				
ANR	3173275	PostIncDecOperationExpression	token_pos ++		3172873	0					
ANR	3173276	Identifier	token_pos		3172873	0					
ANR	3173277	IncDec	++		3172873	1					
ANR	3173278	ExpressionStatement	token_pos ++	4007:4:113213:113224	3172873	20	True				
ANR	3173279	PostIncDecOperationExpression	token_pos ++		3172873	0					
ANR	3173280	Identifier	token_pos		3172873	0					
ANR	3173281	IncDec	++		3172873	1					
ANR	3173282	ExpressionStatement	crlf_state = 0	4009:4:113231:113245	3172873	21	True				
ANR	3173283	AssignmentExpression	crlf_state = 0		3172873	0		=			
ANR	3173284	Identifier	crlf_state		3172873	0					
ANR	3173285	PrimaryExpression	0		3172873	1					
ANR	3173286	BreakStatement	break ;	4010:4:113251:113256	3172873	22	True				
ANR	3173287	ExpressionStatement	"ps ++ , icnt --"	4012:2:113264:113276	3172873	1	True				
ANR	3173288	Expression	"ps ++ , icnt --"		3172873	0					
ANR	3173289	PostIncDecOperationExpression	ps ++		3172873	0					
ANR	3173290	Identifier	ps		3172873	0					
ANR	3173291	IncDec	++		3172873	1					
ANR	3173292	PostIncDecOperationExpression	icnt --		3172873	1					
ANR	3173293	Identifier	icnt		3172873	0					
ANR	3173294	IncDec	--		3172873	1					
ANR	3173295	Label	out :	4014:0:113281:113284	3172873	11	True				
ANR	3173296	Identifier	out		3172873	0					
ANR	3173297	IfStatement	if ( state == 2 )		3172873	12					
ANR	3173298	Condition	state == 2	4015:5:113291:113300	3172873	0	True				
ANR	3173299	EqualityExpression	state == 2		3172873	0		==			
ANR	3173300	Identifier	state		3172873	0					
ANR	3173301	PrimaryExpression	2		3172873	1					
ANR	3173302	CompoundStatement		141:17:2663:2663	3172873	1					
ANR	3173303	ExpressionStatement	"token = """""	4016:2:113307:113317	3172873	0	True				
ANR	3173304	AssignmentExpression	"token = """""		3172873	0		=			
ANR	3173305	Identifier	token		3172873	0					
ANR	3173306	PrimaryExpression	""""""		3172873	1					
ANR	3173307	ExpressionStatement	token_pos = 0	4017:2:113321:113334	3172873	1	True				
ANR	3173308	AssignmentExpression	token_pos = 0		3172873	0		=			
ANR	3173309	Identifier	token_pos		3172873	0					
ANR	3173310	PrimaryExpression	0		3172873	1					
ANR	3173311	ExpressionStatement	state = 3	4019:2:113339:113348	3172873	2	True				
ANR	3173312	AssignmentExpression	state = 3		3172873	0		=			
ANR	3173313	Identifier	state		3172873	0					
ANR	3173314	PrimaryExpression	3		3172873	1					
ANR	3173315	IfStatement	if ( state == 3 )		3172873	13					
ANR	3173316	Condition	state == 3	4021:5:113358:113367	3172873	0	True				
ANR	3173317	EqualityExpression	state == 3		3172873	0		==			
ANR	3173318	Identifier	state		3172873	0					
ANR	3173319	PrimaryExpression	3		3172873	1					
ANR	3173320	CompoundStatement		147:17:2730:2730	3172873	1					
ANR	3173321	IfStatement	if ( token && token_pos > 0 )		3172873	0					
ANR	3173322	Condition	token && token_pos > 0	4022:5:113377:113398	3172873	0	True				
ANR	3173323	AndExpression	token && token_pos > 0		3172873	0		&&			
ANR	3173324	Identifier	token		3172873	0					
ANR	3173325	RelationalExpression	token_pos > 0		3172873	1		>			
ANR	3173326	Identifier	token_pos		3172873	0					
ANR	3173327	PrimaryExpression	0		3172873	1					
ANR	3173328	CompoundStatement		148:29:2761:2761	3172873	1					
ANR	3173329	ExpressionStatement	"fld_val = zend_string_init ( token , token_pos , 0 )"	4023:3:113406:113453	3172873	0	True				
ANR	3173330	AssignmentExpression	"fld_val = zend_string_init ( token , token_pos , 0 )"		3172873	0		=			
ANR	3173331	Identifier	fld_val		3172873	0					
ANR	3173332	CallExpression	"zend_string_init ( token , token_pos , 0 )"		3172873	1					
ANR	3173333	Callee	zend_string_init		3172873	0					
ANR	3173334	Identifier	zend_string_init		3172873	0					
ANR	3173335	ArgumentList	token		3172873	1					
ANR	3173336	Argument	token		3172873	0					
ANR	3173337	Identifier	token		3172873	0					
ANR	3173338	Argument	token_pos		3172873	1					
ANR	3173339	Identifier	token_pos		3172873	0					
ANR	3173340	Argument	0		3172873	2					
ANR	3173341	PrimaryExpression	0		3172873	0					
ANR	3173342	IfStatement	if ( fld_name != NULL && fld_val != NULL )		3172873	1					
ANR	3173343	Condition	fld_name != NULL && fld_val != NULL	4025:6:113465:113499	3172873	0	True				
ANR	3173344	AndExpression	fld_name != NULL && fld_val != NULL		3172873	0		&&			
ANR	3173345	EqualityExpression	fld_name != NULL		3172873	0		!=			
ANR	3173346	Identifier	fld_name		3172873	0					
ANR	3173347	Identifier	NULL		3172873	1					
ANR	3173348	EqualityExpression	fld_val != NULL		3172873	1		!=			
ANR	3173349	Identifier	fld_val		3172873	0					
ANR	3173350	Identifier	NULL		3172873	1					
ANR	3173351	CompoundStatement		152:3:2867:2875	3172873	1					
ANR	3173352	IdentifierDeclStatement	zval val ;	4026:3:113507:113515	3172873	0	True				
ANR	3173353	IdentifierDecl	val		3172873	0					
ANR	3173354	IdentifierDeclType	zval		3172873	0					
ANR	3173355	Identifier	val		3172873	1					
ANR	3173356	ExpressionStatement	"php_strtoupper ( ZSTR_VAL ( fld_name ) , ZSTR_LEN ( fld_name ) )"	4029:3:113601:113655	3172873	1	True				
ANR	3173357	CallExpression	"php_strtoupper ( ZSTR_VAL ( fld_name ) , ZSTR_LEN ( fld_name ) )"		3172873	0					
ANR	3173358	Callee	php_strtoupper		3172873	0					
ANR	3173359	Identifier	php_strtoupper		3172873	0					
ANR	3173360	ArgumentList	ZSTR_VAL ( fld_name )		3172873	1					
ANR	3173361	Argument	ZSTR_VAL ( fld_name )		3172873	0					
ANR	3173362	CallExpression	ZSTR_VAL ( fld_name )		3172873	0					
ANR	3173363	Callee	ZSTR_VAL		3172873	0					
ANR	3173364	Identifier	ZSTR_VAL		3172873	0					
ANR	3173365	ArgumentList	fld_name		3172873	1					
ANR	3173366	Argument	fld_name		3172873	0					
ANR	3173367	Identifier	fld_name		3172873	0					
ANR	3173368	Argument	ZSTR_LEN ( fld_name )		3172873	1					
ANR	3173369	CallExpression	ZSTR_LEN ( fld_name )		3172873	0					
ANR	3173370	Callee	ZSTR_LEN		3172873	0					
ANR	3173371	Identifier	ZSTR_LEN		3172873	0					
ANR	3173372	ArgumentList	fld_name		3172873	1					
ANR	3173373	Argument	fld_name		3172873	0					
ANR	3173374	Identifier	fld_name		3172873	0					
ANR	3173375	ExpressionStatement	"ZVAL_STR ( & val , fld_val )"	4030:3:113660:113683	3172873	2	True				
ANR	3173376	CallExpression	"ZVAL_STR ( & val , fld_val )"		3172873	0					
ANR	3173377	Callee	ZVAL_STR		3172873	0					
ANR	3173378	Identifier	ZVAL_STR		3172873	0					
ANR	3173379	ArgumentList	& val		3172873	1					
ANR	3173380	Argument	& val		3172873	0					
ANR	3173381	UnaryOperationExpression	& val		3172873	0					
ANR	3173382	UnaryOperator	&		3172873	0					
ANR	3173383	Identifier	val		3172873	1					
ANR	3173384	Argument	fld_val		3172873	1					
ANR	3173385	Identifier	fld_val		3172873	0					
ANR	3173386	ExpressionStatement	"zend_hash_update ( ht , fld_name , & val )"	4032:3:113689:113725	3172873	3	True				
ANR	3173387	CallExpression	"zend_hash_update ( ht , fld_name , & val )"		3172873	0					
ANR	3173388	Callee	zend_hash_update		3172873	0					
ANR	3173389	Identifier	zend_hash_update		3172873	0					
ANR	3173390	ArgumentList	ht		3172873	1					
ANR	3173391	Argument	ht		3172873	0					
ANR	3173392	Identifier	ht		3172873	0					
ANR	3173393	Argument	fld_name		3172873	1					
ANR	3173394	Identifier	fld_name		3172873	0					
ANR	3173395	Argument	& val		3172873	2					
ANR	3173396	UnaryOperationExpression	& val		3172873	0					
ANR	3173397	UnaryOperator	&		3172873	0					
ANR	3173398	Identifier	val		3172873	1					
ANR	3173399	ExpressionStatement	zend_string_release ( fld_name )	4034:3:113731:113760	3172873	4	True				
ANR	3173400	CallExpression	zend_string_release ( fld_name )		3172873	0					
ANR	3173401	Callee	zend_string_release		3172873	0					
ANR	3173402	Identifier	zend_string_release		3172873	0					
ANR	3173403	ArgumentList	fld_name		3172873	1					
ANR	3173404	Argument	fld_name		3172873	0					
ANR	3173405	Identifier	fld_name		3172873	0					
ANR	3173406	ReturnStatement	return state ;	4037:1:113770:113782	3172873	14	True				
ANR	3173407	Identifier	state		3172873	0					
ANR	3173408	ReturnType	static int		3172873	1					
ANR	3173409	Identifier	_php_mbstr_parse_mail_headers		3172873	2					
ANR	3173410	ParameterList	"HashTable * ht , const char * str , size_t str_len"		3172873	3					
ANR	3173411	Parameter	HashTable * ht	3874:41:110591:110603	3172873	0	True				
ANR	3173412	ParameterType	HashTable *		3172873	0					
ANR	3173413	Identifier	ht		3172873	1					
ANR	3173414	Parameter	const char * str	3874:56:110606:110620	3172873	1	True				
ANR	3173415	ParameterType	const char *		3172873	0					
ANR	3173416	Identifier	str		3172873	1					
ANR	3173417	Parameter	size_t str_len	3874:73:110623:110636	3172873	2	True				
ANR	3173418	ParameterType	size_t		3172873	0					
ANR	3173419	Identifier	str_len		3172873	1					
ANR	3173420	CFGEntryNode	ENTRY		3172873		True				
ANR	3173421	CFGExitNode	EXIT		3172873		True				
ANR	3173422	Symbol	val		3172873						
ANR	3173423	Symbol	& val		3172873						
ANR	3173424	Symbol	ps		3172873						
ANR	3173425	Symbol	NULL		3172873						
ANR	3173426	Symbol	fld_name		3172873						
ANR	3173427	Symbol	* ps		3172873						
ANR	3173428	Symbol	ht		3172873						
ANR	3173429	Symbol	token		3172873						
ANR	3173430	Symbol	ZSTR_VAL		3172873						
ANR	3173431	Symbol	str		3172873						
ANR	3173432	Symbol	icnt		3172873						
ANR	3173433	Symbol	zend_string_init		3172873						
ANR	3173434	Symbol	str_len		3172873						
ANR	3173435	Symbol	fld_val		3172873						
ANR	3173436	Symbol	ZSTR_LEN		3172873						
ANR	3173437	Symbol	crlf_state		3172873						
ANR	3173438	Symbol	state		3172873						
ANR	3173439	Symbol	token_pos		3172873						
ANR	3173440	DeclStmt									
ANR	3173441	Decl							int	int	n
ANR	3173442	DeclStmt									
ANR	3173443	Decl							char	char *	to
ANR	3173444	DeclStmt									
ANR	3173445	Decl							size_t	size_t	to_len
ANR	3173446	DeclStmt									
ANR	3173447	Decl							char	char *	message
ANR	3173448	DeclStmt									
ANR	3173449	Decl							size_t	size_t	message_len
ANR	3173450	DeclStmt									
ANR	3173451	Decl							char	char *	headers
ANR	3173452	DeclStmt									
ANR	3173453	Decl							size_t	size_t	headers_len
ANR	3173454	DeclStmt									
ANR	3173455	Decl							char	char *	subject
ANR	3173456	DeclStmt									
ANR	3173457	Decl							zend_string	zend_string *	extra_cmd
ANR	3173458	DeclStmt									
ANR	3173459	Decl							size_t	size_t	subject_len
ANR	3173460	DeclStmt									
ANR	3173461	Decl							int	int	i
ANR	3173462	DeclStmt									
ANR	3173463	Decl							char	char *	to_r
ANR	3173464	DeclStmt									
ANR	3173465	Decl							char	char *	force_extra_parameters
ANR	3173466	ClassDef	<unnamed>	4055:1:114123:114202							
ANR	3173467	DeclStmt									
ANR	3173468	Decl									suppressed_hdrs
ANR	3173469	DeclStmt									
ANR	3173470	Decl							char	char *	message_buf
ANR	3173471	Decl							char	char *	subject_buf
ANR	3173472	Decl							char	char *	p
ANR	3173473	DeclStmt									
ANR	3173474	Decl							mbfl_string	mbfl_string	orig_str
ANR	3173475	Decl							mbfl_string	mbfl_string	conv_str
ANR	3173476	DeclStmt									
ANR	3173477	Decl							mbfl_string	mbfl_string *	pstr
ANR	3173478	DeclStmt									
ANR	3173479	Decl							enum mbfl_no_encoding	enum mbfl_no_encoding	tran_cs
ANR	3173480	Decl							enum mbfl_no_encoding	enum mbfl_no_encoding	head_enc
ANR	3173481	Decl							enum mbfl_no_encoding	enum mbfl_no_encoding	body_enc
ANR	3173482	DeclStmt									
ANR	3173483	Decl							mbfl_memory_device	mbfl_memory_device	device
ANR	3173484	DeclStmt									
ANR	3173485	Decl							const mbfl_language	const mbfl_language *	lang
ANR	3173486	DeclStmt									
ANR	3173487	Decl							int	int	err
ANR	3173488	DeclStmt									
ANR	3173489	Decl							HashTable	HashTable	ht_headers
ANR	3173490	DeclStmt									
ANR	3173491	Decl							zval	zval *	s
ANR	3173492	DeclStmt									
ANR	3173493	Decl							extern void	extern void ( mbfl_memory_device * device )	mbfl_memory_device_unput
ANR	3173494	DeclStmt									
ANR	3173495	Decl							char	char *	pp
ANR	3173496	Decl							char	char *	ee
ANR	3173497	DeclStmt									
ANR	3173498	Decl							char	char *	tmp
ANR	3173499	DeclStmt									
ANR	3173500	Decl							char	char *	param_name
ANR	3173501	DeclStmt									
ANR	3173502	Decl							char	char *	charset
ANR	3173503	DeclStmt									
ANR	3173504	Decl							enum mbfl_no_encoding	enum mbfl_no_encoding	_tran_cs
ANR	3173505	DeclStmt									
ANR	3173506	Decl							enum mbfl_no_encoding	enum mbfl_no_encoding	_body_enc
ANR	3173507	DeclStmt									
ANR	3173508	Decl							const mbfl_encoding	const mbfl_encoding *	encoding
ANR	3173509	DeclStmt									
ANR	3173510	Decl							const mbfl_encoding	const mbfl_encoding *	encoding
ANR	3173511	DeclStmt									
ANR	3173512	Decl							mbfl_string	mbfl_string	tmpstr
ANR	3173513	DeclStmt									
ANR	3173514	Decl							char	char *	typ
ANR	3173515	DeclStmt									
ANR	3173516	Decl							size_t	size_t	typ_len
ANR	3173517	DeclStmt									
ANR	3173518	Decl							size_t	size_t	n
ANR	3173519	DeclStmt									
ANR	3173520	Decl							char	char *	name
ANR	3173521	DeclStmt									
ANR	3173522	Decl							const struct mb_overload_def	const struct mb_overload_def *	over_func
ANR	3173523	DeclStmt									
ANR	3173524	Decl							zval	zval	row1
ANR	3173525	Decl							zval	zval	row2
ANR	3173526	DeclStmt									
ANR	3173527	Decl							const mbfl_language	const mbfl_language *	lang
ANR	3173528	DeclStmt									
ANR	3173529	Decl							const mbfl_encoding	const mbfl_encoding * *	entry
ANR	3173530	DeclStmt									
ANR	3173531	Decl							size_t	size_t	i
ANR	3173532	DeclStmt									
ANR	3173533	Decl							size_t	size_t	i
ANR	3173534	DeclStmt									
ANR	3173535	Decl							char	char *	var
ANR	3173536	DeclStmt									
ANR	3173537	Decl							size_t	size_t	var_len
ANR	3173538	DeclStmt									
ANR	3173539	Decl							char	char *	enc
ANR	3173540	DeclStmt									
ANR	3173541	Decl							size_t	size_t	enc_len
ANR	3173542	DeclStmt									
ANR	3173543	Decl							mbfl_buffer_converter	mbfl_buffer_converter *	convd
ANR	3173544	DeclStmt									
ANR	3173545	Decl							const mbfl_encoding	const mbfl_encoding *	encoding
ANR	3173546	DeclStmt									
ANR	3173547	Decl							mbfl_string	mbfl_string	string
ANR	3173548	Decl							mbfl_string	mbfl_string	result
ANR	3173549	Decl							mbfl_string	mbfl_string *	ret
ANR	3173550	DeclStmt									
ANR	3173551	Decl							long	long	illegalchars
ANR	3173552	Function	php_mb_populate_current_detect_order_list	4562:0:130923:131781							
ANR	3173553	FunctionDef	php_mb_populate_current_detect_order_list ()		3173552	0					
ANR	3173554	CompoundStatement		4563:0:130983:131781	3173552	0					
ANR	3173555	IdentifierDeclStatement	const mbfl_encoding * * entry = 0 ;	4564:1:130986:131017	3173552	0	True				
ANR	3173556	IdentifierDecl	* * entry = 0		3173552	0					
ANR	3173557	IdentifierDeclType	const mbfl_encoding * *		3173552	0					
ANR	3173558	Identifier	entry		3173552	1					
ANR	3173559	AssignmentExpression	* * entry = 0		3173552	2		=			
ANR	3173560	Identifier	entry		3173552	0					
ANR	3173561	PrimaryExpression	0		3173552	1					
ANR	3173562	IdentifierDeclStatement	size_t nentries ;	4565:1:131020:131035	3173552	1	True				
ANR	3173563	IdentifierDecl	nentries		3173552	0					
ANR	3173564	IdentifierDeclType	size_t		3173552	0					
ANR	3173565	Identifier	nentries		3173552	1					
ANR	3173566	IfStatement	if ( MBSTRG ( current_detect_order_list ) )		3173552	2					
ANR	3173567	Condition	MBSTRG ( current_detect_order_list )	4567:5:131043:131075	3173552	0	True				
ANR	3173568	CallExpression	MBSTRG ( current_detect_order_list )		3173552	0					
ANR	3173569	Callee	MBSTRG		3173552	0					
ANR	3173570	Identifier	MBSTRG		3173552	0					
ANR	3173571	ArgumentList	current_detect_order_list		3173552	1					
ANR	3173572	Argument	current_detect_order_list		3173552	0					
ANR	3173573	Identifier	current_detect_order_list		3173552	0					
ANR	3173574	CompoundStatement		5:40:94:94	3173552	1					
ANR	3173575	ReturnStatement	return ;	4568:2:131082:131088	3173552	0	True				
ANR	3173576	IfStatement	if ( MBSTRG ( detect_order_list ) && MBSTRG ( detect_order_list_size ) )		3173552	3					
ANR	3173577	Condition	MBSTRG ( detect_order_list ) && MBSTRG ( detect_order_list_size )	4571:5:131099:131157	3173552	0	True				
ANR	3173578	AndExpression	MBSTRG ( detect_order_list ) && MBSTRG ( detect_order_list_size )		3173552	0		&&			
ANR	3173579	CallExpression	MBSTRG ( detect_order_list )		3173552	0					
ANR	3173580	Callee	MBSTRG		3173552	0					
ANR	3173581	Identifier	MBSTRG		3173552	0					
ANR	3173582	ArgumentList	detect_order_list		3173552	1					
ANR	3173583	Argument	detect_order_list		3173552	0					
ANR	3173584	Identifier	detect_order_list		3173552	0					
ANR	3173585	CallExpression	MBSTRG ( detect_order_list_size )		3173552	1					
ANR	3173586	Callee	MBSTRG		3173552	0					
ANR	3173587	Identifier	MBSTRG		3173552	0					
ANR	3173588	ArgumentList	detect_order_list_size		3173552	1					
ANR	3173589	Argument	detect_order_list_size		3173552	0					
ANR	3173590	Identifier	detect_order_list_size		3173552	0					
ANR	3173591	CompoundStatement		9:66:176:176	3173552	1					
ANR	3173592	ExpressionStatement	nentries = MBSTRG ( detect_order_list_size )	4572:2:131164:131205	3173552	0	True				
ANR	3173593	AssignmentExpression	nentries = MBSTRG ( detect_order_list_size )		3173552	0		=			
ANR	3173594	Identifier	nentries		3173552	0					
ANR	3173595	CallExpression	MBSTRG ( detect_order_list_size )		3173552	1					
ANR	3173596	Callee	MBSTRG		3173552	0					
ANR	3173597	Identifier	MBSTRG		3173552	0					
ANR	3173598	ArgumentList	detect_order_list_size		3173552	1					
ANR	3173599	Argument	detect_order_list_size		3173552	0					
ANR	3173600	Identifier	detect_order_list_size		3173552	0					
ANR	3173601	ExpressionStatement	"entry = ( const mbfl_encoding * * ) safe_emalloc ( nentries , sizeof ( mbfl_encoding * ) , 0 )"	4573:2:131209:131290	3173552	1	True				
ANR	3173602	AssignmentExpression	"entry = ( const mbfl_encoding * * ) safe_emalloc ( nentries , sizeof ( mbfl_encoding * ) , 0 )"		3173552	0		=			
ANR	3173603	Identifier	entry		3173552	0					
ANR	3173604	CastExpression	"( const mbfl_encoding * * ) safe_emalloc ( nentries , sizeof ( mbfl_encoding * ) , 0 )"		3173552	1					
ANR	3173605	CastTarget	const mbfl_encoding * *		3173552	0					
ANR	3173606	CallExpression	"safe_emalloc ( nentries , sizeof ( mbfl_encoding * ) , 0 )"		3173552	1					
ANR	3173607	Callee	safe_emalloc		3173552	0					
ANR	3173608	Identifier	safe_emalloc		3173552	0					
ANR	3173609	ArgumentList	nentries		3173552	1					
ANR	3173610	Argument	nentries		3173552	0					
ANR	3173611	Identifier	nentries		3173552	0					
ANR	3173612	Argument	sizeof ( mbfl_encoding * )		3173552	1					
ANR	3173613	SizeofExpression	sizeof ( mbfl_encoding * )		3173552	0					
ANR	3173614	Sizeof	sizeof		3173552	0					
ANR	3173615	SizeofOperand	mbfl_encoding *		3173552	1					
ANR	3173616	Argument	0		3173552	2					
ANR	3173617	PrimaryExpression	0		3173552	0					
ANR	3173618	ExpressionStatement	"memcpy ( entry , MBSTRG ( detect_order_list ) , sizeof ( mbfl_encoding * ) * nentries )"	4574:2:131294:131369	3173552	2	True				
ANR	3173619	CallExpression	"memcpy ( entry , MBSTRG ( detect_order_list ) , sizeof ( mbfl_encoding * ) * nentries )"		3173552	0					
ANR	3173620	Callee	memcpy		3173552	0					
ANR	3173621	Identifier	memcpy		3173552	0					
ANR	3173622	ArgumentList	entry		3173552	1					
ANR	3173623	Argument	entry		3173552	0					
ANR	3173624	Identifier	entry		3173552	0					
ANR	3173625	Argument	MBSTRG ( detect_order_list )		3173552	1					
ANR	3173626	CallExpression	MBSTRG ( detect_order_list )		3173552	0					
ANR	3173627	Callee	MBSTRG		3173552	0					
ANR	3173628	Identifier	MBSTRG		3173552	0					
ANR	3173629	ArgumentList	detect_order_list		3173552	1					
ANR	3173630	Argument	detect_order_list		3173552	0					
ANR	3173631	Identifier	detect_order_list		3173552	0					
ANR	3173632	Argument	sizeof ( mbfl_encoding * ) * nentries		3173552	2					
ANR	3173633	MultiplicativeExpression	sizeof ( mbfl_encoding * ) * nentries		3173552	0		*			
ANR	3173634	SizeofExpression	sizeof ( mbfl_encoding * )		3173552	0					
ANR	3173635	Sizeof	sizeof		3173552	0					
ANR	3173636	SizeofOperand	mbfl_encoding *		3173552	1					
ANR	3173637	Identifier	nentries		3173552	1					
ANR	3173638	ElseStatement	else		3173552	0					
ANR	3173639	CompoundStatement		15:2:471:479	3173552	0					
ANR	3173640	IdentifierDeclStatement	const enum mbfl_no_encoding * src = MBSTRG ( default_detect_order_list ) ;	4576:2:131383:131451	3173552	0	True				
ANR	3173641	IdentifierDecl	* src = MBSTRG ( default_detect_order_list )		3173552	0					
ANR	3173642	IdentifierDeclType	const enum mbfl_no_encoding *		3173552	0					
ANR	3173643	Identifier	src		3173552	1					
ANR	3173644	AssignmentExpression	* src = MBSTRG ( default_detect_order_list )		3173552	2		=			
ANR	3173645	Identifier	src		3173552	0					
ANR	3173646	CallExpression	MBSTRG ( default_detect_order_list )		3173552	1					
ANR	3173647	Callee	MBSTRG		3173552	0					
ANR	3173648	Identifier	MBSTRG		3173552	0					
ANR	3173649	ArgumentList	default_detect_order_list		3173552	1					
ANR	3173650	Argument	default_detect_order_list		3173552	0					
ANR	3173651	Identifier	default_detect_order_list		3173552	0					
ANR	3173652	IdentifierDeclStatement	size_t i ;	4577:2:131455:131463	3173552	1	True				
ANR	3173653	IdentifierDecl	i		3173552	0					
ANR	3173654	IdentifierDeclType	size_t		3173552	0					
ANR	3173655	Identifier	i		3173552	1					
ANR	3173656	ExpressionStatement	nentries = MBSTRG ( default_detect_order_list_size )	4578:2:131467:131516	3173552	2	True				
ANR	3173657	AssignmentExpression	nentries = MBSTRG ( default_detect_order_list_size )		3173552	0		=			
ANR	3173658	Identifier	nentries		3173552	0					
ANR	3173659	CallExpression	MBSTRG ( default_detect_order_list_size )		3173552	1					
ANR	3173660	Callee	MBSTRG		3173552	0					
ANR	3173661	Identifier	MBSTRG		3173552	0					
ANR	3173662	ArgumentList	default_detect_order_list_size		3173552	1					
ANR	3173663	Argument	default_detect_order_list_size		3173552	0					
ANR	3173664	Identifier	default_detect_order_list_size		3173552	0					
ANR	3173665	ExpressionStatement	"entry = ( const mbfl_encoding * * ) safe_emalloc ( nentries , sizeof ( mbfl_encoding * ) , 0 )"	4579:2:131520:131601	3173552	3	True				
ANR	3173666	AssignmentExpression	"entry = ( const mbfl_encoding * * ) safe_emalloc ( nentries , sizeof ( mbfl_encoding * ) , 0 )"		3173552	0		=			
ANR	3173667	Identifier	entry		3173552	0					
ANR	3173668	CastExpression	"( const mbfl_encoding * * ) safe_emalloc ( nentries , sizeof ( mbfl_encoding * ) , 0 )"		3173552	1					
ANR	3173669	CastTarget	const mbfl_encoding * *		3173552	0					
ANR	3173670	CallExpression	"safe_emalloc ( nentries , sizeof ( mbfl_encoding * ) , 0 )"		3173552	1					
ANR	3173671	Callee	safe_emalloc		3173552	0					
ANR	3173672	Identifier	safe_emalloc		3173552	0					
ANR	3173673	ArgumentList	nentries		3173552	1					
ANR	3173674	Argument	nentries		3173552	0					
ANR	3173675	Identifier	nentries		3173552	0					
ANR	3173676	Argument	sizeof ( mbfl_encoding * )		3173552	1					
ANR	3173677	SizeofExpression	sizeof ( mbfl_encoding * )		3173552	0					
ANR	3173678	Sizeof	sizeof		3173552	0					
ANR	3173679	SizeofOperand	mbfl_encoding *		3173552	1					
ANR	3173680	Argument	0		3173552	2					
ANR	3173681	PrimaryExpression	0		3173552	0					
ANR	3173682	ForStatement	for ( i = 0 ; i < nentries ; i ++ )		3173552	4					
ANR	3173683	ForInit	i = 0 ;	4580:7:131610:131615	3173552	0	True				
ANR	3173684	AssignmentExpression	i = 0		3173552	0		=			
ANR	3173685	Identifier	i		3173552	0					
ANR	3173686	PrimaryExpression	0		3173552	1					
ANR	3173687	Condition	i < nentries	4580:14:131617:131628	3173552	1	True				
ANR	3173688	RelationalExpression	i < nentries		3173552	0		<			
ANR	3173689	Identifier	i		3173552	0					
ANR	3173690	Identifier	nentries		3173552	1					
ANR	3173691	PostIncDecOperationExpression	i ++	4580:28:131631:131633	3173552	2	True				
ANR	3173692	Identifier	i		3173552	0					
ANR	3173693	IncDec	++		3173552	1					
ANR	3173694	CompoundStatement		18:33:652:652	3173552	3					
ANR	3173695	ExpressionStatement	entry [ i ] = mbfl_no2encoding ( src [ i ] )	4581:3:131641:131676	3173552	0	True				
ANR	3173696	AssignmentExpression	entry [ i ] = mbfl_no2encoding ( src [ i ] )		3173552	0		=			
ANR	3173697	ArrayIndexing	entry [ i ]		3173552	0					
ANR	3173698	Identifier	entry		3173552	0					
ANR	3173699	Identifier	i		3173552	1					
ANR	3173700	CallExpression	mbfl_no2encoding ( src [ i ] )		3173552	1					
ANR	3173701	Callee	mbfl_no2encoding		3173552	0					
ANR	3173702	Identifier	mbfl_no2encoding		3173552	0					
ANR	3173703	ArgumentList	src [ i ]		3173552	1					
ANR	3173704	Argument	src [ i ]		3173552	0					
ANR	3173705	ArrayIndexing	src [ i ]		3173552	0					
ANR	3173706	Identifier	src		3173552	0					
ANR	3173707	Identifier	i		3173552	1					
ANR	3173708	ExpressionStatement	MBSTRG ( current_detect_order_list ) = entry	4584:1:131686:131727	3173552	4	True				
ANR	3173709	AssignmentExpression	MBSTRG ( current_detect_order_list ) = entry		3173552	0		=			
ANR	3173710	CallExpression	MBSTRG ( current_detect_order_list )		3173552	0					
ANR	3173711	Callee	MBSTRG		3173552	0					
ANR	3173712	Identifier	MBSTRG		3173552	0					
ANR	3173713	ArgumentList	current_detect_order_list		3173552	1					
ANR	3173714	Argument	current_detect_order_list		3173552	0					
ANR	3173715	Identifier	current_detect_order_list		3173552	0					
ANR	3173716	Identifier	entry		3173552	1					
ANR	3173717	ExpressionStatement	MBSTRG ( current_detect_order_list_size ) = nentries	4585:1:131730:131779	3173552	5	True				
ANR	3173718	AssignmentExpression	MBSTRG ( current_detect_order_list_size ) = nentries		3173552	0		=			
ANR	3173719	CallExpression	MBSTRG ( current_detect_order_list_size )		3173552	0					
ANR	3173720	Callee	MBSTRG		3173552	0					
ANR	3173721	Identifier	MBSTRG		3173552	0					
ANR	3173722	ArgumentList	current_detect_order_list_size		3173552	1					
ANR	3173723	Argument	current_detect_order_list_size		3173552	0					
ANR	3173724	Identifier	current_detect_order_list_size		3173552	0					
ANR	3173725	Identifier	nentries		3173552	1					
ANR	3173726	ReturnType	static void		3173552	1					
ANR	3173727	Identifier	php_mb_populate_current_detect_order_list		3173552	2					
ANR	3173728	ParameterList			3173552	3					
ANR	3173729	CFGEntryNode	ENTRY		3173552		True				
ANR	3173730	CFGExitNode	EXIT		3173552		True				
ANR	3173731	Symbol	detect_order_list_size		3173552						
ANR	3173732	Symbol	nentries		3173552						
ANR	3173733	Symbol	MBSTRG		3173552						
ANR	3173734	Symbol	detect_order_list		3173552						
ANR	3173735	Symbol	src		3173552						
ANR	3173736	Symbol	mbfl_no2encoding		3173552						
ANR	3173737	Symbol	i		3173552						
ANR	3173738	Symbol	default_detect_order_list_size		3173552						
ANR	3173739	Symbol	* src		3173552						
ANR	3173740	Symbol	entry		3173552						
ANR	3173741	Symbol	default_detect_order_list		3173552						
ANR	3173742	Symbol	current_detect_order_list_size		3173552						
ANR	3173743	Symbol	* i		3173552						
ANR	3173744	Symbol	current_detect_order_list		3173552						
ANR	3173745	Symbol	safe_emalloc		3173552						
ANR	3173746	Symbol	* entry		3173552						
ANR	3173747	Function	php_mb_encoding_translation	4590:0:131845:131930							
ANR	3173748	FunctionDef	php_mb_encoding_translation ()		3173747	0					
ANR	3173749	CompoundStatement		4591:0:131890:131930	3173747	0					
ANR	3173750	ReturnStatement	return MBSTRG ( encoding_translation ) ;	4592:1:131893:131928	3173747	0	True				
ANR	3173751	CallExpression	MBSTRG ( encoding_translation )		3173747	0					
ANR	3173752	Callee	MBSTRG		3173747	0					
ANR	3173753	Identifier	MBSTRG		3173747	0					
ANR	3173754	ArgumentList	encoding_translation		3173747	1					
ANR	3173755	Argument	encoding_translation		3173747	0					
ANR	3173756	Identifier	encoding_translation		3173747	0					
ANR	3173757	ReturnType	static int		3173747	1					
ANR	3173758	Identifier	php_mb_encoding_translation		3173747	2					
ANR	3173759	ParameterList			3173747	3					
ANR	3173760	CFGEntryNode	ENTRY		3173747		True				
ANR	3173761	CFGExitNode	EXIT		3173747		True				
ANR	3173762	Symbol	encoding_translation		3173747						
ANR	3173763	Symbol	MBSTRG		3173747						
ANR	3173764	Function	php_mb_mbchar_bytes_ex	4597:0:131998:132436							
ANR	3173765	FunctionDef	"php_mb_mbchar_bytes_ex (const char * s , const mbfl_encoding * enc)"		3173764	0					
ANR	3173766	CompoundStatement		4598:0:132082:132436	3173764	0					
ANR	3173767	IfStatement	if ( enc != NULL )		3173764	0					
ANR	3173768	Condition	enc != NULL	4599:5:132089:132099	3173764	0	True				
ANR	3173769	EqualityExpression	enc != NULL		3173764	0		!=			
ANR	3173770	Identifier	enc		3173764	0					
ANR	3173771	Identifier	NULL		3173764	1					
ANR	3173772	CompoundStatement		2:18:19:19	3173764	1					
ANR	3173773	IfStatement	if ( enc -> flag & MBFL_ENCTYPE_MBCS )		3173764	0					
ANR	3173774	Condition	enc -> flag & MBFL_ENCTYPE_MBCS	4600:6:132110:132138	3173764	0	True				
ANR	3173775	BitAndExpression	enc -> flag & MBFL_ENCTYPE_MBCS		3173764	0		&			
ANR	3173776	PtrMemberAccess	enc -> flag		3173764	0					
ANR	3173777	Identifier	enc		3173764	0					
ANR	3173778	Identifier	flag		3173764	1					
ANR	3173779	Identifier	MBFL_ENCTYPE_MBCS		3173764	1					
ANR	3173780	CompoundStatement		3:37:58:58	3173764	1					
ANR	3173781	IfStatement	if ( enc -> mblen_table != NULL )		3173764	0					
ANR	3173782	Condition	enc -> mblen_table != NULL	4601:7:132150:132173	3173764	0	True				
ANR	3173783	EqualityExpression	enc -> mblen_table != NULL		3173764	0		!=			
ANR	3173784	PtrMemberAccess	enc -> mblen_table		3173764	0					
ANR	3173785	Identifier	enc		3173764	0					
ANR	3173786	Identifier	mblen_table		3173764	1					
ANR	3173787	Identifier	NULL		3173764	1					
ANR	3173788	CompoundStatement		4:33:93:93	3173764	1					
ANR	3173789	IfStatement	if ( s != NULL )		3173764	0					
ANR	3173790	Condition	s != NULL	4602:8:132186:132194	3173764	0	True				
ANR	3173791	EqualityExpression	s != NULL		3173764	0		!=			
ANR	3173792	Identifier	s		3173764	0					
ANR	3173793	Identifier	NULL		3173764	1					
ANR	3173794	ReturnStatement	return enc -> mblen_table [ * ( unsigned char * ) s ] ;	4602:19:132197:132241	3173764	1	True				
ANR	3173795	ArrayIndexing	enc -> mblen_table [ * ( unsigned char * ) s ]		3173764	0					
ANR	3173796	PtrMemberAccess	enc -> mblen_table		3173764	0					
ANR	3173797	Identifier	enc		3173764	0					
ANR	3173798	Identifier	mblen_table		3173764	1					
ANR	3173799	UnaryOperationExpression	* ( unsigned char * ) s		3173764	1					
ANR	3173800	UnaryOperator	*		3173764	0					
ANR	3173801	CastExpression	( unsigned char * ) s		3173764	1					
ANR	3173802	CastTarget	unsigned char *		3173764	0					
ANR	3173803	Identifier	s		3173764	1					
ANR	3173804	ElseStatement	else		3173764	0					
ANR	3173805	IfStatement	if ( enc -> flag & ( MBFL_ENCTYPE_WCS2BE | MBFL_ENCTYPE_WCS2LE ) )		3173764	0					
ANR	3173806	Condition	enc -> flag & ( MBFL_ENCTYPE_WCS2BE | MBFL_ENCTYPE_WCS2LE )	4604:13:132261:132315	3173764	0	True				
ANR	3173807	BitAndExpression	enc -> flag & ( MBFL_ENCTYPE_WCS2BE | MBFL_ENCTYPE_WCS2LE )		3173764	0		&			
ANR	3173808	PtrMemberAccess	enc -> flag		3173764	0					
ANR	3173809	Identifier	enc		3173764	0					
ANR	3173810	Identifier	flag		3173764	1					
ANR	3173811	InclusiveOrExpression	MBFL_ENCTYPE_WCS2BE | MBFL_ENCTYPE_WCS2LE		3173764	1		|			
ANR	3173812	Identifier	MBFL_ENCTYPE_WCS2BE		3173764	0					
ANR	3173813	Identifier	MBFL_ENCTYPE_WCS2LE		3173764	1					
ANR	3173814	CompoundStatement		7:70:235:235	3173764	1					
ANR	3173815	ReturnStatement	return 2 ;	4605:3:132323:132331	3173764	0	True				
ANR	3173816	PrimaryExpression	2		3173764	0					
ANR	3173817	ElseStatement	else		3173764	0					
ANR	3173818	IfStatement	if ( enc -> flag & ( MBFL_ENCTYPE_WCS4BE | MBFL_ENCTYPE_WCS4LE ) )		3173764	0					
ANR	3173819	Condition	enc -> flag & ( MBFL_ENCTYPE_WCS4BE | MBFL_ENCTYPE_WCS4LE )	4606:13:132346:132400	3173764	0	True				
ANR	3173820	BitAndExpression	enc -> flag & ( MBFL_ENCTYPE_WCS4BE | MBFL_ENCTYPE_WCS4LE )		3173764	0		&			
ANR	3173821	PtrMemberAccess	enc -> flag		3173764	0					
ANR	3173822	Identifier	enc		3173764	0					
ANR	3173823	Identifier	flag		3173764	1					
ANR	3173824	InclusiveOrExpression	MBFL_ENCTYPE_WCS4BE | MBFL_ENCTYPE_WCS4LE		3173764	1		|			
ANR	3173825	Identifier	MBFL_ENCTYPE_WCS4BE		3173764	0					
ANR	3173826	Identifier	MBFL_ENCTYPE_WCS4LE		3173764	1					
ANR	3173827	CompoundStatement		9:70:320:320	3173764	1					
ANR	3173828	ReturnStatement	return 4 ;	4607:3:132408:132416	3173764	0	True				
ANR	3173829	PrimaryExpression	4		3173764	0					
ANR	3173830	ReturnStatement	return 1 ;	4610:1:132426:132434	3173764	1	True				
ANR	3173831	PrimaryExpression	1		3173764	0					
ANR	3173832	ReturnType	MBSTRING_API size_t		3173764	1					
ANR	3173833	Identifier	php_mb_mbchar_bytes_ex		3173764	2					
ANR	3173834	ParameterList	"const char * s , const mbfl_encoding * enc"		3173764	3					
ANR	3173835	Parameter	const char * s	4597:43:132041:132053	3173764	0	True				
ANR	3173836	ParameterType	const char *		3173764	0					
ANR	3173837	Identifier	s		3173764	1					
ANR	3173838	Parameter	const mbfl_encoding * enc	4597:58:132056:132079	3173764	1	True				
ANR	3173839	ParameterType	const mbfl_encoding *		3173764	0					
ANR	3173840	Identifier	enc		3173764	1					
ANR	3173841	CFGEntryNode	ENTRY		3173764		True				
ANR	3173842	CFGExitNode	EXIT		3173764		True				
ANR	3173843	Symbol	MBFL_ENCTYPE_WCS2BE		3173764						
ANR	3173844	Symbol	MBFL_ENCTYPE_WCS4BE		3173764						
ANR	3173845	Symbol	NULL		3173764						
ANR	3173846	Symbol	enc -> flag		3173764						
ANR	3173847	Symbol	* enc -> mblen_table		3173764						
ANR	3173848	Symbol	MBFL_ENCTYPE_WCS4LE		3173764						
ANR	3173849	Symbol	MBFL_ENCTYPE_MBCS		3173764						
ANR	3173850	Symbol	* ( unsigned char * ) s		3173764						
ANR	3173851	Symbol	* * enc		3173764						
ANR	3173852	Symbol	MBFL_ENCTYPE_WCS2LE		3173764						
ANR	3173853	Symbol	* * ( unsigned char * ) s		3173764						
ANR	3173854	Symbol	s		3173764						
ANR	3173855	Symbol	* * s		3173764						
ANR	3173856	Symbol	enc		3173764						
ANR	3173857	Symbol	* enc		3173764						
ANR	3173858	Symbol	enc -> mblen_table		3173764						
ANR	3173859	Symbol	* s		3173764						
ANR	3173860	Function	php_mb_mbchar_bytes	4615:0:132501:132620							
ANR	3173861	FunctionDef	php_mb_mbchar_bytes (const char * s)		3173860	0					
ANR	3173862	CompoundStatement		4616:0:132556:132620	3173860	0					
ANR	3173863	ReturnStatement	"return php_mb_mbchar_bytes_ex ( s , MBSTRG ( internal_encoding ) ) ;"	4617:1:132559:132618	3173860	0	True				
ANR	3173864	CallExpression	"php_mb_mbchar_bytes_ex ( s , MBSTRG ( internal_encoding ) )"		3173860	0					
ANR	3173865	Callee	php_mb_mbchar_bytes_ex		3173860	0					
ANR	3173866	Identifier	php_mb_mbchar_bytes_ex		3173860	0					
ANR	3173867	ArgumentList	s		3173860	1					
ANR	3173868	Argument	s		3173860	0					
ANR	3173869	Identifier	s		3173860	0					
ANR	3173870	Argument	MBSTRG ( internal_encoding )		3173860	1					
ANR	3173871	CallExpression	MBSTRG ( internal_encoding )		3173860	0					
ANR	3173872	Callee	MBSTRG		3173860	0					
ANR	3173873	Identifier	MBSTRG		3173860	0					
ANR	3173874	ArgumentList	internal_encoding		3173860	1					
ANR	3173875	Argument	internal_encoding		3173860	0					
ANR	3173876	Identifier	internal_encoding		3173860	0					
ANR	3173877	ReturnType	MBSTRING_API size_t		3173860	1					
ANR	3173878	Identifier	php_mb_mbchar_bytes		3173860	2					
ANR	3173879	ParameterList	const char * s		3173860	3					
ANR	3173880	Parameter	const char * s	4615:40:132541:132553	3173860	0	True				
ANR	3173881	ParameterType	const char *		3173860	0					
ANR	3173882	Identifier	s		3173860	1					
ANR	3173883	CFGEntryNode	ENTRY		3173860		True				
ANR	3173884	CFGExitNode	EXIT		3173860		True				
ANR	3173885	Symbol	php_mb_mbchar_bytes_ex		3173860						
ANR	3173886	Symbol	s		3173860						
ANR	3173887	Symbol	MBSTRG		3173860						
ANR	3173888	Symbol	internal_encoding		3173860						
ANR	3173889	Function	php_mb_safe_strrchr_ex	4622:0:132687:133495							
ANR	3173890	FunctionDef	"php_mb_safe_strrchr_ex (const char * s , unsigned int c , size_t nbytes , const mbfl_encoding * enc)"		3173889	0					
ANR	3173891	CompoundStatement		4623:0:132801:133495	3173889	0					
ANR	3173892	Statement	register	4624:1:132804:132811	3173889	0	True				
ANR	3173893	IdentifierDeclStatement	const char * p = s ;	4624:10:132813:132830	3173889	1	True				
ANR	3173894	IdentifierDecl	* p = s		3173889	0					
ANR	3173895	IdentifierDeclType	const char *		3173889	0					
ANR	3173896	Identifier	p		3173889	1					
ANR	3173897	AssignmentExpression	* p = s		3173889	2		=			
ANR	3173898	Identifier	s		3173889	0					
ANR	3173899	Identifier	s		3173889	1					
ANR	3173900	IdentifierDeclStatement	char * last = NULL ;	4625:1:132833:132848	3173889	2	True				
ANR	3173901	IdentifierDecl	* last = NULL		3173889	0					
ANR	3173902	IdentifierDeclType	char *		3173889	0					
ANR	3173903	Identifier	last		3173889	1					
ANR	3173904	AssignmentExpression	* last = NULL		3173889	2		=			
ANR	3173905	Identifier	NULL		3173889	0					
ANR	3173906	Identifier	NULL		3173889	1					
ANR	3173907	IfStatement	if ( nbytes == ( size_t ) - 1 )		3173889	3					
ANR	3173908	Condition	nbytes == ( size_t ) - 1	4627:5:132856:132875	3173889	0	True				
ANR	3173909	EqualityExpression	nbytes == ( size_t ) - 1		3173889	0		==			
ANR	3173910	Identifier	nbytes		3173889	0					
ANR	3173911	CastExpression	( size_t ) - 1		3173889	1					
ANR	3173912	CastTarget	size_t		3173889	0					
ANR	3173913	UnaryOperationExpression	- 1		3173889	1					
ANR	3173914	UnaryOperator	-		3173889	0					
ANR	3173915	PrimaryExpression	1		3173889	1					
ANR	3173916	CompoundStatement		6:2:80:93	3173889	1					
ANR	3173917	IdentifierDeclStatement	size_t nb = 0 ;	4628:2:132882:132895	3173889	0	True				
ANR	3173918	IdentifierDecl	nb = 0		3173889	0					
ANR	3173919	IdentifierDeclType	size_t		3173889	0					
ANR	3173920	Identifier	nb		3173889	1					
ANR	3173921	AssignmentExpression	nb = 0		3173889	2		=			
ANR	3173922	Identifier	nb		3173889	0					
ANR	3173923	PrimaryExpression	0		3173889	1					
ANR	3173924	WhileStatement	while ( * p != '\\0' )		3173889	1					
ANR	3173925	Condition	* p != '\\0'	4630:9:132907:132916	3173889	0	True				
ANR	3173926	EqualityExpression	* p != '\\0'		3173889	0		!=			
ANR	3173927	UnaryOperationExpression	* p		3173889	0					
ANR	3173928	UnaryOperator	*		3173889	0					
ANR	3173929	Identifier	p		3173889	1					
ANR	3173930	PrimaryExpression	'\\0'		3173889	1					
ANR	3173931	CompoundStatement		8:21:117:117	3173889	1					
ANR	3173932	IfStatement	if ( nb == 0 )		3173889	0					
ANR	3173933	Condition	nb == 0	4631:7:132928:132934	3173889	0	True				
ANR	3173934	EqualityExpression	nb == 0		3173889	0		==			
ANR	3173935	Identifier	nb		3173889	0					
ANR	3173936	PrimaryExpression	0		3173889	1					
ANR	3173937	CompoundStatement		9:16:135:135	3173889	1					
ANR	3173938	IfStatement	if ( ( unsigned char ) * p == ( unsigned char ) c )		3173889	0					
ANR	3173939	Condition	( unsigned char ) * p == ( unsigned char ) c	4632:8:132947:132983	3173889	0	True				
ANR	3173940	EqualityExpression	( unsigned char ) * p == ( unsigned char ) c		3173889	0		==			
ANR	3173941	CastExpression	( unsigned char ) * p		3173889	0					
ANR	3173942	CastTarget	unsigned char		3173889	0					
ANR	3173943	UnaryOperationExpression	* p		3173889	1					
ANR	3173944	UnaryOperator	*		3173889	0					
ANR	3173945	Identifier	p		3173889	1					
ANR	3173946	CastExpression	( unsigned char ) c		3173889	1					
ANR	3173947	CastTarget	unsigned char		3173889	0					
ANR	3173948	Identifier	c		3173889	1					
ANR	3173949	CompoundStatement		10:47:184:184	3173889	1					
ANR	3173950	ExpressionStatement	last = ( char * ) p	4633:5:132993:133009	3173889	0	True				
ANR	3173951	AssignmentExpression	last = ( char * ) p		3173889	0		=			
ANR	3173952	Identifier	last		3173889	0					
ANR	3173953	CastExpression	( char * ) p		3173889	1					
ANR	3173954	CastTarget	char *		3173889	0					
ANR	3173955	Identifier	p		3173889	1					
ANR	3173956	ExpressionStatement	"nb = php_mb_mbchar_bytes_ex ( p , enc )"	4635:4:133021:133056	3173889	1	True				
ANR	3173957	AssignmentExpression	"nb = php_mb_mbchar_bytes_ex ( p , enc )"		3173889	0		=			
ANR	3173958	Identifier	nb		3173889	0					
ANR	3173959	CallExpression	"php_mb_mbchar_bytes_ex ( p , enc )"		3173889	1					
ANR	3173960	Callee	php_mb_mbchar_bytes_ex		3173889	0					
ANR	3173961	Identifier	php_mb_mbchar_bytes_ex		3173889	0					
ANR	3173962	ArgumentList	p		3173889	1					
ANR	3173963	Argument	p		3173889	0					
ANR	3173964	Identifier	p		3173889	0					
ANR	3173965	Argument	enc		3173889	1					
ANR	3173966	Identifier	enc		3173889	0					
ANR	3173967	IfStatement	if ( nb == 0 )		3173889	2					
ANR	3173968	Condition	nb == 0	4636:8:133066:133072	3173889	0	True				
ANR	3173969	EqualityExpression	nb == 0		3173889	0		==			
ANR	3173970	Identifier	nb		3173889	0					
ANR	3173971	PrimaryExpression	0		3173889	1					
ANR	3173972	CompoundStatement		14:17:273:273	3173889	1					
ANR	3173973	ReturnStatement	return NULL ;	4637:5:133082:133093	3173889	0	True				
ANR	3173974	Identifier	NULL		3173889	0					
ANR	3173975	ExpressionStatement	-- nb	4640:3:133141:133145	3173889	1	True				
ANR	3173976	UnaryExpression	-- nb		3173889	0					
ANR	3173977	IncDec	--		3173889	0					
ANR	3173978	Identifier	nb		3173889	1					
ANR	3173979	ExpressionStatement	++ p	4641:3:133150:133153	3173889	2	True				
ANR	3173980	UnaryExpression	++ p		3173889	0					
ANR	3173981	IncDec	++		3173889	0					
ANR	3173982	Identifier	p		3173889	1					
ANR	3173983	ElseStatement	else		3173889	0					
ANR	3173984	CompoundStatement		23:11:411:429	3173889	0					
ANR	3173985	Statement	register	4644:2:133171:133178	3173889	0	True				
ANR	3173986	IdentifierDeclStatement	size_t bcnt = nbytes ;	4644:11:133180:133200	3173889	1	True				
ANR	3173987	IdentifierDecl	bcnt = nbytes		3173889	0					
ANR	3173988	IdentifierDeclType	size_t		3173889	0					
ANR	3173989	Identifier	bcnt		3173889	1					
ANR	3173990	AssignmentExpression	bcnt = nbytes		3173889	2		=			
ANR	3173991	Identifier	nbytes		3173889	0					
ANR	3173992	Identifier	nbytes		3173889	1					
ANR	3173993	Statement	register	4645:2:133204:133211	3173889	2	True				
ANR	3173994	IdentifierDeclStatement	size_t nbytes_char ;	4645:11:133213:133231	3173889	3	True				
ANR	3173995	IdentifierDecl	nbytes_char		3173889	0					
ANR	3173996	IdentifierDeclType	size_t		3173889	0					
ANR	3173997	Identifier	nbytes_char		3173889	1					
ANR	3173998	WhileStatement	while ( bcnt > 0 )		3173889	4					
ANR	3173999	Condition	bcnt > 0	4646:9:133242:133249	3173889	0	True				
ANR	3174000	RelationalExpression	bcnt > 0		3173889	0		>			
ANR	3174001	Identifier	bcnt		3173889	0					
ANR	3174002	PrimaryExpression	0		3173889	1					
ANR	3174003	CompoundStatement		24:19:450:450	3173889	1					
ANR	3174004	IfStatement	if ( ( unsigned char ) * p == ( unsigned char ) c )		3173889	0					
ANR	3174005	Condition	( unsigned char ) * p == ( unsigned char ) c	4647:7:133261:133297	3173889	0	True				
ANR	3174006	EqualityExpression	( unsigned char ) * p == ( unsigned char ) c		3173889	0		==			
ANR	3174007	CastExpression	( unsigned char ) * p		3173889	0					
ANR	3174008	CastTarget	unsigned char		3173889	0					
ANR	3174009	UnaryOperationExpression	* p		3173889	1					
ANR	3174010	UnaryOperator	*		3173889	0					
ANR	3174011	Identifier	p		3173889	1					
ANR	3174012	CastExpression	( unsigned char ) c		3173889	1					
ANR	3174013	CastTarget	unsigned char		3173889	0					
ANR	3174014	Identifier	c		3173889	1					
ANR	3174015	CompoundStatement		25:46:498:498	3173889	1					
ANR	3174016	ExpressionStatement	last = ( char * ) p	4648:4:133306:133322	3173889	0	True				
ANR	3174017	AssignmentExpression	last = ( char * ) p		3173889	0		=			
ANR	3174018	Identifier	last		3173889	0					
ANR	3174019	CastExpression	( char * ) p		3173889	1					
ANR	3174020	CastTarget	char *		3173889	0					
ANR	3174021	Identifier	p		3173889	1					
ANR	3174022	ExpressionStatement	"nbytes_char = php_mb_mbchar_bytes_ex ( p , enc )"	4650:3:133332:133376	3173889	1	True				
ANR	3174023	AssignmentExpression	"nbytes_char = php_mb_mbchar_bytes_ex ( p , enc )"		3173889	0		=			
ANR	3174024	Identifier	nbytes_char		3173889	0					
ANR	3174025	CallExpression	"php_mb_mbchar_bytes_ex ( p , enc )"		3173889	1					
ANR	3174026	Callee	php_mb_mbchar_bytes_ex		3173889	0					
ANR	3174027	Identifier	php_mb_mbchar_bytes_ex		3173889	0					
ANR	3174028	ArgumentList	p		3173889	1					
ANR	3174029	Argument	p		3173889	0					
ANR	3174030	Identifier	p		3173889	0					
ANR	3174031	Argument	enc		3173889	1					
ANR	3174032	Identifier	enc		3173889	0					
ANR	3174033	IfStatement	if ( bcnt < nbytes_char )		3173889	2					
ANR	3174034	Condition	bcnt < nbytes_char	4651:7:133385:133402	3173889	0	True				
ANR	3174035	RelationalExpression	bcnt < nbytes_char		3173889	0		<			
ANR	3174036	Identifier	bcnt		3173889	0					
ANR	3174037	Identifier	nbytes_char		3173889	1					
ANR	3174038	CompoundStatement		29:27:603:603	3173889	1					
ANR	3174039	ReturnStatement	return NULL ;	4652:4:133411:133422	3173889	0	True				
ANR	3174040	Identifier	NULL		3173889	0					
ANR	3174041	ExpressionStatement	p += nbytes_char	4654:3:133432:133448	3173889	3	True				
ANR	3174042	AssignmentExpression	p += nbytes_char		3173889	0		+=			
ANR	3174043	Identifier	p		3173889	0					
ANR	3174044	Identifier	nbytes_char		3173889	1					
ANR	3174045	ExpressionStatement	bcnt -= nbytes_char	4655:3:133453:133472	3173889	4	True				
ANR	3174046	AssignmentExpression	bcnt -= nbytes_char		3173889	0		-=			
ANR	3174047	Identifier	bcnt		3173889	0					
ANR	3174048	Identifier	nbytes_char		3173889	1					
ANR	3174049	ReturnStatement	return last ;	4658:1:133482:133493	3173889	4	True				
ANR	3174050	Identifier	last		3173889	0					
ANR	3174051	ReturnType	MBSTRING_API char *		3173889	1					
ANR	3174052	Identifier	php_mb_safe_strrchr_ex		3173889	2					
ANR	3174053	ParameterList	"const char * s , unsigned int c , size_t nbytes , const mbfl_encoding * enc"		3173889	3					
ANR	3174054	Parameter	const char * s	4622:42:132729:132741	3173889	0	True				
ANR	3174055	ParameterType	const char *		3173889	0					
ANR	3174056	Identifier	s		3173889	1					
ANR	3174057	Parameter	unsigned int c	4622:57:132744:132757	3173889	1	True				
ANR	3174058	ParameterType	unsigned int		3173889	0					
ANR	3174059	Identifier	c		3173889	1					
ANR	3174060	Parameter	size_t nbytes	4622:73:132760:132772	3173889	2	True				
ANR	3174061	ParameterType	size_t		3173889	0					
ANR	3174062	Identifier	nbytes		3173889	1					
ANR	3174063	Parameter	const mbfl_encoding * enc	4622:88:132775:132798	3173889	3	True				
ANR	3174064	ParameterType	const mbfl_encoding *		3173889	0					
ANR	3174065	Identifier	enc		3173889	1					
ANR	3174066	CFGEntryNode	ENTRY		3173889		True				
ANR	3174067	CFGExitNode	EXIT		3173889		True				
ANR	3174068	Symbol	p		3173889						
ANR	3174069	Symbol	php_mb_mbchar_bytes_ex		3173889						
ANR	3174070	Symbol	s		3173889						
ANR	3174071	Symbol	c		3173889						
ANR	3174072	Symbol	NULL		3173889						
ANR	3174073	Symbol	last		3173889						
ANR	3174074	Symbol	nb		3173889						
ANR	3174075	Symbol	nbytes_char		3173889						
ANR	3174076	Symbol	bcnt		3173889						
ANR	3174077	Symbol	* p		3173889						
ANR	3174078	Symbol	enc		3173889						
ANR	3174079	Symbol	nbytes		3173889						
ANR	3174080	Function	php_mb_safe_strrchr	4663:0:133559:133719							
ANR	3174081	FunctionDef	"php_mb_safe_strrchr (const char * s , unsigned int c , size_t nbytes)"		3174080	0					
ANR	3174082	CompoundStatement		4664:0:133644:133719	3174080	0					
ANR	3174083	ReturnStatement	"return php_mb_safe_strrchr_ex ( s , c , nbytes , MBSTRG ( internal_encoding ) ) ;"	4665:1:133647:133717	3174080	0	True				
ANR	3174084	CallExpression	"php_mb_safe_strrchr_ex ( s , c , nbytes , MBSTRG ( internal_encoding ) )"		3174080	0					
ANR	3174085	Callee	php_mb_safe_strrchr_ex		3174080	0					
ANR	3174086	Identifier	php_mb_safe_strrchr_ex		3174080	0					
ANR	3174087	ArgumentList	s		3174080	1					
ANR	3174088	Argument	s		3174080	0					
ANR	3174089	Identifier	s		3174080	0					
ANR	3174090	Argument	c		3174080	1					
ANR	3174091	Identifier	c		3174080	0					
ANR	3174092	Argument	nbytes		3174080	2					
ANR	3174093	Identifier	nbytes		3174080	0					
ANR	3174094	Argument	MBSTRG ( internal_encoding )		3174080	3					
ANR	3174095	CallExpression	MBSTRG ( internal_encoding )		3174080	0					
ANR	3174096	Callee	MBSTRG		3174080	0					
ANR	3174097	Identifier	MBSTRG		3174080	0					
ANR	3174098	ArgumentList	internal_encoding		3174080	1					
ANR	3174099	Argument	internal_encoding		3174080	0					
ANR	3174100	Identifier	internal_encoding		3174080	0					
ANR	3174101	ReturnType	MBSTRING_API char *		3174080	1					
ANR	3174102	Identifier	php_mb_safe_strrchr		3174080	2					
ANR	3174103	ParameterList	"const char * s , unsigned int c , size_t nbytes"		3174080	3					
ANR	3174104	Parameter	const char * s	4663:39:133598:133610	3174080	0	True				
ANR	3174105	ParameterType	const char *		3174080	0					
ANR	3174106	Identifier	s		3174080	1					
ANR	3174107	Parameter	unsigned int c	4663:54:133613:133626	3174080	1	True				
ANR	3174108	ParameterType	unsigned int		3174080	0					
ANR	3174109	Identifier	c		3174080	1					
ANR	3174110	Parameter	size_t nbytes	4663:70:133629:133641	3174080	2	True				
ANR	3174111	ParameterType	size_t		3174080	0					
ANR	3174112	Identifier	nbytes		3174080	1					
ANR	3174113	CFGEntryNode	ENTRY		3174080		True				
ANR	3174114	CFGExitNode	EXIT		3174080		True				
ANR	3174115	Symbol	s		3174080						
ANR	3174116	Symbol	c		3174080						
ANR	3174117	Symbol	php_mb_safe_strrchr_ex		3174080						
ANR	3174118	Symbol	MBSTRG		3174080						
ANR	3174119	Symbol	internal_encoding		3174080						
ANR	3174120	Symbol	nbytes		3174080						
ANR	3174121	Function	php_mb_stripos	4671:0:133777:135689							
ANR	3174122	FunctionDef	"php_mb_stripos (int mode , const char * old_haystack , unsigned int old_haystack_len , const char * old_needle , unsigned int old_needle_len , long offset , const char * from_encoding)"		3174121	0					
ANR	3174123	CompoundStatement		4672:0:133969:135689	3174121	0					
ANR	3174124	IdentifierDeclStatement	int n ;	4673:1:133972:133977	3174121	0	True				
ANR	3174125	IdentifierDecl	n		3174121	0					
ANR	3174126	IdentifierDeclType	int		3174121	0					
ANR	3174127	Identifier	n		3174121	1					
ANR	3174128	IdentifierDeclStatement	"mbfl_string haystack , needle ;"	4674:1:133980:134008	3174121	1	True				
ANR	3174129	IdentifierDecl	haystack		3174121	0					
ANR	3174130	IdentifierDeclType	mbfl_string		3174121	0					
ANR	3174131	Identifier	haystack		3174121	1					
ANR	3174132	IdentifierDecl	needle		3174121	1					
ANR	3174133	IdentifierDeclType	mbfl_string		3174121	0					
ANR	3174134	Identifier	needle		3174121	1					
ANR	3174135	ExpressionStatement	n = - 1	4675:1:134011:134017	3174121	2	True				
ANR	3174136	AssignmentExpression	n = - 1		3174121	0		=			
ANR	3174137	Identifier	n		3174121	0					
ANR	3174138	UnaryOperationExpression	- 1		3174121	1					
ANR	3174139	UnaryOperator	-		3174121	0					
ANR	3174140	PrimaryExpression	1		3174121	1					
ANR	3174141	ExpressionStatement	mbfl_string_init ( & haystack )	4677:1:134021:134048	3174121	3	True				
ANR	3174142	CallExpression	mbfl_string_init ( & haystack )		3174121	0					
ANR	3174143	Callee	mbfl_string_init		3174121	0					
ANR	3174144	Identifier	mbfl_string_init		3174121	0					
ANR	3174145	ArgumentList	& haystack		3174121	1					
ANR	3174146	Argument	& haystack		3174121	0					
ANR	3174147	UnaryOperationExpression	& haystack		3174121	0					
ANR	3174148	UnaryOperator	&		3174121	0					
ANR	3174149	Identifier	haystack		3174121	1					
ANR	3174150	ExpressionStatement	mbfl_string_init ( & needle )	4678:1:134051:134076	3174121	4	True				
ANR	3174151	CallExpression	mbfl_string_init ( & needle )		3174121	0					
ANR	3174152	Callee	mbfl_string_init		3174121	0					
ANR	3174153	Identifier	mbfl_string_init		3174121	0					
ANR	3174154	ArgumentList	& needle		3174121	1					
ANR	3174155	Argument	& needle		3174121	0					
ANR	3174156	UnaryOperationExpression	& needle		3174121	0					
ANR	3174157	UnaryOperator	&		3174121	0					
ANR	3174158	Identifier	needle		3174121	1					
ANR	3174159	ExpressionStatement	haystack . no_language = MBSTRG ( language )	4679:1:134079:134118	3174121	5	True				
ANR	3174160	AssignmentExpression	haystack . no_language = MBSTRG ( language )		3174121	0		=			
ANR	3174161	MemberAccess	haystack . no_language		3174121	0					
ANR	3174162	Identifier	haystack		3174121	0					
ANR	3174163	Identifier	no_language		3174121	1					
ANR	3174164	CallExpression	MBSTRG ( language )		3174121	1					
ANR	3174165	Callee	MBSTRG		3174121	0					
ANR	3174166	Identifier	MBSTRG		3174121	0					
ANR	3174167	ArgumentList	language		3174121	1					
ANR	3174168	Argument	language		3174121	0					
ANR	3174169	Identifier	language		3174121	0					
ANR	3174170	ExpressionStatement	haystack . no_encoding = MBSTRG ( current_internal_encoding ) -> no_encoding	4680:1:134121:134190	3174121	6	True				
ANR	3174171	AssignmentExpression	haystack . no_encoding = MBSTRG ( current_internal_encoding ) -> no_encoding		3174121	0		=			
ANR	3174172	MemberAccess	haystack . no_encoding		3174121	0					
ANR	3174173	Identifier	haystack		3174121	0					
ANR	3174174	Identifier	no_encoding		3174121	1					
ANR	3174175	PtrMemberAccess	MBSTRG ( current_internal_encoding ) -> no_encoding		3174121	1					
ANR	3174176	CallExpression	MBSTRG ( current_internal_encoding )		3174121	0					
ANR	3174177	Callee	MBSTRG		3174121	0					
ANR	3174178	Identifier	MBSTRG		3174121	0					
ANR	3174179	ArgumentList	current_internal_encoding		3174121	1					
ANR	3174180	Argument	current_internal_encoding		3174121	0					
ANR	3174181	Identifier	current_internal_encoding		3174121	0					
ANR	3174182	Identifier	no_encoding		3174121	1					
ANR	3174183	ExpressionStatement	needle . no_language = MBSTRG ( language )	4681:1:134193:134230	3174121	7	True				
ANR	3174184	AssignmentExpression	needle . no_language = MBSTRG ( language )		3174121	0		=			
ANR	3174185	MemberAccess	needle . no_language		3174121	0					
ANR	3174186	Identifier	needle		3174121	0					
ANR	3174187	Identifier	no_language		3174121	1					
ANR	3174188	CallExpression	MBSTRG ( language )		3174121	1					
ANR	3174189	Callee	MBSTRG		3174121	0					
ANR	3174190	Identifier	MBSTRG		3174121	0					
ANR	3174191	ArgumentList	language		3174121	1					
ANR	3174192	Argument	language		3174121	0					
ANR	3174193	Identifier	language		3174121	0					
ANR	3174194	ExpressionStatement	needle . no_encoding = MBSTRG ( current_internal_encoding ) -> no_encoding	4682:1:134233:134300	3174121	8	True				
ANR	3174195	AssignmentExpression	needle . no_encoding = MBSTRG ( current_internal_encoding ) -> no_encoding		3174121	0		=			
ANR	3174196	MemberAccess	needle . no_encoding		3174121	0					
ANR	3174197	Identifier	needle		3174121	0					
ANR	3174198	Identifier	no_encoding		3174121	1					
ANR	3174199	PtrMemberAccess	MBSTRG ( current_internal_encoding ) -> no_encoding		3174121	1					
ANR	3174200	CallExpression	MBSTRG ( current_internal_encoding )		3174121	0					
ANR	3174201	Callee	MBSTRG		3174121	0					
ANR	3174202	Identifier	MBSTRG		3174121	0					
ANR	3174203	ArgumentList	current_internal_encoding		3174121	1					
ANR	3174204	Argument	current_internal_encoding		3174121	0					
ANR	3174205	Identifier	current_internal_encoding		3174121	0					
ANR	3174206	Identifier	no_encoding		3174121	1					
ANR	3174207	DoStatement	do		3174121	9					
ANR	3174208	CompoundStatement		14:2:341:355	3174121	0					
ANR	3174209	IdentifierDeclStatement	size_t len = 0 ;	4685:2:134311:134325	3174121	0	True				
ANR	3174210	IdentifierDecl	len = 0		3174121	0					
ANR	3174211	IdentifierDeclType	size_t		3174121	0					
ANR	3174212	Identifier	len		3174121	1					
ANR	3174213	AssignmentExpression	len = 0		3174121	2		=			
ANR	3174214	Identifier	len		3174121	0					
ANR	3174215	PrimaryExpression	0		3174121	1					
ANR	3174216	ExpressionStatement	"haystack . val = ( unsigned char * ) php_unicode_convert_case ( PHP_UNICODE_CASE_UPPER , ( char * ) old_haystack , old_haystack_len , & len , from_encoding )"	4686:2:134329:134470	3174121	1	True				
ANR	3174217	AssignmentExpression	"haystack . val = ( unsigned char * ) php_unicode_convert_case ( PHP_UNICODE_CASE_UPPER , ( char * ) old_haystack , old_haystack_len , & len , from_encoding )"		3174121	0		=			
ANR	3174218	MemberAccess	haystack . val		3174121	0					
ANR	3174219	Identifier	haystack		3174121	0					
ANR	3174220	Identifier	val		3174121	1					
ANR	3174221	CastExpression	"( unsigned char * ) php_unicode_convert_case ( PHP_UNICODE_CASE_UPPER , ( char * ) old_haystack , old_haystack_len , & len , from_encoding )"		3174121	1					
ANR	3174222	CastTarget	unsigned char *		3174121	0					
ANR	3174223	CallExpression	"php_unicode_convert_case ( PHP_UNICODE_CASE_UPPER , ( char * ) old_haystack , old_haystack_len , & len , from_encoding )"		3174121	1					
ANR	3174224	Callee	php_unicode_convert_case		3174121	0					
ANR	3174225	Identifier	php_unicode_convert_case		3174121	0					
ANR	3174226	ArgumentList	PHP_UNICODE_CASE_UPPER		3174121	1					
ANR	3174227	Argument	PHP_UNICODE_CASE_UPPER		3174121	0					
ANR	3174228	Identifier	PHP_UNICODE_CASE_UPPER		3174121	0					
ANR	3174229	Argument	( char * ) old_haystack		3174121	1					
ANR	3174230	CastExpression	( char * ) old_haystack		3174121	0					
ANR	3174231	CastTarget	char *		3174121	0					
ANR	3174232	Identifier	old_haystack		3174121	1					
ANR	3174233	Argument	old_haystack_len		3174121	2					
ANR	3174234	Identifier	old_haystack_len		3174121	0					
ANR	3174235	Argument	& len		3174121	3					
ANR	3174236	UnaryOperationExpression	& len		3174121	0					
ANR	3174237	UnaryOperator	&		3174121	0					
ANR	3174238	Identifier	len		3174121	1					
ANR	3174239	Argument	from_encoding		3174121	4					
ANR	3174240	Identifier	from_encoding		3174121	0					
ANR	3174241	ExpressionStatement	haystack . len = len	4687:2:134474:134492	3174121	2	True				
ANR	3174242	AssignmentExpression	haystack . len = len		3174121	0		=			
ANR	3174243	MemberAccess	haystack . len		3174121	0					
ANR	3174244	Identifier	haystack		3174121	0					
ANR	3174245	Identifier	len		3174121	1					
ANR	3174246	Identifier	len		3174121	1					
ANR	3174247	IfStatement	if ( ! haystack . val )		3174121	3					
ANR	3174248	Condition	! haystack . val	4689:6:134501:134513	3174121	0	True				
ANR	3174249	UnaryOperationExpression	! haystack . val		3174121	0					
ANR	3174250	UnaryOperator	!		3174121	0					
ANR	3174251	MemberAccess	haystack . val		3174121	1					
ANR	3174252	Identifier	haystack		3174121	0					
ANR	3174253	Identifier	val		3174121	1					
ANR	3174254	CompoundStatement		18:21:546:546	3174121	1					
ANR	3174255	BreakStatement	break ;	4690:3:134521:134526	3174121	0	True				
ANR	3174256	IfStatement	if ( haystack . len <= 0 )		3174121	4					
ANR	3174257	Condition	haystack . len <= 0	4693:6:134539:134555	3174121	0	True				
ANR	3174258	RelationalExpression	haystack . len <= 0		3174121	0		<=			
ANR	3174259	MemberAccess	haystack . len		3174121	0					
ANR	3174260	Identifier	haystack		3174121	0					
ANR	3174261	Identifier	len		3174121	1					
ANR	3174262	PrimaryExpression	0		3174121	1					
ANR	3174263	CompoundStatement		22:25:588:588	3174121	1					
ANR	3174264	BreakStatement	break ;	4694:3:134563:134568	3174121	0	True				
ANR	3174265	ExpressionStatement	"needle . val = ( unsigned char * ) php_unicode_convert_case ( PHP_UNICODE_CASE_UPPER , ( char * ) old_needle , old_needle_len , & len , from_encoding )"	4697:2:134577:134712	3174121	5	True				
ANR	3174266	AssignmentExpression	"needle . val = ( unsigned char * ) php_unicode_convert_case ( PHP_UNICODE_CASE_UPPER , ( char * ) old_needle , old_needle_len , & len , from_encoding )"		3174121	0		=			
ANR	3174267	MemberAccess	needle . val		3174121	0					
ANR	3174268	Identifier	needle		3174121	0					
ANR	3174269	Identifier	val		3174121	1					
ANR	3174270	CastExpression	"( unsigned char * ) php_unicode_convert_case ( PHP_UNICODE_CASE_UPPER , ( char * ) old_needle , old_needle_len , & len , from_encoding )"		3174121	1					
ANR	3174271	CastTarget	unsigned char *		3174121	0					
ANR	3174272	CallExpression	"php_unicode_convert_case ( PHP_UNICODE_CASE_UPPER , ( char * ) old_needle , old_needle_len , & len , from_encoding )"		3174121	1					
ANR	3174273	Callee	php_unicode_convert_case		3174121	0					
ANR	3174274	Identifier	php_unicode_convert_case		3174121	0					
ANR	3174275	ArgumentList	PHP_UNICODE_CASE_UPPER		3174121	1					
ANR	3174276	Argument	PHP_UNICODE_CASE_UPPER		3174121	0					
ANR	3174277	Identifier	PHP_UNICODE_CASE_UPPER		3174121	0					
ANR	3174278	Argument	( char * ) old_needle		3174121	1					
ANR	3174279	CastExpression	( char * ) old_needle		3174121	0					
ANR	3174280	CastTarget	char *		3174121	0					
ANR	3174281	Identifier	old_needle		3174121	1					
ANR	3174282	Argument	old_needle_len		3174121	2					
ANR	3174283	Identifier	old_needle_len		3174121	0					
ANR	3174284	Argument	& len		3174121	3					
ANR	3174285	UnaryOperationExpression	& len		3174121	0					
ANR	3174286	UnaryOperator	&		3174121	0					
ANR	3174287	Identifier	len		3174121	1					
ANR	3174288	Argument	from_encoding		3174121	4					
ANR	3174289	Identifier	from_encoding		3174121	0					
ANR	3174290	ExpressionStatement	needle . len = len	4698:2:134716:134732	3174121	6	True				
ANR	3174291	AssignmentExpression	needle . len = len		3174121	0		=			
ANR	3174292	MemberAccess	needle . len		3174121	0					
ANR	3174293	Identifier	needle		3174121	0					
ANR	3174294	Identifier	len		3174121	1					
ANR	3174295	Identifier	len		3174121	1					
ANR	3174296	IfStatement	if ( ! needle . val )		3174121	7					
ANR	3174297	Condition	! needle . val	4700:6:134741:134751	3174121	0	True				
ANR	3174298	UnaryOperationExpression	! needle . val		3174121	0					
ANR	3174299	UnaryOperator	!		3174121	0					
ANR	3174300	MemberAccess	needle . val		3174121	1					
ANR	3174301	Identifier	needle		3174121	0					
ANR	3174302	Identifier	val		3174121	1					
ANR	3174303	CompoundStatement		29:19:784:784	3174121	1					
ANR	3174304	BreakStatement	break ;	4701:3:134759:134764	3174121	0	True				
ANR	3174305	IfStatement	if ( needle . len <= 0 )		3174121	8					
ANR	3174306	Condition	needle . len <= 0	4704:6:134777:134791	3174121	0	True				
ANR	3174307	RelationalExpression	needle . len <= 0		3174121	0		<=			
ANR	3174308	MemberAccess	needle . len		3174121	0					
ANR	3174309	Identifier	needle		3174121	0					
ANR	3174310	Identifier	len		3174121	1					
ANR	3174311	PrimaryExpression	0		3174121	1					
ANR	3174312	CompoundStatement		33:23:824:824	3174121	1					
ANR	3174313	BreakStatement	break ;	4705:3:134799:134804	3174121	0	True				
ANR	3174314	ExpressionStatement	haystack . no_encoding = needle . no_encoding = mbfl_name2no_encoding ( from_encoding )	4708:2:134813:134893	3174121	9	True				
ANR	3174315	AssignmentExpression	haystack . no_encoding = needle . no_encoding = mbfl_name2no_encoding ( from_encoding )		3174121	0		=			
ANR	3174316	MemberAccess	haystack . no_encoding		3174121	0					
ANR	3174317	Identifier	haystack		3174121	0					
ANR	3174318	Identifier	no_encoding		3174121	1					
ANR	3174319	AssignmentExpression	needle . no_encoding = mbfl_name2no_encoding ( from_encoding )		3174121	1		=			
ANR	3174320	MemberAccess	needle . no_encoding		3174121	0					
ANR	3174321	Identifier	needle		3174121	0					
ANR	3174322	Identifier	no_encoding		3174121	1					
ANR	3174323	CallExpression	mbfl_name2no_encoding ( from_encoding )		3174121	1					
ANR	3174324	Callee	mbfl_name2no_encoding		3174121	0					
ANR	3174325	Identifier	mbfl_name2no_encoding		3174121	0					
ANR	3174326	ArgumentList	from_encoding		3174121	1					
ANR	3174327	Argument	from_encoding		3174121	0					
ANR	3174328	Identifier	from_encoding		3174121	0					
ANR	3174329	IfStatement	if ( haystack . no_encoding == mbfl_no_encoding_invalid )		3174121	10					
ANR	3174330	Condition	haystack . no_encoding == mbfl_no_encoding_invalid	4709:6:134901:134948	3174121	0	True				
ANR	3174331	EqualityExpression	haystack . no_encoding == mbfl_no_encoding_invalid		3174121	0		==			
ANR	3174332	MemberAccess	haystack . no_encoding		3174121	0					
ANR	3174333	Identifier	haystack		3174121	0					
ANR	3174334	Identifier	no_encoding		3174121	1					
ANR	3174335	Identifier	mbfl_no_encoding_invalid		3174121	1					
ANR	3174336	CompoundStatement		38:56:981:981	3174121	1					
ANR	3174337	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Unknown encoding \\""%s\\"""" , from_encoding )"	4710:3:134956:135031	3174121	0	True				
ANR	3174338	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Unknown encoding \\""%s\\"""" , from_encoding )"		3174121	0					
ANR	3174339	Callee	php_error_docref		3174121	0					
ANR	3174340	Identifier	php_error_docref		3174121	0					
ANR	3174341	ArgumentList	NULL		3174121	1					
ANR	3174342	Argument	NULL		3174121	0					
ANR	3174343	Identifier	NULL		3174121	0					
ANR	3174344	Argument	E_WARNING		3174121	1					
ANR	3174345	Identifier	E_WARNING		3174121	0					
ANR	3174346	Argument	"""Unknown encoding \\""%s\\"""""		3174121	2					
ANR	3174347	PrimaryExpression	"""Unknown encoding \\""%s\\"""""		3174121	0					
ANR	3174348	Argument	from_encoding		3174121	3					
ANR	3174349	Identifier	from_encoding		3174121	0					
ANR	3174350	BreakStatement	break ;	4711:3:135036:135041	3174121	1	True				
ANR	3174351	CompoundStatement		44:4:1087:1133	3174121	11					
ANR	3174352	IdentifierDeclStatement	int haystack_char_len = mbfl_strlen ( & haystack ) ;	4715:4:135057:135103	3174121	0	True				
ANR	3174353	IdentifierDecl	haystack_char_len = mbfl_strlen ( & haystack )		3174121	0					
ANR	3174354	IdentifierDeclType	int		3174121	0					
ANR	3174355	Identifier	haystack_char_len		3174121	1					
ANR	3174356	AssignmentExpression	haystack_char_len = mbfl_strlen ( & haystack )		3174121	2		=			
ANR	3174357	Identifier	haystack_char_len		3174121	0					
ANR	3174358	CallExpression	mbfl_strlen ( & haystack )		3174121	1					
ANR	3174359	Callee	mbfl_strlen		3174121	0					
ANR	3174360	Identifier	mbfl_strlen		3174121	0					
ANR	3174361	ArgumentList	& haystack		3174121	1					
ANR	3174362	Argument	& haystack		3174121	0					
ANR	3174363	UnaryOperationExpression	& haystack		3174121	0					
ANR	3174364	UnaryOperator	&		3174121	0					
ANR	3174365	Identifier	haystack		3174121	1					
ANR	3174366	IfStatement	if ( mode )		3174121	1					
ANR	3174367	Condition	mode	4717:8:135114:135117	3174121	0	True				
ANR	3174368	Identifier	mode		3174121	0					
ANR	3174369	CompoundStatement		46:14:1150:1150	3174121	1					
ANR	3174370	IfStatement	if ( ( offset > 0 && offset > haystack_char_len ) || ( offset < 0 && - offset > haystack_char_len ) )		3174121	0					
ANR	3174371	Condition	( offset > 0 && offset > haystack_char_len ) || ( offset < 0 && - offset > haystack_char_len )	4718:9:135131:135225	3174121	0	True				
ANR	3174372	OrExpression	( offset > 0 && offset > haystack_char_len ) || ( offset < 0 && - offset > haystack_char_len )		3174121	0		||			
ANR	3174373	AndExpression	offset > 0 && offset > haystack_char_len		3174121	0		&&			
ANR	3174374	RelationalExpression	offset > 0		3174121	0		>			
ANR	3174375	Identifier	offset		3174121	0					
ANR	3174376	PrimaryExpression	0		3174121	1					
ANR	3174377	RelationalExpression	offset > haystack_char_len		3174121	1		>			
ANR	3174378	Identifier	offset		3174121	0					
ANR	3174379	Identifier	haystack_char_len		3174121	1					
ANR	3174380	AndExpression	offset < 0 && - offset > haystack_char_len		3174121	1		&&			
ANR	3174381	RelationalExpression	offset < 0		3174121	0		<			
ANR	3174382	Identifier	offset		3174121	0					
ANR	3174383	PrimaryExpression	0		3174121	1					
ANR	3174384	RelationalExpression	- offset > haystack_char_len		3174121	1		>			
ANR	3174385	UnaryOperationExpression	- offset		3174121	0					
ANR	3174386	UnaryOperator	-		3174121	0					
ANR	3174387	Identifier	offset		3174121	1					
ANR	3174388	Identifier	haystack_char_len		3174121	1					
ANR	3174389	CompoundStatement		48:51:1258:1258	3174121	1					
ANR	3174390	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Offset is greater than the length of haystack string"" )"	4720:6:135236:135325	3174121	0	True				
ANR	3174391	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Offset is greater than the length of haystack string"" )"		3174121	0					
ANR	3174392	Callee	php_error_docref		3174121	0					
ANR	3174393	Identifier	php_error_docref		3174121	0					
ANR	3174394	ArgumentList	NULL		3174121	1					
ANR	3174395	Argument	NULL		3174121	0					
ANR	3174396	Identifier	NULL		3174121	0					
ANR	3174397	Argument	E_WARNING		3174121	1					
ANR	3174398	Identifier	E_WARNING		3174121	0					
ANR	3174399	Argument	"""Offset is greater than the length of haystack string"""		3174121	2					
ANR	3174400	PrimaryExpression	"""Offset is greater than the length of haystack string"""		3174121	0					
ANR	3174401	BreakStatement	break ;	4721:6:135333:135338	3174121	1	True				
ANR	3174402	ElseStatement	else		3174121	0					
ANR	3174403	CompoundStatement		52:11:1388:1388	3174121	0					
ANR	3174404	IfStatement	if ( offset < 0 || offset > haystack_char_len )		3174121	0					
ANR	3174405	Condition	offset < 0 || offset > haystack_char_len	4724:9:135369:135408	3174121	0	True				
ANR	3174406	OrExpression	offset < 0 || offset > haystack_char_len		3174121	0		||			
ANR	3174407	RelationalExpression	offset < 0		3174121	0		<			
ANR	3174408	Identifier	offset		3174121	0					
ANR	3174409	PrimaryExpression	0		3174121	1					
ANR	3174410	RelationalExpression	offset > haystack_char_len		3174121	1		>			
ANR	3174411	Identifier	offset		3174121	0					
ANR	3174412	Identifier	haystack_char_len		3174121	1					
ANR	3174413	CompoundStatement		53:51:1441:1441	3174121	1					
ANR	3174414	ExpressionStatement	"php_error_docref ( NULL , E_WARNING , ""Offset not contained in string"" )"	4725:6:135419:135486	3174121	0	True				
ANR	3174415	CallExpression	"php_error_docref ( NULL , E_WARNING , ""Offset not contained in string"" )"		3174121	0					
ANR	3174416	Callee	php_error_docref		3174121	0					
ANR	3174417	Identifier	php_error_docref		3174121	0					
ANR	3174418	ArgumentList	NULL		3174121	1					
ANR	3174419	Argument	NULL		3174121	0					
ANR	3174420	Identifier	NULL		3174121	0					
ANR	3174421	Argument	E_WARNING		3174121	1					
ANR	3174422	Identifier	E_WARNING		3174121	0					
ANR	3174423	Argument	"""Offset not contained in string"""		3174121	2					
ANR	3174424	PrimaryExpression	"""Offset not contained in string"""		3174121	0					
ANR	3174425	BreakStatement	break ;	4726:6:135494:135499	3174121	1	True				
ANR	3174426	ExpressionStatement	"n = mbfl_strpos ( & haystack , & needle , offset , mode )"	4731:2:135521:135570	3174121	12	True				
ANR	3174427	AssignmentExpression	"n = mbfl_strpos ( & haystack , & needle , offset , mode )"		3174121	0		=			
ANR	3174428	Identifier	n		3174121	0					
ANR	3174429	CallExpression	"mbfl_strpos ( & haystack , & needle , offset , mode )"		3174121	1					
ANR	3174430	Callee	mbfl_strpos		3174121	0					
ANR	3174431	Identifier	mbfl_strpos		3174121	0					
ANR	3174432	ArgumentList	& haystack		3174121	1					
ANR	3174433	Argument	& haystack		3174121	0					
ANR	3174434	UnaryOperationExpression	& haystack		3174121	0					
ANR	3174435	UnaryOperator	&		3174121	0					
ANR	3174436	Identifier	haystack		3174121	1					
ANR	3174437	Argument	& needle		3174121	1					
ANR	3174438	UnaryOperationExpression	& needle		3174121	0					
ANR	3174439	UnaryOperator	&		3174121	0					
ANR	3174440	Identifier	needle		3174121	1					
ANR	3174441	Argument	offset		3174121	2					
ANR	3174442	Identifier	offset		3174121	0					
ANR	3174443	Argument	mode		3174121	3					
ANR	3174444	Identifier	mode		3174121	0					
ANR	3174445	Condition	0	4732:9:135581:135581	3174121	1	True				
ANR	3174446	PrimaryExpression	0		3174121	0					
ANR	3174447	IfStatement	if ( haystack . val )		3174121	10					
ANR	3174448	Condition	haystack . val	4734:5:135591:135602	3174121	0	True				
ANR	3174449	MemberAccess	haystack . val		3174121	0					
ANR	3174450	Identifier	haystack		3174121	0					
ANR	3174451	Identifier	val		3174121	1					
ANR	3174452	CompoundStatement		63:19:1635:1635	3174121	1					
ANR	3174453	ExpressionStatement	efree ( haystack . val )	4735:2:135609:135628	3174121	0	True				
ANR	3174454	CallExpression	efree ( haystack . val )		3174121	0					
ANR	3174455	Callee	efree		3174121	0					
ANR	3174456	Identifier	efree		3174121	0					
ANR	3174457	ArgumentList	haystack . val		3174121	1					
ANR	3174458	Argument	haystack . val		3174121	0					
ANR	3174459	MemberAccess	haystack . val		3174121	0					
ANR	3174460	Identifier	haystack		3174121	0					
ANR	3174461	Identifier	val		3174121	1					
ANR	3174462	IfStatement	if ( needle . val )		3174121	11					
ANR	3174463	Condition	needle . val	4738:5:135639:135648	3174121	0	True				
ANR	3174464	MemberAccess	needle . val		3174121	0					
ANR	3174465	Identifier	needle		3174121	0					
ANR	3174466	Identifier	val		3174121	1					
ANR	3174467	CompoundStatement		67:17:1681:1681	3174121	1					
ANR	3174468	ExpressionStatement	efree ( needle . val )	4739:2:135655:135672	3174121	0	True				
ANR	3174469	CallExpression	efree ( needle . val )		3174121	0					
ANR	3174470	Callee	efree		3174121	0					
ANR	3174471	Identifier	efree		3174121	0					
ANR	3174472	ArgumentList	needle . val		3174121	1					
ANR	3174473	Argument	needle . val		3174121	0					
ANR	3174474	MemberAccess	needle . val		3174121	0					
ANR	3174475	Identifier	needle		3174121	0					
ANR	3174476	Identifier	val		3174121	1					
ANR	3174477	ReturnStatement	return n ;	4742:1:135679:135687	3174121	12	True				
ANR	3174478	Identifier	n		3174121	0					
ANR	3174479	ReturnType	MBSTRING_API int		3174121	1					
ANR	3174480	Identifier	php_mb_stripos		3174121	2					
ANR	3174481	ParameterList	"int mode , const char * old_haystack , unsigned int old_haystack_len , const char * old_needle , unsigned int old_needle_len , long offset , const char * from_encoding"		3174121	3					
ANR	3174482	Parameter	int mode	4671:32:133809:133816	3174121	0	True				
ANR	3174483	ParameterType	int		3174121	0					
ANR	3174484	Identifier	mode		3174121	1					
ANR	3174485	Parameter	const char * old_haystack	4671:42:133819:133842	3174121	1	True				
ANR	3174486	ParameterType	const char *		3174121	0					
ANR	3174487	Identifier	old_haystack		3174121	1					
ANR	3174488	Parameter	unsigned int old_haystack_len	4671:68:133845:133873	3174121	2	True				
ANR	3174489	ParameterType	unsigned int		3174121	0					
ANR	3174490	Identifier	old_haystack_len		3174121	1					
ANR	3174491	Parameter	const char * old_needle	4671:99:133876:133897	3174121	3	True				
ANR	3174492	ParameterType	const char *		3174121	0					
ANR	3174493	Identifier	old_needle		3174121	1					
ANR	3174494	Parameter	unsigned int old_needle_len	4671:123:133900:133926	3174121	4	True				
ANR	3174495	ParameterType	unsigned int		3174121	0					
ANR	3174496	Identifier	old_needle_len		3174121	1					
ANR	3174497	Parameter	long offset	4671:152:133929:133939	3174121	5	True				
ANR	3174498	ParameterType	long		3174121	0					
ANR	3174499	Identifier	offset		3174121	1					
ANR	3174500	Parameter	const char * from_encoding	4671:165:133942:133966	3174121	6	True				
ANR	3174501	ParameterType	const char *		3174121	0					
ANR	3174502	Identifier	from_encoding		3174121	1					
ANR	3174503	CFGEntryNode	ENTRY		3174121		True				
ANR	3174504	CFGExitNode	EXIT		3174121		True				
ANR	3174505	Symbol	needle . no_language		3174121						
ANR	3174506	Symbol	haystack . len		3174121						
ANR	3174507	Symbol	MBSTRG		3174121						
ANR	3174508	Symbol	haystack . no_encoding		3174121						
ANR	3174509	Symbol	* MBSTRG		3174121						
ANR	3174510	Symbol	old_haystack_len		3174121						
ANR	3174511	Symbol	haystack_char_len		3174121						
ANR	3174512	Symbol	language		3174121						
ANR	3174513	Symbol	needle . no_encoding		3174121						
ANR	3174514	Symbol	mode		3174121						
ANR	3174515	Symbol	E_WARNING		3174121						
ANR	3174516	Symbol	& haystack		3174121						
ANR	3174517	Symbol	MBSTRG ( current_internal_encoding ) -> no_encoding		3174121						
ANR	3174518	Symbol	needle . val		3174121						
ANR	3174519	Symbol	old_haystack		3174121						
ANR	3174520	Symbol	haystack		3174121						
ANR	3174521	Symbol	len		3174121						
ANR	3174522	Symbol	php_unicode_convert_case		3174121						
ANR	3174523	Symbol	PHP_UNICODE_CASE_UPPER		3174121						
ANR	3174524	Symbol	haystack . no_language		3174121						
ANR	3174525	Symbol	haystack . val		3174121						
ANR	3174526	Symbol	needle . len		3174121						
ANR	3174527	Symbol	mbfl_strpos		3174121						
ANR	3174528	Symbol	NULL		3174121						
ANR	3174529	Symbol	offset		3174121						
ANR	3174530	Symbol	from_encoding		3174121						
ANR	3174531	Symbol	mbfl_strlen		3174121						
ANR	3174532	Symbol	n		3174121						
ANR	3174533	Symbol	& needle		3174121						
ANR	3174534	Symbol	old_needle_len		3174121						
ANR	3174535	Symbol	current_internal_encoding		3174121						
ANR	3174536	Symbol	mbfl_no_encoding_invalid		3174121						
ANR	3174537	Symbol	old_needle		3174121						
ANR	3174538	Symbol	needle		3174121						
ANR	3174539	Symbol	& len		3174121						
ANR	3174540	Symbol	mbfl_name2no_encoding		3174121						
ANR	3174541	Function	php_mb_gpc_get_detect_order	4746:0:135702:135904							
ANR	3174542	FunctionDef	"php_mb_gpc_get_detect_order (const zend_encoding * * * list , size_t * list_size)"		3174541	0					
ANR	3174543	CompoundStatement		4747:0:135800:135904	3174541	0					
ANR	3174544	ExpressionStatement	* list = ( const zend_encoding * * ) MBSTRG ( http_input_list )	4748:1:135803:135858	3174541	0	True				
ANR	3174545	AssignmentExpression	* list = ( const zend_encoding * * ) MBSTRG ( http_input_list )		3174541	0		=			
ANR	3174546	UnaryOperationExpression	* list		3174541	0					
ANR	3174547	UnaryOperator	*		3174541	0					
ANR	3174548	Identifier	list		3174541	1					
ANR	3174549	CastExpression	( const zend_encoding * * ) MBSTRG ( http_input_list )		3174541	1					
ANR	3174550	CastTarget	const zend_encoding * *		3174541	0					
ANR	3174551	CallExpression	MBSTRG ( http_input_list )		3174541	1					
ANR	3174552	Callee	MBSTRG		3174541	0					
ANR	3174553	Identifier	MBSTRG		3174541	0					
ANR	3174554	ArgumentList	http_input_list		3174541	1					
ANR	3174555	Argument	http_input_list		3174541	0					
ANR	3174556	Identifier	http_input_list		3174541	0					
ANR	3174557	ExpressionStatement	* list_size = MBSTRG ( http_input_list_size )	4749:1:135861:135902	3174541	1	True				
ANR	3174558	AssignmentExpression	* list_size = MBSTRG ( http_input_list_size )		3174541	0		=			
ANR	3174559	UnaryOperationExpression	* list_size		3174541	0					
ANR	3174560	UnaryOperator	*		3174541	0					
ANR	3174561	Identifier	list_size		3174541	1					
ANR	3174562	CallExpression	MBSTRG ( http_input_list_size )		3174541	1					
ANR	3174563	Callee	MBSTRG		3174541	0					
ANR	3174564	Identifier	MBSTRG		3174541	0					
ANR	3174565	ArgumentList	http_input_list_size		3174541	1					
ANR	3174566	Argument	http_input_list_size		3174541	0					
ANR	3174567	Identifier	http_input_list_size		3174541	0					
ANR	3174568	ReturnType	static void		3174541	1					
ANR	3174569	Identifier	php_mb_gpc_get_detect_order		3174541	2					
ANR	3174570	ParameterList	"const zend_encoding * * * list , size_t * list_size"		3174541	3					
ANR	3174571	Parameter	const zend_encoding * * * list	4746:40:135742:135768	3174541	0	True				
ANR	3174572	ParameterType	const zend_encoding * * *		3174541	0					
ANR	3174573	Identifier	list		3174541	1					
ANR	3174574	Parameter	size_t * list_size	4746:69:135771:135787	3174541	1	True				
ANR	3174575	ParameterType	size_t *		3174541	0					
ANR	3174576	Identifier	list_size		3174541	1					
ANR	3174577	CFGEntryNode	ENTRY		3174541		True				
ANR	3174578	CFGExitNode	EXIT		3174541		True				
ANR	3174579	Symbol	http_input_list		3174541						
ANR	3174580	Symbol	* list_size		3174541						
ANR	3174581	Symbol	* list		3174541						
ANR	3174582	Symbol	MBSTRG		3174541						
ANR	3174583	Symbol	list_size		3174541						
ANR	3174584	Symbol	list		3174541						
ANR	3174585	Symbol	http_input_list_size		3174541						
ANR	3174586	Function	php_mb_gpc_set_input_encoding	4753:0:135917:136065							
ANR	3174587	FunctionDef	php_mb_gpc_set_input_encoding (const zend_encoding * encoding)		3174586	0					
ANR	3174588	CompoundStatement		4754:0:136000:136065	3174586	0					
ANR	3174589	ExpressionStatement	MBSTRG ( http_input_identify ) = ( const mbfl_encoding * ) encoding	4755:1:136003:136063	3174586	0	True				
ANR	3174590	AssignmentExpression	MBSTRG ( http_input_identify ) = ( const mbfl_encoding * ) encoding		3174586	0		=			
ANR	3174591	CallExpression	MBSTRG ( http_input_identify )		3174586	0					
ANR	3174592	Callee	MBSTRG		3174586	0					
ANR	3174593	Identifier	MBSTRG		3174586	0					
ANR	3174594	ArgumentList	http_input_identify		3174586	1					
ANR	3174595	Argument	http_input_identify		3174586	0					
ANR	3174596	Identifier	http_input_identify		3174586	0					
ANR	3174597	CastExpression	( const mbfl_encoding * ) encoding		3174586	1					
ANR	3174598	CastTarget	const mbfl_encoding *		3174586	0					
ANR	3174599	Identifier	encoding		3174586	1					
ANR	3174600	ReturnType	static void		3174586	1					
ANR	3174601	Identifier	php_mb_gpc_set_input_encoding		3174586	2					
ANR	3174602	ParameterList	const zend_encoding * encoding		3174586	3					
ANR	3174603	Parameter	const zend_encoding * encoding	4753:42:135959:135987	3174586	0	True				
ANR	3174604	ParameterType	const zend_encoding *		3174586	0					
ANR	3174605	Identifier	encoding		3174586	1					
ANR	3174606	CFGEntryNode	ENTRY		3174586		True				
ANR	3174607	CFGExitNode	EXIT		3174586		True				
ANR	3174608	Symbol	MBSTRG		3174586						
ANR	3174609	Symbol	http_input_identify		3174586						
ANR	3174610	Symbol	encoding		3174586						
