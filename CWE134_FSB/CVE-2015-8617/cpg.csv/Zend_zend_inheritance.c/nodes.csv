command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	210226	File	data/converged/CVE-2015-8617_php-src/Zend_zend_inheritance.c								
ANR	210227	Function	overriden_ptr_dtor	28:0:1404:1506							
ANR	210228	FunctionDef	overriden_ptr_dtor (zval * zv)		210227	0					
ANR	210229	CompoundStatement		29:0:1455:1506	210227	0					
ANR	210230	ExpressionStatement	"efree_size ( Z_PTR_P ( zv ) , sizeof ( zend_function ) )"	30:1:1458:1504	210227	0	True				
ANR	210231	CallExpression	"efree_size ( Z_PTR_P ( zv ) , sizeof ( zend_function ) )"		210227	0					
ANR	210232	Callee	efree_size		210227	0					
ANR	210233	Identifier	efree_size		210227	0					
ANR	210234	ArgumentList	Z_PTR_P ( zv )		210227	1					
ANR	210235	Argument	Z_PTR_P ( zv )		210227	0					
ANR	210236	CallExpression	Z_PTR_P ( zv )		210227	0					
ANR	210237	Callee	Z_PTR_P		210227	0					
ANR	210238	Identifier	Z_PTR_P		210227	0					
ANR	210239	ArgumentList	zv		210227	1					
ANR	210240	Argument	zv		210227	0					
ANR	210241	Identifier	zv		210227	0					
ANR	210242	Argument	sizeof ( zend_function )		210227	1					
ANR	210243	SizeofExpression	sizeof ( zend_function )		210227	0					
ANR	210244	Sizeof	sizeof		210227	0					
ANR	210245	SizeofOperand	zend_function		210227	1					
ANR	210246	ReturnType	static void		210227	1					
ANR	210247	Identifier	overriden_ptr_dtor		210227	2					
ANR	210248	ParameterList	zval * zv		210227	3					
ANR	210249	Parameter	zval * zv	28:31:1435:1442	210227	0	True				
ANR	210250	ParameterType	zval *		210227	0					
ANR	210251	Identifier	zv		210227	1					
ANR	210252	CFGEntryNode	ENTRY		210227		True				
ANR	210253	CFGExitNode	EXIT		210227		True				
ANR	210254	Symbol	Z_PTR_P		210227						
ANR	210255	Symbol	zv		210227						
ANR	210256	Function	zend_duplicate_property_info	34:0:1519:1982							
ANR	210257	FunctionDef	zend_duplicate_property_info (zend_property_info * property_info)		210256	0					
ANR	210258	CompoundStatement		35:0:1620:1982	210256	0					
ANR	210259	IdentifierDeclStatement	zend_property_info * new_property_info ;	36:1:1623:1660	210256	0	True				
ANR	210260	IdentifierDecl	* new_property_info		210256	0					
ANR	210261	IdentifierDeclType	zend_property_info *		210256	0					
ANR	210262	Identifier	new_property_info		210256	1					
ANR	210263	ExpressionStatement	"new_property_info = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_property_info ) )"	38:1:1664:1740	210256	1	True				
ANR	210264	AssignmentExpression	"new_property_info = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_property_info ) )"		210256	0		=			
ANR	210265	Identifier	new_property_info		210256	0					
ANR	210266	CallExpression	"zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_property_info ) )"		210256	1					
ANR	210267	Callee	zend_arena_alloc		210256	0					
ANR	210268	Identifier	zend_arena_alloc		210256	0					
ANR	210269	ArgumentList	& CG ( arena )		210256	1					
ANR	210270	Argument	& CG ( arena )		210256	0					
ANR	210271	UnaryOperationExpression	& CG ( arena )		210256	0					
ANR	210272	UnaryOperator	&		210256	0					
ANR	210273	CallExpression	CG ( arena )		210256	1					
ANR	210274	Callee	CG		210256	0					
ANR	210275	Identifier	CG		210256	0					
ANR	210276	ArgumentList	arena		210256	1					
ANR	210277	Argument	arena		210256	0					
ANR	210278	Identifier	arena		210256	0					
ANR	210279	Argument	sizeof ( zend_property_info )		210256	1					
ANR	210280	SizeofExpression	sizeof ( zend_property_info )		210256	0					
ANR	210281	Sizeof	sizeof		210256	0					
ANR	210282	SizeofOperand	zend_property_info		210256	1					
ANR	210283	ExpressionStatement	"memcpy ( new_property_info , property_info , sizeof ( zend_property_info ) )"	39:1:1743:1811	210256	2	True				
ANR	210284	CallExpression	"memcpy ( new_property_info , property_info , sizeof ( zend_property_info ) )"		210256	0					
ANR	210285	Callee	memcpy		210256	0					
ANR	210286	Identifier	memcpy		210256	0					
ANR	210287	ArgumentList	new_property_info		210256	1					
ANR	210288	Argument	new_property_info		210256	0					
ANR	210289	Identifier	new_property_info		210256	0					
ANR	210290	Argument	property_info		210256	1					
ANR	210291	Identifier	property_info		210256	0					
ANR	210292	Argument	sizeof ( zend_property_info )		210256	2					
ANR	210293	SizeofExpression	sizeof ( zend_property_info )		210256	0					
ANR	210294	Sizeof	sizeof		210256	0					
ANR	210295	SizeofOperand	zend_property_info		210256	1					
ANR	210296	ExpressionStatement	zend_string_addref ( new_property_info -> name )	40:1:1814:1857	210256	3	True				
ANR	210297	CallExpression	zend_string_addref ( new_property_info -> name )		210256	0					
ANR	210298	Callee	zend_string_addref		210256	0					
ANR	210299	Identifier	zend_string_addref		210256	0					
ANR	210300	ArgumentList	new_property_info -> name		210256	1					
ANR	210301	Argument	new_property_info -> name		210256	0					
ANR	210302	PtrMemberAccess	new_property_info -> name		210256	0					
ANR	210303	Identifier	new_property_info		210256	0					
ANR	210304	Identifier	name		210256	1					
ANR	210305	IfStatement	if ( new_property_info -> doc_comment )		210256	4					
ANR	210306	Condition	new_property_info -> doc_comment	41:5:1864:1893	210256	0	True				
ANR	210307	PtrMemberAccess	new_property_info -> doc_comment		210256	0					
ANR	210308	Identifier	new_property_info		210256	0					
ANR	210309	Identifier	doc_comment		210256	1					
ANR	210310	CompoundStatement		7:37:275:275	210256	1					
ANR	210311	ExpressionStatement	zend_string_addref ( new_property_info -> doc_comment )	42:2:1900:1950	210256	0	True				
ANR	210312	CallExpression	zend_string_addref ( new_property_info -> doc_comment )		210256	0					
ANR	210313	Callee	zend_string_addref		210256	0					
ANR	210314	Identifier	zend_string_addref		210256	0					
ANR	210315	ArgumentList	new_property_info -> doc_comment		210256	1					
ANR	210316	Argument	new_property_info -> doc_comment		210256	0					
ANR	210317	PtrMemberAccess	new_property_info -> doc_comment		210256	0					
ANR	210318	Identifier	new_property_info		210256	0					
ANR	210319	Identifier	doc_comment		210256	1					
ANR	210320	ReturnStatement	return new_property_info ;	44:1:1956:1980	210256	5	True				
ANR	210321	Identifier	new_property_info		210256	0					
ANR	210322	ReturnType	static zend_property_info *		210256	1					
ANR	210323	Identifier	zend_duplicate_property_info		210256	2					
ANR	210324	ParameterList	zend_property_info * property_info		210256	3					
ANR	210325	Parameter	zend_property_info * property_info	34:56:1575:1607	210256	0	True				
ANR	210326	ParameterType	zend_property_info *		210256	0					
ANR	210327	Identifier	property_info		210256	1					
ANR	210328	CFGEntryNode	ENTRY		210256		True				
ANR	210329	CFGExitNode	EXIT		210256		True				
ANR	210330	Symbol	property_info		210256						
ANR	210331	Symbol	zend_arena_alloc		210256						
ANR	210332	Symbol	new_property_info		210256						
ANR	210333	Symbol	arena		210256						
ANR	210334	Symbol	new_property_info -> name		210256						
ANR	210335	Symbol	* new_property_info		210256						
ANR	210336	Symbol	& CG		210256						
ANR	210337	Symbol	new_property_info -> doc_comment		210256						
ANR	210338	Function	zend_duplicate_property_info_internal	48:0:1995:2333							
ANR	210339	FunctionDef	zend_duplicate_property_info_internal (zend_property_info * property_info)		210338	0					
ANR	210340	CompoundStatement		49:0:2105:2333	210338	0					
ANR	210341	IdentifierDeclStatement	"zend_property_info * new_property_info = pemalloc ( sizeof ( zend_property_info ) , 1 ) ;"	50:1:2108:2187	210338	0	True				
ANR	210342	IdentifierDecl	"* new_property_info = pemalloc ( sizeof ( zend_property_info ) , 1 )"		210338	0					
ANR	210343	IdentifierDeclType	zend_property_info *		210338	0					
ANR	210344	Identifier	new_property_info		210338	1					
ANR	210345	AssignmentExpression	"* new_property_info = pemalloc ( sizeof ( zend_property_info ) , 1 )"		210338	2		=			
ANR	210346	Identifier	new_property_info		210338	0					
ANR	210347	CallExpression	"pemalloc ( sizeof ( zend_property_info ) , 1 )"		210338	1					
ANR	210348	Callee	pemalloc		210338	0					
ANR	210349	Identifier	pemalloc		210338	0					
ANR	210350	ArgumentList	sizeof ( zend_property_info )		210338	1					
ANR	210351	Argument	sizeof ( zend_property_info )		210338	0					
ANR	210352	SizeofExpression	sizeof ( zend_property_info )		210338	0					
ANR	210353	Sizeof	sizeof		210338	0					
ANR	210354	SizeofOperand	zend_property_info		210338	1					
ANR	210355	Argument	1		210338	1					
ANR	210356	PrimaryExpression	1		210338	0					
ANR	210357	ExpressionStatement	"memcpy ( new_property_info , property_info , sizeof ( zend_property_info ) )"	51:1:2190:2258	210338	1	True				
ANR	210358	CallExpression	"memcpy ( new_property_info , property_info , sizeof ( zend_property_info ) )"		210338	0					
ANR	210359	Callee	memcpy		210338	0					
ANR	210360	Identifier	memcpy		210338	0					
ANR	210361	ArgumentList	new_property_info		210338	1					
ANR	210362	Argument	new_property_info		210338	0					
ANR	210363	Identifier	new_property_info		210338	0					
ANR	210364	Argument	property_info		210338	1					
ANR	210365	Identifier	property_info		210338	0					
ANR	210366	Argument	sizeof ( zend_property_info )		210338	2					
ANR	210367	SizeofExpression	sizeof ( zend_property_info )		210338	0					
ANR	210368	Sizeof	sizeof		210338	0					
ANR	210369	SizeofOperand	zend_property_info		210338	1					
ANR	210370	ExpressionStatement	zend_string_addref ( new_property_info -> name )	52:1:2261:2304	210338	2	True				
ANR	210371	CallExpression	zend_string_addref ( new_property_info -> name )		210338	0					
ANR	210372	Callee	zend_string_addref		210338	0					
ANR	210373	Identifier	zend_string_addref		210338	0					
ANR	210374	ArgumentList	new_property_info -> name		210338	1					
ANR	210375	Argument	new_property_info -> name		210338	0					
ANR	210376	PtrMemberAccess	new_property_info -> name		210338	0					
ANR	210377	Identifier	new_property_info		210338	0					
ANR	210378	Identifier	name		210338	1					
ANR	210379	ReturnStatement	return new_property_info ;	53:1:2307:2331	210338	3	True				
ANR	210380	Identifier	new_property_info		210338	0					
ANR	210381	ReturnType	static zend_property_info *		210338	1					
ANR	210382	Identifier	zend_duplicate_property_info_internal		210338	2					
ANR	210383	ParameterList	zend_property_info * property_info		210338	3					
ANR	210384	Parameter	zend_property_info * property_info	48:65:2060:2092	210338	0	True				
ANR	210385	ParameterType	zend_property_info *		210338	0					
ANR	210386	Identifier	property_info		210338	1					
ANR	210387	CFGEntryNode	ENTRY		210338		True				
ANR	210388	CFGExitNode	EXIT		210338		True				
ANR	210389	Symbol	property_info		210338						
ANR	210390	Symbol	new_property_info		210338						
ANR	210391	Symbol	new_property_info -> name		210338						
ANR	210392	Symbol	* new_property_info		210338						
ANR	210393	Symbol	pemalloc		210338						
ANR	210394	Function	zend_duplicate_function	57:0:2346:3523							
ANR	210395	FunctionDef	"zend_duplicate_function (zend_function * func , zend_class_entry * ce)"		210394	0					
ANR	210396	CompoundStatement		58:0:2445:3523	210394	0					
ANR	210397	IdentifierDeclStatement	zend_function * new_function ;	59:1:2448:2475	210394	0	True				
ANR	210398	IdentifierDecl	* new_function		210394	0					
ANR	210399	IdentifierDeclType	zend_function *		210394	0					
ANR	210400	Identifier	new_function		210394	1					
ANR	210401	IfStatement	if ( UNEXPECTED ( func -> type == ZEND_INTERNAL_FUNCTION ) )		210394	1					
ANR	210402	Condition	UNEXPECTED ( func -> type == ZEND_INTERNAL_FUNCTION )	61:5:2483:2530	210394	0	True				
ANR	210403	CallExpression	UNEXPECTED ( func -> type == ZEND_INTERNAL_FUNCTION )		210394	0					
ANR	210404	Callee	UNEXPECTED		210394	0					
ANR	210405	Identifier	UNEXPECTED		210394	0					
ANR	210406	ArgumentList	func -> type == ZEND_INTERNAL_FUNCTION		210394	1					
ANR	210407	Argument	func -> type == ZEND_INTERNAL_FUNCTION		210394	0					
ANR	210408	EqualityExpression	func -> type == ZEND_INTERNAL_FUNCTION		210394	0		==			
ANR	210409	PtrMemberAccess	func -> type		210394	0					
ANR	210410	Identifier	func		210394	0					
ANR	210411	Identifier	type		210394	1					
ANR	210412	Identifier	ZEND_INTERNAL_FUNCTION		210394	1					
ANR	210413	CompoundStatement		4:55:87:87	210394	1					
ANR	210414	IfStatement	if ( UNEXPECTED ( ce -> type & ZEND_INTERNAL_CLASS ) )		210394	0					
ANR	210415	Condition	UNEXPECTED ( ce -> type & ZEND_INTERNAL_CLASS )	62:6:2541:2582	210394	0	True				
ANR	210416	CallExpression	UNEXPECTED ( ce -> type & ZEND_INTERNAL_CLASS )		210394	0					
ANR	210417	Callee	UNEXPECTED		210394	0					
ANR	210418	Identifier	UNEXPECTED		210394	0					
ANR	210419	ArgumentList	ce -> type & ZEND_INTERNAL_CLASS		210394	1					
ANR	210420	Argument	ce -> type & ZEND_INTERNAL_CLASS		210394	0					
ANR	210421	BitAndExpression	ce -> type & ZEND_INTERNAL_CLASS		210394	0		&			
ANR	210422	PtrMemberAccess	ce -> type		210394	0					
ANR	210423	Identifier	ce		210394	0					
ANR	210424	Identifier	type		210394	1					
ANR	210425	Identifier	ZEND_INTERNAL_CLASS		210394	1					
ANR	210426	CompoundStatement		5:50:139:139	210394	1					
ANR	210427	ExpressionStatement	"new_function = pemalloc ( sizeof ( zend_internal_function ) , 1 )"	63:3:2590:2648	210394	0	True				
ANR	210428	AssignmentExpression	"new_function = pemalloc ( sizeof ( zend_internal_function ) , 1 )"		210394	0		=			
ANR	210429	Identifier	new_function		210394	0					
ANR	210430	CallExpression	"pemalloc ( sizeof ( zend_internal_function ) , 1 )"		210394	1					
ANR	210431	Callee	pemalloc		210394	0					
ANR	210432	Identifier	pemalloc		210394	0					
ANR	210433	ArgumentList	sizeof ( zend_internal_function )		210394	1					
ANR	210434	Argument	sizeof ( zend_internal_function )		210394	0					
ANR	210435	SizeofExpression	sizeof ( zend_internal_function )		210394	0					
ANR	210436	Sizeof	sizeof		210394	0					
ANR	210437	SizeofOperand	zend_internal_function		210394	1					
ANR	210438	Argument	1		210394	1					
ANR	210439	PrimaryExpression	1		210394	0					
ANR	210440	ExpressionStatement	"memcpy ( new_function , func , sizeof ( zend_internal_function ) )"	64:3:2653:2711	210394	1	True				
ANR	210441	CallExpression	"memcpy ( new_function , func , sizeof ( zend_internal_function ) )"		210394	0					
ANR	210442	Callee	memcpy		210394	0					
ANR	210443	Identifier	memcpy		210394	0					
ANR	210444	ArgumentList	new_function		210394	1					
ANR	210445	Argument	new_function		210394	0					
ANR	210446	Identifier	new_function		210394	0					
ANR	210447	Argument	func		210394	1					
ANR	210448	Identifier	func		210394	0					
ANR	210449	Argument	sizeof ( zend_internal_function )		210394	2					
ANR	210450	SizeofExpression	sizeof ( zend_internal_function )		210394	0					
ANR	210451	Sizeof	sizeof		210394	0					
ANR	210452	SizeofOperand	zend_internal_function		210394	1					
ANR	210453	ElseStatement	else		210394	0					
ANR	210454	CompoundStatement		8:9:276:276	210394	0					
ANR	210455	ExpressionStatement	"new_function = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_internal_function ) )"	66:3:2727:2802	210394	0	True				
ANR	210456	AssignmentExpression	"new_function = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_internal_function ) )"		210394	0		=			
ANR	210457	Identifier	new_function		210394	0					
ANR	210458	CallExpression	"zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_internal_function ) )"		210394	1					
ANR	210459	Callee	zend_arena_alloc		210394	0					
ANR	210460	Identifier	zend_arena_alloc		210394	0					
ANR	210461	ArgumentList	& CG ( arena )		210394	1					
ANR	210462	Argument	& CG ( arena )		210394	0					
ANR	210463	UnaryOperationExpression	& CG ( arena )		210394	0					
ANR	210464	UnaryOperator	&		210394	0					
ANR	210465	CallExpression	CG ( arena )		210394	1					
ANR	210466	Callee	CG		210394	0					
ANR	210467	Identifier	CG		210394	0					
ANR	210468	ArgumentList	arena		210394	1					
ANR	210469	Argument	arena		210394	0					
ANR	210470	Identifier	arena		210394	0					
ANR	210471	Argument	sizeof ( zend_internal_function )		210394	1					
ANR	210472	SizeofExpression	sizeof ( zend_internal_function )		210394	0					
ANR	210473	Sizeof	sizeof		210394	0					
ANR	210474	SizeofOperand	zend_internal_function		210394	1					
ANR	210475	ExpressionStatement	"memcpy ( new_function , func , sizeof ( zend_internal_function ) )"	67:3:2807:2865	210394	1	True				
ANR	210476	CallExpression	"memcpy ( new_function , func , sizeof ( zend_internal_function ) )"		210394	0					
ANR	210477	Callee	memcpy		210394	0					
ANR	210478	Identifier	memcpy		210394	0					
ANR	210479	ArgumentList	new_function		210394	1					
ANR	210480	Argument	new_function		210394	0					
ANR	210481	Identifier	new_function		210394	0					
ANR	210482	Argument	func		210394	1					
ANR	210483	Identifier	func		210394	0					
ANR	210484	Argument	sizeof ( zend_internal_function )		210394	2					
ANR	210485	SizeofExpression	sizeof ( zend_internal_function )		210394	0					
ANR	210486	Sizeof	sizeof		210394	0					
ANR	210487	SizeofOperand	zend_internal_function		210394	1					
ANR	210488	ExpressionStatement	new_function -> common . fn_flags |= ZEND_ACC_ARENA_ALLOCATED	68:3:2870:2927	210394	2	True				
ANR	210489	AssignmentExpression	new_function -> common . fn_flags |= ZEND_ACC_ARENA_ALLOCATED		210394	0		|=			
ANR	210490	MemberAccess	new_function -> common . fn_flags		210394	0					
ANR	210491	PtrMemberAccess	new_function -> common		210394	0					
ANR	210492	Identifier	new_function		210394	0					
ANR	210493	Identifier	common		210394	1					
ANR	210494	Identifier	fn_flags		210394	1					
ANR	210495	Identifier	ZEND_ACC_ARENA_ALLOCATED		210394	1					
ANR	210496	IfStatement	if ( EXPECTED ( new_function -> common . function_name ) )		210394	1					
ANR	210497	Condition	EXPECTED ( new_function -> common . function_name )	70:6:2939:2982	210394	0	True				
ANR	210498	CallExpression	EXPECTED ( new_function -> common . function_name )		210394	0					
ANR	210499	Callee	EXPECTED		210394	0					
ANR	210500	Identifier	EXPECTED		210394	0					
ANR	210501	ArgumentList	new_function -> common . function_name		210394	1					
ANR	210502	Argument	new_function -> common . function_name		210394	0					
ANR	210503	MemberAccess	new_function -> common . function_name		210394	0					
ANR	210504	PtrMemberAccess	new_function -> common		210394	0					
ANR	210505	Identifier	new_function		210394	0					
ANR	210506	Identifier	common		210394	1					
ANR	210507	Identifier	function_name		210394	1					
ANR	210508	CompoundStatement		13:52:539:539	210394	1					
ANR	210509	ExpressionStatement	zend_string_addref ( new_function -> common . function_name )	71:3:2990:3044	210394	0	True				
ANR	210510	CallExpression	zend_string_addref ( new_function -> common . function_name )		210394	0					
ANR	210511	Callee	zend_string_addref		210394	0					
ANR	210512	Identifier	zend_string_addref		210394	0					
ANR	210513	ArgumentList	new_function -> common . function_name		210394	1					
ANR	210514	Argument	new_function -> common . function_name		210394	0					
ANR	210515	MemberAccess	new_function -> common . function_name		210394	0					
ANR	210516	PtrMemberAccess	new_function -> common		210394	0					
ANR	210517	Identifier	new_function		210394	0					
ANR	210518	Identifier	common		210394	1					
ANR	210519	Identifier	function_name		210394	1					
ANR	210520	ElseStatement	else		210394	0					
ANR	210521	CompoundStatement		16:8:612:612	210394	0					
ANR	210522	IfStatement	if ( func -> op_array . refcount )		210394	0					
ANR	210523	Condition	func -> op_array . refcount	74:6:3066:3088	210394	0	True				
ANR	210524	MemberAccess	func -> op_array . refcount		210394	0					
ANR	210525	PtrMemberAccess	func -> op_array		210394	0					
ANR	210526	Identifier	func		210394	0					
ANR	210527	Identifier	op_array		210394	1					
ANR	210528	Identifier	refcount		210394	1					
ANR	210529	CompoundStatement		17:31:645:645	210394	1					
ANR	210530	ExpressionStatement	( * func -> op_array . refcount ) ++	75:3:3096:3124	210394	0	True				
ANR	210531	PostIncDecOperationExpression	( * func -> op_array . refcount ) ++		210394	0					
ANR	210532	UnaryOperationExpression	* func -> op_array . refcount		210394	0					
ANR	210533	UnaryOperator	*		210394	0					
ANR	210534	MemberAccess	func -> op_array . refcount		210394	1					
ANR	210535	PtrMemberAccess	func -> op_array		210394	0					
ANR	210536	Identifier	func		210394	0					
ANR	210537	Identifier	op_array		210394	1					
ANR	210538	Identifier	refcount		210394	1					
ANR	210539	IncDec	++		210394	1					
ANR	210540	IfStatement	if ( EXPECTED ( ! func -> op_array . static_variables ) )		210394	1					
ANR	210541	Condition	EXPECTED ( ! func -> op_array . static_variables )	77:6:3136:3177	210394	0	True				
ANR	210542	CallExpression	EXPECTED ( ! func -> op_array . static_variables )		210394	0					
ANR	210543	Callee	EXPECTED		210394	0					
ANR	210544	Identifier	EXPECTED		210394	0					
ANR	210545	ArgumentList	! func -> op_array . static_variables		210394	1					
ANR	210546	Argument	! func -> op_array . static_variables		210394	0					
ANR	210547	UnaryOperationExpression	! func -> op_array . static_variables		210394	0					
ANR	210548	UnaryOperator	!		210394	0					
ANR	210549	MemberAccess	func -> op_array . static_variables		210394	1					
ANR	210550	PtrMemberAccess	func -> op_array		210394	0					
ANR	210551	Identifier	func		210394	0					
ANR	210552	Identifier	op_array		210394	1					
ANR	210553	Identifier	static_variables		210394	1					
ANR	210554	CompoundStatement		20:50:734:734	210394	1					
ANR	210555	ReturnStatement	return func ;	79:3:3228:3239	210394	0	True				
ANR	210556	Identifier	func		210394	0					
ANR	210557	IfStatement	if ( ! ( GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE ) )		210394	2					
ANR	210558	Condition	! ( GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE )	81:6:3251:3315	210394	0	True				
ANR	210559	UnaryOperationExpression	! ( GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE )		210394	0					
ANR	210560	UnaryOperator	!		210394	0					
ANR	210561	BitAndExpression	GC_FLAGS ( func -> op_array . static_variables ) & IS_ARRAY_IMMUTABLE		210394	1		&			
ANR	210562	CallExpression	GC_FLAGS ( func -> op_array . static_variables )		210394	0					
ANR	210563	Callee	GC_FLAGS		210394	0					
ANR	210564	Identifier	GC_FLAGS		210394	0					
ANR	210565	ArgumentList	func -> op_array . static_variables		210394	1					
ANR	210566	Argument	func -> op_array . static_variables		210394	0					
ANR	210567	MemberAccess	func -> op_array . static_variables		210394	0					
ANR	210568	PtrMemberAccess	func -> op_array		210394	0					
ANR	210569	Identifier	func		210394	0					
ANR	210570	Identifier	op_array		210394	1					
ANR	210571	Identifier	static_variables		210394	1					
ANR	210572	Identifier	IS_ARRAY_IMMUTABLE		210394	1					
ANR	210573	CompoundStatement		24:73:872:872	210394	1					
ANR	210574	ExpressionStatement	GC_REFCOUNT ( func -> op_array . static_variables ) ++	82:3:3323:3369	210394	0	True				
ANR	210575	PostIncDecOperationExpression	GC_REFCOUNT ( func -> op_array . static_variables ) ++		210394	0					
ANR	210576	CallExpression	GC_REFCOUNT ( func -> op_array . static_variables )		210394	0					
ANR	210577	Callee	GC_REFCOUNT		210394	0					
ANR	210578	Identifier	GC_REFCOUNT		210394	0					
ANR	210579	ArgumentList	func -> op_array . static_variables		210394	1					
ANR	210580	Argument	func -> op_array . static_variables		210394	0					
ANR	210581	MemberAccess	func -> op_array . static_variables		210394	0					
ANR	210582	PtrMemberAccess	func -> op_array		210394	0					
ANR	210583	Identifier	func		210394	0					
ANR	210584	Identifier	op_array		210394	1					
ANR	210585	Identifier	static_variables		210394	1					
ANR	210586	IncDec	++		210394	1					
ANR	210587	ExpressionStatement	"new_function = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_op_array ) )"	84:2:3377:3443	210394	3	True				
ANR	210588	AssignmentExpression	"new_function = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_op_array ) )"		210394	0		=			
ANR	210589	Identifier	new_function		210394	0					
ANR	210590	CallExpression	"zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_op_array ) )"		210394	1					
ANR	210591	Callee	zend_arena_alloc		210394	0					
ANR	210592	Identifier	zend_arena_alloc		210394	0					
ANR	210593	ArgumentList	& CG ( arena )		210394	1					
ANR	210594	Argument	& CG ( arena )		210394	0					
ANR	210595	UnaryOperationExpression	& CG ( arena )		210394	0					
ANR	210596	UnaryOperator	&		210394	0					
ANR	210597	CallExpression	CG ( arena )		210394	1					
ANR	210598	Callee	CG		210394	0					
ANR	210599	Identifier	CG		210394	0					
ANR	210600	ArgumentList	arena		210394	1					
ANR	210601	Argument	arena		210394	0					
ANR	210602	Identifier	arena		210394	0					
ANR	210603	Argument	sizeof ( zend_op_array )		210394	1					
ANR	210604	SizeofExpression	sizeof ( zend_op_array )		210394	0					
ANR	210605	Sizeof	sizeof		210394	0					
ANR	210606	SizeofOperand	zend_op_array		210394	1					
ANR	210607	ExpressionStatement	"memcpy ( new_function , func , sizeof ( zend_op_array ) )"	85:2:3447:3496	210394	4	True				
ANR	210608	CallExpression	"memcpy ( new_function , func , sizeof ( zend_op_array ) )"		210394	0					
ANR	210609	Callee	memcpy		210394	0					
ANR	210610	Identifier	memcpy		210394	0					
ANR	210611	ArgumentList	new_function		210394	1					
ANR	210612	Argument	new_function		210394	0					
ANR	210613	Identifier	new_function		210394	0					
ANR	210614	Argument	func		210394	1					
ANR	210615	Identifier	func		210394	0					
ANR	210616	Argument	sizeof ( zend_op_array )		210394	2					
ANR	210617	SizeofExpression	sizeof ( zend_op_array )		210394	0					
ANR	210618	Sizeof	sizeof		210394	0					
ANR	210619	SizeofOperand	zend_op_array		210394	1					
ANR	210620	ReturnStatement	return new_function ;	87:1:3502:3521	210394	2	True				
ANR	210621	Identifier	new_function		210394	0					
ANR	210622	ReturnType	static zend_function *		210394	1					
ANR	210623	Identifier	zend_duplicate_function		210394	2					
ANR	210624	ParameterList	"zend_function * func , zend_class_entry * ce"		210394	3					
ANR	210625	Parameter	zend_function * func	57:46:2392:2410	210394	0	True				
ANR	210626	ParameterType	zend_function *		210394	0					
ANR	210627	Identifier	func		210394	1					
ANR	210628	Parameter	zend_class_entry * ce	57:67:2413:2432	210394	1	True				
ANR	210629	ParameterType	zend_class_entry *		210394	0					
ANR	210630	Identifier	ce		210394	1					
ANR	210631	CFGEntryNode	ENTRY		210394		True				
ANR	210632	CFGExitNode	EXIT		210394		True				
ANR	210633	Symbol	ce -> type		210394						
ANR	210634	Symbol	ZEND_ACC_ARENA_ALLOCATED		210394						
ANR	210635	Symbol	* ce		210394						
ANR	210636	Symbol	arena		210394						
ANR	210637	Symbol	GC_FLAGS		210394						
ANR	210638	Symbol	func -> op_array		210394						
ANR	210639	Symbol	& CG		210394						
ANR	210640	Symbol	UNEXPECTED		210394						
ANR	210641	Symbol	ZEND_INTERNAL_FUNCTION		210394						
ANR	210642	Symbol	func -> type		210394						
ANR	210643	Symbol	GC_REFCOUNT		210394						
ANR	210644	Symbol	ZEND_INTERNAL_CLASS		210394						
ANR	210645	Symbol	ce		210394						
ANR	210646	Symbol	* func		210394						
ANR	210647	Symbol	zend_arena_alloc		210394						
ANR	210648	Symbol	* new_function		210394						
ANR	210649	Symbol	* * func		210394						
ANR	210650	Symbol	* func -> op_array		210394						
ANR	210651	Symbol	new_function -> common		210394						
ANR	210652	Symbol	IS_ARRAY_IMMUTABLE		210394						
ANR	210653	Symbol	new_function		210394						
ANR	210654	Symbol	new_function -> common . function_name		210394						
ANR	210655	Symbol	func		210394						
ANR	210656	Symbol	func -> op_array . refcount		210394						
ANR	210657	Symbol	func -> op_array . static_variables		210394						
ANR	210658	Symbol	new_function -> common . fn_flags		210394						
ANR	210659	Symbol	* func -> op_array . refcount		210394						
ANR	210660	Symbol	EXPECTED		210394						
ANR	210661	Symbol	pemalloc		210394						
ANR	210662	Function	do_inherit_parent_constructor	91:0:3536:5294							
ANR	210663	FunctionDef	do_inherit_parent_constructor (zend_class_entry * ce)		210662	0					
ANR	210664	CompoundStatement		92:0:3610:5294	210662	0					
ANR	210665	ExpressionStatement	ZEND_ASSERT ( ce -> parent != NULL )	93:1:3613:3644	210662	0	True				
ANR	210666	CallExpression	ZEND_ASSERT ( ce -> parent != NULL )		210662	0					
ANR	210667	Callee	ZEND_ASSERT		210662	0					
ANR	210668	Identifier	ZEND_ASSERT		210662	0					
ANR	210669	ArgumentList	ce -> parent != NULL		210662	1					
ANR	210670	Argument	ce -> parent != NULL		210662	0					
ANR	210671	EqualityExpression	ce -> parent != NULL		210662	0		!=			
ANR	210672	PtrMemberAccess	ce -> parent		210662	0					
ANR	210673	Identifier	ce		210662	0					
ANR	210674	Identifier	parent		210662	1					
ANR	210675	Identifier	NULL		210662	1					
ANR	210676	ExpressionStatement	ce -> create_object = ce -> parent -> create_object	96:1:3687:3732	210662	1	True				
ANR	210677	AssignmentExpression	ce -> create_object = ce -> parent -> create_object		210662	0		=			
ANR	210678	PtrMemberAccess	ce -> create_object		210662	0					
ANR	210679	Identifier	ce		210662	0					
ANR	210680	Identifier	create_object		210662	1					
ANR	210681	PtrMemberAccess	ce -> parent -> create_object		210662	1					
ANR	210682	PtrMemberAccess	ce -> parent		210662	0					
ANR	210683	Identifier	ce		210662	0					
ANR	210684	Identifier	parent		210662	1					
ANR	210685	Identifier	create_object		210662	1					
ANR	210686	IfStatement	if ( EXPECTED ( ! ce -> get_iterator ) )		210662	2					
ANR	210687	Condition	EXPECTED ( ! ce -> get_iterator )	99:5:3783:3809	210662	0	True				
ANR	210688	CallExpression	EXPECTED ( ! ce -> get_iterator )		210662	0					
ANR	210689	Callee	EXPECTED		210662	0					
ANR	210690	Identifier	EXPECTED		210662	0					
ANR	210691	ArgumentList	! ce -> get_iterator		210662	1					
ANR	210692	Argument	! ce -> get_iterator		210662	0					
ANR	210693	UnaryOperationExpression	! ce -> get_iterator		210662	0					
ANR	210694	UnaryOperator	!		210662	0					
ANR	210695	PtrMemberAccess	ce -> get_iterator		210662	1					
ANR	210696	Identifier	ce		210662	0					
ANR	210697	Identifier	get_iterator		210662	1					
ANR	210698	CompoundStatement		8:34:201:201	210662	1					
ANR	210699	ExpressionStatement	ce -> get_iterator = ce -> parent -> get_iterator	100:2:3816:3859	210662	0	True				
ANR	210700	AssignmentExpression	ce -> get_iterator = ce -> parent -> get_iterator		210662	0		=			
ANR	210701	PtrMemberAccess	ce -> get_iterator		210662	0					
ANR	210702	Identifier	ce		210662	0					
ANR	210703	Identifier	get_iterator		210662	1					
ANR	210704	PtrMemberAccess	ce -> parent -> get_iterator		210662	1					
ANR	210705	PtrMemberAccess	ce -> parent		210662	0					
ANR	210706	Identifier	ce		210662	0					
ANR	210707	Identifier	parent		210662	1					
ANR	210708	Identifier	get_iterator		210662	1					
ANR	210709	IfStatement	if ( EXPECTED ( ! ce -> iterator_funcs . funcs ) )		210662	3					
ANR	210710	Condition	EXPECTED ( ! ce -> iterator_funcs . funcs )	102:5:3869:3903	210662	0	True				
ANR	210711	CallExpression	EXPECTED ( ! ce -> iterator_funcs . funcs )		210662	0					
ANR	210712	Callee	EXPECTED		210662	0					
ANR	210713	Identifier	EXPECTED		210662	0					
ANR	210714	ArgumentList	! ce -> iterator_funcs . funcs		210662	1					
ANR	210715	Argument	! ce -> iterator_funcs . funcs		210662	0					
ANR	210716	UnaryOperationExpression	! ce -> iterator_funcs . funcs		210662	0					
ANR	210717	UnaryOperator	!		210662	0					
ANR	210718	MemberAccess	ce -> iterator_funcs . funcs		210662	1					
ANR	210719	PtrMemberAccess	ce -> iterator_funcs		210662	0					
ANR	210720	Identifier	ce		210662	0					
ANR	210721	Identifier	iterator_funcs		210662	1					
ANR	210722	Identifier	funcs		210662	1					
ANR	210723	CompoundStatement		11:42:295:295	210662	1					
ANR	210724	ExpressionStatement	ce -> iterator_funcs . funcs = ce -> parent -> iterator_funcs . funcs	103:2:3910:3969	210662	0	True				
ANR	210725	AssignmentExpression	ce -> iterator_funcs . funcs = ce -> parent -> iterator_funcs . funcs		210662	0		=			
ANR	210726	MemberAccess	ce -> iterator_funcs . funcs		210662	0					
ANR	210727	PtrMemberAccess	ce -> iterator_funcs		210662	0					
ANR	210728	Identifier	ce		210662	0					
ANR	210729	Identifier	iterator_funcs		210662	1					
ANR	210730	Identifier	funcs		210662	1					
ANR	210731	MemberAccess	ce -> parent -> iterator_funcs . funcs		210662	1					
ANR	210732	PtrMemberAccess	ce -> parent -> iterator_funcs		210662	0					
ANR	210733	PtrMemberAccess	ce -> parent		210662	0					
ANR	210734	Identifier	ce		210662	0					
ANR	210735	Identifier	parent		210662	1					
ANR	210736	Identifier	iterator_funcs		210662	1					
ANR	210737	Identifier	funcs		210662	1					
ANR	210738	IfStatement	if ( EXPECTED ( ! ce -> __get ) )		210662	4					
ANR	210739	Condition	EXPECTED ( ! ce -> __get )	105:5:3979:3998	210662	0	True				
ANR	210740	CallExpression	EXPECTED ( ! ce -> __get )		210662	0					
ANR	210741	Callee	EXPECTED		210662	0					
ANR	210742	Identifier	EXPECTED		210662	0					
ANR	210743	ArgumentList	! ce -> __get		210662	1					
ANR	210744	Argument	! ce -> __get		210662	0					
ANR	210745	UnaryOperationExpression	! ce -> __get		210662	0					
ANR	210746	UnaryOperator	!		210662	0					
ANR	210747	PtrMemberAccess	ce -> __get		210662	1					
ANR	210748	Identifier	ce		210662	0					
ANR	210749	Identifier	__get		210662	1					
ANR	210750	CompoundStatement		14:27:390:390	210662	1					
ANR	210751	ExpressionStatement	ce -> __get = ce -> parent -> __get	106:2:4005:4034	210662	0	True				
ANR	210752	AssignmentExpression	ce -> __get = ce -> parent -> __get		210662	0		=			
ANR	210753	PtrMemberAccess	ce -> __get		210662	0					
ANR	210754	Identifier	ce		210662	0					
ANR	210755	Identifier	__get		210662	1					
ANR	210756	PtrMemberAccess	ce -> parent -> __get		210662	1					
ANR	210757	PtrMemberAccess	ce -> parent		210662	0					
ANR	210758	Identifier	ce		210662	0					
ANR	210759	Identifier	parent		210662	1					
ANR	210760	Identifier	__get		210662	1					
ANR	210761	IfStatement	if ( EXPECTED ( ! ce -> __set ) )		210662	5					
ANR	210762	Condition	EXPECTED ( ! ce -> __set )	108:5:4044:4063	210662	0	True				
ANR	210763	CallExpression	EXPECTED ( ! ce -> __set )		210662	0					
ANR	210764	Callee	EXPECTED		210662	0					
ANR	210765	Identifier	EXPECTED		210662	0					
ANR	210766	ArgumentList	! ce -> __set		210662	1					
ANR	210767	Argument	! ce -> __set		210662	0					
ANR	210768	UnaryOperationExpression	! ce -> __set		210662	0					
ANR	210769	UnaryOperator	!		210662	0					
ANR	210770	PtrMemberAccess	ce -> __set		210662	1					
ANR	210771	Identifier	ce		210662	0					
ANR	210772	Identifier	__set		210662	1					
ANR	210773	CompoundStatement		17:27:455:455	210662	1					
ANR	210774	ExpressionStatement	ce -> __set = ce -> parent -> __set	109:2:4070:4099	210662	0	True				
ANR	210775	AssignmentExpression	ce -> __set = ce -> parent -> __set		210662	0		=			
ANR	210776	PtrMemberAccess	ce -> __set		210662	0					
ANR	210777	Identifier	ce		210662	0					
ANR	210778	Identifier	__set		210662	1					
ANR	210779	PtrMemberAccess	ce -> parent -> __set		210662	1					
ANR	210780	PtrMemberAccess	ce -> parent		210662	0					
ANR	210781	Identifier	ce		210662	0					
ANR	210782	Identifier	parent		210662	1					
ANR	210783	Identifier	__set		210662	1					
ANR	210784	IfStatement	if ( EXPECTED ( ! ce -> __unset ) )		210662	6					
ANR	210785	Condition	EXPECTED ( ! ce -> __unset )	111:5:4109:4130	210662	0	True				
ANR	210786	CallExpression	EXPECTED ( ! ce -> __unset )		210662	0					
ANR	210787	Callee	EXPECTED		210662	0					
ANR	210788	Identifier	EXPECTED		210662	0					
ANR	210789	ArgumentList	! ce -> __unset		210662	1					
ANR	210790	Argument	! ce -> __unset		210662	0					
ANR	210791	UnaryOperationExpression	! ce -> __unset		210662	0					
ANR	210792	UnaryOperator	!		210662	0					
ANR	210793	PtrMemberAccess	ce -> __unset		210662	1					
ANR	210794	Identifier	ce		210662	0					
ANR	210795	Identifier	__unset		210662	1					
ANR	210796	CompoundStatement		20:29:522:522	210662	1					
ANR	210797	ExpressionStatement	ce -> __unset = ce -> parent -> __unset	112:2:4137:4170	210662	0	True				
ANR	210798	AssignmentExpression	ce -> __unset = ce -> parent -> __unset		210662	0		=			
ANR	210799	PtrMemberAccess	ce -> __unset		210662	0					
ANR	210800	Identifier	ce		210662	0					
ANR	210801	Identifier	__unset		210662	1					
ANR	210802	PtrMemberAccess	ce -> parent -> __unset		210662	1					
ANR	210803	PtrMemberAccess	ce -> parent		210662	0					
ANR	210804	Identifier	ce		210662	0					
ANR	210805	Identifier	parent		210662	1					
ANR	210806	Identifier	__unset		210662	1					
ANR	210807	IfStatement	if ( EXPECTED ( ! ce -> __isset ) )		210662	7					
ANR	210808	Condition	EXPECTED ( ! ce -> __isset )	114:5:4180:4201	210662	0	True				
ANR	210809	CallExpression	EXPECTED ( ! ce -> __isset )		210662	0					
ANR	210810	Callee	EXPECTED		210662	0					
ANR	210811	Identifier	EXPECTED		210662	0					
ANR	210812	ArgumentList	! ce -> __isset		210662	1					
ANR	210813	Argument	! ce -> __isset		210662	0					
ANR	210814	UnaryOperationExpression	! ce -> __isset		210662	0					
ANR	210815	UnaryOperator	!		210662	0					
ANR	210816	PtrMemberAccess	ce -> __isset		210662	1					
ANR	210817	Identifier	ce		210662	0					
ANR	210818	Identifier	__isset		210662	1					
ANR	210819	CompoundStatement		23:29:593:593	210662	1					
ANR	210820	ExpressionStatement	ce -> __isset = ce -> parent -> __isset	115:2:4208:4241	210662	0	True				
ANR	210821	AssignmentExpression	ce -> __isset = ce -> parent -> __isset		210662	0		=			
ANR	210822	PtrMemberAccess	ce -> __isset		210662	0					
ANR	210823	Identifier	ce		210662	0					
ANR	210824	Identifier	__isset		210662	1					
ANR	210825	PtrMemberAccess	ce -> parent -> __isset		210662	1					
ANR	210826	PtrMemberAccess	ce -> parent		210662	0					
ANR	210827	Identifier	ce		210662	0					
ANR	210828	Identifier	parent		210662	1					
ANR	210829	Identifier	__isset		210662	1					
ANR	210830	IfStatement	if ( EXPECTED ( ! ce -> __call ) )		210662	8					
ANR	210831	Condition	EXPECTED ( ! ce -> __call )	117:5:4251:4271	210662	0	True				
ANR	210832	CallExpression	EXPECTED ( ! ce -> __call )		210662	0					
ANR	210833	Callee	EXPECTED		210662	0					
ANR	210834	Identifier	EXPECTED		210662	0					
ANR	210835	ArgumentList	! ce -> __call		210662	1					
ANR	210836	Argument	! ce -> __call		210662	0					
ANR	210837	UnaryOperationExpression	! ce -> __call		210662	0					
ANR	210838	UnaryOperator	!		210662	0					
ANR	210839	PtrMemberAccess	ce -> __call		210662	1					
ANR	210840	Identifier	ce		210662	0					
ANR	210841	Identifier	__call		210662	1					
ANR	210842	CompoundStatement		26:28:663:663	210662	1					
ANR	210843	ExpressionStatement	ce -> __call = ce -> parent -> __call	118:2:4278:4309	210662	0	True				
ANR	210844	AssignmentExpression	ce -> __call = ce -> parent -> __call		210662	0		=			
ANR	210845	PtrMemberAccess	ce -> __call		210662	0					
ANR	210846	Identifier	ce		210662	0					
ANR	210847	Identifier	__call		210662	1					
ANR	210848	PtrMemberAccess	ce -> parent -> __call		210662	1					
ANR	210849	PtrMemberAccess	ce -> parent		210662	0					
ANR	210850	Identifier	ce		210662	0					
ANR	210851	Identifier	parent		210662	1					
ANR	210852	Identifier	__call		210662	1					
ANR	210853	IfStatement	if ( EXPECTED ( ! ce -> __callstatic ) )		210662	9					
ANR	210854	Condition	EXPECTED ( ! ce -> __callstatic )	120:5:4319:4345	210662	0	True				
ANR	210855	CallExpression	EXPECTED ( ! ce -> __callstatic )		210662	0					
ANR	210856	Callee	EXPECTED		210662	0					
ANR	210857	Identifier	EXPECTED		210662	0					
ANR	210858	ArgumentList	! ce -> __callstatic		210662	1					
ANR	210859	Argument	! ce -> __callstatic		210662	0					
ANR	210860	UnaryOperationExpression	! ce -> __callstatic		210662	0					
ANR	210861	UnaryOperator	!		210662	0					
ANR	210862	PtrMemberAccess	ce -> __callstatic		210662	1					
ANR	210863	Identifier	ce		210662	0					
ANR	210864	Identifier	__callstatic		210662	1					
ANR	210865	CompoundStatement		29:34:737:737	210662	1					
ANR	210866	ExpressionStatement	ce -> __callstatic = ce -> parent -> __callstatic	121:2:4352:4395	210662	0	True				
ANR	210867	AssignmentExpression	ce -> __callstatic = ce -> parent -> __callstatic		210662	0		=			
ANR	210868	PtrMemberAccess	ce -> __callstatic		210662	0					
ANR	210869	Identifier	ce		210662	0					
ANR	210870	Identifier	__callstatic		210662	1					
ANR	210871	PtrMemberAccess	ce -> parent -> __callstatic		210662	1					
ANR	210872	PtrMemberAccess	ce -> parent		210662	0					
ANR	210873	Identifier	ce		210662	0					
ANR	210874	Identifier	parent		210662	1					
ANR	210875	Identifier	__callstatic		210662	1					
ANR	210876	IfStatement	if ( EXPECTED ( ! ce -> __tostring ) )		210662	10					
ANR	210877	Condition	EXPECTED ( ! ce -> __tostring )	123:5:4405:4429	210662	0	True				
ANR	210878	CallExpression	EXPECTED ( ! ce -> __tostring )		210662	0					
ANR	210879	Callee	EXPECTED		210662	0					
ANR	210880	Identifier	EXPECTED		210662	0					
ANR	210881	ArgumentList	! ce -> __tostring		210662	1					
ANR	210882	Argument	! ce -> __tostring		210662	0					
ANR	210883	UnaryOperationExpression	! ce -> __tostring		210662	0					
ANR	210884	UnaryOperator	!		210662	0					
ANR	210885	PtrMemberAccess	ce -> __tostring		210662	1					
ANR	210886	Identifier	ce		210662	0					
ANR	210887	Identifier	__tostring		210662	1					
ANR	210888	CompoundStatement		32:32:821:821	210662	1					
ANR	210889	ExpressionStatement	ce -> __tostring = ce -> parent -> __tostring	124:2:4436:4475	210662	0	True				
ANR	210890	AssignmentExpression	ce -> __tostring = ce -> parent -> __tostring		210662	0		=			
ANR	210891	PtrMemberAccess	ce -> __tostring		210662	0					
ANR	210892	Identifier	ce		210662	0					
ANR	210893	Identifier	__tostring		210662	1					
ANR	210894	PtrMemberAccess	ce -> parent -> __tostring		210662	1					
ANR	210895	PtrMemberAccess	ce -> parent		210662	0					
ANR	210896	Identifier	ce		210662	0					
ANR	210897	Identifier	parent		210662	1					
ANR	210898	Identifier	__tostring		210662	1					
ANR	210899	IfStatement	if ( EXPECTED ( ! ce -> clone ) )		210662	11					
ANR	210900	Condition	EXPECTED ( ! ce -> clone )	126:5:4485:4504	210662	0	True				
ANR	210901	CallExpression	EXPECTED ( ! ce -> clone )		210662	0					
ANR	210902	Callee	EXPECTED		210662	0					
ANR	210903	Identifier	EXPECTED		210662	0					
ANR	210904	ArgumentList	! ce -> clone		210662	1					
ANR	210905	Argument	! ce -> clone		210662	0					
ANR	210906	UnaryOperationExpression	! ce -> clone		210662	0					
ANR	210907	UnaryOperator	!		210662	0					
ANR	210908	PtrMemberAccess	ce -> clone		210662	1					
ANR	210909	Identifier	ce		210662	0					
ANR	210910	Identifier	clone		210662	1					
ANR	210911	CompoundStatement		35:27:896:896	210662	1					
ANR	210912	ExpressionStatement	ce -> clone = ce -> parent -> clone	127:2:4511:4540	210662	0	True				
ANR	210913	AssignmentExpression	ce -> clone = ce -> parent -> clone		210662	0		=			
ANR	210914	PtrMemberAccess	ce -> clone		210662	0					
ANR	210915	Identifier	ce		210662	0					
ANR	210916	Identifier	clone		210662	1					
ANR	210917	PtrMemberAccess	ce -> parent -> clone		210662	1					
ANR	210918	PtrMemberAccess	ce -> parent		210662	0					
ANR	210919	Identifier	ce		210662	0					
ANR	210920	Identifier	parent		210662	1					
ANR	210921	Identifier	clone		210662	1					
ANR	210922	IfStatement	if ( EXPECTED ( ! ce -> serialize ) )		210662	12					
ANR	210923	Condition	EXPECTED ( ! ce -> serialize )	129:5:4550:4573	210662	0	True				
ANR	210924	CallExpression	EXPECTED ( ! ce -> serialize )		210662	0					
ANR	210925	Callee	EXPECTED		210662	0					
ANR	210926	Identifier	EXPECTED		210662	0					
ANR	210927	ArgumentList	! ce -> serialize		210662	1					
ANR	210928	Argument	! ce -> serialize		210662	0					
ANR	210929	UnaryOperationExpression	! ce -> serialize		210662	0					
ANR	210930	UnaryOperator	!		210662	0					
ANR	210931	PtrMemberAccess	ce -> serialize		210662	1					
ANR	210932	Identifier	ce		210662	0					
ANR	210933	Identifier	serialize		210662	1					
ANR	210934	CompoundStatement		38:31:965:965	210662	1					
ANR	210935	ExpressionStatement	ce -> serialize = ce -> parent -> serialize	130:2:4580:4617	210662	0	True				
ANR	210936	AssignmentExpression	ce -> serialize = ce -> parent -> serialize		210662	0		=			
ANR	210937	PtrMemberAccess	ce -> serialize		210662	0					
ANR	210938	Identifier	ce		210662	0					
ANR	210939	Identifier	serialize		210662	1					
ANR	210940	PtrMemberAccess	ce -> parent -> serialize		210662	1					
ANR	210941	PtrMemberAccess	ce -> parent		210662	0					
ANR	210942	Identifier	ce		210662	0					
ANR	210943	Identifier	parent		210662	1					
ANR	210944	Identifier	serialize		210662	1					
ANR	210945	IfStatement	if ( EXPECTED ( ! ce -> unserialize ) )		210662	13					
ANR	210946	Condition	EXPECTED ( ! ce -> unserialize )	132:5:4627:4652	210662	0	True				
ANR	210947	CallExpression	EXPECTED ( ! ce -> unserialize )		210662	0					
ANR	210948	Callee	EXPECTED		210662	0					
ANR	210949	Identifier	EXPECTED		210662	0					
ANR	210950	ArgumentList	! ce -> unserialize		210662	1					
ANR	210951	Argument	! ce -> unserialize		210662	0					
ANR	210952	UnaryOperationExpression	! ce -> unserialize		210662	0					
ANR	210953	UnaryOperator	!		210662	0					
ANR	210954	PtrMemberAccess	ce -> unserialize		210662	1					
ANR	210955	Identifier	ce		210662	0					
ANR	210956	Identifier	unserialize		210662	1					
ANR	210957	CompoundStatement		41:33:1044:1044	210662	1					
ANR	210958	ExpressionStatement	ce -> unserialize = ce -> parent -> unserialize	133:2:4659:4700	210662	0	True				
ANR	210959	AssignmentExpression	ce -> unserialize = ce -> parent -> unserialize		210662	0		=			
ANR	210960	PtrMemberAccess	ce -> unserialize		210662	0					
ANR	210961	Identifier	ce		210662	0					
ANR	210962	Identifier	unserialize		210662	1					
ANR	210963	PtrMemberAccess	ce -> parent -> unserialize		210662	1					
ANR	210964	PtrMemberAccess	ce -> parent		210662	0					
ANR	210965	Identifier	ce		210662	0					
ANR	210966	Identifier	parent		210662	1					
ANR	210967	Identifier	unserialize		210662	1					
ANR	210968	IfStatement	if ( ! ce -> destructor )		210662	14					
ANR	210969	Condition	! ce -> destructor	135:5:4710:4724	210662	0	True				
ANR	210970	UnaryOperationExpression	! ce -> destructor		210662	0					
ANR	210971	UnaryOperator	!		210662	0					
ANR	210972	PtrMemberAccess	ce -> destructor		210662	1					
ANR	210973	Identifier	ce		210662	0					
ANR	210974	Identifier	destructor		210662	1					
ANR	210975	CompoundStatement		44:22:1116:1116	210662	1					
ANR	210976	ExpressionStatement	ce -> destructor = ce -> parent -> destructor	136:2:4731:4770	210662	0	True				
ANR	210977	AssignmentExpression	ce -> destructor = ce -> parent -> destructor		210662	0		=			
ANR	210978	PtrMemberAccess	ce -> destructor		210662	0					
ANR	210979	Identifier	ce		210662	0					
ANR	210980	Identifier	destructor		210662	1					
ANR	210981	PtrMemberAccess	ce -> parent -> destructor		210662	1					
ANR	210982	PtrMemberAccess	ce -> parent		210662	0					
ANR	210983	Identifier	ce		210662	0					
ANR	210984	Identifier	parent		210662	1					
ANR	210985	Identifier	destructor		210662	1					
ANR	210986	IfStatement	if ( EXPECTED ( ! ce -> __debugInfo ) )		210662	15					
ANR	210987	Condition	EXPECTED ( ! ce -> __debugInfo )	138:5:4780:4805	210662	0	True				
ANR	210988	CallExpression	EXPECTED ( ! ce -> __debugInfo )		210662	0					
ANR	210989	Callee	EXPECTED		210662	0					
ANR	210990	Identifier	EXPECTED		210662	0					
ANR	210991	ArgumentList	! ce -> __debugInfo		210662	1					
ANR	210992	Argument	! ce -> __debugInfo		210662	0					
ANR	210993	UnaryOperationExpression	! ce -> __debugInfo		210662	0					
ANR	210994	UnaryOperator	!		210662	0					
ANR	210995	PtrMemberAccess	ce -> __debugInfo		210662	1					
ANR	210996	Identifier	ce		210662	0					
ANR	210997	Identifier	__debugInfo		210662	1					
ANR	210998	CompoundStatement		47:33:1197:1197	210662	1					
ANR	210999	ExpressionStatement	ce -> __debugInfo = ce -> parent -> __debugInfo	139:2:4812:4853	210662	0	True				
ANR	211000	AssignmentExpression	ce -> __debugInfo = ce -> parent -> __debugInfo		210662	0		=			
ANR	211001	PtrMemberAccess	ce -> __debugInfo		210662	0					
ANR	211002	Identifier	ce		210662	0					
ANR	211003	Identifier	__debugInfo		210662	1					
ANR	211004	PtrMemberAccess	ce -> parent -> __debugInfo		210662	1					
ANR	211005	PtrMemberAccess	ce -> parent		210662	0					
ANR	211006	Identifier	ce		210662	0					
ANR	211007	Identifier	parent		210662	1					
ANR	211008	Identifier	__debugInfo		210662	1					
ANR	211009	IfStatement	if ( ce -> constructor )		210662	16					
ANR	211010	Condition	ce -> constructor	142:5:4864:4878	210662	0	True				
ANR	211011	PtrMemberAccess	ce -> constructor		210662	0					
ANR	211012	Identifier	ce		210662	0					
ANR	211013	Identifier	constructor		210662	1					
ANR	211014	CompoundStatement		51:22:1270:1270	210662	1					
ANR	211015	IfStatement	if ( ce -> parent -> constructor && UNEXPECTED ( ce -> parent -> constructor -> common . fn_flags & ZEND_ACC_FINAL ) )		210662	0					
ANR	211016	Condition	ce -> parent -> constructor && UNEXPECTED ( ce -> parent -> constructor -> common . fn_flags & ZEND_ACC_FINAL )	143:6:4889:4984	210662	0	True				
ANR	211017	AndExpression	ce -> parent -> constructor && UNEXPECTED ( ce -> parent -> constructor -> common . fn_flags & ZEND_ACC_FINAL )		210662	0		&&			
ANR	211018	PtrMemberAccess	ce -> parent -> constructor		210662	0					
ANR	211019	PtrMemberAccess	ce -> parent		210662	0					
ANR	211020	Identifier	ce		210662	0					
ANR	211021	Identifier	parent		210662	1					
ANR	211022	Identifier	constructor		210662	1					
ANR	211023	CallExpression	UNEXPECTED ( ce -> parent -> constructor -> common . fn_flags & ZEND_ACC_FINAL )		210662	1					
ANR	211024	Callee	UNEXPECTED		210662	0					
ANR	211025	Identifier	UNEXPECTED		210662	0					
ANR	211026	ArgumentList	ce -> parent -> constructor -> common . fn_flags & ZEND_ACC_FINAL		210662	1					
ANR	211027	Argument	ce -> parent -> constructor -> common . fn_flags & ZEND_ACC_FINAL		210662	0					
ANR	211028	BitAndExpression	ce -> parent -> constructor -> common . fn_flags & ZEND_ACC_FINAL		210662	0		&			
ANR	211029	MemberAccess	ce -> parent -> constructor -> common . fn_flags		210662	0					
ANR	211030	PtrMemberAccess	ce -> parent -> constructor -> common		210662	0					
ANR	211031	PtrMemberAccess	ce -> parent -> constructor		210662	0					
ANR	211032	PtrMemberAccess	ce -> parent		210662	0					
ANR	211033	Identifier	ce		210662	0					
ANR	211034	Identifier	parent		210662	1					
ANR	211035	Identifier	constructor		210662	1					
ANR	211036	Identifier	common		210662	1					
ANR	211037	Identifier	fn_flags		210662	1					
ANR	211038	Identifier	ZEND_ACC_FINAL		210662	1					
ANR	211039	CompoundStatement		52:104:1376:1376	210662	1					
ANR	211040	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Cannot override final %s::%s() with %s::%s()"" , ZSTR_VAL ( ce -> parent -> name ) , ZSTR_VAL ( ce -> parent -> constructor -> common . function_name ) , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( ce -> constructor -> common . function_name ) )"	144:3:4992:5230	210662	0	True				
ANR	211041	CallExpression	"zend_error_noreturn ( E_ERROR , ""Cannot override final %s::%s() with %s::%s()"" , ZSTR_VAL ( ce -> parent -> name ) , ZSTR_VAL ( ce -> parent -> constructor -> common . function_name ) , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( ce -> constructor -> common . function_name ) )"		210662	0					
ANR	211042	Callee	zend_error_noreturn		210662	0					
ANR	211043	Identifier	zend_error_noreturn		210662	0					
ANR	211044	ArgumentList	E_ERROR		210662	1					
ANR	211045	Argument	E_ERROR		210662	0					
ANR	211046	Identifier	E_ERROR		210662	0					
ANR	211047	Argument	"""Cannot override final %s::%s() with %s::%s()"""		210662	1					
ANR	211048	PrimaryExpression	"""Cannot override final %s::%s() with %s::%s()"""		210662	0					
ANR	211049	Argument	ZSTR_VAL ( ce -> parent -> name )		210662	2					
ANR	211050	CallExpression	ZSTR_VAL ( ce -> parent -> name )		210662	0					
ANR	211051	Callee	ZSTR_VAL		210662	0					
ANR	211052	Identifier	ZSTR_VAL		210662	0					
ANR	211053	ArgumentList	ce -> parent -> name		210662	1					
ANR	211054	Argument	ce -> parent -> name		210662	0					
ANR	211055	PtrMemberAccess	ce -> parent -> name		210662	0					
ANR	211056	PtrMemberAccess	ce -> parent		210662	0					
ANR	211057	Identifier	ce		210662	0					
ANR	211058	Identifier	parent		210662	1					
ANR	211059	Identifier	name		210662	1					
ANR	211060	Argument	ZSTR_VAL ( ce -> parent -> constructor -> common . function_name )		210662	3					
ANR	211061	CallExpression	ZSTR_VAL ( ce -> parent -> constructor -> common . function_name )		210662	0					
ANR	211062	Callee	ZSTR_VAL		210662	0					
ANR	211063	Identifier	ZSTR_VAL		210662	0					
ANR	211064	ArgumentList	ce -> parent -> constructor -> common . function_name		210662	1					
ANR	211065	Argument	ce -> parent -> constructor -> common . function_name		210662	0					
ANR	211066	MemberAccess	ce -> parent -> constructor -> common . function_name		210662	0					
ANR	211067	PtrMemberAccess	ce -> parent -> constructor -> common		210662	0					
ANR	211068	PtrMemberAccess	ce -> parent -> constructor		210662	0					
ANR	211069	PtrMemberAccess	ce -> parent		210662	0					
ANR	211070	Identifier	ce		210662	0					
ANR	211071	Identifier	parent		210662	1					
ANR	211072	Identifier	constructor		210662	1					
ANR	211073	Identifier	common		210662	1					
ANR	211074	Identifier	function_name		210662	1					
ANR	211075	Argument	ZSTR_VAL ( ce -> name )		210662	4					
ANR	211076	CallExpression	ZSTR_VAL ( ce -> name )		210662	0					
ANR	211077	Callee	ZSTR_VAL		210662	0					
ANR	211078	Identifier	ZSTR_VAL		210662	0					
ANR	211079	ArgumentList	ce -> name		210662	1					
ANR	211080	Argument	ce -> name		210662	0					
ANR	211081	PtrMemberAccess	ce -> name		210662	0					
ANR	211082	Identifier	ce		210662	0					
ANR	211083	Identifier	name		210662	1					
ANR	211084	Argument	ZSTR_VAL ( ce -> constructor -> common . function_name )		210662	5					
ANR	211085	CallExpression	ZSTR_VAL ( ce -> constructor -> common . function_name )		210662	0					
ANR	211086	Callee	ZSTR_VAL		210662	0					
ANR	211087	Identifier	ZSTR_VAL		210662	0					
ANR	211088	ArgumentList	ce -> constructor -> common . function_name		210662	1					
ANR	211089	Argument	ce -> constructor -> common . function_name		210662	0					
ANR	211090	MemberAccess	ce -> constructor -> common . function_name		210662	0					
ANR	211091	PtrMemberAccess	ce -> constructor -> common		210662	0					
ANR	211092	PtrMemberAccess	ce -> constructor		210662	0					
ANR	211093	Identifier	ce		210662	0					
ANR	211094	Identifier	constructor		210662	1					
ANR	211095	Identifier	common		210662	1					
ANR	211096	Identifier	function_name		210662	1					
ANR	211097	ReturnStatement	return ;	148:2:5238:5244	210662	1	True				
ANR	211098	ExpressionStatement	ce -> constructor = ce -> parent -> constructor	151:1:5251:5292	210662	17	True				
ANR	211099	AssignmentExpression	ce -> constructor = ce -> parent -> constructor		210662	0		=			
ANR	211100	PtrMemberAccess	ce -> constructor		210662	0					
ANR	211101	Identifier	ce		210662	0					
ANR	211102	Identifier	constructor		210662	1					
ANR	211103	PtrMemberAccess	ce -> parent -> constructor		210662	1					
ANR	211104	PtrMemberAccess	ce -> parent		210662	0					
ANR	211105	Identifier	ce		210662	0					
ANR	211106	Identifier	parent		210662	1					
ANR	211107	Identifier	constructor		210662	1					
ANR	211108	ReturnType	static void		210662	1					
ANR	211109	Identifier	do_inherit_parent_constructor		210662	2					
ANR	211110	ParameterList	zend_class_entry * ce		210662	3					
ANR	211111	Parameter	zend_class_entry * ce	91:42:3578:3597	210662	0	True				
ANR	211112	ParameterType	zend_class_entry *		210662	0					
ANR	211113	Identifier	ce		210662	1					
ANR	211114	CFGEntryNode	ENTRY		210662		True				
ANR	211115	CFGExitNode	EXIT		210662		True				
ANR	211116	Symbol	ce -> constructor -> common . function_name		210662						
ANR	211117	Symbol	ce -> __set		210662						
ANR	211118	Symbol	ce -> parent -> destructor		210662						
ANR	211119	Symbol	ce -> parent -> constructor -> common . fn_flags		210662						
ANR	211120	Symbol	ce -> parent -> clone		210662						
ANR	211121	Symbol	* ce -> constructor		210662						
ANR	211122	Symbol	* ce		210662						
ANR	211123	Symbol	ce -> unserialize		210662						
ANR	211124	Symbol	ce -> __tostring		210662						
ANR	211125	Symbol	* ce -> parent		210662						
ANR	211126	Symbol	ce -> __get		210662						
ANR	211127	Symbol	ce -> parent -> constructor -> common . function_name		210662						
ANR	211128	Symbol	* * ce -> parent		210662						
ANR	211129	Symbol	ce -> name		210662						
ANR	211130	Symbol	ce -> __callstatic		210662						
ANR	211131	Symbol	ce -> parent -> iterator_funcs . funcs		210662						
ANR	211132	Symbol	ce -> parent -> constructor		210662						
ANR	211133	Symbol	NULL		210662						
ANR	211134	Symbol	ce -> parent -> __set		210662						
ANR	211135	Symbol	ce -> destructor		210662						
ANR	211136	Symbol	ce -> __isset		210662						
ANR	211137	Symbol	ce -> parent		210662						
ANR	211138	Symbol	ce -> parent -> name		210662						
ANR	211139	Symbol	ce -> parent -> constructor -> common		210662						
ANR	211140	Symbol	ce -> __debugInfo		210662						
ANR	211141	Symbol	ce -> parent -> __callstatic		210662						
ANR	211142	Symbol	ce -> parent -> __get		210662						
ANR	211143	Symbol	ce -> __call		210662						
ANR	211144	Symbol	ce -> get_iterator		210662						
ANR	211145	Symbol	ce -> clone		210662						
ANR	211146	Symbol	* * * ce		210662						
ANR	211147	Symbol	ce -> parent -> iterator_funcs		210662						
ANR	211148	Symbol	* * ce		210662						
ANR	211149	Symbol	ce -> constructor -> common		210662						
ANR	211150	Symbol	ZEND_ACC_FINAL		210662						
ANR	211151	Symbol	UNEXPECTED		210662						
ANR	211152	Symbol	ce -> parent -> __call		210662						
ANR	211153	Symbol	ce -> parent -> __debugInfo		210662						
ANR	211154	Symbol	* ce -> parent -> constructor		210662						
ANR	211155	Symbol	ce -> parent -> get_iterator		210662						
ANR	211156	Symbol	ce -> parent -> __unset		210662						
ANR	211157	Symbol	ce -> parent -> unserialize		210662						
ANR	211158	Symbol	ce -> parent -> create_object		210662						
ANR	211159	Symbol	ce		210662						
ANR	211160	Symbol	ce -> constructor		210662						
ANR	211161	Symbol	ZSTR_VAL		210662						
ANR	211162	Symbol	ce -> __unset		210662						
ANR	211163	Symbol	E_ERROR		210662						
ANR	211164	Symbol	ce -> iterator_funcs		210662						
ANR	211165	Symbol	ce -> parent -> __isset		210662						
ANR	211166	Symbol	ce -> serialize		210662						
ANR	211167	Symbol	ce -> parent -> __tostring		210662						
ANR	211168	Symbol	ce -> parent -> serialize		210662						
ANR	211169	Symbol	ce -> create_object		210662						
ANR	211170	Symbol	EXPECTED		210662						
ANR	211171	Symbol	ce -> iterator_funcs . funcs		210662						
ANR	211172	Function	zend_visibility_string	155:0:5307:5558							
ANR	211173	FunctionDef	zend_visibility_string (uint32_t fn_flags)		211172	0					
ANR	211174	CompoundStatement		156:0:5365:5558	211172	0					
ANR	211175	IfStatement	if ( fn_flags & ZEND_ACC_PRIVATE )		211172	0					
ANR	211176	Condition	fn_flags & ZEND_ACC_PRIVATE	157:5:5372:5398	211172	0	True				
ANR	211177	BitAndExpression	fn_flags & ZEND_ACC_PRIVATE		211172	0		&			
ANR	211178	Identifier	fn_flags		211172	0					
ANR	211179	Identifier	ZEND_ACC_PRIVATE		211172	1					
ANR	211180	CompoundStatement		2:34:35:35	211172	1					
ANR	211181	ReturnStatement	"return ""private"" ;"	158:2:5405:5421	211172	0	True				
ANR	211182	PrimaryExpression	"""private"""		211172	0					
ANR	211183	IfStatement	if ( fn_flags & ZEND_ACC_PROTECTED )		211172	1					
ANR	211184	Condition	fn_flags & ZEND_ACC_PROTECTED	160:5:5431:5459	211172	0	True				
ANR	211185	BitAndExpression	fn_flags & ZEND_ACC_PROTECTED		211172	0		&			
ANR	211186	Identifier	fn_flags		211172	0					
ANR	211187	Identifier	ZEND_ACC_PROTECTED		211172	1					
ANR	211188	CompoundStatement		5:36:96:96	211172	1					
ANR	211189	ReturnStatement	"return ""protected"" ;"	161:2:5466:5484	211172	0	True				
ANR	211190	PrimaryExpression	"""protected"""		211172	0					
ANR	211191	IfStatement	if ( fn_flags & ZEND_ACC_PUBLIC )		211172	2					
ANR	211192	Condition	fn_flags & ZEND_ACC_PUBLIC	163:5:5494:5519	211172	0	True				
ANR	211193	BitAndExpression	fn_flags & ZEND_ACC_PUBLIC		211172	0		&			
ANR	211194	Identifier	fn_flags		211172	0					
ANR	211195	Identifier	ZEND_ACC_PUBLIC		211172	1					
ANR	211196	CompoundStatement		8:33:156:156	211172	1					
ANR	211197	ReturnStatement	"return ""public"" ;"	164:2:5526:5541	211172	0	True				
ANR	211198	PrimaryExpression	"""public"""		211172	0					
ANR	211199	ReturnStatement	"return """" ;"	166:1:5547:5556	211172	3	True				
ANR	211200	PrimaryExpression	""""""		211172	0					
ANR	211201	ReturnType	char *		211172	1					
ANR	211202	Identifier	zend_visibility_string		211172	2					
ANR	211203	ParameterList	uint32_t fn_flags		211172	3					
ANR	211204	Parameter	uint32_t fn_flags	155:29:5336:5352	211172	0	True				
ANR	211205	ParameterType	uint32_t		211172	0					
ANR	211206	Identifier	fn_flags		211172	1					
ANR	211207	CFGEntryNode	ENTRY		211172		True				
ANR	211208	CFGExitNode	EXIT		211172		True				
ANR	211209	Symbol	fn_flags		211172						
ANR	211210	Symbol	ZEND_ACC_PUBLIC		211172						
ANR	211211	Symbol	ZEND_ACC_PROTECTED		211172						
ANR	211212	Symbol	ZEND_ACC_PRIVATE		211172						
ANR	211213	Function	zend_do_perform_type_hint_check	170:0:5571:8269							
ANR	211214	FunctionDef	"zend_do_perform_type_hint_check (const zend_function * fe , zend_arg_info * fe_arg_info , const zend_function * proto , zend_arg_info * proto_arg_info)"		211213	0					
ANR	211215	CompoundStatement		171:0:5736:8269	211213	0					
ANR	211216	IfStatement	"if ( ZEND_LOG_XOR ( fe_arg_info -> class_name , proto_arg_info -> class_name ) )"		211213	0					
ANR	211217	Condition	"ZEND_LOG_XOR ( fe_arg_info -> class_name , proto_arg_info -> class_name )"	172:5:5743:5807	211213	0	True				
ANR	211218	CallExpression	"ZEND_LOG_XOR ( fe_arg_info -> class_name , proto_arg_info -> class_name )"		211213	0					
ANR	211219	Callee	ZEND_LOG_XOR		211213	0					
ANR	211220	Identifier	ZEND_LOG_XOR		211213	0					
ANR	211221	ArgumentList	fe_arg_info -> class_name		211213	1					
ANR	211222	Argument	fe_arg_info -> class_name		211213	0					
ANR	211223	PtrMemberAccess	fe_arg_info -> class_name		211213	0					
ANR	211224	Identifier	fe_arg_info		211213	0					
ANR	211225	Identifier	class_name		211213	1					
ANR	211226	Argument	proto_arg_info -> class_name		211213	1					
ANR	211227	PtrMemberAccess	proto_arg_info -> class_name		211213	0					
ANR	211228	Identifier	proto_arg_info		211213	0					
ANR	211229	Identifier	class_name		211213	1					
ANR	211230	CompoundStatement		2:72:73:73	211213	1					
ANR	211231	ReturnStatement	return 0 ;	174:2:5873:5881	211213	0	True				
ANR	211232	PrimaryExpression	0		211213	0					
ANR	211233	IfStatement	if ( fe_arg_info -> class_name )		211213	1					
ANR	211234	Condition	fe_arg_info -> class_name	177:5:5892:5914	211213	0	True				
ANR	211235	PtrMemberAccess	fe_arg_info -> class_name		211213	0					
ANR	211236	Identifier	fe_arg_info		211213	0					
ANR	211237	Identifier	class_name		211213	1					
ANR	211238	CompoundStatement		9:2:233:255	211213	1					
ANR	211239	IdentifierDeclStatement	"zend_string * fe_class_name , * proto_class_name ;"	178:2:5921:5966	211213	0	True				
ANR	211240	IdentifierDecl	* fe_class_name		211213	0					
ANR	211241	IdentifierDeclType	zend_string *		211213	0					
ANR	211242	Identifier	fe_class_name		211213	1					
ANR	211243	IdentifierDecl	* proto_class_name		211213	1					
ANR	211244	IdentifierDeclType	zend_string *		211213	0					
ANR	211245	Identifier	proto_class_name		211213	1					
ANR	211246	IdentifierDeclStatement	const char * class_name ;	179:2:5970:5992	211213	1	True				
ANR	211247	IdentifierDecl	* class_name		211213	0					
ANR	211248	IdentifierDeclType	const char *		211213	0					
ANR	211249	Identifier	class_name		211213	1					
ANR	211250	IfStatement	if ( fe -> type == ZEND_INTERNAL_FUNCTION )		211213	2					
ANR	211251	Condition	fe -> type == ZEND_INTERNAL_FUNCTION	181:6:6001:6034	211213	0	True				
ANR	211252	EqualityExpression	fe -> type == ZEND_INTERNAL_FUNCTION		211213	0		==			
ANR	211253	PtrMemberAccess	fe -> type		211213	0					
ANR	211254	Identifier	fe		211213	0					
ANR	211255	Identifier	type		211213	1					
ANR	211256	Identifier	ZEND_INTERNAL_FUNCTION		211213	1					
ANR	211257	CompoundStatement		11:42:300:300	211213	1					
ANR	211258	ExpressionStatement	fe_class_name = NULL	182:3:6042:6062	211213	0	True				
ANR	211259	AssignmentExpression	fe_class_name = NULL		211213	0		=			
ANR	211260	Identifier	fe_class_name		211213	0					
ANR	211261	Identifier	NULL		211213	1					
ANR	211262	ExpressionStatement	class_name = ( ( zend_internal_arg_info * ) fe_arg_info ) -> class_name	183:3:6067:6130	211213	1	True				
ANR	211263	AssignmentExpression	class_name = ( ( zend_internal_arg_info * ) fe_arg_info ) -> class_name		211213	0		=			
ANR	211264	Identifier	class_name		211213	0					
ANR	211265	PtrMemberAccess	( ( zend_internal_arg_info * ) fe_arg_info ) -> class_name		211213	1					
ANR	211266	CastExpression	( zend_internal_arg_info * ) fe_arg_info		211213	0					
ANR	211267	CastTarget	zend_internal_arg_info *		211213	0					
ANR	211268	Identifier	fe_arg_info		211213	1					
ANR	211269	Identifier	class_name		211213	1					
ANR	211270	ElseStatement	else		211213	0					
ANR	211271	CompoundStatement		14:9:404:404	211213	0					
ANR	211272	ExpressionStatement	fe_class_name = fe_arg_info -> class_name	185:3:6146:6185	211213	0	True				
ANR	211273	AssignmentExpression	fe_class_name = fe_arg_info -> class_name		211213	0		=			
ANR	211274	Identifier	fe_class_name		211213	0					
ANR	211275	PtrMemberAccess	fe_arg_info -> class_name		211213	1					
ANR	211276	Identifier	fe_arg_info		211213	0					
ANR	211277	Identifier	class_name		211213	1					
ANR	211278	ExpressionStatement	class_name = ZSTR_VAL ( fe_arg_info -> class_name )	186:3:6190:6236	211213	1	True				
ANR	211279	AssignmentExpression	class_name = ZSTR_VAL ( fe_arg_info -> class_name )		211213	0		=			
ANR	211280	Identifier	class_name		211213	0					
ANR	211281	CallExpression	ZSTR_VAL ( fe_arg_info -> class_name )		211213	1					
ANR	211282	Callee	ZSTR_VAL		211213	0					
ANR	211283	Identifier	ZSTR_VAL		211213	0					
ANR	211284	ArgumentList	fe_arg_info -> class_name		211213	1					
ANR	211285	Argument	fe_arg_info -> class_name		211213	0					
ANR	211286	PtrMemberAccess	fe_arg_info -> class_name		211213	0					
ANR	211287	Identifier	fe_arg_info		211213	0					
ANR	211288	Identifier	class_name		211213	1					
ANR	211289	IfStatement	"if ( ! strcasecmp ( class_name , ""parent"" ) && proto -> common . scope )"		211213	3					
ANR	211290	Condition	"! strcasecmp ( class_name , ""parent"" ) && proto -> common . scope"	188:6:6248:6303	211213	0	True				
ANR	211291	AndExpression	"! strcasecmp ( class_name , ""parent"" ) && proto -> common . scope"		211213	0		&&			
ANR	211292	UnaryOperationExpression	"! strcasecmp ( class_name , ""parent"" )"		211213	0					
ANR	211293	UnaryOperator	!		211213	0					
ANR	211294	CallExpression	"strcasecmp ( class_name , ""parent"" )"		211213	1					
ANR	211295	Callee	strcasecmp		211213	0					
ANR	211296	Identifier	strcasecmp		211213	0					
ANR	211297	ArgumentList	class_name		211213	1					
ANR	211298	Argument	class_name		211213	0					
ANR	211299	Identifier	class_name		211213	0					
ANR	211300	Argument	"""parent"""		211213	1					
ANR	211301	PrimaryExpression	"""parent"""		211213	0					
ANR	211302	MemberAccess	proto -> common . scope		211213	1					
ANR	211303	PtrMemberAccess	proto -> common		211213	0					
ANR	211304	Identifier	proto		211213	0					
ANR	211305	Identifier	common		211213	1					
ANR	211306	Identifier	scope		211213	1					
ANR	211307	CompoundStatement		18:64:569:569	211213	1					
ANR	211308	ExpressionStatement	fe_class_name = zend_string_copy ( proto -> common . scope -> name )	189:3:6311:6370	211213	0	True				
ANR	211309	AssignmentExpression	fe_class_name = zend_string_copy ( proto -> common . scope -> name )		211213	0		=			
ANR	211310	Identifier	fe_class_name		211213	0					
ANR	211311	CallExpression	zend_string_copy ( proto -> common . scope -> name )		211213	1					
ANR	211312	Callee	zend_string_copy		211213	0					
ANR	211313	Identifier	zend_string_copy		211213	0					
ANR	211314	ArgumentList	proto -> common . scope -> name		211213	1					
ANR	211315	Argument	proto -> common . scope -> name		211213	0					
ANR	211316	PtrMemberAccess	proto -> common . scope -> name		211213	0					
ANR	211317	MemberAccess	proto -> common . scope		211213	0					
ANR	211318	PtrMemberAccess	proto -> common		211213	0					
ANR	211319	Identifier	proto		211213	0					
ANR	211320	Identifier	common		211213	1					
ANR	211321	Identifier	scope		211213	1					
ANR	211322	Identifier	name		211213	1					
ANR	211323	ElseStatement	else		211213	0					
ANR	211324	IfStatement	"if ( ! strcasecmp ( class_name , ""self"" ) && fe -> common . scope )"		211213	0					
ANR	211325	Condition	"! strcasecmp ( class_name , ""self"" ) && fe -> common . scope"	190:13:6385:6435	211213	0	True				
ANR	211326	AndExpression	"! strcasecmp ( class_name , ""self"" ) && fe -> common . scope"		211213	0		&&			
ANR	211327	UnaryOperationExpression	"! strcasecmp ( class_name , ""self"" )"		211213	0					
ANR	211328	UnaryOperator	!		211213	0					
ANR	211329	CallExpression	"strcasecmp ( class_name , ""self"" )"		211213	1					
ANR	211330	Callee	strcasecmp		211213	0					
ANR	211331	Identifier	strcasecmp		211213	0					
ANR	211332	ArgumentList	class_name		211213	1					
ANR	211333	Argument	class_name		211213	0					
ANR	211334	Identifier	class_name		211213	0					
ANR	211335	Argument	"""self"""		211213	1					
ANR	211336	PrimaryExpression	"""self"""		211213	0					
ANR	211337	MemberAccess	fe -> common . scope		211213	1					
ANR	211338	PtrMemberAccess	fe -> common		211213	0					
ANR	211339	Identifier	fe		211213	0					
ANR	211340	Identifier	common		211213	1					
ANR	211341	Identifier	scope		211213	1					
ANR	211342	CompoundStatement		20:66:701:701	211213	1					
ANR	211343	ExpressionStatement	fe_class_name = zend_string_copy ( fe -> common . scope -> name )	191:3:6443:6499	211213	0	True				
ANR	211344	AssignmentExpression	fe_class_name = zend_string_copy ( fe -> common . scope -> name )		211213	0		=			
ANR	211345	Identifier	fe_class_name		211213	0					
ANR	211346	CallExpression	zend_string_copy ( fe -> common . scope -> name )		211213	1					
ANR	211347	Callee	zend_string_copy		211213	0					
ANR	211348	Identifier	zend_string_copy		211213	0					
ANR	211349	ArgumentList	fe -> common . scope -> name		211213	1					
ANR	211350	Argument	fe -> common . scope -> name		211213	0					
ANR	211351	PtrMemberAccess	fe -> common . scope -> name		211213	0					
ANR	211352	MemberAccess	fe -> common . scope		211213	0					
ANR	211353	PtrMemberAccess	fe -> common		211213	0					
ANR	211354	Identifier	fe		211213	0					
ANR	211355	Identifier	common		211213	1					
ANR	211356	Identifier	scope		211213	1					
ANR	211357	Identifier	name		211213	1					
ANR	211358	ElseStatement	else		211213	0					
ANR	211359	IfStatement	if ( fe_class_name )		211213	0					
ANR	211360	Condition	fe_class_name	192:13:6514:6526	211213	0	True				
ANR	211361	Identifier	fe_class_name		211213	0					
ANR	211362	CompoundStatement		22:28:792:792	211213	1					
ANR	211363	ExpressionStatement	zend_string_addref ( fe_class_name )	193:3:6534:6567	211213	0	True				
ANR	211364	CallExpression	zend_string_addref ( fe_class_name )		211213	0					
ANR	211365	Callee	zend_string_addref		211213	0					
ANR	211366	Identifier	zend_string_addref		211213	0					
ANR	211367	ArgumentList	fe_class_name		211213	1					
ANR	211368	Argument	fe_class_name		211213	0					
ANR	211369	Identifier	fe_class_name		211213	0					
ANR	211370	ElseStatement	else		211213	0					
ANR	211371	CompoundStatement		24:9:841:841	211213	0					
ANR	211372	ExpressionStatement	"fe_class_name = zend_string_init ( class_name , strlen ( class_name ) , 0 )"	195:3:6583:6650	211213	0	True				
ANR	211373	AssignmentExpression	"fe_class_name = zend_string_init ( class_name , strlen ( class_name ) , 0 )"		211213	0		=			
ANR	211374	Identifier	fe_class_name		211213	0					
ANR	211375	CallExpression	"zend_string_init ( class_name , strlen ( class_name ) , 0 )"		211213	1					
ANR	211376	Callee	zend_string_init		211213	0					
ANR	211377	Identifier	zend_string_init		211213	0					
ANR	211378	ArgumentList	class_name		211213	1					
ANR	211379	Argument	class_name		211213	0					
ANR	211380	Identifier	class_name		211213	0					
ANR	211381	Argument	strlen ( class_name )		211213	1					
ANR	211382	CallExpression	strlen ( class_name )		211213	0					
ANR	211383	Callee	strlen		211213	0					
ANR	211384	Identifier	strlen		211213	0					
ANR	211385	ArgumentList	class_name		211213	1					
ANR	211386	Argument	class_name		211213	0					
ANR	211387	Identifier	class_name		211213	0					
ANR	211388	Argument	0		211213	2					
ANR	211389	PrimaryExpression	0		211213	0					
ANR	211390	IfStatement	if ( proto -> type == ZEND_INTERNAL_FUNCTION )		211213	4					
ANR	211391	Condition	proto -> type == ZEND_INTERNAL_FUNCTION	198:6:6663:6699	211213	0	True				
ANR	211392	EqualityExpression	proto -> type == ZEND_INTERNAL_FUNCTION		211213	0		==			
ANR	211393	PtrMemberAccess	proto -> type		211213	0					
ANR	211394	Identifier	proto		211213	0					
ANR	211395	Identifier	type		211213	1					
ANR	211396	Identifier	ZEND_INTERNAL_FUNCTION		211213	1					
ANR	211397	CompoundStatement		28:45:965:965	211213	1					
ANR	211398	ExpressionStatement	proto_class_name = NULL	199:3:6707:6730	211213	0	True				
ANR	211399	AssignmentExpression	proto_class_name = NULL		211213	0		=			
ANR	211400	Identifier	proto_class_name		211213	0					
ANR	211401	Identifier	NULL		211213	1					
ANR	211402	ExpressionStatement	class_name = ( ( zend_internal_arg_info * ) proto_arg_info ) -> class_name	200:3:6735:6801	211213	1	True				
ANR	211403	AssignmentExpression	class_name = ( ( zend_internal_arg_info * ) proto_arg_info ) -> class_name		211213	0		=			
ANR	211404	Identifier	class_name		211213	0					
ANR	211405	PtrMemberAccess	( ( zend_internal_arg_info * ) proto_arg_info ) -> class_name		211213	1					
ANR	211406	CastExpression	( zend_internal_arg_info * ) proto_arg_info		211213	0					
ANR	211407	CastTarget	zend_internal_arg_info *		211213	0					
ANR	211408	Identifier	proto_arg_info		211213	1					
ANR	211409	Identifier	class_name		211213	1					
ANR	211410	ElseStatement	else		211213	0					
ANR	211411	CompoundStatement		31:9:1075:1075	211213	0					
ANR	211412	ExpressionStatement	proto_class_name = proto_arg_info -> class_name	202:3:6817:6862	211213	0	True				
ANR	211413	AssignmentExpression	proto_class_name = proto_arg_info -> class_name		211213	0		=			
ANR	211414	Identifier	proto_class_name		211213	0					
ANR	211415	PtrMemberAccess	proto_arg_info -> class_name		211213	1					
ANR	211416	Identifier	proto_arg_info		211213	0					
ANR	211417	Identifier	class_name		211213	1					
ANR	211418	ExpressionStatement	class_name = ZSTR_VAL ( proto_arg_info -> class_name )	203:3:6867:6916	211213	1	True				
ANR	211419	AssignmentExpression	class_name = ZSTR_VAL ( proto_arg_info -> class_name )		211213	0		=			
ANR	211420	Identifier	class_name		211213	0					
ANR	211421	CallExpression	ZSTR_VAL ( proto_arg_info -> class_name )		211213	1					
ANR	211422	Callee	ZSTR_VAL		211213	0					
ANR	211423	Identifier	ZSTR_VAL		211213	0					
ANR	211424	ArgumentList	proto_arg_info -> class_name		211213	1					
ANR	211425	Argument	proto_arg_info -> class_name		211213	0					
ANR	211426	PtrMemberAccess	proto_arg_info -> class_name		211213	0					
ANR	211427	Identifier	proto_arg_info		211213	0					
ANR	211428	Identifier	class_name		211213	1					
ANR	211429	IfStatement	"if ( ! strcasecmp ( class_name , ""parent"" ) && proto -> common . scope && proto -> common . scope -> parent )"		211213	5					
ANR	211430	Condition	"! strcasecmp ( class_name , ""parent"" ) && proto -> common . scope && proto -> common . scope -> parent"	205:6:6928:7014	211213	0	True				
ANR	211431	AndExpression	"! strcasecmp ( class_name , ""parent"" ) && proto -> common . scope && proto -> common . scope -> parent"		211213	0		&&			
ANR	211432	UnaryOperationExpression	"! strcasecmp ( class_name , ""parent"" )"		211213	0					
ANR	211433	UnaryOperator	!		211213	0					
ANR	211434	CallExpression	"strcasecmp ( class_name , ""parent"" )"		211213	1					
ANR	211435	Callee	strcasecmp		211213	0					
ANR	211436	Identifier	strcasecmp		211213	0					
ANR	211437	ArgumentList	class_name		211213	1					
ANR	211438	Argument	class_name		211213	0					
ANR	211439	Identifier	class_name		211213	0					
ANR	211440	Argument	"""parent"""		211213	1					
ANR	211441	PrimaryExpression	"""parent"""		211213	0					
ANR	211442	AndExpression	proto -> common . scope && proto -> common . scope -> parent		211213	1		&&			
ANR	211443	MemberAccess	proto -> common . scope		211213	0					
ANR	211444	PtrMemberAccess	proto -> common		211213	0					
ANR	211445	Identifier	proto		211213	0					
ANR	211446	Identifier	common		211213	1					
ANR	211447	Identifier	scope		211213	1					
ANR	211448	PtrMemberAccess	proto -> common . scope -> parent		211213	1					
ANR	211449	MemberAccess	proto -> common . scope		211213	0					
ANR	211450	PtrMemberAccess	proto -> common		211213	0					
ANR	211451	Identifier	proto		211213	0					
ANR	211452	Identifier	common		211213	1					
ANR	211453	Identifier	scope		211213	1					
ANR	211454	Identifier	parent		211213	1					
ANR	211455	CompoundStatement		35:95:1280:1280	211213	1					
ANR	211456	ExpressionStatement	proto_class_name = zend_string_copy ( proto -> common . scope -> parent -> name )	206:3:7022:7092	211213	0	True				
ANR	211457	AssignmentExpression	proto_class_name = zend_string_copy ( proto -> common . scope -> parent -> name )		211213	0		=			
ANR	211458	Identifier	proto_class_name		211213	0					
ANR	211459	CallExpression	zend_string_copy ( proto -> common . scope -> parent -> name )		211213	1					
ANR	211460	Callee	zend_string_copy		211213	0					
ANR	211461	Identifier	zend_string_copy		211213	0					
ANR	211462	ArgumentList	proto -> common . scope -> parent -> name		211213	1					
ANR	211463	Argument	proto -> common . scope -> parent -> name		211213	0					
ANR	211464	PtrMemberAccess	proto -> common . scope -> parent -> name		211213	0					
ANR	211465	PtrMemberAccess	proto -> common . scope -> parent		211213	0					
ANR	211466	MemberAccess	proto -> common . scope		211213	0					
ANR	211467	PtrMemberAccess	proto -> common		211213	0					
ANR	211468	Identifier	proto		211213	0					
ANR	211469	Identifier	common		211213	1					
ANR	211470	Identifier	scope		211213	1					
ANR	211471	Identifier	parent		211213	1					
ANR	211472	Identifier	name		211213	1					
ANR	211473	ElseStatement	else		211213	0					
ANR	211474	IfStatement	"if ( ! strcasecmp ( class_name , ""self"" ) && proto -> common . scope )"		211213	0					
ANR	211475	Condition	"! strcasecmp ( class_name , ""self"" ) && proto -> common . scope"	207:13:7107:7160	211213	0	True				
ANR	211476	AndExpression	"! strcasecmp ( class_name , ""self"" ) && proto -> common . scope"		211213	0		&&			
ANR	211477	UnaryOperationExpression	"! strcasecmp ( class_name , ""self"" )"		211213	0					
ANR	211478	UnaryOperator	!		211213	0					
ANR	211479	CallExpression	"strcasecmp ( class_name , ""self"" )"		211213	1					
ANR	211480	Callee	strcasecmp		211213	0					
ANR	211481	Identifier	strcasecmp		211213	0					
ANR	211482	ArgumentList	class_name		211213	1					
ANR	211483	Argument	class_name		211213	0					
ANR	211484	Identifier	class_name		211213	0					
ANR	211485	Argument	"""self"""		211213	1					
ANR	211486	PrimaryExpression	"""self"""		211213	0					
ANR	211487	MemberAccess	proto -> common . scope		211213	1					
ANR	211488	PtrMemberAccess	proto -> common		211213	0					
ANR	211489	Identifier	proto		211213	0					
ANR	211490	Identifier	common		211213	1					
ANR	211491	Identifier	scope		211213	1					
ANR	211492	CompoundStatement		37:69:1426:1426	211213	1					
ANR	211493	ExpressionStatement	proto_class_name = zend_string_copy ( proto -> common . scope -> name )	208:3:7168:7230	211213	0	True				
ANR	211494	AssignmentExpression	proto_class_name = zend_string_copy ( proto -> common . scope -> name )		211213	0		=			
ANR	211495	Identifier	proto_class_name		211213	0					
ANR	211496	CallExpression	zend_string_copy ( proto -> common . scope -> name )		211213	1					
ANR	211497	Callee	zend_string_copy		211213	0					
ANR	211498	Identifier	zend_string_copy		211213	0					
ANR	211499	ArgumentList	proto -> common . scope -> name		211213	1					
ANR	211500	Argument	proto -> common . scope -> name		211213	0					
ANR	211501	PtrMemberAccess	proto -> common . scope -> name		211213	0					
ANR	211502	MemberAccess	proto -> common . scope		211213	0					
ANR	211503	PtrMemberAccess	proto -> common		211213	0					
ANR	211504	Identifier	proto		211213	0					
ANR	211505	Identifier	common		211213	1					
ANR	211506	Identifier	scope		211213	1					
ANR	211507	Identifier	name		211213	1					
ANR	211508	ElseStatement	else		211213	0					
ANR	211509	IfStatement	if ( proto_class_name )		211213	0					
ANR	211510	Condition	proto_class_name	209:13:7245:7260	211213	0	True				
ANR	211511	Identifier	proto_class_name		211213	0					
ANR	211512	CompoundStatement		39:31:1526:1526	211213	1					
ANR	211513	ExpressionStatement	zend_string_addref ( proto_class_name )	210:3:7268:7304	211213	0	True				
ANR	211514	CallExpression	zend_string_addref ( proto_class_name )		211213	0					
ANR	211515	Callee	zend_string_addref		211213	0					
ANR	211516	Identifier	zend_string_addref		211213	0					
ANR	211517	ArgumentList	proto_class_name		211213	1					
ANR	211518	Argument	proto_class_name		211213	0					
ANR	211519	Identifier	proto_class_name		211213	0					
ANR	211520	ElseStatement	else		211213	0					
ANR	211521	CompoundStatement		41:9:1578:1578	211213	0					
ANR	211522	ExpressionStatement	"proto_class_name = zend_string_init ( class_name , strlen ( class_name ) , 0 )"	212:3:7320:7390	211213	0	True				
ANR	211523	AssignmentExpression	"proto_class_name = zend_string_init ( class_name , strlen ( class_name ) , 0 )"		211213	0		=			
ANR	211524	Identifier	proto_class_name		211213	0					
ANR	211525	CallExpression	"zend_string_init ( class_name , strlen ( class_name ) , 0 )"		211213	1					
ANR	211526	Callee	zend_string_init		211213	0					
ANR	211527	Identifier	zend_string_init		211213	0					
ANR	211528	ArgumentList	class_name		211213	1					
ANR	211529	Argument	class_name		211213	0					
ANR	211530	Identifier	class_name		211213	0					
ANR	211531	Argument	strlen ( class_name )		211213	1					
ANR	211532	CallExpression	strlen ( class_name )		211213	0					
ANR	211533	Callee	strlen		211213	0					
ANR	211534	Identifier	strlen		211213	0					
ANR	211535	ArgumentList	class_name		211213	1					
ANR	211536	Argument	class_name		211213	0					
ANR	211537	Identifier	class_name		211213	0					
ANR	211538	Argument	0		211213	2					
ANR	211539	PrimaryExpression	0		211213	0					
ANR	211540	IfStatement	"if ( strcasecmp ( ZSTR_VAL ( fe_class_name ) , ZSTR_VAL ( proto_class_name ) ) != 0 )"		211213	6					
ANR	211541	Condition	"strcasecmp ( ZSTR_VAL ( fe_class_name ) , ZSTR_VAL ( proto_class_name ) ) != 0"	215:6:7403:7470	211213	0	True				
ANR	211542	EqualityExpression	"strcasecmp ( ZSTR_VAL ( fe_class_name ) , ZSTR_VAL ( proto_class_name ) ) != 0"		211213	0		!=			
ANR	211543	CallExpression	"strcasecmp ( ZSTR_VAL ( fe_class_name ) , ZSTR_VAL ( proto_class_name ) )"		211213	0					
ANR	211544	Callee	strcasecmp		211213	0					
ANR	211545	Identifier	strcasecmp		211213	0					
ANR	211546	ArgumentList	ZSTR_VAL ( fe_class_name )		211213	1					
ANR	211547	Argument	ZSTR_VAL ( fe_class_name )		211213	0					
ANR	211548	CallExpression	ZSTR_VAL ( fe_class_name )		211213	0					
ANR	211549	Callee	ZSTR_VAL		211213	0					
ANR	211550	Identifier	ZSTR_VAL		211213	0					
ANR	211551	ArgumentList	fe_class_name		211213	1					
ANR	211552	Argument	fe_class_name		211213	0					
ANR	211553	Identifier	fe_class_name		211213	0					
ANR	211554	Argument	ZSTR_VAL ( proto_class_name )		211213	1					
ANR	211555	CallExpression	ZSTR_VAL ( proto_class_name )		211213	0					
ANR	211556	Callee	ZSTR_VAL		211213	0					
ANR	211557	Identifier	ZSTR_VAL		211213	0					
ANR	211558	ArgumentList	proto_class_name		211213	1					
ANR	211559	Argument	proto_class_name		211213	0					
ANR	211560	Identifier	proto_class_name		211213	0					
ANR	211561	PrimaryExpression	0		211213	1					
ANR	211562	CompoundStatement		45:76:1736:1736	211213	1					
ANR	211563	IfStatement	if ( fe -> common . type != ZEND_USER_FUNCTION )		211213	0					
ANR	211564	Condition	fe -> common . type != ZEND_USER_FUNCTION	216:7:7482:7518	211213	0	True				
ANR	211565	EqualityExpression	fe -> common . type != ZEND_USER_FUNCTION		211213	0		!=			
ANR	211566	MemberAccess	fe -> common . type		211213	0					
ANR	211567	PtrMemberAccess	fe -> common		211213	0					
ANR	211568	Identifier	fe		211213	0					
ANR	211569	Identifier	common		211213	1					
ANR	211570	Identifier	type		211213	1					
ANR	211571	Identifier	ZEND_USER_FUNCTION		211213	1					
ANR	211572	CompoundStatement		46:46:1784:1784	211213	1					
ANR	211573	ExpressionStatement	zend_string_release ( proto_class_name )	217:4:7527:7564	211213	0	True				
ANR	211574	CallExpression	zend_string_release ( proto_class_name )		211213	0					
ANR	211575	Callee	zend_string_release		211213	0					
ANR	211576	Identifier	zend_string_release		211213	0					
ANR	211577	ArgumentList	proto_class_name		211213	1					
ANR	211578	Argument	proto_class_name		211213	0					
ANR	211579	Identifier	proto_class_name		211213	0					
ANR	211580	ExpressionStatement	zend_string_release ( fe_class_name )	218:4:7570:7604	211213	1	True				
ANR	211581	CallExpression	zend_string_release ( fe_class_name )		211213	0					
ANR	211582	Callee	zend_string_release		211213	0					
ANR	211583	Identifier	zend_string_release		211213	0					
ANR	211584	ArgumentList	fe_class_name		211213	1					
ANR	211585	Argument	fe_class_name		211213	0					
ANR	211586	Identifier	fe_class_name		211213	0					
ANR	211587	ReturnStatement	return 0 ;	219:4:7610:7618	211213	2	True				
ANR	211588	PrimaryExpression	0		211213	0					
ANR	211589	ElseStatement	else		211213	0					
ANR	211590	CompoundStatement		51:4:1899:1933	211213	0					
ANR	211591	IdentifierDeclStatement	"zend_class_entry * fe_ce , * proto_ce ;"	221:4:7636:7670	211213	0	True				
ANR	211592	IdentifierDecl	* fe_ce		211213	0					
ANR	211593	IdentifierDeclType	zend_class_entry *		211213	0					
ANR	211594	Identifier	fe_ce		211213	1					
ANR	211595	IdentifierDecl	* proto_ce		211213	1					
ANR	211596	IdentifierDeclType	zend_class_entry *		211213	0					
ANR	211597	Identifier	proto_ce		211213	1					
ANR	211598	ExpressionStatement	fe_ce = zend_lookup_class ( fe_class_name )	223:4:7677:7717	211213	1	True				
ANR	211599	AssignmentExpression	fe_ce = zend_lookup_class ( fe_class_name )		211213	0		=			
ANR	211600	Identifier	fe_ce		211213	0					
ANR	211601	CallExpression	zend_lookup_class ( fe_class_name )		211213	1					
ANR	211602	Callee	zend_lookup_class		211213	0					
ANR	211603	Identifier	zend_lookup_class		211213	0					
ANR	211604	ArgumentList	fe_class_name		211213	1					
ANR	211605	Argument	fe_class_name		211213	0					
ANR	211606	Identifier	fe_class_name		211213	0					
ANR	211607	ExpressionStatement	proto_ce = zend_lookup_class ( proto_class_name )	224:4:7723:7769	211213	2	True				
ANR	211608	AssignmentExpression	proto_ce = zend_lookup_class ( proto_class_name )		211213	0		=			
ANR	211609	Identifier	proto_ce		211213	0					
ANR	211610	CallExpression	zend_lookup_class ( proto_class_name )		211213	1					
ANR	211611	Callee	zend_lookup_class		211213	0					
ANR	211612	Identifier	zend_lookup_class		211213	0					
ANR	211613	ArgumentList	proto_class_name		211213	1					
ANR	211614	Argument	proto_class_name		211213	0					
ANR	211615	Identifier	proto_class_name		211213	0					
ANR	211616	IfStatement	if ( ! fe_ce || ! proto_ce || fe_ce -> type == ZEND_INTERNAL_CLASS || proto_ce -> type == ZEND_INTERNAL_CLASS || fe_ce != proto_ce )		211213	3					
ANR	211617	Condition	! fe_ce || ! proto_ce || fe_ce -> type == ZEND_INTERNAL_CLASS || proto_ce -> type == ZEND_INTERNAL_CLASS || fe_ce != proto_ce	227:8:7812:7948	211213	0	True				
ANR	211618	OrExpression	! fe_ce || ! proto_ce || fe_ce -> type == ZEND_INTERNAL_CLASS || proto_ce -> type == ZEND_INTERNAL_CLASS || fe_ce != proto_ce		211213	0		||			
ANR	211619	UnaryOperationExpression	! fe_ce		211213	0					
ANR	211620	UnaryOperator	!		211213	0					
ANR	211621	Identifier	fe_ce		211213	1					
ANR	211622	OrExpression	! proto_ce || fe_ce -> type == ZEND_INTERNAL_CLASS || proto_ce -> type == ZEND_INTERNAL_CLASS || fe_ce != proto_ce		211213	1		||			
ANR	211623	UnaryOperationExpression	! proto_ce		211213	0					
ANR	211624	UnaryOperator	!		211213	0					
ANR	211625	Identifier	proto_ce		211213	1					
ANR	211626	OrExpression	fe_ce -> type == ZEND_INTERNAL_CLASS || proto_ce -> type == ZEND_INTERNAL_CLASS || fe_ce != proto_ce		211213	1		||			
ANR	211627	EqualityExpression	fe_ce -> type == ZEND_INTERNAL_CLASS		211213	0		==			
ANR	211628	PtrMemberAccess	fe_ce -> type		211213	0					
ANR	211629	Identifier	fe_ce		211213	0					
ANR	211630	Identifier	type		211213	1					
ANR	211631	Identifier	ZEND_INTERNAL_CLASS		211213	1					
ANR	211632	OrExpression	proto_ce -> type == ZEND_INTERNAL_CLASS || fe_ce != proto_ce		211213	1		||			
ANR	211633	EqualityExpression	proto_ce -> type == ZEND_INTERNAL_CLASS		211213	0		==			
ANR	211634	PtrMemberAccess	proto_ce -> type		211213	0					
ANR	211635	Identifier	proto_ce		211213	0					
ANR	211636	Identifier	type		211213	1					
ANR	211637	Identifier	ZEND_INTERNAL_CLASS		211213	1					
ANR	211638	EqualityExpression	fe_ce != proto_ce		211213	1		!=			
ANR	211639	Identifier	fe_ce		211213	0					
ANR	211640	Identifier	proto_ce		211213	1					
ANR	211641	CompoundStatement		60:25:2214:2214	211213	1					
ANR	211642	ExpressionStatement	zend_string_release ( proto_class_name )	231:5:7958:7995	211213	0	True				
ANR	211643	CallExpression	zend_string_release ( proto_class_name )		211213	0					
ANR	211644	Callee	zend_string_release		211213	0					
ANR	211645	Identifier	zend_string_release		211213	0					
ANR	211646	ArgumentList	proto_class_name		211213	1					
ANR	211647	Argument	proto_class_name		211213	0					
ANR	211648	Identifier	proto_class_name		211213	0					
ANR	211649	ExpressionStatement	zend_string_release ( fe_class_name )	232:5:8002:8036	211213	1	True				
ANR	211650	CallExpression	zend_string_release ( fe_class_name )		211213	0					
ANR	211651	Callee	zend_string_release		211213	0					
ANR	211652	Identifier	zend_string_release		211213	0					
ANR	211653	ArgumentList	fe_class_name		211213	1					
ANR	211654	Argument	fe_class_name		211213	0					
ANR	211655	Identifier	fe_class_name		211213	0					
ANR	211656	ReturnStatement	return 0 ;	233:5:8043:8051	211213	2	True				
ANR	211657	PrimaryExpression	0		211213	0					
ANR	211658	ExpressionStatement	zend_string_release ( proto_class_name )	237:2:8070:8107	211213	7	True				
ANR	211659	CallExpression	zend_string_release ( proto_class_name )		211213	0					
ANR	211660	Callee	zend_string_release		211213	0					
ANR	211661	Identifier	zend_string_release		211213	0					
ANR	211662	ArgumentList	proto_class_name		211213	1					
ANR	211663	Argument	proto_class_name		211213	0					
ANR	211664	Identifier	proto_class_name		211213	0					
ANR	211665	ExpressionStatement	zend_string_release ( fe_class_name )	238:2:8111:8145	211213	8	True				
ANR	211666	CallExpression	zend_string_release ( fe_class_name )		211213	0					
ANR	211667	Callee	zend_string_release		211213	0					
ANR	211668	Identifier	zend_string_release		211213	0					
ANR	211669	ArgumentList	fe_class_name		211213	1					
ANR	211670	Argument	fe_class_name		211213	0					
ANR	211671	Identifier	fe_class_name		211213	0					
ANR	211672	IfStatement	if ( fe_arg_info -> type_hint != proto_arg_info -> type_hint )		211213	2					
ANR	211673	Condition	fe_arg_info -> type_hint != proto_arg_info -> type_hint	241:5:8156:8206	211213	0	True				
ANR	211674	EqualityExpression	fe_arg_info -> type_hint != proto_arg_info -> type_hint		211213	0		!=			
ANR	211675	PtrMemberAccess	fe_arg_info -> type_hint		211213	0					
ANR	211676	Identifier	fe_arg_info		211213	0					
ANR	211677	Identifier	type_hint		211213	1					
ANR	211678	PtrMemberAccess	proto_arg_info -> type_hint		211213	1					
ANR	211679	Identifier	proto_arg_info		211213	0					
ANR	211680	Identifier	type_hint		211213	1					
ANR	211681	CompoundStatement		71:58:2472:2472	211213	1					
ANR	211682	ReturnStatement	return 0 ;	243:2:8244:8252	211213	0	True				
ANR	211683	PrimaryExpression	0		211213	0					
ANR	211684	ReturnStatement	return 1 ;	246:1:8259:8267	211213	3	True				
ANR	211685	PrimaryExpression	1		211213	0					
ANR	211686	ReturnType	static int		211213	1					
ANR	211687	Identifier	zend_do_perform_type_hint_check		211213	2					
ANR	211688	ParameterList	"const zend_function * fe , zend_arg_info * fe_arg_info , const zend_function * proto , zend_arg_info * proto_arg_info"		211213	3					
ANR	211689	Parameter	const zend_function * fe	170:43:5614:5636	211213	0	True				
ANR	211690	ParameterType	const zend_function *		211213	0					
ANR	211691	Identifier	fe		211213	1					
ANR	211692	Parameter	zend_arg_info * fe_arg_info	170:68:5639:5664	211213	1	True				
ANR	211693	ParameterType	zend_arg_info *		211213	0					
ANR	211694	Identifier	fe_arg_info		211213	1					
ANR	211695	Parameter	const zend_function * proto	170:96:5667:5692	211213	2	True				
ANR	211696	ParameterType	const zend_function *		211213	0					
ANR	211697	Identifier	proto		211213	1					
ANR	211698	Parameter	zend_arg_info * proto_arg_info	170:124:5695:5723	211213	3	True				
ANR	211699	ParameterType	zend_arg_info *		211213	0					
ANR	211700	Identifier	proto_arg_info		211213	1					
ANR	211701	CFGEntryNode	ENTRY		211213		True				
ANR	211702	CFGExitNode	EXIT		211213		True				
ANR	211703	Symbol	* fe -> common . scope		211213						
ANR	211704	Symbol	proto -> common . scope -> parent		211213						
ANR	211705	Symbol	proto_arg_info -> class_name		211213						
ANR	211706	Symbol	* proto_arg_info		211213						
ANR	211707	Symbol	proto_class_name		211213						
ANR	211708	Symbol	fe -> common . scope -> name		211213						
ANR	211709	Symbol	ZEND_INTERNAL_FUNCTION		211213						
ANR	211710	Symbol	strlen		211213						
ANR	211711	Symbol	zend_string_init		211213						
ANR	211712	Symbol	proto_ce		211213						
ANR	211713	Symbol	* proto -> common		211213						
ANR	211714	Symbol	ZEND_USER_FUNCTION		211213						
ANR	211715	Symbol	strcasecmp		211213						
ANR	211716	Symbol	ZEND_INTERNAL_CLASS		211213						
ANR	211717	Symbol	proto_arg_info		211213						
ANR	211718	Symbol	NULL		211213						
ANR	211719	Symbol	* * fe		211213						
ANR	211720	Symbol	fe_class_name		211213						
ANR	211721	Symbol	zend_string_copy		211213						
ANR	211722	Symbol	zend_lookup_class		211213						
ANR	211723	Symbol	fe_ce		211213						
ANR	211724	Symbol	* proto		211213						
ANR	211725	Symbol	proto		211213						
ANR	211726	Symbol	* fe_arg_info		211213						
ANR	211727	Symbol	* proto -> common . scope -> parent		211213						
ANR	211728	Symbol	fe		211213						
ANR	211729	Symbol	( ( zend_internal_arg_info * ) fe_arg_info ) -> class_name		211213						
ANR	211730	Symbol	* fe_ce		211213						
ANR	211731	Symbol	( ( zend_internal_arg_info * ) proto_arg_info ) -> class_name		211213						
ANR	211732	Symbol	* fe -> common		211213						
ANR	211733	Symbol	fe -> type		211213						
ANR	211734	Symbol	* * * proto		211213						
ANR	211735	Symbol	fe_arg_info -> type_hint		211213						
ANR	211736	Symbol	proto -> common . scope		211213						
ANR	211737	Symbol	* * proto		211213						
ANR	211738	Symbol	fe -> common . scope		211213						
ANR	211739	Symbol	* * proto -> common		211213						
ANR	211740	Symbol	class_name		211213						
ANR	211741	Symbol	fe_arg_info -> class_name		211213						
ANR	211742	Symbol	fe -> common		211213						
ANR	211743	Symbol	fe -> common . type		211213						
ANR	211744	Symbol	* fe		211213						
ANR	211745	Symbol	proto_arg_info -> type_hint		211213						
ANR	211746	Symbol	* * proto -> common . scope		211213						
ANR	211747	Symbol	* proto_ce		211213						
ANR	211748	Symbol	proto -> common . scope -> parent -> name		211213						
ANR	211749	Symbol	ZSTR_VAL		211213						
ANR	211750	Symbol	proto -> common . scope -> name		211213						
ANR	211751	Symbol	ZEND_LOG_XOR		211213						
ANR	211752	Symbol	fe_arg_info		211213						
ANR	211753	Symbol	* proto -> common . scope		211213						
ANR	211754	Symbol	fe_ce -> type		211213						
ANR	211755	Symbol	proto -> common		211213						
ANR	211756	Symbol	proto_ce -> type		211213						
ANR	211757	Symbol	proto -> type		211213						
ANR	211758	Function	zend_do_perform_implementation_check	250:0:8282:11291							
ANR	211759	FunctionDef	"zend_do_perform_implementation_check (const zend_function * fe , const zend_function * proto)"		211758	0					
ANR	211760	CompoundStatement		251:0:8399:11291	211758	0					
ANR	211761	IdentifierDeclStatement	"uint32_t i , num_args ;"	252:1:8402:8422	211758	0	True				
ANR	211762	IdentifierDecl	i		211758	0					
ANR	211763	IdentifierDeclType	uint32_t		211758	0					
ANR	211764	Identifier	i		211758	1					
ANR	211765	IdentifierDecl	num_args		211758	1					
ANR	211766	IdentifierDeclType	uint32_t		211758	0					
ANR	211767	Identifier	num_args		211758	1					
ANR	211768	IfStatement	if ( ! proto || ( ! proto -> common . arg_info && proto -> common . type != ZEND_USER_FUNCTION ) )		211758	1					
ANR	211769	Condition	! proto || ( ! proto -> common . arg_info && proto -> common . type != ZEND_USER_FUNCTION )	258:5:8683:8761	211758	0	True				
ANR	211770	OrExpression	! proto || ( ! proto -> common . arg_info && proto -> common . type != ZEND_USER_FUNCTION )		211758	0		||			
ANR	211771	UnaryOperationExpression	! proto		211758	0					
ANR	211772	UnaryOperator	!		211758	0					
ANR	211773	Identifier	proto		211758	1					
ANR	211774	AndExpression	! proto -> common . arg_info && proto -> common . type != ZEND_USER_FUNCTION		211758	1		&&			
ANR	211775	UnaryOperationExpression	! proto -> common . arg_info		211758	0					
ANR	211776	UnaryOperator	!		211758	0					
ANR	211777	MemberAccess	proto -> common . arg_info		211758	1					
ANR	211778	PtrMemberAccess	proto -> common		211758	0					
ANR	211779	Identifier	proto		211758	0					
ANR	211780	Identifier	common		211758	1					
ANR	211781	Identifier	arg_info		211758	1					
ANR	211782	EqualityExpression	proto -> common . type != ZEND_USER_FUNCTION		211758	1		!=			
ANR	211783	MemberAccess	proto -> common . type		211758	0					
ANR	211784	PtrMemberAccess	proto -> common		211758	0					
ANR	211785	Identifier	proto		211758	0					
ANR	211786	Identifier	common		211758	1					
ANR	211787	Identifier	type		211758	1					
ANR	211788	Identifier	ZEND_USER_FUNCTION		211758	1					
ANR	211789	CompoundStatement		8:86:364:364	211758	1					
ANR	211790	ReturnStatement	return 1 ;	259:2:8768:8776	211758	0	True				
ANR	211791	PrimaryExpression	1		211758	0					
ANR	211792	IfStatement	if ( ( fe -> common . fn_flags & ZEND_ACC_CTOR ) && ( ( proto -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0 && ( proto -> common . fn_flags & ZEND_ACC_ABSTRACT ) == 0 ) )		211758	2					
ANR	211793	Condition	( fe -> common . fn_flags & ZEND_ACC_CTOR ) && ( ( proto -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0 && ( proto -> common . fn_flags & ZEND_ACC_ABSTRACT ) == 0 )	265:5:8900:9057	211758	0	True				
ANR	211794	AndExpression	( fe -> common . fn_flags & ZEND_ACC_CTOR ) && ( ( proto -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0 && ( proto -> common . fn_flags & ZEND_ACC_ABSTRACT ) == 0 )		211758	0		&&			
ANR	211795	BitAndExpression	fe -> common . fn_flags & ZEND_ACC_CTOR		211758	0		&			
ANR	211796	MemberAccess	fe -> common . fn_flags		211758	0					
ANR	211797	PtrMemberAccess	fe -> common		211758	0					
ANR	211798	Identifier	fe		211758	0					
ANR	211799	Identifier	common		211758	1					
ANR	211800	Identifier	fn_flags		211758	1					
ANR	211801	Identifier	ZEND_ACC_CTOR		211758	1					
ANR	211802	AndExpression	( proto -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0 && ( proto -> common . fn_flags & ZEND_ACC_ABSTRACT ) == 0		211758	1		&&			
ANR	211803	EqualityExpression	( proto -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0		211758	0		==			
ANR	211804	BitAndExpression	proto -> common . scope -> ce_flags & ZEND_ACC_INTERFACE		211758	0		&			
ANR	211805	PtrMemberAccess	proto -> common . scope -> ce_flags		211758	0					
ANR	211806	MemberAccess	proto -> common . scope		211758	0					
ANR	211807	PtrMemberAccess	proto -> common		211758	0					
ANR	211808	Identifier	proto		211758	0					
ANR	211809	Identifier	common		211758	1					
ANR	211810	Identifier	scope		211758	1					
ANR	211811	Identifier	ce_flags		211758	1					
ANR	211812	Identifier	ZEND_ACC_INTERFACE		211758	1					
ANR	211813	PrimaryExpression	0		211758	1					
ANR	211814	EqualityExpression	( proto -> common . fn_flags & ZEND_ACC_ABSTRACT ) == 0		211758	1		==			
ANR	211815	BitAndExpression	proto -> common . fn_flags & ZEND_ACC_ABSTRACT		211758	0		&			
ANR	211816	MemberAccess	proto -> common . fn_flags		211758	0					
ANR	211817	PtrMemberAccess	proto -> common		211758	0					
ANR	211818	Identifier	proto		211758	0					
ANR	211819	Identifier	common		211758	1					
ANR	211820	Identifier	fn_flags		211758	1					
ANR	211821	Identifier	ZEND_ACC_ABSTRACT		211758	1					
ANR	211822	PrimaryExpression	0		211758	1					
ANR	211823	CompoundStatement		17:58:660:660	211758	1					
ANR	211824	ReturnStatement	return 1 ;	268:2:9064:9072	211758	0	True				
ANR	211825	PrimaryExpression	1		211758	0					
ANR	211826	IfStatement	if ( ( fe -> common . fn_flags & ZEND_ACC_PRIVATE ) && ( proto -> common . fn_flags & ZEND_ACC_PRIVATE ) )		211758	3					
ANR	211827	Condition	( fe -> common . fn_flags & ZEND_ACC_PRIVATE ) && ( proto -> common . fn_flags & ZEND_ACC_PRIVATE )	272:8:9148:9234	211758	0	True				
ANR	211828	AndExpression	( fe -> common . fn_flags & ZEND_ACC_PRIVATE ) && ( proto -> common . fn_flags & ZEND_ACC_PRIVATE )		211758	0		&&			
ANR	211829	BitAndExpression	fe -> common . fn_flags & ZEND_ACC_PRIVATE		211758	0		&			
ANR	211830	MemberAccess	fe -> common . fn_flags		211758	0					
ANR	211831	PtrMemberAccess	fe -> common		211758	0					
ANR	211832	Identifier	fe		211758	0					
ANR	211833	Identifier	common		211758	1					
ANR	211834	Identifier	fn_flags		211758	1					
ANR	211835	Identifier	ZEND_ACC_PRIVATE		211758	1					
ANR	211836	BitAndExpression	proto -> common . fn_flags & ZEND_ACC_PRIVATE		211758	1		&			
ANR	211837	MemberAccess	proto -> common . fn_flags		211758	0					
ANR	211838	PtrMemberAccess	proto -> common		211758	0					
ANR	211839	Identifier	proto		211758	0					
ANR	211840	Identifier	common		211758	1					
ANR	211841	Identifier	fn_flags		211758	1					
ANR	211842	Identifier	ZEND_ACC_PRIVATE		211758	1					
ANR	211843	CompoundStatement		22:97:837:837	211758	1					
ANR	211844	ReturnStatement	return 1 ;	273:2:9241:9249	211758	0	True				
ANR	211845	PrimaryExpression	1		211758	0					
ANR	211846	IfStatement	if ( proto -> common . required_num_args < fe -> common . required_num_args || proto -> common . num_args > fe -> common . num_args )		211758	4					
ANR	211847	Condition	proto -> common . required_num_args < fe -> common . required_num_args || proto -> common . num_args > fe -> common . num_args	277:5:9293:9404	211758	0	True				
ANR	211848	OrExpression	proto -> common . required_num_args < fe -> common . required_num_args || proto -> common . num_args > fe -> common . num_args		211758	0		||			
ANR	211849	RelationalExpression	proto -> common . required_num_args < fe -> common . required_num_args		211758	0		<			
ANR	211850	MemberAccess	proto -> common . required_num_args		211758	0					
ANR	211851	PtrMemberAccess	proto -> common		211758	0					
ANR	211852	Identifier	proto		211758	0					
ANR	211853	Identifier	common		211758	1					
ANR	211854	Identifier	required_num_args		211758	1					
ANR	211855	MemberAccess	fe -> common . required_num_args		211758	1					
ANR	211856	PtrMemberAccess	fe -> common		211758	0					
ANR	211857	Identifier	fe		211758	0					
ANR	211858	Identifier	common		211758	1					
ANR	211859	Identifier	required_num_args		211758	1					
ANR	211860	RelationalExpression	proto -> common . num_args > fe -> common . num_args		211758	1		>			
ANR	211861	MemberAccess	proto -> common . num_args		211758	0					
ANR	211862	PtrMemberAccess	proto -> common		211758	0					
ANR	211863	Identifier	proto		211758	0					
ANR	211864	Identifier	common		211758	1					
ANR	211865	Identifier	num_args		211758	1					
ANR	211866	MemberAccess	fe -> common . num_args		211758	1					
ANR	211867	PtrMemberAccess	fe -> common		211758	0					
ANR	211868	Identifier	fe		211758	0					
ANR	211869	Identifier	common		211758	1					
ANR	211870	Identifier	num_args		211758	1					
ANR	211871	CompoundStatement		28:51:1007:1007	211758	1					
ANR	211872	ReturnStatement	return 0 ;	279:2:9411:9419	211758	0	True				
ANR	211873	PrimaryExpression	0		211758	0					
ANR	211874	IfStatement	if ( ( proto -> common . fn_flags & ZEND_ACC_RETURN_REFERENCE ) && ! ( fe -> common . fn_flags & ZEND_ACC_RETURN_REFERENCE ) )		211758	5					
ANR	211875	Condition	( proto -> common . fn_flags & ZEND_ACC_RETURN_REFERENCE ) && ! ( fe -> common . fn_flags & ZEND_ACC_RETURN_REFERENCE )	283:5:9487:9594	211758	0	True				
ANR	211876	AndExpression	( proto -> common . fn_flags & ZEND_ACC_RETURN_REFERENCE ) && ! ( fe -> common . fn_flags & ZEND_ACC_RETURN_REFERENCE )		211758	0		&&			
ANR	211877	BitAndExpression	proto -> common . fn_flags & ZEND_ACC_RETURN_REFERENCE		211758	0		&			
ANR	211878	MemberAccess	proto -> common . fn_flags		211758	0					
ANR	211879	PtrMemberAccess	proto -> common		211758	0					
ANR	211880	Identifier	proto		211758	0					
ANR	211881	Identifier	common		211758	1					
ANR	211882	Identifier	fn_flags		211758	1					
ANR	211883	Identifier	ZEND_ACC_RETURN_REFERENCE		211758	1					
ANR	211884	UnaryOperationExpression	! ( fe -> common . fn_flags & ZEND_ACC_RETURN_REFERENCE )		211758	1					
ANR	211885	UnaryOperator	!		211758	0					
ANR	211886	BitAndExpression	fe -> common . fn_flags & ZEND_ACC_RETURN_REFERENCE		211758	1		&			
ANR	211887	MemberAccess	fe -> common . fn_flags		211758	0					
ANR	211888	PtrMemberAccess	fe -> common		211758	0					
ANR	211889	Identifier	fe		211758	0					
ANR	211890	Identifier	common		211758	1					
ANR	211891	Identifier	fn_flags		211758	1					
ANR	211892	Identifier	ZEND_ACC_RETURN_REFERENCE		211758	1					
ANR	211893	CompoundStatement		34:57:1197:1197	211758	1					
ANR	211894	ReturnStatement	return 0 ;	285:2:9601:9609	211758	0	True				
ANR	211895	PrimaryExpression	0		211758	0					
ANR	211896	IfStatement	if ( ( proto -> common . fn_flags & ZEND_ACC_VARIADIC ) && ! ( fe -> common . fn_flags & ZEND_ACC_VARIADIC ) )		211758	6					
ANR	211897	Condition	( proto -> common . fn_flags & ZEND_ACC_VARIADIC ) && ! ( fe -> common . fn_flags & ZEND_ACC_VARIADIC )	288:5:9620:9711	211758	0	True				
ANR	211898	AndExpression	( proto -> common . fn_flags & ZEND_ACC_VARIADIC ) && ! ( fe -> common . fn_flags & ZEND_ACC_VARIADIC )		211758	0		&&			
ANR	211899	BitAndExpression	proto -> common . fn_flags & ZEND_ACC_VARIADIC		211758	0		&			
ANR	211900	MemberAccess	proto -> common . fn_flags		211758	0					
ANR	211901	PtrMemberAccess	proto -> common		211758	0					
ANR	211902	Identifier	proto		211758	0					
ANR	211903	Identifier	common		211758	1					
ANR	211904	Identifier	fn_flags		211758	1					
ANR	211905	Identifier	ZEND_ACC_VARIADIC		211758	1					
ANR	211906	UnaryOperationExpression	! ( fe -> common . fn_flags & ZEND_ACC_VARIADIC )		211758	1					
ANR	211907	UnaryOperator	!		211758	0					
ANR	211908	BitAndExpression	fe -> common . fn_flags & ZEND_ACC_VARIADIC		211758	1		&			
ANR	211909	MemberAccess	fe -> common . fn_flags		211758	0					
ANR	211910	PtrMemberAccess	fe -> common		211758	0					
ANR	211911	Identifier	fe		211758	0					
ANR	211912	Identifier	common		211758	1					
ANR	211913	Identifier	fn_flags		211758	1					
ANR	211914	Identifier	ZEND_ACC_VARIADIC		211758	1					
ANR	211915	CompoundStatement		39:49:1314:1314	211758	1					
ANR	211916	ReturnStatement	return 0 ;	290:2:9718:9726	211758	0	True				
ANR	211917	PrimaryExpression	0		211758	0					
ANR	211918	ExpressionStatement	num_args = proto -> common . num_args	297:1:10009:10042	211758	7	True				
ANR	211919	AssignmentExpression	num_args = proto -> common . num_args		211758	0		=			
ANR	211920	Identifier	num_args		211758	0					
ANR	211921	MemberAccess	proto -> common . num_args		211758	1					
ANR	211922	PtrMemberAccess	proto -> common		211758	0					
ANR	211923	Identifier	proto		211758	0					
ANR	211924	Identifier	common		211758	1					
ANR	211925	Identifier	num_args		211758	1					
ANR	211926	IfStatement	if ( proto -> common . fn_flags & ZEND_ACC_VARIADIC )		211758	8					
ANR	211927	Condition	proto -> common . fn_flags & ZEND_ACC_VARIADIC	298:5:10049:10090	211758	0	True				
ANR	211928	BitAndExpression	proto -> common . fn_flags & ZEND_ACC_VARIADIC		211758	0		&			
ANR	211929	MemberAccess	proto -> common . fn_flags		211758	0					
ANR	211930	PtrMemberAccess	proto -> common		211758	0					
ANR	211931	Identifier	proto		211758	0					
ANR	211932	Identifier	common		211758	1					
ANR	211933	Identifier	fn_flags		211758	1					
ANR	211934	Identifier	ZEND_ACC_VARIADIC		211758	1					
ANR	211935	CompoundStatement		48:49:1693:1693	211758	1					
ANR	211936	ExpressionStatement	num_args ++	299:2:10097:10107	211758	0	True				
ANR	211937	PostIncDecOperationExpression	num_args ++		211758	0					
ANR	211938	Identifier	num_args		211758	0					
ANR	211939	IncDec	++		211758	1					
ANR	211940	IfStatement	if ( fe -> common . num_args >= proto -> common . num_args )		211758	1					
ANR	211941	Condition	fe -> common . num_args >= proto -> common . num_args	300:12:10121:10165	211758	0	True				
ANR	211942	RelationalExpression	fe -> common . num_args >= proto -> common . num_args		211758	0		>=			
ANR	211943	MemberAccess	fe -> common . num_args		211758	0					
ANR	211944	PtrMemberAccess	fe -> common		211758	0					
ANR	211945	Identifier	fe		211758	0					
ANR	211946	Identifier	common		211758	1					
ANR	211947	Identifier	num_args		211758	1					
ANR	211948	MemberAccess	proto -> common . num_args		211758	1					
ANR	211949	PtrMemberAccess	proto -> common		211758	0					
ANR	211950	Identifier	proto		211758	0					
ANR	211951	Identifier	common		211758	1					
ANR	211952	Identifier	num_args		211758	1					
ANR	211953	CompoundStatement		50:59:1768:1768	211758	1					
ANR	211954	ExpressionStatement	num_args = fe -> common . num_args	301:3:10173:10203	211758	0	True				
ANR	211955	AssignmentExpression	num_args = fe -> common . num_args		211758	0		=			
ANR	211956	Identifier	num_args		211758	0					
ANR	211957	MemberAccess	fe -> common . num_args		211758	1					
ANR	211958	PtrMemberAccess	fe -> common		211758	0					
ANR	211959	Identifier	fe		211758	0					
ANR	211960	Identifier	common		211758	1					
ANR	211961	Identifier	num_args		211758	1					
ANR	211962	IfStatement	if ( fe -> common . fn_flags & ZEND_ACC_VARIADIC )		211758	1					
ANR	211963	Condition	fe -> common . fn_flags & ZEND_ACC_VARIADIC	302:7:10212:10250	211758	0	True				
ANR	211964	BitAndExpression	fe -> common . fn_flags & ZEND_ACC_VARIADIC		211758	0		&			
ANR	211965	MemberAccess	fe -> common . fn_flags		211758	0					
ANR	211966	PtrMemberAccess	fe -> common		211758	0					
ANR	211967	Identifier	fe		211758	0					
ANR	211968	Identifier	common		211758	1					
ANR	211969	Identifier	fn_flags		211758	1					
ANR	211970	Identifier	ZEND_ACC_VARIADIC		211758	1					
ANR	211971	CompoundStatement		52:48:1853:1853	211758	1					
ANR	211972	ExpressionStatement	num_args ++	303:4:10259:10269	211758	0	True				
ANR	211973	PostIncDecOperationExpression	num_args ++		211758	0					
ANR	211974	Identifier	num_args		211758	0					
ANR	211975	IncDec	++		211758	1					
ANR	211976	ForStatement	for ( i = 0 ; i < num_args ; i ++ )		211758	9					
ANR	211977	ForInit	i = 0 ;	308:6:10290:10295	211758	0	True				
ANR	211978	AssignmentExpression	i = 0		211758	0		=			
ANR	211979	Identifier	i		211758	0					
ANR	211980	PrimaryExpression	0		211758	1					
ANR	211981	Condition	i < num_args	308:13:10297:10308	211758	1	True				
ANR	211982	RelationalExpression	i < num_args		211758	0		<			
ANR	211983	Identifier	i		211758	0					
ANR	211984	Identifier	num_args		211758	1					
ANR	211985	PostIncDecOperationExpression	i ++	308:27:10311:10313	211758	2	True				
ANR	211986	Identifier	i		211758	0					
ANR	211987	IncDec	++		211758	1					
ANR	211988	CompoundStatement		61:2:1977:2006	211758	3					
ANR	211989	IdentifierDeclStatement	zend_arg_info * fe_arg_info = & fe -> common . arg_info [ i ] ;	309:2:10320:10372	211758	0	True				
ANR	211990	IdentifierDecl	* fe_arg_info = & fe -> common . arg_info [ i ]		211758	0					
ANR	211991	IdentifierDeclType	zend_arg_info *		211758	0					
ANR	211992	Identifier	fe_arg_info		211758	1					
ANR	211993	AssignmentExpression	* fe_arg_info = & fe -> common . arg_info [ i ]		211758	2		=			
ANR	211994	Identifier	fe_arg_info		211758	0					
ANR	211995	UnaryOperationExpression	& fe -> common . arg_info [ i ]		211758	1					
ANR	211996	UnaryOperator	&		211758	0					
ANR	211997	ArrayIndexing	fe -> common . arg_info [ i ]		211758	1					
ANR	211998	MemberAccess	fe -> common . arg_info		211758	0					
ANR	211999	PtrMemberAccess	fe -> common		211758	0					
ANR	212000	Identifier	fe		211758	0					
ANR	212001	Identifier	common		211758	1					
ANR	212002	Identifier	arg_info		211758	1					
ANR	212003	Identifier	i		211758	1					
ANR	212004	IdentifierDeclStatement	zend_arg_info * proto_arg_info ;	311:2:10377:10406	211758	1	True				
ANR	212005	IdentifierDecl	* proto_arg_info		211758	0					
ANR	212006	IdentifierDeclType	zend_arg_info *		211758	0					
ANR	212007	Identifier	proto_arg_info		211758	1					
ANR	212008	IfStatement	if ( i < proto -> common . num_args )		211758	2					
ANR	212009	Condition	i < proto -> common . num_args	312:6:10414:10439	211758	0	True				
ANR	212010	RelationalExpression	i < proto -> common . num_args		211758	0		<			
ANR	212011	Identifier	i		211758	0					
ANR	212012	MemberAccess	proto -> common . num_args		211758	1					
ANR	212013	PtrMemberAccess	proto -> common		211758	0					
ANR	212014	Identifier	proto		211758	0					
ANR	212015	Identifier	common		211758	1					
ANR	212016	Identifier	num_args		211758	1					
ANR	212017	CompoundStatement		62:34:2042:2042	211758	1					
ANR	212018	ExpressionStatement	proto_arg_info = & proto -> common . arg_info [ i ]	313:3:10447:10490	211758	0	True				
ANR	212019	AssignmentExpression	proto_arg_info = & proto -> common . arg_info [ i ]		211758	0		=			
ANR	212020	Identifier	proto_arg_info		211758	0					
ANR	212021	UnaryOperationExpression	& proto -> common . arg_info [ i ]		211758	1					
ANR	212022	UnaryOperator	&		211758	0					
ANR	212023	ArrayIndexing	proto -> common . arg_info [ i ]		211758	1					
ANR	212024	MemberAccess	proto -> common . arg_info		211758	0					
ANR	212025	PtrMemberAccess	proto -> common		211758	0					
ANR	212026	Identifier	proto		211758	0					
ANR	212027	Identifier	common		211758	1					
ANR	212028	Identifier	arg_info		211758	1					
ANR	212029	Identifier	i		211758	1					
ANR	212030	ElseStatement	else		211758	0					
ANR	212031	CompoundStatement		64:9:2101:2101	211758	0					
ANR	212032	ExpressionStatement	proto_arg_info = & proto -> common . arg_info [ proto -> common . num_args ]	315:3:10506:10570	211758	0	True				
ANR	212033	AssignmentExpression	proto_arg_info = & proto -> common . arg_info [ proto -> common . num_args ]		211758	0		=			
ANR	212034	Identifier	proto_arg_info		211758	0					
ANR	212035	UnaryOperationExpression	& proto -> common . arg_info [ proto -> common . num_args ]		211758	1					
ANR	212036	UnaryOperator	&		211758	0					
ANR	212037	ArrayIndexing	proto -> common . arg_info [ proto -> common . num_args ]		211758	1					
ANR	212038	MemberAccess	proto -> common . arg_info		211758	0					
ANR	212039	PtrMemberAccess	proto -> common		211758	0					
ANR	212040	Identifier	proto		211758	0					
ANR	212041	Identifier	common		211758	1					
ANR	212042	Identifier	arg_info		211758	1					
ANR	212043	MemberAccess	proto -> common . num_args		211758	1					
ANR	212044	PtrMemberAccess	proto -> common		211758	0					
ANR	212045	Identifier	proto		211758	0					
ANR	212046	Identifier	common		211758	1					
ANR	212047	Identifier	num_args		211758	1					
ANR	212048	IfStatement	"if ( ! zend_do_perform_type_hint_check ( fe , fe_arg_info , proto , proto_arg_info ) )"		211758	3					
ANR	212049	Condition	"! zend_do_perform_type_hint_check ( fe , fe_arg_info , proto , proto_arg_info )"	318:6:10583:10654	211758	0	True				
ANR	212050	UnaryOperationExpression	"! zend_do_perform_type_hint_check ( fe , fe_arg_info , proto , proto_arg_info )"		211758	0					
ANR	212051	UnaryOperator	!		211758	0					
ANR	212052	CallExpression	"zend_do_perform_type_hint_check ( fe , fe_arg_info , proto , proto_arg_info )"		211758	1					
ANR	212053	Callee	zend_do_perform_type_hint_check		211758	0					
ANR	212054	Identifier	zend_do_perform_type_hint_check		211758	0					
ANR	212055	ArgumentList	fe		211758	1					
ANR	212056	Argument	fe		211758	0					
ANR	212057	Identifier	fe		211758	0					
ANR	212058	Argument	fe_arg_info		211758	1					
ANR	212059	Identifier	fe_arg_info		211758	0					
ANR	212060	Argument	proto		211758	2					
ANR	212061	Identifier	proto		211758	0					
ANR	212062	Argument	proto_arg_info		211758	3					
ANR	212063	Identifier	proto_arg_info		211758	0					
ANR	212064	CompoundStatement		68:80:2257:2257	211758	1					
ANR	212065	ReturnStatement	return 0 ;	319:3:10662:10670	211758	0	True				
ANR	212066	PrimaryExpression	0		211758	0					
ANR	212067	IfStatement	if ( fe_arg_info -> pass_by_reference != proto_arg_info -> pass_by_reference )		211758	4					
ANR	212068	Condition	fe_arg_info -> pass_by_reference != proto_arg_info -> pass_by_reference	323:6:10737:10803	211758	0	True				
ANR	212069	EqualityExpression	fe_arg_info -> pass_by_reference != proto_arg_info -> pass_by_reference		211758	0		!=			
ANR	212070	PtrMemberAccess	fe_arg_info -> pass_by_reference		211758	0					
ANR	212071	Identifier	fe_arg_info		211758	0					
ANR	212072	Identifier	pass_by_reference		211758	1					
ANR	212073	PtrMemberAccess	proto_arg_info -> pass_by_reference		211758	1					
ANR	212074	Identifier	proto_arg_info		211758	0					
ANR	212075	Identifier	pass_by_reference		211758	1					
ANR	212076	CompoundStatement		73:75:2406:2406	211758	1					
ANR	212077	ReturnStatement	return 0 ;	324:3:10811:10819	211758	0	True				
ANR	212078	PrimaryExpression	0		211758	0					
ANR	212079	IfStatement	if ( proto -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE )		211758	10					
ANR	212080	Condition	proto -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE	330:5:10979:11027	211758	0	True				
ANR	212081	BitAndExpression	proto -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE		211758	0		&			
ANR	212082	MemberAccess	proto -> common . fn_flags		211758	0					
ANR	212083	PtrMemberAccess	proto -> common		211758	0					
ANR	212084	Identifier	proto		211758	0					
ANR	212085	Identifier	common		211758	1					
ANR	212086	Identifier	fn_flags		211758	1					
ANR	212087	Identifier	ZEND_ACC_HAS_RETURN_TYPE		211758	1					
ANR	212088	CompoundStatement		80:56:2630:2630	211758	1					
ANR	212089	IfStatement	if ( ! ( fe -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE ) )		211758	0					
ANR	212090	Condition	! ( fe -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE )	332:6:11083:11131	211758	0	True				
ANR	212091	UnaryOperationExpression	! ( fe -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE )		211758	0					
ANR	212092	UnaryOperator	!		211758	0					
ANR	212093	BitAndExpression	fe -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE		211758	1		&			
ANR	212094	MemberAccess	fe -> common . fn_flags		211758	0					
ANR	212095	PtrMemberAccess	fe -> common		211758	0					
ANR	212096	Identifier	fe		211758	0					
ANR	212097	Identifier	common		211758	1					
ANR	212098	Identifier	fn_flags		211758	1					
ANR	212099	Identifier	ZEND_ACC_HAS_RETURN_TYPE		211758	1					
ANR	212100	CompoundStatement		82:57:2734:2734	211758	1					
ANR	212101	ReturnStatement	return 0 ;	333:3:11139:11147	211758	0	True				
ANR	212102	PrimaryExpression	0		211758	0					
ANR	212103	IfStatement	"if ( ! zend_do_perform_type_hint_check ( fe , fe -> common . arg_info - 1 , proto , proto -> common . arg_info - 1 ) )"		211758	1					
ANR	212104	Condition	"! zend_do_perform_type_hint_check ( fe , fe -> common . arg_info - 1 , proto , proto -> common . arg_info - 1 )"	336:6:11160:11255	211758	0	True				
ANR	212105	UnaryOperationExpression	"! zend_do_perform_type_hint_check ( fe , fe -> common . arg_info - 1 , proto , proto -> common . arg_info - 1 )"		211758	0					
ANR	212106	UnaryOperator	!		211758	0					
ANR	212107	CallExpression	"zend_do_perform_type_hint_check ( fe , fe -> common . arg_info - 1 , proto , proto -> common . arg_info - 1 )"		211758	1					
ANR	212108	Callee	zend_do_perform_type_hint_check		211758	0					
ANR	212109	Identifier	zend_do_perform_type_hint_check		211758	0					
ANR	212110	ArgumentList	fe		211758	1					
ANR	212111	Argument	fe		211758	0					
ANR	212112	Identifier	fe		211758	0					
ANR	212113	Argument	fe -> common . arg_info - 1		211758	1					
ANR	212114	AdditiveExpression	fe -> common . arg_info - 1		211758	0		-			
ANR	212115	MemberAccess	fe -> common . arg_info		211758	0					
ANR	212116	PtrMemberAccess	fe -> common		211758	0					
ANR	212117	Identifier	fe		211758	0					
ANR	212118	Identifier	common		211758	1					
ANR	212119	Identifier	arg_info		211758	1					
ANR	212120	PrimaryExpression	1		211758	1					
ANR	212121	Argument	proto		211758	2					
ANR	212122	Identifier	proto		211758	0					
ANR	212123	Argument	proto -> common . arg_info - 1		211758	3					
ANR	212124	AdditiveExpression	proto -> common . arg_info - 1		211758	0		-			
ANR	212125	MemberAccess	proto -> common . arg_info		211758	0					
ANR	212126	PtrMemberAccess	proto -> common		211758	0					
ANR	212127	Identifier	proto		211758	0					
ANR	212128	Identifier	common		211758	1					
ANR	212129	Identifier	arg_info		211758	1					
ANR	212130	PrimaryExpression	1		211758	1					
ANR	212131	CompoundStatement		86:104:2858:2858	211758	1					
ANR	212132	ReturnStatement	return 0 ;	337:3:11263:11271	211758	0	True				
ANR	212133	PrimaryExpression	0		211758	0					
ANR	212134	ReturnStatement	return 1 ;	340:1:11281:11289	211758	11	True				
ANR	212135	PrimaryExpression	1		211758	0					
ANR	212136	ReturnType	static zend_bool		211758	1					
ANR	212137	Identifier	zend_do_perform_implementation_check		211758	2					
ANR	212138	ParameterList	"const zend_function * fe , const zend_function * proto"		211758	3					
ANR	212139	Parameter	const zend_function * fe	250:54:8336:8358	211758	0	True				
ANR	212140	ParameterType	const zend_function *		211758	0					
ANR	212141	Identifier	fe		211758	1					
ANR	212142	Parameter	const zend_function * proto	250:79:8361:8386	211758	1	True				
ANR	212143	ParameterType	const zend_function *		211758	0					
ANR	212144	Identifier	proto		211758	1					
ANR	212145	CFGEntryNode	ENTRY		211758		True				
ANR	212146	CFGExitNode	EXIT		211758		True				
ANR	212147	Symbol	fe_arg_info -> pass_by_reference		211758						
ANR	212148	Symbol	proto -> common . fn_flags		211758						
ANR	212149	Symbol	fe -> common . fn_flags		211758						
ANR	212150	Symbol	proto -> common . type		211758						
ANR	212151	Symbol	* proto_arg_info		211758						
ANR	212152	Symbol	fe -> common . num_args		211758						
ANR	212153	Symbol	num_args		211758						
ANR	212154	Symbol	* proto -> common		211758						
ANR	212155	Symbol	ZEND_USER_FUNCTION		211758						
ANR	212156	Symbol	proto -> common . scope		211758						
ANR	212157	Symbol	ZEND_ACC_INTERFACE		211758						
ANR	212158	Symbol	* * proto		211758						
ANR	212159	Symbol	fe -> common		211758						
ANR	212160	Symbol	proto -> common . arg_info		211758						
ANR	212161	Symbol	proto_arg_info		211758						
ANR	212162	Symbol	* fe		211758						
ANR	212163	Symbol	zend_do_perform_type_hint_check		211758						
ANR	212164	Symbol	ZEND_ACC_HAS_RETURN_TYPE		211758						
ANR	212165	Symbol	i		211758						
ANR	212166	Symbol	fe -> common . required_num_args		211758						
ANR	212167	Symbol	ZEND_ACC_PRIVATE		211758						
ANR	212168	Symbol	ZEND_ACC_ABSTRACT		211758						
ANR	212169	Symbol	ZEND_ACC_VARIADIC		211758						
ANR	212170	Symbol	* proto		211758						
ANR	212171	Symbol	fe_arg_info		211758						
ANR	212172	Symbol	proto -> common . required_num_args		211758						
ANR	212173	Symbol	* proto -> common . scope		211758						
ANR	212174	Symbol	ZEND_ACC_CTOR		211758						
ANR	212175	Symbol	proto -> common . num_args		211758						
ANR	212176	Symbol	fe -> common . arg_info		211758						
ANR	212177	Symbol	proto		211758						
ANR	212178	Symbol	proto -> common . scope -> ce_flags		211758						
ANR	212179	Symbol	ZEND_ACC_RETURN_REFERENCE		211758						
ANR	212180	Symbol	* fe_arg_info		211758						
ANR	212181	Symbol	proto -> common		211758						
ANR	212182	Symbol	proto_arg_info -> pass_by_reference		211758						
ANR	212183	Symbol	fe		211758						
ANR	212184	Function	zend_append_type_hint	344:0:11304:12691							
ANR	212185	FunctionDef	"zend_append_type_hint (smart_str * str , const zend_function * fptr , zend_arg_info * arg_info , int return_hint)"		212184	0					
ANR	212186	CompoundStatement		345:0:11443:12691	212184	0					
ANR	212187	IfStatement	if ( arg_info -> class_name )		212184	0					
ANR	212188	Condition	arg_info -> class_name	346:5:11450:11469	212184	0	True				
ANR	212189	PtrMemberAccess	arg_info -> class_name		212184	0					
ANR	212190	Identifier	arg_info		212184	0					
ANR	212191	Identifier	class_name		212184	1					
ANR	212192	CompoundStatement		4:2:58:79	212184	1					
ANR	212193	IdentifierDeclStatement	const char * class_name ;	347:2:11476:11498	212184	0	True				
ANR	212194	IdentifierDecl	* class_name		212184	0					
ANR	212195	IdentifierDeclType	const char *		212184	0					
ANR	212196	Identifier	class_name		212184	1					
ANR	212197	IdentifierDeclStatement	size_t class_name_len ;	348:2:11502:11523	212184	1	True				
ANR	212198	IdentifierDecl	class_name_len		212184	0					
ANR	212199	IdentifierDeclType	size_t		212184	0					
ANR	212200	Identifier	class_name_len		212184	1					
ANR	212201	IfStatement	if ( fptr -> type == ZEND_INTERNAL_FUNCTION )		212184	2					
ANR	212202	Condition	fptr -> type == ZEND_INTERNAL_FUNCTION	350:6:11532:11567	212184	0	True				
ANR	212203	EqualityExpression	fptr -> type == ZEND_INTERNAL_FUNCTION		212184	0		==			
ANR	212204	PtrMemberAccess	fptr -> type		212184	0					
ANR	212205	Identifier	fptr		212184	0					
ANR	212206	Identifier	type		212184	1					
ANR	212207	Identifier	ZEND_INTERNAL_FUNCTION		212184	1					
ANR	212208	CompoundStatement		6:44:126:126	212184	1					
ANR	212209	ExpressionStatement	class_name = ( ( zend_internal_arg_info * ) arg_info ) -> class_name	351:3:11575:11635	212184	0	True				
ANR	212210	AssignmentExpression	class_name = ( ( zend_internal_arg_info * ) arg_info ) -> class_name		212184	0		=			
ANR	212211	Identifier	class_name		212184	0					
ANR	212212	PtrMemberAccess	( ( zend_internal_arg_info * ) arg_info ) -> class_name		212184	1					
ANR	212213	CastExpression	( zend_internal_arg_info * ) arg_info		212184	0					
ANR	212214	CastTarget	zend_internal_arg_info *		212184	0					
ANR	212215	Identifier	arg_info		212184	1					
ANR	212216	Identifier	class_name		212184	1					
ANR	212217	ExpressionStatement	class_name_len = strlen ( class_name )	352:3:11640:11675	212184	1	True				
ANR	212218	AssignmentExpression	class_name_len = strlen ( class_name )		212184	0		=			
ANR	212219	Identifier	class_name_len		212184	0					
ANR	212220	CallExpression	strlen ( class_name )		212184	1					
ANR	212221	Callee	strlen		212184	0					
ANR	212222	Identifier	strlen		212184	0					
ANR	212223	ArgumentList	class_name		212184	1					
ANR	212224	Argument	class_name		212184	0					
ANR	212225	Identifier	class_name		212184	0					
ANR	212226	ElseStatement	else		212184	0					
ANR	212227	CompoundStatement		9:9:242:242	212184	0					
ANR	212228	ExpressionStatement	class_name = ZSTR_VAL ( arg_info -> class_name )	354:3:11691:11734	212184	0	True				
ANR	212229	AssignmentExpression	class_name = ZSTR_VAL ( arg_info -> class_name )		212184	0		=			
ANR	212230	Identifier	class_name		212184	0					
ANR	212231	CallExpression	ZSTR_VAL ( arg_info -> class_name )		212184	1					
ANR	212232	Callee	ZSTR_VAL		212184	0					
ANR	212233	Identifier	ZSTR_VAL		212184	0					
ANR	212234	ArgumentList	arg_info -> class_name		212184	1					
ANR	212235	Argument	arg_info -> class_name		212184	0					
ANR	212236	PtrMemberAccess	arg_info -> class_name		212184	0					
ANR	212237	Identifier	arg_info		212184	0					
ANR	212238	Identifier	class_name		212184	1					
ANR	212239	ExpressionStatement	class_name_len = ZSTR_LEN ( arg_info -> class_name )	355:3:11739:11786	212184	1	True				
ANR	212240	AssignmentExpression	class_name_len = ZSTR_LEN ( arg_info -> class_name )		212184	0		=			
ANR	212241	Identifier	class_name_len		212184	0					
ANR	212242	CallExpression	ZSTR_LEN ( arg_info -> class_name )		212184	1					
ANR	212243	Callee	ZSTR_LEN		212184	0					
ANR	212244	Identifier	ZSTR_LEN		212184	0					
ANR	212245	ArgumentList	arg_info -> class_name		212184	1					
ANR	212246	Argument	arg_info -> class_name		212184	0					
ANR	212247	PtrMemberAccess	arg_info -> class_name		212184	0					
ANR	212248	Identifier	arg_info		212184	0					
ANR	212249	Identifier	class_name		212184	1					
ANR	212250	IfStatement	"if ( ! strcasecmp ( class_name , ""self"" ) && fptr -> common . scope )"		212184	3					
ANR	212251	Condition	"! strcasecmp ( class_name , ""self"" ) && fptr -> common . scope"	358:6:11799:11851	212184	0	True				
ANR	212252	AndExpression	"! strcasecmp ( class_name , ""self"" ) && fptr -> common . scope"		212184	0		&&			
ANR	212253	UnaryOperationExpression	"! strcasecmp ( class_name , ""self"" )"		212184	0					
ANR	212254	UnaryOperator	!		212184	0					
ANR	212255	CallExpression	"strcasecmp ( class_name , ""self"" )"		212184	1					
ANR	212256	Callee	strcasecmp		212184	0					
ANR	212257	Identifier	strcasecmp		212184	0					
ANR	212258	ArgumentList	class_name		212184	1					
ANR	212259	Argument	class_name		212184	0					
ANR	212260	Identifier	class_name		212184	0					
ANR	212261	Argument	"""self"""		212184	1					
ANR	212262	PrimaryExpression	"""self"""		212184	0					
ANR	212263	MemberAccess	fptr -> common . scope		212184	1					
ANR	212264	PtrMemberAccess	fptr -> common		212184	0					
ANR	212265	Identifier	fptr		212184	0					
ANR	212266	Identifier	common		212184	1					
ANR	212267	Identifier	scope		212184	1					
ANR	212268	CompoundStatement		14:61:410:410	212184	1					
ANR	212269	ExpressionStatement	class_name = ZSTR_VAL ( fptr -> common . scope -> name )	359:3:11859:11906	212184	0	True				
ANR	212270	AssignmentExpression	class_name = ZSTR_VAL ( fptr -> common . scope -> name )		212184	0		=			
ANR	212271	Identifier	class_name		212184	0					
ANR	212272	CallExpression	ZSTR_VAL ( fptr -> common . scope -> name )		212184	1					
ANR	212273	Callee	ZSTR_VAL		212184	0					
ANR	212274	Identifier	ZSTR_VAL		212184	0					
ANR	212275	ArgumentList	fptr -> common . scope -> name		212184	1					
ANR	212276	Argument	fptr -> common . scope -> name		212184	0					
ANR	212277	PtrMemberAccess	fptr -> common . scope -> name		212184	0					
ANR	212278	MemberAccess	fptr -> common . scope		212184	0					
ANR	212279	PtrMemberAccess	fptr -> common		212184	0					
ANR	212280	Identifier	fptr		212184	0					
ANR	212281	Identifier	common		212184	1					
ANR	212282	Identifier	scope		212184	1					
ANR	212283	Identifier	name		212184	1					
ANR	212284	ExpressionStatement	class_name_len = ZSTR_LEN ( fptr -> common . scope -> name )	360:3:11911:11962	212184	1	True				
ANR	212285	AssignmentExpression	class_name_len = ZSTR_LEN ( fptr -> common . scope -> name )		212184	0		=			
ANR	212286	Identifier	class_name_len		212184	0					
ANR	212287	CallExpression	ZSTR_LEN ( fptr -> common . scope -> name )		212184	1					
ANR	212288	Callee	ZSTR_LEN		212184	0					
ANR	212289	Identifier	ZSTR_LEN		212184	0					
ANR	212290	ArgumentList	fptr -> common . scope -> name		212184	1					
ANR	212291	Argument	fptr -> common . scope -> name		212184	0					
ANR	212292	PtrMemberAccess	fptr -> common . scope -> name		212184	0					
ANR	212293	MemberAccess	fptr -> common . scope		212184	0					
ANR	212294	PtrMemberAccess	fptr -> common		212184	0					
ANR	212295	Identifier	fptr		212184	0					
ANR	212296	Identifier	common		212184	1					
ANR	212297	Identifier	scope		212184	1					
ANR	212298	Identifier	name		212184	1					
ANR	212299	ElseStatement	else		212184	0					
ANR	212300	IfStatement	"if ( ! strcasecmp ( class_name , ""parent"" ) && fptr -> common . scope && fptr -> common . scope -> parent )"		212184	0					
ANR	212301	Condition	"! strcasecmp ( class_name , ""parent"" ) && fptr -> common . scope && fptr -> common . scope -> parent"	361:13:11977:12061	212184	0	True				
ANR	212302	AndExpression	"! strcasecmp ( class_name , ""parent"" ) && fptr -> common . scope && fptr -> common . scope -> parent"		212184	0		&&			
ANR	212303	UnaryOperationExpression	"! strcasecmp ( class_name , ""parent"" )"		212184	0					
ANR	212304	UnaryOperator	!		212184	0					
ANR	212305	CallExpression	"strcasecmp ( class_name , ""parent"" )"		212184	1					
ANR	212306	Callee	strcasecmp		212184	0					
ANR	212307	Identifier	strcasecmp		212184	0					
ANR	212308	ArgumentList	class_name		212184	1					
ANR	212309	Argument	class_name		212184	0					
ANR	212310	Identifier	class_name		212184	0					
ANR	212311	Argument	"""parent"""		212184	1					
ANR	212312	PrimaryExpression	"""parent"""		212184	0					
ANR	212313	AndExpression	fptr -> common . scope && fptr -> common . scope -> parent		212184	1		&&			
ANR	212314	MemberAccess	fptr -> common . scope		212184	0					
ANR	212315	PtrMemberAccess	fptr -> common		212184	0					
ANR	212316	Identifier	fptr		212184	0					
ANR	212317	Identifier	common		212184	1					
ANR	212318	Identifier	scope		212184	1					
ANR	212319	PtrMemberAccess	fptr -> common . scope -> parent		212184	1					
ANR	212320	MemberAccess	fptr -> common . scope		212184	0					
ANR	212321	PtrMemberAccess	fptr -> common		212184	0					
ANR	212322	Identifier	fptr		212184	0					
ANR	212323	Identifier	common		212184	1					
ANR	212324	Identifier	scope		212184	1					
ANR	212325	Identifier	parent		212184	1					
ANR	212326	CompoundStatement		17:100:620:620	212184	1					
ANR	212327	ExpressionStatement	class_name = ZSTR_VAL ( fptr -> common . scope -> parent -> name )	362:3:12069:12124	212184	0	True				
ANR	212328	AssignmentExpression	class_name = ZSTR_VAL ( fptr -> common . scope -> parent -> name )		212184	0		=			
ANR	212329	Identifier	class_name		212184	0					
ANR	212330	CallExpression	ZSTR_VAL ( fptr -> common . scope -> parent -> name )		212184	1					
ANR	212331	Callee	ZSTR_VAL		212184	0					
ANR	212332	Identifier	ZSTR_VAL		212184	0					
ANR	212333	ArgumentList	fptr -> common . scope -> parent -> name		212184	1					
ANR	212334	Argument	fptr -> common . scope -> parent -> name		212184	0					
ANR	212335	PtrMemberAccess	fptr -> common . scope -> parent -> name		212184	0					
ANR	212336	PtrMemberAccess	fptr -> common . scope -> parent		212184	0					
ANR	212337	MemberAccess	fptr -> common . scope		212184	0					
ANR	212338	PtrMemberAccess	fptr -> common		212184	0					
ANR	212339	Identifier	fptr		212184	0					
ANR	212340	Identifier	common		212184	1					
ANR	212341	Identifier	scope		212184	1					
ANR	212342	Identifier	parent		212184	1					
ANR	212343	Identifier	name		212184	1					
ANR	212344	ExpressionStatement	class_name_len = ZSTR_LEN ( fptr -> common . scope -> parent -> name )	363:3:12129:12188	212184	1	True				
ANR	212345	AssignmentExpression	class_name_len = ZSTR_LEN ( fptr -> common . scope -> parent -> name )		212184	0		=			
ANR	212346	Identifier	class_name_len		212184	0					
ANR	212347	CallExpression	ZSTR_LEN ( fptr -> common . scope -> parent -> name )		212184	1					
ANR	212348	Callee	ZSTR_LEN		212184	0					
ANR	212349	Identifier	ZSTR_LEN		212184	0					
ANR	212350	ArgumentList	fptr -> common . scope -> parent -> name		212184	1					
ANR	212351	Argument	fptr -> common . scope -> parent -> name		212184	0					
ANR	212352	PtrMemberAccess	fptr -> common . scope -> parent -> name		212184	0					
ANR	212353	PtrMemberAccess	fptr -> common . scope -> parent		212184	0					
ANR	212354	MemberAccess	fptr -> common . scope		212184	0					
ANR	212355	PtrMemberAccess	fptr -> common		212184	0					
ANR	212356	Identifier	fptr		212184	0					
ANR	212357	Identifier	common		212184	1					
ANR	212358	Identifier	scope		212184	1					
ANR	212359	Identifier	parent		212184	1					
ANR	212360	Identifier	name		212184	1					
ANR	212361	ExpressionStatement	"smart_str_appendl ( str , class_name , class_name_len )"	366:2:12197:12247	212184	4	True				
ANR	212362	CallExpression	"smart_str_appendl ( str , class_name , class_name_len )"		212184	0					
ANR	212363	Callee	smart_str_appendl		212184	0					
ANR	212364	Identifier	smart_str_appendl		212184	0					
ANR	212365	ArgumentList	str		212184	1					
ANR	212366	Argument	str		212184	0					
ANR	212367	Identifier	str		212184	0					
ANR	212368	Argument	class_name		212184	1					
ANR	212369	Identifier	class_name		212184	0					
ANR	212370	Argument	class_name_len		212184	2					
ANR	212371	Identifier	class_name_len		212184	0					
ANR	212372	IfStatement	if ( ! return_hint )		212184	5					
ANR	212373	Condition	! return_hint	367:6:12255:12266	212184	0	True				
ANR	212374	UnaryOperationExpression	! return_hint		212184	0					
ANR	212375	UnaryOperator	!		212184	0					
ANR	212376	Identifier	return_hint		212184	1					
ANR	212377	CompoundStatement		23:20:825:825	212184	1					
ANR	212378	ExpressionStatement	"smart_str_appendc ( str , ' ' )"	368:3:12274:12301	212184	0	True				
ANR	212379	CallExpression	"smart_str_appendc ( str , ' ' )"		212184	0					
ANR	212380	Callee	smart_str_appendc		212184	0					
ANR	212381	Identifier	smart_str_appendc		212184	0					
ANR	212382	ArgumentList	str		212184	1					
ANR	212383	Argument	str		212184	0					
ANR	212384	Identifier	str		212184	0					
ANR	212385	Argument	' '		212184	1					
ANR	212386	PrimaryExpression	' '		212184	0					
ANR	212387	ElseStatement	else		212184	0					
ANR	212388	IfStatement	if ( arg_info -> type_hint )		212184	0					
ANR	212389	Condition	arg_info -> type_hint	370:12:12319:12337	212184	0	True				
ANR	212390	PtrMemberAccess	arg_info -> type_hint		212184	0					
ANR	212391	Identifier	arg_info		212184	0					
ANR	212392	Identifier	type_hint		212184	1					
ANR	212393	CompoundStatement		26:33:896:896	212184	1					
ANR	212394	IfStatement	if ( arg_info -> type_hint == IS_LONG )		212184	0					
ANR	212395	Condition	arg_info -> type_hint == IS_LONG	371:6:12348:12377	212184	0	True				
ANR	212396	EqualityExpression	arg_info -> type_hint == IS_LONG		212184	0		==			
ANR	212397	PtrMemberAccess	arg_info -> type_hint		212184	0					
ANR	212398	Identifier	arg_info		212184	0					
ANR	212399	Identifier	type_hint		212184	1					
ANR	212400	Identifier	IS_LONG		212184	1					
ANR	212401	CompoundStatement		27:38:936:936	212184	1					
ANR	212402	ExpressionStatement	"smart_str_appendl ( str , ""int"" , 3 )"	372:3:12385:12417	212184	0	True				
ANR	212403	CallExpression	"smart_str_appendl ( str , ""int"" , 3 )"		212184	0					
ANR	212404	Callee	smart_str_appendl		212184	0					
ANR	212405	Identifier	smart_str_appendl		212184	0					
ANR	212406	ArgumentList	str		212184	1					
ANR	212407	Argument	str		212184	0					
ANR	212408	Identifier	str		212184	0					
ANR	212409	Argument	"""int"""		212184	1					
ANR	212410	PrimaryExpression	"""int"""		212184	0					
ANR	212411	Argument	3		212184	2					
ANR	212412	PrimaryExpression	3		212184	0					
ANR	212413	ElseStatement	else		212184	0					
ANR	212414	IfStatement	if ( arg_info -> type_hint == _IS_BOOL )		212184	0					
ANR	212415	Condition	arg_info -> type_hint == _IS_BOOL	373:13:12432:12462	212184	0	True				
ANR	212416	EqualityExpression	arg_info -> type_hint == _IS_BOOL		212184	0		==			
ANR	212417	PtrMemberAccess	arg_info -> type_hint		212184	0					
ANR	212418	Identifier	arg_info		212184	0					
ANR	212419	Identifier	type_hint		212184	1					
ANR	212420	Identifier	_IS_BOOL		212184	1					
ANR	212421	CompoundStatement		29:46:1021:1021	212184	1					
ANR	212422	ExpressionStatement	"smart_str_appendl ( str , ""bool"" , 4 )"	374:3:12470:12503	212184	0	True				
ANR	212423	CallExpression	"smart_str_appendl ( str , ""bool"" , 4 )"		212184	0					
ANR	212424	Callee	smart_str_appendl		212184	0					
ANR	212425	Identifier	smart_str_appendl		212184	0					
ANR	212426	ArgumentList	str		212184	1					
ANR	212427	Argument	str		212184	0					
ANR	212428	Identifier	str		212184	0					
ANR	212429	Argument	"""bool"""		212184	1					
ANR	212430	PrimaryExpression	"""bool"""		212184	0					
ANR	212431	Argument	4		212184	2					
ANR	212432	PrimaryExpression	4		212184	0					
ANR	212433	ElseStatement	else		212184	0					
ANR	212434	CompoundStatement		32:3:1075:1142	212184	0					
ANR	212435	IdentifierDeclStatement	const char * type_name = zend_get_type_by_const ( arg_info -> type_hint ) ;	376:3:12519:12586	212184	0	True				
ANR	212436	IdentifierDecl	* type_name = zend_get_type_by_const ( arg_info -> type_hint )		212184	0					
ANR	212437	IdentifierDeclType	const char *		212184	0					
ANR	212438	Identifier	type_name		212184	1					
ANR	212439	AssignmentExpression	* type_name = zend_get_type_by_const ( arg_info -> type_hint )		212184	2		=			
ANR	212440	Identifier	type_name		212184	0					
ANR	212441	CallExpression	zend_get_type_by_const ( arg_info -> type_hint )		212184	1					
ANR	212442	Callee	zend_get_type_by_const		212184	0					
ANR	212443	Identifier	zend_get_type_by_const		212184	0					
ANR	212444	ArgumentList	arg_info -> type_hint		212184	1					
ANR	212445	Argument	arg_info -> type_hint		212184	0					
ANR	212446	PtrMemberAccess	arg_info -> type_hint		212184	0					
ANR	212447	Identifier	arg_info		212184	0					
ANR	212448	Identifier	type_hint		212184	1					
ANR	212449	ExpressionStatement	"smart_str_appends ( str , type_name )"	377:3:12591:12624	212184	1	True				
ANR	212450	CallExpression	"smart_str_appends ( str , type_name )"		212184	0					
ANR	212451	Callee	smart_str_appends		212184	0					
ANR	212452	Identifier	smart_str_appends		212184	0					
ANR	212453	ArgumentList	str		212184	1					
ANR	212454	Argument	str		212184	0					
ANR	212455	Identifier	str		212184	0					
ANR	212456	Argument	type_name		212184	1					
ANR	212457	Identifier	type_name		212184	0					
ANR	212458	IfStatement	if ( ! return_hint )		212184	1					
ANR	212459	Condition	! return_hint	379:6:12636:12647	212184	0	True				
ANR	212460	UnaryOperationExpression	! return_hint		212184	0					
ANR	212461	UnaryOperator	!		212184	0					
ANR	212462	Identifier	return_hint		212184	1					
ANR	212463	CompoundStatement		35:20:1206:1206	212184	1					
ANR	212464	ExpressionStatement	"smart_str_appendc ( str , ' ' )"	380:3:12655:12682	212184	0	True				
ANR	212465	CallExpression	"smart_str_appendc ( str , ' ' )"		212184	0					
ANR	212466	Callee	smart_str_appendc		212184	0					
ANR	212467	Identifier	smart_str_appendc		212184	0					
ANR	212468	ArgumentList	str		212184	1					
ANR	212469	Argument	str		212184	0					
ANR	212470	Identifier	str		212184	0					
ANR	212471	Argument	' '		212184	1					
ANR	212472	PrimaryExpression	' '		212184	0					
ANR	212473	ReturnType	static ZEND_COLD void		212184	1					
ANR	212474	Identifier	zend_append_type_hint		212184	2					
ANR	212475	ParameterList	"smart_str * str , const zend_function * fptr , zend_arg_info * arg_info , int return_hint"		212184	3					
ANR	212476	Parameter	smart_str * str	344:44:11348:11361	212184	0	True				
ANR	212477	ParameterType	smart_str *		212184	0					
ANR	212478	Identifier	str		212184	1					
ANR	212479	Parameter	const zend_function * fptr	344:60:11364:11388	212184	1	True				
ANR	212480	ParameterType	const zend_function *		212184	0					
ANR	212481	Identifier	fptr		212184	1					
ANR	212482	Parameter	zend_arg_info * arg_info	344:87:11391:11413	212184	2	True				
ANR	212483	ParameterType	zend_arg_info *		212184	0					
ANR	212484	Identifier	arg_info		212184	1					
ANR	212485	Parameter	int return_hint	344:112:11416:11430	212184	3	True				
ANR	212486	ParameterType	int		212184	0					
ANR	212487	Identifier	return_hint		212184	1					
ANR	212488	CFGEntryNode	ENTRY		212184		True				
ANR	212489	CFGExitNode	EXIT		212184		True				
ANR	212490	Symbol	* fptr -> common . scope -> parent		212184						
ANR	212491	Symbol	type_name		212184						
ANR	212492	Symbol	arg_info -> type_hint		212184						
ANR	212493	Symbol	( ( zend_internal_arg_info * ) arg_info ) -> class_name		212184						
ANR	212494	Symbol	fptr -> type		212184						
ANR	212495	Symbol	* arg_info		212184						
ANR	212496	Symbol	fptr -> common . scope -> parent -> name		212184						
ANR	212497	Symbol	ZEND_INTERNAL_FUNCTION		212184						
ANR	212498	Symbol	strlen		212184						
ANR	212499	Symbol	return_hint		212184						
ANR	212500	Symbol	_IS_BOOL		212184						
ANR	212501	Symbol	IS_LONG		212184						
ANR	212502	Symbol	fptr -> common . scope		212184						
ANR	212503	Symbol	arg_info -> class_name		212184						
ANR	212504	Symbol	* * * fptr		212184						
ANR	212505	Symbol	strcasecmp		212184						
ANR	212506	Symbol	class_name		212184						
ANR	212507	Symbol	* * fptr -> common		212184						
ANR	212508	Symbol	* fptr		212184						
ANR	212509	Symbol	zend_get_type_by_const		212184						
ANR	212510	Symbol	* * fptr		212184						
ANR	212511	Symbol	* fptr -> common . scope		212184						
ANR	212512	Symbol	fptr -> common		212184						
ANR	212513	Symbol	ZSTR_VAL		212184						
ANR	212514	Symbol	str		212184						
ANR	212515	Symbol	arg_info		212184						
ANR	212516	Symbol	* fptr -> common		212184						
ANR	212517	Symbol	* * fptr -> common . scope		212184						
ANR	212518	Symbol	fptr		212184						
ANR	212519	Symbol	ZSTR_LEN		212184						
ANR	212520	Symbol	fptr -> common . scope -> parent		212184						
ANR	212521	Symbol	fptr -> common . scope -> name		212184						
ANR	212522	Symbol	class_name_len		212184						
ANR	212523	Function	zend_get_function_declaration	386:0:12704:16088							
ANR	212524	FunctionDef	zend_get_function_declaration (const zend_function * fptr)		212523	0					
ANR	212525	CompoundStatement		387:0:12801:16088	212523	0					
ANR	212526	IdentifierDeclStatement	smart_str str = { 0 } ;	388:1:12804:12823	212523	0	True				
ANR	212527	IdentifierDecl	str = { 0 }		212523	0					
ANR	212528	IdentifierDeclType	smart_str		212523	0					
ANR	212529	Identifier	str		212523	1					
ANR	212530	AssignmentExpression	str = { 0 }		212523	2		=			
ANR	212531	Identifier	str		212523	0					
ANR	212532	InitializerList	0		212523	1					
ANR	212533	PrimaryExpression	0		212523	0					
ANR	212534	IfStatement	if ( fptr -> op_array . fn_flags & ZEND_ACC_RETURN_REFERENCE )		212523	1					
ANR	212535	Condition	fptr -> op_array . fn_flags & ZEND_ACC_RETURN_REFERENCE	390:5:12831:12881	212523	0	True				
ANR	212536	BitAndExpression	fptr -> op_array . fn_flags & ZEND_ACC_RETURN_REFERENCE		212523	0		&			
ANR	212537	MemberAccess	fptr -> op_array . fn_flags		212523	0					
ANR	212538	PtrMemberAccess	fptr -> op_array		212523	0					
ANR	212539	Identifier	fptr		212523	0					
ANR	212540	Identifier	op_array		212523	1					
ANR	212541	Identifier	fn_flags		212523	1					
ANR	212542	Identifier	ZEND_ACC_RETURN_REFERENCE		212523	1					
ANR	212543	CompoundStatement		4:58:82:82	212523	1					
ANR	212544	ExpressionStatement	"smart_str_appends ( & str , ""& "" )"	391:2:12888:12917	212523	0	True				
ANR	212545	CallExpression	"smart_str_appends ( & str , ""& "" )"		212523	0					
ANR	212546	Callee	smart_str_appends		212523	0					
ANR	212547	Identifier	smart_str_appends		212523	0					
ANR	212548	ArgumentList	& str		212523	1					
ANR	212549	Argument	& str		212523	0					
ANR	212550	UnaryOperationExpression	& str		212523	0					
ANR	212551	UnaryOperator	&		212523	0					
ANR	212552	Identifier	str		212523	1					
ANR	212553	Argument	"""& """		212523	1					
ANR	212554	PrimaryExpression	"""& """		212523	0					
ANR	212555	IfStatement	if ( fptr -> common . scope )		212523	2					
ANR	212556	Condition	fptr -> common . scope	394:5:12928:12945	212523	0	True				
ANR	212557	MemberAccess	fptr -> common . scope		212523	0					
ANR	212558	PtrMemberAccess	fptr -> common		212523	0					
ANR	212559	Identifier	fptr		212523	0					
ANR	212560	Identifier	common		212523	1					
ANR	212561	Identifier	scope		212523	1					
ANR	212562	CompoundStatement		8:25:146:146	212523	1					
ANR	212563	ExpressionStatement	"smart_str_appendl ( & str , ZSTR_VAL ( fptr -> common . scope -> name ) , strlen ( ZSTR_VAL ( fptr -> common . scope -> name ) ) )"	396:2:13001:13104	212523	0	True				
ANR	212564	CallExpression	"smart_str_appendl ( & str , ZSTR_VAL ( fptr -> common . scope -> name ) , strlen ( ZSTR_VAL ( fptr -> common . scope -> name ) ) )"		212523	0					
ANR	212565	Callee	smart_str_appendl		212523	0					
ANR	212566	Identifier	smart_str_appendl		212523	0					
ANR	212567	ArgumentList	& str		212523	1					
ANR	212568	Argument	& str		212523	0					
ANR	212569	UnaryOperationExpression	& str		212523	0					
ANR	212570	UnaryOperator	&		212523	0					
ANR	212571	Identifier	str		212523	1					
ANR	212572	Argument	ZSTR_VAL ( fptr -> common . scope -> name )		212523	1					
ANR	212573	CallExpression	ZSTR_VAL ( fptr -> common . scope -> name )		212523	0					
ANR	212574	Callee	ZSTR_VAL		212523	0					
ANR	212575	Identifier	ZSTR_VAL		212523	0					
ANR	212576	ArgumentList	fptr -> common . scope -> name		212523	1					
ANR	212577	Argument	fptr -> common . scope -> name		212523	0					
ANR	212578	PtrMemberAccess	fptr -> common . scope -> name		212523	0					
ANR	212579	MemberAccess	fptr -> common . scope		212523	0					
ANR	212580	PtrMemberAccess	fptr -> common		212523	0					
ANR	212581	Identifier	fptr		212523	0					
ANR	212582	Identifier	common		212523	1					
ANR	212583	Identifier	scope		212523	1					
ANR	212584	Identifier	name		212523	1					
ANR	212585	Argument	strlen ( ZSTR_VAL ( fptr -> common . scope -> name ) )		212523	2					
ANR	212586	CallExpression	strlen ( ZSTR_VAL ( fptr -> common . scope -> name ) )		212523	0					
ANR	212587	Callee	strlen		212523	0					
ANR	212588	Identifier	strlen		212523	0					
ANR	212589	ArgumentList	ZSTR_VAL ( fptr -> common . scope -> name )		212523	1					
ANR	212590	Argument	ZSTR_VAL ( fptr -> common . scope -> name )		212523	0					
ANR	212591	CallExpression	ZSTR_VAL ( fptr -> common . scope -> name )		212523	0					
ANR	212592	Callee	ZSTR_VAL		212523	0					
ANR	212593	Identifier	ZSTR_VAL		212523	0					
ANR	212594	ArgumentList	fptr -> common . scope -> name		212523	1					
ANR	212595	Argument	fptr -> common . scope -> name		212523	0					
ANR	212596	PtrMemberAccess	fptr -> common . scope -> name		212523	0					
ANR	212597	MemberAccess	fptr -> common . scope		212523	0					
ANR	212598	PtrMemberAccess	fptr -> common		212523	0					
ANR	212599	Identifier	fptr		212523	0					
ANR	212600	Identifier	common		212523	1					
ANR	212601	Identifier	scope		212523	1					
ANR	212602	Identifier	name		212523	1					
ANR	212603	ExpressionStatement	"smart_str_appends ( & str , ""::"" )"	397:2:13108:13137	212523	1	True				
ANR	212604	CallExpression	"smart_str_appends ( & str , ""::"" )"		212523	0					
ANR	212605	Callee	smart_str_appends		212523	0					
ANR	212606	Identifier	smart_str_appends		212523	0					
ANR	212607	ArgumentList	& str		212523	1					
ANR	212608	Argument	& str		212523	0					
ANR	212609	UnaryOperationExpression	& str		212523	0					
ANR	212610	UnaryOperator	&		212523	0					
ANR	212611	Identifier	str		212523	1					
ANR	212612	Argument	"""::"""		212523	1					
ANR	212613	PrimaryExpression	"""::"""		212523	0					
ANR	212614	ExpressionStatement	"smart_str_append ( & str , fptr -> common . function_name )"	400:1:13144:13194	212523	3	True				
ANR	212615	CallExpression	"smart_str_append ( & str , fptr -> common . function_name )"		212523	0					
ANR	212616	Callee	smart_str_append		212523	0					
ANR	212617	Identifier	smart_str_append		212523	0					
ANR	212618	ArgumentList	& str		212523	1					
ANR	212619	Argument	& str		212523	0					
ANR	212620	UnaryOperationExpression	& str		212523	0					
ANR	212621	UnaryOperator	&		212523	0					
ANR	212622	Identifier	str		212523	1					
ANR	212623	Argument	fptr -> common . function_name		212523	1					
ANR	212624	MemberAccess	fptr -> common . function_name		212523	0					
ANR	212625	PtrMemberAccess	fptr -> common		212523	0					
ANR	212626	Identifier	fptr		212523	0					
ANR	212627	Identifier	common		212523	1					
ANR	212628	Identifier	function_name		212523	1					
ANR	212629	ExpressionStatement	"smart_str_appendc ( & str , '(' )"	401:1:13197:13225	212523	4	True				
ANR	212630	CallExpression	"smart_str_appendc ( & str , '(' )"		212523	0					
ANR	212631	Callee	smart_str_appendc		212523	0					
ANR	212632	Identifier	smart_str_appendc		212523	0					
ANR	212633	ArgumentList	& str		212523	1					
ANR	212634	Argument	& str		212523	0					
ANR	212635	UnaryOperationExpression	& str		212523	0					
ANR	212636	UnaryOperator	&		212523	0					
ANR	212637	Identifier	str		212523	1					
ANR	212638	Argument	'('		212523	1					
ANR	212639	PrimaryExpression	'('		212523	0					
ANR	212640	IfStatement	if ( fptr -> common . arg_info )		212523	5					
ANR	212641	Condition	fptr -> common . arg_info	403:5:13233:13253	212523	0	True				
ANR	212642	MemberAccess	fptr -> common . arg_info		212523	0					
ANR	212643	PtrMemberAccess	fptr -> common		212523	0					
ANR	212644	Identifier	fptr		212523	0					
ANR	212645	Identifier	common		212523	1					
ANR	212646	Identifier	arg_info		212523	1					
ANR	212647	CompoundStatement		19:2:492:539	212523	1					
ANR	212648	IdentifierDeclStatement	"uint32_t i , num_args , required ;"	404:2:13260:13290	212523	0	True				
ANR	212649	IdentifierDecl	i		212523	0					
ANR	212650	IdentifierDeclType	uint32_t		212523	0					
ANR	212651	Identifier	i		212523	1					
ANR	212652	IdentifierDecl	num_args		212523	1					
ANR	212653	IdentifierDeclType	uint32_t		212523	0					
ANR	212654	Identifier	num_args		212523	1					
ANR	212655	IdentifierDecl	required		212523	2					
ANR	212656	IdentifierDeclType	uint32_t		212523	0					
ANR	212657	Identifier	required		212523	1					
ANR	212658	IdentifierDeclStatement	zend_arg_info * arg_info = fptr -> common . arg_info ;	405:2:13294:13341	212523	1	True				
ANR	212659	IdentifierDecl	* arg_info = fptr -> common . arg_info		212523	0					
ANR	212660	IdentifierDeclType	zend_arg_info *		212523	0					
ANR	212661	Identifier	arg_info		212523	1					
ANR	212662	AssignmentExpression	* arg_info = fptr -> common . arg_info		212523	2		=			
ANR	212663	Identifier	arg_info		212523	0					
ANR	212664	MemberAccess	fptr -> common . arg_info		212523	1					
ANR	212665	PtrMemberAccess	fptr -> common		212523	0					
ANR	212666	Identifier	fptr		212523	0					
ANR	212667	Identifier	common		212523	1					
ANR	212668	Identifier	arg_info		212523	1					
ANR	212669	ExpressionStatement	required = fptr -> common . required_num_args	407:2:13346:13387	212523	2	True				
ANR	212670	AssignmentExpression	required = fptr -> common . required_num_args		212523	0		=			
ANR	212671	Identifier	required		212523	0					
ANR	212672	MemberAccess	fptr -> common . required_num_args		212523	1					
ANR	212673	PtrMemberAccess	fptr -> common		212523	0					
ANR	212674	Identifier	fptr		212523	0					
ANR	212675	Identifier	common		212523	1					
ANR	212676	Identifier	required_num_args		212523	1					
ANR	212677	ExpressionStatement	num_args = fptr -> common . num_args	408:2:13391:13423	212523	3	True				
ANR	212678	AssignmentExpression	num_args = fptr -> common . num_args		212523	0		=			
ANR	212679	Identifier	num_args		212523	0					
ANR	212680	MemberAccess	fptr -> common . num_args		212523	1					
ANR	212681	PtrMemberAccess	fptr -> common		212523	0					
ANR	212682	Identifier	fptr		212523	0					
ANR	212683	Identifier	common		212523	1					
ANR	212684	Identifier	num_args		212523	1					
ANR	212685	IfStatement	if ( fptr -> common . fn_flags & ZEND_ACC_VARIADIC )		212523	4					
ANR	212686	Condition	fptr -> common . fn_flags & ZEND_ACC_VARIADIC	409:6:13431:13471	212523	0	True				
ANR	212687	BitAndExpression	fptr -> common . fn_flags & ZEND_ACC_VARIADIC		212523	0		&			
ANR	212688	MemberAccess	fptr -> common . fn_flags		212523	0					
ANR	212689	PtrMemberAccess	fptr -> common		212523	0					
ANR	212690	Identifier	fptr		212523	0					
ANR	212691	Identifier	common		212523	1					
ANR	212692	Identifier	fn_flags		212523	1					
ANR	212693	Identifier	ZEND_ACC_VARIADIC		212523	1					
ANR	212694	CompoundStatement		23:49:672:672	212523	1					
ANR	212695	ExpressionStatement	num_args ++	410:3:13479:13489	212523	0	True				
ANR	212696	PostIncDecOperationExpression	num_args ++		212523	0					
ANR	212697	Identifier	num_args		212523	0					
ANR	212698	IncDec	++		212523	1					
ANR	212699	ForStatement	for ( i = 0 ; i < num_args ; )		212523	5					
ANR	212700	ForInit	i = 0 ;	412:7:13502:13507	212523	0	True				
ANR	212701	AssignmentExpression	i = 0		212523	0		=			
ANR	212702	Identifier	i		212523	0					
ANR	212703	PrimaryExpression	0		212523	1					
ANR	212704	Condition	i < num_args	412:14:13509:13520	212523	1	True				
ANR	212705	RelationalExpression	i < num_args		212523	0		<			
ANR	212706	Identifier	i		212523	0					
ANR	212707	Identifier	num_args		212523	1					
ANR	212708	CompoundStatement		26:29:722:722	212523	2					
ANR	212709	ExpressionStatement	"zend_append_type_hint ( & str , fptr , arg_info , 0 )"	413:3:13529:13575	212523	0	True				
ANR	212710	CallExpression	"zend_append_type_hint ( & str , fptr , arg_info , 0 )"		212523	0					
ANR	212711	Callee	zend_append_type_hint		212523	0					
ANR	212712	Identifier	zend_append_type_hint		212523	0					
ANR	212713	ArgumentList	& str		212523	1					
ANR	212714	Argument	& str		212523	0					
ANR	212715	UnaryOperationExpression	& str		212523	0					
ANR	212716	UnaryOperator	&		212523	0					
ANR	212717	Identifier	str		212523	1					
ANR	212718	Argument	fptr		212523	1					
ANR	212719	Identifier	fptr		212523	0					
ANR	212720	Argument	arg_info		212523	2					
ANR	212721	Identifier	arg_info		212523	0					
ANR	212722	Argument	0		212523	3					
ANR	212723	PrimaryExpression	0		212523	0					
ANR	212724	IfStatement	if ( arg_info -> pass_by_reference )		212523	1					
ANR	212725	Condition	arg_info -> pass_by_reference	415:7:13585:13611	212523	0	True				
ANR	212726	PtrMemberAccess	arg_info -> pass_by_reference		212523	0					
ANR	212727	Identifier	arg_info		212523	0					
ANR	212728	Identifier	pass_by_reference		212523	1					
ANR	212729	CompoundStatement		29:36:812:812	212523	1					
ANR	212730	ExpressionStatement	"smart_str_appendc ( & str , '&' )"	416:4:13620:13648	212523	0	True				
ANR	212731	CallExpression	"smart_str_appendc ( & str , '&' )"		212523	0					
ANR	212732	Callee	smart_str_appendc		212523	0					
ANR	212733	Identifier	smart_str_appendc		212523	0					
ANR	212734	ArgumentList	& str		212523	1					
ANR	212735	Argument	& str		212523	0					
ANR	212736	UnaryOperationExpression	& str		212523	0					
ANR	212737	UnaryOperator	&		212523	0					
ANR	212738	Identifier	str		212523	1					
ANR	212739	Argument	'&'		212523	1					
ANR	212740	PrimaryExpression	'&'		212523	0					
ANR	212741	IfStatement	if ( arg_info -> is_variadic )		212523	2					
ANR	212742	Condition	arg_info -> is_variadic	419:7:13663:13683	212523	0	True				
ANR	212743	PtrMemberAccess	arg_info -> is_variadic		212523	0					
ANR	212744	Identifier	arg_info		212523	0					
ANR	212745	Identifier	is_variadic		212523	1					
ANR	212746	CompoundStatement		33:30:884:884	212523	1					
ANR	212747	ExpressionStatement	"smart_str_appends ( & str , ""..."" )"	420:4:13692:13722	212523	0	True				
ANR	212748	CallExpression	"smart_str_appends ( & str , ""..."" )"		212523	0					
ANR	212749	Callee	smart_str_appends		212523	0					
ANR	212750	Identifier	smart_str_appends		212523	0					
ANR	212751	ArgumentList	& str		212523	1					
ANR	212752	Argument	& str		212523	0					
ANR	212753	UnaryOperationExpression	& str		212523	0					
ANR	212754	UnaryOperator	&		212523	0					
ANR	212755	Identifier	str		212523	1					
ANR	212756	Argument	"""..."""		212523	1					
ANR	212757	PrimaryExpression	"""..."""		212523	0					
ANR	212758	ExpressionStatement	"smart_str_appendc ( & str , '$' )"	423:3:13733:13761	212523	3	True				
ANR	212759	CallExpression	"smart_str_appendc ( & str , '$' )"		212523	0					
ANR	212760	Callee	smart_str_appendc		212523	0					
ANR	212761	Identifier	smart_str_appendc		212523	0					
ANR	212762	ArgumentList	& str		212523	1					
ANR	212763	Argument	& str		212523	0					
ANR	212764	UnaryOperationExpression	& str		212523	0					
ANR	212765	UnaryOperator	&		212523	0					
ANR	212766	Identifier	str		212523	1					
ANR	212767	Argument	'$'		212523	1					
ANR	212768	PrimaryExpression	'$'		212523	0					
ANR	212769	IfStatement	if ( arg_info -> name )		212523	4					
ANR	212770	Condition	arg_info -> name	425:7:13771:13784	212523	0	True				
ANR	212771	PtrMemberAccess	arg_info -> name		212523	0					
ANR	212772	Identifier	arg_info		212523	0					
ANR	212773	Identifier	name		212523	1					
ANR	212774	CompoundStatement		39:23:985:985	212523	1					
ANR	212775	IfStatement	if ( fptr -> type == ZEND_INTERNAL_FUNCTION )		212523	0					
ANR	212776	Condition	fptr -> type == ZEND_INTERNAL_FUNCTION	426:8:13797:13832	212523	0	True				
ANR	212777	EqualityExpression	fptr -> type == ZEND_INTERNAL_FUNCTION		212523	0		==			
ANR	212778	PtrMemberAccess	fptr -> type		212523	0					
ANR	212779	Identifier	fptr		212523	0					
ANR	212780	Identifier	type		212523	1					
ANR	212781	Identifier	ZEND_INTERNAL_FUNCTION		212523	1					
ANR	212782	CompoundStatement		40:46:1033:1033	212523	1					
ANR	212783	ExpressionStatement	"smart_str_appends ( & str , ( ( zend_internal_arg_info * ) arg_info ) -> name )"	427:5:13842:13908	212523	0	True				
ANR	212784	CallExpression	"smart_str_appends ( & str , ( ( zend_internal_arg_info * ) arg_info ) -> name )"		212523	0					
ANR	212785	Callee	smart_str_appends		212523	0					
ANR	212786	Identifier	smart_str_appends		212523	0					
ANR	212787	ArgumentList	& str		212523	1					
ANR	212788	Argument	& str		212523	0					
ANR	212789	UnaryOperationExpression	& str		212523	0					
ANR	212790	UnaryOperator	&		212523	0					
ANR	212791	Identifier	str		212523	1					
ANR	212792	Argument	( ( zend_internal_arg_info * ) arg_info ) -> name		212523	1					
ANR	212793	PtrMemberAccess	( ( zend_internal_arg_info * ) arg_info ) -> name		212523	0					
ANR	212794	CastExpression	( zend_internal_arg_info * ) arg_info		212523	0					
ANR	212795	CastTarget	zend_internal_arg_info *		212523	0					
ANR	212796	Identifier	arg_info		212523	1					
ANR	212797	Identifier	name		212523	1					
ANR	212798	ElseStatement	else		212523	0					
ANR	212799	CompoundStatement		42:11:1119:1119	212523	0					
ANR	212800	ExpressionStatement	"smart_str_appendl ( & str , ZSTR_VAL ( arg_info -> name ) , ZSTR_LEN ( arg_info -> name ) )"	429:5:13928:14003	212523	0	True				
ANR	212801	CallExpression	"smart_str_appendl ( & str , ZSTR_VAL ( arg_info -> name ) , ZSTR_LEN ( arg_info -> name ) )"		212523	0					
ANR	212802	Callee	smart_str_appendl		212523	0					
ANR	212803	Identifier	smart_str_appendl		212523	0					
ANR	212804	ArgumentList	& str		212523	1					
ANR	212805	Argument	& str		212523	0					
ANR	212806	UnaryOperationExpression	& str		212523	0					
ANR	212807	UnaryOperator	&		212523	0					
ANR	212808	Identifier	str		212523	1					
ANR	212809	Argument	ZSTR_VAL ( arg_info -> name )		212523	1					
ANR	212810	CallExpression	ZSTR_VAL ( arg_info -> name )		212523	0					
ANR	212811	Callee	ZSTR_VAL		212523	0					
ANR	212812	Identifier	ZSTR_VAL		212523	0					
ANR	212813	ArgumentList	arg_info -> name		212523	1					
ANR	212814	Argument	arg_info -> name		212523	0					
ANR	212815	PtrMemberAccess	arg_info -> name		212523	0					
ANR	212816	Identifier	arg_info		212523	0					
ANR	212817	Identifier	name		212523	1					
ANR	212818	Argument	ZSTR_LEN ( arg_info -> name )		212523	2					
ANR	212819	CallExpression	ZSTR_LEN ( arg_info -> name )		212523	0					
ANR	212820	Callee	ZSTR_LEN		212523	0					
ANR	212821	Identifier	ZSTR_LEN		212523	0					
ANR	212822	ArgumentList	arg_info -> name		212523	1					
ANR	212823	Argument	arg_info -> name		212523	0					
ANR	212824	PtrMemberAccess	arg_info -> name		212523	0					
ANR	212825	Identifier	arg_info		212523	0					
ANR	212826	Identifier	name		212523	1					
ANR	212827	ElseStatement	else		212523	0					
ANR	212828	CompoundStatement		45:10:1219:1219	212523	0					
ANR	212829	ExpressionStatement	"smart_str_appends ( & str , ""param"" )"	432:4:14027:14059	212523	0	True				
ANR	212830	CallExpression	"smart_str_appends ( & str , ""param"" )"		212523	0					
ANR	212831	Callee	smart_str_appends		212523	0					
ANR	212832	Identifier	smart_str_appends		212523	0					
ANR	212833	ArgumentList	& str		212523	1					
ANR	212834	Argument	& str		212523	0					
ANR	212835	UnaryOperationExpression	& str		212523	0					
ANR	212836	UnaryOperator	&		212523	0					
ANR	212837	Identifier	str		212523	1					
ANR	212838	Argument	"""param"""		212523	1					
ANR	212839	PrimaryExpression	"""param"""		212523	0					
ANR	212840	ExpressionStatement	"smart_str_append_unsigned ( & str , i )"	433:4:14065:14099	212523	1	True				
ANR	212841	CallExpression	"smart_str_append_unsigned ( & str , i )"		212523	0					
ANR	212842	Callee	smart_str_append_unsigned		212523	0					
ANR	212843	Identifier	smart_str_append_unsigned		212523	0					
ANR	212844	ArgumentList	& str		212523	1					
ANR	212845	Argument	& str		212523	0					
ANR	212846	UnaryOperationExpression	& str		212523	0					
ANR	212847	UnaryOperator	&		212523	0					
ANR	212848	Identifier	str		212523	1					
ANR	212849	Argument	i		212523	1					
ANR	212850	Identifier	i		212523	0					
ANR	212851	IfStatement	if ( i >= required && ! arg_info -> is_variadic )		212523	5					
ANR	212852	Condition	i >= required && ! arg_info -> is_variadic	436:7:14114:14152	212523	0	True				
ANR	212853	AndExpression	i >= required && ! arg_info -> is_variadic		212523	0		&&			
ANR	212854	RelationalExpression	i >= required		212523	0		>=			
ANR	212855	Identifier	i		212523	0					
ANR	212856	Identifier	required		212523	1					
ANR	212857	UnaryOperationExpression	! arg_info -> is_variadic		212523	1					
ANR	212858	UnaryOperator	!		212523	0					
ANR	212859	PtrMemberAccess	arg_info -> is_variadic		212523	1					
ANR	212860	Identifier	arg_info		212523	0					
ANR	212861	Identifier	is_variadic		212523	1					
ANR	212862	CompoundStatement		50:48:1353:1353	212523	1					
ANR	212863	ExpressionStatement	"smart_str_appends ( & str , "" = "" )"	437:4:14161:14191	212523	0	True				
ANR	212864	CallExpression	"smart_str_appends ( & str , "" = "" )"		212523	0					
ANR	212865	Callee	smart_str_appends		212523	0					
ANR	212866	Identifier	smart_str_appends		212523	0					
ANR	212867	ArgumentList	& str		212523	1					
ANR	212868	Argument	& str		212523	0					
ANR	212869	UnaryOperationExpression	& str		212523	0					
ANR	212870	UnaryOperator	&		212523	0					
ANR	212871	Identifier	str		212523	1					
ANR	212872	Argument	""" = """		212523	1					
ANR	212873	PrimaryExpression	""" = """		212523	0					
ANR	212874	IfStatement	if ( fptr -> type == ZEND_USER_FUNCTION )		212523	1					
ANR	212875	Condition	fptr -> type == ZEND_USER_FUNCTION	438:8:14201:14232	212523	0	True				
ANR	212876	EqualityExpression	fptr -> type == ZEND_USER_FUNCTION		212523	0		==			
ANR	212877	PtrMemberAccess	fptr -> type		212523	0					
ANR	212878	Identifier	fptr		212523	0					
ANR	212879	Identifier	type		212523	1					
ANR	212880	Identifier	ZEND_USER_FUNCTION		212523	1					
ANR	212881	CompoundStatement		53:5:1440:1461	212523	1					
ANR	212882	IdentifierDeclStatement	zend_op * precv = NULL ;	439:5:14242:14263	212523	0	True				
ANR	212883	IdentifierDecl	* precv = NULL		212523	0					
ANR	212884	IdentifierDeclType	zend_op *		212523	0					
ANR	212885	Identifier	precv		212523	1					
ANR	212886	AssignmentExpression	* precv = NULL		212523	2		=			
ANR	212887	Identifier	NULL		212523	0					
ANR	212888	Identifier	NULL		212523	1					
ANR	212889	CompoundStatement		57:6:1545:1584	212523	1					
ANR	212890	IdentifierDeclStatement	uint32_t idx = i ;	441:6:14278:14295	212523	0	True				
ANR	212891	IdentifierDecl	idx = i		212523	0					
ANR	212892	IdentifierDeclType	uint32_t		212523	0					
ANR	212893	Identifier	idx		212523	1					
ANR	212894	AssignmentExpression	idx = i		212523	2		=			
ANR	212895	Identifier	i		212523	0					
ANR	212896	Identifier	i		212523	1					
ANR	212897	IdentifierDeclStatement	zend_op * op = fptr -> op_array . opcodes ;	442:6:14303:14339	212523	1	True				
ANR	212898	IdentifierDecl	* op = fptr -> op_array . opcodes		212523	0					
ANR	212899	IdentifierDeclType	zend_op *		212523	0					
ANR	212900	Identifier	op		212523	1					
ANR	212901	AssignmentExpression	* op = fptr -> op_array . opcodes		212523	2		=			
ANR	212902	Identifier	op		212523	0					
ANR	212903	MemberAccess	fptr -> op_array . opcodes		212523	1					
ANR	212904	PtrMemberAccess	fptr -> op_array		212523	0					
ANR	212905	Identifier	fptr		212523	0					
ANR	212906	Identifier	op_array		212523	1					
ANR	212907	Identifier	opcodes		212523	1					
ANR	212908	IdentifierDeclStatement	zend_op * end = op + fptr -> op_array . last ;	443:6:14347:14386	212523	2	True				
ANR	212909	IdentifierDecl	* end = op + fptr -> op_array . last		212523	0					
ANR	212910	IdentifierDeclType	zend_op *		212523	0					
ANR	212911	Identifier	end		212523	1					
ANR	212912	AssignmentExpression	* end = op + fptr -> op_array . last		212523	2		=			
ANR	212913	Identifier	end		212523	0					
ANR	212914	AdditiveExpression	op + fptr -> op_array . last		212523	1		+			
ANR	212915	Identifier	op		212523	0					
ANR	212916	MemberAccess	fptr -> op_array . last		212523	1					
ANR	212917	PtrMemberAccess	fptr -> op_array		212523	0					
ANR	212918	Identifier	fptr		212523	0					
ANR	212919	Identifier	op_array		212523	1					
ANR	212920	Identifier	last		212523	1					
ANR	212921	ExpressionStatement	++ idx	445:6:14395:14400	212523	3	True				
ANR	212922	UnaryExpression	++ idx		212523	0					
ANR	212923	IncDec	++		212523	0					
ANR	212924	Identifier	idx		212523	1					
ANR	212925	WhileStatement	while ( op < end )		212523	4					
ANR	212926	Condition	op < end	446:13:14415:14422	212523	0	True				
ANR	212927	RelationalExpression	op < end		212523	0		<			
ANR	212928	Identifier	op		212523	0					
ANR	212929	Identifier	end		212523	1					
ANR	212930	CompoundStatement		60:23:1623:1623	212523	1					
ANR	212931	IfStatement	if ( ( op -> opcode == ZEND_RECV || op -> opcode == ZEND_RECV_INIT ) && op -> op1 . num == ( zend_ulong ) idx )		212523	0					
ANR	212932	Condition	( op -> opcode == ZEND_RECV || op -> opcode == ZEND_RECV_INIT ) && op -> op1 . num == ( zend_ulong ) idx	447:11:14438:14537	212523	0	True				
ANR	212933	AndExpression	( op -> opcode == ZEND_RECV || op -> opcode == ZEND_RECV_INIT ) && op -> op1 . num == ( zend_ulong ) idx		212523	0		&&			
ANR	212934	OrExpression	op -> opcode == ZEND_RECV || op -> opcode == ZEND_RECV_INIT		212523	0		||			
ANR	212935	EqualityExpression	op -> opcode == ZEND_RECV		212523	0		==			
ANR	212936	PtrMemberAccess	op -> opcode		212523	0					
ANR	212937	Identifier	op		212523	0					
ANR	212938	Identifier	opcode		212523	1					
ANR	212939	Identifier	ZEND_RECV		212523	1					
ANR	212940	EqualityExpression	op -> opcode == ZEND_RECV_INIT		212523	1		==			
ANR	212941	PtrMemberAccess	op -> opcode		212523	0					
ANR	212942	Identifier	op		212523	0					
ANR	212943	Identifier	opcode		212523	1					
ANR	212944	Identifier	ZEND_RECV_INIT		212523	1					
ANR	212945	EqualityExpression	op -> op1 . num == ( zend_ulong ) idx		212523	1		==			
ANR	212946	MemberAccess	op -> op1 . num		212523	0					
ANR	212947	PtrMemberAccess	op -> op1		212523	0					
ANR	212948	Identifier	op		212523	0					
ANR	212949	Identifier	op1		212523	1					
ANR	212950	Identifier	num		212523	1					
ANR	212951	CastExpression	( zend_ulong ) idx		212523	1					
ANR	212952	CastTarget	zend_ulong		212523	0					
ANR	212953	Identifier	idx		212523	1					
ANR	212954	CompoundStatement		63:7:1745:1745	212523	1					
ANR	212955	ExpressionStatement	precv = op	450:8:14557:14567	212523	0	True				
ANR	212956	AssignmentExpression	precv = op		212523	0		=			
ANR	212957	Identifier	precv		212523	0					
ANR	212958	Identifier	op		212523	1					
ANR	212959	ExpressionStatement	++ op	452:7:14585:14589	212523	1	True				
ANR	212960	UnaryExpression	++ op		212523	0					
ANR	212961	IncDec	++		212523	0					
ANR	212962	Identifier	op		212523	1					
ANR	212963	IfStatement	if ( precv && precv -> opcode == ZEND_RECV_INIT && precv -> op2_type != IS_UNUSED )		212523	2					
ANR	212964	Condition	precv && precv -> opcode == ZEND_RECV_INIT && precv -> op2_type != IS_UNUSED	455:9:14615:14686	212523	0	True				
ANR	212965	AndExpression	precv && precv -> opcode == ZEND_RECV_INIT && precv -> op2_type != IS_UNUSED		212523	0		&&			
ANR	212966	Identifier	precv		212523	0					
ANR	212967	AndExpression	precv -> opcode == ZEND_RECV_INIT && precv -> op2_type != IS_UNUSED		212523	1		&&			
ANR	212968	EqualityExpression	precv -> opcode == ZEND_RECV_INIT		212523	0		==			
ANR	212969	PtrMemberAccess	precv -> opcode		212523	0					
ANR	212970	Identifier	precv		212523	0					
ANR	212971	Identifier	opcode		212523	1					
ANR	212972	Identifier	ZEND_RECV_INIT		212523	1					
ANR	212973	EqualityExpression	precv -> op2_type != IS_UNUSED		212523	1		!=			
ANR	212974	PtrMemberAccess	precv -> op2_type		212523	0					
ANR	212975	Identifier	precv		212523	0					
ANR	212976	Identifier	op2_type		212523	1					
ANR	212977	Identifier	IS_UNUSED		212523	1					
ANR	212978	CompoundStatement		70:6:1895:1946	212523	1					
ANR	212979	IdentifierDeclStatement	"zval * zv = RT_CONSTANT ( & fptr -> op_array , precv -> op2 ) ;"	456:6:14697:14748	212523	0	True				
ANR	212980	IdentifierDecl	"* zv = RT_CONSTANT ( & fptr -> op_array , precv -> op2 )"		212523	0					
ANR	212981	IdentifierDeclType	zval *		212523	0					
ANR	212982	Identifier	zv		212523	1					
ANR	212983	AssignmentExpression	"* zv = RT_CONSTANT ( & fptr -> op_array , precv -> op2 )"		212523	2		=			
ANR	212984	Identifier	zv		212523	0					
ANR	212985	CallExpression	"RT_CONSTANT ( & fptr -> op_array , precv -> op2 )"		212523	1					
ANR	212986	Callee	RT_CONSTANT		212523	0					
ANR	212987	Identifier	RT_CONSTANT		212523	0					
ANR	212988	ArgumentList	& fptr -> op_array		212523	1					
ANR	212989	Argument	& fptr -> op_array		212523	0					
ANR	212990	UnaryOperationExpression	& fptr -> op_array		212523	0					
ANR	212991	UnaryOperator	&		212523	0					
ANR	212992	PtrMemberAccess	fptr -> op_array		212523	1					
ANR	212993	Identifier	fptr		212523	0					
ANR	212994	Identifier	op_array		212523	1					
ANR	212995	Argument	precv -> op2		212523	1					
ANR	212996	PtrMemberAccess	precv -> op2		212523	0					
ANR	212997	Identifier	precv		212523	0					
ANR	212998	Identifier	op2		212523	1					
ANR	212999	IfStatement	if ( Z_TYPE_P ( zv ) == IS_CONSTANT )		212523	1					
ANR	213000	Condition	Z_TYPE_P ( zv ) == IS_CONSTANT	458:10:14761:14787	212523	0	True				
ANR	213001	EqualityExpression	Z_TYPE_P ( zv ) == IS_CONSTANT		212523	0		==			
ANR	213002	CallExpression	Z_TYPE_P ( zv )		212523	0					
ANR	213003	Callee	Z_TYPE_P		212523	0					
ANR	213004	Identifier	Z_TYPE_P		212523	0					
ANR	213005	ArgumentList	zv		212523	1					
ANR	213006	Argument	zv		212523	0					
ANR	213007	Identifier	zv		212523	0					
ANR	213008	Identifier	IS_CONSTANT		212523	1					
ANR	213009	CompoundStatement		72:39:1988:1988	212523	1					
ANR	213010	ExpressionStatement	"smart_str_append ( & str , Z_STR_P ( zv ) )"	459:7:14799:14834	212523	0	True				
ANR	213011	CallExpression	"smart_str_append ( & str , Z_STR_P ( zv ) )"		212523	0					
ANR	213012	Callee	smart_str_append		212523	0					
ANR	213013	Identifier	smart_str_append		212523	0					
ANR	213014	ArgumentList	& str		212523	1					
ANR	213015	Argument	& str		212523	0					
ANR	213016	UnaryOperationExpression	& str		212523	0					
ANR	213017	UnaryOperator	&		212523	0					
ANR	213018	Identifier	str		212523	1					
ANR	213019	Argument	Z_STR_P ( zv )		212523	1					
ANR	213020	CallExpression	Z_STR_P ( zv )		212523	0					
ANR	213021	Callee	Z_STR_P		212523	0					
ANR	213022	Identifier	Z_STR_P		212523	0					
ANR	213023	ArgumentList	zv		212523	1					
ANR	213024	Argument	zv		212523	0					
ANR	213025	Identifier	zv		212523	0					
ANR	213026	ElseStatement	else		212523	0					
ANR	213027	IfStatement	if ( Z_TYPE_P ( zv ) == IS_FALSE )		212523	0					
ANR	213028	Condition	Z_TYPE_P ( zv ) == IS_FALSE	460:17:14853:14876	212523	0	True				
ANR	213029	EqualityExpression	Z_TYPE_P ( zv ) == IS_FALSE		212523	0		==			
ANR	213030	CallExpression	Z_TYPE_P ( zv )		212523	0					
ANR	213031	Callee	Z_TYPE_P		212523	0					
ANR	213032	Identifier	Z_TYPE_P		212523	0					
ANR	213033	ArgumentList	zv		212523	1					
ANR	213034	Argument	zv		212523	0					
ANR	213035	Identifier	zv		212523	0					
ANR	213036	Identifier	IS_FALSE		212523	1					
ANR	213037	CompoundStatement		74:43:2077:2077	212523	1					
ANR	213038	ExpressionStatement	"smart_str_appends ( & str , ""false"" )"	461:7:14888:14920	212523	0	True				
ANR	213039	CallExpression	"smart_str_appends ( & str , ""false"" )"		212523	0					
ANR	213040	Callee	smart_str_appends		212523	0					
ANR	213041	Identifier	smart_str_appends		212523	0					
ANR	213042	ArgumentList	& str		212523	1					
ANR	213043	Argument	& str		212523	0					
ANR	213044	UnaryOperationExpression	& str		212523	0					
ANR	213045	UnaryOperator	&		212523	0					
ANR	213046	Identifier	str		212523	1					
ANR	213047	Argument	"""false"""		212523	1					
ANR	213048	PrimaryExpression	"""false"""		212523	0					
ANR	213049	ElseStatement	else		212523	0					
ANR	213050	IfStatement	if ( Z_TYPE_P ( zv ) == IS_TRUE )		212523	0					
ANR	213051	Condition	Z_TYPE_P ( zv ) == IS_TRUE	462:17:14939:14961	212523	0	True				
ANR	213052	EqualityExpression	Z_TYPE_P ( zv ) == IS_TRUE		212523	0		==			
ANR	213053	CallExpression	Z_TYPE_P ( zv )		212523	0					
ANR	213054	Callee	Z_TYPE_P		212523	0					
ANR	213055	Identifier	Z_TYPE_P		212523	0					
ANR	213056	ArgumentList	zv		212523	1					
ANR	213057	Argument	zv		212523	0					
ANR	213058	Identifier	zv		212523	0					
ANR	213059	Identifier	IS_TRUE		212523	1					
ANR	213060	CompoundStatement		76:42:2162:2162	212523	1					
ANR	213061	ExpressionStatement	"smart_str_appends ( & str , ""true"" )"	463:7:14973:15004	212523	0	True				
ANR	213062	CallExpression	"smart_str_appends ( & str , ""true"" )"		212523	0					
ANR	213063	Callee	smart_str_appends		212523	0					
ANR	213064	Identifier	smart_str_appends		212523	0					
ANR	213065	ArgumentList	& str		212523	1					
ANR	213066	Argument	& str		212523	0					
ANR	213067	UnaryOperationExpression	& str		212523	0					
ANR	213068	UnaryOperator	&		212523	0					
ANR	213069	Identifier	str		212523	1					
ANR	213070	Argument	"""true"""		212523	1					
ANR	213071	PrimaryExpression	"""true"""		212523	0					
ANR	213072	ElseStatement	else		212523	0					
ANR	213073	IfStatement	if ( Z_TYPE_P ( zv ) == IS_NULL )		212523	0					
ANR	213074	Condition	Z_TYPE_P ( zv ) == IS_NULL	464:17:15023:15045	212523	0	True				
ANR	213075	EqualityExpression	Z_TYPE_P ( zv ) == IS_NULL		212523	0		==			
ANR	213076	CallExpression	Z_TYPE_P ( zv )		212523	0					
ANR	213077	Callee	Z_TYPE_P		212523	0					
ANR	213078	Identifier	Z_TYPE_P		212523	0					
ANR	213079	ArgumentList	zv		212523	1					
ANR	213080	Argument	zv		212523	0					
ANR	213081	Identifier	zv		212523	0					
ANR	213082	Identifier	IS_NULL		212523	1					
ANR	213083	CompoundStatement		78:42:2246:2246	212523	1					
ANR	213084	ExpressionStatement	"smart_str_appends ( & str , ""NULL"" )"	465:7:15057:15088	212523	0	True				
ANR	213085	CallExpression	"smart_str_appends ( & str , ""NULL"" )"		212523	0					
ANR	213086	Callee	smart_str_appends		212523	0					
ANR	213087	Identifier	smart_str_appends		212523	0					
ANR	213088	ArgumentList	& str		212523	1					
ANR	213089	Argument	& str		212523	0					
ANR	213090	UnaryOperationExpression	& str		212523	0					
ANR	213091	UnaryOperator	&		212523	0					
ANR	213092	Identifier	str		212523	1					
ANR	213093	Argument	"""NULL"""		212523	1					
ANR	213094	PrimaryExpression	"""NULL"""		212523	0					
ANR	213095	ElseStatement	else		212523	0					
ANR	213096	IfStatement	if ( Z_TYPE_P ( zv ) == IS_STRING )		212523	0					
ANR	213097	Condition	Z_TYPE_P ( zv ) == IS_STRING	466:17:15107:15131	212523	0	True				
ANR	213098	EqualityExpression	Z_TYPE_P ( zv ) == IS_STRING		212523	0		==			
ANR	213099	CallExpression	Z_TYPE_P ( zv )		212523	0					
ANR	213100	Callee	Z_TYPE_P		212523	0					
ANR	213101	Identifier	Z_TYPE_P		212523	0					
ANR	213102	ArgumentList	zv		212523	1					
ANR	213103	Argument	zv		212523	0					
ANR	213104	Identifier	zv		212523	0					
ANR	213105	Identifier	IS_STRING		212523	1					
ANR	213106	CompoundStatement		80:44:2332:2332	212523	1					
ANR	213107	ExpressionStatement	"smart_str_appendc ( & str , '\\'' )"	467:7:15143:15172	212523	0	True				
ANR	213108	CallExpression	"smart_str_appendc ( & str , '\\'' )"		212523	0					
ANR	213109	Callee	smart_str_appendc		212523	0					
ANR	213110	Identifier	smart_str_appendc		212523	0					
ANR	213111	ArgumentList	& str		212523	1					
ANR	213112	Argument	& str		212523	0					
ANR	213113	UnaryOperationExpression	& str		212523	0					
ANR	213114	UnaryOperator	&		212523	0					
ANR	213115	Identifier	str		212523	1					
ANR	213116	Argument	'\\''		212523	1					
ANR	213117	PrimaryExpression	'\\''		212523	0					
ANR	213118	ExpressionStatement	"smart_str_appendl ( & str , Z_STRVAL_P ( zv ) , MIN ( Z_STRLEN_P ( zv ) , 10 ) )"	468:7:15181:15245	212523	1	True				
ANR	213119	CallExpression	"smart_str_appendl ( & str , Z_STRVAL_P ( zv ) , MIN ( Z_STRLEN_P ( zv ) , 10 ) )"		212523	0					
ANR	213120	Callee	smart_str_appendl		212523	0					
ANR	213121	Identifier	smart_str_appendl		212523	0					
ANR	213122	ArgumentList	& str		212523	1					
ANR	213123	Argument	& str		212523	0					
ANR	213124	UnaryOperationExpression	& str		212523	0					
ANR	213125	UnaryOperator	&		212523	0					
ANR	213126	Identifier	str		212523	1					
ANR	213127	Argument	Z_STRVAL_P ( zv )		212523	1					
ANR	213128	CallExpression	Z_STRVAL_P ( zv )		212523	0					
ANR	213129	Callee	Z_STRVAL_P		212523	0					
ANR	213130	Identifier	Z_STRVAL_P		212523	0					
ANR	213131	ArgumentList	zv		212523	1					
ANR	213132	Argument	zv		212523	0					
ANR	213133	Identifier	zv		212523	0					
ANR	213134	Argument	"MIN ( Z_STRLEN_P ( zv ) , 10 )"		212523	2					
ANR	213135	CallExpression	"MIN ( Z_STRLEN_P ( zv ) , 10 )"		212523	0					
ANR	213136	Callee	MIN		212523	0					
ANR	213137	Identifier	MIN		212523	0					
ANR	213138	ArgumentList	Z_STRLEN_P ( zv )		212523	1					
ANR	213139	Argument	Z_STRLEN_P ( zv )		212523	0					
ANR	213140	CallExpression	Z_STRLEN_P ( zv )		212523	0					
ANR	213141	Callee	Z_STRLEN_P		212523	0					
ANR	213142	Identifier	Z_STRLEN_P		212523	0					
ANR	213143	ArgumentList	zv		212523	1					
ANR	213144	Argument	zv		212523	0					
ANR	213145	Identifier	zv		212523	0					
ANR	213146	Argument	10		212523	1					
ANR	213147	PrimaryExpression	10		212523	0					
ANR	213148	IfStatement	if ( Z_STRLEN_P ( zv ) > 10 )		212523	2					
ANR	213149	Condition	Z_STRLEN_P ( zv ) > 10	469:11:15258:15276	212523	0	True				
ANR	213150	RelationalExpression	Z_STRLEN_P ( zv ) > 10		212523	0		>			
ANR	213151	CallExpression	Z_STRLEN_P ( zv )		212523	0					
ANR	213152	Callee	Z_STRLEN_P		212523	0					
ANR	213153	Identifier	Z_STRLEN_P		212523	0					
ANR	213154	ArgumentList	zv		212523	1					
ANR	213155	Argument	zv		212523	0					
ANR	213156	Identifier	zv		212523	0					
ANR	213157	PrimaryExpression	10		212523	1					
ANR	213158	CompoundStatement		83:32:2477:2477	212523	1					
ANR	213159	ExpressionStatement	"smart_str_appends ( & str , ""..."" )"	470:8:15289:15319	212523	0	True				
ANR	213160	CallExpression	"smart_str_appends ( & str , ""..."" )"		212523	0					
ANR	213161	Callee	smart_str_appends		212523	0					
ANR	213162	Identifier	smart_str_appends		212523	0					
ANR	213163	ArgumentList	& str		212523	1					
ANR	213164	Argument	& str		212523	0					
ANR	213165	UnaryOperationExpression	& str		212523	0					
ANR	213166	UnaryOperator	&		212523	0					
ANR	213167	Identifier	str		212523	1					
ANR	213168	Argument	"""..."""		212523	1					
ANR	213169	PrimaryExpression	"""..."""		212523	0					
ANR	213170	ExpressionStatement	"smart_str_appendc ( & str , '\\'' )"	472:7:15337:15366	212523	3	True				
ANR	213171	CallExpression	"smart_str_appendc ( & str , '\\'' )"		212523	0					
ANR	213172	Callee	smart_str_appendc		212523	0					
ANR	213173	Identifier	smart_str_appendc		212523	0					
ANR	213174	ArgumentList	& str		212523	1					
ANR	213175	Argument	& str		212523	0					
ANR	213176	UnaryOperationExpression	& str		212523	0					
ANR	213177	UnaryOperator	&		212523	0					
ANR	213178	Identifier	str		212523	1					
ANR	213179	Argument	'\\''		212523	1					
ANR	213180	PrimaryExpression	'\\''		212523	0					
ANR	213181	ElseStatement	else		212523	0					
ANR	213182	IfStatement	if ( Z_TYPE_P ( zv ) == IS_ARRAY )		212523	0					
ANR	213183	Condition	Z_TYPE_P ( zv ) == IS_ARRAY	473:17:15385:15408	212523	0	True				
ANR	213184	EqualityExpression	Z_TYPE_P ( zv ) == IS_ARRAY		212523	0		==			
ANR	213185	CallExpression	Z_TYPE_P ( zv )		212523	0					
ANR	213186	Callee	Z_TYPE_P		212523	0					
ANR	213187	Identifier	Z_TYPE_P		212523	0					
ANR	213188	ArgumentList	zv		212523	1					
ANR	213189	Argument	zv		212523	0					
ANR	213190	Identifier	zv		212523	0					
ANR	213191	Identifier	IS_ARRAY		212523	1					
ANR	213192	CompoundStatement		87:43:2609:2609	212523	1					
ANR	213193	ExpressionStatement	"smart_str_appends ( & str , ""Array"" )"	474:7:15420:15452	212523	0	True				
ANR	213194	CallExpression	"smart_str_appends ( & str , ""Array"" )"		212523	0					
ANR	213195	Callee	smart_str_appends		212523	0					
ANR	213196	Identifier	smart_str_appends		212523	0					
ANR	213197	ArgumentList	& str		212523	1					
ANR	213198	Argument	& str		212523	0					
ANR	213199	UnaryOperationExpression	& str		212523	0					
ANR	213200	UnaryOperator	&		212523	0					
ANR	213201	Identifier	str		212523	1					
ANR	213202	Argument	"""Array"""		212523	1					
ANR	213203	PrimaryExpression	"""Array"""		212523	0					
ANR	213204	ElseStatement	else		212523	0					
ANR	213205	IfStatement	if ( Z_TYPE_P ( zv ) == IS_CONSTANT_AST )		212523	0					
ANR	213206	Condition	Z_TYPE_P ( zv ) == IS_CONSTANT_AST	475:17:15471:15501	212523	0	True				
ANR	213207	EqualityExpression	Z_TYPE_P ( zv ) == IS_CONSTANT_AST		212523	0		==			
ANR	213208	CallExpression	Z_TYPE_P ( zv )		212523	0					
ANR	213209	Callee	Z_TYPE_P		212523	0					
ANR	213210	Identifier	Z_TYPE_P		212523	0					
ANR	213211	ArgumentList	zv		212523	1					
ANR	213212	Argument	zv		212523	0					
ANR	213213	Identifier	zv		212523	0					
ANR	213214	Identifier	IS_CONSTANT_AST		212523	1					
ANR	213215	CompoundStatement		89:50:2702:2702	212523	1					
ANR	213216	ExpressionStatement	"smart_str_appends ( & str , ""<expression>"" )"	476:7:15513:15552	212523	0	True				
ANR	213217	CallExpression	"smart_str_appends ( & str , ""<expression>"" )"		212523	0					
ANR	213218	Callee	smart_str_appends		212523	0					
ANR	213219	Identifier	smart_str_appends		212523	0					
ANR	213220	ArgumentList	& str		212523	1					
ANR	213221	Argument	& str		212523	0					
ANR	213222	UnaryOperationExpression	& str		212523	0					
ANR	213223	UnaryOperator	&		212523	0					
ANR	213224	Identifier	str		212523	1					
ANR	213225	Argument	"""<expression>"""		212523	1					
ANR	213226	PrimaryExpression	"""<expression>"""		212523	0					
ANR	213227	ElseStatement	else		212523	0					
ANR	213228	CompoundStatement		92:7:2774:2815	212523	0					
ANR	213229	IdentifierDeclStatement	zend_string * zv_str = zval_get_string ( zv ) ;	478:7:15576:15617	212523	0	True				
ANR	213230	IdentifierDecl	* zv_str = zval_get_string ( zv )		212523	0					
ANR	213231	IdentifierDeclType	zend_string *		212523	0					
ANR	213232	Identifier	zv_str		212523	1					
ANR	213233	AssignmentExpression	* zv_str = zval_get_string ( zv )		212523	2		=			
ANR	213234	Identifier	zv_str		212523	0					
ANR	213235	CallExpression	zval_get_string ( zv )		212523	1					
ANR	213236	Callee	zval_get_string		212523	0					
ANR	213237	Identifier	zval_get_string		212523	0					
ANR	213238	ArgumentList	zv		212523	1					
ANR	213239	Argument	zv		212523	0					
ANR	213240	Identifier	zv		212523	0					
ANR	213241	ExpressionStatement	"smart_str_append ( & str , zv_str )"	479:7:15626:15656	212523	1	True				
ANR	213242	CallExpression	"smart_str_append ( & str , zv_str )"		212523	0					
ANR	213243	Callee	smart_str_append		212523	0					
ANR	213244	Identifier	smart_str_append		212523	0					
ANR	213245	ArgumentList	& str		212523	1					
ANR	213246	Argument	& str		212523	0					
ANR	213247	UnaryOperationExpression	& str		212523	0					
ANR	213248	UnaryOperator	&		212523	0					
ANR	213249	Identifier	str		212523	1					
ANR	213250	Argument	zv_str		212523	1					
ANR	213251	Identifier	zv_str		212523	0					
ANR	213252	ExpressionStatement	zend_string_release ( zv_str )	480:7:15665:15692	212523	2	True				
ANR	213253	CallExpression	zend_string_release ( zv_str )		212523	0					
ANR	213254	Callee	zend_string_release		212523	0					
ANR	213255	Identifier	zend_string_release		212523	0					
ANR	213256	ArgumentList	zv_str		212523	1					
ANR	213257	Argument	zv_str		212523	0					
ANR	213258	Identifier	zv_str		212523	0					
ANR	213259	ElseStatement	else		212523	0					
ANR	213260	CompoundStatement		97:11:2918:2918	212523	0					
ANR	213261	ExpressionStatement	"smart_str_appends ( & str , ""NULL"" )"	484:5:15727:15758	212523	0	True				
ANR	213262	CallExpression	"smart_str_appends ( & str , ""NULL"" )"		212523	0					
ANR	213263	Callee	smart_str_appends		212523	0					
ANR	213264	Identifier	smart_str_appends		212523	0					
ANR	213265	ArgumentList	& str		212523	1					
ANR	213266	Argument	& str		212523	0					
ANR	213267	UnaryOperationExpression	& str		212523	0					
ANR	213268	UnaryOperator	&		212523	0					
ANR	213269	Identifier	str		212523	1					
ANR	213270	Argument	"""NULL"""		212523	1					
ANR	213271	PrimaryExpression	"""NULL"""		212523	0					
ANR	213272	IfStatement	if ( ++ i < num_args )		212523	6					
ANR	213273	Condition	++ i < num_args	488:7:15779:15792	212523	0	True				
ANR	213274	RelationalExpression	++ i < num_args		212523	0		<			
ANR	213275	UnaryExpression	++ i		212523	0					
ANR	213276	IncDec	++		212523	0					
ANR	213277	Identifier	i		212523	1					
ANR	213278	Identifier	num_args		212523	1					
ANR	213279	CompoundStatement		102:23:2993:2993	212523	1					
ANR	213280	ExpressionStatement	"smart_str_appends ( & str , "", "" )"	489:4:15801:15830	212523	0	True				
ANR	213281	CallExpression	"smart_str_appends ( & str , "", "" )"		212523	0					
ANR	213282	Callee	smart_str_appends		212523	0					
ANR	213283	Identifier	smart_str_appends		212523	0					
ANR	213284	ArgumentList	& str		212523	1					
ANR	213285	Argument	& str		212523	0					
ANR	213286	UnaryOperationExpression	& str		212523	0					
ANR	213287	UnaryOperator	&		212523	0					
ANR	213288	Identifier	str		212523	1					
ANR	213289	Argument	""", """		212523	1					
ANR	213290	PrimaryExpression	""", """		212523	0					
ANR	213291	ExpressionStatement	arg_info ++	491:3:15840:15850	212523	7	True				
ANR	213292	PostIncDecOperationExpression	arg_info ++		212523	0					
ANR	213293	Identifier	arg_info		212523	0					
ANR	213294	IncDec	++		212523	1					
ANR	213295	ExpressionStatement	"smart_str_appendc ( & str , ')' )"	495:1:15861:15889	212523	6	True				
ANR	213296	CallExpression	"smart_str_appendc ( & str , ')' )"		212523	0					
ANR	213297	Callee	smart_str_appendc		212523	0					
ANR	213298	Identifier	smart_str_appendc		212523	0					
ANR	213299	ArgumentList	& str		212523	1					
ANR	213300	Argument	& str		212523	0					
ANR	213301	UnaryOperationExpression	& str		212523	0					
ANR	213302	UnaryOperator	&		212523	0					
ANR	213303	Identifier	str		212523	1					
ANR	213304	Argument	')'		212523	1					
ANR	213305	PrimaryExpression	')'		212523	0					
ANR	213306	IfStatement	if ( fptr -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE )		212523	7					
ANR	213307	Condition	fptr -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE	497:5:15897:15944	212523	0	True				
ANR	213308	BitAndExpression	fptr -> common . fn_flags & ZEND_ACC_HAS_RETURN_TYPE		212523	0		&			
ANR	213309	MemberAccess	fptr -> common . fn_flags		212523	0					
ANR	213310	PtrMemberAccess	fptr -> common		212523	0					
ANR	213311	Identifier	fptr		212523	0					
ANR	213312	Identifier	common		212523	1					
ANR	213313	Identifier	fn_flags		212523	1					
ANR	213314	Identifier	ZEND_ACC_HAS_RETURN_TYPE		212523	1					
ANR	213315	CompoundStatement		111:55:3145:3145	212523	1					
ANR	213316	ExpressionStatement	"smart_str_appends ( & str , "": "" )"	498:2:15951:15980	212523	0	True				
ANR	213317	CallExpression	"smart_str_appends ( & str , "": "" )"		212523	0					
ANR	213318	Callee	smart_str_appends		212523	0					
ANR	213319	Identifier	smart_str_appends		212523	0					
ANR	213320	ArgumentList	& str		212523	1					
ANR	213321	Argument	& str		212523	0					
ANR	213322	UnaryOperationExpression	& str		212523	0					
ANR	213323	UnaryOperator	&		212523	0					
ANR	213324	Identifier	str		212523	1					
ANR	213325	Argument	""": """		212523	1					
ANR	213326	PrimaryExpression	""": """		212523	0					
ANR	213327	ExpressionStatement	"zend_append_type_hint ( & str , fptr , fptr -> common . arg_info - 1 , 1 )"	499:2:15984:16047	212523	1	True				
ANR	213328	CallExpression	"zend_append_type_hint ( & str , fptr , fptr -> common . arg_info - 1 , 1 )"		212523	0					
ANR	213329	Callee	zend_append_type_hint		212523	0					
ANR	213330	Identifier	zend_append_type_hint		212523	0					
ANR	213331	ArgumentList	& str		212523	1					
ANR	213332	Argument	& str		212523	0					
ANR	213333	UnaryOperationExpression	& str		212523	0					
ANR	213334	UnaryOperator	&		212523	0					
ANR	213335	Identifier	str		212523	1					
ANR	213336	Argument	fptr		212523	1					
ANR	213337	Identifier	fptr		212523	0					
ANR	213338	Argument	fptr -> common . arg_info - 1		212523	2					
ANR	213339	AdditiveExpression	fptr -> common . arg_info - 1		212523	0		-			
ANR	213340	MemberAccess	fptr -> common . arg_info		212523	0					
ANR	213341	PtrMemberAccess	fptr -> common		212523	0					
ANR	213342	Identifier	fptr		212523	0					
ANR	213343	Identifier	common		212523	1					
ANR	213344	Identifier	arg_info		212523	1					
ANR	213345	PrimaryExpression	1		212523	1					
ANR	213346	Argument	1		212523	3					
ANR	213347	PrimaryExpression	1		212523	0					
ANR	213348	ExpressionStatement	smart_str_0 ( & str )	501:1:16053:16070	212523	8	True				
ANR	213349	CallExpression	smart_str_0 ( & str )		212523	0					
ANR	213350	Callee	smart_str_0		212523	0					
ANR	213351	Identifier	smart_str_0		212523	0					
ANR	213352	ArgumentList	& str		212523	1					
ANR	213353	Argument	& str		212523	0					
ANR	213354	UnaryOperationExpression	& str		212523	0					
ANR	213355	UnaryOperator	&		212523	0					
ANR	213356	Identifier	str		212523	1					
ANR	213357	ReturnStatement	return str . s ;	503:1:16074:16086	212523	9	True				
ANR	213358	MemberAccess	str . s		212523	0					
ANR	213359	Identifier	str		212523	0					
ANR	213360	Identifier	s		212523	1					
ANR	213361	ReturnType	static ZEND_COLD zend_string *		212523	1					
ANR	213362	Identifier	zend_get_function_declaration		212523	2					
ANR	213363	ParameterList	const zend_function * fptr		212523	3					
ANR	213364	Parameter	const zend_function * fptr	386:60:12764:12788	212523	0	True				
ANR	213365	ParameterType	const zend_function *		212523	0					
ANR	213366	Identifier	fptr		212523	1					
ANR	213367	CFGEntryNode	ENTRY		212523		True				
ANR	213368	CFGExitNode	EXIT		212523		True				
ANR	213369	Symbol	* op		212523						
ANR	213370	Symbol	fptr -> common . num_args		212523						
ANR	213371	Symbol	precv		212523						
ANR	213372	Symbol	precv -> opcode		212523						
ANR	213373	Symbol	fptr -> op_array		212523						
ANR	213374	Symbol	fptr -> type		212523						
ANR	213375	Symbol	RT_CONSTANT		212523						
ANR	213376	Symbol	required		212523						
ANR	213377	Symbol	* arg_info		212523						
ANR	213378	Symbol	& str		212523						
ANR	213379	Symbol	fptr -> common . required_num_args		212523						
ANR	213380	Symbol	ZEND_INTERNAL_FUNCTION		212523						
ANR	213381	Symbol	strlen		212523						
ANR	213382	Symbol	arg_info -> is_variadic		212523						
ANR	213383	Symbol	ZEND_RECV		212523						
ANR	213384	Symbol	num_args		212523						
ANR	213385	Symbol	ZEND_USER_FUNCTION		212523						
ANR	213386	Symbol	fptr -> common . scope		212523						
ANR	213387	Symbol	op -> op1		212523						
ANR	213388	Symbol	IS_STRING		212523						
ANR	213389	Symbol	* precv		212523						
ANR	213390	Symbol	IS_CONSTANT		212523						
ANR	213391	Symbol	NULL		212523						
ANR	213392	Symbol	str . s		212523						
ANR	213393	Symbol	IS_TRUE		212523						
ANR	213394	Symbol	arg_info -> pass_by_reference		212523						
ANR	213395	Symbol	fptr -> common		212523						
ANR	213396	Symbol	str		212523						
ANR	213397	Symbol	* fptr -> common		212523						
ANR	213398	Symbol	ZEND_ACC_VARIADIC		212523						
ANR	213399	Symbol	fptr -> common . function_name		212523						
ANR	213400	Symbol	MIN		212523						
ANR	213401	Symbol	fptr -> op_array . opcodes		212523						
ANR	213402	Symbol	arg_info -> name		212523						
ANR	213403	Symbol	fptr -> common . scope -> name		212523						
ANR	213404	Symbol	Z_STR_P		212523						
ANR	213405	Symbol	idx		212523						
ANR	213406	Symbol	zv		212523						
ANR	213407	Symbol	fptr -> op_array . fn_flags		212523						
ANR	213408	Symbol	fptr -> op_array . last		212523						
ANR	213409	Symbol	op -> opcode		212523						
ANR	213410	Symbol	IS_CONSTANT_AST		212523						
ANR	213411	Symbol	ZEND_RECV_INIT		212523						
ANR	213412	Symbol	IS_NULL		212523						
ANR	213413	Symbol	IS_ARRAY		212523						
ANR	213414	Symbol	op -> op1 . num		212523						
ANR	213415	Symbol	end		212523						
ANR	213416	Symbol	precv -> op2		212523						
ANR	213417	Symbol	Z_STRLEN_P		212523						
ANR	213418	Symbol	fptr -> common . fn_flags		212523						
ANR	213419	Symbol	IS_FALSE		212523						
ANR	213420	Symbol	* fptr		212523						
ANR	213421	Symbol	op		212523						
ANR	213422	Symbol	* * fptr		212523						
ANR	213423	Symbol	ZEND_ACC_HAS_RETURN_TYPE		212523						
ANR	213424	Symbol	i		212523						
ANR	213425	Symbol	zval_get_string		212523						
ANR	213426	Symbol	* fptr -> common . scope		212523						
ANR	213427	Symbol	Z_TYPE_P		212523						
ANR	213428	Symbol	precv -> op2_type		212523						
ANR	213429	Symbol	Z_STRVAL_P		212523						
ANR	213430	Symbol	ZSTR_VAL		212523						
ANR	213431	Symbol	arg_info		212523						
ANR	213432	Symbol	& fptr -> op_array		212523						
ANR	213433	Symbol	fptr -> common . arg_info		212523						
ANR	213434	Symbol	zv_str		212523						
ANR	213435	Symbol	fptr		212523						
ANR	213436	Symbol	ZEND_ACC_RETURN_REFERENCE		212523						
ANR	213437	Symbol	ZSTR_LEN		212523						
ANR	213438	Symbol	( ( zend_internal_arg_info * ) arg_info ) -> name		212523						
ANR	213439	Symbol	IS_UNUSED		212523						
ANR	213440	Function	do_inheritance_check_on_method	507:0:16101:20403							
ANR	213441	FunctionDef	"do_inheritance_check_on_method (zend_function * child , zend_function * parent)"		213440	0					
ANR	213442	CompoundStatement		508:0:16199:20403	213440	0					
ANR	213443	IdentifierDeclStatement	uint32_t child_flags ;	509:1:16202:16222	213440	0	True				
ANR	213444	IdentifierDecl	child_flags		213440	0					
ANR	213445	IdentifierDeclType	uint32_t		213440	0					
ANR	213446	Identifier	child_flags		213440	1					
ANR	213447	IdentifierDeclStatement	uint32_t parent_flags = parent -> common . fn_flags ;	510:1:16225:16272	213440	1	True				
ANR	213448	IdentifierDecl	parent_flags = parent -> common . fn_flags		213440	0					
ANR	213449	IdentifierDeclType	uint32_t		213440	0					
ANR	213450	Identifier	parent_flags		213440	1					
ANR	213451	AssignmentExpression	parent_flags = parent -> common . fn_flags		213440	2		=			
ANR	213452	Identifier	parent_flags		213440	0					
ANR	213453	MemberAccess	parent -> common . fn_flags		213440	1					
ANR	213454	PtrMemberAccess	parent -> common		213440	0					
ANR	213455	Identifier	parent		213440	0					
ANR	213456	Identifier	common		213440	1					
ANR	213457	Identifier	fn_flags		213440	1					
ANR	213458	IfStatement	if ( ( parent -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0 && parent -> common . fn_flags & ZEND_ACC_ABSTRACT && parent -> common . scope != ( child -> common . prototype ? child -> common . prototype -> common . scope : child -> common . scope ) && child -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_IMPLEMENTED_ABSTRACT ) )		213440	2					
ANR	213459	Condition	( parent -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0 && parent -> common . fn_flags & ZEND_ACC_ABSTRACT && parent -> common . scope != ( child -> common . prototype ? child -> common . prototype -> common . scope : child -> common . scope ) && child -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_IMPLEMENTED_ABSTRACT )	512:5:16280:16583	213440	0	True				
ANR	213460	AndExpression	( parent -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0 && parent -> common . fn_flags & ZEND_ACC_ABSTRACT && parent -> common . scope != ( child -> common . prototype ? child -> common . prototype -> common . scope : child -> common . scope ) && child -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_IMPLEMENTED_ABSTRACT )		213440	0		&&			
ANR	213461	EqualityExpression	( parent -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0		213440	0		==			
ANR	213462	BitAndExpression	parent -> common . scope -> ce_flags & ZEND_ACC_INTERFACE		213440	0		&			
ANR	213463	PtrMemberAccess	parent -> common . scope -> ce_flags		213440	0					
ANR	213464	MemberAccess	parent -> common . scope		213440	0					
ANR	213465	PtrMemberAccess	parent -> common		213440	0					
ANR	213466	Identifier	parent		213440	0					
ANR	213467	Identifier	common		213440	1					
ANR	213468	Identifier	scope		213440	1					
ANR	213469	Identifier	ce_flags		213440	1					
ANR	213470	Identifier	ZEND_ACC_INTERFACE		213440	1					
ANR	213471	PrimaryExpression	0		213440	1					
ANR	213472	AndExpression	parent -> common . fn_flags & ZEND_ACC_ABSTRACT && parent -> common . scope != ( child -> common . prototype ? child -> common . prototype -> common . scope : child -> common . scope ) && child -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_IMPLEMENTED_ABSTRACT )		213440	1		&&			
ANR	213473	BitAndExpression	parent -> common . fn_flags & ZEND_ACC_ABSTRACT		213440	0		&			
ANR	213474	MemberAccess	parent -> common . fn_flags		213440	0					
ANR	213475	PtrMemberAccess	parent -> common		213440	0					
ANR	213476	Identifier	parent		213440	0					
ANR	213477	Identifier	common		213440	1					
ANR	213478	Identifier	fn_flags		213440	1					
ANR	213479	Identifier	ZEND_ACC_ABSTRACT		213440	1					
ANR	213480	AndExpression	parent -> common . scope != ( child -> common . prototype ? child -> common . prototype -> common . scope : child -> common . scope ) && child -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_IMPLEMENTED_ABSTRACT )		213440	1		&&			
ANR	213481	EqualityExpression	parent -> common . scope != ( child -> common . prototype ? child -> common . prototype -> common . scope : child -> common . scope )		213440	0		!=			
ANR	213482	MemberAccess	parent -> common . scope		213440	0					
ANR	213483	PtrMemberAccess	parent -> common		213440	0					
ANR	213484	Identifier	parent		213440	0					
ANR	213485	Identifier	common		213440	1					
ANR	213486	Identifier	scope		213440	1					
ANR	213487	ConditionalExpression	child -> common . prototype ? child -> common . prototype -> common . scope : child -> common . scope		213440	1					
ANR	213488	Condition	child -> common . prototype		213440	0					
ANR	213489	MemberAccess	child -> common . prototype		213440	0					
ANR	213490	PtrMemberAccess	child -> common		213440	0					
ANR	213491	Identifier	child		213440	0					
ANR	213492	Identifier	common		213440	1					
ANR	213493	Identifier	prototype		213440	1					
ANR	213494	MemberAccess	child -> common . prototype -> common . scope		213440	1					
ANR	213495	PtrMemberAccess	child -> common . prototype -> common		213440	0					
ANR	213496	MemberAccess	child -> common . prototype		213440	0					
ANR	213497	PtrMemberAccess	child -> common		213440	0					
ANR	213498	Identifier	child		213440	0					
ANR	213499	Identifier	common		213440	1					
ANR	213500	Identifier	prototype		213440	1					
ANR	213501	Identifier	common		213440	1					
ANR	213502	Identifier	scope		213440	1					
ANR	213503	MemberAccess	child -> common . scope		213440	2					
ANR	213504	PtrMemberAccess	child -> common		213440	0					
ANR	213505	Identifier	child		213440	0					
ANR	213506	Identifier	common		213440	1					
ANR	213507	Identifier	scope		213440	1					
ANR	213508	BitAndExpression	child -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_IMPLEMENTED_ABSTRACT )		213440	1		&			
ANR	213509	MemberAccess	child -> common . fn_flags		213440	0					
ANR	213510	PtrMemberAccess	child -> common		213440	0					
ANR	213511	Identifier	child		213440	0					
ANR	213512	Identifier	common		213440	1					
ANR	213513	Identifier	fn_flags		213440	1					
ANR	213514	InclusiveOrExpression	ZEND_ACC_ABSTRACT | ZEND_ACC_IMPLEMENTED_ABSTRACT		213440	1		|			
ANR	213515	Identifier	ZEND_ACC_ABSTRACT		213440	0					
ANR	213516	Identifier	ZEND_ACC_IMPLEMENTED_ABSTRACT		213440	1					
ANR	213517	CompoundStatement		8:81:386:386	213440	1					
ANR	213518	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Can't inherit abstract function %s::%s() (previously declared abstract in %s)"" , ZSTR_VAL ( parent -> common . scope -> name ) , ZSTR_VAL ( child -> common . function_name ) , child -> common . prototype ? ZSTR_VAL ( child -> common . prototype -> common . scope -> name ) : ZSTR_VAL ( child -> common . scope -> name ) )"	516:2:16590:16912	213440	0	True				
ANR	213519	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Can't inherit abstract function %s::%s() (previously declared abstract in %s)"" , ZSTR_VAL ( parent -> common . scope -> name ) , ZSTR_VAL ( child -> common . function_name ) , child -> common . prototype ? ZSTR_VAL ( child -> common . prototype -> common . scope -> name ) : ZSTR_VAL ( child -> common . scope -> name ) )"		213440	0					
ANR	213520	Callee	zend_error_noreturn		213440	0					
ANR	213521	Identifier	zend_error_noreturn		213440	0					
ANR	213522	ArgumentList	E_COMPILE_ERROR		213440	1					
ANR	213523	Argument	E_COMPILE_ERROR		213440	0					
ANR	213524	Identifier	E_COMPILE_ERROR		213440	0					
ANR	213525	Argument	"""Can't inherit abstract function %s::%s() (previously declared abstract in %s)"""		213440	1					
ANR	213526	PrimaryExpression	"""Can't inherit abstract function %s::%s() (previously declared abstract in %s)"""		213440	0					
ANR	213527	Argument	ZSTR_VAL ( parent -> common . scope -> name )		213440	2					
ANR	213528	CallExpression	ZSTR_VAL ( parent -> common . scope -> name )		213440	0					
ANR	213529	Callee	ZSTR_VAL		213440	0					
ANR	213530	Identifier	ZSTR_VAL		213440	0					
ANR	213531	ArgumentList	parent -> common . scope -> name		213440	1					
ANR	213532	Argument	parent -> common . scope -> name		213440	0					
ANR	213533	PtrMemberAccess	parent -> common . scope -> name		213440	0					
ANR	213534	MemberAccess	parent -> common . scope		213440	0					
ANR	213535	PtrMemberAccess	parent -> common		213440	0					
ANR	213536	Identifier	parent		213440	0					
ANR	213537	Identifier	common		213440	1					
ANR	213538	Identifier	scope		213440	1					
ANR	213539	Identifier	name		213440	1					
ANR	213540	Argument	ZSTR_VAL ( child -> common . function_name )		213440	3					
ANR	213541	CallExpression	ZSTR_VAL ( child -> common . function_name )		213440	0					
ANR	213542	Callee	ZSTR_VAL		213440	0					
ANR	213543	Identifier	ZSTR_VAL		213440	0					
ANR	213544	ArgumentList	child -> common . function_name		213440	1					
ANR	213545	Argument	child -> common . function_name		213440	0					
ANR	213546	MemberAccess	child -> common . function_name		213440	0					
ANR	213547	PtrMemberAccess	child -> common		213440	0					
ANR	213548	Identifier	child		213440	0					
ANR	213549	Identifier	common		213440	1					
ANR	213550	Identifier	function_name		213440	1					
ANR	213551	Argument	child -> common . prototype ? ZSTR_VAL ( child -> common . prototype -> common . scope -> name ) : ZSTR_VAL ( child -> common . scope -> name )		213440	4					
ANR	213552	ConditionalExpression	child -> common . prototype ? ZSTR_VAL ( child -> common . prototype -> common . scope -> name ) : ZSTR_VAL ( child -> common . scope -> name )		213440	0					
ANR	213553	Condition	child -> common . prototype		213440	0					
ANR	213554	MemberAccess	child -> common . prototype		213440	0					
ANR	213555	PtrMemberAccess	child -> common		213440	0					
ANR	213556	Identifier	child		213440	0					
ANR	213557	Identifier	common		213440	1					
ANR	213558	Identifier	prototype		213440	1					
ANR	213559	CallExpression	ZSTR_VAL ( child -> common . prototype -> common . scope -> name )		213440	1					
ANR	213560	Callee	ZSTR_VAL		213440	0					
ANR	213561	Identifier	ZSTR_VAL		213440	0					
ANR	213562	ArgumentList	child -> common . prototype -> common . scope -> name		213440	1					
ANR	213563	Argument	child -> common . prototype -> common . scope -> name		213440	0					
ANR	213564	PtrMemberAccess	child -> common . prototype -> common . scope -> name		213440	0					
ANR	213565	MemberAccess	child -> common . prototype -> common . scope		213440	0					
ANR	213566	PtrMemberAccess	child -> common . prototype -> common		213440	0					
ANR	213567	MemberAccess	child -> common . prototype		213440	0					
ANR	213568	PtrMemberAccess	child -> common		213440	0					
ANR	213569	Identifier	child		213440	0					
ANR	213570	Identifier	common		213440	1					
ANR	213571	Identifier	prototype		213440	1					
ANR	213572	Identifier	common		213440	1					
ANR	213573	Identifier	scope		213440	1					
ANR	213574	Identifier	name		213440	1					
ANR	213575	CallExpression	ZSTR_VAL ( child -> common . scope -> name )		213440	2					
ANR	213576	Callee	ZSTR_VAL		213440	0					
ANR	213577	Identifier	ZSTR_VAL		213440	0					
ANR	213578	ArgumentList	child -> common . scope -> name		213440	1					
ANR	213579	Argument	child -> common . scope -> name		213440	0					
ANR	213580	PtrMemberAccess	child -> common . scope -> name		213440	0					
ANR	213581	MemberAccess	child -> common . scope		213440	0					
ANR	213582	PtrMemberAccess	child -> common		213440	0					
ANR	213583	Identifier	child		213440	0					
ANR	213584	Identifier	common		213440	1					
ANR	213585	Identifier	scope		213440	1					
ANR	213586	Identifier	name		213440	1					
ANR	213587	IfStatement	if ( UNEXPECTED ( parent_flags & ZEND_ACC_FINAL ) )		213440	3					
ANR	213588	Condition	UNEXPECTED ( parent_flags & ZEND_ACC_FINAL )	522:5:16923:16963	213440	0	True				
ANR	213589	CallExpression	UNEXPECTED ( parent_flags & ZEND_ACC_FINAL )		213440	0					
ANR	213590	Callee	UNEXPECTED		213440	0					
ANR	213591	Identifier	UNEXPECTED		213440	0					
ANR	213592	ArgumentList	parent_flags & ZEND_ACC_FINAL		213440	1					
ANR	213593	Argument	parent_flags & ZEND_ACC_FINAL		213440	0					
ANR	213594	BitAndExpression	parent_flags & ZEND_ACC_FINAL		213440	0		&			
ANR	213595	Identifier	parent_flags		213440	0					
ANR	213596	Identifier	ZEND_ACC_FINAL		213440	1					
ANR	213597	CompoundStatement		15:48:766:766	213440	1					
ANR	213598	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot override final method %s::%s()"" , ZEND_FN_SCOPE_NAME ( parent ) , ZSTR_VAL ( child -> common . function_name ) )"	523:2:16970:17114	213440	0	True				
ANR	213599	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot override final method %s::%s()"" , ZEND_FN_SCOPE_NAME ( parent ) , ZSTR_VAL ( child -> common . function_name ) )"		213440	0					
ANR	213600	Callee	zend_error_noreturn		213440	0					
ANR	213601	Identifier	zend_error_noreturn		213440	0					
ANR	213602	ArgumentList	E_COMPILE_ERROR		213440	1					
ANR	213603	Argument	E_COMPILE_ERROR		213440	0					
ANR	213604	Identifier	E_COMPILE_ERROR		213440	0					
ANR	213605	Argument	"""Cannot override final method %s::%s()"""		213440	1					
ANR	213606	PrimaryExpression	"""Cannot override final method %s::%s()"""		213440	0					
ANR	213607	Argument	ZEND_FN_SCOPE_NAME ( parent )		213440	2					
ANR	213608	CallExpression	ZEND_FN_SCOPE_NAME ( parent )		213440	0					
ANR	213609	Callee	ZEND_FN_SCOPE_NAME		213440	0					
ANR	213610	Identifier	ZEND_FN_SCOPE_NAME		213440	0					
ANR	213611	ArgumentList	parent		213440	1					
ANR	213612	Argument	parent		213440	0					
ANR	213613	Identifier	parent		213440	0					
ANR	213614	Argument	ZSTR_VAL ( child -> common . function_name )		213440	3					
ANR	213615	CallExpression	ZSTR_VAL ( child -> common . function_name )		213440	0					
ANR	213616	Callee	ZSTR_VAL		213440	0					
ANR	213617	Identifier	ZSTR_VAL		213440	0					
ANR	213618	ArgumentList	child -> common . function_name		213440	1					
ANR	213619	Argument	child -> common . function_name		213440	0					
ANR	213620	MemberAccess	child -> common . function_name		213440	0					
ANR	213621	PtrMemberAccess	child -> common		213440	0					
ANR	213622	Identifier	child		213440	0					
ANR	213623	Identifier	common		213440	1					
ANR	213624	Identifier	function_name		213440	1					
ANR	213625	ExpressionStatement	child_flags = child -> common . fn_flags	526:1:17121:17157	213440	4	True				
ANR	213626	AssignmentExpression	child_flags = child -> common . fn_flags		213440	0		=			
ANR	213627	Identifier	child_flags		213440	0					
ANR	213628	MemberAccess	child -> common . fn_flags		213440	1					
ANR	213629	PtrMemberAccess	child -> common		213440	0					
ANR	213630	Identifier	child		213440	0					
ANR	213631	Identifier	common		213440	1					
ANR	213632	Identifier	fn_flags		213440	1					
ANR	213633	IfStatement	if ( UNEXPECTED ( ( child_flags & ZEND_ACC_STATIC ) != ( parent_flags & ZEND_ACC_STATIC ) ) )		213440	5					
ANR	213634	Condition	UNEXPECTED ( ( child_flags & ZEND_ACC_STATIC ) != ( parent_flags & ZEND_ACC_STATIC ) )	529:5:17233:17311	213440	0	True				
ANR	213635	CallExpression	UNEXPECTED ( ( child_flags & ZEND_ACC_STATIC ) != ( parent_flags & ZEND_ACC_STATIC ) )		213440	0					
ANR	213636	Callee	UNEXPECTED		213440	0					
ANR	213637	Identifier	UNEXPECTED		213440	0					
ANR	213638	ArgumentList	( child_flags & ZEND_ACC_STATIC ) != ( parent_flags & ZEND_ACC_STATIC )		213440	1					
ANR	213639	Argument	( child_flags & ZEND_ACC_STATIC ) != ( parent_flags & ZEND_ACC_STATIC )		213440	0					
ANR	213640	EqualityExpression	( child_flags & ZEND_ACC_STATIC ) != ( parent_flags & ZEND_ACC_STATIC )		213440	0		!=			
ANR	213641	BitAndExpression	child_flags & ZEND_ACC_STATIC		213440	0		&			
ANR	213642	Identifier	child_flags		213440	0					
ANR	213643	Identifier	ZEND_ACC_STATIC		213440	1					
ANR	213644	BitAndExpression	parent_flags & ZEND_ACC_STATIC		213440	1		&			
ANR	213645	Identifier	parent_flags		213440	0					
ANR	213646	Identifier	ZEND_ACC_STATIC		213440	1					
ANR	213647	CompoundStatement		22:86:1114:1114	213440	1					
ANR	213648	IfStatement	if ( child -> common . fn_flags & ZEND_ACC_STATIC )		213440	0					
ANR	213649	Condition	child -> common . fn_flags & ZEND_ACC_STATIC	530:6:17322:17361	213440	0	True				
ANR	213650	BitAndExpression	child -> common . fn_flags & ZEND_ACC_STATIC		213440	0		&			
ANR	213651	MemberAccess	child -> common . fn_flags		213440	0					
ANR	213652	PtrMemberAccess	child -> common		213440	0					
ANR	213653	Identifier	child		213440	0					
ANR	213654	Identifier	common		213440	1					
ANR	213655	Identifier	fn_flags		213440	1					
ANR	213656	Identifier	ZEND_ACC_STATIC		213440	1					
ANR	213657	CompoundStatement		23:48:1164:1164	213440	1					
ANR	213658	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot make non static method %s::%s() static in class %s"" , ZEND_FN_SCOPE_NAME ( parent ) , ZSTR_VAL ( child -> common . function_name ) , ZEND_FN_SCOPE_NAME ( child ) )"	531:3:17369:17560	213440	0	True				
ANR	213659	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot make non static method %s::%s() static in class %s"" , ZEND_FN_SCOPE_NAME ( parent ) , ZSTR_VAL ( child -> common . function_name ) , ZEND_FN_SCOPE_NAME ( child ) )"		213440	0					
ANR	213660	Callee	zend_error_noreturn		213440	0					
ANR	213661	Identifier	zend_error_noreturn		213440	0					
ANR	213662	ArgumentList	E_COMPILE_ERROR		213440	1					
ANR	213663	Argument	E_COMPILE_ERROR		213440	0					
ANR	213664	Identifier	E_COMPILE_ERROR		213440	0					
ANR	213665	Argument	"""Cannot make non static method %s::%s() static in class %s"""		213440	1					
ANR	213666	PrimaryExpression	"""Cannot make non static method %s::%s() static in class %s"""		213440	0					
ANR	213667	Argument	ZEND_FN_SCOPE_NAME ( parent )		213440	2					
ANR	213668	CallExpression	ZEND_FN_SCOPE_NAME ( parent )		213440	0					
ANR	213669	Callee	ZEND_FN_SCOPE_NAME		213440	0					
ANR	213670	Identifier	ZEND_FN_SCOPE_NAME		213440	0					
ANR	213671	ArgumentList	parent		213440	1					
ANR	213672	Argument	parent		213440	0					
ANR	213673	Identifier	parent		213440	0					
ANR	213674	Argument	ZSTR_VAL ( child -> common . function_name )		213440	3					
ANR	213675	CallExpression	ZSTR_VAL ( child -> common . function_name )		213440	0					
ANR	213676	Callee	ZSTR_VAL		213440	0					
ANR	213677	Identifier	ZSTR_VAL		213440	0					
ANR	213678	ArgumentList	child -> common . function_name		213440	1					
ANR	213679	Argument	child -> common . function_name		213440	0					
ANR	213680	MemberAccess	child -> common . function_name		213440	0					
ANR	213681	PtrMemberAccess	child -> common		213440	0					
ANR	213682	Identifier	child		213440	0					
ANR	213683	Identifier	common		213440	1					
ANR	213684	Identifier	function_name		213440	1					
ANR	213685	Argument	ZEND_FN_SCOPE_NAME ( child )		213440	4					
ANR	213686	CallExpression	ZEND_FN_SCOPE_NAME ( child )		213440	0					
ANR	213687	Callee	ZEND_FN_SCOPE_NAME		213440	0					
ANR	213688	Identifier	ZEND_FN_SCOPE_NAME		213440	0					
ANR	213689	ArgumentList	child		213440	1					
ANR	213690	Argument	child		213440	0					
ANR	213691	Identifier	child		213440	0					
ANR	213692	ElseStatement	else		213440	0					
ANR	213693	CompoundStatement		25:9:1371:1371	213440	0					
ANR	213694	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot make static method %s::%s() non static in class %s"" , ZEND_FN_SCOPE_NAME ( parent ) , ZSTR_VAL ( child -> common . function_name ) , ZEND_FN_SCOPE_NAME ( child ) )"	533:3:17576:17767	213440	0	True				
ANR	213695	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot make static method %s::%s() non static in class %s"" , ZEND_FN_SCOPE_NAME ( parent ) , ZSTR_VAL ( child -> common . function_name ) , ZEND_FN_SCOPE_NAME ( child ) )"		213440	0					
ANR	213696	Callee	zend_error_noreturn		213440	0					
ANR	213697	Identifier	zend_error_noreturn		213440	0					
ANR	213698	ArgumentList	E_COMPILE_ERROR		213440	1					
ANR	213699	Argument	E_COMPILE_ERROR		213440	0					
ANR	213700	Identifier	E_COMPILE_ERROR		213440	0					
ANR	213701	Argument	"""Cannot make static method %s::%s() non static in class %s"""		213440	1					
ANR	213702	PrimaryExpression	"""Cannot make static method %s::%s() non static in class %s"""		213440	0					
ANR	213703	Argument	ZEND_FN_SCOPE_NAME ( parent )		213440	2					
ANR	213704	CallExpression	ZEND_FN_SCOPE_NAME ( parent )		213440	0					
ANR	213705	Callee	ZEND_FN_SCOPE_NAME		213440	0					
ANR	213706	Identifier	ZEND_FN_SCOPE_NAME		213440	0					
ANR	213707	ArgumentList	parent		213440	1					
ANR	213708	Argument	parent		213440	0					
ANR	213709	Identifier	parent		213440	0					
ANR	213710	Argument	ZSTR_VAL ( child -> common . function_name )		213440	3					
ANR	213711	CallExpression	ZSTR_VAL ( child -> common . function_name )		213440	0					
ANR	213712	Callee	ZSTR_VAL		213440	0					
ANR	213713	Identifier	ZSTR_VAL		213440	0					
ANR	213714	ArgumentList	child -> common . function_name		213440	1					
ANR	213715	Argument	child -> common . function_name		213440	0					
ANR	213716	MemberAccess	child -> common . function_name		213440	0					
ANR	213717	PtrMemberAccess	child -> common		213440	0					
ANR	213718	Identifier	child		213440	0					
ANR	213719	Identifier	common		213440	1					
ANR	213720	Identifier	function_name		213440	1					
ANR	213721	Argument	ZEND_FN_SCOPE_NAME ( child )		213440	4					
ANR	213722	CallExpression	ZEND_FN_SCOPE_NAME ( child )		213440	0					
ANR	213723	Callee	ZEND_FN_SCOPE_NAME		213440	0					
ANR	213724	Identifier	ZEND_FN_SCOPE_NAME		213440	0					
ANR	213725	ArgumentList	child		213440	1					
ANR	213726	Argument	child		213440	0					
ANR	213727	Identifier	child		213440	0					
ANR	213728	IfStatement	if ( UNEXPECTED ( ( child_flags & ZEND_ACC_ABSTRACT ) > ( parent_flags & ZEND_ACC_ABSTRACT ) ) )		213440	6					
ANR	213729	Condition	UNEXPECTED ( ( child_flags & ZEND_ACC_ABSTRACT ) > ( parent_flags & ZEND_ACC_ABSTRACT ) )	538:5:17835:17916	213440	0	True				
ANR	213730	CallExpression	UNEXPECTED ( ( child_flags & ZEND_ACC_ABSTRACT ) > ( parent_flags & ZEND_ACC_ABSTRACT ) )		213440	0					
ANR	213731	Callee	UNEXPECTED		213440	0					
ANR	213732	Identifier	UNEXPECTED		213440	0					
ANR	213733	ArgumentList	( child_flags & ZEND_ACC_ABSTRACT ) > ( parent_flags & ZEND_ACC_ABSTRACT )		213440	1					
ANR	213734	Argument	( child_flags & ZEND_ACC_ABSTRACT ) > ( parent_flags & ZEND_ACC_ABSTRACT )		213440	0					
ANR	213735	RelationalExpression	( child_flags & ZEND_ACC_ABSTRACT ) > ( parent_flags & ZEND_ACC_ABSTRACT )		213440	0		>			
ANR	213736	BitAndExpression	child_flags & ZEND_ACC_ABSTRACT		213440	0		&			
ANR	213737	Identifier	child_flags		213440	0					
ANR	213738	Identifier	ZEND_ACC_ABSTRACT		213440	1					
ANR	213739	BitAndExpression	parent_flags & ZEND_ACC_ABSTRACT		213440	1		&			
ANR	213740	Identifier	parent_flags		213440	0					
ANR	213741	Identifier	ZEND_ACC_ABSTRACT		213440	1					
ANR	213742	CompoundStatement		31:89:1719:1719	213440	1					
ANR	213743	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot make non abstract method %s::%s() abstract in class %s"" , ZEND_FN_SCOPE_NAME ( parent ) , ZSTR_VAL ( child -> common . function_name ) , ZEND_FN_SCOPE_NAME ( child ) )"	539:2:17923:18118	213440	0	True				
ANR	213744	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot make non abstract method %s::%s() abstract in class %s"" , ZEND_FN_SCOPE_NAME ( parent ) , ZSTR_VAL ( child -> common . function_name ) , ZEND_FN_SCOPE_NAME ( child ) )"		213440	0					
ANR	213745	Callee	zend_error_noreturn		213440	0					
ANR	213746	Identifier	zend_error_noreturn		213440	0					
ANR	213747	ArgumentList	E_COMPILE_ERROR		213440	1					
ANR	213748	Argument	E_COMPILE_ERROR		213440	0					
ANR	213749	Identifier	E_COMPILE_ERROR		213440	0					
ANR	213750	Argument	"""Cannot make non abstract method %s::%s() abstract in class %s"""		213440	1					
ANR	213751	PrimaryExpression	"""Cannot make non abstract method %s::%s() abstract in class %s"""		213440	0					
ANR	213752	Argument	ZEND_FN_SCOPE_NAME ( parent )		213440	2					
ANR	213753	CallExpression	ZEND_FN_SCOPE_NAME ( parent )		213440	0					
ANR	213754	Callee	ZEND_FN_SCOPE_NAME		213440	0					
ANR	213755	Identifier	ZEND_FN_SCOPE_NAME		213440	0					
ANR	213756	ArgumentList	parent		213440	1					
ANR	213757	Argument	parent		213440	0					
ANR	213758	Identifier	parent		213440	0					
ANR	213759	Argument	ZSTR_VAL ( child -> common . function_name )		213440	3					
ANR	213760	CallExpression	ZSTR_VAL ( child -> common . function_name )		213440	0					
ANR	213761	Callee	ZSTR_VAL		213440	0					
ANR	213762	Identifier	ZSTR_VAL		213440	0					
ANR	213763	ArgumentList	child -> common . function_name		213440	1					
ANR	213764	Argument	child -> common . function_name		213440	0					
ANR	213765	MemberAccess	child -> common . function_name		213440	0					
ANR	213766	PtrMemberAccess	child -> common		213440	0					
ANR	213767	Identifier	child		213440	0					
ANR	213768	Identifier	common		213440	1					
ANR	213769	Identifier	function_name		213440	1					
ANR	213770	Argument	ZEND_FN_SCOPE_NAME ( child )		213440	4					
ANR	213771	CallExpression	ZEND_FN_SCOPE_NAME ( child )		213440	0					
ANR	213772	Callee	ZEND_FN_SCOPE_NAME		213440	0					
ANR	213773	Identifier	ZEND_FN_SCOPE_NAME		213440	0					
ANR	213774	ArgumentList	child		213440	1					
ANR	213775	Argument	child		213440	0					
ANR	213776	Identifier	child		213440	0					
ANR	213777	IfStatement	if ( parent_flags & ZEND_ACC_CHANGED )		213440	7					
ANR	213778	Condition	parent_flags & ZEND_ACC_CHANGED	542:5:18129:18159	213440	0	True				
ANR	213779	BitAndExpression	parent_flags & ZEND_ACC_CHANGED		213440	0		&			
ANR	213780	Identifier	parent_flags		213440	0					
ANR	213781	Identifier	ZEND_ACC_CHANGED		213440	1					
ANR	213782	CompoundStatement		35:38:1962:1962	213440	1					
ANR	213783	ExpressionStatement	child -> common . fn_flags |= ZEND_ACC_CHANGED	543:2:18166:18208	213440	0	True				
ANR	213784	AssignmentExpression	child -> common . fn_flags |= ZEND_ACC_CHANGED		213440	0		|=			
ANR	213785	MemberAccess	child -> common . fn_flags		213440	0					
ANR	213786	PtrMemberAccess	child -> common		213440	0					
ANR	213787	Identifier	child		213440	0					
ANR	213788	Identifier	common		213440	1					
ANR	213789	Identifier	fn_flags		213440	1					
ANR	213790	Identifier	ZEND_ACC_CHANGED		213440	1					
ANR	213791	ElseStatement	else		213440	0					
ANR	213792	CompoundStatement		37:8:2018:2018	213440	0					
ANR	213793	IfStatement	if ( UNEXPECTED ( ( child_flags & ZEND_ACC_PPP_MASK ) > ( parent_flags & ZEND_ACC_PPP_MASK ) ) )		213440	0					
ANR	213794	Condition	UNEXPECTED ( ( child_flags & ZEND_ACC_PPP_MASK ) > ( parent_flags & ZEND_ACC_PPP_MASK ) )	547:6:18322:18403	213440	0	True				
ANR	213795	CallExpression	UNEXPECTED ( ( child_flags & ZEND_ACC_PPP_MASK ) > ( parent_flags & ZEND_ACC_PPP_MASK ) )		213440	0					
ANR	213796	Callee	UNEXPECTED		213440	0					
ANR	213797	Identifier	UNEXPECTED		213440	0					
ANR	213798	ArgumentList	( child_flags & ZEND_ACC_PPP_MASK ) > ( parent_flags & ZEND_ACC_PPP_MASK )		213440	1					
ANR	213799	Argument	( child_flags & ZEND_ACC_PPP_MASK ) > ( parent_flags & ZEND_ACC_PPP_MASK )		213440	0					
ANR	213800	RelationalExpression	( child_flags & ZEND_ACC_PPP_MASK ) > ( parent_flags & ZEND_ACC_PPP_MASK )		213440	0		>			
ANR	213801	BitAndExpression	child_flags & ZEND_ACC_PPP_MASK		213440	0		&			
ANR	213802	Identifier	child_flags		213440	0					
ANR	213803	Identifier	ZEND_ACC_PPP_MASK		213440	1					
ANR	213804	BitAndExpression	parent_flags & ZEND_ACC_PPP_MASK		213440	1		&			
ANR	213805	Identifier	parent_flags		213440	0					
ANR	213806	Identifier	ZEND_ACC_PPP_MASK		213440	1					
ANR	213807	CompoundStatement		40:90:2206:2206	213440	1					
ANR	213808	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Access level to %s::%s() must be %s (as in class %s)%s"" , ZEND_FN_SCOPE_NAME ( child ) , ZSTR_VAL ( child -> common . function_name ) , zend_visibility_string ( parent_flags ) , ZEND_FN_SCOPE_NAME ( parent ) , ( parent_flags & ZEND_ACC_PUBLIC ) ? """" : "" or weaker"" )"	548:3:18411:18689	213440	0	True				
ANR	213809	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Access level to %s::%s() must be %s (as in class %s)%s"" , ZEND_FN_SCOPE_NAME ( child ) , ZSTR_VAL ( child -> common . function_name ) , zend_visibility_string ( parent_flags ) , ZEND_FN_SCOPE_NAME ( parent ) , ( parent_flags & ZEND_ACC_PUBLIC ) ? """" : "" or weaker"" )"		213440	0					
ANR	213810	Callee	zend_error_noreturn		213440	0					
ANR	213811	Identifier	zend_error_noreturn		213440	0					
ANR	213812	ArgumentList	E_COMPILE_ERROR		213440	1					
ANR	213813	Argument	E_COMPILE_ERROR		213440	0					
ANR	213814	Identifier	E_COMPILE_ERROR		213440	0					
ANR	213815	Argument	"""Access level to %s::%s() must be %s (as in class %s)%s"""		213440	1					
ANR	213816	PrimaryExpression	"""Access level to %s::%s() must be %s (as in class %s)%s"""		213440	0					
ANR	213817	Argument	ZEND_FN_SCOPE_NAME ( child )		213440	2					
ANR	213818	CallExpression	ZEND_FN_SCOPE_NAME ( child )		213440	0					
ANR	213819	Callee	ZEND_FN_SCOPE_NAME		213440	0					
ANR	213820	Identifier	ZEND_FN_SCOPE_NAME		213440	0					
ANR	213821	ArgumentList	child		213440	1					
ANR	213822	Argument	child		213440	0					
ANR	213823	Identifier	child		213440	0					
ANR	213824	Argument	ZSTR_VAL ( child -> common . function_name )		213440	3					
ANR	213825	CallExpression	ZSTR_VAL ( child -> common . function_name )		213440	0					
ANR	213826	Callee	ZSTR_VAL		213440	0					
ANR	213827	Identifier	ZSTR_VAL		213440	0					
ANR	213828	ArgumentList	child -> common . function_name		213440	1					
ANR	213829	Argument	child -> common . function_name		213440	0					
ANR	213830	MemberAccess	child -> common . function_name		213440	0					
ANR	213831	PtrMemberAccess	child -> common		213440	0					
ANR	213832	Identifier	child		213440	0					
ANR	213833	Identifier	common		213440	1					
ANR	213834	Identifier	function_name		213440	1					
ANR	213835	Argument	zend_visibility_string ( parent_flags )		213440	4					
ANR	213836	CallExpression	zend_visibility_string ( parent_flags )		213440	0					
ANR	213837	Callee	zend_visibility_string		213440	0					
ANR	213838	Identifier	zend_visibility_string		213440	0					
ANR	213839	ArgumentList	parent_flags		213440	1					
ANR	213840	Argument	parent_flags		213440	0					
ANR	213841	Identifier	parent_flags		213440	0					
ANR	213842	Argument	ZEND_FN_SCOPE_NAME ( parent )		213440	5					
ANR	213843	CallExpression	ZEND_FN_SCOPE_NAME ( parent )		213440	0					
ANR	213844	Callee	ZEND_FN_SCOPE_NAME		213440	0					
ANR	213845	Identifier	ZEND_FN_SCOPE_NAME		213440	0					
ANR	213846	ArgumentList	parent		213440	1					
ANR	213847	Argument	parent		213440	0					
ANR	213848	Identifier	parent		213440	0					
ANR	213849	Argument	"( parent_flags & ZEND_ACC_PUBLIC ) ? """" : "" or weaker"""		213440	6					
ANR	213850	ConditionalExpression	"( parent_flags & ZEND_ACC_PUBLIC ) ? """" : "" or weaker"""		213440	0					
ANR	213851	Condition	parent_flags & ZEND_ACC_PUBLIC		213440	0					
ANR	213852	BitAndExpression	parent_flags & ZEND_ACC_PUBLIC		213440	0		&			
ANR	213853	Identifier	parent_flags		213440	0					
ANR	213854	Identifier	ZEND_ACC_PUBLIC		213440	1					
ANR	213855	PrimaryExpression	""""""		213440	1					
ANR	213856	PrimaryExpression	""" or weaker"""		213440	2					
ANR	213857	ElseStatement	else		213440	0					
ANR	213858	IfStatement	if ( ( ( child_flags & ZEND_ACC_PPP_MASK ) < ( parent_flags & ZEND_ACC_PPP_MASK ) ) && ( ( parent_flags & ZEND_ACC_PPP_MASK ) & ZEND_ACC_PRIVATE ) )		213440	0					
ANR	213859	Condition	( ( child_flags & ZEND_ACC_PPP_MASK ) < ( parent_flags & ZEND_ACC_PPP_MASK ) ) && ( ( parent_flags & ZEND_ACC_PPP_MASK ) & ZEND_ACC_PRIVATE )	549:13:18704:18837	213440	0	True				
ANR	213860	AndExpression	( ( child_flags & ZEND_ACC_PPP_MASK ) < ( parent_flags & ZEND_ACC_PPP_MASK ) ) && ( ( parent_flags & ZEND_ACC_PPP_MASK ) & ZEND_ACC_PRIVATE )		213440	0		&&			
ANR	213861	RelationalExpression	( child_flags & ZEND_ACC_PPP_MASK ) < ( parent_flags & ZEND_ACC_PPP_MASK )		213440	0		<			
ANR	213862	BitAndExpression	child_flags & ZEND_ACC_PPP_MASK		213440	0		&			
ANR	213863	Identifier	child_flags		213440	0					
ANR	213864	Identifier	ZEND_ACC_PPP_MASK		213440	1					
ANR	213865	BitAndExpression	parent_flags & ZEND_ACC_PPP_MASK		213440	1		&			
ANR	213866	Identifier	parent_flags		213440	0					
ANR	213867	Identifier	ZEND_ACC_PPP_MASK		213440	1					
ANR	213868	BitAndExpression	( parent_flags & ZEND_ACC_PPP_MASK ) & ZEND_ACC_PRIVATE		213440	1		&			
ANR	213869	BitAndExpression	parent_flags & ZEND_ACC_PPP_MASK		213440	0		&			
ANR	213870	Identifier	parent_flags		213440	0					
ANR	213871	Identifier	ZEND_ACC_PPP_MASK		213440	1					
ANR	213872	Identifier	ZEND_ACC_PRIVATE		213440	1					
ANR	213873	CompoundStatement		43:63:2640:2640	213440	1					
ANR	213874	ExpressionStatement	child -> common . fn_flags |= ZEND_ACC_CHANGED	551:3:18845:18887	213440	0	True				
ANR	213875	AssignmentExpression	child -> common . fn_flags |= ZEND_ACC_CHANGED		213440	0		|=			
ANR	213876	MemberAccess	child -> common . fn_flags		213440	0					
ANR	213877	PtrMemberAccess	child -> common		213440	0					
ANR	213878	Identifier	child		213440	0					
ANR	213879	Identifier	common		213440	1					
ANR	213880	Identifier	fn_flags		213440	1					
ANR	213881	Identifier	ZEND_ACC_CHANGED		213440	1					
ANR	213882	IfStatement	if ( parent_flags & ZEND_ACC_PRIVATE )		213440	8					
ANR	213883	Condition	parent_flags & ZEND_ACC_PRIVATE	555:5:18902:18932	213440	0	True				
ANR	213884	BitAndExpression	parent_flags & ZEND_ACC_PRIVATE		213440	0		&			
ANR	213885	Identifier	parent_flags		213440	0					
ANR	213886	Identifier	ZEND_ACC_PRIVATE		213440	1					
ANR	213887	CompoundStatement		48:38:2735:2735	213440	1					
ANR	213888	ExpressionStatement	child -> common . prototype = NULL	556:2:18939:18969	213440	0	True				
ANR	213889	AssignmentExpression	child -> common . prototype = NULL		213440	0		=			
ANR	213890	MemberAccess	child -> common . prototype		213440	0					
ANR	213891	PtrMemberAccess	child -> common		213440	0					
ANR	213892	Identifier	child		213440	0					
ANR	213893	Identifier	common		213440	1					
ANR	213894	Identifier	prototype		213440	1					
ANR	213895	Identifier	NULL		213440	1					
ANR	213896	ElseStatement	else		213440	0					
ANR	213897	IfStatement	if ( parent_flags & ZEND_ACC_ABSTRACT )		213440	0					
ANR	213898	Condition	parent_flags & ZEND_ACC_ABSTRACT	557:12:18983:19014	213440	0	True				
ANR	213899	BitAndExpression	parent_flags & ZEND_ACC_ABSTRACT		213440	0		&			
ANR	213900	Identifier	parent_flags		213440	0					
ANR	213901	Identifier	ZEND_ACC_ABSTRACT		213440	1					
ANR	213902	CompoundStatement		50:46:2817:2817	213440	1					
ANR	213903	ExpressionStatement	child -> common . fn_flags |= ZEND_ACC_IMPLEMENTED_ABSTRACT	558:2:19021:19076	213440	0	True				
ANR	213904	AssignmentExpression	child -> common . fn_flags |= ZEND_ACC_IMPLEMENTED_ABSTRACT		213440	0		|=			
ANR	213905	MemberAccess	child -> common . fn_flags		213440	0					
ANR	213906	PtrMemberAccess	child -> common		213440	0					
ANR	213907	Identifier	child		213440	0					
ANR	213908	Identifier	common		213440	1					
ANR	213909	Identifier	fn_flags		213440	1					
ANR	213910	Identifier	ZEND_ACC_IMPLEMENTED_ABSTRACT		213440	1					
ANR	213911	ExpressionStatement	child -> common . prototype = parent	559:2:19080:19112	213440	1	True				
ANR	213912	AssignmentExpression	child -> common . prototype = parent		213440	0		=			
ANR	213913	MemberAccess	child -> common . prototype		213440	0					
ANR	213914	PtrMemberAccess	child -> common		213440	0					
ANR	213915	Identifier	child		213440	0					
ANR	213916	Identifier	common		213440	1					
ANR	213917	Identifier	prototype		213440	1					
ANR	213918	Identifier	parent		213440	1					
ANR	213919	ElseStatement	else		213440	0					
ANR	213920	IfStatement	if ( ! ( parent -> common . fn_flags & ZEND_ACC_CTOR ) || ( parent -> common . prototype && ( parent -> common . prototype -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) ) )		213440	0					
ANR	213921	Condition	! ( parent -> common . fn_flags & ZEND_ACC_CTOR ) || ( parent -> common . prototype && ( parent -> common . prototype -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) )	560:12:19126:19272	213440	0	True				
ANR	213922	OrExpression	! ( parent -> common . fn_flags & ZEND_ACC_CTOR ) || ( parent -> common . prototype && ( parent -> common . prototype -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) )		213440	0		||			
ANR	213923	UnaryOperationExpression	! ( parent -> common . fn_flags & ZEND_ACC_CTOR )		213440	0					
ANR	213924	UnaryOperator	!		213440	0					
ANR	213925	BitAndExpression	parent -> common . fn_flags & ZEND_ACC_CTOR		213440	1		&			
ANR	213926	MemberAccess	parent -> common . fn_flags		213440	0					
ANR	213927	PtrMemberAccess	parent -> common		213440	0					
ANR	213928	Identifier	parent		213440	0					
ANR	213929	Identifier	common		213440	1					
ANR	213930	Identifier	fn_flags		213440	1					
ANR	213931	Identifier	ZEND_ACC_CTOR		213440	1					
ANR	213932	AndExpression	parent -> common . prototype && ( parent -> common . prototype -> common . scope -> ce_flags & ZEND_ACC_INTERFACE )		213440	1		&&			
ANR	213933	MemberAccess	parent -> common . prototype		213440	0					
ANR	213934	PtrMemberAccess	parent -> common		213440	0					
ANR	213935	Identifier	parent		213440	0					
ANR	213936	Identifier	common		213440	1					
ANR	213937	Identifier	prototype		213440	1					
ANR	213938	BitAndExpression	parent -> common . prototype -> common . scope -> ce_flags & ZEND_ACC_INTERFACE		213440	1		&			
ANR	213939	PtrMemberAccess	parent -> common . prototype -> common . scope -> ce_flags		213440	0					
ANR	213940	MemberAccess	parent -> common . prototype -> common . scope		213440	0					
ANR	213941	PtrMemberAccess	parent -> common . prototype -> common		213440	0					
ANR	213942	MemberAccess	parent -> common . prototype		213440	0					
ANR	213943	PtrMemberAccess	parent -> common		213440	0					
ANR	213944	Identifier	parent		213440	0					
ANR	213945	Identifier	common		213440	1					
ANR	213946	Identifier	prototype		213440	1					
ANR	213947	Identifier	common		213440	1					
ANR	213948	Identifier	scope		213440	1					
ANR	213949	Identifier	ce_flags		213440	1					
ANR	213950	Identifier	ZEND_ACC_INTERFACE		213440	1					
ANR	213951	CompoundStatement		53:161:3075:3075	213440	1					
ANR	213952	ExpressionStatement	child -> common . prototype = parent -> common . prototype ? parent -> common . prototype : parent	562:2:19345:19431	213440	0	True				
ANR	213953	AssignmentExpression	child -> common . prototype = parent -> common . prototype ? parent -> common . prototype : parent		213440	0		=			
ANR	213954	MemberAccess	child -> common . prototype		213440	0					
ANR	213955	PtrMemberAccess	child -> common		213440	0					
ANR	213956	Identifier	child		213440	0					
ANR	213957	Identifier	common		213440	1					
ANR	213958	Identifier	prototype		213440	1					
ANR	213959	ConditionalExpression	parent -> common . prototype ? parent -> common . prototype : parent		213440	1					
ANR	213960	Condition	parent -> common . prototype		213440	0					
ANR	213961	MemberAccess	parent -> common . prototype		213440	0					
ANR	213962	PtrMemberAccess	parent -> common		213440	0					
ANR	213963	Identifier	parent		213440	0					
ANR	213964	Identifier	common		213440	1					
ANR	213965	Identifier	prototype		213440	1					
ANR	213966	MemberAccess	parent -> common . prototype		213440	1					
ANR	213967	PtrMemberAccess	parent -> common		213440	0					
ANR	213968	Identifier	parent		213440	0					
ANR	213969	Identifier	common		213440	1					
ANR	213970	Identifier	prototype		213440	1					
ANR	213971	Identifier	parent		213440	2					
ANR	213972	IfStatement	if ( child -> common . prototype && ( child -> common . prototype -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_HAS_RETURN_TYPE ) ) )		213440	9					
ANR	213973	Condition	child -> common . prototype && ( child -> common . prototype -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_HAS_RETURN_TYPE ) )	565:5:19442:19564	213440	0	True				
ANR	213974	AndExpression	child -> common . prototype && ( child -> common . prototype -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_HAS_RETURN_TYPE ) )		213440	0		&&			
ANR	213975	MemberAccess	child -> common . prototype		213440	0					
ANR	213976	PtrMemberAccess	child -> common		213440	0					
ANR	213977	Identifier	child		213440	0					
ANR	213978	Identifier	common		213440	1					
ANR	213979	Identifier	prototype		213440	1					
ANR	213980	BitAndExpression	child -> common . prototype -> common . fn_flags & ( ZEND_ACC_ABSTRACT | ZEND_ACC_HAS_RETURN_TYPE )		213440	1		&			
ANR	213981	MemberAccess	child -> common . prototype -> common . fn_flags		213440	0					
ANR	213982	PtrMemberAccess	child -> common . prototype -> common		213440	0					
ANR	213983	MemberAccess	child -> common . prototype		213440	0					
ANR	213984	PtrMemberAccess	child -> common		213440	0					
ANR	213985	Identifier	child		213440	0					
ANR	213986	Identifier	common		213440	1					
ANR	213987	Identifier	prototype		213440	1					
ANR	213988	Identifier	common		213440	1					
ANR	213989	Identifier	fn_flags		213440	1					
ANR	213990	InclusiveOrExpression	ZEND_ACC_ABSTRACT | ZEND_ACC_HAS_RETURN_TYPE		213440	1		|			
ANR	213991	Identifier	ZEND_ACC_ABSTRACT		213440	0					
ANR	213992	Identifier	ZEND_ACC_HAS_RETURN_TYPE		213440	1					
ANR	213993	CompoundStatement		60:4:3367:3367	213440	1					
ANR	213994	IfStatement	"if ( UNEXPECTED ( ! zend_do_perform_implementation_check ( child , child -> common . prototype ) ) )"		213440	0					
ANR	213995	Condition	"UNEXPECTED ( ! zend_do_perform_implementation_check ( child , child -> common . prototype ) )"	568:6:19575:19655	213440	0	True				
ANR	213996	CallExpression	"UNEXPECTED ( ! zend_do_perform_implementation_check ( child , child -> common . prototype ) )"		213440	0					
ANR	213997	Callee	UNEXPECTED		213440	0					
ANR	213998	Identifier	UNEXPECTED		213440	0					
ANR	213999	ArgumentList	"! zend_do_perform_implementation_check ( child , child -> common . prototype )"		213440	1					
ANR	214000	Argument	"! zend_do_perform_implementation_check ( child , child -> common . prototype )"		213440	0					
ANR	214001	UnaryOperationExpression	"! zend_do_perform_implementation_check ( child , child -> common . prototype )"		213440	0					
ANR	214002	UnaryOperator	!		213440	0					
ANR	214003	CallExpression	"zend_do_perform_implementation_check ( child , child -> common . prototype )"		213440	1					
ANR	214004	Callee	zend_do_perform_implementation_check		213440	0					
ANR	214005	Identifier	zend_do_perform_implementation_check		213440	0					
ANR	214006	ArgumentList	child		213440	1					
ANR	214007	Argument	child		213440	0					
ANR	214008	Identifier	child		213440	0					
ANR	214009	Argument	child -> common . prototype		213440	1					
ANR	214010	MemberAccess	child -> common . prototype		213440	0					
ANR	214011	PtrMemberAccess	child -> common		213440	0					
ANR	214012	Identifier	child		213440	0					
ANR	214013	Identifier	common		213440	1					
ANR	214014	Identifier	prototype		213440	1					
ANR	214015	CompoundStatement		63:3:3554:3621	213440	1					
ANR	214016	IdentifierDeclStatement	zend_string * method_prototype = zend_get_function_declaration ( child -> common . prototype ) ;	569:3:19663:19749	213440	0	True				
ANR	214017	IdentifierDecl	* method_prototype = zend_get_function_declaration ( child -> common . prototype )		213440	0					
ANR	214018	IdentifierDeclType	zend_string *		213440	0					
ANR	214019	Identifier	method_prototype		213440	1					
ANR	214020	AssignmentExpression	* method_prototype = zend_get_function_declaration ( child -> common . prototype )		213440	2		=			
ANR	214021	Identifier	method_prototype		213440	0					
ANR	214022	CallExpression	zend_get_function_declaration ( child -> common . prototype )		213440	1					
ANR	214023	Callee	zend_get_function_declaration		213440	0					
ANR	214024	Identifier	zend_get_function_declaration		213440	0					
ANR	214025	ArgumentList	child -> common . prototype		213440	1					
ANR	214026	Argument	child -> common . prototype		213440	0					
ANR	214027	MemberAccess	child -> common . prototype		213440	0					
ANR	214028	PtrMemberAccess	child -> common		213440	0					
ANR	214029	Identifier	child		213440	0					
ANR	214030	Identifier	common		213440	1					
ANR	214031	Identifier	prototype		213440	1					
ANR	214032	IdentifierDeclStatement	zend_string * child_prototype = zend_get_function_declaration ( child ) ;	570:3:19754:19821	213440	1	True				
ANR	214033	IdentifierDecl	* child_prototype = zend_get_function_declaration ( child )		213440	0					
ANR	214034	IdentifierDeclType	zend_string *		213440	0					
ANR	214035	Identifier	child_prototype		213440	1					
ANR	214036	AssignmentExpression	* child_prototype = zend_get_function_declaration ( child )		213440	2		=			
ANR	214037	Identifier	child_prototype		213440	0					
ANR	214038	CallExpression	zend_get_function_declaration ( child )		213440	1					
ANR	214039	Callee	zend_get_function_declaration		213440	0					
ANR	214040	Identifier	zend_get_function_declaration		213440	0					
ANR	214041	ArgumentList	child		213440	1					
ANR	214042	Argument	child		213440	0					
ANR	214043	Identifier	child		213440	0					
ANR	214044	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( child_prototype ) , ZSTR_VAL ( method_prototype ) )"	571:3:19826:19965	213440	2	True				
ANR	214045	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( child_prototype ) , ZSTR_VAL ( method_prototype ) )"		213440	0					
ANR	214046	Callee	zend_error_noreturn		213440	0					
ANR	214047	Identifier	zend_error_noreturn		213440	0					
ANR	214048	ArgumentList	E_COMPILE_ERROR		213440	1					
ANR	214049	Argument	E_COMPILE_ERROR		213440	0					
ANR	214050	Identifier	E_COMPILE_ERROR		213440	0					
ANR	214051	Argument	"""Declaration of %s must be compatible with %s"""		213440	1					
ANR	214052	PrimaryExpression	"""Declaration of %s must be compatible with %s"""		213440	0					
ANR	214053	Argument	ZSTR_VAL ( child_prototype )		213440	2					
ANR	214054	CallExpression	ZSTR_VAL ( child_prototype )		213440	0					
ANR	214055	Callee	ZSTR_VAL		213440	0					
ANR	214056	Identifier	ZSTR_VAL		213440	0					
ANR	214057	ArgumentList	child_prototype		213440	1					
ANR	214058	Argument	child_prototype		213440	0					
ANR	214059	Identifier	child_prototype		213440	0					
ANR	214060	Argument	ZSTR_VAL ( method_prototype )		213440	3					
ANR	214061	CallExpression	ZSTR_VAL ( method_prototype )		213440	0					
ANR	214062	Callee	ZSTR_VAL		213440	0					
ANR	214063	Identifier	ZSTR_VAL		213440	0					
ANR	214064	ArgumentList	method_prototype		213440	1					
ANR	214065	Argument	method_prototype		213440	0					
ANR	214066	Identifier	method_prototype		213440	0					
ANR	214067	ElseStatement	else		213440	0					
ANR	214068	IfStatement	"if ( UNEXPECTED ( ! zend_do_perform_implementation_check ( child , parent ) ) )"		213440	0					
ANR	214069	Condition	"UNEXPECTED ( ! zend_do_perform_implementation_check ( child , parent ) )"	573:12:19983:20046	213440	0	True				
ANR	214070	CallExpression	"UNEXPECTED ( ! zend_do_perform_implementation_check ( child , parent ) )"		213440	0					
ANR	214071	Callee	UNEXPECTED		213440	0					
ANR	214072	Identifier	UNEXPECTED		213440	0					
ANR	214073	ArgumentList	"! zend_do_perform_implementation_check ( child , parent )"		213440	1					
ANR	214074	Argument	"! zend_do_perform_implementation_check ( child , parent )"		213440	0					
ANR	214075	UnaryOperationExpression	"! zend_do_perform_implementation_check ( child , parent )"		213440	0					
ANR	214076	UnaryOperator	!		213440	0					
ANR	214077	CallExpression	"zend_do_perform_implementation_check ( child , parent )"		213440	1					
ANR	214078	Callee	zend_do_perform_implementation_check		213440	0					
ANR	214079	Identifier	zend_do_perform_implementation_check		213440	0					
ANR	214080	ArgumentList	child		213440	1					
ANR	214081	Argument	child		213440	0					
ANR	214082	Identifier	child		213440	0					
ANR	214083	Argument	parent		213440	1					
ANR	214084	Identifier	parent		213440	0					
ANR	214085	CompoundStatement		68:2:3926:3993	213440	1					
ANR	214086	IdentifierDeclStatement	zend_string * method_prototype = zend_get_function_declaration ( parent ) ;	574:2:20053:20122	213440	0	True				
ANR	214087	IdentifierDecl	* method_prototype = zend_get_function_declaration ( parent )		213440	0					
ANR	214088	IdentifierDeclType	zend_string *		213440	0					
ANR	214089	Identifier	method_prototype		213440	1					
ANR	214090	AssignmentExpression	* method_prototype = zend_get_function_declaration ( parent )		213440	2		=			
ANR	214091	Identifier	method_prototype		213440	0					
ANR	214092	CallExpression	zend_get_function_declaration ( parent )		213440	1					
ANR	214093	Callee	zend_get_function_declaration		213440	0					
ANR	214094	Identifier	zend_get_function_declaration		213440	0					
ANR	214095	ArgumentList	parent		213440	1					
ANR	214096	Argument	parent		213440	0					
ANR	214097	Identifier	parent		213440	0					
ANR	214098	IdentifierDeclStatement	zend_string * child_prototype = zend_get_function_declaration ( child ) ;	575:2:20126:20193	213440	1	True				
ANR	214099	IdentifierDecl	* child_prototype = zend_get_function_declaration ( child )		213440	0					
ANR	214100	IdentifierDeclType	zend_string *		213440	0					
ANR	214101	Identifier	child_prototype		213440	1					
ANR	214102	AssignmentExpression	* child_prototype = zend_get_function_declaration ( child )		213440	2		=			
ANR	214103	Identifier	child_prototype		213440	0					
ANR	214104	CallExpression	zend_get_function_declaration ( child )		213440	1					
ANR	214105	Callee	zend_get_function_declaration		213440	0					
ANR	214106	Identifier	zend_get_function_declaration		213440	0					
ANR	214107	ArgumentList	child		213440	1					
ANR	214108	Argument	child		213440	0					
ANR	214109	Identifier	child		213440	0					
ANR	214110	ExpressionStatement	"zend_error ( E_WARNING , ""Declaration of %s should be compatible with %s"" , ZSTR_VAL ( child_prototype ) , ZSTR_VAL ( method_prototype ) )"	576:2:20197:20323	213440	2	True				
ANR	214111	CallExpression	"zend_error ( E_WARNING , ""Declaration of %s should be compatible with %s"" , ZSTR_VAL ( child_prototype ) , ZSTR_VAL ( method_prototype ) )"		213440	0					
ANR	214112	Callee	zend_error		213440	0					
ANR	214113	Identifier	zend_error		213440	0					
ANR	214114	ArgumentList	E_WARNING		213440	1					
ANR	214115	Argument	E_WARNING		213440	0					
ANR	214116	Identifier	E_WARNING		213440	0					
ANR	214117	Argument	"""Declaration of %s should be compatible with %s"""		213440	1					
ANR	214118	PrimaryExpression	"""Declaration of %s should be compatible with %s"""		213440	0					
ANR	214119	Argument	ZSTR_VAL ( child_prototype )		213440	2					
ANR	214120	CallExpression	ZSTR_VAL ( child_prototype )		213440	0					
ANR	214121	Callee	ZSTR_VAL		213440	0					
ANR	214122	Identifier	ZSTR_VAL		213440	0					
ANR	214123	ArgumentList	child_prototype		213440	1					
ANR	214124	Argument	child_prototype		213440	0					
ANR	214125	Identifier	child_prototype		213440	0					
ANR	214126	Argument	ZSTR_VAL ( method_prototype )		213440	3					
ANR	214127	CallExpression	ZSTR_VAL ( method_prototype )		213440	0					
ANR	214128	Callee	ZSTR_VAL		213440	0					
ANR	214129	Identifier	ZSTR_VAL		213440	0					
ANR	214130	ArgumentList	method_prototype		213440	1					
ANR	214131	Argument	method_prototype		213440	0					
ANR	214132	Identifier	method_prototype		213440	0					
ANR	214133	ExpressionStatement	zend_string_free ( child_prototype )	577:2:20327:20360	213440	3	True				
ANR	214134	CallExpression	zend_string_free ( child_prototype )		213440	0					
ANR	214135	Callee	zend_string_free		213440	0					
ANR	214136	Identifier	zend_string_free		213440	0					
ANR	214137	ArgumentList	child_prototype		213440	1					
ANR	214138	Argument	child_prototype		213440	0					
ANR	214139	Identifier	child_prototype		213440	0					
ANR	214140	ExpressionStatement	zend_string_free ( method_prototype )	578:2:20364:20398	213440	4	True				
ANR	214141	CallExpression	zend_string_free ( method_prototype )		213440	0					
ANR	214142	Callee	zend_string_free		213440	0					
ANR	214143	Identifier	zend_string_free		213440	0					
ANR	214144	ArgumentList	method_prototype		213440	1					
ANR	214145	Argument	method_prototype		213440	0					
ANR	214146	Identifier	method_prototype		213440	0					
ANR	214147	ReturnType	static void		213440	1					
ANR	214148	Identifier	do_inheritance_check_on_method		213440	2					
ANR	214149	ParameterList	"zend_function * child , zend_function * parent"		213440	3					
ANR	214150	Parameter	zend_function * child	507:43:16144:16163	213440	0	True				
ANR	214151	ParameterType	zend_function *		213440	0					
ANR	214152	Identifier	child		213440	1					
ANR	214153	Parameter	zend_function * parent	507:65:16166:16186	213440	1	True				
ANR	214154	ParameterType	zend_function *		213440	0					
ANR	214155	Identifier	parent		213440	1					
ANR	214156	CFGEntryNode	ENTRY		213440		True				
ANR	214157	CFGExitNode	EXIT		213440		True				
ANR	214158	Symbol	parent		213440						
ANR	214159	Symbol	child -> common . prototype -> common . scope -> name		213440						
ANR	214160	Symbol	* parent		213440						
ANR	214161	Symbol	parent -> common . scope -> ce_flags		213440						
ANR	214162	Symbol	* child -> common . prototype -> common . scope		213440						
ANR	214163	Symbol	* parent -> common . prototype -> common		213440						
ANR	214164	Symbol	* child -> common . scope		213440						
ANR	214165	Symbol	E_COMPILE_ERROR		213440						
ANR	214166	Symbol	child -> common		213440						
ANR	214167	Symbol	parent -> common . prototype -> common . scope -> ce_flags		213440						
ANR	214168	Symbol	zend_visibility_string		213440						
ANR	214169	Symbol	parent -> common . prototype -> common . scope		213440						
ANR	214170	Symbol	child -> common . prototype -> common . scope		213440						
ANR	214171	Symbol	child -> common . prototype -> common		213440						
ANR	214172	Symbol	child -> common . prototype -> common . fn_flags		213440						
ANR	214173	Symbol	child_flags		213440						
ANR	214174	Symbol	method_prototype		213440						
ANR	214175	Symbol	* child -> common		213440						
ANR	214176	Symbol	* * parent -> common		213440						
ANR	214177	Symbol	* child -> common . prototype -> common		213440						
ANR	214178	Symbol	ZEND_ACC_INTERFACE		213440						
ANR	214179	Symbol	parent -> common . fn_flags		213440						
ANR	214180	Symbol	child -> common . scope		213440						
ANR	214181	Symbol	* parent -> common . scope		213440						
ANR	214182	Symbol	* child		213440						
ANR	214183	Symbol	* * * child		213440						
ANR	214184	Symbol	NULL		213440						
ANR	214185	Symbol	parent_flags		213440						
ANR	214186	Symbol	* parent -> common . prototype -> common . scope		213440						
ANR	214187	Symbol	child -> common . prototype		213440						
ANR	214188	Symbol	* * child -> common . prototype		213440						
ANR	214189	Symbol	* * parent -> common . prototype		213440						
ANR	214190	Symbol	child -> common . scope -> name		213440						
ANR	214191	Symbol	zend_get_function_declaration		213440						
ANR	214192	Symbol	ZEND_ACC_CTOR		213440						
ANR	214193	Symbol	* parent -> common		213440						
ANR	214194	Symbol	child_prototype		213440						
ANR	214195	Symbol	zend_do_perform_implementation_check		213440						
ANR	214196	Symbol	child -> common . function_name		213440						
ANR	214197	Symbol	child		213440						
ANR	214198	Symbol	* * child -> common		213440						
ANR	214199	Symbol	ZEND_ACC_PPP_MASK		213440						
ANR	214200	Symbol	ZEND_ACC_IMPLEMENTED_ABSTRACT		213440						
ANR	214201	Symbol	ZEND_ACC_PUBLIC		213440						
ANR	214202	Symbol	ZEND_ACC_CHANGED		213440						
ANR	214203	Symbol	parent -> common . prototype		213440						
ANR	214204	Symbol	child -> common . fn_flags		213440						
ANR	214205	Symbol	ZEND_ACC_FINAL		213440						
ANR	214206	Symbol	UNEXPECTED		213440						
ANR	214207	Symbol	E_WARNING		213440						
ANR	214208	Symbol	* * child		213440						
ANR	214209	Symbol	ZEND_ACC_STATIC		213440						
ANR	214210	Symbol	parent -> common . scope -> name		213440						
ANR	214211	Symbol	ZEND_FN_SCOPE_NAME		213440						
ANR	214212	Symbol	parent -> common		213440						
ANR	214213	Symbol	* parent -> common . prototype		213440						
ANR	214214	Symbol	ZEND_ACC_HAS_RETURN_TYPE		213440						
ANR	214215	Symbol	* * parent		213440						
ANR	214216	Symbol	ZSTR_VAL		213440						
ANR	214217	Symbol	ZEND_ACC_PRIVATE		213440						
ANR	214218	Symbol	ZEND_ACC_ABSTRACT		213440						
ANR	214219	Symbol	* * * parent		213440						
ANR	214220	Symbol	parent -> common . scope		213440						
ANR	214221	Symbol	parent -> common . prototype -> common		213440						
ANR	214222	Symbol	* child -> common . prototype		213440						
ANR	214223	Function	do_inherit_method	583:0:20416:20851							
ANR	214224	FunctionDef	"do_inherit_method (zend_string * key , zend_function * parent , zend_class_entry * ce)"		214223	0					
ANR	214225	CompoundStatement		584:0:20529:20851	214223	0					
ANR	214226	IdentifierDeclStatement	"zval * child = zend_hash_find ( & ce -> function_table , key ) ;"	585:1:20532:20586	214223	0	True				
ANR	214227	IdentifierDecl	"* child = zend_hash_find ( & ce -> function_table , key )"		214223	0					
ANR	214228	IdentifierDeclType	zval *		214223	0					
ANR	214229	Identifier	child		214223	1					
ANR	214230	AssignmentExpression	"* child = zend_hash_find ( & ce -> function_table , key )"		214223	2		=			
ANR	214231	Identifier	child		214223	0					
ANR	214232	CallExpression	"zend_hash_find ( & ce -> function_table , key )"		214223	1					
ANR	214233	Callee	zend_hash_find		214223	0					
ANR	214234	Identifier	zend_hash_find		214223	0					
ANR	214235	ArgumentList	& ce -> function_table		214223	1					
ANR	214236	Argument	& ce -> function_table		214223	0					
ANR	214237	UnaryOperationExpression	& ce -> function_table		214223	0					
ANR	214238	UnaryOperator	&		214223	0					
ANR	214239	PtrMemberAccess	ce -> function_table		214223	1					
ANR	214240	Identifier	ce		214223	0					
ANR	214241	Identifier	function_table		214223	1					
ANR	214242	Argument	key		214223	1					
ANR	214243	Identifier	key		214223	0					
ANR	214244	IfStatement	if ( child )		214223	1					
ANR	214245	Condition	child	587:5:20594:20598	214223	0	True				
ANR	214246	Identifier	child		214223	0					
ANR	214247	CompoundStatement		4:12:71:71	214223	1					
ANR	214248	ExpressionStatement	"do_inheritance_check_on_method ( ( zend_function * ) Z_PTR_P ( child ) , parent )"	588:2:20605:20675	214223	0	True				
ANR	214249	CallExpression	"do_inheritance_check_on_method ( ( zend_function * ) Z_PTR_P ( child ) , parent )"		214223	0					
ANR	214250	Callee	do_inheritance_check_on_method		214223	0					
ANR	214251	Identifier	do_inheritance_check_on_method		214223	0					
ANR	214252	ArgumentList	( zend_function * ) Z_PTR_P ( child )		214223	1					
ANR	214253	Argument	( zend_function * ) Z_PTR_P ( child )		214223	0					
ANR	214254	CastExpression	( zend_function * ) Z_PTR_P ( child )		214223	0					
ANR	214255	CastTarget	zend_function *		214223	0					
ANR	214256	CallExpression	Z_PTR_P ( child )		214223	1					
ANR	214257	Callee	Z_PTR_P		214223	0					
ANR	214258	Identifier	Z_PTR_P		214223	0					
ANR	214259	ArgumentList	child		214223	1					
ANR	214260	Argument	child		214223	0					
ANR	214261	Identifier	child		214223	0					
ANR	214262	Argument	parent		214223	1					
ANR	214263	Identifier	parent		214223	0					
ANR	214264	ReturnStatement	return NULL ;	589:2:20679:20690	214223	1	True				
ANR	214265	Identifier	NULL		214223	0					
ANR	214266	IfStatement	if ( parent -> common . fn_flags & ( ZEND_ACC_ABSTRACT ) )		214223	2					
ANR	214267	Condition	parent -> common . fn_flags & ( ZEND_ACC_ABSTRACT )	592:5:20701:20745	214223	0	True				
ANR	214268	BitAndExpression	parent -> common . fn_flags & ( ZEND_ACC_ABSTRACT )		214223	0		&			
ANR	214269	MemberAccess	parent -> common . fn_flags		214223	0					
ANR	214270	PtrMemberAccess	parent -> common		214223	0					
ANR	214271	Identifier	parent		214223	0					
ANR	214272	Identifier	common		214223	1					
ANR	214273	Identifier	fn_flags		214223	1					
ANR	214274	Identifier	ZEND_ACC_ABSTRACT		214223	1					
ANR	214275	CompoundStatement		9:52:218:218	214223	1					
ANR	214276	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS	593:2:20752:20800	214223	0	True				
ANR	214277	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		214223	0		|=			
ANR	214278	PtrMemberAccess	ce -> ce_flags		214223	0					
ANR	214279	Identifier	ce		214223	0					
ANR	214280	Identifier	ce_flags		214223	1					
ANR	214281	Identifier	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		214223	1					
ANR	214282	ReturnStatement	"return zend_duplicate_function ( parent , ce ) ;"	596:1:20807:20849	214223	3	True				
ANR	214283	CallExpression	"zend_duplicate_function ( parent , ce )"		214223	0					
ANR	214284	Callee	zend_duplicate_function		214223	0					
ANR	214285	Identifier	zend_duplicate_function		214223	0					
ANR	214286	ArgumentList	parent		214223	1					
ANR	214287	Argument	parent		214223	0					
ANR	214288	Identifier	parent		214223	0					
ANR	214289	Argument	ce		214223	1					
ANR	214290	Identifier	ce		214223	0					
ANR	214291	ReturnType	static zend_function *		214223	1					
ANR	214292	Identifier	do_inherit_method		214223	2					
ANR	214293	ParameterList	"zend_string * key , zend_function * parent , zend_class_entry * ce"		214223	3					
ANR	214294	Parameter	zend_string * key	583:40:20456:20471	214223	0	True				
ANR	214295	ParameterType	zend_string *		214223	0					
ANR	214296	Identifier	key		214223	1					
ANR	214297	Parameter	zend_function * parent	583:58:20474:20494	214223	1	True				
ANR	214298	ParameterType	zend_function *		214223	0					
ANR	214299	Identifier	parent		214223	1					
ANR	214300	Parameter	zend_class_entry * ce	583:81:20497:20516	214223	2	True				
ANR	214301	ParameterType	zend_class_entry *		214223	0					
ANR	214302	Identifier	ce		214223	1					
ANR	214303	CFGEntryNode	ENTRY		214223		True				
ANR	214304	CFGExitNode	EXIT		214223		True				
ANR	214305	Symbol	parent -> common		214223						
ANR	214306	Symbol	parent		214223						
ANR	214307	Symbol	Z_PTR_P		214223						
ANR	214308	Symbol	ce		214223						
ANR	214309	Symbol	NULL		214223						
ANR	214310	Symbol	* parent		214223						
ANR	214311	Symbol	& ce -> function_table		214223						
ANR	214312	Symbol	* ce		214223						
ANR	214313	Symbol	ce -> ce_flags		214223						
ANR	214314	Symbol	zend_hash_find		214223						
ANR	214315	Symbol	ZEND_ACC_ABSTRACT		214223						
ANR	214316	Symbol	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		214223						
ANR	214317	Symbol	zend_duplicate_function		214223						
ANR	214318	Symbol	key		214223						
ANR	214319	Symbol	child		214223						
ANR	214320	Symbol	parent -> common . fn_flags		214223						
ANR	214321	Function	do_inherit_property	600:0:20864:23271							
ANR	214322	FunctionDef	"do_inherit_property (zend_property_info * parent_info , zend_string * key , zend_class_entry * ce)"		214321	0					
ANR	214323	CompoundStatement		601:0:20979:23271	214321	0					
ANR	214324	IdentifierDeclStatement	"zval * child = zend_hash_find ( & ce -> properties_info , key ) ;"	602:1:20982:21037	214321	0	True				
ANR	214325	IdentifierDecl	"* child = zend_hash_find ( & ce -> properties_info , key )"		214321	0					
ANR	214326	IdentifierDeclType	zval *		214321	0					
ANR	214327	Identifier	child		214321	1					
ANR	214328	AssignmentExpression	"* child = zend_hash_find ( & ce -> properties_info , key )"		214321	2		=			
ANR	214329	Identifier	child		214321	0					
ANR	214330	CallExpression	"zend_hash_find ( & ce -> properties_info , key )"		214321	1					
ANR	214331	Callee	zend_hash_find		214321	0					
ANR	214332	Identifier	zend_hash_find		214321	0					
ANR	214333	ArgumentList	& ce -> properties_info		214321	1					
ANR	214334	Argument	& ce -> properties_info		214321	0					
ANR	214335	UnaryOperationExpression	& ce -> properties_info		214321	0					
ANR	214336	UnaryOperator	&		214321	0					
ANR	214337	PtrMemberAccess	ce -> properties_info		214321	1					
ANR	214338	Identifier	ce		214321	0					
ANR	214339	Identifier	properties_info		214321	1					
ANR	214340	Argument	key		214321	1					
ANR	214341	Identifier	key		214321	0					
ANR	214342	IdentifierDeclStatement	zend_property_info * child_info ;	603:1:21040:21070	214321	1	True				
ANR	214343	IdentifierDecl	* child_info		214321	0					
ANR	214344	IdentifierDeclType	zend_property_info *		214321	0					
ANR	214345	Identifier	child_info		214321	1					
ANR	214346	IfStatement	if ( UNEXPECTED ( child ) )		214321	2					
ANR	214347	Condition	UNEXPECTED ( child )	605:5:21078:21094	214321	0	True				
ANR	214348	CallExpression	UNEXPECTED ( child )		214321	0					
ANR	214349	Callee	UNEXPECTED		214321	0					
ANR	214350	Identifier	UNEXPECTED		214321	0					
ANR	214351	ArgumentList	child		214321	1					
ANR	214352	Argument	child		214321	0					
ANR	214353	Identifier	child		214321	0					
ANR	214354	CompoundStatement		5:24:117:117	214321	1					
ANR	214355	ExpressionStatement	child_info = Z_PTR_P ( child )	606:2:21101:21128	214321	0	True				
ANR	214356	AssignmentExpression	child_info = Z_PTR_P ( child )		214321	0		=			
ANR	214357	Identifier	child_info		214321	0					
ANR	214358	CallExpression	Z_PTR_P ( child )		214321	1					
ANR	214359	Callee	Z_PTR_P		214321	0					
ANR	214360	Identifier	Z_PTR_P		214321	0					
ANR	214361	ArgumentList	child		214321	1					
ANR	214362	Argument	child		214321	0					
ANR	214363	Identifier	child		214321	0					
ANR	214364	IfStatement	if ( UNEXPECTED ( parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW ) ) )		214321	1					
ANR	214365	Condition	UNEXPECTED ( parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW ) )	607:6:21136:21202	214321	0	True				
ANR	214366	CallExpression	UNEXPECTED ( parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW ) )		214321	0					
ANR	214367	Callee	UNEXPECTED		214321	0					
ANR	214368	Identifier	UNEXPECTED		214321	0					
ANR	214369	ArgumentList	parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW )		214321	1					
ANR	214370	Argument	parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW )		214321	0					
ANR	214371	BitAndExpression	parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW )		214321	0		&			
ANR	214372	PtrMemberAccess	parent_info -> flags		214321	0					
ANR	214373	Identifier	parent_info		214321	0					
ANR	214374	Identifier	flags		214321	1					
ANR	214375	InclusiveOrExpression	ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW		214321	1		|			
ANR	214376	Identifier	ZEND_ACC_PRIVATE		214321	0					
ANR	214377	Identifier	ZEND_ACC_SHADOW		214321	1					
ANR	214378	CompoundStatement		7:75:225:225	214321	1					
ANR	214379	ExpressionStatement	child_info -> flags |= ZEND_ACC_CHANGED	608:3:21210:21247	214321	0	True				
ANR	214380	AssignmentExpression	child_info -> flags |= ZEND_ACC_CHANGED		214321	0		|=			
ANR	214381	PtrMemberAccess	child_info -> flags		214321	0					
ANR	214382	Identifier	child_info		214321	0					
ANR	214383	Identifier	flags		214321	1					
ANR	214384	Identifier	ZEND_ACC_CHANGED		214321	1					
ANR	214385	ElseStatement	else		214321	0					
ANR	214386	CompoundStatement		9:9:278:278	214321	0					
ANR	214387	IfStatement	if ( UNEXPECTED ( ( parent_info -> flags & ZEND_ACC_STATIC ) != ( child_info -> flags & ZEND_ACC_STATIC ) ) )		214321	0					
ANR	214388	Condition	UNEXPECTED ( ( parent_info -> flags & ZEND_ACC_STATIC ) != ( child_info -> flags & ZEND_ACC_STATIC ) )	610:7:21267:21357	214321	0	True				
ANR	214389	CallExpression	UNEXPECTED ( ( parent_info -> flags & ZEND_ACC_STATIC ) != ( child_info -> flags & ZEND_ACC_STATIC ) )		214321	0					
ANR	214390	Callee	UNEXPECTED		214321	0					
ANR	214391	Identifier	UNEXPECTED		214321	0					
ANR	214392	ArgumentList	( parent_info -> flags & ZEND_ACC_STATIC ) != ( child_info -> flags & ZEND_ACC_STATIC )		214321	1					
ANR	214393	Argument	( parent_info -> flags & ZEND_ACC_STATIC ) != ( child_info -> flags & ZEND_ACC_STATIC )		214321	0					
ANR	214394	EqualityExpression	( parent_info -> flags & ZEND_ACC_STATIC ) != ( child_info -> flags & ZEND_ACC_STATIC )		214321	0		!=			
ANR	214395	BitAndExpression	parent_info -> flags & ZEND_ACC_STATIC		214321	0		&			
ANR	214396	PtrMemberAccess	parent_info -> flags		214321	0					
ANR	214397	Identifier	parent_info		214321	0					
ANR	214398	Identifier	flags		214321	1					
ANR	214399	Identifier	ZEND_ACC_STATIC		214321	1					
ANR	214400	BitAndExpression	child_info -> flags & ZEND_ACC_STATIC		214321	1		&			
ANR	214401	PtrMemberAccess	child_info -> flags		214321	0					
ANR	214402	Identifier	child_info		214321	0					
ANR	214403	Identifier	flags		214321	1					
ANR	214404	Identifier	ZEND_ACC_STATIC		214321	1					
ANR	214405	CompoundStatement		10:100:380:380	214321	1					
ANR	214406	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot redeclare %s%s::$%s as %s%s::$%s"" , ( parent_info -> flags & ZEND_ACC_STATIC ) ? ""static "" : ""non static "" , ZSTR_VAL ( ce -> parent -> name ) , ZSTR_VAL ( key ) , ( child_info -> flags & ZEND_ACC_STATIC ) ? ""static "" : ""non static "" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( key ) )"	611:4:21366:21668	214321	0	True				
ANR	214407	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot redeclare %s%s::$%s as %s%s::$%s"" , ( parent_info -> flags & ZEND_ACC_STATIC ) ? ""static "" : ""non static "" , ZSTR_VAL ( ce -> parent -> name ) , ZSTR_VAL ( key ) , ( child_info -> flags & ZEND_ACC_STATIC ) ? ""static "" : ""non static "" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( key ) )"		214321	0					
ANR	214408	Callee	zend_error_noreturn		214321	0					
ANR	214409	Identifier	zend_error_noreturn		214321	0					
ANR	214410	ArgumentList	E_COMPILE_ERROR		214321	1					
ANR	214411	Argument	E_COMPILE_ERROR		214321	0					
ANR	214412	Identifier	E_COMPILE_ERROR		214321	0					
ANR	214413	Argument	"""Cannot redeclare %s%s::$%s as %s%s::$%s"""		214321	1					
ANR	214414	PrimaryExpression	"""Cannot redeclare %s%s::$%s as %s%s::$%s"""		214321	0					
ANR	214415	Argument	"( parent_info -> flags & ZEND_ACC_STATIC ) ? ""static "" : ""non static """		214321	2					
ANR	214416	ConditionalExpression	"( parent_info -> flags & ZEND_ACC_STATIC ) ? ""static "" : ""non static """		214321	0					
ANR	214417	Condition	parent_info -> flags & ZEND_ACC_STATIC		214321	0					
ANR	214418	BitAndExpression	parent_info -> flags & ZEND_ACC_STATIC		214321	0		&			
ANR	214419	PtrMemberAccess	parent_info -> flags		214321	0					
ANR	214420	Identifier	parent_info		214321	0					
ANR	214421	Identifier	flags		214321	1					
ANR	214422	Identifier	ZEND_ACC_STATIC		214321	1					
ANR	214423	PrimaryExpression	"""static """		214321	1					
ANR	214424	PrimaryExpression	"""non static """		214321	2					
ANR	214425	Argument	ZSTR_VAL ( ce -> parent -> name )		214321	3					
ANR	214426	CallExpression	ZSTR_VAL ( ce -> parent -> name )		214321	0					
ANR	214427	Callee	ZSTR_VAL		214321	0					
ANR	214428	Identifier	ZSTR_VAL		214321	0					
ANR	214429	ArgumentList	ce -> parent -> name		214321	1					
ANR	214430	Argument	ce -> parent -> name		214321	0					
ANR	214431	PtrMemberAccess	ce -> parent -> name		214321	0					
ANR	214432	PtrMemberAccess	ce -> parent		214321	0					
ANR	214433	Identifier	ce		214321	0					
ANR	214434	Identifier	parent		214321	1					
ANR	214435	Identifier	name		214321	1					
ANR	214436	Argument	ZSTR_VAL ( key )		214321	4					
ANR	214437	CallExpression	ZSTR_VAL ( key )		214321	0					
ANR	214438	Callee	ZSTR_VAL		214321	0					
ANR	214439	Identifier	ZSTR_VAL		214321	0					
ANR	214440	ArgumentList	key		214321	1					
ANR	214441	Argument	key		214321	0					
ANR	214442	Identifier	key		214321	0					
ANR	214443	Argument	"( child_info -> flags & ZEND_ACC_STATIC ) ? ""static "" : ""non static """		214321	5					
ANR	214444	ConditionalExpression	"( child_info -> flags & ZEND_ACC_STATIC ) ? ""static "" : ""non static """		214321	0					
ANR	214445	Condition	child_info -> flags & ZEND_ACC_STATIC		214321	0					
ANR	214446	BitAndExpression	child_info -> flags & ZEND_ACC_STATIC		214321	0		&			
ANR	214447	PtrMemberAccess	child_info -> flags		214321	0					
ANR	214448	Identifier	child_info		214321	0					
ANR	214449	Identifier	flags		214321	1					
ANR	214450	Identifier	ZEND_ACC_STATIC		214321	1					
ANR	214451	PrimaryExpression	"""static """		214321	1					
ANR	214452	PrimaryExpression	"""non static """		214321	2					
ANR	214453	Argument	ZSTR_VAL ( ce -> name )		214321	6					
ANR	214454	CallExpression	ZSTR_VAL ( ce -> name )		214321	0					
ANR	214455	Callee	ZSTR_VAL		214321	0					
ANR	214456	Identifier	ZSTR_VAL		214321	0					
ANR	214457	ArgumentList	ce -> name		214321	1					
ANR	214458	Argument	ce -> name		214321	0					
ANR	214459	PtrMemberAccess	ce -> name		214321	0					
ANR	214460	Identifier	ce		214321	0					
ANR	214461	Identifier	name		214321	1					
ANR	214462	Argument	ZSTR_VAL ( key )		214321	7					
ANR	214463	CallExpression	ZSTR_VAL ( key )		214321	0					
ANR	214464	Callee	ZSTR_VAL		214321	0					
ANR	214465	Identifier	ZSTR_VAL		214321	0					
ANR	214466	ArgumentList	key		214321	1					
ANR	214467	Argument	key		214321	0					
ANR	214468	Identifier	key		214321	0					
ANR	214469	IfStatement	if ( parent_info -> flags & ZEND_ACC_CHANGED )		214321	1					
ANR	214470	Condition	parent_info -> flags & ZEND_ACC_CHANGED	616:7:21683:21719	214321	0	True				
ANR	214471	BitAndExpression	parent_info -> flags & ZEND_ACC_CHANGED		214321	0		&			
ANR	214472	PtrMemberAccess	parent_info -> flags		214321	0					
ANR	214473	Identifier	parent_info		214321	0					
ANR	214474	Identifier	flags		214321	1					
ANR	214475	Identifier	ZEND_ACC_CHANGED		214321	1					
ANR	214476	CompoundStatement		16:46:742:742	214321	1					
ANR	214477	ExpressionStatement	child_info -> flags |= ZEND_ACC_CHANGED	617:4:21728:21765	214321	0	True				
ANR	214478	AssignmentExpression	child_info -> flags |= ZEND_ACC_CHANGED		214321	0		|=			
ANR	214479	PtrMemberAccess	child_info -> flags		214321	0					
ANR	214480	Identifier	child_info		214321	0					
ANR	214481	Identifier	flags		214321	1					
ANR	214482	Identifier	ZEND_ACC_CHANGED		214321	1					
ANR	214483	IfStatement	if ( UNEXPECTED ( ( child_info -> flags & ZEND_ACC_PPP_MASK ) > ( parent_info -> flags & ZEND_ACC_PPP_MASK ) ) )		214321	2					
ANR	214484	Condition	UNEXPECTED ( ( child_info -> flags & ZEND_ACC_PPP_MASK ) > ( parent_info -> flags & ZEND_ACC_PPP_MASK ) )	620:7:21780:21873	214321	0	True				
ANR	214485	CallExpression	UNEXPECTED ( ( child_info -> flags & ZEND_ACC_PPP_MASK ) > ( parent_info -> flags & ZEND_ACC_PPP_MASK ) )		214321	0					
ANR	214486	Callee	UNEXPECTED		214321	0					
ANR	214487	Identifier	UNEXPECTED		214321	0					
ANR	214488	ArgumentList	( child_info -> flags & ZEND_ACC_PPP_MASK ) > ( parent_info -> flags & ZEND_ACC_PPP_MASK )		214321	1					
ANR	214489	Argument	( child_info -> flags & ZEND_ACC_PPP_MASK ) > ( parent_info -> flags & ZEND_ACC_PPP_MASK )		214321	0					
ANR	214490	RelationalExpression	( child_info -> flags & ZEND_ACC_PPP_MASK ) > ( parent_info -> flags & ZEND_ACC_PPP_MASK )		214321	0		>			
ANR	214491	BitAndExpression	child_info -> flags & ZEND_ACC_PPP_MASK		214321	0		&			
ANR	214492	PtrMemberAccess	child_info -> flags		214321	0					
ANR	214493	Identifier	child_info		214321	0					
ANR	214494	Identifier	flags		214321	1					
ANR	214495	Identifier	ZEND_ACC_PPP_MASK		214321	1					
ANR	214496	BitAndExpression	parent_info -> flags & ZEND_ACC_PPP_MASK		214321	1		&			
ANR	214497	PtrMemberAccess	parent_info -> flags		214321	0					
ANR	214498	Identifier	parent_info		214321	0					
ANR	214499	Identifier	flags		214321	1					
ANR	214500	Identifier	ZEND_ACC_PPP_MASK		214321	1					
ANR	214501	CompoundStatement		20:103:896:896	214321	1					
ANR	214502	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Access level to %s::$%s must be %s (as in class %s)%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( key ) , zend_visibility_string ( parent_info -> flags ) , ZSTR_VAL ( ce -> parent -> name ) , ( parent_info -> flags & ZEND_ACC_PUBLIC ) ? """" : "" or weaker"" )"	621:4:21882:22140	214321	0	True				
ANR	214503	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Access level to %s::$%s must be %s (as in class %s)%s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( key ) , zend_visibility_string ( parent_info -> flags ) , ZSTR_VAL ( ce -> parent -> name ) , ( parent_info -> flags & ZEND_ACC_PUBLIC ) ? """" : "" or weaker"" )"		214321	0					
ANR	214504	Callee	zend_error_noreturn		214321	0					
ANR	214505	Identifier	zend_error_noreturn		214321	0					
ANR	214506	ArgumentList	E_COMPILE_ERROR		214321	1					
ANR	214507	Argument	E_COMPILE_ERROR		214321	0					
ANR	214508	Identifier	E_COMPILE_ERROR		214321	0					
ANR	214509	Argument	"""Access level to %s::$%s must be %s (as in class %s)%s"""		214321	1					
ANR	214510	PrimaryExpression	"""Access level to %s::$%s must be %s (as in class %s)%s"""		214321	0					
ANR	214511	Argument	ZSTR_VAL ( ce -> name )		214321	2					
ANR	214512	CallExpression	ZSTR_VAL ( ce -> name )		214321	0					
ANR	214513	Callee	ZSTR_VAL		214321	0					
ANR	214514	Identifier	ZSTR_VAL		214321	0					
ANR	214515	ArgumentList	ce -> name		214321	1					
ANR	214516	Argument	ce -> name		214321	0					
ANR	214517	PtrMemberAccess	ce -> name		214321	0					
ANR	214518	Identifier	ce		214321	0					
ANR	214519	Identifier	name		214321	1					
ANR	214520	Argument	ZSTR_VAL ( key )		214321	3					
ANR	214521	CallExpression	ZSTR_VAL ( key )		214321	0					
ANR	214522	Callee	ZSTR_VAL		214321	0					
ANR	214523	Identifier	ZSTR_VAL		214321	0					
ANR	214524	ArgumentList	key		214321	1					
ANR	214525	Argument	key		214321	0					
ANR	214526	Identifier	key		214321	0					
ANR	214527	Argument	zend_visibility_string ( parent_info -> flags )		214321	4					
ANR	214528	CallExpression	zend_visibility_string ( parent_info -> flags )		214321	0					
ANR	214529	Callee	zend_visibility_string		214321	0					
ANR	214530	Identifier	zend_visibility_string		214321	0					
ANR	214531	ArgumentList	parent_info -> flags		214321	1					
ANR	214532	Argument	parent_info -> flags		214321	0					
ANR	214533	PtrMemberAccess	parent_info -> flags		214321	0					
ANR	214534	Identifier	parent_info		214321	0					
ANR	214535	Identifier	flags		214321	1					
ANR	214536	Argument	ZSTR_VAL ( ce -> parent -> name )		214321	5					
ANR	214537	CallExpression	ZSTR_VAL ( ce -> parent -> name )		214321	0					
ANR	214538	Callee	ZSTR_VAL		214321	0					
ANR	214539	Identifier	ZSTR_VAL		214321	0					
ANR	214540	ArgumentList	ce -> parent -> name		214321	1					
ANR	214541	Argument	ce -> parent -> name		214321	0					
ANR	214542	PtrMemberAccess	ce -> parent -> name		214321	0					
ANR	214543	PtrMemberAccess	ce -> parent		214321	0					
ANR	214544	Identifier	ce		214321	0					
ANR	214545	Identifier	parent		214321	1					
ANR	214546	Identifier	name		214321	1					
ANR	214547	Argument	"( parent_info -> flags & ZEND_ACC_PUBLIC ) ? """" : "" or weaker"""		214321	6					
ANR	214548	ConditionalExpression	"( parent_info -> flags & ZEND_ACC_PUBLIC ) ? """" : "" or weaker"""		214321	0					
ANR	214549	Condition	parent_info -> flags & ZEND_ACC_PUBLIC		214321	0					
ANR	214550	BitAndExpression	parent_info -> flags & ZEND_ACC_PUBLIC		214321	0		&			
ANR	214551	PtrMemberAccess	parent_info -> flags		214321	0					
ANR	214552	Identifier	parent_info		214321	0					
ANR	214553	Identifier	flags		214321	1					
ANR	214554	Identifier	ZEND_ACC_PUBLIC		214321	1					
ANR	214555	PrimaryExpression	""""""		214321	1					
ANR	214556	PrimaryExpression	""" or weaker"""		214321	2					
ANR	214557	ElseStatement	else		214321	0					
ANR	214558	IfStatement	if ( ( child_info -> flags & ZEND_ACC_STATIC ) == 0 )		214321	0					
ANR	214559	Condition	( child_info -> flags & ZEND_ACC_STATIC ) == 0	622:14:22156:22197	214321	0	True				
ANR	214560	EqualityExpression	( child_info -> flags & ZEND_ACC_STATIC ) == 0		214321	0		==			
ANR	214561	BitAndExpression	child_info -> flags & ZEND_ACC_STATIC		214321	0		&			
ANR	214562	PtrMemberAccess	child_info -> flags		214321	0					
ANR	214563	Identifier	child_info		214321	0					
ANR	214564	Identifier	flags		214321	1					
ANR	214565	Identifier	ZEND_ACC_STATIC		214321	1					
ANR	214566	PrimaryExpression	0		214321	1					
ANR	214567	CompoundStatement		24:4:1285:1336	214321	1					
ANR	214568	IdentifierDeclStatement	int parent_num = OBJ_PROP_TO_NUM ( parent_info -> offset ) ;	623:4:22206:22259	214321	0	True				
ANR	214569	IdentifierDecl	parent_num = OBJ_PROP_TO_NUM ( parent_info -> offset )		214321	0					
ANR	214570	IdentifierDeclType	int		214321	0					
ANR	214571	Identifier	parent_num		214321	1					
ANR	214572	AssignmentExpression	parent_num = OBJ_PROP_TO_NUM ( parent_info -> offset )		214321	2		=			
ANR	214573	Identifier	parent_num		214321	0					
ANR	214574	CallExpression	OBJ_PROP_TO_NUM ( parent_info -> offset )		214321	1					
ANR	214575	Callee	OBJ_PROP_TO_NUM		214321	0					
ANR	214576	Identifier	OBJ_PROP_TO_NUM		214321	0					
ANR	214577	ArgumentList	parent_info -> offset		214321	1					
ANR	214578	Argument	parent_info -> offset		214321	0					
ANR	214579	PtrMemberAccess	parent_info -> offset		214321	0					
ANR	214580	Identifier	parent_info		214321	0					
ANR	214581	Identifier	offset		214321	1					
ANR	214582	IdentifierDeclStatement	int child_num = OBJ_PROP_TO_NUM ( child_info -> offset ) ;	624:4:22265:22316	214321	1	True				
ANR	214583	IdentifierDecl	child_num = OBJ_PROP_TO_NUM ( child_info -> offset )		214321	0					
ANR	214584	IdentifierDeclType	int		214321	0					
ANR	214585	Identifier	child_num		214321	1					
ANR	214586	AssignmentExpression	child_num = OBJ_PROP_TO_NUM ( child_info -> offset )		214321	2		=			
ANR	214587	Identifier	child_num		214321	0					
ANR	214588	CallExpression	OBJ_PROP_TO_NUM ( child_info -> offset )		214321	1					
ANR	214589	Callee	OBJ_PROP_TO_NUM		214321	0					
ANR	214590	Identifier	OBJ_PROP_TO_NUM		214321	0					
ANR	214591	ArgumentList	child_info -> offset		214321	1					
ANR	214592	Argument	child_info -> offset		214321	0					
ANR	214593	PtrMemberAccess	child_info -> offset		214321	0					
ANR	214594	Identifier	child_info		214321	0					
ANR	214595	Identifier	offset		214321	1					
ANR	214596	ExpressionStatement	zval_ptr_dtor ( & ( ce -> default_properties_table [ parent_num ] ) )	626:4:22323:22381	214321	2	True				
ANR	214597	CallExpression	zval_ptr_dtor ( & ( ce -> default_properties_table [ parent_num ] ) )		214321	0					
ANR	214598	Callee	zval_ptr_dtor		214321	0					
ANR	214599	Identifier	zval_ptr_dtor		214321	0					
ANR	214600	ArgumentList	& ( ce -> default_properties_table [ parent_num ] )		214321	1					
ANR	214601	Argument	& ( ce -> default_properties_table [ parent_num ] )		214321	0					
ANR	214602	UnaryOperationExpression	& ( ce -> default_properties_table [ parent_num ] )		214321	0					
ANR	214603	UnaryOperator	&		214321	0					
ANR	214604	ArrayIndexing	ce -> default_properties_table [ parent_num ]		214321	1					
ANR	214605	PtrMemberAccess	ce -> default_properties_table		214321	0					
ANR	214606	Identifier	ce		214321	0					
ANR	214607	Identifier	default_properties_table		214321	1					
ANR	214608	Identifier	parent_num		214321	1					
ANR	214609	ExpressionStatement	ce -> default_properties_table [ parent_num ] = ce -> default_properties_table [ child_num ]	627:4:22387:22469	214321	3	True				
ANR	214610	AssignmentExpression	ce -> default_properties_table [ parent_num ] = ce -> default_properties_table [ child_num ]		214321	0		=			
ANR	214611	ArrayIndexing	ce -> default_properties_table [ parent_num ]		214321	0					
ANR	214612	PtrMemberAccess	ce -> default_properties_table		214321	0					
ANR	214613	Identifier	ce		214321	0					
ANR	214614	Identifier	default_properties_table		214321	1					
ANR	214615	Identifier	parent_num		214321	1					
ANR	214616	ArrayIndexing	ce -> default_properties_table [ child_num ]		214321	1					
ANR	214617	PtrMemberAccess	ce -> default_properties_table		214321	0					
ANR	214618	Identifier	ce		214321	0					
ANR	214619	Identifier	default_properties_table		214321	1					
ANR	214620	Identifier	child_num		214321	1					
ANR	214621	ExpressionStatement	ZVAL_UNDEF ( & ce -> default_properties_table [ child_num ] )	628:4:22475:22527	214321	4	True				
ANR	214622	CallExpression	ZVAL_UNDEF ( & ce -> default_properties_table [ child_num ] )		214321	0					
ANR	214623	Callee	ZVAL_UNDEF		214321	0					
ANR	214624	Identifier	ZVAL_UNDEF		214321	0					
ANR	214625	ArgumentList	& ce -> default_properties_table [ child_num ]		214321	1					
ANR	214626	Argument	& ce -> default_properties_table [ child_num ]		214321	0					
ANR	214627	UnaryOperationExpression	& ce -> default_properties_table [ child_num ]		214321	0					
ANR	214628	UnaryOperator	&		214321	0					
ANR	214629	ArrayIndexing	ce -> default_properties_table [ child_num ]		214321	1					
ANR	214630	PtrMemberAccess	ce -> default_properties_table		214321	0					
ANR	214631	Identifier	ce		214321	0					
ANR	214632	Identifier	default_properties_table		214321	1					
ANR	214633	Identifier	child_num		214321	1					
ANR	214634	ExpressionStatement	child_info -> offset = parent_info -> offset	629:4:22533:22573	214321	5	True				
ANR	214635	AssignmentExpression	child_info -> offset = parent_info -> offset		214321	0		=			
ANR	214636	PtrMemberAccess	child_info -> offset		214321	0					
ANR	214637	Identifier	child_info		214321	0					
ANR	214638	Identifier	offset		214321	1					
ANR	214639	PtrMemberAccess	parent_info -> offset		214321	1					
ANR	214640	Identifier	parent_info		214321	0					
ANR	214641	Identifier	offset		214321	1					
ANR	214642	ElseStatement	else		214321	0					
ANR	214643	CompoundStatement		32:8:1612:1612	214321	0					
ANR	214644	IfStatement	if ( UNEXPECTED ( parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW ) ) )		214321	0					
ANR	214645	Condition	UNEXPECTED ( parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW ) )	633:6:22600:22666	214321	0	True				
ANR	214646	CallExpression	UNEXPECTED ( parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW ) )		214321	0					
ANR	214647	Callee	UNEXPECTED		214321	0					
ANR	214648	Identifier	UNEXPECTED		214321	0					
ANR	214649	ArgumentList	parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW )		214321	1					
ANR	214650	Argument	parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW )		214321	0					
ANR	214651	BitAndExpression	parent_info -> flags & ( ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW )		214321	0		&			
ANR	214652	PtrMemberAccess	parent_info -> flags		214321	0					
ANR	214653	Identifier	parent_info		214321	0					
ANR	214654	Identifier	flags		214321	1					
ANR	214655	InclusiveOrExpression	ZEND_ACC_PRIVATE | ZEND_ACC_SHADOW		214321	1		|			
ANR	214656	Identifier	ZEND_ACC_PRIVATE		214321	0					
ANR	214657	Identifier	ZEND_ACC_SHADOW		214321	1					
ANR	214658	CompoundStatement		33:75:1689:1689	214321	1					
ANR	214659	IfStatement	if ( UNEXPECTED ( ce -> type & ZEND_INTERNAL_CLASS ) )		214321	0					
ANR	214660	Condition	UNEXPECTED ( ce -> type & ZEND_INTERNAL_CLASS )	634:7:22678:22719	214321	0	True				
ANR	214661	CallExpression	UNEXPECTED ( ce -> type & ZEND_INTERNAL_CLASS )		214321	0					
ANR	214662	Callee	UNEXPECTED		214321	0					
ANR	214663	Identifier	UNEXPECTED		214321	0					
ANR	214664	ArgumentList	ce -> type & ZEND_INTERNAL_CLASS		214321	1					
ANR	214665	Argument	ce -> type & ZEND_INTERNAL_CLASS		214321	0					
ANR	214666	BitAndExpression	ce -> type & ZEND_INTERNAL_CLASS		214321	0		&			
ANR	214667	PtrMemberAccess	ce -> type		214321	0					
ANR	214668	Identifier	ce		214321	0					
ANR	214669	Identifier	type		214321	1					
ANR	214670	Identifier	ZEND_INTERNAL_CLASS		214321	1					
ANR	214671	CompoundStatement		34:51:1742:1742	214321	1					
ANR	214672	ExpressionStatement	child_info = zend_duplicate_property_info_internal ( parent_info )	635:4:22728:22791	214321	0	True				
ANR	214673	AssignmentExpression	child_info = zend_duplicate_property_info_internal ( parent_info )		214321	0		=			
ANR	214674	Identifier	child_info		214321	0					
ANR	214675	CallExpression	zend_duplicate_property_info_internal ( parent_info )		214321	1					
ANR	214676	Callee	zend_duplicate_property_info_internal		214321	0					
ANR	214677	Identifier	zend_duplicate_property_info_internal		214321	0					
ANR	214678	ArgumentList	parent_info		214321	1					
ANR	214679	Argument	parent_info		214321	0					
ANR	214680	Identifier	parent_info		214321	0					
ANR	214681	ElseStatement	else		214321	0					
ANR	214682	CompoundStatement		36:10:1823:1823	214321	0					
ANR	214683	ExpressionStatement	child_info = zend_duplicate_property_info ( parent_info )	637:4:22809:22863	214321	0	True				
ANR	214684	AssignmentExpression	child_info = zend_duplicate_property_info ( parent_info )		214321	0		=			
ANR	214685	Identifier	child_info		214321	0					
ANR	214686	CallExpression	zend_duplicate_property_info ( parent_info )		214321	1					
ANR	214687	Callee	zend_duplicate_property_info		214321	0					
ANR	214688	Identifier	zend_duplicate_property_info		214321	0					
ANR	214689	ArgumentList	parent_info		214321	1					
ANR	214690	Argument	parent_info		214321	0					
ANR	214691	Identifier	parent_info		214321	0					
ANR	214692	ExpressionStatement	child_info -> flags &= ~ZEND_ACC_PRIVATE	639:3:22873:22911	214321	1	True				
ANR	214693	AssignmentExpression	child_info -> flags &= ~ZEND_ACC_PRIVATE		214321	0		&=			
ANR	214694	PtrMemberAccess	child_info -> flags		214321	0					
ANR	214695	Identifier	child_info		214321	0					
ANR	214696	Identifier	flags		214321	1					
ANR	214697	Identifier	~ZEND_ACC_PRIVATE		214321	1					
ANR	214698	ExpressionStatement	child_info -> flags |= ZEND_ACC_SHADOW	640:3:22947:22983	214321	2	True				
ANR	214699	AssignmentExpression	child_info -> flags |= ZEND_ACC_SHADOW		214321	0		|=			
ANR	214700	PtrMemberAccess	child_info -> flags		214321	0					
ANR	214701	Identifier	child_info		214321	0					
ANR	214702	Identifier	flags		214321	1					
ANR	214703	Identifier	ZEND_ACC_SHADOW		214321	1					
ANR	214704	ElseStatement	else		214321	0					
ANR	214705	CompoundStatement		41:9:2049:2049	214321	0					
ANR	214706	IfStatement	if ( UNEXPECTED ( ce -> type & ZEND_INTERNAL_CLASS ) )		214321	0					
ANR	214707	Condition	UNEXPECTED ( ce -> type & ZEND_INTERNAL_CLASS )	642:7:23038:23079	214321	0	True				
ANR	214708	CallExpression	UNEXPECTED ( ce -> type & ZEND_INTERNAL_CLASS )		214321	0					
ANR	214709	Callee	UNEXPECTED		214321	0					
ANR	214710	Identifier	UNEXPECTED		214321	0					
ANR	214711	ArgumentList	ce -> type & ZEND_INTERNAL_CLASS		214321	1					
ANR	214712	Argument	ce -> type & ZEND_INTERNAL_CLASS		214321	0					
ANR	214713	BitAndExpression	ce -> type & ZEND_INTERNAL_CLASS		214321	0		&			
ANR	214714	PtrMemberAccess	ce -> type		214321	0					
ANR	214715	Identifier	ce		214321	0					
ANR	214716	Identifier	type		214321	1					
ANR	214717	Identifier	ZEND_INTERNAL_CLASS		214321	1					
ANR	214718	CompoundStatement		42:51:2102:2102	214321	1					
ANR	214719	ExpressionStatement	child_info = zend_duplicate_property_info_internal ( parent_info )	643:4:23088:23151	214321	0	True				
ANR	214720	AssignmentExpression	child_info = zend_duplicate_property_info_internal ( parent_info )		214321	0		=			
ANR	214721	Identifier	child_info		214321	0					
ANR	214722	CallExpression	zend_duplicate_property_info_internal ( parent_info )		214321	1					
ANR	214723	Callee	zend_duplicate_property_info_internal		214321	0					
ANR	214724	Identifier	zend_duplicate_property_info_internal		214321	0					
ANR	214725	ArgumentList	parent_info		214321	1					
ANR	214726	Argument	parent_info		214321	0					
ANR	214727	Identifier	parent_info		214321	0					
ANR	214728	ElseStatement	else		214321	0					
ANR	214729	CompoundStatement		44:10:2183:2183	214321	0					
ANR	214730	ExpressionStatement	child_info = parent_info	645:4:23169:23193	214321	0	True				
ANR	214731	AssignmentExpression	child_info = parent_info		214321	0		=			
ANR	214732	Identifier	child_info		214321	0					
ANR	214733	Identifier	parent_info		214321	1					
ANR	214734	ExpressionStatement	"_zend_hash_append_ptr ( & ce -> properties_info , key , child_info )"	648:2:23206:23266	214321	1	True				
ANR	214735	CallExpression	"_zend_hash_append_ptr ( & ce -> properties_info , key , child_info )"		214321	0					
ANR	214736	Callee	_zend_hash_append_ptr		214321	0					
ANR	214737	Identifier	_zend_hash_append_ptr		214321	0					
ANR	214738	ArgumentList	& ce -> properties_info		214321	1					
ANR	214739	Argument	& ce -> properties_info		214321	0					
ANR	214740	UnaryOperationExpression	& ce -> properties_info		214321	0					
ANR	214741	UnaryOperator	&		214321	0					
ANR	214742	PtrMemberAccess	ce -> properties_info		214321	1					
ANR	214743	Identifier	ce		214321	0					
ANR	214744	Identifier	properties_info		214321	1					
ANR	214745	Argument	key		214321	1					
ANR	214746	Identifier	key		214321	0					
ANR	214747	Argument	child_info		214321	2					
ANR	214748	Identifier	child_info		214321	0					
ANR	214749	ReturnType	static void		214321	1					
ANR	214750	Identifier	do_inherit_property		214321	2					
ANR	214751	ParameterList	"zend_property_info * parent_info , zend_string * key , zend_class_entry * ce"		214321	3					
ANR	214752	Parameter	zend_property_info * parent_info	600:32:20896:20926	214321	0	True				
ANR	214753	ParameterType	zend_property_info *		214321	0					
ANR	214754	Identifier	parent_info		214321	1					
ANR	214755	Parameter	zend_string * key	600:65:20929:20944	214321	1	True				
ANR	214756	ParameterType	zend_string *		214321	0					
ANR	214757	Identifier	key		214321	1					
ANR	214758	Parameter	zend_class_entry * ce	600:83:20947:20966	214321	2	True				
ANR	214759	ParameterType	zend_class_entry *		214321	0					
ANR	214760	Identifier	ce		214321	1					
ANR	214761	CFGEntryNode	ENTRY		214321		True				
ANR	214762	CFGExitNode	EXIT		214321		True				
ANR	214763	Symbol	ce -> type		214321						
ANR	214764	Symbol	ZEND_ACC_PPP_MASK		214321						
ANR	214765	Symbol	parent_info -> offset		214321						
ANR	214766	Symbol	ZEND_ACC_PUBLIC		214321						
ANR	214767	Symbol	~ZEND_ACC_PRIVATE		214321						
ANR	214768	Symbol	E_COMPILE_ERROR		214321						
ANR	214769	Symbol	ZEND_ACC_CHANGED		214321						
ANR	214770	Symbol	* ce		214321						
ANR	214771	Symbol	* * ce		214321						
ANR	214772	Symbol	zend_visibility_string		214321						
ANR	214773	Symbol	* parent_num		214321						
ANR	214774	Symbol	UNEXPECTED		214321						
ANR	214775	Symbol	zend_hash_find		214321						
ANR	214776	Symbol	* ce -> parent		214321						
ANR	214777	Symbol	child_info -> offset		214321						
ANR	214778	Symbol	ZEND_ACC_SHADOW		214321						
ANR	214779	Symbol	ZEND_ACC_STATIC		214321						
ANR	214780	Symbol	* child_info		214321						
ANR	214781	Symbol	ce -> name		214321						
ANR	214782	Symbol	* parent_info		214321						
ANR	214783	Symbol	child_info -> flags		214321						
ANR	214784	Symbol	parent_info		214321						
ANR	214785	Symbol	key		214321						
ANR	214786	Symbol	parent_num		214321						
ANR	214787	Symbol	ZEND_INTERNAL_CLASS		214321						
ANR	214788	Symbol	Z_PTR_P		214321						
ANR	214789	Symbol	OBJ_PROP_TO_NUM		214321						
ANR	214790	Symbol	* child_num		214321						
ANR	214791	Symbol	ce		214321						
ANR	214792	Symbol	ce -> parent		214321						
ANR	214793	Symbol	ce -> parent -> name		214321						
ANR	214794	Symbol	ce -> default_properties_table		214321						
ANR	214795	Symbol	parent_info -> flags		214321						
ANR	214796	Symbol	ZEND_ACC_PRIVATE		214321						
ANR	214797	Symbol	ZSTR_VAL		214321						
ANR	214798	Symbol	zend_duplicate_property_info		214321						
ANR	214799	Symbol	child_info		214321						
ANR	214800	Symbol	& ce -> properties_info		214321						
ANR	214801	Symbol	child_num		214321						
ANR	214802	Symbol	* ce -> default_properties_table		214321						
ANR	214803	Symbol	zend_duplicate_property_info_internal		214321						
ANR	214804	Symbol	child		214321						
ANR	214805	Function	do_implement_interface	653:0:23284:23781							
ANR	214806	FunctionDef	"do_implement_interface (zend_class_entry * ce , zend_class_entry * iface)"		214805	0					
ANR	214807	CompoundStatement		654:0:23383:23781	214805	0					
ANR	214808	IfStatement	"if ( ! ( ce -> ce_flags & ZEND_ACC_INTERFACE ) && iface -> interface_gets_implemented && iface -> interface_gets_implemented ( iface , ce ) == FAILURE )"		214805	0					
ANR	214809	Condition	"! ( ce -> ce_flags & ZEND_ACC_INTERFACE ) && iface -> interface_gets_implemented && iface -> interface_gets_implemented ( iface , ce ) == FAILURE"	655:5:23390:23521	214805	0	True				
ANR	214810	AndExpression	"! ( ce -> ce_flags & ZEND_ACC_INTERFACE ) && iface -> interface_gets_implemented && iface -> interface_gets_implemented ( iface , ce ) == FAILURE"		214805	0		&&			
ANR	214811	UnaryOperationExpression	! ( ce -> ce_flags & ZEND_ACC_INTERFACE )		214805	0					
ANR	214812	UnaryOperator	!		214805	0					
ANR	214813	BitAndExpression	ce -> ce_flags & ZEND_ACC_INTERFACE		214805	1		&			
ANR	214814	PtrMemberAccess	ce -> ce_flags		214805	0					
ANR	214815	Identifier	ce		214805	0					
ANR	214816	Identifier	ce_flags		214805	1					
ANR	214817	Identifier	ZEND_ACC_INTERFACE		214805	1					
ANR	214818	AndExpression	"iface -> interface_gets_implemented && iface -> interface_gets_implemented ( iface , ce ) == FAILURE"		214805	1		&&			
ANR	214819	PtrMemberAccess	iface -> interface_gets_implemented		214805	0					
ANR	214820	Identifier	iface		214805	0					
ANR	214821	Identifier	interface_gets_implemented		214805	1					
ANR	214822	EqualityExpression	"iface -> interface_gets_implemented ( iface , ce ) == FAILURE"		214805	1		==			
ANR	214823	CallExpression	"iface -> interface_gets_implemented ( iface , ce )"		214805	0					
ANR	214824	Callee	iface -> interface_gets_implemented		214805	0					
ANR	214825	PtrMemberAccess	iface -> interface_gets_implemented		214805	0					
ANR	214826	Identifier	iface		214805	0					
ANR	214827	Identifier	interface_gets_implemented		214805	1					
ANR	214828	ArgumentList	iface		214805	1					
ANR	214829	Argument	iface		214805	0					
ANR	214830	Identifier	iface		214805	0					
ANR	214831	Argument	ce		214805	1					
ANR	214832	Identifier	ce		214805	0					
ANR	214833	Identifier	FAILURE		214805	1					
ANR	214834	CompoundStatement		2:139:140:140	214805	1					
ANR	214835	ExpressionStatement	"zend_error_noreturn ( E_CORE_ERROR , ""Class %s could not implement interface %s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( iface -> name ) )"	656:2:23528:23649	214805	0	True				
ANR	214836	CallExpression	"zend_error_noreturn ( E_CORE_ERROR , ""Class %s could not implement interface %s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( iface -> name ) )"		214805	0					
ANR	214837	Callee	zend_error_noreturn		214805	0					
ANR	214838	Identifier	zend_error_noreturn		214805	0					
ANR	214839	ArgumentList	E_CORE_ERROR		214805	1					
ANR	214840	Argument	E_CORE_ERROR		214805	0					
ANR	214841	Identifier	E_CORE_ERROR		214805	0					
ANR	214842	Argument	"""Class %s could not implement interface %s"""		214805	1					
ANR	214843	PrimaryExpression	"""Class %s could not implement interface %s"""		214805	0					
ANR	214844	Argument	ZSTR_VAL ( ce -> name )		214805	2					
ANR	214845	CallExpression	ZSTR_VAL ( ce -> name )		214805	0					
ANR	214846	Callee	ZSTR_VAL		214805	0					
ANR	214847	Identifier	ZSTR_VAL		214805	0					
ANR	214848	ArgumentList	ce -> name		214805	1					
ANR	214849	Argument	ce -> name		214805	0					
ANR	214850	PtrMemberAccess	ce -> name		214805	0					
ANR	214851	Identifier	ce		214805	0					
ANR	214852	Identifier	name		214805	1					
ANR	214853	Argument	ZSTR_VAL ( iface -> name )		214805	3					
ANR	214854	CallExpression	ZSTR_VAL ( iface -> name )		214805	0					
ANR	214855	Callee	ZSTR_VAL		214805	0					
ANR	214856	Identifier	ZSTR_VAL		214805	0					
ANR	214857	ArgumentList	iface -> name		214805	1					
ANR	214858	Argument	iface -> name		214805	0					
ANR	214859	PtrMemberAccess	iface -> name		214805	0					
ANR	214860	Identifier	iface		214805	0					
ANR	214861	Identifier	name		214805	1					
ANR	214862	IfStatement	if ( UNEXPECTED ( ce == iface ) )		214805	1					
ANR	214863	Condition	UNEXPECTED ( ce == iface )	658:5:23659:23681	214805	0	True				
ANR	214864	CallExpression	UNEXPECTED ( ce == iface )		214805	0					
ANR	214865	Callee	UNEXPECTED		214805	0					
ANR	214866	Identifier	UNEXPECTED		214805	0					
ANR	214867	ArgumentList	ce == iface		214805	1					
ANR	214868	Argument	ce == iface		214805	0					
ANR	214869	EqualityExpression	ce == iface		214805	0		==			
ANR	214870	Identifier	ce		214805	0					
ANR	214871	Identifier	iface		214805	1					
ANR	214872	CompoundStatement		5:30:300:300	214805	1					
ANR	214873	ExpressionStatement	"zend_error_noreturn ( E_ERROR , ""Interface %s cannot implement itself"" , ZSTR_VAL ( ce -> name ) )"	659:2:23688:23776	214805	0	True				
ANR	214874	CallExpression	"zend_error_noreturn ( E_ERROR , ""Interface %s cannot implement itself"" , ZSTR_VAL ( ce -> name ) )"		214805	0					
ANR	214875	Callee	zend_error_noreturn		214805	0					
ANR	214876	Identifier	zend_error_noreturn		214805	0					
ANR	214877	ArgumentList	E_ERROR		214805	1					
ANR	214878	Argument	E_ERROR		214805	0					
ANR	214879	Identifier	E_ERROR		214805	0					
ANR	214880	Argument	"""Interface %s cannot implement itself"""		214805	1					
ANR	214881	PrimaryExpression	"""Interface %s cannot implement itself"""		214805	0					
ANR	214882	Argument	ZSTR_VAL ( ce -> name )		214805	2					
ANR	214883	CallExpression	ZSTR_VAL ( ce -> name )		214805	0					
ANR	214884	Callee	ZSTR_VAL		214805	0					
ANR	214885	Identifier	ZSTR_VAL		214805	0					
ANR	214886	ArgumentList	ce -> name		214805	1					
ANR	214887	Argument	ce -> name		214805	0					
ANR	214888	PtrMemberAccess	ce -> name		214805	0					
ANR	214889	Identifier	ce		214805	0					
ANR	214890	Identifier	name		214805	1					
ANR	214891	ReturnType	static inline void		214805	1					
ANR	214892	Identifier	do_implement_interface		214805	2					
ANR	214893	ParameterList	"zend_class_entry * ce , zend_class_entry * iface"		214805	3					
ANR	214894	Parameter	zend_class_entry * ce	653:42:23326:23345	214805	0	True				
ANR	214895	ParameterType	zend_class_entry *		214805	0					
ANR	214896	Identifier	ce		214805	1					
ANR	214897	Parameter	zend_class_entry * iface	653:64:23348:23370	214805	1	True				
ANR	214898	ParameterType	zend_class_entry *		214805	0					
ANR	214899	Identifier	iface		214805	1					
ANR	214900	CFGEntryNode	ENTRY		214805		True				
ANR	214901	CFGExitNode	EXIT		214805		True				
ANR	214902	Symbol	ce		214805						
ANR	214903	Symbol	* iface		214805						
ANR	214904	Symbol	* ce		214805						
ANR	214905	Symbol	FAILURE		214805						
ANR	214906	Symbol	ZSTR_VAL		214805						
ANR	214907	Symbol	ce -> ce_flags		214805						
ANR	214908	Symbol	UNEXPECTED		214805						
ANR	214909	Symbol	iface		214805						
ANR	214910	Symbol	iface -> interface_gets_implemented		214805						
ANR	214911	Symbol	E_ERROR		214805						
ANR	214912	Symbol	iface -> name		214805						
ANR	214913	Symbol	E_CORE_ERROR		214805						
ANR	214914	Symbol	ZEND_ACC_INTERFACE		214805						
ANR	214915	Symbol	ce -> name		214805						
ANR	214916	Function	zend_do_inherit_interfaces	664:0:23794:24848							
ANR	214917	FunctionDef	"zend_do_inherit_interfaces (zend_class_entry * ce , const zend_class_entry * iface)"		214916	0					
ANR	214918	CompoundStatement		665:0:23898:24848	214916	0					
ANR	214919	IdentifierDeclStatement	"uint32_t i , ce_num , if_num = iface -> num_interfaces ;"	667:1:23973:24023	214916	0	True				
ANR	214920	IdentifierDecl	i		214916	0					
ANR	214921	IdentifierDeclType	uint32_t		214916	0					
ANR	214922	Identifier	i		214916	1					
ANR	214923	IdentifierDecl	ce_num		214916	1					
ANR	214924	IdentifierDeclType	uint32_t		214916	0					
ANR	214925	Identifier	ce_num		214916	1					
ANR	214926	IdentifierDecl	if_num = iface -> num_interfaces		214916	2					
ANR	214927	IdentifierDeclType	uint32_t		214916	0					
ANR	214928	Identifier	if_num		214916	1					
ANR	214929	AssignmentExpression	if_num = iface -> num_interfaces		214916	2		=			
ANR	214930	Identifier	if_num		214916	0					
ANR	214931	PtrMemberAccess	iface -> num_interfaces		214916	1					
ANR	214932	Identifier	iface		214916	0					
ANR	214933	Identifier	num_interfaces		214916	1					
ANR	214934	IdentifierDeclStatement	zend_class_entry * entry ;	668:1:24026:24049	214916	1	True				
ANR	214935	IdentifierDecl	* entry		214916	0					
ANR	214936	IdentifierDeclType	zend_class_entry *		214916	0					
ANR	214937	Identifier	entry		214916	1					
ANR	214938	IfStatement	if ( if_num == 0 )		214916	2					
ANR	214939	Condition	if_num == 0	670:5:24057:24065	214916	0	True				
ANR	214940	EqualityExpression	if_num == 0		214916	0		==			
ANR	214941	Identifier	if_num		214916	0					
ANR	214942	PrimaryExpression	0		214916	1					
ANR	214943	CompoundStatement		6:16:169:169	214916	1					
ANR	214944	ReturnStatement	return ;	671:2:24072:24078	214916	0	True				
ANR	214945	ExpressionStatement	ce_num = ce -> num_interfaces	673:1:24084:24111	214916	3	True				
ANR	214946	AssignmentExpression	ce_num = ce -> num_interfaces		214916	0		=			
ANR	214947	Identifier	ce_num		214916	0					
ANR	214948	PtrMemberAccess	ce -> num_interfaces		214916	1					
ANR	214949	Identifier	ce		214916	0					
ANR	214950	Identifier	num_interfaces		214916	1					
ANR	214951	IfStatement	if ( ce -> type == ZEND_INTERNAL_CLASS )		214916	4					
ANR	214952	Condition	ce -> type == ZEND_INTERNAL_CLASS	675:5:24119:24149	214916	0	True				
ANR	214953	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		214916	0		==			
ANR	214954	PtrMemberAccess	ce -> type		214916	0					
ANR	214955	Identifier	ce		214916	0					
ANR	214956	Identifier	type		214916	1					
ANR	214957	Identifier	ZEND_INTERNAL_CLASS		214916	1					
ANR	214958	CompoundStatement		11:38:253:253	214916	1					
ANR	214959	ExpressionStatement	"ce -> interfaces = ( zend_class_entry * * ) realloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ce_num + if_num ) )"	676:2:24156:24266	214916	0	True				
ANR	214960	AssignmentExpression	"ce -> interfaces = ( zend_class_entry * * ) realloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ce_num + if_num ) )"		214916	0		=			
ANR	214961	PtrMemberAccess	ce -> interfaces		214916	0					
ANR	214962	Identifier	ce		214916	0					
ANR	214963	Identifier	interfaces		214916	1					
ANR	214964	CastExpression	"( zend_class_entry * * ) realloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ce_num + if_num ) )"		214916	1					
ANR	214965	CastTarget	zend_class_entry * *		214916	0					
ANR	214966	CallExpression	"realloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ce_num + if_num ) )"		214916	1					
ANR	214967	Callee	realloc		214916	0					
ANR	214968	Identifier	realloc		214916	0					
ANR	214969	ArgumentList	ce -> interfaces		214916	1					
ANR	214970	Argument	ce -> interfaces		214916	0					
ANR	214971	PtrMemberAccess	ce -> interfaces		214916	0					
ANR	214972	Identifier	ce		214916	0					
ANR	214973	Identifier	interfaces		214916	1					
ANR	214974	Argument	sizeof ( zend_class_entry * ) * ( ce_num + if_num )		214916	1					
ANR	214975	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ( ce_num + if_num )		214916	0		*			
ANR	214976	SizeofExpression	sizeof ( zend_class_entry * )		214916	0					
ANR	214977	Sizeof	sizeof		214916	0					
ANR	214978	SizeofOperand	zend_class_entry *		214916	1					
ANR	214979	AdditiveExpression	ce_num + if_num		214916	1		+			
ANR	214980	Identifier	ce_num		214916	0					
ANR	214981	Identifier	if_num		214916	1					
ANR	214982	ElseStatement	else		214916	0					
ANR	214983	CompoundStatement		13:8:377:377	214916	0					
ANR	214984	ExpressionStatement	"ce -> interfaces = ( zend_class_entry * * ) erealloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ce_num + if_num ) )"	678:2:24280:24391	214916	0	True				
ANR	214985	AssignmentExpression	"ce -> interfaces = ( zend_class_entry * * ) erealloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ce_num + if_num ) )"		214916	0		=			
ANR	214986	PtrMemberAccess	ce -> interfaces		214916	0					
ANR	214987	Identifier	ce		214916	0					
ANR	214988	Identifier	interfaces		214916	1					
ANR	214989	CastExpression	"( zend_class_entry * * ) erealloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ce_num + if_num ) )"		214916	1					
ANR	214990	CastTarget	zend_class_entry * *		214916	0					
ANR	214991	CallExpression	"erealloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ce_num + if_num ) )"		214916	1					
ANR	214992	Callee	erealloc		214916	0					
ANR	214993	Identifier	erealloc		214916	0					
ANR	214994	ArgumentList	ce -> interfaces		214916	1					
ANR	214995	Argument	ce -> interfaces		214916	0					
ANR	214996	PtrMemberAccess	ce -> interfaces		214916	0					
ANR	214997	Identifier	ce		214916	0					
ANR	214998	Identifier	interfaces		214916	1					
ANR	214999	Argument	sizeof ( zend_class_entry * ) * ( ce_num + if_num )		214916	1					
ANR	215000	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ( ce_num + if_num )		214916	0		*			
ANR	215001	SizeofExpression	sizeof ( zend_class_entry * )		214916	0					
ANR	215002	Sizeof	sizeof		214916	0					
ANR	215003	SizeofOperand	zend_class_entry *		214916	1					
ANR	215004	AdditiveExpression	ce_num + if_num		214916	1		+			
ANR	215005	Identifier	ce_num		214916	0					
ANR	215006	Identifier	if_num		214916	1					
ANR	215007	WhileStatement	while ( if_num -- )		214916	5					
ANR	215008	Condition	if_num --	682:8:24487:24494	214916	0	True				
ANR	215009	PostIncDecOperationExpression	if_num --		214916	0					
ANR	215010	Identifier	if_num		214916	0					
ANR	215011	IncDec	--		214916	1					
ANR	215012	CompoundStatement		18:18:598:598	214916	1					
ANR	215013	ExpressionStatement	entry = iface -> interfaces [ if_num ]	683:2:24501:24534	214916	0	True				
ANR	215014	AssignmentExpression	entry = iface -> interfaces [ if_num ]		214916	0		=			
ANR	215015	Identifier	entry		214916	0					
ANR	215016	ArrayIndexing	iface -> interfaces [ if_num ]		214916	1					
ANR	215017	PtrMemberAccess	iface -> interfaces		214916	0					
ANR	215018	Identifier	iface		214916	0					
ANR	215019	Identifier	interfaces		214916	1					
ANR	215020	Identifier	if_num		214916	1					
ANR	215021	ForStatement	for ( i = 0 ; i < ce_num ; i ++ )		214916	1					
ANR	215022	ForInit	i = 0 ;	684:7:24543:24548	214916	0	True				
ANR	215023	AssignmentExpression	i = 0		214916	0		=			
ANR	215024	Identifier	i		214916	0					
ANR	215025	PrimaryExpression	0		214916	1					
ANR	215026	Condition	i < ce_num	684:14:24550:24559	214916	1	True				
ANR	215027	RelationalExpression	i < ce_num		214916	0		<			
ANR	215028	Identifier	i		214916	0					
ANR	215029	Identifier	ce_num		214916	1					
ANR	215030	PostIncDecOperationExpression	i ++	684:26:24562:24564	214916	2	True				
ANR	215031	Identifier	i		214916	0					
ANR	215032	IncDec	++		214916	1					
ANR	215033	CompoundStatement		20:31:668:668	214916	3					
ANR	215034	IfStatement	if ( ce -> interfaces [ i ] == entry )		214916	0					
ANR	215035	Condition	ce -> interfaces [ i ] == entry	685:7:24576:24601	214916	0	True				
ANR	215036	EqualityExpression	ce -> interfaces [ i ] == entry		214916	0		==			
ANR	215037	ArrayIndexing	ce -> interfaces [ i ]		214916	0					
ANR	215038	PtrMemberAccess	ce -> interfaces		214916	0					
ANR	215039	Identifier	ce		214916	0					
ANR	215040	Identifier	interfaces		214916	1					
ANR	215041	Identifier	i		214916	1					
ANR	215042	Identifier	entry		214916	1					
ANR	215043	CompoundStatement		21:35:705:705	214916	1					
ANR	215044	BreakStatement	break ;	686:4:24610:24615	214916	0	True				
ANR	215045	IfStatement	if ( i == ce_num )		214916	2					
ANR	215046	Condition	i == ce_num	689:6:24632:24642	214916	0	True				
ANR	215047	EqualityExpression	i == ce_num		214916	0		==			
ANR	215048	Identifier	i		214916	0					
ANR	215049	Identifier	ce_num		214916	1					
ANR	215050	CompoundStatement		25:19:746:746	214916	1					
ANR	215051	ExpressionStatement	ce -> interfaces [ ce -> num_interfaces ++ ] = entry	690:3:24650:24694	214916	0	True				
ANR	215052	AssignmentExpression	ce -> interfaces [ ce -> num_interfaces ++ ] = entry		214916	0		=			
ANR	215053	ArrayIndexing	ce -> interfaces [ ce -> num_interfaces ++ ]		214916	0					
ANR	215054	PtrMemberAccess	ce -> interfaces		214916	0					
ANR	215055	Identifier	ce		214916	0					
ANR	215056	Identifier	interfaces		214916	1					
ANR	215057	PostIncDecOperationExpression	ce -> num_interfaces ++		214916	1					
ANR	215058	PtrMemberAccess	ce -> num_interfaces		214916	0					
ANR	215059	Identifier	ce		214916	0					
ANR	215060	Identifier	num_interfaces		214916	1					
ANR	215061	IncDec	++		214916	1					
ANR	215062	Identifier	entry		214916	1					
ANR	215063	WhileStatement	while ( ce_num < ce -> num_interfaces )		214916	6					
ANR	215064	Condition	ce_num < ce -> num_interfaces	695:8:24758:24784	214916	0	True				
ANR	215065	RelationalExpression	ce_num < ce -> num_interfaces		214916	0		<			
ANR	215066	Identifier	ce_num		214916	0					
ANR	215067	PtrMemberAccess	ce -> num_interfaces		214916	1					
ANR	215068	Identifier	ce		214916	0					
ANR	215069	Identifier	num_interfaces		214916	1					
ANR	215070	CompoundStatement		31:37:888:888	214916	1					
ANR	215071	ExpressionStatement	"do_implement_interface ( ce , ce -> interfaces [ ce_num ++ ] )"	696:2:24791:24843	214916	0	True				
ANR	215072	CallExpression	"do_implement_interface ( ce , ce -> interfaces [ ce_num ++ ] )"		214916	0					
ANR	215073	Callee	do_implement_interface		214916	0					
ANR	215074	Identifier	do_implement_interface		214916	0					
ANR	215075	ArgumentList	ce		214916	1					
ANR	215076	Argument	ce		214916	0					
ANR	215077	Identifier	ce		214916	0					
ANR	215078	Argument	ce -> interfaces [ ce_num ++ ]		214916	1					
ANR	215079	ArrayIndexing	ce -> interfaces [ ce_num ++ ]		214916	0					
ANR	215080	PtrMemberAccess	ce -> interfaces		214916	0					
ANR	215081	Identifier	ce		214916	0					
ANR	215082	Identifier	interfaces		214916	1					
ANR	215083	PostIncDecOperationExpression	ce_num ++		214916	1					
ANR	215084	Identifier	ce_num		214916	0					
ANR	215085	IncDec	++		214916	1					
ANR	215086	ReturnType	ZEND_API void		214916	1					
ANR	215087	Identifier	zend_do_inherit_interfaces		214916	2					
ANR	215088	ParameterList	"zend_class_entry * ce , const zend_class_entry * iface"		214916	3					
ANR	215089	Parameter	zend_class_entry * ce	664:41:23835:23854	214916	0	True				
ANR	215090	ParameterType	zend_class_entry *		214916	0					
ANR	215091	Identifier	ce		214916	1					
ANR	215092	Parameter	const zend_class_entry * iface	664:63:23857:23885	214916	1	True				
ANR	215093	ParameterType	const zend_class_entry *		214916	0					
ANR	215094	Identifier	iface		214916	1					
ANR	215095	CFGEntryNode	ENTRY		214916		True				
ANR	215096	CFGExitNode	EXIT		214916		True				
ANR	215097	Symbol	ZEND_INTERNAL_CLASS		214916						
ANR	215098	Symbol	ce -> type		214916						
ANR	215099	Symbol	iface -> interfaces		214916						
ANR	215100	Symbol	ce		214916						
ANR	215101	Symbol	ce_num		214916						
ANR	215102	Symbol	* * iface		214916						
ANR	215103	Symbol	ce -> interfaces		214916						
ANR	215104	Symbol	* iface		214916						
ANR	215105	Symbol	i		214916						
ANR	215106	Symbol	* ce		214916						
ANR	215107	Symbol	realloc		214916						
ANR	215108	Symbol	* * ce		214916						
ANR	215109	Symbol	iface -> num_interfaces		214916						
ANR	215110	Symbol	iface		214916						
ANR	215111	Symbol	entry		214916						
ANR	215112	Symbol	if_num		214916						
ANR	215113	Symbol	* i		214916						
ANR	215114	Symbol	ce -> num_interfaces		214916						
ANR	215115	Symbol	* if_num		214916						
ANR	215116	Symbol	* iface -> interfaces		214916						
ANR	215117	Symbol	* ce -> interfaces		214916						
ANR	215118	Symbol	erealloc		214916						
ANR	215119	Function	do_inherit_class_constant	701:0:24861:25366							
ANR	215120	FunctionDef	"do_inherit_class_constant (zend_string * name , zval * zv , zend_class_entry * ce , zend_class_entry * parent_ce)"		215119	0					
ANR	215121	CompoundStatement		702:0:24989:25366	215119	0					
ANR	215122	IfStatement	"if ( ! zend_hash_exists ( & ce -> constants_table , name ) )"		215119	0					
ANR	215123	Condition	"! zend_hash_exists ( & ce -> constants_table , name )"	703:5:24996:25040	215119	0	True				
ANR	215124	UnaryOperationExpression	"! zend_hash_exists ( & ce -> constants_table , name )"		215119	0					
ANR	215125	UnaryOperator	!		215119	0					
ANR	215126	CallExpression	"zend_hash_exists ( & ce -> constants_table , name )"		215119	1					
ANR	215127	Callee	zend_hash_exists		215119	0					
ANR	215128	Identifier	zend_hash_exists		215119	0					
ANR	215129	ArgumentList	& ce -> constants_table		215119	1					
ANR	215130	Argument	& ce -> constants_table		215119	0					
ANR	215131	UnaryOperationExpression	& ce -> constants_table		215119	0					
ANR	215132	UnaryOperator	&		215119	0					
ANR	215133	PtrMemberAccess	ce -> constants_table		215119	1					
ANR	215134	Identifier	ce		215119	0					
ANR	215135	Identifier	constants_table		215119	1					
ANR	215136	Argument	name		215119	1					
ANR	215137	Identifier	name		215119	0					
ANR	215138	CompoundStatement		2:52:53:53	215119	1					
ANR	215139	IfStatement	if ( ! Z_ISREF_P ( zv ) )		215119	0					
ANR	215140	Condition	! Z_ISREF_P ( zv )	704:6:25051:25064	215119	0	True				
ANR	215141	UnaryOperationExpression	! Z_ISREF_P ( zv )		215119	0					
ANR	215142	UnaryOperator	!		215119	0					
ANR	215143	CallExpression	Z_ISREF_P ( zv )		215119	1					
ANR	215144	Callee	Z_ISREF_P		215119	0					
ANR	215145	Identifier	Z_ISREF_P		215119	0					
ANR	215146	ArgumentList	zv		215119	1					
ANR	215147	Argument	zv		215119	0					
ANR	215148	Identifier	zv		215119	0					
ANR	215149	CompoundStatement		3:22:77:77	215119	1					
ANR	215150	IfStatement	if ( parent_ce -> type == ZEND_INTERNAL_CLASS )		215119	0					
ANR	215151	Condition	parent_ce -> type == ZEND_INTERNAL_CLASS	705:7:25076:25113	215119	0	True				
ANR	215152	EqualityExpression	parent_ce -> type == ZEND_INTERNAL_CLASS		215119	0		==			
ANR	215153	PtrMemberAccess	parent_ce -> type		215119	0					
ANR	215154	Identifier	parent_ce		215119	0					
ANR	215155	Identifier	type		215119	1					
ANR	215156	Identifier	ZEND_INTERNAL_CLASS		215119	1					
ANR	215157	CompoundStatement		4:47:126:126	215119	1					
ANR	215158	ExpressionStatement	"ZVAL_NEW_PERSISTENT_REF ( zv , zv )"	706:4:25122:25153	215119	0	True				
ANR	215159	CallExpression	"ZVAL_NEW_PERSISTENT_REF ( zv , zv )"		215119	0					
ANR	215160	Callee	ZVAL_NEW_PERSISTENT_REF		215119	0					
ANR	215161	Identifier	ZVAL_NEW_PERSISTENT_REF		215119	0					
ANR	215162	ArgumentList	zv		215119	1					
ANR	215163	Argument	zv		215119	0					
ANR	215164	Identifier	zv		215119	0					
ANR	215165	Argument	zv		215119	1					
ANR	215166	Identifier	zv		215119	0					
ANR	215167	ElseStatement	else		215119	0					
ANR	215168	CompoundStatement		6:10:175:175	215119	0					
ANR	215169	ExpressionStatement	"ZVAL_NEW_REF ( zv , zv )"	708:4:25171:25191	215119	0	True				
ANR	215170	CallExpression	"ZVAL_NEW_REF ( zv , zv )"		215119	0					
ANR	215171	Callee	ZVAL_NEW_REF		215119	0					
ANR	215172	Identifier	ZVAL_NEW_REF		215119	0					
ANR	215173	ArgumentList	zv		215119	1					
ANR	215174	Argument	zv		215119	0					
ANR	215175	Identifier	zv		215119	0					
ANR	215176	Argument	zv		215119	1					
ANR	215177	Identifier	zv		215119	0					
ANR	215178	IfStatement	if ( Z_CONSTANT_P ( Z_REFVAL_P ( zv ) ) )		215119	1					
ANR	215179	Condition	Z_CONSTANT_P ( Z_REFVAL_P ( zv ) )	711:6:25208:25235	215119	0	True				
ANR	215180	CallExpression	Z_CONSTANT_P ( Z_REFVAL_P ( zv ) )		215119	0					
ANR	215181	Callee	Z_CONSTANT_P		215119	0					
ANR	215182	Identifier	Z_CONSTANT_P		215119	0					
ANR	215183	ArgumentList	Z_REFVAL_P ( zv )		215119	1					
ANR	215184	Argument	Z_REFVAL_P ( zv )		215119	0					
ANR	215185	CallExpression	Z_REFVAL_P ( zv )		215119	0					
ANR	215186	Callee	Z_REFVAL_P		215119	0					
ANR	215187	Identifier	Z_REFVAL_P		215119	0					
ANR	215188	ArgumentList	zv		215119	1					
ANR	215189	Argument	zv		215119	0					
ANR	215190	Identifier	zv		215119	0					
ANR	215191	CompoundStatement		10:36:248:248	215119	1					
ANR	215192	ExpressionStatement	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED	712:3:25243:25286	215119	0	True				
ANR	215193	AssignmentExpression	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED		215119	0		&=			
ANR	215194	PtrMemberAccess	ce -> ce_flags		215119	0					
ANR	215195	Identifier	ce		215119	0					
ANR	215196	Identifier	ce_flags		215119	1					
ANR	215197	Identifier	~ZEND_ACC_CONSTANTS_UPDATED		215119	1					
ANR	215198	ExpressionStatement	Z_ADDREF_P ( zv )	714:2:25294:25308	215119	2	True				
ANR	215199	CallExpression	Z_ADDREF_P ( zv )		215119	0					
ANR	215200	Callee	Z_ADDREF_P		215119	0					
ANR	215201	Identifier	Z_ADDREF_P		215119	0					
ANR	215202	ArgumentList	zv		215119	1					
ANR	215203	Argument	zv		215119	0					
ANR	215204	Identifier	zv		215119	0					
ANR	215205	ExpressionStatement	"_zend_hash_append ( & ce -> constants_table , name , zv )"	715:2:25312:25361	215119	3	True				
ANR	215206	CallExpression	"_zend_hash_append ( & ce -> constants_table , name , zv )"		215119	0					
ANR	215207	Callee	_zend_hash_append		215119	0					
ANR	215208	Identifier	_zend_hash_append		215119	0					
ANR	215209	ArgumentList	& ce -> constants_table		215119	1					
ANR	215210	Argument	& ce -> constants_table		215119	0					
ANR	215211	UnaryOperationExpression	& ce -> constants_table		215119	0					
ANR	215212	UnaryOperator	&		215119	0					
ANR	215213	PtrMemberAccess	ce -> constants_table		215119	1					
ANR	215214	Identifier	ce		215119	0					
ANR	215215	Identifier	constants_table		215119	1					
ANR	215216	Argument	name		215119	1					
ANR	215217	Identifier	name		215119	0					
ANR	215218	Argument	zv		215119	2					
ANR	215219	Identifier	zv		215119	0					
ANR	215220	ReturnType	static void		215119	1					
ANR	215221	Identifier	do_inherit_class_constant		215119	2					
ANR	215222	ParameterList	"zend_string * name , zval * zv , zend_class_entry * ce , zend_class_entry * parent_ce"		215119	3					
ANR	215223	Parameter	zend_string * name	701:38:24899:24915	215119	0	True				
ANR	215224	ParameterType	zend_string *		215119	0					
ANR	215225	Identifier	name		215119	1					
ANR	215226	Parameter	zval * zv	701:57:24918:24925	215119	1	True				
ANR	215227	ParameterType	zval *		215119	0					
ANR	215228	Identifier	zv		215119	1					
ANR	215229	Parameter	zend_class_entry * ce	701:67:24928:24947	215119	2	True				
ANR	215230	ParameterType	zend_class_entry *		215119	0					
ANR	215231	Identifier	ce		215119	1					
ANR	215232	Parameter	zend_class_entry * parent_ce	701:89:24950:24976	215119	3	True				
ANR	215233	ParameterType	zend_class_entry *		215119	0					
ANR	215234	Identifier	parent_ce		215119	1					
ANR	215235	CFGEntryNode	ENTRY		215119		True				
ANR	215236	CFGExitNode	EXIT		215119		True				
ANR	215237	Symbol	ZEND_INTERNAL_CLASS		215119						
ANR	215238	Symbol	parent_ce -> type		215119						
ANR	215239	Symbol	ce		215119						
ANR	215240	Symbol	Z_CONSTANT_P		215119						
ANR	215241	Symbol	zend_hash_exists		215119						
ANR	215242	Symbol	* ce		215119						
ANR	215243	Symbol	ce -> ce_flags		215119						
ANR	215244	Symbol	parent_ce		215119						
ANR	215245	Symbol	& ce -> constants_table		215119						
ANR	215246	Symbol	Z_REFVAL_P		215119						
ANR	215247	Symbol	name		215119						
ANR	215248	Symbol	* parent_ce		215119						
ANR	215249	Symbol	zv		215119						
ANR	215250	Symbol	Z_ISREF_P		215119						
ANR	215251	Symbol	~ZEND_ACC_CONSTANTS_UPDATED		215119						
ANR	215252	Function	zend_do_inheritance	720:0:25379:31751							
ANR	215253	FunctionDef	"zend_do_inheritance (zend_class_entry * ce , zend_class_entry * parent_ce)"		215252	0					
ANR	215254	CompoundStatement		721:0:25474:31751	215252	0					
ANR	215255	IdentifierDeclStatement	zend_property_info * property_info ;	722:1:25477:25510	215252	0	True				
ANR	215256	IdentifierDecl	* property_info		215252	0					
ANR	215257	IdentifierDeclType	zend_property_info *		215252	0					
ANR	215258	Identifier	property_info		215252	1					
ANR	215259	IdentifierDeclStatement	zend_function * func ;	723:1:25513:25532	215252	1	True				
ANR	215260	IdentifierDecl	* func		215252	0					
ANR	215261	IdentifierDeclType	zend_function *		215252	0					
ANR	215262	Identifier	func		215252	1					
ANR	215263	IdentifierDeclStatement	zend_string * key ;	724:1:25535:25551	215252	2	True				
ANR	215264	IdentifierDecl	* key		215252	0					
ANR	215265	IdentifierDeclType	zend_string *		215252	0					
ANR	215266	Identifier	key		215252	1					
ANR	215267	IdentifierDeclStatement	zval * zv ;	725:1:25554:25562	215252	3	True				
ANR	215268	IdentifierDecl	* zv		215252	0					
ANR	215269	IdentifierDeclType	zval *		215252	0					
ANR	215270	Identifier	zv		215252	1					
ANR	215271	IfStatement	if ( UNEXPECTED ( ce -> ce_flags & ZEND_ACC_INTERFACE ) )		215252	4					
ANR	215272	Condition	UNEXPECTED ( ce -> ce_flags & ZEND_ACC_INTERFACE )	727:5:25570:25614	215252	0	True				
ANR	215273	CallExpression	UNEXPECTED ( ce -> ce_flags & ZEND_ACC_INTERFACE )		215252	0					
ANR	215274	Callee	UNEXPECTED		215252	0					
ANR	215275	Identifier	UNEXPECTED		215252	0					
ANR	215276	ArgumentList	ce -> ce_flags & ZEND_ACC_INTERFACE		215252	1					
ANR	215277	Argument	ce -> ce_flags & ZEND_ACC_INTERFACE		215252	0					
ANR	215278	BitAndExpression	ce -> ce_flags & ZEND_ACC_INTERFACE		215252	0		&			
ANR	215279	PtrMemberAccess	ce -> ce_flags		215252	0					
ANR	215280	Identifier	ce		215252	0					
ANR	215281	Identifier	ce_flags		215252	1					
ANR	215282	Identifier	ZEND_ACC_INTERFACE		215252	1					
ANR	215283	CompoundStatement		7:52:142:142	215252	1					
ANR	215284	IfStatement	if ( UNEXPECTED ( ! ( parent_ce -> ce_flags & ZEND_ACC_INTERFACE ) ) )		215252	0					
ANR	215285	Condition	UNEXPECTED ( ! ( parent_ce -> ce_flags & ZEND_ACC_INTERFACE ) )	729:6:25677:25731	215252	0	True				
ANR	215286	CallExpression	UNEXPECTED ( ! ( parent_ce -> ce_flags & ZEND_ACC_INTERFACE ) )		215252	0					
ANR	215287	Callee	UNEXPECTED		215252	0					
ANR	215288	Identifier	UNEXPECTED		215252	0					
ANR	215289	ArgumentList	! ( parent_ce -> ce_flags & ZEND_ACC_INTERFACE )		215252	1					
ANR	215290	Argument	! ( parent_ce -> ce_flags & ZEND_ACC_INTERFACE )		215252	0					
ANR	215291	UnaryOperationExpression	! ( parent_ce -> ce_flags & ZEND_ACC_INTERFACE )		215252	0					
ANR	215292	UnaryOperator	!		215252	0					
ANR	215293	BitAndExpression	parent_ce -> ce_flags & ZEND_ACC_INTERFACE		215252	1		&			
ANR	215294	PtrMemberAccess	parent_ce -> ce_flags		215252	0					
ANR	215295	Identifier	parent_ce		215252	0					
ANR	215296	Identifier	ce_flags		215252	1					
ANR	215297	Identifier	ZEND_ACC_INTERFACE		215252	1					
ANR	215298	CompoundStatement		9:63:259:259	215252	1					
ANR	215299	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Interface %s may not inherit from class (%s)"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( parent_ce -> name ) )"	730:3:25739:25870	215252	0	True				
ANR	215300	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Interface %s may not inherit from class (%s)"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( parent_ce -> name ) )"		215252	0					
ANR	215301	Callee	zend_error_noreturn		215252	0					
ANR	215302	Identifier	zend_error_noreturn		215252	0					
ANR	215303	ArgumentList	E_COMPILE_ERROR		215252	1					
ANR	215304	Argument	E_COMPILE_ERROR		215252	0					
ANR	215305	Identifier	E_COMPILE_ERROR		215252	0					
ANR	215306	Argument	"""Interface %s may not inherit from class (%s)"""		215252	1					
ANR	215307	PrimaryExpression	"""Interface %s may not inherit from class (%s)"""		215252	0					
ANR	215308	Argument	ZSTR_VAL ( ce -> name )		215252	2					
ANR	215309	CallExpression	ZSTR_VAL ( ce -> name )		215252	0					
ANR	215310	Callee	ZSTR_VAL		215252	0					
ANR	215311	Identifier	ZSTR_VAL		215252	0					
ANR	215312	ArgumentList	ce -> name		215252	1					
ANR	215313	Argument	ce -> name		215252	0					
ANR	215314	PtrMemberAccess	ce -> name		215252	0					
ANR	215315	Identifier	ce		215252	0					
ANR	215316	Identifier	name		215252	1					
ANR	215317	Argument	ZSTR_VAL ( parent_ce -> name )		215252	3					
ANR	215318	CallExpression	ZSTR_VAL ( parent_ce -> name )		215252	0					
ANR	215319	Callee	ZSTR_VAL		215252	0					
ANR	215320	Identifier	ZSTR_VAL		215252	0					
ANR	215321	ArgumentList	parent_ce -> name		215252	1					
ANR	215322	Argument	parent_ce -> name		215252	0					
ANR	215323	PtrMemberAccess	parent_ce -> name		215252	0					
ANR	215324	Identifier	parent_ce		215252	0					
ANR	215325	Identifier	name		215252	1					
ANR	215326	ElseStatement	else		215252	0					
ANR	215327	IfStatement	if ( UNEXPECTED ( parent_ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_TRAIT | ZEND_ACC_FINAL ) ) )		215252	0					
ANR	215328	Condition	UNEXPECTED ( parent_ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_TRAIT | ZEND_ACC_FINAL ) )	732:12:25888:25971	215252	0	True				
ANR	215329	CallExpression	UNEXPECTED ( parent_ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_TRAIT | ZEND_ACC_FINAL ) )		215252	0					
ANR	215330	Callee	UNEXPECTED		215252	0					
ANR	215331	Identifier	UNEXPECTED		215252	0					
ANR	215332	ArgumentList	parent_ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_TRAIT | ZEND_ACC_FINAL )		215252	1					
ANR	215333	Argument	parent_ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_TRAIT | ZEND_ACC_FINAL )		215252	0					
ANR	215334	BitAndExpression	parent_ce -> ce_flags & ( ZEND_ACC_INTERFACE | ZEND_ACC_TRAIT | ZEND_ACC_FINAL )		215252	0		&			
ANR	215335	PtrMemberAccess	parent_ce -> ce_flags		215252	0					
ANR	215336	Identifier	parent_ce		215252	0					
ANR	215337	Identifier	ce_flags		215252	1					
ANR	215338	InclusiveOrExpression	ZEND_ACC_INTERFACE | ZEND_ACC_TRAIT | ZEND_ACC_FINAL		215252	1		|			
ANR	215339	Identifier	ZEND_ACC_INTERFACE		215252	0					
ANR	215340	InclusiveOrExpression	ZEND_ACC_TRAIT | ZEND_ACC_FINAL		215252	1		|			
ANR	215341	Identifier	ZEND_ACC_TRAIT		215252	0					
ANR	215342	Identifier	ZEND_ACC_FINAL		215252	1					
ANR	215343	CompoundStatement		12:98:499:499	215252	1					
ANR	215344	IfStatement	if ( parent_ce -> ce_flags & ZEND_ACC_INTERFACE )		215252	0					
ANR	215345	Condition	parent_ce -> ce_flags & ZEND_ACC_INTERFACE	734:6:26045:26084	215252	0	True				
ANR	215346	BitAndExpression	parent_ce -> ce_flags & ZEND_ACC_INTERFACE		215252	0		&			
ANR	215347	PtrMemberAccess	parent_ce -> ce_flags		215252	0					
ANR	215348	Identifier	parent_ce		215252	0					
ANR	215349	Identifier	ce_flags		215252	1					
ANR	215350	Identifier	ZEND_ACC_INTERFACE		215252	1					
ANR	215351	CompoundStatement		14:48:612:612	215252	1					
ANR	215352	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s cannot extend from interface %s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( parent_ce -> name ) )"	735:3:26092:26219	215252	0	True				
ANR	215353	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s cannot extend from interface %s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( parent_ce -> name ) )"		215252	0					
ANR	215354	Callee	zend_error_noreturn		215252	0					
ANR	215355	Identifier	zend_error_noreturn		215252	0					
ANR	215356	ArgumentList	E_COMPILE_ERROR		215252	1					
ANR	215357	Argument	E_COMPILE_ERROR		215252	0					
ANR	215358	Identifier	E_COMPILE_ERROR		215252	0					
ANR	215359	Argument	"""Class %s cannot extend from interface %s"""		215252	1					
ANR	215360	PrimaryExpression	"""Class %s cannot extend from interface %s"""		215252	0					
ANR	215361	Argument	ZSTR_VAL ( ce -> name )		215252	2					
ANR	215362	CallExpression	ZSTR_VAL ( ce -> name )		215252	0					
ANR	215363	Callee	ZSTR_VAL		215252	0					
ANR	215364	Identifier	ZSTR_VAL		215252	0					
ANR	215365	ArgumentList	ce -> name		215252	1					
ANR	215366	Argument	ce -> name		215252	0					
ANR	215367	PtrMemberAccess	ce -> name		215252	0					
ANR	215368	Identifier	ce		215252	0					
ANR	215369	Identifier	name		215252	1					
ANR	215370	Argument	ZSTR_VAL ( parent_ce -> name )		215252	3					
ANR	215371	CallExpression	ZSTR_VAL ( parent_ce -> name )		215252	0					
ANR	215372	Callee	ZSTR_VAL		215252	0					
ANR	215373	Identifier	ZSTR_VAL		215252	0					
ANR	215374	ArgumentList	parent_ce -> name		215252	1					
ANR	215375	Argument	parent_ce -> name		215252	0					
ANR	215376	PtrMemberAccess	parent_ce -> name		215252	0					
ANR	215377	Identifier	parent_ce		215252	0					
ANR	215378	Identifier	name		215252	1					
ANR	215379	ElseStatement	else		215252	0					
ANR	215380	IfStatement	if ( parent_ce -> ce_flags & ZEND_ACC_TRAIT )		215252	0					
ANR	215381	Condition	parent_ce -> ce_flags & ZEND_ACC_TRAIT	736:13:26234:26269	215252	0	True				
ANR	215382	BitAndExpression	parent_ce -> ce_flags & ZEND_ACC_TRAIT		215252	0		&			
ANR	215383	PtrMemberAccess	parent_ce -> ce_flags		215252	0					
ANR	215384	Identifier	parent_ce		215252	0					
ANR	215385	Identifier	ce_flags		215252	1					
ANR	215386	Identifier	ZEND_ACC_TRAIT		215252	1					
ANR	215387	CompoundStatement		16:51:797:797	215252	1					
ANR	215388	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s cannot extend from trait %s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( parent_ce -> name ) )"	737:3:26277:26400	215252	0	True				
ANR	215389	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s cannot extend from trait %s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( parent_ce -> name ) )"		215252	0					
ANR	215390	Callee	zend_error_noreturn		215252	0					
ANR	215391	Identifier	zend_error_noreturn		215252	0					
ANR	215392	ArgumentList	E_COMPILE_ERROR		215252	1					
ANR	215393	Argument	E_COMPILE_ERROR		215252	0					
ANR	215394	Identifier	E_COMPILE_ERROR		215252	0					
ANR	215395	Argument	"""Class %s cannot extend from trait %s"""		215252	1					
ANR	215396	PrimaryExpression	"""Class %s cannot extend from trait %s"""		215252	0					
ANR	215397	Argument	ZSTR_VAL ( ce -> name )		215252	2					
ANR	215398	CallExpression	ZSTR_VAL ( ce -> name )		215252	0					
ANR	215399	Callee	ZSTR_VAL		215252	0					
ANR	215400	Identifier	ZSTR_VAL		215252	0					
ANR	215401	ArgumentList	ce -> name		215252	1					
ANR	215402	Argument	ce -> name		215252	0					
ANR	215403	PtrMemberAccess	ce -> name		215252	0					
ANR	215404	Identifier	ce		215252	0					
ANR	215405	Identifier	name		215252	1					
ANR	215406	Argument	ZSTR_VAL ( parent_ce -> name )		215252	3					
ANR	215407	CallExpression	ZSTR_VAL ( parent_ce -> name )		215252	0					
ANR	215408	Callee	ZSTR_VAL		215252	0					
ANR	215409	Identifier	ZSTR_VAL		215252	0					
ANR	215410	ArgumentList	parent_ce -> name		215252	1					
ANR	215411	Argument	parent_ce -> name		215252	0					
ANR	215412	PtrMemberAccess	parent_ce -> name		215252	0					
ANR	215413	Identifier	parent_ce		215252	0					
ANR	215414	Identifier	name		215252	1					
ANR	215415	IfStatement	if ( parent_ce -> ce_flags & ZEND_ACC_FINAL )		215252	1					
ANR	215416	Condition	parent_ce -> ce_flags & ZEND_ACC_FINAL	741:6:26457:26492	215252	0	True				
ANR	215417	BitAndExpression	parent_ce -> ce_flags & ZEND_ACC_FINAL		215252	0		&			
ANR	215418	PtrMemberAccess	parent_ce -> ce_flags		215252	0					
ANR	215419	Identifier	parent_ce		215252	0					
ANR	215420	Identifier	ce_flags		215252	1					
ANR	215421	Identifier	ZEND_ACC_FINAL		215252	1					
ANR	215422	CompoundStatement		21:44:1020:1020	215252	1					
ANR	215423	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s may not inherit from final class (%s)"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( parent_ce -> name ) )"	742:3:26500:26633	215252	0	True				
ANR	215424	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s may not inherit from final class (%s)"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( parent_ce -> name ) )"		215252	0					
ANR	215425	Callee	zend_error_noreturn		215252	0					
ANR	215426	Identifier	zend_error_noreturn		215252	0					
ANR	215427	ArgumentList	E_COMPILE_ERROR		215252	1					
ANR	215428	Argument	E_COMPILE_ERROR		215252	0					
ANR	215429	Identifier	E_COMPILE_ERROR		215252	0					
ANR	215430	Argument	"""Class %s may not inherit from final class (%s)"""		215252	1					
ANR	215431	PrimaryExpression	"""Class %s may not inherit from final class (%s)"""		215252	0					
ANR	215432	Argument	ZSTR_VAL ( ce -> name )		215252	2					
ANR	215433	CallExpression	ZSTR_VAL ( ce -> name )		215252	0					
ANR	215434	Callee	ZSTR_VAL		215252	0					
ANR	215435	Identifier	ZSTR_VAL		215252	0					
ANR	215436	ArgumentList	ce -> name		215252	1					
ANR	215437	Argument	ce -> name		215252	0					
ANR	215438	PtrMemberAccess	ce -> name		215252	0					
ANR	215439	Identifier	ce		215252	0					
ANR	215440	Identifier	name		215252	1					
ANR	215441	Argument	ZSTR_VAL ( parent_ce -> name )		215252	3					
ANR	215442	CallExpression	ZSTR_VAL ( parent_ce -> name )		215252	0					
ANR	215443	Callee	ZSTR_VAL		215252	0					
ANR	215444	Identifier	ZSTR_VAL		215252	0					
ANR	215445	ArgumentList	parent_ce -> name		215252	1					
ANR	215446	Argument	parent_ce -> name		215252	0					
ANR	215447	PtrMemberAccess	parent_ce -> name		215252	0					
ANR	215448	Identifier	parent_ce		215252	0					
ANR	215449	Identifier	name		215252	1					
ANR	215450	ExpressionStatement	ce -> parent = parent_ce	746:1:26644:26666	215252	5	True				
ANR	215451	AssignmentExpression	ce -> parent = parent_ce		215252	0		=			
ANR	215452	PtrMemberAccess	ce -> parent		215252	0					
ANR	215453	Identifier	ce		215252	0					
ANR	215454	Identifier	parent		215252	1					
ANR	215455	Identifier	parent_ce		215252	1					
ANR	215456	ExpressionStatement	"zend_do_inherit_interfaces ( ce , parent_ce )"	749:1:26696:26737	215252	6	True				
ANR	215457	CallExpression	"zend_do_inherit_interfaces ( ce , parent_ce )"		215252	0					
ANR	215458	Callee	zend_do_inherit_interfaces		215252	0					
ANR	215459	Identifier	zend_do_inherit_interfaces		215252	0					
ANR	215460	ArgumentList	ce		215252	1					
ANR	215461	Argument	ce		215252	0					
ANR	215462	Identifier	ce		215252	0					
ANR	215463	Argument	parent_ce		215252	1					
ANR	215464	Identifier	parent_ce		215252	0					
ANR	215465	IfStatement	if ( parent_ce -> default_properties_count )		215252	7					
ANR	215466	Condition	parent_ce -> default_properties_count	752:5:26771:26805	215252	0	True				
ANR	215467	PtrMemberAccess	parent_ce -> default_properties_count		215252	0					
ANR	215468	Identifier	parent_ce		215252	0					
ANR	215469	Identifier	default_properties_count		215252	1					
ANR	215470	CompoundStatement		33:2:1337:1358	215252	1					
ANR	215471	IdentifierDeclStatement	"zval * src , * dst , * end ;"	753:2:26812:26833	215252	0	True				
ANR	215472	IdentifierDecl	* src		215252	0					
ANR	215473	IdentifierDeclType	zval *		215252	0					
ANR	215474	Identifier	src		215252	1					
ANR	215475	IdentifierDecl	* dst		215252	1					
ANR	215476	IdentifierDeclType	zval *		215252	0					
ANR	215477	Identifier	dst		215252	1					
ANR	215478	IdentifierDecl	* end		215252	2					
ANR	215479	IdentifierDeclType	zval *		215252	0					
ANR	215480	Identifier	end		215252	1					
ANR	215481	IfStatement	if ( ce -> default_properties_count )		215252	1					
ANR	215482	Condition	ce -> default_properties_count	755:6:26842:26869	215252	0	True				
ANR	215483	PtrMemberAccess	ce -> default_properties_count		215252	0					
ANR	215484	Identifier	ce		215252	0					
ANR	215485	Identifier	default_properties_count		215252	1					
ANR	215486	CompoundStatement		36:3:1402:1542	215252	1					
ANR	215487	IdentifierDeclStatement	"zval * table = pemalloc ( sizeof ( zval ) * ( ce -> default_properties_count + parent_ce -> default_properties_count ) , ce -> type == ZEND_INTERNAL_CLASS ) ;"	756:3:26877:27017	215252	0	True				
ANR	215488	IdentifierDecl	"* table = pemalloc ( sizeof ( zval ) * ( ce -> default_properties_count + parent_ce -> default_properties_count ) , ce -> type == ZEND_INTERNAL_CLASS )"		215252	0					
ANR	215489	IdentifierDeclType	zval *		215252	0					
ANR	215490	Identifier	table		215252	1					
ANR	215491	AssignmentExpression	"* table = pemalloc ( sizeof ( zval ) * ( ce -> default_properties_count + parent_ce -> default_properties_count ) , ce -> type == ZEND_INTERNAL_CLASS )"		215252	2		=			
ANR	215492	Identifier	table		215252	0					
ANR	215493	CallExpression	"pemalloc ( sizeof ( zval ) * ( ce -> default_properties_count + parent_ce -> default_properties_count ) , ce -> type == ZEND_INTERNAL_CLASS )"		215252	1					
ANR	215494	Callee	pemalloc		215252	0					
ANR	215495	Identifier	pemalloc		215252	0					
ANR	215496	ArgumentList	sizeof ( zval ) * ( ce -> default_properties_count + parent_ce -> default_properties_count )		215252	1					
ANR	215497	Argument	sizeof ( zval ) * ( ce -> default_properties_count + parent_ce -> default_properties_count )		215252	0					
ANR	215498	MultiplicativeExpression	sizeof ( zval ) * ( ce -> default_properties_count + parent_ce -> default_properties_count )		215252	0		*			
ANR	215499	SizeofExpression	sizeof ( zval )		215252	0					
ANR	215500	Sizeof	sizeof		215252	0					
ANR	215501	SizeofOperand	zval		215252	1					
ANR	215502	AdditiveExpression	ce -> default_properties_count + parent_ce -> default_properties_count		215252	1		+			
ANR	215503	PtrMemberAccess	ce -> default_properties_count		215252	0					
ANR	215504	Identifier	ce		215252	0					
ANR	215505	Identifier	default_properties_count		215252	1					
ANR	215506	PtrMemberAccess	parent_ce -> default_properties_count		215252	1					
ANR	215507	Identifier	parent_ce		215252	0					
ANR	215508	Identifier	default_properties_count		215252	1					
ANR	215509	Argument	ce -> type == ZEND_INTERNAL_CLASS		215252	1					
ANR	215510	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		215252	0		==			
ANR	215511	PtrMemberAccess	ce -> type		215252	0					
ANR	215512	Identifier	ce		215252	0					
ANR	215513	Identifier	type		215252	1					
ANR	215514	Identifier	ZEND_INTERNAL_CLASS		215252	1					
ANR	215515	ExpressionStatement	src = ce -> default_properties_table + ce -> default_properties_count	757:3:27022:27087	215252	1	True				
ANR	215516	AssignmentExpression	src = ce -> default_properties_table + ce -> default_properties_count		215252	0		=			
ANR	215517	Identifier	src		215252	0					
ANR	215518	AdditiveExpression	ce -> default_properties_table + ce -> default_properties_count		215252	1		+			
ANR	215519	PtrMemberAccess	ce -> default_properties_table		215252	0					
ANR	215520	Identifier	ce		215252	0					
ANR	215521	Identifier	default_properties_table		215252	1					
ANR	215522	PtrMemberAccess	ce -> default_properties_count		215252	1					
ANR	215523	Identifier	ce		215252	0					
ANR	215524	Identifier	default_properties_count		215252	1					
ANR	215525	ExpressionStatement	end = table + parent_ce -> default_properties_count	758:3:27092:27141	215252	2	True				
ANR	215526	AssignmentExpression	end = table + parent_ce -> default_properties_count		215252	0		=			
ANR	215527	Identifier	end		215252	0					
ANR	215528	AdditiveExpression	table + parent_ce -> default_properties_count		215252	1		+			
ANR	215529	Identifier	table		215252	0					
ANR	215530	PtrMemberAccess	parent_ce -> default_properties_count		215252	1					
ANR	215531	Identifier	parent_ce		215252	0					
ANR	215532	Identifier	default_properties_count		215252	1					
ANR	215533	ExpressionStatement	dst = end + ce -> default_properties_count	759:3:27146:27186	215252	3	True				
ANR	215534	AssignmentExpression	dst = end + ce -> default_properties_count		215252	0		=			
ANR	215535	Identifier	dst		215252	0					
ANR	215536	AdditiveExpression	end + ce -> default_properties_count		215252	1		+			
ANR	215537	Identifier	end		215252	0					
ANR	215538	PtrMemberAccess	ce -> default_properties_count		215252	1					
ANR	215539	Identifier	ce		215252	0					
ANR	215540	Identifier	default_properties_count		215252	1					
ANR	215541	ExpressionStatement	ce -> default_properties_table = table	760:3:27191:27227	215252	4	True				
ANR	215542	AssignmentExpression	ce -> default_properties_table = table		215252	0		=			
ANR	215543	PtrMemberAccess	ce -> default_properties_table		215252	0					
ANR	215544	Identifier	ce		215252	0					
ANR	215545	Identifier	default_properties_table		215252	1					
ANR	215546	Identifier	table		215252	1					
ANR	215547	DoStatement	do		215252	5					
ANR	215548	CompoundStatement		41:6:1760:1760	215252	0					
ANR	215549	ExpressionStatement	dst --	762:4:27241:27246	215252	0	True				
ANR	215550	PostIncDecOperationExpression	dst --		215252	0					
ANR	215551	Identifier	dst		215252	0					
ANR	215552	IncDec	--		215252	1					
ANR	215553	ExpressionStatement	src --	763:4:27252:27257	215252	1	True				
ANR	215554	PostIncDecOperationExpression	src --		215252	0					
ANR	215555	Identifier	src		215252	0					
ANR	215556	IncDec	--		215252	1					
ANR	215557	ExpressionStatement	"ZVAL_COPY_VALUE ( dst , src )"	764:4:27263:27288	215252	2	True				
ANR	215558	CallExpression	"ZVAL_COPY_VALUE ( dst , src )"		215252	0					
ANR	215559	Callee	ZVAL_COPY_VALUE		215252	0					
ANR	215560	Identifier	ZVAL_COPY_VALUE		215252	0					
ANR	215561	ArgumentList	dst		215252	1					
ANR	215562	Argument	dst		215252	0					
ANR	215563	Identifier	dst		215252	0					
ANR	215564	Argument	src		215252	1					
ANR	215565	Identifier	src		215252	0					
ANR	215566	Condition	dst != end	765:12:27302:27311	215252	1	True				
ANR	215567	EqualityExpression	dst != end		215252	0		!=			
ANR	215568	Identifier	dst		215252	0					
ANR	215569	Identifier	end		215252	1					
ANR	215570	ExpressionStatement	"pefree ( src , ce -> type == ZEND_INTERNAL_CLASS )"	766:3:27318:27362	215252	6	True				
ANR	215571	CallExpression	"pefree ( src , ce -> type == ZEND_INTERNAL_CLASS )"		215252	0					
ANR	215572	Callee	pefree		215252	0					
ANR	215573	Identifier	pefree		215252	0					
ANR	215574	ArgumentList	src		215252	1					
ANR	215575	Argument	src		215252	0					
ANR	215576	Identifier	src		215252	0					
ANR	215577	Argument	ce -> type == ZEND_INTERNAL_CLASS		215252	1					
ANR	215578	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		215252	0		==			
ANR	215579	PtrMemberAccess	ce -> type		215252	0					
ANR	215580	Identifier	ce		215252	0					
ANR	215581	Identifier	type		215252	1					
ANR	215582	Identifier	ZEND_INTERNAL_CLASS		215252	1					
ANR	215583	ExpressionStatement	end = ce -> default_properties_table	767:3:27367:27401	215252	7	True				
ANR	215584	AssignmentExpression	end = ce -> default_properties_table		215252	0		=			
ANR	215585	Identifier	end		215252	0					
ANR	215586	PtrMemberAccess	ce -> default_properties_table		215252	1					
ANR	215587	Identifier	ce		215252	0					
ANR	215588	Identifier	default_properties_table		215252	1					
ANR	215589	ElseStatement	else		215252	0					
ANR	215590	CompoundStatement		48:9:1937:1937	215252	0					
ANR	215591	ExpressionStatement	"end = pemalloc ( sizeof ( zval ) * parent_ce -> default_properties_count , ce -> type == ZEND_INTERNAL_CLASS )"	769:3:27417:27516	215252	0	True				
ANR	215592	AssignmentExpression	"end = pemalloc ( sizeof ( zval ) * parent_ce -> default_properties_count , ce -> type == ZEND_INTERNAL_CLASS )"		215252	0		=			
ANR	215593	Identifier	end		215252	0					
ANR	215594	CallExpression	"pemalloc ( sizeof ( zval ) * parent_ce -> default_properties_count , ce -> type == ZEND_INTERNAL_CLASS )"		215252	1					
ANR	215595	Callee	pemalloc		215252	0					
ANR	215596	Identifier	pemalloc		215252	0					
ANR	215597	ArgumentList	sizeof ( zval ) * parent_ce -> default_properties_count		215252	1					
ANR	215598	Argument	sizeof ( zval ) * parent_ce -> default_properties_count		215252	0					
ANR	215599	MultiplicativeExpression	sizeof ( zval ) * parent_ce -> default_properties_count		215252	0		*			
ANR	215600	SizeofExpression	sizeof ( zval )		215252	0					
ANR	215601	Sizeof	sizeof		215252	0					
ANR	215602	SizeofOperand	zval		215252	1					
ANR	215603	PtrMemberAccess	parent_ce -> default_properties_count		215252	1					
ANR	215604	Identifier	parent_ce		215252	0					
ANR	215605	Identifier	default_properties_count		215252	1					
ANR	215606	Argument	ce -> type == ZEND_INTERNAL_CLASS		215252	1					
ANR	215607	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		215252	0		==			
ANR	215608	PtrMemberAccess	ce -> type		215252	0					
ANR	215609	Identifier	ce		215252	0					
ANR	215610	Identifier	type		215252	1					
ANR	215611	Identifier	ZEND_INTERNAL_CLASS		215252	1					
ANR	215612	ExpressionStatement	dst = end + parent_ce -> default_properties_count	770:3:27521:27568	215252	1	True				
ANR	215613	AssignmentExpression	dst = end + parent_ce -> default_properties_count		215252	0		=			
ANR	215614	Identifier	dst		215252	0					
ANR	215615	AdditiveExpression	end + parent_ce -> default_properties_count		215252	1		+			
ANR	215616	Identifier	end		215252	0					
ANR	215617	PtrMemberAccess	parent_ce -> default_properties_count		215252	1					
ANR	215618	Identifier	parent_ce		215252	0					
ANR	215619	Identifier	default_properties_count		215252	1					
ANR	215620	ExpressionStatement	ce -> default_properties_table = end	771:3:27573:27607	215252	2	True				
ANR	215621	AssignmentExpression	ce -> default_properties_table = end		215252	0		=			
ANR	215622	PtrMemberAccess	ce -> default_properties_table		215252	0					
ANR	215623	Identifier	ce		215252	0					
ANR	215624	Identifier	default_properties_table		215252	1					
ANR	215625	Identifier	end		215252	1					
ANR	215626	ExpressionStatement	src = parent_ce -> default_properties_table + parent_ce -> default_properties_count	773:2:27615:27694	215252	2	True				
ANR	215627	AssignmentExpression	src = parent_ce -> default_properties_table + parent_ce -> default_properties_count		215252	0		=			
ANR	215628	Identifier	src		215252	0					
ANR	215629	AdditiveExpression	parent_ce -> default_properties_table + parent_ce -> default_properties_count		215252	1		+			
ANR	215630	PtrMemberAccess	parent_ce -> default_properties_table		215252	0					
ANR	215631	Identifier	parent_ce		215252	0					
ANR	215632	Identifier	default_properties_table		215252	1					
ANR	215633	PtrMemberAccess	parent_ce -> default_properties_count		215252	1					
ANR	215634	Identifier	parent_ce		215252	0					
ANR	215635	Identifier	default_properties_count		215252	1					
ANR	215636	DoStatement	do		215252	3					
ANR	215637	CompoundStatement		54:5:2226:2226	215252	0					
ANR	215638	ExpressionStatement	dst --	775:3:27706:27711	215252	0	True				
ANR	215639	PostIncDecOperationExpression	dst --		215252	0					
ANR	215640	Identifier	dst		215252	0					
ANR	215641	IncDec	--		215252	1					
ANR	215642	ExpressionStatement	src --	776:3:27716:27721	215252	1	True				
ANR	215643	PostIncDecOperationExpression	src --		215252	0					
ANR	215644	Identifier	src		215252	0					
ANR	215645	IncDec	--		215252	1					
ANR	215646	IfStatement	if ( parent_ce -> type != ce -> type )		215252	2					
ANR	215647	Condition	parent_ce -> type != ce -> type	778:7:27741:27767	215252	0	True				
ANR	215648	EqualityExpression	parent_ce -> type != ce -> type		215252	0		!=			
ANR	215649	PtrMemberAccess	parent_ce -> type		215252	0					
ANR	215650	Identifier	parent_ce		215252	0					
ANR	215651	Identifier	type		215252	1					
ANR	215652	PtrMemberAccess	ce -> type		215252	1					
ANR	215653	Identifier	ce		215252	0					
ANR	215654	Identifier	type		215252	1					
ANR	215655	CompoundStatement		58:36:2295:2295	215252	1					
ANR	215656	ExpressionStatement	"ZVAL_DUP ( dst , src )"	779:4:27776:27794	215252	0	True				
ANR	215657	CallExpression	"ZVAL_DUP ( dst , src )"		215252	0					
ANR	215658	Callee	ZVAL_DUP		215252	0					
ANR	215659	Identifier	ZVAL_DUP		215252	0					
ANR	215660	ArgumentList	dst		215252	1					
ANR	215661	Argument	dst		215252	0					
ANR	215662	Identifier	dst		215252	0					
ANR	215663	Argument	src		215252	1					
ANR	215664	Identifier	src		215252	0					
ANR	215665	IfStatement	if ( Z_OPT_CONSTANT_P ( dst ) )		215252	1					
ANR	215666	Condition	Z_OPT_CONSTANT_P ( dst )	780:8:27804:27824	215252	0	True				
ANR	215667	CallExpression	Z_OPT_CONSTANT_P ( dst )		215252	0					
ANR	215668	Callee	Z_OPT_CONSTANT_P		215252	0					
ANR	215669	Identifier	Z_OPT_CONSTANT_P		215252	0					
ANR	215670	ArgumentList	dst		215252	1					
ANR	215671	Argument	dst		215252	0					
ANR	215672	Identifier	dst		215252	0					
ANR	215673	CompoundStatement		60:31:2352:2352	215252	1					
ANR	215674	ExpressionStatement	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED	781:5:27834:27877	215252	0	True				
ANR	215675	AssignmentExpression	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED		215252	0		&=			
ANR	215676	PtrMemberAccess	ce -> ce_flags		215252	0					
ANR	215677	Identifier	ce		215252	0					
ANR	215678	Identifier	ce_flags		215252	1					
ANR	215679	Identifier	~ZEND_ACC_CONSTANTS_UPDATED		215252	1					
ANR	215680	ContinueStatement	continue ;	783:4:27889:27897	215252	2	True				
ANR	215681	ExpressionStatement	"ZVAL_COPY ( dst , src )"	787:3:27915:27934	215252	3	True				
ANR	215682	CallExpression	"ZVAL_COPY ( dst , src )"		215252	0					
ANR	215683	Callee	ZVAL_COPY		215252	0					
ANR	215684	Identifier	ZVAL_COPY		215252	0					
ANR	215685	ArgumentList	dst		215252	1					
ANR	215686	Argument	dst		215252	0					
ANR	215687	Identifier	dst		215252	0					
ANR	215688	Argument	src		215252	1					
ANR	215689	Identifier	src		215252	0					
ANR	215690	IfStatement	if ( Z_OPT_CONSTANT_P ( dst ) )		215252	4					
ANR	215691	Condition	Z_OPT_CONSTANT_P ( dst )	788:7:27943:27963	215252	0	True				
ANR	215692	CallExpression	Z_OPT_CONSTANT_P ( dst )		215252	0					
ANR	215693	Callee	Z_OPT_CONSTANT_P		215252	0					
ANR	215694	Identifier	Z_OPT_CONSTANT_P		215252	0					
ANR	215695	ArgumentList	dst		215252	1					
ANR	215696	Argument	dst		215252	0					
ANR	215697	Identifier	dst		215252	0					
ANR	215698	CompoundStatement		68:30:2491:2491	215252	1					
ANR	215699	ExpressionStatement	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED	789:4:27972:28015	215252	0	True				
ANR	215700	AssignmentExpression	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED		215252	0		&=			
ANR	215701	PtrMemberAccess	ce -> ce_flags		215252	0					
ANR	215702	Identifier	ce		215252	0					
ANR	215703	Identifier	ce_flags		215252	1					
ANR	215704	Identifier	~ZEND_ACC_CONSTANTS_UPDATED		215252	1					
ANR	215705	Condition	dst != end	791:11:28033:28042	215252	1	True				
ANR	215706	EqualityExpression	dst != end		215252	0		!=			
ANR	215707	Identifier	dst		215252	0					
ANR	215708	Identifier	end		215252	1					
ANR	215709	ExpressionStatement	ce -> default_properties_count += parent_ce -> default_properties_count	792:2:28048:28115	215252	4	True				
ANR	215710	AssignmentExpression	ce -> default_properties_count += parent_ce -> default_properties_count		215252	0		+=			
ANR	215711	PtrMemberAccess	ce -> default_properties_count		215252	0					
ANR	215712	Identifier	ce		215252	0					
ANR	215713	Identifier	default_properties_count		215252	1					
ANR	215714	PtrMemberAccess	parent_ce -> default_properties_count		215252	1					
ANR	215715	Identifier	parent_ce		215252	0					
ANR	215716	Identifier	default_properties_count		215252	1					
ANR	215717	IfStatement	if ( parent_ce -> default_static_members_count )		215252	8					
ANR	215718	Condition	parent_ce -> default_static_members_count	795:5:28126:28164	215252	0	True				
ANR	215719	PtrMemberAccess	parent_ce -> default_static_members_count		215252	0					
ANR	215720	Identifier	parent_ce		215252	0					
ANR	215721	Identifier	default_static_members_count		215252	1					
ANR	215722	CompoundStatement		76:2:2696:2717	215252	1					
ANR	215723	IdentifierDeclStatement	"zval * src , * dst , * end ;"	796:2:28171:28192	215252	0	True				
ANR	215724	IdentifierDecl	* src		215252	0					
ANR	215725	IdentifierDeclType	zval *		215252	0					
ANR	215726	Identifier	src		215252	1					
ANR	215727	IdentifierDecl	* dst		215252	1					
ANR	215728	IdentifierDeclType	zval *		215252	0					
ANR	215729	Identifier	dst		215252	1					
ANR	215730	IdentifierDecl	* end		215252	2					
ANR	215731	IdentifierDeclType	zval *		215252	0					
ANR	215732	Identifier	end		215252	1					
ANR	215733	IfStatement	if ( ce -> default_static_members_count )		215252	1					
ANR	215734	Condition	ce -> default_static_members_count	798:6:28201:28232	215252	0	True				
ANR	215735	PtrMemberAccess	ce -> default_static_members_count		215252	0					
ANR	215736	Identifier	ce		215252	0					
ANR	215737	Identifier	default_static_members_count		215252	1					
ANR	215738	CompoundStatement		79:3:2765:2913	215252	1					
ANR	215739	IdentifierDeclStatement	"zval * table = pemalloc ( sizeof ( zval ) * ( ce -> default_static_members_count + parent_ce -> default_static_members_count ) , ce -> type == ZEND_INTERNAL_CLASS ) ;"	799:3:28240:28388	215252	0	True				
ANR	215740	IdentifierDecl	"* table = pemalloc ( sizeof ( zval ) * ( ce -> default_static_members_count + parent_ce -> default_static_members_count ) , ce -> type == ZEND_INTERNAL_CLASS )"		215252	0					
ANR	215741	IdentifierDeclType	zval *		215252	0					
ANR	215742	Identifier	table		215252	1					
ANR	215743	AssignmentExpression	"* table = pemalloc ( sizeof ( zval ) * ( ce -> default_static_members_count + parent_ce -> default_static_members_count ) , ce -> type == ZEND_INTERNAL_CLASS )"		215252	2		=			
ANR	215744	Identifier	table		215252	0					
ANR	215745	CallExpression	"pemalloc ( sizeof ( zval ) * ( ce -> default_static_members_count + parent_ce -> default_static_members_count ) , ce -> type == ZEND_INTERNAL_CLASS )"		215252	1					
ANR	215746	Callee	pemalloc		215252	0					
ANR	215747	Identifier	pemalloc		215252	0					
ANR	215748	ArgumentList	sizeof ( zval ) * ( ce -> default_static_members_count + parent_ce -> default_static_members_count )		215252	1					
ANR	215749	Argument	sizeof ( zval ) * ( ce -> default_static_members_count + parent_ce -> default_static_members_count )		215252	0					
ANR	215750	MultiplicativeExpression	sizeof ( zval ) * ( ce -> default_static_members_count + parent_ce -> default_static_members_count )		215252	0		*			
ANR	215751	SizeofExpression	sizeof ( zval )		215252	0					
ANR	215752	Sizeof	sizeof		215252	0					
ANR	215753	SizeofOperand	zval		215252	1					
ANR	215754	AdditiveExpression	ce -> default_static_members_count + parent_ce -> default_static_members_count		215252	1		+			
ANR	215755	PtrMemberAccess	ce -> default_static_members_count		215252	0					
ANR	215756	Identifier	ce		215252	0					
ANR	215757	Identifier	default_static_members_count		215252	1					
ANR	215758	PtrMemberAccess	parent_ce -> default_static_members_count		215252	1					
ANR	215759	Identifier	parent_ce		215252	0					
ANR	215760	Identifier	default_static_members_count		215252	1					
ANR	215761	Argument	ce -> type == ZEND_INTERNAL_CLASS		215252	1					
ANR	215762	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		215252	0		==			
ANR	215763	PtrMemberAccess	ce -> type		215252	0					
ANR	215764	Identifier	ce		215252	0					
ANR	215765	Identifier	type		215252	1					
ANR	215766	Identifier	ZEND_INTERNAL_CLASS		215252	1					
ANR	215767	ExpressionStatement	src = ce -> default_static_members_table + ce -> default_static_members_count	800:3:28393:28466	215252	1	True				
ANR	215768	AssignmentExpression	src = ce -> default_static_members_table + ce -> default_static_members_count		215252	0		=			
ANR	215769	Identifier	src		215252	0					
ANR	215770	AdditiveExpression	ce -> default_static_members_table + ce -> default_static_members_count		215252	1		+			
ANR	215771	PtrMemberAccess	ce -> default_static_members_table		215252	0					
ANR	215772	Identifier	ce		215252	0					
ANR	215773	Identifier	default_static_members_table		215252	1					
ANR	215774	PtrMemberAccess	ce -> default_static_members_count		215252	1					
ANR	215775	Identifier	ce		215252	0					
ANR	215776	Identifier	default_static_members_count		215252	1					
ANR	215777	ExpressionStatement	end = table + parent_ce -> default_static_members_count	801:3:28471:28524	215252	2	True				
ANR	215778	AssignmentExpression	end = table + parent_ce -> default_static_members_count		215252	0		=			
ANR	215779	Identifier	end		215252	0					
ANR	215780	AdditiveExpression	table + parent_ce -> default_static_members_count		215252	1		+			
ANR	215781	Identifier	table		215252	0					
ANR	215782	PtrMemberAccess	parent_ce -> default_static_members_count		215252	1					
ANR	215783	Identifier	parent_ce		215252	0					
ANR	215784	Identifier	default_static_members_count		215252	1					
ANR	215785	ExpressionStatement	dst = end + ce -> default_static_members_count	802:3:28529:28573	215252	3	True				
ANR	215786	AssignmentExpression	dst = end + ce -> default_static_members_count		215252	0		=			
ANR	215787	Identifier	dst		215252	0					
ANR	215788	AdditiveExpression	end + ce -> default_static_members_count		215252	1		+			
ANR	215789	Identifier	end		215252	0					
ANR	215790	PtrMemberAccess	ce -> default_static_members_count		215252	1					
ANR	215791	Identifier	ce		215252	0					
ANR	215792	Identifier	default_static_members_count		215252	1					
ANR	215793	ExpressionStatement	ce -> default_static_members_table = table	803:3:28578:28618	215252	4	True				
ANR	215794	AssignmentExpression	ce -> default_static_members_table = table		215252	0		=			
ANR	215795	PtrMemberAccess	ce -> default_static_members_table		215252	0					
ANR	215796	Identifier	ce		215252	0					
ANR	215797	Identifier	default_static_members_table		215252	1					
ANR	215798	Identifier	table		215252	1					
ANR	215799	DoStatement	do		215252	5					
ANR	215800	CompoundStatement		84:6:3151:3151	215252	0					
ANR	215801	ExpressionStatement	dst --	805:4:28632:28637	215252	0	True				
ANR	215802	PostIncDecOperationExpression	dst --		215252	0					
ANR	215803	Identifier	dst		215252	0					
ANR	215804	IncDec	--		215252	1					
ANR	215805	ExpressionStatement	src --	806:4:28643:28648	215252	1	True				
ANR	215806	PostIncDecOperationExpression	src --		215252	0					
ANR	215807	Identifier	src		215252	0					
ANR	215808	IncDec	--		215252	1					
ANR	215809	ExpressionStatement	"ZVAL_COPY_VALUE ( dst , src )"	807:4:28654:28679	215252	2	True				
ANR	215810	CallExpression	"ZVAL_COPY_VALUE ( dst , src )"		215252	0					
ANR	215811	Callee	ZVAL_COPY_VALUE		215252	0					
ANR	215812	Identifier	ZVAL_COPY_VALUE		215252	0					
ANR	215813	ArgumentList	dst		215252	1					
ANR	215814	Argument	dst		215252	0					
ANR	215815	Identifier	dst		215252	0					
ANR	215816	Argument	src		215252	1					
ANR	215817	Identifier	src		215252	0					
ANR	215818	Condition	dst != end	808:12:28693:28702	215252	1	True				
ANR	215819	EqualityExpression	dst != end		215252	0		!=			
ANR	215820	Identifier	dst		215252	0					
ANR	215821	Identifier	end		215252	1					
ANR	215822	ExpressionStatement	"pefree ( src , ce -> type == ZEND_INTERNAL_CLASS )"	809:3:28709:28753	215252	6	True				
ANR	215823	CallExpression	"pefree ( src , ce -> type == ZEND_INTERNAL_CLASS )"		215252	0					
ANR	215824	Callee	pefree		215252	0					
ANR	215825	Identifier	pefree		215252	0					
ANR	215826	ArgumentList	src		215252	1					
ANR	215827	Argument	src		215252	0					
ANR	215828	Identifier	src		215252	0					
ANR	215829	Argument	ce -> type == ZEND_INTERNAL_CLASS		215252	1					
ANR	215830	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		215252	0		==			
ANR	215831	PtrMemberAccess	ce -> type		215252	0					
ANR	215832	Identifier	ce		215252	0					
ANR	215833	Identifier	type		215252	1					
ANR	215834	Identifier	ZEND_INTERNAL_CLASS		215252	1					
ANR	215835	ExpressionStatement	end = ce -> default_static_members_table	810:3:28758:28796	215252	7	True				
ANR	215836	AssignmentExpression	end = ce -> default_static_members_table		215252	0		=			
ANR	215837	Identifier	end		215252	0					
ANR	215838	PtrMemberAccess	ce -> default_static_members_table		215252	1					
ANR	215839	Identifier	ce		215252	0					
ANR	215840	Identifier	default_static_members_table		215252	1					
ANR	215841	ElseStatement	else		215252	0					
ANR	215842	CompoundStatement		91:9:3332:3332	215252	0					
ANR	215843	ExpressionStatement	"end = pemalloc ( sizeof ( zval ) * parent_ce -> default_static_members_count , ce -> type == ZEND_INTERNAL_CLASS )"	812:3:28812:28915	215252	0	True				
ANR	215844	AssignmentExpression	"end = pemalloc ( sizeof ( zval ) * parent_ce -> default_static_members_count , ce -> type == ZEND_INTERNAL_CLASS )"		215252	0		=			
ANR	215845	Identifier	end		215252	0					
ANR	215846	CallExpression	"pemalloc ( sizeof ( zval ) * parent_ce -> default_static_members_count , ce -> type == ZEND_INTERNAL_CLASS )"		215252	1					
ANR	215847	Callee	pemalloc		215252	0					
ANR	215848	Identifier	pemalloc		215252	0					
ANR	215849	ArgumentList	sizeof ( zval ) * parent_ce -> default_static_members_count		215252	1					
ANR	215850	Argument	sizeof ( zval ) * parent_ce -> default_static_members_count		215252	0					
ANR	215851	MultiplicativeExpression	sizeof ( zval ) * parent_ce -> default_static_members_count		215252	0		*			
ANR	215852	SizeofExpression	sizeof ( zval )		215252	0					
ANR	215853	Sizeof	sizeof		215252	0					
ANR	215854	SizeofOperand	zval		215252	1					
ANR	215855	PtrMemberAccess	parent_ce -> default_static_members_count		215252	1					
ANR	215856	Identifier	parent_ce		215252	0					
ANR	215857	Identifier	default_static_members_count		215252	1					
ANR	215858	Argument	ce -> type == ZEND_INTERNAL_CLASS		215252	1					
ANR	215859	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		215252	0		==			
ANR	215860	PtrMemberAccess	ce -> type		215252	0					
ANR	215861	Identifier	ce		215252	0					
ANR	215862	Identifier	type		215252	1					
ANR	215863	Identifier	ZEND_INTERNAL_CLASS		215252	1					
ANR	215864	ExpressionStatement	dst = end + parent_ce -> default_static_members_count	813:3:28920:28971	215252	1	True				
ANR	215865	AssignmentExpression	dst = end + parent_ce -> default_static_members_count		215252	0		=			
ANR	215866	Identifier	dst		215252	0					
ANR	215867	AdditiveExpression	end + parent_ce -> default_static_members_count		215252	1		+			
ANR	215868	Identifier	end		215252	0					
ANR	215869	PtrMemberAccess	parent_ce -> default_static_members_count		215252	1					
ANR	215870	Identifier	parent_ce		215252	0					
ANR	215871	Identifier	default_static_members_count		215252	1					
ANR	215872	ExpressionStatement	ce -> default_static_members_table = end	814:3:28976:29014	215252	2	True				
ANR	215873	AssignmentExpression	ce -> default_static_members_table = end		215252	0		=			
ANR	215874	PtrMemberAccess	ce -> default_static_members_table		215252	0					
ANR	215875	Identifier	ce		215252	0					
ANR	215876	Identifier	default_static_members_table		215252	1					
ANR	215877	Identifier	end		215252	1					
ANR	215878	ExpressionStatement	src = parent_ce -> default_static_members_table + parent_ce -> default_static_members_count	816:2:29022:29109	215252	2	True				
ANR	215879	AssignmentExpression	src = parent_ce -> default_static_members_table + parent_ce -> default_static_members_count		215252	0		=			
ANR	215880	Identifier	src		215252	0					
ANR	215881	AdditiveExpression	parent_ce -> default_static_members_table + parent_ce -> default_static_members_count		215252	1		+			
ANR	215882	PtrMemberAccess	parent_ce -> default_static_members_table		215252	0					
ANR	215883	Identifier	parent_ce		215252	0					
ANR	215884	Identifier	default_static_members_table		215252	1					
ANR	215885	PtrMemberAccess	parent_ce -> default_static_members_count		215252	1					
ANR	215886	Identifier	parent_ce		215252	0					
ANR	215887	Identifier	default_static_members_count		215252	1					
ANR	215888	DoStatement	do		215252	3					
ANR	215889	CompoundStatement		97:5:3641:3641	215252	0					
ANR	215890	ExpressionStatement	dst --	818:3:29121:29126	215252	0	True				
ANR	215891	PostIncDecOperationExpression	dst --		215252	0					
ANR	215892	Identifier	dst		215252	0					
ANR	215893	IncDec	--		215252	1					
ANR	215894	ExpressionStatement	src --	819:3:29131:29136	215252	1	True				
ANR	215895	PostIncDecOperationExpression	src --		215252	0					
ANR	215896	Identifier	src		215252	0					
ANR	215897	IncDec	--		215252	1					
ANR	215898	IfStatement	if ( parent_ce -> type == ZEND_INTERNAL_CLASS )		215252	2					
ANR	215899	Condition	parent_ce -> type == ZEND_INTERNAL_CLASS	820:7:29145:29182	215252	0	True				
ANR	215900	EqualityExpression	parent_ce -> type == ZEND_INTERNAL_CLASS		215252	0		==			
ANR	215901	PtrMemberAccess	parent_ce -> type		215252	0					
ANR	215902	Identifier	parent_ce		215252	0					
ANR	215903	Identifier	type		215252	1					
ANR	215904	Identifier	ZEND_INTERNAL_CLASS		215252	1					
ANR	215905	CompoundStatement		100:47:3710:3710	215252	1					
ANR	215906	IfStatement	if ( ! Z_ISREF_P ( src ) )		215252	0					
ANR	215907	Condition	! Z_ISREF_P ( src )	821:8:29195:29209	215252	0	True				
ANR	215908	UnaryOperationExpression	! Z_ISREF_P ( src )		215252	0					
ANR	215909	UnaryOperator	!		215252	0					
ANR	215910	CallExpression	Z_ISREF_P ( src )		215252	1					
ANR	215911	Callee	Z_ISREF_P		215252	0					
ANR	215912	Identifier	Z_ISREF_P		215252	0					
ANR	215913	ArgumentList	src		215252	1					
ANR	215914	Argument	src		215252	0					
ANR	215915	Identifier	src		215252	0					
ANR	215916	CompoundStatement		101:25:3737:3737	215252	1					
ANR	215917	ExpressionStatement	"ZVAL_NEW_PERSISTENT_REF ( src , src )"	822:5:29219:29252	215252	0	True				
ANR	215918	CallExpression	"ZVAL_NEW_PERSISTENT_REF ( src , src )"		215252	0					
ANR	215919	Callee	ZVAL_NEW_PERSISTENT_REF		215252	0					
ANR	215920	Identifier	ZVAL_NEW_PERSISTENT_REF		215252	0					
ANR	215921	ArgumentList	src		215252	1					
ANR	215922	Argument	src		215252	0					
ANR	215923	Identifier	src		215252	0					
ANR	215924	Argument	src		215252	1					
ANR	215925	Identifier	src		215252	0					
ANR	215926	ElseStatement	else		215252	0					
ANR	215927	CompoundStatement		104:10:3795:3795	215252	0					
ANR	215928	ExpressionStatement	ZVAL_MAKE_REF ( src )	825:4:29276:29294	215252	0	True				
ANR	215929	CallExpression	ZVAL_MAKE_REF ( src )		215252	0					
ANR	215930	Callee	ZVAL_MAKE_REF		215252	0					
ANR	215931	Identifier	ZVAL_MAKE_REF		215252	0					
ANR	215932	ArgumentList	src		215252	1					
ANR	215933	Argument	src		215252	0					
ANR	215934	Identifier	src		215252	0					
ANR	215935	ExpressionStatement	"ZVAL_COPY_VALUE ( dst , src )"	827:3:29304:29329	215252	3	True				
ANR	215936	CallExpression	"ZVAL_COPY_VALUE ( dst , src )"		215252	0					
ANR	215937	Callee	ZVAL_COPY_VALUE		215252	0					
ANR	215938	Identifier	ZVAL_COPY_VALUE		215252	0					
ANR	215939	ArgumentList	dst		215252	1					
ANR	215940	Argument	dst		215252	0					
ANR	215941	Identifier	dst		215252	0					
ANR	215942	Argument	src		215252	1					
ANR	215943	Identifier	src		215252	0					
ANR	215944	ExpressionStatement	Z_ADDREF_P ( dst )	828:3:29334:29349	215252	4	True				
ANR	215945	CallExpression	Z_ADDREF_P ( dst )		215252	0					
ANR	215946	Callee	Z_ADDREF_P		215252	0					
ANR	215947	Identifier	Z_ADDREF_P		215252	0					
ANR	215948	ArgumentList	dst		215252	1					
ANR	215949	Argument	dst		215252	0					
ANR	215950	Identifier	dst		215252	0					
ANR	215951	IfStatement	if ( Z_CONSTANT_P ( Z_REFVAL_P ( dst ) ) )		215252	5					
ANR	215952	Condition	Z_CONSTANT_P ( Z_REFVAL_P ( dst ) )	829:7:29358:29386	215252	0	True				
ANR	215953	CallExpression	Z_CONSTANT_P ( Z_REFVAL_P ( dst ) )		215252	0					
ANR	215954	Callee	Z_CONSTANT_P		215252	0					
ANR	215955	Identifier	Z_CONSTANT_P		215252	0					
ANR	215956	ArgumentList	Z_REFVAL_P ( dst )		215252	1					
ANR	215957	Argument	Z_REFVAL_P ( dst )		215252	0					
ANR	215958	CallExpression	Z_REFVAL_P ( dst )		215252	0					
ANR	215959	Callee	Z_REFVAL_P		215252	0					
ANR	215960	Identifier	Z_REFVAL_P		215252	0					
ANR	215961	ArgumentList	dst		215252	1					
ANR	215962	Argument	dst		215252	0					
ANR	215963	Identifier	dst		215252	0					
ANR	215964	CompoundStatement		109:38:3914:3914	215252	1					
ANR	215965	ExpressionStatement	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED	830:4:29395:29438	215252	0	True				
ANR	215966	AssignmentExpression	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED		215252	0		&=			
ANR	215967	PtrMemberAccess	ce -> ce_flags		215252	0					
ANR	215968	Identifier	ce		215252	0					
ANR	215969	Identifier	ce_flags		215252	1					
ANR	215970	Identifier	~ZEND_ACC_CONSTANTS_UPDATED		215252	1					
ANR	215971	Condition	dst != end	832:11:29456:29465	215252	1	True				
ANR	215972	EqualityExpression	dst != end		215252	0		!=			
ANR	215973	Identifier	dst		215252	0					
ANR	215974	Identifier	end		215252	1					
ANR	215975	ExpressionStatement	ce -> default_static_members_count += parent_ce -> default_static_members_count	833:2:29471:29546	215252	4	True				
ANR	215976	AssignmentExpression	ce -> default_static_members_count += parent_ce -> default_static_members_count		215252	0		+=			
ANR	215977	PtrMemberAccess	ce -> default_static_members_count		215252	0					
ANR	215978	Identifier	ce		215252	0					
ANR	215979	Identifier	default_static_members_count		215252	1					
ANR	215980	PtrMemberAccess	parent_ce -> default_static_members_count		215252	1					
ANR	215981	Identifier	parent_ce		215252	0					
ANR	215982	Identifier	default_static_members_count		215252	1					
ANR	215983	IfStatement	if ( ce -> type == ZEND_USER_CLASS )		215252	5					
ANR	215984	Condition	ce -> type == ZEND_USER_CLASS	834:6:29554:29580	215252	0	True				
ANR	215985	EqualityExpression	ce -> type == ZEND_USER_CLASS		215252	0		==			
ANR	215986	PtrMemberAccess	ce -> type		215252	0					
ANR	215987	Identifier	ce		215252	0					
ANR	215988	Identifier	type		215252	1					
ANR	215989	Identifier	ZEND_USER_CLASS		215252	1					
ANR	215990	CompoundStatement		114:35:4108:4108	215252	1					
ANR	215991	ExpressionStatement	ce -> static_members_table = ce -> default_static_members_table	835:3:29588:29647	215252	0	True				
ANR	215992	AssignmentExpression	ce -> static_members_table = ce -> default_static_members_table		215252	0		=			
ANR	215993	PtrMemberAccess	ce -> static_members_table		215252	0					
ANR	215994	Identifier	ce		215252	0					
ANR	215995	Identifier	static_members_table		215252	1					
ANR	215996	PtrMemberAccess	ce -> default_static_members_table		215252	1					
ANR	215997	Identifier	ce		215252	0					
ANR	215998	Identifier	default_static_members_table		215252	1					
ANR	215999	ElseStatement	else		215252	0					
ANR	216000	CompoundStatement		116:9:4183:4183	215252	0					
ANR	216001	ExpressionStatement	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED	837:3:29663:29706	215252	0	True				
ANR	216002	AssignmentExpression	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED		215252	0		&=			
ANR	216003	PtrMemberAccess	ce -> ce_flags		215252	0					
ANR	216004	Identifier	ce		215252	0					
ANR	216005	Identifier	ce_flags		215252	1					
ANR	216006	Identifier	~ZEND_ACC_CONSTANTS_UPDATED		215252	1					
ANR	216007	Statement	ZEND_HASH_FOREACH_PTR	841:1:29717:29737	215252	9	True				
ANR	216008	Statement	(	841:22:29738:29738	215252	10	True				
ANR	216009	Statement	&	841:23:29739:29739	215252	11	True				
ANR	216010	Statement	ce	841:24:29740:29741	215252	12	True				
ANR	216011	Statement	->	841:26:29742:29743	215252	13	True				
ANR	216012	Statement	properties_info	841:28:29744:29758	215252	14	True				
ANR	216013	Statement	","	841:43:29759:29759	215252	15	True				
ANR	216014	Statement	property_info	841:45:29761:29773	215252	16	True				
ANR	216015	Statement	)	841:58:29774:29774	215252	17	True				
ANR	216016	CompoundStatement		121:60:4301:4301	215252	18					
ANR	216017	IfStatement	if ( property_info -> ce == ce )		215252	0					
ANR	216018	Condition	property_info -> ce == ce	842:6:29784:29806	215252	0	True				
ANR	216019	EqualityExpression	property_info -> ce == ce		215252	0		==			
ANR	216020	PtrMemberAccess	property_info -> ce		215252	0					
ANR	216021	Identifier	property_info		215252	0					
ANR	216022	Identifier	ce		215252	1					
ANR	216023	Identifier	ce		215252	1					
ANR	216024	CompoundStatement		122:31:4334:4334	215252	1					
ANR	216025	IfStatement	if ( property_info -> flags & ZEND_ACC_STATIC )		215252	0					
ANR	216026	Condition	property_info -> flags & ZEND_ACC_STATIC	843:7:29818:29855	215252	0	True				
ANR	216027	BitAndExpression	property_info -> flags & ZEND_ACC_STATIC		215252	0		&			
ANR	216028	PtrMemberAccess	property_info -> flags		215252	0					
ANR	216029	Identifier	property_info		215252	0					
ANR	216030	Identifier	flags		215252	1					
ANR	216031	Identifier	ZEND_ACC_STATIC		215252	1					
ANR	216032	CompoundStatement		123:47:4383:4383	215252	1					
ANR	216033	ExpressionStatement	property_info -> offset += parent_ce -> default_static_members_count	844:4:29864:29928	215252	0	True				
ANR	216034	AssignmentExpression	property_info -> offset += parent_ce -> default_static_members_count		215252	0		+=			
ANR	216035	PtrMemberAccess	property_info -> offset		215252	0					
ANR	216036	Identifier	property_info		215252	0					
ANR	216037	Identifier	offset		215252	1					
ANR	216038	PtrMemberAccess	parent_ce -> default_static_members_count		215252	1					
ANR	216039	Identifier	parent_ce		215252	0					
ANR	216040	Identifier	default_static_members_count		215252	1					
ANR	216041	ElseStatement	else		215252	0					
ANR	216042	CompoundStatement		125:10:4465:4465	215252	0					
ANR	216043	ExpressionStatement	property_info -> offset += parent_ce -> default_properties_count * sizeof ( zval )	846:4:29946:30021	215252	0	True				
ANR	216044	AssignmentExpression	property_info -> offset += parent_ce -> default_properties_count * sizeof ( zval )		215252	0		+=			
ANR	216045	PtrMemberAccess	property_info -> offset		215252	0					
ANR	216046	Identifier	property_info		215252	0					
ANR	216047	Identifier	offset		215252	1					
ANR	216048	MultiplicativeExpression	parent_ce -> default_properties_count * sizeof ( zval )		215252	1		*			
ANR	216049	PtrMemberAccess	parent_ce -> default_properties_count		215252	0					
ANR	216050	Identifier	parent_ce		215252	0					
ANR	216051	Identifier	default_properties_count		215252	1					
ANR	216052	SizeofExpression	sizeof ( zval )		215252	1					
ANR	216053	Sizeof	sizeof		215252	0					
ANR	216054	SizeofOperand	zval		215252	1					
ANR	216055	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	849:3:30035:30058	215252	19	True				
ANR	216056	CallExpression	ZEND_HASH_FOREACH_END ( )		215252	0					
ANR	216057	Callee	ZEND_HASH_FOREACH_END		215252	0					
ANR	216058	Identifier	ZEND_HASH_FOREACH_END		215252	0					
ANR	216059	ArgumentList			215252	1					
ANR	216060	IfStatement	if ( zend_hash_num_elements ( & parent_ce -> properties_info ) )		215252	20					
ANR	216061	Condition	zend_hash_num_elements ( & parent_ce -> properties_info )	851:5:30066:30116	215252	0	True				
ANR	216062	CallExpression	zend_hash_num_elements ( & parent_ce -> properties_info )		215252	0					
ANR	216063	Callee	zend_hash_num_elements		215252	0					
ANR	216064	Identifier	zend_hash_num_elements		215252	0					
ANR	216065	ArgumentList	& parent_ce -> properties_info		215252	1					
ANR	216066	Argument	& parent_ce -> properties_info		215252	0					
ANR	216067	UnaryOperationExpression	& parent_ce -> properties_info		215252	0					
ANR	216068	UnaryOperator	&		215252	0					
ANR	216069	PtrMemberAccess	parent_ce -> properties_info		215252	1					
ANR	216070	Identifier	parent_ce		215252	0					
ANR	216071	Identifier	properties_info		215252	1					
ANR	216072	CompoundStatement		131:58:4644:4644	215252	1					
ANR	216073	ExpressionStatement	"zend_hash_extend ( & ce -> properties_info , zend_hash_num_elements ( & ce -> properties_info ) + zend_hash_num_elements ( & parent_ce -> properties_info ) , 0 )"	852:2:30123:30270	215252	0	True				
ANR	216074	CallExpression	"zend_hash_extend ( & ce -> properties_info , zend_hash_num_elements ( & ce -> properties_info ) + zend_hash_num_elements ( & parent_ce -> properties_info ) , 0 )"		215252	0					
ANR	216075	Callee	zend_hash_extend		215252	0					
ANR	216076	Identifier	zend_hash_extend		215252	0					
ANR	216077	ArgumentList	& ce -> properties_info		215252	1					
ANR	216078	Argument	& ce -> properties_info		215252	0					
ANR	216079	UnaryOperationExpression	& ce -> properties_info		215252	0					
ANR	216080	UnaryOperator	&		215252	0					
ANR	216081	PtrMemberAccess	ce -> properties_info		215252	1					
ANR	216082	Identifier	ce		215252	0					
ANR	216083	Identifier	properties_info		215252	1					
ANR	216084	Argument	zend_hash_num_elements ( & ce -> properties_info ) + zend_hash_num_elements ( & parent_ce -> properties_info )		215252	1					
ANR	216085	AdditiveExpression	zend_hash_num_elements ( & ce -> properties_info ) + zend_hash_num_elements ( & parent_ce -> properties_info )		215252	0		+			
ANR	216086	CallExpression	zend_hash_num_elements ( & ce -> properties_info )		215252	0					
ANR	216087	Callee	zend_hash_num_elements		215252	0					
ANR	216088	Identifier	zend_hash_num_elements		215252	0					
ANR	216089	ArgumentList	& ce -> properties_info		215252	1					
ANR	216090	Argument	& ce -> properties_info		215252	0					
ANR	216091	UnaryOperationExpression	& ce -> properties_info		215252	0					
ANR	216092	UnaryOperator	&		215252	0					
ANR	216093	PtrMemberAccess	ce -> properties_info		215252	1					
ANR	216094	Identifier	ce		215252	0					
ANR	216095	Identifier	properties_info		215252	1					
ANR	216096	CallExpression	zend_hash_num_elements ( & parent_ce -> properties_info )		215252	1					
ANR	216097	Callee	zend_hash_num_elements		215252	0					
ANR	216098	Identifier	zend_hash_num_elements		215252	0					
ANR	216099	ArgumentList	& parent_ce -> properties_info		215252	1					
ANR	216100	Argument	& parent_ce -> properties_info		215252	0					
ANR	216101	UnaryOperationExpression	& parent_ce -> properties_info		215252	0					
ANR	216102	UnaryOperator	&		215252	0					
ANR	216103	PtrMemberAccess	parent_ce -> properties_info		215252	1					
ANR	216104	Identifier	parent_ce		215252	0					
ANR	216105	Identifier	properties_info		215252	1					
ANR	216106	Argument	0		215252	2					
ANR	216107	PrimaryExpression	0		215252	0					
ANR	216108	Statement	ZEND_HASH_FOREACH_STR_KEY_PTR	856:2:30275:30303	215252	1	True				
ANR	216109	Statement	(	856:31:30304:30304	215252	2	True				
ANR	216110	Statement	&	856:32:30305:30305	215252	3	True				
ANR	216111	Statement	parent_ce	856:33:30306:30314	215252	4	True				
ANR	216112	Statement	->	856:42:30315:30316	215252	5	True				
ANR	216113	Statement	properties_info	856:44:30317:30331	215252	6	True				
ANR	216114	Statement	","	856:59:30332:30332	215252	7	True				
ANR	216115	Statement	key	856:61:30334:30336	215252	8	True				
ANR	216116	Statement	","	856:64:30337:30337	215252	9	True				
ANR	216117	Statement	property_info	856:66:30339:30351	215252	10	True				
ANR	216118	Statement	)	856:79:30352:30352	215252	11	True				
ANR	216119	CompoundStatement		136:81:4879:4879	215252	12					
ANR	216120	ExpressionStatement	"do_inherit_property ( property_info , key , ce )"	857:3:30359:30402	215252	0	True				
ANR	216121	CallExpression	"do_inherit_property ( property_info , key , ce )"		215252	0					
ANR	216122	Callee	do_inherit_property		215252	0					
ANR	216123	Identifier	do_inherit_property		215252	0					
ANR	216124	ArgumentList	property_info		215252	1					
ANR	216125	Argument	property_info		215252	0					
ANR	216126	Identifier	property_info		215252	0					
ANR	216127	Argument	key		215252	1					
ANR	216128	Identifier	key		215252	0					
ANR	216129	Argument	ce		215252	2					
ANR	216130	Identifier	ce		215252	0					
ANR	216131	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	858:4:30408:30431	215252	13	True				
ANR	216132	CallExpression	ZEND_HASH_FOREACH_END ( )		215252	0					
ANR	216133	Callee	ZEND_HASH_FOREACH_END		215252	0					
ANR	216134	Identifier	ZEND_HASH_FOREACH_END		215252	0					
ANR	216135	ArgumentList			215252	1					
ANR	216136	IfStatement	if ( zend_hash_num_elements ( & parent_ce -> constants_table ) )		215252	21					
ANR	216137	Condition	zend_hash_num_elements ( & parent_ce -> constants_table )	861:5:30442:30492	215252	0	True				
ANR	216138	CallExpression	zend_hash_num_elements ( & parent_ce -> constants_table )		215252	0					
ANR	216139	Callee	zend_hash_num_elements		215252	0					
ANR	216140	Identifier	zend_hash_num_elements		215252	0					
ANR	216141	ArgumentList	& parent_ce -> constants_table		215252	1					
ANR	216142	Argument	& parent_ce -> constants_table		215252	0					
ANR	216143	UnaryOperationExpression	& parent_ce -> constants_table		215252	0					
ANR	216144	UnaryOperator	&		215252	0					
ANR	216145	PtrMemberAccess	parent_ce -> constants_table		215252	1					
ANR	216146	Identifier	parent_ce		215252	0					
ANR	216147	Identifier	constants_table		215252	1					
ANR	216148	CompoundStatement		141:58:5020:5020	215252	1					
ANR	216149	ExpressionStatement	"zend_hash_extend ( & ce -> constants_table , zend_hash_num_elements ( & ce -> constants_table ) + zend_hash_num_elements ( & parent_ce -> constants_table ) , 0 )"	862:2:30499:30646	215252	0	True				
ANR	216150	CallExpression	"zend_hash_extend ( & ce -> constants_table , zend_hash_num_elements ( & ce -> constants_table ) + zend_hash_num_elements ( & parent_ce -> constants_table ) , 0 )"		215252	0					
ANR	216151	Callee	zend_hash_extend		215252	0					
ANR	216152	Identifier	zend_hash_extend		215252	0					
ANR	216153	ArgumentList	& ce -> constants_table		215252	1					
ANR	216154	Argument	& ce -> constants_table		215252	0					
ANR	216155	UnaryOperationExpression	& ce -> constants_table		215252	0					
ANR	216156	UnaryOperator	&		215252	0					
ANR	216157	PtrMemberAccess	ce -> constants_table		215252	1					
ANR	216158	Identifier	ce		215252	0					
ANR	216159	Identifier	constants_table		215252	1					
ANR	216160	Argument	zend_hash_num_elements ( & ce -> constants_table ) + zend_hash_num_elements ( & parent_ce -> constants_table )		215252	1					
ANR	216161	AdditiveExpression	zend_hash_num_elements ( & ce -> constants_table ) + zend_hash_num_elements ( & parent_ce -> constants_table )		215252	0		+			
ANR	216162	CallExpression	zend_hash_num_elements ( & ce -> constants_table )		215252	0					
ANR	216163	Callee	zend_hash_num_elements		215252	0					
ANR	216164	Identifier	zend_hash_num_elements		215252	0					
ANR	216165	ArgumentList	& ce -> constants_table		215252	1					
ANR	216166	Argument	& ce -> constants_table		215252	0					
ANR	216167	UnaryOperationExpression	& ce -> constants_table		215252	0					
ANR	216168	UnaryOperator	&		215252	0					
ANR	216169	PtrMemberAccess	ce -> constants_table		215252	1					
ANR	216170	Identifier	ce		215252	0					
ANR	216171	Identifier	constants_table		215252	1					
ANR	216172	CallExpression	zend_hash_num_elements ( & parent_ce -> constants_table )		215252	1					
ANR	216173	Callee	zend_hash_num_elements		215252	0					
ANR	216174	Identifier	zend_hash_num_elements		215252	0					
ANR	216175	ArgumentList	& parent_ce -> constants_table		215252	1					
ANR	216176	Argument	& parent_ce -> constants_table		215252	0					
ANR	216177	UnaryOperationExpression	& parent_ce -> constants_table		215252	0					
ANR	216178	UnaryOperator	&		215252	0					
ANR	216179	PtrMemberAccess	parent_ce -> constants_table		215252	1					
ANR	216180	Identifier	parent_ce		215252	0					
ANR	216181	Identifier	constants_table		215252	1					
ANR	216182	Argument	0		215252	2					
ANR	216183	PrimaryExpression	0		215252	0					
ANR	216184	Statement	ZEND_HASH_FOREACH_STR_KEY_VAL	866:2:30651:30679	215252	1	True				
ANR	216185	Statement	(	866:31:30680:30680	215252	2	True				
ANR	216186	Statement	&	866:32:30681:30681	215252	3	True				
ANR	216187	Statement	parent_ce	866:33:30682:30690	215252	4	True				
ANR	216188	Statement	->	866:42:30691:30692	215252	5	True				
ANR	216189	Statement	constants_table	866:44:30693:30707	215252	6	True				
ANR	216190	Statement	","	866:59:30708:30708	215252	7	True				
ANR	216191	Statement	key	866:61:30710:30712	215252	8	True				
ANR	216192	Statement	","	866:64:30713:30713	215252	9	True				
ANR	216193	Statement	zv	866:66:30715:30716	215252	10	True				
ANR	216194	Statement	)	866:68:30717:30717	215252	11	True				
ANR	216195	CompoundStatement		146:70:5244:5244	215252	12					
ANR	216196	ExpressionStatement	"do_inherit_class_constant ( key , zv , ce , parent_ce )"	867:3:30724:30773	215252	0	True				
ANR	216197	CallExpression	"do_inherit_class_constant ( key , zv , ce , parent_ce )"		215252	0					
ANR	216198	Callee	do_inherit_class_constant		215252	0					
ANR	216199	Identifier	do_inherit_class_constant		215252	0					
ANR	216200	ArgumentList	key		215252	1					
ANR	216201	Argument	key		215252	0					
ANR	216202	Identifier	key		215252	0					
ANR	216203	Argument	zv		215252	1					
ANR	216204	Identifier	zv		215252	0					
ANR	216205	Argument	ce		215252	2					
ANR	216206	Identifier	ce		215252	0					
ANR	216207	Argument	parent_ce		215252	3					
ANR	216208	Identifier	parent_ce		215252	0					
ANR	216209	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	868:4:30779:30802	215252	13	True				
ANR	216210	CallExpression	ZEND_HASH_FOREACH_END ( )		215252	0					
ANR	216211	Callee	ZEND_HASH_FOREACH_END		215252	0					
ANR	216212	Identifier	ZEND_HASH_FOREACH_END		215252	0					
ANR	216213	ArgumentList			215252	1					
ANR	216214	IfStatement	if ( zend_hash_num_elements ( & parent_ce -> function_table ) )		215252	22					
ANR	216215	Condition	zend_hash_num_elements ( & parent_ce -> function_table )	871:5:30813:30862	215252	0	True				
ANR	216216	CallExpression	zend_hash_num_elements ( & parent_ce -> function_table )		215252	0					
ANR	216217	Callee	zend_hash_num_elements		215252	0					
ANR	216218	Identifier	zend_hash_num_elements		215252	0					
ANR	216219	ArgumentList	& parent_ce -> function_table		215252	1					
ANR	216220	Argument	& parent_ce -> function_table		215252	0					
ANR	216221	UnaryOperationExpression	& parent_ce -> function_table		215252	0					
ANR	216222	UnaryOperator	&		215252	0					
ANR	216223	PtrMemberAccess	parent_ce -> function_table		215252	1					
ANR	216224	Identifier	parent_ce		215252	0					
ANR	216225	Identifier	function_table		215252	1					
ANR	216226	CompoundStatement		151:57:5390:5390	215252	1					
ANR	216227	ExpressionStatement	"zend_hash_extend ( & ce -> function_table , zend_hash_num_elements ( & ce -> function_table ) + zend_hash_num_elements ( & parent_ce -> function_table ) , 0 )"	872:2:30869:31013	215252	0	True				
ANR	216228	CallExpression	"zend_hash_extend ( & ce -> function_table , zend_hash_num_elements ( & ce -> function_table ) + zend_hash_num_elements ( & parent_ce -> function_table ) , 0 )"		215252	0					
ANR	216229	Callee	zend_hash_extend		215252	0					
ANR	216230	Identifier	zend_hash_extend		215252	0					
ANR	216231	ArgumentList	& ce -> function_table		215252	1					
ANR	216232	Argument	& ce -> function_table		215252	0					
ANR	216233	UnaryOperationExpression	& ce -> function_table		215252	0					
ANR	216234	UnaryOperator	&		215252	0					
ANR	216235	PtrMemberAccess	ce -> function_table		215252	1					
ANR	216236	Identifier	ce		215252	0					
ANR	216237	Identifier	function_table		215252	1					
ANR	216238	Argument	zend_hash_num_elements ( & ce -> function_table ) + zend_hash_num_elements ( & parent_ce -> function_table )		215252	1					
ANR	216239	AdditiveExpression	zend_hash_num_elements ( & ce -> function_table ) + zend_hash_num_elements ( & parent_ce -> function_table )		215252	0		+			
ANR	216240	CallExpression	zend_hash_num_elements ( & ce -> function_table )		215252	0					
ANR	216241	Callee	zend_hash_num_elements		215252	0					
ANR	216242	Identifier	zend_hash_num_elements		215252	0					
ANR	216243	ArgumentList	& ce -> function_table		215252	1					
ANR	216244	Argument	& ce -> function_table		215252	0					
ANR	216245	UnaryOperationExpression	& ce -> function_table		215252	0					
ANR	216246	UnaryOperator	&		215252	0					
ANR	216247	PtrMemberAccess	ce -> function_table		215252	1					
ANR	216248	Identifier	ce		215252	0					
ANR	216249	Identifier	function_table		215252	1					
ANR	216250	CallExpression	zend_hash_num_elements ( & parent_ce -> function_table )		215252	1					
ANR	216251	Callee	zend_hash_num_elements		215252	0					
ANR	216252	Identifier	zend_hash_num_elements		215252	0					
ANR	216253	ArgumentList	& parent_ce -> function_table		215252	1					
ANR	216254	Argument	& parent_ce -> function_table		215252	0					
ANR	216255	UnaryOperationExpression	& parent_ce -> function_table		215252	0					
ANR	216256	UnaryOperator	&		215252	0					
ANR	216257	PtrMemberAccess	parent_ce -> function_table		215252	1					
ANR	216258	Identifier	parent_ce		215252	0					
ANR	216259	Identifier	function_table		215252	1					
ANR	216260	Argument	0		215252	2					
ANR	216261	PrimaryExpression	0		215252	0					
ANR	216262	Statement	ZEND_HASH_FOREACH_STR_KEY_PTR	876:2:31018:31046	215252	1	True				
ANR	216263	Statement	(	876:31:31047:31047	215252	2	True				
ANR	216264	Statement	&	876:32:31048:31048	215252	3	True				
ANR	216265	Statement	parent_ce	876:33:31049:31057	215252	4	True				
ANR	216266	Statement	->	876:42:31058:31059	215252	5	True				
ANR	216267	Statement	function_table	876:44:31060:31073	215252	6	True				
ANR	216268	Statement	","	876:58:31074:31074	215252	7	True				
ANR	216269	Statement	key	876:60:31076:31078	215252	8	True				
ANR	216270	Statement	","	876:63:31079:31079	215252	9	True				
ANR	216271	Statement	func	876:65:31081:31084	215252	10	True				
ANR	216272	Statement	)	876:69:31085:31085	215252	11	True				
ANR	216273	CompoundStatement		157:3:5617:5675	215252	12					
ANR	216274	IdentifierDeclStatement	"zend_function * new_func = do_inherit_method ( key , func , ce ) ;"	877:3:31092:31150	215252	0	True				
ANR	216275	IdentifierDecl	"* new_func = do_inherit_method ( key , func , ce )"		215252	0					
ANR	216276	IdentifierDeclType	zend_function *		215252	0					
ANR	216277	Identifier	new_func		215252	1					
ANR	216278	AssignmentExpression	"* new_func = do_inherit_method ( key , func , ce )"		215252	2		=			
ANR	216279	Identifier	new_func		215252	0					
ANR	216280	CallExpression	"do_inherit_method ( key , func , ce )"		215252	1					
ANR	216281	Callee	do_inherit_method		215252	0					
ANR	216282	Identifier	do_inherit_method		215252	0					
ANR	216283	ArgumentList	key		215252	1					
ANR	216284	Argument	key		215252	0					
ANR	216285	Identifier	key		215252	0					
ANR	216286	Argument	func		215252	1					
ANR	216287	Identifier	func		215252	0					
ANR	216288	Argument	ce		215252	2					
ANR	216289	Identifier	ce		215252	0					
ANR	216290	IfStatement	if ( new_func )		215252	1					
ANR	216291	Condition	new_func	879:7:31160:31167	215252	0	True				
ANR	216292	Identifier	new_func		215252	0					
ANR	216293	CompoundStatement		159:17:5695:5695	215252	1					
ANR	216294	ExpressionStatement	"_zend_hash_append_ptr ( & ce -> function_table , key , new_func )"	880:4:31176:31233	215252	0	True				
ANR	216295	CallExpression	"_zend_hash_append_ptr ( & ce -> function_table , key , new_func )"		215252	0					
ANR	216296	Callee	_zend_hash_append_ptr		215252	0					
ANR	216297	Identifier	_zend_hash_append_ptr		215252	0					
ANR	216298	ArgumentList	& ce -> function_table		215252	1					
ANR	216299	Argument	& ce -> function_table		215252	0					
ANR	216300	UnaryOperationExpression	& ce -> function_table		215252	0					
ANR	216301	UnaryOperator	&		215252	0					
ANR	216302	PtrMemberAccess	ce -> function_table		215252	1					
ANR	216303	Identifier	ce		215252	0					
ANR	216304	Identifier	function_table		215252	1					
ANR	216305	Argument	key		215252	1					
ANR	216306	Identifier	key		215252	0					
ANR	216307	Argument	new_func		215252	2					
ANR	216308	Identifier	new_func		215252	0					
ANR	216309	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	882:4:31244:31267	215252	13	True				
ANR	216310	CallExpression	ZEND_HASH_FOREACH_END ( )		215252	0					
ANR	216311	Callee	ZEND_HASH_FOREACH_END		215252	0					
ANR	216312	Identifier	ZEND_HASH_FOREACH_END		215252	0					
ANR	216313	ArgumentList			215252	1					
ANR	216314	ExpressionStatement	do_inherit_parent_constructor ( ce )	885:1:31274:31307	215252	23	True				
ANR	216315	CallExpression	do_inherit_parent_constructor ( ce )		215252	0					
ANR	216316	Callee	do_inherit_parent_constructor		215252	0					
ANR	216317	Identifier	do_inherit_parent_constructor		215252	0					
ANR	216318	ArgumentList	ce		215252	1					
ANR	216319	Argument	ce		215252	0					
ANR	216320	Identifier	ce		215252	0					
ANR	216321	IfStatement	if ( ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS && ce -> type == ZEND_INTERNAL_CLASS )		215252	24					
ANR	216322	Condition	ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS && ce -> type == ZEND_INTERNAL_CLASS	887:5:31315:31396	215252	0	True				
ANR	216323	AndExpression	ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS && ce -> type == ZEND_INTERNAL_CLASS		215252	0		&&			
ANR	216324	BitAndExpression	ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		215252	0		&			
ANR	216325	PtrMemberAccess	ce -> ce_flags		215252	0					
ANR	216326	Identifier	ce		215252	0					
ANR	216327	Identifier	ce_flags		215252	1					
ANR	216328	Identifier	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		215252	1					
ANR	216329	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		215252	1		==			
ANR	216330	PtrMemberAccess	ce -> type		215252	0					
ANR	216331	Identifier	ce		215252	0					
ANR	216332	Identifier	type		215252	1					
ANR	216333	Identifier	ZEND_INTERNAL_CLASS		215252	1					
ANR	216334	CompoundStatement		167:89:5924:5924	215252	1					
ANR	216335	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_EXPLICIT_ABSTRACT_CLASS	888:2:31403:31451	215252	0	True				
ANR	216336	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		215252	0		|=			
ANR	216337	PtrMemberAccess	ce -> ce_flags		215252	0					
ANR	216338	Identifier	ce		215252	0					
ANR	216339	Identifier	ce_flags		215252	1					
ANR	216340	Identifier	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		215252	1					
ANR	216341	ElseStatement	else		215252	0					
ANR	216342	IfStatement	if ( ! ( ce -> ce_flags & ( ZEND_ACC_IMPLEMENT_INTERFACES | ZEND_ACC_IMPLEMENT_TRAITS ) ) )		215252	0					
ANR	216343	Condition	! ( ce -> ce_flags & ( ZEND_ACC_IMPLEMENT_INTERFACES | ZEND_ACC_IMPLEMENT_TRAITS ) )	889:12:31465:31539	215252	0	True				
ANR	216344	UnaryOperationExpression	! ( ce -> ce_flags & ( ZEND_ACC_IMPLEMENT_INTERFACES | ZEND_ACC_IMPLEMENT_TRAITS ) )		215252	0					
ANR	216345	UnaryOperator	!		215252	0					
ANR	216346	BitAndExpression	ce -> ce_flags & ( ZEND_ACC_IMPLEMENT_INTERFACES | ZEND_ACC_IMPLEMENT_TRAITS )		215252	1		&			
ANR	216347	PtrMemberAccess	ce -> ce_flags		215252	0					
ANR	216348	Identifier	ce		215252	0					
ANR	216349	Identifier	ce_flags		215252	1					
ANR	216350	InclusiveOrExpression	ZEND_ACC_IMPLEMENT_INTERFACES | ZEND_ACC_IMPLEMENT_TRAITS		215252	1		|			
ANR	216351	Identifier	ZEND_ACC_IMPLEMENT_INTERFACES		215252	0					
ANR	216352	Identifier	ZEND_ACC_IMPLEMENT_TRAITS		215252	1					
ANR	216353	CompoundStatement		169:89:6067:6067	215252	1					
ANR	216354	ExpressionStatement	zend_verify_abstract_class ( ce )	891:2:31625:31655	215252	0	True				
ANR	216355	CallExpression	zend_verify_abstract_class ( ce )		215252	0					
ANR	216356	Callee	zend_verify_abstract_class		215252	0					
ANR	216357	Identifier	zend_verify_abstract_class		215252	0					
ANR	216358	ArgumentList	ce		215252	1					
ANR	216359	Argument	ce		215252	0					
ANR	216360	Identifier	ce		215252	0					
ANR	216361	ExpressionStatement	ce -> ce_flags |= parent_ce -> ce_flags & ( ZEND_HAS_STATIC_IN_METHODS | ZEND_ACC_USE_GUARDS )	893:1:31661:31749	215252	25	True				
ANR	216362	AssignmentExpression	ce -> ce_flags |= parent_ce -> ce_flags & ( ZEND_HAS_STATIC_IN_METHODS | ZEND_ACC_USE_GUARDS )		215252	0		|=			
ANR	216363	PtrMemberAccess	ce -> ce_flags		215252	0					
ANR	216364	Identifier	ce		215252	0					
ANR	216365	Identifier	ce_flags		215252	1					
ANR	216366	BitAndExpression	parent_ce -> ce_flags & ( ZEND_HAS_STATIC_IN_METHODS | ZEND_ACC_USE_GUARDS )		215252	1		&			
ANR	216367	PtrMemberAccess	parent_ce -> ce_flags		215252	0					
ANR	216368	Identifier	parent_ce		215252	0					
ANR	216369	Identifier	ce_flags		215252	1					
ANR	216370	InclusiveOrExpression	ZEND_HAS_STATIC_IN_METHODS | ZEND_ACC_USE_GUARDS		215252	1		|			
ANR	216371	Identifier	ZEND_HAS_STATIC_IN_METHODS		215252	0					
ANR	216372	Identifier	ZEND_ACC_USE_GUARDS		215252	1					
ANR	216373	ReturnType	ZEND_API void		215252	1					
ANR	216374	Identifier	zend_do_inheritance		215252	2					
ANR	216375	ParameterList	"zend_class_entry * ce , zend_class_entry * parent_ce"		215252	3					
ANR	216376	Parameter	zend_class_entry * ce	720:34:25413:25432	215252	0	True				
ANR	216377	ParameterType	zend_class_entry *		215252	0					
ANR	216378	Identifier	ce		215252	1					
ANR	216379	Parameter	zend_class_entry * parent_ce	720:56:25435:25461	215252	1	True				
ANR	216380	ParameterType	zend_class_entry *		215252	0					
ANR	216381	Identifier	parent_ce		215252	1					
ANR	216382	CFGEntryNode	ENTRY		215252		True				
ANR	216383	CFGExitNode	EXIT		215252		True				
ANR	216384	Symbol	parent_ce -> type		215252						
ANR	216385	Symbol	ce -> default_properties_count		215252						
ANR	216386	Symbol	& parent_ce -> constants_table		215252						
ANR	216387	Symbol	Z_CONSTANT_P		215252						
ANR	216388	Symbol	E_COMPILE_ERROR		215252						
ANR	216389	Symbol	ZEND_ACC_USE_GUARDS		215252						
ANR	216390	Symbol	* ce		215252						
ANR	216391	Symbol	ce -> static_members_table		215252						
ANR	216392	Symbol	new_func		215252						
ANR	216393	Symbol	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		215252						
ANR	216394	Symbol	* property_info		215252						
ANR	216395	Symbol	ZEND_USER_CLASS		215252						
ANR	216396	Symbol	ZEND_ACC_INTERFACE		215252						
ANR	216397	Symbol	ce -> name		215252						
ANR	216398	Symbol	ZEND_INTERNAL_CLASS		215252						
ANR	216399	Symbol	ce -> parent		215252						
ANR	216400	Symbol	ce -> default_properties_table		215252						
ANR	216401	Symbol	ZEND_HAS_STATIC_IN_METHODS		215252						
ANR	216402	Symbol	parent_ce -> name		215252						
ANR	216403	Symbol	ce -> default_static_members_table		215252						
ANR	216404	Symbol	property_info -> ce		215252						
ANR	216405	Symbol	ZEND_ACC_TRAIT		215252						
ANR	216406	Symbol	ce -> ce_flags		215252						
ANR	216407	Symbol	ZEND_ACC_IMPLEMENT_INTERFACES		215252						
ANR	216408	Symbol	& ce -> properties_info		215252						
ANR	216409	Symbol	parent_ce -> default_properties_count		215252						
ANR	216410	Symbol	* parent_ce		215252						
ANR	216411	Symbol	zv		215252						
ANR	216412	Symbol	Z_ISREF_P		215252						
ANR	216413	Symbol	~ZEND_ACC_CONSTANTS_UPDATED		215252						
ANR	216414	Symbol	ce -> type		215252						
ANR	216415	Symbol	Z_OPT_CONSTANT_P		215252						
ANR	216416	Symbol	property_info -> offset		215252						
ANR	216417	Symbol	dst		215252						
ANR	216418	Symbol	ce -> default_static_members_count		215252						
ANR	216419	Symbol	ZEND_ACC_IMPLEMENT_TRAITS		215252						
ANR	216420	Symbol	parent_ce -> ce_flags		215252						
ANR	216421	Symbol	& ce -> function_table		215252						
ANR	216422	Symbol	ZEND_ACC_FINAL		215252						
ANR	216423	Symbol	UNEXPECTED		215252						
ANR	216424	Symbol	parent_ce -> default_static_members_count		215252						
ANR	216425	Symbol	ZEND_ACC_STATIC		215252						
ANR	216426	Symbol	end		215252						
ANR	216427	Symbol	key		215252						
ANR	216428	Symbol	table		215252						
ANR	216429	Symbol	property_info -> flags		215252						
ANR	216430	Symbol	parent_ce -> default_properties_table		215252						
ANR	216431	Symbol	property_info		215252						
ANR	216432	Symbol	ce		215252						
ANR	216433	Symbol	src		215252						
ANR	216434	Symbol	zend_hash_num_elements		215252						
ANR	216435	Symbol	& parent_ce -> properties_info		215252						
ANR	216436	Symbol	& parent_ce -> function_table		215252						
ANR	216437	Symbol	ZEND_ACC_EXPLICIT_ABSTRACT_CLASS		215252						
ANR	216438	Symbol	do_inherit_method		215252						
ANR	216439	Symbol	ZSTR_VAL		215252						
ANR	216440	Symbol	parent_ce		215252						
ANR	216441	Symbol	& ce -> constants_table		215252						
ANR	216442	Symbol	func		215252						
ANR	216443	Symbol	parent_ce -> default_static_members_table		215252						
ANR	216444	Symbol	Z_REFVAL_P		215252						
ANR	216445	Symbol	pemalloc		215252						
ANR	216446	Function	do_inherit_constant_check	897:0:31764:32352							
ANR	216447	FunctionDef	"do_inherit_constant_check (HashTable * child_constants_table , zval * parent_constant , zend_string * name , const zend_class_entry * iface)"		216446	0					
ANR	216448	CompoundStatement		898:0:31924:32352	216446	0					
ANR	216449	IdentifierDeclStatement	zval * old_constant ;	899:1:31927:31945	216446	0	True				
ANR	216450	IdentifierDecl	* old_constant		216446	0					
ANR	216451	IdentifierDeclType	zval *		216446	0					
ANR	216452	Identifier	old_constant		216446	1					
ANR	216453	IfStatement	"if ( ( old_constant = zend_hash_find ( child_constants_table , name ) ) != NULL )"		216446	1					
ANR	216454	Condition	"( old_constant = zend_hash_find ( child_constants_table , name ) ) != NULL"	901:5:31953:32020	216446	0	True				
ANR	216455	EqualityExpression	"( old_constant = zend_hash_find ( child_constants_table , name ) ) != NULL"		216446	0		!=			
ANR	216456	AssignmentExpression	"old_constant = zend_hash_find ( child_constants_table , name )"		216446	0		=			
ANR	216457	Identifier	old_constant		216446	0					
ANR	216458	CallExpression	"zend_hash_find ( child_constants_table , name )"		216446	1					
ANR	216459	Callee	zend_hash_find		216446	0					
ANR	216460	Identifier	zend_hash_find		216446	0					
ANR	216461	ArgumentList	child_constants_table		216446	1					
ANR	216462	Argument	child_constants_table		216446	0					
ANR	216463	Identifier	child_constants_table		216446	0					
ANR	216464	Argument	name		216446	1					
ANR	216465	Identifier	name		216446	0					
ANR	216466	Identifier	NULL		216446	1					
ANR	216467	CompoundStatement		4:75:98:98	216446	1					
ANR	216468	IfStatement	if ( ! Z_ISREF_P ( old_constant ) || ! Z_ISREF_P ( parent_constant ) || Z_REFVAL_P ( old_constant ) != Z_REFVAL_P ( parent_constant ) )		216446	0					
ANR	216469	Condition	! Z_ISREF_P ( old_constant ) || ! Z_ISREF_P ( parent_constant ) || Z_REFVAL_P ( old_constant ) != Z_REFVAL_P ( parent_constant )	902:6:32031:32156	216446	0	True				
ANR	216470	OrExpression	! Z_ISREF_P ( old_constant ) || ! Z_ISREF_P ( parent_constant ) || Z_REFVAL_P ( old_constant ) != Z_REFVAL_P ( parent_constant )		216446	0		||			
ANR	216471	UnaryOperationExpression	! Z_ISREF_P ( old_constant )		216446	0					
ANR	216472	UnaryOperator	!		216446	0					
ANR	216473	CallExpression	Z_ISREF_P ( old_constant )		216446	1					
ANR	216474	Callee	Z_ISREF_P		216446	0					
ANR	216475	Identifier	Z_ISREF_P		216446	0					
ANR	216476	ArgumentList	old_constant		216446	1					
ANR	216477	Argument	old_constant		216446	0					
ANR	216478	Identifier	old_constant		216446	0					
ANR	216479	OrExpression	! Z_ISREF_P ( parent_constant ) || Z_REFVAL_P ( old_constant ) != Z_REFVAL_P ( parent_constant )		216446	1		||			
ANR	216480	UnaryOperationExpression	! Z_ISREF_P ( parent_constant )		216446	0					
ANR	216481	UnaryOperator	!		216446	0					
ANR	216482	CallExpression	Z_ISREF_P ( parent_constant )		216446	1					
ANR	216483	Callee	Z_ISREF_P		216446	0					
ANR	216484	Identifier	Z_ISREF_P		216446	0					
ANR	216485	ArgumentList	parent_constant		216446	1					
ANR	216486	Argument	parent_constant		216446	0					
ANR	216487	Identifier	parent_constant		216446	0					
ANR	216488	EqualityExpression	Z_REFVAL_P ( old_constant ) != Z_REFVAL_P ( parent_constant )		216446	1		!=			
ANR	216489	CallExpression	Z_REFVAL_P ( old_constant )		216446	0					
ANR	216490	Callee	Z_REFVAL_P		216446	0					
ANR	216491	Identifier	Z_REFVAL_P		216446	0					
ANR	216492	ArgumentList	old_constant		216446	1					
ANR	216493	Argument	old_constant		216446	0					
ANR	216494	Identifier	old_constant		216446	0					
ANR	216495	CallExpression	Z_REFVAL_P ( parent_constant )		216446	1					
ANR	216496	Callee	Z_REFVAL_P		216446	0					
ANR	216497	Identifier	Z_REFVAL_P		216446	0					
ANR	216498	ArgumentList	parent_constant		216446	1					
ANR	216499	Argument	parent_constant		216446	0					
ANR	216500	Identifier	parent_constant		216446	0					
ANR	216501	CompoundStatement		7:63:234:234	216446	1					
ANR	216502	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot inherit previously-inherited or override constant %s from interface %s"" , ZSTR_VAL ( name ) , ZSTR_VAL ( iface -> name ) )"	905:3:32164:32320	216446	0	True				
ANR	216503	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Cannot inherit previously-inherited or override constant %s from interface %s"" , ZSTR_VAL ( name ) , ZSTR_VAL ( iface -> name ) )"		216446	0					
ANR	216504	Callee	zend_error_noreturn		216446	0					
ANR	216505	Identifier	zend_error_noreturn		216446	0					
ANR	216506	ArgumentList	E_COMPILE_ERROR		216446	1					
ANR	216507	Argument	E_COMPILE_ERROR		216446	0					
ANR	216508	Identifier	E_COMPILE_ERROR		216446	0					
ANR	216509	Argument	"""Cannot inherit previously-inherited or override constant %s from interface %s"""		216446	1					
ANR	216510	PrimaryExpression	"""Cannot inherit previously-inherited or override constant %s from interface %s"""		216446	0					
ANR	216511	Argument	ZSTR_VAL ( name )		216446	2					
ANR	216512	CallExpression	ZSTR_VAL ( name )		216446	0					
ANR	216513	Callee	ZSTR_VAL		216446	0					
ANR	216514	Identifier	ZSTR_VAL		216446	0					
ANR	216515	ArgumentList	name		216446	1					
ANR	216516	Argument	name		216446	0					
ANR	216517	Identifier	name		216446	0					
ANR	216518	Argument	ZSTR_VAL ( iface -> name )		216446	3					
ANR	216519	CallExpression	ZSTR_VAL ( iface -> name )		216446	0					
ANR	216520	Callee	ZSTR_VAL		216446	0					
ANR	216521	Identifier	ZSTR_VAL		216446	0					
ANR	216522	ArgumentList	iface -> name		216446	1					
ANR	216523	Argument	iface -> name		216446	0					
ANR	216524	PtrMemberAccess	iface -> name		216446	0					
ANR	216525	Identifier	iface		216446	0					
ANR	216526	Identifier	name		216446	1					
ANR	216527	ReturnStatement	return 0 ;	907:2:32328:32336	216446	1	True				
ANR	216528	PrimaryExpression	0		216446	0					
ANR	216529	ReturnStatement	return 1 ;	909:1:32342:32350	216446	2	True				
ANR	216530	PrimaryExpression	1		216446	0					
ANR	216531	ReturnType	static zend_bool		216446	1					
ANR	216532	Identifier	do_inherit_constant_check		216446	2					
ANR	216533	ParameterList	"HashTable * child_constants_table , zval * parent_constant , zend_string * name , const zend_class_entry * iface"		216446	3					
ANR	216534	Parameter	HashTable * child_constants_table	897:43:31807:31838	216446	0	True				
ANR	216535	ParameterType	HashTable *		216446	0					
ANR	216536	Identifier	child_constants_table		216446	1					
ANR	216537	Parameter	zval * parent_constant	897:77:31841:31861	216446	1	True				
ANR	216538	ParameterType	zval *		216446	0					
ANR	216539	Identifier	parent_constant		216446	1					
ANR	216540	Parameter	zend_string * name	897:100:31864:31880	216446	2	True				
ANR	216541	ParameterType	zend_string *		216446	0					
ANR	216542	Identifier	name		216446	1					
ANR	216543	Parameter	const zend_class_entry * iface	897:119:31883:31911	216446	3	True				
ANR	216544	ParameterType	const zend_class_entry *		216446	0					
ANR	216545	Identifier	iface		216446	1					
ANR	216546	CFGEntryNode	ENTRY		216446		True				
ANR	216547	CFGExitNode	EXIT		216446		True				
ANR	216548	Symbol	old_constant		216446						
ANR	216549	Symbol	NULL		216446						
ANR	216550	Symbol	E_COMPILE_ERROR		216446						
ANR	216551	Symbol	* iface		216446						
ANR	216552	Symbol	parent_constant		216446						
ANR	216553	Symbol	ZSTR_VAL		216446						
ANR	216554	Symbol	iface		216446						
ANR	216555	Symbol	zend_hash_find		216446						
ANR	216556	Symbol	iface -> name		216446						
ANR	216557	Symbol	child_constants_table		216446						
ANR	216558	Symbol	Z_REFVAL_P		216446						
ANR	216559	Symbol	name		216446						
ANR	216560	Symbol	Z_ISREF_P		216446						
ANR	216561	Function	do_inherit_iface_constant	913:0:32365:32880							
ANR	216562	FunctionDef	"do_inherit_iface_constant (zend_string * name , zval * zv , zend_class_entry * ce , zend_class_entry * iface)"		216561	0					
ANR	216563	CompoundStatement		914:0:32489:32880	216561	0					
ANR	216564	IfStatement	"if ( do_inherit_constant_check ( & ce -> constants_table , zv , name , iface ) )"		216561	0					
ANR	216565	Condition	"do_inherit_constant_check ( & ce -> constants_table , zv , name , iface )"	915:5:32496:32559	216561	0	True				
ANR	216566	CallExpression	"do_inherit_constant_check ( & ce -> constants_table , zv , name , iface )"		216561	0					
ANR	216567	Callee	do_inherit_constant_check		216561	0					
ANR	216568	Identifier	do_inherit_constant_check		216561	0					
ANR	216569	ArgumentList	& ce -> constants_table		216561	1					
ANR	216570	Argument	& ce -> constants_table		216561	0					
ANR	216571	UnaryOperationExpression	& ce -> constants_table		216561	0					
ANR	216572	UnaryOperator	&		216561	0					
ANR	216573	PtrMemberAccess	ce -> constants_table		216561	1					
ANR	216574	Identifier	ce		216561	0					
ANR	216575	Identifier	constants_table		216561	1					
ANR	216576	Argument	zv		216561	1					
ANR	216577	Identifier	zv		216561	0					
ANR	216578	Argument	name		216561	2					
ANR	216579	Identifier	name		216561	0					
ANR	216580	Argument	iface		216561	3					
ANR	216581	Identifier	iface		216561	0					
ANR	216582	CompoundStatement		2:71:72:72	216561	1					
ANR	216583	IfStatement	if ( ! Z_ISREF_P ( zv ) )		216561	0					
ANR	216584	Condition	! Z_ISREF_P ( zv )	916:6:32570:32583	216561	0	True				
ANR	216585	UnaryOperationExpression	! Z_ISREF_P ( zv )		216561	0					
ANR	216586	UnaryOperator	!		216561	0					
ANR	216587	CallExpression	Z_ISREF_P ( zv )		216561	1					
ANR	216588	Callee	Z_ISREF_P		216561	0					
ANR	216589	Identifier	Z_ISREF_P		216561	0					
ANR	216590	ArgumentList	zv		216561	1					
ANR	216591	Argument	zv		216561	0					
ANR	216592	Identifier	zv		216561	0					
ANR	216593	CompoundStatement		3:22:96:96	216561	1					
ANR	216594	IfStatement	if ( iface -> type == ZEND_INTERNAL_CLASS )		216561	0					
ANR	216595	Condition	iface -> type == ZEND_INTERNAL_CLASS	917:7:32595:32628	216561	0	True				
ANR	216596	EqualityExpression	iface -> type == ZEND_INTERNAL_CLASS		216561	0		==			
ANR	216597	PtrMemberAccess	iface -> type		216561	0					
ANR	216598	Identifier	iface		216561	0					
ANR	216599	Identifier	type		216561	1					
ANR	216600	Identifier	ZEND_INTERNAL_CLASS		216561	1					
ANR	216601	CompoundStatement		4:43:141:141	216561	1					
ANR	216602	ExpressionStatement	"ZVAL_NEW_PERSISTENT_REF ( zv , zv )"	918:4:32637:32668	216561	0	True				
ANR	216603	CallExpression	"ZVAL_NEW_PERSISTENT_REF ( zv , zv )"		216561	0					
ANR	216604	Callee	ZVAL_NEW_PERSISTENT_REF		216561	0					
ANR	216605	Identifier	ZVAL_NEW_PERSISTENT_REF		216561	0					
ANR	216606	ArgumentList	zv		216561	1					
ANR	216607	Argument	zv		216561	0					
ANR	216608	Identifier	zv		216561	0					
ANR	216609	Argument	zv		216561	1					
ANR	216610	Identifier	zv		216561	0					
ANR	216611	ElseStatement	else		216561	0					
ANR	216612	CompoundStatement		6:10:190:190	216561	0					
ANR	216613	ExpressionStatement	"ZVAL_NEW_REF ( zv , zv )"	920:4:32686:32706	216561	0	True				
ANR	216614	CallExpression	"ZVAL_NEW_REF ( zv , zv )"		216561	0					
ANR	216615	Callee	ZVAL_NEW_REF		216561	0					
ANR	216616	Identifier	ZVAL_NEW_REF		216561	0					
ANR	216617	ArgumentList	zv		216561	1					
ANR	216618	Argument	zv		216561	0					
ANR	216619	Identifier	zv		216561	0					
ANR	216620	Argument	zv		216561	1					
ANR	216621	Identifier	zv		216561	0					
ANR	216622	ExpressionStatement	Z_ADDREF_P ( zv )	923:2:32719:32733	216561	1	True				
ANR	216623	CallExpression	Z_ADDREF_P ( zv )		216561	0					
ANR	216624	Callee	Z_ADDREF_P		216561	0					
ANR	216625	Identifier	Z_ADDREF_P		216561	0					
ANR	216626	ArgumentList	zv		216561	1					
ANR	216627	Argument	zv		216561	0					
ANR	216628	Identifier	zv		216561	0					
ANR	216629	IfStatement	if ( Z_CONSTANT_P ( Z_REFVAL_P ( zv ) ) )		216561	2					
ANR	216630	Condition	Z_CONSTANT_P ( Z_REFVAL_P ( zv ) )	924:6:32741:32768	216561	0	True				
ANR	216631	CallExpression	Z_CONSTANT_P ( Z_REFVAL_P ( zv ) )		216561	0					
ANR	216632	Callee	Z_CONSTANT_P		216561	0					
ANR	216633	Identifier	Z_CONSTANT_P		216561	0					
ANR	216634	ArgumentList	Z_REFVAL_P ( zv )		216561	1					
ANR	216635	Argument	Z_REFVAL_P ( zv )		216561	0					
ANR	216636	CallExpression	Z_REFVAL_P ( zv )		216561	0					
ANR	216637	Callee	Z_REFVAL_P		216561	0					
ANR	216638	Identifier	Z_REFVAL_P		216561	0					
ANR	216639	ArgumentList	zv		216561	1					
ANR	216640	Argument	zv		216561	0					
ANR	216641	Identifier	zv		216561	0					
ANR	216642	CompoundStatement		11:36:281:281	216561	1					
ANR	216643	ExpressionStatement	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED	925:3:32776:32819	216561	0	True				
ANR	216644	AssignmentExpression	ce -> ce_flags &= ~ZEND_ACC_CONSTANTS_UPDATED		216561	0		&=			
ANR	216645	PtrMemberAccess	ce -> ce_flags		216561	0					
ANR	216646	Identifier	ce		216561	0					
ANR	216647	Identifier	ce_flags		216561	1					
ANR	216648	Identifier	~ZEND_ACC_CONSTANTS_UPDATED		216561	1					
ANR	216649	ExpressionStatement	"zend_hash_update ( & ce -> constants_table , name , zv )"	927:2:32827:32875	216561	3	True				
ANR	216650	CallExpression	"zend_hash_update ( & ce -> constants_table , name , zv )"		216561	0					
ANR	216651	Callee	zend_hash_update		216561	0					
ANR	216652	Identifier	zend_hash_update		216561	0					
ANR	216653	ArgumentList	& ce -> constants_table		216561	1					
ANR	216654	Argument	& ce -> constants_table		216561	0					
ANR	216655	UnaryOperationExpression	& ce -> constants_table		216561	0					
ANR	216656	UnaryOperator	&		216561	0					
ANR	216657	PtrMemberAccess	ce -> constants_table		216561	1					
ANR	216658	Identifier	ce		216561	0					
ANR	216659	Identifier	constants_table		216561	1					
ANR	216660	Argument	name		216561	1					
ANR	216661	Identifier	name		216561	0					
ANR	216662	Argument	zv		216561	2					
ANR	216663	Identifier	zv		216561	0					
ANR	216664	ReturnType	static void		216561	1					
ANR	216665	Identifier	do_inherit_iface_constant		216561	2					
ANR	216666	ParameterList	"zend_string * name , zval * zv , zend_class_entry * ce , zend_class_entry * iface"		216561	3					
ANR	216667	Parameter	zend_string * name	913:38:32403:32419	216561	0	True				
ANR	216668	ParameterType	zend_string *		216561	0					
ANR	216669	Identifier	name		216561	1					
ANR	216670	Parameter	zval * zv	913:57:32422:32429	216561	1	True				
ANR	216671	ParameterType	zval *		216561	0					
ANR	216672	Identifier	zv		216561	1					
ANR	216673	Parameter	zend_class_entry * ce	913:67:32432:32451	216561	2	True				
ANR	216674	ParameterType	zend_class_entry *		216561	0					
ANR	216675	Identifier	ce		216561	1					
ANR	216676	Parameter	zend_class_entry * iface	913:89:32454:32476	216561	3	True				
ANR	216677	ParameterType	zend_class_entry *		216561	0					
ANR	216678	Identifier	iface		216561	1					
ANR	216679	CFGEntryNode	ENTRY		216561		True				
ANR	216680	CFGExitNode	EXIT		216561		True				
ANR	216681	Symbol	ZEND_INTERNAL_CLASS		216561						
ANR	216682	Symbol	ce		216561						
ANR	216683	Symbol	Z_CONSTANT_P		216561						
ANR	216684	Symbol	* iface		216561						
ANR	216685	Symbol	* ce		216561						
ANR	216686	Symbol	do_inherit_constant_check		216561						
ANR	216687	Symbol	ce -> ce_flags		216561						
ANR	216688	Symbol	iface		216561						
ANR	216689	Symbol	& ce -> constants_table		216561						
ANR	216690	Symbol	Z_REFVAL_P		216561						
ANR	216691	Symbol	name		216561						
ANR	216692	Symbol	iface -> type		216561						
ANR	216693	Symbol	zv		216561						
ANR	216694	Symbol	Z_ISREF_P		216561						
ANR	216695	Symbol	~ZEND_ACC_CONSTANTS_UPDATED		216561						
ANR	216696	Function	zend_do_implement_interface	932:0:32893:34800							
ANR	216697	FunctionDef	"zend_do_implement_interface (zend_class_entry * ce , zend_class_entry * iface)"		216696	0					
ANR	216698	CompoundStatement		933:0:32992:34800	216696	0					
ANR	216699	IdentifierDeclStatement	"uint32_t i , ignore = 0 ;"	934:1:32995:33017	216696	0	True				
ANR	216700	IdentifierDecl	i		216696	0					
ANR	216701	IdentifierDeclType	uint32_t		216696	0					
ANR	216702	Identifier	i		216696	1					
ANR	216703	IdentifierDecl	ignore = 0		216696	1					
ANR	216704	IdentifierDeclType	uint32_t		216696	0					
ANR	216705	Identifier	ignore		216696	1					
ANR	216706	AssignmentExpression	ignore = 0		216696	2		=			
ANR	216707	Identifier	ignore		216696	0					
ANR	216708	PrimaryExpression	0		216696	1					
ANR	216709	IdentifierDeclStatement	uint32_t current_iface_num = ce -> num_interfaces ;	935:1:33020:33067	216696	1	True				
ANR	216710	IdentifierDecl	current_iface_num = ce -> num_interfaces		216696	0					
ANR	216711	IdentifierDeclType	uint32_t		216696	0					
ANR	216712	Identifier	current_iface_num		216696	1					
ANR	216713	AssignmentExpression	current_iface_num = ce -> num_interfaces		216696	2		=			
ANR	216714	Identifier	current_iface_num		216696	0					
ANR	216715	PtrMemberAccess	ce -> num_interfaces		216696	1					
ANR	216716	Identifier	ce		216696	0					
ANR	216717	Identifier	num_interfaces		216696	1					
ANR	216718	IdentifierDeclStatement	uint32_t parent_iface_num = ce -> parent ? ce -> parent -> num_interfaces : 0 ;	936:1:33070:33142	216696	2	True				
ANR	216719	IdentifierDecl	parent_iface_num = ce -> parent ? ce -> parent -> num_interfaces : 0		216696	0					
ANR	216720	IdentifierDeclType	uint32_t		216696	0					
ANR	216721	Identifier	parent_iface_num		216696	1					
ANR	216722	AssignmentExpression	parent_iface_num = ce -> parent ? ce -> parent -> num_interfaces : 0		216696	2		=			
ANR	216723	Identifier	parent_iface_num		216696	0					
ANR	216724	ConditionalExpression	ce -> parent ? ce -> parent -> num_interfaces : 0		216696	1					
ANR	216725	Condition	ce -> parent		216696	0					
ANR	216726	PtrMemberAccess	ce -> parent		216696	0					
ANR	216727	Identifier	ce		216696	0					
ANR	216728	Identifier	parent		216696	1					
ANR	216729	PtrMemberAccess	ce -> parent -> num_interfaces		216696	1					
ANR	216730	PtrMemberAccess	ce -> parent		216696	0					
ANR	216731	Identifier	ce		216696	0					
ANR	216732	Identifier	parent		216696	1					
ANR	216733	Identifier	num_interfaces		216696	1					
ANR	216734	PrimaryExpression	0		216696	2					
ANR	216735	IdentifierDeclStatement	zend_function * func ;	937:1:33145:33164	216696	3	True				
ANR	216736	IdentifierDecl	* func		216696	0					
ANR	216737	IdentifierDeclType	zend_function *		216696	0					
ANR	216738	Identifier	func		216696	1					
ANR	216739	IdentifierDeclStatement	zend_string * key ;	938:1:33167:33183	216696	4	True				
ANR	216740	IdentifierDecl	* key		216696	0					
ANR	216741	IdentifierDeclType	zend_string *		216696	0					
ANR	216742	Identifier	key		216696	1					
ANR	216743	IdentifierDeclStatement	zval * zv ;	939:1:33186:33194	216696	5	True				
ANR	216744	IdentifierDecl	* zv		216696	0					
ANR	216745	IdentifierDeclType	zval *		216696	0					
ANR	216746	Identifier	zv		216696	1					
ANR	216747	ForStatement	for ( i = 0 ; i < ce -> num_interfaces ; i ++ )		216696	6					
ANR	216748	ForInit	i = 0 ;	941:6:33203:33208	216696	0	True				
ANR	216749	AssignmentExpression	i = 0		216696	0		=			
ANR	216750	Identifier	i		216696	0					
ANR	216751	PrimaryExpression	0		216696	1					
ANR	216752	Condition	i < ce -> num_interfaces	941:13:33210:33231	216696	1	True				
ANR	216753	RelationalExpression	i < ce -> num_interfaces		216696	0		<			
ANR	216754	Identifier	i		216696	0					
ANR	216755	PtrMemberAccess	ce -> num_interfaces		216696	1					
ANR	216756	Identifier	ce		216696	0					
ANR	216757	Identifier	num_interfaces		216696	1					
ANR	216758	PostIncDecOperationExpression	i ++	941:37:33234:33236	216696	2	True				
ANR	216759	Identifier	i		216696	0					
ANR	216760	IncDec	++		216696	1					
ANR	216761	CompoundStatement		9:42:246:246	216696	3					
ANR	216762	IfStatement	if ( ce -> interfaces [ i ] == NULL )		216696	0					
ANR	216763	Condition	ce -> interfaces [ i ] == NULL	942:6:33247:33271	216696	0	True				
ANR	216764	EqualityExpression	ce -> interfaces [ i ] == NULL		216696	0		==			
ANR	216765	ArrayIndexing	ce -> interfaces [ i ]		216696	0					
ANR	216766	PtrMemberAccess	ce -> interfaces		216696	0					
ANR	216767	Identifier	ce		216696	0					
ANR	216768	Identifier	interfaces		216696	1					
ANR	216769	Identifier	i		216696	1					
ANR	216770	Identifier	NULL		216696	1					
ANR	216771	CompoundStatement		10:33:281:281	216696	1					
ANR	216772	ExpressionStatement	"memmove ( ce -> interfaces + i , ce -> interfaces + i + 1 , sizeof ( zend_class_entry * ) * ( -- ce -> num_interfaces - i ) )"	943:3:33279:33386	216696	0	True				
ANR	216773	CallExpression	"memmove ( ce -> interfaces + i , ce -> interfaces + i + 1 , sizeof ( zend_class_entry * ) * ( -- ce -> num_interfaces - i ) )"		216696	0					
ANR	216774	Callee	memmove		216696	0					
ANR	216775	Identifier	memmove		216696	0					
ANR	216776	ArgumentList	ce -> interfaces + i		216696	1					
ANR	216777	Argument	ce -> interfaces + i		216696	0					
ANR	216778	AdditiveExpression	ce -> interfaces + i		216696	0		+			
ANR	216779	PtrMemberAccess	ce -> interfaces		216696	0					
ANR	216780	Identifier	ce		216696	0					
ANR	216781	Identifier	interfaces		216696	1					
ANR	216782	Identifier	i		216696	1					
ANR	216783	Argument	ce -> interfaces + i + 1		216696	1					
ANR	216784	AdditiveExpression	ce -> interfaces + i + 1		216696	0		+			
ANR	216785	PtrMemberAccess	ce -> interfaces		216696	0					
ANR	216786	Identifier	ce		216696	0					
ANR	216787	Identifier	interfaces		216696	1					
ANR	216788	AdditiveExpression	i + 1		216696	1		+			
ANR	216789	Identifier	i		216696	0					
ANR	216790	PrimaryExpression	1		216696	1					
ANR	216791	Argument	sizeof ( zend_class_entry * ) * ( -- ce -> num_interfaces - i )		216696	2					
ANR	216792	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ( -- ce -> num_interfaces - i )		216696	0		*			
ANR	216793	SizeofExpression	sizeof ( zend_class_entry * )		216696	0					
ANR	216794	Sizeof	sizeof		216696	0					
ANR	216795	SizeofOperand	zend_class_entry *		216696	1					
ANR	216796	AdditiveExpression	-- ce -> num_interfaces - i		216696	1		-			
ANR	216797	UnaryExpression	-- ce -> num_interfaces		216696	0					
ANR	216798	IncDec	--		216696	0					
ANR	216799	PtrMemberAccess	ce -> num_interfaces		216696	1					
ANR	216800	Identifier	ce		216696	0					
ANR	216801	Identifier	num_interfaces		216696	1					
ANR	216802	Identifier	i		216696	1					
ANR	216803	ExpressionStatement	i --	944:3:33391:33394	216696	1	True				
ANR	216804	PostIncDecOperationExpression	i --		216696	0					
ANR	216805	Identifier	i		216696	0					
ANR	216806	IncDec	--		216696	1					
ANR	216807	ElseStatement	else		216696	0					
ANR	216808	IfStatement	if ( ce -> interfaces [ i ] == iface )		216696	0					
ANR	216809	Condition	ce -> interfaces [ i ] == iface	945:13:33409:33434	216696	0	True				
ANR	216810	EqualityExpression	ce -> interfaces [ i ] == iface		216696	0		==			
ANR	216811	ArrayIndexing	ce -> interfaces [ i ]		216696	0					
ANR	216812	PtrMemberAccess	ce -> interfaces		216696	0					
ANR	216813	Identifier	ce		216696	0					
ANR	216814	Identifier	interfaces		216696	1					
ANR	216815	Identifier	i		216696	1					
ANR	216816	Identifier	iface		216696	1					
ANR	216817	CompoundStatement		13:41:444:444	216696	1					
ANR	216818	IfStatement	if ( EXPECTED ( i < parent_iface_num ) )		216696	0					
ANR	216819	Condition	EXPECTED ( i < parent_iface_num )	946:7:33446:33475	216696	0	True				
ANR	216820	CallExpression	EXPECTED ( i < parent_iface_num )		216696	0					
ANR	216821	Callee	EXPECTED		216696	0					
ANR	216822	Identifier	EXPECTED		216696	0					
ANR	216823	ArgumentList	i < parent_iface_num		216696	1					
ANR	216824	Argument	i < parent_iface_num		216696	0					
ANR	216825	RelationalExpression	i < parent_iface_num		216696	0		<			
ANR	216826	Identifier	i		216696	0					
ANR	216827	Identifier	parent_iface_num		216696	1					
ANR	216828	CompoundStatement		14:39:485:485	216696	1					
ANR	216829	ExpressionStatement	ignore = 1	947:4:33484:33494	216696	0	True				
ANR	216830	AssignmentExpression	ignore = 1		216696	0		=			
ANR	216831	Identifier	ignore		216696	0					
ANR	216832	PrimaryExpression	1		216696	1					
ANR	216833	ElseStatement	else		216696	0					
ANR	216834	CompoundStatement		16:10:513:513	216696	0					
ANR	216835	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s cannot implement previously implemented interface %s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( iface -> name ) )"	949:4:33512:33656	216696	0	True				
ANR	216836	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s cannot implement previously implemented interface %s"" , ZSTR_VAL ( ce -> name ) , ZSTR_VAL ( iface -> name ) )"		216696	0					
ANR	216837	Callee	zend_error_noreturn		216696	0					
ANR	216838	Identifier	zend_error_noreturn		216696	0					
ANR	216839	ArgumentList	E_COMPILE_ERROR		216696	1					
ANR	216840	Argument	E_COMPILE_ERROR		216696	0					
ANR	216841	Identifier	E_COMPILE_ERROR		216696	0					
ANR	216842	Argument	"""Class %s cannot implement previously implemented interface %s"""		216696	1					
ANR	216843	PrimaryExpression	"""Class %s cannot implement previously implemented interface %s"""		216696	0					
ANR	216844	Argument	ZSTR_VAL ( ce -> name )		216696	2					
ANR	216845	CallExpression	ZSTR_VAL ( ce -> name )		216696	0					
ANR	216846	Callee	ZSTR_VAL		216696	0					
ANR	216847	Identifier	ZSTR_VAL		216696	0					
ANR	216848	ArgumentList	ce -> name		216696	1					
ANR	216849	Argument	ce -> name		216696	0					
ANR	216850	PtrMemberAccess	ce -> name		216696	0					
ANR	216851	Identifier	ce		216696	0					
ANR	216852	Identifier	name		216696	1					
ANR	216853	Argument	ZSTR_VAL ( iface -> name )		216696	3					
ANR	216854	CallExpression	ZSTR_VAL ( iface -> name )		216696	0					
ANR	216855	Callee	ZSTR_VAL		216696	0					
ANR	216856	Identifier	ZSTR_VAL		216696	0					
ANR	216857	ArgumentList	iface -> name		216696	1					
ANR	216858	Argument	iface -> name		216696	0					
ANR	216859	PtrMemberAccess	iface -> name		216696	0					
ANR	216860	Identifier	iface		216696	0					
ANR	216861	Identifier	name		216696	1					
ANR	216862	IfStatement	if ( ignore )		216696	7					
ANR	216863	Condition	ignore	953:5:33675:33680	216696	0	True				
ANR	216864	Identifier	ignore		216696	0					
ANR	216865	CompoundStatement		21:13:690:690	216696	1					
ANR	216866	Statement	ZEND_HASH_FOREACH_STR_KEY_VAL	955:2:33746:33774	216696	0	True				
ANR	216867	Statement	(	955:31:33775:33775	216696	1	True				
ANR	216868	Statement	&	955:32:33776:33776	216696	2	True				
ANR	216869	Statement	ce	955:33:33777:33778	216696	3	True				
ANR	216870	Statement	->	955:35:33779:33780	216696	4	True				
ANR	216871	Statement	constants_table	955:37:33781:33795	216696	5	True				
ANR	216872	Statement	","	955:52:33796:33796	216696	6	True				
ANR	216873	Statement	key	955:54:33798:33800	216696	7	True				
ANR	216874	Statement	","	955:57:33801:33801	216696	8	True				
ANR	216875	Statement	zv	955:59:33803:33804	216696	9	True				
ANR	216876	Statement	)	955:61:33805:33805	216696	10	True				
ANR	216877	CompoundStatement		23:63:814:814	216696	11					
ANR	216878	ExpressionStatement	"do_inherit_constant_check ( & iface -> constants_table , zv , key , iface )"	956:3:33812:33878	216696	0	True				
ANR	216879	CallExpression	"do_inherit_constant_check ( & iface -> constants_table , zv , key , iface )"		216696	0					
ANR	216880	Callee	do_inherit_constant_check		216696	0					
ANR	216881	Identifier	do_inherit_constant_check		216696	0					
ANR	216882	ArgumentList	& iface -> constants_table		216696	1					
ANR	216883	Argument	& iface -> constants_table		216696	0					
ANR	216884	UnaryOperationExpression	& iface -> constants_table		216696	0					
ANR	216885	UnaryOperator	&		216696	0					
ANR	216886	PtrMemberAccess	iface -> constants_table		216696	1					
ANR	216887	Identifier	iface		216696	0					
ANR	216888	Identifier	constants_table		216696	1					
ANR	216889	Argument	zv		216696	1					
ANR	216890	Identifier	zv		216696	0					
ANR	216891	Argument	key		216696	2					
ANR	216892	Identifier	key		216696	0					
ANR	216893	Argument	iface		216696	3					
ANR	216894	Identifier	iface		216696	0					
ANR	216895	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	957:4:33884:33907	216696	12	True				
ANR	216896	CallExpression	ZEND_HASH_FOREACH_END ( )		216696	0					
ANR	216897	Callee	ZEND_HASH_FOREACH_END		216696	0					
ANR	216898	Identifier	ZEND_HASH_FOREACH_END		216696	0					
ANR	216899	ArgumentList			216696	1					
ANR	216900	ElseStatement	else		216696	0					
ANR	216901	CompoundStatement		26:8:924:924	216696	0					
ANR	216902	IfStatement	if ( ce -> num_interfaces >= current_iface_num )		216696	0					
ANR	216903	Condition	ce -> num_interfaces >= current_iface_num	959:6:33925:33963	216696	0	True				
ANR	216904	RelationalExpression	ce -> num_interfaces >= current_iface_num		216696	0		>=			
ANR	216905	PtrMemberAccess	ce -> num_interfaces		216696	0					
ANR	216906	Identifier	ce		216696	0					
ANR	216907	Identifier	num_interfaces		216696	1					
ANR	216908	Identifier	current_iface_num		216696	1					
ANR	216909	CompoundStatement		27:47:973:973	216696	1					
ANR	216910	IfStatement	if ( ce -> type == ZEND_INTERNAL_CLASS )		216696	0					
ANR	216911	Condition	ce -> type == ZEND_INTERNAL_CLASS	960:7:33975:34005	216696	0	True				
ANR	216912	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		216696	0		==			
ANR	216913	PtrMemberAccess	ce -> type		216696	0					
ANR	216914	Identifier	ce		216696	0					
ANR	216915	Identifier	type		216696	1					
ANR	216916	Identifier	ZEND_INTERNAL_CLASS		216696	1					
ANR	216917	CompoundStatement		28:40:1015:1015	216696	1					
ANR	216918	ExpressionStatement	"ce -> interfaces = ( zend_class_entry * * ) realloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ++ current_iface_num ) )"	961:4:34014:34128	216696	0	True				
ANR	216919	AssignmentExpression	"ce -> interfaces = ( zend_class_entry * * ) realloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ++ current_iface_num ) )"		216696	0		=			
ANR	216920	PtrMemberAccess	ce -> interfaces		216696	0					
ANR	216921	Identifier	ce		216696	0					
ANR	216922	Identifier	interfaces		216696	1					
ANR	216923	CastExpression	"( zend_class_entry * * ) realloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ++ current_iface_num ) )"		216696	1					
ANR	216924	CastTarget	zend_class_entry * *		216696	0					
ANR	216925	CallExpression	"realloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ++ current_iface_num ) )"		216696	1					
ANR	216926	Callee	realloc		216696	0					
ANR	216927	Identifier	realloc		216696	0					
ANR	216928	ArgumentList	ce -> interfaces		216696	1					
ANR	216929	Argument	ce -> interfaces		216696	0					
ANR	216930	PtrMemberAccess	ce -> interfaces		216696	0					
ANR	216931	Identifier	ce		216696	0					
ANR	216932	Identifier	interfaces		216696	1					
ANR	216933	Argument	sizeof ( zend_class_entry * ) * ( ++ current_iface_num )		216696	1					
ANR	216934	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ( ++ current_iface_num )		216696	0		*			
ANR	216935	SizeofExpression	sizeof ( zend_class_entry * )		216696	0					
ANR	216936	Sizeof	sizeof		216696	0					
ANR	216937	SizeofOperand	zend_class_entry *		216696	1					
ANR	216938	UnaryExpression	++ current_iface_num		216696	1					
ANR	216939	IncDec	++		216696	0					
ANR	216940	Identifier	current_iface_num		216696	1					
ANR	216941	ElseStatement	else		216696	0					
ANR	216942	CompoundStatement		30:10:1147:1147	216696	0					
ANR	216943	ExpressionStatement	"ce -> interfaces = ( zend_class_entry * * ) erealloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ++ current_iface_num ) )"	963:4:34146:34261	216696	0	True				
ANR	216944	AssignmentExpression	"ce -> interfaces = ( zend_class_entry * * ) erealloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ++ current_iface_num ) )"		216696	0		=			
ANR	216945	PtrMemberAccess	ce -> interfaces		216696	0					
ANR	216946	Identifier	ce		216696	0					
ANR	216947	Identifier	interfaces		216696	1					
ANR	216948	CastExpression	"( zend_class_entry * * ) erealloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ++ current_iface_num ) )"		216696	1					
ANR	216949	CastTarget	zend_class_entry * *		216696	0					
ANR	216950	CallExpression	"erealloc ( ce -> interfaces , sizeof ( zend_class_entry * ) * ( ++ current_iface_num ) )"		216696	1					
ANR	216951	Callee	erealloc		216696	0					
ANR	216952	Identifier	erealloc		216696	0					
ANR	216953	ArgumentList	ce -> interfaces		216696	1					
ANR	216954	Argument	ce -> interfaces		216696	0					
ANR	216955	PtrMemberAccess	ce -> interfaces		216696	0					
ANR	216956	Identifier	ce		216696	0					
ANR	216957	Identifier	interfaces		216696	1					
ANR	216958	Argument	sizeof ( zend_class_entry * ) * ( ++ current_iface_num )		216696	1					
ANR	216959	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ( ++ current_iface_num )		216696	0		*			
ANR	216960	SizeofExpression	sizeof ( zend_class_entry * )		216696	0					
ANR	216961	Sizeof	sizeof		216696	0					
ANR	216962	SizeofOperand	zend_class_entry *		216696	1					
ANR	216963	UnaryExpression	++ current_iface_num		216696	1					
ANR	216964	IncDec	++		216696	0					
ANR	216965	Identifier	current_iface_num		216696	1					
ANR	216966	ExpressionStatement	ce -> interfaces [ ce -> num_interfaces ++ ] = iface	966:2:34274:34318	216696	1	True				
ANR	216967	AssignmentExpression	ce -> interfaces [ ce -> num_interfaces ++ ] = iface		216696	0		=			
ANR	216968	ArrayIndexing	ce -> interfaces [ ce -> num_interfaces ++ ]		216696	0					
ANR	216969	PtrMemberAccess	ce -> interfaces		216696	0					
ANR	216970	Identifier	ce		216696	0					
ANR	216971	Identifier	interfaces		216696	1					
ANR	216972	PostIncDecOperationExpression	ce -> num_interfaces ++		216696	1					
ANR	216973	PtrMemberAccess	ce -> num_interfaces		216696	0					
ANR	216974	Identifier	ce		216696	0					
ANR	216975	Identifier	num_interfaces		216696	1					
ANR	216976	IncDec	++		216696	1					
ANR	216977	Identifier	iface		216696	1					
ANR	216978	Statement	ZEND_HASH_FOREACH_STR_KEY_VAL	968:2:34323:34351	216696	2	True				
ANR	216979	Statement	(	968:31:34352:34352	216696	3	True				
ANR	216980	Statement	&	968:32:34353:34353	216696	4	True				
ANR	216981	Statement	iface	968:33:34354:34358	216696	5	True				
ANR	216982	Statement	->	968:38:34359:34360	216696	6	True				
ANR	216983	Statement	constants_table	968:40:34361:34375	216696	7	True				
ANR	216984	Statement	","	968:55:34376:34376	216696	8	True				
ANR	216985	Statement	key	968:57:34378:34380	216696	9	True				
ANR	216986	Statement	","	968:60:34381:34381	216696	10	True				
ANR	216987	Statement	zv	968:62:34383:34384	216696	11	True				
ANR	216988	Statement	)	968:64:34385:34385	216696	12	True				
ANR	216989	CompoundStatement		36:66:1394:1394	216696	13					
ANR	216990	ExpressionStatement	"do_inherit_iface_constant ( key , zv , ce , iface )"	969:3:34392:34437	216696	0	True				
ANR	216991	CallExpression	"do_inherit_iface_constant ( key , zv , ce , iface )"		216696	0					
ANR	216992	Callee	do_inherit_iface_constant		216696	0					
ANR	216993	Identifier	do_inherit_iface_constant		216696	0					
ANR	216994	ArgumentList	key		216696	1					
ANR	216995	Argument	key		216696	0					
ANR	216996	Identifier	key		216696	0					
ANR	216997	Argument	zv		216696	1					
ANR	216998	Identifier	zv		216696	0					
ANR	216999	Argument	ce		216696	2					
ANR	217000	Identifier	ce		216696	0					
ANR	217001	Argument	iface		216696	3					
ANR	217002	Identifier	iface		216696	0					
ANR	217003	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	970:4:34443:34466	216696	14	True				
ANR	217004	CallExpression	ZEND_HASH_FOREACH_END ( )		216696	0					
ANR	217005	Callee	ZEND_HASH_FOREACH_END		216696	0					
ANR	217006	Identifier	ZEND_HASH_FOREACH_END		216696	0					
ANR	217007	ArgumentList			216696	1					
ANR	217008	Statement	ZEND_HASH_FOREACH_STR_KEY_PTR	972:2:34471:34499	216696	15	True				
ANR	217009	Statement	(	972:31:34500:34500	216696	16	True				
ANR	217010	Statement	&	972:32:34501:34501	216696	17	True				
ANR	217011	Statement	iface	972:33:34502:34506	216696	18	True				
ANR	217012	Statement	->	972:38:34507:34508	216696	19	True				
ANR	217013	Statement	function_table	972:40:34509:34522	216696	20	True				
ANR	217014	Statement	","	972:54:34523:34523	216696	21	True				
ANR	217015	Statement	key	972:56:34525:34527	216696	22	True				
ANR	217016	Statement	","	972:59:34528:34528	216696	23	True				
ANR	217017	Statement	func	972:61:34530:34533	216696	24	True				
ANR	217018	Statement	)	972:65:34534:34534	216696	25	True				
ANR	217019	CompoundStatement		41:3:1548:1606	216696	26					
ANR	217020	IdentifierDeclStatement	"zend_function * new_func = do_inherit_method ( key , func , ce ) ;"	973:3:34541:34599	216696	0	True				
ANR	217021	IdentifierDecl	"* new_func = do_inherit_method ( key , func , ce )"		216696	0					
ANR	217022	IdentifierDeclType	zend_function *		216696	0					
ANR	217023	Identifier	new_func		216696	1					
ANR	217024	AssignmentExpression	"* new_func = do_inherit_method ( key , func , ce )"		216696	2		=			
ANR	217025	Identifier	new_func		216696	0					
ANR	217026	CallExpression	"do_inherit_method ( key , func , ce )"		216696	1					
ANR	217027	Callee	do_inherit_method		216696	0					
ANR	217028	Identifier	do_inherit_method		216696	0					
ANR	217029	ArgumentList	key		216696	1					
ANR	217030	Argument	key		216696	0					
ANR	217031	Identifier	key		216696	0					
ANR	217032	Argument	func		216696	1					
ANR	217033	Identifier	func		216696	0					
ANR	217034	Argument	ce		216696	2					
ANR	217035	Identifier	ce		216696	0					
ANR	217036	IfStatement	if ( new_func )		216696	1					
ANR	217037	Condition	new_func	975:7:34609:34616	216696	0	True				
ANR	217038	Identifier	new_func		216696	0					
ANR	217039	CompoundStatement		43:17:1626:1626	216696	1					
ANR	217040	ExpressionStatement	"zend_hash_add_new_ptr ( & ce -> function_table , key , new_func )"	976:4:34625:34682	216696	0	True				
ANR	217041	CallExpression	"zend_hash_add_new_ptr ( & ce -> function_table , key , new_func )"		216696	0					
ANR	217042	Callee	zend_hash_add_new_ptr		216696	0					
ANR	217043	Identifier	zend_hash_add_new_ptr		216696	0					
ANR	217044	ArgumentList	& ce -> function_table		216696	1					
ANR	217045	Argument	& ce -> function_table		216696	0					
ANR	217046	UnaryOperationExpression	& ce -> function_table		216696	0					
ANR	217047	UnaryOperator	&		216696	0					
ANR	217048	PtrMemberAccess	ce -> function_table		216696	1					
ANR	217049	Identifier	ce		216696	0					
ANR	217050	Identifier	function_table		216696	1					
ANR	217051	Argument	key		216696	1					
ANR	217052	Identifier	key		216696	0					
ANR	217053	Argument	new_func		216696	2					
ANR	217054	Identifier	new_func		216696	0					
ANR	217055	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	978:4:34693:34716	216696	27	True				
ANR	217056	CallExpression	ZEND_HASH_FOREACH_END ( )		216696	0					
ANR	217057	Callee	ZEND_HASH_FOREACH_END		216696	0					
ANR	217058	Identifier	ZEND_HASH_FOREACH_END		216696	0					
ANR	217059	ArgumentList			216696	1					
ANR	217060	ExpressionStatement	"do_implement_interface ( ce , iface )"	980:2:34721:34754	216696	28	True				
ANR	217061	CallExpression	"do_implement_interface ( ce , iface )"		216696	0					
ANR	217062	Callee	do_implement_interface		216696	0					
ANR	217063	Identifier	do_implement_interface		216696	0					
ANR	217064	ArgumentList	ce		216696	1					
ANR	217065	Argument	ce		216696	0					
ANR	217066	Identifier	ce		216696	0					
ANR	217067	Argument	iface		216696	1					
ANR	217068	Identifier	iface		216696	0					
ANR	217069	ExpressionStatement	"zend_do_inherit_interfaces ( ce , iface )"	981:2:34758:34795	216696	29	True				
ANR	217070	CallExpression	"zend_do_inherit_interfaces ( ce , iface )"		216696	0					
ANR	217071	Callee	zend_do_inherit_interfaces		216696	0					
ANR	217072	Identifier	zend_do_inherit_interfaces		216696	0					
ANR	217073	ArgumentList	ce		216696	1					
ANR	217074	Argument	ce		216696	0					
ANR	217075	Identifier	ce		216696	0					
ANR	217076	Argument	iface		216696	1					
ANR	217077	Identifier	iface		216696	0					
ANR	217078	ReturnType	ZEND_API void		216696	1					
ANR	217079	Identifier	zend_do_implement_interface		216696	2					
ANR	217080	ParameterList	"zend_class_entry * ce , zend_class_entry * iface"		216696	3					
ANR	217081	Parameter	zend_class_entry * ce	932:42:32935:32954	216696	0	True				
ANR	217082	ParameterType	zend_class_entry *		216696	0					
ANR	217083	Identifier	ce		216696	1					
ANR	217084	Parameter	zend_class_entry * iface	932:64:32957:32979	216696	1	True				
ANR	217085	ParameterType	zend_class_entry *		216696	0					
ANR	217086	Identifier	iface		216696	1					
ANR	217087	CFGEntryNode	ENTRY		216696		True				
ANR	217088	CFGExitNode	EXIT		216696		True				
ANR	217089	Symbol	ce -> type		216696						
ANR	217090	Symbol	E_COMPILE_ERROR		216696						
ANR	217091	Symbol	* iface		216696						
ANR	217092	Symbol	& ce -> function_table		216696						
ANR	217093	Symbol	* ce		216696						
ANR	217094	Symbol	realloc		216696						
ANR	217095	Symbol	* * ce		216696						
ANR	217096	Symbol	& iface -> constants_table		216696						
ANR	217097	Symbol	new_func		216696						
ANR	217098	Symbol	* ce -> parent		216696						
ANR	217099	Symbol	ce -> num_interfaces		216696						
ANR	217100	Symbol	ignore		216696						
ANR	217101	Symbol	* ce -> interfaces		216696						
ANR	217102	Symbol	ce -> name		216696						
ANR	217103	Symbol	erealloc		216696						
ANR	217104	Symbol	key		216696						
ANR	217105	Symbol	ZEND_INTERNAL_CLASS		216696						
ANR	217106	Symbol	ce		216696						
ANR	217107	Symbol	NULL		216696						
ANR	217108	Symbol	ce -> interfaces		216696						
ANR	217109	Symbol	ce -> parent		216696						
ANR	217110	Symbol	i		216696						
ANR	217111	Symbol	current_iface_num		216696						
ANR	217112	Symbol	ce -> parent -> num_interfaces		216696						
ANR	217113	Symbol	parent_iface_num		216696						
ANR	217114	Symbol	do_inherit_method		216696						
ANR	217115	Symbol	ZSTR_VAL		216696						
ANR	217116	Symbol	iface		216696						
ANR	217117	Symbol	* i		216696						
ANR	217118	Symbol	func		216696						
ANR	217119	Symbol	iface -> name		216696						
ANR	217120	Symbol	zv		216696						
ANR	217121	Symbol	EXPECTED		216696						
ANR	217122	Function	zend_do_implement_trait	986:0:34813:35722							
ANR	217123	FunctionDef	"zend_do_implement_trait (zend_class_entry * ce , zend_class_entry * trait)"		217122	0					
ANR	217124	CompoundStatement		987:0:34908:35722	217122	0					
ANR	217125	IdentifierDeclStatement	"uint32_t i , ignore = 0 ;"	988:1:34911:34933	217122	0	True				
ANR	217126	IdentifierDecl	i		217122	0					
ANR	217127	IdentifierDeclType	uint32_t		217122	0					
ANR	217128	Identifier	i		217122	1					
ANR	217129	IdentifierDecl	ignore = 0		217122	1					
ANR	217130	IdentifierDeclType	uint32_t		217122	0					
ANR	217131	Identifier	ignore		217122	1					
ANR	217132	AssignmentExpression	ignore = 0		217122	2		=			
ANR	217133	Identifier	ignore		217122	0					
ANR	217134	PrimaryExpression	0		217122	1					
ANR	217135	IdentifierDeclStatement	uint32_t current_trait_num = ce -> num_traits ;	989:1:34936:34979	217122	1	True				
ANR	217136	IdentifierDecl	current_trait_num = ce -> num_traits		217122	0					
ANR	217137	IdentifierDeclType	uint32_t		217122	0					
ANR	217138	Identifier	current_trait_num		217122	1					
ANR	217139	AssignmentExpression	current_trait_num = ce -> num_traits		217122	2		=			
ANR	217140	Identifier	current_trait_num		217122	0					
ANR	217141	PtrMemberAccess	ce -> num_traits		217122	1					
ANR	217142	Identifier	ce		217122	0					
ANR	217143	Identifier	num_traits		217122	1					
ANR	217144	IdentifierDeclStatement	uint32_t parent_trait_num = ce -> parent ? ce -> parent -> num_traits : 0 ;	990:1:34982:35050	217122	2	True				
ANR	217145	IdentifierDecl	parent_trait_num = ce -> parent ? ce -> parent -> num_traits : 0		217122	0					
ANR	217146	IdentifierDeclType	uint32_t		217122	0					
ANR	217147	Identifier	parent_trait_num		217122	1					
ANR	217148	AssignmentExpression	parent_trait_num = ce -> parent ? ce -> parent -> num_traits : 0		217122	2		=			
ANR	217149	Identifier	parent_trait_num		217122	0					
ANR	217150	ConditionalExpression	ce -> parent ? ce -> parent -> num_traits : 0		217122	1					
ANR	217151	Condition	ce -> parent		217122	0					
ANR	217152	PtrMemberAccess	ce -> parent		217122	0					
ANR	217153	Identifier	ce		217122	0					
ANR	217154	Identifier	parent		217122	1					
ANR	217155	PtrMemberAccess	ce -> parent -> num_traits		217122	1					
ANR	217156	PtrMemberAccess	ce -> parent		217122	0					
ANR	217157	Identifier	ce		217122	0					
ANR	217158	Identifier	parent		217122	1					
ANR	217159	Identifier	num_traits		217122	1					
ANR	217160	PrimaryExpression	0		217122	2					
ANR	217161	ForStatement	for ( i = 0 ; i < ce -> num_traits ; i ++ )		217122	3					
ANR	217162	ForInit	i = 0 ;	992:6:35059:35064	217122	0	True				
ANR	217163	AssignmentExpression	i = 0		217122	0		=			
ANR	217164	Identifier	i		217122	0					
ANR	217165	PrimaryExpression	0		217122	1					
ANR	217166	Condition	i < ce -> num_traits	992:13:35066:35083	217122	1	True				
ANR	217167	RelationalExpression	i < ce -> num_traits		217122	0		<			
ANR	217168	Identifier	i		217122	0					
ANR	217169	PtrMemberAccess	ce -> num_traits		217122	1					
ANR	217170	Identifier	ce		217122	0					
ANR	217171	Identifier	num_traits		217122	1					
ANR	217172	PostIncDecOperationExpression	i ++	992:33:35086:35088	217122	2	True				
ANR	217173	Identifier	i		217122	0					
ANR	217174	IncDec	++		217122	1					
ANR	217175	CompoundStatement		6:38:182:182	217122	3					
ANR	217176	IfStatement	if ( ce -> traits [ i ] == NULL )		217122	0					
ANR	217177	Condition	ce -> traits [ i ] == NULL	993:6:35099:35119	217122	0	True				
ANR	217178	EqualityExpression	ce -> traits [ i ] == NULL		217122	0		==			
ANR	217179	ArrayIndexing	ce -> traits [ i ]		217122	0					
ANR	217180	PtrMemberAccess	ce -> traits		217122	0					
ANR	217181	Identifier	ce		217122	0					
ANR	217182	Identifier	traits		217122	1					
ANR	217183	Identifier	i		217122	1					
ANR	217184	Identifier	NULL		217122	1					
ANR	217185	CompoundStatement		7:29:213:213	217122	1					
ANR	217186	ExpressionStatement	"memmove ( ce -> traits + i , ce -> traits + i + 1 , sizeof ( zend_class_entry * ) * ( -- ce -> num_traits - i ) )"	994:3:35127:35222	217122	0	True				
ANR	217187	CallExpression	"memmove ( ce -> traits + i , ce -> traits + i + 1 , sizeof ( zend_class_entry * ) * ( -- ce -> num_traits - i ) )"		217122	0					
ANR	217188	Callee	memmove		217122	0					
ANR	217189	Identifier	memmove		217122	0					
ANR	217190	ArgumentList	ce -> traits + i		217122	1					
ANR	217191	Argument	ce -> traits + i		217122	0					
ANR	217192	AdditiveExpression	ce -> traits + i		217122	0		+			
ANR	217193	PtrMemberAccess	ce -> traits		217122	0					
ANR	217194	Identifier	ce		217122	0					
ANR	217195	Identifier	traits		217122	1					
ANR	217196	Identifier	i		217122	1					
ANR	217197	Argument	ce -> traits + i + 1		217122	1					
ANR	217198	AdditiveExpression	ce -> traits + i + 1		217122	0		+			
ANR	217199	PtrMemberAccess	ce -> traits		217122	0					
ANR	217200	Identifier	ce		217122	0					
ANR	217201	Identifier	traits		217122	1					
ANR	217202	AdditiveExpression	i + 1		217122	1		+			
ANR	217203	Identifier	i		217122	0					
ANR	217204	PrimaryExpression	1		217122	1					
ANR	217205	Argument	sizeof ( zend_class_entry * ) * ( -- ce -> num_traits - i )		217122	2					
ANR	217206	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ( -- ce -> num_traits - i )		217122	0		*			
ANR	217207	SizeofExpression	sizeof ( zend_class_entry * )		217122	0					
ANR	217208	Sizeof	sizeof		217122	0					
ANR	217209	SizeofOperand	zend_class_entry *		217122	1					
ANR	217210	AdditiveExpression	-- ce -> num_traits - i		217122	1		-			
ANR	217211	UnaryExpression	-- ce -> num_traits		217122	0					
ANR	217212	IncDec	--		217122	0					
ANR	217213	PtrMemberAccess	ce -> num_traits		217122	1					
ANR	217214	Identifier	ce		217122	0					
ANR	217215	Identifier	num_traits		217122	1					
ANR	217216	Identifier	i		217122	1					
ANR	217217	ExpressionStatement	i --	995:3:35227:35230	217122	1	True				
ANR	217218	PostIncDecOperationExpression	i --		217122	0					
ANR	217219	Identifier	i		217122	0					
ANR	217220	IncDec	--		217122	1					
ANR	217221	ElseStatement	else		217122	0					
ANR	217222	IfStatement	if ( ce -> traits [ i ] == trait )		217122	0					
ANR	217223	Condition	ce -> traits [ i ] == trait	996:13:35245:35266	217122	0	True				
ANR	217224	EqualityExpression	ce -> traits [ i ] == trait		217122	0		==			
ANR	217225	ArrayIndexing	ce -> traits [ i ]		217122	0					
ANR	217226	PtrMemberAccess	ce -> traits		217122	0					
ANR	217227	Identifier	ce		217122	0					
ANR	217228	Identifier	traits		217122	1					
ANR	217229	Identifier	i		217122	1					
ANR	217230	Identifier	trait		217122	1					
ANR	217231	CompoundStatement		10:37:360:360	217122	1					
ANR	217232	IfStatement	if ( i < parent_trait_num )		217122	0					
ANR	217233	Condition	i < parent_trait_num	997:7:35278:35297	217122	0	True				
ANR	217234	RelationalExpression	i < parent_trait_num		217122	0		<			
ANR	217235	Identifier	i		217122	0					
ANR	217236	Identifier	parent_trait_num		217122	1					
ANR	217237	CompoundStatement		11:29:391:391	217122	1					
ANR	217238	ExpressionStatement	ignore = 1	998:4:35306:35316	217122	0	True				
ANR	217239	AssignmentExpression	ignore = 1		217122	0		=			
ANR	217240	Identifier	ignore		217122	0					
ANR	217241	PrimaryExpression	1		217122	1					
ANR	217242	IfStatement	if ( ! ignore )		217122	4					
ANR	217243	Condition	! ignore	1002:5:35335:35341	217122	0	True				
ANR	217244	UnaryOperationExpression	! ignore		217122	0					
ANR	217245	UnaryOperator	!		217122	0					
ANR	217246	Identifier	ignore		217122	1					
ANR	217247	CompoundStatement		16:14:435:435	217122	1					
ANR	217248	IfStatement	if ( ce -> num_traits >= current_trait_num )		217122	0					
ANR	217249	Condition	ce -> num_traits >= current_trait_num	1003:6:35352:35386	217122	0	True				
ANR	217250	RelationalExpression	ce -> num_traits >= current_trait_num		217122	0		>=			
ANR	217251	PtrMemberAccess	ce -> num_traits		217122	0					
ANR	217252	Identifier	ce		217122	0					
ANR	217253	Identifier	num_traits		217122	1					
ANR	217254	Identifier	current_trait_num		217122	1					
ANR	217255	CompoundStatement		17:43:480:480	217122	1					
ANR	217256	IfStatement	if ( ce -> type == ZEND_INTERNAL_CLASS )		217122	0					
ANR	217257	Condition	ce -> type == ZEND_INTERNAL_CLASS	1004:7:35398:35428	217122	0	True				
ANR	217258	EqualityExpression	ce -> type == ZEND_INTERNAL_CLASS		217122	0		==			
ANR	217259	PtrMemberAccess	ce -> type		217122	0					
ANR	217260	Identifier	ce		217122	0					
ANR	217261	Identifier	type		217122	1					
ANR	217262	Identifier	ZEND_INTERNAL_CLASS		217122	1					
ANR	217263	CompoundStatement		18:40:522:522	217122	1					
ANR	217264	ExpressionStatement	"ce -> traits = ( zend_class_entry * * ) realloc ( ce -> traits , sizeof ( zend_class_entry * ) * ( ++ current_trait_num ) )"	1005:4:35437:35543	217122	0	True				
ANR	217265	AssignmentExpression	"ce -> traits = ( zend_class_entry * * ) realloc ( ce -> traits , sizeof ( zend_class_entry * ) * ( ++ current_trait_num ) )"		217122	0		=			
ANR	217266	PtrMemberAccess	ce -> traits		217122	0					
ANR	217267	Identifier	ce		217122	0					
ANR	217268	Identifier	traits		217122	1					
ANR	217269	CastExpression	"( zend_class_entry * * ) realloc ( ce -> traits , sizeof ( zend_class_entry * ) * ( ++ current_trait_num ) )"		217122	1					
ANR	217270	CastTarget	zend_class_entry * *		217122	0					
ANR	217271	CallExpression	"realloc ( ce -> traits , sizeof ( zend_class_entry * ) * ( ++ current_trait_num ) )"		217122	1					
ANR	217272	Callee	realloc		217122	0					
ANR	217273	Identifier	realloc		217122	0					
ANR	217274	ArgumentList	ce -> traits		217122	1					
ANR	217275	Argument	ce -> traits		217122	0					
ANR	217276	PtrMemberAccess	ce -> traits		217122	0					
ANR	217277	Identifier	ce		217122	0					
ANR	217278	Identifier	traits		217122	1					
ANR	217279	Argument	sizeof ( zend_class_entry * ) * ( ++ current_trait_num )		217122	1					
ANR	217280	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ( ++ current_trait_num )		217122	0		*			
ANR	217281	SizeofExpression	sizeof ( zend_class_entry * )		217122	0					
ANR	217282	Sizeof	sizeof		217122	0					
ANR	217283	SizeofOperand	zend_class_entry *		217122	1					
ANR	217284	UnaryExpression	++ current_trait_num		217122	1					
ANR	217285	IncDec	++		217122	0					
ANR	217286	Identifier	current_trait_num		217122	1					
ANR	217287	ElseStatement	else		217122	0					
ANR	217288	CompoundStatement		20:10:646:646	217122	0					
ANR	217289	ExpressionStatement	"ce -> traits = ( zend_class_entry * * ) erealloc ( ce -> traits , sizeof ( zend_class_entry * ) * ( ++ current_trait_num ) )"	1007:4:35561:35668	217122	0	True				
ANR	217290	AssignmentExpression	"ce -> traits = ( zend_class_entry * * ) erealloc ( ce -> traits , sizeof ( zend_class_entry * ) * ( ++ current_trait_num ) )"		217122	0		=			
ANR	217291	PtrMemberAccess	ce -> traits		217122	0					
ANR	217292	Identifier	ce		217122	0					
ANR	217293	Identifier	traits		217122	1					
ANR	217294	CastExpression	"( zend_class_entry * * ) erealloc ( ce -> traits , sizeof ( zend_class_entry * ) * ( ++ current_trait_num ) )"		217122	1					
ANR	217295	CastTarget	zend_class_entry * *		217122	0					
ANR	217296	CallExpression	"erealloc ( ce -> traits , sizeof ( zend_class_entry * ) * ( ++ current_trait_num ) )"		217122	1					
ANR	217297	Callee	erealloc		217122	0					
ANR	217298	Identifier	erealloc		217122	0					
ANR	217299	ArgumentList	ce -> traits		217122	1					
ANR	217300	Argument	ce -> traits		217122	0					
ANR	217301	PtrMemberAccess	ce -> traits		217122	0					
ANR	217302	Identifier	ce		217122	0					
ANR	217303	Identifier	traits		217122	1					
ANR	217304	Argument	sizeof ( zend_class_entry * ) * ( ++ current_trait_num )		217122	1					
ANR	217305	MultiplicativeExpression	sizeof ( zend_class_entry * ) * ( ++ current_trait_num )		217122	0		*			
ANR	217306	SizeofExpression	sizeof ( zend_class_entry * )		217122	0					
ANR	217307	Sizeof	sizeof		217122	0					
ANR	217308	SizeofOperand	zend_class_entry *		217122	1					
ANR	217309	UnaryExpression	++ current_trait_num		217122	1					
ANR	217310	IncDec	++		217122	0					
ANR	217311	Identifier	current_trait_num		217122	1					
ANR	217312	ExpressionStatement	ce -> traits [ ce -> num_traits ++ ] = trait	1010:2:35681:35717	217122	1	True				
ANR	217313	AssignmentExpression	ce -> traits [ ce -> num_traits ++ ] = trait		217122	0		=			
ANR	217314	ArrayIndexing	ce -> traits [ ce -> num_traits ++ ]		217122	0					
ANR	217315	PtrMemberAccess	ce -> traits		217122	0					
ANR	217316	Identifier	ce		217122	0					
ANR	217317	Identifier	traits		217122	1					
ANR	217318	PostIncDecOperationExpression	ce -> num_traits ++		217122	1					
ANR	217319	PtrMemberAccess	ce -> num_traits		217122	0					
ANR	217320	Identifier	ce		217122	0					
ANR	217321	Identifier	num_traits		217122	1					
ANR	217322	IncDec	++		217122	1					
ANR	217323	Identifier	trait		217122	1					
ANR	217324	ReturnType	ZEND_API void		217122	1					
ANR	217325	Identifier	zend_do_implement_trait		217122	2					
ANR	217326	ParameterList	"zend_class_entry * ce , zend_class_entry * trait"		217122	3					
ANR	217327	Parameter	zend_class_entry * ce	986:38:34851:34870	217122	0	True				
ANR	217328	ParameterType	zend_class_entry *		217122	0					
ANR	217329	Identifier	ce		217122	1					
ANR	217330	Parameter	zend_class_entry * trait	986:60:34873:34895	217122	1	True				
ANR	217331	ParameterType	zend_class_entry *		217122	0					
ANR	217332	Identifier	trait		217122	1					
ANR	217333	CFGEntryNode	ENTRY		217122		True				
ANR	217334	CFGExitNode	EXIT		217122		True				
ANR	217335	Symbol	ZEND_INTERNAL_CLASS		217122						
ANR	217336	Symbol	parent_trait_num		217122						
ANR	217337	Symbol	ce -> type		217122						
ANR	217338	Symbol	ce		217122						
ANR	217339	Symbol	NULL		217122						
ANR	217340	Symbol	ce -> parent		217122						
ANR	217341	Symbol	ce -> parent -> num_traits		217122						
ANR	217342	Symbol	i		217122						
ANR	217343	Symbol	* ce		217122						
ANR	217344	Symbol	realloc		217122						
ANR	217345	Symbol	ce -> num_traits		217122						
ANR	217346	Symbol	* * ce		217122						
ANR	217347	Symbol	ce -> traits		217122						
ANR	217348	Symbol	current_trait_num		217122						
ANR	217349	Symbol	* ce -> traits		217122						
ANR	217350	Symbol	* ce -> parent		217122						
ANR	217351	Symbol	* i		217122						
ANR	217352	Symbol	trait		217122						
ANR	217353	Symbol	ignore		217122						
ANR	217354	Symbol	erealloc		217122						
ANR	217355	Function	zend_traits_method_compatibility_check	1015:0:35735:36285							
ANR	217356	FunctionDef	"zend_traits_method_compatibility_check (zend_function * fn , zend_function * other_fn)"		217355	0					
ANR	217357	CompoundStatement		1016:0:35845:36285	217355	0					
ANR	217358	IdentifierDeclStatement	uint32_t fn_flags = fn -> common . scope -> ce_flags ;	1017:1:35848:35897	217355	0	True				
ANR	217359	IdentifierDecl	fn_flags = fn -> common . scope -> ce_flags		217355	0					
ANR	217360	IdentifierDeclType	uint32_t		217355	0					
ANR	217361	Identifier	fn_flags		217355	1					
ANR	217362	AssignmentExpression	fn_flags = fn -> common . scope -> ce_flags		217355	2		=			
ANR	217363	Identifier	fn_flags		217355	0					
ANR	217364	PtrMemberAccess	fn -> common . scope -> ce_flags		217355	1					
ANR	217365	MemberAccess	fn -> common . scope		217355	0					
ANR	217366	PtrMemberAccess	fn -> common		217355	0					
ANR	217367	Identifier	fn		217355	0					
ANR	217368	Identifier	common		217355	1					
ANR	217369	Identifier	scope		217355	1					
ANR	217370	Identifier	ce_flags		217355	1					
ANR	217371	IdentifierDeclStatement	uint32_t other_flags = other_fn -> common . scope -> ce_flags ;	1018:1:35900:35955	217355	1	True				
ANR	217372	IdentifierDecl	other_flags = other_fn -> common . scope -> ce_flags		217355	0					
ANR	217373	IdentifierDeclType	uint32_t		217355	0					
ANR	217374	Identifier	other_flags		217355	1					
ANR	217375	AssignmentExpression	other_flags = other_fn -> common . scope -> ce_flags		217355	2		=			
ANR	217376	Identifier	other_flags		217355	0					
ANR	217377	PtrMemberAccess	other_fn -> common . scope -> ce_flags		217355	1					
ANR	217378	MemberAccess	other_fn -> common . scope		217355	0					
ANR	217379	PtrMemberAccess	other_fn -> common		217355	0					
ANR	217380	Identifier	other_fn		217355	0					
ANR	217381	Identifier	common		217355	1					
ANR	217382	Identifier	scope		217355	1					
ANR	217383	Identifier	ce_flags		217355	1					
ANR	217384	ReturnStatement	"return zend_do_perform_implementation_check ( fn , other_fn ) && ( ( other_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) || zend_do_perform_implementation_check ( other_fn , fn ) ) && ( ( fn_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC ) ) == ( other_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC ) ) ) ;"	1020:1:35959:36244	217355	2	True				
ANR	217385	AndExpression	"zend_do_perform_implementation_check ( fn , other_fn ) && ( ( other_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) || zend_do_perform_implementation_check ( other_fn , fn ) ) && ( ( fn_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC ) ) == ( other_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC ) ) )"		217355	0		&&			
ANR	217386	CallExpression	"zend_do_perform_implementation_check ( fn , other_fn )"		217355	0					
ANR	217387	Callee	zend_do_perform_implementation_check		217355	0					
ANR	217388	Identifier	zend_do_perform_implementation_check		217355	0					
ANR	217389	ArgumentList	fn		217355	1					
ANR	217390	Argument	fn		217355	0					
ANR	217391	Identifier	fn		217355	0					
ANR	217392	Argument	other_fn		217355	1					
ANR	217393	Identifier	other_fn		217355	0					
ANR	217394	AndExpression	"( ( other_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) || zend_do_perform_implementation_check ( other_fn , fn ) ) && ( ( fn_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC ) ) == ( other_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC ) ) )"		217355	1		&&			
ANR	217395	OrExpression	"( other_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) || zend_do_perform_implementation_check ( other_fn , fn )"		217355	0		||			
ANR	217396	BitAndExpression	other_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE		217355	0		&			
ANR	217397	PtrMemberAccess	other_fn -> common . scope -> ce_flags		217355	0					
ANR	217398	MemberAccess	other_fn -> common . scope		217355	0					
ANR	217399	PtrMemberAccess	other_fn -> common		217355	0					
ANR	217400	Identifier	other_fn		217355	0					
ANR	217401	Identifier	common		217355	1					
ANR	217402	Identifier	scope		217355	1					
ANR	217403	Identifier	ce_flags		217355	1					
ANR	217404	Identifier	ZEND_ACC_INTERFACE		217355	1					
ANR	217405	CallExpression	"zend_do_perform_implementation_check ( other_fn , fn )"		217355	1					
ANR	217406	Callee	zend_do_perform_implementation_check		217355	0					
ANR	217407	Identifier	zend_do_perform_implementation_check		217355	0					
ANR	217408	ArgumentList	other_fn		217355	1					
ANR	217409	Argument	other_fn		217355	0					
ANR	217410	Identifier	other_fn		217355	0					
ANR	217411	Argument	fn		217355	1					
ANR	217412	Identifier	fn		217355	0					
ANR	217413	EqualityExpression	( fn_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC ) ) == ( other_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC ) )		217355	1		==			
ANR	217414	BitAndExpression	fn_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC )		217355	0		&			
ANR	217415	Identifier	fn_flags		217355	0					
ANR	217416	InclusiveOrExpression	ZEND_ACC_FINAL | ZEND_ACC_STATIC		217355	1		|			
ANR	217417	Identifier	ZEND_ACC_FINAL		217355	0					
ANR	217418	Identifier	ZEND_ACC_STATIC		217355	1					
ANR	217419	BitAndExpression	other_flags & ( ZEND_ACC_FINAL | ZEND_ACC_STATIC )		217355	1		&			
ANR	217420	Identifier	other_flags		217355	0					
ANR	217421	InclusiveOrExpression	ZEND_ACC_FINAL | ZEND_ACC_STATIC		217355	1		|			
ANR	217422	Identifier	ZEND_ACC_FINAL		217355	0					
ANR	217423	Identifier	ZEND_ACC_STATIC		217355	1					
ANR	217424	ReturnType	static zend_bool		217355	1					
ANR	217425	Identifier	zend_traits_method_compatibility_check		217355	2					
ANR	217426	ParameterList	"zend_function * fn , zend_function * other_fn"		217355	3					
ANR	217427	Parameter	zend_function * fn	1015:56:35791:35807	217355	0	True				
ANR	217428	ParameterType	zend_function *		217355	0					
ANR	217429	Identifier	fn		217355	1					
ANR	217430	Parameter	zend_function * other_fn	1015:75:35810:35832	217355	1	True				
ANR	217431	ParameterType	zend_function *		217355	0					
ANR	217432	Identifier	other_fn		217355	1					
ANR	217433	CFGEntryNode	ENTRY		217355		True				
ANR	217434	CFGExitNode	EXIT		217355		True				
ANR	217435	Symbol	fn_flags		217355						
ANR	217436	Symbol	fn -> common . scope		217355						
ANR	217437	Symbol	* other_fn		217355						
ANR	217438	Symbol	* * other_fn		217355						
ANR	217439	Symbol	other_fn		217355						
ANR	217440	Symbol	fn -> common . scope -> ce_flags		217355						
ANR	217441	Symbol	fn		217355						
ANR	217442	Symbol	* fn -> common		217355						
ANR	217443	Symbol	* fn		217355						
ANR	217444	Symbol	* fn -> common . scope		217355						
ANR	217445	Symbol	ZEND_ACC_FINAL		217355						
ANR	217446	Symbol	other_fn -> common		217355						
ANR	217447	Symbol	other_fn -> common . scope -> ce_flags		217355						
ANR	217448	Symbol	fn -> common		217355						
ANR	217449	Symbol	other_fn -> common . scope		217355						
ANR	217450	Symbol	* * fn		217355						
ANR	217451	Symbol	ZEND_ACC_STATIC		217355						
ANR	217452	Symbol	ZEND_ACC_INTERFACE		217355						
ANR	217453	Symbol	zend_do_perform_implementation_check		217355						
ANR	217454	Symbol	* other_fn -> common		217355						
ANR	217455	Symbol	* other_fn -> common . scope		217355						
ANR	217456	Symbol	other_flags		217355						
ANR	217457	Function	zend_add_magic_methods	1027:0:36298:38603							
ANR	217458	FunctionDef	"zend_add_magic_methods (zend_class_entry * ce , zend_string * mname , zend_function * fe)"		217457	0					
ANR	217459	CompoundStatement		1028:0:36404:38603	217457	0					
ANR	217460	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_CLONE_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		217457	0					
ANR	217461	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_CLONE_FUNC_NAME , ZSTR_LEN ( mname ) )"	1029:5:36411:36474	217457	0	True				
ANR	217462	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_CLONE_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	0					
ANR	217463	UnaryOperator	!		217457	0					
ANR	217464	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_CLONE_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	1					
ANR	217465	Callee	strncmp		217457	0					
ANR	217466	Identifier	strncmp		217457	0					
ANR	217467	ArgumentList	ZSTR_VAL ( mname )		217457	1					
ANR	217468	Argument	ZSTR_VAL ( mname )		217457	0					
ANR	217469	CallExpression	ZSTR_VAL ( mname )		217457	0					
ANR	217470	Callee	ZSTR_VAL		217457	0					
ANR	217471	Identifier	ZSTR_VAL		217457	0					
ANR	217472	ArgumentList	mname		217457	1					
ANR	217473	Argument	mname		217457	0					
ANR	217474	Identifier	mname		217457	0					
ANR	217475	Argument	ZEND_CLONE_FUNC_NAME		217457	1					
ANR	217476	Identifier	ZEND_CLONE_FUNC_NAME		217457	0					
ANR	217477	Argument	ZSTR_LEN ( mname )		217457	2					
ANR	217478	CallExpression	ZSTR_LEN ( mname )		217457	0					
ANR	217479	Callee	ZSTR_LEN		217457	0					
ANR	217480	Identifier	ZSTR_LEN		217457	0					
ANR	217481	ArgumentList	mname		217457	1					
ANR	217482	Argument	mname		217457	0					
ANR	217483	Identifier	mname		217457	0					
ANR	217484	CompoundStatement		2:71:72:72	217457	1					
ANR	217485	ExpressionStatement	ce -> clone = fe	1030:2:36481:36495	217457	0	True				
ANR	217486	AssignmentExpression	ce -> clone = fe		217457	0		=			
ANR	217487	PtrMemberAccess	ce -> clone		217457	0					
ANR	217488	Identifier	ce		217457	0					
ANR	217489	Identifier	clone		217457	1					
ANR	217490	Identifier	fe		217457	1					
ANR	217491	ExpressionStatement	fe -> common . fn_flags |= ZEND_ACC_CLONE	1030:18:36497:36534	217457	1	True				
ANR	217492	AssignmentExpression	fe -> common . fn_flags |= ZEND_ACC_CLONE		217457	0		|=			
ANR	217493	MemberAccess	fe -> common . fn_flags		217457	0					
ANR	217494	PtrMemberAccess	fe -> common		217457	0					
ANR	217495	Identifier	fe		217457	0					
ANR	217496	Identifier	common		217457	1					
ANR	217497	Identifier	fn_flags		217457	1					
ANR	217498	Identifier	ZEND_ACC_CLONE		217457	1					
ANR	217499	ElseStatement	else		217457	0					
ANR	217500	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_CONSTRUCTOR_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		217457	0					
ANR	217501	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_CONSTRUCTOR_FUNC_NAME , ZSTR_LEN ( mname ) )"	1031:12:36548:36617	217457	0	True				
ANR	217502	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_CONSTRUCTOR_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	0					
ANR	217503	UnaryOperator	!		217457	0					
ANR	217504	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_CONSTRUCTOR_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	1					
ANR	217505	Callee	strncmp		217457	0					
ANR	217506	Identifier	strncmp		217457	0					
ANR	217507	ArgumentList	ZSTR_VAL ( mname )		217457	1					
ANR	217508	Argument	ZSTR_VAL ( mname )		217457	0					
ANR	217509	CallExpression	ZSTR_VAL ( mname )		217457	0					
ANR	217510	Callee	ZSTR_VAL		217457	0					
ANR	217511	Identifier	ZSTR_VAL		217457	0					
ANR	217512	ArgumentList	mname		217457	1					
ANR	217513	Argument	mname		217457	0					
ANR	217514	Identifier	mname		217457	0					
ANR	217515	Argument	ZEND_CONSTRUCTOR_FUNC_NAME		217457	1					
ANR	217516	Identifier	ZEND_CONSTRUCTOR_FUNC_NAME		217457	0					
ANR	217517	Argument	ZSTR_LEN ( mname )		217457	2					
ANR	217518	CallExpression	ZSTR_LEN ( mname )		217457	0					
ANR	217519	Callee	ZSTR_LEN		217457	0					
ANR	217520	Identifier	ZSTR_LEN		217457	0					
ANR	217521	ArgumentList	mname		217457	1					
ANR	217522	Argument	mname		217457	0					
ANR	217523	Identifier	mname		217457	0					
ANR	217524	CompoundStatement		4:84:215:215	217457	1					
ANR	217525	IfStatement	if ( ce -> constructor && ( ! ce -> parent || ce -> constructor != ce -> parent -> constructor ) )		217457	0					
ANR	217526	Condition	ce -> constructor && ( ! ce -> parent || ce -> constructor != ce -> parent -> constructor )	1032:6:36628:36705	217457	0	True				
ANR	217527	AndExpression	ce -> constructor && ( ! ce -> parent || ce -> constructor != ce -> parent -> constructor )		217457	0		&&			
ANR	217528	PtrMemberAccess	ce -> constructor		217457	0					
ANR	217529	Identifier	ce		217457	0					
ANR	217530	Identifier	constructor		217457	1					
ANR	217531	OrExpression	! ce -> parent || ce -> constructor != ce -> parent -> constructor		217457	1		||			
ANR	217532	UnaryOperationExpression	! ce -> parent		217457	0					
ANR	217533	UnaryOperator	!		217457	0					
ANR	217534	PtrMemberAccess	ce -> parent		217457	1					
ANR	217535	Identifier	ce		217457	0					
ANR	217536	Identifier	parent		217457	1					
ANR	217537	EqualityExpression	ce -> constructor != ce -> parent -> constructor		217457	1		!=			
ANR	217538	PtrMemberAccess	ce -> constructor		217457	0					
ANR	217539	Identifier	ce		217457	0					
ANR	217540	Identifier	constructor		217457	1					
ANR	217541	PtrMemberAccess	ce -> parent -> constructor		217457	1					
ANR	217542	PtrMemberAccess	ce -> parent		217457	0					
ANR	217543	Identifier	ce		217457	0					
ANR	217544	Identifier	parent		217457	1					
ANR	217545	Identifier	constructor		217457	1					
ANR	217546	CompoundStatement		5:86:303:303	217457	1					
ANR	217547	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s has colliding constructor definitions coming from traits"" , ZSTR_VAL ( ce -> name ) )"	1033:3:36713:36832	217457	0	True				
ANR	217548	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s has colliding constructor definitions coming from traits"" , ZSTR_VAL ( ce -> name ) )"		217457	0					
ANR	217549	Callee	zend_error_noreturn		217457	0					
ANR	217550	Identifier	zend_error_noreturn		217457	0					
ANR	217551	ArgumentList	E_COMPILE_ERROR		217457	1					
ANR	217552	Argument	E_COMPILE_ERROR		217457	0					
ANR	217553	Identifier	E_COMPILE_ERROR		217457	0					
ANR	217554	Argument	"""%s has colliding constructor definitions coming from traits"""		217457	1					
ANR	217555	PrimaryExpression	"""%s has colliding constructor definitions coming from traits"""		217457	0					
ANR	217556	Argument	ZSTR_VAL ( ce -> name )		217457	2					
ANR	217557	CallExpression	ZSTR_VAL ( ce -> name )		217457	0					
ANR	217558	Callee	ZSTR_VAL		217457	0					
ANR	217559	Identifier	ZSTR_VAL		217457	0					
ANR	217560	ArgumentList	ce -> name		217457	1					
ANR	217561	Argument	ce -> name		217457	0					
ANR	217562	PtrMemberAccess	ce -> name		217457	0					
ANR	217563	Identifier	ce		217457	0					
ANR	217564	Identifier	name		217457	1					
ANR	217565	ExpressionStatement	ce -> constructor = fe	1035:2:36840:36860	217457	1	True				
ANR	217566	AssignmentExpression	ce -> constructor = fe		217457	0		=			
ANR	217567	PtrMemberAccess	ce -> constructor		217457	0					
ANR	217568	Identifier	ce		217457	0					
ANR	217569	Identifier	constructor		217457	1					
ANR	217570	Identifier	fe		217457	1					
ANR	217571	ExpressionStatement	fe -> common . fn_flags |= ZEND_ACC_CTOR	1035:24:36862:36898	217457	2	True				
ANR	217572	AssignmentExpression	fe -> common . fn_flags |= ZEND_ACC_CTOR		217457	0		|=			
ANR	217573	MemberAccess	fe -> common . fn_flags		217457	0					
ANR	217574	PtrMemberAccess	fe -> common		217457	0					
ANR	217575	Identifier	fe		217457	0					
ANR	217576	Identifier	common		217457	1					
ANR	217577	Identifier	fn_flags		217457	1					
ANR	217578	Identifier	ZEND_ACC_CTOR		217457	1					
ANR	217579	ElseStatement	else		217457	0					
ANR	217580	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_DESTRUCTOR_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		217457	0					
ANR	217581	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_DESTRUCTOR_FUNC_NAME , ZSTR_LEN ( mname ) )"	1036:12:36912:36981	217457	0	True				
ANR	217582	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_DESTRUCTOR_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	0					
ANR	217583	UnaryOperator	!		217457	0					
ANR	217584	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_DESTRUCTOR_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	1					
ANR	217585	Callee	strncmp		217457	0					
ANR	217586	Identifier	strncmp		217457	0					
ANR	217587	ArgumentList	ZSTR_VAL ( mname )		217457	1					
ANR	217588	Argument	ZSTR_VAL ( mname )		217457	0					
ANR	217589	CallExpression	ZSTR_VAL ( mname )		217457	0					
ANR	217590	Callee	ZSTR_VAL		217457	0					
ANR	217591	Identifier	ZSTR_VAL		217457	0					
ANR	217592	ArgumentList	mname		217457	1					
ANR	217593	Argument	mname		217457	0					
ANR	217594	Identifier	mname		217457	0					
ANR	217595	Argument	ZEND_DESTRUCTOR_FUNC_NAME		217457	1					
ANR	217596	Identifier	ZEND_DESTRUCTOR_FUNC_NAME		217457	0					
ANR	217597	Argument	ZSTR_LEN ( mname )		217457	2					
ANR	217598	CallExpression	ZSTR_LEN ( mname )		217457	0					
ANR	217599	Callee	ZSTR_LEN		217457	0					
ANR	217600	Identifier	ZSTR_LEN		217457	0					
ANR	217601	ArgumentList	mname		217457	1					
ANR	217602	Argument	mname		217457	0					
ANR	217603	Identifier	mname		217457	0					
ANR	217604	CompoundStatement		9:84:579:579	217457	1					
ANR	217605	ExpressionStatement	ce -> destructor = fe	1037:2:36988:37007	217457	0	True				
ANR	217606	AssignmentExpression	ce -> destructor = fe		217457	0		=			
ANR	217607	PtrMemberAccess	ce -> destructor		217457	0					
ANR	217608	Identifier	ce		217457	0					
ANR	217609	Identifier	destructor		217457	1					
ANR	217610	Identifier	fe		217457	1					
ANR	217611	ExpressionStatement	fe -> common . fn_flags |= ZEND_ACC_DTOR	1037:23:37009:37045	217457	1	True				
ANR	217612	AssignmentExpression	fe -> common . fn_flags |= ZEND_ACC_DTOR		217457	0		|=			
ANR	217613	MemberAccess	fe -> common . fn_flags		217457	0					
ANR	217614	PtrMemberAccess	fe -> common		217457	0					
ANR	217615	Identifier	fe		217457	0					
ANR	217616	Identifier	common		217457	1					
ANR	217617	Identifier	fn_flags		217457	1					
ANR	217618	Identifier	ZEND_ACC_DTOR		217457	1					
ANR	217619	ElseStatement	else		217457	0					
ANR	217620	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_GET_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		217457	0					
ANR	217621	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_GET_FUNC_NAME , ZSTR_LEN ( mname ) )"	1038:12:37059:37120	217457	0	True				
ANR	217622	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_GET_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	0					
ANR	217623	UnaryOperator	!		217457	0					
ANR	217624	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_GET_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	1					
ANR	217625	Callee	strncmp		217457	0					
ANR	217626	Identifier	strncmp		217457	0					
ANR	217627	ArgumentList	ZSTR_VAL ( mname )		217457	1					
ANR	217628	Argument	ZSTR_VAL ( mname )		217457	0					
ANR	217629	CallExpression	ZSTR_VAL ( mname )		217457	0					
ANR	217630	Callee	ZSTR_VAL		217457	0					
ANR	217631	Identifier	ZSTR_VAL		217457	0					
ANR	217632	ArgumentList	mname		217457	1					
ANR	217633	Argument	mname		217457	0					
ANR	217634	Identifier	mname		217457	0					
ANR	217635	Argument	ZEND_GET_FUNC_NAME		217457	1					
ANR	217636	Identifier	ZEND_GET_FUNC_NAME		217457	0					
ANR	217637	Argument	ZSTR_LEN ( mname )		217457	2					
ANR	217638	CallExpression	ZSTR_LEN ( mname )		217457	0					
ANR	217639	Callee	ZSTR_LEN		217457	0					
ANR	217640	Identifier	ZSTR_LEN		217457	0					
ANR	217641	ArgumentList	mname		217457	1					
ANR	217642	Argument	mname		217457	0					
ANR	217643	Identifier	mname		217457	0					
ANR	217644	CompoundStatement		11:76:718:718	217457	1					
ANR	217645	ExpressionStatement	ce -> __get = fe	1039:2:37127:37141	217457	0	True				
ANR	217646	AssignmentExpression	ce -> __get = fe		217457	0		=			
ANR	217647	PtrMemberAccess	ce -> __get		217457	0					
ANR	217648	Identifier	ce		217457	0					
ANR	217649	Identifier	__get		217457	1					
ANR	217650	Identifier	fe		217457	1					
ANR	217651	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_USE_GUARDS	1040:2:37145:37180	217457	1	True				
ANR	217652	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_USE_GUARDS		217457	0		|=			
ANR	217653	PtrMemberAccess	ce -> ce_flags		217457	0					
ANR	217654	Identifier	ce		217457	0					
ANR	217655	Identifier	ce_flags		217457	1					
ANR	217656	Identifier	ZEND_ACC_USE_GUARDS		217457	1					
ANR	217657	ElseStatement	else		217457	0					
ANR	217658	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_SET_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		217457	0					
ANR	217659	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_SET_FUNC_NAME , ZSTR_LEN ( mname ) )"	1041:12:37194:37255	217457	0	True				
ANR	217660	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_SET_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	0					
ANR	217661	UnaryOperator	!		217457	0					
ANR	217662	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_SET_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	1					
ANR	217663	Callee	strncmp		217457	0					
ANR	217664	Identifier	strncmp		217457	0					
ANR	217665	ArgumentList	ZSTR_VAL ( mname )		217457	1					
ANR	217666	Argument	ZSTR_VAL ( mname )		217457	0					
ANR	217667	CallExpression	ZSTR_VAL ( mname )		217457	0					
ANR	217668	Callee	ZSTR_VAL		217457	0					
ANR	217669	Identifier	ZSTR_VAL		217457	0					
ANR	217670	ArgumentList	mname		217457	1					
ANR	217671	Argument	mname		217457	0					
ANR	217672	Identifier	mname		217457	0					
ANR	217673	Argument	ZEND_SET_FUNC_NAME		217457	1					
ANR	217674	Identifier	ZEND_SET_FUNC_NAME		217457	0					
ANR	217675	Argument	ZSTR_LEN ( mname )		217457	2					
ANR	217676	CallExpression	ZSTR_LEN ( mname )		217457	0					
ANR	217677	Callee	ZSTR_LEN		217457	0					
ANR	217678	Identifier	ZSTR_LEN		217457	0					
ANR	217679	ArgumentList	mname		217457	1					
ANR	217680	Argument	mname		217457	0					
ANR	217681	Identifier	mname		217457	0					
ANR	217682	CompoundStatement		14:76:853:853	217457	1					
ANR	217683	ExpressionStatement	ce -> __set = fe	1042:2:37262:37276	217457	0	True				
ANR	217684	AssignmentExpression	ce -> __set = fe		217457	0		=			
ANR	217685	PtrMemberAccess	ce -> __set		217457	0					
ANR	217686	Identifier	ce		217457	0					
ANR	217687	Identifier	__set		217457	1					
ANR	217688	Identifier	fe		217457	1					
ANR	217689	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_USE_GUARDS	1043:2:37280:37315	217457	1	True				
ANR	217690	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_USE_GUARDS		217457	0		|=			
ANR	217691	PtrMemberAccess	ce -> ce_flags		217457	0					
ANR	217692	Identifier	ce		217457	0					
ANR	217693	Identifier	ce_flags		217457	1					
ANR	217694	Identifier	ZEND_ACC_USE_GUARDS		217457	1					
ANR	217695	ElseStatement	else		217457	0					
ANR	217696	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_CALL_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		217457	0					
ANR	217697	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_CALL_FUNC_NAME , ZSTR_LEN ( mname ) )"	1044:12:37329:37391	217457	0	True				
ANR	217698	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_CALL_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	0					
ANR	217699	UnaryOperator	!		217457	0					
ANR	217700	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_CALL_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	1					
ANR	217701	Callee	strncmp		217457	0					
ANR	217702	Identifier	strncmp		217457	0					
ANR	217703	ArgumentList	ZSTR_VAL ( mname )		217457	1					
ANR	217704	Argument	ZSTR_VAL ( mname )		217457	0					
ANR	217705	CallExpression	ZSTR_VAL ( mname )		217457	0					
ANR	217706	Callee	ZSTR_VAL		217457	0					
ANR	217707	Identifier	ZSTR_VAL		217457	0					
ANR	217708	ArgumentList	mname		217457	1					
ANR	217709	Argument	mname		217457	0					
ANR	217710	Identifier	mname		217457	0					
ANR	217711	Argument	ZEND_CALL_FUNC_NAME		217457	1					
ANR	217712	Identifier	ZEND_CALL_FUNC_NAME		217457	0					
ANR	217713	Argument	ZSTR_LEN ( mname )		217457	2					
ANR	217714	CallExpression	ZSTR_LEN ( mname )		217457	0					
ANR	217715	Callee	ZSTR_LEN		217457	0					
ANR	217716	Identifier	ZSTR_LEN		217457	0					
ANR	217717	ArgumentList	mname		217457	1					
ANR	217718	Argument	mname		217457	0					
ANR	217719	Identifier	mname		217457	0					
ANR	217720	CompoundStatement		17:77:989:989	217457	1					
ANR	217721	ExpressionStatement	ce -> __call = fe	1045:2:37398:37413	217457	0	True				
ANR	217722	AssignmentExpression	ce -> __call = fe		217457	0		=			
ANR	217723	PtrMemberAccess	ce -> __call		217457	0					
ANR	217724	Identifier	ce		217457	0					
ANR	217725	Identifier	__call		217457	1					
ANR	217726	Identifier	fe		217457	1					
ANR	217727	ElseStatement	else		217457	0					
ANR	217728	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_UNSET_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		217457	0					
ANR	217729	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_UNSET_FUNC_NAME , ZSTR_LEN ( mname ) )"	1046:12:37427:37490	217457	0	True				
ANR	217730	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_UNSET_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	0					
ANR	217731	UnaryOperator	!		217457	0					
ANR	217732	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_UNSET_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	1					
ANR	217733	Callee	strncmp		217457	0					
ANR	217734	Identifier	strncmp		217457	0					
ANR	217735	ArgumentList	ZSTR_VAL ( mname )		217457	1					
ANR	217736	Argument	ZSTR_VAL ( mname )		217457	0					
ANR	217737	CallExpression	ZSTR_VAL ( mname )		217457	0					
ANR	217738	Callee	ZSTR_VAL		217457	0					
ANR	217739	Identifier	ZSTR_VAL		217457	0					
ANR	217740	ArgumentList	mname		217457	1					
ANR	217741	Argument	mname		217457	0					
ANR	217742	Identifier	mname		217457	0					
ANR	217743	Argument	ZEND_UNSET_FUNC_NAME		217457	1					
ANR	217744	Identifier	ZEND_UNSET_FUNC_NAME		217457	0					
ANR	217745	Argument	ZSTR_LEN ( mname )		217457	2					
ANR	217746	CallExpression	ZSTR_LEN ( mname )		217457	0					
ANR	217747	Callee	ZSTR_LEN		217457	0					
ANR	217748	Identifier	ZSTR_LEN		217457	0					
ANR	217749	ArgumentList	mname		217457	1					
ANR	217750	Argument	mname		217457	0					
ANR	217751	Identifier	mname		217457	0					
ANR	217752	CompoundStatement		19:78:1088:1088	217457	1					
ANR	217753	ExpressionStatement	ce -> __unset = fe	1047:2:37497:37513	217457	0	True				
ANR	217754	AssignmentExpression	ce -> __unset = fe		217457	0		=			
ANR	217755	PtrMemberAccess	ce -> __unset		217457	0					
ANR	217756	Identifier	ce		217457	0					
ANR	217757	Identifier	__unset		217457	1					
ANR	217758	Identifier	fe		217457	1					
ANR	217759	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_USE_GUARDS	1048:2:37517:37552	217457	1	True				
ANR	217760	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_USE_GUARDS		217457	0		|=			
ANR	217761	PtrMemberAccess	ce -> ce_flags		217457	0					
ANR	217762	Identifier	ce		217457	0					
ANR	217763	Identifier	ce_flags		217457	1					
ANR	217764	Identifier	ZEND_ACC_USE_GUARDS		217457	1					
ANR	217765	ElseStatement	else		217457	0					
ANR	217766	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_ISSET_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		217457	0					
ANR	217767	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_ISSET_FUNC_NAME , ZSTR_LEN ( mname ) )"	1049:12:37566:37629	217457	0	True				
ANR	217768	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_ISSET_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	0					
ANR	217769	UnaryOperator	!		217457	0					
ANR	217770	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_ISSET_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	1					
ANR	217771	Callee	strncmp		217457	0					
ANR	217772	Identifier	strncmp		217457	0					
ANR	217773	ArgumentList	ZSTR_VAL ( mname )		217457	1					
ANR	217774	Argument	ZSTR_VAL ( mname )		217457	0					
ANR	217775	CallExpression	ZSTR_VAL ( mname )		217457	0					
ANR	217776	Callee	ZSTR_VAL		217457	0					
ANR	217777	Identifier	ZSTR_VAL		217457	0					
ANR	217778	ArgumentList	mname		217457	1					
ANR	217779	Argument	mname		217457	0					
ANR	217780	Identifier	mname		217457	0					
ANR	217781	Argument	ZEND_ISSET_FUNC_NAME		217457	1					
ANR	217782	Identifier	ZEND_ISSET_FUNC_NAME		217457	0					
ANR	217783	Argument	ZSTR_LEN ( mname )		217457	2					
ANR	217784	CallExpression	ZSTR_LEN ( mname )		217457	0					
ANR	217785	Callee	ZSTR_LEN		217457	0					
ANR	217786	Identifier	ZSTR_LEN		217457	0					
ANR	217787	ArgumentList	mname		217457	1					
ANR	217788	Argument	mname		217457	0					
ANR	217789	Identifier	mname		217457	0					
ANR	217790	CompoundStatement		22:78:1227:1227	217457	1					
ANR	217791	ExpressionStatement	ce -> __isset = fe	1050:2:37636:37652	217457	0	True				
ANR	217792	AssignmentExpression	ce -> __isset = fe		217457	0		=			
ANR	217793	PtrMemberAccess	ce -> __isset		217457	0					
ANR	217794	Identifier	ce		217457	0					
ANR	217795	Identifier	__isset		217457	1					
ANR	217796	Identifier	fe		217457	1					
ANR	217797	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_USE_GUARDS	1051:2:37656:37691	217457	1	True				
ANR	217798	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_USE_GUARDS		217457	0		|=			
ANR	217799	PtrMemberAccess	ce -> ce_flags		217457	0					
ANR	217800	Identifier	ce		217457	0					
ANR	217801	Identifier	ce_flags		217457	1					
ANR	217802	Identifier	ZEND_ACC_USE_GUARDS		217457	1					
ANR	217803	ElseStatement	else		217457	0					
ANR	217804	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_CALLSTATIC_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		217457	0					
ANR	217805	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_CALLSTATIC_FUNC_NAME , ZSTR_LEN ( mname ) )"	1052:12:37705:37773	217457	0	True				
ANR	217806	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_CALLSTATIC_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	0					
ANR	217807	UnaryOperator	!		217457	0					
ANR	217808	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_CALLSTATIC_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	1					
ANR	217809	Callee	strncmp		217457	0					
ANR	217810	Identifier	strncmp		217457	0					
ANR	217811	ArgumentList	ZSTR_VAL ( mname )		217457	1					
ANR	217812	Argument	ZSTR_VAL ( mname )		217457	0					
ANR	217813	CallExpression	ZSTR_VAL ( mname )		217457	0					
ANR	217814	Callee	ZSTR_VAL		217457	0					
ANR	217815	Identifier	ZSTR_VAL		217457	0					
ANR	217816	ArgumentList	mname		217457	1					
ANR	217817	Argument	mname		217457	0					
ANR	217818	Identifier	mname		217457	0					
ANR	217819	Argument	ZEND_CALLSTATIC_FUNC_NAME		217457	1					
ANR	217820	Identifier	ZEND_CALLSTATIC_FUNC_NAME		217457	0					
ANR	217821	Argument	ZSTR_LEN ( mname )		217457	2					
ANR	217822	CallExpression	ZSTR_LEN ( mname )		217457	0					
ANR	217823	Callee	ZSTR_LEN		217457	0					
ANR	217824	Identifier	ZSTR_LEN		217457	0					
ANR	217825	ArgumentList	mname		217457	1					
ANR	217826	Argument	mname		217457	0					
ANR	217827	Identifier	mname		217457	0					
ANR	217828	CompoundStatement		25:83:1371:1371	217457	1					
ANR	217829	ExpressionStatement	ce -> __callstatic = fe	1053:2:37780:37801	217457	0	True				
ANR	217830	AssignmentExpression	ce -> __callstatic = fe		217457	0		=			
ANR	217831	PtrMemberAccess	ce -> __callstatic		217457	0					
ANR	217832	Identifier	ce		217457	0					
ANR	217833	Identifier	__callstatic		217457	1					
ANR	217834	Identifier	fe		217457	1					
ANR	217835	ElseStatement	else		217457	0					
ANR	217836	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_TOSTRING_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		217457	0					
ANR	217837	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_TOSTRING_FUNC_NAME , ZSTR_LEN ( mname ) )"	1054:12:37815:37881	217457	0	True				
ANR	217838	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_TOSTRING_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	0					
ANR	217839	UnaryOperator	!		217457	0					
ANR	217840	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_TOSTRING_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	1					
ANR	217841	Callee	strncmp		217457	0					
ANR	217842	Identifier	strncmp		217457	0					
ANR	217843	ArgumentList	ZSTR_VAL ( mname )		217457	1					
ANR	217844	Argument	ZSTR_VAL ( mname )		217457	0					
ANR	217845	CallExpression	ZSTR_VAL ( mname )		217457	0					
ANR	217846	Callee	ZSTR_VAL		217457	0					
ANR	217847	Identifier	ZSTR_VAL		217457	0					
ANR	217848	ArgumentList	mname		217457	1					
ANR	217849	Argument	mname		217457	0					
ANR	217850	Identifier	mname		217457	0					
ANR	217851	Argument	ZEND_TOSTRING_FUNC_NAME		217457	1					
ANR	217852	Identifier	ZEND_TOSTRING_FUNC_NAME		217457	0					
ANR	217853	Argument	ZSTR_LEN ( mname )		217457	2					
ANR	217854	CallExpression	ZSTR_LEN ( mname )		217457	0					
ANR	217855	Callee	ZSTR_LEN		217457	0					
ANR	217856	Identifier	ZSTR_LEN		217457	0					
ANR	217857	ArgumentList	mname		217457	1					
ANR	217858	Argument	mname		217457	0					
ANR	217859	Identifier	mname		217457	0					
ANR	217860	CompoundStatement		27:81:1479:1479	217457	1					
ANR	217861	ExpressionStatement	ce -> __tostring = fe	1055:2:37888:37907	217457	0	True				
ANR	217862	AssignmentExpression	ce -> __tostring = fe		217457	0		=			
ANR	217863	PtrMemberAccess	ce -> __tostring		217457	0					
ANR	217864	Identifier	ce		217457	0					
ANR	217865	Identifier	__tostring		217457	1					
ANR	217866	Identifier	fe		217457	1					
ANR	217867	ElseStatement	else		217457	0					
ANR	217868	IfStatement	"if ( ! strncmp ( ZSTR_VAL ( mname ) , ZEND_DEBUGINFO_FUNC_NAME , ZSTR_LEN ( mname ) ) )"		217457	0					
ANR	217869	Condition	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_DEBUGINFO_FUNC_NAME , ZSTR_LEN ( mname ) )"	1056:12:37921:37988	217457	0	True				
ANR	217870	UnaryOperationExpression	"! strncmp ( ZSTR_VAL ( mname ) , ZEND_DEBUGINFO_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	0					
ANR	217871	UnaryOperator	!		217457	0					
ANR	217872	CallExpression	"strncmp ( ZSTR_VAL ( mname ) , ZEND_DEBUGINFO_FUNC_NAME , ZSTR_LEN ( mname ) )"		217457	1					
ANR	217873	Callee	strncmp		217457	0					
ANR	217874	Identifier	strncmp		217457	0					
ANR	217875	ArgumentList	ZSTR_VAL ( mname )		217457	1					
ANR	217876	Argument	ZSTR_VAL ( mname )		217457	0					
ANR	217877	CallExpression	ZSTR_VAL ( mname )		217457	0					
ANR	217878	Callee	ZSTR_VAL		217457	0					
ANR	217879	Identifier	ZSTR_VAL		217457	0					
ANR	217880	ArgumentList	mname		217457	1					
ANR	217881	Argument	mname		217457	0					
ANR	217882	Identifier	mname		217457	0					
ANR	217883	Argument	ZEND_DEBUGINFO_FUNC_NAME		217457	1					
ANR	217884	Identifier	ZEND_DEBUGINFO_FUNC_NAME		217457	0					
ANR	217885	Argument	ZSTR_LEN ( mname )		217457	2					
ANR	217886	CallExpression	ZSTR_LEN ( mname )		217457	0					
ANR	217887	Callee	ZSTR_LEN		217457	0					
ANR	217888	Identifier	ZSTR_LEN		217457	0					
ANR	217889	ArgumentList	mname		217457	1					
ANR	217890	Argument	mname		217457	0					
ANR	217891	Identifier	mname		217457	0					
ANR	217892	CompoundStatement		29:82:1586:1586	217457	1					
ANR	217893	ExpressionStatement	ce -> __debugInfo = fe	1057:2:37995:38015	217457	0	True				
ANR	217894	AssignmentExpression	ce -> __debugInfo = fe		217457	0		=			
ANR	217895	PtrMemberAccess	ce -> __debugInfo		217457	0					
ANR	217896	Identifier	ce		217457	0					
ANR	217897	Identifier	__debugInfo		217457	1					
ANR	217898	Identifier	fe		217457	1					
ANR	217899	ElseStatement	else		217457	0					
ANR	217900	IfStatement	if ( ZSTR_LEN ( ce -> name ) == ZSTR_LEN ( mname ) )		217457	0					
ANR	217901	Condition	ZSTR_LEN ( ce -> name ) == ZSTR_LEN ( mname )	1058:12:38029:38065	217457	0	True				
ANR	217902	EqualityExpression	ZSTR_LEN ( ce -> name ) == ZSTR_LEN ( mname )		217457	0		==			
ANR	217903	CallExpression	ZSTR_LEN ( ce -> name )		217457	0					
ANR	217904	Callee	ZSTR_LEN		217457	0					
ANR	217905	Identifier	ZSTR_LEN		217457	0					
ANR	217906	ArgumentList	ce -> name		217457	1					
ANR	217907	Argument	ce -> name		217457	0					
ANR	217908	PtrMemberAccess	ce -> name		217457	0					
ANR	217909	Identifier	ce		217457	0					
ANR	217910	Identifier	name		217457	1					
ANR	217911	CallExpression	ZSTR_LEN ( mname )		217457	1					
ANR	217912	Callee	ZSTR_LEN		217457	0					
ANR	217913	Identifier	ZSTR_LEN		217457	0					
ANR	217914	ArgumentList	mname		217457	1					
ANR	217915	Argument	mname		217457	0					
ANR	217916	Identifier	mname		217457	0					
ANR	217917	CompoundStatement		32:2:1667:1726	217457	1					
ANR	217918	IdentifierDeclStatement	zend_string * lowercase_name = zend_string_tolower ( ce -> name ) ;	1059:2:38072:38131	217457	0	True				
ANR	217919	IdentifierDecl	* lowercase_name = zend_string_tolower ( ce -> name )		217457	0					
ANR	217920	IdentifierDeclType	zend_string *		217457	0					
ANR	217921	Identifier	lowercase_name		217457	1					
ANR	217922	AssignmentExpression	* lowercase_name = zend_string_tolower ( ce -> name )		217457	2		=			
ANR	217923	Identifier	lowercase_name		217457	0					
ANR	217924	CallExpression	zend_string_tolower ( ce -> name )		217457	1					
ANR	217925	Callee	zend_string_tolower		217457	0					
ANR	217926	Identifier	zend_string_tolower		217457	0					
ANR	217927	ArgumentList	ce -> name		217457	1					
ANR	217928	Argument	ce -> name		217457	0					
ANR	217929	PtrMemberAccess	ce -> name		217457	0					
ANR	217930	Identifier	ce		217457	0					
ANR	217931	Identifier	name		217457	1					
ANR	217932	ExpressionStatement	lowercase_name = zend_new_interned_string ( lowercase_name )	1060:2:38135:38192	217457	1	True				
ANR	217933	AssignmentExpression	lowercase_name = zend_new_interned_string ( lowercase_name )		217457	0		=			
ANR	217934	Identifier	lowercase_name		217457	0					
ANR	217935	CallExpression	zend_new_interned_string ( lowercase_name )		217457	1					
ANR	217936	Callee	zend_new_interned_string		217457	0					
ANR	217937	Identifier	zend_new_interned_string		217457	0					
ANR	217938	ArgumentList	lowercase_name		217457	1					
ANR	217939	Argument	lowercase_name		217457	0					
ANR	217940	Identifier	lowercase_name		217457	0					
ANR	217941	IfStatement	"if ( ! memcmp ( ZSTR_VAL ( mname ) , ZSTR_VAL ( lowercase_name ) , ZSTR_LEN ( mname ) ) )"		217457	2					
ANR	217942	Condition	"! memcmp ( ZSTR_VAL ( mname ) , ZSTR_VAL ( lowercase_name ) , ZSTR_LEN ( mname ) )"	1061:6:38200:38266	217457	0	True				
ANR	217943	UnaryOperationExpression	"! memcmp ( ZSTR_VAL ( mname ) , ZSTR_VAL ( lowercase_name ) , ZSTR_LEN ( mname ) )"		217457	0					
ANR	217944	UnaryOperator	!		217457	0					
ANR	217945	CallExpression	"memcmp ( ZSTR_VAL ( mname ) , ZSTR_VAL ( lowercase_name ) , ZSTR_LEN ( mname ) )"		217457	1					
ANR	217946	Callee	memcmp		217457	0					
ANR	217947	Identifier	memcmp		217457	0					
ANR	217948	ArgumentList	ZSTR_VAL ( mname )		217457	1					
ANR	217949	Argument	ZSTR_VAL ( mname )		217457	0					
ANR	217950	CallExpression	ZSTR_VAL ( mname )		217457	0					
ANR	217951	Callee	ZSTR_VAL		217457	0					
ANR	217952	Identifier	ZSTR_VAL		217457	0					
ANR	217953	ArgumentList	mname		217457	1					
ANR	217954	Argument	mname		217457	0					
ANR	217955	Identifier	mname		217457	0					
ANR	217956	Argument	ZSTR_VAL ( lowercase_name )		217457	1					
ANR	217957	CallExpression	ZSTR_VAL ( lowercase_name )		217457	0					
ANR	217958	Callee	ZSTR_VAL		217457	0					
ANR	217959	Identifier	ZSTR_VAL		217457	0					
ANR	217960	ArgumentList	lowercase_name		217457	1					
ANR	217961	Argument	lowercase_name		217457	0					
ANR	217962	Identifier	lowercase_name		217457	0					
ANR	217963	Argument	ZSTR_LEN ( mname )		217457	2					
ANR	217964	CallExpression	ZSTR_LEN ( mname )		217457	0					
ANR	217965	Callee	ZSTR_LEN		217457	0					
ANR	217966	Identifier	ZSTR_LEN		217457	0					
ANR	217967	ArgumentList	mname		217457	1					
ANR	217968	Argument	mname		217457	0					
ANR	217969	Identifier	mname		217457	0					
ANR	217970	CompoundStatement		34:75:1864:1864	217457	1					
ANR	217971	IfStatement	if ( ce -> constructor && ( ! ce -> parent || ce -> constructor != ce -> parent -> constructor ) )		217457	0					
ANR	217972	Condition	ce -> constructor && ( ! ce -> parent || ce -> constructor != ce -> parent -> constructor )	1062:7:38278:38356	217457	0	True				
ANR	217973	AndExpression	ce -> constructor && ( ! ce -> parent || ce -> constructor != ce -> parent -> constructor )		217457	0		&&			
ANR	217974	PtrMemberAccess	ce -> constructor		217457	0					
ANR	217975	Identifier	ce		217457	0					
ANR	217976	Identifier	constructor		217457	1					
ANR	217977	OrExpression	! ce -> parent || ce -> constructor != ce -> parent -> constructor		217457	1		||			
ANR	217978	UnaryOperationExpression	! ce -> parent		217457	0					
ANR	217979	UnaryOperator	!		217457	0					
ANR	217980	PtrMemberAccess	ce -> parent		217457	1					
ANR	217981	Identifier	ce		217457	0					
ANR	217982	Identifier	parent		217457	1					
ANR	217983	EqualityExpression	ce -> constructor != ce -> parent -> constructor		217457	1		!=			
ANR	217984	PtrMemberAccess	ce -> constructor		217457	0					
ANR	217985	Identifier	ce		217457	0					
ANR	217986	Identifier	constructor		217457	1					
ANR	217987	PtrMemberAccess	ce -> parent -> constructor		217457	1					
ANR	217988	PtrMemberAccess	ce -> parent		217457	0					
ANR	217989	Identifier	ce		217457	0					
ANR	217990	Identifier	parent		217457	1					
ANR	217991	Identifier	constructor		217457	1					
ANR	217992	CompoundStatement		35:88:1954:1954	217457	1					
ANR	217993	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s has colliding constructor definitions coming from traits"" , ZSTR_VAL ( ce -> name ) )"	1063:4:38365:38484	217457	0	True				
ANR	217994	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s has colliding constructor definitions coming from traits"" , ZSTR_VAL ( ce -> name ) )"		217457	0					
ANR	217995	Callee	zend_error_noreturn		217457	0					
ANR	217996	Identifier	zend_error_noreturn		217457	0					
ANR	217997	ArgumentList	E_COMPILE_ERROR		217457	1					
ANR	217998	Argument	E_COMPILE_ERROR		217457	0					
ANR	217999	Identifier	E_COMPILE_ERROR		217457	0					
ANR	218000	Argument	"""%s has colliding constructor definitions coming from traits"""		217457	1					
ANR	218001	PrimaryExpression	"""%s has colliding constructor definitions coming from traits"""		217457	0					
ANR	218002	Argument	ZSTR_VAL ( ce -> name )		217457	2					
ANR	218003	CallExpression	ZSTR_VAL ( ce -> name )		217457	0					
ANR	218004	Callee	ZSTR_VAL		217457	0					
ANR	218005	Identifier	ZSTR_VAL		217457	0					
ANR	218006	ArgumentList	ce -> name		217457	1					
ANR	218007	Argument	ce -> name		217457	0					
ANR	218008	PtrMemberAccess	ce -> name		217457	0					
ANR	218009	Identifier	ce		217457	0					
ANR	218010	Identifier	name		217457	1					
ANR	218011	ExpressionStatement	ce -> constructor = fe	1065:3:38494:38514	217457	1	True				
ANR	218012	AssignmentExpression	ce -> constructor = fe		217457	0		=			
ANR	218013	PtrMemberAccess	ce -> constructor		217457	0					
ANR	218014	Identifier	ce		217457	0					
ANR	218015	Identifier	constructor		217457	1					
ANR	218016	Identifier	fe		217457	1					
ANR	218017	ExpressionStatement	fe -> common . fn_flags |= ZEND_ACC_CTOR	1066:3:38519:38555	217457	2	True				
ANR	218018	AssignmentExpression	fe -> common . fn_flags |= ZEND_ACC_CTOR		217457	0		|=			
ANR	218019	MemberAccess	fe -> common . fn_flags		217457	0					
ANR	218020	PtrMemberAccess	fe -> common		217457	0					
ANR	218021	Identifier	fe		217457	0					
ANR	218022	Identifier	common		217457	1					
ANR	218023	Identifier	fn_flags		217457	1					
ANR	218024	Identifier	ZEND_ACC_CTOR		217457	1					
ANR	218025	ExpressionStatement	zend_string_release ( lowercase_name )	1068:2:38563:38598	217457	3	True				
ANR	218026	CallExpression	zend_string_release ( lowercase_name )		217457	0					
ANR	218027	Callee	zend_string_release		217457	0					
ANR	218028	Identifier	zend_string_release		217457	0					
ANR	218029	ArgumentList	lowercase_name		217457	1					
ANR	218030	Argument	lowercase_name		217457	0					
ANR	218031	Identifier	lowercase_name		217457	0					
ANR	218032	ReturnType	static void		217457	1					
ANR	218033	Identifier	zend_add_magic_methods		217457	2					
ANR	218034	ParameterList	"zend_class_entry * ce , zend_string * mname , zend_function * fe"		217457	3					
ANR	218035	Parameter	zend_class_entry * ce	1027:35:36333:36352	217457	0	True				
ANR	218036	ParameterType	zend_class_entry *		217457	0					
ANR	218037	Identifier	ce		217457	1					
ANR	218038	Parameter	zend_string * mname	1027:57:36355:36372	217457	1	True				
ANR	218039	ParameterType	zend_string *		217457	0					
ANR	218040	Identifier	mname		217457	1					
ANR	218041	Parameter	zend_function * fe	1027:77:36375:36391	217457	2	True				
ANR	218042	ParameterType	zend_function *		217457	0					
ANR	218043	Identifier	fe		217457	1					
ANR	218044	CFGEntryNode	ENTRY		217457		True				
ANR	218045	CFGExitNode	EXIT		217457		True				
ANR	218046	Symbol	ce -> __set		217457						
ANR	218047	Symbol	fe -> common . fn_flags		217457						
ANR	218048	Symbol	ZEND_CALLSTATIC_FUNC_NAME		217457						
ANR	218049	Symbol	ZEND_CONSTRUCTOR_FUNC_NAME		217457						
ANR	218050	Symbol	E_COMPILE_ERROR		217457						
ANR	218051	Symbol	ZEND_ACC_USE_GUARDS		217457						
ANR	218052	Symbol	ZEND_ACC_DTOR		217457						
ANR	218053	Symbol	mname		217457						
ANR	218054	Symbol	* ce		217457						
ANR	218055	Symbol	* * ce		217457						
ANR	218056	Symbol	ZEND_GET_FUNC_NAME		217457						
ANR	218057	Symbol	ZEND_DEBUGINFO_FUNC_NAME		217457						
ANR	218058	Symbol	ZEND_CALL_FUNC_NAME		217457						
ANR	218059	Symbol	zend_string_tolower		217457						
ANR	218060	Symbol	strncmp		217457						
ANR	218061	Symbol	ce -> __tostring		217457						
ANR	218062	Symbol	* ce -> parent		217457						
ANR	218063	Symbol	memcmp		217457						
ANR	218064	Symbol	ZEND_CLONE_FUNC_NAME		217457						
ANR	218065	Symbol	ce -> __get		217457						
ANR	218066	Symbol	ZEND_ISSET_FUNC_NAME		217457						
ANR	218067	Symbol	ce -> name		217457						
ANR	218068	Symbol	ce -> __callstatic		217457						
ANR	218069	Symbol	ZEND_SET_FUNC_NAME		217457						
ANR	218070	Symbol	fe -> common		217457						
ANR	218071	Symbol	ce -> parent -> constructor		217457						
ANR	218072	Symbol	ce		217457						
ANR	218073	Symbol	ce -> constructor		217457						
ANR	218074	Symbol	ce -> destructor		217457						
ANR	218075	Symbol	ce -> __isset		217457						
ANR	218076	Symbol	ce -> parent		217457						
ANR	218077	Symbol	* fe		217457						
ANR	218078	Symbol	ZEND_ACC_CLONE		217457						
ANR	218079	Symbol	ZSTR_VAL		217457						
ANR	218080	Symbol	ce -> ce_flags		217457						
ANR	218081	Symbol	ce -> __debugInfo		217457						
ANR	218082	Symbol	ce -> __unset		217457						
ANR	218083	Symbol	zend_new_interned_string		217457						
ANR	218084	Symbol	ZEND_ACC_CTOR		217457						
ANR	218085	Symbol	ce -> __call		217457						
ANR	218086	Symbol	ZSTR_LEN		217457						
ANR	218087	Symbol	lowercase_name		217457						
ANR	218088	Symbol	ZEND_DESTRUCTOR_FUNC_NAME		217457						
ANR	218089	Symbol	ZEND_TOSTRING_FUNC_NAME		217457						
ANR	218090	Symbol	ce -> clone		217457						
ANR	218091	Symbol	ZEND_UNSET_FUNC_NAME		217457						
ANR	218092	Symbol	fe		217457						
ANR	218093	Function	zend_add_trait_method	1073:0:38616:42408							
ANR	218094	FunctionDef	"zend_add_trait_method (zend_class_entry * ce , const char * name , zend_string * key , zend_function * fn , HashTable * * overriden)"		218093	0					
ANR	218095	CompoundStatement		1074:0:38760:42408	218093	0					
ANR	218096	IdentifierDeclStatement	zend_function * existing_fn = NULL ;	1075:1:38763:38796	218093	0	True				
ANR	218097	IdentifierDecl	* existing_fn = NULL		218093	0					
ANR	218098	IdentifierDeclType	zend_function *		218093	0					
ANR	218099	Identifier	existing_fn		218093	1					
ANR	218100	AssignmentExpression	* existing_fn = NULL		218093	2		=			
ANR	218101	Identifier	NULL		218093	0					
ANR	218102	Identifier	NULL		218093	1					
ANR	218103	IdentifierDeclStatement	zend_function * new_fn ;	1076:1:38799:38820	218093	1	True				
ANR	218104	IdentifierDecl	* new_fn		218093	0					
ANR	218105	IdentifierDeclType	zend_function *		218093	0					
ANR	218106	Identifier	new_fn		218093	1					
ANR	218107	IfStatement	"if ( ( existing_fn = zend_hash_find_ptr ( & ce -> function_table , key ) ) != NULL )"		218093	2					
ANR	218108	Condition	"( existing_fn = zend_hash_find_ptr ( & ce -> function_table , key ) ) != NULL"	1078:5:38828:38895	218093	0	True				
ANR	218109	EqualityExpression	"( existing_fn = zend_hash_find_ptr ( & ce -> function_table , key ) ) != NULL"		218093	0		!=			
ANR	218110	AssignmentExpression	"existing_fn = zend_hash_find_ptr ( & ce -> function_table , key )"		218093	0		=			
ANR	218111	Identifier	existing_fn		218093	0					
ANR	218112	CallExpression	"zend_hash_find_ptr ( & ce -> function_table , key )"		218093	1					
ANR	218113	Callee	zend_hash_find_ptr		218093	0					
ANR	218114	Identifier	zend_hash_find_ptr		218093	0					
ANR	218115	ArgumentList	& ce -> function_table		218093	1					
ANR	218116	Argument	& ce -> function_table		218093	0					
ANR	218117	UnaryOperationExpression	& ce -> function_table		218093	0					
ANR	218118	UnaryOperator	&		218093	0					
ANR	218119	PtrMemberAccess	ce -> function_table		218093	1					
ANR	218120	Identifier	ce		218093	0					
ANR	218121	Identifier	function_table		218093	1					
ANR	218122	Argument	key		218093	1					
ANR	218123	Identifier	key		218093	0					
ANR	218124	Identifier	NULL		218093	1					
ANR	218125	CompoundStatement		5:75:137:137	218093	1					
ANR	218126	IfStatement	if ( existing_fn -> common . scope == ce )		218093	0					
ANR	218127	Condition	existing_fn -> common . scope == ce	1079:6:38906:38936	218093	0	True				
ANR	218128	EqualityExpression	existing_fn -> common . scope == ce		218093	0		==			
ANR	218129	MemberAccess	existing_fn -> common . scope		218093	0					
ANR	218130	PtrMemberAccess	existing_fn -> common		218093	0					
ANR	218131	Identifier	existing_fn		218093	0					
ANR	218132	Identifier	common		218093	1					
ANR	218133	Identifier	scope		218093	1					
ANR	218134	Identifier	ce		218093	1					
ANR	218135	CompoundStatement		6:39:178:178	218093	1					
ANR	218136	IfStatement	if ( * overriden )		218093	0					
ANR	218137	Condition	* overriden	1082:7:39081:39090	218093	0	True				
ANR	218138	UnaryOperationExpression	* overriden		218093	0					
ANR	218139	UnaryOperator	*		218093	0					
ANR	218140	Identifier	overriden		218093	1					
ANR	218141	CompoundStatement		9:19:332:332	218093	1					
ANR	218142	IfStatement	"if ( ( existing_fn = zend_hash_find_ptr ( * overriden , key ) ) != NULL )"		218093	0					
ANR	218143	Condition	"( existing_fn = zend_hash_find_ptr ( * overriden , key ) ) != NULL"	1083:8:39103:39161	218093	0	True				
ANR	218144	EqualityExpression	"( existing_fn = zend_hash_find_ptr ( * overriden , key ) ) != NULL"		218093	0		!=			
ANR	218145	AssignmentExpression	"existing_fn = zend_hash_find_ptr ( * overriden , key )"		218093	0		=			
ANR	218146	Identifier	existing_fn		218093	0					
ANR	218147	CallExpression	"zend_hash_find_ptr ( * overriden , key )"		218093	1					
ANR	218148	Callee	zend_hash_find_ptr		218093	0					
ANR	218149	Identifier	zend_hash_find_ptr		218093	0					
ANR	218150	ArgumentList	* overriden		218093	1					
ANR	218151	Argument	* overriden		218093	0					
ANR	218152	UnaryOperationExpression	* overriden		218093	0					
ANR	218153	UnaryOperator	*		218093	0					
ANR	218154	Identifier	overriden		218093	1					
ANR	218155	Argument	key		218093	1					
ANR	218156	Identifier	key		218093	0					
ANR	218157	Identifier	NULL		218093	1					
ANR	218158	CompoundStatement		10:69:403:403	218093	1					
ANR	218159	IfStatement	if ( existing_fn -> common . fn_flags & ZEND_ACC_ABSTRACT )		218093	0					
ANR	218160	Condition	existing_fn -> common . fn_flags & ZEND_ACC_ABSTRACT	1084:9:39175:39222	218093	0	True				
ANR	218161	BitAndExpression	existing_fn -> common . fn_flags & ZEND_ACC_ABSTRACT		218093	0		&			
ANR	218162	MemberAccess	existing_fn -> common . fn_flags		218093	0					
ANR	218163	PtrMemberAccess	existing_fn -> common		218093	0					
ANR	218164	Identifier	existing_fn		218093	0					
ANR	218165	Identifier	common		218093	1					
ANR	218166	Identifier	fn_flags		218093	1					
ANR	218167	Identifier	ZEND_ACC_ABSTRACT		218093	1					
ANR	218168	CompoundStatement		11:59:464:464	218093	1					
ANR	218169	IfStatement	"if ( UNEXPECTED ( ! zend_traits_method_compatibility_check ( fn , existing_fn ) ) )"		218093	0					
ANR	218170	Condition	"UNEXPECTED ( ! zend_traits_method_compatibility_check ( fn , existing_fn ) )"	1086:10:39330:39397	218093	0	True				
ANR	218171	CallExpression	"UNEXPECTED ( ! zend_traits_method_compatibility_check ( fn , existing_fn ) )"		218093	0					
ANR	218172	Callee	UNEXPECTED		218093	0					
ANR	218173	Identifier	UNEXPECTED		218093	0					
ANR	218174	ArgumentList	"! zend_traits_method_compatibility_check ( fn , existing_fn )"		218093	1					
ANR	218175	Argument	"! zend_traits_method_compatibility_check ( fn , existing_fn )"		218093	0					
ANR	218176	UnaryOperationExpression	"! zend_traits_method_compatibility_check ( fn , existing_fn )"		218093	0					
ANR	218177	UnaryOperator	!		218093	0					
ANR	218178	CallExpression	"zend_traits_method_compatibility_check ( fn , existing_fn )"		218093	1					
ANR	218179	Callee	zend_traits_method_compatibility_check		218093	0					
ANR	218180	Identifier	zend_traits_method_compatibility_check		218093	0					
ANR	218181	ArgumentList	fn		218093	1					
ANR	218182	Argument	fn		218093	0					
ANR	218183	Identifier	fn		218093	0					
ANR	218184	Argument	existing_fn		218093	1					
ANR	218185	Identifier	existing_fn		218093	0					
ANR	218186	CompoundStatement		13:80:639:639	218093	1					
ANR	218187	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( zend_get_function_declaration ( fn ) ) , ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) ) )"	1087:7:39409:39608	218093	0	True				
ANR	218188	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( zend_get_function_declaration ( fn ) ) , ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) ) )"		218093	0					
ANR	218189	Callee	zend_error_noreturn		218093	0					
ANR	218190	Identifier	zend_error_noreturn		218093	0					
ANR	218191	ArgumentList	E_COMPILE_ERROR		218093	1					
ANR	218192	Argument	E_COMPILE_ERROR		218093	0					
ANR	218193	Identifier	E_COMPILE_ERROR		218093	0					
ANR	218194	Argument	"""Declaration of %s must be compatible with %s"""		218093	1					
ANR	218195	PrimaryExpression	"""Declaration of %s must be compatible with %s"""		218093	0					
ANR	218196	Argument	ZSTR_VAL ( zend_get_function_declaration ( fn ) )		218093	2					
ANR	218197	CallExpression	ZSTR_VAL ( zend_get_function_declaration ( fn ) )		218093	0					
ANR	218198	Callee	ZSTR_VAL		218093	0					
ANR	218199	Identifier	ZSTR_VAL		218093	0					
ANR	218200	ArgumentList	zend_get_function_declaration ( fn )		218093	1					
ANR	218201	Argument	zend_get_function_declaration ( fn )		218093	0					
ANR	218202	CallExpression	zend_get_function_declaration ( fn )		218093	0					
ANR	218203	Callee	zend_get_function_declaration		218093	0					
ANR	218204	Identifier	zend_get_function_declaration		218093	0					
ANR	218205	ArgumentList	fn		218093	1					
ANR	218206	Argument	fn		218093	0					
ANR	218207	Identifier	fn		218093	0					
ANR	218208	Argument	ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) )		218093	3					
ANR	218209	CallExpression	ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) )		218093	0					
ANR	218210	Callee	ZSTR_VAL		218093	0					
ANR	218211	Identifier	ZSTR_VAL		218093	0					
ANR	218212	ArgumentList	zend_get_function_declaration ( existing_fn )		218093	1					
ANR	218213	Argument	zend_get_function_declaration ( existing_fn )		218093	0					
ANR	218214	CallExpression	zend_get_function_declaration ( existing_fn )		218093	0					
ANR	218215	Callee	zend_get_function_declaration		218093	0					
ANR	218216	Identifier	zend_get_function_declaration		218093	0					
ANR	218217	ArgumentList	existing_fn		218093	1					
ANR	218218	Argument	existing_fn		218093	0					
ANR	218219	Identifier	existing_fn		218093	0					
ANR	218220	ElseStatement	else		218093	0					
ANR	218221	IfStatement	if ( fn -> common . fn_flags & ZEND_ACC_ABSTRACT )		218093	0					
ANR	218222	Condition	fn -> common . fn_flags & ZEND_ACC_ABSTRACT	1091:16:39634:39672	218093	0	True				
ANR	218223	BitAndExpression	fn -> common . fn_flags & ZEND_ACC_ABSTRACT		218093	0		&			
ANR	218224	MemberAccess	fn -> common . fn_flags		218093	0					
ANR	218225	PtrMemberAccess	fn -> common		218093	0					
ANR	218226	Identifier	fn		218093	0					
ANR	218227	Identifier	common		218093	1					
ANR	218228	Identifier	fn_flags		218093	1					
ANR	218229	Identifier	ZEND_ACC_ABSTRACT		218093	1					
ANR	218230	CompoundStatement		18:57:914:914	218093	1					
ANR	218231	IfStatement	"if ( UNEXPECTED ( ! zend_traits_method_compatibility_check ( existing_fn , fn ) ) )"		218093	0					
ANR	218232	Condition	"UNEXPECTED ( ! zend_traits_method_compatibility_check ( existing_fn , fn ) )"	1093:10:39774:39841	218093	0	True				
ANR	218233	CallExpression	"UNEXPECTED ( ! zend_traits_method_compatibility_check ( existing_fn , fn ) )"		218093	0					
ANR	218234	Callee	UNEXPECTED		218093	0					
ANR	218235	Identifier	UNEXPECTED		218093	0					
ANR	218236	ArgumentList	"! zend_traits_method_compatibility_check ( existing_fn , fn )"		218093	1					
ANR	218237	Argument	"! zend_traits_method_compatibility_check ( existing_fn , fn )"		218093	0					
ANR	218238	UnaryOperationExpression	"! zend_traits_method_compatibility_check ( existing_fn , fn )"		218093	0					
ANR	218239	UnaryOperator	!		218093	0					
ANR	218240	CallExpression	"zend_traits_method_compatibility_check ( existing_fn , fn )"		218093	1					
ANR	218241	Callee	zend_traits_method_compatibility_check		218093	0					
ANR	218242	Identifier	zend_traits_method_compatibility_check		218093	0					
ANR	218243	ArgumentList	existing_fn		218093	1					
ANR	218244	Argument	existing_fn		218093	0					
ANR	218245	Identifier	existing_fn		218093	0					
ANR	218246	Argument	fn		218093	1					
ANR	218247	Identifier	fn		218093	0					
ANR	218248	CompoundStatement		20:80:1083:1083	218093	1					
ANR	218249	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( zend_get_function_declaration ( fn ) ) , ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) ) )"	1094:7:39853:40052	218093	0	True				
ANR	218250	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( zend_get_function_declaration ( fn ) ) , ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) ) )"		218093	0					
ANR	218251	Callee	zend_error_noreturn		218093	0					
ANR	218252	Identifier	zend_error_noreturn		218093	0					
ANR	218253	ArgumentList	E_COMPILE_ERROR		218093	1					
ANR	218254	Argument	E_COMPILE_ERROR		218093	0					
ANR	218255	Identifier	E_COMPILE_ERROR		218093	0					
ANR	218256	Argument	"""Declaration of %s must be compatible with %s"""		218093	1					
ANR	218257	PrimaryExpression	"""Declaration of %s must be compatible with %s"""		218093	0					
ANR	218258	Argument	ZSTR_VAL ( zend_get_function_declaration ( fn ) )		218093	2					
ANR	218259	CallExpression	ZSTR_VAL ( zend_get_function_declaration ( fn ) )		218093	0					
ANR	218260	Callee	ZSTR_VAL		218093	0					
ANR	218261	Identifier	ZSTR_VAL		218093	0					
ANR	218262	ArgumentList	zend_get_function_declaration ( fn )		218093	1					
ANR	218263	Argument	zend_get_function_declaration ( fn )		218093	0					
ANR	218264	CallExpression	zend_get_function_declaration ( fn )		218093	0					
ANR	218265	Callee	zend_get_function_declaration		218093	0					
ANR	218266	Identifier	zend_get_function_declaration		218093	0					
ANR	218267	ArgumentList	fn		218093	1					
ANR	218268	Argument	fn		218093	0					
ANR	218269	Identifier	fn		218093	0					
ANR	218270	Argument	ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) )		218093	3					
ANR	218271	CallExpression	ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) )		218093	0					
ANR	218272	Callee	ZSTR_VAL		218093	0					
ANR	218273	Identifier	ZSTR_VAL		218093	0					
ANR	218274	ArgumentList	zend_get_function_declaration ( existing_fn )		218093	1					
ANR	218275	Argument	zend_get_function_declaration ( existing_fn )		218093	0					
ANR	218276	CallExpression	zend_get_function_declaration ( existing_fn )		218093	0					
ANR	218277	Callee	zend_get_function_declaration		218093	0					
ANR	218278	Identifier	zend_get_function_declaration		218093	0					
ANR	218279	ArgumentList	existing_fn		218093	1					
ANR	218280	Argument	existing_fn		218093	0					
ANR	218281	Identifier	existing_fn		218093	0					
ANR	218282	ReturnStatement	return ;	1098:6:40068:40074	218093	1	True				
ANR	218283	ElseStatement	else		218093	0					
ANR	218284	CompoundStatement		28:10:1338:1338	218093	0					
ANR	218285	ExpressionStatement	ALLOC_HASHTABLE ( * overriden )	1102:4:40105:40132	218093	0	True				
ANR	218286	CallExpression	ALLOC_HASHTABLE ( * overriden )		218093	0					
ANR	218287	Callee	ALLOC_HASHTABLE		218093	0					
ANR	218288	Identifier	ALLOC_HASHTABLE		218093	0					
ANR	218289	ArgumentList	* overriden		218093	1					
ANR	218290	Argument	* overriden		218093	0					
ANR	218291	UnaryOperationExpression	* overriden		218093	0					
ANR	218292	UnaryOperator	*		218093	0					
ANR	218293	Identifier	overriden		218093	1					
ANR	218294	ExpressionStatement	"zend_hash_init_ex ( * overriden , 8 , NULL , overriden_ptr_dtor , 0 , 0 )"	1103:4:40138:40202	218093	1	True				
ANR	218295	CallExpression	"zend_hash_init_ex ( * overriden , 8 , NULL , overriden_ptr_dtor , 0 , 0 )"		218093	0					
ANR	218296	Callee	zend_hash_init_ex		218093	0					
ANR	218297	Identifier	zend_hash_init_ex		218093	0					
ANR	218298	ArgumentList	* overriden		218093	1					
ANR	218299	Argument	* overriden		218093	0					
ANR	218300	UnaryOperationExpression	* overriden		218093	0					
ANR	218301	UnaryOperator	*		218093	0					
ANR	218302	Identifier	overriden		218093	1					
ANR	218303	Argument	8		218093	1					
ANR	218304	PrimaryExpression	8		218093	0					
ANR	218305	Argument	NULL		218093	2					
ANR	218306	Identifier	NULL		218093	0					
ANR	218307	Argument	overriden_ptr_dtor		218093	3					
ANR	218308	Identifier	overriden_ptr_dtor		218093	0					
ANR	218309	Argument	0		218093	4					
ANR	218310	PrimaryExpression	0		218093	0					
ANR	218311	Argument	0		218093	5					
ANR	218312	PrimaryExpression	0		218093	0					
ANR	218313	ExpressionStatement	"zend_hash_update_mem ( * overriden , key , fn , sizeof ( zend_function ) )"	1105:3:40212:40276	218093	1	True				
ANR	218314	CallExpression	"zend_hash_update_mem ( * overriden , key , fn , sizeof ( zend_function ) )"		218093	0					
ANR	218315	Callee	zend_hash_update_mem		218093	0					
ANR	218316	Identifier	zend_hash_update_mem		218093	0					
ANR	218317	ArgumentList	* overriden		218093	1					
ANR	218318	Argument	* overriden		218093	0					
ANR	218319	UnaryOperationExpression	* overriden		218093	0					
ANR	218320	UnaryOperator	*		218093	0					
ANR	218321	Identifier	overriden		218093	1					
ANR	218322	Argument	key		218093	1					
ANR	218323	Identifier	key		218093	0					
ANR	218324	Argument	fn		218093	2					
ANR	218325	Identifier	fn		218093	0					
ANR	218326	Argument	sizeof ( zend_function )		218093	3					
ANR	218327	SizeofExpression	sizeof ( zend_function )		218093	0					
ANR	218328	Sizeof	sizeof		218093	0					
ANR	218329	SizeofOperand	zend_function		218093	1					
ANR	218330	ReturnStatement	return ;	1106:3:40281:40287	218093	2	True				
ANR	218331	ElseStatement	else		218093	0					
ANR	218332	IfStatement	if ( existing_fn -> common . fn_flags & ZEND_ACC_ABSTRACT && ( existing_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0 )		218093	0					
ANR	218333	Condition	existing_fn -> common . fn_flags & ZEND_ACC_ABSTRACT && ( existing_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0	1107:13:40302:40420	218093	0	True				
ANR	218334	AndExpression	existing_fn -> common . fn_flags & ZEND_ACC_ABSTRACT && ( existing_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0		218093	0		&&			
ANR	218335	BitAndExpression	existing_fn -> common . fn_flags & ZEND_ACC_ABSTRACT		218093	0		&			
ANR	218336	MemberAccess	existing_fn -> common . fn_flags		218093	0					
ANR	218337	PtrMemberAccess	existing_fn -> common		218093	0					
ANR	218338	Identifier	existing_fn		218093	0					
ANR	218339	Identifier	common		218093	1					
ANR	218340	Identifier	fn_flags		218093	1					
ANR	218341	Identifier	ZEND_ACC_ABSTRACT		218093	1					
ANR	218342	EqualityExpression	( existing_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE ) == 0		218093	1		==			
ANR	218343	BitAndExpression	existing_fn -> common . scope -> ce_flags & ZEND_ACC_INTERFACE		218093	0		&			
ANR	218344	PtrMemberAccess	existing_fn -> common . scope -> ce_flags		218093	0					
ANR	218345	MemberAccess	existing_fn -> common . scope		218093	0					
ANR	218346	PtrMemberAccess	existing_fn -> common		218093	0					
ANR	218347	Identifier	existing_fn		218093	0					
ANR	218348	Identifier	common		218093	1					
ANR	218349	Identifier	scope		218093	1					
ANR	218350	Identifier	ce_flags		218093	1					
ANR	218351	Identifier	ZEND_ACC_INTERFACE		218093	1					
ANR	218352	PrimaryExpression	0		218093	1					
ANR	218353	CompoundStatement		35:69:1662:1662	218093	1					
ANR	218354	IfStatement	"if ( UNEXPECTED ( ! zend_traits_method_compatibility_check ( fn , existing_fn ) ) )"		218093	0					
ANR	218355	Condition	"UNEXPECTED ( ! zend_traits_method_compatibility_check ( fn , existing_fn ) )"	1110:7:40522:40589	218093	0	True				
ANR	218356	CallExpression	"UNEXPECTED ( ! zend_traits_method_compatibility_check ( fn , existing_fn ) )"		218093	0					
ANR	218357	Callee	UNEXPECTED		218093	0					
ANR	218358	Identifier	UNEXPECTED		218093	0					
ANR	218359	ArgumentList	"! zend_traits_method_compatibility_check ( fn , existing_fn )"		218093	1					
ANR	218360	Argument	"! zend_traits_method_compatibility_check ( fn , existing_fn )"		218093	0					
ANR	218361	UnaryOperationExpression	"! zend_traits_method_compatibility_check ( fn , existing_fn )"		218093	0					
ANR	218362	UnaryOperator	!		218093	0					
ANR	218363	CallExpression	"zend_traits_method_compatibility_check ( fn , existing_fn )"		218093	1					
ANR	218364	Callee	zend_traits_method_compatibility_check		218093	0					
ANR	218365	Identifier	zend_traits_method_compatibility_check		218093	0					
ANR	218366	ArgumentList	fn		218093	1					
ANR	218367	Argument	fn		218093	0					
ANR	218368	Identifier	fn		218093	0					
ANR	218369	Argument	existing_fn		218093	1					
ANR	218370	Identifier	existing_fn		218093	0					
ANR	218371	CompoundStatement		37:77:1831:1831	218093	1					
ANR	218372	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( zend_get_function_declaration ( fn ) ) , ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) ) )"	1111:4:40598:40791	218093	0	True				
ANR	218373	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( zend_get_function_declaration ( fn ) ) , ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) ) )"		218093	0					
ANR	218374	Callee	zend_error_noreturn		218093	0					
ANR	218375	Identifier	zend_error_noreturn		218093	0					
ANR	218376	ArgumentList	E_COMPILE_ERROR		218093	1					
ANR	218377	Argument	E_COMPILE_ERROR		218093	0					
ANR	218378	Identifier	E_COMPILE_ERROR		218093	0					
ANR	218379	Argument	"""Declaration of %s must be compatible with %s"""		218093	1					
ANR	218380	PrimaryExpression	"""Declaration of %s must be compatible with %s"""		218093	0					
ANR	218381	Argument	ZSTR_VAL ( zend_get_function_declaration ( fn ) )		218093	2					
ANR	218382	CallExpression	ZSTR_VAL ( zend_get_function_declaration ( fn ) )		218093	0					
ANR	218383	Callee	ZSTR_VAL		218093	0					
ANR	218384	Identifier	ZSTR_VAL		218093	0					
ANR	218385	ArgumentList	zend_get_function_declaration ( fn )		218093	1					
ANR	218386	Argument	zend_get_function_declaration ( fn )		218093	0					
ANR	218387	CallExpression	zend_get_function_declaration ( fn )		218093	0					
ANR	218388	Callee	zend_get_function_declaration		218093	0					
ANR	218389	Identifier	zend_get_function_declaration		218093	0					
ANR	218390	ArgumentList	fn		218093	1					
ANR	218391	Argument	fn		218093	0					
ANR	218392	Identifier	fn		218093	0					
ANR	218393	Argument	ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) )		218093	3					
ANR	218394	CallExpression	ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) )		218093	0					
ANR	218395	Callee	ZSTR_VAL		218093	0					
ANR	218396	Identifier	ZSTR_VAL		218093	0					
ANR	218397	ArgumentList	zend_get_function_declaration ( existing_fn )		218093	1					
ANR	218398	Argument	zend_get_function_declaration ( existing_fn )		218093	0					
ANR	218399	CallExpression	zend_get_function_declaration ( existing_fn )		218093	0					
ANR	218400	Callee	zend_get_function_declaration		218093	0					
ANR	218401	Identifier	zend_get_function_declaration		218093	0					
ANR	218402	ArgumentList	existing_fn		218093	1					
ANR	218403	Argument	existing_fn		218093	0					
ANR	218404	Identifier	existing_fn		218093	0					
ANR	218405	ElseStatement	else		218093	0					
ANR	218406	IfStatement	if ( fn -> common . fn_flags & ZEND_ACC_ABSTRACT )		218093	0					
ANR	218407	Condition	fn -> common . fn_flags & ZEND_ACC_ABSTRACT	1115:13:40811:40849	218093	0	True				
ANR	218408	BitAndExpression	fn -> common . fn_flags & ZEND_ACC_ABSTRACT		218093	0		&			
ANR	218409	MemberAccess	fn -> common . fn_flags		218093	0					
ANR	218410	PtrMemberAccess	fn -> common		218093	0					
ANR	218411	Identifier	fn		218093	0					
ANR	218412	Identifier	common		218093	1					
ANR	218413	Identifier	fn_flags		218093	1					
ANR	218414	Identifier	ZEND_ACC_ABSTRACT		218093	1					
ANR	218415	CompoundStatement		42:54:2091:2091	218093	1					
ANR	218416	IfStatement	"if ( UNEXPECTED ( ! zend_traits_method_compatibility_check ( existing_fn , fn ) ) )"		218093	0					
ANR	218417	Condition	"UNEXPECTED ( ! zend_traits_method_compatibility_check ( existing_fn , fn ) )"	1117:7:40945:41012	218093	0	True				
ANR	218418	CallExpression	"UNEXPECTED ( ! zend_traits_method_compatibility_check ( existing_fn , fn ) )"		218093	0					
ANR	218419	Callee	UNEXPECTED		218093	0					
ANR	218420	Identifier	UNEXPECTED		218093	0					
ANR	218421	ArgumentList	"! zend_traits_method_compatibility_check ( existing_fn , fn )"		218093	1					
ANR	218422	Argument	"! zend_traits_method_compatibility_check ( existing_fn , fn )"		218093	0					
ANR	218423	UnaryOperationExpression	"! zend_traits_method_compatibility_check ( existing_fn , fn )"		218093	0					
ANR	218424	UnaryOperator	!		218093	0					
ANR	218425	CallExpression	"zend_traits_method_compatibility_check ( existing_fn , fn )"		218093	1					
ANR	218426	Callee	zend_traits_method_compatibility_check		218093	0					
ANR	218427	Identifier	zend_traits_method_compatibility_check		218093	0					
ANR	218428	ArgumentList	existing_fn		218093	1					
ANR	218429	Argument	existing_fn		218093	0					
ANR	218430	Identifier	existing_fn		218093	0					
ANR	218431	Argument	fn		218093	1					
ANR	218432	Identifier	fn		218093	0					
ANR	218433	CompoundStatement		44:77:2254:2254	218093	1					
ANR	218434	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( zend_get_function_declaration ( fn ) ) , ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) ) )"	1118:4:41021:41214	218093	0	True				
ANR	218435	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Declaration of %s must be compatible with %s"" , ZSTR_VAL ( zend_get_function_declaration ( fn ) ) , ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) ) )"		218093	0					
ANR	218436	Callee	zend_error_noreturn		218093	0					
ANR	218437	Identifier	zend_error_noreturn		218093	0					
ANR	218438	ArgumentList	E_COMPILE_ERROR		218093	1					
ANR	218439	Argument	E_COMPILE_ERROR		218093	0					
ANR	218440	Identifier	E_COMPILE_ERROR		218093	0					
ANR	218441	Argument	"""Declaration of %s must be compatible with %s"""		218093	1					
ANR	218442	PrimaryExpression	"""Declaration of %s must be compatible with %s"""		218093	0					
ANR	218443	Argument	ZSTR_VAL ( zend_get_function_declaration ( fn ) )		218093	2					
ANR	218444	CallExpression	ZSTR_VAL ( zend_get_function_declaration ( fn ) )		218093	0					
ANR	218445	Callee	ZSTR_VAL		218093	0					
ANR	218446	Identifier	ZSTR_VAL		218093	0					
ANR	218447	ArgumentList	zend_get_function_declaration ( fn )		218093	1					
ANR	218448	Argument	zend_get_function_declaration ( fn )		218093	0					
ANR	218449	CallExpression	zend_get_function_declaration ( fn )		218093	0					
ANR	218450	Callee	zend_get_function_declaration		218093	0					
ANR	218451	Identifier	zend_get_function_declaration		218093	0					
ANR	218452	ArgumentList	fn		218093	1					
ANR	218453	Argument	fn		218093	0					
ANR	218454	Identifier	fn		218093	0					
ANR	218455	Argument	ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) )		218093	3					
ANR	218456	CallExpression	ZSTR_VAL ( zend_get_function_declaration ( existing_fn ) )		218093	0					
ANR	218457	Callee	ZSTR_VAL		218093	0					
ANR	218458	Identifier	ZSTR_VAL		218093	0					
ANR	218459	ArgumentList	zend_get_function_declaration ( existing_fn )		218093	1					
ANR	218460	Argument	zend_get_function_declaration ( existing_fn )		218093	0					
ANR	218461	CallExpression	zend_get_function_declaration ( existing_fn )		218093	0					
ANR	218462	Callee	zend_get_function_declaration		218093	0					
ANR	218463	Identifier	zend_get_function_declaration		218093	0					
ANR	218464	ArgumentList	existing_fn		218093	1					
ANR	218465	Argument	existing_fn		218093	0					
ANR	218466	Identifier	existing_fn		218093	0					
ANR	218467	ReturnStatement	return ;	1122:3:41224:41230	218093	1	True				
ANR	218468	ElseStatement	else		218093	0					
ANR	218469	IfStatement	if ( UNEXPECTED ( existing_fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT ) )		218093	0					
ANR	218470	Condition	UNEXPECTED ( existing_fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT )	1123:13:41245:41308	218093	0	True				
ANR	218471	CallExpression	UNEXPECTED ( existing_fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT )		218093	0					
ANR	218472	Callee	UNEXPECTED		218093	0					
ANR	218473	Identifier	UNEXPECTED		218093	0					
ANR	218474	ArgumentList	existing_fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT		218093	1					
ANR	218475	Argument	existing_fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT		218093	0					
ANR	218476	BitAndExpression	existing_fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT		218093	0		&			
ANR	218477	PtrMemberAccess	existing_fn -> common . scope -> ce_flags		218093	0					
ANR	218478	MemberAccess	existing_fn -> common . scope		218093	0					
ANR	218479	PtrMemberAccess	existing_fn -> common		218093	0					
ANR	218480	Identifier	existing_fn		218093	0					
ANR	218481	Identifier	common		218093	1					
ANR	218482	Identifier	scope		218093	1					
ANR	218483	Identifier	ce_flags		218093	1					
ANR	218484	Identifier	ZEND_ACC_TRAIT		218093	1					
ANR	218485	CompoundStatement		50:79:2550:2550	218093	1					
ANR	218486	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Trait method %s has not been applied, because there are collisions with other trait methods on %s"" , name , ZSTR_VAL ( ce -> name ) )"	1126:3:41384:41551	218093	0	True				
ANR	218487	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Trait method %s has not been applied, because there are collisions with other trait methods on %s"" , name , ZSTR_VAL ( ce -> name ) )"		218093	0					
ANR	218488	Callee	zend_error_noreturn		218093	0					
ANR	218489	Identifier	zend_error_noreturn		218093	0					
ANR	218490	ArgumentList	E_COMPILE_ERROR		218093	1					
ANR	218491	Argument	E_COMPILE_ERROR		218093	0					
ANR	218492	Identifier	E_COMPILE_ERROR		218093	0					
ANR	218493	Argument	"""Trait method %s has not been applied, because there are collisions with other trait methods on %s"""		218093	1					
ANR	218494	PrimaryExpression	"""Trait method %s has not been applied, because there are collisions with other trait methods on %s"""		218093	0					
ANR	218495	Argument	name		218093	2					
ANR	218496	Identifier	name		218093	0					
ANR	218497	Argument	ZSTR_VAL ( ce -> name )		218093	3					
ANR	218498	CallExpression	ZSTR_VAL ( ce -> name )		218093	0					
ANR	218499	Callee	ZSTR_VAL		218093	0					
ANR	218500	Identifier	ZSTR_VAL		218093	0					
ANR	218501	ArgumentList	ce -> name		218093	1					
ANR	218502	Argument	ce -> name		218093	0					
ANR	218503	PtrMemberAccess	ce -> name		218093	0					
ANR	218504	Identifier	ce		218093	0					
ANR	218505	Identifier	name		218093	1					
ANR	218506	ElseStatement	else		218093	0					
ANR	218507	CompoundStatement		61:9:3173:3173	218093	0					
ANR	218508	ExpressionStatement	"do_inheritance_check_on_method ( fn , existing_fn )"	1137:3:42089:42136	218093	0	True				
ANR	218509	CallExpression	"do_inheritance_check_on_method ( fn , existing_fn )"		218093	0					
ANR	218510	Callee	do_inheritance_check_on_method		218093	0					
ANR	218511	Identifier	do_inheritance_check_on_method		218093	0					
ANR	218512	ArgumentList	fn		218093	1					
ANR	218513	Argument	fn		218093	0					
ANR	218514	Identifier	fn		218093	0					
ANR	218515	Argument	existing_fn		218093	1					
ANR	218516	Identifier	existing_fn		218093	0					
ANR	218517	ExpressionStatement	fn -> common . prototype = NULL	1138:3:42141:42168	218093	1	True				
ANR	218518	AssignmentExpression	fn -> common . prototype = NULL		218093	0		=			
ANR	218519	MemberAccess	fn -> common . prototype		218093	0					
ANR	218520	PtrMemberAccess	fn -> common		218093	0					
ANR	218521	Identifier	fn		218093	0					
ANR	218522	Identifier	common		218093	1					
ANR	218523	Identifier	prototype		218093	1					
ANR	218524	Identifier	NULL		218093	1					
ANR	218525	ExpressionStatement	function_add_ref ( fn )	1142:1:42179:42199	218093	3	True				
ANR	218526	CallExpression	function_add_ref ( fn )		218093	0					
ANR	218527	Callee	function_add_ref		218093	0					
ANR	218528	Identifier	function_add_ref		218093	0					
ANR	218529	ArgumentList	fn		218093	1					
ANR	218530	Argument	fn		218093	0					
ANR	218531	Identifier	fn		218093	0					
ANR	218532	ExpressionStatement	"new_fn = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_op_array ) )"	1143:1:42202:42262	218093	4	True				
ANR	218533	AssignmentExpression	"new_fn = zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_op_array ) )"		218093	0		=			
ANR	218534	Identifier	new_fn		218093	0					
ANR	218535	CallExpression	"zend_arena_alloc ( & CG ( arena ) , sizeof ( zend_op_array ) )"		218093	1					
ANR	218536	Callee	zend_arena_alloc		218093	0					
ANR	218537	Identifier	zend_arena_alloc		218093	0					
ANR	218538	ArgumentList	& CG ( arena )		218093	1					
ANR	218539	Argument	& CG ( arena )		218093	0					
ANR	218540	UnaryOperationExpression	& CG ( arena )		218093	0					
ANR	218541	UnaryOperator	&		218093	0					
ANR	218542	CallExpression	CG ( arena )		218093	1					
ANR	218543	Callee	CG		218093	0					
ANR	218544	Identifier	CG		218093	0					
ANR	218545	ArgumentList	arena		218093	1					
ANR	218546	Argument	arena		218093	0					
ANR	218547	Identifier	arena		218093	0					
ANR	218548	Argument	sizeof ( zend_op_array )		218093	1					
ANR	218549	SizeofExpression	sizeof ( zend_op_array )		218093	0					
ANR	218550	Sizeof	sizeof		218093	0					
ANR	218551	SizeofOperand	zend_op_array		218093	1					
ANR	218552	ExpressionStatement	"memcpy ( new_fn , fn , sizeof ( zend_op_array ) )"	1144:1:42265:42306	218093	5	True				
ANR	218553	CallExpression	"memcpy ( new_fn , fn , sizeof ( zend_op_array ) )"		218093	0					
ANR	218554	Callee	memcpy		218093	0					
ANR	218555	Identifier	memcpy		218093	0					
ANR	218556	ArgumentList	new_fn		218093	1					
ANR	218557	Argument	new_fn		218093	0					
ANR	218558	Identifier	new_fn		218093	0					
ANR	218559	Argument	fn		218093	1					
ANR	218560	Identifier	fn		218093	0					
ANR	218561	Argument	sizeof ( zend_op_array )		218093	2					
ANR	218562	SizeofExpression	sizeof ( zend_op_array )		218093	0					
ANR	218563	Sizeof	sizeof		218093	0					
ANR	218564	SizeofOperand	zend_op_array		218093	1					
ANR	218565	ExpressionStatement	"fn = zend_hash_update_ptr ( & ce -> function_table , key , new_fn )"	1145:1:42309:42368	218093	6	True				
ANR	218566	AssignmentExpression	"fn = zend_hash_update_ptr ( & ce -> function_table , key , new_fn )"		218093	0		=			
ANR	218567	Identifier	fn		218093	0					
ANR	218568	CallExpression	"zend_hash_update_ptr ( & ce -> function_table , key , new_fn )"		218093	1					
ANR	218569	Callee	zend_hash_update_ptr		218093	0					
ANR	218570	Identifier	zend_hash_update_ptr		218093	0					
ANR	218571	ArgumentList	& ce -> function_table		218093	1					
ANR	218572	Argument	& ce -> function_table		218093	0					
ANR	218573	UnaryOperationExpression	& ce -> function_table		218093	0					
ANR	218574	UnaryOperator	&		218093	0					
ANR	218575	PtrMemberAccess	ce -> function_table		218093	1					
ANR	218576	Identifier	ce		218093	0					
ANR	218577	Identifier	function_table		218093	1					
ANR	218578	Argument	key		218093	1					
ANR	218579	Identifier	key		218093	0					
ANR	218580	Argument	new_fn		218093	2					
ANR	218581	Identifier	new_fn		218093	0					
ANR	218582	ExpressionStatement	"zend_add_magic_methods ( ce , key , fn )"	1146:1:42371:42406	218093	7	True				
ANR	218583	CallExpression	"zend_add_magic_methods ( ce , key , fn )"		218093	0					
ANR	218584	Callee	zend_add_magic_methods		218093	0					
ANR	218585	Identifier	zend_add_magic_methods		218093	0					
ANR	218586	ArgumentList	ce		218093	1					
ANR	218587	Argument	ce		218093	0					
ANR	218588	Identifier	ce		218093	0					
ANR	218589	Argument	key		218093	1					
ANR	218590	Identifier	key		218093	0					
ANR	218591	Argument	fn		218093	2					
ANR	218592	Identifier	fn		218093	0					
ANR	218593	ReturnType	static void		218093	1					
ANR	218594	Identifier	zend_add_trait_method		218093	2					
ANR	218595	ParameterList	"zend_class_entry * ce , const char * name , zend_string * key , zend_function * fn , HashTable * * overriden"		218093	3					
ANR	218596	Parameter	zend_class_entry * ce	1073:34:38650:38669	218093	0	True				
ANR	218597	ParameterType	zend_class_entry *		218093	0					
ANR	218598	Identifier	ce		218093	1					
ANR	218599	Parameter	const char * name	1073:56:38672:38687	218093	1	True				
ANR	218600	ParameterType	const char *		218093	0					
ANR	218601	Identifier	name		218093	1					
ANR	218602	Parameter	zend_string * key	1073:74:38690:38705	218093	2	True				
ANR	218603	ParameterType	zend_string *		218093	0					
ANR	218604	Identifier	key		218093	1					
ANR	218605	Parameter	zend_function * fn	1073:92:38708:38724	218093	3	True				
ANR	218606	ParameterType	zend_function *		218093	0					
ANR	218607	Identifier	fn		218093	1					
ANR	218608	Parameter	HashTable * * overriden	1073:111:38727:38747	218093	4	True				
ANR	218609	ParameterType	HashTable * *		218093	0					
ANR	218610	Identifier	overriden		218093	1					
ANR	218611	CFGEntryNode	ENTRY		218093		True				
ANR	218612	CFGExitNode	EXIT		218093		True				
ANR	218613	Symbol	E_COMPILE_ERROR		218093						
ANR	218614	Symbol	fn		218093						
ANR	218615	Symbol	& ce -> function_table		218093						
ANR	218616	Symbol	* ce		218093						
ANR	218617	Symbol	arena		218093						
ANR	218618	Symbol	overriden_ptr_dtor		218093						
ANR	218619	Symbol	& CG		218093						
ANR	218620	Symbol	UNEXPECTED		218093						
ANR	218621	Symbol	fn -> common . prototype		218093						
ANR	218622	Symbol	* overriden		218093						
ANR	218623	Symbol	* existing_fn		218093						
ANR	218624	Symbol	zend_traits_method_compatibility_check		218093						
ANR	218625	Symbol	existing_fn -> common . scope		218093						
ANR	218626	Symbol	existing_fn -> common . fn_flags		218093						
ANR	218627	Symbol	* * existing_fn		218093						
ANR	218628	Symbol	ZEND_ACC_INTERFACE		218093						
ANR	218629	Symbol	ce -> name		218093						
ANR	218630	Symbol	* existing_fn -> common		218093						
ANR	218631	Symbol	zend_hash_update_ptr		218093						
ANR	218632	Symbol	zend_hash_find_ptr		218093						
ANR	218633	Symbol	key		218093						
ANR	218634	Symbol	ce		218093						
ANR	218635	Symbol	existing_fn		218093						
ANR	218636	Symbol	fn -> common . fn_flags		218093						
ANR	218637	Symbol	NULL		218093						
ANR	218638	Symbol	zend_arena_alloc		218093						
ANR	218639	Symbol	* fn		218093						
ANR	218640	Symbol	overriden		218093						
ANR	218641	Symbol	ZSTR_VAL		218093						
ANR	218642	Symbol	ZEND_ACC_TRAIT		218093						
ANR	218643	Symbol	zend_get_function_declaration		218093						
ANR	218644	Symbol	ZEND_ACC_ABSTRACT		218093						
ANR	218645	Symbol	fn -> common		218093						
ANR	218646	Symbol	* existing_fn -> common . scope		218093						
ANR	218647	Symbol	existing_fn -> common		218093						
ANR	218648	Symbol	name		218093						
ANR	218649	Symbol	existing_fn -> common . scope -> ce_flags		218093						
ANR	218650	Symbol	new_fn		218093						
ANR	218651	Function	zend_fixup_trait_method	1150:0:42421:42842							
ANR	218652	FunctionDef	"zend_fixup_trait_method (zend_function * fn , zend_class_entry * ce)"		218651	0					
ANR	218653	CompoundStatement		1151:0:42508:42842	218651	0					
ANR	218654	IfStatement	if ( ( fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT ) == ZEND_ACC_TRAIT )		218651	0					
ANR	218655	Condition	( fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT ) == ZEND_ACC_TRAIT	1152:5:42515:42577	218651	0	True				
ANR	218656	EqualityExpression	( fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT ) == ZEND_ACC_TRAIT		218651	0		==			
ANR	218657	BitAndExpression	fn -> common . scope -> ce_flags & ZEND_ACC_TRAIT		218651	0		&			
ANR	218658	PtrMemberAccess	fn -> common . scope -> ce_flags		218651	0					
ANR	218659	MemberAccess	fn -> common . scope		218651	0					
ANR	218660	PtrMemberAccess	fn -> common		218651	0					
ANR	218661	Identifier	fn		218651	0					
ANR	218662	Identifier	common		218651	1					
ANR	218663	Identifier	scope		218651	1					
ANR	218664	Identifier	ce_flags		218651	1					
ANR	218665	Identifier	ZEND_ACC_TRAIT		218651	1					
ANR	218666	Identifier	ZEND_ACC_TRAIT		218651	1					
ANR	218667	CompoundStatement		2:70:71:71	218651	1					
ANR	218668	ExpressionStatement	fn -> common . scope = ce	1154:2:42585:42606	218651	0	True				
ANR	218669	AssignmentExpression	fn -> common . scope = ce		218651	0		=			
ANR	218670	MemberAccess	fn -> common . scope		218651	0					
ANR	218671	PtrMemberAccess	fn -> common		218651	0					
ANR	218672	Identifier	fn		218651	0					
ANR	218673	Identifier	common		218651	1					
ANR	218674	Identifier	scope		218651	1					
ANR	218675	Identifier	ce		218651	1					
ANR	218676	IfStatement	if ( fn -> common . fn_flags & ZEND_ACC_ABSTRACT )		218651	1					
ANR	218677	Condition	fn -> common . fn_flags & ZEND_ACC_ABSTRACT	1156:6:42615:42653	218651	0	True				
ANR	218678	BitAndExpression	fn -> common . fn_flags & ZEND_ACC_ABSTRACT		218651	0		&			
ANR	218679	MemberAccess	fn -> common . fn_flags		218651	0					
ANR	218680	PtrMemberAccess	fn -> common		218651	0					
ANR	218681	Identifier	fn		218651	0					
ANR	218682	Identifier	common		218651	1					
ANR	218683	Identifier	fn_flags		218651	1					
ANR	218684	Identifier	ZEND_ACC_ABSTRACT		218651	1					
ANR	218685	CompoundStatement		6:47:147:147	218651	1					
ANR	218686	ExpressionStatement	ce -> ce_flags |= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS	1157:3:42661:42709	218651	0	True				
ANR	218687	AssignmentExpression	ce -> ce_flags |= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		218651	0		|=			
ANR	218688	PtrMemberAccess	ce -> ce_flags		218651	0					
ANR	218689	Identifier	ce		218651	0					
ANR	218690	Identifier	ce_flags		218651	1					
ANR	218691	Identifier	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		218651	1					
ANR	218692	IfStatement	if ( fn -> type == ZEND_USER_FUNCTION && fn -> op_array . static_variables )		218651	2					
ANR	218693	Condition	fn -> type == ZEND_USER_FUNCTION && fn -> op_array . static_variables	1159:6:42721:42783	218651	0	True				
ANR	218694	AndExpression	fn -> type == ZEND_USER_FUNCTION && fn -> op_array . static_variables		218651	0		&&			
ANR	218695	EqualityExpression	fn -> type == ZEND_USER_FUNCTION		218651	0		==			
ANR	218696	PtrMemberAccess	fn -> type		218651	0					
ANR	218697	Identifier	fn		218651	0					
ANR	218698	Identifier	type		218651	1					
ANR	218699	Identifier	ZEND_USER_FUNCTION		218651	1					
ANR	218700	MemberAccess	fn -> op_array . static_variables		218651	1					
ANR	218701	PtrMemberAccess	fn -> op_array		218651	0					
ANR	218702	Identifier	fn		218651	0					
ANR	218703	Identifier	op_array		218651	1					
ANR	218704	Identifier	static_variables		218651	1					
ANR	218705	CompoundStatement		9:71:277:277	218651	1					
ANR	218706	ExpressionStatement	ce -> ce_flags |= ZEND_HAS_STATIC_IN_METHODS	1160:3:42791:42833	218651	0	True				
ANR	218707	AssignmentExpression	ce -> ce_flags |= ZEND_HAS_STATIC_IN_METHODS		218651	0		|=			
ANR	218708	PtrMemberAccess	ce -> ce_flags		218651	0					
ANR	218709	Identifier	ce		218651	0					
ANR	218710	Identifier	ce_flags		218651	1					
ANR	218711	Identifier	ZEND_HAS_STATIC_IN_METHODS		218651	1					
ANR	218712	ReturnType	static void		218651	1					
ANR	218713	Identifier	zend_fixup_trait_method		218651	2					
ANR	218714	ParameterList	"zend_function * fn , zend_class_entry * ce"		218651	3					
ANR	218715	Parameter	zend_function * fn	1150:36:42457:42473	218651	0	True				
ANR	218716	ParameterType	zend_function *		218651	0					
ANR	218717	Identifier	fn		218651	1					
ANR	218718	Parameter	zend_class_entry * ce	1150:55:42476:42495	218651	1	True				
ANR	218719	ParameterType	zend_class_entry *		218651	0					
ANR	218720	Identifier	ce		218651	1					
ANR	218721	CFGEntryNode	ENTRY		218651		True				
ANR	218722	CFGExitNode	EXIT		218651		True				
ANR	218723	Symbol	fn -> common . scope		218651						
ANR	218724	Symbol	ce		218651						
ANR	218725	Symbol	fn -> common . fn_flags		218651						
ANR	218726	Symbol	fn -> common . scope -> ce_flags		218651						
ANR	218727	Symbol	fn		218651						
ANR	218728	Symbol	ZEND_HAS_STATIC_IN_METHODS		218651						
ANR	218729	Symbol	* ce		218651						
ANR	218730	Symbol	* fn -> common		218651						
ANR	218731	Symbol	* fn		218651						
ANR	218732	Symbol	* fn -> common . scope		218651						
ANR	218733	Symbol	ZEND_ACC_TRAIT		218651						
ANR	218734	Symbol	ce -> ce_flags		218651						
ANR	218735	Symbol	ZEND_ACC_ABSTRACT		218651						
ANR	218736	Symbol	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		218651						
ANR	218737	Symbol	fn -> common		218651						
ANR	218738	Symbol	* * fn		218651						
ANR	218739	Symbol	ZEND_USER_FUNCTION		218651						
ANR	218740	Symbol	fn -> op_array . static_variables		218651						
ANR	218741	Symbol	fn -> op_array		218651						
ANR	218742	Symbol	fn -> type		218651						
ANR	218743	Function	zend_traits_copy_functions	1166:0:42855:45745							
ANR	218744	FunctionDef	"zend_traits_copy_functions (zend_string * fnname , zend_function * fn , zend_class_entry * ce , HashTable * * overriden , HashTable * exclude_table)"		218743	0					
ANR	218745	CompoundStatement		1167:0:43014:45745	218743	0					
ANR	218746	IdentifierDeclStatement	"zend_trait_alias * alias , * * alias_ptr ;"	1168:1:43017:43054	218743	0	True				
ANR	218747	IdentifierDecl	* alias		218743	0					
ANR	218748	IdentifierDeclType	zend_trait_alias *		218743	0					
ANR	218749	Identifier	alias		218743	1					
ANR	218750	IdentifierDecl	* * alias_ptr		218743	1					
ANR	218751	IdentifierDeclType	zend_trait_alias * *		218743	0					
ANR	218752	Identifier	alias_ptr		218743	1					
ANR	218753	IdentifierDeclStatement	zend_string * lcname ;	1169:1:43057:43082	218743	1	True				
ANR	218754	IdentifierDecl	* lcname		218743	0					
ANR	218755	IdentifierDeclType	zend_string *		218743	0					
ANR	218756	Identifier	lcname		218743	1					
ANR	218757	IdentifierDeclStatement	zend_function fn_copy ;	1170:1:43085:43111	218743	2	True				
ANR	218758	IdentifierDecl	fn_copy		218743	0					
ANR	218759	IdentifierDeclType	zend_function		218743	0					
ANR	218760	Identifier	fn_copy		218743	1					
ANR	218761	IfStatement	if ( ce -> trait_aliases )		218743	3					
ANR	218762	Condition	ce -> trait_aliases	1173:5:43213:43229	218743	0	True				
ANR	218763	PtrMemberAccess	ce -> trait_aliases		218743	0					
ANR	218764	Identifier	ce		218743	0					
ANR	218765	Identifier	trait_aliases		218743	1					
ANR	218766	CompoundStatement		7:24:217:217	218743	1					
ANR	218767	ExpressionStatement	alias_ptr = ce -> trait_aliases	1174:2:43236:43265	218743	0	True				
ANR	218768	AssignmentExpression	alias_ptr = ce -> trait_aliases		218743	0		=			
ANR	218769	Identifier	alias_ptr		218743	0					
ANR	218770	PtrMemberAccess	ce -> trait_aliases		218743	1					
ANR	218771	Identifier	ce		218743	0					
ANR	218772	Identifier	trait_aliases		218743	1					
ANR	218773	ExpressionStatement	alias = * alias_ptr	1175:2:43269:43287	218743	1	True				
ANR	218774	AssignmentExpression	alias = * alias_ptr		218743	0		=			
ANR	218775	Identifier	alias		218743	0					
ANR	218776	UnaryOperationExpression	* alias_ptr		218743	1					
ANR	218777	UnaryOperator	*		218743	0					
ANR	218778	Identifier	alias_ptr		218743	1					
ANR	218779	WhileStatement	while ( alias )		218743	2					
ANR	218780	Condition	alias	1176:9:43298:43302	218743	0	True				
ANR	218781	Identifier	alias		218743	0					
ANR	218782	CompoundStatement		10:16:290:290	218743	1					
ANR	218783	IfStatement	"if ( alias -> alias != NULL && ( ! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce ) && ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 ) )"		218743	0					
ANR	218784	Condition	"alias -> alias != NULL && ( ! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce ) && ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 )"	1178:7:43403:43734	218743	0	True				
ANR	218785	AndExpression	"alias -> alias != NULL && ( ! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce ) && ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 )"		218743	0		&&			
ANR	218786	EqualityExpression	alias -> alias != NULL		218743	0		!=			
ANR	218787	PtrMemberAccess	alias -> alias		218743	0					
ANR	218788	Identifier	alias		218743	0					
ANR	218789	Identifier	alias		218743	1					
ANR	218790	Identifier	NULL		218743	1					
ANR	218791	AndExpression	"( ! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce ) && ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 )"		218743	1		&&			
ANR	218792	OrExpression	! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce		218743	0		||			
ANR	218793	UnaryOperationExpression	! alias -> trait_method -> ce		218743	0					
ANR	218794	UnaryOperator	!		218743	0					
ANR	218795	PtrMemberAccess	alias -> trait_method -> ce		218743	1					
ANR	218796	PtrMemberAccess	alias -> trait_method		218743	0					
ANR	218797	Identifier	alias		218743	0					
ANR	218798	Identifier	trait_method		218743	1					
ANR	218799	Identifier	ce		218743	1					
ANR	218800	EqualityExpression	fn -> common . scope == alias -> trait_method -> ce		218743	1		==			
ANR	218801	MemberAccess	fn -> common . scope		218743	0					
ANR	218802	PtrMemberAccess	fn -> common		218743	0					
ANR	218803	Identifier	fn		218743	0					
ANR	218804	Identifier	common		218743	1					
ANR	218805	Identifier	scope		218743	1					
ANR	218806	PtrMemberAccess	alias -> trait_method -> ce		218743	1					
ANR	218807	PtrMemberAccess	alias -> trait_method		218743	0					
ANR	218808	Identifier	alias		218743	0					
ANR	218809	Identifier	trait_method		218743	1					
ANR	218810	Identifier	ce		218743	1					
ANR	218811	AndExpression	"ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 )"		218743	1		&&			
ANR	218812	EqualityExpression	ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname )		218743	0		==			
ANR	218813	CallExpression	ZSTR_LEN ( alias -> trait_method -> method_name )		218743	0					
ANR	218814	Callee	ZSTR_LEN		218743	0					
ANR	218815	Identifier	ZSTR_LEN		218743	0					
ANR	218816	ArgumentList	alias -> trait_method -> method_name		218743	1					
ANR	218817	Argument	alias -> trait_method -> method_name		218743	0					
ANR	218818	PtrMemberAccess	alias -> trait_method -> method_name		218743	0					
ANR	218819	PtrMemberAccess	alias -> trait_method		218743	0					
ANR	218820	Identifier	alias		218743	0					
ANR	218821	Identifier	trait_method		218743	1					
ANR	218822	Identifier	method_name		218743	1					
ANR	218823	CallExpression	ZSTR_LEN ( fnname )		218743	1					
ANR	218824	Callee	ZSTR_LEN		218743	0					
ANR	218825	Identifier	ZSTR_LEN		218743	0					
ANR	218826	ArgumentList	fnname		218743	1					
ANR	218827	Argument	fnname		218743	0					
ANR	218828	Identifier	fnname		218743	0					
ANR	218829	EqualityExpression	"zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0"		218743	1		==			
ANR	218830	CallExpression	"zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) )"		218743	0					
ANR	218831	Callee	zend_binary_strcasecmp		218743	0					
ANR	218832	Identifier	zend_binary_strcasecmp		218743	0					
ANR	218833	ArgumentList	ZSTR_VAL ( alias -> trait_method -> method_name )		218743	1					
ANR	218834	Argument	ZSTR_VAL ( alias -> trait_method -> method_name )		218743	0					
ANR	218835	CallExpression	ZSTR_VAL ( alias -> trait_method -> method_name )		218743	0					
ANR	218836	Callee	ZSTR_VAL		218743	0					
ANR	218837	Identifier	ZSTR_VAL		218743	0					
ANR	218838	ArgumentList	alias -> trait_method -> method_name		218743	1					
ANR	218839	Argument	alias -> trait_method -> method_name		218743	0					
ANR	218840	PtrMemberAccess	alias -> trait_method -> method_name		218743	0					
ANR	218841	PtrMemberAccess	alias -> trait_method		218743	0					
ANR	218842	Identifier	alias		218743	0					
ANR	218843	Identifier	trait_method		218743	1					
ANR	218844	Identifier	method_name		218743	1					
ANR	218845	Argument	ZSTR_LEN ( alias -> trait_method -> method_name )		218743	1					
ANR	218846	CallExpression	ZSTR_LEN ( alias -> trait_method -> method_name )		218743	0					
ANR	218847	Callee	ZSTR_LEN		218743	0					
ANR	218848	Identifier	ZSTR_LEN		218743	0					
ANR	218849	ArgumentList	alias -> trait_method -> method_name		218743	1					
ANR	218850	Argument	alias -> trait_method -> method_name		218743	0					
ANR	218851	PtrMemberAccess	alias -> trait_method -> method_name		218743	0					
ANR	218852	PtrMemberAccess	alias -> trait_method		218743	0					
ANR	218853	Identifier	alias		218743	0					
ANR	218854	Identifier	trait_method		218743	1					
ANR	218855	Identifier	method_name		218743	1					
ANR	218856	Argument	ZSTR_VAL ( fnname )		218743	2					
ANR	218857	CallExpression	ZSTR_VAL ( fnname )		218743	0					
ANR	218858	Callee	ZSTR_VAL		218743	0					
ANR	218859	Identifier	ZSTR_VAL		218743	0					
ANR	218860	ArgumentList	fnname		218743	1					
ANR	218861	Argument	fnname		218743	0					
ANR	218862	Identifier	fnname		218743	0					
ANR	218863	Argument	ZSTR_LEN ( fnname )		218743	3					
ANR	218864	CallExpression	ZSTR_LEN ( fnname )		218743	0					
ANR	218865	Callee	ZSTR_LEN		218743	0					
ANR	218866	Identifier	ZSTR_LEN		218743	0					
ANR	218867	ArgumentList	fnname		218743	1					
ANR	218868	Argument	fnname		218743	0					
ANR	218869	Identifier	fnname		218743	0					
ANR	218870	PrimaryExpression	0		218743	1					
ANR	218871	CompoundStatement		15:162:722:722	218743	1					
ANR	218872	ExpressionStatement	fn_copy = * fn	1182:4:43743:43756	218743	0	True				
ANR	218873	AssignmentExpression	fn_copy = * fn		218743	0		=			
ANR	218874	Identifier	fn_copy		218743	0					
ANR	218875	UnaryOperationExpression	* fn		218743	1					
ANR	218876	UnaryOperator	*		218743	0					
ANR	218877	Identifier	fn		218743	1					
ANR	218878	IfStatement	if ( alias -> modifiers )		218743	1					
ANR	218879	Condition	alias -> modifiers	1185:8:43820:43835	218743	0	True				
ANR	218880	PtrMemberAccess	alias -> modifiers		218743	0					
ANR	218881	Identifier	alias		218743	0					
ANR	218882	Identifier	modifiers		218743	1					
ANR	218883	CompoundStatement		19:26:823:823	218743	1					
ANR	218884	ExpressionStatement	fn_copy . common . fn_flags = alias -> modifiers | ( fn -> common . fn_flags ^ ( fn -> common . fn_flags & ZEND_ACC_PPP_MASK ) )	1186:5:43845:43955	218743	0	True				
ANR	218885	AssignmentExpression	fn_copy . common . fn_flags = alias -> modifiers | ( fn -> common . fn_flags ^ ( fn -> common . fn_flags & ZEND_ACC_PPP_MASK ) )		218743	0		=			
ANR	218886	MemberAccess	fn_copy . common . fn_flags		218743	0					
ANR	218887	MemberAccess	fn_copy . common		218743	0					
ANR	218888	Identifier	fn_copy		218743	0					
ANR	218889	Identifier	common		218743	1					
ANR	218890	Identifier	fn_flags		218743	1					
ANR	218891	InclusiveOrExpression	alias -> modifiers | ( fn -> common . fn_flags ^ ( fn -> common . fn_flags & ZEND_ACC_PPP_MASK ) )		218743	1		|			
ANR	218892	PtrMemberAccess	alias -> modifiers		218743	0					
ANR	218893	Identifier	alias		218743	0					
ANR	218894	Identifier	modifiers		218743	1					
ANR	218895	ExclusiveOrExpression	fn -> common . fn_flags ^ ( fn -> common . fn_flags & ZEND_ACC_PPP_MASK )		218743	1		^			
ANR	218896	MemberAccess	fn -> common . fn_flags		218743	0					
ANR	218897	PtrMemberAccess	fn -> common		218743	0					
ANR	218898	Identifier	fn		218743	0					
ANR	218899	Identifier	common		218743	1					
ANR	218900	Identifier	fn_flags		218743	1					
ANR	218901	BitAndExpression	fn -> common . fn_flags & ZEND_ACC_PPP_MASK		218743	1		&			
ANR	218902	MemberAccess	fn -> common . fn_flags		218743	0					
ANR	218903	PtrMemberAccess	fn -> common		218743	0					
ANR	218904	Identifier	fn		218743	0					
ANR	218905	Identifier	common		218743	1					
ANR	218906	Identifier	fn_flags		218743	1					
ANR	218907	Identifier	ZEND_ACC_PPP_MASK		218743	1					
ANR	218908	ExpressionStatement	lcname = zend_string_tolower ( alias -> alias )	1189:4:43968:44010	218743	2	True				
ANR	218909	AssignmentExpression	lcname = zend_string_tolower ( alias -> alias )		218743	0		=			
ANR	218910	Identifier	lcname		218743	0					
ANR	218911	CallExpression	zend_string_tolower ( alias -> alias )		218743	1					
ANR	218912	Callee	zend_string_tolower		218743	0					
ANR	218913	Identifier	zend_string_tolower		218743	0					
ANR	218914	ArgumentList	alias -> alias		218743	1					
ANR	218915	Argument	alias -> alias		218743	0					
ANR	218916	PtrMemberAccess	alias -> alias		218743	0					
ANR	218917	Identifier	alias		218743	0					
ANR	218918	Identifier	alias		218743	1					
ANR	218919	ExpressionStatement	"zend_add_trait_method ( ce , ZSTR_VAL ( alias -> alias ) , lcname , & fn_copy , overriden )"	1190:4:44016:44094	218743	3	True				
ANR	218920	CallExpression	"zend_add_trait_method ( ce , ZSTR_VAL ( alias -> alias ) , lcname , & fn_copy , overriden )"		218743	0					
ANR	218921	Callee	zend_add_trait_method		218743	0					
ANR	218922	Identifier	zend_add_trait_method		218743	0					
ANR	218923	ArgumentList	ce		218743	1					
ANR	218924	Argument	ce		218743	0					
ANR	218925	Identifier	ce		218743	0					
ANR	218926	Argument	ZSTR_VAL ( alias -> alias )		218743	1					
ANR	218927	CallExpression	ZSTR_VAL ( alias -> alias )		218743	0					
ANR	218928	Callee	ZSTR_VAL		218743	0					
ANR	218929	Identifier	ZSTR_VAL		218743	0					
ANR	218930	ArgumentList	alias -> alias		218743	1					
ANR	218931	Argument	alias -> alias		218743	0					
ANR	218932	PtrMemberAccess	alias -> alias		218743	0					
ANR	218933	Identifier	alias		218743	0					
ANR	218934	Identifier	alias		218743	1					
ANR	218935	Argument	lcname		218743	2					
ANR	218936	Identifier	lcname		218743	0					
ANR	218937	Argument	& fn_copy		218743	3					
ANR	218938	UnaryOperationExpression	& fn_copy		218743	0					
ANR	218939	UnaryOperator	&		218743	0					
ANR	218940	Identifier	fn_copy		218743	1					
ANR	218941	Argument	overriden		218743	4					
ANR	218942	Identifier	overriden		218743	0					
ANR	218943	ExpressionStatement	zend_string_release ( lcname )	1191:4:44100:44127	218743	4	True				
ANR	218944	CallExpression	zend_string_release ( lcname )		218743	0					
ANR	218945	Callee	zend_string_release		218743	0					
ANR	218946	Identifier	zend_string_release		218743	0					
ANR	218947	ArgumentList	lcname		218743	1					
ANR	218948	Argument	lcname		218743	0					
ANR	218949	Identifier	lcname		218743	0					
ANR	218950	IfStatement	if ( ! alias -> trait_method -> ce )		218743	5					
ANR	218951	Condition	! alias -> trait_method -> ce	1194:8:44201:44224	218743	0	True				
ANR	218952	UnaryOperationExpression	! alias -> trait_method -> ce		218743	0					
ANR	218953	UnaryOperator	!		218743	0					
ANR	218954	PtrMemberAccess	alias -> trait_method -> ce		218743	1					
ANR	218955	PtrMemberAccess	alias -> trait_method		218743	0					
ANR	218956	Identifier	alias		218743	0					
ANR	218957	Identifier	trait_method		218743	1					
ANR	218958	Identifier	ce		218743	1					
ANR	218959	CompoundStatement		28:34:1212:1212	218743	1					
ANR	218960	ExpressionStatement	alias -> trait_method -> ce = fn -> common . scope	1195:5:44234:44276	218743	0	True				
ANR	218961	AssignmentExpression	alias -> trait_method -> ce = fn -> common . scope		218743	0		=			
ANR	218962	PtrMemberAccess	alias -> trait_method -> ce		218743	0					
ANR	218963	PtrMemberAccess	alias -> trait_method		218743	0					
ANR	218964	Identifier	alias		218743	0					
ANR	218965	Identifier	trait_method		218743	1					
ANR	218966	Identifier	ce		218743	1					
ANR	218967	MemberAccess	fn -> common . scope		218743	1					
ANR	218968	PtrMemberAccess	fn -> common		218743	0					
ANR	218969	Identifier	fn		218743	0					
ANR	218970	Identifier	common		218743	1					
ANR	218971	Identifier	scope		218743	1					
ANR	218972	ExpressionStatement	alias_ptr ++	1198:3:44292:44303	218743	1	True				
ANR	218973	PostIncDecOperationExpression	alias_ptr ++		218743	0					
ANR	218974	Identifier	alias_ptr		218743	0					
ANR	218975	IncDec	++		218743	1					
ANR	218976	ExpressionStatement	alias = * alias_ptr	1199:3:44308:44326	218743	2	True				
ANR	218977	AssignmentExpression	alias = * alias_ptr		218743	0		=			
ANR	218978	Identifier	alias		218743	0					
ANR	218979	UnaryOperationExpression	* alias_ptr		218743	1					
ANR	218980	UnaryOperator	*		218743	0					
ANR	218981	Identifier	alias_ptr		218743	1					
ANR	218982	IfStatement	"if ( exclude_table == NULL || zend_hash_find ( exclude_table , fnname ) == NULL )"		218743	4					
ANR	218983	Condition	"exclude_table == NULL || zend_hash_find ( exclude_table , fnname ) == NULL"	1203:5:44341:44410	218743	0	True				
ANR	218984	OrExpression	"exclude_table == NULL || zend_hash_find ( exclude_table , fnname ) == NULL"		218743	0		||			
ANR	218985	EqualityExpression	exclude_table == NULL		218743	0		==			
ANR	218986	Identifier	exclude_table		218743	0					
ANR	218987	Identifier	NULL		218743	1					
ANR	218988	EqualityExpression	"zend_hash_find ( exclude_table , fnname ) == NULL"		218743	1		==			
ANR	218989	CallExpression	"zend_hash_find ( exclude_table , fnname )"		218743	0					
ANR	218990	Callee	zend_hash_find		218743	0					
ANR	218991	Identifier	zend_hash_find		218743	0					
ANR	218992	ArgumentList	exclude_table		218743	1					
ANR	218993	Argument	exclude_table		218743	0					
ANR	218994	Identifier	exclude_table		218743	0					
ANR	218995	Argument	fnname		218743	1					
ANR	218996	Identifier	fnname		218743	0					
ANR	218997	Identifier	NULL		218743	1					
ANR	218998	CompoundStatement		37:77:1398:1398	218743	1					
ANR	218999	ExpressionStatement	"memcpy ( & fn_copy , fn , fn -> type == ZEND_USER_FUNCTION ? sizeof ( zend_op_array ) : sizeof ( zend_internal_function ) )"	1206:2:44531:44639	218743	0	True				
ANR	219000	CallExpression	"memcpy ( & fn_copy , fn , fn -> type == ZEND_USER_FUNCTION ? sizeof ( zend_op_array ) : sizeof ( zend_internal_function ) )"		218743	0					
ANR	219001	Callee	memcpy		218743	0					
ANR	219002	Identifier	memcpy		218743	0					
ANR	219003	ArgumentList	& fn_copy		218743	1					
ANR	219004	Argument	& fn_copy		218743	0					
ANR	219005	UnaryOperationExpression	& fn_copy		218743	0					
ANR	219006	UnaryOperator	&		218743	0					
ANR	219007	Identifier	fn_copy		218743	1					
ANR	219008	Argument	fn		218743	1					
ANR	219009	Identifier	fn		218743	0					
ANR	219010	Argument	fn -> type == ZEND_USER_FUNCTION ? sizeof ( zend_op_array ) : sizeof ( zend_internal_function )		218743	2					
ANR	219011	ConditionalExpression	fn -> type == ZEND_USER_FUNCTION ? sizeof ( zend_op_array ) : sizeof ( zend_internal_function )		218743	0					
ANR	219012	Condition	fn -> type == ZEND_USER_FUNCTION		218743	0					
ANR	219013	EqualityExpression	fn -> type == ZEND_USER_FUNCTION		218743	0		==			
ANR	219014	PtrMemberAccess	fn -> type		218743	0					
ANR	219015	Identifier	fn		218743	0					
ANR	219016	Identifier	type		218743	1					
ANR	219017	Identifier	ZEND_USER_FUNCTION		218743	1					
ANR	219018	SizeofExpression	sizeof ( zend_op_array )		218743	1					
ANR	219019	Sizeof	sizeof		218743	0					
ANR	219020	SizeofOperand	zend_op_array		218743	1					
ANR	219021	SizeofExpression	sizeof ( zend_internal_function )		218743	2					
ANR	219022	Sizeof	sizeof		218743	0					
ANR	219023	SizeofOperand	zend_internal_function		218743	1					
ANR	219024	IfStatement	if ( ce -> trait_aliases )		218743	1					
ANR	219025	Condition	ce -> trait_aliases	1209:6:44721:44737	218743	0	True				
ANR	219026	PtrMemberAccess	ce -> trait_aliases		218743	0					
ANR	219027	Identifier	ce		218743	0					
ANR	219028	Identifier	trait_aliases		218743	1					
ANR	219029	CompoundStatement		43:25:1725:1725	218743	1					
ANR	219030	ExpressionStatement	alias_ptr = ce -> trait_aliases	1210:3:44745:44774	218743	0	True				
ANR	219031	AssignmentExpression	alias_ptr = ce -> trait_aliases		218743	0		=			
ANR	219032	Identifier	alias_ptr		218743	0					
ANR	219033	PtrMemberAccess	ce -> trait_aliases		218743	1					
ANR	219034	Identifier	ce		218743	0					
ANR	219035	Identifier	trait_aliases		218743	1					
ANR	219036	ExpressionStatement	alias = * alias_ptr	1211:3:44779:44797	218743	1	True				
ANR	219037	AssignmentExpression	alias = * alias_ptr		218743	0		=			
ANR	219038	Identifier	alias		218743	0					
ANR	219039	UnaryOperationExpression	* alias_ptr		218743	1					
ANR	219040	UnaryOperator	*		218743	0					
ANR	219041	Identifier	alias_ptr		218743	1					
ANR	219042	WhileStatement	while ( alias )		218743	2					
ANR	219043	Condition	alias	1212:10:44809:44813	218743	0	True				
ANR	219044	Identifier	alias		218743	0					
ANR	219045	CompoundStatement		46:17:1801:1801	218743	1					
ANR	219046	IfStatement	"if ( alias -> alias == NULL && alias -> modifiers != 0 && ( ! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce ) && ( ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 ) )"		218743	0					
ANR	219047	Condition	"alias -> alias == NULL && alias -> modifiers != 0 && ( ! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce ) && ( ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 )"	1214:8:44916:45277	218743	0	True				
ANR	219048	AndExpression	"alias -> alias == NULL && alias -> modifiers != 0 && ( ! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce ) && ( ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 )"		218743	0		&&			
ANR	219049	EqualityExpression	alias -> alias == NULL		218743	0		==			
ANR	219050	PtrMemberAccess	alias -> alias		218743	0					
ANR	219051	Identifier	alias		218743	0					
ANR	219052	Identifier	alias		218743	1					
ANR	219053	Identifier	NULL		218743	1					
ANR	219054	AndExpression	"alias -> modifiers != 0 && ( ! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce ) && ( ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 )"		218743	1		&&			
ANR	219055	EqualityExpression	alias -> modifiers != 0		218743	0		!=			
ANR	219056	PtrMemberAccess	alias -> modifiers		218743	0					
ANR	219057	Identifier	alias		218743	0					
ANR	219058	Identifier	modifiers		218743	1					
ANR	219059	PrimaryExpression	0		218743	1					
ANR	219060	AndExpression	"( ! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce ) && ( ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 )"		218743	1		&&			
ANR	219061	OrExpression	! alias -> trait_method -> ce || fn -> common . scope == alias -> trait_method -> ce		218743	0		||			
ANR	219062	UnaryOperationExpression	! alias -> trait_method -> ce		218743	0					
ANR	219063	UnaryOperator	!		218743	0					
ANR	219064	PtrMemberAccess	alias -> trait_method -> ce		218743	1					
ANR	219065	PtrMemberAccess	alias -> trait_method		218743	0					
ANR	219066	Identifier	alias		218743	0					
ANR	219067	Identifier	trait_method		218743	1					
ANR	219068	Identifier	ce		218743	1					
ANR	219069	EqualityExpression	fn -> common . scope == alias -> trait_method -> ce		218743	1		==			
ANR	219070	MemberAccess	fn -> common . scope		218743	0					
ANR	219071	PtrMemberAccess	fn -> common		218743	0					
ANR	219072	Identifier	fn		218743	0					
ANR	219073	Identifier	common		218743	1					
ANR	219074	Identifier	scope		218743	1					
ANR	219075	PtrMemberAccess	alias -> trait_method -> ce		218743	1					
ANR	219076	PtrMemberAccess	alias -> trait_method		218743	0					
ANR	219077	Identifier	alias		218743	0					
ANR	219078	Identifier	trait_method		218743	1					
ANR	219079	Identifier	ce		218743	1					
ANR	219080	AndExpression	"( ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname ) ) && ( zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0 )"		218743	1		&&			
ANR	219081	EqualityExpression	ZSTR_LEN ( alias -> trait_method -> method_name ) == ZSTR_LEN ( fnname )		218743	0		==			
ANR	219082	CallExpression	ZSTR_LEN ( alias -> trait_method -> method_name )		218743	0					
ANR	219083	Callee	ZSTR_LEN		218743	0					
ANR	219084	Identifier	ZSTR_LEN		218743	0					
ANR	219085	ArgumentList	alias -> trait_method -> method_name		218743	1					
ANR	219086	Argument	alias -> trait_method -> method_name		218743	0					
ANR	219087	PtrMemberAccess	alias -> trait_method -> method_name		218743	0					
ANR	219088	PtrMemberAccess	alias -> trait_method		218743	0					
ANR	219089	Identifier	alias		218743	0					
ANR	219090	Identifier	trait_method		218743	1					
ANR	219091	Identifier	method_name		218743	1					
ANR	219092	CallExpression	ZSTR_LEN ( fnname )		218743	1					
ANR	219093	Callee	ZSTR_LEN		218743	0					
ANR	219094	Identifier	ZSTR_LEN		218743	0					
ANR	219095	ArgumentList	fnname		218743	1					
ANR	219096	Argument	fnname		218743	0					
ANR	219097	Identifier	fnname		218743	0					
ANR	219098	EqualityExpression	"zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) ) == 0"		218743	1		==			
ANR	219099	CallExpression	"zend_binary_strcasecmp ( ZSTR_VAL ( alias -> trait_method -> method_name ) , ZSTR_LEN ( alias -> trait_method -> method_name ) , ZSTR_VAL ( fnname ) , ZSTR_LEN ( fnname ) )"		218743	0					
ANR	219100	Callee	zend_binary_strcasecmp		218743	0					
ANR	219101	Identifier	zend_binary_strcasecmp		218743	0					
ANR	219102	ArgumentList	ZSTR_VAL ( alias -> trait_method -> method_name )		218743	1					
ANR	219103	Argument	ZSTR_VAL ( alias -> trait_method -> method_name )		218743	0					
ANR	219104	CallExpression	ZSTR_VAL ( alias -> trait_method -> method_name )		218743	0					
ANR	219105	Callee	ZSTR_VAL		218743	0					
ANR	219106	Identifier	ZSTR_VAL		218743	0					
ANR	219107	ArgumentList	alias -> trait_method -> method_name		218743	1					
ANR	219108	Argument	alias -> trait_method -> method_name		218743	0					
ANR	219109	PtrMemberAccess	alias -> trait_method -> method_name		218743	0					
ANR	219110	PtrMemberAccess	alias -> trait_method		218743	0					
ANR	219111	Identifier	alias		218743	0					
ANR	219112	Identifier	trait_method		218743	1					
ANR	219113	Identifier	method_name		218743	1					
ANR	219114	Argument	ZSTR_LEN ( alias -> trait_method -> method_name )		218743	1					
ANR	219115	CallExpression	ZSTR_LEN ( alias -> trait_method -> method_name )		218743	0					
ANR	219116	Callee	ZSTR_LEN		218743	0					
ANR	219117	Identifier	ZSTR_LEN		218743	0					
ANR	219118	ArgumentList	alias -> trait_method -> method_name		218743	1					
ANR	219119	Argument	alias -> trait_method -> method_name		218743	0					
ANR	219120	PtrMemberAccess	alias -> trait_method -> method_name		218743	0					
ANR	219121	PtrMemberAccess	alias -> trait_method		218743	0					
ANR	219122	Identifier	alias		218743	0					
ANR	219123	Identifier	trait_method		218743	1					
ANR	219124	Identifier	method_name		218743	1					
ANR	219125	Argument	ZSTR_VAL ( fnname )		218743	2					
ANR	219126	CallExpression	ZSTR_VAL ( fnname )		218743	0					
ANR	219127	Callee	ZSTR_VAL		218743	0					
ANR	219128	Identifier	ZSTR_VAL		218743	0					
ANR	219129	ArgumentList	fnname		218743	1					
ANR	219130	Argument	fnname		218743	0					
ANR	219131	Identifier	fnname		218743	0					
ANR	219132	Argument	ZSTR_LEN ( fnname )		218743	3					
ANR	219133	CallExpression	ZSTR_LEN ( fnname )		218743	0					
ANR	219134	Callee	ZSTR_LEN		218743	0					
ANR	219135	Identifier	ZSTR_LEN		218743	0					
ANR	219136	ArgumentList	fnname		218743	1					
ANR	219137	Argument	fnname		218743	0					
ANR	219138	Identifier	fnname		218743	0					
ANR	219139	PrimaryExpression	0		218743	1					
ANR	219140	CompoundStatement		51:163:2265:2265	218743	1					
ANR	219141	ExpressionStatement	fn_copy . common . fn_flags = alias -> modifiers | ( fn -> common . fn_flags ^ ( fn -> common . fn_flags & ZEND_ACC_PPP_MASK ) )	1219:5:45288:45398	218743	0	True				
ANR	219142	AssignmentExpression	fn_copy . common . fn_flags = alias -> modifiers | ( fn -> common . fn_flags ^ ( fn -> common . fn_flags & ZEND_ACC_PPP_MASK ) )		218743	0		=			
ANR	219143	MemberAccess	fn_copy . common . fn_flags		218743	0					
ANR	219144	MemberAccess	fn_copy . common		218743	0					
ANR	219145	Identifier	fn_copy		218743	0					
ANR	219146	Identifier	common		218743	1					
ANR	219147	Identifier	fn_flags		218743	1					
ANR	219148	InclusiveOrExpression	alias -> modifiers | ( fn -> common . fn_flags ^ ( fn -> common . fn_flags & ZEND_ACC_PPP_MASK ) )		218743	1		|			
ANR	219149	PtrMemberAccess	alias -> modifiers		218743	0					
ANR	219150	Identifier	alias		218743	0					
ANR	219151	Identifier	modifiers		218743	1					
ANR	219152	ExclusiveOrExpression	fn -> common . fn_flags ^ ( fn -> common . fn_flags & ZEND_ACC_PPP_MASK )		218743	1		^			
ANR	219153	MemberAccess	fn -> common . fn_flags		218743	0					
ANR	219154	PtrMemberAccess	fn -> common		218743	0					
ANR	219155	Identifier	fn		218743	0					
ANR	219156	Identifier	common		218743	1					
ANR	219157	Identifier	fn_flags		218743	1					
ANR	219158	BitAndExpression	fn -> common . fn_flags & ZEND_ACC_PPP_MASK		218743	1		&			
ANR	219159	MemberAccess	fn -> common . fn_flags		218743	0					
ANR	219160	PtrMemberAccess	fn -> common		218743	0					
ANR	219161	Identifier	fn		218743	0					
ANR	219162	Identifier	common		218743	1					
ANR	219163	Identifier	fn_flags		218743	1					
ANR	219164	Identifier	ZEND_ACC_PPP_MASK		218743	1					
ANR	219165	IfStatement	if ( ! alias -> trait_method -> ce )		218743	1					
ANR	219166	Condition	! alias -> trait_method -> ce	1222:9:45475:45498	218743	0	True				
ANR	219167	UnaryOperationExpression	! alias -> trait_method -> ce		218743	0					
ANR	219168	UnaryOperator	!		218743	0					
ANR	219169	PtrMemberAccess	alias -> trait_method -> ce		218743	1					
ANR	219170	PtrMemberAccess	alias -> trait_method		218743	0					
ANR	219171	Identifier	alias		218743	0					
ANR	219172	Identifier	trait_method		218743	1					
ANR	219173	Identifier	ce		218743	1					
ANR	219174	CompoundStatement		56:35:2486:2486	218743	1					
ANR	219175	ExpressionStatement	alias -> trait_method -> ce = fn -> common . scope	1223:6:45509:45551	218743	0	True				
ANR	219176	AssignmentExpression	alias -> trait_method -> ce = fn -> common . scope		218743	0		=			
ANR	219177	PtrMemberAccess	alias -> trait_method -> ce		218743	0					
ANR	219178	PtrMemberAccess	alias -> trait_method		218743	0					
ANR	219179	Identifier	alias		218743	0					
ANR	219180	Identifier	trait_method		218743	1					
ANR	219181	Identifier	ce		218743	1					
ANR	219182	MemberAccess	fn -> common . scope		218743	1					
ANR	219183	PtrMemberAccess	fn -> common		218743	0					
ANR	219184	Identifier	fn		218743	0					
ANR	219185	Identifier	common		218743	1					
ANR	219186	Identifier	scope		218743	1					
ANR	219187	ExpressionStatement	alias_ptr ++	1226:4:45570:45581	218743	1	True				
ANR	219188	PostIncDecOperationExpression	alias_ptr ++		218743	0					
ANR	219189	Identifier	alias_ptr		218743	0					
ANR	219190	IncDec	++		218743	1					
ANR	219191	ExpressionStatement	alias = * alias_ptr	1227:4:45587:45605	218743	2	True				
ANR	219192	AssignmentExpression	alias = * alias_ptr		218743	0		=			
ANR	219193	Identifier	alias		218743	0					
ANR	219194	UnaryOperationExpression	* alias_ptr		218743	1					
ANR	219195	UnaryOperator	*		218743	0					
ANR	219196	Identifier	alias_ptr		218743	1					
ANR	219197	ExpressionStatement	"zend_add_trait_method ( ce , ZSTR_VAL ( fn -> common . function_name ) , fnname , & fn_copy , overriden )"	1231:2:45619:45709	218743	2	True				
ANR	219198	CallExpression	"zend_add_trait_method ( ce , ZSTR_VAL ( fn -> common . function_name ) , fnname , & fn_copy , overriden )"		218743	0					
ANR	219199	Callee	zend_add_trait_method		218743	0					
ANR	219200	Identifier	zend_add_trait_method		218743	0					
ANR	219201	ArgumentList	ce		218743	1					
ANR	219202	Argument	ce		218743	0					
ANR	219203	Identifier	ce		218743	0					
ANR	219204	Argument	ZSTR_VAL ( fn -> common . function_name )		218743	1					
ANR	219205	CallExpression	ZSTR_VAL ( fn -> common . function_name )		218743	0					
ANR	219206	Callee	ZSTR_VAL		218743	0					
ANR	219207	Identifier	ZSTR_VAL		218743	0					
ANR	219208	ArgumentList	fn -> common . function_name		218743	1					
ANR	219209	Argument	fn -> common . function_name		218743	0					
ANR	219210	MemberAccess	fn -> common . function_name		218743	0					
ANR	219211	PtrMemberAccess	fn -> common		218743	0					
ANR	219212	Identifier	fn		218743	0					
ANR	219213	Identifier	common		218743	1					
ANR	219214	Identifier	function_name		218743	1					
ANR	219215	Argument	fnname		218743	2					
ANR	219216	Identifier	fnname		218743	0					
ANR	219217	Argument	& fn_copy		218743	3					
ANR	219218	UnaryOperationExpression	& fn_copy		218743	0					
ANR	219219	UnaryOperator	&		218743	0					
ANR	219220	Identifier	fn_copy		218743	1					
ANR	219221	Argument	overriden		218743	4					
ANR	219222	Identifier	overriden		218743	0					
ANR	219223	ReturnStatement	return ZEND_HASH_APPLY_KEEP ;	1234:1:45716:45743	218743	5	True				
ANR	219224	Identifier	ZEND_HASH_APPLY_KEEP		218743	0					
ANR	219225	ReturnType	static int		218743	1					
ANR	219226	Identifier	zend_traits_copy_functions		218743	2					
ANR	219227	ParameterList	"zend_string * fnname , zend_function * fn , zend_class_entry * ce , HashTable * * overriden , HashTable * exclude_table"		218743	3					
ANR	219228	Parameter	zend_string * fnname	1166:38:42893:42911	218743	0	True				
ANR	219229	ParameterType	zend_string *		218743	0					
ANR	219230	Identifier	fnname		218743	1					
ANR	219231	Parameter	zend_function * fn	1166:59:42914:42930	218743	1	True				
ANR	219232	ParameterType	zend_function *		218743	0					
ANR	219233	Identifier	fn		218743	1					
ANR	219234	Parameter	zend_class_entry * ce	1166:78:42933:42952	218743	2	True				
ANR	219235	ParameterType	zend_class_entry *		218743	0					
ANR	219236	Identifier	ce		218743	1					
ANR	219237	Parameter	HashTable * * overriden	1166:100:42955:42975	218743	3	True				
ANR	219238	ParameterType	HashTable * *		218743	0					
ANR	219239	Identifier	overriden		218743	1					
ANR	219240	Parameter	HashTable * exclude_table	1166:123:42978:43001	218743	4	True				
ANR	219241	ParameterType	HashTable *		218743	0					
ANR	219242	Identifier	exclude_table		218743	1					
ANR	219243	CFGEntryNode	ENTRY		218743		True				
ANR	219244	CFGExitNode	EXIT		218743		True				
ANR	219245	Symbol	fn_copy . common		218743						
ANR	219246	Symbol	ZEND_ACC_PPP_MASK		218743						
ANR	219247	Symbol	alias -> trait_method -> ce		218743						
ANR	219248	Symbol	fn		218743						
ANR	219249	Symbol	exclude_table		218743						
ANR	219250	Symbol	* ce		218743						
ANR	219251	Symbol	zend_string_tolower		218743						
ANR	219252	Symbol	zend_hash_find		218743						
ANR	219253	Symbol	ZEND_HASH_APPLY_KEEP		218743						
ANR	219254	Symbol	fn_copy		218743						
ANR	219255	Symbol	ZEND_USER_FUNCTION		218743						
ANR	219256	Symbol	* alias -> trait_method		218743						
ANR	219257	Symbol	alias		218743						
ANR	219258	Symbol	fnname		218743						
ANR	219259	Symbol	alias_ptr		218743						
ANR	219260	Symbol	* alias_ptr		218743						
ANR	219261	Symbol	fn_copy . common . fn_flags		218743						
ANR	219262	Symbol	fn -> common . scope		218743						
ANR	219263	Symbol	ce		218743						
ANR	219264	Symbol	fn -> common . fn_flags		218743						
ANR	219265	Symbol	ce -> trait_aliases		218743						
ANR	219266	Symbol	alias -> trait_method		218743						
ANR	219267	Symbol	NULL		218743						
ANR	219268	Symbol	zend_binary_strcasecmp		218743						
ANR	219269	Symbol	* fn		218743						
ANR	219270	Symbol	alias -> alias		218743						
ANR	219271	Symbol	overriden		218743						
ANR	219272	Symbol	* * alias		218743						
ANR	219273	Symbol	ZSTR_VAL		218743						
ANR	219274	Symbol	* alias		218743						
ANR	219275	Symbol	lcname		218743						
ANR	219276	Symbol	fn -> common		218743						
ANR	219277	Symbol	alias -> trait_method -> method_name		218743						
ANR	219278	Symbol	ZSTR_LEN		218743						
ANR	219279	Symbol	alias -> modifiers		218743						
ANR	219280	Symbol	& fn_copy		218743						
ANR	219281	Symbol	fn -> type		218743						
ANR	219282	Symbol	fn -> common . function_name		218743						
ANR	219283	Function	zend_check_trait_usage	1238:0:45758:46305							
ANR	219284	FunctionDef	"zend_check_trait_usage (zend_class_entry * ce , zend_class_entry * trait)"		219283	0					
ANR	219285	CompoundStatement		1239:0:45850:46305	219283	0					
ANR	219286	IdentifierDeclStatement	uint32_t i ;	1240:1:45853:45863	219283	0	True				
ANR	219287	IdentifierDecl	i		219283	0					
ANR	219288	IdentifierDeclType	uint32_t		219283	0					
ANR	219289	Identifier	i		219283	1					
ANR	219290	IfStatement	if ( UNEXPECTED ( ( trait -> ce_flags & ZEND_ACC_TRAIT ) != ZEND_ACC_TRAIT ) )		219283	1					
ANR	219291	Condition	UNEXPECTED ( ( trait -> ce_flags & ZEND_ACC_TRAIT ) != ZEND_ACC_TRAIT )	1242:5:45871:45934	219283	0	True				
ANR	219292	CallExpression	UNEXPECTED ( ( trait -> ce_flags & ZEND_ACC_TRAIT ) != ZEND_ACC_TRAIT )		219283	0					
ANR	219293	Callee	UNEXPECTED		219283	0					
ANR	219294	Identifier	UNEXPECTED		219283	0					
ANR	219295	ArgumentList	( trait -> ce_flags & ZEND_ACC_TRAIT ) != ZEND_ACC_TRAIT		219283	1					
ANR	219296	Argument	( trait -> ce_flags & ZEND_ACC_TRAIT ) != ZEND_ACC_TRAIT		219283	0					
ANR	219297	EqualityExpression	( trait -> ce_flags & ZEND_ACC_TRAIT ) != ZEND_ACC_TRAIT		219283	0		!=			
ANR	219298	BitAndExpression	trait -> ce_flags & ZEND_ACC_TRAIT		219283	0		&			
ANR	219299	PtrMemberAccess	trait -> ce_flags		219283	0					
ANR	219300	Identifier	trait		219283	0					
ANR	219301	Identifier	ce_flags		219283	1					
ANR	219302	Identifier	ZEND_ACC_TRAIT		219283	1					
ANR	219303	Identifier	ZEND_ACC_TRAIT		219283	1					
ANR	219304	CompoundStatement		4:71:86:86	219283	1					
ANR	219305	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s is not a trait, Only traits may be used in 'as' and 'insteadof' statements"" , ZSTR_VAL ( trait -> name ) )"	1243:2:45941:46087	219283	0	True				
ANR	219306	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Class %s is not a trait, Only traits may be used in 'as' and 'insteadof' statements"" , ZSTR_VAL ( trait -> name ) )"		219283	0					
ANR	219307	Callee	zend_error_noreturn		219283	0					
ANR	219308	Identifier	zend_error_noreturn		219283	0					
ANR	219309	ArgumentList	E_COMPILE_ERROR		219283	1					
ANR	219310	Argument	E_COMPILE_ERROR		219283	0					
ANR	219311	Identifier	E_COMPILE_ERROR		219283	0					
ANR	219312	Argument	"""Class %s is not a trait, Only traits may be used in 'as' and 'insteadof' statements"""		219283	1					
ANR	219313	PrimaryExpression	"""Class %s is not a trait, Only traits may be used in 'as' and 'insteadof' statements"""		219283	0					
ANR	219314	Argument	ZSTR_VAL ( trait -> name )		219283	2					
ANR	219315	CallExpression	ZSTR_VAL ( trait -> name )		219283	0					
ANR	219316	Callee	ZSTR_VAL		219283	0					
ANR	219317	Identifier	ZSTR_VAL		219283	0					
ANR	219318	ArgumentList	trait -> name		219283	1					
ANR	219319	Argument	trait -> name		219283	0					
ANR	219320	PtrMemberAccess	trait -> name		219283	0					
ANR	219321	Identifier	trait		219283	0					
ANR	219322	Identifier	name		219283	1					
ANR	219323	ForStatement	for ( i = 0 ; i < ce -> num_traits ; i ++ )		219283	2					
ANR	219324	ForInit	i = 0 ;	1246:6:46099:46104	219283	0	True				
ANR	219325	AssignmentExpression	i = 0		219283	0		=			
ANR	219326	Identifier	i		219283	0					
ANR	219327	PrimaryExpression	0		219283	1					
ANR	219328	Condition	i < ce -> num_traits	1246:13:46106:46123	219283	1	True				
ANR	219329	RelationalExpression	i < ce -> num_traits		219283	0		<			
ANR	219330	Identifier	i		219283	0					
ANR	219331	PtrMemberAccess	ce -> num_traits		219283	1					
ANR	219332	Identifier	ce		219283	0					
ANR	219333	Identifier	num_traits		219283	1					
ANR	219334	PostIncDecOperationExpression	i ++	1246:33:46126:46128	219283	2	True				
ANR	219335	Identifier	i		219283	0					
ANR	219336	IncDec	++		219283	1					
ANR	219337	CompoundStatement		8:38:280:280	219283	3					
ANR	219338	IfStatement	if ( ce -> traits [ i ] == trait )		219283	0					
ANR	219339	Condition	ce -> traits [ i ] == trait	1247:6:46139:46160	219283	0	True				
ANR	219340	EqualityExpression	ce -> traits [ i ] == trait		219283	0		==			
ANR	219341	ArrayIndexing	ce -> traits [ i ]		219283	0					
ANR	219342	PtrMemberAccess	ce -> traits		219283	0					
ANR	219343	Identifier	ce		219283	0					
ANR	219344	Identifier	traits		219283	1					
ANR	219345	Identifier	i		219283	1					
ANR	219346	Identifier	trait		219283	1					
ANR	219347	CompoundStatement		9:30:312:312	219283	1					
ANR	219348	ReturnStatement	return ;	1248:3:46168:46174	219283	0	True				
ANR	219349	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Required Trait %s wasn't added to %s"" , ZSTR_VAL ( trait -> name ) , ZSTR_VAL ( ce -> name ) )"	1251:1:46184:46303	219283	3	True				
ANR	219350	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Required Trait %s wasn't added to %s"" , ZSTR_VAL ( trait -> name ) , ZSTR_VAL ( ce -> name ) )"		219283	0					
ANR	219351	Callee	zend_error_noreturn		219283	0					
ANR	219352	Identifier	zend_error_noreturn		219283	0					
ANR	219353	ArgumentList	E_COMPILE_ERROR		219283	1					
ANR	219354	Argument	E_COMPILE_ERROR		219283	0					
ANR	219355	Identifier	E_COMPILE_ERROR		219283	0					
ANR	219356	Argument	"""Required Trait %s wasn't added to %s"""		219283	1					
ANR	219357	PrimaryExpression	"""Required Trait %s wasn't added to %s"""		219283	0					
ANR	219358	Argument	ZSTR_VAL ( trait -> name )		219283	2					
ANR	219359	CallExpression	ZSTR_VAL ( trait -> name )		219283	0					
ANR	219360	Callee	ZSTR_VAL		219283	0					
ANR	219361	Identifier	ZSTR_VAL		219283	0					
ANR	219362	ArgumentList	trait -> name		219283	1					
ANR	219363	Argument	trait -> name		219283	0					
ANR	219364	PtrMemberAccess	trait -> name		219283	0					
ANR	219365	Identifier	trait		219283	0					
ANR	219366	Identifier	name		219283	1					
ANR	219367	Argument	ZSTR_VAL ( ce -> name )		219283	3					
ANR	219368	CallExpression	ZSTR_VAL ( ce -> name )		219283	0					
ANR	219369	Callee	ZSTR_VAL		219283	0					
ANR	219370	Identifier	ZSTR_VAL		219283	0					
ANR	219371	ArgumentList	ce -> name		219283	1					
ANR	219372	Argument	ce -> name		219283	0					
ANR	219373	PtrMemberAccess	ce -> name		219283	0					
ANR	219374	Identifier	ce		219283	0					
ANR	219375	Identifier	name		219283	1					
ANR	219376	ReturnType	static void		219283	1					
ANR	219377	Identifier	zend_check_trait_usage		219283	2					
ANR	219378	ParameterList	"zend_class_entry * ce , zend_class_entry * trait"		219283	3					
ANR	219379	Parameter	zend_class_entry * ce	1238:35:45793:45812	219283	0	True				
ANR	219380	ParameterType	zend_class_entry *		219283	0					
ANR	219381	Identifier	ce		219283	1					
ANR	219382	Parameter	zend_class_entry * trait	1238:57:45815:45837	219283	1	True				
ANR	219383	ParameterType	zend_class_entry *		219283	0					
ANR	219384	Identifier	trait		219283	1					
ANR	219385	CFGEntryNode	ENTRY		219283		True				
ANR	219386	CFGExitNode	EXIT		219283		True				
ANR	219387	Symbol	* trait		219283						
ANR	219388	Symbol	ce		219283						
ANR	219389	Symbol	E_COMPILE_ERROR		219283						
ANR	219390	Symbol	i		219283						
ANR	219391	Symbol	* ce		219283						
ANR	219392	Symbol	trait -> name		219283						
ANR	219393	Symbol	ce -> num_traits		219283						
ANR	219394	Symbol	* * ce		219283						
ANR	219395	Symbol	ZEND_ACC_TRAIT		219283						
ANR	219396	Symbol	ZSTR_VAL		219283						
ANR	219397	Symbol	ce -> traits		219283						
ANR	219398	Symbol	UNEXPECTED		219283						
ANR	219399	Symbol	* ce -> traits		219283						
ANR	219400	Symbol	* i		219283						
ANR	219401	Symbol	trait		219283						
ANR	219402	Symbol	trait -> ce_flags		219283						
ANR	219403	Symbol	ce -> name		219283						
ANR	219404	Function	zend_traits_init_trait_structures	1255:0:46318:50256							
ANR	219405	FunctionDef	zend_traits_init_trait_structures (zend_class_entry * ce)		219404	0					
ANR	219406	CompoundStatement		1256:0:46396:50256	219404	0					
ANR	219407	IdentifierDeclStatement	"size_t i , j = 0 ;"	1257:1:46399:46414	219404	0	True				
ANR	219408	IdentifierDecl	i		219404	0					
ANR	219409	IdentifierDeclType	size_t		219404	0					
ANR	219410	Identifier	i		219404	1					
ANR	219411	IdentifierDecl	j = 0		219404	1					
ANR	219412	IdentifierDeclType	size_t		219404	0					
ANR	219413	Identifier	j		219404	1					
ANR	219414	AssignmentExpression	j = 0		219404	2		=			
ANR	219415	Identifier	j		219404	0					
ANR	219416	PrimaryExpression	0		219404	1					
ANR	219417	IdentifierDeclStatement	zend_trait_precedence * * precedences ;	1258:1:46417:46452	219404	1	True				
ANR	219418	IdentifierDecl	* * precedences		219404	0					
ANR	219419	IdentifierDeclType	zend_trait_precedence * *		219404	0					
ANR	219420	Identifier	precedences		219404	1					
ANR	219421	IdentifierDeclStatement	zend_trait_precedence * cur_precedence ;	1259:1:46455:46492	219404	2	True				
ANR	219422	IdentifierDecl	* cur_precedence		219404	0					
ANR	219423	IdentifierDeclType	zend_trait_precedence *		219404	0					
ANR	219424	Identifier	cur_precedence		219404	1					
ANR	219425	IdentifierDeclStatement	zend_trait_method_reference * cur_method_ref ;	1260:1:46495:46538	219404	3	True				
ANR	219426	IdentifierDecl	* cur_method_ref		219404	0					
ANR	219427	IdentifierDeclType	zend_trait_method_reference *		219404	0					
ANR	219428	Identifier	cur_method_ref		219404	1					
ANR	219429	IdentifierDeclStatement	zend_string * lcname ;	1261:1:46541:46560	219404	4	True				
ANR	219430	IdentifierDecl	* lcname		219404	0					
ANR	219431	IdentifierDeclType	zend_string *		219404	0					
ANR	219432	Identifier	lcname		219404	1					
ANR	219433	IdentifierDeclStatement	zend_bool method_exists ;	1262:1:46563:46586	219404	5	True				
ANR	219434	IdentifierDecl	method_exists		219404	0					
ANR	219435	IdentifierDeclType	zend_bool		219404	0					
ANR	219436	Identifier	method_exists		219404	1					
ANR	219437	IfStatement	if ( ce -> trait_precedences )		219404	6					
ANR	219438	Condition	ce -> trait_precedences	1265:5:46626:46646	219404	0	True				
ANR	219439	PtrMemberAccess	ce -> trait_precedences		219404	0					
ANR	219440	Identifier	ce		219404	0					
ANR	219441	Identifier	trait_precedences		219404	1					
ANR	219442	CompoundStatement		10:28:252:252	219404	1					
ANR	219443	ExpressionStatement	i = 0	1266:2:46653:46658	219404	0	True				
ANR	219444	AssignmentExpression	i = 0		219404	0		=			
ANR	219445	Identifier	i		219404	0					
ANR	219446	PrimaryExpression	0		219404	1					
ANR	219447	ExpressionStatement	precedences = ce -> trait_precedences	1267:2:46662:46697	219404	1	True				
ANR	219448	AssignmentExpression	precedences = ce -> trait_precedences		219404	0		=			
ANR	219449	Identifier	precedences		219404	0					
ANR	219450	PtrMemberAccess	ce -> trait_precedences		219404	1					
ANR	219451	Identifier	ce		219404	0					
ANR	219452	Identifier	trait_precedences		219404	1					
ANR	219453	ExpressionStatement	ce -> trait_precedences = NULL	1268:2:46701:46729	219404	2	True				
ANR	219454	AssignmentExpression	ce -> trait_precedences = NULL		219404	0		=			
ANR	219455	PtrMemberAccess	ce -> trait_precedences		219404	0					
ANR	219456	Identifier	ce		219404	0					
ANR	219457	Identifier	trait_precedences		219404	1					
ANR	219458	Identifier	NULL		219404	1					
ANR	219459	WhileStatement	while ( ( cur_precedence = precedences [ i ] ) )		219404	3					
ANR	219460	Condition	cur_precedence = precedences [ i ]	1269:9:46740:46772	219404	0	True				
ANR	219461	AssignmentExpression	cur_precedence = precedences [ i ]		219404	0		=			
ANR	219462	Identifier	cur_precedence		219404	0					
ANR	219463	ArrayIndexing	precedences [ i ]		219404	1					
ANR	219464	Identifier	precedences		219404	0					
ANR	219465	Identifier	i		219404	1					
ANR	219466	CompoundStatement		14:44:378:378	219404	1					
ANR	219467	IfStatement	if ( cur_precedence -> exclude_from_classes )		219404	0					
ANR	219468	Condition	cur_precedence -> exclude_from_classes	1271:7:46841:46876	219404	0	True				
ANR	219469	PtrMemberAccess	cur_precedence -> exclude_from_classes		219404	0					
ANR	219470	Identifier	cur_precedence		219404	0					
ANR	219471	Identifier	exclude_from_classes		219404	1					
ANR	219472	CompoundStatement		16:45:482:482	219404	1					
ANR	219473	ExpressionStatement	cur_method_ref = cur_precedence -> trait_method	1272:4:46885:46930	219404	0	True				
ANR	219474	AssignmentExpression	cur_method_ref = cur_precedence -> trait_method		219404	0		=			
ANR	219475	Identifier	cur_method_ref		219404	0					
ANR	219476	PtrMemberAccess	cur_precedence -> trait_method		219404	1					
ANR	219477	Identifier	cur_precedence		219404	0					
ANR	219478	Identifier	trait_method		219404	1					
ANR	219479	IfStatement	"if ( ! ( cur_precedence -> trait_method -> ce = zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD ) ) )"		219404	1					
ANR	219480	Condition	"! ( cur_precedence -> trait_method -> ce = zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD ) )"	1273:8:46940:47082	219404	0	True				
ANR	219481	UnaryOperationExpression	"! ( cur_precedence -> trait_method -> ce = zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD ) )"		219404	0					
ANR	219482	UnaryOperator	!		219404	0					
ANR	219483	AssignmentExpression	"cur_precedence -> trait_method -> ce = zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD )"		219404	1		=			
ANR	219484	PtrMemberAccess	cur_precedence -> trait_method -> ce		219404	0					
ANR	219485	PtrMemberAccess	cur_precedence -> trait_method		219404	0					
ANR	219486	Identifier	cur_precedence		219404	0					
ANR	219487	Identifier	trait_method		219404	1					
ANR	219488	Identifier	ce		219404	1					
ANR	219489	CallExpression	"zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD )"		219404	1					
ANR	219490	Callee	zend_fetch_class		219404	0					
ANR	219491	Identifier	zend_fetch_class		219404	0					
ANR	219492	ArgumentList	cur_method_ref -> class_name		219404	1					
ANR	219493	Argument	cur_method_ref -> class_name		219404	0					
ANR	219494	PtrMemberAccess	cur_method_ref -> class_name		219404	0					
ANR	219495	Identifier	cur_method_ref		219404	0					
ANR	219496	Identifier	class_name		219404	1					
ANR	219497	Argument	ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD		219404	1					
ANR	219498	InclusiveOrExpression	ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD		219404	0		|			
ANR	219499	Identifier	ZEND_FETCH_CLASS_TRAIT		219404	0					
ANR	219500	Identifier	ZEND_FETCH_CLASS_NO_AUTOLOAD		219404	1					
ANR	219501	CompoundStatement		19:63:688:688	219404	1					
ANR	219502	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Could not find trait %s"" , ZSTR_VAL ( cur_method_ref -> class_name ) )"	1275:5:47092:47193	219404	0	True				
ANR	219503	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Could not find trait %s"" , ZSTR_VAL ( cur_method_ref -> class_name ) )"		219404	0					
ANR	219504	Callee	zend_error_noreturn		219404	0					
ANR	219505	Identifier	zend_error_noreturn		219404	0					
ANR	219506	ArgumentList	E_COMPILE_ERROR		219404	1					
ANR	219507	Argument	E_COMPILE_ERROR		219404	0					
ANR	219508	Identifier	E_COMPILE_ERROR		219404	0					
ANR	219509	Argument	"""Could not find trait %s"""		219404	1					
ANR	219510	PrimaryExpression	"""Could not find trait %s"""		219404	0					
ANR	219511	Argument	ZSTR_VAL ( cur_method_ref -> class_name )		219404	2					
ANR	219512	CallExpression	ZSTR_VAL ( cur_method_ref -> class_name )		219404	0					
ANR	219513	Callee	ZSTR_VAL		219404	0					
ANR	219514	Identifier	ZSTR_VAL		219404	0					
ANR	219515	ArgumentList	cur_method_ref -> class_name		219404	1					
ANR	219516	Argument	cur_method_ref -> class_name		219404	0					
ANR	219517	PtrMemberAccess	cur_method_ref -> class_name		219404	0					
ANR	219518	Identifier	cur_method_ref		219404	0					
ANR	219519	Identifier	class_name		219404	1					
ANR	219520	ExpressionStatement	"zend_check_trait_usage ( ce , cur_precedence -> trait_method -> ce )"	1277:4:47205:47265	219404	2	True				
ANR	219521	CallExpression	"zend_check_trait_usage ( ce , cur_precedence -> trait_method -> ce )"		219404	0					
ANR	219522	Callee	zend_check_trait_usage		219404	0					
ANR	219523	Identifier	zend_check_trait_usage		219404	0					
ANR	219524	ArgumentList	ce		219404	1					
ANR	219525	Argument	ce		219404	0					
ANR	219526	Identifier	ce		219404	0					
ANR	219527	Argument	cur_precedence -> trait_method -> ce		219404	1					
ANR	219528	PtrMemberAccess	cur_precedence -> trait_method -> ce		219404	0					
ANR	219529	PtrMemberAccess	cur_precedence -> trait_method		219404	0					
ANR	219530	Identifier	cur_precedence		219404	0					
ANR	219531	Identifier	trait_method		219404	1					
ANR	219532	Identifier	ce		219404	1					
ANR	219533	ExpressionStatement	lcname = zend_string_tolower ( cur_method_ref -> method_name )	1280:4:47339:47396	219404	3	True				
ANR	219534	AssignmentExpression	lcname = zend_string_tolower ( cur_method_ref -> method_name )		219404	0		=			
ANR	219535	Identifier	lcname		219404	0					
ANR	219536	CallExpression	zend_string_tolower ( cur_method_ref -> method_name )		219404	1					
ANR	219537	Callee	zend_string_tolower		219404	0					
ANR	219538	Identifier	zend_string_tolower		219404	0					
ANR	219539	ArgumentList	cur_method_ref -> method_name		219404	1					
ANR	219540	Argument	cur_method_ref -> method_name		219404	0					
ANR	219541	PtrMemberAccess	cur_method_ref -> method_name		219404	0					
ANR	219542	Identifier	cur_method_ref		219404	0					
ANR	219543	Identifier	method_name		219404	1					
ANR	219544	ExpressionStatement	"method_exists = zend_hash_exists ( & cur_method_ref -> ce -> function_table , lcname )"	1281:4:47402:47492	219404	4	True				
ANR	219545	AssignmentExpression	"method_exists = zend_hash_exists ( & cur_method_ref -> ce -> function_table , lcname )"		219404	0		=			
ANR	219546	Identifier	method_exists		219404	0					
ANR	219547	CallExpression	"zend_hash_exists ( & cur_method_ref -> ce -> function_table , lcname )"		219404	1					
ANR	219548	Callee	zend_hash_exists		219404	0					
ANR	219549	Identifier	zend_hash_exists		219404	0					
ANR	219550	ArgumentList	& cur_method_ref -> ce -> function_table		219404	1					
ANR	219551	Argument	& cur_method_ref -> ce -> function_table		219404	0					
ANR	219552	UnaryOperationExpression	& cur_method_ref -> ce -> function_table		219404	0					
ANR	219553	UnaryOperator	&		219404	0					
ANR	219554	PtrMemberAccess	cur_method_ref -> ce -> function_table		219404	1					
ANR	219555	PtrMemberAccess	cur_method_ref -> ce		219404	0					
ANR	219556	Identifier	cur_method_ref		219404	0					
ANR	219557	Identifier	ce		219404	1					
ANR	219558	Identifier	function_table		219404	1					
ANR	219559	Argument	lcname		219404	1					
ANR	219560	Identifier	lcname		219404	0					
ANR	219561	ExpressionStatement	zend_string_release ( lcname )	1283:4:47498:47525	219404	5	True				
ANR	219562	CallExpression	zend_string_release ( lcname )		219404	0					
ANR	219563	Callee	zend_string_release		219404	0					
ANR	219564	Identifier	zend_string_release		219404	0					
ANR	219565	ArgumentList	lcname		219404	1					
ANR	219566	Argument	lcname		219404	0					
ANR	219567	Identifier	lcname		219404	0					
ANR	219568	IfStatement	if ( ! method_exists )		219404	6					
ANR	219569	Condition	! method_exists	1284:8:47535:47548	219404	0	True				
ANR	219570	UnaryOperationExpression	! method_exists		219404	0					
ANR	219571	UnaryOperator	!		219404	0					
ANR	219572	Identifier	method_exists		219404	1					
ANR	219573	CompoundStatement		29:24:1154:1154	219404	1					
ANR	219574	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""A precedence rule was defined for %s::%s but this method does not exist"" , ZSTR_VAL ( cur_method_ref -> ce -> name ) , ZSTR_VAL ( cur_method_ref -> method_name ) )"	1285:5:47558:47774	219404	0	True				
ANR	219575	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""A precedence rule was defined for %s::%s but this method does not exist"" , ZSTR_VAL ( cur_method_ref -> ce -> name ) , ZSTR_VAL ( cur_method_ref -> method_name ) )"		219404	0					
ANR	219576	Callee	zend_error_noreturn		219404	0					
ANR	219577	Identifier	zend_error_noreturn		219404	0					
ANR	219578	ArgumentList	E_COMPILE_ERROR		219404	1					
ANR	219579	Argument	E_COMPILE_ERROR		219404	0					
ANR	219580	Identifier	E_COMPILE_ERROR		219404	0					
ANR	219581	Argument	"""A precedence rule was defined for %s::%s but this method does not exist"""		219404	1					
ANR	219582	PrimaryExpression	"""A precedence rule was defined for %s::%s but this method does not exist"""		219404	0					
ANR	219583	Argument	ZSTR_VAL ( cur_method_ref -> ce -> name )		219404	2					
ANR	219584	CallExpression	ZSTR_VAL ( cur_method_ref -> ce -> name )		219404	0					
ANR	219585	Callee	ZSTR_VAL		219404	0					
ANR	219586	Identifier	ZSTR_VAL		219404	0					
ANR	219587	ArgumentList	cur_method_ref -> ce -> name		219404	1					
ANR	219588	Argument	cur_method_ref -> ce -> name		219404	0					
ANR	219589	PtrMemberAccess	cur_method_ref -> ce -> name		219404	0					
ANR	219590	PtrMemberAccess	cur_method_ref -> ce		219404	0					
ANR	219591	Identifier	cur_method_ref		219404	0					
ANR	219592	Identifier	ce		219404	1					
ANR	219593	Identifier	name		219404	1					
ANR	219594	Argument	ZSTR_VAL ( cur_method_ref -> method_name )		219404	3					
ANR	219595	CallExpression	ZSTR_VAL ( cur_method_ref -> method_name )		219404	0					
ANR	219596	Callee	ZSTR_VAL		219404	0					
ANR	219597	Identifier	ZSTR_VAL		219404	0					
ANR	219598	ArgumentList	cur_method_ref -> method_name		219404	1					
ANR	219599	Argument	cur_method_ref -> method_name		219404	0					
ANR	219600	PtrMemberAccess	cur_method_ref -> method_name		219404	0					
ANR	219601	Identifier	cur_method_ref		219404	0					
ANR	219602	Identifier	method_name		219404	1					
ANR	219603	ExpressionStatement	j = 0	1297:4:48043:48048	219404	7	True				
ANR	219604	AssignmentExpression	j = 0		219404	0		=			
ANR	219605	Identifier	j		219404	0					
ANR	219606	PrimaryExpression	0		219404	1					
ANR	219607	WhileStatement	while ( cur_precedence -> exclude_from_classes [ j ] . class_name )		219404	8					
ANR	219608	Condition	cur_precedence -> exclude_from_classes [ j ] . class_name	1298:11:48061:48110	219404	0	True				
ANR	219609	MemberAccess	cur_precedence -> exclude_from_classes [ j ] . class_name		219404	0					
ANR	219610	ArrayIndexing	cur_precedence -> exclude_from_classes [ j ]		219404	0					
ANR	219611	PtrMemberAccess	cur_precedence -> exclude_from_classes		219404	0					
ANR	219612	Identifier	cur_precedence		219404	0					
ANR	219613	Identifier	exclude_from_classes		219404	1					
ANR	219614	Identifier	j		219404	1					
ANR	219615	Identifier	class_name		219404	1					
ANR	219616	CompoundStatement		44:5:1723:1799	219404	1					
ANR	219617	IdentifierDeclStatement	zend_string * class_name = cur_precedence -> exclude_from_classes [ j ] . class_name ;	1299:5:48120:48196	219404	0	True				
ANR	219618	IdentifierDecl	* class_name = cur_precedence -> exclude_from_classes [ j ] . class_name		219404	0					
ANR	219619	IdentifierDeclType	zend_string *		219404	0					
ANR	219620	Identifier	class_name		219404	1					
ANR	219621	AssignmentExpression	* class_name = cur_precedence -> exclude_from_classes [ j ] . class_name		219404	2		=			
ANR	219622	Identifier	class_name		219404	0					
ANR	219623	MemberAccess	cur_precedence -> exclude_from_classes [ j ] . class_name		219404	1					
ANR	219624	ArrayIndexing	cur_precedence -> exclude_from_classes [ j ]		219404	0					
ANR	219625	PtrMemberAccess	cur_precedence -> exclude_from_classes		219404	0					
ANR	219626	Identifier	cur_precedence		219404	0					
ANR	219627	Identifier	exclude_from_classes		219404	1					
ANR	219628	Identifier	j		219404	1					
ANR	219629	Identifier	class_name		219404	1					
ANR	219630	IfStatement	"if ( ! ( cur_precedence -> exclude_from_classes [ j ] . ce = zend_fetch_class ( class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD ) ) )"		219404	1					
ANR	219631	Condition	"! ( cur_precedence -> exclude_from_classes [ j ] . ce = zend_fetch_class ( class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD ) )"	1301:9:48208:48337	219404	0	True				
ANR	219632	UnaryOperationExpression	"! ( cur_precedence -> exclude_from_classes [ j ] . ce = zend_fetch_class ( class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD ) )"		219404	0					
ANR	219633	UnaryOperator	!		219404	0					
ANR	219634	AssignmentExpression	"cur_precedence -> exclude_from_classes [ j ] . ce = zend_fetch_class ( class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD )"		219404	1		=			
ANR	219635	MemberAccess	cur_precedence -> exclude_from_classes [ j ] . ce		219404	0					
ANR	219636	ArrayIndexing	cur_precedence -> exclude_from_classes [ j ]		219404	0					
ANR	219637	PtrMemberAccess	cur_precedence -> exclude_from_classes		219404	0					
ANR	219638	Identifier	cur_precedence		219404	0					
ANR	219639	Identifier	exclude_from_classes		219404	1					
ANR	219640	Identifier	j		219404	1					
ANR	219641	Identifier	ce		219404	1					
ANR	219642	CallExpression	"zend_fetch_class ( class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD )"		219404	1					
ANR	219643	Callee	zend_fetch_class		219404	0					
ANR	219644	Identifier	zend_fetch_class		219404	0					
ANR	219645	ArgumentList	class_name		219404	1					
ANR	219646	Argument	class_name		219404	0					
ANR	219647	Identifier	class_name		219404	0					
ANR	219648	Argument	ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD		219404	1					
ANR	219649	InclusiveOrExpression	ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD		219404	0		|			
ANR	219650	Identifier	ZEND_FETCH_CLASS_TRAIT		219404	0					
ANR	219651	Identifier	ZEND_FETCH_CLASS_NO_AUTOLOAD		219404	1					
ANR	219652	CompoundStatement		46:141:1943:1943	219404	1					
ANR	219653	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Could not find trait %s"" , ZSTR_VAL ( class_name ) )"	1302:6:48348:48433	219404	0	True				
ANR	219654	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Could not find trait %s"" , ZSTR_VAL ( class_name ) )"		219404	0					
ANR	219655	Callee	zend_error_noreturn		219404	0					
ANR	219656	Identifier	zend_error_noreturn		219404	0					
ANR	219657	ArgumentList	E_COMPILE_ERROR		219404	1					
ANR	219658	Argument	E_COMPILE_ERROR		219404	0					
ANR	219659	Identifier	E_COMPILE_ERROR		219404	0					
ANR	219660	Argument	"""Could not find trait %s"""		219404	1					
ANR	219661	PrimaryExpression	"""Could not find trait %s"""		219404	0					
ANR	219662	Argument	ZSTR_VAL ( class_name )		219404	2					
ANR	219663	CallExpression	ZSTR_VAL ( class_name )		219404	0					
ANR	219664	Callee	ZSTR_VAL		219404	0					
ANR	219665	Identifier	ZSTR_VAL		219404	0					
ANR	219666	ArgumentList	class_name		219404	1					
ANR	219667	Argument	class_name		219404	0					
ANR	219668	Identifier	class_name		219404	0					
ANR	219669	ExpressionStatement	"zend_check_trait_usage ( ce , cur_precedence -> exclude_from_classes [ j ] . ce )"	1304:5:48447:48517	219404	2	True				
ANR	219670	CallExpression	"zend_check_trait_usage ( ce , cur_precedence -> exclude_from_classes [ j ] . ce )"		219404	0					
ANR	219671	Callee	zend_check_trait_usage		219404	0					
ANR	219672	Identifier	zend_check_trait_usage		219404	0					
ANR	219673	ArgumentList	ce		219404	1					
ANR	219674	Argument	ce		219404	0					
ANR	219675	Identifier	ce		219404	0					
ANR	219676	Argument	cur_precedence -> exclude_from_classes [ j ] . ce		219404	1					
ANR	219677	MemberAccess	cur_precedence -> exclude_from_classes [ j ] . ce		219404	0					
ANR	219678	ArrayIndexing	cur_precedence -> exclude_from_classes [ j ]		219404	0					
ANR	219679	PtrMemberAccess	cur_precedence -> exclude_from_classes		219404	0					
ANR	219680	Identifier	cur_precedence		219404	0					
ANR	219681	Identifier	exclude_from_classes		219404	1					
ANR	219682	Identifier	j		219404	1					
ANR	219683	Identifier	ce		219404	1					
ANR	219684	IfStatement	if ( cur_precedence -> trait_method -> ce == cur_precedence -> exclude_from_classes [ j ] . ce )		219404	3					
ANR	219685	Condition	cur_precedence -> trait_method -> ce == cur_precedence -> exclude_from_classes [ j ] . ce	1308:9:48649:48726	219404	0	True				
ANR	219686	EqualityExpression	cur_precedence -> trait_method -> ce == cur_precedence -> exclude_from_classes [ j ] . ce		219404	0		==			
ANR	219687	PtrMemberAccess	cur_precedence -> trait_method -> ce		219404	0					
ANR	219688	PtrMemberAccess	cur_precedence -> trait_method		219404	0					
ANR	219689	Identifier	cur_precedence		219404	0					
ANR	219690	Identifier	trait_method		219404	1					
ANR	219691	Identifier	ce		219404	1					
ANR	219692	MemberAccess	cur_precedence -> exclude_from_classes [ j ] . ce		219404	1					
ANR	219693	ArrayIndexing	cur_precedence -> exclude_from_classes [ j ]		219404	0					
ANR	219694	PtrMemberAccess	cur_precedence -> exclude_from_classes		219404	0					
ANR	219695	Identifier	cur_precedence		219404	0					
ANR	219696	Identifier	exclude_from_classes		219404	1					
ANR	219697	Identifier	j		219404	1					
ANR	219698	Identifier	ce		219404	1					
ANR	219699	CompoundStatement		53:89:2332:2332	219404	1					
ANR	219700	Statement	zend_error_noreturn	1309:6:48737:48755	219404	0	True				
ANR	219701	Statement	(	1309:25:48756:48756	219404	1	True				
ANR	219702	Statement	E_COMPILE_ERROR	1309:26:48757:48771	219404	2	True				
ANR	219703	Statement	","	1309:41:48772:48772	219404	3	True				
ANR	219704	Statement	"""Inconsistent insteadof definition. """	1310:11:48785:48821	219404	4	True				
ANR	219705	Statement	"""The method %s is to be used from %s, but %s is also on the exclude list"""	1311:11:48834:48906	219404	5	True				
ANR	219706	Statement	","	1311:84:48907:48907	219404	6	True				
ANR	219707	Statement	ZSTR_VAL	1312:11:48920:48927	219404	7	True				
ANR	219708	Statement	(	1312:19:48928:48928	219404	8	True				
ANR	219709	Statement	cur_method_ref	1312:20:48929:48942	219404	9	True				
ANR	219710	Statement	->	1312:34:48943:48944	219404	10	True				
ANR	219711	Statement	method_name	1312:36:48945:48955	219404	11	True				
ANR	219712	Statement	)	1312:47:48956:48956	219404	12	True				
ANR	219713	Statement	","	1312:48:48957:48957	219404	13	True				
ANR	219714	Statement	ZSTR_VAL	1313:11:48970:48977	219404	14	True				
ANR	219715	Statement	(	1313:19:48978:48978	219404	15	True				
ANR	219716	Statement	cur_precedence	1313:20:48979:48992	219404	16	True				
ANR	219717	Statement	->	1313:34:48993:48994	219404	17	True				
ANR	219718	Statement	trait_method	1313:36:48995:49006	219404	18	True				
ANR	219719	Statement	->	1313:48:49007:49008	219404	19	True				
ANR	219720	Statement	ce	1313:50:49009:49010	219404	20	True				
ANR	219721	Statement	->	1313:52:49011:49012	219404	21	True				
ANR	219722	Statement	name	1313:54:49013:49016	219404	22	True				
ANR	219723	Statement	)	1313:58:49017:49017	219404	23	True				
ANR	219724	Statement	","	1313:59:49018:49018	219404	24	True				
ANR	219725	Statement	ZSTR_VAL	1314:11:49031:49038	219404	25	True				
ANR	219726	Statement	(	1314:19:49039:49039	219404	26	True				
ANR	219727	Statement	cur_precedence	1314:20:49040:49053	219404	27	True				
ANR	219728	Statement	->	1314:34:49054:49055	219404	28	True				
ANR	219729	Statement	trait_method	1314:36:49056:49067	219404	29	True				
ANR	219730	Statement	->	1314:48:49068:49069	219404	30	True				
ANR	219731	Statement	ce	1314:50:49070:49071	219404	31	True				
ANR	219732	Statement	->	1314:52:49072:49073	219404	32	True				
ANR	219733	Statement	name	1314:54:49074:49077	219404	33	True				
ANR	219734	Statement	)	1314:58:49078:49078	219404	34	True				
ANR	219735	Statement	)	1314:59:49079:49079	219404	35	True				
ANR	219736	ExpressionStatement		1314:60:49080:49080	219404	36	True				
ANR	219737	ExpressionStatement	zend_string_release ( class_name )	1317:5:49095:49126	219404	4	True				
ANR	219738	CallExpression	zend_string_release ( class_name )		219404	0					
ANR	219739	Callee	zend_string_release		219404	0					
ANR	219740	Identifier	zend_string_release		219404	0					
ANR	219741	ArgumentList	class_name		219404	1					
ANR	219742	Argument	class_name		219404	0					
ANR	219743	Identifier	class_name		219404	0					
ANR	219744	ExpressionStatement	j ++	1318:5:49133:49136	219404	5	True				
ANR	219745	PostIncDecOperationExpression	j ++		219404	0					
ANR	219746	Identifier	j		219404	0					
ANR	219747	IncDec	++		219404	1					
ANR	219748	ExpressionStatement	i ++	1321:3:49152:49155	219404	1	True				
ANR	219749	PostIncDecOperationExpression	i ++		219404	0					
ANR	219750	Identifier	i		219404	0					
ANR	219751	IncDec	++		219404	1					
ANR	219752	ExpressionStatement	ce -> trait_precedences = precedences	1323:2:49163:49198	219404	4	True				
ANR	219753	AssignmentExpression	ce -> trait_precedences = precedences		219404	0		=			
ANR	219754	PtrMemberAccess	ce -> trait_precedences		219404	0					
ANR	219755	Identifier	ce		219404	0					
ANR	219756	Identifier	trait_precedences		219404	1					
ANR	219757	Identifier	precedences		219404	1					
ANR	219758	IfStatement	if ( ce -> trait_aliases )		219404	7					
ANR	219759	Condition	ce -> trait_aliases	1326:5:49209:49225	219404	0	True				
ANR	219760	PtrMemberAccess	ce -> trait_aliases		219404	0					
ANR	219761	Identifier	ce		219404	0					
ANR	219762	Identifier	trait_aliases		219404	1					
ANR	219763	CompoundStatement		71:24:2831:2831	219404	1					
ANR	219764	ExpressionStatement	i = 0	1327:2:49232:49237	219404	0	True				
ANR	219765	AssignmentExpression	i = 0		219404	0		=			
ANR	219766	Identifier	i		219404	0					
ANR	219767	PrimaryExpression	0		219404	1					
ANR	219768	WhileStatement	while ( ce -> trait_aliases [ i ] )		219404	1					
ANR	219769	Condition	ce -> trait_aliases [ i ]	1328:9:49248:49267	219404	0	True				
ANR	219770	ArrayIndexing	ce -> trait_aliases [ i ]		219404	0					
ANR	219771	PtrMemberAccess	ce -> trait_aliases		219404	0					
ANR	219772	Identifier	ce		219404	0					
ANR	219773	Identifier	trait_aliases		219404	1					
ANR	219774	Identifier	i		219404	1					
ANR	219775	CompoundStatement		73:31:2873:2873	219404	1					
ANR	219776	IfStatement	if ( ce -> trait_aliases [ i ] -> trait_method -> class_name )		219404	0					
ANR	219777	Condition	ce -> trait_aliases [ i ] -> trait_method -> class_name	1330:7:49357:49402	219404	0	True				
ANR	219778	PtrMemberAccess	ce -> trait_aliases [ i ] -> trait_method -> class_name		219404	0					
ANR	219779	PtrMemberAccess	ce -> trait_aliases [ i ] -> trait_method		219404	0					
ANR	219780	ArrayIndexing	ce -> trait_aliases [ i ]		219404	0					
ANR	219781	PtrMemberAccess	ce -> trait_aliases		219404	0					
ANR	219782	Identifier	ce		219404	0					
ANR	219783	Identifier	trait_aliases		219404	1					
ANR	219784	Identifier	i		219404	1					
ANR	219785	Identifier	trait_method		219404	1					
ANR	219786	Identifier	class_name		219404	1					
ANR	219787	CompoundStatement		75:55:3008:3008	219404	1					
ANR	219788	ExpressionStatement	cur_method_ref = ce -> trait_aliases [ i ] -> trait_method	1331:4:49411:49462	219404	0	True				
ANR	219789	AssignmentExpression	cur_method_ref = ce -> trait_aliases [ i ] -> trait_method		219404	0		=			
ANR	219790	Identifier	cur_method_ref		219404	0					
ANR	219791	PtrMemberAccess	ce -> trait_aliases [ i ] -> trait_method		219404	1					
ANR	219792	ArrayIndexing	ce -> trait_aliases [ i ]		219404	0					
ANR	219793	PtrMemberAccess	ce -> trait_aliases		219404	0					
ANR	219794	Identifier	ce		219404	0					
ANR	219795	Identifier	trait_aliases		219404	1					
ANR	219796	Identifier	i		219404	1					
ANR	219797	Identifier	trait_method		219404	1					
ANR	219798	IfStatement	"if ( ! ( cur_method_ref -> ce = zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD ) ) )"		219404	1					
ANR	219799	Condition	"! ( cur_method_ref -> ce = zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD ) )"	1332:8:49472:49592	219404	0	True				
ANR	219800	UnaryOperationExpression	"! ( cur_method_ref -> ce = zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD ) )"		219404	0					
ANR	219801	UnaryOperator	!		219404	0					
ANR	219802	AssignmentExpression	"cur_method_ref -> ce = zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD )"		219404	1		=			
ANR	219803	PtrMemberAccess	cur_method_ref -> ce		219404	0					
ANR	219804	Identifier	cur_method_ref		219404	0					
ANR	219805	Identifier	ce		219404	1					
ANR	219806	CallExpression	"zend_fetch_class ( cur_method_ref -> class_name , ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD )"		219404	1					
ANR	219807	Callee	zend_fetch_class		219404	0					
ANR	219808	Identifier	zend_fetch_class		219404	0					
ANR	219809	ArgumentList	cur_method_ref -> class_name		219404	1					
ANR	219810	Argument	cur_method_ref -> class_name		219404	0					
ANR	219811	PtrMemberAccess	cur_method_ref -> class_name		219404	0					
ANR	219812	Identifier	cur_method_ref		219404	0					
ANR	219813	Identifier	class_name		219404	1					
ANR	219814	Argument	ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD		219404	1					
ANR	219815	InclusiveOrExpression	ZEND_FETCH_CLASS_TRAIT | ZEND_FETCH_CLASS_NO_AUTOLOAD		219404	0		|			
ANR	219816	Identifier	ZEND_FETCH_CLASS_TRAIT		219404	0					
ANR	219817	Identifier	ZEND_FETCH_CLASS_NO_AUTOLOAD		219404	1					
ANR	219818	CompoundStatement		77:131:3198:3198	219404	1					
ANR	219819	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Could not find trait %s"" , ZSTR_VAL ( cur_method_ref -> class_name ) )"	1333:5:49602:49703	219404	0	True				
ANR	219820	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Could not find trait %s"" , ZSTR_VAL ( cur_method_ref -> class_name ) )"		219404	0					
ANR	219821	Callee	zend_error_noreturn		219404	0					
ANR	219822	Identifier	zend_error_noreturn		219404	0					
ANR	219823	ArgumentList	E_COMPILE_ERROR		219404	1					
ANR	219824	Argument	E_COMPILE_ERROR		219404	0					
ANR	219825	Identifier	E_COMPILE_ERROR		219404	0					
ANR	219826	Argument	"""Could not find trait %s"""		219404	1					
ANR	219827	PrimaryExpression	"""Could not find trait %s"""		219404	0					
ANR	219828	Argument	ZSTR_VAL ( cur_method_ref -> class_name )		219404	2					
ANR	219829	CallExpression	ZSTR_VAL ( cur_method_ref -> class_name )		219404	0					
ANR	219830	Callee	ZSTR_VAL		219404	0					
ANR	219831	Identifier	ZSTR_VAL		219404	0					
ANR	219832	ArgumentList	cur_method_ref -> class_name		219404	1					
ANR	219833	Argument	cur_method_ref -> class_name		219404	0					
ANR	219834	PtrMemberAccess	cur_method_ref -> class_name		219404	0					
ANR	219835	Identifier	cur_method_ref		219404	0					
ANR	219836	Identifier	class_name		219404	1					
ANR	219837	ExpressionStatement	"zend_check_trait_usage ( ce , cur_method_ref -> ce )"	1335:4:49715:49761	219404	2	True				
ANR	219838	CallExpression	"zend_check_trait_usage ( ce , cur_method_ref -> ce )"		219404	0					
ANR	219839	Callee	zend_check_trait_usage		219404	0					
ANR	219840	Identifier	zend_check_trait_usage		219404	0					
ANR	219841	ArgumentList	ce		219404	1					
ANR	219842	Argument	ce		219404	0					
ANR	219843	Identifier	ce		219404	0					
ANR	219844	Argument	cur_method_ref -> ce		219404	1					
ANR	219845	PtrMemberAccess	cur_method_ref -> ce		219404	0					
ANR	219846	Identifier	cur_method_ref		219404	0					
ANR	219847	Identifier	ce		219404	1					
ANR	219848	ExpressionStatement	lcname = zend_string_tolower ( cur_method_ref -> method_name )	1338:4:49838:49895	219404	3	True				
ANR	219849	AssignmentExpression	lcname = zend_string_tolower ( cur_method_ref -> method_name )		219404	0		=			
ANR	219850	Identifier	lcname		219404	0					
ANR	219851	CallExpression	zend_string_tolower ( cur_method_ref -> method_name )		219404	1					
ANR	219852	Callee	zend_string_tolower		219404	0					
ANR	219853	Identifier	zend_string_tolower		219404	0					
ANR	219854	ArgumentList	cur_method_ref -> method_name		219404	1					
ANR	219855	Argument	cur_method_ref -> method_name		219404	0					
ANR	219856	PtrMemberAccess	cur_method_ref -> method_name		219404	0					
ANR	219857	Identifier	cur_method_ref		219404	0					
ANR	219858	Identifier	method_name		219404	1					
ANR	219859	ExpressionStatement	"method_exists = zend_hash_exists ( & cur_method_ref -> ce -> function_table , lcname )"	1339:4:49901:49984	219404	4	True				
ANR	219860	AssignmentExpression	"method_exists = zend_hash_exists ( & cur_method_ref -> ce -> function_table , lcname )"		219404	0		=			
ANR	219861	Identifier	method_exists		219404	0					
ANR	219862	CallExpression	"zend_hash_exists ( & cur_method_ref -> ce -> function_table , lcname )"		219404	1					
ANR	219863	Callee	zend_hash_exists		219404	0					
ANR	219864	Identifier	zend_hash_exists		219404	0					
ANR	219865	ArgumentList	& cur_method_ref -> ce -> function_table		219404	1					
ANR	219866	Argument	& cur_method_ref -> ce -> function_table		219404	0					
ANR	219867	UnaryOperationExpression	& cur_method_ref -> ce -> function_table		219404	0					
ANR	219868	UnaryOperator	&		219404	0					
ANR	219869	PtrMemberAccess	cur_method_ref -> ce -> function_table		219404	1					
ANR	219870	PtrMemberAccess	cur_method_ref -> ce		219404	0					
ANR	219871	Identifier	cur_method_ref		219404	0					
ANR	219872	Identifier	ce		219404	1					
ANR	219873	Identifier	function_table		219404	1					
ANR	219874	Argument	lcname		219404	1					
ANR	219875	Identifier	lcname		219404	0					
ANR	219876	ExpressionStatement	zend_string_release ( lcname )	1341:4:49990:50017	219404	5	True				
ANR	219877	CallExpression	zend_string_release ( lcname )		219404	0					
ANR	219878	Callee	zend_string_release		219404	0					
ANR	219879	Identifier	zend_string_release		219404	0					
ANR	219880	ArgumentList	lcname		219404	1					
ANR	219881	Argument	lcname		219404	0					
ANR	219882	Identifier	lcname		219404	0					
ANR	219883	IfStatement	if ( ! method_exists )		219404	6					
ANR	219884	Condition	! method_exists	1343:8:50028:50041	219404	0	True				
ANR	219885	UnaryOperationExpression	! method_exists		219404	0					
ANR	219886	UnaryOperator	!		219404	0					
ANR	219887	Identifier	method_exists		219404	1					
ANR	219888	CompoundStatement		88:24:3647:3647	219404	1					
ANR	219889	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""An alias was defined for %s::%s but this method does not exist"" , ZSTR_VAL ( cur_method_ref -> ce -> name ) , ZSTR_VAL ( cur_method_ref -> method_name ) )"	1344:5:50051:50228	219404	0	True				
ANR	219890	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""An alias was defined for %s::%s but this method does not exist"" , ZSTR_VAL ( cur_method_ref -> ce -> name ) , ZSTR_VAL ( cur_method_ref -> method_name ) )"		219404	0					
ANR	219891	Callee	zend_error_noreturn		219404	0					
ANR	219892	Identifier	zend_error_noreturn		219404	0					
ANR	219893	ArgumentList	E_COMPILE_ERROR		219404	1					
ANR	219894	Argument	E_COMPILE_ERROR		219404	0					
ANR	219895	Identifier	E_COMPILE_ERROR		219404	0					
ANR	219896	Argument	"""An alias was defined for %s::%s but this method does not exist"""		219404	1					
ANR	219897	PrimaryExpression	"""An alias was defined for %s::%s but this method does not exist"""		219404	0					
ANR	219898	Argument	ZSTR_VAL ( cur_method_ref -> ce -> name )		219404	2					
ANR	219899	CallExpression	ZSTR_VAL ( cur_method_ref -> ce -> name )		219404	0					
ANR	219900	Callee	ZSTR_VAL		219404	0					
ANR	219901	Identifier	ZSTR_VAL		219404	0					
ANR	219902	ArgumentList	cur_method_ref -> ce -> name		219404	1					
ANR	219903	Argument	cur_method_ref -> ce -> name		219404	0					
ANR	219904	PtrMemberAccess	cur_method_ref -> ce -> name		219404	0					
ANR	219905	PtrMemberAccess	cur_method_ref -> ce		219404	0					
ANR	219906	Identifier	cur_method_ref		219404	0					
ANR	219907	Identifier	ce		219404	1					
ANR	219908	Identifier	name		219404	1					
ANR	219909	Argument	ZSTR_VAL ( cur_method_ref -> method_name )		219404	3					
ANR	219910	CallExpression	ZSTR_VAL ( cur_method_ref -> method_name )		219404	0					
ANR	219911	Callee	ZSTR_VAL		219404	0					
ANR	219912	Identifier	ZSTR_VAL		219404	0					
ANR	219913	ArgumentList	cur_method_ref -> method_name		219404	1					
ANR	219914	Argument	cur_method_ref -> method_name		219404	0					
ANR	219915	PtrMemberAccess	cur_method_ref -> method_name		219404	0					
ANR	219916	Identifier	cur_method_ref		219404	0					
ANR	219917	Identifier	method_name		219404	1					
ANR	219918	ExpressionStatement	i ++	1347:3:50244:50247	219404	1	True				
ANR	219919	PostIncDecOperationExpression	i ++		219404	0					
ANR	219920	Identifier	i		219404	0					
ANR	219921	IncDec	++		219404	1					
ANR	219922	ReturnType	static void		219404	1					
ANR	219923	Identifier	zend_traits_init_trait_structures		219404	2					
ANR	219924	ParameterList	zend_class_entry * ce		219404	3					
ANR	219925	Parameter	zend_class_entry * ce	1255:46:46364:46383	219404	0	True				
ANR	219926	ParameterType	zend_class_entry *		219404	0					
ANR	219927	Identifier	ce		219404	1					
ANR	219928	CFGEntryNode	ENTRY		219404		True				
ANR	219929	CFGExitNode	EXIT		219404		True				
ANR	219930	Symbol	E_COMPILE_ERROR		219404						
ANR	219931	Symbol	cur_precedence -> exclude_from_classes [ j ] . ce		219404						
ANR	219932	Symbol	zend_hash_exists		219404						
ANR	219933	Symbol	* ce		219404						
ANR	219934	Symbol	zend_string_tolower		219404						
ANR	219935	Symbol	ZEND_FETCH_CLASS_TRAIT		219404						
ANR	219936	Symbol	cur_method_ref -> ce		219404						
ANR	219937	Symbol	* * cur_method_ref		219404						
ANR	219938	Symbol	cur_method_ref		219404						
ANR	219939	Symbol	* * ce -> trait_aliases		219404						
ANR	219940	Symbol	* cur_precedence		219404						
ANR	219941	Symbol	* cur_method_ref -> ce		219404						
ANR	219942	Symbol	cur_method_ref -> class_name		219404						
ANR	219943	Symbol	* * i		219404						
ANR	219944	Symbol	NULL		219404						
ANR	219945	Symbol	* cur_method_ref		219404						
ANR	219946	Symbol	cur_precedence -> trait_method -> ce		219404						
ANR	219947	Symbol	* cur_precedence -> exclude_from_classes		219404						
ANR	219948	Symbol	ce -> trait_precedences		219404						
ANR	219949	Symbol	cur_method_ref -> ce -> name		219404						
ANR	219950	Symbol	ce -> trait_aliases [ i ] -> trait_method		219404						
ANR	219951	Symbol	* ce -> trait_aliases [ i ] -> trait_method		219404						
ANR	219952	Symbol	* * * i		219404						
ANR	219953	Symbol	precedences		219404						
ANR	219954	Symbol	cur_precedence -> trait_method		219404						
ANR	219955	Symbol	& cur_method_ref -> ce -> function_table		219404						
ANR	219956	Symbol	* * * ce		219404						
ANR	219957	Symbol	ce -> trait_aliases [ i ] -> trait_method -> class_name		219404						
ANR	219958	Symbol	ZEND_FETCH_CLASS_NO_AUTOLOAD		219404						
ANR	219959	Symbol	cur_precedence		219404						
ANR	219960	Symbol	* * ce		219404						
ANR	219961	Symbol	cur_method_ref -> method_name		219404						
ANR	219962	Symbol	class_name		219404						
ANR	219963	Symbol	zend_fetch_class		219404						
ANR	219964	Symbol	cur_precedence -> exclude_from_classes [ j ] . class_name		219404						
ANR	219965	Symbol	ce		219404						
ANR	219966	Symbol	ce -> trait_aliases		219404						
ANR	219967	Symbol	i		219404						
ANR	219968	Symbol	j		219404						
ANR	219969	Symbol	cur_precedence -> exclude_from_classes		219404						
ANR	219970	Symbol	ZSTR_VAL		219404						
ANR	219971	Symbol	* * * * ce		219404						
ANR	219972	Symbol	* * * ce -> trait_aliases		219404						
ANR	219973	Symbol	lcname		219404						
ANR	219974	Symbol	* i		219404						
ANR	219975	Symbol	method_exists		219404						
ANR	219976	Symbol	* precedences		219404						
ANR	219977	Symbol	* j		219404						
ANR	219978	Symbol	* ce -> trait_aliases		219404						
ANR	219979	Symbol	* * cur_precedence		219404						
ANR	219980	Symbol	* cur_precedence -> trait_method		219404						
ANR	219981	Function	zend_traits_compile_exclude_table	1353:0:50269:51175							
ANR	219982	FunctionDef	"zend_traits_compile_exclude_table (HashTable * exclude_table , zend_trait_precedence * * precedences , zend_class_entry * trait)"		219981	0					
ANR	219983	CompoundStatement		1354:0:50413:51175	219981	0					
ANR	219984	IdentifierDeclStatement	"size_t i = 0 , j ;"	1355:1:50416:50431	219981	0	True				
ANR	219985	IdentifierDecl	i = 0		219981	0					
ANR	219986	IdentifierDeclType	size_t		219981	0					
ANR	219987	Identifier	i		219981	1					
ANR	219988	AssignmentExpression	i = 0		219981	2		=			
ANR	219989	Identifier	i		219981	0					
ANR	219990	PrimaryExpression	0		219981	1					
ANR	219991	IdentifierDecl	j		219981	1					
ANR	219992	IdentifierDeclType	size_t		219981	0					
ANR	219993	Identifier	j		219981	1					
ANR	219994	IfStatement	if ( ! precedences )		219981	1					
ANR	219995	Condition	! precedences	1357:5:50439:50450	219981	0	True				
ANR	219996	UnaryOperationExpression	! precedences		219981	0					
ANR	219997	UnaryOperator	!		219981	0					
ANR	219998	Identifier	precedences		219981	1					
ANR	219999	CompoundStatement		4:19:39:39	219981	1					
ANR	220000	ReturnStatement	return ;	1358:2:50457:50463	219981	0	True				
ANR	220001	WhileStatement	while ( precedences [ i ] )		219981	2					
ANR	220002	Condition	precedences [ i ]	1360:8:50476:50489	219981	0	True				
ANR	220003	ArrayIndexing	precedences [ i ]		219981	0					
ANR	220004	Identifier	precedences		219981	0					
ANR	220005	Identifier	i		219981	1					
ANR	220006	CompoundStatement		7:24:78:78	219981	1					
ANR	220007	IfStatement	if ( precedences [ i ] -> exclude_from_classes )		219981	0					
ANR	220008	Condition	precedences [ i ] -> exclude_from_classes	1361:6:50500:50535	219981	0	True				
ANR	220009	PtrMemberAccess	precedences [ i ] -> exclude_from_classes		219981	0					
ANR	220010	ArrayIndexing	precedences [ i ]		219981	0					
ANR	220011	Identifier	precedences		219981	0					
ANR	220012	Identifier	i		219981	1					
ANR	220013	Identifier	exclude_from_classes		219981	1					
ANR	220014	CompoundStatement		8:44:124:124	219981	1					
ANR	220015	ExpressionStatement	j = 0	1362:3:50543:50548	219981	0	True				
ANR	220016	AssignmentExpression	j = 0		219981	0		=			
ANR	220017	Identifier	j		219981	0					
ANR	220018	PrimaryExpression	0		219981	1					
ANR	220019	WhileStatement	while ( precedences [ i ] -> exclude_from_classes [ j ] . ce )		219981	1					
ANR	220020	Condition	precedences [ i ] -> exclude_from_classes [ j ] . ce	1363:10:50560:50601	219981	0	True				
ANR	220021	MemberAccess	precedences [ i ] -> exclude_from_classes [ j ] . ce		219981	0					
ANR	220022	ArrayIndexing	precedences [ i ] -> exclude_from_classes [ j ]		219981	0					
ANR	220023	PtrMemberAccess	precedences [ i ] -> exclude_from_classes		219981	0					
ANR	220024	ArrayIndexing	precedences [ i ]		219981	0					
ANR	220025	Identifier	precedences		219981	0					
ANR	220026	Identifier	i		219981	1					
ANR	220027	Identifier	exclude_from_classes		219981	1					
ANR	220028	Identifier	j		219981	1					
ANR	220029	Identifier	ce		219981	1					
ANR	220030	CompoundStatement		10:54:190:190	219981	1					
ANR	220031	IfStatement	if ( precedences [ i ] -> exclude_from_classes [ j ] . ce == trait )		219981	0					
ANR	220032	Condition	precedences [ i ] -> exclude_from_classes [ j ] . ce == trait	1364:8:50614:50664	219981	0	True				
ANR	220033	EqualityExpression	precedences [ i ] -> exclude_from_classes [ j ] . ce == trait		219981	0		==			
ANR	220034	MemberAccess	precedences [ i ] -> exclude_from_classes [ j ] . ce		219981	0					
ANR	220035	ArrayIndexing	precedences [ i ] -> exclude_from_classes [ j ]		219981	0					
ANR	220036	PtrMemberAccess	precedences [ i ] -> exclude_from_classes		219981	0					
ANR	220037	ArrayIndexing	precedences [ i ]		219981	0					
ANR	220038	Identifier	precedences		219981	0					
ANR	220039	Identifier	i		219981	1					
ANR	220040	Identifier	exclude_from_classes		219981	1					
ANR	220041	Identifier	j		219981	1					
ANR	220042	Identifier	ce		219981	1					
ANR	220043	Identifier	trait		219981	1					
ANR	220044	CompoundStatement		12:5:260:350	219981	1					
ANR	220045	IdentifierDeclStatement	zend_string * lcname = zend_string_tolower ( precedences [ i ] -> trait_method -> method_name ) ;	1365:5:50674:50764	219981	0	True				
ANR	220046	IdentifierDecl	* lcname = zend_string_tolower ( precedences [ i ] -> trait_method -> method_name )		219981	0					
ANR	220047	IdentifierDeclType	zend_string *		219981	0					
ANR	220048	Identifier	lcname		219981	1					
ANR	220049	AssignmentExpression	* lcname = zend_string_tolower ( precedences [ i ] -> trait_method -> method_name )		219981	2		=			
ANR	220050	Identifier	lcname		219981	0					
ANR	220051	CallExpression	zend_string_tolower ( precedences [ i ] -> trait_method -> method_name )		219981	1					
ANR	220052	Callee	zend_string_tolower		219981	0					
ANR	220053	Identifier	zend_string_tolower		219981	0					
ANR	220054	ArgumentList	precedences [ i ] -> trait_method -> method_name		219981	1					
ANR	220055	Argument	precedences [ i ] -> trait_method -> method_name		219981	0					
ANR	220056	PtrMemberAccess	precedences [ i ] -> trait_method -> method_name		219981	0					
ANR	220057	PtrMemberAccess	precedences [ i ] -> trait_method		219981	0					
ANR	220058	ArrayIndexing	precedences [ i ]		219981	0					
ANR	220059	Identifier	precedences		219981	0					
ANR	220060	Identifier	i		219981	1					
ANR	220061	Identifier	trait_method		219981	1					
ANR	220062	Identifier	method_name		219981	1					
ANR	220063	IfStatement	"if ( zend_hash_add_empty_element ( exclude_table , lcname ) == NULL )"		219981	1					
ANR	220064	Condition	"zend_hash_add_empty_element ( exclude_table , lcname ) == NULL"	1367:9:50775:50832	219981	0	True				
ANR	220065	EqualityExpression	"zend_hash_add_empty_element ( exclude_table , lcname ) == NULL"		219981	0		==			
ANR	220066	CallExpression	"zend_hash_add_empty_element ( exclude_table , lcname )"		219981	0					
ANR	220067	Callee	zend_hash_add_empty_element		219981	0					
ANR	220068	Identifier	zend_hash_add_empty_element		219981	0					
ANR	220069	ArgumentList	exclude_table		219981	1					
ANR	220070	Argument	exclude_table		219981	0					
ANR	220071	Identifier	exclude_table		219981	0					
ANR	220072	Argument	lcname		219981	1					
ANR	220073	Identifier	lcname		219981	0					
ANR	220074	Identifier	NULL		219981	1					
ANR	220075	CompoundStatement		14:69:421:421	219981	1					
ANR	220076	ExpressionStatement	zend_string_release ( lcname )	1368:6:50843:50870	219981	0	True				
ANR	220077	CallExpression	zend_string_release ( lcname )		219981	0					
ANR	220078	Callee	zend_string_release		219981	0					
ANR	220079	Identifier	zend_string_release		219981	0					
ANR	220080	ArgumentList	lcname		219981	1					
ANR	220081	Argument	lcname		219981	0					
ANR	220082	Identifier	lcname		219981	0					
ANR	220083	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""Failed to evaluate a trait precedence (%s). Method of trait %s was defined to be excluded multiple times"" , ZSTR_VAL ( precedences [ i ] -> trait_method -> method_name ) , ZSTR_VAL ( trait -> name ) )"	1369:6:50878:51098	219981	1	True				
ANR	220084	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""Failed to evaluate a trait precedence (%s). Method of trait %s was defined to be excluded multiple times"" , ZSTR_VAL ( precedences [ i ] -> trait_method -> method_name ) , ZSTR_VAL ( trait -> name ) )"		219981	0					
ANR	220085	Callee	zend_error_noreturn		219981	0					
ANR	220086	Identifier	zend_error_noreturn		219981	0					
ANR	220087	ArgumentList	E_COMPILE_ERROR		219981	1					
ANR	220088	Argument	E_COMPILE_ERROR		219981	0					
ANR	220089	Identifier	E_COMPILE_ERROR		219981	0					
ANR	220090	Argument	"""Failed to evaluate a trait precedence (%s). Method of trait %s was defined to be excluded multiple times"""		219981	1					
ANR	220091	PrimaryExpression	"""Failed to evaluate a trait precedence (%s). Method of trait %s was defined to be excluded multiple times"""		219981	0					
ANR	220092	Argument	ZSTR_VAL ( precedences [ i ] -> trait_method -> method_name )		219981	2					
ANR	220093	CallExpression	ZSTR_VAL ( precedences [ i ] -> trait_method -> method_name )		219981	0					
ANR	220094	Callee	ZSTR_VAL		219981	0					
ANR	220095	Identifier	ZSTR_VAL		219981	0					
ANR	220096	ArgumentList	precedences [ i ] -> trait_method -> method_name		219981	1					
ANR	220097	Argument	precedences [ i ] -> trait_method -> method_name		219981	0					
ANR	220098	PtrMemberAccess	precedences [ i ] -> trait_method -> method_name		219981	0					
ANR	220099	PtrMemberAccess	precedences [ i ] -> trait_method		219981	0					
ANR	220100	ArrayIndexing	precedences [ i ]		219981	0					
ANR	220101	Identifier	precedences		219981	0					
ANR	220102	Identifier	i		219981	1					
ANR	220103	Identifier	trait_method		219981	1					
ANR	220104	Identifier	method_name		219981	1					
ANR	220105	Argument	ZSTR_VAL ( trait -> name )		219981	3					
ANR	220106	CallExpression	ZSTR_VAL ( trait -> name )		219981	0					
ANR	220107	Callee	ZSTR_VAL		219981	0					
ANR	220108	Identifier	ZSTR_VAL		219981	0					
ANR	220109	ArgumentList	trait -> name		219981	1					
ANR	220110	Argument	trait -> name		219981	0					
ANR	220111	PtrMemberAccess	trait -> name		219981	0					
ANR	220112	Identifier	trait		219981	0					
ANR	220113	Identifier	name		219981	1					
ANR	220114	ExpressionStatement	zend_string_release ( lcname )	1371:5:51112:51139	219981	2	True				
ANR	220115	CallExpression	zend_string_release ( lcname )		219981	0					
ANR	220116	Callee	zend_string_release		219981	0					
ANR	220117	Identifier	zend_string_release		219981	0					
ANR	220118	ArgumentList	lcname		219981	1					
ANR	220119	Argument	lcname		219981	0					
ANR	220120	Identifier	lcname		219981	0					
ANR	220121	ExpressionStatement	++ j	1373:4:51151:51154	219981	1	True				
ANR	220122	UnaryExpression	++ j		219981	0					
ANR	220123	IncDec	++		219981	0					
ANR	220124	Identifier	j		219981	1					
ANR	220125	ExpressionStatement	++ i	1376:2:51167:51170	219981	1	True				
ANR	220126	UnaryExpression	++ i		219981	0					
ANR	220127	IncDec	++		219981	0					
ANR	220128	Identifier	i		219981	1					
ANR	220129	ReturnType	static void		219981	1					
ANR	220130	Identifier	zend_traits_compile_exclude_table		219981	2					
ANR	220131	ParameterList	"HashTable * exclude_table , zend_trait_precedence * * precedences , zend_class_entry * trait"		219981	3					
ANR	220132	Parameter	HashTable * exclude_table	1353:46:50315:50338	219981	0	True				
ANR	220133	ParameterType	HashTable *		219981	0					
ANR	220134	Identifier	exclude_table		219981	1					
ANR	220135	Parameter	zend_trait_precedence * * precedences	1353:72:50341:50375	219981	1	True				
ANR	220136	ParameterType	zend_trait_precedence * *		219981	0					
ANR	220137	Identifier	precedences		219981	1					
ANR	220138	Parameter	zend_class_entry * trait	1353:109:50378:50400	219981	2	True				
ANR	220139	ParameterType	zend_class_entry *		219981	0					
ANR	220140	Identifier	trait		219981	1					
ANR	220141	CFGEntryNode	ENTRY		219981		True				
ANR	220142	CFGExitNode	EXIT		219981		True				
ANR	220143	Symbol	* * precedences		219981						
ANR	220144	Symbol	precedences [ i ] -> exclude_from_classes		219981						
ANR	220145	Symbol	E_COMPILE_ERROR		219981						
ANR	220146	Symbol	exclude_table		219981						
ANR	220147	Symbol	zend_string_tolower		219981						
ANR	220148	Symbol	zend_hash_add_empty_element		219981						
ANR	220149	Symbol	precedences [ i ] -> trait_method		219981						
ANR	220150	Symbol	trait		219981						
ANR	220151	Symbol	* * * precedences		219981						
ANR	220152	Symbol	* trait		219981						
ANR	220153	Symbol	* * i		219981						
ANR	220154	Symbol	NULL		219981						
ANR	220155	Symbol	i		219981						
ANR	220156	Symbol	j		219981						
ANR	220157	Symbol	trait -> name		219981						
ANR	220158	Symbol	precedences [ i ] -> trait_method -> method_name		219981						
ANR	220159	Symbol	ZSTR_VAL		219981						
ANR	220160	Symbol	* precedences [ i ] -> trait_method		219981						
ANR	220161	Symbol	* i		219981						
ANR	220162	Symbol	lcname		219981						
ANR	220163	Symbol	* precedences		219981						
ANR	220164	Symbol	* j		219981						
ANR	220165	Symbol	precedences [ i ] -> exclude_from_classes [ j ] . ce		219981						
ANR	220166	Symbol	* precedences [ i ] -> exclude_from_classes		219981						
ANR	220167	Symbol	* * * i		219981						
ANR	220168	Symbol	precedences		219981						
ANR	220169	Function	zend_do_traits_method_binding	1381:0:51188:52767							
ANR	220170	FunctionDef	zend_do_traits_method_binding (zend_class_entry * ce)		220169	0					
ANR	220171	CompoundStatement		1382:0:51262:52767	220169	0					
ANR	220172	IdentifierDeclStatement	uint32_t i ;	1383:1:51265:51275	220169	0	True				
ANR	220173	IdentifierDecl	i		220169	0					
ANR	220174	IdentifierDeclType	uint32_t		220169	0					
ANR	220175	Identifier	i		220169	1					
ANR	220176	IdentifierDeclStatement	HashTable * overriden = NULL ;	1384:1:51278:51305	220169	1	True				
ANR	220177	IdentifierDecl	* overriden = NULL		220169	0					
ANR	220178	IdentifierDeclType	HashTable *		220169	0					
ANR	220179	Identifier	overriden		220169	1					
ANR	220180	AssignmentExpression	* overriden = NULL		220169	2		=			
ANR	220181	Identifier	NULL		220169	0					
ANR	220182	Identifier	NULL		220169	1					
ANR	220183	IdentifierDeclStatement	zend_string * key ;	1385:1:51308:51324	220169	2	True				
ANR	220184	IdentifierDecl	* key		220169	0					
ANR	220185	IdentifierDeclType	zend_string *		220169	0					
ANR	220186	Identifier	key		220169	1					
ANR	220187	IdentifierDeclStatement	zend_function * fn ;	1386:1:51327:51344	220169	3	True				
ANR	220188	IdentifierDecl	* fn		220169	0					
ANR	220189	IdentifierDeclType	zend_function *		220169	0					
ANR	220190	Identifier	fn		220169	1					
ANR	220191	ForStatement	for ( i = 0 ; i < ce -> num_traits ; i ++ )		220169	4					
ANR	220192	ForInit	i = 0 ;	1388:6:51353:51358	220169	0	True				
ANR	220193	AssignmentExpression	i = 0		220169	0		=			
ANR	220194	Identifier	i		220169	0					
ANR	220195	PrimaryExpression	0		220169	1					
ANR	220196	Condition	i < ce -> num_traits	1388:13:51360:51377	220169	1	True				
ANR	220197	RelationalExpression	i < ce -> num_traits		220169	0		<			
ANR	220198	Identifier	i		220169	0					
ANR	220199	PtrMemberAccess	ce -> num_traits		220169	1					
ANR	220200	Identifier	ce		220169	0					
ANR	220201	Identifier	num_traits		220169	1					
ANR	220202	PostIncDecOperationExpression	i ++	1388:33:51380:51382	220169	2	True				
ANR	220203	Identifier	i		220169	0					
ANR	220204	IncDec	++		220169	1					
ANR	220205	CompoundStatement		7:38:122:122	220169	3					
ANR	220206	IfStatement	if ( ce -> trait_precedences )		220169	0					
ANR	220207	Condition	ce -> trait_precedences	1389:6:51393:51413	220169	0	True				
ANR	220208	PtrMemberAccess	ce -> trait_precedences		220169	0					
ANR	220209	Identifier	ce		220169	0					
ANR	220210	Identifier	trait_precedences		220169	1					
ANR	220211	CompoundStatement		10:3:186:221	220169	1					
ANR	220212	IdentifierDeclStatement	HashTable exclude_table ;	1390:3:51421:51444	220169	0	True				
ANR	220213	IdentifierDecl	exclude_table		220169	0					
ANR	220214	IdentifierDeclType	HashTable		220169	0					
ANR	220215	Identifier	exclude_table		220169	1					
ANR	220216	IdentifierDeclStatement	zend_trait_precedence * * precedences ;	1391:3:51449:51484	220169	1	True				
ANR	220217	IdentifierDecl	* * precedences		220169	0					
ANR	220218	IdentifierDeclType	zend_trait_precedence * *		220169	0					
ANR	220219	Identifier	precedences		220169	1					
ANR	220220	ExpressionStatement	"zend_hash_init_ex ( & exclude_table , 8 , NULL , NULL , 0 , 0 )"	1394:3:51553:51607	220169	2	True				
ANR	220221	CallExpression	"zend_hash_init_ex ( & exclude_table , 8 , NULL , NULL , 0 , 0 )"		220169	0					
ANR	220222	Callee	zend_hash_init_ex		220169	0					
ANR	220223	Identifier	zend_hash_init_ex		220169	0					
ANR	220224	ArgumentList	& exclude_table		220169	1					
ANR	220225	Argument	& exclude_table		220169	0					
ANR	220226	UnaryOperationExpression	& exclude_table		220169	0					
ANR	220227	UnaryOperator	&		220169	0					
ANR	220228	Identifier	exclude_table		220169	1					
ANR	220229	Argument	8		220169	1					
ANR	220230	PrimaryExpression	8		220169	0					
ANR	220231	Argument	NULL		220169	2					
ANR	220232	Identifier	NULL		220169	0					
ANR	220233	Argument	NULL		220169	3					
ANR	220234	Identifier	NULL		220169	0					
ANR	220235	Argument	0		220169	4					
ANR	220236	PrimaryExpression	0		220169	0					
ANR	220237	Argument	0		220169	5					
ANR	220238	PrimaryExpression	0		220169	0					
ANR	220239	ExpressionStatement	precedences = ce -> trait_precedences	1396:3:51613:51648	220169	3	True				
ANR	220240	AssignmentExpression	precedences = ce -> trait_precedences		220169	0		=			
ANR	220241	Identifier	precedences		220169	0					
ANR	220242	PtrMemberAccess	ce -> trait_precedences		220169	1					
ANR	220243	Identifier	ce		220169	0					
ANR	220244	Identifier	trait_precedences		220169	1					
ANR	220245	ExpressionStatement	ce -> trait_precedences = NULL	1397:3:51653:51681	220169	4	True				
ANR	220246	AssignmentExpression	ce -> trait_precedences = NULL		220169	0		=			
ANR	220247	PtrMemberAccess	ce -> trait_precedences		220169	0					
ANR	220248	Identifier	ce		220169	0					
ANR	220249	Identifier	trait_precedences		220169	1					
ANR	220250	Identifier	NULL		220169	1					
ANR	220251	ExpressionStatement	"zend_traits_compile_exclude_table ( & exclude_table , precedences , ce -> traits [ i ] )"	1398:3:51686:51763	220169	5	True				
ANR	220252	CallExpression	"zend_traits_compile_exclude_table ( & exclude_table , precedences , ce -> traits [ i ] )"		220169	0					
ANR	220253	Callee	zend_traits_compile_exclude_table		220169	0					
ANR	220254	Identifier	zend_traits_compile_exclude_table		220169	0					
ANR	220255	ArgumentList	& exclude_table		220169	1					
ANR	220256	Argument	& exclude_table		220169	0					
ANR	220257	UnaryOperationExpression	& exclude_table		220169	0					
ANR	220258	UnaryOperator	&		220169	0					
ANR	220259	Identifier	exclude_table		220169	1					
ANR	220260	Argument	precedences		220169	1					
ANR	220261	Identifier	precedences		220169	0					
ANR	220262	Argument	ce -> traits [ i ]		220169	2					
ANR	220263	ArrayIndexing	ce -> traits [ i ]		220169	0					
ANR	220264	PtrMemberAccess	ce -> traits		220169	0					
ANR	220265	Identifier	ce		220169	0					
ANR	220266	Identifier	traits		220169	1					
ANR	220267	Identifier	i		220169	1					
ANR	220268	Statement	ZEND_HASH_FOREACH_STR_KEY_PTR	1401:3:51856:51884	220169	6	True				
ANR	220269	Statement	(	1401:32:51885:51885	220169	7	True				
ANR	220270	Statement	&	1401:33:51886:51886	220169	8	True				
ANR	220271	Statement	ce	1401:34:51887:51888	220169	9	True				
ANR	220272	Statement	->	1401:36:51889:51890	220169	10	True				
ANR	220273	Statement	traits	1401:38:51891:51896	220169	11	True				
ANR	220274	Statement	[	1401:44:51897:51897	220169	12	True				
ANR	220275	Statement	i	1401:45:51898:51898	220169	13	True				
ANR	220276	Statement	]	1401:46:51899:51899	220169	14	True				
ANR	220277	Statement	->	1401:47:51900:51901	220169	15	True				
ANR	220278	Statement	function_table	1401:49:51902:51915	220169	16	True				
ANR	220279	Statement	","	1401:63:51916:51916	220169	17	True				
ANR	220280	Statement	key	1401:65:51918:51920	220169	18	True				
ANR	220281	Statement	","	1401:68:51921:51921	220169	19	True				
ANR	220282	Statement	fn	1401:70:51923:51924	220169	20	True				
ANR	220283	Statement	)	1401:72:51925:51925	220169	21	True				
ANR	220284	CompoundStatement		20:74:664:664	220169	22					
ANR	220285	ExpressionStatement	"zend_traits_copy_functions ( key , fn , ce , & overriden , & exclude_table )"	1402:4:51933:52000	220169	0	True				
ANR	220286	CallExpression	"zend_traits_copy_functions ( key , fn , ce , & overriden , & exclude_table )"		220169	0					
ANR	220287	Callee	zend_traits_copy_functions		220169	0					
ANR	220288	Identifier	zend_traits_copy_functions		220169	0					
ANR	220289	ArgumentList	key		220169	1					
ANR	220290	Argument	key		220169	0					
ANR	220291	Identifier	key		220169	0					
ANR	220292	Argument	fn		220169	1					
ANR	220293	Identifier	fn		220169	0					
ANR	220294	Argument	ce		220169	2					
ANR	220295	Identifier	ce		220169	0					
ANR	220296	Argument	& overriden		220169	3					
ANR	220297	UnaryOperationExpression	& overriden		220169	0					
ANR	220298	UnaryOperator	&		220169	0					
ANR	220299	Identifier	overriden		220169	1					
ANR	220300	Argument	& exclude_table		220169	4					
ANR	220301	UnaryOperationExpression	& exclude_table		220169	0					
ANR	220302	UnaryOperator	&		220169	0					
ANR	220303	Identifier	exclude_table		220169	1					
ANR	220304	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1403:5:52007:52030	220169	23	True				
ANR	220305	CallExpression	ZEND_HASH_FOREACH_END ( )		220169	0					
ANR	220306	Callee	ZEND_HASH_FOREACH_END		220169	0					
ANR	220307	Identifier	ZEND_HASH_FOREACH_END		220169	0					
ANR	220308	ArgumentList			220169	1					
ANR	220309	ExpressionStatement	zend_hash_destroy ( & exclude_table )	1405:3:52036:52069	220169	24	True				
ANR	220310	CallExpression	zend_hash_destroy ( & exclude_table )		220169	0					
ANR	220311	Callee	zend_hash_destroy		220169	0					
ANR	220312	Identifier	zend_hash_destroy		220169	0					
ANR	220313	ArgumentList	& exclude_table		220169	1					
ANR	220314	Argument	& exclude_table		220169	0					
ANR	220315	UnaryOperationExpression	& exclude_table		220169	0					
ANR	220316	UnaryOperator	&		220169	0					
ANR	220317	Identifier	exclude_table		220169	1					
ANR	220318	ExpressionStatement	ce -> trait_precedences = precedences	1406:3:52074:52109	220169	25	True				
ANR	220319	AssignmentExpression	ce -> trait_precedences = precedences		220169	0		=			
ANR	220320	PtrMemberAccess	ce -> trait_precedences		220169	0					
ANR	220321	Identifier	ce		220169	0					
ANR	220322	Identifier	trait_precedences		220169	1					
ANR	220323	Identifier	precedences		220169	1					
ANR	220324	ElseStatement	else		220169	0					
ANR	220325	CompoundStatement		26:9:857:857	220169	0					
ANR	220326	Statement	ZEND_HASH_FOREACH_STR_KEY_PTR	1408:3:52125:52153	220169	0	True				
ANR	220327	Statement	(	1408:32:52154:52154	220169	1	True				
ANR	220328	Statement	&	1408:33:52155:52155	220169	2	True				
ANR	220329	Statement	ce	1408:34:52156:52157	220169	3	True				
ANR	220330	Statement	->	1408:36:52158:52159	220169	4	True				
ANR	220331	Statement	traits	1408:38:52160:52165	220169	5	True				
ANR	220332	Statement	[	1408:44:52166:52166	220169	6	True				
ANR	220333	Statement	i	1408:45:52167:52167	220169	7	True				
ANR	220334	Statement	]	1408:46:52168:52168	220169	8	True				
ANR	220335	Statement	->	1408:47:52169:52170	220169	9	True				
ANR	220336	Statement	function_table	1408:49:52171:52184	220169	10	True				
ANR	220337	Statement	","	1408:63:52185:52185	220169	11	True				
ANR	220338	Statement	key	1408:65:52187:52189	220169	12	True				
ANR	220339	Statement	","	1408:68:52190:52190	220169	13	True				
ANR	220340	Statement	fn	1408:70:52192:52193	220169	14	True				
ANR	220341	Statement	)	1408:72:52194:52194	220169	15	True				
ANR	220342	CompoundStatement		27:74:933:933	220169	16					
ANR	220343	ExpressionStatement	"zend_traits_copy_functions ( key , fn , ce , & overriden , NULL )"	1409:4:52202:52259	220169	0	True				
ANR	220344	CallExpression	"zend_traits_copy_functions ( key , fn , ce , & overriden , NULL )"		220169	0					
ANR	220345	Callee	zend_traits_copy_functions		220169	0					
ANR	220346	Identifier	zend_traits_copy_functions		220169	0					
ANR	220347	ArgumentList	key		220169	1					
ANR	220348	Argument	key		220169	0					
ANR	220349	Identifier	key		220169	0					
ANR	220350	Argument	fn		220169	1					
ANR	220351	Identifier	fn		220169	0					
ANR	220352	Argument	ce		220169	2					
ANR	220353	Identifier	ce		220169	0					
ANR	220354	Argument	& overriden		220169	3					
ANR	220355	UnaryOperationExpression	& overriden		220169	0					
ANR	220356	UnaryOperator	&		220169	0					
ANR	220357	Identifier	overriden		220169	1					
ANR	220358	Argument	NULL		220169	4					
ANR	220359	Identifier	NULL		220169	0					
ANR	220360	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1410:5:52266:52289	220169	17	True				
ANR	220361	CallExpression	ZEND_HASH_FOREACH_END ( )		220169	0					
ANR	220362	Callee	ZEND_HASH_FOREACH_END		220169	0					
ANR	220363	Identifier	ZEND_HASH_FOREACH_END		220169	0					
ANR	220364	ArgumentList			220169	1					
ANR	220365	Statement	ZEND_HASH_FOREACH_PTR	1414:1:52300:52320	220169	5	True				
ANR	220366	Statement	(	1414:22:52321:52321	220169	6	True				
ANR	220367	Statement	&	1414:23:52322:52322	220169	7	True				
ANR	220368	Statement	ce	1414:24:52323:52324	220169	8	True				
ANR	220369	Statement	->	1414:26:52325:52326	220169	9	True				
ANR	220370	Statement	function_table	1414:28:52327:52340	220169	10	True				
ANR	220371	Statement	","	1414:42:52341:52341	220169	11	True				
ANR	220372	Statement	fn	1414:44:52343:52344	220169	12	True				
ANR	220373	Statement	)	1414:46:52345:52345	220169	13	True				
ANR	220374	CompoundStatement		33:48:1084:1084	220169	14					
ANR	220375	ExpressionStatement	"zend_fixup_trait_method ( fn , ce )"	1415:2:52351:52382	220169	0	True				
ANR	220376	CallExpression	"zend_fixup_trait_method ( fn , ce )"		220169	0					
ANR	220377	Callee	zend_fixup_trait_method		220169	0					
ANR	220378	Identifier	zend_fixup_trait_method		220169	0					
ANR	220379	ArgumentList	fn		220169	1					
ANR	220380	Argument	fn		220169	0					
ANR	220381	Identifier	fn		220169	0					
ANR	220382	Argument	ce		220169	1					
ANR	220383	Identifier	ce		220169	0					
ANR	220384	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1416:3:52387:52410	220169	15	True				
ANR	220385	CallExpression	ZEND_HASH_FOREACH_END ( )		220169	0					
ANR	220386	Callee	ZEND_HASH_FOREACH_END		220169	0					
ANR	220387	Identifier	ZEND_HASH_FOREACH_END		220169	0					
ANR	220388	ArgumentList			220169	1					
ANR	220389	IfStatement	if ( ce -> trait_precedences )		220169	16					
ANR	220390	Condition	ce -> trait_precedences	1418:5:52418:52438	220169	0	True				
ANR	220391	PtrMemberAccess	ce -> trait_precedences		220169	0					
ANR	220392	Identifier	ce		220169	0					
ANR	220393	Identifier	trait_precedences		220169	1					
ANR	220394	CompoundStatement		37:28:1178:1178	220169	1					
ANR	220395	ExpressionStatement	i = 0	1419:2:52445:52450	220169	0	True				
ANR	220396	AssignmentExpression	i = 0		220169	0		=			
ANR	220397	Identifier	i		220169	0					
ANR	220398	PrimaryExpression	0		220169	1					
ANR	220399	WhileStatement	while ( ce -> trait_precedences [ i ] )		220169	1					
ANR	220400	Condition	ce -> trait_precedences [ i ]	1420:9:52461:52484	220169	0	True				
ANR	220401	ArrayIndexing	ce -> trait_precedences [ i ]		220169	0					
ANR	220402	PtrMemberAccess	ce -> trait_precedences		220169	0					
ANR	220403	Identifier	ce		220169	0					
ANR	220404	Identifier	trait_precedences		220169	1					
ANR	220405	Identifier	i		220169	1					
ANR	220406	CompoundStatement		39:35:1224:1224	220169	1					
ANR	220407	IfStatement	if ( ce -> trait_precedences [ i ] -> exclude_from_classes )		220169	0					
ANR	220408	Condition	ce -> trait_precedences [ i ] -> exclude_from_classes	1421:7:52496:52541	220169	0	True				
ANR	220409	PtrMemberAccess	ce -> trait_precedences [ i ] -> exclude_from_classes		220169	0					
ANR	220410	ArrayIndexing	ce -> trait_precedences [ i ]		220169	0					
ANR	220411	PtrMemberAccess	ce -> trait_precedences		220169	0					
ANR	220412	Identifier	ce		220169	0					
ANR	220413	Identifier	trait_precedences		220169	1					
ANR	220414	Identifier	i		220169	1					
ANR	220415	Identifier	exclude_from_classes		220169	1					
ANR	220416	CompoundStatement		40:55:1281:1281	220169	1					
ANR	220417	ExpressionStatement	efree ( ce -> trait_precedences [ i ] -> exclude_from_classes )	1422:4:52550:52603	220169	0	True				
ANR	220418	CallExpression	efree ( ce -> trait_precedences [ i ] -> exclude_from_classes )		220169	0					
ANR	220419	Callee	efree		220169	0					
ANR	220420	Identifier	efree		220169	0					
ANR	220421	ArgumentList	ce -> trait_precedences [ i ] -> exclude_from_classes		220169	1					
ANR	220422	Argument	ce -> trait_precedences [ i ] -> exclude_from_classes		220169	0					
ANR	220423	PtrMemberAccess	ce -> trait_precedences [ i ] -> exclude_from_classes		220169	0					
ANR	220424	ArrayIndexing	ce -> trait_precedences [ i ]		220169	0					
ANR	220425	PtrMemberAccess	ce -> trait_precedences		220169	0					
ANR	220426	Identifier	ce		220169	0					
ANR	220427	Identifier	trait_precedences		220169	1					
ANR	220428	Identifier	i		220169	1					
ANR	220429	Identifier	exclude_from_classes		220169	1					
ANR	220430	ExpressionStatement	ce -> trait_precedences [ i ] -> exclude_from_classes = NULL	1423:4:52609:52662	220169	1	True				
ANR	220431	AssignmentExpression	ce -> trait_precedences [ i ] -> exclude_from_classes = NULL		220169	0		=			
ANR	220432	PtrMemberAccess	ce -> trait_precedences [ i ] -> exclude_from_classes		220169	0					
ANR	220433	ArrayIndexing	ce -> trait_precedences [ i ]		220169	0					
ANR	220434	PtrMemberAccess	ce -> trait_precedences		220169	0					
ANR	220435	Identifier	ce		220169	0					
ANR	220436	Identifier	trait_precedences		220169	1					
ANR	220437	Identifier	i		220169	1					
ANR	220438	Identifier	exclude_from_classes		220169	1					
ANR	220439	Identifier	NULL		220169	1					
ANR	220440	ExpressionStatement	i ++	1425:3:52672:52675	220169	1	True				
ANR	220441	PostIncDecOperationExpression	i ++		220169	0					
ANR	220442	Identifier	i		220169	0					
ANR	220443	IncDec	++		220169	1					
ANR	220444	IfStatement	if ( overriden )		220169	17					
ANR	220445	Condition	overriden	1429:5:52690:52698	220169	0	True				
ANR	220446	Identifier	overriden		220169	0					
ANR	220447	CompoundStatement		48:16:1438:1438	220169	1					
ANR	220448	ExpressionStatement	zend_hash_destroy ( overriden )	1430:2:52705:52733	220169	0	True				
ANR	220449	CallExpression	zend_hash_destroy ( overriden )		220169	0					
ANR	220450	Callee	zend_hash_destroy		220169	0					
ANR	220451	Identifier	zend_hash_destroy		220169	0					
ANR	220452	ArgumentList	overriden		220169	1					
ANR	220453	Argument	overriden		220169	0					
ANR	220454	Identifier	overriden		220169	0					
ANR	220455	ExpressionStatement	FREE_HASHTABLE ( overriden )	1431:2:52737:52762	220169	1	True				
ANR	220456	CallExpression	FREE_HASHTABLE ( overriden )		220169	0					
ANR	220457	Callee	FREE_HASHTABLE		220169	0					
ANR	220458	Identifier	FREE_HASHTABLE		220169	0					
ANR	220459	ArgumentList	overriden		220169	1					
ANR	220460	Argument	overriden		220169	0					
ANR	220461	Identifier	overriden		220169	0					
ANR	220462	ReturnType	static void		220169	1					
ANR	220463	Identifier	zend_do_traits_method_binding		220169	2					
ANR	220464	ParameterList	zend_class_entry * ce		220169	3					
ANR	220465	Parameter	zend_class_entry * ce	1381:42:51230:51249	220169	0	True				
ANR	220466	ParameterType	zend_class_entry *		220169	0					
ANR	220467	Identifier	ce		220169	1					
ANR	220468	CFGEntryNode	ENTRY		220169		True				
ANR	220469	CFGExitNode	EXIT		220169		True				
ANR	220470	Symbol	ce		220169						
ANR	220471	Symbol	& exclude_table		220169						
ANR	220472	Symbol	* * i		220169						
ANR	220473	Symbol	NULL		220169						
ANR	220474	Symbol	* * ce -> trait_precedences		220169						
ANR	220475	Symbol	& overriden		220169						
ANR	220476	Symbol	fn		220169						
ANR	220477	Symbol	i		220169						
ANR	220478	Symbol	* ce		220169						
ANR	220479	Symbol	exclude_table		220169						
ANR	220480	Symbol	ce -> num_traits		220169						
ANR	220481	Symbol	* * ce		220169						
ANR	220482	Symbol	overriden		220169						
ANR	220483	Symbol	ce -> trait_precedences		220169						
ANR	220484	Symbol	ce -> traits		220169						
ANR	220485	Symbol	* ce -> traits		220169						
ANR	220486	Symbol	* i		220169						
ANR	220487	Symbol	ce -> trait_precedences [ i ] -> exclude_from_classes		220169						
ANR	220488	Symbol	* ce -> trait_precedences		220169						
ANR	220489	Symbol	precedences		220169						
ANR	220490	Symbol	key		220169						
ANR	220491	Symbol	* * * ce		220169						
ANR	220492	Function	find_first_definition	1436:0:52780:53147							
ANR	220493	FunctionDef	"find_first_definition (zend_class_entry * ce , size_t current_trait , zend_string * prop_name , zend_class_entry * coliding_ce)"		220492	0					
ANR	220494	CompoundStatement		1437:0:52936:53147	220492	0					
ANR	220495	IdentifierDeclStatement	size_t i ;	1438:1:52939:52947	220492	0	True				
ANR	220496	IdentifierDecl	i		220492	0					
ANR	220497	IdentifierDeclType	size_t		220492	0					
ANR	220498	Identifier	i		220492	1					
ANR	220499	IfStatement	if ( coliding_ce == ce )		220492	1					
ANR	220500	Condition	coliding_ce == ce	1440:5:52955:52971	220492	0	True				
ANR	220501	EqualityExpression	coliding_ce == ce		220492	0		==			
ANR	220502	Identifier	coliding_ce		220492	0					
ANR	220503	Identifier	ce		220492	1					
ANR	220504	CompoundStatement		4:24:37:37	220492	1					
ANR	220505	ForStatement	for ( i = 0 ; i < current_trait ; i ++ )		220492	0					
ANR	220506	ForInit	i = 0 ;	1441:7:52983:52988	220492	0	True				
ANR	220507	AssignmentExpression	i = 0		220492	0		=			
ANR	220508	Identifier	i		220492	0					
ANR	220509	PrimaryExpression	0		220492	1					
ANR	220510	Condition	i < current_trait	1441:14:52990:53006	220492	1	True				
ANR	220511	RelationalExpression	i < current_trait		220492	0		<			
ANR	220512	Identifier	i		220492	0					
ANR	220513	Identifier	current_trait		220492	1					
ANR	220514	PostIncDecOperationExpression	i ++	1441:33:53009:53011	220492	2	True				
ANR	220515	Identifier	i		220492	0					
ANR	220516	IncDec	++		220492	1					
ANR	220517	CompoundStatement		5:38:77:77	220492	3					
ANR	220518	IfStatement	"if ( zend_hash_exists ( & ce -> traits [ i ] -> properties_info , prop_name ) )"		220492	0					
ANR	220519	Condition	"zend_hash_exists ( & ce -> traits [ i ] -> properties_info , prop_name )"	1442:7:53023:53082	220492	0	True				
ANR	220520	CallExpression	"zend_hash_exists ( & ce -> traits [ i ] -> properties_info , prop_name )"		220492	0					
ANR	220521	Callee	zend_hash_exists		220492	0					
ANR	220522	Identifier	zend_hash_exists		220492	0					
ANR	220523	ArgumentList	& ce -> traits [ i ] -> properties_info		220492	1					
ANR	220524	Argument	& ce -> traits [ i ] -> properties_info		220492	0					
ANR	220525	UnaryOperationExpression	& ce -> traits [ i ] -> properties_info		220492	0					
ANR	220526	UnaryOperator	&		220492	0					
ANR	220527	PtrMemberAccess	ce -> traits [ i ] -> properties_info		220492	1					
ANR	220528	ArrayIndexing	ce -> traits [ i ]		220492	0					
ANR	220529	PtrMemberAccess	ce -> traits		220492	0					
ANR	220530	Identifier	ce		220492	0					
ANR	220531	Identifier	traits		220492	1					
ANR	220532	Identifier	i		220492	1					
ANR	220533	Identifier	properties_info		220492	1					
ANR	220534	Argument	prop_name		220492	1					
ANR	220535	Identifier	prop_name		220492	0					
ANR	220536	CompoundStatement		6:69:148:148	220492	1					
ANR	220537	ReturnStatement	return ce -> traits [ i ] ;	1443:4:53091:53111	220492	0	True				
ANR	220538	ArrayIndexing	ce -> traits [ i ]		220492	0					
ANR	220539	PtrMemberAccess	ce -> traits		220492	0					
ANR	220540	Identifier	ce		220492	0					
ANR	220541	Identifier	traits		220492	1					
ANR	220542	Identifier	i		220492	1					
ANR	220543	ReturnStatement	return coliding_ce ;	1448:1:53127:53145	220492	2	True				
ANR	220544	Identifier	coliding_ce		220492	0					
ANR	220545	ReturnType	static zend_class_entry *		220492	1					
ANR	220546	Identifier	find_first_definition		220492	2					
ANR	220547	ParameterList	"zend_class_entry * ce , size_t current_trait , zend_string * prop_name , zend_class_entry * coliding_ce"		220492	3					
ANR	220548	Parameter	zend_class_entry * ce	1436:47:52827:52846	220492	0	True				
ANR	220549	ParameterType	zend_class_entry *		220492	0					
ANR	220550	Identifier	ce		220492	1					
ANR	220551	Parameter	size_t current_trait	1436:69:52849:52868	220492	1	True				
ANR	220552	ParameterType	size_t		220492	0					
ANR	220553	Identifier	current_trait		220492	1					
ANR	220554	Parameter	zend_string * prop_name	1436:91:52871:52892	220492	2	True				
ANR	220555	ParameterType	zend_string *		220492	0					
ANR	220556	Identifier	prop_name		220492	1					
ANR	220557	Parameter	zend_class_entry * coliding_ce	1436:115:52895:52923	220492	3	True				
ANR	220558	ParameterType	zend_class_entry *		220492	0					
ANR	220559	Identifier	coliding_ce		220492	1					
ANR	220560	CFGEntryNode	ENTRY		220492		True				
ANR	220561	CFGExitNode	EXIT		220492		True				
ANR	220562	Symbol	prop_name		220492						
ANR	220563	Symbol	* ce -> traits		220492						
ANR	220564	Symbol	ce		220492						
ANR	220565	Symbol	* i		220492						
ANR	220566	Symbol	coliding_ce		220492						
ANR	220567	Symbol	current_trait		220492						
ANR	220568	Symbol	i		220492						
ANR	220569	Symbol	zend_hash_exists		220492						
ANR	220570	Symbol	* ce		220492						
ANR	220571	Symbol	* * ce		220492						
ANR	220572	Symbol	& ce -> traits [ i ] -> properties_info		220492						
ANR	220573	Symbol	ce -> traits		220492						
ANR	220574	Function	zend_do_traits_property_binding	1452:0:53160:56893							
ANR	220575	FunctionDef	zend_do_traits_property_binding (zend_class_entry * ce)		220574	0					
ANR	220576	CompoundStatement		1453:0:53236:56893	220574	0					
ANR	220577	IdentifierDeclStatement	size_t i ;	1454:1:53239:53247	220574	0	True				
ANR	220578	IdentifierDecl	i		220574	0					
ANR	220579	IdentifierDeclType	size_t		220574	0					
ANR	220580	Identifier	i		220574	1					
ANR	220581	IdentifierDeclStatement	zend_property_info * property_info ;	1455:1:53250:53283	220574	1	True				
ANR	220582	IdentifierDecl	* property_info		220574	0					
ANR	220583	IdentifierDeclType	zend_property_info *		220574	0					
ANR	220584	Identifier	property_info		220574	1					
ANR	220585	IdentifierDeclStatement	zend_property_info * coliding_prop ;	1456:1:53286:53319	220574	2	True				
ANR	220586	IdentifierDecl	* coliding_prop		220574	0					
ANR	220587	IdentifierDeclType	zend_property_info *		220574	0					
ANR	220588	Identifier	coliding_prop		220574	1					
ANR	220589	IdentifierDeclStatement	zval compare_result ;	1457:1:53322:53341	220574	3	True				
ANR	220590	IdentifierDecl	compare_result		220574	0					
ANR	220591	IdentifierDeclType	zval		220574	0					
ANR	220592	Identifier	compare_result		220574	1					
ANR	220593	IdentifierDeclStatement	zend_string * prop_name ;	1458:1:53344:53366	220574	4	True				
ANR	220594	IdentifierDecl	* prop_name		220574	0					
ANR	220595	IdentifierDeclType	zend_string *		220574	0					
ANR	220596	Identifier	prop_name		220574	1					
ANR	220597	IdentifierDeclStatement	const char * class_name_unused ;	1459:1:53369:53398	220574	5	True				
ANR	220598	IdentifierDecl	* class_name_unused		220574	0					
ANR	220599	IdentifierDeclType	const char *		220574	0					
ANR	220600	Identifier	class_name_unused		220574	1					
ANR	220601	IdentifierDeclStatement	zend_bool not_compatible ;	1460:1:53401:53425	220574	6	True				
ANR	220602	IdentifierDecl	not_compatible		220574	0					
ANR	220603	IdentifierDeclType	zend_bool		220574	0					
ANR	220604	Identifier	not_compatible		220574	1					
ANR	220605	IdentifierDeclStatement	zval * prop_value ;	1461:1:53428:53444	220574	7	True				
ANR	220606	IdentifierDecl	* prop_value		220574	0					
ANR	220607	IdentifierDeclType	zval *		220574	0					
ANR	220608	Identifier	prop_value		220574	1					
ANR	220609	IdentifierDeclStatement	uint32_t flags ;	1462:1:53447:53461	220574	8	True				
ANR	220610	IdentifierDecl	flags		220574	0					
ANR	220611	IdentifierDeclType	uint32_t		220574	0					
ANR	220612	Identifier	flags		220574	1					
ANR	220613	IdentifierDeclStatement	zend_string * doc_comment ;	1463:1:53464:53488	220574	9	True				
ANR	220614	IdentifierDecl	* doc_comment		220574	0					
ANR	220615	IdentifierDeclType	zend_string *		220574	0					
ANR	220616	Identifier	doc_comment		220574	1					
ANR	220617	ForStatement	for ( i = 0 ; i < ce -> num_traits ; i ++ )		220574	10					
ANR	220618	ForInit	i = 0 ;	1470:6:53755:53760	220574	0	True				
ANR	220619	AssignmentExpression	i = 0		220574	0		=			
ANR	220620	Identifier	i		220574	0					
ANR	220621	PrimaryExpression	0		220574	1					
ANR	220622	Condition	i < ce -> num_traits	1470:13:53762:53779	220574	1	True				
ANR	220623	RelationalExpression	i < ce -> num_traits		220574	0		<			
ANR	220624	Identifier	i		220574	0					
ANR	220625	PtrMemberAccess	ce -> num_traits		220574	1					
ANR	220626	Identifier	ce		220574	0					
ANR	220627	Identifier	num_traits		220574	1					
ANR	220628	PostIncDecOperationExpression	i ++	1470:33:53782:53784	220574	2	True				
ANR	220629	Identifier	i		220574	0					
ANR	220630	IncDec	++		220574	1					
ANR	220631	CompoundStatement		18:38:550:550	220574	3					
ANR	220632	Statement	ZEND_HASH_FOREACH_PTR	1471:2:53791:53811	220574	0	True				
ANR	220633	Statement	(	1471:23:53812:53812	220574	1	True				
ANR	220634	Statement	&	1471:24:53813:53813	220574	2	True				
ANR	220635	Statement	ce	1471:25:53814:53815	220574	3	True				
ANR	220636	Statement	->	1471:27:53816:53817	220574	4	True				
ANR	220637	Statement	traits	1471:29:53818:53823	220574	5	True				
ANR	220638	Statement	[	1471:35:53824:53824	220574	6	True				
ANR	220639	Statement	i	1471:36:53825:53825	220574	7	True				
ANR	220640	Statement	]	1471:37:53826:53826	220574	8	True				
ANR	220641	Statement	->	1471:38:53827:53828	220574	9	True				
ANR	220642	Statement	properties_info	1471:40:53829:53843	220574	10	True				
ANR	220643	Statement	","	1471:55:53844:53844	220574	11	True				
ANR	220644	Statement	property_info	1471:57:53846:53858	220574	12	True				
ANR	220645	Statement	)	1471:70:53859:53859	220574	13	True				
ANR	220646	CompoundStatement		19:72:624:624	220574	14					
ANR	220647	ExpressionStatement	flags = property_info -> flags	1475:3:53977:54005	220574	0	True				
ANR	220648	AssignmentExpression	flags = property_info -> flags		220574	0		=			
ANR	220649	Identifier	flags		220574	0					
ANR	220650	PtrMemberAccess	property_info -> flags		220574	1					
ANR	220651	Identifier	property_info		220574	0					
ANR	220652	Identifier	flags		220574	1					
ANR	220653	IfStatement	if ( flags & ZEND_ACC_PUBLIC )		220574	1					
ANR	220654	Condition	flags & ZEND_ACC_PUBLIC	1476:7:54014:54036	220574	0	True				
ANR	220655	BitAndExpression	flags & ZEND_ACC_PUBLIC		220574	0		&			
ANR	220656	Identifier	flags		220574	0					
ANR	220657	Identifier	ZEND_ACC_PUBLIC		220574	1					
ANR	220658	CompoundStatement		24:32:802:802	220574	1					
ANR	220659	ExpressionStatement	prop_name = zend_string_copy ( property_info -> name )	1477:4:54045:54094	220574	0	True				
ANR	220660	AssignmentExpression	prop_name = zend_string_copy ( property_info -> name )		220574	0		=			
ANR	220661	Identifier	prop_name		220574	0					
ANR	220662	CallExpression	zend_string_copy ( property_info -> name )		220574	1					
ANR	220663	Callee	zend_string_copy		220574	0					
ANR	220664	Identifier	zend_string_copy		220574	0					
ANR	220665	ArgumentList	property_info -> name		220574	1					
ANR	220666	Argument	property_info -> name		220574	0					
ANR	220667	PtrMemberAccess	property_info -> name		220574	0					
ANR	220668	Identifier	property_info		220574	0					
ANR	220669	Identifier	name		220574	1					
ANR	220670	ElseStatement	else		220574	0					
ANR	220671	CompoundStatement		28:4:898:914	220574	0					
ANR	220672	IdentifierDeclStatement	const char * pname ;	1479:4:54112:54129	220574	0	True				
ANR	220673	IdentifierDecl	* pname		220574	0					
ANR	220674	IdentifierDeclType	const char *		220574	0					
ANR	220675	Identifier	pname		220574	1					
ANR	220676	IdentifierDeclStatement	size_t pname_len ;	1480:4:54135:54151	220574	1	True				
ANR	220677	IdentifierDecl	pname_len		220574	0					
ANR	220678	IdentifierDeclType	size_t		220574	0					
ANR	220679	Identifier	pname_len		220574	1					
ANR	220680	ExpressionStatement	"zend_unmangle_property_name_ex ( property_info -> name , & class_name_unused , & pname , & pname_len )"	1483:4:54224:54326	220574	2	True				
ANR	220681	CallExpression	"zend_unmangle_property_name_ex ( property_info -> name , & class_name_unused , & pname , & pname_len )"		220574	0					
ANR	220682	Callee	zend_unmangle_property_name_ex		220574	0					
ANR	220683	Identifier	zend_unmangle_property_name_ex		220574	0					
ANR	220684	ArgumentList	property_info -> name		220574	1					
ANR	220685	Argument	property_info -> name		220574	0					
ANR	220686	PtrMemberAccess	property_info -> name		220574	0					
ANR	220687	Identifier	property_info		220574	0					
ANR	220688	Identifier	name		220574	1					
ANR	220689	Argument	& class_name_unused		220574	1					
ANR	220690	UnaryOperationExpression	& class_name_unused		220574	0					
ANR	220691	UnaryOperator	&		220574	0					
ANR	220692	Identifier	class_name_unused		220574	1					
ANR	220693	Argument	& pname		220574	2					
ANR	220694	UnaryOperationExpression	& pname		220574	0					
ANR	220695	UnaryOperator	&		220574	0					
ANR	220696	Identifier	pname		220574	1					
ANR	220697	Argument	& pname_len		220574	3					
ANR	220698	UnaryOperationExpression	& pname_len		220574	0					
ANR	220699	UnaryOperator	&		220574	0					
ANR	220700	Identifier	pname_len		220574	1					
ANR	220701	ExpressionStatement	"prop_name = zend_string_init ( pname , pname_len , 0 )"	1485:4:54332:54381	220574	3	True				
ANR	220702	AssignmentExpression	"prop_name = zend_string_init ( pname , pname_len , 0 )"		220574	0		=			
ANR	220703	Identifier	prop_name		220574	0					
ANR	220704	CallExpression	"zend_string_init ( pname , pname_len , 0 )"		220574	1					
ANR	220705	Callee	zend_string_init		220574	0					
ANR	220706	Identifier	zend_string_init		220574	0					
ANR	220707	ArgumentList	pname		220574	1					
ANR	220708	Argument	pname		220574	0					
ANR	220709	Identifier	pname		220574	0					
ANR	220710	Argument	pname_len		220574	1					
ANR	220711	Identifier	pname_len		220574	0					
ANR	220712	Argument	0		220574	2					
ANR	220713	PrimaryExpression	0		220574	0					
ANR	220714	IfStatement	"if ( ( coliding_prop = zend_hash_find_ptr ( & ce -> properties_info , prop_name ) ) != NULL )"		220574	2					
ANR	220715	Condition	"( coliding_prop = zend_hash_find_ptr ( & ce -> properties_info , prop_name ) ) != NULL"	1489:7:54450:54526	220574	0	True				
ANR	220716	EqualityExpression	"( coliding_prop = zend_hash_find_ptr ( & ce -> properties_info , prop_name ) ) != NULL"		220574	0		!=			
ANR	220717	AssignmentExpression	"coliding_prop = zend_hash_find_ptr ( & ce -> properties_info , prop_name )"		220574	0		=			
ANR	220718	Identifier	coliding_prop		220574	0					
ANR	220719	CallExpression	"zend_hash_find_ptr ( & ce -> properties_info , prop_name )"		220574	1					
ANR	220720	Callee	zend_hash_find_ptr		220574	0					
ANR	220721	Identifier	zend_hash_find_ptr		220574	0					
ANR	220722	ArgumentList	& ce -> properties_info		220574	1					
ANR	220723	Argument	& ce -> properties_info		220574	0					
ANR	220724	UnaryOperationExpression	& ce -> properties_info		220574	0					
ANR	220725	UnaryOperator	&		220574	0					
ANR	220726	PtrMemberAccess	ce -> properties_info		220574	1					
ANR	220727	Identifier	ce		220574	0					
ANR	220728	Identifier	properties_info		220574	1					
ANR	220729	Argument	prop_name		220574	1					
ANR	220730	Identifier	prop_name		220574	0					
ANR	220731	Identifier	NULL		220574	1					
ANR	220732	CompoundStatement		37:86:1292:1292	220574	1					
ANR	220733	IfStatement	if ( coliding_prop -> flags & ZEND_ACC_SHADOW )		220574	0					
ANR	220734	Condition	coliding_prop -> flags & ZEND_ACC_SHADOW	1490:8:54539:54576	220574	0	True				
ANR	220735	BitAndExpression	coliding_prop -> flags & ZEND_ACC_SHADOW		220574	0		&			
ANR	220736	PtrMemberAccess	coliding_prop -> flags		220574	0					
ANR	220737	Identifier	coliding_prop		220574	0					
ANR	220738	Identifier	flags		220574	1					
ANR	220739	Identifier	ZEND_ACC_SHADOW		220574	1					
ANR	220740	CompoundStatement		38:48:1342:1342	220574	1					
ANR	220741	ExpressionStatement	zend_string_release ( coliding_prop -> name )	1491:5:54586:54626	220574	0	True				
ANR	220742	CallExpression	zend_string_release ( coliding_prop -> name )		220574	0					
ANR	220743	Callee	zend_string_release		220574	0					
ANR	220744	Identifier	zend_string_release		220574	0					
ANR	220745	ArgumentList	coliding_prop -> name		220574	1					
ANR	220746	Argument	coliding_prop -> name		220574	0					
ANR	220747	PtrMemberAccess	coliding_prop -> name		220574	0					
ANR	220748	Identifier	coliding_prop		220574	0					
ANR	220749	Identifier	name		220574	1					
ANR	220750	IfStatement	if ( coliding_prop -> doc_comment )		220574	1					
ANR	220751	Condition	coliding_prop -> doc_comment	1492:9:54637:54662	220574	0	True				
ANR	220752	PtrMemberAccess	coliding_prop -> doc_comment		220574	0					
ANR	220753	Identifier	coliding_prop		220574	0					
ANR	220754	Identifier	doc_comment		220574	1					
ANR	220755	CompoundStatement		40:37:1428:1428	220574	1					
ANR	220756	ExpressionStatement	zend_string_release ( coliding_prop -> doc_comment )	1493:6:54673:54720	220574	0	True				
ANR	220757	CallExpression	zend_string_release ( coliding_prop -> doc_comment )		220574	0					
ANR	220758	Callee	zend_string_release		220574	0					
ANR	220759	Identifier	zend_string_release		220574	0					
ANR	220760	ArgumentList	coliding_prop -> doc_comment		220574	1					
ANR	220761	Argument	coliding_prop -> doc_comment		220574	0					
ANR	220762	PtrMemberAccess	coliding_prop -> doc_comment		220574	0					
ANR	220763	Identifier	coliding_prop		220574	0					
ANR	220764	Identifier	doc_comment		220574	1					
ANR	220765	ExpressionStatement	"zend_hash_del ( & ce -> properties_info , prop_name )"	1495:5:54749:54795	220574	2	True				
ANR	220766	CallExpression	"zend_hash_del ( & ce -> properties_info , prop_name )"		220574	0					
ANR	220767	Callee	zend_hash_del		220574	0					
ANR	220768	Identifier	zend_hash_del		220574	0					
ANR	220769	ArgumentList	& ce -> properties_info		220574	1					
ANR	220770	Argument	& ce -> properties_info		220574	0					
ANR	220771	UnaryOperationExpression	& ce -> properties_info		220574	0					
ANR	220772	UnaryOperator	&		220574	0					
ANR	220773	PtrMemberAccess	ce -> properties_info		220574	1					
ANR	220774	Identifier	ce		220574	0					
ANR	220775	Identifier	properties_info		220574	1					
ANR	220776	Argument	prop_name		220574	1					
ANR	220777	Identifier	prop_name		220574	0					
ANR	220778	ExpressionStatement	flags |= ZEND_ACC_CHANGED	1496:5:54802:54827	220574	3	True				
ANR	220779	AssignmentExpression	flags |= ZEND_ACC_CHANGED		220574	0		|=			
ANR	220780	Identifier	flags		220574	0					
ANR	220781	Identifier	ZEND_ACC_CHANGED		220574	1					
ANR	220782	ElseStatement	else		220574	0					
ANR	220783	CompoundStatement		45:11:1603:1603	220574	0					
ANR	220784	IfStatement	if ( ( coliding_prop -> flags & ( ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC ) ) == ( flags & ( ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC ) ) )		220574	0					
ANR	220785	Condition	( coliding_prop -> flags & ( ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC ) ) == ( flags & ( ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC ) )	1498:9:54851:54969	220574	0	True				
ANR	220786	EqualityExpression	( coliding_prop -> flags & ( ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC ) ) == ( flags & ( ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC ) )		220574	0		==			
ANR	220787	BitAndExpression	coliding_prop -> flags & ( ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC )		220574	0		&			
ANR	220788	PtrMemberAccess	coliding_prop -> flags		220574	0					
ANR	220789	Identifier	coliding_prop		220574	0					
ANR	220790	Identifier	flags		220574	1					
ANR	220791	InclusiveOrExpression	ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC		220574	1		|			
ANR	220792	Identifier	ZEND_ACC_PPP_MASK		220574	0					
ANR	220793	Identifier	ZEND_ACC_STATIC		220574	1					
ANR	220794	BitAndExpression	flags & ( ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC )		220574	1		&			
ANR	220795	Identifier	flags		220574	0					
ANR	220796	InclusiveOrExpression	ZEND_ACC_PPP_MASK | ZEND_ACC_STATIC		220574	1		|			
ANR	220797	Identifier	ZEND_ACC_PPP_MASK		220574	0					
ANR	220798	Identifier	ZEND_ACC_STATIC		220574	1					
ANR	220799	CompoundStatement		47:58:1735:1735	220574	1					
ANR	220800	IfStatement	if ( flags & ZEND_ACC_STATIC )		220574	0					
ANR	220801	Condition	flags & ZEND_ACC_STATIC	1501:10:55051:55073	220574	0	True				
ANR	220802	BitAndExpression	flags & ZEND_ACC_STATIC		220574	0		&			
ANR	220803	Identifier	flags		220574	0					
ANR	220804	Identifier	ZEND_ACC_STATIC		220574	1					
ANR	220805	CompoundStatement		49:35:1839:1839	220574	1					
ANR	220806	ExpressionStatement	"not_compatible = ( FAILURE == compare_function ( & compare_result , & ce -> default_static_members_table [ coliding_prop -> offset ] , & ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ] ) ) || ( Z_LVAL ( compare_result ) != 0 )"	1502:7:55085:55344	220574	0	True				
ANR	220807	AssignmentExpression	"not_compatible = ( FAILURE == compare_function ( & compare_result , & ce -> default_static_members_table [ coliding_prop -> offset ] , & ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ] ) ) || ( Z_LVAL ( compare_result ) != 0 )"		220574	0		=			
ANR	220808	Identifier	not_compatible		220574	0					
ANR	220809	OrExpression	"( FAILURE == compare_function ( & compare_result , & ce -> default_static_members_table [ coliding_prop -> offset ] , & ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ] ) ) || ( Z_LVAL ( compare_result ) != 0 )"		220574	1		||			
ANR	220810	EqualityExpression	"FAILURE == compare_function ( & compare_result , & ce -> default_static_members_table [ coliding_prop -> offset ] , & ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ] )"		220574	0		==			
ANR	220811	Identifier	FAILURE		220574	0					
ANR	220812	CallExpression	"compare_function ( & compare_result , & ce -> default_static_members_table [ coliding_prop -> offset ] , & ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ] )"		220574	1					
ANR	220813	Callee	compare_function		220574	0					
ANR	220814	Identifier	compare_function		220574	0					
ANR	220815	ArgumentList	& compare_result		220574	1					
ANR	220816	Argument	& compare_result		220574	0					
ANR	220817	UnaryOperationExpression	& compare_result		220574	0					
ANR	220818	UnaryOperator	&		220574	0					
ANR	220819	Identifier	compare_result		220574	1					
ANR	220820	Argument	& ce -> default_static_members_table [ coliding_prop -> offset ]		220574	1					
ANR	220821	UnaryOperationExpression	& ce -> default_static_members_table [ coliding_prop -> offset ]		220574	0					
ANR	220822	UnaryOperator	&		220574	0					
ANR	220823	ArrayIndexing	ce -> default_static_members_table [ coliding_prop -> offset ]		220574	1					
ANR	220824	PtrMemberAccess	ce -> default_static_members_table		220574	0					
ANR	220825	Identifier	ce		220574	0					
ANR	220826	Identifier	default_static_members_table		220574	1					
ANR	220827	PtrMemberAccess	coliding_prop -> offset		220574	1					
ANR	220828	Identifier	coliding_prop		220574	0					
ANR	220829	Identifier	offset		220574	1					
ANR	220830	Argument	& ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ]		220574	2					
ANR	220831	UnaryOperationExpression	& ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ]		220574	0					
ANR	220832	UnaryOperator	&		220574	0					
ANR	220833	ArrayIndexing	ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ]		220574	1					
ANR	220834	PtrMemberAccess	ce -> traits [ i ] -> default_static_members_table		220574	0					
ANR	220835	ArrayIndexing	ce -> traits [ i ]		220574	0					
ANR	220836	PtrMemberAccess	ce -> traits		220574	0					
ANR	220837	Identifier	ce		220574	0					
ANR	220838	Identifier	traits		220574	1					
ANR	220839	Identifier	i		220574	1					
ANR	220840	Identifier	default_static_members_table		220574	1					
ANR	220841	PtrMemberAccess	property_info -> offset		220574	1					
ANR	220842	Identifier	property_info		220574	0					
ANR	220843	Identifier	offset		220574	1					
ANR	220844	EqualityExpression	Z_LVAL ( compare_result ) != 0		220574	1		!=			
ANR	220845	CallExpression	Z_LVAL ( compare_result )		220574	0					
ANR	220846	Callee	Z_LVAL		220574	0					
ANR	220847	Identifier	Z_LVAL		220574	0					
ANR	220848	ArgumentList	compare_result		220574	1					
ANR	220849	Argument	compare_result		220574	0					
ANR	220850	Identifier	compare_result		220574	0					
ANR	220851	PrimaryExpression	0		220574	1					
ANR	220852	ElseStatement	else		220574	0					
ANR	220853	CompoundStatement		54:13:2122:2122	220574	0					
ANR	220854	ExpressionStatement	"not_compatible = ( FAILURE == compare_function ( & compare_result , & ce -> default_properties_table [ OBJ_PROP_TO_NUM ( coliding_prop -> offset ) ] , & ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ] ) ) || ( Z_LVAL ( compare_result ) != 0 )"	1507:7:55368:55653	220574	0	True				
ANR	220855	AssignmentExpression	"not_compatible = ( FAILURE == compare_function ( & compare_result , & ce -> default_properties_table [ OBJ_PROP_TO_NUM ( coliding_prop -> offset ) ] , & ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ] ) ) || ( Z_LVAL ( compare_result ) != 0 )"		220574	0		=			
ANR	220856	Identifier	not_compatible		220574	0					
ANR	220857	OrExpression	"( FAILURE == compare_function ( & compare_result , & ce -> default_properties_table [ OBJ_PROP_TO_NUM ( coliding_prop -> offset ) ] , & ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ] ) ) || ( Z_LVAL ( compare_result ) != 0 )"		220574	1		||			
ANR	220858	EqualityExpression	"FAILURE == compare_function ( & compare_result , & ce -> default_properties_table [ OBJ_PROP_TO_NUM ( coliding_prop -> offset ) ] , & ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ] )"		220574	0		==			
ANR	220859	Identifier	FAILURE		220574	0					
ANR	220860	CallExpression	"compare_function ( & compare_result , & ce -> default_properties_table [ OBJ_PROP_TO_NUM ( coliding_prop -> offset ) ] , & ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ] )"		220574	1					
ANR	220861	Callee	compare_function		220574	0					
ANR	220862	Identifier	compare_function		220574	0					
ANR	220863	ArgumentList	& compare_result		220574	1					
ANR	220864	Argument	& compare_result		220574	0					
ANR	220865	UnaryOperationExpression	& compare_result		220574	0					
ANR	220866	UnaryOperator	&		220574	0					
ANR	220867	Identifier	compare_result		220574	1					
ANR	220868	Argument	& ce -> default_properties_table [ OBJ_PROP_TO_NUM ( coliding_prop -> offset ) ]		220574	1					
ANR	220869	UnaryOperationExpression	& ce -> default_properties_table [ OBJ_PROP_TO_NUM ( coliding_prop -> offset ) ]		220574	0					
ANR	220870	UnaryOperator	&		220574	0					
ANR	220871	ArrayIndexing	ce -> default_properties_table [ OBJ_PROP_TO_NUM ( coliding_prop -> offset ) ]		220574	1					
ANR	220872	PtrMemberAccess	ce -> default_properties_table		220574	0					
ANR	220873	Identifier	ce		220574	0					
ANR	220874	Identifier	default_properties_table		220574	1					
ANR	220875	CallExpression	OBJ_PROP_TO_NUM ( coliding_prop -> offset )		220574	1					
ANR	220876	Callee	OBJ_PROP_TO_NUM		220574	0					
ANR	220877	Identifier	OBJ_PROP_TO_NUM		220574	0					
ANR	220878	ArgumentList	coliding_prop -> offset		220574	1					
ANR	220879	Argument	coliding_prop -> offset		220574	0					
ANR	220880	PtrMemberAccess	coliding_prop -> offset		220574	0					
ANR	220881	Identifier	coliding_prop		220574	0					
ANR	220882	Identifier	offset		220574	1					
ANR	220883	Argument	& ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		220574	2					
ANR	220884	UnaryOperationExpression	& ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		220574	0					
ANR	220885	UnaryOperator	&		220574	0					
ANR	220886	ArrayIndexing	ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		220574	1					
ANR	220887	PtrMemberAccess	ce -> traits [ i ] -> default_properties_table		220574	0					
ANR	220888	ArrayIndexing	ce -> traits [ i ]		220574	0					
ANR	220889	PtrMemberAccess	ce -> traits		220574	0					
ANR	220890	Identifier	ce		220574	0					
ANR	220891	Identifier	traits		220574	1					
ANR	220892	Identifier	i		220574	1					
ANR	220893	Identifier	default_properties_table		220574	1					
ANR	220894	CallExpression	OBJ_PROP_TO_NUM ( property_info -> offset )		220574	1					
ANR	220895	Callee	OBJ_PROP_TO_NUM		220574	0					
ANR	220896	Identifier	OBJ_PROP_TO_NUM		220574	0					
ANR	220897	ArgumentList	property_info -> offset		220574	1					
ANR	220898	Argument	property_info -> offset		220574	0					
ANR	220899	PtrMemberAccess	property_info -> offset		220574	0					
ANR	220900	Identifier	property_info		220574	0					
ANR	220901	Identifier	offset		220574	1					
ANR	220902	EqualityExpression	Z_LVAL ( compare_result ) != 0		220574	1		!=			
ANR	220903	CallExpression	Z_LVAL ( compare_result )		220574	0					
ANR	220904	Callee	Z_LVAL		220574	0					
ANR	220905	Identifier	Z_LVAL		220574	0					
ANR	220906	ArgumentList	compare_result		220574	1					
ANR	220907	Argument	compare_result		220574	0					
ANR	220908	Identifier	compare_result		220574	0					
ANR	220909	PrimaryExpression	0		220574	1					
ANR	220910	ElseStatement	else		220574	0					
ANR	220911	CompoundStatement		60:12:2438:2438	220574	0					
ANR	220912	ExpressionStatement	not_compatible = 1	1514:6:55770:55788	220574	0	True				
ANR	220913	AssignmentExpression	not_compatible = 1		220574	0		=			
ANR	220914	Identifier	not_compatible		220574	0					
ANR	220915	PrimaryExpression	1		220574	1					
ANR	220916	IfStatement	if ( not_compatible )		220574	1					
ANR	220917	Condition	not_compatible	1517:9:55807:55820	220574	0	True				
ANR	220918	Identifier	not_compatible		220574	0					
ANR	220919	CompoundStatement		65:25:2586:2586	220574	1					
ANR	220920	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s and %s define the same property ($%s) in the composition of %s. However, the definition differs and is considered incompatible. Class was composed"" , ZSTR_VAL ( find_first_definition ( ce , i , prop_name , coliding_prop -> ce ) -> name ) , ZSTR_VAL ( property_info -> ce -> name ) , ZSTR_VAL ( prop_name ) , ZSTR_VAL ( ce -> name ) )"	1518:6:55831:56214	220574	0	True				
ANR	220921	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""%s and %s define the same property ($%s) in the composition of %s. However, the definition differs and is considered incompatible. Class was composed"" , ZSTR_VAL ( find_first_definition ( ce , i , prop_name , coliding_prop -> ce ) -> name ) , ZSTR_VAL ( property_info -> ce -> name ) , ZSTR_VAL ( prop_name ) , ZSTR_VAL ( ce -> name ) )"		220574	0					
ANR	220922	Callee	zend_error_noreturn		220574	0					
ANR	220923	Identifier	zend_error_noreturn		220574	0					
ANR	220924	ArgumentList	E_COMPILE_ERROR		220574	1					
ANR	220925	Argument	E_COMPILE_ERROR		220574	0					
ANR	220926	Identifier	E_COMPILE_ERROR		220574	0					
ANR	220927	Argument	"""%s and %s define the same property ($%s) in the composition of %s. However, the definition differs and is considered incompatible. Class was composed"""		220574	1					
ANR	220928	PrimaryExpression	"""%s and %s define the same property ($%s) in the composition of %s. However, the definition differs and is considered incompatible. Class was composed"""		220574	0					
ANR	220929	Argument	"ZSTR_VAL ( find_first_definition ( ce , i , prop_name , coliding_prop -> ce ) -> name )"		220574	2					
ANR	220930	CallExpression	"ZSTR_VAL ( find_first_definition ( ce , i , prop_name , coliding_prop -> ce ) -> name )"		220574	0					
ANR	220931	Callee	ZSTR_VAL		220574	0					
ANR	220932	Identifier	ZSTR_VAL		220574	0					
ANR	220933	ArgumentList	"find_first_definition ( ce , i , prop_name , coliding_prop -> ce ) -> name"		220574	1					
ANR	220934	Argument	"find_first_definition ( ce , i , prop_name , coliding_prop -> ce ) -> name"		220574	0					
ANR	220935	PtrMemberAccess	"find_first_definition ( ce , i , prop_name , coliding_prop -> ce ) -> name"		220574	0					
ANR	220936	CallExpression	"find_first_definition ( ce , i , prop_name , coliding_prop -> ce )"		220574	0					
ANR	220937	Callee	find_first_definition		220574	0					
ANR	220938	Identifier	find_first_definition		220574	0					
ANR	220939	ArgumentList	ce		220574	1					
ANR	220940	Argument	ce		220574	0					
ANR	220941	Identifier	ce		220574	0					
ANR	220942	Argument	i		220574	1					
ANR	220943	Identifier	i		220574	0					
ANR	220944	Argument	prop_name		220574	2					
ANR	220945	Identifier	prop_name		220574	0					
ANR	220946	Argument	coliding_prop -> ce		220574	3					
ANR	220947	PtrMemberAccess	coliding_prop -> ce		220574	0					
ANR	220948	Identifier	coliding_prop		220574	0					
ANR	220949	Identifier	ce		220574	1					
ANR	220950	Identifier	name		220574	1					
ANR	220951	Argument	ZSTR_VAL ( property_info -> ce -> name )		220574	3					
ANR	220952	CallExpression	ZSTR_VAL ( property_info -> ce -> name )		220574	0					
ANR	220953	Callee	ZSTR_VAL		220574	0					
ANR	220954	Identifier	ZSTR_VAL		220574	0					
ANR	220955	ArgumentList	property_info -> ce -> name		220574	1					
ANR	220956	Argument	property_info -> ce -> name		220574	0					
ANR	220957	PtrMemberAccess	property_info -> ce -> name		220574	0					
ANR	220958	PtrMemberAccess	property_info -> ce		220574	0					
ANR	220959	Identifier	property_info		220574	0					
ANR	220960	Identifier	ce		220574	1					
ANR	220961	Identifier	name		220574	1					
ANR	220962	Argument	ZSTR_VAL ( prop_name )		220574	4					
ANR	220963	CallExpression	ZSTR_VAL ( prop_name )		220574	0					
ANR	220964	Callee	ZSTR_VAL		220574	0					
ANR	220965	Identifier	ZSTR_VAL		220574	0					
ANR	220966	ArgumentList	prop_name		220574	1					
ANR	220967	Argument	prop_name		220574	0					
ANR	220968	Identifier	prop_name		220574	0					
ANR	220969	Argument	ZSTR_VAL ( ce -> name )		220574	5					
ANR	220970	CallExpression	ZSTR_VAL ( ce -> name )		220574	0					
ANR	220971	Callee	ZSTR_VAL		220574	0					
ANR	220972	Identifier	ZSTR_VAL		220574	0					
ANR	220973	ArgumentList	ce -> name		220574	1					
ANR	220974	Argument	ce -> name		220574	0					
ANR	220975	PtrMemberAccess	ce -> name		220574	0					
ANR	220976	Identifier	ce		220574	0					
ANR	220977	Identifier	name		220574	1					
ANR	220978	ExpressionStatement	zend_string_release ( prop_name )	1526:5:56229:56259	220574	2	True				
ANR	220979	CallExpression	zend_string_release ( prop_name )		220574	0					
ANR	220980	Callee	zend_string_release		220574	0					
ANR	220981	Identifier	zend_string_release		220574	0					
ANR	220982	ArgumentList	prop_name		220574	1					
ANR	220983	Argument	prop_name		220574	0					
ANR	220984	Identifier	prop_name		220574	0					
ANR	220985	ContinueStatement	continue ;	1527:5:56266:56274	220574	3	True				
ANR	220986	IfStatement	if ( flags & ZEND_ACC_STATIC )		220574	3					
ANR	220987	Condition	flags & ZEND_ACC_STATIC	1532:7:56339:56361	220574	0	True				
ANR	220988	BitAndExpression	flags & ZEND_ACC_STATIC		220574	0		&			
ANR	220989	Identifier	flags		220574	0					
ANR	220990	Identifier	ZEND_ACC_STATIC		220574	1					
ANR	220991	CompoundStatement		80:32:3127:3127	220574	1					
ANR	220992	ExpressionStatement	prop_value = & ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ]	1533:4:56370:56450	220574	0	True				
ANR	220993	AssignmentExpression	prop_value = & ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ]		220574	0		=			
ANR	220994	Identifier	prop_value		220574	0					
ANR	220995	UnaryOperationExpression	& ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ]		220574	1					
ANR	220996	UnaryOperator	&		220574	0					
ANR	220997	ArrayIndexing	ce -> traits [ i ] -> default_static_members_table [ property_info -> offset ]		220574	1					
ANR	220998	PtrMemberAccess	ce -> traits [ i ] -> default_static_members_table		220574	0					
ANR	220999	ArrayIndexing	ce -> traits [ i ]		220574	0					
ANR	221000	PtrMemberAccess	ce -> traits		220574	0					
ANR	221001	Identifier	ce		220574	0					
ANR	221002	Identifier	traits		220574	1					
ANR	221003	Identifier	i		220574	1					
ANR	221004	Identifier	default_static_members_table		220574	1					
ANR	221005	PtrMemberAccess	property_info -> offset		220574	1					
ANR	221006	Identifier	property_info		220574	0					
ANR	221007	Identifier	offset		220574	1					
ANR	221008	ElseStatement	else		220574	0					
ANR	221009	CompoundStatement		82:10:3225:3225	220574	0					
ANR	221010	ExpressionStatement	prop_value = & ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]	1535:4:56468:56561	220574	0	True				
ANR	221011	AssignmentExpression	prop_value = & ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		220574	0		=			
ANR	221012	Identifier	prop_value		220574	0					
ANR	221013	UnaryOperationExpression	& ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		220574	1					
ANR	221014	UnaryOperator	&		220574	0					
ANR	221015	ArrayIndexing	ce -> traits [ i ] -> default_properties_table [ OBJ_PROP_TO_NUM ( property_info -> offset ) ]		220574	1					
ANR	221016	PtrMemberAccess	ce -> traits [ i ] -> default_properties_table		220574	0					
ANR	221017	ArrayIndexing	ce -> traits [ i ]		220574	0					
ANR	221018	PtrMemberAccess	ce -> traits		220574	0					
ANR	221019	Identifier	ce		220574	0					
ANR	221020	Identifier	traits		220574	1					
ANR	221021	Identifier	i		220574	1					
ANR	221022	Identifier	default_properties_table		220574	1					
ANR	221023	CallExpression	OBJ_PROP_TO_NUM ( property_info -> offset )		220574	1					
ANR	221024	Callee	OBJ_PROP_TO_NUM		220574	0					
ANR	221025	Identifier	OBJ_PROP_TO_NUM		220574	0					
ANR	221026	ArgumentList	property_info -> offset		220574	1					
ANR	221027	Argument	property_info -> offset		220574	0					
ANR	221028	PtrMemberAccess	property_info -> offset		220574	0					
ANR	221029	Identifier	property_info		220574	0					
ANR	221030	Identifier	offset		220574	1					
ANR	221031	IfStatement	if ( Z_REFCOUNTED_P ( prop_value ) )		220574	4					
ANR	221032	Condition	Z_REFCOUNTED_P ( prop_value )	1537:7:56575:56600	220574	0	True				
ANR	221033	CallExpression	Z_REFCOUNTED_P ( prop_value )		220574	0					
ANR	221034	Callee	Z_REFCOUNTED_P		220574	0					
ANR	221035	Identifier	Z_REFCOUNTED_P		220574	0					
ANR	221036	ArgumentList	prop_value		220574	1					
ANR	221037	Argument	prop_value		220574	0					
ANR	221038	Identifier	prop_value		220574	0					
ANR	221039	ExpressionStatement	Z_ADDREF_P ( prop_value )	1537:35:56603:56625	220574	1	True				
ANR	221040	CallExpression	Z_ADDREF_P ( prop_value )		220574	0					
ANR	221041	Callee	Z_ADDREF_P		220574	0					
ANR	221042	Identifier	Z_ADDREF_P		220574	0					
ANR	221043	ArgumentList	prop_value		220574	1					
ANR	221044	Argument	prop_value		220574	0					
ANR	221045	Identifier	prop_value		220574	0					
ANR	221046	ExpressionStatement	doc_comment = property_info -> doc_comment ? zend_string_copy ( property_info -> doc_comment ) : NULL	1539:3:56631:56725	220574	5	True				
ANR	221047	AssignmentExpression	doc_comment = property_info -> doc_comment ? zend_string_copy ( property_info -> doc_comment ) : NULL		220574	0		=			
ANR	221048	Identifier	doc_comment		220574	0					
ANR	221049	ConditionalExpression	property_info -> doc_comment ? zend_string_copy ( property_info -> doc_comment ) : NULL		220574	1					
ANR	221050	Condition	property_info -> doc_comment		220574	0					
ANR	221051	PtrMemberAccess	property_info -> doc_comment		220574	0					
ANR	221052	Identifier	property_info		220574	0					
ANR	221053	Identifier	doc_comment		220574	1					
ANR	221054	CallExpression	zend_string_copy ( property_info -> doc_comment )		220574	1					
ANR	221055	Callee	zend_string_copy		220574	0					
ANR	221056	Identifier	zend_string_copy		220574	0					
ANR	221057	ArgumentList	property_info -> doc_comment		220574	1					
ANR	221058	Argument	property_info -> doc_comment		220574	0					
ANR	221059	PtrMemberAccess	property_info -> doc_comment		220574	0					
ANR	221060	Identifier	property_info		220574	0					
ANR	221061	Identifier	doc_comment		220574	1					
ANR	221062	Identifier	NULL		220574	2					
ANR	221063	ExpressionStatement	"zend_declare_property_ex ( ce , prop_name , prop_value , flags , doc_comment )"	1540:3:56730:56824	220574	6	True				
ANR	221064	CallExpression	"zend_declare_property_ex ( ce , prop_name , prop_value , flags , doc_comment )"		220574	0					
ANR	221065	Callee	zend_declare_property_ex		220574	0					
ANR	221066	Identifier	zend_declare_property_ex		220574	0					
ANR	221067	ArgumentList	ce		220574	1					
ANR	221068	Argument	ce		220574	0					
ANR	221069	Identifier	ce		220574	0					
ANR	221070	Argument	prop_name		220574	1					
ANR	221071	Identifier	prop_name		220574	0					
ANR	221072	Argument	prop_value		220574	2					
ANR	221073	Identifier	prop_value		220574	0					
ANR	221074	Argument	flags		220574	3					
ANR	221075	Identifier	flags		220574	0					
ANR	221076	Argument	doc_comment		220574	4					
ANR	221077	Identifier	doc_comment		220574	0					
ANR	221078	ExpressionStatement	zend_string_release ( prop_name )	1543:3:56829:56859	220574	7	True				
ANR	221079	CallExpression	zend_string_release ( prop_name )		220574	0					
ANR	221080	Callee	zend_string_release		220574	0					
ANR	221081	Identifier	zend_string_release		220574	0					
ANR	221082	ArgumentList	prop_name		220574	1					
ANR	221083	Argument	prop_name		220574	0					
ANR	221084	Identifier	prop_name		220574	0					
ANR	221085	ExpressionStatement	ZEND_HASH_FOREACH_END ( )	1544:4:56865:56888	220574	15	True				
ANR	221086	CallExpression	ZEND_HASH_FOREACH_END ( )		220574	0					
ANR	221087	Callee	ZEND_HASH_FOREACH_END		220574	0					
ANR	221088	Identifier	ZEND_HASH_FOREACH_END		220574	0					
ANR	221089	ArgumentList			220574	1					
ANR	221090	ReturnType	static void		220574	1					
ANR	221091	Identifier	zend_do_traits_property_binding		220574	2					
ANR	221092	ParameterList	zend_class_entry * ce		220574	3					
ANR	221093	Parameter	zend_class_entry * ce	1452:44:53204:53223	220574	0	True				
ANR	221094	ParameterType	zend_class_entry *		220574	0					
ANR	221095	Identifier	ce		220574	1					
ANR	221096	CFGEntryNode	ENTRY		220574		True				
ANR	221097	CFGExitNode	EXIT		220574		True				
ANR	221098	Symbol	not_compatible		220574						
ANR	221099	Symbol	doc_comment		220574						
ANR	221100	Symbol	E_COMPILE_ERROR		220574						
ANR	221101	Symbol	Z_LVAL		220574						
ANR	221102	Symbol	* ce		220574						
ANR	221103	Symbol	zend_string_init		220574						
ANR	221104	Symbol	coliding_prop -> ce		220574						
ANR	221105	Symbol	* property_info		220574						
ANR	221106	Symbol	ZEND_ACC_SHADOW		220574						
ANR	221107	Symbol	ce -> name		220574						
ANR	221108	Symbol	& pname_len		220574						
ANR	221109	Symbol	zend_hash_find_ptr		220574						
ANR	221110	Symbol	* find_first_definition		220574						
ANR	221111	Symbol	compare_result		220574						
ANR	221112	Symbol	coliding_prop -> name		220574						
ANR	221113	Symbol	* * i		220574						
ANR	221114	Symbol	NULL		220574						
ANR	221115	Symbol	& pname		220574						
ANR	221116	Symbol	"find_first_definition ( ce , i , prop_name , coliding_prop -> ce ) -> name"		220574						
ANR	221117	Symbol	pname		220574						
ANR	221118	Symbol	ce -> traits [ i ] -> default_static_members_table		220574						
ANR	221119	Symbol	ce -> default_properties_table		220574						
ANR	221120	Symbol	property_info -> name		220574						
ANR	221121	Symbol	zend_string_copy		220574						
ANR	221122	Symbol	ce -> default_static_members_table		220574						
ANR	221123	Symbol	property_info -> ce		220574						
ANR	221124	Symbol	& ce -> properties_info		220574						
ANR	221125	Symbol	coliding_prop		220574						
ANR	221126	Symbol	find_first_definition		220574						
ANR	221127	Symbol	coliding_prop -> flags		220574						
ANR	221128	Symbol	Z_REFCOUNTED_P		220574						
ANR	221129	Symbol	* * * ce		220574						
ANR	221130	Symbol	coliding_prop -> doc_comment		220574						
ANR	221131	Symbol	property_info -> offset		220574						
ANR	221132	Symbol	ZEND_ACC_PPP_MASK		220574						
ANR	221133	Symbol	ZEND_ACC_PUBLIC		220574						
ANR	221134	Symbol	flags		220574						
ANR	221135	Symbol	ZEND_ACC_CHANGED		220574						
ANR	221136	Symbol	* * ce		220574						
ANR	221137	Symbol	& compare_result		220574						
ANR	221138	Symbol	compare_function		220574						
ANR	221139	Symbol	prop_value		220574						
ANR	221140	Symbol	ZEND_ACC_STATIC		220574						
ANR	221141	Symbol	* * ce -> traits		220574						
ANR	221142	Symbol	property_info -> ce -> name		220574						
ANR	221143	Symbol	property_info -> flags		220574						
ANR	221144	Symbol	property_info		220574						
ANR	221145	Symbol	OBJ_PROP_TO_NUM		220574						
ANR	221146	Symbol	ce		220574						
ANR	221147	Symbol	* * property_info		220574						
ANR	221148	Symbol	i		220574						
ANR	221149	Symbol	* property_info -> ce		220574						
ANR	221150	Symbol	ce -> num_traits		220574						
ANR	221151	Symbol	FAILURE		220574						
ANR	221152	Symbol	ce -> traits		220574						
ANR	221153	Symbol	ZSTR_VAL		220574						
ANR	221154	Symbol	prop_name		220574						
ANR	221155	Symbol	* ce -> traits		220574						
ANR	221156	Symbol	ce -> traits [ i ] -> default_properties_table		220574						
ANR	221157	Symbol	property_info -> doc_comment		220574						
ANR	221158	Symbol	* i		220574						
ANR	221159	Symbol	& class_name_unused		220574						
ANR	221160	Symbol	class_name_unused		220574						
ANR	221161	Symbol	* coliding_prop		220574						
ANR	221162	Symbol	coliding_prop -> offset		220574						
ANR	221163	Symbol	pname_len		220574						
ANR	221164	Function	zend_do_check_for_inconsistent_traits_aliasing	1549:0:56906:58729							
ANR	221165	FunctionDef	zend_do_check_for_inconsistent_traits_aliasing (zend_class_entry * ce)		221164	0					
ANR	221166	CompoundStatement		1550:0:56997:58729	221164	0					
ANR	221167	IdentifierDeclStatement	int i = 0 ;	1551:1:57000:57009	221164	0	True				
ANR	221168	IdentifierDecl	i = 0		221164	0					
ANR	221169	IdentifierDeclType	int		221164	0					
ANR	221170	Identifier	i		221164	1					
ANR	221171	AssignmentExpression	i = 0		221164	2		=			
ANR	221172	Identifier	i		221164	0					
ANR	221173	PrimaryExpression	0		221164	1					
ANR	221174	IdentifierDeclStatement	zend_trait_alias * cur_alias ;	1552:1:57012:57039	221164	1	True				
ANR	221175	IdentifierDecl	* cur_alias		221164	0					
ANR	221176	IdentifierDeclType	zend_trait_alias *		221164	0					
ANR	221177	Identifier	cur_alias		221164	1					
ANR	221178	IdentifierDeclStatement	zend_string * lc_method_name ;	1553:1:57042:57069	221164	2	True				
ANR	221179	IdentifierDecl	* lc_method_name		221164	0					
ANR	221180	IdentifierDeclType	zend_string *		221164	0					
ANR	221181	Identifier	lc_method_name		221164	1					
ANR	221182	IfStatement	if ( ce -> trait_aliases )		221164	3					
ANR	221183	Condition	ce -> trait_aliases	1555:5:57077:57093	221164	0	True				
ANR	221184	PtrMemberAccess	ce -> trait_aliases		221164	0					
ANR	221185	Identifier	ce		221164	0					
ANR	221186	Identifier	trait_aliases		221164	1					
ANR	221187	CompoundStatement		6:24:98:98	221164	1					
ANR	221188	WhileStatement	while ( ce -> trait_aliases [ i ] )		221164	0					
ANR	221189	Condition	ce -> trait_aliases [ i ]	1556:9:57107:57126	221164	0	True				
ANR	221190	ArrayIndexing	ce -> trait_aliases [ i ]		221164	0					
ANR	221191	PtrMemberAccess	ce -> trait_aliases		221164	0					
ANR	221192	Identifier	ce		221164	0					
ANR	221193	Identifier	trait_aliases		221164	1					
ANR	221194	Identifier	i		221164	1					
ANR	221195	CompoundStatement		7:31:131:131	221164	1					
ANR	221196	ExpressionStatement	cur_alias = ce -> trait_aliases [ i ]	1557:3:57134:57166	221164	0	True				
ANR	221197	AssignmentExpression	cur_alias = ce -> trait_aliases [ i ]		221164	0		=			
ANR	221198	Identifier	cur_alias		221164	0					
ANR	221199	ArrayIndexing	ce -> trait_aliases [ i ]		221164	1					
ANR	221200	PtrMemberAccess	ce -> trait_aliases		221164	0					
ANR	221201	Identifier	ce		221164	0					
ANR	221202	Identifier	trait_aliases		221164	1					
ANR	221203	Identifier	i		221164	1					
ANR	221204	IfStatement	if ( ! cur_alias -> trait_method -> ce )		221164	1					
ANR	221205	Condition	! cur_alias -> trait_method -> ce	1560:7:57298:57325	221164	0	True				
ANR	221206	UnaryOperationExpression	! cur_alias -> trait_method -> ce		221164	0					
ANR	221207	UnaryOperator	!		221164	0					
ANR	221208	PtrMemberAccess	cur_alias -> trait_method -> ce		221164	1					
ANR	221209	PtrMemberAccess	cur_alias -> trait_method		221164	0					
ANR	221210	Identifier	cur_alias		221164	0					
ANR	221211	Identifier	trait_method		221164	1					
ANR	221212	Identifier	ce		221164	1					
ANR	221213	CompoundStatement		11:37:330:330	221164	1					
ANR	221214	IfStatement	if ( cur_alias -> alias )		221164	0					
ANR	221215	Condition	cur_alias -> alias	1561:8:57338:57353	221164	0	True				
ANR	221216	PtrMemberAccess	cur_alias -> alias		221164	0					
ANR	221217	Identifier	cur_alias		221164	0					
ANR	221218	Identifier	alias		221164	1					
ANR	221219	CompoundStatement		12:26:358:358	221164	1					
ANR	221220	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""An alias (%s) was defined for method %s(), but this method does not exist"" , ZSTR_VAL ( cur_alias -> alias ) , ZSTR_VAL ( cur_alias -> trait_method -> method_name ) )"	1563:5:57408:57627	221164	0	True				
ANR	221221	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""An alias (%s) was defined for method %s(), but this method does not exist"" , ZSTR_VAL ( cur_alias -> alias ) , ZSTR_VAL ( cur_alias -> trait_method -> method_name ) )"		221164	0					
ANR	221222	Callee	zend_error_noreturn		221164	0					
ANR	221223	Identifier	zend_error_noreturn		221164	0					
ANR	221224	ArgumentList	E_COMPILE_ERROR		221164	1					
ANR	221225	Argument	E_COMPILE_ERROR		221164	0					
ANR	221226	Identifier	E_COMPILE_ERROR		221164	0					
ANR	221227	Argument	"""An alias (%s) was defined for method %s(), but this method does not exist"""		221164	1					
ANR	221228	PrimaryExpression	"""An alias (%s) was defined for method %s(), but this method does not exist"""		221164	0					
ANR	221229	Argument	ZSTR_VAL ( cur_alias -> alias )		221164	2					
ANR	221230	CallExpression	ZSTR_VAL ( cur_alias -> alias )		221164	0					
ANR	221231	Callee	ZSTR_VAL		221164	0					
ANR	221232	Identifier	ZSTR_VAL		221164	0					
ANR	221233	ArgumentList	cur_alias -> alias		221164	1					
ANR	221234	Argument	cur_alias -> alias		221164	0					
ANR	221235	PtrMemberAccess	cur_alias -> alias		221164	0					
ANR	221236	Identifier	cur_alias		221164	0					
ANR	221237	Identifier	alias		221164	1					
ANR	221238	Argument	ZSTR_VAL ( cur_alias -> trait_method -> method_name )		221164	3					
ANR	221239	CallExpression	ZSTR_VAL ( cur_alias -> trait_method -> method_name )		221164	0					
ANR	221240	Callee	ZSTR_VAL		221164	0					
ANR	221241	Identifier	ZSTR_VAL		221164	0					
ANR	221242	ArgumentList	cur_alias -> trait_method -> method_name		221164	1					
ANR	221243	Argument	cur_alias -> trait_method -> method_name		221164	0					
ANR	221244	PtrMemberAccess	cur_alias -> trait_method -> method_name		221164	0					
ANR	221245	PtrMemberAccess	cur_alias -> trait_method		221164	0					
ANR	221246	Identifier	cur_alias		221164	0					
ANR	221247	Identifier	trait_method		221164	1					
ANR	221248	Identifier	method_name		221164	1					
ANR	221249	ElseStatement	else		221164	0					
ANR	221250	CompoundStatement		18:11:642:642	221164	0					
ANR	221251	ExpressionStatement	lc_method_name = zend_string_tolower ( cur_alias -> trait_method -> method_name )	1576:5:57994:58075	221164	0	True				
ANR	221252	AssignmentExpression	lc_method_name = zend_string_tolower ( cur_alias -> trait_method -> method_name )		221164	0		=			
ANR	221253	Identifier	lc_method_name		221164	0					
ANR	221254	CallExpression	zend_string_tolower ( cur_alias -> trait_method -> method_name )		221164	1					
ANR	221255	Callee	zend_string_tolower		221164	0					
ANR	221256	Identifier	zend_string_tolower		221164	0					
ANR	221257	ArgumentList	cur_alias -> trait_method -> method_name		221164	1					
ANR	221258	Argument	cur_alias -> trait_method -> method_name		221164	0					
ANR	221259	PtrMemberAccess	cur_alias -> trait_method -> method_name		221164	0					
ANR	221260	PtrMemberAccess	cur_alias -> trait_method		221164	0					
ANR	221261	Identifier	cur_alias		221164	0					
ANR	221262	Identifier	trait_method		221164	1					
ANR	221263	Identifier	method_name		221164	1					
ANR	221264	IfStatement	"if ( zend_hash_exists ( & ce -> function_table , lc_method_name ) )"		221164	1					
ANR	221265	Condition	"zend_hash_exists ( & ce -> function_table , lc_method_name )"	1578:9:58086:58149	221164	0	True				
ANR	221266	CallExpression	"zend_hash_exists ( & ce -> function_table , lc_method_name )"		221164	0					
ANR	221267	Callee	zend_hash_exists		221164	0					
ANR	221268	Identifier	zend_hash_exists		221164	0					
ANR	221269	ArgumentList	& ce -> function_table		221164	1					
ANR	221270	Argument	& ce -> function_table		221164	0					
ANR	221271	UnaryOperationExpression	& ce -> function_table		221164	0					
ANR	221272	UnaryOperator	&		221164	0					
ANR	221273	PtrMemberAccess	ce -> function_table		221164	1					
ANR	221274	Identifier	ce		221164	0					
ANR	221275	Identifier	function_table		221164	1					
ANR	221276	Argument	lc_method_name		221164	1					
ANR	221277	Identifier	lc_method_name		221164	0					
ANR	221278	CompoundStatement		30:28:1154:1154	221164	1					
ANR	221279	ExpressionStatement	zend_string_release ( lc_method_name )	1580:6:58160:58195	221164	0	True				
ANR	221280	CallExpression	zend_string_release ( lc_method_name )		221164	0					
ANR	221281	Callee	zend_string_release		221164	0					
ANR	221282	Identifier	zend_string_release		221164	0					
ANR	221283	ArgumentList	lc_method_name		221164	1					
ANR	221284	Argument	lc_method_name		221164	0					
ANR	221285	Identifier	lc_method_name		221164	0					
ANR	221286	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""The modifiers for the trait alias %s() need to be changed in the same statement in which the alias is defined. Error"" , ZSTR_VAL ( cur_alias -> trait_method -> method_name ) )"	1581:6:58203:58429	221164	1	True				
ANR	221287	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""The modifiers for the trait alias %s() need to be changed in the same statement in which the alias is defined. Error"" , ZSTR_VAL ( cur_alias -> trait_method -> method_name ) )"		221164	0					
ANR	221288	Callee	zend_error_noreturn		221164	0					
ANR	221289	Identifier	zend_error_noreturn		221164	0					
ANR	221290	ArgumentList	E_COMPILE_ERROR		221164	1					
ANR	221291	Argument	E_COMPILE_ERROR		221164	0					
ANR	221292	Identifier	E_COMPILE_ERROR		221164	0					
ANR	221293	Argument	"""The modifiers for the trait alias %s() need to be changed in the same statement in which the alias is defined. Error"""		221164	1					
ANR	221294	PrimaryExpression	"""The modifiers for the trait alias %s() need to be changed in the same statement in which the alias is defined. Error"""		221164	0					
ANR	221295	Argument	ZSTR_VAL ( cur_alias -> trait_method -> method_name )		221164	2					
ANR	221296	CallExpression	ZSTR_VAL ( cur_alias -> trait_method -> method_name )		221164	0					
ANR	221297	Callee	ZSTR_VAL		221164	0					
ANR	221298	Identifier	ZSTR_VAL		221164	0					
ANR	221299	ArgumentList	cur_alias -> trait_method -> method_name		221164	1					
ANR	221300	Argument	cur_alias -> trait_method -> method_name		221164	0					
ANR	221301	PtrMemberAccess	cur_alias -> trait_method -> method_name		221164	0					
ANR	221302	PtrMemberAccess	cur_alias -> trait_method		221164	0					
ANR	221303	Identifier	cur_alias		221164	0					
ANR	221304	Identifier	trait_method		221164	1					
ANR	221305	Identifier	method_name		221164	1					
ANR	221306	ElseStatement	else		221164	0					
ANR	221307	CompoundStatement		35:12:1445:1445	221164	0					
ANR	221308	ExpressionStatement	zend_string_release ( lc_method_name )	1585:6:58451:58486	221164	0	True				
ANR	221309	CallExpression	zend_string_release ( lc_method_name )		221164	0					
ANR	221310	Callee	zend_string_release		221164	0					
ANR	221311	Identifier	zend_string_release		221164	0					
ANR	221312	ArgumentList	lc_method_name		221164	1					
ANR	221313	Argument	lc_method_name		221164	0					
ANR	221314	Identifier	lc_method_name		221164	0					
ANR	221315	ExpressionStatement	"zend_error_noreturn ( E_COMPILE_ERROR , ""The modifiers of the trait method %s() are changed, but this method does not exist. Error"" , ZSTR_VAL ( cur_alias -> trait_method -> method_name ) )"	1586:6:58494:58693	221164	1	True				
ANR	221316	CallExpression	"zend_error_noreturn ( E_COMPILE_ERROR , ""The modifiers of the trait method %s() are changed, but this method does not exist. Error"" , ZSTR_VAL ( cur_alias -> trait_method -> method_name ) )"		221164	0					
ANR	221317	Callee	zend_error_noreturn		221164	0					
ANR	221318	Identifier	zend_error_noreturn		221164	0					
ANR	221319	ArgumentList	E_COMPILE_ERROR		221164	1					
ANR	221320	Argument	E_COMPILE_ERROR		221164	0					
ANR	221321	Identifier	E_COMPILE_ERROR		221164	0					
ANR	221322	Argument	"""The modifiers of the trait method %s() are changed, but this method does not exist. Error"""		221164	1					
ANR	221323	PrimaryExpression	"""The modifiers of the trait method %s() are changed, but this method does not exist. Error"""		221164	0					
ANR	221324	Argument	ZSTR_VAL ( cur_alias -> trait_method -> method_name )		221164	2					
ANR	221325	CallExpression	ZSTR_VAL ( cur_alias -> trait_method -> method_name )		221164	0					
ANR	221326	Callee	ZSTR_VAL		221164	0					
ANR	221327	Identifier	ZSTR_VAL		221164	0					
ANR	221328	ArgumentList	cur_alias -> trait_method -> method_name		221164	1					
ANR	221329	Argument	cur_alias -> trait_method -> method_name		221164	0					
ANR	221330	PtrMemberAccess	cur_alias -> trait_method -> method_name		221164	0					
ANR	221331	PtrMemberAccess	cur_alias -> trait_method		221164	0					
ANR	221332	Identifier	cur_alias		221164	0					
ANR	221333	Identifier	trait_method		221164	1					
ANR	221334	Identifier	method_name		221164	1					
ANR	221335	ExpressionStatement	i ++	1593:3:58717:58720	221164	2	True				
ANR	221336	PostIncDecOperationExpression	i ++		221164	0					
ANR	221337	Identifier	i		221164	0					
ANR	221338	IncDec	++		221164	1					
ANR	221339	ReturnType	static void		221164	1					
ANR	221340	Identifier	zend_do_check_for_inconsistent_traits_aliasing		221164	2					
ANR	221341	ParameterList	zend_class_entry * ce		221164	3					
ANR	221342	Parameter	zend_class_entry * ce	1549:59:56965:56984	221164	0	True				
ANR	221343	ParameterType	zend_class_entry *		221164	0					
ANR	221344	Identifier	ce		221164	1					
ANR	221345	CFGEntryNode	ENTRY		221164		True				
ANR	221346	CFGExitNode	EXIT		221164		True				
ANR	221347	Symbol	ce		221164						
ANR	221348	Symbol	ce -> trait_aliases		221164						
ANR	221349	Symbol	lc_method_name		221164						
ANR	221350	Symbol	E_COMPILE_ERROR		221164						
ANR	221351	Symbol	i		221164						
ANR	221352	Symbol	zend_hash_exists		221164						
ANR	221353	Symbol	& ce -> function_table		221164						
ANR	221354	Symbol	* ce		221164						
ANR	221355	Symbol	* * ce		221164						
ANR	221356	Symbol	zend_string_tolower		221164						
ANR	221357	Symbol	ZSTR_VAL		221164						
ANR	221358	Symbol	* * cur_alias		221164						
ANR	221359	Symbol	* i		221164						
ANR	221360	Symbol	* ce -> trait_aliases		221164						
ANR	221361	Symbol	cur_alias -> trait_method -> ce		221164						
ANR	221362	Symbol	cur_alias -> alias		221164						
ANR	221363	Symbol	* cur_alias		221164						
ANR	221364	Symbol	cur_alias -> trait_method -> method_name		221164						
ANR	221365	Symbol	cur_alias		221164						
ANR	221366	Symbol	cur_alias -> trait_method		221164						
ANR	221367	Symbol	* cur_alias -> trait_method		221164						
ANR	221368	Function	zend_do_bind_traits	1599:0:58742:59710							
ANR	221369	FunctionDef	zend_do_bind_traits (zend_class_entry * ce)		221368	0					
ANR	221370	CompoundStatement		1600:0:58808:59710	221368	0					
ANR	221371	IfStatement	if ( ce -> num_traits <= 0 )		221368	0					
ANR	221372	Condition	ce -> num_traits <= 0	1602:5:58816:58834	221368	0	True				
ANR	221373	RelationalExpression	ce -> num_traits <= 0		221368	0		<=			
ANR	221374	PtrMemberAccess	ce -> num_traits		221368	0					
ANR	221375	Identifier	ce		221368	0					
ANR	221376	Identifier	num_traits		221368	1					
ANR	221377	PrimaryExpression	0		221368	1					
ANR	221378	CompoundStatement		3:26:28:28	221368	1					
ANR	221379	ReturnStatement	return ;	1603:2:58841:58847	221368	0	True				
ANR	221380	ExpressionStatement	zend_traits_init_trait_structures ( ce )	1607:1:58910:58947	221368	1	True				
ANR	221381	CallExpression	zend_traits_init_trait_structures ( ce )		221368	0					
ANR	221382	Callee	zend_traits_init_trait_structures		221368	0					
ANR	221383	Identifier	zend_traits_init_trait_structures		221368	0					
ANR	221384	ArgumentList	ce		221368	1					
ANR	221385	Argument	ce		221368	0					
ANR	221386	Identifier	ce		221368	0					
ANR	221387	ExpressionStatement	zend_do_traits_method_binding ( ce )	1610:1:59018:59051	221368	2	True				
ANR	221388	CallExpression	zend_do_traits_method_binding ( ce )		221368	0					
ANR	221389	Callee	zend_do_traits_method_binding		221368	0					
ANR	221390	Identifier	zend_do_traits_method_binding		221368	0					
ANR	221391	ArgumentList	ce		221368	1					
ANR	221392	Argument	ce		221368	0					
ANR	221393	Identifier	ce		221368	0					
ANR	221394	ExpressionStatement	zend_do_check_for_inconsistent_traits_aliasing ( ce )	1613:1:59119:59169	221368	3	True				
ANR	221395	CallExpression	zend_do_check_for_inconsistent_traits_aliasing ( ce )		221368	0					
ANR	221396	Callee	zend_do_check_for_inconsistent_traits_aliasing		221368	0					
ANR	221397	Identifier	zend_do_check_for_inconsistent_traits_aliasing		221368	0					
ANR	221398	ArgumentList	ce		221368	1					
ANR	221399	Argument	ce		221368	0					
ANR	221400	Identifier	ce		221368	0					
ANR	221401	ExpressionStatement	zend_do_traits_property_binding ( ce )	1616:1:59263:59298	221368	4	True				
ANR	221402	CallExpression	zend_do_traits_property_binding ( ce )		221368	0					
ANR	221403	Callee	zend_do_traits_property_binding		221368	0					
ANR	221404	Identifier	zend_do_traits_property_binding		221368	0					
ANR	221405	ArgumentList	ce		221368	1					
ANR	221406	Argument	ce		221368	0					
ANR	221407	Identifier	ce		221368	0					
ANR	221408	ExpressionStatement	zend_verify_abstract_class ( ce )	1619:1:59376:59406	221368	5	True				
ANR	221409	CallExpression	zend_verify_abstract_class ( ce )		221368	0					
ANR	221410	Callee	zend_verify_abstract_class		221368	0					
ANR	221411	Identifier	zend_verify_abstract_class		221368	0					
ANR	221412	ArgumentList	ce		221368	1					
ANR	221413	Argument	ce		221368	0					
ANR	221414	Identifier	ce		221368	0					
ANR	221415	ExpressionStatement	zend_check_deprecated_constructor ( ce )	1622:1:59458:59495	221368	6	True				
ANR	221416	CallExpression	zend_check_deprecated_constructor ( ce )		221368	0					
ANR	221417	Callee	zend_check_deprecated_constructor		221368	0					
ANR	221418	Identifier	zend_check_deprecated_constructor		221368	0					
ANR	221419	ArgumentList	ce		221368	1					
ANR	221420	Argument	ce		221368	0					
ANR	221421	Identifier	ce		221368	0					
ANR	221422	IfStatement	if ( ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS )		221368	7					
ANR	221423	Condition	ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS	1625:5:59604:59650	221368	0	True				
ANR	221424	BitAndExpression	ce -> ce_flags & ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		221368	0		&			
ANR	221425	PtrMemberAccess	ce -> ce_flags		221368	0					
ANR	221426	Identifier	ce		221368	0					
ANR	221427	Identifier	ce_flags		221368	1					
ANR	221428	Identifier	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		221368	1					
ANR	221429	CompoundStatement		26:54:844:844	221368	1					
ANR	221430	ExpressionStatement	ce -> ce_flags -= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS	1626:2:59657:59705	221368	0	True				
ANR	221431	AssignmentExpression	ce -> ce_flags -= ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		221368	0		-=			
ANR	221432	PtrMemberAccess	ce -> ce_flags		221368	0					
ANR	221433	Identifier	ce		221368	0					
ANR	221434	Identifier	ce_flags		221368	1					
ANR	221435	Identifier	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		221368	1					
ANR	221436	ReturnType	ZEND_API void		221368	1					
ANR	221437	Identifier	zend_do_bind_traits		221368	2					
ANR	221438	ParameterList	zend_class_entry * ce		221368	3					
ANR	221439	Parameter	zend_class_entry * ce	1599:34:58776:58795	221368	0	True				
ANR	221440	ParameterType	zend_class_entry *		221368	0					
ANR	221441	Identifier	ce		221368	1					
ANR	221442	CFGEntryNode	ENTRY		221368		True				
ANR	221443	CFGExitNode	EXIT		221368		True				
ANR	221444	Symbol	ce -> ce_flags		221368						
ANR	221445	Symbol	ZEND_ACC_IMPLICIT_ABSTRACT_CLASS		221368						
ANR	221446	Symbol	ce		221368						
ANR	221447	Symbol	* ce		221368						
ANR	221448	Symbol	ce -> num_traits		221368						
ANR	221449	Function	zend_has_deprecated_constructor	1632:0:59724:60086							
ANR	221450	FunctionDef	zend_has_deprecated_constructor (const zend_class_entry * ce)		221449	0					
ANR	221451	CompoundStatement		1633:0:59811:60086	221449	0					
ANR	221452	IdentifierDeclStatement	const zend_string * constructor_name ;	1634:1:59814:59849	221449	0	True				
ANR	221453	IdentifierDecl	* constructor_name		221449	0					
ANR	221454	IdentifierDeclType	const zend_string *		221449	0					
ANR	221455	Identifier	constructor_name		221449	1					
ANR	221456	IfStatement	if ( ! ce -> constructor )		221449	1					
ANR	221457	Condition	! ce -> constructor	1635:5:59856:59871	221449	0	True				
ANR	221458	UnaryOperationExpression	! ce -> constructor		221449	0					
ANR	221459	UnaryOperator	!		221449	0					
ANR	221460	PtrMemberAccess	ce -> constructor		221449	1					
ANR	221461	Identifier	ce		221449	0					
ANR	221462	Identifier	constructor		221449	1					
ANR	221463	CompoundStatement		3:23:62:62	221449	1					
ANR	221464	ReturnStatement	return 0 ;	1636:2:59878:59886	221449	0	True				
ANR	221465	PrimaryExpression	0		221449	0					
ANR	221466	ExpressionStatement	constructor_name = ce -> constructor -> common . function_name	1638:1:59892:59948	221449	2	True				
ANR	221467	AssignmentExpression	constructor_name = ce -> constructor -> common . function_name		221449	0		=			
ANR	221468	Identifier	constructor_name		221449	0					
ANR	221469	MemberAccess	ce -> constructor -> common . function_name		221449	1					
ANR	221470	PtrMemberAccess	ce -> constructor -> common		221449	0					
ANR	221471	PtrMemberAccess	ce -> constructor		221449	0					
ANR	221472	Identifier	ce		221449	0					
ANR	221473	Identifier	constructor		221449	1					
ANR	221474	Identifier	common		221449	1					
ANR	221475	Identifier	function_name		221449	1					
ANR	221476	ReturnStatement	"return ! zend_binary_strcasecmp ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , ZSTR_VAL ( constructor_name ) , ZSTR_LEN ( constructor_name ) ) ;"	1639:1:59951:60084	221449	3	True				
ANR	221477	UnaryOperationExpression	"! zend_binary_strcasecmp ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , ZSTR_VAL ( constructor_name ) , ZSTR_LEN ( constructor_name ) )"		221449	0					
ANR	221478	UnaryOperator	!		221449	0					
ANR	221479	CallExpression	"zend_binary_strcasecmp ( ZSTR_VAL ( ce -> name ) , ZSTR_LEN ( ce -> name ) , ZSTR_VAL ( constructor_name ) , ZSTR_LEN ( constructor_name ) )"		221449	1					
ANR	221480	Callee	zend_binary_strcasecmp		221449	0					
ANR	221481	Identifier	zend_binary_strcasecmp		221449	0					
ANR	221482	ArgumentList	ZSTR_VAL ( ce -> name )		221449	1					
ANR	221483	Argument	ZSTR_VAL ( ce -> name )		221449	0					
ANR	221484	CallExpression	ZSTR_VAL ( ce -> name )		221449	0					
ANR	221485	Callee	ZSTR_VAL		221449	0					
ANR	221486	Identifier	ZSTR_VAL		221449	0					
ANR	221487	ArgumentList	ce -> name		221449	1					
ANR	221488	Argument	ce -> name		221449	0					
ANR	221489	PtrMemberAccess	ce -> name		221449	0					
ANR	221490	Identifier	ce		221449	0					
ANR	221491	Identifier	name		221449	1					
ANR	221492	Argument	ZSTR_LEN ( ce -> name )		221449	1					
ANR	221493	CallExpression	ZSTR_LEN ( ce -> name )		221449	0					
ANR	221494	Callee	ZSTR_LEN		221449	0					
ANR	221495	Identifier	ZSTR_LEN		221449	0					
ANR	221496	ArgumentList	ce -> name		221449	1					
ANR	221497	Argument	ce -> name		221449	0					
ANR	221498	PtrMemberAccess	ce -> name		221449	0					
ANR	221499	Identifier	ce		221449	0					
ANR	221500	Identifier	name		221449	1					
ANR	221501	Argument	ZSTR_VAL ( constructor_name )		221449	2					
ANR	221502	CallExpression	ZSTR_VAL ( constructor_name )		221449	0					
ANR	221503	Callee	ZSTR_VAL		221449	0					
ANR	221504	Identifier	ZSTR_VAL		221449	0					
ANR	221505	ArgumentList	constructor_name		221449	1					
ANR	221506	Argument	constructor_name		221449	0					
ANR	221507	Identifier	constructor_name		221449	0					
ANR	221508	Argument	ZSTR_LEN ( constructor_name )		221449	3					
ANR	221509	CallExpression	ZSTR_LEN ( constructor_name )		221449	0					
ANR	221510	Callee	ZSTR_LEN		221449	0					
ANR	221511	Identifier	ZSTR_LEN		221449	0					
ANR	221512	ArgumentList	constructor_name		221449	1					
ANR	221513	Argument	constructor_name		221449	0					
ANR	221514	Identifier	constructor_name		221449	0					
ANR	221515	ReturnType	static zend_bool		221449	1					
ANR	221516	Identifier	zend_has_deprecated_constructor		221449	2					
ANR	221517	ParameterList	const zend_class_entry * ce		221449	3					
ANR	221518	Parameter	const zend_class_entry * ce	1632:49:59773:59798	221449	0	True				
ANR	221519	ParameterType	const zend_class_entry *		221449	0					
ANR	221520	Identifier	ce		221449	1					
ANR	221521	CFGEntryNode	ENTRY		221449		True				
ANR	221522	CFGExitNode	EXIT		221449		True				
ANR	221523	Symbol	ce		221449						
ANR	221524	Symbol	ce -> constructor -> common . function_name		221449						
ANR	221525	Symbol	ce -> constructor		221449						
ANR	221526	Symbol	constructor_name		221449						
ANR	221527	Symbol	zend_binary_strcasecmp		221449						
ANR	221528	Symbol	ZSTR_LEN		221449						
ANR	221529	Symbol	* ce -> constructor		221449						
ANR	221530	Symbol	* ce		221449						
ANR	221531	Symbol	ce -> name		221449						
ANR	221532	Symbol	ce -> constructor -> common		221449						
ANR	221533	Symbol	* * ce		221449						
ANR	221534	Symbol	ZSTR_VAL		221449						
ANR	221535	Function	zend_check_deprecated_constructor	1646:0:60099:60403							
ANR	221536	FunctionDef	zend_check_deprecated_constructor (const zend_class_entry * ce)		221535	0					
ANR	221537	CompoundStatement		1647:0:60176:60403	221535	0					
ANR	221538	IfStatement	if ( zend_has_deprecated_constructor ( ce ) )		221535	0					
ANR	221539	Condition	zend_has_deprecated_constructor ( ce )	1648:5:60183:60217	221535	0	True				
ANR	221540	CallExpression	zend_has_deprecated_constructor ( ce )		221535	0					
ANR	221541	Callee	zend_has_deprecated_constructor		221535	0					
ANR	221542	Identifier	zend_has_deprecated_constructor		221535	0					
ANR	221543	ArgumentList	ce		221535	1					
ANR	221544	Argument	ce		221535	0					
ANR	221545	Identifier	ce		221535	0					
ANR	221546	CompoundStatement		2:42:43:43	221535	1					
ANR	221547	ExpressionStatement	"zend_error ( E_DEPRECATED , ""Methods with the same name as their class will not be constructors in a future version of PHP; %s has a deprecated constructor"" , ZSTR_VAL ( ce -> name ) )"	1649:2:60224:60398	221535	0	True				
ANR	221548	CallExpression	"zend_error ( E_DEPRECATED , ""Methods with the same name as their class will not be constructors in a future version of PHP; %s has a deprecated constructor"" , ZSTR_VAL ( ce -> name ) )"		221535	0					
ANR	221549	Callee	zend_error		221535	0					
ANR	221550	Identifier	zend_error		221535	0					
ANR	221551	ArgumentList	E_DEPRECATED		221535	1					
ANR	221552	Argument	E_DEPRECATED		221535	0					
ANR	221553	Identifier	E_DEPRECATED		221535	0					
ANR	221554	Argument	"""Methods with the same name as their class will not be constructors in a future version of PHP; %s has a deprecated constructor"""		221535	1					
ANR	221555	PrimaryExpression	"""Methods with the same name as their class will not be constructors in a future version of PHP; %s has a deprecated constructor"""		221535	0					
ANR	221556	Argument	ZSTR_VAL ( ce -> name )		221535	2					
ANR	221557	CallExpression	ZSTR_VAL ( ce -> name )		221535	0					
ANR	221558	Callee	ZSTR_VAL		221535	0					
ANR	221559	Identifier	ZSTR_VAL		221535	0					
ANR	221560	ArgumentList	ce -> name		221535	1					
ANR	221561	Argument	ce -> name		221535	0					
ANR	221562	PtrMemberAccess	ce -> name		221535	0					
ANR	221563	Identifier	ce		221535	0					
ANR	221564	Identifier	name		221535	1					
ANR	221565	ReturnType	void		221535	1					
ANR	221566	Identifier	zend_check_deprecated_constructor		221535	2					
ANR	221567	ParameterList	const zend_class_entry * ce		221535	3					
ANR	221568	Parameter	const zend_class_entry * ce	1646:39:60138:60163	221535	0	True				
ANR	221569	ParameterType	const zend_class_entry *		221535	0					
ANR	221570	Identifier	ce		221535	1					
ANR	221571	CFGEntryNode	ENTRY		221535		True				
ANR	221572	CFGExitNode	EXIT		221535		True				
ANR	221573	Symbol	ce		221535						
ANR	221574	Symbol	zend_has_deprecated_constructor		221535						
ANR	221575	Symbol	E_DEPRECATED		221535						
ANR	221576	Symbol	ce -> name		221535						
ANR	221577	Symbol	* ce		221535						
ANR	221578	Symbol	ZSTR_VAL		221535						
